using System;
using System.Collections;
using System.Collections.Generic;
using System.Diagnostics;
using System.IO;
using System.Reflection;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using System.Runtime.Serialization;
using System.Threading;
using System.Threading.Tasks;
using BezierSolution;
using Bhaptics.Tact.Unity;
using CrisisVRigade2;
using DG.Tweening;
using DG.Tweening.Core;
using DG.Tweening.Plugins.Core.PathCore;
using DG.Tweening.Plugins.Options;
using DigitalOpus.MB.Core;
using ExitGames.Client.Photon;
using FSG.MeshAnimator;
using Il2CppDummyDll;
using Knife.RealBlood.Decals;
using OWO;
using Photon.Chat;
using Photon.Pun;
using Photon.Realtime;
using RayFire;
using RayFire.DotNet;
using RootMotion.FinalIK;
using SevenZip.Compression.LZ;
using SevenZip.Compression.RangeCoder;
using Sumalab.Util;
using SumalabVR;
using SumalabVR.Audio;
using SumalabVR.Utils;
using SumalabVR.Weapons;
using TMPro;
using UnityEngine;
using UnityEngine.AI;
using UnityEngine.Audio;
using UnityEngine.EventSystems;
using UnityEngine.Events;
using UnityEngine.Networking;
using UnityEngine.Playables;
using UnityEngine.Rendering;
using UnityEngine.SceneManagement;
using UnityEngine.Scripting;
using UnityEngine.Serialization;
using UnityEngine.Timeline;
using UnityEngine.UI;
using UnityEngine.Video;
using VLB;
using VRigade.online;

[assembly: AssemblyVersion("0.0.0.0")]
[Token(Token = "0x2000002")]
public class Viewer : MonoBehaviour
{
	[Token(Token = "0x4000001")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private GameObject[] objects;

	[Token(Token = "0x4000002")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int activeObjectIdx;

	[Token(Token = "0x4000003")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float cameraDistance;

	[Token(Token = "0x4000004")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private GameObject activeObject;

	[Token(Token = "0x4000005")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Quaternion originalRotation;

	[Token(Token = "0x4000006")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float turnAnglePerSecond;

	[Token(Token = "0x4000007")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private float size;

	[Token(Token = "0x4000008")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private int totalVertexCount;

	[Token(Token = "0x4000009")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private int totalTriangles;

	[Token(Token = "0x400000A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private int lodCount;

	[Token(Token = "0x400000B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private int meshCount;

	[Token(Token = "0x400000C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Vector3 cameraOffset;

	[Token(Token = "0x6000001")]
	[Address(RVA = "0xCBE26C", Offset = "0xCBE26C", VA = "0xCBE26C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000002")]
	[Address(RVA = "0xCBE680", Offset = "0xCBE680", VA = "0xCBE680")]
	private void Update()
	{
	}

	[Token(Token = "0x6000003")]
	[Address(RVA = "0xCBE91C", Offset = "0xCBE91C", VA = "0xCBE91C")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x6000004")]
	[Address(RVA = "0xCBE3D0", Offset = "0xCBE3D0", VA = "0xCBE3D0")]
	private void SetActiveObject(GameObject go)
	{
	}

	[Token(Token = "0x6000005")]
	[Address(RVA = "0xCBEED4", Offset = "0xCBEED4", VA = "0xCBEED4")]
	private void UpdateMeshInfo()
	{
	}

	[Token(Token = "0x6000006")]
	[Address(RVA = "0xCBF0C0", Offset = "0xCBF0C0", VA = "0xCBF0C0")]
	public Viewer()
	{
	}
}
[Token(Token = "0x2000004")]
[ExecuteInEditMode]
public class Car : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x2000005")]
	private class CarTexture
	{
		[Token(Token = "0x400002F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Texture albedoTexture;

		[Token(Token = "0x6000015")]
		[Address(RVA = "0xCC13AC", Offset = "0xCC13AC", VA = "0xCC13AC")]
		public CarTexture()
		{
		}
	}

	[Token(Token = "0x2000006")]
	public enum CarColorType
	{
		[Token(Token = "0x4000031")]
		RandomlyAssigned,
		[Token(Token = "0x4000032")]
		AssignedManually
	}

	[Token(Token = "0x2000007")]
	public enum CarNumberType
	{
		[Token(Token = "0x4000034")]
		None,
		[Token(Token = "0x4000035")]
		US,
		[Token(Token = "0x4000036")]
		EU,
		[Token(Token = "0x4000037")]
		CN
	}

	[Serializable]
	[Token(Token = "0x2000008")]
	private class CarNumber
	{
		[Token(Token = "0x4000038")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public CarNumberType carNumberType;

		[Token(Token = "0x4000039")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject numberObject;

		[Token(Token = "0x6000016")]
		[Address(RVA = "0xCC13B4", Offset = "0xCC13B4", VA = "0xCC13B4")]
		public CarNumber()
		{
		}
	}

	[Token(Token = "0x2000009")]
	public enum CarColor
	{
		[Token(Token = "0x400003B")]
		Color_a,
		[Token(Token = "0x400003C")]
		Color_b,
		[Token(Token = "0x400003D")]
		Color_c,
		[Token(Token = "0x400003E")]
		Color_d,
		[Token(Token = "0x400003F")]
		Color_e
	}

	[Token(Token = "0x200000A")]
	public enum WheelRotateMode
	{
		[Token(Token = "0x4000041")]
		NoRotate,
		[Token(Token = "0x4000042")]
		AutoDetectMovement,
		[Token(Token = "0x4000043")]
		ConstantSpeed
	}

	[Token(Token = "0x200000B")]
	public enum ChangeWheelMesh
	{
		[Token(Token = "0x4000045")]
		DontActivate,
		[Token(Token = "0x4000046")]
		SpeedMoreThen
	}

	[Serializable]
	[Token(Token = "0x200000C")]
	private class CarWheel
	{
		[Token(Token = "0x4000047")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Transform wheelSocket;

		[Token(Token = "0x4000048")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject wheelObject;

		[Token(Token = "0x4000049")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject wheelBluredObject;

		[Token(Token = "0x400004A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[HideInInspector]
		public Material wheelBluredMaterial;

		[Token(Token = "0x400004B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[HideInInspector]
		public float startWheelAngle;

		[Token(Token = "0x400004C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public bool FL;

		[Token(Token = "0x400004D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x35")]
		public bool FR;

		[Token(Token = "0x400004E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x36")]
		public bool RL;

		[Token(Token = "0x400004F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x37")]
		public bool RR;

		[Token(Token = "0x6000017")]
		[Address(RVA = "0xCC13BC", Offset = "0xCC13BC", VA = "0xCC13BC")]
		public CarWheel()
		{
		}
	}

	[Token(Token = "0x4000010")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private string carBodyMaterialName;

	[Token(Token = "0x4000011")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private string carLightMaterialName;

	[Token(Token = "0x4000012")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private List<CarTexture> carMatList;

	[Token(Token = "0x4000013")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private CarColorType carColorType;

	[Token(Token = "0x4000014")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[SerializeField]
	private CarNumberType selectedCarNumberType;

	[Token(Token = "0x4000015")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private List<CarNumber> carNumbersObjects;

	[Token(Token = "0x4000016")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private CarColor carColorSelected;

	[Token(Token = "0x4000017")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[SerializeField]
	private WheelRotateMode wheelRotateMode;

	[Token(Token = "0x4000018")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private float wheelConstantRotateSpeed;

	[Token(Token = "0x4000019")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[SerializeField]
	private ChangeWheelMesh changeWheelMeshMode;

	[Token(Token = "0x400001A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private float changeMaterialRotateSpeed;

	[Token(Token = "0x400001B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	[SerializeField]
	private float wheelSpeedTokmH;

	[Token(Token = "0x400001C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private List<CarWheel> wheelObject;

	[Token(Token = "0x400001D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private bool wheelsBlurred;

	[Token(Token = "0x400001E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	[SerializeField]
	private float maxWheelRotateAngle;

	[Token(Token = "0x400001F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private float wheelRotateValue;

	[Token(Token = "0x4000020")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	[SerializeField]
	private bool enableLight;

	[Token(Token = "0x4000021")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private List<Light> carLights;

	[Token(Token = "0x4000022")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private float carLightRange;

	[Token(Token = "0x4000023")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	[SerializeField]
	private float carLightSpotAngle;

	[Token(Token = "0x4000024")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	private float carLightIntensity;

	[Token(Token = "0x4000025")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	[SerializeField]
	private LightShadows carLightShadowType;

	[Token(Token = "0x4000026")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	private bool enableLightEmission;

	[Token(Token = "0x4000027")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	[SerializeField]
	private float emissionIntensity;

	[Token(Token = "0x4000028")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[SerializeField]
	private float moveSpeed;

	[Token(Token = "0x4000029")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private Vector3 lastPosition;

	[Token(Token = "0x400002A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private float animationTime;

	[Token(Token = "0x400002B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	private bool bloorStared;

	[Token(Token = "0x400002C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA5")]
	private bool bloorEnd;

	[Token(Token = "0x400002D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private MaterialPropertyBlock materialPropertyBody;

	[Token(Token = "0x400002E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private MaterialPropertyBlock materialPropertyLight;

	[Token(Token = "0x17000001")]
	public float WheelRotateValue
	{
		[Token(Token = "0x600000B")]
		[Address(RVA = "0xCBF32C", Offset = "0xCBF32C", VA = "0xCBF32C")]
		set
		{
		}
	}

	[Token(Token = "0x600000C")]
	[Address(RVA = "0xCBF334", Offset = "0xCBF334", VA = "0xCBF334")]
	private void Start()
	{
	}

	[Token(Token = "0x600000D")]
	[Address(RVA = "0xCBF900", Offset = "0xCBF900", VA = "0xCBF900")]
	private void SetColorByIndex(int index = 0)
	{
	}

	[Token(Token = "0x600000E")]
	[Address(RVA = "0xCC0050", Offset = "0xCC0050", VA = "0xCC0050")]
	private void SetCarNumberType()
	{
	}

	[Token(Token = "0x600000F")]
	[Address(RVA = "0xCBFBC8", Offset = "0xCBFBC8", VA = "0xCBFBC8")]
	public void EnableLight()
	{
	}

	[Token(Token = "0x6000010")]
	[Address(RVA = "0xCBFE70", Offset = "0xCBFE70", VA = "0xCBFE70")]
	public void DisableLight()
	{
	}

	[Token(Token = "0x6000011")]
	[Address(RVA = "0xCC020C", Offset = "0xCC020C", VA = "0xCC020C")]
	private void EnableLightEmission()
	{
	}

	[Token(Token = "0x6000012")]
	[Address(RVA = "0xCC0464", Offset = "0xCC0464", VA = "0xCC0464")]
	private void DisableLightEmission()
	{
	}

	[Token(Token = "0x6000013")]
	[Address(RVA = "0xCC06C0", Offset = "0xCC06C0", VA = "0xCC06C0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000014")]
	[Address(RVA = "0xCC11B0", Offset = "0xCC11B0", VA = "0xCC11B0")]
	public Car()
	{
	}
}
[Token(Token = "0x200000D")]
[CreateAssetMenu(fileName = "Data", menuName = "Bhaptics/Create Config", order = 1)]
public class BhapticsConfig : ScriptableObject
{
	[Token(Token = "0x4000050")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Header("Windows Settings")]
	public bool launchPlayerIfNotRunning;

	[Token(Token = "0x4000051")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[Header("Android Settings")]
	public BhapticsAndroidManager AndroidManagerPrefab;

	[Token(Token = "0x4000052")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[Tooltip("If you set it true, you don't need to define permissions and external bHaptics VR Player(beta) on SideQuest will be required.")]
	public bool UseOnlyBackgroundMode;

	[Token(Token = "0x6000018")]
	[Address(RVA = "0xCC13C4", Offset = "0xCC13C4", VA = "0xCC13C4")]
	public BhapticsConfig()
	{
	}
}
[Token(Token = "0x200000E")]
public class BhapticsLogger
{
	[Token(Token = "0x200000F")]
	public enum LogLevel
	{
		[Token(Token = "0x4000055")]
		Debug,
		[Token(Token = "0x4000056")]
		Info,
		[Token(Token = "0x4000057")]
		Error
	}

	[Token(Token = "0x4000053")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static LogLevel level;

	[Token(Token = "0x6000019")]
	[Address(RVA = "0xCC13D4", Offset = "0xCC13D4", VA = "0xCC13D4")]
	public static void LogDebug(string format, params object[] args)
	{
	}

	[Token(Token = "0x600001A")]
	[Address(RVA = "0xCC14AC", Offset = "0xCC14AC", VA = "0xCC14AC")]
	public static void LogInfo(string format, params object[] args)
	{
	}

	[Token(Token = "0x600001B")]
	[Address(RVA = "0xCC1588", Offset = "0xCC1588", VA = "0xCC1588")]
	public static void LogError(string format, params object[] args)
	{
	}

	[Token(Token = "0x600001C")]
	[Address(RVA = "0xCC161C", Offset = "0xCC161C", VA = "0xCC161C")]
	public BhapticsLogger()
	{
	}
}
[Token(Token = "0x2000010")]
public class BhapticsManager
{
	[Token(Token = "0x4000058")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static IHaptic Haptic;

	[Token(Token = "0x4000059")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static bool Init;

	[Token(Token = "0x600001E")]
	[Address(RVA = "0xCC1670", Offset = "0xCC1670", VA = "0xCC1670")]
	public static IHaptic GetHaptic()
	{
		return null;
	}

	[Token(Token = "0x600001F")]
	[Address(RVA = "0xCC191C", Offset = "0xCC191C", VA = "0xCC191C")]
	public static void Initialize()
	{
	}

	[Token(Token = "0x6000020")]
	[Address(RVA = "0xCC1920", Offset = "0xCC1920", VA = "0xCC1920")]
	public static void Dispose()
	{
	}

	[Token(Token = "0x6000021")]
	[Address(RVA = "0xCC1B1C", Offset = "0xCC1B1C", VA = "0xCC1B1C")]
	public BhapticsManager()
	{
	}
}
[Token(Token = "0x2000011")]
public class BhapticsVisualizer : MonoBehaviour
{
	[Token(Token = "0x400005A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private VisualFeedback[] visualFeedback;

	[Token(Token = "0x6000022")]
	[Address(RVA = "0xCC1B24", Offset = "0xCC1B24", VA = "0xCC1B24")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000023")]
	[Address(RVA = "0xCC1B7C", Offset = "0xCC1B7C", VA = "0xCC1B7C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000024")]
	[Address(RVA = "0xCC1C9C", Offset = "0xCC1C9C", VA = "0xCC1C9C")]
	public BhapticsVisualizer()
	{
	}
}
[Token(Token = "0x2000012")]
public class Bhaptics_Setup : MonoBehaviour
{
	[Token(Token = "0x400005B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	public BhapticsConfig Config;

	[Token(Token = "0x400005C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Bhaptics_Setup instance;

	[Token(Token = "0x6000025")]
	[Address(RVA = "0xCC1CA4", Offset = "0xCC1CA4", VA = "0xCC1CA4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000026")]
	[Address(RVA = "0xCC2070", Offset = "0xCC2070", VA = "0xCC2070")]
	private void OnApplicationQuit()
	{
	}

	[Token(Token = "0x6000027")]
	[Address(RVA = "0xCC1DA8", Offset = "0xCC1DA8", VA = "0xCC1DA8")]
	private void Initialize()
	{
	}

	[Token(Token = "0x6000028")]
	[Address(RVA = "0xCC2074", Offset = "0xCC2074", VA = "0xCC2074")]
	public Bhaptics_Setup()
	{
	}
}
[Token(Token = "0x2000013")]
public class CensoredGameObject : MonoBehaviour
{
	[Token(Token = "0x400005D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<GameObject> censored;

	[Token(Token = "0x400005E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<GameObject> uncensored;

	[Token(Token = "0x6000029")]
	[Address(RVA = "0xCC207C", Offset = "0xCC207C", VA = "0xCC207C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600002A")]
	[Address(RVA = "0xCC2298", Offset = "0xCC2298", VA = "0xCC2298")]
	public CensoredGameObject()
	{
	}
}
[Token(Token = "0x2000014")]
public class ChangeNameButton : MonoBehaviour
{
	[Token(Token = "0x400005F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public UIButton changeNickNameButton;

	[Token(Token = "0x4000060")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private OnlineGameManager onlineGameManager;

	[Token(Token = "0x4000061")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private GameObject editModel;

	[Token(Token = "0x600002B")]
	[Address(RVA = "0xCC22A0", Offset = "0xCC22A0", VA = "0xCC22A0")]
	private void Start()
	{
	}

	[Token(Token = "0x600002C")]
	[Address(RVA = "0xCC2600", Offset = "0xCC2600", VA = "0xCC2600")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600002D")]
	[Address(RVA = "0xCC26E0", Offset = "0xCC26E0", VA = "0xCC26E0")]
	public void changeNickName()
	{
	}

	[Token(Token = "0x600002E")]
	[Address(RVA = "0xCC275C", Offset = "0xCC275C", VA = "0xCC275C")]
	private void OnHoverEnter()
	{
	}

	[Token(Token = "0x600002F")]
	[Address(RVA = "0xCC27E0", Offset = "0xCC27E0", VA = "0xCC27E0")]
	private void OnHoverExit()
	{
	}

	[Token(Token = "0x6000030")]
	[Address(RVA = "0xCC2864", Offset = "0xCC2864", VA = "0xCC2864")]
	public ChangeNameButton()
	{
	}
}
[Token(Token = "0x2000015")]
public class ChildrenFader : MonoBehaviour
{
	[Token(Token = "0x4000062")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float delay;

	[Token(Token = "0x6000031")]
	[Address(RVA = "0xCC286C", Offset = "0xCC286C", VA = "0xCC286C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000032")]
	[Address(RVA = "0xCC292C", Offset = "0xCC292C", VA = "0xCC292C")]
	private void FadeChildren()
	{
	}

	[Token(Token = "0x6000033")]
	[Address(RVA = "0xCC2D04", Offset = "0xCC2D04", VA = "0xCC2D04")]
	private void SetMaterialToFade(Material mat)
	{
	}

	[Token(Token = "0x6000034")]
	[Address(RVA = "0xCC2E60", Offset = "0xCC2E60", VA = "0xCC2E60")]
	public ChildrenFader()
	{
	}
}
[Token(Token = "0x2000016")]
public class DensityExplosion : MonoBehaviour
{
	[Token(Token = "0x4000063")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Renderer render;

	[Token(Token = "0x4000064")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float duration;

	[Token(Token = "0x4000065")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float color_strength;

	[Token(Token = "0x6000035")]
	[Address(RVA = "0xCC2E70", Offset = "0xCC2E70", VA = "0xCC2E70")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000036")]
	[Address(RVA = "0xCC3068", Offset = "0xCC3068", VA = "0xCC3068")]
	public DensityExplosion()
	{
	}
}
[Token(Token = "0x2000018")]
public class DisableTrainCollider : MonoBehaviour
{
	[Token(Token = "0x4000068")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject collider_to_disable;

	[Token(Token = "0x4000069")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float delay;

	[Token(Token = "0x600003F")]
	[Address(RVA = "0xCC34AC", Offset = "0xCC34AC", VA = "0xCC34AC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000040")]
	[Address(RVA = "0xCC356C", Offset = "0xCC356C", VA = "0xCC356C")]
	private void DisableCollider()
	{
	}

	[Token(Token = "0x6000041")]
	[Address(RVA = "0xCC358C", Offset = "0xCC358C", VA = "0xCC358C")]
	public DisableTrainCollider()
	{
	}
}
[Token(Token = "0x2000019")]
public class EnemyWarning : MonoBehaviour
{
	[Token(Token = "0x400006A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform warningSign;

	[Token(Token = "0x400006B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Vector3 initialWarningSize;

	[Token(Token = "0x6000042")]
	[Address(RVA = "0xCC359C", Offset = "0xCC359C", VA = "0xCC359C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000043")]
	[Address(RVA = "0xCC35D4", Offset = "0xCC35D4", VA = "0xCC35D4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000044")]
	[Address(RVA = "0xCC35D8", Offset = "0xCC35D8", VA = "0xCC35D8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000045")]
	[Address(RVA = "0xCC35DC", Offset = "0xCC35DC", VA = "0xCC35DC")]
	public void StartWarning()
	{
	}

	[Token(Token = "0x6000046")]
	[Address(RVA = "0xCC3724", Offset = "0xCC3724", VA = "0xCC3724")]
	public void StopWarning()
	{
	}

	[Token(Token = "0x6000047")]
	[Address(RVA = "0xCC3848", Offset = "0xCC3848", VA = "0xCC3848")]
	public EnemyWarning()
	{
	}
}
[Token(Token = "0x200001A")]
public class EventTable : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x200001B")]
	public struct Entry
	{
		[Token(Token = "0x400006D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string m_Key;

		[Token(Token = "0x400006E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public UnityEvent m_Event;
	}

	[Token(Token = "0x400006C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private List<Entry> m_Entries;

	[Token(Token = "0x600004A")]
	[Address(RVA = "0xCC3920", Offset = "0xCC3920", VA = "0xCC3920")]
	public UnityEvent GetEvent(string key, bool addIfNotFound = false)
	{
		return null;
	}

	[Token(Token = "0x600004B")]
	[Address(RVA = "0xCC3AE4", Offset = "0xCC3AE4", VA = "0xCC3AE4")]
	public List<Entry> GetEntries()
	{
		return null;
	}

	[Token(Token = "0x600004C")]
	[Address(RVA = "0xCC3AEC", Offset = "0xCC3AEC", VA = "0xCC3AEC")]
	public int IndexOf(UnityEvent evt)
	{
		return default(int);
	}

	[Token(Token = "0x600004D")]
	[Address(RVA = "0xCC3B88", Offset = "0xCC3B88", VA = "0xCC3B88")]
	public EventTable()
	{
	}
}
[Token(Token = "0x200001C")]
public class FilterStatsUIToggle : UIToggle
{
	[Token(Token = "0x400006F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ServerService.Period currentPeriod;

	[Token(Token = "0x600004E")]
	[Address(RVA = "0xCC3C10", Offset = "0xCC3C10", VA = "0xCC3C10")]
	private void Start()
	{
	}

	[Token(Token = "0x600004F")]
	[Address(RVA = "0xCC3CC8", Offset = "0xCC3CC8", VA = "0xCC3CC8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000050")]
	[Address(RVA = "0xCC3CCC", Offset = "0xCC3CCC", VA = "0xCC3CCC", Slot = "6")]
	protected override void ButtonPressed(UIButton button)
	{
	}

	[Token(Token = "0x6000051")]
	[Address(RVA = "0xCC3CFC", Offset = "0xCC3CFC", VA = "0xCC3CFC")]
	private ServerService.Period GetFilter(UIButton button)
	{
		return default(ServerService.Period);
	}

	[Token(Token = "0x6000052")]
	[Address(RVA = "0xCC3EE8", Offset = "0xCC3EE8", VA = "0xCC3EE8")]
	public FilterStatsUIToggle()
	{
	}
}
[Token(Token = "0x200001D")]
[AddComponentMenu("Mesh/Combine Children")]
public class CombineChildren : MonoBehaviour
{
	[Token(Token = "0x4000070")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool generateTriangleStrips;

	[Token(Token = "0x6000054")]
	[Address(RVA = "0xCC3F20", Offset = "0xCC3F20", VA = "0xCC3F20")]
	private void Start()
	{
	}

	[Token(Token = "0x6000055")]
	[Address(RVA = "0xCC587C", Offset = "0xCC587C", VA = "0xCC587C")]
	public CombineChildren()
	{
	}
}
[Token(Token = "0x200001E")]
public class MeshCombineUtility
{
	[Token(Token = "0x200001F")]
	public struct MeshInstance
	{
		[Token(Token = "0x4000071")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Mesh mesh;

		[Token(Token = "0x4000072")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public int subMeshIndex;

		[Token(Token = "0x4000073")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public Matrix4x4 transform;
	}

	[Token(Token = "0x6000056")]
	[Address(RVA = "0xCC4D8C", Offset = "0xCC4D8C", VA = "0xCC4D8C")]
	public static Mesh Combine(MeshInstance[] combines, bool generateStrips)
	{
		return null;
	}

	[Token(Token = "0x6000057")]
	[Address(RVA = "0xCC588C", Offset = "0xCC588C", VA = "0xCC588C")]
	private static void Copy(int vertexcount, Vector3[] src, Vector3[] dst, ref int offset, Matrix4x4 transform)
	{
	}

	[Token(Token = "0x6000058")]
	[Address(RVA = "0xCC5958", Offset = "0xCC5958", VA = "0xCC5958")]
	private static void CopyNormal(int vertexcount, Vector3[] src, Vector3[] dst, ref int offset, Matrix4x4 transform)
	{
	}

	[Token(Token = "0x6000059")]
	[Address(RVA = "0xCC5CA0", Offset = "0xCC5CA0", VA = "0xCC5CA0")]
	private static void Copy(int vertexcount, Vector2[] src, Vector2[] dst, ref int offset)
	{
	}

	[Token(Token = "0x600005A")]
	[Address(RVA = "0xCC5D18", Offset = "0xCC5D18", VA = "0xCC5D18")]
	private static void CopyColors(int vertexcount, Color[] src, Color[] dst, ref int offset)
	{
	}

	[Token(Token = "0x600005B")]
	[Address(RVA = "0xCC5AFC", Offset = "0xCC5AFC", VA = "0xCC5AFC")]
	private static void CopyTangents(int vertexcount, Vector4[] src, Vector4[] dst, ref int offset, Matrix4x4 transform)
	{
	}

	[Token(Token = "0x600005C")]
	[Address(RVA = "0xCC5D90", Offset = "0xCC5D90", VA = "0xCC5D90")]
	public MeshCombineUtility()
	{
	}
}
[Token(Token = "0x2000020")]
public class GRCamRotate : MonoBehaviour
{
	[Token(Token = "0x600005D")]
	[Address(RVA = "0xCC5D98", Offset = "0xCC5D98", VA = "0xCC5D98")]
	private void Update()
	{
	}

	[Token(Token = "0x600005E")]
	[Address(RVA = "0xCC5E14", Offset = "0xCC5E14", VA = "0xCC5E14")]
	public GRCamRotate()
	{
	}
}
[Token(Token = "0x2000021")]
public class HitCooldownModifier : MonoBehaviour
{
	[Token(Token = "0x4000074")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float hitCooldown;

	[Token(Token = "0x600005F")]
	[Address(RVA = "0xCC5E1C", Offset = "0xCC5E1C", VA = "0xCC5E1C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000060")]
	[Address(RVA = "0xCC5E78", Offset = "0xCC5E78", VA = "0xCC5E78")]
	private void Update()
	{
	}

	[Token(Token = "0x6000061")]
	[Address(RVA = "0xCC5E7C", Offset = "0xCC5E7C", VA = "0xCC5E7C")]
	public HitCooldownModifier()
	{
	}
}
[Token(Token = "0x2000022")]
public class LightFlicker : MonoBehaviour
{
	[Token(Token = "0x4000075")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float initialValue;

	[Token(Token = "0x4000076")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private Vector3 initialPosition;

	[Token(Token = "0x4000077")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Vector3 initialScale;

	[Token(Token = "0x4000078")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float initialTime;

	[Token(Token = "0x4000079")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Light lightRef;

	[Token(Token = "0x400007A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float amount;

	[Token(Token = "0x400007B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float speed;

	[Token(Token = "0x400007C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public bool adjustLocation;

	[Token(Token = "0x400007D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float locationAdjustAmount;

	[Token(Token = "0x400007E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public bool adjustScale;

	[Token(Token = "0x400007F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public float scaleAdjustAmount;

	[Token(Token = "0x4000080")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Transform scaleObject;

	[Token(Token = "0x6000062")]
	[Address(RVA = "0xCC5E8C", Offset = "0xCC5E8C", VA = "0xCC5E8C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000063")]
	[Address(RVA = "0xCC5FE4", Offset = "0xCC5FE4", VA = "0xCC5FE4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000064")]
	[Address(RVA = "0xCC61A4", Offset = "0xCC61A4", VA = "0xCC61A4")]
	public LightFlicker()
	{
	}
}
[Token(Token = "0x2000023")]
public class TileAnimation : MonoBehaviour
{
	[Token(Token = "0x4000081")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int xFrames;

	[Token(Token = "0x4000082")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int yFrames;

	[Token(Token = "0x4000083")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float speed;

	[Token(Token = "0x4000084")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public bool billboard;

	[Token(Token = "0x4000085")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Camera mainCamera;

	[Token(Token = "0x4000086")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private int frame;

	[Token(Token = "0x4000087")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Renderer rendererReference;

	[Token(Token = "0x4000088")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private int randomStart;

	[Token(Token = "0x6000065")]
	[Address(RVA = "0xCC61C4", Offset = "0xCC61C4", VA = "0xCC61C4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000066")]
	[Address(RVA = "0xCC630C", Offset = "0xCC630C", VA = "0xCC630C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000067")]
	[Address(RVA = "0xCC65EC", Offset = "0xCC65EC", VA = "0xCC65EC")]
	public TileAnimation()
	{
	}
}
[Token(Token = "0x2000024")]
public class JacksonModuleModifier : MonoBehaviour
{
	[Token(Token = "0x6000068")]
	[Address(RVA = "0xCC6604", Offset = "0xCC6604", VA = "0xCC6604")]
	private void Start()
	{
	}

	[Token(Token = "0x6000069")]
	[Address(RVA = "0xCC6744", Offset = "0xCC6744", VA = "0xCC6744")]
	private void OnDeactive()
	{
	}

	[Token(Token = "0x600006A")]
	[Address(RVA = "0xCC67A0", Offset = "0xCC67A0", VA = "0xCC67A0")]
	private void Update()
	{
	}

	[Token(Token = "0x600006B")]
	[Address(RVA = "0xCC67A4", Offset = "0xCC67A4", VA = "0xCC67A4")]
	public JacksonModuleModifier()
	{
	}
}
[Token(Token = "0x2000025")]
public class BFX_MouseOrbit : MonoBehaviour
{
	[Token(Token = "0x4000089")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject target;

	[Token(Token = "0x400008A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float distance;

	[Token(Token = "0x400008B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float xSpeed;

	[Token(Token = "0x400008C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float ySpeed;

	[Token(Token = "0x400008D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float yMinLimit;

	[Token(Token = "0x400008E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float yMaxLimit;

	[Token(Token = "0x400008F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float x;

	[Token(Token = "0x4000090")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float y;

	[Token(Token = "0x4000091")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float prevDistance;

	[Token(Token = "0x600006D")]
	[Address(RVA = "0xCC6820", Offset = "0xCC6820", VA = "0xCC6820")]
	private void Start()
	{
	}

	[Token(Token = "0x600006E")]
	[Address(RVA = "0xCC684C", Offset = "0xCC684C", VA = "0xCC684C")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x600006F")]
	[Address(RVA = "0xCC6CA4", Offset = "0xCC6CA4", VA = "0xCC6CA4")]
	private static float ClampAngle(float angle, float min, float max)
	{
		return default(float);
	}

	[Token(Token = "0x6000070")]
	[Address(RVA = "0xCC6CE0", Offset = "0xCC6CE0", VA = "0xCC6CE0")]
	public BFX_MouseOrbit()
	{
	}
}
[Token(Token = "0x2000026")]
public class ExplosionDemoGUI : MonoBehaviour
{
	[Token(Token = "0x4000092")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject[] Prefabs;

	[Token(Token = "0x4000093")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float reactivateTime;

	[Token(Token = "0x4000094")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Light Sun;

	[Token(Token = "0x4000095")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private int currentNomber;

	[Token(Token = "0x4000096")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private GameObject currentInstance;

	[Token(Token = "0x4000097")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private GUIStyle guiStyleHeader;

	[Token(Token = "0x4000098")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float sunIntensity;

	[Token(Token = "0x4000099")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private float dpiScale;

	[Token(Token = "0x6000071")]
	[Address(RVA = "0xCC6CFC", Offset = "0xCC6CFC", VA = "0xCC6CFC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000072")]
	[Address(RVA = "0xCC6EF0", Offset = "0xCC6EF0", VA = "0xCC6EF0")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x6000073")]
	[Address(RVA = "0xCC71E8", Offset = "0xCC71E8", VA = "0xCC71E8")]
	private void ChangeCurrent(int delta)
	{
	}

	[Token(Token = "0x6000074")]
	[Address(RVA = "0xCC739C", Offset = "0xCC739C", VA = "0xCC739C")]
	public ExplosionDemoGUI()
	{
	}
}
[Token(Token = "0x2000027")]
public class ExplosionDemoReactivator : MonoBehaviour
{
	[Token(Token = "0x400009A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float TimeDelayToReactivate;

	[Token(Token = "0x6000075")]
	[Address(RVA = "0xCC7418", Offset = "0xCC7418", VA = "0xCC7418")]
	private void Start()
	{
	}

	[Token(Token = "0x6000076")]
	[Address(RVA = "0xCC746C", Offset = "0xCC746C", VA = "0xCC746C")]
	private void Reactivate()
	{
	}

	[Token(Token = "0x6000077")]
	[Address(RVA = "0xCC7534", Offset = "0xCC7534", VA = "0xCC7534")]
	public ExplosionDemoReactivator()
	{
	}
}
[Token(Token = "0x2000028")]
internal class UVTextureAnimator : MonoBehaviour
{
	[Token(Token = "0x400009B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int Rows;

	[Token(Token = "0x400009C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int Columns;

	[Token(Token = "0x400009D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float Fps;

	[Token(Token = "0x400009E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public int OffsetMat;

	[Token(Token = "0x400009F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float StartDelay;

	[Token(Token = "0x40000A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public bool IsInterpolateFrames;

	[Token(Token = "0x40000A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public BFX_TextureShaderProperties[] TextureNames;

	[Token(Token = "0x40000A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public AnimationCurve FrameOverTime;

	[Token(Token = "0x40000A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Renderer currentRenderer;

	[Token(Token = "0x40000A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Projector projector;

	[Token(Token = "0x40000A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Material instanceMaterial;

	[Token(Token = "0x40000A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float animationStartTime;

	[Token(Token = "0x40000A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private bool canUpdate;

	[Token(Token = "0x40000A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private int previousIndex;

	[Token(Token = "0x40000A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private int totalFrames;

	[Token(Token = "0x40000AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private float currentInterpolatedTime;

	[Token(Token = "0x40000AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private int currentIndex;

	[Token(Token = "0x40000AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Vector2 size;

	[Token(Token = "0x40000AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private bool isInitialized;

	[Token(Token = "0x40000AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x79")]
	private bool startDelayIsBroken;

	[Token(Token = "0x6000078")]
	[Address(RVA = "0xCC7544", Offset = "0xCC7544", VA = "0xCC7544")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000079")]
	[Address(RVA = "0xCC7778", Offset = "0xCC7778", VA = "0xCC7778")]
	private void Start()
	{
	}

	[Token(Token = "0x600007A")]
	[Address(RVA = "0xCC7794", Offset = "0xCC7794", VA = "0xCC7794")]
	private void Update()
	{
	}

	[Token(Token = "0x600007B")]
	[Address(RVA = "0xCC77A4", Offset = "0xCC77A4", VA = "0xCC77A4")]
	private void ManualUpdate()
	{
	}

	[Token(Token = "0x600007C")]
	[Address(RVA = "0xCC7D28", Offset = "0xCC7D28", VA = "0xCC7D28")]
	private void StartDelayFunc()
	{
	}

	[Token(Token = "0x600007D")]
	[Address(RVA = "0xCC7554", Offset = "0xCC7554", VA = "0xCC7554")]
	private void InitDefaultVariables()
	{
	}

	[Token(Token = "0x600007E")]
	[Address(RVA = "0xCC7D4C", Offset = "0xCC7D4C", VA = "0xCC7D4C")]
	private void InitializeMaterial()
	{
	}

	[Token(Token = "0x600007F")]
	[Address(RVA = "0xCC77DC", Offset = "0xCC77DC", VA = "0xCC77DC")]
	private void UpdateMaterial()
	{
	}

	[Token(Token = "0x6000080")]
	[Address(RVA = "0xCC79A4", Offset = "0xCC79A4", VA = "0xCC79A4")]
	private void SetSpriteAnimation()
	{
	}

	[Token(Token = "0x6000081")]
	[Address(RVA = "0xCC7BD0", Offset = "0xCC7BD0", VA = "0xCC7BD0")]
	private void SetSpriteAnimationIterpolated()
	{
	}

	[Token(Token = "0x6000082")]
	[Address(RVA = "0xCC7FAC", Offset = "0xCC7FAC", VA = "0xCC7FAC")]
	public UVTextureAnimator()
	{
	}
}
[Token(Token = "0x2000029")]
public enum BFX_TextureShaderProperties
{
	[Token(Token = "0x40000B0")]
	_MainTex,
	[Token(Token = "0x40000B1")]
	_DistortTex,
	[Token(Token = "0x40000B2")]
	_Mask,
	[Token(Token = "0x40000B3")]
	_Cutout,
	[Token(Token = "0x40000B4")]
	_CutoutTex,
	[Token(Token = "0x40000B5")]
	_Bump,
	[Token(Token = "0x40000B6")]
	_BumpTex,
	[Token(Token = "0x40000B7")]
	_EmissionTex
}
[Token(Token = "0x200002A")]
public class ExplosionPlatformActivator : MonoBehaviour
{
	[Token(Token = "0x40000B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject Effect;

	[Token(Token = "0x40000B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float TimeDelay;

	[Token(Token = "0x40000BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float DefaultRepeatTime;

	[Token(Token = "0x40000BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float NearRepeatTime;

	[Token(Token = "0x40000BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float currentTime;

	[Token(Token = "0x40000BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float currentRepeatTime;

	[Token(Token = "0x40000BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private bool canUpdate;

	[Token(Token = "0x6000083")]
	[Address(RVA = "0xCC8050", Offset = "0xCC8050", VA = "0xCC8050")]
	private void Start()
	{
	}

	[Token(Token = "0x6000084")]
	[Address(RVA = "0xCC80A8", Offset = "0xCC80A8", VA = "0xCC80A8")]
	private void Init()
	{
	}

	[Token(Token = "0x6000085")]
	[Address(RVA = "0xCC80D4", Offset = "0xCC80D4", VA = "0xCC80D4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000086")]
	[Address(RVA = "0xCC81A8", Offset = "0xCC81A8", VA = "0xCC81A8")]
	private void OnTriggerEnter(Collider coll)
	{
	}

	[Token(Token = "0x6000087")]
	[Address(RVA = "0xCC81B4", Offset = "0xCC81B4", VA = "0xCC81B4")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x6000088")]
	[Address(RVA = "0xCC81C0", Offset = "0xCC81C0", VA = "0xCC81C0")]
	public ExplosionPlatformActivator()
	{
	}
}
[Token(Token = "0x200002B")]
public class ExplosionsFPS : MonoBehaviour
{
	[Token(Token = "0x40000BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private readonly GUIStyle guiStyleHeader;

	[Token(Token = "0x40000C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float timeleft;

	[Token(Token = "0x40000C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float fps;

	[Token(Token = "0x40000C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private int frames;

	[Token(Token = "0x6000089")]
	[Address(RVA = "0xCC81D4", Offset = "0xCC81D4", VA = "0xCC81D4")]
	private void Awake()
	{
	}

	[Token(Token = "0x600008A")]
	[Address(RVA = "0xCC8224", Offset = "0xCC8224", VA = "0xCC8224")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x600008B")]
	[Address(RVA = "0xCC831C", Offset = "0xCC831C", VA = "0xCC831C")]
	private void Update()
	{
	}

	[Token(Token = "0x600008C")]
	[Address(RVA = "0xCC8370", Offset = "0xCC8370", VA = "0xCC8370")]
	public ExplosionsFPS()
	{
	}
}
[Token(Token = "0x200002C")]
public class FPSDemoGUI : MonoBehaviour
{
	[Token(Token = "0x40000C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject[] Prefabs;

	[Token(Token = "0x40000C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform muzzleFlashPoint;

	[Token(Token = "0x40000C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject Gun;

	[Token(Token = "0x40000C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float reactivateTime;

	[Token(Token = "0x40000C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Light Sun;

	[Token(Token = "0x40000C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool IsMobile;

	[Token(Token = "0x40000C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private int currentNomber;

	[Token(Token = "0x40000CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private GameObject currentInstance;

	[Token(Token = "0x40000CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private GUIStyle guiStyleHeader;

	[Token(Token = "0x40000CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float sunIntensity;

	[Token(Token = "0x40000CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private float dpiScale;

	[Token(Token = "0x600008D")]
	[Address(RVA = "0xCC83E4", Offset = "0xCC83E4", VA = "0xCC83E4")]
	private void Start()
	{
	}

	[Token(Token = "0x600008E")]
	[Address(RVA = "0xCC8610", Offset = "0xCC8610", VA = "0xCC8610")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x600008F")]
	[Address(RVA = "0xCC8864", Offset = "0xCC8864", VA = "0xCC8864")]
	private void ChangeCurrent(int delta)
	{
	}

	[Token(Token = "0x6000090")]
	[Address(RVA = "0xCC8B60", Offset = "0xCC8B60", VA = "0xCC8B60")]
	private void Reactivator()
	{
	}

	[Token(Token = "0x6000091")]
	[Address(RVA = "0xCC8B98", Offset = "0xCC8B98", VA = "0xCC8B98")]
	public FPSDemoGUI()
	{
	}
}
[Token(Token = "0x200002D")]
public class FPSDemoReactivator : MonoBehaviour
{
	[Token(Token = "0x40000CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float StartDelay;

	[Token(Token = "0x40000CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float TimeDelayToReactivate;

	[Token(Token = "0x6000092")]
	[Address(RVA = "0xCC8C14", Offset = "0xCC8C14", VA = "0xCC8C14")]
	private void Start()
	{
	}

	[Token(Token = "0x6000093")]
	[Address(RVA = "0xCC8C64", Offset = "0xCC8C64", VA = "0xCC8C64")]
	private void Reactivate()
	{
	}

	[Token(Token = "0x6000094")]
	[Address(RVA = "0xCC8CA8", Offset = "0xCC8CA8", VA = "0xCC8CA8")]
	public FPSDemoReactivator()
	{
	}
}
[Token(Token = "0x200002E")]
public class FPSFireManager : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x200002F")]
	public class ImpactInfo
	{
		[Token(Token = "0x40000D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public MaterialType.MaterialTypeEnum MaterialType;

		[Token(Token = "0x40000D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject ImpactEffect;

		[Token(Token = "0x6000098")]
		[Address(RVA = "0xCC90C0", Offset = "0xCC90C0", VA = "0xCC90C0")]
		public ImpactInfo()
		{
		}
	}

	[Token(Token = "0x40000D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ImpactInfo[] ImpactElemets;

	[Token(Token = "0x40000D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[Space]
	public float BulletDistance;

	[Token(Token = "0x40000D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject ImpactEffect;

	[Token(Token = "0x6000095")]
	[Address(RVA = "0xCC8CB8", Offset = "0xCC8CB8", VA = "0xCC8CB8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000096")]
	[Address(RVA = "0xCC8F64", Offset = "0xCC8F64", VA = "0xCC8F64")]
	private GameObject GetImpactEffect(GameObject impactedGameObject)
	{
		return null;
	}

	[Token(Token = "0x6000097")]
	[Address(RVA = "0xCC9054", Offset = "0xCC9054", VA = "0xCC9054")]
	public FPSFireManager()
	{
	}
}
[Serializable]
[Token(Token = "0x2000030")]
public class FPS_MouseLook
{
	[Token(Token = "0x40000D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float XSensitivity;

	[Token(Token = "0x40000D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float YSensitivity;

	[Token(Token = "0x40000D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool clampVerticalRotation;

	[Token(Token = "0x40000D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float MinimumX;

	[Token(Token = "0x40000D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float MaximumX;

	[Token(Token = "0x40000DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public bool smooth;

	[Token(Token = "0x40000DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float smoothTime;

	[Token(Token = "0x40000DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public bool lockCursor;

	[Token(Token = "0x40000DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Quaternion m_CharacterTargetRot;

	[Token(Token = "0x40000DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Quaternion m_CameraTargetRot;

	[Token(Token = "0x40000DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool m_cursorIsLocked;

	[Token(Token = "0x6000099")]
	[Address(RVA = "0xCC90C8", Offset = "0xCC90C8", VA = "0xCC90C8")]
	public void Init(Transform character, Transform camera)
	{
	}

	[Token(Token = "0x600009A")]
	[Address(RVA = "0xCC9118", Offset = "0xCC9118", VA = "0xCC9118")]
	public void LookRotation(Transform character, Transform camera)
	{
	}

	[Token(Token = "0x600009B")]
	[Address(RVA = "0xCC94E8", Offset = "0xCC94E8", VA = "0xCC94E8")]
	public void SetCursorLock(bool value)
	{
	}

	[Token(Token = "0x600009C")]
	[Address(RVA = "0xCC94D8", Offset = "0xCC94D8", VA = "0xCC94D8")]
	public void UpdateCursorLock()
	{
	}

	[Token(Token = "0x600009D")]
	[Address(RVA = "0xCC951C", Offset = "0xCC951C", VA = "0xCC951C")]
	private void InternalLockUpdate()
	{
	}

	[Token(Token = "0x600009E")]
	[Address(RVA = "0xCC9474", Offset = "0xCC9474", VA = "0xCC9474")]
	private Quaternion ClampRotationAroundXAxis(Quaternion q)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x600009F")]
	[Address(RVA = "0xCC9594", Offset = "0xCC9594", VA = "0xCC9594")]
	public FPS_MouseLook()
	{
	}
}
[Token(Token = "0x2000031")]
[RequireComponent(typeof(Rigidbody))]
[RequireComponent(typeof(CapsuleCollider))]
public class FPS_RigidbodyFirstPersonController : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x2000032")]
	public class MovementSettings
	{
		[Token(Token = "0x40000EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float ForwardSpeed;

		[Token(Token = "0x40000ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float BackwardSpeed;

		[Token(Token = "0x40000EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float StrafeSpeed;

		[Token(Token = "0x40000EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float RunMultiplier;

		[Token(Token = "0x40000F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public KeyCode RunKey;

		[Token(Token = "0x40000F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float JumpForce;

		[Token(Token = "0x40000F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public AnimationCurve SlopeCurveModifier;

		[Token(Token = "0x40000F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[HideInInspector]
		public float CurrentTargetSpeed;

		[Token(Token = "0x60000AD")]
		[Address(RVA = "0xCCA41C", Offset = "0xCCA41C", VA = "0xCCA41C")]
		public void UpdateDesiredTargetSpeed(Vector2 input)
		{
		}

		[Token(Token = "0x60000AE")]
		[Address(RVA = "0xCCA5FC", Offset = "0xCCA5FC", VA = "0xCCA5FC")]
		public MovementSettings()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x2000033")]
	public class AdvancedSettings
	{
		[Token(Token = "0x40000F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float groundCheckDistance;

		[Token(Token = "0x40000F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float stickToGroundHelperDistance;

		[Token(Token = "0x40000F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float slowDownRate;

		[Token(Token = "0x40000F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public bool airControl;

		[Token(Token = "0x40000F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[Tooltip("set it to 0.1 or more if you get stuck in wall")]
		public float shellOffset;

		[Token(Token = "0x60000AF")]
		[Address(RVA = "0xCCA7B8", Offset = "0xCCA7B8", VA = "0xCCA7B8")]
		public AdvancedSettings()
		{
		}
	}

	[Token(Token = "0x40000E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Camera cam;

	[Token(Token = "0x40000E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public MovementSettings movementSettings;

	[Token(Token = "0x40000E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AdvancedSettings advancedSettings;

	[Token(Token = "0x40000E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Rigidbody m_RigidBody;

	[Token(Token = "0x40000E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private CapsuleCollider m_Capsule;

	[Token(Token = "0x40000E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float m_YRotation;

	[Token(Token = "0x40000E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private Vector3 m_GroundContactNormal;

	[Token(Token = "0x40000E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool m_Jump;

	[Token(Token = "0x40000E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
	private bool m_PreviouslyGrounded;

	[Token(Token = "0x40000E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x52")]
	private bool m_Jumping;

	[Token(Token = "0x40000EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x53")]
	private bool m_IsGrounded;

	[Token(Token = "0x40000EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private FPS_MouseLook mouseLook;

	[Token(Token = "0x17000002")]
	public Vector3 Velocity
	{
		[Token(Token = "0x60000A0")]
		[Address(RVA = "0xCC95C8", Offset = "0xCC95C8", VA = "0xCC95C8")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x17000003")]
	public bool Grounded
	{
		[Token(Token = "0x60000A1")]
		[Address(RVA = "0xCC95E4", Offset = "0xCC95E4", VA = "0xCC95E4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000004")]
	public bool Jumping
	{
		[Token(Token = "0x60000A2")]
		[Address(RVA = "0xCC95EC", Offset = "0xCC95EC", VA = "0xCC95EC")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000005")]
	public bool Running
	{
		[Token(Token = "0x60000A3")]
		[Address(RVA = "0xCC95F4", Offset = "0xCC95F4", VA = "0xCC95F4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x60000A4")]
	[Address(RVA = "0xCC95FC", Offset = "0xCC95FC", VA = "0xCC95FC")]
	private void Start()
	{
	}

	[Token(Token = "0x60000A5")]
	[Address(RVA = "0xCC96CC", Offset = "0xCC96CC", VA = "0xCC96CC")]
	private void Update()
	{
	}

	[Token(Token = "0x60000A6")]
	[Address(RVA = "0xCC98B0", Offset = "0xCC98B0", VA = "0xCC98B0")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x60000A7")]
	[Address(RVA = "0xCC9F70", Offset = "0xCC9F70", VA = "0xCC9F70")]
	private float SlopeMultiplier()
	{
		return default(float);
	}

	[Token(Token = "0x60000A8")]
	[Address(RVA = "0xCCA0D0", Offset = "0xCCA0D0", VA = "0xCCA0D0")]
	private void StickToGroundHelper()
	{
	}

	[Token(Token = "0x60000A9")]
	[Address(RVA = "0xCC9ECC", Offset = "0xCC9ECC", VA = "0xCC9ECC")]
	private Vector2 GetInput()
	{
		return default(Vector2);
	}

	[Token(Token = "0x60000AA")]
	[Address(RVA = "0xCC9734", Offset = "0xCC9734", VA = "0xCC9734")]
	private void RotateView()
	{
	}

	[Token(Token = "0x60000AB")]
	[Address(RVA = "0xCC9D00", Offset = "0xCC9D00", VA = "0xCC9D00")]
	private void GroundCheck()
	{
	}

	[Token(Token = "0x60000AC")]
	[Address(RVA = "0xCCA4D4", Offset = "0xCCA4D4", VA = "0xCCA4D4")]
	public FPS_RigidbodyFirstPersonController()
	{
	}
}
[Token(Token = "0x2000034")]
public class FPSLightCurves : MonoBehaviour
{
	[Token(Token = "0x40000F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AnimationCurve LightCurve;

	[Token(Token = "0x40000FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float GraphTimeMultiplier;

	[Token(Token = "0x40000FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float GraphIntensityMultiplier;

	[Token(Token = "0x40000FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool canUpdate;

	[Token(Token = "0x40000FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float startTime;

	[Token(Token = "0x40000FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Light lightSource;

	[Token(Token = "0x60000B0")]
	[Address(RVA = "0xCCA7D4", Offset = "0xCCA7D4", VA = "0xCCA7D4")]
	private void Awake()
	{
	}

	[Token(Token = "0x60000B1")]
	[Address(RVA = "0xCCA858", Offset = "0xCCA858", VA = "0xCCA858")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60000B2")]
	[Address(RVA = "0xCCA890", Offset = "0xCCA890", VA = "0xCCA890")]
	private void Update()
	{
	}

	[Token(Token = "0x60000B3")]
	[Address(RVA = "0xCCA920", Offset = "0xCCA920", VA = "0xCCA920")]
	public FPSLightCurves()
	{
	}
}
[Token(Token = "0x2000035")]
[ExecuteInEditMode]
public class FPSParticleSystemScaler : MonoBehaviour
{
	[Token(Token = "0x40000FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float particlesScale;

	[Token(Token = "0x4000100")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private float oldScale;

	[Token(Token = "0x60000B4")]
	[Address(RVA = "0xCCA968", Offset = "0xCCA968", VA = "0xCCA968")]
	private void Start()
	{
	}

	[Token(Token = "0x60000B5")]
	[Address(RVA = "0xCCA974", Offset = "0xCCA974", VA = "0xCCA974")]
	private void Update()
	{
	}

	[Token(Token = "0x60000B6")]
	[Address(RVA = "0xCCA978", Offset = "0xCCA978", VA = "0xCCA978")]
	public FPSParticleSystemScaler()
	{
	}
}
[Token(Token = "0x2000036")]
public class FPSRandomRotateAngle : MonoBehaviour
{
	[Token(Token = "0x4000101")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool RotateX;

	[Token(Token = "0x4000102")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool RotateY;

	[Token(Token = "0x4000103")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	public bool RotateZ;

	[Token(Token = "0x4000104")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Transform t;

	[Token(Token = "0x60000B7")]
	[Address(RVA = "0xCCA988", Offset = "0xCCA988", VA = "0xCCA988")]
	private void Awake()
	{
	}

	[Token(Token = "0x60000B8")]
	[Address(RVA = "0xCCA9AC", Offset = "0xCCA9AC", VA = "0xCCA9AC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60000B9")]
	[Address(RVA = "0xCCAA80", Offset = "0xCCAA80", VA = "0xCCAA80")]
	public FPSRandomRotateAngle()
	{
	}
}
[Token(Token = "0x2000037")]
public class FPSShaderColorGradient : MonoBehaviour
{
	[Token(Token = "0x2000038")]
	public enum RFX4_ShaderProperties
	{
		[Token(Token = "0x4000112")]
		_TintColor,
		[Token(Token = "0x4000113")]
		_Cutoff,
		[Token(Token = "0x4000114")]
		_Color,
		[Token(Token = "0x4000115")]
		_EmissionColor,
		[Token(Token = "0x4000116")]
		_MaskPow,
		[Token(Token = "0x4000117")]
		_Cutout,
		[Token(Token = "0x4000118")]
		_Speed,
		[Token(Token = "0x4000119")]
		_BumpAmt,
		[Token(Token = "0x400011A")]
		_MainColor,
		[Token(Token = "0x400011B")]
		_Distortion,
		[Token(Token = "0x400011C")]
		_FresnelColor
	}

	[Token(Token = "0x4000105")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public RFX4_ShaderProperties ShaderColorProperty;

	[Token(Token = "0x4000106")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Gradient Color;

	[Token(Token = "0x4000107")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float TimeMultiplier;

	[Token(Token = "0x4000108")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public bool IsLoop;

	[Token(Token = "0x4000109")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D")]
	[HideInInspector]
	public bool canUpdate;

	[Token(Token = "0x400010A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private int propertyID;

	[Token(Token = "0x400010B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float startTime;

	[Token(Token = "0x400010C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Color startColor;

	[Token(Token = "0x400010D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool isInitialized;

	[Token(Token = "0x400010E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private string shaderProperty;

	[Token(Token = "0x400010F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private MaterialPropertyBlock props;

	[Token(Token = "0x4000110")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Renderer rend;

	[Token(Token = "0x60000BA")]
	[Address(RVA = "0xCCAA90", Offset = "0xCCAA90", VA = "0xCCAA90")]
	private void Awake()
	{
	}

	[Token(Token = "0x60000BB")]
	[Address(RVA = "0xCCAC0C", Offset = "0xCCAC0C", VA = "0xCCAC0C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60000BC")]
	[Address(RVA = "0xCCACE8", Offset = "0xCCACE8", VA = "0xCCACE8")]
	private void Update()
	{
	}

	[Token(Token = "0x60000BD")]
	[Address(RVA = "0xCCADAC", Offset = "0xCCADAC", VA = "0xCCADAC")]
	public FPSShaderColorGradient()
	{
	}
}
[Token(Token = "0x2000039")]
public class FPSShaderFloatCurves : MonoBehaviour
{
	[Token(Token = "0x400011D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string ShaderProperty;

	[Token(Token = "0x400011E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int MaterialID;

	[Token(Token = "0x400011F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AnimationCurve FloatPropertyCurve;

	[Token(Token = "0x4000120")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float GraphTimeMultiplier;

	[Token(Token = "0x4000121")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float GraphScaleMultiplier;

	[Token(Token = "0x4000122")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool canUpdate;

	[Token(Token = "0x4000123")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Material matInstance;

	[Token(Token = "0x4000124")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private int propertyID;

	[Token(Token = "0x4000125")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private float startTime;

	[Token(Token = "0x60000BE")]
	[Address(RVA = "0xCCAE28", Offset = "0xCCAE28", VA = "0xCCAE28")]
	private void Start()
	{
	}

	[Token(Token = "0x60000BF")]
	[Address(RVA = "0xCCB0EC", Offset = "0xCCB0EC", VA = "0xCCB0EC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60000C0")]
	[Address(RVA = "0xCCB110", Offset = "0xCCB110", VA = "0xCCB110")]
	private void Update()
	{
	}

	[Token(Token = "0x60000C1")]
	[Address(RVA = "0xCCB188", Offset = "0xCCB188", VA = "0xCCB188")]
	public FPSShaderFloatCurves()
	{
	}
}
[Token(Token = "0x200003A")]
public class MaterialType : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x200003B")]
	public enum MaterialTypeEnum
	{
		[Token(Token = "0x4000128")]
		Plaster,
		[Token(Token = "0x4000129")]
		Metall,
		[Token(Token = "0x400012A")]
		Folliage,
		[Token(Token = "0x400012B")]
		Rock,
		[Token(Token = "0x400012C")]
		Wood,
		[Token(Token = "0x400012D")]
		Brick,
		[Token(Token = "0x400012E")]
		Concrete,
		[Token(Token = "0x400012F")]
		Dirt,
		[Token(Token = "0x4000130")]
		Glass,
		[Token(Token = "0x4000131")]
		Water
	}

	[Token(Token = "0x4000126")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public MaterialTypeEnum TypeOfMaterial;

	[Token(Token = "0x60000C2")]
	[Address(RVA = "0xCCB210", Offset = "0xCCB210", VA = "0xCCB210")]
	public MaterialType()
	{
	}
}
[Token(Token = "0x200003C")]
[ExecuteInEditMode]
public class FPS_CustomLight : MonoBehaviour
{
	[Token(Token = "0x4000132")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static int MaxLightsCount;

	[Token(Token = "0x4000133")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Texture2D PointLightAttenuation;

	[Token(Token = "0x4000134")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private List<Light> sceneLights;

	[Token(Token = "0x60000C3")]
	[Address(RVA = "0xCCB218", Offset = "0xCCB218", VA = "0xCCB218")]
	private void Awake()
	{
	}

	[Token(Token = "0x60000C4")]
	[Address(RVA = "0xCCB5AC", Offset = "0xCCB5AC", VA = "0xCCB5AC")]
	private void Update()
	{
	}

	[Token(Token = "0x60000C5")]
	[Address(RVA = "0xCCC194", Offset = "0xCCC194", VA = "0xCCC194")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60000C6")]
	[Address(RVA = "0xCCC314", Offset = "0xCCC314", VA = "0xCCC314")]
	private List<Light> GetAllLights()
	{
		return null;
	}

	[Token(Token = "0x60000C7")]
	[Address(RVA = "0xCCB7D4", Offset = "0xCCB7D4", VA = "0xCCB7D4")]
	private int FillDirectionalLights(List<Light> lights, List<Vector4> lightPositions, List<Vector4> lightColors)
	{
		return default(int);
	}

	[Token(Token = "0x60000C8")]
	[Address(RVA = "0xCCBA2C", Offset = "0xCCBA2C", VA = "0xCCBA2C")]
	private int FillPointLights(List<Light> lights, List<Vector4> lightPositions, List<Vector4> lightColors)
	{
		return default(int);
	}

	[Token(Token = "0x60000C9")]
	[Address(RVA = "0xCCB470", Offset = "0xCCB470", VA = "0xCCB470")]
	private Vector4[] ListToArrayWithMaxCount(List<Vector4> list, int count)
	{
		return null;
	}

	[Token(Token = "0x60000CA")]
	[Address(RVA = "0xCCC58C", Offset = "0xCCC58C", VA = "0xCCC58C")]
	private List<Light> SortPointLightsByDistance(List<Light> lights)
	{
		return null;
	}

	[Token(Token = "0x60000CB")]
	[Address(RVA = "0xCCBCB8", Offset = "0xCCBCB8", VA = "0xCCBCB8")]
	public Color SampleLightProbesUp(Vector3 pos, float grayScaleFactor)
	{
		return default(Color);
	}

	[Token(Token = "0x60000CC")]
	[Address(RVA = "0xCCB35C", Offset = "0xCCB35C", VA = "0xCCB35C")]
	private Texture2D GeneratePointAttenuationTexture()
	{
		return null;
	}

	[Token(Token = "0x60000CD")]
	[Address(RVA = "0xCCC8D0", Offset = "0xCCC8D0", VA = "0xCCC8D0")]
	public FPS_CustomLight()
	{
	}
}
[Token(Token = "0x200003D")]
public class FPS_RenderDistortionOnLWRP : MonoBehaviour
{
	[Token(Token = "0x60000CF")]
	[Address(RVA = "0xCCC924", Offset = "0xCCC924", VA = "0xCCC924")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60000D0")]
	[Address(RVA = "0xCCC92C", Offset = "0xCCC92C", VA = "0xCCC92C")]
	private void Update()
	{
	}

	[Token(Token = "0x60000D1")]
	[Address(RVA = "0xCCC928", Offset = "0xCCC928", VA = "0xCCC928")]
	private void LWRP_Rendering()
	{
	}

	[Token(Token = "0x60000D2")]
	[Address(RVA = "0xCCC930", Offset = "0xCCC930", VA = "0xCCC930")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60000D3")]
	[Address(RVA = "0xCCC998", Offset = "0xCCC998", VA = "0xCCC998")]
	public FPS_RenderDistortionOnLWRP()
	{
	}
}
[Token(Token = "0x200003E")]
public class FPS_UseLight : MonoBehaviour
{
	[Token(Token = "0x60000D4")]
	[Address(RVA = "0xCCC9A0", Offset = "0xCCC9A0", VA = "0xCCC9A0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60000D5")]
	[Address(RVA = "0xCCCA98", Offset = "0xCCCA98", VA = "0xCCCA98")]
	public FPS_UseLight()
	{
	}
}
[Token(Token = "0x200003F")]
public class OldGUIExamplesCS : MonoBehaviour
{
	[Token(Token = "0x4000135")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Texture2D grumpy;

	[Token(Token = "0x4000136")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Texture2D beauty;

	[Token(Token = "0x4000137")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float w;

	[Token(Token = "0x4000138")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float h;

	[Token(Token = "0x4000139")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private LTRect buttonRect1;

	[Token(Token = "0x400013A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private LTRect buttonRect2;

	[Token(Token = "0x400013B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private LTRect buttonRect3;

	[Token(Token = "0x400013C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private LTRect buttonRect4;

	[Token(Token = "0x400013D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private LTRect grumpyRect;

	[Token(Token = "0x400013E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private LTRect beautyTileRect;

	[Token(Token = "0x60000D6")]
	[Address(RVA = "0xCCCAA0", Offset = "0xCCCAA0", VA = "0xCCCAA0")]
	private void Start()
	{
	}

	[Token(Token = "0x60000D7")]
	[Address(RVA = "0xCCCE1C", Offset = "0xCCCE1C", VA = "0xCCCE1C")]
	public void catMoved()
	{
	}

	[Token(Token = "0x60000D8")]
	[Address(RVA = "0xCCCE84", Offset = "0xCCCE84", VA = "0xCCCE84")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x60000D9")]
	[Address(RVA = "0xCCD820", Offset = "0xCCD820", VA = "0xCCD820")]
	public OldGUIExamplesCS()
	{
	}
}
[Token(Token = "0x2000040")]
public class TestingPunch : MonoBehaviour
{
	[Token(Token = "0x400013F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AnimationCurve exportCurve;

	[Token(Token = "0x4000140")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float overShootValue;

	[Token(Token = "0x4000141")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private LTDescr descr;

	[Token(Token = "0x60000DA")]
	[Address(RVA = "0xCCD828", Offset = "0xCCD828", VA = "0xCCD828")]
	private void Start()
	{
	}

	[Token(Token = "0x60000DB")]
	[Address(RVA = "0xCCDC64", Offset = "0xCCDC64", VA = "0xCCDC64")]
	private void Update()
	{
	}

	[Token(Token = "0x60000DC")]
	[Address(RVA = "0xCCEB74", Offset = "0xCCEB74", VA = "0xCCEB74")]
	private static void tweenStatically(GameObject gameObject)
	{
	}

	[Token(Token = "0x60000DD")]
	[Address(RVA = "0xCCECE4", Offset = "0xCCECE4", VA = "0xCCECE4")]
	private void enterMiniGameStart(object val)
	{
	}

	[Token(Token = "0x60000DE")]
	[Address(RVA = "0xCCEE20", Offset = "0xCCEE20", VA = "0xCCEE20")]
	private void updateColor(Color c)
	{
	}

	[Token(Token = "0x60000DF")]
	[Address(RVA = "0xCCEED0", Offset = "0xCCEED0", VA = "0xCCEED0")]
	private void delayedMethod(object myVal)
	{
	}

	[Token(Token = "0x60000E0")]
	[Address(RVA = "0xCCEFC4", Offset = "0xCCEFC4", VA = "0xCCEFC4")]
	private void destroyOnComp(object p)
	{
	}

	[Token(Token = "0x60000E1")]
	[Address(RVA = "0xCCD8C0", Offset = "0xCCD8C0", VA = "0xCCD8C0")]
	private string curveToString(AnimationCurve curve)
	{
		return null;
	}

	[Token(Token = "0x60000E2")]
	[Address(RVA = "0xCCF054", Offset = "0xCCF054", VA = "0xCCF054")]
	public TestingPunch()
	{
	}
}
[Token(Token = "0x2000045")]
public class TestingRigidbodyCS : MonoBehaviour
{
	[Token(Token = "0x400014C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private GameObject ball1;

	[Token(Token = "0x60000F2")]
	[Address(RVA = "0xCCFA40", Offset = "0xCCFA40", VA = "0xCCFA40")]
	private void Start()
	{
	}

	[Token(Token = "0x60000F3")]
	[Address(RVA = "0xCCFB78", Offset = "0xCCFB78", VA = "0xCCFB78")]
	private void Update()
	{
	}

	[Token(Token = "0x60000F4")]
	[Address(RVA = "0xCCFB7C", Offset = "0xCCFB7C", VA = "0xCCFB7C")]
	public TestingRigidbodyCS()
	{
	}
}
[Token(Token = "0x2000046")]
public class Following : MonoBehaviour
{
	[Token(Token = "0x400014D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform planet;

	[Token(Token = "0x400014E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform followArrow;

	[Token(Token = "0x400014F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform dude1;

	[Token(Token = "0x4000150")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform dude2;

	[Token(Token = "0x4000151")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform dude3;

	[Token(Token = "0x4000152")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Transform dude4;

	[Token(Token = "0x4000153")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Transform dude5;

	[Token(Token = "0x4000154")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Transform dude1Title;

	[Token(Token = "0x4000155")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Transform dude2Title;

	[Token(Token = "0x4000156")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Transform dude3Title;

	[Token(Token = "0x4000157")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Transform dude4Title;

	[Token(Token = "0x4000158")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Transform dude5Title;

	[Token(Token = "0x4000159")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Color dude1ColorVelocity;

	[Token(Token = "0x400015A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private Vector3 velocityPos;

	[Token(Token = "0x400015B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private float fromY;

	[Token(Token = "0x400015C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private float velocityY;

	[Token(Token = "0x400015D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	private Vector3 fromVec3;

	[Token(Token = "0x400015E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private Vector3 velocityVec3;

	[Token(Token = "0x400015F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	private Color fromColor;

	[Token(Token = "0x4000160")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	private Color velocityColor;

	[Token(Token = "0x60000F5")]
	[Address(RVA = "0xCCFB84", Offset = "0xCCFB84", VA = "0xCCFB84")]
	private void Start()
	{
	}

	[Token(Token = "0x60000F6")]
	[Address(RVA = "0xCD00DC", Offset = "0xCD00DC", VA = "0xCD00DC")]
	private void Update()
	{
	}

	[Token(Token = "0x60000F7")]
	[Address(RVA = "0xCD04F4", Offset = "0xCD04F4", VA = "0xCD04F4")]
	private void moveArrow()
	{
	}

	[Token(Token = "0x60000F8")]
	[Address(RVA = "0xCD0654", Offset = "0xCD0654", VA = "0xCD0654")]
	public Following()
	{
	}
}
[Token(Token = "0x2000047")]
public class GeneralAdvancedTechniques : MonoBehaviour
{
	[Token(Token = "0x4000161")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject avatarRecursive;

	[Token(Token = "0x4000162")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject avatar2dRecursive;

	[Token(Token = "0x4000163")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public RectTransform wingPersonPanel;

	[Token(Token = "0x4000164")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public RectTransform textField;

	[Token(Token = "0x4000165")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject avatarMove;

	[Token(Token = "0x4000166")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Transform[] movePts;

	[Token(Token = "0x4000167")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject[] avatarSpeed;

	[Token(Token = "0x4000168")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject[] avatarSpeed2;

	[Token(Token = "0x4000169")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Vector3[] circleSm;

	[Token(Token = "0x400016A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Vector3[] circleLrg;

	[Token(Token = "0x60000F9")]
	[Address(RVA = "0xCD065C", Offset = "0xCD065C", VA = "0xCD065C")]
	private void Start()
	{
	}

	[Token(Token = "0x60000FA")]
	[Address(RVA = "0xCD0A0C", Offset = "0xCD0A0C", VA = "0xCD0A0C")]
	public GeneralAdvancedTechniques()
	{
	}
}
[Token(Token = "0x2000048")]
public class GeneralBasic : MonoBehaviour
{
	[Token(Token = "0x400016B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject prefabAvatar;

	[Token(Token = "0x60000FC")]
	[Address(RVA = "0xCD21C0", Offset = "0xCD21C0", VA = "0xCD21C0")]
	private void Start()
	{
	}

	[Token(Token = "0x60000FD")]
	[Address(RVA = "0xCD2824", Offset = "0xCD2824", VA = "0xCD2824")]
	private void advancedExamples()
	{
	}

	[Token(Token = "0x60000FE")]
	[Address(RVA = "0xCD2908", Offset = "0xCD2908", VA = "0xCD2908")]
	public GeneralBasic()
	{
	}
}
[Token(Token = "0x200004A")]
public class GeneralBasics2d : MonoBehaviour
{
	[Token(Token = "0x400016D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Texture2D dudeTexture;

	[Token(Token = "0x400016E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject prefabParticles;

	[Token(Token = "0x6000103")]
	[Address(RVA = "0xCD32DC", Offset = "0xCD32DC", VA = "0xCD32DC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000104")]
	[Address(RVA = "0xCD3624", Offset = "0xCD3624", VA = "0xCD3624")]
	private GameObject createSpriteDude(string name, Vector3 pos, bool hasParticles = true)
	{
		return null;
	}

	[Token(Token = "0x6000105")]
	[Address(RVA = "0xCD3900", Offset = "0xCD3900", VA = "0xCD3900")]
	private void advancedExamples()
	{
	}

	[Token(Token = "0x6000106")]
	[Address(RVA = "0xCD39E4", Offset = "0xCD39E4", VA = "0xCD39E4")]
	public GeneralBasics2d()
	{
	}
}
[Token(Token = "0x200004C")]
public class GeneralCameraShake : MonoBehaviour
{
	[Token(Token = "0x4000170")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private GameObject avatarBig;

	[Token(Token = "0x4000171")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float jumpIter;

	[Token(Token = "0x4000172")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private AudioClip boomAudioClip;

	[Token(Token = "0x600010B")]
	[Address(RVA = "0xCD4104", Offset = "0xCD4104", VA = "0xCD4104")]
	private void Start()
	{
	}

	[Token(Token = "0x600010C")]
	[Address(RVA = "0xCD46E0", Offset = "0xCD46E0", VA = "0xCD46E0")]
	private void bigGuyJump()
	{
	}

	[Token(Token = "0x600010D")]
	[Address(RVA = "0xCD48E0", Offset = "0xCD48E0", VA = "0xCD48E0")]
	public GeneralCameraShake()
	{
	}
}
[Token(Token = "0x200004F")]
public class GeneralEasingTypes : MonoBehaviour
{
	[Token(Token = "0x4000177")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float lineDrawScale;

	[Token(Token = "0x4000178")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AnimationCurve animationCurve;

	[Token(Token = "0x4000179")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private string[] easeTypes;

	[Token(Token = "0x6000113")]
	[Address(RVA = "0xCD5258", Offset = "0xCD5258", VA = "0xCD5258")]
	private void Start()
	{
	}

	[Token(Token = "0x6000114")]
	[Address(RVA = "0xCD525C", Offset = "0xCD525C", VA = "0xCD525C")]
	private void demoEaseTypes()
	{
	}

	[Token(Token = "0x6000115")]
	[Address(RVA = "0xCD5654", Offset = "0xCD5654", VA = "0xCD5654")]
	private void resetLines()
	{
	}

	[Token(Token = "0x6000116")]
	[Address(RVA = "0xCD570C", Offset = "0xCD570C", VA = "0xCD570C")]
	public GeneralEasingTypes()
	{
	}
}
[Token(Token = "0x2000051")]
public class GeneralEventsListeners : MonoBehaviour
{
	[Token(Token = "0x2000052")]
	public enum MyEvents
	{
		[Token(Token = "0x4000182")]
		CHANGE_COLOR,
		[Token(Token = "0x4000183")]
		JUMP,
		[Token(Token = "0x4000184")]
		LENGTH
	}

	[Token(Token = "0x400017D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Vector3 towardsRotation;

	[Token(Token = "0x400017E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float turnForLength;

	[Token(Token = "0x400017F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float turnForIter;

	[Token(Token = "0x4000180")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private Color fromColor;

	[Token(Token = "0x6000119")]
	[Address(RVA = "0xCD64B4", Offset = "0xCD64B4", VA = "0xCD64B4")]
	private void Awake()
	{
	}

	[Token(Token = "0x600011A")]
	[Address(RVA = "0xCD655C", Offset = "0xCD655C", VA = "0xCD655C")]
	private void Start()
	{
	}

	[Token(Token = "0x600011B")]
	[Address(RVA = "0xCD6AB4", Offset = "0xCD6AB4", VA = "0xCD6AB4")]
	private void jumpUp(LTEvent e)
	{
	}

	[Token(Token = "0x600011C")]
	[Address(RVA = "0xCD6B60", Offset = "0xCD6B60", VA = "0xCD6B60")]
	private void changeColor(LTEvent e)
	{
	}

	[Token(Token = "0x600011D")]
	[Address(RVA = "0xCD6F18", Offset = "0xCD6F18", VA = "0xCD6F18")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x600011E")]
	[Address(RVA = "0xCD6F70", Offset = "0xCD6F70", VA = "0xCD6F70")]
	private void OnCollisionStay(Collision collision)
	{
	}

	[Token(Token = "0x600011F")]
	[Address(RVA = "0xCD6FC0", Offset = "0xCD6FC0", VA = "0xCD6FC0")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000120")]
	[Address(RVA = "0xCD7198", Offset = "0xCD7198", VA = "0xCD7198")]
	private void OnMouseDown()
	{
	}

	[Token(Token = "0x6000121")]
	[Address(RVA = "0xCD7464", Offset = "0xCD7464", VA = "0xCD7464")]
	public GeneralEventsListeners()
	{
	}
}
[Token(Token = "0x2000053")]
public class GeneralSequencer : MonoBehaviour
{
	[Token(Token = "0x4000185")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject avatar1;

	[Token(Token = "0x4000186")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject star;

	[Token(Token = "0x4000187")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject dustCloudPrefab;

	[Token(Token = "0x4000188")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float speedScale;

	[Token(Token = "0x6000123")]
	[Address(RVA = "0xCD7508", Offset = "0xCD7508", VA = "0xCD7508")]
	public void Start()
	{
	}

	[Token(Token = "0x6000124")]
	[Address(RVA = "0xCD798C", Offset = "0xCD798C", VA = "0xCD798C")]
	public GeneralSequencer()
	{
	}
}
[Token(Token = "0x2000054")]
public class GeneralSimpleUI : MonoBehaviour
{
	[Token(Token = "0x4000189")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public RectTransform button;

	[Token(Token = "0x6000126")]
	[Address(RVA = "0xCD7CD8", Offset = "0xCD7CD8", VA = "0xCD7CD8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000127")]
	[Address(RVA = "0xCD86C0", Offset = "0xCD86C0", VA = "0xCD86C0")]
	public GeneralSimpleUI()
	{
	}
}
[Token(Token = "0x2000056")]
public class GeneralUISpace : MonoBehaviour
{
	[Token(Token = "0x400018C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public RectTransform mainWindow;

	[Token(Token = "0x400018D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public RectTransform mainParagraphText;

	[Token(Token = "0x400018E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public RectTransform mainTitleText;

	[Token(Token = "0x400018F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public RectTransform mainButton1;

	[Token(Token = "0x4000190")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public RectTransform mainButton2;

	[Token(Token = "0x4000191")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public RectTransform pauseRing1;

	[Token(Token = "0x4000192")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public RectTransform pauseRing2;

	[Token(Token = "0x4000193")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public RectTransform pauseWindow;

	[Token(Token = "0x4000194")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public RectTransform chatWindow;

	[Token(Token = "0x4000195")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public RectTransform chatRect;

	[Token(Token = "0x4000196")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Sprite[] chatSprites;

	[Token(Token = "0x4000197")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public RectTransform chatBar1;

	[Token(Token = "0x4000198")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public RectTransform chatBar2;

	[Token(Token = "0x4000199")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Text chatText;

	[Token(Token = "0x400019A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public RectTransform rawImageRect;

	[Token(Token = "0x600012E")]
	[Address(RVA = "0xCD899C", Offset = "0xCD899C", VA = "0xCD899C")]
	private void Start()
	{
	}

	[Token(Token = "0x600012F")]
	[Address(RVA = "0xCD9974", Offset = "0xCD9974", VA = "0xCD9974")]
	public GeneralUISpace()
	{
	}
}
[Token(Token = "0x2000058")]
public class LogoCinematic : MonoBehaviour
{
	[Token(Token = "0x400019D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject lean;

	[Token(Token = "0x400019E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject tween;

	[Token(Token = "0x6000132")]
	[Address(RVA = "0xCD9AA8", Offset = "0xCD9AA8", VA = "0xCD9AA8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000133")]
	[Address(RVA = "0xCD9AAC", Offset = "0xCD9AAC", VA = "0xCD9AAC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000134")]
	[Address(RVA = "0xCD9F44", Offset = "0xCD9F44", VA = "0xCD9F44")]
	private void playBoom()
	{
	}

	[Token(Token = "0x6000135")]
	[Address(RVA = "0xCDA688", Offset = "0xCDA688", VA = "0xCDA688")]
	public LogoCinematic()
	{
	}
}
[Token(Token = "0x2000059")]
public class PathBezier2d : MonoBehaviour
{
	[Token(Token = "0x400019F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform[] cubes;

	[Token(Token = "0x40001A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject dude1;

	[Token(Token = "0x40001A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject dude2;

	[Token(Token = "0x40001A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private LTBezierPath visualizePath;

	[Token(Token = "0x6000136")]
	[Address(RVA = "0xCDA690", Offset = "0xCDA690", VA = "0xCDA690")]
	private void Start()
	{
	}

	[Token(Token = "0x6000137")]
	[Address(RVA = "0xCDAB3C", Offset = "0xCDAB3C", VA = "0xCDAB3C")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x6000138")]
	[Address(RVA = "0xCDAB7C", Offset = "0xCDAB7C", VA = "0xCDAB7C")]
	public PathBezier2d()
	{
	}
}
[Token(Token = "0x200005A")]
public class ExampleSpline : MonoBehaviour
{
	[Token(Token = "0x40001A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform[] trans;

	[Token(Token = "0x40001A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private LTSpline spline;

	[Token(Token = "0x40001A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private GameObject ltLogo;

	[Token(Token = "0x40001A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private GameObject ltLogo2;

	[Token(Token = "0x40001A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float iter;

	[Token(Token = "0x6000139")]
	[Address(RVA = "0xCDAB84", Offset = "0xCDAB84", VA = "0xCDAB84")]
	private void Start()
	{
	}

	[Token(Token = "0x600013A")]
	[Address(RVA = "0xCDB000", Offset = "0xCDB000", VA = "0xCDB000")]
	private void Update()
	{
	}

	[Token(Token = "0x600013B")]
	[Address(RVA = "0xCDB090", Offset = "0xCDB090", VA = "0xCDB090")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x600013C")]
	[Address(RVA = "0xCDB0A8", Offset = "0xCDB0A8", VA = "0xCDB0A8")]
	public ExampleSpline()
	{
	}
}
[Token(Token = "0x200005B")]
public class PathSpline2d : MonoBehaviour
{
	[Token(Token = "0x40001A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform[] cubes;

	[Token(Token = "0x40001A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject dude1;

	[Token(Token = "0x40001AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject dude2;

	[Token(Token = "0x40001AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private LTSpline visualizePath;

	[Token(Token = "0x600013D")]
	[Address(RVA = "0xCDB0B0", Offset = "0xCDB0B0", VA = "0xCDB0B0")]
	private void Start()
	{
	}

	[Token(Token = "0x600013E")]
	[Address(RVA = "0xCDB3F8", Offset = "0xCDB3F8", VA = "0xCDB3F8")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x600013F")]
	[Address(RVA = "0xCDB438", Offset = "0xCDB438", VA = "0xCDB438")]
	public PathSpline2d()
	{
	}
}
[Token(Token = "0x200005C")]
public class PathSplineEndless : MonoBehaviour
{
	[Token(Token = "0x40001AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject trackTrailRenderers;

	[Token(Token = "0x40001AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject car;

	[Token(Token = "0x40001AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject carInternal;

	[Token(Token = "0x40001AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject[] cubes;

	[Token(Token = "0x40001B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int cubesIter;

	[Token(Token = "0x40001B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject[] trees;

	[Token(Token = "0x40001B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private int treesIter;

	[Token(Token = "0x40001B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float randomIterWidth;

	[Token(Token = "0x40001B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private LTSpline track;

	[Token(Token = "0x40001B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private List<Vector3> trackPts;

	[Token(Token = "0x40001B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private int zIter;

	[Token(Token = "0x40001B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private float carIter;

	[Token(Token = "0x40001B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private float carAdd;

	[Token(Token = "0x40001B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private int trackMaxItems;

	[Token(Token = "0x40001BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private int trackIter;

	[Token(Token = "0x40001BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private float pushTrackAhead;

	[Token(Token = "0x40001BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private float randomIter;

	[Token(Token = "0x6000140")]
	[Address(RVA = "0xCDB440", Offset = "0xCDB440", VA = "0xCDB440")]
	private void Start()
	{
	}

	[Token(Token = "0x6000141")]
	[Address(RVA = "0xCDB8D8", Offset = "0xCDB8D8", VA = "0xCDB8D8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000142")]
	[Address(RVA = "0xCDBEC0", Offset = "0xCDBEC0", VA = "0xCDBEC0")]
	private GameObject objectQueue(GameObject[] arr, ref int lastIter)
	{
		return null;
	}

	[Token(Token = "0x6000143")]
	[Address(RVA = "0xCDB544", Offset = "0xCDB544", VA = "0xCDB544")]
	private void addRandomTrackPoint()
	{
	}

	[Token(Token = "0x6000144")]
	[Address(RVA = "0xCDB7E8", Offset = "0xCDB7E8", VA = "0xCDB7E8")]
	private void refreshSpline()
	{
	}

	[Token(Token = "0x6000145")]
	[Address(RVA = "0xCDBACC", Offset = "0xCDBACC", VA = "0xCDBACC")]
	private void playSwish()
	{
	}

	[Token(Token = "0x6000146")]
	[Address(RVA = "0xCDC00C", Offset = "0xCDC00C", VA = "0xCDC00C")]
	public PathSplineEndless()
	{
	}
}
[Token(Token = "0x200005D")]
public class PathSplinePerformance : MonoBehaviour
{
	[Token(Token = "0x40001BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject trackTrailRenderers;

	[Token(Token = "0x40001BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject car;

	[Token(Token = "0x40001BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject carInternal;

	[Token(Token = "0x40001C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float circleLength;

	[Token(Token = "0x40001C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float randomRange;

	[Token(Token = "0x40001C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public int trackNodes;

	[Token(Token = "0x40001C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float carSpeed;

	[Token(Token = "0x40001C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float tracerSpeed;

	[Token(Token = "0x40001C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private LTSpline track;

	[Token(Token = "0x40001C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private int trackIter;

	[Token(Token = "0x40001C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private float carAdd;

	[Token(Token = "0x40001C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float trackPosition;

	[Token(Token = "0x6000148")]
	[Address(RVA = "0xCDC0B4", Offset = "0xCDC0B4", VA = "0xCDC0B4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000149")]
	[Address(RVA = "0xCDC564", Offset = "0xCDC564", VA = "0xCDC564")]
	private void Update()
	{
	}

	[Token(Token = "0x600014A")]
	[Address(RVA = "0xCDCAA8", Offset = "0xCDCAA8", VA = "0xCDCAA8")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x600014B")]
	[Address(RVA = "0xCDC6B4", Offset = "0xCDC6B4", VA = "0xCDC6B4")]
	private void playSwish()
	{
	}

	[Token(Token = "0x600014C")]
	[Address(RVA = "0xCDCACC", Offset = "0xCDCACC", VA = "0xCDCACC")]
	public PathSplinePerformance()
	{
	}
}
[Token(Token = "0x200005E")]
public class PathSplines : MonoBehaviour
{
	[Token(Token = "0x40001C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform[] trans;

	[Token(Token = "0x40001CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private LTSpline cr;

	[Token(Token = "0x40001CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private GameObject avatar1;

	[Token(Token = "0x40001CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float iter;

	[Token(Token = "0x600014D")]
	[Address(RVA = "0xCDCAFC", Offset = "0xCDCAFC", VA = "0xCDCAFC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600014E")]
	[Address(RVA = "0xCDCCA4", Offset = "0xCDCCA4", VA = "0xCDCCA4")]
	private void Start()
	{
	}

	[Token(Token = "0x600014F")]
	[Address(RVA = "0xCDCEB0", Offset = "0xCDCEB0", VA = "0xCDCEB0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000150")]
	[Address(RVA = "0xCDCEF8", Offset = "0xCDCEF8", VA = "0xCDCEF8")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x6000151")]
	[Address(RVA = "0xCDCF48", Offset = "0xCDCF48", VA = "0xCDCF48")]
	public PathSplines()
	{
	}
}
[Token(Token = "0x200005F")]
public class PathSplineTrack : MonoBehaviour
{
	[Token(Token = "0x40001CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject car;

	[Token(Token = "0x40001CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject carInternal;

	[Token(Token = "0x40001CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject trackTrailRenderers;

	[Token(Token = "0x40001D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform[] trackOnePoints;

	[Token(Token = "0x40001D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private LTSpline track;

	[Token(Token = "0x40001D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private int trackIter;

	[Token(Token = "0x40001D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private float trackPosition;

	[Token(Token = "0x6000153")]
	[Address(RVA = "0xCDD0F0", Offset = "0xCDD0F0", VA = "0xCDD0F0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000154")]
	[Address(RVA = "0xCDD36C", Offset = "0xCDD36C", VA = "0xCDD36C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000155")]
	[Address(RVA = "0xCDD8C8", Offset = "0xCDD8C8", VA = "0xCDD8C8")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x6000156")]
	[Address(RVA = "0xCDD4D4", Offset = "0xCDD4D4", VA = "0xCDD4D4")]
	private void playSwish()
	{
	}

	[Token(Token = "0x6000157")]
	[Address(RVA = "0xCDD934", Offset = "0xCDD934", VA = "0xCDD934")]
	public PathSplineTrack()
	{
	}
}
[Token(Token = "0x2000060")]
public class TestingZLegacy : MonoBehaviour
{
	[Token(Token = "0x2000061")]
	public delegate void NextFunc();

	[Token(Token = "0x2000062")]
	public enum TimingType
	{
		[Token(Token = "0x40001E2")]
		SteadyNormalTime,
		[Token(Token = "0x40001E3")]
		IgnoreTimeScale,
		[Token(Token = "0x40001E4")]
		HalfTimeScale,
		[Token(Token = "0x40001E5")]
		VariableTimeScale,
		[Token(Token = "0x40001E6")]
		Length
	}

	[Token(Token = "0x40001D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AnimationCurve customAnimationCurve;

	[Token(Token = "0x40001D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform pt1;

	[Token(Token = "0x40001D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform pt2;

	[Token(Token = "0x40001D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform pt3;

	[Token(Token = "0x40001D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform pt4;

	[Token(Token = "0x40001D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Transform pt5;

	[Token(Token = "0x40001DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private int exampleIter;

	[Token(Token = "0x40001DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private string[] exampleFunctions;

	[Token(Token = "0x40001DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public bool useEstimatedTime;

	[Token(Token = "0x40001DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private GameObject ltLogo;

	[Token(Token = "0x40001DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private TimingType timingType;

	[Token(Token = "0x40001DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private int descrTimeScaleChangeId;

	[Token(Token = "0x40001E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Vector3 origin;

	[Token(Token = "0x6000158")]
	[Address(RVA = "0xCDD944", Offset = "0xCDD944", VA = "0xCDD944")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000159")]
	[Address(RVA = "0xCDD948", Offset = "0xCDD948", VA = "0xCDD948")]
	private void Start()
	{
	}

	[Token(Token = "0x600015A")]
	[Address(RVA = "0xCDDA50", Offset = "0xCDDA50", VA = "0xCDDA50")]
	private void pauseNow()
	{
	}

	[Token(Token = "0x600015B")]
	[Address(RVA = "0xCDDAC4", Offset = "0xCDDAC4", VA = "0xCDDAC4")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x600015C")]
	[Address(RVA = "0xCDDC14", Offset = "0xCDDC14", VA = "0xCDDC14")]
	private void endlessCallback()
	{
	}

	[Token(Token = "0x600015D")]
	[Address(RVA = "0xCDDC7C", Offset = "0xCDDC7C", VA = "0xCDDC7C")]
	private void cycleThroughExamples()
	{
	}

	[Token(Token = "0x600015E")]
	[Address(RVA = "0xCDE01C", Offset = "0xCDE01C", VA = "0xCDE01C")]
	public void updateValue3Example()
	{
	}

	[Token(Token = "0x600015F")]
	[Address(RVA = "0xCDE314", Offset = "0xCDE314", VA = "0xCDE314")]
	public void updateValue3ExampleUpdate(Vector3 val)
	{
	}

	[Token(Token = "0x6000160")]
	[Address(RVA = "0xCDE318", Offset = "0xCDE318", VA = "0xCDE318")]
	public void updateValue3ExampleCallback(Vector3 val)
	{
	}

	[Token(Token = "0x6000161")]
	[Address(RVA = "0xCDE368", Offset = "0xCDE368", VA = "0xCDE368")]
	public void loopTestClamp()
	{
	}

	[Token(Token = "0x6000162")]
	[Address(RVA = "0xCDE55C", Offset = "0xCDE55C", VA = "0xCDE55C")]
	public void loopTestPingPong()
	{
	}

	[Token(Token = "0x6000163")]
	[Address(RVA = "0xCDE744", Offset = "0xCDE744", VA = "0xCDE744")]
	public void colorExample()
	{
	}

	[Token(Token = "0x6000164")]
	[Address(RVA = "0xCDE81C", Offset = "0xCDE81C", VA = "0xCDE81C")]
	public void moveOnACurveExample()
	{
	}

	[Token(Token = "0x6000165")]
	[Address(RVA = "0xCDEA68", Offset = "0xCDEA68", VA = "0xCDEA68")]
	public void customTweenExample()
	{
	}

	[Token(Token = "0x6000166")]
	[Address(RVA = "0xCDEC1C", Offset = "0xCDEC1C", VA = "0xCDEC1C")]
	public void moveExample()
	{
	}

	[Token(Token = "0x6000167")]
	[Address(RVA = "0xCDED10", Offset = "0xCDED10", VA = "0xCDED10")]
	public void rotateExample()
	{
	}

	[Token(Token = "0x6000168")]
	[Address(RVA = "0xCDEFF0", Offset = "0xCDEFF0", VA = "0xCDEFF0")]
	public void rotateOnUpdate(float val)
	{
	}

	[Token(Token = "0x6000169")]
	[Address(RVA = "0xCDEFF4", Offset = "0xCDEFF4", VA = "0xCDEFF4")]
	public void rotateFinished(object hash)
	{
	}

	[Token(Token = "0x600016A")]
	[Address(RVA = "0xCDF108", Offset = "0xCDF108", VA = "0xCDF108")]
	public void scaleExample()
	{
	}

	[Token(Token = "0x600016B")]
	[Address(RVA = "0xCDF218", Offset = "0xCDF218", VA = "0xCDF218")]
	public void updateValueExample()
	{
	}

	[Token(Token = "0x600016C")]
	[Address(RVA = "0xCDF4DC", Offset = "0xCDF4DC", VA = "0xCDF4DC")]
	public void updateValueExampleCallback(float val, object hash)
	{
	}

	[Token(Token = "0x600016D")]
	[Address(RVA = "0xCDF54C", Offset = "0xCDF54C", VA = "0xCDF54C")]
	public void delayedCallExample()
	{
	}

	[Token(Token = "0x600016E")]
	[Address(RVA = "0xCDF644", Offset = "0xCDF644", VA = "0xCDF644")]
	public void delayedCallExampleCallback()
	{
	}

	[Token(Token = "0x600016F")]
	[Address(RVA = "0xCDF754", Offset = "0xCDF754", VA = "0xCDF754")]
	public void alphaExample()
	{
	}

	[Token(Token = "0x6000170")]
	[Address(RVA = "0xCDF868", Offset = "0xCDF868", VA = "0xCDF868")]
	public void moveLocalExample()
	{
	}

	[Token(Token = "0x6000171")]
	[Address(RVA = "0xCDF9B4", Offset = "0xCDF9B4", VA = "0xCDF9B4")]
	public void rotateAroundExample()
	{
	}

	[Token(Token = "0x6000172")]
	[Address(RVA = "0xCDFAEC", Offset = "0xCDFAEC", VA = "0xCDFAEC")]
	public void loopPause()
	{
	}

	[Token(Token = "0x6000173")]
	[Address(RVA = "0xCDFCB4", Offset = "0xCDFCB4", VA = "0xCDFCB4")]
	public void loopResume()
	{
	}

	[Token(Token = "0x6000174")]
	[Address(RVA = "0xCDFE7C", Offset = "0xCDFE7C", VA = "0xCDFE7C")]
	public void punchTest()
	{
	}

	[Token(Token = "0x6000175")]
	[Address(RVA = "0xCDFF00", Offset = "0xCDFF00", VA = "0xCDFF00")]
	public TestingZLegacy()
	{
	}
}
[Token(Token = "0x2000064")]
public class TestingZLegacyExt : MonoBehaviour
{
	[Token(Token = "0x2000065")]
	public delegate void NextFunc();

	[Token(Token = "0x2000066")]
	public enum TimingType
	{
		[Token(Token = "0x40001F7")]
		SteadyNormalTime,
		[Token(Token = "0x40001F8")]
		IgnoreTimeScale,
		[Token(Token = "0x40001F9")]
		HalfTimeScale,
		[Token(Token = "0x40001FA")]
		VariableTimeScale,
		[Token(Token = "0x40001FB")]
		Length
	}

	[Token(Token = "0x40001E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AnimationCurve customAnimationCurve;

	[Token(Token = "0x40001EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform pt1;

	[Token(Token = "0x40001EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform pt2;

	[Token(Token = "0x40001EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform pt3;

	[Token(Token = "0x40001ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform pt4;

	[Token(Token = "0x40001EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Transform pt5;

	[Token(Token = "0x40001EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private int exampleIter;

	[Token(Token = "0x40001F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private string[] exampleFunctions;

	[Token(Token = "0x40001F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public bool useEstimatedTime;

	[Token(Token = "0x40001F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Transform ltLogo;

	[Token(Token = "0x40001F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private TimingType timingType;

	[Token(Token = "0x40001F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private int descrTimeScaleChangeId;

	[Token(Token = "0x40001F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Vector3 origin;

	[Token(Token = "0x600017D")]
	[Address(RVA = "0xCE0618", Offset = "0xCE0618", VA = "0xCE0618")]
	private void Awake()
	{
	}

	[Token(Token = "0x600017E")]
	[Address(RVA = "0xCE061C", Offset = "0xCE061C", VA = "0xCE061C")]
	private void Start()
	{
	}

	[Token(Token = "0x600017F")]
	[Address(RVA = "0xCE0724", Offset = "0xCE0724", VA = "0xCE0724")]
	private void pauseNow()
	{
	}

	[Token(Token = "0x6000180")]
	[Address(RVA = "0xCE0798", Offset = "0xCE0798", VA = "0xCE0798")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x6000181")]
	[Address(RVA = "0xCE08E8", Offset = "0xCE08E8", VA = "0xCE08E8")]
	private void endlessCallback()
	{
	}

	[Token(Token = "0x6000182")]
	[Address(RVA = "0xCE0950", Offset = "0xCE0950", VA = "0xCE0950")]
	private void cycleThroughExamples()
	{
	}

	[Token(Token = "0x6000183")]
	[Address(RVA = "0xCE0C6C", Offset = "0xCE0C6C", VA = "0xCE0C6C")]
	public void updateValue3Example()
	{
	}

	[Token(Token = "0x6000184")]
	[Address(RVA = "0xCE0E38", Offset = "0xCE0E38", VA = "0xCE0E38")]
	public void updateValue3ExampleUpdate(Vector3 val)
	{
	}

	[Token(Token = "0x6000185")]
	[Address(RVA = "0xCE0E3C", Offset = "0xCE0E3C", VA = "0xCE0E3C")]
	public void updateValue3ExampleCallback(Vector3 val)
	{
	}

	[Token(Token = "0x6000186")]
	[Address(RVA = "0xCE0E8C", Offset = "0xCE0E8C", VA = "0xCE0E8C")]
	public void loopTestClamp()
	{
	}

	[Token(Token = "0x6000187")]
	[Address(RVA = "0xCE0FE8", Offset = "0xCE0FE8", VA = "0xCE0FE8")]
	public void loopTestPingPong()
	{
	}

	[Token(Token = "0x6000188")]
	[Address(RVA = "0xCE1138", Offset = "0xCE1138", VA = "0xCE1138")]
	public void colorExample()
	{
	}

	[Token(Token = "0x6000189")]
	[Address(RVA = "0xCE11DC", Offset = "0xCE11DC", VA = "0xCE11DC")]
	public void moveOnACurveExample()
	{
	}

	[Token(Token = "0x600018A")]
	[Address(RVA = "0xCE1404", Offset = "0xCE1404", VA = "0xCE1404")]
	public void customTweenExample()
	{
	}

	[Token(Token = "0x600018B")]
	[Address(RVA = "0xCE1584", Offset = "0xCE1584", VA = "0xCE1584")]
	public void moveExample()
	{
	}

	[Token(Token = "0x600018C")]
	[Address(RVA = "0xCE1658", Offset = "0xCE1658", VA = "0xCE1658")]
	public void rotateExample()
	{
	}

	[Token(Token = "0x600018D")]
	[Address(RVA = "0xCE1870", Offset = "0xCE1870", VA = "0xCE1870")]
	public void rotateOnUpdate(float val)
	{
	}

	[Token(Token = "0x600018E")]
	[Address(RVA = "0xCE1874", Offset = "0xCE1874", VA = "0xCE1874")]
	public void rotateFinished(object hash)
	{
	}

	[Token(Token = "0x600018F")]
	[Address(RVA = "0xCE1988", Offset = "0xCE1988", VA = "0xCE1988")]
	public void scaleExample()
	{
	}

	[Token(Token = "0x6000190")]
	[Address(RVA = "0xCE1A4C", Offset = "0xCE1A4C", VA = "0xCE1A4C")]
	public void updateValueExample()
	{
	}

	[Token(Token = "0x6000191")]
	[Address(RVA = "0xCE1BF0", Offset = "0xCE1BF0", VA = "0xCE1BF0")]
	public void updateValueExampleCallback(float val, object hash)
	{
	}

	[Token(Token = "0x6000192")]
	[Address(RVA = "0xCE1C54", Offset = "0xCE1C54", VA = "0xCE1C54")]
	public void delayedCallExample()
	{
	}

	[Token(Token = "0x6000193")]
	[Address(RVA = "0xCE1D4C", Offset = "0xCE1D4C", VA = "0xCE1D4C")]
	public void delayedCallExampleCallback()
	{
	}

	[Token(Token = "0x6000194")]
	[Address(RVA = "0xCE1E10", Offset = "0xCE1E10", VA = "0xCE1E10")]
	public void alphaExample()
	{
	}

	[Token(Token = "0x6000195")]
	[Address(RVA = "0xCE1EF8", Offset = "0xCE1EF8", VA = "0xCE1EF8")]
	public void moveLocalExample()
	{
	}

	[Token(Token = "0x6000196")]
	[Address(RVA = "0xCE2028", Offset = "0xCE2028", VA = "0xCE2028")]
	public void rotateAroundExample()
	{
	}

	[Token(Token = "0x6000197")]
	[Address(RVA = "0xCE211C", Offset = "0xCE211C", VA = "0xCE211C")]
	public void loopPause()
	{
	}

	[Token(Token = "0x6000198")]
	[Address(RVA = "0xCE2168", Offset = "0xCE2168", VA = "0xCE2168")]
	public void loopResume()
	{
	}

	[Token(Token = "0x6000199")]
	[Address(RVA = "0xCE21B4", Offset = "0xCE21B4", VA = "0xCE21B4")]
	public void punchTest()
	{
	}

	[Token(Token = "0x600019A")]
	[Address(RVA = "0xCE21F8", Offset = "0xCE21F8", VA = "0xCE21F8")]
	public TestingZLegacyExt()
	{
	}
}
[Token(Token = "0x2000068")]
public class LeanAudioStream
{
	[Token(Token = "0x40001FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int position;

	[Token(Token = "0x40001FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioClip audioClip;

	[Token(Token = "0x4000200")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float[] audioArr;

	[Token(Token = "0x60001A2")]
	[Address(RVA = "0xCE2910", Offset = "0xCE2910", VA = "0xCE2910")]
	public LeanAudioStream(float[] audioArr)
	{
	}

	[Token(Token = "0x60001A3")]
	[Address(RVA = "0xCE2940", Offset = "0xCE2940", VA = "0xCE2940")]
	public void OnAudioRead(float[] data)
	{
	}

	[Token(Token = "0x60001A4")]
	[Address(RVA = "0xCE29B4", Offset = "0xCE29B4", VA = "0xCE29B4")]
	public void OnAudioSetPosition(int newPosition)
	{
	}
}
[Token(Token = "0x2000069")]
public class LeanAudio
{
	[Token(Token = "0x4000201")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static float MIN_FREQEUNCY_PERIOD;

	[Token(Token = "0x4000202")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public static int PROCESSING_ITERATIONS_MAX;

	[Token(Token = "0x4000203")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static float[] generatedWaveDistances;

	[Token(Token = "0x4000204")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static int generatedWaveDistancesCount;

	[Token(Token = "0x4000205")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static float[] longList;

	[Token(Token = "0x60001A5")]
	[Address(RVA = "0xCD44DC", Offset = "0xCD44DC", VA = "0xCD44DC")]
	public static LeanAudioOptions options()
	{
		return null;
	}

	[Token(Token = "0x60001A6")]
	[Address(RVA = "0xCE29E0", Offset = "0xCE29E0", VA = "0xCE29E0")]
	public static LeanAudioStream createAudioStream(AnimationCurve volume, AnimationCurve frequency, [Optional] LeanAudioOptions options)
	{
		return null;
	}

	[Token(Token = "0x60001A7")]
	[Address(RVA = "0xCD461C", Offset = "0xCD461C", VA = "0xCD461C")]
	public static AudioClip createAudio(AnimationCurve volume, AnimationCurve frequency, [Optional] LeanAudioOptions options)
	{
		return null;
	}

	[Token(Token = "0x60001A8")]
	[Address(RVA = "0xCE2AB0", Offset = "0xCE2AB0", VA = "0xCE2AB0")]
	private static int createAudioWave(AnimationCurve volume, AnimationCurve frequency, LeanAudioOptions options)
	{
		return default(int);
	}

	[Token(Token = "0x60001A9")]
	[Address(RVA = "0xCE2E3C", Offset = "0xCE2E3C", VA = "0xCE2E3C")]
	private static AudioClip createAudioFromWave(int waveLength, LeanAudioOptions options)
	{
		return null;
	}

	[Token(Token = "0x60001AA")]
	[Address(RVA = "0xCE334C", Offset = "0xCE334C", VA = "0xCE334C")]
	private static void OnAudioSetPosition(int newPosition)
	{
	}

	[Token(Token = "0x60001AB")]
	[Address(RVA = "0xCE3350", Offset = "0xCE3350", VA = "0xCE3350")]
	public static AudioClip generateAudioFromCurve(AnimationCurve curve, int frequencyRate = 44100)
	{
		return null;
	}

	[Token(Token = "0x60001AC")]
	[Address(RVA = "0xCE34BC", Offset = "0xCE34BC", VA = "0xCE34BC")]
	public static AudioSource play(AudioClip audio, float volume)
	{
		return null;
	}

	[Token(Token = "0x60001AD")]
	[Address(RVA = "0xCDA5E0", Offset = "0xCDA5E0", VA = "0xCDA5E0")]
	public static AudioSource play(AudioClip audio)
	{
		return null;
	}

	[Token(Token = "0x60001AE")]
	[Address(RVA = "0xCE36B8", Offset = "0xCE36B8", VA = "0xCE36B8")]
	public static AudioSource play(AudioClip audio, Vector3 pos)
	{
		return null;
	}

	[Token(Token = "0x60001AF")]
	[Address(RVA = "0xCD5050", Offset = "0xCD5050", VA = "0xCD5050")]
	public static AudioSource play(AudioClip audio, Vector3 pos, float volume)
	{
		return null;
	}

	[Token(Token = "0x60001B0")]
	[Address(RVA = "0xCE3588", Offset = "0xCE3588", VA = "0xCE3588")]
	public static AudioSource playClipAt(AudioClip clip, Vector3 pos)
	{
		return null;
	}

	[Token(Token = "0x60001B1")]
	[Address(RVA = "0xCE3734", Offset = "0xCE3734", VA = "0xCE3734")]
	public static void printOutAudioClip(AudioClip audioClip, ref AnimationCurve curve, float scaleX = 1f)
	{
	}

	[Token(Token = "0x60001B2")]
	[Address(RVA = "0xCE38DC", Offset = "0xCE38DC", VA = "0xCE38DC")]
	public LeanAudio()
	{
	}
}
[Token(Token = "0x200006A")]
public class LeanAudioOptions
{
	[Token(Token = "0x200006B")]
	public enum LeanAudioWaveStyle
	{
		[Token(Token = "0x400020F")]
		Sine,
		[Token(Token = "0x4000210")]
		Square,
		[Token(Token = "0x4000211")]
		Sawtooth,
		[Token(Token = "0x4000212")]
		Noise
	}

	[Token(Token = "0x4000206")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public LeanAudioWaveStyle waveStyle;

	[Token(Token = "0x4000207")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3[] vibrato;

	[Token(Token = "0x4000208")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Vector3[] modulation;

	[Token(Token = "0x4000209")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int frequencyRate;

	[Token(Token = "0x400020A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float waveNoiseScale;

	[Token(Token = "0x400020B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float waveNoiseInfluence;

	[Token(Token = "0x400020C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public bool useSetData;

	[Token(Token = "0x400020D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public LeanAudioStream stream;

	[Token(Token = "0x60001B4")]
	[Address(RVA = "0xCE29BC", Offset = "0xCE29BC", VA = "0xCE29BC")]
	public LeanAudioOptions()
	{
	}

	[Token(Token = "0x60001B5")]
	[Address(RVA = "0xCDA5D8", Offset = "0xCDA5D8", VA = "0xCDA5D8")]
	public LeanAudioOptions setFrequency(int frequencyRate)
	{
		return null;
	}

	[Token(Token = "0x60001B6")]
	[Address(RVA = "0xCD4600", Offset = "0xCD4600", VA = "0xCD4600")]
	public LeanAudioOptions setVibrato(Vector3[] vibrato)
	{
		return null;
	}

	[Token(Token = "0x60001B7")]
	[Address(RVA = "0xCE393C", Offset = "0xCE393C", VA = "0xCE393C")]
	public LeanAudioOptions setWaveSine()
	{
		return null;
	}

	[Token(Token = "0x60001B8")]
	[Address(RVA = "0xCE3944", Offset = "0xCE3944", VA = "0xCE3944")]
	public LeanAudioOptions setWaveSquare()
	{
		return null;
	}

	[Token(Token = "0x60001B9")]
	[Address(RVA = "0xCE3950", Offset = "0xCE3950", VA = "0xCE3950")]
	public LeanAudioOptions setWaveSawtooth()
	{
		return null;
	}

	[Token(Token = "0x60001BA")]
	[Address(RVA = "0xCDBFF8", Offset = "0xCDBFF8", VA = "0xCDBFF8")]
	public LeanAudioOptions setWaveNoise()
	{
		return null;
	}

	[Token(Token = "0x60001BB")]
	[Address(RVA = "0xCE395C", Offset = "0xCE395C", VA = "0xCE395C")]
	public LeanAudioOptions setWaveStyle(LeanAudioWaveStyle style)
	{
		return null;
	}

	[Token(Token = "0x60001BC")]
	[Address(RVA = "0xCDC004", Offset = "0xCDC004", VA = "0xCDC004")]
	public LeanAudioOptions setWaveNoiseScale(float waveScale)
	{
		return null;
	}

	[Token(Token = "0x60001BD")]
	[Address(RVA = "0xCE3964", Offset = "0xCE3964", VA = "0xCE3964")]
	public LeanAudioOptions setWaveNoiseInfluence(float influence)
	{
		return null;
	}
}
[Token(Token = "0x200006C")]
public class LeanSmooth
{
	[Token(Token = "0x60001BE")]
	[Address(RVA = "0xCE396C", Offset = "0xCE396C", VA = "0xCE396C")]
	public static float damp(float current, float target, ref float currentVelocity, float smoothTime, float maxSpeed = -1f, float deltaTime = -1f)
	{
		return default(float);
	}

	[Token(Token = "0x60001BF")]
	[Address(RVA = "0xCE3A88", Offset = "0xCE3A88", VA = "0xCE3A88")]
	public static Vector3 damp(Vector3 current, Vector3 target, ref Vector3 currentVelocity, float smoothTime, float maxSpeed = -1f, float deltaTime = -1f)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60001C0")]
	[Address(RVA = "0xCE3B34", Offset = "0xCE3B34", VA = "0xCE3B34")]
	public static Color damp(Color current, Color target, ref Color currentVelocity, float smoothTime, float maxSpeed = -1f, float deltaTime = -1f)
	{
		return default(Color);
	}

	[Token(Token = "0x60001C1")]
	[Address(RVA = "0xCE3C0C", Offset = "0xCE3C0C", VA = "0xCE3C0C")]
	public static float spring(float current, float target, ref float currentVelocity, float smoothTime, float maxSpeed = -1f, float deltaTime = -1f, float friction = 2f, float accelRate = 0.5f)
	{
		return default(float);
	}

	[Token(Token = "0x60001C2")]
	[Address(RVA = "0xCE3CB4", Offset = "0xCE3CB4", VA = "0xCE3CB4")]
	public static Vector3 spring(Vector3 current, Vector3 target, ref Vector3 currentVelocity, float smoothTime, float maxSpeed = -1f, float deltaTime = -1f, float friction = 2f, float accelRate = 0.5f)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60001C3")]
	[Address(RVA = "0xCE3D80", Offset = "0xCE3D80", VA = "0xCE3D80")]
	public static Color spring(Color current, Color target, ref Color currentVelocity, float smoothTime, float maxSpeed = -1f, float deltaTime = -1f, float friction = 2f, float accelRate = 0.5f)
	{
		return default(Color);
	}

	[Token(Token = "0x60001C4")]
	[Address(RVA = "0xCE3E80", Offset = "0xCE3E80", VA = "0xCE3E80")]
	public static float linear(float current, float target, float moveSpeed, float deltaTime = -1f)
	{
		return default(float);
	}

	[Token(Token = "0x60001C5")]
	[Address(RVA = "0xCE3EF4", Offset = "0xCE3EF4", VA = "0xCE3EF4")]
	public static Vector3 linear(Vector3 current, Vector3 target, float moveSpeed, float deltaTime = -1f)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60001C6")]
	[Address(RVA = "0xCE4024", Offset = "0xCE4024", VA = "0xCE4024")]
	public static Color linear(Color current, Color target, float moveSpeed)
	{
		return default(Color);
	}

	[Token(Token = "0x60001C7")]
	[Address(RVA = "0xCE4178", Offset = "0xCE4178", VA = "0xCE4178")]
	public static float bounceOut(float current, float target, ref float currentVelocity, float smoothTime, float maxSpeed = -1f, float deltaTime = -1f, float friction = 2f, float accelRate = 0.5f, float hitDamping = 0.9f)
	{
		return default(float);
	}

	[Token(Token = "0x60001C8")]
	[Address(RVA = "0xCE4260", Offset = "0xCE4260", VA = "0xCE4260")]
	public static Vector3 bounceOut(Vector3 current, Vector3 target, ref Vector3 currentVelocity, float smoothTime, float maxSpeed = -1f, float deltaTime = -1f, float friction = 2f, float accelRate = 0.5f, float hitDamping = 0.9f)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60001C9")]
	[Address(RVA = "0xCE433C", Offset = "0xCE433C", VA = "0xCE433C")]
	public static Color bounceOut(Color current, Color target, ref Color currentVelocity, float smoothTime, float maxSpeed = -1f, float deltaTime = -1f, float friction = 2f, float accelRate = 0.5f, float hitDamping = 0.9f)
	{
		return default(Color);
	}

	[Token(Token = "0x60001CA")]
	[Address(RVA = "0xCE4450", Offset = "0xCE4450", VA = "0xCE4450")]
	public LeanSmooth()
	{
	}
}
[Token(Token = "0x200006D")]
public class LeanTester : MonoBehaviour
{
	[Token(Token = "0x200006E")]
	[CompilerGenerated]
	private sealed class <timeoutCheck>d__2 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000214")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000215")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000216")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LeanTester <>4__this;

		[Token(Token = "0x4000217")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <pauseEndTime>5__2;

		[Token(Token = "0x17000006")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60001D1")]
			[Address(RVA = "0xCE4A94", Offset = "0xCE4A94", VA = "0xCE4A94", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000007")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60001D3")]
			[Address(RVA = "0xCE4ADC", Offset = "0xCE4ADC", VA = "0xCE4ADC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60001CE")]
		[Address(RVA = "0xCE44EC", Offset = "0xCE44EC", VA = "0xCE44EC")]
		[DebuggerHidden]
		public <timeoutCheck>d__2(int <>1__state)
		{
		}

		[Token(Token = "0x60001CF")]
		[Address(RVA = "0xCE4524", Offset = "0xCE4524", VA = "0xCE4524", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60001D0")]
		[Address(RVA = "0xCE4528", Offset = "0xCE4528", VA = "0xCE4528", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60001D2")]
		[Address(RVA = "0xCE4A9C", Offset = "0xCE4A9C", VA = "0xCE4A9C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000213")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float timeout;

	[Token(Token = "0x60001CB")]
	[Address(RVA = "0xCE4458", Offset = "0xCE4458", VA = "0xCE4458")]
	public void Start()
	{
	}

	[Token(Token = "0x60001CC")]
	[Address(RVA = "0xCE4478", Offset = "0xCE4478", VA = "0xCE4478")]
	[IteratorStateMachine(typeof(<timeoutCheck>d__2))]
	private IEnumerator timeoutCheck()
	{
		return null;
	}

	[Token(Token = "0x60001CD")]
	[Address(RVA = "0xCE4514", Offset = "0xCE4514", VA = "0xCE4514")]
	public LeanTester()
	{
	}
}
[Token(Token = "0x200006F")]
public class LeanTest
{
	[Token(Token = "0x4000218")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int expected;

	[Token(Token = "0x4000219")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	private static int tests;

	[Token(Token = "0x400021A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static int passes;

	[Token(Token = "0x400021B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public static float timeout;

	[Token(Token = "0x400021C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static bool timeoutStarted;

	[Token(Token = "0x400021D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
	public static bool testsFinished;

	[Token(Token = "0x60001D4")]
	[Address(RVA = "0xCE4AE4", Offset = "0xCE4AE4", VA = "0xCE4AE4")]
	public static void debug(string name, bool didPass, [Optional] string failExplaination)
	{
	}

	[Token(Token = "0x60001D5")]
	[Address(RVA = "0xCE4B50", Offset = "0xCE4B50", VA = "0xCE4B50")]
	public static void expect(bool didPass, string definition, [Optional] string failExplaination)
	{
	}

	[Token(Token = "0x60001D6")]
	[Address(RVA = "0xCE54E4", Offset = "0xCE54E4", VA = "0xCE54E4")]
	public static string padRight(int len)
	{
		return null;
	}

	[Token(Token = "0x60001D7")]
	[Address(RVA = "0xCE51C4", Offset = "0xCE51C4", VA = "0xCE51C4")]
	public static float printOutLength(string str)
	{
		return default(float);
	}

	[Token(Token = "0x60001D8")]
	[Address(RVA = "0xCE5558", Offset = "0xCE5558", VA = "0xCE5558")]
	public static string formatBC(string str, string color)
	{
		return null;
	}

	[Token(Token = "0x60001D9")]
	[Address(RVA = "0xCE4688", Offset = "0xCE4688", VA = "0xCE4688")]
	public static string formatB(string str)
	{
		return null;
	}

	[Token(Token = "0x60001DA")]
	[Address(RVA = "0xCE52F0", Offset = "0xCE52F0", VA = "0xCE52F0")]
	public static string formatC(string str, string color)
	{
		return null;
	}

	[Token(Token = "0x60001DB")]
	[Address(RVA = "0xCE46F4", Offset = "0xCE46F4", VA = "0xCE46F4")]
	public static void overview()
	{
	}

	[Token(Token = "0x60001DC")]
	[Address(RVA = "0xCE55C0", Offset = "0xCE55C0", VA = "0xCE55C0")]
	public LeanTest()
	{
	}
}
[Token(Token = "0x2000070")]
public enum TweenAction
{
	[Token(Token = "0x400021F")]
	MOVE_X,
	[Token(Token = "0x4000220")]
	MOVE_Y,
	[Token(Token = "0x4000221")]
	MOVE_Z,
	[Token(Token = "0x4000222")]
	MOVE_LOCAL_X,
	[Token(Token = "0x4000223")]
	MOVE_LOCAL_Y,
	[Token(Token = "0x4000224")]
	MOVE_LOCAL_Z,
	[Token(Token = "0x4000225")]
	MOVE_CURVED,
	[Token(Token = "0x4000226")]
	MOVE_CURVED_LOCAL,
	[Token(Token = "0x4000227")]
	MOVE_SPLINE,
	[Token(Token = "0x4000228")]
	MOVE_SPLINE_LOCAL,
	[Token(Token = "0x4000229")]
	SCALE_X,
	[Token(Token = "0x400022A")]
	SCALE_Y,
	[Token(Token = "0x400022B")]
	SCALE_Z,
	[Token(Token = "0x400022C")]
	ROTATE_X,
	[Token(Token = "0x400022D")]
	ROTATE_Y,
	[Token(Token = "0x400022E")]
	ROTATE_Z,
	[Token(Token = "0x400022F")]
	ROTATE_AROUND,
	[Token(Token = "0x4000230")]
	ROTATE_AROUND_LOCAL,
	[Token(Token = "0x4000231")]
	CANVAS_ROTATEAROUND,
	[Token(Token = "0x4000232")]
	CANVAS_ROTATEAROUND_LOCAL,
	[Token(Token = "0x4000233")]
	CANVAS_PLAYSPRITE,
	[Token(Token = "0x4000234")]
	ALPHA,
	[Token(Token = "0x4000235")]
	TEXT_ALPHA,
	[Token(Token = "0x4000236")]
	CANVAS_ALPHA,
	[Token(Token = "0x4000237")]
	CANVASGROUP_ALPHA,
	[Token(Token = "0x4000238")]
	ALPHA_VERTEX,
	[Token(Token = "0x4000239")]
	COLOR,
	[Token(Token = "0x400023A")]
	CALLBACK_COLOR,
	[Token(Token = "0x400023B")]
	TEXT_COLOR,
	[Token(Token = "0x400023C")]
	CANVAS_COLOR,
	[Token(Token = "0x400023D")]
	CANVAS_MOVE_X,
	[Token(Token = "0x400023E")]
	CANVAS_MOVE_Y,
	[Token(Token = "0x400023F")]
	CANVAS_MOVE_Z,
	[Token(Token = "0x4000240")]
	CALLBACK,
	[Token(Token = "0x4000241")]
	MOVE,
	[Token(Token = "0x4000242")]
	MOVE_LOCAL,
	[Token(Token = "0x4000243")]
	MOVE_TO_TRANSFORM,
	[Token(Token = "0x4000244")]
	ROTATE,
	[Token(Token = "0x4000245")]
	ROTATE_LOCAL,
	[Token(Token = "0x4000246")]
	SCALE,
	[Token(Token = "0x4000247")]
	VALUE3,
	[Token(Token = "0x4000248")]
	GUI_MOVE,
	[Token(Token = "0x4000249")]
	GUI_MOVE_MARGIN,
	[Token(Token = "0x400024A")]
	GUI_SCALE,
	[Token(Token = "0x400024B")]
	GUI_ALPHA,
	[Token(Token = "0x400024C")]
	GUI_ROTATE,
	[Token(Token = "0x400024D")]
	DELAYED_SOUND,
	[Token(Token = "0x400024E")]
	CANVAS_MOVE,
	[Token(Token = "0x400024F")]
	CANVAS_SCALE,
	[Token(Token = "0x4000250")]
	CANVAS_SIZEDELTA,
	[Token(Token = "0x4000251")]
	FOLLOW
}
[Token(Token = "0x2000071")]
public enum LeanTweenType
{
	[Token(Token = "0x4000253")]
	notUsed,
	[Token(Token = "0x4000254")]
	linear,
	[Token(Token = "0x4000255")]
	easeOutQuad,
	[Token(Token = "0x4000256")]
	easeInQuad,
	[Token(Token = "0x4000257")]
	easeInOutQuad,
	[Token(Token = "0x4000258")]
	easeInCubic,
	[Token(Token = "0x4000259")]
	easeOutCubic,
	[Token(Token = "0x400025A")]
	easeInOutCubic,
	[Token(Token = "0x400025B")]
	easeInQuart,
	[Token(Token = "0x400025C")]
	easeOutQuart,
	[Token(Token = "0x400025D")]
	easeInOutQuart,
	[Token(Token = "0x400025E")]
	easeInQuint,
	[Token(Token = "0x400025F")]
	easeOutQuint,
	[Token(Token = "0x4000260")]
	easeInOutQuint,
	[Token(Token = "0x4000261")]
	easeInSine,
	[Token(Token = "0x4000262")]
	easeOutSine,
	[Token(Token = "0x4000263")]
	easeInOutSine,
	[Token(Token = "0x4000264")]
	easeInExpo,
	[Token(Token = "0x4000265")]
	easeOutExpo,
	[Token(Token = "0x4000266")]
	easeInOutExpo,
	[Token(Token = "0x4000267")]
	easeInCirc,
	[Token(Token = "0x4000268")]
	easeOutCirc,
	[Token(Token = "0x4000269")]
	easeInOutCirc,
	[Token(Token = "0x400026A")]
	easeInBounce,
	[Token(Token = "0x400026B")]
	easeOutBounce,
	[Token(Token = "0x400026C")]
	easeInOutBounce,
	[Token(Token = "0x400026D")]
	easeInBack,
	[Token(Token = "0x400026E")]
	easeOutBack,
	[Token(Token = "0x400026F")]
	easeInOutBack,
	[Token(Token = "0x4000270")]
	easeInElastic,
	[Token(Token = "0x4000271")]
	easeOutElastic,
	[Token(Token = "0x4000272")]
	easeInOutElastic,
	[Token(Token = "0x4000273")]
	easeSpring,
	[Token(Token = "0x4000274")]
	easeShake,
	[Token(Token = "0x4000275")]
	punch,
	[Token(Token = "0x4000276")]
	once,
	[Token(Token = "0x4000277")]
	clamp,
	[Token(Token = "0x4000278")]
	pingPong,
	[Token(Token = "0x4000279")]
	animationCurve
}
[Token(Token = "0x2000072")]
public enum LeanProp
{
	[Token(Token = "0x400027B")]
	position,
	[Token(Token = "0x400027C")]
	localPosition,
	[Token(Token = "0x400027D")]
	x,
	[Token(Token = "0x400027E")]
	y,
	[Token(Token = "0x400027F")]
	z,
	[Token(Token = "0x4000280")]
	localX,
	[Token(Token = "0x4000281")]
	localY,
	[Token(Token = "0x4000282")]
	localZ,
	[Token(Token = "0x4000283")]
	scale,
	[Token(Token = "0x4000284")]
	color
}
[Token(Token = "0x2000073")]
public class LeanTween : MonoBehaviour
{
	[Token(Token = "0x4000285")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static bool throwErrors;

	[Token(Token = "0x4000286")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public static float tau;

	[Token(Token = "0x4000287")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static float PI_DIV2;

	[Token(Token = "0x4000288")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static LTSeq[] sequences;

	[Token(Token = "0x4000289")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static LTDescr[] tweens;

	[Token(Token = "0x400028A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private static int[] tweensFinished;

	[Token(Token = "0x400028B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private static int[] tweensFinishedIds;

	[Token(Token = "0x400028C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private static LTDescr tween;

	[Token(Token = "0x400028D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private static int tweenMaxSearch;

	[Token(Token = "0x400028E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private static int maxTweens;

	[Token(Token = "0x400028F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private static int maxSequences;

	[Token(Token = "0x4000290")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private static int frameRendered;

	[Token(Token = "0x4000291")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private static GameObject _tweenEmpty;

	[Token(Token = "0x4000292")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public static float dtEstimated;

	[Token(Token = "0x4000293")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public static float dtManual;

	[Token(Token = "0x4000294")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public static float dtActual;

	[Token(Token = "0x4000295")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private static uint global_counter;

	[Token(Token = "0x4000296")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private static int i;

	[Token(Token = "0x4000297")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private static int j;

	[Token(Token = "0x4000298")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private static int finishedCnt;

	[Token(Token = "0x4000299")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public static AnimationCurve punch;

	[Token(Token = "0x400029A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public static AnimationCurve shake;

	[Token(Token = "0x400029B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private static int maxTweenReached;

	[Token(Token = "0x400029C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public static int startSearch;

	[Token(Token = "0x400029D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public static LTDescr d;

	[Token(Token = "0x400029E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private static Action<LTEvent>[] eventListeners;

	[Token(Token = "0x400029F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private static GameObject[] goListeners;

	[Token(Token = "0x40002A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private static int eventsMaxSearch;

	[Token(Token = "0x40002A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	public static int EVENTS_MAX;

	[Token(Token = "0x40002A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public static int LISTENERS_MAX;

	[Token(Token = "0x40002A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private static int INIT_LISTENERS_MAX;

	[Token(Token = "0x17000008")]
	public static int maxSearch
	{
		[Token(Token = "0x60001DF")]
		[Address(RVA = "0xCE56D0", Offset = "0xCE56D0", VA = "0xCE56D0")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000009")]
	public static int maxSimulataneousTweens
	{
		[Token(Token = "0x60001E0")]
		[Address(RVA = "0xCE5728", Offset = "0xCE5728", VA = "0xCE5728")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x1700000A")]
	public static int tweensRunning
	{
		[Token(Token = "0x60001E1")]
		[Address(RVA = "0xCE5780", Offset = "0xCE5780", VA = "0xCE5780")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x1700000B")]
	public static GameObject tweenEmpty
	{
		[Token(Token = "0x600020C")]
		[Address(RVA = "0xCE8F10", Offset = "0xCE8F10", VA = "0xCE8F10")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60001DE")]
	[Address(RVA = "0xCE5618", Offset = "0xCE5618", VA = "0xCE5618")]
	public static void init()
	{
	}

	[Token(Token = "0x60001E2")]
	[Address(RVA = "0xCE5670", Offset = "0xCE5670", VA = "0xCE5670")]
	public static void init(int maxSimultaneousTweens)
	{
	}

	[Token(Token = "0x60001E3")]
	[Address(RVA = "0xCE5838", Offset = "0xCE5838", VA = "0xCE5838")]
	public static void init(int maxSimultaneousTweens, int maxSimultaneousSequences)
	{
	}

	[Token(Token = "0x60001E4")]
	[Address(RVA = "0xCE5CF0", Offset = "0xCE5CF0", VA = "0xCE5CF0")]
	public static void reset()
	{
	}

	[Token(Token = "0x60001E5")]
	[Address(RVA = "0xCE5E48", Offset = "0xCE5E48", VA = "0xCE5E48")]
	public void Update()
	{
	}

	[Token(Token = "0x60001E6")]
	[Address(RVA = "0xCE62DC", Offset = "0xCE62DC", VA = "0xCE62DC")]
	private static void onLevelWasLoaded54(Scene scene, LoadSceneMode mode)
	{
	}

	[Token(Token = "0x60001E7")]
	[Address(RVA = "0xCE633C", Offset = "0xCE633C", VA = "0xCE633C")]
	private static void internalOnLevelWasLoaded(int lvl)
	{
	}

	[Token(Token = "0x60001E8")]
	[Address(RVA = "0xCE5E94", Offset = "0xCE5E94", VA = "0xCE5E94")]
	public static void update()
	{
	}

	[Token(Token = "0x60001E9")]
	[Address(RVA = "0xCE66A8", Offset = "0xCE66A8", VA = "0xCE66A8")]
	public static void removeTween(int i, int uniqueId)
	{
	}

	[Token(Token = "0x60001EA")]
	[Address(RVA = "0xCE638C", Offset = "0xCE638C", VA = "0xCE638C")]
	public static void removeTween(int i)
	{
	}

	[Token(Token = "0x60001EB")]
	[Address(RVA = "0xCE6768", Offset = "0xCE6768", VA = "0xCE6768")]
	public static Vector3[] add(Vector3[] a, Vector3 b)
	{
		return null;
	}

	[Token(Token = "0x60001EC")]
	[Address(RVA = "0xCE68D4", Offset = "0xCE68D4", VA = "0xCE68D4")]
	public static float closestRot(float from, float to)
	{
		return default(float);
	}

	[Token(Token = "0x60001ED")]
	[Address(RVA = "0xCE6924", Offset = "0xCE6924", VA = "0xCE6924")]
	public static void cancelAll()
	{
	}

	[Token(Token = "0x60001EE")]
	[Address(RVA = "0xCE6974", Offset = "0xCE6974", VA = "0xCE6974")]
	public static void cancelAll(bool callComplete)
	{
	}

	[Token(Token = "0x60001EF")]
	[Address(RVA = "0xCD4E88", Offset = "0xCD4E88", VA = "0xCD4E88")]
	public static void cancel(GameObject gameObject)
	{
	}

	[Token(Token = "0x60001F0")]
	[Address(RVA = "0xCE6B3C", Offset = "0xCE6B3C", VA = "0xCE6B3C")]
	public static void cancel(GameObject gameObject, bool callOnComplete)
	{
	}

	[Token(Token = "0x60001F1")]
	[Address(RVA = "0xCE6CA4", Offset = "0xCE6CA4", VA = "0xCE6CA4")]
	public static void cancel(RectTransform rect)
	{
	}

	[Token(Token = "0x60001F2")]
	[Address(RVA = "0xCE6D18", Offset = "0xCE6D18", VA = "0xCE6D18")]
	public static void cancel(GameObject gameObject, int uniqueId, bool callOnComplete = false)
	{
	}

	[Token(Token = "0x60001F3")]
	[Address(RVA = "0xCE6F7C", Offset = "0xCE6F7C", VA = "0xCE6F7C")]
	public static void cancel(LTRect ltRect, int uniqueId)
	{
	}

	[Token(Token = "0x60001F4")]
	[Address(RVA = "0xCDDFC4", Offset = "0xCDDFC4", VA = "0xCDDFC4")]
	public static void cancel(int uniqueId)
	{
	}

	[Token(Token = "0x60001F5")]
	[Address(RVA = "0xCE708C", Offset = "0xCE708C", VA = "0xCE708C")]
	public static void cancel(int uniqueId, bool callOnComplete)
	{
	}

	[Token(Token = "0x60001F6")]
	[Address(RVA = "0xCE72D0", Offset = "0xCE72D0", VA = "0xCE72D0")]
	public static LTDescr descr(int uniqueId)
	{
		return null;
	}

	[Token(Token = "0x60001F7")]
	[Address(RVA = "0xCE7514", Offset = "0xCE7514", VA = "0xCE7514")]
	public static LTDescr description(int uniqueId)
	{
		return null;
	}

	[Token(Token = "0x60001F8")]
	[Address(RVA = "0xCE7568", Offset = "0xCE7568", VA = "0xCE7568")]
	public static LTDescr[] descriptions([Optional] GameObject gameObject)
	{
		return null;
	}

	[Token(Token = "0x60001F9")]
	[Address(RVA = "0xCE77F8", Offset = "0xCE77F8", VA = "0xCE77F8")]
	[Obsolete("Use 'pause( id )' instead")]
	public static void pause(GameObject gameObject, int uniqueId)
	{
	}

	[Token(Token = "0x60001FA")]
	[Address(RVA = "0xCE784C", Offset = "0xCE784C", VA = "0xCE784C")]
	public static void pause(int uniqueId)
	{
	}

	[Token(Token = "0x60001FB")]
	[Address(RVA = "0xCDFB64", Offset = "0xCDFB64", VA = "0xCDFB64")]
	public static void pause(GameObject gameObject)
	{
	}

	[Token(Token = "0x60001FC")]
	[Address(RVA = "0xCE7924", Offset = "0xCE7924", VA = "0xCE7924")]
	public static void pauseAll()
	{
	}

	[Token(Token = "0x60001FD")]
	[Address(RVA = "0xCE79E8", Offset = "0xCE79E8", VA = "0xCE79E8")]
	public static void resumeAll()
	{
	}

	[Token(Token = "0x60001FE")]
	[Address(RVA = "0xCE7AAC", Offset = "0xCE7AAC", VA = "0xCE7AAC")]
	[Obsolete("Use 'resume( id )' instead")]
	public static void resume(GameObject gameObject, int uniqueId)
	{
	}

	[Token(Token = "0x60001FF")]
	[Address(RVA = "0xCE7B00", Offset = "0xCE7B00", VA = "0xCE7B00")]
	public static void resume(int uniqueId)
	{
	}

	[Token(Token = "0x6000200")]
	[Address(RVA = "0xCDFD2C", Offset = "0xCDFD2C", VA = "0xCDFD2C")]
	public static void resume(GameObject gameObject)
	{
	}

	[Token(Token = "0x6000201")]
	[Address(RVA = "0xCE7BD8", Offset = "0xCE7BD8", VA = "0xCE7BD8")]
	public static bool isPaused([Optional] GameObject gameObject)
	{
		return default(bool);
	}

	[Token(Token = "0x6000202")]
	[Address(RVA = "0xCE7E48", Offset = "0xCE7E48", VA = "0xCE7E48")]
	public static bool isPaused(RectTransform rect)
	{
		return default(bool);
	}

	[Token(Token = "0x6000203")]
	[Address(RVA = "0xCE8098", Offset = "0xCE8098", VA = "0xCE8098")]
	public static bool isPaused(int uniqueId)
	{
		return default(bool);
	}

	[Token(Token = "0x6000204")]
	[Address(RVA = "0xCE7EB8", Offset = "0xCE7EB8", VA = "0xCE7EB8")]
	public static bool isTweening([Optional] GameObject gameObject)
	{
		return default(bool);
	}

	[Token(Token = "0x6000205")]
	[Address(RVA = "0xCE81E8", Offset = "0xCE81E8", VA = "0xCE81E8")]
	public static bool isTweening(RectTransform rect)
	{
		return default(bool);
	}

	[Token(Token = "0x6000206")]
	[Address(RVA = "0xCE8258", Offset = "0xCE8258", VA = "0xCE8258")]
	public static bool isTweening(int uniqueId)
	{
		return default(bool);
	}

	[Token(Token = "0x6000207")]
	[Address(RVA = "0xCE8354", Offset = "0xCE8354", VA = "0xCE8354")]
	public static bool isTweening(LTRect ltRect)
	{
		return default(bool);
	}

	[Token(Token = "0x6000208")]
	[Address(RVA = "0xCE8468", Offset = "0xCE8468", VA = "0xCE8468")]
	public static void drawBezierPath(Vector3 a, Vector3 b, Vector3 c, Vector3 d, float arrowSize = 0f, [Optional] Transform arrowTransform)
	{
	}

	[Token(Token = "0x6000209")]
	[Address(RVA = "0xCE8A98", Offset = "0xCE8A98", VA = "0xCE8A98")]
	public static object logError(string error)
	{
		return null;
	}

	[Token(Token = "0x600020A")]
	[Address(RVA = "0xCE8B38", Offset = "0xCE8B38", VA = "0xCE8B38")]
	public static LTDescr options(LTDescr seed)
	{
		return null;
	}

	[Token(Token = "0x600020B")]
	[Address(RVA = "0xCE8BA8", Offset = "0xCE8BA8", VA = "0xCE8BA8")]
	public static LTDescr options()
	{
		return null;
	}

	[Token(Token = "0x600020D")]
	[Address(RVA = "0xCE8F78", Offset = "0xCE8F78", VA = "0xCE8F78")]
	private static LTDescr pushNewTween(GameObject gameObject, Vector3 to, float time, LTDescr tween)
	{
		return null;
	}

	[Token(Token = "0x600020E")]
	[Address(RVA = "0xCD97A8", Offset = "0xCD97A8", VA = "0xCD97A8")]
	public static LTDescr play(RectTransform rectTransform, Sprite[] sprites)
	{
		return null;
	}

	[Token(Token = "0x600020F")]
	[Address(RVA = "0xCD7764", Offset = "0xCD7764", VA = "0xCD7764")]
	public static LTSeq sequence(bool initSequence = true)
	{
		return null;
	}

	[Token(Token = "0x6000210")]
	[Address(RVA = "0xCD30F8", Offset = "0xCD30F8", VA = "0xCD30F8")]
	public static LTDescr alpha(GameObject gameObject, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000211")]
	[Address(RVA = "0xCE9094", Offset = "0xCE9094", VA = "0xCE9094")]
	public static LTDescr alpha(LTRect ltRect, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000212")]
	[Address(RVA = "0xCD9268", Offset = "0xCD9268", VA = "0xCD9268")]
	public static LTDescr textAlpha(RectTransform rectTransform, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000213")]
	[Address(RVA = "0xCE9144", Offset = "0xCE9144", VA = "0xCE9144")]
	public static LTDescr alphaText(RectTransform rectTransform, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000214")]
	[Address(RVA = "0xCD91C4", Offset = "0xCD91C4", VA = "0xCD91C4")]
	public static LTDescr alphaCanvas(CanvasGroup canvasGroup, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000215")]
	[Address(RVA = "0xCE91E8", Offset = "0xCE91E8", VA = "0xCE91E8")]
	public static LTDescr alphaVertex(GameObject gameObject, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000216")]
	[Address(RVA = "0xCD2EDC", Offset = "0xCD2EDC", VA = "0xCD2EDC")]
	public static LTDescr color(GameObject gameObject, Color to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000217")]
	[Address(RVA = "0xCD930C", Offset = "0xCD930C", VA = "0xCD930C")]
	public static LTDescr textColor(RectTransform rectTransform, Color to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000218")]
	[Address(RVA = "0xCE9274", Offset = "0xCE9274", VA = "0xCE9274")]
	public static LTDescr colorText(RectTransform rectTransform, Color to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000219")]
	[Address(RVA = "0xCD5100", Offset = "0xCD5100", VA = "0xCD5100")]
	public static LTDescr delayedCall(float delayTime, Action callback)
	{
		return null;
	}

	[Token(Token = "0x600021A")]
	[Address(RVA = "0xCE934C", Offset = "0xCE934C", VA = "0xCE934C")]
	public static LTDescr delayedCall(float delayTime, Action<object> callback)
	{
		return null;
	}

	[Token(Token = "0x600021B")]
	[Address(RVA = "0xCD2740", Offset = "0xCD2740", VA = "0xCD2740")]
	public static LTDescr delayedCall(GameObject gameObject, float delayTime, Action callback)
	{
		return null;
	}

	[Token(Token = "0x600021C")]
	[Address(RVA = "0xCE942C", Offset = "0xCE942C", VA = "0xCE942C")]
	public static LTDescr delayedCall(GameObject gameObject, float delayTime, Action<object> callback)
	{
		return null;
	}

	[Token(Token = "0x600021D")]
	[Address(RVA = "0xCE9510", Offset = "0xCE9510", VA = "0xCE9510")]
	public static LTDescr destroyAfter(LTRect rect, float delayTime)
	{
		return null;
	}

	[Token(Token = "0x600021E")]
	[Address(RVA = "0xCD26A4", Offset = "0xCD26A4", VA = "0xCD26A4")]
	public static LTDescr move(GameObject gameObject, Vector3 to, float time)
	{
		return null;
	}

	[Token(Token = "0x600021F")]
	[Address(RVA = "0xCE9600", Offset = "0xCE9600", VA = "0xCE9600")]
	public static LTDescr move(GameObject gameObject, Vector2 to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000220")]
	[Address(RVA = "0xCDA874", Offset = "0xCDA874", VA = "0xCDA874")]
	public static LTDescr move(GameObject gameObject, Vector3[] to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000221")]
	[Address(RVA = "0xCE96B8", Offset = "0xCE96B8", VA = "0xCE96B8")]
	public static LTDescr move(GameObject gameObject, LTBezierPath to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000222")]
	[Address(RVA = "0xCDCDD8", Offset = "0xCDCDD8", VA = "0xCDCDD8")]
	public static LTDescr move(GameObject gameObject, LTSpline to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000223")]
	[Address(RVA = "0xCDAEF4", Offset = "0xCDAEF4", VA = "0xCDAEF4")]
	public static LTDescr moveSpline(GameObject gameObject, Vector3[] to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000224")]
	[Address(RVA = "0xCDC48C", Offset = "0xCDC48C", VA = "0xCDC48C")]
	public static LTDescr moveSpline(GameObject gameObject, LTSpline to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000225")]
	[Address(RVA = "0xCDB2EC", Offset = "0xCDB2EC", VA = "0xCDB2EC")]
	public static LTDescr moveSplineLocal(GameObject gameObject, Vector3[] to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000226")]
	[Address(RVA = "0xCE9790", Offset = "0xCE9790", VA = "0xCE9790")]
	public static LTDescr move(LTRect ltRect, Vector2 to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000227")]
	[Address(RVA = "0xCE9840", Offset = "0xCE9840", VA = "0xCE9840")]
	public static LTDescr moveMargin(LTRect ltRect, Vector2 to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000228")]
	[Address(RVA = "0xCD2618", Offset = "0xCD2618", VA = "0xCD2618")]
	public static LTDescr moveX(GameObject gameObject, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000229")]
	[Address(RVA = "0xCD4854", Offset = "0xCD4854", VA = "0xCD4854")]
	public static LTDescr moveY(GameObject gameObject, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x600022A")]
	[Address(RVA = "0xCD2FE0", Offset = "0xCD2FE0", VA = "0xCD2FE0")]
	public static LTDescr moveZ(GameObject gameObject, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x600022B")]
	[Address(RVA = "0xCD7C3C", Offset = "0xCD7C3C", VA = "0xCD7C3C")]
	public static LTDescr moveLocal(GameObject gameObject, Vector3 to, float time)
	{
		return null;
	}

	[Token(Token = "0x600022C")]
	[Address(RVA = "0xCDA9D8", Offset = "0xCDA9D8", VA = "0xCDA9D8")]
	public static LTDescr moveLocal(GameObject gameObject, Vector3[] to, float time)
	{
		return null;
	}

	[Token(Token = "0x600022D")]
	[Address(RVA = "0xCD9EB8", Offset = "0xCD9EB8", VA = "0xCD9EB8")]
	public static LTDescr moveLocalX(GameObject gameObject, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x600022E")]
	[Address(RVA = "0xCD306C", Offset = "0xCD306C", VA = "0xCD306C")]
	public static LTDescr moveLocalY(GameObject gameObject, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x600022F")]
	[Address(RVA = "0xCD3F64", Offset = "0xCD3F64", VA = "0xCD3F64")]
	public static LTDescr moveLocalZ(GameObject gameObject, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000230")]
	[Address(RVA = "0xCE98F0", Offset = "0xCE98F0", VA = "0xCE98F0")]
	public static LTDescr moveLocal(GameObject gameObject, LTBezierPath to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000231")]
	[Address(RVA = "0xCE99C8", Offset = "0xCE99C8", VA = "0xCE99C8")]
	public static LTDescr moveLocal(GameObject gameObject, LTSpline to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000232")]
	[Address(RVA = "0xCE9AA0", Offset = "0xCE9AA0", VA = "0xCE9AA0")]
	public static LTDescr move(GameObject gameObject, Transform to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000233")]
	[Address(RVA = "0xCDEF54", Offset = "0xCDEF54", VA = "0xCDEF54")]
	public static LTDescr rotate(GameObject gameObject, Vector3 to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000234")]
	[Address(RVA = "0xCE9B84", Offset = "0xCE9B84", VA = "0xCE9B84")]
	public static LTDescr rotate(LTRect ltRect, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000235")]
	[Address(RVA = "0xCE9C28", Offset = "0xCE9C28", VA = "0xCE9C28")]
	public static LTDescr rotateLocal(GameObject gameObject, Vector3 to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000236")]
	[Address(RVA = "0xCE9CC4", Offset = "0xCE9CC4", VA = "0xCE9CC4")]
	public static LTDescr rotateX(GameObject gameObject, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000237")]
	[Address(RVA = "0xCE9D50", Offset = "0xCE9D50", VA = "0xCE9D50")]
	public static LTDescr rotateY(GameObject gameObject, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000238")]
	[Address(RVA = "0xCE9DDC", Offset = "0xCE9DDC", VA = "0xCE9DDC")]
	public static LTDescr rotateZ(GameObject gameObject, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000239")]
	[Address(RVA = "0xCD24BC", Offset = "0xCD24BC", VA = "0xCD24BC")]
	public static LTDescr rotateAround(GameObject gameObject, Vector3 axis, float add, float time)
	{
		return null;
	}

	[Token(Token = "0x600023A")]
	[Address(RVA = "0xCD4EE0", Offset = "0xCD4EE0", VA = "0xCD4EE0")]
	public static LTDescr rotateAroundLocal(GameObject gameObject, Vector3 axis, float add, float time)
	{
		return null;
	}

	[Token(Token = "0x600023B")]
	[Address(RVA = "0xCD257C", Offset = "0xCD257C", VA = "0xCD257C")]
	public static LTDescr scale(GameObject gameObject, Vector3 to, float time)
	{
		return null;
	}

	[Token(Token = "0x600023C")]
	[Address(RVA = "0xCE9E68", Offset = "0xCE9E68", VA = "0xCE9E68")]
	public static LTDescr scale(LTRect ltRect, Vector2 to, float time)
	{
		return null;
	}

	[Token(Token = "0x600023D")]
	[Address(RVA = "0xCE9F18", Offset = "0xCE9F18", VA = "0xCE9F18")]
	public static LTDescr scaleX(GameObject gameObject, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x600023E")]
	[Address(RVA = "0xCDE6B8", Offset = "0xCDE6B8", VA = "0xCDE6B8")]
	public static LTDescr scaleY(GameObject gameObject, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x600023F")]
	[Address(RVA = "0xCDE4D0", Offset = "0xCDE4D0", VA = "0xCDE4D0")]
	public static LTDescr scaleZ(GameObject gameObject, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000240")]
	[Address(RVA = "0xCD4FA0", Offset = "0xCD4FA0", VA = "0xCD4FA0")]
	public static LTDescr value(GameObject gameObject, float from, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000241")]
	[Address(RVA = "0xCE9FA4", Offset = "0xCE9FA4", VA = "0xCE9FA4")]
	public static LTDescr value(float from, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000242")]
	[Address(RVA = "0xCD82A8", Offset = "0xCD82A8", VA = "0xCD82A8")]
	public static LTDescr value(GameObject gameObject, Vector2 from, Vector2 to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000243")]
	[Address(RVA = "0xCD8380", Offset = "0xCD8380", VA = "0xCD8380")]
	public static LTDescr value(GameObject gameObject, Vector3 from, Vector3 to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000244")]
	[Address(RVA = "0xCD6DD0", Offset = "0xCD6DD0", VA = "0xCD6DD0")]
	public static LTDescr value(GameObject gameObject, Color from, Color to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000245")]
	[Address(RVA = "0xCEA058", Offset = "0xCEA058", VA = "0xCEA058")]
	public static LTDescr value(GameObject gameObject, Action<float> callOnUpdate, float from, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000246")]
	[Address(RVA = "0xCEA13C", Offset = "0xCEA13C", VA = "0xCEA13C")]
	public static LTDescr value(GameObject gameObject, Action<float, float> callOnUpdateRatio, float from, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000247")]
	[Address(RVA = "0xCEA220", Offset = "0xCEA220", VA = "0xCEA220")]
	public static LTDescr value(GameObject gameObject, Action<Color> callOnUpdate, Color from, Color to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000248")]
	[Address(RVA = "0xCEA354", Offset = "0xCEA354", VA = "0xCEA354")]
	public static LTDescr value(GameObject gameObject, Action<Color, object> callOnUpdate, Color from, Color to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000249")]
	[Address(RVA = "0xCEA488", Offset = "0xCEA488", VA = "0xCEA488")]
	public static LTDescr value(GameObject gameObject, Action<Vector2> callOnUpdate, Vector2 from, Vector2 to, float time)
	{
		return null;
	}

	[Token(Token = "0x600024A")]
	[Address(RVA = "0xCDE210", Offset = "0xCDE210", VA = "0xCDE210")]
	public static LTDescr value(GameObject gameObject, Action<Vector3> callOnUpdate, Vector3 from, Vector3 to, float time)
	{
		return null;
	}

	[Token(Token = "0x600024B")]
	[Address(RVA = "0xCDF3F4", Offset = "0xCDF3F4", VA = "0xCDF3F4")]
	public static LTDescr value(GameObject gameObject, Action<float, object> callOnUpdate, float from, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x600024C")]
	[Address(RVA = "0xCEA57C", Offset = "0xCEA57C", VA = "0xCEA57C")]
	public static LTDescr delayedSound(AudioClip audio, Vector3 pos, float volume)
	{
		return null;
	}

	[Token(Token = "0x600024D")]
	[Address(RVA = "0xCEA660", Offset = "0xCEA660", VA = "0xCEA660")]
	public static LTDescr delayedSound(GameObject gameObject, AudioClip audio, Vector3 pos, float volume)
	{
		return null;
	}

	[Token(Token = "0x600024E")]
	[Address(RVA = "0xCD8450", Offset = "0xCD8450", VA = "0xCD8450")]
	public static LTDescr move(RectTransform rectTrans, Vector3 to, float time)
	{
		return null;
	}

	[Token(Token = "0x600024F")]
	[Address(RVA = "0xCEA748", Offset = "0xCEA748", VA = "0xCEA748")]
	public static LTDescr moveX(RectTransform rectTrans, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000250")]
	[Address(RVA = "0xCD9558", Offset = "0xCD9558", VA = "0xCD9558")]
	public static LTDescr moveY(RectTransform rectTrans, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000251")]
	[Address(RVA = "0xCD960C", Offset = "0xCD960C", VA = "0xCD960C")]
	public static LTDescr moveZ(RectTransform rectTrans, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000252")]
	[Address(RVA = "0xCEA7FC", Offset = "0xCEA7FC", VA = "0xCEA7FC")]
	public static LTDescr rotate(RectTransform rectTrans, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000253")]
	[Address(RVA = "0xCEA8FC", Offset = "0xCEA8FC", VA = "0xCEA8FC")]
	public static LTDescr rotate(RectTransform rectTrans, Vector3 to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000254")]
	[Address(RVA = "0xCD8514", Offset = "0xCD8514", VA = "0xCD8514")]
	public static LTDescr rotateAround(RectTransform rectTrans, Vector3 axis, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000255")]
	[Address(RVA = "0xCD96C0", Offset = "0xCD96C0", VA = "0xCD96C0")]
	public static LTDescr rotateAroundLocal(RectTransform rectTrans, Vector3 axis, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000256")]
	[Address(RVA = "0xCD85FC", Offset = "0xCD85FC", VA = "0xCD85FC")]
	public static LTDescr scale(RectTransform rectTrans, Vector3 to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000257")]
	[Address(RVA = "0xCD9498", Offset = "0xCD9498", VA = "0xCD9498")]
	public static LTDescr size(RectTransform rectTrans, Vector2 to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000258")]
	[Address(RVA = "0xCD93E4", Offset = "0xCD93E4", VA = "0xCD93E4")]
	public static LTDescr alpha(RectTransform rectTrans, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000259")]
	[Address(RVA = "0xCD988C", Offset = "0xCD988C", VA = "0xCD988C")]
	public static LTDescr color(RectTransform rectTrans, Color to, float time)
	{
		return null;
	}

	[Token(Token = "0x600025A")]
	[Address(RVA = "0xCEAA0C", Offset = "0xCEAA0C", VA = "0xCEAA0C")]
	public static float tweenOnCurve(LTDescr tweenDescr, float ratioPassed)
	{
		return default(float);
	}

	[Token(Token = "0x600025B")]
	[Address(RVA = "0xCEAA54", Offset = "0xCEAA54", VA = "0xCEAA54")]
	public static Vector3 tweenOnCurveVector(LTDescr tweenDescr, float ratioPassed)
	{
		return default(Vector3);
	}

	[Token(Token = "0x600025C")]
	[Address(RVA = "0xCEAB2C", Offset = "0xCEAB2C", VA = "0xCEAB2C")]
	public static float easeOutQuadOpt(float start, float diff, float ratioPassed)
	{
		return default(float);
	}

	[Token(Token = "0x600025D")]
	[Address(RVA = "0xCEAB44", Offset = "0xCEAB44", VA = "0xCEAB44")]
	public static float easeInQuadOpt(float start, float diff, float ratioPassed)
	{
		return default(float);
	}

	[Token(Token = "0x600025E")]
	[Address(RVA = "0xCEAB54", Offset = "0xCEAB54", VA = "0xCEAB54")]
	public static float easeInOutQuadOpt(float start, float diff, float ratioPassed)
	{
		return default(float);
	}

	[Token(Token = "0x600025F")]
	[Address(RVA = "0xCEABA4", Offset = "0xCEABA4", VA = "0xCEABA4")]
	public static Vector3 easeInOutQuadOpt(Vector3 start, Vector3 diff, float ratioPassed)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000260")]
	[Address(RVA = "0xCEAC24", Offset = "0xCEAC24", VA = "0xCEAC24")]
	public static float linear(float start, float end, float val)
	{
		return default(float);
	}

	[Token(Token = "0x6000261")]
	[Address(RVA = "0xCEAC48", Offset = "0xCEAC48", VA = "0xCEAC48")]
	public static float clerp(float start, float end, float val)
	{
		return default(float);
	}

	[Token(Token = "0x6000262")]
	[Address(RVA = "0xCEACAC", Offset = "0xCEACAC", VA = "0xCEACAC")]
	public static float spring(float start, float end, float val)
	{
		return default(float);
	}

	[Token(Token = "0x6000263")]
	[Address(RVA = "0xCEAD5C", Offset = "0xCEAD5C", VA = "0xCEAD5C")]
	public static float easeInQuad(float start, float end, float val)
	{
		return default(float);
	}

	[Token(Token = "0x6000264")]
	[Address(RVA = "0xCEAD70", Offset = "0xCEAD70", VA = "0xCEAD70")]
	public static float easeOutQuad(float start, float end, float val)
	{
		return default(float);
	}

	[Token(Token = "0x6000265")]
	[Address(RVA = "0xCEAD8C", Offset = "0xCEAD8C", VA = "0xCEAD8C")]
	public static float easeInOutQuad(float start, float end, float val)
	{
		return default(float);
	}

	[Token(Token = "0x6000266")]
	[Address(RVA = "0xCEADE0", Offset = "0xCEADE0", VA = "0xCEADE0")]
	public static float easeInOutQuadOpt2(float start, float diffBy2, float val, float val2)
	{
		return default(float);
	}

	[Token(Token = "0x6000267")]
	[Address(RVA = "0xCEAE18", Offset = "0xCEAE18", VA = "0xCEAE18")]
	public static float easeInCubic(float start, float end, float val)
	{
		return default(float);
	}

	[Token(Token = "0x6000268")]
	[Address(RVA = "0xCEAE30", Offset = "0xCEAE30", VA = "0xCEAE30")]
	public static float easeOutCubic(float start, float end, float val)
	{
		return default(float);
	}

	[Token(Token = "0x6000269")]
	[Address(RVA = "0xCEAE58", Offset = "0xCEAE58", VA = "0xCEAE58")]
	public static float easeInOutCubic(float start, float end, float val)
	{
		return default(float);
	}

	[Token(Token = "0x600026A")]
	[Address(RVA = "0xCEAEB0", Offset = "0xCEAEB0", VA = "0xCEAEB0")]
	public static float easeInQuart(float start, float end, float val)
	{
		return default(float);
	}

	[Token(Token = "0x600026B")]
	[Address(RVA = "0xCEAECC", Offset = "0xCEAECC", VA = "0xCEAECC")]
	public static float easeOutQuart(float start, float end, float val)
	{
		return default(float);
	}

	[Token(Token = "0x600026C")]
	[Address(RVA = "0xCEAEF4", Offset = "0xCEAEF4", VA = "0xCEAEF4")]
	public static float easeInOutQuart(float start, float end, float val)
	{
		return default(float);
	}

	[Token(Token = "0x600026D")]
	[Address(RVA = "0xCEAF50", Offset = "0xCEAF50", VA = "0xCEAF50")]
	public static float easeInQuint(float start, float end, float val)
	{
		return default(float);
	}

	[Token(Token = "0x600026E")]
	[Address(RVA = "0xCEAF70", Offset = "0xCEAF70", VA = "0xCEAF70")]
	public static float easeOutQuint(float start, float end, float val)
	{
		return default(float);
	}

	[Token(Token = "0x600026F")]
	[Address(RVA = "0xCEAFA0", Offset = "0xCEAFA0", VA = "0xCEAFA0")]
	public static float easeInOutQuint(float start, float end, float val)
	{
		return default(float);
	}

	[Token(Token = "0x6000270")]
	[Address(RVA = "0xCEB008", Offset = "0xCEB008", VA = "0xCEB008")]
	public static float easeInSine(float start, float end, float val)
	{
		return default(float);
	}

	[Token(Token = "0x6000271")]
	[Address(RVA = "0xCEB040", Offset = "0xCEB040", VA = "0xCEB040")]
	public static float easeOutSine(float start, float end, float val)
	{
		return default(float);
	}

	[Token(Token = "0x6000272")]
	[Address(RVA = "0xCEB074", Offset = "0xCEB074", VA = "0xCEB074")]
	public static float easeInOutSine(float start, float end, float val)
	{
		return default(float);
	}

	[Token(Token = "0x6000273")]
	[Address(RVA = "0xCEB0B8", Offset = "0xCEB0B8", VA = "0xCEB0B8")]
	public static float easeInExpo(float start, float end, float val)
	{
		return default(float);
	}

	[Token(Token = "0x6000274")]
	[Address(RVA = "0xCEB0F0", Offset = "0xCEB0F0", VA = "0xCEB0F0")]
	public static float easeOutExpo(float start, float end, float val)
	{
		return default(float);
	}

	[Token(Token = "0x6000275")]
	[Address(RVA = "0xCEB128", Offset = "0xCEB128", VA = "0xCEB128")]
	public static float easeInOutExpo(float start, float end, float val)
	{
		return default(float);
	}

	[Token(Token = "0x6000276")]
	[Address(RVA = "0xCEB198", Offset = "0xCEB198", VA = "0xCEB198")]
	public static float easeInCirc(float start, float end, float val)
	{
		return default(float);
	}

	[Token(Token = "0x6000277")]
	[Address(RVA = "0xCEB1C0", Offset = "0xCEB1C0", VA = "0xCEB1C0")]
	public static float easeOutCirc(float start, float end, float val)
	{
		return default(float);
	}

	[Token(Token = "0x6000278")]
	[Address(RVA = "0xCEB1E8", Offset = "0xCEB1E8", VA = "0xCEB1E8")]
	public static float easeInOutCirc(float start, float end, float val)
	{
		return default(float);
	}

	[Token(Token = "0x6000279")]
	[Address(RVA = "0xCEB23C", Offset = "0xCEB23C", VA = "0xCEB23C")]
	public static float easeInBounce(float start, float end, float val)
	{
		return default(float);
	}

	[Token(Token = "0x600027A")]
	[Address(RVA = "0xCEB2C4", Offset = "0xCEB2C4", VA = "0xCEB2C4")]
	public static float easeOutBounce(float start, float end, float val)
	{
		return default(float);
	}

	[Token(Token = "0x600027B")]
	[Address(RVA = "0xCEB38C", Offset = "0xCEB38C", VA = "0xCEB38C")]
	public static float easeInOutBounce(float start, float end, float val)
	{
		return default(float);
	}

	[Token(Token = "0x600027C")]
	[Address(RVA = "0xCEB440", Offset = "0xCEB440", VA = "0xCEB440")]
	public static float easeInBack(float start, float end, float val, float overshoot = 1f)
	{
		return default(float);
	}

	[Token(Token = "0x600027D")]
	[Address(RVA = "0xCEB474", Offset = "0xCEB474", VA = "0xCEB474")]
	public static float easeOutBack(float start, float end, float val, float overshoot = 1f)
	{
		return default(float);
	}

	[Token(Token = "0x600027E")]
	[Address(RVA = "0xCEB4B4", Offset = "0xCEB4B4", VA = "0xCEB4B4")]
	public static float easeInOutBack(float start, float end, float val, float overshoot = 1f)
	{
		return default(float);
	}

	[Token(Token = "0x600027F")]
	[Address(RVA = "0xCEB54C", Offset = "0xCEB54C", VA = "0xCEB54C")]
	public static float easeInElastic(float start, float end, float val, float overshoot = 1f, float period = 0.3f)
	{
		return default(float);
	}

	[Token(Token = "0x6000280")]
	[Address(RVA = "0xCEB624", Offset = "0xCEB624", VA = "0xCEB624")]
	public static float easeOutElastic(float start, float end, float val, float overshoot = 1f, float period = 0.3f)
	{
		return default(float);
	}

	[Token(Token = "0x6000281")]
	[Address(RVA = "0xCEB6F4", Offset = "0xCEB6F4", VA = "0xCEB6F4")]
	public static float easeInOutElastic(float start, float end, float val, float overshoot = 1f, float period = 0.3f)
	{
		return default(float);
	}

	[Token(Token = "0x6000282")]
	[Address(RVA = "0xCEB844", Offset = "0xCEB844", VA = "0xCEB844")]
	public static LTDescr followDamp(Transform trans, Transform target, LeanProp prop, float smoothTime, float maxSpeed = -1f)
	{
		return null;
	}

	[Token(Token = "0x6000283")]
	[Address(RVA = "0xCEBBD4", Offset = "0xCEBBD4", VA = "0xCEBBD4")]
	public static LTDescr followSpring(Transform trans, Transform target, LeanProp prop, float smoothTime, float maxSpeed = -1f, float friction = 2f, float accelRate = 0.5f)
	{
		return null;
	}

	[Token(Token = "0x6000284")]
	[Address(RVA = "0xCEBF70", Offset = "0xCEBF70", VA = "0xCEBF70")]
	public static LTDescr followBounceOut(Transform trans, Transform target, LeanProp prop, float smoothTime, float maxSpeed = -1f, float friction = 2f, float accelRate = 0.5f, float hitDamping = 0.9f)
	{
		return null;
	}

	[Token(Token = "0x6000285")]
	[Address(RVA = "0xCEC2FC", Offset = "0xCEC2FC", VA = "0xCEC2FC")]
	public static LTDescr followLinear(Transform trans, Transform target, LeanProp prop, float moveSpeed)
	{
		return null;
	}

	[Token(Token = "0x6000286")]
	[Address(RVA = "0xCEC668", Offset = "0xCEC668", VA = "0xCEC668")]
	public static void addListener(int eventId, Action<LTEvent> callback)
	{
	}

	[Token(Token = "0x6000287")]
	[Address(RVA = "0xCD6678", Offset = "0xCD6678", VA = "0xCD6678")]
	public static void addListener(GameObject caller, int eventId, Action<LTEvent> callback)
	{
	}

	[Token(Token = "0x6000288")]
	[Address(RVA = "0xCEC6D0", Offset = "0xCEC6D0", VA = "0xCEC6D0")]
	public static bool removeListener(int eventId, Action<LTEvent> callback)
	{
		return default(bool);
	}

	[Token(Token = "0x6000289")]
	[Address(RVA = "0xCEC938", Offset = "0xCEC938", VA = "0xCEC938")]
	public static bool removeListener(int eventId)
	{
		return default(bool);
	}

	[Token(Token = "0x600028A")]
	[Address(RVA = "0xCEC738", Offset = "0xCEC738", VA = "0xCEC738")]
	public static bool removeListener(GameObject caller, int eventId, Action<LTEvent> callback)
	{
		return default(bool);
	}

	[Token(Token = "0x600028B")]
	[Address(RVA = "0xCD7234", Offset = "0xCD7234", VA = "0xCD7234")]
	public static void dispatchEvent(int eventId)
	{
	}

	[Token(Token = "0x600028C")]
	[Address(RVA = "0xCD728C", Offset = "0xCD728C", VA = "0xCD728C")]
	public static void dispatchEvent(int eventId, object data)
	{
	}

	[Token(Token = "0x600028D")]
	[Address(RVA = "0xCEC9FC", Offset = "0xCEC9FC", VA = "0xCEC9FC")]
	public LeanTween()
	{
	}
}
[Token(Token = "0x2000078")]
public class LTUtility
{
	[Token(Token = "0x60002BB")]
	[Address(RVA = "0xDC7DFC", Offset = "0xDC7DFC", VA = "0xDC7DFC")]
	public static Vector3[] reverse(Vector3[] arr)
	{
		return null;
	}

	[Token(Token = "0x60002BC")]
	[Address(RVA = "0xDC7E98", Offset = "0xDC7E98", VA = "0xDC7E98")]
	public LTUtility()
	{
	}
}
[Token(Token = "0x2000079")]
public class LTBezier
{
	[Token(Token = "0x40002B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float length;

	[Token(Token = "0x40002B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private Vector3 a;

	[Token(Token = "0x40002B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Vector3 aa;

	[Token(Token = "0x40002B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private Vector3 bb;

	[Token(Token = "0x40002B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Vector3 cc;

	[Token(Token = "0x40002B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private float len;

	[Token(Token = "0x40002BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float[] arcLengths;

	[Token(Token = "0x60002BD")]
	[Address(RVA = "0xDC7EA0", Offset = "0xDC7EA0", VA = "0xDC7EA0")]
	public LTBezier(Vector3 a, Vector3 b, Vector3 c, Vector3 d, float precision)
	{
	}

	[Token(Token = "0x60002BE")]
	[Address(RVA = "0xDC8190", Offset = "0xDC8190", VA = "0xDC8190")]
	private float map(float u)
	{
		return default(float);
	}

	[Token(Token = "0x60002BF")]
	[Address(RVA = "0xDC8138", Offset = "0xDC8138", VA = "0xDC8138")]
	private Vector3 bezierPoint(float t)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60002C0")]
	[Address(RVA = "0xDC82B0", Offset = "0xDC82B0", VA = "0xDC82B0")]
	public Vector3 point(float t)
	{
		return default(Vector3);
	}
}
[Token(Token = "0x200007A")]
public class LTBezierPath
{
	[Token(Token = "0x40002BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Vector3[] pts;

	[Token(Token = "0x40002BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float length;

	[Token(Token = "0x40002BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool orientToPath;

	[Token(Token = "0x40002BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
	public bool orientToPath2d;

	[Token(Token = "0x40002BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private LTBezier[] beziers;

	[Token(Token = "0x40002C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float[] lengthRatio;

	[Token(Token = "0x40002C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private int currentBezier;

	[Token(Token = "0x40002C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private int previousBezier;

	[Token(Token = "0x1700000C")]
	public float distance
	{
		[Token(Token = "0x60002C4")]
		[Address(RVA = "0xDC8688", Offset = "0xDC8688", VA = "0xDC8688")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x60002C1")]
	[Address(RVA = "0xDC82C8", Offset = "0xDC82C8", VA = "0xDC82C8")]
	public LTBezierPath()
	{
	}

	[Token(Token = "0x60002C2")]
	[Address(RVA = "0xDC82D0", Offset = "0xDC82D0", VA = "0xDC82D0")]
	public LTBezierPath(Vector3[] pts_)
	{
	}

	[Token(Token = "0x60002C3")]
	[Address(RVA = "0xDC82FC", Offset = "0xDC82FC", VA = "0xDC82FC")]
	public void setPoints(Vector3[] pts_)
	{
	}

	[Token(Token = "0x60002C5")]
	[Address(RVA = "0xDC8690", Offset = "0xDC8690", VA = "0xDC8690")]
	public Vector3 point(float ratio)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60002C6")]
	[Address(RVA = "0xDC8754", Offset = "0xDC8754", VA = "0xDC8754")]
	public void place2d(Transform transform, float ratio)
	{
	}

	[Token(Token = "0x60002C7")]
	[Address(RVA = "0xDC8808", Offset = "0xDC8808", VA = "0xDC8808")]
	public void placeLocal2d(Transform transform, float ratio)
	{
	}

	[Token(Token = "0x60002C8")]
	[Address(RVA = "0xDC88BC", Offset = "0xDC88BC", VA = "0xDC88BC")]
	public void place(Transform transform, float ratio)
	{
	}

	[Token(Token = "0x60002C9")]
	[Address(RVA = "0xDC8928", Offset = "0xDC8928", VA = "0xDC8928")]
	public void place(Transform transform, float ratio, Vector3 worldUp)
	{
	}

	[Token(Token = "0x60002CA")]
	[Address(RVA = "0xDC89C4", Offset = "0xDC89C4", VA = "0xDC89C4")]
	public void placeLocal(Transform transform, float ratio)
	{
	}

	[Token(Token = "0x60002CB")]
	[Address(RVA = "0xDC8A30", Offset = "0xDC8A30", VA = "0xDC8A30")]
	public void placeLocal(Transform transform, float ratio, Vector3 worldUp)
	{
	}

	[Token(Token = "0x60002CC")]
	[Address(RVA = "0xDC8B18", Offset = "0xDC8B18", VA = "0xDC8B18")]
	public void gizmoDraw(float t = -1f)
	{
	}

	[Token(Token = "0x60002CD")]
	[Address(RVA = "0xDC8BF8", Offset = "0xDC8BF8", VA = "0xDC8BF8")]
	public float ratioAtPoint(Vector3 pt, float precision = 0.01f)
	{
		return default(float);
	}
}
[Serializable]
[Token(Token = "0x200007B")]
public class LTSpline
{
	[Token(Token = "0x40002C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int DISTANCE_COUNT;

	[Token(Token = "0x40002C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public static int SUBLINE_COUNT;

	[Token(Token = "0x40002C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float distance;

	[Token(Token = "0x40002C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public bool constantSpeed;

	[Token(Token = "0x40002C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3[] pts;

	[NonSerialized]
	[Token(Token = "0x40002C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Vector3[] ptsAdj;

	[Token(Token = "0x40002C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int ptsAdjLength;

	[Token(Token = "0x40002CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public bool orientToPath;

	[Token(Token = "0x40002CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D")]
	public bool orientToPath2d;

	[Token(Token = "0x40002CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private int numSections;

	[Token(Token = "0x40002CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private int currPt;

	[Token(Token = "0x60002CE")]
	[Address(RVA = "0xDC8DD0", Offset = "0xDC8DD0", VA = "0xDC8DD0")]
	public LTSpline(Vector3[] pts)
	{
	}

	[Token(Token = "0x60002CF")]
	[Address(RVA = "0xDC9218", Offset = "0xDC9218", VA = "0xDC9218")]
	public LTSpline(Vector3[] pts, bool constantSpeed)
	{
	}

	[Token(Token = "0x60002D0")]
	[Address(RVA = "0xDC8E08", Offset = "0xDC8E08", VA = "0xDC8E08")]
	private void init(Vector3[] pts, bool constantSpeed)
	{
	}

	[Token(Token = "0x60002D1")]
	[Address(RVA = "0xDC945C", Offset = "0xDC945C", VA = "0xDC945C")]
	public Vector3 map(float u)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60002D2")]
	[Address(RVA = "0xDC9258", Offset = "0xDC9258", VA = "0xDC9258")]
	public Vector3 interp(float t)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60002D3")]
	[Address(RVA = "0xDC9558", Offset = "0xDC9558", VA = "0xDC9558")]
	public float ratioAtPoint(Vector3 pt)
	{
		return default(float);
	}

	[Token(Token = "0x60002D4")]
	[Address(RVA = "0xDC9684", Offset = "0xDC9684", VA = "0xDC9684")]
	public Vector3 point(float ratio)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60002D5")]
	[Address(RVA = "0xDC969C", Offset = "0xDC969C", VA = "0xDC969C")]
	public void place2d(Transform transform, float ratio)
	{
	}

	[Token(Token = "0x60002D6")]
	[Address(RVA = "0xDC9750", Offset = "0xDC9750", VA = "0xDC9750")]
	public void placeLocal2d(Transform transform, float ratio)
	{
	}

	[Token(Token = "0x60002D7")]
	[Address(RVA = "0xDC9888", Offset = "0xDC9888", VA = "0xDC9888")]
	public void place(Transform transform, float ratio)
	{
	}

	[Token(Token = "0x60002D8")]
	[Address(RVA = "0xDC98F4", Offset = "0xDC98F4", VA = "0xDC98F4")]
	public void place(Transform transform, float ratio, Vector3 worldUp)
	{
	}

	[Token(Token = "0x60002D9")]
	[Address(RVA = "0xDC9990", Offset = "0xDC9990", VA = "0xDC9990")]
	public void placeLocal(Transform transform, float ratio)
	{
	}

	[Token(Token = "0x60002DA")]
	[Address(RVA = "0xDC99FC", Offset = "0xDC99FC", VA = "0xDC99FC")]
	public void placeLocal(Transform transform, float ratio, Vector3 worldUp)
	{
	}

	[Token(Token = "0x60002DB")]
	[Address(RVA = "0xDC9ABC", Offset = "0xDC9ABC", VA = "0xDC9ABC")]
	public void gizmoDraw(float t = -1f)
	{
	}

	[Token(Token = "0x60002DC")]
	[Address(RVA = "0xDC9B70", Offset = "0xDC9B70", VA = "0xDC9B70")]
	public void drawGizmo(Color color)
	{
	}

	[Token(Token = "0x60002DD")]
	[Address(RVA = "0xDC9CBC", Offset = "0xDC9CBC", VA = "0xDC9CBC")]
	public static void drawGizmo(Transform[] arr, Color color)
	{
	}

	[Token(Token = "0x60002DE")]
	[Address(RVA = "0xDC9EEC", Offset = "0xDC9EEC", VA = "0xDC9EEC")]
	public static void drawLine(Transform[] arr, float width, Color color)
	{
	}

	[Token(Token = "0x60002DF")]
	[Address(RVA = "0xDC9EFC", Offset = "0xDC9EFC", VA = "0xDC9EFC")]
	public void drawLinesGLLines(Material outlineMaterial, Color color, float width)
	{
	}

	[Token(Token = "0x60002E0")]
	[Address(RVA = "0xDCA0C4", Offset = "0xDCA0C4", VA = "0xDCA0C4")]
	public Vector3[] generateVectors()
	{
		return null;
	}
}
[Serializable]
[Token(Token = "0x200007C")]
public class LTRect
{
	[Token(Token = "0x40002CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Rect _rect;

	[Token(Token = "0x40002CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float alpha;

	[Token(Token = "0x40002D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float rotation;

	[Token(Token = "0x40002D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Vector2 pivot;

	[Token(Token = "0x40002D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Vector2 margin;

	[Token(Token = "0x40002D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Rect relativeRect;

	[Token(Token = "0x40002D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public bool rotateEnabled;

	[Token(Token = "0x40002D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
	[HideInInspector]
	public bool rotateFinished;

	[Token(Token = "0x40002D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4A")]
	public bool alphaEnabled;

	[Token(Token = "0x40002D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public string labelStr;

	[Token(Token = "0x40002D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public LTGUI.Element_Type type;

	[Token(Token = "0x40002D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public GUIStyle style;

	[Token(Token = "0x40002DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public bool useColor;

	[Token(Token = "0x40002DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public Color color;

	[Token(Token = "0x40002DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public bool fontScaleToFit;

	[Token(Token = "0x40002DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7D")]
	public bool useSimpleScale;

	[Token(Token = "0x40002DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7E")]
	public bool sizeByHeight;

	[Token(Token = "0x40002DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Texture texture;

	[Token(Token = "0x40002E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private int _id;

	[Token(Token = "0x40002E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	[HideInInspector]
	public int counter;

	[Token(Token = "0x40002E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static bool colorTouched;

	[Token(Token = "0x1700000D")]
	public bool hasInitiliazed
	{
		[Token(Token = "0x60002E7")]
		[Address(RVA = "0xDCA978", Offset = "0xDCA978", VA = "0xDCA978")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700000E")]
	public int id
	{
		[Token(Token = "0x60002E8")]
		[Address(RVA = "0xDCA988", Offset = "0xDCA988", VA = "0xDCA988")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x1700000F")]
	public float x
	{
		[Token(Token = "0x60002EC")]
		[Address(RVA = "0xDCA99C", Offset = "0xDCA99C", VA = "0xDCA99C")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60002ED")]
		[Address(RVA = "0xDCA9A8", Offset = "0xDCA9A8", VA = "0xDCA9A8")]
		set
		{
		}
	}

	[Token(Token = "0x17000010")]
	public float y
	{
		[Token(Token = "0x60002EE")]
		[Address(RVA = "0xDCA9B4", Offset = "0xDCA9B4", VA = "0xDCA9B4")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60002EF")]
		[Address(RVA = "0xDCA9C0", Offset = "0xDCA9C0", VA = "0xDCA9C0")]
		set
		{
		}
	}

	[Token(Token = "0x17000011")]
	public float width
	{
		[Token(Token = "0x60002F0")]
		[Address(RVA = "0xDCA9CC", Offset = "0xDCA9CC", VA = "0xDCA9CC")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60002F1")]
		[Address(RVA = "0xDCA9D8", Offset = "0xDCA9D8", VA = "0xDCA9D8")]
		set
		{
		}
	}

	[Token(Token = "0x17000012")]
	public float height
	{
		[Token(Token = "0x60002F2")]
		[Address(RVA = "0xDCA9E4", Offset = "0xDCA9E4", VA = "0xDCA9E4")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60002F3")]
		[Address(RVA = "0xDCA9F0", Offset = "0xDCA9F0", VA = "0xDCA9F0")]
		set
		{
		}
	}

	[Token(Token = "0x17000013")]
	public Rect rect
	{
		[Token(Token = "0x60002F4")]
		[Address(RVA = "0xDCA9FC", Offset = "0xDCA9FC", VA = "0xDCA9FC")]
		get
		{
			return default(Rect);
		}
		[Token(Token = "0x60002F5")]
		[Address(RVA = "0xDCABE4", Offset = "0xDCABE4", VA = "0xDCABE4")]
		set
		{
		}
	}

	[Token(Token = "0x60002E2")]
	[Address(RVA = "0xDCA2F8", Offset = "0xDCA2F8", VA = "0xDCA2F8")]
	public LTRect()
	{
	}

	[Token(Token = "0x60002E3")]
	[Address(RVA = "0xDCA408", Offset = "0xDCA408", VA = "0xDCA408")]
	public LTRect(Rect rect)
	{
	}

	[Token(Token = "0x60002E4")]
	[Address(RVA = "0xDCA4A0", Offset = "0xDCA4A0", VA = "0xDCA4A0")]
	public LTRect(float x, float y, float width, float height)
	{
	}

	[Token(Token = "0x60002E5")]
	[Address(RVA = "0xDCA564", Offset = "0xDCA564", VA = "0xDCA564")]
	public LTRect(float x, float y, float width, float height, float alpha)
	{
	}

	[Token(Token = "0x60002E6")]
	[Address(RVA = "0xDCA630", Offset = "0xDCA630", VA = "0xDCA630")]
	public LTRect(float x, float y, float width, float height, float alpha, float rotation)
	{
	}

	[Token(Token = "0x60002E9")]
	[Address(RVA = "0xDCA994", Offset = "0xDCA994", VA = "0xDCA994")]
	public void setId(int id, int counter)
	{
	}

	[Token(Token = "0x60002EA")]
	[Address(RVA = "0xDCA39C", Offset = "0xDCA39C", VA = "0xDCA39C")]
	public void reset()
	{
	}

	[Token(Token = "0x60002EB")]
	[Address(RVA = "0xDCA714", Offset = "0xDCA714", VA = "0xDCA714")]
	public void resetForRotation()
	{
	}

	[Token(Token = "0x60002F6")]
	[Address(RVA = "0xDCABF0", Offset = "0xDCABF0", VA = "0xDCABF0")]
	public LTRect setStyle(GUIStyle style)
	{
		return null;
	}

	[Token(Token = "0x60002F7")]
	[Address(RVA = "0xDCAC0C", Offset = "0xDCAC0C", VA = "0xDCAC0C")]
	public LTRect setFontScaleToFit(bool fontScaleToFit)
	{
		return null;
	}

	[Token(Token = "0x60002F8")]
	[Address(RVA = "0xDCAC18", Offset = "0xDCAC18", VA = "0xDCAC18")]
	public LTRect setColor(Color color)
	{
		return null;
	}

	[Token(Token = "0x60002F9")]
	[Address(RVA = "0xDCAC2C", Offset = "0xDCAC2C", VA = "0xDCAC2C")]
	public LTRect setAlpha(float alpha)
	{
		return null;
	}

	[Token(Token = "0x60002FA")]
	[Address(RVA = "0xDCAC34", Offset = "0xDCAC34", VA = "0xDCAC34")]
	public LTRect setLabel(string str)
	{
		return null;
	}

	[Token(Token = "0x60002FB")]
	[Address(RVA = "0xDCAC50", Offset = "0xDCAC50", VA = "0xDCAC50")]
	public LTRect setUseSimpleScale(bool useSimpleScale, Rect relativeRect)
	{
		return null;
	}

	[Token(Token = "0x60002FC")]
	[Address(RVA = "0xDCAC64", Offset = "0xDCAC64", VA = "0xDCAC64")]
	public LTRect setUseSimpleScale(bool useSimpleScale)
	{
		return null;
	}

	[Token(Token = "0x60002FD")]
	[Address(RVA = "0xDCACCC", Offset = "0xDCACCC", VA = "0xDCACCC")]
	public LTRect setSizeByHeight(bool sizeByHeight)
	{
		return null;
	}

	[Token(Token = "0x60002FE")]
	[Address(RVA = "0xDCACD8", Offset = "0xDCACD8", VA = "0xDCACD8", Slot = "3")]
	public override string ToString()
	{
		return null;
	}
}
[Token(Token = "0x200007D")]
public class LTEvent
{
	[Token(Token = "0x40002E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int id;

	[Token(Token = "0x40002E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public object data;

	[Token(Token = "0x60002FF")]
	[Address(RVA = "0xDCB018", Offset = "0xDCB018", VA = "0xDCB018")]
	public LTEvent(int id, object data)
	{
	}
}
[Token(Token = "0x200007E")]
public class LTGUI
{
	[Token(Token = "0x200007F")]
	public enum Element_Type
	{
		[Token(Token = "0x40002F2")]
		Texture,
		[Token(Token = "0x40002F3")]
		Label
	}

	[Token(Token = "0x40002E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int RECT_LEVELS;

	[Token(Token = "0x40002E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public static int RECTS_PER_LEVEL;

	[Token(Token = "0x40002E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static int BUTTONS_MAX;

	[Token(Token = "0x40002E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static LTRect[] levels;

	[Token(Token = "0x40002E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static int[] levelDepths;

	[Token(Token = "0x40002EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private static Rect[] buttons;

	[Token(Token = "0x40002EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private static int[] buttonLevels;

	[Token(Token = "0x40002EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private static int[] buttonLastFrame;

	[Token(Token = "0x40002ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private static LTRect r;

	[Token(Token = "0x40002EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private static Color color;

	[Token(Token = "0x40002EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private static bool isGUIEnabled;

	[Token(Token = "0x40002F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private static int global_counter;

	[Token(Token = "0x6000300")]
	[Address(RVA = "0xDCB050", Offset = "0xDCB050", VA = "0xDCB050")]
	public static void init()
	{
	}

	[Token(Token = "0x6000301")]
	[Address(RVA = "0xDCB144", Offset = "0xDCB144", VA = "0xDCB144")]
	public static void initRectCheck()
	{
	}

	[Token(Token = "0x6000302")]
	[Address(RVA = "0xDCB2CC", Offset = "0xDCB2CC", VA = "0xDCB2CC")]
	public static void reset()
	{
	}

	[Token(Token = "0x6000303")]
	[Address(RVA = "0xDCB424", Offset = "0xDCB424", VA = "0xDCB424")]
	public static void update(int updateLevel)
	{
	}

	[Token(Token = "0x6000304")]
	[Address(RVA = "0xDCBD64", Offset = "0xDCBD64", VA = "0xDCBD64")]
	public static bool checkOnScreen(Rect rect)
	{
		return default(bool);
	}

	[Token(Token = "0x6000305")]
	[Address(RVA = "0xDCBE40", Offset = "0xDCBE40", VA = "0xDCBE40")]
	public static void destroy(int id)
	{
	}

	[Token(Token = "0x6000306")]
	[Address(RVA = "0xDCBF8C", Offset = "0xDCBF8C", VA = "0xDCBF8C")]
	public static void destroyAll(int depth)
	{
	}

	[Token(Token = "0x6000307")]
	[Address(RVA = "0xDCC074", Offset = "0xDCC074", VA = "0xDCC074")]
	public static LTRect label(Rect rect, string label, int depth)
	{
		return null;
	}

	[Token(Token = "0x6000308")]
	[Address(RVA = "0xDCC138", Offset = "0xDCC138", VA = "0xDCC138")]
	public static LTRect label(LTRect rect, string label, int depth)
	{
		return null;
	}

	[Token(Token = "0x6000309")]
	[Address(RVA = "0xDCC558", Offset = "0xDCC558", VA = "0xDCC558")]
	public static LTRect texture(Rect rect, Texture texture, int depth)
	{
		return null;
	}

	[Token(Token = "0x600030A")]
	[Address(RVA = "0xDCC61C", Offset = "0xDCC61C", VA = "0xDCC61C")]
	public static LTRect texture(LTRect rect, Texture texture, int depth)
	{
		return null;
	}

	[Token(Token = "0x600030B")]
	[Address(RVA = "0xDCC1C0", Offset = "0xDCC1C0", VA = "0xDCC1C0")]
	public static LTRect element(LTRect rect, int depth)
	{
		return null;
	}

	[Token(Token = "0x600030C")]
	[Address(RVA = "0xDCC6A0", Offset = "0xDCC6A0", VA = "0xDCC6A0")]
	public static bool hasNoOverlap(Rect rect, int depth)
	{
		return default(bool);
	}

	[Token(Token = "0x600030D")]
	[Address(RVA = "0xDCC960", Offset = "0xDCC960", VA = "0xDCC960")]
	public static bool pressedWithinRect(Rect rect)
	{
		return default(bool);
	}

	[Token(Token = "0x600030E")]
	[Address(RVA = "0xDCCAE4", Offset = "0xDCCAE4", VA = "0xDCCAE4")]
	public static bool checkWithinRect(Vector2 vec2, Rect rect)
	{
		return default(bool);
	}

	[Token(Token = "0x600030F")]
	[Address(RVA = "0xDCCA74", Offset = "0xDCCA74", VA = "0xDCCA74")]
	public static Vector2 firstTouch()
	{
		return default(Vector2);
	}

	[Token(Token = "0x6000310")]
	[Address(RVA = "0xDCCBAC", Offset = "0xDCCBAC", VA = "0xDCCBAC")]
	public LTGUI()
	{
	}
}
[Token(Token = "0x2000080")]
public static class LeanTweenExt
{
	[Token(Token = "0x6000312")]
	[Address(RVA = "0xDCCC20", Offset = "0xDCCC20", VA = "0xDCCC20")]
	public static LTDescr LeanAlpha(this GameObject gameObject, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000313")]
	[Address(RVA = "0xDCCC90", Offset = "0xDCCC90", VA = "0xDCCC90")]
	public static LTDescr LeanAlphaVertex(this GameObject gameObject, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000314")]
	[Address(RVA = "0xDCCD00", Offset = "0xDCCD00", VA = "0xDCCD00")]
	public static LTDescr LeanAlpha(this RectTransform rectTransform, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000315")]
	[Address(RVA = "0xDCCD70", Offset = "0xDCCD70", VA = "0xDCCD70")]
	public static LTDescr LeanAlpha(this CanvasGroup canvas, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000316")]
	[Address(RVA = "0xDCCDE0", Offset = "0xDCCDE0", VA = "0xDCCDE0")]
	public static LTDescr LeanAlphaText(this RectTransform rectTransform, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000317")]
	[Address(RVA = "0xDCCE50", Offset = "0xDCCE50", VA = "0xDCCE50")]
	public static void LeanCancel(this GameObject gameObject)
	{
	}

	[Token(Token = "0x6000318")]
	[Address(RVA = "0xDCCEA8", Offset = "0xDCCEA8", VA = "0xDCCEA8")]
	public static void LeanCancel(this GameObject gameObject, bool callOnComplete)
	{
	}

	[Token(Token = "0x6000319")]
	[Address(RVA = "0xDCCF10", Offset = "0xDCCF10", VA = "0xDCCF10")]
	public static void LeanCancel(this GameObject gameObject, int uniqueId, bool callOnComplete = false)
	{
	}

	[Token(Token = "0x600031A")]
	[Address(RVA = "0xDCCF80", Offset = "0xDCCF80", VA = "0xDCCF80")]
	public static void LeanCancel(this RectTransform rectTransform)
	{
	}

	[Token(Token = "0x600031B")]
	[Address(RVA = "0xDCCFD8", Offset = "0xDCCFD8", VA = "0xDCCFD8")]
	public static LTDescr LeanColor(this GameObject gameObject, Color to, float time)
	{
		return null;
	}

	[Token(Token = "0x600031C")]
	[Address(RVA = "0xDCD070", Offset = "0xDCD070", VA = "0xDCD070")]
	public static LTDescr LeanColorText(this RectTransform rectTransform, Color to, float time)
	{
		return null;
	}

	[Token(Token = "0x600031D")]
	[Address(RVA = "0xDCD108", Offset = "0xDCD108", VA = "0xDCD108")]
	public static LTDescr LeanDelayedCall(this GameObject gameObject, float delayTime, Action callback)
	{
		return null;
	}

	[Token(Token = "0x600031E")]
	[Address(RVA = "0xDCD180", Offset = "0xDCD180", VA = "0xDCD180")]
	public static LTDescr LeanDelayedCall(this GameObject gameObject, float delayTime, Action<object> callback)
	{
		return null;
	}

	[Token(Token = "0x600031F")]
	[Address(RVA = "0xDCD1F8", Offset = "0xDCD1F8", VA = "0xDCD1F8")]
	public static bool LeanIsPaused(this GameObject gameObject)
	{
		return default(bool);
	}

	[Token(Token = "0x6000320")]
	[Address(RVA = "0xDCD250", Offset = "0xDCD250", VA = "0xDCD250")]
	public static bool LeanIsPaused(this RectTransform rectTransform)
	{
		return default(bool);
	}

	[Token(Token = "0x6000321")]
	[Address(RVA = "0xDCD2A8", Offset = "0xDCD2A8", VA = "0xDCD2A8")]
	public static bool LeanIsTweening(this GameObject gameObject)
	{
		return default(bool);
	}

	[Token(Token = "0x6000322")]
	[Address(RVA = "0xDCD300", Offset = "0xDCD300", VA = "0xDCD300")]
	public static LTDescr LeanMove(this GameObject gameObject, Vector3 to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000323")]
	[Address(RVA = "0xDCD388", Offset = "0xDCD388", VA = "0xDCD388")]
	public static LTDescr LeanMove(this Transform transform, Vector3 to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000324")]
	[Address(RVA = "0xDCD42C", Offset = "0xDCD42C", VA = "0xDCD42C")]
	public static LTDescr LeanMove(this RectTransform rectTransform, Vector3 to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000325")]
	[Address(RVA = "0xDCD4B4", Offset = "0xDCD4B4", VA = "0xDCD4B4")]
	public static LTDescr LeanMove(this GameObject gameObject, Vector2 to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000326")]
	[Address(RVA = "0xDCD534", Offset = "0xDCD534", VA = "0xDCD534")]
	public static LTDescr LeanMove(this Transform transform, Vector2 to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000327")]
	[Address(RVA = "0xDCD5D0", Offset = "0xDCD5D0", VA = "0xDCD5D0")]
	public static LTDescr LeanMove(this GameObject gameObject, Vector3[] to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000328")]
	[Address(RVA = "0xDCD648", Offset = "0xDCD648", VA = "0xDCD648")]
	public static LTDescr LeanMove(this GameObject gameObject, LTBezierPath to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000329")]
	[Address(RVA = "0xDCD6C0", Offset = "0xDCD6C0", VA = "0xDCD6C0")]
	public static LTDescr LeanMove(this GameObject gameObject, LTSpline to, float time)
	{
		return null;
	}

	[Token(Token = "0x600032A")]
	[Address(RVA = "0xDCD738", Offset = "0xDCD738", VA = "0xDCD738")]
	public static LTDescr LeanMove(this Transform transform, Vector3[] to, float time)
	{
		return null;
	}

	[Token(Token = "0x600032B")]
	[Address(RVA = "0xDCD7C4", Offset = "0xDCD7C4", VA = "0xDCD7C4")]
	public static LTDescr LeanMove(this Transform transform, LTBezierPath to, float time)
	{
		return null;
	}

	[Token(Token = "0x600032C")]
	[Address(RVA = "0xDCD850", Offset = "0xDCD850", VA = "0xDCD850")]
	public static LTDescr LeanMove(this Transform transform, LTSpline to, float time)
	{
		return null;
	}

	[Token(Token = "0x600032D")]
	[Address(RVA = "0xDCD8DC", Offset = "0xDCD8DC", VA = "0xDCD8DC")]
	public static LTDescr LeanMoveLocal(this GameObject gameObject, Vector3 to, float time)
	{
		return null;
	}

	[Token(Token = "0x600032E")]
	[Address(RVA = "0xDCD964", Offset = "0xDCD964", VA = "0xDCD964")]
	public static LTDescr LeanMoveLocal(this GameObject gameObject, LTBezierPath to, float time)
	{
		return null;
	}

	[Token(Token = "0x600032F")]
	[Address(RVA = "0xDCD9DC", Offset = "0xDCD9DC", VA = "0xDCD9DC")]
	public static LTDescr LeanMoveLocal(this GameObject gameObject, LTSpline to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000330")]
	[Address(RVA = "0xDCDA54", Offset = "0xDCDA54", VA = "0xDCDA54")]
	public static LTDescr LeanMoveLocal(this Transform transform, Vector3 to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000331")]
	[Address(RVA = "0xDCDAF8", Offset = "0xDCDAF8", VA = "0xDCDAF8")]
	public static LTDescr LeanMoveLocal(this Transform transform, LTBezierPath to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000332")]
	[Address(RVA = "0xDCDB84", Offset = "0xDCDB84", VA = "0xDCDB84")]
	public static LTDescr LeanMoveLocal(this Transform transform, LTSpline to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000333")]
	[Address(RVA = "0xDCDC10", Offset = "0xDCDC10", VA = "0xDCDC10")]
	public static LTDescr LeanMoveLocalX(this GameObject gameObject, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000334")]
	[Address(RVA = "0xDCDC80", Offset = "0xDCDC80", VA = "0xDCDC80")]
	public static LTDescr LeanMoveLocalY(this GameObject gameObject, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000335")]
	[Address(RVA = "0xDCDCF0", Offset = "0xDCDCF0", VA = "0xDCDCF0")]
	public static LTDescr LeanMoveLocalZ(this GameObject gameObject, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000336")]
	[Address(RVA = "0xDCDD60", Offset = "0xDCDD60", VA = "0xDCDD60")]
	public static LTDescr LeanMoveLocalX(this Transform transform, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000337")]
	[Address(RVA = "0xDCDDEC", Offset = "0xDCDDEC", VA = "0xDCDDEC")]
	public static LTDescr LeanMoveLocalY(this Transform transform, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000338")]
	[Address(RVA = "0xDCDE78", Offset = "0xDCDE78", VA = "0xDCDE78")]
	public static LTDescr LeanMoveLocalZ(this Transform transform, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000339")]
	[Address(RVA = "0xDCDF04", Offset = "0xDCDF04", VA = "0xDCDF04")]
	public static LTDescr LeanMoveSpline(this GameObject gameObject, Vector3[] to, float time)
	{
		return null;
	}

	[Token(Token = "0x600033A")]
	[Address(RVA = "0xDCDF7C", Offset = "0xDCDF7C", VA = "0xDCDF7C")]
	public static LTDescr LeanMoveSpline(this GameObject gameObject, LTSpline to, float time)
	{
		return null;
	}

	[Token(Token = "0x600033B")]
	[Address(RVA = "0xDCDFF4", Offset = "0xDCDFF4", VA = "0xDCDFF4")]
	public static LTDescr LeanMoveSpline(this Transform transform, Vector3[] to, float time)
	{
		return null;
	}

	[Token(Token = "0x600033C")]
	[Address(RVA = "0xDCE080", Offset = "0xDCE080", VA = "0xDCE080")]
	public static LTDescr LeanMoveSpline(this Transform transform, LTSpline to, float time)
	{
		return null;
	}

	[Token(Token = "0x600033D")]
	[Address(RVA = "0xDCE10C", Offset = "0xDCE10C", VA = "0xDCE10C")]
	public static LTDescr LeanMoveSplineLocal(this GameObject gameObject, Vector3[] to, float time)
	{
		return null;
	}

	[Token(Token = "0x600033E")]
	[Address(RVA = "0xDCE184", Offset = "0xDCE184", VA = "0xDCE184")]
	public static LTDescr LeanMoveSplineLocal(this Transform transform, Vector3[] to, float time)
	{
		return null;
	}

	[Token(Token = "0x600033F")]
	[Address(RVA = "0xDCE210", Offset = "0xDCE210", VA = "0xDCE210")]
	public static LTDescr LeanMoveX(this GameObject gameObject, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000340")]
	[Address(RVA = "0xDCE280", Offset = "0xDCE280", VA = "0xDCE280")]
	public static LTDescr LeanMoveX(this Transform transform, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000341")]
	[Address(RVA = "0xDCE30C", Offset = "0xDCE30C", VA = "0xDCE30C")]
	public static LTDescr LeanMoveX(this RectTransform rectTransform, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000342")]
	[Address(RVA = "0xDCE37C", Offset = "0xDCE37C", VA = "0xDCE37C")]
	public static LTDescr LeanMoveY(this GameObject gameObject, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000343")]
	[Address(RVA = "0xDCE3EC", Offset = "0xDCE3EC", VA = "0xDCE3EC")]
	public static LTDescr LeanMoveY(this Transform transform, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000344")]
	[Address(RVA = "0xDCE478", Offset = "0xDCE478", VA = "0xDCE478")]
	public static LTDescr LeanMoveY(this RectTransform rectTransform, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000345")]
	[Address(RVA = "0xDCE4E8", Offset = "0xDCE4E8", VA = "0xDCE4E8")]
	public static LTDescr LeanMoveZ(this GameObject gameObject, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000346")]
	[Address(RVA = "0xDCE558", Offset = "0xDCE558", VA = "0xDCE558")]
	public static LTDescr LeanMoveZ(this Transform transform, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000347")]
	[Address(RVA = "0xDCE5E4", Offset = "0xDCE5E4", VA = "0xDCE5E4")]
	public static LTDescr LeanMoveZ(this RectTransform rectTransform, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000348")]
	[Address(RVA = "0xDCE654", Offset = "0xDCE654", VA = "0xDCE654")]
	public static void LeanPause(this GameObject gameObject)
	{
	}

	[Token(Token = "0x6000349")]
	[Address(RVA = "0xDCE6AC", Offset = "0xDCE6AC", VA = "0xDCE6AC")]
	public static LTDescr LeanPlay(this RectTransform rectTransform, Sprite[] sprites)
	{
		return null;
	}

	[Token(Token = "0x600034A")]
	[Address(RVA = "0xDCE714", Offset = "0xDCE714", VA = "0xDCE714")]
	public static void LeanResume(this GameObject gameObject)
	{
	}

	[Token(Token = "0x600034B")]
	[Address(RVA = "0xDCE76C", Offset = "0xDCE76C", VA = "0xDCE76C")]
	public static LTDescr LeanRotate(this GameObject gameObject, Vector3 to, float time)
	{
		return null;
	}

	[Token(Token = "0x600034C")]
	[Address(RVA = "0xDCE7F4", Offset = "0xDCE7F4", VA = "0xDCE7F4")]
	public static LTDescr LeanRotate(this Transform transform, Vector3 to, float time)
	{
		return null;
	}

	[Token(Token = "0x600034D")]
	[Address(RVA = "0xDCE898", Offset = "0xDCE898", VA = "0xDCE898")]
	public static LTDescr LeanRotate(this RectTransform rectTransform, Vector3 to, float time)
	{
		return null;
	}

	[Token(Token = "0x600034E")]
	[Address(RVA = "0xDCE920", Offset = "0xDCE920", VA = "0xDCE920")]
	public static LTDescr LeanRotateAround(this GameObject gameObject, Vector3 axis, float add, float time)
	{
		return null;
	}

	[Token(Token = "0x600034F")]
	[Address(RVA = "0xDCE9B8", Offset = "0xDCE9B8", VA = "0xDCE9B8")]
	public static LTDescr LeanRotateAround(this Transform transform, Vector3 axis, float add, float time)
	{
		return null;
	}

	[Token(Token = "0x6000350")]
	[Address(RVA = "0xDCEA6C", Offset = "0xDCEA6C", VA = "0xDCEA6C")]
	public static LTDescr LeanRotateAround(this RectTransform rectTransform, Vector3 axis, float add, float time)
	{
		return null;
	}

	[Token(Token = "0x6000351")]
	[Address(RVA = "0xDCEB04", Offset = "0xDCEB04", VA = "0xDCEB04")]
	public static LTDescr LeanRotateAroundLocal(this GameObject gameObject, Vector3 axis, float add, float time)
	{
		return null;
	}

	[Token(Token = "0x6000352")]
	[Address(RVA = "0xDCEB9C", Offset = "0xDCEB9C", VA = "0xDCEB9C")]
	public static LTDescr LeanRotateAroundLocal(this Transform transform, Vector3 axis, float add, float time)
	{
		return null;
	}

	[Token(Token = "0x6000353")]
	[Address(RVA = "0xDCEC50", Offset = "0xDCEC50", VA = "0xDCEC50")]
	public static LTDescr LeanRotateAroundLocal(this RectTransform rectTransform, Vector3 axis, float add, float time)
	{
		return null;
	}

	[Token(Token = "0x6000354")]
	[Address(RVA = "0xDCECE8", Offset = "0xDCECE8", VA = "0xDCECE8")]
	public static LTDescr LeanRotateX(this GameObject gameObject, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000355")]
	[Address(RVA = "0xDCED58", Offset = "0xDCED58", VA = "0xDCED58")]
	public static LTDescr LeanRotateX(this Transform transform, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000356")]
	[Address(RVA = "0xDCEDE4", Offset = "0xDCEDE4", VA = "0xDCEDE4")]
	public static LTDescr LeanRotateY(this GameObject gameObject, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000357")]
	[Address(RVA = "0xDCEE54", Offset = "0xDCEE54", VA = "0xDCEE54")]
	public static LTDescr LeanRotateY(this Transform transform, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000358")]
	[Address(RVA = "0xDCEEE0", Offset = "0xDCEEE0", VA = "0xDCEEE0")]
	public static LTDescr LeanRotateZ(this GameObject gameObject, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000359")]
	[Address(RVA = "0xDCEF50", Offset = "0xDCEF50", VA = "0xDCEF50")]
	public static LTDescr LeanRotateZ(this Transform transform, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x600035A")]
	[Address(RVA = "0xDCEFDC", Offset = "0xDCEFDC", VA = "0xDCEFDC")]
	public static LTDescr LeanScale(this GameObject gameObject, Vector3 to, float time)
	{
		return null;
	}

	[Token(Token = "0x600035B")]
	[Address(RVA = "0xDCF064", Offset = "0xDCF064", VA = "0xDCF064")]
	public static LTDescr LeanScale(this Transform transform, Vector3 to, float time)
	{
		return null;
	}

	[Token(Token = "0x600035C")]
	[Address(RVA = "0xDCF108", Offset = "0xDCF108", VA = "0xDCF108")]
	public static LTDescr LeanScale(this RectTransform rectTransform, Vector3 to, float time)
	{
		return null;
	}

	[Token(Token = "0x600035D")]
	[Address(RVA = "0xDCF190", Offset = "0xDCF190", VA = "0xDCF190")]
	public static LTDescr LeanScaleX(this GameObject gameObject, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x600035E")]
	[Address(RVA = "0xDCF200", Offset = "0xDCF200", VA = "0xDCF200")]
	public static LTDescr LeanScaleX(this Transform transform, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x600035F")]
	[Address(RVA = "0xDCF28C", Offset = "0xDCF28C", VA = "0xDCF28C")]
	public static LTDescr LeanScaleY(this GameObject gameObject, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000360")]
	[Address(RVA = "0xDCF2FC", Offset = "0xDCF2FC", VA = "0xDCF2FC")]
	public static LTDescr LeanScaleY(this Transform transform, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000361")]
	[Address(RVA = "0xDCF388", Offset = "0xDCF388", VA = "0xDCF388")]
	public static LTDescr LeanScaleZ(this GameObject gameObject, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000362")]
	[Address(RVA = "0xDCF3F8", Offset = "0xDCF3F8", VA = "0xDCF3F8")]
	public static LTDescr LeanScaleZ(this Transform transform, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000363")]
	[Address(RVA = "0xDCF484", Offset = "0xDCF484", VA = "0xDCF484")]
	public static LTDescr LeanSize(this RectTransform rectTransform, Vector2 to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000364")]
	[Address(RVA = "0xDCF504", Offset = "0xDCF504", VA = "0xDCF504")]
	public static LTDescr LeanValue(this GameObject gameObject, Color from, Color to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000365")]
	[Address(RVA = "0xDCF61C", Offset = "0xDCF61C", VA = "0xDCF61C")]
	public static LTDescr LeanValue(this GameObject gameObject, float from, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000366")]
	[Address(RVA = "0xDCF69C", Offset = "0xDCF69C", VA = "0xDCF69C")]
	public static LTDescr LeanValue(this GameObject gameObject, Vector2 from, Vector2 to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000367")]
	[Address(RVA = "0xDCF734", Offset = "0xDCF734", VA = "0xDCF734")]
	public static LTDescr LeanValue(this GameObject gameObject, Vector3 from, Vector3 to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000368")]
	[Address(RVA = "0xDCF7E4", Offset = "0xDCF7E4", VA = "0xDCF7E4")]
	public static LTDescr LeanValue(this GameObject gameObject, Action<float> callOnUpdate, float from, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000369")]
	[Address(RVA = "0xDCF874", Offset = "0xDCF874", VA = "0xDCF874")]
	public static LTDescr LeanValue(this GameObject gameObject, Action<float, float> callOnUpdate, float from, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x600036A")]
	[Address(RVA = "0xDCF904", Offset = "0xDCF904", VA = "0xDCF904")]
	public static LTDescr LeanValue(this GameObject gameObject, Action<float, object> callOnUpdate, float from, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x600036B")]
	[Address(RVA = "0xDCF994", Offset = "0xDCF994", VA = "0xDCF994")]
	public static LTDescr LeanValue(this GameObject gameObject, Action<Color> callOnUpdate, Color from, Color to, float time)
	{
		return null;
	}

	[Token(Token = "0x600036C")]
	[Address(RVA = "0xDCFAB4", Offset = "0xDCFAB4", VA = "0xDCFAB4")]
	public static LTDescr LeanValue(this GameObject gameObject, Action<Vector2> callOnUpdate, Vector2 from, Vector2 to, float time)
	{
		return null;
	}

	[Token(Token = "0x600036D")]
	[Address(RVA = "0xDCFB5C", Offset = "0xDCFB5C", VA = "0xDCFB5C")]
	public static LTDescr LeanValue(this GameObject gameObject, Action<Vector3> callOnUpdate, Vector3 from, Vector3 to, float time)
	{
		return null;
	}

	[Token(Token = "0x600036E")]
	[Address(RVA = "0xDC61C8", Offset = "0xDC61C8", VA = "0xDC61C8")]
	public static void LeanSetPosX(this Transform transform, float val)
	{
	}

	[Token(Token = "0x600036F")]
	[Address(RVA = "0xDC62C0", Offset = "0xDC62C0", VA = "0xDC62C0")]
	public static void LeanSetPosY(this Transform transform, float val)
	{
	}

	[Token(Token = "0x6000370")]
	[Address(RVA = "0xDC63B8", Offset = "0xDC63B8", VA = "0xDC63B8")]
	public static void LeanSetPosZ(this Transform transform, float val)
	{
	}

	[Token(Token = "0x6000371")]
	[Address(RVA = "0xDC5EE0", Offset = "0xDC5EE0", VA = "0xDC5EE0")]
	public static void LeanSetLocalPosX(this Transform transform, float val)
	{
	}

	[Token(Token = "0x6000372")]
	[Address(RVA = "0xDC5FD8", Offset = "0xDC5FD8", VA = "0xDC5FD8")]
	public static void LeanSetLocalPosY(this Transform transform, float val)
	{
	}

	[Token(Token = "0x6000373")]
	[Address(RVA = "0xDC60D0", Offset = "0xDC60D0", VA = "0xDC60D0")]
	public static void LeanSetLocalPosZ(this Transform transform, float val)
	{
	}

	[Token(Token = "0x6000374")]
	[Address(RVA = "0xDC663C", Offset = "0xDC663C", VA = "0xDC663C")]
	public static Color LeanColor(this Transform transform)
	{
		return default(Color);
	}
}
[Token(Token = "0x2000081")]
public class LTDescr
{
	[Token(Token = "0x2000082")]
	public delegate Vector3 EaseTypeDelegate();

	[Token(Token = "0x2000083")]
	public delegate void ActionMethodDelegate();

	[Token(Token = "0x40002F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public bool toggle;

	[Token(Token = "0x40002F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
	public bool useEstimatedTime;

	[Token(Token = "0x40002F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x12")]
	public bool useFrames;

	[Token(Token = "0x40002F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x13")]
	public bool useManualTime;

	[Token(Token = "0x40002F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public bool usesNormalDt;

	[Token(Token = "0x40002F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x15")]
	public bool hasInitiliazed;

	[Token(Token = "0x40002FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x16")]
	public bool hasExtraOnCompletes;

	[Token(Token = "0x40002FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x17")]
	public bool hasPhysics;

	[Token(Token = "0x40002FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool onCompleteOnRepeat;

	[Token(Token = "0x40002FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool onCompleteOnStart;

	[Token(Token = "0x40002FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	public bool useRecursion;

	[Token(Token = "0x40002FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float ratioPassed;

	[Token(Token = "0x4000300")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float passed;

	[Token(Token = "0x4000301")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float delay;

	[Token(Token = "0x4000302")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float time;

	[Token(Token = "0x4000303")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float speed;

	[Token(Token = "0x4000304")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float lastVal;

	[Token(Token = "0x4000305")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private uint _id;

	[Token(Token = "0x4000306")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public int loopCount;

	[Token(Token = "0x4000307")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public uint counter;

	[Token(Token = "0x4000308")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float direction;

	[Token(Token = "0x4000309")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float directionLast;

	[Token(Token = "0x400030A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float overshoot;

	[Token(Token = "0x400030B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float period;

	[Token(Token = "0x400030C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float scale;

	[Token(Token = "0x400030D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public bool destroyOnComplete;

	[Token(Token = "0x400030E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Transform trans;

	[Token(Token = "0x400030F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	internal Vector3 fromInternal;

	[Token(Token = "0x4000310")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	internal Vector3 toInternal;

	[Token(Token = "0x4000311")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	internal Vector3 diff;

	[Token(Token = "0x4000312")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	internal Vector3 diffDiv2;

	[Token(Token = "0x4000313")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public TweenAction type;

	[Token(Token = "0x4000314")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private LeanTweenType easeType;

	[Token(Token = "0x4000315")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public LeanTweenType loopType;

	[Token(Token = "0x4000316")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	public bool hasUpdateCallback;

	[Token(Token = "0x4000317")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public EaseTypeDelegate easeMethod;

	[Token(Token = "0x400031A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public SpriteRenderer spriteRen;

	[Token(Token = "0x400031B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public RectTransform rectTransform;

	[Token(Token = "0x400031C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public Text uiText;

	[Token(Token = "0x400031D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public Image uiImage;

	[Token(Token = "0x400031E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public RawImage rawImage;

	[Token(Token = "0x400031F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public Sprite[] sprites;

	[Token(Token = "0x4000320")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public LTDescrOptional _optional;

	[Token(Token = "0x4000321")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static float val;

	[Token(Token = "0x4000322")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public static float dt;

	[Token(Token = "0x4000323")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static Vector3 newVect;

	[Token(Token = "0x17000014")]
	public Vector3 from
	{
		[Token(Token = "0x6000375")]
		[Address(RVA = "0xDCFC1C", Offset = "0xDCFC1C", VA = "0xDCFC1C")]
		get
		{
			return default(Vector3);
		}
		[Token(Token = "0x6000376")]
		[Address(RVA = "0xDCFC28", Offset = "0xDCFC28", VA = "0xDCFC28")]
		set
		{
		}
	}

	[Token(Token = "0x17000015")]
	public Vector3 to
	{
		[Token(Token = "0x6000377")]
		[Address(RVA = "0xDCFC34", Offset = "0xDCFC34", VA = "0xDCFC34")]
		get
		{
			return default(Vector3);
		}
		[Token(Token = "0x6000378")]
		[Address(RVA = "0xDCFC40", Offset = "0xDCFC40", VA = "0xDCFC40")]
		set
		{
		}
	}

	[Token(Token = "0x17000016")]
	public ActionMethodDelegate easeInternal
	{
		[Token(Token = "0x6000379")]
		[Address(RVA = "0xDCFC4C", Offset = "0xDCFC4C", VA = "0xDCFC4C")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x600037A")]
		[Address(RVA = "0xDCFC54", Offset = "0xDCFC54", VA = "0xDCFC54")]
		[CompilerGenerated]
		set
		{
		}
	}

	[Token(Token = "0x17000017")]
	public ActionMethodDelegate initInternal
	{
		[Token(Token = "0x600037B")]
		[Address(RVA = "0xDCFC5C", Offset = "0xDCFC5C", VA = "0xDCFC5C")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x600037C")]
		[Address(RVA = "0xDCFC64", Offset = "0xDCFC64", VA = "0xDCFC64")]
		[CompilerGenerated]
		set
		{
		}
	}

	[Token(Token = "0x17000018")]
	public Transform toTrans
	{
		[Token(Token = "0x600037D")]
		[Address(RVA = "0xDC5D18", Offset = "0xDC5D18", VA = "0xDC5D18")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000019")]
	public int uniqueId
	{
		[Token(Token = "0x6000381")]
		[Address(RVA = "0xDD07DC", Offset = "0xDD07DC", VA = "0xDD07DC")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x1700001A")]
	public int id
	{
		[Token(Token = "0x6000382")]
		[Address(RVA = "0xDD0688", Offset = "0xDD0688", VA = "0xDD0688")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x1700001B")]
	public LTDescrOptional optional
	{
		[Token(Token = "0x6000383")]
		[Address(RVA = "0xDD07EC", Offset = "0xDD07EC", VA = "0xDD07EC")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000384")]
		[Address(RVA = "0xDD07F4", Offset = "0xDD07F4", VA = "0xDD07F4")]
		set
		{
		}
	}

	[Token(Token = "0x600037E")]
	[Address(RVA = "0xDCFC6C", Offset = "0xDCFC6C", VA = "0xDCFC6C", Slot = "3")]
	public override string ToString()
	{
		return null;
	}

	[Token(Token = "0x600037F")]
	[Address(RVA = "0xDD0698", Offset = "0xDD0698", VA = "0xDD0698")]
	public LTDescr()
	{
	}

	[Token(Token = "0x6000380")]
	[Address(RVA = "0xDD0714", Offset = "0xDD0714", VA = "0xDD0714")]
	[Obsolete("Use 'LeanTween.cancel( id )' instead")]
	public LTDescr cancel(GameObject gameObject)
	{
		return null;
	}

	[Token(Token = "0x6000385")]
	[Address(RVA = "0xDD07FC", Offset = "0xDD07FC", VA = "0xDD07FC")]
	public void reset()
	{
	}

	[Token(Token = "0x6000386")]
	[Address(RVA = "0xDD0950", Offset = "0xDD0950", VA = "0xDD0950")]
	public LTDescr setFollow()
	{
		return null;
	}

	[Token(Token = "0x6000387")]
	[Address(RVA = "0xDD095C", Offset = "0xDD095C", VA = "0xDD095C")]
	public LTDescr setMoveX()
	{
		return null;
	}

	[Token(Token = "0x6000388")]
	[Address(RVA = "0xDD0A30", Offset = "0xDD0A30", VA = "0xDD0A30")]
	public LTDescr setMoveY()
	{
		return null;
	}

	[Token(Token = "0x6000389")]
	[Address(RVA = "0xDD0B08", Offset = "0xDD0B08", VA = "0xDD0B08")]
	public LTDescr setMoveZ()
	{
		return null;
	}

	[Token(Token = "0x600038A")]
	[Address(RVA = "0xDD0BE0", Offset = "0xDD0BE0", VA = "0xDD0BE0")]
	public LTDescr setMoveLocalX()
	{
		return null;
	}

	[Token(Token = "0x600038B")]
	[Address(RVA = "0xDD0CB8", Offset = "0xDD0CB8", VA = "0xDD0CB8")]
	public LTDescr setMoveLocalY()
	{
		return null;
	}

	[Token(Token = "0x600038C")]
	[Address(RVA = "0xDD0D90", Offset = "0xDD0D90", VA = "0xDD0D90")]
	public LTDescr setMoveLocalZ()
	{
		return null;
	}

	[Token(Token = "0x600038D")]
	[Address(RVA = "0xDD0E68", Offset = "0xDD0E68", VA = "0xDD0E68")]
	private void initFromInternal()
	{
	}

	[Token(Token = "0x600038E")]
	[Address(RVA = "0xDD0E70", Offset = "0xDD0E70", VA = "0xDD0E70")]
	public LTDescr setOffset(Vector3 offset)
	{
		return null;
	}

	[Token(Token = "0x600038F")]
	[Address(RVA = "0xDD0E7C", Offset = "0xDD0E7C", VA = "0xDD0E7C")]
	public LTDescr setMoveCurved()
	{
		return null;
	}

	[Token(Token = "0x6000390")]
	[Address(RVA = "0xDD0F54", Offset = "0xDD0F54", VA = "0xDD0F54")]
	public LTDescr setMoveCurvedLocal()
	{
		return null;
	}

	[Token(Token = "0x6000391")]
	[Address(RVA = "0xDD102C", Offset = "0xDD102C", VA = "0xDD102C")]
	public LTDescr setMoveSpline()
	{
		return null;
	}

	[Token(Token = "0x6000392")]
	[Address(RVA = "0xDD1104", Offset = "0xDD1104", VA = "0xDD1104")]
	public LTDescr setMoveSplineLocal()
	{
		return null;
	}

	[Token(Token = "0x6000393")]
	[Address(RVA = "0xDD11DC", Offset = "0xDD11DC", VA = "0xDD11DC")]
	public LTDescr setScaleX()
	{
		return null;
	}

	[Token(Token = "0x6000394")]
	[Address(RVA = "0xDD12B4", Offset = "0xDD12B4", VA = "0xDD12B4")]
	public LTDescr setScaleY()
	{
		return null;
	}

	[Token(Token = "0x6000395")]
	[Address(RVA = "0xDD138C", Offset = "0xDD138C", VA = "0xDD138C")]
	public LTDescr setScaleZ()
	{
		return null;
	}

	[Token(Token = "0x6000396")]
	[Address(RVA = "0xDD1464", Offset = "0xDD1464", VA = "0xDD1464")]
	public LTDescr setRotateX()
	{
		return null;
	}

	[Token(Token = "0x6000397")]
	[Address(RVA = "0xDD153C", Offset = "0xDD153C", VA = "0xDD153C")]
	public LTDescr setRotateY()
	{
		return null;
	}

	[Token(Token = "0x6000398")]
	[Address(RVA = "0xDD1614", Offset = "0xDD1614", VA = "0xDD1614")]
	public LTDescr setRotateZ()
	{
		return null;
	}

	[Token(Token = "0x6000399")]
	[Address(RVA = "0xDD16EC", Offset = "0xDD16EC", VA = "0xDD16EC")]
	public LTDescr setRotateAround()
	{
		return null;
	}

	[Token(Token = "0x600039A")]
	[Address(RVA = "0xDD17C4", Offset = "0xDD17C4", VA = "0xDD17C4")]
	public LTDescr setRotateAroundLocal()
	{
		return null;
	}

	[Token(Token = "0x600039B")]
	[Address(RVA = "0xDD189C", Offset = "0xDD189C", VA = "0xDD189C")]
	public LTDescr setAlpha()
	{
		return null;
	}

	[Token(Token = "0x600039C")]
	[Address(RVA = "0xDD1974", Offset = "0xDD1974", VA = "0xDD1974")]
	public LTDescr setTextAlpha()
	{
		return null;
	}

	[Token(Token = "0x600039D")]
	[Address(RVA = "0xDD1A4C", Offset = "0xDD1A4C", VA = "0xDD1A4C")]
	public LTDescr setAlphaVertex()
	{
		return null;
	}

	[Token(Token = "0x600039E")]
	[Address(RVA = "0xDD1B24", Offset = "0xDD1B24", VA = "0xDD1B24")]
	public LTDescr setColor()
	{
		return null;
	}

	[Token(Token = "0x600039F")]
	[Address(RVA = "0xDD1BFC", Offset = "0xDD1BFC", VA = "0xDD1BFC")]
	public LTDescr setCallbackColor()
	{
		return null;
	}

	[Token(Token = "0x60003A0")]
	[Address(RVA = "0xDD1CD4", Offset = "0xDD1CD4", VA = "0xDD1CD4")]
	public LTDescr setTextColor()
	{
		return null;
	}

	[Token(Token = "0x60003A1")]
	[Address(RVA = "0xDD1DAC", Offset = "0xDD1DAC", VA = "0xDD1DAC")]
	public LTDescr setCanvasAlpha()
	{
		return null;
	}

	[Token(Token = "0x60003A2")]
	[Address(RVA = "0xDD1E84", Offset = "0xDD1E84", VA = "0xDD1E84")]
	public LTDescr setCanvasGroupAlpha()
	{
		return null;
	}

	[Token(Token = "0x60003A3")]
	[Address(RVA = "0xDD1F5C", Offset = "0xDD1F5C", VA = "0xDD1F5C")]
	public LTDescr setCanvasColor()
	{
		return null;
	}

	[Token(Token = "0x60003A4")]
	[Address(RVA = "0xDD2034", Offset = "0xDD2034", VA = "0xDD2034")]
	public LTDescr setCanvasMoveX()
	{
		return null;
	}

	[Token(Token = "0x60003A5")]
	[Address(RVA = "0xDD210C", Offset = "0xDD210C", VA = "0xDD210C")]
	public LTDescr setCanvasMoveY()
	{
		return null;
	}

	[Token(Token = "0x60003A6")]
	[Address(RVA = "0xDD21E4", Offset = "0xDD21E4", VA = "0xDD21E4")]
	public LTDescr setCanvasMoveZ()
	{
		return null;
	}

	[Token(Token = "0x60003A7")]
	[Address(RVA = "0xDD22BC", Offset = "0xDD22BC", VA = "0xDD22BC")]
	private void initCanvasRotateAround()
	{
	}

	[Token(Token = "0x60003A8")]
	[Address(RVA = "0xDD22F8", Offset = "0xDD22F8", VA = "0xDD22F8")]
	public LTDescr setCanvasRotateAround()
	{
		return null;
	}

	[Token(Token = "0x60003A9")]
	[Address(RVA = "0xDD23D0", Offset = "0xDD23D0", VA = "0xDD23D0")]
	public LTDescr setCanvasRotateAroundLocal()
	{
		return null;
	}

	[Token(Token = "0x60003AA")]
	[Address(RVA = "0xDD24A8", Offset = "0xDD24A8", VA = "0xDD24A8")]
	public LTDescr setCanvasPlaySprite()
	{
		return null;
	}

	[Token(Token = "0x60003AB")]
	[Address(RVA = "0xDD2580", Offset = "0xDD2580", VA = "0xDD2580")]
	public LTDescr setCanvasMove()
	{
		return null;
	}

	[Token(Token = "0x60003AC")]
	[Address(RVA = "0xDD2658", Offset = "0xDD2658", VA = "0xDD2658")]
	public LTDescr setCanvasScale()
	{
		return null;
	}

	[Token(Token = "0x60003AD")]
	[Address(RVA = "0xDD2730", Offset = "0xDD2730", VA = "0xDD2730")]
	public LTDescr setCanvasSizeDelta()
	{
		return null;
	}

	[Token(Token = "0x60003AE")]
	[Address(RVA = "0xDD2808", Offset = "0xDD2808", VA = "0xDD2808")]
	private void callback()
	{
	}

	[Token(Token = "0x60003AF")]
	[Address(RVA = "0xDD2880", Offset = "0xDD2880", VA = "0xDD2880")]
	public LTDescr setCallback()
	{
		return null;
	}

	[Token(Token = "0x60003B0")]
	[Address(RVA = "0xDD29C0", Offset = "0xDD29C0", VA = "0xDD29C0")]
	public LTDescr setValue3()
	{
		return null;
	}

	[Token(Token = "0x60003B1")]
	[Address(RVA = "0xDD2B00", Offset = "0xDD2B00", VA = "0xDD2B00")]
	public LTDescr setMove()
	{
		return null;
	}

	[Token(Token = "0x60003B2")]
	[Address(RVA = "0xDD2BD8", Offset = "0xDD2BD8", VA = "0xDD2BD8")]
	public LTDescr setMoveLocal()
	{
		return null;
	}

	[Token(Token = "0x60003B3")]
	[Address(RVA = "0xDD2CB0", Offset = "0xDD2CB0", VA = "0xDD2CB0")]
	public LTDescr setMoveToTransform()
	{
		return null;
	}

	[Token(Token = "0x60003B4")]
	[Address(RVA = "0xDD2D88", Offset = "0xDD2D88", VA = "0xDD2D88")]
	public LTDescr setRotate()
	{
		return null;
	}

	[Token(Token = "0x60003B5")]
	[Address(RVA = "0xDD2E60", Offset = "0xDD2E60", VA = "0xDD2E60")]
	public LTDescr setRotateLocal()
	{
		return null;
	}

	[Token(Token = "0x60003B6")]
	[Address(RVA = "0xDD2F38", Offset = "0xDD2F38", VA = "0xDD2F38")]
	public LTDescr setScale()
	{
		return null;
	}

	[Token(Token = "0x60003B7")]
	[Address(RVA = "0xDD3010", Offset = "0xDD3010", VA = "0xDD3010")]
	public LTDescr setGUIMove()
	{
		return null;
	}

	[Token(Token = "0x60003B8")]
	[Address(RVA = "0xDD30E8", Offset = "0xDD30E8", VA = "0xDD30E8")]
	public LTDescr setGUIMoveMargin()
	{
		return null;
	}

	[Token(Token = "0x60003B9")]
	[Address(RVA = "0xDD31C0", Offset = "0xDD31C0", VA = "0xDD31C0")]
	public LTDescr setGUIScale()
	{
		return null;
	}

	[Token(Token = "0x60003BA")]
	[Address(RVA = "0xDD3298", Offset = "0xDD3298", VA = "0xDD3298")]
	public LTDescr setGUIAlpha()
	{
		return null;
	}

	[Token(Token = "0x60003BB")]
	[Address(RVA = "0xDD3370", Offset = "0xDD3370", VA = "0xDD3370")]
	public LTDescr setGUIRotate()
	{
		return null;
	}

	[Token(Token = "0x60003BC")]
	[Address(RVA = "0xDD3448", Offset = "0xDD3448", VA = "0xDD3448")]
	public LTDescr setDelayedSound()
	{
		return null;
	}

	[Token(Token = "0x60003BD")]
	[Address(RVA = "0xDD3520", Offset = "0xDD3520", VA = "0xDD3520")]
	public LTDescr setTarget(Transform trans)
	{
		return null;
	}

	[Token(Token = "0x60003BE")]
	[Address(RVA = "0xDD3548", Offset = "0xDD3548", VA = "0xDD3548")]
	private void init()
	{
	}

	[Token(Token = "0x60003BF")]
	[Address(RVA = "0xDD3784", Offset = "0xDD3784", VA = "0xDD3784")]
	private void initSpeed()
	{
	}

	[Token(Token = "0x60003C0")]
	[Address(RVA = "0xDD3878", Offset = "0xDD3878", VA = "0xDD3878")]
	public LTDescr updateNow()
	{
		return null;
	}

	[Token(Token = "0x60003C1")]
	[Address(RVA = "0xDD3890", Offset = "0xDD3890", VA = "0xDD3890")]
	public bool updateInternal()
	{
		return default(bool);
	}

	[Token(Token = "0x60003C2")]
	[Address(RVA = "0xDD368C", Offset = "0xDD368C", VA = "0xDD368C")]
	public void callOnCompletes()
	{
	}

	[Token(Token = "0x60003C3")]
	[Address(RVA = "0xDD3B5C", Offset = "0xDD3B5C", VA = "0xDD3B5C")]
	public LTDescr setFromColor(Color col)
	{
		return null;
	}

	[Token(Token = "0x60003C4")]
	[Address(RVA = "0xDD3B98", Offset = "0xDD3B98", VA = "0xDD3B98")]
	private static void alphaRecursive(Transform transform, float val, bool useRecursion = true)
	{
	}

	[Token(Token = "0x60003C5")]
	[Address(RVA = "0xDD4010", Offset = "0xDD4010", VA = "0xDD4010")]
	private static void colorRecursive(Transform transform, Color toColor, bool useRecursion = true)
	{
	}

	[Token(Token = "0x60003C6")]
	[Address(RVA = "0xDD43F4", Offset = "0xDD43F4", VA = "0xDD43F4")]
	private static void alphaRecursive(RectTransform rectTransform, float val, int recursiveLevel = 0)
	{
	}

	[Token(Token = "0x60003C7")]
	[Address(RVA = "0xDD4834", Offset = "0xDD4834", VA = "0xDD4834")]
	private static void alphaRecursiveSprite(Transform transform, float val)
	{
	}

	[Token(Token = "0x60003C8")]
	[Address(RVA = "0xDD4C0C", Offset = "0xDD4C0C", VA = "0xDD4C0C")]
	private static void colorRecursiveSprite(Transform transform, Color toColor)
	{
	}

	[Token(Token = "0x60003C9")]
	[Address(RVA = "0xDD500C", Offset = "0xDD500C", VA = "0xDD500C")]
	private static void colorRecursive(RectTransform rectTransform, Color toColor)
	{
	}

	[Token(Token = "0x60003CA")]
	[Address(RVA = "0xDD5444", Offset = "0xDD5444", VA = "0xDD5444")]
	private static void textAlphaChildrenRecursive(Transform trans, float val, bool useRecursion = true)
	{
	}

	[Token(Token = "0x60003CB")]
	[Address(RVA = "0xDD57FC", Offset = "0xDD57FC", VA = "0xDD57FC")]
	private static void textAlphaRecursive(Transform trans, float val, bool useRecursion = true)
	{
	}

	[Token(Token = "0x60003CC")]
	[Address(RVA = "0xDD5B7C", Offset = "0xDD5B7C", VA = "0xDD5B7C")]
	private static void textColorRecursive(Transform trans, Color toColor)
	{
	}

	[Token(Token = "0x60003CD")]
	[Address(RVA = "0xDD5F38", Offset = "0xDD5F38", VA = "0xDD5F38")]
	private static Color tweenColor(LTDescr tween, float val)
	{
		return default(Color);
	}

	[Token(Token = "0x60003CE")]
	[Address(RVA = "0xDD5F94", Offset = "0xDD5F94", VA = "0xDD5F94")]
	public LTDescr pause()
	{
		return null;
	}

	[Token(Token = "0x60003CF")]
	[Address(RVA = "0xDD5FAC", Offset = "0xDD5FAC", VA = "0xDD5FAC")]
	public LTDescr resume()
	{
		return null;
	}

	[Token(Token = "0x60003D0")]
	[Address(RVA = "0xDD5FB8", Offset = "0xDD5FB8", VA = "0xDD5FB8")]
	public LTDescr setAxis(Vector3 axis)
	{
		return null;
	}

	[Token(Token = "0x60003D1")]
	[Address(RVA = "0xDD5FD8", Offset = "0xDD5FD8", VA = "0xDD5FD8")]
	public LTDescr setDelay(float delay)
	{
		return null;
	}

	[Token(Token = "0x60003D2")]
	[Address(RVA = "0xDD5FE0", Offset = "0xDD5FE0", VA = "0xDD5FE0")]
	public LTDescr setEase(LeanTweenType easeType)
	{
		return null;
	}

	[Token(Token = "0x60003D3")]
	[Address(RVA = "0xDD611C", Offset = "0xDD611C", VA = "0xDD611C")]
	public LTDescr setEaseLinear()
	{
		return null;
	}

	[Token(Token = "0x60003D4")]
	[Address(RVA = "0xDD74C8", Offset = "0xDD74C8", VA = "0xDD74C8")]
	public LTDescr setEaseSpring()
	{
		return null;
	}

	[Token(Token = "0x60003D5")]
	[Address(RVA = "0xDD6244", Offset = "0xDD6244", VA = "0xDD6244")]
	public LTDescr setEaseInQuad()
	{
		return null;
	}

	[Token(Token = "0x60003D6")]
	[Address(RVA = "0xDD61B0", Offset = "0xDD61B0", VA = "0xDD61B0")]
	public LTDescr setEaseOutQuad()
	{
		return null;
	}

	[Token(Token = "0x60003D7")]
	[Address(RVA = "0xDD62D8", Offset = "0xDD62D8", VA = "0xDD62D8")]
	public LTDescr setEaseInOutQuad()
	{
		return null;
	}

	[Token(Token = "0x60003D8")]
	[Address(RVA = "0xDD636C", Offset = "0xDD636C", VA = "0xDD636C")]
	public LTDescr setEaseInCubic()
	{
		return null;
	}

	[Token(Token = "0x60003D9")]
	[Address(RVA = "0xDD6400", Offset = "0xDD6400", VA = "0xDD6400")]
	public LTDescr setEaseOutCubic()
	{
		return null;
	}

	[Token(Token = "0x60003DA")]
	[Address(RVA = "0xDD6494", Offset = "0xDD6494", VA = "0xDD6494")]
	public LTDescr setEaseInOutCubic()
	{
		return null;
	}

	[Token(Token = "0x60003DB")]
	[Address(RVA = "0xDD6528", Offset = "0xDD6528", VA = "0xDD6528")]
	public LTDescr setEaseInQuart()
	{
		return null;
	}

	[Token(Token = "0x60003DC")]
	[Address(RVA = "0xDD65BC", Offset = "0xDD65BC", VA = "0xDD65BC")]
	public LTDescr setEaseOutQuart()
	{
		return null;
	}

	[Token(Token = "0x60003DD")]
	[Address(RVA = "0xDD6650", Offset = "0xDD6650", VA = "0xDD6650")]
	public LTDescr setEaseInOutQuart()
	{
		return null;
	}

	[Token(Token = "0x60003DE")]
	[Address(RVA = "0xDD66E4", Offset = "0xDD66E4", VA = "0xDD66E4")]
	public LTDescr setEaseInQuint()
	{
		return null;
	}

	[Token(Token = "0x60003DF")]
	[Address(RVA = "0xDD6778", Offset = "0xDD6778", VA = "0xDD6778")]
	public LTDescr setEaseOutQuint()
	{
		return null;
	}

	[Token(Token = "0x60003E0")]
	[Address(RVA = "0xDD680C", Offset = "0xDD680C", VA = "0xDD680C")]
	public LTDescr setEaseInOutQuint()
	{
		return null;
	}

	[Token(Token = "0x60003E1")]
	[Address(RVA = "0xDD68A0", Offset = "0xDD68A0", VA = "0xDD68A0")]
	public LTDescr setEaseInSine()
	{
		return null;
	}

	[Token(Token = "0x60003E2")]
	[Address(RVA = "0xDD6934", Offset = "0xDD6934", VA = "0xDD6934")]
	public LTDescr setEaseOutSine()
	{
		return null;
	}

	[Token(Token = "0x60003E3")]
	[Address(RVA = "0xDD69C8", Offset = "0xDD69C8", VA = "0xDD69C8")]
	public LTDescr setEaseInOutSine()
	{
		return null;
	}

	[Token(Token = "0x60003E4")]
	[Address(RVA = "0xDD6A5C", Offset = "0xDD6A5C", VA = "0xDD6A5C")]
	public LTDescr setEaseInExpo()
	{
		return null;
	}

	[Token(Token = "0x60003E5")]
	[Address(RVA = "0xDD6AF0", Offset = "0xDD6AF0", VA = "0xDD6AF0")]
	public LTDescr setEaseOutExpo()
	{
		return null;
	}

	[Token(Token = "0x60003E6")]
	[Address(RVA = "0xDD6B84", Offset = "0xDD6B84", VA = "0xDD6B84")]
	public LTDescr setEaseInOutExpo()
	{
		return null;
	}

	[Token(Token = "0x60003E7")]
	[Address(RVA = "0xDD6C18", Offset = "0xDD6C18", VA = "0xDD6C18")]
	public LTDescr setEaseInCirc()
	{
		return null;
	}

	[Token(Token = "0x60003E8")]
	[Address(RVA = "0xDD6CAC", Offset = "0xDD6CAC", VA = "0xDD6CAC")]
	public LTDescr setEaseOutCirc()
	{
		return null;
	}

	[Token(Token = "0x60003E9")]
	[Address(RVA = "0xDD6D40", Offset = "0xDD6D40", VA = "0xDD6D40")]
	public LTDescr setEaseInOutCirc()
	{
		return null;
	}

	[Token(Token = "0x60003EA")]
	[Address(RVA = "0xDD6DD4", Offset = "0xDD6DD4", VA = "0xDD6DD4")]
	public LTDescr setEaseInBounce()
	{
		return null;
	}

	[Token(Token = "0x60003EB")]
	[Address(RVA = "0xDD6E68", Offset = "0xDD6E68", VA = "0xDD6E68")]
	public LTDescr setEaseOutBounce()
	{
		return null;
	}

	[Token(Token = "0x60003EC")]
	[Address(RVA = "0xDD6EFC", Offset = "0xDD6EFC", VA = "0xDD6EFC")]
	public LTDescr setEaseInOutBounce()
	{
		return null;
	}

	[Token(Token = "0x60003ED")]
	[Address(RVA = "0xDD6F90", Offset = "0xDD6F90", VA = "0xDD6F90")]
	public LTDescr setEaseInBack()
	{
		return null;
	}

	[Token(Token = "0x60003EE")]
	[Address(RVA = "0xDD7024", Offset = "0xDD7024", VA = "0xDD7024")]
	public LTDescr setEaseOutBack()
	{
		return null;
	}

	[Token(Token = "0x60003EF")]
	[Address(RVA = "0xDD70B8", Offset = "0xDD70B8", VA = "0xDD70B8")]
	public LTDescr setEaseInOutBack()
	{
		return null;
	}

	[Token(Token = "0x60003F0")]
	[Address(RVA = "0xDD714C", Offset = "0xDD714C", VA = "0xDD714C")]
	public LTDescr setEaseInElastic()
	{
		return null;
	}

	[Token(Token = "0x60003F1")]
	[Address(RVA = "0xDD71E0", Offset = "0xDD71E0", VA = "0xDD71E0")]
	public LTDescr setEaseOutElastic()
	{
		return null;
	}

	[Token(Token = "0x60003F2")]
	[Address(RVA = "0xDD7274", Offset = "0xDD7274", VA = "0xDD7274")]
	public LTDescr setEaseInOutElastic()
	{
		return null;
	}

	[Token(Token = "0x60003F3")]
	[Address(RVA = "0xDD7308", Offset = "0xDD7308", VA = "0xDD7308")]
	public LTDescr setEasePunch()
	{
		return null;
	}

	[Token(Token = "0x60003F4")]
	[Address(RVA = "0xDD73E8", Offset = "0xDD73E8", VA = "0xDD73E8")]
	public LTDescr setEaseShake()
	{
		return null;
	}

	[Token(Token = "0x60003F5")]
	[Address(RVA = "0xDD755C", Offset = "0xDD755C", VA = "0xDD755C")]
	private Vector3 tweenOnCurve()
	{
		return default(Vector3);
	}

	[Token(Token = "0x60003F6")]
	[Address(RVA = "0xDD761C", Offset = "0xDD761C", VA = "0xDD761C")]
	private Vector3 easeInOutQuad()
	{
		return default(Vector3);
	}

	[Token(Token = "0x60003F7")]
	[Address(RVA = "0xDD76C0", Offset = "0xDD76C0", VA = "0xDD76C0")]
	private Vector3 easeInQuad()
	{
		return default(Vector3);
	}

	[Token(Token = "0x60003F8")]
	[Address(RVA = "0xDD7738", Offset = "0xDD7738", VA = "0xDD7738")]
	private Vector3 easeOutQuad()
	{
		return default(Vector3);
	}

	[Token(Token = "0x60003F9")]
	[Address(RVA = "0xDD77BC", Offset = "0xDD77BC", VA = "0xDD77BC")]
	private Vector3 easeLinear()
	{
		return default(Vector3);
	}

	[Token(Token = "0x60003FA")]
	[Address(RVA = "0xDD7834", Offset = "0xDD7834", VA = "0xDD7834")]
	private Vector3 easeSpring()
	{
		return default(Vector3);
	}

	[Token(Token = "0x60003FB")]
	[Address(RVA = "0xDD7930", Offset = "0xDD7930", VA = "0xDD7930")]
	private Vector3 easeInCubic()
	{
		return default(Vector3);
	}

	[Token(Token = "0x60003FC")]
	[Address(RVA = "0xDD79AC", Offset = "0xDD79AC", VA = "0xDD79AC")]
	private Vector3 easeOutCubic()
	{
		return default(Vector3);
	}

	[Token(Token = "0x60003FD")]
	[Address(RVA = "0xDD7A38", Offset = "0xDD7A38", VA = "0xDD7A38")]
	private Vector3 easeInOutCubic()
	{
		return default(Vector3);
	}

	[Token(Token = "0x60003FE")]
	[Address(RVA = "0xDD7AE4", Offset = "0xDD7AE4", VA = "0xDD7AE4")]
	private Vector3 easeInQuart()
	{
		return default(Vector3);
	}

	[Token(Token = "0x60003FF")]
	[Address(RVA = "0xDD7B64", Offset = "0xDD7B64", VA = "0xDD7B64")]
	private Vector3 easeOutQuart()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000400")]
	[Address(RVA = "0xDD7BF4", Offset = "0xDD7BF4", VA = "0xDD7BF4")]
	private Vector3 easeInOutQuart()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000401")]
	[Address(RVA = "0xDD7CC8", Offset = "0xDD7CC8", VA = "0xDD7CC8")]
	private Vector3 easeInQuint()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000402")]
	[Address(RVA = "0xDD7D4C", Offset = "0xDD7D4C", VA = "0xDD7D4C")]
	private Vector3 easeOutQuint()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000403")]
	[Address(RVA = "0xDD7DE0", Offset = "0xDD7DE0", VA = "0xDD7DE0")]
	private Vector3 easeInOutQuint()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000404")]
	[Address(RVA = "0xDD7E9C", Offset = "0xDD7E9C", VA = "0xDD7E9C")]
	private Vector3 easeInSine()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000405")]
	[Address(RVA = "0xDD7F5C", Offset = "0xDD7F5C", VA = "0xDD7F5C")]
	private Vector3 easeOutSine()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000406")]
	[Address(RVA = "0xDD8010", Offset = "0xDD8010", VA = "0xDD8010")]
	private Vector3 easeInOutSine()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000407")]
	[Address(RVA = "0xDD80A0", Offset = "0xDD80A0", VA = "0xDD80A0")]
	private Vector3 easeInExpo()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000408")]
	[Address(RVA = "0xDD8128", Offset = "0xDD8128", VA = "0xDD8128")]
	private Vector3 easeOutExpo()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000409")]
	[Address(RVA = "0xDD81B0", Offset = "0xDD81B0", VA = "0xDD81B0")]
	private Vector3 easeInOutExpo()
	{
		return default(Vector3);
	}

	[Token(Token = "0x600040A")]
	[Address(RVA = "0xDD827C", Offset = "0xDD827C", VA = "0xDD827C")]
	private Vector3 easeInCirc()
	{
		return default(Vector3);
	}

	[Token(Token = "0x600040B")]
	[Address(RVA = "0xDD830C", Offset = "0xDD830C", VA = "0xDD830C")]
	private Vector3 easeOutCirc()
	{
		return default(Vector3);
	}

	[Token(Token = "0x600040C")]
	[Address(RVA = "0xDD8398", Offset = "0xDD8398", VA = "0xDD8398")]
	private Vector3 easeInOutCirc()
	{
		return default(Vector3);
	}

	[Token(Token = "0x600040D")]
	[Address(RVA = "0xDD8468", Offset = "0xDD8468", VA = "0xDD8468")]
	private Vector3 easeInBounce()
	{
		return default(Vector3);
	}

	[Token(Token = "0x600040E")]
	[Address(RVA = "0xDD8594", Offset = "0xDD8594", VA = "0xDD8594")]
	private Vector3 easeOutBounce()
	{
		return default(Vector3);
	}

	[Token(Token = "0x600040F")]
	[Address(RVA = "0xDD86E4", Offset = "0xDD86E4", VA = "0xDD86E4")]
	private Vector3 easeInOutBounce()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000410")]
	[Address(RVA = "0xDD88C0", Offset = "0xDD88C0", VA = "0xDD88C0")]
	private Vector3 easeInBack()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000411")]
	[Address(RVA = "0xDD8968", Offset = "0xDD8968", VA = "0xDD8968")]
	private Vector3 easeOutBack()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000412")]
	[Address(RVA = "0xDD8A10", Offset = "0xDD8A10", VA = "0xDD8A10")]
	private Vector3 easeInOutBack()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000413")]
	[Address(RVA = "0xDD8B14", Offset = "0xDD8B14", VA = "0xDD8B14")]
	private Vector3 easeInElastic()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000414")]
	[Address(RVA = "0xDD8BF4", Offset = "0xDD8BF4", VA = "0xDD8BF4")]
	private Vector3 easeOutElastic()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000415")]
	[Address(RVA = "0xDD8CD4", Offset = "0xDD8CD4", VA = "0xDD8CD4")]
	private Vector3 easeInOutElastic()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000416")]
	[Address(RVA = "0xDD8DB4", Offset = "0xDD8DB4", VA = "0xDD8DB4")]
	public LTDescr setOvershoot(float overshoot)
	{
		return null;
	}

	[Token(Token = "0x6000417")]
	[Address(RVA = "0xDD8DBC", Offset = "0xDD8DBC", VA = "0xDD8DBC")]
	public LTDescr setPeriod(float period)
	{
		return null;
	}

	[Token(Token = "0x6000418")]
	[Address(RVA = "0xDD8DC4", Offset = "0xDD8DC4", VA = "0xDD8DC4")]
	public LTDescr setScale(float scale)
	{
		return null;
	}

	[Token(Token = "0x6000419")]
	[Address(RVA = "0xDD8DCC", Offset = "0xDD8DCC", VA = "0xDD8DCC")]
	public LTDescr setEase(AnimationCurve easeCurve)
	{
		return null;
	}

	[Token(Token = "0x600041A")]
	[Address(RVA = "0xDD8E78", Offset = "0xDD8E78", VA = "0xDD8E78")]
	public LTDescr setTo(Vector3 to)
	{
		return null;
	}

	[Token(Token = "0x600041B")]
	[Address(RVA = "0xDD8EA8", Offset = "0xDD8EA8", VA = "0xDD8EA8")]
	public LTDescr setTo(Transform to)
	{
		return null;
	}

	[Token(Token = "0x600041C")]
	[Address(RVA = "0xDD8ED0", Offset = "0xDD8ED0", VA = "0xDD8ED0")]
	public LTDescr setFrom(Vector3 from)
	{
		return null;
	}

	[Token(Token = "0x600041D")]
	[Address(RVA = "0xDD8F94", Offset = "0xDD8F94", VA = "0xDD8F94")]
	public LTDescr setFrom(float from)
	{
		return null;
	}

	[Token(Token = "0x600041E")]
	[Address(RVA = "0xDD8FA0", Offset = "0xDD8FA0", VA = "0xDD8FA0")]
	public LTDescr setDiff(Vector3 diff)
	{
		return null;
	}

	[Token(Token = "0x600041F")]
	[Address(RVA = "0xDD8FAC", Offset = "0xDD8FAC", VA = "0xDD8FAC")]
	public LTDescr setHasInitialized(bool has)
	{
		return null;
	}

	[Token(Token = "0x6000420")]
	[Address(RVA = "0xDD8FB8", Offset = "0xDD8FB8", VA = "0xDD8FB8")]
	public LTDescr setId(uint id, uint global_counter)
	{
		return null;
	}

	[Token(Token = "0x6000421")]
	[Address(RVA = "0xDD8FC4", Offset = "0xDD8FC4", VA = "0xDD8FC4")]
	public LTDescr setPassed(float passed)
	{
		return null;
	}

	[Token(Token = "0x6000422")]
	[Address(RVA = "0xDD8FCC", Offset = "0xDD8FCC", VA = "0xDD8FCC")]
	public LTDescr setTime(float time)
	{
		return null;
	}

	[Token(Token = "0x6000423")]
	[Address(RVA = "0xDD8FE8", Offset = "0xDD8FE8", VA = "0xDD8FE8")]
	public LTDescr setSpeed(float speed)
	{
		return null;
	}

	[Token(Token = "0x6000424")]
	[Address(RVA = "0xDD9010", Offset = "0xDD9010", VA = "0xDD9010")]
	public LTDescr setRepeat(int repeat)
	{
		return null;
	}

	[Token(Token = "0x6000425")]
	[Address(RVA = "0xDD9060", Offset = "0xDD9060", VA = "0xDD9060")]
	public LTDescr setLoopType(LeanTweenType loopType)
	{
		return null;
	}

	[Token(Token = "0x6000426")]
	[Address(RVA = "0xDD9068", Offset = "0xDD9068", VA = "0xDD9068")]
	public LTDescr setUseEstimatedTime(bool useEstimatedTime)
	{
		return null;
	}

	[Token(Token = "0x6000427")]
	[Address(RVA = "0xDD9078", Offset = "0xDD9078", VA = "0xDD9078")]
	public LTDescr setIgnoreTimeScale(bool useUnScaledTime)
	{
		return null;
	}

	[Token(Token = "0x6000428")]
	[Address(RVA = "0xDD9088", Offset = "0xDD9088", VA = "0xDD9088")]
	public LTDescr setUseFrames(bool useFrames)
	{
		return null;
	}

	[Token(Token = "0x6000429")]
	[Address(RVA = "0xDD9098", Offset = "0xDD9098", VA = "0xDD9098")]
	public LTDescr setUseManualTime(bool useManualTime)
	{
		return null;
	}

	[Token(Token = "0x600042A")]
	[Address(RVA = "0xDD90A8", Offset = "0xDD90A8", VA = "0xDD90A8")]
	public LTDescr setLoopCount(int loopCount)
	{
		return null;
	}

	[Token(Token = "0x600042B")]
	[Address(RVA = "0xDD90B8", Offset = "0xDD90B8", VA = "0xDD90B8")]
	public LTDescr setLoopOnce()
	{
		return null;
	}

	[Token(Token = "0x600042C")]
	[Address(RVA = "0xDD90C4", Offset = "0xDD90C4", VA = "0xDD90C4")]
	public LTDescr setLoopClamp()
	{
		return null;
	}

	[Token(Token = "0x600042D")]
	[Address(RVA = "0xDD90E4", Offset = "0xDD90E4", VA = "0xDD90E4")]
	public LTDescr setLoopClamp(int loops)
	{
		return null;
	}

	[Token(Token = "0x600042E")]
	[Address(RVA = "0xDD90EC", Offset = "0xDD90EC", VA = "0xDD90EC")]
	public LTDescr setLoopPingPong()
	{
		return null;
	}

	[Token(Token = "0x600042F")]
	[Address(RVA = "0xDD910C", Offset = "0xDD910C", VA = "0xDD910C")]
	public LTDescr setLoopPingPong(int loops)
	{
		return null;
	}

	[Token(Token = "0x6000430")]
	[Address(RVA = "0xDD9138", Offset = "0xDD9138", VA = "0xDD9138")]
	public LTDescr setOnComplete(Action onComplete)
	{
		return null;
	}

	[Token(Token = "0x6000431")]
	[Address(RVA = "0xDD9168", Offset = "0xDD9168", VA = "0xDD9168")]
	public LTDescr setOnComplete(Action<object> onComplete)
	{
		return null;
	}

	[Token(Token = "0x6000432")]
	[Address(RVA = "0xDD9198", Offset = "0xDD9198", VA = "0xDD9198")]
	public LTDescr setOnComplete(Action<object> onComplete, object onCompleteParam)
	{
		return null;
	}

	[Token(Token = "0x6000433")]
	[Address(RVA = "0xDD91EC", Offset = "0xDD91EC", VA = "0xDD91EC")]
	public LTDescr setOnCompleteParam(object onCompleteParam)
	{
		return null;
	}

	[Token(Token = "0x6000434")]
	[Address(RVA = "0xDD921C", Offset = "0xDD921C", VA = "0xDD921C")]
	public LTDescr setOnUpdate(Action<float> onUpdate)
	{
		return null;
	}

	[Token(Token = "0x6000435")]
	[Address(RVA = "0xDD924C", Offset = "0xDD924C", VA = "0xDD924C")]
	public LTDescr setOnUpdateRatio(Action<float, float> onUpdate)
	{
		return null;
	}

	[Token(Token = "0x6000436")]
	[Address(RVA = "0xDD927C", Offset = "0xDD927C", VA = "0xDD927C")]
	public LTDescr setOnUpdateObject(Action<float, object> onUpdate)
	{
		return null;
	}

	[Token(Token = "0x6000437")]
	[Address(RVA = "0xDD92AC", Offset = "0xDD92AC", VA = "0xDD92AC")]
	public LTDescr setOnUpdateVector2(Action<Vector2> onUpdate)
	{
		return null;
	}

	[Token(Token = "0x6000438")]
	[Address(RVA = "0xDD92DC", Offset = "0xDD92DC", VA = "0xDD92DC")]
	public LTDescr setOnUpdateVector3(Action<Vector3> onUpdate)
	{
		return null;
	}

	[Token(Token = "0x6000439")]
	[Address(RVA = "0xDD930C", Offset = "0xDD930C", VA = "0xDD930C")]
	public LTDescr setOnUpdateColor(Action<Color> onUpdate)
	{
		return null;
	}

	[Token(Token = "0x600043A")]
	[Address(RVA = "0xDD933C", Offset = "0xDD933C", VA = "0xDD933C")]
	public LTDescr setOnUpdateColor(Action<Color, object> onUpdate)
	{
		return null;
	}

	[Token(Token = "0x600043B")]
	[Address(RVA = "0xDD936C", Offset = "0xDD936C", VA = "0xDD936C")]
	public LTDescr setOnUpdate(Action<Color> onUpdate)
	{
		return null;
	}

	[Token(Token = "0x600043C")]
	[Address(RVA = "0xDD939C", Offset = "0xDD939C", VA = "0xDD939C")]
	public LTDescr setOnUpdate(Action<Color, object> onUpdate)
	{
		return null;
	}

	[Token(Token = "0x600043D")]
	[Address(RVA = "0xDD93CC", Offset = "0xDD93CC", VA = "0xDD93CC")]
	public LTDescr setOnUpdate(Action<float, object> onUpdate, [Optional] object onUpdateParam)
	{
		return null;
	}

	[Token(Token = "0x600043E")]
	[Address(RVA = "0xDD9420", Offset = "0xDD9420", VA = "0xDD9420")]
	public LTDescr setOnUpdate(Action<Vector3, object> onUpdate, [Optional] object onUpdateParam)
	{
		return null;
	}

	[Token(Token = "0x600043F")]
	[Address(RVA = "0xDD9474", Offset = "0xDD9474", VA = "0xDD9474")]
	public LTDescr setOnUpdate(Action<Vector2> onUpdate, [Optional] object onUpdateParam)
	{
		return null;
	}

	[Token(Token = "0x6000440")]
	[Address(RVA = "0xDD94C8", Offset = "0xDD94C8", VA = "0xDD94C8")]
	public LTDescr setOnUpdate(Action<Vector3> onUpdate, [Optional] object onUpdateParam)
	{
		return null;
	}

	[Token(Token = "0x6000441")]
	[Address(RVA = "0xDD951C", Offset = "0xDD951C", VA = "0xDD951C")]
	public LTDescr setOnUpdateParam(object onUpdateParam)
	{
		return null;
	}

	[Token(Token = "0x6000442")]
	[Address(RVA = "0xDD9544", Offset = "0xDD9544", VA = "0xDD9544")]
	public LTDescr setOrientToPath(bool doesOrient)
	{
		return null;
	}

	[Token(Token = "0x6000443")]
	[Address(RVA = "0xDD9614", Offset = "0xDD9614", VA = "0xDD9614")]
	public LTDescr setOrientToPath2d(bool doesOrient2d)
	{
		return null;
	}

	[Token(Token = "0x6000444")]
	[Address(RVA = "0xDD966C", Offset = "0xDD966C", VA = "0xDD966C")]
	public LTDescr setRect(LTRect rect)
	{
		return null;
	}

	[Token(Token = "0x6000445")]
	[Address(RVA = "0xDD9694", Offset = "0xDD9694", VA = "0xDD9694")]
	public LTDescr setRect(Rect rect)
	{
		return null;
	}

	[Token(Token = "0x6000446")]
	[Address(RVA = "0xDD9738", Offset = "0xDD9738", VA = "0xDD9738")]
	public LTDescr setPath(LTBezierPath path)
	{
		return null;
	}

	[Token(Token = "0x6000447")]
	[Address(RVA = "0xDD9760", Offset = "0xDD9760", VA = "0xDD9760")]
	public LTDescr setPoint(Vector3 point)
	{
		return null;
	}

	[Token(Token = "0x6000448")]
	[Address(RVA = "0xDD9780", Offset = "0xDD9780", VA = "0xDD9780")]
	public LTDescr setDestroyOnComplete(bool doesDestroy)
	{
		return null;
	}

	[Token(Token = "0x6000449")]
	[Address(RVA = "0xDD978C", Offset = "0xDD978C", VA = "0xDD978C")]
	public LTDescr setAudio(object audio)
	{
		return null;
	}

	[Token(Token = "0x600044A")]
	[Address(RVA = "0xDD9054", Offset = "0xDD9054", VA = "0xDD9054")]
	public LTDescr setOnCompleteOnRepeat(bool isOn)
	{
		return null;
	}

	[Token(Token = "0x600044B")]
	[Address(RVA = "0xDD97B4", Offset = "0xDD97B4", VA = "0xDD97B4")]
	public LTDescr setOnCompleteOnStart(bool isOn)
	{
		return null;
	}

	[Token(Token = "0x600044C")]
	[Address(RVA = "0xDD97C0", Offset = "0xDD97C0", VA = "0xDD97C0")]
	public LTDescr setRect(RectTransform rect)
	{
		return null;
	}

	[Token(Token = "0x600044D")]
	[Address(RVA = "0xDD97DC", Offset = "0xDD97DC", VA = "0xDD97DC")]
	public LTDescr setSprites(Sprite[] sprites)
	{
		return null;
	}

	[Token(Token = "0x600044E")]
	[Address(RVA = "0xDD97F8", Offset = "0xDD97F8", VA = "0xDD97F8")]
	public LTDescr setFrameRate(float frameRate)
	{
		return null;
	}

	[Token(Token = "0x600044F")]
	[Address(RVA = "0xDD9820", Offset = "0xDD9820", VA = "0xDD9820")]
	public LTDescr setOnStart(Action onStart)
	{
		return null;
	}

	[Token(Token = "0x6000450")]
	[Address(RVA = "0xDD9848", Offset = "0xDD9848", VA = "0xDD9848")]
	public LTDescr setDirection(float direction)
	{
		return null;
	}

	[Token(Token = "0x6000451")]
	[Address(RVA = "0xDD9A24", Offset = "0xDD9A24", VA = "0xDD9A24")]
	public LTDescr setRecursive(bool useRecursion)
	{
		return null;
	}
}
[Token(Token = "0x2000085")]
public class LTDescrOptional
{
	[Token(Token = "0x400032E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public AnimationCurve animationCurve;

	[Token(Token = "0x400032F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public int initFrameCount;

	[Token(Token = "0x4000330")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public Color color;

	[Token(Token = "0x1700001C")]
	public Transform toTrans
	{
		[Token(Token = "0x60004B8")]
		[Address(RVA = "0xEAD6F8", Offset = "0xEAD6F8", VA = "0xEAD6F8")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x60004B9")]
		[Address(RVA = "0xEAD700", Offset = "0xEAD700", VA = "0xEAD700")]
		[CompilerGenerated]
		set
		{
		}
	}

	[Token(Token = "0x1700001D")]
	public Vector3 point
	{
		[Token(Token = "0x60004BA")]
		[Address(RVA = "0xEAD708", Offset = "0xEAD708", VA = "0xEAD708")]
		[CompilerGenerated]
		get
		{
			return default(Vector3);
		}
		[Token(Token = "0x60004BB")]
		[Address(RVA = "0xEAD714", Offset = "0xEAD714", VA = "0xEAD714")]
		[CompilerGenerated]
		set
		{
		}
	}

	[Token(Token = "0x1700001E")]
	public Vector3 axis
	{
		[Token(Token = "0x60004BC")]
		[Address(RVA = "0xEAD720", Offset = "0xEAD720", VA = "0xEAD720")]
		[CompilerGenerated]
		get
		{
			return default(Vector3);
		}
		[Token(Token = "0x60004BD")]
		[Address(RVA = "0xEAD72C", Offset = "0xEAD72C", VA = "0xEAD72C")]
		[CompilerGenerated]
		set
		{
		}
	}

	[Token(Token = "0x1700001F")]
	public float lastVal
	{
		[Token(Token = "0x60004BE")]
		[Address(RVA = "0xEAD738", Offset = "0xEAD738", VA = "0xEAD738")]
		[CompilerGenerated]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60004BF")]
		[Address(RVA = "0xEAD740", Offset = "0xEAD740", VA = "0xEAD740")]
		[CompilerGenerated]
		set
		{
		}
	}

	[Token(Token = "0x17000020")]
	public Quaternion origRotation
	{
		[Token(Token = "0x60004C0")]
		[Address(RVA = "0xEAD748", Offset = "0xEAD748", VA = "0xEAD748")]
		[CompilerGenerated]
		get
		{
			return default(Quaternion);
		}
		[Token(Token = "0x60004C1")]
		[Address(RVA = "0xEAD754", Offset = "0xEAD754", VA = "0xEAD754")]
		[CompilerGenerated]
		set
		{
		}
	}

	[Token(Token = "0x17000021")]
	public LTBezierPath path
	{
		[Token(Token = "0x60004C2")]
		[Address(RVA = "0xEAD760", Offset = "0xEAD760", VA = "0xEAD760")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x60004C3")]
		[Address(RVA = "0xEAD768", Offset = "0xEAD768", VA = "0xEAD768")]
		[CompilerGenerated]
		set
		{
		}
	}

	[Token(Token = "0x17000022")]
	public LTSpline spline
	{
		[Token(Token = "0x60004C4")]
		[Address(RVA = "0xEAD770", Offset = "0xEAD770", VA = "0xEAD770")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x60004C5")]
		[Address(RVA = "0xEAD778", Offset = "0xEAD778", VA = "0xEAD778")]
		[CompilerGenerated]
		set
		{
		}
	}

	[Token(Token = "0x17000023")]
	public LTRect ltRect
	{
		[Token(Token = "0x60004C6")]
		[Address(RVA = "0xEAD780", Offset = "0xEAD780", VA = "0xEAD780")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x60004C7")]
		[Address(RVA = "0xEAD788", Offset = "0xEAD788", VA = "0xEAD788")]
		[CompilerGenerated]
		set
		{
		}
	}

	[Token(Token = "0x17000024")]
	public Action<float> onUpdateFloat
	{
		[Token(Token = "0x60004C8")]
		[Address(RVA = "0xEAD790", Offset = "0xEAD790", VA = "0xEAD790")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x60004C9")]
		[Address(RVA = "0xEAD798", Offset = "0xEAD798", VA = "0xEAD798")]
		[CompilerGenerated]
		set
		{
		}
	}

	[Token(Token = "0x17000025")]
	public Action<float, float> onUpdateFloatRatio
	{
		[Token(Token = "0x60004CA")]
		[Address(RVA = "0xEAD7A0", Offset = "0xEAD7A0", VA = "0xEAD7A0")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x60004CB")]
		[Address(RVA = "0xEAD7A8", Offset = "0xEAD7A8", VA = "0xEAD7A8")]
		[CompilerGenerated]
		set
		{
		}
	}

	[Token(Token = "0x17000026")]
	public Action<float, object> onUpdateFloatObject
	{
		[Token(Token = "0x60004CC")]
		[Address(RVA = "0xEAD7B0", Offset = "0xEAD7B0", VA = "0xEAD7B0")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x60004CD")]
		[Address(RVA = "0xEAD7B8", Offset = "0xEAD7B8", VA = "0xEAD7B8")]
		[CompilerGenerated]
		set
		{
		}
	}

	[Token(Token = "0x17000027")]
	public Action<Vector2> onUpdateVector2
	{
		[Token(Token = "0x60004CE")]
		[Address(RVA = "0xEAD7C0", Offset = "0xEAD7C0", VA = "0xEAD7C0")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x60004CF")]
		[Address(RVA = "0xEAD7C8", Offset = "0xEAD7C8", VA = "0xEAD7C8")]
		[CompilerGenerated]
		set
		{
		}
	}

	[Token(Token = "0x17000028")]
	public Action<Vector3> onUpdateVector3
	{
		[Token(Token = "0x60004D0")]
		[Address(RVA = "0xEAD7D0", Offset = "0xEAD7D0", VA = "0xEAD7D0")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x60004D1")]
		[Address(RVA = "0xEAD7D8", Offset = "0xEAD7D8", VA = "0xEAD7D8")]
		[CompilerGenerated]
		set
		{
		}
	}

	[Token(Token = "0x17000029")]
	public Action<Vector3, object> onUpdateVector3Object
	{
		[Token(Token = "0x60004D2")]
		[Address(RVA = "0xEAD7E0", Offset = "0xEAD7E0", VA = "0xEAD7E0")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x60004D3")]
		[Address(RVA = "0xEAD7E8", Offset = "0xEAD7E8", VA = "0xEAD7E8")]
		[CompilerGenerated]
		set
		{
		}
	}

	[Token(Token = "0x1700002A")]
	public Action<Color> onUpdateColor
	{
		[Token(Token = "0x60004D4")]
		[Address(RVA = "0xEAD7F0", Offset = "0xEAD7F0", VA = "0xEAD7F0")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x60004D5")]
		[Address(RVA = "0xEAD7F8", Offset = "0xEAD7F8", VA = "0xEAD7F8")]
		[CompilerGenerated]
		set
		{
		}
	}

	[Token(Token = "0x1700002B")]
	public Action<Color, object> onUpdateColorObject
	{
		[Token(Token = "0x60004D6")]
		[Address(RVA = "0xEAD800", Offset = "0xEAD800", VA = "0xEAD800")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x60004D7")]
		[Address(RVA = "0xEAD808", Offset = "0xEAD808", VA = "0xEAD808")]
		[CompilerGenerated]
		set
		{
		}
	}

	[Token(Token = "0x1700002C")]
	public Action onComplete
	{
		[Token(Token = "0x60004D8")]
		[Address(RVA = "0xEAD810", Offset = "0xEAD810", VA = "0xEAD810")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x60004D9")]
		[Address(RVA = "0xEAD818", Offset = "0xEAD818", VA = "0xEAD818")]
		[CompilerGenerated]
		set
		{
		}
	}

	[Token(Token = "0x1700002D")]
	public Action<object> onCompleteObject
	{
		[Token(Token = "0x60004DA")]
		[Address(RVA = "0xEAD820", Offset = "0xEAD820", VA = "0xEAD820")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x60004DB")]
		[Address(RVA = "0xEAD828", Offset = "0xEAD828", VA = "0xEAD828")]
		[CompilerGenerated]
		set
		{
		}
	}

	[Token(Token = "0x1700002E")]
	public object onCompleteParam
	{
		[Token(Token = "0x60004DC")]
		[Address(RVA = "0xEAD830", Offset = "0xEAD830", VA = "0xEAD830")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x60004DD")]
		[Address(RVA = "0xEAD838", Offset = "0xEAD838", VA = "0xEAD838")]
		[CompilerGenerated]
		set
		{
		}
	}

	[Token(Token = "0x1700002F")]
	public object onUpdateParam
	{
		[Token(Token = "0x60004DE")]
		[Address(RVA = "0xEAD840", Offset = "0xEAD840", VA = "0xEAD840")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x60004DF")]
		[Address(RVA = "0xEAD848", Offset = "0xEAD848", VA = "0xEAD848")]
		[CompilerGenerated]
		set
		{
		}
	}

	[Token(Token = "0x17000030")]
	public Action onStart
	{
		[Token(Token = "0x60004E0")]
		[Address(RVA = "0xEAD850", Offset = "0xEAD850", VA = "0xEAD850")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x60004E1")]
		[Address(RVA = "0xEAD858", Offset = "0xEAD858", VA = "0xEAD858")]
		[CompilerGenerated]
		set
		{
		}
	}

	[Token(Token = "0x60004E2")]
	[Address(RVA = "0xEAD860", Offset = "0xEAD860", VA = "0xEAD860")]
	public void reset()
	{
	}

	[Token(Token = "0x60004E3")]
	[Address(RVA = "0xEAD978", Offset = "0xEAD978", VA = "0xEAD978")]
	public void callOnUpdate(float val, float ratioPassed)
	{
	}

	[Token(Token = "0x60004E4")]
	[Address(RVA = "0xEADACC", Offset = "0xEADACC", VA = "0xEADACC")]
	public LTDescrOptional()
	{
	}
}
[Token(Token = "0x2000086")]
public class LTSeq
{
	[Token(Token = "0x400033F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public LTSeq previous;

	[Token(Token = "0x4000340")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public LTSeq current;

	[Token(Token = "0x4000341")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public LTDescr tween;

	[Token(Token = "0x4000342")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float totalDelay;

	[Token(Token = "0x4000343")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float timeScale;

	[Token(Token = "0x4000344")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private int debugIter;

	[Token(Token = "0x4000345")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public uint counter;

	[Token(Token = "0x4000346")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool toggle;

	[Token(Token = "0x4000347")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private uint _id;

	[Token(Token = "0x17000031")]
	public int id
	{
		[Token(Token = "0x60004E5")]
		[Address(RVA = "0xEADAD4", Offset = "0xEADAD4", VA = "0xEADAD4")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x60004E6")]
	[Address(RVA = "0xEADAE4", Offset = "0xEADAE4", VA = "0xEADAE4")]
	public void reset()
	{
	}

	[Token(Token = "0x60004E7")]
	[Address(RVA = "0xEADB14", Offset = "0xEADB14", VA = "0xEADB14")]
	public void init(uint id, uint global_counter)
	{
	}

	[Token(Token = "0x60004E8")]
	[Address(RVA = "0xEADB68", Offset = "0xEADB68", VA = "0xEADB68")]
	private LTSeq addOn()
	{
		return null;
	}

	[Token(Token = "0x60004E9")]
	[Address(RVA = "0xEADC1C", Offset = "0xEADC1C", VA = "0xEADC1C")]
	private float addPreviousDelays()
	{
		return default(float);
	}

	[Token(Token = "0x60004EA")]
	[Address(RVA = "0xEADC58", Offset = "0xEADC58", VA = "0xEADC58")]
	public LTSeq append(float delay)
	{
		return null;
	}

	[Token(Token = "0x60004EB")]
	[Address(RVA = "0xEADC7C", Offset = "0xEADC7C", VA = "0xEADC7C")]
	public LTSeq append(Action callback)
	{
		return null;
	}

	[Token(Token = "0x60004EC")]
	[Address(RVA = "0xEADD54", Offset = "0xEADD54", VA = "0xEADD54")]
	public LTSeq append(Action<object> callback, object obj)
	{
		return null;
	}

	[Token(Token = "0x60004ED")]
	[Address(RVA = "0xEADDE8", Offset = "0xEADDE8", VA = "0xEADDE8")]
	public LTSeq append(GameObject gameObject, Action callback)
	{
		return null;
	}

	[Token(Token = "0x60004EE")]
	[Address(RVA = "0xEADE6C", Offset = "0xEADE6C", VA = "0xEADE6C")]
	public LTSeq append(GameObject gameObject, Action<object> callback, object obj)
	{
		return null;
	}

	[Token(Token = "0x60004EF")]
	[Address(RVA = "0xEADCF0", Offset = "0xEADCF0", VA = "0xEADCF0")]
	public LTSeq append(LTDescr tween)
	{
		return null;
	}

	[Token(Token = "0x60004F0")]
	[Address(RVA = "0xEADF10", Offset = "0xEADF10", VA = "0xEADF10")]
	public LTSeq insert(LTDescr tween)
	{
		return null;
	}

	[Token(Token = "0x60004F1")]
	[Address(RVA = "0xEADF5C", Offset = "0xEADF5C", VA = "0xEADF5C")]
	public LTSeq setScale(float timeScale)
	{
		return null;
	}

	[Token(Token = "0x60004F2")]
	[Address(RVA = "0xEADF7C", Offset = "0xEADF7C", VA = "0xEADF7C")]
	private void setScaleRecursive(LTSeq seq, float timeScale, int count)
	{
	}

	[Token(Token = "0x60004F3")]
	[Address(RVA = "0xEAE010", Offset = "0xEAE010", VA = "0xEAE010")]
	public LTSeq reverse()
	{
		return null;
	}

	[Token(Token = "0x60004F4")]
	[Address(RVA = "0xEAE014", Offset = "0xEAE014", VA = "0xEAE014")]
	public LTSeq()
	{
	}
}
[Token(Token = "0x2000087")]
public class DirectionPointer : MonoBehaviour
{
	[Token(Token = "0x60004F5")]
	[Address(RVA = "0xEAE01C", Offset = "0xEAE01C", VA = "0xEAE01C")]
	private void OnDrawGizmosSelected()
	{
	}

	[Token(Token = "0x60004F6")]
	[Address(RVA = "0xEAE0F8", Offset = "0xEAE0F8", VA = "0xEAE0F8")]
	public DirectionPointer()
	{
	}
}
[Token(Token = "0x2000088")]
[ExecuteInEditMode]
public class Generator : MonoBehaviour
{
	[Token(Token = "0x4000348")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector2Int castRows;

	[Token(Token = "0x4000349")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float shaftSpacing;

	[Token(Token = "0x400034A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public bool meshCast;

	[Token(Token = "0x400034B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Mesh castMesh;

	[Token(Token = "0x400034C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject lightShaftPrefab;

	[Token(Token = "0x400034D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public string savePath;

	[Token(Token = "0x400034E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool shaftSettings;

	[Token(Token = "0x400034F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Material shaftMat;

	[Token(Token = "0x4000350")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[ColorUsage(true, true)]
	public Color pointer_shaftColor;

	[Token(Token = "0x4000351")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public float pointer_shaftIntensity;

	[Token(Token = "0x4000352")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public Vector2 pointer_noiseDirection;

	[Token(Token = "0x4000353")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public float pointer_noiseScale;

	[Token(Token = "0x4000354")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public float pointer_noiseUpdateSpeed;

	[Token(Token = "0x4000355")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public float pointer_maxLength;

	[Token(Token = "0x4000356")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public LayerMask pointer_layerMask;

	[Token(Token = "0x4000357")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public float pointer_shaftWidth;

	[Token(Token = "0x4000358")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Vector2 pointer_shaftWidthMinMax;

	[Token(Token = "0x4000359")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Texture pointer_shaftTexture;

	[Token(Token = "0x400035A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public Transform pointer_shaftDirection;

	[Token(Token = "0x60004F7")]
	[Address(RVA = "0xEAE100", Offset = "0xEAE100", VA = "0xEAE100")]
	public Generator()
	{
	}
}
[Serializable]
[Token(Token = "0x2000089")]
public class SaveVariables
{
	[Token(Token = "0x400035B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float pointer_shaftIntensity;

	[Token(Token = "0x400035C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float pointer_shaftColorR;

	[Token(Token = "0x400035D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float pointer_shaftColorG;

	[Token(Token = "0x400035E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float pointer_shaftColorB;

	[Token(Token = "0x400035F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float pointer_shaftColorA;

	[Token(Token = "0x4000360")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float pointer_noiseDirectionX;

	[Token(Token = "0x4000361")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float pointer_noiseDirectionY;

	[Token(Token = "0x4000362")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float pointer_noiseScale;

	[Token(Token = "0x4000363")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float pointer_noiseUpdateSpeed;

	[Token(Token = "0x4000364")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float pointer_maxLength;

	[Token(Token = "0x4000365")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float pointer_shaftWidth;

	[Token(Token = "0x4000366")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float pointer_shaftWidthMinMaxX;

	[Token(Token = "0x4000367")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float pointer_shaftWidthMinMaxY;

	[Token(Token = "0x4000368")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float pointer_shaftDirectionX;

	[Token(Token = "0x4000369")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float pointer_shaftDirectionY;

	[Token(Token = "0x400036A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float pointer_shaftDirectionZ;

	[Token(Token = "0x400036B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public int castRowsX;

	[Token(Token = "0x400036C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public int castRowsY;

	[Token(Token = "0x400036D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public float shaftSpacing;

	[Token(Token = "0x400036E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public bool meshCast;

	[Token(Token = "0x60004F8")]
	[Address(RVA = "0xEAE184", Offset = "0xEAE184", VA = "0xEAE184")]
	public SaveVariables()
	{
	}
}
[Token(Token = "0x200008A")]
public class Shaft_Behavior : MonoBehaviour
{
	[Token(Token = "0x400036F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Color shaftColor;

	[Token(Token = "0x4000370")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float shaftIntensity;

	[Token(Token = "0x4000371")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public Vector2 noiseDirection;

	[Token(Token = "0x4000372")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float noiseScale;

	[Token(Token = "0x4000373")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float noiseUpdateSpeed;

	[Token(Token = "0x4000374")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float maxLength;

	[Token(Token = "0x4000375")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public LayerMask layerMask;

	[Token(Token = "0x4000376")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public Vector2 shaftWidthMinMax;

	[Token(Token = "0x4000377")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float shaftAdjustY;

	[Token(Token = "0x4000378")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Texture shaftTexture;

	[Token(Token = "0x4000379")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Transform shaftDirection;

	[Token(Token = "0x400037A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Material shaftMat;

	[Token(Token = "0x400037B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private float randomRotZ;

	[Token(Token = "0x400037C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private float randomWidth;

	[Token(Token = "0x60004F9")]
	[Address(RVA = "0xEAE18C", Offset = "0xEAE18C", VA = "0xEAE18C")]
	private void Start()
	{
	}

	[Token(Token = "0x60004FA")]
	[Address(RVA = "0xEAE850", Offset = "0xEAE850", VA = "0xEAE850")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x60004FB")]
	[Address(RVA = "0xEAE5B0", Offset = "0xEAE5B0", VA = "0xEAE5B0")]
	private void ShaftLength_and_Width()
	{
	}

	[Token(Token = "0x60004FC")]
	[Address(RVA = "0xEAE73C", Offset = "0xEAE73C", VA = "0xEAE73C")]
	private void Shaft_Color_Intensity_TexOffset()
	{
	}

	[Token(Token = "0x60004FD")]
	[Address(RVA = "0xEAE460", Offset = "0xEAE460", VA = "0xEAE460")]
	private void OrientShaft()
	{
	}

	[Token(Token = "0x60004FE")]
	[Address(RVA = "0xEAE31C", Offset = "0xEAE31C", VA = "0xEAE31C")]
	private void SyncVariables()
	{
	}

	[Token(Token = "0x60004FF")]
	[Address(RVA = "0xEAE878", Offset = "0xEAE878", VA = "0xEAE878")]
	public Shaft_Behavior()
	{
	}
}
[Token(Token = "0x200008B")]
public class LoadingScene : MonoBehaviour
{
	[Token(Token = "0x200008C")]
	[CompilerGenerated]
	private sealed class <loadSceneCoroutine>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000380")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000381")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000382")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string sceneName;

		[Token(Token = "0x4000383")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public LoadingScene <>4__this;

		[Token(Token = "0x4000384")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private AsyncOperation <async>5__2;

		[Token(Token = "0x17000032")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000509")]
			[Address(RVA = "0xEAF1E0", Offset = "0xEAF1E0", VA = "0xEAF1E0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000033")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600050B")]
			[Address(RVA = "0xEAF228", Offset = "0xEAF228", VA = "0xEAF228", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000506")]
		[Address(RVA = "0xEAEF88", Offset = "0xEAEF88", VA = "0xEAEF88")]
		[DebuggerHidden]
		public <loadSceneCoroutine>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x6000507")]
		[Address(RVA = "0xEAF040", Offset = "0xEAF040", VA = "0xEAF040", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000508")]
		[Address(RVA = "0xEAF044", Offset = "0xEAF044", VA = "0xEAF044", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600050A")]
		[Address(RVA = "0xEAF1E8", Offset = "0xEAF1E8", VA = "0xEAF1E8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200008D")]
	[CompilerGenerated]
	private sealed class <liberateMemory>d__7 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000385")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000386")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000387")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private AsyncOperation <async>5__2;

		[Token(Token = "0x17000034")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600050F")]
			[Address(RVA = "0xEAF2B8", Offset = "0xEAF2B8", VA = "0xEAF2B8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000035")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000511")]
			[Address(RVA = "0xEAF300", Offset = "0xEAF300", VA = "0xEAF300", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600050C")]
		[Address(RVA = "0xEAF010", Offset = "0xEAF010", VA = "0xEAF010")]
		[DebuggerHidden]
		public <liberateMemory>d__7(int <>1__state)
		{
		}

		[Token(Token = "0x600050D")]
		[Address(RVA = "0xEAF230", Offset = "0xEAF230", VA = "0xEAF230", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600050E")]
		[Address(RVA = "0xEAF234", Offset = "0xEAF234", VA = "0xEAF234", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000510")]
		[Address(RVA = "0xEAF2C0", Offset = "0xEAF2C0", VA = "0xEAF2C0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400037D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static string SceneToLoad;

	[Token(Token = "0x400037E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static float delay;

	[Token(Token = "0x400037F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private AssetBundle currentBundleLoaded;

	[Token(Token = "0x6000500")]
	[Address(RVA = "0xEAE8D0", Offset = "0xEAE8D0", VA = "0xEAE8D0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000501")]
	[Address(RVA = "0xEAE920", Offset = "0xEAE920", VA = "0xEAE920")]
	public void LoadScene(string sceneName)
	{
	}

	[Token(Token = "0x6000502")]
	[Address(RVA = "0xEAEA54", Offset = "0xEAEA54", VA = "0xEAEA54")]
	private string GetAssetBundleName(string sceneName)
	{
		return null;
	}

	[Token(Token = "0x6000503")]
	[Address(RVA = "0xEAEEF8", Offset = "0xEAEEF8", VA = "0xEAEEF8")]
	[IteratorStateMachine(typeof(<loadSceneCoroutine>d__6))]
	private IEnumerator loadSceneCoroutine(string sceneName)
	{
		return null;
	}

	[Token(Token = "0x6000504")]
	[Address(RVA = "0xEAEFB0", Offset = "0xEAEFB0", VA = "0xEAEFB0")]
	[IteratorStateMachine(typeof(<liberateMemory>d__7))]
	private IEnumerator liberateMemory()
	{
		return null;
	}

	[Token(Token = "0x6000505")]
	[Address(RVA = "0xEAF038", Offset = "0xEAF038", VA = "0xEAF038")]
	public LoadingScene()
	{
	}
}
[Token(Token = "0x200008E")]
public class BakeTexturesAtRuntime : MonoBehaviour
{
	[Token(Token = "0x4000388")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject target;

	[Token(Token = "0x4000389")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float elapsedTime;

	[Token(Token = "0x400038A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private MB3_TextureCombiner.CreateAtlasesCoroutineResult result;

	[Token(Token = "0x6000512")]
	[Address(RVA = "0xEAF308", Offset = "0xEAF308", VA = "0xEAF308")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x6000513")]
	[Address(RVA = "0xEAF81C", Offset = "0xEAF81C", VA = "0xEAF81C")]
	private void OnBuiltAtlasesSuccess()
	{
	}

	[Token(Token = "0x6000514")]
	[Address(RVA = "0xEAFA10", Offset = "0xEAFA10", VA = "0xEAFA10")]
	public BakeTexturesAtRuntime()
	{
	}
}
[Token(Token = "0x200008F")]
public class MB_BatchPrepareObjectsForDynamicBatchingDescription : MonoBehaviour
{
	[Token(Token = "0x6000515")]
	[Address(RVA = "0xEAFA84", Offset = "0xEAFA84", VA = "0xEAFA84")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x6000516")]
	[Address(RVA = "0xEAFB1C", Offset = "0xEAFB1C", VA = "0xEAFB1C")]
	public MB_BatchPrepareObjectsForDynamicBatchingDescription()
	{
	}
}
[Token(Token = "0x2000090")]
public class MB_SwapShirts : MonoBehaviour
{
	[Token(Token = "0x400038B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public MB3_MeshBaker meshBaker;

	[Token(Token = "0x400038C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Renderer[] clothingAndBodyPartsBareTorso;

	[Token(Token = "0x400038D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Renderer[] clothingAndBodyPartsBareTorsoDamagedArm;

	[Token(Token = "0x400038E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Renderer[] clothingAndBodyPartsHoodie;

	[Token(Token = "0x6000517")]
	[Address(RVA = "0xEAFB24", Offset = "0xEAFB24", VA = "0xEAFB24")]
	private void Start()
	{
	}

	[Token(Token = "0x6000518")]
	[Address(RVA = "0xEAFC78", Offset = "0xEAFC78", VA = "0xEAFC78")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x6000519")]
	[Address(RVA = "0xEAFE10", Offset = "0xEAFE10", VA = "0xEAFE10")]
	private void ChangeOutfit(Renderer[] outfit)
	{
	}

	[Token(Token = "0x600051A")]
	[Address(RVA = "0xEB0448", Offset = "0xEB0448", VA = "0xEB0448")]
	public MB_SwapShirts()
	{
	}
}
[Token(Token = "0x2000091")]
public class MB_PrepareObjectsForDynamicBatchingDescription : MonoBehaviour
{
	[Token(Token = "0x600051B")]
	[Address(RVA = "0xEB0450", Offset = "0xEB0450", VA = "0xEB0450")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x600051C")]
	[Address(RVA = "0xEB04E8", Offset = "0xEB04E8", VA = "0xEB04E8")]
	public MB_PrepareObjectsForDynamicBatchingDescription()
	{
	}
}
[Token(Token = "0x2000092")]
public class MB_DynamicAddDeleteExample : MonoBehaviour
{
	[Token(Token = "0x2000093")]
	[CompilerGenerated]
	private sealed class <largeNumber>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000393")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000394")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000395")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MB_DynamicAddDeleteExample <>4__this;

		[Token(Token = "0x17000036")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000525")]
			[Address(RVA = "0xEB0D08", Offset = "0xEB0D08", VA = "0xEB0D08", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000037")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000527")]
			[Address(RVA = "0xEB0D50", Offset = "0xEB0D50", VA = "0xEB0D50", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000522")]
		[Address(RVA = "0xEB0A4C", Offset = "0xEB0A4C", VA = "0xEB0A4C")]
		[DebuggerHidden]
		public <largeNumber>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x6000523")]
		[Address(RVA = "0xEB0B94", Offset = "0xEB0B94", VA = "0xEB0B94", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000524")]
		[Address(RVA = "0xEB0B98", Offset = "0xEB0B98", VA = "0xEB0B98", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000526")]
		[Address(RVA = "0xEB0D10", Offset = "0xEB0D10", VA = "0xEB0D10", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400038F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject prefab;

	[Token(Token = "0x4000390")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private List<GameObject> objsInCombined;

	[Token(Token = "0x4000391")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private MB3_MultiMeshBaker mbd;

	[Token(Token = "0x4000392")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private GameObject[] objs;

	[Token(Token = "0x600051D")]
	[Address(RVA = "0xEB04F0", Offset = "0xEB04F0", VA = "0xEB04F0")]
	private float GaussianValue()
	{
		return default(float);
	}

	[Token(Token = "0x600051E")]
	[Address(RVA = "0xEB0574", Offset = "0xEB0574", VA = "0xEB0574")]
	private void Start()
	{
	}

	[Token(Token = "0x600051F")]
	[Address(RVA = "0xEB09D8", Offset = "0xEB09D8", VA = "0xEB09D8")]
	[IteratorStateMachine(typeof(<largeNumber>d__6))]
	private IEnumerator largeNumber()
	{
		return null;
	}

	[Token(Token = "0x6000520")]
	[Address(RVA = "0xEB0A74", Offset = "0xEB0A74", VA = "0xEB0A74")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x6000521")]
	[Address(RVA = "0xEB0B0C", Offset = "0xEB0B0C", VA = "0xEB0B0C")]
	public MB_DynamicAddDeleteExample()
	{
	}
}
[Token(Token = "0x2000094")]
public class MB_Example : MonoBehaviour
{
	[Token(Token = "0x4000396")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public MB3_MeshBaker meshbaker;

	[Token(Token = "0x4000397")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject[] objsToCombine;

	[Token(Token = "0x6000528")]
	[Address(RVA = "0xEB0D58", Offset = "0xEB0D58", VA = "0xEB0D58")]
	private void Start()
	{
	}

	[Token(Token = "0x6000529")]
	[Address(RVA = "0xEB0DA8", Offset = "0xEB0DA8", VA = "0xEB0DA8")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x600052A")]
	[Address(RVA = "0xEB0E28", Offset = "0xEB0E28", VA = "0xEB0E28")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x600052B")]
	[Address(RVA = "0xEB0EC0", Offset = "0xEB0EC0", VA = "0xEB0EC0")]
	public MB_Example()
	{
	}
}
[Token(Token = "0x2000095")]
public class MB_ExampleMover : MonoBehaviour
{
	[Token(Token = "0x4000398")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int axis;

	[Token(Token = "0x600052C")]
	[Address(RVA = "0xEB0EC8", Offset = "0xEB0EC8", VA = "0xEB0EC8")]
	private void Update()
	{
	}

	[Token(Token = "0x600052D")]
	[Address(RVA = "0xEB0FF8", Offset = "0xEB0FF8", VA = "0xEB0FF8")]
	public MB_ExampleMover()
	{
	}
}
[Token(Token = "0x2000096")]
public class MB_ExampleSkinnedMeshDescription : MonoBehaviour
{
	[Token(Token = "0x600052E")]
	[Address(RVA = "0xEB1000", Offset = "0xEB1000", VA = "0xEB1000")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x600052F")]
	[Address(RVA = "0xEB1098", Offset = "0xEB1098", VA = "0xEB1098")]
	public MB_ExampleSkinnedMeshDescription()
	{
	}
}
[Token(Token = "0x2000097")]
public class MB_SkinnedMeshSceneController : MonoBehaviour
{
	[Token(Token = "0x4000399")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject swordPrefab;

	[Token(Token = "0x400039A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject hatPrefab;

	[Token(Token = "0x400039B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject glassesPrefab;

	[Token(Token = "0x400039C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject workerPrefab;

	[Token(Token = "0x400039D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject targetCharacter;

	[Token(Token = "0x400039E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public MB3_MeshBaker skinnedMeshBaker;

	[Token(Token = "0x400039F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private GameObject swordInstance;

	[Token(Token = "0x40003A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private GameObject glassesInstance;

	[Token(Token = "0x40003A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private GameObject hatInstance;

	[Token(Token = "0x6000530")]
	[Address(RVA = "0xEB10A0", Offset = "0xEB10A0", VA = "0xEB10A0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000531")]
	[Address(RVA = "0xEB1294", Offset = "0xEB1294", VA = "0xEB1294")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x6000532")]
	[Address(RVA = "0xEB2000", Offset = "0xEB2000", VA = "0xEB2000")]
	public Transform SearchHierarchyForBone(Transform current, string name)
	{
		return null;
	}

	[Token(Token = "0x6000533")]
	[Address(RVA = "0xEB210C", Offset = "0xEB210C", VA = "0xEB210C")]
	public MB_SkinnedMeshSceneController()
	{
	}
}
[Token(Token = "0x2000098")]
public class MB_SwitchBakedObjectsTexture : MonoBehaviour
{
	[Token(Token = "0x40003A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public MeshRenderer targetRenderer;

	[Token(Token = "0x40003A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Material[] materials;

	[Token(Token = "0x40003A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public MB3_MeshBaker meshBaker;

	[Token(Token = "0x6000534")]
	[Address(RVA = "0xEB2114", Offset = "0xEB2114", VA = "0xEB2114")]
	public void OnGUI()
	{
	}

	[Token(Token = "0x6000535")]
	[Address(RVA = "0xEB21AC", Offset = "0xEB21AC", VA = "0xEB21AC")]
	public void Start()
	{
	}

	[Token(Token = "0x6000536")]
	[Address(RVA = "0xEB224C", Offset = "0xEB224C", VA = "0xEB224C")]
	public void Update()
	{
	}

	[Token(Token = "0x6000537")]
	[Address(RVA = "0xEB24E8", Offset = "0xEB24E8", VA = "0xEB24E8")]
	public MB_SwitchBakedObjectsTexture()
	{
	}
}
[Token(Token = "0x2000099")]
[ExecuteInEditMode]
public class ListMeshVertCount : MonoBehaviour
{
	[Token(Token = "0x40003A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool includeInActive;

	[Token(Token = "0x40003A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool listVertCount;

	[Token(Token = "0x6000538")]
	[Address(RVA = "0xEB24F0", Offset = "0xEB24F0", VA = "0xEB24F0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000539")]
	[Address(RVA = "0xEB2504", Offset = "0xEB2504", VA = "0xEB2504")]
	private void ListVertCount()
	{
	}

	[Token(Token = "0x600053A")]
	[Address(RVA = "0xEB283C", Offset = "0xEB283C", VA = "0xEB283C")]
	public ListMeshVertCount()
	{
	}
}
[Token(Token = "0x200009A")]
[ExecuteInEditMode]
public class EnableChildrenMeshRenderers : MonoBehaviour
{
	[Token(Token = "0x40003A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool execute;

	[Token(Token = "0x600053B")]
	[Address(RVA = "0xEB2844", Offset = "0xEB2844", VA = "0xEB2844")]
	private void Update()
	{
	}

	[Token(Token = "0x600053C")]
	[Address(RVA = "0xEB2858", Offset = "0xEB2858", VA = "0xEB2858")]
	private void Execute()
	{
	}

	[Token(Token = "0x600053D")]
	[Address(RVA = "0xEB28F4", Offset = "0xEB28F4", VA = "0xEB28F4")]
	public EnableChildrenMeshRenderers()
	{
	}
}
[Token(Token = "0x200009B")]
public class MiniGunObserver : MonoBehaviour
{
	[Token(Token = "0x40003A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool collidersRemoved;

	[Token(Token = "0x600053E")]
	[Address(RVA = "0xEB28FC", Offset = "0xEB28FC", VA = "0xEB28FC")]
	private void Start()
	{
	}

	[Token(Token = "0x600053F")]
	[Address(RVA = "0xEB2A94", Offset = "0xEB2A94", VA = "0xEB2A94")]
	private void Update()
	{
	}

	[Token(Token = "0x6000540")]
	[Address(RVA = "0xEB2A98", Offset = "0xEB2A98", VA = "0xEB2A98")]
	private void removeColliders()
	{
	}

	[Token(Token = "0x6000541")]
	[Address(RVA = "0xEB2C38", Offset = "0xEB2C38", VA = "0xEB2C38")]
	private void backColliders()
	{
	}

	[Token(Token = "0x6000542")]
	[Address(RVA = "0xEB2D70", Offset = "0xEB2D70", VA = "0xEB2D70")]
	public MiniGunObserver()
	{
	}
}
[Token(Token = "0x200009C")]
public class DebugUIBuilder : MonoBehaviour
{
	[Token(Token = "0x200009D")]
	public delegate void OnClick();

	[Token(Token = "0x200009E")]
	public delegate void OnToggleValueChange(Toggle t);

	[Token(Token = "0x200009F")]
	public delegate void OnSlider(float f);

	[Token(Token = "0x20000A0")]
	public delegate bool ActiveUpdate();

	[Token(Token = "0x40003A9")]
	public const int DEBUG_PANE_CENTER = 0;

	[Token(Token = "0x40003AA")]
	public const int DEBUG_PANE_RIGHT = 1;

	[Token(Token = "0x40003AB")]
	public const int DEBUG_PANE_LEFT = 2;

	[Token(Token = "0x40003AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private RectTransform buttonPrefab;

	[Token(Token = "0x40003AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private RectTransform[] additionalButtonPrefab;

	[Token(Token = "0x40003AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private RectTransform labelPrefab;

	[Token(Token = "0x40003AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private RectTransform sliderPrefab;

	[Token(Token = "0x40003B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private RectTransform dividerPrefab;

	[Token(Token = "0x40003B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private RectTransform togglePrefab;

	[Token(Token = "0x40003B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private RectTransform radioPrefab;

	[Token(Token = "0x40003B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private RectTransform textPrefab;

	[Token(Token = "0x40003B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private GameObject uiHelpersToInstantiate;

	[Token(Token = "0x40003B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private Transform[] targetContentPanels;

	[Token(Token = "0x40003B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private bool[] reEnable;

	[Token(Token = "0x40003B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private List<GameObject> toEnable;

	[Token(Token = "0x40003B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private List<GameObject> toDisable;

	[Token(Token = "0x40003B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static DebugUIBuilder instance;

	[Token(Token = "0x40003BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public float elementSpacing;

	[Token(Token = "0x40003BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public float marginH;

	[Token(Token = "0x40003BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public float marginV;

	[Token(Token = "0x40003BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private Vector2[] insertPositions;

	[Token(Token = "0x40003BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private List<RectTransform>[] insertedElements;

	[Token(Token = "0x40003BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private Vector3 menuOffset;

	[Token(Token = "0x40003C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private OVRCameraRig rig;

	[Token(Token = "0x40003C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private Dictionary<string, ToggleGroup> radioGroups;

	[Token(Token = "0x40003C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private LaserPointer lp;

	[Token(Token = "0x40003C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private LineRenderer lr;

	[Token(Token = "0x40003C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public LaserPointer.LaserBeamBehavior laserBeamBehavior;

	[Token(Token = "0x40003C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	public bool isHorizontal;

	[Token(Token = "0x40003C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD5")]
	public bool usePanelCentricRelayout;

	[Token(Token = "0x6000543")]
	[Address(RVA = "0xEB2D78", Offset = "0xEB2D78", VA = "0xEB2D78")]
	public void Awake()
	{
	}

	[Token(Token = "0x6000544")]
	[Address(RVA = "0xEB32E4", Offset = "0xEB32E4", VA = "0xEB32E4")]
	public void Show()
	{
	}

	[Token(Token = "0x6000545")]
	[Address(RVA = "0xEB3660", Offset = "0xEB3660", VA = "0xEB3660")]
	public void Hide()
	{
	}

	[Token(Token = "0x6000546")]
	[Address(RVA = "0xEB37DC", Offset = "0xEB37DC", VA = "0xEB37DC")]
	private void StackedRelayout()
	{
	}

	[Token(Token = "0x6000547")]
	[Address(RVA = "0xEB39F4", Offset = "0xEB39F4", VA = "0xEB39F4")]
	private void PanelCentricRelayout()
	{
	}

	[Token(Token = "0x6000548")]
	[Address(RVA = "0xEB3650", Offset = "0xEB3650", VA = "0xEB3650")]
	private void Relayout()
	{
	}

	[Token(Token = "0x6000549")]
	[Address(RVA = "0xEB3CE8", Offset = "0xEB3CE8", VA = "0xEB3CE8")]
	private void AddRect(RectTransform r, int targetCanvas)
	{
	}

	[Token(Token = "0x600054A")]
	[Address(RVA = "0xEB4064", Offset = "0xEB4064", VA = "0xEB4064")]
	public RectTransform AddButton(string label, [Optional] OnClick handler, int buttonIndex = -1, int targetCanvas = 0, bool highResolutionText = false)
	{
		return null;
	}

	[Token(Token = "0x600054B")]
	[Address(RVA = "0xEB4414", Offset = "0xEB4414", VA = "0xEB4414")]
	public RectTransform AddLabel(string label, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x600054C")]
	[Address(RVA = "0xEB450C", Offset = "0xEB450C", VA = "0xEB450C")]
	public RectTransform AddSlider(string label, float min, float max, OnSlider onValueChanged, bool wholeNumbersOnly = false, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x600054D")]
	[Address(RVA = "0xEB46DC", Offset = "0xEB46DC", VA = "0xEB46DC")]
	public RectTransform AddDivider(int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x600054E")]
	[Address(RVA = "0xEB4774", Offset = "0xEB4774", VA = "0xEB4774")]
	public RectTransform AddToggle(string label, OnToggleValueChange onValueChanged, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x600054F")]
	[Address(RVA = "0xEB4950", Offset = "0xEB4950", VA = "0xEB4950")]
	public RectTransform AddToggle(string label, OnToggleValueChange onValueChanged, bool defaultValue, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x6000550")]
	[Address(RVA = "0xEB4B4C", Offset = "0xEB4B4C", VA = "0xEB4B4C")]
	public RectTransform AddRadio(string label, string group, OnToggleValueChange handler, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x6000551")]
	[Address(RVA = "0xEB4E44", Offset = "0xEB4E44", VA = "0xEB4E44")]
	public RectTransform AddTextField(string label, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x6000552")]
	[Address(RVA = "0xEB4F34", Offset = "0xEB4F34", VA = "0xEB4F34")]
	public void ToggleLaserPointer(bool isOn)
	{
	}

	[Token(Token = "0x6000553")]
	[Address(RVA = "0xEB4FC8", Offset = "0xEB4FC8", VA = "0xEB4FC8")]
	public DebugUIBuilder()
	{
	}
}
[Token(Token = "0x20000A6")]
public class HandedInputSelector : MonoBehaviour
{
	[Token(Token = "0x40003CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private OVRCameraRig m_CameraRig;

	[Token(Token = "0x40003D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private OVRInputModule m_InputModule;

	[Token(Token = "0x600056E")]
	[Address(RVA = "0xEB5648", Offset = "0xEB5648", VA = "0xEB5648")]
	private void Start()
	{
	}

	[Token(Token = "0x600056F")]
	[Address(RVA = "0xEB56EC", Offset = "0xEB56EC", VA = "0xEB56EC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000570")]
	[Address(RVA = "0xEB5788", Offset = "0xEB5788", VA = "0xEB5788")]
	private void SetActiveController(OVRInput.Controller c)
	{
	}

	[Token(Token = "0x6000571")]
	[Address(RVA = "0xEB57C0", Offset = "0xEB57C0", VA = "0xEB57C0")]
	public HandedInputSelector()
	{
	}
}
[Token(Token = "0x20000A7")]
public class LaserPointer : OVRCursor
{
	[Token(Token = "0x20000A8")]
	public enum LaserBeamBehavior
	{
		[Token(Token = "0x40003DB")]
		On,
		[Token(Token = "0x40003DC")]
		Off,
		[Token(Token = "0x40003DD")]
		OnWhenHitTarget
	}

	[Token(Token = "0x40003D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject cursorVisual;

	[Token(Token = "0x40003D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float maxLength;

	[Token(Token = "0x40003D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private LaserBeamBehavior _laserBeamBehavior;

	[Token(Token = "0x40003D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool m_restoreOnInputAcquired;

	[Token(Token = "0x40003D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private Vector3 _startPoint;

	[Token(Token = "0x40003D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Vector3 _forward;

	[Token(Token = "0x40003D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private Vector3 _endPoint;

	[Token(Token = "0x40003D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool _hitTarget;

	[Token(Token = "0x40003D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private LineRenderer lineRenderer;

	[Token(Token = "0x17000038")]
	public LaserBeamBehavior laserBeamBehavior
	{
		[Token(Token = "0x6000573")]
		[Address(RVA = "0xEB57C8", Offset = "0xEB57C8", VA = "0xEB57C8")]
		get
		{
			return default(LaserBeamBehavior);
		}
		[Token(Token = "0x6000572")]
		[Address(RVA = "0xEB32A4", Offset = "0xEB32A4", VA = "0xEB32A4")]
		set
		{
		}
	}

	[Token(Token = "0x6000574")]
	[Address(RVA = "0xEB57D0", Offset = "0xEB57D0", VA = "0xEB57D0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000575")]
	[Address(RVA = "0xEB5828", Offset = "0xEB5828", VA = "0xEB5828")]
	private void Start()
	{
	}

	[Token(Token = "0x6000576")]
	[Address(RVA = "0xEB5960", Offset = "0xEB5960", VA = "0xEB5960", Slot = "5")]
	public override void SetCursorStartDest(Vector3 start, Vector3 dest, Vector3 normal)
	{
	}

	[Token(Token = "0x6000577")]
	[Address(RVA = "0xEB597C", Offset = "0xEB597C", VA = "0xEB597C", Slot = "4")]
	public override void SetCursorRay(Transform t)
	{
	}

	[Token(Token = "0x6000578")]
	[Address(RVA = "0xEB59CC", Offset = "0xEB59CC", VA = "0xEB59CC")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000579")]
	[Address(RVA = "0xEB5B6C", Offset = "0xEB5B6C", VA = "0xEB5B6C")]
	private void UpdateLaserBeam(Vector3 start, Vector3 end)
	{
	}

	[Token(Token = "0x600057A")]
	[Address(RVA = "0xEB5C7C", Offset = "0xEB5C7C", VA = "0xEB5C7C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600057B")]
	[Address(RVA = "0xEB5D00", Offset = "0xEB5D00", VA = "0xEB5D00")]
	public void OnInputFocusLost()
	{
	}

	[Token(Token = "0x600057C")]
	[Address(RVA = "0xEB5DC0", Offset = "0xEB5DC0", VA = "0xEB5DC0")]
	public void OnInputFocusAcquired()
	{
	}

	[Token(Token = "0x600057D")]
	[Address(RVA = "0xEB5E68", Offset = "0xEB5E68", VA = "0xEB5E68")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600057E")]
	[Address(RVA = "0xEB5F54", Offset = "0xEB5F54", VA = "0xEB5F54")]
	public LaserPointer()
	{
	}
}
[Token(Token = "0x20000A9")]
public class CharacterCameraConstraint : MonoBehaviour
{
	[Token(Token = "0x40003DE")]
	private const float FADE_RAY_LENGTH = 0.25f;

	[Token(Token = "0x40003DF")]
	private const float FADE_OVERLAP_MAXIMUM = 0.1f;

	[Token(Token = "0x40003E0")]
	private const float FADE_AMOUNT_MAXIMUM = 1f;

	[Token(Token = "0x40003E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Tooltip("This should be a reference to the OVRCameraRig that is usually a child of the PlayerController.")]
	public OVRCameraRig CameraRig;

	[Token(Token = "0x40003E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[Tooltip("Collision layers to be used for the purposes of fading out the screen when the HMD is inside world geometry and adjusting the capsule height.")]
	public LayerMask CollideLayers;

	[Token(Token = "0x40003E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[Tooltip("Offset is added to camera's real world height, effectively treating it as though the player was taller/standing higher.")]
	public float HeightOffset;

	[Token(Token = "0x40003E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[Tooltip("Minimum height that the character capsule can shrink to.  To disable, set to capsule's height.")]
	public float MinimumHeight;

	[Token(Token = "0x40003E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[Tooltip("Maximum height that the character capsule can grow to.  To disable, set to capsule's height.")]
	public float MaximumHeight;

	[Token(Token = "0x40003E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private CapsuleCollider _character;

	[Token(Token = "0x40003E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private SimpleCapsuleWithStickMovement _simplePlayerController;

	[Token(Token = "0x600057F")]
	[Address(RVA = "0xEB5F64", Offset = "0xEB5F64", VA = "0xEB5F64")]
	private CharacterCameraConstraint()
	{
	}

	[Token(Token = "0x6000580")]
	[Address(RVA = "0xEB5F6C", Offset = "0xEB5F6C", VA = "0xEB5F6C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000581")]
	[Address(RVA = "0xEB5FFC", Offset = "0xEB5FFC", VA = "0xEB5FFC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000582")]
	[Address(RVA = "0xEB6120", Offset = "0xEB6120", VA = "0xEB6120")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000583")]
	[Address(RVA = "0xEB6244", Offset = "0xEB6244", VA = "0xEB6244")]
	private void CameraUpdate()
	{
	}

	[Token(Token = "0x6000584")]
	[Address(RVA = "0xEB6564", Offset = "0xEB6564", VA = "0xEB6564")]
	private bool CheckCameraOverlapped()
	{
		return default(bool);
	}

	[Token(Token = "0x6000585")]
	[Address(RVA = "0xEB67C4", Offset = "0xEB67C4", VA = "0xEB67C4")]
	private bool CheckCameraNearClipping(out float result)
	{
		return default(bool);
	}
}
[Token(Token = "0x20000AA")]
public class LocomotionController : MonoBehaviour
{
	[Token(Token = "0x40003E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OVRCameraRig CameraRig;

	[Token(Token = "0x40003E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public CapsuleCollider CharacterController;

	[Token(Token = "0x40003EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public SimpleCapsuleWithStickMovement PlayerController;

	[Token(Token = "0x6000586")]
	[Address(RVA = "0xEB6F1C", Offset = "0xEB6F1C", VA = "0xEB6F1C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000587")]
	[Address(RVA = "0xEB6FC8", Offset = "0xEB6FC8", VA = "0xEB6FC8")]
	public LocomotionController()
	{
	}
}
[Token(Token = "0x20000AB")]
public class LocomotionTeleport : MonoBehaviour
{
	[Token(Token = "0x20000AC")]
	public enum States
	{
		[Token(Token = "0x400040E")]
		Ready,
		[Token(Token = "0x400040F")]
		Aim,
		[Token(Token = "0x4000410")]
		CancelAim,
		[Token(Token = "0x4000411")]
		PreTeleport,
		[Token(Token = "0x4000412")]
		CancelTeleport,
		[Token(Token = "0x4000413")]
		Teleporting,
		[Token(Token = "0x4000414")]
		PostTeleport
	}

	[Token(Token = "0x20000AD")]
	public enum TeleportIntentions
	{
		[Token(Token = "0x4000416")]
		None,
		[Token(Token = "0x4000417")]
		Aim,
		[Token(Token = "0x4000418")]
		PreTeleport,
		[Token(Token = "0x4000419")]
		Teleport
	}

	[Token(Token = "0x20000AE")]
	public enum AimCollisionTypes
	{
		[Token(Token = "0x400041B")]
		Point,
		[Token(Token = "0x400041C")]
		Sphere,
		[Token(Token = "0x400041D")]
		Capsule
	}

	[Token(Token = "0x20000AF")]
	public class AimData
	{
		[Token(Token = "0x400041E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public RaycastHit TargetHitInfo;

		[Token(Token = "0x400041F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public bool TargetValid;

		[Token(Token = "0x4000420")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Vector3? Destination;

		[Token(Token = "0x4000421")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public float Radius;

		[Token(Token = "0x1700003C")]
		public List<Vector3> Points
		{
			[Token(Token = "0x60005BD")]
			[Address(RVA = "0xEB8D08", Offset = "0xEB8D08", VA = "0xEB8D08")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x60005BE")]
			[Address(RVA = "0xEB8D10", Offset = "0xEB8D10", VA = "0xEB8D10")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x60005BC")]
		[Address(RVA = "0xEB8C80", Offset = "0xEB8C80", VA = "0xEB8C80")]
		public AimData()
		{
		}

		[Token(Token = "0x60005BF")]
		[Address(RVA = "0xEB8D18", Offset = "0xEB8D18", VA = "0xEB8D18")]
		public void Reset()
		{
		}
	}

	[Token(Token = "0x20000B0")]
	[CompilerGenerated]
	private sealed class <ReadyStateCoroutine>d__52 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000423")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000424")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000425")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x1700003D")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60005C3")]
			[Address(RVA = "0xEB8E80", Offset = "0xEB8E80", VA = "0xEB8E80", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700003E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60005C5")]
			[Address(RVA = "0xEB8EC8", Offset = "0xEB8EC8", VA = "0xEB8EC8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60005C0")]
		[Address(RVA = "0xEB79D4", Offset = "0xEB79D4", VA = "0xEB79D4")]
		[DebuggerHidden]
		public <ReadyStateCoroutine>d__52(int <>1__state)
		{
		}

		[Token(Token = "0x60005C1")]
		[Address(RVA = "0xEB8D70", Offset = "0xEB8D70", VA = "0xEB8D70", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60005C2")]
		[Address(RVA = "0xEB8D74", Offset = "0xEB8D74", VA = "0xEB8D74", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60005C4")]
		[Address(RVA = "0xEB8E88", Offset = "0xEB8E88", VA = "0xEB8E88", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20000B1")]
	[CompilerGenerated]
	private sealed class <AimStateCoroutine>d__64 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000426")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000427")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000428")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x1700003F")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60005C9")]
			[Address(RVA = "0xEB902C", Offset = "0xEB902C", VA = "0xEB902C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000040")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60005CB")]
			[Address(RVA = "0xEB9074", Offset = "0xEB9074", VA = "0xEB9074", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60005C6")]
		[Address(RVA = "0xEB7E5C", Offset = "0xEB7E5C", VA = "0xEB7E5C")]
		[DebuggerHidden]
		public <AimStateCoroutine>d__64(int <>1__state)
		{
		}

		[Token(Token = "0x60005C7")]
		[Address(RVA = "0xEB8ED0", Offset = "0xEB8ED0", VA = "0xEB8ED0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60005C8")]
		[Address(RVA = "0xEB8ED4", Offset = "0xEB8ED4", VA = "0xEB8ED4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60005CA")]
		[Address(RVA = "0xEB9034", Offset = "0xEB9034", VA = "0xEB9034", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20000B2")]
	[CompilerGenerated]
	private sealed class <CancelAimStateCoroutine>d__68 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000429")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400042A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400042B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x17000041")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60005CF")]
			[Address(RVA = "0xEB912C", Offset = "0xEB912C", VA = "0xEB912C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000042")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60005D1")]
			[Address(RVA = "0xEB9174", Offset = "0xEB9174", VA = "0xEB9174", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60005CC")]
		[Address(RVA = "0xEB8030", Offset = "0xEB8030", VA = "0xEB8030")]
		[DebuggerHidden]
		public <CancelAimStateCoroutine>d__68(int <>1__state)
		{
		}

		[Token(Token = "0x60005CD")]
		[Address(RVA = "0xEB907C", Offset = "0xEB907C", VA = "0xEB907C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60005CE")]
		[Address(RVA = "0xEB9080", Offset = "0xEB9080", VA = "0xEB9080", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60005D0")]
		[Address(RVA = "0xEB9134", Offset = "0xEB9134", VA = "0xEB9134", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20000B3")]
	[CompilerGenerated]
	private sealed class <PreTeleportStateCoroutine>d__72 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400042C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400042D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400042E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x17000043")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60005D5")]
			[Address(RVA = "0xEB9264", Offset = "0xEB9264", VA = "0xEB9264", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000044")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60005D7")]
			[Address(RVA = "0xEB92AC", Offset = "0xEB92AC", VA = "0xEB92AC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60005D2")]
		[Address(RVA = "0xEB8204", Offset = "0xEB8204", VA = "0xEB8204")]
		[DebuggerHidden]
		public <PreTeleportStateCoroutine>d__72(int <>1__state)
		{
		}

		[Token(Token = "0x60005D3")]
		[Address(RVA = "0xEB917C", Offset = "0xEB917C", VA = "0xEB917C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60005D4")]
		[Address(RVA = "0xEB9180", Offset = "0xEB9180", VA = "0xEB9180", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60005D6")]
		[Address(RVA = "0xEB926C", Offset = "0xEB926C", VA = "0xEB926C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20000B4")]
	[CompilerGenerated]
	private sealed class <CancelTeleportStateCoroutine>d__76 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400042F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000430")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000431")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x17000045")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60005DB")]
			[Address(RVA = "0xEB9364", Offset = "0xEB9364", VA = "0xEB9364", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000046")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60005DD")]
			[Address(RVA = "0xEB93AC", Offset = "0xEB93AC", VA = "0xEB93AC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60005D8")]
		[Address(RVA = "0xEB83D8", Offset = "0xEB83D8", VA = "0xEB83D8")]
		[DebuggerHidden]
		public <CancelTeleportStateCoroutine>d__76(int <>1__state)
		{
		}

		[Token(Token = "0x60005D9")]
		[Address(RVA = "0xEB92B4", Offset = "0xEB92B4", VA = "0xEB92B4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60005DA")]
		[Address(RVA = "0xEB92B8", Offset = "0xEB92B8", VA = "0xEB92B8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60005DC")]
		[Address(RVA = "0xEB936C", Offset = "0xEB936C", VA = "0xEB936C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20000B5")]
	[CompilerGenerated]
	private sealed class <TeleportingStateCoroutine>d__80 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000432")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000433")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000434")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x17000047")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60005E1")]
			[Address(RVA = "0xEB9498", Offset = "0xEB9498", VA = "0xEB9498", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000048")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60005E3")]
			[Address(RVA = "0xEB94E0", Offset = "0xEB94E0", VA = "0xEB94E0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60005DE")]
		[Address(RVA = "0xEB85AC", Offset = "0xEB85AC", VA = "0xEB85AC")]
		[DebuggerHidden]
		public <TeleportingStateCoroutine>d__80(int <>1__state)
		{
		}

		[Token(Token = "0x60005DF")]
		[Address(RVA = "0xEB93B4", Offset = "0xEB93B4", VA = "0xEB93B4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60005E0")]
		[Address(RVA = "0xEB93B8", Offset = "0xEB93B8", VA = "0xEB93B8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60005E2")]
		[Address(RVA = "0xEB94A0", Offset = "0xEB94A0", VA = "0xEB94A0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20000B6")]
	[CompilerGenerated]
	private sealed class <PostTeleportStateCoroutine>d__84 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000435")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000436")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000437")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x17000049")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60005E7")]
			[Address(RVA = "0xEB95E8", Offset = "0xEB95E8", VA = "0xEB95E8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700004A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60005E9")]
			[Address(RVA = "0xEB9630", Offset = "0xEB9630", VA = "0xEB9630", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60005E4")]
		[Address(RVA = "0xEB8780", Offset = "0xEB8780", VA = "0xEB8780")]
		[DebuggerHidden]
		public <PostTeleportStateCoroutine>d__84(int <>1__state)
		{
		}

		[Token(Token = "0x60005E5")]
		[Address(RVA = "0xEB94E8", Offset = "0xEB94E8", VA = "0xEB94E8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60005E6")]
		[Address(RVA = "0xEB94EC", Offset = "0xEB94EC", VA = "0xEB94EC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60005E8")]
		[Address(RVA = "0xEB95F0", Offset = "0xEB95F0", VA = "0xEB95F0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40003EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Tooltip("Allow linear movement prior to the teleport system being activated.")]
	public bool EnableMovementDuringReady;

	[Token(Token = "0x40003EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	[Tooltip("Allow linear movement while the teleport system is in the process of aiming for a teleport target.")]
	public bool EnableMovementDuringAim;

	[Token(Token = "0x40003ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	[Tooltip("Allow linear movement while the teleport system is in the process of configuring the landing orientation.")]
	public bool EnableMovementDuringPreTeleport;

	[Token(Token = "0x40003EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B")]
	[Tooltip("Allow linear movement after the teleport has occurred but before the system has returned to the ready state.")]
	public bool EnableMovementDuringPostTeleport;

	[Token(Token = "0x40003EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[Tooltip("Allow rotation prior to the teleport system being activated.")]
	public bool EnableRotationDuringReady;

	[Token(Token = "0x40003F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
	[Tooltip("Allow rotation while the teleport system is in the process of aiming for a teleport target.")]
	public bool EnableRotationDuringAim;

	[Token(Token = "0x40003F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E")]
	[Tooltip("Allow rotation while the teleport system is in the process of configuring the landing orientation.")]
	public bool EnableRotationDuringPreTeleport;

	[Token(Token = "0x40003F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F")]
	[Tooltip("Allow rotation after the teleport has occurred but before the system has returned to the ready state.")]
	public bool EnableRotationDuringPostTeleport;

	[NonSerialized]
	[Token(Token = "0x40003F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public TeleportAimHandler AimHandler;

	[Token(Token = "0x40003F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[Tooltip("This prefab will be instantiated as needed and updated to match the current aim target.")]
	public TeleportDestination TeleportDestinationPrefab;

	[Token(Token = "0x40003F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[Tooltip("TeleportDestinationPrefab will be instantiated into this layer.")]
	public int TeleportDestinationLayer;

	[NonSerialized]
	[Token(Token = "0x40003F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public TeleportInputHandler InputHandler;

	[NonSerialized]
	[Token(Token = "0x40003F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public TeleportIntentions CurrentIntention;

	[NonSerialized]
	[Token(Token = "0x40003FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public bool IsPreTeleportRequested;

	[NonSerialized]
	[Token(Token = "0x40003FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x55")]
	public bool IsTransitioning;

	[NonSerialized]
	[Token(Token = "0x40003FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x56")]
	public bool IsPostTeleportRequested;

	[Token(Token = "0x40003FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private TeleportDestination _teleportDestination;

	[Token(Token = "0x40003FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[Tooltip("When aiming at possible destinations, the aim collision type determines which shape to use for collision tests.")]
	public AimCollisionTypes AimCollisionType;

	[Token(Token = "0x4000400")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	[Tooltip("Use the character collision radius/height/skinwidth for sphere/capsule collision tests.")]
	public bool UseCharacterCollisionData;

	[Token(Token = "0x4000401")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[Tooltip("Radius of the sphere or capsule used for collision testing when aiming to possible teleport destinations. Ignored if UseCharacterCollisionData is true.")]
	public float AimCollisionRadius;

	[Token(Token = "0x4000402")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	[Tooltip("Height of the capsule used for collision testing when aiming to possible teleport destinations. Ignored if UseCharacterCollisionData is true.")]
	public float AimCollisionHeight;

	[Token(Token = "0x17000039")]
	public States CurrentState
	{
		[Token(Token = "0x600058A")]
		[Address(RVA = "0xEB7018", Offset = "0xEB7018", VA = "0xEB7018")]
		[CompilerGenerated]
		get
		{
			return default(States);
		}
		[Token(Token = "0x600058B")]
		[Address(RVA = "0xEB7020", Offset = "0xEB7020", VA = "0xEB7020")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x1700003A")]
	public Quaternion DestinationRotation
	{
		[Token(Token = "0x600058F")]
		[Address(RVA = "0xEB71F0", Offset = "0xEB71F0", VA = "0xEB71F0")]
		get
		{
			return default(Quaternion);
		}
	}

	[Token(Token = "0x1700003B")]
	public LocomotionController LocomotionController
	{
		[Token(Token = "0x6000590")]
		[Address(RVA = "0xEB7214", Offset = "0xEB7214", VA = "0xEB7214")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x6000591")]
		[Address(RVA = "0xEB721C", Offset = "0xEB721C", VA = "0xEB721C")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x14000001")]
	public event Action<bool, Vector3?, Quaternion?, Quaternion?> UpdateTeleportDestination
	{
		[Token(Token = "0x600058C")]
		[Address(RVA = "0xEB7028", Offset = "0xEB7028", VA = "0xEB7028")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x600058D")]
		[Address(RVA = "0xEB70D8", Offset = "0xEB70D8", VA = "0xEB70D8")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x14000002")]
	public event Action EnterStateReady
	{
		[Token(Token = "0x600059B")]
		[Address(RVA = "0xEB789C", Offset = "0xEB789C", VA = "0xEB789C")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x600059C")]
		[Address(RVA = "0xEB7938", Offset = "0xEB7938", VA = "0xEB7938")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x14000003")]
	public event Action EnterStateAim
	{
		[Token(Token = "0x600059E")]
		[Address(RVA = "0xEB79FC", Offset = "0xEB79FC", VA = "0xEB79FC")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x600059F")]
		[Address(RVA = "0xEB7A98", Offset = "0xEB7A98", VA = "0xEB7A98")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x14000004")]
	public event Action<AimData> UpdateAimData
	{
		[Token(Token = "0x60005A0")]
		[Address(RVA = "0xEB7B34", Offset = "0xEB7B34", VA = "0xEB7B34")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x60005A1")]
		[Address(RVA = "0xEB7BE4", Offset = "0xEB7BE4", VA = "0xEB7BE4")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x14000005")]
	public event Action ExitStateAim
	{
		[Token(Token = "0x60005A3")]
		[Address(RVA = "0xEB7CB0", Offset = "0xEB7CB0", VA = "0xEB7CB0")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x60005A4")]
		[Address(RVA = "0xEB7D4C", Offset = "0xEB7D4C", VA = "0xEB7D4C")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x14000006")]
	public event Action EnterStateCancelAim
	{
		[Token(Token = "0x60005A6")]
		[Address(RVA = "0xEB7E84", Offset = "0xEB7E84", VA = "0xEB7E84")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x60005A7")]
		[Address(RVA = "0xEB7F20", Offset = "0xEB7F20", VA = "0xEB7F20")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x14000007")]
	public event Action EnterStatePreTeleport
	{
		[Token(Token = "0x60005A9")]
		[Address(RVA = "0xEB8058", Offset = "0xEB8058", VA = "0xEB8058")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x60005AA")]
		[Address(RVA = "0xEB80F4", Offset = "0xEB80F4", VA = "0xEB80F4")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x14000008")]
	public event Action EnterStateCancelTeleport
	{
		[Token(Token = "0x60005AC")]
		[Address(RVA = "0xEB822C", Offset = "0xEB822C", VA = "0xEB822C")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x60005AD")]
		[Address(RVA = "0xEB82C8", Offset = "0xEB82C8", VA = "0xEB82C8")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x14000009")]
	public event Action EnterStateTeleporting
	{
		[Token(Token = "0x60005AF")]
		[Address(RVA = "0xEB8400", Offset = "0xEB8400", VA = "0xEB8400")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x60005B0")]
		[Address(RVA = "0xEB849C", Offset = "0xEB849C", VA = "0xEB849C")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x1400000A")]
	public event Action EnterStatePostTeleport
	{
		[Token(Token = "0x60005B2")]
		[Address(RVA = "0xEB85D4", Offset = "0xEB85D4", VA = "0xEB85D4")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x60005B3")]
		[Address(RVA = "0xEB8670", Offset = "0xEB8670", VA = "0xEB8670")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x1400000B")]
	public event Action<Transform, Vector3, Quaternion> Teleported
	{
		[Token(Token = "0x60005B5")]
		[Address(RVA = "0xEB87A8", Offset = "0xEB87A8", VA = "0xEB87A8")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x60005B6")]
		[Address(RVA = "0xEB8858", Offset = "0xEB8858", VA = "0xEB8858")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x6000588")]
	[Address(RVA = "0xEB6FD0", Offset = "0xEB6FD0", VA = "0xEB6FD0")]
	public void EnableMovement(bool ready, bool aim, bool pre, bool post)
	{
	}

	[Token(Token = "0x6000589")]
	[Address(RVA = "0xEB6FF4", Offset = "0xEB6FF4", VA = "0xEB6FF4")]
	public void EnableRotation(bool ready, bool aim, bool pre, bool post)
	{
	}

	[Token(Token = "0x600058E")]
	[Address(RVA = "0xEB7188", Offset = "0xEB7188", VA = "0xEB7188")]
	public void OnUpdateTeleportDestination(bool isValidDestination, Vector3? position, Quaternion? rotation, Quaternion? landingRotation)
	{
	}

	[Token(Token = "0x6000592")]
	[Address(RVA = "0xEB7224", Offset = "0xEB7224", VA = "0xEB7224")]
	public bool AimCollisionTest(Vector3 start, Vector3 end, LayerMask aimCollisionLayerMask, out RaycastHit hitInfo)
	{
		return default(bool);
	}

	[Token(Token = "0x6000593")]
	[Address(RVA = "0xEB74EC", Offset = "0xEB74EC", VA = "0xEB74EC")]
	[Conditional("DEBUG_TELEPORT_STATES")]
	protected void LogState(string msg)
	{
	}

	[Token(Token = "0x6000594")]
	[Address(RVA = "0xEB7594", Offset = "0xEB7594", VA = "0xEB7594")]
	protected void CreateNewTeleportDestination()
	{
	}

	[Token(Token = "0x6000595")]
	[Address(RVA = "0xEB7680", Offset = "0xEB7680", VA = "0xEB7680")]
	private void DeactivateDestination()
	{
	}

	[Token(Token = "0x6000596")]
	[Address(RVA = "0xEB76BC", Offset = "0xEB76BC", VA = "0xEB76BC")]
	public void RecycleTeleportDestination(TeleportDestination oldDestination)
	{
	}

	[Token(Token = "0x6000597")]
	[Address(RVA = "0xEB776C", Offset = "0xEB776C", VA = "0xEB776C")]
	private void EnableMotion(bool enableLinear, bool enableRotation)
	{
	}

	[Token(Token = "0x6000598")]
	[Address(RVA = "0xEB779C", Offset = "0xEB779C", VA = "0xEB779C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000599")]
	[Address(RVA = "0xEB77FC", Offset = "0xEB77FC", VA = "0xEB77FC", Slot = "4")]
	public virtual void OnEnable()
	{
	}

	[Token(Token = "0x600059A")]
	[Address(RVA = "0xEB7894", Offset = "0xEB7894", VA = "0xEB7894", Slot = "5")]
	public virtual void OnDisable()
	{
	}

	[Token(Token = "0x600059D")]
	[Address(RVA = "0xEB7820", Offset = "0xEB7820", VA = "0xEB7820")]
	[IteratorStateMachine(typeof(<ReadyStateCoroutine>d__52))]
	protected IEnumerator ReadyStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x60005A2")]
	[Address(RVA = "0xEB7C94", Offset = "0xEB7C94", VA = "0xEB7C94")]
	public void OnUpdateAimData(AimData aimData)
	{
	}

	[Token(Token = "0x60005A5")]
	[Address(RVA = "0xEB7DE8", Offset = "0xEB7DE8", VA = "0xEB7DE8")]
	[IteratorStateMachine(typeof(<AimStateCoroutine>d__64))]
	protected IEnumerator AimStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x60005A8")]
	[Address(RVA = "0xEB7FBC", Offset = "0xEB7FBC", VA = "0xEB7FBC")]
	[IteratorStateMachine(typeof(<CancelAimStateCoroutine>d__68))]
	protected IEnumerator CancelAimStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x60005AB")]
	[Address(RVA = "0xEB8190", Offset = "0xEB8190", VA = "0xEB8190")]
	[IteratorStateMachine(typeof(<PreTeleportStateCoroutine>d__72))]
	protected IEnumerator PreTeleportStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x60005AE")]
	[Address(RVA = "0xEB8364", Offset = "0xEB8364", VA = "0xEB8364")]
	[IteratorStateMachine(typeof(<CancelTeleportStateCoroutine>d__76))]
	protected IEnumerator CancelTeleportStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x60005B1")]
	[Address(RVA = "0xEB8538", Offset = "0xEB8538", VA = "0xEB8538")]
	[IteratorStateMachine(typeof(<TeleportingStateCoroutine>d__80))]
	protected IEnumerator TeleportingStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x60005B4")]
	[Address(RVA = "0xEB870C", Offset = "0xEB870C", VA = "0xEB870C")]
	[IteratorStateMachine(typeof(<PostTeleportStateCoroutine>d__84))]
	protected IEnumerator PostTeleportStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x60005B7")]
	[Address(RVA = "0xEB8908", Offset = "0xEB8908", VA = "0xEB8908")]
	public void DoTeleport()
	{
	}

	[Token(Token = "0x60005B8")]
	[Address(RVA = "0xEB8A1C", Offset = "0xEB8A1C", VA = "0xEB8A1C")]
	public Vector3 GetCharacterPosition()
	{
		return default(Vector3);
	}

	[Token(Token = "0x60005B9")]
	[Address(RVA = "0xEB8A4C", Offset = "0xEB8A4C", VA = "0xEB8A4C")]
	public Quaternion GetHeadRotationY()
	{
		return default(Quaternion);
	}

	[Token(Token = "0x60005BA")]
	[Address(RVA = "0xEB8B88", Offset = "0xEB8B88", VA = "0xEB8B88")]
	public void DoWarp(Vector3 startPos, float positionPercent)
	{
	}

	[Token(Token = "0x60005BB")]
	[Address(RVA = "0xEB8C70", Offset = "0xEB8C70", VA = "0xEB8C70")]
	public LocomotionTeleport()
	{
	}
}
[Token(Token = "0x20000B7")]
public class SimpleCapsuleWithStickMovement : MonoBehaviour
{
	[Token(Token = "0x4000438")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool EnableLinearMovement;

	[Token(Token = "0x4000439")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool EnableRotation;

	[Token(Token = "0x400043A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	public bool HMDRotatesPlayer;

	[Token(Token = "0x400043B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B")]
	public bool RotationEitherThumbstick;

	[Token(Token = "0x400043C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float RotationAngle;

	[Token(Token = "0x400043D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float Speed;

	[Token(Token = "0x400043E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OVRCameraRig CameraRig;

	[Token(Token = "0x400043F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool ReadyToSnapTurn;

	[Token(Token = "0x4000440")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Rigidbody _rigidbody;

	[Token(Token = "0x1400000C")]
	public event Action CameraUpdated
	{
		[Token(Token = "0x60005EA")]
		[Address(RVA = "0xEB6084", Offset = "0xEB6084", VA = "0xEB6084")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x60005EB")]
		[Address(RVA = "0xEB61A8", Offset = "0xEB61A8", VA = "0xEB61A8")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x1400000D")]
	public event Action PreCharacterMove
	{
		[Token(Token = "0x60005EC")]
		[Address(RVA = "0xEB9638", Offset = "0xEB9638", VA = "0xEB9638")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x60005ED")]
		[Address(RVA = "0xEB96D4", Offset = "0xEB96D4", VA = "0xEB96D4")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x60005EE")]
	[Address(RVA = "0xEB9770", Offset = "0xEB9770", VA = "0xEB9770")]
	private void Awake()
	{
	}

	[Token(Token = "0x60005EF")]
	[Address(RVA = "0xEB9850", Offset = "0xEB9850", VA = "0xEB9850")]
	private void Start()
	{
	}

	[Token(Token = "0x60005F0")]
	[Address(RVA = "0xEB9854", Offset = "0xEB9854", VA = "0xEB9854")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x60005F1")]
	[Address(RVA = "0xEB98C8", Offset = "0xEB98C8", VA = "0xEB98C8")]
	private void RotatePlayerToHMD()
	{
	}

	[Token(Token = "0x60005F2")]
	[Address(RVA = "0xEB99EC", Offset = "0xEB99EC", VA = "0xEB99EC")]
	private void StickMovement()
	{
	}

	[Token(Token = "0x60005F3")]
	[Address(RVA = "0xEB9C64", Offset = "0xEB9C64", VA = "0xEB9C64")]
	private void SnapTurn()
	{
	}

	[Token(Token = "0x60005F4")]
	[Address(RVA = "0xEB9E84", Offset = "0xEB9E84", VA = "0xEB9E84")]
	public SimpleCapsuleWithStickMovement()
	{
	}
}
[Token(Token = "0x20000B8")]
public abstract class TeleportAimHandler : TeleportSupport
{
	[Token(Token = "0x60005F5")]
	[Address(RVA = "0xEB9EA4", Offset = "0xEB9EA4", VA = "0xEB9EA4", Slot = "4")]
	protected override void OnEnable()
	{
	}

	[Token(Token = "0x60005F6")]
	[Address(RVA = "0xEB9F34", Offset = "0xEB9F34", VA = "0xEB9F34", Slot = "5")]
	protected override void OnDisable()
	{
	}

	[Token(Token = "0x60005F7")]
	public abstract void GetPoints(List<Vector3> points);

	[Token(Token = "0x60005F8")]
	[Address(RVA = "0xEBA004", Offset = "0xEBA004", VA = "0xEBA004")]
	protected TeleportAimHandler()
	{
	}
}
[Token(Token = "0x20000B9")]
public class TeleportAimHandlerLaser : TeleportAimHandler
{
	[Token(Token = "0x4000443")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[Tooltip("Maximum range for aiming.")]
	public float Range;

	[Token(Token = "0x60005F9")]
	[Address(RVA = "0xEBA014", Offset = "0xEBA014", VA = "0xEBA014", Slot = "8")]
	public override void GetPoints(List<Vector3> points)
	{
	}

	[Token(Token = "0x60005FA")]
	[Address(RVA = "0xEBA1A4", Offset = "0xEBA1A4", VA = "0xEBA1A4")]
	public TeleportAimHandlerLaser()
	{
	}
}
[Token(Token = "0x20000BA")]
public class TeleportAimHandlerParabolic : TeleportAimHandler
{
	[Token(Token = "0x4000444")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[Tooltip("Maximum range for aiming.")]
	public float Range;

	[Token(Token = "0x4000445")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[Tooltip("The MinimumElevation is relative to the AimPosition.")]
	public float MinimumElevation;

	[Token(Token = "0x4000446")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[Tooltip("The Gravity is used in conjunction with AimVelocity and the aim direction to simulate a projectile.")]
	public float Gravity;

	[Token(Token = "0x4000447")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[Tooltip("The AimVelocity is the initial speed of the faked projectile.")]
	[Range(0.001f, 50f)]
	public float AimVelocity;

	[Token(Token = "0x4000448")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[Tooltip("The AimStep is the how much to subdivide the iteration.")]
	[Range(0.001f, 1f)]
	public float AimStep;

	[Token(Token = "0x60005FB")]
	[Address(RVA = "0xEBA1B4", Offset = "0xEBA1B4", VA = "0xEBA1B4", Slot = "8")]
	public override void GetPoints(List<Vector3> points)
	{
	}

	[Token(Token = "0x60005FC")]
	[Address(RVA = "0xEBA388", Offset = "0xEBA388", VA = "0xEBA388")]
	public TeleportAimHandlerParabolic()
	{
	}
}
[Token(Token = "0x20000BB")]
public class TeleportAimVisualLaser : TeleportSupport
{
	[Token(Token = "0x4000449")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[Tooltip("This prefab will be instantiated when the aim visual is awakened, and will be set active when the user is aiming, and deactivated when they are done aiming.")]
	public LineRenderer LaserPrefab;

	[Token(Token = "0x400044A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private readonly Action _enterAimStateAction;

	[Token(Token = "0x400044B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private readonly Action _exitAimStateAction;

	[Token(Token = "0x400044C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private readonly Action<LocomotionTeleport.AimData> _updateAimDataAction;

	[Token(Token = "0x400044D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private LineRenderer _lineRenderer;

	[Token(Token = "0x400044E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Vector3[] _linePoints;

	[Token(Token = "0x60005FD")]
	[Address(RVA = "0xEBA39C", Offset = "0xEBA39C", VA = "0xEBA39C")]
	public TeleportAimVisualLaser()
	{
	}

	[Token(Token = "0x60005FE")]
	[Address(RVA = "0xEBA4C8", Offset = "0xEBA4C8", VA = "0xEBA4C8")]
	private void EnterAimState()
	{
	}

	[Token(Token = "0x60005FF")]
	[Address(RVA = "0xEBA4F4", Offset = "0xEBA4F4", VA = "0xEBA4F4")]
	private void ExitAimState()
	{
	}

	[Token(Token = "0x6000600")]
	[Address(RVA = "0xEBA520", Offset = "0xEBA520", VA = "0xEBA520")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000601")]
	[Address(RVA = "0xEBA5C4", Offset = "0xEBA5C4", VA = "0xEBA5C4", Slot = "6")]
	protected override void AddEventHandlers()
	{
	}

	[Token(Token = "0x6000602")]
	[Address(RVA = "0xEBA618", Offset = "0xEBA618", VA = "0xEBA618", Slot = "7")]
	protected override void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x6000603")]
	[Address(RVA = "0xEBA668", Offset = "0xEBA668", VA = "0xEBA668")]
	private void UpdateAimData(LocomotionTeleport.AimData obj)
	{
	}
}
[Token(Token = "0x20000BC")]
public class TeleportDestination : MonoBehaviour
{
	[Token(Token = "0x4000450")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[Tooltip("If the target handler provides a target position, this transform will be moved to that position and it's game object enabled. A target position being provided does not mean the position is valid, only that the aim handler found something to test as a destination.")]
	public Transform PositionIndicator;

	[Token(Token = "0x4000451")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[Tooltip("This transform will be rotated to match the rotation of the aiming target. Simple teleport destinations should assign this to the object containing this component. More complex teleport destinations might assign this to a sub-object that is used to indicate the landing orientation independently from the rest of the destination indicator, such as when world space effects are required. This will typically be a child of the PositionIndicator.")]
	public Transform OrientationIndicator;

	[Token(Token = "0x4000452")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[Tooltip("After the player teleports, the character controller will have it's rotation set to this value. It is different from the OrientationIndicator transform.rotation in order to support both head-relative and forward-facing teleport modes (See TeleportOrientationHandlerThumbstick.cs).")]
	public Quaternion LandingRotation;

	[NonSerialized]
	[Token(Token = "0x4000453")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public LocomotionTeleport LocomotionTeleport;

	[NonSerialized]
	[Token(Token = "0x4000454")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public LocomotionTeleport.States TeleportState;

	[Token(Token = "0x4000455")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private readonly Action<bool, Vector3?, Quaternion?, Quaternion?> _updateTeleportDestinationAction;

	[Token(Token = "0x4000456")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool _eventsActive;

	[Token(Token = "0x1700004B")]
	public bool IsValidDestination
	{
		[Token(Token = "0x6000604")]
		[Address(RVA = "0xEBA764", Offset = "0xEBA764", VA = "0xEBA764")]
		[CompilerGenerated]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000605")]
		[Address(RVA = "0xEBA76C", Offset = "0xEBA76C", VA = "0xEBA76C")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x1400000E")]
	public event Action<TeleportDestination> Deactivated
	{
		[Token(Token = "0x600060A")]
		[Address(RVA = "0xEBA8F4", Offset = "0xEBA8F4", VA = "0xEBA8F4")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x600060B")]
		[Address(RVA = "0xEBA9A4", Offset = "0xEBA9A4", VA = "0xEBA9A4")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x6000606")]
	[Address(RVA = "0xEBA778", Offset = "0xEBA778", VA = "0xEBA778")]
	private TeleportDestination()
	{
	}

	[Token(Token = "0x6000607")]
	[Address(RVA = "0xEBA7FC", Offset = "0xEBA7FC", VA = "0xEBA7FC")]
	public void OnEnable()
	{
	}

	[Token(Token = "0x6000608")]
	[Address(RVA = "0xEBA8C0", Offset = "0xEBA8C0", VA = "0xEBA8C0")]
	private void TryDisableEventHandlers()
	{
	}

	[Token(Token = "0x6000609")]
	[Address(RVA = "0xEBA8F0", Offset = "0xEBA8F0", VA = "0xEBA8F0")]
	public void OnDisable()
	{
	}

	[Token(Token = "0x600060C")]
	[Address(RVA = "0xEB7698", Offset = "0xEB7698", VA = "0xEB7698")]
	public void OnDeactivated()
	{
	}

	[Token(Token = "0x600060D")]
	[Address(RVA = "0xEBAA54", Offset = "0xEBAA54", VA = "0xEBAA54")]
	public void Recycle()
	{
	}

	[Token(Token = "0x600060E")]
	[Address(RVA = "0xEBAA70", Offset = "0xEBAA70", VA = "0xEBAA70", Slot = "4")]
	public virtual void UpdateTeleportDestination(bool isValidDestination, Vector3? position, Quaternion? rotation, Quaternion? landingRotation)
	{
	}
}
[Token(Token = "0x20000BD")]
public abstract class TeleportInputHandler : TeleportSupport
{
	[Token(Token = "0x20000BE")]
	[CompilerGenerated]
	private sealed class <TeleportReadyCoroutine>d__5 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400045A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400045B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400045C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportInputHandler <>4__this;

		[Token(Token = "0x1700004C")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600061B")]
			[Address(RVA = "0xEBB038", Offset = "0xEBB038", VA = "0xEBB038", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700004D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600061D")]
			[Address(RVA = "0xEBB080", Offset = "0xEBB080", VA = "0xEBB080", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000618")]
		[Address(RVA = "0xEBAEA4", Offset = "0xEBAEA4", VA = "0xEBAEA4")]
		[DebuggerHidden]
		public <TeleportReadyCoroutine>d__5(int <>1__state)
		{
		}

		[Token(Token = "0x6000619")]
		[Address(RVA = "0xEBAFA8", Offset = "0xEBAFA8", VA = "0xEBAFA8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600061A")]
		[Address(RVA = "0xEBAFAC", Offset = "0xEBAFAC", VA = "0xEBAFAC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600061C")]
		[Address(RVA = "0xEBB040", Offset = "0xEBB040", VA = "0xEBB040", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20000BF")]
	[CompilerGenerated]
	private sealed class <TeleportAimCoroutine>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400045D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400045E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400045F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportInputHandler <>4__this;

		[Token(Token = "0x1700004E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000621")]
			[Address(RVA = "0xEBB124", Offset = "0xEBB124", VA = "0xEBB124", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700004F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000623")]
			[Address(RVA = "0xEBB16C", Offset = "0xEBB16C", VA = "0xEBB16C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600061E")]
		[Address(RVA = "0xEBAF40", Offset = "0xEBAF40", VA = "0xEBAF40")]
		[DebuggerHidden]
		public <TeleportAimCoroutine>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x600061F")]
		[Address(RVA = "0xEBB088", Offset = "0xEBB088", VA = "0xEBB088", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000620")]
		[Address(RVA = "0xEBB08C", Offset = "0xEBB08C", VA = "0xEBB08C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000622")]
		[Address(RVA = "0xEBB12C", Offset = "0xEBB12C", VA = "0xEBB12C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000458")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private readonly Action _startReadyAction;

	[Token(Token = "0x4000459")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private readonly Action _startAimAction;

	[Token(Token = "0x600060F")]
	[Address(RVA = "0xEBAC64", Offset = "0xEBAC64", VA = "0xEBAC64")]
	protected TeleportInputHandler()
	{
	}

	[Token(Token = "0x6000610")]
	[Address(RVA = "0xEBAD38", Offset = "0xEBAD38", VA = "0xEBAD38", Slot = "6")]
	protected override void AddEventHandlers()
	{
	}

	[Token(Token = "0x6000611")]
	[Address(RVA = "0xEBAD84", Offset = "0xEBAD84", VA = "0xEBAD84", Slot = "7")]
	protected override void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x6000612")]
	[Address(RVA = "0xEBAE30", Offset = "0xEBAE30", VA = "0xEBAE30")]
	[IteratorStateMachine(typeof(<TeleportReadyCoroutine>d__5))]
	private IEnumerator TeleportReadyCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000613")]
	[Address(RVA = "0xEBAECC", Offset = "0xEBAECC", VA = "0xEBAECC")]
	[IteratorStateMachine(typeof(<TeleportAimCoroutine>d__6))]
	private IEnumerator TeleportAimCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000614")]
	public abstract LocomotionTeleport.TeleportIntentions GetIntention();

	[Token(Token = "0x6000615")]
	public abstract void GetAimData(out Ray aimRay);
}
[Token(Token = "0x20000C0")]
public class TeleportInputHandlerHMD : TeleportInputHandler
{
	[Token(Token = "0x4000461")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[Tooltip("The button used to begin aiming for a teleport.")]
	public OVRInput.RawButton AimButton;

	[Token(Token = "0x4000462")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[Tooltip("The button used to trigger the teleport after aiming. It can be the same button as the AimButton, however you cannot abort a teleport if it is.")]
	public OVRInput.RawButton TeleportButton;

	[Token(Token = "0x4000463")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[Tooltip("When true, the system will not use the PreTeleport intention which will allow a teleport to occur on a button downpress. When false, the button downpress will trigger the PreTeleport intention and the Teleport intention when the button is released.")]
	public bool FastTeleport;

	[Token(Token = "0x17000050")]
	public Transform Pointer
	{
		[Token(Token = "0x6000624")]
		[Address(RVA = "0xEBB174", Offset = "0xEBB174", VA = "0xEBB174")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x6000625")]
		[Address(RVA = "0xEBB17C", Offset = "0xEBB17C", VA = "0xEBB17C")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x6000626")]
	[Address(RVA = "0xEBB184", Offset = "0xEBB184", VA = "0xEBB184", Slot = "8")]
	public override LocomotionTeleport.TeleportIntentions GetIntention()
	{
		return default(LocomotionTeleport.TeleportIntentions);
	}

	[Token(Token = "0x6000627")]
	[Address(RVA = "0xEBB2B0", Offset = "0xEBB2B0", VA = "0xEBB2B0", Slot = "9")]
	public override void GetAimData(out Ray aimRay)
	{
	}

	[Token(Token = "0x6000628")]
	[Address(RVA = "0xEBB364", Offset = "0xEBB364", VA = "0xEBB364")]
	public TeleportInputHandlerHMD()
	{
	}
}
[Token(Token = "0x20000C1")]
public class TeleportInputHandlerTouch : TeleportInputHandlerHMD
{
	[Token(Token = "0x20000C2")]
	public enum InputModes
	{
		[Token(Token = "0x400046E")]
		CapacitiveButtonForAimAndTeleport,
		[Token(Token = "0x400046F")]
		SeparateButtonsForAimAndTeleport,
		[Token(Token = "0x4000470")]
		ThumbstickTeleport,
		[Token(Token = "0x4000471")]
		ThumbstickTeleportForwardBackOnly
	}

	[Token(Token = "0x20000C3")]
	public enum AimCapTouchButtons
	{
		[Token(Token = "0x4000473")]
		A,
		[Token(Token = "0x4000474")]
		B,
		[Token(Token = "0x4000475")]
		LeftTrigger,
		[Token(Token = "0x4000476")]
		LeftThumbstick,
		[Token(Token = "0x4000477")]
		RightTrigger,
		[Token(Token = "0x4000478")]
		RightThumbstick,
		[Token(Token = "0x4000479")]
		X,
		[Token(Token = "0x400047A")]
		Y
	}

	[Token(Token = "0x4000464")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Transform LeftHand;

	[Token(Token = "0x4000465")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Transform RightHand;

	[Token(Token = "0x4000466")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[Tooltip("CapacitiveButtonForAimAndTeleport=Activate aiming via cap touch detection, press the same button to teleport.\nSeparateButtonsForAimAndTeleport=Use one button to begin aiming, and another to trigger the teleport.\nThumbstickTeleport=Push a thumbstick to begin aiming, release to teleport.")]
	public InputModes InputMode;

	[Token(Token = "0x4000467")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private readonly OVRInput.RawButton[] _rawButtons;

	[Token(Token = "0x4000468")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private readonly OVRInput.RawTouch[] _rawTouch;

	[Token(Token = "0x4000469")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[Tooltip("Select the controller to be used for aiming. Supports LTouch, RTouch, or Touch for either.")]
	public OVRInput.Controller AimingController;

	[Token(Token = "0x400046A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private OVRInput.Controller InitiatingController;

	[Token(Token = "0x400046B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[Tooltip("Select the button to use for triggering aim and teleport when InputMode==CapacitiveButtonForAimAndTeleport")]
	public AimCapTouchButtons CapacitiveAimAndTeleportButton;

	[Token(Token = "0x400046C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	[Tooltip("The thumbstick magnitude required to trigger aiming and teleports when InputMode==InputModes.ThumbstickTeleport")]
	public float ThumbstickTeleportThreshold;

	[Token(Token = "0x6000629")]
	[Address(RVA = "0xEBB368", Offset = "0xEBB368", VA = "0xEBB368")]
	private void Start()
	{
	}

	[Token(Token = "0x600062A")]
	[Address(RVA = "0xEBB36C", Offset = "0xEBB36C", VA = "0xEBB36C", Slot = "8")]
	public override LocomotionTeleport.TeleportIntentions GetIntention()
	{
		return default(LocomotionTeleport.TeleportIntentions);
	}

	[Token(Token = "0x600062B")]
	[Address(RVA = "0xEBB7A0", Offset = "0xEBB7A0", VA = "0xEBB7A0", Slot = "9")]
	public override void GetAimData(out Ray aimRay)
	{
	}

	[Token(Token = "0x600062C")]
	[Address(RVA = "0xEBB85C", Offset = "0xEBB85C", VA = "0xEBB85C")]
	public TeleportInputHandlerTouch()
	{
	}
}
[Token(Token = "0x20000C4")]
public abstract class TeleportOrientationHandler : TeleportSupport
{
	[Token(Token = "0x20000C5")]
	public enum OrientationModes
	{
		[Token(Token = "0x400047F")]
		HeadRelative,
		[Token(Token = "0x4000480")]
		ForwardFacing
	}

	[Token(Token = "0x20000C6")]
	[CompilerGenerated]
	private sealed class <UpdateOrientationCoroutine>d__7 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000481")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000482")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000483")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportOrientationHandler <>4__this;

		[Token(Token = "0x17000051")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000639")]
			[Address(RVA = "0xEBBD0C", Offset = "0xEBBD0C", VA = "0xEBBD0C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000052")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600063B")]
			[Address(RVA = "0xEBBD54", Offset = "0xEBBD54", VA = "0xEBBD54", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000636")]
		[Address(RVA = "0xEBBB1C", Offset = "0xEBBB1C", VA = "0xEBBB1C")]
		[DebuggerHidden]
		public <UpdateOrientationCoroutine>d__7(int <>1__state)
		{
		}

		[Token(Token = "0x6000637")]
		[Address(RVA = "0xEBBC5C", Offset = "0xEBBC5C", VA = "0xEBBC5C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000638")]
		[Address(RVA = "0xEBBC60", Offset = "0xEBBC60", VA = "0xEBBC60", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600063A")]
		[Address(RVA = "0xEBBD14", Offset = "0xEBBD14", VA = "0xEBBD14", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400047B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private readonly Action _updateOrientationAction;

	[Token(Token = "0x400047C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private readonly Action<LocomotionTeleport.AimData> _updateAimDataAction;

	[Token(Token = "0x400047D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	protected LocomotionTeleport.AimData AimData;

	[Token(Token = "0x600062D")]
	[Address(RVA = "0xEBB94C", Offset = "0xEBB94C", VA = "0xEBB94C")]
	protected TeleportOrientationHandler()
	{
	}

	[Token(Token = "0x600062E")]
	[Address(RVA = "0xEBBA34", Offset = "0xEBBA34", VA = "0xEBBA34")]
	private void UpdateAimData(LocomotionTeleport.AimData aimData)
	{
	}

	[Token(Token = "0x600062F")]
	[Address(RVA = "0xEBBA3C", Offset = "0xEBBA3C", VA = "0xEBBA3C", Slot = "6")]
	protected override void AddEventHandlers()
	{
	}

	[Token(Token = "0x6000630")]
	[Address(RVA = "0xEBBA74", Offset = "0xEBBA74", VA = "0xEBBA74", Slot = "7")]
	protected override void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x6000631")]
	[Address(RVA = "0xEBBAA8", Offset = "0xEBBAA8", VA = "0xEBBAA8")]
	[IteratorStateMachine(typeof(<UpdateOrientationCoroutine>d__7))]
	private IEnumerator UpdateOrientationCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000632")]
	protected abstract void InitializeTeleportDestination();

	[Token(Token = "0x6000633")]
	protected abstract void UpdateTeleportDestination();

	[Token(Token = "0x6000634")]
	[Address(RVA = "0xEBBB44", Offset = "0xEBBB44", VA = "0xEBBB44")]
	protected Quaternion GetLandingOrientation(OrientationModes mode, Quaternion rotation)
	{
		return default(Quaternion);
	}
}
[Token(Token = "0x20000C7")]
public class TeleportOrientationHandler360 : TeleportOrientationHandler
{
	[Token(Token = "0x600063C")]
	[Address(RVA = "0xEBBD5C", Offset = "0xEBBD5C", VA = "0xEBBD5C", Slot = "8")]
	protected override void InitializeTeleportDestination()
	{
	}

	[Token(Token = "0x600063D")]
	[Address(RVA = "0xEBBD60", Offset = "0xEBBD60", VA = "0xEBBD60", Slot = "9")]
	protected override void UpdateTeleportDestination()
	{
	}

	[Token(Token = "0x600063E")]
	[Address(RVA = "0xEBBE08", Offset = "0xEBBE08", VA = "0xEBBE08")]
	public TeleportOrientationHandler360()
	{
	}
}
[Token(Token = "0x20000C8")]
public class TeleportOrientationHandlerHMD : TeleportOrientationHandler
{
	[Token(Token = "0x4000484")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[Tooltip("HeadRelative=Character will orient to match the arrow. ForwardFacing=When user orients to match the arrow, they will be facing the sensors.")]
	public OrientationModes OrientationMode;

	[Token(Token = "0x4000485")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[Tooltip("Should the destination orientation be updated during the aim state in addition to the PreTeleport state?")]
	public bool UpdateOrientationDuringAim;

	[Token(Token = "0x4000486")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[Tooltip("How far from the destination must the HMD be pointing before using it for orientation")]
	public float AimDistanceThreshold;

	[Token(Token = "0x4000487")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[Tooltip("How far from the destination must the HMD be pointing before rejecting the teleport")]
	public float AimDistanceMaxRange;

	[Token(Token = "0x4000488")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Quaternion _initialRotation;

	[Token(Token = "0x600063F")]
	[Address(RVA = "0xEBBE0C", Offset = "0xEBBE0C", VA = "0xEBBE0C", Slot = "8")]
	protected override void InitializeTeleportDestination()
	{
	}

	[Token(Token = "0x6000640")]
	[Address(RVA = "0xEBBE5C", Offset = "0xEBBE5C", VA = "0xEBBE5C", Slot = "9")]
	protected override void UpdateTeleportDestination()
	{
	}

	[Token(Token = "0x6000641")]
	[Address(RVA = "0xEBC320", Offset = "0xEBC320", VA = "0xEBC320")]
	public TeleportOrientationHandlerHMD()
	{
	}
}
[Token(Token = "0x20000C9")]
public class TeleportOrientationHandlerThumbstick : TeleportOrientationHandler
{
	[Token(Token = "0x4000489")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[Tooltip("HeadRelative=Character will orient to match the arrow. ForwardFacing=When user orients to match the arrow, they will be facing the sensors.")]
	public OrientationModes OrientationMode;

	[Token(Token = "0x400048A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[Tooltip("Which thumbstick is to be used for adjusting the teleport orientation. Supports LTouch, RTouch, or Touch for either.")]
	public OVRInput.Controller Thumbstick;

	[Token(Token = "0x400048B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[Tooltip("The orientation will only change if the thumbstick magnitude is above this value. This will usually be larger than the TeleportInputHandlerTouch.ThumbstickTeleportThreshold.")]
	public float RotateStickThreshold;

	[Token(Token = "0x400048C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private Quaternion _initialRotation;

	[Token(Token = "0x400048D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private Quaternion _currentRotation;

	[Token(Token = "0x400048E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private Vector2 _lastValidDirection;

	[Token(Token = "0x6000642")]
	[Address(RVA = "0xEBC324", Offset = "0xEBC324", VA = "0xEBC324", Slot = "8")]
	protected override void InitializeTeleportDestination()
	{
	}

	[Token(Token = "0x6000643")]
	[Address(RVA = "0xEBC358", Offset = "0xEBC358", VA = "0xEBC358", Slot = "9")]
	protected override void UpdateTeleportDestination()
	{
	}

	[Token(Token = "0x6000644")]
	[Address(RVA = "0xEBC854", Offset = "0xEBC854", VA = "0xEBC854")]
	public TeleportOrientationHandlerThumbstick()
	{
	}
}
[Token(Token = "0x20000CA")]
public class TeleportPoint : MonoBehaviour
{
	[Token(Token = "0x400048F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float dimmingSpeed;

	[Token(Token = "0x4000490")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float fullIntensity;

	[Token(Token = "0x4000491")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float lowIntensity;

	[Token(Token = "0x4000492")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform destTransform;

	[Token(Token = "0x4000493")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float lastLookAtTime;

	[Token(Token = "0x6000645")]
	[Address(RVA = "0xEBC864", Offset = "0xEBC864", VA = "0xEBC864")]
	private void Start()
	{
	}

	[Token(Token = "0x6000646")]
	[Address(RVA = "0xEBC868", Offset = "0xEBC868", VA = "0xEBC868")]
	public Transform GetDestTransform()
	{
		return null;
	}

	[Token(Token = "0x6000647")]
	[Address(RVA = "0xEBC870", Offset = "0xEBC870", VA = "0xEBC870")]
	private void Update()
	{
	}

	[Token(Token = "0x6000648")]
	[Address(RVA = "0xEBC95C", Offset = "0xEBC95C", VA = "0xEBC95C")]
	public void OnLookAt()
	{
	}

	[Token(Token = "0x6000649")]
	[Address(RVA = "0xEBC978", Offset = "0xEBC978", VA = "0xEBC978")]
	public TeleportPoint()
	{
	}
}
[Token(Token = "0x20000CB")]
public abstract class TeleportSupport : MonoBehaviour
{
	[Token(Token = "0x4000495")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool _eventsActive;

	[Token(Token = "0x17000053")]
	protected LocomotionTeleport LocomotionTeleport
	{
		[Token(Token = "0x600064A")]
		[Address(RVA = "0xEBC990", Offset = "0xEBC990", VA = "0xEBC990")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x600064B")]
		[Address(RVA = "0xEBC998", Offset = "0xEBC998", VA = "0xEBC998")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x600064C")]
	[Address(RVA = "0xEB9ECC", Offset = "0xEB9ECC", VA = "0xEB9ECC", Slot = "4")]
	protected virtual void OnEnable()
	{
	}

	[Token(Token = "0x600064D")]
	[Address(RVA = "0xEB9FDC", Offset = "0xEB9FDC", VA = "0xEB9FDC", Slot = "5")]
	protected virtual void OnDisable()
	{
	}

	[Token(Token = "0x600064E")]
	[Address(RVA = "0xEBC9A0", Offset = "0xEBC9A0", VA = "0xEBC9A0")]
	[Conditional("DEBUG_TELEPORT_EVENT_HANDLERS")]
	private void LogEventHandler(string msg)
	{
	}

	[Token(Token = "0x600064F")]
	[Address(RVA = "0xEBA60C", Offset = "0xEBA60C", VA = "0xEBA60C", Slot = "6")]
	protected virtual void AddEventHandlers()
	{
	}

	[Token(Token = "0x6000650")]
	[Address(RVA = "0xEBA660", Offset = "0xEBA660", VA = "0xEBA660", Slot = "7")]
	protected virtual void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x6000651")]
	[Address(RVA = "0xEBA00C", Offset = "0xEBA00C", VA = "0xEBA00C")]
	protected TeleportSupport()
	{
	}
}
[Token(Token = "0x20000CC")]
public abstract class TeleportTargetHandler : TeleportSupport
{
	[Token(Token = "0x20000CD")]
	[CompilerGenerated]
	private sealed class <TargetAimCoroutine>d__7 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400049B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400049C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400049D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportTargetHandler <>4__this;

		[Token(Token = "0x17000054")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600065D")]
			[Address(RVA = "0xEBD090", Offset = "0xEBD090", VA = "0xEBD090", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000055")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600065F")]
			[Address(RVA = "0xEBD0D8", Offset = "0xEBD0D8", VA = "0xEBD0D8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600065A")]
		[Address(RVA = "0xEBCC48", Offset = "0xEBCC48", VA = "0xEBCC48")]
		[DebuggerHidden]
		public <TargetAimCoroutine>d__7(int <>1__state)
		{
		}

		[Token(Token = "0x600065B")]
		[Address(RVA = "0xEBCDC4", Offset = "0xEBCDC4", VA = "0xEBCDC4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600065C")]
		[Address(RVA = "0xEBCDC8", Offset = "0xEBCDC8", VA = "0xEBCDC8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600065E")]
		[Address(RVA = "0xEBD098", Offset = "0xEBD098", VA = "0xEBD098", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000496")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[Tooltip("This bitmask controls which game object layers will be included in the targeting collision tests.")]
	public LayerMask AimCollisionLayerMask;

	[Token(Token = "0x4000497")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	protected readonly LocomotionTeleport.AimData AimData;

	[Token(Token = "0x4000498")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private readonly Action _startAimAction;

	[Token(Token = "0x4000499")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private readonly List<Vector3> _aimPoints;

	[Token(Token = "0x400049A")]
	private const float ERROR_MARGIN = 0.1f;

	[Token(Token = "0x6000652")]
	[Address(RVA = "0xEBCA70", Offset = "0xEBCA70", VA = "0xEBCA70")]
	protected TeleportTargetHandler()
	{
	}

	[Token(Token = "0x6000653")]
	[Address(RVA = "0xEBCB88", Offset = "0xEBCB88", VA = "0xEBCB88", Slot = "6")]
	protected override void AddEventHandlers()
	{
	}

	[Token(Token = "0x6000654")]
	[Address(RVA = "0xEBCBB0", Offset = "0xEBCBB0", VA = "0xEBCBB0", Slot = "7")]
	protected override void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x6000655")]
	[Address(RVA = "0xEBCBD4", Offset = "0xEBCBD4", VA = "0xEBCBD4")]
	[IteratorStateMachine(typeof(<TargetAimCoroutine>d__7))]
	private IEnumerator TargetAimCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000656")]
	[Address(RVA = "0xEBCC70", Offset = "0xEBCC70", VA = "0xEBCC70", Slot = "8")]
	protected virtual void ResetAimData()
	{
	}

	[Token(Token = "0x6000657")]
	protected abstract bool ConsiderTeleport(Vector3 start, ref Vector3 end);

	[Token(Token = "0x6000658")]
	[Address(RVA = "0xEBCC88", Offset = "0xEBCC88", VA = "0xEBCC88", Slot = "10")]
	public virtual Vector3? ConsiderDestination(Vector3 location)
	{
		return null;
	}
}
[Token(Token = "0x20000CE")]
public class TeleportTargetHandlerNavMesh : TeleportTargetHandler
{
	[Token(Token = "0x400049E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public int NavMeshAreaMask;

	[Token(Token = "0x400049F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private NavMeshPath _path;

	[Token(Token = "0x6000660")]
	[Address(RVA = "0xEBD0E0", Offset = "0xEBD0E0", VA = "0xEBD0E0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000661")]
	[Address(RVA = "0xEBD148", Offset = "0xEBD148", VA = "0xEBD148", Slot = "9")]
	protected override bool ConsiderTeleport(Vector3 start, ref Vector3 end)
	{
		return default(bool);
	}

	[Token(Token = "0x6000662")]
	[Address(RVA = "0xEBD2B0", Offset = "0xEBD2B0", VA = "0xEBD2B0", Slot = "10")]
	public override Vector3? ConsiderDestination(Vector3 location)
	{
		return null;
	}

	[Token(Token = "0x6000663")]
	[Address(RVA = "0xEBD39C", Offset = "0xEBD39C", VA = "0xEBD39C")]
	[Conditional("SHOW_PATH_RESULT")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x6000664")]
	[Address(RVA = "0xEBD3A0", Offset = "0xEBD3A0", VA = "0xEBD3A0")]
	public TeleportTargetHandlerNavMesh()
	{
	}
}
[Token(Token = "0x20000CF")]
public class TeleportTargetHandlerNode : TeleportTargetHandler
{
	[Token(Token = "0x40004A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[Tooltip("When checking line of sight to the destination, add this value to the vertical offset for targeting collision checks.")]
	public float LOSOffset;

	[Token(Token = "0x40004A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[Tooltip("Teleport logic will only work with TeleportPoint components that exist in the layers specified by this mask.")]
	public LayerMask TeleportLayerMask;

	[Token(Token = "0x6000665")]
	[Address(RVA = "0xEBD3AC", Offset = "0xEBD3AC", VA = "0xEBD3AC", Slot = "9")]
	protected override bool ConsiderTeleport(Vector3 start, ref Vector3 end)
	{
		return default(bool);
	}

	[Token(Token = "0x6000666")]
	[Address(RVA = "0xEBD5A4", Offset = "0xEBD5A4", VA = "0xEBD5A4")]
	public TeleportTargetHandlerNode()
	{
	}
}
[Token(Token = "0x20000D0")]
public class TeleportTargetHandlerPhysical : TeleportTargetHandler
{
	[Token(Token = "0x6000667")]
	[Address(RVA = "0xEBD5B0", Offset = "0xEBD5B0", VA = "0xEBD5B0", Slot = "9")]
	protected override bool ConsiderTeleport(Vector3 start, ref Vector3 end)
	{
		return default(bool);
	}

	[Token(Token = "0x6000668")]
	[Address(RVA = "0xEBD718", Offset = "0xEBD718", VA = "0xEBD718")]
	public TeleportTargetHandlerPhysical()
	{
	}
}
[Token(Token = "0x20000D1")]
public abstract class TeleportTransition : TeleportSupport
{
	[Token(Token = "0x6000669")]
	[Address(RVA = "0xEBD71C", Offset = "0xEBD71C", VA = "0xEBD71C", Slot = "6")]
	protected override void AddEventHandlers()
	{
	}

	[Token(Token = "0x600066A")]
	[Address(RVA = "0xEBD7A0", Offset = "0xEBD7A0", VA = "0xEBD7A0", Slot = "7")]
	protected override void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x600066B")]
	protected abstract void LocomotionTeleportOnEnterStateTeleporting();

	[Token(Token = "0x600066C")]
	[Address(RVA = "0xEBD820", Offset = "0xEBD820", VA = "0xEBD820")]
	protected TeleportTransition()
	{
	}
}
[Token(Token = "0x20000D2")]
public class TeleportTransitionBlink : TeleportTransition
{
	[Token(Token = "0x20000D3")]
	[CompilerGenerated]
	private sealed class <BlinkCoroutine>d__4 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40004A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40004A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40004A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportTransitionBlink <>4__this;

		[Token(Token = "0x40004A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <elapsedTime>5__2;

		[Token(Token = "0x40004A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <teleportTime>5__3;

		[Token(Token = "0x40004AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool <teleported>5__4;

		[Token(Token = "0x17000056")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000673")]
			[Address(RVA = "0xEBDB84", Offset = "0xEBDB84", VA = "0xEBDB84", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000057")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000675")]
			[Address(RVA = "0xEBDBCC", Offset = "0xEBDBCC", VA = "0xEBDBCC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000670")]
		[Address(RVA = "0xEBD8BC", Offset = "0xEBD8BC", VA = "0xEBD8BC")]
		[DebuggerHidden]
		public <BlinkCoroutine>d__4(int <>1__state)
		{
		}

		[Token(Token = "0x6000671")]
		[Address(RVA = "0xEBDA80", Offset = "0xEBDA80", VA = "0xEBDA80", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000672")]
		[Address(RVA = "0xEBDA84", Offset = "0xEBDA84", VA = "0xEBDA84", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000674")]
		[Address(RVA = "0xEBDB8C", Offset = "0xEBDB8C", VA = "0xEBDB8C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40004A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[Tooltip("How long the transition takes. Usually this is greater than Teleport Delay.")]
	[Range(0.01f, 2f)]
	public float TransitionDuration;

	[Token(Token = "0x40004A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[Range(0f, 1f)]
	[Tooltip("At what percentage of the elapsed transition time does the teleport occur?")]
	public float TeleportDelay;

	[Token(Token = "0x40004A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[Tooltip("Fade to black over the duration of the transition")]
	public AnimationCurve FadeLevels;

	[Token(Token = "0x600066D")]
	[Address(RVA = "0xEBD828", Offset = "0xEBD828", VA = "0xEBD828", Slot = "8")]
	protected override void LocomotionTeleportOnEnterStateTeleporting()
	{
	}

	[Token(Token = "0x600066E")]
	[Address(RVA = "0xEBD848", Offset = "0xEBD848", VA = "0xEBD848")]
	[IteratorStateMachine(typeof(<BlinkCoroutine>d__4))]
	protected IEnumerator BlinkCoroutine()
	{
		return null;
	}

	[Token(Token = "0x600066F")]
	[Address(RVA = "0xEBD8E4", Offset = "0xEBD8E4", VA = "0xEBD8E4")]
	public TeleportTransitionBlink()
	{
	}
}
[Token(Token = "0x20000D4")]
public class TeleportTransitionInstant : TeleportTransition
{
	[Token(Token = "0x6000676")]
	[Address(RVA = "0xEBDBD4", Offset = "0xEBDBD4", VA = "0xEBDBD4", Slot = "8")]
	protected override void LocomotionTeleportOnEnterStateTeleporting()
	{
	}

	[Token(Token = "0x6000677")]
	[Address(RVA = "0xEBDBEC", Offset = "0xEBDBEC", VA = "0xEBDBEC")]
	public TeleportTransitionInstant()
	{
	}
}
[Token(Token = "0x20000D5")]
public class TeleportTransitionWarp : TeleportTransition
{
	[Token(Token = "0x20000D6")]
	[CompilerGenerated]
	private sealed class <DoWarp>d__3 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40004AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40004AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40004AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportTransitionWarp <>4__this;

		[Token(Token = "0x40004B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Vector3 <startPosition>5__2;

		[Token(Token = "0x40004B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float <elapsedTime>5__3;

		[Token(Token = "0x17000058")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600067E")]
			[Address(RVA = "0xEBDE10", Offset = "0xEBDE10", VA = "0xEBDE10", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000059")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000680")]
			[Address(RVA = "0xEBDE58", Offset = "0xEBDE58", VA = "0xEBDE58", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600067B")]
		[Address(RVA = "0xEBDC88", Offset = "0xEBDC88", VA = "0xEBDC88")]
		[DebuggerHidden]
		public <DoWarp>d__3(int <>1__state)
		{
		}

		[Token(Token = "0x600067C")]
		[Address(RVA = "0xEBDCF8", Offset = "0xEBDCF8", VA = "0xEBDCF8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600067D")]
		[Address(RVA = "0xEBDCFC", Offset = "0xEBDCFC", VA = "0xEBDCFC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600067F")]
		[Address(RVA = "0xEBDE18", Offset = "0xEBDE18", VA = "0xEBDE18", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40004AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[Range(0.01f, 1f)]
	[Tooltip("How much time the warp transition takes to complete.")]
	public float TransitionDuration;

	[Token(Token = "0x40004AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[HideInInspector]
	public AnimationCurve PositionLerp;

	[Token(Token = "0x6000678")]
	[Address(RVA = "0xEBDBF4", Offset = "0xEBDBF4", VA = "0xEBDBF4", Slot = "8")]
	protected override void LocomotionTeleportOnEnterStateTeleporting()
	{
	}

	[Token(Token = "0x6000679")]
	[Address(RVA = "0xEBDC14", Offset = "0xEBDC14", VA = "0xEBDC14")]
	[IteratorStateMachine(typeof(<DoWarp>d__3))]
	private IEnumerator DoWarp()
	{
		return null;
	}

	[Token(Token = "0x600067A")]
	[Address(RVA = "0xEBDCB0", Offset = "0xEBDCB0", VA = "0xEBDCB0")]
	public TeleportTransitionWarp()
	{
	}
}
[Token(Token = "0x20000D7")]
public static class NativeVideoPlayer
{
	[Token(Token = "0x20000D8")]
	public enum PlabackState
	{
		[Token(Token = "0x40004CA")]
		Idle = 1,
		[Token(Token = "0x40004CB")]
		Preparing,
		[Token(Token = "0x40004CC")]
		Buffering,
		[Token(Token = "0x40004CD")]
		Ready,
		[Token(Token = "0x40004CE")]
		Ended
	}

	[Token(Token = "0x20000D9")]
	public enum StereoMode
	{
		[Token(Token = "0x40004D0")]
		Unknown = -1,
		[Token(Token = "0x40004D1")]
		Mono,
		[Token(Token = "0x40004D2")]
		TopBottom,
		[Token(Token = "0x40004D3")]
		LeftRight,
		[Token(Token = "0x40004D4")]
		Mesh
	}

	[Token(Token = "0x40004B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static IntPtr? _Activity;

	[Token(Token = "0x40004B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static IntPtr? _VideoPlayerClass;

	[Token(Token = "0x40004B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private static readonly jvalue[] EmptyParams;

	[Token(Token = "0x40004B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private static IntPtr getIsPlayingMethodId;

	[Token(Token = "0x40004B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private static IntPtr getCurrentPlaybackStateMethodId;

	[Token(Token = "0x40004B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private static IntPtr getDurationMethodId;

	[Token(Token = "0x40004B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private static IntPtr getStereoModeMethodId;

	[Token(Token = "0x40004B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private static IntPtr getWidthMethodId;

	[Token(Token = "0x40004BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private static IntPtr getHeightMethodId;

	[Token(Token = "0x40004BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private static IntPtr getPlaybackPositionMethodId;

	[Token(Token = "0x40004BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private static IntPtr setPlaybackPositionMethodId;

	[Token(Token = "0x40004BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private static jvalue[] setPlaybackPositionParams;

	[Token(Token = "0x40004BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private static IntPtr playVideoMethodId;

	[Token(Token = "0x40004BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private static jvalue[] playVideoParams;

	[Token(Token = "0x40004C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private static IntPtr stopMethodId;

	[Token(Token = "0x40004C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private static IntPtr resumeMethodId;

	[Token(Token = "0x40004C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private static IntPtr pauseMethodId;

	[Token(Token = "0x40004C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private static IntPtr setPlaybackSpeedMethodId;

	[Token(Token = "0x40004C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private static jvalue[] setPlaybackSpeedParams;

	[Token(Token = "0x40004C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private static IntPtr setLoopingMethodId;

	[Token(Token = "0x40004C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private static jvalue[] setLoopingParams;

	[Token(Token = "0x40004C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private static IntPtr setListenerRotationQuaternionMethodId;

	[Token(Token = "0x40004C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private static jvalue[] setListenerRotationQuaternionParams;

	[Token(Token = "0x1700005A")]
	private static IntPtr VideoPlayerClass
	{
		[Token(Token = "0x6000681")]
		[Address(RVA = "0xEBDE60", Offset = "0xEBDE60", VA = "0xEBDE60")]
		get
		{
			return default(IntPtr);
		}
	}

	[Token(Token = "0x1700005B")]
	private static IntPtr Activity
	{
		[Token(Token = "0x6000682")]
		[Address(RVA = "0xEBE11C", Offset = "0xEBE11C", VA = "0xEBE11C")]
		get
		{
			return default(IntPtr);
		}
	}

	[Token(Token = "0x1700005C")]
	public static bool IsAvailable
	{
		[Token(Token = "0x6000683")]
		[Address(RVA = "0xEBE388", Offset = "0xEBE388", VA = "0xEBE388")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700005D")]
	public static bool IsPlaying
	{
		[Token(Token = "0x6000684")]
		[Address(RVA = "0xEBE3EC", Offset = "0xEBE3EC", VA = "0xEBE3EC")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700005E")]
	public static PlabackState CurrentPlaybackState
	{
		[Token(Token = "0x6000685")]
		[Address(RVA = "0xEBE4E0", Offset = "0xEBE4E0", VA = "0xEBE4E0")]
		get
		{
			return default(PlabackState);
		}
	}

	[Token(Token = "0x1700005F")]
	public static long Duration
	{
		[Token(Token = "0x6000686")]
		[Address(RVA = "0xEBE5D8", Offset = "0xEBE5D8", VA = "0xEBE5D8")]
		get
		{
			return default(long);
		}
	}

	[Token(Token = "0x17000060")]
	public static StereoMode VideoStereoMode
	{
		[Token(Token = "0x6000687")]
		[Address(RVA = "0xEBE6D0", Offset = "0xEBE6D0", VA = "0xEBE6D0")]
		get
		{
			return default(StereoMode);
		}
	}

	[Token(Token = "0x17000061")]
	public static int VideoWidth
	{
		[Token(Token = "0x6000688")]
		[Address(RVA = "0xEBE7C8", Offset = "0xEBE7C8", VA = "0xEBE7C8")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000062")]
	public static int VideoHeight
	{
		[Token(Token = "0x6000689")]
		[Address(RVA = "0xEBE8C0", Offset = "0xEBE8C0", VA = "0xEBE8C0")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000063")]
	public static long PlaybackPosition
	{
		[Token(Token = "0x600068A")]
		[Address(RVA = "0xEBE9B8", Offset = "0xEBE9B8", VA = "0xEBE9B8")]
		get
		{
			return default(long);
		}
		[Token(Token = "0x600068B")]
		[Address(RVA = "0xEBEAB0", Offset = "0xEBEAB0", VA = "0xEBEAB0")]
		set
		{
		}
	}

	[Token(Token = "0x600068C")]
	[Address(RVA = "0xEBEC08", Offset = "0xEBEC08", VA = "0xEBEC08")]
	public static void PlayVideo(string path, string drmLicenseUrl, IntPtr surfaceObj)
	{
	}

	[Token(Token = "0x600068D")]
	[Address(RVA = "0xEBEE10", Offset = "0xEBEE10", VA = "0xEBEE10")]
	public static void Stop()
	{
	}

	[Token(Token = "0x600068E")]
	[Address(RVA = "0xEBEF08", Offset = "0xEBEF08", VA = "0xEBEF08")]
	public static void Play()
	{
	}

	[Token(Token = "0x600068F")]
	[Address(RVA = "0xEBF000", Offset = "0xEBF000", VA = "0xEBF000")]
	public static void Pause()
	{
	}

	[Token(Token = "0x6000690")]
	[Address(RVA = "0xEBF0F8", Offset = "0xEBF0F8", VA = "0xEBF0F8")]
	public static void SetPlaybackSpeed(float speed)
	{
	}

	[Token(Token = "0x6000691")]
	[Address(RVA = "0xEBF258", Offset = "0xEBF258", VA = "0xEBF258")]
	public static void SetLooping(bool looping)
	{
	}

	[Token(Token = "0x6000692")]
	[Address(RVA = "0xEBF3B4", Offset = "0xEBF3B4", VA = "0xEBF3B4")]
	public static void SetListenerRotation(Quaternion rotation)
	{
	}
}
[Token(Token = "0x20000DA")]
public class ButtonDownListener : MonoBehaviour, IPointerDownHandler, IEventSystemHandler
{
	[Token(Token = "0x1400000F")]
	public event Action onButtonDown
	{
		[Token(Token = "0x6000694")]
		[Address(RVA = "0xEBF5F8", Offset = "0xEBF5F8", VA = "0xEBF5F8")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000695")]
		[Address(RVA = "0xEBF694", Offset = "0xEBF694", VA = "0xEBF694")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x6000696")]
	[Address(RVA = "0xEBF730", Offset = "0xEBF730", VA = "0xEBF730", Slot = "4")]
	public void OnPointerDown(PointerEventData eventData)
	{
	}

	[Token(Token = "0x6000697")]
	[Address(RVA = "0xEBF74C", Offset = "0xEBF74C", VA = "0xEBF74C")]
	public ButtonDownListener()
	{
	}
}
[Token(Token = "0x20000DB")]
public class MediaPlayerImage : Image
{
	[Token(Token = "0x20000DC")]
	public enum ButtonType
	{
		[Token(Token = "0x40004D8")]
		Play,
		[Token(Token = "0x40004D9")]
		Pause,
		[Token(Token = "0x40004DA")]
		FastForward,
		[Token(Token = "0x40004DB")]
		Rewind,
		[Token(Token = "0x40004DC")]
		SkipForward,
		[Token(Token = "0x40004DD")]
		SkipBack,
		[Token(Token = "0x40004DE")]
		Stop
	}

	[Token(Token = "0x40004D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	[SerializeField]
	private ButtonType m_ButtonType;

	[Token(Token = "0x17000064")]
	public ButtonType buttonType
	{
		[Token(Token = "0x6000698")]
		[Address(RVA = "0xEBF754", Offset = "0xEBF754", VA = "0xEBF754")]
		get
		{
			return default(ButtonType);
		}
		[Token(Token = "0x6000699")]
		[Address(RVA = "0xEBF75C", Offset = "0xEBF75C", VA = "0xEBF75C")]
		set
		{
		}
	}

	[Token(Token = "0x600069A")]
	[Address(RVA = "0xEBF780", Offset = "0xEBF780", VA = "0xEBF780", Slot = "44")]
	protected override void OnPopulateMesh(VertexHelper toFill)
	{
	}

	[Token(Token = "0x600069B")]
	[Address(RVA = "0xEC05D4", Offset = "0xEC05D4", VA = "0xEC05D4")]
	public MediaPlayerImage()
	{
	}
}
[Token(Token = "0x20000DD")]
public class MoviePlayerSample : MonoBehaviour
{
	[Token(Token = "0x20000DE")]
	public enum VideoShape
	{
		[Token(Token = "0x40004F3")]
		_360,
		[Token(Token = "0x40004F4")]
		_180,
		[Token(Token = "0x40004F5")]
		Quad
	}

	[Token(Token = "0x20000DF")]
	public enum VideoStereo
	{
		[Token(Token = "0x40004F7")]
		Mono,
		[Token(Token = "0x40004F8")]
		TopBottom,
		[Token(Token = "0x40004F9")]
		LeftRight,
		[Token(Token = "0x40004FA")]
		BottomTop
	}

	[Token(Token = "0x20000E0")]
	[CompilerGenerated]
	private sealed class <Start>d__33 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40004FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40004FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40004FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MoviePlayerSample <>4__this;

		[Token(Token = "0x17000068")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60006B2")]
			[Address(RVA = "0xEF926C", Offset = "0xEF926C", VA = "0xEF926C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000069")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60006B4")]
			[Address(RVA = "0xEF92B4", Offset = "0xEF92B4", VA = "0xEF92B4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60006AF")]
		[Address(RVA = "0xEF8414", Offset = "0xEF8414", VA = "0xEF8414")]
		[DebuggerHidden]
		public <Start>d__33(int <>1__state)
		{
		}

		[Token(Token = "0x60006B0")]
		[Address(RVA = "0xEF90C0", Offset = "0xEF90C0", VA = "0xEF90C0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60006B1")]
		[Address(RVA = "0xEF90C4", Offset = "0xEF90C4", VA = "0xEF90C4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60006B3")]
		[Address(RVA = "0xEF9274", Offset = "0xEF9274", VA = "0xEF9274", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40004DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool videoPausedBeforeAppPause;

	[Token(Token = "0x40004E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private VideoPlayer videoPlayer;

	[Token(Token = "0x40004E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private OVROverlay overlay;

	[Token(Token = "0x40004E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Renderer mediaRenderer;

	[Token(Token = "0x40004E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private RenderTexture copyTexture;

	[Token(Token = "0x40004E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Material externalTex2DMaterial;

	[Token(Token = "0x40004E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public string MovieName;

	[Token(Token = "0x40004E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public string DrmLicenseUrl;

	[Token(Token = "0x40004EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public bool LoopVideo;

	[Token(Token = "0x40004EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public VideoShape Shape;

	[Token(Token = "0x40004EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public VideoStereo Stereo;

	[Token(Token = "0x40004ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public bool AutoDetectStereoLayout;

	[Token(Token = "0x40004EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7D")]
	public bool DisplayMono;

	[Token(Token = "0x40004EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private VideoShape _LastShape;

	[Token(Token = "0x40004F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private VideoStereo _LastStereo;

	[Token(Token = "0x40004F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private bool _LastDisplayMono;

	[Token(Token = "0x17000065")]
	public bool IsPlaying
	{
		[Token(Token = "0x600069C")]
		[Address(RVA = "0xEF7D78", Offset = "0xEF7D78", VA = "0xEF7D78")]
		[CompilerGenerated]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600069D")]
		[Address(RVA = "0xEF7D80", Offset = "0xEF7D80", VA = "0xEF7D80")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x17000066")]
	public long Duration
	{
		[Token(Token = "0x600069E")]
		[Address(RVA = "0xEF7D8C", Offset = "0xEF7D8C", VA = "0xEF7D8C")]
		[CompilerGenerated]
		get
		{
			return default(long);
		}
		[Token(Token = "0x600069F")]
		[Address(RVA = "0xEF7D94", Offset = "0xEF7D94", VA = "0xEF7D94")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x17000067")]
	public long PlaybackPosition
	{
		[Token(Token = "0x60006A0")]
		[Address(RVA = "0xEF7D9C", Offset = "0xEF7D9C", VA = "0xEF7D9C")]
		[CompilerGenerated]
		get
		{
			return default(long);
		}
		[Token(Token = "0x60006A1")]
		[Address(RVA = "0xEF7DA4", Offset = "0xEF7DA4", VA = "0xEF7DA4")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x60006A2")]
	[Address(RVA = "0xEF7DAC", Offset = "0xEF7DAC", VA = "0xEF7DAC")]
	private void Awake()
	{
	}

	[Token(Token = "0x60006A3")]
	[Address(RVA = "0xEF8034", Offset = "0xEF8034", VA = "0xEF8034")]
	private bool IsLocalVideo(string movieName)
	{
		return default(bool);
	}

	[Token(Token = "0x60006A4")]
	[Address(RVA = "0xEF8094", Offset = "0xEF8094", VA = "0xEF8094")]
	private void UpdateShapeAndStereo()
	{
	}

	[Token(Token = "0x60006A5")]
	[Address(RVA = "0xEF83A0", Offset = "0xEF83A0", VA = "0xEF83A0")]
	[IteratorStateMachine(typeof(<Start>d__33))]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x60006A6")]
	[Address(RVA = "0xEF843C", Offset = "0xEF843C", VA = "0xEF843C")]
	public void Play(string moviePath, string drmLicencesUrl)
	{
	}

	[Token(Token = "0x60006A7")]
	[Address(RVA = "0xEF8704", Offset = "0xEF8704", VA = "0xEF8704")]
	public void Play()
	{
	}

	[Token(Token = "0x60006A8")]
	[Address(RVA = "0xEF878C", Offset = "0xEF878C", VA = "0xEF878C")]
	public void Pause()
	{
	}

	[Token(Token = "0x60006A9")]
	[Address(RVA = "0xEF8810", Offset = "0xEF8810", VA = "0xEF8810")]
	public void SeekTo(long position)
	{
	}

	[Token(Token = "0x60006AA")]
	[Address(RVA = "0xEF8900", Offset = "0xEF8900", VA = "0xEF8900")]
	private void Update()
	{
	}

	[Token(Token = "0x60006AB")]
	[Address(RVA = "0xEF8EAC", Offset = "0xEF8EAC", VA = "0xEF8EAC")]
	public void SetPlaybackSpeed(float speed)
	{
	}

	[Token(Token = "0x60006AC")]
	[Address(RVA = "0xEF8F4C", Offset = "0xEF8F4C", VA = "0xEF8F4C")]
	public void Stop()
	{
	}

	[Token(Token = "0x60006AD")]
	[Address(RVA = "0xEF8FD0", Offset = "0xEF8FD0", VA = "0xEF8FD0")]
	private void OnApplicationPause(bool appWasPaused)
	{
	}

	[Token(Token = "0x60006AE")]
	[Address(RVA = "0xEF90B0", Offset = "0xEF90B0", VA = "0xEF90B0")]
	public MoviePlayerSample()
	{
	}
}
[Token(Token = "0x20000E2")]
public class MoviePlayerSampleControls : MonoBehaviour
{
	[Token(Token = "0x20000E3")]
	private enum PlaybackState
	{
		[Token(Token = "0x4000517")]
		Playing,
		[Token(Token = "0x4000518")]
		Paused,
		[Token(Token = "0x4000519")]
		Rewinding,
		[Token(Token = "0x400051A")]
		FastForwarding
	}

	[Token(Token = "0x4000501")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public MoviePlayerSample Player;

	[Token(Token = "0x4000502")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public OVRInputModule InputModule;

	[Token(Token = "0x4000503")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OVRGazePointer GazePointer;

	[Token(Token = "0x4000504")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject LeftHand;

	[Token(Token = "0x4000505")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject RightHand;

	[Token(Token = "0x4000506")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Canvas Canvas;

	[Token(Token = "0x4000507")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public ButtonDownListener PlayPause;

	[Token(Token = "0x4000508")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public MediaPlayerImage PlayPauseImage;

	[Token(Token = "0x4000509")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Slider ProgressBar;

	[Token(Token = "0x400050A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public ButtonDownListener FastForward;

	[Token(Token = "0x400050B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public MediaPlayerImage FastForwardImage;

	[Token(Token = "0x400050C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public ButtonDownListener Rewind;

	[Token(Token = "0x400050D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public MediaPlayerImage RewindImage;

	[Token(Token = "0x400050E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public float TimeoutTime;

	[Token(Token = "0x400050F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private bool _isVisible;

	[Token(Token = "0x4000510")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private float _lastButtonTime;

	[Token(Token = "0x4000511")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private bool _didSeek;

	[Token(Token = "0x4000512")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private long _seekPreviousPosition;

	[Token(Token = "0x4000513")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private long _rewindStartPosition;

	[Token(Token = "0x4000514")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private float _rewindStartTime;

	[Token(Token = "0x4000515")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	private PlaybackState _state;

	[Token(Token = "0x60006B7")]
	[Address(RVA = "0xEF9398", Offset = "0xEF9398", VA = "0xEF9398")]
	private void Start()
	{
	}

	[Token(Token = "0x60006B8")]
	[Address(RVA = "0xEF9688", Offset = "0xEF9688", VA = "0xEF9688")]
	private void OnPlayPauseClicked()
	{
	}

	[Token(Token = "0x60006B9")]
	[Address(RVA = "0xEF97A8", Offset = "0xEF97A8", VA = "0xEF97A8")]
	private void OnFastForwardClicked()
	{
	}

	[Token(Token = "0x60006BA")]
	[Address(RVA = "0xEF98A4", Offset = "0xEF98A4", VA = "0xEF98A4")]
	private void OnRewindClicked()
	{
	}

	[Token(Token = "0x60006BB")]
	[Address(RVA = "0xEF9978", Offset = "0xEF9978", VA = "0xEF9978")]
	private void OnSeekBarMoved(float value)
	{
	}

	[Token(Token = "0x60006BC")]
	[Address(RVA = "0xEF9878", Offset = "0xEF9878", VA = "0xEF9878")]
	private void Seek(long pos)
	{
	}

	[Token(Token = "0x60006BD")]
	[Address(RVA = "0xEF99D8", Offset = "0xEF99D8", VA = "0xEF99D8")]
	private void Update()
	{
	}

	[Token(Token = "0x60006BE")]
	[Address(RVA = "0xEF9588", Offset = "0xEF9588", VA = "0xEF9588")]
	private void SetVisible(bool visible)
	{
	}

	[Token(Token = "0x60006BF")]
	[Address(RVA = "0xEF9D08", Offset = "0xEF9D08", VA = "0xEF9D08")]
	public MoviePlayerSampleControls()
	{
	}
}
[Token(Token = "0x20000E4")]
public static class VectorUtil
{
	[Token(Token = "0x60006C0")]
	[Address(RVA = "0xEF8E34", Offset = "0xEF8E34", VA = "0xEF8E34")]
	public static Vector4 ToVector(this Rect rect)
	{
		return default(Vector4);
	}
}
[Token(Token = "0x20000E5")]
public class AppDeeplinkUI : MonoBehaviour
{
	[Token(Token = "0x400051B")]
	private const ulong UNITY_COMPANION_APP_ID = 3535750239844224uL;

	[Token(Token = "0x400051C")]
	private const ulong UNREAL_COMPANION_APP_ID = 4055411724486843uL;

	[Token(Token = "0x400051D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private RectTransform deeplinkAppId;

	[Token(Token = "0x400051E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private RectTransform deeplinkMessage;

	[Token(Token = "0x400051F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private RectTransform uiLaunchType;

	[Token(Token = "0x4000520")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private RectTransform uiLaunchSource;

	[Token(Token = "0x4000521")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private RectTransform uiDeepLinkMessage;

	[Token(Token = "0x4000522")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool inMenu;

	[Token(Token = "0x60006C1")]
	[Address(RVA = "0xEF9D18", Offset = "0xEF9D18", VA = "0xEF9D18")]
	private void Start()
	{
	}

	[Token(Token = "0x60006C2")]
	[Address(RVA = "0xEFA36C", Offset = "0xEFA36C", VA = "0xEFA36C")]
	private void Update()
	{
	}

	[Token(Token = "0x60006C3")]
	[Address(RVA = "0xEFA5C8", Offset = "0xEFA5C8", VA = "0xEFA5C8")]
	private void LaunchUnrealDeeplinkSample()
	{
	}

	[Token(Token = "0x60006C4")]
	[Address(RVA = "0xEFA72C", Offset = "0xEFA72C", VA = "0xEFA72C")]
	private void LaunchSelf()
	{
	}

	[Token(Token = "0x60006C5")]
	[Address(RVA = "0xEFA894", Offset = "0xEFA894", VA = "0xEFA894")]
	private void LaunchOtherApp()
	{
	}

	[Token(Token = "0x60006C6")]
	[Address(RVA = "0xEFAA18", Offset = "0xEFAA18", VA = "0xEFAA18")]
	public AppDeeplinkUI()
	{
	}
}
[Token(Token = "0x20000E6")]
public class CustomDebugUI : MonoBehaviour
{
	[Token(Token = "0x4000523")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private RectTransform textPrefab;

	[Token(Token = "0x4000524")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static CustomDebugUI instance;

	[Token(Token = "0x4000525")]
	private const BindingFlags privateFlags = BindingFlags.Instance | BindingFlags.NonPublic;

	[Token(Token = "0x60006C7")]
	[Address(RVA = "0xEFAA28", Offset = "0xEFAA28", VA = "0xEFAA28")]
	private void Awake()
	{
	}

	[Token(Token = "0x60006C8")]
	[Address(RVA = "0xEFAA80", Offset = "0xEFAA80", VA = "0xEFAA80")]
	private void Start()
	{
	}

	[Token(Token = "0x60006C9")]
	[Address(RVA = "0xEFAA84", Offset = "0xEFAA84", VA = "0xEFAA84")]
	private void Update()
	{
	}

	[Token(Token = "0x60006CA")]
	[Address(RVA = "0xEFA114", Offset = "0xEFA114", VA = "0xEFA114")]
	public RectTransform AddTextField(string label, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x60006CB")]
	[Address(RVA = "0xEFAA88", Offset = "0xEFAA88", VA = "0xEFAA88")]
	public void RemoveFromCanvas(RectTransform element, int targetCanvas = 0)
	{
	}

	[Token(Token = "0x60006CC")]
	[Address(RVA = "0xEFACA4", Offset = "0xEFACA4", VA = "0xEFACA4")]
	public CustomDebugUI()
	{
	}
}
[Token(Token = "0x20000E7")]
public class DebugUISample : MonoBehaviour
{
	[Token(Token = "0x4000526")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool inMenu;

	[Token(Token = "0x4000527")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Text sliderText;

	[Token(Token = "0x60006CD")]
	[Address(RVA = "0xEFACAC", Offset = "0xEFACAC", VA = "0xEFACAC")]
	private void Start()
	{
	}

	[Token(Token = "0x60006CE")]
	[Address(RVA = "0xEFB20C", Offset = "0xEFB20C", VA = "0xEFB20C")]
	public void TogglePressed(Toggle t)
	{
	}

	[Token(Token = "0x60006CF")]
	[Address(RVA = "0xEFB2B8", Offset = "0xEFB2B8", VA = "0xEFB2B8")]
	public void RadioPressed(string radioLabel, string group, Toggle t)
	{
	}

	[Token(Token = "0x60006D0")]
	[Address(RVA = "0xEFB548", Offset = "0xEFB548", VA = "0xEFB548")]
	public void SliderPressed(float f)
	{
	}

	[Token(Token = "0x60006D1")]
	[Address(RVA = "0xEFB61C", Offset = "0xEFB61C", VA = "0xEFB61C")]
	private void Update()
	{
	}

	[Token(Token = "0x60006D2")]
	[Address(RVA = "0xEFB6F4", Offset = "0xEFB6F4", VA = "0xEFB6F4")]
	private void LogButtonPressed()
	{
	}

	[Token(Token = "0x60006D3")]
	[Address(RVA = "0xEFB75C", Offset = "0xEFB75C", VA = "0xEFB75C")]
	public DebugUISample()
	{
	}
}
[Token(Token = "0x20000E8")]
public class AnalyticsUI : MonoBehaviour
{
	[Token(Token = "0x60006D8")]
	[Address(RVA = "0xEFB904", Offset = "0xEFB904", VA = "0xEFB904")]
	public AnalyticsUI()
	{
	}
}
[Token(Token = "0x20000E9")]
public class SampleUI : MonoBehaviour
{
	[Token(Token = "0x4000528")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private RectTransform collectionButton;

	[Token(Token = "0x4000529")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private RectTransform inputText;

	[Token(Token = "0x400052A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private RectTransform valueText;

	[Token(Token = "0x400052B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool inMenu;

	[Token(Token = "0x60006D9")]
	[Address(RVA = "0xEFB90C", Offset = "0xEFB90C", VA = "0xEFB90C")]
	private void Start()
	{
	}

	[Token(Token = "0x60006DA")]
	[Address(RVA = "0xEFB9A4", Offset = "0xEFB9A4", VA = "0xEFB9A4")]
	private void Update()
	{
	}

	[Token(Token = "0x60006DB")]
	[Address(RVA = "0xEFBA7C", Offset = "0xEFBA7C", VA = "0xEFBA7C")]
	private string GetText()
	{
		return null;
	}

	[Token(Token = "0x60006DC")]
	[Address(RVA = "0xEFBAD8", Offset = "0xEFBAD8", VA = "0xEFBAD8")]
	public SampleUI()
	{
	}
}
[Token(Token = "0x20000EA")]
public class StartCrashlytics : MonoBehaviour
{
	[Token(Token = "0x60006DD")]
	[Address(RVA = "0xEFBAE0", Offset = "0xEFBAE0", VA = "0xEFBAE0")]
	public StartCrashlytics()
	{
	}
}
[Token(Token = "0x20000EB")]
public class HandsActiveChecker : MonoBehaviour
{
	[Token(Token = "0x20000EC")]
	[CompilerGenerated]
	private sealed class <GetCenterEye>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000530")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000531")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000532")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public HandsActiveChecker <>4__this;

		[Token(Token = "0x1700006A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60006E5")]
			[Address(RVA = "0xEFBEF0", Offset = "0xEFBEF0", VA = "0xEFBEF0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700006B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60006E7")]
			[Address(RVA = "0xEFBF38", Offset = "0xEFBF38", VA = "0xEFBF38", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60006E2")]
		[Address(RVA = "0xEFBD8C", Offset = "0xEFBD8C", VA = "0xEFBD8C")]
		[DebuggerHidden]
		public <GetCenterEye>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x60006E3")]
		[Address(RVA = "0xEFBDBC", Offset = "0xEFBDBC", VA = "0xEFBDBC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60006E4")]
		[Address(RVA = "0xEFBDC0", Offset = "0xEFBDC0", VA = "0xEFBDC0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60006E6")]
		[Address(RVA = "0xEFBEF8", Offset = "0xEFBEF8", VA = "0xEFBEF8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400052C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject _notificationPrefab;

	[Token(Token = "0x400052D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private GameObject _notification;

	[Token(Token = "0x400052E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private OVRCameraRig _cameraRig;

	[Token(Token = "0x400052F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Transform _centerEye;

	[Token(Token = "0x60006DE")]
	[Address(RVA = "0xEFBAE8", Offset = "0xEFBAE8", VA = "0xEFBAE8")]
	private void Awake()
	{
	}

	[Token(Token = "0x60006DF")]
	[Address(RVA = "0xEFBBF4", Offset = "0xEFBBF4", VA = "0xEFBBF4")]
	private void Update()
	{
	}

	[Token(Token = "0x60006E0")]
	[Address(RVA = "0xEFBB80", Offset = "0xEFBB80", VA = "0xEFBB80")]
	[IteratorStateMachine(typeof(<GetCenterEye>d__6))]
	private IEnumerator GetCenterEye()
	{
		return null;
	}

	[Token(Token = "0x60006E1")]
	[Address(RVA = "0xEFBDB4", Offset = "0xEFBDB4", VA = "0xEFBDB4")]
	public HandsActiveChecker()
	{
	}
}
[Token(Token = "0x20000ED")]
[ExecuteInEditMode]
public class CharacterCapsule : MonoBehaviour
{
	[Token(Token = "0x4000533")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private CharacterController _character;

	[Token(Token = "0x4000534")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private MeshFilter _meshFilter;

	[Token(Token = "0x4000535")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float _height;

	[Token(Token = "0x4000536")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float _radius;

	[Token(Token = "0x4000537")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[Range(4f, 32f)]
	public int SubdivisionsU;

	[Token(Token = "0x4000538")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[Range(4f, 32f)]
	public int SubdivisionsV;

	[Token(Token = "0x4000539")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int _subdivisionU;

	[Token(Token = "0x400053A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private int _subdivisionV;

	[Token(Token = "0x400053B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Vector3[] _vertices;

	[Token(Token = "0x400053C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private int[] _triangles;

	[Token(Token = "0x60006E8")]
	[Address(RVA = "0xEFBF40", Offset = "0xEFBF40", VA = "0xEFBF40")]
	private void Update()
	{
	}

	[Token(Token = "0x60006E9")]
	[Address(RVA = "0xEFD8E8", Offset = "0xEFD8E8", VA = "0xEFD8E8")]
	public CharacterCapsule()
	{
	}
}
[Token(Token = "0x20000EE")]
public class LocomotionSampleSupport : MonoBehaviour
{
	[Token(Token = "0x400053D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private LocomotionController lc;

	[Token(Token = "0x400053E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool inMenu;

	[Token(Token = "0x1700006C")]
	private LocomotionTeleport TeleportController
	{
		[Token(Token = "0x60006EA")]
		[Address(RVA = "0xEFD8F0", Offset = "0xEFD8F0", VA = "0xEFD8F0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60006EB")]
	[Address(RVA = "0xEFD940", Offset = "0xEFD940", VA = "0xEFD940")]
	public void Start()
	{
	}

	[Token(Token = "0x60006EC")]
	[Address(RVA = "0xEFDD78", Offset = "0xEFDD78", VA = "0xEFDD78")]
	public void Update()
	{
	}

	[Token(Token = "0x60006ED")]
	[Address(RVA = "0xEFDE50", Offset = "0xEFDE50", VA = "0xEFDE50")]
	[Conditional("DEBUG_LOCOMOTION_PANEL")]
	private static void Log(string msg)
	{
	}

	[Token(Token = "0x60006EE")]
	public static TActivate ActivateCategory<TCategory, TActivate>(GameObject target) where TCategory : MonoBehaviour where TActivate : MonoBehaviour
	{
		return null;
	}

	[Token(Token = "0x60006EF")]
	protected void ActivateHandlers<TInput, TAim, TTarget, TOrientation, TTransition>() where TInput : TeleportInputHandler where TAim : TeleportAimHandler where TTarget : TeleportTargetHandler where TOrientation : TeleportOrientationHandler where TTransition : TeleportTransition
	{
	}

	[Token(Token = "0x60006F0")]
	protected void ActivateInput<TActivate>() where TActivate : TeleportInputHandler
	{
	}

	[Token(Token = "0x60006F1")]
	protected void ActivateAim<TActivate>() where TActivate : TeleportAimHandler
	{
	}

	[Token(Token = "0x60006F2")]
	protected void ActivateTarget<TActivate>() where TActivate : TeleportTargetHandler
	{
	}

	[Token(Token = "0x60006F3")]
	protected void ActivateOrientation<TActivate>() where TActivate : TeleportOrientationHandler
	{
	}

	[Token(Token = "0x60006F4")]
	protected void ActivateTransition<TActivate>() where TActivate : TeleportTransition
	{
	}

	[Token(Token = "0x60006F5")]
	protected TActivate ActivateCategory<TCategory, TActivate>() where TCategory : MonoBehaviour where TActivate : MonoBehaviour
	{
		return null;
	}

	[Token(Token = "0x60006F6")]
	[Address(RVA = "0xEFDEA8", Offset = "0xEFDEA8", VA = "0xEFDEA8")]
	protected void UpdateToggle(Toggle toggle, bool enabled)
	{
	}

	[Token(Token = "0x60006F7")]
	[Address(RVA = "0xEFDEE8", Offset = "0xEFDEE8", VA = "0xEFDEE8")]
	private void SetupNonCap()
	{
	}

	[Token(Token = "0x60006F8")]
	[Address(RVA = "0xEFDF54", Offset = "0xEFDF54", VA = "0xEFDF54")]
	private void SetupTeleportDefaults()
	{
	}

	[Token(Token = "0x60006F9")]
	[Address(RVA = "0xEFE0A0", Offset = "0xEFE0A0", VA = "0xEFE0A0")]
	protected GameObject AddInstance(GameObject template, string label)
	{
		return null;
	}

	[Token(Token = "0x60006FA")]
	[Address(RVA = "0xEFE170", Offset = "0xEFE170", VA = "0xEFE170")]
	private void SetupNodeTeleport()
	{
	}

	[Token(Token = "0x60006FB")]
	[Address(RVA = "0xEFDC54", Offset = "0xEFDC54", VA = "0xEFDC54")]
	private void SetupTwoStickTeleport()
	{
	}

	[Token(Token = "0x60006FC")]
	[Address(RVA = "0xEFE240", Offset = "0xEFE240", VA = "0xEFE240")]
	private void SetupWalkOnly()
	{
	}

	[Token(Token = "0x60006FD")]
	[Address(RVA = "0xEFE28C", Offset = "0xEFE28C", VA = "0xEFE28C")]
	private void SetupLeftStrafeRightTeleport()
	{
	}

	[Token(Token = "0x60006FE")]
	[Address(RVA = "0xEFE39C", Offset = "0xEFE39C", VA = "0xEFE39C")]
	public LocomotionSampleSupport()
	{
	}
}
[Token(Token = "0x20000EF")]
[RequireComponent(typeof(Canvas))]
public class OVROverlayCanvas : MonoBehaviour
{
	[Token(Token = "0x20000F0")]
	public enum DrawMode
	{
		[Token(Token = "0x4000554")]
		Opaque,
		[Token(Token = "0x4000555")]
		OpaqueWithClip,
		[Token(Token = "0x4000556")]
		TransparentDefaultAlpha,
		[Token(Token = "0x4000557")]
		TransparentCorrectAlpha
	}

	[Token(Token = "0x400053F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	[HideInInspector]
	private Shader _transparentShader;

	[Token(Token = "0x4000540")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[HideInInspector]
	[SerializeField]
	private Shader _opaqueShader;

	[Token(Token = "0x4000541")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private RectTransform _rectTransform;

	[Token(Token = "0x4000542")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Canvas _canvas;

	[Token(Token = "0x4000543")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Camera _camera;

	[Token(Token = "0x4000544")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private OVROverlay _overlay;

	[Token(Token = "0x4000545")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private RenderTexture _renderTexture;

	[Token(Token = "0x4000546")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private MeshRenderer _meshRenderer;

	[Token(Token = "0x4000547")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Mesh _quad;

	[Token(Token = "0x4000548")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Material _defaultMat;

	[Token(Token = "0x4000549")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public int MaxTextureSize;

	[Token(Token = "0x400054A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public int MinTextureSize;

	[Token(Token = "0x400054B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public float PixelsPerUnit;

	[Token(Token = "0x400054C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public int DrawRate;

	[Token(Token = "0x400054D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public int DrawFrameOffset;

	[Token(Token = "0x400054E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public bool Expensive;

	[Token(Token = "0x400054F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public int Layer;

	[Token(Token = "0x4000550")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public DrawMode Opacity;

	[Token(Token = "0x4000551")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private bool ScaleViewport;

	[Token(Token = "0x4000552")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly Plane[] _FrustumPlanes;

	[Token(Token = "0x1700006D")]
	public bool overlayEnabled
	{
		[Token(Token = "0x6000705")]
		[Address(RVA = "0xEFF9E0", Offset = "0xEFF9E0", VA = "0xEFF9E0")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000706")]
		[Address(RVA = "0xEFFA64", Offset = "0xEFFA64", VA = "0xEFFA64")]
		set
		{
		}
	}

	[Token(Token = "0x60006FF")]
	[Address(RVA = "0xEFE3A4", Offset = "0xEFE3A4", VA = "0xEFE3A4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000700")]
	[Address(RVA = "0xEFF068", Offset = "0xEFF068", VA = "0xEFF068")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000701")]
	[Address(RVA = "0xEFF0DC", Offset = "0xEFF0DC", VA = "0xEFF0DC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000702")]
	[Address(RVA = "0xEFF1AC", Offset = "0xEFF1AC", VA = "0xEFF1AC")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000703")]
	[Address(RVA = "0xEFF27C", Offset = "0xEFF27C", VA = "0xEFF27C", Slot = "4")]
	protected virtual bool ShouldRender()
	{
		return default(bool);
	}

	[Token(Token = "0x6000704")]
	[Address(RVA = "0xEFF480", Offset = "0xEFF480", VA = "0xEFF480")]
	private void Update()
	{
	}

	[Token(Token = "0x6000707")]
	[Address(RVA = "0xEFFB20", Offset = "0xEFFB20", VA = "0xEFFB20")]
	public OVROverlayCanvas()
	{
	}
}
[Token(Token = "0x20000F1")]
public class AugmentedObject : MonoBehaviour
{
	[Token(Token = "0x4000558")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OVRInput.Controller controllerHand;

	[Token(Token = "0x4000559")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform shadow;

	[Token(Token = "0x400055A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool groundShadow;

	[Token(Token = "0x6000709")]
	[Address(RVA = "0xEFFBDC", Offset = "0xEFFBDC", VA = "0xEFFBDC")]
	private void Start()
	{
	}

	[Token(Token = "0x600070A")]
	[Address(RVA = "0xEFFF7C", Offset = "0xEFFF7C", VA = "0xEFFF7C")]
	private void Update()
	{
	}

	[Token(Token = "0x600070B")]
	[Address(RVA = "0xF00110", Offset = "0xF00110", VA = "0xF00110")]
	public void Grab(OVRInput.Controller grabHand)
	{
	}

	[Token(Token = "0x600070C")]
	[Address(RVA = "0xF00118", Offset = "0xF00118", VA = "0xF00118")]
	public void Release()
	{
	}

	[Token(Token = "0x600070D")]
	[Address(RVA = "0xF00100", Offset = "0xF00100", VA = "0xF00100")]
	private void ToggleShadowType()
	{
	}

	[Token(Token = "0x600070E")]
	[Address(RVA = "0xF00120", Offset = "0xF00120", VA = "0xF00120")]
	public AugmentedObject()
	{
	}
}
[Token(Token = "0x20000F2")]
public class BrushController : MonoBehaviour
{
	[Token(Token = "0x20000F3")]
	[CompilerGenerated]
	private sealed class <FadeCameraClearColor>d__8 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400055F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000560")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000561")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float fadeTime;

		[Token(Token = "0x4000562")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public Color newColor;

		[Token(Token = "0x4000563")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float <timer>5__2;

		[Token(Token = "0x4000564")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Color <currentColor>5__3;

		[Token(Token = "0x1700006E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000719")]
			[Address(RVA = "0xF00868", Offset = "0xF00868", VA = "0xF00868", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700006F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600071B")]
			[Address(RVA = "0xF008B0", Offset = "0xF008B0", VA = "0xF008B0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000716")]
		[Address(RVA = "0xF0070C", Offset = "0xF0070C", VA = "0xF0070C")]
		[DebuggerHidden]
		public <FadeCameraClearColor>d__8(int <>1__state)
		{
		}

		[Token(Token = "0x6000717")]
		[Address(RVA = "0xF00764", Offset = "0xF00764", VA = "0xF00764", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000718")]
		[Address(RVA = "0xF00768", Offset = "0xF00768", VA = "0xF00768", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600071A")]
		[Address(RVA = "0xF00870", Offset = "0xF00870", VA = "0xF00870", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20000F4")]
	[CompilerGenerated]
	private sealed class <FadeSphere>d__9 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000565")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000566")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000567")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public BrushController <>4__this;

		[Token(Token = "0x4000568")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float fadeTime;

		[Token(Token = "0x4000569")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public Color newColor;

		[Token(Token = "0x400056A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public bool disableOnFinish;

		[Token(Token = "0x400056B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float <timer>5__2;

		[Token(Token = "0x400056C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private Color <currentColor>5__3;

		[Token(Token = "0x17000070")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600071F")]
			[Address(RVA = "0xF00A34", Offset = "0xF00A34", VA = "0xF00A34", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000071")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000721")]
			[Address(RVA = "0xF00A7C", Offset = "0xF00A7C", VA = "0xF00A7C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600071C")]
		[Address(RVA = "0xF00734", Offset = "0xF00734", VA = "0xF00734")]
		[DebuggerHidden]
		public <FadeSphere>d__9(int <>1__state)
		{
		}

		[Token(Token = "0x600071D")]
		[Address(RVA = "0xF008B8", Offset = "0xF008B8", VA = "0xF008B8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600071E")]
		[Address(RVA = "0xF008BC", Offset = "0xF008BC", VA = "0xF008BC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000720")]
		[Address(RVA = "0xF00A3C", Offset = "0xF00A3C", VA = "0xF00A3C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400055B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public PassthroughBrush brush;

	[Token(Token = "0x400055C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public MeshRenderer backgroundSphere;

	[Token(Token = "0x400055D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private IEnumerator grabRoutine;

	[Token(Token = "0x400055E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private IEnumerator releaseRoutine;

	[Token(Token = "0x600070F")]
	[Address(RVA = "0xF00128", Offset = "0xF00128", VA = "0xF00128")]
	private void Start()
	{
	}

	[Token(Token = "0x6000710")]
	[Address(RVA = "0xF00408", Offset = "0xF00408", VA = "0xF00408")]
	private void Update()
	{
	}

	[Token(Token = "0x6000711")]
	[Address(RVA = "0xF00458", Offset = "0xF00458", VA = "0xF00458")]
	public void Grab(OVRInput.Controller grabHand)
	{
	}

	[Token(Token = "0x6000712")]
	[Address(RVA = "0xF005D0", Offset = "0xF005D0", VA = "0xF005D0")]
	public void Release()
	{
	}

	[Token(Token = "0x6000713")]
	[Address(RVA = "0xF00674", Offset = "0xF00674", VA = "0xF00674")]
	[IteratorStateMachine(typeof(<FadeCameraClearColor>d__8))]
	private IEnumerator FadeCameraClearColor(Color newColor, float fadeTime)
	{
		return null;
	}

	[Token(Token = "0x6000714")]
	[Address(RVA = "0xF00510", Offset = "0xF00510", VA = "0xF00510")]
	[IteratorStateMachine(typeof(<FadeSphere>d__9))]
	private IEnumerator FadeSphere(Color newColor, float fadeTime, bool disableOnFinish = false)
	{
		return null;
	}

	[Token(Token = "0x6000715")]
	[Address(RVA = "0xF0075C", Offset = "0xF0075C", VA = "0xF0075C")]
	public BrushController()
	{
	}
}
[Token(Token = "0x20000F5")]
public class EnableUnpremultipliedAlpha : MonoBehaviour
{
	[Token(Token = "0x6000722")]
	[Address(RVA = "0xF00A84", Offset = "0xF00A84", VA = "0xF00A84")]
	private void Start()
	{
	}

	[Token(Token = "0x6000723")]
	[Address(RVA = "0xF00AD8", Offset = "0xF00AD8", VA = "0xF00AD8")]
	public EnableUnpremultipliedAlpha()
	{
	}
}
[Token(Token = "0x20000F6")]
public class Flashlight : MonoBehaviour
{
	[Token(Token = "0x400056D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject lightVolume;

	[Token(Token = "0x400056E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Light spotlight;

	[Token(Token = "0x400056F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject bulbGlow;

	[Token(Token = "0x6000724")]
	[Address(RVA = "0xF00AE0", Offset = "0xF00AE0", VA = "0xF00AE0")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000725")]
	[Address(RVA = "0xF00CB4", Offset = "0xF00CB4", VA = "0xF00CB4")]
	public void ToggleFlashlight()
	{
	}

	[Token(Token = "0x6000726")]
	[Address(RVA = "0xF00D44", Offset = "0xF00D44", VA = "0xF00D44")]
	public void EnableFlashlight(bool doEnable)
	{
	}

	[Token(Token = "0x6000727")]
	[Address(RVA = "0xF00DA0", Offset = "0xF00DA0", VA = "0xF00DA0")]
	public Flashlight()
	{
	}
}
[Token(Token = "0x20000F7")]
public class FlashlightController : MonoBehaviour
{
	[Token(Token = "0x20000F8")]
	[CompilerGenerated]
	private sealed class <FadeLighting>d__17 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400057A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400057B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400057C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public FlashlightController <>4__this;

		[Token(Token = "0x400057D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float fadeTime;

		[Token(Token = "0x400057E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public Color newColor;

		[Token(Token = "0x400057F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float sceneLightIntensity;

		[Token(Token = "0x4000580")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float <timer>5__2;

		[Token(Token = "0x4000581")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private Color <currentColor>5__3;

		[Token(Token = "0x4000582")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private float <currentLight>5__4;

		[Token(Token = "0x17000072")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000734")]
			[Address(RVA = "0xF01F78", Offset = "0xF01F78", VA = "0xF01F78", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000073")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000736")]
			[Address(RVA = "0xF01FC0", Offset = "0xF01FC0", VA = "0xF01FC0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000731")]
		[Address(RVA = "0xF01CE0", Offset = "0xF01CE0", VA = "0xF01CE0")]
		[DebuggerHidden]
		public <FadeLighting>d__17(int <>1__state)
		{
		}

		[Token(Token = "0x6000732")]
		[Address(RVA = "0xF01DA8", Offset = "0xF01DA8", VA = "0xF01DA8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000733")]
		[Address(RVA = "0xF01DAC", Offset = "0xF01DAC", VA = "0xF01DAC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000735")]
		[Address(RVA = "0xF01F80", Offset = "0xF01F80", VA = "0xF01F80", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000570")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Light sceneLight;

	[Token(Token = "0x4000571")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform flashlightRoot;

	[Token(Token = "0x4000572")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Vector3 localPosition;

	[Token(Token = "0x4000573")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private Quaternion localRotation;

	[Token(Token = "0x4000574")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public TextMesh infoText;

	[Token(Token = "0x4000575")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private GrabObject externalController;

	[Token(Token = "0x4000576")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private OVRSkeleton[] skeletons;

	[Token(Token = "0x4000577")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private OVRHand[] hands;

	[Token(Token = "0x4000578")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private int handIndex;

	[Token(Token = "0x4000579")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private bool pinching;

	[Token(Token = "0x6000728")]
	[Address(RVA = "0xF00DA8", Offset = "0xF00DA8", VA = "0xF00DA8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000729")]
	[Address(RVA = "0xF01090", Offset = "0xF01090", VA = "0xF01090")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x600072A")]
	[Address(RVA = "0xF0137C", Offset = "0xF0137C", VA = "0xF0137C")]
	private void FindHands()
	{
	}

	[Token(Token = "0x600072B")]
	[Address(RVA = "0xF016A4", Offset = "0xF016A4", VA = "0xF016A4")]
	private void AlignWithHand(OVRHand hand, OVRSkeleton skeleton)
	{
	}

	[Token(Token = "0x600072C")]
	[Address(RVA = "0xF0197C", Offset = "0xF0197C", VA = "0xF0197C")]
	private void AlignWithController(OVRInput.Controller controller)
	{
	}

	[Token(Token = "0x600072D")]
	[Address(RVA = "0xF01A64", Offset = "0xF01A64", VA = "0xF01A64")]
	public void Grab(OVRInput.Controller grabHand)
	{
	}

	[Token(Token = "0x600072E")]
	[Address(RVA = "0xF01BFC", Offset = "0xF01BFC", VA = "0xF01BFC")]
	public void Release()
	{
	}

	[Token(Token = "0x600072F")]
	[Address(RVA = "0xF01B4C", Offset = "0xF01B4C", VA = "0xF01B4C")]
	[IteratorStateMachine(typeof(<FadeLighting>d__17))]
	private IEnumerator FadeLighting(Color newColor, float sceneLightIntensity, float fadeTime)
	{
		return null;
	}

	[Token(Token = "0x6000730")]
	[Address(RVA = "0xF01D08", Offset = "0xF01D08", VA = "0xF01D08")]
	public FlashlightController()
	{
	}
}
[Token(Token = "0x20000F9")]
public class GrabObject : MonoBehaviour
{
	[Token(Token = "0x20000FA")]
	public enum ManipulationType
	{
		[Token(Token = "0x400058C")]
		Default,
		[Token(Token = "0x400058D")]
		ForcedHand,
		[Token(Token = "0x400058E")]
		DollyHand,
		[Token(Token = "0x400058F")]
		DollyAttached,
		[Token(Token = "0x4000590")]
		HorizontalScaled,
		[Token(Token = "0x4000591")]
		VerticalScaled,
		[Token(Token = "0x4000592")]
		Menu
	}

	[Token(Token = "0x20000FB")]
	public delegate void GrabbedObject(OVRInput.Controller grabHand);

	[Token(Token = "0x20000FC")]
	public delegate void ReleasedObject();

	[Token(Token = "0x20000FD")]
	public delegate void SetCursorPosition(Vector3 cursorPosition);

	[Token(Token = "0x4000583")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[TextArea]
	public string ObjectName;

	[Token(Token = "0x4000584")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[TextArea]
	public string ObjectInstructions;

	[Token(Token = "0x4000585")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ManipulationType objectManipulationType;

	[Token(Token = "0x4000586")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public bool showLaserWhileGrabbed;

	[Token(Token = "0x4000587")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[HideInInspector]
	public Quaternion grabbedRotation;

	[Token(Token = "0x4000588")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GrabbedObject GrabbedObjectDelegate;

	[Token(Token = "0x4000589")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public ReleasedObject ReleasedObjectDelegate;

	[Token(Token = "0x400058A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public SetCursorPosition CursorPositionDelegate;

	[Token(Token = "0x6000737")]
	[Address(RVA = "0xF01FC8", Offset = "0xF01FC8", VA = "0xF01FC8")]
	public void Grab(OVRInput.Controller grabHand)
	{
	}

	[Token(Token = "0x6000738")]
	[Address(RVA = "0xF02028", Offset = "0xF02028", VA = "0xF02028")]
	public void Release()
	{
	}

	[Token(Token = "0x6000739")]
	[Address(RVA = "0xF02044", Offset = "0xF02044", VA = "0xF02044")]
	public void CursorPos(Vector3 cursorPos)
	{
	}

	[Token(Token = "0x600073A")]
	[Address(RVA = "0xF02060", Offset = "0xF02060", VA = "0xF02060")]
	public GrabObject()
	{
	}
}
[Token(Token = "0x20000FE")]
public class HandMeshMask : MonoBehaviour
{
	[Token(Token = "0x4000593")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OVRSkeleton referenceHand;

	[Token(Token = "0x4000594")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Material maskMaterial;

	[Token(Token = "0x4000595")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[Tooltip("The segments around the tip of a finger")]
	public int radialDivisions;

	[Token(Token = "0x4000596")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[Tooltip("The fade range (finger width is 2x this)")]
	public float borderSize;

	[Token(Token = "0x4000597")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[Tooltip("Along the fingers, each knuckle scales down by this amount.  Default is zero for uniform width along entire finger.")]
	public float fingerTaper;

	[Token(Token = "0x4000598")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[Tooltip("Shorten the last bone of each finger; need this to account for bone structure (end bone is at finger tip instead of center). Default is 1.")]
	public float fingerTipLength;

	[Token(Token = "0x4000599")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[Tooltip("Move the base of the 4 main fingers towards the tips, to avoid a visible mesh crack between finger webbing. Default is 0.")]
	public float webOffset;

	[Token(Token = "0x400059A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float handScale;

	[Token(Token = "0x400059B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private GameObject maskMeshObject;

	[Token(Token = "0x400059C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Mesh maskMesh;

	[Token(Token = "0x400059D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Vector3[] handVertices;

	[Token(Token = "0x400059E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Vector2[] handUVs;

	[Token(Token = "0x400059F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Color32[] handColors;

	[Token(Token = "0x40005A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private int[] handTriangles;

	[Token(Token = "0x40005A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private int vertCounter;

	[Token(Token = "0x40005A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private int triCounter;

	[Token(Token = "0x6000747")]
	[Address(RVA = "0xF02318", Offset = "0xF02318", VA = "0xF02318")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000748")]
	[Address(RVA = "0xF02578", Offset = "0xF02578", VA = "0xF02578")]
	private void Update()
	{
	}

	[Token(Token = "0x6000749")]
	[Address(RVA = "0xF02740", Offset = "0xF02740", VA = "0xF02740")]
	private void CreateHandMesh()
	{
	}

	[Token(Token = "0x600074A")]
	[Address(RVA = "0xF02D94", Offset = "0xF02D94", VA = "0xF02D94")]
	private void AddKnuckleMesh(int knuckleVerts, float point1scale, float point2scale, Vector3 point1, Vector3 point2)
	{
	}

	[Token(Token = "0x600074B")]
	[Address(RVA = "0xF0332C", Offset = "0xF0332C", VA = "0xF0332C")]
	private void AddPalmMesh(int knuckleVerts)
	{
	}

	[Token(Token = "0x600074C")]
	[Address(RVA = "0xF05634", Offset = "0xF05634", VA = "0xF05634")]
	private void AddVertex(Vector3 position, Vector2 uv, Color color)
	{
	}

	[Token(Token = "0x600074D")]
	[Address(RVA = "0xF059A8", Offset = "0xF059A8", VA = "0xF059A8")]
	public HandMeshMask()
	{
	}
}
[Token(Token = "0x20000FF")]
public class HandMeshUI : MonoBehaviour
{
	[Token(Token = "0x40005A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public SphereCollider[] knobs;

	[Token(Token = "0x40005A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TextMesh[] readouts;

	[Token(Token = "0x40005A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private int rightHeldKnob;

	[Token(Token = "0x40005A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private int leftHeldKnob;

	[Token(Token = "0x40005A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public OVRSkeleton leftHand;

	[Token(Token = "0x40005A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public OVRSkeleton rightHand;

	[Token(Token = "0x40005A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public HandMeshMask leftMask;

	[Token(Token = "0x40005AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public HandMeshMask rightMask;

	[Token(Token = "0x600074E")]
	[Address(RVA = "0xF059CC", Offset = "0xF059CC", VA = "0xF059CC")]
	private void Start()
	{
	}

	[Token(Token = "0x600074F")]
	[Address(RVA = "0xF05D34", Offset = "0xF05D34", VA = "0xF05D34")]
	private void Update()
	{
	}

	[Token(Token = "0x6000750")]
	[Address(RVA = "0xF05A68", Offset = "0xF05A68", VA = "0xF05A68")]
	private void SetSliderValue(int sliderID, float value, bool isNormalized)
	{
	}

	[Token(Token = "0x6000751")]
	[Address(RVA = "0xF0619C", Offset = "0xF0619C", VA = "0xF0619C")]
	private void CheckForHands()
	{
	}

	[Token(Token = "0x6000752")]
	[Address(RVA = "0xF0670C", Offset = "0xF0670C", VA = "0xF0670C")]
	public HandMeshUI()
	{
	}
}
[Token(Token = "0x2000100")]
public class ObjectManipulator : MonoBehaviour
{
	[Token(Token = "0x2000101")]
	[CompilerGenerated]
	private sealed class <StartDemo>d__23 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40005BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40005BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40005C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ObjectManipulator <>4__this;

		[Token(Token = "0x40005C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <timer>5__2;

		[Token(Token = "0x40005C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <fadeTime>5__3;

		[Token(Token = "0x17000074")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000762")]
			[Address(RVA = "0xF08FB4", Offset = "0xF08FB4", VA = "0xF08FB4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000075")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000764")]
			[Address(RVA = "0xF08FFC", Offset = "0xF08FFC", VA = "0xF08FFC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600075F")]
		[Address(RVA = "0xF088F4", Offset = "0xF088F4", VA = "0xF088F4")]
		[DebuggerHidden]
		public <StartDemo>d__23(int <>1__state)
		{
		}

		[Token(Token = "0x6000760")]
		[Address(RVA = "0xF08CDC", Offset = "0xF08CDC", VA = "0xF08CDC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000761")]
		[Address(RVA = "0xF08CE0", Offset = "0xF08CE0", VA = "0xF08CE0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000763")]
		[Address(RVA = "0xF08FBC", Offset = "0xF08FBC", VA = "0xF08FBC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40005AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private OVRInput.Controller controller;

	[Token(Token = "0x40005AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private GameObject hoverObject;

	[Token(Token = "0x40005AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private GameObject grabObject;

	[Token(Token = "0x40005AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float grabTime;

	[Token(Token = "0x40005AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private Vector3 localGrabOffset;

	[Token(Token = "0x40005B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Quaternion localGrabRotation;

	[Token(Token = "0x40005B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Vector3 camGrabPosition;

	[Token(Token = "0x40005B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private Quaternion camGrabRotation;

	[Token(Token = "0x40005B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private Vector3 handGrabPosition;

	[Token(Token = "0x40005B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Quaternion handGrabRotation;

	[Token(Token = "0x40005B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private Vector3 cursorPosition;

	[Token(Token = "0x40005B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private float rotationOffset;

	[Token(Token = "0x40005B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public LineRenderer laser;

	[Token(Token = "0x40005B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public Transform objectInfo;

	[Token(Token = "0x40005B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public TextMesh objectNameLabel;

	[Token(Token = "0x40005BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public TextMesh objectInstructionsLabel;

	[Token(Token = "0x40005BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public Image objectInfoBG;

	[Token(Token = "0x40005BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public GameObject demoObjects;

	[Token(Token = "0x40005BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public OVRPassthroughLayer passthrough;

	[Token(Token = "0x6000753")]
	[Address(RVA = "0xF0671C", Offset = "0xF0671C", VA = "0xF0671C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000754")]
	[Address(RVA = "0xF06918", Offset = "0xF06918", VA = "0xF06918")]
	private void Update()
	{
	}

	[Token(Token = "0x6000755")]
	[Address(RVA = "0xF07854", Offset = "0xF07854", VA = "0xF07854")]
	private void GrabHoverObject(GameObject grbObj, Vector3 controllerPos, Quaternion controllerRot)
	{
	}

	[Token(Token = "0x6000756")]
	[Address(RVA = "0xF085E8", Offset = "0xF085E8", VA = "0xF085E8")]
	private void ReleaseObject()
	{
	}

	[Token(Token = "0x6000757")]
	[Address(RVA = "0xF068A4", Offset = "0xF068A4", VA = "0xF068A4")]
	[IteratorStateMachine(typeof(<StartDemo>d__23))]
	private IEnumerator StartDemo()
	{
		return null;
	}

	[Token(Token = "0x6000758")]
	[Address(RVA = "0xF06B68", Offset = "0xF06B68", VA = "0xF06B68")]
	private void FindHoverObject(Vector3 controllerPos, Quaternion controllerRot)
	{
	}

	[Token(Token = "0x6000759")]
	[Address(RVA = "0xF07B48", Offset = "0xF07B48", VA = "0xF07B48")]
	private void ManipulateObject(GameObject obj, Vector3 controllerPos, Quaternion controllerRot)
	{
	}

	[Token(Token = "0x600075A")]
	[Address(RVA = "0xF0891C", Offset = "0xF0891C", VA = "0xF0891C")]
	private void ClampGrabOffset(ref Vector3 localOffset, float thumbY)
	{
	}

	[Token(Token = "0x600075B")]
	[Address(RVA = "0xF089D0", Offset = "0xF089D0", VA = "0xF089D0")]
	private Vector3 ClampScale(Vector3 localScale, Vector2 thumb)
	{
		return default(Vector3);
	}

	[Token(Token = "0x600075C")]
	[Address(RVA = "0xF08A00", Offset = "0xF08A00", VA = "0xF08A00")]
	private void CheckForDominantHand()
	{
	}

	[Token(Token = "0x600075D")]
	[Address(RVA = "0xF087D8", Offset = "0xF087D8", VA = "0xF087D8")]
	private void AssignInstructions(GrabObject targetObject)
	{
	}

	[Token(Token = "0x600075E")]
	[Address(RVA = "0xF08AF0", Offset = "0xF08AF0", VA = "0xF08AF0")]
	public ObjectManipulator()
	{
	}
}
[Token(Token = "0x2000102")]
public class OverlayPassthrough : MonoBehaviour
{
	[Token(Token = "0x40005C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private OVRPassthroughLayer passthroughLayer;

	[Token(Token = "0x6000765")]
	[Address(RVA = "0xF09004", Offset = "0xF09004", VA = "0xF09004")]
	private void Start()
	{
	}

	[Token(Token = "0x6000766")]
	[Address(RVA = "0xF09170", Offset = "0xF09170", VA = "0xF09170")]
	private void Update()
	{
	}

	[Token(Token = "0x6000767")]
	[Address(RVA = "0xF09224", Offset = "0xF09224", VA = "0xF09224")]
	public OverlayPassthrough()
	{
	}
}
[Token(Token = "0x2000103")]
public class PassthroughBrush : MonoBehaviour
{
	[Token(Token = "0x2000104")]
	public enum BrushState
	{
		[Token(Token = "0x40005CF")]
		Idle,
		[Token(Token = "0x40005D0")]
		Inking
	}

	[Token(Token = "0x40005C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OVRInput.Controller controllerHand;

	[Token(Token = "0x40005C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject lineSegmentPrefab;

	[Token(Token = "0x40005C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject lineContainer;

	[Token(Token = "0x40005C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool forceActive;

	[Token(Token = "0x40005C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private LineRenderer currentLineSegment;

	[Token(Token = "0x40005C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private List<Vector3> inkPositions;

	[Token(Token = "0x40005CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float minInkDist;

	[Token(Token = "0x40005CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private float strokeWidth;

	[Token(Token = "0x40005CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float strokeLength;

	[Token(Token = "0x40005CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private BrushState brushStatus;

	[Token(Token = "0x6000768")]
	[Address(RVA = "0xF0922C", Offset = "0xF0922C", VA = "0xF0922C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000769")]
	[Address(RVA = "0xF09234", Offset = "0xF09234", VA = "0xF09234")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x600076A")]
	[Address(RVA = "0xF094E4", Offset = "0xF094E4", VA = "0xF094E4")]
	private void StartLine(Vector3 inkPos)
	{
	}

	[Token(Token = "0x600076B")]
	[Address(RVA = "0xF09718", Offset = "0xF09718", VA = "0xF09718")]
	private void UpdateLine(Vector3 inkPos)
	{
	}

	[Token(Token = "0x600076C")]
	[Address(RVA = "0xF09958", Offset = "0xF09958", VA = "0xF09958")]
	public void ClearLines()
	{
	}

	[Token(Token = "0x600076D")]
	[Address(RVA = "0xF093FC", Offset = "0xF093FC", VA = "0xF093FC")]
	public void UndoInkLine()
	{
	}

	[Token(Token = "0x600076E")]
	[Address(RVA = "0xF09A28", Offset = "0xF09A28", VA = "0xF09A28")]
	public PassthroughBrush()
	{
	}
}
[Token(Token = "0x2000105")]
public class PassthroughController : MonoBehaviour
{
	[Token(Token = "0x40005D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private OVRPassthroughLayer passthroughLayer;

	[Token(Token = "0x600076F")]
	[Address(RVA = "0xF09AC4", Offset = "0xF09AC4", VA = "0xF09AC4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000770")]
	[Address(RVA = "0xF09C30", Offset = "0xF09C30", VA = "0xF09C30")]
	private void Update()
	{
	}

	[Token(Token = "0x6000771")]
	[Address(RVA = "0xF09E1C", Offset = "0xF09E1C", VA = "0xF09E1C")]
	public PassthroughController()
	{
	}
}
[Token(Token = "0x2000106")]
public class PassthroughProjectionSurface : MonoBehaviour
{
	[Token(Token = "0x40005D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private OVRPassthroughLayer passthroughLayer;

	[Token(Token = "0x40005D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public MeshFilter projectionObject;

	[Token(Token = "0x40005D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private MeshRenderer quadOutline;

	[Token(Token = "0x6000772")]
	[Address(RVA = "0xF09E24", Offset = "0xF09E24", VA = "0xF09E24")]
	private void Start()
	{
	}

	[Token(Token = "0x6000773")]
	[Address(RVA = "0xF0A00C", Offset = "0xF0A00C", VA = "0xF0A00C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000774")]
	[Address(RVA = "0xF0A1AC", Offset = "0xF0A1AC", VA = "0xF0A1AC")]
	public PassthroughProjectionSurface()
	{
	}
}
[Token(Token = "0x2000107")]
public class PassthroughStyler : MonoBehaviour
{
	[Token(Token = "0x2000108")]
	[CompilerGenerated]
	private sealed class <FadeToCurrentStyle>d__19 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40005E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40005E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40005E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PassthroughStyler <>4__this;

		[Token(Token = "0x40005E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float fadeTime;

		[Token(Token = "0x40005E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <timer>5__2;

		[Token(Token = "0x40005E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float <brightness>5__3;

		[Token(Token = "0x40005EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float <contrast>5__4;

		[Token(Token = "0x40005EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float <posterize>5__5;

		[Token(Token = "0x40005EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private Color <edgeCol>5__6;

		[Token(Token = "0x17000076")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000787")]
			[Address(RVA = "0xF0AE08", Offset = "0xF0AE08", VA = "0xF0AE08", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000077")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000789")]
			[Address(RVA = "0xF0AE50", Offset = "0xF0AE50", VA = "0xF0AE50", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000784")]
		[Address(RVA = "0xF0AC6C", Offset = "0xF0AC6C", VA = "0xF0AC6C")]
		[DebuggerHidden]
		public <FadeToCurrentStyle>d__19(int <>1__state)
		{
		}

		[Token(Token = "0x6000785")]
		[Address(RVA = "0xF0AC94", Offset = "0xF0AC94", VA = "0xF0AC94", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000786")]
		[Address(RVA = "0xF0AC98", Offset = "0xF0AC98", VA = "0xF0AC98", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000788")]
		[Address(RVA = "0xF0AE10", Offset = "0xF0AE10", VA = "0xF0AE10", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000109")]
	[CompilerGenerated]
	private sealed class <FadeToDefaultPassthrough>d__20 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40005ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40005EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40005EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PassthroughStyler <>4__this;

		[Token(Token = "0x40005F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float fadeTime;

		[Token(Token = "0x40005F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <timer>5__2;

		[Token(Token = "0x40005F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float <brightness>5__3;

		[Token(Token = "0x40005F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float <contrast>5__4;

		[Token(Token = "0x40005F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float <posterize>5__5;

		[Token(Token = "0x40005F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private Color <edgeCol>5__6;

		[Token(Token = "0x17000078")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600078D")]
			[Address(RVA = "0xF0B008", Offset = "0xF0B008", VA = "0xF0B008", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000079")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600078F")]
			[Address(RVA = "0xF0B050", Offset = "0xF0B050", VA = "0xF0B050", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600078A")]
		[Address(RVA = "0xF0AE58", Offset = "0xF0AE58", VA = "0xF0AE58")]
		[DebuggerHidden]
		public <FadeToDefaultPassthrough>d__20(int <>1__state)
		{
		}

		[Token(Token = "0x600078B")]
		[Address(RVA = "0xF0AE80", Offset = "0xF0AE80", VA = "0xF0AE80", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600078C")]
		[Address(RVA = "0xF0AE84", Offset = "0xF0AE84", VA = "0xF0AE84", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600078E")]
		[Address(RVA = "0xF0B010", Offset = "0xF0B010", VA = "0xF0B010", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40005D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OVRInput.Controller controllerHand;

	[Token(Token = "0x40005D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public OVRPassthroughLayer passthroughLayer;

	[Token(Token = "0x40005D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private IEnumerator fadeIn;

	[Token(Token = "0x40005D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private IEnumerator fadeOut;

	[Token(Token = "0x40005D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public RectTransform[] menuOptions;

	[Token(Token = "0x40005DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public RectTransform colorWheel;

	[Token(Token = "0x40005DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Texture2D colorTexture;

	[Token(Token = "0x40005DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Vector3 cursorPosition;

	[Token(Token = "0x40005DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private bool settingColor;

	[Token(Token = "0x40005DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Color savedColor;

	[Token(Token = "0x40005DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private float savedBrightness;

	[Token(Token = "0x40005E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private float savedContrast;

	[Token(Token = "0x40005E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private float savedPosterize;

	[Token(Token = "0x40005E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public CanvasGroup mainCanvas;

	[Token(Token = "0x40005E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public GameObject[] compactObjects;

	[Token(Token = "0x6000775")]
	[Address(RVA = "0xF0A1B4", Offset = "0xF0A1B4", VA = "0xF0A1B4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000776")]
	[Address(RVA = "0xF0A4DC", Offset = "0xF0A4DC", VA = "0xF0A4DC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000777")]
	[Address(RVA = "0xF0A87C", Offset = "0xF0A87C", VA = "0xF0A87C")]
	public void Grab(OVRInput.Controller grabHand)
	{
	}

	[Token(Token = "0x6000778")]
	[Address(RVA = "0xF0A9F0", Offset = "0xF0A9F0", VA = "0xF0A9F0")]
	public void Release()
	{
	}

	[Token(Token = "0x6000779")]
	[Address(RVA = "0xF0A96C", Offset = "0xF0A96C", VA = "0xF0A96C")]
	[IteratorStateMachine(typeof(<FadeToCurrentStyle>d__19))]
	private IEnumerator FadeToCurrentStyle(float fadeTime)
	{
		return null;
	}

	[Token(Token = "0x600077A")]
	[Address(RVA = "0xF0AAD4", Offset = "0xF0AAD4", VA = "0xF0AAD4")]
	[IteratorStateMachine(typeof(<FadeToDefaultPassthrough>d__20))]
	private IEnumerator FadeToDefaultPassthrough(float fadeTime)
	{
		return null;
	}

	[Token(Token = "0x600077B")]
	[Address(RVA = "0xF0AB58", Offset = "0xF0AB58", VA = "0xF0AB58")]
	public void OnBrightnessChanged(float newValue)
	{
	}

	[Token(Token = "0x600077C")]
	[Address(RVA = "0xF0AB78", Offset = "0xF0AB78", VA = "0xF0AB78")]
	public void OnContrastChanged(float newValue)
	{
	}

	[Token(Token = "0x600077D")]
	[Address(RVA = "0xF0AB98", Offset = "0xF0AB98", VA = "0xF0AB98")]
	public void OnPosterizeChanged(float newValue)
	{
	}

	[Token(Token = "0x600077E")]
	[Address(RVA = "0xF0ABB8", Offset = "0xF0ABB8", VA = "0xF0ABB8")]
	public void OnAlphaChanged(float newValue)
	{
	}

	[Token(Token = "0x600077F")]
	[Address(RVA = "0xF0A474", Offset = "0xF0A474", VA = "0xF0A474")]
	private void ShowFullMenu(bool doShow)
	{
	}

	[Token(Token = "0x6000780")]
	[Address(RVA = "0xF0ABEC", Offset = "0xF0ABEC", VA = "0xF0ABEC")]
	public void Cursor(Vector3 cP)
	{
	}

	[Token(Token = "0x6000781")]
	[Address(RVA = "0xF0ABF8", Offset = "0xF0ABF8", VA = "0xF0ABF8")]
	public void DoColorDrag(bool doDrag)
	{
	}

	[Token(Token = "0x6000782")]
	[Address(RVA = "0xF0A4F4", Offset = "0xF0A4F4", VA = "0xF0A4F4")]
	public void GetColorFromWheel()
	{
	}

	[Token(Token = "0x6000783")]
	[Address(RVA = "0xF0AC04", Offset = "0xF0AC04", VA = "0xF0AC04")]
	public PassthroughStyler()
	{
	}
}
[Token(Token = "0x200010A")]
public class PassthroughSurface : MonoBehaviour
{
	[Token(Token = "0x40005F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OVRPassthroughLayer passthroughLayer;

	[Token(Token = "0x40005F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public MeshFilter projectionObject;

	[Token(Token = "0x6000790")]
	[Address(RVA = "0xF0B058", Offset = "0xF0B058", VA = "0xF0B058")]
	private void Start()
	{
	}

	[Token(Token = "0x6000791")]
	[Address(RVA = "0xF0B10C", Offset = "0xF0B10C", VA = "0xF0B10C")]
	public PassthroughSurface()
	{
	}
}
[Token(Token = "0x200010B")]
public class SceneSampler : MonoBehaviour
{
	[Token(Token = "0x40005F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private int currentSceneIndex;

	[Token(Token = "0x40005F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject displayText;

	[Token(Token = "0x6000792")]
	[Address(RVA = "0xF0B114", Offset = "0xF0B114", VA = "0xF0B114")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000793")]
	[Address(RVA = "0xF0B180", Offset = "0xF0B180", VA = "0xF0B180")]
	private void Update()
	{
	}

	[Token(Token = "0x6000794")]
	[Address(RVA = "0xF0B474", Offset = "0xF0B474", VA = "0xF0B474")]
	public SceneSampler()
	{
	}
}
[Token(Token = "0x200010C")]
public class SelectivePassthroughExperience : MonoBehaviour
{
	[Token(Token = "0x40005FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject leftMaskObject;

	[Token(Token = "0x40005FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject rightMaskObject;

	[Token(Token = "0x6000795")]
	[Address(RVA = "0xF0B47C", Offset = "0xF0B47C", VA = "0xF0B47C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000796")]
	[Address(RVA = "0xF0B8D0", Offset = "0xF0B8D0", VA = "0xF0B8D0")]
	public SelectivePassthroughExperience()
	{
	}
}
[Token(Token = "0x200010D")]
public class SPPquad : MonoBehaviour
{
	[Token(Token = "0x40005FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private OVRPassthroughLayer passthroughLayer;

	[Token(Token = "0x40005FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public MeshFilter projectionObject;

	[Token(Token = "0x40005FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private OVRInput.Controller controllerHand;

	[Token(Token = "0x6000797")]
	[Address(RVA = "0xF0B8D8", Offset = "0xF0B8D8", VA = "0xF0B8D8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000798")]
	[Address(RVA = "0xF0BB40", Offset = "0xF0BB40", VA = "0xF0BB40")]
	public void Grab(OVRInput.Controller grabHand)
	{
	}

	[Token(Token = "0x6000799")]
	[Address(RVA = "0xF0BB8C", Offset = "0xF0BB8C", VA = "0xF0BB8C")]
	public void Release()
	{
	}

	[Token(Token = "0x600079A")]
	[Address(RVA = "0xF0BBCC", Offset = "0xF0BBCC", VA = "0xF0BBCC")]
	public SPPquad()
	{
	}
}
[Token(Token = "0x200010E")]
public class BouncingBallLogic : MonoBehaviour
{
	[Token(Token = "0x200010F")]
	[CompilerGenerated]
	private sealed class <PlayPopCallback>d__18 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400060B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400060C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400060D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float clipLength;

		[Token(Token = "0x400060E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public BouncingBallLogic <>4__this;

		[Token(Token = "0x1700007A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60007A6")]
			[Address(RVA = "0xF0C2E8", Offset = "0xF0C2E8", VA = "0xF0C2E8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700007B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60007A8")]
			[Address(RVA = "0xF0C330", Offset = "0xF0C330", VA = "0xF0C330", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60007A3")]
		[Address(RVA = "0xF0C1B0", Offset = "0xF0C1B0", VA = "0xF0C1B0")]
		[DebuggerHidden]
		public <PlayPopCallback>d__18(int <>1__state)
		{
		}

		[Token(Token = "0x60007A4")]
		[Address(RVA = "0xF0C1F0", Offset = "0xF0C1F0", VA = "0xF0C1F0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60007A5")]
		[Address(RVA = "0xF0C1F4", Offset = "0xF0C1F4", VA = "0xF0C1F4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60007A7")]
		[Address(RVA = "0xF0C2F0", Offset = "0xF0C2F0", VA = "0xF0C2F0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40005FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private float TTL;

	[Token(Token = "0x4000600")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private AudioClip pop;

	[Token(Token = "0x4000601")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private AudioClip bounce;

	[Token(Token = "0x4000602")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private AudioClip loadball;

	[Token(Token = "0x4000603")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private Material visibleMat;

	[Token(Token = "0x4000604")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private Material hiddenMat;

	[Token(Token = "0x4000605")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private AudioSource audioSource;

	[Token(Token = "0x4000606")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Transform centerEyeCamera;

	[Token(Token = "0x4000607")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool isVisible;

	[Token(Token = "0x4000608")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private float timer;

	[Token(Token = "0x4000609")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private bool isReleased;

	[Token(Token = "0x400060A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
	private bool isReadyForDestroy;

	[Token(Token = "0x600079B")]
	[Address(RVA = "0xF0BBD4", Offset = "0xF0BBD4", VA = "0xF0BBD4")]
	private void OnCollisionEnter()
	{
	}

	[Token(Token = "0x600079C")]
	[Address(RVA = "0xF0BBF8", Offset = "0xF0BBF8", VA = "0xF0BBF8")]
	private void Start()
	{
	}

	[Token(Token = "0x600079D")]
	[Address(RVA = "0xF0BD00", Offset = "0xF0BD00", VA = "0xF0BD00")]
	private void Update()
	{
	}

	[Token(Token = "0x600079E")]
	[Address(RVA = "0xF0BDA4", Offset = "0xF0BDA4", VA = "0xF0BDA4")]
	private void UpdateVisibility()
	{
	}

	[Token(Token = "0x600079F")]
	[Address(RVA = "0xF0BFF8", Offset = "0xF0BFF8", VA = "0xF0BFF8")]
	private void SetVisible(bool setVisible)
	{
	}

	[Token(Token = "0x60007A0")]
	[Address(RVA = "0xF0C09C", Offset = "0xF0C09C", VA = "0xF0C09C")]
	public void Release(Vector3 pos, Vector3 vel, Vector3 angVel)
	{
	}

	[Token(Token = "0x60007A1")]
	[Address(RVA = "0xF0BF74", Offset = "0xF0BF74", VA = "0xF0BF74")]
	[IteratorStateMachine(typeof(<PlayPopCallback>d__18))]
	private IEnumerator PlayPopCallback(float clipLength)
	{
		return null;
	}

	[Token(Token = "0x60007A2")]
	[Address(RVA = "0xF0C1D8", Offset = "0xF0C1D8", VA = "0xF0C1D8")]
	public BouncingBallLogic()
	{
	}
}
[Token(Token = "0x2000110")]
public class BouncingBallMgr : MonoBehaviour
{
	[Token(Token = "0x400060F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Transform trackingspace;

	[Token(Token = "0x4000610")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject rightControllerPivot;

	[Token(Token = "0x4000611")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private OVRInput.RawButton actionBtn;

	[Token(Token = "0x4000612")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private GameObject ball;

	[Token(Token = "0x4000613")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private GameObject currentBall;

	[Token(Token = "0x4000614")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool ballGrabbed;

	[Token(Token = "0x60007A9")]
	[Address(RVA = "0xF0C338", Offset = "0xF0C338", VA = "0xF0C338")]
	private void Update()
	{
	}

	[Token(Token = "0x60007AA")]
	[Address(RVA = "0xF0C648", Offset = "0xF0C648", VA = "0xF0C648")]
	public BouncingBallMgr()
	{
	}
}
[Token(Token = "0x2000111")]
[RequireComponent(typeof(OVRSceneAnchor))]
[DefaultExecutionOrder(30)]
public class FurnitureSpawner : MonoBehaviour
{
	[Token(Token = "0x4000615")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Tooltip("Add a point at ceiling.")]
	public GameObject RoomLightPrefab;

	[Token(Token = "0x4000616")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<Spawnable> SpawnablePrefabs;

	[Token(Token = "0x4000617")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private OVRSceneAnchor _sceneAnchor;

	[Token(Token = "0x4000618")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private OVRSemanticClassification _classification;

	[Token(Token = "0x4000619")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static GameObject _roomLightRef;

	[Token(Token = "0x400061A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int _frameCounter;

	[Token(Token = "0x60007AB")]
	[Address(RVA = "0xF0C650", Offset = "0xF0C650", VA = "0xF0C650")]
	private void Start()
	{
	}

	[Token(Token = "0x60007AC")]
	[Address(RVA = "0xF0C868", Offset = "0xF0C868", VA = "0xF0C868")]
	private void SpawnSpawnable()
	{
	}

	[Token(Token = "0x60007AD")]
	[Address(RVA = "0xF0CCD8", Offset = "0xF0CCD8", VA = "0xF0CCD8")]
	private bool FindValidSpawnable(out Spawnable currentSpawnable)
	{
		return default(bool);
	}

	[Token(Token = "0x60007AE")]
	[Address(RVA = "0xF0C6F0", Offset = "0xF0C6F0", VA = "0xF0C6F0")]
	private void AddRoomLight()
	{
	}

	[Token(Token = "0x60007AF")]
	[Address(RVA = "0xF0CEF8", Offset = "0xF0CEF8", VA = "0xF0CEF8")]
	private void GetVolumeFromTopPlane(Transform plane, Vector2 dimensions, float height, out Vector3 position, out Quaternion rotation, out Vector3 localScale)
	{
	}

	[Token(Token = "0x60007B0")]
	[Address(RVA = "0xF0D3E4", Offset = "0xF0D3E4", VA = "0xF0D3E4")]
	public FurnitureSpawner()
	{
	}
}
[Token(Token = "0x2000112")]
public class MyCustomSceneModelLoader : OVRSceneModelLoader
{
	[Token(Token = "0x2000113")]
	[CompilerGenerated]
	private sealed class <DelayedLoad>d__0 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400061B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400061C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400061D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MyCustomSceneModelLoader <>4__this;

		[Token(Token = "0x1700007C")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60007B8")]
			[Address(RVA = "0xF0D618", Offset = "0xF0D618", VA = "0xF0D618", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700007D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60007BA")]
			[Address(RVA = "0xF0D660", Offset = "0xF0D660", VA = "0xF0D660", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60007B5")]
		[Address(RVA = "0xF0D460", Offset = "0xF0D460", VA = "0xF0D460")]
		[DebuggerHidden]
		public <DelayedLoad>d__0(int <>1__state)
		{
		}

		[Token(Token = "0x60007B6")]
		[Address(RVA = "0xF0D518", Offset = "0xF0D518", VA = "0xF0D518", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60007B7")]
		[Address(RVA = "0xF0D51C", Offset = "0xF0D51C", VA = "0xF0D51C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60007B9")]
		[Address(RVA = "0xF0D620", Offset = "0xF0D620", VA = "0xF0D620", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x60007B1")]
	[Address(RVA = "0xF0D3EC", Offset = "0xF0D3EC", VA = "0xF0D3EC")]
	[IteratorStateMachine(typeof(<DelayedLoad>d__0))]
	private IEnumerator DelayedLoad()
	{
		return null;
	}

	[Token(Token = "0x60007B2")]
	[Address(RVA = "0xF0D488", Offset = "0xF0D488", VA = "0xF0D488", Slot = "4")]
	protected override void OnStart()
	{
	}

	[Token(Token = "0x60007B3")]
	[Address(RVA = "0xF0D4A8", Offset = "0xF0D4A8", VA = "0xF0D4A8", Slot = "6")]
	protected override void OnNoSceneModelToLoad()
	{
	}

	[Token(Token = "0x60007B4")]
	[Address(RVA = "0xF0D510", Offset = "0xF0D510", VA = "0xF0D510")]
	public MyCustomSceneModelLoader()
	{
	}
}
[Token(Token = "0x2000114")]
[RequireComponent(typeof(OVRManager))]
public class PassthroughPlayInEditor : MonoBehaviour
{
	[Token(Token = "0x60007BB")]
	[Address(RVA = "0xF0D668", Offset = "0xF0D668", VA = "0xF0D668")]
	private void Awake()
	{
	}

	[Token(Token = "0x60007BC")]
	[Address(RVA = "0xF0D66C", Offset = "0xF0D66C", VA = "0xF0D66C")]
	public PassthroughPlayInEditor()
	{
	}
}
[Token(Token = "0x2000115")]
public class RequestCaptureFlow : MonoBehaviour
{
	[Token(Token = "0x400061E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OVRInput.Button RequestCaptureBtn;

	[Token(Token = "0x400061F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private OVRSceneManager _sceneManager;

	[Token(Token = "0x60007BD")]
	[Address(RVA = "0xF0D674", Offset = "0xF0D674", VA = "0xF0D674")]
	private void Start()
	{
	}

	[Token(Token = "0x60007BE")]
	[Address(RVA = "0xF0D6EC", Offset = "0xF0D6EC", VA = "0xF0D6EC")]
	private void Update()
	{
	}

	[Token(Token = "0x60007BF")]
	[Address(RVA = "0xF0D770", Offset = "0xF0D770", VA = "0xF0D770")]
	public RequestCaptureFlow()
	{
	}
}
[Token(Token = "0x2000116")]
[ExecuteInEditMode]
public class SimpleResizable : MonoBehaviour
{
	[Token(Token = "0x2000117")]
	public enum Method
	{
		[Token(Token = "0x400062F")]
		Adapt,
		[Token(Token = "0x4000630")]
		AdaptWithAsymmetricalPadding,
		[Token(Token = "0x4000631")]
		Scale,
		[Token(Token = "0x4000632")]
		None
	}

	[Token(Token = "0x4000620")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Space(15f)]
	public Method ScalingX;

	[Token(Token = "0x4000621")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[Range(0f, 0.5f)]
	public float PaddingX;

	[Token(Token = "0x4000622")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[Range(-0.5f, 0f)]
	public float PaddingXMax;

	[Token(Token = "0x4000623")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[Space(15f)]
	public Method ScalingY;

	[Token(Token = "0x4000624")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[Range(0f, 0.5f)]
	public float PaddingY;

	[Token(Token = "0x4000625")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[Range(-0.5f, 0f)]
	public float PaddingYMax;

	[Token(Token = "0x4000626")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[Space(15f)]
	public Method ScalingZ;

	[Token(Token = "0x4000627")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[Range(0f, 0.5f)]
	public float PaddingZ;

	[Token(Token = "0x4000628")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[Range(-0.5f, 0f)]
	public float PaddingZMax;

	[Token(Token = "0x400062C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Bounds _bounds;

	[Token(Token = "0x400062D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private Transform _pivotTransform;

	[Token(Token = "0x1700007E")]
	public Vector3 PivotPosition
	{
		[Token(Token = "0x60007C0")]
		[Address(RVA = "0xF0D780", Offset = "0xF0D780", VA = "0xF0D780")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x1700007F")]
	public Vector3 NewSize
	{
		[Token(Token = "0x60007C1")]
		[Address(RVA = "0xF0D79C", Offset = "0xF0D79C", VA = "0xF0D79C")]
		[CompilerGenerated]
		get
		{
			return default(Vector3);
		}
		[Token(Token = "0x60007C2")]
		[Address(RVA = "0xF0D7A8", Offset = "0xF0D7A8", VA = "0xF0D7A8")]
		[CompilerGenerated]
		set
		{
		}
	}

	[Token(Token = "0x17000080")]
	public Vector3 DefaultSize
	{
		[Token(Token = "0x60007C3")]
		[Address(RVA = "0xF0D7B4", Offset = "0xF0D7B4", VA = "0xF0D7B4")]
		[CompilerGenerated]
		get
		{
			return default(Vector3);
		}
		[Token(Token = "0x60007C4")]
		[Address(RVA = "0xF0D7C0", Offset = "0xF0D7C0", VA = "0xF0D7C0")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x17000081")]
	public Mesh Mesh
	{
		[Token(Token = "0x60007C5")]
		[Address(RVA = "0xF0D7CC", Offset = "0xF0D7CC", VA = "0xF0D7CC")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x60007C6")]
		[Address(RVA = "0xF0D7D4", Offset = "0xF0D7D4", VA = "0xF0D7D4")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x60007C7")]
	[Address(RVA = "0xF0D7DC", Offset = "0xF0D7DC", VA = "0xF0D7DC")]
	private void Awake()
	{
	}

	[Token(Token = "0x60007C8")]
	[Address(RVA = "0xF0D918", Offset = "0xF0D918", VA = "0xF0D918")]
	public SimpleResizable()
	{
	}
}
[Token(Token = "0x2000118")]
public class SimpleResizer
{
	[Token(Token = "0x60007C9")]
	[Address(RVA = "0xF0D050", Offset = "0xF0D050", VA = "0xF0D050")]
	public void CreateResizedObject(Vector3 newSize, GameObject parent, SimpleResizable sourcePrefab)
	{
	}

	[Token(Token = "0x60007CA")]
	[Address(RVA = "0xF0D920", Offset = "0xF0D920", VA = "0xF0D920")]
	private Mesh ProcessVertices(SimpleResizable resizable, Vector3 newSize)
	{
		return null;
	}

	[Token(Token = "0x60007CB")]
	[Address(RVA = "0xF0DBA4", Offset = "0xF0DBA4", VA = "0xF0DBA4")]
	private float CalculateNewVertexPosition(SimpleResizable.Method resizeMethod, float currentPosition, float currentSize, float newSize, float padding, float paddingMax, float pivot)
	{
		return default(float);
	}

	[Token(Token = "0x60007CC")]
	[Address(RVA = "0xF0D048", Offset = "0xF0D048", VA = "0xF0D048")]
	public SimpleResizer()
	{
	}
}
[Serializable]
[Token(Token = "0x2000119")]
public class Spawnable : ISerializationCallbackReceiver
{
	[Token(Token = "0x4000633")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public SimpleResizable ResizablePrefab;

	[Token(Token = "0x4000634")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string ClassificationLabel;

	[Token(Token = "0x4000635")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private int _editorClassificationIndex;

	[Token(Token = "0x60007CD")]
	[Address(RVA = "0xF0DC4C", Offset = "0xF0DC4C", VA = "0xF0DC4C", Slot = "4")]
	public void OnBeforeSerialize()
	{
	}

	[Token(Token = "0x60007CE")]
	[Address(RVA = "0xF0DC50", Offset = "0xF0DC50", VA = "0xF0DC50", Slot = "5")]
	public void OnAfterDeserialize()
	{
	}

	[Token(Token = "0x60007CF")]
	[Address(RVA = "0xF0E0B8", Offset = "0xF0E0B8", VA = "0xF0E0B8")]
	public Spawnable()
	{
	}
}
[Token(Token = "0x200011A")]
[RequireComponent(typeof(OVRSceneAnchor))]
public class VolumeAndPlaneSwitcher : MonoBehaviour
{
	[Token(Token = "0x200011B")]
	public enum GeometryType
	{
		[Token(Token = "0x400063A")]
		Plane,
		[Token(Token = "0x400063B")]
		Volume
	}

	[Serializable]
	[Token(Token = "0x200011C")]
	public struct LabelGeometryPair
	{
		[Token(Token = "0x400063C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string label;

		[Token(Token = "0x400063D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public GeometryType desiredGeometryType;
	}

	[Token(Token = "0x4000636")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OVRSceneAnchor planePrefab;

	[Token(Token = "0x4000637")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public OVRSceneAnchor volumePrefab;

	[Token(Token = "0x4000638")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public List<LabelGeometryPair> desiredSwitches;

	[Token(Token = "0x60007D1")]
	[Address(RVA = "0xF0E110", Offset = "0xF0E110", VA = "0xF0E110")]
	private void ReplaceAnchor(OVRSceneAnchor prefab, Vector3 position, Quaternion rotation, Vector3 localScale)
	{
	}

	[Token(Token = "0x60007D2")]
	[Address(RVA = "0xF0E53C", Offset = "0xF0E53C", VA = "0xF0E53C")]
	private void Start()
	{
	}

	[Token(Token = "0x60007D3")]
	[Address(RVA = "0xF0EE74", Offset = "0xF0EE74", VA = "0xF0EE74")]
	private void GetVolumeFromTopPlane(Transform plane, Vector2 dimensions, float height, out Vector3 position, out Quaternion rotation, out Vector3 localScale)
	{
	}

	[Token(Token = "0x60007D4")]
	[Address(RVA = "0xF0ED4C", Offset = "0xF0ED4C", VA = "0xF0ED4C")]
	private void GetTopPlaneFromVolume(Transform volume, Vector3 dimensions, out Vector3 position, out Quaternion rotation, out Vector3 localScale)
	{
	}

	[Token(Token = "0x60007D5")]
	[Address(RVA = "0xF0EEF4", Offset = "0xF0EEF4", VA = "0xF0EEF4")]
	public VolumeAndPlaneSwitcher()
	{
	}
}
[Token(Token = "0x200011D")]
[RequireComponent(typeof(OVRSpatialAnchor))]
public class Anchor : MonoBehaviour
{
	[Token(Token = "0x200011E")]
	[CompilerGenerated]
	private sealed class <Start>d__20 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000651")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000652")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000653")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Anchor <>4__this;

		[Token(Token = "0x17000083")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60007E9")]
			[Address(RVA = "0xF0FCBC", Offset = "0xF0FCBC", VA = "0xF0FCBC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000084")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60007EB")]
			[Address(RVA = "0xF0FD04", Offset = "0xF0FD04", VA = "0xF0FD04", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60007E6")]
		[Address(RVA = "0xF0F0F0", Offset = "0xF0F0F0", VA = "0xF0F0F0")]
		[DebuggerHidden]
		public <Start>d__20(int <>1__state)
		{
		}

		[Token(Token = "0x60007E7")]
		[Address(RVA = "0xF0FB40", Offset = "0xF0FB40", VA = "0xF0FB40", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60007E8")]
		[Address(RVA = "0xF0FB44", Offset = "0xF0FB44", VA = "0xF0FB44", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60007EA")]
		[Address(RVA = "0xF0FCC4", Offset = "0xF0FCC4", VA = "0xF0FCC4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400063E")]
	public const string NumUuidsPlayerPref = "numUuids";

	[Token(Token = "0x400063F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	[FormerlySerializedAs("canvas_")]
	private Canvas _canvas;

	[Token(Token = "0x4000640")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	[FormerlySerializedAs("pivot_")]
	private Transform _pivot;

	[Token(Token = "0x4000641")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[FormerlySerializedAs("anchorMenu_")]
	[SerializeField]
	private GameObject _anchorMenu;

	[Token(Token = "0x4000642")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool _isSelected;

	[Token(Token = "0x4000643")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	private bool _isHovered;

	[Token(Token = "0x4000644")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[FormerlySerializedAs("anchorName_")]
	[SerializeField]
	private TextMeshProUGUI _anchorName;

	[Token(Token = "0x4000645")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[FormerlySerializedAs("saveIcon_")]
	[SerializeField]
	private GameObject _saveIcon;

	[Token(Token = "0x4000646")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	[FormerlySerializedAs("labelImage_")]
	private Image _labelImage;

	[Token(Token = "0x4000647")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[FormerlySerializedAs("labelBaseColor_")]
	[SerializeField]
	private Color _labelBaseColor;

	[Token(Token = "0x4000648")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[FormerlySerializedAs("labelHighlightColor_")]
	[SerializeField]
	private Color _labelHighlightColor;

	[Token(Token = "0x4000649")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	[FormerlySerializedAs("labelSelectedColor_")]
	private Color _labelSelectedColor;

	[Token(Token = "0x400064A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	[FormerlySerializedAs("uiManager_")]
	private AnchorUIManager _uiManager;

	[Token(Token = "0x400064B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	[FormerlySerializedAs("renderers_")]
	private MeshRenderer[] _renderers;

	[Token(Token = "0x400064C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private int _menuIndex;

	[Token(Token = "0x400064D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[FormerlySerializedAs("buttonList_")]
	[SerializeField]
	private List<Button> _buttonList;

	[Token(Token = "0x400064E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private Button _selectedButton;

	[Token(Token = "0x400064F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private OVRSpatialAnchor _spatialAnchor;

	[Token(Token = "0x4000650")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private GameObject _icon;

	[Token(Token = "0x17000082")]
	public bool ShowSaveIcon
	{
		[Token(Token = "0x60007DC")]
		[Address(RVA = "0xF0F59C", Offset = "0xF0F59C", VA = "0xF0F59C")]
		set
		{
		}
	}

	[Token(Token = "0x60007D6")]
	[Address(RVA = "0xF0EEFC", Offset = "0xF0EEFC", VA = "0xF0EEFC")]
	private void Awake()
	{
	}

	[Token(Token = "0x60007D7")]
	[Address(RVA = "0xF0F07C", Offset = "0xF0F07C", VA = "0xF0F07C")]
	[IteratorStateMachine(typeof(<Start>d__20))]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x60007D8")]
	[Address(RVA = "0xF0F118", Offset = "0xF0F118", VA = "0xF0F118")]
	private void Update()
	{
	}

	[Token(Token = "0x60007D9")]
	[Address(RVA = "0xF0F390", Offset = "0xF0F390", VA = "0xF0F390")]
	public void OnSaveLocalButtonPressed()
	{
	}

	[Token(Token = "0x60007DA")]
	[Address(RVA = "0xF0F460", Offset = "0xF0F460", VA = "0xF0F460")]
	public void OnHideButtonPressed()
	{
	}

	[Token(Token = "0x60007DB")]
	[Address(RVA = "0xF0F4CC", Offset = "0xF0F4CC", VA = "0xF0F4CC")]
	public void OnEraseButtonPressed()
	{
	}

	[Token(Token = "0x60007DD")]
	[Address(RVA = "0xF0F5BC", Offset = "0xF0F5BC", VA = "0xF0F5BC")]
	public void OnHoverStart()
	{
	}

	[Token(Token = "0x60007DE")]
	[Address(RVA = "0xF0F6D8", Offset = "0xF0F6D8", VA = "0xF0F6D8")]
	public void OnHoverEnd()
	{
	}

	[Token(Token = "0x60007DF")]
	[Address(RVA = "0xF0F7E0", Offset = "0xF0F7E0", VA = "0xF0F7E0")]
	public void OnSelect()
	{
	}

	[Token(Token = "0x60007E0")]
	[Address(RVA = "0xF0F168", Offset = "0xF0F168", VA = "0xF0F168")]
	private void BillboardPanel(Transform panel)
	{
	}

	[Token(Token = "0x60007E1")]
	[Address(RVA = "0xF0F29C", Offset = "0xF0F29C", VA = "0xF0F29C")]
	private void HandleMenuNavigation()
	{
	}

	[Token(Token = "0x60007E2")]
	[Address(RVA = "0xF0F8B0", Offset = "0xF0F8B0", VA = "0xF0F8B0")]
	private void NavigateToIndexInMenu(bool moveNext)
	{
	}

	[Token(Token = "0x60007E3")]
	[Address(RVA = "0xF0F9E8", Offset = "0xF0F9E8", VA = "0xF0F9E8")]
	public Anchor()
	{
	}
}
[Token(Token = "0x200011F")]
[RequireComponent(typeof(SpatialAnchorLoader))]
public class AnchorUIManager : MonoBehaviour
{
	[Token(Token = "0x2000120")]
	public enum AnchorMode
	{
		[Token(Token = "0x4000667")]
		Create,
		[Token(Token = "0x4000668")]
		Select
	}

	[Token(Token = "0x2000121")]
	private delegate void PrimaryPressDelegate();

	[Token(Token = "0x4000654")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static AnchorUIManager Instance;

	[Token(Token = "0x4000655")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	[FormerlySerializedAs("createModeButton_")]
	private GameObject _createModeButton;

	[Token(Token = "0x4000656")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	[FormerlySerializedAs("selectModeButton_")]
	private GameObject _selectModeButton;

	[Token(Token = "0x4000657")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	[FormerlySerializedAs("trackedDevice_")]
	private Transform _trackedDevice;

	[Token(Token = "0x4000658")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Transform _raycastOrigin;

	[Token(Token = "0x4000659")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool _drawRaycast;

	[Token(Token = "0x400065A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[FormerlySerializedAs("lineRenderer_")]
	[SerializeField]
	private LineRenderer _lineRenderer;

	[Token(Token = "0x400065B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Anchor _hoveredAnchor;

	[Token(Token = "0x400065C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Anchor _selectedAnchor;

	[Token(Token = "0x400065D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private AnchorMode _mode;

	[Token(Token = "0x400065E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[FormerlySerializedAs("buttonList_")]
	[SerializeField]
	private List<Button> _buttonList;

	[Token(Token = "0x400065F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private int _menuIndex;

	[Token(Token = "0x4000660")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Button _selectedButton;

	[Token(Token = "0x4000661")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private Anchor _anchorPrefab;

	[Token(Token = "0x4000662")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[FormerlySerializedAs("placementPreview_")]
	[SerializeField]
	private GameObject _placementPreview;

	[Token(Token = "0x4000663")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[FormerlySerializedAs("anchorPlacementTransform_")]
	[SerializeField]
	private Transform _anchorPlacementTransform;

	[Token(Token = "0x4000664")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private PrimaryPressDelegate _primaryPressDelegate;

	[Token(Token = "0x4000665")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private bool _isFocused;

	[Token(Token = "0x17000085")]
	public Anchor AnchorPrefab
	{
		[Token(Token = "0x60007EC")]
		[Address(RVA = "0xF0FD0C", Offset = "0xF0FD0C", VA = "0xF0FD0C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60007ED")]
	[Address(RVA = "0xF0FD14", Offset = "0xF0FD14", VA = "0xF0FD14")]
	private void Awake()
	{
	}

	[Token(Token = "0x60007EE")]
	[Address(RVA = "0xF0FDE0", Offset = "0xF0FDE0", VA = "0xF0FDE0")]
	private void Start()
	{
	}

	[Token(Token = "0x60007EF")]
	[Address(RVA = "0xF0FF30", Offset = "0xF0FF30", VA = "0xF0FF30")]
	private void Update()
	{
	}

	[Token(Token = "0x60007F0")]
	[Address(RVA = "0xF103A0", Offset = "0xF103A0", VA = "0xF103A0")]
	public void OnCreateModeButtonPressed()
	{
	}

	[Token(Token = "0x60007F1")]
	[Address(RVA = "0xF1040C", Offset = "0xF1040C", VA = "0xF1040C")]
	public void OnLoadAnchorsButtonPressed()
	{
	}

	[Token(Token = "0x60007F2")]
	[Address(RVA = "0xF0FEC8", Offset = "0xF0FEC8", VA = "0xF0FEC8")]
	private void ToggleCreateMode()
	{
	}

	[Token(Token = "0x60007F3")]
	[Address(RVA = "0xF105D8", Offset = "0xF105D8", VA = "0xF105D8")]
	private void StartPlacementMode()
	{
	}

	[Token(Token = "0x60007F4")]
	[Address(RVA = "0xF10660", Offset = "0xF10660", VA = "0xF10660")]
	private void EndPlacementMode()
	{
	}

	[Token(Token = "0x60007F5")]
	[Address(RVA = "0xF10680", Offset = "0xF10680", VA = "0xF10680")]
	private void StartSelectMode()
	{
	}

	[Token(Token = "0x60007F6")]
	[Address(RVA = "0xF105B8", Offset = "0xF105B8", VA = "0xF105B8")]
	private void EndSelectMode()
	{
	}

	[Token(Token = "0x60007F7")]
	[Address(RVA = "0xF102AC", Offset = "0xF102AC", VA = "0xF102AC")]
	private void HandleMenuNavigation()
	{
	}

	[Token(Token = "0x60007F8")]
	[Address(RVA = "0xF10880", Offset = "0xF10880", VA = "0xF10880")]
	private void NavigateToIndexInMenu(bool moveNext)
	{
	}

	[Token(Token = "0x60007F9")]
	[Address(RVA = "0xF10708", Offset = "0xF10708", VA = "0xF10708")]
	private void ShowAnchorPreview()
	{
	}

	[Token(Token = "0x60007FA")]
	[Address(RVA = "0xF107F4", Offset = "0xF107F4", VA = "0xF107F4")]
	private void HideAnchorPreview()
	{
	}

	[Token(Token = "0x60007FB")]
	[Address(RVA = "0xF10980", Offset = "0xF10980", VA = "0xF10980")]
	private void PlaceAnchor()
	{
	}

	[Token(Token = "0x60007FC")]
	[Address(RVA = "0xF10814", Offset = "0xF10814", VA = "0xF10814")]
	private void ShowRaycastLine()
	{
	}

	[Token(Token = "0x60007FD")]
	[Address(RVA = "0xF1084C", Offset = "0xF1084C", VA = "0xF1084C")]
	private void HideRaycastLine()
	{
	}

	[Token(Token = "0x60007FE")]
	[Address(RVA = "0xF10030", Offset = "0xF10030", VA = "0xF10030")]
	private void ControllerRaycast()
	{
	}

	[Token(Token = "0x60007FF")]
	[Address(RVA = "0xF10A6C", Offset = "0xF10A6C", VA = "0xF10A6C")]
	private void HoverAnchor(Anchor anchor)
	{
	}

	[Token(Token = "0x6000800")]
	[Address(RVA = "0xF10A94", Offset = "0xF10A94", VA = "0xF10A94")]
	private void UnhoverAnchor()
	{
	}

	[Token(Token = "0x6000801")]
	[Address(RVA = "0xF10B24", Offset = "0xF10B24", VA = "0xF10B24")]
	private void SelectAnchor()
	{
	}

	[Token(Token = "0x6000802")]
	[Address(RVA = "0xF10C6C", Offset = "0xF10C6C", VA = "0xF10C6C")]
	public AnchorUIManager()
	{
	}
}
[Token(Token = "0x2000122")]
public class SpatialAnchorLoader : MonoBehaviour
{
	[Token(Token = "0x4000669")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private OVRSpatialAnchor _anchorPrefab;

	[Token(Token = "0x400066A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private readonly HashSet<ulong> _locateAnchorRequest;

	[Token(Token = "0x400066B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private ulong _queryRequestId;

	[Token(Token = "0x6000807")]
	[Address(RVA = "0xF10CBC", Offset = "0xF10CBC", VA = "0xF10CBC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000808")]
	[Address(RVA = "0xF10DBC", Offset = "0xF10DBC", VA = "0xF10DBC")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000809")]
	[Address(RVA = "0xF10EBC", Offset = "0xF10EBC", VA = "0xF10EBC")]
	private void SetComponentEnabled(ulong requestId, bool result, OVRSpace space, Guid uuid, OVRPlugin.SpaceComponentType componentType, bool enabled)
	{
	}

	[Token(Token = "0x600080A")]
	[Address(RVA = "0xF11110", Offset = "0xF11110", VA = "0xF11110")]
	private void QueryComplete(ulong requestId, bool result)
	{
	}

	[Token(Token = "0x600080B")]
	[Address(RVA = "0xF1131C", Offset = "0xF1131C", VA = "0xF1131C")]
	private void TryEnableComponent(ulong anchorHandle, OVRPlugin.SpaceComponentType type)
	{
	}

	[Token(Token = "0x600080C")]
	[Address(RVA = "0xF116F8", Offset = "0xF116F8", VA = "0xF116F8")]
	public void LoadAnchorsByUuid()
	{
	}

	[Token(Token = "0x600080D")]
	[Address(RVA = "0xF10460", Offset = "0xF10460", VA = "0xF10460")]
	public void LoadAllLocalAnchors()
	{
	}

	[Token(Token = "0x600080E")]
	[Address(RVA = "0xF11084", Offset = "0xF11084", VA = "0xF11084")]
	private static void Log(string message)
	{
	}

	[Token(Token = "0x600080F")]
	[Address(RVA = "0xF119D0", Offset = "0xF119D0", VA = "0xF119D0")]
	public SpatialAnchorLoader()
	{
	}
}
[Token(Token = "0x2000123")]
public class StartMenu : MonoBehaviour
{
	[Token(Token = "0x400066C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OVROverlay overlay;

	[Token(Token = "0x400066D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public OVROverlay text;

	[Token(Token = "0x400066E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OVRCameraRig vrRig;

	[Token(Token = "0x6000810")]
	[Address(RVA = "0xF11A58", Offset = "0xF11A58", VA = "0xF11A58")]
	private void Start()
	{
	}

	[Token(Token = "0x6000811")]
	[Address(RVA = "0xF11C6C", Offset = "0xF11C6C", VA = "0xF11C6C")]
	private void LoadScene(int idx)
	{
	}

	[Token(Token = "0x6000812")]
	[Address(RVA = "0xF11D70", Offset = "0xF11D70", VA = "0xF11D70")]
	public StartMenu()
	{
	}
}
[Token(Token = "0x2000125")]
public class LightOptimize : MonoBehaviour
{
	[Token(Token = "0x4000671")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float availableDistance;

	[Token(Token = "0x4000672")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private float Distance;

	[Token(Token = "0x4000673")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Light Lightcomponent;

	[Token(Token = "0x4000674")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private GameObject Player;

	[Token(Token = "0x6000815")]
	[Address(RVA = "0xF11D94", Offset = "0xF11D94", VA = "0xF11D94")]
	private void Start()
	{
	}

	[Token(Token = "0x6000816")]
	[Address(RVA = "0xF11ED4", Offset = "0xF11ED4", VA = "0xF11ED4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000817")]
	[Address(RVA = "0xF12008", Offset = "0xF12008", VA = "0xF12008")]
	public LightOptimize()
	{
	}
}
[Token(Token = "0x2000126")]
public class OfficeNewspaper : MonoBehaviour
{
	[Token(Token = "0x6000818")]
	[Address(RVA = "0xF12010", Offset = "0xF12010", VA = "0xF12010")]
	private void Start()
	{
	}

	[Token(Token = "0x6000819")]
	[Address(RVA = "0xF12210", Offset = "0xF12210", VA = "0xF12210")]
	public OfficeNewspaper()
	{
	}
}
[Token(Token = "0x2000127")]
public static class AppSettingsExtensions
{
	[Token(Token = "0x600081A")]
	[Address(RVA = "0xF12218", Offset = "0xF12218", VA = "0xF12218")]
	public static ChatAppSettings GetChatSettings(this AppSettings appSettings)
	{
		return null;
	}
}
[Token(Token = "0x2000128")]
public class ChannelSelector : MonoBehaviour, IPointerClickHandler, IEventSystemHandler
{
	[Token(Token = "0x4000675")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string Channel;

	[Token(Token = "0x600081B")]
	[Address(RVA = "0xF12308", Offset = "0xF12308", VA = "0xF12308")]
	public void SetChannel(string channel)
	{
	}

	[Token(Token = "0x600081C")]
	[Address(RVA = "0xF1238C", Offset = "0xF1238C", VA = "0xF1238C", Slot = "4")]
	public void OnPointerClick(PointerEventData eventData)
	{
	}

	[Token(Token = "0x600081D")]
	[Address(RVA = "0xF126A8", Offset = "0xF126A8", VA = "0xF126A8")]
	public ChannelSelector()
	{
	}
}
[Token(Token = "0x2000129")]
[ExecuteInEditMode]
public class ChatAppIdCheckerUI : MonoBehaviour
{
	[Token(Token = "0x4000676")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Text Description;

	[Token(Token = "0x600081E")]
	[Address(RVA = "0xF126B0", Offset = "0xF126B0", VA = "0xF126B0")]
	public void Update()
	{
	}

	[Token(Token = "0x600081F")]
	[Address(RVA = "0xF127E0", Offset = "0xF127E0", VA = "0xF127E0")]
	public ChatAppIdCheckerUI()
	{
	}
}
[Token(Token = "0x200012A")]
public class ChatGui : MonoBehaviour, IChatClientListener
{
	[Token(Token = "0x4000677")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string[] ChannelsToJoinOnConnect;

	[Token(Token = "0x4000678")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string[] FriendsList;

	[Token(Token = "0x4000679")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int HistoryLengthToFetch;

	[Token(Token = "0x400067B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private string selectedChannelName;

	[Token(Token = "0x400067C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public ChatClient chatClient;

	[Token(Token = "0x400067D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	protected internal ChatAppSettings chatAppSettings;

	[Token(Token = "0x400067E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject missingAppIdErrorPanel;

	[Token(Token = "0x400067F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GameObject ConnectingLabel;

	[Token(Token = "0x4000680")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public RectTransform ChatPanel;

	[Token(Token = "0x4000681")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public GameObject UserIdFormPanel;

	[Token(Token = "0x4000682")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public InputField InputFieldChat;

	[Token(Token = "0x4000683")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Text CurrentChannelText;

	[Token(Token = "0x4000684")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Toggle ChannelToggleToInstantiate;

	[Token(Token = "0x4000685")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public GameObject FriendListUiItemtoInstantiate;

	[Token(Token = "0x4000686")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private readonly Dictionary<string, Toggle> channelToggles;

	[Token(Token = "0x4000687")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private readonly Dictionary<string, FriendItem> friendListItemLUT;

	[Token(Token = "0x4000688")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public bool ShowState;

	[Token(Token = "0x4000689")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public GameObject Title;

	[Token(Token = "0x400068A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public Text StateText;

	[Token(Token = "0x400068B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public Text UserIdText;

	[Token(Token = "0x400068C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static string HelpText;

	[Token(Token = "0x400068D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public int TestLength;

	[Token(Token = "0x400068E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private byte[] testBytes;

	[Token(Token = "0x17000086")]
	public string UserName
	{
		[Token(Token = "0x6000820")]
		[Address(RVA = "0xF127E8", Offset = "0xF127E8", VA = "0xF127E8")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x6000821")]
		[Address(RVA = "0xF127F0", Offset = "0xF127F0", VA = "0xF127F0")]
		[CompilerGenerated]
		set
		{
		}
	}

	[Token(Token = "0x6000822")]
	[Address(RVA = "0xF127F8", Offset = "0xF127F8", VA = "0xF127F8")]
	public void Start()
	{
	}

	[Token(Token = "0x6000823")]
	[Address(RVA = "0xF12ABC", Offset = "0xF12ABC", VA = "0xF12ABC")]
	public void Connect()
	{
	}

	[Token(Token = "0x6000824")]
	[Address(RVA = "0xF12C50", Offset = "0xF12C50", VA = "0xF12C50")]
	public void OnDestroy()
	{
	}

	[Token(Token = "0x6000825")]
	[Address(RVA = "0xF12C68", Offset = "0xF12C68", VA = "0xF12C68")]
	public void OnApplicationQuit()
	{
	}

	[Token(Token = "0x6000826")]
	[Address(RVA = "0xF12C80", Offset = "0xF12C80", VA = "0xF12C80")]
	public void Update()
	{
	}

	[Token(Token = "0x6000827")]
	[Address(RVA = "0xF12D50", Offset = "0xF12D50", VA = "0xF12D50")]
	public void OnEnterSend()
	{
	}

	[Token(Token = "0x6000828")]
	[Address(RVA = "0xF1384C", Offset = "0xF1384C", VA = "0xF1384C")]
	public void OnClickSend()
	{
	}

	[Token(Token = "0x6000829")]
	[Address(RVA = "0xF12DE4", Offset = "0xF12DE4", VA = "0xF12DE4")]
	private void SendChatMessage(string inputLine)
	{
	}

	[Token(Token = "0x600082A")]
	[Address(RVA = "0xF138FC", Offset = "0xF138FC", VA = "0xF138FC")]
	public void PostHelpToCurrentChannel()
	{
	}

	[Token(Token = "0x600082B")]
	[Address(RVA = "0xF139A0", Offset = "0xF139A0", VA = "0xF139A0", Slot = "4")]
	public void DebugReturn(DebugLevel level, string message)
	{
	}

	[Token(Token = "0x600082C")]
	[Address(RVA = "0xF13A48", Offset = "0xF13A48", VA = "0xF13A48", Slot = "6")]
	public void OnConnected()
	{
	}

	[Token(Token = "0x600082D")]
	[Address(RVA = "0xF13D84", Offset = "0xF13D84", VA = "0xF13D84", Slot = "5")]
	public void OnDisconnected()
	{
	}

	[Token(Token = "0x600082E")]
	[Address(RVA = "0xF13DA4", Offset = "0xF13DA4", VA = "0xF13DA4", Slot = "7")]
	public void OnChatStateChange(ChatState state)
	{
	}

	[Token(Token = "0x600082F")]
	[Address(RVA = "0xF13E38", Offset = "0xF13E38", VA = "0xF13E38", Slot = "10")]
	public void OnSubscribed(string[] channels, bool[] results)
	{
	}

	[Token(Token = "0x6000830")]
	[Address(RVA = "0xF14188", Offset = "0xF14188", VA = "0xF14188")]
	public void OnSubscribed(string channel, string[] users, Dictionary<object, object> properties)
	{
	}

	[Token(Token = "0x6000831")]
	[Address(RVA = "0xF13FCC", Offset = "0xF13FCC", VA = "0xF13FCC")]
	private void InstantiateChannelButton(string channelName)
	{
	}

	[Token(Token = "0x6000832")]
	[Address(RVA = "0xF13C2C", Offset = "0xF13C2C", VA = "0xF13C2C")]
	private void InstantiateFriendButton(string friendId)
	{
	}

	[Token(Token = "0x6000833")]
	[Address(RVA = "0xF14370", Offset = "0xF14370", VA = "0xF14370", Slot = "11")]
	public void OnUnsubscribed(string[] channels)
	{
	}

	[Token(Token = "0x6000834")]
	[Address(RVA = "0xF147B4", Offset = "0xF147B4", VA = "0xF147B4", Slot = "8")]
	public void OnGetMessages(string channelName, string[] senders, object[] messages)
	{
	}

	[Token(Token = "0x6000835")]
	[Address(RVA = "0xF147F4", Offset = "0xF147F4", VA = "0xF147F4", Slot = "9")]
	public void OnPrivateMessage(string sender, object message, string channelName)
	{
	}

	[Token(Token = "0x6000836")]
	[Address(RVA = "0xF14908", Offset = "0xF14908", VA = "0xF14908", Slot = "12")]
	public void OnStatusUpdate(string user, int status, bool gotMessage, object message)
	{
	}

	[Token(Token = "0x6000837")]
	[Address(RVA = "0xF14C48", Offset = "0xF14C48", VA = "0xF14C48", Slot = "13")]
	public void OnUserSubscribed(string channel, string user)
	{
	}

	[Token(Token = "0x6000838")]
	[Address(RVA = "0xF14D64", Offset = "0xF14D64", VA = "0xF14D64", Slot = "14")]
	public void OnUserUnsubscribed(string channel, string user)
	{
	}

	[Token(Token = "0x6000839")]
	[Address(RVA = "0xF14E80", Offset = "0xF14E80", VA = "0xF14E80")]
	public void OnChannelPropertiesChanged(string channel, string userId, Dictionary<object, object> properties)
	{
	}

	[Token(Token = "0x600083A")]
	[Address(RVA = "0xF15008", Offset = "0xF15008", VA = "0xF15008")]
	public void OnUserPropertiesChanged(string channel, string targetUserId, string senderUserId, Dictionary<object, object> properties)
	{
	}

	[Token(Token = "0x600083B")]
	[Address(RVA = "0xF151D0", Offset = "0xF151D0", VA = "0xF151D0")]
	public void OnErrorInfo(string channel, string error, object data)
	{
	}

	[Token(Token = "0x600083C")]
	[Address(RVA = "0xF15324", Offset = "0xF15324", VA = "0xF15324")]
	public void AddMessageToSelectedChannel(string msg)
	{
	}

	[Token(Token = "0x600083D")]
	[Address(RVA = "0xF12404", Offset = "0xF12404", VA = "0xF12404")]
	public void ShowChannel(string channelName)
	{
	}

	[Token(Token = "0x600083E")]
	[Address(RVA = "0xF15410", Offset = "0xF15410", VA = "0xF15410")]
	public void OpenDashboard()
	{
	}

	[Token(Token = "0x600083F")]
	[Address(RVA = "0xF15454", Offset = "0xF15454", VA = "0xF15454")]
	public ChatGui()
	{
	}
}
[Token(Token = "0x200012B")]
public class FriendItem : MonoBehaviour
{
	[Token(Token = "0x400068F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Text NameLabel;

	[Token(Token = "0x4000690")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Text StatusLabel;

	[Token(Token = "0x4000691")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Text Health;

	[Token(Token = "0x17000087")]
	[HideInInspector]
	public string FriendId
	{
		[Token(Token = "0x6000842")]
		[Address(RVA = "0xF155D8", Offset = "0xF155D8", VA = "0xF155D8")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000841")]
		[Address(RVA = "0xF1434C", Offset = "0xF1434C", VA = "0xF1434C")]
		set
		{
		}
	}

	[Token(Token = "0x6000843")]
	[Address(RVA = "0xF155FC", Offset = "0xF155FC", VA = "0xF155FC")]
	public void Awake()
	{
	}

	[Token(Token = "0x6000844")]
	[Address(RVA = "0xF14AC8", Offset = "0xF14AC8", VA = "0xF14AC8")]
	public void OnFriendStatusUpdate(int status, bool gotMessage, object message)
	{
	}

	[Token(Token = "0x6000845")]
	[Address(RVA = "0xF15660", Offset = "0xF15660", VA = "0xF15660")]
	public FriendItem()
	{
	}
}
[Token(Token = "0x200012C")]
public class IgnoreUiRaycastWhenInactive : MonoBehaviour, ICanvasRaycastFilter
{
	[Token(Token = "0x6000846")]
	[Address(RVA = "0xF15668", Offset = "0xF15668", VA = "0xF15668", Slot = "4")]
	public bool IsRaycastLocationValid(Vector2 screenPoint, Camera eventCamera)
	{
		return default(bool);
	}

	[Token(Token = "0x6000847")]
	[Address(RVA = "0xF15688", Offset = "0xF15688", VA = "0xF15688")]
	public IgnoreUiRaycastWhenInactive()
	{
	}
}
[Token(Token = "0x200012D")]
[RequireComponent(typeof(ChatGui))]
public class NamePickGui : MonoBehaviour
{
	[Token(Token = "0x4000692")]
	private const string UserNamePlayerPref = "NamePickUserName";

	[Token(Token = "0x4000693")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ChatGui chatNewComponent;

	[Token(Token = "0x4000694")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public InputField idInput;

	[Token(Token = "0x6000848")]
	[Address(RVA = "0xF15690", Offset = "0xF15690", VA = "0xF15690")]
	public void Start()
	{
	}

	[Token(Token = "0x6000849")]
	[Address(RVA = "0xF1575C", Offset = "0xF1575C", VA = "0xF1575C")]
	public void EndEditOnEnter()
	{
	}

	[Token(Token = "0x600084A")]
	[Address(RVA = "0xF15798", Offset = "0xF15798", VA = "0xF15798")]
	public void StartChat()
	{
	}

	[Token(Token = "0x600084B")]
	[Address(RVA = "0xF1587C", Offset = "0xF1587C", VA = "0xF1587C")]
	public NamePickGui()
	{
	}
}
[Token(Token = "0x200012E")]
public class PlayAnimationOnEnable : MonoBehaviour
{
	[Token(Token = "0x4000695")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Animator animator;

	[Token(Token = "0x4000696")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AnimationClip animationClip;

	[Token(Token = "0x600084C")]
	[Address(RVA = "0xF15884", Offset = "0xF15884", VA = "0xF15884")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600084D")]
	[Address(RVA = "0xF158C4", Offset = "0xF158C4", VA = "0xF158C4")]
	public PlayAnimationOnEnable()
	{
	}
}
[Token(Token = "0x200012F")]
public class CameraDefault : MonoBehaviour
{
	[Token(Token = "0x4000697")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform TargetLookAt;

	[Token(Token = "0x4000698")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float Distance;

	[Token(Token = "0x4000699")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float DistanceMin;

	[Token(Token = "0x400069A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float DistanceMax;

	[Token(Token = "0x400069B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float mouseX;

	[Token(Token = "0x400069C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float mouseY;

	[Token(Token = "0x400069D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float startingDistance;

	[Token(Token = "0x400069E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float desiredDistance;

	[Token(Token = "0x400069F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float X_MouseSensitivity;

	[Token(Token = "0x40006A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float Y_MouseSensitivity;

	[Token(Token = "0x40006A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float MouseWheelSensitivity;

	[Token(Token = "0x40006A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float Y_MinLimit;

	[Token(Token = "0x40006A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float Y_MaxLimit;

	[Token(Token = "0x40006A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float DistanceSmooth;

	[Token(Token = "0x40006A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private float velocityDistance;

	[Token(Token = "0x40006A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Vector3 desiredPosition;

	[Token(Token = "0x40006A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public float X_Smooth;

	[Token(Token = "0x40006A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public float Y_Smooth;

	[Token(Token = "0x40006A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private float velX;

	[Token(Token = "0x40006AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private float velY;

	[Token(Token = "0x40006AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private float velZ;

	[Token(Token = "0x40006AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Vector3 position;

	[Token(Token = "0x600084E")]
	[Address(RVA = "0xF158CC", Offset = "0xF158CC", VA = "0xF158CC")]
	private void Start()
	{
	}

	[Token(Token = "0x600084F")]
	[Address(RVA = "0xF15918", Offset = "0xF15918", VA = "0xF15918")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000850")]
	[Address(RVA = "0xF159A0", Offset = "0xF159A0", VA = "0xF159A0")]
	public void HandlePlayerInput()
	{
	}

	[Token(Token = "0x6000851")]
	[Address(RVA = "0xF15B60", Offset = "0xF15B60", VA = "0xF15B60")]
	public void CalculateDesiredPosition()
	{
	}

	[Token(Token = "0x6000852")]
	[Address(RVA = "0xF15D98", Offset = "0xF15D98", VA = "0xF15D98")]
	public Vector3 CalculatePosition(float rotationX, float rotationY, float distance)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000853")]
	[Address(RVA = "0xF15BE8", Offset = "0xF15BE8", VA = "0xF15BE8")]
	public void UpdatePosition()
	{
	}

	[Token(Token = "0x6000854")]
	[Address(RVA = "0xF158FC", Offset = "0xF158FC", VA = "0xF158FC")]
	public void Reset()
	{
	}

	[Token(Token = "0x6000855")]
	[Address(RVA = "0xF15D10", Offset = "0xF15D10", VA = "0xF15D10")]
	public float ClampAngle(float angle, float min, float max)
	{
		return default(float);
	}

	[Token(Token = "0x6000856")]
	[Address(RVA = "0xF15E4C", Offset = "0xF15E4C", VA = "0xF15E4C")]
	public CameraDefault()
	{
	}
}
[Token(Token = "0x2000130")]
[CreateAssetMenu(fileName = "BundleConfiguration", menuName = "ProjectManagement/Bundle Configuration", order = 1)]
public class BundlesConfiguration : ScriptableObject
{
	[Serializable]
	[Token(Token = "0x2000131")]
	public class BundleData
	{
		[Token(Token = "0x40006AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string bundleName;

		[Token(Token = "0x6000858")]
		[Address(RVA = "0xF15EFC", Offset = "0xF15EFC", VA = "0xF15EFC")]
		public BundleData()
		{
		}
	}

	[Token(Token = "0x40006AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<BundleData> bundles;

	[Token(Token = "0x6000857")]
	[Address(RVA = "0xF15EF4", Offset = "0xF15EF4", VA = "0xF15EF4")]
	public BundlesConfiguration()
	{
	}
}
[Token(Token = "0x2000132")]
public class ModuleManager : MonoBehaviour
{
	[Token(Token = "0x40006AF")]
	private const string SLASH = "/";

	[Token(Token = "0x40006B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static ModuleManager _Instance;

	[Token(Token = "0x40006B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Dictionary<string, ProjectModuleData> modules;

	[Token(Token = "0x40006B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Dictionary<string, AssetBundle> moduleBundlesLoaded;

	[Token(Token = "0x40006B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private List<string> moduleBundlesLoading;

	[Token(Token = "0x17000088")]
	public static ModuleManager Instance
	{
		[Token(Token = "0x6000859")]
		[Address(RVA = "0xF15F04", Offset = "0xF15F04", VA = "0xF15F04")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600085A")]
	[Address(RVA = "0xF160EC", Offset = "0xF160EC", VA = "0xF160EC")]
	public void LoadModule(string moduleName)
	{
	}

	[Token(Token = "0x600085B")]
	[Address(RVA = "0xF1611C", Offset = "0xF1611C", VA = "0xF1611C")]
	public void LoadModule(string moduleName, string modulePath)
	{
	}

	[Token(Token = "0x600085C")]
	[Address(RVA = "0xF163F4", Offset = "0xF163F4", VA = "0xF163F4")]
	public void LoadModuleAsync(string moduleName, Action OnComplete)
	{
	}

	[Token(Token = "0x600085D")]
	[Address(RVA = "0xF1642C", Offset = "0xF1642C", VA = "0xF1642C")]
	public void LoadModuleAsync(string moduleName, string modulePath, Action OnComplete)
	{
	}

	[Token(Token = "0x600085E")]
	[Address(RVA = "0xF16910", Offset = "0xF16910", VA = "0xF16910")]
	public void UnloadModule(string moduleName, bool unloadObjectsInUse)
	{
	}

	[Token(Token = "0x600085F")]
	[Address(RVA = "0xF169E8", Offset = "0xF169E8", VA = "0xF169E8")]
	public void UnloadAllModules(bool unloadObjectsInUse)
	{
	}

	[Token(Token = "0x6000860")]
	[Address(RVA = "0xF16A48", Offset = "0xF16A48", VA = "0xF16A48")]
	public void LoadScene(string sceneName, LoadSceneMode sceneMode)
	{
	}

	[Token(Token = "0x6000861")]
	[Address(RVA = "0xF16AB0", Offset = "0xF16AB0", VA = "0xF16AB0")]
	public void LoadSceneAsync(string sceneName, LoadSceneMode sceneMode, Action OnComplete)
	{
	}

	[Token(Token = "0x6000862")]
	[Address(RVA = "0xF16BD0", Offset = "0xF16BD0", VA = "0xF16BD0")]
	public void UnloadScene(string sceneName)
	{
	}

	[Token(Token = "0x6000863")]
	[Address(RVA = "0xF16C28", Offset = "0xF16C28", VA = "0xF16C28")]
	public UnityEngine.Object GetAsset(string moduleName, string assetName)
	{
		return null;
	}

	[Token(Token = "0x6000864")]
	[Address(RVA = "0xF16C9C", Offset = "0xF16C9C", VA = "0xF16C9C")]
	public AssetBundleRequest GetAssetAsync(string moduleName, string assetName)
	{
		return null;
	}

	[Token(Token = "0x6000865")]
	[Address(RVA = "0xF16D10", Offset = "0xF16D10", VA = "0xF16D10")]
	public bool IsModuleLoaded(string moduleName)
	{
		return default(bool);
	}

	[Token(Token = "0x6000866")]
	[Address(RVA = "0xF16D68", Offset = "0xF16D68", VA = "0xF16D68")]
	public List<AssetBundle> GetModulesLoaded()
	{
		return null;
	}

	[Token(Token = "0x6000867")]
	[Address(RVA = "0xF16DD4", Offset = "0xF16DD4", VA = "0xF16DD4")]
	public ModuleManager()
	{
	}
}
[Token(Token = "0x2000136")]
public class ProjectManagementSettings : ScriptableObject
{
	[Token(Token = "0x40006BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string assetBundlesPath;

	[Token(Token = "0x40006BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string modulePrefix;

	[Token(Token = "0x600086E")]
	[Address(RVA = "0xF17114", Offset = "0xF17114", VA = "0xF17114")]
	public ProjectManagementSettings()
	{
	}
}
[Token(Token = "0x2000137")]
public class ProjectModuleData : ScriptableObject
{
	[Token(Token = "0x40006BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string moduleName;

	[Token(Token = "0x40006C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool bundleModule;

	[Token(Token = "0x40006C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public List<ProjectModuleData> dependencies;

	[Token(Token = "0x600086F")]
	[Address(RVA = "0xF1711C", Offset = "0xF1711C", VA = "0xF1711C")]
	public ProjectModuleData()
	{
	}
}
[Token(Token = "0x2000138")]
public class Fan : MonoBehaviour
{
	[Token(Token = "0x40006C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform fanBlades;

	[Token(Token = "0x40006C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Animation fanHeadAnim;

	[Token(Token = "0x40006C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float fanSpeed;

	[Token(Token = "0x40006C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float fanHeadSpeed;

	[Token(Token = "0x40006C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private string animName;

	[Token(Token = "0x6000870")]
	[Address(RVA = "0xF17124", Offset = "0xF17124", VA = "0xF17124")]
	private void Start()
	{
	}

	[Token(Token = "0x6000871")]
	[Address(RVA = "0xF171BC", Offset = "0xF171BC", VA = "0xF171BC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000872")]
	[Address(RVA = "0xF17288", Offset = "0xF17288", VA = "0xF17288")]
	public Fan()
	{
	}
}
[Token(Token = "0x2000139")]
public class QA_Clock : MonoBehaviour
{
	[Token(Token = "0x40006C7")]
	private const float hoursToDegrees = 30f;

	[Token(Token = "0x40006C8")]
	private const float minutesToDegrees = 6f;

	[Token(Token = "0x40006C9")]
	private const float secondsToDegrees = 6f;

	[Token(Token = "0x40006CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform hours;

	[Token(Token = "0x40006CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform minutes;

	[Token(Token = "0x40006CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform seconds;

	[Token(Token = "0x40006CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool analog;

	[Token(Token = "0x6000873")]
	[Address(RVA = "0xF1729C", Offset = "0xF1729C", VA = "0xF1729C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000874")]
	[Address(RVA = "0xF172A0", Offset = "0xF172A0", VA = "0xF172A0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000875")]
	[Address(RVA = "0xF17498", Offset = "0xF17498", VA = "0xF17498")]
	public QA_Clock()
	{
	}
}
[Token(Token = "0x200013A")]
public class QA_Door : MonoBehaviour
{
	[Token(Token = "0x40006CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Animation anim;

	[Token(Token = "0x40006CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float OpenSpeed;

	[Token(Token = "0x40006D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float CloseSpeed;

	[Token(Token = "0x40006D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool isAutomatic;

	[Token(Token = "0x40006D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	public bool AutoClose;

	[Token(Token = "0x40006D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A")]
	public bool DoubleSidesOpen;

	[Token(Token = "0x40006D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public string PlayerTag;

	[Token(Token = "0x40006D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public string OpenForwardAnimName;

	[Token(Token = "0x40006D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public string OpenBackwardAnimName;

	[Token(Token = "0x40006D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private string _animName;

	[Token(Token = "0x40006D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool inTrigger;

	[Token(Token = "0x40006D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
	private bool isOpen;

	[Token(Token = "0x40006DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private Vector3 relativePos;

	[Token(Token = "0x6000876")]
	[Address(RVA = "0xF174A8", Offset = "0xF174A8", VA = "0xF174A8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000877")]
	[Address(RVA = "0xF17534", Offset = "0xF17534", VA = "0xF17534")]
	private void Update()
	{
	}

	[Token(Token = "0x6000878")]
	[Address(RVA = "0xF17590", Offset = "0xF17590", VA = "0xF17590")]
	private void OpenDoor()
	{
	}

	[Token(Token = "0x6000879")]
	[Address(RVA = "0xF175FC", Offset = "0xF175FC", VA = "0xF175FC")]
	private void CloseDoor()
	{
	}

	[Token(Token = "0x600087A")]
	[Address(RVA = "0xF176D8", Offset = "0xF176D8", VA = "0xF176D8")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x600087B")]
	[Address(RVA = "0xF177D8", Offset = "0xF177D8", VA = "0xF177D8")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x600087C")]
	[Address(RVA = "0xF17880", Offset = "0xF17880", VA = "0xF17880")]
	public QA_Door()
	{
	}
}
[Token(Token = "0x200013B")]
[RequireComponent(typeof(SphereCollider))]
public class QA_ParticleSystemPlay : MonoBehaviour
{
	[Token(Token = "0x40006DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private string playerTag;

	[Token(Token = "0x40006DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private float triggerRadius;

	[Token(Token = "0x40006DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private ParticleSystem particleFX;

	[Token(Token = "0x40006DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private SphereCollider trigger;

	[Token(Token = "0x600087D")]
	[Address(RVA = "0xF17930", Offset = "0xF17930", VA = "0xF17930")]
	private void Start()
	{
	}

	[Token(Token = "0x600087E")]
	[Address(RVA = "0xF17A00", Offset = "0xF17A00", VA = "0xF17A00")]
	private void Update()
	{
	}

	[Token(Token = "0x600087F")]
	[Address(RVA = "0xF17A04", Offset = "0xF17A04", VA = "0xF17A04")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000880")]
	[Address(RVA = "0xF17A58", Offset = "0xF17A58", VA = "0xF17A58")]
	public QA_ParticleSystemPlay()
	{
	}
}
[Token(Token = "0x200013C")]
public class RayfireFadeOnStart : MonoBehaviour
{
	[Token(Token = "0x40006DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float delay;

	[Token(Token = "0x40006E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float duration;

	[Token(Token = "0x40006E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private RayfireRigid rfr;

	[Token(Token = "0x6000881")]
	[Address(RVA = "0xF17ABC", Offset = "0xF17ABC", VA = "0xF17ABC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000882")]
	[Address(RVA = "0xF17DF8", Offset = "0xF17DF8", VA = "0xF17DF8")]
	public RayfireFadeOnStart()
	{
	}
}
[Token(Token = "0x200013D")]
public class Camera_WASD_movement : MonoBehaviour
{
	[Token(Token = "0x40006E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int MovementSpeed;

	[Token(Token = "0x40006E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int ShiftKeyBoost;

	[Token(Token = "0x40006E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int SpaceKeySlowdown;

	[Token(Token = "0x40006E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public int MouseSensitivity;

	[Token(Token = "0x40006E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float MouseSensitivityNormalized;

	[Token(Token = "0x40006E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float MovementSpeedNormalized;

	[Token(Token = "0x40006E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float RotationHorizontal;

	[Token(Token = "0x40006E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float RotationVertical;

	[Token(Token = "0x6000883")]
	[Address(RVA = "0xF17E08", Offset = "0xF17E08", VA = "0xF17E08")]
	private void Start()
	{
	}

	[Token(Token = "0x6000884")]
	[Address(RVA = "0xF17E34", Offset = "0xF17E34", VA = "0xF17E34")]
	private void Update()
	{
	}

	[Token(Token = "0x6000885")]
	[Address(RVA = "0xF18990", Offset = "0xF18990", VA = "0xF18990")]
	public Camera_WASD_movement()
	{
	}
}
[Token(Token = "0x200013E")]
public class ReloadAnimation : MonoBehaviour
{
	[Token(Token = "0x40006EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform init_point;

	[Token(Token = "0x40006EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform end_point;

	[Token(Token = "0x6000886")]
	[Address(RVA = "0xF189A4", Offset = "0xF189A4", VA = "0xF189A4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000887")]
	[Address(RVA = "0xF18A58", Offset = "0xF18A58", VA = "0xF18A58")]
	private void delayedStart()
	{
	}

	[Token(Token = "0x6000888")]
	[Address(RVA = "0xF18B34", Offset = "0xF18B34", VA = "0xF18B34")]
	public ReloadAnimation()
	{
	}
}
[Token(Token = "0x200013F")]
public class ResetDestructibleAnimationOnPlayerHealed : MonoBehaviour
{
	[Token(Token = "0x6000889")]
	[Address(RVA = "0xF18B3C", Offset = "0xF18B3C", VA = "0xF18B3C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600088A")]
	[Address(RVA = "0xF18C00", Offset = "0xF18C00", VA = "0xF18C00")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600088B")]
	[Address(RVA = "0xF18CC4", Offset = "0xF18CC4", VA = "0xF18CC4")]
	private void OnPlayerHealed(bool remote)
	{
	}

	[Token(Token = "0x600088C")]
	[Address(RVA = "0xF18E18", Offset = "0xF18E18", VA = "0xF18E18")]
	public ResetDestructibleAnimationOnPlayerHealed()
	{
	}
}
[Token(Token = "0x2000140")]
public class AimTarget : HitTarget
{
	[Token(Token = "0x40006EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Transform aimTarget;

	[Token(Token = "0x40006ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public bool isAlive;

	[Token(Token = "0x40006EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
	public bool aimable;

	[Token(Token = "0x40006EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4A")]
	[HideInInspector]
	public bool isPlayer;

	[Token(Token = "0x40006F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4B")]
	[HideInInspector]
	public bool isEnemy;

	[Token(Token = "0x600088D")]
	[Address(RVA = "0xF18E20", Offset = "0xF18E20", VA = "0xF18E20")]
	public AimTarget()
	{
	}
}
[Token(Token = "0x2000141")]
public class AmbientMusic : MonoBehaviour
{
	[Token(Token = "0x40006F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioClip[] inGameMusic;

	[Token(Token = "0x40006F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float delay;

	[Token(Token = "0x40006F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private int count;

	[Token(Token = "0x40006F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private AudioSource audioSource;

	[Token(Token = "0x600088E")]
	[Address(RVA = "0xF18E30", Offset = "0xF18E30", VA = "0xF18E30")]
	private void Start()
	{
	}

	[Token(Token = "0x600088F")]
	[Address(RVA = "0xF19038", Offset = "0xF19038", VA = "0xF19038")]
	private void Play()
	{
	}

	[Token(Token = "0x6000890")]
	[Address(RVA = "0xF18EC0", Offset = "0xF18EC0", VA = "0xF18EC0")]
	private void RandomizeClips()
	{
	}

	[Token(Token = "0x6000891")]
	[Address(RVA = "0xF19114", Offset = "0xF19114", VA = "0xF19114")]
	public AmbientMusic()
	{
	}
}
[Token(Token = "0x2000142")]
public class BlinkText : MonoBehaviour
{
	[Token(Token = "0x40006F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private TextMeshPro[] textsToBlink;

	[Token(Token = "0x40006F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool enableBlink;

	[Token(Token = "0x40006F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float blinkSpeed;

	[Token(Token = "0x40006F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float currentAlpha;

	[Token(Token = "0x40006F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private int modifier;

	[Token(Token = "0x6000892")]
	[Address(RVA = "0xF1911C", Offset = "0xF1911C", VA = "0xF1911C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000893")]
	[Address(RVA = "0xF19174", Offset = "0xF19174", VA = "0xF19174")]
	private void Update()
	{
	}

	[Token(Token = "0x6000894")]
	[Address(RVA = "0xF19194", Offset = "0xF19194", VA = "0xF19194")]
	private void updateColorAlpha()
	{
	}

	[Token(Token = "0x6000895")]
	[Address(RVA = "0xF19270", Offset = "0xF19270", VA = "0xF19270")]
	public BlinkText()
	{
	}
}
[Token(Token = "0x2000143")]
public class BombHitTarget : HitTarget
{
	[Token(Token = "0x40006FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private RayfireBomb bomb;

	[Token(Token = "0x40006FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool hasExploded;

	[Token(Token = "0x6000896")]
	[Address(RVA = "0xF19288", Offset = "0xF19288", VA = "0xF19288")]
	private void Start()
	{
	}

	[Token(Token = "0x6000897")]
	[Address(RVA = "0xF192E0", Offset = "0xF192E0", VA = "0xF192E0", Slot = "4")]
	public override bool OnHit(Bullet bullet, Ray ray, RaycastHit hit)
	{
		return default(bool);
	}

	[Token(Token = "0x6000898")]
	[Address(RVA = "0xF193D4", Offset = "0xF193D4", VA = "0xF193D4")]
	private void Explode()
	{
	}

	[Token(Token = "0x6000899")]
	[Address(RVA = "0xF1940C", Offset = "0xF1940C", VA = "0xF1940C")]
	public BombHitTarget()
	{
	}
}
[Token(Token = "0x2000144")]
public class BoxItem : HitTarget
{
	[Token(Token = "0x2000145")]
	public enum Item
	{
		[Token(Token = "0x4000701")]
		caja_AK1,
		[Token(Token = "0x4000702")]
		caja_M16,
		[Token(Token = "0x4000703")]
		caja_SMG,
		[Token(Token = "0x4000704")]
		caja_medkit,
		[Token(Token = "0x4000705")]
		caja_vacia
	}

	[Token(Token = "0x40006FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public Item item;

	[Token(Token = "0x40006FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool randomItem;

	[Token(Token = "0x40006FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
	public bool randomWeapon;

	[Token(Token = "0x40006FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x42")]
	private bool firstHit;

	[Token(Token = "0x600089A")]
	[Address(RVA = "0xF19414", Offset = "0xF19414", VA = "0xF19414")]
	private void Start()
	{
	}

	[Token(Token = "0x600089B")]
	[Address(RVA = "0xF19418", Offset = "0xF19418", VA = "0xF19418")]
	private void initialise()
	{
	}

	[Token(Token = "0x600089C")]
	[Address(RVA = "0xF1964C", Offset = "0xF1964C", VA = "0xF1964C", Slot = "4")]
	public override bool OnHit(Bullet bullet, Ray ray, RaycastHit hit)
	{
		return default(bool);
	}

	[Token(Token = "0x600089D")]
	[Address(RVA = "0xF1974C", Offset = "0xF1974C", VA = "0xF1974C")]
	private void showItemIcon()
	{
	}

	[Token(Token = "0x600089E")]
	[Address(RVA = "0xF19750", Offset = "0xF19750", VA = "0xF19750")]
	public BoxItem()
	{
	}
}
[Token(Token = "0x2000146")]
public class BreakableCoverage : HitTarget
{
	[Token(Token = "0x4000706")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public int resistance;

	[Token(Token = "0x4000707")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public string noBreakAnimation;

	[Token(Token = "0x4000708")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public string breakAnimation;

	[Token(Token = "0x4000709")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Animation anim;

	[Token(Token = "0x600089F")]
	[Address(RVA = "0xF19758", Offset = "0xF19758", VA = "0xF19758")]
	private void Start()
	{
	}

	[Token(Token = "0x60008A0")]
	[Address(RVA = "0xF197B0", Offset = "0xF197B0", VA = "0xF197B0", Slot = "4")]
	public override bool OnHit(Bullet bullet, Ray ray, RaycastHit hit)
	{
		return default(bool);
	}

	[Token(Token = "0x60008A1")]
	[Address(RVA = "0xF1997C", Offset = "0xF1997C", VA = "0xF1997C")]
	public BreakableCoverage()
	{
	}
}
[Token(Token = "0x2000147")]
public class BreakGlass : HitTarget
{
	[Token(Token = "0x400070A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public MeshRenderer optionalMeshRenderer;

	[Token(Token = "0x60008A2")]
	[Address(RVA = "0xF19984", Offset = "0xF19984", VA = "0xF19984")]
	private void Start()
	{
	}

	[Token(Token = "0x60008A3")]
	[Address(RVA = "0xF19A3C", Offset = "0xF19A3C", VA = "0xF19A3C", Slot = "4")]
	public override bool OnHit(Bullet bullet, Ray ray, RaycastHit hit)
	{
		return default(bool);
	}

	[Token(Token = "0x60008A4")]
	[Address(RVA = "0xF19CA4", Offset = "0xF19CA4", VA = "0xF19CA4")]
	public BreakGlass()
	{
	}
}
[Token(Token = "0x2000148")]
public class BreakGlassAnim : HitTarget
{
	[Token(Token = "0x400070B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public MeshRenderer[] glassList;

	[Token(Token = "0x400070C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject associatedVoronoi;

	[Token(Token = "0x400070D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float aliveTime;

	[Token(Token = "0x60008A5")]
	[Address(RVA = "0xF19CAC", Offset = "0xF19CAC", VA = "0xF19CAC")]
	private void Start()
	{
	}

	[Token(Token = "0x60008A6")]
	[Address(RVA = "0xF19CB0", Offset = "0xF19CB0", VA = "0xF19CB0", Slot = "4")]
	public override bool OnHit(Bullet bullet, Ray ray, RaycastHit hit)
	{
		return default(bool);
	}

	[Token(Token = "0x60008A7")]
	[Address(RVA = "0xF19EA8", Offset = "0xF19EA8", VA = "0xF19EA8")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60008A8")]
	[Address(RVA = "0xF19EF4", Offset = "0xF19EF4", VA = "0xF19EF4")]
	private void timeOut()
	{
	}

	[Token(Token = "0x60008A9")]
	[Address(RVA = "0xF19F18", Offset = "0xF19F18", VA = "0xF19F18")]
	public BreakGlassAnim()
	{
	}
}
[Token(Token = "0x2000149")]
public class ButtonsHelper : MonoBehaviour
{
	[Token(Token = "0x200014A")]
	private class ButtonData
	{
		[Token(Token = "0x4000730")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Transform enabledButton;

		[Token(Token = "0x4000731")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform disabledButton;

		[Token(Token = "0x4000732")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TextMesh text;

		[Token(Token = "0x4000733")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string defaultLabel;

		[Token(Token = "0x4000734")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string currentLabel;

		[Token(Token = "0x4000735")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool init;

		[Token(Token = "0x60008C0")]
		[Address(RVA = "0xF1C084", Offset = "0xF1C084", VA = "0xF1C084")]
		public ButtonData(Transform enabledButton, Transform disabledButton, string defaultLabel)
		{
		}

		[Token(Token = "0x60008C1")]
		[Address(RVA = "0xF1C674", Offset = "0xF1C674", VA = "0xF1C674", Slot = "1")]
		~ButtonData()
		{
		}

		[Token(Token = "0x60008C2")]
		[Address(RVA = "0xF1C4B0", Offset = "0xF1C4B0", VA = "0xF1C4B0")]
		public void setButtonState(bool enable, string text = "")
		{
		}

		[Token(Token = "0x60008C3")]
		[Address(RVA = "0xF1C5BC", Offset = "0xF1C5BC", VA = "0xF1C5BC")]
		private void UpdateText()
		{
		}
	}

	[Token(Token = "0x200014B")]
	public enum ButtonState
	{
		[Token(Token = "0x4000737")]
		None,
		[Token(Token = "0x4000738")]
		Grab,
		[Token(Token = "0x4000739")]
		Trigger,
		[Token(Token = "0x400073A")]
		Calibrate,
		[Token(Token = "0x400073B")]
		Reload,
		[Token(Token = "0x400073C")]
		Drop,
		[Token(Token = "0x400073D")]
		All
	}

	[Token(Token = "0x400070E")]
	public const string LABEL_DROP = "helper_drop";

	[Token(Token = "0x400070F")]
	public const string LABEL_GRAB = "helper_grab";

	[Token(Token = "0x4000710")]
	public const string LABEL_RELOAD = "helper_reload";

	[Token(Token = "0x4000711")]
	public const string LABEL_RESETORIENTATION = "helper_resetorientation";

	[Token(Token = "0x4000712")]
	public const string LABEL_SHOOT = "helper_shoot";

	[Token(Token = "0x4000713")]
	public const string LABEL_CHANGEHANDS = "helper_changehands";

	[Token(Token = "0x4000714")]
	public const string LABEL_CALIBRATE = "helper_calibrate";

	[Token(Token = "0x4000715")]
	public const string LABEL_GRABLEFT = "helper_grableft";

	[Token(Token = "0x4000716")]
	public const string LABEL_GRABRIGHT = "helper_grabright";

	[Token(Token = "0x4000717")]
	public const string LABEL_PRESS = "helper_press";

	[Token(Token = "0x4000718")]
	public const string BH_PREFIX = "BH_";

	[Token(Token = "0x4000719")]
	public const string BH_HTC = "Vive";

	[Token(Token = "0x400071A")]
	public const string BH_WMR = "WMR_";

	[Token(Token = "0x400071B")]
	public const string BH_Index = "Index_";

	[Token(Token = "0x400071C")]
	public const string BH_OCULUSRIFT = "OculusRift_";

	[Token(Token = "0x400071D")]
	public const string BH_OCULUSQUESTRIFTS = "OculusQuestRiftS_";

	[Token(Token = "0x400071E")]
	public const string BH_PSMOVE = "PSMove";

	[Token(Token = "0x400071F")]
	public const string BH_AIMCONTROLLER = "AimController";

	[Token(Token = "0x4000720")]
	public const string BH_DUALSHOCK = "Dualshock";

	[Token(Token = "0x4000721")]
	public const string BH_COSMOS = "Cosmos_";

	[Token(Token = "0x4000722")]
	public const string BH_PICONEO2 = "PicoNeo2_";

	[Token(Token = "0x4000723")]
	public const string BH_PICONEO3 = "PicoNeo3_";

	[Token(Token = "0x4000724")]
	public const string BH_PICONEO4 = "PicoNeo4_";

	[Token(Token = "0x4000725")]
	public const string BH_QIYU = "Qiyu_";

	[Token(Token = "0x4000726")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private SVRHand hand;

	[Token(Token = "0x4000727")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private string buttonsHelperName;

	[Token(Token = "0x4000728")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Transform buttonsHelper;

	[Token(Token = "0x4000729")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private ButtonData triggerButton;

	[Token(Token = "0x400072A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private ButtonData grabButton;

	[Token(Token = "0x400072B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private ButtonData actionButton;

	[Token(Token = "0x400072C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private ButtonData menuButton;

	[Token(Token = "0x400072D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool active;

	[Token(Token = "0x400072E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
	private bool initialised;

	[Token(Token = "0x400072F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private ButtonState currentButtonState;

	[Token(Token = "0x60008AA")]
	[Address(RVA = "0xF19F28", Offset = "0xF19F28", VA = "0xF19F28")]
	public void Activate()
	{
	}

	[Token(Token = "0x60008AB")]
	[Address(RVA = "0xF1A4A8", Offset = "0xF1A4A8", VA = "0xF1A4A8")]
	internal void Deactivate()
	{
	}

	[Token(Token = "0x60008AC")]
	[Address(RVA = "0xF1A53C", Offset = "0xF1A53C", VA = "0xF1A53C")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60008AD")]
	[Address(RVA = "0xF1A900", Offset = "0xF1A900", VA = "0xF1A900")]
	private void OnApplicationFocusLost(bool focusLost)
	{
	}

	[Token(Token = "0x60008AE")]
	[Address(RVA = "0xF1A94C", Offset = "0xF1A94C", VA = "0xF1A94C")]
	private void OnBeginInteraction(SVRInteractable interactable)
	{
	}

	[Token(Token = "0x60008AF")]
	[Address(RVA = "0xF1AA1C", Offset = "0xF1AA1C", VA = "0xF1AA1C")]
	private void OnEndInteraction(SVRInteractable interactable)
	{
	}

	[Token(Token = "0x60008B0")]
	[Address(RVA = "0xF1AAEC", Offset = "0xF1AAEC", VA = "0xF1AAEC")]
	private void OnDeviceChanged()
	{
	}

	[Token(Token = "0x60008B1")]
	[Address(RVA = "0xF1AB6C", Offset = "0xF1AB6C", VA = "0xF1AB6C")]
	private void OnHandStateChanged()
	{
	}

	[Token(Token = "0x60008B2")]
	[Address(RVA = "0xF1A3B4", Offset = "0xF1A3B4", VA = "0xF1A3B4")]
	private void initialise()
	{
	}

	[Token(Token = "0x60008B3")]
	[Address(RVA = "0xF1B42C", Offset = "0xF1B42C", VA = "0xF1B42C")]
	public void updateButtonsHelper()
	{
	}

	[Token(Token = "0x60008B4")]
	[Address(RVA = "0xF1B82C", Offset = "0xF1B82C", VA = "0xF1B82C")]
	public void updateButtonsHelper(string buttonMappingName)
	{
	}

	[Token(Token = "0x60008B5")]
	[Address(RVA = "0xF1C270", Offset = "0xF1C270", VA = "0xF1C270")]
	public string GetCalibrateButtonScreenMapping()
	{
		return null;
	}

	[Token(Token = "0x60008B6")]
	[Address(RVA = "0xF1AC6C", Offset = "0xF1AC6C", VA = "0xF1AC6C")]
	private void setHelperName()
	{
	}

	[Token(Token = "0x60008B7")]
	[Address(RVA = "0xF1BD80", Offset = "0xF1BD80", VA = "0xF1BD80")]
	private string getConfig(string buttonMappingName)
	{
		return null;
	}

	[Token(Token = "0x60008B8")]
	[Address(RVA = "0xF1BE48", Offset = "0xF1BE48", VA = "0xF1BE48")]
	public void setLineRenderer(Transform buttonHelper)
	{
	}

	[Token(Token = "0x60008B9")]
	[Address(RVA = "0xF1C358", Offset = "0xF1C358", VA = "0xF1C358")]
	private string getLineRendererPointName(int p, int s)
	{
		return null;
	}

	[Token(Token = "0x60008BA")]
	[Address(RVA = "0xF1A32C", Offset = "0xF1A32C", VA = "0xF1A32C")]
	private void clear()
	{
	}

	[Token(Token = "0x60008BB")]
	[Address(RVA = "0xF1C434", Offset = "0xF1C434", VA = "0xF1C434")]
	private void clear(Transform transform)
	{
	}

	[Token(Token = "0x60008BC")]
	[Address(RVA = "0xF1B468", Offset = "0xF1B468", VA = "0xF1B468")]
	public void setButtonState(ButtonState buttonState, [Optional] string strLabel)
	{
	}

	[Token(Token = "0x60008BD")]
	[Address(RVA = "0xF1C59C", Offset = "0xF1C59C", VA = "0xF1C59C")]
	public ButtonsHelper()
	{
	}
}
[Token(Token = "0x200014C")]
public class CameraRenderDepthTexture : MonoBehaviour
{
	[Token(Token = "0x60008C4")]
	[Address(RVA = "0xF1C7AC", Offset = "0xF1C7AC", VA = "0xF1C7AC")]
	private void Start()
	{
	}

	[Token(Token = "0x60008C5")]
	[Address(RVA = "0xF1C808", Offset = "0xF1C808", VA = "0xF1C808")]
	public CameraRenderDepthTexture()
	{
	}
}
[Token(Token = "0x200014D")]
public class CharacterMaterials : MonoBehaviour
{
	[Token(Token = "0x400073E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Material[] materialsList;

	[Token(Token = "0x60008C6")]
	[Address(RVA = "0xF1C810", Offset = "0xF1C810", VA = "0xF1C810")]
	public Material getRandomMaterial()
	{
		return null;
	}

	[Token(Token = "0x60008C7")]
	[Address(RVA = "0xF1C860", Offset = "0xF1C860", VA = "0xF1C860")]
	public CharacterMaterials()
	{
	}
}
[Token(Token = "0x200014E")]
public class CharacterSphereRaycastItem : SphereHitRaycastItem
{
	[Token(Token = "0x400073F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private CommonCharacterController m_character;

	[Token(Token = "0x60008C8")]
	[Address(RVA = "0xF1C868", Offset = "0xF1C868", VA = "0xF1C868", Slot = "4")]
	public override void changeToPhysicsColliders(bool bValue)
	{
	}

	[Token(Token = "0x60008C9")]
	[Address(RVA = "0xF1C97C", Offset = "0xF1C97C", VA = "0xF1C97C", Slot = "5")]
	public override bool OnHit(Bullet bullet, SphereHit sphereCollision)
	{
		return default(bool);
	}

	[Token(Token = "0x60008CA")]
	[Address(RVA = "0xF1C8D4", Offset = "0xF1C8D4", VA = "0xF1C8D4")]
	public CommonCharacterController getCharacter()
	{
		return null;
	}

	[Token(Token = "0x60008CB")]
	[Address(RVA = "0xF1CB7C", Offset = "0xF1CB7C", VA = "0xF1CB7C")]
	public CharacterSphereRaycastItem()
	{
	}
}
[Token(Token = "0x200014F")]
public class CopyComponentUtil
{
	[Token(Token = "0x60008CC")]
	public static T CopyComponent<T>(T original, GameObject destination) where T : Component
	{
		return null;
	}

	[Token(Token = "0x60008CD")]
	[Address(RVA = "0xF1CB84", Offset = "0xF1CB84", VA = "0xF1CB84")]
	public CopyComponentUtil()
	{
	}
}
[Token(Token = "0x2000150")]
public class CountDown : MonoBehaviour
{
	[Token(Token = "0x4000740")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private TextMeshPro text;

	[Token(Token = "0x4000741")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int currentTime;

	[Token(Token = "0x4000742")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject[] bonusTime;

	[Token(Token = "0x4000743")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Vector3 bonusPosition;

	[Token(Token = "0x4000744")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static int[] timeSplit;

	[Token(Token = "0x60008CE")]
	[Address(RVA = "0xF1CB8C", Offset = "0xF1CB8C", VA = "0xF1CB8C")]
	private void Start()
	{
	}

	[Token(Token = "0x60008CF")]
	[Address(RVA = "0xF1CCC8", Offset = "0xF1CCC8", VA = "0xF1CCC8")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60008D0")]
	[Address(RVA = "0xF1CD8C", Offset = "0xF1CD8C", VA = "0xF1CD8C")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x60008D1")]
	[Address(RVA = "0xF1CFC4", Offset = "0xF1CFC4", VA = "0xF1CFC4")]
	private void updateTime()
	{
	}

	[Token(Token = "0x60008D2")]
	[Address(RVA = "0xF1D2D8", Offset = "0xF1D2D8", VA = "0xF1D2D8")]
	private void OnTimeAdded(float seconds)
	{
	}

	[Token(Token = "0x60008D3")]
	[Address(RVA = "0xF1D618", Offset = "0xF1D618", VA = "0xF1D618")]
	private GameObject GetBonusTime()
	{
		return null;
	}

	[Token(Token = "0x60008D4")]
	[Address(RVA = "0xF1D688", Offset = "0xF1D688", VA = "0xF1D688")]
	public CountDown()
	{
	}
}
[Token(Token = "0x2000152")]
public class AnimationEventHandler : MonoBehaviour
{
	[Token(Token = "0x2000153")]
	public delegate void Event();

	[Token(Token = "0x2000154")]
	public delegate void EventInt(int e);

	[Token(Token = "0x2000155")]
	public delegate void EventString(string e);

	[Token(Token = "0x14000010")]
	public event Event OnAnimationEvent
	{
		[Token(Token = "0x60008DA")]
		[Address(RVA = "0xF1D7A0", Offset = "0xF1D7A0", VA = "0xF1D7A0")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x60008DB")]
		[Address(RVA = "0xF1D83C", Offset = "0xF1D83C", VA = "0xF1D83C")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x14000011")]
	public event EventInt OnAnimationEventInt
	{
		[Token(Token = "0x60008DC")]
		[Address(RVA = "0xF1D8D8", Offset = "0xF1D8D8", VA = "0xF1D8D8")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x60008DD")]
		[Address(RVA = "0xF1D974", Offset = "0xF1D974", VA = "0xF1D974")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x14000012")]
	public event EventString OnAnimationEventString
	{
		[Token(Token = "0x60008DE")]
		[Address(RVA = "0xF1DA10", Offset = "0xF1DA10", VA = "0xF1DA10")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x60008DF")]
		[Address(RVA = "0xF1DAAC", Offset = "0xF1DAAC", VA = "0xF1DAAC")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x60008E0")]
	[Address(RVA = "0xF1DB48", Offset = "0xF1DB48", VA = "0xF1DB48", Slot = "4")]
	public virtual void OnEvent()
	{
	}

	[Token(Token = "0x60008E1")]
	[Address(RVA = "0xF1DB64", Offset = "0xF1DB64", VA = "0xF1DB64", Slot = "5")]
	public virtual void OnEventInt(int e)
	{
	}

	[Token(Token = "0x60008E2")]
	[Address(RVA = "0xF1DB80", Offset = "0xF1DB80", VA = "0xF1DB80", Slot = "6")]
	public virtual void OnEventString(string e)
	{
	}

	[Token(Token = "0x60008E3")]
	[Address(RVA = "0xF1DB9C", Offset = "0xF1DB9C", VA = "0xF1DB9C")]
	public AnimationEventHandler()
	{
	}
}
[Token(Token = "0x2000156")]
public class AnimationReplacement : MonoBehaviour
{
	[Token(Token = "0x60008F0")]
	[Address(RVA = "0xF1DF4C", Offset = "0xF1DF4C", VA = "0xF1DF4C")]
	public AnimationReplacement()
	{
	}
}
[Token(Token = "0x2000157")]
public class ButtonHandler : HitTarget, ISVRLaserPointable
{
	[Token(Token = "0x400074B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private Vector3 initScale;

	[Token(Token = "0x60008F1")]
	[Address(RVA = "0xF1DF54", Offset = "0xF1DF54", VA = "0xF1DF54")]
	private void Awake()
	{
	}

	[Token(Token = "0x60008F2")]
	[Address(RVA = "0xF1DF84", Offset = "0xF1DF84", VA = "0xF1DF84", Slot = "4")]
	public override bool OnHit(Bullet bullet, Ray ray, RaycastHit hit)
	{
		return default(bool);
	}

	[Token(Token = "0x60008F3")]
	[Address(RVA = "0xF1E12C", Offset = "0xF1E12C", VA = "0xF1E12C", Slot = "9")]
	public bool OnHoverEnter(SVRLaserPointer pointer)
	{
		return default(bool);
	}

	[Token(Token = "0x60008F4")]
	[Address(RVA = "0xF1E2B4", Offset = "0xF1E2B4", VA = "0xF1E2B4", Slot = "10")]
	public bool OnHoverExit(SVRLaserPointer pointer)
	{
		return default(bool);
	}

	[Token(Token = "0x60008F5")]
	[Address(RVA = "0xF1E428", Offset = "0xF1E428", VA = "0xF1E428")]
	public ButtonHandler()
	{
	}
}
[Token(Token = "0x2000158")]
public class CV2_BHapticsButton : UIButton
{
	[Token(Token = "0x400074C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public GameObject[] menu;

	[Token(Token = "0x400074D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private bool open;

	[Token(Token = "0x60008F6")]
	[Address(RVA = "0xF1E488", Offset = "0xF1E488", VA = "0xF1E488", Slot = "4")]
	public override bool OnHit(Bullet bullet, Ray ray, RaycastHit hit)
	{
		return default(bool);
	}

	[Token(Token = "0x60008F7")]
	[Address(RVA = "0xF1E55C", Offset = "0xF1E55C", VA = "0xF1E55C")]
	public CV2_BHapticsButton()
	{
	}
}
[Token(Token = "0x2000159")]
public class Blink : MonoBehaviour
{
	[Token(Token = "0x400074E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float blinkInterval;

	[Token(Token = "0x400074F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private GameObject blinkGameObject;

	[Token(Token = "0x4000750")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float lastBlinkChange;

	[Token(Token = "0x60008F8")]
	[Address(RVA = "0xF1E564", Offset = "0xF1E564", VA = "0xF1E564")]
	private void Awake()
	{
	}

	[Token(Token = "0x60008F9")]
	[Address(RVA = "0xF1E5A8", Offset = "0xF1E5A8", VA = "0xF1E5A8")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60008FA")]
	[Address(RVA = "0xF1E5C4", Offset = "0xF1E5C4", VA = "0xF1E5C4")]
	private void Update()
	{
	}

	[Token(Token = "0x60008FB")]
	[Address(RVA = "0xF1E630", Offset = "0xF1E630", VA = "0xF1E630")]
	public void SetBlinkGameObject(GameObject blinkGameObject)
	{
	}

	[Token(Token = "0x60008FC")]
	[Address(RVA = "0xF1E670", Offset = "0xF1E670", VA = "0xF1E670")]
	public void ResetBlinkGameObject()
	{
	}

	[Token(Token = "0x60008FD")]
	[Address(RVA = "0xF1E6D8", Offset = "0xF1E6D8", VA = "0xF1E6D8")]
	public Blink()
	{
	}
}
[Token(Token = "0x200015A")]
public class Body : MonoBehaviour
{
	[Token(Token = "0x4000751")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Transform head;

	[Token(Token = "0x60008FE")]
	[Address(RVA = "0xF1E6E8", Offset = "0xF1E6E8", VA = "0xF1E6E8")]
	private void Start()
	{
	}

	[Token(Token = "0x60008FF")]
	[Address(RVA = "0xF1E768", Offset = "0xF1E768", VA = "0xF1E768")]
	private void Update()
	{
	}

	[Token(Token = "0x6000900")]
	[Address(RVA = "0xF1E814", Offset = "0xF1E814", VA = "0xF1E814")]
	public Body()
	{
	}
}
[Token(Token = "0x200015B")]
public class ChallengesComingSoon : MonoBehaviour
{
	[Token(Token = "0x4000752")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject coomingSoon;

	[Token(Token = "0x4000753")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject[] disableObjects;

	[Token(Token = "0x6000901")]
	[Address(RVA = "0xF1E81C", Offset = "0xF1E81C", VA = "0xF1E81C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000902")]
	[Address(RVA = "0xF1E898", Offset = "0xF1E898", VA = "0xF1E898")]
	public ChallengesComingSoon()
	{
	}
}
[Token(Token = "0x200015C")]
public class CharacterCreatorUtility : MonoBehaviour
{
	[Token(Token = "0x4000754")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<GameObject> characters;

	[Token(Token = "0x6000903")]
	[Address(RVA = "0xF1E8A0", Offset = "0xF1E8A0", VA = "0xF1E8A0")]
	public CharacterCreatorUtility()
	{
	}
}
[Token(Token = "0x200015D")]
public class CharacterPool
{
	[Token(Token = "0x4000755")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private CommonCharacterController[] characters;

	[Token(Token = "0x4000756")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private int lastCharacterInstantiated;

	[Token(Token = "0x4000757")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private List<CommonCharacterController> avaiableCharacters;

	[Token(Token = "0x6000904")]
	[Address(RVA = "0xF1E8A8", Offset = "0xF1E8A8", VA = "0xF1E8A8")]
	public void Initialise(GameObject pooledCharacter)
	{
	}

	[Token(Token = "0x6000905")]
	[Address(RVA = "0xF1EA84", Offset = "0xF1EA84", VA = "0xF1EA84")]
	public CommonCharacterController GetPooledCharacter(int poolInstance = -1)
	{
		return null;
	}

	[Token(Token = "0x6000906")]
	[Address(RVA = "0xF1EC8C", Offset = "0xF1EC8C", VA = "0xF1EC8C")]
	private CommonCharacterController findAvailableCharacter(int poolInstance)
	{
		return null;
	}

	[Token(Token = "0x6000907")]
	[Address(RVA = "0xF1EDB0", Offset = "0xF1EDB0", VA = "0xF1EDB0")]
	public bool IsAvailableCharacter(int poolInstance)
	{
		return default(bool);
	}

	[Token(Token = "0x6000908")]
	[Address(RVA = "0xF1EE58", Offset = "0xF1EE58", VA = "0xF1EE58")]
	private void AddPooledCharacter(CommonCharacterController character)
	{
	}

	[Token(Token = "0x6000909")]
	[Address(RVA = "0xF1EFA4", Offset = "0xF1EFA4", VA = "0xF1EFA4")]
	public CharacterPool()
	{
	}
}
[Token(Token = "0x200015E")]
public class CharacterPoolData : MonoBehaviour
{
	[Token(Token = "0x4000758")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public CommonCharacterController[] characters;

	[Token(Token = "0x600090A")]
	[Address(RVA = "0xF1F02C", Offset = "0xF1F02C", VA = "0xF1F02C")]
	public CharacterPoolData()
	{
	}
}
[Token(Token = "0x200015F")]
public class CharacterPoolManager : MonoBehaviour
{
	[Token(Token = "0x4000759")]
	private const float RECOMBINE_AFTER_SECONDS = 1f;

	[Token(Token = "0x400075A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Vector3 DISABLED_POSITION;

	[Token(Token = "0x400075B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static CharacterPoolManager Instance;

	[Token(Token = "0x400075C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject[] characterPoolObjects;

	[Token(Token = "0x400075D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private MB3_MeshBaker meshBaker;

	[Token(Token = "0x400075E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float lastRecombineTime;

	[Token(Token = "0x400075F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private HashSet<CommonCharacterController> charactersToAdd;

	[Token(Token = "0x4000760")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private HashSet<CommonCharacterController> charactersToRemove;

	[Token(Token = "0x4000761")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Dictionary<string, CharacterPool> characterPools;

	[Token(Token = "0x4000762")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private SkinnedMeshRenderer skinnedMesh;

	[Token(Token = "0x600090B")]
	[Address(RVA = "0xF1F034", Offset = "0xF1F034", VA = "0xF1F034")]
	private void Awake()
	{
	}

	[Token(Token = "0x600090C")]
	[Address(RVA = "0xF1F1D4", Offset = "0xF1F1D4", VA = "0xF1F1D4")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600090D")]
	[Address(RVA = "0xF1F230", Offset = "0xF1F230", VA = "0xF1F230")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x600090E")]
	[Address(RVA = "0xF1F9E8", Offset = "0xF1F9E8", VA = "0xF1F9E8")]
	private void OnCharacterDisabled(CommonCharacterController character)
	{
	}

	[Token(Token = "0x600090F")]
	[Address(RVA = "0xF1FCAC", Offset = "0xF1FCAC", VA = "0xF1FCAC")]
	private void OnCharacterEnabled(CommonCharacterController character)
	{
	}

	[Token(Token = "0x6000910")]
	[Address(RVA = "0xF1F2AC", Offset = "0xF1F2AC", VA = "0xF1F2AC")]
	public void UpdateMeshBaker()
	{
	}

	[Token(Token = "0x6000911")]
	[Address(RVA = "0xF1FDF0", Offset = "0xF1FDF0", VA = "0xF1FDF0")]
	public CommonCharacterController GetCharacter(string characterPool, int poolInstance)
	{
		return null;
	}

	[Token(Token = "0x6000912")]
	[Address(RVA = "0xF1FF60", Offset = "0xF1FF60", VA = "0xF1FF60")]
	public void AddCharacter(CommonCharacterController character)
	{
	}

	[Token(Token = "0x6000913")]
	[Address(RVA = "0xF1FFB8", Offset = "0xF1FFB8", VA = "0xF1FFB8")]
	public CharacterPoolManager()
	{
	}
}
[Token(Token = "0x2000160")]
public class CharacterSet : MonoBehaviour
{
	[Token(Token = "0x4000763")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject[] additionalObjects;

	[Token(Token = "0x4000764")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject[] renderers;

	[Token(Token = "0x4000765")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool isMale;

	[Token(Token = "0x6000915")]
	[Address(RVA = "0xF20118", Offset = "0xF20118", VA = "0xF20118")]
	public void SetVisibility(bool enable)
	{
	}

	[Token(Token = "0x6000916")]
	[Address(RVA = "0xF20198", Offset = "0xF20198", VA = "0xF20198")]
	public GameObject[] GetRenderers()
	{
		return null;
	}

	[Token(Token = "0x6000917")]
	[Address(RVA = "0xF201A0", Offset = "0xF201A0", VA = "0xF201A0")]
	public CharacterSet()
	{
	}
}
[Token(Token = "0x2000161")]
public class CopyTransform : MonoBehaviour
{
	[Token(Token = "0x4000766")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform original;

	[Token(Token = "0x4000767")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform target;

	[Token(Token = "0x4000768")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool copy;

	[Token(Token = "0x6000918")]
	[Address(RVA = "0xF201B0", Offset = "0xF201B0", VA = "0xF201B0")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x6000919")]
	[Address(RVA = "0xF201C4", Offset = "0xF201C4", VA = "0xF201C4")]
	private void copyTransforms()
	{
	}

	[Token(Token = "0x600091A")]
	[Address(RVA = "0xF20340", Offset = "0xF20340", VA = "0xF20340")]
	public CopyTransform()
	{
	}
}
[Token(Token = "0x2000162")]
public class DebugManager : MonoBehaviour
{
	[Token(Token = "0x2000163")]
	public enum AutoAim
	{
		[Token(Token = "0x4000784")]
		None,
		[Token(Token = "0x4000785")]
		On,
		[Token(Token = "0x4000786")]
		Off
	}

	[Token(Token = "0x4000769")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static DebugManager Instance;

	[Token(Token = "0x400076A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform debugPointer;

	[Token(Token = "0x400076B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform canvas;

	[Token(Token = "0x400076C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject debugVR;

	[Token(Token = "0x400076D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject debugNoVR;

	[Token(Token = "0x400076E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public SVRButtons[] debugVRButtons;

	[Token(Token = "0x400076F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public KeyCode[] debugNoVRButtons;

	[Token(Token = "0x4000770")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public string startMissionKey;

	[Token(Token = "0x4000771")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public bool playerColliders;

	[Token(Token = "0x4000772")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
	public bool immortal;

	[Token(Token = "0x4000773")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public float bonusProbability;

	[Token(Token = "0x4000774")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public bool autoConnectRandom;

	[Token(Token = "0x4000775")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public int coins;

	[Token(Token = "0x4000776")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public bool unlockMissions;

	[Token(Token = "0x4000777")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
	public bool clearPlayerPrefs;

	[Token(Token = "0x4000778")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public AutoAim autoAim;

	[Token(Token = "0x4000779")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public AutoAim autoReload;

	[Token(Token = "0x400077A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public bool showTutorial;

	[Token(Token = "0x400077B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public string playerName;

	[Token(Token = "0x400077C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private float lastPressed;

	[Token(Token = "0x400077D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private int raycastLayer;

	[Token(Token = "0x400077E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private RaycastHit hit;

	[Token(Token = "0x400077F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private Button selectedButton;

	[Token(Token = "0x4000780")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public bool changeDifficulty;

	[Token(Token = "0x4000781")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	public GameManager.Difficulty difficulty;

	[Token(Token = "0x4000782")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public bool backToBase;

	[Token(Token = "0x600091B")]
	[Address(RVA = "0xF20348", Offset = "0xF20348", VA = "0xF20348")]
	private void Awake()
	{
	}

	[Token(Token = "0x600091C")]
	[Address(RVA = "0xF20458", Offset = "0xF20458", VA = "0xF20458")]
	public static bool IsDebug()
	{
		return default(bool);
	}

	[Token(Token = "0x600091D")]
	[Address(RVA = "0xF204D0", Offset = "0xF204D0", VA = "0xF204D0")]
	private void Start()
	{
	}

	[Token(Token = "0x600091E")]
	[Address(RVA = "0xF20E1C", Offset = "0xF20E1C", VA = "0xF20E1C")]
	private void Update()
	{
	}

	[Token(Token = "0x600091F")]
	[Address(RVA = "0xF2187C", Offset = "0xF2187C", VA = "0xF2187C")]
	private void DoDebugAction()
	{
	}

	[Token(Token = "0x6000920")]
	[Address(RVA = "0xF20BE0", Offset = "0xF20BE0", VA = "0xF20BE0")]
	private void UnlockMissions()
	{
	}

	[Token(Token = "0x6000921")]
	[Address(RVA = "0xF21CDC", Offset = "0xF21CDC", VA = "0xF21CDC")]
	private void SetLocation(string locationName)
	{
	}

	[Token(Token = "0x6000922")]
	[Address(RVA = "0xF21864", Offset = "0xF21864", VA = "0xF21864")]
	private void updateState()
	{
	}

	[Token(Token = "0x6000923")]
	[Address(RVA = "0xF22100", Offset = "0xF22100", VA = "0xF22100")]
	private void updateStateColliders()
	{
	}

	[Token(Token = "0x6000924")]
	[Address(RVA = "0xF221F4", Offset = "0xF221F4", VA = "0xF221F4")]
	private void updateStateImmortal()
	{
	}

	[Token(Token = "0x6000925")]
	[Address(RVA = "0xF21F80", Offset = "0xF21F80", VA = "0xF21F80")]
	private void TogglePlayerColliders()
	{
	}

	[Token(Token = "0x6000926")]
	[Address(RVA = "0xF22000", Offset = "0xF22000", VA = "0xF22000")]
	private void TogglePlayerImmortal()
	{
	}

	[Token(Token = "0x6000927")]
	[Address(RVA = "0xF21C78", Offset = "0xF21C78", VA = "0xF21C78")]
	private void KillEnemies()
	{
	}

	[Token(Token = "0x6000928")]
	[Address(RVA = "0xF22080", Offset = "0xF22080", VA = "0xF22080")]
	private void MoveNextLocation()
	{
	}

	[Token(Token = "0x6000929")]
	[Address(RVA = "0xF222E8", Offset = "0xF222E8", VA = "0xF222E8")]
	public DebugManager()
	{
	}
}
[Token(Token = "0x2000167")]
public class DerrickLifes : MonoBehaviour
{
	[Token(Token = "0x400078C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject weakPointRing;

	[Token(Token = "0x400078D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private ThiefPoliceController character;

	[Token(Token = "0x400078E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float hitCooldownTime;

	[Token(Token = "0x400078F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float lastHit;

	[Token(Token = "0x4000790")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private string impactPool;

	[Token(Token = "0x6000934")]
	[Address(RVA = "0xF226EC", Offset = "0xF226EC", VA = "0xF226EC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000935")]
	[Address(RVA = "0xF228D8", Offset = "0xF228D8", VA = "0xF228D8")]
	private void OnHit(HitEvent hitEvent)
	{
	}

	[Token(Token = "0x6000936")]
	[Address(RVA = "0xF23000", Offset = "0xF23000", VA = "0xF23000")]
	private void OnDead()
	{
	}

	[Token(Token = "0x6000937")]
	[Address(RVA = "0xF22E44", Offset = "0xF22E44", VA = "0xF22E44")]
	private void ShowMetalImpact(RaycastHit hit)
	{
	}

	[Token(Token = "0x6000938")]
	[Address(RVA = "0xF22CE8", Offset = "0xF22CE8", VA = "0xF22CE8")]
	private void ShowImpact(RaycastHit hit)
	{
	}

	[Token(Token = "0x6000939")]
	[Address(RVA = "0xF23084", Offset = "0xF23084", VA = "0xF23084")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600093A")]
	[Address(RVA = "0xF230A4", Offset = "0xF230A4", VA = "0xF230A4")]
	public DerrickLifes()
	{
	}
}
[Token(Token = "0x2000168")]
public class DestructibleAnimation : AimTarget
{
	[Token(Token = "0x2000169")]
	private class ObjectData
	{
		[Token(Token = "0x40007A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public GameObject objeto;

		[Token(Token = "0x40007A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector3 original_scale;

		[Token(Token = "0x6000946")]
		[Address(RVA = "0xF2357C", Offset = "0xF2357C", VA = "0xF2357C")]
		public ObjectData(GameObject objeto)
		{
		}

		[Token(Token = "0x6000947")]
		[Address(RVA = "0xF23F98", Offset = "0xF23F98", VA = "0xF23F98")]
		public void ResetScale()
		{
		}

		[Token(Token = "0x6000948")]
		[Address(RVA = "0xF2411C", Offset = "0xF2411C", VA = "0xF2411C")]
		public void HideWithScale()
		{
		}
	}

	[Token(Token = "0x4000791")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public SumalabEvent OnDestroy;

	[Token(Token = "0x4000792")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public AnimationClip anim;

	[Token(Token = "0x4000793")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public List<GameObject> non_destroyed_object;

	[Token(Token = "0x4000794")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public List<GameObject> destroyed_object;

	[Token(Token = "0x4000795")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public WeaponModel[] affectedBy;

	[Token(Token = "0x4000796")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public int hitPoints;

	[Token(Token = "0x4000797")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public float disableGroupTimeout;

	[Token(Token = "0x4000798")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public bool disable;

	[Token(Token = "0x4000799")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x81")]
	private bool destroyed;

	[Token(Token = "0x400079A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x82")]
	public bool destroyEnable;

	[Token(Token = "0x400079B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x83")]
	public bool destroyRemoteEnable;

	[Token(Token = "0x400079C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public bool hideWithScaleToZero;

	[Token(Token = "0x400079D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private Animator animator;

	[Token(Token = "0x400079E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public float maxOnHitDistance;

	[Token(Token = "0x400079F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private List<ObjectData> non_destroyed_object_list;

	[Token(Token = "0x600093C")]
	[Address(RVA = "0xF2321C", Offset = "0xF2321C", VA = "0xF2321C")]
	public void Start()
	{
	}

	[Token(Token = "0x600093D")]
	[Address(RVA = "0xF235D8", Offset = "0xF235D8", VA = "0xF235D8", Slot = "4")]
	public override bool OnHit(Bullet bullet, Ray ray, RaycastHit hit)
	{
		return default(bool);
	}

	[Token(Token = "0x600093E")]
	[Address(RVA = "0xF23724", Offset = "0xF23724", VA = "0xF23724")]
	private bool OnHitDistance(Bullet bullet, RaycastHit hit)
	{
		return default(bool);
	}

	[Token(Token = "0x600093F")]
	[Address(RVA = "0xF23C80", Offset = "0xF23C80", VA = "0xF23C80")]
	public void Reset()
	{
	}

	[Token(Token = "0x6000940")]
	[Address(RVA = "0xF2387C", Offset = "0xF2387C", VA = "0xF2387C")]
	public void Destroy()
	{
	}

	[Token(Token = "0x6000941")]
	[Address(RVA = "0xF236DC", Offset = "0xF236DC", VA = "0xF236DC")]
	private bool IsAffectedBy(WeaponModel weaponModel)
	{
		return default(bool);
	}

	[Token(Token = "0x6000942")]
	[Address(RVA = "0xF2418C", Offset = "0xF2418C", VA = "0xF2418C")]
	private void disableGroup(bool disable)
	{
	}

	[Token(Token = "0x6000943")]
	[Address(RVA = "0xF23FCC", Offset = "0xF23FCC", VA = "0xF23FCC")]
	private void enableGroup()
	{
	}

	[Token(Token = "0x6000944")]
	[Address(RVA = "0xF24328", Offset = "0xF24328", VA = "0xF24328")]
	public DestructibleAnimation()
	{
	}
}
[Token(Token = "0x200016A")]
public class DestructibleComplex : MonoBehaviour
{
	[Token(Token = "0x40007A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public DestructibleAnimation[] destructibleParts;

	[Token(Token = "0x40007A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int index;

	[Token(Token = "0x6000949")]
	[Address(RVA = "0xF24414", Offset = "0xF24414", VA = "0xF24414")]
	private void Start()
	{
	}

	[Token(Token = "0x600094A")]
	[Address(RVA = "0xF24590", Offset = "0xF24590", VA = "0xF24590")]
	private void OnPartDestroyed()
	{
	}

	[Token(Token = "0x600094B")]
	[Address(RVA = "0xF2470C", Offset = "0xF2470C", VA = "0xF2470C")]
	public DestructibleComplex()
	{
	}
}
[Token(Token = "0x200016B")]
public class DestructibleTriggerEvent : MonoBehaviour
{
	[Token(Token = "0x40007A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private DestructibleAnimation destructible;

	[Token(Token = "0x600094C")]
	[Address(RVA = "0xF24714", Offset = "0xF24714", VA = "0xF24714")]
	private void Awake()
	{
	}

	[Token(Token = "0x600094D")]
	[Address(RVA = "0xF2482C", Offset = "0xF2482C", VA = "0xF2482C")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x600094E")]
	[Address(RVA = "0xF24844", Offset = "0xF24844", VA = "0xF24844")]
	public DestructibleTriggerEvent()
	{
	}
}
[Token(Token = "0x200016C")]
public class DuckPosition : MonoBehaviour
{
	[Token(Token = "0x40007A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool available;

	[Token(Token = "0x600094F")]
	[Address(RVA = "0xF2484C", Offset = "0xF2484C", VA = "0xF2484C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000950")]
	[Address(RVA = "0xF24850", Offset = "0xF24850", VA = "0xF24850")]
	private void Update()
	{
	}

	[Token(Token = "0x6000951")]
	[Address(RVA = "0xF24854", Offset = "0xF24854", VA = "0xF24854")]
	public DuckPosition()
	{
	}
}
[Token(Token = "0x200016D")]
public class DucksGamePanel : MonoBehaviour
{
	[Token(Token = "0x40007A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TextMeshPro ducks;

	[Token(Token = "0x40007A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TextMeshPro ducksRecord;

	[Token(Token = "0x40007A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public UIButton finish;

	[Token(Token = "0x6000952")]
	[Address(RVA = "0xF24864", Offset = "0xF24864", VA = "0xF24864")]
	private void Start()
	{
	}

	[Token(Token = "0x6000953")]
	[Address(RVA = "0xF24868", Offset = "0xF24868", VA = "0xF24868")]
	private void Update()
	{
	}

	[Token(Token = "0x6000954")]
	[Address(RVA = "0xF2486C", Offset = "0xF2486C", VA = "0xF2486C")]
	public DucksGamePanel()
	{
	}
}
[Token(Token = "0x200016E")]
public class EnumFlagAttribute : PropertyAttribute
{
	[Token(Token = "0x6000955")]
	[Address(RVA = "0xF24874", Offset = "0xF24874", VA = "0xF24874")]
	public EnumFlagAttribute()
	{
	}
}
[Token(Token = "0x200016F")]
public class FireAnimationData : ScriptableObject
{
	[Serializable]
	[Token(Token = "0x2000170")]
	public class HandedFireAnimationData
	{
		[Token(Token = "0x40007AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string fireStateName;

		[Token(Token = "0x40007AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string coverStateName;

		[Token(Token = "0x40007AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string idleStateName;

		[Token(Token = "0x40007AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float fireMaxTimeIK;

		[Token(Token = "0x40007AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float fireMinTimeIK;

		[Token(Token = "0x40007B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float coverMaxTimeLayer;

		[Token(Token = "0x40007B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float coverMinTimeLayer;

		[Token(Token = "0x40007B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float fireMaxTimeLayer;

		[Token(Token = "0x40007B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float fireMinTimeLayer;

		[Token(Token = "0x40007B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float fireMinTimeCover;

		[Token(Token = "0x40007B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public float minLayerWeight;

		[Token(Token = "0x40007B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public float lerpIKSpeed;

		[Token(Token = "0x40007B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public float lerpLayerSpeed;

		[Token(Token = "0x40007B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public bool mirror;

		[Token(Token = "0x40007B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
		public bool rotationAllowed;

		[Token(Token = "0x40007BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public float idle;

		[Token(Token = "0x6000957")]
		[Address(RVA = "0xF24884", Offset = "0xF24884", VA = "0xF24884")]
		public HandedFireAnimationData()
		{
		}
	}

	[Token(Token = "0x40007A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public HandedFireAnimationData oneHandedAnimationData;

	[Token(Token = "0x40007AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public HandedFireAnimationData twoHandedAnimationData;

	[Token(Token = "0x6000956")]
	[Address(RVA = "0xF2487C", Offset = "0xF2487C", VA = "0xF2487C")]
	public FireAnimationData()
	{
	}
}
[Token(Token = "0x2000171")]
public class FireAnimationDataSet : ScriptableObject
{
	[Token(Token = "0x40007BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<FireAnimationData> animationDataList;

	[Token(Token = "0x6000958")]
	[Address(RVA = "0xF2488C", Offset = "0xF2488C", VA = "0xF2488C")]
	public FireAnimationDataSet()
	{
	}
}
[Token(Token = "0x2000172")]
public class GestureOption : MonoBehaviour
{
	[Token(Token = "0x40007BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public SumalabEvent<string> OnGestureSelected;

	[Token(Token = "0x40007BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string gestureName;

	[Token(Token = "0x6000959")]
	[Address(RVA = "0xF24894", Offset = "0xF24894", VA = "0xF24894")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x600095A")]
	[Address(RVA = "0xF248E8", Offset = "0xF248E8", VA = "0xF248E8")]
	public GestureOption()
	{
	}
}
[Token(Token = "0x2000173")]
public class HitScore : MonoBehaviour
{
	[Token(Token = "0x40007BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TextMeshPro comboText;

	[Token(Token = "0x40007BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TextMeshPro hitText;

	[Token(Token = "0x40007C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public TextMeshPro scoreText;

	[Token(Token = "0x40007C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject headshot;

	[Token(Token = "0x40007C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Material positiveScoreMaterial;

	[Token(Token = "0x40007C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Material negativeScoreMaterial;

	[Token(Token = "0x40007C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Transform t;

	[Token(Token = "0x40007C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public bool followParent;

	[Token(Token = "0x600095B")]
	[Address(RVA = "0xF24970", Offset = "0xF24970", VA = "0xF24970")]
	public void ShowScore(string scoreText, Transform parent, Material mat, bool bHeadshot = false)
	{
	}

	[Token(Token = "0x600095C")]
	[Address(RVA = "0xF24EAC", Offset = "0xF24EAC", VA = "0xF24EAC")]
	public void ShowScore(string comboText, string scoreText, Transform parent, Material mat)
	{
	}

	[Token(Token = "0x600095D")]
	[Address(RVA = "0xF2546C", Offset = "0xF2546C", VA = "0xF2546C")]
	private void Update()
	{
	}

	[Token(Token = "0x600095E")]
	[Address(RVA = "0xF25538", Offset = "0xF25538", VA = "0xF25538")]
	public HitScore()
	{
	}
}
[Token(Token = "0x2000174")]
public class InGameMessage : MonoBehaviour
{
	[Token(Token = "0x2000175")]
	public enum MessageType
	{
		[Token(Token = "0x40007CB")]
		Message_TeammateDisconnected
	}

	[Token(Token = "0x40007C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public UIButton button;

	[Token(Token = "0x40007C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject messageObj;

	[Token(Token = "0x40007C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public TextMeshPro textMesh;

	[Token(Token = "0x40007C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool showMessage;

	[Token(Token = "0x6000961")]
	[Address(RVA = "0xF25590", Offset = "0xF25590", VA = "0xF25590")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000962")]
	[Address(RVA = "0xF2570C", Offset = "0xF2570C", VA = "0xF2570C")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000963")]
	[Address(RVA = "0xF257C4", Offset = "0xF257C4", VA = "0xF257C4")]
	public void ShowMessage(MessageType messageType)
	{
	}

	[Token(Token = "0x6000964")]
	[Address(RVA = "0xF258D4", Offset = "0xF258D4", VA = "0xF258D4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000965")]
	[Address(RVA = "0xF25A1C", Offset = "0xF25A1C", VA = "0xF25A1C")]
	private void OnTeammateDisconnected()
	{
	}

	[Token(Token = "0x6000966")]
	[Address(RVA = "0xF25A90", Offset = "0xF25A90", VA = "0xF25A90")]
	private void OnButtonPressed()
	{
	}

	[Token(Token = "0x6000967")]
	[Address(RVA = "0xF25AB8", Offset = "0xF25AB8", VA = "0xF25AB8")]
	public InGameMessage()
	{
	}
}
[Token(Token = "0x2000176")]
public class LocationAIController : MonoBehaviour
{
	[Token(Token = "0x6000968")]
	[Address(RVA = "0xF25AC0", Offset = "0xF25AC0", VA = "0xF25AC0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000969")]
	[Address(RVA = "0xF25AC4", Offset = "0xF25AC4", VA = "0xF25AC4")]
	private void Update()
	{
	}

	[Token(Token = "0x600096A")]
	[Address(RVA = "0xF25AC8", Offset = "0xF25AC8", VA = "0xF25AC8")]
	public LocationAIController()
	{
	}
}
[Token(Token = "0x2000177")]
public class MissionProgression : MonoBehaviour
{
	[Token(Token = "0x40007CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private string mission;

	[Token(Token = "0x600096B")]
	[Address(RVA = "0xF25AD0", Offset = "0xF25AD0", VA = "0xF25AD0")]
	private void Start()
	{
	}

	[Token(Token = "0x600096C")]
	[Address(RVA = "0xF25C64", Offset = "0xF25C64", VA = "0xF25C64")]
	private int GetMaxLevelAccomplished()
	{
		return default(int);
	}

	[Token(Token = "0x600096D")]
	[Address(RVA = "0xF25ED0", Offset = "0xF25ED0", VA = "0xF25ED0")]
	public MissionProgression()
	{
	}
}
[Token(Token = "0x2000178")]
public class MissionTrophy : MonoBehaviour
{
	[Token(Token = "0x40007CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string mission;

	[Token(Token = "0x600096E")]
	[Address(RVA = "0xF25ED8", Offset = "0xF25ED8", VA = "0xF25ED8")]
	private void Start()
	{
	}

	[Token(Token = "0x600096F")]
	[Address(RVA = "0xF26098", Offset = "0xF26098", VA = "0xF26098")]
	private void SetTrophy(GameManager.Difficulty difficulty)
	{
	}

	[Token(Token = "0x6000970")]
	[Address(RVA = "0xF26114", Offset = "0xF26114", VA = "0xF26114")]
	private void SetTrophy(string trophyName)
	{
	}

	[Token(Token = "0x6000971")]
	[Address(RVA = "0xF26258", Offset = "0xF26258", VA = "0xF26258")]
	public MissionTrophy()
	{
	}
}
[Token(Token = "0x2000179")]
public class ObbLoader : MonoBehaviour
{
	[Token(Token = "0x200017A")]
	public class MD5FileData
	{
		[Token(Token = "0x40007D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string file;

		[Token(Token = "0x40007D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string MD5;

		[Token(Token = "0x600097F")]
		[Address(RVA = "0xF26D84", Offset = "0xF26D84", VA = "0xF26D84")]
		public MD5FileData()
		{
		}
	}

	[Token(Token = "0x200017B")]
	[CompilerGenerated]
	private sealed class <DownloadFileCoroutine>d__19 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40007D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40007DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40007DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ObbLoader <>4__this;

		[Token(Token = "0x40007DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string file;

		[Token(Token = "0x40007DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Action callback;

		[Token(Token = "0x40007DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private UnityWebRequest <uwr>5__2;

		[Token(Token = "0x40007DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private string <path>5__3;

		[Token(Token = "0x17000089")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000983")]
			[Address(RVA = "0xF27040", Offset = "0xF27040", VA = "0xF27040", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700008A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000985")]
			[Address(RVA = "0xF27088", Offset = "0xF27088", VA = "0xF27088", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000980")]
		[Address(RVA = "0xF26C98", Offset = "0xF26C98", VA = "0xF26C98")]
		[DebuggerHidden]
		public <DownloadFileCoroutine>d__19(int <>1__state)
		{
		}

		[Token(Token = "0x6000981")]
		[Address(RVA = "0xF26D8C", Offset = "0xF26D8C", VA = "0xF26D8C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000982")]
		[Address(RVA = "0xF26D90", Offset = "0xF26D90", VA = "0xF26D90", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000984")]
		[Address(RVA = "0xF27048", Offset = "0xF27048", VA = "0xF27048", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40007CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int android_version_code;

	[Token(Token = "0x40007CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string[] obbList;

	[Token(Token = "0x40007D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string obbDownloadAddress;

	[Token(Token = "0x40007D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public string obbBuildFolder;

	[Token(Token = "0x40007D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Dictionary<string, string> md5FileData;

	[Token(Token = "0x40007D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[HideInInspector]
	public string md5File;

	[Token(Token = "0x40007D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private string obbDownloadDirectory;

	[Token(Token = "0x40007D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private int obbTasksPending;

	[Token(Token = "0x40007D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Action callback;

	[Token(Token = "0x6000972")]
	[Address(RVA = "0xF26260", Offset = "0xF26260", VA = "0xF26260")]
	public void LoadObbs(Action callback)
	{
	}

	[Token(Token = "0x6000973")]
	[Address(RVA = "0xF2627C", Offset = "0xF2627C", VA = "0xF2627C")]
	private void LoadObbs()
	{
	}

	[Token(Token = "0x6000974")]
	[Address(RVA = "0xF26318", Offset = "0xF26318", VA = "0xF26318")]
	private bool CheckObbs()
	{
		return default(bool);
	}

	[Token(Token = "0x6000975")]
	[Address(RVA = "0xF265F4", Offset = "0xF265F4", VA = "0xF265F4")]
	public string GetFileName(string obb)
	{
		return null;
	}

	[Token(Token = "0x6000976")]
	[Address(RVA = "0xF263F4", Offset = "0xF263F4", VA = "0xF263F4")]
	private bool CheckMD5File()
	{
		return default(bool);
	}

	[Token(Token = "0x6000977")]
	[Address(RVA = "0xF26880", Offset = "0xF26880", VA = "0xF26880")]
	private void OnObbTaksFinished()
	{
	}

	[Token(Token = "0x6000978")]
	[Address(RVA = "0xF26674", Offset = "0xF26674", VA = "0xF26674")]
	private bool CheckObb(string obb)
	{
		return default(bool);
	}

	[Token(Token = "0x6000979")]
	[Address(RVA = "0xF26898", Offset = "0xF26898", VA = "0xF26898")]
	public string GetMD5HashFromFile(string obb)
	{
		return null;
	}

	[Token(Token = "0x600097A")]
	[Address(RVA = "0xF267F8", Offset = "0xF267F8", VA = "0xF267F8")]
	private void DeleteOldVersion()
	{
	}

	[Token(Token = "0x600097B")]
	[Address(RVA = "0xF26854", Offset = "0xF26854", VA = "0xF26854")]
	private void DownloadFile(string file, Action callback)
	{
	}

	[Token(Token = "0x600097C")]
	[Address(RVA = "0xF26BF4", Offset = "0xF26BF4", VA = "0xF26BF4")]
	[IteratorStateMachine(typeof(<DownloadFileCoroutine>d__19))]
	private IEnumerator DownloadFileCoroutine(string file, Action callback)
	{
		return null;
	}

	[Token(Token = "0x600097D")]
	[Address(RVA = "0xF26788", Offset = "0xF26788", VA = "0xF26788")]
	public string GetFilePath(string fileName)
	{
		return null;
	}

	[Token(Token = "0x600097E")]
	[Address(RVA = "0xF26CC0", Offset = "0xF26CC0", VA = "0xF26CC0")]
	public ObbLoader()
	{
	}
}
[Token(Token = "0x200017C")]
public class ObbRename : MonoBehaviour
{
	[Token(Token = "0x40007E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string obbBuildFolder;

	[Token(Token = "0x6000986")]
	[Address(RVA = "0xF27090", Offset = "0xF27090", VA = "0xF27090")]
	public ObbRename()
	{
	}
}
[Token(Token = "0x200017D")]
public class PauseGameDialog : MonoBehaviour
{
	[Token(Token = "0x200017E")]
	public enum MessageType
	{
		[Token(Token = "0x40007F0")]
		Message_TeammateDisconnected
	}

	[Token(Token = "0x40007E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public UIButton button;

	[Token(Token = "0x40007E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject messageObj;

	[Token(Token = "0x40007E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public TextMeshPro textMesh;

	[Token(Token = "0x40007E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public TextMeshPro textOkMesh;

	[Token(Token = "0x40007E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static PauseGameDialog Instance;

	[Token(Token = "0x40007E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float distanceToPlayer;

	[Token(Token = "0x40007E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public bool debugShowMessegeEnabled;

	[Token(Token = "0x40007E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3D")]
	public bool debugShowMessage;

	[Token(Token = "0x40007E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3E")]
	public bool debugPauseEnabled;

	[Token(Token = "0x40007EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3F")]
	public bool debugPause;

	[Token(Token = "0x40007EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool paused;

	[Token(Token = "0x40007EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private SVRInteractable rightHandWeapon;

	[Token(Token = "0x40007ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private SVRInteractable leftHandWeapon;

	[Token(Token = "0x40007EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool isSolidBlackScreen;

	[Token(Token = "0x6000987")]
	[Address(RVA = "0xF27098", Offset = "0xF27098", VA = "0xF27098")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000988")]
	[Address(RVA = "0xF271B0", Offset = "0xF271B0", VA = "0xF271B0")]
	private void OnApplicationPause(bool pause)
	{
	}

	[Token(Token = "0x6000989")]
	[Address(RVA = "0xF272D4", Offset = "0xF272D4", VA = "0xF272D4")]
	public void ShowMessage()
	{
	}

	[Token(Token = "0x600098A")]
	[Address(RVA = "0xF2790C", Offset = "0xF2790C", VA = "0xF2790C")]
	private void OnDisconnected(DisconnectCause cause)
	{
	}

	[Token(Token = "0x600098B")]
	[Address(RVA = "0xF27910", Offset = "0xF27910", VA = "0xF27910")]
	private void OnTeammateDisconnected()
	{
	}

	[Token(Token = "0x600098C")]
	[Address(RVA = "0xF27E5C", Offset = "0xF27E5C", VA = "0xF27E5C")]
	private void OnButtonPressed()
	{
	}

	[Token(Token = "0x600098D")]
	[Address(RVA = "0xF27944", Offset = "0xF27944", VA = "0xF27944")]
	public void HideMessage()
	{
	}

	[Token(Token = "0x600098E")]
	[Address(RVA = "0xF27ECC", Offset = "0xF27ECC", VA = "0xF27ECC")]
	public PauseGameDialog()
	{
	}
}
[Token(Token = "0x200017F")]
public class Radio : SVRInteractable
{
	[Serializable]
	[Token(Token = "0x2000180")]
	public class ClipData
	{
		[Token(Token = "0x40007FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string clipFile;

		[Token(Token = "0x40007FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string clipName;

		[Token(Token = "0x60009A9")]
		[Address(RVA = "0xF29720", Offset = "0xF29720", VA = "0xF29720")]
		public ClipData()
		{
		}
	}

	[Token(Token = "0x2000181")]
	[CompilerGenerated]
	private sealed class <ChangeVolumeCoroutine>d__27 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40007FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000800")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000801")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Radio <>4__this;

		[Token(Token = "0x1700008B")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60009AD")]
			[Address(RVA = "0xF29930", Offset = "0xF29930", VA = "0xF29930", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700008C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60009AF")]
			[Address(RVA = "0xF29978", Offset = "0xF29978", VA = "0xF29978", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60009AA")]
		[Address(RVA = "0xF28F78", Offset = "0xF28F78", VA = "0xF28F78")]
		[DebuggerHidden]
		public <ChangeVolumeCoroutine>d__27(int <>1__state)
		{
		}

		[Token(Token = "0x60009AB")]
		[Address(RVA = "0xF29728", Offset = "0xF29728", VA = "0xF29728", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60009AC")]
		[Address(RVA = "0xF2972C", Offset = "0xF2972C", VA = "0xF2972C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60009AE")]
		[Address(RVA = "0xF29938", Offset = "0xF29938", VA = "0xF29938", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[StructLayout(3)]
	[Token(Token = "0x2000182")]
	[CompilerGenerated]
	private struct <LoadClips>d__30 : IAsyncStateMachine
	{
		[Token(Token = "0x4000802")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int <>1__state;

		[Token(Token = "0x4000803")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public AsyncVoidMethodBuilder <>t__builder;

		[Token(Token = "0x4000804")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Radio <>4__this;

		[Token(Token = "0x4000805")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private FileInfo[] <>7__wrap1;

		[Token(Token = "0x4000806")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private int <>7__wrap2;

		[Token(Token = "0x4000807")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private FileInfo <s>5__4;

		[Token(Token = "0x4000808")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private TaskAwaiter<AudioClip> <>u__1;

		[Token(Token = "0x60009B0")]
		[Address(RVA = "0xF29980", Offset = "0xF29980", VA = "0xF29980", Slot = "4")]
		private void MoveNext()
		{
		}

		[Token(Token = "0x60009B1")]
		[Address(RVA = "0xF29F74", Offset = "0xF29F74", VA = "0xF29F74", Slot = "5")]
		[DebuggerHidden]
		private void SetStateMachine(IAsyncStateMachine stateMachine)
		{
		}
	}

	[StructLayout(3)]
	[Token(Token = "0x2000183")]
	[CompilerGenerated]
	private struct <LoadClip>d__33 : IAsyncStateMachine
	{
		[Token(Token = "0x4000809")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int <>1__state;

		[Token(Token = "0x400080A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public AsyncTaskMethodBuilder<AudioClip> <>t__builder;

		[Token(Token = "0x400080B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string path;

		[Token(Token = "0x400080C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public AudioType extension;

		[Token(Token = "0x400080D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private AudioClip <clip>5__2;

		[Token(Token = "0x400080E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private UnityWebRequest <uwr>5__3;

		[Token(Token = "0x400080F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private TaskAwaiter <>u__1;

		[Token(Token = "0x60009B2")]
		[Address(RVA = "0xF29F80", Offset = "0xF29F80", VA = "0xF29F80", Slot = "4")]
		private void MoveNext()
		{
		}

		[Token(Token = "0x60009B3")]
		[Address(RVA = "0xF2A554", Offset = "0xF2A554", VA = "0xF2A554", Slot = "5")]
		[DebuggerHidden]
		private void SetStateMachine(IAsyncStateMachine stateMachine)
		{
		}
	}

	[Token(Token = "0x40007F1")]
	private const string CLIPS_PATH = "/Music";

	[Token(Token = "0x40007F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Radio Instance;

	[Token(Token = "0x40007F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static bool firstLoad;

	[Token(Token = "0x40007F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public TextAsset clipNamesFile;

	[Token(Token = "0x40007F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public List<AudioClip> clips;

	[Token(Token = "0x40007F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public TextMarquee songScreen;

	[Token(Token = "0x40007F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public TextMarquee messageScreen;

	[Token(Token = "0x40007F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public float initVolume;

	[Token(Token = "0x40007F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private AudioSource audioSource;

	[Token(Token = "0x40007FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private List<string> validExtensions;

	[Token(Token = "0x40007FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private int currentClip;

	[Token(Token = "0x40007FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private Dictionary<string, string> clipNames;

	[Token(Token = "0x6000990")]
	[Address(RVA = "0xF27F08", Offset = "0xF27F08", VA = "0xF27F08", Slot = "6")]
	protected override void Start()
	{
	}

	[Token(Token = "0x6000991")]
	[Address(RVA = "0xF2868C", Offset = "0xF2868C", VA = "0xF2868C")]
	private void OnLocationDeactivated(int locationId)
	{
	}

	[Token(Token = "0x6000992")]
	[Address(RVA = "0xF286C8", Offset = "0xF286C8", VA = "0xF286C8")]
	private void OnMissionStarted()
	{
	}

	[Token(Token = "0x6000993")]
	[Address(RVA = "0xF28804", Offset = "0xF28804", VA = "0xF28804")]
	private void OnTutorialDone()
	{
	}

	[Token(Token = "0x6000994")]
	[Address(RVA = "0xF288AC", Offset = "0xF288AC", VA = "0xF288AC", Slot = "19")]
	protected override void OnDestroy()
	{
	}

	[Token(Token = "0x6000995")]
	[Address(RVA = "0xF28A34", Offset = "0xF28A34", VA = "0xF28A34", Slot = "8")]
	public override void UpdateColliders()
	{
	}

	[Token(Token = "0x6000996")]
	[Address(RVA = "0xF28AD4", Offset = "0xF28AD4", VA = "0xF28AD4")]
	public void VolumeUp()
	{
	}

	[Token(Token = "0x6000997")]
	[Address(RVA = "0xF28BFC", Offset = "0xF28BFC", VA = "0xF28BFC")]
	public void VolumeDown()
	{
	}

	[Token(Token = "0x6000998")]
	[Address(RVA = "0xF28CA8", Offset = "0xF28CA8", VA = "0xF28CA8")]
	public void NextSong()
	{
	}

	[Token(Token = "0x6000999")]
	[Address(RVA = "0xF28EC4", Offset = "0xF28EC4", VA = "0xF28EC4")]
	public void PreviousSong()
	{
	}

	[Token(Token = "0x600099A")]
	[Address(RVA = "0xF28870", Offset = "0xF28870", VA = "0xF28870")]
	public void TurnOn()
	{
	}

	[Token(Token = "0x600099B")]
	[Address(RVA = "0xF28614", Offset = "0xF28614", VA = "0xF28614")]
	public void TurnOff()
	{
	}

	[Token(Token = "0x600099C")]
	[Address(RVA = "0xF287DC", Offset = "0xF287DC", VA = "0xF287DC")]
	public bool IsOn()
	{
		return default(bool);
	}

	[Token(Token = "0x600099D")]
	[Address(RVA = "0xF28F48", Offset = "0xF28F48", VA = "0xF28F48")]
	public void Break()
	{
	}

	[Token(Token = "0x600099E")]
	[Address(RVA = "0xF28D58", Offset = "0xF28D58", VA = "0xF28D58")]
	private void PlaySong()
	{
	}

	[Token(Token = "0x600099F")]
	[Address(RVA = "0xF28B88", Offset = "0xF28B88", VA = "0xF28B88")]
	[IteratorStateMachine(typeof(<ChangeVolumeCoroutine>d__27))]
	private IEnumerator ChangeVolumeCoroutine()
	{
		return null;
	}

	[Token(Token = "0x60009A0")]
	[Address(RVA = "0xF282B0", Offset = "0xF282B0", VA = "0xF282B0")]
	private void LoadClipNames()
	{
	}

	[Token(Token = "0x60009A1")]
	[Address(RVA = "0xF28FA0", Offset = "0xF28FA0", VA = "0xF28FA0")]
	private void ShuffleClips()
	{
	}

	[Token(Token = "0x60009A2")]
	[Address(RVA = "0xF290D8", Offset = "0xF290D8", VA = "0xF290D8")]
	[AsyncStateMachine(typeof(<LoadClips>d__30))]
	private void LoadClips()
	{
	}

	[Token(Token = "0x60009A3")]
	[Address(RVA = "0xF29190", Offset = "0xF29190", VA = "0xF29190")]
	private bool IsValidFileType(string fileName)
	{
		return default(bool);
	}

	[Token(Token = "0x60009A4")]
	[Address(RVA = "0xF29224", Offset = "0xF29224", VA = "0xF29224")]
	private AudioType GetExtension(string extension)
	{
		return default(AudioType);
	}

	[Token(Token = "0x60009A5")]
	[Address(RVA = "0xF292E4", Offset = "0xF292E4", VA = "0xF292E4")]
	[AsyncStateMachine(typeof(<LoadClip>d__33))]
	private Task<AudioClip> LoadClip(string path, AudioType extension)
	{
		return null;
	}

	[Token(Token = "0x60009A6")]
	[Address(RVA = "0xF29404", Offset = "0xF29404", VA = "0xF29404")]
	public Radio()
	{
	}
}
[Token(Token = "0x2000184")]
public class RadioButton : SVRInteractable
{
	[Token(Token = "0x2000185")]
	public enum ButtonType
	{
		[Token(Token = "0x4000816")]
		VolumeUp,
		[Token(Token = "0x4000817")]
		VolumeDown,
		[Token(Token = "0x4000818")]
		Next,
		[Token(Token = "0x4000819")]
		Previous
	}

	[Token(Token = "0x4000810")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public ButtonType buttonType;

	[Token(Token = "0x4000811")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private Radio radio;

	[Token(Token = "0x4000812")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private Transform model;

	[Token(Token = "0x4000813")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private Vector3 position;

	[Token(Token = "0x4000814")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
	private Vector3 pressedPosition;

	[Token(Token = "0x60009B4")]
	[Address(RVA = "0xF2A5AC", Offset = "0xF2A5AC", VA = "0xF2A5AC", Slot = "5")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x60009B5")]
	[Address(RVA = "0xF2A69C", Offset = "0xF2A69C", VA = "0xF2A69C", Slot = "9")]
	public override void BeginInteraction(SVRHand hand)
	{
	}

	[Token(Token = "0x60009B6")]
	[Address(RVA = "0xF2A86C", Offset = "0xF2A86C", VA = "0xF2A86C")]
	public RadioButton()
	{
	}
}
[Token(Token = "0x2000186")]
public class RadioButtons : SVRInteractable
{
	[Token(Token = "0x400081A")]
	private const string HAND_INDEX = "finger_index_r_end";

	[Token(Token = "0x400081B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public SVRButton[] buttons;

	[Token(Token = "0x400081C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private Radio radio;

	[Token(Token = "0x60009B8")]
	[Address(RVA = "0xF2A8EC", Offset = "0xF2A8EC", VA = "0xF2A8EC", Slot = "5")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x60009B9")]
	[Address(RVA = "0xF2A950", Offset = "0xF2A950", VA = "0xF2A950", Slot = "12")]
	public override void HoverEnter(SVRHand hand)
	{
	}

	[Token(Token = "0x60009BA")]
	[Address(RVA = "0xF2AA2C", Offset = "0xF2AA2C", VA = "0xF2AA2C")]
	public void PressButton(Vector3 pressPosition, SVRHand hand)
	{
	}

	[Token(Token = "0x60009BB")]
	[Address(RVA = "0xF2AC48", Offset = "0xF2AC48", VA = "0xF2AC48")]
	private SVRButton GetNearestButton(Vector3 position)
	{
		return null;
	}

	[Token(Token = "0x60009BC")]
	[Address(RVA = "0xF2AE0C", Offset = "0xF2AE0C", VA = "0xF2AE0C")]
	public RadioButtons()
	{
	}
}
[Token(Token = "0x2000187")]
public class RadioButtonsHitTarget : HitTarget
{
	[Token(Token = "0x400081D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private RadioButtons radioButtons;

	[Token(Token = "0x60009BD")]
	[Address(RVA = "0xF2AE64", Offset = "0xF2AE64", VA = "0xF2AE64")]
	private void Awake()
	{
	}

	[Token(Token = "0x60009BE")]
	[Address(RVA = "0xF2AEBC", Offset = "0xF2AEBC", VA = "0xF2AEBC", Slot = "4")]
	public override bool OnHit(Bullet bullet, Ray ray, RaycastHit hit)
	{
		return default(bool);
	}

	[Token(Token = "0x60009BF")]
	[Address(RVA = "0xF2AF64", Offset = "0xF2AF64", VA = "0xF2AF64")]
	public RadioButtonsHitTarget()
	{
	}
}
[Token(Token = "0x2000188")]
public class RadioHitTarget : HitTarget
{
	[Token(Token = "0x400081E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject explosion;

	[Token(Token = "0x400081F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Radio radio;

	[Token(Token = "0x4000820")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private int hits;

	[Token(Token = "0x4000821")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private float firstHit;

	[Token(Token = "0x60009C0")]
	[Address(RVA = "0xF2AF6C", Offset = "0xF2AF6C", VA = "0xF2AF6C")]
	private void Awake()
	{
	}

	[Token(Token = "0x60009C1")]
	[Address(RVA = "0xF2AFC4", Offset = "0xF2AFC4", VA = "0xF2AFC4", Slot = "4")]
	public override bool OnHit(Bullet bullet, Ray ray, RaycastHit hit)
	{
		return default(bool);
	}

	[Token(Token = "0x60009C2")]
	[Address(RVA = "0xF2B0A8", Offset = "0xF2B0A8", VA = "0xF2B0A8")]
	private void DestroyRadio()
	{
	}

	[Token(Token = "0x60009C3")]
	[Address(RVA = "0xF2B104", Offset = "0xF2B104", VA = "0xF2B104")]
	public RadioHitTarget()
	{
	}
}
[Token(Token = "0x2000189")]
public class ScaleDistance : MonoBehaviour
{
	[Token(Token = "0x4000822")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float initialScale;

	[Token(Token = "0x4000823")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float distanceFactor;

	[Token(Token = "0x60009C4")]
	[Address(RVA = "0xF2B10C", Offset = "0xF2B10C", VA = "0xF2B10C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60009C5")]
	[Address(RVA = "0xF2B1B4", Offset = "0xF2B1B4", VA = "0xF2B1B4")]
	public ScaleDistance()
	{
	}
}
[Token(Token = "0x200018A")]
public class SceneConfiguration : ScriptableObject
{
	[Serializable]
	[Token(Token = "0x200018B")]
	public class SceneMaskData
	{
		[Token(Token = "0x4000827")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string fullName;

		[Token(Token = "0x4000828")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int mask;

		[Token(Token = "0x60009C8")]
		[Address(RVA = "0xF2B324", Offset = "0xF2B324", VA = "0xF2B324")]
		public SceneMaskData()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x200018C")]
	public class NextLocationData
	{
		[Token(Token = "0x4000829")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string fullName;

		[Token(Token = "0x400082A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public StepData[] steps;

		[Token(Token = "0x60009C9")]
		[Address(RVA = "0xF2B32C", Offset = "0xF2B32C", VA = "0xF2B32C")]
		public NextLocationData()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x200018D")]
	public class StepData
	{
		[Token(Token = "0x400082B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Vector3 localPosition;

		[Token(Token = "0x400082C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Quaternion localRotation;

		[Token(Token = "0x60009CA")]
		[Address(RVA = "0xF2B334", Offset = "0xF2B334", VA = "0xF2B334")]
		public StepData()
		{
		}
	}

	[Token(Token = "0x4000824")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<SceneMaskData> sceneMasks;

	[Token(Token = "0x4000825")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<NextLocationData> nextLocationsData;

	[Token(Token = "0x4000826")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string poolManagerPath;

	[Token(Token = "0x60009C7")]
	[Address(RVA = "0xF2B31C", Offset = "0xF2B31C", VA = "0xF2B31C")]
	public SceneConfiguration()
	{
	}
}
[Token(Token = "0x200018E")]
public class AIModule : CharacterActionModule
{
	[StructLayout(3)]
	[Token(Token = "0x200018F")]
	[CompilerGenerated]
	private struct <SetSpawnPoint>d__15 : IAsyncStateMachine
	{
		[Token(Token = "0x4000834")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int <>1__state;

		[Token(Token = "0x4000835")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public AsyncVoidMethodBuilder <>t__builder;

		[Token(Token = "0x4000836")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public AIModule <>4__this;

		[Token(Token = "0x4000837")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private TaskAwaiter<CharacterZones.Movement> <>u__1;

		[Token(Token = "0x60009DD")]
		[Address(RVA = "0xF2CEF4", Offset = "0xF2CEF4", VA = "0xF2CEF4", Slot = "4")]
		private void MoveNext()
		{
		}

		[Token(Token = "0x60009DE")]
		[Address(RVA = "0xF2D108", Offset = "0xF2D108", VA = "0xF2D108", Slot = "5")]
		[DebuggerHidden]
		private void SetStateMachine(IAsyncStateMachine stateMachine)
		{
		}
	}

	[Token(Token = "0x400082D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public FireModule fireModule;

	[Token(Token = "0x400082E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public MoveAIModule moveAIModule;

	[Token(Token = "0x400082F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public CharacterSpot currentSpot;

	[Token(Token = "0x4000830")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public string spawnPointId;

	[Token(Token = "0x4000831")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private SumalabInvoke.SumalabInvokeReference movementInvokeReference;

	[Token(Token = "0x4000832")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private CharacterZones manager;

	[Token(Token = "0x4000833")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private bool sendDestiantionPending;

	[Token(Token = "0x60009CB")]
	[Address(RVA = "0xF2B33C", Offset = "0xF2B33C", VA = "0xF2B33C", Slot = "4")]
	public override void Activate(CommonCharacterController character)
	{
	}

	[Token(Token = "0x60009CC")]
	[Address(RVA = "0xF2B7D0", Offset = "0xF2B7D0", VA = "0xF2B7D0", Slot = "9")]
	public override void ReloadModule()
	{
	}

	[Token(Token = "0x60009CD")]
	[Address(RVA = "0xF2B8EC", Offset = "0xF2B8EC", VA = "0xF2B8EC", Slot = "7")]
	public override void OnTarget(Bullet bullet)
	{
	}

	[Token(Token = "0x60009CE")]
	[Address(RVA = "0xF2B924", Offset = "0xF2B924", VA = "0xF2B924", Slot = "11")]
	public override IFireModule GetFireModule()
	{
		return null;
	}

	[Token(Token = "0x60009CF")]
	[Address(RVA = "0xF2B92C", Offset = "0xF2B92C", VA = "0xF2B92C", Slot = "6")]
	public override void Complete()
	{
	}

	[Token(Token = "0x60009D0")]
	[Address(RVA = "0xF2BB5C", Offset = "0xF2BB5C", VA = "0xF2BB5C", Slot = "5")]
	public override void Deactivate()
	{
	}

	[Token(Token = "0x60009D1")]
	[Address(RVA = "0xF2B948", Offset = "0xF2B948", VA = "0xF2B948")]
	private void FinishModule()
	{
	}

	[Token(Token = "0x60009D2")]
	[Address(RVA = "0xF2B4CC", Offset = "0xF2B4CC", VA = "0xF2B4CC")]
	private void FireOnSpot(bool prefilled = false)
	{
	}

	[Token(Token = "0x60009D3")]
	[Address(RVA = "0xF2B718", Offset = "0xF2B718", VA = "0xF2B718")]
	[AsyncStateMachine(typeof(<SetSpawnPoint>d__15))]
	private void SetSpawnPoint()
	{
	}

	[Token(Token = "0x60009D4")]
	[Address(RVA = "0xF2BB78", Offset = "0xF2BB78", VA = "0xF2BB78")]
	private void SetSpawnPointInternal(CharacterZones.Movement movement)
	{
	}

	[Token(Token = "0x60009D5")]
	[Address(RVA = "0xF2C374", Offset = "0xF2C374", VA = "0xF2C374")]
	public void SetSpawnPointRemote(int zoneIndex, int spotIndex, int movementIndex)
	{
	}

	[Token(Token = "0x60009D6")]
	[Address(RVA = "0xF2C7A0", Offset = "0xF2C7A0", VA = "0xF2C7A0")]
	private void SetDestination()
	{
	}

	[Token(Token = "0x60009D7")]
	[Address(RVA = "0xF2C8E4", Offset = "0xF2C8E4", VA = "0xF2C8E4")]
	private void SetDestinationInternal(CharacterZones.Movement newMovement)
	{
	}

	[Token(Token = "0x60009D8")]
	[Address(RVA = "0xF2CBFC", Offset = "0xF2CBFC", VA = "0xF2CBFC")]
	public void SetDestinationRemote(int index)
	{
	}

	[Token(Token = "0x60009D9")]
	[Address(RVA = "0xF2CCC4", Offset = "0xF2CCC4", VA = "0xF2CCC4")]
	private void OnMovementComplete()
	{
	}

	[Token(Token = "0x60009DA")]
	[Address(RVA = "0xF2CD64", Offset = "0xF2CD64", VA = "0xF2CD64")]
	private void CustomNetworkEvent(string strName, object[] parameters)
	{
	}

	[Token(Token = "0x60009DB")]
	[Address(RVA = "0xF2CE4C", Offset = "0xF2CE4C", VA = "0xF2CE4C", Slot = "8")]
	public override void ResetAim()
	{
	}

	[Token(Token = "0x60009DC")]
	[Address(RVA = "0xF2CEEC", Offset = "0xF2CEEC", VA = "0xF2CEEC")]
	public AIModule()
	{
	}
}
[Token(Token = "0x2000190")]
public class CharacterMovement : MonoBehaviour
{
	[Token(Token = "0x2000191")]
	public enum MoveMode
	{
		[Token(Token = "0x400083A")]
		Crouch,
		[Token(Token = "0x400083B")]
		Walk,
		[Token(Token = "0x400083C")]
		Strafe,
		[Token(Token = "0x400083D")]
		Run
	}

	[Token(Token = "0x4000838")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public MoveMode moveMode;

	[Token(Token = "0x60009DF")]
	[Address(RVA = "0xF2D114", Offset = "0xF2D114", VA = "0xF2D114")]
	public CharacterMovement()
	{
	}
}
[Token(Token = "0x2000192")]
public class FireModule : CharacterActionModule, IFireModule
{
	[Token(Token = "0x2000193")]
	public enum AnimationOrder
	{
		[Token(Token = "0x400088B")]
		Random,
		[Token(Token = "0x400088C")]
		Sequential
	}

	[Token(Token = "0x400083E")]
	private const int ONE_HANDED_RELOAD_ANIMATION_COUNT = 3;

	[Token(Token = "0x400083F")]
	private const int TWO_HANDED_RELOAD_ANIMATION_COUNT = 2;

	[Token(Token = "0x4000840")]
	private const float RELOAD_PROBABILITY = 0.2f;

	[Token(Token = "0x4000841")]
	private const float minCoverTime = 2f;

	[Token(Token = "0x4000842")]
	private const float maxCoverTime = 4f;

	[Token(Token = "0x4000843")]
	private const float maxShootingTime = 4f;

	[Token(Token = "0x4000844")]
	private const float minShootingTime = 8f;

	[Token(Token = "0x4000845")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float maxDistance;

	[Token(Token = "0x4000846")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float currentOuterAccuracy;

	[Token(Token = "0x4000847")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float currentInnerAccuracy;

	[Token(Token = "0x4000848")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public Vector3 currentTargetPosition;

	[Token(Token = "0x4000849")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float TARGET_HIDDEN_PERIOD;

	[Token(Token = "0x400084A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private float TARGET_HIDDEN_DELTA_POSITION;

	[Token(Token = "0x400084B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private float lastTargetHiddenCheck;

	[Token(Token = "0x400084C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	[Range(0f, 1f)]
	public float targetChangeProbability;

	[Token(Token = "0x400084D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[Range(0f, 1f)]
	public float animationChangeProbability;

	[Token(Token = "0x400084E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public bool alwaysShooting;

	[Token(Token = "0x400084F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6D")]
	public bool ignoreTime;

	[Token(Token = "0x4000850")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6E")]
	public bool fireOnStart;

	[Token(Token = "0x4000851")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6F")]
	public bool onlyAim;

	[Token(Token = "0x4000852")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public List<CharacterLocationData> charTargets;

	[Token(Token = "0x4000853")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public List<AimTarget> targets;

	[Token(Token = "0x4000854")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public bool dynamicTargets;

	[Token(Token = "0x4000855")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x81")]
	public bool RemoteTargetsDisabled;

	[Token(Token = "0x4000856")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public List<FireAnimationDataSet> fireAnimationSetList;

	[Token(Token = "0x4000857")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public List<FireAnimationData> fireAnimationList;

	[Token(Token = "0x4000858")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public int currentAnimationIndex;

	[Token(Token = "0x4000859")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public FireAnimationData.HandedFireAnimationData currentAnimation;

	[Token(Token = "0x400085A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private bool targetHidden;

	[Token(Token = "0x400085B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA9")]
	private bool targetSemiHidden;

	[Token(Token = "0x400085C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private float targetHiddenChangeTargetFactor;

	[Token(Token = "0x400085D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private bool targetHiddenStopFiring;

	[Token(Token = "0x400085E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	private float targetHiddenStopFiringProbability;

	[Token(Token = "0x400085F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private float targetHiddenStartFiringProbability;

	[Token(Token = "0x4000860")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	public bool DisableTargetHiddenStopFiring;

	[Token(Token = "0x4000861")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public float alwawysShootingDelay;

	[Token(Token = "0x4000862")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	private float moveWithAlwaysShootingStartTime;

	[Token(Token = "0x4000863")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public AnimationOrder animationOrder;

	[Token(Token = "0x4000864")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	public float coverRotation;

	[NonSerialized]
	[Token(Token = "0x4000865")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public new ThiefPoliceController character;

	[Token(Token = "0x4000866")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private Vector3 lastEnemyAimTargetPosition;

	[Token(Token = "0x4000867")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
	[SerializeField]
	private bool isCover;

	[Token(Token = "0x4000868")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE5")]
	private bool forceCover;

	[Token(Token = "0x4000869")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private float ikLerpTarget;

	[Token(Token = "0x400086A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
	private float layerLerpTarget;

	[Token(Token = "0x400086B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private float stateTime;

	[Token(Token = "0x400086C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
	private float currentStateTime;

	[Token(Token = "0x400086D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private Vector3 offset;

	[Token(Token = "0x400086E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
	[SerializeField]
	private float switchSpeed;

	[Token(Token = "0x400086F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	[SerializeField]
	private float switchTargetSpeed;

	[Token(Token = "0x4000870")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
	private float alwaysShootingIKWeight;

	[Token(Token = "0x4000871")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	private float alwaysShootingLayerWeight;

	[Token(Token = "0x4000872")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
	private bool targetChanged;

	[Token(Token = "0x4000873")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	public AimTarget currentTarget;

	[Token(Token = "0x4000874")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	[SerializeField]
	private bool enable;

	[Token(Token = "0x4000875")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x121")]
	private bool lastEnemy;

	[Token(Token = "0x4000876")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	public string currentAnimationState;

	[Token(Token = "0x4000877")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	private PseudoRandom randomGenerator;

	[Token(Token = "0x4000878")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	private bool hasMoveModule;

	[Token(Token = "0x4000879")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	private MoveModule moveModule;

	[Token(Token = "0x400087A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	private float fRemoteReloadPending;

	[Token(Token = "0x400087B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14C")]
	private int iRemoteReloadIndex;

	[Token(Token = "0x400087C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	private float dangerTime;

	[Token(Token = "0x400087D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static float dangerTimeTotal;

	[Token(Token = "0x400087E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x154")]
	private bool forceLethalShot;

	[Token(Token = "0x400087F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	private float initTargetChangeProbability;

	[Token(Token = "0x4000880")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	public List<AimTarget> availableTargets;

	[Token(Token = "0x4000881")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	private Vector3 unitSphere;

	[Token(Token = "0x4000882")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x174")]
	private float minRadius;

	[Token(Token = "0x4000883")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	private float maxRadius;

	[Token(Token = "0x4000884")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x17C")]
	private float minDistance;

	[Token(Token = "0x4000885")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	private float shot;

	[Token(Token = "0x4000886")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x184")]
	private Vector3 origin;

	[Token(Token = "0x4000887")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	private Vector3 distance;

	[Token(Token = "0x4000888")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19C")]
	private float _hor;

	[Token(Token = "0x4000889")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	private float _ver;

	[Token(Token = "0x60009E0")]
	[Address(RVA = "0xF2D11C", Offset = "0xF2D11C", VA = "0xF2D11C")]
	private void Start()
	{
	}

	[Token(Token = "0x60009E1")]
	[Address(RVA = "0xF2D1C0", Offset = "0xF2D1C0", VA = "0xF2D1C0", Slot = "4")]
	public override void Activate(CommonCharacterController character)
	{
	}

	[Token(Token = "0x60009E2")]
	[Address(RVA = "0xF2E724", Offset = "0xF2E724", VA = "0xF2E724")]
	public void enableMoveWithAlwaysShooting()
	{
	}

	[Token(Token = "0x60009E3")]
	[Address(RVA = "0xF2D728", Offset = "0xF2D728", VA = "0xF2D728")]
	private float getCoverStateTime(float min, float max)
	{
		return default(float);
	}

	[Token(Token = "0x60009E4")]
	[Address(RVA = "0xF2E748", Offset = "0xF2E748", VA = "0xF2E748")]
	private float getStateTime(float min, float max)
	{
		return default(float);
	}

	[Token(Token = "0x60009E5")]
	[Address(RVA = "0xF2D644", Offset = "0xF2D644", VA = "0xF2D644")]
	private void SetAnimation()
	{
	}

	[Token(Token = "0x60009E6")]
	[Address(RVA = "0xF2E7A8", Offset = "0xF2E7A8", VA = "0xF2E7A8", Slot = "12")]
	public void SetAnimation(int index)
	{
	}

	[Token(Token = "0x60009E7")]
	[Address(RVA = "0xF2EBE4", Offset = "0xF2EBE4", VA = "0xF2EBE4")]
	public void SetAlwaysShootingWeights(float ikWeight, float layerWeight)
	{
	}

	[Token(Token = "0x60009E8")]
	[Address(RVA = "0xF2EBF0", Offset = "0xF2EBF0", VA = "0xF2EBF0", Slot = "6")]
	public override void Complete()
	{
	}

	[Token(Token = "0x60009E9")]
	[Address(RVA = "0xF2EC68", Offset = "0xF2EC68", VA = "0xF2EC68", Slot = "5")]
	public override void Deactivate()
	{
	}

	[Token(Token = "0x60009EA")]
	[Address(RVA = "0xF2EC0C", Offset = "0xF2EC0C", VA = "0xF2EC0C")]
	private void FinishModule()
	{
	}

	[Token(Token = "0x60009EB")]
	[Address(RVA = "0xF2EC94", Offset = "0xF2EC94", VA = "0xF2EC94", Slot = "7")]
	public override void OnTarget(Bullet bullet)
	{
	}

	[Token(Token = "0x60009EC")]
	[Address(RVA = "0xF2ED40", Offset = "0xF2ED40", VA = "0xF2ED40")]
	public void Fire()
	{
	}

	[Token(Token = "0x60009ED")]
	[Address(RVA = "0xF2ED4C", Offset = "0xF2ED4C", VA = "0xF2ED4C")]
	public void StopFire()
	{
	}

	[Token(Token = "0x60009EE")]
	[Address(RVA = "0xF2ED54", Offset = "0xF2ED54", VA = "0xF2ED54")]
	public bool isEnable()
	{
		return default(bool);
	}

	[Token(Token = "0x60009EF")]
	[Address(RVA = "0xF2ED5C", Offset = "0xF2ED5C", VA = "0xF2ED5C")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x60009F0")]
	[Address(RVA = "0xF2F0A4", Offset = "0xF2F0A4", VA = "0xF2F0A4")]
	private void Update()
	{
	}

	[Token(Token = "0x60009F1")]
	[Address(RVA = "0xF30088", Offset = "0xF30088", VA = "0xF30088")]
	private void FireWeapon()
	{
	}

	[Token(Token = "0x60009F2")]
	[Address(RVA = "0xF30958", Offset = "0xF30958", VA = "0xF30958")]
	public static float calculateDangerousShot(Bullet bullet, AimTarget target)
	{
		return default(float);
	}

	[Token(Token = "0x60009F3")]
	[Address(RVA = "0xF30960", Offset = "0xF30960", VA = "0xF30960", Slot = "14")]
	public void SetRemoteFireState(string state, int iIndex)
	{
	}

	[Token(Token = "0x60009F4")]
	[Address(RVA = "0xF30670", Offset = "0xF30670", VA = "0xF30670")]
	private void LookAtTarget()
	{
	}

	[Token(Token = "0x60009F5")]
	[Address(RVA = "0xF2D854", Offset = "0xF2D854", VA = "0xF2D854")]
	private void SetTarget(bool bForce = false)
	{
	}

	[Token(Token = "0x60009F6")]
	[Address(RVA = "0xF30D40", Offset = "0xF30D40", VA = "0xF30D40")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x60009F7")]
	[Address(RVA = "0xF30DD8", Offset = "0xF30DD8", VA = "0xF30DD8")]
	private void ResetAccuracy(bool bResetTargetHiddenCheck = true)
	{
	}

	[Token(Token = "0x60009F8")]
	[Address(RVA = "0xF31A5C", Offset = "0xF31A5C", VA = "0xF31A5C")]
	private float calculateRandomRangeSphere(float outer, float inner, bool bForce = false)
	{
		return default(float);
	}

	[Token(Token = "0x60009F9")]
	[Address(RVA = "0xF31B08", Offset = "0xF31B08", VA = "0xF31B08")]
	private void checkIfCurrentTargetIsHidden()
	{
	}

	[Token(Token = "0x60009FA")]
	[Address(RVA = "0xF31EA4", Offset = "0xF31EA4", VA = "0xF31EA4")]
	private bool checkIfCurrentTargetIsVisiblePosition(Vector3 delta)
	{
		return default(bool);
	}

	[Token(Token = "0x60009FB")]
	[Address(RVA = "0xF30F8C", Offset = "0xF30F8C", VA = "0xF30F8C")]
	private void updateOffset()
	{
	}

	[Token(Token = "0x60009FC")]
	[Address(RVA = "0xF32440", Offset = "0xF32440", VA = "0xF32440")]
	private bool shotTrajectoryAllowed(float horizontalValue, float verticalValue)
	{
		return default(bool);
	}

	[Token(Token = "0x60009FD")]
	[Address(RVA = "0xF2E450", Offset = "0xF2E450", VA = "0xF2E450")]
	private void UpdateAccuracy(bool bForce = false, bool forceReset = false)
	{
	}

	[Token(Token = "0x60009FE")]
	[Address(RVA = "0xF32C98", Offset = "0xF32C98", VA = "0xF32C98", Slot = "13")]
	public void UpdateTargetAndAccuracy(AimTarget target, Vector3 offset, Vector3 currentTargetPosition, bool bWarning, bool bLethalShot)
	{
	}

	[Token(Token = "0x60009FF")]
	[Address(RVA = "0xF32FCC", Offset = "0xF32FCC", VA = "0xF32FCC", Slot = "9")]
	public override void ReloadModule()
	{
	}

	[Token(Token = "0x6000A00")]
	[Address(RVA = "0xF33028", Offset = "0xF33028", VA = "0xF33028", Slot = "8")]
	public override void ResetAim()
	{
	}

	[Token(Token = "0x6000A01")]
	[Address(RVA = "0xF330AC", Offset = "0xF330AC", VA = "0xF330AC", Slot = "11")]
	public override IFireModule GetFireModule()
	{
		return null;
	}

	[Token(Token = "0x6000A02")]
	[Address(RVA = "0xF330B0", Offset = "0xF330B0", VA = "0xF330B0")]
	private void OnDrawGizmosSelected()
	{
	}

	[Token(Token = "0x6000A03")]
	[Address(RVA = "0xF330DC", Offset = "0xF330DC", VA = "0xF330DC")]
	public FireModule()
	{
	}
}
[Token(Token = "0x2000194")]
public class WarningManager
{
	[Token(Token = "0x400088D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static List<ThiefPoliceController> warningList;

	[Token(Token = "0x400088E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static float minDistance;

	[Token(Token = "0x400088F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private static float maxWarnings;

	[Token(Token = "0x6000A05")]
	[Address(RVA = "0xF326D4", Offset = "0xF326D4", VA = "0xF326D4")]
	public static bool allowWarning(FireModule fireModule)
	{
		return default(bool);
	}

	[Token(Token = "0x6000A06")]
	[Address(RVA = "0xF33258", Offset = "0xF33258", VA = "0xF33258")]
	public WarningManager()
	{
	}
}
[Token(Token = "0x2000195")]
public interface IFireModule
{
	[Token(Token = "0x6000A08")]
	void SetAnimation(int index);

	[Token(Token = "0x6000A09")]
	void UpdateTargetAndAccuracy(AimTarget target, Vector3 offset, Vector3 currentTargetPosition, bool bWarning, bool bLethalShot);

	[Token(Token = "0x6000A0A")]
	void SetRemoteFireState(string strState, int index);
}
[Token(Token = "0x2000196")]
public class SamuraiActionModifier : MonoBehaviour
{
	[Token(Token = "0x4000890")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public MoveModule moveModule;

	[Token(Token = "0x4000891")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private LookAtIK lookAtIK;

	[Token(Token = "0x4000892")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float strafeTime;

	[Token(Token = "0x4000893")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private ThiefPoliceController character;

	[Token(Token = "0x4000894")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public AudioClip deathSound;

	[Token(Token = "0x4000895")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Transform lookIkTarget;

	[Token(Token = "0x4000896")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private GameObject target;

	[Token(Token = "0x4000897")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool bFirstTime;

	[Token(Token = "0x4000898")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private int lastAmmunitionBonusLifes;

	[Token(Token = "0x4000899")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private int bonusId;

	[Token(Token = "0x6000A0B")]
	[Address(RVA = "0xF33310", Offset = "0xF33310", VA = "0xF33310")]
	private void Start()
	{
	}

	[Token(Token = "0x6000A0C")]
	[Address(RVA = "0xF33434", Offset = "0xF33434", VA = "0xF33434")]
	private void OnActive()
	{
	}

	[Token(Token = "0x6000A0D")]
	[Address(RVA = "0xF33748", Offset = "0xF33748", VA = "0xF33748")]
	private void Update()
	{
	}

	[Token(Token = "0x6000A0E")]
	[Address(RVA = "0xF33BE8", Offset = "0xF33BE8", VA = "0xF33BE8")]
	public void MiniGunBroken(bool bRemote = false)
	{
	}

	[Token(Token = "0x6000A0F")]
	[Address(RVA = "0xF33E3C", Offset = "0xF33E3C", VA = "0xF33E3C")]
	private void OnCharacterHit()
	{
	}

	[Token(Token = "0x6000A10")]
	[Address(RVA = "0xF33F1C", Offset = "0xF33F1C", VA = "0xF33F1C")]
	private void ShowAmmunitionBonus(bool bRemote = false)
	{
	}

	[Token(Token = "0x6000A11")]
	[Address(RVA = "0xF341D4", Offset = "0xF341D4", VA = "0xF341D4")]
	private void OnDead()
	{
	}

	[Token(Token = "0x6000A12")]
	[Address(RVA = "0xF34250", Offset = "0xF34250", VA = "0xF34250")]
	private void PlaySound(AudioClip clip)
	{
	}

	[Token(Token = "0x6000A13")]
	[Address(RVA = "0xF34274", Offset = "0xF34274", VA = "0xF34274")]
	private void CustomNetworkEvent(string strName, object[] parameters)
	{
	}

	[Token(Token = "0x6000A14")]
	[Address(RVA = "0xF34348", Offset = "0xF34348", VA = "0xF34348")]
	public SamuraiActionModifier()
	{
	}
}
[Token(Token = "0x2000197")]
public class MorpheusScene : MonoBehaviour
{
	[Token(Token = "0x400089A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int locationId;

	[Token(Token = "0x400089B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Animator helicopter;

	[Token(Token = "0x400089C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AudioSource helicopterAS;

	[Token(Token = "0x400089D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public CharacterLocationData neo;

	[Token(Token = "0x400089E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public CharacterLocationData morpheus;

	[Token(Token = "0x400089F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject missionAccomplished;

	[Token(Token = "0x40008A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject handcuffsFx;

	[Token(Token = "0x40008A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject protect;

	[Token(Token = "0x40008A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private LocationCharacterAISpawner firstWave;

	[Token(Token = "0x40008A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private LocationCharacterAISpawner lastWave;

	[Token(Token = "0x40008A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Animator helicopterAnimator;

	[Token(Token = "0x40008A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Vector3 helicopterInitialPosition;

	[Token(Token = "0x40008A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private Quaternion helicopterInitialRotation;

	[Token(Token = "0x40008A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private Vector3 morpheusInitialPosition;

	[Token(Token = "0x40008A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private Quaternion morpheusInitialRotation;

	[Token(Token = "0x40008A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private Vector3 neoInitialPosition;

	[Token(Token = "0x40008AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	private Quaternion neoInitialRotation;

	[Token(Token = "0x40008AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	private float currentAnimationSpeed;

	[Token(Token = "0x6000A17")]
	[Address(RVA = "0xF34370", Offset = "0xF34370", VA = "0xF34370")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000A18")]
	[Address(RVA = "0xF34664", Offset = "0xF34664", VA = "0xF34664")]
	private void Start()
	{
	}

	[Token(Token = "0x6000A19")]
	[Address(RVA = "0xF34760", Offset = "0xF34760", VA = "0xF34760")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000A1A")]
	[Address(RVA = "0xF34938", Offset = "0xF34938", VA = "0xF34938")]
	public void OnLocationStarted(int locationId)
	{
	}

	[Token(Token = "0x6000A1B")]
	[Address(RVA = "0xF349E4", Offset = "0xF349E4", VA = "0xF349E4")]
	public void OnLocationInitialized(int locationId)
	{
	}

	[Token(Token = "0x6000A1C")]
	[Address(RVA = "0xF34A04", Offset = "0xF34A04", VA = "0xF34A04")]
	public void OnLocationActivated(int locationId)
	{
	}

	[Token(Token = "0x6000A1D")]
	[Address(RVA = "0xF35064", Offset = "0xF35064", VA = "0xF35064")]
	public void OnLocationReactivated(int locationId)
	{
	}

	[Token(Token = "0x6000A1E")]
	[Address(RVA = "0xF353C8", Offset = "0xF353C8", VA = "0xF353C8")]
	private void SyncAnimation()
	{
	}

	[Token(Token = "0x6000A1F")]
	[Address(RVA = "0xF35618", Offset = "0xF35618", VA = "0xF35618")]
	private void SyncAnimationRemote(int hash, float time)
	{
	}

	[Token(Token = "0x6000A20")]
	[Address(RVA = "0xF357F4", Offset = "0xF357F4", VA = "0xF357F4")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000A21")]
	[Address(RVA = "0xF358C4", Offset = "0xF358C4", VA = "0xF358C4")]
	private void StartHelicopter()
	{
	}

	[Token(Token = "0x6000A22")]
	[Address(RVA = "0xF35CEC", Offset = "0xF35CEC", VA = "0xF35CEC")]
	private void OnAnimationEvent(string e)
	{
	}

	[Token(Token = "0x6000A23")]
	[Address(RVA = "0xF35F88", Offset = "0xF35F88", VA = "0xF35F88")]
	private void OnFirstWaveCompleted()
	{
	}

	[Token(Token = "0x6000A24")]
	[Address(RVA = "0xF35FE0", Offset = "0xF35FE0", VA = "0xF35FE0")]
	private void OnLastWaveCompleted()
	{
	}

	[Token(Token = "0x6000A25")]
	[Address(RVA = "0xF3606C", Offset = "0xF3606C", VA = "0xF3606C")]
	private void OnNeoDead()
	{
	}

	[Token(Token = "0x6000A26")]
	[Address(RVA = "0xF360F8", Offset = "0xF360F8", VA = "0xF360F8")]
	private void OnMorpheusHit(HitEvent hitEvent)
	{
	}

	[Token(Token = "0x6000A27")]
	[Address(RVA = "0xF36160", Offset = "0xF36160", VA = "0xF36160")]
	private void OnMorpheusDead()
	{
	}

	[Token(Token = "0x6000A28")]
	[Address(RVA = "0xF361E0", Offset = "0xF361E0", VA = "0xF361E0")]
	private void TriggerMorpheusIdle()
	{
	}

	[Token(Token = "0x6000A29")]
	[Address(RVA = "0xF36310", Offset = "0xF36310", VA = "0xF36310")]
	public MorpheusScene()
	{
	}
}
[Token(Token = "0x2000198")]
public class ParkingScene : MonoBehaviour
{
	[Token(Token = "0x40008AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int locationId;

	[Token(Token = "0x40008AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public PlayableDirector playableDirector;

	[Token(Token = "0x40008AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public CharacterLocationData chuache;

	[Token(Token = "0x40008AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public CommonCharacterController man;

	[Token(Token = "0x40008B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform column;

	[Token(Token = "0x40008B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public AudioClip reloadClip;

	[Token(Token = "0x40008B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public int[] chuacheMinLifes;

	[Token(Token = "0x40008B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private int chuacheMinLifesIndex;

	[Token(Token = "0x40008B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private ChuacheController chuacheController;

	[Token(Token = "0x6000A2E")]
	[Address(RVA = "0xF374AC", Offset = "0xF374AC", VA = "0xF374AC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000A2F")]
	[Address(RVA = "0xF378A4", Offset = "0xF378A4", VA = "0xF378A4")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000A30")]
	[Address(RVA = "0xF37970", Offset = "0xF37970", VA = "0xF37970")]
	public void OnLocationActivated(int locationId)
	{
	}

	[Token(Token = "0x6000A31")]
	[Address(RVA = "0xF3803C", Offset = "0xF3803C", VA = "0xF3803C")]
	public void OnLocationReactivated(int locationId)
	{
	}

	[Token(Token = "0x6000A32")]
	[Address(RVA = "0xF38050", Offset = "0xF38050", VA = "0xF38050")]
	private void reactivateScene()
	{
	}

	[Token(Token = "0x6000A33")]
	[Address(RVA = "0xF38128", Offset = "0xF38128", VA = "0xF38128")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000A34")]
	[Address(RVA = "0xF383A8", Offset = "0xF383A8", VA = "0xF383A8")]
	private void SyncAnimation()
	{
	}

	[Token(Token = "0x6000A35")]
	[Address(RVA = "0xF38770", Offset = "0xF38770", VA = "0xF38770")]
	private void SyncAnimationRemote(double time)
	{
	}

	[Token(Token = "0x6000A36")]
	[Address(RVA = "0xF38A60", Offset = "0xF38A60", VA = "0xF38A60")]
	private Transform getChuacheTargetTransform()
	{
		return null;
	}

	[Token(Token = "0x6000A37")]
	[Address(RVA = "0xF38D80", Offset = "0xF38D80", VA = "0xF38D80")]
	private bool IsPlayerAlive()
	{
		return default(bool);
	}

	[Token(Token = "0x6000A38")]
	[Address(RVA = "0xF38E7C", Offset = "0xF38E7C", VA = "0xF38E7C")]
	private void OnTimelineEvent(string eventName)
	{
	}

	[Token(Token = "0x6000A39")]
	[Address(RVA = "0xF39498", Offset = "0xF39498", VA = "0xF39498")]
	public ParkingScene()
	{
	}
}
[Token(Token = "0x200019A")]
public class ScoreData
{
	[Token(Token = "0x40008B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static int THIEF_DEADS_MULTIPLIER;

	[Token(Token = "0x40008B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	private static int HEADSHOTS_MULTIPLIER;

	[Token(Token = "0x40008B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static int POLICE_DEADS_MULTIPLIER;

	[Token(Token = "0x40008BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private static int FRIENDLYFIRE_MULTIPLIER;

	[Token(Token = "0x40008BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static int HOSTAGE_DEADS_MULTIPLIER;

	[Token(Token = "0x40008BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private static int HOSTAGE_SAVED_MULTIPLIER;

	[Token(Token = "0x40008BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static int USED_BULLETS_MULTIPLIER;

	[Token(Token = "0x40008BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private static int EXPLODE_BOMBS;

	[Token(Token = "0x40008BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private static int SCENE_COMPLETE;

	[Token(Token = "0x40008C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private static int HELL_LEVEL_MULTIPLIER;

	[Token(Token = "0x40008C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private static int TIME_MAX_POINTS;

	[Token(Token = "0x40008C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int thiefDeads;

	[Token(Token = "0x40008C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public int thiefHeadshots;

	[Token(Token = "0x40008C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int policeDeads;

	[Token(Token = "0x40008C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int friendlyFire;

	[Token(Token = "0x40008C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int hostageDeads;

	[Token(Token = "0x40008C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public int hostageSaved;

	[Token(Token = "0x40008C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int usedBullets;

	[Token(Token = "0x40008C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public int scenesCompleted;

	[Token(Token = "0x40008CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public int difficulty;

	[Token(Token = "0x40008CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public int mission;

	[Token(Token = "0x40008CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float timeToComplete;

	[Token(Token = "0x40008CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public bool bombsExploded;

	[Token(Token = "0x40008CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3D")]
	public bool gameOver;

	[Token(Token = "0x6000A41")]
	[Address(RVA = "0xF39658", Offset = "0xF39658", VA = "0xF39658")]
	public void Clear()
	{
	}

	[Token(Token = "0x6000A42")]
	[Address(RVA = "0xF39670", Offset = "0xF39670", VA = "0xF39670")]
	public bool isClear()
	{
		return default(bool);
	}

	[Token(Token = "0x6000A43")]
	[Address(RVA = "0xF39680", Offset = "0xF39680", VA = "0xF39680")]
	public int getTotalScore()
	{
		return default(int);
	}

	[Token(Token = "0x6000A44")]
	[Address(RVA = "0xF39920", Offset = "0xF39920", VA = "0xF39920")]
	public ScoreData()
	{
	}
}
[Token(Token = "0x200019B")]
public class SceneLoaderAutoLauncher : MonoBehaviour
{
	[Token(Token = "0x200019C")]
	[CompilerGenerated]
	private sealed class <LoadObbs>d__12 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40008DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40008DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40008DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SceneLoaderAutoLauncher <>4__this;

		[Token(Token = "0x1700008D")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000A57")]
			[Address(RVA = "0xF3ACA0", Offset = "0xF3ACA0", VA = "0xF3ACA0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700008E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000A59")]
			[Address(RVA = "0xF3ACE8", Offset = "0xF3ACE8", VA = "0xF3ACE8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000A54")]
		[Address(RVA = "0xF3A1A8", Offset = "0xF3A1A8", VA = "0xF3A1A8")]
		[DebuggerHidden]
		public <LoadObbs>d__12(int <>1__state)
		{
		}

		[Token(Token = "0x6000A55")]
		[Address(RVA = "0xF3A91C", Offset = "0xF3A91C", VA = "0xF3A91C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000A56")]
		[Address(RVA = "0xF3A920", Offset = "0xF3A920", VA = "0xF3A920", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000A58")]
		[Address(RVA = "0xF3ACA8", Offset = "0xF3ACA8", VA = "0xF3ACA8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200019D")]
	[CompilerGenerated]
	private sealed class <showImages>d__20 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40008E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40008E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40008E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SceneLoaderAutoLauncher <>4__this;

		[Token(Token = "0x40008E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public List<LoadingScreen> loadingScreens;

		[Token(Token = "0x40008E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int <i>5__2;

		[Token(Token = "0x40008E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float <fadeTime>5__3;

		[Token(Token = "0x1700008F")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000A5D")]
			[Address(RVA = "0xF3B2AC", Offset = "0xF3B2AC", VA = "0xF3B2AC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000090")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000A5F")]
			[Address(RVA = "0xF3B2F4", Offset = "0xF3B2F4", VA = "0xF3B2F4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000A5A")]
		[Address(RVA = "0xF3A4DC", Offset = "0xF3A4DC", VA = "0xF3A4DC")]
		[DebuggerHidden]
		public <showImages>d__20(int <>1__state)
		{
		}

		[Token(Token = "0x6000A5B")]
		[Address(RVA = "0xF3ACF0", Offset = "0xF3ACF0", VA = "0xF3ACF0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000A5C")]
		[Address(RVA = "0xF3ACF4", Offset = "0xF3ACF4", VA = "0xF3ACF4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000A5E")]
		[Address(RVA = "0xF3B2B4", Offset = "0xF3B2B4", VA = "0xF3B2B4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200019F")]
	[CompilerGenerated]
	private sealed class <loadSceneCoroutine>d__23 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40008E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40008E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40008E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SceneLoaderAutoLauncher <>4__this;

		[Token(Token = "0x40008EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string sceneName;

		[Token(Token = "0x40008EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private AsyncOperation <async>5__2;

		[Token(Token = "0x17000091")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000A65")]
			[Address(RVA = "0xF3B4B0", Offset = "0xF3B4B0", VA = "0xF3B4B0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000092")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000A67")]
			[Address(RVA = "0xF3B4F8", Offset = "0xF3B4F8", VA = "0xF3B4F8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000A62")]
		[Address(RVA = "0xF3A85C", Offset = "0xF3A85C", VA = "0xF3A85C")]
		[DebuggerHidden]
		public <loadSceneCoroutine>d__23(int <>1__state)
		{
		}

		[Token(Token = "0x6000A63")]
		[Address(RVA = "0xF3B328", Offset = "0xF3B328", VA = "0xF3B328", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000A64")]
		[Address(RVA = "0xF3B32C", Offset = "0xF3B32C", VA = "0xF3B32C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000A66")]
		[Address(RVA = "0xF3B4B8", Offset = "0xF3B4B8", VA = "0xF3B4B8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20001A0")]
	[CompilerGenerated]
	private sealed class <liberateMemory>d__24 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40008EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40008ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40008EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private AsyncOperation <async>5__2;

		[Token(Token = "0x17000093")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000A6B")]
			[Address(RVA = "0xF3B588", Offset = "0xF3B588", VA = "0xF3B588", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000094")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000A6D")]
			[Address(RVA = "0xF3B5D0", Offset = "0xF3B5D0", VA = "0xF3B5D0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000A68")]
		[Address(RVA = "0xF3A8E4", Offset = "0xF3A8E4", VA = "0xF3A8E4")]
		[DebuggerHidden]
		public <liberateMemory>d__24(int <>1__state)
		{
		}

		[Token(Token = "0x6000A69")]
		[Address(RVA = "0xF3B500", Offset = "0xF3B500", VA = "0xF3B500", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000A6A")]
		[Address(RVA = "0xF3B504", Offset = "0xF3B504", VA = "0xF3B504", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000A6C")]
		[Address(RVA = "0xF3B590", Offset = "0xF3B590", VA = "0xF3B590", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40008CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static bool initialized;

	[Token(Token = "0x40008D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public static int androidVersionCode;

	[Token(Token = "0x40008D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool loading;

	[Token(Token = "0x40008D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string sceneToLoad;

	[Token(Token = "0x40008D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float delay;

	[Token(Token = "0x40008D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public int android_version_code;

	[Token(Token = "0x40008D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool mandatoryScreensShown;

	[Token(Token = "0x40008D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private LoadingScreen currentLoadingScreen;

	[Token(Token = "0x40008D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Transform m_camera;

	[Token(Token = "0x40008D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Transform m_screens;

	[Token(Token = "0x40008D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Material fadePanelMaterial;

	[Token(Token = "0x40008DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool bLoadFinished;

	[Token(Token = "0x40008DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private float lastTimeChanged;

	[Token(Token = "0x40008DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private float debugTime;

	[Token(Token = "0x6000A46")]
	[Address(RVA = "0xF39994", Offset = "0xF39994", VA = "0xF39994")]
	private void Start()
	{
	}

	[Token(Token = "0x6000A47")]
	[Address(RVA = "0xF3A074", Offset = "0xF3A074", VA = "0xF3A074")]
	[IteratorStateMachine(typeof(<LoadObbs>d__12))]
	private IEnumerator LoadObbs()
	{
		return null;
	}

	[Token(Token = "0x6000A48")]
	[Address(RVA = "0xF3A000", Offset = "0xF3A000", VA = "0xF3A000")]
	private void StartProtubeVR()
	{
	}

	[Token(Token = "0x6000A49")]
	[Address(RVA = "0xF39BE8", Offset = "0xF39BE8", VA = "0xF39BE8")]
	private void prepareLoadingImage()
	{
	}

	[Token(Token = "0x6000A4A")]
	[Address(RVA = "0xF3A1D0", Offset = "0xF3A1D0", VA = "0xF3A1D0")]
	private Transform findCameraItems()
	{
		return null;
	}

	[Token(Token = "0x6000A4B")]
	[Address(RVA = "0xF3A2C4", Offset = "0xF3A2C4", VA = "0xF3A2C4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000A4C")]
	[Address(RVA = "0xF3A234", Offset = "0xF3A234", VA = "0xF3A234")]
	[IteratorStateMachine(typeof(<showImages>d__20))]
	private IEnumerator showImages(List<LoadingScreen> loadingScreens)
	{
		return null;
	}

	[Token(Token = "0x6000A4D")]
	[Address(RVA = "0xF3A504", Offset = "0xF3A504", VA = "0xF3A504")]
	private void fade(LoadingScreen t, bool bFadeIn)
	{
	}

	[Token(Token = "0x6000A4E")]
	[Address(RVA = "0xF3A0E8", Offset = "0xF3A0E8", VA = "0xF3A0E8")]
	public void LoadScene(string sceneName)
	{
	}

	[Token(Token = "0x6000A4F")]
	[Address(RVA = "0xF3A7CC", Offset = "0xF3A7CC", VA = "0xF3A7CC")]
	[IteratorStateMachine(typeof(<loadSceneCoroutine>d__23))]
	private IEnumerator loadSceneCoroutine(string sceneName)
	{
		return null;
	}

	[Token(Token = "0x6000A50")]
	[Address(RVA = "0xF3A884", Offset = "0xF3A884", VA = "0xF3A884")]
	[IteratorStateMachine(typeof(<liberateMemory>d__24))]
	private IEnumerator liberateMemory()
	{
		return null;
	}

	[Token(Token = "0x6000A51")]
	private void Shuffle<T>(IList<T> list)
	{
	}

	[Token(Token = "0x6000A52")]
	private void Swap<T>(IList<T> list, int i, int j)
	{
	}

	[Token(Token = "0x6000A53")]
	[Address(RVA = "0xF3A90C", Offset = "0xF3A90C", VA = "0xF3A90C")]
	public SceneLoaderAutoLauncher()
	{
	}
}
[Token(Token = "0x20001A1")]
public class ScoreStats : MonoBehaviour
{
	[StructLayout(3)]
	[Token(Token = "0x20001A2")]
	[CompilerGenerated]
	private struct <LoadBestScoreAndRanking>d__23 : IAsyncStateMachine
	{
		[Token(Token = "0x4000901")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int <>1__state;

		[Token(Token = "0x4000902")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public AsyncVoidMethodBuilder <>t__builder;

		[Token(Token = "0x4000903")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public ScoreStats <>4__this;

		[Token(Token = "0x4000904")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private TaskAwaiter<ServerService.AddRoundResultResponse> <>u__1;

		[Token(Token = "0x6000A77")]
		[Address(RVA = "0xF3C858", Offset = "0xF3C858", VA = "0xF3C858", Slot = "4")]
		private void MoveNext()
		{
		}

		[Token(Token = "0x6000A78")]
		[Address(RVA = "0xF3CE1C", Offset = "0xF3CE1C", VA = "0xF3CE1C", Slot = "5")]
		[DebuggerHidden]
		private void SetStateMachine(IAsyncStateMachine stateMachine)
		{
		}
	}

	[Token(Token = "0x40008EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TextMeshPro playerName;

	[Token(Token = "0x40008F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject newScore;

	[Token(Token = "0x40008F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public TextMeshPro score;

	[Token(Token = "0x40008F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public TextMeshPro coinsGained;

	[Token(Token = "0x40008F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public TextMeshPro teammateDeads;

	[Token(Token = "0x40008F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public TextMeshPro friendlyFire;

	[Token(Token = "0x40008F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public TextMeshPro enemyDeads;

	[Token(Token = "0x40008F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public TextMeshPro enemyHeadshots;

	[Token(Token = "0x40008F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public TextMeshPro hitsReceived;

	[Token(Token = "0x40008F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public TextMeshPro usedBullets;

	[Token(Token = "0x40008F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public TextMeshPro aiming;

	[Token(Token = "0x40008FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public TextMeshPro locationsCompleted;

	[Token(Token = "0x40008FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public TextMeshPro difficulty;

	[Token(Token = "0x40008FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public TextMeshPro time;

	[Token(Token = "0x40008FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public TextMeshPro bestScore;

	[Token(Token = "0x40008FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public TextMeshPro ranking;

	[Token(Token = "0x40008FF")]
	private const string EMPTY_FIELD = "-";

	[Token(Token = "0x4000900")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private bool bestScoreLoaded;

	[Token(Token = "0x6000A6E")]
	[Address(RVA = "0xF3B5D8", Offset = "0xF3B5D8", VA = "0xF3B5D8")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000A6F")]
	[Address(RVA = "0xF3B70C", Offset = "0xF3B70C", VA = "0xF3B70C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000A70")]
	[Address(RVA = "0xF3B7C4", Offset = "0xF3B7C4", VA = "0xF3B7C4")]
	private void FillDataRemote()
	{
	}

	[Token(Token = "0x6000A71")]
	[Address(RVA = "0xF3B704", Offset = "0xF3B704", VA = "0xF3B704")]
	private void FillDataLocal()
	{
	}

	[Token(Token = "0x6000A72")]
	[Address(RVA = "0xF3B7CC", Offset = "0xF3B7CC", VA = "0xF3B7CC")]
	public void FillData(bool calculateCoins = true)
	{
	}

	[Token(Token = "0x6000A73")]
	[Address(RVA = "0xF3C798", Offset = "0xF3C798", VA = "0xF3C798")]
	[AsyncStateMachine(typeof(<LoadBestScoreAndRanking>d__23))]
	private void LoadBestScoreAndRanking()
	{
	}

	[Token(Token = "0x6000A74")]
	[Address(RVA = "0xF3C514", Offset = "0xF3C514", VA = "0xF3C514")]
	private string ParseTime(float fTime)
	{
		return null;
	}

	[Token(Token = "0x6000A75")]
	[Address(RVA = "0xF3C3E8", Offset = "0xF3C3E8", VA = "0xF3C3E8")]
	private string GetSuccessProbability(int success, int total)
	{
		return null;
	}

	[Token(Token = "0x6000A76")]
	[Address(RVA = "0xF3C850", Offset = "0xF3C850", VA = "0xF3C850")]
	public ScoreStats()
	{
	}
}
[Token(Token = "0x20001A3")]
public class MergeTest : MonoBehaviour
{
	[Token(Token = "0x6000A79")]
	[Address(RVA = "0xF3CE28", Offset = "0xF3CE28", VA = "0xF3CE28")]
	private void Start()
	{
	}

	[Token(Token = "0x6000A7A")]
	[Address(RVA = "0xF3D3D4", Offset = "0xF3D3D4", VA = "0xF3D3D4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000A7B")]
	[Address(RVA = "0xF3CF00", Offset = "0xF3CF00", VA = "0xF3CF00")]
	private CrisisVRigade2_LoadSaveData.GlobalStatsData createData(int mul, int day1, int day2)
	{
		return null;
	}

	[Token(Token = "0x6000A7C")]
	[Address(RVA = "0xF3D3D8", Offset = "0xF3D3D8", VA = "0xF3D3D8")]
	public MergeTest()
	{
	}
}
[Token(Token = "0x20001A4")]
public class ServerService : MonoBehaviour
{
	[Token(Token = "0x20001A5")]
	public enum Period
	{
		[Token(Token = "0x4000910")]
		all,
		[Token(Token = "0x4000911")]
		day,
		[Token(Token = "0x4000912")]
		week,
		[Token(Token = "0x4000913")]
		month,
		[Token(Token = "0x4000914")]
		year
	}

	[Token(Token = "0x20001A6")]
	private class GetTokenResponse
	{
		[Token(Token = "0x4000915")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string token;

		[Token(Token = "0x6000A8B")]
		[Address(RVA = "0xF3E1AC", Offset = "0xF3E1AC", VA = "0xF3E1AC")]
		public GetTokenResponse()
		{
		}
	}

	[Token(Token = "0x20001A7")]
	private class ErrorResponse
	{
		[Token(Token = "0x4000916")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string error;

		[Token(Token = "0x6000A8C")]
		[Address(RVA = "0xF3E1B4", Offset = "0xF3E1B4", VA = "0xF3E1B4")]
		public ErrorResponse()
		{
		}
	}

	[Token(Token = "0x20001A8")]
	private class OKResponse
	{
		[Token(Token = "0x4000917")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string ok;

		[Token(Token = "0x6000A8D")]
		[Address(RVA = "0xF3E1BC", Offset = "0xF3E1BC", VA = "0xF3E1BC")]
		public OKResponse()
		{
		}
	}

	[Token(Token = "0x20001A9")]
	public class Player
	{
		[Token(Token = "0x4000918")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public long pla_id;

		[Token(Token = "0x4000919")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string pla_id2;

		[Token(Token = "0x400091A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string pla_platform;

		[Token(Token = "0x400091B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string pla_name;

		[Token(Token = "0x400091C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string pla_debug;

		[Token(Token = "0x6000A8E")]
		[Address(RVA = "0xF3E1C4", Offset = "0xF3E1C4", VA = "0xF3E1C4")]
		public Player()
		{
		}
	}

	[Token(Token = "0x20001AA")]
	public class RoundResult
	{
		[Token(Token = "0x400091D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public long rou_id;

		[Token(Token = "0x400091E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string map_name;

		[Token(Token = "0x400091F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public long pla_id;

		[Token(Token = "0x4000920")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public long pla_id2;

		[Token(Token = "0x4000921")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string rou_room;

		[Token(Token = "0x4000922")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public int rou_score;

		[Token(Token = "0x4000923")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public string rou_difficulty;

		[Token(Token = "0x4000924")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public long rou_date;

		[Token(Token = "0x6000A8F")]
		[Address(RVA = "0xF3E1CC", Offset = "0xF3E1CC", VA = "0xF3E1CC")]
		public RoundResult()
		{
		}
	}

	[Token(Token = "0x20001AB")]
	public class AddRoundResultResponse
	{
		[Token(Token = "0x4000925")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public long rou_id;

		[Token(Token = "0x4000926")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<Round> rounds;

		[Token(Token = "0x6000A90")]
		[Address(RVA = "0xF3E1D4", Offset = "0xF3E1D4", VA = "0xF3E1D4")]
		public AddRoundResultResponse()
		{
		}
	}

	[Token(Token = "0x20001AC")]
	public class Round
	{
		[Token(Token = "0x4000927")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public long rou_id;

		[Token(Token = "0x4000928")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int rou_map_id;

		[Token(Token = "0x4000929")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int rou_pla_id;

		[Token(Token = "0x400092A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int rou_pla_id2;

		[Token(Token = "0x400092B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public int rou_score;

		[Token(Token = "0x400092C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string rou_difficulty;

		[Token(Token = "0x400092D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public long rou_created;

		[Token(Token = "0x400092E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public long position;

		[Token(Token = "0x400092F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public string player1;

		[Token(Token = "0x4000930")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public string player2;

		[Token(Token = "0x6000A91")]
		[Address(RVA = "0xF3E1DC", Offset = "0xF3E1DC", VA = "0xF3E1DC")]
		public Round()
		{
		}
	}

	[Token(Token = "0x20001AD")]
	public class RoundTime
	{
		[Token(Token = "0x4000931")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public List<Round> rounds;

		[Token(Token = "0x4000932")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public DateTime time;

		[Token(Token = "0x6000A92")]
		[Address(RVA = "0xF3DAD0", Offset = "0xF3DAD0", VA = "0xF3DAD0")]
		public RoundTime()
		{
		}
	}

	[Token(Token = "0x20001AE")]
	public class Prefs
	{
		[Token(Token = "0x4000933")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string pre_prefs;

		[Token(Token = "0x6000A93")]
		[Address(RVA = "0xF3E1E4", Offset = "0xF3E1E4", VA = "0xF3E1E4")]
		public Prefs()
		{
		}
	}

	[StructLayout(3)]
	[Token(Token = "0x20001AF")]
	[CompilerGenerated]
	private struct <GetToken>d__11 : IAsyncStateMachine
	{
		[Token(Token = "0x4000934")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int <>1__state;

		[Token(Token = "0x4000935")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public AsyncTaskMethodBuilder<string> <>t__builder;

		[Token(Token = "0x4000936")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ServerService <>4__this;

		[Token(Token = "0x4000937")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private long <salt>5__2;

		[Token(Token = "0x4000938")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private UnityWebRequest <www>5__3;

		[Token(Token = "0x4000939")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private TaskAwaiter<UnityWebRequest.Result> <>u__1;

		[Token(Token = "0x6000A94")]
		[Address(RVA = "0xF3E1EC", Offset = "0xF3E1EC", VA = "0xF3E1EC", Slot = "4")]
		private void MoveNext()
		{
		}

		[Token(Token = "0x6000A95")]
		[Address(RVA = "0xF3EDB4", Offset = "0xF3EDB4", VA = "0xF3EDB4", Slot = "5")]
		[DebuggerHidden]
		private void SetStateMachine(IAsyncStateMachine stateMachine)
		{
		}
	}

	[StructLayout(3)]
	[Token(Token = "0x20001B0")]
	[CompilerGenerated]
	private struct <changeName>d__12 : IAsyncStateMachine
	{
		[Token(Token = "0x400093A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int <>1__state;

		[Token(Token = "0x400093B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public AsyncTaskMethodBuilder<Player> <>t__builder;

		[Token(Token = "0x400093C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ServerService <>4__this;

		[Token(Token = "0x400093D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private TaskAwaiter<Player> <>u__1;

		[Token(Token = "0x6000A96")]
		[Address(RVA = "0xF3EE0C", Offset = "0xF3EE0C", VA = "0xF3EE0C", Slot = "4")]
		private void MoveNext()
		{
		}

		[Token(Token = "0x6000A97")]
		[Address(RVA = "0xF3F008", Offset = "0xF3F008", VA = "0xF3F008", Slot = "5")]
		[DebuggerHidden]
		private void SetStateMachine(IAsyncStateMachine stateMachine)
		{
		}
	}

	[StructLayout(3)]
	[Token(Token = "0x20001B1")]
	[CompilerGenerated]
	private struct <SignIn>d__14 : IAsyncStateMachine
	{
		[Token(Token = "0x400093E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int <>1__state;

		[Token(Token = "0x400093F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public AsyncTaskMethodBuilder<Player> <>t__builder;

		[Token(Token = "0x4000940")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ServerService <>4__this;

		[Token(Token = "0x4000941")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private TaskAwaiter <>u__1;

		[Token(Token = "0x4000942")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private UnityWebRequest <www>5__2;

		[Token(Token = "0x4000943")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private TaskAwaiter<string> <>u__2;

		[Token(Token = "0x4000944")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private TaskAwaiter<UnityWebRequest.Result> <>u__3;

		[Token(Token = "0x6000A98")]
		[Address(RVA = "0xF3F060", Offset = "0xF3F060", VA = "0xF3F060", Slot = "4")]
		private void MoveNext()
		{
		}

		[Token(Token = "0x6000A99")]
		[Address(RVA = "0xF3FF4C", Offset = "0xF3FF4C", VA = "0xF3FF4C", Slot = "5")]
		[DebuggerHidden]
		private void SetStateMachine(IAsyncStateMachine stateMachine)
		{
		}
	}

	[StructLayout(3)]
	[Token(Token = "0x20001B2")]
	[CompilerGenerated]
	private struct <AddRoundResult>d__16 : IAsyncStateMachine
	{
		[Token(Token = "0x4000945")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int <>1__state;

		[Token(Token = "0x4000946")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public AsyncTaskMethodBuilder<AddRoundResultResponse> <>t__builder;

		[Token(Token = "0x4000947")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ServerService <>4__this;

		[Token(Token = "0x4000948")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public RoundResult roundResult;

		[Token(Token = "0x4000949")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool loadResults;

		[Token(Token = "0x400094A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private UnityWebRequest <www>5__2;

		[Token(Token = "0x400094B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private TaskAwaiter<string> <>u__1;

		[Token(Token = "0x400094C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private TaskAwaiter<Player> <>u__2;

		[Token(Token = "0x400094D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private TaskAwaiter<UnityWebRequest.Result> <>u__3;

		[Token(Token = "0x6000A9A")]
		[Address(RVA = "0xF3FFA4", Offset = "0xF3FFA4", VA = "0xF3FFA4", Slot = "4")]
		private void MoveNext()
		{
		}

		[Token(Token = "0x6000A9B")]
		[Address(RVA = "0xF40DAC", Offset = "0xF40DAC", VA = "0xF40DAC", Slot = "5")]
		[DebuggerHidden]
		private void SetStateMachine(IAsyncStateMachine stateMachine)
		{
		}
	}

	[StructLayout(3)]
	[Token(Token = "0x20001B3")]
	[CompilerGenerated]
	private struct <GetRoundResults>d__20 : IAsyncStateMachine
	{
		[Token(Token = "0x400094E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int <>1__state;

		[Token(Token = "0x400094F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public AsyncTaskMethodBuilder<List<Round>> <>t__builder;

		[Token(Token = "0x4000950")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string map_name;

		[Token(Token = "0x4000951")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Period period;

		[Token(Token = "0x4000952")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public ServerService <>4__this;

		[Token(Token = "0x4000953")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public long pla_id;

		[Token(Token = "0x4000954")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public long pla_id2;

		[Token(Token = "0x4000955")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private UnityWebRequest <www>5__2;

		[Token(Token = "0x4000956")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private TaskAwaiter<string> <>u__1;

		[Token(Token = "0x4000957")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private TaskAwaiter<Player> <>u__2;

		[Token(Token = "0x4000958")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private TaskAwaiter<UnityWebRequest.Result> <>u__3;

		[Token(Token = "0x6000A9C")]
		[Address(RVA = "0xF40E04", Offset = "0xF40E04", VA = "0xF40E04", Slot = "4")]
		private void MoveNext()
		{
		}

		[Token(Token = "0x6000A9D")]
		[Address(RVA = "0xF41A70", Offset = "0xF41A70", VA = "0xF41A70", Slot = "5")]
		[DebuggerHidden]
		private void SetStateMachine(IAsyncStateMachine stateMachine)
		{
		}
	}

	[StructLayout(3)]
	[Token(Token = "0x20001B4")]
	[CompilerGenerated]
	private struct <UploadPrefs>d__21 : IAsyncStateMachine
	{
		[Token(Token = "0x4000959")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int <>1__state;

		[Token(Token = "0x400095A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public AsyncTaskMethodBuilder<bool> <>t__builder;

		[Token(Token = "0x400095B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ServerService <>4__this;

		[Token(Token = "0x400095C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string prefs;

		[Token(Token = "0x400095D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string type;

		[Token(Token = "0x400095E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private UnityWebRequest <www>5__2;

		[Token(Token = "0x400095F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private TaskAwaiter<string> <>u__1;

		[Token(Token = "0x4000960")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private TaskAwaiter<Player> <>u__2;

		[Token(Token = "0x4000961")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private TaskAwaiter<UnityWebRequest.Result> <>u__3;

		[Token(Token = "0x6000A9E")]
		[Address(RVA = "0xF41AC8", Offset = "0xF41AC8", VA = "0xF41AC8", Slot = "4")]
		private void MoveNext()
		{
		}

		[Token(Token = "0x6000A9F")]
		[Address(RVA = "0xF42594", Offset = "0xF42594", VA = "0xF42594", Slot = "5")]
		[DebuggerHidden]
		private void SetStateMachine(IAsyncStateMachine stateMachine)
		{
		}
	}

	[StructLayout(3)]
	[Token(Token = "0x20001B5")]
	[CompilerGenerated]
	private struct <DownloadPrefs>d__22 : IAsyncStateMachine
	{
		[Token(Token = "0x4000962")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int <>1__state;

		[Token(Token = "0x4000963")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public AsyncTaskMethodBuilder<string> <>t__builder;

		[Token(Token = "0x4000964")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ServerService <>4__this;

		[Token(Token = "0x4000965")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string type;

		[Token(Token = "0x4000966")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private UnityWebRequest <www>5__2;

		[Token(Token = "0x4000967")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private TaskAwaiter<string> <>u__1;

		[Token(Token = "0x4000968")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private TaskAwaiter<Player> <>u__2;

		[Token(Token = "0x4000969")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private TaskAwaiter<UnityWebRequest.Result> <>u__3;

		[Token(Token = "0x6000AA0")]
		[Address(RVA = "0xF425EC", Offset = "0xF425EC", VA = "0xF425EC", Slot = "4")]
		private void MoveNext()
		{
		}

		[Token(Token = "0x6000AA1")]
		[Address(RVA = "0xF430D8", Offset = "0xF430D8", VA = "0xF430D8", Slot = "5")]
		[DebuggerHidden]
		private void SetStateMachine(IAsyncStateMachine stateMachine)
		{
		}
	}

	[Token(Token = "0x4000905")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string Server;

	[Token(Token = "0x4000906")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Player player;

	[Token(Token = "0x4000907")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private string GetTokenRequestKey;

	[Token(Token = "0x4000908")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private string currentToken;

	[Token(Token = "0x4000909")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private long currentTokenTimestamp;

	[Token(Token = "0x400090A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Dictionary<string, string> prefs;

	[Token(Token = "0x400090B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static ServerService Instance;

	[Token(Token = "0x400090C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static int RESULT_QUANTITY;

	[Token(Token = "0x400090D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool SignInInProcess;

	[Token(Token = "0x400090E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Dictionary<string, RoundTime> roundResultCache;

	[Token(Token = "0x6000A7D")]
	[Address(RVA = "0xF3D3E0", Offset = "0xF3D3E0", VA = "0xF3D3E0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000A7E")]
	[Address(RVA = "0xF3D514", Offset = "0xF3D514", VA = "0xF3D514")]
	private void Start()
	{
	}

	[Token(Token = "0x6000A7F")]
	[Address(RVA = "0xF3D518", Offset = "0xF3D518", VA = "0xF3D518")]
	[AsyncStateMachine(typeof(<GetToken>d__11))]
	private Task<string> GetToken()
	{
		return null;
	}

	[Token(Token = "0x6000A80")]
	[Address(RVA = "0xF3D624", Offset = "0xF3D624", VA = "0xF3D624")]
	[AsyncStateMachine(typeof(<changeName>d__12))]
	public Task<Player> changeName()
	{
		return null;
	}

	[Token(Token = "0x6000A81")]
	[Address(RVA = "0xF3D730", Offset = "0xF3D730", VA = "0xF3D730")]
	[AsyncStateMachine(typeof(<SignIn>d__14))]
	public Task<Player> SignIn()
	{
		return null;
	}

	[Token(Token = "0x6000A82")]
	[Address(RVA = "0xF3D840", Offset = "0xF3D840", VA = "0xF3D840")]
	public Player GetPlayer()
	{
		return null;
	}

	[Token(Token = "0x6000A83")]
	[Address(RVA = "0xF3D848", Offset = "0xF3D848", VA = "0xF3D848")]
	[AsyncStateMachine(typeof(<AddRoundResult>d__16))]
	public Task<AddRoundResultResponse> AddRoundResult(RoundResult roundResult, bool loadResults = false)
	{
		return null;
	}

	[Token(Token = "0x6000A84")]
	[Address(RVA = "0xF3D980", Offset = "0xF3D980", VA = "0xF3D980")]
	private void PutRoundResultsInCache(List<Round> rounds, string map_name, Period period)
	{
	}

	[Token(Token = "0x6000A85")]
	[Address(RVA = "0xF3DAD8", Offset = "0xF3DAD8", VA = "0xF3DAD8")]
	public List<Round> GetRoundResultsFromCache(string map_name, Period period)
	{
		return null;
	}

	[Token(Token = "0x6000A86")]
	[Address(RVA = "0xF3DC98", Offset = "0xF3DC98", VA = "0xF3DC98")]
	[AsyncStateMachine(typeof(<GetRoundResults>d__20))]
	public Task<List<Round>> GetRoundResults(long pla_id, long pla_id2, string map_name, Period period)
	{
		return null;
	}

	[Token(Token = "0x6000A87")]
	[Address(RVA = "0xF3DDE4", Offset = "0xF3DDE4", VA = "0xF3DDE4")]
	[AsyncStateMachine(typeof(<UploadPrefs>d__21))]
	public Task<bool> UploadPrefs(string prefs, string type)
	{
		return null;
	}

	[Token(Token = "0x6000A88")]
	[Address(RVA = "0xF3DF30", Offset = "0xF3DF30", VA = "0xF3DF30")]
	[AsyncStateMachine(typeof(<DownloadPrefs>d__22))]
	public Task<string> DownloadPrefs(string type)
	{
		return null;
	}

	[Token(Token = "0x6000A89")]
	[Address(RVA = "0xF3E05C", Offset = "0xF3E05C", VA = "0xF3E05C")]
	public ServerService()
	{
	}
}
[Token(Token = "0x20001B6")]
public static class UnityWebRequestExtension
{
	[Token(Token = "0x6000AA2")]
	[Address(RVA = "0xF3EBFC", Offset = "0xF3EBFC", VA = "0xF3EBFC")]
	public static TaskAwaiter<UnityWebRequest.Result> GetAwaiter(this UnityWebRequestAsyncOperation reqOp)
	{
		return default(TaskAwaiter<UnityWebRequest.Result>);
	}
}
[Token(Token = "0x20001B8")]
public class ServerServiceTest : MonoBehaviour
{
	[StructLayout(3)]
	[Token(Token = "0x20001B9")]
	[CompilerGenerated]
	private struct <Start>d__0 : IAsyncStateMachine
	{
		[Token(Token = "0x400096C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int <>1__state;

		[Token(Token = "0x400096D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public AsyncVoidMethodBuilder <>t__builder;

		[Token(Token = "0x400096E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public ServerServiceTest <>4__this;

		[Token(Token = "0x6000AA8")]
		[Address(RVA = "0xF4335C", Offset = "0xF4335C", VA = "0xF4335C", Slot = "4")]
		private void MoveNext()
		{
		}

		[Token(Token = "0x6000AA9")]
		[Address(RVA = "0xF43428", Offset = "0xF43428", VA = "0xF43428", Slot = "5")]
		[DebuggerHidden]
		private void SetStateMachine(IAsyncStateMachine stateMachine)
		{
		}
	}

	[StructLayout(3)]
	[Token(Token = "0x20001BB")]
	[CompilerGenerated]
	private struct <Test>d__1 : IAsyncStateMachine
	{
		[Token(Token = "0x4000971")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int <>1__state;

		[Token(Token = "0x4000972")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public AsyncTaskMethodBuilder<bool> <>t__builder;

		[Token(Token = "0x4000973")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private TaskAwaiter <>u__1;

		[Token(Token = "0x4000974")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private TaskAwaiter<ServerService.Player> <>u__2;

		[Token(Token = "0x6000AAD")]
		[Address(RVA = "0xF434B0", Offset = "0xF434B0", VA = "0xF434B0", Slot = "4")]
		private void MoveNext()
		{
		}

		[Token(Token = "0x6000AAE")]
		[Address(RVA = "0xF43968", Offset = "0xF43968", VA = "0xF43968", Slot = "5")]
		[DebuggerHidden]
		private void SetStateMachine(IAsyncStateMachine stateMachine)
		{
		}
	}

	[Token(Token = "0x6000AA5")]
	[Address(RVA = "0xF431A8", Offset = "0xF431A8", VA = "0xF431A8")]
	[AsyncStateMachine(typeof(<Start>d__0))]
	private void Start()
	{
	}

	[Token(Token = "0x6000AA6")]
	[Address(RVA = "0xF4325C", Offset = "0xF4325C", VA = "0xF4325C")]
	[AsyncStateMachine(typeof(<Test>d__1))]
	public Task<bool> Test()
	{
		return null;
	}

	[Token(Token = "0x6000AA7")]
	[Address(RVA = "0xF43354", Offset = "0xF43354", VA = "0xF43354")]
	public ServerServiceTest()
	{
	}
}
[Token(Token = "0x20001BC")]
public class ShootGrenade : MonoBehaviour
{
	[Token(Token = "0x4000975")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject shoot;

	[Token(Token = "0x6000AAF")]
	[Address(RVA = "0xF439C0", Offset = "0xF439C0", VA = "0xF439C0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000AB0")]
	[Address(RVA = "0xF43A10", Offset = "0xF43A10", VA = "0xF43A10")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000AB1")]
	[Address(RVA = "0xF43A4C", Offset = "0xF43A4C", VA = "0xF43A4C")]
	private void Show()
	{
	}

	[Token(Token = "0x6000AB2")]
	[Address(RVA = "0xF43A2C", Offset = "0xF43A2C", VA = "0xF43A2C")]
	private void Hide()
	{
	}

	[Token(Token = "0x6000AB3")]
	[Address(RVA = "0xF43A6C", Offset = "0xF43A6C", VA = "0xF43A6C")]
	public ShootGrenade()
	{
	}
}
[Token(Token = "0x20001BD")]
public class Headphones : SVRInteractable
{
	[Token(Token = "0x4000976")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public AudioMixerSnapshot defaultSnapshot;

	[Token(Token = "0x4000977")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public AudioMixerSnapshot headphonesSnapshot;

	[Token(Token = "0x4000978")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private bool mounted;

	[Token(Token = "0x4000979")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private MeshRenderer mesh;

	[Token(Token = "0x6000AB4")]
	[Address(RVA = "0xF43A74", Offset = "0xF43A74", VA = "0xF43A74", Slot = "5")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x6000AB5")]
	[Address(RVA = "0xF43AD8", Offset = "0xF43AD8", VA = "0xF43AD8", Slot = "9")]
	public override void BeginInteraction(SVRHand hand)
	{
	}

	[Token(Token = "0x6000AB6")]
	[Address(RVA = "0xF43CA0", Offset = "0xF43CA0", VA = "0xF43CA0")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000AB7")]
	[Address(RVA = "0xF43E80", Offset = "0xF43E80", VA = "0xF43E80", Slot = "19")]
	protected override void OnDestroy()
	{
	}

	[Token(Token = "0x6000AB8")]
	[Address(RVA = "0xF43D7C", Offset = "0xF43D7C", VA = "0xF43D7C")]
	private void Mount()
	{
	}

	[Token(Token = "0x6000AB9")]
	[Address(RVA = "0xF43B5C", Offset = "0xF43B5C", VA = "0xF43B5C")]
	public void Unmount()
	{
	}

	[Token(Token = "0x6000ABA")]
	[Address(RVA = "0xF43EAC", Offset = "0xF43EAC", VA = "0xF43EAC")]
	public Headphones()
	{
	}
}
[Token(Token = "0x20001BE")]
public class ShowCheckSurroundingsDialog : MonoBehaviour
{
	[Token(Token = "0x6000ABC")]
	[Address(RVA = "0xF43F0C", Offset = "0xF43F0C", VA = "0xF43F0C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000ABD")]
	[Address(RVA = "0xF43F74", Offset = "0xF43F74", VA = "0xF43F74")]
	private void Update()
	{
	}

	[Token(Token = "0x6000ABE")]
	[Address(RVA = "0xF43F78", Offset = "0xF43F78", VA = "0xF43F78")]
	public ShowCheckSurroundingsDialog()
	{
	}
}
[Token(Token = "0x20001BF")]
public class RigidbodyTest : MonoBehaviour
{
	[Token(Token = "0x6000ABF")]
	[Address(RVA = "0xF43F80", Offset = "0xF43F80", VA = "0xF43F80")]
	private void Update()
	{
	}

	[Token(Token = "0x6000AC0")]
	[Address(RVA = "0xF44200", Offset = "0xF44200", VA = "0xF44200")]
	public RigidbodyTest()
	{
	}
}
[Token(Token = "0x20001C0")]
public class TextMarquee : MonoBehaviour
{
	[Token(Token = "0x20001C1")]
	[CompilerGenerated]
	private sealed class <AnimateText>d__10 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400097F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000980")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000981")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TextMarquee <>4__this;

		[Token(Token = "0x4000982")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string text;

		[Token(Token = "0x4000983")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private WaitForSeconds <wfs>5__2;

		[Token(Token = "0x4000984")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private string <textTemplate>5__3;

		[Token(Token = "0x4000985")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private int <count>5__4;

		[Token(Token = "0x17000095")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000ACB")]
			[Address(RVA = "0xF446CC", Offset = "0xF446CC", VA = "0xF446CC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000096")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000ACD")]
			[Address(RVA = "0xF44714", Offset = "0xF44714", VA = "0xF44714", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000AC8")]
		[Address(RVA = "0xF44460", Offset = "0xF44460", VA = "0xF44460")]
		[DebuggerHidden]
		public <AnimateText>d__10(int <>1__state)
		{
		}

		[Token(Token = "0x6000AC9")]
		[Address(RVA = "0xF44490", Offset = "0xF44490", VA = "0xF44490", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000ACA")]
		[Address(RVA = "0xF44494", Offset = "0xF44494", VA = "0xF44494", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000ACC")]
		[Address(RVA = "0xF446D4", Offset = "0xF446D4", VA = "0xF446D4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400097A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int capacity;

	[Token(Token = "0x400097B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int blankSpaces;

	[Token(Token = "0x400097C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool animateAlways;

	[Token(Token = "0x400097D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float interval;

	[Token(Token = "0x400097E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private TextMeshPro textMesh;

	[Token(Token = "0x6000AC1")]
	[Address(RVA = "0xF44208", Offset = "0xF44208", VA = "0xF44208")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000AC2")]
	[Address(RVA = "0xF4428C", Offset = "0xF4428C", VA = "0xF4428C")]
	public void SetText(string text)
	{
	}

	[Token(Token = "0x6000AC3")]
	[Address(RVA = "0xF4439C", Offset = "0xF4439C", VA = "0xF4439C")]
	public TextMeshPro GetText()
	{
		return null;
	}

	[Token(Token = "0x6000AC4")]
	[Address(RVA = "0xF443A4", Offset = "0xF443A4", VA = "0xF443A4")]
	public void Show()
	{
	}

	[Token(Token = "0x6000AC5")]
	[Address(RVA = "0xF443EC", Offset = "0xF443EC", VA = "0xF443EC")]
	public void Hide(bool stop)
	{
	}

	[Token(Token = "0x6000AC6")]
	[Address(RVA = "0xF4430C", Offset = "0xF4430C", VA = "0xF4430C")]
	[IteratorStateMachine(typeof(<AnimateText>d__10))]
	private IEnumerator AnimateText(string text)
	{
		return null;
	}

	[Token(Token = "0x6000AC7")]
	[Address(RVA = "0xF44488", Offset = "0xF44488", VA = "0xF44488")]
	public TextMarquee()
	{
	}
}
[Token(Token = "0x20001C2")]
public class Unparentator : MonoBehaviour
{
	[Token(Token = "0x4000986")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Transform parent;

	[Token(Token = "0x6000ACE")]
	[Address(RVA = "0xF4471C", Offset = "0xF4471C", VA = "0xF4471C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000ACF")]
	[Address(RVA = "0xF44750", Offset = "0xF44750", VA = "0xF44750")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000AD0")]
	[Address(RVA = "0xF44774", Offset = "0xF44774", VA = "0xF44774")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000AD1")]
	[Address(RVA = "0xF44854", Offset = "0xF44854", VA = "0xF44854")]
	public Unparentator()
	{
	}
}
[Token(Token = "0x20001C3")]
public class VersionedGameObject : MonoBehaviour
{
	[Token(Token = "0x4000987")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool CrisisVRigade2;

	[Token(Token = "0x4000988")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool CrisisBrigade2reloaded;

	[Token(Token = "0x4000989")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<GameObject> versionable_objects;

	[Token(Token = "0x6000AD2")]
	[Address(RVA = "0xF4485C", Offset = "0xF4485C", VA = "0xF4485C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000AD3")]
	[Address(RVA = "0xF449AC", Offset = "0xF449AC", VA = "0xF449AC")]
	public VersionedGameObject()
	{
	}
}
[Token(Token = "0x20001C4")]
public class CrowdSpawner : MonoBehaviour
{
	[Token(Token = "0x400098A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int locationId;

	[Token(Token = "0x400098B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string pool_meshanimator;

	[Token(Token = "0x400098C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string pool_dead_poses_meshanimator;

	[Token(Token = "0x400098D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public int sizeOfCrowd;

	[Token(Token = "0x400098E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public int sizeOfDeadBodies;

	[Token(Token = "0x400098F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float delay;

	[Token(Token = "0x4000990")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float first_wave_ratio;

	[Token(Token = "0x4000991")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float second_wave_ratio;

	[Token(Token = "0x4000992")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float first_wave_duration;

	[Token(Token = "0x4000993")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public PathFollowerSingleObject sound_follow;

	[Token(Token = "0x4000994")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float DEAD_BODIES_MIN_DISTANCE;

	[Token(Token = "0x4000995")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private float DEAD_BODIES_MAX_DISTANCE;

	[Token(Token = "0x4000996")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private int pooled_agents_count;

	[Token(Token = "0x4000997")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private int dead_bodies_count;

	[Token(Token = "0x4000998")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private int spawnId;

	[Token(Token = "0x4000999")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public List<AimTarget> targets;

	[Token(Token = "0x6000AD4")]
	[Address(RVA = "0xF449B4", Offset = "0xF449B4", VA = "0xF449B4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000AD5")]
	[Address(RVA = "0xF44A80", Offset = "0xF44A80", VA = "0xF44A80")]
	public void OnLocationActivated(int locationId)
	{
	}

	[Token(Token = "0x6000AD6")]
	[Address(RVA = "0xF44C68", Offset = "0xF44C68", VA = "0xF44C68")]
	private void prepareTargets()
	{
	}

	[Token(Token = "0x6000AD7")]
	[Address(RVA = "0xF44FC0", Offset = "0xF44FC0", VA = "0xF44FC0")]
	private void FirstWaves()
	{
	}

	[Token(Token = "0x6000AD8")]
	[Address(RVA = "0xF45158", Offset = "0xF45158", VA = "0xF45158")]
	private void SecondWaves()
	{
	}

	[Token(Token = "0x6000AD9")]
	[Address(RVA = "0xF451BC", Offset = "0xF451BC", VA = "0xF451BC")]
	private void StartSoundFollow()
	{
	}

	[Token(Token = "0x6000ADA")]
	[Address(RVA = "0xF451D8", Offset = "0xF451D8", VA = "0xF451D8")]
	private void SpawnCrowd()
	{
	}

	[Token(Token = "0x6000ADB")]
	[Address(RVA = "0xF45454", Offset = "0xF45454", VA = "0xF45454")]
	public void AgentDead(Transform agent, float distance, string death_pose)
	{
	}

	[Token(Token = "0x6000ADC")]
	[Address(RVA = "0xF45464", Offset = "0xF45464", VA = "0xF45464")]
	public void StopSpawning()
	{
	}

	[Token(Token = "0x6000ADD")]
	[Address(RVA = "0xF454FC", Offset = "0xF454FC", VA = "0xF454FC")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000ADE")]
	[Address(RVA = "0xF455C8", Offset = "0xF455C8", VA = "0xF455C8")]
	public CrowdSpawner()
	{
	}
}
[Token(Token = "0x20001C5")]
public class CrowdSpawnerModifier : MonoBehaviour
{
	[Token(Token = "0x400099A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float smithsBulletTime;

	[Token(Token = "0x400099B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float smithsBulletTimeDelay;

	[Token(Token = "0x400099C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public WalkieTalkie.CommunicationEvent walkieTalkieEvent;

	[Token(Token = "0x6000ADF")]
	[Address(RVA = "0xF456C8", Offset = "0xF456C8", VA = "0xF456C8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000AE0")]
	[Address(RVA = "0xF456CC", Offset = "0xF456CC", VA = "0xF456CC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000AE1")]
	[Address(RVA = "0xF45098", Offset = "0xF45098", VA = "0xF45098")]
	public void Execute()
	{
	}

	[Token(Token = "0x6000AE2")]
	[Address(RVA = "0xF456D0", Offset = "0xF456D0", VA = "0xF456D0")]
	public CrowdSpawnerModifier()
	{
	}
}
[Token(Token = "0x20001C6")]
public class CustomLayerObject : MonoBehaviour
{
	[Token(Token = "0x400099D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string gameObjectName;

	[Token(Token = "0x400099E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int layerIndex;

	[Token(Token = "0x6000AE4")]
	[Address(RVA = "0xF45780", Offset = "0xF45780", VA = "0xF45780")]
	private void Start()
	{
	}

	[Token(Token = "0x6000AE5")]
	[Address(RVA = "0xF45830", Offset = "0xF45830", VA = "0xF45830")]
	public CustomLayerObject()
	{
	}
}
[Token(Token = "0x20001C7")]
public class CustomRenderQueue : MonoBehaviour
{
	[Token(Token = "0x400099F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int custom_render_queue;

	[Token(Token = "0x40009A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool modifychildren;

	[Token(Token = "0x6000AE6")]
	[Address(RVA = "0xF45838", Offset = "0xF45838", VA = "0xF45838")]
	private void Start()
	{
	}

	[Token(Token = "0x6000AE7")]
	[Address(RVA = "0xF4583C", Offset = "0xF4583C", VA = "0xF4583C")]
	private void modifyRenderQueue()
	{
	}

	[Token(Token = "0x6000AE8")]
	[Address(RVA = "0xF45930", Offset = "0xF45930", VA = "0xF45930")]
	public CustomRenderQueue()
	{
	}
}
[Token(Token = "0x20001C8")]
public class DelayedRecord : MonoBehaviour
{
	[Token(Token = "0x40009A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float start_delay;

	[Token(Token = "0x6000AE9")]
	[Address(RVA = "0xF45940", Offset = "0xF45940", VA = "0xF45940")]
	private void Start()
	{
	}

	[Token(Token = "0x6000AEA")]
	[Address(RVA = "0xF45A24", Offset = "0xF45A24", VA = "0xF45A24")]
	private void DelayRecord()
	{
	}

	[Token(Token = "0x6000AEB")]
	[Address(RVA = "0xF45A7C", Offset = "0xF45A7C", VA = "0xF45A7C")]
	public DelayedRecord()
	{
	}
}
[Token(Token = "0x20001C9")]
public class EmissivePulse : MonoBehaviour
{
	[Token(Token = "0x6000AEC")]
	[Address(RVA = "0xF45A8C", Offset = "0xF45A8C", VA = "0xF45A8C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000AED")]
	[Address(RVA = "0xF45B40", Offset = "0xF45B40", VA = "0xF45B40")]
	public EmissivePulse()
	{
	}
}
[Token(Token = "0x20001CA")]
public class ExcludeFromPlatformBuild : MonoBehaviour
{
	[Token(Token = "0x40009A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool exclude_pc;

	[Token(Token = "0x40009A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool exclude_android;

	[Token(Token = "0x40009A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	public bool exclude_quest2;

	[Token(Token = "0x40009A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B")]
	public bool exclude_ps4;

	[Token(Token = "0x6000AEE")]
	[Address(RVA = "0xF45B48", Offset = "0xF45B48", VA = "0xF45B48")]
	private void Start()
	{
	}

	[Token(Token = "0x6000AEF")]
	[Address(RVA = "0xF45BF0", Offset = "0xF45BF0", VA = "0xF45BF0")]
	public ExcludeFromPlatformBuild()
	{
	}
}
[Token(Token = "0x20001CB")]
public class ExitButton : UIButton
{
	[Token(Token = "0x6000AF0")]
	[Address(RVA = "0xF45BF8", Offset = "0xF45BF8", VA = "0xF45BF8", Slot = "4")]
	public override bool OnHit(Bullet bullet, Ray ray, RaycastHit hit)
	{
		return default(bool);
	}

	[Token(Token = "0x6000AF1")]
	[Address(RVA = "0xF45CAC", Offset = "0xF45CAC", VA = "0xF45CAC")]
	private void exitGame()
	{
	}

	[Token(Token = "0x6000AF2")]
	[Address(RVA = "0xF45DFC", Offset = "0xF45DFC", VA = "0xF45DFC")]
	public ExitButton()
	{
	}
}
[Token(Token = "0x20001CD")]
public class FollowTransform : MonoBehaviour
{
	[Token(Token = "0x40009A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform transformToFollow;

	[Token(Token = "0x40009A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float deltaY;

	[Token(Token = "0x6000AF6")]
	[Address(RVA = "0xF45E84", Offset = "0xF45E84", VA = "0xF45E84")]
	private void Update()
	{
	}

	[Token(Token = "0x6000AF7")]
	[Address(RVA = "0xF45F10", Offset = "0xF45F10", VA = "0xF45F10")]
	public FollowTransform()
	{
	}
}
[Token(Token = "0x20001CE")]
public class ForceStraightScale : MonoBehaviour
{
	[Token(Token = "0x6000AF8")]
	[Address(RVA = "0xF45F18", Offset = "0xF45F18", VA = "0xF45F18")]
	private void Update()
	{
	}

	[Token(Token = "0x6000AF9")]
	[Address(RVA = "0xF45FDC", Offset = "0xF45FDC", VA = "0xF45FDC")]
	public ForceStraightScale()
	{
	}
}
[Token(Token = "0x20001CF")]
public class GameObjectAnimator : MonoBehaviour
{
	[Token(Token = "0x40009AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Vector3 initPosition;

	[Token(Token = "0x40009AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Vector3 initRotation;

	[Token(Token = "0x40009AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Vector3 initScale;

	[Token(Token = "0x40009AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private Vector3 animatedPosition;

	[Token(Token = "0x40009AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Vector3 animatedRotation;

	[Token(Token = "0x40009AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private Vector3 animatedScale;

	[Token(Token = "0x6000AFA")]
	[Address(RVA = "0xF45FE4", Offset = "0xF45FE4", VA = "0xF45FE4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000AFB")]
	[Address(RVA = "0xF4616C", Offset = "0xF4616C", VA = "0xF4616C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000AFC")]
	[Address(RVA = "0xF4617C", Offset = "0xF4617C", VA = "0xF4617C")]
	public void setAnimation(bool enable, float time)
	{
	}

	[Token(Token = "0x6000AFD")]
	[Address(RVA = "0xF462C0", Offset = "0xF462C0", VA = "0xF462C0")]
	public GameObjectAnimator()
	{
	}
}
[Token(Token = "0x20001D0")]
public class GOButton : HitTarget
{
	[Token(Token = "0x40009B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Transform goButton;

	[Token(Token = "0x40009B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Transform targets;

	[Token(Token = "0x40009B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Animator animator;

	[Token(Token = "0x6000AFE")]
	[Address(RVA = "0xF462C8", Offset = "0xF462C8", VA = "0xF462C8")]
	protected void Awake()
	{
	}

	[Token(Token = "0x6000AFF")]
	[Address(RVA = "0xF463A8", Offset = "0xF463A8", VA = "0xF463A8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000B00")]
	[Address(RVA = "0xF466E4", Offset = "0xF466E4", VA = "0xF466E4")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000B01")]
	[Address(RVA = "0xF468E8", Offset = "0xF468E8", VA = "0xF468E8", Slot = "4")]
	public override bool OnHit(Bullet bullet, Ray ray, RaycastHit hit)
	{
		return default(bool);
	}

	[Token(Token = "0x6000B02")]
	[Address(RVA = "0xF46A44", Offset = "0xF46A44", VA = "0xF46A44")]
	public void OnHitInternal(string strMission, int iExpectedPlayers, Vector3 force, Vector3 point, GameManager.Difficulty difficulty, bool bRemote = false)
	{
	}

	[Token(Token = "0x6000B03")]
	[Address(RVA = "0xF470FC", Offset = "0xF470FC", VA = "0xF470FC")]
	public void SetTarget(GameManager.Difficulty dif)
	{
	}

	[Token(Token = "0x6000B04")]
	[Address(RVA = "0xF465B4", Offset = "0xF465B4", VA = "0xF465B4")]
	private void OnMissionSelected()
	{
	}

	[Token(Token = "0x6000B05")]
	[Address(RVA = "0xF472F0", Offset = "0xF472F0", VA = "0xF472F0")]
	private void OnGameDisconnected(DisconnectCause cause)
	{
	}

	[Token(Token = "0x6000B06")]
	[Address(RVA = "0xF47234", Offset = "0xF47234", VA = "0xF47234")]
	private void Show()
	{
	}

	[Token(Token = "0x6000B07")]
	[Address(RVA = "0xF472CC", Offset = "0xF472CC", VA = "0xF472CC")]
	private void Hide()
	{
	}

	[Token(Token = "0x6000B08")]
	[Address(RVA = "0xF472F4", Offset = "0xF472F4", VA = "0xF472F4")]
	public GOButton()
	{
	}
}
[Token(Token = "0x20001D1")]
public class Helicopter : MonoBehaviour
{
	[Token(Token = "0x40009B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Vector3[] wps;

	[Token(Token = "0x6000B09")]
	[Address(RVA = "0xF472FC", Offset = "0xF472FC", VA = "0xF472FC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000B0A")]
	[Address(RVA = "0xF47300", Offset = "0xF47300", VA = "0xF47300")]
	public Helicopter()
	{
	}
}
[Token(Token = "0x20001D2")]
public class HeliRotorRotation : MonoBehaviour
{
	[Token(Token = "0x40009B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 rotationAxis;

	[Token(Token = "0x40009B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float speed;

	[Token(Token = "0x6000B0B")]
	[Address(RVA = "0xF47308", Offset = "0xF47308", VA = "0xF47308")]
	private void Update()
	{
	}

	[Token(Token = "0x6000B0C")]
	[Address(RVA = "0xF473A0", Offset = "0xF473A0", VA = "0xF473A0")]
	public HeliRotorRotation()
	{
	}
}
[Token(Token = "0x20001D3")]
public class HostageController : CommonCharacterController
{
	[Token(Token = "0x40009B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
	public Bomb bomb;

	[Token(Token = "0x40009B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
	private CommonCharacterController hijacker;

	[Token(Token = "0x40009B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
	private bool bewareBombs;

	[Token(Token = "0x40009B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1FC")]
	private Vector3 bombPosition;

	[Token(Token = "0x40009BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
	private Transform bombParent;

	[Token(Token = "0x6000B0D")]
	[Address(RVA = "0xF473B0", Offset = "0xF473B0", VA = "0xF473B0", Slot = "9")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x6000B0E")]
	[Address(RVA = "0xF4741C", Offset = "0xF4741C", VA = "0xF4741C", Slot = "10")]
	protected override void OnDisable()
	{
	}

	[Token(Token = "0x6000B0F")]
	[Address(RVA = "0xF4750C", Offset = "0xF4750C", VA = "0xF4750C", Slot = "20")]
	protected override void OnEnable()
	{
	}

	[Token(Token = "0x6000B10")]
	[Address(RVA = "0xF47634", Offset = "0xF47634", VA = "0xF47634", Slot = "4")]
	public override bool OnHit(Bullet bullet, Ray ray, RaycastHit hit)
	{
		return default(bool);
	}

	[Token(Token = "0x6000B11")]
	[Address(RVA = "0xF477A8", Offset = "0xF477A8", VA = "0xF477A8")]
	private void Explode()
	{
	}

	[Token(Token = "0x6000B12")]
	[Address(RVA = "0xF4784C", Offset = "0xF4784C", VA = "0xF4784C", Slot = "7")]
	public override void OnTarget(Bullet bullet)
	{
	}

	[Token(Token = "0x6000B13")]
	[Address(RVA = "0xF47930", Offset = "0xF47930", VA = "0xF47930")]
	private void BombNearCommunication()
	{
	}

	[Token(Token = "0x6000B14")]
	[Address(RVA = "0xF479A0", Offset = "0xF479A0", VA = "0xF479A0")]
	public void RegisterHijacker(CommonCharacterController hijacker)
	{
	}

	[Token(Token = "0x6000B15")]
	[Address(RVA = "0xF479B0", Offset = "0xF479B0", VA = "0xF479B0")]
	public HostageController()
	{
	}
}
[Token(Token = "0x20001D4")]
public class Keyboard : MonoBehaviour
{
	[Token(Token = "0x40009BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public KeyboardScreen screen;

	[Token(Token = "0x40009BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public UnityEvent okEvent;

	[Token(Token = "0x40009BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public UnityEvent cancelEvent;

	[Token(Token = "0x6000B16")]
	[Address(RVA = "0xF47A10", Offset = "0xF47A10", VA = "0xF47A10")]
	public void show()
	{
	}

	[Token(Token = "0x6000B17")]
	[Address(RVA = "0xF47A5C", Offset = "0xF47A5C", VA = "0xF47A5C")]
	public void hide()
	{
	}

	[Token(Token = "0x6000B18")]
	[Address(RVA = "0xF47AA8", Offset = "0xF47AA8", VA = "0xF47AA8")]
	public void keyPressed(KeyboardKey key)
	{
	}

	[Token(Token = "0x6000B19")]
	[Address(RVA = "0xF47CAC", Offset = "0xF47CAC", VA = "0xF47CAC")]
	public Keyboard()
	{
	}
}
[Token(Token = "0x20001D5")]
public enum KeyBoardKeyFunction
{
	[Token(Token = "0x40009BF")]
	None,
	[Token(Token = "0x40009C0")]
	Backspace,
	[Token(Token = "0x40009C1")]
	Ok,
	[Token(Token = "0x40009C2")]
	Cancel
}
[Token(Token = "0x20001D6")]
public class KeyboardKey : HitTarget, ISVRLaserPointable
{
	[Token(Token = "0x40009C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public KeyBoardKeyFunction function;

	[Token(Token = "0x40009C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Keyboard keyboard;

	[Token(Token = "0x40009C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public string character;

	[Token(Token = "0x40009C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Vector3 initScale;

	[Token(Token = "0x40009C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private Vector3 initPosition;

	[Token(Token = "0x40009C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Vector3 initUp;

	[Token(Token = "0x6000B1A")]
	[Address(RVA = "0xF47D48", Offset = "0xF47D48", VA = "0xF47D48")]
	public void Awake()
	{
	}

	[Token(Token = "0x6000B1B")]
	[Address(RVA = "0xF47E08", Offset = "0xF47E08", VA = "0xF47E08", Slot = "4")]
	public override bool OnHit(Bullet bullet, Ray ray, RaycastHit hit)
	{
		return default(bool);
	}

	[Token(Token = "0x6000B1C")]
	[Address(RVA = "0xF47F8C", Offset = "0xF47F8C", VA = "0xF47F8C")]
	public string getCharacter()
	{
		return null;
	}

	[Token(Token = "0x6000B1D")]
	[Address(RVA = "0xF47F94", Offset = "0xF47F94", VA = "0xF47F94", Slot = "9")]
	public bool OnHoverEnter(SVRLaserPointer pointer)
	{
		return default(bool);
	}

	[Token(Token = "0x6000B1E")]
	[Address(RVA = "0xF47FDC", Offset = "0xF47FDC", VA = "0xF47FDC", Slot = "10")]
	public bool OnHoverExit(SVRLaserPointer pointer)
	{
		return default(bool);
	}

	[Token(Token = "0x6000B1F")]
	[Address(RVA = "0xF48010", Offset = "0xF48010", VA = "0xF48010")]
	public KeyboardKey()
	{
	}
}
[Token(Token = "0x20001D7")]
public class KeyboardScreen : MonoBehaviour
{
	[Token(Token = "0x40009C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string BLANK_CHAR;

	[Token(Token = "0x40009CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TextMeshPro textScreen;

	[Token(Token = "0x40009CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int characterLimit;

	[Token(Token = "0x40009CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public int characterMinimum;

	[Token(Token = "0x40009CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool fillCharacters;

	[Token(Token = "0x40009CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	public bool caretEnabled;

	[Token(Token = "0x40009CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float caretBlinkTime;

	[Token(Token = "0x40009D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool bCaretActive;

	[Token(Token = "0x40009D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float lastCaretChange;

	[Token(Token = "0x40009D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	protected string defaultText;

	[Token(Token = "0x40009D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	protected string currentText;

	[Token(Token = "0x6000B20")]
	[Address(RVA = "0xF47B4C", Offset = "0xF47B4C", VA = "0xF47B4C")]
	public bool writeCharacter(string character)
	{
		return default(bool);
	}

	[Token(Token = "0x6000B21")]
	[Address(RVA = "0xF47C08", Offset = "0xF47C08", VA = "0xF47C08")]
	public void deleteCharacter()
	{
	}

	[Token(Token = "0x6000B22")]
	[Address(RVA = "0xF48018", Offset = "0xF48018", VA = "0xF48018", Slot = "4")]
	protected virtual void fillDefaultCharacters()
	{
	}

	[Token(Token = "0x6000B23")]
	[Address(RVA = "0xF47C70", Offset = "0xF47C70", VA = "0xF47C70")]
	public bool isComplete()
	{
		return default(bool);
	}

	[Token(Token = "0x6000B24")]
	[Address(RVA = "0xF480D0", Offset = "0xF480D0", VA = "0xF480D0", Slot = "5")]
	public virtual void Clear()
	{
	}

	[Token(Token = "0x6000B25")]
	[Address(RVA = "0xF4813C", Offset = "0xF4813C", VA = "0xF4813C")]
	public string getText()
	{
		return null;
	}

	[Token(Token = "0x6000B26")]
	[Address(RVA = "0xF481B4", Offset = "0xF481B4", VA = "0xF481B4")]
	public void setText(string str)
	{
	}

	[Token(Token = "0x6000B27")]
	[Address(RVA = "0xF4824C", Offset = "0xF4824C", VA = "0xF4824C")]
	public void SetDefaultText(string defaultText)
	{
	}

	[Token(Token = "0x6000B28")]
	[Address(RVA = "0xF48254", Offset = "0xF48254", VA = "0xF48254")]
	public void blinkText(bool blink)
	{
	}

	[Token(Token = "0x6000B29")]
	[Address(RVA = "0xF482BC", Offset = "0xF482BC", VA = "0xF482BC")]
	public void enableCaret(bool bValue)
	{
	}

	[Token(Token = "0x6000B2A")]
	[Address(RVA = "0xF482C8", Offset = "0xF482C8", VA = "0xF482C8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000B2B")]
	[Address(RVA = "0xF48334", Offset = "0xF48334", VA = "0xF48334", Slot = "6")]
	protected virtual void hideCaret()
	{
	}

	[Token(Token = "0x6000B2C")]
	[Address(RVA = "0xF48360", Offset = "0xF48360", VA = "0xF48360", Slot = "7")]
	protected virtual void showCaret()
	{
	}

	[Token(Token = "0x6000B2D")]
	[Address(RVA = "0xF483D0", Offset = "0xF483D0", VA = "0xF483D0")]
	public KeyboardScreen()
	{
	}
}
[Token(Token = "0x20001D8")]
public class KeyboardUIScreen : KeyboardScreen
{
	[Token(Token = "0x40009D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Text textUIScreen;

	[Token(Token = "0x6000B2E")]
	[Address(RVA = "0xF4847C", Offset = "0xF4847C", VA = "0xF4847C", Slot = "4")]
	protected override void fillDefaultCharacters()
	{
	}

	[Token(Token = "0x6000B2F")]
	[Address(RVA = "0xF48534", Offset = "0xF48534", VA = "0xF48534", Slot = "5")]
	public override void Clear()
	{
	}

	[Token(Token = "0x6000B30")]
	[Address(RVA = "0xF485A0", Offset = "0xF485A0", VA = "0xF485A0", Slot = "6")]
	protected override void hideCaret()
	{
	}

	[Token(Token = "0x6000B31")]
	[Address(RVA = "0xF485CC", Offset = "0xF485CC", VA = "0xF485CC", Slot = "7")]
	protected override void showCaret()
	{
	}

	[Token(Token = "0x6000B32")]
	[Address(RVA = "0xF48638", Offset = "0xF48638", VA = "0xF48638")]
	public KeyboardUIScreen()
	{
	}
}
[Token(Token = "0x20001D9")]
public class KillAllSmiths : MonoBehaviour
{
	[Token(Token = "0x6000B33")]
	[Address(RVA = "0xF4863C", Offset = "0xF4863C", VA = "0xF4863C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000B34")]
	[Address(RVA = "0xF48760", Offset = "0xF48760", VA = "0xF48760")]
	public KillAllSmiths()
	{
	}
}
[Token(Token = "0x20001DA")]
public class Line : MonoBehaviour
{
	[Token(Token = "0x40009D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public LineRenderer lineRenderer;

	[Token(Token = "0x6000B35")]
	[Address(RVA = "0xF48768", Offset = "0xF48768", VA = "0xF48768")]
	public void drawLine(Vector3 initPoint, Vector3 endPoint)
	{
	}

	[Token(Token = "0x6000B36")]
	[Address(RVA = "0xF487FC", Offset = "0xF487FC", VA = "0xF487FC")]
	public void showLine()
	{
	}

	[Token(Token = "0x6000B37")]
	[Address(RVA = "0xF48820", Offset = "0xF48820", VA = "0xF48820")]
	public void hideLine(float delay = 0f)
	{
	}

	[Token(Token = "0x6000B38")]
	[Address(RVA = "0xF488B0", Offset = "0xF488B0", VA = "0xF488B0")]
	public void invokeHideLine()
	{
	}

	[Token(Token = "0x6000B39")]
	[Address(RVA = "0xF488D4", Offset = "0xF488D4", VA = "0xF488D4")]
	public Line()
	{
	}
}
[Token(Token = "0x20001DB")]
public class LoadingScreen : MonoBehaviour
{
	[Token(Token = "0x40009D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float time;

	[Token(Token = "0x40009D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool tip;

	[Token(Token = "0x40009D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
	public bool fixedScreen;

	[Token(Token = "0x40009D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E")]
	public bool localizedImage;

	[Token(Token = "0x6000B3A")]
	[Address(RVA = "0xF488DC", Offset = "0xF488DC", VA = "0xF488DC")]
	public LoadingScreen()
	{
	}
}
[Serializable]
[Token(Token = "0x20001DC")]
public class LocalizationData
{
	[Token(Token = "0x40009DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public LocalizationItem[] items;

	[Token(Token = "0x6000B3B")]
	[Address(RVA = "0xF488EC", Offset = "0xF488EC", VA = "0xF488EC")]
	public LocalizationData()
	{
	}
}
[Serializable]
[Token(Token = "0x20001DD")]
public class LocalizationItem
{
	[Token(Token = "0x40009DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string key;

	[Token(Token = "0x40009DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string value;

	[Token(Token = "0x6000B3C")]
	[Address(RVA = "0xF488F4", Offset = "0xF488F4", VA = "0xF488F4")]
	public LocalizationItem()
	{
	}
}
[Serializable]
[Token(Token = "0x20001DE")]
public class LocalizationDataLegacy
{
	[Token(Token = "0x40009DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public LocalizationItemLegacy[] localization;

	[Token(Token = "0x6000B3D")]
	[Address(RVA = "0xF488FC", Offset = "0xF488FC", VA = "0xF488FC")]
	public LocalizationDataLegacy()
	{
	}
}
[Serializable]
[Token(Token = "0x20001DF")]
public class LocalizationItemLegacy
{
	[Token(Token = "0x40009DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string StringIdentifier;

	[Token(Token = "0x40009DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string English;

	[Token(Token = "0x40009E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string Chinese;

	[Token(Token = "0x40009E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string Japanese;

	[Token(Token = "0x40009E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public string Korean;

	[Token(Token = "0x6000B3E")]
	[Address(RVA = "0xF48904", Offset = "0xF48904", VA = "0xF48904")]
	public LocalizationItemLegacy()
	{
	}
}
[Token(Token = "0x20001E0")]
public class LocalizationManager : MonoBehaviour
{
	[Token(Token = "0x20001E1")]
	public delegate void LocalizationEventHandler();

	[Token(Token = "0x20001E2")]
	public enum Language
	{
		[Token(Token = "0x40009F1")]
		off,
		[Token(Token = "0x40009F2")]
		en,
		[Token(Token = "0x40009F3")]
		es,
		[Token(Token = "0x40009F4")]
		cn,
		[Token(Token = "0x40009F5")]
		jp,
		[Token(Token = "0x40009F6")]
		kr
	}

	[Token(Token = "0x40009E3")]
	private const string LOCALIZATION_PATH = "Localization/";

	[Token(Token = "0x40009E4")]
	private const string LOCALIZATION_FILE_PATTERN = "localization_";

	[Token(Token = "0x40009E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static LocalizationManager Instance;

	[Token(Token = "0x40009E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Language language;

	[Token(Token = "0x40009EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public Language voiceLanguage;

	[Token(Token = "0x40009EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Language subtitlesLanguage;

	[Token(Token = "0x40009EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Dictionary<string, string> localizedText;

	[Token(Token = "0x40009ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Dictionary<string, string> subtitlesText;

	[Token(Token = "0x40009EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool isReady;

	[Token(Token = "0x40009EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private string missingTextString;

	[Token(Token = "0x14000013")]
	public event LocalizationEventHandler OnLocalizationChanged
	{
		[Token(Token = "0x6000B3F")]
		[Address(RVA = "0xF4890C", Offset = "0xF4890C", VA = "0xF4890C")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000B40")]
		[Address(RVA = "0xF489A8", Offset = "0xF489A8", VA = "0xF489A8")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x14000014")]
	public event LocalizationEventHandler OnVoiceChanged
	{
		[Token(Token = "0x6000B41")]
		[Address(RVA = "0xF48A44", Offset = "0xF48A44", VA = "0xF48A44")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000B42")]
		[Address(RVA = "0xF48AE0", Offset = "0xF48AE0", VA = "0xF48AE0")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x14000015")]
	public event LocalizationEventHandler OnSubtitlesChanged
	{
		[Token(Token = "0x6000B43")]
		[Address(RVA = "0xF48B7C", Offset = "0xF48B7C", VA = "0xF48B7C")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000B44")]
		[Address(RVA = "0xF48C18", Offset = "0xF48C18", VA = "0xF48C18")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x6000B45")]
	[Address(RVA = "0xF48CB4", Offset = "0xF48CB4", VA = "0xF48CB4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000B46")]
	[Address(RVA = "0xF48DD0", Offset = "0xF48DD0", VA = "0xF48DD0")]
	private void LoadLocalizedText(string fileName)
	{
	}

	[Token(Token = "0x6000B47")]
	[Address(RVA = "0xF492BC", Offset = "0xF492BC", VA = "0xF492BC")]
	private void LoadSubtitlesText(string fileName)
	{
	}

	[Token(Token = "0x6000B48")]
	[Address(RVA = "0xF495D8", Offset = "0xF495D8", VA = "0xF495D8")]
	public void SetLocalization(Language language)
	{
	}

	[Token(Token = "0x6000B49")]
	[Address(RVA = "0xF49700", Offset = "0xF49700", VA = "0xF49700")]
	public void SetSubtitlesLanguage(Language language)
	{
	}

	[Token(Token = "0x6000B4A")]
	[Address(RVA = "0xF49830", Offset = "0xF49830", VA = "0xF49830")]
	public void SetVoiceLanguage(Language language)
	{
	}

	[Token(Token = "0x6000B4B")]
	[Address(RVA = "0xF49924", Offset = "0xF49924", VA = "0xF49924")]
	public string GetLocalizedValue(string key)
	{
		return null;
	}

	[Token(Token = "0x6000B4C")]
	[Address(RVA = "0xF49A2C", Offset = "0xF49A2C", VA = "0xF49A2C")]
	public string GetSubtitleValue(string key)
	{
		return null;
	}

	[Token(Token = "0x6000B4D")]
	[Address(RVA = "0xF49B50", Offset = "0xF49B50", VA = "0xF49B50")]
	public bool IsReady()
	{
		return default(bool);
	}

	[Token(Token = "0x6000B4E")]
	[Address(RVA = "0xF49B58", Offset = "0xF49B58", VA = "0xF49B58")]
	public LocalizationManager()
	{
	}
}
[Token(Token = "0x20001E3")]
public class LocalizedGameObject : MonoBehaviour
{
	[Token(Token = "0x6000B53")]
	[Address(RVA = "0xF49CCC", Offset = "0xF49CCC", VA = "0xF49CCC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000B54")]
	[Address(RVA = "0xF4A2D8", Offset = "0xF4A2D8", VA = "0xF4A2D8")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000B55")]
	[Address(RVA = "0xF49D7C", Offset = "0xF49D7C", VA = "0xF49D7C")]
	private void OnLocalizationChanged()
	{
	}

	[Token(Token = "0x6000B56")]
	[Address(RVA = "0xF4A380", Offset = "0xF4A380", VA = "0xF4A380")]
	public LocalizedGameObject()
	{
	}
}
[Token(Token = "0x20001E4")]
public class LocalizedText : MonoBehaviour
{
	[Token(Token = "0x40009F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public SumalabEvent OnLocalizedTextChanged;

	[Token(Token = "0x40009F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string key;

	[Token(Token = "0x40009F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int layer;

	[Token(Token = "0x6000B57")]
	[Address(RVA = "0xF4A388", Offset = "0xF4A388", VA = "0xF4A388")]
	private void Start()
	{
	}

	[Token(Token = "0x6000B58")]
	[Address(RVA = "0xF4A7AC", Offset = "0xF4A7AC", VA = "0xF4A7AC")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000B59")]
	[Address(RVA = "0xF4A568", Offset = "0xF4A568", VA = "0xF4A568")]
	private void OnLocalizationChanged()
	{
	}

	[Token(Token = "0x6000B5A")]
	[Address(RVA = "0xF4A854", Offset = "0xF4A854", VA = "0xF4A854")]
	public void UpdateText()
	{
	}

	[Token(Token = "0x6000B5B")]
	[Address(RVA = "0xF4A858", Offset = "0xF4A858", VA = "0xF4A858")]
	public void UpdateKey(string key)
	{
	}

	[Token(Token = "0x6000B5C")]
	[Address(RVA = "0xF4A874", Offset = "0xF4A874", VA = "0xF4A874")]
	public LocalizedText()
	{
	}
}
[Token(Token = "0x20001E5")]
public class Subtitler : MonoBehaviour
{
	[Token(Token = "0x20001E6")]
	[CompilerGenerated]
	private sealed class <WriteCoroutine>d__9 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000A00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000A01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000A02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Subtitler <>4__this;

		[Token(Token = "0x4000A03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string stext;

		[Token(Token = "0x4000A04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private char[] <textArray>5__2;

		[Token(Token = "0x4000A05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private int <i>5__3;

		[Token(Token = "0x17000097")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000B67")]
			[Address(RVA = "0xF4B07C", Offset = "0xF4B07C", VA = "0xF4B07C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000098")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000B69")]
			[Address(RVA = "0xF4B0C4", Offset = "0xF4B0C4", VA = "0xF4B0C4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000B64")]
		[Address(RVA = "0xF4AD6C", Offset = "0xF4AD6C", VA = "0xF4AD6C")]
		[DebuggerHidden]
		public <WriteCoroutine>d__9(int <>1__state)
		{
		}

		[Token(Token = "0x6000B65")]
		[Address(RVA = "0xF4AE78", Offset = "0xF4AE78", VA = "0xF4AE78", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000B66")]
		[Address(RVA = "0xF4AE7C", Offset = "0xF4AE7C", VA = "0xF4AE7C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000B68")]
		[Address(RVA = "0xF4B084", Offset = "0xF4B084", VA = "0xF4B084", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40009FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Subtitler Instance;

	[Token(Token = "0x40009FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private TextMeshPro text;

	[Token(Token = "0x40009FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Coroutine writeCoroutine;

	[Token(Token = "0x40009FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private GameObject subtitles;

	[Token(Token = "0x40009FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Transform subtitlesTransform;

	[Token(Token = "0x40009FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool rightHand;

	[Token(Token = "0x6000B5D")]
	[Address(RVA = "0xF4A8F0", Offset = "0xF4A8F0", VA = "0xF4A8F0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000B5E")]
	[Address(RVA = "0xF4AB9C", Offset = "0xF4AB9C", VA = "0xF4AB9C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000B5F")]
	[Address(RVA = "0xF4AC14", Offset = "0xF4AC14", VA = "0xF4AC14")]
	private void WriteInternal(string key)
	{
	}

	[Token(Token = "0x6000B60")]
	[Address(RVA = "0xF4ACDC", Offset = "0xF4ACDC", VA = "0xF4ACDC")]
	[IteratorStateMachine(typeof(<WriteCoroutine>d__9))]
	private IEnumerator WriteCoroutine(string stext)
	{
		return null;
	}

	[Token(Token = "0x6000B61")]
	[Address(RVA = "0xF4AA7C", Offset = "0xF4AA7C", VA = "0xF4AA7C")]
	private void UpdateSubtitler()
	{
	}

	[Token(Token = "0x6000B62")]
	[Address(RVA = "0xF4AD94", Offset = "0xF4AD94", VA = "0xF4AD94")]
	public static void Write(string key)
	{
	}

	[Token(Token = "0x6000B63")]
	[Address(RVA = "0xF4AE70", Offset = "0xF4AE70", VA = "0xF4AE70")]
	public Subtitler()
	{
	}
}
[Token(Token = "0x20001E7")]
[RequireComponent(typeof(AudioSource))]
public class LocalizedAmbientSound3D : MonoBehaviour
{
	[Token(Token = "0x4000A06")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioClip[] clips;

	[Token(Token = "0x4000A07")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float startDelay;

	[Token(Token = "0x4000A08")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float minTimeBetweenSounds;

	[Token(Token = "0x4000A09")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float maxTimeBetweenSounds;

	[Token(Token = "0x4000A0A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public bool randomPlay;

	[Token(Token = "0x4000A0B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private AudioSource aS;

	[Token(Token = "0x4000A0C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int currentClip;

	[Token(Token = "0x4000A0D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private SumalabInvoke.SumalabInvokeReference handler;

	[Token(Token = "0x6000B6A")]
	[Address(RVA = "0xF4B0CC", Offset = "0xF4B0CC", VA = "0xF4B0CC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000B6B")]
	[Address(RVA = "0xF4B150", Offset = "0xF4B150", VA = "0xF4B150")]
	private void Start()
	{
	}

	[Token(Token = "0x6000B6C")]
	[Address(RVA = "0xF4B3C8", Offset = "0xF4B3C8", VA = "0xF4B3C8")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000B6D")]
	[Address(RVA = "0xF4B24C", Offset = "0xF4B24C", VA = "0xF4B24C")]
	private void PlayNextSound()
	{
	}

	[Token(Token = "0x6000B6E")]
	[Address(RVA = "0xF4B438", Offset = "0xF4B438", VA = "0xF4B438")]
	public LocalizedAmbientSound3D()
	{
	}
}
[Token(Token = "0x20001E8")]
public class LocationObserver_Alleys_9_Boss : MonoBehaviour
{
	[Token(Token = "0x6000B6F")]
	[Address(RVA = "0xF4B44C", Offset = "0xF4B44C", VA = "0xF4B44C", Slot = "4")]
	protected virtual void Start()
	{
	}

	[Token(Token = "0x6000B70")]
	[Address(RVA = "0xF4B4FC", Offset = "0xF4B4FC", VA = "0xF4B4FC")]
	private void OnLocationStarted()
	{
	}

	[Token(Token = "0x6000B71")]
	[Address(RVA = "0xF4B5A4", Offset = "0xF4B5A4", VA = "0xF4B5A4")]
	public LocationObserver_Alleys_9_Boss()
	{
	}
}
[Token(Token = "0x20001E9")]
public class LocationObserver_Mansion_12_Laboratorio_AntonioMontoya : MonoBehaviour
{
	[Token(Token = "0x6000B72")]
	[Address(RVA = "0xF4B5AC", Offset = "0xF4B5AC", VA = "0xF4B5AC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000B73")]
	[Address(RVA = "0xF4B75C", Offset = "0xF4B75C", VA = "0xF4B75C")]
	private void OnLocationStarted()
	{
	}

	[Token(Token = "0x6000B74")]
	[Address(RVA = "0xF4B874", Offset = "0xF4B874", VA = "0xF4B874")]
	private void RemoveBazookaWithDelay()
	{
	}

	[Token(Token = "0x6000B75")]
	[Address(RVA = "0xF4B92C", Offset = "0xF4B92C", VA = "0xF4B92C")]
	private void RemoveBazooka()
	{
	}

	[Token(Token = "0x6000B76")]
	[Address(RVA = "0xF4B9E0", Offset = "0xF4B9E0", VA = "0xF4B9E0")]
	private void RemoveBazooka(SVRHand hand)
	{
	}

	[Token(Token = "0x6000B77")]
	[Address(RVA = "0xF4BBA4", Offset = "0xF4BBA4", VA = "0xF4BBA4")]
	public LocationObserver_Mansion_12_Laboratorio_AntonioMontoya()
	{
	}
}
[Token(Token = "0x20001EB")]
public class LocationObserver_Mansion_8_AntonioMontoya : MonoBehaviour
{
	[Token(Token = "0x4000A0F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float additionalTime;

	[Token(Token = "0x6000B7B")]
	[Address(RVA = "0xF4BCA0", Offset = "0xF4BCA0", VA = "0xF4BCA0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000B7C")]
	[Address(RVA = "0xF4BDA8", Offset = "0xF4BDA8", VA = "0xF4BDA8")]
	private void OnLocationStarted()
	{
	}

	[Token(Token = "0x6000B7D")]
	[Address(RVA = "0xF4BE34", Offset = "0xF4BE34", VA = "0xF4BE34")]
	private void OnLocationCompleted()
	{
	}

	[Token(Token = "0x6000B7E")]
	[Address(RVA = "0xF4BEC4", Offset = "0xF4BEC4", VA = "0xF4BEC4")]
	public LocationObserver_Mansion_8_AntonioMontoya()
	{
	}
}
[Token(Token = "0x20001EC")]
public class LocationObserver_Office_8_Metro_Boss : LocationObserver_Alleys_9_Boss
{
	[Token(Token = "0x6000B7F")]
	[Address(RVA = "0xF4BED4", Offset = "0xF4BED4", VA = "0xF4BED4")]
	public LocationObserver_Office_8_Metro_Boss()
	{
	}
}
[Token(Token = "0x20001ED")]
public class LocationObserver_Office_9_Smith : MonoBehaviour
{
	[Token(Token = "0x4000A10")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float smithsBulletTime;

	[Token(Token = "0x4000A11")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float smithsBulletTimeDelay;

	[Token(Token = "0x4000A12")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool debugMinigun;

	[Token(Token = "0x4000A13")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public WalkieTalkie.CommunicationEvent walkieTalkieEvent;

	[Token(Token = "0x4000A14")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private LocationController location;

	[Token(Token = "0x6000B80")]
	[Address(RVA = "0xF4BEDC", Offset = "0xF4BEDC", VA = "0xF4BEDC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000B81")]
	[Address(RVA = "0xF4C034", Offset = "0xF4C034", VA = "0xF4C034")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000B82")]
	[Address(RVA = "0xF4C0C0", Offset = "0xF4C0C0", VA = "0xF4C0C0")]
	private void OnLocationStarted()
	{
	}

	[Token(Token = "0x6000B83")]
	[Address(RVA = "0xF4C170", Offset = "0xF4C170", VA = "0xF4C170")]
	private void OnLocationReady()
	{
	}

	[Token(Token = "0x6000B84")]
	[Address(RVA = "0xF4C180", Offset = "0xF4C180", VA = "0xF4C180")]
	private void LoadMiniGunDebug()
	{
	}

	[Token(Token = "0x6000B85")]
	[Address(RVA = "0xF4C280", Offset = "0xF4C280", VA = "0xF4C280")]
	public LocationObserver_Office_9_Smith()
	{
	}
}
[Token(Token = "0x20001EE")]
public class LocationObserver_TA3 : MonoBehaviour
{
	[Token(Token = "0x6000B86")]
	[Address(RVA = "0xF4C298", Offset = "0xF4C298", VA = "0xF4C298")]
	private void Start()
	{
	}

	[Token(Token = "0x6000B87")]
	[Address(RVA = "0xF4C348", Offset = "0xF4C348", VA = "0xF4C348")]
	private void OnLocationReady()
	{
	}

	[Token(Token = "0x6000B88")]
	[Address(RVA = "0xF4C3A0", Offset = "0xF4C3A0", VA = "0xF4C3A0")]
	public LocationObserver_TA3()
	{
	}
}
[Token(Token = "0x20001EF")]
public class LocationObserver_WalkieTalkieEvent : MonoBehaviour
{
	[Token(Token = "0x4000A15")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public WalkieTalkie.CommunicationEvent walkieTalkieEvent;

	[Token(Token = "0x4000A16")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public NextLocationStep step;

	[Token(Token = "0x4000A17")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool executeOnCompleteScene;

	[Token(Token = "0x4000A18")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float delay;

	[Token(Token = "0x6000B89")]
	[Address(RVA = "0xF4C3A8", Offset = "0xF4C3A8", VA = "0xF4C3A8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000B8A")]
	[Address(RVA = "0xF4C4C0", Offset = "0xF4C4C0", VA = "0xF4C4C0")]
	private void OnLocationEvent()
	{
	}

	[Token(Token = "0x6000B8B")]
	[Address(RVA = "0xF4C528", Offset = "0xF4C528", VA = "0xF4C528")]
	private void WalkieTalkieCommunication()
	{
	}

	[Token(Token = "0x6000B8C")]
	[Address(RVA = "0xF4C584", Offset = "0xF4C584", VA = "0xF4C584")]
	public LocationObserver_WalkieTalkieEvent()
	{
	}
}
[Token(Token = "0x20001F0")]
public class MaskHeadshot : MonoBehaviour
{
	[Token(Token = "0x20001F1")]
	[CompilerGenerated]
	private sealed class <activateCollider>d__3 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000A1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000A1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000A1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MaskHeadshot <>4__this;

		[Token(Token = "0x17000099")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000B94")]
			[Address(RVA = "0xF4C950", Offset = "0xF4C950", VA = "0xF4C950", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700009A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000B96")]
			[Address(RVA = "0xF4C998", Offset = "0xF4C998", VA = "0xF4C998", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000B91")]
		[Address(RVA = "0xF4C858", Offset = "0xF4C858", VA = "0xF4C858")]
		[DebuggerHidden]
		public <activateCollider>d__3(int <>1__state)
		{
		}

		[Token(Token = "0x6000B92")]
		[Address(RVA = "0xF4C888", Offset = "0xF4C888", VA = "0xF4C888", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000B93")]
		[Address(RVA = "0xF4C88C", Offset = "0xF4C88C", VA = "0xF4C88C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000B95")]
		[Address(RVA = "0xF4C958", Offset = "0xF4C958", VA = "0xF4C958", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000A19")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Transform oldParent;

	[Token(Token = "0x6000B8D")]
	[Address(RVA = "0xF4C58C", Offset = "0xF4C58C", VA = "0xF4C58C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000B8E")]
	[Address(RVA = "0xF4C5E8", Offset = "0xF4C5E8", VA = "0xF4C5E8")]
	public void activate(Ray ray)
	{
	}

	[Token(Token = "0x6000B8F")]
	[Address(RVA = "0xF4C7E4", Offset = "0xF4C7E4", VA = "0xF4C7E4")]
	[IteratorStateMachine(typeof(<activateCollider>d__3))]
	private IEnumerator activateCollider()
	{
		return null;
	}

	[Token(Token = "0x6000B90")]
	[Address(RVA = "0xF4C880", Offset = "0xF4C880", VA = "0xF4C880")]
	public MaskHeadshot()
	{
	}
}
[Token(Token = "0x20001F2")]
public class MontoyaLaboratoryShowRPG : MonoBehaviour
{
	[Token(Token = "0x4000A1D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Weapon RPG;

	[Token(Token = "0x4000A1E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform RPGDirection;

	[Token(Token = "0x4000A1F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Vector3 originalPosition;

	[Token(Token = "0x4000A20")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private Quaternion originalRotation;

	[Token(Token = "0x4000A21")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private InteractableBonus bonus;

	[Token(Token = "0x6000B97")]
	[Address(RVA = "0xF4C9A0", Offset = "0xF4C9A0", VA = "0xF4C9A0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000B98")]
	[Address(RVA = "0xF4C9FC", Offset = "0xF4C9FC", VA = "0xF4C9FC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000B99")]
	[Address(RVA = "0xF4CC34", Offset = "0xF4CC34", VA = "0xF4CC34")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000B9A")]
	[Address(RVA = "0xF4CCC0", Offset = "0xF4CCC0", VA = "0xF4CCC0")]
	private void OnFire(Bullet bullet)
	{
	}

	[Token(Token = "0x6000B9B")]
	[Address(RVA = "0xF4CE3C", Offset = "0xF4CE3C", VA = "0xF4CE3C")]
	public MontoyaLaboratoryShowRPG()
	{
	}
}
[Token(Token = "0x20001F4")]
public class NoInterlude : MonoBehaviour
{
	[Token(Token = "0x4000A23")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject[] objectsToHide;

	[Token(Token = "0x4000A24")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int sceneId;

	[Token(Token = "0x6000B9F")]
	[Address(RVA = "0xF4D03C", Offset = "0xF4D03C", VA = "0xF4D03C")]
	public void Hide(int currentSceneId)
	{
	}

	[Token(Token = "0x6000BA0")]
	[Address(RVA = "0xF4D0AC", Offset = "0xF4D0AC", VA = "0xF4D0AC")]
	public NoInterlude()
	{
	}
}
[Token(Token = "0x20001F5")]
public class PS4NetworkUtils : MonoBehaviour
{
	[Token(Token = "0x6000BA1")]
	[Address(RVA = "0xF4D0B4", Offset = "0xF4D0B4", VA = "0xF4D0B4")]
	public PS4NetworkUtils()
	{
	}
}
[Token(Token = "0x20001F6")]
public class BodyHeadFollower : MonoBehaviour
{
	[Token(Token = "0x4000A25")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform head;

	[Token(Token = "0x4000A26")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Tweener tweener;

	[Token(Token = "0x6000BA2")]
	[Address(RVA = "0xF4D0BC", Offset = "0xF4D0BC", VA = "0xF4D0BC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000BA3")]
	[Address(RVA = "0xF4D0C0", Offset = "0xF4D0C0", VA = "0xF4D0C0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000BA4")]
	[Address(RVA = "0xF4D274", Offset = "0xF4D274", VA = "0xF4D274")]
	public BodyHeadFollower()
	{
	}
}
[Token(Token = "0x20001F7")]
internal interface Explosive
{
	[Token(Token = "0x6000BA5")]
	void Explode(bool bRemote);
}
[Token(Token = "0x20001F8")]
public class NetworkBulletController : MonoBehaviourPun, IPunObservable
{
	[Token(Token = "0x4000A27")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static NetworkBulletController Instance;

	[Token(Token = "0x4000A28")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int m_iCurrentBulletId;

	[Token(Token = "0x4000A29")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public bool sendBullets;

	[Token(Token = "0x4000A2A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static SumalabEvent OnStart;

	[Token(Token = "0x4000A2B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Dictionary<string, MonoBehaviour> customMessageTopics;

	[Token(Token = "0x6000BA6")]
	[Address(RVA = "0xF4D27C", Offset = "0xF4D27C", VA = "0xF4D27C")]
	public static void SendCustomMessage(MonoBehaviour t, string method, RpcTarget target, params object[] parameters)
	{
	}

	[Token(Token = "0x6000BA7")]
	[Address(RVA = "0xF4D578", Offset = "0xF4D578", VA = "0xF4D578")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000BA8")]
	[Address(RVA = "0xF4D830", Offset = "0xF4D830", VA = "0xF4D830")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000BA9")]
	[Address(RVA = "0xF4D9EC", Offset = "0xF4D9EC", VA = "0xF4D9EC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000BAA")]
	[Address(RVA = "0xF4DAD8", Offset = "0xF4DAD8", VA = "0xF4DAD8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000BAB")]
	[Address(RVA = "0xF4DADC", Offset = "0xF4DADC", VA = "0xF4DADC")]
	private void OnFire(IWeapon weapon, Bullet b)
	{
	}

	[Token(Token = "0x6000BAC")]
	[Address(RVA = "0xF4E298", Offset = "0xF4E298", VA = "0xF4E298")]
	public void sendOnHitNextLocation(string name, Vector3 force, Vector3 point)
	{
	}

	[Token(Token = "0x6000BAD")]
	[Address(RVA = "0xF4E518", Offset = "0xF4E518", VA = "0xF4E518")]
	[PunRPC]
	public void OnHitNextLocation(string name, Vector3 force, Vector3 point)
	{
	}

	[Token(Token = "0x6000BAE")]
	[Address(RVA = "0xF46D8C", Offset = "0xF46D8C", VA = "0xF46D8C")]
	public void sendOnHitGOButton(string strMission, int iExpectedPlayers, Vector3 force, Vector3 point, GameManager.Difficulty difficulty)
	{
	}

	[Token(Token = "0x6000BAF")]
	[Address(RVA = "0xF4E660", Offset = "0xF4E660", VA = "0xF4E660")]
	[PunRPC]
	public void OnHitGOButton(string strMission, int iExpectedPlayers, Vector3 force, Vector3 point, GameManager.Difficulty difficulty)
	{
	}

	[Token(Token = "0x6000BB0")]
	[Address(RVA = "0xF4E854", Offset = "0xF4E854", VA = "0xF4E854")]
	public void sendGameModeSelector(string gameMode)
	{
	}

	[Token(Token = "0x6000BB1")]
	[Address(RVA = "0xF4E9E4", Offset = "0xF4E9E4", VA = "0xF4E9E4")]
	[PunRPC]
	public void GameModeSelector(string gameMode)
	{
	}

	[Token(Token = "0x6000BB2")]
	[Address(RVA = "0xF4EAD4", Offset = "0xF4EAD4", VA = "0xF4EAD4")]
	public void sendDeadLine(Vector3 initPosition, Vector3 endPosition)
	{
	}

	[Token(Token = "0x6000BB3")]
	[Address(RVA = "0xF4ED18", Offset = "0xF4ED18", VA = "0xF4ED18")]
	[PunRPC]
	public void DeadLine(Vector3 initPosition, Vector3 endPosition)
	{
	}

	[Token(Token = "0x6000BB4")]
	[Address(RVA = "0xF4DE4C", Offset = "0xF4DE4C", VA = "0xF4DE4C")]
	public string createBulletId()
	{
		return null;
	}

	[Token(Token = "0x6000BB5")]
	[Address(RVA = "0xF4F0A4", Offset = "0xF4F0A4", VA = "0xF4F0A4")]
	public string createBonusId()
	{
		return null;
	}

	[Token(Token = "0x6000BB6")]
	[Address(RVA = "0xF4DF30", Offset = "0xF4DF30", VA = "0xF4DF30")]
	private void sendCreateBullet(string bulletId, string owner, string parent, Vector3 position, Vector3 targetPosition, int bulletsCount, bool bKillPlayer, bool bIsDangerous)
	{
	}

	[Token(Token = "0x6000BB7")]
	[Address(RVA = "0xF4F188", Offset = "0xF4F188", VA = "0xF4F188")]
	[PunRPC]
	private void CreateBullet(string bulletId, string owner, string parent, Vector3 position, Vector3 targetPosition, int bulletsCount, bool bKillPlayer, bool bIsDangerous)
	{
	}

	[Token(Token = "0x6000BB8")]
	[Address(RVA = "0xF4F650", Offset = "0xF4F650", VA = "0xF4F650")]
	public void sendSpawnCharacter(string spawnName, int spawnsCompleted, int index, int poolInstance, WeaponModel weaponModel)
	{
	}

	[Token(Token = "0x6000BB9")]
	[Address(RVA = "0xF4FAD0", Offset = "0xF4FAD0", VA = "0xF4FAD0")]
	[PunRPC]
	public void SpawnCharacter(string spawnName, int spawnsCompleted, int index, int poolInstance, WeaponModel weaponModel)
	{
	}

	[Token(Token = "0x6000BBA")]
	[Address(RVA = "0xF4FDC0", Offset = "0xF4FDC0", VA = "0xF4FDC0")]
	public void sendGlobalSpawnCharacter(string spawnName, int spawnsCompleted, string strCharacterName, int poolInstance, WeaponModel weaponModel)
	{
	}

	[Token(Token = "0x6000BBB")]
	[Address(RVA = "0xF5021C", Offset = "0xF5021C", VA = "0xF5021C")]
	[PunRPC]
	public void GlobalSpawnCharacter(string spawnName, int spawnsCompleted, string strCharacterName, int poolInstance, WeaponModel weaponModel)
	{
	}

	[Token(Token = "0x6000BBC")]
	[Address(RVA = "0xF50504", Offset = "0xF50504", VA = "0xF50504")]
	public void sendGlobalAISpawnCharacter(string spawnName, int iSpot, int spawnsCompleted, int characterPool, int poolInstance, WeaponModel weaponModel)
	{
	}

	[Token(Token = "0x6000BBD")]
	[Address(RVA = "0xF509D0", Offset = "0xF509D0", VA = "0xF509D0")]
	[PunRPC]
	public void GlobalAISpawnCharacter(string spawnName, int iSpot, int spawnsCompleted, int characterPool, int poolInstance, WeaponModel weaponModel)
	{
	}

	[Token(Token = "0x6000BBE")]
	[Address(RVA = "0xF50CCC", Offset = "0xF50CCC", VA = "0xF50CCC")]
	public void sendSpawnCharacter(string locationCharacterName, int poolInstance, WeaponModel weaponModel)
	{
	}

	[Token(Token = "0x6000BBF")]
	[Address(RVA = "0xF50EE0", Offset = "0xF50EE0", VA = "0xF50EE0")]
	[PunRPC]
	public void SpawnCharacter(string locationCharacterName, int poolInstance, WeaponModel weaponModel)
	{
	}

	[Token(Token = "0x6000BC0")]
	[Address(RVA = "0xF50FE4", Offset = "0xF50FE4", VA = "0xF50FE4")]
	public void sendStartWave(string waveName, int index, int[] poolInstances, WeaponModel[] weaponModels)
	{
	}

	[Token(Token = "0x6000BC1")]
	[Address(RVA = "0xF512AC", Offset = "0xF512AC", VA = "0xF512AC")]
	[PunRPC]
	public void StartWave(string waveName, int index, int[] poolInstances, WeaponModel[] weaponModels)
	{
	}

	[Token(Token = "0x6000BC2")]
	[Address(RVA = "0xF513F0", Offset = "0xF513F0", VA = "0xF513F0")]
	public Bullet getRemoteBullet(string bulletId)
	{
		return null;
	}

	[Token(Token = "0x6000BC3")]
	[Address(RVA = "0xF51540", Offset = "0xF51540", VA = "0xF51540")]
	public void sendChangeMission(int missionSelected)
	{
	}

	[Token(Token = "0x6000BC4")]
	[Address(RVA = "0xF516C8", Offset = "0xF516C8", VA = "0xF516C8")]
	[PunRPC]
	public void ChangeMission(int missionSelected)
	{
	}

	[Token(Token = "0x6000BC5")]
	[Address(RVA = "0xF51760", Offset = "0xF51760", VA = "0xF51760")]
	public void sendChangeDifficulty(string difficulty)
	{
	}

	[Token(Token = "0x6000BC6")]
	[Address(RVA = "0xF518A0", Offset = "0xF518A0", VA = "0xF518A0")]
	[PunRPC]
	public void ChangeDifficulty(string difficulty)
	{
	}

	[Token(Token = "0x6000BC7")]
	[Address(RVA = "0xF51938", Offset = "0xF51938", VA = "0xF51938")]
	public void sendShowBonus(PlayerBonus bonus)
	{
	}

	[Token(Token = "0x6000BC8")]
	[Address(RVA = "0xF51CF0", Offset = "0xF51CF0", VA = "0xF51CF0")]
	[PunRPC]
	public void ShowBonus(string bonusId, PlayerBonus.BonusType bonusType, WeaponModel weaponModel, bool showAlways, Vector3 position)
	{
	}

	[Token(Token = "0x6000BC9")]
	[Address(RVA = "0xF51E60", Offset = "0xF51E60", VA = "0xF51E60")]
	public void catchBonus(Bonus bonus)
	{
	}

	[Token(Token = "0x6000BCA")]
	[Address(RVA = "0xF51FCC", Offset = "0xF51FCC", VA = "0xF51FCC")]
	[PunRPC]
	public void CatchBonus(string bonusId, string strPlayerName)
	{
	}

	[Token(Token = "0x6000BCB")]
	[Address(RVA = "0xF520C8", Offset = "0xF520C8", VA = "0xF520C8")]
	public void sendShowBonusAtPosition(InteractableBonus bonus, Vector3 position)
	{
	}

	[Token(Token = "0x6000BCC")]
	[Address(RVA = "0xF522B4", Offset = "0xF522B4", VA = "0xF522B4")]
	[PunRPC]
	public void ShowBonusAtPosition(string bonusId, Vector3 position)
	{
	}

	[Token(Token = "0x6000BCD")]
	[Address(RVA = "0xF52390", Offset = "0xF52390", VA = "0xF52390")]
	public void sendOnHitInteractableBonus(InteractableBonus bonus, Bullet bullet)
	{
	}

	[Token(Token = "0x6000BCE")]
	[Address(RVA = "0xF52548", Offset = "0xF52548", VA = "0xF52548")]
	[PunRPC]
	public void OnHitInteractableBonus(string interactableBonusId, string bulletId)
	{
	}

	[Token(Token = "0x6000BCF")]
	[Address(RVA = "0xF526C0", Offset = "0xF526C0", VA = "0xF526C0", Slot = "4")]
	public void OnPhotonSerializeView(PhotonStream stream, PhotonMessageInfo info)
	{
	}

	[Token(Token = "0x6000BD0")]
	[Address(RVA = "0xF526C4", Offset = "0xF526C4", VA = "0xF526C4")]
	public void sendStartBulletTime(float bulletTime)
	{
	}

	[Token(Token = "0x6000BD1")]
	[Address(RVA = "0xF5284C", Offset = "0xF5284C", VA = "0xF5284C")]
	[PunRPC]
	public void StartBulletTime(float bulletTime)
	{
	}

	[Token(Token = "0x6000BD2")]
	[Address(RVA = "0xF52928", Offset = "0xF52928", VA = "0xF52928")]
	public void sendExplodeMissile(string id, Vector3 position, bool bMissileTarget)
	{
	}

	[Token(Token = "0x6000BD3")]
	[Address(RVA = "0xF52B3C", Offset = "0xF52B3C", VA = "0xF52B3C")]
	[PunRPC]
	public void ExplodeMissile(string id, Vector3 position, bool bMissileTarget)
	{
	}

	[Token(Token = "0x6000BD4")]
	[Address(RVA = "0xF52CB8", Offset = "0xF52CB8", VA = "0xF52CB8")]
	public void sendExplodeGrenade(string id, Vector3 position)
	{
	}

	[Token(Token = "0x6000BD5")]
	[Address(RVA = "0xF52E68", Offset = "0xF52E68", VA = "0xF52E68")]
	[PunRPC]
	public void ExplodeGrenade(string id, Vector3 position)
	{
	}

	[Token(Token = "0x6000BD6")]
	[Address(RVA = "0xF52FC4", Offset = "0xF52FC4", VA = "0xF52FC4")]
	public void sendExplodeBomb(string id)
	{
	}

	[Token(Token = "0x6000BD7")]
	[Address(RVA = "0xF53104", Offset = "0xF53104", VA = "0xF53104")]
	[PunRPC]
	public void ExplodeBomb(string id)
	{
	}

	[Token(Token = "0x6000BD8")]
	[Address(RVA = "0xF53248", Offset = "0xF53248", VA = "0xF53248")]
	public void sendSamuraiMinigunBroken(string name)
	{
	}

	[Token(Token = "0x6000BD9")]
	[Address(RVA = "0xF53370", Offset = "0xF53370", VA = "0xF53370")]
	[PunRPC]
	private void SamuraiMinigunBroken(string name)
	{
	}

	[Token(Token = "0x6000BDA")]
	[Address(RVA = "0xF5346C", Offset = "0xF5346C", VA = "0xF5346C")]
	public void sendSamuraiArmorHit(string name, string part, string animatorTrigger)
	{
	}

	[Token(Token = "0x6000BDB")]
	[Address(RVA = "0xF5360C", Offset = "0xF5360C", VA = "0xF5360C")]
	[PunRPC]
	private void SamuraiArmorHit(string name, string part, string animatorTrigger)
	{
	}

	[Token(Token = "0x6000BDC")]
	[Address(RVA = "0xF537B4", Offset = "0xF537B4", VA = "0xF537B4")]
	public void sendKillAgent(string name)
	{
	}

	[Token(Token = "0x6000BDD")]
	[Address(RVA = "0xF538F4", Offset = "0xF538F4", VA = "0xF538F4")]
	[PunRPC]
	private void KillAgent(string name)
	{
	}

	[Token(Token = "0x6000BDE")]
	[Address(RVA = "0xF53A38", Offset = "0xF53A38", VA = "0xF53A38")]
	public void sendLocationComplete(LocationController location, bool force)
	{
	}

	[Token(Token = "0x6000BDF")]
	[Address(RVA = "0xF53C0C", Offset = "0xF53C0C", VA = "0xF53C0C")]
	[PunRPC]
	private void LocationComplete(string locationName, bool force)
	{
	}

	[Token(Token = "0x6000BE0")]
	[Address(RVA = "0xF53D58", Offset = "0xF53D58", VA = "0xF53D58")]
	public void sendMiniGunTriggerPressed(string name, bool bRightHand, bool pressed)
	{
	}

	[Token(Token = "0x6000BE1")]
	[Address(RVA = "0xF53F90", Offset = "0xF53F90", VA = "0xF53F90")]
	[PunRPC]
	public void MiniGunTriggerPressed(string owner, bool bRightHand, bool pressed)
	{
	}

	[Token(Token = "0x6000BE2")]
	[Address(RVA = "0xF37DC4", Offset = "0xF37DC4", VA = "0xF37DC4")]
	public void RegisterCustomMessage(MonoBehaviour o)
	{
	}

	[Token(Token = "0x6000BE3")]
	[Address(RVA = "0xF381F4", Offset = "0xF381F4", VA = "0xF381F4")]
	public void DeregisterCustomMessage(MonoBehaviour o)
	{
	}

	[Token(Token = "0x6000BE4")]
	[Address(RVA = "0xF38570", Offset = "0xF38570", VA = "0xF38570")]
	public void sendCustomMessage(MonoBehaviour t, string method, params object[] parameters)
	{
	}

	[Token(Token = "0x6000BE5")]
	[Address(RVA = "0xF4D374", Offset = "0xF4D374", VA = "0xF4D374")]
	public void sendCustomMessage(MonoBehaviour t, string method, RpcTarget target, params object[] parameters)
	{
	}

	[Token(Token = "0x6000BE6")]
	[Address(RVA = "0xF54174", Offset = "0xF54174", VA = "0xF54174")]
	[PunRPC]
	public void CustomMessage(string strName, string method, object[] parameters)
	{
	}

	[Token(Token = "0x6000BE7")]
	[Address(RVA = "0xF5429C", Offset = "0xF5429C", VA = "0xF5429C")]
	public void AdjustNetworkTime(bool force = false)
	{
	}

	[Token(Token = "0x6000BE8")]
	[Address(RVA = "0xF544B4", Offset = "0xF544B4", VA = "0xF544B4")]
	[PunRPC]
	public void AdjustNetworkTimeRPC(float timeRemaing)
	{
	}

	[Token(Token = "0x6000BE9")]
	[Address(RVA = "0xF54588", Offset = "0xF54588", VA = "0xF54588")]
	public void sendResumeTime()
	{
	}

	[Token(Token = "0x6000BEA")]
	[Address(RVA = "0xF54694", Offset = "0xF54694", VA = "0xF54694")]
	[PunRPC]
	public void ResumeTime()
	{
	}

	[Token(Token = "0x6000BEB")]
	[Address(RVA = "0xF5472C", Offset = "0xF5472C", VA = "0xF5472C")]
	public NetworkBulletController()
	{
	}
}
[Token(Token = "0x20001F9")]
public class OnlinePositionSync : MonoBehaviour
{
	[Token(Token = "0x4000A2C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float lastTime;

	[Token(Token = "0x4000A2D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float timeLapse;

	[Token(Token = "0x4000A2E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float tolerance;

	[Token(Token = "0x4000A2F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private bool registered;

	[Token(Token = "0x6000BED")]
	[Address(RVA = "0xF54854", Offset = "0xF54854", VA = "0xF54854")]
	private void Start()
	{
	}

	[Token(Token = "0x6000BEE")]
	[Address(RVA = "0xF54870", Offset = "0xF54870", VA = "0xF54870")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000BEF")]
	[Address(RVA = "0xF54944", Offset = "0xF54944", VA = "0xF54944")]
	private void Update()
	{
	}

	[Token(Token = "0x6000BF0")]
	[Address(RVA = "0xF54BE0", Offset = "0xF54BE0", VA = "0xF54BE0")]
	private void SyncPosition(Vector3 position)
	{
	}

	[Token(Token = "0x6000BF1")]
	[Address(RVA = "0xF54D48", Offset = "0xF54D48", VA = "0xF54D48")]
	public OnlinePositionSync()
	{
	}
}
[Token(Token = "0x20001FA")]
public class OnlineSceneModifier : MonoBehaviour
{
	[Token(Token = "0x4000A30")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject[] DisabledItems;

	[Token(Token = "0x4000A31")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string[] DisabledItemsByName;

	[Token(Token = "0x4000A32")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject[] EnabledItems;

	[Token(Token = "0x6000BF2")]
	[Address(RVA = "0xF54D5C", Offset = "0xF54D5C", VA = "0xF54D5C")]
	public void Awake()
	{
	}

	[Token(Token = "0x6000BF3")]
	[Address(RVA = "0xF54E18", Offset = "0xF54E18", VA = "0xF54E18")]
	public void ModifyScene()
	{
	}

	[Token(Token = "0x6000BF4")]
	[Address(RVA = "0xF54EA4", Offset = "0xF54EA4", VA = "0xF54EA4")]
	private void disableItems(GameObject[] data)
	{
	}

	[Token(Token = "0x6000BF5")]
	[Address(RVA = "0xF55078", Offset = "0xF55078", VA = "0xF55078")]
	private void disableItemsByName(string[] names, [Optional] Transform transform)
	{
	}

	[Token(Token = "0x6000BF6")]
	[Address(RVA = "0xF55450", Offset = "0xF55450", VA = "0xF55450")]
	private void enableItems(GameObject[] data)
	{
	}

	[Token(Token = "0x6000BF7")]
	[Address(RVA = "0xF5558C", Offset = "0xF5558C", VA = "0xF5558C")]
	public OnlineSceneModifier()
	{
	}
}
[Token(Token = "0x20001FB")]
public class RemoteHandController : MonoBehaviour
{
	[Token(Token = "0x4000A33")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private SVRHand Hand;

	[Token(Token = "0x6000BF8")]
	[Address(RVA = "0xF55594", Offset = "0xF55594", VA = "0xF55594")]
	private void Start()
	{
	}

	[Token(Token = "0x6000BF9")]
	[Address(RVA = "0xF5573C", Offset = "0xF5573C", VA = "0xF5573C")]
	public void checkStartingWeapon()
	{
	}

	[Token(Token = "0x6000BFA")]
	[Address(RVA = "0xF561F8", Offset = "0xF561F8", VA = "0xF561F8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000BFB")]
	[Address(RVA = "0xF5577C", Offset = "0xF5577C", VA = "0xF5577C")]
	public void BeginInteraction(SVRInteractable interactable)
	{
	}

	[Token(Token = "0x6000BFC")]
	[Address(RVA = "0xF564F0", Offset = "0xF564F0", VA = "0xF564F0")]
	private void EndInteraction(SVRInteractable interactable)
	{
	}

	[Token(Token = "0x6000BFD")]
	[Address(RVA = "0xF56788", Offset = "0xF56788", VA = "0xF56788")]
	private void OnMountMagazine(SVRMagazine mag)
	{
	}

	[Token(Token = "0x6000BFE")]
	[Address(RVA = "0xF5680C", Offset = "0xF5680C", VA = "0xF5680C")]
	private void OnDropMagazine(SVRMagazine mag)
	{
	}

	[Token(Token = "0x6000BFF")]
	[Address(RVA = "0xF56890", Offset = "0xF56890", VA = "0xF56890")]
	public RemoteHandController()
	{
	}
}
[Token(Token = "0x20001FC")]
public class SVRHandOnline : SVRHand
{
	[Token(Token = "0x4000A34")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private OnlinePlayer onlinePlayer;

	[Token(Token = "0x1700009B")]
	public override bool HoldButtonDown
	{
		[Token(Token = "0x6000C00")]
		[Address(RVA = "0xF56898", Offset = "0xF56898", VA = "0xF56898", Slot = "4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700009C")]
	public override bool HoldButtonUp
	{
		[Token(Token = "0x6000C01")]
		[Address(RVA = "0xF568A0", Offset = "0xF568A0", VA = "0xF568A0", Slot = "5")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700009D")]
	public override bool HoldButtonPressed
	{
		[Token(Token = "0x6000C02")]
		[Address(RVA = "0xF568A8", Offset = "0xF568A8", VA = "0xF568A8", Slot = "6")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700009E")]
	public override float HoldButtonAxis
	{
		[Token(Token = "0x6000C03")]
		[Address(RVA = "0xF568B0", Offset = "0xF568B0", VA = "0xF568B0", Slot = "7")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x1700009F")]
	public override bool UseButtonDown
	{
		[Token(Token = "0x6000C04")]
		[Address(RVA = "0xF568B8", Offset = "0xF568B8", VA = "0xF568B8", Slot = "8")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170000A0")]
	public override bool UseButtonUp
	{
		[Token(Token = "0x6000C05")]
		[Address(RVA = "0xF568C0", Offset = "0xF568C0", VA = "0xF568C0", Slot = "9")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170000A1")]
	public override bool UseButtonPressed
	{
		[Token(Token = "0x6000C06")]
		[Address(RVA = "0xF568C8", Offset = "0xF568C8", VA = "0xF568C8", Slot = "10")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170000A2")]
	public override float UseButtonAxis
	{
		[Token(Token = "0x6000C07")]
		[Address(RVA = "0xF568D0", Offset = "0xF568D0", VA = "0xF568D0", Slot = "11")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x170000A3")]
	public override SVRHand OtherHand
	{
		[Token(Token = "0x6000C09")]
		[Address(RVA = "0xF568E8", Offset = "0xF568E8", VA = "0xF568E8", Slot = "14")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000C08")]
	[Address(RVA = "0xF568D8", Offset = "0xF568D8", VA = "0xF568D8")]
	public void Start()
	{
	}

	[Token(Token = "0x6000C0A")]
	[Address(RVA = "0xF5691C", Offset = "0xF5691C", VA = "0xF5691C", Slot = "22")]
	public override void Initialize()
	{
	}

	[Token(Token = "0x6000C0B")]
	[Address(RVA = "0xF56ADC", Offset = "0xF56ADC", VA = "0xF56ADC", Slot = "16")]
	protected override void Update()
	{
	}

	[Token(Token = "0x6000C0C")]
	[Address(RVA = "0xF56BB8", Offset = "0xF56BB8", VA = "0xF56BB8", Slot = "19")]
	protected override void OnTriggerEnter(Collider collider)
	{
	}

	[Token(Token = "0x6000C0D")]
	[Address(RVA = "0xF56BBC", Offset = "0xF56BBC", VA = "0xF56BBC", Slot = "20")]
	public override void OnTriggerExit(Collider collider)
	{
	}

	[Token(Token = "0x6000C0E")]
	[Address(RVA = "0xF56BC0", Offset = "0xF56BC0", VA = "0xF56BC0", Slot = "21")]
	public override string GetDeviceName()
	{
		return null;
	}

	[Token(Token = "0x6000C0F")]
	[Address(RVA = "0xF56BC8", Offset = "0xF56BC8", VA = "0xF56BC8")]
	public SVRHandOnline()
	{
	}
}
[Token(Token = "0x20001FD")]
public class OnlineChangeNickNamePanel : MonoBehaviour
{
	[Token(Token = "0x4000A35")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public KeyboardScreen screen;

	[Token(Token = "0x4000A36")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Keyboard keyboard;

	[Token(Token = "0x4000A37")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public UIButton OkButton;

	[Token(Token = "0x4000A38")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private OnlineGameManager onlineGameManager;

	[Token(Token = "0x6000C10")]
	[Address(RVA = "0xF56BD0", Offset = "0xF56BD0", VA = "0xF56BD0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000C11")]
	[Address(RVA = "0xF56D08", Offset = "0xF56D08", VA = "0xF56D08")]
	private void Update()
	{
	}

	[Token(Token = "0x6000C12")]
	[Address(RVA = "0xF56D0C", Offset = "0xF56D0C", VA = "0xF56D0C")]
	private void OnKeyboardOk()
	{
	}

	[Token(Token = "0x6000C13")]
	[Address(RVA = "0xF56D80", Offset = "0xF56D80", VA = "0xF56D80")]
	private void OnButtonOk()
	{
	}

	[Token(Token = "0x6000C14")]
	[Address(RVA = "0xF5714C", Offset = "0xF5714C", VA = "0xF5714C")]
	public OnlineChangeNickNamePanel()
	{
	}
}
[Token(Token = "0x20001FE")]
public class OnlineCreateJoinKeyPanel : MonoBehaviour
{
	[Token(Token = "0x4000A39")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public KeyboardScreen screen;

	[Token(Token = "0x4000A3A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Keyboard keyboard;

	[Token(Token = "0x4000A3B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public UIButton OkButton;

	[Token(Token = "0x4000A3C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public TextMeshPro errorInfo;

	[Token(Token = "0x4000A3D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private OnlineGameManager onlineGameManager;

	[Token(Token = "0x4000A3E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public string password;

	[Token(Token = "0x6000C15")]
	[Address(RVA = "0xF57154", Offset = "0xF57154", VA = "0xF57154")]
	private void Start()
	{
	}

	[Token(Token = "0x6000C16")]
	[Address(RVA = "0xF5728C", Offset = "0xF5728C", VA = "0xF5728C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000C17")]
	[Address(RVA = "0xF57290", Offset = "0xF57290", VA = "0xF57290")]
	private void OnKeyboardOk()
	{
	}

	[Token(Token = "0x6000C18")]
	[Address(RVA = "0xF57304", Offset = "0xF57304", VA = "0xF57304")]
	private void OnButtonOk()
	{
	}

	[Token(Token = "0x6000C19")]
	[Address(RVA = "0xF574D8", Offset = "0xF574D8", VA = "0xF574D8")]
	public OnlineCreateJoinKeyPanel()
	{
	}
}
[Token(Token = "0x20001FF")]
public class OnlineGameManager : MonoBehaviour
{
	[Token(Token = "0x2000200")]
	[CompilerGenerated]
	private sealed class <waitForMyPlayer>d__49 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000A53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000A54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000A55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private string <newPosition>5__2;

		[Token(Token = "0x170000A4")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000C3D")]
			[Address(RVA = "0xF59934", Offset = "0xF59934", VA = "0xF59934", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000A5")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000C3F")]
			[Address(RVA = "0xF5997C", Offset = "0xF5997C", VA = "0xF5997C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000C3A")]
		[Address(RVA = "0xF595AC", Offset = "0xF595AC", VA = "0xF595AC")]
		[DebuggerHidden]
		public <waitForMyPlayer>d__49(int <>1__state)
		{
		}

		[Token(Token = "0x6000C3B")]
		[Address(RVA = "0xF595DC", Offset = "0xF595DC", VA = "0xF595DC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000C3C")]
		[Address(RVA = "0xF595E0", Offset = "0xF595E0", VA = "0xF595E0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000C3E")]
		[Address(RVA = "0xF5993C", Offset = "0xF5993C", VA = "0xF5993C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000A3F")]
	private const string ONLINE_LABEL = "online";

	[Token(Token = "0x4000A40")]
	private const string CONNECTING_LABEL = "online_connecting";

	[Token(Token = "0x4000A41")]
	private const string RANDOMROOM_LABEL = "online_random_room";

	[Token(Token = "0x4000A42")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public UIButton connectButton;

	[Token(Token = "0x4000A43")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public UIButton disconnectButton;

	[Token(Token = "0x4000A44")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public UIButton backToMainPanelButton;

	[Token(Token = "0x4000A45")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform OnlineWindow;

	[Token(Token = "0x4000A46")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public OnlineMainPanel mainPanel;

	[Token(Token = "0x4000A47")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public OnlineWaitingPlayersPanel waitingPlayersPanel;

	[Token(Token = "0x4000A48")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public OnlineCreateJoinKeyPanel createJoinKeyPanel;

	[Token(Token = "0x4000A49")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public OnlineChangeNickNamePanel changeNickNamePanel;

	[Token(Token = "0x4000A4A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Transform onlineNetworkErrorPanel;

	[Token(Token = "0x4000A4B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Transform infoPanels;

	[Token(Token = "0x4000A4C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public TextMeshPro myName;

	[Token(Token = "0x4000A4D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[HideInInspector]
	public string defaultNickName;

	[Token(Token = "0x4000A4E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[HideInInspector]
	public string defaultJoinPassword;

	[Token(Token = "0x4000A4F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static OnlineGameManager Instance;

	[Token(Token = "0x4000A50")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private bool m_bOnlineGameStarted;

	[Token(Token = "0x4000A51")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private PhysicalButton[] menuButtons;

	[Token(Token = "0x4000A52")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private SumalabInvoke.SumalabInvokeHandler invokeHandler;

	[Token(Token = "0x6000C1A")]
	[Address(RVA = "0xF574E0", Offset = "0xF574E0", VA = "0xF574E0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000C1B")]
	[Address(RVA = "0xF57538", Offset = "0xF57538", VA = "0xF57538")]
	private void Start()
	{
	}

	[Token(Token = "0x6000C1C")]
	[Address(RVA = "0xF576DC", Offset = "0xF576DC", VA = "0xF576DC")]
	private void finishStart()
	{
	}

	[Token(Token = "0x6000C1D")]
	[Address(RVA = "0xF57E6C", Offset = "0xF57E6C", VA = "0xF57E6C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000C1E")]
	[Address(RVA = "0xF57E70", Offset = "0xF57E70", VA = "0xF57E70")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000C1F")]
	[Address(RVA = "0xF5780C", Offset = "0xF5780C", VA = "0xF5780C")]
	public void startOnlineConnection()
	{
	}

	[Token(Token = "0x6000C20")]
	[Address(RVA = "0xF58134", Offset = "0xF58134", VA = "0xF58134")]
	private void onGamePlayerEnteredRoom()
	{
	}

	[Token(Token = "0x6000C21")]
	[Address(RVA = "0xF58138", Offset = "0xF58138", VA = "0xF58138")]
	private void sendChangeMission()
	{
	}

	[Token(Token = "0x6000C22")]
	[Address(RVA = "0xF57E78", Offset = "0xF57E78", VA = "0xF57E78")]
	public void resetListening(bool bResetDisconnect = true)
	{
	}

	[Token(Token = "0x6000C23")]
	[Address(RVA = "0xF583F4", Offset = "0xF583F4", VA = "0xF583F4")]
	public void stopOnlineConnection()
	{
	}

	[Token(Token = "0x6000C24")]
	[Address(RVA = "0xF585A0", Offset = "0xF585A0", VA = "0xF585A0")]
	public void joinRandomGame()
	{
	}

	[Token(Token = "0x6000C25")]
	[Address(RVA = "0xF58664", Offset = "0xF58664", VA = "0xF58664")]
	public void showJoinPasswordGamePanel()
	{
	}

	[Token(Token = "0x6000C26")]
	[Address(RVA = "0xF589AC", Offset = "0xF589AC", VA = "0xF589AC")]
	public void showChangeNickNamePanel()
	{
	}

	[Token(Token = "0x6000C27")]
	[Address(RVA = "0xF58B40", Offset = "0xF58B40", VA = "0xF58B40")]
	private void backToMainPanel()
	{
	}

	[Token(Token = "0x6000C28")]
	[Address(RVA = "0xF573E0", Offset = "0xF573E0", VA = "0xF573E0")]
	public void joinGame(string password)
	{
	}

	[Token(Token = "0x6000C29")]
	[Address(RVA = "0xF56E88", Offset = "0xF56E88", VA = "0xF56E88")]
	public void setNickName(string str)
	{
	}

	[Token(Token = "0x6000C2A")]
	[Address(RVA = "0xF58FB4", Offset = "0xF58FB4", VA = "0xF58FB4")]
	private void onGameConnected()
	{
	}

	[Token(Token = "0x6000C2B")]
	[Address(RVA = "0xF58810", Offset = "0xF58810", VA = "0xF58810")]
	private void showInfoPanel(Transform panel)
	{
	}

	[Token(Token = "0x6000C2C")]
	[Address(RVA = "0xF590E0", Offset = "0xF590E0", VA = "0xF590E0")]
	private void onGameRejoin()
	{
	}

	[Token(Token = "0x6000C2D")]
	[Address(RVA = "0xF591C0", Offset = "0xF591C0", VA = "0xF591C0")]
	private void onGameDisconnected(DisconnectCause cause)
	{
	}

	[Token(Token = "0x6000C2E")]
	[Address(RVA = "0xF593B8", Offset = "0xF593B8", VA = "0xF593B8")]
	private void onGameJoinRoomError(string errorMessage)
	{
	}

	[Token(Token = "0x6000C2F")]
	[Address(RVA = "0xF59358", Offset = "0xF59358", VA = "0xF59358")]
	private void showDisconnectError()
	{
	}

	[Token(Token = "0x6000C30")]
	[Address(RVA = "0xF58BB4", Offset = "0xF58BB4", VA = "0xF58BB4")]
	private void showMainPanel()
	{
	}

	[Token(Token = "0x6000C31")]
	[Address(RVA = "0xF580E4", Offset = "0xF580E4", VA = "0xF580E4")]
	public void showOnlineWindow()
	{
	}

	[Token(Token = "0x6000C32")]
	[Address(RVA = "0xF57058", Offset = "0xF57058", VA = "0xF57058")]
	public void hideOnlineWindow()
	{
	}

	[Token(Token = "0x6000C33")]
	[Address(RVA = "0xF59454", Offset = "0xF59454", VA = "0xF59454")]
	public void closeRoomForNewPlayers()
	{
	}

	[Token(Token = "0x6000C34")]
	[Address(RVA = "0xF594C0", Offset = "0xF594C0", VA = "0xF594C0")]
	private void onGameJoinedRoom()
	{
	}

	[Token(Token = "0x6000C35")]
	[Address(RVA = "0xF59544", Offset = "0xF59544", VA = "0xF59544")]
	private void startGame()
	{
	}

	[Token(Token = "0x6000C36")]
	[Address(RVA = "0xF57C30", Offset = "0xF57C30", VA = "0xF57C30")]
	private void waitingForPlayers(bool bBlock = false)
	{
	}

	[Token(Token = "0x6000C37")]
	[Address(RVA = "0xF59160", Offset = "0xF59160", VA = "0xF59160")]
	[IteratorStateMachine(typeof(<waitForMyPlayer>d__49))]
	private IEnumerator waitForMyPlayer()
	{
		return null;
	}

	[Token(Token = "0x6000C38")]
	[Address(RVA = "0xF58E50", Offset = "0xF58E50", VA = "0xF58E50")]
	private void saveSettings()
	{
	}

	[Token(Token = "0x6000C39")]
	[Address(RVA = "0xF595D4", Offset = "0xF595D4", VA = "0xF595D4")]
	public OnlineGameManager()
	{
	}
}
[Token(Token = "0x2000201")]
public class OnlineMainPanel : MonoBehaviour
{
	[Token(Token = "0x4000A56")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public UIButton joinRandomGameButton;

	[Token(Token = "0x4000A57")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public UIButton joinPasswordGameButton;

	[Token(Token = "0x4000A58")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private OnlineGameManager onlineGameManager;

	[Token(Token = "0x6000C40")]
	[Address(RVA = "0xF59984", Offset = "0xF59984", VA = "0xF59984")]
	private void Start()
	{
	}

	[Token(Token = "0x6000C41")]
	[Address(RVA = "0xF59AA0", Offset = "0xF59AA0", VA = "0xF59AA0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000C42")]
	[Address(RVA = "0xF59AA4", Offset = "0xF59AA4", VA = "0xF59AA4")]
	public void joinRandomGame()
	{
	}

	[Token(Token = "0x6000C43")]
	[Address(RVA = "0xF59ABC", Offset = "0xF59ABC", VA = "0xF59ABC")]
	public void joinPasswordGame()
	{
	}

	[Token(Token = "0x6000C44")]
	[Address(RVA = "0xF59AD4", Offset = "0xF59AD4", VA = "0xF59AD4")]
	public void changeNickName()
	{
	}

	[Token(Token = "0x6000C45")]
	[Address(RVA = "0xF59AEC", Offset = "0xF59AEC", VA = "0xF59AEC")]
	public OnlineMainPanel()
	{
	}
}
[Token(Token = "0x2000202")]
public class OnlineWaitingPlayersPanel : MonoBehaviour
{
	[Token(Token = "0x4000A59")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TextMeshPro titleText;

	[Token(Token = "0x4000A5A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TextMeshPro infoText;

	[Token(Token = "0x4000A5B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public TextMeshPro playersText;

	[Token(Token = "0x4000A5C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public UIButton playButton;

	[Token(Token = "0x4000A5D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool block;

	[Token(Token = "0x4000A5E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private OnlineGameManager onlineGameManager;

	[Token(Token = "0x4000A5F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private int iPlayersCountDiff;

	[Token(Token = "0x6000C46")]
	[Address(RVA = "0xF59AF4", Offset = "0xF59AF4", VA = "0xF59AF4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000C47")]
	[Address(RVA = "0xF59BEC", Offset = "0xF59BEC", VA = "0xF59BEC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000C48")]
	[Address(RVA = "0xF59BF0", Offset = "0xF59BF0", VA = "0xF59BF0")]
	private void Play()
	{
	}

	[Token(Token = "0x6000C49")]
	[Address(RVA = "0xF59C08", Offset = "0xF59C08", VA = "0xF59C08")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000C4A")]
	[Address(RVA = "0xF59CD4", Offset = "0xF59CD4", VA = "0xF59CD4")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000C4B")]
	[Address(RVA = "0xF59D4C", Offset = "0xF59D4C", VA = "0xF59D4C")]
	private void checkPlayers()
	{
	}

	[Token(Token = "0x6000C4C")]
	[Address(RVA = "0xF5A140", Offset = "0xF5A140", VA = "0xF5A140")]
	public OnlineWaitingPlayersPanel()
	{
	}
}
[Token(Token = "0x2000203")]
public class OOpaHeadMovement : MonoBehaviour
{
	[Token(Token = "0x6000C4D")]
	[Address(RVA = "0xF5A148", Offset = "0xF5A148", VA = "0xF5A148")]
	private void Start()
	{
	}

	[Token(Token = "0x6000C4E")]
	[Address(RVA = "0xF5A244", Offset = "0xF5A244", VA = "0xF5A244")]
	public OOpaHeadMovement()
	{
	}
}
[Token(Token = "0x2000204")]
public class OutOfPlayArea : MonoBehaviour
{
	[Token(Token = "0x4000A60")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject oopa_screen;

	[Token(Token = "0x4000A61")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private HashSet<Collider> m_colliders;

	[Token(Token = "0x4000A62")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private List<Collider> m_collidersDisabled;

	[Token(Token = "0x6000C4F")]
	[Address(RVA = "0xF5A24C", Offset = "0xF5A24C", VA = "0xF5A24C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000C50")]
	[Address(RVA = "0xF5A26C", Offset = "0xF5A26C", VA = "0xF5A26C")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000C51")]
	[Address(RVA = "0xF5A6D4", Offset = "0xF5A6D4", VA = "0xF5A6D4")]
	private void OnTriggerEnter(Collider collider)
	{
	}

	[Token(Token = "0x6000C52")]
	[Address(RVA = "0xF5A99C", Offset = "0xF5A99C", VA = "0xF5A99C")]
	private void OnTriggerExit(Collider collider)
	{
	}

	[Token(Token = "0x6000C53")]
	[Address(RVA = "0xF5A8E8", Offset = "0xF5A8E8", VA = "0xF5A8E8")]
	private void pauseGame()
	{
	}

	[Token(Token = "0x6000C54")]
	[Address(RVA = "0xF5A664", Offset = "0xF5A664", VA = "0xF5A664")]
	private void resumeGame()
	{
	}

	[Token(Token = "0x6000C55")]
	[Address(RVA = "0xF5AA28", Offset = "0xF5AA28", VA = "0xF5AA28")]
	public void ResetColliders()
	{
	}

	[Token(Token = "0x6000C56")]
	[Address(RVA = "0xF5AA8C", Offset = "0xF5AA8C", VA = "0xF5AA8C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000C57")]
	[Address(RVA = "0xF5AA90", Offset = "0xF5AA90", VA = "0xF5AA90")]
	public OutOfPlayArea()
	{
	}
}
[Token(Token = "0x2000205")]
public class OverwriteAnimTransform : MonoBehaviour
{
	[Token(Token = "0x4000A63")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string type;

	[Token(Token = "0x4000A64")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform boneTransform;

	[Token(Token = "0x4000A65")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform overwriteTransform;

	[Token(Token = "0x6000C58")]
	[Address(RVA = "0xF5AB68", Offset = "0xF5AB68", VA = "0xF5AB68")]
	public OverwriteAnimTransform()
	{
	}
}
[Token(Token = "0x2000206")]
public class PathFollower : MonoBehaviour
{
	[Token(Token = "0x4000A66")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float delay;

	[Token(Token = "0x4000A67")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float ratio;

	[Token(Token = "0x4000A68")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float speed;

	[Token(Token = "0x4000A69")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string pool_arrow;

	[Token(Token = "0x4000A6A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private List<BezierPoint> bezierPoints;

	[Token(Token = "0x4000A6B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private List<Vector3> waypoints;

	[Token(Token = "0x4000A6C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private List<GameObject> spawnedLines;

	[Token(Token = "0x4000A6D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool alreadyDisabled;

	[Token(Token = "0x6000C59")]
	[Address(RVA = "0xF5AB70", Offset = "0xF5AB70", VA = "0xF5AB70")]
	private void Start()
	{
	}

	[Token(Token = "0x6000C5A")]
	[Address(RVA = "0xF5AE50", Offset = "0xF5AE50", VA = "0xF5AE50")]
	private void NewArrowFollowPath()
	{
	}

	[Token(Token = "0x6000C5B")]
	[Address(RVA = "0xF5B104", Offset = "0xF5B104", VA = "0xF5B104")]
	public PathFollower()
	{
	}
}
[Token(Token = "0x2000207")]
public class PathFollowerSingleObject : MonoBehaviour
{
	[Token(Token = "0x4000A6E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float delay;

	[Token(Token = "0x4000A6F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float speed;

	[Token(Token = "0x4000A70")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject follower_gameObject;

	[Token(Token = "0x4000A71")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private List<BezierPoint> bezierPoints;

	[Token(Token = "0x4000A72")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private List<Vector3> waypoints;

	[Token(Token = "0x4000A73")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private List<GameObject> spawnedLines;

	[Token(Token = "0x4000A74")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool alreadyDisabled;

	[Token(Token = "0x6000C5C")]
	[Address(RVA = "0xF5B1CC", Offset = "0xF5B1CC", VA = "0xF5B1CC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000C5D")]
	[Address(RVA = "0xF5B554", Offset = "0xF5B554", VA = "0xF5B554")]
	public void FollowPath()
	{
	}

	[Token(Token = "0x6000C5E")]
	[Address(RVA = "0xF5B6C8", Offset = "0xF5B6C8", VA = "0xF5B6C8")]
	public void StopFollowPath()
	{
	}

	[Token(Token = "0x6000C5F")]
	[Address(RVA = "0xF5B6E8", Offset = "0xF5B6E8", VA = "0xF5B6E8")]
	public PathFollowerSingleObject()
	{
	}
}
[Token(Token = "0x2000208")]
public class PlayerHit : AimTarget
{
	[Token(Token = "0x2000209")]
	[CompilerGenerated]
	private sealed class <playerHit>d__31 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000A86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000A87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000A88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PlayerHit <>4__this;

		[Token(Token = "0x170000A6")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000C7B")]
			[Address(RVA = "0xF5D4EC", Offset = "0xF5D4EC", VA = "0xF5D4EC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000A7")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000C7D")]
			[Address(RVA = "0xF5D534", Offset = "0xF5D534", VA = "0xF5D534", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000C78")]
		[Address(RVA = "0xF5CEC8", Offset = "0xF5CEC8", VA = "0xF5CEC8")]
		[DebuggerHidden]
		public <playerHit>d__31(int <>1__state)
		{
		}

		[Token(Token = "0x6000C79")]
		[Address(RVA = "0xF5D1A4", Offset = "0xF5D1A4", VA = "0xF5D1A4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000C7A")]
		[Address(RVA = "0xF5D1A8", Offset = "0xF5D1A8", VA = "0xF5D1A8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000C7C")]
		[Address(RVA = "0xF5D4F4", Offset = "0xF5D4F4", VA = "0xF5D4F4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000A75")]
	private const int FAILED_BULLETS_WARNING = 25;

	[Token(Token = "0x4000A76")]
	private const float EXPLOSION_WAVE_RADIUS = 6f;

	[Token(Token = "0x4000A77")]
	private const float DAMAGE_SCREEN_FADE_TIME = 0.5f;

	[Token(Token = "0x4000A78")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public SumalabEvent<Bullet, Ray, RaycastHit> OnPlayerHit;

	[Token(Token = "0x4000A79")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public SumalabEvent OnPlayerDead;

	[Token(Token = "0x4000A7A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public SumalabEvent OnIncreaseLife;

	[Token(Token = "0x4000A7B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public SumalabEvent<Vector3> OnExplosion;

	[Token(Token = "0x4000A7C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public SumalabEvent<Vector3> OnExplosionWave;

	[Token(Token = "0x4000A7D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public SumalabEvent OnZombieAttack;

	[Token(Token = "0x4000A7E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Line deadLine;

	[Token(Token = "0x4000A7F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private AudioController playerAudio;

	[Token(Token = "0x4000A80")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private CrisisPlayer crisisPlayer;

	[Token(Token = "0x4000A81")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private bool playerHitActive;

	[Token(Token = "0x4000A82")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	private int lifes;

	[Token(Token = "0x4000A83")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public bool immortal;

	[Token(Token = "0x4000A84")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	private int failBullets;

	[Token(Token = "0x4000A85")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private bool unvulnerable;

	[Token(Token = "0x6000C60")]
	[Address(RVA = "0xF5B77C", Offset = "0xF5B77C", VA = "0xF5B77C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000C61")]
	[Address(RVA = "0xF5B788", Offset = "0xF5B788", VA = "0xF5B788")]
	private void Start()
	{
	}

	[Token(Token = "0x6000C62")]
	[Address(RVA = "0xF5B9DC", Offset = "0xF5B9DC", VA = "0xF5B9DC")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000C63")]
	[Address(RVA = "0xF5BB4C", Offset = "0xF5BB4C", VA = "0xF5BB4C", Slot = "4")]
	public override bool OnHit(Bullet bullet, Ray ray, RaycastHit hit)
	{
		return default(bool);
	}

	[Token(Token = "0x6000C64")]
	[Address(RVA = "0xF5C2C4", Offset = "0xF5C2C4", VA = "0xF5C2C4")]
	public void NonBulletHit()
	{
	}

	[Token(Token = "0x6000C65")]
	[Address(RVA = "0xF5C32C", Offset = "0xF5C32C", VA = "0xF5C32C", Slot = "8")]
	public override void OnBulletConsumed(Bullet bullet)
	{
	}

	[Token(Token = "0x6000C66")]
	[Address(RVA = "0xF5C7A8", Offset = "0xF5C7A8", VA = "0xF5C7A8")]
	private void OnWeaponFire(Weapon weapon, Bullet bullet)
	{
	}

	[Token(Token = "0x6000C67")]
	[Address(RVA = "0xF5C860", Offset = "0xF5C860", VA = "0xF5C860")]
	private void EmptyGunClick()
	{
	}

	[Token(Token = "0x6000C68")]
	[Address(RVA = "0xF5C898", Offset = "0xF5C898", VA = "0xF5C898")]
	public bool IsReallyHit()
	{
		return default(bool);
	}

	[Token(Token = "0x6000C69")]
	[Address(RVA = "0xF5C8B8", Offset = "0xF5C8B8", VA = "0xF5C8B8")]
	public void Explosion(Vector3 explosionPosition)
	{
	}

	[Token(Token = "0x6000C6A")]
	[Address(RVA = "0xF5CA54", Offset = "0xF5CA54", VA = "0xF5CA54")]
	public void ExplosionWave(Vector3 explosionPosition)
	{
	}

	[Token(Token = "0x6000C6B")]
	[Address(RVA = "0xF5CC80", Offset = "0xF5CC80", VA = "0xF5CC80")]
	private void ExplosionBeep()
	{
	}

	[Token(Token = "0x6000C6C")]
	[Address(RVA = "0xF5CCF0", Offset = "0xF5CCF0", VA = "0xF5CCF0")]
	public void StopExplosionBeep()
	{
	}

	[Token(Token = "0x6000C6D")]
	[Address(RVA = "0xF5CD54", Offset = "0xF5CD54", VA = "0xF5CD54")]
	private void FinishExplosionSoundEffect()
	{
	}

	[Token(Token = "0x6000C6E")]
	[Address(RVA = "0xF5C118", Offset = "0xF5C118", VA = "0xF5C118")]
	public void killPlayer(bool hit = true)
	{
	}

	[Token(Token = "0x6000C6F")]
	[Address(RVA = "0xF5C250", Offset = "0xF5C250", VA = "0xF5C250")]
	[IteratorStateMachine(typeof(<playerHit>d__31))]
	private IEnumerator playerHit()
	{
		return null;
	}

	[Token(Token = "0x6000C70")]
	[Address(RVA = "0xF5CEF0", Offset = "0xF5CEF0", VA = "0xF5CEF0")]
	public void setUnvulnerable(bool bValue)
	{
	}

	[Token(Token = "0x6000C71")]
	[Address(RVA = "0xF5CF04", Offset = "0xF5CF04", VA = "0xF5CF04")]
	public void enableColliders(bool bValue)
	{
	}

	[Token(Token = "0x6000C72")]
	[Address(RVA = "0xF5CFB4", Offset = "0xF5CFB4", VA = "0xF5CFB4")]
	public bool isUnvulnerable()
	{
		return default(bool);
	}

	[Token(Token = "0x6000C73")]
	[Address(RVA = "0xF5CFBC", Offset = "0xF5CFBC", VA = "0xF5CFBC")]
	public void increaseLife()
	{
	}

	[Token(Token = "0x6000C74")]
	[Address(RVA = "0xF5CFE8", Offset = "0xF5CFE8", VA = "0xF5CFE8")]
	public void decreaseLife()
	{
	}

	[Token(Token = "0x6000C75")]
	[Address(RVA = "0xF5CDB0", Offset = "0xF5CDB0", VA = "0xF5CDB0")]
	public void setLifes(int lifes)
	{
	}

	[Token(Token = "0x6000C76")]
	[Address(RVA = "0xF5D000", Offset = "0xF5D000", VA = "0xF5D000")]
	public int getLifes()
	{
		return default(int);
	}

	[Token(Token = "0x6000C77")]
	[Address(RVA = "0xF5D008", Offset = "0xF5D008", VA = "0xF5D008")]
	public PlayerHit()
	{
	}
}
[Token(Token = "0x200020A")]
public abstract class AbstractPlayerID
{
	[Token(Token = "0x4000A89")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	protected string customPlayerName;

	[Token(Token = "0x4000A8A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string debugData;

	[Token(Token = "0x6000C7E")]
	[Address(RVA = "0xF5D53C", Offset = "0xF5D53C", VA = "0xF5D53C", Slot = "4")]
	public virtual string GetPlayerName()
	{
		return null;
	}

	[Token(Token = "0x6000C7F")]
	[Address(RVA = "0xF5D5AC", Offset = "0xF5D5AC", VA = "0xF5D5AC", Slot = "5")]
	public virtual string GetPlayerID()
	{
		return null;
	}

	[Token(Token = "0x6000C80")]
	[Address(RVA = "0xF5D5B4", Offset = "0xF5D5B4", VA = "0xF5D5B4", Slot = "6")]
	public virtual void SetCustomPlayerName(string name)
	{
	}

	[Token(Token = "0x6000C81")]
	[Address(RVA = "0xF5D5BC", Offset = "0xF5D5BC", VA = "0xF5D5BC", Slot = "7")]
	public virtual bool IsReady()
	{
		return default(bool);
	}

	[Token(Token = "0x6000C82")]
	[Address(RVA = "0xF5D5C4", Offset = "0xF5D5C4", VA = "0xF5D5C4", Slot = "8")]
	public virtual void LoadPlayer(Action callback)
	{
	}

	[Token(Token = "0x6000C83")]
	[Address(RVA = "0xF5D5C8", Offset = "0xF5D5C8", VA = "0xF5D5C8")]
	private void WaitForPlayerReady(Action callback)
	{
	}

	[Token(Token = "0x6000C84")]
	[Address(RVA = "0xF5D70C", Offset = "0xF5D70C", VA = "0xF5D70C", Slot = "9")]
	public virtual string GetPlatform()
	{
		return null;
	}

	[Token(Token = "0x6000C85")]
	[Address(RVA = "0xF5D74C", Offset = "0xF5D74C", VA = "0xF5D74C", Slot = "10")]
	public virtual bool IsNameChangeAllowed()
	{
		return default(bool);
	}

	[Token(Token = "0x6000C86")]
	[Address(RVA = "0xF5D754", Offset = "0xF5D754", VA = "0xF5D754")]
	protected AbstractPlayerID()
	{
	}
}
[Token(Token = "0x200020C")]
public class PlayerIDDummy : AbstractPlayerID
{
	[Serializable]
	[Token(Token = "0x200020D")]
	public class Player
	{
		[Token(Token = "0x4000A8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string id;

		[Token(Token = "0x4000A90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string name;

		[Token(Token = "0x6000C90")]
		[Address(RVA = "0xF5DCE0", Offset = "0xF5DCE0", VA = "0xF5DCE0")]
		public Player()
		{
		}
	}

	[Token(Token = "0x4000A8D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Player player;

	[Token(Token = "0x4000A8E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Action callback;

	[Token(Token = "0x6000C89")]
	[Address(RVA = "0xF5D77C", Offset = "0xF5D77C", VA = "0xF5D77C", Slot = "4")]
	public override string GetPlayerName()
	{
		return null;
	}

	[Token(Token = "0x6000C8A")]
	[Address(RVA = "0xF5D794", Offset = "0xF5D794", VA = "0xF5D794", Slot = "5")]
	public override string GetPlayerID()
	{
		return null;
	}

	[Token(Token = "0x6000C8B")]
	[Address(RVA = "0xF5D7B0", Offset = "0xF5D7B0", VA = "0xF5D7B0", Slot = "8")]
	public override void LoadPlayer(Action callback)
	{
	}

	[Token(Token = "0x6000C8C")]
	[Address(RVA = "0xF5D8A0", Offset = "0xF5D8A0", VA = "0xF5D8A0", Slot = "6")]
	public override void SetCustomPlayerName(string name)
	{
	}

	[Token(Token = "0x6000C8D")]
	[Address(RVA = "0xF5D968", Offset = "0xF5D968", VA = "0xF5D968")]
	private void OnLoadPlayer(LoadSaveData.LoadSaveResult result, Player player)
	{
	}

	[Token(Token = "0x6000C8E")]
	[Address(RVA = "0xF5DCE8", Offset = "0xF5DCE8", VA = "0xF5DCE8", Slot = "10")]
	public override bool IsNameChangeAllowed()
	{
		return default(bool);
	}

	[Token(Token = "0x6000C8F")]
	[Address(RVA = "0xF5DCF0", Offset = "0xF5DCF0", VA = "0xF5DCF0")]
	public PlayerIDDummy()
	{
	}
}
[Token(Token = "0x200020E")]
public class PlayerIDManager
{
	[Token(Token = "0x4000A91")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static AbstractPlayerID playerID;

	[Token(Token = "0x6000C91")]
	[Address(RVA = "0xF58A40", Offset = "0xF58A40", VA = "0xF58A40")]
	public static string GetPlayerName(bool returnDefault = true)
	{
		return null;
	}

	[Token(Token = "0x6000C92")]
	[Address(RVA = "0xF5DCF8", Offset = "0xF5DCF8", VA = "0xF5DCF8")]
	private static string getDefaultName()
	{
		return null;
	}

	[Token(Token = "0x6000C93")]
	[Address(RVA = "0xF5DE74", Offset = "0xF5DE74", VA = "0xF5DE74")]
	public static string GetPlayerID()
	{
		return null;
	}

	[Token(Token = "0x6000C94")]
	[Address(RVA = "0xF5DF14", Offset = "0xF5DF14", VA = "0xF5DF14")]
	public static string GetPlatform()
	{
		return null;
	}

	[Token(Token = "0x6000C95")]
	[Address(RVA = "0xF5DFB4", Offset = "0xF5DFB4", VA = "0xF5DFB4")]
	public static string GetDebug()
	{
		return null;
	}

	[Token(Token = "0x6000C96")]
	[Address(RVA = "0xF5E050", Offset = "0xF5E050", VA = "0xF5E050")]
	public static void Load(Action action)
	{
	}

	[Token(Token = "0x6000C97")]
	[Address(RVA = "0xF5E400", Offset = "0xF5E400", VA = "0xF5E400")]
	public static void LoadDefaultPlayer(Action action)
	{
	}

	[Token(Token = "0x6000C98")]
	[Address(RVA = "0xF5E568", Offset = "0xF5E568", VA = "0xF5E568")]
	public static bool IsNameChangeAllowed()
	{
		return default(bool);
	}

	[Token(Token = "0x6000C99")]
	[Address(RVA = "0xF58F0C", Offset = "0xF58F0C", VA = "0xF58F0C")]
	public static void SetCustomPlayerName(string name)
	{
	}

	[Token(Token = "0x6000C9A")]
	[Address(RVA = "0xF5E608", Offset = "0xF5E608", VA = "0xF5E608")]
	public PlayerIDManager()
	{
	}
}
[Token(Token = "0x2000210")]
public class PlayerIDOculus : AbstractPlayerID
{
	[Token(Token = "0x4000A93")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private string id;

	[Token(Token = "0x4000A94")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private string name;

	[Token(Token = "0x4000A95")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool initialized;

	[Token(Token = "0x6000C9D")]
	[Address(RVA = "0xF5E748", Offset = "0xF5E748", VA = "0xF5E748", Slot = "4")]
	public override string GetPlayerName()
	{
		return null;
	}

	[Token(Token = "0x6000C9E")]
	[Address(RVA = "0xF5E750", Offset = "0xF5E750", VA = "0xF5E750", Slot = "5")]
	public override string GetPlayerID()
	{
		return null;
	}

	[Token(Token = "0x6000C9F")]
	[Address(RVA = "0xF5E758", Offset = "0xF5E758", VA = "0xF5E758", Slot = "9")]
	public override string GetPlatform()
	{
		return null;
	}

	[Token(Token = "0x6000CA0")]
	[Address(RVA = "0xF5E798", Offset = "0xF5E798", VA = "0xF5E798", Slot = "7")]
	public override bool IsReady()
	{
		return default(bool);
	}

	[Token(Token = "0x6000CA1")]
	[Address(RVA = "0xF5E7A0", Offset = "0xF5E7A0", VA = "0xF5E7A0", Slot = "8")]
	public override void LoadPlayer(Action callback)
	{
	}

	[Token(Token = "0x6000CA2")]
	[Address(RVA = "0xF5E3F8", Offset = "0xF5E3F8", VA = "0xF5E3F8")]
	public PlayerIDOculus()
	{
	}
}
[Token(Token = "0x2000211")]
public class PlayerIDPico : PlayerIDDummy
{
	[Token(Token = "0x6000CA4")]
	[Address(RVA = "0xF5EED0", Offset = "0xF5EED0", VA = "0xF5EED0", Slot = "9")]
	public override string GetPlatform()
	{
		return null;
	}

	[Token(Token = "0x6000CA5")]
	[Address(RVA = "0xF5EF10", Offset = "0xF5EF10", VA = "0xF5EF10")]
	public PlayerIDPico()
	{
	}
}
[Token(Token = "0x2000212")]
public class PlayerIDPS4 : AbstractPlayerID
{
	[Token(Token = "0x6000CA6")]
	[Address(RVA = "0xF5EF18", Offset = "0xF5EF18", VA = "0xF5EF18")]
	public PlayerIDPS4()
	{
	}
}
[Token(Token = "0x2000213")]
public class PlayerIDQIYU : AbstractPlayerID
{
	[Token(Token = "0x6000CA7")]
	[Address(RVA = "0xF5EF20", Offset = "0xF5EF20", VA = "0xF5EF20")]
	public PlayerIDQIYU()
	{
	}
}
[Token(Token = "0x2000214")]
public class PlayerIDSteam : AbstractPlayerID
{
	[Token(Token = "0x6000CA8")]
	[Address(RVA = "0xF5EF28", Offset = "0xF5EF28", VA = "0xF5EF28")]
	public PlayerIDSteam()
	{
	}
}
[Token(Token = "0x2000215")]
public class PlayerIDYVR : AbstractPlayerID
{
	[Token(Token = "0x4000A96")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private string id;

	[Token(Token = "0x4000A97")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private string name;

	[Token(Token = "0x4000A98")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool initialized;

	[Token(Token = "0x6000CA9")]
	[Address(RVA = "0xF5EF30", Offset = "0xF5EF30", VA = "0xF5EF30", Slot = "4")]
	public override string GetPlayerName()
	{
		return null;
	}

	[Token(Token = "0x6000CAA")]
	[Address(RVA = "0xF5EF38", Offset = "0xF5EF38", VA = "0xF5EF38", Slot = "5")]
	public override string GetPlayerID()
	{
		return null;
	}

	[Token(Token = "0x6000CAB")]
	[Address(RVA = "0xF5EF40", Offset = "0xF5EF40", VA = "0xF5EF40", Slot = "9")]
	public override string GetPlatform()
	{
		return null;
	}

	[Token(Token = "0x6000CAC")]
	[Address(RVA = "0xF5EF80", Offset = "0xF5EF80", VA = "0xF5EF80", Slot = "7")]
	public override bool IsReady()
	{
		return default(bool);
	}

	[Token(Token = "0x6000CAD")]
	[Address(RVA = "0xF5EF88", Offset = "0xF5EF88", VA = "0xF5EF88", Slot = "8")]
	public override void LoadPlayer(Action callback)
	{
	}

	[Token(Token = "0x6000CAE")]
	[Address(RVA = "0xF5EF8C", Offset = "0xF5EF8C", VA = "0xF5EF8C")]
	public PlayerIDYVR()
	{
	}
}
[Token(Token = "0x2000216")]
public class PulseLight : MonoBehaviour
{
	[Token(Token = "0x4000A99")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float intensity;

	[Token(Token = "0x4000A9A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float pulse_interval;

	[Token(Token = "0x4000A9B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private VolumetricLightBeam beam;

	[Token(Token = "0x6000CAF")]
	[Address(RVA = "0xF5EF94", Offset = "0xF5EF94", VA = "0xF5EF94")]
	private void Start()
	{
	}

	[Token(Token = "0x6000CB0")]
	[Address(RVA = "0xF5F1C0", Offset = "0xF5F1C0", VA = "0xF5F1C0")]
	private void updateBeamProperties()
	{
	}

	[Token(Token = "0x6000CB1")]
	[Address(RVA = "0xF5F244", Offset = "0xF5F244", VA = "0xF5F244")]
	public PulseLight()
	{
	}
}
[Token(Token = "0x2000217")]
public class PulseTween : MonoBehaviour
{
	[Token(Token = "0x4000A9C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float scale_to;

	[Token(Token = "0x4000A9D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float interval;

	[Token(Token = "0x6000CB4")]
	[Address(RVA = "0xF5F28C", Offset = "0xF5F28C", VA = "0xF5F28C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000CB5")]
	[Address(RVA = "0xF5F318", Offset = "0xF5F318", VA = "0xF5F318")]
	public PulseTween()
	{
	}
}
[Token(Token = "0x2000218")]
public class RagDollTest : MonoBehaviour
{
	[Token(Token = "0x6000CB6")]
	[Address(RVA = "0xF5F32C", Offset = "0xF5F32C", VA = "0xF5F32C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000CB7")]
	[Address(RVA = "0xF5F404", Offset = "0xF5F404", VA = "0xF5F404")]
	private void FireBullet()
	{
	}

	[Token(Token = "0x6000CB8")]
	[Address(RVA = "0xF5F498", Offset = "0xF5F498", VA = "0xF5F498")]
	public RagDollTest()
	{
	}
}
[Token(Token = "0x2000219")]
public class RBCenterOfMass : MonoBehaviour
{
	[Token(Token = "0x4000A9E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 new_center_of_mass;

	[Token(Token = "0x6000CB9")]
	[Address(RVA = "0xF5F4A0", Offset = "0xF5F4A0", VA = "0xF5F4A0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000CBA")]
	[Address(RVA = "0xF5F500", Offset = "0xF5F500", VA = "0xF5F500")]
	public RBCenterOfMass()
	{
	}
}
[Token(Token = "0x200021A")]
public class ReadySetGo : MonoBehaviour
{
	[Token(Token = "0x200021B")]
	[CompilerGenerated]
	private sealed class <WaitForAnimation>d__8 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000AA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000AA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000AA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Animation anim;

		[Token(Token = "0x4000AA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public UnityAction onAnimationComplete;

		[Token(Token = "0x170000A8")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000CC4")]
			[Address(RVA = "0xF5F920", Offset = "0xF5F920", VA = "0xF5F920", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000A9")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000CC6")]
			[Address(RVA = "0xF5F968", Offset = "0xF5F968", VA = "0xF5F968", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000CC1")]
		[Address(RVA = "0xF5F7CC", Offset = "0xF5F7CC", VA = "0xF5F7CC")]
		[DebuggerHidden]
		public <WaitForAnimation>d__8(int <>1__state)
		{
		}

		[Token(Token = "0x6000CC2")]
		[Address(RVA = "0xF5F8A8", Offset = "0xF5F8A8", VA = "0xF5F8A8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000CC3")]
		[Address(RVA = "0xF5F8AC", Offset = "0xF5F8AC", VA = "0xF5F8AC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000CC5")]
		[Address(RVA = "0xF5F928", Offset = "0xF5F928", VA = "0xF5F928", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000A9F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static SumalabEvent OnReadySetGo;

	[Token(Token = "0x4000AA0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static string TAKE_COVER_PATH;

	[Token(Token = "0x4000AA1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private AudioClip takeCover;

	[Token(Token = "0x4000AA2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private AudioController audioController;

	[Token(Token = "0x4000AA3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Animation anim;

	[Token(Token = "0x6000CBB")]
	[Address(RVA = "0xF5F508", Offset = "0xF5F508", VA = "0xF5F508")]
	public void init()
	{
	}

	[Token(Token = "0x6000CBC")]
	[Address(RVA = "0xF5F610", Offset = "0xF5F610", VA = "0xF5F610")]
	public void Show(UnityAction onShow)
	{
	}

	[Token(Token = "0x6000CBD")]
	[Address(RVA = "0xF5F7A8", Offset = "0xF5F7A8", VA = "0xF5F7A8")]
	public void Hide()
	{
	}

	[Token(Token = "0x6000CBE")]
	[Address(RVA = "0xF5F718", Offset = "0xF5F718", VA = "0xF5F718")]
	[IteratorStateMachine(typeof(<WaitForAnimation>d__8))]
	private IEnumerator WaitForAnimation(Animation anim, UnityAction onAnimationComplete)
	{
		return null;
	}

	[Token(Token = "0x6000CBF")]
	[Address(RVA = "0xF5F7F4", Offset = "0xF5F7F4", VA = "0xF5F7F4")]
	public ReadySetGo()
	{
	}
}
[Token(Token = "0x200021C")]
public class ResetTransform : MonoBehaviour
{
	[Token(Token = "0x4000AA8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Vector3 initPosition;

	[Token(Token = "0x4000AA9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Quaternion initRotation;

	[Token(Token = "0x4000AAA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private bool initialise;

	[Token(Token = "0x6000CC7")]
	[Address(RVA = "0xF5F970", Offset = "0xF5F970", VA = "0xF5F970")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000CC8")]
	[Address(RVA = "0xF5F9C8", Offset = "0xF5F9C8", VA = "0xF5F9C8")]
	public void Reset()
	{
	}

	[Token(Token = "0x6000CC9")]
	[Address(RVA = "0xF5FA28", Offset = "0xF5FA28", VA = "0xF5FA28")]
	public ResetTransform()
	{
	}
}
[Token(Token = "0x200021D")]
public class Rotator : MonoBehaviour
{
	[Token(Token = "0x4000AAB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float speed;

	[Token(Token = "0x4000AAC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float speedModifier;

	[Token(Token = "0x4000AAD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Vector3 rotationAxis;

	[Token(Token = "0x4000AAE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float currentSpeed;

	[Token(Token = "0x6000CCA")]
	[Address(RVA = "0xF5FA30", Offset = "0xF5FA30", VA = "0xF5FA30")]
	private void Update()
	{
	}

	[Token(Token = "0x6000CCB")]
	[Address(RVA = "0xF5FAF4", Offset = "0xF5FAF4", VA = "0xF5FAF4")]
	public Rotator()
	{
	}
}
[Token(Token = "0x200021E")]
public class SaveMeshFilter2Folder : MonoBehaviour
{
	[Token(Token = "0x4000AAF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string saveMeshesFolder;

	[Token(Token = "0x6000CCC")]
	[Address(RVA = "0xF5FAFC", Offset = "0xF5FAFC", VA = "0xF5FAFC")]
	public SaveMeshFilter2Folder()
	{
	}
}
[Token(Token = "0x200021F")]
public class SceneHide : MonoBehaviour
{
	[Token(Token = "0x4000AB0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool Street;

	[Token(Token = "0x4000AB1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool Hall;

	[Token(Token = "0x4000AB2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	public bool MeetingRoom;

	[Token(Token = "0x4000AB3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B")]
	public bool TellerService;

	[Token(Token = "0x4000AB4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool Office;

	[Token(Token = "0x4000AB5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
	public bool HallDesk;

	[Token(Token = "0x4000AB6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E")]
	public bool OfficeSecondFloor;

	[Token(Token = "0x4000AB7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F")]
	public bool SecondFloor;

	[Token(Token = "0x4000AB8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool JewelsRoom;

	[Token(Token = "0x4000AB9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	public bool BusRoom;

	[Token(Token = "0x4000ABA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x22")]
	public bool SafeRoom;

	[Token(Token = "0x4000ABB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x23")]
	public bool SafeRoomInside;

	[Token(Token = "0x6000CCD")]
	[Address(RVA = "0xF5FB04", Offset = "0xF5FB04", VA = "0xF5FB04")]
	public bool getBool(int sceneId)
	{
		return default(bool);
	}

	[Token(Token = "0x6000CCE")]
	[Address(RVA = "0xF5FB98", Offset = "0xF5FB98", VA = "0xF5FB98")]
	public SceneHide()
	{
	}
}
[Token(Token = "0x2000220")]
public static class ScoreManager
{
	[StructLayout(3)]
	[Token(Token = "0x2000222")]
	[CompilerGenerated]
	private struct <SaveScore2>d__47 : IAsyncStateMachine
	{
		[Token(Token = "0x4000ADE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int <>1__state;

		[Token(Token = "0x4000ADF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public AsyncVoidMethodBuilder <>t__builder;

		[Token(Token = "0x4000AE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private TaskAwaiter<bool> <>u__1;

		[Token(Token = "0x6000D02")]
		[Address(RVA = "0xF6392C", Offset = "0xF6392C", VA = "0xF6392C", Slot = "4")]
		private void MoveNext()
		{
		}

		[Token(Token = "0x6000D03")]
		[Address(RVA = "0xF63BBC", Offset = "0xF63BBC", VA = "0xF63BBC", Slot = "5")]
		[DebuggerHidden]
		private void SetStateMachine(IAsyncStateMachine stateMachine)
		{
		}
	}

	[StructLayout(3)]
	[Token(Token = "0x2000223")]
	[CompilerGenerated]
	private struct <SaveRoundResult>d__48 : IAsyncStateMachine
	{
		[Token(Token = "0x4000AE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int <>1__state;

		[Token(Token = "0x4000AE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public AsyncTaskMethodBuilder<ServerService.AddRoundResultResponse> <>t__builder;

		[Token(Token = "0x4000AE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CrisisVRigade2_LoadSaveData.GameStatsData gameScore;

		[Token(Token = "0x4000AE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool loadResults;

		[Token(Token = "0x4000AE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private TaskAwaiter<ServerService.AddRoundResultResponse> <>u__1;

		[Token(Token = "0x6000D04")]
		[Address(RVA = "0xF63BC8", Offset = "0xF63BC8", VA = "0xF63BC8", Slot = "4")]
		private void MoveNext()
		{
		}

		[Token(Token = "0x6000D05")]
		[Address(RVA = "0xF641B8", Offset = "0xF641B8", VA = "0xF641B8", Slot = "5")]
		[DebuggerHidden]
		private void SetStateMachine(IAsyncStateMachine stateMachine)
		{
		}
	}

	[Token(Token = "0x4000ABC")]
	private const int ENEMY_DEAD = 120;

	[Token(Token = "0x4000ABD")]
	private const int TEAMMATE_DEAD = -10;

	[Token(Token = "0x4000ABE")]
	private const int HOSTAGE_DEAD = -50;

	[Token(Token = "0x4000ABF")]
	private const int HOSTAGE_SAVED = 250;

	[Token(Token = "0x4000AC0")]
	private const int FRIENDLY_FIRE = -1000;

	[Token(Token = "0x4000AC1")]
	private const int LOCATION_COMPLETE = 250;

	[Token(Token = "0x4000AC2")]
	private const int USED_BULLET = -1;

	[Token(Token = "0x4000AC3")]
	private const int MISSION_ACCOMPLISHED = 10000;

	[Token(Token = "0x4000AC4")]
	private const int TIME_MAX_POINTS = 5000;

	[Token(Token = "0x4000AC5")]
	private const int TIME_ATTACK_MAX_POINTS = 1000;

	[Token(Token = "0x4000AC6")]
	private const int PLAYER_HIT = -500;

	[Token(Token = "0x4000AC7")]
	private const int BODY_MULTIPLIER = 2;

	[Token(Token = "0x4000AC8")]
	private const int HEADSHOT_MULTIPLIER = 5;

	[Token(Token = "0x4000AC9")]
	private const float DIFFICULTY_BASE_MULTIPLIER = 0.5f;

	[Token(Token = "0x4000ACA")]
	private const float DIFFICULTY_CADET_MULTIPLIER = 0.75f;

	[Token(Token = "0x4000ACB")]
	private const float DIFFICULTY_VETERAN_MULTIPLIER = 1f;

	[Token(Token = "0x4000ACC")]
	private const float DIFFICULTY_HELL_MULTIPLIER = 3f;

	[Token(Token = "0x4000ACD")]
	private const float TIMEATTACK_ENEMYDEAD_SECONDS = 1f;

	[Token(Token = "0x4000ACE")]
	private const float TIMEATTACK_ENEMYDEAD_HEADMULTIPLIER = 5f;

	[Token(Token = "0x4000ACF")]
	private const float TIMEATTACK_ENEMYDEAD_BODYMULTIPLIER = 2f;

	[Token(Token = "0x4000AD0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static CrisisVRigade2_LoadSaveData.GameStatsData gameScore;

	[Token(Token = "0x4000AD1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static Dictionary<WeaponModel, CrisisVRigade2_LoadSaveData.WeaponStatsData> weaponStats;

	[Token(Token = "0x4000AD2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static string currentMission;

	[Token(Token = "0x4000AD3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static bool inGame;

	[Token(Token = "0x4000AD4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	private static bool scoreEnable;

	[Token(Token = "0x4000AD5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	private static bool newRecord;

	[Token(Token = "0x4000AD6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B")]
	private static bool newLevelAccomplished;

	[Token(Token = "0x4000AD7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public static int MAX_GAME_STATS;

	[Token(Token = "0x4000AD8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public static SumalabEvent RemoteScoreUpdated;

	[Token(Token = "0x4000AD9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private static float lastEnemyDead;

	[Token(Token = "0x4000ADA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private static int consecutiveDeads;

	[Token(Token = "0x4000ADB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private static int lastBulletUsed;

	[Token(Token = "0x6000CCF")]
	[Address(RVA = "0xF5FBA0", Offset = "0xF5FBA0", VA = "0xF5FBA0")]
	public static void StartScore()
	{
	}

	[Token(Token = "0x6000CD0")]
	[Address(RVA = "0xF60058", Offset = "0xF60058", VA = "0xF60058")]
	private static int GetCombo()
	{
		return default(int);
	}

	[Token(Token = "0x6000CD1")]
	[Address(RVA = "0xF60234", Offset = "0xF60234", VA = "0xF60234")]
	public static void AddTimeAttackScore()
	{
	}

	[Token(Token = "0x6000CD2")]
	[Address(RVA = "0xF604C8", Offset = "0xF604C8", VA = "0xF604C8")]
	public static void FinishScore(bool missionAccomplished)
	{
	}

	[Token(Token = "0x6000CD3")]
	[Address(RVA = "0xF618A0", Offset = "0xF618A0", VA = "0xF618A0")]
	public static void UpdateRemoteScore(int successBullets, int usedBullets, int score, int friendlyFire, int enemyDeads, int enemyHeadshots, int hitsReceived)
	{
	}

	[Token(Token = "0x6000CD4")]
	[Address(RVA = "0xF61958", Offset = "0xF61958", VA = "0xF61958")]
	public static void ResumeScoring()
	{
	}

	[Token(Token = "0x6000CD5")]
	[Address(RVA = "0xF619B4", Offset = "0xF619B4", VA = "0xF619B4")]
	public static void PauseScoring()
	{
	}

	[Token(Token = "0x6000CD6")]
	[Address(RVA = "0xF61C58", Offset = "0xF61C58", VA = "0xF61C58")]
	public static bool IsScoreEnabled()
	{
		return default(bool);
	}

	[Token(Token = "0x6000CD7")]
	[Address(RVA = "0xF61CB0", Offset = "0xF61CB0", VA = "0xF61CB0")]
	public static bool IsNewRecord()
	{
		return default(bool);
	}

	[Token(Token = "0x6000CD8")]
	[Address(RVA = "0xF61D08", Offset = "0xF61D08", VA = "0xF61D08")]
	public static bool IsNewLevelAccomplished()
	{
		return default(bool);
	}

	[Token(Token = "0x6000CD9")]
	[Address(RVA = "0xF61D60", Offset = "0xF61D60", VA = "0xF61D60")]
	public static bool IsMissionAccomplished()
	{
		return default(bool);
	}

	[Token(Token = "0x6000CDA")]
	[Address(RVA = "0xF60300", Offset = "0xF60300", VA = "0xF60300")]
	private static int AddScore(int score)
	{
		return default(int);
	}

	[Token(Token = "0x6000CDB")]
	[Address(RVA = "0xF61E98", Offset = "0xF61E98", VA = "0xF61E98")]
	public static void SetScore(int score)
	{
	}

	[Token(Token = "0x6000CDC")]
	[Address(RVA = "0xF61DC4", Offset = "0xF61DC4", VA = "0xF61DC4")]
	private static float getDifficultyMultiplier()
	{
		return default(float);
	}

	[Token(Token = "0x6000CDD")]
	[Address(RVA = "0xF60A68", Offset = "0xF60A68", VA = "0xF60A68")]
	private static void SaveScore()
	{
	}

	[Token(Token = "0x6000CDE")]
	[Address(RVA = "0xF62354", Offset = "0xF62354", VA = "0xF62354")]
	[AsyncStateMachine(typeof(<SaveScore2>d__47))]
	private static void SaveScore2()
	{
	}

	[Token(Token = "0x6000CDF")]
	[Address(RVA = "0xF623EC", Offset = "0xF623EC", VA = "0xF623EC")]
	[AsyncStateMachine(typeof(<SaveRoundResult>d__48))]
	public static Task<ServerService.AddRoundResultResponse> SaveRoundResult(CrisisVRigade2_LoadSaveData.GameStatsData gameScore, bool loadResults = false)
	{
		return null;
	}

	[Token(Token = "0x6000CE0")]
	[Address(RVA = "0xF61F64", Offset = "0xF61F64", VA = "0xF61F64")]
	private static bool AllBonusWeaponsUsed(ICollection<WeaponModel> weapons)
	{
		return default(bool);
	}

	[Token(Token = "0x6000CE1")]
	[Address(RVA = "0xF6250C", Offset = "0xF6250C", VA = "0xF6250C")]
	public static void AddTeammateDead()
	{
	}

	[Token(Token = "0x6000CE2")]
	[Address(RVA = "0xF6259C", Offset = "0xF6259C", VA = "0xF6259C")]
	public static void AddHostageSaved()
	{
	}

	[Token(Token = "0x6000CE3")]
	[Address(RVA = "0xF6262C", Offset = "0xF6262C", VA = "0xF6262C")]
	public static void AddHostageDead()
	{
	}

	[Token(Token = "0x6000CE4")]
	[Address(RVA = "0xF626BC", Offset = "0xF626BC", VA = "0xF626BC")]
	public static void AddFriendlyFire(Transform parent, string boneTag)
	{
	}

	[Token(Token = "0x6000CE5")]
	[Address(RVA = "0xF62818", Offset = "0xF62818", VA = "0xF62818")]
	public static void AddEnemyDead(Transform parent, string boneTag, bool bIsPlayerBullet)
	{
	}

	[Token(Token = "0x6000CE6")]
	[Address(RVA = "0xF5C088", Offset = "0xF5C088", VA = "0xF5C088")]
	public static void AddHitReceived()
	{
	}

	[Token(Token = "0x6000CE7")]
	[Address(RVA = "0xF5C548", Offset = "0xF5C548", VA = "0xF5C548")]
	public static void AddUsedBullet(bool hit, WeaponModel weaponModel)
	{
	}

	[Token(Token = "0x6000CE8")]
	[Address(RVA = "0xF62F14", Offset = "0xF62F14", VA = "0xF62F14")]
	public static void SetTotalLocations(int totalLocations)
	{
	}

	[Token(Token = "0x6000CE9")]
	[Address(RVA = "0xF62F7C", Offset = "0xF62F7C", VA = "0xF62F7C")]
	public static void SetDifficulty(int difficulty)
	{
	}

	[Token(Token = "0x6000CEA")]
	[Address(RVA = "0xF62FE4", Offset = "0xF62FE4", VA = "0xF62FE4")]
	public static void SetMission(string mission)
	{
	}

	[Token(Token = "0x6000CEB")]
	[Address(RVA = "0xF63044", Offset = "0xF63044", VA = "0xF63044")]
	public static void AddLocationComplete()
	{
	}

	[Token(Token = "0x6000CEC")]
	[Address(RVA = "0xF630E0", Offset = "0xF630E0", VA = "0xF630E0")]
	public static int GetTeammateDeads()
	{
		return default(int);
	}

	[Token(Token = "0x6000CED")]
	[Address(RVA = "0xF63144", Offset = "0xF63144", VA = "0xF63144")]
	public static int GetHostagesSaved()
	{
		return default(int);
	}

	[Token(Token = "0x6000CEE")]
	[Address(RVA = "0xF631A8", Offset = "0xF631A8", VA = "0xF631A8")]
	public static int GetHostageDeads()
	{
		return default(int);
	}

	[Token(Token = "0x6000CEF")]
	[Address(RVA = "0xF6320C", Offset = "0xF6320C", VA = "0xF6320C")]
	public static int GetFriendlyFire()
	{
		return default(int);
	}

	[Token(Token = "0x6000CF0")]
	[Address(RVA = "0xF63270", Offset = "0xF63270", VA = "0xF63270")]
	public static int GetEnemyDeads()
	{
		return default(int);
	}

	[Token(Token = "0x6000CF1")]
	[Address(RVA = "0xF632D4", Offset = "0xF632D4", VA = "0xF632D4")]
	public static int GetEnemyHeadshots()
	{
		return default(int);
	}

	[Token(Token = "0x6000CF2")]
	[Address(RVA = "0xF63338", Offset = "0xF63338", VA = "0xF63338")]
	public static int GetHitsReceived()
	{
		return default(int);
	}

	[Token(Token = "0x6000CF3")]
	[Address(RVA = "0xF61F00", Offset = "0xF61F00", VA = "0xF61F00")]
	public static int GetSuccessBullets()
	{
		return default(int);
	}

	[Token(Token = "0x6000CF4")]
	[Address(RVA = "0xF601D0", Offset = "0xF601D0", VA = "0xF601D0")]
	public static int GetUsedBullets()
	{
		return default(int);
	}

	[Token(Token = "0x6000CF5")]
	[Address(RVA = "0xF6339C", Offset = "0xF6339C", VA = "0xF6339C")]
	public static int GetLocationsCompleted()
	{
		return default(int);
	}

	[Token(Token = "0x6000CF6")]
	[Address(RVA = "0xF63400", Offset = "0xF63400", VA = "0xF63400")]
	public static int GetTotalLocations()
	{
		return default(int);
	}

	[Token(Token = "0x6000CF7")]
	[Address(RVA = "0xF63464", Offset = "0xF63464", VA = "0xF63464")]
	public static float GetTimePlayed()
	{
		return default(float);
	}

	[Token(Token = "0x6000CF8")]
	[Address(RVA = "0xF634C8", Offset = "0xF634C8", VA = "0xF634C8")]
	public static int GetDifficulty()
	{
		return default(int);
	}

	[Token(Token = "0x6000CF9")]
	[Address(RVA = "0xF6352C", Offset = "0xF6352C", VA = "0xF6352C")]
	public static int GetTotalScore()
	{
		return default(int);
	}

	[Token(Token = "0x6000CFA")]
	[Address(RVA = "0xF635C4", Offset = "0xF635C4", VA = "0xF635C4")]
	public static int GetScore()
	{
		return default(int);
	}

	[Token(Token = "0x6000CFB")]
	[Address(RVA = "0xF63628", Offset = "0xF63628", VA = "0xF63628")]
	public static string GetMission()
	{
		return null;
	}

	[Token(Token = "0x6000CFC")]
	[Address(RVA = "0xF63680", Offset = "0xF63680", VA = "0xF63680")]
	public static string GetDate()
	{
		return null;
	}

	[Token(Token = "0x6000CFD")]
	[Address(RVA = "0xF636E4", Offset = "0xF636E4", VA = "0xF636E4")]
	public static CrisisVRigade2_LoadSaveData.GameStatsData GetGameStats()
	{
		return null;
	}
}
[Token(Token = "0x2000224")]
public class GameStatsComparer : IComparer<CrisisVRigade2_LoadSaveData.GameStatsData>
{
	[Token(Token = "0x6000D06")]
	[Address(RVA = "0xF64210", Offset = "0xF64210", VA = "0xF64210", Slot = "4")]
	public int Compare(CrisisVRigade2_LoadSaveData.GameStatsData x, CrisisVRigade2_LoadSaveData.GameStatsData y)
	{
		return default(int);
	}

	[Token(Token = "0x6000D07")]
	[Address(RVA = "0xF61C50", Offset = "0xF61C50", VA = "0xF61C50")]
	public GameStatsComparer()
	{
	}
}
[Token(Token = "0x2000225")]
public class SetPlayerForTesting : MonoBehaviour
{
	[Token(Token = "0x4000AE6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform recenterTransform;

	[Token(Token = "0x6000D08")]
	[Address(RVA = "0xF6423C", Offset = "0xF6423C", VA = "0xF6423C")]
	public void Start()
	{
	}

	[Token(Token = "0x6000D09")]
	[Address(RVA = "0xF642A8", Offset = "0xF642A8", VA = "0xF642A8")]
	public SetPlayerForTesting()
	{
	}
}
[Token(Token = "0x2000226")]
public class ButtonConfig : UIButton
{
	[Token(Token = "0x4000AE7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public ButtonMappingData mapping0;

	[Token(Token = "0x4000AE8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public ButtonMappingData mapping1;

	[Token(Token = "0x4000AE9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private bool locked;

	[Token(Token = "0x4000AEA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD1")]
	private bool isOn;

	[Token(Token = "0x6000D0A")]
	[Address(RVA = "0xF642B0", Offset = "0xF642B0", VA = "0xF642B0")]
	public void init(int config)
	{
	}

	[Token(Token = "0x6000D0B")]
	[Address(RVA = "0xF643A0", Offset = "0xF643A0", VA = "0xF643A0", Slot = "4")]
	public override bool OnHit(Bullet bullet, Ray ray, RaycastHit hit)
	{
		return default(bool);
	}

	[Token(Token = "0x6000D0C")]
	[Address(RVA = "0xF64500", Offset = "0xF64500", VA = "0xF64500")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000D0D")]
	[Address(RVA = "0xF64540", Offset = "0xF64540", VA = "0xF64540")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000D0E")]
	[Address(RVA = "0xF642BC", Offset = "0xF642BC", VA = "0xF642BC")]
	private void setConfig0()
	{
	}

	[Token(Token = "0x6000D0F")]
	[Address(RVA = "0xF6432C", Offset = "0xF6432C", VA = "0xF6432C")]
	private void setConfig1()
	{
	}

	[Token(Token = "0x6000D10")]
	[Address(RVA = "0xF645C4", Offset = "0xF645C4", VA = "0xF645C4")]
	public int getConfig()
	{
		return default(int);
	}

	[Token(Token = "0x6000D11")]
	[Address(RVA = "0xF645CC", Offset = "0xF645CC", VA = "0xF645CC")]
	public ButtonConfig()
	{
	}
}
[Token(Token = "0x2000227")]
public class ButtonSettings : MonoBehaviour
{
	[Token(Token = "0x6000D13")]
	[Address(RVA = "0xF645DC", Offset = "0xF645DC", VA = "0xF645DC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000D14")]
	[Address(RVA = "0xF645E0", Offset = "0xF645E0", VA = "0xF645E0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000D15")]
	[Address(RVA = "0xF645E4", Offset = "0xF645E4", VA = "0xF645E4")]
	public ButtonSettings()
	{
	}
}
[Token(Token = "0x2000228")]
public class CrisisVRigade2_PersistentData : MonoBehaviour
{
	[Token(Token = "0x4000AEB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static bool initialized;

	[Token(Token = "0x4000AEC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static ButtonMappingData ButtonMapping;

	[Token(Token = "0x4000AED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static float padRotationXOffset;

	[Token(Token = "0x4000AEE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public static float PlayerHeight;

	[Token(Token = "0x4000AEF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static float DeltaPlayerHeight;

	[Token(Token = "0x4000AF0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public static bool RightHand;

	[Token(Token = "0x4000AF1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
	public static bool AimControllerLeftHanded;

	[Token(Token = "0x4000AF2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E")]
	public static bool WeaponAutoReloadPlayerPreference;

	[Token(Token = "0x4000AF3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F")]
	public static bool AutoAim;

	[Token(Token = "0x4000AF4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public static bool DangerIndicators;

	[Token(Token = "0x4000AF5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public static int LimitedAmmo;

	[Token(Token = "0x6000D16")]
	[Address(RVA = "0xF645EC", Offset = "0xF645EC", VA = "0xF645EC")]
	public static void SavePersistentData()
	{
	}

	[Token(Token = "0x6000D17")]
	[Address(RVA = "0xF6479C", Offset = "0xF6479C", VA = "0xF6479C")]
	public static void LoadPersistentData()
	{
	}

	[Token(Token = "0x6000D18")]
	[Address(RVA = "0xF64A9C", Offset = "0xF64A9C", VA = "0xF64A9C")]
	public CrisisVRigade2_PersistentData()
	{
	}
}
[Token(Token = "0x2000229")]
public class DifficultySelector : UIToggle
{
	[Token(Token = "0x4000AF6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public string currentDificulty;

	[Token(Token = "0x6000D1A")]
	[Address(RVA = "0xF5838C", Offset = "0xF5838C", VA = "0xF5838C")]
	public static DifficultySelector getInstance()
	{
		return null;
	}

	[Token(Token = "0x6000D1B")]
	[Address(RVA = "0xF64B00", Offset = "0xF64B00", VA = "0xF64B00")]
	private void Start()
	{
	}

	[Token(Token = "0x6000D1C")]
	[Address(RVA = "0xF650A0", Offset = "0xF650A0", VA = "0xF650A0")]
	public void DebugUnlockHellMode()
	{
	}

	[Token(Token = "0x6000D1D")]
	[Address(RVA = "0xF650A4", Offset = "0xF650A4", VA = "0xF650A4")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000D1E")]
	[Address(RVA = "0xF65110", Offset = "0xF65110", VA = "0xF65110", Slot = "6")]
	protected override void ButtonPressed(UIButton button)
	{
	}

	[Token(Token = "0x6000D1F")]
	[Address(RVA = "0xF65218", Offset = "0xF65218", VA = "0xF65218")]
	public void changeDifficulty(string command, bool bForce = true)
	{
	}

	[Token(Token = "0x6000D20")]
	[Address(RVA = "0xF64F0C", Offset = "0xF64F0C", VA = "0xF64F0C")]
	private void buttonPressedImpl(UIButton button)
	{
	}

	[Token(Token = "0x6000D21")]
	[Address(RVA = "0xF64CC8", Offset = "0xF64CC8", VA = "0xF64CC8")]
	private bool IsHellModeAvailable()
	{
		return default(bool);
	}

	[Token(Token = "0x6000D22")]
	[Address(RVA = "0xF652E4", Offset = "0xF652E4", VA = "0xF652E4")]
	public DifficultySelector()
	{
	}
}
[Token(Token = "0x200022A")]
public class LocalizationSettings : UIButton
{
	[Token(Token = "0x4000AF7")]
	private const string ENGLISH = "settings_english";

	[Token(Token = "0x4000AF8")]
	private const string SPANISH = "settings_spanish";

	[Token(Token = "0x4000AF9")]
	private const string CHINESE = "settings_chinese";

	[Token(Token = "0x4000AFA")]
	private const string JAPANESE = "settings_japanese";

	[Token(Token = "0x4000AFB")]
	private const string KOREAN = "settings_korean";

	[Token(Token = "0x4000AFC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private bool locked;

	[Token(Token = "0x4000AFD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC1")]
	private bool isFront;

	[Token(Token = "0x4000AFE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private TextMeshPro front;

	[Token(Token = "0x4000AFF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private TextMeshPro back;

	[Token(Token = "0x6000D23")]
	[Address(RVA = "0xF652EC", Offset = "0xF652EC", VA = "0xF652EC")]
	public void init()
	{
	}

	[Token(Token = "0x6000D24")]
	[Address(RVA = "0xF65674", Offset = "0xF65674", VA = "0xF65674")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000D25")]
	[Address(RVA = "0xF65724", Offset = "0xF65724", VA = "0xF65724", Slot = "4")]
	public override bool OnHit(Bullet bullet, Ray ray, RaycastHit hit)
	{
		return default(bool);
	}

	[Token(Token = "0x6000D26")]
	[Address(RVA = "0xF658BC", Offset = "0xF658BC", VA = "0xF658BC")]
	public LocalizationManager.Language getLanguage()
	{
		return default(LocalizationManager.Language);
	}

	[Token(Token = "0x6000D27")]
	[Address(RVA = "0xF6553C", Offset = "0xF6553C", VA = "0xF6553C")]
	private void UpdateText()
	{
	}

	[Token(Token = "0x6000D28")]
	[Address(RVA = "0xF65910", Offset = "0xF65910", VA = "0xF65910")]
	public LocalizationSettings()
	{
	}
}
[Token(Token = "0x200022B")]
public class MissionButton : UIButton, ISVRLaserPointable
{
	[Token(Token = "0x4000B00")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public string missionName;

	[Token(Token = "0x4000B01")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public string missionBaseScene;

	[Token(Token = "0x4000B02")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private Animator anim;

	[Token(Token = "0x6000D2A")]
	[Address(RVA = "0xF65928", Offset = "0xF65928", VA = "0xF65928", Slot = "11")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x6000D2B")]
	[Address(RVA = "0xF6598C", Offset = "0xF6598C", VA = "0xF6598C", Slot = "4")]
	public override bool OnHit(Bullet bullet, Ray ray, RaycastHit hit)
	{
		return default(bool);
	}

	[Token(Token = "0x6000D2C")]
	[Address(RVA = "0xF65D58", Offset = "0xF65D58", VA = "0xF65D58", Slot = "16")]
	public override bool OnHoverEnter(SVRLaserPointer pointer)
	{
		return default(bool);
	}

	[Token(Token = "0x6000D2D")]
	[Address(RVA = "0xF65DD4", Offset = "0xF65DD4", VA = "0xF65DD4", Slot = "17")]
	public override bool OnHoverExit(SVRLaserPointer pointer)
	{
		return default(bool);
	}

	[Token(Token = "0x6000D2E")]
	[Address(RVA = "0xF65E58", Offset = "0xF65E58", VA = "0xF65E58", Slot = "15")]
	protected override void setButtonSelected(bool enabled)
	{
	}

	[Token(Token = "0x6000D2F")]
	[Address(RVA = "0xF65F30", Offset = "0xF65F30", VA = "0xF65F30")]
	public MissionButton()
	{
	}
}
[Token(Token = "0x200022C")]
public class MissionSelector : UIToggle
{
	[Token(Token = "0x4000B03")]
	public const int CHALLENGE_HEADSHOTS = 300;

	[Token(Token = "0x4000B04")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public MissionButton missionSelected;

	[Token(Token = "0x4000B05")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public int levelUnlock;

	[Token(Token = "0x4000B06")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private LocalizedText challenge3_headshotsText;

	[Token(Token = "0x4000B07")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private int challenge3_headshots;

	[Token(Token = "0x6000D30")]
	[Address(RVA = "0xF5831C", Offset = "0xF5831C", VA = "0xF5831C")]
	public static MissionSelector getInstance()
	{
		return null;
	}

	[Token(Token = "0x6000D31")]
	[Address(RVA = "0xF65F38", Offset = "0xF65F38", VA = "0xF65F38")]
	public void Start()
	{
	}

	[Token(Token = "0x6000D32")]
	[Address(RVA = "0xF66FD4", Offset = "0xF66FD4", VA = "0xF66FD4")]
	public void DebugUnlockMissions()
	{
	}

	[Token(Token = "0x6000D33")]
	[Address(RVA = "0xF66FD8", Offset = "0xF66FD8", VA = "0xF66FD8")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000D34")]
	[Address(RVA = "0xF6697C", Offset = "0xF6697C", VA = "0xF6697C")]
	private CrisisVRigade2_LoadSaveData.MissionStatsData GetMissionStats(string missionName)
	{
		return null;
	}

	[Token(Token = "0x6000D35")]
	[Address(RVA = "0xF66C64", Offset = "0xF66C64", VA = "0xF66C64")]
	private bool IsStoryModeCompleted()
	{
		return default(bool);
	}

	[Token(Token = "0x6000D36")]
	[Address(RVA = "0xF67148", Offset = "0xF67148", VA = "0xF67148")]
	public void init(int levelUnlock)
	{
	}

	[Token(Token = "0x6000D37")]
	[Address(RVA = "0xF67170", Offset = "0xF67170", VA = "0xF67170", Slot = "6")]
	protected override void ButtonPressed(UIButton button)
	{
	}

	[Token(Token = "0x6000D38")]
	[Address(RVA = "0xF66EB8", Offset = "0xF66EB8", VA = "0xF66EB8")]
	private void buttonPressedImpl(UIButton button)
	{
	}

	[Token(Token = "0x6000D39")]
	[Address(RVA = "0xF67314", Offset = "0xF67314", VA = "0xF67314")]
	private int getMissionIndex(UIButton button)
	{
		return default(int);
	}

	[Token(Token = "0x6000D3A")]
	[Address(RVA = "0xF673C8", Offset = "0xF673C8", VA = "0xF673C8")]
	private MissionButton getMissionButton(int index)
	{
		return null;
	}

	[Token(Token = "0x6000D3B")]
	[Address(RVA = "0xF67464", Offset = "0xF67464", VA = "0xF67464")]
	public MissionButton getMissionSelected()
	{
		return null;
	}

	[Token(Token = "0x6000D3C")]
	[Address(RVA = "0xF58384", Offset = "0xF58384", VA = "0xF58384")]
	public int getMissionSelectedIndex()
	{
		return default(int);
	}

	[Token(Token = "0x6000D3D")]
	[Address(RVA = "0xF6746C", Offset = "0xF6746C", VA = "0xF6746C")]
	public bool ContainsMission(string missionName)
	{
		return default(bool);
	}

	[Token(Token = "0x6000D3E")]
	[Address(RVA = "0xF592FC", Offset = "0xF592FC", VA = "0xF592FC")]
	public void changeMission(int iMission, bool bForce = true)
	{
	}

	[Token(Token = "0x6000D3F")]
	[Address(RVA = "0xF67594", Offset = "0xF67594", VA = "0xF67594")]
	private void onDisconnected(DisconnectCause cause)
	{
	}

	[Token(Token = "0x6000D40")]
	[Address(RVA = "0xF675E0", Offset = "0xF675E0", VA = "0xF675E0")]
	private void WalkieTalkieCommunication()
	{
	}

	[Token(Token = "0x6000D41")]
	[Address(RVA = "0xF6780C", Offset = "0xF6780C", VA = "0xF6780C")]
	private void UpdateButtons()
	{
	}

	[Token(Token = "0x6000D42")]
	[Address(RVA = "0xF66B20", Offset = "0xF66B20", VA = "0xF66B20")]
	private void OnLocalizedTextChanged()
	{
	}

	[Token(Token = "0x6000D43")]
	[Address(RVA = "0xF67878", Offset = "0xF67878", VA = "0xF67878")]
	public MissionSelector()
	{
	}
}
[Token(Token = "0x200022D")]
public class MissionSelectorManager : MonoBehaviour
{
	[Token(Token = "0x6000D44")]
	[Address(RVA = "0xF67880", Offset = "0xF67880", VA = "0xF67880")]
	private void Start()
	{
	}

	[Token(Token = "0x6000D45")]
	[Address(RVA = "0xF67928", Offset = "0xF67928", VA = "0xF67928")]
	private void InitMissionSelector()
	{
	}

	[Token(Token = "0x6000D46")]
	[Address(RVA = "0xF67B10", Offset = "0xF67B10", VA = "0xF67B10")]
	private void ActivateTimeAttackMode()
	{
	}

	[Token(Token = "0x6000D47")]
	[Address(RVA = "0xF67B68", Offset = "0xF67B68", VA = "0xF67B68")]
	private void ActivateChallengeMode()
	{
	}

	[Token(Token = "0x6000D48")]
	[Address(RVA = "0xF67BC0", Offset = "0xF67BC0", VA = "0xF67BC0")]
	public MissionSelectorManager()
	{
	}
}
[Token(Token = "0x200022E")]
public class ModalDialog : MonoBehaviour
{
	[Token(Token = "0x200022F")]
	public enum Opts
	{
		[Token(Token = "0x4000B0D")]
		Ok,
		[Token(Token = "0x4000B0E")]
		Cancel,
		[Token(Token = "0x4000B0F")]
		OkCancel
	}

	[Token(Token = "0x4000B08")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TextMeshPro[] messages;

	[Token(Token = "0x4000B09")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public UIButton okButton;

	[Token(Token = "0x4000B0A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public UIButton cancelButton;

	[Token(Token = "0x4000B0B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Action<Opts> onComplete;

	[Token(Token = "0x6000D49")]
	[Address(RVA = "0xF67BC8", Offset = "0xF67BC8", VA = "0xF67BC8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000D4A")]
	[Address(RVA = "0xF67CA8", Offset = "0xF67CA8", VA = "0xF67CA8")]
	public void ShowModalDialog(string[] messages, Opts buttonOpts, [Optional] Action<Opts> onComplete)
	{
	}

	[Token(Token = "0x6000D4B")]
	[Address(RVA = "0xF67E60", Offset = "0xF67E60", VA = "0xF67E60")]
	public void SetOkButtonText(string text)
	{
	}

	[Token(Token = "0x6000D4C")]
	[Address(RVA = "0xF67E8C", Offset = "0xF67E8C", VA = "0xF67E8C")]
	public void SetCancelButtonText(string text)
	{
	}

	[Token(Token = "0x6000D4D")]
	[Address(RVA = "0xF67EB8", Offset = "0xF67EB8", VA = "0xF67EB8")]
	public void Hide()
	{
	}

	[Token(Token = "0x6000D4E")]
	[Address(RVA = "0xF67EF0", Offset = "0xF67EF0", VA = "0xF67EF0")]
	public bool IsOpen()
	{
		return default(bool);
	}

	[Token(Token = "0x6000D4F")]
	[Address(RVA = "0xF67F10", Offset = "0xF67F10", VA = "0xF67F10")]
	private void OkButton()
	{
	}

	[Token(Token = "0x6000D50")]
	[Address(RVA = "0xF67F58", Offset = "0xF67F58", VA = "0xF67F58")]
	private void CancelButton()
	{
	}

	[Token(Token = "0x6000D51")]
	[Address(RVA = "0xF67FA0", Offset = "0xF67FA0", VA = "0xF67FA0")]
	public ModalDialog()
	{
	}
}
[Token(Token = "0x2000230")]
public class PadRotation : MonoBehaviour
{
	[Token(Token = "0x4000B10")]
	private const float DELTA_ROTATION = 1f;

	[Token(Token = "0x4000B11")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float maxRotation;

	[Token(Token = "0x4000B12")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private float minRotation;

	[Token(Token = "0x4000B13")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public UIButton upRotation;

	[Token(Token = "0x4000B14")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public UIButton downRotation;

	[Token(Token = "0x4000B15")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public UIButton resetRotation;

	[Token(Token = "0x4000B16")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public TextMeshPro rotationText;

	[Token(Token = "0x6000D52")]
	[Address(RVA = "0xF67FA8", Offset = "0xF67FA8", VA = "0xF67FA8")]
	public void init(float padRotation)
	{
	}

	[Token(Token = "0x6000D53")]
	[Address(RVA = "0xF682F0", Offset = "0xF682F0", VA = "0xF682F0")]
	public float GetPadRotation()
	{
		return default(float);
	}

	[Token(Token = "0x6000D54")]
	[Address(RVA = "0xF68348", Offset = "0xF68348", VA = "0xF68348")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000D55")]
	[Address(RVA = "0xF68474", Offset = "0xF68474", VA = "0xF68474")]
	private void IncreaseRotation()
	{
	}

	[Token(Token = "0x6000D56")]
	[Address(RVA = "0xF68480", Offset = "0xF68480", VA = "0xF68480")]
	private void DecreaseRotation()
	{
	}

	[Token(Token = "0x6000D57")]
	[Address(RVA = "0xF6848C", Offset = "0xF6848C", VA = "0xF6848C")]
	private void ResetRotation()
	{
	}

	[Token(Token = "0x6000D58")]
	[Address(RVA = "0xF680F0", Offset = "0xF680F0", VA = "0xF680F0")]
	private void SetDeltaPadRotation(float padRotation, bool bDelta = false)
	{
	}

	[Token(Token = "0x6000D59")]
	[Address(RVA = "0xF68634", Offset = "0xF68634", VA = "0xF68634")]
	private void UpdateText()
	{
	}

	[Token(Token = "0x6000D5A")]
	[Address(RVA = "0xF68700", Offset = "0xF68700", VA = "0xF68700")]
	public PadRotation()
	{
	}
}
[Token(Token = "0x2000231")]
public class PhysicalButton : UIButton
{
	[Token(Token = "0x4000B17")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private bool bWaitingForPlayers;

	[Token(Token = "0x4000B18")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC1")]
	private bool bRotating;

	[Token(Token = "0x4000B19")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static float ROTATE_ANIMATION_TIME;

	[Token(Token = "0x6000D5B")]
	[Address(RVA = "0xF68714", Offset = "0xF68714", VA = "0xF68714", Slot = "4")]
	public override bool OnHit(Bullet bullet, Ray ray, RaycastHit hit)
	{
		return default(bool);
	}

	[Token(Token = "0x6000D5C")]
	[Address(RVA = "0xF6884C", Offset = "0xF6884C", VA = "0xF6884C", Slot = "16")]
	public override bool OnHoverEnter(SVRLaserPointer pointer)
	{
		return default(bool);
	}

	[Token(Token = "0x6000D5D")]
	[Address(RVA = "0xF68854", Offset = "0xF68854", VA = "0xF68854", Slot = "17")]
	public override bool OnHoverExit(SVRLaserPointer pointer)
	{
		return default(bool);
	}

	[Token(Token = "0x6000D5E")]
	[Address(RVA = "0xF6885C", Offset = "0xF6885C", VA = "0xF6885C")]
	public void hideForWaitingPlayers(bool bValue)
	{
	}

	[Token(Token = "0x6000D5F")]
	[Address(RVA = "0xF68C10", Offset = "0xF68C10", VA = "0xF68C10")]
	private void rotateCompletedWait()
	{
	}

	[Token(Token = "0x6000D60")]
	[Address(RVA = "0xF68C84", Offset = "0xF68C84", VA = "0xF68C84")]
	private void rotateCompleted()
	{
	}

	[Token(Token = "0x6000D61")]
	[Address(RVA = "0xF68CF8", Offset = "0xF68CF8", VA = "0xF68CF8")]
	public PhysicalButton()
	{
	}
}
[Token(Token = "0x2000233")]
public class PlayerHeight : MonoBehaviour
{
	[Token(Token = "0x4000B1C")]
	private const float DELTA_HEIGHT = 0.05f;

	[Token(Token = "0x4000B1D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float maxHeight;

	[Token(Token = "0x4000B1E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float minHeight;

	[Token(Token = "0x4000B1F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public UIButton upHeight;

	[Token(Token = "0x4000B20")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public UIButton downHeight;

	[Token(Token = "0x4000B21")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public UIButton resetHeight;

	[Token(Token = "0x6000D65")]
	[Address(RVA = "0xF68D70", Offset = "0xF68D70", VA = "0xF68D70")]
	public void init(float playerHeight)
	{
	}

	[Token(Token = "0x6000D66")]
	[Address(RVA = "0xF69070", Offset = "0xF69070", VA = "0xF69070")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000D67")]
	[Address(RVA = "0xF6919C", Offset = "0xF6919C", VA = "0xF6919C")]
	private void IncreaseHeight()
	{
	}

	[Token(Token = "0x6000D68")]
	[Address(RVA = "0xF69218", Offset = "0xF69218", VA = "0xF69218")]
	private void DecreaseHeight()
	{
	}

	[Token(Token = "0x6000D69")]
	[Address(RVA = "0xF69224", Offset = "0xF69224", VA = "0xF69224")]
	private void ResetHeight()
	{
	}

	[Token(Token = "0x6000D6A")]
	[Address(RVA = "0xF691A8", Offset = "0xF691A8", VA = "0xF691A8")]
	private void setDeltaPlayerHeight(float deltaPlayerHeight)
	{
	}

	[Token(Token = "0x6000D6B")]
	[Address(RVA = "0xF68EB4", Offset = "0xF68EB4", VA = "0xF68EB4")]
	private void setPlayerHeight(float playerHeight)
	{
	}

	[Token(Token = "0x6000D6C")]
	[Address(RVA = "0xF692E0", Offset = "0xF692E0", VA = "0xF692E0")]
	public PlayerHeight()
	{
	}
}
[Token(Token = "0x2000234")]
public class RankingStats : MonoBehaviour
{
	[StructLayout(3)]
	[Token(Token = "0x2000235")]
	[CompilerGenerated]
	private struct <LoadStatsImpl>d__13 : IAsyncStateMachine
	{
		[Token(Token = "0x4000B2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int <>1__state;

		[Token(Token = "0x4000B2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public AsyncVoidMethodBuilder <>t__builder;

		[Token(Token = "0x4000B2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public RankingStats <>4__this;

		[Token(Token = "0x4000B2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private string <missionSelected>5__2;

		[Token(Token = "0x4000B2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private TaskAwaiter<List<ServerService.Round>> <>u__1;

		[Token(Token = "0x6000D75")]
		[Address(RVA = "0xF69930", Offset = "0xF69930", VA = "0xF69930", Slot = "4")]
		private void MoveNext()
		{
		}

		[Token(Token = "0x6000D76")]
		[Address(RVA = "0xF6A9EC", Offset = "0xF6A9EC", VA = "0xF6A9EC", Slot = "5")]
		[DebuggerHidden]
		private void SetStateMachine(IAsyncStateMachine stateMachine)
		{
		}
	}

	[Token(Token = "0x4000B22")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Transform loading;

	[Token(Token = "0x4000B23")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ServerService.Period currentPeriodFilter;

	[Token(Token = "0x4000B24")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private RankingStatsLine[] lines;

	[Token(Token = "0x4000B25")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Transform error;

	[Token(Token = "0x4000B26")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private FilterStatsUIToggle filter;

	[Token(Token = "0x4000B27")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public string mission;

	[Token(Token = "0x4000B28")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public bool localizedDifficulty;

	[Token(Token = "0x4000B29")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
	private bool bLoading;

	[Token(Token = "0x6000D6D")]
	[Address(RVA = "0xF692F4", Offset = "0xF692F4", VA = "0xF692F4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000D6E")]
	[Address(RVA = "0xF695E8", Offset = "0xF695E8", VA = "0xF695E8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000D6F")]
	[Address(RVA = "0xF695EC", Offset = "0xF695EC", VA = "0xF695EC")]
	private void OnFilterStateChanged()
	{
	}

	[Token(Token = "0x6000D70")]
	[Address(RVA = "0xF697B4", Offset = "0xF697B4", VA = "0xF697B4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000D71")]
	[Address(RVA = "0xF695F0", Offset = "0xF695F0", VA = "0xF695F0")]
	public void LoadStats()
	{
	}

	[Token(Token = "0x6000D72")]
	[Address(RVA = "0xF697B8", Offset = "0xF697B8", VA = "0xF697B8")]
	[AsyncStateMachine(typeof(<LoadStatsImpl>d__13))]
	private void LoadStatsImpl()
	{
	}

	[Token(Token = "0x6000D73")]
	[Address(RVA = "0xF6986C", Offset = "0xF6986C", VA = "0xF6986C")]
	public void ShowError()
	{
	}

	[Token(Token = "0x6000D74")]
	[Address(RVA = "0xF69920", Offset = "0xF69920", VA = "0xF69920")]
	public RankingStats()
	{
	}
}
[Token(Token = "0x2000236")]
public class RankingStatsLine : MonoBehaviour
{
	[Token(Token = "0x4000B2F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TextMeshPro position;

	[Token(Token = "0x4000B30")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TextMeshPro username;

	[Token(Token = "0x4000B31")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public TextMeshPro score;

	[Token(Token = "0x4000B32")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public TextMeshPro difficulty;

	[Token(Token = "0x4000B33")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public TextMeshPro date;

	[Token(Token = "0x4000B34")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject selected;

	[Token(Token = "0x6000D77")]
	[Address(RVA = "0xF6A784", Offset = "0xF6A784", VA = "0xF6A784")]
	public void Init()
	{
	}

	[Token(Token = "0x6000D78")]
	[Address(RVA = "0xF6A9F8", Offset = "0xF6A9F8", VA = "0xF6A9F8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000D79")]
	[Address(RVA = "0xF6A9CC", Offset = "0xF6A9CC", VA = "0xF6A9CC")]
	public void SetSelected(bool value)
	{
	}

	[Token(Token = "0x6000D7A")]
	[Address(RVA = "0xF6A9FC", Offset = "0xF6A9FC", VA = "0xF6A9FC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000D7B")]
	[Address(RVA = "0xF6AA00", Offset = "0xF6AA00", VA = "0xF6AA00")]
	public RankingStatsLine()
	{
	}
}
[Token(Token = "0x2000237")]
public class ReloadMode : UIButton
{
	[Token(Token = "0x4000B35")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private bool locked;

	[Token(Token = "0x4000B36")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC1")]
	private bool isManual;

	[Token(Token = "0x6000D7C")]
	[Address(RVA = "0xF6AA08", Offset = "0xF6AA08", VA = "0xF6AA08")]
	public void init(bool autoReload)
	{
	}

	[Token(Token = "0x6000D7D")]
	[Address(RVA = "0xF6AA0C", Offset = "0xF6AA0C", VA = "0xF6AA0C", Slot = "4")]
	public override bool OnHit(Bullet bullet, Ray ray, RaycastHit hit)
	{
		return default(bool);
	}

	[Token(Token = "0x6000D7E")]
	[Address(RVA = "0xF6AB30", Offset = "0xF6AB30", VA = "0xF6AB30")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000D7F")]
	[Address(RVA = "0xF6ACFC", Offset = "0xF6ACFC", VA = "0xF6ACFC")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000D80")]
	[Address(RVA = "0xF6AA80", Offset = "0xF6AA80", VA = "0xF6AA80")]
	private void toggle()
	{
	}

	[Token(Token = "0x6000D81")]
	[Address(RVA = "0xF6AD70", Offset = "0xF6AD70", VA = "0xF6AD70")]
	public bool getReloadType()
	{
		return default(bool);
	}

	[Token(Token = "0x6000D82")]
	[Address(RVA = "0xF6ADC8", Offset = "0xF6ADC8", VA = "0xF6ADC8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000D83")]
	[Address(RVA = "0xF6ABD4", Offset = "0xF6ABD4", VA = "0xF6ABD4")]
	private bool manualReloadAllowed()
	{
		return default(bool);
	}

	[Token(Token = "0x6000D84")]
	[Address(RVA = "0xF6AF94", Offset = "0xF6AF94", VA = "0xF6AF94")]
	public ReloadMode()
	{
	}
}
[Token(Token = "0x2000238")]
public class Sound : MonoBehaviour
{
	[Token(Token = "0x4000B37")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float max;

	[Token(Token = "0x4000B38")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float min;

	[Token(Token = "0x4000B39")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float current;

	[Token(Token = "0x4000B3A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float delta;

	[Token(Token = "0x4000B3B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public UIButton up;

	[Token(Token = "0x4000B3C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public UIButton down;

	[Token(Token = "0x4000B3D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public UIButton reset;

	[Token(Token = "0x4000B3E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public TextMeshPro volumeText;

	[Token(Token = "0x6000D87")]
	[Address(RVA = "0xF6AFAC", Offset = "0xF6AFAC", VA = "0xF6AFAC")]
	public void init(float initialVolume)
	{
	}

	[Token(Token = "0x6000D88")]
	[Address(RVA = "0xF6B370", Offset = "0xF6B370", VA = "0xF6B370")]
	private void Start()
	{
	}

	[Token(Token = "0x6000D89")]
	[Address(RVA = "0xF6B378", Offset = "0xF6B378", VA = "0xF6B378")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000D8A")]
	[Address(RVA = "0xF6B4A4", Offset = "0xF6B4A4", VA = "0xF6B4A4")]
	private void Increase()
	{
	}

	[Token(Token = "0x6000D8B")]
	[Address(RVA = "0xF6B4BC", Offset = "0xF6B4BC", VA = "0xF6B4BC")]
	private void Decrease()
	{
	}

	[Token(Token = "0x6000D8C")]
	[Address(RVA = "0xF6B4C8", Offset = "0xF6B4C8", VA = "0xF6B4C8")]
	private void ResetSound()
	{
	}

	[Token(Token = "0x6000D8D")]
	[Address(RVA = "0xF6B4B0", Offset = "0xF6B4B0", VA = "0xF6B4B0")]
	private void setDelta(float deltaPlayerHeight)
	{
	}

	[Token(Token = "0x6000D8E")]
	[Address(RVA = "0xF6B0F4", Offset = "0xF6B0F4", VA = "0xF6B0F4")]
	private void setVolume(float volume)
	{
	}

	[Token(Token = "0x6000D8F")]
	[Address(RVA = "0xF6B69C", Offset = "0xF6B69C", VA = "0xF6B69C")]
	public float GetVolume()
	{
		return default(float);
	}

	[Token(Token = "0x6000D90")]
	[Address(RVA = "0xF6B534", Offset = "0xF6B534", VA = "0xF6B534")]
	private void UpdateText()
	{
	}

	[Token(Token = "0x6000D91")]
	[Address(RVA = "0xF6B6A4", Offset = "0xF6B6A4", VA = "0xF6B6A4")]
	public Sound()
	{
	}
}
[Token(Token = "0x2000239")]
public class StatsGame : MonoBehaviour
{
	[StructLayout(3)]
	[Token(Token = "0x200023A")]
	[CompilerGenerated]
	private struct <LoadBestScoreAndRanking>d__17 : IAsyncStateMachine
	{
		[Token(Token = "0x4000B4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int <>1__state;

		[Token(Token = "0x4000B4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public AsyncVoidMethodBuilder <>t__builder;

		[Token(Token = "0x4000B4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public StatsGame <>4__this;

		[Token(Token = "0x4000B50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private long <player1>5__2;

		[Token(Token = "0x4000B51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private TaskAwaiter<List<ServerService.Round>> <>u__1;

		[Token(Token = "0x6000D9A")]
		[Address(RVA = "0xF6C9A4", Offset = "0xF6C9A4", VA = "0xF6C9A4", Slot = "4")]
		private void MoveNext()
		{
		}

		[Token(Token = "0x6000D9B")]
		[Address(RVA = "0xF6CF54", Offset = "0xF6CF54", VA = "0xF6CF54", Slot = "5")]
		[DebuggerHidden]
		private void SetStateMachine(IAsyncStateMachine stateMachine)
		{
		}
	}

	[Token(Token = "0x4000B3F")]
	private const string EMPTY_FIELD = "-";

	[Token(Token = "0x4000B40")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TextMeshPro teammateDeads;

	[Token(Token = "0x4000B41")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TextMeshPro friendlyFire;

	[Token(Token = "0x4000B42")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public TextMeshPro enemyDeads;

	[Token(Token = "0x4000B43")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public TextMeshPro enemyHeadshots;

	[Token(Token = "0x4000B44")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public TextMeshPro hitsReceived;

	[Token(Token = "0x4000B45")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public TextMeshPro usedBullets;

	[Token(Token = "0x4000B46")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public TextMeshPro aiming;

	[Token(Token = "0x4000B47")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public TextMeshPro locationsCompleted;

	[Token(Token = "0x4000B48")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public TextMeshPro time;

	[Token(Token = "0x4000B49")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public TextMeshPro score;

	[Token(Token = "0x4000B4A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public TextMeshPro bestScore;

	[Token(Token = "0x4000B4B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public TextMeshPro ranking;

	[Token(Token = "0x4000B4C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public TextMeshPro playerName;

	[Token(Token = "0x6000D92")]
	[Address(RVA = "0xF6B6B8", Offset = "0xF6B6B8", VA = "0xF6B6B8")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000D93")]
	[Address(RVA = "0xF6C2BC", Offset = "0xF6C2BC", VA = "0xF6C2BC")]
	private void SetEmptyGameStats()
	{
	}

	[Token(Token = "0x6000D94")]
	[Address(RVA = "0xF6B75C", Offset = "0xF6B75C", VA = "0xF6B75C")]
	private void SetGameStats()
	{
	}

	[Token(Token = "0x6000D95")]
	[Address(RVA = "0xF6C830", Offset = "0xF6C830", VA = "0xF6C830")]
	[AsyncStateMachine(typeof(<LoadBestScoreAndRanking>d__17))]
	private void LoadBestScoreAndRanking()
	{
	}

	[Token(Token = "0x6000D96")]
	[Address(RVA = "0xF6C8E4", Offset = "0xF6C8E4", VA = "0xF6C8E4")]
	private string GetSuccessValue(int success, int total)
	{
		return null;
	}

	[Token(Token = "0x6000D97")]
	[Address(RVA = "0xF6C700", Offset = "0xF6C700", VA = "0xF6C700")]
	private string GetSuccessProbability(int success, int total)
	{
		return null;
	}

	[Token(Token = "0x6000D98")]
	[Address(RVA = "0xF6C47C", Offset = "0xF6C47C", VA = "0xF6C47C")]
	private string ParseTime(float fTime)
	{
		return null;
	}

	[Token(Token = "0x6000D99")]
	[Address(RVA = "0xF6C99C", Offset = "0xF6C99C", VA = "0xF6C99C")]
	public StatsGame()
	{
	}
}
[Token(Token = "0x200023B")]
public class StatsGlobal : MonoBehaviour
{
	[Token(Token = "0x4000B52")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TextMeshPro teammateDeads;

	[Token(Token = "0x4000B53")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TextMeshPro hellMode;

	[Token(Token = "0x4000B54")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public TextMeshPro friendlyFire;

	[Token(Token = "0x4000B55")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public TextMeshPro enemyDeads;

	[Token(Token = "0x4000B56")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public TextMeshPro enemyHeadshots;

	[Token(Token = "0x4000B57")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public TextMeshPro hitsReceived;

	[Token(Token = "0x4000B58")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public TextMeshPro usedBullets;

	[Token(Token = "0x4000B59")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public TextMeshPro aiming;

	[Token(Token = "0x4000B5A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public TextMeshPro time;

	[Token(Token = "0x4000B5B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public TextMeshPro gamesPlayed;

	[Token(Token = "0x6000D9C")]
	[Address(RVA = "0xF6CF60", Offset = "0xF6CF60", VA = "0xF6CF60")]
	private void Start()
	{
	}

	[Token(Token = "0x6000D9D")]
	[Address(RVA = "0xF6CF64", Offset = "0xF6CF64", VA = "0xF6CF64")]
	private void SetGlobalStats()
	{
	}

	[Token(Token = "0x6000D9E")]
	[Address(RVA = "0xF6D540", Offset = "0xF6D540", VA = "0xF6D540")]
	private string GetSuccessValue(int success, int total)
	{
		return null;
	}

	[Token(Token = "0x6000D9F")]
	[Address(RVA = "0xF6D5F8", Offset = "0xF6D5F8", VA = "0xF6D5F8")]
	private string GetSuccessProbability(int success, int total)
	{
		return null;
	}

	[Token(Token = "0x6000DA0")]
	[Address(RVA = "0xF6D728", Offset = "0xF6D728", VA = "0xF6D728")]
	private string ParseTime(float fTime)
	{
		return null;
	}

	[Token(Token = "0x6000DA1")]
	[Address(RVA = "0xF6DB9C", Offset = "0xF6DB9C", VA = "0xF6DB9C")]
	public StatsGlobal()
	{
	}
}
[Token(Token = "0x200023C")]
public class StatsMission : MonoBehaviour
{
	[Token(Token = "0x4000B5C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TextMeshPro teammateDeads;

	[Token(Token = "0x4000B5D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TextMeshPro gamesPlayedHellMode;

	[Token(Token = "0x4000B5E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public TextMeshPro friendlyFire;

	[Token(Token = "0x4000B5F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public TextMeshPro enemyDeads;

	[Token(Token = "0x4000B60")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public TextMeshPro enemyHeadshots;

	[Token(Token = "0x4000B61")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public TextMeshPro hitsReceived;

	[Token(Token = "0x4000B62")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public TextMeshPro usedBullets;

	[Token(Token = "0x4000B63")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public TextMeshPro aiming;

	[Token(Token = "0x4000B64")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public TextMeshPro time;

	[Token(Token = "0x4000B65")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public TextMeshPro gamesPlayed;

	[Token(Token = "0x6000DA2")]
	[Address(RVA = "0xF6DBA4", Offset = "0xF6DBA4", VA = "0xF6DBA4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000DA3")]
	[Address(RVA = "0xF6DE40", Offset = "0xF6DE40", VA = "0xF6DE40")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000DA4")]
	[Address(RVA = "0xF6DC6C", Offset = "0xF6DC6C", VA = "0xF6DC6C")]
	private void SetMissionStats()
	{
	}

	[Token(Token = "0x6000DA5")]
	[Address(RVA = "0xF6DF00", Offset = "0xF6DF00", VA = "0xF6DF00")]
	private CrisisVRigade2_LoadSaveData.MissionStatsData GetMissionStats()
	{
		return null;
	}

	[Token(Token = "0x6000DA6")]
	[Address(RVA = "0xF6E114", Offset = "0xF6E114", VA = "0xF6E114")]
	private string GetSuccessValue(int success, int total)
	{
		return null;
	}

	[Token(Token = "0x6000DA7")]
	[Address(RVA = "0xF6E1CC", Offset = "0xF6E1CC", VA = "0xF6E1CC")]
	private string GetSuccessProbability(int success, int total)
	{
		return null;
	}

	[Token(Token = "0x6000DA8")]
	[Address(RVA = "0xF6E2FC", Offset = "0xF6E2FC", VA = "0xF6E2FC")]
	private string ParseTime(float fTime)
	{
		return null;
	}

	[Token(Token = "0x6000DA9")]
	[Address(RVA = "0xF6E570", Offset = "0xF6E570", VA = "0xF6E570")]
	public StatsMission()
	{
	}
}
[Token(Token = "0x200023D")]
public class StatsProgress : MonoBehaviour
{
	[Token(Token = "0x200023E")]
	[CompilerGenerated]
	private sealed class <BlinkNewLevelAccomplished>d__5 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000B67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000B68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000B69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform element;

		[Token(Token = "0x4000B6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private WaitForSeconds <wfs>5__2;

		[Token(Token = "0x170000AA")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000DB4")]
			[Address(RVA = "0xF6EEC8", Offset = "0xF6EEC8", VA = "0xF6EEC8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000AB")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000DB6")]
			[Address(RVA = "0xF6EF10", Offset = "0xF6EF10", VA = "0xF6EF10", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000DB1")]
		[Address(RVA = "0xF6ED0C", Offset = "0xF6ED0C", VA = "0xF6ED0C")]
		[DebuggerHidden]
		public <BlinkNewLevelAccomplished>d__5(int <>1__state)
		{
		}

		[Token(Token = "0x6000DB2")]
		[Address(RVA = "0xF6ED8C", Offset = "0xF6ED8C", VA = "0xF6ED8C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000DB3")]
		[Address(RVA = "0xF6ED90", Offset = "0xF6ED90", VA = "0xF6ED90", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000DB5")]
		[Address(RVA = "0xF6EED0", Offset = "0xF6EED0", VA = "0xF6EED0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000B66")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static float BLINK_DURATION;

	[Token(Token = "0x6000DAA")]
	[Address(RVA = "0xF6E578", Offset = "0xF6E578", VA = "0xF6E578")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000DAB")]
	[Address(RVA = "0xF6EC90", Offset = "0xF6EC90", VA = "0xF6EC90")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000DAC")]
	[Address(RVA = "0xF6EB88", Offset = "0xF6EB88", VA = "0xF6EB88")]
	private void ShowMissionProgress(string missionId, int levelsCompleted, bool newLevelAccomplished)
	{
	}

	[Token(Token = "0x6000DAD")]
	[Address(RVA = "0xF6EA0C", Offset = "0xF6EA0C", VA = "0xF6EA0C")]
	private int GetMaxLevelAccomplished(CrisisVRigade2_LoadSaveData.MissionStatsData missionStats)
	{
		return default(int);
	}

	[Token(Token = "0x6000DAE")]
	[Address(RVA = "0xF6EC98", Offset = "0xF6EC98", VA = "0xF6EC98")]
	[IteratorStateMachine(typeof(<BlinkNewLevelAccomplished>d__5))]
	private IEnumerator BlinkNewLevelAccomplished(Transform element)
	{
		return null;
	}

	[Token(Token = "0x6000DAF")]
	[Address(RVA = "0xF6ED34", Offset = "0xF6ED34", VA = "0xF6ED34")]
	public StatsProgress()
	{
	}
}
[Token(Token = "0x200023F")]
public class SubtitlesSettings : UIButton
{
	[Token(Token = "0x4000B6B")]
	private const string ENGLISH = "settings_english";

	[Token(Token = "0x4000B6C")]
	private const string SPANISH = "settings_spanish";

	[Token(Token = "0x4000B6D")]
	private const string CHINESE = "settings_chinese";

	[Token(Token = "0x4000B6E")]
	private const string JAPANESE = "settings_japanese";

	[Token(Token = "0x4000B6F")]
	private const string KOREAN = "settings_korean";

	[Token(Token = "0x4000B70")]
	private const string OFF = "settings_off";

	[Token(Token = "0x4000B71")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private bool locked;

	[Token(Token = "0x4000B72")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC1")]
	private bool isFront;

	[Token(Token = "0x4000B73")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private TextMeshPro front;

	[Token(Token = "0x4000B74")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private TextMeshPro back;

	[Token(Token = "0x6000DB7")]
	[Address(RVA = "0xF6EF18", Offset = "0xF6EF18", VA = "0xF6EF18")]
	public void init()
	{
	}

	[Token(Token = "0x6000DB8")]
	[Address(RVA = "0xF6F24C", Offset = "0xF6F24C", VA = "0xF6F24C")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000DB9")]
	[Address(RVA = "0xF6F2FC", Offset = "0xF6F2FC", VA = "0xF6F2FC", Slot = "4")]
	public override bool OnHit(Bullet bullet, Ray ray, RaycastHit hit)
	{
		return default(bool);
	}

	[Token(Token = "0x6000DBA")]
	[Address(RVA = "0xF6F654", Offset = "0xF6F654", VA = "0xF6F654")]
	public LocalizationManager.Language getSubtitlesLanguage()
	{
		return default(LocalizationManager.Language);
	}

	[Token(Token = "0x6000DBB")]
	[Address(RVA = "0xF6F6A8", Offset = "0xF6F6A8", VA = "0xF6F6A8")]
	private void UpdateText()
	{
	}

	[Token(Token = "0x6000DBC")]
	[Address(RVA = "0xF6F7F4", Offset = "0xF6F7F4", VA = "0xF6F7F4")]
	public SubtitlesSettings()
	{
	}
}
[Token(Token = "0x2000240")]
public class UIButton : HitTarget, ISVRLaserPointable
{
	[Token(Token = "0x2000241")]
	public delegate void UIButtonEvent();

	[Token(Token = "0x2000242")]
	public enum UIButtonState
	{
		[Token(Token = "0x4000B85")]
		Selected,
		[Token(Token = "0x4000B86")]
		Enabled,
		[Token(Token = "0x4000B87")]
		Disabled
	}

	[Token(Token = "0x4000B79")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public TextMeshPro text;

	[Token(Token = "0x4000B7A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public UIButtonState state;

	[Token(Token = "0x4000B7B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public string command;

	[Token(Token = "0x4000B7C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Vector3 offset_position;

	[Token(Token = "0x4000B7D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public bool remotePlayerAllowed;

	[Token(Token = "0x4000B7E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private UIButtonAnimator buttonAnimator;

	[Token(Token = "0x4000B7F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public Transform enabledModel;

	[Token(Token = "0x4000B80")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public Transform disabledModel;

	[Token(Token = "0x4000B81")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public Transform selectedModel;

	[Token(Token = "0x4000B82")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	protected Vector3 initScale;

	[Token(Token = "0x4000B83")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	protected Vector3 initPosition;

	[Token(Token = "0x14000016")]
	public event UIButtonEvent OnButtonPressed
	{
		[Token(Token = "0x6000DBE")]
		[Address(RVA = "0xF6F880", Offset = "0xF6F880", VA = "0xF6F880")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000DBF")]
		[Address(RVA = "0xF6F91C", Offset = "0xF6F91C", VA = "0xF6F91C")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x14000017")]
	public event UIButtonEvent OnButtonHoverEnter
	{
		[Token(Token = "0x6000DC0")]
		[Address(RVA = "0xF6F9B8", Offset = "0xF6F9B8", VA = "0xF6F9B8")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000DC1")]
		[Address(RVA = "0xF6FA54", Offset = "0xF6FA54", VA = "0xF6FA54")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x14000018")]
	public event UIButtonEvent OnButtonHoverExit
	{
		[Token(Token = "0x6000DC2")]
		[Address(RVA = "0xF6FAF0", Offset = "0xF6FAF0", VA = "0xF6FAF0")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000DC3")]
		[Address(RVA = "0xF6FB8C", Offset = "0xF6FB8C", VA = "0xF6FB8C")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x14000019")]
	public event UIButtonEvent OnButtonStateChanged
	{
		[Token(Token = "0x6000DC4")]
		[Address(RVA = "0xF6FC28", Offset = "0xF6FC28", VA = "0xF6FC28")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000DC5")]
		[Address(RVA = "0xF6FCC4", Offset = "0xF6FCC4", VA = "0xF6FCC4")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x6000DC6")]
	[Address(RVA = "0xF6FD60", Offset = "0xF6FD60", VA = "0xF6FD60", Slot = "11")]
	protected virtual void Awake()
	{
	}

	[Token(Token = "0x6000DC7")]
	[Address(RVA = "0xF6F598", Offset = "0xF6F598", VA = "0xF6F598", Slot = "4")]
	public override bool OnHit(Bullet bullet, Ray ray, RaycastHit hit)
	{
		return default(bool);
	}

	[Token(Token = "0x6000DC8")]
	[Address(RVA = "0xF6FFB0", Offset = "0xF6FFB0", VA = "0xF6FFB0", Slot = "12")]
	public virtual void SetButtonState(UIButtonState buttonState, bool force = false)
	{
	}

	[Token(Token = "0x6000DC9")]
	[Address(RVA = "0xF70118", Offset = "0xF70118", VA = "0xF70118", Slot = "13")]
	protected virtual void setButtonEnabled(bool enabled)
	{
	}

	[Token(Token = "0x6000DCA")]
	[Address(RVA = "0xF701BC", Offset = "0xF701BC", VA = "0xF701BC", Slot = "14")]
	protected virtual void setButtonDisabled(bool enabled)
	{
	}

	[Token(Token = "0x6000DCB")]
	[Address(RVA = "0xF70260", Offset = "0xF70260", VA = "0xF70260", Slot = "15")]
	protected virtual void setButtonSelected(bool enabled)
	{
	}

	[Token(Token = "0x6000DCC")]
	[Address(RVA = "0xF70304", Offset = "0xF70304", VA = "0xF70304", Slot = "16")]
	public virtual bool OnHoverEnter(SVRLaserPointer pointer)
	{
		return default(bool);
	}

	[Token(Token = "0x6000DCD")]
	[Address(RVA = "0xF7048C", Offset = "0xF7048C", VA = "0xF7048C")]
	protected void SendHoverEnterEvent()
	{
	}

	[Token(Token = "0x6000DCE")]
	[Address(RVA = "0xF704A8", Offset = "0xF704A8", VA = "0xF704A8")]
	protected void SendHoverExitEvent()
	{
	}

	[Token(Token = "0x6000DCF")]
	[Address(RVA = "0xF6FF94", Offset = "0xF6FF94", VA = "0xF6FF94")]
	protected void SendButtonPressedEvent()
	{
	}

	[Token(Token = "0x6000DD0")]
	[Address(RVA = "0xF704C4", Offset = "0xF704C4", VA = "0xF704C4", Slot = "17")]
	public virtual bool OnHoverExit(SVRLaserPointer pointer)
	{
		return default(bool);
	}

	[Token(Token = "0x6000DD1")]
	[Address(RVA = "0xF70614", Offset = "0xF70614", VA = "0xF70614")]
	public void ResetScale()
	{
	}

	[Token(Token = "0x6000DD2")]
	[Address(RVA = "0xF70688", Offset = "0xF70688", VA = "0xF70688")]
	public Transform GetSelectedModel()
	{
		return null;
	}

	[Token(Token = "0x6000DD3")]
	[Address(RVA = "0xF70690", Offset = "0xF70690", VA = "0xF70690")]
	public Transform GetEnabledModel()
	{
		return null;
	}

	[Token(Token = "0x6000DD4")]
	[Address(RVA = "0xF70698", Offset = "0xF70698", VA = "0xF70698")]
	public Transform GetDisabledModel()
	{
		return null;
	}

	[Token(Token = "0x6000DD5")]
	[Address(RVA = "0xF6F800", Offset = "0xF6F800", VA = "0xF6F800")]
	public UIButton()
	{
	}
}
[Token(Token = "0x2000243")]
public abstract class UIButtonAnimator : MonoBehaviour
{
	[Token(Token = "0x6000DDA")]
	public abstract void OnHoverEnter(UIButton button);

	[Token(Token = "0x6000DDB")]
	public abstract void OnHoverExit(UIButton button);

	[Token(Token = "0x6000DDC")]
	public abstract void OnButtonSelected(UIButton button);

	[Token(Token = "0x6000DDD")]
	public abstract void OnButtonEnabled(UIButton button);

	[Token(Token = "0x6000DDE")]
	public abstract void OnButtonDisabled(UIButton button);

	[Token(Token = "0x6000DDF")]
	[Address(RVA = "0xF707AC", Offset = "0xF707AC", VA = "0xF707AC")]
	protected UIButtonAnimator()
	{
	}
}
[Token(Token = "0x2000244")]
public class UIButtonTextAnimator : UIButtonAnimator
{
	[Token(Token = "0x4000B88")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Color selectedColor;

	[Token(Token = "0x4000B89")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Color enabledColor;

	[Token(Token = "0x4000B8A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Color disabledColor;

	[Token(Token = "0x4000B8B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Color hoverColor;

	[Token(Token = "0x4000B8C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Transform hoverSelected;

	[Token(Token = "0x4000B8D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Transform hoverEnabled;

	[Token(Token = "0x4000B8E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Transform hoverDisabled;

	[Token(Token = "0x6000DE0")]
	[Address(RVA = "0xF707B4", Offset = "0xF707B4", VA = "0xF707B4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000DE1")]
	[Address(RVA = "0xF70910", Offset = "0xF70910", VA = "0xF70910", Slot = "4")]
	public override void OnHoverEnter(UIButton button)
	{
	}

	[Token(Token = "0x6000DE2")]
	[Address(RVA = "0xF70A60", Offset = "0xF70A60", VA = "0xF70A60", Slot = "5")]
	public override void OnHoverExit(UIButton button)
	{
	}

	[Token(Token = "0x6000DE3")]
	[Address(RVA = "0xF70B38", Offset = "0xF70B38", VA = "0xF70B38", Slot = "6")]
	public override void OnButtonSelected(UIButton button)
	{
	}

	[Token(Token = "0x6000DE4")]
	[Address(RVA = "0xF70B6C", Offset = "0xF70B6C", VA = "0xF70B6C", Slot = "7")]
	public override void OnButtonEnabled(UIButton button)
	{
	}

	[Token(Token = "0x6000DE5")]
	[Address(RVA = "0xF70BA0", Offset = "0xF70BA0", VA = "0xF70BA0", Slot = "8")]
	public override void OnButtonDisabled(UIButton button)
	{
	}

	[Token(Token = "0x6000DE6")]
	[Address(RVA = "0xF70BD4", Offset = "0xF70BD4", VA = "0xF70BD4")]
	public UIButtonTextAnimator()
	{
	}
}
[Token(Token = "0x2000245")]
public class UIToggle : MonoBehaviour
{
	[Token(Token = "0x4000B8F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public SumalabEvent OnStateChanged;

	[Token(Token = "0x4000B90")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool initOnAwake;

	[Token(Token = "0x4000B91")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	protected UIButton[] toggleButtons;

	[Token(Token = "0x6000DE7")]
	[Address(RVA = "0xF70BDC", Offset = "0xF70BDC", VA = "0xF70BDC", Slot = "4")]
	protected virtual void Awake()
	{
	}

	[Token(Token = "0x6000DE8")]
	[Address(RVA = "0xF70BF4", Offset = "0xF70BF4", VA = "0xF70BF4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000DE9")]
	[Address(RVA = "0xF70BF8", Offset = "0xF70BF8", VA = "0xF70BF8")]
	private void UpdateButtons()
	{
	}

	[Token(Token = "0x6000DEA")]
	[Address(RVA = "0xF70C64", Offset = "0xF70C64", VA = "0xF70C64", Slot = "5")]
	protected virtual void init()
	{
	}

	[Token(Token = "0x6000DEB")]
	[Address(RVA = "0xF70DDC", Offset = "0xF70DDC", VA = "0xF70DDC", Slot = "6")]
	protected virtual void ButtonPressed(UIButton button)
	{
	}

	[Token(Token = "0x6000DEC")]
	[Address(RVA = "0xF70F04", Offset = "0xF70F04", VA = "0xF70F04")]
	public UIToggle()
	{
	}
}
[Token(Token = "0x2000247")]
public class VoiceChatSettings : UIButton
{
	[Token(Token = "0x4000B94")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private bool locked;

	[Token(Token = "0x4000B95")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC1")]
	private bool isEnabled;

	[Token(Token = "0x6000DEF")]
	[Address(RVA = "0xF70FA0", Offset = "0xF70FA0", VA = "0xF70FA0")]
	public void init(bool voiceChatEnabled)
	{
	}

	[Token(Token = "0x6000DF0")]
	[Address(RVA = "0xF70FF8", Offset = "0xF70FF8", VA = "0xF70FF8", Slot = "4")]
	public override bool OnHit(Bullet bullet, Ray ray, RaycastHit hit)
	{
		return default(bool);
	}

	[Token(Token = "0x6000DF1")]
	[Address(RVA = "0xF71114", Offset = "0xF71114", VA = "0xF71114")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000DF2")]
	[Address(RVA = "0xF711F8", Offset = "0xF711F8", VA = "0xF711F8")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000DF3")]
	[Address(RVA = "0xF71068", Offset = "0xF71068", VA = "0xF71068")]
	private void toggle()
	{
	}

	[Token(Token = "0x6000DF4")]
	[Address(RVA = "0xF7126C", Offset = "0xF7126C", VA = "0xF7126C")]
	public bool IsEnabled()
	{
		return default(bool);
	}

	[Token(Token = "0x6000DF5")]
	[Address(RVA = "0xF712F4", Offset = "0xF712F4", VA = "0xF712F4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000DF6")]
	[Address(RVA = "0xF71510", Offset = "0xF71510", VA = "0xF71510")]
	public VoiceChatSettings()
	{
	}
}
[Token(Token = "0x2000248")]
public class VoiceSettings : UIButton
{
	[Token(Token = "0x4000B96")]
	private const string ENGLISH = "settings_english";

	[Token(Token = "0x4000B97")]
	private const string SPANISH = "settings_spanish";

	[Token(Token = "0x4000B98")]
	private const string CHINESE = "settings_chinese";

	[Token(Token = "0x4000B99")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private bool locked;

	[Token(Token = "0x4000B9A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC1")]
	private bool isFront;

	[Token(Token = "0x4000B9B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private TextMeshPro front;

	[Token(Token = "0x4000B9C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private TextMeshPro back;

	[Token(Token = "0x6000DF9")]
	[Address(RVA = "0xF7152C", Offset = "0xF7152C", VA = "0xF7152C")]
	public void init()
	{
	}

	[Token(Token = "0x6000DFA")]
	[Address(RVA = "0xF71810", Offset = "0xF71810", VA = "0xF71810")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000DFB")]
	[Address(RVA = "0xF718C0", Offset = "0xF718C0", VA = "0xF718C0", Slot = "4")]
	public override bool OnHit(Bullet bullet, Ray ray, RaycastHit hit)
	{
		return default(bool);
	}

	[Token(Token = "0x6000DFC")]
	[Address(RVA = "0xF71B00", Offset = "0xF71B00", VA = "0xF71B00")]
	private void UpdateText()
	{
	}

	[Token(Token = "0x6000DFD")]
	[Address(RVA = "0xF71BFC", Offset = "0xF71BFC", VA = "0xF71BFC")]
	public LocalizationManager.Language getVoiceLanguage()
	{
		return default(LocalizationManager.Language);
	}

	[Token(Token = "0x6000DFE")]
	[Address(RVA = "0xF71C50", Offset = "0xF71C50", VA = "0xF71C50")]
	public VoiceSettings()
	{
	}
}
[Token(Token = "0x2000249")]
public class WalkieTalkieSettings : UIButton
{
	[Token(Token = "0x4000B9D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private bool locked;

	[Token(Token = "0x4000B9E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC1")]
	private bool isMuted;

	[Token(Token = "0x6000E00")]
	[Address(RVA = "0xF71C64", Offset = "0xF71C64", VA = "0xF71C64")]
	public void init(bool walkieTalkieMuted)
	{
	}

	[Token(Token = "0x6000E01")]
	[Address(RVA = "0xF71CC0", Offset = "0xF71CC0", VA = "0xF71CC0", Slot = "4")]
	public override bool OnHit(Bullet bullet, Ray ray, RaycastHit hit)
	{
		return default(bool);
	}

	[Token(Token = "0x6000E02")]
	[Address(RVA = "0xF71D98", Offset = "0xF71D98", VA = "0xF71D98")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000E03")]
	[Address(RVA = "0xF71E2C", Offset = "0xF71E2C", VA = "0xF71E2C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000E04")]
	[Address(RVA = "0xF71D30", Offset = "0xF71D30", VA = "0xF71D30")]
	private void toggle()
	{
	}

	[Token(Token = "0x6000E05")]
	[Address(RVA = "0xF71EA0", Offset = "0xF71EA0", VA = "0xF71EA0")]
	public bool IsMuted()
	{
		return default(bool);
	}

	[Token(Token = "0x6000E06")]
	[Address(RVA = "0xF71EF4", Offset = "0xF71EF4", VA = "0xF71EF4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000E07")]
	[Address(RVA = "0xF7208C", Offset = "0xF7208C", VA = "0xF7208C")]
	public WalkieTalkieSettings()
	{
	}
}
[Token(Token = "0x200024A")]
public class ShowHideMeshRenderer : MonoBehaviour
{
	[Token(Token = "0x6000E0A")]
	[Address(RVA = "0xF720A0", Offset = "0xF720A0", VA = "0xF720A0")]
	public ShowHideMeshRenderer()
	{
	}
}
[Token(Token = "0x200024B")]
public class Skill
{
	[Token(Token = "0x200024C")]
	public enum SkillLevel
	{
		[Token(Token = "0x4000BA5")]
		Idiot,
		[Token(Token = "0x4000BA6")]
		Normal,
		[Token(Token = "0x4000BA7")]
		Smart,
		[Token(Token = "0x4000BA8")]
		JackBauer
	}

	[Token(Token = "0x4000B9F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Dictionary<SkillLevel, float> coverOnHitPercents;

	[Token(Token = "0x4000BA0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static Dictionary<SkillLevel, float> accuracyPercents;

	[Token(Token = "0x4000BA1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static Dictionary<SkillLevel, float> maxAccuracyPercents;

	[Token(Token = "0x4000BA2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static float adaptativeSkillModifier;

	[Token(Token = "0x4000BA3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private static int MAX_SCORE_ADAPTATIVE;

	[Token(Token = "0x6000E0B")]
	[Address(RVA = "0xF720A8", Offset = "0xF720A8", VA = "0xF720A8")]
	public Skill()
	{
	}

	[Token(Token = "0x6000E0C")]
	[Address(RVA = "0xF722C8", Offset = "0xF722C8", VA = "0xF722C8")]
	public static float getSkillModifier()
	{
		return default(float);
	}

	[Token(Token = "0x6000E0D")]
	[Address(RVA = "0xF722D0", Offset = "0xF722D0", VA = "0xF722D0")]
	public static bool coverOnHit(ThiefPoliceController character)
	{
		return default(bool);
	}

	[Token(Token = "0x6000E0E")]
	[Address(RVA = "0xF72374", Offset = "0xF72374", VA = "0xF72374")]
	public static float getAccurary(ThiefPoliceController character)
	{
		return default(float);
	}

	[Token(Token = "0x6000E0F")]
	[Address(RVA = "0xF72454", Offset = "0xF72454", VA = "0xF72454")]
	public static float getMaxAccuracy(ThiefPoliceController character)
	{
		return default(float);
	}

	[Token(Token = "0x6000E10")]
	[Address(RVA = "0xF72534", Offset = "0xF72534", VA = "0xF72534")]
	public static SkillLevel getRandomSkill()
	{
		return default(SkillLevel);
	}

	[Token(Token = "0x6000E11")]
	[Address(RVA = "0xF72544", Offset = "0xF72544", VA = "0xF72544")]
	public static float getRandomAccuracy(float randomMin, float randomMax, bool bForce = false)
	{
		return default(float);
	}
}
[Token(Token = "0x200024D")]
public class SlowMotion : MonoBehaviour
{
	[Token(Token = "0x4000BA9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Rigidbody[] m_rigidBodys;

	[Token(Token = "0x4000BAA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Dictionary<Rigidbody, SlowMotionData> m_data;

	[Token(Token = "0x4000BAB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float slowMotionDrag;

	[Token(Token = "0x4000BAC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float slowMotionAngularDrag;

	[Token(Token = "0x4000BAD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float slowMotionDuration;

	[Token(Token = "0x4000BAE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private List<Rigidbody> m_lRbForces;

	[Token(Token = "0x4000BAF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private List<Vector3> m_lRbForcesForce;

	[Token(Token = "0x4000BB0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool m_bActive;

	[Token(Token = "0x6000E13")]
	[Address(RVA = "0xF726F4", Offset = "0xF726F4", VA = "0xF726F4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000E14")]
	[Address(RVA = "0xF726F8", Offset = "0xF726F8", VA = "0xF726F8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000E15")]
	[Address(RVA = "0xF726FC", Offset = "0xF726FC", VA = "0xF726FC")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000E16")]
	[Address(RVA = "0xF72954", Offset = "0xF72954", VA = "0xF72954")]
	public void ResetTransforms()
	{
	}

	[Token(Token = "0x6000E17")]
	[Address(RVA = "0xF72AD0", Offset = "0xF72AD0", VA = "0xF72AD0")]
	public void ActivateSlowMotion()
	{
	}

	[Token(Token = "0x6000E18")]
	[Address(RVA = "0xF72B80", Offset = "0xF72B80", VA = "0xF72B80")]
	public void AddRigidbodyVelocity(Rigidbody r, Vector3 force)
	{
	}

	[Token(Token = "0x6000E19")]
	[Address(RVA = "0xF72CD8", Offset = "0xF72CD8", VA = "0xF72CD8")]
	private void DeactivateSlowMotion()
	{
	}

	[Token(Token = "0x6000E1A")]
	[Address(RVA = "0xF72DA8", Offset = "0xF72DA8", VA = "0xF72DA8")]
	public SlowMotion()
	{
	}
}
[Token(Token = "0x200024E")]
internal class SlowMotionData
{
	[Token(Token = "0x4000BB1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float drag;

	[Token(Token = "0x4000BB2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float angularDrag;

	[Token(Token = "0x6000E1B")]
	[Address(RVA = "0xF7294C", Offset = "0xF7294C", VA = "0xF7294C")]
	public SlowMotionData()
	{
	}
}
[Token(Token = "0x200024F")]
public class SmithHitTarget : HitTarget
{
	[Token(Token = "0x4000BB3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public MeshAnimator anim;

	[Token(Token = "0x4000BB4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public List<MeshAnimation> run_anim_list;

	[Token(Token = "0x4000BB5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public List<MeshAnimation> death_anim_list;

	[Token(Token = "0x4000BB6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public List<MeshAnimation> death_anim_poses_list;

	[Token(Token = "0x4000BB7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public MeshAnimation attack_anim;

	[Token(Token = "0x4000BB8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public MeshAnimation walk_anim;

	[Token(Token = "0x4000BB9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public MeshAnimation idle_anim;

	[Token(Token = "0x4000BBA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private NavMeshAgent agent;

	[Token(Token = "0x4000BBB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public AimTarget target;

	[Token(Token = "0x4000BBC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public List<AimTarget> targets;

	[Token(Token = "0x4000BBD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public int index;

	[Token(Token = "0x4000BBE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private bool isDead;

	[Token(Token = "0x4000BBF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private float distance;

	[Token(Token = "0x4000BC0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	private float ATTACK_DISTANCE;

	[Token(Token = "0x4000BC1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private bool deadbodies_in_pool;

	[Token(Token = "0x4000BC2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	private float vel;

	[Token(Token = "0x4000BC3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private CrowdSpawner spawner;

	[Token(Token = "0x6000E1C")]
	[Address(RVA = "0xF72EF0", Offset = "0xF72EF0", VA = "0xF72EF0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000E1D")]
	[Address(RVA = "0xF72F48", Offset = "0xF72F48", VA = "0xF72F48", Slot = "4")]
	public override bool OnHit(Bullet bullet, Ray ray, RaycastHit hit)
	{
		return default(bool);
	}

	[Token(Token = "0x6000E1E")]
	[Address(RVA = "0xF73040", Offset = "0xF73040", VA = "0xF73040")]
	public void KillAgent(bool bRemote = false)
	{
	}

	[Token(Token = "0x6000E1F")]
	[Address(RVA = "0xF733C0", Offset = "0xF733C0", VA = "0xF733C0")]
	public void UpdatetDestinationTarget()
	{
	}

	[Token(Token = "0x6000E20")]
	[Address(RVA = "0xF734A0", Offset = "0xF734A0", VA = "0xF734A0")]
	private AimTarget selectTarget()
	{
		return null;
	}

	[Token(Token = "0x6000E21")]
	[Address(RVA = "0xF735A4", Offset = "0xF735A4", VA = "0xF735A4")]
	public void InitSpawn(Vector3 pos, CrowdSpawner _spawner, List<AimTarget> _targets, string id, int _index)
	{
	}

	[Token(Token = "0x6000E22")]
	[Address(RVA = "0xF73808", Offset = "0xF73808", VA = "0xF73808")]
	private void CheckPlayerTarget()
	{
	}

	[Token(Token = "0x6000E23")]
	[Address(RVA = "0xF73CD8", Offset = "0xF73CD8", VA = "0xF73CD8")]
	private void DisableAgent()
	{
	}

	[Token(Token = "0x6000E24")]
	[Address(RVA = "0xF73E3C", Offset = "0xF73E3C", VA = "0xF73E3C")]
	private void HitPlayer(float f)
	{
	}

	[Token(Token = "0x6000E25")]
	[Address(RVA = "0xF73FD8", Offset = "0xF73FD8", VA = "0xF73FD8")]
	public SmithHitTarget()
	{
	}
}
[Token(Token = "0x2000250")]
public class taryFireBombLaunchOnStart : MonoBehaviour
{
	[Token(Token = "0x4000BC4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool custom_bomb;

	[Token(Token = "0x4000BC5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float custom_force;

	[Token(Token = "0x6000E26")]
	[Address(RVA = "0xF74000", Offset = "0xF74000", VA = "0xF74000")]
	private void Start()
	{
	}

	[Token(Token = "0x6000E27")]
	[Address(RVA = "0xF7415C", Offset = "0xF7415C", VA = "0xF7415C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000E28")]
	[Address(RVA = "0xF74160", Offset = "0xF74160", VA = "0xF74160")]
	public taryFireBombLaunchOnStart()
	{
	}
}
[Token(Token = "0x2000251")]
public class ThiefPoliceController : CommonCharacterController
{
	[Token(Token = "0x4000BC6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static float MIN_HITSOUND_DELAY;

	[Token(Token = "0x4000BC7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
	[HideInInspector]
	public AimIK aimIK;

	[Token(Token = "0x4000BC8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
	public NPCWeapon weapon;

	[Token(Token = "0x4000BC9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
	public AimTarget forwardAimTarget;

	[Token(Token = "0x4000BCA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
	public Skill.SkillLevel skillLevel;

	[Token(Token = "0x4000BCB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x204")]
	private Skill.SkillLevel coverSkillLevel;

	[Token(Token = "0x4000BCC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
	public bool isZombie;

	[Token(Token = "0x4000BCD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x209")]
	public bool isPolice;

	[Token(Token = "0x4000BCE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20A")]
	public bool immortal;

	[Token(Token = "0x4000BCF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20B")]
	public bool showBonus;

	[Token(Token = "0x4000BD0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
	private PseudoRandom randomGenerator;

	[Token(Token = "0x4000BD1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
	private bool warning;

	[Token(Token = "0x4000BD2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21C")]
	private float warningTime;

	[Token(Token = "0x4000BD3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x220")]
	private float lastHitSound;

	[Token(Token = "0x4000BD4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	private static float minWarningTime;

	[Token(Token = "0x4000BD5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static float maxWarningTime;

	[Token(Token = "0x4000BD6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x224")]
	public bool showWarning;

	[Token(Token = "0x4000BD7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x228")]
	private Vector3 myWeaponPosition;

	[Token(Token = "0x4000BD8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x234")]
	private Quaternion myWeaponRotation;

	[Token(Token = "0x4000BD9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x248")]
	private Transform myWeaponParent;

	[Token(Token = "0x4000BDA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x250")]
	private Rigidbody myWeaponRigidbody;

	[Token(Token = "0x4000BDB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x258")]
	private BoxCollider myWeaponCollider;

	[Token(Token = "0x4000BDC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x260")]
	public bool dropWeaponDisabled;

	[Token(Token = "0x4000BDD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x268")]
	private SumalabInvoke.SumalabInvokeReference warningHandler;

	[Token(Token = "0x4000BDE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x270")]
	private EnemyWarning currentEnemyWarning;

	[Token(Token = "0x6000E29")]
	[Address(RVA = "0xF74170", Offset = "0xF74170", VA = "0xF74170", Slot = "9")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x6000E2A")]
	[Address(RVA = "0xF743C8", Offset = "0xF743C8", VA = "0xF743C8")]
	private void recoverWeapon()
	{
	}

	[Token(Token = "0x6000E2B")]
	[Address(RVA = "0xF74634", Offset = "0xF74634", VA = "0xF74634", Slot = "10")]
	protected override void OnDisable()
	{
	}

	[Token(Token = "0x6000E2C")]
	[Address(RVA = "0xF74868", Offset = "0xF74868", VA = "0xF74868", Slot = "20")]
	protected override void OnEnable()
	{
	}

	[Token(Token = "0x6000E2D")]
	[Address(RVA = "0xF749D8", Offset = "0xF749D8", VA = "0xF749D8", Slot = "11")]
	public override void SetUp(CharacterData characterData)
	{
	}

	[Token(Token = "0x6000E2E")]
	[Address(RVA = "0xF75510", Offset = "0xF75510", VA = "0xF75510")]
	public void ChangeWeapon(WeaponModel weaponModel)
	{
	}

	[Token(Token = "0x6000E2F")]
	[Address(RVA = "0xF748EC", Offset = "0xF748EC", VA = "0xF748EC")]
	private void SetWeaponPose()
	{
	}

	[Token(Token = "0x6000E30")]
	[Address(RVA = "0xF75700", Offset = "0xF75700", VA = "0xF75700", Slot = "4")]
	public override bool OnHit(Bullet bullet, Ray ray, RaycastHit hit)
	{
		return default(bool);
	}

	[Token(Token = "0x6000E31")]
	[Address(RVA = "0xF75808", Offset = "0xF75808", VA = "0xF75808", Slot = "15")]
	public override bool OnHit(Bullet bullet, Ray ray, RaycastHit hit, Collider collider, bool bRemote = false, int remoteLifes = -1)
	{
		return default(bool);
	}

	[Token(Token = "0x6000E32")]
	[Address(RVA = "0xF7652C", Offset = "0xF7652C", VA = "0xF7652C", Slot = "14")]
	public override void EnemyHit(Rigidbody _rigidbodyHit, Vector3 point, Vector3 _hitVector, float _bulletHitForce)
	{
	}

	[Token(Token = "0x6000E33")]
	[Address(RVA = "0xF7675C", Offset = "0xF7675C", VA = "0xF7675C")]
	private void checkForceDropWeapon()
	{
	}

	[Token(Token = "0x6000E34")]
	[Address(RVA = "0xF76938", Offset = "0xF76938", VA = "0xF76938")]
	public void DropWeapon()
	{
	}

	[Token(Token = "0x6000E35")]
	[Address(RVA = "0xF76DD0", Offset = "0xF76DD0", VA = "0xF76DD0", Slot = "24")]
	protected virtual void ShowBonus()
	{
	}

	[Token(Token = "0x6000E36")]
	[Address(RVA = "0xF76F6C", Offset = "0xF76F6C", VA = "0xF76F6C", Slot = "25")]
	public virtual void HitSound(bool force = false)
	{
	}

	[Token(Token = "0x6000E37")]
	[Address(RVA = "0xF74590", Offset = "0xF74590", VA = "0xF74590")]
	public void SetWeaponVisibility(bool enable)
	{
	}

	[Token(Token = "0x6000E38")]
	[Address(RVA = "0xF770D0", Offset = "0xF770D0", VA = "0xF770D0")]
	public void setCoverSkillLevel(Skill.SkillLevel coverSkillLevel)
	{
	}

	[Token(Token = "0x6000E39")]
	[Address(RVA = "0xF770D8", Offset = "0xF770D8", VA = "0xF770D8")]
	public Skill.SkillLevel getCoverSkillLevel()
	{
		return default(Skill.SkillLevel);
	}

	[Token(Token = "0x6000E3A")]
	[Address(RVA = "0xF75130", Offset = "0xF75130", VA = "0xF75130")]
	public void SetWarning(bool bWarning)
	{
	}

	[Token(Token = "0x6000E3B")]
	[Address(RVA = "0xF770E0", Offset = "0xF770E0", VA = "0xF770E0")]
	public bool IsLethalShotAllowed()
	{
		return default(bool);
	}

	[Token(Token = "0x6000E3C")]
	[Address(RVA = "0xF77198", Offset = "0xF77198", VA = "0xF77198")]
	public bool IsWarning()
	{
		return default(bool);
	}

	[Token(Token = "0x6000E3D")]
	[Address(RVA = "0xF771A0", Offset = "0xF771A0", VA = "0xF771A0")]
	public void SetAnimation(int index)
	{
	}

	[Token(Token = "0x6000E3E")]
	[Address(RVA = "0xF77254", Offset = "0xF77254", VA = "0xF77254")]
	public void UpdateTargetAndAccuracy(AimTarget target, Vector3 offset, Vector3 currentTargetPosition, bool bWarning, bool bLethalShot)
	{
	}

	[Token(Token = "0x6000E3F")]
	[Address(RVA = "0xF7736C", Offset = "0xF7736C", VA = "0xF7736C")]
	public void SetFireState(string strState, int index)
	{
	}

	[Token(Token = "0x6000E40")]
	[Address(RVA = "0xF77434", Offset = "0xF77434", VA = "0xF77434", Slot = "18")]
	public override void reloadAction()
	{
	}

	[Token(Token = "0x6000E41")]
	[Address(RVA = "0xF77640", Offset = "0xF77640", VA = "0xF77640", Slot = "19")]
	protected override void executeNextAction()
	{
	}

	[Token(Token = "0x6000E42")]
	[Address(RVA = "0xF7784C", Offset = "0xF7784C", VA = "0xF7784C", Slot = "21")]
	public override void OnlinePlayerBecomesMasterClient()
	{
	}

	[Token(Token = "0x6000E43")]
	[Address(RVA = "0xF779F0", Offset = "0xF779F0", VA = "0xF779F0")]
	public ThiefPoliceController()
	{
	}
}
[Token(Token = "0x2000253")]
public class TimeScreen : MonoBehaviour
{
	[Token(Token = "0x2000254")]
	[CompilerGenerated]
	private sealed class <showCoroutine>d__10 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000BE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000BE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000BE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TimeScreen <>4__this;

		[Token(Token = "0x4000BEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool fadePlane;

		[Token(Token = "0x4000BEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		public bool bShowTime;

		[Token(Token = "0x4000BEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private Color <offColor>5__2;

		[Token(Token = "0x4000BED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private Color <onColor>5__3;

		[Token(Token = "0x170000AC")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000E58")]
			[Address(RVA = "0xF78924", Offset = "0xF78924", VA = "0xF78924", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000AD")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000E5A")]
			[Address(RVA = "0xF7896C", Offset = "0xF7896C", VA = "0xF7896C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000E55")]
		[Address(RVA = "0xF78210", Offset = "0xF78210", VA = "0xF78210")]
		[DebuggerHidden]
		public <showCoroutine>d__10(int <>1__state)
		{
		}

		[Token(Token = "0x6000E56")]
		[Address(RVA = "0xF78538", Offset = "0xF78538", VA = "0xF78538", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000E57")]
		[Address(RVA = "0xF7853C", Offset = "0xF7853C", VA = "0xF7853C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000E59")]
		[Address(RVA = "0xF7892C", Offset = "0xF7892C", VA = "0xF7892C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000255")]
	[CompilerGenerated]
	private sealed class <hideCoroutine>d__12 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000BEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000BEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000BF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TimeScreen <>4__this;

		[Token(Token = "0x170000AE")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000E5E")]
			[Address(RVA = "0xF78C50", Offset = "0xF78C50", VA = "0xF78C50", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000AF")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000E60")]
			[Address(RVA = "0xF78C98", Offset = "0xF78C98", VA = "0xF78C98", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000E5B")]
		[Address(RVA = "0xF78494", Offset = "0xF78494", VA = "0xF78494")]
		[DebuggerHidden]
		public <hideCoroutine>d__12(int <>1__state)
		{
		}

		[Token(Token = "0x6000E5C")]
		[Address(RVA = "0xF78974", Offset = "0xF78974", VA = "0xF78974", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000E5D")]
		[Address(RVA = "0xF78978", Offset = "0xF78978", VA = "0xF78978", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000E5F")]
		[Address(RVA = "0xF78C58", Offset = "0xF78C58", VA = "0xF78C58", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000BE1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private int currentTime;

	[Token(Token = "0x4000BE2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private TextMeshPro text;

	[Token(Token = "0x4000BE3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Material plane;

	[Token(Token = "0x4000BE4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool flareLayerEnabled;

	[Token(Token = "0x4000BE5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	private bool bTimeAttackBlinkActive;

	[Token(Token = "0x4000BE6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static int[] timeSplit;

	[Token(Token = "0x6000E48")]
	[Address(RVA = "0xF77C08", Offset = "0xF77C08", VA = "0xF77C08")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000E49")]
	[Address(RVA = "0xF77CE8", Offset = "0xF77CE8", VA = "0xF77CE8")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000E4A")]
	[Address(RVA = "0xF77E0C", Offset = "0xF77E0C", VA = "0xF77E0C")]
	private void updateTime()
	{
	}

	[Token(Token = "0x6000E4B")]
	[Address(RVA = "0xF78074", Offset = "0xF78074", VA = "0xF78074")]
	public void setScreenColor(Color color)
	{
	}

	[Token(Token = "0x6000E4C")]
	[Address(RVA = "0xF78090", Offset = "0xF78090", VA = "0xF78090")]
	public void show(bool bShowTime, bool bFade)
	{
	}

	[Token(Token = "0x6000E4D")]
	[Address(RVA = "0xF7817C", Offset = "0xF7817C", VA = "0xF7817C")]
	[IteratorStateMachine(typeof(<showCoroutine>d__10))]
	private IEnumerator showCoroutine(bool bShowTime, bool fadePlane = true)
	{
		return null;
	}

	[Token(Token = "0x6000E4E")]
	[Address(RVA = "0xF78238", Offset = "0xF78238", VA = "0xF78238")]
	public void hide(bool bFade = true)
	{
	}

	[Token(Token = "0x6000E4F")]
	[Address(RVA = "0xF782C4", Offset = "0xF782C4", VA = "0xF782C4")]
	[IteratorStateMachine(typeof(<hideCoroutine>d__12))]
	private IEnumerator hideCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000E50")]
	[Address(RVA = "0xF78338", Offset = "0xF78338", VA = "0xF78338")]
	private void hideNow()
	{
	}

	[Token(Token = "0x6000E51")]
	[Address(RVA = "0xF6D99C", Offset = "0xF6D99C", VA = "0xF6D99C")]
	public static int[] getTimeSplit(float time)
	{
		return null;
	}

	[Token(Token = "0x6000E52")]
	[Address(RVA = "0xF6DB10", Offset = "0xF6DB10", VA = "0xF6DB10")]
	public static string parseTime(int i)
	{
		return null;
	}

	[Token(Token = "0x6000E53")]
	[Address(RVA = "0xF784BC", Offset = "0xF784BC", VA = "0xF784BC")]
	public TimeScreen()
	{
	}
}
[Token(Token = "0x2000256")]
public class Tutorial : MonoBehaviour
{
	[Token(Token = "0x4000BF1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static SumalabEvent OnTutorialDone;

	[Token(Token = "0x4000BF2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static bool bTutorialDone;

	[Token(Token = "0x4000BF3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Helper helper;

	[Token(Token = "0x6000E61")]
	[Address(RVA = "0xF78CA0", Offset = "0xF78CA0", VA = "0xF78CA0")]
	public bool IsTutorialDone()
	{
		return default(bool);
	}

	[Token(Token = "0x6000E62")]
	[Address(RVA = "0xF78D7C", Offset = "0xF78D7C", VA = "0xF78D7C")]
	public void Execute()
	{
	}

	[Token(Token = "0x6000E63")]
	[Address(RVA = "0xF792C4", Offset = "0xF792C4", VA = "0xF792C4")]
	public Helper GetHelper()
	{
		return null;
	}

	[Token(Token = "0x6000E64")]
	[Address(RVA = "0xF792CC", Offset = "0xF792CC", VA = "0xF792CC")]
	private void OnShotState()
	{
	}

	[Token(Token = "0x6000E65")]
	[Address(RVA = "0xF7947C", Offset = "0xF7947C", VA = "0xF7947C")]
	public Tutorial()
	{
	}
}
[Token(Token = "0x2000257")]
public class Helper : MonoBehaviour
{
	[Token(Token = "0x2000258")]
	public delegate void ShotStateEvent();

	[Token(Token = "0x2000259")]
	public enum HelperState
	{
		[Token(Token = "0x4000BFB")]
		None,
		[Token(Token = "0x4000BFC")]
		CheckSurroundings,
		[Token(Token = "0x4000BFD")]
		Calibrate,
		[Token(Token = "0x4000BFE")]
		ReloadMode,
		[Token(Token = "0x4000BFF")]
		GrabWeapon,
		[Token(Token = "0x4000C00")]
		DropMagazine,
		[Token(Token = "0x4000C01")]
		GrabMagazine,
		[Token(Token = "0x4000C02")]
		InsertMagazine,
		[Token(Token = "0x4000C03")]
		CockWeapon,
		[Token(Token = "0x4000C04")]
		Reload,
		[Token(Token = "0x4000C05")]
		Shot
	}

	[Token(Token = "0x4000BF4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ShotStateEvent OnShotState;

	[Token(Token = "0x4000BF5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Helper_ReloadMode reloadModeHelper;

	[Token(Token = "0x4000BF6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform screens;

	[Token(Token = "0x4000BF7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public HelperState helperState;

	[Token(Token = "0x4000BF8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private bool initialised;

	[Token(Token = "0x4000BF9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float lastCalibrate;

	[Token(Token = "0x6000E67")]
	[Address(RVA = "0xF790D4", Offset = "0xF790D4", VA = "0xF790D4")]
	public void Init()
	{
	}

	[Token(Token = "0x6000E68")]
	[Address(RVA = "0xF79EAC", Offset = "0xF79EAC", VA = "0xF79EAC")]
	private bool checkTwoHandsActiveWithManualReload()
	{
		return default(bool);
	}

	[Token(Token = "0x6000E69")]
	[Address(RVA = "0xF79F88", Offset = "0xF79F88", VA = "0xF79F88")]
	private bool checkTwoHandsActive()
	{
		return default(bool);
	}

	[Token(Token = "0x6000E6A")]
	[Address(RVA = "0xF7A030", Offset = "0xF7A030", VA = "0xF7A030")]
	private string getCalibrateButtonScreenMapping()
	{
		return null;
	}

	[Token(Token = "0x6000E6B")]
	[Address(RVA = "0xF79518", Offset = "0xF79518", VA = "0xF79518")]
	private void setHelperState(HelperState helperState)
	{
	}

	[Token(Token = "0x6000E6C")]
	[Address(RVA = "0xF7A524", Offset = "0xF7A524", VA = "0xF7A524")]
	private void FixWeapon()
	{
	}

	[Token(Token = "0x6000E6D")]
	[Address(RVA = "0xF7A200", Offset = "0xF7A200", VA = "0xF7A200")]
	private void setHandHelperState(SVRHand hand, ButtonsHelper.ButtonState buttonState, [Optional] string strLabel)
	{
	}

	[Token(Token = "0x6000E6E")]
	[Address(RVA = "0xF7A77C", Offset = "0xF7A77C", VA = "0xF7A77C")]
	private Weapon getCurrentWeapon()
	{
		return null;
	}

	[Token(Token = "0x6000E6F")]
	[Address(RVA = "0xF7ABF4", Offset = "0xF7ABF4", VA = "0xF7ABF4")]
	private void OnReloadModeSelected(bool autoReload)
	{
	}

	[Token(Token = "0x6000E70")]
	[Address(RVA = "0xF7AE4C", Offset = "0xF7AE4C", VA = "0xF7AE4C")]
	private bool SafeVisualArea()
	{
		return default(bool);
	}

	[Token(Token = "0x6000E71")]
	[Address(RVA = "0xF7AE54", Offset = "0xF7AE54", VA = "0xF7AE54")]
	private void Update()
	{
	}

	[Token(Token = "0x6000E72")]
	[Address(RVA = "0xF7B830", Offset = "0xF7B830", VA = "0xF7B830")]
	public Helper()
	{
	}
}
[Token(Token = "0x200025A")]
public class Helper_ReloadMode : MonoBehaviour
{
	[Token(Token = "0x4000C06")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public SumalabEvent<bool> OnReloadModeSelected;

	[Token(Token = "0x4000C07")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public SVRButton autoReloadButton;

	[Token(Token = "0x4000C08")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public SVRButton manualReloadButton;

	[Token(Token = "0x4000C09")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AudioSource show_sound;

	[Token(Token = "0x4000C0A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public AudioSource button_pressed_sound;

	[Token(Token = "0x4000C0B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool alreadyPressed;

	[Token(Token = "0x6000E77")]
	[Address(RVA = "0xF7B878", Offset = "0xF7B878", VA = "0xF7B878")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000E78")]
	[Address(RVA = "0xF7B984", Offset = "0xF7B984", VA = "0xF7B984")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000E79")]
	[Address(RVA = "0xF7A2E8", Offset = "0xF7A2E8", VA = "0xF7A2E8")]
	public void Show()
	{
	}

	[Token(Token = "0x6000E7A")]
	[Address(RVA = "0xF7AC88", Offset = "0xF7AC88", VA = "0xF7AC88")]
	public void Hide()
	{
	}

	[Token(Token = "0x6000E7B")]
	[Address(RVA = "0xF7BA74", Offset = "0xF7BA74", VA = "0xF7BA74")]
	private void AutoReloadButtonPressed()
	{
	}

	[Token(Token = "0x6000E7C")]
	[Address(RVA = "0xF7BAF4", Offset = "0xF7BAF4", VA = "0xF7BAF4")]
	private void ManualReloadButtonPressed()
	{
	}

	[Token(Token = "0x6000E7D")]
	[Address(RVA = "0xF7BB74", Offset = "0xF7BB74", VA = "0xF7BB74")]
	public Helper_ReloadMode()
	{
	}
}
[Token(Token = "0x200025B")]
public class VehicleController : MonoBehaviour
{
	[Token(Token = "0x4000C0C")]
	private const string HORIZONTAL = "Horizontal";

	[Token(Token = "0x4000C0D")]
	private const string VERTICAL = "Vertical";

	[Token(Token = "0x4000C0E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private float horizontalInput;

	[Token(Token = "0x4000C0F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private float verticalInput;

	[Token(Token = "0x4000C10")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float currentSteerAngle;

	[Token(Token = "0x4000C11")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float currentbreakForce;

	[Token(Token = "0x4000C12")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool isBreaking;

	[Token(Token = "0x4000C13")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[SerializeField]
	private float motorForce;

	[Token(Token = "0x4000C14")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private float breakForce;

	[Token(Token = "0x4000C15")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[SerializeField]
	private float maxSteerAngle;

	[Token(Token = "0x4000C16")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private WheelCollider frontLeftWheelCollider;

	[Token(Token = "0x4000C17")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private WheelCollider frontRightWheelCollider;

	[Token(Token = "0x4000C18")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private WheelCollider rearLeftWheelCollider;

	[Token(Token = "0x4000C19")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private WheelCollider rearRightWheelCollider;

	[Token(Token = "0x4000C1A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private Transform frontLeftWheelTransform;

	[Token(Token = "0x4000C1B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private Transform frontRightWheeTransform;

	[Token(Token = "0x4000C1C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private Transform rearLeftWheelTransform;

	[Token(Token = "0x4000C1D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private Transform rearRightWheelTransform;

	[Token(Token = "0x4000C1E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Transform path;

	[Token(Token = "0x4000C1F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private List<Transform> nodes;

	[Token(Token = "0x4000C20")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	private int currentNode;

	[Token(Token = "0x4000C21")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private float currentSpeed;

	[Token(Token = "0x4000C22")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private float maxSpeed;

	[Token(Token = "0x6000E7F")]
	[Address(RVA = "0xF7BC20", Offset = "0xF7BC20", VA = "0xF7BC20")]
	private void Start()
	{
	}

	[Token(Token = "0x6000E80")]
	[Address(RVA = "0xF7BDF8", Offset = "0xF7BDF8", VA = "0xF7BDF8")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000E81")]
	[Address(RVA = "0xF7BE20", Offset = "0xF7BE20", VA = "0xF7BE20")]
	private void ApplySteer()
	{
	}

	[Token(Token = "0x6000E82")]
	[Address(RVA = "0xF7BF44", Offset = "0xF7BF44", VA = "0xF7BF44")]
	private void Drive()
	{
	}

	[Token(Token = "0x6000E83")]
	[Address(RVA = "0xF7C000", Offset = "0xF7C000", VA = "0xF7C000")]
	private void CheckWaypointDistance()
	{
	}

	[Token(Token = "0x6000E84")]
	[Address(RVA = "0xF7C250", Offset = "0xF7C250", VA = "0xF7C250")]
	private void GetInput()
	{
	}

	[Token(Token = "0x6000E85")]
	[Address(RVA = "0xF7C2E0", Offset = "0xF7C2E0", VA = "0xF7C2E0")]
	private void HandleMotor()
	{
	}

	[Token(Token = "0x6000E86")]
	[Address(RVA = "0xF7C348", Offset = "0xF7C348", VA = "0xF7C348")]
	private void ApplyBreaking()
	{
	}

	[Token(Token = "0x6000E87")]
	[Address(RVA = "0xF7C3A8", Offset = "0xF7C3A8", VA = "0xF7C3A8")]
	private void HandleSteering()
	{
	}

	[Token(Token = "0x6000E88")]
	[Address(RVA = "0xF7C214", Offset = "0xF7C214", VA = "0xF7C214")]
	private void UpdateWheels()
	{
	}

	[Token(Token = "0x6000E89")]
	[Address(RVA = "0xF7C3EC", Offset = "0xF7C3EC", VA = "0xF7C3EC")]
	private void UpdateSingleWheel(WheelCollider wheelCollider, Transform wheelTransform)
	{
	}

	[Token(Token = "0x6000E8A")]
	[Address(RVA = "0xF7C458", Offset = "0xF7C458", VA = "0xF7C458")]
	public VehicleController()
	{
	}
}
[Token(Token = "0x200025C")]
public class WalkieTalkie : MonoBehaviour
{
	[Token(Token = "0x200025D")]
	public enum CommunicationEvent
	{
		[Token(Token = "0x4000C32")]
		alone = 0,
		[Token(Token = "0x4000C33")]
		ammo = 1,
		[Token(Token = "0x4000C34")]
		bomb_near = 83,
		[Token(Token = "0x4000C35")]
		buy_consumables = 2,
		[Token(Token = "0x4000C36")]
		buy_continue = 3,
		[Token(Token = "0x4000C37")]
		full_ammo = 4,
		[Token(Token = "0x4000C38")]
		gallery_badscore = 5,
		[Token(Token = "0x4000C39")]
		gallery_goodscore = 6,
		[Token(Token = "0x4000C3A")]
		gallery_headphone = 7,
		[Token(Token = "0x4000C3B")]
		gallery_newrecord = 8,
		[Token(Token = "0x4000C3C")]
		gameover = 9,
		[Token(Token = "0x4000C3D")]
		gameover_firstlocations = 10,
		[Token(Token = "0x4000C3E")]
		gameover_lastlocations = 11,
		[Token(Token = "0x4000C3F")]
		headshot = 12,
		[Token(Token = "0x4000C40")]
		hit_comp = 13,
		[Token(Token = "0x4000C41")]
		hit_player = 14,
		[Token(Token = "0x4000C42")]
		items_extra_life = 15,
		[Token(Token = "0x4000C43")]
		items_swat = 16,
		[Token(Token = "0x4000C44")]
		items_time = 17,
		[Token(Token = "0x4000C45")]
		items_weapon = 18,
		[Token(Token = "0x4000C46")]
		kill_comp = 19,
		[Token(Token = "0x4000C47")]
		kill_morpheo = 82,
		[Token(Token = "0x4000C48")]
		last_enemy = 20,
		[Token(Token = "0x4000C49")]
		last_life = 21,
		[Token(Token = "0x4000C4A")]
		menu_alleys = 22,
		[Token(Token = "0x4000C4B")]
		menu_gallery = 23,
		[Token(Token = "0x4000C4C")]
		menu_mansion = 25,
		[Token(Token = "0x4000C4D")]
		menu_office = 26,
		[Token(Token = "0x4000C4E")]
		menu_timeattack_1 = 68,
		[Token(Token = "0x4000C4F")]
		menu_timeattack_2 = 69,
		[Token(Token = "0x4000C50")]
		menu_timeattack_3 = 70,
		[Token(Token = "0x4000C51")]
		menu_challenge_1 = 84,
		[Token(Token = "0x4000C52")]
		menu_challenge_2 = 85,
		[Token(Token = "0x4000C53")]
		menu_challenge_3 = 86,
		[Token(Token = "0x4000C54")]
		mission_alleys_accomplished = 27,
		[Token(Token = "0x4000C55")]
		mission_alleys_helicopterexploded = 29,
		[Token(Token = "0x4000C56")]
		mission_alleys_helicopterexplosion = 30,
		[Token(Token = "0x4000C57")]
		mission_alleys_poker = 31,
		[Token(Token = "0x4000C58")]
		mission_alleys_rpgbalcony = 65,
		[Token(Token = "0x4000C59")]
		mission_alleys_samurai = 32,
		[Token(Token = "0x4000C5A")]
		mission_alleys_watchout = 33,
		[Token(Token = "0x4000C5B")]
		mission_mansion_accomplished = 34,
		[Token(Token = "0x4000C5C")]
		mission_mansion_laboratory = 36,
		[Token(Token = "0x4000C5D")]
		mission_mansion_missiles = 64,
		[Token(Token = "0x4000C5E")]
		mission_mansion_montoyaalive = 37,
		[Token(Token = "0x4000C5F")]
		mission_mansion_montoyadeath = 38,
		[Token(Token = "0x4000C60")]
		mission_mansion_montoyafirstfloor = 39,
		[Token(Token = "0x4000C61")]
		mission_mansion_montoyalaboratory = 40,
		[Token(Token = "0x4000C62")]
		mission_mansion_montoyaoffice = 41,
		[Token(Token = "0x4000C63")]
		mission_mansion_secretdoor = 43,
		[Token(Token = "0x4000C64")]
		mission_mansion_usebazooka = 63,
		[Token(Token = "0x4000C65")]
		mission_office_accomplished = 44,
		[Token(Token = "0x4000C66")]
		mission_office_final_jack_bauer = 71,
		[Token(Token = "0x4000C67")]
		mission_office_metrocrash = 46,
		[Token(Token = "0x4000C68")]
		mission_office_metromovement = 47,
		[Token(Token = "0x4000C69")]
		mission_office_smiths = 49,
		[Token(Token = "0x4000C6A")]
		mission_office_start = 50,
		[Token(Token = "0x4000C6B")]
		mission_office_subway = 51,
		[Token(Token = "0x4000C6C")]
		mission_timeattack_1_accomplished = 72,
		[Token(Token = "0x4000C6D")]
		mission_timeattack_1_boss_arm = 73,
		[Token(Token = "0x4000C6E")]
		mission_timeattack_1_boss_start = 74,
		[Token(Token = "0x4000C6F")]
		mission_timeattack_2_accomplished = 75,
		[Token(Token = "0x4000C70")]
		mission_timeattack_2_boss = 76,
		[Token(Token = "0x4000C71")]
		mission_timeattack_3_accomplished = 77,
		[Token(Token = "0x4000C72")]
		mission_timeattack_3_boss_end = 78,
		[Token(Token = "0x4000C73")]
		mission_timeattack_3_boss_hint = 79,
		[Token(Token = "0x4000C74")]
		next_area = 52,
		[Token(Token = "0x4000C75")]
		no_aim = 53,
		[Token(Token = "0x4000C76")]
		no_aim_menu = 54,
		[Token(Token = "0x4000C77")]
		not_shooting = 55,
		[Token(Token = "0x4000C78")]
		tutorial_calibrate = 56,
		[Token(Token = "0x4000C79")]
		tutorial_calibrate_r2 = 66,
		[Token(Token = "0x4000C7A")]
		tutorial_calibrate_t = 67,
		[Token(Token = "0x4000C7B")]
		tutorial_choose_reload = 80,
		[Token(Token = "0x4000C7C")]
		tutorial_dropmagazine = 58,
		[Token(Token = "0x4000C7D")]
		tutorial_dropmagazine_auto = 81,
		[Token(Token = "0x4000C7E")]
		tutorial_grabweapon = 59,
		[Token(Token = "0x4000C7F")]
		tutorial_reload = 60,
		[Token(Token = "0x4000C80")]
		tutorial_welcome = 62
	}

	[Serializable]
	[Token(Token = "0x200025E")]
	public class CommunicationEventData
	{
		[Token(Token = "0x4000C81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public CommunicationEvent communicationEvent;

		[Token(Token = "0x4000C82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private AudioClip[] clips;

		[Token(Token = "0x4000C83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int currentClip;

		[Token(Token = "0x4000C84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private int priority;

		[Token(Token = "0x4000C85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private bool repeat;

		[Token(Token = "0x4000C86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		private float reproduceProbability;

		[Token(Token = "0x6000E94")]
		[Address(RVA = "0xF7D2A4", Offset = "0xF7D2A4", VA = "0xF7D2A4")]
		public CommunicationEventData(CommunicationEvent communicationEvent, AudioClip[] clips, int priority, bool repeat, float reproduceProbability)
		{
		}

		[Token(Token = "0x6000E95")]
		[Address(RVA = "0xF7CF14", Offset = "0xF7CF14", VA = "0xF7CF14")]
		public AudioClip getClip()
		{
			return null;
		}

		[Token(Token = "0x6000E96")]
		[Address(RVA = "0xF7D10C", Offset = "0xF7D10C", VA = "0xF7D10C")]
		public AudioClip getClip(string clipName)
		{
			return null;
		}

		[Token(Token = "0x6000E97")]
		[Address(RVA = "0xF7CDE0", Offset = "0xF7CDE0", VA = "0xF7CDE0")]
		public bool higher(CommunicationEventData eventData)
		{
			return default(bool);
		}

		[Token(Token = "0x6000E98")]
		[Address(RVA = "0xF7CE00", Offset = "0xF7CE00", VA = "0xF7CE00")]
		public bool isPlayable(float lastCommunicationTime)
		{
			return default(bool);
		}

		[Token(Token = "0x6000E99")]
		[Address(RVA = "0xF7CC68", Offset = "0xF7CC68", VA = "0xF7CC68")]
		public void RandomizeClips()
		{
		}
	}

	[Token(Token = "0x200025F")]
	public class WalkieTalkieEvent
	{
		[Token(Token = "0x170000B0")]
		public int Priority
		{
			[Token(Token = "0x6000E9A")]
			[Address(RVA = "0xF7D308", Offset = "0xF7D308", VA = "0xF7D308")]
			[CompilerGenerated]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000E9B")]
			[Address(RVA = "0xF7D310", Offset = "0xF7D310", VA = "0xF7D310")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x170000B1")]
		public bool Repeat
		{
			[Token(Token = "0x6000E9C")]
			[Address(RVA = "0xF7D318", Offset = "0xF7D318", VA = "0xF7D318")]
			[CompilerGenerated]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000E9D")]
			[Address(RVA = "0xF7D320", Offset = "0xF7D320", VA = "0xF7D320")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x170000B2")]
		public float Probability
		{
			[Token(Token = "0x6000E9E")]
			[Address(RVA = "0xF7D32C", Offset = "0xF7D32C", VA = "0xF7D32C")]
			[CompilerGenerated]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000E9F")]
			[Address(RVA = "0xF7D334", Offset = "0xF7D334", VA = "0xF7D334")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x6000EA0")]
		[Address(RVA = "0xF7D33C", Offset = "0xF7D33C", VA = "0xF7D33C")]
		public WalkieTalkieEvent()
		{
		}
	}

	[Token(Token = "0x2000261")]
	[CompilerGenerated]
	private sealed class <PlayCoroutine>d__22 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000C8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000C8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000C8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public WalkieTalkie <>4__this;

		[Token(Token = "0x4000C8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public AudioClip clip;

		[Token(Token = "0x170000B3")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000EA6")]
			[Address(RVA = "0xF7D860", Offset = "0xF7D860", VA = "0xF7D860", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000B4")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000EA8")]
			[Address(RVA = "0xF7D8A8", Offset = "0xF7D8A8", VA = "0xF7D8A8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000EA3")]
		[Address(RVA = "0xF7D1EC", Offset = "0xF7D1EC", VA = "0xF7D1EC")]
		[DebuggerHidden]
		public <PlayCoroutine>d__22(int <>1__state)
		{
		}

		[Token(Token = "0x6000EA4")]
		[Address(RVA = "0xF7D580", Offset = "0xF7D580", VA = "0xF7D580", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000EA5")]
		[Address(RVA = "0xF7D584", Offset = "0xF7D584", VA = "0xF7D584", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000EA7")]
		[Address(RVA = "0xF7D868", Offset = "0xF7D868", VA = "0xF7D868", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000C23")]
	private const float MIN_TIME_BETWEEN_COMMUNICATIONS = 10f;

	[Token(Token = "0x4000C24")]
	private const string SOUNDS_PATH = "WalkieTalkieSounds/walkietalkie_";

	[Token(Token = "0x4000C25")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool mute;

	[Token(Token = "0x4000C26")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static WalkieTalkie Instance;

	[Token(Token = "0x4000C27")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AudioClip startCommunication;

	[Token(Token = "0x4000C28")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AudioClip endCommunication;

	[Token(Token = "0x4000C29")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private AudioSource audioSource;

	[Token(Token = "0x4000C2A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Dictionary<CommunicationEvent, CommunicationEventData> communicationEvents;

	[Token(Token = "0x4000C2B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private CommunicationEventData currentCommunicationEventData;

	[Token(Token = "0x4000C2C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Coroutine playCoroutineHandle;

	[Token(Token = "0x4000C2D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float lastCommunicationTime;

	[Token(Token = "0x4000C2E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private bool loading;

	[Token(Token = "0x4000C2F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x55")]
	private bool firstLoad;

	[Token(Token = "0x4000C30")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private ResourceRequest currentRequest;

	[Token(Token = "0x6000E8B")]
	[Address(RVA = "0xF7C468", Offset = "0xF7C468", VA = "0xF7C468")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000E8C")]
	[Address(RVA = "0xF7CAA0", Offset = "0xF7CAA0", VA = "0xF7CAA0")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000E8D")]
	[Address(RVA = "0xF7CBA0", Offset = "0xF7CBA0", VA = "0xF7CBA0")]
	public void ForceStop()
	{
	}

	[Token(Token = "0x6000E8E")]
	[Address(RVA = "0xF7C69C", Offset = "0xF7C69C", VA = "0xF7C69C")]
	private void loadClips()
	{
	}

	[Token(Token = "0x6000E8F")]
	[Address(RVA = "0xF7640C", Offset = "0xF7640C", VA = "0xF7640C")]
	public void Play(CommunicationEvent communicationEvent)
	{
	}

	[Token(Token = "0x6000E90")]
	[Address(RVA = "0xF7D008", Offset = "0xF7D008", VA = "0xF7D008")]
	public void PlayTime(CommunicationEvent communicationEvent, string minute)
	{
	}

	[Token(Token = "0x6000E91")]
	[Address(RVA = "0xF7D1AC", Offset = "0xF7D1AC", VA = "0xF7D1AC")]
	private AudioClip getClip(AudioClip[] clips)
	{
		return null;
	}

	[Token(Token = "0x6000E92")]
	[Address(RVA = "0xF7CF78", Offset = "0xF7CF78", VA = "0xF7CF78")]
	[IteratorStateMachine(typeof(<PlayCoroutine>d__22))]
	private IEnumerator PlayCoroutine(AudioClip clip)
	{
		return null;
	}

	[Token(Token = "0x6000E93")]
	[Address(RVA = "0xF7D214", Offset = "0xF7D214", VA = "0xF7D214")]
	public WalkieTalkie()
	{
	}
}
[Token(Token = "0x2000262")]
public class WalkieTalkieEventData : MonoBehaviour
{
	[Token(Token = "0x4000C90")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<WalkieTalkie.CommunicationEventData> eventData;

	[Token(Token = "0x6000EA9")]
	[Address(RVA = "0xF7D8B0", Offset = "0xF7D8B0", VA = "0xF7D8B0")]
	public WalkieTalkieEventData()
	{
	}
}
[Token(Token = "0x2000263")]
public class WeaponMiniGun : MonoBehaviour
{
	[Token(Token = "0x4000C91")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool pressed;

	[Token(Token = "0x4000C92")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Weapon weapon;

	[Token(Token = "0x6000EAA")]
	[Address(RVA = "0xF7D8B8", Offset = "0xF7D8B8", VA = "0xF7D8B8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000EAB")]
	[Address(RVA = "0xF7D910", Offset = "0xF7D910", VA = "0xF7D910")]
	private void Update()
	{
	}

	[Token(Token = "0x6000EAC")]
	[Address(RVA = "0xF7DA70", Offset = "0xF7DA70", VA = "0xF7DA70")]
	public void sendTriggerPressed(bool bTriggerPressed)
	{
	}

	[Token(Token = "0x6000EAD")]
	[Address(RVA = "0xF7DB48", Offset = "0xF7DB48", VA = "0xF7DB48")]
	public void TriggerPressed(bool bTriggerPressed)
	{
	}

	[Token(Token = "0x6000EAE")]
	[Address(RVA = "0xF7DB7C", Offset = "0xF7DB7C", VA = "0xF7DB7C")]
	public WeaponMiniGun()
	{
	}
}
[Token(Token = "0x2000264")]
public class ShowAmmoBonusInHellMode : MonoBehaviour
{
	[Token(Token = "0x4000C93")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private CommonCharacterController character;

	[Token(Token = "0x4000C94")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int hitMod;

	[Token(Token = "0x4000C95")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private int hits;

	[Token(Token = "0x4000C96")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private int lastAmmunitionBonusLifes;

	[Token(Token = "0x4000C97")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private int bonusId;

	[Token(Token = "0x6000EAF")]
	[Address(RVA = "0xF7DB84", Offset = "0xF7DB84", VA = "0xF7DB84")]
	private void Start()
	{
	}

	[Token(Token = "0x6000EB0")]
	[Address(RVA = "0xF7DCCC", Offset = "0xF7DCCC", VA = "0xF7DCCC")]
	private void OnCharacterHit(HitEvent hitEvent)
	{
	}

	[Token(Token = "0x6000EB1")]
	[Address(RVA = "0xF7DD60", Offset = "0xF7DD60", VA = "0xF7DD60")]
	private void ShowAmmunitionBonus(bool bRemote = false)
	{
	}

	[Token(Token = "0x6000EB2")]
	[Address(RVA = "0xF7E018", Offset = "0xF7E018", VA = "0xF7E018")]
	public ShowAmmoBonusInHellMode()
	{
	}
}
[Token(Token = "0x2000265")]
public class SmithAnimationEvent : MonoBehaviour
{
	[Token(Token = "0x6000EB3")]
	[Address(RVA = "0xF7E030", Offset = "0xF7E030", VA = "0xF7E030")]
	private void HitPlayer(float f)
	{
	}

	[Token(Token = "0x6000EB4")]
	[Address(RVA = "0xF7E2E8", Offset = "0xF7E2E8", VA = "0xF7E2E8")]
	public SmithAnimationEvent()
	{
	}
}
[Token(Token = "0x2000266")]
public class AssetsList : MonoBehaviour
{
	[Token(Token = "0x4000C98")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject[] modelsMain;

	[Token(Token = "0x4000C99")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Material[] v1BodyMaterials;

	[Token(Token = "0x4000C9A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Material[] v2BodyMaterials;

	[Token(Token = "0x4000C9B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Material[] v3BodyMaterials;

	[Token(Token = "0x4000C9C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Material[] v4BodyMaterials;

	[Token(Token = "0x4000C9D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Material[] v5BodyMaterials;

	[Token(Token = "0x4000C9E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Material[] ClothesMaterials;

	[Token(Token = "0x6000EB5")]
	[Address(RVA = "0xF7E2F0", Offset = "0xF7E2F0", VA = "0xF7E2F0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000EB6")]
	[Address(RVA = "0xF7E2F4", Offset = "0xF7E2F4", VA = "0xF7E2F4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000EB7")]
	[Address(RVA = "0xF7E2F8", Offset = "0xF7E2F8", VA = "0xF7E2F8")]
	public AssetsList()
	{
	}
}
[Token(Token = "0x2000267")]
public class AssetsListBP : MonoBehaviour
{
	[Token(Token = "0x4000C9F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Material[] BodyMaterials;

	[Token(Token = "0x4000CA0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Material[] ClothesMaterials;

	[Token(Token = "0x6000EB8")]
	[Address(RVA = "0xF7E420", Offset = "0xF7E420", VA = "0xF7E420")]
	private void Start()
	{
	}

	[Token(Token = "0x6000EB9")]
	[Address(RVA = "0xF7E424", Offset = "0xF7E424", VA = "0xF7E424")]
	private void Update()
	{
	}

	[Token(Token = "0x6000EBA")]
	[Address(RVA = "0xF7E428", Offset = "0xF7E428", VA = "0xF7E428")]
	public AssetsListBP()
	{
	}
}
[Token(Token = "0x2000268")]
public class ShirtlessZombieCustomization : MonoBehaviour
{
	[Token(Token = "0x2000269")]
	public enum MeshVariant
	{
		[Token(Token = "0x4000CA9")]
		V1,
		[Token(Token = "0x4000CAA")]
		V2,
		[Token(Token = "0x4000CAB")]
		V3,
		[Token(Token = "0x4000CAC")]
		V4,
		[Token(Token = "0x4000CAD")]
		V5
	}

	[Token(Token = "0x200026A")]
	public enum BodyMaterial
	{
		[Token(Token = "0x4000CAF")]
		Default,
		[Token(Token = "0x4000CB0")]
		VariantA,
		[Token(Token = "0x4000CB1")]
		Burned
	}

	[Token(Token = "0x200026B")]
	public enum ClothesMaterial
	{
		[Token(Token = "0x4000CB3")]
		V1,
		[Token(Token = "0x4000CB4")]
		V2,
		[Token(Token = "0x4000CB5")]
		V3,
		[Token(Token = "0x4000CB6")]
		V4,
		[Token(Token = "0x4000CB7")]
		V5,
		[Token(Token = "0x4000CB8")]
		BurnedV1,
		[Token(Token = "0x4000CB9")]
		BurnedV2,
		[Token(Token = "0x4000CBA")]
		BurnedV3,
		[Token(Token = "0x4000CBB")]
		BurnedV4,
		[Token(Token = "0x4000CBC")]
		BurnedV5
	}

	[Token(Token = "0x4000CA1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private int meshV;

	[Token(Token = "0x4000CA2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private int bodyM;

	[Token(Token = "0x4000CA3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int clothesM;

	[Token(Token = "0x4000CA4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private AssetsList assetsList;

	[Token(Token = "0x4000CA5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public MeshVariant meshVar;

	[Token(Token = "0x4000CA6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public BodyMaterial bodyMat;

	[Token(Token = "0x4000CA7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ClothesMaterial clothesMat;

	[Token(Token = "0x6000EBB")]
	[Address(RVA = "0xF7E4A8", Offset = "0xF7E4A8", VA = "0xF7E4A8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000EBC")]
	[Address(RVA = "0xF7E4AC", Offset = "0xF7E4AC", VA = "0xF7E4AC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000EBD")]
	[Address(RVA = "0xF7E4B0", Offset = "0xF7E4B0", VA = "0xF7E4B0")]
	public void charCustomize(int mVar, int bMat, int cMat)
	{
	}

	[Token(Token = "0x6000EBE")]
	[Address(RVA = "0xF7EA44", Offset = "0xF7EA44", VA = "0xF7EA44")]
	private void OnValidate()
	{
	}

	[Token(Token = "0x6000EBF")]
	[Address(RVA = "0xF7EA58", Offset = "0xF7EA58", VA = "0xF7EA58")]
	public ShirtlessZombieCustomization()
	{
	}
}
[Token(Token = "0x200026C")]
public class ShirtlessZombieCustomizationBP : MonoBehaviour
{
	[Token(Token = "0x200026D")]
	public enum BodyMaterial
	{
		[Token(Token = "0x4000CC3")]
		Default,
		[Token(Token = "0x4000CC4")]
		VariantA,
		[Token(Token = "0x4000CC5")]
		Burned
	}

	[Token(Token = "0x200026E")]
	public enum ClothesMaterial
	{
		[Token(Token = "0x4000CC7")]
		V1,
		[Token(Token = "0x4000CC8")]
		V2,
		[Token(Token = "0x4000CC9")]
		V3,
		[Token(Token = "0x4000CCA")]
		V4,
		[Token(Token = "0x4000CCB")]
		V5,
		[Token(Token = "0x4000CCC")]
		BurnedV1,
		[Token(Token = "0x4000CCD")]
		BurnedV2,
		[Token(Token = "0x4000CCE")]
		BurnedV3,
		[Token(Token = "0x4000CCF")]
		BurnedV4,
		[Token(Token = "0x4000CD0")]
		BurnedV5
	}

	[Token(Token = "0x4000CBD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private int bodyM;

	[Token(Token = "0x4000CBE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private int clothesM;

	[Token(Token = "0x4000CBF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private AssetsListBP assetsList;

	[Token(Token = "0x4000CC0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public BodyMaterial bodyMat;

	[Token(Token = "0x4000CC1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public ClothesMaterial clothesMat;

	[Token(Token = "0x6000EC0")]
	[Address(RVA = "0xF7EA60", Offset = "0xF7EA60", VA = "0xF7EA60")]
	private void Start()
	{
	}

	[Token(Token = "0x6000EC1")]
	[Address(RVA = "0xF7EA64", Offset = "0xF7EA64", VA = "0xF7EA64")]
	private void Update()
	{
	}

	[Token(Token = "0x6000EC2")]
	[Address(RVA = "0xF7EA68", Offset = "0xF7EA68", VA = "0xF7EA68")]
	public void charCustomize(int bMat, int cMat)
	{
	}

	[Token(Token = "0x6000EC3")]
	[Address(RVA = "0xF7F608", Offset = "0xF7F608", VA = "0xF7F608")]
	private void OnValidate()
	{
	}

	[Token(Token = "0x6000EC4")]
	[Address(RVA = "0xF7F614", Offset = "0xF7F614", VA = "0xF7F614")]
	public ShirtlessZombieCustomizationBP()
	{
	}
}
[Token(Token = "0x200026F")]
public class ShirtlessZombieInstantiate : MonoBehaviour
{
	[Token(Token = "0x2000270")]
	public enum MeshVariant
	{
		[Token(Token = "0x4000CDA")]
		V1,
		[Token(Token = "0x4000CDB")]
		V2,
		[Token(Token = "0x4000CDC")]
		V3,
		[Token(Token = "0x4000CDD")]
		V4,
		[Token(Token = "0x4000CDE")]
		V5
	}

	[Token(Token = "0x2000271")]
	public enum BodyMaterial
	{
		[Token(Token = "0x4000CE0")]
		Default,
		[Token(Token = "0x4000CE1")]
		VariantA,
		[Token(Token = "0x4000CE2")]
		Burned
	}

	[Token(Token = "0x2000272")]
	public enum ClothesMaterial
	{
		[Token(Token = "0x4000CE4")]
		V1,
		[Token(Token = "0x4000CE5")]
		V2,
		[Token(Token = "0x4000CE6")]
		V3,
		[Token(Token = "0x4000CE7")]
		V4,
		[Token(Token = "0x4000CE8")]
		V5,
		[Token(Token = "0x4000CE9")]
		BurnedV1,
		[Token(Token = "0x4000CEA")]
		BurnedV2,
		[Token(Token = "0x4000CEB")]
		BurnedV3,
		[Token(Token = "0x4000CEC")]
		BurnedV4,
		[Token(Token = "0x4000CED")]
		BurnedV5
	}

	[Token(Token = "0x4000CD1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private int meshV;

	[Token(Token = "0x4000CD2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private int bodyM;

	[Token(Token = "0x4000CD3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int clothesM;

	[Token(Token = "0x4000CD4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private AssetsList assetsList;

	[Token(Token = "0x4000CD5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform prefabObject;

	[Token(Token = "0x4000CD6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public MeshVariant meshVar;

	[Token(Token = "0x4000CD7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public BodyMaterial bodyMat;

	[Token(Token = "0x4000CD8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public ClothesMaterial clothesMat;

	[Token(Token = "0x6000EC5")]
	[Address(RVA = "0xF7F61C", Offset = "0xF7F61C", VA = "0xF7F61C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000EC6")]
	[Address(RVA = "0xF7F784", Offset = "0xF7F784", VA = "0xF7F784")]
	public ShirtlessZombieInstantiate()
	{
	}
}
[Token(Token = "0x2000273")]
public class ShirtlessZombieInstantiateBP : MonoBehaviour
{
	[Token(Token = "0x2000274")]
	public enum BodyMaterial
	{
		[Token(Token = "0x4000CF5")]
		Default,
		[Token(Token = "0x4000CF6")]
		VariantA,
		[Token(Token = "0x4000CF7")]
		Burned
	}

	[Token(Token = "0x2000275")]
	public enum ClothesMaterial
	{
		[Token(Token = "0x4000CF9")]
		V1,
		[Token(Token = "0x4000CFA")]
		V2,
		[Token(Token = "0x4000CFB")]
		V3,
		[Token(Token = "0x4000CFC")]
		V4,
		[Token(Token = "0x4000CFD")]
		V5,
		[Token(Token = "0x4000CFE")]
		BurnedV1,
		[Token(Token = "0x4000CFF")]
		BurnedV2,
		[Token(Token = "0x4000D00")]
		BurnedV3,
		[Token(Token = "0x4000D01")]
		BurnedV4,
		[Token(Token = "0x4000D02")]
		BurnedV5
	}

	[Token(Token = "0x4000CEE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private int bodyM;

	[Token(Token = "0x4000CEF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private int clothesM;

	[Token(Token = "0x4000CF0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private AssetsListBP assetsList;

	[Token(Token = "0x4000CF1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform prefabObject;

	[Token(Token = "0x4000CF2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public BodyMaterial bodyMat;

	[Token(Token = "0x4000CF3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public ClothesMaterial clothesMat;

	[Token(Token = "0x6000EC7")]
	[Address(RVA = "0xF7F78C", Offset = "0xF7F78C", VA = "0xF7F78C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000EC8")]
	[Address(RVA = "0xF7F8E8", Offset = "0xF7F8E8", VA = "0xF7F8E8")]
	public ShirtlessZombieInstantiateBP()
	{
	}
}
[Token(Token = "0x2000276")]
public class PS4LoadSave : MonoBehaviour
{
	[Token(Token = "0x6000EC9")]
	[Address(RVA = "0xF7F8F0", Offset = "0xF7F8F0", VA = "0xF7F8F0")]
	public PS4LoadSave()
	{
	}
}
[Token(Token = "0x2000277")]
public class PS4TrophyManager : TrophyManager
{
	[Token(Token = "0x6000ECA")]
	[Address(RVA = "0xF7F8F8", Offset = "0xF7F8F8", VA = "0xF7F8F8")]
	public PS4TrophyManager()
	{
	}
}
[Token(Token = "0x2000278")]
public class SteamTrophyManager : TrophyManager
{
	[Token(Token = "0x4000D03")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private List<Trophy> unlockedTrophies;

	[Token(Token = "0x4000D04")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool initialized;

	[Token(Token = "0x6000ECB")]
	[Address(RVA = "0xF7F908", Offset = "0xF7F908", VA = "0xF7F908")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000ECC")]
	[Address(RVA = "0xF7F90C", Offset = "0xF7F90C", VA = "0xF7F90C")]
	private void setTrophyUnlocked()
	{
	}

	[Token(Token = "0x6000ECD")]
	[Address(RVA = "0xF7F910", Offset = "0xF7F910", VA = "0xF7F910", Slot = "4")]
	protected override void UnlockTrophyInternal(Trophy trophy)
	{
	}

	[Token(Token = "0x6000ECE")]
	[Address(RVA = "0xF7F914", Offset = "0xF7F914", VA = "0xF7F914")]
	public SteamTrophyManager()
	{
	}
}
[Token(Token = "0x2000279")]
public class SVRHandPose : ScriptableObject
{
	[Serializable]
	[Token(Token = "0x200027A")]
	public class FingerData
	{
		[Token(Token = "0x4000D0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Vector3[] positions;

		[Token(Token = "0x4000D0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Quaternion[] rotations;

		[Token(Token = "0x6000ED0")]
		[Address(RVA = "0xF7F9A4", Offset = "0xF7F9A4", VA = "0xF7F9A4")]
		public FingerData()
		{
		}
	}

	[Token(Token = "0x4000D05")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public FingerData index;

	[Token(Token = "0x4000D06")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public FingerData middle;

	[Token(Token = "0x4000D07")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public FingerData pinky;

	[Token(Token = "0x4000D08")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public FingerData ring;

	[Token(Token = "0x4000D09")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public FingerData thumb;

	[Token(Token = "0x4000D0A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public FingerData wrist;

	[Token(Token = "0x6000ECF")]
	[Address(RVA = "0xF7F99C", Offset = "0xF7F99C", VA = "0xF7F99C")]
	public SVRHandPose()
	{
	}
}
[Token(Token = "0x200027B")]
public class SVRSpawner : MonoBehaviour
{
	[Token(Token = "0x6000ED1")]
	[Address(RVA = "0xF7F9AC", Offset = "0xF7F9AC", VA = "0xF7F9AC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000ED2")]
	[Address(RVA = "0xF7F9B0", Offset = "0xF7F9B0", VA = "0xF7F9B0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000ED3")]
	[Address(RVA = "0xF7F9B4", Offset = "0xF7F9B4", VA = "0xF7F9B4")]
	public SVRSpawner()
	{
	}
}
[Token(Token = "0x200027C")]
public class TrophyManager : MonoBehaviour
{
	[Token(Token = "0x200027D")]
	public enum Trophy
	{
		[Token(Token = "0x4000D10")]
		FirstBattle,
		[Token(Token = "0x4000D11")]
		Gameplay100,
		[Token(Token = "0x4000D12")]
		KillPartner,
		[Token(Token = "0x4000D13")]
		MakeGesture,
		[Token(Token = "0x4000D14")]
		AllBonusWeaponShooted,
		[Token(Token = "0x4000D15")]
		UnlockEverything,
		[Token(Token = "0x4000D16")]
		KillSamurai,
		[Token(Token = "0x4000D17")]
		KillMontoya,
		[Token(Token = "0x4000D18")]
		AlleysAccomplished,
		[Token(Token = "0x4000D19")]
		MansionAccomplished,
		[Token(Token = "0x4000D1A")]
		OfficeAccomplished,
		[Token(Token = "0x4000D1B")]
		AllMissionsAccomplishedHellMode
	}

	[Token(Token = "0x4000D0D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static bool initialized;

	[Token(Token = "0x4000D0E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static TrophyManager Instance;

	[Token(Token = "0x6000ED4")]
	[Address(RVA = "0xF7F9BC", Offset = "0xF7F9BC", VA = "0xF7F9BC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000ED5")]
	[Address(RVA = "0xF7FAB8", Offset = "0xF7FAB8", VA = "0xF7FAB8", Slot = "4")]
	protected virtual void UnlockTrophyInternal(Trophy trophy)
	{
	}

	[Token(Token = "0x6000ED6")]
	[Address(RVA = "0xF7FABC", Offset = "0xF7FABC", VA = "0xF7FABC")]
	public static void UnlockTrophy(Trophy trophy)
	{
	}

	[Token(Token = "0x6000ED7")]
	[Address(RVA = "0xF7F900", Offset = "0xF7F900", VA = "0xF7F900")]
	public TrophyManager()
	{
	}
}
[Token(Token = "0x200027E")]
public class YVRAppEntititlementCheck : MonoBehaviour
{
	[Token(Token = "0x4000D1C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public long appID;

	[Token(Token = "0x6000ED8")]
	[Address(RVA = "0xF7FBBC", Offset = "0xF7FBBC", VA = "0xF7FBBC")]
	public YVRAppEntititlementCheck()
	{
	}
}
[Token(Token = "0x200027F")]
public class SVRTeleport : MonoBehaviour
{
	[Token(Token = "0x6000ED9")]
	[Address(RVA = "0xF7FBD0", Offset = "0xF7FBD0", VA = "0xF7FBD0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000EDA")]
	[Address(RVA = "0xF7FBD4", Offset = "0xF7FBD4", VA = "0xF7FBD4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000EDB")]
	[Address(RVA = "0xF7FBD8", Offset = "0xF7FBD8", VA = "0xF7FBD8")]
	public SVRTeleport()
	{
	}
}
[Token(Token = "0x2000280")]
public class ButtonTriggerEvent : MonoBehaviour
{
	[Token(Token = "0x4000D1D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private SVRButton button;

	[Token(Token = "0x6000EDC")]
	[Address(RVA = "0xF7FBE0", Offset = "0xF7FBE0", VA = "0xF7FBE0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000EDD")]
	[Address(RVA = "0xF7FC38", Offset = "0xF7FC38", VA = "0xF7FC38")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000EDE")]
	[Address(RVA = "0xF7FCF0", Offset = "0xF7FCF0", VA = "0xF7FCF0")]
	public ButtonTriggerEvent()
	{
	}
}
[Token(Token = "0x2000281")]
[AttributeUsage(AttributeTargets.Field)]
public class EnumOrder : PropertyAttribute
{
	[Token(Token = "0x6000EDF")]
	[Address(RVA = "0xF7FCF8", Offset = "0xF7FCF8", VA = "0xF7FCF8")]
	public EnumOrder()
	{
	}
}
[Token(Token = "0x2000282")]
public static class ExtensionMethods
{
	[Token(Token = "0x6000EE0")]
	[Address(RVA = "0xF7FD00", Offset = "0xF7FD00", VA = "0xF7FD00")]
	public static Transform FindDeepChild(this Transform aParent, string aName)
	{
		return null;
	}

	[Token(Token = "0x6000EE1")]
	[Address(RVA = "0xF7A8FC", Offset = "0xF7A8FC", VA = "0xF7A8FC")]
	public static void SetLayerRecursively(this GameObject obj, int layer)
	{
	}
}
[Token(Token = "0x2000283")]
public class FlipGameObject : MonoBehaviour
{
	[Token(Token = "0x4000D1E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool flipX;

	[Token(Token = "0x4000D1F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool flipY;

	[Token(Token = "0x4000D20")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	public bool flipZ;

	[Token(Token = "0x6000EE2")]
	[Address(RVA = "0xF80074", Offset = "0xF80074", VA = "0xF80074")]
	public void Flip()
	{
	}

	[Token(Token = "0x6000EE3")]
	[Address(RVA = "0xF80190", Offset = "0xF80190", VA = "0xF80190")]
	private void FlipMesh(Mesh mesh)
	{
	}

	[Token(Token = "0x6000EE4")]
	[Address(RVA = "0xF802C8", Offset = "0xF802C8", VA = "0xF802C8")]
	private void FlipNormals(Mesh mesh)
	{
	}

	[Token(Token = "0x6000EE5")]
	[Address(RVA = "0xF803A4", Offset = "0xF803A4", VA = "0xF803A4")]
	public FlipGameObject()
	{
	}
}
[Token(Token = "0x2000284")]
public class FPSDisplay : MonoBehaviour
{
	[Token(Token = "0x4000D21")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float deltaTime;

	[Token(Token = "0x4000D22")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TextMesh textMesh;

	[Token(Token = "0x6000EE6")]
	[Address(RVA = "0xF803B4", Offset = "0xF803B4", VA = "0xF803B4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000EE7")]
	[Address(RVA = "0xF803E0", Offset = "0xF803E0", VA = "0xF803E0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000EE8")]
	[Address(RVA = "0xF804E0", Offset = "0xF804E0", VA = "0xF804E0")]
	public FPSDisplay()
	{
	}
}
[Token(Token = "0x2000285")]
public class GameobjectRecorder : MonoBehaviour
{
	[Token(Token = "0x6000EE9")]
	[Address(RVA = "0xF804E8", Offset = "0xF804E8", VA = "0xF804E8")]
	public GameobjectRecorder()
	{
	}
}
[Token(Token = "0x2000286")]
public class HandPoseCreator : MonoBehaviour
{
	[Token(Token = "0x4000D23")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform index;

	[Token(Token = "0x4000D24")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform middle;

	[Token(Token = "0x4000D25")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform pinky;

	[Token(Token = "0x4000D26")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform ring;

	[Token(Token = "0x4000D27")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform thumb;

	[Token(Token = "0x4000D28")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Transform wrist;

	[Token(Token = "0x6000EEA")]
	[Address(RVA = "0xF804F0", Offset = "0xF804F0", VA = "0xF804F0")]
	public HandPoseCreator()
	{
	}
}
[Token(Token = "0x2000287")]
public class HandPosePreview : MonoBehaviour
{
	[Token(Token = "0x4000D29")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public SVRHandPoser poser;

	[Token(Token = "0x4000D2A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform index;

	[Token(Token = "0x4000D2B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform middle;

	[Token(Token = "0x4000D2C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform pinky;

	[Token(Token = "0x4000D2D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform ring;

	[Token(Token = "0x4000D2E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Transform thumb;

	[Token(Token = "0x4000D2F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Transform wrist;

	[Token(Token = "0x6000EEB")]
	[Address(RVA = "0xF804F8", Offset = "0xF804F8", VA = "0xF804F8")]
	public void setPose()
	{
	}

	[Token(Token = "0x6000EEC")]
	[Address(RVA = "0xF805E0", Offset = "0xF805E0", VA = "0xF805E0")]
	private void SetFingerPose(Transform finger, SVRHandPose.FingerData fingerData)
	{
	}

	[Token(Token = "0x6000EED")]
	[Address(RVA = "0xF806F8", Offset = "0xF806F8", VA = "0xF806F8")]
	public HandPosePreview()
	{
	}
}
[Token(Token = "0x2000288")]
public interface ISVRLaserPointable
{
	[Token(Token = "0x6000EEE")]
	bool OnHoverEnter(SVRLaserPointer pointer);

	[Token(Token = "0x6000EEF")]
	bool OnHoverExit(SVRLaserPointer pointer);
}
[Token(Token = "0x2000289")]
public class MaterialRemapper : MonoBehaviour
{
	[Token(Token = "0x4000D30")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject original;

	[Token(Token = "0x4000D31")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject target;

	[Token(Token = "0x4000D32")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string materialFolder;

	[Token(Token = "0x4000D33")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public string materialShader;

	[Token(Token = "0x6000EF0")]
	[Address(RVA = "0xF80700", Offset = "0xF80700", VA = "0xF80700")]
	public MaterialRemapper()
	{
	}
}
[Token(Token = "0x200028A")]
public class Movement : MonoBehaviour
{
	[Token(Token = "0x4000D34")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform[] pathPoints;

	[Token(Token = "0x4000D35")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float speed;

	[Token(Token = "0x6000EF1")]
	[Address(RVA = "0xF80784", Offset = "0xF80784", VA = "0xF80784")]
	private void Start()
	{
	}

	[Token(Token = "0x6000EF2")]
	[Address(RVA = "0xF80924", Offset = "0xF80924", VA = "0xF80924")]
	public Movement()
	{
	}
}
[Token(Token = "0x200028B")]
public class PadPositionRotation : MonoBehaviour
{
	[Token(Token = "0x4000D36")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TextMeshPro posX;

	[Token(Token = "0x4000D37")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TextMeshPro posY;

	[Token(Token = "0x4000D38")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public TextMeshPro posZ;

	[Token(Token = "0x4000D39")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public TextMeshPro rotX;

	[Token(Token = "0x4000D3A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public TextMeshPro rotY;

	[Token(Token = "0x4000D3B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public TextMeshPro rotZ;

	[Token(Token = "0x6000EF3")]
	[Address(RVA = "0xCECF8C", Offset = "0xCECF8C", VA = "0xCECF8C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000EF4")]
	[Address(RVA = "0xCED1F4", Offset = "0xCED1F4", VA = "0xCED1F4")]
	public PadPositionRotation()
	{
	}
}
[Token(Token = "0x200028C")]
public class PadPositionRotationButton : HitTarget
{
	[Token(Token = "0x4000D3C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public Vector3 position;

	[Token(Token = "0x4000D3D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Vector3 rotation;

	[Token(Token = "0x4000D3E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public float delta;

	[Token(Token = "0x6000EF5")]
	[Address(RVA = "0xCED1FC", Offset = "0xCED1FC", VA = "0xCED1FC", Slot = "4")]
	public override bool OnHit(Bullet bullet, Ray ray, RaycastHit hit)
	{
		return default(bool);
	}

	[Token(Token = "0x6000EF6")]
	[Address(RVA = "0xCED898", Offset = "0xCED898", VA = "0xCED898")]
	public PadPositionRotationButton()
	{
	}
}
[Token(Token = "0x200028D")]
public class Pool
{
	[Token(Token = "0x4000D3F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private GameObject pooledObject;

	[Token(Token = "0x4000D40")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool grow;

	[Token(Token = "0x4000D41")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private List<GameObject> pooledObjects;

	[Token(Token = "0x6000EF7")]
	[Address(RVA = "0xCED8A0", Offset = "0xCED8A0", VA = "0xCED8A0")]
	public void initialise(GameObject pooledObject, int poolSize, bool grow)
	{
	}

	[Token(Token = "0x6000EF8")]
	[Address(RVA = "0xCEDA38", Offset = "0xCEDA38", VA = "0xCEDA38")]
	public GameObject GetPooledObject([Optional] string strName)
	{
		return null;
	}

	[Token(Token = "0x6000EF9")]
	public T GetPooledObject<T>() where T : MonoBehaviour
	{
		return null;
	}

	[Token(Token = "0x6000EFA")]
	[Address(RVA = "0xCEDCC8", Offset = "0xCEDCC8", VA = "0xCEDCC8")]
	public GameObject GetPooledObjectData()
	{
		return null;
	}

	[Token(Token = "0x6000EFB")]
	[Address(RVA = "0xCEDCD0", Offset = "0xCEDCD0", VA = "0xCEDCD0")]
	public void Clear()
	{
	}

	[Token(Token = "0x6000EFC")]
	[Address(RVA = "0xCEDDD0", Offset = "0xCEDDD0", VA = "0xCEDDD0")]
	public Pool()
	{
	}
}
[Token(Token = "0x200028E")]
public class PoolManager : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x200028F")]
	public class PoolData
	{
		[Token(Token = "0x4000D45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public GameObject poolObject;

		[Token(Token = "0x4000D46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int poolSize;

		[Token(Token = "0x4000D47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public bool growable;

		[Token(Token = "0x6000F07")]
		[Address(RVA = "0xCEE48C", Offset = "0xCEE48C", VA = "0xCEE48C")]
		public PoolData(GameObject poolObject, int poolSize, bool growable)
		{
		}
	}

	[Token(Token = "0x4000D42")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public PoolData[] poolData;

	[Token(Token = "0x4000D43")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static PoolManager Instance;

	[Token(Token = "0x4000D44")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Dictionary<string, Pool> pools;

	[Token(Token = "0x6000EFD")]
	[Address(RVA = "0xCEDDD8", Offset = "0xCEDDD8", VA = "0xCEDDD8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000EFE")]
	[Address(RVA = "0xCEDF2C", Offset = "0xCEDF2C", VA = "0xCEDF2C")]
	public void AddPool(string path, [Optional] Action action)
	{
	}

	[Token(Token = "0x6000EFF")]
	[Address(RVA = "0xCEE058", Offset = "0xCEE058", VA = "0xCEE058")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000F00")]
	[Address(RVA = "0xCEE0AC", Offset = "0xCEE0AC", VA = "0xCEE0AC")]
	public bool HasPool(string poolType)
	{
		return default(bool);
	}

	[Token(Token = "0x6000F01")]
	[Address(RVA = "0xCEE104", Offset = "0xCEE104", VA = "0xCEE104")]
	public Pool GetPool(string poolType)
	{
		return null;
	}

	[Token(Token = "0x6000F02")]
	[Address(RVA = "0xCEE218", Offset = "0xCEE218", VA = "0xCEE218")]
	public Dictionary<string, Pool> GetPools()
	{
		return null;
	}

	[Token(Token = "0x6000F03")]
	[Address(RVA = "0xCEE220", Offset = "0xCEE220", VA = "0xCEE220")]
	public void AddPool(string poolName, Pool pool)
	{
	}

	[Token(Token = "0x6000F04")]
	[Address(RVA = "0xCEE288", Offset = "0xCEE288", VA = "0xCEE288")]
	public void AddPool(PoolData poolData)
	{
	}

	[Token(Token = "0x6000F05")]
	[Address(RVA = "0xCEE344", Offset = "0xCEE344", VA = "0xCEE344")]
	public void RemovePool(string poolName)
	{
	}

	[Token(Token = "0x6000F06")]
	[Address(RVA = "0xCEE404", Offset = "0xCEE404", VA = "0xCEE404")]
	public PoolManager()
	{
	}
}
[Token(Token = "0x2000291")]
public class PoolObject : MonoBehaviour
{
	[Token(Token = "0x6000F0A")]
	[Address(RVA = "0xCEE688", Offset = "0xCEE688", VA = "0xCEE688")]
	public PoolObject()
	{
	}
}
[Token(Token = "0x2000292")]
public class PoolScene : MonoBehaviour
{
	[Token(Token = "0x4000D4B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public PoolManager.PoolData[] poolData;

	[Token(Token = "0x6000F0B")]
	[Address(RVA = "0xCEE690", Offset = "0xCEE690", VA = "0xCEE690")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000F0C")]
	[Address(RVA = "0xCEE694", Offset = "0xCEE694", VA = "0xCEE694")]
	private void RegisterPool()
	{
	}

	[Token(Token = "0x6000F0D")]
	[Address(RVA = "0xCEE7FC", Offset = "0xCEE7FC", VA = "0xCEE7FC")]
	private void UnregisterPool()
	{
	}

	[Token(Token = "0x6000F0E")]
	[Address(RVA = "0xCEE8F0", Offset = "0xCEE8F0", VA = "0xCEE8F0")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000F0F")]
	[Address(RVA = "0xCEE8F4", Offset = "0xCEE8F4", VA = "0xCEE8F4")]
	public PoolScene()
	{
	}
}
[Token(Token = "0x2000293")]
public class QualitySelector : MonoBehaviour
{
	[Token(Token = "0x2000294")]
	public enum Platform
	{
		[Token(Token = "0x4000D4E")]
		PC,
		[Token(Token = "0x4000D4F")]
		Quest,
		[Token(Token = "0x4000D50")]
		Quest2,
		[Token(Token = "0x4000D51")]
		PS4
	}

	[Serializable]
	[Token(Token = "0x2000295")]
	public class Data
	{
		[Token(Token = "0x4000D52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Platform platform;

		[Token(Token = "0x4000D53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int qualityLevel;

		[Token(Token = "0x6000F13")]
		[Address(RVA = "0xCEEC0C", Offset = "0xCEEC0C", VA = "0xCEEC0C")]
		public Data(Platform platform, int qualityLevel)
		{
		}
	}

	[Token(Token = "0x4000D4C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[HideInInspector]
	public List<Data> data;

	[Token(Token = "0x6000F10")]
	[Address(RVA = "0xCEE8FC", Offset = "0xCEE8FC", VA = "0xCEE8FC")]
	public void Start()
	{
	}

	[Token(Token = "0x6000F11")]
	[Address(RVA = "0xCEEA24", Offset = "0xCEEA24", VA = "0xCEEA24")]
	private int GetQualityLevel(Platform platform)
	{
		return default(int);
	}

	[Token(Token = "0x6000F12")]
	[Address(RVA = "0xCEEB84", Offset = "0xCEEB84", VA = "0xCEEB84")]
	public QualitySelector()
	{
	}
}
[Token(Token = "0x2000296")]
public class RemapBones : MonoBehaviour
{
	[Token(Token = "0x4000D54")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform bonesRoot;

	[Token(Token = "0x6000F14")]
	[Address(RVA = "0xCEEC38", Offset = "0xCEEC38", VA = "0xCEEC38")]
	public void CopyBonesFrom()
	{
	}

	[Token(Token = "0x6000F15")]
	[Address(RVA = "0xCEF160", Offset = "0xCEF160", VA = "0xCEF160")]
	public RemapBones()
	{
	}
}
[Token(Token = "0x2000297")]
public class RenameCharacters : MonoBehaviour
{
	[Token(Token = "0x4000D55")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public RenameCharactersData data;

	[Token(Token = "0x4000D56")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string filename;

	[Token(Token = "0x6000F16")]
	[Address(RVA = "0xCEF168", Offset = "0xCEF168", VA = "0xCEF168")]
	public RenameCharacters()
	{
	}
}
[Token(Token = "0x2000298")]
public class RenameCharactersData : ScriptableObject
{
	[Serializable]
	[Token(Token = "0x2000299")]
	public class Data
	{
		[Token(Token = "0x4000D58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string path;

		[Token(Token = "0x4000D59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string pool;

		[Token(Token = "0x4000D5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string set;

		[Token(Token = "0x6000F18")]
		[Address(RVA = "0xCEF178", Offset = "0xCEF178", VA = "0xCEF178")]
		public Data()
		{
		}
	}

	[Token(Token = "0x4000D57")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<Data> data;

	[Token(Token = "0x6000F17")]
	[Address(RVA = "0xCEF170", Offset = "0xCEF170", VA = "0xCEF170")]
	public RenameCharactersData()
	{
	}
}
[Token(Token = "0x200029A")]
public class SetAnimatorPositions : MonoBehaviour
{
	[Token(Token = "0x200029B")]
	private class Positions
	{
		[Token(Token = "0x4000D62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Vector3 position;

		[Token(Token = "0x4000D63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Quaternion rotation;

		[Token(Token = "0x4000D64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public Vector3 scale;

		[Token(Token = "0x6000F1D")]
		[Address(RVA = "0xCEF45C", Offset = "0xCEF45C", VA = "0xCEF45C")]
		public Positions()
		{
		}
	}

	[Token(Token = "0x4000D5B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Animator animator;

	[Token(Token = "0x4000D5C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string animationName;

	[Token(Token = "0x4000D5D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int layer;

	[Token(Token = "0x4000D5E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float normalizedTime;

	[Token(Token = "0x4000D5F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool savePositions;

	[Token(Token = "0x4000D60")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	private bool savingPositions;

	[Token(Token = "0x4000D61")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Dictionary<string, Positions> data;

	[Token(Token = "0x6000F19")]
	[Address(RVA = "0xCEF180", Offset = "0xCEF180", VA = "0xCEF180")]
	public void setAnimationFrame()
	{
	}

	[Token(Token = "0x6000F1A")]
	[Address(RVA = "0xCEF270", Offset = "0xCEF270", VA = "0xCEF270")]
	public void _savePositions()
	{
	}

	[Token(Token = "0x6000F1B")]
	[Address(RVA = "0xCEF464", Offset = "0xCEF464", VA = "0xCEF464")]
	private void _applyPositions()
	{
	}

	[Token(Token = "0x6000F1C")]
	[Address(RVA = "0xCEF668", Offset = "0xCEF668", VA = "0xCEF668")]
	public SetAnimatorPositions()
	{
	}
}
[Token(Token = "0x200029C")]
public class SVRButton : SVRInteractable
{
	[Token(Token = "0x4000D65")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public SumalabEvent OnButtonPressed;

	[Token(Token = "0x4000D66")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public float movementSpeed;

	[Token(Token = "0x4000D67")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	public bool dynamicPose;

	[Token(Token = "0x4000D68")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private Vector3 idlePosition;

	[Token(Token = "0x4000D69")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	private Vector3 pressedPosition;

	[Token(Token = "0x4000D6A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private InterationStyle previousInteractionStyle;

	[Token(Token = "0x6000F1E")]
	[Address(RVA = "0xCEF71C", Offset = "0xCEF71C", VA = "0xCEF71C", Slot = "5")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x6000F1F")]
	[Address(RVA = "0xCEF7C8", Offset = "0xCEF7C8", VA = "0xCEF7C8", Slot = "9")]
	public override void BeginInteraction(SVRHand hand)
	{
	}

	[Token(Token = "0x6000F20")]
	[Address(RVA = "0xCEF92C", Offset = "0xCEF92C", VA = "0xCEF92C", Slot = "18")]
	public override Transform GetInteractionPoint(SVRHand hand)
	{
		return null;
	}

	[Token(Token = "0x6000F21")]
	[Address(RVA = "0xCEF808", Offset = "0xCEF808", VA = "0xCEF808")]
	public void PressDown()
	{
	}

	[Token(Token = "0x6000F22")]
	[Address(RVA = "0xCEF9D0", Offset = "0xCEF9D0", VA = "0xCEF9D0")]
	public void PressUp()
	{
	}

	[Token(Token = "0x6000F23")]
	[Address(RVA = "0xCEFAE4", Offset = "0xCEFAE4", VA = "0xCEFAE4")]
	public SVRButton()
	{
	}
}
[Token(Token = "0x200029D")]
public class TimeOutAlive : MonoBehaviour
{
	[Token(Token = "0x4000D6B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float aliveTime;

	[Token(Token = "0x4000D6C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool destroy;

	[Token(Token = "0x6000F24")]
	[Address(RVA = "0xCEFB9C", Offset = "0xCEFB9C", VA = "0xCEFB9C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000F25")]
	[Address(RVA = "0xCEFBEC", Offset = "0xCEFBEC", VA = "0xCEFBEC")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000F26")]
	[Address(RVA = "0xCEFC38", Offset = "0xCEFC38", VA = "0xCEFC38")]
	public void setTimeout(float f)
	{
	}

	[Token(Token = "0x6000F27")]
	[Address(RVA = "0xCEFCC4", Offset = "0xCEFCC4", VA = "0xCEFCC4")]
	private void TimeOut()
	{
	}

	[Token(Token = "0x6000F28")]
	[Address(RVA = "0xCEFD64", Offset = "0xCEFD64", VA = "0xCEFD64")]
	public TimeOutAlive()
	{
	}
}
[Token(Token = "0x200029E")]
public class TransformHelper : MonoBehaviour
{
	[Token(Token = "0x4000D6D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float HandleSize;

	[Token(Token = "0x6000F29")]
	[Address(RVA = "0xCEFD74", Offset = "0xCEFD74", VA = "0xCEFD74")]
	private void Start()
	{
	}

	[Token(Token = "0x6000F2A")]
	[Address(RVA = "0xCEFD78", Offset = "0xCEFD78", VA = "0xCEFD78")]
	private void Update()
	{
	}

	[Token(Token = "0x6000F2B")]
	[Address(RVA = "0xCEFD7C", Offset = "0xCEFD7C", VA = "0xCEFD7C")]
	public TransformHelper()
	{
	}
}
[Token(Token = "0x200029F")]
public interface IWeapon
{
	[Token(Token = "0x6000F2C")]
	Bullet RemoteShot(string id, HitTarget owner, Vector3 position, Vector3 targetPosition, int bulletsCount);

	[Token(Token = "0x6000F2D")]
	int GetBullets();

	[Token(Token = "0x6000F2E")]
	Transform GetFirePoint();

	[Token(Token = "0x6000F2F")]
	bool remoteShotOverrideFirePoint();
}
[Token(Token = "0x20002A0")]
public class BezierTest : MonoBehaviour
{
	[Token(Token = "0x4000D6E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform initTransform;

	[Token(Token = "0x4000D6F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform targetTransform;

	[Token(Token = "0x4000D70")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform controlTransform;

	[Token(Token = "0x4000D71")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Vector3 initPosition;

	[Token(Token = "0x4000D72")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public Vector3 targetPosition;

	[Token(Token = "0x4000D73")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Vector3 controlPoint;

	[Token(Token = "0x4000D74")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public float speed;

	[Token(Token = "0x4000D75")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public float length;

	[Token(Token = "0x4000D76")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public float duration;

	[Token(Token = "0x4000D77")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public float timeElapsed;

	[Token(Token = "0x4000D78")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public float arcHeight;

	[Token(Token = "0x4000D79")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public float arc;

	[Token(Token = "0x6000F30")]
	[Address(RVA = "0xCEFD90", Offset = "0xCEFD90", VA = "0xCEFD90")]
	private void Start()
	{
	}

	[Token(Token = "0x6000F31")]
	[Address(RVA = "0xCEFF0C", Offset = "0xCEFF0C", VA = "0xCEFF0C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000F32")]
	[Address(RVA = "0xCEFF88", Offset = "0xCEFF88", VA = "0xCEFF88")]
	private Vector3 GetNextPoint(float t)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000F33")]
	[Address(RVA = "0xCEFE04", Offset = "0xCEFE04", VA = "0xCEFE04")]
	private float GetCurveLength()
	{
		return default(float);
	}

	[Token(Token = "0x6000F34")]
	[Address(RVA = "0xCEFFE8", Offset = "0xCEFFE8", VA = "0xCEFFE8")]
	public BezierTest()
	{
	}
}
[Token(Token = "0x20002A1")]
public class BulletManager : MonoBehaviour
{
	[Token(Token = "0x4000D7A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static BulletManager Instance;

	[Token(Token = "0x4000D7B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public MB3_MeshBaker meshBaker;

	[Token(Token = "0x4000D7C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Pool bulletPool;

	[Token(Token = "0x4000D7D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private List<GameObject> renderersToAdd;

	[Token(Token = "0x4000D7E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private List<GameObject> renderersToRemove;

	[Token(Token = "0x4000D7F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private SkinnedMeshRenderer skinnedMesh;

	[Token(Token = "0x6000F35")]
	[Address(RVA = "0xCEFFFC", Offset = "0xCEFFFC", VA = "0xCEFFFC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000F36")]
	[Address(RVA = "0xCF00B0", Offset = "0xCF00B0", VA = "0xCF00B0")]
	public Bullet GetBullet(string bulletPoolName)
	{
		return null;
	}

	[Token(Token = "0x6000F37")]
	[Address(RVA = "0xCF02EC", Offset = "0xCF02EC", VA = "0xCF02EC")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000F38")]
	[Address(RVA = "0xCF0510", Offset = "0xCF0510", VA = "0xCF0510")]
	public BulletManager()
	{
	}
}
[Token(Token = "0x20002A3")]
public class HittableMissile : HitTarget, Explosive
{
	[Token(Token = "0x4000D82")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Missile missile;

	[Token(Token = "0x4000D83")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject crosshair;

	[Token(Token = "0x4000D84")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Collider col;

	[Token(Token = "0x4000D85")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Vector3 lastPosition;

	[Token(Token = "0x4000D86")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private bool hittableEnabled;

	[Token(Token = "0x4000D87")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private float launchTime;

	[Token(Token = "0x6000F3B")]
	[Address(RVA = "0xCF0690", Offset = "0xCF0690", VA = "0xCF0690")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000F3C")]
	[Address(RVA = "0xCF06D4", Offset = "0xCF06D4", VA = "0xCF06D4")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000F3D")]
	[Address(RVA = "0xCF0774", Offset = "0xCF0774", VA = "0xCF0774")]
	private void Update()
	{
	}

	[Token(Token = "0x6000F3E")]
	[Address(RVA = "0xCF0AC0", Offset = "0xCF0AC0", VA = "0xCF0AC0", Slot = "4")]
	public override bool OnHit(Bullet bullet, Ray ray, RaycastHit hit)
	{
		return default(bool);
	}

	[Token(Token = "0x6000F3F")]
	[Address(RVA = "0xCF0A6C", Offset = "0xCF0A6C", VA = "0xCF0A6C", Slot = "9")]
	public void Explode(bool b = false)
	{
	}

	[Token(Token = "0x6000F40")]
	[Address(RVA = "0xCF0B54", Offset = "0xCF0B54", VA = "0xCF0B54")]
	public HittableMissile()
	{
	}
}
[Token(Token = "0x20002A4")]
public interface IAutoReloadController
{
	[Token(Token = "0x6000F41")]
	bool HasMagazinesAvailable();
}
[Token(Token = "0x20002A5")]
public class IKDualWield : IKExecutionOrder
{
	[Token(Token = "0x6000F42")]
	[Address(RVA = "0xCF0B5C", Offset = "0xCF0B5C", VA = "0xCF0B5C", Slot = "4")]
	protected override void LateUpdate()
	{
	}

	[Token(Token = "0x6000F43")]
	[Address(RVA = "0xCF0C7C", Offset = "0xCF0C7C", VA = "0xCF0C7C")]
	public IKDualWield()
	{
	}
}
[Token(Token = "0x20002A6")]
public class SVRGrenade : SVRInteractable
{
	[Token(Token = "0x4000D88")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public float timeToExplode;

	[Token(Token = "0x4000D89")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	public float explosionRadius;

	[Token(Token = "0x4000D8A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public float damage;

	[Token(Token = "0x4000D8B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	public bool explodeOnCollision;

	[Token(Token = "0x4000D8C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public LayerMask collisionLayerMask;

	[Token(Token = "0x4000D8D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public GameObject explosion;

	[Token(Token = "0x4000D8E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public GameObject model;

	[Token(Token = "0x4000D8F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public SVRInteractable pullRing;

	[Token(Token = "0x4000D90")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private bool activated;

	[Token(Token = "0x6000F44")]
	[Address(RVA = "0xCF0C84", Offset = "0xCF0C84", VA = "0xCF0C84", Slot = "9")]
	public override void BeginInteraction(SVRHand hand)
	{
	}

	[Token(Token = "0x6000F45")]
	[Address(RVA = "0xCF0CA4", Offset = "0xCF0CA4", VA = "0xCF0CA4")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x6000F46")]
	[Address(RVA = "0xCF11E8", Offset = "0xCF11E8", VA = "0xCF11E8")]
	private void Disable()
	{
	}

	[Token(Token = "0x6000F47")]
	[Address(RVA = "0xCF0D44", Offset = "0xCF0D44", VA = "0xCF0D44")]
	private void Explode()
	{
	}

	[Token(Token = "0x6000F48")]
	[Address(RVA = "0xCF1254", Offset = "0xCF1254", VA = "0xCF1254")]
	public SVRGrenade()
	{
	}
}
[Token(Token = "0x20002A7")]
public class SwatShape : MonoBehaviour
{
	[Token(Token = "0x6000F49")]
	[Address(RVA = "0xCF12C4", Offset = "0xCF12C4", VA = "0xCF12C4")]
	public SwatShape()
	{
	}
}
[Token(Token = "0x20002A8")]
public class ResetPosition : MonoBehaviour
{
	[Token(Token = "0x4000D91")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float distanceToReset;

	[Token(Token = "0x4000D92")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private Vector3 startPosition;

	[Token(Token = "0x6000F4A")]
	[Address(RVA = "0xCF12CC", Offset = "0xCF12CC", VA = "0xCF12CC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000F4B")]
	[Address(RVA = "0xCF12FC", Offset = "0xCF12FC", VA = "0xCF12FC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000F4C")]
	[Address(RVA = "0xCF13F4", Offset = "0xCF13F4", VA = "0xCF13F4")]
	public ResetPosition()
	{
	}
}
[Token(Token = "0x20002A9")]
public class Spin : MonoBehaviour
{
	[Token(Token = "0x4000D93")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float speed;

	[Token(Token = "0x6000F4D")]
	[Address(RVA = "0xCF1404", Offset = "0xCF1404", VA = "0xCF1404")]
	private void Update()
	{
	}

	[Token(Token = "0x6000F4E")]
	[Address(RVA = "0xCF149C", Offset = "0xCF149C", VA = "0xCF149C")]
	public Spin()
	{
	}
}
[Token(Token = "0x20002AA")]
public class UnlockPlayer : MonoBehaviour
{
	[Token(Token = "0x4000D94")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public UIButton returnButton;

	[Token(Token = "0x4000D95")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool bButtonPressed;

	[Token(Token = "0x6000F4F")]
	[Address(RVA = "0xCF14AC", Offset = "0xCF14AC", VA = "0xCF14AC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000F50")]
	[Address(RVA = "0xCF1628", Offset = "0xCF1628", VA = "0xCF1628")]
	private void OnReturnButtonPressed()
	{
	}

	[Token(Token = "0x6000F51")]
	[Address(RVA = "0xCF1644", Offset = "0xCF1644", VA = "0xCF1644")]
	private void ExitMission(bool retry)
	{
	}

	[Token(Token = "0x6000F52")]
	[Address(RVA = "0xCF182C", Offset = "0xCF182C", VA = "0xCF182C")]
	public UnlockPlayer()
	{
	}
}
[Token(Token = "0x20002AD")]
public class ObjectRotate : MonoBehaviour
{
	[Token(Token = "0x4000D9A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 endAngles;

	[Token(Token = "0x4000D9B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float speed;

	[Token(Token = "0x4000D9C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Vector3 startAngles;

	[Token(Token = "0x6000F59")]
	[Address(RVA = "0xCF1A28", Offset = "0xCF1A28", VA = "0xCF1A28")]
	private void Start()
	{
	}

	[Token(Token = "0x6000F5A")]
	[Address(RVA = "0xCF1A58", Offset = "0xCF1A58", VA = "0xCF1A58")]
	private void Update()
	{
	}

	[Token(Token = "0x6000F5B")]
	[Address(RVA = "0xCF1B40", Offset = "0xCF1B40", VA = "0xCF1B40")]
	public ObjectRotate()
	{
	}
}
[Token(Token = "0x20002AE")]
[ExecuteInEditMode]
[AddComponentMenu("")]
public class VolumetricLightDirectionalSync : MonoBehaviour
{
	[Token(Token = "0x4000D9D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Light directionalLight;

	[Token(Token = "0x4000D9E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Light fakeLight;

	[Token(Token = "0x6000F5C")]
	[Address(RVA = "0xCF1B50", Offset = "0xCF1B50", VA = "0xCF1B50")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000F5D")]
	[Address(RVA = "0xCF1BA8", Offset = "0xCF1BA8", VA = "0xCF1BA8")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000F5E")]
	[Address(RVA = "0xCF1CA4", Offset = "0xCF1CA4", VA = "0xCF1CA4")]
	public VolumetricLightDirectionalSync()
	{
	}
}
[Token(Token = "0x20002AF")]
public class CannonBehavior : MonoBehaviour
{
	[Token(Token = "0x4000D9F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform m_cannonRot;

	[Token(Token = "0x4000DA0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform m_muzzle;

	[Token(Token = "0x4000DA1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject m_shotPrefab;

	[Token(Token = "0x4000DA2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Texture2D m_guiTexture;

	[Token(Token = "0x6000F5F")]
	[Address(RVA = "0xCF1CAC", Offset = "0xCF1CAC", VA = "0xCF1CAC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000F60")]
	[Address(RVA = "0xCF1CB0", Offset = "0xCF1CB0", VA = "0xCF1CB0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000F61")]
	[Address(RVA = "0xCF1EEC", Offset = "0xCF1EEC", VA = "0xCF1EEC")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x6000F62")]
	[Address(RVA = "0xCF1FC8", Offset = "0xCF1FC8", VA = "0xCF1FC8")]
	public CannonBehavior()
	{
	}
}
[Token(Token = "0x20002B0")]
public class CreateSinShapedLineStrip : MonoBehaviour
{
	[Token(Token = "0x4000DA3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int m_numVertices;

	[Token(Token = "0x4000DA4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Material m_volumetricLineStripMaterial;

	[Token(Token = "0x4000DA5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Color m_color;

	[Token(Token = "0x4000DA6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float m_start;

	[Token(Token = "0x4000DA7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float m_end;

	[Token(Token = "0x6000F63")]
	[Address(RVA = "0xCF1FD0", Offset = "0xCF1FD0", VA = "0xCF1FD0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000F64")]
	[Address(RVA = "0xCF2210", Offset = "0xCF2210", VA = "0xCF2210")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x6000F65")]
	[Address(RVA = "0xCF22FC", Offset = "0xCF22FC", VA = "0xCF22FC")]
	public CreateSinShapedLineStrip()
	{
	}
}
[Token(Token = "0x20002B1")]
public class ShotBehavior : MonoBehaviour
{
	[Token(Token = "0x6000F66")]
	[Address(RVA = "0xCF2318", Offset = "0xCF2318", VA = "0xCF2318")]
	private void Start()
	{
	}

	[Token(Token = "0x6000F67")]
	[Address(RVA = "0xCF231C", Offset = "0xCF231C", VA = "0xCF231C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000F68")]
	[Address(RVA = "0xCF23D4", Offset = "0xCF23D4", VA = "0xCF23D4")]
	public ShotBehavior()
	{
	}
}
[Token(Token = "0x20002B2")]
public class VolumetricLineSettings : MonoBehaviour
{
	[Token(Token = "0x4000DA8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private bool m_disableFieldOfViewScaling;

	[Token(Token = "0x6000F69")]
	[Address(RVA = "0xCF23DC", Offset = "0xCF23DC", VA = "0xCF23DC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000F6A")]
	[Address(RVA = "0xCF2438", Offset = "0xCF2438", VA = "0xCF2438")]
	public VolumetricLineSettings()
	{
	}
}
[Token(Token = "0x20002B3")]
public class WaitOverrideForQuestDemo : MonoBehaviour
{
	[Token(Token = "0x6000F6B")]
	[Address(RVA = "0xCF2440", Offset = "0xCF2440", VA = "0xCF2440")]
	private void Start()
	{
	}

	[Token(Token = "0x6000F6C")]
	[Address(RVA = "0xCF255C", Offset = "0xCF255C", VA = "0xCF255C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000F6D")]
	[Address(RVA = "0xCF2560", Offset = "0xCF2560", VA = "0xCF2560")]
	public WaitOverrideForQuestDemo()
	{
	}
}
[Token(Token = "0x20002B5")]
public class Barrel_Explode : MonoBehaviour
{
	[Token(Token = "0x20002B6")]
	[CompilerGenerated]
	private sealed class <FadeLight>d__13 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000DB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000DB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000DB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Barrel_Explode <>4__this;

		[Token(Token = "0x170000B5")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000F77")]
			[Address(RVA = "0xCF2914", Offset = "0xCF2914", VA = "0xCF2914", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000B6")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000F79")]
			[Address(RVA = "0xCF295C", Offset = "0xCF295C", VA = "0xCF295C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000F74")]
		[Address(RVA = "0xCF27CC", Offset = "0xCF27CC", VA = "0xCF27CC")]
		[DebuggerHidden]
		public <FadeLight>d__13(int <>1__state)
		{
		}

		[Token(Token = "0x6000F75")]
		[Address(RVA = "0xCF280C", Offset = "0xCF280C", VA = "0xCF280C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000F76")]
		[Address(RVA = "0xCF2810", Offset = "0xCF2810", VA = "0xCF2810", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000F78")]
		[Address(RVA = "0xCF291C", Offset = "0xCF291C", VA = "0xCF291C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000DAB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject BarrelExplode;

	[Token(Token = "0x4000DAC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AnimationClip BarrelExplodeAnim;

	[Token(Token = "0x4000DAD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ParticleSystem ExplodeVideoParticles;

	[Token(Token = "0x4000DAE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ParticleSystem SmokeParticles;

	[Token(Token = "0x4000DAF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ParticleSystem SparkParticles;

	[Token(Token = "0x4000DB0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Light ExplodeLight;

	[Token(Token = "0x4000DB1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public AudioSource ExplodeAudio;

	[Token(Token = "0x4000DB2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject ScorchMark;

	[Token(Token = "0x4000DB3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float fadeStart;

	[Token(Token = "0x4000DB4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private float fadeEnd;

	[Token(Token = "0x4000DB5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private float fadeTime;

	[Token(Token = "0x4000DB6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private float t;

	[Token(Token = "0x6000F71")]
	[Address(RVA = "0xCF263C", Offset = "0xCF263C", VA = "0xCF263C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000F72")]
	[Address(RVA = "0xCF2758", Offset = "0xCF2758", VA = "0xCF2758")]
	[IteratorStateMachine(typeof(<FadeLight>d__13))]
	private IEnumerator FadeLight()
	{
		return null;
	}

	[Token(Token = "0x6000F73")]
	[Address(RVA = "0xCF27F4", Offset = "0xCF27F4", VA = "0xCF27F4")]
	public Barrel_Explode()
	{
	}
}
[Token(Token = "0x20002B7")]
public class Crate_Explode : MonoBehaviour
{
	[Token(Token = "0x20002B8")]
	[CompilerGenerated]
	private sealed class <FadeLight>d__13 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000DC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000DC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000DC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Crate_Explode <>4__this;

		[Token(Token = "0x170000B7")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000F80")]
			[Address(RVA = "0xCF2C3C", Offset = "0xCF2C3C", VA = "0xCF2C3C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000B8")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000F82")]
			[Address(RVA = "0xCF2C84", Offset = "0xCF2C84", VA = "0xCF2C84", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000F7D")]
		[Address(RVA = "0xCF2AF4", Offset = "0xCF2AF4", VA = "0xCF2AF4")]
		[DebuggerHidden]
		public <FadeLight>d__13(int <>1__state)
		{
		}

		[Token(Token = "0x6000F7E")]
		[Address(RVA = "0xCF2B34", Offset = "0xCF2B34", VA = "0xCF2B34", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000F7F")]
		[Address(RVA = "0xCF2B38", Offset = "0xCF2B38", VA = "0xCF2B38", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000F81")]
		[Address(RVA = "0xCF2C44", Offset = "0xCF2C44", VA = "0xCF2C44", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000DBA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject CrateExplode;

	[Token(Token = "0x4000DBB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AnimationClip CrateExplodeAnim;

	[Token(Token = "0x4000DBC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ParticleSystem ExplodeVideoParticles;

	[Token(Token = "0x4000DBD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ParticleSystem SmokeParticles;

	[Token(Token = "0x4000DBE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ParticleSystem SparkParticles;

	[Token(Token = "0x4000DBF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Light ExplodeLight;

	[Token(Token = "0x4000DC0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public AudioSource ExplodeAudio;

	[Token(Token = "0x4000DC1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject ScorchMark;

	[Token(Token = "0x4000DC2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float fadeStart;

	[Token(Token = "0x4000DC3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private float fadeEnd;

	[Token(Token = "0x4000DC4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private float fadeTime;

	[Token(Token = "0x4000DC5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private float t;

	[Token(Token = "0x6000F7A")]
	[Address(RVA = "0xCF2964", Offset = "0xCF2964", VA = "0xCF2964")]
	private void Update()
	{
	}

	[Token(Token = "0x6000F7B")]
	[Address(RVA = "0xCF2A80", Offset = "0xCF2A80", VA = "0xCF2A80")]
	[IteratorStateMachine(typeof(<FadeLight>d__13))]
	private IEnumerator FadeLight()
	{
		return null;
	}

	[Token(Token = "0x6000F7C")]
	[Address(RVA = "0xCF2B1C", Offset = "0xCF2B1C", VA = "0xCF2B1C")]
	public Crate_Explode()
	{
	}
}
[Token(Token = "0x20002B9")]
public class Explode_AwesomeExplosion : MonoBehaviour
{
	[Token(Token = "0x20002BA")]
	[CompilerGenerated]
	private sealed class <FadeLight>d__11 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000DD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000DD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000DD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Explode_AwesomeExplosion <>4__this;

		[Token(Token = "0x170000B9")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000F8A")]
			[Address(RVA = "0xCF2F94", Offset = "0xCF2F94", VA = "0xCF2F94", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000BA")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000F8C")]
			[Address(RVA = "0xCF2FDC", Offset = "0xCF2FDC", VA = "0xCF2FDC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000F87")]
		[Address(RVA = "0xCF2E4C", Offset = "0xCF2E4C", VA = "0xCF2E4C")]
		[DebuggerHidden]
		public <FadeLight>d__11(int <>1__state)
		{
		}

		[Token(Token = "0x6000F88")]
		[Address(RVA = "0xCF2E8C", Offset = "0xCF2E8C", VA = "0xCF2E8C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000F89")]
		[Address(RVA = "0xCF2E90", Offset = "0xCF2E90", VA = "0xCF2E90", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000F8B")]
		[Address(RVA = "0xCF2F9C", Offset = "0xCF2F9C", VA = "0xCF2F9C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000DC9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ParticleSystem ExplodeVideoParticles;

	[Token(Token = "0x4000DCA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ParticleSystem SmokeParticles;

	[Token(Token = "0x4000DCB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ParticleSystem SparkParticles;

	[Token(Token = "0x4000DCC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Light ExplodeLight;

	[Token(Token = "0x4000DCD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public AudioSource ExplodeAudio;

	[Token(Token = "0x4000DCE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject ScorchMark;

	[Token(Token = "0x4000DCF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float fadeStart;

	[Token(Token = "0x4000DD0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private float fadeEnd;

	[Token(Token = "0x4000DD1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float fadeTime;

	[Token(Token = "0x4000DD2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private float t;

	[Token(Token = "0x6000F83")]
	[Address(RVA = "0xCF2C8C", Offset = "0xCF2C8C", VA = "0xCF2C8C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000F84")]
	[Address(RVA = "0xCF2DD8", Offset = "0xCF2DD8", VA = "0xCF2DD8")]
	[IteratorStateMachine(typeof(<FadeLight>d__11))]
	private IEnumerator FadeLight()
	{
		return null;
	}

	[Token(Token = "0x6000F85")]
	[Address(RVA = "0xCF2D34", Offset = "0xCF2D34", VA = "0xCF2D34")]
	private void Explosion()
	{
	}

	[Token(Token = "0x6000F86")]
	[Address(RVA = "0xCF2E74", Offset = "0xCF2E74", VA = "0xCF2E74")]
	public Explode_AwesomeExplosion()
	{
	}
}
[Token(Token = "0x20002BB")]
public class Explode_DetailedExplosion : MonoBehaviour
{
	[Token(Token = "0x20002BC")]
	[CompilerGenerated]
	private sealed class <FadeLight>d__12 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000DE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000DE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000DE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Explode_DetailedExplosion <>4__this;

		[Token(Token = "0x170000BB")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000F94")]
			[Address(RVA = "0xCF32F8", Offset = "0xCF32F8", VA = "0xCF32F8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000BC")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000F96")]
			[Address(RVA = "0xCF3340", Offset = "0xCF3340", VA = "0xCF3340", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000F91")]
		[Address(RVA = "0xCF31B0", Offset = "0xCF31B0", VA = "0xCF31B0")]
		[DebuggerHidden]
		public <FadeLight>d__12(int <>1__state)
		{
		}

		[Token(Token = "0x6000F92")]
		[Address(RVA = "0xCF31F0", Offset = "0xCF31F0", VA = "0xCF31F0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000F93")]
		[Address(RVA = "0xCF31F4", Offset = "0xCF31F4", VA = "0xCF31F4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000F95")]
		[Address(RVA = "0xCF3300", Offset = "0xCF3300", VA = "0xCF3300", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000DD6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ParticleSystem ExplodeVideoParticles;

	[Token(Token = "0x4000DD7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ParticleSystem SmokeParticles;

	[Token(Token = "0x4000DD8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ParticleSystem SparkParticles;

	[Token(Token = "0x4000DD9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Light ExplodeLight;

	[Token(Token = "0x4000DDA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public AudioSource ExplodeAudio;

	[Token(Token = "0x4000DDB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject ScorchMark;

	[Token(Token = "0x4000DDC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public ParticleSystem Fireball;

	[Token(Token = "0x4000DDD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float fadeStart;

	[Token(Token = "0x4000DDE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private float fadeEnd;

	[Token(Token = "0x4000DDF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float fadeTime;

	[Token(Token = "0x4000DE0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private float t;

	[Token(Token = "0x6000F8D")]
	[Address(RVA = "0xCF2FE4", Offset = "0xCF2FE4", VA = "0xCF2FE4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000F8E")]
	[Address(RVA = "0xCF313C", Offset = "0xCF313C", VA = "0xCF313C")]
	[IteratorStateMachine(typeof(<FadeLight>d__12))]
	private IEnumerator FadeLight()
	{
		return null;
	}

	[Token(Token = "0x6000F8F")]
	[Address(RVA = "0xCF3088", Offset = "0xCF3088", VA = "0xCF3088")]
	private void Explosion()
	{
	}

	[Token(Token = "0x6000F90")]
	[Address(RVA = "0xCF31D8", Offset = "0xCF31D8", VA = "0xCF31D8")]
	public Explode_DetailedExplosion()
	{
	}
}
[Token(Token = "0x20002BD")]
public class Explode_PlasmaExplosion : MonoBehaviour
{
	[Token(Token = "0x20002BE")]
	[CompilerGenerated]
	private sealed class <FadeLight>d__10 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000DED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000DEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000DEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Explode_PlasmaExplosion <>4__this;

		[Token(Token = "0x4000DF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <t>5__2;

		[Token(Token = "0x170000BD")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000F9E")]
			[Address(RVA = "0xCF365C", Offset = "0xCF365C", VA = "0xCF365C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000BE")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000FA0")]
			[Address(RVA = "0xCF36A4", Offset = "0xCF36A4", VA = "0xCF36A4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000F9B")]
		[Address(RVA = "0xCF34F4", Offset = "0xCF34F4", VA = "0xCF34F4")]
		[DebuggerHidden]
		public <FadeLight>d__10(int <>1__state)
		{
		}

		[Token(Token = "0x6000F9C")]
		[Address(RVA = "0xCF3534", Offset = "0xCF3534", VA = "0xCF3534", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000F9D")]
		[Address(RVA = "0xCF3538", Offset = "0xCF3538", VA = "0xCF3538", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000F9F")]
		[Address(RVA = "0xCF3664", Offset = "0xCF3664", VA = "0xCF3664", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000DE4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ParticleSystem ExplodeVideoParticles;

	[Token(Token = "0x4000DE5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ParticleSystem SmokeParticles;

	[Token(Token = "0x4000DE6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ParticleSystem SparkParticles;

	[Token(Token = "0x4000DE7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Light ExplodeLight;

	[Token(Token = "0x4000DE8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public AudioSource ExplodeAudio;

	[Token(Token = "0x4000DE9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject ScorchMark;

	[Token(Token = "0x4000DEA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float fadeStart;

	[Token(Token = "0x4000DEB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private float fadeEnd;

	[Token(Token = "0x4000DEC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float fadeTime;

	[Token(Token = "0x6000F97")]
	[Address(RVA = "0xCF3348", Offset = "0xCF3348", VA = "0xCF3348")]
	private void Update()
	{
	}

	[Token(Token = "0x6000F98")]
	[Address(RVA = "0xCF3480", Offset = "0xCF3480", VA = "0xCF3480")]
	[IteratorStateMachine(typeof(<FadeLight>d__10))]
	private IEnumerator FadeLight()
	{
		return null;
	}

	[Token(Token = "0x6000F99")]
	[Address(RVA = "0xCF33DC", Offset = "0xCF33DC", VA = "0xCF33DC")]
	private void Explosion()
	{
	}

	[Token(Token = "0x6000F9A")]
	[Address(RVA = "0xCF351C", Offset = "0xCF351C", VA = "0xCF351C")]
	public Explode_PlasmaExplosion()
	{
	}
}
[Token(Token = "0x20002BF")]
public class HiTechYakuzaAutoRotate : MonoBehaviour
{
	[Token(Token = "0x4000DF1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 rotation;

	[Token(Token = "0x6000FA1")]
	[Address(RVA = "0xCF36AC", Offset = "0xCF36AC", VA = "0xCF36AC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000FA2")]
	[Address(RVA = "0xCF3714", Offset = "0xCF3714", VA = "0xCF3714")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000FA3")]
	[Address(RVA = "0xCF3740", Offset = "0xCF3740", VA = "0xCF3740")]
	public HiTechYakuzaAutoRotate()
	{
	}
}
[Token(Token = "0x20002C0")]
public class Billboard : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x20002C1")]
	public class AdvertList
	{
		[Token(Token = "0x4000DF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Texture Advert;

		[Token(Token = "0x4000DF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Color LightColor;

		[Token(Token = "0x6000FA8")]
		[Address(RVA = "0xCF39E0", Offset = "0xCF39E0", VA = "0xCF39E0")]
		public AdvertList()
		{
		}
	}

	[Token(Token = "0x20002C2")]
	[CompilerGenerated]
	private sealed class <StartEffect>d__7 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000DF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000DFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000DFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Billboard <>4__this;

		[Token(Token = "0x170000BF")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000FAC")]
			[Address(RVA = "0xCF3B00", Offset = "0xCF3B00", VA = "0xCF3B00", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000C0")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000FAE")]
			[Address(RVA = "0xCF3B48", Offset = "0xCF3B48", VA = "0xCF3B48", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000FA9")]
		[Address(RVA = "0xCF39A4", Offset = "0xCF39A4", VA = "0xCF39A4")]
		[DebuggerHidden]
		public <StartEffect>d__7(int <>1__state)
		{
		}

		[Token(Token = "0x6000FAA")]
		[Address(RVA = "0xCF39E8", Offset = "0xCF39E8", VA = "0xCF39E8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000FAB")]
		[Address(RVA = "0xCF39EC", Offset = "0xCF39EC", VA = "0xCF39EC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000FAD")]
		[Address(RVA = "0xCF3B08", Offset = "0xCF3B08", VA = "0xCF3B08", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000DF2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AdvertList[] Adverts;

	[Token(Token = "0x4000DF3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Light MainLight;

	[Token(Token = "0x4000DF4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Material mat;

	[Token(Token = "0x4000DF5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float MinimumAdvertTime;

	[Token(Token = "0x4000DF6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float MaximumAdvertTime;

	[Token(Token = "0x6000FA4")]
	[Address(RVA = "0xCF3748", Offset = "0xCF3748", VA = "0xCF3748")]
	private void Start()
	{
	}

	[Token(Token = "0x6000FA5")]
	[Address(RVA = "0xCF3930", Offset = "0xCF3930", VA = "0xCF3930")]
	[IteratorStateMachine(typeof(<StartEffect>d__7))]
	private IEnumerator StartEffect()
	{
		return null;
	}

	[Token(Token = "0x6000FA6")]
	[Address(RVA = "0xCF37B8", Offset = "0xCF37B8", VA = "0xCF37B8")]
	private void ChangeAdd()
	{
	}

	[Token(Token = "0x6000FA7")]
	[Address(RVA = "0xCF39CC", Offset = "0xCF39CC", VA = "0xCF39CC")]
	public Billboard()
	{
	}
}
[Token(Token = "0x20002C3")]
public class DayNight : MonoBehaviour
{
	[Token(Token = "0x4000DFC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject Day;

	[Token(Token = "0x4000DFD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject Night;

	[Token(Token = "0x4000DFE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject Rain;

	[Token(Token = "0x4000DFF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Material SkyboxNight;

	[Token(Token = "0x4000E00")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Material SkyboxDay;

	[Token(Token = "0x4000E01")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Color FogColorNight;

	[Token(Token = "0x4000E02")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Color FogColorDay;

	[Token(Token = "0x6000FAF")]
	[Address(RVA = "0xCF3B50", Offset = "0xCF3B50", VA = "0xCF3B50")]
	private void Start()
	{
	}

	[Token(Token = "0x6000FB0")]
	[Address(RVA = "0xCF3B54", Offset = "0xCF3B54", VA = "0xCF3B54")]
	private void Update()
	{
	}

	[Token(Token = "0x6000FB1")]
	[Address(RVA = "0xCF3C98", Offset = "0xCF3C98", VA = "0xCF3C98")]
	public DayNight()
	{
	}
}
[Token(Token = "0x20002C4")]
public class MoveTo : MonoBehaviour
{
	[Token(Token = "0x4000E03")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform goal;

	[Token(Token = "0x4000E04")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform lookAt;

	[Token(Token = "0x4000E05")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Animator anim;

	[Token(Token = "0x4000E06")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private NavMeshAgent agent;

	[Token(Token = "0x4000E07")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Vector2 smoothDeltaPosition;

	[Token(Token = "0x4000E08")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Vector2 velocity;

	[Token(Token = "0x4000E09")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private CommonCharacterController character;

	[Token(Token = "0x4000E0A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Transform lookAtTarget;

	[Token(Token = "0x4000E0B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Vector3 lastForward;

	[Token(Token = "0x4000E0C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private float deltaAngle;

	[Token(Token = "0x6000FB2")]
	[Address(RVA = "0xCF3CA0", Offset = "0xCF3CA0", VA = "0xCF3CA0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000FB3")]
	[Address(RVA = "0xCF3DFC", Offset = "0xCF3DFC", VA = "0xCF3DFC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000FB4")]
	[Address(RVA = "0xCF4240", Offset = "0xCF4240", VA = "0xCF4240")]
	public float GetAngleFromForward(Vector3 worldDirection)
	{
		return default(float);
	}

	[Token(Token = "0x6000FB5")]
	[Address(RVA = "0xCF42A0", Offset = "0xCF42A0", VA = "0xCF42A0")]
	public void Rotate(Vector3 movement)
	{
	}

	[Token(Token = "0x6000FB6")]
	[Address(RVA = "0xCF43C4", Offset = "0xCF43C4", VA = "0xCF43C4")]
	public MoveTo()
	{
	}
}
[Token(Token = "0x20002C5")]
public class TestEnumerator : MonoBehaviour
{
	[Token(Token = "0x6000FB7")]
	[Address(RVA = "0xCF4428", Offset = "0xCF4428", VA = "0xCF4428")]
	private void Start()
	{
	}

	[Token(Token = "0x6000FB8")]
	[Address(RVA = "0xCF4A50", Offset = "0xCF4A50", VA = "0xCF4A50")]
	private void Update()
	{
	}

	[Token(Token = "0x6000FB9")]
	[Address(RVA = "0xCF4A54", Offset = "0xCF4A54", VA = "0xCF4A54")]
	public TestEnumerator()
	{
	}
}
[Token(Token = "0x20002C6")]
public class TestGizmos : MonoBehaviour
{
	[Token(Token = "0x4000E0D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform origin;

	[Token(Token = "0x4000E0E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform target;

	[Token(Token = "0x6000FBA")]
	[Address(RVA = "0xCF4A5C", Offset = "0xCF4A5C", VA = "0xCF4A5C")]
	private void OnDrawGizmosSelected()
	{
	}

	[Token(Token = "0x6000FBB")]
	[Address(RVA = "0xCF4B10", Offset = "0xCF4B10", VA = "0xCF4B10")]
	public static void ForGizmo(Vector3 pos, Vector3 direction, Color color, float arrowHeadLength = 0.25f, float arrowHeadAngle = 20f)
	{
	}

	[Token(Token = "0x6000FBC")]
	[Address(RVA = "0xCF5118", Offset = "0xCF5118", VA = "0xCF5118")]
	public TestGizmos()
	{
	}
}
[Token(Token = "0x20002C7")]
public class TestJump : MonoBehaviour
{
	[Token(Token = "0x4000E0F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AnimationEventHandler eventHandler;

	[Token(Token = "0x4000E10")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float duration;

	[Token(Token = "0x4000E11")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public bool execute;

	[Token(Token = "0x6000FBD")]
	[Address(RVA = "0xCF5120", Offset = "0xCF5120", VA = "0xCF5120")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000FBE")]
	[Address(RVA = "0xCF51E8", Offset = "0xCF51E8", VA = "0xCF51E8")]
	public void OnEventString(string e)
	{
	}

	[Token(Token = "0x6000FBF")]
	[Address(RVA = "0xCF5274", Offset = "0xCF5274", VA = "0xCF5274")]
	public TestJump()
	{
	}
}
[Token(Token = "0x20002C8")]
public class FireAnimationCreator : MonoBehaviour
{
	[Token(Token = "0x4000E12")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public FireAnimationData asset;

	[Token(Token = "0x4000E13")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool twoHandedAnimation;

	[Token(Token = "0x4000E14")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string animationName;

	[Token(Token = "0x4000E15")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public string fireStateName;

	[Token(Token = "0x4000E16")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public string coverStateName;

	[Token(Token = "0x4000E17")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public string idleStateName;

	[Token(Token = "0x4000E18")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float fireMaxTimeIK;

	[Token(Token = "0x4000E19")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float fireMinTimeIK;

	[Token(Token = "0x4000E1A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float fireMaxTimeLayer;

	[Token(Token = "0x4000E1B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public float fireMinTimeLayer;

	[Token(Token = "0x4000E1C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public float coverMaxTimeLayer;

	[Token(Token = "0x4000E1D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public float coverMinTimeLayer;

	[Token(Token = "0x4000E1E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public float fireMinTimeCover;

	[Token(Token = "0x4000E1F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public float minLayerWeight;

	[Token(Token = "0x4000E20")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public float lerpIKSpeed;

	[Token(Token = "0x4000E21")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public float lerpLayerSpeed;

	[Token(Token = "0x4000E22")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public float fireAnimSpeed;

	[Token(Token = "0x4000E23")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public float coverAnimSpeed;

	[Token(Token = "0x4000E24")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public bool mirror;

	[Token(Token = "0x4000E25")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x79")]
	public bool crouch;

	[Token(Token = "0x4000E26")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public float idle;

	[Token(Token = "0x6000FC0")]
	[Address(RVA = "0xCF527C", Offset = "0xCF527C", VA = "0xCF527C")]
	public FireAnimationCreator()
	{
	}
}
[Token(Token = "0x20002C9")]
public class FireAnimationSetCreator : MonoBehaviour
{
	[Token(Token = "0x4000E27")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string fireAnimationDataSetName;

	[Token(Token = "0x4000E28")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<FireAnimationData> animationDataList;

	[Token(Token = "0x6000FC1")]
	[Address(RVA = "0xCF529C", Offset = "0xCF529C", VA = "0xCF529C")]
	public FireAnimationSetCreator()
	{
	}
}
[Token(Token = "0x20002CA")]
public class MatrixAnimTest : MonoBehaviour
{
	[Token(Token = "0x20002CC")]
	[CompilerGenerated]
	private sealed class <Look>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000E2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000E30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000E31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MatrixAnimTest <>4__this;

		[Token(Token = "0x4000E32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float target;

		[Token(Token = "0x170000C1")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000FCB")]
			[Address(RVA = "0xCF57D0", Offset = "0xCF57D0", VA = "0xCF57D0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000C2")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000FCD")]
			[Address(RVA = "0xCF5818", Offset = "0xCF5818", VA = "0xCF5818", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000FC8")]
		[Address(RVA = "0xCF5684", Offset = "0xCF5684", VA = "0xCF5684")]
		[DebuggerHidden]
		public <Look>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x6000FC9")]
		[Address(RVA = "0xCF56D4", Offset = "0xCF56D4", VA = "0xCF56D4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000FCA")]
		[Address(RVA = "0xCF56D8", Offset = "0xCF56D8", VA = "0xCF56D8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000FCC")]
		[Address(RVA = "0xCF57D8", Offset = "0xCF57D8", VA = "0xCF57D8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000E29")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public PlayableDirector playableDirector;

	[Token(Token = "0x4000E2A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject lights;

	[Token(Token = "0x4000E2B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public LookAtIK trinityla;

	[Token(Token = "0x4000E2C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public LookAtIK otrola;

	[Token(Token = "0x6000FC2")]
	[Address(RVA = "0xCF52A4", Offset = "0xCF52A4", VA = "0xCF52A4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000FC3")]
	[Address(RVA = "0xCF54F0", Offset = "0xCF54F0", VA = "0xCF54F0")]
	private void OnTimelineEvent(string eventName)
	{
	}

	[Token(Token = "0x6000FC4")]
	[Address(RVA = "0xCF5600", Offset = "0xCF5600", VA = "0xCF5600")]
	[IteratorStateMachine(typeof(<Look>d__6))]
	private IEnumerator Look(float target)
	{
		return null;
	}

	[Token(Token = "0x6000FC5")]
	[Address(RVA = "0xCF56AC", Offset = "0xCF56AC", VA = "0xCF56AC")]
	public MatrixAnimTest()
	{
	}
}
[Token(Token = "0x20002CD")]
public class ExplosionSimulation : MonoBehaviour
{
	[Token(Token = "0x4000E33")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public CommonCharacterController target;

	[Token(Token = "0x4000E34")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float explosionForce;

	[Token(Token = "0x4000E35")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float explosionRadius;

	[Token(Token = "0x4000E36")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float upwardsModifier;

	[Token(Token = "0x4000E37")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Rigidbody doorLeft;

	[Token(Token = "0x4000E38")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Rigidbody doorRight;

	[Token(Token = "0x4000E39")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Rigidbody arm;

	[Token(Token = "0x4000E3A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Transform forcePosition;

	[Token(Token = "0x6000FCE")]
	[Address(RVA = "0xCF5820", Offset = "0xCF5820", VA = "0xCF5820")]
	private void Update()
	{
	}

	[Token(Token = "0x6000FCF")]
	[Address(RVA = "0xCF5BA4", Offset = "0xCF5BA4", VA = "0xCF5BA4")]
	public ExplosionSimulation()
	{
	}
}
[Token(Token = "0x20002CE")]
public class TestAnim2 : MonoBehaviour
{
	[Token(Token = "0x4000E3B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private FireAnimationCreator animationData;

	[Token(Token = "0x4000E3C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AimTarget aimTarget;

	[Token(Token = "0x4000E3D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool mirror;

	[Token(Token = "0x4000E3E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private int fireStateNameHash;

	[Token(Token = "0x4000E3F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private int coverStateNameHash;

	[Token(Token = "0x4000E40")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private int idleStateNameHash;

	[Token(Token = "0x4000E41")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ThiefPoliceController character;

	[Token(Token = "0x4000E42")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float ikLerpTarget;

	[Token(Token = "0x4000E43")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float layerLerpTarget;

	[Token(Token = "0x4000E44")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float stateTime;

	[Token(Token = "0x4000E45")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float currentStateTime;

	[Token(Token = "0x4000E46")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float minCoverTime;

	[Token(Token = "0x4000E47")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public float maxCoverTime;

	[Token(Token = "0x4000E48")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public float maxShootingTime;

	[Token(Token = "0x4000E49")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public float minShootingTime;

	[Token(Token = "0x4000E4A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private float lastShot;

	[Token(Token = "0x4000E4B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public float currentAnimTime;

	[Token(Token = "0x4000E4C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public float targetAngle;

	[Token(Token = "0x6000FD0")]
	[Address(RVA = "0xCF5BC0", Offset = "0xCF5BC0", VA = "0xCF5BC0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000FD1")]
	[Address(RVA = "0xCF5E88", Offset = "0xCF5E88", VA = "0xCF5E88")]
	private void Update()
	{
	}

	[Token(Token = "0x6000FD2")]
	[Address(RVA = "0xCF637C", Offset = "0xCF637C", VA = "0xCF637C")]
	public TestAnim2()
	{
	}
}
[Token(Token = "0x20002CF")]
public class TestMeshBaker : MonoBehaviour
{
	[Token(Token = "0x4000E4D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public MB3_MeshBaker meshBaker;

	[Token(Token = "0x6000FD3")]
	[Address(RVA = "0xCF6390", Offset = "0xCF6390", VA = "0xCF6390")]
	private void Start()
	{
	}

	[Token(Token = "0x6000FD4")]
	[Address(RVA = "0xCF6428", Offset = "0xCF6428", VA = "0xCF6428")]
	public TestMeshBaker()
	{
	}
}
[Token(Token = "0x20002D0")]
public class TestRagdoll : MonoBehaviour
{
	[Token(Token = "0x4000E4E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public LocationCharacter locationCharacter;

	[Token(Token = "0x4000E4F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public LocationController dummyLocation;

	[Token(Token = "0x4000E50")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool activate;

	[Token(Token = "0x6000FD5")]
	[Address(RVA = "0xCF6430", Offset = "0xCF6430", VA = "0xCF6430")]
	private void Start()
	{
	}

	[Token(Token = "0x6000FD6")]
	[Address(RVA = "0xCF64B0", Offset = "0xCF64B0", VA = "0xCF64B0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000FD7")]
	[Address(RVA = "0xCF65CC", Offset = "0xCF65CC", VA = "0xCF65CC")]
	private void disable()
	{
	}

	[Token(Token = "0x6000FD8")]
	[Address(RVA = "0xCF664C", Offset = "0xCF664C", VA = "0xCF664C")]
	public TestRagdoll()
	{
	}
}
namespace Lovatto.SceneLoader
{
	[Token(Token = "0x20002D1")]
	public class bl_TransformRotator : MonoBehaviour
	{
		[Token(Token = "0x4000E51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float Speed;

		[Token(Token = "0x4000E52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public RectTransform rectTransform;

		[Token(Token = "0x6000FD9")]
		[Address(RVA = "0xCF6654", Offset = "0xCF6654", VA = "0xCF6654")]
		private void Update()
		{
		}

		[Token(Token = "0x6000FDA")]
		[Address(RVA = "0xCF66EC", Offset = "0xCF66EC", VA = "0xCF66EC")]
		public bl_TransformRotator()
		{
		}
	}
}
namespace UnityTemplateProjects
{
	[Token(Token = "0x20002D2")]
	public class SimpleCameraController : MonoBehaviour
	{
		[Token(Token = "0x20002D3")]
		private class CameraState
		{
			[Token(Token = "0x4000E5A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public float yaw;

			[Token(Token = "0x4000E5B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public float pitch;

			[Token(Token = "0x4000E5C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public float roll;

			[Token(Token = "0x4000E5D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public float x;

			[Token(Token = "0x4000E5E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float y;

			[Token(Token = "0x4000E5F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public float z;

			[Token(Token = "0x6000FDF")]
			[Address(RVA = "0xCF6750", Offset = "0xCF6750", VA = "0xCF6750")]
			public void SetFromTransform(Transform t)
			{
			}

			[Token(Token = "0x6000FE0")]
			[Address(RVA = "0xCF6CD4", Offset = "0xCF6CD4", VA = "0xCF6CD4")]
			public void Translate(Vector3 translation)
			{
			}

			[Token(Token = "0x6000FE1")]
			[Address(RVA = "0xCF6D54", Offset = "0xCF6D54", VA = "0xCF6D54")]
			public void LerpTowards(CameraState target, float positionLerpPct, float rotationLerpPct)
			{
			}

			[Token(Token = "0x6000FE2")]
			[Address(RVA = "0xCF6DDC", Offset = "0xCF6DDC", VA = "0xCF6DDC")]
			public void UpdateTransform(Transform t)
			{
			}

			[Token(Token = "0x6000FE3")]
			[Address(RVA = "0xCF7000", Offset = "0xCF7000", VA = "0xCF7000")]
			public CameraState()
			{
			}
		}

		[Token(Token = "0x4000E53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private CameraState m_TargetCameraState;

		[Token(Token = "0x4000E54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private CameraState m_InterpolatingCameraState;

		[Token(Token = "0x4000E55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[Header("Movement Settings")]
		[Tooltip("Exponential boost factor on translation, controllable by mouse wheel.")]
		public float boost;

		[Token(Token = "0x4000E56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[Range(0.001f, 1f)]
		[Tooltip("Time it takes to interpolate camera position 99% of the way to the target.")]
		public float positionLerpTime;

		[Token(Token = "0x4000E57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[Tooltip("X = Change in mouse position.\nY = Multiplicative factor for camera rotation.")]
		[Header("Rotation Settings")]
		public AnimationCurve mouseSensitivityCurve;

		[Token(Token = "0x4000E58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[Range(0.001f, 1f)]
		[Tooltip("Time it takes to interpolate camera rotation 99% of the way to the target.")]
		public float rotationLerpTime;

		[Token(Token = "0x4000E59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[Tooltip("Whether or not to invert our Y axis for mouse input to rotation.")]
		public bool invertY;

		[Token(Token = "0x6000FDB")]
		[Address(RVA = "0xCF66FC", Offset = "0xCF66FC", VA = "0xCF66FC")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000FDC")]
		[Address(RVA = "0xCF67D4", Offset = "0xCF67D4", VA = "0xCF67D4")]
		private Vector3 GetInputTranslationDirection()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000FDD")]
		[Address(RVA = "0xCF6A04", Offset = "0xCF6A04", VA = "0xCF6A04")]
		private void Update()
		{
		}

		[Token(Token = "0x6000FDE")]
		[Address(RVA = "0xCF6E24", Offset = "0xCF6E24", VA = "0xCF6E24")]
		public SimpleCameraController()
		{
		}
	}
}
namespace UnityEngine.UI.Michsky.UI.Zone
{
	[Token(Token = "0x20002D4")]
	public class UIGradient : BaseMeshEffect
	{
		[Token(Token = "0x20002D5")]
		public enum Type
		{
			[Token(Token = "0x4000E65")]
			Horizontal,
			[Token(Token = "0x4000E66")]
			Vertical,
			[Token(Token = "0x4000E67")]
			Radial,
			[Token(Token = "0x4000E68")]
			Diamond
		}

		[Token(Token = "0x20002D6")]
		public enum Blend
		{
			[Token(Token = "0x4000E6A")]
			Override,
			[Token(Token = "0x4000E6B")]
			Add,
			[Token(Token = "0x4000E6C")]
			Multiply
		}

		[Token(Token = "0x4000E60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		[Header("GRADIENT")]
		private Gradient _effectGradient;

		[Token(Token = "0x4000E61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[Header("SETTINGS")]
		[SerializeField]
		private Type _gradientType;

		[Token(Token = "0x4000E62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		private Blend _blendMode;

		[Token(Token = "0x4000E63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		[Range(-1f, 1f)]
		private float _offset;

		[Token(Token = "0x170000C3")]
		public Blend BlendMode
		{
			[Token(Token = "0x6000FE4")]
			[Address(RVA = "0xCF7008", Offset = "0xCF7008", VA = "0xCF7008")]
			get
			{
				return default(Blend);
			}
			[Token(Token = "0x6000FE5")]
			[Address(RVA = "0xCF7010", Offset = "0xCF7010", VA = "0xCF7010")]
			set
			{
			}
		}

		[Token(Token = "0x170000C4")]
		public Gradient EffectGradient
		{
			[Token(Token = "0x6000FE6")]
			[Address(RVA = "0xCF703C", Offset = "0xCF703C", VA = "0xCF703C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000FE7")]
			[Address(RVA = "0xCF7044", Offset = "0xCF7044", VA = "0xCF7044")]
			set
			{
			}
		}

		[Token(Token = "0x170000C5")]
		public Type GradientType
		{
			[Token(Token = "0x6000FE8")]
			[Address(RVA = "0xCF707C", Offset = "0xCF707C", VA = "0xCF707C")]
			get
			{
				return default(Type);
			}
			[Token(Token = "0x6000FE9")]
			[Address(RVA = "0xCF7084", Offset = "0xCF7084", VA = "0xCF7084")]
			set
			{
			}
		}

		[Token(Token = "0x170000C6")]
		public float Offset
		{
			[Token(Token = "0x6000FEA")]
			[Address(RVA = "0xCF70B0", Offset = "0xCF70B0", VA = "0xCF70B0")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000FEB")]
			[Address(RVA = "0xCF70B8", Offset = "0xCF70B8", VA = "0xCF70B8")]
			set
			{
			}
		}

		[Token(Token = "0x6000FEC")]
		[Address(RVA = "0xCF70E4", Offset = "0xCF70E4", VA = "0xCF70E4", Slot = "20")]
		public override void ModifyMesh(VertexHelper helper)
		{
		}

		[Token(Token = "0x6000FED")]
		[Address(RVA = "0xCF8F50", Offset = "0xCF8F50", VA = "0xCF8F50")]
		private Color BlendColor(Color colorA, Color colorB)
		{
			return default(Color);
		}

		[Token(Token = "0x6000FEE")]
		[Address(RVA = "0xCF8F9C", Offset = "0xCF8F9C", VA = "0xCF8F9C")]
		public UIGradient()
		{
		}
	}
}
namespace Michsky.UI.Zone
{
	[Token(Token = "0x20002D7")]
	public class BlurManager : MonoBehaviour
	{
		[Token(Token = "0x20002D8")]
		[CompilerGenerated]
		private sealed class <BlurIn>d__6 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000E72")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000E73")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000E74")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public BlurManager <>4__this;

			[Token(Token = "0x170000C7")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000FF9")]
				[Address(RVA = "0xCF9530", Offset = "0xCF9530", VA = "0xCF9530", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170000C8")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000FFB")]
				[Address(RVA = "0xCF9578", Offset = "0xCF9578", VA = "0xCF9578", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000FF6")]
			[Address(RVA = "0xCF91E8", Offset = "0xCF91E8", VA = "0xCF91E8")]
			[DebuggerHidden]
			public <BlurIn>d__6(int <>1__state)
			{
			}

			[Token(Token = "0x6000FF7")]
			[Address(RVA = "0xCF9408", Offset = "0xCF9408", VA = "0xCF9408", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000FF8")]
			[Address(RVA = "0xCF940C", Offset = "0xCF940C", VA = "0xCF940C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000FFA")]
			[Address(RVA = "0xCF9538", Offset = "0xCF9538", VA = "0xCF9538", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20002D9")]
		[CompilerGenerated]
		private sealed class <BlurOut>d__7 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000E75")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000E76")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000E77")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public BlurManager <>4__this;

			[Token(Token = "0x170000C9")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000FFF")]
				[Address(RVA = "0xCF96A0", Offset = "0xCF96A0", VA = "0xCF96A0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170000CA")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001001")]
				[Address(RVA = "0xCF96E8", Offset = "0xCF96E8", VA = "0xCF96E8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000FFC")]
			[Address(RVA = "0xCF9284", Offset = "0xCF9284", VA = "0xCF9284")]
			[DebuggerHidden]
			public <BlurOut>d__7(int <>1__state)
			{
			}

			[Token(Token = "0x6000FFD")]
			[Address(RVA = "0xCF9580", Offset = "0xCF9580", VA = "0xCF9580", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000FFE")]
			[Address(RVA = "0xCF9584", Offset = "0xCF9584", VA = "0xCF9584", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001000")]
			[Address(RVA = "0xCF96A8", Offset = "0xCF96A8", VA = "0xCF96A8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000E6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Header("RESOURCES")]
		public Material blurMaterial;

		[Token(Token = "0x4000E6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[Header("SETTINGS")]
		[Range(0f, 10f)]
		public float blurValue;

		[Token(Token = "0x4000E6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[Range(0.1f, 50f)]
		public float animationSpeed;

		[Token(Token = "0x4000E70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string customProperty;

		[Token(Token = "0x4000E71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float currentBlurValue;

		[Token(Token = "0x6000FEF")]
		[Address(RVA = "0xCF9104", Offset = "0xCF9104", VA = "0xCF9104")]
		private void Start()
		{
		}

		[Token(Token = "0x6000FF0")]
		[Address(RVA = "0xCF9174", Offset = "0xCF9174", VA = "0xCF9174")]
		[IteratorStateMachine(typeof(<BlurIn>d__6))]
		private IEnumerator BlurIn()
		{
			return null;
		}

		[Token(Token = "0x6000FF1")]
		[Address(RVA = "0xCF9210", Offset = "0xCF9210", VA = "0xCF9210")]
		[IteratorStateMachine(typeof(<BlurOut>d__7))]
		private IEnumerator BlurOut()
		{
			return null;
		}

		[Token(Token = "0x6000FF2")]
		[Address(RVA = "0xCF92AC", Offset = "0xCF92AC", VA = "0xCF92AC")]
		public void BlurInAnim()
		{
		}

		[Token(Token = "0x6000FF3")]
		[Address(RVA = "0xCF9324", Offset = "0xCF9324", VA = "0xCF9324")]
		public void BlurOutAnim()
		{
		}

		[Token(Token = "0x6000FF4")]
		[Address(RVA = "0xCF939C", Offset = "0xCF939C", VA = "0xCF939C")]
		public void SetBlurValue(float cbv)
		{
		}

		[Token(Token = "0x6000FF5")]
		[Address(RVA = "0xCF93A4", Offset = "0xCF93A4", VA = "0xCF93A4")]
		public BlurManager()
		{
		}
	}
	[Token(Token = "0x20002DA")]
	public class ContentSizeFitterFix : MonoBehaviour
	{
		[Token(Token = "0x20002DB")]
		[CompilerGenerated]
		private sealed class <ExecuteAfterTime>d__2 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000E79")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000E7A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000E7B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float time;

			[Token(Token = "0x4000E7C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public ContentSizeFitterFix <>4__this;

			[Token(Token = "0x170000CB")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001008")]
				[Address(RVA = "0xCF995C", Offset = "0xCF995C", VA = "0xCF995C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170000CC")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600100A")]
				[Address(RVA = "0xCF99A4", Offset = "0xCF99A4", VA = "0xCF99A4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001005")]
			[Address(RVA = "0xCF97FC", Offset = "0xCF97FC", VA = "0xCF97FC")]
			[DebuggerHidden]
			public <ExecuteAfterTime>d__2(int <>1__state)
			{
			}

			[Token(Token = "0x6001006")]
			[Address(RVA = "0xCF982C", Offset = "0xCF982C", VA = "0xCF982C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001007")]
			[Address(RVA = "0xCF9830", Offset = "0xCF9830", VA = "0xCF9830", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001009")]
			[Address(RVA = "0xCF9964", Offset = "0xCF9964", VA = "0xCF9964", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000E78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private ContentSizeFitter ctf;

		[Token(Token = "0x6001002")]
		[Address(RVA = "0xCF96F0", Offset = "0xCF96F0", VA = "0xCF96F0")]
		private void Start()
		{
		}

		[Token(Token = "0x6001003")]
		[Address(RVA = "0xCF9778", Offset = "0xCF9778", VA = "0xCF9778")]
		[IteratorStateMachine(typeof(<ExecuteAfterTime>d__2))]
		private IEnumerator ExecuteAfterTime(float time)
		{
			return null;
		}

		[Token(Token = "0x6001004")]
		[Address(RVA = "0xCF9824", Offset = "0xCF9824", VA = "0xCF9824")]
		public ContentSizeFitterFix()
		{
		}
	}
	[Token(Token = "0x20002DC")]
	public class CustomInputField : MonoBehaviour
	{
		[Token(Token = "0x4000E7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Header("ANIMATORS")]
		public Animator inputFieldAnimator;

		[Token(Token = "0x4000E7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[Header("OBJECTS")]
		public GameObject fieldTrigger;

		[Token(Token = "0x4000E7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public TMP_InputField inputText;

		[Token(Token = "0x4000E80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool isEmpty;

		[Token(Token = "0x4000E81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
		private bool isClicked;

		[Token(Token = "0x4000E82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private string inAnim;

		[Token(Token = "0x4000E83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private string outAnim;

		[Token(Token = "0x600100B")]
		[Address(RVA = "0xCF99AC", Offset = "0xCF99AC", VA = "0xCF99AC")]
		private void Start()
		{
		}

		[Token(Token = "0x600100C")]
		[Address(RVA = "0xCF9A0C", Offset = "0xCF9A0C", VA = "0xCF9A0C")]
		private void Update()
		{
		}

		[Token(Token = "0x600100D")]
		[Address(RVA = "0xCF9A74", Offset = "0xCF9A74", VA = "0xCF9A74")]
		public void Animate()
		{
		}

		[Token(Token = "0x600100E")]
		[Address(RVA = "0xCF9AB4", Offset = "0xCF9AB4", VA = "0xCF9AB4")]
		public void FieldTrigger()
		{
		}

		[Token(Token = "0x600100F")]
		[Address(RVA = "0xCF9AFC", Offset = "0xCF9AFC", VA = "0xCF9AFC")]
		public CustomInputField()
		{
		}
	}
	[Token(Token = "0x20002DD")]
	public class GamepadChecker : MonoBehaviour
	{
		[Token(Token = "0x4000E84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Header("RESOURCES")]
		public GameObject virtualCursor;

		[Token(Token = "0x4000E85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject virtualCursorContent;

		[Token(Token = "0x4000E86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameObject tooltipDesktop;

		[Token(Token = "0x4000E87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public GameObject eventSystem;

		[Token(Token = "0x4000E88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[Tooltip("Objects in this list will be active when gamepad is un-plugged.")]
		[Header("OBJECTS")]
		public List<GameObject> keyboardObjects;

		[Token(Token = "0x4000E89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[Tooltip("Objects in this list will be active when gamepad is plugged.")]
		public List<GameObject> gamepadObjects;

		[Token(Token = "0x4000E8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[Header("SETTINGS")]
		[Tooltip("Always update input device. If you turn off this feature, you won't able to change the input device after start, but it might increase the performance.")]
		public bool alwaysSearch;

		[Token(Token = "0x4000E8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private TooltipManagerDesktop tooltipDesktopScript;

		[Token(Token = "0x4000E8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private GamepadChecker checkerScript;

		[Token(Token = "0x4000E8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private int GamepadConnected;

		[Token(Token = "0x4000E8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private Vector3 startMousePos;

		[Token(Token = "0x4000E8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Vector3 startPos;

		[Token(Token = "0x4000E90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private bool gamepadEnabled;

		[Token(Token = "0x6001010")]
		[Address(RVA = "0xCF9B88", Offset = "0xCF9B88", VA = "0xCF9B88")]
		private void Start()
		{
		}

		[Token(Token = "0x6001011")]
		[Address(RVA = "0xCF9E28", Offset = "0xCF9E28", VA = "0xCF9E28")]
		private void Update()
		{
		}

		[Token(Token = "0x6001012")]
		[Address(RVA = "0xCF9EC4", Offset = "0xCF9EC4", VA = "0xCF9EC4")]
		public void SwitchToController()
		{
		}

		[Token(Token = "0x6001013")]
		[Address(RVA = "0xCF9CA0", Offset = "0xCF9CA0", VA = "0xCF9CA0")]
		public void SwitchToKeyboard()
		{
		}

		[Token(Token = "0x6001014")]
		[Address(RVA = "0xCFA050", Offset = "0xCFA050", VA = "0xCFA050")]
		public GamepadChecker()
		{
		}
	}
	[Token(Token = "0x20002DE")]
	public class GamepadTriggerEvent : MonoBehaviour
	{
		[Token(Token = "0x20002DF")]
		[CompilerGenerated]
		private sealed class <TimedEvent>d__7 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000E97")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000E98")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000E99")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public GamepadTriggerEvent <>4__this;

			[Token(Token = "0x170000CD")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600101B")]
				[Address(RVA = "0xCFA424", Offset = "0xCFA424", VA = "0xCFA424", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170000CE")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600101D")]
				[Address(RVA = "0xCFA46C", Offset = "0xCFA46C", VA = "0xCFA46C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001018")]
			[Address(RVA = "0xCFA284", Offset = "0xCFA284", VA = "0xCFA284")]
			[DebuggerHidden]
			public <TimedEvent>d__7(int <>1__state)
			{
			}

			[Token(Token = "0x6001019")]
			[Address(RVA = "0xCFA340", Offset = "0xCFA340", VA = "0xCFA340", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600101A")]
			[Address(RVA = "0xCFA344", Offset = "0xCFA344", VA = "0xCFA344", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600101C")]
			[Address(RVA = "0xCFA42C", Offset = "0xCFA42C", VA = "0xCFA42C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000E91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Header("EVENTS")]
		public UnityEvent leftTriggerEvent;

		[Token(Token = "0x4000E92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public UnityEvent rightTriggerEvent;

		[Token(Token = "0x4000E93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float cooldownTimer;

		[Token(Token = "0x4000E94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[Header("INPUT")]
		public string leftTriggerInput;

		[Token(Token = "0x4000E95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public string rightTriggerInput;

		[Token(Token = "0x4000E96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool canClick;

		[Token(Token = "0x6001015")]
		[Address(RVA = "0xCFA110", Offset = "0xCFA110", VA = "0xCFA110")]
		private void Update()
		{
		}

		[Token(Token = "0x6001016")]
		[Address(RVA = "0xCFA210", Offset = "0xCFA210", VA = "0xCFA210")]
		[IteratorStateMachine(typeof(<TimedEvent>d__7))]
		private IEnumerator TimedEvent()
		{
			return null;
		}

		[Token(Token = "0x6001017")]
		[Address(RVA = "0xCFA2AC", Offset = "0xCFA2AC", VA = "0xCFA2AC")]
		public GamepadTriggerEvent()
		{
		}
	}
	[Token(Token = "0x20002E0")]
	public class HoldKeyEvent : MonoBehaviour
	{
		[Token(Token = "0x4000E9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		[Header("KEY")]
		public KeyCode hotkey;

		[Token(Token = "0x4000E9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[Header("KEY ACTION")]
		[SerializeField]
		public UnityEvent holdAction;

		[Token(Token = "0x4000E9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		public UnityEvent releaseAction;

		[Token(Token = "0x4000E9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool isOn;

		[Token(Token = "0x4000E9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
		private bool isHolding;

		[Token(Token = "0x600101E")]
		[Address(RVA = "0xCFA474", Offset = "0xCFA474", VA = "0xCFA474")]
		private void Update()
		{
		}

		[Token(Token = "0x600101F")]
		[Address(RVA = "0xCFA4D8", Offset = "0xCFA4D8", VA = "0xCFA4D8")]
		public HoldKeyEvent()
		{
		}
	}
	[Token(Token = "0x20002E1")]
	public class HorizontalSelector : MonoBehaviour
	{
		[Token(Token = "0x4000E9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Header("KEYS")]
		public KeyCode previousKey;

		[Token(Token = "0x4000EA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public KeyCode forwardKey;

		[Token(Token = "0x4000EA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[Header("GAMEPAD")]
		public bool useGamepadButtons;

		[Token(Token = "0x4000EA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public KeyCode previousButton;

		[Token(Token = "0x4000EA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public KeyCode forwardButton;

		[Token(Token = "0x4000EA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[Header("SETTINGS")]
		private int index;

		[Token(Token = "0x4000EA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public int defaultIndex;

		[Token(Token = "0x4000EA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public bool invokeEventAtStart;

		[Token(Token = "0x4000EA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x35")]
		public bool disableAtStart;

		[Token(Token = "0x4000EA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[Header("ELEMENTS")]
		public List<string> elements;

		[Token(Token = "0x4000EA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[Header("EVENT")]
		public UnityEvent onValueChanged;

		[Token(Token = "0x4000EAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private TextMeshProUGUI label;

		[Token(Token = "0x4000EAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private TextMeshProUGUI labeHelper;

		[Token(Token = "0x4000EAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Animator selectorAnimator;

		[Token(Token = "0x6001020")]
		[Address(RVA = "0xCFA4E0", Offset = "0xCFA4E0", VA = "0xCFA4E0")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001021")]
		[Address(RVA = "0xCFA6C4", Offset = "0xCFA6C4", VA = "0xCFA6C4")]
		private void Update()
		{
		}

		[Token(Token = "0x6001022")]
		[Address(RVA = "0xCFA744", Offset = "0xCFA744", VA = "0xCFA744")]
		public void PreviousClick()
		{
		}

		[Token(Token = "0x6001023")]
		[Address(RVA = "0xCFA874", Offset = "0xCFA874", VA = "0xCFA874")]
		public void ForwardClick()
		{
		}

		[Token(Token = "0x6001024")]
		[Address(RVA = "0xCFA9A8", Offset = "0xCFA9A8", VA = "0xCFA9A8")]
		public HorizontalSelector()
		{
		}
	}
	[Token(Token = "0x20002E2")]
	public class LayoutGroupPositionFix : MonoBehaviour
	{
		[Token(Token = "0x20002E3")]
		[CompilerGenerated]
		private sealed class <ExecuteAfterTime>d__1 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000EAD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000EAE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000EAF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float time;

			[Token(Token = "0x4000EB0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public LayoutGroupPositionFix <>4__this;

			[Token(Token = "0x170000CF")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600102B")]
				[Address(RVA = "0xCFAC58", Offset = "0xCFAC58", VA = "0xCFAC58", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170000D0")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600102D")]
				[Address(RVA = "0xCFACA0", Offset = "0xCFACA0", VA = "0xCFACA0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001028")]
			[Address(RVA = "0xCFAAE8", Offset = "0xCFAAE8", VA = "0xCFAAE8")]
			[DebuggerHidden]
			public <ExecuteAfterTime>d__1(int <>1__state)
			{
			}

			[Token(Token = "0x6001029")]
			[Address(RVA = "0xCFAB18", Offset = "0xCFAB18", VA = "0xCFAB18", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600102A")]
			[Address(RVA = "0xCFAB1C", Offset = "0xCFAB1C", VA = "0xCFAB1C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600102C")]
			[Address(RVA = "0xCFAC60", Offset = "0xCFAC60", VA = "0xCFAC60", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x6001025")]
		[Address(RVA = "0xCFAA3C", Offset = "0xCFAA3C", VA = "0xCFAA3C")]
		private void Start()
		{
		}

		[Token(Token = "0x6001026")]
		[Address(RVA = "0xCFAA64", Offset = "0xCFAA64", VA = "0xCFAA64")]
		[IteratorStateMachine(typeof(<ExecuteAfterTime>d__1))]
		private IEnumerator ExecuteAfterTime(float time)
		{
			return null;
		}

		[Token(Token = "0x6001027")]
		[Address(RVA = "0xCFAB10", Offset = "0xCFAB10", VA = "0xCFAB10")]
		public LayoutGroupPositionFix()
		{
		}
	}
	[Token(Token = "0x20002E4")]
	public class MainPanelButton : MonoBehaviour, IPointerEnterHandler, IEventSystemHandler, IPointerExitHandler
	{
		[Token(Token = "0x4000EB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Animator buttonAnimator;

		[Token(Token = "0x600102E")]
		[Address(RVA = "0xCFACA8", Offset = "0xCFACA8", VA = "0xCFACA8")]
		private void Start()
		{
		}

		[Token(Token = "0x600102F")]
		[Address(RVA = "0xCFAD00", Offset = "0xCFAD00", VA = "0xCFAD00", Slot = "4")]
		public void OnPointerEnter(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6001030")]
		[Address(RVA = "0xCFADC0", Offset = "0xCFADC0", VA = "0xCFADC0", Slot = "5")]
		public void OnPointerExit(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6001031")]
		[Address(RVA = "0xCFAE80", Offset = "0xCFAE80", VA = "0xCFAE80")]
		public MainPanelButton()
		{
		}
	}
	[Token(Token = "0x20002E5")]
	public class MainPanelManager : MonoBehaviour
	{
		[Token(Token = "0x4000EB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Header("PANEL LIST")]
		public List<GameObject> panels;

		[Token(Token = "0x4000EB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[Header("BUTTON LIST")]
		private GameObject currentPanel;

		[Token(Token = "0x4000EB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private GameObject nextPanel;

		[Token(Token = "0x4000EB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[Header("TITLE")]
		public bool enableTitleAnim;

		[Token(Token = "0x4000EB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public GameObject titleObject;

		[Token(Token = "0x4000EB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public List<string> titles;

		[Token(Token = "0x4000EB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Animator titleAnimator;

		[Token(Token = "0x4000EB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private TextMeshProUGUI title;

		[Token(Token = "0x4000EBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private TextMeshProUGUI titleHelper;

		[Token(Token = "0x4000EBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[Header("SETTINGS")]
		public int currentPanelIndex;

		[Token(Token = "0x4000EBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Animator currentPanelAnimator;

		[Token(Token = "0x4000EBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Animator nextPanelAnimator;

		[Token(Token = "0x4000EBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private string panelFadeIn;

		[Token(Token = "0x4000EBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private string panelFadeOut;

		[Token(Token = "0x6001032")]
		[Address(RVA = "0xCFAE88", Offset = "0xCFAE88", VA = "0xCFAE88")]
		private void Start()
		{
		}

		[Token(Token = "0x6001033")]
		[Address(RVA = "0xCFB02C", Offset = "0xCFB02C", VA = "0xCFB02C")]
		public void OpenFirstTab()
		{
		}

		[Token(Token = "0x6001034")]
		[Address(RVA = "0xCFB13C", Offset = "0xCFB13C", VA = "0xCFB13C")]
		public void PanelAnim(int newPanel)
		{
		}

		[Token(Token = "0x6001035")]
		[Address(RVA = "0xCFB32C", Offset = "0xCFB32C", VA = "0xCFB32C")]
		public void NextPage()
		{
		}

		[Token(Token = "0x6001036")]
		[Address(RVA = "0xCFB510", Offset = "0xCFB510", VA = "0xCFB510")]
		public void PrevPage()
		{
		}

		[Token(Token = "0x6001037")]
		[Address(RVA = "0xCFB700", Offset = "0xCFB700", VA = "0xCFB700")]
		public MainPanelManager()
		{
		}
	}
	[Token(Token = "0x20002E6")]
	public class PointerEnterEvents : MonoBehaviour, IPointerEnterHandler, IEventSystemHandler, IPointerExitHandler
	{
		[Token(Token = "0x4000EC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Header("EVENTS")]
		public UnityEvent enterEvent;

		[Token(Token = "0x4000EC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public UnityEvent exitEvent;

		[Token(Token = "0x6001038")]
		[Address(RVA = "0xCFB828", Offset = "0xCFB828", VA = "0xCFB828", Slot = "4")]
		public void OnPointerEnter(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6001039")]
		[Address(RVA = "0xCFB844", Offset = "0xCFB844", VA = "0xCFB844", Slot = "5")]
		public void OnPointerExit(PointerEventData eventData)
		{
		}

		[Token(Token = "0x600103A")]
		[Address(RVA = "0xCFB860", Offset = "0xCFB860", VA = "0xCFB860")]
		public PointerEnterEvents()
		{
		}
	}
	[Token(Token = "0x20002E7")]
	public class PressKey : MonoBehaviour
	{
		[Token(Token = "0x4000EC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Header("KEY")]
		[SerializeField]
		public KeyCode hotkey;

		[Token(Token = "0x4000EC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public bool pressAnyKey;

		[Token(Token = "0x4000EC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
		public bool invokeAtStart;

		[Token(Token = "0x4000EC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[Header("KEY ACTION")]
		[SerializeField]
		public UnityEvent pressAction;

		[Token(Token = "0x600103B")]
		[Address(RVA = "0xCFB868", Offset = "0xCFB868", VA = "0xCFB868")]
		private void Start()
		{
		}

		[Token(Token = "0x600103C")]
		[Address(RVA = "0xCFB894", Offset = "0xCFB894", VA = "0xCFB894")]
		private void Update()
		{
		}

		[Token(Token = "0x600103D")]
		[Address(RVA = "0xCFB8E0", Offset = "0xCFB8E0", VA = "0xCFB8E0")]
		public PressKey()
		{
		}
	}
	[Token(Token = "0x20002E8")]
	public class ScrollForMore : MonoBehaviour
	{
		[Token(Token = "0x4000EC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Header("RESOURCES")]
		public Scrollbar listScrollbar;

		[Token(Token = "0x4000EC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Animator SFMAnimator;

		[Token(Token = "0x4000EC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[Header("SETTINGS")]
		public float fadeOutValue;

		[Token(Token = "0x600103E")]
		[Address(RVA = "0xCFB8E8", Offset = "0xCFB8E8", VA = "0xCFB8E8")]
		private void Start()
		{
		}

		[Token(Token = "0x600103F")]
		[Address(RVA = "0xCFB9AC", Offset = "0xCFB9AC", VA = "0xCFB9AC")]
		public void CheckValue()
		{
		}

		[Token(Token = "0x6001040")]
		[Address(RVA = "0xCFBAC8", Offset = "0xCFBAC8", VA = "0xCFBAC8")]
		public ScrollForMore()
		{
		}
	}
	[Token(Token = "0x20002E9")]
	public class ScrollGamepadManager : MonoBehaviour
	{
		[Token(Token = "0x4000EC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Header("SLIDER")]
		public Scrollbar scrollbarObject;

		[Token(Token = "0x4000ECA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float changeValue;

		[Token(Token = "0x4000ECB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[Header("INPUT")]
		public string verticalAxis;

		[Token(Token = "0x6001041")]
		[Address(RVA = "0xCFBAD0", Offset = "0xCFBAD0", VA = "0xCFBAD0")]
		private void Update()
		{
		}

		[Token(Token = "0x6001042")]
		[Address(RVA = "0xCFBB60", Offset = "0xCFBB60", VA = "0xCFBB60")]
		public ScrollGamepadManager()
		{
		}
	}
	[Token(Token = "0x20002EA")]
	public class SliderGamepadManager : MonoBehaviour
	{
		[Token(Token = "0x4000ECC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Header("SLIDER")]
		public Slider sliderObject;

		[Token(Token = "0x4000ECD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float changeValue;

		[Token(Token = "0x4000ECE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[Header("INPUT")]
		public string horizontalAxis;

		[Token(Token = "0x6001043")]
		[Address(RVA = "0xCFBBC4", Offset = "0xCFBBC4", VA = "0xCFBBC4")]
		private void Update()
		{
		}

		[Token(Token = "0x6001044")]
		[Address(RVA = "0xCFBC78", Offset = "0xCFBC78", VA = "0xCFBC78")]
		public SliderGamepadManager()
		{
		}
	}
	[Token(Token = "0x20002EB")]
	public class SliderManager : MonoBehaviour
	{
		[Token(Token = "0x4000ECF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Header("TEXTS")]
		public TextMeshProUGUI valueText;

		[Token(Token = "0x4000ED0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TextMeshProUGUI popupValueText;

		[Token(Token = "0x4000ED1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[Header("SETTINGS")]
		public bool usePercent;

		[Token(Token = "0x4000ED2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		public bool showValue;

		[Token(Token = "0x4000ED3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A")]
		public bool showPopupValue;

		[Token(Token = "0x4000ED4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2B")]
		public bool useRoundValue;

		[Token(Token = "0x4000ED5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Slider mainSlider;

		[Token(Token = "0x6001045")]
		[Address(RVA = "0xCFBCD8", Offset = "0xCFBCD8", VA = "0xCFBCD8")]
		private void Start()
		{
		}

		[Token(Token = "0x6001046")]
		[Address(RVA = "0xCFBD7C", Offset = "0xCFBD7C", VA = "0xCFBD7C")]
		private void Update()
		{
		}

		[Token(Token = "0x6001047")]
		[Address(RVA = "0xCFC140", Offset = "0xCFC140", VA = "0xCFC140")]
		public SliderManager()
		{
		}
	}
	[Token(Token = "0x20002EC")]
	public class SplashScreenManager : MonoBehaviour
	{
		[Token(Token = "0x4000ED6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Header("RESOURCES")]
		public GameObject splashScreen;

		[Token(Token = "0x4000ED7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject mainPanels;

		[Token(Token = "0x4000ED8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameObject homePanel;

		[Token(Token = "0x4000ED9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Animator backgroundAnimator;

		[Token(Token = "0x4000EDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Animator splashScreenAnimator;

		[Token(Token = "0x4000EDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Animator mainPanelsAnimator;

		[Token(Token = "0x4000EDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Animator homePanelAnimator;

		[Token(Token = "0x4000EDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private BlurManager bManager;

		[Token(Token = "0x4000EDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private TimedAction ssTimedAction;

		[Token(Token = "0x4000EDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[Header("SETTINGS")]
		public bool disableSplashScreen;

		[Token(Token = "0x4000EE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
		public bool enableLoginScreen;

		[Token(Token = "0x6001048")]
		[Address(RVA = "0xCFC150", Offset = "0xCFC150", VA = "0xCFC150")]
		private void Start()
		{
		}

		[Token(Token = "0x6001049")]
		[Address(RVA = "0xCFC3F4", Offset = "0xCFC3F4", VA = "0xCFC3F4")]
		public void LoginScreenCheck()
		{
		}

		[Token(Token = "0x600104A")]
		[Address(RVA = "0xCFC4D0", Offset = "0xCFC4D0", VA = "0xCFC4D0")]
		public SplashScreenManager()
		{
		}
	}
	[Token(Token = "0x20002ED")]
	public class SwitchManager : MonoBehaviour
	{
		[Token(Token = "0x4000EE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Header("SWITCH")]
		public bool isOn;

		[Token(Token = "0x4000EE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Animator switchAnimator;

		[Token(Token = "0x4000EE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[Header("EVENT")]
		public UnityEvent onEvent;

		[Token(Token = "0x4000EE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public UnityEvent offEvent;

		[Token(Token = "0x4000EE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private string onTransition;

		[Token(Token = "0x4000EE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private string offTransition;

		[Token(Token = "0x600104B")]
		[Address(RVA = "0xCFC4D8", Offset = "0xCFC4D8", VA = "0xCFC4D8")]
		private void Start()
		{
		}

		[Token(Token = "0x600104C")]
		[Address(RVA = "0xCFC5A0", Offset = "0xCFC5A0", VA = "0xCFC5A0")]
		public void AnimateSwitch()
		{
		}

		[Token(Token = "0x600104D")]
		[Address(RVA = "0xCFC610", Offset = "0xCFC610", VA = "0xCFC610")]
		public SwitchManager()
		{
		}
	}
	[Token(Token = "0x20002EE")]
	public class TimedAction : MonoBehaviour
	{
		[Token(Token = "0x20002EF")]
		[CompilerGenerated]
		private sealed class <TimedEvent>d__2 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000EE9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000EEA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000EEB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public TimedAction <>4__this;

			[Token(Token = "0x170000D1")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001055")]
				[Address(RVA = "0xCFC858", Offset = "0xCFC858", VA = "0xCFC858", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170000D2")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001057")]
				[Address(RVA = "0xCFC8A0", Offset = "0xCFC8A0", VA = "0xCFC8A0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001052")]
			[Address(RVA = "0xCFC708", Offset = "0xCFC708", VA = "0xCFC708")]
			[DebuggerHidden]
			public <TimedEvent>d__2(int <>1__state)
			{
			}

			[Token(Token = "0x6001053")]
			[Address(RVA = "0xCFC78C", Offset = "0xCFC78C", VA = "0xCFC78C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001054")]
			[Address(RVA = "0xCFC790", Offset = "0xCFC790", VA = "0xCFC790", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001056")]
			[Address(RVA = "0xCFC860", Offset = "0xCFC860", VA = "0xCFC860", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000EE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Header("TIMING (SECONDS)")]
		public float timer;

		[Token(Token = "0x4000EE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[Header("TIMER EVENT")]
		public UnityEvent timerAction;

		[Token(Token = "0x600104E")]
		[Address(RVA = "0xCFC694", Offset = "0xCFC694", VA = "0xCFC694")]
		[IteratorStateMachine(typeof(<TimedEvent>d__2))]
		private IEnumerator TimedEvent()
		{
			return null;
		}

		[Token(Token = "0x600104F")]
		[Address(RVA = "0xCFC484", Offset = "0xCFC484", VA = "0xCFC484")]
		public void StartIEnumerator()
		{
		}

		[Token(Token = "0x6001050")]
		[Address(RVA = "0xCFC730", Offset = "0xCFC730", VA = "0xCFC730")]
		public void StopIEnumerator()
		{
		}

		[Token(Token = "0x6001051")]
		[Address(RVA = "0xCFC77C", Offset = "0xCFC77C", VA = "0xCFC77C")]
		public TimedAction()
		{
		}
	}
	[Token(Token = "0x20002F0")]
	public class TooltipContent : MonoBehaviour, IPointerEnterHandler, IEventSystemHandler, IPointerExitHandler
	{
		[Token(Token = "0x4000EEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Header("CONTENT")]
		public string title;

		[Token(Token = "0x4000EED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[TextArea]
		public string description;

		[Token(Token = "0x4000EEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[Header("RESOURCES")]
		public GameObject mouseTooltipObject;

		[Token(Token = "0x4000EEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public TextMeshProUGUI mouseTitle;

		[Token(Token = "0x4000EF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public TextMeshProUGUI mouseDescription;

		[Token(Token = "0x4000EF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public GameObject virtualTooltipObject;

		[Token(Token = "0x4000EF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public TextMeshProUGUI virtualTitle;

		[Token(Token = "0x4000EF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public TextMeshProUGUI virtualDescription;

		[Token(Token = "0x4000EF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[Header("SETTINGS")]
		public bool enableMouse;

		[Token(Token = "0x4000EF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
		public bool enableVirtualCursor;

		[Token(Token = "0x4000EF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Animator mouseAnimator;

		[Token(Token = "0x4000EF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Animator virtualAnimator;

		[Token(Token = "0x4000EF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private BlurManager mouseBlur;

		[Token(Token = "0x4000EF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private BlurManager virtualBlur;

		[Token(Token = "0x6001058")]
		[Address(RVA = "0xCFC8A8", Offset = "0xCFC8A8", VA = "0xCFC8A8")]
		private void Start()
		{
		}

		[Token(Token = "0x6001059")]
		[Address(RVA = "0xCFC9AC", Offset = "0xCFC9AC", VA = "0xCFC9AC", Slot = "4")]
		public void OnPointerEnter(PointerEventData eventData)
		{
		}

		[Token(Token = "0x600105A")]
		[Address(RVA = "0xCFCAF0", Offset = "0xCFCAF0", VA = "0xCFCAF0", Slot = "5")]
		public void OnPointerExit(PointerEventData eventData)
		{
		}

		[Token(Token = "0x600105B")]
		[Address(RVA = "0xCFCBB4", Offset = "0xCFCBB4", VA = "0xCFCBB4")]
		public TooltipContent()
		{
		}
	}
	[Token(Token = "0x20002F1")]
	public class TooltipManagerDesktop : MonoBehaviour
	{
		[Token(Token = "0x4000EFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Header("RESOURCES")]
		[SerializeField]
		private Camera UICamera;

		[Token(Token = "0x4000EFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject tooltipObject;

		[Token(Token = "0x4000EFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameObject tooltipContent;

		[Token(Token = "0x4000EFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public RectTransform tooltipHelper;

		[Token(Token = "0x4000EFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[Header("SETTINGS")]
		[Range(0.05f, 0.5f)]
		public float tooltipSmoothness;

		[Token(Token = "0x4000EFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[Header("TOOLTIP BOUNDS")]
		public int vBorderTop;

		[Token(Token = "0x4000F00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public int vBorderBottom;

		[Token(Token = "0x4000F01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public int hBorderLeft;

		[Token(Token = "0x4000F02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public int hBorderRight;

		[Token(Token = "0x4000F03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private Vector2 uiPos;

		[Token(Token = "0x4000F04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private Vector3 cursorPos;

		[Token(Token = "0x4000F05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private RectTransform tooltipRect;

		[Token(Token = "0x4000F06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Vector3 contentPos;

		[Token(Token = "0x4000F07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private Vector3 tooltipVelocity;

		[Token(Token = "0x600105C")]
		[Address(RVA = "0xCFCBC4", Offset = "0xCFCBC4", VA = "0xCFCBC4")]
		private void Start()
		{
		}

		[Token(Token = "0x600105D")]
		[Address(RVA = "0xCFCC40", Offset = "0xCFCC40", VA = "0xCFCC40")]
		private void Update()
		{
		}

		[Token(Token = "0x600105E")]
		[Address(RVA = "0xCFCD84", Offset = "0xCFCD84", VA = "0xCFCD84")]
		public void CheckForBounds()
		{
		}

		[Token(Token = "0x600105F")]
		[Address(RVA = "0xCFCE10", Offset = "0xCFCE10", VA = "0xCFCE10")]
		public TooltipManagerDesktop()
		{
		}
	}
	[Token(Token = "0x20002F2")]
	public class UIElementSound : MonoBehaviour, IPointerClickHandler, IEventSystemHandler, IPointerEnterHandler
	{
		[Token(Token = "0x4000F08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Header("RESOURCES")]
		public AudioClip hoverSound;

		[Token(Token = "0x4000F09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AudioClip clickSound;

		[Token(Token = "0x4000F0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public AudioClip notificationSound;

		[Token(Token = "0x4000F0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[Header("SETTINGS")]
		public bool enableHoverSound;

		[Token(Token = "0x4000F0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
		public bool enableClickSound;

		[Token(Token = "0x4000F0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x32")]
		public bool isNotification;

		[Token(Token = "0x170000D3")]
		private AudioSource HoverSource
		{
			[Token(Token = "0x6001060")]
			[Address(RVA = "0xCFCE90", Offset = "0xCFCE90", VA = "0xCFCE90")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000D4")]
		private AudioSource ClickSource
		{
			[Token(Token = "0x6001061")]
			[Address(RVA = "0xCFCED8", Offset = "0xCFCED8", VA = "0xCFCED8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000D5")]
		private AudioSource NotificationSource
		{
			[Token(Token = "0x6001062")]
			[Address(RVA = "0xCFCF20", Offset = "0xCFCF20", VA = "0xCFCF20")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001063")]
		[Address(RVA = "0xCFCF68", Offset = "0xCFCF68", VA = "0xCFCF68")]
		private void Start()
		{
		}

		[Token(Token = "0x6001064")]
		[Address(RVA = "0xCFD020", Offset = "0xCFD020", VA = "0xCFD020", Slot = "5")]
		public void OnPointerEnter(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6001065")]
		[Address(RVA = "0xCFD054", Offset = "0xCFD054", VA = "0xCFD054", Slot = "4")]
		public void OnPointerClick(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6001066")]
		[Address(RVA = "0xCFD088", Offset = "0xCFD088", VA = "0xCFD088")]
		public void Notification()
		{
		}

		[Token(Token = "0x6001067")]
		[Address(RVA = "0xCFD0BC", Offset = "0xCFD0BC", VA = "0xCFD0BC")]
		public UIElementSound()
		{
		}
	}
	[Token(Token = "0x20002F3")]
	[RequireComponent(typeof(ParticleSystem))]
	[ExecuteInEditMode]
	[RequireComponent(typeof(CanvasRenderer))]
	public class UIParticleRenderer : MaskableGraphic
	{
		[Token(Token = "0x4000F0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[Tooltip("Having this enabled run the system in LateUpdate rather than in Update making it faster but less precise (more clunky)")]
		public bool fixedTime;

		[Token(Token = "0x4000F0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private Transform _transform;

		[Token(Token = "0x4000F10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private ParticleSystem pSystem;

		[Token(Token = "0x4000F11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private ParticleSystem.Particle[] particles;

		[Token(Token = "0x4000F12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private UIVertex[] _quad;

		[Token(Token = "0x4000F13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private Vector4 imageUV;

		[Token(Token = "0x4000F14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		private ParticleSystem.TextureSheetAnimationModule textureSheetAnimation;

		[Token(Token = "0x4000F15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		private int textureSheetAnimationFrames;

		[Token(Token = "0x4000F16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
		private Vector2 textureSheetAnimationFrameSize;

		[Token(Token = "0x4000F17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		private ParticleSystemRenderer pRenderer;

		[Token(Token = "0x4000F18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		private Material currentMaterial;

		[Token(Token = "0x4000F19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		private Texture currentTexture;

		[Token(Token = "0x4000F1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		private ParticleSystem.MainModule mainModule;

		[Token(Token = "0x170000D6")]
		public override Texture mainTexture
		{
			[Token(Token = "0x6001068")]
			[Address(RVA = "0xCFD0CC", Offset = "0xCFD0CC", VA = "0xCFD0CC", Slot = "35")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001069")]
		[Address(RVA = "0xCFD0D4", Offset = "0xCFD0D4", VA = "0xCFD0D4")]
		protected bool Initialize()
		{
			return default(bool);
		}

		[Token(Token = "0x600106A")]
		[Address(RVA = "0xCFD5D4", Offset = "0xCFD5D4", VA = "0xCFD5D4", Slot = "4")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x600106B")]
		[Address(RVA = "0xCFD60C", Offset = "0xCFD60C", VA = "0xCFD60C", Slot = "44")]
		protected override void OnPopulateMesh(VertexHelper vh)
		{
		}

		[Token(Token = "0x600106C")]
		[Address(RVA = "0xCFDE40", Offset = "0xCFDE40", VA = "0xCFDE40")]
		private void Update()
		{
		}

		[Token(Token = "0x600106D")]
		[Address(RVA = "0xCFE038", Offset = "0xCFE038", VA = "0xCFE038")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x600106E")]
		[Address(RVA = "0xCFE2A4", Offset = "0xCFE2A4", VA = "0xCFE2A4")]
		public UIParticleRenderer()
		{
		}
	}
	[Token(Token = "0x20002F4")]
	public class VirtualCursor : PointerInputModule
	{
		[Token(Token = "0x20002F5")]
		public enum CursorType
		{
			[Token(Token = "0x4000F30")]
			STANDARD,
			[Token(Token = "0x4000F31")]
			CIRCLE,
			[Token(Token = "0x4000F32")]
			FRAME
		}

		[Token(Token = "0x4000F1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[Header("OBJECTS")]
		public RectTransform border;

		[Token(Token = "0x4000F1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public GameObject tooltipObject;

		[Token(Token = "0x4000F1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public GameObject standardCursor;

		[Token(Token = "0x4000F1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public GameObject circleCursor;

		[Token(Token = "0x4000F1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public GameObject frameCursor;

		[Token(Token = "0x4000F20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[Header("INPUT")]
		public new EventSystem eventSystem;

		[Token(Token = "0x4000F21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public string horizontalAxis;

		[Token(Token = "0x4000F22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public string verticalAxis;

		[Token(Token = "0x4000F23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[Range(100f, 10000f)]
		[Header("SETTINGS")]
		[Tooltip("1000 equals 1.0 sensivity")]
		public float speed;

		[Token(Token = "0x4000F24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		[Range(0.05f, 0.5f)]
		public float tooltipSmoothness;

		[Token(Token = "0x4000F25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public int tooltipXPosition;

		[Token(Token = "0x4000F26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		public int tooltipYPosition;

		[Token(Token = "0x4000F27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public CursorType cursorType;

		[Token(Token = "0x4000F28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private PointerEventData pointer;

		[Token(Token = "0x4000F29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private GameObject selectedCursor;

		[Token(Token = "0x4000F2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private Animator cursorAnim;

		[Token(Token = "0x4000F2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private Vector2 cursorPos;

		[Token(Token = "0x4000F2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private RectTransform cursorObj;

		[Token(Token = "0x4000F2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private Vector3 tooltipPos;

		[Token(Token = "0x4000F2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
		private Vector3 tooltipVelocity;

		[Token(Token = "0x600106F")]
		[Address(RVA = "0xCFE344", Offset = "0xCFE344", VA = "0xCFE344")]
		private new void Start()
		{
		}

		[Token(Token = "0x6001070")]
		[Address(RVA = "0xCFE524", Offset = "0xCFE524", VA = "0xCFE524")]
		public void AnimateCursorIn()
		{
		}

		[Token(Token = "0x6001071")]
		[Address(RVA = "0xCFE5A0", Offset = "0xCFE5A0", VA = "0xCFE5A0")]
		public void AnimateCursorOut()
		{
		}

		[Token(Token = "0x6001072")]
		[Address(RVA = "0xCFE61C", Offset = "0xCFE61C", VA = "0xCFE61C")]
		public void CheckForBounds()
		{
		}

		[Token(Token = "0x6001073")]
		[Address(RVA = "0xCFE6B0", Offset = "0xCFE6B0", VA = "0xCFE6B0")]
		private void Update()
		{
		}

		[Token(Token = "0x6001074")]
		[Address(RVA = "0xCFE8E8", Offset = "0xCFE8E8", VA = "0xCFE8E8", Slot = "17")]
		public override void Process()
		{
		}

		[Token(Token = "0x6001075")]
		[Address(RVA = "0xCFEBA0", Offset = "0xCFEBA0", VA = "0xCFEBA0")]
		public VirtualCursor()
		{
		}
	}
	[Token(Token = "0x20002F6")]
	public class VirtualCursorAnimate : MonoBehaviour, IPointerEnterHandler, IEventSystemHandler, IPointerExitHandler
	{
		[Token(Token = "0x4000F33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Header("RESOURCES")]
		public VirtualCursor virtualCursor;

		[Token(Token = "0x6001076")]
		[Address(RVA = "0xCFEC8C", Offset = "0xCFEC8C", VA = "0xCFEC8C")]
		private void Start()
		{
		}

		[Token(Token = "0x6001077")]
		[Address(RVA = "0xCFED94", Offset = "0xCFED94", VA = "0xCFED94", Slot = "4")]
		public void OnPointerEnter(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6001078")]
		[Address(RVA = "0xCFEDB0", Offset = "0xCFEDB0", VA = "0xCFEDB0", Slot = "5")]
		public void OnPointerExit(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6001079")]
		[Address(RVA = "0xCFEDCC", Offset = "0xCFEDCC", VA = "0xCFEDCC")]
		public VirtualCursorAnimate()
		{
		}
	}
}
namespace VolumetricLines
{
	[Token(Token = "0x20002F7")]
	[RequireComponent(typeof(MeshFilter))]
	[RequireComponent(typeof(MeshRenderer))]
	[ExecuteInEditMode]
	public class VolumetricLineBehavior : MonoBehaviour
	{
		[Token(Token = "0x4000F34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly Vector3 Average;

		[Token(Token = "0x4000F35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		public Material m_templateMaterial;

		[Token(Token = "0x4000F36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private bool m_doNotOverwriteTemplateMaterialProperties;

		[Token(Token = "0x4000F37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private Vector3 m_startPos;

		[Token(Token = "0x4000F38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Vector3 m_endPos;

		[Token(Token = "0x4000F39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[SerializeField]
		private Color m_lineColor;

		[Token(Token = "0x4000F3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[SerializeField]
		private float m_lineWidth;

		[Token(Token = "0x4000F3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		[Range(0f, 1f)]
		private float m_lightSaberFactor;

		[Token(Token = "0x4000F3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Material m_material;

		[Token(Token = "0x4000F3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private MeshFilter m_meshFilter;

		[Token(Token = "0x170000D7")]
		public Material TemplateMaterial
		{
			[Token(Token = "0x600107A")]
			[Address(RVA = "0xCFEDD4", Offset = "0xCFEDD4", VA = "0xCFEDD4")]
			get
			{
				return null;
			}
			[Token(Token = "0x600107B")]
			[Address(RVA = "0xCFEDDC", Offset = "0xCFEDDC", VA = "0xCFEDDC")]
			set
			{
			}
		}

		[Token(Token = "0x170000D8")]
		public bool DoNotOverwriteTemplateMaterialProperties
		{
			[Token(Token = "0x600107C")]
			[Address(RVA = "0xCFEDE4", Offset = "0xCFEDE4", VA = "0xCFEDE4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600107D")]
			[Address(RVA = "0xCFEDEC", Offset = "0xCFEDEC", VA = "0xCFEDEC")]
			set
			{
			}
		}

		[Token(Token = "0x170000D9")]
		public Color LineColor
		{
			[Token(Token = "0x600107E")]
			[Address(RVA = "0xCFEDF8", Offset = "0xCFEDF8", VA = "0xCFEDF8")]
			get
			{
				return default(Color);
			}
			[Token(Token = "0x600107F")]
			[Address(RVA = "0xCFEE04", Offset = "0xCFEE04", VA = "0xCFEE04")]
			set
			{
			}
		}

		[Token(Token = "0x170000DA")]
		public float LineWidth
		{
			[Token(Token = "0x6001080")]
			[Address(RVA = "0xCFF070", Offset = "0xCFF070", VA = "0xCFF070")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001081")]
			[Address(RVA = "0xCFF078", Offset = "0xCFF078", VA = "0xCFF078")]
			set
			{
			}
		}

		[Token(Token = "0x170000DB")]
		public float LightSaberFactor
		{
			[Token(Token = "0x6001082")]
			[Address(RVA = "0xCFF20C", Offset = "0xCFF20C", VA = "0xCFF20C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001083")]
			[Address(RVA = "0xCFF214", Offset = "0xCFF214", VA = "0xCFF214")]
			set
			{
			}
		}

		[Token(Token = "0x170000DC")]
		public Vector3 StartPos
		{
			[Token(Token = "0x6001084")]
			[Address(RVA = "0xCFF2D0", Offset = "0xCFF2D0", VA = "0xCFF2D0")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6001085")]
			[Address(RVA = "0xCFF2DC", Offset = "0xCFF2DC", VA = "0xCFF2DC")]
			set
			{
			}
		}

		[Token(Token = "0x170000DD")]
		public Vector3 EndPos
		{
			[Token(Token = "0x6001086")]
			[Address(RVA = "0xCFF5E0", Offset = "0xCFF5E0", VA = "0xCFF5E0")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6001087")]
			[Address(RVA = "0xCFF5EC", Offset = "0xCFF5EC", VA = "0xCFF5EC")]
			set
			{
			}
		}

		[Token(Token = "0x6001088")]
		[Address(RVA = "0xCFEED0", Offset = "0xCFEED0", VA = "0xCFEED0")]
		private void CreateMaterial()
		{
		}

		[Token(Token = "0x6001089")]
		[Address(RVA = "0xCFF714", Offset = "0xCFF714", VA = "0xCFF714")]
		private void DestroyMaterial()
		{
		}

		[Token(Token = "0x600108A")]
		[Address(RVA = "0xCFF7B4", Offset = "0xCFF7B4", VA = "0xCFF7B4")]
		private float CalculateLineScale()
		{
			return default(float);
		}

		[Token(Token = "0x600108B")]
		[Address(RVA = "0xCFF860", Offset = "0xCFF860", VA = "0xCFF860")]
		public void UpdateLineScale()
		{
		}

		[Token(Token = "0x600108C")]
		[Address(RVA = "0xCFF60C", Offset = "0xCFF60C", VA = "0xCFF60C")]
		private void SetAllMaterialProperties()
		{
		}

		[Token(Token = "0x600108D")]
		[Address(RVA = "0xCFF908", Offset = "0xCFF908", VA = "0xCFF908")]
		private Bounds CalculateBounds()
		{
			return default(Bounds);
		}

		[Token(Token = "0x600108E")]
		[Address(RVA = "0xCFF12C", Offset = "0xCFF12C", VA = "0xCFF12C")]
		public void UpdateBounds()
		{
		}

		[Token(Token = "0x600108F")]
		[Address(RVA = "0xCFF2F0", Offset = "0xCFF2F0", VA = "0xCFF2F0")]
		public void SetStartAndEndPoints(Vector3 startPoint, Vector3 endPoint)
		{
		}

		[Token(Token = "0x6001090")]
		[Address(RVA = "0xCFFAC0", Offset = "0xCFFAC0", VA = "0xCFFAC0")]
		private void Start()
		{
		}

		[Token(Token = "0x6001091")]
		[Address(RVA = "0xCFFBF0", Offset = "0xCFFBF0", VA = "0xCFFBF0")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001092")]
		[Address(RVA = "0xCFFCC4", Offset = "0xCFFCC4", VA = "0xCFFCC4")]
		private void Update()
		{
		}

		[Token(Token = "0x6001093")]
		[Address(RVA = "0xCFFD04", Offset = "0xCFFD04", VA = "0xCFFD04")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x6001094")]
		[Address(RVA = "0xCFFDA0", Offset = "0xCFFDA0", VA = "0xCFFDA0")]
		private void OnDrawGizmos()
		{
		}

		[Token(Token = "0x6001095")]
		[Address(RVA = "0xCFFE5C", Offset = "0xCFFE5C", VA = "0xCFFE5C")]
		public VolumetricLineBehavior()
		{
		}
	}
	[Token(Token = "0x20002F8")]
	[RequireComponent(typeof(MeshFilter))]
	[RequireComponent(typeof(MeshRenderer))]
	[ExecuteInEditMode]
	public class VolumetricLineStripBehavior : MonoBehaviour
	{
		[Token(Token = "0x4000F3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly Vector3 Average;

		[Token(Token = "0x4000F3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		public Material m_templateMaterial;

		[Token(Token = "0x4000F40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private bool m_doNotOverwriteTemplateMaterialProperties;

		[Token(Token = "0x4000F41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private Color m_lineColor;

		[Token(Token = "0x4000F42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[SerializeField]
		private float m_lineWidth;

		[Token(Token = "0x4000F43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		[Range(0f, 1f)]
		private float m_lightSaberFactor;

		[Token(Token = "0x4000F44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Material m_material;

		[Token(Token = "0x4000F45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private MeshFilter m_meshFilter;

		[Token(Token = "0x4000F46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private Vector3[] m_lineVertices;

		[Token(Token = "0x170000DE")]
		public Material TemplateMaterial
		{
			[Token(Token = "0x6001097")]
			[Address(RVA = "0xCFFEC8", Offset = "0xCFFEC8", VA = "0xCFFEC8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001098")]
			[Address(RVA = "0xCFFED0", Offset = "0xCFFED0", VA = "0xCFFED0")]
			set
			{
			}
		}

		[Token(Token = "0x170000DF")]
		public bool DoNotOverwriteTemplateMaterialProperties
		{
			[Token(Token = "0x6001099")]
			[Address(RVA = "0xCFFED8", Offset = "0xCFFED8", VA = "0xCFFED8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600109A")]
			[Address(RVA = "0xCFFEE0", Offset = "0xCFFEE0", VA = "0xCFFEE0")]
			set
			{
			}
		}

		[Token(Token = "0x170000E0")]
		public Color LineColor
		{
			[Token(Token = "0x600109B")]
			[Address(RVA = "0xCFFEEC", Offset = "0xCFFEEC", VA = "0xCFFEEC")]
			get
			{
				return default(Color);
			}
			[Token(Token = "0x600109C")]
			[Address(RVA = "0xCFFEF8", Offset = "0xCFFEF8", VA = "0xCFFEF8")]
			set
			{
			}
		}

		[Token(Token = "0x170000E1")]
		public float LineWidth
		{
			[Token(Token = "0x600109D")]
			[Address(RVA = "0xD00164", Offset = "0xD00164", VA = "0xD00164")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600109E")]
			[Address(RVA = "0xD0016C", Offset = "0xD0016C", VA = "0xD0016C")]
			set
			{
			}
		}

		[Token(Token = "0x170000E2")]
		public float LightSaberFactor
		{
			[Token(Token = "0x600109F")]
			[Address(RVA = "0xD00300", Offset = "0xD00300", VA = "0xD00300")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60010A0")]
			[Address(RVA = "0xD00308", Offset = "0xD00308", VA = "0xD00308")]
			set
			{
			}
		}

		[Token(Token = "0x170000E3")]
		public Vector3[] LineVertices
		{
			[Token(Token = "0x60010A1")]
			[Address(RVA = "0xD003C4", Offset = "0xD003C4", VA = "0xD003C4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60010A2")]
		[Address(RVA = "0xCFFFC4", Offset = "0xCFFFC4", VA = "0xCFFFC4")]
		private void CreateMaterial()
		{
		}

		[Token(Token = "0x60010A3")]
		[Address(RVA = "0xD004CC", Offset = "0xD004CC", VA = "0xD004CC")]
		private void DestroyMaterial()
		{
		}

		[Token(Token = "0x60010A4")]
		[Address(RVA = "0xD0056C", Offset = "0xD0056C", VA = "0xD0056C")]
		private float CalculateLineScale()
		{
			return default(float);
		}

		[Token(Token = "0x60010A5")]
		[Address(RVA = "0xD00618", Offset = "0xD00618", VA = "0xD00618")]
		public void UpdateLineScale()
		{
		}

		[Token(Token = "0x60010A6")]
		[Address(RVA = "0xD003CC", Offset = "0xD003CC", VA = "0xD003CC")]
		private void SetAllMaterialProperties()
		{
		}

		[Token(Token = "0x60010A7")]
		[Address(RVA = "0xD012EC", Offset = "0xD012EC", VA = "0xD012EC")]
		private Bounds CalculateBounds()
		{
			return default(Bounds);
		}

		[Token(Token = "0x60010A8")]
		[Address(RVA = "0xD00220", Offset = "0xD00220", VA = "0xD00220")]
		public void UpdateBounds()
		{
		}

		[Token(Token = "0x60010A9")]
		[Address(RVA = "0xD006C0", Offset = "0xD006C0", VA = "0xD006C0")]
		public void UpdateLineVertices(Vector3[] newSetOfVertices)
		{
		}

		[Token(Token = "0x60010AA")]
		[Address(RVA = "0xD01508", Offset = "0xD01508", VA = "0xD01508")]
		private void Start()
		{
		}

		[Token(Token = "0x60010AB")]
		[Address(RVA = "0xD015BC", Offset = "0xD015BC", VA = "0xD015BC")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60010AC")]
		[Address(RVA = "0xD01690", Offset = "0xD01690", VA = "0xD01690")]
		private void Update()
		{
		}

		[Token(Token = "0x60010AD")]
		[Address(RVA = "0xD016D0", Offset = "0xD016D0", VA = "0xD016D0")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x60010AE")]
		[Address(RVA = "0xD0176C", Offset = "0xD0176C", VA = "0xD0176C")]
		private void OnDrawGizmos()
		{
		}

		[Token(Token = "0x60010AF")]
		[Address(RVA = "0xD018C0", Offset = "0xD018C0", VA = "0xD018C0")]
		public VolumetricLineStripBehavior()
		{
		}
	}
	[Token(Token = "0x20002F9")]
	public static class VolumetricLineVertexData
	{
		[Token(Token = "0x4000F47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly Vector2[] TexCoords;

		[Token(Token = "0x4000F48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static readonly Vector2[] VertexOffsets;

		[Token(Token = "0x4000F49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static readonly int[] Indices;
	}
	[Token(Token = "0x20002FA")]
	public class VolumetricMultiLineBehavior : MonoBehaviour
	{
		[Token(Token = "0x4000F4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		public Material m_templateMaterial;

		[Token(Token = "0x4000F4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private bool m_doNotOverwriteTemplateMaterialProperties;

		[Token(Token = "0x4000F4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private Color m_lineColor;

		[Token(Token = "0x4000F4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[SerializeField]
		private float m_lineWidth;

		[Token(Token = "0x4000F4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		[Range(0f, 1f)]
		private float m_lightSaberFactor;

		[Token(Token = "0x4000F4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Vector3[] m_lineVertices;

		[Token(Token = "0x4000F50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private VolumetricLineBehavior[] m_volumetricLines;

		[Token(Token = "0x170000E4")]
		public Material TemplateMaterial
		{
			[Token(Token = "0x60010B2")]
			[Address(RVA = "0xD01B18", Offset = "0xD01B18", VA = "0xD01B18")]
			get
			{
				return null;
			}
			[Token(Token = "0x60010B3")]
			[Address(RVA = "0xD01B20", Offset = "0xD01B20", VA = "0xD01B20")]
			set
			{
			}
		}

		[Token(Token = "0x170000E5")]
		public bool DoNotOverwriteTemplateMaterialProperties
		{
			[Token(Token = "0x60010B4")]
			[Address(RVA = "0xD01B28", Offset = "0xD01B28", VA = "0xD01B28")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60010B5")]
			[Address(RVA = "0xD01B30", Offset = "0xD01B30", VA = "0xD01B30")]
			set
			{
			}
		}

		[Token(Token = "0x170000E6")]
		public Color LineColor
		{
			[Token(Token = "0x60010B6")]
			[Address(RVA = "0xD01B3C", Offset = "0xD01B3C", VA = "0xD01B3C")]
			get
			{
				return default(Color);
			}
			[Token(Token = "0x60010B7")]
			[Address(RVA = "0xD01B48", Offset = "0xD01B48", VA = "0xD01B48")]
			set
			{
			}
		}

		[Token(Token = "0x170000E7")]
		public float LineWidth
		{
			[Token(Token = "0x60010B8")]
			[Address(RVA = "0xD01C80", Offset = "0xD01C80", VA = "0xD01C80")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60010B9")]
			[Address(RVA = "0xD01C88", Offset = "0xD01C88", VA = "0xD01C88")]
			set
			{
			}
		}

		[Token(Token = "0x170000E8")]
		public float LightSaberFactor
		{
			[Token(Token = "0x60010BA")]
			[Address(RVA = "0xD01D9C", Offset = "0xD01D9C", VA = "0xD01D9C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60010BB")]
			[Address(RVA = "0xD01DA4", Offset = "0xD01DA4", VA = "0xD01DA4")]
			set
			{
			}
		}

		[Token(Token = "0x60010BC")]
		[Address(RVA = "0xD01EB8", Offset = "0xD01EB8", VA = "0xD01EB8")]
		public void CreateAllVolumetricLines()
		{
		}

		[Token(Token = "0x60010BD")]
		[Address(RVA = "0xD02230", Offset = "0xD02230", VA = "0xD02230")]
		public void DestroyAllVolumetricLines()
		{
		}

		[Token(Token = "0x60010BE")]
		[Address(RVA = "0xD02394", Offset = "0xD02394", VA = "0xD02394")]
		public void UpdateLineVertices(Vector3[] newSetOfVertices)
		{
		}

		[Token(Token = "0x60010BF")]
		[Address(RVA = "0xD023C8", Offset = "0xD023C8", VA = "0xD023C8")]
		private void SetAllMaterialProperties()
		{
		}

		[Token(Token = "0x60010C0")]
		[Address(RVA = "0xD023F8", Offset = "0xD023F8", VA = "0xD023F8")]
		private void Start()
		{
		}

		[Token(Token = "0x60010C1")]
		[Address(RVA = "0xD023FC", Offset = "0xD023FC", VA = "0xD023FC")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60010C2")]
		[Address(RVA = "0xD02400", Offset = "0xD02400", VA = "0xD02400")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x60010C3")]
		[Address(RVA = "0xD02404", Offset = "0xD02404", VA = "0xD02404")]
		private void OnDrawGizmos()
		{
		}

		[Token(Token = "0x60010C4")]
		[Address(RVA = "0xD02558", Offset = "0xD02558", VA = "0xD02558")]
		public VolumetricMultiLineBehavior()
		{
		}
	}
}
namespace VolumetricLines.Utils
{
	[Token(Token = "0x20002FB")]
	public static class TransformExtensionMethods
	{
		[Token(Token = "0x60010C5")]
		[Address(RVA = "0xD02560", Offset = "0xD02560", VA = "0xD02560")]
		public static float GetGlobalUniformScaleForLineWidth(this Transform trans)
		{
			return default(float);
		}
	}
}
namespace VolumetricLights
{
	[Token(Token = "0x20002FC")]
	public delegate void PropertiesChangedEvent(VolumetricLight volumetricLight);
	[Token(Token = "0x20002FD")]
	[RequireComponent(typeof(Light))]
	[ExecuteAlways]
	[AddComponentMenu("Effects/Volumetric Light", 1000)]
	public class VolumetricLight : MonoBehaviour
	{
		[Token(Token = "0x20002FE")]
		private static class ShaderParams
		{
			[Token(Token = "0x4000FC4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static int RayMarchSettings;

			[Token(Token = "0x4000FC5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public static int Density;

			[Token(Token = "0x4000FC6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static int FallOff;

			[Token(Token = "0x4000FC7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public static int RangeFallOff;

			[Token(Token = "0x4000FC8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static int Penumbra;

			[Token(Token = "0x4000FC9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public static int NoiseFinalMultiplier;

			[Token(Token = "0x4000FCA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public static int NoiseScale;

			[Token(Token = "0x4000FCB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public static int NoiseStrength;

			[Token(Token = "0x4000FCC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public static int NoiseTex;

			[Token(Token = "0x4000FCD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public static int BlendDest;

			[Token(Token = "0x4000FCE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public static int BlendSrc;

			[Token(Token = "0x4000FCF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public static int AreaExtents;

			[Token(Token = "0x4000FD0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public static int BoundsExtents;

			[Token(Token = "0x4000FD1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			public static int BoundsCenter;

			[Token(Token = "0x4000FD2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public static int ExtraGeoData;

			[Token(Token = "0x4000FD3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			public static int ConeAxis;

			[Token(Token = "0x4000FD4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public static int ConeTipData;

			[Token(Token = "0x4000FD5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			public static int WorldToLocalMatrix;

			[Token(Token = "0x4000FD6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public static int ToLightDir;

			[Token(Token = "0x4000FD7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
			public static int WindDirection;

			[Token(Token = "0x4000FD8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			public static int LightColor;

			[Token(Token = "0x4000FD9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
			public static int ParticleTintColor;

			[Token(Token = "0x4000FDA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			public static int ParticleDistanceAtten;

			[Token(Token = "0x4000FDB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
			public static int CookieTexture;

			[Token(Token = "0x4000FDC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			public static int BlueNoiseTexture;

			[Token(Token = "0x4000FDD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
			public static int ShadowTexture;

			[Token(Token = "0x4000FDE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			public static int ShadowIntensity;

			[Token(Token = "0x4000FDF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
			public static int ShadowMatrix;

			[Token(Token = "0x4000FE0")]
			public const string SKW_NOISE = "VL_NOISE";

			[Token(Token = "0x4000FE1")]
			public const string SKW_BLUENOISE = "VL_BLUENOISE";

			[Token(Token = "0x4000FE2")]
			public const string SKW_SPOT = "VL_SPOT";

			[Token(Token = "0x4000FE3")]
			public const string SKW_SPOT_COOKIE = "VL_SPOT_COOKIE";

			[Token(Token = "0x4000FE4")]
			public const string SKW_POINT = "VL_POINT";

			[Token(Token = "0x4000FE5")]
			public const string SKW_AREA_RECT = "VL_AREA_RECT";

			[Token(Token = "0x4000FE6")]
			public const string SKW_AREA_DISC = "VL_AREA_DISC";

			[Token(Token = "0x4000FE7")]
			public const string SKW_SHADOWS = "VL_SHADOWS";

			[Token(Token = "0x4000FE8")]
			public const string SKW_DIFFUSION = "VL_DIFFUSION";

			[Token(Token = "0x4000FE9")]
			public const string SKW_PHYSICAL_ATTEN = "VL_PHYSICAL_ATTEN";

			[Token(Token = "0x4000FEA")]
			public const string SKW_CUSTOM_BOUNDS = "VL_CUSTOM_BOUNDS";
		}

		[Token(Token = "0x4000F52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool profileSync;

		[Token(Token = "0x4000F53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		public bool useCustomBounds;

		[Token(Token = "0x4000F54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public Bounds bounds;

		[Token(Token = "0x4000F55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public VolumetricLightProfile profile;

		[Token(Token = "0x4000F56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public float customRange;

		[Token(Token = "0x4000F57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("Currently only used for point light occlusion orientation.")]
		public Transform targetCamera;

		[Token(Token = "0x4000F58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public bool useCustomSize;

		[Token(Token = "0x4000F59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public float areaWidth;

		[Token(Token = "0x4000F5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public float areaHeight;

		[NonSerialized]
		[Token(Token = "0x4000F5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Light lightComp;

		[Token(Token = "0x4000F5C")]
		private const float GOLDEN_RATIO = 0.618034f;

		[Token(Token = "0x4000F5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private MeshFilter mf;

		[NonSerialized]
		[Token(Token = "0x4000F5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public MeshRenderer meshRenderer;

		[Token(Token = "0x4000F5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Material fogMat;

		[Token(Token = "0x4000F60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Material fogMatLight;

		[Token(Token = "0x4000F61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Material fogMatInvisible;

		[Token(Token = "0x4000F62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Vector4 windDirectionAcum;

		[Token(Token = "0x4000F63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private bool requireUpdateMaterial;

		[Token(Token = "0x4000F64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private List<string> keywords;

		[Token(Token = "0x4000F65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Texture2D blueNoiseTex;

		[Token(Token = "0x4000F66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private float distanceToCameraSqr;

		[NonSerialized]
		[Token(Token = "0x4000F67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Transform mainCamera;

		[Token(Token = "0x4000F68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		private float lastDistanceCheckTime;

		[Token(Token = "0x4000F69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private bool wasInRange;

		[Token(Token = "0x4000F6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static List<VolumetricLight> volumetricLights;

		[NonSerialized]
		[Token(Token = "0x4000F6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC1")]
		public bool isInvisible;

		[Token(Token = "0x4000F6C")]
		private const int SIDES = 32;

		[Token(Token = "0x4000F6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private readonly List<Vector3> vertices;

		[Token(Token = "0x4000F6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private readonly List<int> indices;

		[Token(Token = "0x4000F6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private float generatedRange;

		[Token(Token = "0x4000F70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		private float generatedTipRadius;

		[Token(Token = "0x4000F71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private float generatedSpotAngle;

		[Token(Token = "0x4000F72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		private float generatedBaseRadius;

		[Token(Token = "0x4000F73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private float generatedAreaWidth;

		[Token(Token = "0x4000F74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
		private float generatedAreaHeight;

		[Token(Token = "0x4000F75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private float generatedAreaFrustumAngle;

		[Token(Token = "0x4000F76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
		private float generatedAreaFrustumMultiplier;

		[Token(Token = "0x4000F77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private LightType generatedType;

		[Token(Token = "0x4000F78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static Vector3[] faceVerticesForward;

		[Token(Token = "0x4000F79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static Vector3[] faceVerticesBack;

		[Token(Token = "0x4000F7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static Vector3[] faceVerticesLeft;

		[Token(Token = "0x4000F7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private static Vector3[] faceVerticesRight;

		[Token(Token = "0x4000F7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private static Vector3[] faceVerticesTop;

		[Token(Token = "0x4000F7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private static Vector3[] faceVerticesBottom;

		[Token(Token = "0x4000F7E")]
		private const string PARTICLE_SYSTEM_NAME = "DustParticles";

		[Token(Token = "0x4000F7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		private Material particleMaterial;

		[NonSerialized]
		[Token(Token = "0x4000F80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		public ParticleSystem ps;

		[Token(Token = "0x4000F81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		private ParticleSystemRenderer psRenderer;

		[Token(Token = "0x4000F82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		private Vector3 psLastPos;

		[Token(Token = "0x4000F83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
		private Quaternion psLastRot;

		[Token(Token = "0x4000F84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
		[Header("Rendering")]
		public BlendMode blendMode;

		[Token(Token = "0x4000F85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		public RaymarchPresets raymarchPreset;

		[Token(Token = "0x4000F86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x13C")]
		[Range(1f, 256f)]
		[Tooltip("Determines the general accuracy of the effect. The greater this value, the more accurate effect (shadow occlusion as well). Try to keep this value as low as possible while maintainig a good visual result. If you need better performance increase the 'Raymarch Min Step' and then 'Jittering' amount to improve quality.")]
		public int raymarchQuality;

		[Token(Token = "0x4000F87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		[Tooltip("Determines the minimum step size. Increase to improve performance / decrease to improve accuracy. When increasing this value, you can also increase 'Jittering' amount to improve quality.")]
		public float raymarchMinStep;

		[Token(Token = "0x4000F88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
		[Tooltip("Increase to reduce inaccuracy due to low number of samples (due to a high raymarch step size).")]
		public float jittering;

		[Token(Token = "0x4000F89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		[Tooltip("Increase to reduce banding artifacts. Usually jittering has a bigger impact in reducing artifacts.")]
		[Range(0f, 2f)]
		public float dithering;

		[Token(Token = "0x4000F8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14C")]
		[Tooltip("Uses blue noise for jittering computation reducing moiré pattern of normal jitter. Usually not needed unless you use shadow occlusion. It adds an additional texture fetch so use only if it provides you a clear visual improvement.")]
		public bool useBlueNoise;

		[Token(Token = "0x4000F8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		[Tooltip("The render queue for this renderer. By default, all transparent objects use a render queue of 3000. Use a lower value to render before all transparent objects.")]
		public int renderQueue;

		[Token(Token = "0x4000F8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x154")]
		[Tooltip("Optional sorting layer Id (number) for this renderer. By default 0. Usually used to control the order with other transparent renderers, like Sprite Renderer.")]
		public int sortingLayerID;

		[Token(Token = "0x4000F8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		[Tooltip("Optional sorting order for this renderer. Used to control the order with other transparent renderers, like Sprite Renderer.")]
		public int sortingOrder;

		[Token(Token = "0x4000F8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x15C")]
		[Tooltip("Ignores light enable state. Always show volumetric fog. This option is useful to produce fake volumetric lights.")]
		public bool alwaysOn;

		[Token(Token = "0x4000F8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x15D")]
		[Tooltip("Fully enable/disable volumetric effect when far from main camera in order to optimize performance")]
		public bool autoToggle;

		[Token(Token = "0x4000F90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		[Tooltip("Distance to the light source at which the volumetric effect starts to dim. Note that the distance is to the light position regardless of its light range or volume so you should consider the light area or range into this distance as well.")]
		public float distanceStartDimming;

		[Token(Token = "0x4000F91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x164")]
		[Tooltip("Distance to the light source at which the volumetric effect is fully deactivated. Note that the distance is to the light position regardless of its light range or volume so you should consider the light area or range into this distance as well.")]
		public float distanceDeactivation;

		[Token(Token = "0x4000F92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		[Tooltip("Minimum time between distance checks")]
		public float autoToggleCheckInterval;

		[Token(Token = "0x4000F93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x16C")]
		[Header("Appearance")]
		public bool useNoise;

		[Token(Token = "0x4000F94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		public Texture3D noiseTexture;

		[Token(Token = "0x4000F95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		[Range(0f, 3f)]
		public float noiseStrength;

		[Token(Token = "0x4000F96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x17C")]
		public float noiseScale;

		[Token(Token = "0x4000F97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		public float noiseFinalMultiplier;

		[Token(Token = "0x4000F98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x184")]
		public float density;

		[Token(Token = "0x4000F99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
		public Color mediumAlbedo;

		[Token(Token = "0x4000F9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
		[Tooltip("Overall brightness multiplier.")]
		public float brightness;

		[Token(Token = "0x4000F9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19C")]
		[Tooltip("Attenuation Mode")]
		public AttenuationMode attenuationMode;

		[Token(Token = "0x4000F9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
		[Tooltip("Constant coefficient (a) of the attenuation formula. By modulating these coefficients, you can tweak the attenuation quadratic curve 1/(a + b*x + c*x*x).")]
		public float attenCoefConstant;

		[Token(Token = "0x4000F9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A4")]
		[Tooltip("Linear coefficient (b) of the attenuation formula. By modulating these coefficients, you can tweak the attenuation quadratic curve 1/(a + b*x + c*x*x).")]
		public float attenCoefLinear;

		[Token(Token = "0x4000F9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
		[Tooltip("Quadratic coefficient (c) of the attenuation formula. By modulating these coefficients, you can tweak the attenuation quadratic curve 1/(a + b*x + c*x*x).")]
		public float attenCoefQuadratic;

		[Token(Token = "0x4000F9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1AC")]
		[Tooltip("Attenuation of light intensity based on square of distance. Plays with brightness to achieve a more linear or realistic (quadratic attenuation effect).")]
		[FormerlySerializedAs("distanceFallOff")]
		public float rangeFallOff;

		[Token(Token = "0x4000FA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
		[Tooltip("Brightiness increase when looking against light source.")]
		public float diffusionIntensity;

		[Token(Token = "0x4000FA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B4")]
		[Range(0f, 1f)]
		[Tooltip("Smooth edges")]
		[FormerlySerializedAs("border")]
		public float penumbra;

		[Token(Token = "0x4000FA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
		[Tooltip("Radius of the tip of the cone. Only applies to spot lights.")]
		public float tipRadius;

		[Token(Token = "0x4000FA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
		[Tooltip("Custom cookie texture (RGB).")]
		public Texture2D cookieTexture;

		[Token(Token = "0x4000FA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
		[Range(0f, 80f)]
		public float frustumAngle;

		[Token(Token = "0x4000FA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1CC")]
		[Tooltip("Noise animation direction and speed.")]
		[Header("Animation")]
		public Vector3 windDirection;

		[Token(Token = "0x4000FA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
		[Header("Dust Particles")]
		public bool enableDustParticles;

		[Token(Token = "0x4000FA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1DC")]
		public float dustBrightness;

		[Token(Token = "0x4000FA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
		public float dustMinSize;

		[Token(Token = "0x4000FA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E4")]
		public float dustMaxSize;

		[Token(Token = "0x4000FAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
		public float dustWindSpeed;

		[Token(Token = "0x4000FAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1EC")]
		[Tooltip("Dims particle intensity beyond this distance to camera")]
		public float dustDistanceAttenuation;

		[Token(Token = "0x4000FAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
		[Tooltip("Fully enable/disable particle system renderer when far from main camera in order to optimize performance")]
		public bool dustAutoToggle;

		[Token(Token = "0x4000FAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F4")]
		[Tooltip("Distance to the light source at which the particule system is fully deactivated. Note that the distance is to the light position regardless of its light range or volume so you should consider the light area or range into this distance as well.")]
		public float dustDistanceDeactivation;

		[Token(Token = "0x4000FAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
		[Header("Shadow Occlusion")]
		public bool enableShadows;

		[Token(Token = "0x4000FAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1FC")]
		public float shadowIntensity;

		[Token(Token = "0x4000FB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
		public ShadowResolution shadowResolution;

		[Token(Token = "0x4000FB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x204")]
		public LayerMask shadowCullingMask;

		[Token(Token = "0x4000FB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
		public ShadowBakeInterval shadowBakeInterval;

		[Token(Token = "0x4000FB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20C")]
		public float shadowNearDistance;

		[Token(Token = "0x4000FB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
		[Tooltip("Fully enable/disable shadows when far from main camera in order to optimize performance")]
		public bool shadowAutoToggle;

		[Token(Token = "0x4000FB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x214")]
		[Tooltip("Max distance to main camera to render shadows for this volumetric light.")]
		public float shadowDistanceDeactivation;

		[Token(Token = "0x4000FB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
		[Tooltip("Use default render texture format when rendering shadows. Disabling this option will force shadows to render to a single depth buffer, which is faster, but can cause issues with shaders using Grab Pass.")]
		public bool shadowUseDefaultRTFormat;

		[Token(Token = "0x4000FB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21C")]
		[Tooltip("Used for point light occlusion orientation.")]
		public ShadowOrientation shadowOrientation;

		[Token(Token = "0x4000FB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x220")]
		[Tooltip("For performance reasons, point light shadows are captured on half a sphere (180º). By default, the shadows are captured in the direction to the user camera but you can specify a fixed direction using this option.")]
		public Vector3 shadowDirection;

		[Token(Token = "0x4000FB9")]
		private const string SHADOW_CAM_NAME = "OcclusionCam";

		[Token(Token = "0x4000FBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x230")]
		private Camera cam;

		[Token(Token = "0x4000FBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x238")]
		private RenderTexture rt;

		[Token(Token = "0x4000FBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x240")]
		private int camStartFrameCount;

		[Token(Token = "0x4000FBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x244")]
		private Vector3 lastCamPos;

		[Token(Token = "0x4000FBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x250")]
		private Quaternion lastCamRot;

		[Token(Token = "0x4000FBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x260")]
		private bool usesReversedZBuffer;

		[Token(Token = "0x4000FC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private static Matrix4x4 textureScaleAndBias;

		[Token(Token = "0x4000FC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x264")]
		private Matrix4x4 shadowMatrix;

		[Token(Token = "0x4000FC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A4")]
		private bool camTransformChanged;

		[Token(Token = "0x4000FC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A5")]
		private bool shouldOrientToCamera;

		[Token(Token = "0x170000E9")]
		public Material material
		{
			[Token(Token = "0x60010CC")]
			[Address(RVA = "0xD0286C", Offset = "0xD0286C", VA = "0xD0286C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000EA")]
		[Obsolete("Settings property is now deprecated. Settings are now part of the Volumetric Light component itself, for example: VolumetricLight.density instead of VolumetricLight.settings.density.")]
		public VolumetricLightProfile settings
		{
			[Token(Token = "0x60010CD")]
			[Address(RVA = "0xD02874", Offset = "0xD02874", VA = "0xD02874")]
			get
			{
				return null;
			}
			[Token(Token = "0x60010CE")]
			[Address(RVA = "0xD0287C", Offset = "0xD0287C", VA = "0xD0287C")]
			set
			{
			}
		}

		[Token(Token = "0x1400001A")]
		public event PropertiesChangedEvent OnPropertiesChanged
		{
			[Token(Token = "0x60010CA")]
			[Address(RVA = "0xD02734", Offset = "0xD02734", VA = "0xD02734")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x60010CB")]
			[Address(RVA = "0xD027D0", Offset = "0xD027D0", VA = "0xD027D0")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x60010CF")]
		[Address(RVA = "0xD028E4", Offset = "0xD028E4", VA = "0xD028E4")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60010D0")]
		[Address(RVA = "0xD028E8", Offset = "0xD028E8", VA = "0xD028E8")]
		public void Init()
		{
		}

		[Token(Token = "0x60010D1")]
		[Address(RVA = "0xD02AEC", Offset = "0xD02AEC", VA = "0xD02AEC")]
		public void Refresh()
		{
		}

		[Token(Token = "0x60010D2")]
		[Address(RVA = "0xD03E40", Offset = "0xD03E40", VA = "0xD03E40")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x60010D3")]
		[Address(RVA = "0xD03E4C", Offset = "0xD03E4C", VA = "0xD03E4C")]
		public void OnDidApplyAnimationProperties()
		{
		}

		[Token(Token = "0x60010D4")]
		[Address(RVA = "0xD03E58", Offset = "0xD03E58", VA = "0xD03E58")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60010D5")]
		[Address(RVA = "0xD03F24", Offset = "0xD03F24", VA = "0xD03F24")]
		private void TurnOff()
		{
		}

		[Token(Token = "0x60010D6")]
		[Address(RVA = "0xD0411C", Offset = "0xD0411C", VA = "0xD0411C")]
		public void ToggleVolumetrics(bool visible)
		{
		}

		[Token(Token = "0x60010D7")]
		[Address(RVA = "0xD04298", Offset = "0xD04298", VA = "0xD04298")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60010D8")]
		[Address(RVA = "0xD044D0", Offset = "0xD044D0", VA = "0xD044D0")]
		private void OnWillRenderObject()
		{
		}

		[Token(Token = "0x60010D9")]
		[Address(RVA = "0xD0456C", Offset = "0xD0456C", VA = "0xD0456C")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x60010DA")]
		[Address(RVA = "0xD04BA0", Offset = "0xD04BA0", VA = "0xD04BA0")]
		private void ComputeDistanceToCamera()
		{
		}

		[Token(Token = "0x60010DB")]
		[Address(RVA = "0xD04D70", Offset = "0xD04D70", VA = "0xD04D70")]
		private void UpdateDiffusionTerm()
		{
		}

		[Token(Token = "0x60010DC")]
		[Address(RVA = "0xD04A6C", Offset = "0xD04A6C", VA = "0xD04A6C")]
		public void UpdateVolumeGeometry()
		{
		}

		[Token(Token = "0x60010DD")]
		[Address(RVA = "0xD05578", Offset = "0xD05578", VA = "0xD05578")]
		private void UpdateVolumeGeometryMaterial(Material mat)
		{
		}

		[Token(Token = "0x60010DE")]
		[Address(RVA = "0xD059B8", Offset = "0xD059B8", VA = "0xD059B8")]
		public void UpdateMaterialProperties()
		{
		}

		[Token(Token = "0x60010DF")]
		[Address(RVA = "0xD031A4", Offset = "0xD031A4", VA = "0xD031A4")]
		private void UpdateMaterialPropertiesNow()
		{
		}

		[Token(Token = "0x60010E0")]
		[Address(RVA = "0xD0412C", Offset = "0xD0412C", VA = "0xD0412C")]
		private void SetFogMaterial()
		{
		}

		[Token(Token = "0x60010E1")]
		[Address(RVA = "0xD02B1C", Offset = "0xD02B1C", VA = "0xD02B1C")]
		public void CheckProfile()
		{
		}

		[Token(Token = "0x60010E2")]
		[Address(RVA = "0xD02C24", Offset = "0xD02C24", VA = "0xD02C24")]
		private void DestroyMesh()
		{
		}

		[Token(Token = "0x60010E3")]
		[Address(RVA = "0xD02D44", Offset = "0xD02D44", VA = "0xD02D44")]
		private bool CheckMesh()
		{
			return default(bool);
		}

		[Token(Token = "0x60010E4")]
		[Address(RVA = "0xD08FA4", Offset = "0xD08FA4", VA = "0xD08FA4")]
		private void UpdateMesh(string name)
		{
		}

		[Token(Token = "0x60010E5")]
		[Address(RVA = "0xD05844", Offset = "0xD05844", VA = "0xD05844")]
		private void NormalizeScale()
		{
		}

		[Token(Token = "0x60010E6")]
		[Address(RVA = "0xD075EC", Offset = "0xD075EC", VA = "0xD075EC")]
		private void GenerateConeMesh()
		{
		}

		[Token(Token = "0x60010E7")]
		[Address(RVA = "0xD08620", Offset = "0xD08620", VA = "0xD08620")]
		private void GenerateCubeMesh()
		{
		}

		[Token(Token = "0x60010E8")]
		[Address(RVA = "0xD09250", Offset = "0xD09250", VA = "0xD09250")]
		private void AddFace(Vector3[] faceVertices)
		{
		}

		[Token(Token = "0x60010E9")]
		[Address(RVA = "0xD07E14", Offset = "0xD07E14", VA = "0xD07E14")]
		private void GenerateSphereMesh()
		{
		}

		[Token(Token = "0x60010EA")]
		[Address(RVA = "0xD08790", Offset = "0xD08790", VA = "0xD08790")]
		private void GenerateCylinderMesh()
		{
		}

		[Token(Token = "0x60010EB")]
		[Address(RVA = "0xD04038", Offset = "0xD04038", VA = "0xD04038")]
		private void ParticlesDisable()
		{
		}

		[Token(Token = "0x60010EC")]
		[Address(RVA = "0xD04E28", Offset = "0xD04E28", VA = "0xD04E28")]
		private void ParticlesResetIfTransformChanged()
		{
		}

		[Token(Token = "0x60010ED")]
		[Address(RVA = "0xD095DC", Offset = "0xD095DC", VA = "0xD095DC")]
		private void ParticlesPopulate()
		{
		}

		[Token(Token = "0x60010EE")]
		[Address(RVA = "0xD0655C", Offset = "0xD0655C", VA = "0xD0655C")]
		private void ParticlesCheckSupport()
		{
		}

		[Token(Token = "0x60010EF")]
		[Address(RVA = "0xD04F54", Offset = "0xD04F54", VA = "0xD04F54")]
		private void UpdateParticlesVisibility()
		{
		}

		[Token(Token = "0x60010F0")]
		[Address(RVA = "0xD02A34", Offset = "0xD02A34", VA = "0xD02A34")]
		private void SettingsInit()
		{
		}

		[Token(Token = "0x60010F1")]
		[Address(RVA = "0xD059C4", Offset = "0xD059C4", VA = "0xD059C4")]
		private void SettingsValidate()
		{
		}

		[Token(Token = "0x60010F2")]
		[Address(RVA = "0xD03044", Offset = "0xD03044", VA = "0xD03044")]
		private void CheckShadows()
		{
		}

		[Token(Token = "0x60010F3")]
		[Address(RVA = "0xD03FB0", Offset = "0xD03FB0", VA = "0xD03FB0")]
		private void ShadowsDisable()
		{
		}

		[Token(Token = "0x60010F4")]
		[Address(RVA = "0xD043DC", Offset = "0xD043DC", VA = "0xD043DC")]
		private void ShadowsDispose()
		{
		}

		[Token(Token = "0x60010F5")]
		[Address(RVA = "0xD05CE0", Offset = "0xD05CE0", VA = "0xD05CE0")]
		private void ShadowsSupportCheck()
		{
		}

		[Token(Token = "0x60010F6")]
		[Address(RVA = "0xD04994", Offset = "0xD04994", VA = "0xD04994")]
		public void ScheduleShadowCapture()
		{
		}

		[Token(Token = "0x60010F7")]
		[Address(RVA = "0xD0966C", Offset = "0xD0966C", VA = "0xD0966C")]
		private void SetupShadowMatrix()
		{
		}

		[Token(Token = "0x60010F8")]
		[Address(RVA = "0xD05054", Offset = "0xD05054", VA = "0xD05054")]
		private void ShadowsUpdate()
		{
		}

		[Token(Token = "0x60010F9")]
		[Address(RVA = "0xD09A30", Offset = "0xD09A30", VA = "0xD09A30")]
		private void ShadowCamUpdate()
		{
		}

		[Token(Token = "0x60010FA")]
		[Address(RVA = "0xD098D8", Offset = "0xD098D8", VA = "0xD098D8")]
		private void ComputeShadowTransform(Matrix4x4 proj, Matrix4x4 view)
		{
		}

		[Token(Token = "0x60010FB")]
		[Address(RVA = "0xD09B5C", Offset = "0xD09B5C", VA = "0xD09B5C")]
		public VolumetricLight()
		{
		}
	}
	[Token(Token = "0x20002FF")]
	[ExecuteInEditMode]
	public class VolumetricLightAnimation : MonoBehaviour
	{
		[Token(Token = "0x4000FEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Header("Rendering")]
		[HideInInspector]
		public BlendMode blendMode;

		[Token(Token = "0x4000FEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[Range(1f, 256f)]
		[HideInInspector]
		[Tooltip("Determines the general accuracy of the effect. The greater this value, the more accurate effect (shadow occlusion as well). Try to keep this value as low as possible while maintainig a good visual result. If you need better performance increase the 'Raymarch Min Step' and then 'Jittering' amount to improve quality.")]
		public int raymarchQuality;

		[Token(Token = "0x4000FED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[HideInInspector]
		[Tooltip("Determines the minimum step size. Increase to improve performance / decrease to improve accuracy. When increasing this value, you can also increase 'Jittering' amount to improve quality.")]
		public float raymarchMinStep;

		[Token(Token = "0x4000FEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[HideInInspector]
		[Tooltip("Increase to reduce inaccuracy due to low number of samples (due to a high raymarch step size).")]
		public float jittering;

		[Token(Token = "0x4000FEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[Range(0f, 2f)]
		[Tooltip("Increase to reduce banding artifacts. Usually jittering has a bigger impact in reducing artifacts.")]
		[HideInInspector]
		public float dithering;

		[Token(Token = "0x4000FF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[HideInInspector]
		[Header("Appearance")]
		[Range(0f, 3f)]
		public float noiseStrength;

		[Token(Token = "0x4000FF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[HideInInspector]
		public float noiseScale;

		[Token(Token = "0x4000FF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[HideInInspector]
		public float noiseFinalMultiplier;

		[Token(Token = "0x4000FF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[HideInInspector]
		public float density;

		[Token(Token = "0x4000FF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[HideInInspector]
		public Color mediumAlbedo;

		[Token(Token = "0x4000FF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[Tooltip("Overall brightness multiplier.")]
		[HideInInspector]
		public float brightness;

		[Token(Token = "0x4000FF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("Constant coefficient (a) of the attenuation formula. By modulating these coefficients, you can tweak the attenuation quadratic curve 1/(a + b*x + c*x*x).")]
		[HideInInspector]
		public float attenCoefConstant;

		[Token(Token = "0x4000FF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[HideInInspector]
		[Tooltip("Linear coefficient (b) of the attenuation formula. By modulating these coefficients, you can tweak the attenuation quadratic curve 1/(a + b*x + c*x*x).")]
		public float attenCoefLinear;

		[Token(Token = "0x4000FF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[Tooltip("Quadratic coefficient (c) of the attenuation formula. By modulating these coefficients, you can tweak the attenuation quadratic curve 1/(a + b*x + c*x*x).")]
		[HideInInspector]
		public float attenCoefQuadratic;

		[Token(Token = "0x4000FF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[HideInInspector]
		[Tooltip("Attenuation of light intensity based on square of distance. Plays with brightness to achieve a more linear or realistic (quadratic attenuation effect).")]
		public float distanceFallOff;

		[Token(Token = "0x4000FFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[HideInInspector]
		[Tooltip("Brightiness increase when looking against light source.")]
		public float diffusionIntensity;

		[Token(Token = "0x4000FFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		[Tooltip("Smooth edges")]
		[HideInInspector]
		[Range(0f, 1f)]
		public float border;

		[Token(Token = "0x4000FFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[Tooltip("Radius of the tip of the cone. Only applies to spot lights.")]
		[HideInInspector]
		[Header("Spot Light")]
		public float tipRadius;

		[Token(Token = "0x4000FFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		[Range(0f, 80f)]
		[HideInInspector]
		[Header("Area Light")]
		public float frustumAngle;

		[Token(Token = "0x4000FFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[HideInInspector]
		[Header("Animation")]
		[Tooltip("Noise animation direction and speed.")]
		public Vector3 windDirection;

		[Token(Token = "0x4000FFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		[HideInInspector]
		[Header("Dust Particles")]
		public bool enableDustParticles;

		[Token(Token = "0x4001000")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[HideInInspector]
		public float dustBrightness;

		[Token(Token = "0x4001001")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		[HideInInspector]
		public float dustMinSize;

		[Token(Token = "0x4001002")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[HideInInspector]
		public float dustMaxSize;

		[Token(Token = "0x4001003")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		[HideInInspector]
		public float dustWindSpeed;

		[Token(Token = "0x4001004")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[Header("Shadow Occlusion")]
		[HideInInspector]
		public bool enableShadows;

		[Token(Token = "0x4001005")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		[HideInInspector]
		[Range(0f, 1f)]
		public float shadowIntensity;

		[Token(Token = "0x4001006")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[HideInInspector]
		public LayerMask shadowCullingMask;

		[Token(Token = "0x4001007")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private VolumetricLight vl;

		[Token(Token = "0x60010FE")]
		[Address(RVA = "0xD0A620", Offset = "0xD0A620", VA = "0xD0A620")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60010FF")]
		[Address(RVA = "0xD0A884", Offset = "0xD0A884", VA = "0xD0A884")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001100")]
		[Address(RVA = "0xD0A950", Offset = "0xD0A950", VA = "0xD0A950")]
		public void OnDidApplyAnimationProperties()
		{
		}

		[Token(Token = "0x6001101")]
		[Address(RVA = "0xD0A778", Offset = "0xD0A778", VA = "0xD0A778")]
		public void GetProperties(VolumetricLight vl)
		{
		}

		[Token(Token = "0x6001102")]
		[Address(RVA = "0xD0A954", Offset = "0xD0A954", VA = "0xD0A954")]
		public void SetProperties()
		{
		}

		[Token(Token = "0x6001103")]
		[Address(RVA = "0xD0AB14", Offset = "0xD0AB14", VA = "0xD0AB14")]
		public VolumetricLightAnimation()
		{
		}
	}
	[Token(Token = "0x2000300")]
	public enum ShadowResolution
	{
		[Token(Token = "0x4001009")]
		_32 = 0x20,
		[Token(Token = "0x400100A")]
		_64 = 0x40,
		[Token(Token = "0x400100B")]
		_128 = 0x80,
		[Token(Token = "0x400100C")]
		_256 = 0x100,
		[Token(Token = "0x400100D")]
		_512 = 0x200,
		[Token(Token = "0x400100E")]
		_1024 = 0x400,
		[Token(Token = "0x400100F")]
		_2048 = 0x800
	}
	[Token(Token = "0x2000301")]
	public enum ShadowBakeInterval
	{
		[Token(Token = "0x4001011")]
		OnStart,
		[Token(Token = "0x4001012")]
		EveryFrame
	}
	[Token(Token = "0x2000302")]
	public enum AttenuationMode
	{
		[Token(Token = "0x4001014")]
		Simple,
		[Token(Token = "0x4001015")]
		Quadratic
	}
	[Token(Token = "0x2000303")]
	public enum RaymarchPresets
	{
		[Token(Token = "0x4001017")]
		UserDefined = 0,
		[Token(Token = "0x4001018")]
		Default = 10,
		[Token(Token = "0x4001019")]
		Faster = 20,
		[Token(Token = "0x400101A")]
		EvenFaster = 30,
		[Token(Token = "0x400101B")]
		LightSpeed = 40
	}
	[Token(Token = "0x2000304")]
	public enum BlendMode
	{
		[Token(Token = "0x400101D")]
		Additive,
		[Token(Token = "0x400101E")]
		Blend,
		[Token(Token = "0x400101F")]
		PreMultiply
	}
	[Token(Token = "0x2000305")]
	public enum ShadowOrientation
	{
		[Token(Token = "0x4001021")]
		ToCamera,
		[Token(Token = "0x4001022")]
		FixedDirection
	}
	[Token(Token = "0x2000306")]
	[CreateAssetMenu(menuName = "Volumetric Light Profile", fileName = "VolumetricLightProfile", order = 335)]
	public class VolumetricLightProfile : ScriptableObject
	{
		[Token(Token = "0x4001023")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Header("Rendering")]
		public BlendMode blendMode;

		[Token(Token = "0x4001024")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public RaymarchPresets raymarchPreset;

		[Token(Token = "0x4001025")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[Range(1f, 256f)]
		[Tooltip("Determines the general accuracy of the effect. The greater this value, the more accurate effect (shadow occlusion as well). Try to keep this value as low as possible while maintainig a good visual result. If you need better performance increase the 'Raymarch Min Step' and then 'Jittering' amount to improve quality.")]
		public int raymarchQuality;

		[Token(Token = "0x4001026")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[Tooltip("Determines the minimum step size. Increase to improve performance / decrease to improve accuracy. When increasing this value, you can also increase 'Jittering' amount to improve quality.")]
		public float raymarchMinStep;

		[Token(Token = "0x4001027")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[Tooltip("Increase to reduce inaccuracy due to low number of samples (due to a high raymarch step size).")]
		public float jittering;

		[Token(Token = "0x4001028")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[Tooltip("Increase to reduce banding artifacts. Usually jittering has a bigger impact in reducing artifacts.")]
		[Range(0f, 2f)]
		public float dithering;

		[Token(Token = "0x4001029")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[Tooltip("Uses blue noise for jittering computation reducing moiré pattern of normal jitter. Usually not needed unless you use shadow occlusion. It adds an additional texture fetch so use only if it provides you a clear visual improvement.")]
		public bool useBlueNoise;

		[Token(Token = "0x400102A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[Tooltip("The render queue for this renderer. By default, all transparent objects use a render queue of 3000. Use a lower value to render before all transparent objects.")]
		public int renderQueue;

		[Token(Token = "0x400102B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[Tooltip("Optional sorting layer Id (number) for this renderer. By default 0. Usually used to control the order with other transparent renderers, like Sprite Renderer.")]
		public int sortingLayerID;

		[Token(Token = "0x400102C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[Tooltip("Optional sorting order for this renderer. Used to control the order with other transparent renderers, like Sprite Renderer.")]
		public int sortingOrder;

		[Token(Token = "0x400102D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[Tooltip("Ignores light enable state. Always show volumetric fog. This option is useful to produce fake volumetric lights.")]
		public bool alwaysOn;

		[Token(Token = "0x400102E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
		[Tooltip("Fully enable/disable volumetric effect when far from main camera in order to optimize performance")]
		public bool autoToggle;

		[Token(Token = "0x400102F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[Tooltip("Distance to the light source at which the volumetric effect starts to dim. Note that the distance is to the light position regardless of its light range or volume so you should consider the light area or range into this distance as well.")]
		public float distanceStartDimming;

		[Token(Token = "0x4001030")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[Tooltip("Distance to the light source at which the volumetric effect is fully deactivated. Note that the distance is to the light position regardless of its light range or volume so you should consider the light area or range into this distance as well.")]
		public float distanceDeactivation;

		[Token(Token = "0x4001031")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[Tooltip("Minimum time between distance checks")]
		public float autoToggleCheckInterval;

		[Token(Token = "0x4001032")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Header("Appearance")]
		public bool useNoise;

		[Token(Token = "0x4001033")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Texture3D noiseTexture;

		[Token(Token = "0x4001034")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[Range(0f, 3f)]
		public float noiseStrength;

		[Token(Token = "0x4001035")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public float noiseScale;

		[Token(Token = "0x4001036")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public float noiseFinalMultiplier;

		[Token(Token = "0x4001037")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public float density;

		[Token(Token = "0x4001038")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public Color mediumAlbedo;

		[Token(Token = "0x4001039")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[Tooltip("Overall brightness multiplier.")]
		public float brightness;

		[Token(Token = "0x400103A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		[Tooltip("Attenuation Mode")]
		public AttenuationMode attenuationMode;

		[Token(Token = "0x400103B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[Tooltip("Constant coefficient (a) of the attenuation formula. By modulating these coefficients, you can tweak the attenuation quadratic curve 1/(a + b*x + c*x*x).")]
		public float attenCoefConstant;

		[Token(Token = "0x400103C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		[Tooltip("Linear coefficient (b) of the attenuation formula. By modulating these coefficients, you can tweak the attenuation quadratic curve 1/(a + b*x + c*x*x).")]
		public float attenCoefLinear;

		[Token(Token = "0x400103D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[Tooltip("Quadratic coefficient (c) of the attenuation formula. By modulating these coefficients, you can tweak the attenuation quadratic curve 1/(a + b*x + c*x*x).")]
		public float attenCoefQuadratic;

		[Token(Token = "0x400103E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		[Tooltip("Attenuation of light intensity based on square of distance. Plays with brightness to achieve a more linear or realistic (quadratic attenuation effect).")]
		[FormerlySerializedAs("distanceFallOff")]
		public float rangeFallOff;

		[Token(Token = "0x400103F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[Tooltip("Brightiness increase when looking against light source.")]
		public float diffusionIntensity;

		[Token(Token = "0x4001040")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		[Range(0f, 1f)]
		[Tooltip("Smooth edges")]
		[FormerlySerializedAs("border")]
		public float penumbra;

		[Token(Token = "0x4001041")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[Header("Spot Light")]
		[Tooltip("Radius of the tip of the cone. Only applies to spot lights.")]
		public float tipRadius;

		[Token(Token = "0x4001042")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[Tooltip("Custom cookie texture (RGB).")]
		public Texture2D cookieTexture;

		[Token(Token = "0x4001043")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[Header("Area Light")]
		[Range(0f, 80f)]
		public float frustumAngle;

		[Token(Token = "0x4001044")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		[Header("Animation")]
		[Tooltip("Noise animation direction and speed.")]
		public Vector3 windDirection;

		[Token(Token = "0x4001045")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[Header("Dust Particles")]
		public bool enableDustParticles;

		[Token(Token = "0x4001046")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		public float dustBrightness;

		[Token(Token = "0x4001047")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public float dustMinSize;

		[Token(Token = "0x4001048")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		public float dustMaxSize;

		[Token(Token = "0x4001049")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		public float dustWindSpeed;

		[Token(Token = "0x400104A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		[Tooltip("Dims particle intensity beyond this distance to camera")]
		public float dustDistanceAttenuation;

		[Token(Token = "0x400104B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[Tooltip("Fully enable/disable particle system renderer when far from main camera in order to optimize performance")]
		public bool dustAutoToggle;

		[Token(Token = "0x400104C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		[Tooltip("Distance to the light source at which the particule system is fully deactivated. Note that the distance is to the light position regardless of its light range or volume so you should consider the light area or range into this distance as well.")]
		public float dustDistanceDeactivation;

		[Token(Token = "0x400104D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[Header("Shadow Occlusion")]
		public bool enableShadows;

		[Token(Token = "0x400104E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		public float shadowIntensity;

		[Token(Token = "0x400104F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		public ShadowResolution shadowResolution;

		[Token(Token = "0x4001050")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
		public LayerMask shadowCullingMask;

		[Token(Token = "0x4001051")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		public ShadowBakeInterval shadowBakeInterval;

		[Token(Token = "0x4001052")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
		public float shadowNearDistance;

		[Token(Token = "0x4001053")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		[Tooltip("Fully enable/disable shadows when far from main camera in order to optimize performance")]
		public bool shadowAutoToggle;

		[Token(Token = "0x4001054")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
		[Tooltip("Max distance to main camera to render shadows for this volumetric light.")]
		public float shadowDistanceDeactivation;

		[Token(Token = "0x4001055")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		[Tooltip("Use default render texture format when rendering shadows. Disabling this option will force shadows to render to a single depth buffer, which is faster, but can cause issues with shaders using Grab Pass.")]
		public bool shadowUseDefaultRTFormat;

		[Token(Token = "0x4001056")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
		public ShadowOrientation shadowOrientation;

		[Token(Token = "0x4001057")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		public Vector3 shadowDirection;

		[Token(Token = "0x6001104")]
		[Address(RVA = "0xD0ABA0", Offset = "0xD0ABA0", VA = "0xD0ABA0")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001105")]
		[Address(RVA = "0xD0AC54", Offset = "0xD0AC54", VA = "0xD0AC54")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x6001106")]
		[Address(RVA = "0xD07484", Offset = "0xD07484", VA = "0xD07484")]
		public void ApplyTo(VolumetricLight vl)
		{
		}

		[Token(Token = "0x6001107")]
		[Address(RVA = "0xD0AEE8", Offset = "0xD0AEE8", VA = "0xD0AEE8")]
		public void LoadFrom(VolumetricLight vl)
		{
		}

		[Token(Token = "0x6001108")]
		[Address(RVA = "0xD0B044", Offset = "0xD0B044", VA = "0xD0B044")]
		public VolumetricLightProfile()
		{
		}
	}
}
namespace VolumetricLightsDemo
{
	[Token(Token = "0x2000307")]
	public class CubeGen : MonoBehaviour
	{
		[Token(Token = "0x4001058")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int count;

		[Token(Token = "0x4001059")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float delay;

		[Token(Token = "0x400105A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private float last;

		[Token(Token = "0x6001109")]
		[Address(RVA = "0xD0B174", Offset = "0xD0B174", VA = "0xD0B174")]
		private void Update()
		{
		}

		[Token(Token = "0x600110A")]
		[Address(RVA = "0xD0B33C", Offset = "0xD0B33C", VA = "0xD0B33C")]
		public CubeGen()
		{
		}
	}
	[Token(Token = "0x2000308")]
	public class FenceGen : MonoBehaviour
	{
		[Token(Token = "0x400105B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int count;

		[Token(Token = "0x400105C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float delay;

		[Token(Token = "0x400105D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Vector3 step;

		[Token(Token = "0x400105E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float last;

		[Token(Token = "0x400105F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Vector3 pos;

		[Token(Token = "0x600110B")]
		[Address(RVA = "0xD0B350", Offset = "0xD0B350", VA = "0xD0B350")]
		private void Start()
		{
		}

		[Token(Token = "0x600110C")]
		[Address(RVA = "0xD0B380", Offset = "0xD0B380", VA = "0xD0B380")]
		private void Update()
		{
		}

		[Token(Token = "0x600110D")]
		[Address(RVA = "0xD0B494", Offset = "0xD0B494", VA = "0xD0B494")]
		public FenceGen()
		{
		}
	}
}
namespace UB
{
	[Token(Token = "0x2000309")]
	public class SimpleRotater : MonoBehaviour
	{
		[Token(Token = "0x4001060")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float XSpeed;

		[Token(Token = "0x4001061")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float YSpeed;

		[Token(Token = "0x4001062")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float ZSpeed;

		[Token(Token = "0x600110E")]
		[Address(RVA = "0xD0B4A8", Offset = "0xD0B4A8", VA = "0xD0B4A8")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x600110F")]
		[Address(RVA = "0xD0B4E4", Offset = "0xD0B4E4", VA = "0xD0B4E4")]
		public SimpleRotater()
		{
		}
	}
}
namespace Sumalab.Util
{
	[Token(Token = "0x200030A")]
	public class PseudoRandom
	{
		[Token(Token = "0x4001063")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static int N;

		[Token(Token = "0x4001064")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private static int A;

		[Token(Token = "0x4001065")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static int C;

		[Token(Token = "0x4001066")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public static int indexSeed;

		[Token(Token = "0x4001067")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private System.Random random;

		[Token(Token = "0x6001110")]
		[Address(RVA = "0xD0B4EC", Offset = "0xD0B4EC", VA = "0xD0B4EC")]
		public static float Random()
		{
			return default(float);
		}

		[Token(Token = "0x6001111")]
		[Address(RVA = "0xD0B578", Offset = "0xD0B578", VA = "0xD0B578")]
		public static int Random(int min, int max)
		{
			return default(int);
		}

		[Token(Token = "0x6001112")]
		[Address(RVA = "0xD0B6C8", Offset = "0xD0B6C8", VA = "0xD0B6C8")]
		public static float Random(float min, float max)
		{
			return default(float);
		}

		[Token(Token = "0x6001113")]
		[Address(RVA = "0xD0B734", Offset = "0xD0B734", VA = "0xD0B734")]
		public PseudoRandom(int seed)
		{
		}

		[Token(Token = "0x6001114")]
		[Address(RVA = "0xD0B7B8", Offset = "0xD0B7B8", VA = "0xD0B7B8")]
		public int Next(int min, int max)
		{
			return default(int);
		}

		[Token(Token = "0x6001115")]
		[Address(RVA = "0xD0B7D8", Offset = "0xD0B7D8", VA = "0xD0B7D8")]
		public float NextFloat(float min, float max)
		{
			return default(float);
		}

		[Token(Token = "0x6001116")]
		[Address(RVA = "0xD0B81C", Offset = "0xD0B81C", VA = "0xD0B81C")]
		public float NextValue()
		{
			return default(float);
		}
	}
	[Token(Token = "0x200030B")]
	public class SkinHandler : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x200030C")]
		public class Skin
		{
			[Token(Token = "0x400106E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string skinName;

			[Token(Token = "0x400106F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public List<SkinData> skins;

			[Token(Token = "0x600111D")]
			[Address(RVA = "0xD0C50C", Offset = "0xD0C50C", VA = "0xD0C50C")]
			public Skin()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x200030D")]
		public class SkinData
		{
			[Token(Token = "0x4001070")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string materialName;

			[Token(Token = "0x4001071")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public List<Renderer> renderers;

			[Token(Token = "0x600111E")]
			[Address(RVA = "0xD0C514", Offset = "0xD0C514", VA = "0xD0C514")]
			public SkinData()
			{
			}
		}

		[Token(Token = "0x4001068")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string resourcesPath;

		[Token(Token = "0x4001069")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<Renderer> renderers;

		[Token(Token = "0x400106A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static string DEFAULT_SKIN;

		[Token(Token = "0x400106B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[HideInInspector]
		public string currentSkin;

		[Token(Token = "0x400106C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public List<Skin> skins;

		[Token(Token = "0x400106D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Dictionary<string, Material> materialCache;

		[Token(Token = "0x6001118")]
		[Address(RVA = "0xD0B894", Offset = "0xD0B894", VA = "0xD0B894")]
		public void CacheSkin(string skinName)
		{
		}

		[Token(Token = "0x6001119")]
		[Address(RVA = "0xD0BBE8", Offset = "0xD0BBE8", VA = "0xD0BBE8")]
		public void SetSkin(string skinName, bool asyncLoad = true)
		{
		}

		[Token(Token = "0x600111A")]
		[Address(RVA = "0xD0BD6C", Offset = "0xD0BD6C", VA = "0xD0BD6C")]
		private void SetSkin(Skin skin, bool asyncLoad = true)
		{
		}

		[Token(Token = "0x600111B")]
		[Address(RVA = "0xD0C3EC", Offset = "0xD0C3EC", VA = "0xD0C3EC")]
		public SkinHandler()
		{
		}
	}
	[Token(Token = "0x2000310")]
	public class SumalabEvent
	{
		[Token(Token = "0x4001077")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private List<ActionWrapper> listener;

		[Token(Token = "0x4001078")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private List<ActionWrapper> removeList;

		[Token(Token = "0x6001122")]
		[Address(RVA = "0xD0C8A8", Offset = "0xD0C8A8", VA = "0xD0C8A8")]
		public void Listen(Action action)
		{
		}

		[Token(Token = "0x6001123")]
		[Address(RVA = "0xD0CADC", Offset = "0xD0CADC", VA = "0xD0CADC")]
		public void AddListener(Action action)
		{
		}

		[Token(Token = "0x6001124")]
		[Address(RVA = "0xD0C9B0", Offset = "0xD0C9B0", VA = "0xD0C9B0")]
		private bool ActionRegistered(Action action)
		{
			return default(bool);
		}

		[Token(Token = "0x6001125")]
		[Address(RVA = "0xD0CAE0", Offset = "0xD0CAE0", VA = "0xD0CAE0")]
		public void ListenOne(Action action)
		{
		}

		[Token(Token = "0x6001126")]
		[Address(RVA = "0xD0CC40", Offset = "0xD0CC40", VA = "0xD0CC40")]
		public void RemoveListener(Action action)
		{
		}

		[Token(Token = "0x6001127")]
		[Address(RVA = "0xD0CC44", Offset = "0xD0CC44", VA = "0xD0CC44")]
		public void Remove(Action action)
		{
		}

		[Token(Token = "0x6001128")]
		[Address(RVA = "0xD0CD10", Offset = "0xD0CD10", VA = "0xD0CD10")]
		public void Clear()
		{
		}

		[Token(Token = "0x6001129")]
		[Address(RVA = "0xD0CD80", Offset = "0xD0CD80", VA = "0xD0CD80")]
		public void RemoveAllListeners()
		{
		}

		[Token(Token = "0x600112A")]
		[Address(RVA = "0xD0CD84", Offset = "0xD0CD84", VA = "0xD0CD84")]
		public void Invoke()
		{
		}

		[Token(Token = "0x600112B")]
		[Address(RVA = "0xD0CD88", Offset = "0xD0CD88", VA = "0xD0CD88")]
		public void Send()
		{
		}

		[Token(Token = "0x600112C")]
		[Address(RVA = "0xD0D0C0", Offset = "0xD0D0C0", VA = "0xD0D0C0")]
		private void DoRemoveList()
		{
		}

		[Token(Token = "0x600112D")]
		[Address(RVA = "0xD0CFB8", Offset = "0xD0CFB8", VA = "0xD0CFB8")]
		private void AddToRemoveList(ActionWrapper action)
		{
		}

		[Token(Token = "0x600112E")]
		[Address(RVA = "0xD0D1B0", Offset = "0xD0D1B0", VA = "0xD0D1B0")]
		public SumalabEvent()
		{
		}
	}
	[Token(Token = "0x2000311")]
	internal class ActionWrapper
	{
		[Token(Token = "0x4001079")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Action action;

		[Token(Token = "0x400107A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool listenOne;

		[Token(Token = "0x600112F")]
		[Address(RVA = "0xD0CAAC", Offset = "0xD0CAAC", VA = "0xD0CAAC")]
		public ActionWrapper(Action action)
		{
		}

		[Token(Token = "0x6001130")]
		[Address(RVA = "0xD0CC04", Offset = "0xD0CC04", VA = "0xD0CC04")]
		public ActionWrapper(Action action, bool listenOne)
		{
		}
	}
	[Token(Token = "0x2000312")]
	public class SumalabEvent<T0>
	{
		[Token(Token = "0x400107B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private List<ActionWrapper<T0>> listener;

		[Token(Token = "0x400107C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private List<ActionWrapper<T0>> removeList;

		[Token(Token = "0x6001131")]
		public void Listen(Action<T0> action)
		{
		}

		[Token(Token = "0x6001132")]
		public void AddListener(Action<T0> action)
		{
		}

		[Token(Token = "0x6001133")]
		private bool ActionRegistered(Action<T0> action)
		{
			return default(bool);
		}

		[Token(Token = "0x6001134")]
		public void ListenOne(Action<T0> action)
		{
		}

		[Token(Token = "0x6001135")]
		public void RemoveListener(Action<T0> action)
		{
		}

		[Token(Token = "0x6001136")]
		public void Remove(Action<T0> action)
		{
		}

		[Token(Token = "0x6001137")]
		public void Clear()
		{
		}

		[Token(Token = "0x6001138")]
		public void RemoveAllListeners()
		{
		}

		[Token(Token = "0x6001139")]
		public void Invoke(T0 arg0)
		{
		}

		[Token(Token = "0x600113A")]
		public void Send(T0 arg0)
		{
		}

		[Token(Token = "0x600113B")]
		private void DoRemoveList()
		{
		}

		[Token(Token = "0x600113C")]
		private void AddToRemoveList(ActionWrapper<T0> action)
		{
		}

		[Token(Token = "0x600113D")]
		public SumalabEvent()
		{
		}
	}
	[Token(Token = "0x2000313")]
	internal class ActionWrapper<T0>
	{
		[Token(Token = "0x400107D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Action<T0> action;

		[Token(Token = "0x400107E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public bool listenOne;

		[Token(Token = "0x600113E")]
		public ActionWrapper(Action<T0> action)
		{
		}

		[Token(Token = "0x600113F")]
		public ActionWrapper(Action<T0> action, bool listenOne)
		{
		}
	}
	[Token(Token = "0x2000314")]
	public class SumalabEvent<T0, T1>
	{
		[Token(Token = "0x400107F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private List<ActionWrapper<T0, T1>> listener;

		[Token(Token = "0x4001080")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private List<ActionWrapper<T0, T1>> removeList;

		[Token(Token = "0x6001140")]
		public void Listen(Action<T0, T1> action)
		{
		}

		[Token(Token = "0x6001141")]
		public void AddListener(Action<T0, T1> action)
		{
		}

		[Token(Token = "0x6001142")]
		private bool ActionRegistered(Action<T0, T1> action)
		{
			return default(bool);
		}

		[Token(Token = "0x6001143")]
		public void ListenOne(Action<T0, T1> action)
		{
		}

		[Token(Token = "0x6001144")]
		public void RemoveListener(Action<T0, T1> action)
		{
		}

		[Token(Token = "0x6001145")]
		public void Remove(Action<T0, T1> action)
		{
		}

		[Token(Token = "0x6001146")]
		public void Clear()
		{
		}

		[Token(Token = "0x6001147")]
		public void RemoveAllListeners()
		{
		}

		[Token(Token = "0x6001148")]
		public void Invoke(T0 arg0, T1 arg1)
		{
		}

		[Token(Token = "0x6001149")]
		public void Send(T0 arg0, T1 arg1)
		{
		}

		[Token(Token = "0x600114A")]
		private void DoRemoveList()
		{
		}

		[Token(Token = "0x600114B")]
		private void AddToRemoveList(ActionWrapper<T0, T1> action)
		{
		}

		[Token(Token = "0x600114C")]
		public SumalabEvent()
		{
		}
	}
	[Token(Token = "0x2000315")]
	internal class ActionWrapper<T0, T1>
	{
		[Token(Token = "0x4001081")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Action<T0, T1> action;

		[Token(Token = "0x4001082")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public bool listenOne;

		[Token(Token = "0x600114D")]
		public ActionWrapper(Action<T0, T1> action)
		{
		}

		[Token(Token = "0x600114E")]
		public ActionWrapper(Action<T0, T1> action, bool listenOne)
		{
		}
	}
	[Token(Token = "0x2000316")]
	public class SumalabEvent<T0, T1, T2>
	{
		[Token(Token = "0x4001083")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private List<ActionWrapper<T0, T1, T2>> listener;

		[Token(Token = "0x4001084")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private List<ActionWrapper<T0, T1, T2>> removeList;

		[Token(Token = "0x600114F")]
		public void Listen(Action<T0, T1, T2> action)
		{
		}

		[Token(Token = "0x6001150")]
		public void AddListener(Action<T0, T1, T2> action)
		{
		}

		[Token(Token = "0x6001151")]
		private bool ActionRegistered(Action<T0, T1, T2> action)
		{
			return default(bool);
		}

		[Token(Token = "0x6001152")]
		public void ListenOne(Action<T0, T1, T2> action)
		{
		}

		[Token(Token = "0x6001153")]
		public void RemoveListener(Action<T0, T1, T2> action)
		{
		}

		[Token(Token = "0x6001154")]
		public void Remove(Action<T0, T1, T2> action)
		{
		}

		[Token(Token = "0x6001155")]
		public void Clear()
		{
		}

		[Token(Token = "0x6001156")]
		public void RemoveAllListeners()
		{
		}

		[Token(Token = "0x6001157")]
		public void Invoke(T0 arg0, T1 arg1, T2 arg2)
		{
		}

		[Token(Token = "0x6001158")]
		public void Send(T0 arg0, T1 arg1, T2 arg2)
		{
		}

		[Token(Token = "0x6001159")]
		private void DoRemoveList()
		{
		}

		[Token(Token = "0x600115A")]
		private void AddToRemoveList(ActionWrapper<T0, T1, T2> action)
		{
		}

		[Token(Token = "0x600115B")]
		public SumalabEvent()
		{
		}
	}
	[Token(Token = "0x2000317")]
	internal class ActionWrapper<T0, T1, T2>
	{
		[Token(Token = "0x4001085")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Action<T0, T1, T2> action;

		[Token(Token = "0x4001086")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public bool listenOne;

		[Token(Token = "0x600115C")]
		public ActionWrapper(Action<T0, T1, T2> action)
		{
		}

		[Token(Token = "0x600115D")]
		public ActionWrapper(Action<T0, T1, T2> action, bool listenOne)
		{
		}
	}
	[Token(Token = "0x2000318")]
	public class SumalabInvoke : MonoBehaviour
	{
		[Token(Token = "0x2000319")]
		public enum UpdateQueue
		{
			[Token(Token = "0x400109C")]
			Default,
			[Token(Token = "0x400109D")]
			Update,
			[Token(Token = "0x400109E")]
			FixedUpdate,
			[Token(Token = "0x400109F")]
			LateUpdate
		}

		[Token(Token = "0x200031A")]
		private class Sequence
		{
			[Token(Token = "0x40010A0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Action action;

			[Token(Token = "0x40010A1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public float delay;

			[Token(Token = "0x40010A2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public bool realTime;

			[Token(Token = "0x40010A3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float repeat;

			[Token(Token = "0x40010A4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public float end;

			[Token(Token = "0x40010A5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public UpdateQueue queue;

			[Token(Token = "0x6001182")]
			[Address(RVA = "0xD10504", Offset = "0xD10504", VA = "0xD10504")]
			public Sequence(Action action, float delay, bool realTime, float repeatDelay = -1f, float end = -1f, UpdateQueue queue = UpdateQueue.Default)
			{
			}
		}

		[Token(Token = "0x200031B")]
		public class SumalabInvokeHandler
		{
			[Token(Token = "0x40010A6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal object[] arguments;

			[Token(Token = "0x40010A7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			internal string name;

			[Token(Token = "0x40010A8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			internal object target;

			[Token(Token = "0x40010A9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			internal float start;

			[Token(Token = "0x40010AA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			internal float delay;

			[Token(Token = "0x40010AB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			internal float repeat;

			[Token(Token = "0x40010AC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			internal float end;

			[Token(Token = "0x40010AD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			internal Action action;

			[Token(Token = "0x40010AE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			internal bool canceled;

			[Token(Token = "0x40010AF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
			internal bool repeated;

			[Token(Token = "0x40010B0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x42")]
			internal bool realTime;

			[Token(Token = "0x40010B1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			internal UpdateQueue queue;

			[Token(Token = "0x40010B2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private bool killOnDestroy;

			[Token(Token = "0x40010B3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			internal string stackTrace;

			[Token(Token = "0x40010B4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			internal bool sequenceActivated;

			[Token(Token = "0x40010B5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			internal SumalabInvokeReference reference;

			[Token(Token = "0x40010B6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			private List<Sequence> sequence;

			[Token(Token = "0x40010B7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			internal Action onComplete;

			[Token(Token = "0x40010B8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
			internal Action onCancel;

			[Token(Token = "0x6001183")]
			[Address(RVA = "0xD10574", Offset = "0xD10574", VA = "0xD10574")]
			internal void execute()
			{
			}

			[Token(Token = "0x6001184")]
			[Address(RVA = "0xD105F8", Offset = "0xD105F8", VA = "0xD105F8")]
			public bool HasSequence()
			{
				return default(bool);
			}

			[Token(Token = "0x6001185")]
			[Address(RVA = "0xD1064C", Offset = "0xD1064C", VA = "0xD1064C")]
			internal void executeSequence()
			{
			}

			[Token(Token = "0x6001186")]
			[Address(RVA = "0xD1081C", Offset = "0xD1081C", VA = "0xD1081C")]
			internal bool finished()
			{
				return default(bool);
			}

			[Token(Token = "0x6001187")]
			[Address(RVA = "0xD108E0", Offset = "0xD108E0", VA = "0xD108E0")]
			public SumalabInvokeHandler Invoke(Action action, float delay = 0.01f, bool realTime = false, UpdateQueue queue = UpdateQueue.Default)
			{
				return null;
			}

			[Token(Token = "0x6001188")]
			[Address(RVA = "0xD10A88", Offset = "0xD10A88", VA = "0xD10A88")]
			public SumalabInvokeHandler InvokeRepeat(Action action, float delay, float repeat, float end = -1f, bool realTime = false, UpdateQueue queue = UpdateQueue.Default)
			{
				return null;
			}

			[Token(Token = "0x6001189")]
			[Address(RVA = "0xD10A90", Offset = "0xD10A90", VA = "0xD10A90")]
			public SumalabInvokeHandler Wait(float delay, bool realTime = false)
			{
				return null;
			}

			[Token(Token = "0x600118A")]
			[Address(RVA = "0xD108F0", Offset = "0xD108F0", VA = "0xD108F0")]
			private SumalabInvokeHandler invoke(Action action, float delay, float repeat, float end, bool realTime, UpdateQueue queue)
			{
				return null;
			}

			[Token(Token = "0x600118B")]
			[Address(RVA = "0xD10BA0", Offset = "0xD10BA0", VA = "0xD10BA0")]
			public SumalabInvokeHandler KillOnDestroy()
			{
				return null;
			}

			[Token(Token = "0x600118C")]
			[Address(RVA = "0xD10BAC", Offset = "0xD10BAC", VA = "0xD10BAC")]
			public SumalabInvokeHandler OnComplete(Action action)
			{
				return null;
			}

			[Token(Token = "0x600118D")]
			[Address(RVA = "0xD10BC8", Offset = "0xD10BC8", VA = "0xD10BC8")]
			public SumalabInvokeHandler OnCancel(Action action)
			{
				return null;
			}

			[Token(Token = "0x600118E")]
			[Address(RVA = "0xD10BE4", Offset = "0xD10BE4", VA = "0xD10BE4")]
			public SumalabInvokeReference GetReference()
			{
				return null;
			}

			[Token(Token = "0x600118F")]
			[Address(RVA = "0xD10C7C", Offset = "0xD10C7C", VA = "0xD10C7C")]
			internal void Clear()
			{
			}

			[Token(Token = "0x6001190")]
			[Address(RVA = "0xD10D0C", Offset = "0xD10D0C", VA = "0xD10D0C")]
			public SumalabInvokeHandler()
			{
			}
		}

		[Token(Token = "0x200031D")]
		public class SumalabInvokeReference
		{
			[Token(Token = "0x40010BB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal SumalabInvokeHandler handler;

			[Token(Token = "0x6001194")]
			[Address(RVA = "0xD10D90", Offset = "0xD10D90", VA = "0xD10D90")]
			public SumalabInvokeHandler GetHandler()
			{
				return null;
			}

			[Token(Token = "0x6001195")]
			[Address(RVA = "0xD10C74", Offset = "0xD10C74", VA = "0xD10C74")]
			public SumalabInvokeReference()
			{
			}
		}

		[Token(Token = "0x200031E")]
		private class DecendingComparer : IComparer
		{
			[Token(Token = "0x6001196")]
			[Address(RVA = "0xD10DB4", Offset = "0xD10DB4", VA = "0xD10DB4", Slot = "4")]
			public int Compare(object x, object y)
			{
				return default(int);
			}

			[Token(Token = "0x6001197")]
			[Address(RVA = "0xD10E6C", Offset = "0xD10E6C", VA = "0xD10E6C")]
			public DecendingComparer()
			{
			}
		}

		[Token(Token = "0x4001087")]
		public const float NEXT_FRAME = 0.01f;

		[Token(Token = "0x4001088")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private SortedList pendingTasks;

		[Token(Token = "0x4001089")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private SortedList pendingTasksRealTime;

		[Token(Token = "0x400108A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private SortedList pendingTasksLateUpdate;

		[Token(Token = "0x400108B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private SortedList pendingTasksRealTimeLateUpdate;

		[Token(Token = "0x400108C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private SortedList pendingTasksFixedUpdate;

		[Token(Token = "0x400108D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private SortedList pendingTasksRealTimeFixedUpdate;

		[Token(Token = "0x400108E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Dictionary<object, object> cancelTasksCache;

		[Token(Token = "0x400108F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private bool m_bIsExecutingTasks;

		[Token(Token = "0x4001090")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private List<SumalabInvokeHandler> addInvokeLater;

		[Token(Token = "0x4001091")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static SumalabInvoke Instance;

		[Token(Token = "0x4001092")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static float currentTime;

		[Token(Token = "0x4001093")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private static float currentRealTime;

		[Token(Token = "0x4001094")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private List<HashSet<SumalabInvokeHandler>> recycleList;

		[Token(Token = "0x4001095")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private List<SumalabInvokeHandler> recycleHandler;

		[Token(Token = "0x4001096")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private int maxRecycleSize;

		[Token(Token = "0x4001097")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private readonly object monitor;

		[Token(Token = "0x4001098")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static bool isDebug;

		[Token(Token = "0x4001099")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		private static bool isDebugBuild;

		[Token(Token = "0x400109A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public static UpdateQueue defaultQueue;

		[Token(Token = "0x600115E")]
		[Address(RVA = "0xD0D238", Offset = "0xD0D238", VA = "0xD0D238")]
		private void Awake()
		{
		}

		[Token(Token = "0x600115F")]
		[Address(RVA = "0xD0D2E0", Offset = "0xD0D2E0", VA = "0xD0D2E0")]
		public static void DontDestroyOnLoad()
		{
		}

		[Token(Token = "0x6001160")]
		[Address(RVA = "0xD0D514", Offset = "0xD0D514", VA = "0xD0D514")]
		public static SumalabInvokeHandler Invoke(object target, string methodName, float delay, bool realTime = false, UpdateQueue queue = UpdateQueue.Default, params object[] arguments)
		{
			return null;
		}

		[Token(Token = "0x6001161")]
		[Address(RVA = "0xD0D8EC", Offset = "0xD0D8EC", VA = "0xD0D8EC")]
		public static SumalabInvokeHandler InvokeRepeat(object target, string methodName, float start, float delay, float end = -1f, bool realTime = false, UpdateQueue queue = UpdateQueue.Default, params object[] arguments)
		{
			return null;
		}

		[Token(Token = "0x6001162")]
		[Address(RVA = "0xD0D99C", Offset = "0xD0D99C", VA = "0xD0D99C")]
		public static SumalabInvokeHandler Invoke(object target, Action action, float delay, bool realTime = false, UpdateQueue queue = UpdateQueue.Default)
		{
			return null;
		}

		[Token(Token = "0x6001163")]
		[Address(RVA = "0xD0DA90", Offset = "0xD0DA90", VA = "0xD0DA90")]
		public static SumalabInvokeHandler InvokeLateUpdate(object target, Action action)
		{
			return null;
		}

		[Token(Token = "0x6001164")]
		[Address(RVA = "0xD0DB68", Offset = "0xD0DB68", VA = "0xD0DB68")]
		public static SumalabInvokeHandler InvokeNextFrame(object target, Action action)
		{
			return null;
		}

		[Token(Token = "0x6001165")]
		[Address(RVA = "0xD0DC44", Offset = "0xD0DC44", VA = "0xD0DC44")]
		public static SumalabInvokeHandler InvokeRepeat(object target, Action action, float start, float delay, float end = -1f, bool realTime = false, UpdateQueue queue = UpdateQueue.Default)
		{
			return null;
		}

		[Token(Token = "0x6001166")]
		[Address(RVA = "0xD0DD48", Offset = "0xD0DD48", VA = "0xD0DD48")]
		public static SumalabInvokeHandler Invoke(object target, string label, Action action, float delay, bool realTime = false, UpdateQueue queue = UpdateQueue.Default)
		{
			return null;
		}

		[Token(Token = "0x6001167")]
		[Address(RVA = "0xD0DE40", Offset = "0xD0DE40", VA = "0xD0DE40")]
		public static SumalabInvokeHandler InvokeRepeat(object target, string label, Action action, float start, float delay, float end = -1f, bool realTime = false, UpdateQueue queue = UpdateQueue.Default)
		{
			return null;
		}

		[Token(Token = "0x6001168")]
		[Address(RVA = "0xD0DF48", Offset = "0xD0DF48", VA = "0xD0DF48")]
		public static void CancelInvoke(object target, SumalabInvokeReference reference)
		{
		}

		[Token(Token = "0x6001169")]
		[Address(RVA = "0xD0E0D0", Offset = "0xD0E0D0", VA = "0xD0E0D0")]
		public static void CancelInvoke(object target, [Optional] string name)
		{
		}

		[Token(Token = "0x600116A")]
		[Address(RVA = "0xD0E08C", Offset = "0xD0E08C", VA = "0xD0E08C")]
		private void cancel(SumalabInvokeHandler handler)
		{
		}

		[Token(Token = "0x600116B")]
		[Address(RVA = "0xD0E550", Offset = "0xD0E550", VA = "0xD0E550")]
		private void Update()
		{
		}

		[Token(Token = "0x600116C")]
		[Address(RVA = "0xD0E778", Offset = "0xD0E778", VA = "0xD0E778")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x600116D")]
		[Address(RVA = "0xD0E780", Offset = "0xD0E780", VA = "0xD0E780")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x600116E")]
		[Address(RVA = "0xD0E558", Offset = "0xD0E558", VA = "0xD0E558")]
		private void UpdateImpl(SortedList pendingTasks, SortedList pendingTasksRealTime)
		{
		}

		[Token(Token = "0x600116F")]
		[Address(RVA = "0xD0E788", Offset = "0xD0E788", VA = "0xD0E788")]
		private void executePendingTasks(SortedList pendingTasks, bool realTime)
		{
		}

		[Token(Token = "0x6001170")]
		[Address(RVA = "0xD0E4A0", Offset = "0xD0E4A0", VA = "0xD0E4A0")]
		private void executeSafe(SumalabInvokeHandler task, Action action)
		{
		}

		[Token(Token = "0x6001171")]
		[Address(RVA = "0xD0F324", Offset = "0xD0F324", VA = "0xD0F324")]
		private void showError(SumalabInvokeHandler task, Exception e)
		{
		}

		[Token(Token = "0x6001172")]
		[Address(RVA = "0xD0F140", Offset = "0xD0F140", VA = "0xD0F140")]
		private void executeTask(SumalabInvokeHandler task)
		{
		}

		[Token(Token = "0x6001173")]
		[Address(RVA = "0xD0EFF0", Offset = "0xD0EFF0", VA = "0xD0EFF0")]
		private void executeTaskList(List<SumalabInvokeHandler> _pendingTasks)
		{
		}

		[Token(Token = "0x6001174")]
		[Address(RVA = "0xD0D3C0", Offset = "0xD0D3C0", VA = "0xD0D3C0")]
		public static void init()
		{
		}

		[Token(Token = "0x6001175")]
		[Address(RVA = "0xD0F698", Offset = "0xD0F698", VA = "0xD0F698")]
		private SortedList getPendigTasks(SumalabInvokeHandler data)
		{
			return null;
		}

		[Token(Token = "0x6001176")]
		[Address(RVA = "0xD0EA4C", Offset = "0xD0EA4C", VA = "0xD0EA4C")]
		private void addInvoke(SumalabInvokeHandler data)
		{
		}

		[Token(Token = "0x6001177")]
		[Address(RVA = "0xD0F948", Offset = "0xD0F948", VA = "0xD0F948")]
		private SumalabInvokeHandler getSumalabInvokeHandler()
		{
			return null;
		}

		[Token(Token = "0x6001178")]
		[Address(RVA = "0xD0FA1C", Offset = "0xD0FA1C", VA = "0xD0FA1C")]
		private void recycle(SumalabInvokeHandler handler)
		{
		}

		[Token(Token = "0x6001179")]
		[Address(RVA = "0xD0FB0C", Offset = "0xD0FB0C", VA = "0xD0FB0C")]
		private HashSet<SumalabInvokeHandler> getListSumalabInvokeHandler()
		{
			return null;
		}

		[Token(Token = "0x600117A")]
		[Address(RVA = "0xD0FBF4", Offset = "0xD0FBF4", VA = "0xD0FBF4")]
		private void recycle(HashSet<SumalabInvokeHandler> list)
		{
		}

		[Token(Token = "0x600117B")]
		[Address(RVA = "0xD0F760", Offset = "0xD0F760", VA = "0xD0F760")]
		private void addTaskToCancelCache(SumalabInvokeHandler handler)
		{
		}

		[Token(Token = "0x600117C")]
		[Address(RVA = "0xD0F510", Offset = "0xD0F510", VA = "0xD0F510")]
		private void removeTaskFromCancelCache(SumalabInvokeHandler handler)
		{
		}

		[Token(Token = "0x600117D")]
		[Address(RVA = "0xD0D5B4", Offset = "0xD0D5B4", VA = "0xD0D5B4")]
		private static SumalabInvokeHandler addInvoke(Action action, float fRepeat, float fEnd, object o, string methodName, float fTime, bool realTime, UpdateQueue queue, params object[] arguments)
		{
			return null;
		}

		[Token(Token = "0x600117E")]
		[Address(RVA = "0xD0FE08", Offset = "0xD0FE08", VA = "0xD0FE08")]
		public static SumalabInvokeHandler InvokeSequence(object target, float delay = 0.01f)
		{
			return null;
		}

		[Token(Token = "0x600117F")]
		[Address(RVA = "0xD0FF98", Offset = "0xD0FF98", VA = "0xD0FF98")]
		public static SumalabInvokeHandler InvokeSequence(object target, string label, float delay = 0.01f)
		{
			return null;
		}

		[Token(Token = "0x6001180")]
		[Address(RVA = "0xD10138", Offset = "0xD10138", VA = "0xD10138")]
		public SumalabInvoke()
		{
		}
	}
	[Token(Token = "0x2000320")]
	public class WeaponSkin : MonoBehaviour
	{
		[Token(Token = "0x40010BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static SumalabEvent OnWeaponSkinChanged;

		[Token(Token = "0x40010C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static string weaponSkin;

		[Token(Token = "0x600119C")]
		[Address(RVA = "0xD10EF4", Offset = "0xD10EF4", VA = "0xD10EF4")]
		private void Awake()
		{
		}

		[Token(Token = "0x600119D")]
		[Address(RVA = "0xD11054", Offset = "0xD11054", VA = "0xD11054")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x600119E")]
		[Address(RVA = "0xD10FB4", Offset = "0xD10FB4", VA = "0xD10FB4")]
		private void ChangeWeaponSkin()
		{
		}

		[Token(Token = "0x600119F")]
		[Address(RVA = "0xD1110C", Offset = "0xD1110C", VA = "0xD1110C")]
		public static void SetWeaponSkin(string skinName)
		{
		}

		[Token(Token = "0x60011A0")]
		[Address(RVA = "0xD11188", Offset = "0xD11188", VA = "0xD11188")]
		public WeaponSkin()
		{
		}
	}
}
namespace Malee
{
	[Token(Token = "0x2000321")]
	public class ReorderableAttribute : PropertyAttribute
	{
		[Token(Token = "0x40010C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool add;

		[Token(Token = "0x40010C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		public bool remove;

		[Token(Token = "0x40010C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12")]
		public bool draggable;

		[Token(Token = "0x40010C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x13")]
		public bool singleLine;

		[Token(Token = "0x40010C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public bool paginate;

		[Token(Token = "0x40010C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x15")]
		public bool sortable;

		[Token(Token = "0x40010C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int pageSize;

		[Token(Token = "0x40010C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string elementNameProperty;

		[Token(Token = "0x40010C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string elementNameOverride;

		[Token(Token = "0x40010CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string elementIconPath;

		[Token(Token = "0x40010CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Type surrogateType;

		[Token(Token = "0x40010CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public string surrogateProperty;

		[Token(Token = "0x60011A2")]
		[Address(RVA = "0xD1123C", Offset = "0xD1123C", VA = "0xD1123C")]
		public ReorderableAttribute()
		{
		}

		[Token(Token = "0x60011A3")]
		[Address(RVA = "0xD11258", Offset = "0xD11258", VA = "0xD11258")]
		public ReorderableAttribute(string elementNameProperty)
		{
		}

		[Token(Token = "0x60011A4")]
		[Address(RVA = "0xD11300", Offset = "0xD11300", VA = "0xD11300")]
		public ReorderableAttribute(string elementNameProperty, string elementIconPath)
		{
		}

		[Token(Token = "0x60011A5")]
		[Address(RVA = "0xD1131C", Offset = "0xD1131C", VA = "0xD1131C")]
		public ReorderableAttribute(string elementNameProperty, string elementNameOverride, string elementIconPath)
		{
		}

		[Token(Token = "0x60011A6")]
		[Address(RVA = "0xD11338", Offset = "0xD11338", VA = "0xD11338")]
		public ReorderableAttribute(bool add, bool remove, bool draggable, [Optional] string elementNameProperty, [Optional] string elementIconPath)
		{
		}

		[Token(Token = "0x60011A7")]
		[Address(RVA = "0xD11274", Offset = "0xD11274", VA = "0xD11274")]
		public ReorderableAttribute(bool add, bool remove, bool draggable, [Optional] string elementNameProperty, [Optional] string elementNameOverride, [Optional] string elementIconPath)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000322")]
	public abstract class ReorderableArray<T> : ICloneable, IList<T>, ICollection<T>, IEnumerable<T>, IEnumerable
	{
		[Token(Token = "0x40010CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private List<T> array;

		[Token(Token = "0x170000EB")]
		public T this[int index]
		{
			[Token(Token = "0x60011AA")]
			get
			{
				return (T)null;
			}
			[Token(Token = "0x60011AB")]
			set
			{
			}
		}

		[Token(Token = "0x170000EC")]
		public int Length
		{
			[Token(Token = "0x60011AC")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170000ED")]
		public bool IsReadOnly
		{
			[Token(Token = "0x60011AD")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000EE")]
		public int Count
		{
			[Token(Token = "0x60011AE")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x60011A8")]
		public ReorderableArray()
		{
		}

		[Token(Token = "0x60011A9")]
		public ReorderableArray(int length)
		{
		}

		[Token(Token = "0x60011AF")]
		public object Clone()
		{
			return null;
		}

		[Token(Token = "0x60011B0")]
		public void CopyFrom(IEnumerable<T> value)
		{
		}

		[Token(Token = "0x60011B1")]
		public bool Contains(T value)
		{
			return default(bool);
		}

		[Token(Token = "0x60011B2")]
		public int IndexOf(T value)
		{
			return default(int);
		}

		[Token(Token = "0x60011B3")]
		public void Insert(int index, T item)
		{
		}

		[Token(Token = "0x60011B4")]
		public void RemoveAt(int index)
		{
		}

		[Token(Token = "0x60011B5")]
		public void Add(T item)
		{
		}

		[Token(Token = "0x60011B6")]
		public void Clear()
		{
		}

		[Token(Token = "0x60011B7")]
		public void CopyTo(T[] array, int arrayIndex)
		{
		}

		[Token(Token = "0x60011B8")]
		public bool Remove(T item)
		{
			return default(bool);
		}

		[Token(Token = "0x60011B9")]
		public T[] ToArray()
		{
			return null;
		}

		[Token(Token = "0x60011BA")]
		public IEnumerator<T> GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x60011BB")]
		private IEnumerator System.Collections.IEnumerable.GetEnumerator()
		{
			return null;
		}
	}
}
namespace CrisisVRigade
{
	[Token(Token = "0x2000323")]
	public class AppLabToMetaStore : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000324")]
		public class AppLabToMetaStoreData
		{
			[Token(Token = "0x40010D1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private bool dontShow;

			[Token(Token = "0x60011C3")]
			[Address(RVA = "0xD119D8", Offset = "0xD119D8", VA = "0xD119D8")]
			public AppLabToMetaStoreData()
			{
			}
		}

		[Token(Token = "0x40010CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public UIButton closeSettingsMenu;

		[Token(Token = "0x40010CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public UIButton dontShowAgain;

		[Token(Token = "0x40010D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public UIButton getKey;

		[Token(Token = "0x60011BC")]
		[Address(RVA = "0xD11350", Offset = "0xD11350", VA = "0xD11350")]
		private void Start()
		{
		}

		[Token(Token = "0x60011BD")]
		[Address(RVA = "0xD11448", Offset = "0xD11448", VA = "0xD11448")]
		private void DontShowAgain()
		{
		}

		[Token(Token = "0x60011BE")]
		[Address(RVA = "0xD1146C", Offset = "0xD1146C", VA = "0xD1146C")]
		private void GetKey()
		{
		}

		[Token(Token = "0x60011BF")]
		[Address(RVA = "0xD115E4", Offset = "0xD115E4", VA = "0xD115E4")]
		private int GetAlleysScore()
		{
			return default(int);
		}

		[Token(Token = "0x60011C0")]
		[Address(RVA = "0xD1184C", Offset = "0xD1184C", VA = "0xD1184C")]
		private void CloseSettingsMenu()
		{
		}

		[Token(Token = "0x60011C1")]
		[Address(RVA = "0xD11870", Offset = "0xD11870", VA = "0xD11870")]
		public AppLabToMetaStore()
		{
		}
	}
	[Token(Token = "0x2000325")]
	public class Settings : MonoBehaviour
	{
		[Token(Token = "0x40010D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ReloadMode reloadMode;

		[Token(Token = "0x40010D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PlayerHeight playerHeight;

		[Token(Token = "0x40010D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public ButtonConfig buttonConfig;

		[Token(Token = "0x40010D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public PadRotation padRotation;

		[Token(Token = "0x40010D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public WalkieTalkieSettings walkieTalkie;

		[Token(Token = "0x40010D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public VoiceChatSettings voiceChat;

		[Token(Token = "0x40010D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public LocalizationSettings displayLanguageSettings;

		[Token(Token = "0x40010D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public VoiceSettings voiceLanguageSettings;

		[Token(Token = "0x40010DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public SubtitlesSettings subtitlesLanguageSettings;

		[Token(Token = "0x40010DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Sound soundSettings;

		[Token(Token = "0x40010DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public UIButton toggleSettingsMenu;

		[Token(Token = "0x40010DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public UIButton closeSettingsMenu;

		[Token(Token = "0x40010DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public GameObject settingsMenu;

		[Token(Token = "0x60011C4")]
		[Address(RVA = "0xD119E8", Offset = "0xD119E8", VA = "0xD119E8")]
		private void Start()
		{
		}

		[Token(Token = "0x60011C5")]
		[Address(RVA = "0xD11DB0", Offset = "0xD11DB0", VA = "0xD11DB0")]
		private void ToggleSettingsMenu()
		{
		}

		[Token(Token = "0x60011C6")]
		[Address(RVA = "0xD11E2C", Offset = "0xD11E2C", VA = "0xD11E2C")]
		private void OpenSettingsMenu()
		{
		}

		[Token(Token = "0x60011C7")]
		[Address(RVA = "0xD11DF4", Offset = "0xD11DF4", VA = "0xD11DF4")]
		private void CloseSettingsMenu()
		{
		}

		[Token(Token = "0x60011C8")]
		[Address(RVA = "0xD11AF0", Offset = "0xD11AF0", VA = "0xD11AF0")]
		private void initSettings()
		{
		}

		[Token(Token = "0x60011C9")]
		[Address(RVA = "0xD11E58", Offset = "0xD11E58", VA = "0xD11E58")]
		public void saveSettings()
		{
		}

		[Token(Token = "0x60011CA")]
		[Address(RVA = "0xD12340", Offset = "0xD12340", VA = "0xD12340")]
		public Settings()
		{
		}
	}
}
namespace sumalab.util
{
	[Token(Token = "0x2000326")]
	public class PhotonSerializer
	{
		[Token(Token = "0x60011CB")]
		[Address(RVA = "0xD12348", Offset = "0xD12348", VA = "0xD12348")]
		public static short serialize(StreamBuffer outStream, object customObject)
		{
			return default(short);
		}

		[Token(Token = "0x60011CC")]
		[Address(RVA = "0xD1242C", Offset = "0xD1242C", VA = "0xD1242C")]
		public static object deserialize(StreamBuffer inStream, short length)
		{
			return null;
		}

		[Token(Token = "0x60011CD")]
		[Address(RVA = "0xD12550", Offset = "0xD12550", VA = "0xD12550")]
		public PhotonSerializer()
		{
		}
	}
}
namespace VRigade.online
{
	[Serializable]
	[Token(Token = "0x2000327")]
	public class InteractableSyncData
	{
		[Token(Token = "0x40010DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string name;

		[Token(Token = "0x40010E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public SerializableVector3 position;

		[Token(Token = "0x40010E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SerializableQuaternion rotation;

		[Token(Token = "0x40010E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public SerializableVector3 velocity;

		[Token(Token = "0x40010E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public SerializableVector3 angularVelocity;

		[Token(Token = "0x40010E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public bool isAttached;

		[Token(Token = "0x40010E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public string newInstanceData;

		[Token(Token = "0x40010E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public string customNewInstanceData;

		[Token(Token = "0x60011CE")]
		[Address(RVA = "0xD12558", Offset = "0xD12558", VA = "0xD12558")]
		public InteractableSyncData(OnlineInteractable online)
		{
		}

		[Token(Token = "0x60011CF")]
		[Address(RVA = "0xD127E4", Offset = "0xD127E4", VA = "0xD127E4")]
		public void SyncInteractable()
		{
		}

		[Token(Token = "0x60011D0")]
		[Address(RVA = "0xD12C58", Offset = "0xD12C58", VA = "0xD12C58")]
		private void syncTransform(SVRInteractable interactable)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000328")]
	public class ListInteractableSyncData
	{
		[Token(Token = "0x40010E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private InteractableSyncData[] list;

		[Token(Token = "0x40010E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static bool bRegistered;

		[Token(Token = "0x60011D2")]
		[Address(RVA = "0xD12DA0", Offset = "0xD12DA0", VA = "0xD12DA0")]
		public static void RegisterInteractableSyncData()
		{
		}

		[Token(Token = "0x60011D3")]
		[Address(RVA = "0xD12F24", Offset = "0xD12F24", VA = "0xD12F24")]
		public ListInteractableSyncData(List<InteractableSyncData> data)
		{
		}

		[Token(Token = "0x60011D4")]
		[Address(RVA = "0xD12F94", Offset = "0xD12F94", VA = "0xD12F94")]
		public List<InteractableSyncData> ToList()
		{
			return null;
		}

		[Token(Token = "0x60011D5")]
		[Address(RVA = "0xD13010", Offset = "0xD13010", VA = "0xD13010")]
		public static short serialize(StreamBuffer outStream, object customObject)
		{
			return default(short);
		}

		[Token(Token = "0x60011D6")]
		[Address(RVA = "0xD13014", Offset = "0xD13014", VA = "0xD13014")]
		public static object deserialize(StreamBuffer inStream, short length)
		{
			return null;
		}
	}
	[Serializable]
	[Token(Token = "0x2000329")]
	public class SerializableVector3
	{
		[Token(Token = "0x40010E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float x;

		[Token(Token = "0x40010EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float y;

		[Token(Token = "0x40010EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float z;

		[Token(Token = "0x60011D7")]
		[Address(RVA = "0xD126E0", Offset = "0xD126E0", VA = "0xD126E0")]
		public static SerializableVector3 Convert(Vector3 v)
		{
			return null;
		}

		[Token(Token = "0x60011D8")]
		[Address(RVA = "0xD12D64", Offset = "0xD12D64", VA = "0xD12D64")]
		public static Vector3 Convert(SerializableVector3 v)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60011D9")]
		[Address(RVA = "0xD13018", Offset = "0xD13018", VA = "0xD13018")]
		public SerializableVector3()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200032A")]
	public class SerializableQuaternion
	{
		[Token(Token = "0x40010EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float x;

		[Token(Token = "0x40010ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float y;

		[Token(Token = "0x40010EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float z;

		[Token(Token = "0x40010EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float w;

		[Token(Token = "0x60011DA")]
		[Address(RVA = "0xD12760", Offset = "0xD12760", VA = "0xD12760")]
		public static SerializableQuaternion Convert(Quaternion q)
		{
			return null;
		}

		[Token(Token = "0x60011DB")]
		[Address(RVA = "0xD12D80", Offset = "0xD12D80", VA = "0xD12D80")]
		public static Quaternion Convert(SerializableQuaternion q)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x60011DC")]
		[Address(RVA = "0xD13020", Offset = "0xD13020", VA = "0xD13020")]
		public SerializableQuaternion()
		{
		}
	}
	[Token(Token = "0x200032B")]
	public class NetworkCharacterController : MonoBehaviour
	{
		[Token(Token = "0x40010F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public NetworkCharacterProxy networkCharacterProxy;

		[Token(Token = "0x40010F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private CommonCharacterController m_character;

		[Token(Token = "0x40010F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public SumalabEvent<string, object[]> OnCustomNetworkEvent;

		[Token(Token = "0x40010F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static bool NetworkCharacterControllerActivated;

		[Token(Token = "0x40010F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private SumalabInvoke.SumalabInvokeReference executeActionHandler;

		[Token(Token = "0x60011DD")]
		[Address(RVA = "0xD13028", Offset = "0xD13028", VA = "0xD13028")]
		private void Start()
		{
		}

		[Token(Token = "0x60011DE")]
		[Address(RVA = "0xD1302C", Offset = "0xD1302C", VA = "0xD1302C")]
		public void init()
		{
		}

		[Token(Token = "0x60011DF")]
		[Address(RVA = "0xD133E4", Offset = "0xD133E4", VA = "0xD133E4")]
		public bool isSpawnCompleted()
		{
			return default(bool);
		}

		[Token(Token = "0x60011E0")]
		[Address(RVA = "0xD1362C", Offset = "0xD1362C", VA = "0xD1362C")]
		private CommonCharacterController GetCharacter()
		{
			return null;
		}

		[Token(Token = "0x60011E1")]
		[Address(RVA = "0xD136D4", Offset = "0xD136D4", VA = "0xD136D4")]
		private void Update()
		{
		}

		[Token(Token = "0x60011E2")]
		[Address(RVA = "0xD13384", Offset = "0xD13384", VA = "0xD13384")]
		public bool isRemoteMaster()
		{
			return default(bool);
		}

		[Token(Token = "0x60011E3")]
		[Address(RVA = "0xD13734", Offset = "0xD13734", VA = "0xD13734")]
		public bool isConnected()
		{
			return default(bool);
		}

		[Token(Token = "0x60011E4")]
		[Address(RVA = "0xD137D0", Offset = "0xD137D0", VA = "0xD137D0")]
		public bool isRemoteProxyActive()
		{
			return default(bool);
		}

		[Token(Token = "0x60011E5")]
		[Address(RVA = "0xD13830", Offset = "0xD13830", VA = "0xD13830")]
		public bool CheckOnHitAllowed(Bullet bullet)
		{
			return default(bool);
		}

		[Token(Token = "0x60011E6")]
		[Address(RVA = "0xD13968", Offset = "0xD13968", VA = "0xD13968")]
		public void OnHit(Bullet bullet, Ray ray, RaycastHit hit, Rigidbody rb, int lifes)
		{
		}

		[Token(Token = "0x60011E7")]
		[Address(RVA = "0xD13E78", Offset = "0xD13E78", VA = "0xD13E78")]
		public void Kill()
		{
		}

		[Token(Token = "0x60011E8")]
		[Address(RVA = "0xD14174", Offset = "0xD14174", VA = "0xD14174")]
		public void ExecuteAction(int currentAction)
		{
		}

		[Token(Token = "0x60011E9")]
		[Address(RVA = "0xD14F24", Offset = "0xD14F24", VA = "0xD14F24")]
		public void StartActionDelayed()
		{
		}

		[Token(Token = "0x60011EA")]
		[Address(RVA = "0xD15430", Offset = "0xD15430", VA = "0xD15430")]
		public void addRemoteTargets(List<AimTarget> targetsUpdated)
		{
		}

		[Token(Token = "0x60011EB")]
		[Address(RVA = "0xD15854", Offset = "0xD15854", VA = "0xD15854")]
		public void sendSetAnimation(int index)
		{
		}

		[Token(Token = "0x60011EC")]
		[Address(RVA = "0xD15C08", Offset = "0xD15C08", VA = "0xD15C08")]
		public Transform getPlayerTarget()
		{
			return null;
		}

		[Token(Token = "0x60011ED")]
		[Address(RVA = "0xD15F44", Offset = "0xD15F44", VA = "0xD15F44")]
		public void sendResumeMove()
		{
		}

		[Token(Token = "0x60011EE")]
		[Address(RVA = "0xD16268", Offset = "0xD16268", VA = "0xD16268")]
		internal void stopActions()
		{
		}

		[Token(Token = "0x60011EF")]
		[Address(RVA = "0xD16340", Offset = "0xD16340", VA = "0xD16340")]
		public void sendUpdateTargetAndAccuracy(AimTarget currentTarget, Vector3 offset, Vector3 currentTargetPosition, bool bWarning, bool bLethalShot)
		{
		}

		[Token(Token = "0x60011F0")]
		[Address(RVA = "0xD16AB0", Offset = "0xD16AB0", VA = "0xD16AB0")]
		public void sendFireState(string strState, int iIndex = 0)
		{
		}

		[Token(Token = "0x60011F1")]
		[Address(RVA = "0xD16E50", Offset = "0xD16E50", VA = "0xD16E50")]
		public void sendCustomEvent(string strName, params object[] parameters)
		{
		}

		[Token(Token = "0x60011F2")]
		[Address(RVA = "0xD17280", Offset = "0xD17280", VA = "0xD17280")]
		public void CustomEvent(string strName, object[] parameters)
		{
		}

		[Token(Token = "0x60011F3")]
		[Address(RVA = "0xD17380", Offset = "0xD17380", VA = "0xD17380")]
		public void SpawnComplete()
		{
		}

		[Token(Token = "0x60011F4")]
		[Address(RVA = "0xD17420", Offset = "0xD17420", VA = "0xD17420")]
		public NetworkCharacterController()
		{
		}
	}
	[Token(Token = "0x2000332")]
	public class NetworkCharacterProxy : MonoBehaviourPun, IPunObservable
	{
		[Token(Token = "0x400110B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private CommonCharacterController m_character;

		[Token(Token = "0x400110C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string publicName;

		[Token(Token = "0x400110D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private HashSet<string> spawnPlayers;

		[Token(Token = "0x400110E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool bDebugProxyHostNotFound;

		[Token(Token = "0x6001205")]
		[Address(RVA = "0xD17638", Offset = "0xD17638", VA = "0xD17638")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001206")]
		[Address(RVA = "0xD17738", Offset = "0xD17738", VA = "0xD17738")]
		private void searchProxyHost()
		{
		}

		[Token(Token = "0x6001207")]
		[Address(RVA = "0xD17994", Offset = "0xD17994", VA = "0xD17994")]
		private void assignProxy()
		{
		}

		[Token(Token = "0x6001208")]
		[Address(RVA = "0xD17BE4", Offset = "0xD17BE4", VA = "0xD17BE4")]
		private void Update()
		{
		}

		[Token(Token = "0x6001209")]
		[Address(RVA = "0xD17A7C", Offset = "0xD17A7C", VA = "0xD17A7C")]
		public void sendSpawnComplete()
		{
		}

		[Token(Token = "0x600120A")]
		[Address(RVA = "0xD17BE8", Offset = "0xD17BE8", VA = "0xD17BE8")]
		[PunRPC]
		public void SpawnComplete(string strPlayer)
		{
		}

		[Token(Token = "0x600120B")]
		[Address(RVA = "0xD13468", Offset = "0xD13468", VA = "0xD13468")]
		public bool isSpawnCompleted()
		{
			return default(bool);
		}

		[Token(Token = "0x600120C")]
		[Address(RVA = "0xD17C70", Offset = "0xD17C70", VA = "0xD17C70")]
		public void sendOnHit(string bulletId, Ray ray, RaycastHit hit, string colliderName, int lifes)
		{
		}

		[Token(Token = "0x600120D")]
		[Address(RVA = "0xD18294", Offset = "0xD18294", VA = "0xD18294")]
		[PunRPC]
		private void OnHit(string bulletId, Vector3 point, Vector3 normal, Vector3 direction, string colliderName, int lifes)
		{
		}

		[Token(Token = "0x600120E")]
		[Address(RVA = "0xD14034", Offset = "0xD14034", VA = "0xD14034")]
		public void sendKill()
		{
		}

		[Token(Token = "0x600120F")]
		[Address(RVA = "0xD18D88", Offset = "0xD18D88", VA = "0xD18D88")]
		[PunRPC]
		private void Kill()
		{
		}

		[Token(Token = "0x6001210")]
		[Address(RVA = "0xD18FCC", Offset = "0xD18FCC", VA = "0xD18FCC")]
		private bool isCharacterDead()
		{
			return default(bool);
		}

		[Token(Token = "0x6001211")]
		[Address(RVA = "0xD19054", Offset = "0xD19054", VA = "0xD19054")]
		private bool isCharacterReady(bool bCheckAction = true)
		{
			return default(bool);
		}

		[Token(Token = "0x6001212")]
		[Address(RVA = "0xD15AEC", Offset = "0xD15AEC", VA = "0xD15AEC")]
		public void sendSetAnimation(int index)
		{
		}

		[Token(Token = "0x6001213")]
		[Address(RVA = "0xD1919C", Offset = "0xD1919C", VA = "0xD1919C")]
		[PunRPC]
		public void SetAnimation(int index)
		{
		}

		[Token(Token = "0x6001214")]
		[Address(RVA = "0xD165EC", Offset = "0xD165EC", VA = "0xD165EC")]
		public void sendUpdateTargetAndAccuracy(AimTarget currentTarget, Vector3 offset, Vector3 currentTargetPosition, bool bWarning, bool bLethalShot)
		{
		}

		[Token(Token = "0x6001215")]
		[Address(RVA = "0xD193B8", Offset = "0xD193B8", VA = "0xD193B8")]
		[PunRPC]
		public void UpdateTargetAndAccuracy(string strTargetName, Vector3 offset, Vector3 currentTargetPosition, bool bWarning, bool bLethalShot)
		{
		}

		[Token(Token = "0x6001216")]
		[Address(RVA = "0xD14B24", Offset = "0xD14B24", VA = "0xD14B24")]
		public void sendExecuteAction(int index)
		{
		}

		[Token(Token = "0x6001217")]
		[Address(RVA = "0xD1983C", Offset = "0xD1983C", VA = "0xD1983C")]
		[PunRPC]
		private void ExecuteNewAction(int index, Vector3 position, Quaternion rotation)
		{
		}

		[Token(Token = "0x6001218")]
		[Address(RVA = "0xD152C8", Offset = "0xD152C8", VA = "0xD152C8")]
		public void sendStartActionDelayed()
		{
		}

		[Token(Token = "0x6001219")]
		[Address(RVA = "0xD19AF8", Offset = "0xD19AF8", VA = "0xD19AF8")]
		[PunRPC]
		private void StartActionDelayed()
		{
		}

		[Token(Token = "0x600121A")]
		[Address(RVA = "0xD19328", Offset = "0xD19328", VA = "0xD19328")]
		private bool isMaster()
		{
			return default(bool);
		}

		[Token(Token = "0x600121B")]
		[Address(RVA = "0xD16CF4", Offset = "0xD16CF4", VA = "0xD16CF4")]
		public void sendFireState(string strState, int iIndex)
		{
		}

		[Token(Token = "0x600121C")]
		[Address(RVA = "0xD19C5C", Offset = "0xD19C5C", VA = "0xD19C5C")]
		[PunRPC]
		private void FireState(string strState, int index)
		{
		}

		[Token(Token = "0x600121D")]
		[Address(RVA = "0xD19DFC", Offset = "0xD19DFC", VA = "0xD19DFC", Slot = "4")]
		public void OnPhotonSerializeView(PhotonStream stream, PhotonMessageInfo info)
		{
		}

		[Token(Token = "0x600121E")]
		[Address(RVA = "0xD162E4", Offset = "0xD162E4", VA = "0xD162E4")]
		public void stopActions()
		{
		}

		[Token(Token = "0x600121F")]
		[Address(RVA = "0xD13C60", Offset = "0xD13C60", VA = "0xD13C60")]
		public void OnHit(Bullet bullet, Ray ray, RaycastHit hit, Rigidbody rb, int lifes)
		{
		}

		[Token(Token = "0x6001220")]
		[Address(RVA = "0xD16100", Offset = "0xD16100", VA = "0xD16100")]
		public void sendResumeMove()
		{
		}

		[Token(Token = "0x6001221")]
		[Address(RVA = "0xD19E00", Offset = "0xD19E00", VA = "0xD19E00")]
		[PunRPC]
		private void ResumeMove()
		{
		}

		[Token(Token = "0x6001222")]
		[Address(RVA = "0xD170A4", Offset = "0xD170A4", VA = "0xD170A4")]
		public void sendCustomEvent(string strName, object[] parameters)
		{
		}

		[Token(Token = "0x6001223")]
		[Address(RVA = "0xD19F58", Offset = "0xD19F58", VA = "0xD19F58")]
		[PunRPC]
		private void CustomEvent(string strName, object[] parameters)
		{
		}

		[Token(Token = "0x6001224")]
		[Address(RVA = "0xD1A1D4", Offset = "0xD1A1D4", VA = "0xD1A1D4")]
		public NetworkCharacterProxy()
		{
		}
	}
	[Token(Token = "0x200033A")]
	public class NetworkController : MonoBehaviourPunCallbacks, IOnEventCallback
	{
		[Token(Token = "0x400112E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool automaticallyLoadLevels;

		[Token(Token = "0x400112F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private List<string> unassignedSwatNames;

		[Token(Token = "0x4001130")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static NetworkController Instance;

		[Token(Token = "0x4001131")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool isConnectingToRoom;

		[Token(Token = "0x4001132")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
		public bool isConnectedToRoom;

		[Token(Token = "0x4001133")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x32")]
		public bool isConnectingToMaster;

		[Token(Token = "0x4001134")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private string gameVersion;

		[Token(Token = "0x4001135")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private byte maxPlayersPerRoom;

		[Token(Token = "0x400113F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public int expectedOnlinePlayers;

		[Token(Token = "0x4001140")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public string currentRoomName;

		[Token(Token = "0x4001141")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public string currentRoomCode;

		[Token(Token = "0x4001142")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static string SWAT_0;

		[Token(Token = "0x4001143")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static string SWAT_1;

		[Token(Token = "0x4001144")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static int maxOnlinePlayers;

		[Token(Token = "0x4001145")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public static string PREFIX_ROOM_NAME_REPLY;

		[Token(Token = "0x4001146")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static string ROOM_CODE;

		[Token(Token = "0x4001147")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private static string ROOM_RANDOM;

		[Token(Token = "0x4001148")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private static string ROOM_CLOSED;

		[Token(Token = "0x4001149")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private TypedLobby _defaultLobby;

		[Token(Token = "0x400114A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private TypedLobby _randomLobby;

		[Token(Token = "0x400114B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private static string SWAT_NAME;

		[Token(Token = "0x400114C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private static byte sceneReadyEventCode;

		[Token(Token = "0x400114D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private HashSet<Player> sceneReadyPlayers;

		[Token(Token = "0x400114E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public bool realtimeMultiplayer;

		[Token(Token = "0x400114F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public SumalabEvent OnPlayerMasterClient;

		[Token(Token = "0x4001150")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private bool forceSwat1Id;

		[Token(Token = "0x4001151")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private TypedLobby currentLobby;

		[Token(Token = "0x4001152")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private static string privateRandomNameChars;

		[Token(Token = "0x4001153")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		public float onPauseTimestamp;

		[Token(Token = "0x1400001B")]
		public event Action OnGameStarted
		{
			[Token(Token = "0x6001237")]
			[Address(RVA = "0xD1A3EC", Offset = "0xD1A3EC", VA = "0xD1A3EC")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6001238")]
			[Address(RVA = "0xD1A488", Offset = "0xD1A488", VA = "0xD1A488")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x1400001C")]
		public event Action OnGameConnected
		{
			[Token(Token = "0x6001239")]
			[Address(RVA = "0xD1A524", Offset = "0xD1A524", VA = "0xD1A524")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x600123A")]
			[Address(RVA = "0xD1A5C0", Offset = "0xD1A5C0", VA = "0xD1A5C0")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x1400001D")]
		public event Action OnGameConnecting
		{
			[Token(Token = "0x600123B")]
			[Address(RVA = "0xD1A65C", Offset = "0xD1A65C", VA = "0xD1A65C")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x600123C")]
			[Address(RVA = "0xD1A6F8", Offset = "0xD1A6F8", VA = "0xD1A6F8")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x1400001E")]
		public event Action<DisconnectCause> OnGameDisconnected
		{
			[Token(Token = "0x600123D")]
			[Address(RVA = "0xD1A794", Offset = "0xD1A794", VA = "0xD1A794")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x600123E")]
			[Address(RVA = "0xD1A844", Offset = "0xD1A844", VA = "0xD1A844")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x1400001F")]
		public event Action OnGameJoinedRoom
		{
			[Token(Token = "0x600123F")]
			[Address(RVA = "0xD1A8F4", Offset = "0xD1A8F4", VA = "0xD1A8F4")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6001240")]
			[Address(RVA = "0xD1A990", Offset = "0xD1A990", VA = "0xD1A990")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x14000020")]
		public event Action<string> OnGameJoinRoomError
		{
			[Token(Token = "0x6001241")]
			[Address(RVA = "0xD1AA2C", Offset = "0xD1AA2C", VA = "0xD1AA2C")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6001242")]
			[Address(RVA = "0xD1AADC", Offset = "0xD1AADC", VA = "0xD1AADC")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x14000021")]
		public event Action OnGamePlayerEnteredRoom
		{
			[Token(Token = "0x6001243")]
			[Address(RVA = "0xD1AB8C", Offset = "0xD1AB8C", VA = "0xD1AB8C")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6001244")]
			[Address(RVA = "0xD1AC28", Offset = "0xD1AC28", VA = "0xD1AC28")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x14000022")]
		public event Action OnGameRejoin
		{
			[Token(Token = "0x6001245")]
			[Address(RVA = "0xD1ACC4", Offset = "0xD1ACC4", VA = "0xD1ACC4")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6001246")]
			[Address(RVA = "0xD1AD60", Offset = "0xD1AD60", VA = "0xD1AD60")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x14000023")]
		public event Action OnTeammateDisconnected
		{
			[Token(Token = "0x6001247")]
			[Address(RVA = "0xD1ADFC", Offset = "0xD1ADFC", VA = "0xD1ADFC")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6001248")]
			[Address(RVA = "0xD1AE98", Offset = "0xD1AE98", VA = "0xD1AE98")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x6001249")]
		[Address(RVA = "0xD1AF34", Offset = "0xD1AF34", VA = "0xD1AF34")]
		private void Awake()
		{
		}

		[Token(Token = "0x600124A")]
		[Address(RVA = "0xD1B2F0", Offset = "0xD1B2F0", VA = "0xD1B2F0")]
		private void Start()
		{
		}

		[Token(Token = "0x600124B")]
		[Address(RVA = "0xD1B2F4", Offset = "0xD1B2F4", VA = "0xD1B2F4")]
		private void Update()
		{
		}

		[Token(Token = "0x600124C")]
		[Address(RVA = "0xD1B2F8", Offset = "0xD1B2F8", VA = "0xD1B2F8")]
		private void addPlayer(Player player)
		{
		}

		[Token(Token = "0x600124D")]
		[Address(RVA = "0xD1BA40", Offset = "0xD1BA40", VA = "0xD1BA40")]
		private void removePlayer(Player player)
		{
		}

		[Token(Token = "0x600124E")]
		[Address(RVA = "0xD1BAE8", Offset = "0xD1BAE8", VA = "0xD1BAE8")]
		private void populateUnassignedSwatNames(bool bCleanLocal = true)
		{
		}

		[Token(Token = "0x600124F")]
		[Address(RVA = "0xD1B1EC", Offset = "0xD1B1EC", VA = "0xD1B1EC")]
		private void cleanPlayers()
		{
		}

		[Token(Token = "0x6001250")]
		[Address(RVA = "0xD13918", Offset = "0xD13918", VA = "0xD13918")]
		public bool isConnected()
		{
			return default(bool);
		}

		[Token(Token = "0x6001251")]
		[Address(RVA = "0xD136D8", Offset = "0xD136D8", VA = "0xD136D8")]
		public bool isMasterClient()
		{
			return default(bool);
		}

		[Token(Token = "0x6001252")]
		[Address(RVA = "0xD1BF34", Offset = "0xD1BF34", VA = "0xD1BF34")]
		public void Connect()
		{
		}

		[Token(Token = "0x6001253")]
		[Address(RVA = "0xD1C03C", Offset = "0xD1C03C", VA = "0xD1C03C")]
		private void prepareConnectionAndConnect()
		{
		}

		[Token(Token = "0x6001254")]
		[Address(RVA = "0xD1C1F4", Offset = "0xD1C1F4", VA = "0xD1C1F4")]
		private void errorConnect(string str)
		{
		}

		[Token(Token = "0x6001255")]
		[Address(RVA = "0xD1C040", Offset = "0xD1C040", VA = "0xD1C040")]
		private void connectImpl()
		{
		}

		[Token(Token = "0x6001256")]
		[Address(RVA = "0xD1C2F4", Offset = "0xD1C2F4", VA = "0xD1C2F4")]
		public void Disconnect()
		{
		}

		[Token(Token = "0x6001257")]
		[Address(RVA = "0xD1C344", Offset = "0xD1C344", VA = "0xD1C344")]
		public void UserBlocked()
		{
		}

		[Token(Token = "0x6001258")]
		[Address(RVA = "0xD1C604", Offset = "0xD1C604", VA = "0xD1C604", Slot = "45")]
		public override void OnConnectedToMaster()
		{
		}

		[Token(Token = "0x6001259")]
		[Address(RVA = "0xD1C768", Offset = "0xD1C768", VA = "0xD1C768", Slot = "38")]
		public override void OnDisconnected(DisconnectCause cause)
		{
		}

		[Token(Token = "0x600125A")]
		[Address(RVA = "0xD1B934", Offset = "0xD1B934", VA = "0xD1B934")]
		public void setDefaultNickName(string name)
		{
		}

		[Token(Token = "0x600125B")]
		[Address(RVA = "0xD1CAD4", Offset = "0xD1CAD4", VA = "0xD1CAD4")]
		public void setNickName(string name)
		{
		}

		[Token(Token = "0x600125C")]
		[Address(RVA = "0xD1CBA0", Offset = "0xD1CBA0", VA = "0xD1CBA0")]
		public void JoinRandomRoom()
		{
		}

		[Token(Token = "0x600125D")]
		[Address(RVA = "0xD1CD08", Offset = "0xD1CD08", VA = "0xD1CD08")]
		public void JoinReplyRoom()
		{
		}

		[Token(Token = "0x600125E")]
		[Address(RVA = "0xD1CEE4", Offset = "0xD1CEE4", VA = "0xD1CEE4")]
		public static string CalculateReplyName(string currentRoomName)
		{
			return null;
		}

		[Token(Token = "0x600125F")]
		[Address(RVA = "0xD1D190", Offset = "0xD1D190", VA = "0xD1D190", Slot = "44")]
		public override void OnJoinRandomFailed(short returnCode, string message)
		{
		}

		[Token(Token = "0x6001260")]
		[Address(RVA = "0xD1D274", Offset = "0xD1D274", VA = "0xD1D274")]
		public void CreateRoom([Optional] string strName, [Optional] string strRoomCode, [Optional] TypedLobby lobby, bool bJoin = true)
		{
		}

		[Token(Token = "0x6001261")]
		[Address(RVA = "0xD1DCDC", Offset = "0xD1DCDC", VA = "0xD1DCDC")]
		public void JoinRoom(string strRoomCode)
		{
		}

		[Token(Token = "0x6001262")]
		[Address(RVA = "0xD1E020", Offset = "0xD1E020", VA = "0xD1E020")]
		public bool ReconnectAndRejoin()
		{
			return default(bool);
		}

		[Token(Token = "0x6001263")]
		[Address(RVA = "0xD1E0B4", Offset = "0xD1E0B4", VA = "0xD1E0B4", Slot = "35")]
		public override void OnCreatedRoom()
		{
		}

		[Token(Token = "0x6001264")]
		[Address(RVA = "0xD1DEDC", Offset = "0xD1DEDC", VA = "0xD1DEDC")]
		public void FindPrivateRoom(string strRoomCode)
		{
		}

		[Token(Token = "0x6001265")]
		[Address(RVA = "0xD1B700", Offset = "0xD1B700", VA = "0xD1B700")]
		private bool isRoomOpen(RoomInfo room)
		{
			return default(bool);
		}

		[Token(Token = "0x6001266")]
		[Address(RVA = "0xD1E1C8", Offset = "0xD1E1C8", VA = "0xD1E1C8", Slot = "40")]
		public override void OnRoomListUpdate(List<RoomInfo> roomList)
		{
		}

		[Token(Token = "0x6001267")]
		[Address(RVA = "0xD1E7E0", Offset = "0xD1E7E0", VA = "0xD1E7E0", Slot = "41")]
		public override void OnJoinedRoom()
		{
		}

		[Token(Token = "0x6001268")]
		[Address(RVA = "0xD1ECC0", Offset = "0xD1ECC0", VA = "0xD1ECC0", Slot = "34")]
		public override void OnJoinRoomFailed(short returnCode, string message)
		{
		}

		[Token(Token = "0x6001269")]
		[Address(RVA = "0xD1EE14", Offset = "0xD1EE14", VA = "0xD1EE14", Slot = "33")]
		public override void OnCreateRoomFailed(short returnCode, string message)
		{
		}

		[Token(Token = "0x600126A")]
		[Address(RVA = "0xD1C438", Offset = "0xD1C438", VA = "0xD1C438")]
		public void LeaveRoom()
		{
		}

		[Token(Token = "0x600126B")]
		[Address(RVA = "0xD1C29C", Offset = "0xD1C29C", VA = "0xD1C29C")]
		private void LogFeedback(string message)
		{
		}

		[Token(Token = "0x600126C")]
		[Address(RVA = "0xD1F008", Offset = "0xD1F008", VA = "0xD1F008")]
		public void CloseRoomForNewPlayers(int expectedPlayers = -1)
		{
		}

		[Token(Token = "0x600126D")]
		[Address(RVA = "0xD1E0B8", Offset = "0xD1E0B8", VA = "0xD1E0B8")]
		private bool getBoolProperty(RoomInfo room, string property)
		{
			return default(bool);
		}

		[Token(Token = "0x600126E")]
		[Address(RVA = "0xD1F324", Offset = "0xD1F324", VA = "0xD1F324")]
		public string generatePrivateRoomName()
		{
			return null;
		}

		[Token(Token = "0x600126F")]
		[Address(RVA = "0xD1F460", Offset = "0xD1F460", VA = "0xD1F460", Slot = "42")]
		public override void OnPlayerEnteredRoom(Player newPlayer)
		{
		}

		[Token(Token = "0x6001270")]
		[Address(RVA = "0xD1F670", Offset = "0xD1F670", VA = "0xD1F670")]
		public void CloseConnection(Player player)
		{
		}

		[Token(Token = "0x6001271")]
		[Address(RVA = "0xD1B77C", Offset = "0xD1B77C", VA = "0xD1B77C")]
		public static void SetPlayerSwatName(Player player, string strName)
		{
		}

		[Token(Token = "0x6001272")]
		[Address(RVA = "0xD1B870", Offset = "0xD1B870", VA = "0xD1B870")]
		public static string GetPlayerSwatName(Player player)
		{
			return null;
		}

		[Token(Token = "0x6001273")]
		[Address(RVA = "0xD1F74C", Offset = "0xD1F74C", VA = "0xD1F74C")]
		public static void RemovePlayerSwatName(Player player)
		{
		}

		[Token(Token = "0x6001274")]
		[Address(RVA = "0xD1F7D4", Offset = "0xD1F7D4", VA = "0xD1F7D4", Slot = "43")]
		public override void OnPlayerLeftRoom(Player newPlayer)
		{
		}

		[Token(Token = "0x6001275")]
		[Address(RVA = "0xD1F8D8", Offset = "0xD1F8D8", VA = "0xD1F8D8")]
		public void StartGame(bool bScene = true)
		{
		}

		[Token(Token = "0x6001276")]
		[Address(RVA = "0xD1F9E8", Offset = "0xD1F9E8", VA = "0xD1F9E8")]
		private void StartGameImpl(bool bScene)
		{
		}

		[Token(Token = "0x6001277")]
		[Address(RVA = "0xD13780", Offset = "0xD13780", VA = "0xD13780")]
		public static bool isOnlineGame()
		{
			return default(bool);
		}

		[Token(Token = "0x6001278")]
		[Address(RVA = "0xD1FD48", Offset = "0xD1FD48", VA = "0xD1FD48")]
		public void ChangeMasterClientIfAvailable()
		{
		}

		[Token(Token = "0x6001279")]
		[Address(RVA = "0xD200A4", Offset = "0xD200A4", VA = "0xD200A4", Slot = "32")]
		public override void OnMasterClientSwitched(Player newMasterClient)
		{
		}

		[Token(Token = "0x600127A")]
		[Address(RVA = "0xD1CA1C", Offset = "0xD1CA1C", VA = "0xD1CA1C")]
		public void setOnlinePlayerBecomesMainClient(bool bValue)
		{
		}

		[Token(Token = "0x600127B")]
		[Address(RVA = "0xD2072C", Offset = "0xD2072C", VA = "0xD2072C", Slot = "28")]
		public override void OnEnable()
		{
		}

		[Token(Token = "0x600127C")]
		[Address(RVA = "0xD20790", Offset = "0xD20790", VA = "0xD20790", Slot = "29")]
		public override void OnDisable()
		{
		}

		[Token(Token = "0x600127D")]
		[Address(RVA = "0xD20578", Offset = "0xD20578", VA = "0xD20578")]
		private void recalculateUnassignedSwatNames()
		{
		}

		[Token(Token = "0x600127E")]
		[Address(RVA = "0xD1C584", Offset = "0xD1C584", VA = "0xD1C584")]
		private void sendGameClosedError([Optional] string customMessage)
		{
		}

		[Token(Token = "0x600127F")]
		[Address(RVA = "0xD1E778", Offset = "0xD1E778", VA = "0xD1E778")]
		private void sendGamePlayingError()
		{
		}

		[Token(Token = "0x6001280")]
		[Address(RVA = "0xD207F4", Offset = "0xD207F4", VA = "0xD207F4")]
		public int getRandomSeed()
		{
			return default(int);
		}

		[Token(Token = "0x6001281")]
		[Address(RVA = "0xD20878", Offset = "0xD20878", VA = "0xD20878", Slot = "31")]
		public override void OnLeftRoom()
		{
		}

		[Token(Token = "0x6001282")]
		[Address(RVA = "0xD20918", Offset = "0xD20918", VA = "0xD20918")]
		public void sendSceneReady()
		{
		}

		[Token(Token = "0x6001283")]
		[Address(RVA = "0xD20A54", Offset = "0xD20A54", VA = "0xD20A54")]
		public bool isSceneReadyForAllPlayers()
		{
			return default(bool);
		}

		[Token(Token = "0x6001284")]
		[Address(RVA = "0xD20B2C", Offset = "0xD20B2C", VA = "0xD20B2C")]
		public void DisconnectNotSceneReadyPlayers()
		{
		}

		[Token(Token = "0x6001285")]
		[Address(RVA = "0xD20C0C", Offset = "0xD20C0C", VA = "0xD20C0C", Slot = "54")]
		public void OnEvent(EventData photonEvent)
		{
		}

		[Token(Token = "0x6001286")]
		[Address(RVA = "0xD20D18", Offset = "0xD20D18", VA = "0xD20D18")]
		public void EnableVoiceChat(bool bValue)
		{
		}

		[Token(Token = "0x6001287")]
		[Address(RVA = "0xD20E3C", Offset = "0xD20E3C", VA = "0xD20E3C")]
		public NetworkController()
		{
		}
	}
	[Token(Token = "0x200033F")]
	public class NetworkFactory : MonoBehaviour
	{
		[Token(Token = "0x400115F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static NetworkFactory Instance;

		[Token(Token = "0x4001160")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject OnlinePlayer;

		[Token(Token = "0x4001161")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject OnlinePlayerPart;

		[Token(Token = "0x4001162")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameObject NetworkBulletController;

		[Token(Token = "0x4001163")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public GameObject NetworkCharacterProxy;

		[Token(Token = "0x4001164")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public GameObject NetworkInteractableController;

		[Token(Token = "0x6001296")]
		[Address(RVA = "0xD21284", Offset = "0xD21284", VA = "0xD21284")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001297")]
		[Address(RVA = "0xD212DC", Offset = "0xD212DC", VA = "0xD212DC")]
		private void Start()
		{
		}

		[Token(Token = "0x6001298")]
		[Address(RVA = "0xD212E0", Offset = "0xD212E0", VA = "0xD212E0")]
		private void Update()
		{
		}

		[Token(Token = "0x6001299")]
		[Address(RVA = "0xD212E4", Offset = "0xD212E4", VA = "0xD212E4")]
		public NetworkFactory()
		{
		}
	}
	[Token(Token = "0x2000340")]
	public class NetworkInteractableController : MonoBehaviour
	{
		[Token(Token = "0x4001165")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Dictionary<string, OnlineInteractable> interactables;

		[Token(Token = "0x4001166")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static NetworkInteractableController Instance;

		[Token(Token = "0x600129A")]
		[Address(RVA = "0xD212EC", Offset = "0xD212EC", VA = "0xD212EC")]
		private void Awake()
		{
		}

		[Token(Token = "0x600129B")]
		[Address(RVA = "0xD213C8", Offset = "0xD213C8", VA = "0xD213C8")]
		private void init()
		{
		}

		[Token(Token = "0x600129C")]
		[Address(RVA = "0xD2182C", Offset = "0xD2182C", VA = "0xD2182C")]
		private void Update()
		{
		}

		[Token(Token = "0x600129D")]
		[Address(RVA = "0xD21830", Offset = "0xD21830", VA = "0xD21830")]
		public bool IsRegistered(SVRInteractable interactable)
		{
			return default(bool);
		}

		[Token(Token = "0x600129E")]
		[Address(RVA = "0xD218F8", Offset = "0xD218F8", VA = "0xD218F8")]
		public void Register(OnlineInteractable interactable)
		{
		}

		[Token(Token = "0x600129F")]
		[Address(RVA = "0xD219DC", Offset = "0xD219DC", VA = "0xD219DC")]
		public void Deregister(SVRInteractable interactable)
		{
		}

		[Token(Token = "0x60012A0")]
		[Address(RVA = "0xD21A48", Offset = "0xD21A48", VA = "0xD21A48")]
		public void Clear()
		{
		}

		[Token(Token = "0x60012A1")]
		[Address(RVA = "0xD21A98", Offset = "0xD21A98", VA = "0xD21A98")]
		public List<InteractableSyncData> SyncOnlineInteractables()
		{
			return null;
		}

		[Token(Token = "0x60012A2")]
		[Address(RVA = "0xD21F48", Offset = "0xD21F48", VA = "0xD21F48")]
		public void RemoteSyncOnlineInteractables(List<InteractableSyncData> dataList)
		{
		}

		[Token(Token = "0x60012A3")]
		[Address(RVA = "0xD12AE4", Offset = "0xD12AE4", VA = "0xD12AE4")]
		public OnlineInteractable GetInteractable(string strName)
		{
			return null;
		}

		[Token(Token = "0x60012A4")]
		[Address(RVA = "0xD2209C", Offset = "0xD2209C", VA = "0xD2209C")]
		public void RemoveCreatedOnlineInteractables()
		{
		}

		[Token(Token = "0x60012A5")]
		[Address(RVA = "0xD22364", Offset = "0xD22364", VA = "0xD22364")]
		public NetworkInteractableController()
		{
		}
	}
	[Token(Token = "0x2000341")]
	public class OnlineInteractable : MonoBehaviour
	{
		[Token(Token = "0x4001167")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected SVRInteractable interactable;

		[Token(Token = "0x4001168")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool onlineIDReady;

		[Token(Token = "0x4001169")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		public bool readyOnDisable;

		[Token(Token = "0x400116A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x22")]
		private bool created;

		[Token(Token = "0x400116B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static int onlineInstanceId;

		[Token(Token = "0x400116C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private string oldName;

		[Token(Token = "0x60012A7")]
		[Address(RVA = "0xD223F0", Offset = "0xD223F0", VA = "0xD223F0")]
		private void Awake()
		{
		}

		[Token(Token = "0x60012A8")]
		[Address(RVA = "0xD22424", Offset = "0xD22424", VA = "0xD22424")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60012A9")]
		[Address(RVA = "0xD22428", Offset = "0xD22428", VA = "0xD22428")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60012AA")]
		[Address(RVA = "0xD2156C", Offset = "0xD2156C", VA = "0xD2156C")]
		public void Register([Optional] string strName)
		{
		}

		[Token(Token = "0x60012AB")]
		[Address(RVA = "0xD22280", Offset = "0xD22280", VA = "0xD22280")]
		public void Deregister()
		{
		}

		[Token(Token = "0x60012AC")]
		[Address(RVA = "0xD22438", Offset = "0xD22438", VA = "0xD22438")]
		private string GetOnlineInstaceName(SVRInteractable interactable)
		{
			return null;
		}

		[Token(Token = "0x60012AD")]
		[Address(RVA = "0xD227D0", Offset = "0xD227D0", VA = "0xD227D0", Slot = "4")]
		public virtual void SetCustomData(string data)
		{
		}

		[Token(Token = "0x60012AE")]
		[Address(RVA = "0xD227D4", Offset = "0xD227D4", VA = "0xD227D4", Slot = "5")]
		public virtual string GetNewInstanceData()
		{
			return null;
		}

		[Token(Token = "0x60012AF")]
		[Address(RVA = "0xD227DC", Offset = "0xD227DC", VA = "0xD227DC", Slot = "6")]
		public virtual string GetCustomData()
		{
			return null;
		}

		[Token(Token = "0x60012B0")]
		[Address(RVA = "0xD227E4", Offset = "0xD227E4", VA = "0xD227E4", Slot = "7")]
		public virtual void Deactivate()
		{
		}

		[Token(Token = "0x60012B1")]
		[Address(RVA = "0xD22850", Offset = "0xD22850", VA = "0xD22850", Slot = "8")]
		public virtual bool IsAttached()
		{
			return default(bool);
		}

		[Token(Token = "0x60012B2")]
		[Address(RVA = "0xD22920", Offset = "0xD22920", VA = "0xD22920")]
		public bool IsCreatedDynamically()
		{
			return default(bool);
		}

		[Token(Token = "0x60012B3")]
		[Address(RVA = "0xD22928", Offset = "0xD22928", VA = "0xD22928")]
		public OnlineInteractable()
		{
		}
	}
	[Token(Token = "0x2000342")]
	public class OnlineInteractableMagazine : OnlineInteractable
	{
		[Token(Token = "0x60012B4")]
		[Address(RVA = "0xD22938", Offset = "0xD22938", VA = "0xD22938", Slot = "4")]
		public override void SetCustomData(string data)
		{
		}

		[Token(Token = "0x60012B5")]
		[Address(RVA = "0xD2293C", Offset = "0xD2293C", VA = "0xD2293C", Slot = "6")]
		public override string GetCustomData()
		{
			return null;
		}

		[Token(Token = "0x60012B6")]
		[Address(RVA = "0xD229E0", Offset = "0xD229E0", VA = "0xD229E0", Slot = "5")]
		public override string GetNewInstanceData()
		{
			return null;
		}

		[Token(Token = "0x60012B7")]
		[Address(RVA = "0xD22AA0", Offset = "0xD22AA0", VA = "0xD22AA0", Slot = "7")]
		public override void Deactivate()
		{
		}

		[Token(Token = "0x60012B8")]
		[Address(RVA = "0xD22AC4", Offset = "0xD22AC4", VA = "0xD22AC4", Slot = "8")]
		public override bool IsAttached()
		{
			return default(bool);
		}

		[Token(Token = "0x60012B9")]
		[Address(RVA = "0xD22B64", Offset = "0xD22B64", VA = "0xD22B64")]
		public OnlineInteractableMagazine()
		{
		}
	}
	[Token(Token = "0x2000343")]
	public class OnlinePlayer : MonoBehaviourPun, IPunObservable
	{
		[Token(Token = "0x2000344")]
		private class GameScore
		{
			[Token(Token = "0x400118D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int successBullets;

			[Token(Token = "0x400118E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public int usedBullets;

			[Token(Token = "0x400118F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public int score;

			[Token(Token = "0x4001190")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public int friendlyFire;

			[Token(Token = "0x4001191")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public int enemyDeads;

			[Token(Token = "0x4001192")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public int enemyHeadshots;

			[Token(Token = "0x4001193")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public int hitsReceived;

			[Token(Token = "0x4001194")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float lastUpdate;

			[Token(Token = "0x6001313")]
			[Address(RVA = "0xD2C460", Offset = "0xD2C460", VA = "0xD2C460")]
			public bool UpdateScore()
			{
				return default(bool);
			}

			[Token(Token = "0x6001314")]
			[Address(RVA = "0xD2CB34", Offset = "0xD2CB34", VA = "0xD2CB34")]
			private void UpdateValue(int value, ref int var, ref bool updated)
			{
			}

			[Token(Token = "0x6001315")]
			[Address(RVA = "0xD2C9A8", Offset = "0xD2C9A8", VA = "0xD2C9A8")]
			public GameScore()
			{
			}
		}

		[Token(Token = "0x2000346")]
		[CompilerGenerated]
		private sealed class <ShowRemotePlayer>d__48 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001198")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001199")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x170000F0")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600131D")]
				[Address(RVA = "0xD2CCE0", Offset = "0xD2CCE0", VA = "0xD2CCE0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170000F1")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600131F")]
				[Address(RVA = "0xD2CD28", Offset = "0xD2CD28", VA = "0xD2CD28", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600131A")]
			[Address(RVA = "0xD251A8", Offset = "0xD251A8", VA = "0xD251A8")]
			[DebuggerHidden]
			public <ShowRemotePlayer>d__48(int <>1__state)
			{
			}

			[Token(Token = "0x600131B")]
			[Address(RVA = "0xD2CC8C", Offset = "0xD2CC8C", VA = "0xD2CC8C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600131C")]
			[Address(RVA = "0xD2CC90", Offset = "0xD2CC90", VA = "0xD2CC90", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600131E")]
			[Address(RVA = "0xD2CCE8", Offset = "0xD2CCE8", VA = "0xD2CCE8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400116D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject prefab;

		[Token(Token = "0x400116E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public AimTarget aimTarget;

		[Token(Token = "0x400116F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private GameObject m_headVRPart;

		[Token(Token = "0x4001170")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private GameObject m_leftHandVRPartTemp;

		[Token(Token = "0x4001171")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private GameObject m_rightHandVRPartTemp;

		[Token(Token = "0x4001172")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private SVRHandOnline m_leftHand;

		[Token(Token = "0x4001173")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private SVRHandOnline m_rightHand;

		[Token(Token = "0x4001174")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static string PREFIX;

		[Token(Token = "0x4001175")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public bool ready;

		[Token(Token = "0x4001176")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static OnlinePlayer myLocalPlayer;

		[Token(Token = "0x4001177")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public string localId;

		[Token(Token = "0x4001178")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static List<OnlinePlayer> players;

		[Token(Token = "0x4001179")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static bool localPlayerPending;

		[Token(Token = "0x400117A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public TextMeshPro nickName;

		[Token(Token = "0x400117B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public TextMeshPro lifes;

		[Token(Token = "0x400117C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public Renderer heart;

		[Token(Token = "0x400117D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public Transform HeadMesh;

		[Token(Token = "0x400117E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public Transform BodyMesh;

		[Token(Token = "0x400117F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public Transform LeftHandMesh;

		[Token(Token = "0x4001180")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public Transform RightHandMesh;

		[Token(Token = "0x4001181")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private string currentSkinWhenDead;

		[Token(Token = "0x4001182")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private Transform pistolPosition;

		[Token(Token = "0x4001183")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private float deadTime;

		[Token(Token = "0x4001184")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public string bodySkin;

		[Token(Token = "0x4001185")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public string weaponSkin;

		[Token(Token = "0x4001186")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public string platform;

		[Token(Token = "0x4001187")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public static string ONLINEPREFIX;

		[Token(Token = "0x4001188")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private bool VoiceChatEnabled;

		[Token(Token = "0x4001189")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static bool VoiceChat;

		[Token(Token = "0x400118A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD1")]
		public bool userAccepted;

		[Token(Token = "0x400118B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private long playerId;

		[Token(Token = "0x400118C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private GameScore currentScore;

		[Token(Token = "0x170000EF")]
		public bool isAlive
		{
			[Token(Token = "0x60012BC")]
			[Address(RVA = "0xD15F28", Offset = "0xD15F28", VA = "0xD15F28")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60012BD")]
			[Address(RVA = "0xD22E1C", Offset = "0xD22E1C", VA = "0xD22E1C")]
			set
			{
			}
		}

		[Token(Token = "0x60012BA")]
		[Address(RVA = "0xD22B74", Offset = "0xD22B74", VA = "0xD22B74")]
		public static void SetVoiceChat(bool bValue)
		{
		}

		[Token(Token = "0x60012BB")]
		[Address(RVA = "0xD22DC4", Offset = "0xD22DC4", VA = "0xD22DC4")]
		public static bool IsVoiceChatEnabled()
		{
			return default(bool);
		}

		[Token(Token = "0x60012BE")]
		[Address(RVA = "0xD22E3C", Offset = "0xD22E3C", VA = "0xD22E3C")]
		private void Awake()
		{
		}

		[Token(Token = "0x60012BF")]
		[Address(RVA = "0xD22E88", Offset = "0xD22E88", VA = "0xD22E88")]
		private void Start()
		{
		}

		[Token(Token = "0x60012C0")]
		[Address(RVA = "0xD22EFC", Offset = "0xD22EFC", VA = "0xD22EFC")]
		private void initOnlinePlayer()
		{
		}

		[Token(Token = "0x60012C1")]
		[Address(RVA = "0xD23C80", Offset = "0xD23C80", VA = "0xD23C80")]
		private void Update()
		{
		}

		[Token(Token = "0x60012C2")]
		[Address(RVA = "0xD23F88", Offset = "0xD23F88", VA = "0xD23F88")]
		private void updateNickName()
		{
		}

		[Token(Token = "0x60012C3")]
		[Address(RVA = "0xD24038", Offset = "0xD24038", VA = "0xD24038")]
		private void updateLifes()
		{
		}

		[Token(Token = "0x60012C4")]
		[Address(RVA = "0xD23D74", Offset = "0xD23D74", VA = "0xD23D74")]
		private void syncPlayerId()
		{
		}

		[Token(Token = "0x60012C5")]
		[Address(RVA = "0xD24318", Offset = "0xD24318", VA = "0xD24318")]
		public long GetPlayerId()
		{
			return default(long);
		}

		[Token(Token = "0x60012C6")]
		[Address(RVA = "0xD24160", Offset = "0xD24160", VA = "0xD24160")]
		private void updateVoiceChat()
		{
		}

		[Token(Token = "0x60012C7")]
		[Address(RVA = "0xD1BC6C", Offset = "0xD1BC6C", VA = "0xD1BC6C")]
		public static void cleanPlayers(bool bCleanLocal = true)
		{
		}

		[Token(Token = "0x60012C8")]
		[Address(RVA = "0xD23378", Offset = "0xD23378", VA = "0xD23378")]
		private void initializeParts()
		{
		}

		[Token(Token = "0x60012C9")]
		[Address(RVA = "0xD1552C", Offset = "0xD1552C", VA = "0xD1552C")]
		public static List<AimTarget> getRemoteTargets([Optional] List<AimTarget> targets, bool bOrdered = false)
		{
			return null;
		}

		[Token(Token = "0x60012CA")]
		[Address(RVA = "0xD25148", Offset = "0xD25148", VA = "0xD25148")]
		[IteratorStateMachine(typeof(<ShowRemotePlayer>d__48))]
		private IEnumerator ShowRemotePlayer()
		{
			return null;
		}

		[Token(Token = "0x60012CB")]
		[Address(RVA = "0xD251D0", Offset = "0xD251D0", VA = "0xD251D0")]
		public void disableOnlinePlayer()
		{
		}

		[Token(Token = "0x60012CC")]
		[Address(RVA = "0xD252D4", Offset = "0xD252D4", VA = "0xD252D4", Slot = "4")]
		private void Photon.Pun.IPunObservable.OnPhotonSerializeView(PhotonStream stream, PhotonMessageInfo info)
		{
		}

		[Token(Token = "0x60012CD")]
		[Address(RVA = "0xD2449C", Offset = "0xD2449C", VA = "0xD2449C")]
		private void initializeVRParts()
		{
		}

		[Token(Token = "0x60012CE")]
		[Address(RVA = "0xD252D8", Offset = "0xD252D8", VA = "0xD252D8")]
		public void sendUserBlocked()
		{
		}

		[Token(Token = "0x60012CF")]
		[Address(RVA = "0xD25490", Offset = "0xD25490", VA = "0xD25490")]
		[PunRPC]
		public void UserBlocked()
		{
		}

		[Token(Token = "0x60012D0")]
		[Address(RVA = "0xD24FDC", Offset = "0xD24FDC", VA = "0xD24FDC")]
		public void sendInteractablesSync(List<InteractableSyncData> list, OnlinePlayer player)
		{
		}

		[Token(Token = "0x60012D1")]
		[Address(RVA = "0xD254F0", Offset = "0xD254F0", VA = "0xD254F0")]
		[PunRPC]
		public void InteractablesSync(ListInteractableSyncData list)
		{
		}

		[Token(Token = "0x60012D2")]
		[Address(RVA = "0xD255A8", Offset = "0xD255A8", VA = "0xD255A8")]
		public void sendPlayerHealed(int iLifes)
		{
		}

		[Token(Token = "0x60012D3")]
		[Address(RVA = "0xD256D0", Offset = "0xD256D0", VA = "0xD256D0")]
		public void sendPlayerHealedOthers(int iLifes)
		{
		}

		[Token(Token = "0x60012D4")]
		[Address(RVA = "0xD257E8", Offset = "0xD257E8", VA = "0xD257E8")]
		[PunRPC]
		public void PlayerHealed(int iLifes)
		{
		}

		[Token(Token = "0x60012D5")]
		[Address(RVA = "0xD25D28", Offset = "0xD25D28", VA = "0xD25D28")]
		public void sendReactivateLocation()
		{
		}

		[Token(Token = "0x60012D6")]
		[Address(RVA = "0xD25E34", Offset = "0xD25E34", VA = "0xD25E34")]
		[PunRPC]
		public void ReactivateLocation()
		{
		}

		[Token(Token = "0x60012D7")]
		[Address(RVA = "0xD25ED8", Offset = "0xD25ED8", VA = "0xD25ED8")]
		public static OnlinePlayer getDeadPlayer()
		{
			return null;
		}

		[Token(Token = "0x60012D8")]
		[Address(RVA = "0xD260D8", Offset = "0xD260D8", VA = "0xD260D8")]
		public static OnlinePlayer GetOtherPlayer()
		{
			return null;
		}

		[Token(Token = "0x60012D9")]
		[Address(RVA = "0xD23AA4", Offset = "0xD23AA4", VA = "0xD23AA4")]
		private void enableRemoteParts(bool enable)
		{
		}

		[Token(Token = "0x60012DA")]
		[Address(RVA = "0xD262B4", Offset = "0xD262B4", VA = "0xD262B4")]
		public void setReady()
		{
		}

		[Token(Token = "0x60012DB")]
		[Address(RVA = "0xD26414", Offset = "0xD26414", VA = "0xD26414")]
		[PunRPC]
		private void SetReadyRPC()
		{
		}

		[Token(Token = "0x60012DC")]
		[Address(RVA = "0xD264C4", Offset = "0xD264C4", VA = "0xD264C4")]
		public void sendPlayerDead()
		{
		}

		[Token(Token = "0x60012DD")]
		[Address(RVA = "0xD26664", Offset = "0xD26664", VA = "0xD26664")]
		private void activateDeadBody()
		{
		}

		[Token(Token = "0x60012DE")]
		[Address(RVA = "0xD26988", Offset = "0xD26988", VA = "0xD26988")]
		private void setDeadHand(SVRHand hand)
		{
		}

		[Token(Token = "0x60012DF")]
		[Address(RVA = "0xD259AC", Offset = "0xD259AC", VA = "0xD259AC")]
		private void setAliveHand(SVRHand hand)
		{
		}

		[Token(Token = "0x60012E0")]
		[Address(RVA = "0xD25A98", Offset = "0xD25A98", VA = "0xD25A98")]
		private void deactivateDeadBody()
		{
		}

		[Token(Token = "0x60012E1")]
		[Address(RVA = "0xD26BD0", Offset = "0xD26BD0", VA = "0xD26BD0")]
		[PunRPC]
		private void PlayerDead()
		{
		}

		[Token(Token = "0x60012E2")]
		[Address(RVA = "0xD26C88", Offset = "0xD26C88", VA = "0xD26C88")]
		private WeaponModel getWeaponInCartridge()
		{
			return default(WeaponModel);
		}

		[Token(Token = "0x60012E3")]
		[Address(RVA = "0xD26D84", Offset = "0xD26D84", VA = "0xD26D84")]
		public void sendBeginInteraction(WeaponModel model, bool isRightHand, string strMagazineName, string strInteractableBonus)
		{
		}

		[Token(Token = "0x60012E4")]
		[Address(RVA = "0xD27340", Offset = "0xD27340", VA = "0xD27340")]
		public void sendBeginInteraction(SVRInteractable interactable, bool isRightHand, bool otherHandParent = false)
		{
		}

		[Token(Token = "0x60012E5")]
		[Address(RVA = "0xD275BC", Offset = "0xD275BC", VA = "0xD275BC")]
		public void sendBeginInteractionPoolManager(SVRInteractable interactable, string strPoolPath, string strPoolName, bool isRightHand)
		{
		}

		[Token(Token = "0x60012E6")]
		[Address(RVA = "0xD12B78", Offset = "0xD12B78", VA = "0xD12B78")]
		public void CacheOnlineInteractableInstance(SVRInteractable interactable, [Optional] string strName)
		{
		}

		[Token(Token = "0x60012E7")]
		[Address(RVA = "0xD278BC", Offset = "0xD278BC", VA = "0xD278BC")]
		public bool HasOnlineInteractableInstance(SVRInteractable interactable)
		{
			return default(bool);
		}

		[Token(Token = "0x60012E8")]
		[Address(RVA = "0xD27940", Offset = "0xD27940", VA = "0xD27940")]
		[PunRPC]
		public void BeginInteraction(WeaponModel model, bool isRightHand, WeaponModel modelInCartridge, string strMagazineName, string strInteractableBonus)
		{
		}

		[Token(Token = "0x60012E9")]
		[Address(RVA = "0xD280EC", Offset = "0xD280EC", VA = "0xD280EC")]
		private void createAndLoadMagazine(Weapon weapon, string strMagazineName)
		{
		}

		[Token(Token = "0x60012EA")]
		[Address(RVA = "0xD286A4", Offset = "0xD286A4", VA = "0xD286A4")]
		[PunRPC]
		public void BeginInteraction(string strInteractableName, bool isRightHand, bool otherHandParent)
		{
		}

		[Token(Token = "0x60012EB")]
		[Address(RVA = "0xD28938", Offset = "0xD28938", VA = "0xD28938")]
		[PunRPC]
		public void BeginInteractionPoolManager(string strInteractableName, string strPoolPath, string strPoolName, bool isRightHand, string strCustomData)
		{
		}

		[Token(Token = "0x60012EC")]
		[Address(RVA = "0xD28418", Offset = "0xD28418", VA = "0xD28418")]
		public void addPistolToCartridge(WeaponModel model)
		{
		}

		[Token(Token = "0x60012ED")]
		[Address(RVA = "0xD28FCC", Offset = "0xD28FCC", VA = "0xD28FCC")]
		private void removeAllPistolsInCartridge()
		{
		}

		[Token(Token = "0x60012EE")]
		[Address(RVA = "0xD2907C", Offset = "0xD2907C", VA = "0xD2907C")]
		public void sendEndInteraction(SVRHand hand, SVRInteractable interactable)
		{
		}

		[Token(Token = "0x60012EF")]
		[Address(RVA = "0xD29434", Offset = "0xD29434", VA = "0xD29434")]
		[PunRPC]
		public void EndInteraction(Vector3 position, Quaternion rotation, Vector3 velocity, Vector3 angularVelocity, bool isRightHand, WeaponModel weaponInCartridge)
		{
		}

		[Token(Token = "0x60012F0")]
		[Address(RVA = "0xD29744", Offset = "0xD29744", VA = "0xD29744")]
		public void sendMakeGesture(SVRHand hand, string strPose)
		{
		}

		[Token(Token = "0x60012F1")]
		[Address(RVA = "0xD29934", Offset = "0xD29934", VA = "0xD29934")]
		[PunRPC]
		public void MakeGesture(bool isRightHand, string strPose)
		{
		}

		[Token(Token = "0x60012F2")]
		[Address(RVA = "0xD29A04", Offset = "0xD29A04", VA = "0xD29A04")]
		public void sendResetGesture(SVRHand hand, string strPose)
		{
		}

		[Token(Token = "0x60012F3")]
		[Address(RVA = "0xD29BD8", Offset = "0xD29BD8", VA = "0xD29BD8")]
		[PunRPC]
		public void ResetGesture(bool isRightHand, string strPose)
		{
		}

		[Token(Token = "0x60012F4")]
		[Address(RVA = "0xD26B28", Offset = "0xD26B28", VA = "0xD26B28")]
		[PunRPC]
		public void ResetGesture(bool isRightHand)
		{
		}

		[Token(Token = "0x60012F5")]
		[Address(RVA = "0xD29C88", Offset = "0xD29C88", VA = "0xD29C88")]
		private void updateRemoteInteractions()
		{
		}

		[Token(Token = "0x60012F6")]
		[Address(RVA = "0xD29DFC", Offset = "0xD29DFC", VA = "0xD29DFC")]
		private void updateRemoteSkins()
		{
		}

		[Token(Token = "0x60012F7")]
		[Address(RVA = "0xD2A120", Offset = "0xD2A120", VA = "0xD2A120")]
		public void UpdateSkins()
		{
		}

		[Token(Token = "0x60012F8")]
		[Address(RVA = "0xD29EA0", Offset = "0xD29EA0", VA = "0xD29EA0")]
		public void sendUpdateWeaponSkin(string weaponSkin)
		{
		}

		[Token(Token = "0x60012F9")]
		[Address(RVA = "0xD2A154", Offset = "0xD2A154", VA = "0xD2A154")]
		[PunRPC]
		public void UpdateWeaponSkin(string skinName)
		{
		}

		[Token(Token = "0x60012FA")]
		[Address(RVA = "0xD29FE0", Offset = "0xD29FE0", VA = "0xD29FE0")]
		public void sendUpdateBodySkin(string skinName)
		{
		}

		[Token(Token = "0x60012FB")]
		[Address(RVA = "0xD2A2E0", Offset = "0xD2A2E0", VA = "0xD2A2E0")]
		[PunRPC]
		public void UpdateBodySkin(string skinName)
		{
		}

		[Token(Token = "0x60012FC")]
		[Address(RVA = "0xD2A574", Offset = "0xD2A574", VA = "0xD2A574")]
		public void sendMountMagazine(SVRMagazine mag, bool bRightHand)
		{
		}

		[Token(Token = "0x60012FD")]
		[Address(RVA = "0xD2A758", Offset = "0xD2A758", VA = "0xD2A758")]
		[PunRPC]
		public void MountMagazine(string strMagazineName, bool bRightHand)
		{
		}

		[Token(Token = "0x60012FE")]
		[Address(RVA = "0xD2ABB4", Offset = "0xD2ABB4", VA = "0xD2ABB4")]
		public void sendDropMagazine(SVRMagazine mag, bool bRightHand)
		{
		}

		[Token(Token = "0x60012FF")]
		[Address(RVA = "0xD2AEF0", Offset = "0xD2AEF0", VA = "0xD2AEF0")]
		[PunRPC]
		public void DropMagazine(string strMagazineName, Vector3 position, Quaternion rotation, int bullets, bool bRightHand)
		{
		}

		[Token(Token = "0x6001300")]
		[Address(RVA = "0xD2B288", Offset = "0xD2B288", VA = "0xD2B288")]
		public SVRHandOnline GetRightHand()
		{
			return null;
		}

		[Token(Token = "0x6001301")]
		[Address(RVA = "0xD2B3D0", Offset = "0xD2B3D0", VA = "0xD2B3D0")]
		public SVRHandOnline GetLeftHand()
		{
			return null;
		}

		[Token(Token = "0x6001302")]
		[Address(RVA = "0xD280E0", Offset = "0xD280E0", VA = "0xD280E0")]
		public SVRHand GetHand(bool isRightHand)
		{
			return null;
		}

		[Token(Token = "0x6001303")]
		[Address(RVA = "0xD2B33C", Offset = "0xD2B33C", VA = "0xD2B33C")]
		private SVRHandOnline initializeHand(string str)
		{
			return null;
		}

		[Token(Token = "0x6001304")]
		[Address(RVA = "0xD2B484", Offset = "0xD2B484", VA = "0xD2B484")]
		public static bool allPlayersReady()
		{
			return default(bool);
		}

		[Token(Token = "0x6001305")]
		[Address(RVA = "0xD2B6FC", Offset = "0xD2B6FC", VA = "0xD2B6FC")]
		public static void resetPlayersReady()
		{
		}

		[Token(Token = "0x6001306")]
		[Address(RVA = "0xD2B868", Offset = "0xD2B868", VA = "0xD2B868")]
		public static bool atLeastOnePlayerAlive()
		{
			return default(bool);
		}

		[Token(Token = "0x6001307")]
		[Address(RVA = "0xD2BAFC", Offset = "0xD2BAFC", VA = "0xD2BAFC")]
		public static int getPlayersAlive()
		{
			return default(int);
		}

		[Token(Token = "0x6001308")]
		[Address(RVA = "0xD2BC84", Offset = "0xD2BC84", VA = "0xD2BC84")]
		public static OnlinePlayer getPlayer(string strName)
		{
			return null;
		}

		[Token(Token = "0x6001309")]
		[Address(RVA = "0xD2BE28", Offset = "0xD2BE28", VA = "0xD2BE28")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x600130A")]
		[Address(RVA = "0xD23978", Offset = "0xD23978", VA = "0xD23978")]
		public static void SetLifes(int iLifes)
		{
		}

		[Token(Token = "0x600130B")]
		[Address(RVA = "0xD22C84", Offset = "0xD22C84", VA = "0xD22C84")]
		private static void EnableVoiceChat(bool bValue)
		{
		}

		[Token(Token = "0x600130C")]
		[Address(RVA = "0xD2C120", Offset = "0xD2C120", VA = "0xD2C120")]
		public void SendGameScore()
		{
		}

		[Token(Token = "0x600130D")]
		[Address(RVA = "0xD2C5F8", Offset = "0xD2C5F8", VA = "0xD2C5F8")]
		[PunRPC]
		public void UpdateGameScore(int successBullets, int usedBullets, int score, int friendlyFire, int enemyDeads, int enemyHeadshots, int hitsReceived)
		{
		}

		[Token(Token = "0x600130E")]
		[Address(RVA = "0xD2C698", Offset = "0xD2C698", VA = "0xD2C698")]
		public void sendPlayerPaused(bool pause)
		{
		}

		[Token(Token = "0x600130F")]
		[Address(RVA = "0xD2C850", Offset = "0xD2C850", VA = "0xD2C850")]
		[PunRPC]
		public void PlayerPaused(bool pause)
		{
		}

		[Token(Token = "0x6001310")]
		[Address(RVA = "0xD2C8FC", Offset = "0xD2C8FC", VA = "0xD2C8FC")]
		public OnlinePlayer()
		{
		}
	}
	[Token(Token = "0x200034A")]
	public class OnlinePlayerPart : MonoBehaviourPun, IPunObservable
	{
		[Token(Token = "0x40011A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject objectViewed;

		[Token(Token = "0x40011A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Vector3 lastPosition;

		[Token(Token = "0x40011AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private Quaternion lastRotation;

		[Token(Token = "0x40011AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private Vector3 newPosition;

		[Token(Token = "0x40011AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Quaternion newRotation;

		[Token(Token = "0x40011AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private OnlinePlayer player;

		[Token(Token = "0x40011AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public float SmoothingDelay;

		[Token(Token = "0x40011AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public bool teleport;

		[Token(Token = "0x6001326")]
		[Address(RVA = "0xD2DDB8", Offset = "0xD2DDB8", VA = "0xD2DDB8")]
		private void Start()
		{
		}

		[Token(Token = "0x6001327")]
		[Address(RVA = "0xD2E3F0", Offset = "0xD2E3F0", VA = "0xD2E3F0")]
		private void Update()
		{
		}

		[Token(Token = "0x6001328")]
		[Address(RVA = "0xD2E680", Offset = "0xD2E680", VA = "0xD2E680")]
		internal static Vector3 GetAngularVelocity(Quaternion previousRotation, Quaternion newRotation)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001329")]
		[Address(RVA = "0xD2E7C4", Offset = "0xD2E7C4", VA = "0xD2E7C4", Slot = "4")]
		private void Photon.Pun.IPunObservable.OnPhotonSerializeView(PhotonStream stream, PhotonMessageInfo info)
		{
		}

		[Token(Token = "0x600132A")]
		[Address(RVA = "0xD2EB48", Offset = "0xD2EB48", VA = "0xD2EB48")]
		public OnlinePlayerPart()
		{
		}
	}
}
namespace SumalabVR
{
	[Token(Token = "0x200034B")]
	public class ButtonMappingData : ScriptableObject
	{
		[Serializable]
		[Token(Token = "0x200034C")]
		public class MappingData
		{
			[Token(Token = "0x40011B1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public SVRButtons svrbutton;

			[Token(Token = "0x40011B2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public SteamVRMapping ButtonMapping_SteamVR;

			[Token(Token = "0x40011B3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public OculusMapping ButtonMapping_Oculus;

			[Token(Token = "0x40011B4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public PSVRMapping ButtonMapping_PSVR_Dualshock;

			[Token(Token = "0x40011B5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public PSVRMapping ButtonMapping_PSVR_Move;

			[Token(Token = "0x40011B6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public PSVRMapping ButtonMapping_PSVR_Aim;

			[Token(Token = "0x40011B7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public QiyuVRMapping ButtonMapping_QiyuVR;

			[Token(Token = "0x40011B8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public YVRMapping ButtonMapping_YVR;

			[Token(Token = "0x600132D")]
			[Address(RVA = "0xD2EBF0", Offset = "0xD2EBF0", VA = "0xD2EBF0")]
			public MappingData()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x200034D")]
		public class OculusMapping
		{
			[Token(Token = "0x40011B9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public List<OVRInput.Button> booleanButtons;

			[Token(Token = "0x40011BA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public List<OVRInput.Touch> touchButtons;

			[Token(Token = "0x40011BB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public List<OVRInput.NearTouch> nearTouchButtons;

			[Token(Token = "0x40011BC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public List<OVRInput.Axis1D> axis1DButtons;

			[Token(Token = "0x40011BD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public List<OVRInput.Axis2D> axis2DButtons;

			[Token(Token = "0x600132E")]
			[Address(RVA = "0xD2EE70", Offset = "0xD2EE70", VA = "0xD2EE70")]
			public OculusMapping()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x200034E")]
		public class SteamVRMapping
		{
			[Token(Token = "0x40011BE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public List<string> booleanActions;

			[Token(Token = "0x40011BF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public List<string> singleActions;

			[Token(Token = "0x40011C0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public List<string> vector2Actions;

			[Token(Token = "0x600132F")]
			[Address(RVA = "0xD2ED90", Offset = "0xD2ED90", VA = "0xD2ED90")]
			public SteamVRMapping()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x200034F")]
		public class PSVRMapping
		{
			[Token(Token = "0x40011C1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public List<PSInputName> buttons;

			[Token(Token = "0x6001330")]
			[Address(RVA = "0xD2F038", Offset = "0xD2F038", VA = "0xD2F038")]
			public PSVRMapping()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000350")]
		public class QiyuVRMapping
		{
			[Token(Token = "0x40011C2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public List<string> buttons;

			[Token(Token = "0x6001331")]
			[Address(RVA = "0xD2F0C0", Offset = "0xD2F0C0", VA = "0xD2F0C0")]
			public QiyuVRMapping()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000351")]
		public class YVRMapping
		{
			[Token(Token = "0x6001332")]
			[Address(RVA = "0xD2F0C8", Offset = "0xD2F0C8", VA = "0xD2F0C8")]
			public YVRMapping()
			{
			}
		}

		[Token(Token = "0x40011B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<MappingData> mappingData;

		[Token(Token = "0x600132C")]
		[Address(RVA = "0xD2EB68", Offset = "0xD2EB68", VA = "0xD2EB68")]
		public ButtonMappingData()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000352")]
	public class HandPose
	{
		[Serializable]
		[Token(Token = "0x2000353")]
		public class AdditiveHandPose
		{
			[Token(Token = "0x40011CA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string poseName;

			[Token(Token = "0x40011CB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public SVRHandPose additivePose;

			[Token(Token = "0x40011CC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SVRButtons button;

			[Token(Token = "0x40011CD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public bool initialised;

			[Token(Token = "0x40011CE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float touchPercent;

			[Token(Token = "0x40011CF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public bool index;

			[Token(Token = "0x40011D0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2D")]
			public bool middle;

			[Token(Token = "0x40011D1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2E")]
			public bool pinky;

			[Token(Token = "0x40011D2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2F")]
			public bool ring;

			[Token(Token = "0x40011D3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public bool thumb;

			[Token(Token = "0x40011D4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
			public bool wrist;

			[Token(Token = "0x40011D5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private List<Bone> bones;

			[Token(Token = "0x40011D6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private SVRHand hand;

			[Token(Token = "0x40011D7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private SVRHandPose mainPose;

			[Token(Token = "0x40011D8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			private SVRButtonInputs inputButton;

			[Token(Token = "0x600133B")]
			[Address(RVA = "0xD2F2D8", Offset = "0xD2F2D8", VA = "0xD2F2D8")]
			public void Initialise(SVRHandPose mainPose)
			{
			}

			[Token(Token = "0x600133C")]
			[Address(RVA = "0xD2F2FC", Offset = "0xD2F2FC", VA = "0xD2F2FC")]
			public void BeginPose(SVRHand hand)
			{
			}

			[Token(Token = "0x600133D")]
			[Address(RVA = "0xD2F7B0", Offset = "0xD2F7B0", VA = "0xD2F7B0")]
			public bool UpdateAdditivePose(float value = 0f)
			{
				return default(bool);
			}

			[Token(Token = "0x600133E")]
			[Address(RVA = "0xD2FEE8", Offset = "0xD2FEE8", VA = "0xD2FEE8")]
			private void PopulateBones(SVRRenderModel.Bones bones, SVRHandPose mainPose)
			{
			}

			[Token(Token = "0x600133F")]
			[Address(RVA = "0xD30210", Offset = "0xD30210", VA = "0xD30210")]
			private void PopulateFinger(Transform finger, SVRHandPose.FingerData mainFingerData, SVRHandPose.FingerData additiveFingerData)
			{
			}

			[Token(Token = "0x6001340")]
			[Address(RVA = "0xD304F0", Offset = "0xD304F0", VA = "0xD304F0")]
			public AdditiveHandPose()
			{
			}
		}

		[Token(Token = "0x2000354")]
		public class Bone
		{
			[Token(Token = "0x40011D9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Transform boneTransform;

			[Token(Token = "0x40011DA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Vector3 startPosition;

			[Token(Token = "0x40011DB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public Vector3 endPosition;

			[Token(Token = "0x40011DC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Quaternion startRotation;

			[Token(Token = "0x40011DD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public Quaternion endRotation;

			[Token(Token = "0x6001341")]
			[Address(RVA = "0xD2F8C0", Offset = "0xD2F8C0", VA = "0xD2F8C0")]
			public void Lerp(float perc, bool smoothValue)
			{
			}

			[Token(Token = "0x6001342")]
			[Address(RVA = "0xD2FDCC", Offset = "0xD2FDCC", VA = "0xD2FDCC")]
			public Bone()
			{
			}
		}

		[Token(Token = "0x40011C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool enable;

		[Token(Token = "0x40011C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public SVRHandPose mainPose;

		[Token(Token = "0x40011C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<AdditiveHandPose> additivePoses;

		[Token(Token = "0x40011C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private List<Bone> bones;

		[Token(Token = "0x40011C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool mainPoseCompleted;

		[Token(Token = "0x40011C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
		private bool allowAdditivePoses;

		[Token(Token = "0x40011C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private List<AdditiveHandPose> forcedAdditiveHandPose;

		[Token(Token = "0x6001333")]
		[Address(RVA = "0xD2F0D0", Offset = "0xD2F0D0", VA = "0xD2F0D0")]
		public void BeginPose(SVRHand hand, bool allowAdditivePoses = true)
		{
		}

		[Token(Token = "0x6001334")]
		[Address(RVA = "0xD2F390", Offset = "0xD2F390", VA = "0xD2F390")]
		public void ForceAdditivePose(string strAdditivePose)
		{
		}

		[Token(Token = "0x6001335")]
		[Address(RVA = "0xD2F4DC", Offset = "0xD2F4DC", VA = "0xD2F4DC")]
		public void ResetAdditivePose(string strAdditivePose)
		{
		}

		[Token(Token = "0x6001336")]
		[Address(RVA = "0xD2F5D0", Offset = "0xD2F5D0", VA = "0xD2F5D0")]
		public void ResetAdditivePose()
		{
		}

		[Token(Token = "0x6001337")]
		[Address(RVA = "0xD2F640", Offset = "0xD2F640", VA = "0xD2F640")]
		public void UpdatePose(float perc)
		{
		}

		[Token(Token = "0x6001338")]
		[Address(RVA = "0xD2F228", Offset = "0xD2F228", VA = "0xD2F228")]
		private void PopulateBones(SVRRenderModel.Bones bones)
		{
		}

		[Token(Token = "0x6001339")]
		[Address(RVA = "0xD2FBB8", Offset = "0xD2FBB8", VA = "0xD2FBB8")]
		private void PopulateFinger(Transform finger, SVRHandPose.FingerData fingerData)
		{
		}

		[Token(Token = "0x600133A")]
		[Address(RVA = "0xD2FDD4", Offset = "0xD2FDD4", VA = "0xD2FDD4")]
		public HandPose()
		{
		}
	}
	[Token(Token = "0x2000355")]
	public class SVRNoloVRInputDevice : SVRInputDevice
	{
		[Token(Token = "0x170000F2")]
		public override bool IsCurrentlyTracked
		{
			[Token(Token = "0x6001343")]
			[Address(RVA = "0xD30584", Offset = "0xD30584", VA = "0xD30584", Slot = "6")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001344")]
		[Address(RVA = "0xD305C4", Offset = "0xD305C4", VA = "0xD305C4", Slot = "10")]
		public override float GetAxis1D(SVRButtons button)
		{
			return default(float);
		}

		[Token(Token = "0x6001345")]
		[Address(RVA = "0xD30604", Offset = "0xD30604", VA = "0xD30604", Slot = "11")]
		public override Vector2 GetAxis2D(SVRButtons button)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6001346")]
		[Address(RVA = "0xD30644", Offset = "0xD30644", VA = "0xD30644", Slot = "8")]
		public override string GetDeviceName()
		{
			return null;
		}

		[Token(Token = "0x6001347")]
		[Address(RVA = "0xD30684", Offset = "0xD30684", VA = "0xD30684", Slot = "20")]
		public override bool GetNearTouch(SVRButtons button)
		{
			return default(bool);
		}

		[Token(Token = "0x6001348")]
		[Address(RVA = "0xD306C4", Offset = "0xD306C4", VA = "0xD306C4", Slot = "18")]
		public override bool GetNearTouchDown(SVRButtons button)
		{
			return default(bool);
		}

		[Token(Token = "0x6001349")]
		[Address(RVA = "0xD30704", Offset = "0xD30704", VA = "0xD30704", Slot = "19")]
		public override bool GetNearTouchUp(SVRButtons button)
		{
			return default(bool);
		}

		[Token(Token = "0x600134A")]
		[Address(RVA = "0xD30744", Offset = "0xD30744", VA = "0xD30744", Slot = "14")]
		public override bool GetPress(SVRButtons button)
		{
			return default(bool);
		}

		[Token(Token = "0x600134B")]
		[Address(RVA = "0xD30784", Offset = "0xD30784", VA = "0xD30784", Slot = "12")]
		public override bool GetPressDown(SVRButtons button)
		{
			return default(bool);
		}

		[Token(Token = "0x600134C")]
		[Address(RVA = "0xD307C4", Offset = "0xD307C4", VA = "0xD307C4", Slot = "13")]
		public override bool GetPressUp(SVRButtons button)
		{
			return default(bool);
		}

		[Token(Token = "0x600134D")]
		[Address(RVA = "0xD30804", Offset = "0xD30804", VA = "0xD30804", Slot = "17")]
		public override bool GetTouch(SVRButtons button)
		{
			return default(bool);
		}

		[Token(Token = "0x600134E")]
		[Address(RVA = "0xD30844", Offset = "0xD30844", VA = "0xD30844", Slot = "15")]
		public override bool GetTouchDown(SVRButtons button)
		{
			return default(bool);
		}

		[Token(Token = "0x600134F")]
		[Address(RVA = "0xD30884", Offset = "0xD30884", VA = "0xD30884", Slot = "16")]
		public override bool GetTouchUp(SVRButtons button)
		{
			return default(bool);
		}

		[Token(Token = "0x6001350")]
		[Address(RVA = "0xD308C4", Offset = "0xD308C4", VA = "0xD308C4", Slot = "7")]
		public override bool ReadyToInitialize()
		{
			return default(bool);
		}

		[Token(Token = "0x6001351")]
		[Address(RVA = "0xD30904", Offset = "0xD30904", VA = "0xD30904", Slot = "5")]
		public override void SetButtonMapping(ButtonMappingData buttonMapping)
		{
		}

		[Token(Token = "0x6001352")]
		[Address(RVA = "0xD30944", Offset = "0xD30944", VA = "0xD30944", Slot = "9")]
		public override void TriggerHapticPulse(float durationSec = 0.5f, float strength = 0.5f)
		{
		}

		[Token(Token = "0x6001353")]
		[Address(RVA = "0xD30984", Offset = "0xD30984", VA = "0xD30984")]
		public SVRNoloVRInputDevice()
		{
		}
	}
	[Token(Token = "0x2000356")]
	public class SVRNoloVRIntegration : SVRIntegration
	{
		[Token(Token = "0x6001354")]
		[Address(RVA = "0xD30994", Offset = "0xD30994", VA = "0xD30994", Slot = "5")]
		public override Vector3 GetPlayspaceBounds()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001355")]
		[Address(RVA = "0xD309D8", Offset = "0xD309D8", VA = "0xD309D8", Slot = "4")]
		public override void Initialize(SVRPlayer player)
		{
		}

		[Token(Token = "0x6001356")]
		[Address(RVA = "0xD309DC", Offset = "0xD309DC", VA = "0xD309DC", Slot = "6")]
		public override bool IsHmdPresent()
		{
			return default(bool);
		}

		[Token(Token = "0x6001357")]
		[Address(RVA = "0xD309E4", Offset = "0xD309E4", VA = "0xD309E4", Slot = "7")]
		public override HMDType GetHMDType()
		{
			return default(HMDType);
		}

		[Token(Token = "0x6001358")]
		[Address(RVA = "0xD309EC", Offset = "0xD309EC", VA = "0xD309EC")]
		public SVRNoloVRIntegration()
		{
		}
	}
	[Token(Token = "0x2000357")]
	public class SVROculusInputDevice : SVRInputDevice
	{
		[Token(Token = "0x2000358")]
		[CompilerGenerated]
		private sealed class <DoHapticPulse>d__26 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40011E5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40011E6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40011E7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float strength;

			[Token(Token = "0x40011E8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public SVROculusInputDevice <>4__this;

			[Token(Token = "0x40011E9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public float durationSec;

			[Token(Token = "0x170000F4")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001374")]
				[Address(RVA = "0xD3234C", Offset = "0xD3234C", VA = "0xD3234C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170000F5")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001376")]
				[Address(RVA = "0xD32394", Offset = "0xD32394", VA = "0xD32394", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001371")]
			[Address(RVA = "0xD31E04", Offset = "0xD31E04", VA = "0xD31E04")]
			[DebuggerHidden]
			public <DoHapticPulse>d__26(int <>1__state)
			{
			}

			[Token(Token = "0x6001372")]
			[Address(RVA = "0xD32218", Offset = "0xD32218", VA = "0xD32218", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001373")]
			[Address(RVA = "0xD3221C", Offset = "0xD3221C", VA = "0xD3221C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001375")]
			[Address(RVA = "0xD32354", Offset = "0xD32354", VA = "0xD32354", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40011DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private OVRInput.Controller Controller;

		[Token(Token = "0x40011DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Dictionary<SVRButtons, OVRInput.Button[]> ButtonMapping;

		[Token(Token = "0x40011E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Dictionary<SVRButtons, OVRInput.Touch[]> TouchMapping;

		[Token(Token = "0x40011E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Dictionary<SVRButtons, OVRInput.NearTouch[]> NearTouchMapping;

		[Token(Token = "0x40011E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Dictionary<SVRButtons, OVRInput.Axis1D[]> TriggerMapping;

		[Token(Token = "0x40011E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Dictionary<SVRButtons, OVRInput.Axis2D[]> StickMapping;

		[Token(Token = "0x40011E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Coroutine hapticCoroutine;

		[Token(Token = "0x170000F3")]
		public override bool IsCurrentlyTracked
		{
			[Token(Token = "0x600136D")]
			[Address(RVA = "0xD31E2C", Offset = "0xD31E2C", VA = "0xD31E2C", Slot = "6")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001359")]
		[Address(RVA = "0xD30A0C", Offset = "0xD30A0C", VA = "0xD30A0C", Slot = "4")]
		public override void Initialize(SVRHand hand, ButtonMappingData buttonMapping)
		{
		}

		[Token(Token = "0x600135A")]
		[Address(RVA = "0xD30A68", Offset = "0xD30A68", VA = "0xD30A68", Slot = "5")]
		public override void SetButtonMapping(ButtonMappingData buttonMapping)
		{
		}

		[Token(Token = "0x600135B")]
		[Address(RVA = "0xD30F8C", Offset = "0xD30F8C", VA = "0xD30F8C")]
		private OVRInput.Button[] GetButtonMap(SVRButtons button)
		{
			return null;
		}

		[Token(Token = "0x600135C")]
		[Address(RVA = "0xD31020", Offset = "0xD31020", VA = "0xD31020")]
		private OVRInput.Touch[] GetTouchMap(SVRButtons button)
		{
			return null;
		}

		[Token(Token = "0x600135D")]
		[Address(RVA = "0xD310B4", Offset = "0xD310B4", VA = "0xD310B4")]
		private OVRInput.NearTouch[] GetNearTouchMap(SVRButtons button)
		{
			return null;
		}

		[Token(Token = "0x600135E")]
		[Address(RVA = "0xD31148", Offset = "0xD31148", VA = "0xD31148")]
		private OVRInput.Axis1D[] GetTriggerMap(SVRButtons button)
		{
			return null;
		}

		[Token(Token = "0x600135F")]
		[Address(RVA = "0xD311DC", Offset = "0xD311DC", VA = "0xD311DC")]
		private OVRInput.Axis2D[] GetStickMap(SVRButtons button)
		{
			return null;
		}

		[Token(Token = "0x6001360")]
		[Address(RVA = "0xD31270", Offset = "0xD31270", VA = "0xD31270", Slot = "10")]
		public override float GetAxis1D(SVRButtons button)
		{
			return default(float);
		}

		[Token(Token = "0x6001361")]
		[Address(RVA = "0xD313AC", Offset = "0xD313AC", VA = "0xD313AC", Slot = "11")]
		public override Vector2 GetAxis2D(SVRButtons button)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6001362")]
		[Address(RVA = "0xD315B4", Offset = "0xD315B4", VA = "0xD315B4", Slot = "12")]
		public override bool GetPressDown(SVRButtons button)
		{
			return default(bool);
		}

		[Token(Token = "0x6001363")]
		[Address(RVA = "0xD31688", Offset = "0xD31688", VA = "0xD31688", Slot = "13")]
		public override bool GetPressUp(SVRButtons button)
		{
			return default(bool);
		}

		[Token(Token = "0x6001364")]
		[Address(RVA = "0xD3175C", Offset = "0xD3175C", VA = "0xD3175C", Slot = "14")]
		public override bool GetPress(SVRButtons button)
		{
			return default(bool);
		}

		[Token(Token = "0x6001365")]
		[Address(RVA = "0xD31830", Offset = "0xD31830", VA = "0xD31830", Slot = "15")]
		public override bool GetTouchDown(SVRButtons button)
		{
			return default(bool);
		}

		[Token(Token = "0x6001366")]
		[Address(RVA = "0xD31904", Offset = "0xD31904", VA = "0xD31904", Slot = "16")]
		public override bool GetTouchUp(SVRButtons button)
		{
			return default(bool);
		}

		[Token(Token = "0x6001367")]
		[Address(RVA = "0xD319D8", Offset = "0xD319D8", VA = "0xD319D8", Slot = "17")]
		public override bool GetTouch(SVRButtons button)
		{
			return default(bool);
		}

		[Token(Token = "0x6001368")]
		[Address(RVA = "0xD31AAC", Offset = "0xD31AAC", VA = "0xD31AAC", Slot = "18")]
		public override bool GetNearTouchDown(SVRButtons button)
		{
			return default(bool);
		}

		[Token(Token = "0x6001369")]
		[Address(RVA = "0xD31B80", Offset = "0xD31B80", VA = "0xD31B80", Slot = "19")]
		public override bool GetNearTouchUp(SVRButtons button)
		{
			return default(bool);
		}

		[Token(Token = "0x600136A")]
		[Address(RVA = "0xD31C54", Offset = "0xD31C54", VA = "0xD31C54", Slot = "20")]
		public override bool GetNearTouch(SVRButtons button)
		{
			return default(bool);
		}

		[Token(Token = "0x600136B")]
		[Address(RVA = "0xD31D28", Offset = "0xD31D28", VA = "0xD31D28", Slot = "9")]
		public override void TriggerHapticPulse(float durationSec = 0.5f, float strength = 0.5f)
		{
		}

		[Token(Token = "0x600136C")]
		[Address(RVA = "0xD31D78", Offset = "0xD31D78", VA = "0xD31D78")]
		[IteratorStateMachine(typeof(<DoHapticPulse>d__26))]
		private IEnumerator DoHapticPulse(float durationSec, float strength)
		{
			return null;
		}

		[Token(Token = "0x600136E")]
		[Address(RVA = "0xD31E88", Offset = "0xD31E88", VA = "0xD31E88", Slot = "7")]
		public override bool ReadyToInitialize()
		{
			return default(bool);
		}

		[Token(Token = "0x600136F")]
		[Address(RVA = "0xD31EE4", Offset = "0xD31EE4", VA = "0xD31EE4", Slot = "8")]
		public override string GetDeviceName()
		{
			return null;
		}

		[Token(Token = "0x6001370")]
		[Address(RVA = "0xD31F9C", Offset = "0xD31F9C", VA = "0xD31F9C")]
		public SVROculusInputDevice()
		{
		}
	}
	[Token(Token = "0x2000359")]
	public class SVROculusIntegration : SVRIntegration
	{
		[Token(Token = "0x40011EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private OVRBoundary boundary;

		[Token(Token = "0x40011EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private HMDType hmd;

		[Token(Token = "0x40011EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private OVRDisplay display;

		[Token(Token = "0x40011ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private OVRTracker tracker;

		[Token(Token = "0x40011EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private SumalabInvoke.SumalabInvokeReference invokeHandler;

		[Token(Token = "0x40011EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Vector3 PlayspaceBounds;

		[Token(Token = "0x170000F6")]
		private OVRBoundary Boundary
		{
			[Token(Token = "0x6001377")]
			[Address(RVA = "0xD3239C", Offset = "0xD3239C", VA = "0xD3239C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000F7")]
		private OVRDisplay Display
		{
			[Token(Token = "0x6001378")]
			[Address(RVA = "0xD32414", Offset = "0xD32414", VA = "0xD32414")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000F8")]
		private OVRTracker Tracker
		{
			[Token(Token = "0x6001379")]
			[Address(RVA = "0xD3248C", Offset = "0xD3248C", VA = "0xD3248C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600137A")]
		[Address(RVA = "0xD32504", Offset = "0xD32504", VA = "0xD32504", Slot = "1")]
		~SVROculusIntegration()
		{
		}

		[Token(Token = "0x600137B")]
		[Address(RVA = "0xD32760", Offset = "0xD32760", VA = "0xD32760", Slot = "4")]
		public override void Initialize(SVRPlayer player)
		{
		}

		[Token(Token = "0x600137C")]
		[Address(RVA = "0xD32D58", Offset = "0xD32D58", VA = "0xD32D58")]
		private void Resume()
		{
		}

		[Token(Token = "0x600137D")]
		[Address(RVA = "0xD32F94", Offset = "0xD32F94", VA = "0xD32F94")]
		private void ResumeDelay()
		{
		}

		[Token(Token = "0x600137E")]
		[Address(RVA = "0xD32EA0", Offset = "0xD32EA0", VA = "0xD32EA0")]
		private void Pause()
		{
		}

		[Token(Token = "0x600137F")]
		[Address(RVA = "0xD33398", Offset = "0xD33398", VA = "0xD33398", Slot = "5")]
		public override Vector3 GetPlayspaceBounds()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001380")]
		[Address(RVA = "0xD333EC", Offset = "0xD333EC", VA = "0xD333EC", Slot = "6")]
		public override bool IsHmdPresent()
		{
			return default(bool);
		}

		[Token(Token = "0x6001381")]
		[Address(RVA = "0xD3348C", Offset = "0xD3348C", VA = "0xD3348C", Slot = "7")]
		public override HMDType GetHMDType()
		{
			return default(HMDType);
		}

		[Token(Token = "0x6001382")]
		[Address(RVA = "0xD33494", Offset = "0xD33494", VA = "0xD33494")]
		public SVROculusIntegration()
		{
		}
	}
	[Token(Token = "0x200035A")]
	public class SVRPicoInputDevice : SVRInputDevice
	{
		[Token(Token = "0x170000F9")]
		public override bool IsCurrentlyTracked
		{
			[Token(Token = "0x6001383")]
			[Address(RVA = "0xD334FC", Offset = "0xD334FC", VA = "0xD334FC", Slot = "6")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001384")]
		[Address(RVA = "0xD3353C", Offset = "0xD3353C", VA = "0xD3353C", Slot = "10")]
		public override float GetAxis1D(SVRButtons button)
		{
			return default(float);
		}

		[Token(Token = "0x6001385")]
		[Address(RVA = "0xD3357C", Offset = "0xD3357C", VA = "0xD3357C", Slot = "11")]
		public override Vector2 GetAxis2D(SVRButtons button)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6001386")]
		[Address(RVA = "0xD335BC", Offset = "0xD335BC", VA = "0xD335BC", Slot = "8")]
		public override string GetDeviceName()
		{
			return null;
		}

		[Token(Token = "0x6001387")]
		[Address(RVA = "0xD335FC", Offset = "0xD335FC", VA = "0xD335FC", Slot = "20")]
		public override bool GetNearTouch(SVRButtons button)
		{
			return default(bool);
		}

		[Token(Token = "0x6001388")]
		[Address(RVA = "0xD3363C", Offset = "0xD3363C", VA = "0xD3363C", Slot = "18")]
		public override bool GetNearTouchDown(SVRButtons button)
		{
			return default(bool);
		}

		[Token(Token = "0x6001389")]
		[Address(RVA = "0xD3367C", Offset = "0xD3367C", VA = "0xD3367C", Slot = "19")]
		public override bool GetNearTouchUp(SVRButtons button)
		{
			return default(bool);
		}

		[Token(Token = "0x600138A")]
		[Address(RVA = "0xD336BC", Offset = "0xD336BC", VA = "0xD336BC", Slot = "14")]
		public override bool GetPress(SVRButtons button)
		{
			return default(bool);
		}

		[Token(Token = "0x600138B")]
		[Address(RVA = "0xD336FC", Offset = "0xD336FC", VA = "0xD336FC", Slot = "12")]
		public override bool GetPressDown(SVRButtons button)
		{
			return default(bool);
		}

		[Token(Token = "0x600138C")]
		[Address(RVA = "0xD3373C", Offset = "0xD3373C", VA = "0xD3373C", Slot = "13")]
		public override bool GetPressUp(SVRButtons button)
		{
			return default(bool);
		}

		[Token(Token = "0x600138D")]
		[Address(RVA = "0xD3377C", Offset = "0xD3377C", VA = "0xD3377C", Slot = "17")]
		public override bool GetTouch(SVRButtons button)
		{
			return default(bool);
		}

		[Token(Token = "0x600138E")]
		[Address(RVA = "0xD337BC", Offset = "0xD337BC", VA = "0xD337BC", Slot = "15")]
		public override bool GetTouchDown(SVRButtons button)
		{
			return default(bool);
		}

		[Token(Token = "0x600138F")]
		[Address(RVA = "0xD337FC", Offset = "0xD337FC", VA = "0xD337FC", Slot = "16")]
		public override bool GetTouchUp(SVRButtons button)
		{
			return default(bool);
		}

		[Token(Token = "0x6001390")]
		[Address(RVA = "0xD3383C", Offset = "0xD3383C", VA = "0xD3383C", Slot = "7")]
		public override bool ReadyToInitialize()
		{
			return default(bool);
		}

		[Token(Token = "0x6001391")]
		[Address(RVA = "0xD3387C", Offset = "0xD3387C", VA = "0xD3387C", Slot = "5")]
		public override void SetButtonMapping(ButtonMappingData buttonMapping)
		{
		}

		[Token(Token = "0x6001392")]
		[Address(RVA = "0xD338BC", Offset = "0xD338BC", VA = "0xD338BC", Slot = "9")]
		public override void TriggerHapticPulse(float durationSec = 0.5f, float strength = 0.5f)
		{
		}

		[Token(Token = "0x6001393")]
		[Address(RVA = "0xD338FC", Offset = "0xD338FC", VA = "0xD338FC")]
		public SVRPicoInputDevice()
		{
		}
	}
	[Token(Token = "0x200035B")]
	public class SVRPicoIntegration : SVRIntegration
	{
		[Token(Token = "0x6001394")]
		[Address(RVA = "0xD33904", Offset = "0xD33904", VA = "0xD33904", Slot = "5")]
		public override Vector3 GetPlayspaceBounds()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001395")]
		[Address(RVA = "0xD33948", Offset = "0xD33948", VA = "0xD33948", Slot = "4")]
		public override void Initialize(SVRPlayer player)
		{
		}

		[Token(Token = "0x6001396")]
		[Address(RVA = "0xD3394C", Offset = "0xD3394C", VA = "0xD3394C", Slot = "6")]
		public override bool IsHmdPresent()
		{
			return default(bool);
		}

		[Token(Token = "0x6001397")]
		[Address(RVA = "0xD33954", Offset = "0xD33954", VA = "0xD33954", Slot = "7")]
		public override HMDType GetHMDType()
		{
			return default(HMDType);
		}

		[Token(Token = "0x6001398")]
		[Address(RVA = "0xD3395C", Offset = "0xD3395C", VA = "0xD3395C")]
		public SVRPicoIntegration()
		{
		}
	}
	[Token(Token = "0x200035C")]
	public enum PSInputName
	{
		[Token(Token = "0x40011F1")]
		T,
		[Token(Token = "0x40011F2")]
		Move,
		[Token(Token = "0x40011F3")]
		Start,
		[Token(Token = "0x40011F4")]
		Triangle,
		[Token(Token = "0x40011F5")]
		Circle,
		[Token(Token = "0x40011F6")]
		Cross,
		[Token(Token = "0x40011F7")]
		Square,
		[Token(Token = "0x40011F8")]
		L1,
		[Token(Token = "0x40011F9")]
		L2,
		[Token(Token = "0x40011FA")]
		L3,
		[Token(Token = "0x40011FB")]
		R1,
		[Token(Token = "0x40011FC")]
		R2,
		[Token(Token = "0x40011FD")]
		R3,
		[Token(Token = "0x40011FE")]
		Arrow_Up,
		[Token(Token = "0x40011FF")]
		Arrow_Down,
		[Token(Token = "0x4001200")]
		Arrow_Left,
		[Token(Token = "0x4001201")]
		Arrow_Right,
		[Token(Token = "0x4001202")]
		Left_Stick,
		[Token(Token = "0x4001203")]
		Right_Stick,
		[Token(Token = "0x4001204")]
		Touchpad
	}
	[Token(Token = "0x200035D")]
	public enum PSDevice
	{
		[Token(Token = "0x4001206")]
		Dualshock,
		[Token(Token = "0x4001207")]
		PSMove,
		[Token(Token = "0x4001208")]
		AimController,
		[Token(Token = "0x4001209")]
		None
	}
	[Token(Token = "0x200035E")]
	public class SVRPSVRInputDevice : SVRInputDevice
	{
		[Token(Token = "0x170000FA")]
		public override bool IsCurrentlyTracked
		{
			[Token(Token = "0x6001399")]
			[Address(RVA = "0xD3396C", Offset = "0xD3396C", VA = "0xD3396C", Slot = "6")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x600139A")]
		[Address(RVA = "0xD339E8", Offset = "0xD339E8", VA = "0xD339E8", Slot = "5")]
		public override void SetButtonMapping(ButtonMappingData buttonMapping)
		{
		}

		[Token(Token = "0x600139B")]
		[Address(RVA = "0xD339EC", Offset = "0xD339EC", VA = "0xD339EC", Slot = "10")]
		public override float GetAxis1D(SVRButtons button)
		{
			return default(float);
		}

		[Token(Token = "0x600139C")]
		[Address(RVA = "0xD33A00", Offset = "0xD33A00", VA = "0xD33A00", Slot = "11")]
		public override Vector2 GetAxis2D(SVRButtons button)
		{
			return default(Vector2);
		}

		[Token(Token = "0x600139D")]
		[Address(RVA = "0xD33A44", Offset = "0xD33A44", VA = "0xD33A44", Slot = "8")]
		public override string GetDeviceName()
		{
			return null;
		}

		[Token(Token = "0x600139E")]
		[Address(RVA = "0xD33A88", Offset = "0xD33A88", VA = "0xD33A88", Slot = "20")]
		public override bool GetNearTouch(SVRButtons button)
		{
			return default(bool);
		}

		[Token(Token = "0x600139F")]
		[Address(RVA = "0xD33A9C", Offset = "0xD33A9C", VA = "0xD33A9C", Slot = "18")]
		public override bool GetNearTouchDown(SVRButtons button)
		{
			return default(bool);
		}

		[Token(Token = "0x60013A0")]
		[Address(RVA = "0xD33AB0", Offset = "0xD33AB0", VA = "0xD33AB0", Slot = "19")]
		public override bool GetNearTouchUp(SVRButtons button)
		{
			return default(bool);
		}

		[Token(Token = "0x60013A1")]
		[Address(RVA = "0xD33AC4", Offset = "0xD33AC4", VA = "0xD33AC4", Slot = "14")]
		public override bool GetPress(SVRButtons button)
		{
			return default(bool);
		}

		[Token(Token = "0x60013A2")]
		[Address(RVA = "0xD33AD8", Offset = "0xD33AD8", VA = "0xD33AD8", Slot = "12")]
		public override bool GetPressDown(SVRButtons button)
		{
			return default(bool);
		}

		[Token(Token = "0x60013A3")]
		[Address(RVA = "0xD33AEC", Offset = "0xD33AEC", VA = "0xD33AEC", Slot = "13")]
		public override bool GetPressUp(SVRButtons button)
		{
			return default(bool);
		}

		[Token(Token = "0x60013A4")]
		[Address(RVA = "0xD33B00", Offset = "0xD33B00", VA = "0xD33B00", Slot = "17")]
		public override bool GetTouch(SVRButtons button)
		{
			return default(bool);
		}

		[Token(Token = "0x60013A5")]
		[Address(RVA = "0xD33B14", Offset = "0xD33B14", VA = "0xD33B14", Slot = "15")]
		public override bool GetTouchDown(SVRButtons button)
		{
			return default(bool);
		}

		[Token(Token = "0x60013A6")]
		[Address(RVA = "0xD33B28", Offset = "0xD33B28", VA = "0xD33B28", Slot = "16")]
		public override bool GetTouchUp(SVRButtons button)
		{
			return default(bool);
		}

		[Token(Token = "0x60013A7")]
		[Address(RVA = "0xD33B3C", Offset = "0xD33B3C", VA = "0xD33B3C", Slot = "7")]
		public override bool ReadyToInitialize()
		{
			return default(bool);
		}

		[Token(Token = "0x60013A8")]
		[Address(RVA = "0xD33B50", Offset = "0xD33B50", VA = "0xD33B50", Slot = "9")]
		public override void TriggerHapticPulse(float durationSec = 0.5f, float strength = 0.5f)
		{
		}

		[Token(Token = "0x60013A9")]
		[Address(RVA = "0xD33980", Offset = "0xD33980", VA = "0xD33980")]
		private void PrintNotEnabledError()
		{
		}

		[Token(Token = "0x60013AA")]
		[Address(RVA = "0xD33B54", Offset = "0xD33B54", VA = "0xD33B54")]
		public SVRPSVRInputDevice()
		{
		}
	}
	[Token(Token = "0x200035F")]
	public class SVRPSVRIntegration : SVRIntegration
	{
		[Token(Token = "0x60013AB")]
		[Address(RVA = "0xD33B5C", Offset = "0xD33B5C", VA = "0xD33B5C", Slot = "4")]
		public override void Initialize(SVRPlayer player)
		{
		}

		[Token(Token = "0x60013AC")]
		[Address(RVA = "0xD33B60", Offset = "0xD33B60", VA = "0xD33B60", Slot = "5")]
		public override Vector3 GetPlayspaceBounds()
		{
			return default(Vector3);
		}

		[Token(Token = "0x60013AD")]
		[Address(RVA = "0xD33BA4", Offset = "0xD33BA4", VA = "0xD33BA4", Slot = "6")]
		public override bool IsHmdPresent()
		{
			return default(bool);
		}

		[Token(Token = "0x60013AE")]
		[Address(RVA = "0xD33BAC", Offset = "0xD33BAC", VA = "0xD33BAC", Slot = "7")]
		public override HMDType GetHMDType()
		{
			return default(HMDType);
		}

		[Token(Token = "0x60013AF")]
		[Address(RVA = "0xD33BB4", Offset = "0xD33BB4", VA = "0xD33BB4")]
		public SVRPSVRIntegration()
		{
		}
	}
	[Token(Token = "0x2000360")]
	public class SVRQiyuVRInputDevice : SVRInputDevice
	{
		[Token(Token = "0x170000FB")]
		public override bool IsCurrentlyTracked
		{
			[Token(Token = "0x60013B0")]
			[Address(RVA = "0xD33BC4", Offset = "0xD33BC4", VA = "0xD33BC4", Slot = "6")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60013B1")]
		[Address(RVA = "0xD33C04", Offset = "0xD33C04", VA = "0xD33C04", Slot = "5")]
		public override void SetButtonMapping(ButtonMappingData buttonMapping)
		{
		}

		[Token(Token = "0x60013B2")]
		[Address(RVA = "0xD33C44", Offset = "0xD33C44", VA = "0xD33C44", Slot = "10")]
		public override float GetAxis1D(SVRButtons button)
		{
			return default(float);
		}

		[Token(Token = "0x60013B3")]
		[Address(RVA = "0xD33C84", Offset = "0xD33C84", VA = "0xD33C84", Slot = "11")]
		public override Vector2 GetAxis2D(SVRButtons button)
		{
			return default(Vector2);
		}

		[Token(Token = "0x60013B4")]
		[Address(RVA = "0xD33CC4", Offset = "0xD33CC4", VA = "0xD33CC4", Slot = "8")]
		public override string GetDeviceName()
		{
			return null;
		}

		[Token(Token = "0x60013B5")]
		[Address(RVA = "0xD33D04", Offset = "0xD33D04", VA = "0xD33D04", Slot = "20")]
		public override bool GetNearTouch(SVRButtons button)
		{
			return default(bool);
		}

		[Token(Token = "0x60013B6")]
		[Address(RVA = "0xD33D44", Offset = "0xD33D44", VA = "0xD33D44", Slot = "18")]
		public override bool GetNearTouchDown(SVRButtons button)
		{
			return default(bool);
		}

		[Token(Token = "0x60013B7")]
		[Address(RVA = "0xD33D84", Offset = "0xD33D84", VA = "0xD33D84", Slot = "19")]
		public override bool GetNearTouchUp(SVRButtons button)
		{
			return default(bool);
		}

		[Token(Token = "0x60013B8")]
		[Address(RVA = "0xD33DC4", Offset = "0xD33DC4", VA = "0xD33DC4", Slot = "14")]
		public override bool GetPress(SVRButtons button)
		{
			return default(bool);
		}

		[Token(Token = "0x60013B9")]
		[Address(RVA = "0xD33E04", Offset = "0xD33E04", VA = "0xD33E04", Slot = "12")]
		public override bool GetPressDown(SVRButtons button)
		{
			return default(bool);
		}

		[Token(Token = "0x60013BA")]
		[Address(RVA = "0xD33E44", Offset = "0xD33E44", VA = "0xD33E44", Slot = "13")]
		public override bool GetPressUp(SVRButtons button)
		{
			return default(bool);
		}

		[Token(Token = "0x60013BB")]
		[Address(RVA = "0xD33E84", Offset = "0xD33E84", VA = "0xD33E84", Slot = "17")]
		public override bool GetTouch(SVRButtons button)
		{
			return default(bool);
		}

		[Token(Token = "0x60013BC")]
		[Address(RVA = "0xD33EC4", Offset = "0xD33EC4", VA = "0xD33EC4", Slot = "15")]
		public override bool GetTouchDown(SVRButtons button)
		{
			return default(bool);
		}

		[Token(Token = "0x60013BD")]
		[Address(RVA = "0xD33F04", Offset = "0xD33F04", VA = "0xD33F04", Slot = "16")]
		public override bool GetTouchUp(SVRButtons button)
		{
			return default(bool);
		}

		[Token(Token = "0x60013BE")]
		[Address(RVA = "0xD33F44", Offset = "0xD33F44", VA = "0xD33F44", Slot = "7")]
		public override bool ReadyToInitialize()
		{
			return default(bool);
		}

		[Token(Token = "0x60013BF")]
		[Address(RVA = "0xD33F84", Offset = "0xD33F84", VA = "0xD33F84", Slot = "9")]
		public override void TriggerHapticPulse(float durationSec = 0.5f, float strength = 0.5f)
		{
		}

		[Token(Token = "0x60013C0")]
		[Address(RVA = "0xD33FC4", Offset = "0xD33FC4", VA = "0xD33FC4")]
		public SVRQiyuVRInputDevice()
		{
		}
	}
	[Token(Token = "0x2000361")]
	public class SVRQiyuVRIntegration : SVRIntegration
	{
		[Token(Token = "0x60013C1")]
		[Address(RVA = "0xD33FCC", Offset = "0xD33FCC", VA = "0xD33FCC", Slot = "4")]
		public override void Initialize(SVRPlayer player)
		{
		}

		[Token(Token = "0x60013C2")]
		[Address(RVA = "0xD33FD0", Offset = "0xD33FD0", VA = "0xD33FD0", Slot = "5")]
		public override Vector3 GetPlayspaceBounds()
		{
			return default(Vector3);
		}

		[Token(Token = "0x60013C3")]
		[Address(RVA = "0xD34014", Offset = "0xD34014", VA = "0xD34014", Slot = "6")]
		public override bool IsHmdPresent()
		{
			return default(bool);
		}

		[Token(Token = "0x60013C4")]
		[Address(RVA = "0xD3401C", Offset = "0xD3401C", VA = "0xD3401C", Slot = "7")]
		public override HMDType GetHMDType()
		{
			return default(HMDType);
		}

		[Token(Token = "0x60013C5")]
		[Address(RVA = "0xD34024", Offset = "0xD34024", VA = "0xD34024")]
		public SVRQiyuVRIntegration()
		{
		}
	}
	[Token(Token = "0x2000362")]
	public class SVRSteamVRInputDevice : SVRInputDevice
	{
		[Token(Token = "0x170000FC")]
		public override bool IsCurrentlyTracked
		{
			[Token(Token = "0x60013C6")]
			[Address(RVA = "0xD34034", Offset = "0xD34034", VA = "0xD34034", Slot = "6")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60013C7")]
		[Address(RVA = "0xD340B0", Offset = "0xD340B0", VA = "0xD340B0", Slot = "5")]
		public override void SetButtonMapping(ButtonMappingData buttonMapping)
		{
		}

		[Token(Token = "0x60013C8")]
		[Address(RVA = "0xD340B4", Offset = "0xD340B4", VA = "0xD340B4", Slot = "10")]
		public override float GetAxis1D(SVRButtons button)
		{
			return default(float);
		}

		[Token(Token = "0x60013C9")]
		[Address(RVA = "0xD340C8", Offset = "0xD340C8", VA = "0xD340C8", Slot = "11")]
		public override Vector2 GetAxis2D(SVRButtons button)
		{
			return default(Vector2);
		}

		[Token(Token = "0x60013CA")]
		[Address(RVA = "0xD3410C", Offset = "0xD3410C", VA = "0xD3410C", Slot = "8")]
		public override string GetDeviceName()
		{
			return null;
		}

		[Token(Token = "0x60013CB")]
		[Address(RVA = "0xD34150", Offset = "0xD34150", VA = "0xD34150", Slot = "20")]
		public override bool GetNearTouch(SVRButtons button)
		{
			return default(bool);
		}

		[Token(Token = "0x60013CC")]
		[Address(RVA = "0xD34164", Offset = "0xD34164", VA = "0xD34164", Slot = "18")]
		public override bool GetNearTouchDown(SVRButtons button)
		{
			return default(bool);
		}

		[Token(Token = "0x60013CD")]
		[Address(RVA = "0xD34178", Offset = "0xD34178", VA = "0xD34178", Slot = "19")]
		public override bool GetNearTouchUp(SVRButtons button)
		{
			return default(bool);
		}

		[Token(Token = "0x60013CE")]
		[Address(RVA = "0xD3418C", Offset = "0xD3418C", VA = "0xD3418C", Slot = "14")]
		public override bool GetPress(SVRButtons button)
		{
			return default(bool);
		}

		[Token(Token = "0x60013CF")]
		[Address(RVA = "0xD341A0", Offset = "0xD341A0", VA = "0xD341A0", Slot = "12")]
		public override bool GetPressDown(SVRButtons button)
		{
			return default(bool);
		}

		[Token(Token = "0x60013D0")]
		[Address(RVA = "0xD341B4", Offset = "0xD341B4", VA = "0xD341B4", Slot = "13")]
		public override bool GetPressUp(SVRButtons button)
		{
			return default(bool);
		}

		[Token(Token = "0x60013D1")]
		[Address(RVA = "0xD341C8", Offset = "0xD341C8", VA = "0xD341C8", Slot = "17")]
		public override bool GetTouch(SVRButtons button)
		{
			return default(bool);
		}

		[Token(Token = "0x60013D2")]
		[Address(RVA = "0xD341DC", Offset = "0xD341DC", VA = "0xD341DC", Slot = "15")]
		public override bool GetTouchDown(SVRButtons button)
		{
			return default(bool);
		}

		[Token(Token = "0x60013D3")]
		[Address(RVA = "0xD341F0", Offset = "0xD341F0", VA = "0xD341F0", Slot = "16")]
		public override bool GetTouchUp(SVRButtons button)
		{
			return default(bool);
		}

		[Token(Token = "0x60013D4")]
		[Address(RVA = "0xD34204", Offset = "0xD34204", VA = "0xD34204", Slot = "7")]
		public override bool ReadyToInitialize()
		{
			return default(bool);
		}

		[Token(Token = "0x60013D5")]
		[Address(RVA = "0xD34218", Offset = "0xD34218", VA = "0xD34218", Slot = "9")]
		public override void TriggerHapticPulse(float durationSec = 0.5f, float strength = 0.5f)
		{
		}

		[Token(Token = "0x60013D6")]
		[Address(RVA = "0xD34048", Offset = "0xD34048", VA = "0xD34048")]
		private void PrintNotEnabledError()
		{
		}

		[Token(Token = "0x60013D7")]
		[Address(RVA = "0xD3421C", Offset = "0xD3421C", VA = "0xD3421C")]
		public SVRSteamVRInputDevice()
		{
		}
	}
	[Token(Token = "0x2000363")]
	public class SVRSteamVRIntegration : SVRIntegration
	{
		[Token(Token = "0x60013D8")]
		[Address(RVA = "0xD34224", Offset = "0xD34224", VA = "0xD34224", Slot = "4")]
		public override void Initialize(SVRPlayer player)
		{
		}

		[Token(Token = "0x60013D9")]
		[Address(RVA = "0xD34228", Offset = "0xD34228", VA = "0xD34228", Slot = "5")]
		public override Vector3 GetPlayspaceBounds()
		{
			return default(Vector3);
		}

		[Token(Token = "0x60013DA")]
		[Address(RVA = "0xD3426C", Offset = "0xD3426C", VA = "0xD3426C", Slot = "6")]
		public override bool IsHmdPresent()
		{
			return default(bool);
		}

		[Token(Token = "0x60013DB")]
		[Address(RVA = "0xD34274", Offset = "0xD34274", VA = "0xD34274", Slot = "7")]
		public override HMDType GetHMDType()
		{
			return default(HMDType);
		}

		[Token(Token = "0x60013DC")]
		[Address(RVA = "0xD3427C", Offset = "0xD3427C", VA = "0xD3427C")]
		public SVRSteamVRIntegration()
		{
		}
	}
	[Token(Token = "0x2000364")]
	public class SVRButtonInputs
	{
		[Token(Token = "0x400120A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static bool Enable;

		[Token(Token = "0x400120B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private bool PressDownCached;

		[Token(Token = "0x400120C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		private bool PressDownExpired;

		[Token(Token = "0x400120D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12")]
		private bool PressUpCached;

		[Token(Token = "0x400120E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x13")]
		private bool PressUpExpired;

		[Token(Token = "0x400120F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private bool IsPressedCached;

		[Token(Token = "0x4001210")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x15")]
		private bool IsPressedExpired;

		[Token(Token = "0x4001211")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x16")]
		private bool TouchDownCached;

		[Token(Token = "0x4001212")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x17")]
		private bool TouchDownExpired;

		[Token(Token = "0x4001213")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool TouchUpCached;

		[Token(Token = "0x4001214")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		private bool TouchUpExpired;

		[Token(Token = "0x4001215")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
		private bool IsTouchedCached;

		[Token(Token = "0x4001216")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B")]
		private bool IsTouchedExpired;

		[Token(Token = "0x4001217")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private bool NearTouchDownCached;

		[Token(Token = "0x4001218")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
		private bool NearTouchDownExpired;

		[Token(Token = "0x4001219")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E")]
		private bool NearTouchUpCached;

		[Token(Token = "0x400121A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F")]
		private bool NearTouchUpExpired;

		[Token(Token = "0x400121B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private bool IsNearTouchedCached;

		[Token(Token = "0x400121C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		private bool IsNearTouchedExpired;

		[Token(Token = "0x400121D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private Vector2 AxisCached;

		[Token(Token = "0x400121E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private bool AxisExpired;

		[Token(Token = "0x400121F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float SingleAxisCached;

		[Token(Token = "0x4001220")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private bool SingleAxisExpired;

		[Token(Token = "0x4001221")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private SVRInputDevice InputDevice;

		[Token(Token = "0x4001222")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private SVRButtons button;

		[Token(Token = "0x170000FD")]
		public bool PressDown
		{
			[Token(Token = "0x60013DD")]
			[Address(RVA = "0xD3428C", Offset = "0xD3428C", VA = "0xD3428C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000FE")]
		public bool PressUp
		{
			[Token(Token = "0x60013DE")]
			[Address(RVA = "0xD34334", Offset = "0xD34334", VA = "0xD34334")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000FF")]
		public bool IsPressed
		{
			[Token(Token = "0x60013DF")]
			[Address(RVA = "0xD300B8", Offset = "0xD300B8", VA = "0xD300B8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000100")]
		public bool TouchDown
		{
			[Token(Token = "0x60013E0")]
			[Address(RVA = "0xD343E0", Offset = "0xD343E0", VA = "0xD343E0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000101")]
		public bool TouchUp
		{
			[Token(Token = "0x60013E1")]
			[Address(RVA = "0xD3448C", Offset = "0xD3448C", VA = "0xD3448C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000102")]
		public bool IsTouched
		{
			[Token(Token = "0x60013E2")]
			[Address(RVA = "0xD30164", Offset = "0xD30164", VA = "0xD30164")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000103")]
		public bool NearTouchDown
		{
			[Token(Token = "0x60013E3")]
			[Address(RVA = "0xD34538", Offset = "0xD34538", VA = "0xD34538")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000104")]
		public bool NearTouchUp
		{
			[Token(Token = "0x60013E4")]
			[Address(RVA = "0xD345E4", Offset = "0xD345E4", VA = "0xD345E4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000105")]
		public bool IsNearTouched
		{
			[Token(Token = "0x60013E5")]
			[Address(RVA = "0xD34690", Offset = "0xD34690", VA = "0xD34690")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000106")]
		public Vector2 Axis
		{
			[Token(Token = "0x60013E6")]
			[Address(RVA = "0xD3473C", Offset = "0xD3473C", VA = "0xD3473C")]
			get
			{
				return default(Vector2);
			}
		}

		[Token(Token = "0x17000107")]
		public float SingleAxis
		{
			[Token(Token = "0x60013E7")]
			[Address(RVA = "0xD3001C", Offset = "0xD3001C", VA = "0xD3001C")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x60013E8")]
		[Address(RVA = "0xD34810", Offset = "0xD34810", VA = "0xD34810")]
		public void FrameReset(SVRInputDevice inputDevice, SVRButtons button)
		{
		}

		[Token(Token = "0x60013E9")]
		[Address(RVA = "0xD3486C", Offset = "0xD3486C", VA = "0xD3486C")]
		public SVRButtonInputs()
		{
		}
	}
	[Token(Token = "0x2000365")]
	public enum SVRButtons
	{
		[Token(Token = "0x4001224")]
		None,
		[Token(Token = "0x4001225")]
		Grab,
		[Token(Token = "0x4001226")]
		Trigger,
		[Token(Token = "0x4001227")]
		Move,
		[Token(Token = "0x4001228")]
		Teleport,
		[Token(Token = "0x4001229")]
		ResetOrientation,
		[Token(Token = "0x400122A")]
		Menu,
		[Token(Token = "0x400122B")]
		Reload,
		[Token(Token = "0x400122C")]
		Drop,
		[Token(Token = "0x400122D")]
		Grip,
		[Token(Token = "0x400122E")]
		Thumb,
		[Token(Token = "0x400122F")]
		LeftHanded,
		[Token(Token = "0x4001230")]
		RightHanded
	}
	[Token(Token = "0x2000366")]
	public class SVRButtonsHelper
	{
		[Token(Token = "0x4001231")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static SVRButtons[] array;

		[Token(Token = "0x17000108")]
		public static SVRButtons[] Array
		{
			[Token(Token = "0x60013EB")]
			[Address(RVA = "0xD348C0", Offset = "0xD348C0", VA = "0xD348C0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60013EC")]
		[Address(RVA = "0xD34A24", Offset = "0xD34A24", VA = "0xD34A24")]
		public SVRButtonsHelper()
		{
		}
	}
	[Token(Token = "0x2000367")]
	public struct SVRButtonsComparer : IEqualityComparer<SVRButtons>
	{
		[Token(Token = "0x60013ED")]
		[Address(RVA = "0xD34A2C", Offset = "0xD34A2C", VA = "0xD34A2C", Slot = "4")]
		public bool Equals(SVRButtons x, SVRButtons y)
		{
			return default(bool);
		}

		[Token(Token = "0x60013EE")]
		[Address(RVA = "0xD34A38", Offset = "0xD34A38", VA = "0xD34A38", Slot = "5")]
		public int GetHashCode(SVRButtons obj)
		{
			return default(int);
		}
	}
	[Token(Token = "0x2000368")]
	public delegate void SVRInteractableEvent(SVRInteractable interactable);
	[Token(Token = "0x2000369")]
	public delegate void SVREvent();
	[Token(Token = "0x200036A")]
	public class SVRHand : MonoBehaviour
	{
		[Token(Token = "0x200036B")]
		protected class LerpData
		{
			[Token(Token = "0x4001251")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public bool enabled;

			[Token(Token = "0x4001252")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public Vector3 startPosition;

			[Token(Token = "0x4001253")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Vector3 endPosition;

			[Token(Token = "0x4001254")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public Quaternion startRotation;

			[Token(Token = "0x4001255")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			public Quaternion endRotation;

			[Token(Token = "0x4001256")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			public Transform lerp;

			[Token(Token = "0x4001257")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			public float duration;

			[Token(Token = "0x4001258")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
			public float timeElapsed;

			[Token(Token = "0x4001259")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			private float value0;

			[Token(Token = "0x400125A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
			private float value1;

			[Token(Token = "0x400125B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			private float targetValue0;

			[Token(Token = "0x400125C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
			private float targetValue1;

			[Token(Token = "0x6001427")]
			[Address(RVA = "0xD38880", Offset = "0xD38880", VA = "0xD38880")]
			public void Clear()
			{
			}

			[Token(Token = "0x6001428")]
			[Address(RVA = "0xD38888", Offset = "0xD38888", VA = "0xD38888")]
			public void Init(Transform lerp, Transform target, float duration)
			{
			}

			[Token(Token = "0x6001429")]
			[Address(RVA = "0xD38D34", Offset = "0xD38D34", VA = "0xD38D34")]
			public void Init(Transform lerp, Vector3 targetPosition, Quaternion targetRotation, float duration)
			{
			}

			[Token(Token = "0x600142A")]
			[Address(RVA = "0xD38920", Offset = "0xD38920", VA = "0xD38920")]
			public void Init(float value0, float targetValue0, float value1, float targetValue1, float duration)
			{
			}

			[Token(Token = "0x600142B")]
			[Address(RVA = "0xD375AC", Offset = "0xD375AC", VA = "0xD375AC")]
			public bool LerpTransform()
			{
				return default(bool);
			}

			[Token(Token = "0x600142C")]
			[Address(RVA = "0xD35C1C", Offset = "0xD35C1C", VA = "0xD35C1C")]
			public void LerpValue(out float value0, out float value1)
			{
			}

			[Token(Token = "0x600142D")]
			[Address(RVA = "0xD39F88", Offset = "0xD39F88", VA = "0xD39F88")]
			public LerpData()
			{
			}
		}

		[Token(Token = "0x200036C")]
		[CompilerGenerated]
		private sealed class <DoLongHapticPulse>d__69 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400125D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400125E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400125F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float seconds;

			[Token(Token = "0x4001260")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public SVRHand <>4__this;

			[Token(Token = "0x4001261")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <endTime>5__2;

			[Token(Token = "0x17000117")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001431")]
				[Address(RVA = "0xD3A038", Offset = "0xD3A038", VA = "0xD3A038", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000118")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001433")]
				[Address(RVA = "0xD3A080", Offset = "0xD3A080", VA = "0xD3A080", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600142E")]
			[Address(RVA = "0xD3776C", Offset = "0xD3776C", VA = "0xD3776C")]
			[DebuggerHidden]
			public <DoLongHapticPulse>d__69(int <>1__state)
			{
			}

			[Token(Token = "0x600142F")]
			[Address(RVA = "0xD39F90", Offset = "0xD39F90", VA = "0xD39F90", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001430")]
			[Address(RVA = "0xD39F94", Offset = "0xD39F94", VA = "0xD39F94", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001432")]
			[Address(RVA = "0xD3A040", Offset = "0xD3A040", VA = "0xD3A040", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200036D")]
		[CompilerGenerated]
		private sealed class <clearHoveringInteractables>d__82 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001262")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001263")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001264")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SVRHand <>4__this;

			[Token(Token = "0x17000119")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001437")]
				[Address(RVA = "0xD3A2C8", Offset = "0xD3A2C8", VA = "0xD3A2C8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700011A")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001439")]
				[Address(RVA = "0xD3A310", Offset = "0xD3A310", VA = "0xD3A310", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001434")]
			[Address(RVA = "0xD39924", Offset = "0xD39924", VA = "0xD39924")]
			[DebuggerHidden]
			public <clearHoveringInteractables>d__82(int <>1__state)
			{
			}

			[Token(Token = "0x6001435")]
			[Address(RVA = "0xD3A088", Offset = "0xD3A088", VA = "0xD3A088", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001436")]
			[Address(RVA = "0xD3A08C", Offset = "0xD3A08C", VA = "0xD3A08C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001438")]
			[Address(RVA = "0xD3A2D0", Offset = "0xD3A2D0", VA = "0xD3A2D0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001232")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public SVREvent OnHandStateChanged;

		[Token(Token = "0x4001233")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SVREvent OnDeviceChanged;

		[Token(Token = "0x4001234")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public SVRInteractableEvent OnBeginInteraction;

		[Token(Token = "0x4001235")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public SVRInteractableEvent OnEndInteraction;

		[Token(Token = "0x4001236")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public SVRInteractableEvent OnHoverEnter;

		[Token(Token = "0x4001237")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public SVRInteractableEvent OnHoverExit;

		[Token(Token = "0x4001238")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public bool AttachableListEnabled;

		[Token(Token = "0x4001239")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public SVRButtons HoldButton;

		[Token(Token = "0x400123A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public SVRButtons UseButton;

		[Token(Token = "0x400123B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public bool IsRight;

		[Token(Token = "0x400123C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x55")]
		[HideInInspector]
		public bool IsLeft;

		[Token(Token = "0x400123D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[HideInInspector]
		public SVRPlayer Player;

		[Token(Token = "0x400123E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Dictionary<SVRButtons, SVRButtonInputs> Inputs;

		[Token(Token = "0x400123F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[HideInInspector]
		public InterationStyle CurrentInteractionStyle;

		[Token(Token = "0x4001240")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public Rigidbody Rigidbody;

		[Token(Token = "0x4001241")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public HandState CurrentHandState;

		[Token(Token = "0x4001242")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Dictionary<SVRInteractable, List<Collider>> CurrentlyHoveringOver;

		[Token(Token = "0x4001243")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public SVRInteractable CurrentlyInteracting;

		[Token(Token = "0x4001244")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public SVRInteractable NearestHovering;

		[Token(Token = "0x4001245")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private SVRInputDevice InputDevice;

		[Token(Token = "0x4001246")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public SVRRenderModel RenderModel;

		[Token(Token = "0x4001247")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		protected LerpData lerp;

		[Token(Token = "0x4001248")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		protected Transform pickUpTransform;

		[Token(Token = "0x4001249")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private List<SVRInteractable> AttachableInteractables;

		[Token(Token = "0x400124A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private float pressedDuration;

		[Token(Token = "0x400124B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private string deviceName;

		[Token(Token = "0x400124C")]
		private const float RESET_POSITION_DURATION = 1f;

		[Token(Token = "0x400124D")]
		protected const float MaxVelocityChange = 10f;

		[Token(Token = "0x400124E")]
		protected const float VelocityMagic = 6000f;

		[Token(Token = "0x400124F")]
		protected const float AngularVelocityMagic = 50f;

		[Token(Token = "0x4001250")]
		protected const float MaxAngularVelocityChange = 20f;

		[Token(Token = "0x17000109")]
		public virtual bool HoldButtonDown
		{
			[Token(Token = "0x60013F7")]
			[Address(RVA = "0xD34CC8", Offset = "0xD34CC8", VA = "0xD34CC8", Slot = "4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700010A")]
		public virtual bool HoldButtonUp
		{
			[Token(Token = "0x60013F8")]
			[Address(RVA = "0xD34D24", Offset = "0xD34D24", VA = "0xD34D24", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700010B")]
		public virtual bool HoldButtonPressed
		{
			[Token(Token = "0x60013F9")]
			[Address(RVA = "0xD34D80", Offset = "0xD34D80", VA = "0xD34D80", Slot = "6")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700010C")]
		public virtual float HoldButtonAxis
		{
			[Token(Token = "0x60013FA")]
			[Address(RVA = "0xD34DDC", Offset = "0xD34DDC", VA = "0xD34DDC", Slot = "7")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700010D")]
		public virtual bool UseButtonDown
		{
			[Token(Token = "0x60013FB")]
			[Address(RVA = "0xD34E38", Offset = "0xD34E38", VA = "0xD34E38", Slot = "8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700010E")]
		public virtual bool UseButtonUp
		{
			[Token(Token = "0x60013FC")]
			[Address(RVA = "0xD34E94", Offset = "0xD34E94", VA = "0xD34E94", Slot = "9")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700010F")]
		public virtual bool UseButtonPressed
		{
			[Token(Token = "0x60013FD")]
			[Address(RVA = "0xD34EF0", Offset = "0xD34EF0", VA = "0xD34EF0", Slot = "10")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000110")]
		public virtual float UseButtonAxis
		{
			[Token(Token = "0x60013FE")]
			[Address(RVA = "0xD34F4C", Offset = "0xD34F4C", VA = "0xD34F4C", Slot = "11")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000111")]
		public virtual bool LeftHandedPressed
		{
			[Token(Token = "0x60013FF")]
			[Address(RVA = "0xD34FA8", Offset = "0xD34FA8", VA = "0xD34FA8", Slot = "12")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000112")]
		public virtual bool RightHandedPressed
		{
			[Token(Token = "0x6001400")]
			[Address(RVA = "0xD35004", Offset = "0xD35004", VA = "0xD35004", Slot = "13")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000113")]
		public bool IsHovering
		{
			[Token(Token = "0x6001401")]
			[Address(RVA = "0xD35060", Offset = "0xD35060", VA = "0xD35060")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000114")]
		public bool IsInteracting
		{
			[Token(Token = "0x6001402")]
			[Address(RVA = "0xD350BC", Offset = "0xD350BC", VA = "0xD350BC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000115")]
		public bool IsCurrentlyTracked
		{
			[Token(Token = "0x6001403")]
			[Address(RVA = "0xD3511C", Offset = "0xD3511C", VA = "0xD3511C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000116")]
		public virtual SVRHand OtherHand
		{
			[Token(Token = "0x6001404")]
			[Address(RVA = "0xD351A8", Offset = "0xD351A8", VA = "0xD351A8", Slot = "14")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001405")]
		[Address(RVA = "0xD351D8", Offset = "0xD351D8", VA = "0xD351D8", Slot = "15")]
		public virtual void PreInitialize(SVRPlayer player)
		{
		}

		[Token(Token = "0x6001406")]
		[Address(RVA = "0xD3597C", Offset = "0xD3597C", VA = "0xD3597C")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6001407")]
		[Address(RVA = "0xD361D8", Offset = "0xD361D8", VA = "0xD361D8", Slot = "16")]
		protected virtual void Update()
		{
		}

		[Token(Token = "0x6001408")]
		[Address(RVA = "0xD369E4", Offset = "0xD369E4", VA = "0xD369E4")]
		protected void CheckDeviceName()
		{
		}

		[Token(Token = "0x6001409")]
		[Address(RVA = "0xD364EC", Offset = "0xD364EC", VA = "0xD364EC")]
		protected void UpdateHovering()
		{
		}

		[Token(Token = "0x600140A")]
		[Address(RVA = "0xD363F0", Offset = "0xD363F0", VA = "0xD363F0")]
		protected void UpdateButtonStates()
		{
		}

		[Token(Token = "0x600140B")]
		[Address(RVA = "0xD36F44", Offset = "0xD36F44", VA = "0xD36F44")]
		public void ResetButtonStates()
		{
		}

		[Token(Token = "0x600140C")]
		[Address(RVA = "0xD36840", Offset = "0xD36840", VA = "0xD36840")]
		protected void UpdateInteractions()
		{
		}

		[Token(Token = "0x600140D")]
		[Address(RVA = "0xD36E44", Offset = "0xD36E44", VA = "0xD36E44")]
		public void TriggerHapticPulse(float durationSec = 0.5f, float strength = 0.5f)
		{
		}

		[Token(Token = "0x600140E")]
		[Address(RVA = "0xD376C8", Offset = "0xD376C8", VA = "0xD376C8")]
		public void LongHapticPulse(float seconds)
		{
		}

		[Token(Token = "0x600140F")]
		[Address(RVA = "0xD376E8", Offset = "0xD376E8", VA = "0xD376E8")]
		[IteratorStateMachine(typeof(<DoLongHapticPulse>d__69))]
		private IEnumerator DoLongHapticPulse(float seconds)
		{
			return null;
		}

		[Token(Token = "0x6001410")]
		[Address(RVA = "0xD35CB4", Offset = "0xD35CB4", VA = "0xD35CB4")]
		protected void UpdateAttachedVelocity(float velocityMagic, float angularVelocityMagic)
		{
		}

		[Token(Token = "0x6001411")]
		[Address(RVA = "0xD37794", Offset = "0xD37794", VA = "0xD37794", Slot = "17")]
		public virtual void BeginInteraction(SVRInteractable interactable)
		{
		}

		[Token(Token = "0x6001412")]
		[Address(RVA = "0xD3893C", Offset = "0xD3893C", VA = "0xD3893C", Slot = "18")]
		public virtual void EndInteraction(SVRInteractable item)
		{
		}

		[Token(Token = "0x6001413")]
		[Address(RVA = "0xD37248", Offset = "0xD37248", VA = "0xD37248")]
		private bool PickupClosest()
		{
			return default(bool);
		}

		[Token(Token = "0x6001414")]
		[Address(RVA = "0xD38F4C", Offset = "0xD38F4C", VA = "0xD38F4C", Slot = "19")]
		protected virtual void OnTriggerEnter(Collider collider)
		{
		}

		[Token(Token = "0x6001415")]
		[Address(RVA = "0xD39358", Offset = "0xD39358", VA = "0xD39358", Slot = "20")]
		public virtual void OnTriggerExit(Collider collider)
		{
		}

		[Token(Token = "0x6001416")]
		[Address(RVA = "0xD391E8", Offset = "0xD391E8", VA = "0xD391E8")]
		private void AddHoveringOver(SVRInteractable interactable)
		{
		}

		[Token(Token = "0x6001417")]
		[Address(RVA = "0xD394D4", Offset = "0xD394D4", VA = "0xD394D4")]
		private bool IsNearer(SVRInteractable i0, SVRInteractable i1)
		{
			return default(bool);
		}

		[Token(Token = "0x6001418")]
		[Address(RVA = "0xD38DE4", Offset = "0xD38DE4", VA = "0xD38DE4")]
		private SVRInteractable GetNearestHovering()
		{
			return null;
		}

		[Token(Token = "0x6001419")]
		[Address(RVA = "0xD36CF8", Offset = "0xD36CF8", VA = "0xD36CF8")]
		private void RemoveHoveringOver(SVRInteractable interactable)
		{
		}

		[Token(Token = "0x600141A")]
		[Address(RVA = "0xD396AC", Offset = "0xD396AC", VA = "0xD396AC", Slot = "21")]
		public virtual string GetDeviceName()
		{
			return null;
		}

		[Token(Token = "0x600141B")]
		[Address(RVA = "0xD397A8", Offset = "0xD397A8", VA = "0xD397A8")]
		public void DeregisterInteractable(SVRInteractable interactable)
		{
		}

		[Token(Token = "0x600141C")]
		[Address(RVA = "0xD398B0", Offset = "0xD398B0", VA = "0xD398B0")]
		[IteratorStateMachine(typeof(<clearHoveringInteractables>d__82))]
		private IEnumerator clearHoveringInteractables()
		{
			return null;
		}

		[Token(Token = "0x600141D")]
		[Address(RVA = "0xD3994C", Offset = "0xD3994C", VA = "0xD3994C", Slot = "22")]
		public virtual void Initialize()
		{
		}

		[Token(Token = "0x600141E")]
		[Address(RVA = "0xD39BEC", Offset = "0xD39BEC", VA = "0xD39BEC", Slot = "23")]
		public virtual void SetButtonMapping(ButtonMappingData buttonMapping)
		{
		}

		[Token(Token = "0x600141F")]
		[Address(RVA = "0xD39C0C", Offset = "0xD39C0C", VA = "0xD39C0C")]
		public void SetRenderModel(int renderModelIndex)
		{
		}

		[Token(Token = "0x6001420")]
		[Address(RVA = "0xD36388", Offset = "0xD36388", VA = "0xD36388")]
		protected void SetHandState(HandState handState)
		{
		}

		[Token(Token = "0x6001421")]
		[Address(RVA = "0xD3873C", Offset = "0xD3873C", VA = "0xD3873C")]
		private bool CanAttachInteractable(SVRInteractable interactable)
		{
			return default(bool);
		}

		[Token(Token = "0x6001422")]
		[Address(RVA = "0xD39D0C", Offset = "0xD39D0C", VA = "0xD39D0C")]
		public void AddAttachableInteractable(SVRInteractable interactable)
		{
		}

		[Token(Token = "0x6001423")]
		[Address(RVA = "0xD39DBC", Offset = "0xD39DBC", VA = "0xD39DBC")]
		public void RemoveAttachableInteractable(SVRInteractable interactable)
		{
		}

		[Token(Token = "0x6001424")]
		[Address(RVA = "0xD39E14", Offset = "0xD39E14", VA = "0xD39E14")]
		public void ClearAttachableInteractables()
		{
		}

		[Token(Token = "0x6001425")]
		[Address(RVA = "0xD39E84", Offset = "0xD39E84", VA = "0xD39E84")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001426")]
		[Address(RVA = "0xD39E8C", Offset = "0xD39E8C", VA = "0xD39E8C")]
		public SVRHand()
		{
		}
	}
	[Token(Token = "0x200036E")]
	public enum HandState
	{
		[Token(Token = "0x4001266")]
		Uninitialized,
		[Token(Token = "0x4001267")]
		Idle
	}
	[Token(Token = "0x200036F")]
	public enum InterationStyle
	{
		[Token(Token = "0x4001269")]
		Hold,
		[Token(Token = "0x400126A")]
		Toggle,
		[Token(Token = "0x400126B")]
		ByScript
	}
	[Token(Token = "0x2000370")]
	public enum InteractionType
	{
		[Token(Token = "0x400126D")]
		None,
		[Token(Token = "0x400126E")]
		Grab,
		[Token(Token = "0x400126F")]
		TakeWithPhysics,
		[Token(Token = "0x4001270")]
		TakeWithoutPhysics
	}
	[Token(Token = "0x2000371")]
	public class SVRHandPoser : MonoBehaviour
	{
		[Token(Token = "0x4001271")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public HandPose handPose;

		[Token(Token = "0x600143A")]
		[Address(RVA = "0xD3A318", Offset = "0xD3A318", VA = "0xD3A318")]
		public HandPose GetHandPose(SVRHand hand, bool allowAdditivePoses)
		{
			return null;
		}

		[Token(Token = "0x600143B")]
		[Address(RVA = "0xD3A340", Offset = "0xD3A340", VA = "0xD3A340")]
		public void AddAdditiveHandPose(HandPose.AdditiveHandPose additiveHandPose)
		{
		}

		[Token(Token = "0x600143C")]
		[Address(RVA = "0xD3A3F8", Offset = "0xD3A3F8", VA = "0xD3A3F8")]
		public void RemoveAdditiveHandPose(HandPose.AdditiveHandPose additiveHandPose)
		{
		}

		[Token(Token = "0x600143D")]
		[Address(RVA = "0xD3A458", Offset = "0xD3A458", VA = "0xD3A458")]
		public void ClearAdditiveHandPoses()
		{
		}

		[Token(Token = "0x600143E")]
		[Address(RVA = "0xD3A4D0", Offset = "0xD3A4D0", VA = "0xD3A4D0")]
		public SVRHandPoser()
		{
		}
	}
	[Token(Token = "0x2000372")]
	public class SVRHead : MonoBehaviour
	{
		[Token(Token = "0x4001272")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Camera[] cameras;

		[Token(Token = "0x600143F")]
		[Address(RVA = "0xD3A4D8", Offset = "0xD3A4D8", VA = "0xD3A4D8")]
		public void Initialize()
		{
		}

		[Token(Token = "0x6001440")]
		[Address(RVA = "0xD3A5AC", Offset = "0xD3A5AC", VA = "0xD3A5AC")]
		public void SetCameraOptions(LayerMask cullingMask, Color color, CameraClearFlags clearFlags)
		{
		}

		[Token(Token = "0x6001441")]
		[Address(RVA = "0xD3A67C", Offset = "0xD3A67C", VA = "0xD3A67C")]
		public void SetCullingMask(LayerMask cullingMask)
		{
		}

		[Token(Token = "0x6001442")]
		[Address(RVA = "0xD3A6FC", Offset = "0xD3A6FC", VA = "0xD3A6FC")]
		public void SetBackgroundColor(Color color)
		{
		}

		[Token(Token = "0x6001443")]
		[Address(RVA = "0xD3A78C", Offset = "0xD3A78C", VA = "0xD3A78C")]
		public void setClearFlags(CameraClearFlags clearFlags)
		{
		}

		[Token(Token = "0x6001444")]
		[Address(RVA = "0xD3A7F4", Offset = "0xD3A7F4", VA = "0xD3A7F4")]
		public LayerMask GetCullingMask()
		{
			return default(LayerMask);
		}

		[Token(Token = "0x6001445")]
		[Address(RVA = "0xD3A834", Offset = "0xD3A834", VA = "0xD3A834")]
		public Color GetBackgroundColor()
		{
			return default(Color);
		}

		[Token(Token = "0x6001446")]
		[Address(RVA = "0xD3A864", Offset = "0xD3A864", VA = "0xD3A864")]
		public CameraClearFlags GetClearFlags()
		{
			return default(CameraClearFlags);
		}

		[Token(Token = "0x6001447")]
		[Address(RVA = "0xD3A894", Offset = "0xD3A894", VA = "0xD3A894")]
		public SVRHead()
		{
		}
	}
	[Token(Token = "0x2000373")]
	public class SVRHelpers
	{
		[Token(Token = "0x4001273")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Shader standardShader;

		[Token(Token = "0x1700011B")]
		private static Shader StandardShader
		{
			[Token(Token = "0x6001448")]
			[Address(RVA = "0xD3A89C", Offset = "0xD3A89C", VA = "0xD3A89C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001449")]
		[Address(RVA = "0xD3A964", Offset = "0xD3A964", VA = "0xD3A964")]
		public static void SetTransparent(Material material, [Optional] Color? newcolor)
		{
		}

		[Token(Token = "0x600144A")]
		[Address(RVA = "0xD3AC3C", Offset = "0xD3AC3C", VA = "0xD3AC3C")]
		public static void SetOpaque(Material material)
		{
		}

		[Token(Token = "0x600144B")]
		[Address(RVA = "0xD32CE0", Offset = "0xD32CE0", VA = "0xD32CE0")]
		public static void SetProperty(object obj, string propertyName, object value, bool isPublic)
		{
		}

		[Token(Token = "0x600144C")]
		[Address(RVA = "0xD3AE54", Offset = "0xD3AE54", VA = "0xD3AE54")]
		public static void SetField(object obj, string fieldName, object value, bool isPublic)
		{
		}

		[Token(Token = "0x600144D")]
		[Address(RVA = "0xD3AEC8", Offset = "0xD3AEC8", VA = "0xD3AEC8")]
		public static void LineRendererSetColor(LineRenderer lineRenderer, Color startColor, Color endColor)
		{
		}

		[Token(Token = "0x600144E")]
		[Address(RVA = "0xD3AF20", Offset = "0xD3AF20", VA = "0xD3AF20")]
		public static void LineRendererSetWidth(LineRenderer lineRenderer, float startWidth, float endWidth)
		{
		}

		[Token(Token = "0x600144F")]
		[Address(RVA = "0xD3AF58", Offset = "0xD3AF58", VA = "0xD3AF58")]
		public static Quaternion AverageQuaternion(ref Vector4 cumulative, Quaternion newRotation, Quaternion firstRotation, int addAmount)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6001450")]
		[Address(RVA = "0xD3B03C", Offset = "0xD3B03C", VA = "0xD3B03C")]
		public static Quaternion NormalizeQuaternion(float x, float y, float z, float w)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6001451")]
		[Address(RVA = "0xD3B028", Offset = "0xD3B028", VA = "0xD3B028")]
		public static Quaternion InverseSignQuaternion(Quaternion q)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6001452")]
		[Address(RVA = "0xD3B000", Offset = "0xD3B000", VA = "0xD3B000")]
		public static bool AreQuaternionsClose(Quaternion q1, Quaternion q2)
		{
			return default(bool);
		}

		[Token(Token = "0x6001453")]
		[Address(RVA = "0xD3B074", Offset = "0xD3B074", VA = "0xD3B074")]
		public SVRHelpers()
		{
		}
	}
	[Token(Token = "0x2000374")]
	public abstract class SVRInputDevice : MonoBehaviour
	{
		[Token(Token = "0x4001274")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private SVRHand _hand;

		[Token(Token = "0x1700011C")]
		protected SVRHand Hand
		{
			[Token(Token = "0x6001454")]
			[Address(RVA = "0xD3B07C", Offset = "0xD3B07C", VA = "0xD3B07C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001455")]
			[Address(RVA = "0xD3B084", Offset = "0xD3B084", VA = "0xD3B084")]
			set
			{
			}
		}

		[Token(Token = "0x1700011D")]
		public abstract bool IsCurrentlyTracked
		{
			[Token(Token = "0x6001458")]
			get;
		}

		[Token(Token = "0x6001456")]
		[Address(RVA = "0xD30A60", Offset = "0xD30A60", VA = "0xD30A60", Slot = "4")]
		public virtual void Initialize(SVRHand hand, ButtonMappingData buttonMapping)
		{
		}

		[Token(Token = "0x6001457")]
		public abstract void SetButtonMapping(ButtonMappingData buttonMapping);

		[Token(Token = "0x6001459")]
		public abstract bool ReadyToInitialize();

		[Token(Token = "0x600145A")]
		public abstract string GetDeviceName();

		[Token(Token = "0x600145B")]
		public abstract void TriggerHapticPulse(float durationSec = 0.5f, float strength = 0.5f);

		[Token(Token = "0x600145C")]
		public abstract float GetAxis1D(SVRButtons button);

		[Token(Token = "0x600145D")]
		public abstract Vector2 GetAxis2D(SVRButtons button);

		[Token(Token = "0x600145E")]
		public abstract bool GetPressDown(SVRButtons button);

		[Token(Token = "0x600145F")]
		public abstract bool GetPressUp(SVRButtons button);

		[Token(Token = "0x6001460")]
		public abstract bool GetPress(SVRButtons button);

		[Token(Token = "0x6001461")]
		public abstract bool GetTouchDown(SVRButtons button);

		[Token(Token = "0x6001462")]
		public abstract bool GetTouchUp(SVRButtons button);

		[Token(Token = "0x6001463")]
		public abstract bool GetTouch(SVRButtons button);

		[Token(Token = "0x6001464")]
		public abstract bool GetNearTouchDown(SVRButtons button);

		[Token(Token = "0x6001465")]
		public abstract bool GetNearTouchUp(SVRButtons button);

		[Token(Token = "0x6001466")]
		public abstract bool GetNearTouch(SVRButtons button);

		[Token(Token = "0x6001467")]
		[Address(RVA = "0xD3098C", Offset = "0xD3098C", VA = "0xD3098C")]
		protected SVRInputDevice()
		{
		}
	}
	[Token(Token = "0x2000375")]
	public abstract class SVRIntegration
	{
		[Token(Token = "0x2000376")]
		public enum HMDType
		{
			[Token(Token = "0x4001278")]
			Gen1,
			[Token(Token = "0x4001279")]
			Gen2
		}

		[Token(Token = "0x4001275")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		protected SVRPlayer Player;

		[Token(Token = "0x4001276")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected bool m_bPauseOnFocusLostEnabled;

		[Token(Token = "0x6001468")]
		public abstract void Initialize(SVRPlayer player);

		[Token(Token = "0x6001469")]
		public abstract Vector3 GetPlayspaceBounds();

		[Token(Token = "0x600146A")]
		public abstract bool IsHmdPresent();

		[Token(Token = "0x600146B")]
		public abstract HMDType GetHMDType();

		[Token(Token = "0x600146C")]
		[Address(RVA = "0xD3B08C", Offset = "0xD3B08C", VA = "0xD3B08C")]
		public void enablePauseOnFocusLost(bool bValue)
		{
		}

		[Token(Token = "0x600146D")]
		[Address(RVA = "0xD3B098", Offset = "0xD3B098", VA = "0xD3B098")]
		public bool isEnablePauseOnFocusLost()
		{
			return default(bool);
		}

		[Token(Token = "0x600146E")]
		[Address(RVA = "0xD309FC", Offset = "0xD309FC", VA = "0xD309FC")]
		protected SVRIntegration()
		{
		}
	}
	[Token(Token = "0x2000377")]
	public class SVRInteractable : MonoBehaviour
	{
		[Token(Token = "0x2000378")]
		[CompilerGenerated]
		private sealed class <EstimateVelocityCoroutine>d__54 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001295")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001296")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001297")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SVRInteractable <>4__this;

			[Token(Token = "0x4001298")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private Vector3 <previousPosition>5__2;

			[Token(Token = "0x4001299")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private Quaternion <previousRotation>5__3;

			[Token(Token = "0x17000120")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600148E")]
				[Address(RVA = "0xD3C784", Offset = "0xD3C784", VA = "0xD3C784", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000121")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001490")]
				[Address(RVA = "0xD3C7CC", Offset = "0xD3C7CC", VA = "0xD3C7CC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600148B")]
			[Address(RVA = "0xD3C1EC", Offset = "0xD3C1EC", VA = "0xD3C1EC")]
			[DebuggerHidden]
			public <EstimateVelocityCoroutine>d__54(int <>1__state)
			{
			}

			[Token(Token = "0x600148C")]
			[Address(RVA = "0xD3C3F0", Offset = "0xD3C3F0", VA = "0xD3C3F0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600148D")]
			[Address(RVA = "0xD3C3F4", Offset = "0xD3C3F4", VA = "0xD3C3F4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600148F")]
			[Address(RVA = "0xD3C78C", Offset = "0xD3C78C", VA = "0xD3C78C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400127A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static int Max_InteractionPriority;

		[Token(Token = "0x400127B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Header("NOTE: Interactable scale must be uniform")]
		public int InteractionPriority;

		[Token(Token = "0x400127C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Rigidbody Rigidbody;

		[Token(Token = "0x400127D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool CanAttach;

		[Token(Token = "0x400127E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		public bool EnableKinematicOnDetach;

		[Token(Token = "0x400127F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A")]
		public bool EnableGravityOnDetach;

		[Token(Token = "0x4001280")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2B")]
		public bool Throwable;

		[Token(Token = "0x4001281")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public bool AttachEaseIn;

		[Token(Token = "0x4001282")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[Range(0f, 1f)]
		public float VibrationStrength;

		[Token(Token = "0x4001283")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float AttachTime;

		[Token(Token = "0x4001284")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public SVRHand AttachedHand;

		[Token(Token = "0x4001285")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public List<SVRHand> HoveringHands;

		[Token(Token = "0x4001286")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public bool VibrateOnBeginInteraction;

		[Token(Token = "0x4001287")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public InteractionType InteractionType;

		[Token(Token = "0x4001288")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[HideInInspector]
		public SVRInteractableHandPoser handPoser;

		[Token(Token = "0x4001289")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Transform InteractionPointRightHand;

		[Token(Token = "0x400128A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Transform InteractionPointLeftHand;

		[Token(Token = "0x400128B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public SVREvent OnBeginInteraction;

		[Token(Token = "0x400128C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public SVREvent OnEndInteraction;

		[Token(Token = "0x400128D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public SumalabEvent<SVRHand> OnHoverEnter;

		[Token(Token = "0x400128E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public SumalabEvent<SVRHand> OnHoverExit;

		[Token(Token = "0x400128F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		protected Collider[] Colliders;

		[Token(Token = "0x4001290")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		protected Transform InteractableParent;

		[Token(Token = "0x4001291")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Coroutine routine;

		[Token(Token = "0x4001292")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private int sampleCount;

		[Token(Token = "0x4001293")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private Vector3[] velocitySamples;

		[Token(Token = "0x4001294")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private Vector3[] angularVelocitySamples;

		[Token(Token = "0x1700011E")]
		public SVRHand HoveringHand
		{
			[Token(Token = "0x600146F")]
			[Address(RVA = "0xD3B0A0", Offset = "0xD3B0A0", VA = "0xD3B0A0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700011F")]
		public virtual bool IsAttached
		{
			[Token(Token = "0x6001470")]
			[Address(RVA = "0xD3B118", Offset = "0xD3B118", VA = "0xD3B118", Slot = "4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001471")]
		[Address(RVA = "0xD3B178", Offset = "0xD3B178", VA = "0xD3B178")]
		public void ForceInitialization()
		{
		}

		[Token(Token = "0x6001472")]
		[Address(RVA = "0xD3B1A0", Offset = "0xD3B1A0", VA = "0xD3B1A0", Slot = "5")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x6001473")]
		[Address(RVA = "0xD3B718", Offset = "0xD3B718", VA = "0xD3B718", Slot = "6")]
		protected virtual void Start()
		{
		}

		[Token(Token = "0x6001474")]
		[Address(RVA = "0xD3B724", Offset = "0xD3B724", VA = "0xD3B724", Slot = "7")]
		public virtual void ResetInteractable()
		{
		}

		[Token(Token = "0x6001475")]
		[Address(RVA = "0xD3B75C", Offset = "0xD3B75C", VA = "0xD3B75C", Slot = "8")]
		public virtual void UpdateColliders()
		{
		}

		[Token(Token = "0x6001476")]
		[Address(RVA = "0xD3B9E4", Offset = "0xD3B9E4", VA = "0xD3B9E4", Slot = "9")]
		public virtual void BeginInteraction(SVRHand hand)
		{
		}

		[Token(Token = "0x6001477")]
		[Address(RVA = "0xD3BAC0", Offset = "0xD3BAC0", VA = "0xD3BAC0", Slot = "10")]
		public virtual void InteractingUpdate(SVRHand hand)
		{
		}

		[Token(Token = "0x6001478")]
		[Address(RVA = "0xD3BB3C", Offset = "0xD3BB3C", VA = "0xD3BB3C", Slot = "11")]
		public virtual void AttachEaseInCompleted()
		{
		}

		[Token(Token = "0x6001479")]
		[Address(RVA = "0xD3BB40", Offset = "0xD3BB40", VA = "0xD3BB40", Slot = "12")]
		public virtual void HoverEnter(SVRHand hand)
		{
		}

		[Token(Token = "0x600147A")]
		[Address(RVA = "0xD3BC14", Offset = "0xD3BC14", VA = "0xD3BC14", Slot = "13")]
		public virtual void HoveringUpdate(SVRHand hand)
		{
		}

		[Token(Token = "0x600147B")]
		[Address(RVA = "0xD3BC18", Offset = "0xD3BC18", VA = "0xD3BC18", Slot = "14")]
		public virtual void HoverExit(SVRHand hand)
		{
		}

		[Token(Token = "0x600147C")]
		[Address(RVA = "0xD3BC98", Offset = "0xD3BC98", VA = "0xD3BC98")]
		public void ForceDetach([Optional] SVRHand hand)
		{
		}

		[Token(Token = "0x600147D")]
		[Address(RVA = "0xD3BDA0", Offset = "0xD3BDA0", VA = "0xD3BDA0", Slot = "15")]
		public virtual void EndInteraction(SVRHand hand)
		{
		}

		[Token(Token = "0x600147E")]
		[Address(RVA = "0xD3C06C", Offset = "0xD3C06C", VA = "0xD3C06C", Slot = "16")]
		public virtual void UseButtonUp()
		{
		}

		[Token(Token = "0x600147F")]
		[Address(RVA = "0xD3C070", Offset = "0xD3C070", VA = "0xD3C070", Slot = "17")]
		public virtual void UseButtonDown()
		{
		}

		[Token(Token = "0x6001480")]
		[Address(RVA = "0xD3C074", Offset = "0xD3C074", VA = "0xD3C074", Slot = "18")]
		public virtual Transform GetInteractionPoint(SVRHand hand)
		{
			return null;
		}

		[Token(Token = "0x6001481")]
		[Address(RVA = "0xD3C0A0", Offset = "0xD3C0A0", VA = "0xD3C0A0")]
		public void EnableColliders(bool enable)
		{
		}

		[Token(Token = "0x6001482")]
		[Address(RVA = "0xD3C108", Offset = "0xD3C108", VA = "0xD3C108")]
		public void SetTriggerColliders(bool trigger)
		{
		}

		[Token(Token = "0x6001483")]
		[Address(RVA = "0xD3C170", Offset = "0xD3C170", VA = "0xD3C170", Slot = "19")]
		protected virtual void OnDestroy()
		{
		}

		[Token(Token = "0x6001484")]
		[Address(RVA = "0xD3BA88", Offset = "0xD3BA88", VA = "0xD3BA88")]
		public void BeginEstimatingVelocity()
		{
		}

		[Token(Token = "0x6001485")]
		[Address(RVA = "0xD3BE98", Offset = "0xD3BE98", VA = "0xD3BE98")]
		public void FinishEstimatingVelocity()
		{
		}

		[Token(Token = "0x6001486")]
		[Address(RVA = "0xD3BEDC", Offset = "0xD3BEDC", VA = "0xD3BEDC")]
		public Vector3 GetVelocityEstimate()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001487")]
		[Address(RVA = "0xD3BFA4", Offset = "0xD3BFA4", VA = "0xD3BFA4")]
		public Vector3 GetAngularVelocityEstimate()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001488")]
		[Address(RVA = "0xD3C178", Offset = "0xD3C178", VA = "0xD3C178")]
		[IteratorStateMachine(typeof(<EstimateVelocityCoroutine>d__54))]
		private IEnumerator EstimateVelocityCoroutine()
		{
			return null;
		}

		[Token(Token = "0x6001489")]
		[Address(RVA = "0xD3C214", Offset = "0xD3C214", VA = "0xD3C214")]
		public SVRInteractable()
		{
		}
	}
	[Token(Token = "0x2000379")]
	public class SVRInteractableHandPoser : MonoBehaviour
	{
		[Token(Token = "0x400129A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public HandPose interactingRightHandPose;

		[Token(Token = "0x400129B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public HandPose interactingLeftHandPose;

		[Token(Token = "0x400129C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public HandPose hoveringRightHandPose;

		[Token(Token = "0x400129D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public HandPose hoveringLeftHandPose;

		[Token(Token = "0x400129E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public bool useInteractingPoseAsHoveringPose;

		[Token(Token = "0x6001491")]
		[Address(RVA = "0xD3C7D4", Offset = "0xD3C7D4", VA = "0xD3C7D4")]
		public HandPose GetInteractingPose(SVRHand hand)
		{
			return null;
		}

		[Token(Token = "0x6001492")]
		[Address(RVA = "0xD3C830", Offset = "0xD3C830", VA = "0xD3C830")]
		public HandPose GetHoveringPose(SVRHand hand)
		{
			return null;
		}

		[Token(Token = "0x6001493")]
		[Address(RVA = "0xD3C8A8", Offset = "0xD3C8A8", VA = "0xD3C8A8")]
		public SVRInteractableHandPoser()
		{
		}
	}
	[Token(Token = "0x200037A")]
	public class SVRInteractables : MonoBehaviour
	{
		[Token(Token = "0x400129F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Dictionary<Collider, SVRInteractable> ColliderMapping;

		[Token(Token = "0x40012A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static Dictionary<SVRInteractable, Collider[]> SVRInteractableMapping;

		[Token(Token = "0x40012A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static List<SVRInteractable> SVRInteractableList;

		[Token(Token = "0x40012A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static bool Initialized;

		[Token(Token = "0x6001494")]
		[Address(RVA = "0xD3C8B0", Offset = "0xD3C8B0", VA = "0xD3C8B0")]
		public static void Initialize()
		{
		}

		[Token(Token = "0x6001495")]
		[Address(RVA = "0xD3B7C4", Offset = "0xD3B7C4", VA = "0xD3B7C4")]
		public static void Register(SVRInteractable interactable, Collider[] colliders)
		{
		}

		[Token(Token = "0x6001496")]
		[Address(RVA = "0xD3CA04", Offset = "0xD3CA04", VA = "0xD3CA04")]
		public static void Deregister(SVRInteractable interactable)
		{
		}

		[Token(Token = "0x6001497")]
		[Address(RVA = "0xD3910C", Offset = "0xD3910C", VA = "0xD3910C")]
		public static SVRInteractable GetInteractable(Collider collider)
		{
			return null;
		}

		[Token(Token = "0x6001498")]
		[Address(RVA = "0xD3CF44", Offset = "0xD3CF44", VA = "0xD3CF44")]
		public static List<SVRInteractable> GetAllInteractables()
		{
			return null;
		}

		[Token(Token = "0x6001499")]
		[Address(RVA = "0xD3CF8C", Offset = "0xD3CF8C", VA = "0xD3CF8C")]
		public SVRInteractables()
		{
		}
	}
	[Token(Token = "0x200037D")]
	public class SVRLinearDrive : SVRInteractable
	{
		[Token(Token = "0x40012A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public Transform startPosition;

		[Token(Token = "0x40012A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public Transform endPosition;

		[Token(Token = "0x40012A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private float value;

		[Token(Token = "0x40012AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		private float offset;

		[Token(Token = "0x60014A0")]
		[Address(RVA = "0xD3D0FC", Offset = "0xD3D0FC", VA = "0xD3D0FC", Slot = "9")]
		public override void BeginInteraction(SVRHand hand)
		{
		}

		[Token(Token = "0x60014A1")]
		[Address(RVA = "0xD3D308", Offset = "0xD3D308", VA = "0xD3D308", Slot = "10")]
		public override void InteractingUpdate(SVRHand hand)
		{
		}

		[Token(Token = "0x60014A2")]
		[Address(RVA = "0xD3D150", Offset = "0xD3D150", VA = "0xD3D150")]
		private float CalculateValue(Transform tr)
		{
			return default(float);
		}

		[Token(Token = "0x60014A3")]
		[Address(RVA = "0xD3D344", Offset = "0xD3D344", VA = "0xD3D344")]
		private void UpdateValue(Transform tr)
		{
		}

		[Token(Token = "0x60014A4")]
		[Address(RVA = "0xD3D418", Offset = "0xD3D418", VA = "0xD3D418")]
		public SVRLinearDrive()
		{
		}
	}
	[Token(Token = "0x200037E")]
	public class SVRManager : MonoBehaviour
	{
		[Token(Token = "0x2000380")]
		[CompilerGenerated]
		private sealed class <EnableLoadingCameraCoroutine>d__13 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40012B8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40012B9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40012BA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float delaySeconds;

			[Token(Token = "0x40012BB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public SVRManager <>4__this;

			[Token(Token = "0x40012BC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public bool enable;

			[Token(Token = "0x17000122")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60014B7")]
				[Address(RVA = "0xD3E050", Offset = "0xD3E050", VA = "0xD3E050", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000123")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60014B9")]
				[Address(RVA = "0xD3E098", Offset = "0xD3E098", VA = "0xD3E098", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60014B4")]
			[Address(RVA = "0xD3DB28", Offset = "0xD3DB28", VA = "0xD3DB28")]
			[DebuggerHidden]
			public <EnableLoadingCameraCoroutine>d__13(int <>1__state)
			{
			}

			[Token(Token = "0x60014B5")]
			[Address(RVA = "0xD3DF04", Offset = "0xD3DF04", VA = "0xD3DF04", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60014B6")]
			[Address(RVA = "0xD3DF08", Offset = "0xD3DF08", VA = "0xD3DF08", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60014B8")]
			[Address(RVA = "0xD3E058", Offset = "0xD3E058", VA = "0xD3E058", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000381")]
		[CompilerGenerated]
		private sealed class <InitGame>d__14 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40012BD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40012BE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40012BF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SVRManager <>4__this;

			[Token(Token = "0x17000124")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60014BD")]
				[Address(RVA = "0xD3E3DC", Offset = "0xD3E3DC", VA = "0xD3E3DC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000125")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60014BF")]
				[Address(RVA = "0xD3E424", Offset = "0xD3E424", VA = "0xD3E424", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60014BA")]
			[Address(RVA = "0xD3DB50", Offset = "0xD3DB50", VA = "0xD3DB50")]
			[DebuggerHidden]
			public <InitGame>d__14(int <>1__state)
			{
			}

			[Token(Token = "0x60014BB")]
			[Address(RVA = "0xD3E0A0", Offset = "0xD3E0A0", VA = "0xD3E0A0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60014BC")]
			[Address(RVA = "0xD3E0A4", Offset = "0xD3E0A4", VA = "0xD3E0A4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60014BE")]
			[Address(RVA = "0xD3E3E4", Offset = "0xD3E3E4", VA = "0xD3E3E4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000382")]
		[CompilerGenerated]
		private sealed class <LoadSceneCoroutine>d__19 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40012C0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40012C1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40012C2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public string sceneName;

			[Token(Token = "0x40012C3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public SVRManager <>4__this;

			[Token(Token = "0x40012C4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private AsyncOperation <async>5__2;

			[Token(Token = "0x40012C5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private int <i>5__3;

			[Token(Token = "0x17000126")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60014C3")]
				[Address(RVA = "0xD3E830", Offset = "0xD3E830", VA = "0xD3E830", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000127")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60014C5")]
				[Address(RVA = "0xD3E878", Offset = "0xD3E878", VA = "0xD3E878", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60014C0")]
			[Address(RVA = "0xD3DCCC", Offset = "0xD3DCCC", VA = "0xD3DCCC")]
			[DebuggerHidden]
			public <LoadSceneCoroutine>d__19(int <>1__state)
			{
			}

			[Token(Token = "0x60014C1")]
			[Address(RVA = "0xD3E42C", Offset = "0xD3E42C", VA = "0xD3E42C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60014C2")]
			[Address(RVA = "0xD3E430", Offset = "0xD3E430", VA = "0xD3E430", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60014C4")]
			[Address(RVA = "0xD3E838", Offset = "0xD3E838", VA = "0xD3E838", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000383")]
		[CompilerGenerated]
		private sealed class <liberateMemory>d__20 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40012C6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40012C7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40012C8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private AsyncOperation <async>5__2;

			[Token(Token = "0x17000128")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60014C9")]
				[Address(RVA = "0xD3E908", Offset = "0xD3E908", VA = "0xD3E908", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000129")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60014CB")]
				[Address(RVA = "0xD3E950", Offset = "0xD3E950", VA = "0xD3E950", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60014C6")]
			[Address(RVA = "0xD3DD54", Offset = "0xD3DD54", VA = "0xD3DD54")]
			[DebuggerHidden]
			public <liberateMemory>d__20(int <>1__state)
			{
			}

			[Token(Token = "0x60014C7")]
			[Address(RVA = "0xD3E880", Offset = "0xD3E880", VA = "0xD3E880", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60014C8")]
			[Address(RVA = "0xD3E884", Offset = "0xD3E884", VA = "0xD3E884", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60014CA")]
			[Address(RVA = "0xD3E910", Offset = "0xD3E910", VA = "0xD3E910", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40012AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public const decimal SumalabVRVersion = 0.5m;

		[Token(Token = "0x40012AC")]
		public const float SumalabVRExpectedDeltaTime = 0.0111f;

		[Token(Token = "0x40012AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static SVRManager Instance;

		[Token(Token = "0x40012AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[HideInInspector]
		public SVRSDKIntegrations CurrentIntegrationType;

		[Token(Token = "0x40012AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject game;

		[Token(Token = "0x40012B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Camera loadingCamera;

		[Token(Token = "0x40012B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Coroutine loadingCameraCoroutine;

		[Token(Token = "0x40012B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static bool launchGameEnabled;

		[Token(Token = "0x40012B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool bShutdownVR;

		[Token(Token = "0x40012B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		public static bool freezedUI;

		[Token(Token = "0x40012B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
		public static bool readyToFreezeUI;

		[Token(Token = "0x60014A5")]
		[Address(RVA = "0xD3D46C", Offset = "0xD3D46C", VA = "0xD3D46C")]
		private void Awake()
		{
		}

		[Token(Token = "0x60014A6")]
		[Address(RVA = "0xD3D988", Offset = "0xD3D988", VA = "0xD3D988")]
		public void EnableLoadingCamera(bool enable, float delaySeconds = 0f)
		{
		}

		[Token(Token = "0x60014A7")]
		[Address(RVA = "0xD3DA90", Offset = "0xD3DA90", VA = "0xD3DA90")]
		[IteratorStateMachine(typeof(<EnableLoadingCameraCoroutine>d__13))]
		private IEnumerator EnableLoadingCameraCoroutine(bool enable, float delaySeconds)
		{
			return null;
		}

		[Token(Token = "0x60014A8")]
		[Address(RVA = "0xD3D914", Offset = "0xD3D914", VA = "0xD3D914")]
		[IteratorStateMachine(typeof(<InitGame>d__14))]
		private IEnumerator InitGame()
		{
			return null;
		}

		[Token(Token = "0x60014A9")]
		[Address(RVA = "0xD3D738", Offset = "0xD3D738", VA = "0xD3D738")]
		private void DetermineCurrentIntegration()
		{
		}

		[Token(Token = "0x60014AA")]
		[Address(RVA = "0xD3304C", Offset = "0xD3304C", VA = "0xD3304C")]
		public void Resume()
		{
		}

		[Token(Token = "0x60014AB")]
		[Address(RVA = "0xD332DC", Offset = "0xD332DC", VA = "0xD332DC")]
		public void Pause()
		{
		}

		[Token(Token = "0x60014AC")]
		[Address(RVA = "0xD3DC1C", Offset = "0xD3DC1C", VA = "0xD3DC1C")]
		public void LoadScene(string sceneName)
		{
		}

		[Token(Token = "0x60014AD")]
		[Address(RVA = "0xD3DC3C", Offset = "0xD3DC3C", VA = "0xD3DC3C")]
		[IteratorStateMachine(typeof(<LoadSceneCoroutine>d__19))]
		private IEnumerator LoadSceneCoroutine(string sceneName)
		{
			return null;
		}

		[Token(Token = "0x60014AE")]
		[Address(RVA = "0xD3DCF4", Offset = "0xD3DCF4", VA = "0xD3DCF4")]
		[IteratorStateMachine(typeof(<liberateMemory>d__20))]
		private IEnumerator liberateMemory()
		{
			return null;
		}

		[Token(Token = "0x60014AF")]
		[Address(RVA = "0xD3DD7C", Offset = "0xD3DD7C", VA = "0xD3DD7C")]
		public SVRManager()
		{
		}
	}
	[Token(Token = "0x2000384")]
	public class SVRPlayer : MonoBehaviour
	{
		[Token(Token = "0x40012C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public SumalabEvent OnButtonMappingChanged;

		[Token(Token = "0x40012CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SumalabEvent OnInitialized;

		[Token(Token = "0x40012CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public SumalabEvent<bool> OnApplicationFocusLost;

		[Token(Token = "0x40012CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public const decimal SumalabVRVersion = 0.2m;

		[Token(Token = "0x40012CD")]
		public const float SumalabVRExpectedDeltaTime = 0.0111f;

		[Token(Token = "0x40012CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static SVRPlayer Instance;

		[Token(Token = "0x40012CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[HideInInspector]
		public bool SteamVREnabled;

		[Token(Token = "0x40012D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
		[HideInInspector]
		public bool OculusSDKEnabled;

		[Token(Token = "0x40012D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x32")]
		[HideInInspector]
		public bool PSVREnabled;

		[Token(Token = "0x40012D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x33")]
		[HideInInspector]
		public bool PicoEnabled;

		[Token(Token = "0x40012D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[HideInInspector]
		public bool QiyuVREnabled;

		[Token(Token = "0x40012D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x35")]
		[HideInInspector]
		public bool YVREnabled;

		[Token(Token = "0x40012D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x36")]
		[HideInInspector]
		public bool NoloVREnabled;

		[Token(Token = "0x40012D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x37")]
		[HideInInspector]
		public bool VIVEEnabled;

		[Token(Token = "0x40012D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public InterationStyle InteractionStyle;

		[Token(Token = "0x40012D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public bool VibrateOnHover;

		[Token(Token = "0x40012D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3D")]
		[Space]
		public bool EnableEditorPlayerPreview;

		[Token(Token = "0x40012DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Mesh EditorPlayerPreview;

		[Token(Token = "0x40012DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Mesh EditorPlayspacePreview;

		[Token(Token = "0x40012DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public bool EditorPlayspaceOverride;

		[Token(Token = "0x40012DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public Vector2 EditorPlayspaceDefault;

		[Token(Token = "0x40012DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static float PlayerHeight;

		[Token(Token = "0x40012DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public static float DeltaPlayerHeight;

		[Token(Token = "0x40012E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Transform recenterTransform;

		[Token(Token = "0x40012E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[Space]
		public SVRHead Head;

		[Token(Token = "0x40012E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public SVRHand LeftHand;

		[Token(Token = "0x40012E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public SVRHand RightHand;

		[Token(Token = "0x40012E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[HideInInspector]
		public SVRHand[] Hands;

		[Token(Token = "0x40012E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private SVRIntegration Integration;

		[Token(Token = "0x40012E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Dictionary<Collider, SVRHand> ColliderToHandMapping;

		[Token(Token = "0x40012E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private bool ApplicationFocusLost;

		[Token(Token = "0x40012E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x99")]
		[Space]
		public bool DEBUGFakeAimController;

		[Token(Token = "0x40012E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9A")]
		public bool DEBUGEnableFallback2D;

		[Token(Token = "0x40012EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9B")]
		public bool DEBUGDropFrames;

		[Token(Token = "0x40012EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		public int DEBUGSleepPerFrame;

		[Token(Token = "0x40012EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public ButtonMappingData ButtonMapping;

		[Token(Token = "0x40012ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public Camera ApplicationFocusLostCamera;

		[Token(Token = "0x40012EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static Vector3 recenterPositionDelta;

		[Token(Token = "0x40012EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private static bool m_bCalibratedHeight;

		[Token(Token = "0x1700012A")]
		public Vector3 PlayspaceSize
		{
			[Token(Token = "0x60014CC")]
			[Address(RVA = "0xD3E958", Offset = "0xD3E958", VA = "0xD3E958")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x60014CD")]
		[Address(RVA = "0xD3ED98", Offset = "0xD3ED98", VA = "0xD3ED98")]
		private void Awake()
		{
		}

		[Token(Token = "0x60014CE")]
		[Address(RVA = "0xD3F038", Offset = "0xD3F038", VA = "0xD3F038")]
		private void SetupIntegration()
		{
		}

		[Token(Token = "0x60014CF")]
		[Address(RVA = "0xD3F370", Offset = "0xD3F370", VA = "0xD3F370", Slot = "4")]
		public virtual void enablePauseOnFocusLost(bool bValue)
		{
		}

		[Token(Token = "0x60014D0")]
		[Address(RVA = "0xD3F384", Offset = "0xD3F384", VA = "0xD3F384", Slot = "5")]
		public virtual bool isEnablePauseOnFocusLost()
		{
			return default(bool);
		}

		[Token(Token = "0x60014D1")]
		[Address(RVA = "0xD33210", Offset = "0xD33210", VA = "0xD33210")]
		public void SetApplicationFocusLost(bool enable)
		{
		}

		[Token(Token = "0x60014D2")]
		[Address(RVA = "0xD3F3A0", Offset = "0xD3F3A0", VA = "0xD3F3A0")]
		public bool IsApplicationFocusLost()
		{
			return default(bool);
		}

		[Token(Token = "0x60014D3")]
		[Address(RVA = "0xD39AE4", Offset = "0xD39AE4", VA = "0xD39AE4")]
		public void RegisterHand(SVRHand hand)
		{
		}

		[Token(Token = "0x60014D4")]
		[Address(RVA = "0xD3F3A8", Offset = "0xD3F3A8", VA = "0xD3F3A8")]
		public SVRHand GetHand(Collider collider)
		{
			return null;
		}

		[Token(Token = "0x60014D5")]
		[Address(RVA = "0xD3CD8C", Offset = "0xD3CD8C", VA = "0xD3CD8C")]
		public static void DeregisterInteractable(SVRInteractable interactable)
		{
		}

		[Token(Token = "0x60014D6")]
		[Address(RVA = "0xD3F400", Offset = "0xD3F400", VA = "0xD3F400")]
		public void SetButtonMapping(ButtonMappingData ButtonMapping)
		{
		}

		[Token(Token = "0x60014D7")]
		[Address(RVA = "0xD3F474", Offset = "0xD3F474", VA = "0xD3F474")]
		public void SetRenderModel(int renderModelIndex)
		{
		}

		[Token(Token = "0x60014D8")]
		[Address(RVA = "0xD3F4AC", Offset = "0xD3F4AC", VA = "0xD3F4AC")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60014D9")]
		[Address(RVA = "0xD3F508", Offset = "0xD3F508", VA = "0xD3F508")]
		public void setRecenter(Transform recenterTransform)
		{
		}

		[Token(Token = "0x60014DA")]
		[Address(RVA = "0xD36A6C", Offset = "0xD36A6C", VA = "0xD36A6C")]
		public void Recenter(bool bEdit = false)
		{
		}

		[Token(Token = "0x60014DB")]
		[Address(RVA = "0xD3F510", Offset = "0xD3F510", VA = "0xD3F510")]
		public void CalibrateHeight()
		{
		}

		[Token(Token = "0x60014DC")]
		[Address(RVA = "0xD3F56C", Offset = "0xD3F56C", VA = "0xD3F56C")]
		public bool isCalibrated()
		{
			return default(bool);
		}

		[Token(Token = "0x60014DD")]
		[Address(RVA = "0xD3DB78", Offset = "0xD3DB78", VA = "0xD3DB78")]
		public void ResetHeight()
		{
		}

		[Token(Token = "0x60014DE")]
		[Address(RVA = "0xD3F5C4", Offset = "0xD3F5C4", VA = "0xD3F5C4")]
		public void EnableHelpers(bool bValue)
		{
		}

		[Token(Token = "0x60014DF")]
		[Address(RVA = "0xD3F844", Offset = "0xD3F844", VA = "0xD3F844")]
		public SVRIntegration.HMDType GetHMDType()
		{
			return default(SVRIntegration.HMDType);
		}

		[Token(Token = "0x60014E0")]
		[Address(RVA = "0xD3F754", Offset = "0xD3F754", VA = "0xD3F754")]
		private void enableHandHelper(SVRHand hand, bool bValue)
		{
		}

		[Token(Token = "0x60014E1")]
		[Address(RVA = "0xD3F864", Offset = "0xD3F864", VA = "0xD3F864")]
		public SVRPlayer()
		{
		}
	}
	[Token(Token = "0x2000385")]
	public class SVRPlayerMovement : MonoBehaviour
	{
		[Token(Token = "0x40012F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float speed;

		[Token(Token = "0x40012F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public bool lockHeight;

		[Token(Token = "0x40012F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Transform head;

		[Token(Token = "0x40012F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Transform player;

		[Token(Token = "0x40012F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private SVRButtonInputs input;

		[Token(Token = "0x60014E3")]
		[Address(RVA = "0xD3FA10", Offset = "0xD3FA10", VA = "0xD3FA10")]
		private void Start()
		{
		}

		[Token(Token = "0x60014E4")]
		[Address(RVA = "0xD3FB14", Offset = "0xD3FB14", VA = "0xD3FB14")]
		private void Update()
		{
		}

		[Token(Token = "0x60014E5")]
		[Address(RVA = "0xD3FC80", Offset = "0xD3FC80", VA = "0xD3FC80")]
		private bool IsValidInput(float input)
		{
			return default(bool);
		}

		[Token(Token = "0x60014E6")]
		[Address(RVA = "0xD3FCA8", Offset = "0xD3FCA8", VA = "0xD3FCA8")]
		public SVRPlayerMovement()
		{
		}
	}
	[Token(Token = "0x2000386")]
	public class SVRPlayerRotator : MonoBehaviour
	{
		[Token(Token = "0x40012F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float speed;

		[Token(Token = "0x40012F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Transform head;

		[Token(Token = "0x40012F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Transform player;

		[Token(Token = "0x40012F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private SVRButtonInputs input;

		[Token(Token = "0x60014E7")]
		[Address(RVA = "0xD3FCC0", Offset = "0xD3FCC0", VA = "0xD3FCC0")]
		private void Start()
		{
		}

		[Token(Token = "0x60014E8")]
		[Address(RVA = "0xD3FDC4", Offset = "0xD3FDC4", VA = "0xD3FDC4")]
		private void Update()
		{
		}

		[Token(Token = "0x60014E9")]
		[Address(RVA = "0xD3FF7C", Offset = "0xD3FF7C", VA = "0xD3FF7C")]
		private bool IsValidInput(float input)
		{
			return default(bool);
		}

		[Token(Token = "0x60014EA")]
		[Address(RVA = "0xD3FFA4", Offset = "0xD3FFA4", VA = "0xD3FFA4")]
		public SVRPlayerRotator()
		{
		}
	}
	[Token(Token = "0x2000387")]
	public class SVRRenderModel : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000388")]
		public class Bones
		{
			[Token(Token = "0x4001303")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Transform index;

			[Token(Token = "0x4001304")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Transform middle;

			[Token(Token = "0x4001305")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Transform pinky;

			[Token(Token = "0x4001306")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Transform ring;

			[Token(Token = "0x4001307")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Transform thumb;

			[Token(Token = "0x4001308")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public Transform wrist;

			[Token(Token = "0x60014F8")]
			[Address(RVA = "0xD40A14", Offset = "0xD40A14", VA = "0xD40A14")]
			public Bones()
			{
			}
		}

		[Token(Token = "0x40012F9")]
		private const float DEFAULT_LERP_HANDPOSE = 0.15f;

		[Token(Token = "0x40012FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject handModel;

		[Token(Token = "0x40012FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Bones bones;

		[Token(Token = "0x40012FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[HideInInspector]
		public SVRHandPoser handPoser;

		[Token(Token = "0x40012FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private HandPose currentHandPose;

		[Token(Token = "0x40012FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float lerpHandPoseDuration;

		[Token(Token = "0x40012FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float lerpHandPoseTimeElapsed;

		[Token(Token = "0x4001300")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool forced;

		[Token(Token = "0x4001301")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private SVRHand hand;

		[Token(Token = "0x4001302")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Vector3 additionalOffset;

		[Token(Token = "0x60014EB")]
		[Address(RVA = "0xD35800", Offset = "0xD35800", VA = "0xD35800")]
		public void Initialize(SVRHand hand)
		{
		}

		[Token(Token = "0x60014EC")]
		[Address(RVA = "0xD406E4", Offset = "0xD406E4", VA = "0xD406E4")]
		private void Update()
		{
		}

		[Token(Token = "0x60014ED")]
		[Address(RVA = "0xD38840", Offset = "0xD38840", VA = "0xD38840")]
		public void BeginInteraction(SVRInteractable interactable)
		{
		}

		[Token(Token = "0x60014EE")]
		[Address(RVA = "0xD40748", Offset = "0xD40748", VA = "0xD40748")]
		public void ForcePose(SVRInteractable interactable)
		{
		}

		[Token(Token = "0x60014EF")]
		[Address(RVA = "0xD40778", Offset = "0xD40778", VA = "0xD40778")]
		public string GetAdditivePoseActive()
		{
			return null;
		}

		[Token(Token = "0x60014F0")]
		[Address(RVA = "0xD40908", Offset = "0xD40908", VA = "0xD40908")]
		public void ForceAdditivePose(string strPoseName)
		{
		}

		[Token(Token = "0x60014F1")]
		[Address(RVA = "0xD4093C", Offset = "0xD4093C", VA = "0xD4093C")]
		public void ResetPose()
		{
		}

		[Token(Token = "0x60014F2")]
		[Address(RVA = "0xD4099C", Offset = "0xD4099C", VA = "0xD4099C")]
		public void ResetPose(string strPoseName)
		{
		}

		[Token(Token = "0x60014F3")]
		[Address(RVA = "0xD38F0C", Offset = "0xD38F0C", VA = "0xD38F0C")]
		public void NearestHoveringUpdated(SVRInteractable nearestInteractable)
		{
		}

		[Token(Token = "0x60014F4")]
		[Address(RVA = "0xD406E8", Offset = "0xD406E8", VA = "0xD406E8")]
		private void UpdateHandPose()
		{
		}

		[Token(Token = "0x60014F5")]
		[Address(RVA = "0xD4007C", Offset = "0xD4007C", VA = "0xD4007C")]
		public void SetOffset(Vector3 additionalOffset, bool changeRotation = true)
		{
		}

		[Token(Token = "0x60014F6")]
		[Address(RVA = "0xD3FFB4", Offset = "0xD3FFB4", VA = "0xD3FFB4")]
		private void SetHandPose(HandPose handPose, bool allowAdditivePoses = true)
		{
		}

		[Token(Token = "0x60014F7")]
		[Address(RVA = "0xD409FC", Offset = "0xD409FC", VA = "0xD409FC")]
		public SVRRenderModel()
		{
		}
	}
	[Token(Token = "0x2000389")]
	public class SVRScaler : MonoBehaviour
	{
		[Token(Token = "0x4001309")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected static float scale;

		[Token(Token = "0x400130A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		protected static SVRScaler instance;

		[Token(Token = "0x1700012B")]
		public static float WorldScale
		{
			[Token(Token = "0x60014F9")]
			[Address(RVA = "0xD40A1C", Offset = "0xD40A1C", VA = "0xD40A1C")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x60014FA")]
		[Address(RVA = "0xD40A74", Offset = "0xD40A74", VA = "0xD40A74")]
		public static SVRScaler getInstance()
		{
			return null;
		}

		[Token(Token = "0x60014FB")]
		[Address(RVA = "0xD40ACC", Offset = "0xD40ACC", VA = "0xD40ACC")]
		private void Awake()
		{
		}

		[Token(Token = "0x60014FC")]
		[Address(RVA = "0xD40B50", Offset = "0xD40B50", VA = "0xD40B50")]
		public void setScale(float newScale)
		{
		}

		[Token(Token = "0x60014FD")]
		[Address(RVA = "0xD40C00", Offset = "0xD40C00", VA = "0xD40C00")]
		public SVRScaler()
		{
		}
	}
	[Token(Token = "0x200038A")]
	public enum SVRSDKIntegrations
	{
		[Token(Token = "0x400130C")]
		None,
		[Token(Token = "0x400130D")]
		FallbackNonVR,
		[Token(Token = "0x400130E")]
		SteamVR,
		[Token(Token = "0x400130F")]
		Oculus,
		[Token(Token = "0x4001310")]
		PSVR,
		[Token(Token = "0x4001311")]
		Pico,
		[Token(Token = "0x4001312")]
		QiyuVR,
		[Token(Token = "0x4001313")]
		YVR,
		[Token(Token = "0x4001314")]
		NoloVR,
		[Token(Token = "0x4001315")]
		VIVE
	}
	[Token(Token = "0x200038B")]
	public class SVRVIVEInputDevice : SVRInputDevice
	{
		[Token(Token = "0x1700012C")]
		public override bool IsCurrentlyTracked
		{
			[Token(Token = "0x60014FF")]
			[Address(RVA = "0xD40C5C", Offset = "0xD40C5C", VA = "0xD40C5C", Slot = "6")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001500")]
		[Address(RVA = "0xD40C9C", Offset = "0xD40C9C", VA = "0xD40C9C", Slot = "5")]
		public override void SetButtonMapping(ButtonMappingData buttonMapping)
		{
		}

		[Token(Token = "0x6001501")]
		[Address(RVA = "0xD40CDC", Offset = "0xD40CDC", VA = "0xD40CDC", Slot = "10")]
		public override float GetAxis1D(SVRButtons button)
		{
			return default(float);
		}

		[Token(Token = "0x6001502")]
		[Address(RVA = "0xD40D1C", Offset = "0xD40D1C", VA = "0xD40D1C", Slot = "11")]
		public override Vector2 GetAxis2D(SVRButtons button)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6001503")]
		[Address(RVA = "0xD40D5C", Offset = "0xD40D5C", VA = "0xD40D5C", Slot = "8")]
		public override string GetDeviceName()
		{
			return null;
		}

		[Token(Token = "0x6001504")]
		[Address(RVA = "0xD40D9C", Offset = "0xD40D9C", VA = "0xD40D9C", Slot = "20")]
		public override bool GetNearTouch(SVRButtons button)
		{
			return default(bool);
		}

		[Token(Token = "0x6001505")]
		[Address(RVA = "0xD40DDC", Offset = "0xD40DDC", VA = "0xD40DDC", Slot = "18")]
		public override bool GetNearTouchDown(SVRButtons button)
		{
			return default(bool);
		}

		[Token(Token = "0x6001506")]
		[Address(RVA = "0xD40E1C", Offset = "0xD40E1C", VA = "0xD40E1C", Slot = "19")]
		public override bool GetNearTouchUp(SVRButtons button)
		{
			return default(bool);
		}

		[Token(Token = "0x6001507")]
		[Address(RVA = "0xD40E5C", Offset = "0xD40E5C", VA = "0xD40E5C", Slot = "14")]
		public override bool GetPress(SVRButtons button)
		{
			return default(bool);
		}

		[Token(Token = "0x6001508")]
		[Address(RVA = "0xD40E9C", Offset = "0xD40E9C", VA = "0xD40E9C", Slot = "12")]
		public override bool GetPressDown(SVRButtons button)
		{
			return default(bool);
		}

		[Token(Token = "0x6001509")]
		[Address(RVA = "0xD40EDC", Offset = "0xD40EDC", VA = "0xD40EDC", Slot = "13")]
		public override bool GetPressUp(SVRButtons button)
		{
			return default(bool);
		}

		[Token(Token = "0x600150A")]
		[Address(RVA = "0xD40F1C", Offset = "0xD40F1C", VA = "0xD40F1C", Slot = "17")]
		public override bool GetTouch(SVRButtons button)
		{
			return default(bool);
		}

		[Token(Token = "0x600150B")]
		[Address(RVA = "0xD40F5C", Offset = "0xD40F5C", VA = "0xD40F5C", Slot = "15")]
		public override bool GetTouchDown(SVRButtons button)
		{
			return default(bool);
		}

		[Token(Token = "0x600150C")]
		[Address(RVA = "0xD40F9C", Offset = "0xD40F9C", VA = "0xD40F9C", Slot = "16")]
		public override bool GetTouchUp(SVRButtons button)
		{
			return default(bool);
		}

		[Token(Token = "0x600150D")]
		[Address(RVA = "0xD40FDC", Offset = "0xD40FDC", VA = "0xD40FDC", Slot = "7")]
		public override bool ReadyToInitialize()
		{
			return default(bool);
		}

		[Token(Token = "0x600150E")]
		[Address(RVA = "0xD4101C", Offset = "0xD4101C", VA = "0xD4101C", Slot = "9")]
		public override void TriggerHapticPulse(float durationSec = 0.5f, float strength = 0.5f)
		{
		}

		[Token(Token = "0x600150F")]
		[Address(RVA = "0xD4105C", Offset = "0xD4105C", VA = "0xD4105C")]
		public SVRVIVEInputDevice()
		{
		}
	}
	[Token(Token = "0x200038C")]
	public class SVRVIVEIntegration : SVRIntegration
	{
		[Token(Token = "0x6001510")]
		[Address(RVA = "0xD41064", Offset = "0xD41064", VA = "0xD41064", Slot = "4")]
		public override void Initialize(SVRPlayer player)
		{
		}

		[Token(Token = "0x6001511")]
		[Address(RVA = "0xD41068", Offset = "0xD41068", VA = "0xD41068", Slot = "5")]
		public override Vector3 GetPlayspaceBounds()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001512")]
		[Address(RVA = "0xD410AC", Offset = "0xD410AC", VA = "0xD410AC", Slot = "6")]
		public override bool IsHmdPresent()
		{
			return default(bool);
		}

		[Token(Token = "0x6001513")]
		[Address(RVA = "0xD410B4", Offset = "0xD410B4", VA = "0xD410B4", Slot = "7")]
		public override HMDType GetHMDType()
		{
			return default(HMDType);
		}

		[Token(Token = "0x6001514")]
		[Address(RVA = "0xD3ED88", Offset = "0xD3ED88", VA = "0xD3ED88")]
		public SVRVIVEIntegration()
		{
		}
	}
	[Token(Token = "0x200038D")]
	public class SVRYVRInputDevice : SVRInputDevice
	{
		[Token(Token = "0x1700012D")]
		public override bool IsCurrentlyTracked
		{
			[Token(Token = "0x6001515")]
			[Address(RVA = "0xD410BC", Offset = "0xD410BC", VA = "0xD410BC", Slot = "6")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001516")]
		[Address(RVA = "0xD410FC", Offset = "0xD410FC", VA = "0xD410FC", Slot = "10")]
		public override float GetAxis1D(SVRButtons button)
		{
			return default(float);
		}

		[Token(Token = "0x6001517")]
		[Address(RVA = "0xD4113C", Offset = "0xD4113C", VA = "0xD4113C", Slot = "11")]
		public override Vector2 GetAxis2D(SVRButtons button)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6001518")]
		[Address(RVA = "0xD4117C", Offset = "0xD4117C", VA = "0xD4117C", Slot = "8")]
		public override string GetDeviceName()
		{
			return null;
		}

		[Token(Token = "0x6001519")]
		[Address(RVA = "0xD411BC", Offset = "0xD411BC", VA = "0xD411BC", Slot = "20")]
		public override bool GetNearTouch(SVRButtons button)
		{
			return default(bool);
		}

		[Token(Token = "0x600151A")]
		[Address(RVA = "0xD411FC", Offset = "0xD411FC", VA = "0xD411FC", Slot = "18")]
		public override bool GetNearTouchDown(SVRButtons button)
		{
			return default(bool);
		}

		[Token(Token = "0x600151B")]
		[Address(RVA = "0xD4123C", Offset = "0xD4123C", VA = "0xD4123C", Slot = "19")]
		public override bool GetNearTouchUp(SVRButtons button)
		{
			return default(bool);
		}

		[Token(Token = "0x600151C")]
		[Address(RVA = "0xD4127C", Offset = "0xD4127C", VA = "0xD4127C", Slot = "14")]
		public override bool GetPress(SVRButtons button)
		{
			return default(bool);
		}

		[Token(Token = "0x600151D")]
		[Address(RVA = "0xD412BC", Offset = "0xD412BC", VA = "0xD412BC", Slot = "12")]
		public override bool GetPressDown(SVRButtons button)
		{
			return default(bool);
		}

		[Token(Token = "0x600151E")]
		[Address(RVA = "0xD412FC", Offset = "0xD412FC", VA = "0xD412FC", Slot = "13")]
		public override bool GetPressUp(SVRButtons button)
		{
			return default(bool);
		}

		[Token(Token = "0x600151F")]
		[Address(RVA = "0xD4133C", Offset = "0xD4133C", VA = "0xD4133C", Slot = "17")]
		public override bool GetTouch(SVRButtons button)
		{
			return default(bool);
		}

		[Token(Token = "0x6001520")]
		[Address(RVA = "0xD4137C", Offset = "0xD4137C", VA = "0xD4137C", Slot = "15")]
		public override bool GetTouchDown(SVRButtons button)
		{
			return default(bool);
		}

		[Token(Token = "0x6001521")]
		[Address(RVA = "0xD413BC", Offset = "0xD413BC", VA = "0xD413BC", Slot = "16")]
		public override bool GetTouchUp(SVRButtons button)
		{
			return default(bool);
		}

		[Token(Token = "0x6001522")]
		[Address(RVA = "0xD413FC", Offset = "0xD413FC", VA = "0xD413FC", Slot = "7")]
		public override bool ReadyToInitialize()
		{
			return default(bool);
		}

		[Token(Token = "0x6001523")]
		[Address(RVA = "0xD4143C", Offset = "0xD4143C", VA = "0xD4143C", Slot = "5")]
		public override void SetButtonMapping(ButtonMappingData buttonMapping)
		{
		}

		[Token(Token = "0x6001524")]
		[Address(RVA = "0xD4147C", Offset = "0xD4147C", VA = "0xD4147C", Slot = "9")]
		public override void TriggerHapticPulse(float durationSec = 0.5f, float strength = 0.5f)
		{
		}

		[Token(Token = "0x6001525")]
		[Address(RVA = "0xD414BC", Offset = "0xD414BC", VA = "0xD414BC")]
		public SVRYVRInputDevice()
		{
		}
	}
	[Token(Token = "0x200038E")]
	public class SVRYVRIntegration : SVRIntegration
	{
		[Token(Token = "0x6001526")]
		[Address(RVA = "0xD414C4", Offset = "0xD414C4", VA = "0xD414C4", Slot = "5")]
		public override Vector3 GetPlayspaceBounds()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001527")]
		[Address(RVA = "0xD41508", Offset = "0xD41508", VA = "0xD41508", Slot = "4")]
		public override void Initialize(SVRPlayer player)
		{
		}

		[Token(Token = "0x6001528")]
		[Address(RVA = "0xD4150C", Offset = "0xD4150C", VA = "0xD4150C", Slot = "6")]
		public override bool IsHmdPresent()
		{
			return default(bool);
		}

		[Token(Token = "0x6001529")]
		[Address(RVA = "0xD41514", Offset = "0xD41514", VA = "0xD41514", Slot = "7")]
		public override HMDType GetHMDType()
		{
			return default(HMDType);
		}

		[Token(Token = "0x600152A")]
		[Address(RVA = "0xD3ED78", Offset = "0xD3ED78", VA = "0xD3ED78")]
		public SVRYVRIntegration()
		{
		}
	}
	[Token(Token = "0x200038F")]
	public class HandPositionHelper : SVRInteractable
	{
		[Token(Token = "0x4001316")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public Vector3 deltaPosition;

		[Token(Token = "0x4001317")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		public Vector3 deltaRotation;

		[Token(Token = "0x600152B")]
		[Address(RVA = "0xD4151C", Offset = "0xD4151C", VA = "0xD4151C", Slot = "9")]
		public override void BeginInteraction(SVRHand hand)
		{
		}

		[Token(Token = "0x600152C")]
		[Address(RVA = "0xD41758", Offset = "0xD41758", VA = "0xD41758")]
		public HandPositionHelper()
		{
		}
	}
	[Token(Token = "0x2000390")]
	public class LoadSaveData
	{
		[Token(Token = "0x2000391")]
		public enum LoadSaveResult
		{
			[Token(Token = "0x400131C")]
			Ok,
			[Token(Token = "0x400131D")]
			CorruptFile,
			[Token(Token = "0x400131E")]
			GenericError,
			[Token(Token = "0x400131F")]
			NoData,
			[Token(Token = "0x4001320")]
			TimeOut
		}

		[Token(Token = "0x4001318")]
		private const string SLASH = "/";

		[Token(Token = "0x4001319")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static string uid;

		[Token(Token = "0x400131A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static bool initialized;

		[Token(Token = "0x600152D")]
		[Address(RVA = "0xD417AC", Offset = "0xD417AC", VA = "0xD417AC")]
		public static void Initialize()
		{
		}

		[Token(Token = "0x600152E")]
		public static void LoadFile<T>(string fileName, Action<LoadSaveResult, T> onLoadComplete, bool bUsePlayerID = true)
		{
		}

		[Token(Token = "0x600152F")]
		public static void SavePrefs<T>(string pref, T data)
		{
		}

		[Token(Token = "0x6001530")]
		public static T LoadPrefs<T>(string pref)
		{
			return (T)null;
		}

		[Token(Token = "0x6001531")]
		public static void SaveFile<T>(string fileName, T data, Action<LoadSaveResult> onSaveComplete, bool usePlayerID = true)
		{
		}

		[Token(Token = "0x6001532")]
		[Address(RVA = "0xD41888", Offset = "0xD41888", VA = "0xD41888")]
		public LoadSaveData()
		{
		}
	}
	[Token(Token = "0x2000393")]
	public class LookAt : MonoBehaviour
	{
		[Token(Token = "0x4001323")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool headLookAt;

		[Token(Token = "0x4001324")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject objectToLookAt;

		[Token(Token = "0x4001325")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Vector3 lookAtAxis;

		[Token(Token = "0x6001537")]
		[Address(RVA = "0xD419E4", Offset = "0xD419E4", VA = "0xD419E4")]
		private void Start()
		{
		}

		[Token(Token = "0x6001538")]
		[Address(RVA = "0xD41AF4", Offset = "0xD41AF4", VA = "0xD41AF4")]
		private void Update()
		{
		}

		[Token(Token = "0x6001539")]
		[Address(RVA = "0xD41BE0", Offset = "0xD41BE0", VA = "0xD41BE0")]
		public LookAt()
		{
		}
	}
	[Token(Token = "0x2000394")]
	public static class SumalabUtil
	{
		[Token(Token = "0x600153A")]
		[Address(RVA = "0xD41C40", Offset = "0xD41C40", VA = "0xD41C40")]
		public static float RemapNumber(float num, float low1, float high1, float low2, float high2)
		{
			return default(float);
		}

		[Token(Token = "0x600153B")]
		[Address(RVA = "0xD41C5C", Offset = "0xD41C5C", VA = "0xD41C5C")]
		public static float RemapNumberClamped(float num, float low1, float high1, float low2, float high2)
		{
			return default(float);
		}

		[Token(Token = "0x600153C")]
		[Address(RVA = "0xD41C94", Offset = "0xD41C94", VA = "0xD41C94")]
		public static void ResetTransform(Transform t, bool resetScale = true)
		{
		}

		[Token(Token = "0x600153D")]
		public static bool IsNullOrEmpty<T>(T[] array)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000395")]
	public class SVRInteractableContainer : MonoBehaviour
	{
		[Token(Token = "0x4001326")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Dictionary<SVRInteractable, List<Collider>> insideObjects;

		[Token(Token = "0x600153E")]
		[Address(RVA = "0xD41D64", Offset = "0xD41D64", VA = "0xD41D64")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x600153F")]
		[Address(RVA = "0xD42008", Offset = "0xD42008", VA = "0xD42008")]
		private void OnTriggerExit(Collider other)
		{
		}

		[Token(Token = "0x6001540")]
		[Address(RVA = "0xD4219C", Offset = "0xD4219C", VA = "0xD4219C")]
		public SVRInteractableContainer()
		{
		}
	}
	[Token(Token = "0x2000396")]
	public class SVRLinearAnimator : MonoBehaviour
	{
		[Token(Token = "0x4001327")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float value;

		[Token(Token = "0x4001328")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Animator animator;

		[Token(Token = "0x4001329")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float currentValue;

		[Token(Token = "0x400132A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private int framesUnchanged;

		[Token(Token = "0x6001541")]
		[Address(RVA = "0xD42224", Offset = "0xD42224", VA = "0xD42224")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001542")]
		[Address(RVA = "0xD422DC", Offset = "0xD422DC", VA = "0xD422DC")]
		private void Update()
		{
		}

		[Token(Token = "0x6001543")]
		[Address(RVA = "0xD42368", Offset = "0xD42368", VA = "0xD42368")]
		public SVRLinearAnimator()
		{
		}
	}
}
namespace SumalabVR.Utils
{
	[Token(Token = "0x2000397")]
	public class SVRLaserPointer : MonoBehaviour
	{
		[Token(Token = "0x400132B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static SumalabEvent OnLaserPointerEvent;

		[Token(Token = "0x400132C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static bool laserEnabled;

		[Token(Token = "0x400132D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9")]
		private static bool laserEquipped;

		[Token(Token = "0x400132E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA")]
		private static bool remoteLaserEnabled;

		[Token(Token = "0x400132F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject holder;

		[Token(Token = "0x4001330")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject pointer;

		[Token(Token = "0x4001331")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Vector3 axis;

		[Token(Token = "0x4001332")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float thickness;

		[Token(Token = "0x4001333")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float maxDistance;

		[Token(Token = "0x4001334")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private ISVRLaserPointable previousContact;

		[Token(Token = "0x4001335")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private RaycastHit hit;

		[Token(Token = "0x4001336")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Weapon weapon;

		[Token(Token = "0x6001544")]
		[Address(RVA = "0xD42378", Offset = "0xD42378", VA = "0xD42378")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001545")]
		[Address(RVA = "0xD42640", Offset = "0xD42640", VA = "0xD42640")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001546")]
		[Address(RVA = "0xD426F8", Offset = "0xD426F8", VA = "0xD426F8")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001547")]
		[Address(RVA = "0xD42588", Offset = "0xD42588", VA = "0xD42588")]
		private void OnLaserPointerStateChanged()
		{
		}

		[Token(Token = "0x6001548")]
		[Address(RVA = "0xD427D8", Offset = "0xD427D8", VA = "0xD427D8")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001549")]
		[Address(RVA = "0xD42888", Offset = "0xD42888", VA = "0xD42888")]
		private void Update()
		{
		}

		[Token(Token = "0x600154A")]
		[Address(RVA = "0xD42D90", Offset = "0xD42D90", VA = "0xD42D90")]
		public static void SetLaserPointer(bool enable)
		{
		}

		[Token(Token = "0x600154B")]
		[Address(RVA = "0xD42DFC", Offset = "0xD42DFC", VA = "0xD42DFC")]
		public static void SetLaserPointerEquipped(bool enable)
		{
		}

		[Token(Token = "0x600154C")]
		[Address(RVA = "0xD42E68", Offset = "0xD42E68", VA = "0xD42E68")]
		public static void SetRemoteLaserPointer(bool enable)
		{
		}

		[Token(Token = "0x600154D")]
		[Address(RVA = "0xD42ED4", Offset = "0xD42ED4", VA = "0xD42ED4")]
		public static bool GetLaserPointerEquipped()
		{
			return default(bool);
		}

		[Token(Token = "0x600154E")]
		[Address(RVA = "0xD42F2C", Offset = "0xD42F2C", VA = "0xD42F2C")]
		public static bool GetLaserPointer()
		{
			return default(bool);
		}

		[Token(Token = "0x600154F")]
		[Address(RVA = "0xD426FC", Offset = "0xD426FC", VA = "0xD426FC")]
		public bool isRemote()
		{
			return default(bool);
		}

		[Token(Token = "0x6001550")]
		[Address(RVA = "0xD42F84", Offset = "0xD42F84", VA = "0xD42F84")]
		public SVRLaserPointer()
		{
		}
	}
}
namespace SumalabVR.Audio
{
	[Token(Token = "0x2000398")]
	public class AudioController : MonoBehaviour
	{
		[Token(Token = "0x4001337")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private AudioSource audio2D;

		[Token(Token = "0x4001338")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private AudioSource[] audio3DPool;

		[Token(Token = "0x4001339")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int audio3DPoolIndex;

		[Token(Token = "0x6001552")]
		[Address(RVA = "0xD43030", Offset = "0xD43030", VA = "0xD43030")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001553")]
		[Address(RVA = "0xD4311C", Offset = "0xD4311C", VA = "0xD4311C")]
		public void init(AudioMixerGroup group, int poolSize)
		{
		}

		[Token(Token = "0x6001554")]
		[Address(RVA = "0xD43390", Offset = "0xD43390", VA = "0xD43390")]
		private AudioSource create3DAudioSource(AudioMixerGroup group, Transform parent)
		{
			return null;
		}

		[Token(Token = "0x6001555")]
		[Address(RVA = "0xD43314", Offset = "0xD43314", VA = "0xD43314")]
		private AudioSource create2DAudioSource(AudioMixerGroup group, Transform parent)
		{
			return null;
		}

		[Token(Token = "0x6001556")]
		[Address(RVA = "0xD4340C", Offset = "0xD4340C", VA = "0xD4340C")]
		private AudioSource createAudioSource(AudioMixerGroup group, Transform parent)
		{
			return null;
		}

		[Token(Token = "0x6001557")]
		[Address(RVA = "0xD434C8", Offset = "0xD434C8", VA = "0xD434C8")]
		public void Play(SoundEffect effect, Vector3 position, float volume = 1f, float minDistance = 5f)
		{
		}

		[Token(Token = "0x6001558")]
		[Address(RVA = "0xD43718", Offset = "0xD43718", VA = "0xD43718")]
		public void Play(AudioClip clip, Vector3 position, float volume = 1f, float minDistance = 5f)
		{
		}

		[Token(Token = "0x6001559")]
		[Address(RVA = "0xD4388C", Offset = "0xD4388C", VA = "0xD4388C")]
		public void Play(AudioClip clip, float volume = 1f)
		{
		}

		[Token(Token = "0x600155A")]
		[Address(RVA = "0xD438A8", Offset = "0xD438A8", VA = "0xD438A8")]
		public void Play(SoundEffect effect, float volume = 1f)
		{
		}

		[Token(Token = "0x600155B")]
		[Address(RVA = "0xD43944", Offset = "0xD43944", VA = "0xD43944")]
		public void Stop()
		{
		}

		[Token(Token = "0x600155C")]
		[Address(RVA = "0xD43960", Offset = "0xD43960", VA = "0xD43960")]
		public AudioController()
		{
		}
	}
	[Token(Token = "0x2000399")]
	public enum AudioGroup
	{
		[Token(Token = "0x400133B")]
		Master,
		[Token(Token = "0x400133C")]
		Player,
		[Token(Token = "0x400133D")]
		Weapon,
		[Token(Token = "0x400133E")]
		Characters,
		[Token(Token = "0x400133F")]
		WalkieTalkie,
		[Token(Token = "0x4001340")]
		Music,
		[Token(Token = "0x4001341")]
		AnimationSound,
		[Token(Token = "0x4001342")]
		Explosions,
		[Token(Token = "0x4001343")]
		Ambient,
		[Token(Token = "0x4001344")]
		BossEnemy,
		[Token(Token = "0x4001345")]
		AutodestructionAlarm,
		[Token(Token = "0x4001346")]
		Samurai,
		[Token(Token = "0x4001347")]
		AgentsSmith,
		[Token(Token = "0x4001348")]
		NPCWeapon,
		[Token(Token = "0x4001349")]
		SoundEffect
	}
	[Token(Token = "0x200039A")]
	public enum SoundEffect
	{
		[Token(Token = "0x400134B")]
		_none = 0,
		[Token(Token = "0x400134C")]
		carpet = 2,
		[Token(Token = "0x400134D")]
		wood = 64,
		[Token(Token = "0x400134E")]
		metal = 4,
		[Token(Token = "0x400134F")]
		glass = 5,
		[Token(Token = "0x4001350")]
		plastic = 6,
		[Token(Token = "0x4001351")]
		cardboard = 7,
		[Token(Token = "0x4001352")]
		attach = 8,
		[Token(Token = "0x4001353")]
		recoil = 13,
		[Token(Token = "0x4001354")]
		empty_gun_clic = 14,
		[Token(Token = "0x4001355")]
		impact_standard = 15,
		[Token(Token = "0x4001356")]
		impact_glass = 16,
		[Token(Token = "0x4001357")]
		impact_human = 17,
		[Token(Token = "0x4001358")]
		impact_metal_low = 18,
		[Token(Token = "0x4001359")]
		impact_metal_high = 76,
		[Token(Token = "0x400135A")]
		impact_sofa = 19,
		[Token(Token = "0x400135B")]
		impact_bell = 60,
		[Token(Token = "0x400135C")]
		impact_car = 61,
		[Token(Token = "0x400135D")]
		impact_electric = 62,
		[Token(Token = "0x400135E")]
		impact_ground = 63,
		[Token(Token = "0x400135F")]
		impact_wood = 3,
		[Token(Token = "0x4001360")]
		impact_ceramic = 9,
		[Token(Token = "0x4001361")]
		impact_box = 24,
		[Token(Token = "0x4001362")]
		impact_chuache = 79,
		[Token(Token = "0x4001363")]
		impact_chain = 82,
		[Token(Token = "0x4001364")]
		bullet_flyby = 20,
		[Token(Token = "0x4001365")]
		bullet_shell = 21,
		[Token(Token = "0x4001366")]
		bullet_ricochet = 65,
		[Token(Token = "0x4001367")]
		holster_in = 22,
		[Token(Token = "0x4001368")]
		holster_out = 23,
		[Token(Token = "0x4001369")]
		barrel = 26,
		[Token(Token = "0x400136A")]
		kill_fem = 27,
		[Token(Token = "0x400136B")]
		kill_mas = 28,
		[Token(Token = "0x400136C")]
		kill_zombie = 78,
		[Token(Token = "0x400136D")]
		take_can = 29,
		[Token(Token = "0x400136E")]
		player_hit = 30,
		[Token(Token = "0x400136F")]
		player_die = 31,
		[Token(Token = "0x4001370")]
		player_breath = 32,
		[Token(Token = "0x4001371")]
		ak47_drop_magazine = 33,
		[Token(Token = "0x4001372")]
		ak47_in_magazine = 34,
		[Token(Token = "0x4001373")]
		ak47_reload_in = 35,
		[Token(Token = "0x4001374")]
		ak47_reload_out = 36,
		[Token(Token = "0x4001375")]
		ak47_shot = 37,
		[Token(Token = "0x4001376")]
		cx8_reload_in = 38,
		[Token(Token = "0x4001377")]
		cx8_reload_out = 39,
		[Token(Token = "0x4001378")]
		cx8_shot = 40,
		[Token(Token = "0x4001379")]
		luger_reload_in = 41,
		[Token(Token = "0x400137A")]
		luger_reload_out = 42,
		[Token(Token = "0x400137B")]
		luger_shot = 43,
		[Token(Token = "0x400137C")]
		m16_drop_magazine = 44,
		[Token(Token = "0x400137D")]
		m16_in_magazine = 45,
		[Token(Token = "0x400137E")]
		m16_reload_in = 46,
		[Token(Token = "0x400137F")]
		m16_reload_out = 47,
		[Token(Token = "0x4001380")]
		m16_shot = 48,
		[Token(Token = "0x4001381")]
		mk18_reload_in = 49,
		[Token(Token = "0x4001382")]
		mk18_reload_out = 50,
		[Token(Token = "0x4001383")]
		mk18_shot = 51,
		[Token(Token = "0x4001384")]
		mp5_shot = 52,
		[Token(Token = "0x4001385")]
		p350_drop_magazine = 53,
		[Token(Token = "0x4001386")]
		p350_in_magazine = 54,
		[Token(Token = "0x4001387")]
		p350_reload_in = 55,
		[Token(Token = "0x4001388")]
		p350_reload_out = 56,
		[Token(Token = "0x4001389")]
		p350_shot = 57,
		[Token(Token = "0x400138A")]
		r90_shot = 58,
		[Token(Token = "0x400138B")]
		grenade_launcher_shot = 59,
		[Token(Token = "0x400138C")]
		c1911_shot = 66,
		[Token(Token = "0x400138D")]
		c1911_drop_magazine = 67,
		[Token(Token = "0x400138E")]
		c1911_in_magazine = 68,
		[Token(Token = "0x400138F")]
		c1911_reload_in = 69,
		[Token(Token = "0x4001390")]
		c1911_reload_out = 70,
		[Token(Token = "0x4001391")]
		pt8_shot = 71,
		[Token(Token = "0x4001392")]
		pt8_reload_in = 72,
		[Token(Token = "0x4001393")]
		pt8_reload_out = 73,
		[Token(Token = "0x4001394")]
		rpg_shot = 74,
		[Token(Token = "0x4001395")]
		shotgun_shot = 77,
		[Token(Token = "0x4001396")]
		explosion_beep = 75,
		[Token(Token = "0x4001397")]
		duck_cuack = 80,
		[Token(Token = "0x4001398")]
		duck_squeak = 81,
		[Token(Token = "0x4001399")]
		revolver_shot = 83,
		[Token(Token = "0x400139A")]
		revolver_open_barrel = 84,
		[Token(Token = "0x400139B")]
		revolver_rotate_barrel = 85,
		[Token(Token = "0x400139C")]
		uzi_shot = 86,
		[Token(Token = "0x400139D")]
		robocop_shot = 87
	}
	[Token(Token = "0x200039B")]
	public class SoundEffectsController : MonoBehaviour
	{
		[Token(Token = "0x400139E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static string SLASH;

		[Token(Token = "0x400139F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static SoundEffectsController Instance;

		[Token(Token = "0x40013A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string soundEffectsPath;

		[Token(Token = "0x40013A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Dictionary<SoundEffect, List<AudioClip>> clips;

		[Token(Token = "0x40013A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Type typeCache;

		[Token(Token = "0x1700012E")]
		private Type TypeCache
		{
			[Token(Token = "0x600155D")]
			[Address(RVA = "0xD43968", Offset = "0xD43968", VA = "0xD43968")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600155E")]
		[Address(RVA = "0xD43A18", Offset = "0xD43A18", VA = "0xD43A18")]
		private void Awake()
		{
		}

		[Token(Token = "0x600155F")]
		[Address(RVA = "0xD43A80", Offset = "0xD43A80", VA = "0xD43A80")]
		private void loadClips()
		{
		}

		[Token(Token = "0x6001560")]
		[Address(RVA = "0xD43588", Offset = "0xD43588", VA = "0xD43588")]
		public AudioClip getRandomClip(SoundEffect soundEffect)
		{
			return null;
		}

		[Token(Token = "0x6001561")]
		[Address(RVA = "0xD43F10", Offset = "0xD43F10", VA = "0xD43F10")]
		public List<AudioClip> getClips(SoundEffect soundEffect)
		{
			return null;
		}

		[Token(Token = "0x6001562")]
		[Address(RVA = "0xD43DD8", Offset = "0xD43DD8", VA = "0xD43DD8")]
		private SoundEffect? Parse(string materialString)
		{
			return null;
		}

		[Token(Token = "0x6001563")]
		[Address(RVA = "0xD4406C", Offset = "0xD4406C", VA = "0xD4406C")]
		public SoundEffectsController()
		{
		}
	}
	[Token(Token = "0x200039C")]
	public class SVRAudioManager : MonoBehaviour
	{
		[Token(Token = "0x200039D")]
		public enum Language
		{
			[Token(Token = "0x40013AD")]
			eng,
			[Token(Token = "0x40013AE")]
			spa
		}

		[Token(Token = "0x40013A3")]
		private const string LANGUAGE_CLIPS_PATH = "LanguageSounds";

		[Token(Token = "0x40013A4")]
		private const string VOLUME = "_volume";

		[Token(Token = "0x40013A5")]
		private const string PITCH = "_pitch";

		[Token(Token = "0x40013A6")]
		private const string SLASH = "/";

		[Token(Token = "0x40013A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static SVRAudioManager Instance;

		[Token(Token = "0x40013A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Language language;

		[Token(Token = "0x40013A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AudioMixer audioMixer;

		[Token(Token = "0x40013AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public AudioMixerSnapshot[] SoundConfigurations;

		[Token(Token = "0x40013AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Dictionary<AudioGroup, AudioController> groupAudio;

		[Token(Token = "0x6001565")]
		[Address(RVA = "0xD4418C", Offset = "0xD4418C", VA = "0xD4418C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001566")]
		[Address(RVA = "0xD44368", Offset = "0xD44368", VA = "0xD44368")]
		public AudioController getAudioController(AudioGroup group)
		{
			return null;
		}

		[Token(Token = "0x6001567")]
		[Address(RVA = "0xD443C0", Offset = "0xD443C0", VA = "0xD443C0")]
		public void setVolume(float newVolume)
		{
		}

		[Token(Token = "0x6001568")]
		[Address(RVA = "0xD44424", Offset = "0xD44424", VA = "0xD44424")]
		public void setVolume(List<AudioGroup> groups, float newVolume)
		{
		}

		[Token(Token = "0x6001569")]
		[Address(RVA = "0xD445EC", Offset = "0xD445EC", VA = "0xD445EC")]
		public float getVolume()
		{
			return default(float);
		}

		[Token(Token = "0x600156A")]
		[Address(RVA = "0xD44650", Offset = "0xD44650", VA = "0xD44650")]
		public void setPitch(float newPitch)
		{
		}

		[Token(Token = "0x600156B")]
		[Address(RVA = "0xD446B4", Offset = "0xD446B4", VA = "0xD446B4")]
		public void setPitch(List<AudioGroup> groups, float newPitch)
		{
		}

		[Token(Token = "0x600156C")]
		[Address(RVA = "0xD4487C", Offset = "0xD4487C", VA = "0xD4487C")]
		public static AudioClip getClip(string clipName)
		{
			return null;
		}

		[Token(Token = "0x600156D")]
		[Address(RVA = "0xD448C4", Offset = "0xD448C4", VA = "0xD448C4")]
		public static AudioClip getLanguageClip(string clipName)
		{
			return null;
		}

		[Token(Token = "0x600156E")]
		[Address(RVA = "0xD44A48", Offset = "0xD44A48", VA = "0xD44A48")]
		public SVRAudioManager()
		{
		}
	}
	[Token(Token = "0x200039E")]
	public class SVRSoundPlayOneshot : MonoBehaviour
	{
		[Token(Token = "0x40013AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AudioClip[] waveFiles;

		[Token(Token = "0x40013B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private AudioSource thisAudioSource;

		[Token(Token = "0x40013B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float volMin;

		[Token(Token = "0x40013B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float volMax;

		[Token(Token = "0x40013B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float pitchMin;

		[Token(Token = "0x40013B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float pitchMax;

		[Token(Token = "0x40013B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public bool playOnAwake;

		[Token(Token = "0x600156F")]
		[Address(RVA = "0xD44AD0", Offset = "0xD44AD0", VA = "0xD44AD0")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001570")]
		[Address(RVA = "0xD44B48", Offset = "0xD44B48", VA = "0xD44B48")]
		public void Play()
		{
		}

		[Token(Token = "0x6001571")]
		[Address(RVA = "0xD44C78", Offset = "0xD44C78", VA = "0xD44C78")]
		public void Pause()
		{
		}

		[Token(Token = "0x6001572")]
		[Address(RVA = "0xD44CFC", Offset = "0xD44CFC", VA = "0xD44CFC")]
		public void UnPause()
		{
		}

		[Token(Token = "0x6001573")]
		[Address(RVA = "0xD44D80", Offset = "0xD44D80", VA = "0xD44D80")]
		public SVRSoundPlayOneshot()
		{
		}
	}
}
namespace SumalabVR.Weapons
{
	[Token(Token = "0x200039F")]
	public class HitTargetRigidbody : HitTarget
	{
		[Token(Token = "0x40013B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Rigidbody rigidBody;

		[Token(Token = "0x6001574")]
		[Address(RVA = "0xD44D88", Offset = "0xD44D88", VA = "0xD44D88")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001575")]
		[Address(RVA = "0xD44DE0", Offset = "0xD44DE0", VA = "0xD44DE0", Slot = "4")]
		public override bool OnHit(Bullet bullet, Ray ray, RaycastHit hit)
		{
			return default(bool);
		}

		[Token(Token = "0x6001576")]
		[Address(RVA = "0xD44F20", Offset = "0xD44F20", VA = "0xD44F20")]
		public HitTargetRigidbody()
		{
		}
	}
	[Token(Token = "0x20003A0")]
	public class SVRArrow : MonoBehaviour
	{
		[Token(Token = "0x40013B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ParticleSystem glintParticle;

		[Token(Token = "0x40013B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Rigidbody arrowHeadRB;

		[Token(Token = "0x40013B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Rigidbody shaftRB;

		[Token(Token = "0x40013BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public PhysicMaterial targetPhysMaterial;

		[Token(Token = "0x40013BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Vector3 prevPosition;

		[Token(Token = "0x40013BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private Quaternion prevRotation;

		[Token(Token = "0x40013BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private Vector3 prevVelocity;

		[Token(Token = "0x40013BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Vector3 prevHeadPosition;

		[Token(Token = "0x40013BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public SVRSoundPlayOneshot airReleaseSound;

		[Token(Token = "0x40013C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public SVRSoundPlayOneshot hitTargetSound;

		[Token(Token = "0x40013C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private bool inFlight;

		[Token(Token = "0x40013C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x81")]
		private bool released;

		[Token(Token = "0x40013C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x82")]
		private bool hasSpreadFire;

		[Token(Token = "0x40013C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private int travelledFrames;

		[Token(Token = "0x40013C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private GameObject scaleParentObject;

		[Token(Token = "0x6001577")]
		[Address(RVA = "0xD44F28", Offset = "0xD44F28", VA = "0xD44F28")]
		private void Start()
		{
		}

		[Token(Token = "0x6001578")]
		[Address(RVA = "0xD44F2C", Offset = "0xD44F2C", VA = "0xD44F2C")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6001579")]
		[Address(RVA = "0xD45010", Offset = "0xD45010", VA = "0xD45010")]
		public void ArrowReleased(float inputVelocity)
		{
		}

		[Token(Token = "0x600157A")]
		[Address(RVA = "0xD45364", Offset = "0xD45364", VA = "0xD45364")]
		protected void SetCollisionMode(CollisionDetectionMode newMode, bool force = false)
		{
		}

		[Token(Token = "0x600157B")]
		[Address(RVA = "0xD45434", Offset = "0xD45434", VA = "0xD45434")]
		private void OnCollisionEnter(Collision collision)
		{
		}

		[Token(Token = "0x600157C")]
		[Address(RVA = "0xD4572C", Offset = "0xD4572C", VA = "0xD4572C")]
		private void StickInTarget(Collision collision, bool bSkipRayCast)
		{
		}

		[Token(Token = "0x600157D")]
		[Address(RVA = "0xD45DC4", Offset = "0xD45DC4", VA = "0xD45DC4")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x600157E")]
		[Address(RVA = "0xD45E54", Offset = "0xD45E54", VA = "0xD45E54")]
		public SVRArrow()
		{
		}
	}
	[Token(Token = "0x20003A1")]
	public class SVRArrowHand : SVRInteractable
	{
		[StructLayout(3)]
		[Token(Token = "0x20003A2")]
		[CompilerGenerated]
		private struct <ArrowReleaseHaptics>d__19 : IAsyncStateMachine
		{
			[Token(Token = "0x40013D3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x40013D4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncVoidMethodBuilder <>t__builder;

			[Token(Token = "0x40013D5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public SVRHand hand;

			[Token(Token = "0x40013D6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private TaskAwaiter <>u__1;

			[Token(Token = "0x6001587")]
			[Address(RVA = "0xD46AAC", Offset = "0xD46AAC", VA = "0xD46AAC", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6001588")]
			[Address(RVA = "0xD46FB8", Offset = "0xD46FB8", VA = "0xD46FB8", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x40013C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private SVRLongbow bow;

		[Token(Token = "0x40013C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private SVRArrow currentArrow;

		[Token(Token = "0x40013C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public string arrowPool;

		[Token(Token = "0x40013C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		public Transform arrowNockTransform;

		[Token(Token = "0x40013CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		public float nockDistance;

		[Token(Token = "0x40013CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		public float lerpCompleteDistance;

		[Token(Token = "0x40013CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		public float rotationLerpThreshold;

		[Token(Token = "0x40013CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		public float positionLerpThreshold;

		[Token(Token = "0x40013CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		[SerializeField]
		private bool nocked;

		[Token(Token = "0x40013CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE9")]
		private bool inNockRange;

		[Token(Token = "0x40013D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEA")]
		private bool arrowLerpComplete;

		[Token(Token = "0x40013D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		public SVRSoundPlayOneshot arrowSpawnSound;

		[Token(Token = "0x40013D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private InterationStyle previousInteractionStyle;

		[Token(Token = "0x600157F")]
		[Address(RVA = "0xD45E5C", Offset = "0xD45E5C", VA = "0xD45E5C", Slot = "5")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6001580")]
		[Address(RVA = "0xD45EC0", Offset = "0xD45EC0", VA = "0xD45EC0", Slot = "9")]
		public override void BeginInteraction(SVRHand hand)
		{
		}

		[Token(Token = "0x6001581")]
		[Address(RVA = "0xD46028", Offset = "0xD46028", VA = "0xD46028", Slot = "15")]
		public override void EndInteraction(SVRHand hand)
		{
		}

		[Token(Token = "0x6001582")]
		[Address(RVA = "0xD45F20", Offset = "0xD45F20", VA = "0xD45F20")]
		private SVRArrow InstantiateArrow()
		{
			return null;
		}

		[Token(Token = "0x6001583")]
		[Address(RVA = "0xD4605C", Offset = "0xD4605C", VA = "0xD4605C", Slot = "10")]
		public override void InteractingUpdate(SVRHand hand)
		{
		}

		[Token(Token = "0x6001584")]
		[Address(RVA = "0xD4660C", Offset = "0xD4660C", VA = "0xD4660C")]
		private void FireArrow()
		{
		}

		[Token(Token = "0x6001585")]
		[Address(RVA = "0xD46990", Offset = "0xD46990", VA = "0xD46990")]
		[AsyncStateMachine(typeof(<ArrowReleaseHaptics>d__19))]
		private void ArrowReleaseHaptics(SVRHand hand)
		{
		}

		[Token(Token = "0x6001586")]
		[Address(RVA = "0xD46A48", Offset = "0xD46A48", VA = "0xD46A48")]
		public SVRArrowHand()
		{
		}
	}
	[Token(Token = "0x20003A3")]
	public class SVRArrowSpawner : SVRInteractable
	{
		[Token(Token = "0x40013D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public SVRArrowHand arrowHand;

		[Token(Token = "0x6001589")]
		[Address(RVA = "0xD46FC4", Offset = "0xD46FC4", VA = "0xD46FC4")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x600158A")]
		[Address(RVA = "0xD47154", Offset = "0xD47154", VA = "0xD47154")]
		public SVRArrowSpawner()
		{
		}
	}
	[Token(Token = "0x20003A4")]
	public class SVRLongbow : SVRInteractable
	{
		[Token(Token = "0x20003A5")]
		public enum Handedness
		{
			[Token(Token = "0x4001400")]
			Left,
			[Token(Token = "0x4001401")]
			Right
		}

		[Token(Token = "0x20003A6")]
		[CompilerGenerated]
		private sealed class <ResetDrawAnim>d__44 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001402")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001403")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001404")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SVRLongbow <>4__this;

			[Token(Token = "0x4001405")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <startTime>5__2;

			[Token(Token = "0x4001406")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float <startLerp>5__3;

			[Token(Token = "0x1700012F")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600159B")]
				[Address(RVA = "0xD47EA0", Offset = "0xD47EA0", VA = "0xD47EA0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000130")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600159D")]
				[Address(RVA = "0xD47EE8", Offset = "0xD47EE8", VA = "0xD47EE8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001598")]
			[Address(RVA = "0xD47CA8", Offset = "0xD47CA8", VA = "0xD47CA8")]
			[DebuggerHidden]
			public <ResetDrawAnim>d__44(int <>1__state)
			{
			}

			[Token(Token = "0x6001599")]
			[Address(RVA = "0xD47DB4", Offset = "0xD47DB4", VA = "0xD47DB4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600159A")]
			[Address(RVA = "0xD47DB8", Offset = "0xD47DB8", VA = "0xD47DB8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600159C")]
			[Address(RVA = "0xD47EA8", Offset = "0xD47EA8", VA = "0xD47EA8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40013D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public Handedness currentHandGuess;

		[Token(Token = "0x40013D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		private float timeOfPossibleHandSwitch;

		[Token(Token = "0x40013DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private float timeBeforeConfirmingHandSwitch;

		[Token(Token = "0x40013DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		private bool possibleHandSwitch;

		[Token(Token = "0x40013DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public Transform pivotTransform;

		[Token(Token = "0x40013DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		public Transform handleTransform;

		[Token(Token = "0x40013DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[SerializeField]
		private SVRArrowHand arrowHand;

		[Token(Token = "0x40013DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		public Transform nockTransform;

		[Token(Token = "0x40013E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		public Transform nockRestTransform;

		[Token(Token = "0x40013E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		[SerializeField]
		public bool nocked;

		[Token(Token = "0x40013E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF1")]
		[SerializeField]
		public bool pulled;

		[Token(Token = "0x40013E3")]
		private const float minPull = 0.05f;

		[Token(Token = "0x40013E4")]
		private const float maxPull = 0.5f;

		[Token(Token = "0x40013E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
		private float nockDistanceTravelled;

		[Token(Token = "0x40013E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private float hapticDistanceThreshold;

		[Token(Token = "0x40013E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
		private float lastTickDistance;

		[Token(Token = "0x40013E8")]
		private const float bowPullPulseStrengthLow = 100f;

		[Token(Token = "0x40013E9")]
		private const float bowPullPulseStrengthHigh = 500f;

		[Token(Token = "0x40013EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		private Vector3 bowLeftVector;

		[Token(Token = "0x40013EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
		public float arrowMinVelocity;

		[Token(Token = "0x40013EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		public float arrowMaxVelocity;

		[Token(Token = "0x40013ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
		private float arrowVelocity;

		[Token(Token = "0x40013EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		private float minStrainTickTime;

		[Token(Token = "0x40013EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
		private float maxStrainTickTime;

		[Token(Token = "0x40013F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		private float nextStrainTick;

		[Token(Token = "0x40013F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
		private bool lerpBackToZeroRotation;

		[Token(Token = "0x40013F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		private float lerpStartTime;

		[Token(Token = "0x40013F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
		private float lerpDuration;

		[Token(Token = "0x40013F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		private Quaternion lerpStartRotation;

		[Token(Token = "0x40013F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		private float nockLerpStartTime;

		[Token(Token = "0x40013F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
		private Quaternion nockLerpStartRotation;

		[Token(Token = "0x40013F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x154")]
		public float drawOffset;

		[Token(Token = "0x40013F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		public SVRLinearAnimator bowDrawLinearAnimator;

		[Token(Token = "0x40013F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		public SVRSoundBowClick drawSound;

		[Token(Token = "0x40013FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		private float drawTension;

		[Token(Token = "0x40013FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		public SVRSoundPlayOneshot arrowSlideSound;

		[Token(Token = "0x40013FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		public SVRSoundPlayOneshot releaseSound;

		[Token(Token = "0x40013FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		public SVRSoundPlayOneshot nockSound;

		[Token(Token = "0x40013FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
		private InterationStyle previousInteractionStyle;

		[Token(Token = "0x600158B")]
		[Address(RVA = "0xD471AC", Offset = "0xD471AC", VA = "0xD471AC", Slot = "9")]
		public override void BeginInteraction(SVRHand hand)
		{
		}

		[Token(Token = "0x600158C")]
		[Address(RVA = "0xD47234", Offset = "0xD47234", VA = "0xD47234", Slot = "15")]
		public override void EndInteraction(SVRHand hand)
		{
		}

		[Token(Token = "0x600158D")]
		[Address(RVA = "0xD47268", Offset = "0xD47268", VA = "0xD47268", Slot = "10")]
		public override void InteractingUpdate(SVRHand hand)
		{
		}

		[Token(Token = "0x600158E")]
		[Address(RVA = "0xD468F8", Offset = "0xD468F8", VA = "0xD468F8")]
		public void ArrowReleased()
		{
		}

		[Token(Token = "0x600158F")]
		[Address(RVA = "0xD47C34", Offset = "0xD47C34", VA = "0xD47C34")]
		[IteratorStateMachine(typeof(<ResetDrawAnim>d__44))]
		private IEnumerator ResetDrawAnim()
		{
			return null;
		}

		[Token(Token = "0x6001590")]
		[Address(RVA = "0xD47CD0", Offset = "0xD47CD0", VA = "0xD47CD0")]
		public float GetArrowVelocity()
		{
			return default(float);
		}

		[Token(Token = "0x6001591")]
		[Address(RVA = "0xD468A4", Offset = "0xD468A4", VA = "0xD468A4")]
		public void StartRotationLerp()
		{
		}

		[Token(Token = "0x6001592")]
		[Address(RVA = "0xD46598", Offset = "0xD46598", VA = "0xD46598")]
		public void StartNock(SVRArrowHand currentArrowHand)
		{
		}

		[Token(Token = "0x6001593")]
		[Address(RVA = "0xD47B08", Offset = "0xD47B08", VA = "0xD47B08")]
		private void EvaluateHandedness()
		{
		}

		[Token(Token = "0x6001594")]
		[Address(RVA = "0xD47CD8", Offset = "0xD47CD8", VA = "0xD47CD8")]
		private void DoHandednessCheck()
		{
		}

		[Token(Token = "0x6001595")]
		[Address(RVA = "0xD4650C", Offset = "0xD4650C", VA = "0xD4650C")]
		public void ArrowInPosition()
		{
		}

		[Token(Token = "0x6001596")]
		[Address(RVA = "0xD4687C", Offset = "0xD4687C", VA = "0xD4687C")]
		public void ReleaseNock()
		{
		}

		[Token(Token = "0x6001597")]
		[Address(RVA = "0xD47D18", Offset = "0xD47D18", VA = "0xD47D18")]
		public SVRLongbow()
		{
		}
	}
	[Token(Token = "0x20003A7")]
	public class SVRSoundBowClick : MonoBehaviour
	{
		[Token(Token = "0x4001407")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AudioClip bowClick;

		[Token(Token = "0x4001408")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AnimationCurve pitchTensionCurve;

		[Token(Token = "0x4001409")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float minPitch;

		[Token(Token = "0x400140A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float maxPitch;

		[Token(Token = "0x400140B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private AudioSource thisAudioSource;

		[Token(Token = "0x600159E")]
		[Address(RVA = "0xD47EF0", Offset = "0xD47EF0", VA = "0xD47EF0")]
		private void Awake()
		{
		}

		[Token(Token = "0x600159F")]
		[Address(RVA = "0xD47BE0", Offset = "0xD47BE0", VA = "0xD47BE0")]
		public void PlayBowTensionClicks(float normalizedTension)
		{
		}

		[Token(Token = "0x60015A0")]
		[Address(RVA = "0xD47F48", Offset = "0xD47F48", VA = "0xD47F48")]
		public SVRSoundBowClick()
		{
		}
	}
	[Token(Token = "0x20003A8")]
	public class Bullet : MonoBehaviour
	{
		[Token(Token = "0x400140C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public SumalabEvent OnDisableEvent;

		[Token(Token = "0x400140D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform bullet_trail;

		[Token(Token = "0x400140E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public MeshRenderer mesh;

		[Token(Token = "0x400140F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Transform bulletTrailAux;

		[Token(Token = "0x4001410")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public int max_trail_lenght;

		[Token(Token = "0x4001411")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static bool DisableHits;

		[Token(Token = "0x4001412")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
		public static bool UIMode;

		[Token(Token = "0x4001413")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2")]
		public static bool SingleShot;

		[Token(Token = "0x4001414")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float speed;

		[Token(Token = "0x4001415")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[HideInInspector]
		public HitTarget owner;

		[Token(Token = "0x4001416")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public float impactForce;

		[Token(Token = "0x4001417")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public WeaponModel weaponModel;

		[Token(Token = "0x4001418")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private static LayerMask layersToIgnore;

		[Token(Token = "0x4001419")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Vector3 lastPosition;

		[Token(Token = "0x400141A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private Vector3 initPosition;

		[Token(Token = "0x400141B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Vector3 targetPosition;

		[Token(Token = "0x400141C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private Vector3 currentPosition;

		[Token(Token = "0x400141D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Vector3 newPosition;

		[Token(Token = "0x400141E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		public float current_scale;

		[Token(Token = "0x400141F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private bool _bRepeatCheck;

		[Token(Token = "0x4001420")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public string defaultDecalPool;

		[Token(Token = "0x4001421")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public SVRHand hand;

		[Token(Token = "0x4001422")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public float speedModifier;

		[Token(Token = "0x4001423")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		[HideInInspector]
		public bool remote;

		[Token(Token = "0x4001424")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAD")]
		[HideInInspector]
		public bool isRemotePlayer;

		[Token(Token = "0x4001425")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static float MAX_DECAL_DISTANCE;

		[Token(Token = "0x4001426")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private static float MAX_SOUND_DISTANCE;

		[Token(Token = "0x4001427")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static float MIN_BULLET_FLY_SOUND_DISTANCE;

		[Token(Token = "0x4001428")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAE")]
		private bool m_bPlayerSound;

		[Token(Token = "0x4001429")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private HitTarget hitTarget;

		[Token(Token = "0x400142A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private List<SphereHit> m_lRaycastItemsHit;

		[Token(Token = "0x400142B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private List<SphereHitRaycastItem> m_lRaycastItems;

		[Token(Token = "0x400142C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public static int LAYERS_UI;

		[Token(Token = "0x400142D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static int LAYERS_PLAYERWEAPONS_IGNOREBULLETS;

		[Token(Token = "0x400142E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private RaycastHit hit;

		[Token(Token = "0x400142F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
		protected bool bulletDisabled;

		[Token(Token = "0x4001430")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF5")]
		private bool bFirstMove;

		[Token(Token = "0x4001431")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF6")]
		public bool KillPlayer;

		[Token(Token = "0x4001432")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF7")]
		public bool disableCheckHit;

		[Token(Token = "0x60015A1")]
		[Address(RVA = "0xD47F50", Offset = "0xD47F50", VA = "0xD47F50")]
		private void Awake()
		{
		}

		[Token(Token = "0x60015A2")]
		[Address(RVA = "0xD48038", Offset = "0xD48038", VA = "0xD48038")]
		public void initBullet()
		{
		}

		[Token(Token = "0x60015A3")]
		[Address(RVA = "0xD4803C", Offset = "0xD4803C", VA = "0xD4803C")]
		public void Fire(Vector3 initPosition)
		{
		}

		[Token(Token = "0x60015A4")]
		[Address(RVA = "0xD480C8", Offset = "0xD480C8", VA = "0xD480C8")]
		public static LayerMask GetLayersToIgnore([Optional] Bullet bullet)
		{
			return default(LayerMask);
		}

		[Token(Token = "0x60015A5")]
		[Address(RVA = "0xD48434", Offset = "0xD48434", VA = "0xD48434")]
		public static void SetUIMode(bool uiMode)
		{
		}

		[Token(Token = "0x60015A6")]
		[Address(RVA = "0xD48490", Offset = "0xD48490", VA = "0xD48490")]
		public void Fire(Vector3 initPosition, Vector3 finalPosition, bool killPlayer, bool bShowDangerous = true)
		{
		}

		[Token(Token = "0x60015A7")]
		[Address(RVA = "0xD486B4", Offset = "0xD486B4", VA = "0xD486B4")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60015A8")]
		[Address(RVA = "0xD47F70", Offset = "0xD47F70", VA = "0xD47F70")]
		private void ResetBulletTrail()
		{
		}

		[Token(Token = "0x60015A9")]
		[Address(RVA = "0xD487E0", Offset = "0xD487E0", VA = "0xD487E0")]
		private void Update()
		{
		}

		[Token(Token = "0x60015AA")]
		[Address(RVA = "0xD48AF4", Offset = "0xD48AF4", VA = "0xD48AF4")]
		private void checkPlayerSound()
		{
		}

		[Token(Token = "0x60015AB")]
		[Address(RVA = "0xD48808", Offset = "0xD48808", VA = "0xD48808")]
		private void MoveBullet()
		{
		}

		[Token(Token = "0x60015AC")]
		[Address(RVA = "0xD48D18", Offset = "0xD48D18", VA = "0xD48D18")]
		private void adjustBulletDirectionForAutoAim()
		{
		}

		[Token(Token = "0x60015AD")]
		[Address(RVA = "0xD4981C", Offset = "0xD4981C", VA = "0xD4981C")]
		private void CheckHit()
		{
		}

		[Token(Token = "0x60015AE")]
		[Address(RVA = "0xD4A19C", Offset = "0xD4A19C", VA = "0xD4A19C", Slot = "4")]
		protected virtual void Hit(Ray ray, RaycastHit hit)
		{
		}

		[Token(Token = "0x60015AF")]
		[Address(RVA = "0xD4ACCC", Offset = "0xD4ACCC", VA = "0xD4ACCC")]
		private bool forceOnDisableHits(Bullet bullet, HitTarget hitTarget)
		{
			return default(bool);
		}

		[Token(Token = "0x60015B0")]
		[Address(RVA = "0xD4AAFC", Offset = "0xD4AAFC", VA = "0xD4AAFC")]
		private void BulletInactiveAfterHit(Vector3 hitPoint)
		{
		}

		[Token(Token = "0x60015B1")]
		[Address(RVA = "0xD4AD5C", Offset = "0xD4AD5C", VA = "0xD4AD5C")]
		private void ConsumeBullet()
		{
		}

		[Token(Token = "0x60015B2")]
		[Address(RVA = "0xD4A190", Offset = "0xD4A190", VA = "0xD4A190")]
		public void repeatCheck()
		{
		}

		[Token(Token = "0x60015B3")]
		[Address(RVA = "0xD4A5B0", Offset = "0xD4A5B0", VA = "0xD4A5B0")]
		private void addDecalHit(string decalPool, Ray ray, RaycastHit initialHit)
		{
		}

		[Token(Token = "0x60015B4")]
		[Address(RVA = "0xD483B8", Offset = "0xD483B8", VA = "0xD483B8")]
		public bool isPlayerBullet()
		{
			return default(bool);
		}

		[Token(Token = "0x60015B5")]
		[Address(RVA = "0xD4AD60", Offset = "0xD4AD60", VA = "0xD4AD60")]
		public Vector3 getInitPosition()
		{
			return default(Vector3);
		}

		[Token(Token = "0x60015B6")]
		[Address(RVA = "0xD4AD6C", Offset = "0xD4AD6C", VA = "0xD4AD6C")]
		public HitTarget getTargetHitted()
		{
			return null;
		}

		[Token(Token = "0x60015B7")]
		[Address(RVA = "0xD4AD74", Offset = "0xD4AD74", VA = "0xD4AD74")]
		public void SetDangerous(bool bValue)
		{
		}

		[Token(Token = "0x60015B8")]
		[Address(RVA = "0xD486B0", Offset = "0xD486B0", VA = "0xD486B0")]
		public void SetDangerous(float danger)
		{
		}

		[Token(Token = "0x60015B9")]
		[Address(RVA = "0xD4AD84", Offset = "0xD4AD84", VA = "0xD4AD84")]
		public bool IsDangerous()
		{
			return default(bool);
		}

		[Token(Token = "0x60015BA")]
		[Address(RVA = "0xD4AD8C", Offset = "0xD4AD8C", VA = "0xD4AD8C")]
		public Bullet()
		{
		}
	}
	[Token(Token = "0x20003A9")]
	public class BulletIndicator : WeaponComponent
	{
		[Token(Token = "0x4001433")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Transform[] bullets;

		[Token(Token = "0x60015BC")]
		[Address(RVA = "0xD4AF90", Offset = "0xD4AF90", VA = "0xD4AF90", Slot = "4")]
		public override void InitComponent(Weapon weapon)
		{
		}

		[Token(Token = "0x60015BD")]
		[Address(RVA = "0xD4B1F4", Offset = "0xD4B1F4", VA = "0xD4B1F4")]
		private void Update()
		{
		}

		[Token(Token = "0x60015BE")]
		[Address(RVA = "0xD4B1F8", Offset = "0xD4B1F8", VA = "0xD4B1F8")]
		private void UpdateBullets()
		{
		}

		[Token(Token = "0x60015BF")]
		[Address(RVA = "0xD4B2A0", Offset = "0xD4B2A0", VA = "0xD4B2A0")]
		public BulletIndicator()
		{
		}
	}
	[Token(Token = "0x20003AA")]
	public class BulletIndicatorDisplay : WeaponComponent
	{
		[Token(Token = "0x4001434")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public TextMeshPro display;

		[Token(Token = "0x60015C0")]
		[Address(RVA = "0xD4B2A8", Offset = "0xD4B2A8", VA = "0xD4B2A8")]
		public BulletIndicatorDisplay()
		{
		}
	}
	[Token(Token = "0x20003AB")]
	public class BulletThrower : WeaponComponent
	{
		[Token(Token = "0x4001435")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform throwBulletTransform;

		[Token(Token = "0x4001436")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string throwBulletPool;

		[Token(Token = "0x60015C1")]
		[Address(RVA = "0xD4B2B0", Offset = "0xD4B2B0", VA = "0xD4B2B0")]
		public void ThrowBullet(bool wasted)
		{
		}

		[Token(Token = "0x60015C2")]
		[Address(RVA = "0xD4B600", Offset = "0xD4B600", VA = "0xD4B600")]
		private void showBullet(Transform bullet, string bulletName)
		{
		}

		[Token(Token = "0x60015C3")]
		[Address(RVA = "0xD4B50C", Offset = "0xD4B50C", VA = "0xD4B50C")]
		private string getBulletName(bool wasted)
		{
			return null;
		}

		[Token(Token = "0x60015C4")]
		[Address(RVA = "0xD4B6A8", Offset = "0xD4B6A8", VA = "0xD4B6A8")]
		public BulletThrower()
		{
		}
	}
	[Token(Token = "0x20003AC")]
	public class ChargingHandle : Slide
	{
		[Token(Token = "0x4001437")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		public Transform slide;

		[Token(Token = "0x60015C5")]
		[Address(RVA = "0xD4B6B0", Offset = "0xD4B6B0", VA = "0xD4B6B0", Slot = "27")]
		public override void OnFire(Bullet bullet)
		{
		}

		[Token(Token = "0x60015C6")]
		[Address(RVA = "0xD4B888", Offset = "0xD4B888", VA = "0xD4B888")]
		public ChargingHandle()
		{
		}
	}
	[Token(Token = "0x20003AD")]
	public class FireArm : WeaponComponent
	{
		[Token(Token = "0x20003AE")]
		public enum Type
		{
			[Token(Token = "0x4001441")]
			Manual,
			[Token(Token = "0x4001442")]
			Semiautomatic,
			[Token(Token = "0x4001443")]
			Automatic,
			[Token(Token = "0x4001444")]
			Burst
		}

		[Token(Token = "0x4001438")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public Type type;

		[Token(Token = "0x4001439")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool disableFire;

		[Token(Token = "0x400143A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float triggerSensivity;

		[Token(Token = "0x400143B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		protected float waitForShot;

		[Token(Token = "0x400143C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float buttonAxis;

		[Token(Token = "0x400143D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool pressDown;

		[Token(Token = "0x400143E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
		private bool pressUp;

		[Token(Token = "0x400143F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3A")]
		private bool waitingForPressUp;

		[Token(Token = "0x60015C7")]
		[Address(RVA = "0xD4B8A8", Offset = "0xD4B8A8", VA = "0xD4B8A8", Slot = "5")]
		public override void ActivateComponent()
		{
		}

		[Token(Token = "0x60015C8")]
		[Address(RVA = "0xD4B950", Offset = "0xD4B950", VA = "0xD4B950")]
		private void singleShot()
		{
		}

		[Token(Token = "0x60015C9")]
		[Address(RVA = "0xD4BDEC", Offset = "0xD4BDEC", VA = "0xD4BDEC", Slot = "10")]
		public virtual void FireUpdate()
		{
		}

		[Token(Token = "0x60015CA")]
		[Address(RVA = "0xD4C1F4", Offset = "0xD4C1F4", VA = "0xD4C1F4", Slot = "11")]
		public virtual void SetShootingState(bool bShootingState)
		{
		}

		[Token(Token = "0x60015CB")]
		[Address(RVA = "0xD4C1F8", Offset = "0xD4C1F8", VA = "0xD4C1F8")]
		public float GetButtonAxis()
		{
			return default(float);
		}

		[Token(Token = "0x60015CC")]
		[Address(RVA = "0xD4C200", Offset = "0xD4C200", VA = "0xD4C200")]
		public bool GetButtonDown()
		{
			return default(bool);
		}

		[Token(Token = "0x60015CD")]
		[Address(RVA = "0xD4C208", Offset = "0xD4C208", VA = "0xD4C208")]
		public bool GetButtonUp()
		{
			return default(bool);
		}

		[Token(Token = "0x60015CE")]
		[Address(RVA = "0xD4C210", Offset = "0xD4C210", VA = "0xD4C210", Slot = "9")]
		public override void AutoConfigure(Weapon weapon)
		{
		}

		[Token(Token = "0x60015CF")]
		[Address(RVA = "0xD4C284", Offset = "0xD4C284", VA = "0xD4C284")]
		public FireArm()
		{
		}
	}
	[Token(Token = "0x20003AF")]
	public class FireArmMiniGun : FireArm
	{
		[Token(Token = "0x4001445")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Animator animator;

		[Token(Token = "0x60015D0")]
		[Address(RVA = "0xD4C298", Offset = "0xD4C298", VA = "0xD4C298", Slot = "10")]
		public override void FireUpdate()
		{
		}

		[Token(Token = "0x60015D1")]
		[Address(RVA = "0xD4C500", Offset = "0xD4C500", VA = "0xD4C500", Slot = "6")]
		public override void DeactivateComponent()
		{
		}

		[Token(Token = "0x60015D2")]
		[Address(RVA = "0xD4C564", Offset = "0xD4C564", VA = "0xD4C564", Slot = "11")]
		public override void SetShootingState(bool bShootingState)
		{
		}

		[Token(Token = "0x60015D3")]
		[Address(RVA = "0xD4C5C0", Offset = "0xD4C5C0", VA = "0xD4C5C0")]
		public FireArmMiniGun()
		{
		}
	}
	[Token(Token = "0x20003B0")]
	public class FireEffect : WeaponComponent
	{
		[Token(Token = "0x4001446")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string fireEffectPool;

		[Token(Token = "0x4001447")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float scale;

		[Token(Token = "0x60015D4")]
		[Address(RVA = "0xD4C5D4", Offset = "0xD4C5D4", VA = "0xD4C5D4", Slot = "4")]
		public override void InitComponent(Weapon weapon)
		{
		}

		[Token(Token = "0x60015D5")]
		[Address(RVA = "0xD4C710", Offset = "0xD4C710", VA = "0xD4C710")]
		public void OnFire(Bullet bullet)
		{
		}

		[Token(Token = "0x60015D6")]
		[Address(RVA = "0xD4C854", Offset = "0xD4C854", VA = "0xD4C854")]
		public FireEffect()
		{
		}
	}
	[Token(Token = "0x20003B1")]
	public class Hammer : WeaponComponent
	{
		[Token(Token = "0x4001448")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float minRotation;

		[Token(Token = "0x4001449")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float maxRotation;

		[Token(Token = "0x400144A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public Vector3 axis;

		[Token(Token = "0x400144B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool waitPressUp;

		[Token(Token = "0x400144C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float targetRotation;

		[Token(Token = "0x60015D7")]
		[Address(RVA = "0xD4C868", Offset = "0xD4C868", VA = "0xD4C868", Slot = "4")]
		public override void InitComponent(Weapon weapon)
		{
		}

		[Token(Token = "0x60015D8")]
		[Address(RVA = "0xD4C920", Offset = "0xD4C920", VA = "0xD4C920")]
		private void Update()
		{
		}

		[Token(Token = "0x60015D9")]
		[Address(RVA = "0xD4CA1C", Offset = "0xD4CA1C", VA = "0xD4CA1C")]
		private void OnTriggerPressed(bool firing)
		{
		}

		[Token(Token = "0x60015DA")]
		[Address(RVA = "0xD4CAB0", Offset = "0xD4CAB0", VA = "0xD4CAB0")]
		public Hammer()
		{
		}
	}
	[Token(Token = "0x20003B2")]
	public class HitTarget : MonoBehaviour
	{
		[Token(Token = "0x400144D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string impactEffectPool;

		[Token(Token = "0x400144E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string decalPool;

		[Token(Token = "0x400144F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool showDecal;

		[Token(Token = "0x4001450")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		public bool showPlayerDecal;

		[Token(Token = "0x4001451")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[EnumOrder]
		public SoundEffect hitSound;

		[Token(Token = "0x4001452")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[Range(0f, 1f)]
		public float decalProbability;

		[Token(Token = "0x4001453")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[Range(0f, 1f)]
		public float impactEffectProbability;

		[Token(Token = "0x4001454")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public bool hitEnabled;

		[Token(Token = "0x60015DB")]
		[Address(RVA = "0xD4CAB8", Offset = "0xD4CAB8", VA = "0xD4CAB8", Slot = "4")]
		public virtual bool OnHit(Bullet bullet, Ray ray, RaycastHit hit)
		{
			return default(bool);
		}

		[Token(Token = "0x60015DC")]
		[Address(RVA = "0xD4CCC4", Offset = "0xD4CCC4", VA = "0xD4CCC4", Slot = "5")]
		protected virtual GameObject ShowImpactEffect(Bullet bullet, RaycastHit hit)
		{
			return null;
		}

		[Token(Token = "0x60015DD")]
		[Address(RVA = "0xD4CE10", Offset = "0xD4CE10", VA = "0xD4CE10", Slot = "6")]
		protected virtual void PlayHitSound(Vector3 hitPoint)
		{
		}

		[Token(Token = "0x60015DE")]
		[Address(RVA = "0xD4CEC8", Offset = "0xD4CEC8", VA = "0xD4CEC8", Slot = "7")]
		public virtual void OnTarget(Bullet bullet)
		{
		}

		[Token(Token = "0x60015DF")]
		[Address(RVA = "0xD4CECC", Offset = "0xD4CECC", VA = "0xD4CECC", Slot = "8")]
		public virtual void OnBulletConsumed(Bullet bullet)
		{
		}

		[Token(Token = "0x60015E0")]
		[Address(RVA = "0xD4CED0", Offset = "0xD4CED0", VA = "0xD4CED0")]
		public HitTarget()
		{
		}
	}
	[Token(Token = "0x20003B3")]
	public class Magazine : MonoBehaviour
	{
		[Token(Token = "0x4001455")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int bullets;

		[Token(Token = "0x4001456")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public WeaponModel weaponModel;

		[Token(Token = "0x4001457")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Animator animator;

		[Token(Token = "0x4001458")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Transform bulletsContainer;

		[Token(Token = "0x4001459")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Transform handle;

		[Token(Token = "0x400145A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Transform[] bulletArray;

		[Token(Token = "0x60015E1")]
		[Address(RVA = "0xD4CEF0", Offset = "0xD4CEF0", VA = "0xD4CEF0")]
		private void Awake()
		{
		}

		[Token(Token = "0x60015E2")]
		[Address(RVA = "0xD4D0C0", Offset = "0xD4D0C0", VA = "0xD4D0C0")]
		private void Update()
		{
		}

		[Token(Token = "0x60015E3")]
		[Address(RVA = "0xD4D158", Offset = "0xD4D158", VA = "0xD4D158")]
		public void MountMagazine()
		{
		}

		[Token(Token = "0x60015E4")]
		[Address(RVA = "0xD4D1E8", Offset = "0xD4D1E8", VA = "0xD4D1E8")]
		public void EmptyMagazine()
		{
		}

		[Token(Token = "0x60015E5")]
		[Address(RVA = "0xD4D1EC", Offset = "0xD4D1EC", VA = "0xD4D1EC")]
		public void ResetMagazine()
		{
		}

		[Token(Token = "0x60015E6")]
		[Address(RVA = "0xD4D454", Offset = "0xD4D454", VA = "0xD4D454")]
		public void WasteBullet(int bulletPosition)
		{
		}

		[Token(Token = "0x60015E7")]
		[Address(RVA = "0xD4D4EC", Offset = "0xD4D4EC", VA = "0xD4D4EC")]
		public Transform[] GetBullets()
		{
			return null;
		}

		[Token(Token = "0x60015E8")]
		[Address(RVA = "0xD4D4F4", Offset = "0xD4D4F4", VA = "0xD4D4F4")]
		public Magazine()
		{
		}
	}
	[Token(Token = "0x20003B4")]
	[RequireComponent(typeof(Rigidbody))]
	public class MagazineController : WeaponComponent
	{
		[Token(Token = "0x20003B5")]
		[CompilerGenerated]
		private sealed class <ReloadAnimation>d__23 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001469")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400146A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400146B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public MagazineController <>4__this;

			[Token(Token = "0x17000131")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60015FF")]
				[Address(RVA = "0xD4EE3C", Offset = "0xD4EE3C", VA = "0xD4EE3C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000132")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001601")]
				[Address(RVA = "0xD4EE84", Offset = "0xD4EE84", VA = "0xD4EE84", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60015FC")]
			[Address(RVA = "0xD4E21C", Offset = "0xD4E21C", VA = "0xD4E21C")]
			[DebuggerHidden]
			public <ReloadAnimation>d__23(int <>1__state)
			{
			}

			[Token(Token = "0x60015FD")]
			[Address(RVA = "0xD4EA2C", Offset = "0xD4EA2C", VA = "0xD4EA2C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60015FE")]
			[Address(RVA = "0xD4EA30", Offset = "0xD4EA30", VA = "0xD4EA30", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001600")]
			[Address(RVA = "0xD4EE44", Offset = "0xD4EE44", VA = "0xD4EE44", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400145B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public SumalabEvent OnStartReload;

		[Token(Token = "0x400145C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public SumalabEvent OnEndReload;

		[Token(Token = "0x400145D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public SVRButtons reloadButton;

		[Token(Token = "0x400145E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public SVRMagazine currentMagazine;

		[Token(Token = "0x400145F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Magazine autoReloadMagazine;

		[Token(Token = "0x4001460")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Transform autoReloadDropMagazine;

		[Token(Token = "0x4001461")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public bool magazineAttachable;

		[Token(Token = "0x4001462")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public SoundEffect mountMagazineSound;

		[Token(Token = "0x4001463")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public SoundEffect dropMagazineSound;

		[Token(Token = "0x4001464")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public IAutoReloadController autoReloadController;

		[Token(Token = "0x4001465")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Collider[] colliders;

		[Token(Token = "0x4001466")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		protected Coroutine ReloadAnimationCoroutine;

		[Token(Token = "0x4001467")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		protected bool autoReloadEnable;

		[Token(Token = "0x4001468")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private float magazineEjectForce;

		[Token(Token = "0x60015E9")]
		[Address(RVA = "0xD4D4FC", Offset = "0xD4D4FC", VA = "0xD4D4FC", Slot = "4")]
		public override void InitComponent(Weapon weapon)
		{
		}

		[Token(Token = "0x60015EA")]
		[Address(RVA = "0xD4D724", Offset = "0xD4D724", VA = "0xD4D724", Slot = "5")]
		public override void ActivateComponent()
		{
		}

		[Token(Token = "0x60015EB")]
		[Address(RVA = "0xD4D7AC", Offset = "0xD4D7AC", VA = "0xD4D7AC", Slot = "6")]
		public override void DeactivateComponent()
		{
		}

		[Token(Token = "0x60015EC")]
		[Address(RVA = "0xD4D8BC", Offset = "0xD4D8BC", VA = "0xD4D8BC", Slot = "7")]
		public override void DisableComponent()
		{
		}

		[Token(Token = "0x60015ED")]
		[Address(RVA = "0xD4D8D8", Offset = "0xD4D8D8", VA = "0xD4D8D8", Slot = "10")]
		protected virtual void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x60015EE")]
		[Address(RVA = "0xD4DE68", Offset = "0xD4DE68", VA = "0xD4DE68", Slot = "11")]
		protected virtual void Update()
		{
		}

		[Token(Token = "0x60015EF")]
		[Address(RVA = "0xD4E0E4", Offset = "0xD4E0E4", VA = "0xD4E0E4", Slot = "12")]
		protected virtual void CheckAutoReload()
		{
		}

		[Token(Token = "0x60015F0")]
		[Address(RVA = "0xD4D744", Offset = "0xD4D744", VA = "0xD4D744")]
		public void EnableMagazineDetector(bool enable)
		{
		}

		[Token(Token = "0x60015F1")]
		[Address(RVA = "0xD4DABC", Offset = "0xD4DABC", VA = "0xD4DABC")]
		public bool MountMagazine(SVRMagazine newMagazine, bool mountSound = true)
		{
			return default(bool);
		}

		[Token(Token = "0x60015F2")]
		[Address(RVA = "0xD4E1A8", Offset = "0xD4E1A8", VA = "0xD4E1A8", Slot = "13")]
		[IteratorStateMachine(typeof(<ReloadAnimation>d__23))]
		protected virtual IEnumerator ReloadAnimation()
		{
			return null;
		}

		[Token(Token = "0x60015F3")]
		[Address(RVA = "0xD4E244", Offset = "0xD4E244", VA = "0xD4E244")]
		public bool IsReloading()
		{
			return default(bool);
		}

		[Token(Token = "0x60015F4")]
		[Address(RVA = "0xD4E254", Offset = "0xD4E254", VA = "0xD4E254")]
		public void setDefaultMagazinePosition()
		{
		}

		[Token(Token = "0x60015F5")]
		[Address(RVA = "0xD4E2CC", Offset = "0xD4E2CC", VA = "0xD4E2CC", Slot = "14")]
		public virtual SVRMagazine DropMagazine()
		{
			return null;
		}

		[Token(Token = "0x60015F6")]
		[Address(RVA = "0xD4E5E0", Offset = "0xD4E5E0", VA = "0xD4E5E0", Slot = "15")]
		protected virtual void ejectMagazine(SVRMagazine _mag)
		{
		}

		[Token(Token = "0x60015F7")]
		[Address(RVA = "0xD4E7BC", Offset = "0xD4E7BC", VA = "0xD4E7BC", Slot = "16")]
		protected virtual void insertMagazine(SVRMagazine _mag)
		{
		}

		[Token(Token = "0x60015F8")]
		[Address(RVA = "0xD4D7D4", Offset = "0xD4D7D4", VA = "0xD4D7D4")]
		private void StopReloadAnimation()
		{
		}

		[Token(Token = "0x60015F9")]
		[Address(RVA = "0xD4E7C0", Offset = "0xD4E7C0", VA = "0xD4E7C0")]
		private void MagazineAttached()
		{
		}

		[Token(Token = "0x60015FA")]
		[Address(RVA = "0xD4E918", Offset = "0xD4E918", VA = "0xD4E918", Slot = "9")]
		public override void AutoConfigure(Weapon weapon)
		{
		}

		[Token(Token = "0x60015FB")]
		[Address(RVA = "0xD4E988", Offset = "0xD4E988", VA = "0xD4E988")]
		public MagazineController()
		{
		}
	}
	[Token(Token = "0x20003B7")]
	public class MagazineSpawner : SVRInteractable
	{
		[Token(Token = "0x400146E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public WeaponModel weaponModel;

		[Token(Token = "0x400146F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private Collider m_collider;

		[Token(Token = "0x4001470")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private int magazinesInstanced;

		[Token(Token = "0x4001471")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		private int magazinesAvailable;

		[Token(Token = "0x4001472")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private GameObject[] magazines;

		[Token(Token = "0x6001604")]
		[Address(RVA = "0xD4EF20", Offset = "0xD4EF20", VA = "0xD4EF20", Slot = "5")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6001605")]
		[Address(RVA = "0xD4F238", Offset = "0xD4F238", VA = "0xD4F238")]
		public void Update()
		{
		}

		[Token(Token = "0x6001606")]
		[Address(RVA = "0xD4F300", Offset = "0xD4F300", VA = "0xD4F300", Slot = "9")]
		public override void BeginInteraction(SVRHand hand)
		{
		}

		[Token(Token = "0x6001607")]
		[Address(RVA = "0xD4F5E8", Offset = "0xD4F5E8", VA = "0xD4F5E8")]
		public void SetMagazinesAvailable(int count)
		{
		}

		[Token(Token = "0x6001608")]
		[Address(RVA = "0xD4F668", Offset = "0xD4F668", VA = "0xD4F668")]
		public int GetMagazinesAvailable()
		{
			return default(int);
		}

		[Token(Token = "0x6001609")]
		[Address(RVA = "0xD4F670", Offset = "0xD4F670", VA = "0xD4F670")]
		public MagazineSpawner()
		{
		}
	}
	[Token(Token = "0x20003B8")]
	public class Missile : Bullet
	{
		[Token(Token = "0x4001473")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		public SumalabEvent OnExplode;

		[Token(Token = "0x4001474")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		public float impactRadius;

		[Token(Token = "0x4001475")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		public GameObject missileMesh;

		[Token(Token = "0x4001476")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		[HideInInspector]
		public GameObject impactEffect;

		[Token(Token = "0x4001477")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		public GameObject impactEffectDefault;

		[Token(Token = "0x4001478")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		public GameObject impactEffectPlayer;

		[Token(Token = "0x4001479")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		public GameObject smokeTrail;

		[Token(Token = "0x400147A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		public bool Exploded;

		[Token(Token = "0x400147B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		public HitTarget missileTarget;

		[Token(Token = "0x400147C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		public Vector3 impactEffectPosition;

		[Token(Token = "0x400147D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14C")]
		public bool showExplosion;

		[Token(Token = "0x600160A")]
		[Address(RVA = "0xD4F6D0", Offset = "0xD4F6D0", VA = "0xD4F6D0", Slot = "4")]
		protected override void Hit(Ray ray, RaycastHit hit)
		{
		}

		[Token(Token = "0x600160B")]
		[Address(RVA = "0xD50264", Offset = "0xD50264", VA = "0xD50264")]
		private void calculateHits(Vector3 position)
		{
		}

		[Token(Token = "0x600160C")]
		[Address(RVA = "0xD4FF1C", Offset = "0xD4FF1C", VA = "0xD4FF1C")]
		public void Explode(Vector3 position, bool bMissileTarget = false, bool bRemote = false)
		{
		}

		[Token(Token = "0x600160D")]
		[Address(RVA = "0xD50530", Offset = "0xD50530", VA = "0xD50530")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600160E")]
		[Address(RVA = "0xD50634", Offset = "0xD50634", VA = "0xD50634")]
		public Missile()
		{
		}
	}
	[Token(Token = "0x20003B9")]
	public class MissileAimTarget : MonoBehaviour
	{
		[Token(Token = "0x400147E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AimTarget target;

		[Token(Token = "0x400147F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Weapon weapon;

		[Token(Token = "0x600160F")]
		[Address(RVA = "0xD506DC", Offset = "0xD506DC", VA = "0xD506DC")]
		private void Start()
		{
		}

		[Token(Token = "0x6001610")]
		[Address(RVA = "0xD50790", Offset = "0xD50790", VA = "0xD50790")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001611")]
		[Address(RVA = "0xD508F8", Offset = "0xD508F8", VA = "0xD508F8")]
		public void OnFire(Bullet bullet)
		{
		}

		[Token(Token = "0x6001612")]
		[Address(RVA = "0xD509EC", Offset = "0xD509EC", VA = "0xD509EC")]
		public MissileAimTarget()
		{
		}
	}
	[Token(Token = "0x20003BA")]
	public class MuzzleFlash : WeaponComponent
	{
		[Token(Token = "0x4001480")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float showTime;

		[Token(Token = "0x4001481")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float scale;

		[Token(Token = "0x4001482")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float m_fDeltaSize;

		[Token(Token = "0x4001483")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Transform m_flash;

		[Token(Token = "0x6001613")]
		[Address(RVA = "0xD509F4", Offset = "0xD509F4", VA = "0xD509F4", Slot = "4")]
		public override void InitComponent(Weapon weapon)
		{
		}

		[Token(Token = "0x6001614")]
		[Address(RVA = "0xD50AF8", Offset = "0xD50AF8", VA = "0xD50AF8")]
		private void OnFire(Bullet bullet)
		{
		}

		[Token(Token = "0x6001615")]
		[Address(RVA = "0xD50AD4", Offset = "0xD50AD4", VA = "0xD50AD4")]
		private void Hide()
		{
		}

		[Token(Token = "0x6001616")]
		[Address(RVA = "0xD50C14", Offset = "0xD50C14", VA = "0xD50C14")]
		public MuzzleFlash()
		{
		}
	}
	[Token(Token = "0x20003BB")]
	public class NPCDualWeapon : NPCWeapon
	{
		[Token(Token = "0x4001484")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public NPCWeapon secondaryWeapon;

		[Token(Token = "0x4001485")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public AimIK secondaryAimIK;

		[Token(Token = "0x6001617")]
		[Address(RVA = "0xD50C34", Offset = "0xD50C34", VA = "0xD50C34", Slot = "8")]
		public override void Show()
		{
		}

		[Token(Token = "0x6001618")]
		[Address(RVA = "0xD50C80", Offset = "0xD50C80", VA = "0xD50C80", Slot = "9")]
		public override void Hide()
		{
		}

		[Token(Token = "0x6001619")]
		[Address(RVA = "0xD50CCC", Offset = "0xD50CCC", VA = "0xD50CCC", Slot = "10")]
		public override Bullet Fire(HitTarget owner, Vector3 targetPosition, bool killPlayer = true, bool bShowDangerous = true)
		{
			return null;
		}

		[Token(Token = "0x600161A")]
		[Address(RVA = "0xD512EC", Offset = "0xD512EC", VA = "0xD512EC")]
		public NPCDualWeapon()
		{
		}
	}
	[Token(Token = "0x20003BC")]
	public class NPCWeapon : MonoBehaviour, IWeapon
	{
		[Token(Token = "0x20003BD")]
		public delegate void FireWeaponEvent(NPCWeapon weapon, Bullet bullet);

		[Token(Token = "0x20003BE")]
		public enum FireState
		{
			[Token(Token = "0x400149C")]
			Idle,
			[Token(Token = "0x400149D")]
			Shooting,
			[Token(Token = "0x400149E")]
			StartShooting,
			[Token(Token = "0x400149F")]
			StopShooting
		}

		[Token(Token = "0x4001486")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static bool DisableFire;

		[Token(Token = "0x4001487")]
		private const float FIREFX_MAXDISTANCE = 10f;

		[Token(Token = "0x4001488")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool autoConfigure;

		[Token(Token = "0x4001489")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float bulletImpactForce;

		[Token(Token = "0x400148A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float maxShotInterval;

		[Token(Token = "0x400148B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float minShotInterval;

		[Token(Token = "0x400148C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string bulletPool;

		[Token(Token = "0x400148D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string fireEffectPool;

		[Token(Token = "0x400148E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Transform firePoint;

		[Token(Token = "0x400148F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public FireArm.Type fireArmType;

		[Token(Token = "0x4001490")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public SoundEffect fireSound;

		[Token(Token = "0x4001491")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public AudioGroup audioGroup;

		[Token(Token = "0x4001492")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public WeaponModel weaponModel;

		[Token(Token = "0x4001493")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public RuntimeAnimatorController animatorController;

		[Token(Token = "0x4001494")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public string aimAnimation;

		[Token(Token = "0x4001495")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private AudioController audioController;

		[Token(Token = "0x4001496")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public bool overrideRemoteFirePoint;

		[Token(Token = "0x4001497")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static FireWeaponEvent OnWeaponFire;

		[Token(Token = "0x4001498")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public Animator fireStateAnimator;

		[Token(Token = "0x4001499")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private float lastShot;

		[Token(Token = "0x400149A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private float lastFireInvoke;

		[Token(Token = "0x600161B")]
		[Address(RVA = "0xD51324", Offset = "0xD51324", VA = "0xD51324")]
		private void Awake()
		{
		}

		[Token(Token = "0x600161C")]
		[Address(RVA = "0xD51604", Offset = "0xD51604", VA = "0xD51604")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x600161D")]
		[Address(RVA = "0xD50C5C", Offset = "0xD50C5C", VA = "0xD50C5C", Slot = "8")]
		public virtual void Show()
		{
		}

		[Token(Token = "0x600161E")]
		[Address(RVA = "0xD50CA8", Offset = "0xD50CA8", VA = "0xD50CA8", Slot = "9")]
		public virtual void Hide()
		{
		}

		[Token(Token = "0x600161F")]
		[Address(RVA = "0xD50D50", Offset = "0xD50D50", VA = "0xD50D50", Slot = "10")]
		public virtual Bullet Fire(HitTarget owner, Vector3 targetPosition, bool killPlayer = true, bool bShowDangerous = true)
		{
			return null;
		}

		[Token(Token = "0x6001620")]
		[Address(RVA = "0xD516D4", Offset = "0xD516D4", VA = "0xD516D4")]
		public float GetShotInterval()
		{
			return default(float);
		}

		[Token(Token = "0x6001621")]
		[Address(RVA = "0xD516E0", Offset = "0xD516E0", VA = "0xD516E0", Slot = "5")]
		public int GetBullets()
		{
			return default(int);
		}

		[Token(Token = "0x6001622")]
		[Address(RVA = "0xD516E8", Offset = "0xD516E8", VA = "0xD516E8")]
		public bool isTwoHanded()
		{
			return default(bool);
		}

		[Token(Token = "0x6001623")]
		[Address(RVA = "0xD51704", Offset = "0xD51704", VA = "0xD51704", Slot = "4")]
		public Bullet RemoteShot(string id, HitTarget owner, Vector3 position, Vector3 targetPosition, int bulletsCount)
		{
			return null;
		}

		[Token(Token = "0x6001624")]
		[Address(RVA = "0xD513FC", Offset = "0xD513FC", VA = "0xD513FC")]
		public void AutoConfigure()
		{
		}

		[Token(Token = "0x6001625")]
		[Address(RVA = "0xD51C4C", Offset = "0xD51C4C", VA = "0xD51C4C", Slot = "6")]
		public Transform GetFirePoint()
		{
			return null;
		}

		[Token(Token = "0x6001626")]
		[Address(RVA = "0xD51C54", Offset = "0xD51C54", VA = "0xD51C54", Slot = "7")]
		public bool remoteShotOverrideFirePoint()
		{
			return default(bool);
		}

		[Token(Token = "0x6001627")]
		[Address(RVA = "0xD51308", Offset = "0xD51308", VA = "0xD51308")]
		public NPCWeapon()
		{
		}
	}
	[Token(Token = "0x20003BF")]
	public class PistolSlide : Slide
	{
		[Token(Token = "0x40014A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		public Transform position0;

		[Token(Token = "0x40014A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		public Transform position1;

		[Token(Token = "0x40014A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		public Transform position2;

		[Token(Token = "0x600162C")]
		[Address(RVA = "0xD51DE4", Offset = "0xD51DE4", VA = "0xD51DE4", Slot = "20")]
		public override void InitComponent(Weapon weapon)
		{
		}

		[Token(Token = "0x600162D")]
		[Address(RVA = "0xD51EE0", Offset = "0xD51EE0", VA = "0xD51EE0", Slot = "21")]
		public override void ActivateComponent()
		{
		}

		[Token(Token = "0x600162E")]
		[Address(RVA = "0xD52068", Offset = "0xD52068", VA = "0xD52068", Slot = "15")]
		public override void EndInteraction(SVRHand hand)
		{
		}

		[Token(Token = "0x600162F")]
		[Address(RVA = "0xD52220", Offset = "0xD52220", VA = "0xD52220", Slot = "27")]
		public override void OnFire(Bullet bullet)
		{
		}

		[Token(Token = "0x6001630")]
		[Address(RVA = "0xD52444", Offset = "0xD52444", VA = "0xD52444", Slot = "26")]
		protected override void ThrowBullet(bool wasted)
		{
		}

		[Token(Token = "0x6001631")]
		[Address(RVA = "0xD51EB0", Offset = "0xD51EB0", VA = "0xD51EB0")]
		private void SetRange(Transform startPosition, Transform endPosition)
		{
		}

		[Token(Token = "0x6001632")]
		[Address(RVA = "0xD52580", Offset = "0xD52580", VA = "0xD52580", Slot = "29")]
		protected override void Update()
		{
		}

		[Token(Token = "0x6001633")]
		[Address(RVA = "0xD52660", Offset = "0xD52660", VA = "0xD52660")]
		public PistolSlide()
		{
		}
	}
	[Token(Token = "0x20003C0")]
	public class RevolverMagazineController : MagazineController
	{
		[Token(Token = "0x20003C1")]
		private class LinearAcceleration
		{
			[Token(Token = "0x40014B2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private Vector3[] positionRegister;

			[Token(Token = "0x40014B3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private float[] posTimeRegister;

			[Token(Token = "0x40014B4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private int positionSamplesTaken;

			[Token(Token = "0x6001640")]
			[Address(RVA = "0xD53100", Offset = "0xD53100", VA = "0xD53100")]
			public Vector3 DoLinearAcceleration(out Vector3 vector, Vector3 position, int samples)
			{
				return default(Vector3);
			}

			[Token(Token = "0x6001641")]
			[Address(RVA = "0xD537BC", Offset = "0xD537BC", VA = "0xD537BC")]
			public void Reset()
			{
			}

			[Token(Token = "0x6001642")]
			[Address(RVA = "0xD527D4", Offset = "0xD527D4", VA = "0xD527D4")]
			public LinearAcceleration()
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x20003C2")]
		[CompilerGenerated]
		private struct <EjectShells>d__20 : IAsyncStateMachine
		{
			[Token(Token = "0x40014B5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x40014B6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncTaskMethodBuilder <>t__builder;

			[Token(Token = "0x40014B7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public RevolverMagazineController <>4__this;

			[Token(Token = "0x40014B8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private YieldAwaitable.YieldAwaiter <>u__1;

			[Token(Token = "0x40014B9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private TaskAwaiter <>u__2;

			[Token(Token = "0x6001643")]
			[Address(RVA = "0xD537C4", Offset = "0xD537C4", VA = "0xD537C4", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6001644")]
			[Address(RVA = "0xD54038", Offset = "0xD54038", VA = "0xD54038", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x20003C3")]
		[CompilerGenerated]
		private struct <AutoReloadAnimation>d__21 : IAsyncStateMachine
		{
			[Token(Token = "0x40014BA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x40014BB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncVoidMethodBuilder <>t__builder;

			[Token(Token = "0x40014BC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public RevolverMagazineController <>4__this;

			[Token(Token = "0x40014BD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private TaskAwaiter <>u__1;

			[Token(Token = "0x6001645")]
			[Address(RVA = "0xD54044", Offset = "0xD54044", VA = "0xD54044", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6001646")]
			[Address(RVA = "0xD541EC", Offset = "0xD541EC", VA = "0xD541EC", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x40014A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public Transform openPosition;

		[Token(Token = "0x40014A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public Transform closePosition;

		[Token(Token = "0x40014A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public Transform ejector;

		[Token(Token = "0x40014A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public Vector3 barrelRotationAxis;

		[Token(Token = "0x40014A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		public int bullets;

		[Token(Token = "0x40014A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public float openAcceleration;

		[Token(Token = "0x40014A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		public float closeAcceleration;

		[Token(Token = "0x40014AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public int currentBarrelPosition;

		[Token(Token = "0x40014AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		private bool waitPressUp;

		[Token(Token = "0x40014AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBD")]
		private bool isBarrelOpen;

		[Token(Token = "0x40014AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBE")]
		private bool isBarrelAnimating;

		[Token(Token = "0x40014AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBF")]
		private bool bulletsEjected;

		[Token(Token = "0x40014AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private Quaternion minBarrelRotation;

		[Token(Token = "0x40014B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private Quaternion maxBarrelRotation;

		[Token(Token = "0x40014B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private LinearAcceleration linearAcceleration;

		[Token(Token = "0x6001634")]
		[Address(RVA = "0xD52670", Offset = "0xD52670", VA = "0xD52670", Slot = "4")]
		public override void InitComponent(Weapon weapon)
		{
		}

		[Token(Token = "0x6001635")]
		[Address(RVA = "0xD527DC", Offset = "0xD527DC", VA = "0xD527DC", Slot = "11")]
		protected override void Update()
		{
		}

		[Token(Token = "0x6001636")]
		[Address(RVA = "0xD52F0C", Offset = "0xD52F0C", VA = "0xD52F0C")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6001637")]
		[Address(RVA = "0xD52CF8", Offset = "0xD52CF8", VA = "0xD52CF8")]
		private void OpenBarrel()
		{
		}

		[Token(Token = "0x6001638")]
		[Address(RVA = "0xD534E4", Offset = "0xD534E4", VA = "0xD534E4")]
		private void CloseBarrel()
		{
		}

		[Token(Token = "0x6001639")]
		[Address(RVA = "0xD52C08", Offset = "0xD52C08", VA = "0xD52C08")]
		[AsyncStateMachine(typeof(<EjectShells>d__20))]
		private Task EjectShells()
		{
			return null;
		}

		[Token(Token = "0x600163A")]
		[Address(RVA = "0xD52B50", Offset = "0xD52B50", VA = "0xD52B50")]
		[AsyncStateMachine(typeof(<AutoReloadAnimation>d__21))]
		private void AutoReloadAnimation()
		{
		}

		[Token(Token = "0x600163B")]
		[Address(RVA = "0xD534B4", Offset = "0xD534B4", VA = "0xD534B4")]
		private bool Sign(float a, float b)
		{
			return default(bool);
		}

		[Token(Token = "0x600163C")]
		[Address(RVA = "0xD5365C", Offset = "0xD5365C", VA = "0xD5365C")]
		private void OnTriggerPressed(bool firing)
		{
		}

		[Token(Token = "0x600163D")]
		[Address(RVA = "0xD53780", Offset = "0xD53780", VA = "0xD53780")]
		public RevolverMagazineController()
		{
		}
	}
	[Token(Token = "0x20003C4")]
	public class RPGMagazineController : MagazineController
	{
		[Token(Token = "0x6001647")]
		[Address(RVA = "0xD541F8", Offset = "0xD541F8", VA = "0xD541F8", Slot = "4")]
		public override void InitComponent(Weapon weapon)
		{
		}

		[Token(Token = "0x6001648")]
		[Address(RVA = "0xD54294", Offset = "0xD54294", VA = "0xD54294", Slot = "12")]
		protected override void CheckAutoReload()
		{
		}

		[Token(Token = "0x6001649")]
		[Address(RVA = "0xD5435C", Offset = "0xD5435C", VA = "0xD5435C")]
		private void OnFire(Bullet bullet)
		{
		}

		[Token(Token = "0x600164A")]
		[Address(RVA = "0xD543A0", Offset = "0xD543A0", VA = "0xD543A0")]
		public RPGMagazineController()
		{
		}
	}
	[Token(Token = "0x20003C5")]
	public class SecondGrip : WeaponComponentInteractable
	{
		[Token(Token = "0x40014BE")]
		private const float LERP_TIME = 0.3f;

		[Token(Token = "0x40014BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC1")]
		public bool DetectionWithButton;

		[Token(Token = "0x40014C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC2")]
		public bool twoHandsAim;

		[Token(Token = "0x40014C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public GameObject hintHand;

		[Token(Token = "0x40014C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		public Transform secondHandOffset;

		[Token(Token = "0x40014C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private float lerpTimeElapsed;

		[Token(Token = "0x40014C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		private float lerpDuration;

		[Token(Token = "0x600164B")]
		[Address(RVA = "0xD543A4", Offset = "0xD543A4", VA = "0xD543A4", Slot = "21")]
		public override void ActivateComponent()
		{
		}

		[Token(Token = "0x600164C")]
		[Address(RVA = "0xD54428", Offset = "0xD54428", VA = "0xD54428")]
		private void initializeFakeHand(bool bRepeated = false)
		{
		}

		[Token(Token = "0x600164D")]
		[Address(RVA = "0xD549E0", Offset = "0xD549E0", VA = "0xD549E0", Slot = "22")]
		public override void DeactivateComponent()
		{
		}

		[Token(Token = "0x600164E")]
		[Address(RVA = "0xD54D04", Offset = "0xD54D04", VA = "0xD54D04", Slot = "13")]
		public override void HoveringUpdate(SVRHand hand)
		{
		}

		[Token(Token = "0x600164F")]
		[Address(RVA = "0xD54FD4", Offset = "0xD54FD4", VA = "0xD54FD4", Slot = "14")]
		public override void HoverExit(SVRHand hand)
		{
		}

		[Token(Token = "0x6001650")]
		[Address(RVA = "0xD55094", Offset = "0xD55094", VA = "0xD55094", Slot = "9")]
		public override void BeginInteraction(SVRHand hand)
		{
		}

		[Token(Token = "0x6001651")]
		[Address(RVA = "0xD551D4", Offset = "0xD551D4", VA = "0xD551D4", Slot = "10")]
		public override void InteractingUpdate(SVRHand hand)
		{
		}

		[Token(Token = "0x6001652")]
		[Address(RVA = "0xD55270", Offset = "0xD55270", VA = "0xD55270", Slot = "15")]
		public override void EndInteraction(SVRHand hand)
		{
		}

		[Token(Token = "0x6001653")]
		[Address(RVA = "0xD5537C", Offset = "0xD5537C", VA = "0xD5537C")]
		private void Update()
		{
		}

		[Token(Token = "0x6001654")]
		[Address(RVA = "0xD551C4", Offset = "0xD551C4", VA = "0xD551C4")]
		private void ResetLerp()
		{
		}

		[Token(Token = "0x6001655")]
		[Address(RVA = "0xD54D80", Offset = "0xD54D80", VA = "0xD54D80")]
		private void showHintHand(bool enable)
		{
		}

		[Token(Token = "0x6001656")]
		[Address(RVA = "0xD5563C", Offset = "0xD5563C", VA = "0xD5563C")]
		public SecondGrip()
		{
		}
	}
	[Token(Token = "0x20003C6")]
	public class Slide : WeaponComponentInteractable
	{
		[Token(Token = "0x40014C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public Transform startPosition;

		[Token(Token = "0x40014C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		public Transform endPosition;

		[Token(Token = "0x40014C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		public BulletThrower bulletThrower;

		[Token(Token = "0x40014C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		public SoundEffect cockedIn;

		[Token(Token = "0x40014C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		public SoundEffect cockedOut;

		[Token(Token = "0x40014CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		public float speed;

		[Token(Token = "0x40014CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
		private float value;

		[Token(Token = "0x40014CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private float offset;

		[Token(Token = "0x40014CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
		private bool pulled;

		[Token(Token = "0x6001658")]
		[Address(RVA = "0xD51E1C", Offset = "0xD51E1C", VA = "0xD51E1C", Slot = "20")]
		public override void InitComponent(Weapon weapon)
		{
		}

		[Token(Token = "0x6001659")]
		[Address(RVA = "0xD51F40", Offset = "0xD51F40", VA = "0xD51F40", Slot = "21")]
		public override void ActivateComponent()
		{
		}

		[Token(Token = "0x600165A")]
		[Address(RVA = "0xD55660", Offset = "0xD55660", VA = "0xD55660", Slot = "9")]
		public override void BeginInteraction(SVRHand hand)
		{
		}

		[Token(Token = "0x600165B")]
		[Address(RVA = "0xD55870", Offset = "0xD55870", VA = "0xD55870", Slot = "10")]
		public override void InteractingUpdate(SVRHand hand)
		{
		}

		[Token(Token = "0x600165C")]
		[Address(RVA = "0xD520C0", Offset = "0xD520C0", VA = "0xD520C0", Slot = "15")]
		public override void EndInteraction(SVRHand hand)
		{
		}

		[Token(Token = "0x600165D")]
		[Address(RVA = "0xD556B8", Offset = "0xD556B8", VA = "0xD556B8")]
		private float CalculateValue(Transform tr)
		{
			return default(float);
		}

		[Token(Token = "0x600165E")]
		[Address(RVA = "0xD559D8", Offset = "0xD559D8", VA = "0xD559D8")]
		private void UpdateValue(Transform tr)
		{
		}

		[Token(Token = "0x600165F")]
		[Address(RVA = "0xD524D4", Offset = "0xD524D4", VA = "0xD524D4", Slot = "26")]
		protected virtual void ThrowBullet(bool wasted)
		{
		}

		[Token(Token = "0x6001660")]
		[Address(RVA = "0xD55B70", Offset = "0xD55B70", VA = "0xD55B70", Slot = "27")]
		public virtual void OnFire(Bullet bullet)
		{
		}

		[Token(Token = "0x6001661")]
		[Address(RVA = "0xD55D4C", Offset = "0xD55D4C", VA = "0xD55D4C", Slot = "28")]
		protected virtual void CockWeapon()
		{
		}

		[Token(Token = "0x6001662")]
		[Address(RVA = "0xD55D6C", Offset = "0xD55D6C", VA = "0xD55D6C", Slot = "29")]
		protected virtual void Update()
		{
		}

		[Token(Token = "0x6001663")]
		[Address(RVA = "0xD55E28", Offset = "0xD55E28", VA = "0xD55E28", Slot = "30")]
		protected virtual bool CheckCock()
		{
			return default(bool);
		}

		[Token(Token = "0x6001664")]
		[Address(RVA = "0xD55E78", Offset = "0xD55E78", VA = "0xD55E78", Slot = "25")]
		public override void AutoConfigure(Weapon weapon)
		{
		}

		[Token(Token = "0x6001665")]
		[Address(RVA = "0xD4B898", Offset = "0xD4B898", VA = "0xD4B898")]
		public Slide()
		{
		}
	}
	[Token(Token = "0x20003C7")]
	public class SphereHit : MonoBehaviour
	{
		[Token(Token = "0x40014CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool changeToPhysicCollidersOnHit;

		[Token(Token = "0x40014CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SphereHit[] sphereHitChildren;

		[Token(Token = "0x40014D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[HideInInspector]
		public SphereHitRaycastItem Item;

		[Token(Token = "0x6001666")]
		[Address(RVA = "0xD55EE0", Offset = "0xD55EE0", VA = "0xD55EE0")]
		public void Awake()
		{
		}

		[Token(Token = "0x6001667")]
		[Address(RVA = "0xD55F38", Offset = "0xD55F38", VA = "0xD55F38")]
		private void OnDrawGizmosSelected()
		{
		}

		[Token(Token = "0x6001668")]
		[Address(RVA = "0xD56008", Offset = "0xD56008", VA = "0xD56008")]
		public SphereHit()
		{
		}
	}
	[Token(Token = "0x20003C8")]
	public class SphereHitRaycastItem : MonoBehaviour
	{
		[Token(Token = "0x40014D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public SphereHit sphereRaycast;

		[Token(Token = "0x6001669")]
		[Address(RVA = "0xD56010", Offset = "0xD56010", VA = "0xD56010")]
		public void OnEnable()
		{
		}

		[Token(Token = "0x600166A")]
		[Address(RVA = "0xD56150", Offset = "0xD56150", VA = "0xD56150")]
		public void OnDisable()
		{
		}

		[Token(Token = "0x600166B")]
		[Address(RVA = "0xD56200", Offset = "0xD56200", VA = "0xD56200", Slot = "4")]
		public virtual void changeToPhysicsColliders(bool bValue)
		{
		}

		[Token(Token = "0x600166C")]
		[Address(RVA = "0xD56210", Offset = "0xD56210", VA = "0xD56210", Slot = "5")]
		public virtual bool OnHit(Bullet bullet, SphereHit sphereCollision)
		{
			return default(bool);
		}

		[Token(Token = "0x600166D")]
		[Address(RVA = "0xD49F10", Offset = "0xD49F10", VA = "0xD49F10")]
		public bool checkMainSphereCollision(Ray ray, float distance)
		{
			return default(bool);
		}

		[Token(Token = "0x600166E")]
		[Address(RVA = "0xD49FDC", Offset = "0xD49FDC", VA = "0xD49FDC")]
		public SphereHit getSphereCollision(Ray ray, float distance)
		{
			return null;
		}

		[Token(Token = "0x600166F")]
		[Address(RVA = "0xD5624C", Offset = "0xD5624C", VA = "0xD5624C")]
		private bool checkSphereCollision(Transform sphere, Vector3 p1, Vector3 p2)
		{
			return default(bool);
		}

		[Token(Token = "0x6001670")]
		[Address(RVA = "0xD5631C", Offset = "0xD5631C", VA = "0xD5631C")]
		public SphereHitRaycastItem()
		{
		}
	}
	[Token(Token = "0x20003C9")]
	public class SphereHitRaycastSystem : MonoBehaviour
	{
		[Token(Token = "0x40014D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<SphereHitRaycastItem> m_items;

		[Token(Token = "0x40014D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static SphereHitRaycastSystem s_instance;

		[Token(Token = "0x6001671")]
		[Address(RVA = "0xD56324", Offset = "0xD56324", VA = "0xD56324")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001672")]
		[Address(RVA = "0xD5637C", Offset = "0xD5637C", VA = "0xD5637C")]
		public static SphereHitRaycastSystem getInstance()
		{
			return null;
		}

		[Token(Token = "0x6001673")]
		[Address(RVA = "0xD563C4", Offset = "0xD563C4", VA = "0xD563C4")]
		public List<SphereHitRaycastItem> getSphereRayCastItems()
		{
			return null;
		}

		[Token(Token = "0x6001674")]
		[Address(RVA = "0xD56068", Offset = "0xD56068", VA = "0xD56068")]
		public void registerItem(SphereHitRaycastItem item)
		{
		}

		[Token(Token = "0x6001675")]
		[Address(RVA = "0xD561A8", Offset = "0xD561A8", VA = "0xD561A8")]
		public void deregisterItem(SphereHitRaycastItem item)
		{
		}

		[Token(Token = "0x6001676")]
		[Address(RVA = "0xD563CC", Offset = "0xD563CC", VA = "0xD563CC")]
		public SphereHitRaycastSystem()
		{
		}
	}
	[Token(Token = "0x20003CA")]
	public class SVRMagazine : SVRInteractable
	{
		[Token(Token = "0x40014D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public Magazine magazine;

		[Token(Token = "0x6001677")]
		[Address(RVA = "0xD56454", Offset = "0xD56454", VA = "0xD56454", Slot = "9")]
		public override void BeginInteraction(SVRHand hand)
		{
		}

		[Token(Token = "0x6001678")]
		[Address(RVA = "0xD564FC", Offset = "0xD564FC", VA = "0xD564FC", Slot = "15")]
		public override void EndInteraction(SVRHand hand)
		{
		}

		[Token(Token = "0x6001679")]
		[Address(RVA = "0xD4E708", Offset = "0xD4E708", VA = "0xD4E708")]
		public void SetDefaultLayer()
		{
		}

		[Token(Token = "0x600167A")]
		[Address(RVA = "0xD56518", Offset = "0xD56518", VA = "0xD56518")]
		private void setDefaultLayerImpl()
		{
		}

		[Token(Token = "0x600167B")]
		[Address(RVA = "0xD565C0", Offset = "0xD565C0", VA = "0xD565C0")]
		public SVRMagazine()
		{
		}
	}
	[Token(Token = "0x20003CB")]
	public class Trigger : WeaponComponent
	{
		[Token(Token = "0x40014D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public Vector3 startRotation;

		[Token(Token = "0x40014D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Vector3 endRotation;

		[Token(Token = "0x40014D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[Space]
		public Vector3 startPosition;

		[Token(Token = "0x40014D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Vector3 endPosition;

		[Token(Token = "0x600167D")]
		[Address(RVA = "0xD5661C", Offset = "0xD5661C", VA = "0xD5661C", Slot = "5")]
		public override void ActivateComponent()
		{
		}

		[Token(Token = "0x600167E")]
		[Address(RVA = "0xD56648", Offset = "0xD56648", VA = "0xD56648", Slot = "6")]
		public override void DeactivateComponent()
		{
		}

		[Token(Token = "0x600167F")]
		[Address(RVA = "0xD567CC", Offset = "0xD567CC", VA = "0xD567CC")]
		private void Update()
		{
		}

		[Token(Token = "0x6001680")]
		[Address(RVA = "0xD5694C", Offset = "0xD5694C", VA = "0xD5694C")]
		public Trigger()
		{
		}
	}
	[Token(Token = "0x20003CC")]
	public class Weapon : SVRInteractable, IWeapon
	{
		[Token(Token = "0x20003CD")]
		public delegate void FireEvent(Bullet bullet);

		[Token(Token = "0x20003CE")]
		public delegate void FireWeaponEvent(Weapon weapon, Bullet bullet);

		[Serializable]
		[Token(Token = "0x20003CF")]
		public class BulletHandler
		{
			[Token(Token = "0x4001508")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int maxBullets;

			[Token(Token = "0x4001509")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public int maxBulletsPerBurst;

			[Token(Token = "0x400150A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public int currentBullets;

			[Token(Token = "0x60016AE")]
			[Address(RVA = "0xD582E0", Offset = "0xD582E0", VA = "0xD582E0")]
			public BulletHandler(int maxBullets)
			{
			}

			[Token(Token = "0x60016AF")]
			[Address(RVA = "0xD58308", Offset = "0xD58308", VA = "0xD58308")]
			public void SetBullets(int bullets, bool bForce = false)
			{
			}

			[Token(Token = "0x60016B0")]
			[Address(RVA = "0xD5833C", Offset = "0xD5833C", VA = "0xD5833C")]
			public void AddBullets(int bullets)
			{
			}

			[Token(Token = "0x60016B1")]
			[Address(RVA = "0xD58360", Offset = "0xD58360", VA = "0xD58360")]
			public void AddBullet()
			{
			}

			[Token(Token = "0x60016B2")]
			[Address(RVA = "0xD5837C", Offset = "0xD5837C", VA = "0xD5837C")]
			public void RemoveBullets(int bullets)
			{
			}

			[Token(Token = "0x60016B3")]
			[Address(RVA = "0xD58390", Offset = "0xD58390", VA = "0xD58390")]
			public void RemoveBullet()
			{
			}

			[Token(Token = "0x60016B4")]
			[Address(RVA = "0xD583A4", Offset = "0xD583A4", VA = "0xD583A4")]
			public int GetBullets()
			{
				return default(int);
			}

			[Token(Token = "0x60016B5")]
			[Address(RVA = "0xD583AC", Offset = "0xD583AC", VA = "0xD583AC")]
			public int GetMaxBullets()
			{
				return default(int);
			}
		}

		[Token(Token = "0x40014D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static SumalabEvent OnFireStateChanged;

		[Token(Token = "0x40014DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static SumalabEvent OnEmptyGunClick;

		[Token(Token = "0x40014DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static bool disableFire;

		[Token(Token = "0x40014DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		public static bool AutoReload;

		[Token(Token = "0x40014DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12")]
		public static bool InfiniteBullets;

		[Token(Token = "0x40014DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x13")]
		public static bool AutoAim;

		[Token(Token = "0x40014DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public static float AutoAimMinDistance;

		[Token(Token = "0x40014E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[Header("Weapon Settings")]
		public bool HasBulletChamber;

		[Token(Token = "0x40014E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private WeaponComponent[] weaponComponents;

		[Token(Token = "0x40014E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private WeaponComponentInteractable[] weaponComponentInteractables;

		[Token(Token = "0x40014E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static FireWeaponEvent OnWeaponFire;

		[Token(Token = "0x40014E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		public SumalabEvent<SVRMagazine> OnMountMagazine;

		[Token(Token = "0x40014E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		public SumalabEvent<SVRMagazine> OnDropMagazine;

		[Token(Token = "0x40014E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		public SumalabEvent<Weapon> OnNoBullets;

		[Token(Token = "0x40014E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		public SumalabEvent<bool> OnTriggerPressed;

		[Token(Token = "0x40014E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		public SVRButtons fireButton;

		[Token(Token = "0x40014EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
		public SVRButtons dropButton;

		[Token(Token = "0x40014EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		public int bullets;

		[Token(Token = "0x40014EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
		public int bulletsPerBurst;

		[Token(Token = "0x40014ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		private int currentBulletsPerBurst;

		[Token(Token = "0x40014EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
		private float waitForShot;

		[Token(Token = "0x40014EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		public float bulletImpactForce;

		[Token(Token = "0x40014F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
		public float shotInterval;

		[Token(Token = "0x40014F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		public float recoilForce;

		[Token(Token = "0x40014F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
		public float recoilMultiplier;

		[Token(Token = "0x40014F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		public Transform firePoint;

		[Token(Token = "0x40014F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		[HideInInspector]
		public Transform twoAimingTransform;

		[Token(Token = "0x40014F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		[HideInInspector]
		public Transform recoilTransform;

		[Token(Token = "0x40014F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		public WeaponModel weaponModel;

		[Token(Token = "0x40014F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x13C")]
		public BulletType bulletType;

		[Token(Token = "0x40014F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		public bool twoHandsAim;

		[Token(Token = "0x40014F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x141")]
		public bool autoReload;

		[Token(Token = "0x40014FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x142")]
		[HideInInspector]
		public bool autoCock;

		[Token(Token = "0x40014FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x143")]
		public bool forceManualReload;

		[Token(Token = "0x40014FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
		public bool permanent;

		[Token(Token = "0x40014FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x145")]
		[SerializeField]
		private bool cocked;

		[Token(Token = "0x40014FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x146")]
		private bool initialised;

		[Token(Token = "0x40014FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		private InterationStyle defaultInteractionStyle;

		[Token(Token = "0x4001500")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		public FireArm fireArm;

		[Token(Token = "0x4001501")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		public MagazineController magazineController;

		[Token(Token = "0x4001502")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		public string bulletPool;

		[Token(Token = "0x4001503")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		public SoundEffect fireSound;

		[Token(Token = "0x4001504")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		[HideInInspector]
		public AudioController audioController;

		[Token(Token = "0x4001505")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		private BulletHandler bulletHandler;

		[Token(Token = "0x4001506")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		private int noBulletClicks;

		[Token(Token = "0x4001507")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x184")]
		public bool overrideRemoteFirePoint;

		[Token(Token = "0x17000133")]
		public static bool DisableFire
		{
			[Token(Token = "0x6001681")]
			[Address(RVA = "0xD56954", Offset = "0xD56954", VA = "0xD56954")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001682")]
			[Address(RVA = "0xD569AC", Offset = "0xD569AC", VA = "0xD569AC")]
			set
			{
			}
		}

		[Token(Token = "0x17000134")]
		public float animTime
		{
			[Token(Token = "0x6001685")]
			[Address(RVA = "0xD4B868", Offset = "0xD4B868", VA = "0xD4B868")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x14000024")]
		public event FireEvent OnFire
		{
			[Token(Token = "0x6001683")]
			[Address(RVA = "0xD4C674", Offset = "0xD4C674", VA = "0xD4C674")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6001684")]
			[Address(RVA = "0xD5085C", Offset = "0xD5085C", VA = "0xD5085C")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x6001686")]
		[Address(RVA = "0xD56A18", Offset = "0xD56A18", VA = "0xD56A18", Slot = "5")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6001687")]
		[Address(RVA = "0xD56A34", Offset = "0xD56A34", VA = "0xD56A34")]
		private void Init()
		{
		}

		[Token(Token = "0x6001688")]
		[Address(RVA = "0xD56E58", Offset = "0xD56E58", VA = "0xD56E58", Slot = "9")]
		public override void BeginInteraction(SVRHand hand)
		{
		}

		[Token(Token = "0x6001689")]
		[Address(RVA = "0xD56F20", Offset = "0xD56F20", VA = "0xD56F20", Slot = "11")]
		public override void AttachEaseInCompleted()
		{
		}

		[Token(Token = "0x600168A")]
		[Address(RVA = "0xD57008", Offset = "0xD57008", VA = "0xD57008", Slot = "10")]
		public override void InteractingUpdate(SVRHand hand)
		{
		}

		[Token(Token = "0x600168B")]
		[Address(RVA = "0xD571A8", Offset = "0xD571A8", VA = "0xD571A8", Slot = "15")]
		public override void EndInteraction(SVRHand hand)
		{
		}

		[Token(Token = "0x600168C")]
		[Address(RVA = "0xD57338", Offset = "0xD57338", VA = "0xD57338")]
		private void endSecondGripInteraction()
		{
		}

		[Token(Token = "0x600168D")]
		[Address(RVA = "0xD5740C", Offset = "0xD5740C", VA = "0xD5740C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x600168E")]
		[Address(RVA = "0xD4C140", Offset = "0xD4C140", VA = "0xD4C140")]
		public void SetBullets(int bullets, bool bForce = false)
		{
		}

		[Token(Token = "0x600168F")]
		[Address(RVA = "0xD4E160", Offset = "0xD4E160", VA = "0xD4E160")]
		public void AddBullets(int bullets)
		{
		}

		[Token(Token = "0x6001690")]
		[Address(RVA = "0xD57410", Offset = "0xD57410", VA = "0xD57410")]
		public void AddBullet()
		{
		}

		[Token(Token = "0x6001691")]
		[Address(RVA = "0xD5742C", Offset = "0xD5742C", VA = "0xD5742C")]
		public void LinkAmmo(Weapon weapon)
		{
		}

		[Token(Token = "0x6001692")]
		[Address(RVA = "0xD57450", Offset = "0xD57450", VA = "0xD57450")]
		public void UnlinkAmmo()
		{
		}

		[Token(Token = "0x6001693")]
		[Address(RVA = "0xD574C0", Offset = "0xD574C0", VA = "0xD574C0")]
		public void RemoveBullets(int bullets)
		{
		}

		[Token(Token = "0x6001694")]
		[Address(RVA = "0xD55AAC", Offset = "0xD55AAC", VA = "0xD55AAC")]
		public void RemoveBullet()
		{
		}

		[Token(Token = "0x6001695")]
		[Address(RVA = "0xD4B288", Offset = "0xD4B288", VA = "0xD4B288", Slot = "21")]
		public int GetBullets()
		{
			return default(int);
		}

		[Token(Token = "0x6001696")]
		[Address(RVA = "0xD575A4", Offset = "0xD575A4", VA = "0xD575A4")]
		public int GetMaxBullets()
		{
			return default(int);
		}

		[Token(Token = "0x6001697")]
		[Address(RVA = "0xD575C0", Offset = "0xD575C0", VA = "0xD575C0")]
		public int GetBulletsPerBurst()
		{
			return default(int);
		}

		[Token(Token = "0x6001698")]
		[Address(RVA = "0xD575C8", Offset = "0xD575C8", VA = "0xD575C8")]
		public bool IsCocked()
		{
			return default(bool);
		}

		[Token(Token = "0x6001699")]
		[Address(RVA = "0xD575D0", Offset = "0xD575D0", VA = "0xD575D0")]
		public void SetCocked(bool cocked)
		{
		}

		[Token(Token = "0x600169A")]
		[Address(RVA = "0xD57188", Offset = "0xD57188", VA = "0xD57188")]
		private void fireUpdate()
		{
		}

		[Token(Token = "0x600169B")]
		[Address(RVA = "0xD575DC", Offset = "0xD575DC", VA = "0xD575DC")]
		public void setFireArm(FireArm fireArm)
		{
		}

		[Token(Token = "0x600169C")]
		[Address(RVA = "0xD4B9D8", Offset = "0xD4B9D8", VA = "0xD4B9D8")]
		public void Shot()
		{
		}

		[Token(Token = "0x600169D")]
		[Address(RVA = "0xD57930", Offset = "0xD57930", VA = "0xD57930", Slot = "20")]
		public Bullet RemoteShot(string id, HitTarget owner, Vector3 position, Vector3 targetPosition, int bulletsCount)
		{
			return null;
		}

		[Token(Token = "0x600169E")]
		[Address(RVA = "0xD5766C", Offset = "0xD5766C", VA = "0xD5766C")]
		private void recoil(bool bSoft = false)
		{
		}

		[Token(Token = "0x600169F")]
		[Address(RVA = "0xD4BC7C", Offset = "0xD4BC7C", VA = "0xD4BC7C")]
		public void NoBulletsSound()
		{
		}

		[Token(Token = "0x60016A0")]
		[Address(RVA = "0xD57BD4", Offset = "0xD57BD4", VA = "0xD57BD4", Slot = "8")]
		public override void UpdateColliders()
		{
		}

		[Token(Token = "0x60016A1")]
		[Address(RVA = "0xD57C6C", Offset = "0xD57C6C", VA = "0xD57C6C")]
		public void AutoConfigure()
		{
		}

		[Token(Token = "0x60016A2")]
		[Address(RVA = "0xD57D64", Offset = "0xD57D64", VA = "0xD57D64", Slot = "22")]
		public Transform GetFirePoint()
		{
			return null;
		}

		[Token(Token = "0x60016A3")]
		[Address(RVA = "0xD57D6C", Offset = "0xD57D6C", VA = "0xD57D6C", Slot = "23")]
		public bool remoteShotOverrideFirePoint()
		{
			return default(bool);
		}

		[Token(Token = "0x60016A4")]
		[Address(RVA = "0xD57D74", Offset = "0xD57D74", VA = "0xD57D74")]
		public Weapon()
		{
		}
	}
	[Token(Token = "0x20003D0")]
	public enum WeaponModel
	{
		[Token(Token = "0x400150C")]
		None = 0,
		[Token(Token = "0x400150D")]
		Pistol_AP85 = 3,
		[Token(Token = "0x400150E")]
		Pistol_C1911 = 4,
		[Token(Token = "0x400150F")]
		Pistol_Eder22 = 5,
		[Token(Token = "0x4001510")]
		Pistol_M9 = 6,
		[Token(Token = "0x4001511")]
		Pistol_P350 = 7,
		[Token(Token = "0x4001512")]
		Pistol_PT8 = 8,
		[Token(Token = "0x4001513")]
		Pistol_Ruger = 9,
		[Token(Token = "0x4001514")]
		Revolver = 10,
		[Token(Token = "0x4001515")]
		Shotgun_590A1 = 11,
		[Token(Token = "0x4001516")]
		Shotgun_DT22 = 12,
		[Token(Token = "0x4001517")]
		Shotgun_Fab = 13,
		[Token(Token = "0x4001518")]
		Shotgun_M4 = 14,
		[Token(Token = "0x4001519")]
		AKM = 15,
		[Token(Token = "0x400151A")]
		MK18 = 16,
		[Token(Token = "0x400151B")]
		M16 = 17,
		[Token(Token = "0x400151C")]
		MP5 = 18,
		[Token(Token = "0x400151D")]
		R90 = 19,
		[Token(Token = "0x400151E")]
		UMP = 20,
		[Token(Token = "0x400151F")]
		CX8 = 21,
		[Token(Token = "0x4001520")]
		Rifle_Sako85 = 22,
		[Token(Token = "0x4001521")]
		Flaregun = 23,
		[Token(Token = "0x4001522")]
		RPG = 24,
		[Token(Token = "0x4001523")]
		MiniGun = 25,
		[Token(Token = "0x4001524")]
		Uzi = 26,
		[Token(Token = "0x4001525")]
		Longbow = 27,
		[Token(Token = "0x4001526")]
		Robocop = 28
	}
	[Token(Token = "0x20003D1")]
	public enum BulletType
	{
		[Token(Token = "0x4001528")]
		S,
		[Token(Token = "0x4001529")]
		L,
		[Token(Token = "0x400152A")]
		cal_5_7x28,
		[Token(Token = "0x400152B")]
		cal_5_56,
		[Token(Token = "0x400152C")]
		cal_7_62x39,
		[Token(Token = "0x400152D")]
		cal_9mm,
		[Token(Token = "0x400152E")]
		cal_12G,
		[Token(Token = "0x400152F")]
		cal_12G_flare,
		[Token(Token = "0x4001530")]
		cal_12G_flare_shell,
		[Token(Token = "0x4001531")]
		cal_12G_shell,
		[Token(Token = "0x4001532")]
		cal_22,
		[Token(Token = "0x4001533")]
		cal_40,
		[Token(Token = "0x4001534")]
		cal_45,
		[Token(Token = "0x4001535")]
		cal_308,
		[Token(Token = "0x4001536")]
		cal_357
	}
	[Token(Token = "0x20003D2")]
	public class WeaponCartridge : SVRInteractable
	{
		[Token(Token = "0x4001537")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public Transform weaponTransform;

		[Token(Token = "0x4001538")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[SerializeField]
		private Weapon weapon;

		[Token(Token = "0x60016B6")]
		[Address(RVA = "0xD583B4", Offset = "0xD583B4", VA = "0xD583B4", Slot = "5")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x60016B7")]
		[Address(RVA = "0xD583D0", Offset = "0xD583D0", VA = "0xD583D0", Slot = "12")]
		public override void HoverEnter(SVRHand hand)
		{
		}

		[Token(Token = "0x60016B8")]
		[Address(RVA = "0xD584D4", Offset = "0xD584D4", VA = "0xD584D4", Slot = "14")]
		public override void HoverExit(SVRHand hand)
		{
		}

		[Token(Token = "0x60016B9")]
		[Address(RVA = "0xD585D4", Offset = "0xD585D4", VA = "0xD585D4", Slot = "13")]
		public override void HoveringUpdate(SVRHand hand)
		{
		}

		[Token(Token = "0x60016BA")]
		[Address(RVA = "0xD58CB4", Offset = "0xD58CB4", VA = "0xD58CB4", Slot = "8")]
		public override void UpdateColliders()
		{
		}

		[Token(Token = "0x60016BB")]
		[Address(RVA = "0xD58DC0", Offset = "0xD58DC0", VA = "0xD58DC0")]
		public Weapon GetWeapon()
		{
			return null;
		}

		[Token(Token = "0x60016BC")]
		[Address(RVA = "0xD58DC8", Offset = "0xD58DC8", VA = "0xD58DC8")]
		public void SaveWeapon()
		{
		}

		[Token(Token = "0x60016BD")]
		[Address(RVA = "0xD58ED4", Offset = "0xD58ED4", VA = "0xD58ED4")]
		public WeaponModel GetWeaponModel()
		{
			return default(WeaponModel);
		}

		[Token(Token = "0x60016BE")]
		[Address(RVA = "0xD58EF0", Offset = "0xD58EF0", VA = "0xD58EF0")]
		public WeaponCartridge()
		{
		}
	}
	[Token(Token = "0x20003D3")]
	public class WeaponCartridges : MonoBehaviour
	{
		[Token(Token = "0x4001539")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public WeaponCartridge main;

		[Token(Token = "0x400153A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public WeaponCartridge secondary;

		[Token(Token = "0x60016BF")]
		[Address(RVA = "0xD58F48", Offset = "0xD58F48", VA = "0xD58F48")]
		public WeaponCartridges()
		{
		}
	}
	[Token(Token = "0x20003D4")]
	public class WeaponComponent : MonoBehaviour
	{
		[Token(Token = "0x400153B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected Weapon weapon;

		[Token(Token = "0x400153C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		protected bool disabled;

		[Token(Token = "0x60016C0")]
		[Address(RVA = "0xD58F50", Offset = "0xD58F50", VA = "0xD58F50", Slot = "4")]
		public virtual void InitComponent(Weapon weapon)
		{
		}

		[Token(Token = "0x60016C1")]
		[Address(RVA = "0xD58F74", Offset = "0xD58F74", VA = "0xD58F74", Slot = "5")]
		public virtual void ActivateComponent()
		{
		}

		[Token(Token = "0x60016C2")]
		[Address(RVA = "0xD58F88", Offset = "0xD58F88", VA = "0xD58F88", Slot = "6")]
		public virtual void DeactivateComponent()
		{
		}

		[Token(Token = "0x60016C3")]
		[Address(RVA = "0xD58F94", Offset = "0xD58F94", VA = "0xD58F94", Slot = "7")]
		public virtual void DisableComponent()
		{
		}

		[Token(Token = "0x60016C4")]
		[Address(RVA = "0xD58FA8", Offset = "0xD58FA8", VA = "0xD58FA8", Slot = "8")]
		public virtual void EnableComponent()
		{
		}

		[Token(Token = "0x60016C5")]
		[Address(RVA = "0xD58FB8", Offset = "0xD58FB8", VA = "0xD58FB8", Slot = "9")]
		public virtual void AutoConfigure(Weapon weapon)
		{
		}

		[Token(Token = "0x60016C6")]
		[Address(RVA = "0xD58FBC", Offset = "0xD58FBC", VA = "0xD58FBC")]
		public WeaponComponent()
		{
		}
	}
	[Token(Token = "0x20003D5")]
	public class WeaponComponentInteractable : SVRInteractable
	{
		[Token(Token = "0x400153D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		protected Weapon weapon;

		[Token(Token = "0x400153E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		protected bool disabled;

		[Token(Token = "0x60016C7")]
		[Address(RVA = "0xD58FC4", Offset = "0xD58FC4", VA = "0xD58FC4", Slot = "20")]
		public virtual void InitComponent(Weapon weapon)
		{
		}

		[Token(Token = "0x60016C8")]
		[Address(RVA = "0xD58FE4", Offset = "0xD58FE4", VA = "0xD58FE4", Slot = "21")]
		public virtual void ActivateComponent()
		{
		}

		[Token(Token = "0x60016C9")]
		[Address(RVA = "0xD58FF4", Offset = "0xD58FF4", VA = "0xD58FF4", Slot = "22")]
		public virtual void DeactivateComponent()
		{
		}

		[Token(Token = "0x60016CA")]
		[Address(RVA = "0xD5907C", Offset = "0xD5907C", VA = "0xD5907C", Slot = "23")]
		public virtual void DisableComponent()
		{
		}

		[Token(Token = "0x60016CB")]
		[Address(RVA = "0xD59094", Offset = "0xD59094", VA = "0xD59094", Slot = "24")]
		public virtual void EnableComponent()
		{
		}

		[Token(Token = "0x60016CC")]
		[Address(RVA = "0xD590A8", Offset = "0xD590A8", VA = "0xD590A8", Slot = "25")]
		public virtual void AutoConfigure(Weapon weapon)
		{
		}

		[Token(Token = "0x60016CD")]
		[Address(RVA = "0xD590AC", Offset = "0xD590AC", VA = "0xD590AC")]
		public WeaponComponentInteractable()
		{
		}
	}
	[Token(Token = "0x20003D6")]
	public class WeaponConfiguration : MonoBehaviour
	{
		[Token(Token = "0x60016CE")]
		[Address(RVA = "0xD59104", Offset = "0xD59104", VA = "0xD59104")]
		public void autoConfigure(Weapon weapon)
		{
		}

		[Token(Token = "0x60016CF")]
		[Address(RVA = "0xD59108", Offset = "0xD59108", VA = "0xD59108")]
		public void autoConfigure(Magazine magazine)
		{
		}

		[Token(Token = "0x60016D0")]
		[Address(RVA = "0xD5910C", Offset = "0xD5910C", VA = "0xD5910C")]
		public WeaponConfiguration()
		{
		}
	}
	[Token(Token = "0x20003D7")]
	public class WeaponData : MonoBehaviour
	{
		[Token(Token = "0x400153F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int bullets;

		[Token(Token = "0x4001540")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int bulletsPerBurst;

		[Token(Token = "0x4001541")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int currentBullets;

		[Token(Token = "0x4001542")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public int currentBulletsPerBurst;

		[Token(Token = "0x4001543")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float shootInterval;

		[Token(Token = "0x4001544")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string bulletPool;

		[Token(Token = "0x4001545")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Transform firePoint;

		[Token(Token = "0x4001546")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public SoundEffect fireSound;

		[Token(Token = "0x60016D1")]
		[Address(RVA = "0xD59114", Offset = "0xD59114", VA = "0xD59114")]
		public WeaponData()
		{
		}
	}
}
namespace SevenZip
{
	[Token(Token = "0x20003D8")]
	internal class CRC
	{
		[Token(Token = "0x4001547")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly uint[] Table;

		[Token(Token = "0x4001548")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private uint _value;

		[Token(Token = "0x60016D2")]
		[Address(RVA = "0xD5911C", Offset = "0xD5911C", VA = "0xD5911C")]
		static CRC()
		{
		}

		[Token(Token = "0x60016D3")]
		[Address(RVA = "0xD591F8", Offset = "0xD591F8", VA = "0xD591F8")]
		public void Init()
		{
		}

		[Token(Token = "0x60016D4")]
		[Address(RVA = "0xD59204", Offset = "0xD59204", VA = "0xD59204")]
		public void UpdateByte(byte b)
		{
		}

		[Token(Token = "0x60016D5")]
		[Address(RVA = "0xD592A0", Offset = "0xD592A0", VA = "0xD592A0")]
		public void Update(byte[] data, uint offset, uint size)
		{
		}

		[Token(Token = "0x60016D6")]
		[Address(RVA = "0xD5936C", Offset = "0xD5936C", VA = "0xD5936C")]
		public uint GetDigest()
		{
			return default(uint);
		}

		[Token(Token = "0x60016D7")]
		[Address(RVA = "0xD59378", Offset = "0xD59378", VA = "0xD59378")]
		private static uint CalculateDigest(byte[] data, uint offset, uint size)
		{
			return default(uint);
		}

		[Token(Token = "0x60016D8")]
		[Address(RVA = "0xD59418", Offset = "0xD59418", VA = "0xD59418")]
		private static bool VerifyDigest(uint digest, byte[] data, uint offset, uint size)
		{
			return default(bool);
		}

		[Token(Token = "0x60016D9")]
		[Address(RVA = "0xD59408", Offset = "0xD59408", VA = "0xD59408")]
		public CRC()
		{
		}
	}
	[Token(Token = "0x20003D9")]
	internal class DataErrorException : ApplicationException
	{
		[Token(Token = "0x60016DA")]
		[Address(RVA = "0xD5949C", Offset = "0xD5949C", VA = "0xD5949C")]
		public DataErrorException()
		{
		}
	}
	[Token(Token = "0x20003DA")]
	internal class InvalidParamException : ApplicationException
	{
		[Token(Token = "0x60016DB")]
		[Address(RVA = "0xD594E8", Offset = "0xD594E8", VA = "0xD594E8")]
		public InvalidParamException()
		{
		}
	}
	[Token(Token = "0x20003DB")]
	public interface ICodeProgress
	{
		[Token(Token = "0x60016DC")]
		void SetProgress(long inSize, long outSize);
	}
	[Token(Token = "0x20003DC")]
	public interface ICoder
	{
		[Token(Token = "0x60016DD")]
		void Code(Stream inStream, Stream outStream, long inSize, long outSize, ICodeProgress progress);
	}
	[Token(Token = "0x20003DD")]
	public enum CoderPropID
	{
		[Token(Token = "0x400154A")]
		DictionarySize = 1024,
		[Token(Token = "0x400154B")]
		UsedMemorySize = 1025,
		[Token(Token = "0x400154C")]
		Order = 1026,
		[Token(Token = "0x400154D")]
		PosStateBits = 1088,
		[Token(Token = "0x400154E")]
		LitContextBits = 1089,
		[Token(Token = "0x400154F")]
		LitPosBits = 1090,
		[Token(Token = "0x4001550")]
		NumFastBytes = 1104,
		[Token(Token = "0x4001551")]
		MatchFinder = 1105,
		[Token(Token = "0x4001552")]
		NumPasses = 1120,
		[Token(Token = "0x4001553")]
		Algorithm = 1136,
		[Token(Token = "0x4001554")]
		MultiThread = 1152,
		[Token(Token = "0x4001555")]
		EndMarker = 1168
	}
	[Token(Token = "0x20003DE")]
	public interface ISetCoderProperties
	{
		[Token(Token = "0x60016DE")]
		void SetCoderProperties(CoderPropID[] propIDs, object[] properties);
	}
	[Token(Token = "0x20003DF")]
	public interface IWriteCoderProperties
	{
		[Token(Token = "0x60016DF")]
		void WriteCoderProperties(Stream outStream);
	}
	[Token(Token = "0x20003E0")]
	public interface ISetDecoderProperties
	{
		[Token(Token = "0x60016E0")]
		void SetDecoderProperties(byte[] properties);
	}
}
namespace SevenZip.Compression.RangeCoder
{
	[Token(Token = "0x20003E1")]
	internal class Encoder
	{
		[Token(Token = "0x4001556")]
		public const uint kTopValue = 16777216u;

		[Token(Token = "0x4001557")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Stream Stream;

		[Token(Token = "0x4001558")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ulong Low;

		[Token(Token = "0x4001559")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public uint Range;

		[Token(Token = "0x400155A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private uint _cacheSize;

		[Token(Token = "0x400155B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private byte _cache;

		[Token(Token = "0x400155C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private long StartPosition;

		[Token(Token = "0x60016E1")]
		[Address(RVA = "0xD59534", Offset = "0xD59534", VA = "0xD59534")]
		public void SetStream(Stream stream)
		{
		}

		[Token(Token = "0x60016E2")]
		[Address(RVA = "0xD5953C", Offset = "0xD5953C", VA = "0xD5953C")]
		public void ReleaseStream()
		{
		}

		[Token(Token = "0x60016E3")]
		[Address(RVA = "0xD59548", Offset = "0xD59548", VA = "0xD59548")]
		public void Init()
		{
		}

		[Token(Token = "0x60016E4")]
		[Address(RVA = "0xD59588", Offset = "0xD59588", VA = "0xD59588")]
		public void FlushData()
		{
		}

		[Token(Token = "0x60016E5")]
		[Address(RVA = "0xD59648", Offset = "0xD59648", VA = "0xD59648")]
		public void FlushStream()
		{
		}

		[Token(Token = "0x60016E6")]
		[Address(RVA = "0xD5966C", Offset = "0xD5966C", VA = "0xD5966C")]
		public void CloseStream()
		{
		}

		[Token(Token = "0x60016E7")]
		[Address(RVA = "0xD59690", Offset = "0xD59690", VA = "0xD59690")]
		public void Encode(uint start, uint size, uint total)
		{
		}

		[Token(Token = "0x60016E8")]
		[Address(RVA = "0xD595B4", Offset = "0xD595B4", VA = "0xD595B4")]
		public void ShiftLow()
		{
		}

		[Token(Token = "0x60016E9")]
		[Address(RVA = "0xD596E4", Offset = "0xD596E4", VA = "0xD596E4")]
		public void EncodeDirectBits(uint v, int numTotalBits)
		{
		}

		[Token(Token = "0x60016EA")]
		[Address(RVA = "0xD59758", Offset = "0xD59758", VA = "0xD59758")]
		public void EncodeBit(uint size0, int numTotalBits, uint symbol)
		{
		}

		[Token(Token = "0x60016EB")]
		[Address(RVA = "0xD597B0", Offset = "0xD597B0", VA = "0xD597B0")]
		public long GetProcessedSizeAdd()
		{
			return default(long);
		}

		[Token(Token = "0x60016EC")]
		[Address(RVA = "0xD597F4", Offset = "0xD597F4", VA = "0xD597F4")]
		public Encoder()
		{
		}
	}
	[Token(Token = "0x20003E2")]
	internal class Decoder
	{
		[Token(Token = "0x400155D")]
		public const uint kTopValue = 16777216u;

		[Token(Token = "0x400155E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public uint Range;

		[Token(Token = "0x400155F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public uint Code;

		[Token(Token = "0x4001560")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Stream Stream;

		[Token(Token = "0x60016ED")]
		[Address(RVA = "0xD597FC", Offset = "0xD597FC", VA = "0xD597FC")]
		public void Init(Stream stream)
		{
		}

		[Token(Token = "0x60016EE")]
		[Address(RVA = "0xD5986C", Offset = "0xD5986C", VA = "0xD5986C")]
		public void ReleaseStream()
		{
		}

		[Token(Token = "0x60016EF")]
		[Address(RVA = "0xD59878", Offset = "0xD59878", VA = "0xD59878")]
		public void CloseStream()
		{
		}

		[Token(Token = "0x60016F0")]
		[Address(RVA = "0xD5989C", Offset = "0xD5989C", VA = "0xD5989C")]
		public void Normalize()
		{
		}

		[Token(Token = "0x60016F1")]
		[Address(RVA = "0xD598F4", Offset = "0xD598F4", VA = "0xD598F4")]
		public void Normalize2()
		{
		}

		[Token(Token = "0x60016F2")]
		[Address(RVA = "0xD59944", Offset = "0xD59944", VA = "0xD59944")]
		public uint GetThreshold(uint total)
		{
			return default(uint);
		}

		[Token(Token = "0x60016F3")]
		[Address(RVA = "0xD5995C", Offset = "0xD5995C", VA = "0xD5995C")]
		public void Decode(uint start, uint size, uint total)
		{
		}

		[Token(Token = "0x60016F4")]
		[Address(RVA = "0xD59970", Offset = "0xD59970", VA = "0xD59970")]
		public uint DecodeDirectBits(int numTotalBits)
		{
			return default(uint);
		}

		[Token(Token = "0x60016F5")]
		[Address(RVA = "0xD59A20", Offset = "0xD59A20", VA = "0xD59A20")]
		public uint DecodeBit(uint size0, int numTotalBits)
		{
			return default(uint);
		}

		[Token(Token = "0x60016F6")]
		[Address(RVA = "0xD59A60", Offset = "0xD59A60", VA = "0xD59A60")]
		public Decoder()
		{
		}
	}
	[Token(Token = "0x20003E3")]
	internal struct BitEncoder
	{
		[Token(Token = "0x4001561")]
		public const int kNumBitModelTotalBits = 11;

		[Token(Token = "0x4001562")]
		public const uint kBitModelTotal = 2048u;

		[Token(Token = "0x4001563")]
		private const int kNumMoveBits = 5;

		[Token(Token = "0x4001564")]
		private const int kNumMoveReducingBits = 2;

		[Token(Token = "0x4001565")]
		public const int kNumBitPriceShiftBits = 6;

		[Token(Token = "0x4001566")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private uint Prob;

		[Token(Token = "0x4001567")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static uint[] ProbPrices;

		[Token(Token = "0x60016F7")]
		[Address(RVA = "0xD59A68", Offset = "0xD59A68", VA = "0xD59A68")]
		public void Init()
		{
		}

		[Token(Token = "0x60016F8")]
		[Address(RVA = "0xD59A74", Offset = "0xD59A74", VA = "0xD59A74")]
		public void UpdateModel(uint symbol)
		{
		}

		[Token(Token = "0x60016F9")]
		[Address(RVA = "0xD59A98", Offset = "0xD59A98", VA = "0xD59A98")]
		public void Encode(Encoder encoder, uint symbol)
		{
		}

		[Token(Token = "0x60016FA")]
		[Address(RVA = "0xD59B0C", Offset = "0xD59B0C", VA = "0xD59B0C")]
		static BitEncoder()
		{
		}

		[Token(Token = "0x60016FB")]
		[Address(RVA = "0xD59C10", Offset = "0xD59C10", VA = "0xD59C10")]
		public uint GetPrice(uint symbol)
		{
			return default(uint);
		}

		[Token(Token = "0x60016FC")]
		[Address(RVA = "0xD59CB8", Offset = "0xD59CB8", VA = "0xD59CB8")]
		public uint GetPrice0()
		{
			return default(uint);
		}

		[Token(Token = "0x60016FD")]
		[Address(RVA = "0xD59D3C", Offset = "0xD59D3C", VA = "0xD59D3C")]
		public uint GetPrice1()
		{
			return default(uint);
		}
	}
	[Token(Token = "0x20003E4")]
	internal struct BitDecoder
	{
		[Token(Token = "0x4001568")]
		public const int kNumBitModelTotalBits = 11;

		[Token(Token = "0x4001569")]
		public const uint kBitModelTotal = 2048u;

		[Token(Token = "0x400156A")]
		private const int kNumMoveBits = 5;

		[Token(Token = "0x400156B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private uint Prob;

		[Token(Token = "0x60016FE")]
		[Address(RVA = "0xD59DC8", Offset = "0xD59DC8", VA = "0xD59DC8")]
		public void UpdateModel(int numMoveBits, uint symbol)
		{
		}

		[Token(Token = "0x60016FF")]
		[Address(RVA = "0xD59DF4", Offset = "0xD59DF4", VA = "0xD59DF4")]
		public void Init()
		{
		}

		[Token(Token = "0x6001700")]
		[Address(RVA = "0xD59E00", Offset = "0xD59E00", VA = "0xD59E00")]
		public uint Decode(Decoder rangeDecoder)
		{
			return default(uint);
		}
	}
	[Token(Token = "0x20003E5")]
	internal struct BitTreeEncoder
	{
		[Token(Token = "0x400156C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private BitEncoder[] Models;

		[Token(Token = "0x400156D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private int NumBitLevels;

		[Token(Token = "0x6001701")]
		[Address(RVA = "0xD59ED8", Offset = "0xD59ED8", VA = "0xD59ED8")]
		public BitTreeEncoder(int numBitLevels)
		{
		}

		[Token(Token = "0x6001702")]
		[Address(RVA = "0xD59F44", Offset = "0xD59F44", VA = "0xD59F44")]
		public void Init()
		{
		}

		[Token(Token = "0x6001703")]
		[Address(RVA = "0xD59FA8", Offset = "0xD59FA8", VA = "0xD59FA8")]
		public void Encode(Encoder rangeEncoder, uint symbol)
		{
		}

		[Token(Token = "0x6001704")]
		[Address(RVA = "0xD5A03C", Offset = "0xD5A03C", VA = "0xD5A03C")]
		public void ReverseEncode(Encoder rangeEncoder, uint symbol)
		{
		}

		[Token(Token = "0x6001705")]
		[Address(RVA = "0xD5A0D4", Offset = "0xD5A0D4", VA = "0xD5A0D4")]
		public uint GetPrice(uint symbol)
		{
			return default(uint);
		}

		[Token(Token = "0x6001706")]
		[Address(RVA = "0xD5A174", Offset = "0xD5A174", VA = "0xD5A174")]
		public uint ReverseGetPrice(uint symbol)
		{
			return default(uint);
		}

		[Token(Token = "0x6001707")]
		[Address(RVA = "0xD5A210", Offset = "0xD5A210", VA = "0xD5A210")]
		public static uint ReverseGetPrice(BitEncoder[] Models, uint startIndex, int NumBitLevels, uint symbol)
		{
			return default(uint);
		}

		[Token(Token = "0x6001708")]
		[Address(RVA = "0xD5A2AC", Offset = "0xD5A2AC", VA = "0xD5A2AC")]
		public static void ReverseEncode(BitEncoder[] Models, uint startIndex, Encoder rangeEncoder, int NumBitLevels, uint symbol)
		{
		}
	}
	[Token(Token = "0x20003E6")]
	internal struct BitTreeDecoder
	{
		[Token(Token = "0x400156E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private BitDecoder[] Models;

		[Token(Token = "0x400156F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private int NumBitLevels;

		[Token(Token = "0x6001709")]
		[Address(RVA = "0xD5A338", Offset = "0xD5A338", VA = "0xD5A338")]
		public BitTreeDecoder(int numBitLevels)
		{
		}

		[Token(Token = "0x600170A")]
		[Address(RVA = "0xD5A3A4", Offset = "0xD5A3A4", VA = "0xD5A3A4")]
		public void Init()
		{
		}

		[Token(Token = "0x600170B")]
		[Address(RVA = "0xD5A408", Offset = "0xD5A408", VA = "0xD5A408")]
		public uint Decode(Decoder rangeDecoder)
		{
			return default(uint);
		}

		[Token(Token = "0x600170C")]
		[Address(RVA = "0xD5A494", Offset = "0xD5A494", VA = "0xD5A494")]
		public uint ReverseDecode(Decoder rangeDecoder)
		{
			return default(uint);
		}

		[Token(Token = "0x600170D")]
		[Address(RVA = "0xD5A524", Offset = "0xD5A524", VA = "0xD5A524")]
		public static uint ReverseDecode(BitDecoder[] Models, uint startIndex, Decoder rangeDecoder, int NumBitLevels)
		{
			return default(uint);
		}
	}
}
namespace SevenZip.Compression.LZMA
{
	[Token(Token = "0x20003E7")]
	internal abstract class Base
	{
		[Token(Token = "0x20003E8")]
		public struct State
		{
			[Token(Token = "0x400158B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public uint Index;

			[Token(Token = "0x6001710")]
			[Address(RVA = "0xD5A5D8", Offset = "0xD5A5D8", VA = "0xD5A5D8")]
			public void Init()
			{
			}

			[Token(Token = "0x6001711")]
			[Address(RVA = "0xD5A5E0", Offset = "0xD5A5E0", VA = "0xD5A5E0")]
			public void UpdateChar()
			{
			}

			[Token(Token = "0x6001712")]
			[Address(RVA = "0xD5A610", Offset = "0xD5A610", VA = "0xD5A610")]
			public void UpdateMatch()
			{
			}

			[Token(Token = "0x6001713")]
			[Address(RVA = "0xD5A62C", Offset = "0xD5A62C", VA = "0xD5A62C")]
			public void UpdateRep()
			{
			}

			[Token(Token = "0x6001714")]
			[Address(RVA = "0xD5A648", Offset = "0xD5A648", VA = "0xD5A648")]
			public void UpdateShortRep()
			{
			}

			[Token(Token = "0x6001715")]
			[Address(RVA = "0xD5A664", Offset = "0xD5A664", VA = "0xD5A664")]
			public bool IsCharState()
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4001570")]
		public const uint kNumRepDistances = 4u;

		[Token(Token = "0x4001571")]
		public const uint kNumStates = 12u;

		[Token(Token = "0x4001572")]
		public const int kNumPosSlotBits = 6;

		[Token(Token = "0x4001573")]
		public const int kDicLogSizeMin = 0;

		[Token(Token = "0x4001574")]
		public const int kNumLenToPosStatesBits = 2;

		[Token(Token = "0x4001575")]
		public const uint kNumLenToPosStates = 4u;

		[Token(Token = "0x4001576")]
		public const uint kMatchMinLen = 2u;

		[Token(Token = "0x4001577")]
		public const int kNumAlignBits = 4;

		[Token(Token = "0x4001578")]
		public const uint kAlignTableSize = 16u;

		[Token(Token = "0x4001579")]
		public const uint kAlignMask = 15u;

		[Token(Token = "0x400157A")]
		public const uint kStartPosModelIndex = 4u;

		[Token(Token = "0x400157B")]
		public const uint kEndPosModelIndex = 14u;

		[Token(Token = "0x400157C")]
		public const uint kNumPosModels = 10u;

		[Token(Token = "0x400157D")]
		public const uint kNumFullDistances = 128u;

		[Token(Token = "0x400157E")]
		public const uint kNumLitPosStatesBitsEncodingMax = 4u;

		[Token(Token = "0x400157F")]
		public const uint kNumLitContextBitsMax = 8u;

		[Token(Token = "0x4001580")]
		public const int kNumPosStatesBitsMax = 4;

		[Token(Token = "0x4001581")]
		public const uint kNumPosStatesMax = 16u;

		[Token(Token = "0x4001582")]
		public const int kNumPosStatesBitsEncodingMax = 4;

		[Token(Token = "0x4001583")]
		public const uint kNumPosStatesEncodingMax = 16u;

		[Token(Token = "0x4001584")]
		public const int kNumLowLenBits = 3;

		[Token(Token = "0x4001585")]
		public const int kNumMidLenBits = 3;

		[Token(Token = "0x4001586")]
		public const int kNumHighLenBits = 8;

		[Token(Token = "0x4001587")]
		public const uint kNumLowLenSymbols = 8u;

		[Token(Token = "0x4001588")]
		public const uint kNumMidLenSymbols = 8u;

		[Token(Token = "0x4001589")]
		public const uint kNumLenSymbols = 272u;

		[Token(Token = "0x400158A")]
		public const uint kMatchMaxLen = 273u;

		[Token(Token = "0x600170E")]
		[Address(RVA = "0xD5A5BC", Offset = "0xD5A5BC", VA = "0xD5A5BC")]
		public static uint GetLenToPosState(uint len)
		{
			return default(uint);
		}

		[Token(Token = "0x600170F")]
		[Address(RVA = "0xD5A5D0", Offset = "0xD5A5D0", VA = "0xD5A5D0")]
		protected Base()
		{
		}
	}
	[Token(Token = "0x20003E9")]
	public class Decoder : ICoder, ISetDecoderProperties
	{
		[Token(Token = "0x20003EA")]
		private class LenDecoder
		{
			[Token(Token = "0x400159E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private BitDecoder m_Choice;

			[Token(Token = "0x400159F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			private BitDecoder m_Choice2;

			[Token(Token = "0x40015A0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private BitTreeDecoder[] m_LowCoder;

			[Token(Token = "0x40015A1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private BitTreeDecoder[] m_MidCoder;

			[Token(Token = "0x40015A2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private BitTreeDecoder m_HighCoder;

			[Token(Token = "0x40015A3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private uint m_NumPosStates;

			[Token(Token = "0x600171E")]
			[Address(RVA = "0xD5AD10", Offset = "0xD5AD10", VA = "0xD5AD10")]
			public void Create(uint numPosStates)
			{
			}

			[Token(Token = "0x600171F")]
			[Address(RVA = "0xD5B05C", Offset = "0xD5B05C", VA = "0xD5B05C")]
			public void Init()
			{
			}

			[Token(Token = "0x6001720")]
			[Address(RVA = "0xD5B6DC", Offset = "0xD5B6DC", VA = "0xD5B6DC")]
			public uint Decode(SevenZip.Compression.RangeCoder.Decoder rangeDecoder, uint posState)
			{
				return default(uint);
			}

			[Token(Token = "0x6001721")]
			[Address(RVA = "0xD5A968", Offset = "0xD5A968", VA = "0xD5A968")]
			public LenDecoder()
			{
			}
		}

		[Token(Token = "0x20003EB")]
		private class LiteralDecoder
		{
			[Token(Token = "0x20003EC")]
			private struct Decoder2
			{
				[Token(Token = "0x40015A8")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
				private BitDecoder[] m_Decoders;

				[Token(Token = "0x6001728")]
				[Address(RVA = "0xD5BACC", Offset = "0xD5BACC", VA = "0xD5BACC")]
				public void Create()
				{
				}

				[Token(Token = "0x6001729")]
				[Address(RVA = "0xD5BB24", Offset = "0xD5BB24", VA = "0xD5BB24")]
				public void Init()
				{
				}

				[Token(Token = "0x600172A")]
				[Address(RVA = "0xD5BB90", Offset = "0xD5BB90", VA = "0xD5BB90")]
				public byte DecodeNormal(SevenZip.Compression.RangeCoder.Decoder rangeDecoder)
				{
					return default(byte);
				}

				[Token(Token = "0x600172B")]
				[Address(RVA = "0xD5BBEC", Offset = "0xD5BBEC", VA = "0xD5BBEC")]
				public byte DecodeWithMatchByte(SevenZip.Compression.RangeCoder.Decoder rangeDecoder, byte matchByte)
				{
					return default(byte);
				}
			}

			[Token(Token = "0x40015A4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private Decoder2[] m_Coders;

			[Token(Token = "0x40015A5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private int m_NumPrevBits;

			[Token(Token = "0x40015A6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			private int m_NumPosBits;

			[Token(Token = "0x40015A7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private uint m_PosMask;

			[Token(Token = "0x6001722")]
			[Address(RVA = "0xD5AB98", Offset = "0xD5AB98", VA = "0xD5AB98")]
			public void Create(int numPosBits, int numPrevBits)
			{
			}

			[Token(Token = "0x6001723")]
			[Address(RVA = "0xD5AFF4", Offset = "0xD5AFF4", VA = "0xD5AFF4")]
			public void Init()
			{
			}

			[Token(Token = "0x6001724")]
			[Address(RVA = "0xD5BB68", Offset = "0xD5BB68", VA = "0xD5BB68")]
			private uint GetState(uint pos, byte prevByte)
			{
				return default(uint);
			}

			[Token(Token = "0x6001725")]
			[Address(RVA = "0xD5B598", Offset = "0xD5B598", VA = "0xD5B598")]
			public byte DecodeNormal(SevenZip.Compression.RangeCoder.Decoder rangeDecoder, uint pos, byte prevByte)
			{
				return default(byte);
			}

			[Token(Token = "0x6001726")]
			[Address(RVA = "0xD5B684", Offset = "0xD5B684", VA = "0xD5B684")]
			public byte DecodeWithMatchByte(SevenZip.Compression.RangeCoder.Decoder rangeDecoder, uint pos, byte prevByte, byte matchByte)
			{
				return default(byte);
			}

			[Token(Token = "0x6001727")]
			[Address(RVA = "0xD5AA18", Offset = "0xD5AA18", VA = "0xD5AA18")]
			public LiteralDecoder()
			{
			}
		}

		[Token(Token = "0x400158C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private OutWindow m_OutWindow;

		[Token(Token = "0x400158D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private SevenZip.Compression.RangeCoder.Decoder m_RangeDecoder;

		[Token(Token = "0x400158E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private BitDecoder[] m_IsMatchDecoders;

		[Token(Token = "0x400158F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private BitDecoder[] m_IsRepDecoders;

		[Token(Token = "0x4001590")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private BitDecoder[] m_IsRepG0Decoders;

		[Token(Token = "0x4001591")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private BitDecoder[] m_IsRepG1Decoders;

		[Token(Token = "0x4001592")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private BitDecoder[] m_IsRepG2Decoders;

		[Token(Token = "0x4001593")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private BitDecoder[] m_IsRep0LongDecoders;

		[Token(Token = "0x4001594")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private BitTreeDecoder[] m_PosSlotDecoder;

		[Token(Token = "0x4001595")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private BitDecoder[] m_PosDecoders;

		[Token(Token = "0x4001596")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private BitTreeDecoder m_PosAlignDecoder;

		[Token(Token = "0x4001597")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private LenDecoder m_LenDecoder;

		[Token(Token = "0x4001598")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private LenDecoder m_RepLenDecoder;

		[Token(Token = "0x4001599")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private LiteralDecoder m_LiteralDecoder;

		[Token(Token = "0x400159A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private uint m_DictionarySize;

		[Token(Token = "0x400159B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private uint m_DictionarySizeCheck;

		[Token(Token = "0x400159C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private uint m_PosStateMask;

		[Token(Token = "0x400159D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		private bool _solid;

		[Token(Token = "0x6001716")]
		[Address(RVA = "0xD5A674", Offset = "0xD5A674", VA = "0xD5A674")]
		public Decoder()
		{
		}

		[Token(Token = "0x6001717")]
		[Address(RVA = "0xD5AA20", Offset = "0xD5AA20", VA = "0xD5AA20")]
		private void SetDictionarySize(uint dictionarySize)
		{
		}

		[Token(Token = "0x6001718")]
		[Address(RVA = "0xD5AB38", Offset = "0xD5AB38", VA = "0xD5AB38")]
		private void SetLiteralProperties(int lp, int lc)
		{
		}

		[Token(Token = "0x6001719")]
		[Address(RVA = "0xD5AC84", Offset = "0xD5AC84", VA = "0xD5AC84")]
		private void SetPosBitsProperties(int pb)
		{
		}

		[Token(Token = "0x600171A")]
		[Address(RVA = "0xD5ADE8", Offset = "0xD5ADE8", VA = "0xD5ADE8")]
		private void Init(Stream inStream, Stream outStream)
		{
		}

		[Token(Token = "0x600171B")]
		[Address(RVA = "0xD5B0F0", Offset = "0xD5B0F0", VA = "0xD5B0F0", Slot = "4")]
		public void Code(Stream inStream, Stream outStream, long inSize, long outSize, ICodeProgress progress)
		{
		}

		[Token(Token = "0x600171C")]
		[Address(RVA = "0xD5B8B4", Offset = "0xD5B8B4", VA = "0xD5B8B4", Slot = "5")]
		public void SetDecoderProperties(byte[] properties)
		{
		}

		[Token(Token = "0x600171D")]
		[Address(RVA = "0xD5B9D8", Offset = "0xD5B9D8", VA = "0xD5B9D8")]
		public bool Train(Stream stream)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20003ED")]
	public class Encoder : ICoder, ISetCoderProperties, IWriteCoderProperties
	{
		[Token(Token = "0x20003EE")]
		private enum EMatchFinderType
		{
			[Token(Token = "0x40015E4")]
			BT2,
			[Token(Token = "0x40015E5")]
			BT4
		}

		[Token(Token = "0x20003EF")]
		private class LiteralEncoder
		{
			[Token(Token = "0x20003F0")]
			public struct Encoder2
			{
				[Token(Token = "0x40015EA")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
				private BitEncoder[] m_Encoders;

				[Token(Token = "0x6001750")]
				[Address(RVA = "0xD60B80", Offset = "0xD60B80", VA = "0xD60B80")]
				public void Create()
				{
				}

				[Token(Token = "0x6001751")]
				[Address(RVA = "0xD60BD8", Offset = "0xD60BD8", VA = "0xD60BD8")]
				public void Init()
				{
				}

				[Token(Token = "0x6001752")]
				[Address(RVA = "0xD5FF78", Offset = "0xD5FF78", VA = "0xD5FF78")]
				public void Encode(SevenZip.Compression.RangeCoder.Encoder rangeEncoder, byte symbol)
				{
				}

				[Token(Token = "0x6001753")]
				[Address(RVA = "0xD5FFFC", Offset = "0xD5FFFC", VA = "0xD5FFFC")]
				public void EncodeMatched(SevenZip.Compression.RangeCoder.Encoder rangeEncoder, byte matchByte, byte symbol)
				{
				}

				[Token(Token = "0x6001754")]
				[Address(RVA = "0xD5F104", Offset = "0xD5F104", VA = "0xD5F104")]
				public uint GetPrice(bool matchMode, byte matchByte, byte symbol)
				{
					return default(uint);
				}
			}

			[Token(Token = "0x40015E6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private Encoder2[] m_Coders;

			[Token(Token = "0x40015E7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private int m_NumPrevBits;

			[Token(Token = "0x40015E8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			private int m_NumPosBits;

			[Token(Token = "0x40015E9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private uint m_PosMask;

			[Token(Token = "0x600174C")]
			[Address(RVA = "0xD5C2D0", Offset = "0xD5C2D0", VA = "0xD5C2D0")]
			public void Create(int numPosBits, int numPrevBits)
			{
			}

			[Token(Token = "0x600174D")]
			[Address(RVA = "0xD5CAC8", Offset = "0xD5CAC8", VA = "0xD5CAC8")]
			public void Init()
			{
			}

			[Token(Token = "0x600174E")]
			[Address(RVA = "0xD5F0B0", Offset = "0xD5F0B0", VA = "0xD5F0B0")]
			public Encoder2 GetSubCoder(uint pos, byte prevByte)
			{
				return default(Encoder2);
			}

			[Token(Token = "0x600174F")]
			[Address(RVA = "0xD5C8F4", Offset = "0xD5C8F4", VA = "0xD5C8F4")]
			public LiteralEncoder()
			{
			}
		}

		[Token(Token = "0x20003F1")]
		private class LenEncoder
		{
			[Token(Token = "0x40015EB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private BitEncoder _choice;

			[Token(Token = "0x40015EC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			private BitEncoder _choice2;

			[Token(Token = "0x40015ED")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private BitTreeEncoder[] _lowCoder;

			[Token(Token = "0x40015EE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private BitTreeEncoder[] _midCoder;

			[Token(Token = "0x40015EF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private BitTreeEncoder _highCoder;

			[Token(Token = "0x6001755")]
			[Address(RVA = "0xD60C1C", Offset = "0xD60C1C", VA = "0xD60C1C")]
			public LenEncoder()
			{
			}

			[Token(Token = "0x6001756")]
			[Address(RVA = "0xD5CB30", Offset = "0xD5CB30", VA = "0xD5CB30")]
			public void Init(uint numPosStates)
			{
			}

			[Token(Token = "0x6001757")]
			[Address(RVA = "0xD60D6C", Offset = "0xD60D6C", VA = "0xD60D6C")]
			public void Encode(SevenZip.Compression.RangeCoder.Encoder rangeEncoder, uint symbol, uint posState)
			{
			}

			[Token(Token = "0x6001758")]
			[Address(RVA = "0xD60E4C", Offset = "0xD60E4C", VA = "0xD60E4C")]
			public void SetPrices(uint posState, uint numSymbols, uint[] prices, uint st)
			{
			}
		}

		[Token(Token = "0x20003F2")]
		private class LenPriceTableEncoder : LenEncoder
		{
			[Token(Token = "0x40015F0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private uint[] _prices;

			[Token(Token = "0x40015F1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private uint _tableSize;

			[Token(Token = "0x40015F2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private uint[] _counters;

			[Token(Token = "0x6001759")]
			[Address(RVA = "0xD60FF8", Offset = "0xD60FF8", VA = "0xD60FF8")]
			public void SetTableSize(uint tableSize)
			{
			}

			[Token(Token = "0x600175A")]
			[Address(RVA = "0xD5D008", Offset = "0xD5D008", VA = "0xD5D008")]
			public uint GetPrice(uint symbol, uint posState)
			{
				return default(uint);
			}

			[Token(Token = "0x600175B")]
			[Address(RVA = "0xD61000", Offset = "0xD61000", VA = "0xD61000")]
			private void UpdateTable(uint posState)
			{
			}

			[Token(Token = "0x600175C")]
			[Address(RVA = "0xD6052C", Offset = "0xD6052C", VA = "0xD6052C")]
			public void UpdateTables(uint numPosStates)
			{
			}

			[Token(Token = "0x600175D")]
			[Address(RVA = "0xD5F34C", Offset = "0xD5F34C", VA = "0xD5F34C")]
			public new void Encode(SevenZip.Compression.RangeCoder.Encoder rangeEncoder, uint symbol, uint posState)
			{
			}

			[Token(Token = "0x600175E")]
			[Address(RVA = "0xD5C878", Offset = "0xD5C878", VA = "0xD5C878")]
			public LenPriceTableEncoder()
			{
			}
		}

		[Token(Token = "0x20003F3")]
		private class Optimal
		{
			[Token(Token = "0x40015F3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Base.State State;

			[Token(Token = "0x40015F4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public bool Prev1IsChar;

			[Token(Token = "0x40015F5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x15")]
			public bool Prev2;

			[Token(Token = "0x40015F6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public uint PosPrev2;

			[Token(Token = "0x40015F7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public uint BackPrev2;

			[Token(Token = "0x40015F8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public uint Price;

			[Token(Token = "0x40015F9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public uint PosPrev;

			[Token(Token = "0x40015FA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public uint BackPrev;

			[Token(Token = "0x40015FB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public uint Backs0;

			[Token(Token = "0x40015FC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public uint Backs1;

			[Token(Token = "0x40015FD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			public uint Backs2;

			[Token(Token = "0x40015FE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public uint Backs3;

			[Token(Token = "0x600175F")]
			[Address(RVA = "0xD5D230", Offset = "0xD5D230", VA = "0xD5D230")]
			public void MakeAsChar()
			{
			}

			[Token(Token = "0x6001760")]
			[Address(RVA = "0xD5F210", Offset = "0xD5F210", VA = "0xD5F210")]
			public void MakeAsShortRep()
			{
			}

			[Token(Token = "0x6001761")]
			[Address(RVA = "0xD5F21C", Offset = "0xD5F21C", VA = "0xD5F21C")]
			public bool IsShortRep()
			{
				return default(bool);
			}

			[Token(Token = "0x6001762")]
			[Address(RVA = "0xD5C8FC", Offset = "0xD5C8FC", VA = "0xD5C8FC")]
			public Optimal()
			{
			}
		}

		[Token(Token = "0x40015A9")]
		private const uint kIfinityPrice = 268435455u;

		[Token(Token = "0x40015AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static byte[] g_FastPos;

		[Token(Token = "0x40015AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Base.State _state;

		[Token(Token = "0x40015AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private byte _previousByte;

		[Token(Token = "0x40015AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private uint[] _repDistances;

		[Token(Token = "0x40015AE")]
		private const int kDefaultDictionaryLogSize = 22;

		[Token(Token = "0x40015AF")]
		private const uint kNumFastBytesDefault = 32u;

		[Token(Token = "0x40015B0")]
		private const uint kNumLenSpecSymbols = 16u;

		[Token(Token = "0x40015B1")]
		private const uint kNumOpts = 4096u;

		[Token(Token = "0x40015B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Optimal[] _optimum;

		[Token(Token = "0x40015B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private IMatchFinder _matchFinder;

		[Token(Token = "0x40015B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private SevenZip.Compression.RangeCoder.Encoder _rangeEncoder;

		[Token(Token = "0x40015B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private BitEncoder[] _isMatch;

		[Token(Token = "0x40015B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private BitEncoder[] _isRep;

		[Token(Token = "0x40015B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private BitEncoder[] _isRepG0;

		[Token(Token = "0x40015B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private BitEncoder[] _isRepG1;

		[Token(Token = "0x40015B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private BitEncoder[] _isRepG2;

		[Token(Token = "0x40015BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private BitEncoder[] _isRep0Long;

		[Token(Token = "0x40015BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private BitTreeEncoder[] _posSlotEncoder;

		[Token(Token = "0x40015BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private BitEncoder[] _posEncoders;

		[Token(Token = "0x40015BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private BitTreeEncoder _posAlignEncoder;

		[Token(Token = "0x40015BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private LenPriceTableEncoder _lenEncoder;

		[Token(Token = "0x40015BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private LenPriceTableEncoder _repMatchLenEncoder;

		[Token(Token = "0x40015C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private LiteralEncoder _literalEncoder;

		[Token(Token = "0x40015C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private uint[] _matchDistances;

		[Token(Token = "0x40015C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private uint _numFastBytes;

		[Token(Token = "0x40015C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		private uint _longestMatchLength;

		[Token(Token = "0x40015C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private uint _numDistancePairs;

		[Token(Token = "0x40015C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		private uint _additionalOffset;

		[Token(Token = "0x40015C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private uint _optimumEndIndex;

		[Token(Token = "0x40015C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		private uint _optimumCurrentIndex;

		[Token(Token = "0x40015C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private bool _longestMatchWasFound;

		[Token(Token = "0x40015C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private uint[] _posSlotPrices;

		[Token(Token = "0x40015CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private uint[] _distancesPrices;

		[Token(Token = "0x40015CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private uint[] _alignPrices;

		[Token(Token = "0x40015CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private uint _alignPriceCount;

		[Token(Token = "0x40015CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		private uint _distTableSize;

		[Token(Token = "0x40015CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private int _posStateBits;

		[Token(Token = "0x40015CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
		private uint _posStateMask;

		[Token(Token = "0x40015D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private int _numLiteralPosStateBits;

		[Token(Token = "0x40015D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
		private int _numLiteralContextBits;

		[Token(Token = "0x40015D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private uint _dictionarySize;

		[Token(Token = "0x40015D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
		private uint _dictionarySizePrev;

		[Token(Token = "0x40015D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		private uint _numFastBytesPrev;

		[Token(Token = "0x40015D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		private long nowPos64;

		[Token(Token = "0x40015D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		private bool _finished;

		[Token(Token = "0x40015D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		private Stream _inStream;

		[Token(Token = "0x40015D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		private EMatchFinderType _matchFinderType;

		[Token(Token = "0x40015D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
		private bool _writeEndMark;

		[Token(Token = "0x40015DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x125")]
		private bool _needReleaseMFStream;

		[Token(Token = "0x40015DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		private uint[] reps;

		[Token(Token = "0x40015DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		private uint[] repLens;

		[Token(Token = "0x40015DD")]
		private const int kPropSize = 5;

		[Token(Token = "0x40015DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		private byte[] properties;

		[Token(Token = "0x40015DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		private uint[] tempPrices;

		[Token(Token = "0x40015E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		private uint _matchPriceCount;

		[Token(Token = "0x40015E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static string[] kMatchFinderIDs;

		[Token(Token = "0x40015E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14C")]
		private uint _trainSize;

		[Token(Token = "0x600172C")]
		[Address(RVA = "0xD5BCA0", Offset = "0xD5BCA0", VA = "0xD5BCA0")]
		static Encoder()
		{
		}

		[Token(Token = "0x600172D")]
		[Address(RVA = "0xD5BEC4", Offset = "0xD5BEC4", VA = "0xD5BEC4")]
		private static uint GetPosSlot(uint pos)
		{
			return default(uint);
		}

		[Token(Token = "0x600172E")]
		[Address(RVA = "0xD5BFB0", Offset = "0xD5BFB0", VA = "0xD5BFB0")]
		private static uint GetPosSlot2(uint pos)
		{
			return default(uint);
		}

		[Token(Token = "0x600172F")]
		[Address(RVA = "0xD5C098", Offset = "0xD5C098", VA = "0xD5C098")]
		private void BaseInit()
		{
		}

		[Token(Token = "0x6001730")]
		[Address(RVA = "0xD5C0E0", Offset = "0xD5C0E0", VA = "0xD5C0E0")]
		private void Create()
		{
		}

		[Token(Token = "0x6001731")]
		[Address(RVA = "0xD5C3BC", Offset = "0xD5C3BC", VA = "0xD5C3BC")]
		public Encoder()
		{
		}

		[Token(Token = "0x6001732")]
		[Address(RVA = "0xD5C904", Offset = "0xD5C904", VA = "0xD5C904")]
		private void SetWriteEndMarkerMode(bool writeEndMarker)
		{
		}

		[Token(Token = "0x6001733")]
		[Address(RVA = "0xD5C910", Offset = "0xD5C910", VA = "0xD5C910")]
		private void Init()
		{
		}

		[Token(Token = "0x6001734")]
		[Address(RVA = "0xD5CBBC", Offset = "0xD5CBBC", VA = "0xD5CBBC")]
		private void ReadMatchDistances(out uint lenRes, out uint numDistancePairs)
		{
		}

		[Token(Token = "0x6001735")]
		[Address(RVA = "0xD5CD80", Offset = "0xD5CD80", VA = "0xD5CD80")]
		private void MovePos(uint num)
		{
		}

		[Token(Token = "0x6001736")]
		[Address(RVA = "0xD5CE40", Offset = "0xD5CE40", VA = "0xD5CE40")]
		private uint GetRepLen1Price(Base.State state, uint posState)
		{
			return default(uint);
		}

		[Token(Token = "0x6001737")]
		[Address(RVA = "0xD5CEB4", Offset = "0xD5CEB4", VA = "0xD5CEB4")]
		private uint GetPureRepPrice(uint repIndex, Base.State state, uint posState)
		{
			return default(uint);
		}

		[Token(Token = "0x6001738")]
		[Address(RVA = "0xD5CFA8", Offset = "0xD5CFA8", VA = "0xD5CFA8")]
		private uint GetRepPrice(uint repIndex, uint len, Base.State state, uint posState)
		{
			return default(uint);
		}

		[Token(Token = "0x6001739")]
		[Address(RVA = "0xD5D040", Offset = "0xD5D040", VA = "0xD5D040")]
		private uint GetPosLenPrice(uint pos, uint len, uint posState)
		{
			return default(uint);
		}

		[Token(Token = "0x600173A")]
		[Address(RVA = "0xD5D154", Offset = "0xD5D154", VA = "0xD5D154")]
		private uint Backward(out uint backRes, uint cur)
		{
			return default(uint);
		}

		[Token(Token = "0x600173B")]
		[Address(RVA = "0xD5D240", Offset = "0xD5D240", VA = "0xD5D240")]
		private uint GetOptimum(uint position, out uint backRes)
		{
			return default(uint);
		}

		[Token(Token = "0x600173C")]
		[Address(RVA = "0xD5F22C", Offset = "0xD5F22C", VA = "0xD5F22C")]
		private bool ChangePair(uint smallDist, uint bigDist)
		{
			return default(bool);
		}

		[Token(Token = "0x600173D")]
		[Address(RVA = "0xD5F248", Offset = "0xD5F248", VA = "0xD5F248")]
		private void WriteEndMarker(uint posState)
		{
		}

		[Token(Token = "0x600173E")]
		[Address(RVA = "0xD5F3B0", Offset = "0xD5F3B0", VA = "0xD5F3B0")]
		private void Flush(uint nowPos)
		{
		}

		[Token(Token = "0x600173F")]
		[Address(RVA = "0xD5F4CC", Offset = "0xD5F4CC", VA = "0xD5F4CC")]
		public void CodeOneBlock(out long inSize, out long outSize, out bool finished)
		{
		}

		[Token(Token = "0x6001740")]
		[Address(RVA = "0xD5F41C", Offset = "0xD5F41C", VA = "0xD5F41C")]
		private void ReleaseMFStream()
		{
		}

		[Token(Token = "0x6001741")]
		[Address(RVA = "0xD603F0", Offset = "0xD603F0", VA = "0xD603F0")]
		private void SetOutStream(Stream outStream)
		{
		}

		[Token(Token = "0x6001742")]
		[Address(RVA = "0xD6040C", Offset = "0xD6040C", VA = "0xD6040C")]
		private void ReleaseOutStream()
		{
		}

		[Token(Token = "0x6001743")]
		[Address(RVA = "0xD6042C", Offset = "0xD6042C", VA = "0xD6042C")]
		private void ReleaseStreams()
		{
		}

		[Token(Token = "0x6001744")]
		[Address(RVA = "0xD60444", Offset = "0xD60444", VA = "0xD60444")]
		private void SetStreams(Stream inStream, Stream outStream, long inSize, long outSize)
		{
		}

		[Token(Token = "0x6001745")]
		[Address(RVA = "0xD60568", Offset = "0xD60568", VA = "0xD60568", Slot = "4")]
		public void Code(Stream inStream, Stream outStream, long inSize, long outSize, ICodeProgress progress)
		{
		}

		[Token(Token = "0x6001746")]
		[Address(RVA = "0xD606E4", Offset = "0xD606E4", VA = "0xD606E4", Slot = "6")]
		public void WriteCoderProperties(Stream outStream)
		{
		}

		[Token(Token = "0x6001747")]
		[Address(RVA = "0xD600B8", Offset = "0xD600B8", VA = "0xD600B8")]
		private void FillDistancesPrices()
		{
		}

		[Token(Token = "0x6001748")]
		[Address(RVA = "0xD60388", Offset = "0xD60388", VA = "0xD60388")]
		private void FillAlignPrices()
		{
		}

		[Token(Token = "0x6001749")]
		[Address(RVA = "0xD60784", Offset = "0xD60784", VA = "0xD60784")]
		private static int FindMatchFinder(string s)
		{
			return default(int);
		}

		[Token(Token = "0x600174A")]
		[Address(RVA = "0xD6084C", Offset = "0xD6084C", VA = "0xD6084C", Slot = "5")]
		public void SetCoderProperties(CoderPropID[] propIDs, object[] properties)
		{
		}

		[Token(Token = "0x600174B")]
		[Address(RVA = "0xD60B78", Offset = "0xD60B78", VA = "0xD60B78")]
		public void SetTrainSize(uint trainSize)
		{
		}
	}
	[Token(Token = "0x20003F4")]
	public static class SevenZipHelper
	{
		[Token(Token = "0x40015FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static int dictionary;

		[Token(Token = "0x4001600")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private static bool eos;

		[Token(Token = "0x4001601")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static CoderPropID[] propIDs;

		[Token(Token = "0x4001602")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static object[] properties;

		[Token(Token = "0x6001763")]
		[Address(RVA = "0xD61058", Offset = "0xD61058", VA = "0xD61058")]
		public static byte[] Compress(byte[] inputBytes)
		{
			return null;
		}

		[Token(Token = "0x6001764")]
		[Address(RVA = "0xD611A4", Offset = "0xD611A4", VA = "0xD611A4")]
		public static byte[] Decompress(byte[] inputBytes)
		{
			return null;
		}
	}
}
namespace SevenZip.Compression.LZ
{
	[Token(Token = "0x20003F5")]
	internal interface IInWindowStream
	{
		[Token(Token = "0x6001766")]
		void SetStream(Stream inStream);

		[Token(Token = "0x6001767")]
		void Init();

		[Token(Token = "0x6001768")]
		void ReleaseStream();

		[Token(Token = "0x6001769")]
		byte GetIndexByte(int index);

		[Token(Token = "0x600176A")]
		uint GetMatchLen(int index, uint distance, uint limit);

		[Token(Token = "0x600176B")]
		uint GetNumAvailableBytes();
	}
	[Token(Token = "0x20003F6")]
	internal interface IMatchFinder : IInWindowStream
	{
		[Token(Token = "0x600176C")]
		void Create(uint historySize, uint keepAddBufferBefore, uint matchMaxLen, uint keepAddBufferAfter);

		[Token(Token = "0x600176D")]
		uint GetMatches(uint[] distances);

		[Token(Token = "0x600176E")]
		void Skip(uint num);
	}
	[Token(Token = "0x20003F7")]
	public class BinTree : InWindow, IMatchFinder, IInWindowStream
	{
		[Token(Token = "0x4001603")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private uint _cyclicBufferPos;

		[Token(Token = "0x4001604")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private uint _cyclicBufferSize;

		[Token(Token = "0x4001605")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private uint _matchMaxLen;

		[Token(Token = "0x4001606")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private uint[] _son;

		[Token(Token = "0x4001607")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private uint[] _hash;

		[Token(Token = "0x4001608")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private uint _cutValue;

		[Token(Token = "0x4001609")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private uint _hashMask;

		[Token(Token = "0x400160A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private uint _hashSizeSum;

		[Token(Token = "0x400160B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private bool HASH_ARRAY;

		[Token(Token = "0x400160C")]
		private const uint kHash2Size = 1024u;

		[Token(Token = "0x400160D")]
		private const uint kHash3Size = 65536u;

		[Token(Token = "0x400160E")]
		private const uint kBT2HashSize = 65536u;

		[Token(Token = "0x400160F")]
		private const uint kStartMaxLen = 1u;

		[Token(Token = "0x4001610")]
		private const uint kHash3Offset = 1024u;

		[Token(Token = "0x4001611")]
		private const uint kEmptyHashValue = 0u;

		[Token(Token = "0x4001612")]
		private const uint kMaxValForNormalize = 2147483647u;

		[Token(Token = "0x4001613")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private uint kNumHashDirectBytes;

		[Token(Token = "0x4001614")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private uint kMinMatchCheck;

		[Token(Token = "0x4001615")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private uint kFixHashSize;

		[Token(Token = "0x600176F")]
		[Address(RVA = "0xD5C298", Offset = "0xD5C298", VA = "0xD5C298")]
		public void SetType(int numHashBytes)
		{
		}

		[Token(Token = "0x6001770")]
		[Address(RVA = "0xD61764", Offset = "0xD61764", VA = "0xD61764", Slot = "8")]
		public new void SetStream(Stream stream)
		{
		}

		[Token(Token = "0x6001771")]
		[Address(RVA = "0xD6176C", Offset = "0xD6176C", VA = "0xD6176C", Slot = "10")]
		public new void ReleaseStream()
		{
		}

		[Token(Token = "0x6001772")]
		[Address(RVA = "0xD61784", Offset = "0xD61784", VA = "0xD61784", Slot = "9")]
		public new void Init()
		{
		}

		[Token(Token = "0x6001773")]
		[Address(RVA = "0xD61870", Offset = "0xD61870", VA = "0xD61870")]
		public new void MovePos()
		{
		}

		[Token(Token = "0x6001774")]
		[Address(RVA = "0xD6197C", Offset = "0xD6197C", VA = "0xD6197C", Slot = "11")]
		public new byte GetIndexByte(int index)
		{
			return default(byte);
		}

		[Token(Token = "0x6001775")]
		[Address(RVA = "0xD619F0", Offset = "0xD619F0", VA = "0xD619F0", Slot = "12")]
		public new uint GetMatchLen(int index, uint distance, uint limit)
		{
			return default(uint);
		}

		[Token(Token = "0x6001776")]
		[Address(RVA = "0xD61AA0", Offset = "0xD61AA0", VA = "0xD61AA0", Slot = "13")]
		public new uint GetNumAvailableBytes()
		{
			return default(uint);
		}

		[Token(Token = "0x6001777")]
		[Address(RVA = "0xD61AC0", Offset = "0xD61AC0", VA = "0xD61AC0", Slot = "5")]
		public void Create(uint historySize, uint keepAddBufferBefore, uint matchMaxLen, uint keepAddBufferAfter)
		{
		}

		[Token(Token = "0x6001778")]
		[Address(RVA = "0xD61CFC", Offset = "0xD61CFC", VA = "0xD61CFC", Slot = "6")]
		public uint GetMatches(uint[] distances)
		{
			return default(uint);
		}

		[Token(Token = "0x6001779")]
		[Address(RVA = "0xD623E4", Offset = "0xD623E4", VA = "0xD623E4", Slot = "7")]
		public void Skip(uint num)
		{
		}

		[Token(Token = "0x600177A")]
		[Address(RVA = "0xD62858", Offset = "0xD62858", VA = "0xD62858")]
		private void NormalizeLinks(uint[] items, uint numItems, uint subValue)
		{
		}

		[Token(Token = "0x600177B")]
		[Address(RVA = "0xD61908", Offset = "0xD61908", VA = "0xD61908")]
		private void Normalize()
		{
		}

		[Token(Token = "0x600177C")]
		[Address(RVA = "0xD628A8", Offset = "0xD628A8", VA = "0xD628A8")]
		public void SetCutValue(uint cutValue)
		{
		}

		[Token(Token = "0x600177D")]
		[Address(RVA = "0xD5C274", Offset = "0xD5C274", VA = "0xD5C274")]
		public BinTree()
		{
		}
	}
	[Token(Token = "0x20003F8")]
	public class InWindow
	{
		[Token(Token = "0x4001616")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public byte[] _bufferBase;

		[Token(Token = "0x4001617")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Stream _stream;

		[Token(Token = "0x4001618")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private uint _posLimit;

		[Token(Token = "0x4001619")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private bool _streamEndWasReached;

		[Token(Token = "0x400161A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private uint _pointerToLastSafePosition;

		[Token(Token = "0x400161B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public uint _bufferOffset;

		[Token(Token = "0x400161C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public uint _blockSize;

		[Token(Token = "0x400161D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public uint _pos;

		[Token(Token = "0x400161E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private uint _keepSizeBefore;

		[Token(Token = "0x400161F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private uint _keepSizeAfter;

		[Token(Token = "0x4001620")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public uint _streamPos;

		[Token(Token = "0x600177E")]
		[Address(RVA = "0xD628B8", Offset = "0xD628B8", VA = "0xD628B8")]
		public void MoveBlock()
		{
		}

		[Token(Token = "0x600177F")]
		[Address(RVA = "0xD62944", Offset = "0xD62944", VA = "0xD62944", Slot = "4")]
		public virtual void ReadBlock()
		{
		}

		[Token(Token = "0x6001780")]
		[Address(RVA = "0xD629EC", Offset = "0xD629EC", VA = "0xD629EC")]
		private void Free()
		{
		}

		[Token(Token = "0x6001781")]
		[Address(RVA = "0xD61C48", Offset = "0xD61C48", VA = "0xD61C48")]
		public void Create(uint keepSizeBefore, uint keepSizeAfter, uint keepSizeReserv)
		{
		}

		[Token(Token = "0x6001782")]
		[Address(RVA = "0xD629F8", Offset = "0xD629F8", VA = "0xD629F8")]
		public void SetStream(Stream stream)
		{
		}

		[Token(Token = "0x6001783")]
		[Address(RVA = "0xD61778", Offset = "0xD61778", VA = "0xD61778")]
		public void ReleaseStream()
		{
		}

		[Token(Token = "0x6001784")]
		[Address(RVA = "0xD61820", Offset = "0xD61820", VA = "0xD61820")]
		public void Init()
		{
		}

		[Token(Token = "0x6001785")]
		[Address(RVA = "0xD618B4", Offset = "0xD618B4", VA = "0xD618B4")]
		public void MovePos()
		{
		}

		[Token(Token = "0x6001786")]
		[Address(RVA = "0xD61980", Offset = "0xD61980", VA = "0xD61980")]
		public byte GetIndexByte(int index)
		{
			return default(byte);
		}

		[Token(Token = "0x6001787")]
		[Address(RVA = "0xD619F4", Offset = "0xD619F4", VA = "0xD619F4")]
		public uint GetMatchLen(int index, uint distance, uint limit)
		{
			return default(uint);
		}

		[Token(Token = "0x6001788")]
		[Address(RVA = "0xD61AB0", Offset = "0xD61AB0", VA = "0xD61AB0")]
		public uint GetNumAvailableBytes()
		{
			return default(uint);
		}

		[Token(Token = "0x6001789")]
		[Address(RVA = "0xD6183C", Offset = "0xD6183C", VA = "0xD6183C")]
		public void ReduceOffsets(int subValue)
		{
		}

		[Token(Token = "0x600178A")]
		[Address(RVA = "0xD628B0", Offset = "0xD628B0", VA = "0xD628B0")]
		public InWindow()
		{
		}
	}
	[Token(Token = "0x20003F9")]
	public class OutWindow
	{
		[Token(Token = "0x4001621")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private byte[] _buffer;

		[Token(Token = "0x4001622")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private uint _pos;

		[Token(Token = "0x4001623")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private uint _windowSize;

		[Token(Token = "0x4001624")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private uint _streamPos;

		[Token(Token = "0x4001625")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Stream _stream;

		[Token(Token = "0x4001626")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public uint TrainSize;

		[Token(Token = "0x600178B")]
		[Address(RVA = "0xD5AAC4", Offset = "0xD5AAC4", VA = "0xD5AAC4")]
		public void Create(uint windowSize)
		{
		}

		[Token(Token = "0x600178C")]
		[Address(RVA = "0xD5AF94", Offset = "0xD5AF94", VA = "0xD5AF94")]
		public void Init(Stream stream, bool solid)
		{
		}

		[Token(Token = "0x600178D")]
		[Address(RVA = "0xD5B9FC", Offset = "0xD5B9FC", VA = "0xD5B9FC")]
		public bool Train(Stream stream)
		{
			return default(bool);
		}

		[Token(Token = "0x600178E")]
		[Address(RVA = "0xD5B894", Offset = "0xD5B894", VA = "0xD5B894")]
		public void ReleaseStream()
		{
		}

		[Token(Token = "0x600178F")]
		[Address(RVA = "0xD5B83C", Offset = "0xD5B83C", VA = "0xD5B83C")]
		public void Flush()
		{
		}

		[Token(Token = "0x6001790")]
		[Address(RVA = "0xD5B788", Offset = "0xD5B788", VA = "0xD5B788")]
		public void CopyBlock(uint distance, uint len)
		{
		}

		[Token(Token = "0x6001791")]
		[Address(RVA = "0xD5B5EC", Offset = "0xD5B5EC", VA = "0xD5B5EC")]
		public void PutByte(byte b)
		{
		}

		[Token(Token = "0x6001792")]
		[Address(RVA = "0xD5B63C", Offset = "0xD5B63C", VA = "0xD5B63C")]
		public byte GetByte(uint distance)
		{
			return default(byte);
		}

		[Token(Token = "0x6001793")]
		[Address(RVA = "0xD5A960", Offset = "0xD5A960", VA = "0xD5A960")]
		public OutWindow()
		{
		}
	}
}
namespace SevenZip.Buffer
{
	[Token(Token = "0x20003FA")]
	public class InBuffer
	{
		[Token(Token = "0x4001627")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private byte[] m_Buffer;

		[Token(Token = "0x4001628")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private uint m_Pos;

		[Token(Token = "0x4001629")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private uint m_Limit;

		[Token(Token = "0x400162A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private uint m_BufferSize;

		[Token(Token = "0x400162B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Stream m_Stream;

		[Token(Token = "0x400162C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool m_StreamWasExhausted;

		[Token(Token = "0x400162D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private ulong m_ProcessedSize;

		[Token(Token = "0x6001794")]
		[Address(RVA = "0xD62A00", Offset = "0xD62A00", VA = "0xD62A00")]
		public InBuffer(uint bufferSize)
		{
		}

		[Token(Token = "0x6001795")]
		[Address(RVA = "0xD62A78", Offset = "0xD62A78", VA = "0xD62A78")]
		public void Init(Stream stream)
		{
		}

		[Token(Token = "0x6001796")]
		[Address(RVA = "0xD62AA0", Offset = "0xD62AA0", VA = "0xD62AA0")]
		public bool ReadBlock()
		{
			return default(bool);
		}

		[Token(Token = "0x6001797")]
		[Address(RVA = "0xD62B0C", Offset = "0xD62B0C", VA = "0xD62B0C")]
		public void ReleaseStream()
		{
		}

		[Token(Token = "0x6001798")]
		[Address(RVA = "0xD62B18", Offset = "0xD62B18", VA = "0xD62B18")]
		public bool ReadByte(byte b)
		{
			return default(bool);
		}

		[Token(Token = "0x6001799")]
		[Address(RVA = "0xD62B74", Offset = "0xD62B74", VA = "0xD62B74")]
		public byte ReadByte()
		{
			return default(byte);
		}

		[Token(Token = "0x600179A")]
		[Address(RVA = "0xD62BD4", Offset = "0xD62BD4", VA = "0xD62BD4")]
		public ulong GetProcessedSize()
		{
			return default(ulong);
		}
	}
	[Token(Token = "0x20003FB")]
	public class OutBuffer
	{
		[Token(Token = "0x400162E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private byte[] m_Buffer;

		[Token(Token = "0x400162F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private uint m_Pos;

		[Token(Token = "0x4001630")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private uint m_BufferSize;

		[Token(Token = "0x4001631")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Stream m_Stream;

		[Token(Token = "0x4001632")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private ulong m_ProcessedSize;

		[Token(Token = "0x600179B")]
		[Address(RVA = "0xD62BE4", Offset = "0xD62BE4", VA = "0xD62BE4")]
		public OutBuffer(uint bufferSize)
		{
		}

		[Token(Token = "0x600179C")]
		[Address(RVA = "0xD62C5C", Offset = "0xD62C5C", VA = "0xD62C5C")]
		public void SetStream(Stream stream)
		{
		}

		[Token(Token = "0x600179D")]
		[Address(RVA = "0xD62C64", Offset = "0xD62C64", VA = "0xD62C64")]
		public void FlushStream()
		{
		}

		[Token(Token = "0x600179E")]
		[Address(RVA = "0xD62C88", Offset = "0xD62C88", VA = "0xD62C88")]
		public void CloseStream()
		{
		}

		[Token(Token = "0x600179F")]
		[Address(RVA = "0xD62CAC", Offset = "0xD62CAC", VA = "0xD62CAC")]
		public void ReleaseStream()
		{
		}

		[Token(Token = "0x60017A0")]
		[Address(RVA = "0xD62CB8", Offset = "0xD62CB8", VA = "0xD62CB8")]
		public void Init()
		{
		}

		[Token(Token = "0x60017A1")]
		[Address(RVA = "0xD62CC4", Offset = "0xD62CC4", VA = "0xD62CC4")]
		public void WriteByte(byte b)
		{
		}

		[Token(Token = "0x60017A2")]
		[Address(RVA = "0xD62D14", Offset = "0xD62D14", VA = "0xD62D14")]
		public void FlushData()
		{
		}

		[Token(Token = "0x60017A3")]
		[Address(RVA = "0xD62D54", Offset = "0xD62D54", VA = "0xD62D54")]
		public ulong GetProcessedSize()
		{
			return default(ulong);
		}
	}
}
namespace SevenZip.CommandLineParser
{
	[Token(Token = "0x20003FC")]
	public enum SwitchType
	{
		[Token(Token = "0x4001634")]
		Simple,
		[Token(Token = "0x4001635")]
		PostMinus,
		[Token(Token = "0x4001636")]
		LimitedPostString,
		[Token(Token = "0x4001637")]
		UnLimitedPostString,
		[Token(Token = "0x4001638")]
		PostChar
	}
	[Token(Token = "0x20003FD")]
	public class SwitchForm
	{
		[Token(Token = "0x4001639")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string IDString;

		[Token(Token = "0x400163A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public SwitchType Type;

		[Token(Token = "0x400163B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public bool Multi;

		[Token(Token = "0x400163C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int MinLen;

		[Token(Token = "0x400163D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public int MaxLen;

		[Token(Token = "0x400163E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string PostCharSet;

		[Token(Token = "0x60017A4")]
		[Address(RVA = "0xD62D64", Offset = "0xD62D64", VA = "0xD62D64")]
		public SwitchForm(string idString, SwitchType type, bool multi, int minLen, int maxLen, string postCharSet)
		{
		}

		[Token(Token = "0x60017A5")]
		[Address(RVA = "0xD62DD4", Offset = "0xD62DD4", VA = "0xD62DD4")]
		public SwitchForm(string idString, SwitchType type, bool multi, int minLen)
		{
		}

		[Token(Token = "0x60017A6")]
		[Address(RVA = "0xD62E50", Offset = "0xD62E50", VA = "0xD62E50")]
		public SwitchForm(string idString, SwitchType type, bool multi)
		{
		}
	}
	[Token(Token = "0x20003FE")]
	public class SwitchResult
	{
		[Token(Token = "0x400163F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool ThereIs;

		[Token(Token = "0x4001640")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		public bool WithMinus;

		[Token(Token = "0x4001641")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ArrayList PostStrings;

		[Token(Token = "0x4001642")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int PostCharIndex;

		[Token(Token = "0x60017A7")]
		[Address(RVA = "0xD62E5C", Offset = "0xD62E5C", VA = "0xD62E5C")]
		public SwitchResult()
		{
		}
	}
	[Token(Token = "0x20003FF")]
	public class Parser
	{
		[Token(Token = "0x4001643")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public ArrayList NonSwitchStrings;

		[Token(Token = "0x4001644")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private SwitchResult[] _switches;

		[Token(Token = "0x4001645")]
		private const char kSwitchID1 = '-';

		[Token(Token = "0x4001646")]
		private const char kSwitchID2 = '/';

		[Token(Token = "0x4001647")]
		private const char kSwitchMinus = '-';

		[Token(Token = "0x4001648")]
		private const string kStopSwitchParsing = "--";

		[Token(Token = "0x17000135")]
		public SwitchResult this[int index]
		{
			[Token(Token = "0x60017AB")]
			[Address(RVA = "0xD63550", Offset = "0xD63550", VA = "0xD63550")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60017A8")]
		[Address(RVA = "0xD62ED8", Offset = "0xD62ED8", VA = "0xD62ED8")]
		public Parser(int numSwitches)
		{
		}

		[Token(Token = "0x60017A9")]
		[Address(RVA = "0xD63028", Offset = "0xD63028", VA = "0xD63028")]
		private bool ParseString(string srcString, SwitchForm[] switchForms)
		{
			return default(bool);
		}

		[Token(Token = "0x60017AA")]
		[Address(RVA = "0xD63430", Offset = "0xD63430", VA = "0xD63430")]
		public void ParseStrings(SwitchForm[] switchForms, string[] commandStrings)
		{
		}

		[Token(Token = "0x60017AC")]
		[Address(RVA = "0xD63580", Offset = "0xD63580", VA = "0xD63580")]
		public static int ParseCommand(CommandForm[] commandForms, string commandString, out string postString)
		{
			return default(int);
		}

		[Token(Token = "0x60017AD")]
		[Address(RVA = "0xD636A8", Offset = "0xD636A8", VA = "0xD636A8")]
		private static bool ParseSubCharsCommand(int numForms, CommandSubCharsSet[] forms, string commandString, ArrayList indices)
		{
			return default(bool);
		}

		[Token(Token = "0x60017AE")]
		[Address(RVA = "0xD6341C", Offset = "0xD6341C", VA = "0xD6341C")]
		private static bool IsItSwitchChar(char c)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000400")]
	public class CommandForm
	{
		[Token(Token = "0x4001649")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string IDString;

		[Token(Token = "0x400164A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool PostStringMode;

		[Token(Token = "0x60017AF")]
		[Address(RVA = "0xD63858", Offset = "0xD63858", VA = "0xD63858")]
		public CommandForm(string idString, bool postStringMode)
		{
		}
	}
	[Token(Token = "0x2000401")]
	internal class CommandSubCharsSet
	{
		[Token(Token = "0x400164B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string Chars;

		[Token(Token = "0x400164C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool EmptyAllowed;

		[Token(Token = "0x60017B0")]
		[Address(RVA = "0xD638DC", Offset = "0xD638DC", VA = "0xD638DC")]
		public CommandSubCharsSet()
		{
		}
	}
}
namespace BezierSolution
{
	[Token(Token = "0x2000402")]
	public class BezierPoint : MonoBehaviour
	{
		[Token(Token = "0x2000403")]
		public enum HandleMode
		{
			[Token(Token = "0x4001654")]
			Free,
			[Token(Token = "0x4001655")]
			Aligned,
			[Token(Token = "0x4001656")]
			Mirrored
		}

		[Token(Token = "0x400164D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[HideInInspector]
		[SerializeField]
		private Vector3 m_position;

		[Token(Token = "0x400164E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[HideInInspector]
		[SerializeField]
		private Vector3 m_precedingControlPointLocalPosition;

		[Token(Token = "0x400164F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[HideInInspector]
		[SerializeField]
		private Vector3 m_precedingControlPointPosition;

		[Token(Token = "0x4001650")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[HideInInspector]
		[SerializeField]
		private Vector3 m_followingControlPointLocalPosition;

		[Token(Token = "0x4001651")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[HideInInspector]
		[SerializeField]
		private Vector3 m_followingControlPointPosition;

		[Token(Token = "0x4001652")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[SerializeField]
		[HideInInspector]
		private HandleMode m_handleMode;

		[Token(Token = "0x17000136")]
		public Vector3 localPosition
		{
			[Token(Token = "0x60017B1")]
			[Address(RVA = "0xD63934", Offset = "0xD63934", VA = "0xD63934")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x60017B2")]
			[Address(RVA = "0xD63954", Offset = "0xD63954", VA = "0xD63954")]
			set
			{
			}
		}

		[Token(Token = "0x17000137")]
		public Vector3 position
		{
			[Token(Token = "0x60017B3")]
			[Address(RVA = "0xD6399C", Offset = "0xD6399C", VA = "0xD6399C")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x60017B4")]
			[Address(RVA = "0xD63A70", Offset = "0xD63A70", VA = "0xD63A70")]
			set
			{
			}
		}

		[Token(Token = "0x17000138")]
		public Quaternion localRotation
		{
			[Token(Token = "0x60017B5")]
			[Address(RVA = "0xD63AB8", Offset = "0xD63AB8", VA = "0xD63AB8")]
			get
			{
				return default(Quaternion);
			}
			[Token(Token = "0x60017B6")]
			[Address(RVA = "0xD63AD8", Offset = "0xD63AD8", VA = "0xD63AD8")]
			set
			{
			}
		}

		[Token(Token = "0x17000139")]
		public Quaternion rotation
		{
			[Token(Token = "0x60017B7")]
			[Address(RVA = "0xD63B28", Offset = "0xD63B28", VA = "0xD63B28")]
			get
			{
				return default(Quaternion);
			}
			[Token(Token = "0x60017B8")]
			[Address(RVA = "0xD63B48", Offset = "0xD63B48", VA = "0xD63B48")]
			set
			{
			}
		}

		[Token(Token = "0x1700013A")]
		public Vector3 localEulerAngles
		{
			[Token(Token = "0x60017B9")]
			[Address(RVA = "0xD63B98", Offset = "0xD63B98", VA = "0xD63B98")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x60017BA")]
			[Address(RVA = "0xD63BB8", Offset = "0xD63BB8", VA = "0xD63BB8")]
			set
			{
			}
		}

		[Token(Token = "0x1700013B")]
		public Vector3 eulerAngles
		{
			[Token(Token = "0x60017BB")]
			[Address(RVA = "0xD63C00", Offset = "0xD63C00", VA = "0xD63C00")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x60017BC")]
			[Address(RVA = "0xD63C20", Offset = "0xD63C20", VA = "0xD63C20")]
			set
			{
			}
		}

		[Token(Token = "0x1700013C")]
		public Vector3 localScale
		{
			[Token(Token = "0x60017BD")]
			[Address(RVA = "0xD63C68", Offset = "0xD63C68", VA = "0xD63C68")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x60017BE")]
			[Address(RVA = "0xD63C88", Offset = "0xD63C88", VA = "0xD63C88")]
			set
			{
			}
		}

		[Token(Token = "0x1700013D")]
		public Vector3 precedingControlPointLocalPosition
		{
			[Token(Token = "0x60017BF")]
			[Address(RVA = "0xD63CD0", Offset = "0xD63CD0", VA = "0xD63CD0")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x60017C0")]
			[Address(RVA = "0xD63CDC", Offset = "0xD63CDC", VA = "0xD63CDC")]
			set
			{
			}
		}

		[Token(Token = "0x1700013E")]
		public Vector3 precedingControlPointPosition
		{
			[Token(Token = "0x60017C1")]
			[Address(RVA = "0xD63EB4", Offset = "0xD63EB4", VA = "0xD63EB4")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x60017C2")]
			[Address(RVA = "0xD63EF0", Offset = "0xD63EF0", VA = "0xD63EF0")]
			set
			{
			}
		}

		[Token(Token = "0x1700013F")]
		public Vector3 followingControlPointLocalPosition
		{
			[Token(Token = "0x60017C3")]
			[Address(RVA = "0xD64178", Offset = "0xD64178", VA = "0xD64178")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x60017C4")]
			[Address(RVA = "0xD64184", Offset = "0xD64184", VA = "0xD64184")]
			set
			{
			}
		}

		[Token(Token = "0x17000140")]
		public Vector3 followingControlPointPosition
		{
			[Token(Token = "0x60017C5")]
			[Address(RVA = "0xD6435C", Offset = "0xD6435C", VA = "0xD6435C")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x60017C6")]
			[Address(RVA = "0xD64398", Offset = "0xD64398", VA = "0xD64398")]
			set
			{
			}
		}

		[Token(Token = "0x17000141")]
		public HandleMode handleMode
		{
			[Token(Token = "0x60017C7")]
			[Address(RVA = "0xD64620", Offset = "0xD64620", VA = "0xD64620")]
			get
			{
				return default(HandleMode);
			}
			[Token(Token = "0x60017C8")]
			[Address(RVA = "0xD64628", Offset = "0xD64628", VA = "0xD64628")]
			set
			{
			}
		}

		[Token(Token = "0x60017C9")]
		[Address(RVA = "0xD64648", Offset = "0xD64648", VA = "0xD64648")]
		private void Awake()
		{
		}

		[Token(Token = "0x60017CA")]
		[Address(RVA = "0xD6466C", Offset = "0xD6466C", VA = "0xD6466C")]
		public void CopyTo(BezierPoint other)
		{
		}

		[Token(Token = "0x60017CB")]
		[Address(RVA = "0xD639D8", Offset = "0xD639D8", VA = "0xD639D8")]
		private void Revalidate()
		{
		}

		[Token(Token = "0x60017CC")]
		[Address(RVA = "0xD64760", Offset = "0xD64760", VA = "0xD64760")]
		public void Reset()
		{
		}

		[Token(Token = "0x60017CD")]
		[Address(RVA = "0xD648BC", Offset = "0xD648BC", VA = "0xD648BC")]
		public BezierPoint()
		{
		}
	}
	[Token(Token = "0x2000404")]
	[ExecuteInEditMode]
	public class BezierSpline : MonoBehaviour
	{
		[Token(Token = "0x4001657")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Material gizmoMaterial;

		[Token(Token = "0x4001658")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Color gizmoColor;

		[Token(Token = "0x4001659")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float gizmoStep;

		[Token(Token = "0x400165A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public List<BezierPoint> endPoints;

		[Token(Token = "0x400165B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public bool loop;

		[Token(Token = "0x400165C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
		public bool drawGizmos;

		[Token(Token = "0x17000142")]
		public int Count
		{
			[Token(Token = "0x60017CE")]
			[Address(RVA = "0xD64958", Offset = "0xD64958", VA = "0xD64958")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000143")]
		public float Length
		{
			[Token(Token = "0x60017CF")]
			[Address(RVA = "0xD649A0", Offset = "0xD649A0", VA = "0xD649A0")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000144")]
		public BezierPoint this[int index]
		{
			[Token(Token = "0x60017D0")]
			[Address(RVA = "0xD64BA0", Offset = "0xD64BA0", VA = "0xD64BA0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60017D1")]
		[Address(RVA = "0xD64CD0", Offset = "0xD64CD0", VA = "0xD64CD0")]
		private void Awake()
		{
		}

		[Token(Token = "0x60017D2")]
		[Address(RVA = "0xD64D5C", Offset = "0xD64D5C", VA = "0xD64D5C")]
		public void Initialize(int endPointsCount)
		{
		}

		[Token(Token = "0x60017D3")]
		[Address(RVA = "0xD64CD4", Offset = "0xD64CD4", VA = "0xD64CD4")]
		public void Refresh()
		{
		}

		[Token(Token = "0x60017D4")]
		[Address(RVA = "0xD64F34", Offset = "0xD64F34", VA = "0xD64F34")]
		public BezierPoint InsertNewPointAt(int index)
		{
			return null;
		}

		[Token(Token = "0x60017D5")]
		[Address(RVA = "0xD6536C", Offset = "0xD6536C", VA = "0xD6536C")]
		public BezierPoint DuplicatePointAt(int index)
		{
			return null;
		}

		[Token(Token = "0x60017D6")]
		[Address(RVA = "0xD65650", Offset = "0xD65650", VA = "0xD65650")]
		public void RemovePointAt(int index)
		{
		}

		[Token(Token = "0x60017D7")]
		[Address(RVA = "0xD659B4", Offset = "0xD659B4", VA = "0xD659B4")]
		public void SwapPointsAt(int index1, int index2)
		{
		}

		[Token(Token = "0x60017D8")]
		[Address(RVA = "0xD65C20", Offset = "0xD65C20", VA = "0xD65C20")]
		public int IndexOf(BezierPoint point)
		{
			return default(int);
		}

		[Token(Token = "0x60017D9")]
		[Address(RVA = "0xD65C78", Offset = "0xD65C78", VA = "0xD65C78")]
		public void DrawGizmos(Color color, int smoothness = 4)
		{
		}

		[Token(Token = "0x60017DA")]
		[Address(RVA = "0xD65D1C", Offset = "0xD65D1C", VA = "0xD65D1C")]
		public void HideGizmos()
		{
		}

		[Token(Token = "0x60017DB")]
		[Address(RVA = "0xD65D24", Offset = "0xD65D24", VA = "0xD65D24")]
		public Vector3 GetPoint(float normalizedT)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60017DC")]
		[Address(RVA = "0xD65F10", Offset = "0xD65F10", VA = "0xD65F10")]
		public BezierPoint GetCurrentPoint(float normalizedT)
		{
			return null;
		}

		[Token(Token = "0x60017DD")]
		[Address(RVA = "0xD66034", Offset = "0xD66034", VA = "0xD66034")]
		public Vector3 GetTangent(float normalizedT)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60017DE")]
		[Address(RVA = "0xD649B4", Offset = "0xD649B4", VA = "0xD649B4")]
		public float GetLengthApproximately(float startNormalizedT, float endNormalizedT, float accuracy = 50f)
		{
			return default(float);
		}

		[Token(Token = "0x60017DF")]
		[Address(RVA = "0xD66340", Offset = "0xD66340", VA = "0xD66340")]
		public Vector3 FindNearestPointTo(Vector3 worldPos, float accuracy = 100f)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60017E0")]
		[Address(RVA = "0xD66358", Offset = "0xD66358", VA = "0xD66358")]
		public Vector3 FindNearestPointTo(Vector3 worldPos, out float normalizedT, float accuracy = 100f)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60017E1")]
		[Address(RVA = "0xD66488", Offset = "0xD66488", VA = "0xD66488")]
		public Vector3 MoveAlongSpline(ref float normalizedT, ref Vector3 direction, float deltaMovement)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60017E2")]
		[Address(RVA = "0xD665A4", Offset = "0xD665A4", VA = "0xD665A4")]
		public Vector3 MoveAlongSpline(ref float normalizedT, float deltaMovement, int accuracy = 3)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60017E3")]
		[Address(RVA = "0xD666C4", Offset = "0xD666C4", VA = "0xD666C4")]
		public void ConstructLinearPath()
		{
		}

		[Token(Token = "0x60017E4")]
		[Address(RVA = "0xD668D4", Offset = "0xD668D4", VA = "0xD668D4")]
		public void AutoConstructSpline()
		{
		}

		[Token(Token = "0x60017E5")]
		[Address(RVA = "0xD671E8", Offset = "0xD671E8", VA = "0xD671E8")]
		private static Vector3[] GetFirstControlPoints(Vector3[] rhs)
		{
			return null;
		}

		[Token(Token = "0x60017E6")]
		[Address(RVA = "0xD673E8", Offset = "0xD673E8", VA = "0xD673E8")]
		public void AutoConstructSpline2()
		{
		}

		[Token(Token = "0x60017E7")]
		[Address(RVA = "0xD66304", Offset = "0xD66304", VA = "0xD66304")]
		private float AccuracyToStepSize(float accuracy)
		{
			return default(float);
		}

		[Token(Token = "0x60017E8")]
		[Address(RVA = "0xD67720", Offset = "0xD67720", VA = "0xD67720")]
		private void OnRenderObject()
		{
		}

		[Token(Token = "0x60017E9")]
		[Address(RVA = "0xD67A34", Offset = "0xD67A34", VA = "0xD67A34")]
		public BezierSpline()
		{
		}
	}
}
namespace CrisisVRigade2
{
	[Token(Token = "0x2000405")]
	public class AmbientSound : MonoBehaviour
	{
		[Token(Token = "0x400165D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AudioClip ambientSoundClip;

		[Token(Token = "0x400165E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private AudioSource audioSource;

		[Token(Token = "0x400165F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static AmbientSound Instance;

		[Token(Token = "0x4001660")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Tween tween;

		[Token(Token = "0x60017EA")]
		[Address(RVA = "0xD67AD0", Offset = "0xD67AD0", VA = "0xD67AD0")]
		private void Awake()
		{
		}

		[Token(Token = "0x60017EB")]
		[Address(RVA = "0xD67B94", Offset = "0xD67B94", VA = "0xD67B94")]
		public void SetAmbientSoundClip(AudioClip ambientSoundClip, float volume = 1f)
		{
		}

		[Token(Token = "0x60017EC")]
		[Address(RVA = "0xD67E00", Offset = "0xD67E00", VA = "0xD67E00")]
		public void SetAmbientSoundVolume(float volume)
		{
		}

		[Token(Token = "0x60017ED")]
		[Address(RVA = "0xD67F34", Offset = "0xD67F34", VA = "0xD67F34")]
		public AmbientSound()
		{
		}
	}
	[Token(Token = "0x2000407")]
	public class AmbientSoundSetter : MonoBehaviour
	{
		[Token(Token = "0x4001666")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AudioClip ambientSoundClip;

		[Token(Token = "0x4001667")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[Range(0f, 1f)]
		public float ambientSoundVolume;

		[Token(Token = "0x4001668")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private int locationId;

		[Token(Token = "0x60017F6")]
		[Address(RVA = "0xD681AC", Offset = "0xD681AC", VA = "0xD681AC")]
		private void Awake()
		{
		}

		[Token(Token = "0x60017F7")]
		[Address(RVA = "0xD682A4", Offset = "0xD682A4", VA = "0xD682A4")]
		private void OnLocationInitialized(int locationId)
		{
		}

		[Token(Token = "0x60017F8")]
		[Address(RVA = "0xD68370", Offset = "0xD68370", VA = "0xD68370")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60017F9")]
		[Address(RVA = "0xD6843C", Offset = "0xD6843C", VA = "0xD6843C")]
		public AmbientSoundSetter()
		{
		}
	}
	[Token(Token = "0x2000408")]
	public class CommonCharacterController : AimTarget
	{
		[Serializable]
		[Token(Token = "0x2000409")]
		public enum MoveMode
		{
			[Token(Token = "0x40016B3")]
			Directional,
			[Token(Token = "0x40016B4")]
			Strafe
		}

		[Token(Token = "0x2000410")]
		[CompilerGenerated]
		private sealed class <backToHitColliderCoroutine>d__104 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40016D1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40016D2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40016D3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public CommonCharacterController <>4__this;

			[Token(Token = "0x17000145")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600184D")]
				[Address(RVA = "0xD70F5C", Offset = "0xD70F5C", VA = "0xD70F5C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000146")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600184F")]
				[Address(RVA = "0xD70FA4", Offset = "0xD70FA4", VA = "0xD70FA4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600184A")]
			[Address(RVA = "0xD6E8D0", Offset = "0xD6E8D0", VA = "0xD6E8D0")]
			[DebuggerHidden]
			public <backToHitColliderCoroutine>d__104(int <>1__state)
			{
			}

			[Token(Token = "0x600184B")]
			[Address(RVA = "0xD70E88", Offset = "0xD70E88", VA = "0xD70E88", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600184C")]
			[Address(RVA = "0xD70E8C", Offset = "0xD70E8C", VA = "0xD70E8C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600184E")]
			[Address(RVA = "0xD70F64", Offset = "0xD70F64", VA = "0xD70F64", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001669")]
		private const float CENSORED_ENABLED_DELAY = 1f;

		[Token(Token = "0x400166A")]
		public const string TAG_HEAD = "Head";

		[Token(Token = "0x400166B")]
		public const string TAG_BODY = "Body";

		[Token(Token = "0x400166C")]
		public const string TAG_LIMB = "Limb";

		[Token(Token = "0x400166D")]
		public const float NO_BULLET_IMPACT_FORCE = 6f;

		[Token(Token = "0x400166E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public SumalabEvent OnCharacterHit;

		[Token(Token = "0x400166F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public SumalabEvent<HitEvent> OnCharacterHitAdvanced;

		[Token(Token = "0x4001670")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public SumalabEvent<CommonCharacterController> OnCharacterDisabled;

		[Token(Token = "0x4001671")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public SumalabEvent<CommonCharacterController> OnCharacterEnabled;

		[Token(Token = "0x4001672")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public AudioSource audioSource;

		[Token(Token = "0x4001673")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private CharacterSet[] characterSets;

		[Token(Token = "0x4001674")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[HideInInspector]
		public RagdollUtility ragdollUtility;

		[Token(Token = "0x4001675")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public float maxRigidBodyVelocity;

		[Token(Token = "0x4001676")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		public float maxRigidAngular;

		[Token(Token = "0x4001677")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public float timeOutWhenDead;

		[Token(Token = "0x4001678")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		public float hitReactionForce;

		[Token(Token = "0x4001679")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private bool isRagdoll;

		[Token(Token = "0x400167A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x99")]
		private bool firstHit;

		[Token(Token = "0x400167B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9A")]
		public bool forceCollidersEnable;

		[Token(Token = "0x400167C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		public int currentAction;

		[Token(Token = "0x400167D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public bool male;

		[Token(Token = "0x400167E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA1")]
		public bool disableOnDead;

		[Token(Token = "0x400167F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public List<CharacterAction> actions;

		[Token(Token = "0x4001680")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public bool kinematicOnDead;

		[Token(Token = "0x4001681")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private CharacterSphereRaycastItem m_sphereRaycast;

		[Token(Token = "0x4001682")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		protected Collider[] characterColliders;

		[Token(Token = "0x4001683")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private Coroutine backCoroutine;

		[Token(Token = "0x4001684")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		public SumalabEvent OnDead;

		[Token(Token = "0x4001685")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		public int lifes;

		[Token(Token = "0x4001686")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		public SumalabEvent OnCharacterInitialized;

		[Token(Token = "0x4001687")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		public SumalabEvent OnCharacterReady;

		[Token(Token = "0x4001688")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		public SumalabEvent OnCharacterActionReady;

		[Token(Token = "0x4001689")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private SumalabInvoke.SumalabInvokeReference timeOutInvokeHandler;

		[Token(Token = "0x400168A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		public int poolInstance;

		[Token(Token = "0x400168B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
		public bool forceActionActivationInOnline;

		[Token(Token = "0x400168C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x105")]
		public bool forceVisible;

		[Token(Token = "0x400168D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		public Vector3 currentEnabledPosition;

		[Token(Token = "0x400168E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
		private float lastHit;

		[Token(Token = "0x400168F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static float defaultHitCoolDownTime;

		[Token(Token = "0x4001690")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		private float hitCooldownTime;

		[Token(Token = "0x4001691")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
		public bool onlyKilledByPlayers;

		[Token(Token = "0x4001692")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		[Space]
		public MoveMode moveMode;

		[Token(Token = "0x4001693")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
		private float smoothAccelerationTime;

		[Token(Token = "0x4001694")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		private float linearAccelerationSpeed;

		[Token(Token = "0x4001695")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
		protected float turnSpeed;

		[Token(Token = "0x4001696")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		private float stationaryTurnSpeedMlp;

		[Token(Token = "0x4001697")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
		public Vector3 moveDirection;

		[Token(Token = "0x4001698")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		private float angle;

		[Token(Token = "0x4001699")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		public Animator animator;

		[Token(Token = "0x400169A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		private Vector3 moveDirectionVelocity;

		[Token(Token = "0x400169B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x15C")]
		private float turnSensitivity;

		[Token(Token = "0x400169C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		private float animSpeedMultiplier;

		[Token(Token = "0x400169D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x164")]
		private Vector3 lastForwardAnimator;

		[Token(Token = "0x400169E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		public Transform m_root;

		[Token(Token = "0x400169F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		public Transform m_hips;

		[Token(Token = "0x40016A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		public Transform m_head;

		[Token(Token = "0x40016A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
		public Transform m_chest;

		[Token(Token = "0x40016A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
		public Transform m_armR;

		[Token(Token = "0x40016A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
		public Transform m_armL;

		[Token(Token = "0x40016A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
		public Transform m_handR;

		[Token(Token = "0x40016A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
		public Transform m_handL;

		[Token(Token = "0x40016A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
		public Transform headshot_blood_spawner;

		[Token(Token = "0x40016A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
		private HitReaction hitReaction;

		[Token(Token = "0x40016A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
		public int initLifes;

		[Token(Token = "0x40016A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C4")]
		private int currentCharacterSet;

		[Token(Token = "0x40016AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
		private NetworkCharacterController remoteCharacterController;

		[Token(Token = "0x40016AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static Dictionary<string, CommonCharacterController> s_charactersCache;

		[Token(Token = "0x40016AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
		internal bool actionsStarted;

		[Token(Token = "0x40016AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D1")]
		public bool pendingAction;

		[Token(Token = "0x40016AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D2")]
		public bool allowRecycleInstance;

		[Token(Token = "0x40016AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D3")]
		private bool initialized;

		[Token(Token = "0x40016B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
		private List<Vector3> positions;

		[Token(Token = "0x40016B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
		private float startActionsTime;

		[Token(Token = "0x60017FA")]
		[Address(RVA = "0xD6844C", Offset = "0xD6844C", VA = "0xD6844C")]
		public static CommonCharacterController GetCharacter(string strName)
		{
			return null;
		}

		[Token(Token = "0x60017FB")]
		[Address(RVA = "0xD68520", Offset = "0xD68520", VA = "0xD68520")]
		public static void ClearCache()
		{
		}

		[Token(Token = "0x60017FC")]
		[Address(RVA = "0xD68598", Offset = "0xD68598", VA = "0xD68598", Slot = "9")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x60017FD")]
		[Address(RVA = "0xD68F90", Offset = "0xD68F90", VA = "0xD68F90")]
		public void SetHitCooldownTime(float hitTime)
		{
		}

		[Token(Token = "0x60017FE")]
		[Address(RVA = "0xD68F98", Offset = "0xD68F98", VA = "0xD68F98", Slot = "10")]
		protected virtual void OnDisable()
		{
		}

		[Token(Token = "0x60017FF")]
		[Address(RVA = "0xD69108", Offset = "0xD69108", VA = "0xD69108")]
		public void ResetCharacter()
		{
		}

		[Token(Token = "0x6001800")]
		[Address(RVA = "0xD69404", Offset = "0xD69404", VA = "0xD69404", Slot = "11")]
		public virtual void SetUp(CharacterData characterData)
		{
		}

		[Token(Token = "0x6001801")]
		[Address(RVA = "0xD69614", Offset = "0xD69614", VA = "0xD69614", Slot = "12")]
		public virtual void SetUp2()
		{
		}

		[Token(Token = "0x6001802")]
		[Address(RVA = "0xD698B4", Offset = "0xD698B4", VA = "0xD698B4")]
		public CharacterSet[] GetCharacterSets()
		{
			return null;
		}

		[Token(Token = "0x6001803")]
		[Address(RVA = "0xD698BC", Offset = "0xD698BC", VA = "0xD698BC")]
		public CharacterSet GetCurrentCharacterSet()
		{
			return null;
		}

		[Token(Token = "0x6001804")]
		[Address(RVA = "0xD698F0", Offset = "0xD698F0", VA = "0xD698F0", Slot = "13")]
		public virtual void SetCharacterVisibility(bool visible)
		{
		}

		[Token(Token = "0x6001805")]
		[Address(RVA = "0xD69F54", Offset = "0xD69F54", VA = "0xD69F54")]
		public void HitDown(Rigidbody _rigidbodyHit, Vector3 point, Vector3 _hitVector, float _bulletHitForce)
		{
		}

		[Token(Token = "0x6001806")]
		[Address(RVA = "0xD6A964", Offset = "0xD6A964", VA = "0xD6A964")]
		public void RagdollToAnimation(bool rotate180)
		{
		}

		[Token(Token = "0x6001807")]
		[Address(RVA = "0xD6AAC8", Offset = "0xD6AAC8", VA = "0xD6AAC8")]
		private void TeleportMasterToRagdoll(bool rotate180)
		{
		}

		[Token(Token = "0x6001808")]
		[Address(RVA = "0xD6ACCC", Offset = "0xD6ACCC", VA = "0xD6ACCC", Slot = "14")]
		public virtual void EnemyHit(Rigidbody _rigidbodyHit, Vector3 point, Vector3 _hitVector, float _bulletHitForce)
		{
		}

		[Token(Token = "0x6001809")]
		[Address(RVA = "0xD6B71C", Offset = "0xD6B71C", VA = "0xD6B71C")]
		private void invokeTimeOut()
		{
		}

		[Token(Token = "0x600180A")]
		[Address(RVA = "0xD6B894", Offset = "0xD6B894", VA = "0xD6B894")]
		protected void ApplyForce(Vector3 point, Vector3 _hitVector, Rigidbody _rigidbodyHit, float _bulletHitForce)
		{
		}

		[Token(Token = "0x600180B")]
		[Address(RVA = "0xD6C380", Offset = "0xD6C380", VA = "0xD6C380")]
		protected void ApplyExplosionForce(float explosionForce, Vector3 point, float explosionRadius)
		{
		}

		[Token(Token = "0x600180C")]
		[Address(RVA = "0xD6BF90", Offset = "0xD6BF90", VA = "0xD6BF90")]
		private Rigidbody SelectBestRigidbodyForHitAnimation(Rigidbody r, Vector3 point)
		{
			return null;
		}

		[Token(Token = "0x600180D")]
		[Address(RVA = "0xD6C534", Offset = "0xD6C534", VA = "0xD6C534")]
		private void timeOut()
		{
		}

		[Token(Token = "0x600180E")]
		[Address(RVA = "0xD6C648", Offset = "0xD6C648", VA = "0xD6C648")]
		private void deactivateBodyColliders()
		{
		}

		[Token(Token = "0x600180F")]
		[Address(RVA = "0xD6C828", Offset = "0xD6C828", VA = "0xD6C828")]
		private void checkMovingColliders()
		{
		}

		[Token(Token = "0x6001810")]
		[Address(RVA = "0xD68B28", Offset = "0xD68B28", VA = "0xD68B28")]
		public void activateBodyColliders(bool bActivate, bool bActivateRigidbody = false, bool deactivateColliders = true)
		{
		}

		[Token(Token = "0x6001811")]
		[Address(RVA = "0xD6CADC", Offset = "0xD6CADC", VA = "0xD6CADC")]
		public MoveModule GetCurrentMoveModule()
		{
			return null;
		}

		[Token(Token = "0x6001812")]
		[Address(RVA = "0xD6CCE4", Offset = "0xD6CCE4", VA = "0xD6CCE4")]
		public IFireModule GetCurrentFireModule()
		{
			return null;
		}

		[Token(Token = "0x6001813")]
		[Address(RVA = "0xD6CEB8", Offset = "0xD6CEB8", VA = "0xD6CEB8")]
		public void ResumeMove()
		{
		}

		[Token(Token = "0x6001814")]
		[Address(RVA = "0xD6CF48", Offset = "0xD6CF48", VA = "0xD6CF48", Slot = "4")]
		public override bool OnHit(Bullet bullet, Ray ray, RaycastHit hit)
		{
			return default(bool);
		}

		[Token(Token = "0x6001815")]
		[Address(RVA = "0xD6D0A8", Offset = "0xD6D0A8", VA = "0xD6D0A8", Slot = "15")]
		public virtual bool OnHit(Bullet bullet, Ray ray, RaycastHit hit, Collider collider, bool bRemote = false, int remoteLifes = -1)
		{
			return default(bool);
		}

		[Token(Token = "0x6001816")]
		[Address(RVA = "0xD6DF9C", Offset = "0xD6DF9C", VA = "0xD6DF9C", Slot = "16")]
		public virtual void Kill()
		{
		}

		[Token(Token = "0x6001817")]
		[Address(RVA = "0xD6E2E0", Offset = "0xD6E2E0", VA = "0xD6E2E0", Slot = "17")]
		public virtual void Kill(Rigidbody rigidbodyImpact, Vector3 impactPoint, Vector3 impactDirection, float impactForce)
		{
		}

		[Token(Token = "0x6001818")]
		[Address(RVA = "0xD6E45C", Offset = "0xD6E45C", VA = "0xD6E45C")]
		public void Explode(float explosionForce, Vector3 point, float explosionRadius, bool bRemote = false)
		{
		}

		[Token(Token = "0x6001819")]
		[Address(RVA = "0xD6CA68", Offset = "0xD6CA68", VA = "0xD6CA68")]
		[IteratorStateMachine(typeof(<backToHitColliderCoroutine>d__104))]
		private IEnumerator backToHitColliderCoroutine()
		{
			return null;
		}

		[Token(Token = "0x600181A")]
		[Address(RVA = "0xD6E8F8", Offset = "0xD6E8F8", VA = "0xD6E8F8")]
		public void startActions()
		{
		}

		[Token(Token = "0x600181B")]
		[Address(RVA = "0xD6ED90", Offset = "0xD6ED90", VA = "0xD6ED90")]
		public void startNextAction()
		{
		}

		[Token(Token = "0x600181C")]
		[Address(RVA = "0xD6EF9C", Offset = "0xD6EF9C", VA = "0xD6EF9C", Slot = "18")]
		public virtual void reloadAction()
		{
		}

		[Token(Token = "0x600181D")]
		[Address(RVA = "0xD692B0", Offset = "0xD692B0", VA = "0xD692B0")]
		public void stopActions()
		{
		}

		[Token(Token = "0x600181E")]
		[Address(RVA = "0xD6F048", Offset = "0xD6F048", VA = "0xD6F048")]
		public void clearInactiveActions()
		{
		}

		[Token(Token = "0x600181F")]
		[Address(RVA = "0xD6F188", Offset = "0xD6F188", VA = "0xD6F188", Slot = "19")]
		protected virtual void executeNextAction()
		{
		}

		[Token(Token = "0x6001820")]
		[Address(RVA = "0xD6F434", Offset = "0xD6F434", VA = "0xD6F434")]
		public void ExecuteAction(int iAction)
		{
		}

		[Token(Token = "0x6001821")]
		[Address(RVA = "0xD6F6C8", Offset = "0xD6F6C8", VA = "0xD6F6C8")]
		public bool hasActionActive()
		{
			return default(bool);
		}

		[Token(Token = "0x6001822")]
		[Address(RVA = "0xD6F730", Offset = "0xD6F730", VA = "0xD6F730", Slot = "7")]
		public override void OnTarget(Bullet bullet)
		{
		}

		[Token(Token = "0x6001823")]
		[Address(RVA = "0xD6F7C0", Offset = "0xD6F7C0", VA = "0xD6F7C0")]
		public void UpdateAnimator(Vector3 movement)
		{
		}

		[Token(Token = "0x6001824")]
		[Address(RVA = "0xD7020C", Offset = "0xD7020C", VA = "0xD7020C")]
		public bool IsMoving()
		{
			return default(bool);
		}

		[Token(Token = "0x6001825")]
		[Address(RVA = "0xD6FAA4", Offset = "0xD6FAA4", VA = "0xD6FAA4")]
		private Vector3 GetMoveDirection(Vector3 movement)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001826")]
		[Address(RVA = "0xD6FE80", Offset = "0xD6FE80", VA = "0xD6FE80")]
		public void Rotate(Vector3 movement)
		{
		}

		[Token(Token = "0x6001827")]
		[Address(RVA = "0xD701D8", Offset = "0xD701D8", VA = "0xD701D8")]
		private float GetAngleFromForward(Transform obj, Vector3 worldDirection)
		{
			return default(float);
		}

		[Token(Token = "0x6001828")]
		[Address(RVA = "0xD69814", Offset = "0xD69814", VA = "0xD69814")]
		public NetworkCharacterController GetNetworkCharacterController()
		{
			return null;
		}

		[Token(Token = "0x6001829")]
		[Address(RVA = "0xD6F384", Offset = "0xD6F384", VA = "0xD6F384")]
		public bool isLocalControlled()
		{
			return default(bool);
		}

		[Token(Token = "0x600182A")]
		[Address(RVA = "0xD6E230", Offset = "0xD6E230", VA = "0xD6E230")]
		public bool isRemoteMaster()
		{
			return default(bool);
		}

		[Token(Token = "0x600182B")]
		[Address(RVA = "0xD6D010", Offset = "0xD6D010", VA = "0xD6D010")]
		public bool isConnected()
		{
			return default(bool);
		}

		[Token(Token = "0x600182C")]
		[Address(RVA = "0xD702AC", Offset = "0xD702AC", VA = "0xD702AC")]
		public bool isRemoteControllerActive()
		{
			return default(bool);
		}

		[Token(Token = "0x600182D")]
		[Address(RVA = "0xD69E54", Offset = "0xD69E54", VA = "0xD69E54")]
		public CharacterAction GetCurrentAction()
		{
			return null;
		}

		[Token(Token = "0x600182E")]
		[Address(RVA = "0xD70344", Offset = "0xD70344", VA = "0xD70344")]
		public CharacterAction GetNextAction()
		{
			return null;
		}

		[Token(Token = "0x600182F")]
		[Address(RVA = "0xD703D0", Offset = "0xD703D0", VA = "0xD703D0", Slot = "20")]
		protected virtual void OnEnable()
		{
		}

		[Token(Token = "0x6001830")]
		[Address(RVA = "0xD704D0", Offset = "0xD704D0", VA = "0xD704D0", Slot = "21")]
		public virtual void OnlinePlayerBecomesMasterClient()
		{
		}

		[Token(Token = "0x6001831")]
		[Address(RVA = "0xD7058C", Offset = "0xD7058C", VA = "0xD7058C", Slot = "22")]
		public virtual void ResetAnimator()
		{
		}

		[Token(Token = "0x6001832")]
		[Address(RVA = "0xD70690", Offset = "0xD70690", VA = "0xD70690", Slot = "23")]
		public virtual void ResetAnimator(params string[] excludeParameteres)
		{
		}

		[Token(Token = "0x6001833")]
		[Address(RVA = "0xD70898", Offset = "0xD70898", VA = "0xD70898")]
		public SphereHitRaycastItem GetSphereRaycastItem()
		{
			return null;
		}

		[Token(Token = "0x6001834")]
		[Address(RVA = "0xD708A0", Offset = "0xD708A0", VA = "0xD708A0", Slot = "5")]
		protected override GameObject ShowImpactEffect(Bullet bullet, RaycastHit hit)
		{
			return null;
		}

		[Token(Token = "0x6001835")]
		[Address(RVA = "0xD709F8", Offset = "0xD709F8", VA = "0xD709F8", Slot = "6")]
		protected override void PlayHitSound(Vector3 hitPoint)
		{
		}

		[Token(Token = "0x6001836")]
		[Address(RVA = "0xD6B714", Offset = "0xD6B714", VA = "0xD6B714")]
		private bool IsCensored()
		{
			return default(bool);
		}

		[Token(Token = "0x6001837")]
		[Address(RVA = "0xD70A00", Offset = "0xD70A00", VA = "0xD70A00")]
		public CommonCharacterController()
		{
		}
	}
	[Token(Token = "0x2000411")]
	public class HitEvent
	{
		[Token(Token = "0x40016D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Bullet bullet;

		[Token(Token = "0x40016D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Ray ray;

		[Token(Token = "0x40016D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public RaycastHit hit;

		[Token(Token = "0x40016D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Collider collider;

		[Token(Token = "0x40016D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public bool remote;

		[Token(Token = "0x6001850")]
		[Address(RVA = "0xD6DF0C", Offset = "0xD6DF0C", VA = "0xD6DF0C")]
		public HitEvent(Bullet bullet, Ray ray, RaycastHit hit, Collider collider, bool remote)
		{
		}
	}
	[Token(Token = "0x2000412")]
	public class Credits : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000413")]
		public class CreditsData
		{
			[Token(Token = "0x40016DD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public CharacterLocationData[] enemies;

			[Token(Token = "0x40016DE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public GameObject credit;

			[Token(Token = "0x600185B")]
			[Address(RVA = "0xD716FC", Offset = "0xD716FC", VA = "0xD716FC")]
			public CreditsData()
			{
			}
		}

		[Token(Token = "0x2000414")]
		[CompilerGenerated]
		private sealed class <ShowCreditsCoroutine>d__8 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40016DF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40016E0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40016E1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Credits <>4__this;

			[Token(Token = "0x17000147")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600185F")]
				[Address(RVA = "0xD71A00", Offset = "0xD71A00", VA = "0xD71A00", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000148")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001861")]
				[Address(RVA = "0xD71A48", Offset = "0xD71A48", VA = "0xD71A48", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600185C")]
			[Address(RVA = "0xD712C4", Offset = "0xD712C4", VA = "0xD712C4")]
			[DebuggerHidden]
			public <ShowCreditsCoroutine>d__8(int <>1__state)
			{
			}

			[Token(Token = "0x600185D")]
			[Address(RVA = "0xD71704", Offset = "0xD71704", VA = "0xD71704", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600185E")]
			[Address(RVA = "0xD71708", Offset = "0xD71708", VA = "0xD71708", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001860")]
			[Address(RVA = "0xD71A08", Offset = "0xD71A08", VA = "0xD71A08", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000415")]
		[CompilerGenerated]
		private sealed class <CompleteCoroutine>d__12 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40016E2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40016E3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x17000149")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001865")]
				[Address(RVA = "0xD71BB8", Offset = "0xD71BB8", VA = "0xD71BB8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700014A")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001867")]
				[Address(RVA = "0xD71C00", Offset = "0xD71C00", VA = "0xD71C00", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001862")]
			[Address(RVA = "0xD716CC", Offset = "0xD716CC", VA = "0xD716CC")]
			[DebuggerHidden]
			public <CompleteCoroutine>d__12(int <>1__state)
			{
			}

			[Token(Token = "0x6001863")]
			[Address(RVA = "0xD71A50", Offset = "0xD71A50", VA = "0xD71A50", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001864")]
			[Address(RVA = "0xD71A54", Offset = "0xD71A54", VA = "0xD71A54", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001866")]
			[Address(RVA = "0xD71BC0", Offset = "0xD71BC0", VA = "0xD71BC0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40016D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int locationId;

		[Token(Token = "0x40016DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CreditsData[] creditsData;

		[Token(Token = "0x40016DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int currentCredit;

		[Token(Token = "0x40016DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private int deadEnemies;

		[Token(Token = "0x6001851")]
		[Address(RVA = "0xD70FAC", Offset = "0xD70FAC", VA = "0xD70FAC")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001852")]
		[Address(RVA = "0xD71078", Offset = "0xD71078", VA = "0xD71078")]
		private void Start()
		{
		}

		[Token(Token = "0x6001853")]
		[Address(RVA = "0xD71150", Offset = "0xD71150", VA = "0xD71150")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001854")]
		[Address(RVA = "0xD7121C", Offset = "0xD7121C", VA = "0xD7121C")]
		private void OnLocationActivated(int locationId)
		{
		}

		[Token(Token = "0x6001855")]
		[Address(RVA = "0xD71250", Offset = "0xD71250", VA = "0xD71250")]
		[IteratorStateMachine(typeof(<ShowCreditsCoroutine>d__8))]
		private IEnumerator ShowCreditsCoroutine()
		{
			return null;
		}

		[Token(Token = "0x6001856")]
		[Address(RVA = "0xD712EC", Offset = "0xD712EC", VA = "0xD712EC")]
		private void ShowDeveloperName()
		{
		}

		[Token(Token = "0x6001857")]
		[Address(RVA = "0xD71400", Offset = "0xD71400", VA = "0xD71400")]
		private void OnCharacterDead()
		{
		}

		[Token(Token = "0x6001858")]
		[Address(RVA = "0xD71488", Offset = "0xD71488", VA = "0xD71488")]
		private void OnEventString(string e)
		{
		}

		[Token(Token = "0x6001859")]
		[Address(RVA = "0xD7166C", Offset = "0xD7166C", VA = "0xD7166C")]
		[IteratorStateMachine(typeof(<CompleteCoroutine>d__12))]
		private IEnumerator CompleteCoroutine()
		{
			return null;
		}

		[Token(Token = "0x600185A")]
		[Address(RVA = "0xD716F4", Offset = "0xD716F4", VA = "0xD716F4")]
		public Credits()
		{
		}
	}
	[Token(Token = "0x2000416")]
	public class CharacterSpot : MonoBehaviour
	{
		[Token(Token = "0x40016E4")]
		public const string TRANSFORM_1H_NAME = "1H";

		[Token(Token = "0x40016E5")]
		public const string TRANSFORM_2H_NAME = "2H";

		[Token(Token = "0x40016E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<FireAnimationData> anim1H;

		[Token(Token = "0x40016E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<FireAnimationData> anim2H;

		[Token(Token = "0x40016E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public CharacterSpotActivator activator;

		[Token(Token = "0x40016E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public CharacterZone zone;

		[Token(Token = "0x40016EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Transform characterTransform1H;

		[Token(Token = "0x40016EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Transform characterTransform2H;

		[Token(Token = "0x40016EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public bool alwaysShooting;

		[Token(Token = "0x40016ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
		public bool fireOnStart;

		[Token(Token = "0x40016EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4A")]
		public bool spawnPoint;

		[Token(Token = "0x40016EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public float minTime;

		[Token(Token = "0x40016F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public float maxTime;

		[Token(Token = "0x40016F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public int maxUses;

		[Token(Token = "0x40016F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public string spawnPointId;

		[Token(Token = "0x40016F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private bool locked;

		[Token(Token = "0x40016F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public int index;

		[Token(Token = "0x6001868")]
		[Address(RVA = "0xD71C08", Offset = "0xD71C08", VA = "0xD71C08")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001869")]
		[Address(RVA = "0xD71D88", Offset = "0xD71D88", VA = "0xD71D88")]
		public List<FireAnimationData> GetAnimationList(ThiefPoliceController character)
		{
			return null;
		}

		[Token(Token = "0x600186A")]
		[Address(RVA = "0xD71DC4", Offset = "0xD71DC4", VA = "0xD71DC4")]
		public Transform GetCharacterTransform(ThiefPoliceController character)
		{
			return null;
		}

		[Token(Token = "0x600186B")]
		[Address(RVA = "0xD71D6C", Offset = "0xD71D6C", VA = "0xD71D6C")]
		public void RegisterSpot()
		{
		}

		[Token(Token = "0x600186C")]
		[Address(RVA = "0xD71ED4", Offset = "0xD71ED4", VA = "0xD71ED4")]
		public void Lock()
		{
		}

		[Token(Token = "0x600186D")]
		[Address(RVA = "0xD71EE0", Offset = "0xD71EE0", VA = "0xD71EE0")]
		public void Unlock()
		{
		}

		[Token(Token = "0x600186E")]
		[Address(RVA = "0xD71F04", Offset = "0xD71F04", VA = "0xD71F04")]
		public bool IsLocked()
		{
			return default(bool);
		}

		[Token(Token = "0x600186F")]
		[Address(RVA = "0xD71F0C", Offset = "0xD71F0C", VA = "0xD71F0C")]
		public string[] GetIdleState(ThiefPoliceController character)
		{
			return null;
		}

		[Token(Token = "0x6001870")]
		[Address(RVA = "0xD721C0", Offset = "0xD721C0", VA = "0xD721C0")]
		public CharacterSpot()
		{
		}
	}
	[Token(Token = "0x2000417")]
	public abstract class CharacterSpotActivator : MonoBehaviour
	{
		[Token(Token = "0x40016F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected CharacterSpot spot;

		[Token(Token = "0x6001871")]
		[Address(RVA = "0xD722A4", Offset = "0xD722A4", VA = "0xD722A4", Slot = "4")]
		public virtual void Awake()
		{
		}

		[Token(Token = "0x6001872")]
		[Address(RVA = "0xD722FC", Offset = "0xD722FC", VA = "0xD722FC")]
		protected void ActivateSpot()
		{
		}

		[Token(Token = "0x6001873")]
		[Address(RVA = "0xD72314", Offset = "0xD72314", VA = "0xD72314")]
		protected CharacterSpotActivator()
		{
		}
	}
	[Token(Token = "0x2000418")]
	public class CharacterSpotActivatorOnDead : CharacterSpotActivator
	{
		[Token(Token = "0x40016F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocationCharacter[] characterDeads;

		[Token(Token = "0x40016F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int deads;

		[Token(Token = "0x6001874")]
		[Address(RVA = "0xD7231C", Offset = "0xD7231C", VA = "0xD7231C", Slot = "4")]
		public override void Awake()
		{
		}

		[Token(Token = "0x6001875")]
		[Address(RVA = "0xD72420", Offset = "0xD72420", VA = "0xD72420")]
		private void OnLocationCharacterDead(LocationCharacter character)
		{
		}

		[Token(Token = "0x6001876")]
		[Address(RVA = "0xD72460", Offset = "0xD72460", VA = "0xD72460")]
		public CharacterSpotActivatorOnDead()
		{
		}
	}
	[Token(Token = "0x2000419")]
	public class CharacterSpotActivatorTimeReached : CharacterSpotActivator
	{
		[Token(Token = "0x40016F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float activateAfterTime;

		[Token(Token = "0x6001877")]
		[Address(RVA = "0xD72468", Offset = "0xD72468", VA = "0xD72468", Slot = "4")]
		public override void Awake()
		{
		}

		[Token(Token = "0x6001878")]
		[Address(RVA = "0xD72530", Offset = "0xD72530", VA = "0xD72530")]
		public CharacterSpotActivatorTimeReached()
		{
		}
	}
	[Token(Token = "0x200041A")]
	public class CharacterZone : MonoBehaviour
	{
		[Token(Token = "0x40016F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<CharacterSpot> spots;

		[Token(Token = "0x40016FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<CharacterSpot> spawnPoints;

		[Token(Token = "0x40016FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int zoneIndex;

		[Token(Token = "0x40016FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public List<CharacterSpot> availableSpots;

		[Token(Token = "0x6001879")]
		[Address(RVA = "0xD71E00", Offset = "0xD71E00", VA = "0xD71E00")]
		public void AddSpot(CharacterSpot spot)
		{
		}

		[Token(Token = "0x600187A")]
		[Address(RVA = "0xD72538", Offset = "0xD72538", VA = "0xD72538")]
		public CharacterZone()
		{
		}
	}
	[Token(Token = "0x200041B")]
	public class CharacterZones : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x200041C")]
		public class Movement
		{
			[Token(Token = "0x4001703")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public CharacterSpot origin;

			[Token(Token = "0x4001704")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public CharacterSpot target;

			[Token(Token = "0x4001705")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public List<MovementData> data;

			[Token(Token = "0x4001706")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public int index;

			[Token(Token = "0x6001881")]
			[Address(RVA = "0xD733BC", Offset = "0xD733BC", VA = "0xD733BC")]
			public Movement()
			{
			}

			[Token(Token = "0x6001882")]
			[Address(RVA = "0xD73510", Offset = "0xD73510", VA = "0xD73510")]
			public Movement(CharacterSpot origin, CharacterSpot target)
			{
			}
		}

		[Serializable]
		[Token(Token = "0x200041D")]
		public class MovementData
		{
			[Token(Token = "0x4001707")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public float distance;

			[Token(Token = "0x4001708")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			[Range(0f, 1f)]
			public float run;

			[Token(Token = "0x4001709")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[Range(0f, 1f)]
			public float walk;

			[Token(Token = "0x400170A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			[Range(0f, 1f)]
			public float crouch;

			[Token(Token = "0x400170B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[Range(0f, 1f)]
			public float strafe;

			[Token(Token = "0x400170C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			[Range(0f, 1f)]
			public float fire;

			[Token(Token = "0x6001883")]
			[Address(RVA = "0xD734FC", Offset = "0xD734FC", VA = "0xD734FC")]
			public MovementData()
			{
			}

			[Token(Token = "0x6001884")]
			[Address(RVA = "0xD73814", Offset = "0xD73814", VA = "0xD73814")]
			public MoveModule.MoveMode GetMoveMode()
			{
				return default(MoveModule.MoveMode);
			}

			[Token(Token = "0x6001885")]
			[Address(RVA = "0xD7386C", Offset = "0xD7386C", VA = "0xD7386C")]
			public bool IsFireEnable()
			{
				return default(bool);
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x200041E")]
		[CompilerGenerated]
		private struct <GetFirstMovement>d__7 : IAsyncStateMachine
		{
			[Token(Token = "0x400170D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x400170E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncTaskMethodBuilder<Movement> <>t__builder;

			[Token(Token = "0x400170F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public string spawnPointId;

			[Token(Token = "0x4001710")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public CharacterZones <>4__this;

			[Token(Token = "0x4001711")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private Movement <nextMovement>5__2;

			[Token(Token = "0x4001712")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private TaskAwaiter <>u__1;

			[Token(Token = "0x6001886")]
			[Address(RVA = "0xD738B8", Offset = "0xD738B8", VA = "0xD738B8", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6001887")]
			[Address(RVA = "0xD741D0", Offset = "0xD741D0", VA = "0xD741D0", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x40016FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<CharacterZone> zones;

		[Token(Token = "0x40016FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<Movement> movements;

		[Token(Token = "0x40016FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private List<CharacterSpot> spawnPoints;

		[Token(Token = "0x4001700")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Dictionary<string, CharacterSpot> exclusiveSpawnPoints;

		[Token(Token = "0x4001701")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Dictionary<CharacterSpot, List<Movement>> availableMovements;

		[Token(Token = "0x4001702")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private CharacterSpot lastSpawnPoint;

		[Token(Token = "0x600187B")]
		[Address(RVA = "0xD72618", Offset = "0xD72618", VA = "0xD72618")]
		private void Start()
		{
		}

		[Token(Token = "0x600187C")]
		[Address(RVA = "0xD72CD4", Offset = "0xD72CD4", VA = "0xD72CD4")]
		[AsyncStateMachine(typeof(<GetFirstMovement>d__7))]
		public Task<Movement> GetFirstMovement(string spawnPointId = "")
		{
			return null;
		}

		[Token(Token = "0x600187D")]
		[Address(RVA = "0xD72DFC", Offset = "0xD72DFC", VA = "0xD72DFC")]
		public Movement GetNextMovement(CharacterSpot currentSpot)
		{
			return null;
		}

		[Token(Token = "0x600187E")]
		[Address(RVA = "0xD73104", Offset = "0xD73104", VA = "0xD73104")]
		public Movement GetMovement(int index)
		{
			return null;
		}

		[Token(Token = "0x600187F")]
		[Address(RVA = "0xD7319C", Offset = "0xD7319C", VA = "0xD7319C")]
		public CharacterZone GetZone(int index)
		{
			return null;
		}

		[Token(Token = "0x6001880")]
		[Address(RVA = "0xD731F4", Offset = "0xD731F4", VA = "0xD731F4")]
		public CharacterZones()
		{
		}
	}
	[Token(Token = "0x200041F")]
	public class CV2_AIManager : MonoBehaviour
	{
		[Token(Token = "0x6001888")]
		[Address(RVA = "0xD74228", Offset = "0xD74228", VA = "0xD74228")]
		public void UpdateGlobalTeammates(bool overrideAll)
		{
		}

		[Token(Token = "0x6001889")]
		[Address(RVA = "0xD74F64", Offset = "0xD74F64", VA = "0xD74F64")]
		public void UpdateGlobalTeammatesTransitions()
		{
		}

		[Token(Token = "0x600188A")]
		[Address(RVA = "0xD75590", Offset = "0xD75590", VA = "0xD75590")]
		private Transform GetLocationTeammateTransform(LocationController location, CharacterData teammate)
		{
			return null;
		}

		[Token(Token = "0x600188B")]
		[Address(RVA = "0xD74304", Offset = "0xD74304", VA = "0xD74304")]
		private void UpdateGlobalTeammate(CharacterData teammateData, bool overrideAll)
		{
		}

		[Token(Token = "0x600188C")]
		[Address(RVA = "0xD75694", Offset = "0xD75694", VA = "0xD75694")]
		public CV2_AIManager()
		{
		}
	}
	[Token(Token = "0x2000420")]
	public class AntonioMontoyaController : ThiefPoliceController
	{
		[Token(Token = "0x4001713")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x278")]
		public NPCWeapon grenadeLauncher;

		[Token(Token = "0x4001714")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x280")]
		[Header("Audios")]
		public AudioClip[] hitSounds;

		[Token(Token = "0x4001715")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x288")]
		public AudioClip[] hitPlayerSounds;

		[Token(Token = "0x4001716")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x290")]
		public Func<Bullet, Ray, RaycastHit, bool> OnHitReceived;

		[Token(Token = "0x4001717")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x298")]
		private bool interruptibleSound;

		[Token(Token = "0x600188D")]
		[Address(RVA = "0xD7569C", Offset = "0xD7569C", VA = "0xD7569C", Slot = "8")]
		public override void OnBulletConsumed(Bullet bullet)
		{
		}

		[Token(Token = "0x600188E")]
		[Address(RVA = "0xD75864", Offset = "0xD75864", VA = "0xD75864", Slot = "4")]
		public override bool OnHit(Bullet bullet, Ray ray, RaycastHit hit)
		{
			return default(bool);
		}

		[Token(Token = "0x600188F")]
		[Address(RVA = "0xD7596C", Offset = "0xD7596C", VA = "0xD7596C", Slot = "15")]
		public override bool OnHit(Bullet bullet, Ray ray, RaycastHit hit, Collider collider, bool bRemote = false, int remoteLifes = -1)
		{
			return default(bool);
		}

		[Token(Token = "0x6001890")]
		[Address(RVA = "0xD75C4C", Offset = "0xD75C4C", VA = "0xD75C4C", Slot = "24")]
		protected override void ShowBonus()
		{
		}

		[Token(Token = "0x6001891")]
		[Address(RVA = "0xD75C50", Offset = "0xD75C50", VA = "0xD75C50", Slot = "25")]
		public override void HitSound(bool force = false)
		{
		}

		[Token(Token = "0x6001892")]
		[Address(RVA = "0xD757C0", Offset = "0xD757C0", VA = "0xD757C0")]
		public void PlaySound(AudioClip clip, bool force = false)
		{
		}

		[Token(Token = "0x6001893")]
		[Address(RVA = "0xD75CB8", Offset = "0xD75CB8", VA = "0xD75CB8")]
		public AntonioMontoyaController()
		{
		}
	}
	[Token(Token = "0x2000421")]
	public class AntonioMontoyaFinalScene : MonoBehaviour
	{
		[Token(Token = "0x2000422")]
		[CompilerGenerated]
		private sealed class <StartScene>d__12 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001721")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001722")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001723")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public AntonioMontoyaFinalScene <>4__this;

			[Token(Token = "0x4001724")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private AntonioMontoyaController <amController>5__2;

			[Token(Token = "0x1700014B")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600189C")]
				[Address(RVA = "0xD767B4", Offset = "0xD767B4", VA = "0xD767B4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700014C")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600189E")]
				[Address(RVA = "0xD767FC", Offset = "0xD767FC", VA = "0xD767FC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001899")]
			[Address(RVA = "0xD760C4", Offset = "0xD760C4", VA = "0xD760C4")]
			[DebuggerHidden]
			public <StartScene>d__12(int <>1__state)
			{
			}

			[Token(Token = "0x600189A")]
			[Address(RVA = "0xD760F4", Offset = "0xD760F4", VA = "0xD760F4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600189B")]
			[Address(RVA = "0xD760F8", Offset = "0xD760F8", VA = "0xD760F8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600189D")]
			[Address(RVA = "0xD767BC", Offset = "0xD767BC", VA = "0xD767BC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001718")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int locationId;

		[Token(Token = "0x4001719")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AudioClip initAudio;

		[Token(Token = "0x400171A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public AimTarget grenadeTarget;

		[Token(Token = "0x400171B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Transform antonioMontoyaPosition;

		[Token(Token = "0x400171C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Transform playerPosition;

		[Token(Token = "0x400171D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public AntonioMontoyaModule antonioMontoyaModule;

		[Token(Token = "0x400171E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public LocationCharacter antonioMontoya;

		[Token(Token = "0x400171F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public LocationCharacterWaves[] speechWaves;

		[Token(Token = "0x4001720")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private int speechWaveIndex;

		[Token(Token = "0x6001894")]
		[Address(RVA = "0xD75D10", Offset = "0xD75D10", VA = "0xD75D10")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001895")]
		[Address(RVA = "0xD75E8C", Offset = "0xD75E8C", VA = "0xD75E8C")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001896")]
		[Address(RVA = "0xD75F58", Offset = "0xD75F58", VA = "0xD75F58")]
		public void OnLocationActivated(int locationId)
		{
		}

		[Token(Token = "0x6001897")]
		[Address(RVA = "0xD76050", Offset = "0xD76050", VA = "0xD76050")]
		[IteratorStateMachine(typeof(<StartScene>d__12))]
		private IEnumerator StartScene()
		{
			return null;
		}

		[Token(Token = "0x6001898")]
		[Address(RVA = "0xD760EC", Offset = "0xD760EC", VA = "0xD760EC")]
		public AntonioMontoyaFinalScene()
		{
		}
	}
	[Token(Token = "0x2000423")]
	public class AntonioMontoyaLaboratoryScene : MonoBehaviour
	{
		[Token(Token = "0x4001725")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int locationId;

		[Token(Token = "0x4001726")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocationCharacter antonioMontoya;

		[Token(Token = "0x4001727")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameObject hitRPGAnimation;

		[Token(Token = "0x4001728")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Animator doorsAnimator;

		[Token(Token = "0x4001729")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public AnimationClip doorsAnimation_clip;

		[Token(Token = "0x400172A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public DestructibleAnimation entrailsAnimation;

		[Token(Token = "0x400172B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Weapon weaponRPG;

		[Token(Token = "0x600189F")]
		[Address(RVA = "0xD76804", Offset = "0xD76804", VA = "0xD76804")]
		private void Start()
		{
		}

		[Token(Token = "0x60018A0")]
		[Address(RVA = "0xD76928", Offset = "0xD76928", VA = "0xD76928")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60018A1")]
		[Address(RVA = "0xD76B60", Offset = "0xD76B60", VA = "0xD76B60")]
		private void OnLocationActivated(int locationId)
		{
		}

		[Token(Token = "0x60018A2")]
		[Address(RVA = "0xD76EBC", Offset = "0xD76EBC", VA = "0xD76EBC")]
		private void ResetScene()
		{
		}

		[Token(Token = "0x60018A3")]
		[Address(RVA = "0xD77068", Offset = "0xD77068", VA = "0xD77068")]
		private void OnNPCWeaponFire(NPCWeapon weapon, Bullet bullet)
		{
		}

		[Token(Token = "0x60018A4")]
		[Address(RVA = "0xD7720C", Offset = "0xD7720C", VA = "0xD7720C")]
		private void ActivateMontoya()
		{
		}

		[Token(Token = "0x60018A5")]
		[Address(RVA = "0xD772A8", Offset = "0xD772A8", VA = "0xD772A8")]
		private void HideBlackScreen()
		{
		}

		[Token(Token = "0x60018A6")]
		[Address(RVA = "0xD773D8", Offset = "0xD773D8", VA = "0xD773D8")]
		private void ShowReadySetGo()
		{
		}

		[Token(Token = "0x60018A7")]
		[Address(RVA = "0xD77438", Offset = "0xD77438", VA = "0xD77438")]
		private void OnAntonioMontoyaDead(HitEvent hitEvent)
		{
		}

		[Token(Token = "0x60018A8")]
		[Address(RVA = "0xD77814", Offset = "0xD77814", VA = "0xD77814")]
		private void OnRPGBeginInteraction()
		{
		}

		[Token(Token = "0x60018A9")]
		[Address(RVA = "0xD777BC", Offset = "0xD777BC", VA = "0xD777BC")]
		private void WalkieTalkieCommunication()
		{
		}

		[Token(Token = "0x60018AA")]
		[Address(RVA = "0xD778AC", Offset = "0xD778AC", VA = "0xD778AC")]
		public AntonioMontoyaLaboratoryScene()
		{
		}
	}
	[Token(Token = "0x2000425")]
	public class AntonioMontoyaOffice : AnimationEventHandler
	{
		[Token(Token = "0x2000426")]
		[CompilerGenerated]
		private sealed class <StartScene>d__9 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001733")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001734")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001735")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public AntonioMontoyaOffice <>4__this;

			[Token(Token = "0x1700014D")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60018BA")]
				[Address(RVA = "0xD78274", Offset = "0xD78274", VA = "0xD78274", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700014E")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60018BC")]
				[Address(RVA = "0xD782BC", Offset = "0xD782BC", VA = "0xD782BC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60018B7")]
			[Address(RVA = "0xD77F74", Offset = "0xD77F74", VA = "0xD77F74")]
			[DebuggerHidden]
			public <StartScene>d__9(int <>1__state)
			{
			}

			[Token(Token = "0x60018B8")]
			[Address(RVA = "0xD78118", Offset = "0xD78118", VA = "0xD78118", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60018B9")]
			[Address(RVA = "0xD7811C", Offset = "0xD7811C", VA = "0xD7811C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60018BB")]
			[Address(RVA = "0xD7827C", Offset = "0xD7827C", VA = "0xD7827C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400172E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public int locationId;

		[Token(Token = "0x400172F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public DestructibleAnimation destructibleDoor;

		[Token(Token = "0x4001730")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public LocationCharacter[] animatedCharacters;

		[Token(Token = "0x4001731")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public LocationCharacter antonioMontoya;

		[Token(Token = "0x4001732")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public AudioSource initAudio;

		[Token(Token = "0x60018AF")]
		[Address(RVA = "0xD77A40", Offset = "0xD77A40", VA = "0xD77A40")]
		private void Awake()
		{
		}

		[Token(Token = "0x60018B0")]
		[Address(RVA = "0xD77B0C", Offset = "0xD77B0C", VA = "0xD77B0C")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60018B1")]
		[Address(RVA = "0xD77BD8", Offset = "0xD77BD8", VA = "0xD77BD8")]
		public void OnLocationActivated(int locationId)
		{
		}

		[Token(Token = "0x60018B2")]
		[Address(RVA = "0xD77E10", Offset = "0xD77E10", VA = "0xD77E10", Slot = "6")]
		public override void OnEventString(string e)
		{
		}

		[Token(Token = "0x60018B3")]
		[Address(RVA = "0xD77D9C", Offset = "0xD77D9C", VA = "0xD77D9C")]
		[IteratorStateMachine(typeof(<StartScene>d__9))]
		private IEnumerator StartScene()
		{
			return null;
		}

		[Token(Token = "0x60018B4")]
		[Address(RVA = "0xD77F9C", Offset = "0xD77F9C", VA = "0xD77F9C")]
		private void InitAnimation()
		{
		}

		[Token(Token = "0x60018B5")]
		[Address(RVA = "0xD780F0", Offset = "0xD780F0", VA = "0xD780F0")]
		private void ActivateAntonioMontoya()
		{
		}

		[Token(Token = "0x60018B6")]
		[Address(RVA = "0xD78110", Offset = "0xD78110", VA = "0xD78110")]
		public AntonioMontoyaOffice()
		{
		}
	}
	[Token(Token = "0x2000427")]
	public class ArmorPart : HitTarget
	{
		[Token(Token = "0x4001736")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public int resistance;

		[Token(Token = "0x4001737")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Collider armorCollider;

		[Token(Token = "0x4001738")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Collider protectorCollider;

		[Token(Token = "0x4001739")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public string animatorTrigger;

		[Token(Token = "0x400173A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public float force;

		[Token(Token = "0x400173B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private ThiefPoliceController character;

		[Token(Token = "0x400173C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Transform myParent;

		[Token(Token = "0x400173D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Vector3 myPosition;

		[Token(Token = "0x400173E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private Quaternion myRotation;

		[Token(Token = "0x400173F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private int myResistance;

		[Token(Token = "0x60018BD")]
		[Address(RVA = "0xD782C4", Offset = "0xD782C4", VA = "0xD782C4")]
		private void Awake()
		{
		}

		[Token(Token = "0x60018BE")]
		[Address(RVA = "0xD7841C", Offset = "0xD7841C", VA = "0xD7841C", Slot = "4")]
		public override bool OnHit(Bullet bullet, Ray ray, RaycastHit hit)
		{
			return default(bool);
		}

		[Token(Token = "0x60018BF")]
		[Address(RVA = "0xD78588", Offset = "0xD78588", VA = "0xD78588")]
		public void ArmorHit(bool bRemote = false)
		{
		}

		[Token(Token = "0x60018C0")]
		[Address(RVA = "0xD787FC", Offset = "0xD787FC", VA = "0xD787FC")]
		private void BreakArmor()
		{
		}

		[Token(Token = "0x60018C1")]
		[Address(RVA = "0xD788D4", Offset = "0xD788D4", VA = "0xD788D4")]
		private void ResetArmor()
		{
		}

		[Token(Token = "0x60018C2")]
		[Address(RVA = "0xD78A8C", Offset = "0xD78A8C", VA = "0xD78A8C")]
		public ArmorPart()
		{
		}
	}
	[Token(Token = "0x2000428")]
	public class CV2_BHapticsManager : MonoBehaviour
	{
		[Token(Token = "0x2000429")]
		[CompilerGenerated]
		private sealed class <HeartBeatCoroutine>d__22 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400174C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400174D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400174E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public CV2_BHapticsManager <>4__this;

			[Token(Token = "0x1700014F")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60018D4")]
				[Address(RVA = "0xD79DA0", Offset = "0xD79DA0", VA = "0xD79DA0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000150")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60018D6")]
				[Address(RVA = "0xD79DE8", Offset = "0xD79DE8", VA = "0xD79DE8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60018D1")]
			[Address(RVA = "0xD79B3C", Offset = "0xD79B3C", VA = "0xD79B3C")]
			[DebuggerHidden]
			public <HeartBeatCoroutine>d__22(int <>1__state)
			{
			}

			[Token(Token = "0x60018D2")]
			[Address(RVA = "0xD79C64", Offset = "0xD79C64", VA = "0xD79C64", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60018D3")]
			[Address(RVA = "0xD79C68", Offset = "0xD79C68", VA = "0xD79C68", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60018D5")]
			[Address(RVA = "0xD79DA8", Offset = "0xD79DA8", VA = "0xD79DA8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001740")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public HapticSender shotPistolRightHand;

		[Token(Token = "0x4001741")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public HapticSender shotPistolLeftHand;

		[Token(Token = "0x4001742")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public HapticSender shotRifleRightHand;

		[Token(Token = "0x4001743")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public HapticSender shotRifleLeftHand;

		[Token(Token = "0x4001744")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public HapticSender impactPistol;

		[Token(Token = "0x4001745")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public HapticSender impactRifle;

		[Token(Token = "0x4001746")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public HapticSender explosion;

		[Token(Token = "0x4001747")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public HapticSender explosionWave;

		[Token(Token = "0x4001748")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public HapticSender death;

		[Token(Token = "0x4001749")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public HapticSender heartBeat;

		[Token(Token = "0x400174A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public HapticSender bonusLife;

		[Token(Token = "0x400174B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private bool initialized;

		[Token(Token = "0x60018C4")]
		[Address(RVA = "0xD78AA8", Offset = "0xD78AA8", VA = "0xD78AA8")]
		private void Awake()
		{
		}

		[Token(Token = "0x60018C5")]
		[Address(RVA = "0xD78AAC", Offset = "0xD78AAC", VA = "0xD78AAC")]
		private void Start()
		{
		}

		[Token(Token = "0x60018C6")]
		[Address(RVA = "0xD78E84", Offset = "0xD78E84", VA = "0xD78E84")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60018C7")]
		[Address(RVA = "0xD78AB0", Offset = "0xD78AB0", VA = "0xD78AB0")]
		private void Initialize()
		{
		}

		[Token(Token = "0x60018C8")]
		[Address(RVA = "0xD79030", Offset = "0xD79030", VA = "0xD79030")]
		private void OnPlayerHit(Bullet bullet, Ray ray, RaycastHit hit)
		{
		}

		[Token(Token = "0x60018C9")]
		[Address(RVA = "0xD79378", Offset = "0xD79378", VA = "0xD79378")]
		private void OnPlayerDead()
		{
		}

		[Token(Token = "0x60018CA")]
		[Address(RVA = "0xD79434", Offset = "0xD79434", VA = "0xD79434")]
		private void OnWeaponFire(Weapon weapon, Bullet bullet)
		{
		}

		[Token(Token = "0x60018CB")]
		[Address(RVA = "0xD79830", Offset = "0xD79830", VA = "0xD79830")]
		private void OnExplosion(Vector3 explosionPosition)
		{
		}

		[Token(Token = "0x60018CC")]
		[Address(RVA = "0xD79960", Offset = "0xD79960", VA = "0xD79960")]
		private void OnExplosionWave(Vector3 explosionPosition)
		{
		}

		[Token(Token = "0x60018CD")]
		[Address(RVA = "0xD79A90", Offset = "0xD79A90", VA = "0xD79A90")]
		private void OnBulletTime()
		{
		}

		[Token(Token = "0x60018CE")]
		[Address(RVA = "0xD79AC8", Offset = "0xD79AC8", VA = "0xD79AC8")]
		[IteratorStateMachine(typeof(<HeartBeatCoroutine>d__22))]
		private IEnumerator HeartBeatCoroutine()
		{
			return null;
		}

		[Token(Token = "0x60018CF")]
		[Address(RVA = "0xD79B64", Offset = "0xD79B64", VA = "0xD79B64")]
		private void OnBonusLife()
		{
		}

		[Token(Token = "0x60018D0")]
		[Address(RVA = "0xD79C5C", Offset = "0xD79C5C", VA = "0xD79C5C")]
		public CV2_BHapticsManager()
		{
		}
	}
	[Token(Token = "0x200042A")]
	public class Bomb : HitTarget
	{
		[StructLayout(3)]
		[Token(Token = "0x200042B")]
		[CompilerGenerated]
		private struct <ExplodeBombs>d__26 : IAsyncStateMachine
		{
			[Token(Token = "0x400175C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x400175D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncVoidMethodBuilder <>t__builder;

			[Token(Token = "0x400175E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Bomb mainBomb;

			[Token(Token = "0x400175F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private List<Bomb>.Enumerator <>7__wrap1;

			[Token(Token = "0x4001760")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private Bomb <bomb>5__3;

			[Token(Token = "0x4001761")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			private TaskAwaiter <>u__1;

			[Token(Token = "0x60018EA")]
			[Address(RVA = "0xD7B0BC", Offset = "0xD7B0BC", VA = "0xD7B0BC", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x60018EB")]
			[Address(RVA = "0xD7B650", Offset = "0xD7B650", VA = "0xD7B650", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x400174F")]
		private const float TIME_BETWEEN_WARNINGS = 4f;

		[Token(Token = "0x4001750")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static List<Bomb> bombs;

		[Token(Token = "0x4001751")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
		public bool gameOverOnHit;

		[Token(Token = "0x4001752")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float explosionRadius;

		[Token(Token = "0x4001753")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float damage;

		[Token(Token = "0x4001754")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public GameObject model;

		[Token(Token = "0x4001755")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public GameObject explosion;

		[Token(Token = "0x4001756")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public GameObject explosionPlayer;

		[Token(Token = "0x4001757")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Collider warningCollider;

		[Token(Token = "0x4001758")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private SumalabInvoke.SumalabInvokeHandler invokeHandler;

		[Token(Token = "0x4001759")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private bool exploded;

		[Token(Token = "0x400175A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x71")]
		private bool alreadyExploded;

		[Token(Token = "0x400175B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x72")]
		private bool alreadyPlayerExploded;

		[Token(Token = "0x60018D7")]
		[Address(RVA = "0xD79DF0", Offset = "0xD79DF0", VA = "0xD79DF0")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60018D8")]
		[Address(RVA = "0xD7A04C", Offset = "0xD7A04C", VA = "0xD7A04C")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60018D9")]
		[Address(RVA = "0xD7A118", Offset = "0xD7A118", VA = "0xD7A118")]
		private void OnLocationReactivated(int id)
		{
		}

		[Token(Token = "0x60018DA")]
		[Address(RVA = "0xD7A13C", Offset = "0xD7A13C", VA = "0xD7A13C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60018DB")]
		[Address(RVA = "0xD7A258", Offset = "0xD7A258", VA = "0xD7A258", Slot = "4")]
		public override bool OnHit(Bullet bullet, Ray ray, RaycastHit hit)
		{
			return default(bool);
		}

		[Token(Token = "0x60018DC")]
		[Address(RVA = "0xD7AA50", Offset = "0xD7AA50", VA = "0xD7AA50")]
		public void HitBomb(bool bRemote = false)
		{
		}

		[Token(Token = "0x60018DD")]
		[Address(RVA = "0xD7A494", Offset = "0xD7A494", VA = "0xD7A494")]
		public void Explode(bool bRemote = false)
		{
		}

		[Token(Token = "0x60018DE")]
		[Address(RVA = "0xD7AB58", Offset = "0xD7AB58", VA = "0xD7AB58")]
		private void Disable()
		{
		}

		[Token(Token = "0x60018DF")]
		[Address(RVA = "0xD7AAC8", Offset = "0xD7AAC8", VA = "0xD7AAC8")]
		private void ExplosionFX()
		{
		}

		[Token(Token = "0x60018E0")]
		[Address(RVA = "0xD7AC0C", Offset = "0xD7AC0C", VA = "0xD7AC0C")]
		private void PlayFX(bool exploded, GameObject fx)
		{
		}

		[Token(Token = "0x60018E1")]
		[Address(RVA = "0xD7ACEC", Offset = "0xD7ACEC", VA = "0xD7ACEC")]
		private void ExplosionPlayerFX()
		{
		}

		[Token(Token = "0x60018E2")]
		[Address(RVA = "0xD79F24", Offset = "0xD79F24", VA = "0xD79F24")]
		private static void RegisterBomb(Bomb bomb)
		{
		}

		[Token(Token = "0x60018E3")]
		[Address(RVA = "0xD7A1D8", Offset = "0xD7A1D8", VA = "0xD7A1D8")]
		private static void UnregisterBomb(Bomb bomb)
		{
		}

		[Token(Token = "0x60018E4")]
		[Address(RVA = "0xD7A994", Offset = "0xD7A994", VA = "0xD7A994")]
		[AsyncStateMachine(typeof(<ExplodeBombs>d__26))]
		private static void ExplodeBombs(Bomb mainBomb)
		{
		}

		[Token(Token = "0x60018E5")]
		[Address(RVA = "0xD7ADE8", Offset = "0xD7ADE8", VA = "0xD7ADE8")]
		private static void OrderBombsByDistance(Vector3 position)
		{
		}

		[Token(Token = "0x60018E6")]
		[Address(RVA = "0xD7AF08", Offset = "0xD7AF08", VA = "0xD7AF08")]
		public Bomb()
		{
		}
	}
	[Token(Token = "0x200042D")]
	public abstract class Bonus : HitTarget
	{
		[Token(Token = "0x4001763")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
		public bool showAlways;

		[Token(Token = "0x60018EE")]
		public abstract void CatchBonus(Vector3 position);

		[Token(Token = "0x60018EF")]
		[Address(RVA = "0xD7B7BC", Offset = "0xD7B7BC", VA = "0xD7B7BC")]
		protected Bonus()
		{
		}
	}
	[Token(Token = "0x200042E")]
	public class CharacterAimingSystem : MonoBehaviour
	{
		[Token(Token = "0x4001764")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Tooltip("AimPoser is a tool that returns an animation name based on direction.")]
		public AimPoser aimPoser;

		[Token(Token = "0x4001765")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[Tooltip("Reference to the AimIK component.")]
		public AimIK aim;

		[Token(Token = "0x4001766")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[Tooltip("Reference to the Animator component.")]
		public Animator animator;

		[Token(Token = "0x4001767")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[Tooltip("Time of cross-fading from pose to pose.")]
		private float crossfadeTime;

		[Token(Token = "0x4001768")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[Tooltip("Will keep the aim target at a distance.")]
		private float minAimDistance;

		[Token(Token = "0x4001769")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private CommonCharacterController character;

		[Token(Token = "0x400176A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private AimPoser.Pose aimPose;

		[Token(Token = "0x400176B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private AimPoser.Pose lastPose;

		[Token(Token = "0x60018F0")]
		[Address(RVA = "0xD7B7C4", Offset = "0xD7B7C4", VA = "0xD7B7C4")]
		private void Start()
		{
		}

		[Token(Token = "0x60018F1")]
		[Address(RVA = "0xD7B834", Offset = "0xD7B834", VA = "0xD7B834")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x60018F2")]
		[Address(RVA = "0xD7B878", Offset = "0xD7B878", VA = "0xD7B878")]
		private void Pose()
		{
		}

		[Token(Token = "0x60018F3")]
		[Address(RVA = "0xD7BBD0", Offset = "0xD7BBD0", VA = "0xD7BBD0")]
		private void LimitAimTarget()
		{
		}

		[Token(Token = "0x60018F4")]
		[Address(RVA = "0xD7BB40", Offset = "0xD7BB40", VA = "0xD7BB40")]
		private void DirectCrossFade(string state, float target)
		{
		}

		[Token(Token = "0x60018F5")]
		[Address(RVA = "0xD7BA78", Offset = "0xD7BA78", VA = "0xD7BA78")]
		private void UpdateDefaultPose()
		{
		}

		[Token(Token = "0x60018F6")]
		[Address(RVA = "0xD7BD8C", Offset = "0xD7BD8C", VA = "0xD7BD8C")]
		public CharacterAimingSystem()
		{
		}
	}
	[Token(Token = "0x200042F")]
	public class ChuacheController : ThiefPoliceController
	{
		[Token(Token = "0x400176C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x278")]
		private int minLifes;

		[Token(Token = "0x400176D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x280")]
		private LookAtIK lookAtIK;

		[Token(Token = "0x400176E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x288")]
		private Transform aimIKTarget;

		[Token(Token = "0x400176F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x290")]
		private Transform lookAtIKTarget;

		[Token(Token = "0x4001770")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x298")]
		private Vector3 aimOffset;

		[Token(Token = "0x4001771")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A8")]
		public Transform target;

		[Token(Token = "0x60018F7")]
		[Address(RVA = "0xD7BDA0", Offset = "0xD7BDA0", VA = "0xD7BDA0", Slot = "9")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x60018F8")]
		[Address(RVA = "0xD7BEAC", Offset = "0xD7BEAC", VA = "0xD7BEAC", Slot = "12")]
		public override void SetUp2()
		{
		}

		[Token(Token = "0x60018F9")]
		[Address(RVA = "0xD7BF60", Offset = "0xD7BF60", VA = "0xD7BF60", Slot = "10")]
		protected override void OnDisable()
		{
		}

		[Token(Token = "0x60018FA")]
		[Address(RVA = "0xD7C01C", Offset = "0xD7C01C", VA = "0xD7C01C", Slot = "20")]
		protected override void OnEnable()
		{
		}

		[Token(Token = "0x60018FB")]
		[Address(RVA = "0xD7C0D8", Offset = "0xD7C0D8", VA = "0xD7C0D8")]
		private void CustomNetworkEvent(string strName, object[] parameters)
		{
		}

		[Token(Token = "0x60018FC")]
		[Address(RVA = "0xD7C1D8", Offset = "0xD7C1D8", VA = "0xD7C1D8", Slot = "4")]
		public override bool OnHit(Bullet bullet, Ray ray, RaycastHit hit)
		{
			return default(bool);
		}

		[Token(Token = "0x60018FD")]
		[Address(RVA = "0xD7C37C", Offset = "0xD7C37C", VA = "0xD7C37C", Slot = "25")]
		public override void HitSound(bool force = false)
		{
		}

		[Token(Token = "0x60018FE")]
		[Address(RVA = "0xD7C260", Offset = "0xD7C260", VA = "0xD7C260")]
		private void syncLifes(int iLifes)
		{
		}

		[Token(Token = "0x60018FF")]
		[Address(RVA = "0xD7C400", Offset = "0xD7C400", VA = "0xD7C400")]
		public void Fire(Vector3 targetPosition, bool bulletTime, bool visible, bool bRemote = false)
		{
		}

		[Token(Token = "0x6001900")]
		[Address(RVA = "0xD7C6B0", Offset = "0xD7C6B0", VA = "0xD7C6B0")]
		private void LaunchGrenade(Vector3 target, bool bulletTime, bool visible)
		{
		}

		[Token(Token = "0x6001901")]
		[Address(RVA = "0xD7C934", Offset = "0xD7C934", VA = "0xD7C934")]
		public void PlaySound(AudioClip clip)
		{
		}

		[Token(Token = "0x6001902")]
		[Address(RVA = "0xD7C974", Offset = "0xD7C974", VA = "0xD7C974")]
		public void SetMinLifes(int minLifes)
		{
		}

		[Token(Token = "0x6001903")]
		[Address(RVA = "0xD7C97C", Offset = "0xD7C97C", VA = "0xD7C97C")]
		public void SetAimTarget(Transform target)
		{
		}

		[Token(Token = "0x6001904")]
		[Address(RVA = "0xD7C9E0", Offset = "0xD7C9E0", VA = "0xD7C9E0")]
		public void SetLookAtTarget(Transform target)
		{
		}

		[Token(Token = "0x6001905")]
		[Address(RVA = "0xD7CA44", Offset = "0xD7CA44", VA = "0xD7CA44")]
		public void SetAimOffset()
		{
		}

		[Token(Token = "0x6001906")]
		[Address(RVA = "0xD7CAEC", Offset = "0xD7CAEC", VA = "0xD7CAEC")]
		private void Update()
		{
		}

		[Token(Token = "0x6001907")]
		[Address(RVA = "0xD7D008", Offset = "0xD7D008", VA = "0xD7D008")]
		public ChuacheController()
		{
		}
	}
	[Token(Token = "0x2000431")]
	public class CrisisPlayer : MonoBehaviour, IAutoReloadController
	{
		[Token(Token = "0x4001773")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public SumalabEvent<WeaponModel> OnWeaponChanged;

		[Token(Token = "0x4001774")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SkinHandler bodySkin;

		[Token(Token = "0x4001775")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public SkinHandler leftHandSkin;

		[Token(Token = "0x4001776")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public SkinHandler rightHandSkin;

		[Token(Token = "0x4001777")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public WeaponCartridges cartridges;

		[Token(Token = "0x4001778")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public MagazineSpawner magazineSpawner;

		[Token(Token = "0x4001779")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Transform bodyParent;

		[Token(Token = "0x400177A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Transform body;

		[Token(Token = "0x400177B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private Weapon currentWeapon;

		[Token(Token = "0x400177C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private RiotShield riotShield;

		[Token(Token = "0x400177D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private bool dualWield;

		[Token(Token = "0x400177E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x69")]
		private bool localizationInitialized;

		[Token(Token = "0x400177F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public string weaponSkin;

		[Token(Token = "0x4001780")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[HideInInspector]
		public List<Bullet> playerBullets;

		[Token(Token = "0x600190A")]
		[Address(RVA = "0xD7D10C", Offset = "0xD7D10C", VA = "0xD7D10C")]
		private void Start()
		{
		}

		[Token(Token = "0x600190B")]
		[Address(RVA = "0xD7D518", Offset = "0xD7D518", VA = "0xD7D518")]
		private void Update()
		{
		}

		[Token(Token = "0x600190C")]
		[Address(RVA = "0xD7D830", Offset = "0xD7D830", VA = "0xD7D830")]
		private void OnApplicationFocusLost(bool focusLost)
		{
		}

		[Token(Token = "0x600190D")]
		[Address(RVA = "0xD7D8D8", Offset = "0xD7D8D8", VA = "0xD7D8D8")]
		public bool isAimController()
		{
			return default(bool);
		}

		[Token(Token = "0x600190E")]
		[Address(RVA = "0xD7DB1C", Offset = "0xD7DB1C", VA = "0xD7DB1C")]
		public bool isAimControllerLeftHanded()
		{
			return default(bool);
		}

		[Token(Token = "0x600190F")]
		[Address(RVA = "0xD7D754", Offset = "0xD7D754", VA = "0xD7D754")]
		private void setAimControllerLeftHanded(bool bValue)
		{
		}

		[Token(Token = "0x6001910")]
		[Address(RVA = "0xD7DB84", Offset = "0xD7DB84", VA = "0xD7DB84")]
		private void OnLocationInitialized(int locationId)
		{
		}

		[Token(Token = "0x6001911")]
		[Address(RVA = "0xD7DD4C", Offset = "0xD7DD4C", VA = "0xD7DD4C")]
		private void OnDeviceChanged()
		{
		}

		[Token(Token = "0x6001912")]
		[Address(RVA = "0xD7E328", Offset = "0xD7E328", VA = "0xD7E328")]
		private void OnRightHandBeginInteraction(SVRInteractable interactable)
		{
		}

		[Token(Token = "0x6001913")]
		[Address(RVA = "0xD7E5D4", Offset = "0xD7E5D4", VA = "0xD7E5D4")]
		private void OnRightHandEndInteraction(SVRInteractable interactable)
		{
		}

		[Token(Token = "0x6001914")]
		[Address(RVA = "0xD7E3A4", Offset = "0xD7E3A4", VA = "0xD7E3A4")]
		private void OnBeginInteraction(SVRHand hand, SVRInteractable interactable)
		{
		}

		[Token(Token = "0x6001915")]
		[Address(RVA = "0xD7E64C", Offset = "0xD7E64C", VA = "0xD7E64C")]
		private void OnEndInteraction(SVRHand hand, SVRInteractable interactable)
		{
		}

		[Token(Token = "0x6001916")]
		[Address(RVA = "0xD7E810", Offset = "0xD7E810", VA = "0xD7E810")]
		private bool IsDefaultWeapon(Weapon weapon)
		{
			return default(bool);
		}

		[Token(Token = "0x6001917")]
		[Address(RVA = "0xD7E8FC", Offset = "0xD7E8FC", VA = "0xD7E8FC")]
		public bool IsDualWield()
		{
			return default(bool);
		}

		[Token(Token = "0x6001918")]
		[Address(RVA = "0xD7E904", Offset = "0xD7E904", VA = "0xD7E904")]
		private void OnLeftHandBeginInteraction(SVRInteractable interactable)
		{
		}

		[Token(Token = "0x6001919")]
		[Address(RVA = "0xD7E980", Offset = "0xD7E980", VA = "0xD7E980")]
		private void OnLeftHandEndInteraction(SVRInteractable interactable)
		{
		}

		[Token(Token = "0x600191A")]
		[Address(RVA = "0xD7E9F8", Offset = "0xD7E9F8", VA = "0xD7E9F8")]
		private void OnNoBullets(Weapon weapon)
		{
		}

		[Token(Token = "0x600191B")]
		[Address(RVA = "0xD7EF70", Offset = "0xD7EF70", VA = "0xD7EF70")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x600191C")]
		[Address(RVA = "0xD7F480", Offset = "0xD7F480", VA = "0xD7F480")]
		public bool HasWeapon()
		{
			return default(bool);
		}

		[Token(Token = "0x600191D")]
		[Address(RVA = "0xD7E078", Offset = "0xD7E078", VA = "0xD7E078")]
		public void SetDefaultWeapon(WeaponModel weaponModel, bool dualWield = false)
		{
		}

		[Token(Token = "0x600191E")]
		[Address(RVA = "0xD7F6D4", Offset = "0xD7F6D4", VA = "0xD7F6D4")]
		public void SetDefaultWeaponInternal()
		{
		}

		[Token(Token = "0x600191F")]
		[Address(RVA = "0xD7EAE4", Offset = "0xD7EAE4", VA = "0xD7EAE4")]
		private void catchDefaltWeapon()
		{
		}

		[Token(Token = "0x6001920")]
		[Address(RVA = "0xD7F938", Offset = "0xD7F938", VA = "0xD7F938")]
		public void LoadMagazine()
		{
		}

		[Token(Token = "0x6001921")]
		[Address(RVA = "0xD7FBF0", Offset = "0xD7FBF0", VA = "0xD7FBF0")]
		public void SetBonusWeapon(WeaponModel weaponModel, bool dualWield = false)
		{
		}

		[Token(Token = "0x6001922")]
		[Address(RVA = "0xD7F8BC", Offset = "0xD7F8BC", VA = "0xD7F8BC")]
		public void EndInteractions()
		{
		}

		[Token(Token = "0x6001923")]
		[Address(RVA = "0xD80150", Offset = "0xD80150", VA = "0xD80150")]
		private void EndInteraction(SVRHand hand)
		{
		}

		[Token(Token = "0x6001924")]
		[Address(RVA = "0xD80200", Offset = "0xD80200", VA = "0xD80200")]
		public void SetWeaponSkin(string skinName)
		{
		}

		[Token(Token = "0x6001925")]
		[Address(RVA = "0xD7EE44", Offset = "0xD7EE44", VA = "0xD7EE44")]
		public void UpdateWeaponSkin()
		{
		}

		[Token(Token = "0x6001926")]
		[Address(RVA = "0xD8021C", Offset = "0xD8021C", VA = "0xD8021C")]
		public void SetBodySkin(string skinName)
		{
		}

		[Token(Token = "0x6001927")]
		[Address(RVA = "0xD80310", Offset = "0xD80310", VA = "0xD80310")]
		public bool IsRiotShieldEnabled()
		{
			return default(bool);
		}

		[Token(Token = "0x6001928")]
		[Address(RVA = "0xD80370", Offset = "0xD80370", VA = "0xD80370")]
		public void EnableRiotShield(bool enable)
		{
		}

		[Token(Token = "0x6001929")]
		[Address(RVA = "0xD80554", Offset = "0xD80554", VA = "0xD80554")]
		public void SetLimmitedAmmo()
		{
		}

		[Token(Token = "0x600192A")]
		[Address(RVA = "0xD80654", Offset = "0xD80654", VA = "0xD80654")]
		public void SetMagazineBonus(Weapon weapon)
		{
		}

		[Token(Token = "0x600192B")]
		[Address(RVA = "0xD807BC", Offset = "0xD807BC", VA = "0xD807BC", Slot = "4")]
		public bool HasMagazinesAvailable()
		{
			return default(bool);
		}

		[Token(Token = "0x600192C")]
		[Address(RVA = "0xD807FC", Offset = "0xD807FC", VA = "0xD807FC")]
		public bool NoMoreBullets()
		{
			return default(bool);
		}

		[Token(Token = "0x600192D")]
		[Address(RVA = "0xD80948", Offset = "0xD80948", VA = "0xD80948")]
		public CrisisPlayer()
		{
		}
	}
	[Token(Token = "0x2000434")]
	public class CV2_MainTheme : MonoBehaviour
	{
		[Token(Token = "0x4001787")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static CV2_MainTheme Instance;

		[Token(Token = "0x4001788")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float fadeSeconds;

		[Token(Token = "0x4001789")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private AudioSource audioSource;

		[Token(Token = "0x400178A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool playing;

		[Token(Token = "0x400178B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		private bool stopped;

		[Token(Token = "0x400178C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Tween tween;

		[Token(Token = "0x6001932")]
		[Address(RVA = "0xD821EC", Offset = "0xD821EC", VA = "0xD821EC")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001933")]
		[Address(RVA = "0xD8227C", Offset = "0xD8227C", VA = "0xD8227C")]
		public void Play()
		{
		}

		[Token(Token = "0x6001934")]
		[Address(RVA = "0xD82408", Offset = "0xD82408", VA = "0xD82408")]
		public void Stop()
		{
		}

		[Token(Token = "0x6001935")]
		[Address(RVA = "0xD825F4", Offset = "0xD825F4", VA = "0xD825F4")]
		public CV2_MainTheme()
		{
		}
	}
	[Token(Token = "0x2000435")]
	public class Destructible : MonoBehaviour
	{
		[Token(Token = "0x400178D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public DestructiblePart[] destructibleParts;

		[Token(Token = "0x400178E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int destroyEveryHit;

		[Token(Token = "0x400178F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public WeaponModel[] affectedBy;

		[Token(Token = "0x4001790")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool destroyed;

		[Token(Token = "0x4001791")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private int index;

		[Token(Token = "0x4001792")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private int currentHits;

		[Token(Token = "0x600193B")]
		[Address(RVA = "0xD82690", Offset = "0xD82690", VA = "0xD82690")]
		private void Awake()
		{
		}

		[Token(Token = "0x600193C")]
		[Address(RVA = "0xD826F4", Offset = "0xD826F4", VA = "0xD826F4")]
		public void OnHit(Bullet bullet)
		{
		}

		[Token(Token = "0x600193D")]
		[Address(RVA = "0xD827CC", Offset = "0xD827CC", VA = "0xD827CC")]
		private bool IsAffectedBy(WeaponModel weaponModel)
		{
			return default(bool);
		}

		[Token(Token = "0x600193E")]
		[Address(RVA = "0xD82B68", Offset = "0xD82B68", VA = "0xD82B68")]
		public void Reset()
		{
		}

		[Token(Token = "0x600193F")]
		[Address(RVA = "0xD82DF8", Offset = "0xD82DF8", VA = "0xD82DF8")]
		public Destructible()
		{
		}
	}
	[Token(Token = "0x2000436")]
	public class DestructiblePart : HitTarget
	{
		[Token(Token = "0x4001793")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public AnimationClip anim;

		[Token(Token = "0x4001794")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public List<GameObject> non_destroyed_object;

		[Token(Token = "0x4001795")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public List<GameObject> destroyed_object;

		[Token(Token = "0x4001796")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public bool disable;

		[Token(Token = "0x4001797")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
		private bool destroyed;

		[Token(Token = "0x4001798")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Destructible destructible;

		[Token(Token = "0x6001940")]
		[Address(RVA = "0xD82E08", Offset = "0xD82E08", VA = "0xD82E08")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001941")]
		[Address(RVA = "0xD83024", Offset = "0xD83024", VA = "0xD83024", Slot = "4")]
		public override bool OnHit(Bullet bullet, Ray ray, RaycastHit hit)
		{
			return default(bool);
		}

		[Token(Token = "0x6001942")]
		[Address(RVA = "0xD82814", Offset = "0xD82814", VA = "0xD82814")]
		public void Destroy()
		{
		}

		[Token(Token = "0x6001943")]
		[Address(RVA = "0xD830FC", Offset = "0xD830FC", VA = "0xD830FC")]
		public void SetDestructible(Destructible destructible)
		{
		}

		[Token(Token = "0x6001944")]
		[Address(RVA = "0xD83104", Offset = "0xD83104", VA = "0xD83104")]
		private void disableGroup()
		{
		}

		[Token(Token = "0x6001945")]
		[Address(RVA = "0xD83254", Offset = "0xD83254", VA = "0xD83254")]
		private void enableGroup()
		{
		}

		[Token(Token = "0x6001946")]
		[Address(RVA = "0xD82BCC", Offset = "0xD82BCC", VA = "0xD82BCC")]
		public void Reset()
		{
		}

		[Token(Token = "0x6001947")]
		[Address(RVA = "0xD833A4", Offset = "0xD833A4", VA = "0xD833A4")]
		public DestructiblePart()
		{
		}
	}
	[Token(Token = "0x2000437")]
	public class Duck : HitTarget
	{
		[Token(Token = "0x4001799")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
		public bool redDuck;

		[Token(Token = "0x400179A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public SumalabEvent<Duck> OnDuckHit;

		[Token(Token = "0x400179B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public SumalabEvent<Duck> OnDuckMissed;

		[Token(Token = "0x400179C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private DuckPosition m_currentPosition;

		[Token(Token = "0x400179D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public bool m_bHit;

		[Token(Token = "0x400179E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
		public bool m_bFail;

		[Token(Token = "0x400179F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private SumalabInvoke.SumalabInvokeReference invokeHandler;

		[Token(Token = "0x40017A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Transform model;

		[Token(Token = "0x40017A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private float m_fEndTime;

		[Token(Token = "0x40017A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static float SHOW_DELTA;

		[Token(Token = "0x40017A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private static float WARNING_DELTA;

		[Token(Token = "0x40017A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private DestructibleAnimation destructibleAnimation;

		[Token(Token = "0x40017A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static SoundEffect soundCuack;

		[Token(Token = "0x40017A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private static SoundEffect soundFail;

		[Token(Token = "0x40017A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static SoundEffect soundExplosion;

		[Token(Token = "0x6001948")]
		[Address(RVA = "0xD833AC", Offset = "0xD833AC", VA = "0xD833AC")]
		private void Start()
		{
		}

		[Token(Token = "0x6001949")]
		[Address(RVA = "0xD83418", Offset = "0xD83418", VA = "0xD83418", Slot = "4")]
		public override bool OnHit(Bullet bullet, Ray ray, RaycastHit hit)
		{
			return default(bool);
		}

		[Token(Token = "0x600194A")]
		[Address(RVA = "0xD8363C", Offset = "0xD8363C", VA = "0xD8363C")]
		public bool isAlive()
		{
			return default(bool);
		}

		[Token(Token = "0x600194B")]
		[Address(RVA = "0xD8365C", Offset = "0xD8365C", VA = "0xD8365C")]
		public DuckPosition GetCurrentPosition()
		{
			return null;
		}

		[Token(Token = "0x600194C")]
		[Address(RVA = "0xD83488", Offset = "0xD83488", VA = "0xD83488")]
		public void Hit()
		{
		}

		[Token(Token = "0x600194D")]
		[Address(RVA = "0xD8372C", Offset = "0xD8372C", VA = "0xD8372C")]
		public void Show(DuckPosition position, float fTime = 0f)
		{
		}

		[Token(Token = "0x600194E")]
		[Address(RVA = "0xD83D9C", Offset = "0xD83D9C", VA = "0xD83D9C")]
		public float GetRemainingTime()
		{
			return default(float);
		}

		[Token(Token = "0x600194F")]
		[Address(RVA = "0xD83DC0", Offset = "0xD83DC0", VA = "0xD83DC0")]
		public void Warning()
		{
		}

		[Token(Token = "0x6001950")]
		[Address(RVA = "0xD83F34", Offset = "0xD83F34", VA = "0xD83F34")]
		public void ShotMissed()
		{
		}

		[Token(Token = "0x6001951")]
		[Address(RVA = "0xD83C1C", Offset = "0xD83C1C", VA = "0xD83C1C")]
		public void Show(bool bSound = true, [Optional] Action action)
		{
		}

		[Token(Token = "0x6001952")]
		[Address(RVA = "0xD84058", Offset = "0xD84058", VA = "0xD84058")]
		public void Hide(bool deactivate = false, [Optional] Action action)
		{
		}

		[Token(Token = "0x6001953")]
		[Address(RVA = "0xD842C8", Offset = "0xD842C8", VA = "0xD842C8")]
		public void setHit()
		{
		}

		[Token(Token = "0x6001954")]
		[Address(RVA = "0xD842D4", Offset = "0xD842D4", VA = "0xD842D4")]
		public bool isFailed()
		{
			return default(bool);
		}

		[Token(Token = "0x6001955")]
		[Address(RVA = "0xD842DC", Offset = "0xD842DC", VA = "0xD842DC")]
		public void setFailed()
		{
		}

		[Token(Token = "0x6001956")]
		[Address(RVA = "0xD842E8", Offset = "0xD842E8", VA = "0xD842E8")]
		public void StartFailAnimation(Action action)
		{
		}

		[Token(Token = "0x6001957")]
		[Address(RVA = "0xD83F90", Offset = "0xD83F90", VA = "0xD83F90")]
		public void CuackSound()
		{
		}

		[Token(Token = "0x6001958")]
		[Address(RVA = "0xD83664", Offset = "0xD83664", VA = "0xD83664")]
		public void FailSound()
		{
		}

		[Token(Token = "0x6001959")]
		[Address(RVA = "0xD84614", Offset = "0xD84614", VA = "0xD84614")]
		public void ExplosionSound()
		{
		}

		[Token(Token = "0x600195A")]
		[Address(RVA = "0xD846DC", Offset = "0xD846DC", VA = "0xD846DC")]
		public void Explode()
		{
		}

		[Token(Token = "0x600195B")]
		[Address(RVA = "0xD84838", Offset = "0xD84838", VA = "0xD84838")]
		public void Deactivate()
		{
		}

		[Token(Token = "0x600195C")]
		[Address(RVA = "0xD849AC", Offset = "0xD849AC", VA = "0xD849AC")]
		public Duck()
		{
		}
	}
	[Token(Token = "0x200043B")]
	public class DuckGame : MonoBehaviour
	{
		[StructLayout(3)]
		[Token(Token = "0x200043F")]
		[CompilerGenerated]
		private struct <SaveRecord>d__54 : IAsyncStateMachine
		{
			[Token(Token = "0x40017CB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x40017CC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncVoidMethodBuilder <>t__builder;

			[Token(Token = "0x40017CD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public DuckGame <>4__this;

			[Token(Token = "0x40017CE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private bool <newRecord>5__2;

			[Token(Token = "0x40017CF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private TaskAwaiter <>u__1;

			[Token(Token = "0x6001999")]
			[Address(RVA = "0xD89710", Offset = "0xD89710", VA = "0xD89710", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x600199A")]
			[Address(RVA = "0xD89B9C", Offset = "0xD89B9C", VA = "0xD89B9C", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x2000440")]
		[CompilerGenerated]
		private struct <SaveRoundInServer>d__55 : IAsyncStateMachine
		{
			[Token(Token = "0x40017D0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x40017D1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncTaskMethodBuilder <>t__builder;

			[Token(Token = "0x40017D2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public bool oldRecord;

			[Token(Token = "0x40017D3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public int ducks;

			[Token(Token = "0x40017D4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public DateTime time;

			[Token(Token = "0x40017D5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private TaskAwaiter<ServerService.AddRoundResultResponse> <>u__1;

			[Token(Token = "0x600199B")]
			[Address(RVA = "0xD89BA8", Offset = "0xD89BA8", VA = "0xD89BA8", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x600199C")]
			[Address(RVA = "0xD8A0BC", Offset = "0xD8A0BC", VA = "0xD8A0BC", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x2000441")]
		[CompilerGenerated]
		private struct <SaveRecordOnServer>d__58 : IAsyncStateMachine
		{
			[Token(Token = "0x40017D6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x40017D7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncTaskMethodBuilder <>t__builder;

			[Token(Token = "0x40017D8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public DuckGame <>4__this;

			[Token(Token = "0x40017D9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private TaskAwaiter <>u__1;

			[Token(Token = "0x600199D")]
			[Address(RVA = "0xD8A0C8", Offset = "0xD8A0C8", VA = "0xD8A0C8", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x600199E")]
			[Address(RVA = "0xD8A384", Offset = "0xD8A384", VA = "0xD8A384", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x40017AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private List<Duck> ducks;

		[Token(Token = "0x40017AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private List<Duck> ducksReserve;

		[Token(Token = "0x40017AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private List<Duck> ducksAll;

		[Token(Token = "0x40017B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private List<DuckPosition> availablePositions;

		[Token(Token = "0x40017B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool m_bDuckGameActive;

		[Token(Token = "0x40017B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public int m_iHitDucks;

		[Token(Token = "0x40017B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private int currentRound;

		[Token(Token = "0x40017B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private int roundDucks;

		[Token(Token = "0x40017B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private int roundDucksPending;

		[Token(Token = "0x40017B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private bool gameEnded;

		[Token(Token = "0x40017B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public DucksGamePanel panel;

		[Token(Token = "0x40017B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Transform bigPanel;

		[Token(Token = "0x40017B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Action registerOnline;

		[Token(Token = "0x40017BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private bool savedRecord;

		[Token(Token = "0x40017BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static int ROUND_CYCLE;

		[Token(Token = "0x40017BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private static int MAX_DUCKS;

		[Token(Token = "0x40017BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static float MIN_TIME;

		[Token(Token = "0x40017BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private static float MAX_TIME;

		[Token(Token = "0x40017BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static float TIME_ROUND_DIVISOR;

		[Token(Token = "0x40017C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private static float DUCK_SPAWN_TIME;

		[Token(Token = "0x40017C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static float RED_DUCK_TIME;

		[Token(Token = "0x40017C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Duck gameOverPending;

		[Token(Token = "0x6001965")]
		[Address(RVA = "0xD84B4C", Offset = "0xD84B4C", VA = "0xD84B4C")]
		private void Start()
		{
		}

		[Token(Token = "0x6001966")]
		[Address(RVA = "0xD85038", Offset = "0xD85038", VA = "0xD85038")]
		private void CreateDucksReserve()
		{
		}

		[Token(Token = "0x6001967")]
		[Address(RVA = "0xD8546C", Offset = "0xD8546C", VA = "0xD8546C")]
		private void OnPlayerMasterClient()
		{
		}

		[Token(Token = "0x6001968")]
		[Address(RVA = "0xD85AB8", Offset = "0xD85AB8", VA = "0xD85AB8")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001969")]
		[Address(RVA = "0xD85B20", Offset = "0xD85B20", VA = "0xD85B20")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x600196A")]
		[Address(RVA = "0xD85C8C", Offset = "0xD85C8C", VA = "0xD85C8C")]
		private void OnNetworkGameStart()
		{
		}

		[Token(Token = "0x600196B")]
		[Address(RVA = "0xD85288", Offset = "0xD85288", VA = "0xD85288")]
		private void InitGame()
		{
		}

		[Token(Token = "0x600196C")]
		[Address(RVA = "0xD86118", Offset = "0xD86118", VA = "0xD86118")]
		private string resetName(string strName)
		{
			return null;
		}

		[Token(Token = "0x600196D")]
		[Address(RVA = "0xD85F00", Offset = "0xD85F00", VA = "0xD85F00")]
		private void resetDuckNames()
		{
		}

		[Token(Token = "0x600196E")]
		[Address(RVA = "0xD86194", Offset = "0xD86194", VA = "0xD86194")]
		private void StartGame(bool bRemote = false)
		{
		}

		[Token(Token = "0x600196F")]
		[Address(RVA = "0xD863A4", Offset = "0xD863A4", VA = "0xD863A4")]
		private void FinishGame()
		{
		}

		[Token(Token = "0x6001970")]
		[Address(RVA = "0xD864E8", Offset = "0xD864E8", VA = "0xD864E8")]
		private void FinishGameRemote()
		{
		}

		[Token(Token = "0x6001971")]
		[Address(RVA = "0xD86514", Offset = "0xD86514", VA = "0xD86514")]
		private void updatePanel()
		{
		}

		[Token(Token = "0x6001972")]
		[Address(RVA = "0xD865E8", Offset = "0xD865E8", VA = "0xD865E8")]
		private void OnDuckHit(Duck duck)
		{
		}

		[Token(Token = "0x6001973")]
		[Address(RVA = "0xD865F0", Offset = "0xD865F0", VA = "0xD865F0")]
		private void OnDuckHitImpl(Duck duck, bool bRemote = false)
		{
		}

		[Token(Token = "0x6001974")]
		[Address(RVA = "0xD86B00", Offset = "0xD86B00", VA = "0xD86B00")]
		private void OnDuckHitRemote(string strName)
		{
		}

		[Token(Token = "0x6001975")]
		[Address(RVA = "0xD86BA0", Offset = "0xD86BA0", VA = "0xD86BA0")]
		private Duck GetDuck(string strName)
		{
			return null;
		}

		[Token(Token = "0x6001976")]
		[Address(RVA = "0xD86C70", Offset = "0xD86C70", VA = "0xD86C70")]
		private void OnDuckMissed(Duck duck)
		{
		}

		[Token(Token = "0x6001977")]
		[Address(RVA = "0xD86DB0", Offset = "0xD86DB0", VA = "0xD86DB0")]
		private void GameOverRemote(string strDuckName, bool bRemote = false)
		{
		}

		[Token(Token = "0x6001978")]
		[Address(RVA = "0xD854F0", Offset = "0xD854F0", VA = "0xD854F0")]
		private void GameOver(Duck duck, bool bRemote = false)
		{
		}

		[Token(Token = "0x6001979")]
		[Address(RVA = "0xD85E60", Offset = "0xD85E60", VA = "0xD85E60")]
		private void ResetGame()
		{
		}

		[Token(Token = "0x600197A")]
		[Address(RVA = "0xD869EC", Offset = "0xD869EC", VA = "0xD869EC")]
		private void NextRound()
		{
		}

		[Token(Token = "0x600197B")]
		[Address(RVA = "0xD85864", Offset = "0xD85864", VA = "0xD85864")]
		private void SpawnRoundDucks()
		{
		}

		[Token(Token = "0x600197C")]
		[Address(RVA = "0xD87058", Offset = "0xD87058", VA = "0xD87058")]
		private void SpawnDuck(float time)
		{
		}

		[Token(Token = "0x600197D")]
		[Address(RVA = "0xD8606C", Offset = "0xD8606C", VA = "0xD8606C")]
		private string generateDuckName(Duck duck)
		{
			return null;
		}

		[Token(Token = "0x600197E")]
		[Address(RVA = "0xD876CC", Offset = "0xD876CC", VA = "0xD876CC")]
		private void ShowDuck(string strName, int iDuck, int iPosition, float time, int iSeed = -1, bool bRemote = false)
		{
		}

		[Token(Token = "0x600197F")]
		[Address(RVA = "0xD871E8", Offset = "0xD871E8", VA = "0xD871E8")]
		private int GetAvailablePosition()
		{
			return default(int);
		}

		[Token(Token = "0x6001980")]
		[Address(RVA = "0xD87518", Offset = "0xD87518", VA = "0xD87518")]
		private int GetAvailableDuck(bool redDuckEnabled = false)
		{
			return default(int);
		}

		[Token(Token = "0x6001981")]
		[Address(RVA = "0xD86F90", Offset = "0xD86F90", VA = "0xD86F90")]
		private void Restart()
		{
		}

		[Token(Token = "0x6001982")]
		[Address(RVA = "0xD86234", Offset = "0xD86234", VA = "0xD86234")]
		private void ShowMenu(bool show)
		{
		}

		[Token(Token = "0x6001983")]
		[Address(RVA = "0xD863A0", Offset = "0xD863A0", VA = "0xD863A0")]
		private void PlayMusic(bool play)
		{
		}

		[Token(Token = "0x6001984")]
		[Address(RVA = "0xD86E98", Offset = "0xD86E98", VA = "0xD86E98")]
		private void HideAll([Optional] Duck except)
		{
		}

		[Token(Token = "0x6001985")]
		[Address(RVA = "0xD86DE4", Offset = "0xD86DE4", VA = "0xD86DE4")]
		[AsyncStateMachine(typeof(<SaveRecord>d__54))]
		private void SaveRecord()
		{
		}

		[Token(Token = "0x6001986")]
		[Address(RVA = "0xD87AC0", Offset = "0xD87AC0", VA = "0xD87AC0")]
		[AsyncStateMachine(typeof(<SaveRoundInServer>d__55))]
		public static Task SaveRoundInServer(int ducks, DateTime time, bool oldRecord = false)
		{
			return null;
		}

		[Token(Token = "0x6001987")]
		[Address(RVA = "0xD87BB4", Offset = "0xD87BB4", VA = "0xD87BB4")]
		private static string GetDifficulty(bool oldRecord)
		{
			return null;
		}

		[Token(Token = "0x6001988")]
		[Address(RVA = "0xD87E64", Offset = "0xD87E64", VA = "0xD87E64")]
		private static string GetDifficultyString(SVRHand rightHand, SVRHand leftHand)
		{
			return null;
		}

		[Token(Token = "0x6001989")]
		[Address(RVA = "0xD88140", Offset = "0xD88140", VA = "0xD88140")]
		[AsyncStateMachine(typeof(<SaveRecordOnServer>d__58))]
		private Task SaveRecordOnServer()
		{
			return null;
		}

		[Token(Token = "0x600198A")]
		[Address(RVA = "0xD8822C", Offset = "0xD8822C", VA = "0xD8822C")]
		private void PlayerEnteredRoom()
		{
		}

		[Token(Token = "0x600198B")]
		[Address(RVA = "0xD85D24", Offset = "0xD85D24", VA = "0xD85D24")]
		private void StartOnlineDuckGame()
		{
		}

		[Token(Token = "0x600198C")]
		[Address(RVA = "0xD882F8", Offset = "0xD882F8", VA = "0xD882F8")]
		private void SendCurrentGameState()
		{
		}

		[Token(Token = "0x600198D")]
		[Address(RVA = "0xD88CCC", Offset = "0xD88CCC", VA = "0xD88CCC")]
		private void CurrentGameStateRemote(object[] parameters)
		{
		}

		[Token(Token = "0x600198E")]
		[Address(RVA = "0xD89324", Offset = "0xD89324", VA = "0xD89324")]
		public DuckGame()
		{
		}
	}
	[Token(Token = "0x2000442")]
	public class GameManager : MonoBehaviour
	{
		[Token(Token = "0x2000443")]
		public enum Difficulty
		{
			[Token(Token = "0x4001809")]
			Rookie,
			[Token(Token = "0x400180A")]
			Cadet,
			[Token(Token = "0x400180B")]
			Veteran,
			[Token(Token = "0x400180C")]
			Hell
		}

		[Token(Token = "0x2000444")]
		public enum SoundConfiguration
		{
			[Token(Token = "0x400180E")]
			Default,
			[Token(Token = "0x400180F")]
			GameOver,
			[Token(Token = "0x4001810")]
			Headphones,
			[Token(Token = "0x4001811")]
			TA3_Bomb
		}

		[StructLayout(3)]
		[Token(Token = "0x2000445")]
		[CompilerGenerated]
		private struct <Start>d__38 : IAsyncStateMachine
		{
			[Token(Token = "0x4001812")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4001813")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncVoidMethodBuilder <>t__builder;

			[Token(Token = "0x4001814")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public GameManager <>4__this;

			[Token(Token = "0x4001815")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private TaskAwaiter <>u__1;

			[Token(Token = "0x6001A01")]
			[Address(RVA = "0xD9072C", Offset = "0xD9072C", VA = "0xD9072C", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6001A02")]
			[Address(RVA = "0xD90BC4", Offset = "0xD90BC4", VA = "0xD90BC4", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x2000447")]
		[CompilerGenerated]
		private struct <InitializeLoadSaveData>d__41 : IAsyncStateMachine
		{
			[Token(Token = "0x4001819")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x400181A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncTaskMethodBuilder <>t__builder;

			[Token(Token = "0x400181B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private float <timeSeconds>5__2;

			[Token(Token = "0x400181C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			private YieldAwaitable.YieldAwaiter <>u__1;

			[Token(Token = "0x6001A07")]
			[Address(RVA = "0xD90CB4", Offset = "0xD90CB4", VA = "0xD90CB4", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6001A08")]
			[Address(RVA = "0xD911D4", Offset = "0xD911D4", VA = "0xD911D4", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x2000448")]
		[CompilerGenerated]
		private sealed class <startGameCoroutine>d__50 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400181D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400181E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400181F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public GameManager <>4__this;

			[Token(Token = "0x4001820")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private Tutorial <tutorial>5__2;

			[Token(Token = "0x17000151")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001A0C")]
				[Address(RVA = "0xD91FB8", Offset = "0xD91FB8", VA = "0xD91FB8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000152")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001A0E")]
				[Address(RVA = "0xD92000", Offset = "0xD92000", VA = "0xD92000", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001A09")]
			[Address(RVA = "0xD8B600", Offset = "0xD8B600", VA = "0xD8B600")]
			[DebuggerHidden]
			public <startGameCoroutine>d__50(int <>1__state)
			{
			}

			[Token(Token = "0x6001A0A")]
			[Address(RVA = "0xD911E0", Offset = "0xD911E0", VA = "0xD911E0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001A0B")]
			[Address(RVA = "0xD911E4", Offset = "0xD911E4", VA = "0xD911E4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001A0D")]
			[Address(RVA = "0xD91FC0", Offset = "0xD91FC0", VA = "0xD91FC0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000449")]
		[CompilerGenerated]
		private sealed class <waitForNetworkStartComplete>d__51 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001821")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001822")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x17000153")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001A12")]
				[Address(RVA = "0xD92104", Offset = "0xD92104", VA = "0xD92104", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000154")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001A14")]
				[Address(RVA = "0xD9214C", Offset = "0xD9214C", VA = "0xD9214C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001A0F")]
			[Address(RVA = "0xD8B688", Offset = "0xD8B688", VA = "0xD8B688")]
			[DebuggerHidden]
			public <waitForNetworkStartComplete>d__51(int <>1__state)
			{
			}

			[Token(Token = "0x6001A10")]
			[Address(RVA = "0xD92008", Offset = "0xD92008", VA = "0xD92008", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001A11")]
			[Address(RVA = "0xD9200C", Offset = "0xD9200C", VA = "0xD9200C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001A13")]
			[Address(RVA = "0xD9210C", Offset = "0xD9210C", VA = "0xD9210C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200044A")]
		[CompilerGenerated]
		private sealed class <waitForOnlinePlayerId>d__57 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001823")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001824")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001825")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public GameManager <>4__this;

			[Token(Token = "0x4001826")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <fTime>5__2;

			[Token(Token = "0x17000155")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001A18")]
				[Address(RVA = "0xD92B08", Offset = "0xD92B08", VA = "0xD92B08", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000156")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001A1A")]
				[Address(RVA = "0xD92B50", Offset = "0xD92B50", VA = "0xD92B50", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001A15")]
			[Address(RVA = "0xD8BAB0", Offset = "0xD8BAB0", VA = "0xD8BAB0")]
			[DebuggerHidden]
			public <waitForOnlinePlayerId>d__57(int <>1__state)
			{
			}

			[Token(Token = "0x6001A16")]
			[Address(RVA = "0xD92154", Offset = "0xD92154", VA = "0xD92154", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001A17")]
			[Address(RVA = "0xD92158", Offset = "0xD92158", VA = "0xD92158", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001A19")]
			[Address(RVA = "0xD92B10", Offset = "0xD92B10", VA = "0xD92B10", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200044B")]
		[CompilerGenerated]
		private sealed class <waitForOnlinePlayers>d__58 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001827")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001828")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001829")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private float <fTime>5__2;

			[Token(Token = "0x17000157")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001A1E")]
				[Address(RVA = "0xD93248", Offset = "0xD93248", VA = "0xD93248", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000158")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001A20")]
				[Address(RVA = "0xD93290", Offset = "0xD93290", VA = "0xD93290", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001A1B")]
			[Address(RVA = "0xD8BB38", Offset = "0xD8BB38", VA = "0xD8BB38")]
			[DebuggerHidden]
			public <waitForOnlinePlayers>d__58(int <>1__state)
			{
			}

			[Token(Token = "0x6001A1C")]
			[Address(RVA = "0xD92B58", Offset = "0xD92B58", VA = "0xD92B58", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001A1D")]
			[Address(RVA = "0xD92B5C", Offset = "0xD92B5C", VA = "0xD92B5C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001A1F")]
			[Address(RVA = "0xD93250", Offset = "0xD93250", VA = "0xD93250", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200044C")]
		[CompilerGenerated]
		private sealed class <stopBulletTimeCoroutine>d__78 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400182A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400182B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400182C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float bulletTime;

			[Token(Token = "0x400182D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public GameManager <>4__this;

			[Token(Token = "0x17000159")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001A24")]
				[Address(RVA = "0xD9347C", Offset = "0xD9347C", VA = "0xD9347C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700015A")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001A26")]
				[Address(RVA = "0xD934C4", Offset = "0xD934C4", VA = "0xD934C4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001A21")]
			[Address(RVA = "0xD8D020", Offset = "0xD8D020", VA = "0xD8D020")]
			[DebuggerHidden]
			public <stopBulletTimeCoroutine>d__78(int <>1__state)
			{
			}

			[Token(Token = "0x6001A22")]
			[Address(RVA = "0xD93298", Offset = "0xD93298", VA = "0xD93298", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001A23")]
			[Address(RVA = "0xD9329C", Offset = "0xD9329C", VA = "0xD9329C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001A25")]
			[Address(RVA = "0xD93484", Offset = "0xD93484", VA = "0xD93484", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200044E")]
		[CompilerGenerated]
		private sealed class <finalCountDownCoroutine>d__110 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001830")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001831")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001832")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public GameManager <>4__this;

			[Token(Token = "0x4001833")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private bool <bContinue>5__2;

			[Token(Token = "0x1700015B")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001A2C")]
				[Address(RVA = "0xD936D0", Offset = "0xD936D0", VA = "0xD936D0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700015C")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001A2E")]
				[Address(RVA = "0xD93718", Offset = "0xD93718", VA = "0xD93718", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001A29")]
			[Address(RVA = "0xD8E818", Offset = "0xD8E818", VA = "0xD8E818")]
			[DebuggerHidden]
			public <finalCountDownCoroutine>d__110(int <>1__state)
			{
			}

			[Token(Token = "0x6001A2A")]
			[Address(RVA = "0xD93558", Offset = "0xD93558", VA = "0xD93558", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001A2B")]
			[Address(RVA = "0xD9355C", Offset = "0xD9355C", VA = "0xD9355C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001A2D")]
			[Address(RVA = "0xD936D8", Offset = "0xD936D8", VA = "0xD936D8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200044F")]
		[CompilerGenerated]
		private sealed class <TicTacCoroutine>d__115 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001834")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001835")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001836")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public bool enable;

			[Token(Token = "0x4001837")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public GameManager <>4__this;

			[Token(Token = "0x1700015D")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001A32")]
				[Address(RVA = "0xD93A20", Offset = "0xD93A20", VA = "0xD93A20", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700015E")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001A34")]
				[Address(RVA = "0xD93A68", Offset = "0xD93A68", VA = "0xD93A68", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001A2F")]
			[Address(RVA = "0xD8EB20", Offset = "0xD8EB20", VA = "0xD8EB20")]
			[DebuggerHidden]
			public <TicTacCoroutine>d__115(int <>1__state)
			{
			}

			[Token(Token = "0x6001A30")]
			[Address(RVA = "0xD93720", Offset = "0xD93720", VA = "0xD93720", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001A31")]
			[Address(RVA = "0xD93724", Offset = "0xD93724", VA = "0xD93724", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001A33")]
			[Address(RVA = "0xD93A28", Offset = "0xD93A28", VA = "0xD93A28", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000452")]
		[CompilerGenerated]
		private sealed class <SetLocationCoroutine>d__119 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400183D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400183E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400183F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float initTime;

			[Token(Token = "0x4001840")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public LocationController location;

			[Token(Token = "0x4001841")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public GameManager <>4__this;

			[Token(Token = "0x1700015F")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001A3C")]
				[Address(RVA = "0xD93DB8", Offset = "0xD93DB8", VA = "0xD93DB8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000160")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001A3E")]
				[Address(RVA = "0xD93E00", Offset = "0xD93E00", VA = "0xD93E00", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001A39")]
			[Address(RVA = "0xD8ED30", Offset = "0xD8ED30", VA = "0xD8ED30")]
			[DebuggerHidden]
			public <SetLocationCoroutine>d__119(int <>1__state)
			{
			}

			[Token(Token = "0x6001A3A")]
			[Address(RVA = "0xD93CA4", Offset = "0xD93CA4", VA = "0xD93CA4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001A3B")]
			[Address(RVA = "0xD93CA8", Offset = "0xD93CA8", VA = "0xD93CA8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001A3D")]
			[Address(RVA = "0xD93DC0", Offset = "0xD93DC0", VA = "0xD93DC0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x2000453")]
		[CompilerGenerated]
		private struct <MergeGameDataWithServer>d__129 : IAsyncStateMachine
		{
			[Token(Token = "0x4001842")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4001843")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncVoidMethodBuilder <>t__builder;

			[Token(Token = "0x4001844")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public CrisisVRigade2_LoadSaveData.GlobalStatsData globalStats;

			[Token(Token = "0x4001845")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public GameManager <>4__this;

			[Token(Token = "0x4001846")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private bool <saveData>5__2;

			[Token(Token = "0x4001847")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private TaskAwaiter <>u__1;

			[Token(Token = "0x4001848")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private TaskAwaiter<ServerService.Player> <>u__2;

			[Token(Token = "0x4001849")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			private TaskAwaiter<string> <>u__3;

			[Token(Token = "0x400184A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			private bool <>7__wrap2;

			[Token(Token = "0x400184B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			private TaskAwaiter<bool> <>u__4;

			[Token(Token = "0x6001A3F")]
			[Address(RVA = "0xD93E08", Offset = "0xD93E08", VA = "0xD93E08", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6001A40")]
			[Address(RVA = "0xD9466C", Offset = "0xD9466C", VA = "0xD9466C", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x2000454")]
		[CompilerGenerated]
		private struct <AddPendingResults>d__130 : IAsyncStateMachine
		{
			[Token(Token = "0x400184C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x400184D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncTaskMethodBuilder<bool> <>t__builder;

			[Token(Token = "0x400184E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public CrisisVRigade2_LoadSaveData.GlobalStatsData globalStats;

			[Token(Token = "0x400184F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private bool <saveData>5__2;

			[Token(Token = "0x4001850")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private List<CrisisVRigade2_LoadSaveData.MissionStatsData>.Enumerator <>7__wrap2;

			[Token(Token = "0x4001851")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private CrisisVRigade2_LoadSaveData.MissionStatsData <mission>5__4;

			[Token(Token = "0x4001852")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			private List<CrisisVRigade2_LoadSaveData.GameStatsData>.Enumerator <>7__wrap4;

			[Token(Token = "0x4001853")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			private TaskAwaiter<ServerService.AddRoundResultResponse> <>u__1;

			[Token(Token = "0x4001854")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			private TaskAwaiter <>u__2;

			[Token(Token = "0x6001A41")]
			[Address(RVA = "0xD94678", Offset = "0xD94678", VA = "0xD94678", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6001A42")]
			[Address(RVA = "0xD94FA4", Offset = "0xD94FA4", VA = "0xD94FA4", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x40017DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static GameManager Instance;

		[Token(Token = "0x40017DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[HideInInspector]
		public SumalabEvent OnTimeReached;

		[Token(Token = "0x40017DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SumalabEvent<float> OnTimeAdded;

		[Token(Token = "0x40017DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public SumalabEvent<Difficulty> OnDifficultyChanged;

		[Token(Token = "0x40017DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float totalTime;

		[Token(Token = "0x40017DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public bool timeAttack;

		[Token(Token = "0x40017E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x35")]
		public bool zombieMission;

		[Token(Token = "0x40017E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[HideInInspector]
		public List<CharacterData> teammates;

		[Token(Token = "0x40017E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[HideInInspector]
		public OverlayScreen overlayScreen;

		[Token(Token = "0x40017E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float initTime;

		[Token(Token = "0x40017E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private float finalTime;

		[Token(Token = "0x40017E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public LocationController currentLocation;

		[Token(Token = "0x40017E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public string localPlayerId;

		[Token(Token = "0x40017E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private LocationController[] locations;

		[Token(Token = "0x40017E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private ReadySetGo readySetGo;

		[Token(Token = "0x40017E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public GameOver gameOver;

		[Token(Token = "0x40017EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public SwatShape swatShape;

		[Token(Token = "0x40017EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private MissionAccomplished missionAccomplished;

		[Token(Token = "0x40017EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private SVRPlayer player;

		[Token(Token = "0x40017ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private AudioSource tictac;

		[Token(Token = "0x40017EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private AudioSource music;

		[Token(Token = "0x40017EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private Coroutine countdownCoroutine;

		[Token(Token = "0x40017F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private Coroutine tictacCoroutine;

		[Token(Token = "0x40017F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private Coroutine bulletTimeCoroutine;

		[Token(Token = "0x40017F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private List<AudioGroup> bulletTimeAudioGroups;

		[Token(Token = "0x40017F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private bool bossBattle;

		[Token(Token = "0x40017F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private string bossBattleText;

		[Token(Token = "0x40017F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private bool timeOut;

		[Token(Token = "0x40017F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD1")]
		public bool bonusDisabled;

		[Token(Token = "0x40017F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private Dictionary<string, Transform> m_transformCache;

		[Token(Token = "0x40017F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		public int maxDeadBodies;

		[Token(Token = "0x40017F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		public int killsAmmoBonus;

		[Token(Token = "0x40017FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		public SumalabEvent<bool> OnPlayerHealed;

		[Token(Token = "0x40017FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		public bool disableBlackScreen;

		[Token(Token = "0x40017FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF1")]
		public bool disablePlayerChangePosition;

		[Token(Token = "0x40017FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF2")]
		private bool m_disableFireOutOfPlayArea;

		[Token(Token = "0x40017FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF3")]
		private bool m_disableFire;

		[Token(Token = "0x40017FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
		private bool bulletTimeEnable;

		[Token(Token = "0x4001800")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF5")]
		private bool gameFinished;

		[Token(Token = "0x4001801")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF6")]
		private bool readySetGoPlayerHealedPending;

		[Token(Token = "0x4001802")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF7")]
		private bool bSettingLocation;

		[Token(Token = "0x4001803")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private LayerMask oldCullingMask;

		[Token(Token = "0x4001804")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
		private Color oldBackgroundColor;

		[Token(Token = "0x4001805")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
		private CameraClearFlags oldClearFlags;

		[Token(Token = "0x4001806")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		private bool isSolidBlackScreen;

		[Token(Token = "0x4001807")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x111")]
		public bool pendingBlackScreen;

		[Token(Token = "0x600199F")]
		[Address(RVA = "0xD8A390", Offset = "0xD8A390", VA = "0xD8A390")]
		private void Awake()
		{
		}

		[Token(Token = "0x60019A0")]
		[Address(RVA = "0xD8A484", Offset = "0xD8A484", VA = "0xD8A484")]
		[AsyncStateMachine(typeof(<Start>d__38))]
		private void Start()
		{
		}

		[Token(Token = "0x60019A1")]
		[Address(RVA = "0xD8A53C", Offset = "0xD8A53C", VA = "0xD8A53C")]
		private void Update()
		{
		}

		[Token(Token = "0x60019A2")]
		[Address(RVA = "0xD8A604", Offset = "0xD8A604", VA = "0xD8A604")]
		public void SendGameScore()
		{
		}

		[Token(Token = "0x60019A3")]
		[Address(RVA = "0xD8A6E4", Offset = "0xD8A6E4", VA = "0xD8A6E4")]
		[AsyncStateMachine(typeof(<InitializeLoadSaveData>d__41))]
		private Task InitializeLoadSaveData()
		{
			return null;
		}

		[Token(Token = "0x60019A4")]
		[Address(RVA = "0xD8A7B4", Offset = "0xD8A7B4", VA = "0xD8A7B4")]
		public bool IsTimeAttack()
		{
			return default(bool);
		}

		[Token(Token = "0x60019A5")]
		[Address(RVA = "0xD8A7BC", Offset = "0xD8A7BC", VA = "0xD8A7BC")]
		public bool IsZombieMission()
		{
			return default(bool);
		}

		[Token(Token = "0x60019A6")]
		[Address(RVA = "0xD8A7C4", Offset = "0xD8A7C4", VA = "0xD8A7C4")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60019A7")]
		[Address(RVA = "0xD8A82C", Offset = "0xD8A82C", VA = "0xD8A82C")]
		public int getSkillLifes()
		{
			return default(int);
		}

		[Token(Token = "0x60019A8")]
		[Address(RVA = "0xD8A8E4", Offset = "0xD8A8E4", VA = "0xD8A8E4")]
		public void startGame()
		{
		}

		[Token(Token = "0x60019A9")]
		[Address(RVA = "0xD8B04C", Offset = "0xD8B04C", VA = "0xD8B04C")]
		private void setBulletTimeAudioGroups()
		{
		}

		[Token(Token = "0x60019AA")]
		[Address(RVA = "0xD81F98", Offset = "0xD81F98", VA = "0xD81F98")]
		public bool isInMainMenu()
		{
			return default(bool);
		}

		[Token(Token = "0x60019AB")]
		[Address(RVA = "0xD8B56C", Offset = "0xD8B56C", VA = "0xD8B56C")]
		private void OnFirstSceneLoaded()
		{
		}

		[Token(Token = "0x60019AC")]
		[Address(RVA = "0xD8B58C", Offset = "0xD8B58C", VA = "0xD8B58C")]
		[IteratorStateMachine(typeof(<startGameCoroutine>d__50))]
		private IEnumerator startGameCoroutine()
		{
			return null;
		}

		[Token(Token = "0x60019AD")]
		[Address(RVA = "0xD8B628", Offset = "0xD8B628", VA = "0xD8B628")]
		[IteratorStateMachine(typeof(<waitForNetworkStartComplete>d__51))]
		private IEnumerator waitForNetworkStartComplete()
		{
			return null;
		}

		[Token(Token = "0x60019AE")]
		[Address(RVA = "0xD8B6B0", Offset = "0xD8B6B0", VA = "0xD8B6B0")]
		public void SetDificulty(Difficulty difficulty)
		{
		}

		[Token(Token = "0x60019AF")]
		[Address(RVA = "0xD8A890", Offset = "0xD8A890", VA = "0xD8A890")]
		public Difficulty GetDifficulty()
		{
			return default(Difficulty);
		}

		[Token(Token = "0x60019B0")]
		[Address(RVA = "0xD8B978", Offset = "0xD8B978", VA = "0xD8B978")]
		public void catchDefaultWeapon()
		{
		}

		[Token(Token = "0x60019B1")]
		[Address(RVA = "0xD8B9FC", Offset = "0xD8B9FC", VA = "0xD8B9FC")]
		public void DisableContinue(bool bDisable)
		{
		}

		[Token(Token = "0x60019B2")]
		[Address(RVA = "0xD8BA1C", Offset = "0xD8BA1C", VA = "0xD8BA1C")]
		public void ContinueReset(bool bContinueReset)
		{
		}

		[Token(Token = "0x60019B3")]
		[Address(RVA = "0xD8BA3C", Offset = "0xD8BA3C", VA = "0xD8BA3C")]
		[IteratorStateMachine(typeof(<waitForOnlinePlayerId>d__57))]
		private IEnumerator waitForOnlinePlayerId()
		{
			return null;
		}

		[Token(Token = "0x60019B4")]
		[Address(RVA = "0xD8BAD8", Offset = "0xD8BAD8", VA = "0xD8BAD8")]
		[IteratorStateMachine(typeof(<waitForOnlinePlayers>d__58))]
		private IEnumerator waitForOnlinePlayers()
		{
			return null;
		}

		[Token(Token = "0x60019B5")]
		[Address(RVA = "0xD8BB60", Offset = "0xD8BB60", VA = "0xD8BB60")]
		public int GetLifes()
		{
			return default(int);
		}

		[Token(Token = "0x60019B6")]
		[Address(RVA = "0xD8BBEC", Offset = "0xD8BBEC", VA = "0xD8BBEC")]
		public PlayerHit GetPlayer()
		{
			return null;
		}

		[Token(Token = "0x60019B7")]
		[Address(RVA = "0xD8BC6C", Offset = "0xD8BC6C", VA = "0xD8BC6C")]
		public Transform getTransformFromCache(string strName)
		{
			return null;
		}

		[Token(Token = "0x60019B8")]
		[Address(RVA = "0xD8BF84", Offset = "0xD8BF84", VA = "0xD8BF84")]
		public void removeTransformFromCache(string strName)
		{
		}

		[Token(Token = "0x60019B9")]
		[Address(RVA = "0xD8BFDC", Offset = "0xD8BFDC", VA = "0xD8BFDC")]
		public void removeTransformFromCache(Transform t)
		{
		}

		[Token(Token = "0x60019BA")]
		[Address(RVA = "0xD8C048", Offset = "0xD8C048", VA = "0xD8C048")]
		public void addTransformToCache(Transform t)
		{
		}

		[Token(Token = "0x60019BB")]
		[Address(RVA = "0xD8C168", Offset = "0xD8C168", VA = "0xD8C168")]
		public void setPlayerTransform(Transform playerTransform)
		{
		}

		[Token(Token = "0x60019BC")]
		[Address(RVA = "0xD8C3F4", Offset = "0xD8C3F4", VA = "0xD8C3F4")]
		public void setPlayerTransformForced(Transform playerTransform)
		{
		}

		[Token(Token = "0x60019BD")]
		[Address(RVA = "0xD8C6B0", Offset = "0xD8C6B0", VA = "0xD8C6B0")]
		public Transform getPlayerPosition(string position)
		{
			return null;
		}

		[Token(Token = "0x60019BE")]
		[Address(RVA = "0xD8C6EC", Offset = "0xD8C6EC", VA = "0xD8C6EC")]
		public Transform getPlayerPosition(Transform parent, [Optional] string position)
		{
			return null;
		}

		[Token(Token = "0x60019BF")]
		[Address(RVA = "0xD8C954", Offset = "0xD8C954", VA = "0xD8C954")]
		public void lockPlayerOutOfPlayArea(bool disableFire)
		{
		}

		[Token(Token = "0x60019C0")]
		[Address(RVA = "0xD8C9D0", Offset = "0xD8C9D0", VA = "0xD8C9D0")]
		public void lockPlayer(bool disableFire, bool unvulnerable)
		{
		}

		[Token(Token = "0x60019C1")]
		[Address(RVA = "0xD8CB80", Offset = "0xD8CB80", VA = "0xD8CB80")]
		public void setTimeScale(float fTime)
		{
		}

		[Token(Token = "0x60019C2")]
		[Address(RVA = "0xD8CC04", Offset = "0xD8CC04", VA = "0xD8CC04")]
		public void startBulletTime(bool bShowBulletTimeScreen = true)
		{
		}

		[Token(Token = "0x60019C3")]
		[Address(RVA = "0xD8CD10", Offset = "0xD8CD10", VA = "0xD8CD10")]
		public void stopBulletTime()
		{
		}

		[Token(Token = "0x60019C4")]
		[Address(RVA = "0xD8CE5C", Offset = "0xD8CE5C", VA = "0xD8CE5C")]
		public void startBulletTime(float bulletTime, bool showBulletTimeScreen, bool bRemoteCall = false)
		{
		}

		[Token(Token = "0x60019C5")]
		[Address(RVA = "0xD8CDD8", Offset = "0xD8CDD8", VA = "0xD8CDD8")]
		[IteratorStateMachine(typeof(<stopBulletTimeCoroutine>d__78))]
		private IEnumerator stopBulletTimeCoroutine(float bulletTime)
		{
			return null;
		}

		[Token(Token = "0x60019C6")]
		[Address(RVA = "0xD8D048", Offset = "0xD8D048", VA = "0xD8D048")]
		public void ResetBulletTime()
		{
		}

		[Token(Token = "0x60019C7")]
		[Address(RVA = "0xD8D108", Offset = "0xD8D108", VA = "0xD8D108")]
		public void ChangePlayerPosition([Optional] string position)
		{
		}

		[Token(Token = "0x60019C8")]
		[Address(RVA = "0xD8D3A4", Offset = "0xD8D3A4", VA = "0xD8D3A4")]
		public Transform getPlayerPosition()
		{
			return null;
		}

		[Token(Token = "0x60019C9")]
		[Address(RVA = "0xD8D2DC", Offset = "0xD8D2DC", VA = "0xD8D2DC")]
		public void ShowBlackScreen(bool bFade = true, bool bForce = false)
		{
		}

		[Token(Token = "0x60019CA")]
		[Address(RVA = "0xD8D3D4", Offset = "0xD8D3D4", VA = "0xD8D3D4")]
		public void HideBlackScreen(bool bFade = true)
		{
		}

		[Token(Token = "0x60019CB")]
		[Address(RVA = "0xD8D3FC", Offset = "0xD8D3FC", VA = "0xD8D3FC")]
		public void ShowTimeScreen(bool fade = true)
		{
		}

		[Token(Token = "0x60019CC")]
		[Address(RVA = "0xD8D43C", Offset = "0xD8D43C", VA = "0xD8D43C")]
		public void HideTimeScreen(bool bFade = true)
		{
		}

		[Token(Token = "0x60019CD")]
		[Address(RVA = "0xD8D464", Offset = "0xD8D464", VA = "0xD8D464")]
		public void showReadySetGo(UnityAction onShow, bool playerHealed)
		{
		}

		[Token(Token = "0x60019CE")]
		[Address(RVA = "0xD8D8F8", Offset = "0xD8D8F8", VA = "0xD8D8F8")]
		public void hideReadySetGo()
		{
		}

		[Token(Token = "0x60019CF")]
		[Address(RVA = "0xD8D954", Offset = "0xD8D954", VA = "0xD8D954")]
		public bool IsGameFinished()
		{
			return default(bool);
		}

		[Token(Token = "0x60019D0")]
		[Address(RVA = "0xD8D95C", Offset = "0xD8D95C", VA = "0xD8D95C")]
		public void FinishGame(bool success)
		{
		}

		[Token(Token = "0x60019D1")]
		[Address(RVA = "0xD8DD4C", Offset = "0xD8DD4C", VA = "0xD8DD4C")]
		public void SetSoundConfiguration(SoundConfiguration config, float time = 0.1f)
		{
		}

		[Token(Token = "0x60019D2")]
		[Address(RVA = "0xD8DDE4", Offset = "0xD8DDE4", VA = "0xD8DDE4")]
		public void PlayerHealed(int iLifes)
		{
		}

		[Token(Token = "0x60019D3")]
		[Address(RVA = "0xD8E10C", Offset = "0xD8E10C", VA = "0xD8E10C")]
		public void ShowReadySetGoBackToAction()
		{
		}

		[Token(Token = "0x60019D4")]
		[Address(RVA = "0xD8E220", Offset = "0xD8E220", VA = "0xD8E220")]
		public float getTimeRemaining()
		{
			return default(float);
		}

		[Token(Token = "0x60019D5")]
		[Address(RVA = "0xD8E29C", Offset = "0xD8E29C", VA = "0xD8E29C")]
		private float getTimePlayed()
		{
			return default(float);
		}

		[Token(Token = "0x60019D6")]
		[Address(RVA = "0xD8E2CC", Offset = "0xD8E2CC", VA = "0xD8E2CC")]
		public float getTotalTimePlayed()
		{
			return default(float);
		}

		[Token(Token = "0x60019D7")]
		[Address(RVA = "0xD8E2D4", Offset = "0xD8E2D4", VA = "0xD8E2D4")]
		public void RestartCountdownTime(float time)
		{
		}

		[Token(Token = "0x60019D8")]
		[Address(RVA = "0xD8DA9C", Offset = "0xD8DA9C", VA = "0xD8DA9C")]
		public void StopTime(bool forceStopInBackground = true)
		{
		}

		[Token(Token = "0x60019D9")]
		[Address(RVA = "0xD8D788", Offset = "0xD8D788", VA = "0xD8D788")]
		public bool IsTimeStopped()
		{
			return default(bool);
		}

		[Token(Token = "0x60019DA")]
		[Address(RVA = "0xD8E43C", Offset = "0xD8E43C", VA = "0xD8E43C")]
		public void SetBossBattle(bool bBattle, string title = "BOSS BATTLE")
		{
		}

		[Token(Token = "0x60019DB")]
		[Address(RVA = "0xD8E450", Offset = "0xD8E450", VA = "0xD8E450")]
		public bool IsBossBattle()
		{
			return default(bool);
		}

		[Token(Token = "0x60019DC")]
		[Address(RVA = "0xD8E458", Offset = "0xD8E458", VA = "0xD8E458")]
		public string GetBossBattleText()
		{
			return null;
		}

		[Token(Token = "0x60019DD")]
		[Address(RVA = "0xD8DC50", Offset = "0xD8DC50", VA = "0xD8DC50")]
		private void SetTotalLocations(bool success)
		{
		}

		[Token(Token = "0x60019DE")]
		[Address(RVA = "0xD8D798", Offset = "0xD8D798", VA = "0xD8D798")]
		public void ResumeTime()
		{
		}

		[Token(Token = "0x60019DF")]
		[Address(RVA = "0xD8E4D4", Offset = "0xD8E4D4", VA = "0xD8E4D4")]
		private void setInitTime()
		{
		}

		[Token(Token = "0x60019E0")]
		[Address(RVA = "0xD8E388", Offset = "0xD8E388", VA = "0xD8E388")]
		public void SetTime(float missionTime)
		{
		}

		[Token(Token = "0x60019E1")]
		[Address(RVA = "0xD8E54C", Offset = "0xD8E54C", VA = "0xD8E54C")]
		public void AdjustTime(float timeRemaining)
		{
		}

		[Token(Token = "0x60019E2")]
		[Address(RVA = "0xD8E670", Offset = "0xD8E670", VA = "0xD8E670")]
		public void AdjustNetworkTime(float timeRemaining)
		{
		}

		[Token(Token = "0x60019E3")]
		[Address(RVA = "0xD8E460", Offset = "0xD8E460", VA = "0xD8E460")]
		[IteratorStateMachine(typeof(<finalCountDownCoroutine>d__110))]
		private IEnumerator finalCountDownCoroutine()
		{
			return null;
		}

		[Token(Token = "0x60019E4")]
		[Address(RVA = "0xD8E840", Offset = "0xD8E840", VA = "0xD8E840")]
		public bool IsTimeOut()
		{
			return default(bool);
		}

		[Token(Token = "0x60019E5")]
		[Address(RVA = "0xD8E6B4", Offset = "0xD8E6B4", VA = "0xD8E6B4")]
		private void timeReached()
		{
		}

		[Token(Token = "0x60019E6")]
		[Address(RVA = "0xD8E848", Offset = "0xD8E848", VA = "0xD8E848")]
		public void AddTime(float seconds)
		{
		}

		[Token(Token = "0x60019E7")]
		[Address(RVA = "0xD8EA38", Offset = "0xD8EA38", VA = "0xD8EA38")]
		public void TicTac(bool enable)
		{
		}

		[Token(Token = "0x60019E8")]
		[Address(RVA = "0xD8EA98", Offset = "0xD8EA98", VA = "0xD8EA98")]
		[IteratorStateMachine(typeof(<TicTacCoroutine>d__115))]
		private IEnumerator TicTacCoroutine(bool enable)
		{
			return null;
		}

		[Token(Token = "0x60019E9")]
		[Address(RVA = "0xD8EB48", Offset = "0xD8EB48", VA = "0xD8EB48")]
		public void SetMissionAccomplished(MissionAccomplished missionAccomplished)
		{
		}

		[Token(Token = "0x60019EA")]
		[Address(RVA = "0xD8EB50", Offset = "0xD8EB50", VA = "0xD8EB50")]
		public void SetLocation(int locationId)
		{
		}

		[Token(Token = "0x60019EB")]
		[Address(RVA = "0xD8EC90", Offset = "0xD8EC90", VA = "0xD8EC90")]
		[IteratorStateMachine(typeof(<SetLocationCoroutine>d__119))]
		private IEnumerator SetLocationCoroutine(LocationController location, float initTime)
		{
			return null;
		}

		[Token(Token = "0x60019EC")]
		[Address(RVA = "0xD8ED58", Offset = "0xD8ED58", VA = "0xD8ED58")]
		public LocationController GetLocation(string locationName)
		{
			return null;
		}

		[Token(Token = "0x60019ED")]
		[Address(RVA = "0xD8EDE0", Offset = "0xD8EDE0", VA = "0xD8EDE0")]
		public LocationController GetLocation(int locationId)
		{
			return null;
		}

		[Token(Token = "0x60019EE")]
		[Address(RVA = "0xD8EE30", Offset = "0xD8EE30", VA = "0xD8EE30")]
		public LocationController[] GetLocations()
		{
			return null;
		}

		[Token(Token = "0x60019EF")]
		[Address(RVA = "0xD8EE38", Offset = "0xD8EE38", VA = "0xD8EE38")]
		private static void setLanguageSettings()
		{
		}

		[Token(Token = "0x60019F0")]
		[Address(RVA = "0xD8EF0C", Offset = "0xD8EF0C", VA = "0xD8EF0C")]
		private static void InitGame()
		{
		}

		[Token(Token = "0x60019F1")]
		[Address(RVA = "0xD8F524", Offset = "0xD8F524", VA = "0xD8F524")]
		public void LoadGameSettings()
		{
		}

		[Token(Token = "0x60019F2")]
		[Address(RVA = "0xD8F600", Offset = "0xD8F600", VA = "0xD8F600")]
		private void LoadGameData()
		{
		}

		[Token(Token = "0x60019F3")]
		[Address(RVA = "0xD8F6DC", Offset = "0xD8F6DC", VA = "0xD8F6DC")]
		private void OnLoadGameData(LoadSaveData.LoadSaveResult result, CrisisVRigade2_LoadSaveData.GlobalStatsData globalStats)
		{
		}

		[Token(Token = "0x60019F4")]
		[Address(RVA = "0xD8F7C0", Offset = "0xD8F7C0", VA = "0xD8F7C0")]
		private void OnLoadGameSettings(LoadSaveData.LoadSaveResult result, CrisisVRigade2_LoadSaveData.SettingsData settings)
		{
		}

		[Token(Token = "0x60019F5")]
		[Address(RVA = "0xD8F6E4", Offset = "0xD8F6E4", VA = "0xD8F6E4")]
		[AsyncStateMachine(typeof(<MergeGameDataWithServer>d__129))]
		private void MergeGameDataWithServer(CrisisVRigade2_LoadSaveData.GlobalStatsData globalStats)
		{
		}

		[Token(Token = "0x60019F6")]
		[Address(RVA = "0xD8FC04", Offset = "0xD8FC04", VA = "0xD8FC04")]
		[AsyncStateMachine(typeof(<AddPendingResults>d__130))]
		public Task<bool> AddPendingResults([Optional] CrisisVRigade2_LoadSaveData.GlobalStatsData globalStats)
		{
			return null;
		}

		[Token(Token = "0x60019F7")]
		[Address(RVA = "0xD8F7C4", Offset = "0xD8F7C4", VA = "0xD8F7C4")]
		private void OnLoadGameSettings2(LoadSaveData.LoadSaveResult result, CrisisVRigade2_LoadSaveData.SettingsData settings)
		{
		}

		[Token(Token = "0x60019F8")]
		[Address(RVA = "0xD8FD94", Offset = "0xD8FD94", VA = "0xD8FD94")]
		private void OnLoadGameData2(LoadSaveData.LoadSaveResult result, CrisisVRigade2_LoadSaveData.GlobalStatsData globalStats)
		{
		}

		[Token(Token = "0x60019F9")]
		[Address(RVA = "0xD8FF1C", Offset = "0xD8FF1C", VA = "0xD8FF1C")]
		public void SaveGameSettings()
		{
		}

		[Token(Token = "0x60019FA")]
		[Address(RVA = "0xD899B8", Offset = "0xD899B8", VA = "0xD899B8")]
		public void SaveGameData()
		{
		}

		[Token(Token = "0x60019FB")]
		[Address(RVA = "0xD8FD28", Offset = "0xD8FD28", VA = "0xD8FD28")]
		private static int GetSystemLanguage()
		{
			return default(int);
		}

		[Token(Token = "0x60019FC")]
		[Address(RVA = "0xD8FFD4", Offset = "0xD8FFD4", VA = "0xD8FFD4")]
		public void ShowSolidBlackScreen()
		{
		}

		[Token(Token = "0x60019FD")]
		[Address(RVA = "0xD903B8", Offset = "0xD903B8", VA = "0xD903B8")]
		public bool IsSolidBlackScreen()
		{
			return default(bool);
		}

		[Token(Token = "0x60019FE")]
		[Address(RVA = "0xD903C0", Offset = "0xD903C0", VA = "0xD903C0")]
		public void HideSolidBlackScreen()
		{
		}

		[Token(Token = "0x60019FF")]
		[Address(RVA = "0xD9046C", Offset = "0xD9046C", VA = "0xD9046C")]
		public int GetMaxDeadBodies()
		{
			return default(int);
		}

		[Token(Token = "0x6001A00")]
		[Address(RVA = "0xD90538", Offset = "0xD90538", VA = "0xD90538")]
		public GameManager()
		{
		}
	}
	[Token(Token = "0x2000455")]
	public class GestureManager : MonoBehaviour
	{
		[Token(Token = "0x2000456")]
		public class GestureSlot
		{
			[Token(Token = "0x4001861")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Transform slotTransform;

			[Token(Token = "0x4001862")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public GestureOption gesture;

			[Token(Token = "0x6001A4B")]
			[Address(RVA = "0xD952DC", Offset = "0xD952DC", VA = "0xD952DC")]
			public GestureSlot(Transform slotTransform)
			{
			}

			[Token(Token = "0x6001A4C")]
			[Address(RVA = "0xD95950", Offset = "0xD95950", VA = "0xD95950")]
			public void AddGesture(GestureOption gesture)
			{
			}

			[Token(Token = "0x6001A4D")]
			[Address(RVA = "0xD95CF4", Offset = "0xD95CF4", VA = "0xD95CF4")]
			public void RemoveGesture()
			{
			}

			[Token(Token = "0x6001A4E")]
			[Address(RVA = "0xD95858", Offset = "0xD95858", VA = "0xD95858")]
			public bool IsAvailable()
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4001855")]
		public const string DEFAULT_GESTURE = "glove_Fist";

		[Token(Token = "0x4001856")]
		public const string DEFAULT_EQUIPPED_GESTURE = "Okey";

		[Token(Token = "0x4001857")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public SVRButtons gestureSelectionButton;

		[Token(Token = "0x4001858")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public SVRButtons gestureButton;

		[Token(Token = "0x4001859")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private GestureSlot[] slots;

		[Token(Token = "0x400185A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private GestureOption[] gestures;

		[Token(Token = "0x400185B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private GameObject gestureContainer;

		[Token(Token = "0x400185C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private GameObject gestureSlotContainer;

		[Token(Token = "0x400185D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private SVRHand hand;

		[Token(Token = "0x400185E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private SVRHandPoser handPoser;

		[Token(Token = "0x400185F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private string currentGesture;

		[Token(Token = "0x4001860")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private bool initialized;

		[Token(Token = "0x6001A43")]
		[Address(RVA = "0xD94FFC", Offset = "0xD94FFC", VA = "0xD94FFC")]
		public void Initialize()
		{
		}

		[Token(Token = "0x6001A44")]
		[Address(RVA = "0xD95598", Offset = "0xD95598", VA = "0xD95598")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001A45")]
		[Address(RVA = "0xD955E0", Offset = "0xD955E0", VA = "0xD955E0")]
		private void Update()
		{
		}

		[Token(Token = "0x6001A46")]
		[Address(RVA = "0xD9530C", Offset = "0xD9530C", VA = "0xD9530C")]
		public void AddGesture(string poseName)
		{
		}

		[Token(Token = "0x6001A47")]
		[Address(RVA = "0xD95AB8", Offset = "0xD95AB8", VA = "0xD95AB8")]
		public void RemoveGesture(string poseName)
		{
		}

		[Token(Token = "0x6001A48")]
		[Address(RVA = "0xD95D00", Offset = "0xD95D00", VA = "0xD95D00")]
		private void SelectGesture(string poseName)
		{
		}

		[Token(Token = "0x6001A49")]
		[Address(RVA = "0xD958B8", Offset = "0xD958B8", VA = "0xD958B8")]
		private GestureOption GetGestureOption(string poseName)
		{
			return null;
		}

		[Token(Token = "0x6001A4A")]
		[Address(RVA = "0xD95E60", Offset = "0xD95E60", VA = "0xD95E60")]
		public GestureManager()
		{
		}
	}
	[Token(Token = "0x2000457")]
	public class HelicopterAnimation : AnimationEventHandler
	{
		[Token(Token = "0x4001863")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Animation helicopterAnimation;

		[Token(Token = "0x4001864")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public AudioSource animationSound;

		[Token(Token = "0x4001865")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public AudioSource swatRadio;

		[Token(Token = "0x4001866")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public GameObject missile;

		[Token(Token = "0x4001867")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public GameObject impactFX;

		[Token(Token = "0x4001868")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public GameObject smokeFX;

		[Token(Token = "0x4001869")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public int locationId;

		[Token(Token = "0x6001A4F")]
		[Address(RVA = "0xD95EB8", Offset = "0xD95EB8", VA = "0xD95EB8")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001A50")]
		[Address(RVA = "0xD95FE8", Offset = "0xD95FE8", VA = "0xD95FE8")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001A51")]
		[Address(RVA = "0xD96118", Offset = "0xD96118", VA = "0xD96118")]
		public void OnLocationInitialized(int locationId)
		{
		}

		[Token(Token = "0x6001A52")]
		[Address(RVA = "0xD962C0", Offset = "0xD962C0", VA = "0xD962C0")]
		public void OnLocationActivated(int locationId)
		{
		}

		[Token(Token = "0x6001A53")]
		[Address(RVA = "0xD96414", Offset = "0xD96414", VA = "0xD96414", Slot = "6")]
		public override void OnEventString(string e)
		{
		}

		[Token(Token = "0x6001A54")]
		[Address(RVA = "0xD966D4", Offset = "0xD966D4", VA = "0xD966D4")]
		private void ShowReadySetGo()
		{
		}

		[Token(Token = "0x6001A55")]
		[Address(RVA = "0xD96764", Offset = "0xD96764", VA = "0xD96764")]
		private void DisableAnimation()
		{
		}

		[Token(Token = "0x6001A56")]
		[Address(RVA = "0xD96790", Offset = "0xD96790", VA = "0xD96790")]
		public HelicopterAnimation()
		{
		}
	}
	[Token(Token = "0x2000458")]
	public class InteractableBonus : Bonus
	{
		[Token(Token = "0x400186A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public SVRInteractable interactable;

		[Token(Token = "0x400186B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		protected Collider bonusCollider;

		[Token(Token = "0x400186C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		protected Transform icon;

		[Token(Token = "0x400186D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		protected Transform iconRing;

		[Token(Token = "0x400186E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Vector3 position;

		[Token(Token = "0x400186F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private Quaternion rotation;

		[Token(Token = "0x6001A57")]
		[Address(RVA = "0xD96798", Offset = "0xD96798", VA = "0xD96798")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001A58")]
		[Address(RVA = "0xD96960", Offset = "0xD96960", VA = "0xD96960")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001A59")]
		[Address(RVA = "0xD96AC4", Offset = "0xD96AC4", VA = "0xD96AC4")]
		private void Start()
		{
		}

		[Token(Token = "0x6001A5A")]
		[Address(RVA = "0xD969C8", Offset = "0xD969C8", VA = "0xD969C8")]
		private void moveRing()
		{
		}

		[Token(Token = "0x6001A5B")]
		[Address(RVA = "0xD96AC8", Offset = "0xD96AC8", VA = "0xD96AC8", Slot = "4")]
		public override bool OnHit(Bullet bullet, Ray ray, RaycastHit hit)
		{
			return default(bool);
		}

		[Token(Token = "0x6001A5C")]
		[Address(RVA = "0xD96BE4", Offset = "0xD96BE4", VA = "0xD96BE4")]
		public void OnHit(Bullet bullet)
		{
		}

		[Token(Token = "0x6001A5D")]
		[Address(RVA = "0xD96E18", Offset = "0xD96E18", VA = "0xD96E18")]
		private void GetWeaponBonus(SVRHand hand)
		{
		}

		[Token(Token = "0x6001A5E")]
		[Address(RVA = "0xD97024", Offset = "0xD97024", VA = "0xD97024")]
		private void RecoverBonus()
		{
		}

		[Token(Token = "0x6001A5F")]
		[Address(RVA = "0xD97084", Offset = "0xD97084", VA = "0xD97084")]
		public void ShowBonusAtPosition(Vector3 position, bool bRemote = false)
		{
		}

		[Token(Token = "0x6001A60")]
		[Address(RVA = "0xD97174", Offset = "0xD97174", VA = "0xD97174", Slot = "9")]
		public override void CatchBonus(Vector3 position)
		{
		}

		[Token(Token = "0x6001A61")]
		[Address(RVA = "0xD973A0", Offset = "0xD973A0", VA = "0xD973A0")]
		private void Deactivate()
		{
		}

		[Token(Token = "0x6001A62")]
		[Address(RVA = "0xD973D0", Offset = "0xD973D0", VA = "0xD973D0")]
		private void HideBonus()
		{
		}

		[Token(Token = "0x6001A63")]
		[Address(RVA = "0xD97430", Offset = "0xD97430", VA = "0xD97430")]
		public bool IsAvailable()
		{
			return default(bool);
		}

		[Token(Token = "0x6001A64")]
		[Address(RVA = "0xD9744C", Offset = "0xD9744C", VA = "0xD9744C")]
		public InteractableBonus()
		{
		}
	}
	[Token(Token = "0x200045B")]
	public class InteractableBonusWeapon : MonoBehaviour
	{
		[Token(Token = "0x4001875")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public InteractableBonus interactableBonus;

		[Token(Token = "0x6001A6A")]
		[Address(RVA = "0xD97554", Offset = "0xD97554", VA = "0xD97554")]
		public InteractableBonusWeapon()
		{
		}
	}
	[Token(Token = "0x200045C")]
	public class ContinueButton : ItemButton
	{
		[Token(Token = "0x4001876")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x109")]
		private bool disabled;

		[Token(Token = "0x6001A6B")]
		[Address(RVA = "0xD9755C", Offset = "0xD9755C", VA = "0xD9755C", Slot = "11")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6001A6C")]
		[Address(RVA = "0xD97880", Offset = "0xD97880", VA = "0xD97880", Slot = "14")]
		protected override void setButtonDisabled(bool enabled)
		{
		}

		[Token(Token = "0x6001A6D")]
		[Address(RVA = "0xD979A8", Offset = "0xD979A8", VA = "0xD979A8", Slot = "13")]
		protected override void setButtonEnabled(bool enabled)
		{
		}

		[Token(Token = "0x6001A6E")]
		[Address(RVA = "0xD97AE0", Offset = "0xD97AE0", VA = "0xD97AE0", Slot = "15")]
		protected override void setButtonSelected(bool enabled)
		{
		}

		[Token(Token = "0x6001A6F")]
		[Address(RVA = "0xD97C00", Offset = "0xD97C00", VA = "0xD97C00", Slot = "16")]
		public override bool OnHoverEnter(SVRLaserPointer pointer)
		{
			return default(bool);
		}

		[Token(Token = "0x6001A70")]
		[Address(RVA = "0xD97CF4", Offset = "0xD97CF4", VA = "0xD97CF4", Slot = "17")]
		public override bool OnHoverExit(SVRLaserPointer pointer)
		{
			return default(bool);
		}

		[Token(Token = "0x6001A71")]
		[Address(RVA = "0xD97DB8", Offset = "0xD97DB8", VA = "0xD97DB8")]
		public void DisableButton(bool disable)
		{
		}

		[Token(Token = "0x6001A72")]
		[Address(RVA = "0xD97ED0", Offset = "0xD97ED0", VA = "0xD97ED0", Slot = "12")]
		public override void SetButtonState(UIButtonState buttonState, bool force = false)
		{
		}

		[Token(Token = "0x6001A73")]
		[Address(RVA = "0xD98014", Offset = "0xD98014", VA = "0xD98014")]
		public void SetPrice(int price)
		{
		}

		[Token(Token = "0x6001A74")]
		[Address(RVA = "0xD980D0", Offset = "0xD980D0", VA = "0xD980D0", Slot = "4")]
		public override bool OnHit(Bullet bullet, Ray ray, RaycastHit hit)
		{
			return default(bool);
		}

		[Token(Token = "0x6001A75")]
		[Address(RVA = "0xD981D0", Offset = "0xD981D0", VA = "0xD981D0")]
		public ContinueButton()
		{
		}
	}
	[Token(Token = "0x200045D")]
	public class ItemButton : UIButton
	{
		[Token(Token = "0x4001877")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public string itemName;

		[Token(Token = "0x4001878")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public ItemManager.Item item;

		[Token(Token = "0x4001879")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		public ItemManager.ItemGroup itemGroup;

		[Token(Token = "0x400187A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		protected ItemMenu itemMenu;

		[Token(Token = "0x400187B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		protected Transform buttonModel;

		[Token(Token = "0x400187C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		protected Transform priceContainer;

		[Token(Token = "0x400187D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		protected TextMeshPro quantityText;

		[Token(Token = "0x400187E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		protected bool locked;

		[Token(Token = "0x400187F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		public SVREvent OnItemEquipped;

		[Token(Token = "0x4001880")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		public bool animate;

		[Token(Token = "0x6001A76")]
		[Address(RVA = "0xD9758C", Offset = "0xD9758C", VA = "0xD9758C", Slot = "11")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6001A77")]
		[Address(RVA = "0xD98404", Offset = "0xD98404", VA = "0xD98404")]
		private void ItemManagerInitialized()
		{
		}

		[Token(Token = "0x6001A78")]
		[Address(RVA = "0xD981F0", Offset = "0xD981F0", VA = "0xD981F0")]
		private void Init()
		{
		}

		[Token(Token = "0x6001A79")]
		[Address(RVA = "0xD98124", Offset = "0xD98124", VA = "0xD98124", Slot = "4")]
		public override bool OnHit(Bullet bullet, Ray ray, RaycastHit hit)
		{
			return default(bool);
		}

		[Token(Token = "0x6001A7A")]
		[Address(RVA = "0xD97EE4", Offset = "0xD97EE4", VA = "0xD97EE4", Slot = "12")]
		public override void SetButtonState(UIButtonState buttonState, bool force = false)
		{
		}

		[Token(Token = "0x6001A7B")]
		[Address(RVA = "0xD97954", Offset = "0xD97954", VA = "0xD97954", Slot = "14")]
		protected override void setButtonDisabled(bool enabled)
		{
		}

		[Token(Token = "0x6001A7C")]
		[Address(RVA = "0xD97A7C", Offset = "0xD97A7C", VA = "0xD97A7C", Slot = "13")]
		protected override void setButtonEnabled(bool enabled)
		{
		}

		[Token(Token = "0x6001A7D")]
		[Address(RVA = "0xD97BB4", Offset = "0xD97BB4", VA = "0xD97BB4", Slot = "15")]
		protected override void setButtonSelected(bool enabled)
		{
		}

		[Token(Token = "0x6001A7E")]
		[Address(RVA = "0xD98840", Offset = "0xD98840", VA = "0xD98840")]
		public bool IsLocked()
		{
			return default(bool);
		}

		[Token(Token = "0x6001A7F")]
		[Address(RVA = "0xD98848", Offset = "0xD98848", VA = "0xD98848")]
		public void LockItem()
		{
		}

		[Token(Token = "0x6001A80")]
		[Address(RVA = "0xD98870", Offset = "0xD98870", VA = "0xD98870")]
		public void UnlockItem()
		{
		}

		[Token(Token = "0x6001A81")]
		[Address(RVA = "0xD98888", Offset = "0xD98888", VA = "0xD98888", Slot = "16")]
		public override bool OnHoverEnter(SVRLaserPointer pointer)
		{
			return default(bool);
		}

		[Token(Token = "0x6001A82")]
		[Address(RVA = "0xD989E4", Offset = "0xD989E4", VA = "0xD989E4", Slot = "17")]
		public override bool OnHoverExit(SVRLaserPointer pointer)
		{
			return default(bool);
		}

		[Token(Token = "0x6001A83")]
		[Address(RVA = "0xD9874C", Offset = "0xD9874C", VA = "0xD9874C")]
		public void UpdateItem(bool forceUpdate = false)
		{
		}

		[Token(Token = "0x6001A84")]
		[Address(RVA = "0xD985B4", Offset = "0xD985B4", VA = "0xD985B4")]
		private void UpdateQuantity()
		{
		}

		[Token(Token = "0x6001A85")]
		[Address(RVA = "0xD97848", Offset = "0xD97848", VA = "0xD97848")]
		public void ShowQuantity(bool show)
		{
		}

		[Token(Token = "0x6001A86")]
		[Address(RVA = "0xD97810", Offset = "0xD97810", VA = "0xD97810")]
		public void ShowPrice(bool show)
		{
		}

		[Token(Token = "0x6001A87")]
		[Address(RVA = "0xD98B60", Offset = "0xD98B60", VA = "0xD98B60")]
		public bool HasPrice()
		{
			return default(bool);
		}

		[Token(Token = "0x6001A88")]
		[Address(RVA = "0xD981E0", Offset = "0xD981E0", VA = "0xD981E0")]
		public ItemButton()
		{
		}
	}
	[Token(Token = "0x200045E")]
	public class ItemButton_DualWield : ItemButton
	{
		[Token(Token = "0x4001881")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		public GameObject[] singleMode;

		[Token(Token = "0x4001882")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		public GameObject[] dualMode;

		[Token(Token = "0x6001A89")]
		[Address(RVA = "0xD98BF4", Offset = "0xD98BF4", VA = "0xD98BF4", Slot = "14")]
		protected override void setButtonDisabled(bool enabled)
		{
		}

		[Token(Token = "0x6001A8A")]
		[Address(RVA = "0xD98CF4", Offset = "0xD98CF4", VA = "0xD98CF4", Slot = "13")]
		protected override void setButtonEnabled(bool enabled)
		{
		}

		[Token(Token = "0x6001A8B")]
		[Address(RVA = "0xD98D30", Offset = "0xD98D30", VA = "0xD98D30", Slot = "15")]
		protected override void setButtonSelected(bool enabled)
		{
		}

		[Token(Token = "0x6001A8C")]
		[Address(RVA = "0xD98C30", Offset = "0xD98C30", VA = "0xD98C30")]
		private void SetDualWield(bool enable)
		{
		}

		[Token(Token = "0x6001A8D")]
		[Address(RVA = "0xD98D6C", Offset = "0xD98D6C", VA = "0xD98D6C")]
		public ItemButton_DualWield()
		{
		}
	}
	[Token(Token = "0x200045F")]
	public class ItemButton_Refund : UIButton
	{
		[Token(Token = "0x4001883")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private ItemMenu itemMenu;

		[Token(Token = "0x6001A8E")]
		[Address(RVA = "0xD98D7C", Offset = "0xD98D7C", VA = "0xD98D7C", Slot = "11")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6001A8F")]
		[Address(RVA = "0xD98DE0", Offset = "0xD98DE0", VA = "0xD98DE0", Slot = "4")]
		public override bool OnHit(Bullet bullet, Ray ray, RaycastHit hit)
		{
			return default(bool);
		}

		[Token(Token = "0x6001A90")]
		[Address(RVA = "0xD99050", Offset = "0xD99050", VA = "0xD99050")]
		public ItemButton_Refund()
		{
		}
	}
	[Token(Token = "0x2000460")]
	public static class ItemManager
	{
		[Serializable]
		[Token(Token = "0x2000461")]
		public class ItemGroup
		{
			[Token(Token = "0x17000162")]
			public int MaxItems
			{
				[Token(Token = "0x6001AAC")]
				[Address(RVA = "0xD9C034", Offset = "0xD9C034", VA = "0xD9C034")]
				[CompilerGenerated]
				get
				{
					return default(int);
				}
				[Token(Token = "0x6001AAD")]
				[Address(RVA = "0xD9C03C", Offset = "0xD9C03C", VA = "0xD9C03C")]
				[CompilerGenerated]
				set
				{
				}
			}

			[Token(Token = "0x17000163")]
			public List<string> Items
			{
				[Token(Token = "0x6001AAE")]
				[Address(RVA = "0xD9C044", Offset = "0xD9C044", VA = "0xD9C044")]
				[CompilerGenerated]
				get
				{
					return null;
				}
				[Token(Token = "0x6001AAF")]
				[Address(RVA = "0xD9C04C", Offset = "0xD9C04C", VA = "0xD9C04C")]
				[CompilerGenerated]
				set
				{
				}
			}

			[Token(Token = "0x6001AB0")]
			[Address(RVA = "0xD9C054", Offset = "0xD9C054", VA = "0xD9C054")]
			public ItemGroup()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000462")]
		public class Item
		{
			[Token(Token = "0x17000164")]
			public string ItemGroup
			{
				[Token(Token = "0x6001AB1")]
				[Address(RVA = "0xD9C05C", Offset = "0xD9C05C", VA = "0xD9C05C")]
				[CompilerGenerated]
				get
				{
					return null;
				}
				[Token(Token = "0x6001AB2")]
				[Address(RVA = "0xD9C064", Offset = "0xD9C064", VA = "0xD9C064")]
				[CompilerGenerated]
				set
				{
				}
			}

			[Token(Token = "0x17000165")]
			public bool Consumable
			{
				[Token(Token = "0x6001AB3")]
				[Address(RVA = "0xD9C06C", Offset = "0xD9C06C", VA = "0xD9C06C")]
				[CompilerGenerated]
				get
				{
					return default(bool);
				}
				[Token(Token = "0x6001AB4")]
				[Address(RVA = "0xD9C074", Offset = "0xD9C074", VA = "0xD9C074")]
				[CompilerGenerated]
				set
				{
				}
			}

			[Token(Token = "0x17000166")]
			public bool Selected
			{
				[Token(Token = "0x6001AB5")]
				[Address(RVA = "0xD9C080", Offset = "0xD9C080", VA = "0xD9C080")]
				[CompilerGenerated]
				get
				{
					return default(bool);
				}
				[Token(Token = "0x6001AB6")]
				[Address(RVA = "0xD9C088", Offset = "0xD9C088", VA = "0xD9C088")]
				[CompilerGenerated]
				set
				{
				}
			}

			[Token(Token = "0x17000167")]
			public int Units
			{
				[Token(Token = "0x6001AB7")]
				[Address(RVA = "0xD9C094", Offset = "0xD9C094", VA = "0xD9C094")]
				[CompilerGenerated]
				get
				{
					return default(int);
				}
				[Token(Token = "0x6001AB8")]
				[Address(RVA = "0xD9C09C", Offset = "0xD9C09C", VA = "0xD9C09C")]
				[CompilerGenerated]
				set
				{
				}
			}

			[Token(Token = "0x17000168")]
			public int MaxUnits
			{
				[Token(Token = "0x6001AB9")]
				[Address(RVA = "0xD9C0A4", Offset = "0xD9C0A4", VA = "0xD9C0A4")]
				[CompilerGenerated]
				get
				{
					return default(int);
				}
				[Token(Token = "0x6001ABA")]
				[Address(RVA = "0xD9C0AC", Offset = "0xD9C0AC", VA = "0xD9C0AC")]
				[CompilerGenerated]
				set
				{
				}
			}

			[Token(Token = "0x17000169")]
			public int Price
			{
				[Token(Token = "0x6001ABB")]
				[Address(RVA = "0xD9C0B4", Offset = "0xD9C0B4", VA = "0xD9C0B4")]
				[CompilerGenerated]
				get
				{
					return default(int);
				}
				[Token(Token = "0x6001ABC")]
				[Address(RVA = "0xD9C0BC", Offset = "0xD9C0BC", VA = "0xD9C0BC")]
				[CompilerGenerated]
				set
				{
				}
			}

			[Token(Token = "0x6001ABD")]
			[Address(RVA = "0xD9C0C4", Offset = "0xD9C0C4", VA = "0xD9C0C4")]
			public Item()
			{
			}
		}

		[Token(Token = "0x4001884")]
		private const string ITEMS_DATAFILE = "items";

		[Token(Token = "0x4001885")]
		private const string ITEMGROUPS_DATAFILE = "itemgroups";

		[Token(Token = "0x4001886")]
		public const int COINS_POINTS_RELATION = 100;

		[Token(Token = "0x4001887")]
		private const char ITEMID_DELIMITER = '_';

		[Token(Token = "0x4001888")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Dictionary<string, Item> items;

		[Token(Token = "0x4001889")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static Dictionary<string, ItemGroup> itemGroups;

		[Token(Token = "0x400188A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static bool _initialized;

		[Token(Token = "0x400188B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static SVREvent OnInitialized;

		[Token(Token = "0x400188C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public static SumalabEvent OnCoinsUpdated;

		[Token(Token = "0x17000161")]
		public static bool Initialized
		{
			[Token(Token = "0x6001A91")]
			[Address(RVA = "0xD99058", Offset = "0xD99058", VA = "0xD99058")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001A92")]
		[Address(RVA = "0xD8EF58", Offset = "0xD8EF58", VA = "0xD8EF58")]
		public static void Initialize()
		{
		}

		[Token(Token = "0x6001A93")]
		[Address(RVA = "0xD99134", Offset = "0xD99134", VA = "0xD99134")]
		private static void CheckUnselectableItemsAtInit()
		{
		}

		[Token(Token = "0x6001A94")]
		[Address(RVA = "0xD990B0", Offset = "0xD990B0", VA = "0xD990B0")]
		private static string GetJSON(string fileName)
		{
			return null;
		}

		[Token(Token = "0x6001A95")]
		[Address(RVA = "0xD98514", Offset = "0xD98514", VA = "0xD98514")]
		public static Item GetItem(string itemName)
		{
			return null;
		}

		[Token(Token = "0x6001A96")]
		[Address(RVA = "0xD986AC", Offset = "0xD986AC", VA = "0xD986AC")]
		public static ItemGroup GetItemGroup(string itemGroupName)
		{
			return null;
		}

		[Token(Token = "0x6001A97")]
		[Address(RVA = "0xD9939C", Offset = "0xD9939C", VA = "0xD9939C")]
		public static void BuyItem(string itemName)
		{
		}

		[Token(Token = "0x6001A98")]
		[Address(RVA = "0xD99420", Offset = "0xD99420", VA = "0xD99420")]
		public static void BuyItem(int price)
		{
		}

		[Token(Token = "0x6001A99")]
		[Address(RVA = "0xD91D24", Offset = "0xD91D24", VA = "0xD91D24")]
		public static void EquipItems()
		{
		}

		[Token(Token = "0x6001A9A")]
		[Address(RVA = "0xD99988", Offset = "0xD99988", VA = "0xD99988")]
		public static bool EquipItems(string itemGroup)
		{
			return default(bool);
		}

		[Token(Token = "0x6001A9B")]
		[Address(RVA = "0xD99B88", Offset = "0xD99B88", VA = "0xD99B88")]
		public static void UnequipItems()
		{
		}

		[Token(Token = "0x6001A9C")]
		[Address(RVA = "0xD9A15C", Offset = "0xD9A15C", VA = "0xD9A15C")]
		public static bool AnyConsumableEquiped()
		{
			return default(bool);
		}

		[Token(Token = "0x6001A9D")]
		[Address(RVA = "0xD8B3E4", Offset = "0xD8B3E4", VA = "0xD8B3E4")]
		public static void ClearConsumables()
		{
		}

		[Token(Token = "0x6001A9E")]
		[Address(RVA = "0xD99530", Offset = "0xD99530", VA = "0xD99530")]
		public static void Equip(string itemGroup, string itemName)
		{
		}

		[Token(Token = "0x6001A9F")]
		[Address(RVA = "0xD99D38", Offset = "0xD99D38", VA = "0xD99D38")]
		public static void Unequip(string itemGroup, string itemName)
		{
		}

		[Token(Token = "0x6001AA0")]
		[Address(RVA = "0xD9A4C8", Offset = "0xD9A4C8", VA = "0xD9A4C8")]
		private static void SetDualWield(bool enable)
		{
		}

		[Token(Token = "0x6001AA1")]
		[Address(RVA = "0xD9A318", Offset = "0xD9A318", VA = "0xD9A318")]
		private static void EquipWeapon(string itemName)
		{
		}

		[Token(Token = "0x6001AA2")]
		[Address(RVA = "0xD9A8D4", Offset = "0xD9A8D4", VA = "0xD9A8D4")]
		private static void EquipWeapon(WeaponModel weaponModel, bool dualWield)
		{
		}

		[Token(Token = "0x6001AA3")]
		[Address(RVA = "0xD9AA34", Offset = "0xD9AA34", VA = "0xD9AA34")]
		private static string GetDefaultWeaponEquipped()
		{
			return null;
		}

		[Token(Token = "0x6001AA4")]
		[Address(RVA = "0xD9AC54", Offset = "0xD9AC54", VA = "0xD9AC54")]
		public static int AddCoins(int score)
		{
			return default(int);
		}

		[Token(Token = "0x6001AA5")]
		[Address(RVA = "0xD9ACD4", Offset = "0xD9ACD4", VA = "0xD9ACD4")]
		public static int CalculateCoins(int score)
		{
			return default(int);
		}

		[Token(Token = "0x6001AA6")]
		[Address(RVA = "0xD9A970", Offset = "0xD9A970", VA = "0xD9A970")]
		public static void Refund(string itemName)
		{
		}

		[Token(Token = "0x6001AA7")]
		[Address(RVA = "0xD98EAC", Offset = "0xD98EAC", VA = "0xD98EAC")]
		public static void RefundConsumables()
		{
		}

		[Token(Token = "0x6001AA8")]
		[Address(RVA = "0xD9949C", Offset = "0xD9949C", VA = "0xD9949C")]
		public static void SetCoins(int coins)
		{
		}

		[Token(Token = "0x6001AA9")]
		[Address(RVA = "0xD98B0C", Offset = "0xD98B0C", VA = "0xD98B0C")]
		public static int GetCoins()
		{
			return default(int);
		}

		[Token(Token = "0x6001AAA")]
		[Address(RVA = "0xD9ACF8", Offset = "0xD9ACF8", VA = "0xD9ACF8")]
		public static void SaveItems(bool saveFile = true)
		{
		}
	}
	[Token(Token = "0x2000463")]
	public class ItemMenu : MonoBehaviour
	{
		[Token(Token = "0x4001895")]
		private const string BUTTON_YES = "menu_button_yes";

		[Token(Token = "0x4001896")]
		private const string BUTTON_NO = "menu_button_no";

		[Token(Token = "0x4001897")]
		private const string BUTTON_OK = "menu_button_ok";

		[Token(Token = "0x4001898")]
		private const string MAX_UNITS = "menu_maxunits";

		[Token(Token = "0x4001899")]
		private const string MAX_SELECTED = "menu_maxselected";

		[Token(Token = "0x400189A")]
		private const string NO_MONEY = "menu_nomoney";

		[Token(Token = "0x400189B")]
		private const string PURCHASE_CONFIRMATION = "menu_confirm_purchase";

		[Token(Token = "0x400189C")]
		private const string OVERRIDE_CONFIRMATION = "menu_confirm_override";

		[Token(Token = "0x400189D")]
		private const string AIMCONTROLLER_NOTAVAILABLE = "menu_notavailable_aimcontroller";

		[Token(Token = "0x400189E")]
		private const string HELLMODE_ITEMNOTAVAILABLE = "menu_notavailable_hellmode";

		[Token(Token = "0x400189F")]
		private const string RIOTSHIELD_NOTAVAILABLE = "menu_notavailable_riotshield";

		[Token(Token = "0x40018A0")]
		private const string DUALWIELD_NOTAVAILABLE = "menu_notavailable_dualwield";

		[Token(Token = "0x40018A1")]
		private const string UZI_NOTAVAILABLE = "menu_notavailable_uzi";

		[Token(Token = "0x40018A2")]
		private const string REVOLVER_NOTAVAILABLE = "menu_notavailable_revolver";

		[Token(Token = "0x40018A3")]
		private const string ROBOCOP_NOTAVAILABLE = "menu_notavailable_robocop";

		[Token(Token = "0x40018A4")]
		private const string UNLOCK_SINGLE_WEAPON = "menu_dualwield_locked";

		[Token(Token = "0x40018A5")]
		private const string NOTAVAILABLE = "menu_notavailable";

		[Token(Token = "0x40018A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ModalDialog modalDialogConsumable;

		[Token(Token = "0x40018A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ModalDialog modalDialogUnlockable;

		[Token(Token = "0x40018A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public TextMeshPro coinsText;

		[Token(Token = "0x40018A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private List<ItemButton> registeredItems;

		[Token(Token = "0x40018AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Dictionary<string, List<string>> lockItems;

		[Token(Token = "0x40018AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Dictionary<string, List<string>> lockItemGroups;

		[Token(Token = "0x6001ABE")]
		[Address(RVA = "0xD9C0CC", Offset = "0xD9C0CC", VA = "0xD9C0CC")]
		private void Start()
		{
		}

		[Token(Token = "0x6001ABF")]
		[Address(RVA = "0xD9C890", Offset = "0xD9C890", VA = "0xD9C890")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001AC0")]
		[Address(RVA = "0xD9C764", Offset = "0xD9C764", VA = "0xD9C764")]
		private void OnDifficultyChanged(GameManager.Difficulty difficulty)
		{
		}

		[Token(Token = "0x6001AC1")]
		[Address(RVA = "0xD9C564", Offset = "0xD9C564", VA = "0xD9C564")]
		private void OnDeviceChanged()
		{
		}

		[Token(Token = "0x6001AC2")]
		[Address(RVA = "0xD9E048", Offset = "0xD9E048", VA = "0xD9E048")]
		private void OnWeaponChanged(WeaponModel weaponModel)
		{
		}

		[Token(Token = "0x6001AC3")]
		[Address(RVA = "0xD9C4CC", Offset = "0xD9C4CC", VA = "0xD9C4CC")]
		private void UpdateCoins()
		{
		}

		[Token(Token = "0x6001AC4")]
		[Address(RVA = "0xD9E0F0", Offset = "0xD9E0F0", VA = "0xD9E0F0")]
		private void ShowInfoMessage(ItemButton itemButton, string message)
		{
		}

		[Token(Token = "0x6001AC5")]
		[Address(RVA = "0xD9E32C", Offset = "0xD9E32C", VA = "0xD9E32C")]
		private void ShowConfirmPurchaseMessage(ItemButton itemButton, string message, Action<ModalDialog.Opts> onComplete)
		{
		}

		[Token(Token = "0x6001AC6")]
		[Address(RVA = "0xD9E274", Offset = "0xD9E274", VA = "0xD9E274")]
		private void BuildDynamicMessage(ref string message, ItemButton itemButton)
		{
		}

		[Token(Token = "0x6001AC7")]
		[Address(RVA = "0xD9D7C8", Offset = "0xD9D7C8", VA = "0xD9D7C8")]
		private void LockItems(string itemGroup, string reason, bool unequip)
		{
		}

		[Token(Token = "0x6001AC8")]
		[Address(RVA = "0xD9CDB8", Offset = "0xD9CDB8", VA = "0xD9CDB8")]
		private void LockAutomaticWeapons(string reason)
		{
		}

		[Token(Token = "0x6001AC9")]
		[Address(RVA = "0xD9D9C0", Offset = "0xD9D9C0", VA = "0xD9D9C0")]
		private void LockOneHandedWeapons(string reason)
		{
		}

		[Token(Token = "0x6001ACA")]
		[Address(RVA = "0xD9D1B0", Offset = "0xD9D1B0", VA = "0xD9D1B0")]
		private void UnlockAutomaticWeapons(string reason)
		{
		}

		[Token(Token = "0x6001ACB")]
		[Address(RVA = "0xD9DE88", Offset = "0xD9DE88", VA = "0xD9DE88")]
		private void UnlockOneHandedWeapons(string reason)
		{
		}

		[Token(Token = "0x6001ACC")]
		[Address(RVA = "0xD9CBD0", Offset = "0xD9CBD0", VA = "0xD9CBD0")]
		private void LockItem(string itemName, string reason, bool unequip)
		{
		}

		[Token(Token = "0x6001ACD")]
		[Address(RVA = "0xD9DCFC", Offset = "0xD9DCFC", VA = "0xD9DCFC")]
		private void UnlockItems(string itemGroup, string reason)
		{
		}

		[Token(Token = "0x6001ACE")]
		[Address(RVA = "0xD9CFFC", Offset = "0xD9CFFC", VA = "0xD9CFFC")]
		private void UnlockItem(string itemName, string reason, bool purchase = false)
		{
		}

		[Token(Token = "0x6001ACF")]
		[Address(RVA = "0xD9E764", Offset = "0xD9E764", VA = "0xD9E764")]
		private bool AddLockItemReason(string itemName, string reason)
		{
			return default(bool);
		}

		[Token(Token = "0x6001AD0")]
		[Address(RVA = "0xD9E598", Offset = "0xD9E598", VA = "0xD9E598")]
		private bool AddLockItemGroupReason(string itemGroup, string reason)
		{
			return default(bool);
		}

		[Token(Token = "0x6001AD1")]
		[Address(RVA = "0xD9E930", Offset = "0xD9E930", VA = "0xD9E930")]
		private bool RemoveLockItemReason(string itemName, string reason)
		{
			return default(bool);
		}

		[Token(Token = "0x6001AD2")]
		[Address(RVA = "0xD9EF30", Offset = "0xD9EF30", VA = "0xD9EF30")]
		private bool RemoveLockItemGroupReason(string itemGroup, string reason)
		{
			return default(bool);
		}

		[Token(Token = "0x6001AD3")]
		[Address(RVA = "0xD9F01C", Offset = "0xD9F01C", VA = "0xD9F01C")]
		public bool IsLocked()
		{
			return default(bool);
		}

		[Token(Token = "0x6001AD4")]
		[Address(RVA = "0xD9F0E8", Offset = "0xD9F0E8", VA = "0xD9F0E8")]
		public void RegisterItem(ItemButton item)
		{
		}

		[Token(Token = "0x6001AD5")]
		[Address(RVA = "0xD9F200", Offset = "0xD9F200", VA = "0xD9F200")]
		public void SelectItem(ItemButton itemButton)
		{
		}

		[Token(Token = "0x6001AD6")]
		[Address(RVA = "0xD9FF58", Offset = "0xD9FF58", VA = "0xD9FF58")]
		public void CheckAllUnlocked()
		{
		}

		[Token(Token = "0x6001AD7")]
		[Address(RVA = "0xD9EA1C", Offset = "0xD9EA1C", VA = "0xD9EA1C")]
		private void CheckChallengeModeRewards()
		{
		}

		[Token(Token = "0x6001AD8")]
		[Address(RVA = "0xD9FAD8", Offset = "0xD9FAD8", VA = "0xD9FAD8")]
		private Dictionary<string, ItemManager.Item> GetBoughtItems(ItemManager.ItemGroup itemGroup)
		{
			return null;
		}

		[Token(Token = "0x6001AD9")]
		[Address(RVA = "0xD9FCE8", Offset = "0xD9FCE8", VA = "0xD9FCE8")]
		private Dictionary<string, ItemManager.Item> GetSelectedItems(ItemManager.ItemGroup itemGroup)
		{
			return null;
		}

		[Token(Token = "0x6001ADA")]
		[Address(RVA = "0xD9D370", Offset = "0xD9D370", VA = "0xD9D370")]
		public void UpdateItemButtons(bool saveData = false)
		{
		}

		[Token(Token = "0x6001ADB")]
		[Address(RVA = "0xDA00C4", Offset = "0xDA00C4", VA = "0xDA00C4")]
		public ItemMenu()
		{
		}
	}
	[Token(Token = "0x2000466")]
	public class ItemMenuScroll : MonoBehaviour
	{
		[Token(Token = "0x40018B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public UIButton scrollButton;

		[Token(Token = "0x40018B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ItemMenuScrollGroup[] scrollGroups;

		[Token(Token = "0x40018B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float itemDeltaPosY;

		[Token(Token = "0x40018B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private int scrollGroupIndex;

		[Token(Token = "0x40018B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool scrolling;

		[Token(Token = "0x6001AE3")]
		[Address(RVA = "0xDA0848", Offset = "0xDA0848", VA = "0xDA0848")]
		private void Start()
		{
		}

		[Token(Token = "0x6001AE4")]
		[Address(RVA = "0xDA09B4", Offset = "0xDA09B4", VA = "0xDA09B4")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001AE5")]
		[Address(RVA = "0xDA0A40", Offset = "0xDA0A40", VA = "0xDA0A40")]
		private void ScrollDown()
		{
		}

		[Token(Token = "0x6001AE6")]
		[Address(RVA = "0xDA0DAC", Offset = "0xDA0DAC", VA = "0xDA0DAC")]
		public ItemMenuScroll()
		{
		}
	}
	[Token(Token = "0x2000468")]
	public class ItemMenuScrollGroup : MonoBehaviour
	{
		[Token(Token = "0x40018B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject[] items;

		[Token(Token = "0x6001AE9")]
		[Address(RVA = "0xDA0E90", Offset = "0xDA0E90", VA = "0xDA0E90")]
		public ItemMenuScrollGroup()
		{
		}
	}
	[Token(Token = "0x2000469")]
	public class Lifebar : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x200046A")]
		public class LifebarColor
		{
			[Token(Token = "0x40018C2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[Range(0f, 1f)]
			public float percentage;

			[Token(Token = "0x40018C3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public Color color;

			[Token(Token = "0x6001AF1")]
			[Address(RVA = "0xDA1520", Offset = "0xDA1520", VA = "0xDA1520")]
			public LifebarColor()
			{
			}
		}

		[Token(Token = "0x40018B9")]
		private const int SHOW_DURATION = 2;

		[Token(Token = "0x40018BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public CommonCharacterController character;

		[Token(Token = "0x40018BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LifebarColor[] lifebarColors;

		[Token(Token = "0x40018BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float positionOffset;

		[Token(Token = "0x40018BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float lifeRange;

		[Token(Token = "0x40018BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int lifes;

		[Token(Token = "0x40018BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private MeshRenderer mesh;

		[Token(Token = "0x40018C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Transform container;

		[Token(Token = "0x40018C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float initialLocalScale;

		[Token(Token = "0x6001AEA")]
		[Address(RVA = "0xDA0E98", Offset = "0xDA0E98", VA = "0xDA0E98")]
		private void Start()
		{
		}

		[Token(Token = "0x6001AEB")]
		[Address(RVA = "0xDA10B0", Offset = "0xDA10B0", VA = "0xDA10B0")]
		private void Update()
		{
		}

		[Token(Token = "0x6001AEC")]
		[Address(RVA = "0xDA12C4", Offset = "0xDA12C4", VA = "0xDA12C4")]
		private void OnCharacterHit()
		{
		}

		[Token(Token = "0x6001AED")]
		[Address(RVA = "0xDA108C", Offset = "0xDA108C", VA = "0xDA108C")]
		private void HideLifeBar()
		{
		}

		[Token(Token = "0x6001AEE")]
		[Address(RVA = "0xDA136C", Offset = "0xDA136C", VA = "0xDA136C")]
		public void Disable()
		{
		}

		[Token(Token = "0x6001AEF")]
		[Address(RVA = "0xDA1418", Offset = "0xDA1418", VA = "0xDA1418")]
		public Lifebar()
		{
		}
	}
	[Token(Token = "0x200046B")]
	public class LocationController : MonoBehaviour
	{
		[Token(Token = "0x40018C4")]
		public const float ADVANCE_NEXTLOCATION_WARNING_DELAY = 8f;

		[Token(Token = "0x40018C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static SumalabEvent<int> OnLocationStartedStatic;

		[Token(Token = "0x40018C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static SumalabEvent<int> OnLocationInitialized;

		[Token(Token = "0x40018C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static SumalabEvent<int> OnLocationActivated;

		[Token(Token = "0x40018C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static SumalabEvent<int> OnLocationFinished;

		[Token(Token = "0x40018C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public static SumalabEvent<int> OnLocationDeactivated;

		[Token(Token = "0x40018CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public static SumalabEvent<int> OnLocationReactivatedStatic;

		[Token(Token = "0x40018CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public SumalabEvent OnLocationReactivated;

		[Token(Token = "0x40018CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SumalabEvent OnLocationStarted;

		[Token(Token = "0x40018CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public SumalabEvent OnLocationReady;

		[Token(Token = "0x40018CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public SumalabEvent OnReadySetGo;

		[Token(Token = "0x40018CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public SumalabEvent OnLocationCompleted;

		[Token(Token = "0x40018D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[HideInInspector]
		public UnityEvent onLoadScenes;

		[Token(Token = "0x40018D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public int locationId;

		[Token(Token = "0x40018D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public bool customScene;

		[Token(Token = "0x40018D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public NextLocation[] nextLocations;

		[Token(Token = "0x40018D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private LocationCharacterInstantiator[] characterInstantiators;

		[Token(Token = "0x40018D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private List<CommonCharacterController> activeEnemies;

		[Token(Token = "0x40018D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private List<CommonCharacterController> activeTeammates;

		[Token(Token = "0x40018D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private List<CommonCharacterController> activeHostages;

		[Token(Token = "0x40018D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private HashSet<string> characterPools;

		[Token(Token = "0x40018D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private int teammatesCount;

		[Token(Token = "0x40018DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		[SerializeField]
		private int teammatesDeads;

		[Token(Token = "0x40018DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private int enemiesCount;

		[Token(Token = "0x40018DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		[SerializeField]
		private int enemiesDeads;

		[Token(Token = "0x40018DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private int hostagesCount;

		[Token(Token = "0x40018DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		[SerializeField]
		private int hostagesDeads;

		[Token(Token = "0x40018DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public bool LocationReady;

		[Token(Token = "0x40018E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x99")]
		public bool moveToNextLocationDone;

		[Token(Token = "0x40018E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9A")]
		[HideInInspector]
		public bool timeoutBodies;

		[Token(Token = "0x40018E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9B")]
		[HideInInspector]
		public bool locationFailed;

		[Token(Token = "0x40018E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		private int locationScore;

		[Token(Token = "0x40018E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private float locationRemainingTime;

		[Token(Token = "0x40018E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		private float lastReactivation;

		[Token(Token = "0x40018E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public bool completed;

		[Token(Token = "0x40018E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA9")]
		private bool pendingComplete;

		[Token(Token = "0x40018E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAA")]
		private bool pendingCompleteForce;

		[Token(Token = "0x40018E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		private int bonusId;

		[Token(Token = "0x40018EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private float lastCheck;

		[Token(Token = "0x6001AF2")]
		[Address(RVA = "0xDA1528", Offset = "0xDA1528", VA = "0xDA1528")]
		public void loadScenes()
		{
		}

		[Token(Token = "0x6001AF3")]
		[Address(RVA = "0xDA166C", Offset = "0xDA166C", VA = "0xDA166C")]
		private void onScenesLoaded()
		{
		}

		[Token(Token = "0x6001AF4")]
		[Address(RVA = "0xDA1680", Offset = "0xDA1680", VA = "0xDA1680", Slot = "4")]
		public virtual void PreInitialize()
		{
		}

		[Token(Token = "0x6001AF5")]
		[Address(RVA = "0xDA1AA4", Offset = "0xDA1AA4", VA = "0xDA1AA4", Slot = "5")]
		public virtual void Prepare()
		{
		}

		[Token(Token = "0x6001AF6")]
		[Address(RVA = "0xDA1B34", Offset = "0xDA1B34", VA = "0xDA1B34")]
		public void Reset()
		{
		}

		[Token(Token = "0x6001AF7")]
		[Address(RVA = "0xDA1C64", Offset = "0xDA1C64", VA = "0xDA1C64", Slot = "6")]
		public virtual void Initialize()
		{
		}

		[Token(Token = "0x6001AF8")]
		[Address(RVA = "0xDA1D64", Offset = "0xDA1D64", VA = "0xDA1D64")]
		public void ActivateCharacters()
		{
		}

		[Token(Token = "0x6001AF9")]
		[Address(RVA = "0xDA1DFC", Offset = "0xDA1DFC", VA = "0xDA1DFC")]
		public void DeactivateCharacters()
		{
		}

		[Token(Token = "0x6001AFA")]
		[Address(RVA = "0xDA1F60", Offset = "0xDA1F60", VA = "0xDA1F60")]
		public void ActivateInBackground()
		{
		}

		[Token(Token = "0x6001AFB")]
		[Address(RVA = "0xDA1F6C", Offset = "0xDA1F6C", VA = "0xDA1F6C", Slot = "7")]
		public virtual void Activate()
		{
		}

		[Token(Token = "0x6001AFC")]
		[Address(RVA = "0xDA2680", Offset = "0xDA2680", VA = "0xDA2680", Slot = "8")]
		public virtual void Deactivate()
		{
		}

		[Token(Token = "0x6001AFD")]
		[Address(RVA = "0xDA27CC", Offset = "0xDA27CC", VA = "0xDA27CC")]
		public void Reactivate(bool backgroundReactivation = false)
		{
		}

		[Token(Token = "0x6001AFE")]
		[Address(RVA = "0xDA2C88", Offset = "0xDA2C88", VA = "0xDA2C88")]
		private void DoReactivation(bool backgroundReactivation)
		{
		}

		[Token(Token = "0x6001AFF")]
		[Address(RVA = "0xDA2D90", Offset = "0xDA2D90", VA = "0xDA2D90")]
		public void OnlinePlayerBecomesMasterClient()
		{
		}

		[Token(Token = "0x6001B00")]
		[Address(RVA = "0xDA2AAC", Offset = "0xDA2AAC", VA = "0xDA2AAC")]
		public void DeactivateInstantiators()
		{
		}

		[Token(Token = "0x6001B01")]
		[Address(RVA = "0xDA2BEC", Offset = "0xDA2BEC", VA = "0xDA2BEC")]
		public void CleanCharacters()
		{
		}

		[Token(Token = "0x6001B02")]
		[Address(RVA = "0xDA3590", Offset = "0xDA3590", VA = "0xDA3590")]
		private void CleanCharacters(IEnumerable<CommonCharacterController> list)
		{
		}

		[Token(Token = "0x6001B03")]
		[Address(RVA = "0xDA389C", Offset = "0xDA389C", VA = "0xDA389C")]
		public void KillAllEnemies()
		{
		}

		[Token(Token = "0x6001B04")]
		[Address(RVA = "0xDA3C6C", Offset = "0xDA3C6C", VA = "0xDA3C6C")]
		public void KillAll()
		{
		}

		[Token(Token = "0x6001B05")]
		[Address(RVA = "0xDA2E3C", Offset = "0xDA2E3C", VA = "0xDA2E3C")]
		public void Complete(bool force = false, bool remote = false)
		{
		}

		[Token(Token = "0x6001B06")]
		[Address(RVA = "0xDA4378", Offset = "0xDA4378", VA = "0xDA4378")]
		public void NextLocationButtonPressed()
		{
		}

		[Token(Token = "0x6001B07")]
		[Address(RVA = "0xDA1C08", Offset = "0xDA1C08", VA = "0xDA1C08")]
		public void hideButtons()
		{
		}

		[Token(Token = "0x6001B08")]
		[Address(RVA = "0xDA44F4", Offset = "0xDA44F4", VA = "0xDA44F4")]
		public Transform getInfoPanel()
		{
			return null;
		}

		[Token(Token = "0x6001B09")]
		[Address(RVA = "0xDA4550", Offset = "0xDA4550", VA = "0xDA4550")]
		public void ShowReadySetGo(bool bPlayerHealed = false)
		{
		}

		[Token(Token = "0x6001B0A")]
		[Address(RVA = "0xDA4628", Offset = "0xDA4628", VA = "0xDA4628")]
		public HashSet<string> GetCharacterPools()
		{
			return null;
		}

		[Token(Token = "0x6001B0B")]
		[Address(RVA = "0xDA4630", Offset = "0xDA4630", VA = "0xDA4630")]
		private void waitForMoaningUserToBeAwareOfTheSituation()
		{
		}

		[Token(Token = "0x6001B0C")]
		[Address(RVA = "0xDA47F0", Offset = "0xDA47F0", VA = "0xDA47F0")]
		private void AdvanceToNextLocationCommunication()
		{
		}

		[Token(Token = "0x6001B0D")]
		[Address(RVA = "0xDA4848", Offset = "0xDA4848", VA = "0xDA4848")]
		public void AddTeammate()
		{
		}

		[Token(Token = "0x6001B0E")]
		[Address(RVA = "0xDA48C4", Offset = "0xDA48C4", VA = "0xDA48C4")]
		public void AddEnemy()
		{
		}

		[Token(Token = "0x6001B0F")]
		[Address(RVA = "0xDA48D4", Offset = "0xDA48D4", VA = "0xDA48D4")]
		public void AddHostage()
		{
		}

		[Token(Token = "0x6001B10")]
		[Address(RVA = "0xDA48E4", Offset = "0xDA48E4", VA = "0xDA48E4")]
		public void AddCharacter(CommonCharacterController character)
		{
		}

		[Token(Token = "0x6001B11")]
		[Address(RVA = "0xDA4BC0", Offset = "0xDA4BC0", VA = "0xDA4BC0")]
		public void AddTeammates(int teammatesCount)
		{
		}

		[Token(Token = "0x6001B12")]
		[Address(RVA = "0xDA4BD0", Offset = "0xDA4BD0", VA = "0xDA4BD0")]
		public void AddEnemies(int enemiesCount)
		{
		}

		[Token(Token = "0x6001B13")]
		[Address(RVA = "0xDA4BE0", Offset = "0xDA4BE0", VA = "0xDA4BE0")]
		public int GetRemainingEnemies()
		{
			return default(int);
		}

		[Token(Token = "0x6001B14")]
		[Address(RVA = "0xDA4BEC", Offset = "0xDA4BEC", VA = "0xDA4BEC")]
		public void AddHostages(int hostagesCount)
		{
		}

		[Token(Token = "0x6001B15")]
		[Address(RVA = "0xDA4BFC", Offset = "0xDA4BFC", VA = "0xDA4BFC")]
		public void RegisterCharacter(CommonCharacterController character)
		{
		}

		[Token(Token = "0x6001B16")]
		[Address(RVA = "0xDA4D54", Offset = "0xDA4D54", VA = "0xDA4D54")]
		public void UnregisterCharacter(CommonCharacterController character)
		{
		}

		[Token(Token = "0x6001B17")]
		[Address(RVA = "0xDA5604", Offset = "0xDA5604", VA = "0xDA5604")]
		public List<LocationCharacter> GetTeammates()
		{
			return null;
		}

		[Token(Token = "0x6001B18")]
		[Address(RVA = "0xDA3DE8", Offset = "0xDA3DE8", VA = "0xDA3DE8")]
		public List<CommonCharacterController> GetActiveCharacters()
		{
			return null;
		}

		[Token(Token = "0x6001B19")]
		[Address(RVA = "0xDA3A1C", Offset = "0xDA3A1C", VA = "0xDA3A1C")]
		public List<CommonCharacterController> GetActiveEnemies(bool onlyAimables = false)
		{
			return null;
		}

		[Token(Token = "0x6001B1A")]
		[Address(RVA = "0xDA57F8", Offset = "0xDA57F8", VA = "0xDA57F8")]
		public List<CommonCharacterController> GetActiveTeammates(bool onlyAimables = false)
		{
			return null;
		}

		[Token(Token = "0x6001B1B")]
		[Address(RVA = "0xDA4088", Offset = "0xDA4088", VA = "0xDA4088")]
		private void ShowAmmunitionBonus(Vector3 position)
		{
		}

		[Token(Token = "0x6001B1C")]
		[Address(RVA = "0xDA3EA0", Offset = "0xDA3EA0", VA = "0xDA3EA0")]
		private bool ExtraAmmunitionBonus()
		{
			return default(bool);
		}

		[Token(Token = "0x6001B1D")]
		[Address(RVA = "0xDA5ED0", Offset = "0xDA5ED0", VA = "0xDA5ED0")]
		public NextLocation GetNextLocation(int locationId)
		{
			return null;
		}

		[Token(Token = "0x6001B1E")]
		[Address(RVA = "0xDA5F34", Offset = "0xDA5F34", VA = "0xDA5F34")]
		public int GetEnemiesDeads()
		{
			return default(int);
		}

		[Token(Token = "0x6001B1F")]
		[Address(RVA = "0xDA5F3C", Offset = "0xDA5F3C", VA = "0xDA5F3C")]
		public void Update()
		{
		}

		[Token(Token = "0x6001B20")]
		[Address(RVA = "0xDA5F90", Offset = "0xDA5F90", VA = "0xDA5F90")]
		private void CheckEnemies()
		{
		}

		[Token(Token = "0x6001B21")]
		[Address(RVA = "0xDA60AC", Offset = "0xDA60AC", VA = "0xDA60AC")]
		public LocationController()
		{
		}
	}
	[Token(Token = "0x200046D")]
	public class LocationLoader : UIButton
	{
		[Token(Token = "0x40018EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public Vector3 doorCloseRotation;

		[Token(Token = "0x40018EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		public Vector3 doorOpenRotation;

		[Token(Token = "0x40018F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private bool loading;

		[Token(Token = "0x6001B2A")]
		[Address(RVA = "0xDA65C0", Offset = "0xDA65C0", VA = "0xDA65C0", Slot = "4")]
		public override bool OnHit(Bullet bullet, Ray ray, RaycastHit hit)
		{
			return default(bool);
		}

		[Token(Token = "0x6001B2B")]
		[Address(RVA = "0xDA66F8", Offset = "0xDA66F8", VA = "0xDA66F8", Slot = "16")]
		public override bool OnHoverEnter(SVRLaserPointer pointer)
		{
			return default(bool);
		}

		[Token(Token = "0x6001B2C")]
		[Address(RVA = "0xDA67B4", Offset = "0xDA67B4", VA = "0xDA67B4", Slot = "17")]
		public override bool OnHoverExit(SVRLaserPointer pointer)
		{
			return default(bool);
		}

		[Token(Token = "0x6001B2D")]
		[Address(RVA = "0xDA6840", Offset = "0xDA6840", VA = "0xDA6840")]
		public LocationLoader()
		{
		}
	}
	[Token(Token = "0x200046E")]
	public class LocationShowHide : MonoBehaviour
	{
		[Token(Token = "0x40018F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool hide;

		[Token(Token = "0x40018F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string[] locations_to_show_or_hide;

		[Token(Token = "0x40018F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Behaviour[] behaviours;

		[Token(Token = "0x40018F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public GameObject[] gameobjects;

		[Token(Token = "0x6001B2E")]
		[Address(RVA = "0xDA6848", Offset = "0xDA6848", VA = "0xDA6848")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001B2F")]
		[Address(RVA = "0xDA6914", Offset = "0xDA6914", VA = "0xDA6914")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001B30")]
		[Address(RVA = "0xDA69E0", Offset = "0xDA69E0", VA = "0xDA69E0")]
		public void OnLocationActivated(int locationId)
		{
		}

		[Token(Token = "0x6001B31")]
		[Address(RVA = "0xDA6BCC", Offset = "0xDA6BCC", VA = "0xDA6BCC")]
		public LocationShowHide()
		{
		}
	}
	[Token(Token = "0x200046F")]
	public class LocationShowHideManager : MonoBehaviour
	{
		[Token(Token = "0x40018F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static LocationShowHideManager Instance;

		[Token(Token = "0x40018F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private List<LocationShowHideV2> objects;

		[Token(Token = "0x6001B32")]
		[Address(RVA = "0xDA6BD4", Offset = "0xDA6BD4", VA = "0xDA6BD4")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001B33")]
		[Address(RVA = "0xDA6CD8", Offset = "0xDA6CD8", VA = "0xDA6CD8")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001B34")]
		[Address(RVA = "0xDA6DA4", Offset = "0xDA6DA4", VA = "0xDA6DA4")]
		public void RegisterObject(LocationShowHideV2 obj)
		{
		}

		[Token(Token = "0x6001B35")]
		[Address(RVA = "0xDA6E54", Offset = "0xDA6E54", VA = "0xDA6E54")]
		public void UnregisterObject(LocationShowHideV2 obj)
		{
		}

		[Token(Token = "0x6001B36")]
		[Address(RVA = "0xDA6EAC", Offset = "0xDA6EAC", VA = "0xDA6EAC")]
		public void OnLocationActivated(int locationId)
		{
		}

		[Token(Token = "0x6001B37")]
		[Address(RVA = "0xDA7040", Offset = "0xDA7040", VA = "0xDA7040")]
		public LocationShowHideManager()
		{
		}
	}
	[Token(Token = "0x2000470")]
	public class LocationShowHideV2 : MonoBehaviour
	{
		[Token(Token = "0x40018F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int mask;

		[Token(Token = "0x6001B38")]
		[Address(RVA = "0xDA70C8", Offset = "0xDA70C8", VA = "0xDA70C8")]
		private void Start()
		{
		}

		[Token(Token = "0x6001B39")]
		[Address(RVA = "0xDA7120", Offset = "0xDA7120", VA = "0xDA7120")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001B3A")]
		[Address(RVA = "0xDA6FFC", Offset = "0xDA6FFC", VA = "0xDA6FFC")]
		public void UpdateState(int locationId)
		{
		}

		[Token(Token = "0x6001B3B")]
		[Address(RVA = "0xDA7178", Offset = "0xDA7178", VA = "0xDA7178")]
		public bool hasFlag(int i)
		{
			return default(bool);
		}

		[Token(Token = "0x6001B3C")]
		[Address(RVA = "0xDA7190", Offset = "0xDA7190", VA = "0xDA7190")]
		public void addFlag(int i)
		{
		}

		[Token(Token = "0x6001B3D")]
		[Address(RVA = "0xDA71A8", Offset = "0xDA71A8", VA = "0xDA71A8")]
		public void removeFlag(int i)
		{
		}

		[Token(Token = "0x6001B3E")]
		[Address(RVA = "0xDA71C0", Offset = "0xDA71C0", VA = "0xDA71C0")]
		public LocationShowHideV2()
		{
		}
	}
	[Token(Token = "0x2000471")]
	public class MercenaryMinigunController : ThiefPoliceController
	{
		[Token(Token = "0x6001B3F")]
		[Address(RVA = "0xDA71C8", Offset = "0xDA71C8", VA = "0xDA71C8", Slot = "4")]
		public override bool OnHit(Bullet bullet, Ray ray, RaycastHit hit)
		{
			return default(bool);
		}

		[Token(Token = "0x6001B40")]
		[Address(RVA = "0xDA7314", Offset = "0xDA7314", VA = "0xDA7314")]
		public MercenaryMinigunController()
		{
		}
	}
	[Token(Token = "0x2000472")]
	public class MoriartyController : CommonCharacterController
	{
		[Token(Token = "0x40018F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
		public CharacterAction action;

		[Token(Token = "0x6001B41")]
		[Address(RVA = "0xDA736C", Offset = "0xDA736C", VA = "0xDA736C", Slot = "9")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6001B42")]
		[Address(RVA = "0xDA7470", Offset = "0xDA7470", VA = "0xDA7470")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001B43")]
		[Address(RVA = "0xDA753C", Offset = "0xDA753C", VA = "0xDA753C", Slot = "13")]
		public override void SetCharacterVisibility(bool visible)
		{
		}

		[Token(Token = "0x6001B44")]
		[Address(RVA = "0xDA7540", Offset = "0xDA7540", VA = "0xDA7540")]
		private void OnLocationActivated(int locationId)
		{
		}

		[Token(Token = "0x6001B45")]
		[Address(RVA = "0xDA7574", Offset = "0xDA7574", VA = "0xDA7574")]
		public MoriartyController()
		{
		}
	}
	[Token(Token = "0x2000473")]
	public class MorpheusController : CommonCharacterController
	{
		[Token(Token = "0x40018F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E4")]
		private bool bKilled;

		[Token(Token = "0x6001B46")]
		[Address(RVA = "0xDA75CC", Offset = "0xDA75CC", VA = "0xDA75CC", Slot = "4")]
		public override bool OnHit(Bullet bullet, Ray ray, RaycastHit hit)
		{
			return default(bool);
		}

		[Token(Token = "0x6001B47")]
		[Address(RVA = "0xDA76C8", Offset = "0xDA76C8", VA = "0xDA76C8")]
		public MorpheusController()
		{
		}
	}
	[Token(Token = "0x2000474")]
	public class NeoController : ThiefPoliceController
	{
		[Token(Token = "0x40018FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x278")]
		private int minLifes;

		[Token(Token = "0x6001B48")]
		[Address(RVA = "0xDA7720", Offset = "0xDA7720", VA = "0xDA7720", Slot = "4")]
		public override bool OnHit(Bullet bullet, Ray ray, RaycastHit hit)
		{
			return default(bool);
		}

		[Token(Token = "0x6001B49")]
		[Address(RVA = "0xDA79DC", Offset = "0xDA79DC", VA = "0xDA79DC")]
		private void syncLifes(int iLifes)
		{
		}

		[Token(Token = "0x6001B4A")]
		[Address(RVA = "0xDA7B00", Offset = "0xDA7B00", VA = "0xDA7B00")]
		public void SetMinLifes(int minLifes)
		{
		}

		[Token(Token = "0x6001B4B")]
		[Address(RVA = "0xDA7B08", Offset = "0xDA7B08", VA = "0xDA7B08")]
		public NeoController()
		{
		}
	}
	[Token(Token = "0x2000475")]
	public class NextLocation : MonoBehaviour
	{
		[Token(Token = "0x2000476")]
		[CompilerGenerated]
		private sealed class <moveToNextLocationCoroutine>d__11 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001900")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001901")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001902")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public NextLocation <>4__this;

			[Token(Token = "0x1700016A")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001B61")]
				[Address(RVA = "0xDA906C", Offset = "0xDA906C", VA = "0xDA906C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700016B")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001B63")]
				[Address(RVA = "0xDA90B4", Offset = "0xDA90B4", VA = "0xDA90B4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001B5E")]
			[Address(RVA = "0xDA7DBC", Offset = "0xDA7DBC", VA = "0xDA7DBC")]
			[DebuggerHidden]
			public <moveToNextLocationCoroutine>d__11(int <>1__state)
			{
			}

			[Token(Token = "0x6001B5F")]
			[Address(RVA = "0xDA8758", Offset = "0xDA8758", VA = "0xDA8758", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001B60")]
			[Address(RVA = "0xDA875C", Offset = "0xDA875C", VA = "0xDA875C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001B62")]
			[Address(RVA = "0xDA9074", Offset = "0xDA9074", VA = "0xDA9074", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40018FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public LocationController nextLocation;

		[Token(Token = "0x40018FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private NextLocationStep[] steps;

		[Token(Token = "0x40018FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int currentStep;

		[Token(Token = "0x40018FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private bool preloadScene;

		[Token(Token = "0x40018FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private List<CharacterData> globalTeammates;

		[Token(Token = "0x6001B4C")]
		[Address(RVA = "0xDA1AA0", Offset = "0xDA1AA0", VA = "0xDA1AA0")]
		public void PreInitialize()
		{
		}

		[Token(Token = "0x6001B4D")]
		[Address(RVA = "0xDA7B60", Offset = "0xDA7B60", VA = "0xDA7B60")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001B4E")]
		[Address(RVA = "0xDA4214", Offset = "0xDA4214", VA = "0xDA4214")]
		public void showButton(bool preloadScene = false)
		{
		}

		[Token(Token = "0x6001B4F")]
		[Address(RVA = "0xDA447C", Offset = "0xDA447C", VA = "0xDA447C")]
		public void hideButton()
		{
		}

		[Token(Token = "0x6001B50")]
		[Address(RVA = "0xDA7C04", Offset = "0xDA7C04", VA = "0xDA7C04")]
		public void SetSteps(NextLocationStep[] steps)
		{
		}

		[Token(Token = "0x6001B51")]
		[Address(RVA = "0xDA7C0C", Offset = "0xDA7C0C", VA = "0xDA7C0C")]
		public void moveToNextLocation()
		{
		}

		[Token(Token = "0x6001B52")]
		[Address(RVA = "0xDA7D48", Offset = "0xDA7D48", VA = "0xDA7D48")]
		[IteratorStateMachine(typeof(<moveToNextLocationCoroutine>d__11))]
		private IEnumerator moveToNextLocationCoroutine()
		{
			return null;
		}

		[Token(Token = "0x6001B53")]
		[Address(RVA = "0xDA7DE4", Offset = "0xDA7DE4", VA = "0xDA7DE4")]
		private void executeNextStep()
		{
		}

		[Token(Token = "0x6001B54")]
		[Address(RVA = "0xDA8050", Offset = "0xDA8050", VA = "0xDA8050")]
		private void changeStepPositionForOnlinePlayer()
		{
		}

		[Token(Token = "0x6001B55")]
		[Address(RVA = "0xDA8224", Offset = "0xDA8224", VA = "0xDA8224")]
		public List<CharacterData> GetGlobalTeammates()
		{
			return null;
		}

		[Token(Token = "0x6001B56")]
		[Address(RVA = "0xDA822C", Offset = "0xDA822C", VA = "0xDA822C")]
		public void ActivateNextScene(bool bRemoteCall = false)
		{
		}

		[Token(Token = "0x6001B57")]
		[Address(RVA = "0xDA848C", Offset = "0xDA848C", VA = "0xDA848C")]
		private void CheckRemotePlayersReady()
		{
		}

		[Token(Token = "0x6001B58")]
		[Address(RVA = "0xDA85C4", Offset = "0xDA85C4", VA = "0xDA85C4")]
		private CharacterAction[] getActions()
		{
			return null;
		}

		[Token(Token = "0x6001B59")]
		[Address(RVA = "0xDA7B64", Offset = "0xDA7B64", VA = "0xDA7B64")]
		public NextLocationStep[] getSteps()
		{
			return null;
		}

		[Token(Token = "0x6001B5A")]
		[Address(RVA = "0xDA864C", Offset = "0xDA864C", VA = "0xDA864C")]
		public NextLocation()
		{
		}
	}
	[Token(Token = "0x2000478")]
	public class NextLocationButton : HitTarget
	{
		[Token(Token = "0x4001905")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private NextLocation nextLocation;

		[Token(Token = "0x4001906")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private LocationController locationController;

		[Token(Token = "0x6001B66")]
		[Address(RVA = "0xDA9218", Offset = "0xDA9218", VA = "0xDA9218")]
		public void Awake()
		{
		}

		[Token(Token = "0x6001B67")]
		[Address(RVA = "0xDA94BC", Offset = "0xDA94BC", VA = "0xDA94BC")]
		public void OnHitRemote()
		{
		}

		[Token(Token = "0x6001B68")]
		[Address(RVA = "0xDA94C0", Offset = "0xDA94C0", VA = "0xDA94C0", Slot = "4")]
		public override bool OnHit(Bullet bullet, Ray ray, RaycastHit hit)
		{
			return default(bool);
		}

		[Token(Token = "0x6001B69")]
		[Address(RVA = "0xDA955C", Offset = "0xDA955C", VA = "0xDA955C")]
		public void OnHitInternal(Vector3 force, Vector3 point, bool bRemote = false)
		{
		}

		[Token(Token = "0x6001B6A")]
		[Address(RVA = "0xDA9868", Offset = "0xDA9868", VA = "0xDA9868")]
		public void Show()
		{
		}

		[Token(Token = "0x6001B6B")]
		[Address(RVA = "0xDA99F4", Offset = "0xDA99F4", VA = "0xDA99F4")]
		public void Hide()
		{
		}

		[Token(Token = "0x6001B6C")]
		[Address(RVA = "0xDA9A30", Offset = "0xDA9A30", VA = "0xDA9A30")]
		public NextLocationButton()
		{
		}
	}
	[Token(Token = "0x2000479")]
	public class NextLocationStep : MonoBehaviour
	{
		[Token(Token = "0x200047B")]
		[CompilerGenerated]
		private sealed class <executeStepCoroutine>d__10 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001911")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001912")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001913")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public NextLocationStep <>4__this;

			[Token(Token = "0x4001914")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Action onStepComplete;

			[Token(Token = "0x1700016C")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001B78")]
				[Address(RVA = "0xDAA794", Offset = "0xDAA794", VA = "0xDAA794", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700016D")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001B7A")]
				[Address(RVA = "0xDAA7DC", Offset = "0xDAA7DC", VA = "0xDAA7DC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001B75")]
			[Address(RVA = "0xDA9E8C", Offset = "0xDA9E8C", VA = "0xDA9E8C")]
			[DebuggerHidden]
			public <executeStepCoroutine>d__10(int <>1__state)
			{
			}

			[Token(Token = "0x6001B76")]
			[Address(RVA = "0xDAA1C8", Offset = "0xDAA1C8", VA = "0xDAA1C8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001B77")]
			[Address(RVA = "0xDAA1CC", Offset = "0xDAA1CC", VA = "0xDAA1CC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001B79")]
			[Address(RVA = "0xDAA79C", Offset = "0xDAA79C", VA = "0xDAA79C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001907")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private float blackScreenTime;

		[Token(Token = "0x4001908")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private float nonBlackScreenTime;

		[Token(Token = "0x4001909")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SumalabEvent OnShowBlackScreen;

		[Token(Token = "0x400190A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public SumalabEvent OnHideBlackScreen;

		[Token(Token = "0x400190B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		protected float initTime;

		[Token(Token = "0x400190C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public bool removeDeadEnemies;

		[Token(Token = "0x400190D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x35")]
		public bool forceStatic;

		[Token(Token = "0x6001B6D")]
		[Address(RVA = "0xDA9A38", Offset = "0xDA9A38", VA = "0xDA9A38", Slot = "4")]
		public virtual void executeStep(Action onStepComplete, SceneMask nextSceneMask)
		{
		}

		[Token(Token = "0x6001B6E")]
		[Address(RVA = "0xDA9DEC", Offset = "0xDA9DEC", VA = "0xDA9DEC")]
		public void SetBlackScreenTime(float time)
		{
		}

		[Token(Token = "0x6001B6F")]
		[Address(RVA = "0xDA9DF4", Offset = "0xDA9DF4", VA = "0xDA9DF4")]
		public void SetNonBlackScreenTime(float time)
		{
		}

		[Token(Token = "0x6001B70")]
		[Address(RVA = "0xDA9DFC", Offset = "0xDA9DFC", VA = "0xDA9DFC", Slot = "5")]
		[IteratorStateMachine(typeof(<executeStepCoroutine>d__10))]
		protected virtual IEnumerator executeStepCoroutine(Action onStepComplete)
		{
			return null;
		}

		[Token(Token = "0x6001B71")]
		[Address(RVA = "0xDA9EB4", Offset = "0xDA9EB4", VA = "0xDA9EB4")]
		private void removeAllDeadEnemies()
		{
		}

		[Token(Token = "0x6001B72")]
		[Address(RVA = "0xDA9FC8", Offset = "0xDA9FC8", VA = "0xDA9FC8")]
		public NextLocationStep()
		{
		}
	}
	[Token(Token = "0x200047C")]
	public class OverlayScreen : MonoBehaviour
	{
		[Token(Token = "0x4001915")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static float FADE_DURATION;

		[Token(Token = "0x4001916")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private TimeScreen timeScreen;

		[Token(Token = "0x4001917")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Renderer bulletTimeScreen;

		[Token(Token = "0x4001918")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Renderer damageScreen;

		[Token(Token = "0x4001919")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Renderer missionAccomplishedScreen;

		[Token(Token = "0x400191A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private string bulletTimeScreen_id;

		[Token(Token = "0x400191B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private string damageScreenn_id;

		[Token(Token = "0x6001B7B")]
		[Address(RVA = "0xDAA7E4", Offset = "0xDAA7E4", VA = "0xDAA7E4")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001B7C")]
		[Address(RVA = "0xDAA9B8", Offset = "0xDAA9B8", VA = "0xDAA9B8")]
		public void showBlackScreen(bool fade = true)
		{
		}

		[Token(Token = "0x6001B7D")]
		[Address(RVA = "0xDAABAC", Offset = "0xDAABAC", VA = "0xDAABAC")]
		public void hideBlackScreen(bool fade = true)
		{
		}

		[Token(Token = "0x6001B7E")]
		[Address(RVA = "0xDAABF8", Offset = "0xDAABF8", VA = "0xDAABF8")]
		public void setScreenColor(Color color)
		{
		}

		[Token(Token = "0x6001B7F")]
		[Address(RVA = "0xDAAC14", Offset = "0xDAAC14", VA = "0xDAAC14")]
		public void showBulletTimeScreen()
		{
		}

		[Token(Token = "0x6001B80")]
		[Address(RVA = "0xDAAD54", Offset = "0xDAAD54", VA = "0xDAAD54")]
		public void hideBulletTimeScreen()
		{
		}

		[Token(Token = "0x6001B81")]
		[Address(RVA = "0xDAADB8", Offset = "0xDAADB8", VA = "0xDAADB8")]
		public void showDamageScreen(float alpha = 1f)
		{
		}

		[Token(Token = "0x6001B82")]
		[Address(RVA = "0xDAADEC", Offset = "0xDAADEC", VA = "0xDAADEC")]
		public void hideDamageScreen()
		{
		}

		[Token(Token = "0x6001B83")]
		[Address(RVA = "0xDAAE50", Offset = "0xDAAE50", VA = "0xDAAE50")]
		public void showTimeScreen(bool fade = true)
		{
		}

		[Token(Token = "0x6001B84")]
		[Address(RVA = "0xDA2644", Offset = "0xDA2644", VA = "0xDA2644")]
		public void hideTimeScreen(bool fade = true)
		{
		}

		[Token(Token = "0x6001B85")]
		[Address(RVA = "0xDAAEA0", Offset = "0xDAAEA0", VA = "0xDAAEA0")]
		public void showMissionAccomplishedScreen()
		{
		}

		[Token(Token = "0x6001B86")]
		[Address(RVA = "0xDAAC5C", Offset = "0xDAAC5C", VA = "0xDAAC5C")]
		private Tween show(Renderer screen, float fadeTime = 0f, float alpha = 1f)
		{
			return null;
		}

		[Token(Token = "0x6001B87")]
		[Address(RVA = "0xDAAA08", Offset = "0xDAAA08", VA = "0xDAAA08")]
		private void hide(Renderer screen, float fadeTime = 0f)
		{
		}

		[Token(Token = "0x6001B88")]
		[Address(RVA = "0xDAAEDC", Offset = "0xDAAEDC", VA = "0xDAAEDC")]
		public OverlayScreen()
		{
		}
	}
	[Token(Token = "0x200047E")]
	public class CV2_OwoButton : UIButton
	{
		[Token(Token = "0x400191D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public GameObject menu;

		[Token(Token = "0x6001B8C")]
		[Address(RVA = "0xDAAFD8", Offset = "0xDAAFD8", VA = "0xDAAFD8", Slot = "4")]
		public override bool OnHit(Bullet bullet, Ray ray, RaycastHit hit)
		{
			return default(bool);
		}

		[Token(Token = "0x6001B8D")]
		[Address(RVA = "0xDAB088", Offset = "0xDAB088", VA = "0xDAB088")]
		public CV2_OwoButton()
		{
		}
	}
	[Token(Token = "0x200047F")]
	public class CV2_OwoManager : MonoBehaviour
	{
		[Token(Token = "0x2000480")]
		[CompilerGenerated]
		private sealed class <FireAutomaticWeapon>d__28 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001928")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001929")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400192A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Weapon weapon;

			[Token(Token = "0x400192B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public CV2_OwoManager <>4__this;

			[Token(Token = "0x400192C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private SVRHand <weaponHand>5__2;

			[Token(Token = "0x1700016F")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001BA6")]
				[Address(RVA = "0xDAC604", Offset = "0xDAC604", VA = "0xDAC604", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000170")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001BA8")]
				[Address(RVA = "0xDAC64C", Offset = "0xDAC64C", VA = "0xDAC64C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001BA3")]
			[Address(RVA = "0xDAC188", Offset = "0xDAC188", VA = "0xDAC188")]
			[DebuggerHidden]
			public <FireAutomaticWeapon>d__28(int <>1__state)
			{
			}

			[Token(Token = "0x6001BA4")]
			[Address(RVA = "0xDAC34C", Offset = "0xDAC34C", VA = "0xDAC34C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001BA5")]
			[Address(RVA = "0xDAC350", Offset = "0xDAC350", VA = "0xDAC350", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001BA7")]
			[Address(RVA = "0xDAC60C", Offset = "0xDAC60C", VA = "0xDAC60C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400191E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static string localIp;

		[Token(Token = "0x400191F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static CV2_OwoManager Instance;

		[Token(Token = "0x4001920")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private OWOClient owoClient;

		[Token(Token = "0x4001921")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Transform hitZones;

		[Token(Token = "0x4001922")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Collider[] hitColliders;

		[Token(Token = "0x4001923")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool isConnected;

		[Token(Token = "0x4001924")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
		private bool isInitialized;

		[Token(Token = "0x4001925")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Weapon currentRightHandWeapon;

		[Token(Token = "0x4001926")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Weapon currentLeftHandWeapon;

		[Token(Token = "0x4001927")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private SensationId currentSensation;

		[Token(Token = "0x1700016E")]
		public bool IsConnected
		{
			[Token(Token = "0x6001B8E")]
			[Address(RVA = "0xDAB090", Offset = "0xDAB090", VA = "0xDAB090")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001B8F")]
		[Address(RVA = "0xDAB098", Offset = "0xDAB098", VA = "0xDAB098")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001B90")]
		[Address(RVA = "0xDAB0E8", Offset = "0xDAB0E8", VA = "0xDAB0E8")]
		private void Start()
		{
		}

		[Token(Token = "0x6001B91")]
		[Address(RVA = "0xDAB424", Offset = "0xDAB424", VA = "0xDAB424")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001B92")]
		[Address(RVA = "0xDAB3A4", Offset = "0xDAB3A4", VA = "0xDAB3A4")]
		public void Connect()
		{
		}

		[Token(Token = "0x6001B93")]
		[Address(RVA = "0xDAB730", Offset = "0xDAB730", VA = "0xDAB730")]
		public void AutoConnect()
		{
		}

		[Token(Token = "0x6001B94")]
		[Address(RVA = "0xDAB710", Offset = "0xDAB710", VA = "0xDAB710")]
		public void Disconnect()
		{
		}

		[Token(Token = "0x6001B95")]
		[Address(RVA = "0xDAB750", Offset = "0xDAB750", VA = "0xDAB750")]
		public void SetIp(string ip)
		{
		}

		[Token(Token = "0x6001B96")]
		[Address(RVA = "0xDAB7A8", Offset = "0xDAB7A8", VA = "0xDAB7A8")]
		private void OnConnected(string ip)
		{
		}

		[Token(Token = "0x6001B97")]
		[Address(RVA = "0xDABBCC", Offset = "0xDABBCC", VA = "0xDABBCC")]
		private void OnDisconnected()
		{
		}

		[Token(Token = "0x6001B98")]
		[Address(RVA = "0xDAB348", Offset = "0xDAB348", VA = "0xDAB348")]
		private OWOUDPClient GetOWOClient()
		{
			return null;
		}

		[Token(Token = "0x6001B99")]
		[Address(RVA = "0xDABC28", Offset = "0xDABC28", VA = "0xDABC28")]
		private void OnPlayerHit(Bullet bullet, Ray ray, RaycastHit hit)
		{
		}

		[Token(Token = "0x6001B9A")]
		[Address(RVA = "0xDABF68", Offset = "0xDABF68", VA = "0xDABF68")]
		private void OnWeaponFire(Weapon weapon, Bullet bullet)
		{
		}

		[Token(Token = "0x6001B9B")]
		[Address(RVA = "0xDAC164", Offset = "0xDAC164", VA = "0xDAC164")]
		private void OnExplosion(Vector3 position)
		{
		}

		[Token(Token = "0x6001B9C")]
		[Address(RVA = "0xDAC170", Offset = "0xDAC170", VA = "0xDAC170")]
		private void OnExplosionWave(Vector3 position)
		{
		}

		[Token(Token = "0x6001B9D")]
		[Address(RVA = "0xDAC17C", Offset = "0xDAC17C", VA = "0xDAC17C")]
		private void OnZombieAttack()
		{
		}

		[Token(Token = "0x6001B9E")]
		[Address(RVA = "0xDABE88", Offset = "0xDABE88", VA = "0xDABE88")]
		private void SendSensation(SensationId sensationId, OWOMuscle muscle)
		{
		}

		[Token(Token = "0x6001B9F")]
		[Address(RVA = "0xDAC0D4", Offset = "0xDAC0D4", VA = "0xDAC0D4")]
		[IteratorStateMachine(typeof(<FireAutomaticWeapon>d__28))]
		private IEnumerator FireAutomaticWeapon(Weapon weapon)
		{
			return null;
		}

		[Token(Token = "0x6001BA0")]
		[Address(RVA = "0xDAC1B0", Offset = "0xDAC1B0", VA = "0xDAC1B0")]
		private void SendContinuosSensation(DynamicSensation sensationId, OWOMuscle muscle)
		{
		}

		[Token(Token = "0x6001BA1")]
		[Address(RVA = "0xDAC288", Offset = "0xDAC288", VA = "0xDAC288")]
		private void StopSensation()
		{
		}

		[Token(Token = "0x6001BA2")]
		[Address(RVA = "0xDAC344", Offset = "0xDAC344", VA = "0xDAC344")]
		public CV2_OwoManager()
		{
		}
	}
	[Token(Token = "0x2000481")]
	public class CV2_OwoSettings : MonoBehaviour
	{
		[Token(Token = "0x400192D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Button autoConnectButton;

		[Token(Token = "0x400192E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Button disconnectButton;

		[Token(Token = "0x400192F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameObject connectedText;

		[Token(Token = "0x4001930")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public GameObject disconnectedText;

		[Token(Token = "0x4001931")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Keyboard keyboard;

		[Token(Token = "0x4001932")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool connected;

		[Token(Token = "0x6001BA9")]
		[Address(RVA = "0xDAC654", Offset = "0xDAC654", VA = "0xDAC654")]
		private void Start()
		{
		}

		[Token(Token = "0x6001BAA")]
		[Address(RVA = "0xDAC798", Offset = "0xDAC798", VA = "0xDAC798")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001BAB")]
		[Address(RVA = "0xDAC960", Offset = "0xDAC960", VA = "0xDAC960")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001BAC")]
		[Address(RVA = "0xDAC97C", Offset = "0xDAC97C", VA = "0xDAC97C")]
		private void Update()
		{
		}

		[Token(Token = "0x6001BAD")]
		[Address(RVA = "0xDAC79C", Offset = "0xDAC79C", VA = "0xDAC79C")]
		private void UpdateUI()
		{
		}

		[Token(Token = "0x6001BAE")]
		[Address(RVA = "0xDAC9F0", Offset = "0xDAC9F0", VA = "0xDAC9F0")]
		private void OnDisconnectButtonPressed()
		{
		}

		[Token(Token = "0x6001BAF")]
		[Address(RVA = "0xDACA50", Offset = "0xDACA50", VA = "0xDACA50")]
		private void OnAutoConnectButtonPressed()
		{
		}

		[Token(Token = "0x6001BB0")]
		[Address(RVA = "0xDACAB0", Offset = "0xDACAB0", VA = "0xDACAB0")]
		private void OnOkPressed()
		{
		}

		[Token(Token = "0x6001BB1")]
		[Address(RVA = "0xDACB34", Offset = "0xDACB34", VA = "0xDACB34")]
		public CV2_OwoSettings()
		{
		}
	}
	[Token(Token = "0x2000482")]
	public class PlayerBonus : Bonus
	{
		[Token(Token = "0x2000483")]
		public enum BonusType
		{
			[Token(Token = "0x4001940")]
			Weapon,
			[Token(Token = "0x4001941")]
			BulletTime,
			[Token(Token = "0x4001942")]
			Life,
			[Token(Token = "0x4001943")]
			Teammate,
			[Token(Token = "0x4001944")]
			Ammunition,
			[Token(Token = "0x4001945")]
			None
		}

		[Token(Token = "0x4001933")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static float BONUS_PROBABILITY;

		[Token(Token = "0x4001934")]
		private const float LIFE_PROBABILITY = 0.1f;

		[Token(Token = "0x4001935")]
		private const float BULLETTIME_PROBABILITY = 0.3f;

		[Token(Token = "0x4001936")]
		private const float TEAMMATE_PROBABILITY = 0.1f;

		[Token(Token = "0x4001937")]
		private const float SHOW_TIME = 5f;

		[Token(Token = "0x4001938")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static SumalabEvent OnBulletTime;

		[Token(Token = "0x4001939")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public BonusType bonusType;

		[Token(Token = "0x400193A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public WeaponModel weaponModel;

		[Token(Token = "0x400193B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Transform bonusParent;

		[Token(Token = "0x400193C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		protected Collider bonusCollider;

		[Token(Token = "0x400193D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		protected Transform icon;

		[Token(Token = "0x400193E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		protected Transform iconRing;

		[Token(Token = "0x6001BB2")]
		[Address(RVA = "0xDACB3C", Offset = "0xDACB3C", VA = "0xDACB3C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001BB3")]
		[Address(RVA = "0xDACBC8", Offset = "0xDACBC8", VA = "0xDACBC8", Slot = "4")]
		public override bool OnHit(Bullet bullet, Ray ray, RaycastHit hit)
		{
			return default(bool);
		}

		[Token(Token = "0x6001BB4")]
		[Address(RVA = "0xDAD60C", Offset = "0xDAD60C", VA = "0xDAD60C", Slot = "9")]
		public override void CatchBonus(Vector3 position)
		{
		}

		[Token(Token = "0x6001BB5")]
		[Address(RVA = "0xDA524C", Offset = "0xDA524C", VA = "0xDA524C")]
		public void ShowBonus(NPCWeapon weapon, BonusType _bonusType = BonusType.None)
		{
		}

		[Token(Token = "0x6001BB6")]
		[Address(RVA = "0xDA5A60", Offset = "0xDA5A60", VA = "0xDA5A60")]
		public bool ShowBonus(BonusType bonusType, WeaponModel weaponModel, float showTime = 5f)
		{
			return default(bool);
		}

		[Token(Token = "0x6001BB7")]
		[Address(RVA = "0xDADC34", Offset = "0xDADC34", VA = "0xDADC34")]
		private bool IsDualWieldAllowed()
		{
			return default(bool);
		}

		[Token(Token = "0x6001BB8")]
		[Address(RVA = "0xDACEA0", Offset = "0xDACEA0", VA = "0xDACEA0")]
		private void GetLifeBonus()
		{
		}

		[Token(Token = "0x6001BB9")]
		[Address(RVA = "0xDACF5C", Offset = "0xDACF5C", VA = "0xDACF5C")]
		private void GetBulletTimeBonus()
		{
		}

		[Token(Token = "0x6001BBA")]
		[Address(RVA = "0xDAD028", Offset = "0xDAD028", VA = "0xDAD028")]
		private void GetTeammateBonus()
		{
		}

		[Token(Token = "0x6001BBB")]
		[Address(RVA = "0xDAD530", Offset = "0xDAD530", VA = "0xDAD530")]
		private void GetAmmunitionBonus(SVRHand hand)
		{
		}

		[Token(Token = "0x6001BBC")]
		[Address(RVA = "0xDAD838", Offset = "0xDAD838", VA = "0xDAD838")]
		private bool AnyTeammateDead()
		{
			return default(bool);
		}

		[Token(Token = "0x6001BBD")]
		[Address(RVA = "0xDADD50", Offset = "0xDADD50", VA = "0xDADD50")]
		private void GetWeaponBonus(SVRHand hand)
		{
		}

		[Token(Token = "0x6001BBE")]
		[Address(RVA = "0xDADC04", Offset = "0xDADC04", VA = "0xDADC04")]
		public void Deactivate()
		{
		}

		[Token(Token = "0x6001BBF")]
		[Address(RVA = "0xDADE14", Offset = "0xDADE14", VA = "0xDADE14")]
		private void HideBonus()
		{
		}

		[Token(Token = "0x6001BC0")]
		[Address(RVA = "0xDADECC", Offset = "0xDADECC", VA = "0xDADECC")]
		public PlayerBonus()
		{
		}
	}
	[Token(Token = "0x2000486")]
	public class PokerAnimation : AnimationEventHandler
	{
		[Token(Token = "0x400194B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Animation pokerAnimation;

		[Token(Token = "0x400194C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public AudioSource animationSound;

		[Token(Token = "0x400194D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public CharacterLocationData[] pokerPlayers;

		[Token(Token = "0x400194E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public int locationId;

		[Token(Token = "0x6001BC6")]
		[Address(RVA = "0xDAE008", Offset = "0xDAE008", VA = "0xDAE008")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001BC7")]
		[Address(RVA = "0xDAE0D4", Offset = "0xDAE0D4", VA = "0xDAE0D4")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001BC8")]
		[Address(RVA = "0xDAE1A0", Offset = "0xDAE1A0", VA = "0xDAE1A0")]
		public void OnLocationActivated(int locationId)
		{
		}

		[Token(Token = "0x6001BC9")]
		[Address(RVA = "0xDAE294", Offset = "0xDAE294", VA = "0xDAE294", Slot = "6")]
		public override void OnEventString(string e)
		{
		}

		[Token(Token = "0x6001BCA")]
		[Address(RVA = "0xDAE5C4", Offset = "0xDAE5C4", VA = "0xDAE5C4")]
		private void HideBlackScreen()
		{
		}

		[Token(Token = "0x6001BCB")]
		[Address(RVA = "0xDAE64C", Offset = "0xDAE64C", VA = "0xDAE64C")]
		public PokerAnimation()
		{
		}
	}
	[Token(Token = "0x2000488")]
	public class PoliceStation : MonoBehaviour
	{
		[Token(Token = "0x4001950")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static PoliceStation Instance;

		[Token(Token = "0x4001951")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int locationId;

		[Token(Token = "0x4001952")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private MissionSelector missionSelector;

		[Token(Token = "0x4001953")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public UIButton shootingRange;

		[Token(Token = "0x4001954")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public RockFallController menuExplosion;

		[Token(Token = "0x4001955")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool m_missionStarted;

		[Token(Token = "0x4001956")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public SumalabEvent OnMissionStarted;

		[Token(Token = "0x4001957")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public SumalabEvent OnMissionSelected;

		[Token(Token = "0x4001958")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static int minOnlinePlayers;

		[Token(Token = "0x4001959")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private GameObject[] menuElements;

		[Token(Token = "0x6001BCE")]
		[Address(RVA = "0xDAE6B4", Offset = "0xDAE6B4", VA = "0xDAE6B4")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001BCF")]
		[Address(RVA = "0xDAE9DC", Offset = "0xDAE9DC", VA = "0xDAE9DC")]
		private void OnNetworkControllerConnected()
		{
		}

		[Token(Token = "0x6001BD0")]
		[Address(RVA = "0xDAEA08", Offset = "0xDAEA08", VA = "0xDAEA08")]
		private void OnNetworkControllerDisconnected(DisconnectCause cause)
		{
		}

		[Token(Token = "0x6001BD1")]
		[Address(RVA = "0xDAEA34", Offset = "0xDAEA34", VA = "0xDAEA34")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001BD2")]
		[Address(RVA = "0xDAEC58", Offset = "0xDAEC58", VA = "0xDAEC58")]
		private void OnLocationActivated(int locationId)
		{
		}

		[Token(Token = "0x6001BD3")]
		[Address(RVA = "0xDAEF64", Offset = "0xDAEF64", VA = "0xDAEF64")]
		private void OnLocationDeactivate(int locationId)
		{
		}

		[Token(Token = "0x6001BD4")]
		[Address(RVA = "0xDAF1A0", Offset = "0xDAF1A0", VA = "0xDAF1A0")]
		public void SetMissionSelector(MissionSelector missionSelector)
		{
		}

		[Token(Token = "0x6001BD5")]
		[Address(RVA = "0xDAE9C0", Offset = "0xDAE9C0", VA = "0xDAE9C0")]
		private void OnMissionSelectionChanged()
		{
		}

		[Token(Token = "0x6001BD6")]
		[Address(RVA = "0xDAF37C", Offset = "0xDAF37C", VA = "0xDAF37C")]
		public MissionSelector GetMissionSelector()
		{
			return null;
		}

		[Token(Token = "0x6001BD7")]
		[Address(RVA = "0xDAF384", Offset = "0xDAF384", VA = "0xDAF384")]
		public void StartMission()
		{
		}

		[Token(Token = "0x6001BD8")]
		[Address(RVA = "0xDAFB6C", Offset = "0xDAFB6C", VA = "0xDAFB6C")]
		public bool IsMissionStarted()
		{
			return default(bool);
		}

		[Token(Token = "0x6001BD9")]
		[Address(RVA = "0xDAF404", Offset = "0xDAF404", VA = "0xDAF404")]
		public void StartMission(string mission, int iOnlinePlayers, GameManager.Difficulty difficulty)
		{
		}

		[Token(Token = "0x6001BDA")]
		[Address(RVA = "0xDAFB7C", Offset = "0xDAFB7C", VA = "0xDAFB7C")]
		private void StartOfficeMission()
		{
		}

		[Token(Token = "0x6001BDB")]
		[Address(RVA = "0xDB0944", Offset = "0xDB0944", VA = "0xDB0944")]
		private void LoadMission(string mission)
		{
		}

		[Token(Token = "0x6001BDC")]
		[Address(RVA = "0xDB0A14", Offset = "0xDB0A14", VA = "0xDB0A14")]
		public void EnableUI()
		{
		}

		[Token(Token = "0x6001BDD")]
		[Address(RVA = "0xDB02AC", Offset = "0xDB02AC", VA = "0xDB02AC")]
		public void DisableUI(bool explode = true, [Optional] GameObject except)
		{
		}

		[Token(Token = "0x6001BDE")]
		[Address(RVA = "0xDB0BC4", Offset = "0xDB0BC4", VA = "0xDB0BC4")]
		private void DisableRigidBody(Rigidbody rb)
		{
		}

		[Token(Token = "0x6001BDF")]
		[Address(RVA = "0xDB0C04", Offset = "0xDB0C04", VA = "0xDB0C04")]
		public PoliceStation()
		{
		}
	}
	[Token(Token = "0x200048C")]
	public class RockFallController : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x200048D")]
		public class DestructibleAnimationGroup
		{
			[Token(Token = "0x4001970")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public List<DestructibleAnimation> destructibles;

			[Token(Token = "0x6001BF4")]
			[Address(RVA = "0xDB1B40", Offset = "0xDB1B40", VA = "0xDB1B40")]
			public DestructibleAnimationGroup()
			{
			}
		}

		[Token(Token = "0x200048E")]
		[CompilerGenerated]
		private sealed class <DoShakeCoroutine>d__23 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001971")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001972")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001973")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public RockFallController <>4__this;

			[Token(Token = "0x17000171")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001BF8")]
				[Address(RVA = "0xDB1F38", Offset = "0xDB1F38", VA = "0xDB1F38", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000172")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001BFA")]
				[Address(RVA = "0xDB1F80", Offset = "0xDB1F80", VA = "0xDB1F80", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001BF5")]
			[Address(RVA = "0xDB1844", Offset = "0xDB1844", VA = "0xDB1844")]
			[DebuggerHidden]
			public <DoShakeCoroutine>d__23(int <>1__state)
			{
			}

			[Token(Token = "0x6001BF6")]
			[Address(RVA = "0xDB1B48", Offset = "0xDB1B48", VA = "0xDB1B48", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001BF7")]
			[Address(RVA = "0xDB1B4C", Offset = "0xDB1B4C", VA = "0xDB1B4C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001BF9")]
			[Address(RVA = "0xDB1F40", Offset = "0xDB1F40", VA = "0xDB1F40", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200048F")]
		[CompilerGenerated]
		private sealed class <DoRockFalls>d__24 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001974")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001975")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001976")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public RockFallController <>4__this;

			[Token(Token = "0x4001977")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private List<Vector3>.Enumerator <>7__wrap1;

			[Token(Token = "0x17000173")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001BFF")]
				[Address(RVA = "0xDB2294", Offset = "0xDB2294", VA = "0xDB2294", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000174")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001C01")]
				[Address(RVA = "0xDB22DC", Offset = "0xDB22DC", VA = "0xDB22DC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001BFB")]
			[Address(RVA = "0xDB18E0", Offset = "0xDB18E0", VA = "0xDB18E0")]
			[DebuggerHidden]
			public <DoRockFalls>d__24(int <>1__state)
			{
			}

			[Token(Token = "0x6001BFC")]
			[Address(RVA = "0xDB1F88", Offset = "0xDB1F88", VA = "0xDB1F88", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001BFD")]
			[Address(RVA = "0xDB1FA4", Offset = "0xDB1FA4", VA = "0xDB1FA4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001BFE")]
			[Address(RVA = "0xDB2244", Offset = "0xDB2244", VA = "0xDB2244")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x6001C00")]
			[Address(RVA = "0xDB229C", Offset = "0xDB229C", VA = "0xDB229C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001960")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int locationId;

		[Token(Token = "0x4001961")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public bool autoEnable;

		[Token(Token = "0x4001962")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string rockFallEffectPool;

		[Token(Token = "0x4001963")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string cameraShakePool;

		[Token(Token = "0x4001964")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public int minRockFallPoints;

		[Token(Token = "0x4001965")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public int maxRockFallPoints;

		[Token(Token = "0x4001966")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float shakeMinInterval;

		[Token(Token = "0x4001967")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float shakeMaxInterval;

		[Token(Token = "0x4001968")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float shakingTime;

		[Token(Token = "0x4001969")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public List<DestructibleAnimationGroup> destructibleAnimationGroups;

		[Token(Token = "0x400196A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public List<GameObject> extraFXElementsGroup;

		[Token(Token = "0x400196B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Animation playerShakeAnimation;

		[Token(Token = "0x400196C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Vector3[] rockFallPoints;

		[Token(Token = "0x400196D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private bool enable;

		[Token(Token = "0x400196E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private int groupIndex;

		[Token(Token = "0x400196F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public bool loop;

		[Token(Token = "0x6001BE8")]
		[Address(RVA = "0xDB0E14", Offset = "0xDB0E14", VA = "0xDB0E14")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001BE9")]
		[Address(RVA = "0xDB0F98", Offset = "0xDB0F98", VA = "0xDB0F98")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001BEA")]
		[Address(RVA = "0xDB1574", Offset = "0xDB1574", VA = "0xDB1574")]
		private void OnLocationActivated(int locationId)
		{
		}

		[Token(Token = "0x6001BEB")]
		[Address(RVA = "0xDB181C", Offset = "0xDB181C", VA = "0xDB181C")]
		private void OnLocationDeactivated(int locationId)
		{
		}

		[Token(Token = "0x6001BEC")]
		[Address(RVA = "0xDB1830", Offset = "0xDB1830", VA = "0xDB1830")]
		private void OnLocationReactivated(int locationId)
		{
		}

		[Token(Token = "0x6001BED")]
		[Address(RVA = "0xDB1140", Offset = "0xDB1140", VA = "0xDB1140")]
		private void Disable()
		{
		}

		[Token(Token = "0x6001BEE")]
		[Address(RVA = "0xDB0808", Offset = "0xDB0808", VA = "0xDB0808")]
		public void DoShake(bool loop)
		{
		}

		[Token(Token = "0x6001BEF")]
		[Address(RVA = "0xDB17A8", Offset = "0xDB17A8", VA = "0xDB17A8")]
		[IteratorStateMachine(typeof(<DoShakeCoroutine>d__23))]
		private IEnumerator DoShakeCoroutine()
		{
			return null;
		}

		[Token(Token = "0x6001BF0")]
		[Address(RVA = "0xDB186C", Offset = "0xDB186C", VA = "0xDB186C")]
		[IteratorStateMachine(typeof(<DoRockFalls>d__24))]
		private IEnumerator DoRockFalls()
		{
			return null;
		}

		[Token(Token = "0x6001BF1")]
		[Address(RVA = "0xDB1908", Offset = "0xDB1908", VA = "0xDB1908")]
		private List<Vector3> GetRockFallPoints()
		{
			return null;
		}

		[Token(Token = "0x6001BF2")]
		[Address(RVA = "0xDB19EC", Offset = "0xDB19EC", VA = "0xDB19EC")]
		private void OnDrawGizmos()
		{
		}

		[Token(Token = "0x6001BF3")]
		[Address(RVA = "0xDB1AD4", Offset = "0xDB1AD4", VA = "0xDB1AD4")]
		public RockFallController()
		{
		}
	}
	[Token(Token = "0x2000490")]
	public class SamuraiController : ThiefPoliceController
	{
		[Token(Token = "0x4001978")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x278")]
		public AudioClip[] hitSounds;

		[Token(Token = "0x4001979")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x280")]
		public AudioClip deadAudio;

		[Token(Token = "0x6001C02")]
		[Address(RVA = "0xDB22E4", Offset = "0xDB22E4", VA = "0xDB22E4", Slot = "4")]
		public override bool OnHit(Bullet bullet, Ray ray, RaycastHit hit)
		{
			return default(bool);
		}

		[Token(Token = "0x6001C03")]
		[Address(RVA = "0xDB232C", Offset = "0xDB232C", VA = "0xDB232C")]
		public SamuraiController()
		{
		}
	}
	[Token(Token = "0x2000491")]
	public class ActionTerminator : MonoBehaviour
	{
		[Token(Token = "0x400197A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public CharacterLocationData[] charactersDead;

		[Token(Token = "0x400197B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CharacterAction[] actionsCompleted;

		[Token(Token = "0x400197C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int characterDeadsCount;

		[Token(Token = "0x400197D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private int actionsCompletedCount;

		[Token(Token = "0x400197E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private CharacterAction action;

		[Token(Token = "0x6001C04")]
		[Address(RVA = "0xDB2384", Offset = "0xDB2384", VA = "0xDB2384")]
		public void Execute(CharacterAction action)
		{
		}

		[Token(Token = "0x6001C05")]
		[Address(RVA = "0xDB252C", Offset = "0xDB252C", VA = "0xDB252C")]
		private void OnCharacterDead()
		{
		}

		[Token(Token = "0x6001C06")]
		[Address(RVA = "0xDB253C", Offset = "0xDB253C", VA = "0xDB253C")]
		private void OnActionComplete()
		{
		}

		[Token(Token = "0x6001C07")]
		[Address(RVA = "0xDB254C", Offset = "0xDB254C", VA = "0xDB254C")]
		private void OnConditionComplete()
		{
		}

		[Token(Token = "0x6001C08")]
		[Address(RVA = "0xDB257C", Offset = "0xDB257C", VA = "0xDB257C")]
		public ActionTerminator()
		{
		}
	}
	[Token(Token = "0x2000492")]
	public class AnimationModule : CharacterActionModule
	{
		[Serializable]
		[Token(Token = "0x2000493")]
		public class FloatCondition
		{
			[Token(Token = "0x400198B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string name;

			[Token(Token = "0x400198C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public float value;

			[Token(Token = "0x6001C13")]
			[Address(RVA = "0xDB40F4", Offset = "0xDB40F4", VA = "0xDB40F4")]
			public FloatCondition()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000494")]
		public class IntCondition
		{
			[Token(Token = "0x400198D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string name;

			[Token(Token = "0x400198E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public int value;

			[Token(Token = "0x6001C14")]
			[Address(RVA = "0xDB40FC", Offset = "0xDB40FC", VA = "0xDB40FC")]
			public IntCondition()
			{
			}
		}

		[Token(Token = "0x400197F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public string finalState;

		[Token(Token = "0x4001980")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public AudioClip audioClip;

		[Token(Token = "0x4001981")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public string[] boolConditions;

		[Token(Token = "0x4001982")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public string[] triggerConditions;

		[Token(Token = "0x4001983")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public FloatCondition[] floatConditions;

		[Token(Token = "0x4001984")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public IntCondition[] intConditions;

		[Token(Token = "0x4001985")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public bool enableRootMotion;

		[Token(Token = "0x4001986")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x71")]
		public bool showWeapon;

		[Token(Token = "0x4001987")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x72")]
		public bool enableEvents;

		[Token(Token = "0x4001988")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x73")]
		public bool localReset;

		[Token(Token = "0x4001989")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		public bool nextActionUpdatePosition;

		[Token(Token = "0x400198A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public float completeDelay;

		[Token(Token = "0x6001C09")]
		[Address(RVA = "0xDB2584", Offset = "0xDB2584", VA = "0xDB2584", Slot = "4")]
		public override void Activate(CommonCharacterController character)
		{
		}

		[Token(Token = "0x6001C0A")]
		[Address(RVA = "0xDB2A98", Offset = "0xDB2A98", VA = "0xDB2A98", Slot = "6")]
		public override void Complete()
		{
		}

		[Token(Token = "0x6001C0B")]
		[Address(RVA = "0xDB2CA4", Offset = "0xDB2CA4", VA = "0xDB2CA4", Slot = "5")]
		public override void Deactivate()
		{
		}

		[Token(Token = "0x6001C0C")]
		[Address(RVA = "0xDB2BB4", Offset = "0xDB2BB4", VA = "0xDB2BB4")]
		private void finishModule()
		{
		}

		[Token(Token = "0x6001C0D")]
		[Address(RVA = "0xDB2D14", Offset = "0xDB2D14", VA = "0xDB2D14")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6001C0E")]
		[Address(RVA = "0xDB2E7C", Offset = "0xDB2E7C", VA = "0xDB2E7C")]
		private void OnAnimationEvent(string e)
		{
		}

		[Token(Token = "0x6001C0F")]
		[Address(RVA = "0xDB2F2C", Offset = "0xDB2F2C", VA = "0xDB2F2C")]
		private void ShowWeapon()
		{
		}

		[Token(Token = "0x6001C10")]
		[Address(RVA = "0xDB2FFC", Offset = "0xDB2FFC", VA = "0xDB2FFC")]
		private void HideWeapon()
		{
		}

		[Token(Token = "0x6001C11")]
		[Address(RVA = "0xDB30CC", Offset = "0xDB30CC", VA = "0xDB30CC")]
		public AnimationModule()
		{
		}
	}
	[Token(Token = "0x2000495")]
	public class AntonioMontoyaLaboratoryModule : CharacterActionModule
	{
		[Token(Token = "0x2000496")]
		[CompilerGenerated]
		private sealed class <StartActionSequence>d__22 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400199E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400199F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40019A0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public AntonioMontoyaLaboratoryModule <>4__this;

			[Token(Token = "0x17000175")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001C29")]
				[Address(RVA = "0xDB55CC", Offset = "0xDB55CC", VA = "0xDB55CC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000176")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001C2B")]
				[Address(RVA = "0xDB5614", Offset = "0xDB5614", VA = "0xDB5614", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001C26")]
			[Address(RVA = "0xDB4CD8", Offset = "0xDB4CD8", VA = "0xDB4CD8")]
			[DebuggerHidden]
			public <StartActionSequence>d__22(int <>1__state)
			{
			}

			[Token(Token = "0x6001C27")]
			[Address(RVA = "0xDB53F8", Offset = "0xDB53F8", VA = "0xDB53F8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001C28")]
			[Address(RVA = "0xDB53FC", Offset = "0xDB53FC", VA = "0xDB53FC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001C2A")]
			[Address(RVA = "0xDB55D4", Offset = "0xDB55D4", VA = "0xDB55D4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000497")]
		[CompilerGenerated]
		private sealed class <PlayDieAudioCoroutine>d__23 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40019A1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40019A2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40019A3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public AntonioMontoyaLaboratoryModule <>4__this;

			[Token(Token = "0x17000177")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001C2F")]
				[Address(RVA = "0xDB587C", Offset = "0xDB587C", VA = "0xDB587C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000178")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001C31")]
				[Address(RVA = "0xDB58C4", Offset = "0xDB58C4", VA = "0xDB58C4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001C2C")]
			[Address(RVA = "0xDB4D00", Offset = "0xDB4D00", VA = "0xDB4D00")]
			[DebuggerHidden]
			public <PlayDieAudioCoroutine>d__23(int <>1__state)
			{
			}

			[Token(Token = "0x6001C2D")]
			[Address(RVA = "0xDB561C", Offset = "0xDB561C", VA = "0xDB561C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001C2E")]
			[Address(RVA = "0xDB5620", Offset = "0xDB5620", VA = "0xDB5620", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001C30")]
			[Address(RVA = "0xDB5884", Offset = "0xDB5884", VA = "0xDB5884", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400198F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public RockFallController rockFallController;

		[Token(Token = "0x4001990")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public AudioClip bulletTimeClip;

		[Token(Token = "0x4001991")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public AudioClip helloAgainClip;

		[Token(Token = "0x4001992")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public AudioClip lookMyEyesClip;

		[Token(Token = "0x4001993")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public AudioClip dieClip;

		[Token(Token = "0x4001994")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public AudioClip clacclacClip;

		[Token(Token = "0x4001995")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public AudioClip[] injuredClips;

		[Token(Token = "0x4001996")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public AudioClip[] notOkClips;

		[Token(Token = "0x4001997")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public AudioClip[] notCoolClips;

		[Token(Token = "0x4001998")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public Transform barrelsShotTarget;

		[NonSerialized]
		[Token(Token = "0x4001999")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public new AntonioMontoyaController character;

		[Token(Token = "0x400199A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private HitReaction hitReaction;

		[Token(Token = "0x400199B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private bool dieAudioPlaying;

		[Token(Token = "0x400199C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA1")]
		private bool shotExplosiveBarrels;

		[Token(Token = "0x400199D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		private int hits;

		[Token(Token = "0x6001C15")]
		[Address(RVA = "0xDB4104", Offset = "0xDB4104", VA = "0xDB4104")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001C16")]
		[Address(RVA = "0xDB4170", Offset = "0xDB4170", VA = "0xDB4170")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001C17")]
		[Address(RVA = "0xDB41DC", Offset = "0xDB41DC", VA = "0xDB41DC")]
		private void Enable()
		{
		}

		[Token(Token = "0x6001C18")]
		[Address(RVA = "0xDB4248", Offset = "0xDB4248", VA = "0xDB4248", Slot = "4")]
		public override void Activate(CommonCharacterController character)
		{
		}

		[Token(Token = "0x6001C19")]
		[Address(RVA = "0xDB4714", Offset = "0xDB4714", VA = "0xDB4714")]
		private void CustomNetworkEvent(string strName, object[] parameters)
		{
		}

		[Token(Token = "0x6001C1A")]
		[Address(RVA = "0xDB47E8", Offset = "0xDB47E8", VA = "0xDB47E8")]
		public bool OnHit(Bullet bullet, Ray ray, RaycastHit hit)
		{
			return default(bool);
		}

		[Token(Token = "0x6001C1B")]
		[Address(RVA = "0xDB4B60", Offset = "0xDB4B60", VA = "0xDB4B60")]
		private void PlayHitSound()
		{
		}

		[Token(Token = "0x6001C1C")]
		[Address(RVA = "0xDB462C", Offset = "0xDB462C", VA = "0xDB462C")]
		[IteratorStateMachine(typeof(<StartActionSequence>d__22))]
		private IEnumerator StartActionSequence()
		{
			return null;
		}

		[Token(Token = "0x6001C1D")]
		[Address(RVA = "0xDB46A0", Offset = "0xDB46A0", VA = "0xDB46A0")]
		[IteratorStateMachine(typeof(<PlayDieAudioCoroutine>d__23))]
		private IEnumerator PlayDieAudioCoroutine()
		{
			return null;
		}

		[Token(Token = "0x6001C1E")]
		[Address(RVA = "0xDB4D28", Offset = "0xDB4D28", VA = "0xDB4D28")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6001C1F")]
		[Address(RVA = "0xDB4E68", Offset = "0xDB4E68", VA = "0xDB4E68")]
		private void Update()
		{
		}

		[Token(Token = "0x6001C20")]
		[Address(RVA = "0xDB4FBC", Offset = "0xDB4FBC", VA = "0xDB4FBC")]
		private void PlayDieAudio(bool bRemote = false)
		{
		}

		[Token(Token = "0x6001C21")]
		[Address(RVA = "0xDB511C", Offset = "0xDB511C", VA = "0xDB511C")]
		private void ShowRPG(bool bRemote = false)
		{
		}

		[Token(Token = "0x6001C22")]
		[Address(RVA = "0xDB4C74", Offset = "0xDB4C74", VA = "0xDB4C74")]
		private void PlaySound(AudioClip clip)
		{
		}

		[Token(Token = "0x6001C23")]
		[Address(RVA = "0xDB5328", Offset = "0xDB5328", VA = "0xDB5328")]
		private void WalkieTalkieRPG()
		{
		}

		[Token(Token = "0x6001C24")]
		[Address(RVA = "0xDB5380", Offset = "0xDB5380", VA = "0xDB5380")]
		public AntonioMontoyaLaboratoryModule()
		{
		}
	}
	[Token(Token = "0x2000498")]
	public class AntonioMontoyaMeetingModule : CharacterActionModule
	{
		[Token(Token = "0x40019A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public AudioClip audioClip;

		[Token(Token = "0x40019A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public AimTarget currentTarget;

		[NonSerialized]
		[Token(Token = "0x40019A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public new ThiefPoliceController character;

		[Token(Token = "0x40019A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private float ikLerpTarget;

		[Token(Token = "0x40019A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private float layerLerpTarget;

		[Token(Token = "0x40019A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public float switchSpeed;

		[Token(Token = "0x40019AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private float switchTargetSpeed;

		[Token(Token = "0x40019AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Vector3 offset;

		[Token(Token = "0x40019AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private bool targetChanged;

		[Token(Token = "0x40019AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Vector3 unitSphere;

		[Token(Token = "0x40019AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private float minRadius;

		[Token(Token = "0x40019AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private float maxRadius;

		[Token(Token = "0x40019B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private float minDistance;

		[Token(Token = "0x40019B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private float maxDistance;

		[Token(Token = "0x40019B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		private float shot;

		[Token(Token = "0x6001C32")]
		[Address(RVA = "0xDB58CC", Offset = "0xDB58CC", VA = "0xDB58CC")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001C33")]
		[Address(RVA = "0xDB5938", Offset = "0xDB5938", VA = "0xDB5938")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001C34")]
		[Address(RVA = "0xDB59A4", Offset = "0xDB59A4", VA = "0xDB59A4", Slot = "4")]
		public override void Activate(CommonCharacterController character)
		{
		}

		[Token(Token = "0x6001C35")]
		[Address(RVA = "0xDB5BD8", Offset = "0xDB5BD8", VA = "0xDB5BD8")]
		private void CustomNetworkEvent(string strName, object[] parameters)
		{
		}

		[Token(Token = "0x6001C36")]
		[Address(RVA = "0xDB5CAC", Offset = "0xDB5CAC", VA = "0xDB5CAC")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6001C37")]
		[Address(RVA = "0xDB5D1C", Offset = "0xDB5D1C", VA = "0xDB5D1C")]
		private void Update()
		{
		}

		[Token(Token = "0x6001C38")]
		[Address(RVA = "0xDB62C0", Offset = "0xDB62C0", VA = "0xDB62C0")]
		private void ResetAccuracy()
		{
		}

		[Token(Token = "0x6001C39")]
		[Address(RVA = "0xDB6000", Offset = "0xDB6000", VA = "0xDB6000")]
		private void UpdateAccuracy()
		{
		}

		[Token(Token = "0x6001C3A")]
		[Address(RVA = "0xDB648C", Offset = "0xDB648C", VA = "0xDB648C")]
		private void UpdateAccuracyRemote(Vector3 offset)
		{
		}

		[Token(Token = "0x6001C3B")]
		[Address(RVA = "0xDB5B74", Offset = "0xDB5B74", VA = "0xDB5B74")]
		private void PlaySound(AudioClip clip)
		{
		}

		[Token(Token = "0x6001C3C")]
		[Address(RVA = "0xDB6498", Offset = "0xDB6498", VA = "0xDB6498")]
		public AntonioMontoyaMeetingModule()
		{
		}
	}
	[Token(Token = "0x2000499")]
	public class AntonioMontoyaModule : CharacterActionModule
	{
		[Token(Token = "0x200049A")]
		private class AnimationData
		{
			[Token(Token = "0x40019DB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public float minTimeIK;

			[Token(Token = "0x40019DC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public float maxTimeIK;

			[Token(Token = "0x40019DD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public float minTimeLayer;

			[Token(Token = "0x40019DE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public float maxTimeLayer;

			[Token(Token = "0x40019DF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float minStateTime;

			[Token(Token = "0x40019E0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public float maxStateTime;

			[Token(Token = "0x40019E1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Action onStateEnter;

			[Token(Token = "0x40019E2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Action onStateComplete;

			[Token(Token = "0x6001C5E")]
			[Address(RVA = "0xDBB030", Offset = "0xDBB030", VA = "0xDBB030")]
			public AnimationData(float minTimeIK, float maxTimeIK, float minTimeLayer, float maxTimeLayer, float minStateTime, float maxStateTime, Action onStateEnter, Action onStateComplete)
			{
			}
		}

		[NonSerialized]
		[Token(Token = "0x40019B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public new AntonioMontoyaController character;

		[Token(Token = "0x40019B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private HitReaction hitReaction;

		[Token(Token = "0x40019B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public SumalabEvent OnSpeech;

		[Token(Token = "0x40019B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[Header("Audios")]
		public AudioClip speech1;

		[Token(Token = "0x40019B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public AudioClip speech2;

		[Token(Token = "0x40019B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public AudioClip speech3;

		[Token(Token = "0x40019B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public AudioClip deathSpeech;

		[Token(Token = "0x40019BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public AudioClip[] stillHereSounds;

		[Token(Token = "0x40019BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public AudioClip[] randomSounds;

		[Token(Token = "0x40019BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[Header("Grenade Targets")]
		public AimTarget statue;

		[Token(Token = "0x40019BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public AimTarget wall;

		[Token(Token = "0x40019BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public GameObject detonator;

		[Token(Token = "0x40019BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public DestructibleAnimation roofGlass;

		[Token(Token = "0x40019C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public RockFallController rockFall;

		[Token(Token = "0x40019C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public Mansion_Alarm alarm;

		[Token(Token = "0x40019C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private float ikLerpTarget;

		[Token(Token = "0x40019C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		private float layerLerpTarget;

		[Token(Token = "0x40019C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private float currentAnimTime;

		[Token(Token = "0x40019C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		private float currentStateTime;

		[Token(Token = "0x40019C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private float stateTime;

		[Token(Token = "0x40019C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		private int currentAnimState;

		[Token(Token = "0x40019C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private bool launchGrenade;

		[Token(Token = "0x40019C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD1")]
		private bool targetChanged;

		[Token(Token = "0x40019CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		[SerializeField]
		[Header("Debug")]
		private Vector3 offset;

		[Token(Token = "0x40019CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[SerializeField]
		private AimTarget currentTarget;

		[Token(Token = "0x40019CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private AnimationData currentAnimationData;

		[Token(Token = "0x40019CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private Dictionary<int, AnimationData> animations;

		[Token(Token = "0x40019CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		public float targetChangeProbability;

		[Token(Token = "0x40019CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
		public bool hit1;

		[Token(Token = "0x40019D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xFD")]
		public bool hit2;

		[Token(Token = "0x40019D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xFE")]
		public bool hit3;

		[Token(Token = "0x40019D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xFF")]
		public bool waitForSpeech;

		[Token(Token = "0x40019D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		private List<AimTarget> targets;

		[Token(Token = "0x40019D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		private Vector3 unitSphere;

		[Token(Token = "0x40019D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
		private float minRadius;

		[Token(Token = "0x40019D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		private float maxRadius;

		[Token(Token = "0x40019D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
		private float minDistance;

		[Token(Token = "0x40019D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		private float maxDistance;

		[Token(Token = "0x40019D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
		private float shot;

		[Token(Token = "0x40019DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		private int bonusId;

		[Token(Token = "0x6001C3D")]
		[Address(RVA = "0xDB64C0", Offset = "0xDB64C0", VA = "0xDB64C0")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001C3E")]
		[Address(RVA = "0xDB652C", Offset = "0xDB652C", VA = "0xDB652C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001C3F")]
		[Address(RVA = "0xDB6598", Offset = "0xDB6598", VA = "0xDB6598")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001C40")]
		[Address(RVA = "0xDB6604", Offset = "0xDB6604", VA = "0xDB6604", Slot = "4")]
		public override void Activate(CommonCharacterController character)
		{
		}

		[Token(Token = "0x6001C41")]
		[Address(RVA = "0xDB7A08", Offset = "0xDB7A08", VA = "0xDB7A08")]
		private void CustomNetworkEvent(string strName, object[] parameters)
		{
		}

		[Token(Token = "0x6001C42")]
		[Address(RVA = "0xDB7ADC", Offset = "0xDB7ADC", VA = "0xDB7ADC")]
		public bool OnHit(Bullet bullet, Ray ray, RaycastHit hit)
		{
			return default(bool);
		}

		[Token(Token = "0x6001C43")]
		[Address(RVA = "0xDB8040", Offset = "0xDB8040", VA = "0xDB8040")]
		private void TriggerHit(string hit, bool bRemote = false, int lifes = -1)
		{
		}

		[Token(Token = "0x6001C44")]
		[Address(RVA = "0xDB8350", Offset = "0xDB8350", VA = "0xDB8350")]
		private void TriggerSpeech(string speech, bool bRemote = false, int lifes = -1)
		{
		}

		[Token(Token = "0x6001C45")]
		[Address(RVA = "0xDB8900", Offset = "0xDB8900", VA = "0xDB8900")]
		private void ShowBonus(bool bRemote = false)
		{
		}

		[Token(Token = "0x6001C46")]
		[Address(RVA = "0xDB8D70", Offset = "0xDB8D70", VA = "0xDB8D70")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6001C47")]
		[Address(RVA = "0xDB8AE4", Offset = "0xDB8AE4", VA = "0xDB8AE4")]
		private string getAnimationStateName()
		{
			return null;
		}

		[Token(Token = "0x6001C48")]
		[Address(RVA = "0xDB90B0", Offset = "0xDB90B0", VA = "0xDB90B0")]
		private void Update()
		{
		}

		[Token(Token = "0x6001C49")]
		[Address(RVA = "0xDBA044", Offset = "0xDBA044", VA = "0xDBA044")]
		private void AnimationStateCompleted()
		{
		}

		[Token(Token = "0x6001C4A")]
		[Address(RVA = "0xDB725C", Offset = "0xDB725C", VA = "0xDB725C")]
		private void SetTarget()
		{
		}

		[Token(Token = "0x6001C4B")]
		[Address(RVA = "0xDBA08C", Offset = "0xDBA08C", VA = "0xDBA08C")]
		private void SetTarget(AimTarget newTarget)
		{
		}

		[Token(Token = "0x6001C4C")]
		[Address(RVA = "0xDBA1A4", Offset = "0xDBA1A4", VA = "0xDBA1A4")]
		private void UpdateTarget(string strTargetName)
		{
		}

		[Token(Token = "0x6001C4D")]
		[Address(RVA = "0xDB773C", Offset = "0xDB773C", VA = "0xDB773C")]
		private void UpdateAccuracy()
		{
		}

		[Token(Token = "0x6001C4E")]
		[Address(RVA = "0xDBA36C", Offset = "0xDBA36C", VA = "0xDBA36C")]
		private void UpdateAccuracyRemote(Vector3 offset)
		{
		}

		[Token(Token = "0x6001C4F")]
		[Address(RVA = "0xDB99C8", Offset = "0xDB99C8", VA = "0xDB99C8")]
		private void ResetAccuracy()
		{
		}

		[Token(Token = "0x6001C50")]
		[Address(RVA = "0xDBA378", Offset = "0xDBA378", VA = "0xDBA378")]
		private void OnAnimationEvent(string eventName)
		{
		}

		[Token(Token = "0x6001C51")]
		[Address(RVA = "0xDBAD24", Offset = "0xDBAD24", VA = "0xDBAD24")]
		private void killAllEnemies()
		{
		}

		[Token(Token = "0x6001C52")]
		[Address(RVA = "0xDBAB6C", Offset = "0xDBAB6C", VA = "0xDBAB6C")]
		private void PlayRandomSound()
		{
		}

		[Token(Token = "0x6001C53")]
		[Address(RVA = "0xDBAFF0", Offset = "0xDBAFF0", VA = "0xDBAFF0")]
		private void PlayRandomSoundImpl(int i)
		{
		}

		[Token(Token = "0x6001C54")]
		[Address(RVA = "0xDB9850", Offset = "0xDB9850", VA = "0xDB9850")]
		private void SetAnimationData(int animationState)
		{
		}

		[Token(Token = "0x6001C55")]
		[Address(RVA = "0xDB69BC", Offset = "0xDB69BC", VA = "0xDB69BC")]
		private void SetAnimationsData()
		{
		}

		[Token(Token = "0x6001C56")]
		[Address(RVA = "0xDBB0B0", Offset = "0xDBB0B0", VA = "0xDBB0B0")]
		private void OnCrouchingStateComplete()
		{
		}

		[Token(Token = "0x6001C57")]
		[Address(RVA = "0xDBB460", Offset = "0xDBB460", VA = "0xDBB460")]
		private void UpdateAnimationStateFromCrouching(string strAnimationState, bool bTrigger)
		{
		}

		[Token(Token = "0x6001C58")]
		[Address(RVA = "0xDB8B6C", Offset = "0xDB8B6C", VA = "0xDB8B6C")]
		private void ShowAmmunitionBonus(Vector3 delta)
		{
		}

		[Token(Token = "0x6001C59")]
		[Address(RVA = "0xDBB81C", Offset = "0xDBB81C", VA = "0xDBB81C")]
		public AntonioMontoyaModule()
		{
		}
	}
	[Token(Token = "0x200049D")]
	public class CharacterAction : MonoBehaviour
	{
		[Token(Token = "0x40019E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[HideInInspector]
		public UnityEvent OnComplete;

		[Token(Token = "0x40019E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CommonCharacterController character;

		[Token(Token = "0x40019EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public CharacterActionModule characterActionModule;

		[Token(Token = "0x40019EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public CommonCharacterController[] startActionOnDead;

		[Token(Token = "0x40019EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public bool removeOnComplete;

		[Token(Token = "0x40019ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
		public bool aimableDuringAction;

		[Token(Token = "0x40019EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3A")]
		public bool characterActiveBeforeStartAction;

		[Token(Token = "0x40019EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float startDelay;

		[Token(Token = "0x40019F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float pendingStartDelay;

		[Token(Token = "0x40019F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public float timeToComplete;

		[Token(Token = "0x40019F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public float timeToCompleteRandomEnd;

		[Token(Token = "0x40019F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private bool actionActive;

		[Token(Token = "0x40019F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private float characterDeads;

		[Token(Token = "0x40019F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[Tooltip("start the action (with delay if configured) when the location is ready (just before ready-set-go)")]
		public bool startSyncWithLocationActivation;

		[Token(Token = "0x40019F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x55")]
		[Tooltip("end the action with the location activation (just before ready-set-go). This override timeToComplete")]
		public bool endSyncWithLocationActivation;

		[Token(Token = "0x40019F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x56")]
		private bool executed;

		[Token(Token = "0x6001C64")]
		[Address(RVA = "0xDBBC94", Offset = "0xDBBC94", VA = "0xDBBC94")]
		public void Execute()
		{
		}

		[Token(Token = "0x6001C65")]
		[Address(RVA = "0xDBC05C", Offset = "0xDBC05C", VA = "0xDBC05C")]
		public void Stop()
		{
		}

		[Token(Token = "0x6001C66")]
		[Address(RVA = "0xDBC15C", Offset = "0xDBC15C", VA = "0xDBC15C")]
		public void Complete()
		{
		}

		[Token(Token = "0x6001C67")]
		[Address(RVA = "0xDBC1E0", Offset = "0xDBC1E0", VA = "0xDBC1E0")]
		public void OnTarget(Bullet bullet)
		{
		}

		[Token(Token = "0x6001C68")]
		[Address(RVA = "0xDBC280", Offset = "0xDBC280", VA = "0xDBC280")]
		public void ResetAim()
		{
		}

		[Token(Token = "0x6001C69")]
		[Address(RVA = "0xDBC30C", Offset = "0xDBC30C", VA = "0xDBC30C")]
		public bool isActive()
		{
			return default(bool);
		}

		[Token(Token = "0x6001C6A")]
		[Address(RVA = "0xDBC314", Offset = "0xDBC314", VA = "0xDBC314")]
		private void OnCharacterDead()
		{
		}

		[Token(Token = "0x6001C6B")]
		[Address(RVA = "0xDBBE28", Offset = "0xDBBE28", VA = "0xDBBE28")]
		private void startAction(bool bLocationReady = false)
		{
		}

		[Token(Token = "0x6001C6C")]
		[Address(RVA = "0xDBC358", Offset = "0xDBC358", VA = "0xDBC358")]
		public void startActionDelay()
		{
		}

		[Token(Token = "0x6001C6D")]
		[Address(RVA = "0xDBC5A4", Offset = "0xDBC5A4", VA = "0xDBC5A4")]
		private void ScheduleActionEnd()
		{
		}

		[Token(Token = "0x6001C6E")]
		[Address(RVA = "0xDBC62C", Offset = "0xDBC62C", VA = "0xDBC62C")]
		private void TimeReached()
		{
		}

		[Token(Token = "0x6001C6F")]
		[Address(RVA = "0xDBC70C", Offset = "0xDBC70C", VA = "0xDBC70C")]
		public void ReloadAction()
		{
		}

		[Token(Token = "0x6001C70")]
		[Address(RVA = "0xDBCAB0", Offset = "0xDBCAB0", VA = "0xDBCAB0")]
		public CharacterAction()
		{
		}
	}
	[Token(Token = "0x200049E")]
	public abstract class CharacterActionModule : MonoBehaviour
	{
		[Token(Token = "0x40019F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[HideInInspector]
		public UnityEvent OnComplete;

		[Token(Token = "0x40019F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[HideInInspector]
		public UnityEvent OnActive;

		[Token(Token = "0x40019FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[HideInInspector]
		public UnityEvent OnDeactive;

		[Token(Token = "0x40019FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		protected bool active;

		[NonSerialized]
		[Token(Token = "0x40019FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public CommonCharacterController character;

		[Token(Token = "0x6001C72")]
		[Address(RVA = "0xDB45F8", Offset = "0xDB45F8", VA = "0xDB45F8", Slot = "4")]
		public virtual void Activate(CommonCharacterController character)
		{
		}

		[Token(Token = "0x6001C73")]
		[Address(RVA = "0xDBCAD8", Offset = "0xDBCAD8", VA = "0xDBCAD8", Slot = "5")]
		public virtual void Deactivate()
		{
		}

		[Token(Token = "0x6001C74")]
		[Address(RVA = "0xDBCB44", Offset = "0xDBCB44", VA = "0xDBCB44", Slot = "6")]
		public virtual void Complete()
		{
		}

		[Token(Token = "0x6001C75")]
		[Address(RVA = "0xDBCB88", Offset = "0xDBCB88", VA = "0xDBCB88", Slot = "7")]
		public virtual void OnTarget(Bullet bullet)
		{
		}

		[Token(Token = "0x6001C76")]
		[Address(RVA = "0xDBCB8C", Offset = "0xDBCB8C", VA = "0xDBCB8C", Slot = "8")]
		public virtual void ResetAim()
		{
		}

		[Token(Token = "0x6001C77")]
		[Address(RVA = "0xDBCB90", Offset = "0xDBCB90", VA = "0xDBCB90")]
		public bool isActive()
		{
			return default(bool);
		}

		[Token(Token = "0x6001C78")]
		[Address(RVA = "0xDBCB98", Offset = "0xDBCB98", VA = "0xDBCB98", Slot = "9")]
		public virtual void ReloadModule()
		{
		}

		[Token(Token = "0x6001C79")]
		[Address(RVA = "0xDBCB9C", Offset = "0xDBCB9C", VA = "0xDBCB9C", Slot = "10")]
		public virtual MoveModule GetMoveModule()
		{
			return null;
		}

		[Token(Token = "0x6001C7A")]
		[Address(RVA = "0xDBCBA4", Offset = "0xDBCBA4", VA = "0xDBCBA4", Slot = "11")]
		public virtual IFireModule GetFireModule()
		{
			return null;
		}

		[Token(Token = "0x6001C7B")]
		[Address(RVA = "0xDB5388", Offset = "0xDB5388", VA = "0xDB5388")]
		protected CharacterActionModule()
		{
		}
	}
	[Token(Token = "0x200049F")]
	public class CharacterActionModuleRandom : CharacterActionModule
	{
		[Token(Token = "0x40019FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public CharacterActionModule[] randomModules;

		[Token(Token = "0x40019FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public int loops;

		[Token(Token = "0x40019FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private new CommonCharacterController character;

		[Token(Token = "0x4001A00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private int selectedModule;

		[Token(Token = "0x6001C7C")]
		[Address(RVA = "0xDBCBAC", Offset = "0xDBCBAC", VA = "0xDBCBAC", Slot = "4")]
		public override void Activate(CommonCharacterController character)
		{
		}

		[Token(Token = "0x6001C7D")]
		[Address(RVA = "0xDBCCE0", Offset = "0xDBCCE0", VA = "0xDBCCE0", Slot = "5")]
		public override void Deactivate()
		{
		}

		[Token(Token = "0x6001C7E")]
		[Address(RVA = "0xDBCDF8", Offset = "0xDBCDF8", VA = "0xDBCDF8", Slot = "6")]
		public override void Complete()
		{
		}

		[Token(Token = "0x6001C7F")]
		[Address(RVA = "0xDBCED8", Offset = "0xDBCED8", VA = "0xDBCED8", Slot = "7")]
		public override void OnTarget(Bullet bullet)
		{
		}

		[Token(Token = "0x6001C80")]
		[Address(RVA = "0xDBCBE4", Offset = "0xDBCBE4", VA = "0xDBCBE4")]
		private void ActivateRandomModule(CommonCharacterController character)
		{
		}

		[Token(Token = "0x6001C81")]
		[Address(RVA = "0xDBCF28", Offset = "0xDBCF28", VA = "0xDBCF28")]
		public CharacterActionModuleRandom()
		{
		}
	}
	[Token(Token = "0x20004A0")]
	public class CharacterWaypoint : MonoBehaviour
	{
		[Token(Token = "0x4001A01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool stopFire;

		[Token(Token = "0x4001A02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		public bool overrideMoveMode;

		[Token(Token = "0x4001A03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public MoveModule.MoveMode moveMode;

		[Token(Token = "0x4001A04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float minStopTime;

		[Token(Token = "0x4001A05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float maxStopTime;

		[Token(Token = "0x6001C82")]
		[Address(RVA = "0xDBCF30", Offset = "0xDBCF30", VA = "0xDBCF30", Slot = "4")]
		public virtual void Execute(CommonCharacterController character)
		{
		}

		[Token(Token = "0x6001C83")]
		[Address(RVA = "0xDBCF34", Offset = "0xDBCF34", VA = "0xDBCF34", Slot = "5")]
		public virtual MoveModule.MoveMode GetMoveMode(CommonCharacterController character)
		{
			return default(MoveModule.MoveMode);
		}

		[Token(Token = "0x6001C84")]
		[Address(RVA = "0xDBCF3C", Offset = "0xDBCF3C", VA = "0xDBCF3C")]
		public CharacterWaypoint()
		{
		}
	}
	[Token(Token = "0x20004A1")]
	public class FireHostageModule : CharacterActionModule
	{
		[Token(Token = "0x4001A06")]
		private const float SHOOTING_ANGLE = 15f;

		[Token(Token = "0x4001A07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public CharacterLocationData hostage;

		[Token(Token = "0x4001A08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private ThiefPoliceController tpCharacter;

		[Token(Token = "0x4001A09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Collider hostageHeadCollider;

		[Token(Token = "0x4001A0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Vector3 hitPoint;

		[Token(Token = "0x6001C85")]
		[Address(RVA = "0xDBCF44", Offset = "0xDBCF44", VA = "0xDBCF44", Slot = "4")]
		public override void Activate(CommonCharacterController character)
		{
		}

		[Token(Token = "0x6001C86")]
		[Address(RVA = "0xDBD144", Offset = "0xDBD144", VA = "0xDBD144", Slot = "7")]
		public override void OnTarget(Bullet bullet)
		{
		}

		[Token(Token = "0x6001C87")]
		[Address(RVA = "0xDBD220", Offset = "0xDBD220", VA = "0xDBD220", Slot = "5")]
		public override void Deactivate()
		{
		}

		[Token(Token = "0x6001C88")]
		[Address(RVA = "0xDBD2F4", Offset = "0xDBD2F4", VA = "0xDBD2F4")]
		private void Update()
		{
		}

		[Token(Token = "0x6001C89")]
		[Address(RVA = "0xDBD664", Offset = "0xDBD664", VA = "0xDBD664")]
		public FireHostageModule()
		{
		}
	}
	[Token(Token = "0x20004A2")]
	public class MercenaryMinigunModule : CharacterActionModule
	{
		[Token(Token = "0x4001A0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public MoveModule[] moveModules;

		[Token(Token = "0x4001A0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public FireModule fireModule;

		[Token(Token = "0x4001A0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public InteractableBonus miniGunBonus;

		[Token(Token = "0x4001A0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Transform door;

		[Token(Token = "0x4001A0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Transform grenadeLaunchPosition;

		[Token(Token = "0x4001A10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Transform trashHitPoint;

		[Token(Token = "0x4001A11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public GameObject kickTrashEffect;

		[Token(Token = "0x4001A12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public Rigidbody trash;

		[Token(Token = "0x4001A13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public Transform grenadeTarget;

		[Token(Token = "0x4001A14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public new ThiefPoliceController character;

		[Token(Token = "0x4001A15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private int moveIndex;

		[Token(Token = "0x4001A16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		private int characterRotationY;

		[Token(Token = "0x4001A17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Grenade currentGrenade;

		[Token(Token = "0x4001A18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private bool kickTrash;

		[Token(Token = "0x4001A19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		private int indexGrenade;

		[Token(Token = "0x4001A1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private Vector3 initialPosition;

		[Token(Token = "0x4001A1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		private Quaternion initialRotation;

		[Token(Token = "0x4001A1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		private Vector3 trashInitialPosition;

		[Token(Token = "0x4001A1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private Quaternion trashInitialRotation;

		[Token(Token = "0x4001A1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private Quaternion doorInitialRotation;

		[Token(Token = "0x4001A1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private int lastAmmunitionBonusLifes;

		[Token(Token = "0x4001A20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
		private bool runAwayDone;

		[Token(Token = "0x4001A21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private int bonusId;

		[Token(Token = "0x6001C8A")]
		[Address(RVA = "0xDBD6C4", Offset = "0xDBD6C4", VA = "0xDBD6C4")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001C8B")]
		[Address(RVA = "0xDBD730", Offset = "0xDBD730", VA = "0xDBD730")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001C8C")]
		[Address(RVA = "0xDBD79C", Offset = "0xDBD79C", VA = "0xDBD79C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001C8D")]
		[Address(RVA = "0xDBD808", Offset = "0xDBD808", VA = "0xDBD808", Slot = "4")]
		public override void Activate(CommonCharacterController character)
		{
		}

		[Token(Token = "0x6001C8E")]
		[Address(RVA = "0xDBDE50", Offset = "0xDBDE50", VA = "0xDBDE50", Slot = "5")]
		public override void Deactivate()
		{
		}

		[Token(Token = "0x6001C8F")]
		[Address(RVA = "0xDBDEC0", Offset = "0xDBDEC0", VA = "0xDBDEC0")]
		private void CustomNetworkEvent(string strName, object[] parameters)
		{
		}

		[Token(Token = "0x6001C90")]
		[Address(RVA = "0xDBDF94", Offset = "0xDBDF94", VA = "0xDBDF94")]
		private void KickTrash()
		{
		}

		[Token(Token = "0x6001C91")]
		[Address(RVA = "0xDBDFA0", Offset = "0xDBDFA0", VA = "0xDBDFA0")]
		private void StaticFire()
		{
		}

		[Token(Token = "0x6001C92")]
		[Address(RVA = "0xDBDFE8", Offset = "0xDBDFE8", VA = "0xDBDFE8")]
		private void startKickTrash(bool bRemote = false)
		{
		}

		[Token(Token = "0x6001C93")]
		[Address(RVA = "0xDBE0A8", Offset = "0xDBE0A8", VA = "0xDBE0A8")]
		private void Update()
		{
		}

		[Token(Token = "0x6001C94")]
		[Address(RVA = "0xDBE48C", Offset = "0xDBE48C", VA = "0xDBE48C")]
		private void OnEventString(string e)
		{
		}

		[Token(Token = "0x6001C95")]
		[Address(RVA = "0xDBE948", Offset = "0xDBE948", VA = "0xDBE948")]
		private void ShowGrenade(string id, bool bRemote = false)
		{
		}

		[Token(Token = "0x6001C96")]
		[Address(RVA = "0xDBEEC0", Offset = "0xDBEEC0", VA = "0xDBEEC0")]
		private void LaunchGrenade()
		{
		}

		[Token(Token = "0x6001C97")]
		[Address(RVA = "0xDBEF84", Offset = "0xDBEF84", VA = "0xDBEF84")]
		private void LaunchGrenadeImpl(Vector3 target, float angle, bool bRemote = false)
		{
		}

		[Token(Token = "0x6001C98")]
		[Address(RVA = "0xDBF370", Offset = "0xDBF370", VA = "0xDBF370")]
		private void AddForce()
		{
		}

		[Token(Token = "0x6001C99")]
		[Address(RVA = "0xDBF3F8", Offset = "0xDBF3F8", VA = "0xDBF3F8")]
		private void OnGrenadeExplode()
		{
		}

		[Token(Token = "0x6001C9A")]
		[Address(RVA = "0xDBF4D4", Offset = "0xDBF4D4", VA = "0xDBF4D4")]
		private void OnCharacterHit()
		{
		}

		[Token(Token = "0x6001C9B")]
		[Address(RVA = "0xDBF8EC", Offset = "0xDBF8EC", VA = "0xDBF8EC")]
		private void RunAway()
		{
		}

		[Token(Token = "0x6001C9C")]
		[Address(RVA = "0xDBF634", Offset = "0xDBF634", VA = "0xDBF634")]
		private void ShowAmmunitionBonus(bool bRemote = false)
		{
		}

		[Token(Token = "0x6001C9D")]
		[Address(RVA = "0xDBFCB8", Offset = "0xDBFCB8", VA = "0xDBFCB8")]
		private void OnMiniGunBeginInteraction()
		{
		}

		[Token(Token = "0x6001C9E")]
		[Address(RVA = "0xDBFE0C", Offset = "0xDBFE0C", VA = "0xDBFE0C", Slot = "10")]
		public override MoveModule GetMoveModule()
		{
			return null;
		}

		[Token(Token = "0x6001C9F")]
		[Address(RVA = "0xDBFE40", Offset = "0xDBFE40", VA = "0xDBFE40", Slot = "11")]
		public override IFireModule GetFireModule()
		{
			return null;
		}

		[Token(Token = "0x6001CA0")]
		[Address(RVA = "0xDBFE8C", Offset = "0xDBFE8C", VA = "0xDBFE8C")]
		public MercenaryMinigunModule()
		{
		}
	}
	[Token(Token = "0x20004A5")]
	public class MercenaryMinigunWaypoint : CharacterWaypoint
	{
		[Token(Token = "0x20004A6")]
		public enum Animation
		{
			[Token(Token = "0x4001A27")]
			Kick,
			[Token(Token = "0x4001A28")]
			LaunchGrenadeFar,
			[Token(Token = "0x4001A29")]
			LaunchGrenadeClose,
			[Token(Token = "0x4001A2A")]
			LaunchGrenade
		}

		[Token(Token = "0x4001A25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Animation characterAnimation;

		[Token(Token = "0x6001CA6")]
		[Address(RVA = "0xDC024C", Offset = "0xDC024C", VA = "0xDC024C", Slot = "4")]
		public override void Execute(CommonCharacterController character)
		{
		}

		[Token(Token = "0x6001CA7")]
		[Address(RVA = "0xDC037C", Offset = "0xDC037C", VA = "0xDC037C")]
		public MercenaryMinigunWaypoint()
		{
		}
	}
	[Token(Token = "0x20004A7")]
	public class MoriartyModule : CharacterActionModule
	{
		[Token(Token = "0x4001A2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public MoveModule moveModule;

		[Token(Token = "0x4001A2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public float lookAtTime;

		[Token(Token = "0x4001A2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private new CommonCharacterController character;

		[Token(Token = "0x4001A2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private LookAtIK lookAtIK;

		[Token(Token = "0x6001CA8")]
		[Address(RVA = "0xDC0384", Offset = "0xDC0384", VA = "0xDC0384")]
		private void Start()
		{
		}

		[Token(Token = "0x6001CA9")]
		[Address(RVA = "0xDC0408", Offset = "0xDC0408", VA = "0xDC0408", Slot = "4")]
		public override void Activate(CommonCharacterController character)
		{
		}

		[Token(Token = "0x6001CAA")]
		[Address(RVA = "0xDC0584", Offset = "0xDC0584", VA = "0xDC0584", Slot = "6")]
		public override void Complete()
		{
		}

		[Token(Token = "0x6001CAB")]
		[Address(RVA = "0xDC05B8", Offset = "0xDC05B8", VA = "0xDC05B8")]
		private void Walk()
		{
		}

		[Token(Token = "0x6001CAC")]
		[Address(RVA = "0xDC0748", Offset = "0xDC0748", VA = "0xDC0748")]
		public MoriartyModule()
		{
		}
	}
	[Token(Token = "0x20004A8")]
	public class MoveAIModule : CharacterActionModule
	{
		[Token(Token = "0x20004A9")]
		[CompilerGenerated]
		private sealed class <ActivateCoroutine>d__24 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001A45")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001A46")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001A47")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public MoveAIModule <>4__this;

			[Token(Token = "0x17000179")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001CC1")]
				[Address(RVA = "0xDC2C2C", Offset = "0xDC2C2C", VA = "0xDC2C2C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700017A")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001CC3")]
				[Address(RVA = "0xDC2C74", Offset = "0xDC2C74", VA = "0xDC2C74", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001CBE")]
			[Address(RVA = "0xDC13FC", Offset = "0xDC13FC", VA = "0xDC13FC")]
			[DebuggerHidden]
			public <ActivateCoroutine>d__24(int <>1__state)
			{
			}

			[Token(Token = "0x6001CBF")]
			[Address(RVA = "0xDC2738", Offset = "0xDC2738", VA = "0xDC2738", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001CC0")]
			[Address(RVA = "0xDC273C", Offset = "0xDC273C", VA = "0xDC273C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001CC2")]
			[Address(RVA = "0xDC2C34", Offset = "0xDC2C34", VA = "0xDC2C34", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001A2F")]
		private const float MOVEMENT_LERP_SPEED = 8f;

		[Token(Token = "0x4001A30")]
		private const float ROTATE_LERP_SPEED = 5f;

		[Token(Token = "0x4001A31")]
		private const float IK_WEIGHT_SPEED = 5f;

		[Token(Token = "0x4001A32")]
		private const float LAYER_WEIGHT_SPEED = 5f;

		[Token(Token = "0x4001A33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Transform origin;

		[Token(Token = "0x4001A34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Transform destination;

		[Token(Token = "0x4001A35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public FireModule fireModule;

		[Token(Token = "0x4001A36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public CharacterZones.Movement movement;

		[Token(Token = "0x4001A37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private MoveModule.MoveMode pendingMoveMode;

		[Token(Token = "0x4001A38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private ThiefPoliceController tpCharacter;

		[Token(Token = "0x4001A39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private NavMeshAgent navMeshAgent;

		[Token(Token = "0x4001A3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Quaternion lastRotation;

		[Token(Token = "0x4001A3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Vector3 lastForward;

		[Token(Token = "0x4001A3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		private float lastAnimForward;

		[Token(Token = "0x4001A3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private float lastAnimTurn;

		[Token(Token = "0x4001A3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		private float lastAnimRight;

		[Token(Token = "0x4001A3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private float deltaAngle;

		[Token(Token = "0x4001A40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		private float speed;

		[Token(Token = "0x4001A41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private int movementIndex;

		[Token(Token = "0x4001A42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		private int moveAnimationHash;

		[Token(Token = "0x4001A43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public string idleState;

		[Token(Token = "0x4001A44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public int idle;

		[Token(Token = "0x6001CAF")]
		[Address(RVA = "0xDC07A0", Offset = "0xDC07A0", VA = "0xDC07A0", Slot = "4")]
		public override void Activate(CommonCharacterController character)
		{
		}

		[Token(Token = "0x6001CB0")]
		[Address(RVA = "0xDC1314", Offset = "0xDC1314", VA = "0xDC1314")]
		private void CustomNetworkEvent(string strName, object[] parameters)
		{
		}

		[Token(Token = "0x6001CB1")]
		[Address(RVA = "0xDC12A0", Offset = "0xDC12A0", VA = "0xDC12A0")]
		[IteratorStateMachine(typeof(<ActivateCoroutine>d__24))]
		private IEnumerator ActivateCoroutine()
		{
			return null;
		}

		[Token(Token = "0x6001CB2")]
		[Address(RVA = "0xDC1424", Offset = "0xDC1424", VA = "0xDC1424")]
		private void enableMoveWithAlwaysShooting(bool bRemote)
		{
		}

		[Token(Token = "0x6001CB3")]
		[Address(RVA = "0xDC1594", Offset = "0xDC1594", VA = "0xDC1594", Slot = "5")]
		public override void Deactivate()
		{
		}

		[Token(Token = "0x6001CB4")]
		[Address(RVA = "0xDC16F8", Offset = "0xDC16F8", VA = "0xDC16F8", Slot = "6")]
		public override void Complete()
		{
		}

		[Token(Token = "0x6001CB5")]
		[Address(RVA = "0xDC1710", Offset = "0xDC1710", VA = "0xDC1710")]
		private void Update()
		{
		}

		[Token(Token = "0x6001CB6")]
		[Address(RVA = "0xDC15BC", Offset = "0xDC15BC", VA = "0xDC15BC")]
		private void FinishModule()
		{
		}

		[Token(Token = "0x6001CB7")]
		[Address(RVA = "0xDC2404", Offset = "0xDC2404", VA = "0xDC2404")]
		private float GetAngleFromForward(Vector3 worldDirection)
		{
			return default(float);
		}

		[Token(Token = "0x6001CB8")]
		[Address(RVA = "0xDC246C", Offset = "0xDC246C", VA = "0xDC246C")]
		private void Rotate()
		{
		}

		[Token(Token = "0x6001CB9")]
		[Address(RVA = "0xDC2324", Offset = "0xDC2324", VA = "0xDC2324")]
		private bool IsMoving()
		{
			return default(bool);
		}

		[Token(Token = "0x6001CBA")]
		[Address(RVA = "0xDC2608", Offset = "0xDC2608", VA = "0xDC2608", Slot = "9")]
		public override void ReloadModule()
		{
		}

		[Token(Token = "0x6001CBB")]
		[Address(RVA = "0xDC0C40", Offset = "0xDC0C40", VA = "0xDC0C40")]
		private void SetMoveMode(MoveModule.MoveMode moveMode, bool bRemote)
		{
		}

		[Token(Token = "0x6001CBC")]
		[Address(RVA = "0xDC2628", Offset = "0xDC2628", VA = "0xDC2628", Slot = "8")]
		public override void ResetAim()
		{
		}

		[Token(Token = "0x6001CBD")]
		[Address(RVA = "0xDC26BC", Offset = "0xDC26BC", VA = "0xDC26BC")]
		public MoveAIModule()
		{
		}
	}
	[Token(Token = "0x20004AA")]
	[RequireComponent(typeof(BezierSpline))]
	public class MoveModule : CharacterActionModule
	{
		[Token(Token = "0x20004AB")]
		public enum MoveMode
		{
			[Token(Token = "0x4001A5A")]
			Crouch,
			[Token(Token = "0x4001A5B")]
			Walk,
			[Token(Token = "0x4001A5C")]
			Strafe,
			[Token(Token = "0x4001A5D")]
			Run,
			[Token(Token = "0x4001A5E")]
			None
		}

		[Token(Token = "0x4001A48")]
		private const float WALK_SPEED = 1.5f;

		[Token(Token = "0x4001A49")]
		private const float RUN_SPEED = 4.5f;

		[Token(Token = "0x4001A4A")]
		private const float CROUCH_SPEED = 1.8f;

		[Token(Token = "0x4001A4B")]
		private const float BASE_SPEED = 1f;

		[Token(Token = "0x4001A4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public int loops;

		[Token(Token = "0x4001A4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public float overrideSpeed;

		[Token(Token = "0x4001A4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public MoveMode moveMode;

		[Token(Token = "0x4001A4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public FireModule fireModule;

		[Token(Token = "0x4001A50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public bool forceInitPathPosition;

		[Token(Token = "0x4001A51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private List<BezierPoint> bezierPoints;

		[Token(Token = "0x4001A52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private List<Vector3> waypoints;

		[Token(Token = "0x4001A53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Tween path;

		[Token(Token = "0x4001A54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private float speed;

		[Token(Token = "0x4001A55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private float animationSpeed;

		[Token(Token = "0x4001A56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private bool ready;

		[Token(Token = "0x4001A57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x81")]
		private bool complete;

		[Token(Token = "0x4001A58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private int moveAnimationHash;

		[Token(Token = "0x6001CC4")]
		[Address(RVA = "0xDC2C7C", Offset = "0xDC2C7C", VA = "0xDC2C7C", Slot = "4")]
		public override void Activate(CommonCharacterController character)
		{
		}

		[Token(Token = "0x6001CC5")]
		[Address(RVA = "0xDC3098", Offset = "0xDC3098", VA = "0xDC3098", Slot = "12")]
		protected virtual void onWaypointChanged(int waypointIndex)
		{
		}

		[Token(Token = "0x6001CC6")]
		[Address(RVA = "0xDC3350", Offset = "0xDC3350", VA = "0xDC3350")]
		private void PausePath()
		{
		}

		[Token(Token = "0x6001CC7")]
		[Address(RVA = "0xDC3398", Offset = "0xDC3398", VA = "0xDC3398")]
		public void PlayPath()
		{
		}

		[Token(Token = "0x6001CC8")]
		[Address(RVA = "0xDC34A8", Offset = "0xDC34A8", VA = "0xDC34A8", Slot = "5")]
		public override void Deactivate()
		{
		}

		[Token(Token = "0x6001CC9")]
		[Address(RVA = "0xDC3570", Offset = "0xDC3570", VA = "0xDC3570", Slot = "6")]
		public override void Complete()
		{
		}

		[Token(Token = "0x6001CCA")]
		[Address(RVA = "0xDC34C0", Offset = "0xDC34C0", VA = "0xDC34C0")]
		private void finishModule()
		{
		}

		[Token(Token = "0x6001CCB")]
		[Address(RVA = "0xDC3588", Offset = "0xDC3588", VA = "0xDC3588")]
		private void Update()
		{
		}

		[Token(Token = "0x6001CCC")]
		[Address(RVA = "0xDC3FEC", Offset = "0xDC3FEC", VA = "0xDC3FEC")]
		public float GetTimePathRemaining()
		{
			return default(float);
		}

		[Token(Token = "0x6001CCD")]
		[Address(RVA = "0xDC3C40", Offset = "0xDC3C40", VA = "0xDC3C40")]
		private void aimToAction()
		{
		}

		[Token(Token = "0x6001CCE")]
		[Address(RVA = "0xDC40E0", Offset = "0xDC40E0", VA = "0xDC40E0", Slot = "13")]
		protected virtual void setMoveMode(MoveMode moveMode, bool resetAnimator = true)
		{
		}

		[Token(Token = "0x6001CCF")]
		[Address(RVA = "0xDC42E4", Offset = "0xDC42E4", VA = "0xDC42E4", Slot = "9")]
		public override void ReloadModule()
		{
		}

		[Token(Token = "0x6001CD0")]
		[Address(RVA = "0xDC4384", Offset = "0xDC4384", VA = "0xDC4384", Slot = "10")]
		public override MoveModule GetMoveModule()
		{
			return null;
		}

		[Token(Token = "0x6001CD1")]
		[Address(RVA = "0xDC4388", Offset = "0xDC4388", VA = "0xDC4388", Slot = "11")]
		public override IFireModule GetFireModule()
		{
			return null;
		}

		[Token(Token = "0x6001CD2")]
		[Address(RVA = "0xDC4390", Offset = "0xDC4390", VA = "0xDC4390", Slot = "8")]
		public override void ResetAim()
		{
		}

		[Token(Token = "0x6001CD3")]
		[Address(RVA = "0xDC4424", Offset = "0xDC4424", VA = "0xDC4424")]
		public MoveModule()
		{
		}
	}
	[Token(Token = "0x20004AC")]
	public class RPGModule : CharacterActionModule, IFireModule
	{
		[Token(Token = "0x20004AD")]
		public enum AnimationOrder
		{
			[Token(Token = "0x4001A77")]
			Random,
			[Token(Token = "0x4001A78")]
			Sequential
		}

		[Token(Token = "0x4001A5F")]
		private const float minCoverTime = 4f;

		[Token(Token = "0x4001A60")]
		private const float maxCoverTime = 6f;

		[Token(Token = "0x4001A61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public List<CharacterLocationData> charTargets;

		[Token(Token = "0x4001A62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public List<AimTarget> targets;

		[Token(Token = "0x4001A63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public List<FireAnimationDataSet> fireAnimationSetList;

		[Token(Token = "0x4001A64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public List<FireAnimationData> fireAnimationList;

		[Token(Token = "0x4001A65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private int currentAnimationIndex;

		[Token(Token = "0x4001A66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public FireAnimationData.HandedFireAnimationData currentAnimation;

		[Token(Token = "0x4001A67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public AnimationOrder animationOrder;

		[Token(Token = "0x4001A68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		public float coverRotation;

		[Token(Token = "0x4001A69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private new ThiefPoliceController character;

		[Token(Token = "0x4001A6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private float ikLerpTarget;

		[Token(Token = "0x4001A6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private float layerLerpTarget;

		[Token(Token = "0x4001A6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private float stateTime;

		[Token(Token = "0x4001A6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private float currentStateTime;

		[Token(Token = "0x4001A6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private float switchSpeed;

		[Token(Token = "0x4001A6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		private float switchTargetSpeed;

		[Token(Token = "0x4001A70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private bool targetChanged;

		[Token(Token = "0x4001A71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x99")]
		private bool changeWeapon;

		[Token(Token = "0x4001A72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public AimTarget currentTarget;

		[Token(Token = "0x4001A73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private string currentAnimationState;

		[Token(Token = "0x4001A74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private PseudoRandom randomGenerator;

		[Token(Token = "0x4001A75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private int currentTargetIndex;

		[Token(Token = "0x6001CD7")]
		[Address(RVA = "0xDC4664", Offset = "0xDC4664", VA = "0xDC4664", Slot = "4")]
		public override void Activate(CommonCharacterController character)
		{
		}

		[Token(Token = "0x6001CD8")]
		[Address(RVA = "0xDC4B30", Offset = "0xDC4B30", VA = "0xDC4B30")]
		private float getStateTime(float min, float max)
		{
			return default(float);
		}

		[Token(Token = "0x6001CD9")]
		[Address(RVA = "0xDC4A4C", Offset = "0xDC4A4C", VA = "0xDC4A4C")]
		private void SetAnimation()
		{
		}

		[Token(Token = "0x6001CDA")]
		[Address(RVA = "0xDC4D10", Offset = "0xDC4D10", VA = "0xDC4D10", Slot = "12")]
		public void SetAnimation(int index)
		{
		}

		[Token(Token = "0x6001CDB")]
		[Address(RVA = "0xDC4EC8", Offset = "0xDC4EC8", VA = "0xDC4EC8", Slot = "6")]
		public override void Complete()
		{
		}

		[Token(Token = "0x6001CDC")]
		[Address(RVA = "0xDC4F90", Offset = "0xDC4F90", VA = "0xDC4F90", Slot = "5")]
		public override void Deactivate()
		{
		}

		[Token(Token = "0x6001CDD")]
		[Address(RVA = "0xDC4FD4", Offset = "0xDC4FD4", VA = "0xDC4FD4")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6001CDE")]
		[Address(RVA = "0xDC51A0", Offset = "0xDC51A0", VA = "0xDC51A0")]
		private void Update()
		{
		}

		[Token(Token = "0x6001CDF")]
		[Address(RVA = "0xDC5948", Offset = "0xDC5948", VA = "0xDC5948", Slot = "14")]
		public void SetRemoteFireState(string state, int iIndex)
		{
		}

		[Token(Token = "0x6001CE0")]
		[Address(RVA = "0xDC4B90", Offset = "0xDC4B90", VA = "0xDC4B90")]
		private void SetTarget(bool bForce = false)
		{
		}

		[Token(Token = "0x6001CE1")]
		[Address(RVA = "0xDC5A9C", Offset = "0xDC5A9C", VA = "0xDC5A9C")]
		private void checkBulletPool()
		{
		}

		[Token(Token = "0x6001CE2")]
		[Address(RVA = "0xDC5B20", Offset = "0xDC5B20", VA = "0xDC5B20", Slot = "13")]
		public void UpdateTargetAndAccuracy(AimTarget target, Vector3 offset, Vector3 currentTargetPosition, bool bWarning, bool bLethalShot)
		{
		}

		[Token(Token = "0x6001CE3")]
		[Address(RVA = "0xDC5B3C", Offset = "0xDC5B3C", VA = "0xDC5B3C", Slot = "11")]
		public override IFireModule GetFireModule()
		{
			return null;
		}

		[Token(Token = "0x6001CE4")]
		[Address(RVA = "0xDC5B40", Offset = "0xDC5B40", VA = "0xDC5B40", Slot = "9")]
		public override void ReloadModule()
		{
		}

		[Token(Token = "0x6001CE5")]
		[Address(RVA = "0xDC5B9C", Offset = "0xDC5B9C", VA = "0xDC5B9C")]
		public RPGModule()
		{
		}
	}
	[Token(Token = "0x20004AE")]
	public class SamuraiModule : CharacterActionModule
	{
		[Token(Token = "0x20004B0")]
		[CompilerGenerated]
		private sealed class <BulletImpact>d__17 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001A87")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001A88")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001A89")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SamuraiModule <>4__this;

			[Token(Token = "0x4001A8A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <impacts>5__2;

			[Token(Token = "0x4001A8B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private WaitForSeconds <waitTime>5__3;

			[Token(Token = "0x1700017B")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001CF4")]
				[Address(RVA = "0xDDECC4", Offset = "0xDDECC4", VA = "0xDDECC4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700017C")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001CF6")]
				[Address(RVA = "0xDDED0C", Offset = "0xDDED0C", VA = "0xDDED0C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001CF1")]
			[Address(RVA = "0xDDE698", Offset = "0xDDE698", VA = "0xDDE698")]
			[DebuggerHidden]
			public <BulletImpact>d__17(int <>1__state)
			{
			}

			[Token(Token = "0x6001CF2")]
			[Address(RVA = "0xDDE91C", Offset = "0xDDE91C", VA = "0xDDE91C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001CF3")]
			[Address(RVA = "0xDDE920", Offset = "0xDDE920", VA = "0xDDE920", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001CF5")]
			[Address(RVA = "0xDDECCC", Offset = "0xDDECCC", VA = "0xDDECCC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001A79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public AudioClip initSound;

		[Token(Token = "0x4001A7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public AudioClip startSound;

		[Token(Token = "0x4001A7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public AudioClip pauseSound;

		[Token(Token = "0x4001A7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public AudioClip[] hitSounds;

		[Token(Token = "0x4001A7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public GameObject bullets;

		[Token(Token = "0x4001A7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public DestructibleAnimation wall;

		[Token(Token = "0x4001A7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private LookAtIK lookAtIK;

		[Token(Token = "0x4001A80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private new ThiefPoliceController character;

		[Token(Token = "0x4001A81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private float strafeTime;

		[Token(Token = "0x4001A82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Vector3 NotInitialized;

		[Token(Token = "0x4001A83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private Vector3 initialPosition;

		[Token(Token = "0x4001A84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Quaternion initialRotation;

		[Token(Token = "0x6001CE6")]
		[Address(RVA = "0xDDDCBC", Offset = "0xDDDCBC", VA = "0xDDDCBC", Slot = "4")]
		public override void Activate(CommonCharacterController character)
		{
		}

		[Token(Token = "0x6001CE7")]
		[Address(RVA = "0xDDE0CC", Offset = "0xDDE0CC", VA = "0xDDE0CC")]
		private void Update()
		{
		}

		[Token(Token = "0x6001CE8")]
		[Address(RVA = "0xDDE250", Offset = "0xDDE250", VA = "0xDDE250")]
		private void OnAnimationEvent(string eventName)
		{
		}

		[Token(Token = "0x6001CE9")]
		[Address(RVA = "0xDDE5C0", Offset = "0xDDE5C0", VA = "0xDDE5C0")]
		private void PlaySound(AudioClip clip)
		{
		}

		[Token(Token = "0x6001CEA")]
		[Address(RVA = "0xDDE658", Offset = "0xDDE658", VA = "0xDDE658")]
		private void PlaySoundUnique(AudioClip clip)
		{
		}

		[Token(Token = "0x6001CEB")]
		[Address(RVA = "0xDDE5E4", Offset = "0xDDE5E4", VA = "0xDDE5E4")]
		[IteratorStateMachine(typeof(<BulletImpact>d__17))]
		private IEnumerator BulletImpact()
		{
			return null;
		}

		[Token(Token = "0x6001CEC")]
		[Address(RVA = "0xDDE6C0", Offset = "0xDDE6C0", VA = "0xDDE6C0")]
		public SamuraiModule()
		{
		}
	}
	[Token(Token = "0x20004B1")]
	public class SleepModule : CharacterActionModule
	{
		[Token(Token = "0x4001A8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public bool hideCharacter;

		[Token(Token = "0x6001CF7")]
		[Address(RVA = "0xDDED14", Offset = "0xDDED14", VA = "0xDDED14", Slot = "4")]
		public override void Activate(CommonCharacterController character)
		{
		}

		[Token(Token = "0x6001CF8")]
		[Address(RVA = "0xDDED5C", Offset = "0xDDED5C", VA = "0xDDED5C")]
		public SleepModule()
		{
		}
	}
	[Token(Token = "0x20004B2")]
	public class SmithModule : CharacterActionModule
	{
		[Token(Token = "0x4001A8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float ATTACK_DISTANCE;

		[Token(Token = "0x4001A8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private new ThiefPoliceController character;

		[Token(Token = "0x4001A8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public AimTarget target;

		[Token(Token = "0x4001A90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public List<AimTarget> targets;

		[Token(Token = "0x4001A91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private NavMeshAgent agent;

		[Token(Token = "0x4001A92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private HitReaction hitReaction;

		[Token(Token = "0x4001A93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private int index;

		[Token(Token = "0x4001A94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public string WalkAnimation;

		[Token(Token = "0x4001A95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public string RunAnimation;

		[Token(Token = "0x4001A96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public string AttackAnimation;

		[Token(Token = "0x4001A97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public string DefenseAnimation;

		[Token(Token = "0x4001A98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public string FinishHimAnimation;

		[Token(Token = "0x4001A99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public float spawnRange;

		[Token(Token = "0x4001A9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		private int hitCount;

		[Token(Token = "0x4001A9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private float lastHit;

		[Token(Token = "0x4001A9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		private float lastUpdate;

		[Token(Token = "0x6001CF9")]
		[Address(RVA = "0xDDED64", Offset = "0xDDED64", VA = "0xDDED64")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001CFA")]
		[Address(RVA = "0xDDED68", Offset = "0xDDED68", VA = "0xDDED68", Slot = "4")]
		public override void Activate(CommonCharacterController character)
		{
		}

		[Token(Token = "0x6001CFB")]
		[Address(RVA = "0xDDF3F8", Offset = "0xDDF3F8", VA = "0xDDF3F8")]
		private void OnCharacterDisabled(CommonCharacterController chars)
		{
		}

		[Token(Token = "0x6001CFC")]
		[Address(RVA = "0xDDF460", Offset = "0xDDF460", VA = "0xDDF460")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001CFD")]
		[Address(RVA = "0xDDF658", Offset = "0xDDF658", VA = "0xDDF658")]
		private void OnDead()
		{
		}

		[Token(Token = "0x6001CFE")]
		[Address(RVA = "0xDDF7E4", Offset = "0xDDF7E4", VA = "0xDDF7E4")]
		private void OnHit()
		{
		}

		[Token(Token = "0x6001CFF")]
		[Address(RVA = "0xDDF9B0", Offset = "0xDDF9B0", VA = "0xDDF9B0")]
		private void Update()
		{
		}

		[Token(Token = "0x6001D00")]
		[Address(RVA = "0xDDFE50", Offset = "0xDDFE50", VA = "0xDDFE50")]
		private bool AnimatorIsPlaying()
		{
			return default(bool);
		}

		[Token(Token = "0x6001D01")]
		[Address(RVA = "0xDDF2E8", Offset = "0xDDF2E8", VA = "0xDDF2E8")]
		public void UpdatetDestinationTarget()
		{
		}

		[Token(Token = "0x6001D02")]
		[Address(RVA = "0xDDF1E4", Offset = "0xDDF1E4", VA = "0xDDF1E4")]
		private AimTarget selectTarget()
		{
			return null;
		}

		[Token(Token = "0x6001D03")]
		[Address(RVA = "0xDDFF0C", Offset = "0xDDFF0C", VA = "0xDDFF0C")]
		private bool IsAnimation(string strAnimationName)
		{
			return default(bool);
		}

		[Token(Token = "0x6001D04")]
		[Address(RVA = "0xDE0000", Offset = "0xDE0000", VA = "0xDE0000")]
		private string GetAnimation()
		{
			return null;
		}

		[Token(Token = "0x6001D05")]
		[Address(RVA = "0xDE00F0", Offset = "0xDE00F0", VA = "0xDE00F0")]
		private void SetAnimation(string strAnimationName, bool force = false)
		{
		}

		[Token(Token = "0x6001D06")]
		[Address(RVA = "0xDDF9A8", Offset = "0xDDF9A8", VA = "0xDDF9A8")]
		private bool IsWalkState()
		{
			return default(bool);
		}

		[Token(Token = "0x6001D07")]
		[Address(RVA = "0xDDF8F0", Offset = "0xDDF8F0", VA = "0xDDF8F0")]
		private bool IsRunState()
		{
			return default(bool);
		}

		[Token(Token = "0x6001D08")]
		[Address(RVA = "0xDE01D8", Offset = "0xDE01D8", VA = "0xDE01D8")]
		private bool IsDefenseState()
		{
			return default(bool);
		}

		[Token(Token = "0x6001D09")]
		[Address(RVA = "0xDE0208", Offset = "0xDE0208", VA = "0xDE0208")]
		private bool IsAttackState()
		{
			return default(bool);
		}

		[Token(Token = "0x6001D0A")]
		[Address(RVA = "0xDDF8F8", Offset = "0xDDF8F8", VA = "0xDDF8F8")]
		private void SetWalkState()
		{
		}

		[Token(Token = "0x6001D0B")]
		[Address(RVA = "0xDDF13C", Offset = "0xDDF13C", VA = "0xDDF13C")]
		private void SetRunState(bool force = false)
		{
		}

		[Token(Token = "0x6001D0C")]
		[Address(RVA = "0xDE0210", Offset = "0xDE0210", VA = "0xDE0210")]
		private void SetDefenseState()
		{
		}

		[Token(Token = "0x6001D0D")]
		[Address(RVA = "0xDE0384", Offset = "0xDE0384", VA = "0xDE0384")]
		private void SetAttackState()
		{
		}

		[Token(Token = "0x6001D0E")]
		[Address(RVA = "0xDE0474", Offset = "0xDE0474", VA = "0xDE0474")]
		private void AdjustAttackAngle()
		{
		}

		[Token(Token = "0x6001D0F")]
		[Address(RVA = "0xDDFB4C", Offset = "0xDDFB4C", VA = "0xDDFB4C")]
		private void CheckPlayerTarget()
		{
		}

		[Token(Token = "0x6001D10")]
		[Address(RVA = "0xDE050C", Offset = "0xDE050C", VA = "0xDE050C")]
		public SmithModule()
		{
		}
	}
	[Token(Token = "0x20004B3")]
	public class ZombieModule : CharacterActionModule
	{
		[Token(Token = "0x20004B4")]
		public enum ZombieState
		{
			[Token(Token = "0x4001ABF")]
			None,
			[Token(Token = "0x4001AC0")]
			Idle,
			[Token(Token = "0x4001AC1")]
			Climb,
			[Token(Token = "0x4001AC2")]
			Walk,
			[Token(Token = "0x4001AC3")]
			Chase,
			[Token(Token = "0x4001AC4")]
			Run,
			[Token(Token = "0x4001AC5")]
			GetUp,
			[Token(Token = "0x4001AC6")]
			Attack,
			[Token(Token = "0x4001AC7")]
			KO
		}

		[Token(Token = "0x4001A9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static float ATTACK_DISTANCE;

		[Token(Token = "0x4001A9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private static float ATTACK_DISTANCE_RUN;

		[Token(Token = "0x4001A9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static int HELL_KILLS_BONUS;

		[Token(Token = "0x4001AA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private new ThiefPoliceController character;

		[Token(Token = "0x4001AA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public AimTarget target;

		[Token(Token = "0x4001AA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Vector3 targetPosition;

		[Token(Token = "0x4001AA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public List<AimTarget> targets;

		[Token(Token = "0x4001AA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private NavMeshAgent agent;

		[Token(Token = "0x4001AA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private NavMeshObstacle obstacle;

		[Token(Token = "0x4001AA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private HitReaction hitReaction;

		[Token(Token = "0x4001AA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private LookAtIK lookAtIK;

		[Token(Token = "0x4001AA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public ZombieState defaultState;

		[Token(Token = "0x4001AA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private int hitCount;

		[Token(Token = "0x4001AAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private float lastHit;

		[Token(Token = "0x4001AAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		private float reactionTime;

		[Token(Token = "0x4001AAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public float reactionTimeDelta;

		[Token(Token = "0x4001AAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		private bool isKO;

		[Token(Token = "0x4001AAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9D")]
		public bool leftLegInjured;

		[Token(Token = "0x4001AAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9E")]
		public bool rightLegInjured;

		[Token(Token = "0x4001AB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9F")]
		public bool warpPosition;

		[Token(Token = "0x4001AB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public int lifes;

		[Token(Token = "0x4001AB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		private Quaternion rootboneToForward;

		[Token(Token = "0x4001AB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		private bool isCrawling;

		[Token(Token = "0x4001AB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private static Vector3 climbOffset;

		[Token(Token = "0x4001AB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB5")]
		private bool initialized;

		[Token(Token = "0x4001AB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static int bonusId;

		[Token(Token = "0x4001AB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private float lastUpdate;

		[Token(Token = "0x4001AB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		public bool isStopped;

		[Token(Token = "0x4001AB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBD")]
		public bool hasAgent;

		[Token(Token = "0x4001ABA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public Vector3 agentNextPosition;

		[Token(Token = "0x4001ABB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		private Vector3 onlinePositionCorrection;

		[Token(Token = "0x4001ABC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private Vector3 onlineRotationCorrection;

		[Token(Token = "0x4001ABD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		private float onlineTimeCorrectionStart;

		[Token(Token = "0x6001D11")]
		[Address(RVA = "0xDE0614", Offset = "0xDE0614", VA = "0xDE0614")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001D12")]
		[Address(RVA = "0xDE0618", Offset = "0xDE0618", VA = "0xDE0618", Slot = "4")]
		public override void Activate(CommonCharacterController character)
		{
		}

		[Token(Token = "0x6001D13")]
		[Address(RVA = "0xDE1768", Offset = "0xDE1768", VA = "0xDE1768")]
		private void initNavMeshAgent()
		{
		}

		[Token(Token = "0x6001D14")]
		[Address(RVA = "0xDE19D8", Offset = "0xDE19D8", VA = "0xDE19D8")]
		private void SetDefaultState()
		{
		}

		[Token(Token = "0x6001D15")]
		[Address(RVA = "0xDE1E90", Offset = "0xDE1E90", VA = "0xDE1E90", Slot = "9")]
		public override void ReloadModule()
		{
		}

		[Token(Token = "0x6001D16")]
		[Address(RVA = "0xDE21E0", Offset = "0xDE21E0", VA = "0xDE21E0")]
		private void CustomNetworkEvent(string strName, object[] parameters)
		{
		}

		[Token(Token = "0x6001D17")]
		[Address(RVA = "0xDE1E18", Offset = "0xDE1E18", VA = "0xDE1E18")]
		public void SetState(ZombieState state, bool force = false)
		{
		}

		[Token(Token = "0x6001D18")]
		[Address(RVA = "0xDE4718", Offset = "0xDE4718", VA = "0xDE4718")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001D19")]
		[Address(RVA = "0xDE471C", Offset = "0xDE471C", VA = "0xDE471C", Slot = "5")]
		public override void Deactivate()
		{
		}

		[Token(Token = "0x6001D1A")]
		[Address(RVA = "0xDE1220", Offset = "0xDE1220", VA = "0xDE1220")]
		private void ResetZombie()
		{
		}

		[Token(Token = "0x6001D1B")]
		[Address(RVA = "0xDE4738", Offset = "0xDE4738", VA = "0xDE4738")]
		private void OnDead()
		{
		}

		[Token(Token = "0x6001D1C")]
		[Address(RVA = "0xDE4854", Offset = "0xDE4854", VA = "0xDE4854")]
		private bool LookingToTarget()
		{
			return default(bool);
		}

		[Token(Token = "0x6001D1D")]
		[Address(RVA = "0xDE4A4C", Offset = "0xDE4A4C", VA = "0xDE4A4C")]
		private void OnHit(HitEvent hitEvent)
		{
		}

		[Token(Token = "0x6001D1E")]
		[Address(RVA = "0xDE503C", Offset = "0xDE503C", VA = "0xDE503C")]
		private void SetKOState(HitEvent hitEvent)
		{
		}

		[Token(Token = "0x6001D1F")]
		[Address(RVA = "0xDE589C", Offset = "0xDE589C", VA = "0xDE589C")]
		private void SetKOStateRemote(string rigidBodyName, Vector3 point, Vector3 direction, float impactForce)
		{
		}

		[Token(Token = "0x6001D20")]
		[Address(RVA = "0xDE5C78", Offset = "0xDE5C78", VA = "0xDE5C78")]
		private void GetUp(bool bRemote = false)
		{
		}

		[Token(Token = "0x6001D21")]
		[Address(RVA = "0xDE6640", Offset = "0xDE6640", VA = "0xDE6640")]
		private void Update()
		{
		}

		[Token(Token = "0x6001D22")]
		[Address(RVA = "0xDE7458", Offset = "0xDE7458", VA = "0xDE7458")]
		private void SyncPositionRotation(Vector3 position, Vector3 rotation)
		{
		}

		[Token(Token = "0x6001D23")]
		[Address(RVA = "0xDE7654", Offset = "0xDE7654", VA = "0xDE7654")]
		private bool AnimatorIsPlaying()
		{
			return default(bool);
		}

		[Token(Token = "0x6001D24")]
		[Address(RVA = "0xDE730C", Offset = "0xDE730C", VA = "0xDE730C")]
		public void UpdatetDestinationTarget()
		{
		}

		[Token(Token = "0x6001D25")]
		[Address(RVA = "0xDE1AD0", Offset = "0xDE1AD0", VA = "0xDE1AD0")]
		private void selectTarget()
		{
		}

		[Token(Token = "0x6001D26")]
		[Address(RVA = "0xDE7710", Offset = "0xDE7710", VA = "0xDE7710")]
		private void selectTargetRemote(string targetName)
		{
		}

		[Token(Token = "0x6001D27")]
		[Address(RVA = "0xDE78E4", Offset = "0xDE78E4", VA = "0xDE78E4")]
		private bool IsAnimationTag(string strAnimationTag, bool allowTransition = true)
		{
			return default(bool);
		}

		[Token(Token = "0x6001D28")]
		[Address(RVA = "0xDE7A04", Offset = "0xDE7A04", VA = "0xDE7A04")]
		private bool IsAnimation(string strAnimationName)
		{
			return default(bool);
		}

		[Token(Token = "0x6001D29")]
		[Address(RVA = "0xDE7AF8", Offset = "0xDE7AF8", VA = "0xDE7AF8")]
		private ZombieState GetAnimation()
		{
			return default(ZombieState);
		}

		[Token(Token = "0x6001D2A")]
		[Address(RVA = "0xDE1618", Offset = "0xDE1618", VA = "0xDE1618")]
		private void SetAnimation(string strAnimationName, bool force = false)
		{
		}

		[Token(Token = "0x6001D2B")]
		[Address(RVA = "0xDE5704", Offset = "0xDE5704", VA = "0xDE5704")]
		private bool IsWalkState(bool transition = true)
		{
			return default(bool);
		}

		[Token(Token = "0x6001D2C")]
		[Address(RVA = "0xDE578C", Offset = "0xDE578C", VA = "0xDE578C")]
		private bool IsChaseState(bool transition = true)
		{
			return default(bool);
		}

		[Token(Token = "0x6001D2D")]
		[Address(RVA = "0xDE567C", Offset = "0xDE567C", VA = "0xDE567C")]
		private bool IsGetUpState(bool transition = true)
		{
			return default(bool);
		}

		[Token(Token = "0x6001D2E")]
		[Address(RVA = "0xDE7C94", Offset = "0xDE7C94", VA = "0xDE7C94")]
		private bool IsClimbState(bool transition = true)
		{
			return default(bool);
		}

		[Token(Token = "0x6001D2F")]
		[Address(RVA = "0xDE5814", Offset = "0xDE5814", VA = "0xDE5814")]
		private bool IsRunState(bool transition = true)
		{
			return default(bool);
		}

		[Token(Token = "0x6001D30")]
		[Address(RVA = "0xDE2158", Offset = "0xDE2158", VA = "0xDE2158")]
		private bool IsIdleState(bool allowTransition = true)
		{
			return default(bool);
		}

		[Token(Token = "0x6001D31")]
		[Address(RVA = "0xDE73D0", Offset = "0xDE73D0", VA = "0xDE73D0")]
		private bool IsAttackState(bool transition = true)
		{
			return default(bool);
		}

		[Token(Token = "0x6001D32")]
		[Address(RVA = "0xDE23E8", Offset = "0xDE23E8", VA = "0xDE23E8")]
		private void SetWalkState(bool force = false, [Optional] string forceAnimation, float speedMultiplier = -1f, bool bRemote = false)
		{
		}

		[Token(Token = "0x6001D33")]
		[Address(RVA = "0xDE2A64", Offset = "0xDE2A64", VA = "0xDE2A64")]
		private void SetChaseState(bool force = false, [Optional] string forceAnimation, float speedMultiplier = -1f, bool bRemote = false)
		{
		}

		[Token(Token = "0x6001D34")]
		[Address(RVA = "0xDE7E9C", Offset = "0xDE7E9C", VA = "0xDE7E9C")]
		private string getRunSuffix()
		{
			return null;
		}

		[Token(Token = "0x6001D35")]
		[Address(RVA = "0xDE7F10", Offset = "0xDE7F10", VA = "0xDE7F10")]
		private string getClimbSuffix()
		{
			return null;
		}

		[Token(Token = "0x6001D36")]
		[Address(RVA = "0xDE7DDC", Offset = "0xDE7DDC", VA = "0xDE7DDC")]
		private string getChaseSuffix()
		{
			return null;
		}

		[Token(Token = "0x6001D37")]
		[Address(RVA = "0xDE7D1C", Offset = "0xDE7D1C", VA = "0xDE7D1C")]
		private string getWalkSuffix()
		{
			return null;
		}

		[Token(Token = "0x6001D38")]
		[Address(RVA = "0xDE4404", Offset = "0xDE4404", VA = "0xDE4404")]
		private void SetIdleState(bool force = false)
		{
		}

		[Token(Token = "0x6001D39")]
		[Address(RVA = "0xDE5F54", Offset = "0xDE5F54", VA = "0xDE5F54")]
		private bool SetGetUpState(bool force = false)
		{
			return default(bool);
		}

		[Token(Token = "0x6001D3A")]
		[Address(RVA = "0xDE372C", Offset = "0xDE372C", VA = "0xDE372C")]
		private void SetClimbState(bool force = false, float speedMultiplier = -1f, bool bRemote = false)
		{
		}

		[Token(Token = "0x6001D3B")]
		[Address(RVA = "0xDE1744", Offset = "0xDE1744", VA = "0xDE1744")]
		private void ResetTriggers()
		{
		}

		[Token(Token = "0x6001D3C")]
		[Address(RVA = "0xDE30C8", Offset = "0xDE30C8", VA = "0xDE30C8")]
		private void SetRunState(bool force = false, [Optional] string forceAnimation, float speedMultiplier = -1f, bool bRemote = false)
		{
		}

		[Token(Token = "0x6001D3D")]
		[Address(RVA = "0xDE7F50", Offset = "0xDE7F50", VA = "0xDE7F50")]
		private void SetAttackState()
		{
		}

		[Token(Token = "0x6001D3E")]
		[Address(RVA = "0xDE83A4", Offset = "0xDE83A4", VA = "0xDE83A4")]
		private string getJumpSuffix()
		{
			return null;
		}

		[Token(Token = "0x6001D3F")]
		[Address(RVA = "0xDE823C", Offset = "0xDE823C", VA = "0xDE823C")]
		private void AdjustAngle(bool lerp = true)
		{
		}

		[Token(Token = "0x6001D40")]
		[Address(RVA = "0xDE84BC", Offset = "0xDE84BC", VA = "0xDE84BC")]
		private void AdjustAttackAngle()
		{
		}

		[Token(Token = "0x6001D41")]
		[Address(RVA = "0xDE202C", Offset = "0xDE202C", VA = "0xDE202C")]
		private void SyncLifes(int lifes = -1)
		{
		}

		[Token(Token = "0x6001D42")]
		[Address(RVA = "0xDE85B4", Offset = "0xDE85B4", VA = "0xDE85B4")]
		private bool IsZombieNearMe(float distance)
		{
			return default(bool);
		}

		[Token(Token = "0x6001D43")]
		[Address(RVA = "0xDE6D10", Offset = "0xDE6D10", VA = "0xDE6D10")]
		private void CheckPlayerTarget()
		{
		}

		[Token(Token = "0x6001D44")]
		[Address(RVA = "0xDE8BB0", Offset = "0xDE8BB0", VA = "0xDE8BB0")]
		public ZombieModule()
		{
		}
	}
	[Token(Token = "0x20004B7")]
	public class AnimationController : LocationCharacterInstantiator
	{
		[Token(Token = "0x4001ACE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float startDelay;

		[Token(Token = "0x4001ACF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Animation animation;

		[Token(Token = "0x4001AD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public CharacterLocationData[] characters;

		[Token(Token = "0x4001AD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private new LocationController locationController;

		[Token(Token = "0x6001D4D")]
		[Address(RVA = "0xDE8F24", Offset = "0xDE8F24", VA = "0xDE8F24", Slot = "5")]
		public override void Activate()
		{
		}

		[Token(Token = "0x6001D4E")]
		[Address(RVA = "0xDE8F74", Offset = "0xDE8F74", VA = "0xDE8F74", Slot = "6")]
		public override void Deactivate()
		{
		}

		[Token(Token = "0x6001D4F")]
		[Address(RVA = "0xDE8F78", Offset = "0xDE8F78", VA = "0xDE8F78", Slot = "4")]
		public override void PreInitialize(LocationController locationController)
		{
		}

		[Token(Token = "0x6001D50")]
		[Address(RVA = "0xDE8FB8", Offset = "0xDE8FB8", VA = "0xDE8FB8")]
		private int getEnemiesCount()
		{
			return default(int);
		}

		[Token(Token = "0x6001D51")]
		[Address(RVA = "0xDE903C", Offset = "0xDE903C", VA = "0xDE903C")]
		private void StartAnimation()
		{
		}

		[Token(Token = "0x6001D52")]
		[Address(RVA = "0xDE9B98", Offset = "0xDE9B98", VA = "0xDE9B98", Slot = "7")]
		public override HashSet<string> GetCharacterPools()
		{
			return null;
		}

		[Token(Token = "0x6001D53")]
		[Address(RVA = "0xDE9C80", Offset = "0xDE9C80", VA = "0xDE9C80", Slot = "8")]
		public override void Reload()
		{
		}

		[Token(Token = "0x6001D54")]
		[Address(RVA = "0xDE9C84", Offset = "0xDE9C84", VA = "0xDE9C84")]
		public AnimationController()
		{
		}
	}
	[Token(Token = "0x20004B8")]
	public class AnimatorEvent : MonoBehaviour
	{
		[Token(Token = "0x20004B9")]
		public enum EventType
		{
			[Token(Token = "0x4001ADB")]
			OnStep,
			[Token(Token = "0x4001ADC")]
			OnLocationActivated
		}

		[Token(Token = "0x4001AD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public EventType eventType;

		[Token(Token = "0x4001AD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int locationId;

		[Token(Token = "0x4001AD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int nextLocationId;

		[Token(Token = "0x4001AD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public int step;

		[Token(Token = "0x4001AD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float timeOut;

		[Token(Token = "0x4001AD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string animatorState;

		[Token(Token = "0x4001AD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Animator animator;

		[Token(Token = "0x4001AD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private NextLocationStep stepEvent;

		[Token(Token = "0x6001D55")]
		[Address(RVA = "0xDE9C94", Offset = "0xDE9C94", VA = "0xDE9C94")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001D56")]
		[Address(RVA = "0xDE9E8C", Offset = "0xDE9E8C", VA = "0xDE9E8C")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001D57")]
		[Address(RVA = "0xDEA018", Offset = "0xDEA018", VA = "0xDEA018")]
		private void OnLocationEvent(int locationId)
		{
		}

		[Token(Token = "0x6001D58")]
		[Address(RVA = "0xDEA120", Offset = "0xDEA120", VA = "0xDEA120")]
		private void OnStepEvent()
		{
		}

		[Token(Token = "0x6001D59")]
		[Address(RVA = "0xDEA02C", Offset = "0xDEA02C", VA = "0xDEA02C")]
		private void OnEvent()
		{
		}

		[Token(Token = "0x6001D5A")]
		[Address(RVA = "0xDEA124", Offset = "0xDEA124", VA = "0xDEA124")]
		private void Disable()
		{
		}

		[Token(Token = "0x6001D5B")]
		[Address(RVA = "0xDEA148", Offset = "0xDEA148", VA = "0xDEA148")]
		public AnimatorEvent()
		{
		}
	}
	[Token(Token = "0x20004BA")]
	public class Challenge3_Steps : MonoBehaviour
	{
		[Token(Token = "0x4001ADD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Header("Break door animation")]
		public GameObject breakDoor;

		[Token(Token = "0x4001ADE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject swat0;

		[Token(Token = "0x4001ADF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameObject swat1;

		[Token(Token = "0x4001AE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[Header("Atic Ladder animation")]
		public GameObject aticLadder;

		[Token(Token = "0x4001AE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public DestructibleAnimation wallDestructible;

		[Token(Token = "0x6001D5C")]
		[Address(RVA = "0xDEA158", Offset = "0xDEA158", VA = "0xDEA158")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001D5D")]
		[Address(RVA = "0xDEA2D8", Offset = "0xDEA2D8", VA = "0xDEA2D8")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001D5E")]
		[Address(RVA = "0xDEA408", Offset = "0xDEA408", VA = "0xDEA408")]
		private void OnLocationInitialized(int locationId)
		{
		}

		[Token(Token = "0x6001D5F")]
		[Address(RVA = "0xDEA4A4", Offset = "0xDEA4A4", VA = "0xDEA4A4")]
		private void OnLocationActivated(int locationId)
		{
		}

		[Token(Token = "0x6001D60")]
		[Address(RVA = "0xDEA860", Offset = "0xDEA860", VA = "0xDEA860")]
		private void ExecuteBreakDoorAnimation()
		{
		}

		[Token(Token = "0x6001D61")]
		[Address(RVA = "0xDEAA30", Offset = "0xDEAA30", VA = "0xDEAA30")]
		private void ExecuteAticLadderAnimation()
		{
		}

		[Token(Token = "0x6001D62")]
		[Address(RVA = "0xDEAA50", Offset = "0xDEAA50", VA = "0xDEAA50")]
		private void DestroyWall()
		{
		}

		[Token(Token = "0x6001D63")]
		[Address(RVA = "0xDEAA6C", Offset = "0xDEAA6C", VA = "0xDEAA6C")]
		public Challenge3_Steps()
		{
		}
	}
	[Token(Token = "0x20004BC")]
	public class CharacterData : MonoBehaviour
	{
		[Token(Token = "0x4001AE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string characterPool;

		[Token(Token = "0x4001AE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string characterSet;

		[Token(Token = "0x4001AE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Skill.SkillLevel skillLevel;

		[Token(Token = "0x4001AE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public int lifes;

		[Token(Token = "0x4001AE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public RuntimeAnimatorController animatorController;

		[Token(Token = "0x4001AE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public bool randomWeapon;

		[Token(Token = "0x4001AEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
		public bool hideOnDead;

		[Token(Token = "0x4001AEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float timeOutWhenDead;

		[Token(Token = "0x4001AEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[HideInInspector]
		public WeaponModel weapon;

		[Token(Token = "0x4001AED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public CommonCharacterController character;

		[Token(Token = "0x4001AEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public bool forceActionActivationInOnline;

		[Token(Token = "0x4001AEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
		private bool hasCharacter;

		[Token(Token = "0x6001D67")]
		[Address(RVA = "0xDEAB4C", Offset = "0xDEAB4C", VA = "0xDEAB4C")]
		public void Awake()
		{
		}

		[Token(Token = "0x6001D68")]
		[Address(RVA = "0xDEABBC", Offset = "0xDEABBC", VA = "0xDEABBC")]
		public void OnEnable()
		{
		}

		[Token(Token = "0x6001D69")]
		[Address(RVA = "0xDEAC88", Offset = "0xDEAC88", VA = "0xDEAC88")]
		public void OnDisable()
		{
		}

		[Token(Token = "0x6001D6A")]
		[Address(RVA = "0xDEAD54", Offset = "0xDEAD54", VA = "0xDEAD54")]
		private void Reactivate(int i)
		{
		}

		[Token(Token = "0x6001D6B")]
		[Address(RVA = "0xDEAD6C", Offset = "0xDEAD6C", VA = "0xDEAD6C")]
		public CharacterData()
		{
		}
	}
	[Token(Token = "0x20004BD")]
	public class CharacterLocationData : MonoBehaviour
	{
		[Token(Token = "0x4001AF0")]
		private const string ACTIONS_CONTAINER = "actions";

		[Token(Token = "0x4001AF1")]
		private const string BONUS_ACTIONS_CONTAINER = "bonusActions";

		[Token(Token = "0x4001AF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		public CharacterData characterData;

		[Token(Token = "0x4001AF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private List<CharacterAction> characterActions;

		[Token(Token = "0x6001D6C")]
		[Address(RVA = "0xDE916C", Offset = "0xDE916C", VA = "0xDE916C")]
		public void PreInitialize()
		{
		}

		[Token(Token = "0x6001D6D")]
		[Address(RVA = "0xDE94E0", Offset = "0xDE94E0", VA = "0xDE94E0")]
		public void SetUp(string prefix = "", int poolInstance = -1)
		{
		}

		[Token(Token = "0x6001D6E")]
		[Address(RVA = "0xDEAD88", Offset = "0xDEAD88", VA = "0xDEAD88")]
		private void StartActions()
		{
		}

		[Token(Token = "0x6001D6F")]
		[Address(RVA = "0xDEADBC", Offset = "0xDEADBC", VA = "0xDEADBC")]
		public void AddActions(CharacterAction[] characterActions)
		{
		}

		[Token(Token = "0x6001D70")]
		[Address(RVA = "0xDEAEF0", Offset = "0xDEAEF0", VA = "0xDEAEF0")]
		public void AddAction(CharacterAction characterAction)
		{
		}

		[Token(Token = "0x6001D71")]
		[Address(RVA = "0xDEAF4C", Offset = "0xDEAF4C", VA = "0xDEAF4C")]
		public List<CharacterAction> GetActions()
		{
			return null;
		}

		[Token(Token = "0x6001D72")]
		[Address(RVA = "0xDEAF54", Offset = "0xDEAF54", VA = "0xDEAF54")]
		public void Clear()
		{
		}

		[Token(Token = "0x6001D73")]
		[Address(RVA = "0xDE9B7C", Offset = "0xDE9B7C", VA = "0xDE9B7C")]
		public CommonCharacterController GetCharacter()
		{
			return null;
		}

		[Token(Token = "0x6001D74")]
		[Address(RVA = "0xDEAF74", Offset = "0xDEAF74", VA = "0xDEAF74")]
		public CharacterLocationData()
		{
		}
	}
	[Token(Token = "0x20004BE")]
	public class LocationCharacter : LocationCharacterInstantiator
	{
		[Token(Token = "0x4001AF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SumalabEvent<LocationCharacter> OnLocationCharacterDead;

		[Token(Token = "0x4001AF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public CharacterLocationData characterLocationData;

		[Token(Token = "0x4001AF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool clearAllowed;

		[Token(Token = "0x4001AF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
		private bool pendingSpawn;

		[Token(Token = "0x6001D75")]
		[Address(RVA = "0xDEAF7C", Offset = "0xDEAF7C", VA = "0xDEAF7C", Slot = "4")]
		public override void PreInitialize(LocationController locationController)
		{
		}

		[Token(Token = "0x6001D76")]
		[Address(RVA = "0xDEAFA4", Offset = "0xDEAFA4", VA = "0xDEAFA4", Slot = "5")]
		public override void Activate()
		{
		}

		[Token(Token = "0x6001D77")]
		[Address(RVA = "0xDEB26C", Offset = "0xDEB26C", VA = "0xDEB26C")]
		public void SpawnCharacter(int poolInstance = -1, WeaponModel weaponModel = WeaponModel.None)
		{
		}

		[Token(Token = "0x6001D78")]
		[Address(RVA = "0xDEB944", Offset = "0xDEB944", VA = "0xDEB944", Slot = "8")]
		public override void Reload()
		{
		}

		[Token(Token = "0x6001D79")]
		[Address(RVA = "0xDEB95C", Offset = "0xDEB95C", VA = "0xDEB95C", Slot = "6")]
		public override void Deactivate()
		{
		}

		[Token(Token = "0x6001D7A")]
		[Address(RVA = "0xDEBC30", Offset = "0xDEBC30", VA = "0xDEBC30")]
		private void OnCharacterDead()
		{
		}

		[Token(Token = "0x6001D7B")]
		[Address(RVA = "0xDEBD18", Offset = "0xDEBD18", VA = "0xDEBD18", Slot = "7")]
		public override HashSet<string> GetCharacterPools()
		{
			return null;
		}

		[Token(Token = "0x6001D7C")]
		[Address(RVA = "0xDEBDC0", Offset = "0xDEBDC0", VA = "0xDEBDC0")]
		public LocationCharacter()
		{
		}
	}
	[Token(Token = "0x20004C0")]
	public class LocationCharacterActivator : MonoBehaviour
	{
		[Token(Token = "0x4001AFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int locationId;

		[Token(Token = "0x6001D7F")]
		[Address(RVA = "0xDEBE70", Offset = "0xDEBE70", VA = "0xDEBE70", Slot = "4")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x6001D80")]
		[Address(RVA = "0xDEBFA0", Offset = "0xDEBFA0", VA = "0xDEBFA0", Slot = "5")]
		protected virtual void OnDestroy()
		{
		}

		[Token(Token = "0x6001D81")]
		[Address(RVA = "0xDEC06C", Offset = "0xDEC06C", VA = "0xDEC06C")]
		private void OnLocationActivated(int locationId)
		{
		}

		[Token(Token = "0x6001D82")]
		[Address(RVA = "0xDEC088", Offset = "0xDEC088", VA = "0xDEC088")]
		private void OnLocationReactivated(int locationId)
		{
		}

		[Token(Token = "0x6001D83")]
		[Address(RVA = "0xDEC0A4", Offset = "0xDEC0A4", VA = "0xDEC0A4", Slot = "6")]
		protected virtual void Activate()
		{
		}

		[Token(Token = "0x6001D84")]
		[Address(RVA = "0xDEC1C8", Offset = "0xDEC1C8", VA = "0xDEC1C8", Slot = "7")]
		protected virtual void Deactivate()
		{
		}

		[Token(Token = "0x6001D85")]
		[Address(RVA = "0xDEC2A8", Offset = "0xDEC2A8", VA = "0xDEC2A8")]
		public LocationCharacterActivator()
		{
		}
	}
	[Token(Token = "0x20004C1")]
	public class LocationCharacterAISpawner : LocationCharacterInstantiator
	{
		[Token(Token = "0x4001AFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SumalabEvent OnComplete;

		[Token(Token = "0x4001AFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int spawnsCount;

		[Token(Token = "0x4001AFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public int maxCharactersAlive;

		[Token(Token = "0x4001AFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float minSpawnTime;

		[Token(Token = "0x4001B00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float maxSpawnTime;

		[Token(Token = "0x4001B01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public bool autoEnable;

		[Token(Token = "0x4001B02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public int spawnsCompleted;

		[Token(Token = "0x4001B03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public int charactersDead;

		[Token(Token = "0x4001B04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public List<string> pools;

		[Token(Token = "0x4001B05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public List<CharacterSpot> prefilledCharacterSpots;

		[Token(Token = "0x4001B06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private List<LocationCharacter> locationCharacters;

		[Token(Token = "0x4001B07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private List<CharacterLocationData> activeCharacters;

		[Token(Token = "0x4001B08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private bool pendingSpawn;

		[Token(Token = "0x4001B09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private float lastCheck;

		[Token(Token = "0x6001D86")]
		[Address(RVA = "0xDEC2B0", Offset = "0xDEC2B0", VA = "0xDEC2B0", Slot = "4")]
		public override void PreInitialize(LocationController locationController)
		{
		}

		[Token(Token = "0x6001D87")]
		[Address(RVA = "0xDEC504", Offset = "0xDEC504", VA = "0xDEC504", Slot = "5")]
		public override void Activate()
		{
		}

		[Token(Token = "0x6001D88")]
		[Address(RVA = "0xDEC698", Offset = "0xDEC698", VA = "0xDEC698", Slot = "6")]
		public override void Deactivate()
		{
		}

		[Token(Token = "0x6001D89")]
		[Address(RVA = "0xDEC8BC", Offset = "0xDEC8BC", VA = "0xDEC8BC")]
		private void PrepareSpawner()
		{
		}

		[Token(Token = "0x6001D8A")]
		[Address(RVA = "0xDECB94", Offset = "0xDECB94", VA = "0xDECB94")]
		public void ActivateSpawner()
		{
		}

		[Token(Token = "0x6001D8B")]
		[Address(RVA = "0xDEDBE4", Offset = "0xDEDBE4", VA = "0xDEDBE4")]
		private void OnLocationCharacterDead(LocationCharacter locationCharacter)
		{
		}

		[Token(Token = "0x6001D8C")]
		[Address(RVA = "0xDECB14", Offset = "0xDECB14", VA = "0xDECB14")]
		private void SpawnPrefilledCharacters()
		{
		}

		[Token(Token = "0x6001D8D")]
		[Address(RVA = "0xDECD1C", Offset = "0xDECD1C", VA = "0xDECD1C")]
		public void SpawnCharacter(int iSpot = -1, bool bRemote = false, int _spawnsCompleted = -1, int characterPool = -1, int poolInstance = -1, WeaponModel weaponModel = WeaponModel.None)
		{
		}

		[Token(Token = "0x6001D8E")]
		[Address(RVA = "0xDEDCB4", Offset = "0xDEDCB4", VA = "0xDEDCB4")]
		private void DespawnCharacter(CharacterLocationData characterLocationData)
		{
		}

		[Token(Token = "0x6001D8F")]
		[Address(RVA = "0xDEDE18", Offset = "0xDEDE18", VA = "0xDEDE18", Slot = "7")]
		public override HashSet<string> GetCharacterPools()
		{
			return null;
		}

		[Token(Token = "0x6001D90")]
		[Address(RVA = "0xDEDE94", Offset = "0xDEDE94", VA = "0xDEDE94", Slot = "8")]
		public override void Reload()
		{
		}

		[Token(Token = "0x6001D91")]
		[Address(RVA = "0xDEE11C", Offset = "0xDEE11C", VA = "0xDEE11C")]
		public void Update()
		{
		}

		[Token(Token = "0x6001D92")]
		[Address(RVA = "0xDEE170", Offset = "0xDEE170", VA = "0xDEE170")]
		private void CheckEnemies()
		{
		}

		[Token(Token = "0x6001D93")]
		[Address(RVA = "0xDEE2E4", Offset = "0xDEE2E4", VA = "0xDEE2E4")]
		public LocationCharacterAISpawner()
		{
		}
	}
	[Token(Token = "0x20004C3")]
	public class LocationCharacterGlobalSpawner : LocationCharacterInstantiator
	{
		[Token(Token = "0x4001B0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SumalabEvent OnComplete;

		[Token(Token = "0x4001B0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int spawnsCount;

		[Token(Token = "0x4001B0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public int maxCharactersAlive;

		[Token(Token = "0x4001B0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float minSpawnTime;

		[Token(Token = "0x4001B10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float maxSpawnTime;

		[Token(Token = "0x4001B11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public int spawnsCompleted;

		[Token(Token = "0x4001B12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public int charactersDead;

		[Token(Token = "0x4001B13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float activationDelay;

		[Token(Token = "0x4001B14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public bool autoActivate;

		[Token(Token = "0x4001B15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private CharacterLocationData[] characterSpawns;

		[Token(Token = "0x4001B16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private List<CharacterLocationData> availableCharacters;

		[Token(Token = "0x4001B17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private List<LocationCharacter> locationCharacters;

		[Token(Token = "0x4001B18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private bool pendingSpawn;

		[Token(Token = "0x4001B19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private List<CharacterLocationData> enemiesSpawned;

		[Token(Token = "0x4001B1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private float lastCheck;

		[Token(Token = "0x6001D98")]
		[Address(RVA = "0xDEE4C8", Offset = "0xDEE4C8", VA = "0xDEE4C8", Slot = "4")]
		public override void PreInitialize(LocationController locationController)
		{
		}

		[Token(Token = "0x6001D99")]
		[Address(RVA = "0xDEE7EC", Offset = "0xDEE7EC", VA = "0xDEE7EC", Slot = "5")]
		public override void Activate()
		{
		}

		[Token(Token = "0x6001D9A")]
		[Address(RVA = "0xDEEB50", Offset = "0xDEEB50", VA = "0xDEEB50", Slot = "6")]
		public override void Deactivate()
		{
		}

		[Token(Token = "0x6001D9B")]
		[Address(RVA = "0xDEEC78", Offset = "0xDEEC78", VA = "0xDEEC78")]
		public void ActivateSpawner()
		{
		}

		[Token(Token = "0x6001D9C")]
		[Address(RVA = "0xDEF0B0", Offset = "0xDEF0B0", VA = "0xDEF0B0")]
		private void OnLocationCharacterDead(LocationCharacter locationCharacter)
		{
		}

		[Token(Token = "0x6001D9D")]
		[Address(RVA = "0xDEF160", Offset = "0xDEF160", VA = "0xDEF160")]
		private void SpawnCharacter()
		{
		}

		[Token(Token = "0x6001D9E")]
		[Address(RVA = "0xDEF354", Offset = "0xDEF354", VA = "0xDEF354")]
		public void SpawnCharacter(int spawnsCompleted, int index)
		{
		}

		[Token(Token = "0x6001D9F")]
		[Address(RVA = "0xDEF8C4", Offset = "0xDEF8C4", VA = "0xDEF8C4")]
		public void SpawnCharacter(int spawnsCompleted, string strCharacterName, int poolInstance, WeaponModel weaponModel = WeaponModel.None)
		{
		}

		[Token(Token = "0x6001DA0")]
		[Address(RVA = "0xDEF9C4", Offset = "0xDEF9C4", VA = "0xDEF9C4")]
		private CharacterLocationData findAvailableCharacter(string strCharacterName)
		{
			return null;
		}

		[Token(Token = "0x6001DA1")]
		[Address(RVA = "0xDEF400", Offset = "0xDEF400", VA = "0xDEF400")]
		private void SpawnCharacter(CharacterLocationData characterLocationData, int spawnsCompleted, int poolInstance = -1, WeaponModel weaponModel = WeaponModel.None)
		{
		}

		[Token(Token = "0x6001DA2")]
		[Address(RVA = "0xDEFB20", Offset = "0xDEFB20", VA = "0xDEFB20")]
		private void DespawnCharacter(CharacterLocationData characterLocationData)
		{
		}

		[Token(Token = "0x6001DA3")]
		[Address(RVA = "0xDEFDFC", Offset = "0xDEFDFC", VA = "0xDEFDFC", Slot = "8")]
		public override void Reload()
		{
		}

		[Token(Token = "0x6001DA4")]
		[Address(RVA = "0xDF0010", Offset = "0xDF0010", VA = "0xDF0010", Slot = "7")]
		public override HashSet<string> GetCharacterPools()
		{
			return null;
		}

		[Token(Token = "0x6001DA5")]
		[Address(RVA = "0xDF00F8", Offset = "0xDF00F8", VA = "0xDF00F8")]
		public void Update()
		{
		}

		[Token(Token = "0x6001DA6")]
		[Address(RVA = "0xDF014C", Offset = "0xDF014C", VA = "0xDF014C")]
		private void CheckEnemies()
		{
		}

		[Token(Token = "0x6001DA7")]
		[Address(RVA = "0xDF02C0", Offset = "0xDF02C0", VA = "0xDF02C0")]
		public LocationCharacterGlobalSpawner()
		{
		}
	}
	[Token(Token = "0x20004C5")]
	public abstract class LocationCharacterInstantiator : MonoBehaviour
	{
		[Token(Token = "0x4001B1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected LocationController locationController;

		[Token(Token = "0x6001DAB")]
		[Address(RVA = "0xDF044C", Offset = "0xDF044C", VA = "0xDF044C", Slot = "4")]
		public virtual void PreInitialize(LocationController locationController)
		{
		}

		[Token(Token = "0x6001DAC")]
		[Address(RVA = "0xDEB190", Offset = "0xDEB190", VA = "0xDEB190", Slot = "5")]
		public virtual void Activate()
		{
		}

		[Token(Token = "0x6001DAD")]
		[Address(RVA = "0xDEBB54", Offset = "0xDEBB54", VA = "0xDEBB54", Slot = "6")]
		public virtual void Deactivate()
		{
		}

		[Token(Token = "0x6001DAE")]
		public abstract HashSet<string> GetCharacterPools();

		[Token(Token = "0x6001DAF")]
		public abstract void Reload();

		[Token(Token = "0x6001DB0")]
		[Address(RVA = "0xDE9C8C", Offset = "0xDE9C8C", VA = "0xDE9C8C")]
		protected LocationCharacterInstantiator()
		{
		}
	}
	[Token(Token = "0x20004C6")]
	public class LocationCharacterSpawner : LocationCharacterInstantiator
	{
		[Token(Token = "0x4001B1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CharacterLocationData[] characterSpawns;

		[Token(Token = "0x4001B1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool randomSpawns;

		[Token(Token = "0x4001B20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public int spawnsCount;

		[Token(Token = "0x4001B21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int spawnsCompleted;

		[Token(Token = "0x4001B22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private int spawnIndex;

		[Token(Token = "0x4001B23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool pendingSpawn;

		[Token(Token = "0x4001B24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
		private bool firstSpwan;

		[Token(Token = "0x6001DB1")]
		[Address(RVA = "0xDF0454", Offset = "0xDF0454", VA = "0xDF0454", Slot = "4")]
		public override void PreInitialize(LocationController locationController)
		{
		}

		[Token(Token = "0x6001DB2")]
		[Address(RVA = "0xDF0564", Offset = "0xDF0564", VA = "0xDF0564", Slot = "5")]
		public override void Activate()
		{
		}

		[Token(Token = "0x6001DB3")]
		[Address(RVA = "0xDF0804", Offset = "0xDF0804", VA = "0xDF0804", Slot = "6")]
		public override void Deactivate()
		{
		}

		[Token(Token = "0x6001DB4")]
		[Address(RVA = "0xDF091C", Offset = "0xDF091C", VA = "0xDF091C")]
		private void DespawnCharacter()
		{
		}

		[Token(Token = "0x6001DB5")]
		[Address(RVA = "0xDF06E0", Offset = "0xDF06E0", VA = "0xDF06E0")]
		private void SpawnCharacter()
		{
		}

		[Token(Token = "0x6001DB6")]
		[Address(RVA = "0xDF0A48", Offset = "0xDF0A48", VA = "0xDF0A48")]
		public void SpawnCharacter(int spawnsCompleted, int index, int poolInstance = -1, WeaponModel weaponModel = WeaponModel.None)
		{
		}

		[Token(Token = "0x6001DB7")]
		[Address(RVA = "0xDF0D80", Offset = "0xDF0D80", VA = "0xDF0D80", Slot = "8")]
		public override void Reload()
		{
		}

		[Token(Token = "0x6001DB8")]
		[Address(RVA = "0xDF0D9C", Offset = "0xDF0D9C", VA = "0xDF0D9C", Slot = "7")]
		public override HashSet<string> GetCharacterPools()
		{
			return null;
		}

		[Token(Token = "0x6001DB9")]
		[Address(RVA = "0xDF0E84", Offset = "0xDF0E84", VA = "0xDF0E84")]
		public LocationCharacterSpawner()
		{
		}
	}
	[Token(Token = "0x20004C7")]
	public class LocationCharacterWaves : LocationCharacterInstantiator
	{
		[Serializable]
		[Token(Token = "0x20004C8")]
		public class Wave
		{
			[Token(Token = "0x4001B2F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public CharacterLocationData[] characters;

			[Token(Token = "0x4001B30")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public float delay;

			[Token(Token = "0x6001DCA")]
			[Address(RVA = "0xDF206C", Offset = "0xDF206C", VA = "0xDF206C")]
			public Wave()
			{
			}
		}

		[Token(Token = "0x4001B25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Wave[] waves;

		[Token(Token = "0x4001B26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float startDelay;

		[Token(Token = "0x4001B27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float delayBetweenWaves;

		[Token(Token = "0x4001B28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public int waveCharactersDead;

		[Token(Token = "0x4001B29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public int waveIndex;

		[Token(Token = "0x4001B2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public bool pendingWave;

		[Token(Token = "0x4001B2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
		[Tooltip("start the action (with delay if configured) when the location is ready (just before ready-set-go)")]
		public bool startSyncWithLocationActivation;

		[Token(Token = "0x4001B2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private List<CharacterLocationData> enemiesSpawned;

		[Token(Token = "0x4001B2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private bool bActive;

		[Token(Token = "0x4001B2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private float lastCheck;

		[Token(Token = "0x6001DBA")]
		[Address(RVA = "0xDF0E94", Offset = "0xDF0E94", VA = "0xDF0E94", Slot = "4")]
		public override void PreInitialize(LocationController locationController)
		{
		}

		[Token(Token = "0x6001DBB")]
		[Address(RVA = "0xDF0FA0", Offset = "0xDF0FA0", VA = "0xDF0FA0", Slot = "5")]
		public override void Activate()
		{
		}

		[Token(Token = "0x6001DBC")]
		[Address(RVA = "0xDF1080", Offset = "0xDF1080", VA = "0xDF1080")]
		private void addEnemies()
		{
		}

		[Token(Token = "0x6001DBD")]
		[Address(RVA = "0xDF1248", Offset = "0xDF1248", VA = "0xDF1248")]
		private void activateInternal()
		{
		}

		[Token(Token = "0x6001DBE")]
		[Address(RVA = "0xDF129C", Offset = "0xDF129C", VA = "0xDF129C")]
		private int getEnemiesCount(Wave wave)
		{
			return default(int);
		}

		[Token(Token = "0x6001DBF")]
		[Address(RVA = "0xDF1324", Offset = "0xDF1324", VA = "0xDF1324", Slot = "6")]
		public override void Deactivate()
		{
		}

		[Token(Token = "0x6001DC0")]
		[Address(RVA = "0xDF134C", Offset = "0xDF134C", VA = "0xDF134C")]
		public void StartWave()
		{
		}

		[Token(Token = "0x6001DC1")]
		[Address(RVA = "0xDF1440", Offset = "0xDF1440", VA = "0xDF1440")]
		public void StartWave(int index, [Optional] int[] poolInstances, [Optional] WeaponModel[] weaponModels)
		{
		}

		[Token(Token = "0x6001DC2")]
		[Address(RVA = "0xDF1A2C", Offset = "0xDF1A2C", VA = "0xDF1A2C")]
		private void DespawnCharacter(CharacterLocationData characterLocationData)
		{
		}

		[Token(Token = "0x6001DC3")]
		[Address(RVA = "0xDF1C50", Offset = "0xDF1C50", VA = "0xDF1C50", Slot = "8")]
		public override void Reload()
		{
		}

		[Token(Token = "0x6001DC4")]
		[Address(RVA = "0xDF1AB4", Offset = "0xDF1AB4", VA = "0xDF1AB4")]
		public void StopWave()
		{
		}

		[Token(Token = "0x6001DC5")]
		[Address(RVA = "0xDF1CE4", Offset = "0xDF1CE4", VA = "0xDF1CE4", Slot = "7")]
		public override HashSet<string> GetCharacterPools()
		{
			return null;
		}

		[Token(Token = "0x6001DC6")]
		[Address(RVA = "0xDF1E10", Offset = "0xDF1E10", VA = "0xDF1E10")]
		public void Update()
		{
		}

		[Token(Token = "0x6001DC7")]
		[Address(RVA = "0xDF1E64", Offset = "0xDF1E64", VA = "0xDF1E64")]
		private void CheckEnemies()
		{
		}

		[Token(Token = "0x6001DC8")]
		[Address(RVA = "0xDF1FD8", Offset = "0xDF1FD8", VA = "0xDF1FD8")]
		public LocationCharacterWaves()
		{
		}
	}
	[Token(Token = "0x20004CA")]
	public class Mansion_Alarm : MonoBehaviour
	{
		[Token(Token = "0x20004CB")]
		[CompilerGenerated]
		private sealed class <PlayAlarmCoroutine>d__9 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001B39")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001B3A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001B3B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Mansion_Alarm <>4__this;

			[Token(Token = "0x1700017D")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001DD8")]
				[Address(RVA = "0xDF29B4", Offset = "0xDF29B4", VA = "0xDF29B4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700017E")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001DDA")]
				[Address(RVA = "0xDF29FC", Offset = "0xDF29FC", VA = "0xDF29FC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001DD5")]
			[Address(RVA = "0xDF2234", Offset = "0xDF2234", VA = "0xDF2234")]
			[DebuggerHidden]
			public <PlayAlarmCoroutine>d__9(int <>1__state)
			{
			}

			[Token(Token = "0x6001DD6")]
			[Address(RVA = "0xDF23BC", Offset = "0xDF23BC", VA = "0xDF23BC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001DD7")]
			[Address(RVA = "0xDF23C0", Offset = "0xDF23C0", VA = "0xDF23C0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001DD9")]
			[Address(RVA = "0xDF29BC", Offset = "0xDF29BC", VA = "0xDF29BC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20004CC")]
		[CompilerGenerated]
		private sealed class <setAlarmVolume>d__10 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001B3C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001B3D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001B3E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float delay;

			[Token(Token = "0x4001B3F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Mansion_Alarm <>4__this;

			[Token(Token = "0x4001B40")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public float volume;

			[Token(Token = "0x4001B41")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			public bool stop;

			[Token(Token = "0x1700017F")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001DDE")]
				[Address(RVA = "0xDF2AE8", Offset = "0xDF2AE8", VA = "0xDF2AE8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000180")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001DE0")]
				[Address(RVA = "0xDF2B30", Offset = "0xDF2B30", VA = "0xDF2B30", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001DDB")]
			[Address(RVA = "0xDF22FC", Offset = "0xDF22FC", VA = "0xDF22FC")]
			[DebuggerHidden]
			public <setAlarmVolume>d__10(int <>1__state)
			{
			}

			[Token(Token = "0x6001DDC")]
			[Address(RVA = "0xDF2A04", Offset = "0xDF2A04", VA = "0xDF2A04", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001DDD")]
			[Address(RVA = "0xDF2A08", Offset = "0xDF2A08", VA = "0xDF2A08", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001DDF")]
			[Address(RVA = "0xDF2AF0", Offset = "0xDF2AF0", VA = "0xDF2AF0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001B33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AudioClip alarmLoop;

		[Token(Token = "0x4001B34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AudioClip[] destructionMessage;

		[Token(Token = "0x4001B35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public AudioClip overrideMessage;

		[Token(Token = "0x4001B36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public AudioSource alarmAS;

		[Token(Token = "0x4001B37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public AudioSource messagesAS;

		[Token(Token = "0x4001B38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static Mansion_Alarm Instance;

		[Token(Token = "0x6001DCD")]
		[Address(RVA = "0xDF2094", Offset = "0xDF2094", VA = "0xDF2094")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001DCE")]
		[Address(RVA = "0xDF20EC", Offset = "0xDF20EC", VA = "0xDF20EC")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001DCF")]
		[Address(RVA = "0xDF21A0", Offset = "0xDF21A0", VA = "0xDF21A0")]
		public void PlayAlarm()
		{
		}

		[Token(Token = "0x6001DD0")]
		[Address(RVA = "0xDF21C0", Offset = "0xDF21C0", VA = "0xDF21C0")]
		[IteratorStateMachine(typeof(<PlayAlarmCoroutine>d__9))]
		private IEnumerator PlayAlarmCoroutine()
		{
			return null;
		}

		[Token(Token = "0x6001DD1")]
		[Address(RVA = "0xDF225C", Offset = "0xDF225C", VA = "0xDF225C")]
		[IteratorStateMachine(typeof(<setAlarmVolume>d__10))]
		private IEnumerator setAlarmVolume(float volume, float delay = 0f, bool stop = false)
		{
			return null;
		}

		[Token(Token = "0x6001DD2")]
		[Address(RVA = "0xDF2324", Offset = "0xDF2324", VA = "0xDF2324")]
		public void OverrideAlarm()
		{
		}

		[Token(Token = "0x6001DD3")]
		[Address(RVA = "0xDF237C", Offset = "0xDF237C", VA = "0xDF237C")]
		private void PlayAlarmMessage(AudioClip clip)
		{
		}

		[Token(Token = "0x6001DD4")]
		[Address(RVA = "0xDF23B4", Offset = "0xDF23B4", VA = "0xDF23B4")]
		public Mansion_Alarm()
		{
		}
	}
	[Token(Token = "0x20004CD")]
	public class Mansion_ElevatorStep : MonoBehaviour
	{
		[Token(Token = "0x20004CE")]
		[CompilerGenerated]
		private sealed class <EnterElevatorCoroutine>d__24 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001B53")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001B54")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001B55")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Mansion_ElevatorStep <>4__this;

			[Token(Token = "0x17000181")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001DEF")]
				[Address(RVA = "0xDF44A8", Offset = "0xDF44A8", VA = "0xDF44A8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000182")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001DF1")]
				[Address(RVA = "0xDF44F0", Offset = "0xDF44F0", VA = "0xDF44F0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001DEC")]
			[Address(RVA = "0xDF419C", Offset = "0xDF419C", VA = "0xDF419C")]
			[DebuggerHidden]
			public <EnterElevatorCoroutine>d__24(int <>1__state)
			{
			}

			[Token(Token = "0x6001DED")]
			[Address(RVA = "0xDF41C4", Offset = "0xDF41C4", VA = "0xDF41C4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001DEE")]
			[Address(RVA = "0xDF41C8", Offset = "0xDF41C8", VA = "0xDF41C8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001DF0")]
			[Address(RVA = "0xDF44B0", Offset = "0xDF44B0", VA = "0xDF44B0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001B42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int locationId;

		[Token(Token = "0x4001B43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int nextLocationId;

		[Token(Token = "0x4001B44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AudioSource elevatorAudio;

		[Token(Token = "0x4001B45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public AudioClip shelfSound0;

		[Token(Token = "0x4001B46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public AudioClip shelfSound1;

		[Token(Token = "0x4001B47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public AudioClip elevatorOpenDoors;

		[Token(Token = "0x4001B48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public AudioClip elevatorMusic;

		[Token(Token = "0x4001B49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Transform elevatorLibrary;

		[Token(Token = "0x4001B4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Transform elevatorTransition;

		[Token(Token = "0x4001B4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Transform shelf;

		[Token(Token = "0x4001B4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Transform elevatorDoorL;

		[Token(Token = "0x4001B4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Transform elevatorDoorR;

		[Token(Token = "0x4001B4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public Transform shelfMovePosition0;

		[Token(Token = "0x4001B4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public Transform shelfMovePosition1;

		[Token(Token = "0x4001B50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public Transform elevatorDoorL_openPosition;

		[Token(Token = "0x4001B51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public Transform elevatorDoorR_openPosition;

		[Token(Token = "0x4001B52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private NextLocation nextLocation;

		[Token(Token = "0x6001DE1")]
		[Address(RVA = "0xDF2B38", Offset = "0xDF2B38", VA = "0xDF2B38")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001DE2")]
		[Address(RVA = "0xDF2C04", Offset = "0xDF2C04", VA = "0xDF2C04")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001DE3")]
		[Address(RVA = "0xDF2CD0", Offset = "0xDF2CD0", VA = "0xDF2CD0")]
		private void OnLocationActivated(int locationId)
		{
		}

		[Token(Token = "0x6001DE4")]
		[Address(RVA = "0xDF2F98", Offset = "0xDF2F98", VA = "0xDF2F98")]
		private void EnterElevator()
		{
		}

		[Token(Token = "0x6001DE5")]
		[Address(RVA = "0xDF302C", Offset = "0xDF302C", VA = "0xDF302C")]
		private void ChangeElevator()
		{
		}

		[Token(Token = "0x6001DE6")]
		[Address(RVA = "0xDF307C", Offset = "0xDF307C", VA = "0xDF307C")]
		private void ElevatorMusic()
		{
		}

		[Token(Token = "0x6001DE7")]
		[Address(RVA = "0xDF3138", Offset = "0xDF3138", VA = "0xDF3138")]
		private void OpenElevatorDoors()
		{
		}

		[Token(Token = "0x6001DE8")]
		[Address(RVA = "0xDF2FB8", Offset = "0xDF2FB8", VA = "0xDF2FB8")]
		[IteratorStateMachine(typeof(<EnterElevatorCoroutine>d__24))]
		private IEnumerator EnterElevatorCoroutine()
		{
			return null;
		}

		[Token(Token = "0x6001DE9")]
		[Address(RVA = "0xDF30E8", Offset = "0xDF30E8", VA = "0xDF30E8")]
		private void PlayAudio(AudioClip clip, bool loop = false)
		{
		}

		[Token(Token = "0x6001DEA")]
		[Address(RVA = "0xDF3144", Offset = "0xDF3144", VA = "0xDF3144")]
		public Mansion_ElevatorStep()
		{
		}
	}
	[Token(Token = "0x20004CF")]
	public class MetroMovement : MonoBehaviour
	{
		[Token(Token = "0x4001B56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int locationId;

		[Token(Token = "0x4001B57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform startPosition;

		[Token(Token = "0x4001B58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform endPosition;

		[Token(Token = "0x4001B59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Transform endPositionMindTheGap;

		[Token(Token = "0x4001B5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float metroMinInterval;

		[Token(Token = "0x4001B5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float metroMaxInterval;

		[Token(Token = "0x4001B5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float metroSpeed;

		[Token(Token = "0x4001B5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Collider physicsCollider;

		[Token(Token = "0x4001B5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Collider triggerCollider;

		[Token(Token = "0x4001B5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Rigidbody rb;

		[Token(Token = "0x4001B60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Vector3 initPosition;

		[Token(Token = "0x4001B61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private bool moving;

		[Token(Token = "0x4001B62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public AudioSource metro_sound;

		[Token(Token = "0x4001B63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private bool locationFinished;

		[Token(Token = "0x6001DF2")]
		[Address(RVA = "0xDF44F8", Offset = "0xDF44F8", VA = "0xDF44F8")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001DF3")]
		[Address(RVA = "0xDF4678", Offset = "0xDF4678", VA = "0xDF4678")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001DF4")]
		[Address(RVA = "0xDF47EC", Offset = "0xDF47EC", VA = "0xDF47EC")]
		private void OnLocationFinished(int locationId)
		{
		}

		[Token(Token = "0x6001DF5")]
		[Address(RVA = "0xDF48FC", Offset = "0xDF48FC", VA = "0xDF48FC")]
		private void mindTheGap()
		{
		}

		[Token(Token = "0x6001DF6")]
		[Address(RVA = "0xDF49A4", Offset = "0xDF49A4", VA = "0xDF49A4")]
		private void OnLocationActivated(int locationId)
		{
		}

		[Token(Token = "0x6001DF7")]
		[Address(RVA = "0xDF4C70", Offset = "0xDF4C70", VA = "0xDF4C70")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x6001DF8")]
		[Address(RVA = "0xDF4D98", Offset = "0xDF4D98", VA = "0xDF4D98")]
		private void MoveMetro()
		{
		}

		[Token(Token = "0x6001DF9")]
		[Address(RVA = "0xDF4C18", Offset = "0xDF4C18", VA = "0xDF4C18")]
		private void WalkieTalkieCommunication()
		{
		}

		[Token(Token = "0x6001DFA")]
		[Address(RVA = "0xDF50A0", Offset = "0xDF50A0", VA = "0xDF50A0")]
		public MetroMovement()
		{
		}
	}
	[Token(Token = "0x20004D0")]
	public abstract class MissionAccomplished : MonoBehaviour
	{
		[Token(Token = "0x20004D1")]
		[CompilerGenerated]
		private sealed class <ExecuteCoroutine>d__9 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001B6A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001B6B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001B6C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public MissionAccomplished <>4__this;

			[Token(Token = "0x17000183")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001E0A")]
				[Address(RVA = "0xDF607C", Offset = "0xDF607C", VA = "0xDF607C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000184")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001E0C")]
				[Address(RVA = "0xDF60C4", Offset = "0xDF60C4", VA = "0xDF60C4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001E07")]
			[Address(RVA = "0xDF58B8", Offset = "0xDF58B8", VA = "0xDF58B8")]
			[DebuggerHidden]
			public <ExecuteCoroutine>d__9(int <>1__state)
			{
			}

			[Token(Token = "0x6001E08")]
			[Address(RVA = "0xDF5B0C", Offset = "0xDF5B0C", VA = "0xDF5B0C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001E09")]
			[Address(RVA = "0xDF5B10", Offset = "0xDF5B10", VA = "0xDF5B10", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001E0B")]
			[Address(RVA = "0xDF6084", Offset = "0xDF6084", VA = "0xDF6084", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001B64")]
		private const string MISSION_ACCOMPLISHED_PATH = "missionAccomplished";

		[Token(Token = "0x4001B65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject missionAccomplished;

		[Token(Token = "0x4001B66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject menu;

		[Token(Token = "0x4001B67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private AudioClip missionAccomplishedClip;

		[Token(Token = "0x4001B68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private UIButton returnButton;

		[Token(Token = "0x4001B69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public bool bButtonPressed;

		[Token(Token = "0x6001DFF")]
		[Address(RVA = "0xDF53A8", Offset = "0xDF53A8", VA = "0xDF53A8", Slot = "4")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x6001E00")]
		[Address(RVA = "0xDF555C", Offset = "0xDF555C", VA = "0xDF555C")]
		private void OnReturnButtonPressed()
		{
		}

		[Token(Token = "0x6001E01")]
		[Address(RVA = "0xDF5780", Offset = "0xDF5780", VA = "0xDF5780")]
		public void Execute()
		{
		}

		[Token(Token = "0x6001E02")]
		[Address(RVA = "0xDF5844", Offset = "0xDF5844", VA = "0xDF5844")]
		[IteratorStateMachine(typeof(<ExecuteCoroutine>d__9))]
		private IEnumerator ExecuteCoroutine()
		{
			return null;
		}

		[Token(Token = "0x6001E03")]
		[Address(RVA = "0xDF5574", Offset = "0xDF5574", VA = "0xDF5574")]
		private void LoadNextScene()
		{
		}

		[Token(Token = "0x6001E04")]
		[Address(RVA = "0xDF58E0", Offset = "0xDF58E0", VA = "0xDF58E0", Slot = "5")]
		protected virtual void ShowMessage()
		{
		}

		[Token(Token = "0x6001E05")]
		[Address(RVA = "0xDF59C8", Offset = "0xDF59C8", VA = "0xDF59C8")]
		protected MissionAccomplished()
		{
		}
	}
	[Token(Token = "0x20004D2")]
	public class MissionAccomplished_StoryMode : MissionAccomplished
	{
		[Token(Token = "0x4001B6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Transform newspaper;

		[Token(Token = "0x4001B6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Vector3 newspaperScale;

		[Token(Token = "0x6001E0D")]
		[Address(RVA = "0xDF60CC", Offset = "0xDF60CC", VA = "0xDF60CC", Slot = "4")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6001E0E")]
		[Address(RVA = "0xDF616C", Offset = "0xDF616C", VA = "0xDF616C", Slot = "5")]
		protected override void ShowMessage()
		{
		}

		[Token(Token = "0x6001E0F")]
		[Address(RVA = "0xDF631C", Offset = "0xDF631C", VA = "0xDF631C")]
		public MissionAccomplished_StoryMode()
		{
		}
	}
	[Token(Token = "0x20004D3")]
	public class MissionAccomplished_TimeAttack : MissionAccomplished
	{
		[Token(Token = "0x4001B6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Transform time;

		[Token(Token = "0x4001B70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private TextMeshPro timeText;

		[Token(Token = "0x4001B71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Vector3 timeScale;

		[Token(Token = "0x6001E10")]
		[Address(RVA = "0xDF6324", Offset = "0xDF6324", VA = "0xDF6324", Slot = "4")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6001E11")]
		[Address(RVA = "0xDF6424", Offset = "0xDF6424", VA = "0xDF6424", Slot = "5")]
		protected override void ShowMessage()
		{
		}

		[Token(Token = "0x6001E12")]
		[Address(RVA = "0xDF6594", Offset = "0xDF6594", VA = "0xDF6594")]
		private void SetTimePlayed()
		{
		}

		[Token(Token = "0x6001E13")]
		[Address(RVA = "0xDF6868", Offset = "0xDF6868", VA = "0xDF6868")]
		public MissionAccomplished_TimeAttack()
		{
		}
	}
	[Token(Token = "0x20004D4")]
	public class Office_ElevatorStep : MonoBehaviour
	{
		[Token(Token = "0x4001B72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int locationId;

		[Token(Token = "0x4001B73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int nextLocationId;

		[Token(Token = "0x4001B74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AudioSource elevatorAudio;

		[Token(Token = "0x4001B75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public AudioClip elevatorOpenDoors;

		[Token(Token = "0x4001B76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public AudioClip elevatorCloseDoors;

		[Token(Token = "0x4001B77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public AudioClip elevatorMusic;

		[Token(Token = "0x4001B78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Transform elevatorDoorL;

		[Token(Token = "0x4001B79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Transform elevatorDoorR;

		[Token(Token = "0x4001B7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Transform elevatorTargetPosition;

		[Token(Token = "0x4001B7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Transform elevatorDoorL_openPosition;

		[Token(Token = "0x4001B7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Transform elevatorDoorR_openPosition;

		[Token(Token = "0x4001B7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Vector3 elevatorDoorL_closePosition;

		[Token(Token = "0x4001B7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private Vector3 elevatorDoorR_closePosition;

		[Token(Token = "0x4001B7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private NextLocation nextLocation;

		[Token(Token = "0x6001E14")]
		[Address(RVA = "0xDF6870", Offset = "0xDF6870", VA = "0xDF6870")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001E15")]
		[Address(RVA = "0xDF6984", Offset = "0xDF6984", VA = "0xDF6984")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001E16")]
		[Address(RVA = "0xDF6A50", Offset = "0xDF6A50", VA = "0xDF6A50")]
		private void OnLocationActivated(int locationId)
		{
		}

		[Token(Token = "0x6001E17")]
		[Address(RVA = "0xDF6CC0", Offset = "0xDF6CC0", VA = "0xDF6CC0")]
		private void OpenElevatorDoors()
		{
		}

		[Token(Token = "0x6001E18")]
		[Address(RVA = "0xDF6DC0", Offset = "0xDF6DC0", VA = "0xDF6DC0")]
		private void CloseElevatorDoors()
		{
		}

		[Token(Token = "0x6001E19")]
		[Address(RVA = "0xDF7148", Offset = "0xDF7148", VA = "0xDF7148")]
		private void ElevatorStayAndLeave()
		{
		}

		[Token(Token = "0x6001E1A")]
		[Address(RVA = "0xDF7264", Offset = "0xDF7264", VA = "0xDF7264")]
		private void ActivateCharacters()
		{
		}

		[Token(Token = "0x6001E1B")]
		[Address(RVA = "0xDF7404", Offset = "0xDF7404", VA = "0xDF7404")]
		public Office_ElevatorStep()
		{
		}
	}
	[Token(Token = "0x20004D5")]
	public class Office_Metro : MonoBehaviour
	{
		[Token(Token = "0x4001B80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int locationId;

		[Token(Token = "0x4001B81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float explosionDelay;

		[Token(Token = "0x4001B82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float metroDelay;

		[Token(Token = "0x4001B83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Animation metroAnimationSound;

		[Token(Token = "0x4001B84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public DestructibleAnimation[] explosion;

		[Token(Token = "0x4001B85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public GameObject beamCrashFX;

		[Token(Token = "0x4001B86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public GameObject railCrashFX;

		[Token(Token = "0x4001B87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public GameObject balustradeCrashFX;

		[Token(Token = "0x4001B88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public ThiefPoliceController jackBauer;

		[Token(Token = "0x4001B89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public AudioClip jackBauerSpeech;

		[Token(Token = "0x4001B8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private bool triggerEnabled;

		[Token(Token = "0x4001B8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Transform impactPoint;

		[Token(Token = "0x4001B8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Transform train;

		[Token(Token = "0x6001E1D")]
		[Address(RVA = "0xDF7410", Offset = "0xDF7410", VA = "0xDF7410")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001E1E")]
		[Address(RVA = "0xDF75C4", Offset = "0xDF75C4", VA = "0xDF75C4")]
		public void OnLocationInitialized(int locationId)
		{
		}

		[Token(Token = "0x6001E1F")]
		[Address(RVA = "0xDF7640", Offset = "0xDF7640", VA = "0xDF7640")]
		public void OnLocationActivated(int locationId)
		{
		}

		[Token(Token = "0x6001E20")]
		[Address(RVA = "0xDF77A0", Offset = "0xDF77A0", VA = "0xDF77A0")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x6001E21")]
		[Address(RVA = "0xDF7858", Offset = "0xDF7858", VA = "0xDF7858")]
		private void Explosion()
		{
		}

		[Token(Token = "0x6001E22")]
		[Address(RVA = "0xDF7B04", Offset = "0xDF7B04", VA = "0xDF7B04")]
		private void MetroAnimation()
		{
		}

		[Token(Token = "0x6001E23")]
		[Address(RVA = "0xDF7C00", Offset = "0xDF7C00", VA = "0xDF7C00")]
		private void OnAnimationEvent(string e)
		{
		}

		[Token(Token = "0x6001E24")]
		[Address(RVA = "0xDF8194", Offset = "0xDF8194", VA = "0xDF8194")]
		private void MissionAccomplished()
		{
		}

		[Token(Token = "0x6001E25")]
		[Address(RVA = "0xDF825C", Offset = "0xDF825C", VA = "0xDF825C")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001E26")]
		[Address(RVA = "0xDF83B4", Offset = "0xDF83B4", VA = "0xDF83B4")]
		public Office_Metro()
		{
		}
	}
	[Token(Token = "0x20004D7")]
	public class TA2_ElevatorStep : MonoBehaviour
	{
		[Token(Token = "0x4001B8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int locationId;

		[Token(Token = "0x4001B90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int nextLocationId;

		[Token(Token = "0x4001B91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AudioSource elevatorAudio;

		[Token(Token = "0x4001B92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public AudioClip elevatorOpenDoors;

		[Token(Token = "0x4001B93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public AudioClip elevatorCloseDoors;

		[Token(Token = "0x4001B94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public AudioClip elevatorMusic;

		[Token(Token = "0x4001B95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Transform elevatorDoorL;

		[Token(Token = "0x4001B96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Transform elevatorDoorR;

		[Token(Token = "0x4001B97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Transform elevatorTargetPosition;

		[Token(Token = "0x4001B98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Transform elevatorDoorL_openPosition;

		[Token(Token = "0x4001B99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Transform elevatorDoorR_openPosition;

		[Token(Token = "0x4001B9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Transform teammate0_elevator;

		[Token(Token = "0x4001B9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public Transform teammate1_elevator;

		[Token(Token = "0x4001B9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Vector3 elevatorDoorL_closePosition;

		[Token(Token = "0x4001B9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private Vector3 elevatorDoorR_closePosition;

		[Token(Token = "0x4001B9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private NextLocation nextLocation;

		[Token(Token = "0x6001E2A")]
		[Address(RVA = "0xDF8494", Offset = "0xDF8494", VA = "0xDF8494")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001E2B")]
		[Address(RVA = "0xDF85A8", Offset = "0xDF85A8", VA = "0xDF85A8")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001E2C")]
		[Address(RVA = "0xDF8674", Offset = "0xDF8674", VA = "0xDF8674")]
		private void OnLocationActivated(int locationId)
		{
		}

		[Token(Token = "0x6001E2D")]
		[Address(RVA = "0xDF88DC", Offset = "0xDF88DC", VA = "0xDF88DC")]
		private void OpenElevatorDoors()
		{
		}

		[Token(Token = "0x6001E2E")]
		[Address(RVA = "0xDF89DC", Offset = "0xDF89DC", VA = "0xDF89DC")]
		private void CloseElevatorDoors()
		{
		}

		[Token(Token = "0x6001E2F")]
		[Address(RVA = "0xDF8E08", Offset = "0xDF8E08", VA = "0xDF8E08")]
		private void ElevatorStayAndLeave()
		{
		}

		[Token(Token = "0x6001E30")]
		[Address(RVA = "0xDF8EBC", Offset = "0xDF8EBC", VA = "0xDF8EBC")]
		private void ActivateCharacters()
		{
		}

		[Token(Token = "0x6001E31")]
		[Address(RVA = "0xDF905C", Offset = "0xDF905C", VA = "0xDF905C")]
		public TA2_ElevatorStep()
		{
		}
	}
	[Token(Token = "0x20004D8")]
	public class TA2_LobbyScene : MonoBehaviour
	{
		[Token(Token = "0x4001B9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int locationId;

		[Token(Token = "0x4001BA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CharacterLocationData trinity;

		[Token(Token = "0x4001BA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameObject leftDetector;

		[Token(Token = "0x4001BA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public AudioSource backgroundMusic;

		[Token(Token = "0x4001BA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Rigidbody bag;

		[Token(Token = "0x6001E32")]
		[Address(RVA = "0xDF9064", Offset = "0xDF9064", VA = "0xDF9064")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001E33")]
		[Address(RVA = "0xDF9194", Offset = "0xDF9194", VA = "0xDF9194")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001E34")]
		[Address(RVA = "0xDF92C4", Offset = "0xDF92C4", VA = "0xDF92C4")]
		private void OnLocationActivated(int locationId)
		{
		}

		[Token(Token = "0x6001E35")]
		[Address(RVA = "0xDF95C4", Offset = "0xDF95C4", VA = "0xDF95C4")]
		private void OnLocationFinished(int locationId)
		{
		}

		[Token(Token = "0x6001E36")]
		[Address(RVA = "0xDF96E4", Offset = "0xDF96E4", VA = "0xDF96E4")]
		private void OnWomanEvent(string eventName)
		{
		}

		[Token(Token = "0x6001E37")]
		[Address(RVA = "0xDF9918", Offset = "0xDF9918", VA = "0xDF9918")]
		public TA2_LobbyScene()
		{
		}
	}
	[Token(Token = "0x20004DA")]
	public class TA3_Bomb : HitTarget
	{
		[Token(Token = "0x20004DB")]
		private class RigidBodyState
		{
			[Token(Token = "0x4001BBB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Rigidbody rigidbody;

			[Token(Token = "0x4001BBC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Vector3 position;

			[Token(Token = "0x4001BBD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public Quaternion rotation;

			[Token(Token = "0x6001E49")]
			[Address(RVA = "0xDF9DA8", Offset = "0xDF9DA8", VA = "0xDF9DA8")]
			public RigidBodyState()
			{
			}
		}

		[Token(Token = "0x20004DC")]
		private class FixedJointState
		{
			[Token(Token = "0x4001BBE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public GameObject fixedJointObject;

			[Token(Token = "0x4001BBF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Rigidbody connectedBody;

			[Token(Token = "0x6001E4A")]
			[Address(RVA = "0xDFB08C", Offset = "0xDFB08C", VA = "0xDFB08C")]
			public FixedJointState()
			{
			}
		}

		[Token(Token = "0x20004DD")]
		[CompilerGenerated]
		private sealed class <BreakBombCoroutine>d__28 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001BC0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001BC1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001BC2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public TA3_Bomb <>4__this;

			[Token(Token = "0x17000185")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001E4E")]
				[Address(RVA = "0xDFB2AC", Offset = "0xDFB2AC", VA = "0xDFB2AC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000186")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001E50")]
				[Address(RVA = "0xDFB2F4", Offset = "0xDFB2F4", VA = "0xDFB2F4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001E4B")]
			[Address(RVA = "0xDFAE04", Offset = "0xDFAE04", VA = "0xDFAE04")]
			[DebuggerHidden]
			public <BreakBombCoroutine>d__28(int <>1__state)
			{
			}

			[Token(Token = "0x6001E4C")]
			[Address(RVA = "0xDFB094", Offset = "0xDFB094", VA = "0xDFB094", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001E4D")]
			[Address(RVA = "0xDFB098", Offset = "0xDFB098", VA = "0xDFB098", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001E4F")]
			[Address(RVA = "0xDFB2B4", Offset = "0xDFB2B4", VA = "0xDFB2B4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20004DE")]
		[CompilerGenerated]
		private sealed class <DestroyBombCoroutine>d__31 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001BC3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001BC4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001BC5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public TA3_Bomb <>4__this;

			[Token(Token = "0x17000187")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001E54")]
				[Address(RVA = "0xDFB814", Offset = "0xDFB814", VA = "0xDFB814", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000188")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001E56")]
				[Address(RVA = "0xDFB85C", Offset = "0xDFB85C", VA = "0xDFB85C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001E51")]
			[Address(RVA = "0xDFAEA0", Offset = "0xDFAEA0", VA = "0xDFAEA0")]
			[DebuggerHidden]
			public <DestroyBombCoroutine>d__31(int <>1__state)
			{
			}

			[Token(Token = "0x6001E52")]
			[Address(RVA = "0xDFB2FC", Offset = "0xDFB2FC", VA = "0xDFB2FC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001E53")]
			[Address(RVA = "0xDFB300", Offset = "0xDFB300", VA = "0xDFB300", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001E55")]
			[Address(RVA = "0xDFB81C", Offset = "0xDFB81C", VA = "0xDFB81C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001BA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public SumalabEvent OnBombHit;

		[Token(Token = "0x4001BA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public SumalabEvent OnBombDestroy;

		[Token(Token = "0x4001BA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public FixedJoint bombJoint;

		[Token(Token = "0x4001BA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private GameObject bombJointGameObject;

		[Token(Token = "0x4001BA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public FixedJoint chainJoint;

		[Token(Token = "0x4001BAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private GameObject chainJointGameObject;

		[Token(Token = "0x4001BAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public GameObject bombGaze;

		[Token(Token = "0x4001BAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public GameObject coreGaze;

		[Token(Token = "0x4001BAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public GameObject bomb0Fx;

		[Token(Token = "0x4001BAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public GameObject bomb1Fx;

		[Token(Token = "0x4001BAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public GameObject core;

		[Token(Token = "0x4001BB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public int resistance;

		[Token(Token = "0x4001BB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		public float impactForce;

		[Token(Token = "0x4001BB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private float hitCooldownTime;

		[Token(Token = "0x4001BB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		private float lastHit;

		[Token(Token = "0x4001BB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private float lastHitTime;

		[Token(Token = "0x4001BB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		private int initialResistance;

		[Token(Token = "0x4001BB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private Coroutine breakBombCoroutine;

		[Token(Token = "0x4001BB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private List<RigidBodyState> rigidBodyState;

		[Token(Token = "0x4001BB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public Dictionary<GameObject, Rigidbody> fixedJointState;

		[Token(Token = "0x4001BB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private bool m_bBombBroken;

		[Token(Token = "0x4001BBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC9")]
		private bool m_bBombDestroyed;

		[Token(Token = "0x6001E3C")]
		[Address(RVA = "0xDF99BC", Offset = "0xDF99BC", VA = "0xDF99BC")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001E3D")]
		[Address(RVA = "0xDF9B18", Offset = "0xDF9B18", VA = "0xDF9B18")]
		private void saveInitialState()
		{
		}

		[Token(Token = "0x6001E3E")]
		[Address(RVA = "0xDF9DB0", Offset = "0xDF9DB0", VA = "0xDF9DB0")]
		private void restoreInitialState()
		{
		}

		[Token(Token = "0x6001E3F")]
		[Address(RVA = "0xDFA208", Offset = "0xDFA208", VA = "0xDFA208")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001E40")]
		[Address(RVA = "0xDFA2B0", Offset = "0xDFA2B0", VA = "0xDFA2B0", Slot = "4")]
		public override bool OnHit(Bullet bullet, Ray ray, RaycastHit hit)
		{
			return default(bool);
		}

		[Token(Token = "0x6001E41")]
		[Address(RVA = "0xDFABC4", Offset = "0xDFABC4", VA = "0xDFABC4")]
		private void OnHitRemote(string strCollider, Vector3 direction, Vector3 hitPoint, int remoteResistance)
		{
		}

		[Token(Token = "0x6001E42")]
		[Address(RVA = "0xDFA88C", Offset = "0xDFA88C", VA = "0xDFA88C")]
		private void BreakBomb(bool bRemote = false)
		{
		}

		[Token(Token = "0x6001E43")]
		[Address(RVA = "0xDFAD90", Offset = "0xDFAD90", VA = "0xDFAD90")]
		[IteratorStateMachine(typeof(<BreakBombCoroutine>d__28))]
		private IEnumerator BreakBombCoroutine()
		{
			return null;
		}

		[Token(Token = "0x6001E44")]
		[Address(RVA = "0xDFAA30", Offset = "0xDFAA30", VA = "0xDFAA30")]
		private void DestroyBomb(bool bRemote = false)
		{
		}

		[Token(Token = "0x6001E45")]
		[Address(RVA = "0xDFAE2C", Offset = "0xDFAE2C", VA = "0xDFAE2C")]
		[IteratorStateMachine(typeof(<DestroyBombCoroutine>d__31))]
		private IEnumerator DestroyBombCoroutine()
		{
			return null;
		}

		[Token(Token = "0x6001E46")]
		[Address(RVA = "0xDFAEC8", Offset = "0xDFAEC8", VA = "0xDFAEC8")]
		public TA3_Bomb()
		{
		}
	}
	[Token(Token = "0x20004DF")]
	public class TA3_BombResistanceBar : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20004E0")]
		public class LifebarColor
		{
			[Token(Token = "0x4001BCD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[Range(0f, 1f)]
			public float percentage;

			[Token(Token = "0x4001BCE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public Color color;

			[Token(Token = "0x6001E5C")]
			[Address(RVA = "0xDFBC14", Offset = "0xDFBC14", VA = "0xDFBC14")]
			public LifebarColor()
			{
			}
		}

		[Token(Token = "0x4001BC6")]
		private const int SHOW_DURATION = 2;

		[Token(Token = "0x4001BC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public TA3_Bomb bomb;

		[Token(Token = "0x4001BC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LifebarColor[] lifebarColors;

		[Token(Token = "0x4001BC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float resistanceRange;

		[Token(Token = "0x4001BCA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private int resistance;

		[Token(Token = "0x4001BCB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private MeshRenderer mesh;

		[Token(Token = "0x4001BCC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Transform container;

		[Token(Token = "0x6001E57")]
		[Address(RVA = "0xDFB864", Offset = "0xDFB864", VA = "0xDFB864")]
		private void Start()
		{
		}

		[Token(Token = "0x6001E58")]
		[Address(RVA = "0xDFB9C4", Offset = "0xDFB9C4", VA = "0xDFB9C4")]
		private void Update()
		{
		}

		[Token(Token = "0x6001E59")]
		[Address(RVA = "0xDFBB8C", Offset = "0xDFBB8C", VA = "0xDFBB8C")]
		private void OnBombHit()
		{
		}

		[Token(Token = "0x6001E5A")]
		[Address(RVA = "0xDFB9A0", Offset = "0xDFB9A0", VA = "0xDFB9A0")]
		private void HideLifeBar()
		{
		}

		[Token(Token = "0x6001E5B")]
		[Address(RVA = "0xDFBC0C", Offset = "0xDFBC0C", VA = "0xDFBC0C")]
		public TA3_BombResistanceBar()
		{
		}
	}
	[Token(Token = "0x20004E1")]
	public class TA3_FinalScene : MonoBehaviour
	{
		[Token(Token = "0x20004E2")]
		[CompilerGenerated]
		private sealed class <JacksonZombieCoroutine>d__12 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001BD4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001BD5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001BD6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public TA3_FinalScene <>4__this;

			[Token(Token = "0x17000189")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001E69")]
				[Address(RVA = "0xDFC634", Offset = "0xDFC634", VA = "0xDFC634", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700018A")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001E6B")]
				[Address(RVA = "0xDFC67C", Offset = "0xDFC67C", VA = "0xDFC67C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001E66")]
			[Address(RVA = "0xDFC338", Offset = "0xDFC338", VA = "0xDFC338")]
			[DebuggerHidden]
			public <JacksonZombieCoroutine>d__12(int <>1__state)
			{
			}

			[Token(Token = "0x6001E67")]
			[Address(RVA = "0xDFC368", Offset = "0xDFC368", VA = "0xDFC368", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001E68")]
			[Address(RVA = "0xDFC36C", Offset = "0xDFC36C", VA = "0xDFC36C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001E6A")]
			[Address(RVA = "0xDFC63C", Offset = "0xDFC63C", VA = "0xDFC63C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001BCF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int locationId;

		[Token(Token = "0x4001BD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TA3_Bomb bomb;

		[Token(Token = "0x4001BD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public CharacterLocationData jacksonZombie;

		[Token(Token = "0x4001BD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public AudioSource jacksonMusic;

		[Token(Token = "0x4001BD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public GameObject smokeMachine;

		[Token(Token = "0x6001E5D")]
		[Address(RVA = "0xDFBC1C", Offset = "0xDFBC1C", VA = "0xDFBC1C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001E5E")]
		[Address(RVA = "0xDFBD4C", Offset = "0xDFBD4C", VA = "0xDFBD4C")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001E5F")]
		[Address(RVA = "0xDFBE7C", Offset = "0xDFBE7C", VA = "0xDFBE7C")]
		public void OnLocationActivated(int locationId)
		{
		}

		[Token(Token = "0x6001E60")]
		[Address(RVA = "0xDFC138", Offset = "0xDFC138", VA = "0xDFC138")]
		public void OnLocationReactivated(int locationId)
		{
		}

		[Token(Token = "0x6001E61")]
		[Address(RVA = "0xDFC1A0", Offset = "0xDFC1A0", VA = "0xDFC1A0")]
		public void BombHint()
		{
		}

		[Token(Token = "0x6001E62")]
		[Address(RVA = "0xDFC1F8", Offset = "0xDFC1F8", VA = "0xDFC1F8")]
		private void OnBombDestroyed()
		{
		}

		[Token(Token = "0x6001E63")]
		[Address(RVA = "0xDFC250", Offset = "0xDFC250", VA = "0xDFC250")]
		private void OnAllZombiesDead()
		{
		}

		[Token(Token = "0x6001E64")]
		[Address(RVA = "0xDFC2C4", Offset = "0xDFC2C4", VA = "0xDFC2C4")]
		[IteratorStateMachine(typeof(<JacksonZombieCoroutine>d__12))]
		private IEnumerator JacksonZombieCoroutine()
		{
			return null;
		}

		[Token(Token = "0x6001E65")]
		[Address(RVA = "0xDFC360", Offset = "0xDFC360", VA = "0xDFC360")]
		public TA3_FinalScene()
		{
		}
	}
	[Token(Token = "0x20004E3")]
	public class TeammateStep : MonoBehaviour
	{
		[Token(Token = "0x4001BD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private NextLocation nextLocation;

		[Token(Token = "0x4001BD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private NextLocationStep step;

		[Token(Token = "0x6001E6C")]
		[Address(RVA = "0xDFC684", Offset = "0xDFC684", VA = "0xDFC684")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001E6D")]
		[Address(RVA = "0xDFC784", Offset = "0xDFC784", VA = "0xDFC784")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001E6E")]
		[Address(RVA = "0xDFC818", Offset = "0xDFC818", VA = "0xDFC818")]
		private void OnStep()
		{
		}

		[Token(Token = "0x6001E6F")]
		[Address(RVA = "0xDFC97C", Offset = "0xDFC97C", VA = "0xDFC97C")]
		public TeammateStep()
		{
		}
	}
	[Token(Token = "0x20004E4")]
	public class SceneLoader : MonoBehaviour
	{
		[Token(Token = "0x20004E5")]
		[CompilerGenerated]
		private sealed class <loadSceneCoroutine>d__10 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001BDC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001BDD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001BDE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SceneLoader <>4__this;

			[Token(Token = "0x4001BDF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public string sceneName;

			[Token(Token = "0x4001BE0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private AsyncOperation <async>5__2;

			[Token(Token = "0x4001BE1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private int <i>5__3;

			[Token(Token = "0x1700018B")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001E7E")]
				[Address(RVA = "0xDFD898", Offset = "0xDFD898", VA = "0xDFD898", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700018C")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001E80")]
				[Address(RVA = "0xDFD8E0", Offset = "0xDFD8E0", VA = "0xDFD8E0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001E7B")]
			[Address(RVA = "0xDFD444", Offset = "0xDFD444", VA = "0xDFD444")]
			[DebuggerHidden]
			public <loadSceneCoroutine>d__10(int <>1__state)
			{
			}

			[Token(Token = "0x6001E7C")]
			[Address(RVA = "0xDFD5A4", Offset = "0xDFD5A4", VA = "0xDFD5A4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001E7D")]
			[Address(RVA = "0xDFD5A8", Offset = "0xDFD5A8", VA = "0xDFD5A8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001E7F")]
			[Address(RVA = "0xDFD8A0", Offset = "0xDFD8A0", VA = "0xDFD8A0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20004E6")]
		[CompilerGenerated]
		private sealed class <LoadAdditiveScenesCoroutine>d__11 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001BE2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001BE3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001BE4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SceneLoader <>4__this;

			[Token(Token = "0x4001BE5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public List<string> scenesToUnload;

			[Token(Token = "0x4001BE6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Action onComplete;

			[Token(Token = "0x4001BE7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private bool <done>5__2;

			[Token(Token = "0x4001BE8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private List<string>.Enumerator <>7__wrap2;

			[Token(Token = "0x4001BE9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			private AsyncOperation <async>5__4;

			[Token(Token = "0x1700018D")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001E85")]
				[Address(RVA = "0xDFDE80", Offset = "0xDFDE80", VA = "0xDFDE80", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700018E")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001E87")]
				[Address(RVA = "0xDFDEC8", Offset = "0xDFDEC8", VA = "0xDFDEC8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001E81")]
			[Address(RVA = "0xDFD46C", Offset = "0xDFD46C", VA = "0xDFD46C")]
			[DebuggerHidden]
			public <LoadAdditiveScenesCoroutine>d__11(int <>1__state)
			{
			}

			[Token(Token = "0x6001E82")]
			[Address(RVA = "0xDFD8E8", Offset = "0xDFD8E8", VA = "0xDFD8E8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001E83")]
			[Address(RVA = "0xDFD904", Offset = "0xDFD904", VA = "0xDFD904", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001E84")]
			[Address(RVA = "0xDFDE30", Offset = "0xDFDE30", VA = "0xDFDE30")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x6001E86")]
			[Address(RVA = "0xDFDE88", Offset = "0xDFDE88", VA = "0xDFDE88", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20004E7")]
		[CompilerGenerated]
		private sealed class <liberateMemory>d__12 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001BEA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001BEB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001BEC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private AsyncOperation <async>5__2;

			[Token(Token = "0x1700018F")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001E8B")]
				[Address(RVA = "0xDFDF58", Offset = "0xDFDF58", VA = "0xDFDF58", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000190")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001E8D")]
				[Address(RVA = "0xDFDFA0", Offset = "0xDFDFA0", VA = "0xDFDFA0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001E88")]
			[Address(RVA = "0xDFD4F4", Offset = "0xDFD4F4", VA = "0xDFD4F4")]
			[DebuggerHidden]
			public <liberateMemory>d__12(int <>1__state)
			{
			}

			[Token(Token = "0x6001E89")]
			[Address(RVA = "0xDFDED0", Offset = "0xDFDED0", VA = "0xDFDED0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001E8A")]
			[Address(RVA = "0xDFDED4", Offset = "0xDFDED4", VA = "0xDFDED4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001E8C")]
			[Address(RVA = "0xDFDF60", Offset = "0xDFDF60", VA = "0xDFDF60", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001BD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string[] availableScenes;

		[Token(Token = "0x4001BDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static SceneLoader Instance;

		[Token(Token = "0x4001BDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<AsyncOperation> asyncOperations;

		[Token(Token = "0x6001E70")]
		[Address(RVA = "0xDFC984", Offset = "0xDFC984", VA = "0xDFC984")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001E71")]
		[Address(RVA = "0xDFC9DC", Offset = "0xDFC9DC", VA = "0xDFC9DC")]
		public void ReloadScene()
		{
		}

		[Token(Token = "0x6001E72")]
		[Address(RVA = "0xDF5AA0", Offset = "0xDF5AA0", VA = "0xDF5AA0")]
		public void LoadScene(string sceneName)
		{
		}

		[Token(Token = "0x6001E73")]
		[Address(RVA = "0xDFCA90", Offset = "0xDFCA90", VA = "0xDFCA90")]
		public void SetBackgroundLoadingPriority(ThreadPriority priority)
		{
		}

		[Token(Token = "0x6001E74")]
		[Address(RVA = "0xDFCA9C", Offset = "0xDFCA9C", VA = "0xDFCA9C")]
		public void PreLoadAdditiveScenes(int sceneMask)
		{
		}

		[Token(Token = "0x6001E75")]
		[Address(RVA = "0xDFCF44", Offset = "0xDFCF44", VA = "0xDFCF44")]
		public void LoadAdditiveScenes([Optional] Action onComplete)
		{
		}

		[Token(Token = "0x6001E76")]
		[Address(RVA = "0xDFD094", Offset = "0xDFD094", VA = "0xDFD094")]
		public void LoadAdditiveScenes(int sceneMask, [Optional] Action onComplete)
		{
		}

		[Token(Token = "0x6001E77")]
		[Address(RVA = "0xDFD3B4", Offset = "0xDFD3B4", VA = "0xDFD3B4")]
		[IteratorStateMachine(typeof(<loadSceneCoroutine>d__10))]
		private IEnumerator loadSceneCoroutine(string sceneName)
		{
			return null;
		}

		[Token(Token = "0x6001E78")]
		[Address(RVA = "0xDFCFF0", Offset = "0xDFCFF0", VA = "0xDFCFF0")]
		[IteratorStateMachine(typeof(<LoadAdditiveScenesCoroutine>d__11))]
		private IEnumerator LoadAdditiveScenesCoroutine(List<string> scenesToLoad, List<string> scenesToUnload, Action onComplete)
		{
			return null;
		}

		[Token(Token = "0x6001E79")]
		[Address(RVA = "0xDFD494", Offset = "0xDFD494", VA = "0xDFD494")]
		[IteratorStateMachine(typeof(<liberateMemory>d__12))]
		private IEnumerator liberateMemory()
		{
			return null;
		}

		[Token(Token = "0x6001E7A")]
		[Address(RVA = "0xDFD51C", Offset = "0xDFD51C", VA = "0xDFD51C")]
		public SceneLoader()
		{
		}
	}
	[Token(Token = "0x20004E8")]
	public class SceneMask : MonoBehaviour
	{
		[Token(Token = "0x4001BED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int mask;

		[Token(Token = "0x6001E8E")]
		[Address(RVA = "0xDFDFA8", Offset = "0xDFDFA8", VA = "0xDFDFA8")]
		public bool hasFlag(int i)
		{
			return default(bool);
		}

		[Token(Token = "0x6001E8F")]
		[Address(RVA = "0xDFDFC0", Offset = "0xDFDFC0", VA = "0xDFDFC0")]
		public void addFlag(int i)
		{
		}

		[Token(Token = "0x6001E90")]
		[Address(RVA = "0xDFDFD8", Offset = "0xDFDFD8", VA = "0xDFDFD8")]
		public void removeFlag(int i)
		{
		}

		[Token(Token = "0x6001E91")]
		[Address(RVA = "0xDFDFF0", Offset = "0xDFDFF0", VA = "0xDFDFF0")]
		public SceneMask()
		{
		}
	}
	[Token(Token = "0x20004E9")]
	public class ShootingRange : MonoBehaviour
	{
		[Token(Token = "0x4001BEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int locationId;

		[Token(Token = "0x6001E92")]
		[Address(RVA = "0xDFDFF8", Offset = "0xDFDFF8", VA = "0xDFDFF8")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001E93")]
		[Address(RVA = "0xDFE0C4", Offset = "0xDFE0C4", VA = "0xDFE0C4")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001E94")]
		[Address(RVA = "0xDFE2C8", Offset = "0xDFE2C8", VA = "0xDFE2C8")]
		private void OnLocationActivated(int locationId)
		{
		}

		[Token(Token = "0x6001E95")]
		[Address(RVA = "0xDFE40C", Offset = "0xDFE40C", VA = "0xDFE40C")]
		private void communication()
		{
		}

		[Token(Token = "0x6001E96")]
		[Address(RVA = "0xDFE464", Offset = "0xDFE464", VA = "0xDFE464")]
		public ShootingRange()
		{
		}
	}
	[Token(Token = "0x20004EA")]
	public class HitButton : HitTarget
	{
		[Token(Token = "0x20004EB")]
		public enum ButtonType
		{
			[Token(Token = "0x4001BF9")]
			Press,
			[Token(Token = "0x4001BFA")]
			Lever
		}

		[Token(Token = "0x4001BEF")]
		private const float MOVEMENT_SPEED = 0.15f;

		[Token(Token = "0x4001BF0")]
		private const float ROTATION_SPEED = 50f;

		[Token(Token = "0x4001BF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public SumalabEvent OnButtonPressed;

		[Token(Token = "0x4001BF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public ButtonType buttonType;

		[Token(Token = "0x4001BF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private Vector3 idlePosition;

		[Token(Token = "0x4001BF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Vector3 pressedPosition0;

		[Token(Token = "0x4001BF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private Vector3 pressedPosition1;

		[Token(Token = "0x4001BF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Rigidbody rb;

		[Token(Token = "0x4001BF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private SVRInteractable interactable;

		[Token(Token = "0x6001E97")]
		[Address(RVA = "0xDFE46C", Offset = "0xDFE46C", VA = "0xDFE46C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001E98")]
		[Address(RVA = "0xDFE724", Offset = "0xDFE724", VA = "0xDFE724", Slot = "4")]
		public override bool OnHit(Bullet bullet, Ray ray, RaycastHit hit)
		{
			return default(bool);
		}

		[Token(Token = "0x6001E99")]
		[Address(RVA = "0xDFE7A8", Offset = "0xDFE7A8", VA = "0xDFE7A8")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x6001E9A")]
		[Address(RVA = "0xDFE7C4", Offset = "0xDFE7C4", VA = "0xDFE7C4")]
		public void PressDown()
		{
		}

		[Token(Token = "0x6001E9B")]
		[Address(RVA = "0xDFE8F4", Offset = "0xDFE8F4", VA = "0xDFE8F4")]
		public void PressDown(ShootingRangeCabin.Direction direction)
		{
		}

		[Token(Token = "0x6001E9C")]
		[Address(RVA = "0xDFE9D4", Offset = "0xDFE9D4", VA = "0xDFE9D4")]
		public void PressUp()
		{
		}

		[Token(Token = "0x6001E9D")]
		[Address(RVA = "0xDFEB78", Offset = "0xDFEB78", VA = "0xDFEB78")]
		private void OnHoverEnter(SVRHand hand)
		{
		}

		[Token(Token = "0x6001E9E")]
		[Address(RVA = "0xDFEC0C", Offset = "0xDFEC0C", VA = "0xDFEC0C")]
		private void OnHoverExit(SVRHand hand)
		{
		}

		[Token(Token = "0x6001E9F")]
		[Address(RVA = "0xDFECB0", Offset = "0xDFECB0", VA = "0xDFECB0")]
		public HitButton()
		{
		}
	}
	[Token(Token = "0x20004EC")]
	public class ShootingRangeCabin : MonoBehaviour
	{
		[Token(Token = "0x20004ED")]
		private enum State
		{
			[Token(Token = "0x4001C0C")]
			Idle,
			[Token(Token = "0x4001C0D")]
			MovingTarget,
			[Token(Token = "0x4001C0E")]
			StartingScoring,
			[Token(Token = "0x4001C0F")]
			Scoring
		}

		[Token(Token = "0x20004EE")]
		public enum Direction
		{
			[Token(Token = "0x4001C11")]
			Up,
			[Token(Token = "0x4001C12")]
			Down
		}

		[Token(Token = "0x20004EF")]
		[CompilerGenerated]
		private sealed class <StartScoring>d__23 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001C13")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001C14")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001C15")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ShootingRangeCabin <>4__this;

			[Token(Token = "0x17000191")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001EB0")]
				[Address(RVA = "0xDFF860", Offset = "0xDFF860", VA = "0xDFF860", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000192")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001EB2")]
				[Address(RVA = "0xDFF8A8", Offset = "0xDFF8A8", VA = "0xDFF8A8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001EAD")]
			[Address(RVA = "0xDFF22C", Offset = "0xDFF22C", VA = "0xDFF22C")]
			[DebuggerHidden]
			public <StartScoring>d__23(int <>1__state)
			{
			}

			[Token(Token = "0x6001EAE")]
			[Address(RVA = "0xDFF5AC", Offset = "0xDFF5AC", VA = "0xDFF5AC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001EAF")]
			[Address(RVA = "0xDFF5B0", Offset = "0xDFF5B0", VA = "0xDFF5B0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001EB1")]
			[Address(RVA = "0xDFF868", Offset = "0xDFF868", VA = "0xDFF868", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001BFB")]
		private const float SCORING_TIME = 10f;

		[Token(Token = "0x4001BFC")]
		private const int BAD_SCORE = 1000;

		[Token(Token = "0x4001BFD")]
		private const int GOOD_SCORE = 10000;

		[Token(Token = "0x4001BFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public HitButton startButton;

		[Token(Token = "0x4001BFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public HitButton distanceButton;

		[Token(Token = "0x4001C00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public ShootingRangeTarget target;

		[Token(Token = "0x4001C01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Transform[] targetPositions;

		[Token(Token = "0x4001C02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public TextMeshPro scoreText;

		[Token(Token = "0x4001C03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public TextMeshPro bestScoreText;

		[Token(Token = "0x4001C04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public AudioSource cabinAudio;

		[Token(Token = "0x4001C05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public AudioClip forbiddenClip;

		[Token(Token = "0x4001C06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public AudioClip startScoringClip;

		[Token(Token = "0x4001C07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private State state;

		[Token(Token = "0x4001C08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private Direction targetMoveDirection;

		[Token(Token = "0x4001C09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private int score;

		[Token(Token = "0x4001C0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private int currentTargetPosition;

		[Token(Token = "0x6001EA0")]
		[Address(RVA = "0xDFED24", Offset = "0xDFED24", VA = "0xDFED24")]
		private void Start()
		{
		}

		[Token(Token = "0x6001EA1")]
		[Address(RVA = "0xDFEFE8", Offset = "0xDFEFE8", VA = "0xDFEFE8")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001EA2")]
		[Address(RVA = "0xDFF090", Offset = "0xDFF090", VA = "0xDFF090")]
		public void AddPoints(int points)
		{
		}

		[Token(Token = "0x6001EA3")]
		[Address(RVA = "0xDFF10C", Offset = "0xDFF10C", VA = "0xDFF10C")]
		public void SetTargetPosition(int position)
		{
		}

		[Token(Token = "0x6001EA4")]
		[Address(RVA = "0xDFF16C", Offset = "0xDFF16C", VA = "0xDFF16C")]
		private void OnStartButtonPressed()
		{
		}

		[Token(Token = "0x6001EA5")]
		[Address(RVA = "0xDFF1B8", Offset = "0xDFF1B8", VA = "0xDFF1B8")]
		[IteratorStateMachine(typeof(<StartScoring>d__23))]
		private IEnumerator StartScoring()
		{
			return null;
		}

		[Token(Token = "0x6001EA6")]
		[Address(RVA = "0xDFEF84", Offset = "0xDFEF84", VA = "0xDFEF84")]
		private void ResetScore()
		{
		}

		[Token(Token = "0x6001EA7")]
		[Address(RVA = "0xDFF0B0", Offset = "0xDFF0B0", VA = "0xDFF0B0")]
		private void SetScoreText(int score)
		{
		}

		[Token(Token = "0x6001EA8")]
		[Address(RVA = "0xDFEF28", Offset = "0xDFEF28", VA = "0xDFEF28")]
		private void SetBestScoreText(int score)
		{
		}

		[Token(Token = "0x6001EA9")]
		[Address(RVA = "0xDFF254", Offset = "0xDFF254", VA = "0xDFF254")]
		public void OnDistanceButtonPressed()
		{
		}

		[Token(Token = "0x6001EAA")]
		[Address(RVA = "0xDFF264", Offset = "0xDFF264", VA = "0xDFF264")]
		private void MoveTarget()
		{
		}

		[Token(Token = "0x6001EAB")]
		[Address(RVA = "0xDFF2D4", Offset = "0xDFF2D4", VA = "0xDFF2D4")]
		private void MoveTarget(int position, bool animateButton = false)
		{
		}

		[Token(Token = "0x6001EAC")]
		[Address(RVA = "0xDFF5A4", Offset = "0xDFF5A4", VA = "0xDFF5A4")]
		public ShootingRangeCabin()
		{
		}
	}
	[Token(Token = "0x20004F1")]
	public class ShootingRangeTarget : HitTarget
	{
		[Token(Token = "0x4001C19")]
		private const float MOVE_DURATION = 1.4f;

		[Token(Token = "0x4001C1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public SumalabEvent<int> OnPointZoneHit;

		[Token(Token = "0x4001C1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public AudioClip moveAudioClip;

		[Token(Token = "0x4001C1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Transform target;

		[Token(Token = "0x4001C1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Transform pointZones;

		[Token(Token = "0x4001C1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Rigidbody rb;

		[Token(Token = "0x4001C1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private AudioSource audioSource;

		[Token(Token = "0x4001C20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private int pointZoneLayerMask;

		[Token(Token = "0x4001C21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private List<GameObject> bulletDecals;

		[Token(Token = "0x6001EB5")]
		[Address(RVA = "0xDFF8F4", Offset = "0xDFF8F4", VA = "0xDFF8F4")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001EB6")]
		[Address(RVA = "0xDFFA94", Offset = "0xDFFA94", VA = "0xDFFA94", Slot = "4")]
		public override bool OnHit(Bullet bullet, Ray ray, RaycastHit hit)
		{
			return default(bool);
		}

		[Token(Token = "0x6001EB7")]
		[Address(RVA = "0xDFF804", Offset = "0xDFF804", VA = "0xDFF804")]
		public void EnablePointZones(bool enable)
		{
		}

		[Token(Token = "0x6001EB8")]
		[Address(RVA = "0xE000BC", Offset = "0xE000BC", VA = "0xE000BC")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6001EB9")]
		[Address(RVA = "0xDFF43C", Offset = "0xDFF43C", VA = "0xDFF43C")]
		public void Move(Vector3 position, Action onComplete)
		{
		}

		[Token(Token = "0x6001EBA")]
		[Address(RVA = "0xDFEF90", Offset = "0xDFEF90", VA = "0xDFEF90")]
		public void SetPosition(Vector3 position)
		{
		}

		[Token(Token = "0x6001EBB")]
		[Address(RVA = "0xDFFC74", Offset = "0xDFFC74", VA = "0xDFFC74")]
		private void AddDecal(RaycastHit hit)
		{
		}

		[Token(Token = "0x6001EBC")]
		[Address(RVA = "0xDFFF34", Offset = "0xDFFF34", VA = "0xDFFF34")]
		private void ClearDecals()
		{
		}

		[Token(Token = "0x6001EBD")]
		[Address(RVA = "0xE00124", Offset = "0xE00124", VA = "0xE00124")]
		public ShootingRangeTarget()
		{
		}
	}
	[Token(Token = "0x20004F3")]
	public class StepShowHide : MonoBehaviour
	{
		[Token(Token = "0x4001C23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int locationId;

		[Token(Token = "0x4001C24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int nextLocationId;

		[Token(Token = "0x4001C25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int step;

		[Token(Token = "0x4001C26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public bool hide;

		[Token(Token = "0x4001C27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Behaviour[] behaviours;

		[Token(Token = "0x4001C28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public GameObject[] gameobjects;

		[Token(Token = "0x6001EC0")]
		[Address(RVA = "0xE00218", Offset = "0xE00218", VA = "0xE00218")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001EC1")]
		[Address(RVA = "0xE002E4", Offset = "0xE002E4", VA = "0xE002E4")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001EC2")]
		[Address(RVA = "0xE003B0", Offset = "0xE003B0", VA = "0xE003B0")]
		private void OnLocationActivated(int locationId)
		{
		}

		[Token(Token = "0x6001EC3")]
		[Address(RVA = "0xE004C8", Offset = "0xE004C8", VA = "0xE004C8")]
		private void OnStep()
		{
		}

		[Token(Token = "0x6001EC4")]
		[Address(RVA = "0xE00588", Offset = "0xE00588", VA = "0xE00588")]
		public StepShowHide()
		{
		}
	}
	[Token(Token = "0x20004F4")]
	public class Wait : MonoBehaviour
	{
		[Token(Token = "0x4001C29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static SumalabEvent<bool> IncomingMessage;

		[Token(Token = "0x4001C2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private GameObject wait;

		[Token(Token = "0x4001C2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private GameObject reloadAuto;

		[Token(Token = "0x4001C2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private GameObject reloadManual;

		[Token(Token = "0x4001C2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private GameObject readySetGo;

		[Token(Token = "0x4001C2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private GameObject outOfAmmo;

		[Token(Token = "0x4001C2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private GameObject incoming;

		[Token(Token = "0x4001C30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private bool enableWait;

		[Token(Token = "0x4001C31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
		private bool enableReload;

		[Token(Token = "0x4001C32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4A")]
		private bool enableOutOfAmmo;

		[Token(Token = "0x4001C33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4B")]
		private bool enableReadySetGo;

		[Token(Token = "0x4001C34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private bool enableIncoming;

		[Token(Token = "0x4001C35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Weapon weapon;

		[Token(Token = "0x4001C36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private bool disabled;

		[Token(Token = "0x6001EC5")]
		[Address(RVA = "0xE00590", Offset = "0xE00590", VA = "0xE00590")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001EC6")]
		[Address(RVA = "0xE00BCC", Offset = "0xE00BCC", VA = "0xE00BCC")]
		private void OnBeginInteraction()
		{
		}

		[Token(Token = "0x6001EC7")]
		[Address(RVA = "0xE01120", Offset = "0xE01120", VA = "0xE01120")]
		private void OnEndInteraction()
		{
		}

		[Token(Token = "0x6001EC8")]
		[Address(RVA = "0xE01558", Offset = "0xE01558", VA = "0xE01558")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001EC9")]
		[Address(RVA = "0xE01784", Offset = "0xE01784", VA = "0xE01784")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001ECA")]
		[Address(RVA = "0xE00FFC", Offset = "0xE00FFC", VA = "0xE00FFC")]
		private void OnFireStateChanged()
		{
		}

		[Token(Token = "0x6001ECB")]
		[Address(RVA = "0xE018C4", Offset = "0xE018C4", VA = "0xE018C4")]
		private void OnReadySetGo()
		{
		}

		[Token(Token = "0x6001ECC")]
		[Address(RVA = "0xE010DC", Offset = "0xE010DC", VA = "0xE010DC")]
		private void OnNoBullets(Weapon weapon)
		{
		}

		[Token(Token = "0x6001ECD")]
		[Address(RVA = "0xE018D0", Offset = "0xE018D0", VA = "0xE018D0")]
		private void OnReloadStart()
		{
		}

		[Token(Token = "0x6001ECE")]
		[Address(RVA = "0xE018DC", Offset = "0xE018DC", VA = "0xE018DC")]
		private void OnReloadEnd()
		{
		}

		[Token(Token = "0x6001ECF")]
		[Address(RVA = "0xE018E4", Offset = "0xE018E4", VA = "0xE018E4")]
		private void OnEmptyGunClick()
		{
		}

		[Token(Token = "0x6001ED0")]
		[Address(RVA = "0xE0198C", Offset = "0xE0198C", VA = "0xE0198C")]
		private void OnIncomingMessage(bool enable)
		{
		}

		[Token(Token = "0x6001ED1")]
		[Address(RVA = "0xE01998", Offset = "0xE01998", VA = "0xE01998")]
		private void Update()
		{
		}

		[Token(Token = "0x6001ED2")]
		[Address(RVA = "0xE00950", Offset = "0xE00950", VA = "0xE00950")]
		private void UpdateMessages()
		{
		}

		[Token(Token = "0x6001ED3")]
		[Address(RVA = "0xE014C8", Offset = "0xE014C8", VA = "0xE014C8")]
		private void HideMessages()
		{
		}

		[Token(Token = "0x6001ED4")]
		[Address(RVA = "0xE0199C", Offset = "0xE0199C", VA = "0xE0199C")]
		public static void SetIncomingMessage(bool enable)
		{
		}

		[Token(Token = "0x6001ED5")]
		[Address(RVA = "0xE01A1C", Offset = "0xE01A1C", VA = "0xE01A1C")]
		public Wait()
		{
		}
	}
	[Token(Token = "0x20004F5")]
	public class CrisisWatch : MonoBehaviour
	{
		[Token(Token = "0x4001C37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static CrisisWatch Instance;

		[Token(Token = "0x4001C38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public TextMeshPro time;

		[Token(Token = "0x4001C39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TextMeshPro lifes;

		[Token(Token = "0x4001C3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public TextMeshPro score;

		[Token(Token = "0x4001C3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public TextMeshPro message;

		[Token(Token = "0x4001C3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private int[] timeSplit;

		[Token(Token = "0x4001C3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private PlayerHit playerHit;

		[Token(Token = "0x6001ED7")]
		[Address(RVA = "0xE01ABC", Offset = "0xE01ABC", VA = "0xE01ABC")]
		private void Start()
		{
		}

		[Token(Token = "0x6001ED8")]
		[Address(RVA = "0xE01EFC", Offset = "0xE01EFC", VA = "0xE01EFC")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001ED9")]
		[Address(RVA = "0xE01CD4", Offset = "0xE01CD4", VA = "0xE01CD4")]
		private void OnHandStateChanged()
		{
		}

		[Token(Token = "0x6001EDA")]
		[Address(RVA = "0xE021E4", Offset = "0xE021E4", VA = "0xE021E4")]
		private void ScaleMirror(Transform transform)
		{
		}

		[Token(Token = "0x6001EDB")]
		[Address(RVA = "0xE02240", Offset = "0xE02240", VA = "0xE02240")]
		private void Update()
		{
		}

		[Token(Token = "0x6001EDC")]
		[Address(RVA = "0xE025F4", Offset = "0xE025F4", VA = "0xE025F4")]
		private void updateTime()
		{
		}

		[Token(Token = "0x6001EDD")]
		[Address(RVA = "0xE028B0", Offset = "0xE028B0", VA = "0xE028B0")]
		public void ShowMessage(string message, float messageDuration = 0f)
		{
		}

		[Token(Token = "0x6001EDE")]
		[Address(RVA = "0xE02988", Offset = "0xE02988", VA = "0xE02988")]
		public void HideMessage()
		{
		}

		[Token(Token = "0x6001EDF")]
		[Address(RVA = "0xE029D8", Offset = "0xE029D8", VA = "0xE029D8")]
		public CrisisWatch()
		{
		}
	}
	[Token(Token = "0x20004F6")]
	public class GameOver : MonoBehaviour
	{
		[Token(Token = "0x20004F7")]
		[CompilerGenerated]
		private sealed class <ExecuteCoroutine>d__28 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001C52")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001C53")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001C54")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public GameOver <>4__this;

			[Token(Token = "0x4001C55")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public bool bShowBlackScreen;

			[Token(Token = "0x17000193")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001EFD")]
				[Address(RVA = "0xE0564C", Offset = "0xE0564C", VA = "0xE0564C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000194")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001EFF")]
				[Address(RVA = "0xE05694", Offset = "0xE05694", VA = "0xE05694", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001EFA")]
			[Address(RVA = "0xE03830", Offset = "0xE03830", VA = "0xE03830")]
			[DebuggerHidden]
			public <ExecuteCoroutine>d__28(int <>1__state)
			{
			}

			[Token(Token = "0x6001EFB")]
			[Address(RVA = "0xE04D80", Offset = "0xE04D80", VA = "0xE04D80", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001EFC")]
			[Address(RVA = "0xE04D84", Offset = "0xE04D84", VA = "0xE04D84", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001EFE")]
			[Address(RVA = "0xE05654", Offset = "0xE05654", VA = "0xE05654", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20004F8")]
		[CompilerGenerated]
		private sealed class <retryCountdownCoroutine>d__34 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001C56")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001C57")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001C58")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private int <i>5__2;

			[Token(Token = "0x17000195")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001F03")]
				[Address(RVA = "0xE0575C", Offset = "0xE0575C", VA = "0xE0575C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000196")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001F05")]
				[Address(RVA = "0xE057A4", Offset = "0xE057A4", VA = "0xE057A4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001F00")]
			[Address(RVA = "0xE04048", Offset = "0xE04048", VA = "0xE04048")]
			[DebuggerHidden]
			public <retryCountdownCoroutine>d__34(int <>1__state)
			{
			}

			[Token(Token = "0x6001F01")]
			[Address(RVA = "0xE0569C", Offset = "0xE0569C", VA = "0xE0569C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001F02")]
			[Address(RVA = "0xE056A0", Offset = "0xE056A0", VA = "0xE056A0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001F04")]
			[Address(RVA = "0xE05764", Offset = "0xE05764", VA = "0xE05764", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001C3E")]
		private const int RETRY_COUNTDOWN = 9;

		[Token(Token = "0x4001C3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public UIButton retryButton;

		[Token(Token = "0x4001C40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public UIButton returnButton;

		[Token(Token = "0x4001C41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public ContinueButton continueButton;

		[Token(Token = "0x4001C42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Animator continueCountdown;

		[Token(Token = "0x4001C43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public TextMeshPro nameScoreInput;

		[Token(Token = "0x4001C44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public ItemMenu continueMenu;

		[Token(Token = "0x4001C45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Transform menuPanel;

		[Token(Token = "0x4001C46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Transform gameOverPanel;

		[Token(Token = "0x4001C47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public TextMeshPro coinsGained;

		[Token(Token = "0x4001C48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private float distanceToPlayer;

		[Token(Token = "0x4001C49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private bool bButtonPressed;

		[Token(Token = "0x4001C4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Coroutine countdownCoroutine;

		[Token(Token = "0x4001C4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private bool continueDisabled;

		[Token(Token = "0x4001C4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x71")]
		public bool continueReset;

		[Token(Token = "0x4001C4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x72")]
		private bool communicationEnabled;

		[Token(Token = "0x4001C4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private int coinsLoan;

		[Token(Token = "0x4001C4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private int zombieCoinsFactor;

		[Token(Token = "0x4001C50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		public bool readyToHeal;

		[Token(Token = "0x4001C51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private int continues;

		[Token(Token = "0x6001EE0")]
		[Address(RVA = "0xE02A3C", Offset = "0xE02A3C", VA = "0xE02A3C")]
		private void Start()
		{
		}

		[Token(Token = "0x6001EE1")]
		[Address(RVA = "0xE02C9C", Offset = "0xE02C9C", VA = "0xE02C9C")]
		private void OnRetryButtonPressed()
		{
		}

		[Token(Token = "0x6001EE2")]
		[Address(RVA = "0xE0325C", Offset = "0xE0325C", VA = "0xE0325C")]
		private void OnReturnButtonPressed()
		{
		}

		[Token(Token = "0x6001EE3")]
		[Address(RVA = "0xE03278", Offset = "0xE03278", VA = "0xE03278")]
		private void OnContinueButtonPressed()
		{
		}

		[Token(Token = "0x6001EE4")]
		[Address(RVA = "0xE0320C", Offset = "0xE0320C", VA = "0xE0320C")]
		private void stopCountdown()
		{
		}

		[Token(Token = "0x6001EE5")]
		[Address(RVA = "0xE0327C", Offset = "0xE0327C", VA = "0xE0327C")]
		private void OnContinueButtonEquipped()
		{
		}

		[Token(Token = "0x6001EE6")]
		[Address(RVA = "0xE03374", Offset = "0xE03374", VA = "0xE03374")]
		public void Init()
		{
		}

		[Token(Token = "0x6001EE7")]
		[Address(RVA = "0xE03480", Offset = "0xE03480", VA = "0xE03480")]
		public void Execute(bool bShowBlackScreen = true)
		{
		}

		[Token(Token = "0x6001EE8")]
		[Address(RVA = "0xE036F8", Offset = "0xE036F8", VA = "0xE036F8")]
		public void DisableContinue(bool bDisable)
		{
		}

		[Token(Token = "0x6001EE9")]
		[Address(RVA = "0xE037A8", Offset = "0xE037A8", VA = "0xE037A8")]
		[IteratorStateMachine(typeof(<ExecuteCoroutine>d__28))]
		private IEnumerator ExecuteCoroutine(bool bShowBlackScreen)
		{
			return null;
		}

		[Token(Token = "0x6001EEA")]
		[Address(RVA = "0xE03858", Offset = "0xE03858", VA = "0xE03858")]
		private void ConfigureRestartButton()
		{
		}

		[Token(Token = "0x6001EEB")]
		[Address(RVA = "0xE03B58", Offset = "0xE03B58", VA = "0xE03B58")]
		public int CalculateCoins()
		{
			return default(int);
		}

		[Token(Token = "0x6001EEC")]
		[Address(RVA = "0xE03CA4", Offset = "0xE03CA4", VA = "0xE03CA4")]
		private void WalkieTalkieCommunication()
		{
		}

		[Token(Token = "0x6001EED")]
		[Address(RVA = "0xE03E28", Offset = "0xE03E28", VA = "0xE03E28")]
		private void ShowContinueButton()
		{
		}

		[Token(Token = "0x6001EEE")]
		[Address(RVA = "0xE03FE8", Offset = "0xE03FE8", VA = "0xE03FE8")]
		[IteratorStateMachine(typeof(<retryCountdownCoroutine>d__34))]
		private IEnumerator retryCountdownCoroutine()
		{
			return null;
		}

		[Token(Token = "0x6001EEF")]
		[Address(RVA = "0xE02D90", Offset = "0xE02D90", VA = "0xE02D90")]
		private void ExitMission(bool retry)
		{
		}

		[Token(Token = "0x6001EF0")]
		[Address(RVA = "0xE03054", Offset = "0xE03054", VA = "0xE03054")]
		private void BackToGameAsViewer()
		{
		}

		[Token(Token = "0x6001EF1")]
		[Address(RVA = "0xE0436C", Offset = "0xE0436C", VA = "0xE0436C")]
		public bool IsMenuActive()
		{
			return default(bool);
		}

		[Token(Token = "0x6001EF2")]
		[Address(RVA = "0xE04280", Offset = "0xE04280", VA = "0xE04280")]
		private void checkNoPlayersAlive()
		{
		}

		[Token(Token = "0x6001EF3")]
		[Address(RVA = "0xE04078", Offset = "0xE04078", VA = "0xE04078")]
		private void backToGame(bool hideBlackScreen = true)
		{
		}

		[Token(Token = "0x6001EF4")]
		[Address(RVA = "0xE0438C", Offset = "0xE0438C", VA = "0xE0438C")]
		public void PlayerHealed()
		{
		}

		[Token(Token = "0x6001EF5")]
		[Address(RVA = "0xE0479C", Offset = "0xE0479C", VA = "0xE0479C")]
		private void OnWeaponFire(IWeapon weapon, Bullet b)
		{
		}

		[Token(Token = "0x6001EF6")]
		[Address(RVA = "0xE04968", Offset = "0xE04968", VA = "0xE04968")]
		private void Update()
		{
		}

		[Token(Token = "0x6001EF7")]
		[Address(RVA = "0xE04C48", Offset = "0xE04C48", VA = "0xE04C48")]
		public GameOver()
		{
		}
	}
	[Token(Token = "0x20004FB")]
	public class CrisisVRigade2_LoadSaveData
	{
		[Serializable]
		[Token(Token = "0x20004FC")]
		public class GlobalStatsData
		{
			[Token(Token = "0x4001C63")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int version;

			[Token(Token = "0x4001C64")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public int coins;

			[Token(Token = "0x4001C65")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public int shootingRangeBestScore;

			[Token(Token = "0x4001C66")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public string itemsUnlocked;

			[Token(Token = "0x4001C67")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public List<MissionStatsData> missionStats;

			[Token(Token = "0x4001C68")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private List<WeaponModel> usedWeapons;

			[Token(Token = "0x4001C69")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public int ducksRecord;

			[Token(Token = "0x4001C6A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public DateTime ducksRecordTime;

			[Token(Token = "0x4001C6B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public bool ducksRecordSaved;

			[Token(Token = "0x4001C6C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			public DateTime created;

			[Token(Token = "0x4001C6D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			public DateTime updated;

			[Token(Token = "0x6001F0C")]
			[Address(RVA = "0xE05A30", Offset = "0xE05A30", VA = "0xE05A30")]
			[OnDeserializing]
			internal void OnDeserializingMethod(StreamingContext context)
			{
			}

			[Token(Token = "0x6001F0D")]
			[Address(RVA = "0xE05AD0", Offset = "0xE05AD0", VA = "0xE05AD0")]
			[OnDeserialized]
			internal void OnDeserializedMethod(StreamingContext context)
			{
			}

			[Token(Token = "0x6001F0E")]
			[Address(RVA = "0xE07360", Offset = "0xE07360", VA = "0xE07360")]
			public GlobalStatsData()
			{
			}

			[Token(Token = "0x6001F0F")]
			[Address(RVA = "0xE06C60", Offset = "0xE06C60", VA = "0xE06C60")]
			public void Check()
			{
			}

			[Token(Token = "0x6001F10")]
			[Address(RVA = "0xE07AC8", Offset = "0xE07AC8", VA = "0xE07AC8")]
			public static GlobalStatsData Merge(GlobalStatsData orig, GlobalStatsData other, out bool merge)
			{
				return null;
			}

			[Token(Token = "0x6001F11")]
			[Address(RVA = "0xE0810C", Offset = "0xE0810C", VA = "0xE0810C")]
			private static void MergeRecords(GlobalStatsData orig, GlobalStatsData other)
			{
			}

			[Token(Token = "0x6001F12")]
			[Address(RVA = "0xE08310", Offset = "0xE08310", VA = "0xE08310")]
			private static void MergeUnlocked(GlobalStatsData orig, GlobalStatsData other)
			{
			}

			[Token(Token = "0x6001F13")]
			[Address(RVA = "0xE07E60", Offset = "0xE07E60", VA = "0xE07E60")]
			private static void MergeStats(GlobalStatsData orig, GlobalStatsData other)
			{
			}

			[Token(Token = "0x6001F14")]
			[Address(RVA = "0xE08684", Offset = "0xE08684", VA = "0xE08684")]
			private static void MergeMissions(MissionStatsData orig, MissionStatsData other)
			{
			}

			[Token(Token = "0x6001F15")]
			[Address(RVA = "0xE07FCC", Offset = "0xE07FCC", VA = "0xE07FCC")]
			private static void SumStats(GlobalStatsData orig, GlobalStatsData other)
			{
			}

			[Token(Token = "0x6001F16")]
			[Address(RVA = "0xE08984", Offset = "0xE08984", VA = "0xE08984")]
			public void AddUsedWeapon(WeaponModel weapon)
			{
			}

			[Token(Token = "0x6001F17")]
			[Address(RVA = "0xE08C50", Offset = "0xE08C50", VA = "0xE08C50")]
			public ICollection<WeaponModel> GetUsedWeapons()
			{
				return null;
			}
		}

		[Serializable]
		[Token(Token = "0x20004FE")]
		public class ItemData
		{
			[Token(Token = "0x4001C71")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string id;

			[Token(Token = "0x4001C72")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public bool selected;

			[Token(Token = "0x6001F1C")]
			[Address(RVA = "0xE08D60", Offset = "0xE08D60", VA = "0xE08D60")]
			public ItemData()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20004FF")]
		public class MissionStatsData
		{
			[Token(Token = "0x4001C73")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string mission;

			[Token(Token = "0x4001C74")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public int teammateDeads;

			[Token(Token = "0x4001C75")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public int hostageDeads;

			[Token(Token = "0x4001C76")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public int hostageSaved;

			[Token(Token = "0x4001C77")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public int friendlyFire;

			[Token(Token = "0x4001C78")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public int enemyDeads;

			[Token(Token = "0x4001C79")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public int enemyHeadshots;

			[Token(Token = "0x4001C7A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public int hitsReceived;

			[Token(Token = "0x4001C7B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			public int successBullets;

			[Token(Token = "0x4001C7C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public int usedBullets;

			[Token(Token = "0x4001C7D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			public int maxLevelAccomplished;

			[Token(Token = "0x4001C7E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public int gamesPlayed;

			[Token(Token = "0x4001C7F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			public int gamesPlayedHellMode;

			[Token(Token = "0x4001C80")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public int gamesAccomplished;

			[Token(Token = "0x4001C81")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
			public int gamesAccomplishedHellMode;

			[Token(Token = "0x4001C82")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			public float timePlayed;

			[Token(Token = "0x4001C83")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			public List<GameStatsData> gameStats;

			[Token(Token = "0x4001C84")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			public List<WeaponStatsData> weaponsUsed;

			[Token(Token = "0x6001F1D")]
			[Address(RVA = "0xE08D68", Offset = "0xE08D68", VA = "0xE08D68")]
			[OnDeserializing]
			internal void OnDeserializingMethod(StreamingContext context)
			{
			}

			[Token(Token = "0x6001F1E")]
			[Address(RVA = "0xE079C8", Offset = "0xE079C8", VA = "0xE079C8")]
			public MissionStatsData(string mission)
			{
			}

			[Token(Token = "0x6001F1F")]
			[Address(RVA = "0xE08E40", Offset = "0xE08E40", VA = "0xE08E40")]
			public MissionStatsData()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000500")]
		public class GameStatsData
		{
			[Token(Token = "0x4001C85")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string username;

			[Token(Token = "0x4001C86")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public string date;

			[Token(Token = "0x4001C87")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public bool missionAccomplished;

			[Token(Token = "0x4001C88")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
			public bool consumablesUsed;

			[Token(Token = "0x4001C89")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public int difficulty;

			[Token(Token = "0x4001C8A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public int teammateDeads;

			[Token(Token = "0x4001C8B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public int hostageDeads;

			[Token(Token = "0x4001C8C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public int hostageSaved;

			[Token(Token = "0x4001C8D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			public int friendlyFire;

			[Token(Token = "0x4001C8E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public int enemyDeads;

			[Token(Token = "0x4001C8F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			public int enemyHeadshots;

			[Token(Token = "0x4001C90")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public int hitsReceived;

			[Token(Token = "0x4001C91")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			public int totalLocations;

			[Token(Token = "0x4001C92")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public int locationsCompleted;

			[Token(Token = "0x4001C93")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
			public int score;

			[Token(Token = "0x4001C94")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			public float timePlayed;

			[Token(Token = "0x4001C95")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
			public int usedBullets;

			[Token(Token = "0x4001C96")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			public int successBullets;

			[Token(Token = "0x4001C97")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			public List<WeaponStatsData> weaponStats;

			[Token(Token = "0x4001C98")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			public long playerId;

			[Token(Token = "0x4001C99")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			public bool saved;

			[Token(Token = "0x4001C9A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
			public RemoteGameScoreData remoteGameScoreData;

			[Token(Token = "0x4001C9B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
			public string mission;

			[Token(Token = "0x4001C9C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
			public long rou_id;

			[Token(Token = "0x6001F20")]
			[Address(RVA = "0xE08F24", Offset = "0xE08F24", VA = "0xE08F24")]
			public GameStatsData()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000501")]
		public class RemoteGameScoreData
		{
			[Token(Token = "0x4001C9D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string room;

			[Token(Token = "0x4001C9E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public string username;

			[Token(Token = "0x4001C9F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public long playerId;

			[Token(Token = "0x4001CA0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public int friendlyFire;

			[Token(Token = "0x4001CA1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public int enemyDeads;

			[Token(Token = "0x4001CA2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public int enemyHeadshots;

			[Token(Token = "0x4001CA3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			public int hitsReceived;

			[Token(Token = "0x4001CA4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public int score;

			[Token(Token = "0x4001CA5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			public int usedBullets;

			[Token(Token = "0x4001CA6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public int successBullets;

			[Token(Token = "0x6001F21")]
			[Address(RVA = "0xE08F2C", Offset = "0xE08F2C", VA = "0xE08F2C")]
			public RemoteGameScoreData()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000502")]
		public class WeaponStatsData
		{
			[Token(Token = "0x4001CA7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string weaponModel;

			[Token(Token = "0x4001CA8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public int successBullets;

			[Token(Token = "0x4001CA9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public int usedBullets;

			[Token(Token = "0x4001CAA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public int count;

			[Token(Token = "0x6001F22")]
			[Address(RVA = "0xE06C58", Offset = "0xE06C58", VA = "0xE06C58")]
			public WeaponStatsData()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000503")]
		public class SettingsData
		{
			[Token(Token = "0x4001CAB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int version;

			[Token(Token = "0x4001CAC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public int difficulty;

			[Token(Token = "0x4001CAD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public float playerHeight;

			[Token(Token = "0x4001CAE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public float padRotationYOffset;

			[Token(Token = "0x4001CAF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public bool autoReload;

			[Token(Token = "0x4001CB0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
			public bool muteWalkieTalkie;

			[Token(Token = "0x4001CB1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x22")]
			public bool riotShieldEnabled;

			[Token(Token = "0x4001CB2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public int buttonConfig;

			[Token(Token = "0x4001CB3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public string onlineNickName;

			[Token(Token = "0x4001CB4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public string onlineDefaultJoinGamePassword;

			[Token(Token = "0x4001CB5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public bool voiceChatEnabled;

			[Token(Token = "0x4001CB6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			public int displayLanguage;

			[Token(Token = "0x4001CB7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public int voiceLanguage;

			[Token(Token = "0x4001CB8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			public int subtitlesLanguage;

			[Token(Token = "0x4001CB9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public bool enableRadio;

			[Token(Token = "0x4001CBA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
			public float soundVolume;

			[Token(Token = "0x4001CBB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			public DateTime updated;

			[Token(Token = "0x6001F23")]
			[Address(RVA = "0xE08F34", Offset = "0xE08F34", VA = "0xE08F34")]
			[OnDeserializing]
			internal void OnDeserializingMethod(StreamingContext context)
			{
			}

			[Token(Token = "0x6001F24")]
			[Address(RVA = "0xE08F6C", Offset = "0xE08F6C", VA = "0xE08F6C")]
			public SettingsData()
			{
			}

			[Token(Token = "0x6001F25")]
			[Address(RVA = "0xE08FB8", Offset = "0xE08FB8", VA = "0xE08FB8")]
			public SettingsData(int systemLanguage)
			{
			}

			[Token(Token = "0x6001F26")]
			[Address(RVA = "0xE09018", Offset = "0xE09018", VA = "0xE09018")]
			public void SetVoiceLanguage(int systemLanguage)
			{
			}
		}

		[Token(Token = "0x4001C5D")]
		public const int SETTINGS_FILE_VERSION = 5;

		[Token(Token = "0x4001C5E")]
		public const int DATA_FILE_VERSION = 6;

		[Token(Token = "0x4001C5F")]
		public const string SETTINGS_FILE = "settings.dat";

		[Token(Token = "0x4001C60")]
		public const string DATA_FILE = "scores.dat";

		[Token(Token = "0x4001C61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static GlobalStatsData globalStats;

		[Token(Token = "0x4001C62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static SettingsData settings;

		[Token(Token = "0x6001F0B")]
		[Address(RVA = "0xE05A28", Offset = "0xE05A28", VA = "0xE05A28")]
		public CrisisVRigade2_LoadSaveData()
		{
		}
	}
	[Token(Token = "0x2000504")]
	public class GameModeSelector : MonoBehaviour
	{
		[Token(Token = "0x4001CBC")]
		private const float ANIM_DURATION = 0.6f;

		[Token(Token = "0x4001CBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public MissionSelector storyModeMissionSelector;

		[Token(Token = "0x4001CBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MissionSelector timeAttackMissionSelector;

		[Token(Token = "0x4001CBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public MissionSelector challengeModeMissionSelector;

		[Token(Token = "0x4001CC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public UIButton storyModeButton;

		[Token(Token = "0x4001CC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public UIButton timeAttackModeButton;

		[Token(Token = "0x4001CC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public UIButton challengeModeButton;

		[Token(Token = "0x4001CC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private bool locked;

		[Token(Token = "0x4001CC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
		private bool firstPosition;

		[Token(Token = "0x4001CC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Transform[] buttonPositions;

		[Token(Token = "0x6001F27")]
		[Address(RVA = "0xE0902C", Offset = "0xE0902C", VA = "0xE0902C")]
		private void Start()
		{
		}

		[Token(Token = "0x6001F28")]
		[Address(RVA = "0xE09380", Offset = "0xE09380", VA = "0xE09380")]
		public void RemoteButtonPressed(string mode)
		{
		}

		[Token(Token = "0x6001F29")]
		[Address(RVA = "0xE0A074", Offset = "0xE0A074", VA = "0xE0A074")]
		private void OnStoryModeButtonPressed()
		{
		}

		[Token(Token = "0x6001F2A")]
		[Address(RVA = "0xE0A084", Offset = "0xE0A084", VA = "0xE0A084")]
		private void OnTimeAttackModeButtonPressed()
		{
		}

		[Token(Token = "0x6001F2B")]
		[Address(RVA = "0xE0A094", Offset = "0xE0A094", VA = "0xE0A094")]
		private void OnChallengeModeButtonPressed()
		{
		}

		[Token(Token = "0x6001F2C")]
		[Address(RVA = "0xE0A0A4", Offset = "0xE0A0A4", VA = "0xE0A0A4")]
		public void SetTimeAttackMode()
		{
		}

		[Token(Token = "0x6001F2D")]
		[Address(RVA = "0xE0A0B0", Offset = "0xE0A0B0", VA = "0xE0A0B0")]
		public void SetChallengeMode()
		{
		}

		[Token(Token = "0x6001F2E")]
		[Address(RVA = "0xE09C68", Offset = "0xE09C68", VA = "0xE09C68")]
		private void OnStoryModeButtonPressedImpl(bool bRemote = false, float duration = 0.6f)
		{
		}

		[Token(Token = "0x6001F2F")]
		[Address(RVA = "0xE09444", Offset = "0xE09444", VA = "0xE09444")]
		private void OnTimeAttackModeButtonPressedImpl(bool bRemote = false, float duration = 0.6f)
		{
		}

		[Token(Token = "0x6001F30")]
		[Address(RVA = "0xE09838", Offset = "0xE09838", VA = "0xE09838")]
		private void OnChallengeModeButtonPressedImpl(bool bRemote = false, float duration = 0.6f)
		{
		}

		[Token(Token = "0x6001F31")]
		[Address(RVA = "0xE0A0BC", Offset = "0xE0A0BC", VA = "0xE0A0BC")]
		private void SetPos0(UIButton button)
		{
		}

		[Token(Token = "0x6001F32")]
		[Address(RVA = "0xE0A1E4", Offset = "0xE0A1E4", VA = "0xE0A1E4")]
		private void SetPos1(UIButton button)
		{
		}

		[Token(Token = "0x6001F33")]
		[Address(RVA = "0xE0A33C", Offset = "0xE0A33C", VA = "0xE0A33C")]
		private void ShowEnabledModel(UIButton button, float duration)
		{
		}

		[Token(Token = "0x6001F34")]
		[Address(RVA = "0xE0A438", Offset = "0xE0A438", VA = "0xE0A438")]
		private void HideEnabledModel(UIButton button, float duration)
		{
		}

		[Token(Token = "0x6001F35")]
		[Address(RVA = "0xE0A530", Offset = "0xE0A530", VA = "0xE0A530")]
		public GameModeSelector()
		{
		}
	}
	[Token(Token = "0x2000505")]
	public class Scoreboard : MonoBehaviour
	{
		[Token(Token = "0x4001CC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static string DEFAULT_SCORENAME;

		[Token(Token = "0x4001CC7")]
		private const string WHITE_COLOR = "#FFFFFF";

		[Token(Token = "0x4001CC8")]
		private const string ROOKIE_COLOR = "#FCBC3E";

		[Token(Token = "0x4001CC9")]
		private const string HELL_COLOR = "#FF0000";

		[Token(Token = "0x4001CCA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public MissionButton mission;

		[Token(Token = "0x4001CCB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Keyboard keyboard;

		[Token(Token = "0x4001CCC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool newScoreRegistered;

		[Token(Token = "0x4001CCD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private List<CrisisVRigade2_LoadSaveData.GameStatsData> bestGameStats;

		[Token(Token = "0x6001F39")]
		[Address(RVA = "0xE0B780", Offset = "0xE0B780", VA = "0xE0B780")]
		private void Start()
		{
		}

		[Token(Token = "0x6001F3A")]
		[Address(RVA = "0xE0B8F0", Offset = "0xE0B8F0", VA = "0xE0B8F0")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001F3B")]
		[Address(RVA = "0xE0B848", Offset = "0xE0B848", VA = "0xE0B848")]
		private void UpdateScoreboard()
		{
		}

		[Token(Token = "0x6001F3C")]
		[Address(RVA = "0xE0B9B0", Offset = "0xE0B9B0", VA = "0xE0B9B0")]
		private void ShowScoreboard()
		{
		}

		[Token(Token = "0x6001F3D")]
		[Address(RVA = "0xE0C10C", Offset = "0xE0C10C", VA = "0xE0C10C")]
		private void HideScoreboard()
		{
		}

		[Token(Token = "0x6001F3E")]
		[Address(RVA = "0xE0C428", Offset = "0xE0C428", VA = "0xE0C428")]
		private void SetText(Transform t, string text)
		{
		}

		[Token(Token = "0x6001F3F")]
		[Address(RVA = "0xE0C518", Offset = "0xE0C518", VA = "0xE0C518")]
		private void SetColor(Transform t, Color color)
		{
		}

		[Token(Token = "0x6001F40")]
		[Address(RVA = "0xE0C494", Offset = "0xE0C494", VA = "0xE0C494")]
		private void SetDifficulty(Transform t, int difficulty)
		{
		}

		[Token(Token = "0x6001F41")]
		[Address(RVA = "0xE0C3F8", Offset = "0xE0C3F8", VA = "0xE0C3F8")]
		private Color GetColor(string hexColor)
		{
			return default(Color);
		}

		[Token(Token = "0x6001F42")]
		[Address(RVA = "0xE0C130", Offset = "0xE0C130", VA = "0xE0C130")]
		private List<CrisisVRigade2_LoadSaveData.GameStatsData> GetBestGameStats(string mission)
		{
			return null;
		}

		[Token(Token = "0x6001F43")]
		[Address(RVA = "0xE0C27C", Offset = "0xE0C27C", VA = "0xE0C27C")]
		private static void SortGameStats(ref List<CrisisVRigade2_LoadSaveData.GameStatsData> gameStats)
		{
		}

		[Token(Token = "0x6001F44")]
		[Address(RVA = "0xE0C5B4", Offset = "0xE0C5B4", VA = "0xE0C5B4")]
		public Scoreboard()
		{
		}
	}
	[Token(Token = "0x2000507")]
	public class StatsMenu : MonoBehaviour
	{
		[Token(Token = "0x4001CD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public UIButton statsGlobalTab;

		[Token(Token = "0x4001CD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public UIButton statsMissionTab;

		[Token(Token = "0x4001CD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public UIButton statsGameTab;

		[Token(Token = "0x4001CD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public UIButton progressTab;

		[Token(Token = "0x4001CD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public UIButton rankingTab;

		[Token(Token = "0x6001F48")]
		[Address(RVA = "0xE0C8A8", Offset = "0xE0C8A8", VA = "0xE0C8A8")]
		private void Start()
		{
		}

		[Token(Token = "0x6001F49")]
		[Address(RVA = "0xE0C948", Offset = "0xE0C948", VA = "0xE0C948")]
		private void ShowGlobalStats()
		{
		}

		[Token(Token = "0x6001F4A")]
		[Address(RVA = "0xE0C9E4", Offset = "0xE0C9E4", VA = "0xE0C9E4")]
		private void ShowMissionStats()
		{
		}

		[Token(Token = "0x6001F4B")]
		[Address(RVA = "0xE0CA80", Offset = "0xE0CA80", VA = "0xE0CA80")]
		private void ShowGameStats()
		{
		}

		[Token(Token = "0x6001F4C")]
		[Address(RVA = "0xE0CB1C", Offset = "0xE0CB1C", VA = "0xE0CB1C")]
		private void ShowProgressTab()
		{
		}

		[Token(Token = "0x6001F4D")]
		[Address(RVA = "0xE0C8AC", Offset = "0xE0C8AC", VA = "0xE0C8AC")]
		private void ShowRankingTab()
		{
		}

		[Token(Token = "0x6001F4E")]
		[Address(RVA = "0xE0CBB8", Offset = "0xE0CBB8", VA = "0xE0CBB8")]
		public StatsMenu()
		{
		}
	}
	[Token(Token = "0x2000508")]
	public class Grenade : HitTarget, Explosive
	{
		[Token(Token = "0x2000509")]
		[CompilerGenerated]
		private sealed class <SimulateProjectile>d__22 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001CE4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001CE5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001CE6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Grenade <>4__this;

			[Token(Token = "0x4001CE7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <Vx>5__2;

			[Token(Token = "0x4001CE8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float <Vy>5__3;

			[Token(Token = "0x4001CE9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <flightDuration>5__4;

			[Token(Token = "0x4001CEA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private float <elapse_time>5__5;

			[Token(Token = "0x17000197")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001F5B")]
				[Address(RVA = "0xE0D950", Offset = "0xE0D950", VA = "0xE0D950", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000198")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001F5D")]
				[Address(RVA = "0xE0D998", Offset = "0xE0D998", VA = "0xE0D998", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001F58")]
			[Address(RVA = "0xE0D598", Offset = "0xE0D598", VA = "0xE0D598")]
			[DebuggerHidden]
			public <SimulateProjectile>d__22(int <>1__state)
			{
			}

			[Token(Token = "0x6001F59")]
			[Address(RVA = "0xE0D654", Offset = "0xE0D654", VA = "0xE0D654", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001F5A")]
			[Address(RVA = "0xE0D658", Offset = "0xE0D658", VA = "0xE0D658", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001F5C")]
			[Address(RVA = "0xE0D958", Offset = "0xE0D958", VA = "0xE0D958", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001CD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public SumalabEvent OnExplode;

		[Token(Token = "0x4001CD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public GameObject model;

		[Token(Token = "0x4001CD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public GameObject crosshair;

		[Token(Token = "0x4001CD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public GameObject impactEffect;

		[Token(Token = "0x4001CD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public GameObject impactEffectPlayer;

		[Token(Token = "0x4001CDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public TrailRenderer trailRenderer;

		[Token(Token = "0x4001CDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public Collider col;

		[Token(Token = "0x4001CDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public bool rotateModel;

		[Token(Token = "0x4001CDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		public float explosionRadius;

		[Token(Token = "0x4001CDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[HideInInspector]
		public float angle;

		[Token(Token = "0x4001CDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		[HideInInspector]
		public Vector3 target;

		[Token(Token = "0x4001CE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private float gravity;

		[Token(Token = "0x4001CE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		private float launchTime;

		[Token(Token = "0x4001CE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private bool launched;

		[Token(Token = "0x4001CE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x99")]
		private bool explosion;

		[Token(Token = "0x6001F4F")]
		[Address(RVA = "0xE0CBC0", Offset = "0xE0CBC0", VA = "0xE0CBC0")]
		public void LaunchGrenade(bool modelVisibility = true)
		{
		}

		[Token(Token = "0x6001F50")]
		[Address(RVA = "0xE0CBD0", Offset = "0xE0CBD0", VA = "0xE0CBD0")]
		public void LaunchGrenade(Vector3 target, float angle, bool modelVisibility = true)
		{
		}

		[Token(Token = "0x6001F51")]
		[Address(RVA = "0xE0CE08", Offset = "0xE0CE08", VA = "0xE0CE08", Slot = "4")]
		public override bool OnHit(Bullet bullet, Ray ray, RaycastHit hit)
		{
			return default(bool);
		}

		[Token(Token = "0x6001F52")]
		[Address(RVA = "0xE0D484", Offset = "0xE0D484", VA = "0xE0D484")]
		private void OnTriggerEnter(Collider col)
		{
		}

		[Token(Token = "0x6001F53")]
		[Address(RVA = "0xE0CEA4", Offset = "0xE0CEA4", VA = "0xE0CEA4", Slot = "9")]
		public void Explode(bool bRemote = false)
		{
		}

		[Token(Token = "0x6001F54")]
		[Address(RVA = "0xE0D48C", Offset = "0xE0D48C", VA = "0xE0D48C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001F55")]
		[Address(RVA = "0xE0D574", Offset = "0xE0D574", VA = "0xE0D574")]
		private void Hide()
		{
		}

		[Token(Token = "0x6001F56")]
		[Address(RVA = "0xE0CD94", Offset = "0xE0CD94", VA = "0xE0CD94")]
		[IteratorStateMachine(typeof(<SimulateProjectile>d__22))]
		private IEnumerator SimulateProjectile()
		{
			return null;
		}

		[Token(Token = "0x6001F57")]
		[Address(RVA = "0xE0D5C0", Offset = "0xE0D5C0", VA = "0xE0D5C0")]
		public Grenade()
		{
		}
	}
	[Token(Token = "0x200050A")]
	public class RiotShield : SVRInteractable
	{
		[Token(Token = "0x4001CEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public GameObject riotShieldRightHand;

		[Token(Token = "0x4001CEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public GameObject riotShieldLeftHand;

		[Token(Token = "0x4001CED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private InterationStyle previousInteractionStyle;

		[Token(Token = "0x6001F5E")]
		[Address(RVA = "0xE0D9A0", Offset = "0xE0D9A0", VA = "0xE0D9A0", Slot = "9")]
		public override void BeginInteraction(SVRHand hand)
		{
		}

		[Token(Token = "0x6001F5F")]
		[Address(RVA = "0xE0DA9C", Offset = "0xE0DA9C", VA = "0xE0DA9C", Slot = "15")]
		public override void EndInteraction(SVRHand hand)
		{
		}

		[Token(Token = "0x6001F60")]
		[Address(RVA = "0xE0DB58", Offset = "0xE0DB58", VA = "0xE0DB58")]
		public RiotShield()
		{
		}
	}
}
namespace Knife.RealBlood
{
	[Token(Token = "0x200050B")]
	public class AnimationEventSimpleObserverable : MonoBehaviour, ISimpleObserverable
	{
		[Token(Token = "0x4001CEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Action onEventCalledEvent;

		[Token(Token = "0x6001F61")]
		[Address(RVA = "0xE0DBB0", Offset = "0xE0DBB0", VA = "0xE0DBB0", Slot = "4")]
		public void AddListener(Action callback)
		{
		}

		[Token(Token = "0x6001F62")]
		[Address(RVA = "0xE0DC40", Offset = "0xE0DC40", VA = "0xE0DC40", Slot = "5")]
		public void RemoveListener(Action callback)
		{
		}

		[Token(Token = "0x6001F63")]
		[Address(RVA = "0xE0DCD0", Offset = "0xE0DCD0", VA = "0xE0DCD0")]
		private void CallAnimationEvent()
		{
		}

		[Token(Token = "0x6001F64")]
		[Address(RVA = "0xE0DCEC", Offset = "0xE0DCEC", VA = "0xE0DCEC")]
		public AnimationEventSimpleObserverable()
		{
		}
	}
	[Token(Token = "0x200050C")]
	public class AutoSpawner : MonoBehaviour
	{
		[Token(Token = "0x200050D")]
		[CompilerGenerated]
		private sealed class <Spawn>d__11 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001CF3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001CF4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001CF5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public AutoSpawner <>4__this;

			[Token(Token = "0x1700019B")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001F6F")]
				[Address(RVA = "0xE0DF9C", Offset = "0xE0DF9C", VA = "0xE0DF9C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700019C")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001F71")]
				[Address(RVA = "0xE0DFE4", Offset = "0xE0DFE4", VA = "0xE0DFE4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001F6C")]
			[Address(RVA = "0xE0DDAC", Offset = "0xE0DDAC", VA = "0xE0DDAC")]
			[DebuggerHidden]
			public <Spawn>d__11(int <>1__state)
			{
			}

			[Token(Token = "0x6001F6D")]
			[Address(RVA = "0xE0DDE8", Offset = "0xE0DDE8", VA = "0xE0DDE8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001F6E")]
			[Address(RVA = "0xE0DDEC", Offset = "0xE0DDEC", VA = "0xE0DDEC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001F70")]
			[Address(RVA = "0xE0DFA4", Offset = "0xE0DFA4", VA = "0xE0DFA4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001CEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject prefab;

		[Token(Token = "0x4001CF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float interval;

		[Token(Token = "0x4001CF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private float destroyDelay;

		[Token(Token = "0x4001CF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool isPause;

		[Token(Token = "0x17000199")]
		public float Interval
		{
			[Token(Token = "0x6001F65")]
			[Address(RVA = "0xE0DCF4", Offset = "0xE0DCF4", VA = "0xE0DCF4")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001F66")]
			[Address(RVA = "0xE0DCFC", Offset = "0xE0DCFC", VA = "0xE0DCFC")]
			set
			{
			}
		}

		[Token(Token = "0x1700019A")]
		public bool IsPause
		{
			[Token(Token = "0x6001F67")]
			[Address(RVA = "0xE0DD04", Offset = "0xE0DD04", VA = "0xE0DD04")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001F68")]
			[Address(RVA = "0xE0DD0C", Offset = "0xE0DD0C", VA = "0xE0DD0C")]
			set
			{
			}
		}

		[Token(Token = "0x6001F69")]
		[Address(RVA = "0xE0DD18", Offset = "0xE0DD18", VA = "0xE0DD18")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001F6A")]
		[Address(RVA = "0xE0DD38", Offset = "0xE0DD38", VA = "0xE0DD38")]
		[IteratorStateMachine(typeof(<Spawn>d__11))]
		private IEnumerator Spawn()
		{
			return null;
		}

		[Token(Token = "0x6001F6B")]
		[Address(RVA = "0xE0DDD4", Offset = "0xE0DDD4", VA = "0xE0DDD4")]
		public AutoSpawner()
		{
		}
	}
	[Token(Token = "0x200050E")]
	public class CollisionDamage : MonoBehaviour
	{
		[Token(Token = "0x4001CF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private bool continious;

		[Token(Token = "0x4001CF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private float damageInterval;

		[Token(Token = "0x4001CF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private string[] ignoreTags;

		[Token(Token = "0x4001CF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float lastDamageTime;

		[Token(Token = "0x6001F72")]
		[Address(RVA = "0xE0DFEC", Offset = "0xE0DFEC", VA = "0xE0DFEC")]
		private void OnCollisionEnter(Collision collision)
		{
		}

		[Token(Token = "0x6001F73")]
		[Address(RVA = "0xE0E188", Offset = "0xE0E188", VA = "0xE0E188")]
		private void OnCollisionStay(Collision collision)
		{
		}

		[Token(Token = "0x6001F74")]
		[Address(RVA = "0xE0E198", Offset = "0xE0E198", VA = "0xE0E198")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x6001F75")]
		[Address(RVA = "0xE0E474", Offset = "0xE0E474", VA = "0xE0E474")]
		private void OnTriggerStay(Collider other)
		{
		}

		[Token(Token = "0x6001F76")]
		[Address(RVA = "0xE0E23C", Offset = "0xE0E23C", VA = "0xE0E23C")]
		private void OnHitted(Collider collider, Vector3 point, Vector3 normal)
		{
		}

		[Token(Token = "0x6001F77")]
		[Address(RVA = "0xE0DFFC", Offset = "0xE0DFFC", VA = "0xE0DFFC")]
		private void OnHitted(Collision collision)
		{
		}

		[Token(Token = "0x6001F78")]
		[Address(RVA = "0xE0E518", Offset = "0xE0E518", VA = "0xE0E518")]
		public CollisionDamage()
		{
		}
	}
	[Token(Token = "0x200050F")]
	public class DecalEnergyTrigger : MonoBehaviour
	{
		[Token(Token = "0x4001CFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private float energyAmount;

		[Token(Token = "0x6001F79")]
		[Address(RVA = "0xE0E52C", Offset = "0xE0E52C", VA = "0xE0E52C")]
		private void OnTriggerEnter(Collider collision)
		{
		}

		[Token(Token = "0x6001F7A")]
		[Address(RVA = "0xE0E608", Offset = "0xE0E608", VA = "0xE0E608")]
		public DecalEnergyTrigger()
		{
		}
	}
	[Token(Token = "0x2000510")]
	public class DecalsOnCollision : MonoBehaviour, ISpawnerContainer
	{
		[Token(Token = "0x4001CFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ContactPoint[] contacts;

		[Token(Token = "0x4001CFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject DecalPrefab;

		[Token(Token = "0x4001CFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public MonoBehaviour spawner;

		[Token(Token = "0x4001CFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float minScale;

		[Token(Token = "0x4001CFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float maxScale;

		[Token(Token = "0x4001D00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public int maxCountPerCollisionEnter;

		[Token(Token = "0x4001D01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public LayerMask collisionMask;

		[Token(Token = "0x1700019D")]
		public ISpawner Spawner
		{
			[Token(Token = "0x6001F7B")]
			[Address(RVA = "0xE0E618", Offset = "0xE0E618", VA = "0xE0E618", Slot = "4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001F7C")]
			[Address(RVA = "0xE0E660", Offset = "0xE0E660", VA = "0xE0E660", Slot = "5")]
			set
			{
			}
		}

		[Token(Token = "0x6001F7D")]
		[Address(RVA = "0xE0E71C", Offset = "0xE0E71C", VA = "0xE0E71C")]
		private void OnCollisionEnter(Collision collision)
		{
		}

		[Token(Token = "0x6001F7E")]
		[Address(RVA = "0xE0EBE4", Offset = "0xE0EBE4", VA = "0xE0EBE4")]
		public DecalsOnCollision()
		{
		}
	}
	[Token(Token = "0x2000511")]
	[RequireComponent(typeof(ParticleSystem))]
	public class DecalsOnParticleCollision : MonoBehaviour, ISpawnerContainer
	{
		[Token(Token = "0x4001D02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<ParticleCollisionEvent> collisionEvents;

		[Token(Token = "0x4001D03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject DecalPrefab;

		[Token(Token = "0x4001D04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameObject[] DecalPrefabs;

		[Token(Token = "0x4001D05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool randomPrefab;

		[Token(Token = "0x4001D06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
		public bool randomRotation;

		[Token(Token = "0x4001D07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public MonoBehaviour spawner;

		[Token(Token = "0x4001D08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float minScale;

		[Token(Token = "0x4001D09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public float maxScale;

		[Token(Token = "0x4001D0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public float duration;

		[Token(Token = "0x4001D0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public AnimationCurve scaleOverTime;

		[Token(Token = "0x4001D0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public float destroyDelay;

		[Token(Token = "0x4001D0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private ParticleSystem system;

		[Token(Token = "0x4001D0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private ISpawner _spawner;

		[Token(Token = "0x4001D0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private float enabledTime;

		[Token(Token = "0x4001D10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private float scale;

		[Token(Token = "0x1700019E")]
		public ISpawner Spawner
		{
			[Token(Token = "0x6001F7F")]
			[Address(RVA = "0xE0EC5C", Offset = "0xE0EC5C", VA = "0xE0EC5C", Slot = "4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001F80")]
			[Address(RVA = "0xE0EC64", Offset = "0xE0EC64", VA = "0xE0EC64", Slot = "5")]
			set
			{
			}
		}

		[Token(Token = "0x6001F81")]
		[Address(RVA = "0xE0ED34", Offset = "0xE0ED34", VA = "0xE0ED34")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001F82")]
		[Address(RVA = "0xE0EE10", Offset = "0xE0EE10", VA = "0xE0EE10")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001F83")]
		[Address(RVA = "0xE0EE2C", Offset = "0xE0EE2C", VA = "0xE0EE2C")]
		private void Update()
		{
		}

		[Token(Token = "0x6001F84")]
		[Address(RVA = "0xE0EE6C", Offset = "0xE0EE6C", VA = "0xE0EE6C")]
		private void OnParticleCollision(GameObject other)
		{
		}

		[Token(Token = "0x6001F85")]
		[Address(RVA = "0xE0F374", Offset = "0xE0F374", VA = "0xE0F374", Slot = "6")]
		protected virtual bool ShouldSpawn(ParticleCollisionEvent particleCollisionEvent)
		{
			return default(bool);
		}

		[Token(Token = "0x6001F86")]
		[Address(RVA = "0xE0F37C", Offset = "0xE0F37C", VA = "0xE0F37C")]
		public DecalsOnParticleCollision()
		{
		}
	}
	[Token(Token = "0x2000512")]
	[RequireComponent(typeof(ParticleSystem))]
	public class DecalsOnParticleCollisionAngledSpawn : DecalsOnParticleCollision
	{
		[Token(Token = "0x4001D11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private float minAngle;

		[Token(Token = "0x4001D12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		[SerializeField]
		private float maxAngle;

		[Token(Token = "0x4001D13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private Vector3 planeNormal;

		[Token(Token = "0x6001F87")]
		[Address(RVA = "0xE0F44C", Offset = "0xE0F44C", VA = "0xE0F44C", Slot = "6")]
		protected override bool ShouldSpawn(ParticleCollisionEvent particleCollisionEvent)
		{
			return default(bool);
		}

		[Token(Token = "0x6001F88")]
		[Address(RVA = "0xE0F594", Offset = "0xE0F594", VA = "0xE0F594")]
		public DecalsOnParticleCollisionAngledSpawn()
		{
		}
	}
	[Token(Token = "0x2000513")]
	public class DemoBlock : MonoBehaviour
	{
		[Token(Token = "0x4001D14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private TextMeshPro titleLabel;

		[Token(Token = "0x4001D15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private TextMeshPro indexLabel;

		[Token(Token = "0x4001D16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Transform demoPoint;

		[Token(Token = "0x4001D17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private GameObject prefab;

		[Token(Token = "0x4001D18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private string title;

		[Token(Token = "0x4001D19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private GameObject spawnedPrefab;

		[Token(Token = "0x6001F89")]
		[Address(RVA = "0xE0F5FC", Offset = "0xE0F5FC", VA = "0xE0F5FC")]
		public DemoBlock()
		{
		}
	}
	[Token(Token = "0x2000514")]
	public class DemoDollHand : MonoBehaviour, IHittable, IResettable, ISimpleObserverable
	{
		[Token(Token = "0x4001D1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private SkinnedMeshRenderer doll;

		[Token(Token = "0x4001D1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private int blendShapeIndex;

		[Token(Token = "0x4001D1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private GameObject[] disableObjects;

		[Token(Token = "0x4001D1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private GameObject[] enableObjects;

		[Token(Token = "0x4001D1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Animator animator;

		[Token(Token = "0x4001D1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private string animationName;

		[Token(Token = "0x4001D20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Action onExplodedEvent;

		[Token(Token = "0x6001F8A")]
		[Address(RVA = "0xE0F654", Offset = "0xE0F654", VA = "0xE0F654")]
		private void Start()
		{
		}

		[Token(Token = "0x6001F8B")]
		[Address(RVA = "0xE0F658", Offset = "0xE0F658", VA = "0xE0F658", Slot = "5")]
		public void ResetComponent()
		{
		}

		[Token(Token = "0x6001F8C")]
		[Address(RVA = "0xE0F65C", Offset = "0xE0F65C", VA = "0xE0F65C")]
		private void CancelExplode()
		{
		}

		[Token(Token = "0x6001F8D")]
		[Address(RVA = "0xE0F724", Offset = "0xE0F724", VA = "0xE0F724", Slot = "4")]
		public void TakeDamage(DamageData[] damage)
		{
		}

		[Token(Token = "0x6001F8E")]
		[Address(RVA = "0xE0F728", Offset = "0xE0F728", VA = "0xE0F728")]
		private void ExplodeHand()
		{
		}

		[Token(Token = "0x6001F8F")]
		[Address(RVA = "0xE0F828", Offset = "0xE0F828", VA = "0xE0F828", Slot = "6")]
		public void AddListener(Action callback)
		{
		}

		[Token(Token = "0x6001F90")]
		[Address(RVA = "0xE0F8B8", Offset = "0xE0F8B8", VA = "0xE0F8B8", Slot = "7")]
		public void RemoveListener(Action callback)
		{
		}

		[Token(Token = "0x6001F91")]
		[Address(RVA = "0xE0F948", Offset = "0xE0F948", VA = "0xE0F948")]
		public DemoDollHand()
		{
		}
	}
	[Token(Token = "0x2000515")]
	public class DemoHandExplosionEventHandler : MonoBehaviour, ISimpleObserverable
	{
		[Token(Token = "0x4001D21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private DemoDollHand[] hands;

		[Token(Token = "0x4001D22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Action onExplodedEvent;

		[Token(Token = "0x6001F92")]
		[Address(RVA = "0xE0F950", Offset = "0xE0F950", VA = "0xE0F950", Slot = "4")]
		public void AddListener(Action callback)
		{
		}

		[Token(Token = "0x6001F93")]
		[Address(RVA = "0xE0F9E0", Offset = "0xE0F9E0", VA = "0xE0F9E0", Slot = "5")]
		public void RemoveListener(Action callback)
		{
		}

		[Token(Token = "0x6001F94")]
		[Address(RVA = "0xE0FA70", Offset = "0xE0FA70", VA = "0xE0FA70")]
		private void Start()
		{
		}

		[Token(Token = "0x6001F95")]
		[Address(RVA = "0xE0FB44", Offset = "0xE0FB44", VA = "0xE0FB44")]
		private void OnExploded()
		{
		}

		[Token(Token = "0x6001F96")]
		[Address(RVA = "0xE0FB60", Offset = "0xE0FB60", VA = "0xE0FB60")]
		public DemoHandExplosionEventHandler()
		{
		}
	}
	[Token(Token = "0x2000516")]
	[RequireComponent(typeof(Animator))]
	public class DemoRobot : MonoBehaviour
	{
		[Token(Token = "0x2000517")]
		public enum RobotMode
		{
			[Token(Token = "0x4001D32")]
			Pistol,
			[Token(Token = "0x4001D33")]
			Auto
		}

		[Token(Token = "0x2000518")]
		[CompilerGenerated]
		private sealed class <EnableBulletSpawner>d__17 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001D34")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001D35")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001D36")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float delay;

			[Token(Token = "0x4001D37")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public DemoRobot <>4__this;

			[Token(Token = "0x4001D38")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public bool enabled;

			[Token(Token = "0x1700019F")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001FA2")]
				[Address(RVA = "0xE10338", Offset = "0xE10338", VA = "0xE10338", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001A0")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001FA4")]
				[Address(RVA = "0xE10380", Offset = "0xE10380", VA = "0xE10380", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001F9F")]
			[Address(RVA = "0xE0FE70", Offset = "0xE0FE70", VA = "0xE0FE70")]
			[DebuggerHidden]
			public <EnableBulletSpawner>d__17(int <>1__state)
			{
			}

			[Token(Token = "0x6001FA0")]
			[Address(RVA = "0xE10258", Offset = "0xE10258", VA = "0xE10258", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001FA1")]
			[Address(RVA = "0xE1025C", Offset = "0xE1025C", VA = "0xE1025C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001FA3")]
			[Address(RVA = "0xE10340", Offset = "0xE10340", VA = "0xE10340", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001D23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Transform target;

		[Token(Token = "0x4001D24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float rotateSpeed;

		[Token(Token = "0x4001D25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private float blendSpeed;

		[Token(Token = "0x4001D26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Transform rotatingRoot;

		[Token(Token = "0x4001D27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private AutoSpawner bulletSpawner;

		[Token(Token = "0x4001D28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private GameObject[] indicators;

		[Token(Token = "0x4001D29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private float angleForShooting;

		[Token(Token = "0x4001D2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private bool isRobotEnabled;

		[Token(Token = "0x4001D2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float aimWeight;

		[Token(Token = "0x4001D2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Animator robotAnimator;

		[Token(Token = "0x4001D2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private float aimAngle;

		[Token(Token = "0x4001D2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private Quaternion targetRotation;

		[Token(Token = "0x4001D2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private Quaternion startRotation;

		[Token(Token = "0x4001D30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Coroutine enableBulletSpawnerCoroutine;

		[Token(Token = "0x6001F97")]
		[Address(RVA = "0xE0FB68", Offset = "0xE0FB68", VA = "0xE0FB68")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001F98")]
		[Address(RVA = "0xE0FCAC", Offset = "0xE0FCAC", VA = "0xE0FCAC")]
		[ContextMenu("Enable robot")]
		public void EnableRobot()
		{
		}

		[Token(Token = "0x6001F99")]
		[Address(RVA = "0xE0FD6C", Offset = "0xE0FD6C", VA = "0xE0FD6C")]
		private void SwitchBulletSpawner(float delay, bool enabled)
		{
		}

		[Token(Token = "0x6001F9A")]
		[Address(RVA = "0xE0FDD8", Offset = "0xE0FDD8", VA = "0xE0FDD8")]
		[IteratorStateMachine(typeof(<EnableBulletSpawner>d__17))]
		private IEnumerator EnableBulletSpawner(float delay, bool enabled)
		{
			return null;
		}

		[Token(Token = "0x6001F9B")]
		[Address(RVA = "0xE0FBF0", Offset = "0xE0FBF0", VA = "0xE0FBF0")]
		[ContextMenu("Disable robot")]
		public void DisableRobot()
		{
		}

		[Token(Token = "0x6001F9C")]
		[Address(RVA = "0xE0FE98", Offset = "0xE0FE98", VA = "0xE0FE98")]
		private void Update()
		{
		}

		[Token(Token = "0x6001F9D")]
		[Address(RVA = "0xE101FC", Offset = "0xE101FC", VA = "0xE101FC")]
		public void SetMode(RobotMode mode)
		{
		}

		[Token(Token = "0x6001F9E")]
		[Address(RVA = "0xE1023C", Offset = "0xE1023C", VA = "0xE1023C")]
		public DemoRobot()
		{
		}
	}
	[Token(Token = "0x2000519")]
	public class DemoRobotTrigger : MonoBehaviour
	{
		[Token(Token = "0x4001D39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private DemoRobot robot;

		[Token(Token = "0x6001FA5")]
		[Address(RVA = "0xE10388", Offset = "0xE10388", VA = "0xE10388")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x6001FA6")]
		[Address(RVA = "0xE103FC", Offset = "0xE103FC", VA = "0xE103FC")]
		private void OnTriggerExit(Collider other)
		{
		}

		[Token(Token = "0x6001FA7")]
		[Address(RVA = "0xE10470", Offset = "0xE10470", VA = "0xE10470")]
		public DemoRobotTrigger()
		{
		}
	}
	[Token(Token = "0x200051A")]
	public class ExampleDamageable : MonoBehaviour
	{
		[Token(Token = "0x4001D3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private float speed;

		[Token(Token = "0x4001D3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private LayerMask layerMask;

		[Token(Token = "0x4001D3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Vector3 velocity;

		[Token(Token = "0x6001FA8")]
		[Address(RVA = "0xE10478", Offset = "0xE10478", VA = "0xE10478")]
		private void Start()
		{
		}

		[Token(Token = "0x6001FA9")]
		[Address(RVA = "0xE1047C", Offset = "0xE1047C", VA = "0xE1047C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001FAA")]
		[Address(RVA = "0xE104BC", Offset = "0xE104BC", VA = "0xE104BC")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6001FAB")]
		[Address(RVA = "0xE10630", Offset = "0xE10630", VA = "0xE10630")]
		private void OnHitted(RaycastHit hitInfo)
		{
		}

		[Token(Token = "0x6001FAC")]
		[Address(RVA = "0xE10824", Offset = "0xE10824", VA = "0xE10824")]
		public ExampleDamageable()
		{
		}
	}
	[Token(Token = "0x200051B")]
	public class ExplodeableDoll : MonoBehaviour, IHittable, IResettable, ISimpleObserverable
	{
		[Token(Token = "0x4001D3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private string explosionTrigger;

		[Token(Token = "0x4001D3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GameObject[] explosionObjects;

		[Token(Token = "0x4001D3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private GameObject[] disableExplosionObjects;

		[Token(Token = "0x4001D40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Action onExplodedEvent;

		[Token(Token = "0x4001D41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Animator animator;

		[Token(Token = "0x4001D42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Collider attachedCollider;

		[Token(Token = "0x4001D43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private bool isExploded;

		[Token(Token = "0x6001FAD")]
		[Address(RVA = "0xE10834", Offset = "0xE10834", VA = "0xE10834")]
		private void Start()
		{
		}

		[Token(Token = "0x6001FAE")]
		[Address(RVA = "0xE109E4", Offset = "0xE109E4", VA = "0xE109E4", Slot = "4")]
		public void TakeDamage(DamageData[] damage)
		{
		}

		[Token(Token = "0x6001FAF")]
		[Address(RVA = "0xE108CC", Offset = "0xE108CC", VA = "0xE108CC", Slot = "5")]
		[ContextMenu("Reset Component")]
		public void ResetComponent()
		{
		}

		[Token(Token = "0x6001FB0")]
		[Address(RVA = "0xE10AE4", Offset = "0xE10AE4", VA = "0xE10AE4", Slot = "6")]
		public void AddListener(Action callback)
		{
		}

		[Token(Token = "0x6001FB1")]
		[Address(RVA = "0xE10B74", Offset = "0xE10B74", VA = "0xE10B74", Slot = "7")]
		public void RemoveListener(Action callback)
		{
		}

		[Token(Token = "0x6001FB2")]
		[Address(RVA = "0xE10C04", Offset = "0xE10C04", VA = "0xE10C04")]
		public ExplodeableDoll()
		{
		}
	}
	[Token(Token = "0x200051C")]
	public class FeetDecalSpawner : MonoBehaviour
	{
		[Token(Token = "0x4001D44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private float width;

		[Token(Token = "0x4001D45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private float spawnOverDistance;

		[Token(Token = "0x4001D46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float spawnOverAngle;

		[Token(Token = "0x4001D47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private float randomOffsetOnAngleSpawn;

		[Token(Token = "0x4001D48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private GameObject leftFootDecalTemplate;

		[Token(Token = "0x4001D49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private GameObject rightFootDecalTemplate;

		[Token(Token = "0x4001D4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Transform leftRaycastPoint;

		[Token(Token = "0x4001D4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Transform rightRaycastPoint;

		[Token(Token = "0x4001D4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private LayerMask groundMask;

		[Token(Token = "0x4001D4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[SerializeField]
		private float raycastHeight;

		[Token(Token = "0x4001D4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private float raycastLength;

		[Token(Token = "0x4001D4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[SerializeField]
		private float threshold;

		[Token(Token = "0x4001D50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private float energyPerSpawn;

		[Token(Token = "0x4001D51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[SerializeField]
		private float maxEnergy;

		[Token(Token = "0x4001D52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private float distance;

		[Token(Token = "0x4001D53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private float angularDistance;

		[Token(Token = "0x4001D54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Vector3 oldPosition;

		[Token(Token = "0x4001D55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private float oldYAngle;

		[Token(Token = "0x4001D56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private bool currentRight;

		[Token(Token = "0x4001D57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private float energy;

		[Token(Token = "0x4001D58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private MaterialPropertyBlock materialPropertyBlock;

		[Token(Token = "0x170001A1")]
		public float Energy
		{
			[Token(Token = "0x6001FB3")]
			[Address(RVA = "0xE10C5C", Offset = "0xE10C5C", VA = "0xE10C5C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001FB4")]
			[Address(RVA = "0xE0E5E8", Offset = "0xE0E5E8", VA = "0xE0E5E8")]
			set
			{
			}
		}

		[Token(Token = "0x6001FB5")]
		[Address(RVA = "0xE10C64", Offset = "0xE10C64", VA = "0xE10C64")]
		private void Start()
		{
		}

		[Token(Token = "0x6001FB6")]
		[Address(RVA = "0xE10CCC", Offset = "0xE10CCC", VA = "0xE10CCC")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x6001FB7")]
		[Address(RVA = "0xE10E4C", Offset = "0xE10E4C", VA = "0xE10E4C")]
		private void Update()
		{
		}

		[Token(Token = "0x6001FB8")]
		[Address(RVA = "0xE11008", Offset = "0xE11008", VA = "0xE11008")]
		private void Spawn(float randomOffset)
		{
		}

		[Token(Token = "0x6001FB9")]
		[Address(RVA = "0xE11370", Offset = "0xE11370", VA = "0xE11370")]
		private bool GetPosition(Transform raycastPoint, out RaycastHit hitInfo)
		{
			return default(bool);
		}

		[Token(Token = "0x6001FBA")]
		[Address(RVA = "0xE114B0", Offset = "0xE114B0", VA = "0xE114B0")]
		public FeetDecalSpawner()
		{
		}
	}
	[Token(Token = "0x200051D")]
	[RequireComponent(typeof(Animator))]
	public class HeadExplosionDoll : MonoBehaviour, IHittable, ISimpleObserverable, IResettable
	{
		[Token(Token = "0x4001D59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private string headExplosionTrigger;

		[Token(Token = "0x4001D5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GameObject[] headExplosionObjects;

		[Token(Token = "0x4001D5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private GameObject[] defaultObjects;

		[Token(Token = "0x4001D5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Animator headAnimator;

		[Token(Token = "0x4001D5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Animator bodyAnimator;

		[Token(Token = "0x4001D5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private string bodyAnimation;

		[Token(Token = "0x4001D5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Action onExplodedEvent;

		[Token(Token = "0x4001D60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private bool isExploded;

		[Token(Token = "0x6001FBB")]
		[Address(RVA = "0xE114D8", Offset = "0xE114D8", VA = "0xE114D8", Slot = "4")]
		public void TakeDamage(DamageData[] damage)
		{
		}

		[Token(Token = "0x6001FBC")]
		[Address(RVA = "0xE115D8", Offset = "0xE115D8", VA = "0xE115D8")]
		private void Start()
		{
		}

		[Token(Token = "0x6001FBD")]
		[Address(RVA = "0xE115DC", Offset = "0xE115DC", VA = "0xE115DC", Slot = "7")]
		[ContextMenu("Reset Component")]
		public void ResetComponent()
		{
		}

		[Token(Token = "0x6001FBE")]
		[Address(RVA = "0xE116F4", Offset = "0xE116F4", VA = "0xE116F4", Slot = "5")]
		public void AddListener(Action callback)
		{
		}

		[Token(Token = "0x6001FBF")]
		[Address(RVA = "0xE11784", Offset = "0xE11784", VA = "0xE11784", Slot = "6")]
		public void RemoveListener(Action callback)
		{
		}

		[Token(Token = "0x6001FC0")]
		[Address(RVA = "0xE11814", Offset = "0xE11814", VA = "0xE11814")]
		public HeadExplosionDoll()
		{
		}
	}
	[Token(Token = "0x200051E")]
	public class HitBox : MonoBehaviour, IHittable
	{
		[Token(Token = "0x4001D61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Action<DamageData[]> onDamageEvent;

		[Token(Token = "0x6001FC1")]
		[Address(RVA = "0xE1186C", Offset = "0xE1186C", VA = "0xE1186C", Slot = "4")]
		public void TakeDamage(DamageData[] damage)
		{
		}

		[Token(Token = "0x6001FC2")]
		[Address(RVA = "0xE11890", Offset = "0xE11890", VA = "0xE11890")]
		public void AddListener(Action<DamageData[]> callback)
		{
		}

		[Token(Token = "0x6001FC3")]
		[Address(RVA = "0xE11938", Offset = "0xE11938", VA = "0xE11938")]
		public void RemoveListener(Action<DamageData[]> callback)
		{
		}

		[Token(Token = "0x6001FC4")]
		[Address(RVA = "0xE119E0", Offset = "0xE119E0", VA = "0xE119E0")]
		public HitBox()
		{
		}
	}
	[Token(Token = "0x200051F")]
	[RequireComponent(typeof(Animator))]
	public class HittableDoll : MonoBehaviour, IResettable, ISimpleObserverable
	{
		[Token(Token = "0x4001D62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private HitBox[] hitboxes;

		[Token(Token = "0x4001D63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private int minHitIndex;

		[Token(Token = "0x4001D64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private int maxHitIndex;

		[Token(Token = "0x4001D65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private GameObject bloodHitPrefab;

		[Token(Token = "0x4001D66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private GameObject bloodHitPrefab2;

		[Token(Token = "0x4001D67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private CharacterDamagePainter painter;

		[Token(Token = "0x4001D68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Animator animator;

		[Token(Token = "0x4001D69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private bool isHitted;

		[Token(Token = "0x4001D6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Action onHittedEvent;

		[Token(Token = "0x6001FC5")]
		[Address(RVA = "0xE119E8", Offset = "0xE119E8", VA = "0xE119E8", Slot = "5")]
		public void AddListener(Action callback)
		{
		}

		[Token(Token = "0x6001FC6")]
		[Address(RVA = "0xE11A78", Offset = "0xE11A78", VA = "0xE11A78", Slot = "6")]
		public void RemoveListener(Action callback)
		{
		}

		[Token(Token = "0x6001FC7")]
		[Address(RVA = "0xE11B08", Offset = "0xE11B08", VA = "0xE11B08", Slot = "4")]
		public void ResetComponent()
		{
		}

		[Token(Token = "0x6001FC8")]
		[Address(RVA = "0xE11BB8", Offset = "0xE11BB8", VA = "0xE11BB8")]
		public void TakeDamage(DamageData[] damage, HitBox hitbox)
		{
		}

		[Token(Token = "0x6001FC9")]
		[Address(RVA = "0xE1209C", Offset = "0xE1209C", VA = "0xE1209C")]
		private void Start()
		{
		}

		[Token(Token = "0x6001FCA")]
		[Address(RVA = "0xE12200", Offset = "0xE12200", VA = "0xE12200")]
		public HittableDoll()
		{
		}
	}
	[Token(Token = "0x2000521")]
	public class InstancedRendererColorApplier : MonoBehaviour
	{
		[Token(Token = "0x4001D6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string[] Names;

		[Token(Token = "0x4001D6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Color[] Values;

		[Token(Token = "0x4001D6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Renderer myRenderer;

		[Token(Token = "0x170001A2")]
		public Renderer MyRenderer
		{
			[Token(Token = "0x6001FCD")]
			[Address(RVA = "0xE12230", Offset = "0xE12230", VA = "0xE12230")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001FCE")]
		[Address(RVA = "0xE122D8", Offset = "0xE122D8", VA = "0xE122D8")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001FCF")]
		[Address(RVA = "0xE12410", Offset = "0xE12410", VA = "0xE12410")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x6001FD0")]
		[Address(RVA = "0xE12414", Offset = "0xE12414", VA = "0xE12414")]
		public void SetValue(int index, Vector4 value)
		{
		}

		[Token(Token = "0x6001FD1")]
		[Address(RVA = "0xE122DC", Offset = "0xE122DC", VA = "0xE122DC")]
		private void UpdateBlock()
		{
		}

		[Token(Token = "0x6001FD2")]
		[Address(RVA = "0xE1244C", Offset = "0xE1244C", VA = "0xE1244C")]
		public InstancedRendererColorApplier()
		{
		}
	}
	[Token(Token = "0x2000522")]
	[RequireComponent(typeof(InstancedRendererColorApplier))]
	[ExecuteAlways]
	public class InstancedRendererColorApplierRandomizer : MonoBehaviour
	{
		[Token(Token = "0x4001D70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Color color1;

		[Token(Token = "0x4001D71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Color color2;

		[Token(Token = "0x4001D72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private int colorIndex;

		[Token(Token = "0x4001D73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private InstancedRendererColorApplier colorApplier;

		[Token(Token = "0x6001FD3")]
		[Address(RVA = "0xE12454", Offset = "0xE12454", VA = "0xE12454")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001FD4")]
		[Address(RVA = "0xE124AC", Offset = "0xE124AC", VA = "0xE124AC")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x6001FD5")]
		[Address(RVA = "0xE12684", Offset = "0xE12684", VA = "0xE12684")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001FD6")]
		[Address(RVA = "0xE12550", Offset = "0xE12550", VA = "0xE12550")]
		private void UpdateColor()
		{
		}

		[Token(Token = "0x6001FD7")]
		[Address(RVA = "0xE126E4", Offset = "0xE126E4", VA = "0xE126E4")]
		public InstancedRendererColorApplierRandomizer()
		{
		}
	}
	[Token(Token = "0x2000523")]
	public class InstancedRendererVectorApplier : MonoBehaviour
	{
		[Token(Token = "0x4001D74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string[] Names;

		[Token(Token = "0x4001D75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Vector4[] Values;

		[Token(Token = "0x4001D76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Renderer myRenderer;

		[Token(Token = "0x170001A3")]
		public Renderer MyRenderer
		{
			[Token(Token = "0x6001FD8")]
			[Address(RVA = "0xE12700", Offset = "0xE12700", VA = "0xE12700")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001FD9")]
		[Address(RVA = "0xE127A8", Offset = "0xE127A8", VA = "0xE127A8")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001FDA")]
		[Address(RVA = "0xE128E0", Offset = "0xE128E0", VA = "0xE128E0")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x6001FDB")]
		[Address(RVA = "0xE128E4", Offset = "0xE128E4", VA = "0xE128E4")]
		public void SetValue(int index, Vector4 value)
		{
		}

		[Token(Token = "0x6001FDC")]
		[Address(RVA = "0xE127AC", Offset = "0xE127AC", VA = "0xE127AC")]
		private void UpdateBlock()
		{
		}

		[Token(Token = "0x6001FDD")]
		[Address(RVA = "0xE12A78", Offset = "0xE12A78", VA = "0xE12A78")]
		public InstancedRendererVectorApplier()
		{
		}
	}
	[Token(Token = "0x2000524")]
	public interface IResettable
	{
		[Token(Token = "0x6001FDE")]
		void ResetComponent();
	}
	[Token(Token = "0x2000525")]
	public interface ISimpleObserverable
	{
		[Token(Token = "0x6001FDF")]
		void AddListener(Action callback);

		[Token(Token = "0x6001FE0")]
		void RemoveListener(Action callback);
	}
	[Token(Token = "0x2000526")]
	public interface ISpawner
	{
		[Token(Token = "0x6001FE1")]
		GameObject Instantiate(GameObject template, Vector3 position, Quaternion rotation);
	}
	[Token(Token = "0x2000527")]
	public interface ISpawnerContainer
	{
		[Token(Token = "0x170001A4")]
		ISpawner Spawner
		{
			[Token(Token = "0x6001FE2")]
			get;
			[Token(Token = "0x6001FE3")]
			set;
		}
	}
	[Token(Token = "0x2000528")]
	[ExecuteAlways]
	public class LocalPositionToVectorApplier : MonoBehaviour
	{
		[Token(Token = "0x4001D77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int Index;

		[Token(Token = "0x4001D78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public bool AutoUpdate;

		[Token(Token = "0x4001D79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
		[SerializeField]
		private bool OnEnableOnly;

		[Token(Token = "0x4001D7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private InstancedRendererVectorApplier applier;

		[Token(Token = "0x170001A5")]
		public InstancedRendererVectorApplier Applier
		{
			[Token(Token = "0x6001FE4")]
			[Address(RVA = "0xE12A80", Offset = "0xE12A80", VA = "0xE12A80")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001FE5")]
		[Address(RVA = "0xE12B28", Offset = "0xE12B28", VA = "0xE12B28")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x6001FE6")]
		[Address(RVA = "0xE12B78", Offset = "0xE12B78", VA = "0xE12B78")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001FE7")]
		[Address(RVA = "0xE12BEC", Offset = "0xE12BEC", VA = "0xE12BEC")]
		private void Update()
		{
		}

		[Token(Token = "0x6001FE8")]
		[Address(RVA = "0xE12C60", Offset = "0xE12C60", VA = "0xE12C60")]
		public LocalPositionToVectorApplier()
		{
		}
	}
	[Token(Token = "0x2000529")]
	public class LocalRotator : MonoBehaviour
	{
		[Token(Token = "0x4001D7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float MaxAngle;

		[Token(Token = "0x4001D7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AnimationCurve Curve;

		[Token(Token = "0x4001D7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float LoopLength;

		[Token(Token = "0x4001D7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float Offset;

		[Token(Token = "0x4001D7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Vector3 Axis;

		[Token(Token = "0x4001D80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private Quaternion startRotation;

		[Token(Token = "0x4001D81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private float elapsedTime;

		[Token(Token = "0x6001FE9")]
		[Address(RVA = "0xE12C68", Offset = "0xE12C68", VA = "0xE12C68")]
		private void Start()
		{
		}

		[Token(Token = "0x6001FEA")]
		[Address(RVA = "0xE12CA0", Offset = "0xE12CA0", VA = "0xE12CA0")]
		private void Update()
		{
		}

		[Token(Token = "0x6001FEB")]
		[Address(RVA = "0xE12E04", Offset = "0xE12E04", VA = "0xE12E04")]
		public LocalRotator()
		{
		}
	}
	[Token(Token = "0x200052A")]
	public class MaterialFloatAnimator : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x200052B")]
		public class Parameter
		{
			[Token(Token = "0x4001D86")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string ID;

			[Token(Token = "0x4001D87")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public bool Enabled;

			[Token(Token = "0x4001D88")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public string PropertyName;

			[Token(Token = "0x4001D89")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float StartValue;

			[Token(Token = "0x4001D8A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public float TargetValue;

			[Token(Token = "0x4001D8B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public AnimationCurve Curve;

			[Token(Token = "0x4001D8C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public float Duration;

			[Token(Token = "0x4001D8D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public ParameterEvent[] Events;

			[Token(Token = "0x4001D8E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public Renderer[] Targets;

			[Token(Token = "0x4001D8F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			public bool Instanced;

			[Token(Token = "0x4001D90")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			private MaterialPropertyBlock[] blocks;

			[Token(Token = "0x4001D91")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			[HideInInspector]
			public float StartTime;

			[Token(Token = "0x170001A7")]
			public MaterialPropertyBlock[] Blocks
			{
				[Token(Token = "0x6001FF5")]
				[Address(RVA = "0xE13454", Offset = "0xE13454", VA = "0xE13454")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001A8")]
			public float CurrentValue
			{
				[Token(Token = "0x6001FF6")]
				[Address(RVA = "0xE1332C", Offset = "0xE1332C", VA = "0xE1332C")]
				get
				{
					return default(float);
				}
			}

			[Token(Token = "0x6001FF7")]
			[Address(RVA = "0xE13928", Offset = "0xE13928", VA = "0xE13928")]
			public UnityEvent GetEvent(string eventName)
			{
				return null;
			}

			[Token(Token = "0x6001FF8")]
			[Address(RVA = "0xE13A84", Offset = "0xE13A84", VA = "0xE13A84")]
			public Parameter()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x200052C")]
		public class ParameterEvent
		{
			[Token(Token = "0x4001D92")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string EventName;

			[Token(Token = "0x4001D93")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public float Timecode;

			[Token(Token = "0x4001D94")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public UnityEvent Event;

			[Token(Token = "0x4001D95")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			[HideInInspector]
			public bool Pushed;

			[Token(Token = "0x6001FF9")]
			[Address(RVA = "0xE13A8C", Offset = "0xE13A8C", VA = "0xE13A8C")]
			public ParameterEvent()
			{
			}
		}

		[Token(Token = "0x200052D")]
		public class NotExistEventInParameter : Exception
		{
			[Token(Token = "0x6001FFA")]
			[Address(RVA = "0xE13A1C", Offset = "0xE13A1C", VA = "0xE13A1C")]
			public NotExistEventInParameter(string message)
			{
			}
		}

		[Token(Token = "0x200052E")]
		public class NotExistParameter : Exception
		{
			[Token(Token = "0x6001FFB")]
			[Address(RVA = "0xE13690", Offset = "0xE13690", VA = "0xE13690")]
			public NotExistParameter(string message)
			{
			}
		}

		[Token(Token = "0x4001D82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool ResetOnEnable;

		[Token(Token = "0x4001D83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Parameter[] Params;

		[Token(Token = "0x4001D84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Renderer[] Targets;

		[Token(Token = "0x4001D85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private MaterialPropertyBlock[] blocks;

		[Token(Token = "0x170001A6")]
		public MaterialPropertyBlock[] Blocks
		{
			[Token(Token = "0x6001FEC")]
			[Address(RVA = "0xE12E6C", Offset = "0xE12E6C", VA = "0xE12E6C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001FED")]
		[Address(RVA = "0xE12FD0", Offset = "0xE12FD0", VA = "0xE12FD0")]
		private void Update()
		{
		}

		[Token(Token = "0x6001FEE")]
		[Address(RVA = "0xE135B8", Offset = "0xE135B8", VA = "0xE135B8")]
		public Parameter GetParameter(string id)
		{
			return null;
		}

		[Token(Token = "0x6001FEF")]
		[Address(RVA = "0xE136F8", Offset = "0xE136F8", VA = "0xE136F8")]
		public bool TryGetParameter(string id, out Parameter parameter)
		{
			return default(bool);
		}

		[Token(Token = "0x6001FF0")]
		[Address(RVA = "0xE137A8", Offset = "0xE137A8", VA = "0xE137A8")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001FF1")]
		[Address(RVA = "0xE13814", Offset = "0xE13814", VA = "0xE13814")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001FF2")]
		[Address(RVA = "0xE138A8", Offset = "0xE138A8", VA = "0xE138A8")]
		public void StartAnimation(string id)
		{
		}

		[Token(Token = "0x6001FF3")]
		[Address(RVA = "0xE138EC", Offset = "0xE138EC", VA = "0xE138EC")]
		public void StopAnimation(string id)
		{
		}

		[Token(Token = "0x6001FF4")]
		[Address(RVA = "0xE13918", Offset = "0xE13918", VA = "0xE13918")]
		public MaterialFloatAnimator()
		{
		}
	}
	[Token(Token = "0x200052F")]
	public class NoiseLocalRotation : MonoBehaviour
	{
		[Token(Token = "0x4001D96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private float maxAngle;

		[Token(Token = "0x4001D97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private float smoothSpeed;

		[Token(Token = "0x4001D98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Vector3 localAxis1;

		[Token(Token = "0x4001D99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		private Vector3 localAxis2;

		[Token(Token = "0x4001D9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private float noiseSpeed;

		[Token(Token = "0x4001D9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[SerializeField]
		private float noiseFrequency;

		[Token(Token = "0x4001D9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private int randomSeed1;

		[Token(Token = "0x4001D9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private int randomSeed2;

		[Token(Token = "0x4001D9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Quaternion startRotation;

		[Token(Token = "0x4001D9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private float noise1;

		[Token(Token = "0x4001DA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private float noise2;

		[Token(Token = "0x4001DA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private float lastNoiseChange;

		[Token(Token = "0x6001FFC")]
		[Address(RVA = "0xE13AE4", Offset = "0xE13AE4", VA = "0xE13AE4")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001FFD")]
		[Address(RVA = "0xE13B14", Offset = "0xE13B14", VA = "0xE13B14")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001FFE")]
		[Address(RVA = "0xE13B6C", Offset = "0xE13B6C", VA = "0xE13B6C")]
		private void Update()
		{
		}

		[Token(Token = "0x6001FFF")]
		[Address(RVA = "0xE13DDC", Offset = "0xE13DDC", VA = "0xE13DDC")]
		public NoiseLocalRotation()
		{
		}
	}
	[Token(Token = "0x2000530")]
	public class ParticleSystemsController : MonoBehaviour
	{
		[Token(Token = "0x4001DA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private float lifetimeMultiplier;

		[Token(Token = "0x4001DA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private float sizeMultiplier;

		[Token(Token = "0x4001DA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float speedMultiplier;

		[Token(Token = "0x4001DA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private float shapeAngleMultiplier;

		[Token(Token = "0x4001DA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private ParticleSystem[] particleSystems;

		[Token(Token = "0x4001DA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private ParticleSystem.MinMaxCurve[] lifetimes;

		[Token(Token = "0x4001DA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private ParticleSystem.MinMaxCurve[] sizes;

		[Token(Token = "0x4001DA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private ParticleSystem.MinMaxCurve[] speeds;

		[Token(Token = "0x4001DAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private float[] shapeAngles;

		[Token(Token = "0x4001DAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private bool liveUpdate;

		[Token(Token = "0x6002000")]
		[Address(RVA = "0xE13E0C", Offset = "0xE13E0C", VA = "0xE13E0C")]
		[ContextMenu("Enable live update")]
		public void EnableLiveUpdate()
		{
		}

		[Token(Token = "0x6002001")]
		[Address(RVA = "0xE13E18", Offset = "0xE13E18", VA = "0xE13E18")]
		[ContextMenu("Disable live update")]
		public void DisableLiveUpdate()
		{
		}

		[Token(Token = "0x6002002")]
		[Address(RVA = "0xE13E20", Offset = "0xE13E20", VA = "0xE13E20")]
		[ContextMenu("Save current curves")]
		private void SaveCurrentCurves()
		{
		}

		[Token(Token = "0x6002003")]
		[Address(RVA = "0xE14204", Offset = "0xE14204", VA = "0xE14204")]
		private void EnableLiveUpdate(bool enabled)
		{
		}

		[Token(Token = "0x6002004")]
		[Address(RVA = "0xE14210", Offset = "0xE14210", VA = "0xE14210")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x6002005")]
		[Address(RVA = "0xE14220", Offset = "0xE14220", VA = "0xE14220")]
		private void UpdateLifetime()
		{
		}

		[Token(Token = "0x6002006")]
		[Address(RVA = "0xE14164", Offset = "0xE14164", VA = "0xE14164")]
		private ParticleSystem.MinMaxCurve Multiply(ParticleSystem.MinMaxCurve minMaxCurve, float mul)
		{
			return default(ParticleSystem.MinMaxCurve);
		}

		[Token(Token = "0x6002007")]
		[Address(RVA = "0xE143FC", Offset = "0xE143FC", VA = "0xE143FC")]
		private void Start()
		{
		}

		[Token(Token = "0x6002008")]
		[Address(RVA = "0xE14400", Offset = "0xE14400", VA = "0xE14400")]
		public ParticleSystemsController()
		{
		}
	}
	[Token(Token = "0x2000531")]
	public class PlayAnimationByAnimationEvent : MonoBehaviour
	{
		[Token(Token = "0x4001DAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Animator animator;

		[Token(Token = "0x4001DAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private string animationName;

		[Token(Token = "0x6002009")]
		[Address(RVA = "0xE14410", Offset = "0xE14410", VA = "0xE14410")]
		private void PlayAnimationEvent()
		{
		}

		[Token(Token = "0x600200A")]
		[Address(RVA = "0xE1443C", Offset = "0xE1443C", VA = "0xE1443C")]
		public PlayAnimationByAnimationEvent()
		{
		}
	}
	[Token(Token = "0x2000532")]
	[RequireComponent(typeof(Animator))]
	public class RandomAnimatorSpeed : MonoBehaviour
	{
		[Token(Token = "0x4001DAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private float minSpeed;

		[Token(Token = "0x4001DAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private float maxSpeed;

		[Token(Token = "0x4001DB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Animator animator;

		[Token(Token = "0x600200B")]
		[Address(RVA = "0xE14444", Offset = "0xE14444", VA = "0xE14444")]
		private void Awake()
		{
		}

		[Token(Token = "0x600200C")]
		[Address(RVA = "0xE1449C", Offset = "0xE1449C", VA = "0xE1449C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600200D")]
		[Address(RVA = "0xE144C8", Offset = "0xE144C8", VA = "0xE144C8")]
		public RandomAnimatorSpeed()
		{
		}
	}
	[Token(Token = "0x2000533")]
	public class RandomIntegerParameter : MonoBehaviour
	{
		[Token(Token = "0x4001DB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private int minValue;

		[Token(Token = "0x4001DB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private int maxValue;

		[Token(Token = "0x4001DB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private string propertyName;

		[Token(Token = "0x4001DB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Renderer[] targetRenderer;

		[Token(Token = "0x4001DB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private MaterialPropertyBlock propertyBlock;

		[Token(Token = "0x4001DB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private int propertyNameProp;

		[Token(Token = "0x600200E")]
		[Address(RVA = "0xE144DC", Offset = "0xE144DC", VA = "0xE144DC")]
		private void Awake()
		{
		}

		[Token(Token = "0x600200F")]
		[Address(RVA = "0xE14558", Offset = "0xE14558", VA = "0xE14558")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6002010")]
		[Address(RVA = "0xE14618", Offset = "0xE14618", VA = "0xE14618")]
		public RandomIntegerParameter()
		{
		}
	}
	[Token(Token = "0x2000534")]
	public class ResetButtonByDamage : MonoBehaviour, IHittable
	{
		[Token(Token = "0x2000535")]
		[CompilerGenerated]
		private sealed class <ShowButtonWithDelay>d__11 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001DC0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001DC1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001DC2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float delay;

			[Token(Token = "0x4001DC3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public ResetButtonByDamage <>4__this;

			[Token(Token = "0x170001A9")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600201B")]
				[Address(RVA = "0xE14FFC", Offset = "0xE14FFC", VA = "0xE14FFC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001AA")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600201D")]
				[Address(RVA = "0xE15044", Offset = "0xE15044", VA = "0xE15044", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002018")]
			[Address(RVA = "0xE14A9C", Offset = "0xE14A9C", VA = "0xE14A9C")]
			[DebuggerHidden]
			public <ShowButtonWithDelay>d__11(int <>1__state)
			{
			}

			[Token(Token = "0x6002019")]
			[Address(RVA = "0xE14EB0", Offset = "0xE14EB0", VA = "0xE14EB0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600201A")]
			[Address(RVA = "0xE14EB4", Offset = "0xE14EB4", VA = "0xE14EB4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600201C")]
			[Address(RVA = "0xE15004", Offset = "0xE15004", VA = "0xE15004", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001DB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private MonoBehaviour[] resettables;

		[Token(Token = "0x4001DB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private MonoBehaviour showButtonEventObserverable;

		[Token(Token = "0x4001DB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private float showButtonDelay;

		[Token(Token = "0x4001DBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private IResettable[] resettablesComponents;

		[Token(Token = "0x4001DBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private ISimpleObserverable showButtonEvent;

		[Token(Token = "0x4001DBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Renderer[] renderers;

		[Token(Token = "0x4001DBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Collider[] colliders;

		[Token(Token = "0x4001DBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private bool hasEvent;

		[Token(Token = "0x4001DBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
		private bool isShowed;

		[Token(Token = "0x6002011")]
		[Address(RVA = "0xE14628", Offset = "0xE14628", VA = "0xE14628")]
		private void Start()
		{
		}

		[Token(Token = "0x6002012")]
		[Address(RVA = "0xE149DC", Offset = "0xE149DC", VA = "0xE149DC")]
		private void ShowButton()
		{
		}

		[Token(Token = "0x6002013")]
		[Address(RVA = "0xE14A18", Offset = "0xE14A18", VA = "0xE14A18")]
		[IteratorStateMachine(typeof(<ShowButtonWithDelay>d__11))]
		private IEnumerator ShowButtonWithDelay(float delay)
		{
			return null;
		}

		[Token(Token = "0x6002014")]
		[Address(RVA = "0xE14920", Offset = "0xE14920", VA = "0xE14920")]
		private void HideButton()
		{
		}

		[Token(Token = "0x6002015")]
		[Address(RVA = "0xE14AC4", Offset = "0xE14AC4", VA = "0xE14AC4")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x6002016")]
		[Address(RVA = "0xE14DAC", Offset = "0xE14DAC", VA = "0xE14DAC", Slot = "4")]
		public void TakeDamage(DamageData[] damage)
		{
		}

		[Token(Token = "0x6002017")]
		[Address(RVA = "0xE14EA0", Offset = "0xE14EA0", VA = "0xE14EA0")]
		public ResetButtonByDamage()
		{
		}
	}
	[Token(Token = "0x2000536")]
	public class RigidbodyExplosion : MonoBehaviour, IResettable
	{
		[Token(Token = "0x2000537")]
		private class TransformParameters
		{
			[Token(Token = "0x4001DD2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private Transform parent;

			[Token(Token = "0x4001DD3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private Vector3 localPosition;

			[Token(Token = "0x4001DD4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			private Quaternion localRotation;

			[Token(Token = "0x4001DD5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private Vector3 localScale;

			[Token(Token = "0x6002026")]
			[Address(RVA = "0xE15368", Offset = "0xE15368", VA = "0xE15368")]
			public TransformParameters(Transform t)
			{
			}

			[Token(Token = "0x6002027")]
			[Address(RVA = "0xE15618", Offset = "0xE15618", VA = "0xE15618")]
			public void Apply(Transform t)
			{
			}
		}

		[Token(Token = "0x2000538")]
		[CompilerGenerated]
		private sealed class <DelayedExplode>d__16 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001DD6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001DD7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001DD8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public RigidbodyExplosion <>4__this;

			[Token(Token = "0x170001AB")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600202B")]
				[Address(RVA = "0xE15E68", Offset = "0xE15E68", VA = "0xE15E68", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001AC")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600202D")]
				[Address(RVA = "0xE15EB0", Offset = "0xE15EB0", VA = "0xE15EB0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002028")]
			[Address(RVA = "0xE15488", Offset = "0xE15488", VA = "0xE15488")]
			[DebuggerHidden]
			public <DelayedExplode>d__16(int <>1__state)
			{
			}

			[Token(Token = "0x6002029")]
			[Address(RVA = "0xE15B24", Offset = "0xE15B24", VA = "0xE15B24", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600202A")]
			[Address(RVA = "0xE15B28", Offset = "0xE15B28", VA = "0xE15B28", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600202C")]
			[Address(RVA = "0xE15E70", Offset = "0xE15E70", VA = "0xE15E70", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001DC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private bool explodeAllChildren;

		[Token(Token = "0x4001DC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		[SerializeField]
		private bool randomDirection;

		[Token(Token = "0x4001DC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private float randomPointMin;

		[Token(Token = "0x4001DC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float randomPointMax;

		[Token(Token = "0x4001DC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private float minForce;

		[Token(Token = "0x4001DC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private float maxForce;

		[Token(Token = "0x4001DCA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		private float minTorque;

		[Token(Token = "0x4001DCB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private float maxTorque;

		[Token(Token = "0x4001DCC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Transform explosionPoint;

		[Token(Token = "0x4001DCD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private float explosionRadius;

		[Token(Token = "0x4001DCE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[SerializeField]
		private float enableDelay;

		[Token(Token = "0x4001DCF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private List<TransformParameters> transformParameters;

		[Token(Token = "0x4001DD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private List<Rigidbody> bodies;

		[Token(Token = "0x4001DD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private bool isInitialized;

		[Token(Token = "0x600201E")]
		[Address(RVA = "0xE1504C", Offset = "0xE1504C", VA = "0xE1504C")]
		public void Initialize()
		{
		}

		[Token(Token = "0x600201F")]
		[Address(RVA = "0xE153EC", Offset = "0xE153EC", VA = "0xE153EC")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6002020")]
		[Address(RVA = "0xE15414", Offset = "0xE15414", VA = "0xE15414")]
		[IteratorStateMachine(typeof(<DelayedExplode>d__16))]
		private IEnumerator DelayedExplode()
		{
			return null;
		}

		[Token(Token = "0x6002021")]
		[Address(RVA = "0xE154B0", Offset = "0xE154B0", VA = "0xE154B0")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6002022")]
		[Address(RVA = "0xE1550C", Offset = "0xE1550C", VA = "0xE1550C")]
		private void CancelExplode()
		{
		}

		[Token(Token = "0x6002023")]
		[Address(RVA = "0xE15684", Offset = "0xE15684", VA = "0xE15684")]
		public void Explode()
		{
		}

		[Token(Token = "0x6002024")]
		[Address(RVA = "0xE15A24", Offset = "0xE15A24", VA = "0xE15A24", Slot = "4")]
		public void ResetComponent()
		{
		}

		[Token(Token = "0x6002025")]
		[Address(RVA = "0xE15A28", Offset = "0xE15A28", VA = "0xE15A28")]
		public RigidbodyExplosion()
		{
		}
	}
	[Token(Token = "0x2000539")]
	public class RobotModeButton : MonoBehaviour, IHittable
	{
		[Token(Token = "0x4001DD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private DemoRobot.RobotMode robotMode;

		[Token(Token = "0x4001DDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private DemoRobot targetRobot;

		[Token(Token = "0x4001DDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private RobotModeButton otherButton;

		[Token(Token = "0x4001DDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Material enabledMaterial;

		[Token(Token = "0x4001DDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Material disabledMaterial;

		[Token(Token = "0x4001DDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private bool defaultEnabled;

		[Token(Token = "0x4001DDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Renderer attachedRenderer;

		[Token(Token = "0x600202E")]
		[Address(RVA = "0xE15EB8", Offset = "0xE15EB8", VA = "0xE15EB8")]
		private void Awake()
		{
		}

		[Token(Token = "0x600202F")]
		[Address(RVA = "0xE15F10", Offset = "0xE15F10", VA = "0xE15F10")]
		private void Start()
		{
		}

		[Token(Token = "0x6002030")]
		[Address(RVA = "0xE15F60", Offset = "0xE15F60", VA = "0xE15F60", Slot = "4")]
		public void TakeDamage(DamageData[] damage)
		{
		}

		[Token(Token = "0x6002031")]
		[Address(RVA = "0xE15F20", Offset = "0xE15F20", VA = "0xE15F20")]
		public void EnableMode()
		{
		}

		[Token(Token = "0x6002032")]
		[Address(RVA = "0xE15F64", Offset = "0xE15F64", VA = "0xE15F64")]
		public void DisableMode()
		{
		}

		[Token(Token = "0x6002033")]
		[Address(RVA = "0xE15F88", Offset = "0xE15F88", VA = "0xE15F88")]
		public RobotModeButton()
		{
		}
	}
	[Token(Token = "0x200053A")]
	public class Spawner : MonoBehaviour, IResettable, ISpawner
	{
		[Token(Token = "0x4001DE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Transform spawnerContainersRoot;

		[Token(Token = "0x4001DE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private List<GameObject> spawnedObjects;

		[Token(Token = "0x6002034")]
		[Address(RVA = "0xE15F90", Offset = "0xE15F90", VA = "0xE15F90", Slot = "5")]
		public GameObject Instantiate(GameObject template, Vector3 position, Quaternion rotation)
		{
			return null;
		}

		[Token(Token = "0x6002035")]
		[Address(RVA = "0xE160EC", Offset = "0xE160EC", VA = "0xE160EC")]
		private void Awake()
		{
		}

		[Token(Token = "0x6002036")]
		[Address(RVA = "0xE16200", Offset = "0xE16200", VA = "0xE16200", Slot = "4")]
		public void ResetComponent()
		{
		}

		[Token(Token = "0x6002037")]
		[Address(RVA = "0xE163C8", Offset = "0xE163C8", VA = "0xE163C8")]
		public Spawner()
		{
		}
	}
	[Token(Token = "0x200053B")]
	public struct DamageData
	{
		[Token(Token = "0x4001DE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float amount;

		[Token(Token = "0x4001DE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public Vector3 point;

		[Token(Token = "0x4001DE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Vector3 normal;

		[Token(Token = "0x4001DE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Vector3 direction;
	}
	[Token(Token = "0x200053C")]
	public interface IHittable
	{
		[Token(Token = "0x6002038")]
		void TakeDamage(DamageData[] damage);
	}
}
namespace Knife.RealBlood.SimpleController
{
	[Token(Token = "0x200053D")]
	public class AnimatorFX : FPSDamageFX
	{
		[Token(Token = "0x4001DE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Animator animator;

		[Token(Token = "0x4001DE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private string[] animationNames;

		[Token(Token = "0x4001DE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private float minimumIntervalBeforeNext;

		[Token(Token = "0x4001DE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float lastSpawnTime;

		[Token(Token = "0x6002039")]
		[Address(RVA = "0xE16450", Offset = "0xE16450", VA = "0xE16450", Slot = "5")]
		public override void PlayFX(DamageData[] damage)
		{
		}

		[Token(Token = "0x600203A")]
		[Address(RVA = "0xE164D8", Offset = "0xE164D8", VA = "0xE164D8")]
		public AnimatorFX()
		{
		}
	}
	[Token(Token = "0x200053E")]
	public class BloodFX : FPSDamageFX
	{
		[Token(Token = "0x200053F")]
		[CompilerGenerated]
		private sealed class <DelayedDestroy>d__15 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001DF7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001DF8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001DF9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public BloodFX <>4__this;

			[Token(Token = "0x4001DFA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public GameObject instance;

			[Token(Token = "0x4001DFB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public int poolIndex;

			[Token(Token = "0x170001AD")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002043")]
				[Address(RVA = "0xE16C9C", Offset = "0xE16C9C", VA = "0xE16C9C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001AE")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002045")]
				[Address(RVA = "0xE16CE4", Offset = "0xE16CE4", VA = "0xE16CE4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002040")]
			[Address(RVA = "0xE16930", Offset = "0xE16930", VA = "0xE16930")]
			[DebuggerHidden]
			public <DelayedDestroy>d__15(int <>1__state)
			{
			}

			[Token(Token = "0x6002041")]
			[Address(RVA = "0xE16B84", Offset = "0xE16B84", VA = "0xE16B84", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002042")]
			[Address(RVA = "0xE16B88", Offset = "0xE16B88", VA = "0xE16B88", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002044")]
			[Address(RVA = "0xE16CA4", Offset = "0xE16CA4", VA = "0xE16CA4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001DEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject[] damagePrefabs;

		[Token(Token = "0x4001DEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Transform damageRoot;

		[Token(Token = "0x4001DEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private int prewarmCount;

		[Token(Token = "0x4001DED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		private int minCount;

		[Token(Token = "0x4001DEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private int maxCount;

		[Token(Token = "0x4001DEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[SerializeField]
		private float destroyDelay;

		[Token(Token = "0x4001DF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Vector2 randomPosition;

		[Token(Token = "0x4001DF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Vector2 randomPositionMul;

		[Token(Token = "0x4001DF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private float minRandomScale;

		[Token(Token = "0x4001DF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[SerializeField]
		private float maxRandomScale;

		[Token(Token = "0x4001DF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private float minimumIntervalBeforeNext;

		[Token(Token = "0x4001DF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Queue<GameObject>[] pools;

		[Token(Token = "0x4001DF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private float lastSpawnTime;

		[Token(Token = "0x600203B")]
		[Address(RVA = "0xE164F4", Offset = "0xE164F4", VA = "0xE164F4")]
		private void Start()
		{
		}

		[Token(Token = "0x600203C")]
		[Address(RVA = "0xE16700", Offset = "0xE16700", VA = "0xE16700")]
		private GameObject RandomSpawn()
		{
			return null;
		}

		[Token(Token = "0x600203D")]
		[Address(RVA = "0xE16898", Offset = "0xE16898", VA = "0xE16898")]
		[IteratorStateMachine(typeof(<DelayedDestroy>d__15))]
		private IEnumerator DelayedDestroy(GameObject instance, int poolIndex)
		{
			return null;
		}

		[Token(Token = "0x600203E")]
		[Address(RVA = "0xE16958", Offset = "0xE16958", VA = "0xE16958", Slot = "5")]
		public override void PlayFX(DamageData[] damage)
		{
		}

		[Token(Token = "0x600203F")]
		[Address(RVA = "0xE16B48", Offset = "0xE16B48", VA = "0xE16B48")]
		public BloodFX()
		{
		}
	}
	[Token(Token = "0x2000540")]
	public class EmptyWeapon : Weapon
	{
		[Token(Token = "0x6002046")]
		[Address(RVA = "0xE16CEC", Offset = "0xE16CEC", VA = "0xE16CEC", Slot = "4")]
		protected override void EndFire()
		{
		}

		[Token(Token = "0x6002047")]
		[Address(RVA = "0xE16CF0", Offset = "0xE16CF0", VA = "0xE16CF0", Slot = "5")]
		protected override void Shot()
		{
		}

		[Token(Token = "0x6002048")]
		[Address(RVA = "0xE16CF4", Offset = "0xE16CF4", VA = "0xE16CF4")]
		public EmptyWeapon()
		{
		}
	}
	[Token(Token = "0x2000541")]
	public abstract class FPSDamageFX : MonoBehaviour, IFPSDamageFX
	{
		[Token(Token = "0x6002049")]
		public abstract void PlayFX(DamageData[] damage);

		[Token(Token = "0x600204A")]
		[Address(RVA = "0xE164EC", Offset = "0xE164EC", VA = "0xE164EC")]
		protected FPSDamageFX()
		{
		}
	}
	[Token(Token = "0x2000542")]
	public class FPSDamageFXPlayer : MonoBehaviour, IHittable
	{
		[Token(Token = "0x4001DFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private FPSDamageFX[] effects;

		[Token(Token = "0x4001DFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[Header("Monobehaviours with IFPSDamageFX implemented interface")]
		[SerializeField]
		private MonoBehaviour[] monoEffects;

		[Token(Token = "0x4001DFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private IFPSDamageFX[] fPSDamageFXes;

		[Token(Token = "0x600204B")]
		[Address(RVA = "0xE16D3C", Offset = "0xE16D3C", VA = "0xE16D3C")]
		private void Awake()
		{
		}

		[Token(Token = "0x600204C")]
		[Address(RVA = "0xE16E9C", Offset = "0xE16E9C", VA = "0xE16E9C")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x600204D")]
		[Address(RVA = "0xE1700C", Offset = "0xE1700C", VA = "0xE1700C", Slot = "4")]
		public void TakeDamage(DamageData[] damage)
		{
		}

		[Token(Token = "0x600204E")]
		[Address(RVA = "0xE17144", Offset = "0xE17144", VA = "0xE17144")]
		public FPSDamageFXPlayer()
		{
		}
	}
	[Token(Token = "0x2000544")]
	public class Hands : MonoBehaviour
	{
		[Token(Token = "0x4001E01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Weapon[] Weapons;

		[Token(Token = "0x4001E02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Camera Cam;

		[Token(Token = "0x4001E03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public KeyCode[] Keys;

		[Token(Token = "0x4001E04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float startFov;

		[Token(Token = "0x6002052")]
		[Address(RVA = "0xE1720C", Offset = "0xE1720C", VA = "0xE1720C")]
		private void Start()
		{
		}

		[Token(Token = "0x6002053")]
		[Address(RVA = "0xE17290", Offset = "0xE17290", VA = "0xE17290")]
		private void Update()
		{
		}

		[Token(Token = "0x6002054")]
		[Address(RVA = "0xE1744C", Offset = "0xE1744C", VA = "0xE1744C")]
		public Hands()
		{
		}
	}
	[Token(Token = "0x2000545")]
	public interface IFPSDamageFX
	{
		[Token(Token = "0x6002055")]
		void PlayFX(DamageData[] damage);
	}
	[Token(Token = "0x2000546")]
	[RequireComponent(typeof(CapsuleCollider))]
	public class PlayerController : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000547")]
		public class PlayerStandState
		{
			[Token(Token = "0x4001E3C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public float ControlCameraHeight;

			[Token(Token = "0x4001E3D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public float ColliderHeight;

			[Token(Token = "0x4001E3E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public float ColliderCenterHeight;

			[Token(Token = "0x6002069")]
			[Address(RVA = "0xE1892C", Offset = "0xE1892C", VA = "0xE1892C")]
			public PlayerStandState()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000548")]
		public class Headbob
		{
			[Token(Token = "0x4001E3F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public bool Enabled;

			[Token(Token = "0x4001E40")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public float HeadBobWeight;

			[Token(Token = "0x4001E41")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Vector2 HeadBobAmount;

			[Token(Token = "0x4001E42")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float HeadBobPeriod;

			[Token(Token = "0x4001E43")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public AnimationCurve HeadBobCurveX;

			[Token(Token = "0x4001E44")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public AnimationCurve HeadBobCurveY;

			[Token(Token = "0x4001E45")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private Vector3 resultHeadbob;

			[Token(Token = "0x170001B5")]
			public Vector3 HeadBobPos
			{
				[Token(Token = "0x600206A")]
				[Address(RVA = "0xE18934", Offset = "0xE18934", VA = "0xE18934")]
				get
				{
					return default(Vector3);
				}
			}

			[Token(Token = "0x600206B")]
			[Address(RVA = "0xE1823C", Offset = "0xE1823C", VA = "0xE1823C")]
			public void CalcHeadbob(float currentTime)
			{
			}

			[Token(Token = "0x600206C")]
			[Address(RVA = "0xE18940", Offset = "0xE18940", VA = "0xE18940")]
			public Headbob()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000549")]
		public class MouseLook
		{
			[Token(Token = "0x4001E46")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public bool Enabled;

			[Token(Token = "0x4001E47")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public float XSensitivity;

			[Token(Token = "0x4001E48")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public float YSensitivity;

			[Token(Token = "0x4001E49")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public float SensivityMultiplier;

			[Token(Token = "0x4001E4A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float MinimumX;

			[Token(Token = "0x4001E4B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public float MaximumX;

			[Token(Token = "0x4001E4C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float SmoothTime;

			[Token(Token = "0x4001E4D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public bool ClampVerticalRotation;

			[Token(Token = "0x4001E4E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public string AxisXName;

			[Token(Token = "0x4001E4F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public string AxisYName;

			[Token(Token = "0x4001E50")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private Quaternion characterTargetRot;

			[Token(Token = "0x4001E51")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			private Quaternion cameraTargetRot;

			[Token(Token = "0x4001E52")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			private Transform character;

			[Token(Token = "0x4001E53")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			private Transform camera;

			[Token(Token = "0x600206D")]
			[Address(RVA = "0xE17590", Offset = "0xE17590", VA = "0xE17590")]
			public void Init(Transform character, Transform camera)
			{
			}

			[Token(Token = "0x600206E")]
			[Address(RVA = "0xE17920", Offset = "0xE17920", VA = "0xE17920")]
			public void LookRotation(float deltaTime)
			{
			}

			[Token(Token = "0x600206F")]
			[Address(RVA = "0xE18968", Offset = "0xE18968", VA = "0xE18968")]
			public void LookRotation(float yRot, float xRot, float deltaTime)
			{
			}

			[Token(Token = "0x6002070")]
			[Address(RVA = "0xE17688", Offset = "0xE17688", VA = "0xE17688")]
			public void RotateCameraSmoothlyTo(float xRot, float deltaTime)
			{
			}

			[Token(Token = "0x6002071")]
			[Address(RVA = "0xE18B78", Offset = "0xE18B78", VA = "0xE18B78")]
			private Quaternion ClampRotationAroundXAxis(Quaternion q)
			{
				return default(Quaternion);
			}

			[Token(Token = "0x6002072")]
			[Address(RVA = "0xE18BDC", Offset = "0xE18BDC", VA = "0xE18BDC")]
			public MouseLook()
			{
			}
		}

		[Token(Token = "0x4001E05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject control;

		[Token(Token = "0x4001E06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MouseLook Look;

		[Token(Token = "0x4001E07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Headbob HeadBob;

		[Token(Token = "0x4001E08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public AnimationCurve HeadBobBlendCurve;

		[Token(Token = "0x4001E09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public AnimationCurve HeadBobPeriodBlendCurve;

		[Token(Token = "0x4001E0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public string ForwardAxis;

		[Token(Token = "0x4001E0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public string StrafeAxis;

		[Token(Token = "0x4001E0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Transform DirectionReference;

		[Token(Token = "0x4001E0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public float CrouchSpeedMultiplier;

		[Token(Token = "0x4001E0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public float RunSpeedMultiplier;

		[Token(Token = "0x4001E0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public float RunIncreaseSpeedTime;

		[Token(Token = "0x4001E10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public float RunSpeedThreshold;

		[Token(Token = "0x4001E11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public AnimationCurve RunIncreaseSpeedCurve;

		[Token(Token = "0x4001E12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public float CollisionScale;

		[Token(Token = "0x4001E13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		public float Speed;

		[Token(Token = "0x4001E14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public LayerMask GroundLayer;

		[Token(Token = "0x4001E15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		public float Threshold;

		[Token(Token = "0x4001E16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public float Gravity;

		[Token(Token = "0x4001E17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		public float StickToGround;

		[Token(Token = "0x4001E18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public PlayerStandState StandState;

		[Token(Token = "0x4001E19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public PlayerStandState CrouchState;

		[Token(Token = "0x4001E1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public float StateChangeSpeed;

		[Token(Token = "0x4001E1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public AnimationCurve StateChangeCurve;

		[Token(Token = "0x4001E1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public float MaxSpeed;

		[Token(Token = "0x4001E1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		public float WeightSmooth;

		[Token(Token = "0x4001E1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public float JumpSpeed;

		[Token(Token = "0x4001E1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public Camera PlayerCamera;

		[Token(Token = "0x4001E20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public Transform ControlCamera;

		[Token(Token = "0x4001E21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public Transform HandsHeadBobTarget;

		[Token(Token = "0x4001E22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		public float CameraHeadbobWeight;

		[Token(Token = "0x4001E23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		public float HandsHeadbobWeight;

		[Token(Token = "0x4001E24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		public float HandsHeadbobMultiplier;

		[Token(Token = "0x4001E25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		public PlayerFreezeChangedEvent PlayerFreezeChanged;

		[Token(Token = "0x4001E26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		public UnityAction RunStartEvent;

		[Token(Token = "0x4001E27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		public UnityAction JumpStartEvent;

		[Token(Token = "0x4001E28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		public UnityAction JumpFallEvent;

		[Token(Token = "0x4001E29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		public UnityAction JumpEndEvent;

		[Token(Token = "0x4001E2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		public UnityAction CrouchEvent;

		[Token(Token = "0x4001E2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		public UnityAction StandUpEvent;

		[Token(Token = "0x4001E2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		private CapsuleCollider charactarCollider;

		[Token(Token = "0x4001E2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		private CharacterController controller;

		[Token(Token = "0x4001E2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		private Vector3 playerVelocity;

		[Token(Token = "0x4001E2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
		private Vector3 oldPlayerVelocity;

		[Token(Token = "0x4001E30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		private Vector3 oldHandHeadBobPos;

		[Token(Token = "0x4001E31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14C")]
		private Vector3 oldCameraHeadBobPos;

		[Token(Token = "0x4001E32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		private Vector3 controlCameraPosition;

		[Token(Token = "0x4001E33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x164")]
		private float standStateBlend;

		[Token(Token = "0x4001E34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		private float runTime;

		[Token(Token = "0x4001E35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x16C")]
		private float standChangeTime;

		[Token(Token = "0x4001E36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		private float defaultHandsHeadbobWeight;

		[Token(Token = "0x4001E37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x174")]
		private bool freezeControl;

		[Token(Token = "0x4001E38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x175")]
		private bool isRunning;

		[Token(Token = "0x4001E39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x176")]
		private bool oldIsGrounded;

		[Token(Token = "0x4001E3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x177")]
		private bool isCrouching;

		[Token(Token = "0x4001E3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		private bool isPaused;

		[Token(Token = "0x170001AF")]
		public Vector3 PlayerVelocity
		{
			[Token(Token = "0x6002056")]
			[Address(RVA = "0xE17454", Offset = "0xE17454", VA = "0xE17454")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x170001B0")]
		public bool IsRunning
		{
			[Token(Token = "0x6002057")]
			[Address(RVA = "0xE17470", Offset = "0xE17470", VA = "0xE17470")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001B1")]
		public bool IsCrouching
		{
			[Token(Token = "0x6002058")]
			[Address(RVA = "0xE17478", Offset = "0xE17478", VA = "0xE17478")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001B2")]
		public bool IsGrounded
		{
			[Token(Token = "0x6002059")]
			[Address(RVA = "0xE17480", Offset = "0xE17480", VA = "0xE17480")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001B3")]
		public float DefaultHandsHeadbobWeight
		{
			[Token(Token = "0x600205A")]
			[Address(RVA = "0xE1749C", Offset = "0xE1749C", VA = "0xE1749C")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170001B4")]
		public bool IsFreezed
		{
			[Token(Token = "0x600205B")]
			[Address(RVA = "0xE174A4", Offset = "0xE174A4", VA = "0xE174A4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x600205C")]
		[Address(RVA = "0xE174AC", Offset = "0xE174AC", VA = "0xE174AC")]
		private void Start()
		{
		}

		[Token(Token = "0x600205D")]
		[Address(RVA = "0xE1765C", Offset = "0xE1765C", VA = "0xE1765C")]
		public void UpdateDefaultDeath()
		{
		}

		[Token(Token = "0x600205E")]
		[Address(RVA = "0xE17600", Offset = "0xE17600", VA = "0xE17600")]
		private void PausePlayer()
		{
		}

		[Token(Token = "0x600205F")]
		[Address(RVA = "0xE177A8", Offset = "0xE177A8", VA = "0xE177A8")]
		private void UnpausePlayer()
		{
		}

		[Token(Token = "0x6002060")]
		[Address(RVA = "0xE177F8", Offset = "0xE177F8", VA = "0xE177F8")]
		private void Update()
		{
		}

		[Token(Token = "0x6002061")]
		[Address(RVA = "0xE17838", Offset = "0xE17838", VA = "0xE17838")]
		private void UpdatePlayer()
		{
		}

		[Token(Token = "0x6002062")]
		[Address(RVA = "0xE17734", Offset = "0xE17734", VA = "0xE17734")]
		public void Freeze(bool value)
		{
		}

		[Token(Token = "0x6002063")]
		[Address(RVA = "0xE179A0", Offset = "0xE179A0", VA = "0xE179A0")]
		private void move()
		{
		}

		[Token(Token = "0x6002064")]
		[Address(RVA = "0xE183AC", Offset = "0xE183AC", VA = "0xE183AC")]
		private void standStateChange()
		{
		}

		[Token(Token = "0x6002065")]
		[Address(RVA = "0xE18598", Offset = "0xE18598", VA = "0xE18598")]
		public void SetSensivityMultiplier(float multiplier)
		{
		}

		[Token(Token = "0x6002066")]
		[Address(RVA = "0xE1817C", Offset = "0xE1817C", VA = "0xE1817C")]
		private void applyGravity()
		{
		}

		[Token(Token = "0x6002067")]
		[Address(RVA = "0xE185B4", Offset = "0xE185B4", VA = "0xE185B4")]
		private void OnCollisionStay(Collision collision)
		{
		}

		[Token(Token = "0x6002068")]
		[Address(RVA = "0xE18768", Offset = "0xE18768", VA = "0xE18768")]
		public PlayerController()
		{
		}
	}
	[Token(Token = "0x200054A")]
	public class PlayerFreezeChangedEvent : UnityEvent<bool>
	{
		[Token(Token = "0x6002073")]
		[Address(RVA = "0xE188E4", Offset = "0xE188E4", VA = "0xE188E4")]
		public PlayerFreezeChangedEvent()
		{
		}
	}
	[Token(Token = "0x200054B")]
	public class ShotgunWeapon : Weapon
	{
		[Token(Token = "0x4001E54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public int Bullets;

		[Token(Token = "0x4001E55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public float RandomAngle;

		[Token(Token = "0x4001E56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Dictionary<IHittable, List<DamageData>> damages;

		[Token(Token = "0x6002074")]
		[Address(RVA = "0xE18C80", Offset = "0xE18C80", VA = "0xE18C80", Slot = "5")]
		protected override void Shot()
		{
		}

		[Token(Token = "0x6002075")]
		[Address(RVA = "0xE19474", Offset = "0xE19474", VA = "0xE19474")]
		public ShotgunWeapon()
		{
		}
	}
	[Token(Token = "0x200054C")]
	public class Weapon : MonoBehaviour
	{
		[Token(Token = "0x4001E57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Camera playerCamera;

		[Token(Token = "0x4001E58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LayerMask ShotMask;

		[Token(Token = "0x4001E59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float Damage;

		[Token(Token = "0x4001E5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float DefaultFov;

		[Token(Token = "0x4001E5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float AimFov;

		[Token(Token = "0x4001E5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool AutomaticFire;

		[Token(Token = "0x4001E5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float AutomaticFireRate;

		[Token(Token = "0x4001E5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		protected Animator handsAnimator;

		[Token(Token = "0x4001E5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool isAiming;

		[Token(Token = "0x4001E60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private float currentFov;

		[Token(Token = "0x4001E61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float lastFireTime;

		[Token(Token = "0x170001B6")]
		private float fireInterval
		{
			[Token(Token = "0x6002076")]
			[Address(RVA = "0xE19524", Offset = "0xE19524", VA = "0xE19524")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170001B7")]
		public float CurrentFov
		{
			[Token(Token = "0x6002077")]
			[Address(RVA = "0xE19534", Offset = "0xE19534", VA = "0xE19534")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6002078")]
		[Address(RVA = "0xE1953C", Offset = "0xE1953C", VA = "0xE1953C")]
		private void Start()
		{
		}

		[Token(Token = "0x6002079")]
		[Address(RVA = "0xE195A8", Offset = "0xE195A8", VA = "0xE195A8")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x600207A")]
		[Address(RVA = "0xE195B4", Offset = "0xE195B4", VA = "0xE195B4")]
		private void Update()
		{
		}

		[Token(Token = "0x600207B")]
		[Address(RVA = "0xE19720", Offset = "0xE19720", VA = "0xE19720", Slot = "4")]
		protected virtual void EndFire()
		{
		}

		[Token(Token = "0x600207C")]
		[Address(RVA = "0xE19724", Offset = "0xE19724", VA = "0xE19724", Slot = "5")]
		protected virtual void Shot()
		{
		}

		[Token(Token = "0x600207D")]
		[Address(RVA = "0xE192F4", Offset = "0xE192F4", VA = "0xE192F4")]
		protected void DebugShot(Ray r, RaycastHit hitInfo)
		{
		}

		[Token(Token = "0x600207E")]
		[Address(RVA = "0xE199D8", Offset = "0xE199D8", VA = "0xE199D8")]
		public Vector3 GetLookDirection()
		{
			return default(Vector3);
		}

		[Token(Token = "0x600207F")]
		[Address(RVA = "0xE16D18", Offset = "0xE16D18", VA = "0xE16D18")]
		public Weapon()
		{
		}
	}
}
namespace Knife.RealBlood.LiquidSurface
{
	[Token(Token = "0x200054D")]
	public class LiquidSurface : MonoBehaviour
	{
		[Token(Token = "0x4001E62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Header("Rendering")]
		[SerializeField]
		private RenderTextureCreator renderTextureCreator;

		[Token(Token = "0x4001E63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private RenderingCameraCreator renderingCameraCreator;

		[Token(Token = "0x4001E64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private float height;

		[Token(Token = "0x4001E65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[Header("Camera placing")]
		[SerializeField]
		private TransformPlacer cameraPlacer;

		[Token(Token = "0x4001E66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[Header("Particles")]
		[SerializeField]
		private SimpleGameObjectPool particlesPool;

		[Token(Token = "0x4001E67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[Header("Shading")]
		[SerializeField]
		private TextureApplier textureApplier;

		[Token(Token = "0x4001E68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private bool isInitialized;

		[Token(Token = "0x6002080")]
		[Address(RVA = "0xE19A00", Offset = "0xE19A00", VA = "0xE19A00")]
		public void SpawnParticle(Vector3 position)
		{
		}

		[Token(Token = "0x6002081")]
		[Address(RVA = "0xE19B98", Offset = "0xE19B98", VA = "0xE19B98")]
		private void Start()
		{
		}

		[Token(Token = "0x6002082")]
		[Address(RVA = "0xE19C4C", Offset = "0xE19C4C", VA = "0xE19C4C")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6002083")]
		[Address(RVA = "0xE19B9C", Offset = "0xE19B9C", VA = "0xE19B9C")]
		private void Initialize()
		{
		}

		[Token(Token = "0x6002084")]
		[Address(RVA = "0xE1A1F8", Offset = "0xE1A1F8", VA = "0xE1A1F8")]
		private void OnDrawGizmos()
		{
		}

		[Token(Token = "0x6002085")]
		[Address(RVA = "0xE19C54", Offset = "0xE19C54", VA = "0xE19C54")]
		private void DestroyResources()
		{
		}

		[Token(Token = "0x6002086")]
		[Address(RVA = "0xE1A454", Offset = "0xE1A454", VA = "0xE1A454")]
		public LiquidSurface()
		{
		}
	}
	[Token(Token = "0x200054E")]
	[RequireComponent(typeof(LiquidSurface))]
	public class LiquidSurfaceParticleFromDamage : MonoBehaviour, IHittable
	{
		[Token(Token = "0x4001E69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private LiquidSurface surface;

		[Token(Token = "0x6002087")]
		[Address(RVA = "0xE1A718", Offset = "0xE1A718", VA = "0xE1A718")]
		private void Start()
		{
		}

		[Token(Token = "0x6002088")]
		[Address(RVA = "0xE1A770", Offset = "0xE1A770", VA = "0xE1A770", Slot = "4")]
		public void TakeDamage(DamageData[] damage)
		{
		}

		[Token(Token = "0x6002089")]
		[Address(RVA = "0xE1A7E8", Offset = "0xE1A7E8", VA = "0xE1A7E8")]
		public LiquidSurfaceParticleFromDamage()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200054F")]
	public class RenderingCameraCreator
	{
		[Token(Token = "0x4001E6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		private Vector2 size;

		[Token(Token = "0x4001E6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private LayerMask renderingLayerMask;

		[Token(Token = "0x4001E6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private CameraClearFlags clearFlags;

		[Token(Token = "0x4001E6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Color backgroundColor;

		[Token(Token = "0x4001E6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private float nearPlane;

		[Token(Token = "0x4001E6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[SerializeField]
		private float farPlane;

		[Token(Token = "0x170001B8")]
		public Camera Camera
		{
			[Token(Token = "0x600208A")]
			[Address(RVA = "0xE1A7F0", Offset = "0xE1A7F0", VA = "0xE1A7F0")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x600208B")]
			[Address(RVA = "0xE1A7F8", Offset = "0xE1A7F8", VA = "0xE1A7F8")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x170001B9")]
		public Vector2 Size
		{
			[Token(Token = "0x600208C")]
			[Address(RVA = "0xE1A800", Offset = "0xE1A800", VA = "0xE1A800")]
			get
			{
				return default(Vector2);
			}
			[Token(Token = "0x600208D")]
			[Address(RVA = "0xE1A808", Offset = "0xE1A808", VA = "0xE1A808")]
			private set
			{
			}
		}

		[Token(Token = "0x600208E")]
		[Address(RVA = "0xE19CE0", Offset = "0xE19CE0", VA = "0xE19CE0")]
		public void Create()
		{
		}

		[Token(Token = "0x600208F")]
		[Address(RVA = "0xE1A628", Offset = "0xE1A628", VA = "0xE1A628")]
		public RenderingCameraCreator()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000550")]
	public class RenderTextureCreator
	{
		[Token(Token = "0x2000551")]
		private enum Resolution
		{
			[Token(Token = "0x4001E75")]
			Low = 0x100,
			[Token(Token = "0x4001E76")]
			Medium = 0x200,
			[Token(Token = "0x4001E77")]
			High = 0x400,
			[Token(Token = "0x4001E78")]
			VeryHigh = 0x800,
			[Token(Token = "0x4001E79")]
			Ultra = 0x1000
		}

		[Token(Token = "0x4001E71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		private Resolution maskResolution;

		[Token(Token = "0x4001E72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[SerializeField]
		private RenderTextureFormat maskFormat;

		[Token(Token = "0x170001BA")]
		public RenderTexture RenderTexture
		{
			[Token(Token = "0x6002090")]
			[Address(RVA = "0xE1A810", Offset = "0xE1A810", VA = "0xE1A810")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6002091")]
			[Address(RVA = "0xE1A818", Offset = "0xE1A818", VA = "0xE1A818")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x6002092")]
		[Address(RVA = "0xE19C5C", Offset = "0xE19C5C", VA = "0xE19C5C")]
		public void Create()
		{
		}

		[Token(Token = "0x6002093")]
		[Address(RVA = "0xE1A820", Offset = "0xE1A820", VA = "0xE1A820")]
		public void Destroy()
		{
		}

		[Token(Token = "0x6002094")]
		[Address(RVA = "0xE1A618", Offset = "0xE1A618", VA = "0xE1A618")]
		public RenderTextureCreator()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000552")]
	public class SimpleGameObjectPool
	{
		[Token(Token = "0x2000553")]
		[CompilerGenerated]
		private sealed class <DestroyWithDelay>d__6 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001E7D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001E7E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001E7F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float delay;

			[Token(Token = "0x4001E80")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public GameObject particle;

			[Token(Token = "0x4001E81")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public SimpleGameObjectPool <>4__this;

			[Token(Token = "0x170001BB")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600209D")]
				[Address(RVA = "0xE1AA7C", Offset = "0xE1AA7C", VA = "0xE1AA7C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001BC")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600209F")]
				[Address(RVA = "0xE1AAC4", Offset = "0xE1AAC4", VA = "0xE1AAC4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600209A")]
			[Address(RVA = "0xE1A920", Offset = "0xE1A920", VA = "0xE1A920")]
			[DebuggerHidden]
			public <DestroyWithDelay>d__6(int <>1__state)
			{
			}

			[Token(Token = "0x600209B")]
			[Address(RVA = "0xE1A948", Offset = "0xE1A948", VA = "0xE1A948", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600209C")]
			[Address(RVA = "0xE1A94C", Offset = "0xE1A94C", VA = "0xE1A94C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600209E")]
			[Address(RVA = "0xE1AA84", Offset = "0xE1AA84", VA = "0xE1AA84", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001E7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		private int poolSize;

		[Token(Token = "0x4001E7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject template;

		[Token(Token = "0x4001E7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Queue<GameObject> pool;

		[Token(Token = "0x6002095")]
		[Address(RVA = "0xE1A0EC", Offset = "0xE1A0EC", VA = "0xE1A0EC")]
		public void Create()
		{
		}

		[Token(Token = "0x6002096")]
		[Address(RVA = "0xE19B1C", Offset = "0xE19B1C", VA = "0xE19B1C")]
		public GameObject GetObject()
		{
			return null;
		}

		[Token(Token = "0x6002097")]
		[Address(RVA = "0xE19B6C", Offset = "0xE19B6C", VA = "0xE19B6C")]
		public void Destroy(MonoBehaviour coroutineRunner, GameObject particle, float delay)
		{
		}

		[Token(Token = "0x6002098")]
		[Address(RVA = "0xE1A880", Offset = "0xE1A880", VA = "0xE1A880")]
		[IteratorStateMachine(typeof(<DestroyWithDelay>d__6))]
		public IEnumerator DestroyWithDelay(GameObject particle, float delay)
		{
			return null;
		}

		[Token(Token = "0x6002099")]
		[Address(RVA = "0xE1A680", Offset = "0xE1A680", VA = "0xE1A680")]
		public SimpleGameObjectPool()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000554")]
	public class TextureApplier
	{
		[Serializable]
		[Token(Token = "0x2000555")]
		private class PropertyGroupApplier
		{
			[Token(Token = "0x4001E83")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[SerializeField]
			private string propertyName;

			[Token(Token = "0x4001E84")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[SerializeField]
			private Renderer[] targetRenderers;

			[Token(Token = "0x60020A2")]
			[Address(RVA = "0xE1AACC", Offset = "0xE1AACC", VA = "0xE1AACC")]
			public void Apply(Texture texture)
			{
			}

			[Token(Token = "0x60020A3")]
			[Address(RVA = "0xE1ABC4", Offset = "0xE1ABC4", VA = "0xE1ABC4")]
			public PropertyGroupApplier()
			{
			}
		}

		[Token(Token = "0x4001E82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		private PropertyGroupApplier[] appliers;

		[Token(Token = "0x60020A0")]
		[Address(RVA = "0xE1A088", Offset = "0xE1A088", VA = "0xE1A088")]
		public void Apply(Texture texture)
		{
		}

		[Token(Token = "0x60020A1")]
		[Address(RVA = "0xE1A710", Offset = "0xE1A710", VA = "0xE1A710")]
		public TextureApplier()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000556")]
	public class TransformPlacer
	{
		[Token(Token = "0x4001E85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		private Transform referenceTransform;

		[Token(Token = "0x4001E86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Vector3 targetForwardAxis;

		[Token(Token = "0x4001E87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private Vector3 targetUpAxis;

		[Token(Token = "0x4001E88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Vector3 heightOffsetAxis;

		[Token(Token = "0x4001E89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[SerializeField]
		private float height;

		[Token(Token = "0x4001E8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private float localUpAxisRotation;

		[Token(Token = "0x4001E8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[SerializeField]
		private bool setParent;

		[Token(Token = "0x60020A4")]
		[Address(RVA = "0xE19F24", Offset = "0xE19F24", VA = "0xE19F24")]
		public void Place(Transform transform)
		{
		}

		[Token(Token = "0x60020A5")]
		[Address(RVA = "0xE1AC1C", Offset = "0xE1AC1C", VA = "0xE1AC1C")]
		public Vector2 GetOffset(Transform transform)
		{
			return default(Vector2);
		}

		[Token(Token = "0x60020A6")]
		[Address(RVA = "0xE1A21C", Offset = "0xE1A21C", VA = "0xE1A21C")]
		public void DrawGizmos(Vector2 size)
		{
		}

		[Token(Token = "0x60020A7")]
		[Address(RVA = "0xE1A650", Offset = "0xE1A650", VA = "0xE1A650")]
		public TransformPlacer()
		{
		}
	}
}
namespace Knife.RealBlood.Decals
{
	[Token(Token = "0x2000557")]
	public class CharacterDamagePainter : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000558")]
		private class BrushDamagePair
		{
			[Token(Token = "0x4001E92")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[SerializeField]
			private float size;

			[Token(Token = "0x4001E93")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[SerializeField]
			private Texture2D brush;

			[Token(Token = "0x170001BD")]
			public float Size
			{
				[Token(Token = "0x60020AD")]
				[Address(RVA = "0xE1B534", Offset = "0xE1B534", VA = "0xE1B534")]
				get
				{
					return default(float);
				}
				[Token(Token = "0x60020AE")]
				[Address(RVA = "0xE1B53C", Offset = "0xE1B53C", VA = "0xE1B53C")]
				private set
				{
				}
			}

			[Token(Token = "0x170001BE")]
			public Texture2D Brush
			{
				[Token(Token = "0x60020AF")]
				[Address(RVA = "0xE1B544", Offset = "0xE1B544", VA = "0xE1B544")]
				get
				{
					return null;
				}
				[Token(Token = "0x60020B0")]
				[Address(RVA = "0xE1B54C", Offset = "0xE1B54C", VA = "0xE1B54C")]
				private set
				{
				}
			}

			[Token(Token = "0x60020B1")]
			[Address(RVA = "0xE1B554", Offset = "0xE1B554", VA = "0xE1B554")]
			public BrushDamagePair()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000559")]
		public class ProjectingRenderer
		{
			[Token(Token = "0x4001E94")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[SerializeField]
			private Renderer targetRenderer;

			[Token(Token = "0x4001E95")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[SerializeField]
			private Renderer[] setuppingRenderers;

			[Token(Token = "0x170001BF")]
			public Renderer TargetRenderer
			{
				[Token(Token = "0x60020B3")]
				[Address(RVA = "0xE1B5A8", Offset = "0xE1B5A8", VA = "0xE1B5A8")]
				get
				{
					return null;
				}
				[Token(Token = "0x60020B4")]
				[Address(RVA = "0xE1B5B0", Offset = "0xE1B5B0", VA = "0xE1B5B0")]
				private set
				{
				}
			}

			[Token(Token = "0x170001C0")]
			public Renderer[] SetuppingRenderers
			{
				[Token(Token = "0x60020B5")]
				[Address(RVA = "0xE1B5B8", Offset = "0xE1B5B8", VA = "0xE1B5B8")]
				get
				{
					return null;
				}
				[Token(Token = "0x60020B6")]
				[Address(RVA = "0xE1B5C0", Offset = "0xE1B5C0", VA = "0xE1B5C0")]
				private set
				{
				}
			}

			[Token(Token = "0x60020B2")]
			[Address(RVA = "0xE1B564", Offset = "0xE1B564", VA = "0xE1B564")]
			public ProjectingRenderer(Renderer targetRenderer, Renderer[] setuppingRenderers)
			{
			}

			[Token(Token = "0x60020B7")]
			[Address(RVA = "0xE1AE44", Offset = "0xE1AE44", VA = "0xE1AE44")]
			public void SetupTexture(RenderTexture texture, string texturePropertyName)
			{
			}
		}

		[Token(Token = "0x4001E8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private ProjectingRenderer[] projectingRenderers;

		[Token(Token = "0x4001E8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private string texturePropertyName;

		[Token(Token = "0x4001E8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private int textureResolution;

		[Token(Token = "0x4001E8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		private float zDepth;

		[Token(Token = "0x4001E90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private BrushDamagePair[] brushes;

		[Token(Token = "0x4001E91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private RenderTexture[] renderTextures;

		[Token(Token = "0x60020A8")]
		[Address(RVA = "0xE1AC54", Offset = "0xE1AC54", VA = "0xE1AC54")]
		private void Awake()
		{
		}

		[Token(Token = "0x60020A9")]
		[Address(RVA = "0xE1AC58", Offset = "0xE1AC58", VA = "0xE1AC58")]
		private void InitAndSetResources()
		{
		}

		[Token(Token = "0x60020AA")]
		[Address(RVA = "0xE11B28", Offset = "0xE11B28", VA = "0xE11B28")]
		public void CleanDamage()
		{
		}

		[Token(Token = "0x60020AB")]
		[Address(RVA = "0xE11EE0", Offset = "0xE11EE0", VA = "0xE11EE0")]
		public void Paint(Vector3 point, Vector3 normal, int brushID)
		{
		}

		[Token(Token = "0x60020AC")]
		[Address(RVA = "0xE1B498", Offset = "0xE1B498", VA = "0xE1B498")]
		public CharacterDamagePainter()
		{
		}
	}
	[Token(Token = "0x200055A")]
	public class DecalsProjector : MonoBehaviour
	{
		[Token(Token = "0x4001E96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Camera decalsCamera;

		[Token(Token = "0x4001E97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static DecalsProjector instance;

		[Token(Token = "0x4001E98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private CommandBuffer renderingBuffer;

		[Token(Token = "0x4001E99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Material projectionMaterial;

		[Token(Token = "0x4001E9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Matrix4x4 projectionMatrix;

		[Token(Token = "0x4001E9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Matrix4x4 worldToCameraMatrix;

		[Token(Token = "0x170001C1")]
		public static DecalsProjector Instance
		{
			[Token(Token = "0x60020B8")]
			[Address(RVA = "0xE1AF78", Offset = "0xE1AF78", VA = "0xE1AF78")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60020B9")]
		[Address(RVA = "0xE1BB30", Offset = "0xE1BB30", VA = "0xE1BB30")]
		private void Start()
		{
		}

		[Token(Token = "0x60020BA")]
		[Address(RVA = "0xE1B5C8", Offset = "0xE1B5C8", VA = "0xE1B5C8")]
		public void Init()
		{
		}

		[Token(Token = "0x60020BB")]
		[Address(RVA = "0xE1BB34", Offset = "0xE1BB34", VA = "0xE1BB34")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60020BC")]
		[Address(RVA = "0xE1B064", Offset = "0xE1B064", VA = "0xE1B064")]
		public void Project(Vector3 position, Vector3 normal, Renderer renderer, Texture input, RenderTexture target, float size = 0.5f, float zDepth = 1f)
		{
		}

		[Token(Token = "0x60020BD")]
		[Address(RVA = "0xE1BBF0", Offset = "0xE1BBF0", VA = "0xE1BBF0")]
		public DecalsProjector()
		{
		}
	}
}
namespace RayFire
{
	[Serializable]
	[Token(Token = "0x200055B")]
	public class RFFace
	{
		[Token(Token = "0x4001E9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int id;

		[Token(Token = "0x4001E9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float area;

		[Token(Token = "0x4001E9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector3 pos;

		[Token(Token = "0x4001E9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public Vector3 normal;

		[Token(Token = "0x4001EA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public List<int> tris;

		[Token(Token = "0x60020BE")]
		[Address(RVA = "0xE1BBF8", Offset = "0xE1BBF8", VA = "0xE1BBF8")]
		public RFFace(int Id, float Area, Vector3 Normal)
		{
		}

		[Token(Token = "0x60020BF")]
		[Address(RVA = "0xE1BCBC", Offset = "0xE1BCBC", VA = "0xE1BCBC")]
		private List<RFFace> GetFaces(List<RFTriangle> Triangles)
		{
			return null;
		}
	}
	[Serializable]
	[Token(Token = "0x200055C")]
	public class RFTriangle
	{
		[Token(Token = "0x4001EA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int id;

		[Token(Token = "0x4001EA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float area;

		[Token(Token = "0x4001EA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector3 normal;

		[Token(Token = "0x4001EA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public Vector3 pos;

		[Token(Token = "0x4001EA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public List<int> neibs;

		[Token(Token = "0x60020C0")]
		[Address(RVA = "0xE1C584", Offset = "0xE1C584", VA = "0xE1C584")]
		public RFTriangle(int Id, float Area, Vector3 Normal, Vector3 Pos)
		{
		}

		[Token(Token = "0x60020C1")]
		[Address(RVA = "0xE1C668", Offset = "0xE1C668", VA = "0xE1C668")]
		public static void SetTriangles(RFShard shard, MeshFilter mf)
		{
		}

		[Token(Token = "0x60020C2")]
		[Address(RVA = "0xE1CA64", Offset = "0xE1CA64", VA = "0xE1CA64")]
		public static void Clear(RFShard shard)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200055D")]
	public class RFManDemolition
	{
		[Token(Token = "0x200055E")]
		public enum FragmentParentType
		{
			[Token(Token = "0x4001EAC")]
			Manager,
			[Token(Token = "0x4001EAD")]
			Parent
		}

		[Token(Token = "0x4001EA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[Header("  Fragments")]
		[Tooltip("Defines parent for all new fragments.")]
		[Space(2f)]
		public FragmentParentType parent;

		[Token(Token = "0x4001EA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[Tooltip("Maximum amount of allowed fragments. Object won't be demolished if existing amount of fragments in scene higher that this value. Fading allows to decrease amount of fragments in scene.")]
		[Space(2f)]
		public int maximumAmount;

		[Token(Token = "0x4001EA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Tooltip("Amount of attempts to fragment mesh with topology issues. After object will fail to be fragments defined amount of times it will be marked as Bad Mesh and it won't be possible to fragment it again.")]
		[Range(1f, 10f)]
		[Space(2f)]
		public int badMeshTry;

		[Token(Token = "0x4001EA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[Range(0f, 1f)]
		[Header("  Shadow Casting")]
		[Space(2f)]
		[Tooltip("Disable Shadow Casting for all objects with size less than this value.")]
		public float sizeThreshold;

		[Token(Token = "0x4001EAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[HideInInspector]
		public int currentAmount;

		[Token(Token = "0x60020C3")]
		[Address(RVA = "0xE1CADC", Offset = "0xE1CADC", VA = "0xE1CADC")]
		public RFManDemolition()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200055F")]
	public class RFMaterial
	{
		[Token(Token = "0x4001EAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private string name;

		[Token(Token = "0x4001EAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Tooltip("Makes material destructible.")]
		[Space(2f)]
		[Header("  Demolition")]
		public bool destructible;

		[Token(Token = "0x4001EB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[Tooltip("Global material solidity multiplier which used at collision to calculate if object should be demolished or not.")]
		[Range(0.01f, 100f)]
		[Space(2f)]
		public int solidity;

		[Token(Token = "0x4001EB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[Header("  Rigid Body")]
		[Space(2f)]
		[Tooltip("Object mass depends on picked material density and collider volume.")]
		[Range(0.01f, 100f)]
		public float density;

		[Token(Token = "0x4001EB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[Range(0f, 1f)]
		[Space(2f)]
		[Tooltip("Allows to decrease position velocity over time.")]
		public float drag;

		[Token(Token = "0x4001EB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[Range(0f, 1f)]
		[Tooltip("Allows to decrease rotation velocity over time.")]
		[Space(2f)]
		public float angularDrag;

		[Token(Token = "0x4001EB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[Header("  Physic Material")]
		[Space(2f)]
		[Tooltip("Physic material which will be used for all objects with this material.If Material is not define then it will be created and defined here at Start using following Frictions and Bounciness properties.")]
		public PhysicMaterial material;

		[Token(Token = "0x4001EB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[Range(0.01f, 1f)]
		[Space(2f)]
		public float dynamicFriction;

		[Token(Token = "0x4001EB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[Range(0.01f, 1f)]
		[Space(2f)]
		public float staticFriction;

		[Token(Token = "0x4001EB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[Space(2f)]
		[Range(0.01f, 1f)]
		public float bounciness;

		[Token(Token = "0x170001C2")]
		public PhysicMaterial Material
		{
			[Token(Token = "0x60020C5")]
			[Address(RVA = "0xE1CB88", Offset = "0xE1CB88", VA = "0xE1CB88")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60020C4")]
		[Address(RVA = "0xE1CAFC", Offset = "0xE1CAFC", VA = "0xE1CAFC")]
		public RFMaterial(string Name, float Density, float Drag, float AngularDrag, int Solidity, bool Destructible, float DynFriction, float StFriction, float Bounce)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000560")]
	public class RFMaterialPresets
	{
		[Token(Token = "0x4001EB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public RFMaterial heavyMetal;

		[Token(Token = "0x4001EB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public RFMaterial lightMetal;

		[Token(Token = "0x4001EBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public RFMaterial denseRock;

		[Token(Token = "0x4001EBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public RFMaterial porousRock;

		[Token(Token = "0x4001EBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public RFMaterial concrete;

		[Token(Token = "0x4001EBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public RFMaterial brick;

		[Token(Token = "0x4001EBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public RFMaterial glass;

		[Token(Token = "0x4001EBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public RFMaterial rubber;

		[Token(Token = "0x4001EC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public RFMaterial ice;

		[Token(Token = "0x4001EC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public RFMaterial wood;

		[Token(Token = "0x60020C6")]
		[Address(RVA = "0xE1CC38", Offset = "0xE1CC38", VA = "0xE1CC38")]
		public RFMaterialPresets()
		{
		}

		[Token(Token = "0x60020C7")]
		[Address(RVA = "0xE1D1E8", Offset = "0xE1D1E8", VA = "0xE1D1E8")]
		public void SetMaterials()
		{
		}

		[Token(Token = "0x60020C8")]
		[Address(RVA = "0xE1D554", Offset = "0xE1D554", VA = "0xE1D554")]
		public float Density(MaterialType materialType)
		{
			return default(float);
		}

		[Token(Token = "0x60020C9")]
		[Address(RVA = "0xE1D604", Offset = "0xE1D604", VA = "0xE1D604")]
		public float Drag(MaterialType materialType)
		{
			return default(float);
		}

		[Token(Token = "0x60020CA")]
		[Address(RVA = "0xE1D6B4", Offset = "0xE1D6B4", VA = "0xE1D6B4")]
		public float AngularDrag(MaterialType materialType)
		{
			return default(float);
		}

		[Token(Token = "0x60020CB")]
		[Address(RVA = "0xE1D768", Offset = "0xE1D768", VA = "0xE1D768")]
		public int Solidity(MaterialType materialType)
		{
			return default(int);
		}

		[Token(Token = "0x60020CC")]
		[Address(RVA = "0xE1D818", Offset = "0xE1D818", VA = "0xE1D818")]
		public bool Destructible(MaterialType materialType)
		{
			return default(bool);
		}

		[Token(Token = "0x60020CD")]
		[Address(RVA = "0xE1D8D0", Offset = "0xE1D8D0", VA = "0xE1D8D0")]
		public static PhysicMaterial Material(MaterialType materialType)
		{
			return null;
		}
	}
	[Serializable]
	[Token(Token = "0x2000561")]
	public class RFPoolingParticles
	{
		[Token(Token = "0x2000562")]
		[CompilerGenerated]
		private sealed class <StartPoolingCor>d__12 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001EC8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001EC9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001ECA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public RFPoolingParticles <>4__this;

			[Token(Token = "0x4001ECB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Transform manTm;

			[Token(Token = "0x4001ECC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private WaitForSeconds <delay>5__2;

			[Token(Token = "0x170001C3")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60020D8")]
				[Address(RVA = "0xE1E27C", Offset = "0xE1E27C", VA = "0xE1E27C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001C4")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60020DA")]
				[Address(RVA = "0xE1E2C4", Offset = "0xE1E2C4", VA = "0xE1E2C4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60020D5")]
			[Address(RVA = "0xE1E054", Offset = "0xE1E054", VA = "0xE1E054")]
			[DebuggerHidden]
			public <StartPoolingCor>d__12(int <>1__state)
			{
			}

			[Token(Token = "0x60020D6")]
			[Address(RVA = "0xE1E07C", Offset = "0xE1E07C", VA = "0xE1E07C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60020D7")]
			[Address(RVA = "0xE1E080", Offset = "0xE1E080", VA = "0xE1E080", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60020D9")]
			[Address(RVA = "0xE1E284", Offset = "0xE1E284", VA = "0xE1E284", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001EC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool enable;

		[Token(Token = "0x4001EC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[Range(1f, 500f)]
		public int capacity;

		[Token(Token = "0x4001EC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[HideInInspector]
		public int poolRate;

		[Token(Token = "0x4001EC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[HideInInspector]
		public ParticleSystem poolInstance;

		[Token(Token = "0x4001EC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[HideInInspector]
		public Transform poolRoot;

		[Token(Token = "0x4001EC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[HideInInspector]
		public List<ParticleSystem> poolList;

		[Token(Token = "0x60020CE")]
		[Address(RVA = "0xE1DB48", Offset = "0xE1DB48", VA = "0xE1DB48")]
		public RFPoolingParticles()
		{
		}

		[Token(Token = "0x60020CF")]
		[Address(RVA = "0xE1DB64", Offset = "0xE1DB64", VA = "0xE1DB64")]
		public void CreatePoolRoot(Transform manTm)
		{
		}

		[Token(Token = "0x60020D0")]
		[Address(RVA = "0xE1DC80", Offset = "0xE1DC80", VA = "0xE1DC80")]
		public void CreateInstance(Transform manTm)
		{
		}

		[Token(Token = "0x60020D1")]
		[Address(RVA = "0xE1DDA0", Offset = "0xE1DDA0", VA = "0xE1DDA0")]
		public static ParticleSystem CreateParticleInstance()
		{
			return null;
		}

		[Token(Token = "0x60020D2")]
		[Address(RVA = "0xE1DE54", Offset = "0xE1DE54", VA = "0xE1DE54")]
		public ParticleSystem GetPoolObject(Transform manTm)
		{
			return null;
		}

		[Token(Token = "0x60020D3")]
		[Address(RVA = "0xE1DF10", Offset = "0xE1DF10", VA = "0xE1DF10")]
		private ParticleSystem CreatePoolObject(Transform manTm)
		{
			return null;
		}

		[Token(Token = "0x60020D4")]
		[Address(RVA = "0xE1DFC4", Offset = "0xE1DFC4", VA = "0xE1DFC4")]
		[IteratorStateMachine(typeof(<StartPoolingCor>d__12))]
		public IEnumerator StartPoolingCor(Transform manTm)
		{
			return null;
		}
	}
	[Serializable]
	[Token(Token = "0x2000563")]
	public class RFPoolingFragment
	{
		[Token(Token = "0x2000564")]
		[CompilerGenerated]
		private sealed class <StartPoolingCor>d__12 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001ED3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001ED4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001ED5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public RFPoolingFragment <>4__this;

			[Token(Token = "0x4001ED6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Transform manTm;

			[Token(Token = "0x4001ED7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private WaitForSeconds <delay>5__2;

			[Token(Token = "0x170001C5")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60020E5")]
				[Address(RVA = "0xE1FB2C", Offset = "0xE1FB2C", VA = "0xE1FB2C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001C6")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60020E7")]
				[Address(RVA = "0xE1FB74", Offset = "0xE1FB74", VA = "0xE1FB74", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60020E2")]
			[Address(RVA = "0xE1F900", Offset = "0xE1F900", VA = "0xE1F900")]
			[DebuggerHidden]
			public <StartPoolingCor>d__12(int <>1__state)
			{
			}

			[Token(Token = "0x60020E3")]
			[Address(RVA = "0xE1F928", Offset = "0xE1F928", VA = "0xE1F928", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60020E4")]
			[Address(RVA = "0xE1F92C", Offset = "0xE1F92C", VA = "0xE1F92C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60020E6")]
			[Address(RVA = "0xE1FB34", Offset = "0xE1FB34", VA = "0xE1FB34", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001ECD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool enable;

		[Token(Token = "0x4001ECE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[Range(1f, 500f)]
		public int capacity;

		[Token(Token = "0x4001ECF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[HideInInspector]
		public int poolRate;

		[Token(Token = "0x4001ED0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[HideInInspector]
		public RayfireRigid poolInstance;

		[Token(Token = "0x4001ED1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[HideInInspector]
		public Transform poolRoot;

		[Token(Token = "0x4001ED2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[HideInInspector]
		public List<RayfireRigid> poolList;

		[Token(Token = "0x60020DB")]
		[Address(RVA = "0xE1E2CC", Offset = "0xE1E2CC", VA = "0xE1E2CC")]
		public RFPoolingFragment()
		{
		}

		[Token(Token = "0x60020DC")]
		[Address(RVA = "0xE1E2E8", Offset = "0xE1E2E8", VA = "0xE1E2E8")]
		public void CreatePoolRoot(Transform manTm)
		{
		}

		[Token(Token = "0x60020DD")]
		[Address(RVA = "0xE1E404", Offset = "0xE1E404", VA = "0xE1E404")]
		public void CreateInstance(Transform manTm)
		{
		}

		[Token(Token = "0x60020DE")]
		[Address(RVA = "0xE1E510", Offset = "0xE1E510", VA = "0xE1E510")]
		public static RayfireRigid CreateRigidInstance()
		{
			return null;
		}

		[Token(Token = "0x60020DF")]
		[Address(RVA = "0xE1E700", Offset = "0xE1E700", VA = "0xE1E700")]
		public RayfireRigid GetPoolObject(Transform manTm)
		{
			return null;
		}

		[Token(Token = "0x60020E0")]
		[Address(RVA = "0xE1E7BC", Offset = "0xE1E7BC", VA = "0xE1E7BC")]
		private RayfireRigid CreatePoolObject(Transform manTm)
		{
			return null;
		}

		[Token(Token = "0x60020E1")]
		[Address(RVA = "0xE1E870", Offset = "0xE1E870", VA = "0xE1E870")]
		[IteratorStateMachine(typeof(<StartPoolingCor>d__12))]
		public IEnumerator StartPoolingCor(Transform manTm)
		{
			return null;
		}
	}
	[Token(Token = "0x2000565")]
	public class RFFrag
	{
		[Token(Token = "0x4001ED8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Mesh mesh;

		[Token(Token = "0x4001ED9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector3 pivot;

		[Token(Token = "0x4001EDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public RFDictionary subId;

		[Token(Token = "0x4001EDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public RayfireRigid fragment;

		[Token(Token = "0x60020E8")]
		[Address(RVA = "0xE1FB7C", Offset = "0xE1FB7C", VA = "0xE1FB7C")]
		public RFFrag()
		{
		}
	}
	[Token(Token = "0x2000566")]
	public class RFTri
	{
		[Token(Token = "0x4001EDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int meshId;

		[Token(Token = "0x4001EDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int subMeshId;

		[Token(Token = "0x4001EDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<int> ids;

		[Token(Token = "0x4001EDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<Vector3> vpos;

		[Token(Token = "0x4001EE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public List<Vector3> vnormal;

		[Token(Token = "0x4001EE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public List<Vector2> uvs;

		[Token(Token = "0x4001EE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public List<Vector4> tangents;

		[Token(Token = "0x4001EE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public List<RFTri> neibTris;

		[Token(Token = "0x60020E9")]
		[Address(RVA = "0xE1FB84", Offset = "0xE1FB84", VA = "0xE1FB84")]
		public RFTri()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000567")]
	public class RFDictionary
	{
		[Token(Token = "0x4001EE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public List<int> keys;

		[Token(Token = "0x4001EE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<int> values;

		[Token(Token = "0x60020EA")]
		[Address(RVA = "0xE1FD84", Offset = "0xE1FD84", VA = "0xE1FD84")]
		public RFDictionary(Dictionary<int, int> dictionary)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000568")]
	public class RFShatterCluster
	{
		[Token(Token = "0x4001EE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[Space(2f)]
		[Header("  Main")]
		public bool enable;

		[Token(Token = "0x4001EE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[Tooltip("Amount of clusters defined by random point cloud.")]
		[Range(2f, 200f)]
		public int count;

		[Token(Token = "0x4001EE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Tooltip("Random seed for clusters point cloud generator.")]
		[Range(0f, 100f)]
		public int seed;

		[Token(Token = "0x4001EE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[Tooltip("Smooth strength for cluster inner surface.")]
		[Range(0f, 1f)]
		public float relax;

		[Token(Token = "0x4001EEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[Tooltip("Amount of debris in last layer in percents relative to amount of fragments in cluster.")]
		[Space(2f)]
		[Range(0f, 100f)]
		[Header("  Debris")]
		public int amount;

		[Token(Token = "0x4001EEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[Tooltip("Amount of debris layers at cluster border.")]
		[Range(0f, 5f)]
		public int layers;

		[Token(Token = "0x4001EEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[Tooltip("Scale variation for inner debris.")]
		[Range(0.1f, 1f)]
		public float scale;

		[Token(Token = "0x4001EED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[Range(1f, 20f)]
		[Tooltip("Minimum amount of fragments in debris cluster.")]
		public int min;

		[Token(Token = "0x4001EEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[Tooltip("Maximum amount of fragments in debris cluster.")]
		[Range(1f, 20f)]
		public int max;

		[Token(Token = "0x60020EB")]
		[Address(RVA = "0xE1FED4", Offset = "0xE1FED4", VA = "0xE1FED4")]
		public RFShatterCluster()
		{
		}

		[Token(Token = "0x60020EC")]
		[Address(RVA = "0xE1FF1C", Offset = "0xE1FF1C", VA = "0xE1FF1C")]
		public RFShatterCluster(RFShatterCluster src)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000569")]
	public class RFVoronoi
	{
		[Token(Token = "0x4001EEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[Tooltip("Defines amount of points in point cloud, every point represent rough center of  fragment.")]
		public int amount;

		[Token(Token = "0x4001EF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[Space(1f)]
		[Tooltip("Defines offset of points in point cloud towards Center.")]
		[Range(0f, 1f)]
		public float centerBias;

		[Token(Token = "0x170001C7")]
		public int Amount
		{
			[Token(Token = "0x60020EF")]
			[Address(RVA = "0xE1FFCC", Offset = "0xE1FFCC", VA = "0xE1FFCC")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x60020ED")]
		[Address(RVA = "0xE1FF78", Offset = "0xE1FF78", VA = "0xE1FF78")]
		public RFVoronoi()
		{
		}

		[Token(Token = "0x60020EE")]
		[Address(RVA = "0xE1FF98", Offset = "0xE1FF98", VA = "0xE1FF98")]
		public RFVoronoi(RFVoronoi src)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200056A")]
	public class RFSplinters
	{
		[Token(Token = "0x4001EF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[Tooltip("Fragments will be stretched over defined axis.")]
		public AxisType axis;

		[Token(Token = "0x4001EF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[Space(1f)]
		[Tooltip("Defines amount of points in point cloud, every point represent rough center of  fragment.")]
		public int amount;

		[Token(Token = "0x4001EF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Space(1f)]
		[Tooltip("Defines sharpness of stretched fragments.")]
		[Range(0f, 1f)]
		public float strength;

		[Token(Token = "0x4001EF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[Range(0f, 1f)]
		[Tooltip("Defines offset of points in point cloud towards Center.")]
		[Space(1f)]
		public float centerBias;

		[Token(Token = "0x170001C8")]
		public int Amount
		{
			[Token(Token = "0x60020F2")]
			[Address(RVA = "0xE20054", Offset = "0xE20054", VA = "0xE20054")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x60020F0")]
		[Address(RVA = "0xE1FFF4", Offset = "0xE1FFF4", VA = "0xE1FFF4")]
		public RFSplinters()
		{
		}

		[Token(Token = "0x60020F1")]
		[Address(RVA = "0xE20020", Offset = "0xE20020", VA = "0xE20020")]
		public RFSplinters(RFSplinters src)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200056B")]
	public class RFRadial
	{
		[Token(Token = "0x4001EF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[Space(2f)]
		[Header("  Common")]
		public AxisType centerAxis;

		[Token(Token = "0x4001EF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[Range(0.01f, 30f)]
		[Space(1f)]
		public float radius;

		[Token(Token = "0x4001EF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Space(1f)]
		[Range(0f, 1f)]
		public float divergence;

		[Token(Token = "0x4001EF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[Space(1f)]
		public bool restrictToPlane;

		[Token(Token = "0x4001EF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[Space(2f)]
		[Range(3f, 60f)]
		[Header("  Rings")]
		public int rings;

		[Token(Token = "0x4001EFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[Range(0f, 100f)]
		[Space(1f)]
		public int focus;

		[Token(Token = "0x4001EFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[Range(0f, 100f)]
		[Space(1f)]
		public int focusStr;

		[Token(Token = "0x4001EFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[Range(0f, 100f)]
		[Space(1f)]
		public int randomRings;

		[Token(Token = "0x4001EFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[Header("  Rays")]
		[Space(2f)]
		[Range(3f, 60f)]
		public int rays;

		[Token(Token = "0x4001EFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[Space(1f)]
		[Range(0f, 100f)]
		public int randomRays;

		[Token(Token = "0x4001EFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[Space(1f)]
		[Range(-90f, 90f)]
		public int twist;

		[Token(Token = "0x60020F3")]
		[Address(RVA = "0xE2007C", Offset = "0xE2007C", VA = "0xE2007C")]
		public RFRadial()
		{
		}

		[Token(Token = "0x60020F4")]
		[Address(RVA = "0xE200C0", Offset = "0xE200C0", VA = "0xE200C0")]
		public RFRadial(RFRadial src)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200056C")]
	public class RFSlice
	{
		[Token(Token = "0x4001F00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public PlaneType plane;

		[Token(Token = "0x4001F01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Space(1f)]
		public List<Transform> sliceList;

		[Token(Token = "0x60020F5")]
		[Address(RVA = "0xE20124", Offset = "0xE20124", VA = "0xE20124")]
		public RFSlice()
		{
		}

		[Token(Token = "0x60020F6")]
		[Address(RVA = "0xE20144", Offset = "0xE20144", VA = "0xE20144")]
		public RFSlice(RFSlice src)
		{
		}

		[Token(Token = "0x60020F7")]
		[Address(RVA = "0xE20184", Offset = "0xE20184", VA = "0xE20184")]
		public Vector3 Axis(Transform tm)
		{
			return default(Vector3);
		}
	}
	[Serializable]
	[Token(Token = "0x200056D")]
	public class RFTets
	{
		[Token(Token = "0x200056E")]
		public enum TetType
		{
			[Token(Token = "0x4001F06")]
			Uniform,
			[Token(Token = "0x4001F07")]
			Curved
		}

		[Token(Token = "0x4001F02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[HideInInspector]
		public TetType lattice;

		[Token(Token = "0x4001F03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[Range(1f, 30f)]
		[Space(1f)]
		public int density;

		[Token(Token = "0x4001F04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Range(0f, 100f)]
		[Space(1f)]
		public int noise;

		[Token(Token = "0x60020F8")]
		[Address(RVA = "0xE201D0", Offset = "0xE201D0", VA = "0xE201D0")]
		public RFTets()
		{
		}

		[Token(Token = "0x60020F9")]
		[Address(RVA = "0xE201FC", Offset = "0xE201FC", VA = "0xE201FC")]
		public RFTets(RFTets src)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200056F")]
	public class RFCluster : IComparable<RFCluster>
	{
		[Token(Token = "0x4001F08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int id;

		[Token(Token = "0x4001F09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform tm;

		[Token(Token = "0x4001F0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[HideInInspector]
		public int depth;

		[Token(Token = "0x4001F0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[HideInInspector]
		public Vector3 pos;

		[Token(Token = "0x4001F0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[HideInInspector]
		public Quaternion rot;

		[Token(Token = "0x4001F0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[HideInInspector]
		public Bounds bound;

		[Token(Token = "0x4001F0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[HideInInspector]
		public bool demolishable;

		[Token(Token = "0x4001F0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[HideInInspector]
		public RayfireRigid rigid;

		[Token(Token = "0x4001F10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[HideInInspector]
		public List<RFShard> shards;

		[Token(Token = "0x4001F11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[HideInInspector]
		public float areaCollapse;

		[Token(Token = "0x4001F12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		[HideInInspector]
		public float minimumArea;

		[Token(Token = "0x4001F13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[HideInInspector]
		public float maximumArea;

		[Token(Token = "0x4001F14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		[HideInInspector]
		public float sizeCollapse;

		[Token(Token = "0x4001F15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[HideInInspector]
		public float minimumSize;

		[Token(Token = "0x4001F16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		[HideInInspector]
		public float maximumSize;

		[Token(Token = "0x4001F17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[HideInInspector]
		public int randomCollapse;

		[Token(Token = "0x4001F18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		[HideInInspector]
		public int randomSeed;

		[NonSerialized]
		[Token(Token = "0x4001F19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public bool initialized;

		[NonSerialized]
		[Token(Token = "0x4001F1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public RFCluster mainCluster;

		[NonSerialized]
		[Token(Token = "0x4001F1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public List<RFCluster> childClusters;

		[NonSerialized]
		[Token(Token = "0x4001F1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public List<RFCluster> neibClusters;

		[NonSerialized]
		[Token(Token = "0x4001F1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public List<float> neibArea;

		[NonSerialized]
		[Token(Token = "0x4001F1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public List<float> neibPerc;

		[Token(Token = "0x170001C9")]
		public bool HasChildClusters
		{
			[Token(Token = "0x600210D")]
			[Address(RVA = "0xE20A00", Offset = "0xE20A00", VA = "0xE20A00")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001CA")]
		public bool UnyieldingByShard
		{
			[Token(Token = "0x600210E")]
			[Address(RVA = "0xE233D8", Offset = "0xE233D8", VA = "0xE233D8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001CB")]
		public bool UnyieldingByRigid
		{
			[Token(Token = "0x600210F")]
			[Address(RVA = "0xE23470", Offset = "0xE23470", VA = "0xE23470")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60020FA")]
		[Address(RVA = "0xE20238", Offset = "0xE20238", VA = "0xE20238")]
		public RFCluster()
		{
		}

		[Token(Token = "0x60020FB")]
		[Address(RVA = "0xE2032C", Offset = "0xE2032C", VA = "0xE2032C")]
		public RFCluster(RFCluster source)
		{
		}

		[Token(Token = "0x60020FC")]
		[Address(RVA = "0xE20A54", Offset = "0xE20A54", VA = "0xE20A54", Slot = "4")]
		public int CompareTo(RFCluster otherCluster)
		{
			return default(int);
		}

		[Token(Token = "0x60020FD")]
		[Address(RVA = "0xE20B54", Offset = "0xE20B54", VA = "0xE20B54")]
		public static void InitCluster(RayfireRigid scr, RFCluster cluster)
		{
		}

		[Token(Token = "0x60020FE")]
		[Address(RVA = "0xE20DE4", Offset = "0xE20DE4", VA = "0xE20DE4")]
		private static void UnfoldNestedCluster(RayfireRigid scr, RFCluster cluster)
		{
		}

		[Token(Token = "0x60020FF")]
		[Address(RVA = "0xE21110", Offset = "0xE21110", VA = "0xE21110")]
		public static void ConnectivityUnyCheck(RFCluster cluster)
		{
		}

		[Token(Token = "0x6002100")]
		[Address(RVA = "0xE21AD8", Offset = "0xE21AD8", VA = "0xE21AD8")]
		public static void ConnectivityCheck(RFCluster cluster)
		{
		}

		[Token(Token = "0x6002101")]
		[Address(RVA = "0xE217DC", Offset = "0xE217DC", VA = "0xE217DC")]
		public static void NewClusterByShards(RFCluster mainCLuster, List<RFShard> shards)
		{
		}

		[Token(Token = "0x6002102")]
		[Address(RVA = "0xE22094", Offset = "0xE22094", VA = "0xE22094")]
		public void AddChildCluster(RFCluster cluster)
		{
		}

		[Token(Token = "0x6002103")]
		[Address(RVA = "0xE21998", Offset = "0xE21998", VA = "0xE21998")]
		public static void ReduceChildClusters(RFCluster cluster)
		{
		}

		[Token(Token = "0x6002104")]
		[Address(RVA = "0xE22284", Offset = "0xE22284", VA = "0xE22284")]
		public static Bounds GetChildrenBound(Transform tm)
		{
			return default(Bounds);
		}

		[Token(Token = "0x6002105")]
		[Address(RVA = "0xE229AC", Offset = "0xE229AC", VA = "0xE229AC")]
		public static Bounds GetClusterBound(RFCluster cluster)
		{
			return default(Bounds);
		}

		[Token(Token = "0x6002106")]
		[Address(RVA = "0xE22484", Offset = "0xE22484", VA = "0xE22484")]
		public static Bounds GetBoundsBound(List<Bounds> bounds)
		{
			return default(Bounds);
		}

		[Token(Token = "0x6002107")]
		[Address(RVA = "0xE22C40", Offset = "0xE22C40", VA = "0xE22C40")]
		public static Bounds GetShardsBound(List<RFShard> shards)
		{
			return default(Bounds);
		}

		[Token(Token = "0x6002108")]
		[Address(RVA = "0xE2219C", Offset = "0xE2219C", VA = "0xE2219C")]
		public static int GetBiggestCluster(List<RFCluster> clusters)
		{
			return default(int);
		}

		[Token(Token = "0x6002109")]
		[Address(RVA = "0xE23040", Offset = "0xE23040", VA = "0xE23040")]
		public static void GetSoloShards(RFCluster cluster, List<RFShard> soloShards)
		{
		}

		[Token(Token = "0x600210A")]
		[Address(RVA = "0xE21FE8", Offset = "0xE21FE8", VA = "0xE21FE8")]
		public static int GetUniqClusterId(RFCluster cluster)
		{
			return default(int);
		}

		[Token(Token = "0x600210B")]
		[Address(RVA = "0xE231C0", Offset = "0xE231C0", VA = "0xE231C0")]
		public static bool IntegrityCheck(RFCluster cluster)
		{
			return default(bool);
		}

		[Token(Token = "0x600210C")]
		[Address(RVA = "0xE232A8", Offset = "0xE232A8", VA = "0xE232A8")]
		public static void CreateClusterRoot(RFCluster cluster, Vector3 pos, Quaternion rot, int layer, string tag, string nm)
		{
		}

		[Token(Token = "0x6002110")]
		[Address(RVA = "0xE23518", Offset = "0xE23518", VA = "0xE23518")]
		private List<RFShard> GetNestedShards(bool OwnShards = false)
		{
			return null;
		}

		[Token(Token = "0x6002111")]
		[Address(RVA = "0xE236D0", Offset = "0xE236D0", VA = "0xE236D0")]
		public List<RFCluster> GetNestedClusters()
		{
			return null;
		}

		[Token(Token = "0x6002112")]
		[Address(RVA = "0xE23818", Offset = "0xE23818", VA = "0xE23818")]
		private bool TrisNeib(RFCluster otherCluster)
		{
			return default(bool);
		}

		[Token(Token = "0x6002113")]
		[Address(RVA = "0xE23B60", Offset = "0xE23B60", VA = "0xE23B60")]
		private float NeibArea(RFCluster otherCluster)
		{
			return default(float);
		}

		[Token(Token = "0x6002114")]
		[Address(RVA = "0xE23F28", Offset = "0xE23F28", VA = "0xE23F28")]
		public int GetNeibIndArea([Optional] List<RFCluster> clusterList)
		{
			return default(int);
		}

		[Token(Token = "0x6002115")]
		[Address(RVA = "0xE2404C", Offset = "0xE2404C", VA = "0xE2404C")]
		public static void SetClusterNeib(List<RFCluster> clusters, bool connectivity)
		{
		}

		[Token(Token = "0x6002116")]
		[Address(RVA = "0xE24A8C", Offset = "0xE24A8C", VA = "0xE24A8C")]
		public static RFCluster GetNeibClusterArea(List<RFCluster> clusters, List<RFCluster> clusterList)
		{
			return null;
		}
	}
	[Token(Token = "0x2000570")]
	public class RFEvent
	{
		[Token(Token = "0x2000571")]
		public delegate void EventAction(RayfireRigid rigid);

		[Token(Token = "0x14000025")]
		public event EventAction LocalEvent
		{
			[Token(Token = "0x6002117")]
			[Address(RVA = "0xE24E6C", Offset = "0xE24E6C", VA = "0xE24E6C")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6002118")]
			[Address(RVA = "0xE24F08", Offset = "0xE24F08", VA = "0xE24F08")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x6002119")]
		[Address(RVA = "0xE24FA4", Offset = "0xE24FA4", VA = "0xE24FA4")]
		public void InvokeLocalEvent(RayfireRigid rigid)
		{
		}

		[Token(Token = "0x600211A")]
		[Address(RVA = "0xE24FC0", Offset = "0xE24FC0", VA = "0xE24FC0")]
		public RFEvent()
		{
		}
	}
	[Token(Token = "0x2000572")]
	public class RFDemolitionEvent : RFEvent
	{
		[Token(Token = "0x14000026")]
		public static event EventAction GlobalEvent
		{
			[Token(Token = "0x600211F")]
			[Address(RVA = "0xE25144", Offset = "0xE25144", VA = "0xE25144")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6002120")]
			[Address(RVA = "0xE251FC", Offset = "0xE251FC", VA = "0xE251FC")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x6002121")]
		[Address(RVA = "0xE252B4", Offset = "0xE252B4", VA = "0xE252B4")]
		public static void InvokeGlobalEvent(RayfireRigid rigid)
		{
		}

		[Token(Token = "0x6002122")]
		[Address(RVA = "0xE25320", Offset = "0xE25320", VA = "0xE25320")]
		public RFDemolitionEvent()
		{
		}
	}
	[Token(Token = "0x2000573")]
	public class RFActivationEvent : RFEvent
	{
		[Token(Token = "0x14000027")]
		public static event EventAction GlobalEvent
		{
			[Token(Token = "0x6002123")]
			[Address(RVA = "0xE25328", Offset = "0xE25328", VA = "0xE25328")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6002124")]
			[Address(RVA = "0xE253E0", Offset = "0xE253E0", VA = "0xE253E0")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x6002125")]
		[Address(RVA = "0xE25498", Offset = "0xE25498", VA = "0xE25498")]
		public static void InvokeGlobalEvent(RayfireRigid rigid)
		{
		}

		[Token(Token = "0x6002126")]
		[Address(RVA = "0xE25504", Offset = "0xE25504", VA = "0xE25504")]
		public RFActivationEvent()
		{
		}
	}
	[Token(Token = "0x2000574")]
	public class RFRestrictionEvent : RFEvent
	{
		[Token(Token = "0x14000028")]
		public static event EventAction GlobalEvent
		{
			[Token(Token = "0x6002127")]
			[Address(RVA = "0xE2550C", Offset = "0xE2550C", VA = "0xE2550C")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6002128")]
			[Address(RVA = "0xE255C4", Offset = "0xE255C4", VA = "0xE255C4")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x6002129")]
		[Address(RVA = "0xE2567C", Offset = "0xE2567C", VA = "0xE2567C")]
		public static void InvokeGlobalEvent(RayfireRigid rigid)
		{
		}

		[Token(Token = "0x600212A")]
		[Address(RVA = "0xE256E8", Offset = "0xE256E8", VA = "0xE256E8")]
		public RFRestrictionEvent()
		{
		}
	}
	[Token(Token = "0x2000575")]
	public class RFShotEvent
	{
		[Token(Token = "0x2000576")]
		public delegate void EventAction(RayfireGun gun);

		[Token(Token = "0x14000029")]
		public static event EventAction GlobalEvent
		{
			[Token(Token = "0x600212B")]
			[Address(RVA = "0xE256F0", Offset = "0xE256F0", VA = "0xE256F0")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x600212C")]
			[Address(RVA = "0xE257A8", Offset = "0xE257A8", VA = "0xE257A8")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x1400002A")]
		public event EventAction LocalEvent
		{
			[Token(Token = "0x600212D")]
			[Address(RVA = "0xE25860", Offset = "0xE25860", VA = "0xE25860")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x600212E")]
			[Address(RVA = "0xE258FC", Offset = "0xE258FC", VA = "0xE258FC")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x600212F")]
		[Address(RVA = "0xE25998", Offset = "0xE25998", VA = "0xE25998")]
		public static void InvokeGlobalEvent(RayfireGun gun)
		{
		}

		[Token(Token = "0x6002130")]
		[Address(RVA = "0xE25A04", Offset = "0xE25A04", VA = "0xE25A04")]
		public void InvokeLocalEvent(RayfireGun gun)
		{
		}

		[Token(Token = "0x6002131")]
		[Address(RVA = "0xE25A20", Offset = "0xE25A20", VA = "0xE25A20")]
		public RFShotEvent()
		{
		}
	}
	[Token(Token = "0x2000577")]
	public class RFExplosionEvent
	{
		[Token(Token = "0x2000578")]
		public delegate void EventAction(RayfireBomb bomb);

		[Token(Token = "0x1400002B")]
		public static event EventAction GlobalEvent
		{
			[Token(Token = "0x6002136")]
			[Address(RVA = "0xE25BA4", Offset = "0xE25BA4", VA = "0xE25BA4")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6002137")]
			[Address(RVA = "0xE25C5C", Offset = "0xE25C5C", VA = "0xE25C5C")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x1400002C")]
		public event EventAction LocalEvent
		{
			[Token(Token = "0x6002138")]
			[Address(RVA = "0xE25D14", Offset = "0xE25D14", VA = "0xE25D14")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6002139")]
			[Address(RVA = "0xE25DB0", Offset = "0xE25DB0", VA = "0xE25DB0")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x600213A")]
		[Address(RVA = "0xE25E4C", Offset = "0xE25E4C", VA = "0xE25E4C")]
		public static void InvokeGlobalEvent(RayfireBomb bomb)
		{
		}

		[Token(Token = "0x600213B")]
		[Address(RVA = "0xE25EB8", Offset = "0xE25EB8", VA = "0xE25EB8")]
		public void InvokeLocalEvent(RayfireBomb bomb)
		{
		}

		[Token(Token = "0x600213C")]
		[Address(RVA = "0xE25ED4", Offset = "0xE25ED4", VA = "0xE25ED4")]
		public RFExplosionEvent()
		{
		}
	}
	[Token(Token = "0x2000579")]
	public class RFSliceEvent
	{
		[Token(Token = "0x200057A")]
		public delegate void EventAction(RayfireBlade blade);

		[Token(Token = "0x1400002D")]
		public static event EventAction GlobalEvent
		{
			[Token(Token = "0x6002141")]
			[Address(RVA = "0xE26058", Offset = "0xE26058", VA = "0xE26058")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6002142")]
			[Address(RVA = "0xE26110", Offset = "0xE26110", VA = "0xE26110")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x1400002E")]
		public event EventAction LocalEvent
		{
			[Token(Token = "0x6002143")]
			[Address(RVA = "0xE261C8", Offset = "0xE261C8", VA = "0xE261C8")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6002144")]
			[Address(RVA = "0xE26264", Offset = "0xE26264", VA = "0xE26264")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x6002145")]
		[Address(RVA = "0xE26300", Offset = "0xE26300", VA = "0xE26300")]
		public static void InvokeGlobalEvent(RayfireBlade blade)
		{
		}

		[Token(Token = "0x6002146")]
		[Address(RVA = "0xE2636C", Offset = "0xE2636C", VA = "0xE2636C")]
		public void InvokeLocalEvent(RayfireBlade blade)
		{
		}

		[Token(Token = "0x6002147")]
		[Address(RVA = "0xE26388", Offset = "0xE26388", VA = "0xE26388")]
		public RFSliceEvent()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200057B")]
	public class RFFlash
	{
		[Token(Token = "0x4001F29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[Header("  Intensity")]
		[Range(0.1f, 5f)]
		[Space(3f)]
		public float intensityMin;

		[Token(Token = "0x4001F2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[Range(0.1f, 5f)]
		[Space(1f)]
		public float intensityMax;

		[Token(Token = "0x4001F2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Range(0.01f, 10f)]
		[Space(3f)]
		[Header("  Range")]
		public float rangeMin;

		[Token(Token = "0x4001F2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[Space(1f)]
		[Range(0.01f, 10f)]
		public float rangeMax;

		[Token(Token = "0x4001F2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[Range(0.01f, 2f)]
		[Space(3f)]
		[Header("  Other")]
		public float distance;

		[Token(Token = "0x4001F2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[Space(1f)]
		public Color color;

		[Token(Token = "0x600214C")]
		[Address(RVA = "0xE2650C", Offset = "0xE2650C", VA = "0xE2650C")]
		public RFFlash()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200057C")]
	public class RFDecals
	{
		[Token(Token = "0x4001F2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool enable;

		[Token(Token = "0x4001F30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[Space(2f)]
		[Header("  Size")]
		[Range(0.1f, 5f)]
		public float sizeMin;

		[Token(Token = "0x4001F31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Space(1f)]
		[Range(0.1f, 5f)]
		public float sizeMax;

		[Token(Token = "0x4001F32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[Header("  Limitations")]
		[Space(2f)]
		[Range(0.01f, 2f)]
		public float distance;

		[Token(Token = "0x600214D")]
		[Address(RVA = "0xE26540", Offset = "0xE26540", VA = "0xE26540")]
		public RFDecals()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200057D")]
	public class RFMesh
	{
		[Serializable]
		[Token(Token = "0x200057E")]
		public class RFSubMeshTris
		{
			[Token(Token = "0x4001F3E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public List<int> triangles;

			[Token(Token = "0x6002156")]
			[Address(RVA = "0xE279E4", Offset = "0xE279E4", VA = "0xE279E4")]
			public RFSubMeshTris()
			{
			}

			[Token(Token = "0x6002157")]
			[Address(RVA = "0xE27230", Offset = "0xE27230", VA = "0xE27230")]
			public RFSubMeshTris(List<int> tris)
			{
			}
		}

		[Token(Token = "0x4001F33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool compress;

		[Token(Token = "0x4001F34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int subMeshCount;

		[Token(Token = "0x4001F35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Bounds bounds;

		[Token(Token = "0x4001F36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public int[] triangles;

		[Token(Token = "0x4001F37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public List<RFSubMeshTris> subTriangles;

		[Token(Token = "0x4001F38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Vector2[] uv;

		[Token(Token = "0x4001F39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Vector3[] vertices;

		[Token(Token = "0x4001F3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Vector4[] tangents;

		[Token(Token = "0x4001F3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public List<int> uvComp;

		[Token(Token = "0x4001F3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public List<int> verticesComp;

		[Token(Token = "0x4001F3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public List<int> tangentsComp;

		[Token(Token = "0x600214E")]
		[Address(RVA = "0xE2656C", Offset = "0xE2656C", VA = "0xE2656C")]
		public RFMesh(Mesh mesh, bool comp = false)
		{
		}

		[Token(Token = "0x600214F")]
		[Address(RVA = "0xE27260", Offset = "0xE27260", VA = "0xE27260")]
		public Mesh GetMesh()
		{
			return null;
		}

		[Token(Token = "0x6002150")]
		[Address(RVA = "0xE27384", Offset = "0xE27384", VA = "0xE27384")]
		private void LoadTriangles(Mesh mesh)
		{
		}

		[Token(Token = "0x6002151")]
		[Address(RVA = "0xE2781C", Offset = "0xE2781C", VA = "0xE2781C")]
		public static Mesh BakeMesh(SkinnedMeshRenderer skin)
		{
			return null;
		}

		[Token(Token = "0x6002152")]
		[Address(RVA = "0xE278CC", Offset = "0xE278CC", VA = "0xE278CC")]
		public static void ConvertRfMeshes(RayfireRigid rigid)
		{
		}

		[Token(Token = "0x6002153")]
		[Address(RVA = "0xE275A4", Offset = "0xE275A4", VA = "0xE275A4")]
		private static Vector2[] SetCompressedUv(List<int> uvComp)
		{
			return null;
		}

		[Token(Token = "0x6002154")]
		[Address(RVA = "0xE2744C", Offset = "0xE2744C", VA = "0xE2744C")]
		private static Vector3[] SetCompressedVertices(List<int> verticesComp)
		{
			return null;
		}

		[Token(Token = "0x6002155")]
		[Address(RVA = "0xE276C0", Offset = "0xE276C0", VA = "0xE276C0")]
		private static Vector4[] SetCompressedTangents(List<int> tangentsComp)
		{
			return null;
		}
	}
	[Serializable]
	[Token(Token = "0x200057F")]
	public class RFParticleNoise
	{
		[Token(Token = "0x4001F3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[Header("  Main")]
		[Space(3f)]
		public bool enabled;

		[Token(Token = "0x4001F40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[Space(2f)]
		public ParticleSystemNoiseQuality quality;

		[Token(Token = "0x4001F41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Range(0f, 3f)]
		[Space(3f)]
		[Header("  Strength")]
		public float strengthMin;

		[Token(Token = "0x4001F42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[Range(0f, 3f)]
		[Space(2f)]
		public float strengthMax;

		[Token(Token = "0x4001F43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[Header("  Other")]
		[Range(0.001f, 3f)]
		[Space(3f)]
		public float frequency;

		[Token(Token = "0x4001F44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[Range(0f, 2f)]
		[Space(2f)]
		public float scrollSpeed;

		[Token(Token = "0x4001F45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[Space(2f)]
		public bool damping;

		[Token(Token = "0x6002158")]
		[Address(RVA = "0xE27A6C", Offset = "0xE27A6C", VA = "0xE27A6C")]
		public RFParticleNoise()
		{
		}

		[Token(Token = "0x6002159")]
		[Address(RVA = "0xE27AA4", Offset = "0xE27AA4", VA = "0xE27AA4")]
		public void CopyFrom(RFParticleNoise source)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000580")]
	public class RFParticleRendering
	{
		[Token(Token = "0x4001F46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[Space(3f)]
		[Header("  Shadows")]
		public bool castShadows;

		[Token(Token = "0x4001F47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		[Space(2f)]
		public bool receiveShadows;

		[Token(Token = "0x4001F48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[Header("  Light")]
		[Space(3f)]
		[Space(2f)]
		public LightProbeUsage lightProbes;

		[Token(Token = "0x600215A")]
		[Address(RVA = "0xE27AD8", Offset = "0xE27AD8", VA = "0xE27AD8")]
		public RFParticleRendering()
		{
		}

		[Token(Token = "0x600215B")]
		[Address(RVA = "0xE27AFC", Offset = "0xE27AFC", VA = "0xE27AFC")]
		public void CopyFrom(RFParticleRendering source)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000581")]
	public class RFParticleDynamicDebris
	{
		[Token(Token = "0x4001F49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[Range(0f, 10f)]
		[Header("  Speed")]
		[Space(3f)]
		public float speedMin;

		[Token(Token = "0x4001F4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[Space(2f)]
		[Range(0f, 10f)]
		public float speedMax;

		[Token(Token = "0x4001F4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Header("  Inherit Velocity")]
		[Range(0f, 3f)]
		[Space(3f)]
		public float velocityMin;

		[Token(Token = "0x4001F4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[Space(2f)]
		[Range(0f, 3f)]
		public float velocityMax;

		[Token(Token = "0x4001F4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[Header("  Gravity Modifier")]
		[Space(3f)]
		[Range(-2f, 2f)]
		public float gravityMin;

		[Token(Token = "0x4001F4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[Space(2f)]
		[Range(-2f, 2f)]
		public float gravityMax;

		[Token(Token = "0x4001F4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[Header("  Rotation")]
		[Space(3f)]
		[Range(0f, 1f)]
		public float rotationSpeed;

		[Token(Token = "0x600215C")]
		[Address(RVA = "0xE27B20", Offset = "0xE27B20", VA = "0xE27B20")]
		public RFParticleDynamicDebris()
		{
		}

		[Token(Token = "0x600215D")]
		[Address(RVA = "0xE27B60", Offset = "0xE27B60", VA = "0xE27B60")]
		public void CopyFrom(RFParticleDynamicDebris source)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000582")]
	public class RFParticleDynamicDust
	{
		[Token(Token = "0x4001F50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[Space(3f)]
		[Range(0f, 10f)]
		[Header("  Speed")]
		public float speedMin;

		[Token(Token = "0x4001F51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[Space(2f)]
		[Range(0f, 10f)]
		public float speedMax;

		[Token(Token = "0x4001F52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Header("  Rotation")]
		[Space(3f)]
		[Range(0f, 1f)]
		public float rotation;

		[Token(Token = "0x4001F53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[Header("  Gravity Modifier")]
		[Space(3f)]
		[Range(-2f, 2f)]
		public float gravityMin;

		[Token(Token = "0x4001F54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[Space(2f)]
		[Range(-2f, 2f)]
		public float gravityMax;

		[Token(Token = "0x600215E")]
		[Address(RVA = "0xE27B94", Offset = "0xE27B94", VA = "0xE27B94")]
		public RFParticleDynamicDust()
		{
		}

		[Token(Token = "0x600215F")]
		[Address(RVA = "0xE27BC4", Offset = "0xE27BC4", VA = "0xE27BC4")]
		public void CopyFrom(RFParticleDynamicDust source)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000583")]
	public class RFParticleEmission
	{
		[Token(Token = "0x4001F55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[Header("  Burst")]
		[Space(3f)]
		public RFParticles.BurstType burstType;

		[Token(Token = "0x4001F56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[Space(2f)]
		[Range(0f, 500f)]
		public int burstAmount;

		[Token(Token = "0x4001F57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Header("  Distance")]
		[Space(3f)]
		[Range(0f, 5f)]
		public float distanceRate;

		[Token(Token = "0x4001F58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[Space(2f)]
		[Range(0.5f, 10f)]
		public float duration;

		[Token(Token = "0x4001F59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[Range(1f, 60f)]
		[Space(3f)]
		[Header("  Lifetime")]
		public float lifeMin;

		[Token(Token = "0x4001F5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[Range(1f, 60f)]
		[Space(2f)]
		public float lifeMax;

		[Token(Token = "0x4001F5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[Range(0.1f, 10f)]
		[Space(3f)]
		[Header("  Size")]
		public float sizeMin;

		[Token(Token = "0x4001F5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[Range(0.1f, 10f)]
		[Space(2f)]
		public float sizeMax;

		[Token(Token = "0x6002160")]
		[Address(RVA = "0xE27BE8", Offset = "0xE27BE8", VA = "0xE27BE8")]
		public RFParticleEmission()
		{
		}

		[Token(Token = "0x6002161")]
		[Address(RVA = "0xE27C24", Offset = "0xE27C24", VA = "0xE27C24")]
		public void CopyFrom(RFParticleEmission source)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000584")]
	public class RFParticleLimitations
	{
		[Token(Token = "0x4001F5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[Header("  Particle system")]
		[Space(3f)]
		[Range(3f, 100f)]
		public int minParticles;

		[Token(Token = "0x4001F5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[Range(5f, 100f)]
		[Space(2f)]
		public int maxParticles;

		[Token(Token = "0x4001F5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Space(3f)]
		[Header("  Fragments")]
		[Range(10f, 100f)]
		public int percentage;

		[Token(Token = "0x4001F60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[Space(2f)]
		[Range(0.05f, 5f)]
		public float sizeThreshold;

		[Token(Token = "0x4001F61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[Range(0f, 5f)]
		[HideInInspector]
		public int demolitionDepth;

		[Token(Token = "0x6002162")]
		[Address(RVA = "0xE27C50", Offset = "0xE27C50", VA = "0xE27C50")]
		public RFParticleLimitations()
		{
		}

		[Token(Token = "0x6002163")]
		[Address(RVA = "0xE27C88", Offset = "0xE27C88", VA = "0xE27C88")]
		public void CopyFrom(RFParticleLimitations source)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000585")]
	public class RFParticleCollisionDebris
	{
		[Token(Token = "0x2000586")]
		public enum RFParticleCollisionWithType
		{
			[Token(Token = "0x4001F6D")]
			Everything,
			[Token(Token = "0x4001F6E")]
			Nothing
		}

		[Token(Token = "0x2000587")]
		public enum RFParticleCollisionMatType
		{
			[Token(Token = "0x4001F70")]
			ByPhysicalMaterial,
			[Token(Token = "0x4001F71")]
			ByProperties
		}

		[Token(Token = "0x4001F62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[Header("  Common")]
		[Space(3f)]
		public RFParticleCollisionWithType collidesWith;

		[Token(Token = "0x4001F63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[Space(2f)]
		public ParticleSystemCollisionQuality quality;

		[Token(Token = "0x4001F64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Range(0.1f, 2f)]
		[Space(2f)]
		public float radiusScale;

		[Token(Token = "0x4001F65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[Header("  Dampen")]
		[Space(3f)]
		public RFParticleCollisionMatType dampenType;

		[Token(Token = "0x4001F66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[Space(2f)]
		[Range(0f, 1f)]
		public float dampenMin;

		[Token(Token = "0x4001F67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[Space(2f)]
		[Range(0f, 1f)]
		public float dampenMax;

		[Token(Token = "0x4001F68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[Header("  Bounce")]
		[Space(3f)]
		public RFParticleCollisionMatType bounceType;

		[Token(Token = "0x4001F69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[Range(0f, 1f)]
		[Space(2f)]
		public float bounceMin;

		[Token(Token = "0x4001F6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[Range(0f, 1f)]
		[Space(2f)]
		public float bounceMax;

		[Token(Token = "0x4001F6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[HideInInspector]
		public bool propertiesSet;

		[Token(Token = "0x6002164")]
		[Address(RVA = "0xE27CAC", Offset = "0xE27CAC", VA = "0xE27CAC")]
		public RFParticleCollisionDebris()
		{
		}

		[Token(Token = "0x6002165")]
		[Address(RVA = "0xE27CF8", Offset = "0xE27CF8", VA = "0xE27CF8")]
		public void CopyFrom(RFParticleCollisionDebris source)
		{
		}

		[Token(Token = "0x6002166")]
		[Address(RVA = "0xE27D2C", Offset = "0xE27D2C", VA = "0xE27D2C")]
		public void SetMaterialProps(RayfireDebris debris)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000588")]
	public class RFParticleCollisionDust
	{
		[Token(Token = "0x4001F72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[Space(3f)]
		[Header("  Common")]
		public RFParticles.RFParticleCollisionWithType collidesWith;

		[Token(Token = "0x4001F73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[Space(2f)]
		public ParticleSystemCollisionQuality quality;

		[Token(Token = "0x4001F74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Space(2f)]
		[Range(0.1f, 2f)]
		public float radiusScale;

		[Token(Token = "0x6002167")]
		[Address(RVA = "0xE27F1C", Offset = "0xE27F1C", VA = "0xE27F1C")]
		public RFParticleCollisionDust()
		{
		}

		[Token(Token = "0x6002168")]
		[Address(RVA = "0xE27F40", Offset = "0xE27F40", VA = "0xE27F40")]
		public void CopyFrom(RFParticleCollisionDust source)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000589")]
	public class RFParticles
	{
		[Token(Token = "0x200058A")]
		public enum RFParticleCollisionWithType
		{
			[Token(Token = "0x4001F79")]
			Everything,
			[Token(Token = "0x4001F7A")]
			Nothing
		}

		[Token(Token = "0x200058B")]
		public enum RFParticleCollisionMatType
		{
			[Token(Token = "0x4001F7C")]
			ByPhysicalMaterial,
			[Token(Token = "0x4001F7D")]
			ByProperties
		}

		[Token(Token = "0x200058C")]
		public enum BurstType
		{
			[Token(Token = "0x4001F7F")]
			None,
			[Token(Token = "0x4001F80")]
			TotalAmount,
			[Token(Token = "0x4001F81")]
			PerOneUnitSize,
			[Token(Token = "0x4001F82")]
			FragmentAmount
		}

		[Token(Token = "0x4001F75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ParticleSystem.MinMaxCurve constantCurve;

		[Token(Token = "0x4001F76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static string debrisStr;

		[Token(Token = "0x4001F77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static string dustStr;

		[Token(Token = "0x6002169")]
		[Address(RVA = "0xE27F64", Offset = "0xE27F64", VA = "0xE27F64")]
		public static void SetParticleComponents(RayfireRigid scr)
		{
		}

		[Token(Token = "0x600216A")]
		[Address(RVA = "0xE283AC", Offset = "0xE283AC", VA = "0xE283AC")]
		public static void InitDemolitionParticles(RayfireRigid source)
		{
		}

		[Token(Token = "0x600216B")]
		[Address(RVA = "0xE28480", Offset = "0xE28480", VA = "0xE28480")]
		public static void CreateDemolitionDebris(RayfireRigid source)
		{
		}

		[Token(Token = "0x600216C")]
		[Address(RVA = "0xE28888", Offset = "0xE28888", VA = "0xE28888")]
		public static void CreateDemolitionDust(RayfireRigid source)
		{
		}

		[Token(Token = "0x600216D")]
		[Address(RVA = "0xE29658", Offset = "0xE29658", VA = "0xE29658")]
		public static void CreateDebrisRigid(RayfireDebris target)
		{
		}

		[Token(Token = "0x600216E")]
		[Address(RVA = "0xE29C10", Offset = "0xE29C10", VA = "0xE29C10")]
		public static void CreateDustRigid(RayfireDust target)
		{
		}

		[Token(Token = "0x600216F")]
		[Address(RVA = "0xE2A334", Offset = "0xE2A334", VA = "0xE2A334")]
		public static void InitActivationParticles(RayfireRigid source)
		{
		}

		[Token(Token = "0x6002170")]
		[Address(RVA = "0xE2A4C8", Offset = "0xE2A4C8", VA = "0xE2A4C8")]
		public static void CreateDebrisImpact(RayfireDebris debris, Vector3 impactPos, Vector3 impactNormal)
		{
		}

		[Token(Token = "0x6002171")]
		[Address(RVA = "0xE2A65C", Offset = "0xE2A65C", VA = "0xE2A65C")]
		public static void CreateDustImpact(RayfireDust dust, Vector3 impactPos, Vector3 impactNormal)
		{
		}

		[Token(Token = "0x6002172")]
		[Address(RVA = "0xE2A7F0", Offset = "0xE2A7F0", VA = "0xE2A7F0")]
		private static ParticleSystem CreateParticleSystem(Transform tm)
		{
			return null;
		}

		[Token(Token = "0x6002173")]
		[Address(RVA = "0xE29F48", Offset = "0xE29F48", VA = "0xE29F48")]
		public static ParticleSystem CreateParticleSystemDebris(RayfireDebris debris)
		{
			return null;
		}

		[Token(Token = "0x6002174")]
		[Address(RVA = "0xE2A1C0", Offset = "0xE2A1C0", VA = "0xE2A1C0")]
		public static ParticleSystem CreateParticleSystemDust(RayfireDust dust)
		{
			return null;
		}

		[Token(Token = "0x6002175")]
		[Address(RVA = "0xE28C90", Offset = "0xE28C90", VA = "0xE28C90")]
		private static void DetachParticles(RayfireRigid source)
		{
		}

		[Token(Token = "0x6002176")]
		[Address(RVA = "0xE2A9D0", Offset = "0xE2A9D0", VA = "0xE2A9D0")]
		public static void CopyParticles(RayfireRigid source, RayfireRigid target)
		{
		}

		[Token(Token = "0x6002177")]
		[Address(RVA = "0xE2AFC4", Offset = "0xE2AFC4", VA = "0xE2AFC4")]
		public static void CopyRootMeshParticles(RayfireRigid source, List<RayfireRigid> targets)
		{
		}

		[Token(Token = "0x6002178")]
		[Address(RVA = "0xE2B9F4", Offset = "0xE2B9F4", VA = "0xE2B9F4")]
		public static void SetMain(ParticleSystem.MainModule main, float lifeMin, float lifeMax, float sizeMin, float sizeMax, float gravityMin, float gravityMax, float speedMin, float speedMax, float divergence, int maxParticles, float duration)
		{
		}

		[Token(Token = "0x6002179")]
		[Address(RVA = "0xE2BC50", Offset = "0xE2BC50", VA = "0xE2BC50")]
		public static void SetEmission(ParticleSystem.EmissionModule emissionModule, float distanceRate, int burstAmount)
		{
		}

		[Token(Token = "0x600217A")]
		[Address(RVA = "0xE2BD9C", Offset = "0xE2BD9C", VA = "0xE2BD9C")]
		public static void SetShapeMesh(ParticleSystem.ShapeModule shapeModule, Mesh mesh, int emitMatIndex, Vector3 shapeScale)
		{
		}

		[Token(Token = "0x600217B")]
		[Address(RVA = "0xE2BE60", Offset = "0xE2BE60", VA = "0xE2BE60")]
		public static void SetShapeObject(ParticleSystem.ShapeModule shapeModule)
		{
		}

		[Token(Token = "0x600217C")]
		[Address(RVA = "0xE2A0BC", Offset = "0xE2A0BC", VA = "0xE2A0BC")]
		public static int GetEmissionMatIndex(Renderer renderer, Material mat)
		{
			return default(int);
		}

		[Token(Token = "0x600217D")]
		[Address(RVA = "0xE2BEA4", Offset = "0xE2BEA4", VA = "0xE2BEA4")]
		public static void SetVelocity(ParticleSystem.InheritVelocityModule velocity, RFParticleDynamicDebris dynamic)
		{
		}

		[Token(Token = "0x600217E")]
		[Address(RVA = "0xE2BF84", Offset = "0xE2BF84", VA = "0xE2BF84")]
		public static void SetRotationOverLifeTime(ParticleSystem.RotationOverLifetimeModule rotation, RFParticleDynamicDust dynamic)
		{
		}

		[Token(Token = "0x600217F")]
		[Address(RVA = "0xE2C048", Offset = "0xE2C048", VA = "0xE2C048")]
		public static ParticleSystem.MinMaxCurve GetCurveRotationByLife(float spin)
		{
			return default(ParticleSystem.MinMaxCurve);
		}

		[Token(Token = "0x6002180")]
		[Address(RVA = "0xE2C278", Offset = "0xE2C278", VA = "0xE2C278")]
		public static void SetSizeOverLifeTime(ParticleSystem.SizeOverLifetimeModule sizeOverLifeTime, float size)
		{
		}

		[Token(Token = "0x6002181")]
		[Address(RVA = "0xE2C510", Offset = "0xE2C510", VA = "0xE2C510")]
		public static void SetSizeOverLifeTime(ParticleSystem.SizeOverLifetimeModule sizeOverLifeTime, Vector3 size)
		{
		}

		[Token(Token = "0x6002182")]
		[Address(RVA = "0xE2C314", Offset = "0xE2C314", VA = "0xE2C314")]
		public static ParticleSystem.MinMaxCurve GetCurveSizeOverLifeTime(float val)
		{
			return default(ParticleSystem.MinMaxCurve);
		}

		[Token(Token = "0x6002183")]
		[Address(RVA = "0xE2C61C", Offset = "0xE2C61C", VA = "0xE2C61C")]
		public static void SetRotationBySpeed(ParticleSystem.RotationBySpeedModule rotationBySpeed, float rotationSpeed)
		{
		}

		[Token(Token = "0x6002184")]
		[Address(RVA = "0xE2C6C8", Offset = "0xE2C6C8", VA = "0xE2C6C8")]
		public static ParticleSystem.MinMaxCurve GetCurveRotationBySpeed(float rotationSpeed)
		{
			return default(ParticleSystem.MinMaxCurve);
		}

		[Token(Token = "0x6002185")]
		[Address(RVA = "0xE2C89C", Offset = "0xE2C89C", VA = "0xE2C89C")]
		public static void SetColorOverLife(ParticleSystem.ColorOverLifetimeModule colorLife, float opacity)
		{
		}

		[Token(Token = "0x6002186")]
		[Address(RVA = "0xE2CA54", Offset = "0xE2CA54", VA = "0xE2CA54")]
		public static void SetNoise(ParticleSystem.NoiseModule psNoise, RFParticleNoise scrNoise)
		{
		}

		[Token(Token = "0x6002187")]
		[Address(RVA = "0xE2CC58", Offset = "0xE2CC58", VA = "0xE2CC58")]
		public static void SetCollisionDebris(ParticleSystem.CollisionModule psCollision, RFParticleCollisionDebris coll)
		{
		}

		[Token(Token = "0x6002188")]
		[Address(RVA = "0xE2CDA8", Offset = "0xE2CDA8", VA = "0xE2CDA8")]
		public static void SetCollisionDust(ParticleSystem.CollisionModule psCollision, RFParticleCollisionDust coll)
		{
		}

		[Token(Token = "0x6002189")]
		[Address(RVA = "0xE29724", Offset = "0xE29724", VA = "0xE29724")]
		public static void GetDebrisTargets(List<RayfireDebris> filtered, List<RayfireDebris> targets, float sizeThreshold, int percentage, int pType)
		{
		}

		[Token(Token = "0x600218A")]
		[Address(RVA = "0xE29CDC", Offset = "0xE29CDC", VA = "0xE29CDC")]
		public static void GetDustTargets(List<RayfireDust> filtered, List<RayfireDust> targets, float sizeThreshold, int percentage, int pType)
		{
		}

		[Token(Token = "0x600218B")]
		[Address(RVA = "0xE293D8", Offset = "0xE293D8", VA = "0xE293D8")]
		public static void SetDebrisFinalAmount(List<RayfireDebris> targets, BurstType burstType, int burstAmount)
		{
		}

		[Token(Token = "0x600218C")]
		[Address(RVA = "0xE29990", Offset = "0xE29990", VA = "0xE29990")]
		public static void SetDustFinalAmount(List<RayfireDust> targets, BurstType burstType, int burstAmount)
		{
		}

		[Token(Token = "0x600218D")]
		[Address(RVA = "0xE2CE5C", Offset = "0xE2CE5C", VA = "0xE2CE5C")]
		public static bool AmountCheck(RayfireRigid source, int pType)
		{
			return default(bool);
		}

		[Token(Token = "0x600218E")]
		[Address(RVA = "0xE2D054", Offset = "0xE2D054", VA = "0xE2D054")]
		public RFParticles()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200058D")]
	public class RFShard : IComparable<RFShard>
	{
		[Token(Token = "0x4001F83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int id;

		[Token(Token = "0x4001F84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float sz;

		[Token(Token = "0x4001F85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool uny;

		[Token(Token = "0x4001F86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		public bool act;

		[Token(Token = "0x4001F87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Bounds bnd;

		[Token(Token = "0x4001F88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public Vector3 pos;

		[Token(Token = "0x4001F89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Quaternion rot;

		[Token(Token = "0x4001F8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public SimType sm;

		[Token(Token = "0x4001F8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public int nAm;

		[Token(Token = "0x4001F8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public List<int> nIds;

		[Token(Token = "0x4001F8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public List<float> nArea;

		[Token(Token = "0x4001F8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public List<int> sIds;

		[Token(Token = "0x4001F8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public List<float> nSt;

		[Token(Token = "0x4001F90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public float sSt;

		[Token(Token = "0x4001F91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public Transform tm;

		[Token(Token = "0x4001F92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public Collider col;

		[Token(Token = "0x4001F93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public Rigidbody rb;

		[Token(Token = "0x4001F94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public RayfireRigid rigid;

		[NonSerialized]
		[Token(Token = "0x4001F95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public MeshFilter mf;

		[NonSerialized]
		[Token(Token = "0x4001F96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public List<RFTriangle> tris;

		[NonSerialized]
		[Token(Token = "0x4001F97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public RFCluster cluster;

		[NonSerialized]
		[Token(Token = "0x4001F98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public List<RFShard> neibShards;

		[NonSerialized]
		[Token(Token = "0x4001F99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public bool check;

		[NonSerialized]
		[Token(Token = "0x4001F9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public bool[] sCheck;

		[Token(Token = "0x170001CC")]
		public bool StressState
		{
			[Token(Token = "0x60021A2")]
			[Address(RVA = "0xE2E8C0", Offset = "0xE2E8C0", VA = "0xE2E8C0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001CD")]
		public bool SupportState
		{
			[Token(Token = "0x60021A3")]
			[Address(RVA = "0xE2F420", Offset = "0xE2F420", VA = "0xE2F420")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6002190")]
		[Address(RVA = "0xE206E8", Offset = "0xE206E8", VA = "0xE206E8")]
		public RFShard(RFShard source)
		{
		}

		[Token(Token = "0x6002191")]
		[Address(RVA = "0xE2D138", Offset = "0xE2D138", VA = "0xE2D138")]
		public RFShard(Transform Tm, int Id)
		{
		}

		[Token(Token = "0x6002192")]
		[Address(RVA = "0xE2D2F4", Offset = "0xE2D2F4", VA = "0xE2D2F4", Slot = "4")]
		public int CompareTo(RFShard otherShard)
		{
			return default(int);
		}

		[Token(Token = "0x6002193")]
		[Address(RVA = "0xE2D324", Offset = "0xE2D324", VA = "0xE2D324")]
		public static void SetShards(RFCluster cluster, ConnectivityType connectivity, bool setRigid = false)
		{
		}

		[Token(Token = "0x6002194")]
		[Address(RVA = "0xE2D46C", Offset = "0xE2D46C", VA = "0xE2D46C")]
		public static void SetShardsByTransformList(RFCluster cluster, List<Transform> tmList, ConnectivityType connectivity, bool setRigid = false)
		{
		}

		[Token(Token = "0x6002195")]
		[Address(RVA = "0xE2D7BC", Offset = "0xE2D7BC", VA = "0xE2D7BC")]
		public static void SetShardsByRigidList(RFCluster cluster, List<RayfireRigid> rigids, ConnectivityType connectivity)
		{
		}

		[Token(Token = "0x6002196")]
		[Address(RVA = "0xE2DA78", Offset = "0xE2DA78", VA = "0xE2DA78")]
		private bool TrisNeib(RFShard otherShard)
		{
			return default(bool);
		}

		[Token(Token = "0x6002197")]
		[Address(RVA = "0xE2DC50", Offset = "0xE2DC50", VA = "0xE2DC50")]
		private float NeibArea(RFShard otherShard)
		{
			return default(float);
		}

		[Token(Token = "0x6002198")]
		[Address(RVA = "0xE2DE4C", Offset = "0xE2DE4C", VA = "0xE2DE4C")]
		public static void SetShardNeibs(List<RFShard> shards, ConnectivityType type, float minArea = 0f, float minSize = 0f, int perc = 0, int seed = 0)
		{
		}

		[Token(Token = "0x6002199")]
		[Address(RVA = "0xE2E67C", Offset = "0xE2E67C", VA = "0xE2E67C")]
		public static void ReinitNeibs(List<RFShard> shards)
		{
		}

		[Token(Token = "0x600219A")]
		[Address(RVA = "0xE2E794", Offset = "0xE2E794", VA = "0xE2E794")]
		public void RemoveNeibAt(int ind)
		{
		}

		[Token(Token = "0x600219B")]
		[Address(RVA = "0xE2E914", Offset = "0xE2E914", VA = "0xE2E914")]
		public void ClearNeib()
		{
		}

		[Token(Token = "0x600219C")]
		[Address(RVA = "0xE216B4", Offset = "0xE216B4", VA = "0xE216B4")]
		public static void SetUnchecked(List<RFShard> shards)
		{
		}

		[Token(Token = "0x600219D")]
		[Address(RVA = "0xE2E9FC", Offset = "0xE2E9FC", VA = "0xE2E9FC")]
		public static Plane GetSlicePlane(Bounds bound)
		{
			return default(Plane);
		}

		[Token(Token = "0x600219E")]
		[Address(RVA = "0xE2EB64", Offset = "0xE2EB64", VA = "0xE2EB64")]
		public static List<RFShard> SortByDistanceToPoint(List<RFShard> shards, Vector3 point, int amount)
		{
			return null;
		}

		[Token(Token = "0x600219F")]
		[Address(RVA = "0xE2EF90", Offset = "0xE2EF90", VA = "0xE2EF90")]
		public static List<RFShard> SortByDistanceToPlane(List<RFShard> shards, Vector3 point, Vector3 normal, int amount)
		{
			return null;
		}

		[Token(Token = "0x60021A0")]
		[Address(RVA = "0xE21740", Offset = "0xE21740", VA = "0xE21740")]
		public static bool UnyieldingByShard(List<RFShard> shards)
		{
			return default(bool);
		}

		[Token(Token = "0x60021A1")]
		[Address(RVA = "0xE2F384", Offset = "0xE2F384", VA = "0xE2F384")]
		public static bool AllUnyShards(List<RFShard> shards)
		{
			return default(bool);
		}

		[Token(Token = "0x60021A4")]
		[Address(RVA = "0xE2F470", Offset = "0xE2F470", VA = "0xE2F470")]
		public static RFShard GetShardByCollider(List<RFShard> shards, Collider collider)
		{
			return null;
		}

		[Token(Token = "0x60021A5")]
		[Address(RVA = "0xE2F570", Offset = "0xE2F570", VA = "0xE2F570")]
		public static List<RFShard> GetShardsByColliders(List<RFShard> shards, List<Collider> colliders)
		{
			return null;
		}
	}
	[Serializable]
	[Token(Token = "0x200058E")]
	public class RFSound
	{
		[Token(Token = "0x4001F9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[Tooltip("Enable sound play for this event.")]
		public bool enable;

		[Token(Token = "0x4001F9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[Space(1f)]
		[Tooltip("Sound volume multiplier for this event.")]
		[Range(0.01f, 1f)]
		public float multiplier;

		[Token(Token = "0x4001F9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Tooltip("Enable sound play for this event.")]
		[Space(3f)]
		[Header("  Audio Clips")]
		public AudioClip clip;

		[Token(Token = "0x4001F9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[Tooltip("List of random Audio Clips to play.")]
		[Space(1f)]
		public List<AudioClip> clips;

		[Token(Token = "0x4001F9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[Header("  Audio Mixer")]
		[Space(3f)]
		[Tooltip("Audio Mixer Output Group.")]
		public AudioMixerGroup outputGroup;

		[Token(Token = "0x170001CE")]
		public bool HasClips
		{
			[Token(Token = "0x60021AF")]
			[Address(RVA = "0xE2F930", Offset = "0xE2F930", VA = "0xE2F930")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60021A6")]
		[Address(RVA = "0xE2F73C", Offset = "0xE2F73C", VA = "0xE2F73C")]
		public RFSound()
		{
		}

		[Token(Token = "0x60021A7")]
		[Address(RVA = "0xE2F760", Offset = "0xE2F760", VA = "0xE2F760")]
		public RFSound(RFSound source)
		{
		}

		[Token(Token = "0x60021A8")]
		[Address(RVA = "0xE2F984", Offset = "0xE2F984", VA = "0xE2F984")]
		public static void CopyRootMeshSound(RayfireRigid source, List<RayfireRigid> targets)
		{
		}

		[Token(Token = "0x60021A9")]
		[Address(RVA = "0xE2FB14", Offset = "0xE2FB14", VA = "0xE2FB14")]
		public static void Play(RayfireSound scr, AudioClip clip, AudioMixerGroup group, float volume)
		{
		}

		[Token(Token = "0x60021AA")]
		[Address(RVA = "0xE2FD70", Offset = "0xE2FD70", VA = "0xE2FD70")]
		public static void InitializationSound(RayfireSound scr, float size)
		{
		}

		[Token(Token = "0x60021AB")]
		[Address(RVA = "0xE30244", Offset = "0xE30244", VA = "0xE30244")]
		public static void ActivationSound(RayfireSound scr, float size)
		{
		}

		[Token(Token = "0x60021AC")]
		[Address(RVA = "0xE304D8", Offset = "0xE304D8", VA = "0xE304D8")]
		public static void DemolitionSound(RayfireSound scr, float size)
		{
		}

		[Token(Token = "0x60021AD")]
		[Address(RVA = "0xE30190", Offset = "0xE30190", VA = "0xE30190")]
		public static float GeVolume(RayfireSound scr, float size)
		{
			return default(float);
		}

		[Token(Token = "0x60021AE")]
		[Address(RVA = "0xE30014", Offset = "0xE30014", VA = "0xE30014")]
		private static bool FilterCheck(RayfireSound scr, float size)
		{
			return default(bool);
		}
	}
	[Serializable]
	[Token(Token = "0x200058F")]
	public class RFStress
	{
		[Token(Token = "0x2000590")]
		[CompilerGenerated]
		private sealed class <StressCor>d__21 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001FB5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001FB6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001FB7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public RayfireConnectivity scr;

			[Token(Token = "0x4001FB8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public RFStress <>4__this;

			[Token(Token = "0x4001FB9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private WaitForSeconds <wait>5__2;

			[Token(Token = "0x170001CF")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60021C3")]
				[Address(RVA = "0xE33DD4", Offset = "0xE33DD4", VA = "0xE33DD4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001D0")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60021C5")]
				[Address(RVA = "0xE33E1C", Offset = "0xE33E1C", VA = "0xE33E1C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60021C0")]
			[Address(RVA = "0xE309A4", Offset = "0xE309A4", VA = "0xE309A4")]
			[DebuggerHidden]
			public <StressCor>d__21(int <>1__state)
			{
			}

			[Token(Token = "0x60021C1")]
			[Address(RVA = "0xE33C2C", Offset = "0xE33C2C", VA = "0xE33C2C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60021C2")]
			[Address(RVA = "0xE33C30", Offset = "0xE33C30", VA = "0xE33C30", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60021C4")]
			[Address(RVA = "0xE33DDC", Offset = "0xE33DDC", VA = "0xE33DDC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001FA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[Space(2f)]
		public bool enable;

		[Token(Token = "0x4001FA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[Header("  Connections")]
		[Range(1f, 1000f)]
		[Space(3f)]
		[Tooltip("Amount of stress every connection can take to break.")]
		public int threshold;

		[Token(Token = "0x4001FA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Space(2f)]
		[Range(0f, 10f)]
		[Tooltip("Multiplier for stress which get connection every Interval.")]
		public float erosion;

		[Token(Token = "0x4001FA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[Range(0.1f, 10f)]
		[Tooltip("Connection stress will be increased every Interval. Measures in Seconds.")]
		[Space(2f)]
		public float interval;

		[Token(Token = "0x4001FA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[Space(3f)]
		[Tooltip("Angle to define which shards above Shard should be considered as supported shards.")]
		[Space(2f)]
		[Range(0f, 90f)]
		[Header("  Shards")]
		public int support;

		[Token(Token = "0x4001FA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[Space(2f)]
		[Tooltip("Erode connections only for shards which lost their neighbor.")]
		public bool exposed;

		[Token(Token = "0x4001FA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x25")]
		[Space(2f)]
		[Tooltip("")]
		public bool bySize;

		[NonSerialized]
		[Token(Token = "0x4001FA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x26")]
		[Space(2f)]
		public bool inProgress;

		[NonSerialized]
		[Token(Token = "0x4001FA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int strAmount;

		[NonSerialized]
		[Token(Token = "0x4001FA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public int supAmount;

		[Token(Token = "0x4001FAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[HideInInspector]
		public List<RFShard> strShards;

		[Token(Token = "0x4001FAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[HideInInspector]
		public List<RFShard> supShards;

		[Token(Token = "0x4001FAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[HideInInspector]
		public Vector3 rotCache;

		[Token(Token = "0x4001FAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[HideInInspector]
		public Vector3 grvCache;

		[Token(Token = "0x4001FAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[HideInInspector]
		public int supCache;

		[Token(Token = "0x4001FAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[HideInInspector]
		public float sizeCache;

		[Token(Token = "0x4001FB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[HideInInspector]
		public bool initialized;

		[Token(Token = "0x4001FB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private List<RFShard> checkShards;

		[Token(Token = "0x4001FB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private List<int> path;

		[Token(Token = "0x4001FB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private List<int> frontier;

		[Token(Token = "0x4001FB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private List<int> frontPrior;

		[Token(Token = "0x60021B0")]
		[Address(RVA = "0xE3076C", Offset = "0xE3076C", VA = "0xE3076C")]
		public RFStress()
		{
		}

		[Token(Token = "0x60021B1")]
		[Address(RVA = "0xE30868", Offset = "0xE30868", VA = "0xE30868")]
		public static void StopStress(RayfireConnectivity scr)
		{
		}

		[Token(Token = "0x60021B2")]
		[Address(RVA = "0xE30888", Offset = "0xE30888", VA = "0xE30888")]
		public static void StartStress(RayfireConnectivity scr)
		{
		}

		[Token(Token = "0x60021B3")]
		[Address(RVA = "0xE30914", Offset = "0xE30914", VA = "0xE30914")]
		[IteratorStateMachine(typeof(<StressCor>d__21))]
		private IEnumerator StressCor(RayfireConnectivity scr)
		{
			return null;
		}

		[Token(Token = "0x60021B4")]
		[Address(RVA = "0xE309CC", Offset = "0xE309CC", VA = "0xE309CC")]
		private bool CheckSupport(RayfireConnectivity scr)
		{
			return default(bool);
		}

		[Token(Token = "0x60021B5")]
		[Address(RVA = "0xE30C74", Offset = "0xE30C74", VA = "0xE30C74")]
		private static void StressErosion(RayfireConnectivity scr)
		{
		}

		[Token(Token = "0x60021B6")]
		[Address(RVA = "0xE310F8", Offset = "0xE310F8", VA = "0xE310F8")]
		private static void StressCollapse(RayfireConnectivity connectivity, int maxStressValue)
		{
		}

		[Token(Token = "0x60021B7")]
		[Address(RVA = "0xE31130", Offset = "0xE31130", VA = "0xE31130")]
		private static int RemNeibByStress(RFStress stress, int stressVal)
		{
			return default(int);
		}

		[Token(Token = "0x60021B8")]
		[Address(RVA = "0xE31374", Offset = "0xE31374", VA = "0xE31374")]
		public static void Initialize(RayfireConnectivity conn)
		{
		}

		[Token(Token = "0x60021B9")]
		[Address(RVA = "0xE313DC", Offset = "0xE313DC", VA = "0xE313DC")]
		private static bool InitializeNeed(RayfireConnectivity conn)
		{
			return default(bool);
		}

		[Token(Token = "0x60021BA")]
		[Address(RVA = "0xE315A8", Offset = "0xE315A8", VA = "0xE315A8")]
		private static void SetStressConnections(RayfireConnectivity conn)
		{
		}

		[Token(Token = "0x60021BB")]
		[Address(RVA = "0xE32318", Offset = "0xE32318", VA = "0xE32318")]
		private static void SetStressSupport(List<RFShard> shards, RFStress stress)
		{
		}

		[Token(Token = "0x60021BC")]
		[Address(RVA = "0xE32ABC", Offset = "0xE32ABC", VA = "0xE32ABC")]
		private static void PrepareCheckShards(RFStress stress)
		{
		}

		[Token(Token = "0x60021BD")]
		[Address(RVA = "0xE31BF8", Offset = "0xE31BF8", VA = "0xE31BF8")]
		private static void SetSizeMultiplier(RayfireConnectivity conn)
		{
		}

		[Token(Token = "0x60021BE")]
		[Address(RVA = "0xE33630", Offset = "0xE33630", VA = "0xE33630")]
		private static void SetSizeMultiplierOLD(RayfireConnectivity conn)
		{
		}

		[Token(Token = "0x60021BF")]
		[Address(RVA = "0xE32B88", Offset = "0xE32B88", VA = "0xE32B88")]
		private static List<int> GetPathAstar(RFStress str, List<RFShard> shards, int startId, int lastId)
		{
			return null;
		}
	}
	[Token(Token = "0x2000591")]
	public enum AxisType
	{
		[Token(Token = "0x4001FBB")]
		XRed,
		[Token(Token = "0x4001FBC")]
		YGreen,
		[Token(Token = "0x4001FBD")]
		ZBlue
	}
	[Token(Token = "0x2000592")]
	public enum PlaneType
	{
		[Token(Token = "0x4001FBF")]
		XY,
		[Token(Token = "0x4001FC0")]
		XZ,
		[Token(Token = "0x4001FC1")]
		YZ
	}
	[Token(Token = "0x2000593")]
	public enum FragType
	{
		[Token(Token = "0x4001FC3")]
		Voronoi = 0,
		[Token(Token = "0x4001FC4")]
		Splinters = 1,
		[Token(Token = "0x4001FC5")]
		Slabs = 2,
		[Token(Token = "0x4001FC6")]
		Radial = 3,
		[Token(Token = "0x4001FC7")]
		Custom = 5,
		[Token(Token = "0x4001FC8")]
		Slices = 7,
		[Token(Token = "0x4001FC9")]
		Tets = 11,
		[Token(Token = "0x4001FCA")]
		Decompose = 15
	}
	[Token(Token = "0x2000594")]
	public enum DemolitionType
	{
		[Token(Token = "0x4001FCC")]
		None = 0,
		[Token(Token = "0x4001FCD")]
		Runtime = 1,
		[Token(Token = "0x4001FCE")]
		AwakePrecache = 2,
		[Token(Token = "0x4001FCF")]
		AwakePrefragment = 3,
		[Token(Token = "0x4001FD0")]
		ReferenceDemolition = 9
	}
	[Token(Token = "0x2000595")]
	public enum CachingType
	{
		[Token(Token = "0x4001FD2")]
		Disable,
		[Token(Token = "0x4001FD3")]
		ByFrames,
		[Token(Token = "0x4001FD4")]
		ByFragmentsPerFrame
	}
	[Token(Token = "0x2000596")]
	public enum FadeType
	{
		[Token(Token = "0x4001FD6")]
		None = 0,
		[Token(Token = "0x4001FD7")]
		SimExclude = 1,
		[Token(Token = "0x4001FD8")]
		MoveDown = 2,
		[Token(Token = "0x4001FD9")]
		ScaleDown = 3,
		[Token(Token = "0x4001FDA")]
		Destroy = 5
	}
	[Token(Token = "0x2000597")]
	public enum MaterialType
	{
		[Token(Token = "0x4001FDC")]
		HeavyMetal,
		[Token(Token = "0x4001FDD")]
		LightMetal,
		[Token(Token = "0x4001FDE")]
		DenseRock,
		[Token(Token = "0x4001FDF")]
		PorousRock,
		[Token(Token = "0x4001FE0")]
		Concrete,
		[Token(Token = "0x4001FE1")]
		Brick,
		[Token(Token = "0x4001FE2")]
		Glass,
		[Token(Token = "0x4001FE3")]
		Rubber,
		[Token(Token = "0x4001FE4")]
		Ice,
		[Token(Token = "0x4001FE5")]
		Wood
	}
	[Token(Token = "0x2000598")]
	public enum MassType
	{
		[Token(Token = "0x4001FE7")]
		MaterialDensity,
		[Token(Token = "0x4001FE8")]
		MassProperty,
		[Token(Token = "0x4001FE9")]
		RigidBodyComponent
	}
	[Token(Token = "0x2000599")]
	public enum ObjectType
	{
		[Token(Token = "0x4001FEB")]
		Mesh = 0,
		[Token(Token = "0x4001FEC")]
		MeshRoot = 1,
		[Token(Token = "0x4001FED")]
		SkinnedMesh = 2,
		[Token(Token = "0x4001FEE")]
		NestedCluster = 4,
		[Token(Token = "0x4001FEF")]
		ConnectedCluster = 5
	}
	[Token(Token = "0x200059A")]
	public enum SimType
	{
		[Token(Token = "0x4001FF1")]
		Dynamic,
		[Token(Token = "0x4001FF2")]
		Sleeping,
		[Token(Token = "0x4001FF3")]
		Inactive,
		[Token(Token = "0x4001FF4")]
		Kinematic,
		[Token(Token = "0x4001FF5")]
		Static
	}
	[Token(Token = "0x200059B")]
	public enum ConnectivityType
	{
		[Token(Token = "0x4001FF7")]
		ByBoundingBox,
		[Token(Token = "0x4001FF8")]
		ByMesh,
		[Token(Token = "0x4001FF9")]
		ByBoundingBoxAndMesh
	}
	[Token(Token = "0x200059C")]
	public enum FragmentMode
	{
		[Token(Token = "0x4001FFB")]
		Runtime,
		[Token(Token = "0x4001FFC")]
		Editor
	}
	[Token(Token = "0x200059D")]
	public enum RFColliderType
	{
		[Token(Token = "0x4001FFE")]
		Mesh = 0,
		[Token(Token = "0x4001FFF")]
		Box = 1,
		[Token(Token = "0x4002000")]
		Sphere = 2,
		[Token(Token = "0x4002001")]
		None = 4
	}
	[Token(Token = "0x200059E")]
	public enum RFParenting
	{
		[Token(Token = "0x4002003")]
		Manager = 0,
		[Token(Token = "0x4002004")]
		Parent = 1,
		[Token(Token = "0x4002005")]
		Sphere = 2,
		[Token(Token = "0x4002006")]
		None = 4
	}
	[Serializable]
	[Token(Token = "0x200059F")]
	public class RFActivation
	{
		[Token(Token = "0x20005A0")]
		[CompilerGenerated]
		private sealed class <ActivationVelocityCor>d__16 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002013")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002014")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002015")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public RayfireRigid scr;

			[Token(Token = "0x4002016")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public RFActivation <>4__this;

			[Token(Token = "0x170001D2")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60021D5")]
				[Address(RVA = "0xE36628", Offset = "0xE36628", VA = "0xE36628", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001D3")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60021D7")]
				[Address(RVA = "0xE36670", Offset = "0xE36670", VA = "0xE36670", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60021D2")]
			[Address(RVA = "0xE34FC8", Offset = "0xE34FC8", VA = "0xE34FC8")]
			[DebuggerHidden]
			public <ActivationVelocityCor>d__16(int <>1__state)
			{
			}

			[Token(Token = "0x60021D3")]
			[Address(RVA = "0xE36508", Offset = "0xE36508", VA = "0xE36508", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60021D4")]
			[Address(RVA = "0xE3650C", Offset = "0xE3650C", VA = "0xE3650C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60021D6")]
			[Address(RVA = "0xE36630", Offset = "0xE36630", VA = "0xE36630", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20005A1")]
		[CompilerGenerated]
		private sealed class <ActivationOffsetCor>d__17 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002017")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002018")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002019")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public RayfireRigid scr;

			[Token(Token = "0x170001D4")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60021DB")]
				[Address(RVA = "0xE367C0", Offset = "0xE367C0", VA = "0xE367C0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001D5")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60021DD")]
				[Address(RVA = "0xE36808", Offset = "0xE36808", VA = "0xE36808", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60021D8")]
			[Address(RVA = "0xE35064", Offset = "0xE35064", VA = "0xE35064")]
			[DebuggerHidden]
			public <ActivationOffsetCor>d__17(int <>1__state)
			{
			}

			[Token(Token = "0x60021D9")]
			[Address(RVA = "0xE36678", Offset = "0xE36678", VA = "0xE36678", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60021DA")]
			[Address(RVA = "0xE3667C", Offset = "0xE3667C", VA = "0xE3667C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60021DC")]
			[Address(RVA = "0xE367C8", Offset = "0xE367C8", VA = "0xE367C8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20005A2")]
		[CompilerGenerated]
		private sealed class <InactiveCor>d__18 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400201A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400201B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400201C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public RFActivation <>4__this;

			[Token(Token = "0x400201D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public RayfireRigid scr;

			[Token(Token = "0x170001D6")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60021E1")]
				[Address(RVA = "0xE3695C", Offset = "0xE3695C", VA = "0xE3695C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001D7")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60021E3")]
				[Address(RVA = "0xE369A4", Offset = "0xE369A4", VA = "0xE369A4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60021DE")]
			[Address(RVA = "0xE3511C", Offset = "0xE3511C", VA = "0xE3511C")]
			[DebuggerHidden]
			public <InactiveCor>d__18(int <>1__state)
			{
			}

			[Token(Token = "0x60021DF")]
			[Address(RVA = "0xE36810", Offset = "0xE36810", VA = "0xE36810", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60021E0")]
			[Address(RVA = "0xE36814", Offset = "0xE36814", VA = "0xE36814", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60021E2")]
			[Address(RVA = "0xE36964", Offset = "0xE36964", VA = "0xE36964", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4002007")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[Space(3f)]
		[Tooltip("Inactive object will be activated when it's velocity will be higher than By Velocity value when pushed by other dynamic objects.")]
		[Header("  Activation")]
		public float byVelocity;

		[Token(Token = "0x4002008")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[Space(1f)]
		[Tooltip("Inactive object will be activated if will be pushed from it's original position farther than By Offset value.")]
		public float byOffset;

		[Token(Token = "0x4002009")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Space(1f)]
		[Tooltip("Inactive object will be activated if will get total damage higher than this value.")]
		public float byDamage;

		[Token(Token = "0x400200A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[Space(1f)]
		[Tooltip("Inactive object will be activated by overlapping with object with RayFire Activator component.")]
		public bool byActivator;

		[Token(Token = "0x400200B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
		[Space(1f)]
		[Tooltip("Inactive object will be activated when it will be shot by RayFireGun component.")]
		public bool byImpact;

		[Token(Token = "0x400200C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E")]
		[Tooltip("Inactive object will be activated by Connectivity component if it will not be connected with Unyielding zone.")]
		[Space(1f)]
		public bool byConnectivity;

		[Token(Token = "0x400200D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F")]
		[Header("  Connectivity")]
		[Space(3f)]
		[Tooltip("Allows to define Inactive/Kinematic object as Unyielding to check for connection with other Inactive/Kinematic objects with enabled By Connectivity activation type.")]
		public bool unyielding;

		[Token(Token = "0x400200E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[Space(1f)]
		[Tooltip("Unyielding object can not be activate by default. When On allows to activate Unyielding objects as well.")]
		public bool activatable;

		[NonSerialized]
		[Token(Token = "0x400200F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public RayfireConnectivity connect;

		[NonSerialized]
		[Token(Token = "0x4002010")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public List<int> unyList;

		[NonSerialized]
		[Token(Token = "0x4002011")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public bool activated;

		[NonSerialized]
		[Token(Token = "0x4002012")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
		public bool inactiveCorState;

		[Token(Token = "0x170001D1")]
		public bool HasUny
		{
			[Token(Token = "0x60021D1")]
			[Address(RVA = "0xE36168", Offset = "0xE36168", VA = "0xE36168")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60021C6")]
		[Address(RVA = "0xE34E24", Offset = "0xE34E24", VA = "0xE34E24")]
		public RFActivation()
		{
		}

		[Token(Token = "0x60021C7")]
		[Address(RVA = "0xE34E50", Offset = "0xE34E50", VA = "0xE34E50")]
		public void CopyFrom(RFActivation act)
		{
		}

		[Token(Token = "0x60021C8")]
		[Address(RVA = "0xE34E48", Offset = "0xE34E48", VA = "0xE34E48")]
		public void Reset()
		{
		}

		[Token(Token = "0x60021C9")]
		[Address(RVA = "0xE34E9C", Offset = "0xE34E9C", VA = "0xE34E9C")]
		public void CheckConnectivity()
		{
		}

		[Token(Token = "0x60021CA")]
		[Address(RVA = "0xE34F38", Offset = "0xE34F38", VA = "0xE34F38")]
		[IteratorStateMachine(typeof(<ActivationVelocityCor>d__16))]
		public IEnumerator ActivationVelocityCor(RayfireRigid scr)
		{
			return null;
		}

		[Token(Token = "0x60021CB")]
		[Address(RVA = "0xE34FF0", Offset = "0xE34FF0", VA = "0xE34FF0")]
		[IteratorStateMachine(typeof(<ActivationOffsetCor>d__17))]
		public IEnumerator ActivationOffsetCor(RayfireRigid scr)
		{
			return null;
		}

		[Token(Token = "0x60021CC")]
		[Address(RVA = "0xE3508C", Offset = "0xE3508C", VA = "0xE3508C")]
		[IteratorStateMachine(typeof(<InactiveCor>d__18))]
		public IEnumerator InactiveCor(RayfireRigid scr)
		{
			return null;
		}

		[Token(Token = "0x60021CD")]
		[Address(RVA = "0xE35144", Offset = "0xE35144", VA = "0xE35144")]
		public static void ActivateRigid(RayfireRigid scr, bool connCheck = true)
		{
		}

		[Token(Token = "0x60021CE")]
		[Address(RVA = "0xE356DC", Offset = "0xE356DC", VA = "0xE356DC")]
		public static void ActivateShard(RFShard shard, RayfireRigidRoot rigidRoot)
		{
		}

		[Token(Token = "0x60021CF")]
		[Address(RVA = "0xE3598C", Offset = "0xE3598C", VA = "0xE3598C")]
		public static void OverlapActivation(RayfireRigid scr)
		{
		}

		[Token(Token = "0x60021D0")]
		[Address(RVA = "0xE363C0", Offset = "0xE363C0", VA = "0xE363C0")]
		private static void CopyUny(RayfireUnyielding source, GameObject target)
		{
		}
	}
	[Token(Token = "0x20005A3")]
	public class RFBackupCluster
	{
		[Token(Token = "0x400201E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private RFCluster cluster;

		[Token(Token = "0x400201F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool saved;

		[Token(Token = "0x60021E4")]
		[Address(RVA = "0xE369AC", Offset = "0xE369AC", VA = "0xE369AC")]
		private RFBackupCluster()
		{
		}

		[Token(Token = "0x60021E5")]
		[Address(RVA = "0xE369C8", Offset = "0xE369C8", VA = "0xE369C8")]
		public static void SaveBackup(RayfireRigid scr)
		{
		}

		[Token(Token = "0x60021E6")]
		[Address(RVA = "0xE36CDC", Offset = "0xE36CDC", VA = "0xE36CDC")]
		public static void RestoreBackup(RayfireRigid scr)
		{
		}

		[Token(Token = "0x60021E7")]
		[Address(RVA = "0xE36F00", Offset = "0xE36F00", VA = "0xE36F00")]
		private static void DestroyParticles(RayfireRigid scr)
		{
		}

		[Token(Token = "0x60021E8")]
		[Address(RVA = "0xE373DC", Offset = "0xE373DC", VA = "0xE373DC")]
		private static void ResetDeepShardRigid(RayfireRigid scr, RFCluster cluster)
		{
		}

		[Token(Token = "0x60021E9")]
		[Address(RVA = "0xE37D58", Offset = "0xE37D58", VA = "0xE37D58")]
		private static void ResetShardRigid(RFShard shard)
		{
		}

		[Token(Token = "0x60021EA")]
		[Address(RVA = "0xE36B2C", Offset = "0xE36B2C", VA = "0xE36B2C")]
		private static void SaveTmRecursive(RFCluster cluster)
		{
		}

		[Token(Token = "0x60021EB")]
		[Address(RVA = "0xE37920", Offset = "0xE37920", VA = "0xE37920")]
		private static void RestoreShardTmRecursive(RFCluster cluster)
		{
		}

		[Token(Token = "0x60021EC")]
		[Address(RVA = "0xE37794", Offset = "0xE37794", VA = "0xE37794")]
		private static void RestoreClusterTmRecursive(RFCluster cluster)
		{
		}

		[Token(Token = "0x60021ED")]
		[Address(RVA = "0xE374F0", Offset = "0xE374F0", VA = "0xE374F0")]
		private static void ResetRootsRecursive(RFCluster cluster)
		{
		}

		[Token(Token = "0x60021EE")]
		[Address(RVA = "0xE3785C", Offset = "0xE3785C", VA = "0xE3785C")]
		private static void ResetRootsParentsRecursive(RFCluster cluster)
		{
		}

		[Token(Token = "0x60021EF")]
		[Address(RVA = "0xE37AEC", Offset = "0xE37AEC", VA = "0xE37AEC")]
		private static void DestroyRoots(RayfireRigid scr)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20005A4")]
	public class RFCollapse
	{
		[Token(Token = "0x20005A5")]
		public enum RFCollapseType
		{
			[Token(Token = "0x4002027")]
			ByArea = 1,
			[Token(Token = "0x4002028")]
			BySize = 3,
			[Token(Token = "0x4002029")]
			Random = 5
		}

		[Token(Token = "0x20005A6")]
		[CompilerGenerated]
		private sealed class <CollapseCor>d__9 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400202A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400202B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400202C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public RFCollapse <>4__this;

			[Token(Token = "0x400202D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public RayfireRigid scr;

			[Token(Token = "0x400202E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private WaitForSeconds <wait>5__2;

			[Token(Token = "0x400202F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private float <step>5__3;

			[Token(Token = "0x4002030")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private int <i>5__4;

			[Token(Token = "0x170001D8")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002208")]
				[Address(RVA = "0xE39490", Offset = "0xE39490", VA = "0xE39490", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001D9")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600220A")]
				[Address(RVA = "0xE394D8", Offset = "0xE394D8", VA = "0xE394D8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002205")]
			[Address(RVA = "0xE380DC", Offset = "0xE380DC", VA = "0xE380DC")]
			[DebuggerHidden]
			public <CollapseCor>d__9(int <>1__state)
			{
			}

			[Token(Token = "0x6002206")]
			[Address(RVA = "0xE392A8", Offset = "0xE392A8", VA = "0xE392A8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002207")]
			[Address(RVA = "0xE392AC", Offset = "0xE392AC", VA = "0xE392AC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002209")]
			[Address(RVA = "0xE39498", Offset = "0xE39498", VA = "0xE39498", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20005A7")]
		[CompilerGenerated]
		private sealed class <CollapseCor>d__12 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002031")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002032")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002033")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public RFCollapse <>4__this;

			[Token(Token = "0x4002034")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public RayfireConnectivity scr;

			[Token(Token = "0x4002035")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private WaitForSeconds <wait>5__2;

			[Token(Token = "0x4002036")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private float <step>5__3;

			[Token(Token = "0x4002037")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private int <i>5__4;

			[Token(Token = "0x170001DA")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600220E")]
				[Address(RVA = "0xE396C0", Offset = "0xE396C0", VA = "0xE396C0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001DB")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002210")]
				[Address(RVA = "0xE39708", Offset = "0xE39708", VA = "0xE39708", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600220B")]
			[Address(RVA = "0xE38240", Offset = "0xE38240", VA = "0xE38240")]
			[DebuggerHidden]
			public <CollapseCor>d__12(int <>1__state)
			{
			}

			[Token(Token = "0x600220C")]
			[Address(RVA = "0xE394E0", Offset = "0xE394E0", VA = "0xE394E0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600220D")]
			[Address(RVA = "0xE394E4", Offset = "0xE394E4", VA = "0xE394E4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600220F")]
			[Address(RVA = "0xE396C8", Offset = "0xE396C8", VA = "0xE396C8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4002020")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[Tooltip(" By Area: Shard will loose it's connections if it's shared area surface is less then defined value.\n By Size: Shard will loose it's connections if it's Size is less then defined value.\n Random: Shard will loose it's connections if it's random value in range from 0 to 100 is less then defined value.")]
		public RFCollapseType type;

		[Token(Token = "0x4002021")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[Space(2f)]
		[Tooltip("Defines start value in percentage relative to whole range of picked type.")]
		[Range(0f, 99f)]
		public int start;

		[Token(Token = "0x4002022")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Space(2f)]
		[Tooltip("Defines end value in percentage relative to whole range of picked type.")]
		[Range(1f, 100f)]
		public int end;

		[Token(Token = "0x4002023")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[Range(1f, 100f)]
		[Tooltip("Amount of times when defined threshold value will be set during Duration period.")]
		[Space(2f)]
		public int steps;

		[Token(Token = "0x4002024")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[Tooltip("Time which it will take Start value to be increased to End value.")]
		[Range(0f, 60f)]
		[Space(2f)]
		public float duration;

		[NonSerialized]
		[Token(Token = "0x4002025")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public bool inProgress;

		[Token(Token = "0x60021F0")]
		[Address(RVA = "0xE37F84", Offset = "0xE37F84", VA = "0xE37F84")]
		public RFCollapse()
		{
		}

		[Token(Token = "0x60021F1")]
		[Address(RVA = "0xE37FB0", Offset = "0xE37FB0", VA = "0xE37FB0")]
		public static void StartCollapse(RayfireRigid scr)
		{
		}

		[Token(Token = "0x60021F2")]
		[Address(RVA = "0xE3804C", Offset = "0xE3804C", VA = "0xE3804C")]
		[IteratorStateMachine(typeof(<CollapseCor>d__9))]
		private IEnumerator CollapseCor(RayfireRigid scr)
		{
			return null;
		}

		[Token(Token = "0x60021F3")]
		[Address(RVA = "0xE38104", Offset = "0xE38104", VA = "0xE38104")]
		public static void StartCollapse(RayfireConnectivity scr)
		{
		}

		[Token(Token = "0x60021F4")]
		[Address(RVA = "0xE38220", Offset = "0xE38220", VA = "0xE38220")]
		public static void StopCollapse(RayfireConnectivity scr)
		{
		}

		[Token(Token = "0x60021F5")]
		[Address(RVA = "0xE38190", Offset = "0xE38190", VA = "0xE38190")]
		[IteratorStateMachine(typeof(<CollapseCor>d__12))]
		private IEnumerator CollapseCor(RayfireConnectivity scr)
		{
			return null;
		}

		[Token(Token = "0x60021F6")]
		[Address(RVA = "0xE38268", Offset = "0xE38268", VA = "0xE38268")]
		public static void AreaCollapse(RayfireRigid scr, int areaPercentage)
		{
		}

		[Token(Token = "0x60021F7")]
		[Address(RVA = "0xE38328", Offset = "0xE38328", VA = "0xE38328")]
		public static void SizeCollapse(RayfireRigid scr, int sizePercentage)
		{
		}

		[Token(Token = "0x60021F8")]
		[Address(RVA = "0xE382D0", Offset = "0xE382D0", VA = "0xE382D0")]
		public static void AreaCollapse(RayfireRigid scr, float minAreaValue)
		{
		}

		[Token(Token = "0x60021F9")]
		[Address(RVA = "0xE38390", Offset = "0xE38390", VA = "0xE38390")]
		public static void SizeCollapse(RayfireRigid scr, float minSizeValue)
		{
		}

		[Token(Token = "0x60021FA")]
		[Address(RVA = "0xE3898C", Offset = "0xE3898C", VA = "0xE3898C")]
		public static void RandomCollapse(RayfireRigid scr, int randomValue, int randomSeed)
		{
		}

		[Token(Token = "0x60021FB")]
		[Address(RVA = "0xE38630", Offset = "0xE38630", VA = "0xE38630")]
		private static void CollapseCluster(RayfireRigid scr)
		{
		}

		[Token(Token = "0x60021FC")]
		[Address(RVA = "0xE38E2C", Offset = "0xE38E2C", VA = "0xE38E2C")]
		public static void AreaCollapse(RayfireConnectivity connectivity, int areaPercentage)
		{
		}

		[Token(Token = "0x60021FD")]
		[Address(RVA = "0xE38ED8", Offset = "0xE38ED8", VA = "0xE38ED8")]
		public static void SizeCollapse(RayfireConnectivity connectivity, int sizePercentage)
		{
		}

		[Token(Token = "0x60021FE")]
		[Address(RVA = "0xE38E8C", Offset = "0xE38E8C", VA = "0xE38E8C")]
		public static void AreaCollapse(RayfireConnectivity connectivity, float areaValue)
		{
		}

		[Token(Token = "0x60021FF")]
		[Address(RVA = "0xE38F38", Offset = "0xE38F38", VA = "0xE38F38")]
		public static void SizeCollapse(RayfireConnectivity connectivity, float sizeValue)
		{
		}

		[Token(Token = "0x6002200")]
		[Address(RVA = "0xE38F84", Offset = "0xE38F84", VA = "0xE38F84")]
		public static void RandomCollapse(RayfireConnectivity connectivity, int randomPercentage, int seedValue)
		{
		}

		[Token(Token = "0x6002201")]
		[Address(RVA = "0xE383E8", Offset = "0xE383E8", VA = "0xE383E8")]
		private static int RemNeibByArea(RFCluster cluster, float minArea)
		{
			return default(int);
		}

		[Token(Token = "0x6002202")]
		[Address(RVA = "0xE38788", Offset = "0xE38788", VA = "0xE38788")]
		private static int RemNeibBySize(RFCluster cluster, float minSize)
		{
			return default(int);
		}

		[Token(Token = "0x6002203")]
		[Address(RVA = "0xE389E4", Offset = "0xE389E4", VA = "0xE389E4")]
		private static int RemNeibRandom(RFCluster cluster, int percent, int seed)
		{
			return default(int);
		}

		[Token(Token = "0x6002204")]
		[Address(RVA = "0xE38FE0", Offset = "0xE38FE0", VA = "0xE38FE0")]
		public static void SetRangeData(RFCluster cluster, int perc = 0, int seed = 0)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20005A8")]
	public class RFDamage
	{
		[Token(Token = "0x4002038")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[Tooltip("Allows to demolish object by it's own floating Damage value.")]
		[Header("  Properties")]
		[Space(2f)]
		public bool enable;

		[Token(Token = "0x4002039")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[Tooltip("Defines maximum allowed damage for object to be demolished.")]
		[Space(2f)]
		public float maxDamage;

		[Token(Token = "0x400203A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Tooltip("Shows current damage value. Can be increased by public method: \nApplyDamage(float damageValue, Vector3 damagePosition)")]
		[Space(2f)]
		public float currentDamage;

		[Token(Token = "0x400203B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[Header("  Collisions")]
		[Space(2f)]
		[Tooltip("Allows to accumulate damage value by collisions during dynamic simulation.")]
		public bool collect;

		[Token(Token = "0x400203C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[Space(2f)]
		[Tooltip("Multiplier for every collision damage.")]
		[Range(0.01f, 5f)]
		public float multiplier;

		[Token(Token = "0x6002211")]
		[Address(RVA = "0xE39710", Offset = "0xE39710", VA = "0xE39710")]
		public RFDamage()
		{
		}

		[Token(Token = "0x6002212")]
		[Address(RVA = "0xE3974C", Offset = "0xE3974C", VA = "0xE3974C")]
		public void CopyFrom(RFDamage damage)
		{
		}

		[Token(Token = "0x6002213")]
		[Address(RVA = "0xE39744", Offset = "0xE39744", VA = "0xE39744")]
		public void Reset()
		{
		}

		[Token(Token = "0x6002214")]
		[Address(RVA = "0xE39784", Offset = "0xE39784", VA = "0xE39784")]
		public static bool Apply(RayfireRigid scr, float damageValue)
		{
			return default(bool);
		}

		[Token(Token = "0x6002215")]
		[Address(RVA = "0xE397CC", Offset = "0xE397CC", VA = "0xE397CC")]
		public static bool ApplyDamage(RayfireRigid scr, float damageValue, Vector3 damagePoint, float damageRadius = 0f)
		{
			return default(bool);
		}
	}
	[Serializable]
	[Token(Token = "0x20005A9")]
	public class RFDemolitionCluster
	{
		[Token(Token = "0x20005AA")]
		public enum RFDetachType
		{
			[Token(Token = "0x4002055")]
			RatioToSize = 0,
			[Token(Token = "0x4002056")]
			WorldUnits = 3
		}

		[Token(Token = "0x400203D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[Space(3f)]
		[Header("  Properties")]
		[Tooltip("Defines Connectivity algorithm for clusters.")]
		public ConnectivityType connectivity;

		[Token(Token = "0x400203E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[Header("  Connection Filters")]
		[Space(3f)]
		[Range(0f, 1f)]
		public float minimumArea;

		[Token(Token = "0x400203F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Space(2f)]
		[Range(0f, 10f)]
		public float minimumSize;

		[Token(Token = "0x4002040")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[Range(0f, 100f)]
		[Space(2f)]
		public int percentage;

		[Token(Token = "0x4002041")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[Space(2f)]
		[Range(0f, 100f)]
		public int seed;

		[Token(Token = "0x4002042")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[Header("  Demolition Distance")]
		[Space(3f)]
		public RFDetachType type;

		[Token(Token = "0x4002043")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[Tooltip("Defines distance from contact point in percentage relative to object's size which will be detached at contact.")]
		[Space(2f)]
		[Range(1f, 100f)]
		public int ratio;

		[Token(Token = "0x4002044")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[Range(0f, 10f)]
		[Space(2f)]
		public float units;

		[Token(Token = "0x4002045")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[Header("  Shards")]
		[Space(3f)]
		[Range(0f, 100f)]
		public int shardArea;

		[Token(Token = "0x4002046")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[Space(2f)]
		public bool shardDemolition;

		[Token(Token = "0x4002047")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[Range(2f, 20f)]
		[Header("  Clusters")]
		[Space(3f)]
		public int minAmount;

		[Token(Token = "0x4002048")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[Range(2f, 20f)]
		[Space(2f)]
		public int maxAmount;

		[Token(Token = "0x4002049")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[Space(2f)]
		public bool demolishable;

		[Token(Token = "0x400204A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[Space(3f)]
		[Header("  Collapse")]
		public RFCollapse collapse;

		[Token(Token = "0x400204B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[HideInInspector]
		public int clsCount;

		[Token(Token = "0x400204C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[HideInInspector]
		public RFCluster cluster;

		[Token(Token = "0x400204D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[HideInInspector]
		public List<RFCluster> minorClusters;

		[Token(Token = "0x400204E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[HideInInspector]
		public bool cn;

		[Token(Token = "0x400204F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x69")]
		[HideInInspector]
		public bool nd;

		[Token(Token = "0x4002050")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		[HideInInspector]
		public int am;

		[NonSerialized]
		[Token(Token = "0x4002051")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public RFBackupCluster backup;

		[NonSerialized]
		[Token(Token = "0x4002052")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public float damageRadius;

		[Token(Token = "0x4002053")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static string nameApp;

		[Token(Token = "0x170001DC")]
		public bool HasChildClusters
		{
			[Token(Token = "0x6002233")]
			[Address(RVA = "0xE3EE1C", Offset = "0xE3EE1C", VA = "0xE3EE1C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001DD")]
		public bool HasMinorClusters
		{
			[Token(Token = "0x6002234")]
			[Address(RVA = "0xE3A360", Offset = "0xE3A360", VA = "0xE3A360")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6002216")]
		[Address(RVA = "0xE3990C", Offset = "0xE3990C", VA = "0xE3990C")]
		public RFDemolitionCluster()
		{
		}

		[Token(Token = "0x6002217")]
		[Address(RVA = "0xE3996C", Offset = "0xE3996C", VA = "0xE3996C")]
		public void CopyFrom(RFDemolitionCluster demolition)
		{
		}

		[Token(Token = "0x6002218")]
		[Address(RVA = "0xE39964", Offset = "0xE39964", VA = "0xE39964")]
		public void Reset()
		{
		}

		[Token(Token = "0x6002219")]
		[Address(RVA = "0xE399C4", Offset = "0xE399C4", VA = "0xE399C4")]
		public static bool SetupCluster(RayfireRigid scr)
		{
			return default(bool);
		}

		[Token(Token = "0x600221A")]
		[Address(RVA = "0xE39CB4", Offset = "0xE39CB4", VA = "0xE39CB4")]
		public static bool Clusterize(RayfireRigid scr)
		{
			return default(bool);
		}

		[Token(Token = "0x600221B")]
		[Address(RVA = "0xE39E10", Offset = "0xE39E10", VA = "0xE39E10")]
		private static void ClusterizeNested(RayfireRigid scr)
		{
		}

		[Token(Token = "0x600221C")]
		[Address(RVA = "0xE3A3B4", Offset = "0xE3A3B4", VA = "0xE3A3B4")]
		private static void ClusterizeNestedRecursive(RayfireRigid scr, Transform transform, RFCluster cluster, ConnectivityType connectivity)
		{
		}

		[Token(Token = "0x600221D")]
		[Address(RVA = "0xE3A054", Offset = "0xE3A054", VA = "0xE3A054")]
		private static void ClusterizeConnected(RayfireRigid scr)
		{
		}

		[Token(Token = "0x600221E")]
		[Address(RVA = "0xE3A7EC", Offset = "0xE3A7EC", VA = "0xE3A7EC")]
		public static bool DemolishCluster(RayfireRigid scr)
		{
			return default(bool);
		}

		[Token(Token = "0x600221F")]
		[Address(RVA = "0xE38C60", Offset = "0xE38C60", VA = "0xE38C60")]
		public static void PostDemolitionCluster(RayfireRigid scr, List<RFShard> detachShards)
		{
		}

		[Token(Token = "0x6002220")]
		[Address(RVA = "0xE3A8F0", Offset = "0xE3A8F0", VA = "0xE3A8F0")]
		private static void DemolishClusterNested(RayfireRigid scr)
		{
		}

		[Token(Token = "0x6002221")]
		[Address(RVA = "0xE3AAC4", Offset = "0xE3AAC4", VA = "0xE3AAC4")]
		public static List<RFShard> DemolishConnectedCluster(RayfireRigid scr, [Optional] Collider[] detachColliders)
		{
			return null;
		}

		[Token(Token = "0x6002222")]
		[Address(RVA = "0xE3B530", Offset = "0xE3B530", VA = "0xE3B530")]
		private static Collider[] GetDetachColliders(RayfireRigid scr)
		{
			return null;
		}

		[Token(Token = "0x6002223")]
		[Address(RVA = "0xE3B6F0", Offset = "0xE3B6F0", VA = "0xE3B6F0")]
		private static List<RFShard> DetachShardsByColliders(RayfireRigid scr, Collider[] detachColliders)
		{
			return null;
		}

		[Token(Token = "0x6002224")]
		[Address(RVA = "0xE3BF1C", Offset = "0xE3BF1C", VA = "0xE3BF1C")]
		public static void SliceConnectedCluster(RayfireRigid scr)
		{
		}

		[Token(Token = "0x6002225")]
		[Address(RVA = "0xE3C7B0", Offset = "0xE3C7B0", VA = "0xE3C7B0")]
		private static void SetupPlaneShards(RayfireRigid scr, List<RFShard> clusterShards, List<RFShard> detachShards)
		{
		}

		[Token(Token = "0x6002226")]
		[Address(RVA = "0xE3BB74", Offset = "0xE3BB74", VA = "0xE3BB74")]
		private static void ClusterizeDetachShards(RayfireRigid scr, List<RFShard> detachShards, int clusterAmount, int sortType)
		{
		}

		[Token(Token = "0x6002227")]
		[Address(RVA = "0xE3AC74", Offset = "0xE3AC74", VA = "0xE3AC74")]
		private static void CreateRigidShards(RayfireRigid scr, List<RFShard> detachShards)
		{
		}

		[Token(Token = "0x6002228")]
		[Address(RVA = "0xE3ADA8", Offset = "0xE3ADA8", VA = "0xE3ADA8")]
		private static void CreateChildClusters(RayfireRigid scr, List<RFCluster> childClusters)
		{
		}

		[Token(Token = "0x6002229")]
		[Address(RVA = "0xE3AEA0", Offset = "0xE3AEA0", VA = "0xE3AEA0")]
		private static void UpdateOriginalCluster(RayfireRigid scr)
		{
		}

		[Token(Token = "0x600222A")]
		[Address(RVA = "0xE3D458", Offset = "0xE3D458", VA = "0xE3D458")]
		public static void CreateClusterRuntime(RayfireRigid scr, RFCluster cluster)
		{
		}

		[Token(Token = "0x600222B")]
		[Address(RVA = "0xE3CBD8", Offset = "0xE3CBD8", VA = "0xE3CBD8")]
		private static void DivideAllShards(RFCluster cluster, List<RFShard> detachShards, int amount)
		{
		}

		[Token(Token = "0x600222C")]
		[Address(RVA = "0xE3DFE8", Offset = "0xE3DFE8", VA = "0xE3DFE8")]
		private static void DivideShards(RFCluster cluster, RFCluster childCluster)
		{
		}

		[Token(Token = "0x600222D")]
		[Address(RVA = "0xE3E464", Offset = "0xE3E464", VA = "0xE3E464")]
		private static void DetachEdgeShards(RayfireRigid scr, RFCluster cluster, List<RFShard> detachShards, int edgeShardArea)
		{
		}

		[Token(Token = "0x600222E")]
		[Address(RVA = "0xE3D26C", Offset = "0xE3D26C", VA = "0xE3D26C")]
		private static void DetachOneNeibShards(List<RFCluster> childClusters, List<RFShard> detachShards, int edgeAmount, int startIndex)
		{
		}

		[Token(Token = "0x600222F")]
		[Address(RVA = "0xE3E754", Offset = "0xE3E754", VA = "0xE3E754")]
		private static void DetachOneNeibShard(RFCluster cls, List<RFShard> detachShards)
		{
		}

		[Token(Token = "0x6002230")]
		[Address(RVA = "0xE3D380", Offset = "0xE3D380", VA = "0xE3D380")]
		private static void AddRigidComponent(RayfireRigid scr, List<RFShard> shardList, Transform parent)
		{
		}

		[Token(Token = "0x6002231")]
		[Address(RVA = "0xE3E9C8", Offset = "0xE3E9C8", VA = "0xE3E9C8")]
		private static void AddRigidComponent(RayfireRigid scr, RFShard shard, Transform parent)
		{
		}

		[Token(Token = "0x6002232")]
		[Address(RVA = "0xE3ECE4", Offset = "0xE3ECE4", VA = "0xE3ECE4")]
		private static bool SameClusterCheck(RayfireRigid scr, List<RFShard> detachShards, int shardAmount, int clusterAmount)
		{
			return default(bool);
		}
	}
	[Serializable]
	[Token(Token = "0x20005AB")]
	public class RFDemolitionSkin
	{
		[Token(Token = "0x4002057")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public List<Transform> bones;

		[Token(Token = "0x4002058")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<SkinnedMeshRenderer> skins;

		[Token(Token = "0x4002059")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<SkinnedMeshRenderer> skins0;

		[Token(Token = "0x400205A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public List<SkinnedMeshRenderer> skins1;

		[Token(Token = "0x400205B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public List<SkinnedMeshRenderer> skins2;

		[Token(Token = "0x6002236")]
		[Address(RVA = "0xE3EEE8", Offset = "0xE3EEE8", VA = "0xE3EEE8")]
		public void SetupSkin(RayfireRigid rigid)
		{
		}

		[Token(Token = "0x6002237")]
		[Address(RVA = "0xE3EF94", Offset = "0xE3EF94", VA = "0xE3EF94")]
		public void SeparateSkins(Vector3 planeNormal, Vector3 planePoint)
		{
		}

		[Token(Token = "0x6002238")]
		[Address(RVA = "0xE3F1C8", Offset = "0xE3F1C8", VA = "0xE3F1C8")]
		public RFDemolitionSkin()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20005AC")]
	public class RFDemolitionMesh
	{
		[Token(Token = "0x20005AD")]
		public enum MeshInputType
		{
			[Token(Token = "0x4002070")]
			AtStart = 3,
			[Token(Token = "0x4002071")]
			AtInitialization = 6,
			[Token(Token = "0x4002072")]
			AtDemolition = 9
		}

		[Token(Token = "0x20005AE")]
		[CompilerGenerated]
		private sealed class <RuntimeCachingCor>d__30 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002073")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002074")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002075")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public RayfireRigid scr;

			[Token(Token = "0x4002076")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public RFDemolitionMesh <>4__this;

			[Token(Token = "0x4002077")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private bool <demolitionShouldLocal>5__2;

			[Token(Token = "0x4002078")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private List<int> <batchAmount>5__3;

			[Token(Token = "0x4002079")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private GameObject <tmRefGo>5__4;

			[Token(Token = "0x400207A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private List<Mesh> <meshesList>5__5;

			[Token(Token = "0x400207B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			private List<Vector3> <pivotsList>5__6;

			[Token(Token = "0x400207C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			private List<RFDictionary> <subList>5__7;

			[Token(Token = "0x400207D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			private int <i>5__8;

			[Token(Token = "0x170001DE")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600224A")]
				[Address(RVA = "0xE41834", Offset = "0xE41834", VA = "0xE41834", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001DF")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600224C")]
				[Address(RVA = "0xE4187C", Offset = "0xE4187C", VA = "0xE4187C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002247")]
			[Address(RVA = "0xE41254", Offset = "0xE41254", VA = "0xE41254")]
			[DebuggerHidden]
			public <RuntimeCachingCor>d__30(int <>1__state)
			{
			}

			[Token(Token = "0x6002248")]
			[Address(RVA = "0xE41370", Offset = "0xE41370", VA = "0xE41370", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002249")]
			[Address(RVA = "0xE41374", Offset = "0xE41374", VA = "0xE41374", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600224B")]
			[Address(RVA = "0xE4183C", Offset = "0xE4183C", VA = "0xE4183C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400205C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[Header("  Fragments")]
		[Space(3f)]
		[Tooltip("Defines amount of new fragments after demolition.")]
		[Range(3f, 300f)]
		public int amount;

		[Token(Token = "0x400205D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[Tooltip("Defines additional amount variation for object in percents.")]
		[Range(0f, 100f)]
		[Space(1f)]
		public int variation;

		[Token(Token = "0x400205E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Space(1f)]
		[Range(0.01f, 1f)]
		[Tooltip("Amount multiplier for next Depth level. Allows to decrease fragments amount of every next demolition level.")]
		public float depthFade;

		[Token(Token = "0x400205F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[Space(3f)]
		[Tooltip("Higher value allows to create more tiny fragments closer to collision contact point and bigger fragments far from it.")]
		[Range(0f, 1f)]
		public float contactBias;

		[Token(Token = "0x4002060")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[Space(1f)]
		[Tooltip("Defines Seed for fragmentation algorithm. Same Seed will produce same fragments for same object every time.")]
		[Range(1f, 50f)]
		public int seed;

		[Token(Token = "0x4002061")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[Tooltip("Allows to use RayFire Shatter properties for fragmentation. Works only if object has RayFire Shatter component.")]
		public bool useShatter;

		[Token(Token = "0x4002062")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[Space(3f)]
		[Tooltip("Allows to decrease runtime demolition time for mid and hi poly objects.")]
		[Header("  Advanced")]
		public MeshInputType meshInput;

		[Token(Token = "0x4002063")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public RFFragmentProperties properties;

		[Token(Token = "0x4002064")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public RFRuntimeCaching runtimeCaching;

		[NonSerialized]
		[Token(Token = "0x4002065")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public int badMesh;

		[NonSerialized]
		[Token(Token = "0x4002066")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public int shatterMode;

		[NonSerialized]
		[Token(Token = "0x4002067")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public int totalAmount;

		[NonSerialized]
		[Token(Token = "0x4002068")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public int innerSubId;

		[NonSerialized]
		[Token(Token = "0x4002069")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public bool compressPrefab;

		[Token(Token = "0x400206A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[HideInInspector]
		public Quaternion cacheRotationStart;

		[Token(Token = "0x400206B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[HideInInspector]
		public Mesh mesh;

		[Token(Token = "0x400206C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[HideInInspector]
		public RFShatter rfShatter;

		[Token(Token = "0x400206D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[HideInInspector]
		public RayfireShatter scrShatter;

		[Token(Token = "0x400206E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static string fragmentStr;

		[Token(Token = "0x6002239")]
		[Address(RVA = "0xE3F1D0", Offset = "0xE3F1D0", VA = "0xE3F1D0")]
		public RFDemolitionMesh()
		{
		}

		[Token(Token = "0x600223A")]
		[Address(RVA = "0xE3F37C", Offset = "0xE3F37C", VA = "0xE3F37C")]
		public void CopyFrom(RFDemolitionMesh demolition)
		{
		}

		[Token(Token = "0x600223B")]
		[Address(RVA = "0xE3F370", Offset = "0xE3F370", VA = "0xE3F370")]
		public void Reset()
		{
		}

		[Token(Token = "0x600223C")]
		[Address(RVA = "0xE3F4B4", Offset = "0xE3F4B4", VA = "0xE3F4B4")]
		public static bool DemolishMesh(RayfireRigid scr)
		{
			return default(bool);
		}

		[Token(Token = "0x600223D")]
		[Address(RVA = "0xE3F730", Offset = "0xE3F730", VA = "0xE3F730")]
		public static List<RayfireRigid> CreateFragments(RayfireRigid scr)
		{
			return null;
		}

		[Token(Token = "0x600223E")]
		[Address(RVA = "0xE40560", Offset = "0xE40560", VA = "0xE40560")]
		public static void SliceMesh(RayfireRigid scr)
		{
		}

		[Token(Token = "0x600223F")]
		[Address(RVA = "0xE40A80", Offset = "0xE40A80", VA = "0xE40A80")]
		public static List<RayfireRigid> CreateSlices(RayfireRigid scr)
		{
			return null;
		}

		[Token(Token = "0x6002240")]
		[Address(RVA = "0xE400BC", Offset = "0xE400BC", VA = "0xE400BC")]
		private static void CacheRuntime(RayfireRigid scr)
		{
		}

		[Token(Token = "0x6002241")]
		[Address(RVA = "0xE41114", Offset = "0xE41114", VA = "0xE41114")]
		public static void CacheInstant(RayfireRigid scr)
		{
		}

		[Token(Token = "0x6002242")]
		[Address(RVA = "0xE402FC", Offset = "0xE402FC", VA = "0xE402FC")]
		public int GetLayer(RayfireRigid scr)
		{
			return default(int);
		}

		[Token(Token = "0x6002243")]
		[Address(RVA = "0xE411C4", Offset = "0xE411C4", VA = "0xE411C4")]
		[IteratorStateMachine(typeof(<RuntimeCachingCor>d__30))]
		public IEnumerator RuntimeCachingCor(RayfireRigid scr)
		{
			return null;
		}

		[Token(Token = "0x6002244")]
		[Address(RVA = "0xE4127C", Offset = "0xE4127C", VA = "0xE4127C")]
		public void StopRuntimeCaching()
		{
		}

		[Token(Token = "0x6002245")]
		[Address(RVA = "0xE412A4", Offset = "0xE412A4", VA = "0xE412A4")]
		private void ResetRuntimeCaching(RayfireRigid scr, GameObject tmRefGo)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20005AF")]
	public class RFFade
	{
		[Token(Token = "0x20005B0")]
		public enum RFFadeLifeType
		{
			[Token(Token = "0x400208A")]
			ByLifeTime = 4,
			[Token(Token = "0x400208B")]
			BySimulationAndLifeTime = 8
		}

		[Token(Token = "0x20005B1")]
		[CompilerGenerated]
		private sealed class <LivingCor>d__19 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400208C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400208D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400208E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public RayfireRigid scr;

			[Token(Token = "0x400208F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public RFFade <>4__this;

			[Token(Token = "0x170001E0")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002260")]
				[Address(RVA = "0xE42270", Offset = "0xE42270", VA = "0xE42270", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001E1")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002262")]
				[Address(RVA = "0xE422B8", Offset = "0xE422B8", VA = "0xE422B8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600225D")]
			[Address(RVA = "0xE41ADC", Offset = "0xE41ADC", VA = "0xE41ADC")]
			[DebuggerHidden]
			public <LivingCor>d__19(int <>1__state)
			{
			}

			[Token(Token = "0x600225E")]
			[Address(RVA = "0xE4204C", Offset = "0xE4204C", VA = "0xE4204C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600225F")]
			[Address(RVA = "0xE42050", Offset = "0xE42050", VA = "0xE42050", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002261")]
			[Address(RVA = "0xE42278", Offset = "0xE42278", VA = "0xE42278", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20005B2")]
		[CompilerGenerated]
		private sealed class <LivingCor>d__20 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002090")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002091")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002092")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public RayfireRigidRoot root;

			[Token(Token = "0x4002093")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public RFShard shard;

			[Token(Token = "0x170001E2")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002266")]
				[Address(RVA = "0xE424DC", Offset = "0xE424DC", VA = "0xE424DC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001E3")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002268")]
				[Address(RVA = "0xE42524", Offset = "0xE42524", VA = "0xE42524", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002263")]
			[Address(RVA = "0xE41B04", Offset = "0xE41B04", VA = "0xE41B04")]
			[DebuggerHidden]
			public <LivingCor>d__20(int <>1__state)
			{
			}

			[Token(Token = "0x6002264")]
			[Address(RVA = "0xE422C0", Offset = "0xE422C0", VA = "0xE422C0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002265")]
			[Address(RVA = "0xE422C4", Offset = "0xE422C4", VA = "0xE422C4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002267")]
			[Address(RVA = "0xE424E4", Offset = "0xE424E4", VA = "0xE424E4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20005B3")]
		[CompilerGenerated]
		private sealed class <FadeMoveDown>d__23 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002094")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002095")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002096")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public RayfireRigid rigid;

			[Token(Token = "0x170001E4")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600226C")]
				[Address(RVA = "0xE42770", Offset = "0xE42770", VA = "0xE42770", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001E5")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600226E")]
				[Address(RVA = "0xE427B8", Offset = "0xE427B8", VA = "0xE427B8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002269")]
			[Address(RVA = "0xE41D7C", Offset = "0xE41D7C", VA = "0xE41D7C")]
			[DebuggerHidden]
			public <FadeMoveDown>d__23(int <>1__state)
			{
			}

			[Token(Token = "0x600226A")]
			[Address(RVA = "0xE4252C", Offset = "0xE4252C", VA = "0xE4252C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600226B")]
			[Address(RVA = "0xE42530", Offset = "0xE42530", VA = "0xE42530", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600226D")]
			[Address(RVA = "0xE42778", Offset = "0xE42778", VA = "0xE42778", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20005B4")]
		[CompilerGenerated]
		private sealed class <FadeMoveDown>d__24 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002097")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002098")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002099")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public RFShard shard;

			[Token(Token = "0x400209A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public RayfireRigidRoot root;

			[Token(Token = "0x170001E6")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002272")]
				[Address(RVA = "0xE42964", Offset = "0xE42964", VA = "0xE42964", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001E7")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002274")]
				[Address(RVA = "0xE429AC", Offset = "0xE429AC", VA = "0xE429AC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600226F")]
			[Address(RVA = "0xE41E34", Offset = "0xE41E34", VA = "0xE41E34")]
			[DebuggerHidden]
			public <FadeMoveDown>d__24(int <>1__state)
			{
			}

			[Token(Token = "0x6002270")]
			[Address(RVA = "0xE427C0", Offset = "0xE427C0", VA = "0xE427C0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002271")]
			[Address(RVA = "0xE427C4", Offset = "0xE427C4", VA = "0xE427C4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002273")]
			[Address(RVA = "0xE4296C", Offset = "0xE4296C", VA = "0xE4296C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20005B5")]
		[CompilerGenerated]
		private sealed class <FadeScaleDownCor>d__25 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400209B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400209C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400209D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public RayfireRigid scr;

			[Token(Token = "0x400209E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <waitStep>5__2;

			[Token(Token = "0x400209F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private int <steps>5__3;

			[Token(Token = "0x40020A0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private Vector3 <vectorStep>5__4;

			[Token(Token = "0x170001E8")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002278")]
				[Address(RVA = "0xE42B7C", Offset = "0xE42B7C", VA = "0xE42B7C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001E9")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600227A")]
				[Address(RVA = "0xE42BC4", Offset = "0xE42BC4", VA = "0xE42BC4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002275")]
			[Address(RVA = "0xE41ED0", Offset = "0xE41ED0", VA = "0xE41ED0")]
			[DebuggerHidden]
			public <FadeScaleDownCor>d__25(int <>1__state)
			{
			}

			[Token(Token = "0x6002276")]
			[Address(RVA = "0xE429B4", Offset = "0xE429B4", VA = "0xE429B4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002277")]
			[Address(RVA = "0xE429B8", Offset = "0xE429B8", VA = "0xE429B8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002279")]
			[Address(RVA = "0xE42B84", Offset = "0xE42B84", VA = "0xE42B84", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20005B6")]
		[CompilerGenerated]
		private sealed class <FadeScaleDownCor>d__26 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40020A1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40020A2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40020A3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public RayfireRigidRoot root;

			[Token(Token = "0x40020A4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public RFShard shard;

			[Token(Token = "0x40020A5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <waitStep>5__2;

			[Token(Token = "0x40020A6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private int <steps>5__3;

			[Token(Token = "0x40020A7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private Vector3 <vectorStep>5__4;

			[Token(Token = "0x170001EA")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600227E")]
				[Address(RVA = "0xE42DEC", Offset = "0xE42DEC", VA = "0xE42DEC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001EB")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002280")]
				[Address(RVA = "0xE42E34", Offset = "0xE42E34", VA = "0xE42E34", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600227B")]
			[Address(RVA = "0xE41F88", Offset = "0xE41F88", VA = "0xE41F88")]
			[DebuggerHidden]
			public <FadeScaleDownCor>d__26(int <>1__state)
			{
			}

			[Token(Token = "0x600227C")]
			[Address(RVA = "0xE42BCC", Offset = "0xE42BCC", VA = "0xE42BCC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600227D")]
			[Address(RVA = "0xE42BD0", Offset = "0xE42BD0", VA = "0xE42BD0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600227F")]
			[Address(RVA = "0xE42DF4", Offset = "0xE42DF4", VA = "0xE42DF4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20005B7")]
		[CompilerGenerated]
		private sealed class <SimulationCor>d__27 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40020A8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40020A9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40020AA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Transform tm;

			[Token(Token = "0x40020AB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <timeStep>5__2;

			[Token(Token = "0x40020AC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private Vector3 <oldPos>5__3;

			[Token(Token = "0x40020AD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private float <distanceThreshold>5__4;

			[Token(Token = "0x170001EC")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002284")]
				[Address(RVA = "0xE42FDC", Offset = "0xE42FDC", VA = "0xE42FDC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001ED")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002286")]
				[Address(RVA = "0xE43024", Offset = "0xE43024", VA = "0xE43024", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002281")]
			[Address(RVA = "0xE42024", Offset = "0xE42024", VA = "0xE42024")]
			[DebuggerHidden]
			public <SimulationCor>d__27(int <>1__state)
			{
			}

			[Token(Token = "0x6002282")]
			[Address(RVA = "0xE42E3C", Offset = "0xE42E3C", VA = "0xE42E3C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002283")]
			[Address(RVA = "0xE42E40", Offset = "0xE42E40", VA = "0xE42E40", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002285")]
			[Address(RVA = "0xE42FE4", Offset = "0xE42FE4", VA = "0xE42FE4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400207E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[Header("  Initiate")]
		[Space(2f)]
		public bool onDemolition;

		[Token(Token = "0x400207F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		public bool onActivation;

		[Token(Token = "0x4002080")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[Header("  Life")]
		[Space(2f)]
		public RFFadeLifeType lifeType;

		[Token(Token = "0x4002081")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Range(0f, 90f)]
		public float lifeTime;

		[Token(Token = "0x4002082")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[Range(0f, 20f)]
		public float lifeVariation;

		[Token(Token = "0x4002083")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[Header("  Fade")]
		[Space(2f)]
		public FadeType fadeType;

		[Token(Token = "0x4002084")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[Range(1f, 20f)]
		public float fadeTime;

		[Token(Token = "0x4002085")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[Range(0f, 20f)]
		public float sizeFilter;

		[NonSerialized]
		[Token(Token = "0x4002086")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public int state;

		[NonSerialized]
		[Token(Token = "0x4002087")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool stop;

		[NonSerialized]
		[Token(Token = "0x4002088")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public Vector3 position;

		[Token(Token = "0x600224D")]
		[Address(RVA = "0xE41884", Offset = "0xE41884", VA = "0xE41884")]
		public RFFade()
		{
		}

		[Token(Token = "0x600224E")]
		[Address(RVA = "0xE418D0", Offset = "0xE418D0", VA = "0xE418D0")]
		public void CopyFrom(RFFade fade)
		{
		}

		[Token(Token = "0x600224F")]
		[Address(RVA = "0xE418C4", Offset = "0xE418C4", VA = "0xE418C4")]
		public void Reset()
		{
		}

		[Token(Token = "0x6002250")]
		[Address(RVA = "0xE3B3E8", Offset = "0xE3B3E8", VA = "0xE3B3E8")]
		public void DemolitionFade(List<RayfireRigid> fadeObjects)
		{
		}

		[Token(Token = "0x6002251")]
		[Address(RVA = "0xE41910", Offset = "0xE41910", VA = "0xE41910")]
		public static void Fade(RayfireRigid scr)
		{
		}

		[Token(Token = "0x6002252")]
		[Address(RVA = "0xE35944", Offset = "0xE35944", VA = "0xE35944")]
		public static void Fade(RayfireRigidRoot scr, RFShard shard)
		{
		}

		[Token(Token = "0x6002253")]
		[Address(RVA = "0xE41978", Offset = "0xE41978", VA = "0xE41978")]
		private static bool FadeCheck(GameObject go, RFFade fading)
		{
			return default(bool);
		}

		[Token(Token = "0x6002254")]
		[Address(RVA = "0xE419BC", Offset = "0xE419BC", VA = "0xE419BC")]
		[IteratorStateMachine(typeof(<LivingCor>d__19))]
		private IEnumerator LivingCor(RayfireRigid scr)
		{
			return null;
		}

		[Token(Token = "0x6002255")]
		[Address(RVA = "0xE41A4C", Offset = "0xE41A4C", VA = "0xE41A4C")]
		[IteratorStateMachine(typeof(<LivingCor>d__20))]
		private IEnumerator LivingCor(RayfireRigidRoot root, RFShard shard)
		{
			return null;
		}

		[Token(Token = "0x6002256")]
		[Address(RVA = "0xE41B2C", Offset = "0xE41B2C", VA = "0xE41B2C")]
		private static void FadeExclude(RayfireRigid rigid)
		{
		}

		[Token(Token = "0x6002257")]
		[Address(RVA = "0xE41C38", Offset = "0xE41C38", VA = "0xE41C38")]
		private static void FadeExclude(RayfireRigidRoot root, RFShard shard)
		{
		}

		[Token(Token = "0x6002258")]
		[Address(RVA = "0xE41D08", Offset = "0xE41D08", VA = "0xE41D08")]
		[IteratorStateMachine(typeof(<FadeMoveDown>d__23))]
		private static IEnumerator FadeMoveDown(RayfireRigid rigid)
		{
			return null;
		}

		[Token(Token = "0x6002259")]
		[Address(RVA = "0xE41DA4", Offset = "0xE41DA4", VA = "0xE41DA4")]
		[IteratorStateMachine(typeof(<FadeMoveDown>d__24))]
		private static IEnumerator FadeMoveDown(RayfireRigidRoot root, RFShard shard)
		{
			return null;
		}

		[Token(Token = "0x600225A")]
		[Address(RVA = "0xE41E5C", Offset = "0xE41E5C", VA = "0xE41E5C")]
		[IteratorStateMachine(typeof(<FadeScaleDownCor>d__25))]
		private static IEnumerator FadeScaleDownCor(RayfireRigid scr)
		{
			return null;
		}

		[Token(Token = "0x600225B")]
		[Address(RVA = "0xE41EF8", Offset = "0xE41EF8", VA = "0xE41EF8")]
		[IteratorStateMachine(typeof(<FadeScaleDownCor>d__26))]
		private static IEnumerator FadeScaleDownCor(RayfireRigidRoot root, RFShard shard)
		{
			return null;
		}

		[Token(Token = "0x600225C")]
		[Address(RVA = "0xE41FB0", Offset = "0xE41FB0", VA = "0xE41FB0")]
		[IteratorStateMachine(typeof(<SimulationCor>d__27))]
		private static IEnumerator SimulationCor(Transform tm)
		{
			return null;
		}
	}
	[Serializable]
	[Token(Token = "0x20005B8")]
	public class RFFragmentProperties
	{
		[Token(Token = "0x40020AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[Space(2f)]
		[Header("  Collider")]
		public RFColliderType colliderType;

		[Token(Token = "0x40020AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[Range(0f, 10f)]
		[Tooltip("Fragments with size less than this value will not get collider")]
		public float sizeFilter;

		[Token(Token = "0x40020B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Tooltip("Detach all not connected with each other faces into separate meshes.")]
		[Space(2f)]
		[Header("  Mesh Ops")]
		public bool decompose;

		[Token(Token = "0x40020B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		[Tooltip("Remove collier vertices to decrease amount of triangles")]
		public bool removeCollinear;

		[Token(Token = "0x40020B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[Header("  Custom Layer")]
		[Tooltip("Custom layer for fragments")]
		[Space(2f)]
		public string layer;

		[Token(Token = "0x6002287")]
		[Address(RVA = "0xE3F310", Offset = "0xE3F310", VA = "0xE3F310")]
		public RFFragmentProperties()
		{
		}

		[Token(Token = "0x6002288")]
		[Address(RVA = "0xE3F484", Offset = "0xE3F484", VA = "0xE3F484")]
		public void CopyFrom(RFFragmentProperties fragmentProperties)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20005B9")]
	public class RFLimitations
	{
		[Token(Token = "0x20005BA")]
		[CompilerGenerated]
		private sealed class <DemolishableCor>d__25 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40020C9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40020CA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40020CB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public RFLimitations <>4__this;

			[Token(Token = "0x40020CC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public RayfireRigid scr;

			[Token(Token = "0x170001EE")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002296")]
				[Address(RVA = "0xE44F60", Offset = "0xE44F60", VA = "0xE44F60", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001EF")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002298")]
				[Address(RVA = "0xE44FA8", Offset = "0xE44FA8", VA = "0xE44FA8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002293")]
			[Address(RVA = "0xE43248", Offset = "0xE43248", VA = "0xE43248")]
			[DebuggerHidden]
			public <DemolishableCor>d__25(int <>1__state)
			{
			}

			[Token(Token = "0x6002294")]
			[Address(RVA = "0xE44E48", Offset = "0xE44E48", VA = "0xE44E48", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002295")]
			[Address(RVA = "0xE44E4C", Offset = "0xE44E4C", VA = "0xE44E4C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002297")]
			[Address(RVA = "0xE44F68", Offset = "0xE44F68", VA = "0xE44F68", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40020B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[Tooltip("Local Object solidity multiplier for object. Low Solidity makes object more fragile.")]
		[Range(0f, 10f)]
		public float solidity;

		[Token(Token = "0x40020B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[Space(1f)]
		[Range(0f, 7f)]
		[Tooltip("Defines how deep object can be demolished. Depth is limitless if set to 0.")]
		public int depth;

		[Token(Token = "0x40020B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Space(1f)]
		[Tooltip("Safe time. Measures in seconds and allows to prevent fragments from being demolished right after they were just created.")]
		[Range(0.05f, 10f)]
		public float time;

		[Token(Token = "0x40020B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[Range(0.01f, 5f)]
		[Space(1f)]
		[Tooltip("Prevent objects with bounding box size less than defined value to be demolished.")]
		public float size;

		[Token(Token = "0x40020B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[Space(1f)]
		[Tooltip("Object will be demolished only if it is visible to any camera including scene camera.")]
		public bool visible;

		[Token(Token = "0x40020B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		[Tooltip("Allows object to be sliced by object with RayFire Blade component.")]
		public bool sliceByBlade;

		[NonSerialized]
		[Token(Token = "0x40020B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public List<Vector3> slicePlanes;

		[NonSerialized]
		[Token(Token = "0x40020BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public ContactPoint contactPoint;

		[NonSerialized]
		[Token(Token = "0x40020BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public Vector3 contactVector3;

		[NonSerialized]
		[Token(Token = "0x40020BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Vector3 contactNormal;

		[NonSerialized]
		[Token(Token = "0x40020BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public bool demolitionShould;

		[NonSerialized]
		[Token(Token = "0x40020BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6D")]
		public bool demolished;

		[NonSerialized]
		[Token(Token = "0x40020BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public float birthTime;

		[NonSerialized]
		[Token(Token = "0x40020C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		public float bboxSize;

		[NonSerialized]
		[Token(Token = "0x40020C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public int currentDepth;

		[NonSerialized]
		[Token(Token = "0x40020C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		public bool demolishableCorState;

		[NonSerialized]
		[Token(Token = "0x40020C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public float sliceForce;

		[NonSerialized]
		[Token(Token = "0x40020C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		public bool affectInactive;

		[NonSerialized]
		[Token(Token = "0x40020C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public RayfireRigid ancestor;

		[NonSerialized]
		[Token(Token = "0x40020C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public List<RayfireRigid> descendants;

		[Token(Token = "0x40020C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[HideInInspector]
		public Bounds bound;

		[Token(Token = "0x40020C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static string rootStr;

		[Token(Token = "0x6002289")]
		[Address(RVA = "0xE4302C", Offset = "0xE4302C", VA = "0xE4302C")]
		public RFLimitations()
		{
		}

		[Token(Token = "0x600228A")]
		[Address(RVA = "0xE4318C", Offset = "0xE4318C", VA = "0xE4318C")]
		public void CopyFrom(RFLimitations limitations)
		{
		}

		[Token(Token = "0x600228B")]
		[Address(RVA = "0xE43094", Offset = "0xE43094", VA = "0xE43094")]
		public void Reset()
		{
		}

		[Token(Token = "0x600228C")]
		[Address(RVA = "0xE431B8", Offset = "0xE431B8", VA = "0xE431B8")]
		[IteratorStateMachine(typeof(<DemolishableCor>d__25))]
		public IEnumerator DemolishableCor(RayfireRigid scr)
		{
			return null;
		}

		[Token(Token = "0x600228D")]
		[Address(RVA = "0xE43270", Offset = "0xE43270", VA = "0xE43270")]
		public static void Checks(RayfireRigid scr)
		{
		}

		[Token(Token = "0x600228E")]
		[Address(RVA = "0xE44AC4", Offset = "0xE44AC4", VA = "0xE44AC4")]
		public static void SetBound(RayfireRigid scr)
		{
		}

		[Token(Token = "0x600228F")]
		[Address(RVA = "0xE44BF0", Offset = "0xE44BF0", VA = "0xE44BF0")]
		public static void SetAncestor(RayfireRigid scr)
		{
		}

		[Token(Token = "0x6002290")]
		[Address(RVA = "0xE44D28", Offset = "0xE44D28", VA = "0xE44D28")]
		public static void SetDescendants(RayfireRigid scr)
		{
		}

		[Token(Token = "0x6002291")]
		[Address(RVA = "0xE4018C", Offset = "0xE4018C", VA = "0xE4018C")]
		public static void CreateRoot(RayfireRigid rfScr)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20005BB")]
	public class RFPhysic
	{
		[Token(Token = "0x20005BC")]
		[CompilerGenerated]
		private sealed class <PhysicsDataCor>d__50 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40020E4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40020E5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40020E6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public RFPhysic <>4__this;

			[Token(Token = "0x40020E7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public RayfireRigid scr;

			[Token(Token = "0x170001F4")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60022BD")]
				[Address(RVA = "0xE47A10", Offset = "0xE47A10", VA = "0xE47A10", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001F5")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60022BF")]
				[Address(RVA = "0xE47A58", Offset = "0xE47A58", VA = "0xE47A58", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60022BA")]
			[Address(RVA = "0xE4784C", Offset = "0xE4784C", VA = "0xE4784C")]
			[DebuggerHidden]
			public <PhysicsDataCor>d__50(int <>1__state)
			{
			}

			[Token(Token = "0x60022BB")]
			[Address(RVA = "0xE47874", Offset = "0xE47874", VA = "0xE47874", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60022BC")]
			[Address(RVA = "0xE47878", Offset = "0xE47878", VA = "0xE47878", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60022BE")]
			[Address(RVA = "0xE47A18", Offset = "0xE47A18", VA = "0xE47A18", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40020CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[Header("  Physic Material")]
		[Space(3f)]
		[Tooltip("Material preset with predefined density, friction, elasticity and solidity. Can be edited in Rayfire Man component.")]
		public MaterialType materialType;

		[Token(Token = "0x40020CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Space(2f)]
		[Tooltip("Allows to define own Physic Material.")]
		public PhysicMaterial material;

		[Token(Token = "0x40020CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[Header("  Mass")]
		[Space(3f)]
		public MassType massBy;

		[Token(Token = "0x40020D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[Space(2f)]
		[Tooltip("Mass which will be applied to object if Mass By set to By Mass Property.")]
		[Range(0.1f, 100f)]
		public float mass;

		[Token(Token = "0x40020D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[Header("  Collider")]
		[Space(3f)]
		public RFColliderType colliderType;

		[Token(Token = "0x40020D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[Space(2f)]
		[Tooltip("Do not add Mesh Collider to objects with planar low poly mesh.")]
		public bool planarCheck;

		[Token(Token = "0x40020D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2D")]
		[Space(2f)]
		[Header("  Other")]
		[Space(3f)]
		[Tooltip("Enables gravity for simulated object.")]
		public bool useGravity;

		[Token(Token = "0x40020D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[Range(0f, 5f)]
		[Tooltip("Multiplier for demolished fragments velocity.")]
		[Space(3f)]
		[Header("  Fragments")]
		public float dampening;

		[Token(Token = "0x40020D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[HideInInspector]
		public Rigidbody rigidBody;

		[Token(Token = "0x40020D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[HideInInspector]
		public Collider meshCollider;

		[Token(Token = "0x40020D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[HideInInspector]
		public List<Collider> clusterColliders;

		[NonSerialized]
		[Token(Token = "0x40020D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public bool rec;

		[NonSerialized]
		[Token(Token = "0x40020D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
		public bool exclude;

		[NonSerialized]
		[Token(Token = "0x40020DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public int solidity;

		[NonSerialized]
		[Token(Token = "0x40020DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public bool destructible;

		[NonSerialized]
		[Token(Token = "0x40020DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
		public bool physicsDataCorState;

		[NonSerialized]
		[Token(Token = "0x40020DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public Quaternion rotation;

		[NonSerialized]
		[Token(Token = "0x40020DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public Vector3 position;

		[NonSerialized]
		[Token(Token = "0x40020DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public Vector3 velocity;

		[NonSerialized]
		[Token(Token = "0x40020E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		public Vector3 initScale;

		[NonSerialized]
		[Token(Token = "0x40020E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public Vector3 initPosition;

		[NonSerialized]
		[Token(Token = "0x40020E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		public Quaternion initRotation;

		[Token(Token = "0x40020E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static int coplanarVertLimit;

		[Token(Token = "0x170001F0")]
		public bool HasClusterColliders
		{
			[Token(Token = "0x60022B5")]
			[Address(RVA = "0xE45C00", Offset = "0xE45C00", VA = "0xE45C00")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001F1")]
		public bool Destructible
		{
			[Token(Token = "0x60022B6")]
			[Address(RVA = "0xE46718", Offset = "0xE46718", VA = "0xE46718")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001F2")]
		public int Solidity
		{
			[Token(Token = "0x60022B7")]
			[Address(RVA = "0xE4678C", Offset = "0xE4678C", VA = "0xE4678C")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170001F3")]
		private PhysicMaterial PhysMaterial
		{
			[Token(Token = "0x60022B8")]
			[Address(RVA = "0xE46314", Offset = "0xE46314", VA = "0xE46314")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002299")]
		[Address(RVA = "0xE44FB0", Offset = "0xE44FB0", VA = "0xE44FB0")]
		public RFPhysic()
		{
		}

		[Token(Token = "0x600229A")]
		[Address(RVA = "0xE45158", Offset = "0xE45158", VA = "0xE45158")]
		public void CopyFrom(RFPhysic physics)
		{
		}

		[Token(Token = "0x600229B")]
		[Address(RVA = "0xE45150", Offset = "0xE45150", VA = "0xE45150")]
		public void Reset()
		{
		}

		[Token(Token = "0x600229C")]
		[Address(RVA = "0xE361BC", Offset = "0xE361BC", VA = "0xE361BC")]
		public static void SetSimulationType(Rigidbody rb, SimType simulationType, ObjectType objectType, bool useGravity)
		{
		}

		[Token(Token = "0x600229D")]
		[Address(RVA = "0xE451B8", Offset = "0xE451B8", VA = "0xE451B8")]
		private static void SetDynamic(Rigidbody rb, bool useGravity)
		{
		}

		[Token(Token = "0x600229E")]
		[Address(RVA = "0xE451F4", Offset = "0xE451F4", VA = "0xE451F4")]
		private static void SetSleeping(Rigidbody rb, bool useGravity)
		{
		}

		[Token(Token = "0x600229F")]
		[Address(RVA = "0xE4523C", Offset = "0xE4523C", VA = "0xE4523C")]
		private static void SetInactive(Rigidbody rb)
		{
		}

		[Token(Token = "0x60022A0")]
		[Address(RVA = "0xE45278", Offset = "0xE45278", VA = "0xE45278")]
		private static void SetKinematic(Rigidbody rb, bool useGravity)
		{
		}

		[Token(Token = "0x60022A1")]
		[Address(RVA = "0xE3DC80", Offset = "0xE3DC80", VA = "0xE3DC80")]
		public static void SetDensity(RayfireRigid scr)
		{
		}

		[Token(Token = "0x60022A2")]
		[Address(RVA = "0xE453FC", Offset = "0xE453FC", VA = "0xE453FC")]
		public static void SetDensity(RayfireRigidRoot scr, RFShard shard, float density)
		{
		}

		[Token(Token = "0x60022A3")]
		[Address(RVA = "0xE452C4", Offset = "0xE452C4", VA = "0xE452C4")]
		private static float MassLimit(float m)
		{
			return default(float);
		}

		[Token(Token = "0x60022A4")]
		[Address(RVA = "0xE454E0", Offset = "0xE454E0", VA = "0xE454E0")]
		public static void SetDrag(RayfireRigid scr)
		{
		}

		[Token(Token = "0x60022A5")]
		[Address(RVA = "0xE455BC", Offset = "0xE455BC", VA = "0xE455BC")]
		public static void SetDrag(RFShard shard, float drag, float dragAngular)
		{
		}

		[Token(Token = "0x60022A6")]
		[Address(RVA = "0xE3B190", Offset = "0xE3B190", VA = "0xE3B190")]
		public static void SetFragmentsVelocity(RayfireRigid scr)
		{
		}

		[Token(Token = "0x60022A7")]
		[Address(RVA = "0xE403F4", Offset = "0xE403F4", VA = "0xE403F4")]
		public static void SetFragmentMeshCollider(RayfireRigid scr, Mesh mesh)
		{
		}

		[Token(Token = "0x60022A8")]
		[Address(RVA = "0xE45600", Offset = "0xE45600", VA = "0xE45600")]
		public static void SetMeshCollider(RayfireRigid scr, [Optional] Mesh mesh)
		{
		}

		[Token(Token = "0x60022A9")]
		[Address(RVA = "0xE3A200", Offset = "0xE3A200", VA = "0xE3A200")]
		public static bool SetClusterCollidersByShards(RayfireRigid scr)
		{
			return default(bool);
		}

		[Token(Token = "0x60022AA")]
		[Address(RVA = "0xE45C58", Offset = "0xE45C58", VA = "0xE45C58")]
		private static void SetShardColliders(RayfireRigid scr, RFCluster cluster)
		{
		}

		[Token(Token = "0x60022AB")]
		[Address(RVA = "0xE45EB8", Offset = "0xE45EB8", VA = "0xE45EB8")]
		private static void SetDeepShardColliders(RayfireRigid scr, RFCluster cluster)
		{
		}

		[Token(Token = "0x60022AC")]
		[Address(RVA = "0xE37C58", Offset = "0xE37C58", VA = "0xE37C58")]
		public static void CollectClusterColliders(RayfireRigid scr, RFCluster cluster)
		{
		}

		[Token(Token = "0x60022AD")]
		[Address(RVA = "0xE45FB4", Offset = "0xE45FB4", VA = "0xE45FB4")]
		private static void CollectDeepColliders(RayfireRigid scr, RFCluster cluster)
		{
		}

		[Token(Token = "0x60022AE")]
		[Address(RVA = "0xE46184", Offset = "0xE46184", VA = "0xE46184")]
		public static void SetColliderMaterial(RayfireRigid scr)
		{
		}

		[Token(Token = "0x60022AF")]
		[Address(RVA = "0xE46394", Offset = "0xE46394", VA = "0xE46394")]
		public static void SetColliderMaterial(RayfireRigidRoot scr, RFShard shard)
		{
		}

		[Token(Token = "0x60022B0")]
		[Address(RVA = "0xE4648C", Offset = "0xE4648C", VA = "0xE4648C")]
		public static void SetParticleColliderMaterial(List<RayfireDebris> debris)
		{
		}

		[Token(Token = "0x60022B1")]
		[Address(RVA = "0xE46594", Offset = "0xE46594", VA = "0xE46594")]
		public static void SetColliderConvex(RayfireRigid scr)
		{
		}

		[Token(Token = "0x60022B2")]
		[Address(RVA = "0xE39B08", Offset = "0xE39B08", VA = "0xE39B08")]
		public static void DestroyColliders(RayfireRigid scr)
		{
		}

		[Token(Token = "0x60022B3")]
		[Address(RVA = "0xE45AB0", Offset = "0xE45AB0", VA = "0xE45AB0")]
		public void CollidersRemoveNull(RayfireRigid scr)
		{
		}

		[Token(Token = "0x60022B4")]
		[Address(RVA = "0xE46688", Offset = "0xE46688", VA = "0xE46688")]
		[IteratorStateMachine(typeof(<PhysicsDataCor>d__50))]
		public IEnumerator PhysicsDataCor(RayfireRigid scr)
		{
			return null;
		}
	}
	[Serializable]
	[Token(Token = "0x20005BD")]
	public class RFReferenceDemolition
	{
		[Token(Token = "0x20005BE")]
		public enum ActionType
		{
			[Token(Token = "0x40020EF")]
			Instantiate,
			[Token(Token = "0x40020F0")]
			SetActive
		}

		[Token(Token = "0x40020E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[Space(3f)]
		[Header("  Source")]
		public GameObject reference;

		[Token(Token = "0x40020E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Space(2f)]
		public List<GameObject> randomList;

		[Token(Token = "0x40020EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[Header("  Properties")]
		[Space(3f)]
		public ActionType action;

		[Token(Token = "0x40020EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[Space(2f)]
		[Tooltip("Add RayFire Rigid component to reference with mesh")]
		public bool addRigid;

		[Token(Token = "0x40020EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x25")]
		[Space(2f)]
		public bool inheritScale;

		[Token(Token = "0x40020ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x26")]
		[Space(2f)]
		public bool inheritMaterials;

		[Token(Token = "0x60022C0")]
		[Address(RVA = "0xE47A60", Offset = "0xE47A60", VA = "0xE47A60")]
		public RFReferenceDemolition()
		{
		}

		[Token(Token = "0x60022C1")]
		[Address(RVA = "0xE47A94", Offset = "0xE47A94", VA = "0xE47A94")]
		public void CopyFrom(RFReferenceDemolition referenceDemolitionDml)
		{
		}

		[Token(Token = "0x60022C2")]
		[Address(RVA = "0xE47B88", Offset = "0xE47B88", VA = "0xE47B88")]
		public GameObject GetReference()
		{
			return null;
		}

		[Token(Token = "0x60022C3")]
		[Address(RVA = "0xE47DF0", Offset = "0xE47DF0", VA = "0xE47DF0")]
		public static bool DemolishReference(RayfireRigid scr)
		{
			return default(bool);
		}

		[Token(Token = "0x60022C4")]
		[Address(RVA = "0xE4838C", Offset = "0xE4838C", VA = "0xE4838C")]
		private static GameObject GetInstance(RayfireRigid scr, GameObject refGo)
		{
			return null;
		}

		[Token(Token = "0x60022C5")]
		[Address(RVA = "0xE48538", Offset = "0xE48538", VA = "0xE48538")]
		private static void InheritMaterials(RayfireRigid scr, GameObject instGo)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20005BF")]
	public class RFReset
	{
		[Token(Token = "0x20005C0")]
		public enum PostDemolitionType
		{
			[Token(Token = "0x40020FA")]
			DestroyWithDelay,
			[Token(Token = "0x40020FB")]
			DeactivateToReset
		}

		[Token(Token = "0x20005C1")]
		public enum MeshResetType
		{
			[Token(Token = "0x40020FD")]
			Destroy = 0,
			[Token(Token = "0x40020FE")]
			ReuseInputMesh = 2,
			[Token(Token = "0x40020FF")]
			ReuseFragmentMeshes = 4
		}

		[Token(Token = "0x20005C2")]
		public enum FragmentsResetType
		{
			[Token(Token = "0x4002101")]
			Destroy = 0,
			[Token(Token = "0x4002102")]
			Reuse = 2,
			[Token(Token = "0x4002103")]
			Preserve = 4
		}

		[Token(Token = "0x20005C3")]
		public enum ShardsResetType
		{
			[Token(Token = "0x4002105")]
			DestroyRigid = 0,
			[Token(Token = "0x4002106")]
			ReuseRigid = 2
		}

		[Token(Token = "0x40020F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[Tooltip("Reset transform to position and rotation when object was initialized.")]
		[Space(3f)]
		[Header("  Reset")]
		public bool transform;

		[Token(Token = "0x40020F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		[Tooltip("Reset damage value.")]
		[Space(2f)]
		public bool damage;

		[Token(Token = "0x40020F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[Header("  Post Demolition")]
		[Space(3f)]
		public PostDemolitionType action;

		[Token(Token = "0x40020F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Space(2f)]
		[Tooltip("Object will be destroyed after defined delay.")]
		[Range(0f, 60f)]
		public float destroyDelay;

		[Token(Token = "0x40020F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[Header("  Reuse")]
		[Space(3f)]
		public MeshResetType mesh;

		[Token(Token = "0x40020F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[Space(2f)]
		public FragmentsResetType fragments;

		[Token(Token = "0x40020F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[Space(2f)]
		[HideInInspector]
		public ShardsResetType shards;

		[NonSerialized]
		[Token(Token = "0x40020F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool toBeDestroyed;

		[Token(Token = "0x60022C6")]
		[Address(RVA = "0xE48718", Offset = "0xE48718", VA = "0xE48718")]
		public RFReset()
		{
		}

		[Token(Token = "0x60022C7")]
		[Address(RVA = "0xE48750", Offset = "0xE48750", VA = "0xE48750")]
		public void CopyFrom(RayfireRigid scr)
		{
		}

		[Token(Token = "0x60022C8")]
		[Address(RVA = "0xE487F0", Offset = "0xE487F0", VA = "0xE487F0")]
		private static bool MeshRootReset(RayfireRigid scr)
		{
			return default(bool);
		}

		[Token(Token = "0x60022C9")]
		[Address(RVA = "0xE48958", Offset = "0xE48958", VA = "0xE48958")]
		public static void ResetRigid(RayfireRigid scr)
		{
		}

		[Token(Token = "0x60022CA")]
		[Address(RVA = "0xE48EA0", Offset = "0xE48EA0", VA = "0xE48EA0")]
		private static void ResetFade(RayfireRigid scr)
		{
		}

		[Token(Token = "0x60022CB")]
		[Address(RVA = "0xE48F68", Offset = "0xE48F68", VA = "0xE48F68")]
		private static void ResetMeshDemolition(RayfireRigid scr)
		{
		}

		[Token(Token = "0x60022CC")]
		[Address(RVA = "0xE496CC", Offset = "0xE496CC", VA = "0xE496CC")]
		private static void DestroyFragments(RayfireRigid scr)
		{
		}

		[Token(Token = "0x60022CD")]
		[Address(RVA = "0xE49DC8", Offset = "0xE49DC8", VA = "0xE49DC8")]
		private static void DestroyParticles(RayfireRigid scr)
		{
		}

		[Token(Token = "0x60022CE")]
		[Address(RVA = "0xE492E8", Offset = "0xE492E8", VA = "0xE492E8")]
		private static void ReuseFragments(RayfireRigid scr)
		{
		}

		[Token(Token = "0x60022CF")]
		[Address(RVA = "0xE49D2C", Offset = "0xE49D2C", VA = "0xE49D2C")]
		private static void PreserveFragments(RayfireRigid scr)
		{
		}

		[Token(Token = "0x60022D0")]
		[Address(RVA = "0xE49048", Offset = "0xE49048", VA = "0xE49048")]
		private static void ResetClusterDemolition(RayfireRigid scr)
		{
		}

		[Token(Token = "0x60022D1")]
		[Address(RVA = "0xE48A58", Offset = "0xE48A58", VA = "0xE48A58")]
		private static bool ObjectReuseState(RayfireRigid scr)
		{
			return default(bool);
		}

		[Token(Token = "0x60022D2")]
		[Address(RVA = "0xE49078", Offset = "0xE49078", VA = "0xE49078")]
		private static bool FragmentReuseState(RayfireRigid scr)
		{
			return default(bool);
		}

		[Token(Token = "0x60022D3")]
		[Address(RVA = "0xE48B80", Offset = "0xE48B80", VA = "0xE48B80")]
		private static void RestoreTransform(RayfireRigid scr)
		{
		}

		[Token(Token = "0x60022D4")]
		[Address(RVA = "0xE48D44", Offset = "0xE48D44", VA = "0xE48D44")]
		private static void Reset(RayfireRigid scr)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20005C5")]
	public class RFRuntimeCaching
	{
		[Token(Token = "0x400210D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public CachingType type;

		[Token(Token = "0x400210E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[Range(2f, 300f)]
		public int frames;

		[Token(Token = "0x400210F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Range(1f, 20f)]
		public int fragments;

		[Token(Token = "0x4002110")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public bool skipFirstDemolition;

		[Token(Token = "0x4002111")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
		[HideInInspector]
		public bool inProgress;

		[Token(Token = "0x4002112")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E")]
		[HideInInspector]
		public bool wasUsed;

		[Token(Token = "0x4002113")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F")]
		[HideInInspector]
		public bool stop;

		[Token(Token = "0x60022DC")]
		[Address(RVA = "0xE4A22C", Offset = "0xE4A22C", VA = "0xE4A22C")]
		public RFRuntimeCaching()
		{
		}

		[Token(Token = "0x60022DD")]
		[Address(RVA = "0xE4A250", Offset = "0xE4A250", VA = "0xE4A250")]
		public static List<int> GetBatchByFrames(int frames, int amount)
		{
			return null;
		}

		[Token(Token = "0x60022DE")]
		[Address(RVA = "0xE4A424", Offset = "0xE4A424", VA = "0xE4A424")]
		public static List<int> GetBatchByFragments(int fragments, int amount)
		{
			return null;
		}

		[Token(Token = "0x60022DF")]
		[Address(RVA = "0xE4A590", Offset = "0xE4A590", VA = "0xE4A590")]
		public static List<int> GetMarkedElements(int batchInd, List<int> batchAmount)
		{
			return null;
		}

		[Token(Token = "0x60022E0")]
		[Address(RVA = "0xE4A710", Offset = "0xE4A710", VA = "0xE4A710")]
		public static GameObject CreateTmRef(RayfireRigid rfScr)
		{
			return null;
		}
	}
	[Serializable]
	[Token(Token = "0x20005C6")]
	public class RFCustom
	{
		[Token(Token = "0x20005C7")]
		public enum RFPointCloudSourceType
		{
			[Token(Token = "0x400211E")]
			ChildrenTransform = 4,
			[Token(Token = "0x400211F")]
			TransformArray = 8,
			[Token(Token = "0x4002120")]
			Vector3Array = 12
		}

		[Token(Token = "0x20005C8")]
		public enum RFPointCloudUseType
		{
			[Token(Token = "0x4002122")]
			VolumePoints = 4,
			[Token(Token = "0x4002123")]
			PointCloud = 12
		}

		[Token(Token = "0x20005C9")]
		public enum RFModifierType
		{
			[Token(Token = "0x4002125")]
			None = 0,
			[Token(Token = "0x4002126")]
			Splinters = 3,
			[Token(Token = "0x4002127")]
			Slabs = 6
		}

		[Token(Token = "0x4002114")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[Header("  Point Cloud")]
		[Space(2f)]
		public RFPointCloudSourceType source;

		[Token(Token = "0x4002115")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[Space(2f)]
		public RFPointCloudUseType useAs;

		[Token(Token = "0x4002116")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Range(3f, 1000f)]
		[Space(2f)]
		[Header("  Volume")]
		[Space(2f)]
		public int amount;

		[Token(Token = "0x4002117")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[Range(0.01f, 4f)]
		public float radius;

		[Token(Token = "0x4002118")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[Space(2f)]
		[Header("  Preview")]
		public bool enable;

		[Token(Token = "0x4002119")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[Range(0.01f, 0.4f)]
		public float size;

		[Token(Token = "0x400211A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[Header("  Arrays")]
		[Space(2f)]
		public Transform[] transforms;

		[Token(Token = "0x400211B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Vector3[] vector3;

		[Token(Token = "0x400211C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[HideInInspector]
		public bool noPoints;

		[Token(Token = "0x60022E1")]
		[Address(RVA = "0xE4A898", Offset = "0xE4A898", VA = "0xE4A898")]
		public RFCustom()
		{
		}

		[Token(Token = "0x60022E2")]
		[Address(RVA = "0xE4A8DC", Offset = "0xE4A8DC", VA = "0xE4A8DC")]
		public RFCustom(RFCustom src)
		{
		}

		[Token(Token = "0x60022E3")]
		[Address(RVA = "0xE4A938", Offset = "0xE4A938", VA = "0xE4A938")]
		public static List<Vector3> GetCustomPointCLoud(RFCustom custom, Transform tm, int seed, Bounds bound)
		{
			return null;
		}

		[Token(Token = "0x60022E4")]
		[Address(RVA = "0xE4A9F4", Offset = "0xE4A9F4", VA = "0xE4A9F4")]
		private static List<Vector3> GetCustomInputCloud(RFCustom custom, Transform tm)
		{
			return null;
		}

		[Token(Token = "0x60022E5")]
		[Address(RVA = "0xE4AD34", Offset = "0xE4AD34", VA = "0xE4AD34")]
		private static List<Vector3> GetCustomOutputCloud(RFCustom custom, List<Vector3> inputPoints, int seed, Bounds bound)
		{
			return null;
		}

		[Token(Token = "0x60022E6")]
		[Address(RVA = "0xE4AF78", Offset = "0xE4AF78", VA = "0xE4AF78")]
		private static List<Vector3> GetCustomBoundPoints(List<Vector3> inputPoints, Bounds bound)
		{
			return null;
		}

		[Token(Token = "0x60022E7")]
		[Address(RVA = "0xE4B034", Offset = "0xE4B034", VA = "0xE4B034")]
		private static Vector3 RandomPointInRadius(Vector3 point, float radius)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60022E8")]
		[Address(RVA = "0xE4B0A8", Offset = "0xE4B0A8", VA = "0xE4B0A8")]
		private static Vector3 RandomVector()
		{
			return default(Vector3);
		}
	}
	[Token(Token = "0x20005CA")]
	public static class RFFragment
	{
		[Token(Token = "0x4002128")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static bool silentMode;

		[Token(Token = "0x4002129")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static List<Mesh> meshListStatic;

		[Token(Token = "0x400212A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static List<Vector3> pivotListStatic;

		[Token(Token = "0x400212B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static List<Dictionary<int, int>> subIdsListStatic;

		[Token(Token = "0x60022E9")]
		[Address(RVA = "0xE4B110", Offset = "0xE4B110", VA = "0xE4B110")]
		public static void CacheMeshes(ref Mesh[] meshes, ref Vector3[] pivots, ref List<RFDictionary> origSubMeshIdsRf, RayfireShatter scrShatter)
		{
		}

		[Token(Token = "0x60022EA")]
		[Address(RVA = "0xE4C8F0", Offset = "0xE4C8F0", VA = "0xE4C8F0")]
		private static void RemovePlanar(ref Mesh[] meshes, ref Vector3[] pivots, ref List<RFDictionary> origSubMeshIdsRf, RayfireShatter scrShatter)
		{
		}

		[Token(Token = "0x60022EB")]
		[Address(RVA = "0xE4CCEC", Offset = "0xE4CCEC", VA = "0xE4CCEC")]
		private static void RemoveBySize(ref Mesh[] meshes, ref Vector3[] pivots, ref List<RFDictionary> origSubMeshIdsRf, RayfireShatter scr)
		{
		}

		[Token(Token = "0x60022EC")]
		[Address(RVA = "0xE4DC74", Offset = "0xE4DC74", VA = "0xE4DC74")]
		public static bool InputMesh(RayfireRigid scr)
		{
			return default(bool);
		}

		[Token(Token = "0x60022ED")]
		[Address(RVA = "0xE4DD24", Offset = "0xE4DD24", VA = "0xE4DD24")]
		private static bool SetRigidShatter(RayfireRigid scr)
		{
			return default(bool);
		}

		[Token(Token = "0x60022EE")]
		[Address(RVA = "0xE4E080", Offset = "0xE4E080", VA = "0xE4E080")]
		public static void CacheMeshesInst(ref Mesh[] meshes, ref Vector3[] pivots, ref List<RFDictionary> origSubMeshIdsRf, RayfireRigid scrRigid)
		{
		}

		[Token(Token = "0x60022EF")]
		[Address(RVA = "0xE4E4DC", Offset = "0xE4E4DC", VA = "0xE4E4DC")]
		public static void CacheMeshesMult(Transform tmSaved, ref List<Mesh> meshesList, ref List<Vector3> pivotsList, ref List<RFDictionary> subList, RayfireRigid scrRigid, List<int> batchAmount, int batchInd)
		{
		}

		[Token(Token = "0x60022F0")]
		[Address(RVA = "0xE4E36C", Offset = "0xE4E36C", VA = "0xE4E36C")]
		private static void FinalCacheMeshes(ref Mesh[] meshes, RayfireRigid scrRigid, bool successState)
		{
		}

		[Token(Token = "0x60022F1")]
		[Address(RVA = "0xE4DFF0", Offset = "0xE4DFF0", VA = "0xE4DFF0")]
		private static Mesh GetDemolitionMesh(RayfireRigid scr)
		{
			return null;
		}

		[Token(Token = "0x60022F2")]
		[Address(RVA = "0xE4B768", Offset = "0xE4B768", VA = "0xE4B768")]
		private static Mesh GetDemolitionMesh(RayfireShatter scr)
		{
			return null;
		}

		[Token(Token = "0x60022F3")]
		[Address(RVA = "0xE4E854", Offset = "0xE4E854", VA = "0xE4E854")]
		public static void SliceMeshes(ref Mesh[] meshes, ref Vector3[] pivots, ref List<RFDictionary> origSubMeshIdsRf, RayfireRigid scr, List<Vector3> sliceData)
		{
		}

		[Token(Token = "0x60022F4")]
		[Address(RVA = "0xE4C290", Offset = "0xE4C290", VA = "0xE4C290")]
		private static bool Compute(int shatterMode, RFShatter shatter, Transform tm, ref Mesh[] meshes, ref Vector3[] pivots, Mesh mesh, int innerSubId, ref List<Dictionary<int, int>> subIds, UnityEngine.Object obj, [Optional] List<int> markedElements)
		{
			return default(bool);
		}

		[Token(Token = "0x60022F5")]
		[Address(RVA = "0xE4B6B4", Offset = "0xE4B6B4", VA = "0xE4B6B4")]
		private static int GetShatterMode([Optional] RayfireShatter scrShatter)
		{
			return default(int);
		}

		[Token(Token = "0x60022F6")]
		[Address(RVA = "0xE4EEFC", Offset = "0xE4EEFC", VA = "0xE4EEFC")]
		private static bool EmptyMeshState(Mesh[] meshes)
		{
			return default(bool);
		}

		[Token(Token = "0x60022F7")]
		[Address(RVA = "0xE4BCC8", Offset = "0xE4BCC8", VA = "0xE4BCC8")]
		private static void SetFragmentProperties(RFShatter shatter, RayfireShatter scrSh, RayfireRigid scrRigid)
		{
		}

		[Token(Token = "0x60022F8")]
		[Address(RVA = "0xE4B7F8", Offset = "0xE4B7F8", VA = "0xE4B7F8")]
		private static RFShatter SetShatter(int shatterMode, Mesh mesh, Transform transform, RFSurface interior, bool decompose, bool deleteCol, int seed = 1, FragmentMode mode = FragmentMode.Runtime, bool preCap = true, bool remCap = false, bool remDbl = true, bool exInside = false, int percSize = 3)
		{
			return null;
		}

		[Token(Token = "0x60022F9")]
		[Address(RVA = "0xE4FF44", Offset = "0xE4FF44", VA = "0xE4FF44")]
		private static void SetShatterEditorMode(RFShatter shatter, float sizeFilter, bool preCap, bool remCap, bool remDbl, bool exInside)
		{
		}

		[Token(Token = "0x60022FA")]
		[Address(RVA = "0xE500AC", Offset = "0xE500AC", VA = "0xE500AC")]
		private static void SetShatterRuntimeMode(RFShatter shatter)
		{
		}

		[Token(Token = "0x60022FB")]
		[Address(RVA = "0xE4EF70", Offset = "0xE4EF70", VA = "0xE4EF70")]
		private static void SetVoronoi(RFShatter shatter, int numFragments, Transform tm, Vector3 centerPos, float centerBias)
		{
		}

		[Token(Token = "0x60022FC")]
		[Address(RVA = "0xE4F0D4", Offset = "0xE4F0D4", VA = "0xE4F0D4")]
		private static void SetSplinters(RFShatter shatter, RFSplinters splint, Transform tm, Vector3 centerPos, float centerBias)
		{
		}

		[Token(Token = "0x60022FD")]
		[Address(RVA = "0xE4F258", Offset = "0xE4F258", VA = "0xE4F258")]
		private static void SetSlabs(RFShatter shatter, RFSplinters slabs, Transform tm, Vector3 centerPos, float centerBias)
		{
		}

		[Token(Token = "0x60022FE")]
		[Address(RVA = "0xE4F3DC", Offset = "0xE4F3DC", VA = "0xE4F3DC")]
		private static void SetRadial(RFShatter shatter, RFRadial radial, Transform tm, Vector3 centerPos, Quaternion centerDirection)
		{
		}

		[Token(Token = "0x60022FF")]
		[Address(RVA = "0xE4F690", Offset = "0xE4F690", VA = "0xE4F690")]
		private static void SetCustom(RFShatter shatter, RFCustom custom, Transform tm, MeshFilter mf, Bounds bound, RFSplinters splint, RFSplinters slabs, int seed)
		{
		}

		[Token(Token = "0x6002300")]
		[Address(RVA = "0xE4F77C", Offset = "0xE4F77C", VA = "0xE4F77C")]
		private static void SetSlices(RFShatter shatter, Transform tm, RFSlice slices)
		{
		}

		[Token(Token = "0x6002301")]
		[Address(RVA = "0xE4FAF4", Offset = "0xE4FAF4", VA = "0xE4FAF4")]
		private static void SetTet(RFShatter shatter, Bounds bounds, RFTets tets)
		{
		}

		[Token(Token = "0x6002302")]
		[Address(RVA = "0xE4FD10", Offset = "0xE4FD10", VA = "0xE4FD10")]
		private static void SetDecompose(RFShatter shatter)
		{
		}

		[Token(Token = "0x6002303")]
		[Address(RVA = "0xE4FD68", Offset = "0xE4FD68", VA = "0xE4FD68")]
		private static void SetClusters(RFShatter shatter, RFShatterCluster gluing)
		{
		}

		[Token(Token = "0x6002304")]
		[Address(RVA = "0xE50164", Offset = "0xE50164", VA = "0xE50164")]
		private static void SetStretching(RFShatter shatter, AxisType axis, float strength, FragType fragType)
		{
		}

		[Token(Token = "0x6002305")]
		[Address(RVA = "0xE50268", Offset = "0xE50268", VA = "0xE50268")]
		private static Vector3 DirectionAxis(AxisType axisType)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6002306")]
		[Address(RVA = "0xE50354", Offset = "0xE50354", VA = "0xE50354")]
		public static void RescaleMesh(Mesh mesh, float scale)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20005CD")]
	public class RFMeshExport
	{
		[Token(Token = "0x20005CE")]
		public enum MeshExportType
		{
			[Token(Token = "0x4002132")]
			LastFragments = 0,
			[Token(Token = "0x4002133")]
			Children = 3
		}

		[Token(Token = "0x400212F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public MeshExportType source;

		[Token(Token = "0x4002130")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string suffix;

		[Token(Token = "0x600230D")]
		[Address(RVA = "0xE50614", Offset = "0xE50614", VA = "0xE50614")]
		public RFMeshExport()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20005CF")]
	public class RFShatterAdvanced
	{
		[Token(Token = "0x4002134")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[Header("  Common")]
		[Space(2f)]
		[Tooltip("Seed for point cloud generator. Set to 0 to get random point cloud every time.")]
		[Range(0f, 100f)]
		public int seed;

		[Token(Token = "0x4002135")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[Space(1f)]
		public bool decompose;

		[Token(Token = "0x4002136")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x15")]
		[Space(1f)]
		public bool removeCollinear;

		[Token(Token = "0x4002137")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x16")]
		[Space(1f)]
		public bool copyComponents;

		[Token(Token = "0x4002138")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x17")]
		[Tooltip("Create extra triangles to connect open edges and close mesh volume.")]
		[Space(2f)]
		[Header("  Editor Mode")]
		public bool inputPrecap;

		[Token(Token = "0x4002139")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Tooltip("Keep or Delete fragment's faces created by Input Precap.")]
		[Space(1f)]
		public bool outputPrecap;

		[Token(Token = "0x400213A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		[Tooltip("Delete faces which overlap with each other.")]
		[Space(1f)]
		public bool removeDoubleFaces;

		[Token(Token = "0x400213B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[Range(1f, 100f)]
		[Space(1f)]
		[Tooltip("Measures in percents relative to original object size. Do not fragment elements with size less than this value.")]
		public int elementSizeThreshold;

		[Token(Token = "0x400213C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[Header("  Filters")]
		[Space(1f)]
		[Tooltip("Do not output inner fragments which has no outer surface.")]
		[Space(2f)]
		public bool inner;

		[Token(Token = "0x400213D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		[Space(1f)]
		[Tooltip("Do not output planar fragments which mesh vertices lie in the same plane.")]
		public bool planar;

		[Token(Token = "0x400213E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[Space(1f)]
		[Tooltip("Do not output small fragments. Measures is percentage relative to original object size.")]
		[Range(0f, 10f)]
		public int relativeSize;

		[Token(Token = "0x400213F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[Range(0f, 1f)]
		[Tooltip("Do not output small fragments which size in world units is less than this value.")]
		[Space(1f)]
		public float absoluteSize;

		[Token(Token = "0x4002140")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[Space(2f)]
		[Header("  Limitations")]
		public bool vertexLimitation;

		[Token(Token = "0x4002141")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[Range(100f, 1900f)]
		[Space(1f)]
		public int vertexAmount;

		[Token(Token = "0x4002142")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static float planarThreshold;

		[Token(Token = "0x600230E")]
		[Address(RVA = "0xE5066C", Offset = "0xE5066C", VA = "0xE5066C")]
		public RFShatterAdvanced()
		{
		}

		[Token(Token = "0x600230F")]
		[Address(RVA = "0xE506C0", Offset = "0xE506C0", VA = "0xE506C0")]
		public RFShatterAdvanced(RFShatterAdvanced src)
		{
		}

		[Token(Token = "0x6002310")]
		[Address(RVA = "0xE4D3A0", Offset = "0xE4D3A0", VA = "0xE4D3A0")]
		public static bool IsCoplanar(Mesh mesh, float threshold)
		{
			return default(bool);
		}
	}
	[Serializable]
	[Token(Token = "0x20005D0")]
	public class RFSurface
	{
		[Token(Token = "0x4002143")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[Header("  Inner surface")]
		[Space(1f)]
		[Tooltip("Defines material for fragment's inner surface.")]
		public Material innerMaterial;

		[Token(Token = "0x4002144")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Range(0.01f, 2f)]
		[Tooltip("Defines mapping scale for inner surface.")]
		[Space(1f)]
		public float mappingScale;

		[Token(Token = "0x4002145")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[Header("  Outer surface")]
		[Space(1f)]
		public Material outerMaterial;

		[Token(Token = "0x4002146")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[HideInInspector]
		public bool needNewMat;

		[Token(Token = "0x6002312")]
		[Address(RVA = "0xE50794", Offset = "0xE50794", VA = "0xE50794")]
		public RFSurface()
		{
		}

		[Token(Token = "0x6002313")]
		[Address(RVA = "0xE507D8", Offset = "0xE507D8", VA = "0xE507D8")]
		public void CopyFrom(RFSurface interior)
		{
		}

		[Token(Token = "0x6002314")]
		[Address(RVA = "0xE50824", Offset = "0xE50824", VA = "0xE50824")]
		public static void SetMaterial(List<RFDictionary> origSubMeshIdsRF, Material[] sharedMaterials, RFSurface interior, MeshRenderer targetRend, int i, int amount)
		{
		}

		[Token(Token = "0x6002315")]
		[Address(RVA = "0xE4DEA4", Offset = "0xE4DEA4", VA = "0xE4DEA4")]
		public static int SetInnerSubId(RayfireRigid scr)
		{
			return default(int);
		}

		[Token(Token = "0x6002316")]
		[Address(RVA = "0xE4BB7C", Offset = "0xE4BB7C", VA = "0xE4BB7C")]
		public static int SetInnerSubId(RayfireShatter scr)
		{
			return default(int);
		}
	}
	[Token(Token = "0x20005D1")]
	[HelpURL("http://rayfirestudios.com/unity-online-help/unity-activator-component/")]
	[AddComponentMenu("RayFire/Rayfire Activator")]
	public class RayfireActivator : MonoBehaviour
	{
		[Token(Token = "0x20005D2")]
		public enum ActivationType
		{
			[Token(Token = "0x4002160")]
			OnEnter,
			[Token(Token = "0x4002161")]
			OnExit
		}

		[Token(Token = "0x20005D3")]
		public enum AnimationType
		{
			[Token(Token = "0x4002163")]
			ByGlobalPositionList = 0,
			[Token(Token = "0x4002164")]
			ByStaticLine = 1,
			[Token(Token = "0x4002165")]
			ByDynamicLine = 2,
			[Token(Token = "0x4002166")]
			ByLocalPositionList = 5
		}

		[Token(Token = "0x20005D4")]
		public enum GizmoType
		{
			[Token(Token = "0x4002168")]
			Sphere,
			[Token(Token = "0x4002169")]
			Box,
			[Token(Token = "0x400216A")]
			Collider
		}

		[Token(Token = "0x20005D5")]
		[CompilerGenerated]
		private sealed class <DelayedActivationCor>d__33 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400216B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400216C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400216D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public RayfireActivator <>4__this;

			[Token(Token = "0x400216E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public RayfireRigid rigid;

			[Token(Token = "0x170001F6")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002330")]
				[Address(RVA = "0xE52504", Offset = "0xE52504", VA = "0xE52504", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001F7")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002332")]
				[Address(RVA = "0xE5254C", Offset = "0xE5254C", VA = "0xE5254C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600232D")]
			[Address(RVA = "0xE5137C", Offset = "0xE5137C", VA = "0xE5137C")]
			[DebuggerHidden]
			public <DelayedActivationCor>d__33(int <>1__state)
			{
			}

			[Token(Token = "0x600232E")]
			[Address(RVA = "0xE523FC", Offset = "0xE523FC", VA = "0xE523FC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600232F")]
			[Address(RVA = "0xE52400", Offset = "0xE52400", VA = "0xE52400", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002331")]
			[Address(RVA = "0xE5250C", Offset = "0xE5250C", VA = "0xE5250C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20005D6")]
		[CompilerGenerated]
		private sealed class <DelayedActivationCor>d__34 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400216F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002170")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002171")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public RayfireActivator <>4__this;

			[Token(Token = "0x4002172")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public RayfireRigidRoot rigidRoot;

			[Token(Token = "0x4002173")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Collider coll;

			[Token(Token = "0x170001F8")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002336")]
				[Address(RVA = "0xE5265C", Offset = "0xE5265C", VA = "0xE5265C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001F9")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002338")]
				[Address(RVA = "0xE526A4", Offset = "0xE526A4", VA = "0xE526A4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002333")]
			[Address(RVA = "0xE513A4", Offset = "0xE513A4", VA = "0xE513A4")]
			[DebuggerHidden]
			public <DelayedActivationCor>d__34(int <>1__state)
			{
			}

			[Token(Token = "0x6002334")]
			[Address(RVA = "0xE52554", Offset = "0xE52554", VA = "0xE52554", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002335")]
			[Address(RVA = "0xE52558", Offset = "0xE52558", VA = "0xE52558", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002337")]
			[Address(RVA = "0xE52664", Offset = "0xE52664", VA = "0xE52664", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20005D7")]
		[CompilerGenerated]
		private sealed class <DelayedClusterCor>d__35 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002174")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002175")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002176")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public RayfireActivator <>4__this;

			[Token(Token = "0x4002177")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public RayfireRigid rigid;

			[Token(Token = "0x4002178")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Collider coll;

			[Token(Token = "0x170001FA")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600233C")]
				[Address(RVA = "0xE52874", Offset = "0xE52874", VA = "0xE52874", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001FB")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600233E")]
				[Address(RVA = "0xE528BC", Offset = "0xE528BC", VA = "0xE528BC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002339")]
			[Address(RVA = "0xE513CC", Offset = "0xE513CC", VA = "0xE513CC")]
			[DebuggerHidden]
			public <DelayedClusterCor>d__35(int <>1__state)
			{
			}

			[Token(Token = "0x600233A")]
			[Address(RVA = "0xE526AC", Offset = "0xE526AC", VA = "0xE526AC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600233B")]
			[Address(RVA = "0xE526B0", Offset = "0xE526B0", VA = "0xE526B0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600233D")]
			[Address(RVA = "0xE5287C", Offset = "0xE5287C", VA = "0xE5287C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20005D8")]
		[CompilerGenerated]
		private sealed class <AnimationCor>d__42 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002179")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400217A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400217B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public RayfireActivator <>4__this;

			[Token(Token = "0x170001FC")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002342")]
				[Address(RVA = "0xE52C10", Offset = "0xE52C10", VA = "0xE52C10", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001FD")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002344")]
				[Address(RVA = "0xE52C58", Offset = "0xE52C58", VA = "0xE52C58", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600233F")]
			[Address(RVA = "0xE51E34", Offset = "0xE51E34", VA = "0xE51E34")]
			[DebuggerHidden]
			public <AnimationCor>d__42(int <>1__state)
			{
			}

			[Token(Token = "0x6002340")]
			[Address(RVA = "0xE528C4", Offset = "0xE528C4", VA = "0xE528C4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002341")]
			[Address(RVA = "0xE528C8", Offset = "0xE528C8", VA = "0xE528C8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002343")]
			[Address(RVA = "0xE52C18", Offset = "0xE52C18", VA = "0xE52C18", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4002147")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Tooltip("Gizmo which will be used to create collider to activate objects.")]
		[Header("  Gizmo")]
		[Space(3f)]
		public GizmoType gizmoType;

		[Token(Token = "0x4002148")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[Tooltip("Defines size of Sphere gizmo.")]
		[Space(2f)]
		[Range(0.1f, 100f)]
		public float sphereRadius;

		[Token(Token = "0x4002149")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[Tooltip("Defines size of Box gizmo.")]
		[Space(2f)]
		public Vector3 boxSize;

		[Token(Token = "0x400214A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[Space(3f)]
		[Header("  Activation")]
		[Tooltip(" On Enter: Object will be activated when Activator trigger collider will enter object's collider.\n On Exit: Object will be activated when Activator trigger collider will exit object's collider.")]
		public ActivationType type;

		[Token(Token = "0x400214B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[Space(2f)]
		[Range(0f, 100f)]
		[Tooltip("Activation Delay in seconds.")]
		public float delay;

		[Token(Token = "0x400214C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[Space(2f)]
		[Tooltip("Allows to demolish Connected Cluster and detach it's children into separate objects.")]
		public bool demolishCluster;

		[Token(Token = "0x400214D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[Tooltip("Activation Delay in seconds.")]
		[Header("  Animation")]
		[Range(0.1f, 100f)]
		[Space(3f)]
		public float duration;

		[Token(Token = "0x400214E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[Range(1f, 50f)]
		[Tooltip("Animate scale of Activator gizmo.")]
		[Space(2f)]
		public float scaleAnimation;

		[Token(Token = "0x400214F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[Space(2f)]
		[Tooltip(" By Position List: Use Position list of Vector3 points . Object will be animated from one point to another starting from the first point in.\n By Static Line: Use predefined Line. Path will be cached at start. \n By Dynamic Line: Use predefined Line. Path will be calculated at every frame by Line.")]
		public AnimationType positionAnimation;

		[Token(Token = "0x4002150")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[Tooltip("Line which will be used as animation path.")]
		[Space(2f)]
		public LineRenderer line;

		[Token(Token = "0x4002151")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("List of Vector3 points in global space. Object will be animated from one point to another starting from the first point in list.")]
		[Space(2f)]
		public List<Vector3> positionList;

		[Token(Token = "0x4002152")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[HideInInspector]
		public bool showGizmo;

		[Token(Token = "0x4002153")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
		private bool animating;

		[Token(Token = "0x4002154")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private float pathRatio;

		[Token(Token = "0x4002155")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private float lineLength;

		[Token(Token = "0x4002156")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private List<float> checkpoints;

		[Token(Token = "0x4002157")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private float delta;

		[Token(Token = "0x4002158")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private float deltaRatioStep;

		[Token(Token = "0x4002159")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private float distDeltaStep;

		[Token(Token = "0x400215A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private float distRatio;

		[Token(Token = "0x400215B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private float timePassed;

		[Token(Token = "0x400215C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private int activeSegment;

		[Token(Token = "0x400215D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Vector3 positionStart;

		[Token(Token = "0x400215E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		private Vector3 scaleStart;

		[Token(Token = "0x6002317")]
		[Address(RVA = "0xE50AC0", Offset = "0xE50AC0", VA = "0xE50AC0")]
		private void Awake()
		{
		}

		[Token(Token = "0x6002318")]
		[Address(RVA = "0xE50D0C", Offset = "0xE50D0C", VA = "0xE50D0C")]
		private void OnTriggerEnter(Collider coll)
		{
		}

		[Token(Token = "0x6002319")]
		[Address(RVA = "0xE50D70", Offset = "0xE50D70", VA = "0xE50D70")]
		private void OnTriggerExit(Collider coll)
		{
		}

		[Token(Token = "0x600231A")]
		[Address(RVA = "0xE50D48", Offset = "0xE50D48", VA = "0xE50D48")]
		private void ActivationCheck(Collider coll)
		{
		}

		[Token(Token = "0x600231B")]
		[Address(RVA = "0xE50DB0", Offset = "0xE50DB0", VA = "0xE50DB0")]
		private void RigidListActivationCheck(Collider coll)
		{
		}

		[Token(Token = "0x600231C")]
		[Address(RVA = "0xE50FEC", Offset = "0xE50FEC", VA = "0xE50FEC")]
		private void RigidRootActivationCheck(Collider coll)
		{
		}

		[Token(Token = "0x600231D")]
		[Address(RVA = "0xE511A4", Offset = "0xE511A4", VA = "0xE511A4")]
		[IteratorStateMachine(typeof(<DelayedActivationCor>d__33))]
		private IEnumerator DelayedActivationCor(RayfireRigid rigid)
		{
			return null;
		}

		[Token(Token = "0x600231E")]
		[Address(RVA = "0xE512D8", Offset = "0xE512D8", VA = "0xE512D8")]
		[IteratorStateMachine(typeof(<DelayedActivationCor>d__34))]
		private IEnumerator DelayedActivationCor(RayfireRigidRoot rigidRoot, Collider coll)
		{
			return null;
		}

		[Token(Token = "0x600231F")]
		[Address(RVA = "0xE51234", Offset = "0xE51234", VA = "0xE51234")]
		[IteratorStateMachine(typeof(<DelayedClusterCor>d__35))]
		private IEnumerator DelayedClusterCor(RayfireRigid rigid, Collider coll)
		{
			return null;
		}

		[Token(Token = "0x6002320")]
		[Address(RVA = "0xE50B18", Offset = "0xE50B18", VA = "0xE50B18")]
		private void ColliderCheck()
		{
		}

		[Token(Token = "0x6002321")]
		[Address(RVA = "0xE513F4", Offset = "0xE513F4", VA = "0xE513F4")]
		public void TriggerAnimation()
		{
		}

		[Token(Token = "0x6002322")]
		[Address(RVA = "0xE514D0", Offset = "0xE514D0", VA = "0xE514D0")]
		private void SetAnimation()
		{
		}

		[Token(Token = "0x6002323")]
		[Address(RVA = "0xE51584", Offset = "0xE51584", VA = "0xE51584")]
		private void SetWorldPointsByLine()
		{
		}

		[Token(Token = "0x6002324")]
		[Address(RVA = "0xE51840", Offset = "0xE51840", VA = "0xE51840")]
		private void SetWorldPointsByLocal()
		{
		}

		[Token(Token = "0x6002325")]
		[Address(RVA = "0xE51A94", Offset = "0xE51A94", VA = "0xE51A94")]
		private void SetCheckPoints()
		{
		}

		[Token(Token = "0x6002326")]
		[Address(RVA = "0xE51510", Offset = "0xE51510", VA = "0xE51510")]
		[IteratorStateMachine(typeof(<AnimationCor>d__42))]
		private IEnumerator AnimationCor()
		{
			return null;
		}

		[Token(Token = "0x6002327")]
		[Address(RVA = "0xE51E5C", Offset = "0xE51E5C", VA = "0xE51E5C")]
		private int GetSegment(float ration)
		{
			return default(int);
		}

		[Token(Token = "0x6002328")]
		[Address(RVA = "0xE51F4C", Offset = "0xE51F4C", VA = "0xE51F4C")]
		private void ResetData()
		{
		}

		[Token(Token = "0x6002329")]
		[Address(RVA = "0xE51FAC", Offset = "0xE51FAC", VA = "0xE51FAC")]
		public void StopAnimation()
		{
		}

		[Token(Token = "0x600232A")]
		[Address(RVA = "0xE51FB4", Offset = "0xE51FB4", VA = "0xE51FB4")]
		public void ResetAnimation()
		{
		}

		[Token(Token = "0x600232B")]
		[Address(RVA = "0xE51FE8", Offset = "0xE51FE8", VA = "0xE51FE8")]
		public void AddPosition(Vector3 newPos)
		{
		}

		[Token(Token = "0x600232C")]
		[Address(RVA = "0xE52354", Offset = "0xE52354", VA = "0xE52354")]
		public RayfireActivator()
		{
		}
	}
	[Token(Token = "0x20005D9")]
	[AddComponentMenu("RayFire/Rayfire Blade")]
	[HelpURL("http://rayfirestudios.com/unity-online-help/unity-blade-component/")]
	public class RayfireBlade : MonoBehaviour
	{
		[Token(Token = "0x20005DA")]
		public enum CutType
		{
			[Token(Token = "0x400218E")]
			Enter,
			[Token(Token = "0x400218F")]
			Exit,
			[Token(Token = "0x4002190")]
			EnterExit
		}

		[Token(Token = "0x20005DB")]
		public enum ActionType
		{
			[Token(Token = "0x4002192")]
			Slice,
			[Token(Token = "0x4002193")]
			Demolish
		}

		[Token(Token = "0x20005DC")]
		[CompilerGenerated]
		private sealed class <CooldownCor>d__26 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002194")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002195")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002196")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public RayfireBlade <>4__this;

			[Token(Token = "0x170001FE")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002358")]
				[Address(RVA = "0xE53854", Offset = "0xE53854", VA = "0xE53854", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001FF")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600235A")]
				[Address(RVA = "0xE5389C", Offset = "0xE5389C", VA = "0xE5389C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002355")]
			[Address(RVA = "0xE5351C", Offset = "0xE5351C", VA = "0xE5351C")]
			[DebuggerHidden]
			public <CooldownCor>d__26(int <>1__state)
			{
			}

			[Token(Token = "0x6002356")]
			[Address(RVA = "0xE53774", Offset = "0xE53774", VA = "0xE53774", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002357")]
			[Address(RVA = "0xE53778", Offset = "0xE53778", VA = "0xE53778", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002359")]
			[Address(RVA = "0xE5385C", Offset = "0xE5385C", VA = "0xE5385C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400217C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Header("  Properties")]
		[Space(2f)]
		[Tooltip(" Slice: Object will be Sliced accordingly to Slice Type plane.\n Demolish: Object will demolished accordingly to it's Mesh or Cluster Demolition properties.")]
		public ActionType actionType;

		[Token(Token = "0x400217D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[Space(2f)]
		[Tooltip(" Enter: Object will be sliced when Blade's trigger collider enter object's collider.\n Exit: Object will be sliced when Blade's trigger collider exit object's collider.\n Enter Exit: Object will be sliced when Blade's trigger collider exit object's collider and angle for slicing plane will be average angle between enter and exit. This type should be used if object with Blade will be rotated while it is inside sliced object so slicing plane at least will have average angle.")]
		public CutType onTrigger;

		[Token(Token = "0x400217E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[Space(2f)]
		[Tooltip("Defines slicing plane which will be used to slice target object.")]
		[Header("  Slicing")]
		public PlaneType sliceType;

		[Token(Token = "0x400217F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[Space(1f)]
		[Tooltip("Slicing also can be initiated by Slice Target button or by public SliceTarget() method. In this case object with Blade doesn't have to enter or exit sliced object collider, but you need to define Target Gameobject for slice.")]
		public GameObject target;

		[Token(Token = "0x4002180")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[Space(1f)]
		public List<GameObject> targets;

		[Token(Token = "0x4002181")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[Range(0f, 10f)]
		[Header("  Force")]
		[Space(2f)]
		[Tooltip("Add to sliced fragments additional velocity impulse to separate them.")]
		public float force;

		[Token(Token = "0x4002182")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[Tooltip("Force will be applied to Inactive objects as well.")]
		[Space(1f)]
		public bool affectInactive;

		[Token(Token = "0x4002183")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[Tooltip("Applies damage to sliced object.")]
		[Range(0f, 100f)]
		[Header("  Damage")]
		[Space(2f)]
		public float damage;

		[Token(Token = "0x4002184")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[Range(0f, 10f)]
		[Tooltip("Allows to temporary disable Blade component for defined time to prevent constant slicing.")]
		[Space(2f)]
		[Header("  Filters")]
		[Space(1f)]
		public float cooldown;

		[Token(Token = "0x4002185")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[HideInInspector]
		public Transform transForm;

		[Token(Token = "0x4002186")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[HideInInspector]
		public Vector3[] enterPlane;

		[Token(Token = "0x4002187")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[HideInInspector]
		public Vector3[] exitPlane;

		[Token(Token = "0x4002188")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[HideInInspector]
		public Collider colLider;

		[Token(Token = "0x4002189")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[HideInInspector]
		public int mask;

		[Token(Token = "0x400218A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[HideInInspector]
		public string tagFilter;

		[Token(Token = "0x400218B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[HideInInspector]
		public bool coolDownState;

		[Token(Token = "0x400218C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public RFSliceEvent sliceEvent;

		[Token(Token = "0x6002345")]
		[Address(RVA = "0xE52C60", Offset = "0xE52C60", VA = "0xE52C60")]
		private void Awake()
		{
		}

		[Token(Token = "0x6002346")]
		[Address(RVA = "0xE52C64", Offset = "0xE52C64", VA = "0xE52C64")]
		private void DefineComponents()
		{
		}

		[Token(Token = "0x6002347")]
		[Address(RVA = "0xE52DE4", Offset = "0xE52DE4", VA = "0xE52DE4")]
		private void OnTriggerEnter(Collider col)
		{
		}

		[Token(Token = "0x6002348")]
		[Address(RVA = "0xE52E8C", Offset = "0xE52E8C", VA = "0xE52E8C")]
		private void OnTriggerExit(Collider col)
		{
		}

		[Token(Token = "0x6002349")]
		[Address(RVA = "0xE52DE8", Offset = "0xE52DE8", VA = "0xE52DE8")]
		private void TriggerEnter(Collider col)
		{
		}

		[Token(Token = "0x600234A")]
		[Address(RVA = "0xE52E90", Offset = "0xE52E90", VA = "0xE52E90")]
		private void TriggerExit(Collider col)
		{
		}

		[Token(Token = "0x600234B")]
		[Address(RVA = "0xE532D4", Offset = "0xE532D4", VA = "0xE532D4")]
		private void Demolish(GameObject targetObject)
		{
		}

		[Token(Token = "0x600234C")]
		[Address(RVA = "0xE534A8", Offset = "0xE534A8", VA = "0xE534A8")]
		[IteratorStateMachine(typeof(<CooldownCor>d__26))]
		private IEnumerator CooldownCor()
		{
			return null;
		}

		[Token(Token = "0x600234D")]
		[Address(RVA = "0xE53544", Offset = "0xE53544", VA = "0xE53544")]
		private void SetCooldown(bool state)
		{
		}

		[Token(Token = "0x600234E")]
		[Address(RVA = "0xE533DC", Offset = "0xE533DC", VA = "0xE533DC")]
		private bool FilterCheck(GameObject targetObject)
		{
			return default(bool);
		}

		[Token(Token = "0x600234F")]
		[Address(RVA = "0xE5356C", Offset = "0xE5356C", VA = "0xE5356C")]
		public void SliceTarget()
		{
		}

		[Token(Token = "0x6002350")]
		[Address(RVA = "0xE53160", Offset = "0xE53160", VA = "0xE53160")]
		private void Slice(GameObject targetObject, Vector3[] slicePlane)
		{
		}

		[Token(Token = "0x6002351")]
		[Address(RVA = "0xE5348C", Offset = "0xE5348C", VA = "0xE5348C")]
		private bool ApplyDamage(RayfireRigid scr, float damageValue)
		{
			return default(bool);
		}

		[Token(Token = "0x6002352")]
		[Address(RVA = "0xE53078", Offset = "0xE53078", VA = "0xE53078")]
		private Vector3[] GetSlicePlane()
		{
			return null;
		}

		[Token(Token = "0x6002353")]
		[Address(RVA = "0xE53550", Offset = "0xE53550", VA = "0xE53550")]
		private bool LayerCheck(int layerId)
		{
			return default(bool);
		}

		[Token(Token = "0x6002354")]
		[Address(RVA = "0xE536B4", Offset = "0xE536B4", VA = "0xE536B4")]
		public RayfireBlade()
		{
		}
	}
	[Token(Token = "0x20005DD")]
	[AddComponentMenu("RayFire/Rayfire Bomb")]
	[HelpURL("http://rayfirestudios.com/unity-online-help/unity-bomb-component/")]
	public class RayfireBomb : MonoBehaviour
	{
		[Token(Token = "0x20005DE")]
		public enum RangeType
		{
			[Token(Token = "0x40021B2")]
			Spherical
		}

		[Token(Token = "0x20005DF")]
		public enum FadeType
		{
			[Token(Token = "0x40021B4")]
			Linear,
			[Token(Token = "0x40021B5")]
			Exponential,
			[Token(Token = "0x40021B6")]
			None
		}

		[Serializable]
		[Token(Token = "0x20005E0")]
		public class Projectile
		{
			[Token(Token = "0x40021B7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Vector3 positionPivot;

			[Token(Token = "0x40021B8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public Vector3 positionClosest;

			[Token(Token = "0x40021B9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float fade;

			[Token(Token = "0x40021BA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Rigidbody rb;

			[Token(Token = "0x40021BB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public RayfireRigid scrRigid;

			[Token(Token = "0x40021BC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public Quaternion rotation;

			[Token(Token = "0x600236E")]
			[Address(RVA = "0xE54938", Offset = "0xE54938", VA = "0xE54938")]
			public Projectile()
			{
			}
		}

		[Token(Token = "0x20005E1")]
		[CompilerGenerated]
		private sealed class <ExplodeCor>d__33 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40021BD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40021BE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40021BF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public RayfireBomb <>4__this;

			[Token(Token = "0x17000200")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002372")]
				[Address(RVA = "0xE54F38", Offset = "0xE54F38", VA = "0xE54F38", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000201")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002374")]
				[Address(RVA = "0xE54F80", Offset = "0xE54F80", VA = "0xE54F80", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600236F")]
			[Address(RVA = "0xE53BFC", Offset = "0xE53BFC", VA = "0xE53BFC")]
			[DebuggerHidden]
			public <ExplodeCor>d__33(int <>1__state)
			{
			}

			[Token(Token = "0x6002370")]
			[Address(RVA = "0xE54E78", Offset = "0xE54E78", VA = "0xE54E78", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002371")]
			[Address(RVA = "0xE54E7C", Offset = "0xE54E7C", VA = "0xE54E7C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002373")]
			[Address(RVA = "0xE54F40", Offset = "0xE54F40", VA = "0xE54F40", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4002197")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Header("  Range")]
		[Space(3f)]
		[Tooltip("Explosion direction")]
		public RangeType rangeType;

		[Token(Token = "0x4002198")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[Tooltip("Explosion strength decay over distance")]
		[Space(1f)]
		public FadeType fadeType;

		[Token(Token = "0x4002199")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[Space(1f)]
		[Tooltip("Only objects in Range distance will be affected by explosion")]
		public float range;

		[Token(Token = "0x400219A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[Range(0f, 10f)]
		[Tooltip("Maximum explosion impulse which will be applied to objects")]
		[Space(3f)]
		[Header("  Impulse")]
		public float strength;

		[Token(Token = "0x400219B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[Space(1f)]
		[Tooltip("Random variation to final explosion strength for every object in percents relative to Strength value")]
		[Range(0f, 100f)]
		public int variation;

		[Token(Token = "0x400219C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[Space(1f)]
		[Range(0f, 90f)]
		[Tooltip("Random rotation velocity to exploded objects")]
		public int chaos;

		[Token(Token = "0x400219D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[Tooltip("Add different final explosion impulse to objects with different mass")]
		[Space(1f)]
		public bool forceByMass;

		[Token(Token = "0x400219E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
		[Tooltip("Activate Kinematic objects and explode them as well")]
		[Space(1f)]
		public bool affectKinematic;

		[Token(Token = "0x400219F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[Tooltip("Allows to offset downward Explosion position over global Y axis")]
		[Space(3f)]
		[Header("  Detonation")]
		public float heightOffset;

		[Token(Token = "0x40021A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[Tooltip("Explosion delay in seconds")]
		[Space(1f)]
		public float delay;

		[Token(Token = "0x40021A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[Space(1f)]
		[Tooltip("Destroy gameobject after explosion")]
		public bool destroy;

		[Token(Token = "0x40021A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3D")]
		[Space(1f)]
		[Header("  Damage")]
		[Space(3f)]
		[Tooltip("Apply damage to objects with Rigid component in case they have enabled Damage")]
		public bool applyDamage;

		[Token(Token = "0x40021A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[Space(1f)]
		[Tooltip("Damage value  which will take object at explosion")]
		public float damageValue;

		[Token(Token = "0x40021A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[Header("  Audio")]
		[Space(3f)]
		[Tooltip("Play audio clip at explosion")]
		public bool play;

		[Token(Token = "0x40021A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[Space(1f)]
		[Tooltip("Volume")]
		[Range(0.01f, 1f)]
		public float volume;

		[Token(Token = "0x40021A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Space(1f)]
		[Tooltip("Audio Clip to play at explosion")]
		public AudioClip clip;

		[Token(Token = "0x40021A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public RFExplosionEvent explosionEvent;

		[Token(Token = "0x40021A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[HideInInspector]
		public Transform transForm;

		[Token(Token = "0x40021A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[HideInInspector]
		public Vector3 bombPosition;

		[Token(Token = "0x40021AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		[HideInInspector]
		public Vector3 explPosition;

		[Token(Token = "0x40021AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[HideInInspector]
		public Collider[] colliders;

		[Token(Token = "0x40021AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[HideInInspector]
		public List<Projectile> projectiles;

		[Token(Token = "0x40021AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[HideInInspector]
		public List<Rigidbody> rigidbodies;

		[Token(Token = "0x40021AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[HideInInspector]
		public bool showGizmo;

		[Token(Token = "0x40021AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		[HideInInspector]
		public int mask;

		[Token(Token = "0x40021B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[HideInInspector]
		public string tagFilter;

		[Token(Token = "0x600235B")]
		[Address(RVA = "0xE538A4", Offset = "0xE538A4", VA = "0xE538A4")]
		private void Awake()
		{
		}

		[Token(Token = "0x600235C")]
		[Address(RVA = "0xE538BC", Offset = "0xE538BC", VA = "0xE538BC")]
		private void DefineComponents()
		{
		}

		[Token(Token = "0x600235D")]
		[Address(RVA = "0xE539D0", Offset = "0xE539D0", VA = "0xE539D0")]
		public void CopyFrom(RayfireBomb scr)
		{
		}

		[Token(Token = "0x600235E")]
		[Address(RVA = "0xE53A4C", Offset = "0xE53A4C", VA = "0xE53A4C")]
		public void Explode(float delayLoc)
		{
		}

		[Token(Token = "0x600235F")]
		[Address(RVA = "0xE53B88", Offset = "0xE53B88", VA = "0xE53B88")]
		[IteratorStateMachine(typeof(<ExplodeCor>d__33))]
		private IEnumerator ExplodeCor()
		{
			return null;
		}

		[Token(Token = "0x6002360")]
		[Address(RVA = "0xE53A90", Offset = "0xE53A90", VA = "0xE53A90")]
		private void Explode()
		{
		}

		[Token(Token = "0x6002361")]
		[Address(RVA = "0xE541CC", Offset = "0xE541CC", VA = "0xE541CC")]
		private void PlayAudio()
		{
		}

		[Token(Token = "0x6002362")]
		[Address(RVA = "0xE53C8C", Offset = "0xE53C8C", VA = "0xE53C8C")]
		private bool Setup()
		{
			return default(bool);
		}

		[Token(Token = "0x6002363")]
		[Address(RVA = "0xE54684", Offset = "0xE54684", VA = "0xE54684")]
		public void Restore()
		{
		}

		[Token(Token = "0x6002364")]
		[Address(RVA = "0xE53914", Offset = "0xE53914", VA = "0xE53914")]
		private void ClearLists()
		{
		}

		[Token(Token = "0x6002365")]
		[Address(RVA = "0xE53C24", Offset = "0xE53C24", VA = "0xE53C24")]
		private void SetPositions()
		{
		}

		[Token(Token = "0x6002366")]
		[Address(RVA = "0xE54288", Offset = "0xE54288", VA = "0xE54288")]
		private void SetColliders()
		{
		}

		[Token(Token = "0x6002367")]
		[Address(RVA = "0xE542CC", Offset = "0xE542CC", VA = "0xE542CC")]
		private void SetProjectiles()
		{
		}

		[Token(Token = "0x6002368")]
		[Address(RVA = "0xE53CF4", Offset = "0xE53CF4", VA = "0xE53CF4")]
		private bool SetRigidDamage()
		{
			return default(bool);
		}

		[Token(Token = "0x6002369")]
		[Address(RVA = "0xE53F48", Offset = "0xE53F48", VA = "0xE53F48")]
		private void SetForce()
		{
		}

		[Token(Token = "0x600236A")]
		[Address(RVA = "0xE54BB8", Offset = "0xE54BB8", VA = "0xE54BB8")]
		private void SetKinematic(Projectile projectile)
		{
		}

		[Token(Token = "0x600236B")]
		[Address(RVA = "0xE54940", Offset = "0xE54940", VA = "0xE54940")]
		private float Fade(Vector3 bombPos, Vector3 fragPos)
		{
			return default(float);
		}

		[Token(Token = "0x600236C")]
		[Address(RVA = "0xE54A88", Offset = "0xE54A88", VA = "0xE54A88")]
		private Vector3 Vector(Projectile projectile)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600236D")]
		[Address(RVA = "0xE54D0C", Offset = "0xE54D0C", VA = "0xE54D0C")]
		public RayfireBomb()
		{
		}
	}
	[Token(Token = "0x20005E2")]
	[AddComponentMenu("RayFire/Rayfire Cluster")]
	[SelectionBase]
	[HelpURL("http://rayfirestudios.com/unity-online-help/unity-cluster-component/")]
	public class RayfireCluster : MonoBehaviour
	{
		[Token(Token = "0x20005E3")]
		public enum ClusterType
		{
			[Token(Token = "0x40021D2")]
			ByPointCloud,
			[Token(Token = "0x40021D3")]
			BySharedArea
		}

		[Token(Token = "0x40021C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Space(2f)]
		[Space(2f)]
		[Header("  Properties")]
		public ClusterType type;

		[Token(Token = "0x40021C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[Range(1f, 7f)]
		public int depth;

		[Token(Token = "0x40021C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[Range(0f, 100f)]
		public int seed;

		[Token(Token = "0x40021C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[Range(0f, 4f)]
		public int smoothPass;

		[Token(Token = "0x40021C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[Header("  By Point Cloud")]
		[Space(2f)]
		[Range(2f, 100f)]
		public int baseAmount;

		[Token(Token = "0x40021C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[Range(2f, 50f)]
		public int depthAmount;

		[Token(Token = "0x40021C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public ConnectivityType connectivity;

		[Token(Token = "0x40021C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[Header("  By Shared Area")]
		[Space(2f)]
		[Range(2f, 8f)]
		public int minimumAmount;

		[Token(Token = "0x40021C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[Range(2f, 8f)]
		public int maximumAmount;

		[Token(Token = "0x40021C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[HideInInspector]
		public bool showGizmo;

		[Token(Token = "0x40021CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3D")]
		[HideInInspector]
		public bool colorPreview;

		[Token(Token = "0x40021CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3E")]
		[HideInInspector]
		public bool scalePreview;

		[Token(Token = "0x40021CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[HideInInspector]
		public Color wireColor;

		[Token(Token = "0x40021CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[HideInInspector]
		public float previewScale;

		[Token(Token = "0x40021CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[HideInInspector]
		public List<RFCluster> allClusters;

		[Token(Token = "0x40021CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[HideInInspector]
		public List<RFShard> allShards;

		[Token(Token = "0x40021D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private int clusterId;

		[Token(Token = "0x6002375")]
		[Address(RVA = "0xE54F88", Offset = "0xE54F88", VA = "0xE54F88")]
		public void Extract()
		{
		}

		[Token(Token = "0x6002376")]
		[Address(RVA = "0xE551EC", Offset = "0xE551EC", VA = "0xE551EC")]
		public void Clusterize()
		{
		}

		[Token(Token = "0x6002377")]
		[Address(RVA = "0xE552A0", Offset = "0xE552A0", VA = "0xE552A0")]
		private void ClusterizeVoronoi()
		{
		}

		[Token(Token = "0x6002378")]
		[Address(RVA = "0xE55C58", Offset = "0xE55C58", VA = "0xE55C58")]
		private List<RFCluster> ClusterizeClusterByAmount(RFCluster parentCluster, int amount)
		{
			return null;
		}

		[Token(Token = "0x6002379")]
		[Address(RVA = "0xE57594", Offset = "0xE57594", VA = "0xE57594")]
		private void ConnectivityCheck(List<RFCluster> childClusters)
		{
		}

		[Token(Token = "0x600237A")]
		[Address(RVA = "0xE55594", Offset = "0xE55594", VA = "0xE55594")]
		private void ClusterizeRange()
		{
		}

		[Token(Token = "0x600237B")]
		[Address(RVA = "0xE583B8", Offset = "0xE583B8", VA = "0xE583B8")]
		private List<RFCluster> ClusterizeRangeShards(RFCluster mainCluster)
		{
			return null;
		}

		[Token(Token = "0x600237C")]
		[Address(RVA = "0xE589D4", Offset = "0xE589D4", VA = "0xE589D4")]
		private List<RFCluster> ClusterizeRangeClusters(RFCluster parentCluster)
		{
			return null;
		}

		[Token(Token = "0x600237D")]
		[Address(RVA = "0xE56BA0", Offset = "0xE56BA0", VA = "0xE56BA0")]
		private static void RoughnessPassShards(List<RFCluster> clusters)
		{
		}

		[Token(Token = "0x600237E")]
		[Address(RVA = "0xE59460", Offset = "0xE59460", VA = "0xE59460")]
		private void RoughnessPassClusters(List<RFCluster> clusters)
		{
		}

		[Token(Token = "0x600237F")]
		[Address(RVA = "0xE5697C", Offset = "0xE5697C", VA = "0xE5697C")]
		private void SetSoloShardToCluster(List<RFShard> soloShards, List<RFCluster> childClusters)
		{
		}

		[Token(Token = "0x6002380")]
		[Address(RVA = "0xE59E24", Offset = "0xE59E24", VA = "0xE59E24")]
		private int GetNeibIndArea(RFShard shard, [Optional] List<RFShard> shardList)
		{
			return default(int);
		}

		[Token(Token = "0x6002381")]
		[Address(RVA = "0xE59258", Offset = "0xE59258", VA = "0xE59258")]
		private void SetSoloClusterToCluster(List<RFCluster> soloClusters, List<RFCluster> childClusters)
		{
		}

		[Token(Token = "0x6002382")]
		[Address(RVA = "0xE55B38", Offset = "0xE55B38", VA = "0xE55B38")]
		private RFCluster SetupMainCluster(ConnectivityType connect)
		{
			return null;
		}

		[Token(Token = "0x6002383")]
		[Address(RVA = "0xE5658C", Offset = "0xE5658C", VA = "0xE5658C")]
		private void SetClusterNames()
		{
		}

		[Token(Token = "0x6002384")]
		[Address(RVA = "0xE58198", Offset = "0xE58198", VA = "0xE58198")]
		private void CreateRoot(RFCluster childCluster, Transform parentTm)
		{
		}

		[Token(Token = "0x6002385")]
		[Address(RVA = "0xE59F4C", Offset = "0xE59F4C", VA = "0xE59F4C")]
		private Bounds GetShardsBound(List<RFShard> shards, [Optional] List<RFCluster> clusters)
		{
			return default(Bounds);
		}

		[Token(Token = "0x6002386")]
		[Address(RVA = "0xE58E9C", Offset = "0xE58E9C", VA = "0xE58E9C")]
		private static RFShard GetNeibShardArea(List<RFShard> shardGroup, List<RFShard> shardList)
		{
			return null;
		}

		[Token(Token = "0x6002387")]
		[Address(RVA = "0xE567C0", Offset = "0xE567C0", VA = "0xE567C0")]
		private List<Vector3> VoronoiPointCloud(Bounds bound, int am)
		{
			return null;
		}

		[Token(Token = "0x6002388")]
		[Address(RVA = "0xE5A36C", Offset = "0xE5A36C", VA = "0xE5A36C")]
		public RayfireCluster()
		{
		}
	}
	[Token(Token = "0x20005E6")]
	[AddComponentMenu("RayFire/Rayfire Combine")]
	[HelpURL("http://rayfirestudios.com/unity-online-help/unity-combine-component/")]
	public class RayfireCombine : MonoBehaviour
	{
		[Token(Token = "0x20005E7")]
		public enum CombType
		{
			[Token(Token = "0x40021F0")]
			Children,
			[Token(Token = "0x40021F1")]
			ObjectsList
		}

		[Token(Token = "0x40021D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Header("  Object source")]
		[Space(3f)]
		public CombType type;

		[Token(Token = "0x40021D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[Space(1f)]
		public List<GameObject> objects;

		[Token(Token = "0x40021D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[Space(3f)]
		[Header("  Mesh source")]
		public bool meshFilters;

		[Token(Token = "0x40021D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		[Space(1f)]
		public bool skinnedMeshes;

		[Token(Token = "0x40021DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A")]
		[Space(1f)]
		public bool particleSystems;

		[Token(Token = "0x40021DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[Range(0f, 10f)]
		[Space(3f)]
		[Space(3f)]
		[Header("  Filters")]
		public float sizeThreshold;

		[Token(Token = "0x40021DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[Range(0f, 100f)]
		[Space(1f)]
		public int vertexThreshold;

		[Token(Token = "0x40021DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Transform transForm;

		[Token(Token = "0x40021DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private MeshFilter mFilter;

		[Token(Token = "0x40021DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private MeshRenderer meshRenderer;

		[Token(Token = "0x40021E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private List<bool> invertNormals;

		[Token(Token = "0x40021E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private List<Transform> transForms;

		[Token(Token = "0x40021E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private List<MeshFilter> mFilters;

		[Token(Token = "0x40021E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private List<SkinnedMeshRenderer> skinnedMeshRends;

		[Token(Token = "0x40021E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private List<ParticleSystemRenderer> particleRends;

		[Token(Token = "0x40021E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private List<Mesh> meshList;

		[Token(Token = "0x40021E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private List<List<int>> matIdList;

		[Token(Token = "0x40021E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private List<List<Material>> matList;

		[Token(Token = "0x40021E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private List<Material> allMaterials;

		[Token(Token = "0x40021E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private List<int> combTrianglesSubId;

		[Token(Token = "0x40021EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private List<List<int>> combTriangles;

		[Token(Token = "0x40021EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private List<Vector3> combVertices;

		[Token(Token = "0x40021EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private List<Vector3> combNormals;

		[Token(Token = "0x40021ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private List<Vector2> combUvs;

		[Token(Token = "0x40021EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private List<Vector4> combTangents;

		[Token(Token = "0x600238D")]
		[Address(RVA = "0xE5A4D0", Offset = "0xE5A4D0", VA = "0xE5A4D0")]
		public void Combine()
		{
		}

		[Token(Token = "0x600238E")]
		[Address(RVA = "0xE5A4F0", Offset = "0xE5A4F0", VA = "0xE5A4F0")]
		private void SetData()
		{
		}

		[Token(Token = "0x600238F")]
		[Address(RVA = "0xE5C2CC", Offset = "0xE5C2CC", VA = "0xE5C2CC")]
		private void SetCombinedMesh()
		{
		}

		[Token(Token = "0x6002390")]
		[Address(RVA = "0xE5CBB4", Offset = "0xE5CBB4", VA = "0xE5CBB4")]
		private void CreateMesh()
		{
		}

		[Token(Token = "0x6002391")]
		[Address(RVA = "0xE5CDD4", Offset = "0xE5CDD4", VA = "0xE5CDD4")]
		public RayfireCombine()
		{
		}
	}
	[Token(Token = "0x20005EA")]
	[HelpURL("http://rayfirestudios.com/unity-online-help/unity-connectivity-component/")]
	[AddComponentMenu("RayFire/Rayfire Connectivity")]
	public class RayfireConnectivity : MonoBehaviour
	{
		[Token(Token = "0x20005EB")]
		public enum RFConnInitType
		{
			[Token(Token = "0x4002213")]
			AtStart = 1,
			[Token(Token = "0x4002214")]
			ByMethod = 3,
			[Token(Token = "0x4002215")]
			ByIntegrity = 5
		}

		[Token(Token = "0x20005EC")]
		[CompilerGenerated]
		private sealed class <ChildrenCor>d__34 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002216")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002217")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002218")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public RayfireConnectivity <>4__this;

			[Token(Token = "0x4002219")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private bool <checkChildren>5__2;

			[Token(Token = "0x17000203")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60023B9")]
				[Address(RVA = "0xE5FC08", Offset = "0xE5FC08", VA = "0xE5FC08", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000204")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60023BB")]
				[Address(RVA = "0xE5FC50", Offset = "0xE5FC50", VA = "0xE5FC50", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60023B6")]
			[Address(RVA = "0xE5FB44", Offset = "0xE5FB44", VA = "0xE5FB44")]
			[DebuggerHidden]
			public <ChildrenCor>d__34(int <>1__state)
			{
			}

			[Token(Token = "0x60023B7")]
			[Address(RVA = "0xE5FB6C", Offset = "0xE5FB6C", VA = "0xE5FB6C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60023B8")]
			[Address(RVA = "0xE5FB70", Offset = "0xE5FB70", VA = "0xE5FB70", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60023BA")]
			[Address(RVA = "0xE5FC10", Offset = "0xE5FC10", VA = "0xE5FC10", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20005ED")]
		[CompilerGenerated]
		private sealed class <ConnectivityCor>d__45 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400221A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400221B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400221C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public RayfireConnectivity <>4__this;

			[Token(Token = "0x17000205")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60023BF")]
				[Address(RVA = "0xE5FD3C", Offset = "0xE5FD3C", VA = "0xE5FD3C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000206")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60023C1")]
				[Address(RVA = "0xE5FD84", Offset = "0xE5FD84", VA = "0xE5FD84", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60023BC")]
			[Address(RVA = "0xE5FC58", Offset = "0xE5FC58", VA = "0xE5FC58")]
			[DebuggerHidden]
			public <ConnectivityCor>d__45(int <>1__state)
			{
			}

			[Token(Token = "0x60023BD")]
			[Address(RVA = "0xE5FC80", Offset = "0xE5FC80", VA = "0xE5FC80", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60023BE")]
			[Address(RVA = "0xE5FC84", Offset = "0xE5FC84", VA = "0xE5FC84", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60023C0")]
			[Address(RVA = "0xE5FD44", Offset = "0xE5FD44", VA = "0xE5FD44", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40021F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Header("  Connectivity")]
		[Space(3f)]
		[Tooltip("Define the the way connections among Shards will be calculated.")]
		public ConnectivityType type;

		[Token(Token = "0x40021F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[Tooltip("Two shards will have connection if their shared area is bigger than this value.")]
		[Header("  Connection Filters")]
		[Range(0f, 1f)]
		[Space(3f)]
		public float minimumArea;

		[Token(Token = "0x40021F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[Tooltip("Two shards will have connection if their size is bigger than this value.")]
		[Range(0f, 10f)]
		[Space(2f)]
		public float minimumSize;

		[Token(Token = "0x40021FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[Tooltip("Random percentage of connections will be discarded.")]
		[Space(2f)]
		[Range(0f, 100f)]
		public int percentage;

		[Token(Token = "0x40021FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[Space(2f)]
		[Range(0f, 100f)]
		[Tooltip("Seed for random percentage filter and for Random Collapse.")]
		public int seed;

		[Token(Token = "0x40021FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[Header("  Cluster Properties")]
		[Space(3f)]
		[Tooltip("Create Connected Cluster for group of Shards connected with each other but not connected with any Unyielding Shard.")]
		public bool clusterize;

		[Token(Token = "0x40021FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2D")]
		[Tooltip("Set Demolition type to Runtime for Connected Clusters created during activation.")]
		[Space(2f)]
		public bool demolishable;

		[Token(Token = "0x40021FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[Header("  Collapse")]
		[Space(3f)]
		public RFConnInitType startCollapse;

		[Token(Token = "0x40021FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[Space(2f)]
		[Range(1f, 99f)]
		public int collapseByIntegrity;

		[Token(Token = "0x4002200")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[Space(2f)]
		[Tooltip("Collapse allows you start break connections among shards and activate single Shards or Group of Shards if they are not connected with any of Unyielding Shard. ")]
		public RFCollapse collapse;

		[Token(Token = "0x4002201")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[Header("  Stress")]
		[Space(3f)]
		public RFConnInitType startStress;

		[Token(Token = "0x4002202")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[Space(2f)]
		[Range(1f, 99f)]
		public int stressByIntegrity;

		[Token(Token = "0x4002203")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[Space(2f)]
		public RFStress stress;

		[Token(Token = "0x4002204")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[HideInInspector]
		public bool showConnections;

		[Token(Token = "0x4002205")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
		[HideInInspector]
		public bool showNodes;

		[Token(Token = "0x4002206")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x52")]
		[HideInInspector]
		public bool showStress;

		[Token(Token = "0x4002207")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x53")]
		[HideInInspector]
		public bool showGizmo;

		[Token(Token = "0x4002208")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[HideInInspector]
		public bool checkConnectivity;

		[Token(Token = "0x4002209")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x55")]
		[HideInInspector]
		public bool connectivityCheckNeed;

		[Token(Token = "0x400220A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[HideInInspector]
		public List<RayfireRigid> rigidList;

		[Token(Token = "0x400220B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[HideInInspector]
		public RFCluster cluster;

		[Token(Token = "0x400220C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[HideInInspector]
		public int initShardAmount;

		[NonSerialized]
		[Token(Token = "0x400220D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public RayfireRigid rigidHost;

		[NonSerialized]
		[Token(Token = "0x400220E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public RayfireRigidRoot rigidRootHost;

		[NonSerialized]
		[Token(Token = "0x400220F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private bool childrenChanged;

		[NonSerialized]
		[Token(Token = "0x4002210")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x81")]
		private bool childrenCorState;

		[NonSerialized]
		[Token(Token = "0x4002211")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x82")]
		private bool connectivityCorState;

		[Token(Token = "0x17000202")]
		public float AmountIntegrity
		{
			[Token(Token = "0x60023B4")]
			[Address(RVA = "0xE5E968", Offset = "0xE5E968", VA = "0xE5E968")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6002398")]
		[Address(RVA = "0xE5CF80", Offset = "0xE5CF80", VA = "0xE5CF80")]
		private void Awake()
		{
		}

		[Token(Token = "0x6002399")]
		[Address(RVA = "0xE5D070", Offset = "0xE5D070", VA = "0xE5D070")]
		private void Start()
		{
		}

		[Token(Token = "0x600239A")]
		[Address(RVA = "0xE5D100", Offset = "0xE5D100", VA = "0xE5D100")]
		private bool Check()
		{
			return default(bool);
		}

		[Token(Token = "0x600239B")]
		[Address(RVA = "0xE5D420", Offset = "0xE5D420", VA = "0xE5D420")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x600239C")]
		[Address(RVA = "0xE5D428", Offset = "0xE5D428", VA = "0xE5D428")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600239D")]
		[Address(RVA = "0xE5D51C", Offset = "0xE5D51C", VA = "0xE5D51C")]
		private void OnTransformChildrenChanged()
		{
		}

		[Token(Token = "0x600239E")]
		[Address(RVA = "0xE5D338", Offset = "0xE5D338", VA = "0xE5D338")]
		[IteratorStateMachine(typeof(<ChildrenCor>d__34))]
		private IEnumerator ChildrenCor()
		{
			return null;
		}

		[Token(Token = "0x600239F")]
		[Address(RVA = "0xE5D528", Offset = "0xE5D528", VA = "0xE5D528")]
		private void ChildrenCheck()
		{
		}

		[Token(Token = "0x60023A0")]
		[Address(RVA = "0xE5CF84", Offset = "0xE5CF84", VA = "0xE5CF84")]
		public void SetConnectivity()
		{
		}

		[Token(Token = "0x60023A1")]
		[Address(RVA = "0xE5DBCC", Offset = "0xE5DBCC", VA = "0xE5DBCC")]
		private List<Transform> SetChildren()
		{
			return null;
		}

		[Token(Token = "0x60023A2")]
		[Address(RVA = "0xE5DD0C", Offset = "0xE5DD0C", VA = "0xE5DD0C")]
		private void SetRigids(List<Transform> tmList)
		{
		}

		[Token(Token = "0x60023A3")]
		[Address(RVA = "0xE5DF80", Offset = "0xE5DF80", VA = "0xE5DF80")]
		private void PrepareCluster()
		{
		}

		[Token(Token = "0x60023A4")]
		[Address(RVA = "0xE5E088", Offset = "0xE5E088", VA = "0xE5E088")]
		private void CreateCluster()
		{
		}

		[Token(Token = "0x60023A5")]
		[Address(RVA = "0xE5E1A0", Offset = "0xE5E1A0", VA = "0xE5E1A0")]
		private void FinishCLuster()
		{
		}

		[Token(Token = "0x60023A6")]
		[Address(RVA = "0xE5DA80", Offset = "0xE5DA80", VA = "0xE5DA80")]
		private void SetClusterRigidList()
		{
		}

		[Token(Token = "0x60023A7")]
		[Address(RVA = "0xE5E224", Offset = "0xE5E224", VA = "0xE5E224")]
		private static bool InitCachedShardsByRigidList(List<RayfireRigid> rigids, RFCluster cluster)
		{
			return default(bool);
		}

		[Token(Token = "0x60023A8")]
		[Address(RVA = "0xE5D7DC", Offset = "0xE5D7DC", VA = "0xE5D7DC")]
		private void SetClusterRigidRoot()
		{
		}

		[Token(Token = "0x60023A9")]
		[Address(RVA = "0xE5D3AC", Offset = "0xE5D3AC", VA = "0xE5D3AC")]
		[IteratorStateMachine(typeof(<ConnectivityCor>d__45))]
		private IEnumerator ConnectivityCor()
		{
			return null;
		}

		[Token(Token = "0x60023AA")]
		[Address(RVA = "0xE5E670", Offset = "0xE5E670", VA = "0xE5E670")]
		public void CheckConnectivity()
		{
		}

		[Token(Token = "0x60023AB")]
		[Address(RVA = "0xE5E860", Offset = "0xE5E860", VA = "0xE5E860")]
		private void CheckConnectivityRigidList()
		{
		}

		[Token(Token = "0x60023AC")]
		[Address(RVA = "0xE5E758", Offset = "0xE5E758", VA = "0xE5E758")]
		private void CheckConnectivityRigidRoot()
		{
		}

		[Token(Token = "0x60023AD")]
		[Address(RVA = "0xE5ED64", Offset = "0xE5ED64", VA = "0xE5ED64")]
		private void ActivateShards(List<RFShard> soloShards)
		{
		}

		[Token(Token = "0x60023AE")]
		[Address(RVA = "0xE5F164", Offset = "0xE5F164", VA = "0xE5F164")]
		private void Clusterize()
		{
		}

		[Token(Token = "0x60023AF")]
		[Address(RVA = "0xE5E9D4", Offset = "0xE5E9D4", VA = "0xE5E9D4")]
		private static void CleanUpActivatedShardsRigidList(RFCluster cluster)
		{
		}

		[Token(Token = "0x60023B0")]
		[Address(RVA = "0xE5EB78", Offset = "0xE5EB78", VA = "0xE5EB78")]
		private static void CheckUnyieldingRigidList(RFCluster cluster)
		{
		}

		[Token(Token = "0x60023B1")]
		[Address(RVA = "0xE5EEFC", Offset = "0xE5EEFC", VA = "0xE5EEFC")]
		private static void CleanUpActivatedShardsRigidRoot(RFCluster cluster)
		{
		}

		[Token(Token = "0x60023B2")]
		[Address(RVA = "0xE5EFE0", Offset = "0xE5EFE0", VA = "0xE5EFE0")]
		private static void CheckUnyieldingRigidRoot(RFCluster cluster)
		{
		}

		[Token(Token = "0x60023B3")]
		[Address(RVA = "0xE5F978", Offset = "0xE5F978", VA = "0xE5F978")]
		public void ResetShards()
		{
		}

		[Token(Token = "0x60023B5")]
		[Address(RVA = "0xE5FB10", Offset = "0xE5FB10", VA = "0xE5FB10")]
		public RayfireConnectivity()
		{
		}
	}
	[Token(Token = "0x20005EE")]
	[SelectionBase]
	[AddComponentMenu("RayFire/Rayfire Debris")]
	[HelpURL("http://rayfirestudios.com/unity-online-help/unity-debris-component/")]
	public class RayfireDebris : MonoBehaviour
	{
		[Token(Token = "0x400221D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Header("  Emit Debris")]
		[Space(3f)]
		public bool onDemolition;

		[Token(Token = "0x400221E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		[Space(1f)]
		public bool onActivation;

		[Token(Token = "0x400221F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
		[Space(1f)]
		public bool onImpact;

		[Token(Token = "0x4002220")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[Header("  Main")]
		[Space(3f)]
		public GameObject debrisReference;

		[Token(Token = "0x4002221")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[Space(2f)]
		public Material debrisMaterial;

		[Token(Token = "0x4002222")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[Space(2f)]
		public Material emissionMaterial;

		[Token(Token = "0x4002223")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[Header("  Properties")]
		[Space(3f)]
		public RFParticleEmission emission;

		[Token(Token = "0x4002224")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[Space(2f)]
		public RFParticleDynamicDebris dynamic;

		[Token(Token = "0x4002225")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[Space(2f)]
		public RFParticleNoise noise;

		[Token(Token = "0x4002226")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Space(2f)]
		public RFParticleCollisionDebris collision;

		[Token(Token = "0x4002227")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[Space(2f)]
		public RFParticleLimitations limitations;

		[Token(Token = "0x4002228")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[Space(2f)]
		public RFParticleRendering rendering;

		[Token(Token = "0x4002229")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[HideInInspector]
		public RayfireRigid rigid;

		[Token(Token = "0x400222A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[HideInInspector]
		public ParticleSystem pSystem;

		[Token(Token = "0x400222B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[HideInInspector]
		public Transform hostTm;

		[Token(Token = "0x400222C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[HideInInspector]
		public bool initialized;

		[Token(Token = "0x400222D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[HideInInspector]
		public List<Mesh> debrisMeshList;

		[Token(Token = "0x400222E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[HideInInspector]
		public Vector3 refScale;

		[Token(Token = "0x400222F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[HideInInspector]
		public List<RayfireDebris> children;

		[Token(Token = "0x4002230")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[HideInInspector]
		public int amountFinal;

		[Token(Token = "0x4002231")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		[HideInInspector]
		public bool oldChild;

		[Token(Token = "0x17000207")]
		public bool HasChildren
		{
			[Token(Token = "0x60023CA")]
			[Address(RVA = "0xE60EC8", Offset = "0xE60EC8", VA = "0xE60EC8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60023C2")]
		[Address(RVA = "0xE5FD8C", Offset = "0xE5FD8C", VA = "0xE5FD8C")]
		public RayfireDebris()
		{
		}

		[Token(Token = "0x60023C3")]
		[Address(RVA = "0xE60010", Offset = "0xE60010", VA = "0xE60010")]
		public void CopyFrom(RayfireDebris source)
		{
		}

		[Token(Token = "0x60023C4")]
		[Address(RVA = "0xE6010C", Offset = "0xE6010C", VA = "0xE6010C")]
		public void Initialize()
		{
		}

		[Token(Token = "0x60023C5")]
		[Address(RVA = "0xE6068C", Offset = "0xE6068C", VA = "0xE6068C")]
		public void Emit()
		{
		}

		[Token(Token = "0x60023C6")]
		[Address(RVA = "0xE607A4", Offset = "0xE607A4", VA = "0xE607A4")]
		public void CreateDebris(RayfireDebris scr, MeshFilter emitMeshFilter, int emitMatIndex, ParticleSystem ps)
		{
		}

		[Token(Token = "0x60023C7")]
		[Address(RVA = "0xE60A98", Offset = "0xE60A98", VA = "0xE60A98")]
		public void SetParticleRendererDebris(ParticleSystemRenderer rend, RayfireDebris scr)
		{
		}

		[Token(Token = "0x60023C8")]
		[Address(RVA = "0xE60120", Offset = "0xE60120", VA = "0xE60120")]
		private void SetReferenceMeshes(GameObject refs)
		{
		}

		[Token(Token = "0x60023C9")]
		[Address(RVA = "0xE60CF8", Offset = "0xE60CF8", VA = "0xE60CF8")]
		private void SetDebrisMaterial(List<MeshFilter> mfs)
		{
		}
	}
	[Token(Token = "0x20005F0")]
	[HelpURL("http://rayfirestudios.com/unity-online-help/unity-dust-component/")]
	[SelectionBase]
	[AddComponentMenu("RayFire/Rayfire Dust")]
	public class RayfireDust : MonoBehaviour
	{
		[Token(Token = "0x4002235")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Space(3f)]
		[Header("  Emit Dust")]
		public bool onDemolition;

		[Token(Token = "0x4002236")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		[Space(1f)]
		public bool onActivation;

		[Token(Token = "0x4002237")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
		[Space(1f)]
		public bool onImpact;

		[Token(Token = "0x4002238")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[Header("  Main")]
		[Space(3f)]
		[Range(0.01f, 1f)]
		public float opacity;

		[Token(Token = "0x4002239")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[Space(2f)]
		public Material dustMaterial;

		[Token(Token = "0x400223A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[Space(2f)]
		public Material[] dustMaterials;

		[Token(Token = "0x400223B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[Space(2f)]
		public Material emissionMaterial;

		[Token(Token = "0x400223C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[Header("  Properties")]
		[Space(3f)]
		public RFParticleEmission emission;

		[Token(Token = "0x400223D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[Space(2f)]
		public RFParticleDynamicDust dynamic;

		[Token(Token = "0x400223E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[Space(2f)]
		public RFParticleNoise noise;

		[Token(Token = "0x400223F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Space(2f)]
		public RFParticleCollisionDust collision;

		[Token(Token = "0x4002240")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[Space(2f)]
		public RFParticleLimitations limitations;

		[Token(Token = "0x4002241")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[Space(2f)]
		public RFParticleRendering rendering;

		[Token(Token = "0x4002242")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[HideInInspector]
		public RayfireRigid rigid;

		[Token(Token = "0x4002243")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[HideInInspector]
		public ParticleSystem pSystem;

		[Token(Token = "0x4002244")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[HideInInspector]
		public Transform hostTm;

		[Token(Token = "0x4002245")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[HideInInspector]
		public bool initialized;

		[Token(Token = "0x4002246")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[HideInInspector]
		public List<RayfireDust> children;

		[Token(Token = "0x4002247")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[HideInInspector]
		public int amountFinal;

		[Token(Token = "0x4002248")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		[HideInInspector]
		public bool oldChild;

		[Token(Token = "0x17000208")]
		public bool HasChildren
		{
			[Token(Token = "0x60023D6")]
			[Address(RVA = "0xE61A20", Offset = "0xE61A20", VA = "0xE61A20")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60023CF")]
		[Address(RVA = "0xE61054", Offset = "0xE61054", VA = "0xE61054")]
		public RayfireDust()
		{
		}

		[Token(Token = "0x60023D0")]
		[Address(RVA = "0xE61248", Offset = "0xE61248", VA = "0xE61248")]
		public void CopyFrom(RayfireDust source)
		{
		}

		[Token(Token = "0x60023D1")]
		[Address(RVA = "0xE6133C", Offset = "0xE6133C", VA = "0xE6133C")]
		public void Initialize()
		{
		}

		[Token(Token = "0x60023D2")]
		[Address(RVA = "0xE6144C", Offset = "0xE6144C", VA = "0xE6144C")]
		public void Emit()
		{
		}

		[Token(Token = "0x60023D3")]
		[Address(RVA = "0xE61534", Offset = "0xE61534", VA = "0xE61534")]
		public void CreateDust(RayfireDust scr, MeshFilter emitMeshFilter, int emitMatIndex, ParticleSystem ps)
		{
		}

		[Token(Token = "0x60023D4")]
		[Address(RVA = "0xE61800", Offset = "0xE61800", VA = "0xE61800")]
		private void SetParticleRendererDust(ParticleSystemRenderer rend, RayfireDust scr)
		{
		}

		[Token(Token = "0x60023D5")]
		[Address(RVA = "0xE61938", Offset = "0xE61938", VA = "0xE61938")]
		private void SetMaterialDust(ParticleSystemRenderer rend, List<Material> mats)
		{
		}
	}
	[Token(Token = "0x20005F1")]
	[HelpURL("http://rayfirestudios.com/unity-online-help/unity-gun-component/")]
	[AddComponentMenu("RayFire/Rayfire Gun")]
	public class RayfireGun : MonoBehaviour
	{
		[Token(Token = "0x20005F2")]
		[CompilerGenerated]
		private sealed class <StartShootCor>d__26 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002262")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002263")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002264")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public RayfireGun <>4__this;

			[Token(Token = "0x4002265")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private int <shootId>5__2;

			[Token(Token = "0x1700020A")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60023ED")]
				[Address(RVA = "0xE64300", Offset = "0xE64300", VA = "0xE64300", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700020B")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60023EF")]
				[Address(RVA = "0xE64348", Offset = "0xE64348", VA = "0xE64348", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60023EA")]
			[Address(RVA = "0xE61B18", Offset = "0xE61B18", VA = "0xE61B18")]
			[DebuggerHidden]
			public <StartShootCor>d__26(int <>1__state)
			{
			}

			[Token(Token = "0x60023EB")]
			[Address(RVA = "0xE64214", Offset = "0xE64214", VA = "0xE64214", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60023EC")]
			[Address(RVA = "0xE64218", Offset = "0xE64218", VA = "0xE64218", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60023EE")]
			[Address(RVA = "0xE64308", Offset = "0xE64308", VA = "0xE64308", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20005F3")]
		[CompilerGenerated]
		private sealed class <BurstCor>d__30 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002266")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002267")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002268")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public RayfireGun <>4__this;

			[Token(Token = "0x4002269")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private int <i>5__2;

			[Token(Token = "0x1700020C")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60023F3")]
				[Address(RVA = "0xE64448", Offset = "0xE64448", VA = "0xE64448", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700020D")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60023F5")]
				[Address(RVA = "0xE64490", Offset = "0xE64490", VA = "0xE64490", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60023F0")]
			[Address(RVA = "0xE6232C", Offset = "0xE6232C", VA = "0xE6232C")]
			[DebuggerHidden]
			public <BurstCor>d__30(int <>1__state)
			{
			}

			[Token(Token = "0x60023F1")]
			[Address(RVA = "0xE64350", Offset = "0xE64350", VA = "0xE64350", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60023F2")]
			[Address(RVA = "0xE64354", Offset = "0xE64354", VA = "0xE64354", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60023F4")]
			[Address(RVA = "0xE64450", Offset = "0xE64450", VA = "0xE64450", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4002249")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Header("  Properties")]
		[Space(3f)]
		public AxisType axis;

		[Token(Token = "0x400224A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[Space(1f)]
		[Range(0f, 100f)]
		public float maxDistance;

		[Token(Token = "0x400224B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[Space(1f)]
		public Transform target;

		[Token(Token = "0x400224C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[Space(3f)]
		[Header("  Burst")]
		[Range(2f, 20f)]
		public int rounds;

		[Token(Token = "0x400224D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[Range(0.01f, 5f)]
		[Space(1f)]
		public float rate;

		[Token(Token = "0x400224E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[Range(0f, 20f)]
		[Space(3f)]
		[Header("  Impact")]
		public float strength;

		[Token(Token = "0x400224F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[Range(0f, 10f)]
		[Space(2f)]
		public float radius;

		[Token(Token = "0x4002250")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[Space(2f)]
		public bool demolishCluster;

		[Token(Token = "0x4002251")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
		[Space(2f)]
		public bool affectInactive;

		[Token(Token = "0x4002252")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3A")]
		[Header("  Components")]
		[Space(3f)]
		public bool rigid;

		[Token(Token = "0x4002253")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3B")]
		public bool rigidRoot;

		[Token(Token = "0x4002254")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[FormerlySerializedAs("affectRigidBodies")]
		public bool rigidBody;

		[Token(Token = "0x4002255")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[Space(2f)]
		[Header("  Damage")]
		[Range(0f, 100f)]
		[Space(3f)]
		public float damage;

		[Token(Token = "0x4002256")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[Space(3f)]
		[Header("  Vfx")]
		public bool debris;

		[Token(Token = "0x4002257")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x45")]
		[Space(1f)]
		public bool dust;

		[Token(Token = "0x4002258")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x46")]
		[Space(1f)]
		public bool flash;

		[Token(Token = "0x4002259")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[Header("  Properties")]
		[Space(2f)]
		public RFFlash Flash;

		[Token(Token = "0x400225A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[HideInInspector]
		public int mask;

		[Token(Token = "0x400225B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[HideInInspector]
		public string tagFilter;

		[Token(Token = "0x400225C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[HideInInspector]
		public bool showRay;

		[Token(Token = "0x400225D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
		[HideInInspector]
		public bool showHit;

		[Token(Token = "0x400225E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x62")]
		[HideInInspector]
		public bool shooting;

		[Token(Token = "0x400225F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static string untagged;

		[Token(Token = "0x4002260")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public RFShotEvent shotEvent;

		[Token(Token = "0x4002261")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Collider[] impactColliders;

		[Token(Token = "0x17000209")]
		public Vector3 ShootVector
		{
			[Token(Token = "0x60023E7")]
			[Address(RVA = "0xE61BC0", Offset = "0xE61BC0", VA = "0xE61BC0")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x60023D7")]
		[Address(RVA = "0xE61A74", Offset = "0xE61A74", VA = "0xE61A74")]
		public void StartShooting()
		{
		}

		[Token(Token = "0x60023D8")]
		[Address(RVA = "0xE61AA4", Offset = "0xE61AA4", VA = "0xE61AA4")]
		[IteratorStateMachine(typeof(<StartShootCor>d__26))]
		private IEnumerator StartShootCor()
		{
			return null;
		}

		[Token(Token = "0x60023D9")]
		[Address(RVA = "0xE61B40", Offset = "0xE61B40", VA = "0xE61B40")]
		public void StopShooting()
		{
		}

		[Token(Token = "0x60023DA")]
		[Address(RVA = "0xE61B48", Offset = "0xE61B48", VA = "0xE61B48")]
		public void Shoot(int shootId = 1)
		{
		}

		[Token(Token = "0x60023DB")]
		[Address(RVA = "0xE62288", Offset = "0xE62288", VA = "0xE62288")]
		public void Burst()
		{
		}

		[Token(Token = "0x60023DC")]
		[Address(RVA = "0xE622B8", Offset = "0xE622B8", VA = "0xE622B8")]
		[IteratorStateMachine(typeof(<BurstCor>d__30))]
		private IEnumerator BurstCor()
		{
			return null;
		}

		[Token(Token = "0x60023DD")]
		[Address(RVA = "0xE61D9C", Offset = "0xE61D9C", VA = "0xE61D9C")]
		public void Shoot(Vector3 shootPos, Vector3 shootVector)
		{
		}

		[Token(Token = "0x60023DE")]
		[Address(RVA = "0xE636C4", Offset = "0xE636C4", VA = "0xE636C4")]
		public void ShootOld(Vector3 shootPos, Vector3 shootVector)
		{
		}

		[Token(Token = "0x60023DF")]
		[Address(RVA = "0xE62A80", Offset = "0xE62A80", VA = "0xE62A80")]
		private void ImpactRigid(RayfireRigid rigidScr, RaycastHit hit, Vector3 impactPoint, Vector3 shootVector)
		{
		}

		[Token(Token = "0x60023E0")]
		[Address(RVA = "0xE632B4", Offset = "0xE632B4", VA = "0xE632B4")]
		private void ImpactRoot(RayfireRigidRoot rootScr, RaycastHit hit, Vector3 impactPoint, Vector3 shootVector)
		{
		}

		[Token(Token = "0x60023E1")]
		[Address(RVA = "0xE63AE4", Offset = "0xE63AE4", VA = "0xE63AE4")]
		private void AddForce(List<Rigidbody> impactRbList, Vector3 impactPoint, Vector3 shootVector)
		{
		}

		[Token(Token = "0x60023E2")]
		[Address(RVA = "0xE62840", Offset = "0xE62840", VA = "0xE62840")]
		private RayfireRigid ApplyDamage(RayfireRigid scrRigid, RaycastHit hit, Vector3 shootPos, Vector3 shootVector, Vector3 impactPoint)
		{
			return null;
		}

		[Token(Token = "0x60023E3")]
		[Address(RVA = "0xE62354", Offset = "0xE62354", VA = "0xE62354")]
		private void VfxFlash(Vector3 position, Vector3 normal)
		{
		}

		[Token(Token = "0x60023E4")]
		[Address(RVA = "0xE62528", Offset = "0xE62528", VA = "0xE62528")]
		private void VfxDebris(List<RayfireDebris> debrisList, Vector3 impactPos, Vector3 impactNormal)
		{
		}

		[Token(Token = "0x60023E5")]
		[Address(RVA = "0xE626B4", Offset = "0xE626B4", VA = "0xE626B4")]
		private void VfxDust(List<RayfireDust> dustList, Vector3 impactPos, Vector3 impactNormal)
		{
		}

		[Token(Token = "0x60023E6")]
		[Address(RVA = "0xE63CA4", Offset = "0xE63CA4", VA = "0xE63CA4")]
		private List<RayfireRigid> ActivationCheck(RayfireRigid scrTarget, Vector3 position)
		{
			return null;
		}

		[Token(Token = "0x60023E8")]
		[Address(RVA = "0xE64070", Offset = "0xE64070", VA = "0xE64070")]
		public RayfireGun()
		{
		}
	}
	[Token(Token = "0x20005F4")]
	[AddComponentMenu("RayFire/Rayfire Man")]
	[HelpURL("http://rayfirestudios.com/unity-online-help/unity-man-component/")]
	[DisallowMultipleComponent]
	public class RayfireMan : MonoBehaviour
	{
		[Token(Token = "0x20005F5")]
		[CompilerGenerated]
		private sealed class <InactiveCor>d__40 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002282")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002283")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002284")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public RayfireMan <>4__this;

			[Token(Token = "0x1700020F")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600240D")]
				[Address(RVA = "0xE65720", Offset = "0xE65720", VA = "0xE65720", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000210")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600240F")]
				[Address(RVA = "0xE65768", Offset = "0xE65768", VA = "0xE65768", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600240A")]
			[Address(RVA = "0xE65130", Offset = "0xE65130", VA = "0xE65130")]
			[DebuggerHidden]
			public <InactiveCor>d__40(int <>1__state)
			{
			}

			[Token(Token = "0x600240B")]
			[Address(RVA = "0xE65550", Offset = "0xE65550", VA = "0xE65550", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600240C")]
			[Address(RVA = "0xE65554", Offset = "0xE65554", VA = "0xE65554", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600240E")]
			[Address(RVA = "0xE65728", Offset = "0xE65728", VA = "0xE65728", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20005F6")]
		[CompilerGenerated]
		private sealed class <ActivationOffsetCor>d__42 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002285")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002286")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002287")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public RayfireMan <>4__this;

			[Token(Token = "0x17000211")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002413")]
				[Address(RVA = "0xE65998", Offset = "0xE65998", VA = "0xE65998", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000212")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002415")]
				[Address(RVA = "0xE659E0", Offset = "0xE659E0", VA = "0xE659E0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002410")]
			[Address(RVA = "0xE652AC", Offset = "0xE652AC", VA = "0xE652AC")]
			[DebuggerHidden]
			public <ActivationOffsetCor>d__42(int <>1__state)
			{
			}

			[Token(Token = "0x6002411")]
			[Address(RVA = "0xE65770", Offset = "0xE65770", VA = "0xE65770", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002412")]
			[Address(RVA = "0xE65774", Offset = "0xE65774", VA = "0xE65774", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002414")]
			[Address(RVA = "0xE659A0", Offset = "0xE659A0", VA = "0xE659A0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400226A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static RayfireMan inst;

		[Token(Token = "0x400226B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Tooltip("Sets custom gravity for simulated objects.")]
		[Space(3f)]
		[Header("  Gravity")]
		public bool setGravity;

		[Token(Token = "0x400226C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[Range(0f, 1f)]
		[Tooltip("Custom gravity multiplier.")]
		[Space(2f)]
		public float multiplier;

		[Token(Token = "0x400226D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[Space(3f)]
		[Header("  Physics")]
		public RigidbodyInterpolation interpolation;

		[Token(Token = "0x400226E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[Space(2f)]
		[Range(0f, 1f)]
		public float colliderSize;

		[Token(Token = "0x400226F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[Space(3f)]
		[Header("  Collision Detection")]
		[FormerlySerializedAs("collisionDetection")]
		public CollisionDetectionMode meshCollision;

		[Token(Token = "0x4002270")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[Space(2f)]
		public CollisionDetectionMode clusterCollision;

		[Token(Token = "0x4002271")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[Header("  Materials")]
		[Space(3f)]
		[Range(0f, 1f)]
		[Tooltip("Minimum mass value which will be assigned to simulated object if it's mass calculated by it's volume and density will be less than this value.")]
		public float minimumMass;

		[Token(Token = "0x4002272")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[Space(2f)]
		[Tooltip("Maximum mass value which will be assigned to simulated object if it's mass calculated by it's volume and density will be higher than this value.")]
		[Range(0f, 400f)]
		public float maximumMass;

		[Token(Token = "0x4002273")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[Tooltip("List of hardcoded materials with predefined simulation and demolition properties.")]
		[Space(2f)]
		public RFMaterialPresets materialPresets;

		[Token(Token = "0x4002274")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[Header("  Activation")]
		[Tooltip("Global Solidity multiplier. Affect solidity of all simulated objects.")]
		[Space(3f)]
		public GameObject parent;

		[Token(Token = "0x4002275")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[Tooltip("Global Solidity multiplier. Affect solidity of all simulated objects.")]
		[Range(0f, 5f)]
		[Space(3f)]
		[Header("  Demolition")]
		public float globalSolidity;

		[Token(Token = "0x4002276")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[Space(2f)]
		[Tooltip("Demolition time quota in milliseconds. Allows to prevent demolition at the same frame if there was already another demolition at the same frame and it took more time than Time Quota value.")]
		[Range(0f, 0.1f)]
		public float timeQuota;

		[Token(Token = "0x4002277")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Space(2f)]
		public RFManDemolition advancedDemolitionProperties;

		[Token(Token = "0x4002278")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[Header("  Pooling")]
		[Space(3f)]
		[Tooltip("")]
		public RFPoolingFragment fragments;

		[Token(Token = "0x4002279")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[Space(2f)]
		public RFPoolingParticles particles;

		[Token(Token = "0x400227A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		[Space(3f)]
		[Header("  About")]
		public static int buildMajor;

		[Token(Token = "0x400227B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public static int buildMinor;

		[Token(Token = "0x400227C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[HideInInspector]
		public Transform transForm;

		[Token(Token = "0x400227D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[HideInInspector]
		public List<string> layers;

		[Token(Token = "0x400227E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[HideInInspector]
		public float maxTimeThisFrame;

		[Token(Token = "0x400227F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public List<RFUny> unyList;

		[Token(Token = "0x4002280")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private List<RayfireRigid> activationOffset;

		[Token(Token = "0x4002281")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private List<RayfireRigid> inactive;

		[Token(Token = "0x1700020E")]
		public static bool MaxAmountCheck
		{
			[Token(Token = "0x60023FE")]
			[Address(RVA = "0xE64B84", Offset = "0xE64B84", VA = "0xE64B84")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60023F6")]
		[Address(RVA = "0xE64498", Offset = "0xE64498", VA = "0xE64498")]
		private void Awake()
		{
		}

		[Token(Token = "0x60023F7")]
		[Address(RVA = "0xE64680", Offset = "0xE64680", VA = "0xE64680")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x60023F8")]
		[Address(RVA = "0xE6449C", Offset = "0xE6449C", VA = "0xE6449C")]
		private void SetInstance()
		{
		}

		[Token(Token = "0x60023F9")]
		[Address(RVA = "0xE64688", Offset = "0xE64688", VA = "0xE64688")]
		private void SetVariables()
		{
		}

		[Token(Token = "0x60023FA")]
		[Address(RVA = "0xE64834", Offset = "0xE64834", VA = "0xE64834")]
		private void SetGravity()
		{
		}

		[Token(Token = "0x60023FB")]
		[Address(RVA = "0xE649D8", Offset = "0xE649D8", VA = "0xE649D8")]
		public static void RayFireManInit()
		{
		}

		[Token(Token = "0x60023FC")]
		[Address(RVA = "0xE64B18", Offset = "0xE64B18", VA = "0xE64B18")]
		private static void EditorCreate()
		{
		}

		[Token(Token = "0x60023FD")]
		[Address(RVA = "0xE648B4", Offset = "0xE648B4", VA = "0xE648B4")]
		private void SetLayers()
		{
		}

		[Token(Token = "0x60023FF")]
		[Address(RVA = "0xE64BFC", Offset = "0xE64BFC", VA = "0xE64BFC")]
		public static void SetParent(Transform tm, Transform original)
		{
		}

		[Token(Token = "0x6002400")]
		[Address(RVA = "0xE64714", Offset = "0xE64714", VA = "0xE64714")]
		private void StartPooling()
		{
		}

		[Token(Token = "0x6002401")]
		[Address(RVA = "0xE64D20", Offset = "0xE64D20", VA = "0xE64D20")]
		public static void DestroyFragment(RayfireRigid scr, Transform tm, float time = 0f)
		{
		}

		[Token(Token = "0x6002402")]
		[Address(RVA = "0xE64F84", Offset = "0xE64F84", VA = "0xE64F84")]
		public static void DestroyGo(GameObject go)
		{
		}

		[Token(Token = "0x6002403")]
		[Address(RVA = "0xE64E44", Offset = "0xE64E44", VA = "0xE64E44")]
		private static void DestroyOp(RayfireRigid scr, Transform tm, float time = 0f)
		{
		}

		[Token(Token = "0x6002404")]
		[Address(RVA = "0xE64FDC", Offset = "0xE64FDC", VA = "0xE64FDC")]
		public void AddInactive(RayfireRigid scr)
		{
		}

		[Token(Token = "0x6002405")]
		[Address(RVA = "0xE650BC", Offset = "0xE650BC", VA = "0xE650BC")]
		[IteratorStateMachine(typeof(<InactiveCor>d__40))]
		private IEnumerator InactiveCor()
		{
			return null;
		}

		[Token(Token = "0x6002406")]
		[Address(RVA = "0xE65158", Offset = "0xE65158", VA = "0xE65158")]
		public void AddActivationOffset(RayfireRigid scr)
		{
		}

		[Token(Token = "0x6002407")]
		[Address(RVA = "0xE65238", Offset = "0xE65238", VA = "0xE65238")]
		[IteratorStateMachine(typeof(<ActivationOffsetCor>d__42))]
		private IEnumerator ActivationOffsetCor()
		{
			return null;
		}

		[Token(Token = "0x6002408")]
		[Address(RVA = "0xE652D4", Offset = "0xE652D4", VA = "0xE652D4")]
		public RayfireMan()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20005F7")]
	public class RFCache
	{
		[Token(Token = "0x4002288")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string name;

		[Token(Token = "0x4002289")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<bool> act;

		[Token(Token = "0x400228A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<Vector3> pos;

		[Token(Token = "0x400228B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public List<Quaternion> rot;

		[Token(Token = "0x400228C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Transform transform;

		[Token(Token = "0x6002416")]
		[Address(RVA = "0xE659E8", Offset = "0xE659E8", VA = "0xE659E8")]
		public RFCache(Transform parent, Transform tm)
		{
		}
	}
	[Token(Token = "0x20005F8")]
	[AddComponentMenu("RayFire/Rayfire Recorder")]
	[HelpURL("http://rayfirestudios.com/unity-online-help/unity-recorder-component/")]
	[SelectionBase]
	[DisallowMultipleComponent]
	public class RayfireRecorder : MonoBehaviour
	{
		[Token(Token = "0x20005F9")]
		public enum AnimatorType
		{
			[Token(Token = "0x40022A3")]
			None = 0,
			[Token(Token = "0x40022A4")]
			Record = 2,
			[Token(Token = "0x40022A5")]
			Play = 8
		}

		[Token(Token = "0x20005FA")]
		[CompilerGenerated]
		private sealed class <RecordCor>d__30 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40022A6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40022A7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40022A8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public RayfireRecorder <>4__this;

			[Token(Token = "0x17000213")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002426")]
				[Address(RVA = "0xE672B8", Offset = "0xE672B8", VA = "0xE672B8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000214")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002428")]
				[Address(RVA = "0xE67300", Offset = "0xE67300", VA = "0xE67300", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002423")]
			[Address(RVA = "0xE66DC0", Offset = "0xE66DC0", VA = "0xE66DC0")]
			[DebuggerHidden]
			public <RecordCor>d__30(int <>1__state)
			{
			}

			[Token(Token = "0x6002424")]
			[Address(RVA = "0xE66E64", Offset = "0xE66E64", VA = "0xE66E64", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002425")]
			[Address(RVA = "0xE66E68", Offset = "0xE66E68", VA = "0xE66E68", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002427")]
			[Address(RVA = "0xE672C0", Offset = "0xE672C0", VA = "0xE672C0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400228D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Space(5f)]
		public AnimatorType mode;

		[Token(Token = "0x400228E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[Space(3f)]
		[Header("  Record Properties")]
		public bool recordOnStart;

		[Token(Token = "0x400228F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[Space(1f)]
		public string clipName;

		[Token(Token = "0x4002290")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[Range(0f, 60f)]
		[Space(1f)]
		public float duration;

		[Token(Token = "0x4002291")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[Range(1f, 60f)]
		[Space(1f)]
		public int rate;

		[Token(Token = "0x4002292")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[Space(5f)]
		public bool reduceKeys;

		[Token(Token = "0x4002293")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[Space(1f)]
		[Range(0f, 0.5f)]
		public float threshold;

		[Token(Token = "0x4002294")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[Space(3f)]
		[Header("  Playback Properties")]
		public bool playOnStart;

		[Token(Token = "0x4002295")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[Space(1f)]
		public AnimationClip animationClip;

		[Token(Token = "0x4002296")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[Space(1f)]
		public RuntimeAnimatorController controller;

		[Token(Token = "0x4002297")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Header("  Rigid Playback")]
		[Space(3f)]
		public bool setToKinematic;

		[Token(Token = "0x4002298")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
		[HideInInspector]
		public bool recorder;

		[Token(Token = "0x4002299")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[HideInInspector]
		public float recordedTime;

		[Token(Token = "0x400229A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private int stateNameHash;

		[Token(Token = "0x400229B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private string assetFolder;

		[Token(Token = "0x400229C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private string clipFolder;

		[Token(Token = "0x400229D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private float stepTime;

		[Token(Token = "0x400229E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Animator animator;

		[Token(Token = "0x400229F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private List<Transform> tmList;

		[Token(Token = "0x40022A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private List<RFCache> cacheList;

		[Token(Token = "0x40022A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private List<float> timeList;

		[Token(Token = "0x6002417")]
		[Address(RVA = "0xE65C5C", Offset = "0xE65C5C", VA = "0xE65C5C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6002418")]
		[Address(RVA = "0xE6600C", Offset = "0xE6600C", VA = "0xE6600C")]
		private void Start()
		{
		}

		[Token(Token = "0x6002419")]
		[Address(RVA = "0xE6605C", Offset = "0xE6605C", VA = "0xE6605C")]
		private void SetRigid()
		{
		}

		[Token(Token = "0x600241A")]
		[Address(RVA = "0xE65C60", Offset = "0xE65C60", VA = "0xE65C60")]
		private void SetVariables()
		{
		}

		[Token(Token = "0x600241B")]
		[Address(RVA = "0xE66348", Offset = "0xE66348", VA = "0xE66348")]
		private void SetModeRecord()
		{
		}

		[Token(Token = "0x600241C")]
		[Address(RVA = "0xE66618", Offset = "0xE66618", VA = "0xE66618")]
		private void SetModePlay()
		{
		}

		[Token(Token = "0x600241D")]
		[Address(RVA = "0xE66D18", Offset = "0xE66D18", VA = "0xE66D18")]
		private void Reset()
		{
		}

		[Token(Token = "0x600241E")]
		[Address(RVA = "0xE66290", Offset = "0xE66290", VA = "0xE66290")]
		public void StartRecord()
		{
		}

		[Token(Token = "0x600241F")]
		[Address(RVA = "0xE66D4C", Offset = "0xE66D4C", VA = "0xE66D4C")]
		[IteratorStateMachine(typeof(<RecordCor>d__30))]
		private IEnumerator RecordCor()
		{
			return null;
		}

		[Token(Token = "0x6002420")]
		[Address(RVA = "0xE66DE8", Offset = "0xE66DE8", VA = "0xE66DE8")]
		public void StopRecord()
		{
		}

		[Token(Token = "0x6002421")]
		[Address(RVA = "0xE662FC", Offset = "0xE662FC", VA = "0xE662FC")]
		public void StartPlay()
		{
		}

		[Token(Token = "0x6002422")]
		[Address(RVA = "0xE66DF0", Offset = "0xE66DF0", VA = "0xE66DF0")]
		public RayfireRecorder()
		{
		}
	}
	[Token(Token = "0x20005FB")]
	[HelpURL("http://rayfirestudios.com/unity-online-help/unity-rrestriction-component/")]
	[DisallowMultipleComponent]
	[AddComponentMenu("RayFire/Rayfire Restriction")]
	[SelectionBase]
	public class RayfireRestriction : MonoBehaviour
	{
		[Token(Token = "0x20005FC")]
		public enum RFBoundActionType
		{
			[Token(Token = "0x40022B4")]
			Fade = 2,
			[Token(Token = "0x40022B5")]
			Reset = 4,
			[Token(Token = "0x40022B6")]
			PostDemolitionAction = 9
		}

		[Token(Token = "0x20005FD")]
		public enum RFDistanceType
		{
			[Token(Token = "0x40022B8")]
			InitializePosition = 0,
			[Token(Token = "0x40022B9")]
			TargetPosition = 2
		}

		[Token(Token = "0x20005FE")]
		public enum RFBoundTriggerType
		{
			[Token(Token = "0x40022BB")]
			Inside = 0,
			[Token(Token = "0x40022BC")]
			Outside = 2
		}

		[Token(Token = "0x20005FF")]
		[CompilerGenerated]
		private sealed class <RestrictionDistanceCor>d__18 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40022BD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40022BE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40022BF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public RayfireRigid scr;

			[Token(Token = "0x40022C0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private WaitForSeconds <intervalDelay>5__2;

			[Token(Token = "0x40022C1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private WaitForSeconds <actionDelay>5__3;

			[Token(Token = "0x40022C2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private Vector3 <checkPosition>5__4;

			[Token(Token = "0x17000215")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002433")]
				[Address(RVA = "0xE67B30", Offset = "0xE67B30", VA = "0xE67B30", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000216")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002435")]
				[Address(RVA = "0xE67B78", Offset = "0xE67B78", VA = "0xE67B78", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002430")]
			[Address(RVA = "0xE677AC", Offset = "0xE677AC", VA = "0xE677AC")]
			[DebuggerHidden]
			public <RestrictionDistanceCor>d__18(int <>1__state)
			{
			}

			[Token(Token = "0x6002431")]
			[Address(RVA = "0xE677FC", Offset = "0xE677FC", VA = "0xE677FC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002432")]
			[Address(RVA = "0xE67800", Offset = "0xE67800", VA = "0xE67800", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002434")]
			[Address(RVA = "0xE67B38", Offset = "0xE67B38", VA = "0xE67B38", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000600")]
		[CompilerGenerated]
		private sealed class <RestrictionTriggerCor>d__19 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40022C3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40022C4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40022C5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public RayfireRigid scr;

			[Token(Token = "0x40022C6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private WaitForSeconds <intervalDelay>5__2;

			[Token(Token = "0x40022C7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private WaitForSeconds <actionDelay>5__3;

			[Token(Token = "0x40022C8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private bool <brokeState>5__4;

			[Token(Token = "0x17000217")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002439")]
				[Address(RVA = "0xE67F2C", Offset = "0xE67F2C", VA = "0xE67F2C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000218")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600243B")]
				[Address(RVA = "0xE67F74", Offset = "0xE67F74", VA = "0xE67F74", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002436")]
			[Address(RVA = "0xE677D4", Offset = "0xE677D4", VA = "0xE677D4")]
			[DebuggerHidden]
			public <RestrictionTriggerCor>d__19(int <>1__state)
			{
			}

			[Token(Token = "0x6002437")]
			[Address(RVA = "0xE67B80", Offset = "0xE67B80", VA = "0xE67B80", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002438")]
			[Address(RVA = "0xE67B84", Offset = "0xE67B84", VA = "0xE67B84", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600243A")]
			[Address(RVA = "0xE67F34", Offset = "0xE67F34", VA = "0xE67F34", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40022A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Space(3f)]
		[Header("  Properties")]
		public bool enable;

		[Token(Token = "0x40022AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[Space(1f)]
		public RFBoundActionType breakAction;

		[Token(Token = "0x40022AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[Range(0f, 60f)]
		[Space(1f)]
		public float actionDelay;

		[Token(Token = "0x40022AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[Range(0.1f, 60f)]
		[Space(1f)]
		public float checkInterval;

		[Token(Token = "0x40022AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[Header("  Distance Restriction")]
		[Space(3f)]
		[Range(0f, 99f)]
		public float distance;

		[Token(Token = "0x40022AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[Space(1f)]
		public RFDistanceType position;

		[Token(Token = "0x40022AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[Space(1f)]
		public Transform target;

		[Token(Token = "0x40022B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[Header("  Trigger Restriction")]
		[Space(3f)]
		public Collider Collider;

		[Token(Token = "0x40022B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[Space(1f)]
		public RFBoundTriggerType region;

		[Token(Token = "0x40022B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[HideInInspector]
		public bool broke;

		[Token(Token = "0x6002429")]
		[Address(RVA = "0xE67308", Offset = "0xE67308", VA = "0xE67308")]
		public RayfireRestriction()
		{
		}

		[Token(Token = "0x600242A")]
		[Address(RVA = "0xE6736C", Offset = "0xE6736C", VA = "0xE6736C")]
		public void CopyFrom(RayfireRestriction rest)
		{
		}

		[Token(Token = "0x600242B")]
		[Address(RVA = "0xE67364", Offset = "0xE67364", VA = "0xE67364")]
		public void Reset()
		{
		}

		[Token(Token = "0x600242C")]
		[Address(RVA = "0xE673D8", Offset = "0xE673D8", VA = "0xE673D8")]
		public static void InitRestriction(RayfireRigid scr)
		{
		}

		[Token(Token = "0x600242D")]
		[Address(RVA = "0xE676BC", Offset = "0xE676BC", VA = "0xE676BC")]
		private static void BrokeRestriction(RayfireRigid scr)
		{
		}

		[Token(Token = "0x600242E")]
		[Address(RVA = "0xE675D4", Offset = "0xE675D4", VA = "0xE675D4")]
		[IteratorStateMachine(typeof(<RestrictionDistanceCor>d__18))]
		private static IEnumerator RestrictionDistanceCor(RayfireRigid scr)
		{
			return null;
		}

		[Token(Token = "0x600242F")]
		[Address(RVA = "0xE67648", Offset = "0xE67648", VA = "0xE67648")]
		[IteratorStateMachine(typeof(<RestrictionTriggerCor>d__19))]
		private static IEnumerator RestrictionTriggerCor(RayfireRigid scr)
		{
			return null;
		}
	}
	[Token(Token = "0x2000601")]
	[SelectionBase]
	[DisallowMultipleComponent]
	[AddComponentMenu("RayFire/Rayfire Rigid")]
	[HelpURL("http://rayfirestudios.com/unity-online-help/unity-rigid-component/")]
	public class RayfireRigid : MonoBehaviour
	{
		[Token(Token = "0x2000602")]
		public enum InitType
		{
			[Token(Token = "0x40022EC")]
			ByMethod,
			[Token(Token = "0x40022ED")]
			AtStart
		}

		[Token(Token = "0x40022C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Space(2f)]
		public InitType initialization;

		[Token(Token = "0x40022CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[Space(3f)]
		[Tooltip("Defines behaviour of object during simulation.")]
		[Header("  Main")]
		public SimType simulationType;

		[Token(Token = "0x40022CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[Space(2f)]
		public ObjectType objectType;

		[Token(Token = "0x40022CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[Tooltip("Defines when and how object will be demolished.")]
		[Space(2f)]
		public DemolitionType demolitionType;

		[Token(Token = "0x40022CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[Header("  Simulation")]
		[Space(3f)]
		[Tooltip("Defines all physics properties for simulated object.")]
		public RFPhysic physics;

		[Token(Token = "0x40022CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[Space(2f)]
		[Tooltip("Allows to activate ( make dynamic ) inactive and kinematic objects.")]
		public RFActivation activation;

		[Token(Token = "0x40022CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[Space(3f)]
		[Header("  Demolition")]
		public RFLimitations limitations;

		[Token(Token = "0x40022D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[Space(2f)]
		public RFDemolitionMesh meshDemolition;

		[Token(Token = "0x40022D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[Space(2f)]
		public RFDemolitionCluster clusterDemolition;

		[Token(Token = "0x40022D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Space(2f)]
		public RFReferenceDemolition referenceDemolition;

		[Token(Token = "0x40022D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[Space(2f)]
		public RFSurface materials;

		[Token(Token = "0x40022D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[Space(2f)]
		public RFDamage damage;

		[Token(Token = "0x40022D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[Header("  Common")]
		[Space(3f)]
		public RFFade fading;

		[Token(Token = "0x40022D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[Space(2f)]
		public RFReset reset;

		[Token(Token = "0x40022D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[Header("  Info")]
		[HideInInspector]
		public bool initialized;

		[Token(Token = "0x40022D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[HideInInspector]
		public Mesh[] meshes;

		[Token(Token = "0x40022D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[HideInInspector]
		public Vector3[] pivots;

		[Token(Token = "0x40022DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[HideInInspector]
		public RFMesh[] rfMeshes;

		[Token(Token = "0x40022DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[HideInInspector]
		public List<RFDictionary> subIds;

		[Token(Token = "0x40022DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[HideInInspector]
		public List<RayfireRigid> fragments;

		[Token(Token = "0x40022DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[HideInInspector]
		public Quaternion cacheRotation;

		[Token(Token = "0x40022DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[HideInInspector]
		public Transform transForm;

		[Token(Token = "0x40022DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[HideInInspector]
		public Transform rootChild;

		[Token(Token = "0x40022E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[HideInInspector]
		public Transform rootParent;

		[Token(Token = "0x40022E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[HideInInspector]
		public MeshFilter meshFilter;

		[Token(Token = "0x40022E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[HideInInspector]
		public MeshRenderer meshRenderer;

		[Token(Token = "0x40022E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[HideInInspector]
		public SkinnedMeshRenderer skinnedMeshRend;

		[Token(Token = "0x40022E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		[HideInInspector]
		public List<RayfireDebris> debrisList;

		[Token(Token = "0x40022E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		[HideInInspector]
		public List<RayfireDust> dustList;

		[Token(Token = "0x40022E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		[HideInInspector]
		public RayfireRestriction restriction;

		[Token(Token = "0x40022E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		[HideInInspector]
		public RayfireSound sound;

		[Token(Token = "0x40022E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		public RFDemolitionEvent demolitionEvent;

		[Token(Token = "0x40022E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		public RFActivationEvent activationEvent;

		[Token(Token = "0x40022EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		public RFRestrictionEvent restrictionEvent;

		[Token(Token = "0x17000219")]
		public bool HasFragments
		{
			[Token(Token = "0x6002462")]
			[Address(RVA = "0xE63C50", Offset = "0xE63C50", VA = "0xE63C50")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700021A")]
		public bool HasMeshes
		{
			[Token(Token = "0x6002463")]
			[Address(RVA = "0xE6AB34", Offset = "0xE6AB34", VA = "0xE6AB34")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700021B")]
		public bool HasRfMeshes
		{
			[Token(Token = "0x6002464")]
			[Address(RVA = "0xE6AB54", Offset = "0xE6AB54", VA = "0xE6AB54")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700021C")]
		public bool HasDebris
		{
			[Token(Token = "0x6002465")]
			[Address(RVA = "0xE6AB74", Offset = "0xE6AB74", VA = "0xE6AB74")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700021D")]
		public bool HasDust
		{
			[Token(Token = "0x6002466")]
			[Address(RVA = "0xE6ABC8", Offset = "0xE6ABC8", VA = "0xE6ABC8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700021E")]
		public bool IsCluster
		{
			[Token(Token = "0x6002467")]
			[Address(RVA = "0xE6AC1C", Offset = "0xE6AC1C", VA = "0xE6AC1C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700021F")]
		public float AmountIntegrity
		{
			[Token(Token = "0x6002468")]
			[Address(RVA = "0xE6AC30", Offset = "0xE6AC30", VA = "0xE6AC30")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x600243C")]
		[Address(RVA = "0xE67F7C", Offset = "0xE67F7C", VA = "0xE67F7C")]
		private void Awake()
		{
		}

		[Token(Token = "0x600243D")]
		[Address(RVA = "0xE68088", Offset = "0xE68088", VA = "0xE68088")]
		private void AwakeMethods()
		{
		}

		[Token(Token = "0x600243E")]
		[Address(RVA = "0xE68EE4", Offset = "0xE68EE4", VA = "0xE68EE4")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x600243F")]
		[Address(RVA = "0xE68F18", Offset = "0xE68F18", VA = "0xE68F18")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6002440")]
		[Address(RVA = "0xE6804C", Offset = "0xE6804C", VA = "0xE6804C")]
		public void Initialize()
		{
		}

		[Token(Token = "0x6002441")]
		[Address(RVA = "0xE68F58", Offset = "0xE68F58", VA = "0xE68F58")]
		public void SetActive(bool state)
		{
		}

		[Token(Token = "0x6002442")]
		[Address(RVA = "0xE68540", Offset = "0xE68540", VA = "0xE68540")]
		private bool SetRootMesh()
		{
			return default(bool);
		}

		[Token(Token = "0x6002443")]
		[Address(RVA = "0xE6821C", Offset = "0xE6821C", VA = "0xE6821C")]
		public void SetComponentsBasic()
		{
		}

		[Token(Token = "0x6002444")]
		[Address(RVA = "0xE689AC", Offset = "0xE689AC", VA = "0xE689AC")]
		private void SetComponentsPhysics()
		{
		}

		[Token(Token = "0x6002445")]
		[Address(RVA = "0xE6978C", Offset = "0xE6978C", VA = "0xE6978C")]
		private void Clusterize()
		{
		}

		[Token(Token = "0x6002446")]
		[Address(RVA = "0xE68D60", Offset = "0xE68D60", VA = "0xE68D60")]
		private void SetObjectType()
		{
		}

		[Token(Token = "0x6002447")]
		[Address(RVA = "0xE68C3C", Offset = "0xE68C3C", VA = "0xE68C3C")]
		public void Default()
		{
		}

		[Token(Token = "0x6002448")]
		[Address(RVA = "0xE698D4", Offset = "0xE698D4", VA = "0xE698D4")]
		private void SetPhysics()
		{
		}

		[Token(Token = "0x6002449")]
		[Address(RVA = "0xE68DA0", Offset = "0xE68DA0", VA = "0xE68DA0")]
		public void StartAllCoroutines()
		{
		}

		[Token(Token = "0x600244A")]
		[Address(RVA = "0xE67FD8", Offset = "0xE67FD8", VA = "0xE67FD8")]
		public void MeshInput()
		{
		}

		[Token(Token = "0x600244B")]
		[Address(RVA = "0xE68B44", Offset = "0xE68B44", VA = "0xE68B44")]
		private void AwakePrecache()
		{
		}

		[Token(Token = "0x600244C")]
		[Address(RVA = "0xE68BBC", Offset = "0xE68BBC", VA = "0xE68BBC")]
		private void AwakePrefragment()
		{
		}

		[Token(Token = "0x600244D")]
		[Address(RVA = "0xE69B8C", Offset = "0xE69B8C", VA = "0xE69B8C")]
		private void OnCollisionEnter(Collision collision)
		{
		}

		[Token(Token = "0x600244E")]
		[Address(RVA = "0xE69D3C", Offset = "0xE69D3C", VA = "0xE69D3C")]
		private bool CollisionDemolition(Collision collision)
		{
			return default(bool);
		}

		[Token(Token = "0x600244F")]
		[Address(RVA = "0xE6A178", Offset = "0xE6A178", VA = "0xE6A178")]
		public bool State()
		{
			return default(bool);
		}

		[Token(Token = "0x6002450")]
		[Address(RVA = "0xE69BD4", Offset = "0xE69BD4", VA = "0xE69BD4")]
		public bool DemolitionState()
		{
			return default(bool);
		}

		[Token(Token = "0x6002451")]
		[Address(RVA = "0xE6A2AC", Offset = "0xE6A2AC", VA = "0xE6A2AC")]
		public void Demolish()
		{
		}

		[Token(Token = "0x6002452")]
		[Address(RVA = "0xE68FE8", Offset = "0xE68FE8", VA = "0xE68FE8")]
		public void CopyPropertiesTo(RayfireRigid toScr)
		{
		}

		[Token(Token = "0x6002453")]
		[Address(RVA = "0xE6A4B8", Offset = "0xE6A4B8", VA = "0xE6A4B8")]
		public void InitMeshFragments()
		{
		}

		[Token(Token = "0x6002454")]
		[Address(RVA = "0xE699E0", Offset = "0xE699E0", VA = "0xE699E0")]
		private void Prefragment()
		{
		}

		[Token(Token = "0x6002455")]
		[Address(RVA = "0xE6A704", Offset = "0xE6A704", VA = "0xE6A704")]
		public void DeleteCache()
		{
		}

		[Token(Token = "0x6002456")]
		[Address(RVA = "0xE6A620", Offset = "0xE6A620", VA = "0xE6A620")]
		public void DeleteFragments()
		{
		}

		[Token(Token = "0x6002457")]
		[Address(RVA = "0xE6A7B0", Offset = "0xE6A7B0", VA = "0xE6A7B0")]
		public void AddSlicePlane(Vector3[] slicePlane)
		{
		}

		[Token(Token = "0x6002458")]
		[Address(RVA = "0xE6A83C", Offset = "0xE6A83C", VA = "0xE6A83C")]
		public void Slice()
		{
		}

		[Token(Token = "0x6002459")]
		[Address(RVA = "0xE6A8F0", Offset = "0xE6A8F0", VA = "0xE6A8F0")]
		public void CacheFrames()
		{
		}

		[Token(Token = "0x600245A")]
		[Address(RVA = "0xE63C48", Offset = "0xE63C48", VA = "0xE63C48")]
		public bool ApplyDamage(float damageValue, Vector3 damagePoint, float damageRadius = 0f)
		{
			return default(bool);
		}

		[Token(Token = "0x600245B")]
		[Address(RVA = "0xE63A24", Offset = "0xE63A24", VA = "0xE63A24")]
		public void Activate(bool connCheck = true)
		{
		}

		[Token(Token = "0x600245C")]
		[Address(RVA = "0xE6A924", Offset = "0xE6A924", VA = "0xE6A924")]
		public void Fade()
		{
		}

		[Token(Token = "0x600245D")]
		[Address(RVA = "0xE6A9CC", Offset = "0xE6A9CC", VA = "0xE6A9CC")]
		public void ResetRigid()
		{
		}

		[Token(Token = "0x600245E")]
		[Address(RVA = "0xE6A9D4", Offset = "0xE6A9D4", VA = "0xE6A9D4")]
		public void DestroyCollider(Collider col)
		{
		}

		[Token(Token = "0x600245F")]
		[Address(RVA = "0xE6AA2C", Offset = "0xE6AA2C", VA = "0xE6AA2C")]
		public void DestroyObject(GameObject go)
		{
		}

		[Token(Token = "0x6002460")]
		[Address(RVA = "0xE6AA84", Offset = "0xE6AA84", VA = "0xE6AA84")]
		public void DestroyRigid(RayfireRigid rigid)
		{
		}

		[Token(Token = "0x6002461")]
		[Address(RVA = "0xE6AADC", Offset = "0xE6AADC", VA = "0xE6AADC")]
		public void DestroyRb(Rigidbody rb)
		{
		}

		[Token(Token = "0x6002469")]
		[Address(RVA = "0xE6ACB4", Offset = "0xE6ACB4", VA = "0xE6ACB4")]
		public RayfireRigid()
		{
		}
	}
	[Token(Token = "0x2000603")]
	[SelectionBase]
	[AddComponentMenu("RayFire/Rayfire Rigid Root")]
	[HelpURL("http://rayfirestudios.com/unity-online-help/unity-rigid-root-component/")]
	[DisallowMultipleComponent]
	public class RayfireRigidRoot : MonoBehaviour
	{
		[Token(Token = "0x2000604")]
		public enum InitType
		{
			[Token(Token = "0x40022FC")]
			ByMethod,
			[Token(Token = "0x40022FD")]
			AtStart
		}

		[Token(Token = "0x2000605")]
		[CompilerGenerated]
		private sealed class <InactiveCor>d__26 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40022FE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40022FF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002300")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public RayfireRigidRoot <>4__this;

			[Token(Token = "0x17000222")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002480")]
				[Address(RVA = "0xE6D3F4", Offset = "0xE6D3F4", VA = "0xE6D3F4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000223")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002482")]
				[Address(RVA = "0xE6D43C", Offset = "0xE6D43C", VA = "0xE6D43C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600247D")]
			[Address(RVA = "0xE6CC4C", Offset = "0xE6CC4C", VA = "0xE6CC4C")]
			[DebuggerHidden]
			public <InactiveCor>d__26(int <>1__state)
			{
			}

			[Token(Token = "0x600247E")]
			[Address(RVA = "0xE6CF28", Offset = "0xE6CF28", VA = "0xE6CF28", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600247F")]
			[Address(RVA = "0xE6CF2C", Offset = "0xE6CF2C", VA = "0xE6CF2C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002481")]
			[Address(RVA = "0xE6D3FC", Offset = "0xE6D3FC", VA = "0xE6D3FC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40022EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Space(2f)]
		public InitType initialization;

		[Token(Token = "0x40022EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[Header("  Simulation")]
		[Space(3f)]
		public SimType simulationType;

		[Token(Token = "0x40022F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[Space(2f)]
		public RFPhysic physics;

		[Token(Token = "0x40022F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[Space(2f)]
		public RFActivation activation;

		[Token(Token = "0x40022F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[Space(2f)]
		public RFFade fading;

		[Token(Token = "0x40022F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[Space(2f)]
		public RFReset reset;

		[Token(Token = "0x40022F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[HideInInspector]
		public List<RFShard> inactiveShards;

		[Token(Token = "0x40022F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[HideInInspector]
		public RFCluster cluster;

		[Token(Token = "0x40022F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[HideInInspector]
		public Transform tm;

		[Token(Token = "0x40022F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[HideInInspector]
		public RayfireConnectivity connect;

		[Token(Token = "0x40022F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[HideInInspector]
		public List<RayfireDebris> debrisList;

		[Token(Token = "0x40022F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[HideInInspector]
		public List<RayfireDust> dustList;

		[Token(Token = "0x40022FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[HideInInspector]
		public List<RayfireUnyielding> unyList;

		[Token(Token = "0x17000220")]
		private bool HasDebris
		{
			[Token(Token = "0x600247A")]
			[Address(RVA = "0xE6C5A4", Offset = "0xE6C5A4", VA = "0xE6C5A4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000221")]
		private bool HasDust
		{
			[Token(Token = "0x600247B")]
			[Address(RVA = "0xE6C5F8", Offset = "0xE6C5F8", VA = "0xE6C5F8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x600246A")]
		[Address(RVA = "0xE6AFF8", Offset = "0xE6AFF8", VA = "0xE6AFF8")]
		private void OnTransformChildrenChanged()
		{
		}

		[Token(Token = "0x600246B")]
		[Address(RVA = "0xE6AFFC", Offset = "0xE6AFFC", VA = "0xE6AFFC")]
		private void Awake()
		{
		}

		[Token(Token = "0x600246C")]
		[Address(RVA = "0xE6B010", Offset = "0xE6B010", VA = "0xE6B010")]
		private void AwakeMethods()
		{
		}

		[Token(Token = "0x600246D")]
		[Address(RVA = "0xE6B098", Offset = "0xE6B098", VA = "0xE6B098")]
		private void SetComponents()
		{
		}

		[Token(Token = "0x600246E")]
		[Address(RVA = "0xE6B17C", Offset = "0xE6B17C", VA = "0xE6B17C")]
		private void SetShards()
		{
		}

		[Token(Token = "0x600246F")]
		[Address(RVA = "0xE6B9FC", Offset = "0xE6B9FC", VA = "0xE6B9FC")]
		private void SetPhysics()
		{
		}

		[Token(Token = "0x6002470")]
		[Address(RVA = "0xE6BF2C", Offset = "0xE6BF2C", VA = "0xE6BF2C")]
		private void SetInactive()
		{
		}

		[Token(Token = "0x6002471")]
		[Address(RVA = "0xE6C0A0", Offset = "0xE6C0A0", VA = "0xE6C0A0")]
		private void SetParticles()
		{
		}

		[Token(Token = "0x6002472")]
		[Address(RVA = "0xE6C428", Offset = "0xE6C428", VA = "0xE6C428")]
		private void SetUnyielding()
		{
		}

		[Token(Token = "0x6002473")]
		[Address(RVA = "0xE6C4B4", Offset = "0xE6C4B4", VA = "0xE6C4B4")]
		private void StartAllCoroutines()
		{
		}

		[Token(Token = "0x6002474")]
		[Address(RVA = "0xE6C98C", Offset = "0xE6C98C", VA = "0xE6C98C")]
		private static void SetShardsByRigids(RFCluster cluster, List<RayfireRigid> rigidList, ConnectivityType connectivity)
		{
		}

		[Token(Token = "0x6002475")]
		[Address(RVA = "0xE6CC2C", Offset = "0xE6CC2C", VA = "0xE6CC2C")]
		private int SimState()
		{
			return default(int);
		}

		[Token(Token = "0x6002476")]
		[Address(RVA = "0xE6C918", Offset = "0xE6C918", VA = "0xE6C918")]
		[IteratorStateMachine(typeof(<InactiveCor>d__26))]
		private IEnumerator InactiveCor()
		{
			return null;
		}

		[Token(Token = "0x6002477")]
		[Address(RVA = "0xE6CC74", Offset = "0xE6CC74", VA = "0xE6CC74")]
		public void ActivateCollider(Collider coll)
		{
		}

		[Token(Token = "0x6002478")]
		[Address(RVA = "0xE6CD94", Offset = "0xE6CD94", VA = "0xE6CD94")]
		public void CopyPropertiesTo(RayfireRigid toScr)
		{
		}

		[Token(Token = "0x6002479")]
		[Address(RVA = "0xE6C528", Offset = "0xE6C528", VA = "0xE6C528")]
		private static bool IsNestedCluster(Transform trans)
		{
			return default(bool);
		}

		[Token(Token = "0x600247C")]
		[Address(RVA = "0xE6CDF8", Offset = "0xE6CDF8", VA = "0xE6CDF8")]
		public RayfireRigidRoot()
		{
		}
	}
	[Token(Token = "0x2000606")]
	[AddComponentMenu("RayFire/Rayfire Shatter")]
	[HelpURL("http://rayfirestudios.com/unity-online-help/unity-shatter-component/")]
	public class RayfireShatter : MonoBehaviour
	{
		[Token(Token = "0x2000607")]
		private enum PrefabMode
		{
			[Token(Token = "0x4002326")]
			Scene,
			[Token(Token = "0x4002327")]
			Asset,
			[Token(Token = "0x4002328")]
			PrefabEditingMode
		}

		[Token(Token = "0x4002301")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Header("  Fragments")]
		[Space(2f)]
		[Tooltip("Defines fragmentation type for object.")]
		public FragType type;

		[Token(Token = "0x4002302")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[Tooltip("Low poly, convex, physic s friendly fragments.")]
		[Space(2f)]
		public RFVoronoi voronoi;

		[Token(Token = "0x4002303")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[Space(2f)]
		[Tooltip("Low poly, convex, physics friendly fragments, stretched along one axis.")]
		public RFSplinters splinters;

		[Token(Token = "0x4002304")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[Space(2f)]
		[Tooltip("Low poly, convex, physics friendly fragments, stretched along two axes.")]
		public RFSplinters slabs;

		[Token(Token = "0x4002305")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[Space(2f)]
		[Tooltip("Low poly, convex, physics friendly fragments, creates radial fragments pattern.")]
		public RFRadial radial;

		[Token(Token = "0x4002306")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[Space(2f)]
		[Tooltip("Low poly, convex, physics friendly fragments, allows to use custom point cloud for fragments distribution.")]
		public RFCustom custom;

		[Token(Token = "0x4002307")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[Tooltip("Slice object by planes.")]
		[Space(2f)]
		public RFSlice slice;

		[Token(Token = "0x4002308")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("Tetrahedron based fragments, this type is mostly useless as is and should be used with Gluing, in this case it creates high poly concave fragments.")]
		[Space(2f)]
		public RFTets tets;

		[Token(Token = "0x4002309")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[Header("  Properties")]
		[Space(2f)]
		[Tooltip("Editor: Allows to fragment complex multi element hi poly meshes with topology issues like open edges and unwelded vertices.")]
		public FragmentMode mode;

		[Token(Token = "0x400230A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[Space(2f)]
		[Tooltip("Allows to define material for fragment's inner surface. ")]
		public RFSurface material;

		[Token(Token = "0x400230B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[Tooltip("Allows to glue groups of fragments into single mesh by deleting shared faces.")]
		[Space(2f)]
		public RFShatterCluster clusters;

		[Token(Token = "0x400230C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[Tooltip("Advanced fragmentation properties.")]
		[Space(2f)]
		public RFShatterAdvanced advanced;

		[Token(Token = "0x400230D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[Header("  Export to asset")]
		[Space(2f)]
		[Tooltip("Export fragments meshes to Unity Asset and reference to this asset.")]
		public RFMeshExport export;

		[Token(Token = "0x400230E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[Header("Center")]
		[HideInInspector]
		public bool showCenter;

		[Token(Token = "0x400230F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		[HideInInspector]
		public Vector3 centerPosition;

		[Token(Token = "0x4002310")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[HideInInspector]
		public Quaternion centerDirection;

		[Token(Token = "0x4002311")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[Header("Components")]
		[HideInInspector]
		public Transform transForm;

		[Token(Token = "0x4002312")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[HideInInspector]
		public MeshFilter meshFilter;

		[Token(Token = "0x4002313")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[HideInInspector]
		public MeshRenderer meshRenderer;

		[Token(Token = "0x4002314")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[HideInInspector]
		public SkinnedMeshRenderer skinnedMeshRend;

		[Token(Token = "0x4002315")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[Header("Variables")]
		[HideInInspector]
		public Mesh[] meshes;

		[Token(Token = "0x4002316")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[HideInInspector]
		public Vector3[] pivots;

		[Token(Token = "0x4002317")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[HideInInspector]
		public List<Transform> rootChildList;

		[Token(Token = "0x4002318")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[HideInInspector]
		public List<GameObject> fragmentsAll;

		[Token(Token = "0x4002319")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[HideInInspector]
		public List<GameObject> fragmentsLast;

		[Token(Token = "0x400231A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		[HideInInspector]
		public List<RFDictionary> origSubMeshIdsRF;

		[Token(Token = "0x400231B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		[HideInInspector]
		public int shatterMode;

		[Token(Token = "0x400231C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
		[HideInInspector]
		public bool colorPreview;

		[Token(Token = "0x400231D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF5")]
		[HideInInspector]
		public bool scalePreview;

		[Token(Token = "0x400231E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		[HideInInspector]
		public float previewScale;

		[Token(Token = "0x400231F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
		[HideInInspector]
		public float size;

		[Token(Token = "0x4002320")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		[HideInInspector]
		public float rescaleFix;

		[Token(Token = "0x4002321")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
		[HideInInspector]
		public Vector3 originalScale;

		[Token(Token = "0x4002322")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		[HideInInspector]
		public Bounds bound;

		[Token(Token = "0x4002323")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static float minSize;

		[Token(Token = "0x4002324")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		[HideInInspector]
		public bool resetState;

		[Token(Token = "0x6002483")]
		[Address(RVA = "0xE6D444", Offset = "0xE6D444", VA = "0xE6D444")]
		private void Reset()
		{
		}

		[Token(Token = "0x6002484")]
		[Address(RVA = "0xE6D5C0", Offset = "0xE6D5C0", VA = "0xE6D5C0")]
		private void SetVariables()
		{
		}

		[Token(Token = "0x6002485")]
		[Address(RVA = "0xE6D5FC", Offset = "0xE6D5FC", VA = "0xE6D5FC")]
		private bool DefineComponents()
		{
			return default(bool);
		}

		[Token(Token = "0x6002486")]
		[Address(RVA = "0xE6DAE0", Offset = "0xE6DAE0", VA = "0xE6DAE0")]
		public Bounds GetBound()
		{
			return default(Bounds);
		}

		[Token(Token = "0x6002487")]
		[Address(RVA = "0xE6DC70", Offset = "0xE6DC70", VA = "0xE6DC70")]
		private static PrefabMode GetPrefabMode(GameObject go)
		{
			return default(PrefabMode);
		}

		[Token(Token = "0x6002488")]
		[Address(RVA = "0xE6DD24", Offset = "0xE6DD24", VA = "0xE6DD24")]
		public void Fragment(int fragmentMode = 0)
		{
		}

		[Token(Token = "0x6002489")]
		[Address(RVA = "0xE6E1D0", Offset = "0xE6E1D0", VA = "0xE6E1D0")]
		private List<GameObject> CreateFragments([Optional] GameObject lastRoot)
		{
			return null;
		}

		[Token(Token = "0x600248A")]
		[Address(RVA = "0xE6ED1C", Offset = "0xE6ED1C", VA = "0xE6ED1C")]
		public void DeleteFragmentsLast(int destroyMode = 0)
		{
		}

		[Token(Token = "0x600248B")]
		[Address(RVA = "0xE6F080", Offset = "0xE6F080", VA = "0xE6F080")]
		public void DeleteFragmentsAll()
		{
		}

		[Token(Token = "0x600248C")]
		[Address(RVA = "0xE6D448", Offset = "0xE6D448", VA = "0xE6D448")]
		public void ResetCenter()
		{
		}

		[Token(Token = "0x600248D")]
		[Address(RVA = "0xE6DEF4", Offset = "0xE6DEF4", VA = "0xE6DEF4")]
		private void ScaleCheck()
		{
		}

		[Token(Token = "0x600248E")]
		[Address(RVA = "0xE6F228", Offset = "0xE6F228", VA = "0xE6F228")]
		public void ResetScale(float scaleValue)
		{
		}

		[Token(Token = "0x600248F")]
		[Address(RVA = "0xE69228", Offset = "0xE69228", VA = "0xE69228")]
		public static void CopyRootMeshShatter(RayfireRigid source, List<RayfireRigid> targets)
		{
		}

		[Token(Token = "0x6002490")]
		[Address(RVA = "0xE6F4D8", Offset = "0xE6F4D8", VA = "0xE6F4D8")]
		private void CopyFrom(RayfireShatter shatter)
		{
		}

		[Token(Token = "0x6002491")]
		[Address(RVA = "0xE6EAE0", Offset = "0xE6EAE0", VA = "0xE6EAE0")]
		private void VertexLimitation()
		{
		}

		[Token(Token = "0x6002492")]
		[Address(RVA = "0xE6F78C", Offset = "0xE6F78C", VA = "0xE6F78C")]
		public RayfireShatter()
		{
		}
	}
	[Token(Token = "0x2000608")]
	[HelpURL("http://rayfirestudios.com/unity-online-help/unity-snapshot-component/")]
	[AddComponentMenu("RayFire/Rayfire Snapshot")]
	[SelectionBase]
	[DisallowMultipleComponent]
	public class RayfireSnapshot : MonoBehaviour
	{
		[Token(Token = "0x4002329")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Space(2f)]
		[Header("  Save Properties")]
		public string assetName;

		[Token(Token = "0x400232A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool compress;

		[Token(Token = "0x400232B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[Header("  Load Properties")]
		[Space(2f)]
		public UnityEngine.Object snapshotAsset;

		[Token(Token = "0x400232C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[Range(0f, 1f)]
		public float sizeFilter;

		[Token(Token = "0x6002494")]
		[Address(RVA = "0xE6FBD4", Offset = "0xE6FBD4", VA = "0xE6FBD4")]
		private void Reset()
		{
		}

		[Token(Token = "0x6002495")]
		[Address(RVA = "0xE6FC08", Offset = "0xE6FC08", VA = "0xE6FC08")]
		public RayfireSnapshot()
		{
		}
	}
	[Token(Token = "0x2000609")]
	[SelectionBase]
	[HelpURL("http://rayfirestudios.com/unity-online-help/unity-sound-component/")]
	[AddComponentMenu("RayFire/Rayfire Sound")]
	public class RayfireSound : MonoBehaviour
	{
		[Token(Token = "0x400232D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Space(3f)]
		[Header("  Properties")]
		[Range(0.01f, 1f)]
		[Tooltip("Base volume. Can be increased by Size Volume property")]
		public float baseVolume;

		[Token(Token = "0x400232E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[Space(1f)]
		[Tooltip("Additional volume per one unit size")]
		[Range(0f, 1f)]
		public float sizeVolume;

		[Token(Token = "0x400232F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[Header("  Events")]
		[Space(3f)]
		[Tooltip("Initialization sound properties")]
		public RFSound initialization;

		[Token(Token = "0x4002330")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[Space(2f)]
		[Tooltip("Activation sound properties")]
		public RFSound activation;

		[Token(Token = "0x4002331")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[Tooltip("Demolition sound properties")]
		[Space(2f)]
		public RFSound demolition;

		[Token(Token = "0x4002332")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[Header("  Filters")]
		[Space(3f)]
		[Tooltip("Objects with size lower than defined value will not make sound")]
		[Range(0f, 1f)]
		public float minimumSize;

		[Token(Token = "0x4002333")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[Tooltip("Objects with distance to main camera higher than defined value will not make sound")]
		[Range(0f, 999f)]
		[Space(1f)]
		public float cameraDistance;

		[Token(Token = "0x4002334")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[HideInInspector]
		public RayfireRigid rigid;

		[Token(Token = "0x6002496")]
		[Address(RVA = "0xE6FC10", Offset = "0xE6FC10", VA = "0xE6FC10")]
		public RayfireSound()
		{
		}

		[Token(Token = "0x6002497")]
		[Address(RVA = "0xE69394", Offset = "0xE69394", VA = "0xE69394")]
		public void Initialize()
		{
		}

		[Token(Token = "0x6002498")]
		[Address(RVA = "0xE6FC38", Offset = "0xE6FC38", VA = "0xE6FC38")]
		public void CopyFrom(RayfireSound source)
		{
		}

		[Token(Token = "0x6002499")]
		[Address(RVA = "0xE6FD2C", Offset = "0xE6FD2C", VA = "0xE6FD2C")]
		private void CreateSource(RayfireRigid scr)
		{
		}
	}
	[Token(Token = "0x200060A")]
	[AddComponentMenu("RayFire/Rayfire Unyielding")]
	[HelpURL("http://rayfirestudios.com/unity-online-help/unity-unyielding-component/")]
	public class RayfireUnyielding : MonoBehaviour
	{
		[Token(Token = "0x4002335")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Header("  Properties")]
		[Space(3f)]
		[Tooltip("Set Unyielding property for children Rigids.")]
		public bool unyielding;

		[Token(Token = "0x4002336")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		[Space(2f)]
		[Tooltip("Set Activatable property for children Rigids.")]
		public bool activatable;

		[Token(Token = "0x4002337")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[Tooltip("Unyielding gizmo center.")]
		[Space(3f)]
		[Header("  Gizmo")]
		public Vector3 centerPosition;

		[Token(Token = "0x4002338")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[Space(2f)]
		[Tooltip("Unyielding gizmo size.")]
		public Vector3 size;

		[Token(Token = "0x4002339")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[HideInInspector]
		public RayfireConnectivity connHost;

		[Token(Token = "0x400233A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[HideInInspector]
		public RayfireRigid rigidHost;

		[Token(Token = "0x400233B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[HideInInspector]
		public List<RayfireRigid> rigidList;

		[Token(Token = "0x400233C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[HideInInspector]
		public List<RFShard> shardList;

		[Token(Token = "0x400233D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[HideInInspector]
		public bool showGizmo;

		[Token(Token = "0x400233E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
		[HideInInspector]
		public bool showCenter;

		[Token(Token = "0x400233F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[HideInInspector]
		public int id;

		[Token(Token = "0x17000224")]
		private bool HasRigids
		{
			[Token(Token = "0x60024A6")]
			[Address(RVA = "0xE70F90", Offset = "0xE70F90", VA = "0xE70F90")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000225")]
		private bool HasShards
		{
			[Token(Token = "0x60024A7")]
			[Address(RVA = "0xE70FE4", Offset = "0xE70FE4", VA = "0xE70FE4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000226")]
		private Vector3 Extents
		{
			[Token(Token = "0x60024A8")]
			[Address(RVA = "0xE7050C", Offset = "0xE7050C", VA = "0xE7050C")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x600249A")]
		[Address(RVA = "0xE6FF80", Offset = "0xE6FF80", VA = "0xE6FF80")]
		public static void ClusterSetup(RayfireRigid rigid)
		{
		}

		[Token(Token = "0x600249B")]
		[Address(RVA = "0xE7006C", Offset = "0xE7006C", VA = "0xE7006C")]
		private static void ClusterOverlap(RayfireUnyielding uny)
		{
		}

		[Token(Token = "0x600249C")]
		[Address(RVA = "0xE703AC", Offset = "0xE703AC", VA = "0xE703AC")]
		public static int ClusterLayerMask(RayfireRigid rigid)
		{
			return default(int);
		}

		[Token(Token = "0x600249D")]
		[Address(RVA = "0xE705B0", Offset = "0xE705B0", VA = "0xE705B0")]
		private static void SetShardUnyState(RFShard shard, bool unyielding, bool activatable)
		{
		}

		[Token(Token = "0x600249E")]
		[Address(RVA = "0xE705D4", Offset = "0xE705D4", VA = "0xE705D4")]
		public static void ConnectivitySetup(RayfireConnectivity connectivity)
		{
		}

		[Token(Token = "0x600249F")]
		[Address(RVA = "0xE706B0", Offset = "0xE706B0", VA = "0xE706B0")]
		private static void ConnectivityOverlap(RayfireUnyielding uny)
		{
		}

		[Token(Token = "0x60024A0")]
		[Address(RVA = "0xE709B8", Offset = "0xE709B8", VA = "0xE709B8")]
		private static int ConnectivityLayerMask(RayfireConnectivity connectivity)
		{
			return default(int);
		}

		[Token(Token = "0x60024A1")]
		[Address(RVA = "0xE70AD4", Offset = "0xE70AD4", VA = "0xE70AD4")]
		public static void SetRigidUnyState(RayfireRigid rigid, int unyId, bool unyielding, bool activatable)
		{
		}

		[Token(Token = "0x60024A2")]
		[Address(RVA = "0xE6C64C", Offset = "0xE6C64C", VA = "0xE6C64C")]
		public void SetRigidRootUnyByOverlap(RayfireRigidRoot rigidRoot)
		{
		}

		[Token(Token = "0x60024A3")]
		[Address(RVA = "0xE70C10", Offset = "0xE70C10", VA = "0xE70C10")]
		public void Activate()
		{
		}

		[Token(Token = "0x60024A4")]
		[Address(RVA = "0xE71038", Offset = "0xE71038", VA = "0xE71038")]
		private void Register()
		{
		}

		[Token(Token = "0x60024A5")]
		[Address(RVA = "0xE711C8", Offset = "0xE711C8", VA = "0xE711C8")]
		private static int GetUnyId()
		{
			return default(int);
		}

		[Token(Token = "0x60024A9")]
		[Address(RVA = "0xE71244", Offset = "0xE71244", VA = "0xE71244")]
		public RayfireUnyielding()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200060B")]
	public class RFUny
	{
		[Token(Token = "0x4002340")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int id;

		[Token(Token = "0x4002341")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public RayfireUnyielding scr;

		[Token(Token = "0x4002342")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Vector3 size;

		[Token(Token = "0x4002343")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public Vector3 center;

		[Token(Token = "0x4002344")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Quaternion rotation;

		[Token(Token = "0x60024AA")]
		[Address(RVA = "0xE711C0", Offset = "0xE711C0", VA = "0xE711C0")]
		public RFUny()
		{
		}
	}
	[Token(Token = "0x200060C")]
	[AddComponentMenu("RayFire/Rayfire Vortex")]
	[HelpURL("http://rayfirestudios.com/unity-online-help/unity-vortex-component/")]
	public class RayfireVortex : MonoBehaviour
	{
		[Token(Token = "0x200060D")]
		[CompilerGenerated]
		private sealed class <VortexForceCor>d__51 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002376")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002377")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002378")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public RayfireVortex <>4__this;

			[Token(Token = "0x17000227")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60024BD")]
				[Address(RVA = "0xE72748", Offset = "0xE72748", VA = "0xE72748", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000228")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60024BF")]
				[Address(RVA = "0xE72790", Offset = "0xE72790", VA = "0xE72790", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60024BA")]
			[Address(RVA = "0xE71370", Offset = "0xE71370", VA = "0xE71370")]
			[DebuggerHidden]
			public <VortexForceCor>d__51(int <>1__state)
			{
			}

			[Token(Token = "0x60024BB")]
			[Address(RVA = "0xE72620", Offset = "0xE72620", VA = "0xE72620", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60024BC")]
			[Address(RVA = "0xE72624", Offset = "0xE72624", VA = "0xE72624", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60024BE")]
			[Address(RVA = "0xE72750", Offset = "0xE72750", VA = "0xE72750", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200060E")]
		[CompilerGenerated]
		private sealed class <SetCollidersCor>d__52 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002379")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400237A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400237B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public RayfireVortex <>4__this;

			[Token(Token = "0x17000229")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60024C3")]
				[Address(RVA = "0xE728D4", Offset = "0xE728D4", VA = "0xE728D4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700022A")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60024C5")]
				[Address(RVA = "0xE7291C", Offset = "0xE7291C", VA = "0xE7291C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60024C0")]
			[Address(RVA = "0xE7140C", Offset = "0xE7140C", VA = "0xE7140C")]
			[DebuggerHidden]
			public <SetCollidersCor>d__52(int <>1__state)
			{
			}

			[Token(Token = "0x60024C1")]
			[Address(RVA = "0xE72798", Offset = "0xE72798", VA = "0xE72798", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60024C2")]
			[Address(RVA = "0xE7279C", Offset = "0xE7279C", VA = "0xE7279C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60024C4")]
			[Address(RVA = "0xE728DC", Offset = "0xE728DC", VA = "0xE728DC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4002345")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[HideInInspector]
		[Header("Hidden")]
		public Transform transForm;

		[Token(Token = "0x4002346")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[HideInInspector]
		public Collider[] colliders;

		[Token(Token = "0x4002347")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[HideInInspector]
		public List<Rigidbody> rigidbodies;

		[Token(Token = "0x4002348")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[HideInInspector]
		public List<Rigidbody> myRigidbodies;

		[Token(Token = "0x4002349")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Vector3 bot;

		[Token(Token = "0x400234A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private Vector3 top;

		[Token(Token = "0x400234B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Vector3 normal;

		[Token(Token = "0x400234C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private Vector3 direction;

		[Token(Token = "0x400234D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Vector3 rbPos;

		[Token(Token = "0x400234E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private Vector3 linePoint;

		[Token(Token = "0x400234F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Vector3 vectorUp;

		[Token(Token = "0x4002350")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private Vector3 centerOutVector;

		[Token(Token = "0x4002351")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Vector3 vectorCenter;

		[Token(Token = "0x4002352")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		private Vector3 perpend;

		[Token(Token = "0x4002353")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private Vector3 vectorSwirl;

		[Token(Token = "0x4002354")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		private Vector3 forceVector;

		[Token(Token = "0x4002355")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private float distancePerpend;

		[Token(Token = "0x4002356")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		private float distanceBottom;

		[Token(Token = "0x4002357")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private float upRateNow;

		[Token(Token = "0x4002358")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		private float localRadius;

		[Token(Token = "0x4002359")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private float upRateOwn;

		[Token(Token = "0x400235A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		private float centerRateOwn;

		[Token(Token = "0x400235B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private float centerRateNow;

		[Token(Token = "0x400235C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		private float upRateDif;

		[Token(Token = "0x400235D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private float centerRateDif;

		[Token(Token = "0x400235E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
		private float maxRadius;

		[Token(Token = "0x400235F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private float axisDistance;

		[Token(Token = "0x4002360")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
		private Plane bottomPlane;

		[Token(Token = "0x4002361")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
		private float torqueVal;

		[Token(Token = "0x4002362")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		[Header("Anchor points")]
		public Vector3 topAnchor;

		[Token(Token = "0x4002363")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
		public Vector3 bottomAnchor;

		[Token(Token = "0x4002364")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		[Header("Gizmo")]
		[Range(0.1f, 50f)]
		public float topRadius;

		[Token(Token = "0x4002365")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
		[Range(0f, 50f)]
		public float bottomRadius;

		[Token(Token = "0x4002366")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		[Header("Eye")]
		[Range(0.05f, 0.9f)]
		public float eye;

		[Token(Token = "0x4002367")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
		[Header("Strength")]
		public bool forceByMass;

		[Token(Token = "0x4002368")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		[Range(1f, 10f)]
		public float stiffness;

		[Token(Token = "0x4002369")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
		[Range(-40f, 40f)]
		public float swirlStrength;

		[Token(Token = "0x400236A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		[Header("Torque")]
		public bool enableTorque;

		[Token(Token = "0x400236B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x13C")]
		[Range(-1f, 1f)]
		public float torqueStrength;

		[Token(Token = "0x400236C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		[Range(0f, 1f)]
		public float torqueVariation;

		[Token(Token = "0x400236D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
		[Header("Height bias")]
		public bool enableHeightBias;

		[Token(Token = "0x400236E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		[Range(0f, 1f)]
		public float biasSpeed;

		[Token(Token = "0x400236F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14C")]
		[Range(0f, 1f)]
		public float biasSpread;

		[Token(Token = "0x4002370")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		[Header("Seed")]
		[Range(0f, 100f)]
		public int seed;

		[Token(Token = "0x4002371")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x154")]
		[Header("Preview")]
		[Range(2f, 10f)]
		public int circles;

		[Token(Token = "0x4002372")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		[HideInInspector]
		public bool showGizmo;

		[Token(Token = "0x4002373")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x159")]
		[HideInInspector]
		public bool topHandle;

		[Token(Token = "0x4002374")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x15C")]
		[Header("Filters")]
		[HideInInspector]
		public int mask;

		[Token(Token = "0x4002375")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		[HideInInspector]
		public string tagFilter;

		[Token(Token = "0x60024AB")]
		[Address(RVA = "0xE71268", Offset = "0xE71268", VA = "0xE71268")]
		private void Awake()
		{
		}

		[Token(Token = "0x60024AC")]
		[Address(RVA = "0xE7126C", Offset = "0xE7126C", VA = "0xE7126C")]
		private void DefineComponents()
		{
		}

		[Token(Token = "0x60024AD")]
		[Address(RVA = "0xE712FC", Offset = "0xE712FC", VA = "0xE712FC")]
		[IteratorStateMachine(typeof(<VortexForceCor>d__51))]
		private IEnumerator VortexForceCor()
		{
			return null;
		}

		[Token(Token = "0x60024AE")]
		[Address(RVA = "0xE71398", Offset = "0xE71398", VA = "0xE71398")]
		[IteratorStateMachine(typeof(<SetCollidersCor>d__52))]
		private IEnumerator SetCollidersCor()
		{
			return null;
		}

		[Token(Token = "0x60024AF")]
		[Address(RVA = "0xE71434", Offset = "0xE71434", VA = "0xE71434")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60024B0")]
		[Address(RVA = "0xE7146C", Offset = "0xE7146C", VA = "0xE7146C")]
		private void SetColliders()
		{
		}

		[Token(Token = "0x60024B1")]
		[Address(RVA = "0xE71590", Offset = "0xE71590", VA = "0xE71590")]
		private void SetColliderGizmo()
		{
		}

		[Token(Token = "0x60024B2")]
		[Address(RVA = "0xE71694", Offset = "0xE71694", VA = "0xE71694")]
		private void SetRigidBodies()
		{
		}

		[Token(Token = "0x60024B3")]
		[Address(RVA = "0xE718D0", Offset = "0xE718D0", VA = "0xE718D0")]
		private void SetForce()
		{
		}

		[Token(Token = "0x60024B4")]
		[Address(RVA = "0xE71F98", Offset = "0xE71F98", VA = "0xE71F98")]
		private Vector3 GetClosetLinePoint(Vector3 worldPos)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60024B5")]
		[Address(RVA = "0xE7219C", Offset = "0xE7219C", VA = "0xE7219C")]
		private Vector3 GetParallelLinePoint(Vector3 worldPos)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60024B6")]
		[Address(RVA = "0xE722D0", Offset = "0xE722D0", VA = "0xE722D0")]
		public static bool LinePlaneIntersection(out Vector3 intersection, Vector3 linePoint, Vector3 lineVec, Vector3 planeNormal, Vector3 planePoint)
		{
			return default(bool);
		}

		[Token(Token = "0x60024B7")]
		[Address(RVA = "0xE723FC", Offset = "0xE723FC", VA = "0xE723FC")]
		private static Vector3 SetVectorLength(Vector3 vector, float size)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60024B8")]
		[Address(RVA = "0xE720CC", Offset = "0xE720CC", VA = "0xE720CC")]
		private float HeightBias(float upRateOwnLoc, float centerRateOwnLoc)
		{
			return default(float);
		}

		[Token(Token = "0x60024B9")]
		[Address(RVA = "0xE724DC", Offset = "0xE724DC", VA = "0xE724DC")]
		public RayfireVortex()
		{
		}
	}
	[Token(Token = "0x200060F")]
	[AddComponentMenu("RayFire/Rayfire Wind")]
	[HelpURL("http://rayfirestudios.com/unity-online-help/unity-wind-component/")]
	public class RayfireWind : MonoBehaviour
	{
		[Token(Token = "0x2000610")]
		public enum DirType
		{
			[Token(Token = "0x4002394")]
			Directional,
			[Token(Token = "0x4002395")]
			Point
		}

		[Token(Token = "0x2000611")]
		[CompilerGenerated]
		private sealed class <WindForceCor>d__26 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002396")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002397")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002398")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public RayfireWind <>4__this;

			[Token(Token = "0x1700022B")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60024DB")]
				[Address(RVA = "0xE73630", Offset = "0xE73630", VA = "0xE73630", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700022C")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60024DD")]
				[Address(RVA = "0xE73678", Offset = "0xE73678", VA = "0xE73678", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60024D8")]
			[Address(RVA = "0xE73530", Offset = "0xE73530", VA = "0xE73530")]
			[DebuggerHidden]
			public <WindForceCor>d__26(int <>1__state)
			{
			}

			[Token(Token = "0x60024D9")]
			[Address(RVA = "0xE73558", Offset = "0xE73558", VA = "0xE73558", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60024DA")]
			[Address(RVA = "0xE7355C", Offset = "0xE7355C", VA = "0xE7355C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60024DC")]
			[Address(RVA = "0xE73638", Offset = "0xE73638", VA = "0xE73638", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400237C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Transform transForm;

		[Token(Token = "0x400237D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Collider[] colliders;

		[Token(Token = "0x400237E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Vector3 halfExtents;

		[Token(Token = "0x400237F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private Vector3 center;

		[Token(Token = "0x4002380")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float offset;

		[Token(Token = "0x4002381")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[Header("  Gizmo")]
		public Vector3 gizmoSize;

		[Token(Token = "0x4002382")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[HideInInspector]
		public bool showGizmo;

		[Token(Token = "0x4002383")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[Range(1f, 100f)]
		[Header("  Noise")]
		public float globalScale;

		[Token(Token = "0x4002384")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[Range(1f, 300f)]
		public float lengthScale;

		[Token(Token = "0x4002385")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[Range(1f, 300f)]
		public float widthScale;

		[Token(Token = "0x4002386")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[Range(-200f, 200f)]
		public float speed;

		[Token(Token = "0x4002387")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		[HideInInspector]
		public bool showNoise;

		[Token(Token = "0x4002388")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[Range(-5f, 5f)]
		[Header("  Strength")]
		public float minimum;

		[Token(Token = "0x4002389")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		[Range(-5f, 5f)]
		public float maximum;

		[Token(Token = "0x400238A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[Range(0f, 10f)]
		public float torque;

		[Token(Token = "0x400238B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		public bool forceByMass;

		[Token(Token = "0x400238C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[Header("  Direction")]
		[Range(0f, 180f)]
		public float divergency;

		[Token(Token = "0x400238D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		[Range(0.01f, 2f)]
		public float turbulence;

		[Token(Token = "0x400238E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[Range(0.5f, 5f)]
		[Header("  Preview")]
		public float previewDensity;

		[Token(Token = "0x400238F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		[Range(0.1f, 5f)]
		public float previewSize;

		[Token(Token = "0x4002390")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[Header("  Affected Rigid Bodies")]
		[HideInInspector]
		public List<Rigidbody> rigidbodies;

		[Token(Token = "0x4002391")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[HideInInspector]
		public int mask;

		[Token(Token = "0x4002392")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[HideInInspector]
		public string tagFilter;

		[Token(Token = "0x60024C6")]
		[Address(RVA = "0xE72924", Offset = "0xE72924", VA = "0xE72924")]
		private void Awake()
		{
		}

		[Token(Token = "0x60024C7")]
		[Address(RVA = "0xE72928", Offset = "0xE72928", VA = "0xE72928")]
		private void DefineComponents()
		{
		}

		[Token(Token = "0x60024C8")]
		[Address(RVA = "0xE729B8", Offset = "0xE729B8", VA = "0xE729B8")]
		[IteratorStateMachine(typeof(<WindForceCor>d__26))]
		private IEnumerator WindForceCor()
		{
			return null;
		}

		[Token(Token = "0x60024C9")]
		[Address(RVA = "0xE72A2C", Offset = "0xE72A2C", VA = "0xE72A2C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60024CA")]
		[Address(RVA = "0xE72A4C", Offset = "0xE72A4C", VA = "0xE72A4C")]
		private void Reset()
		{
		}

		[Token(Token = "0x60024CB")]
		[Address(RVA = "0xE72A58", Offset = "0xE72A58", VA = "0xE72A58")]
		private void SetColliders()
		{
		}

		[Token(Token = "0x60024CC")]
		[Address(RVA = "0xE72C28", Offset = "0xE72C28", VA = "0xE72C28")]
		private void SetColliderGizmo()
		{
		}

		[Token(Token = "0x60024CD")]
		[Address(RVA = "0xE72C7C", Offset = "0xE72C7C", VA = "0xE72C7C")]
		private void SetRigidBodies()
		{
		}

		[Token(Token = "0x60024CE")]
		[Address(RVA = "0xE72EB8", Offset = "0xE72EB8", VA = "0xE72EB8")]
		private void SetForce()
		{
		}

		[Token(Token = "0x60024CF")]
		[Address(RVA = "0xE73208", Offset = "0xE73208", VA = "0xE73208")]
		private Vector3 GetVectorGlobal(Vector3 worldPos)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60024D0")]
		[Address(RVA = "0xE73230", Offset = "0xE73230", VA = "0xE73230")]
		public Vector3 GetVectorLocal(Vector3 localPos)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60024D1")]
		[Address(RVA = "0xE731B8", Offset = "0xE731B8", VA = "0xE731B8")]
		private float PerlinFixedGlobal(Vector3 worldPos)
		{
			return default(float);
		}

		[Token(Token = "0x60024D2")]
		[Address(RVA = "0xE7337C", Offset = "0xE7337C", VA = "0xE7337C")]
		public float PerlinFixedLocal(Vector3 localPos)
		{
			return default(float);
		}

		[Token(Token = "0x60024D3")]
		[Address(RVA = "0xE733BC", Offset = "0xE733BC", VA = "0xE733BC")]
		public float PerlinCustomGlobal(Vector3 worldPos, float SizeX, float SizeZ, float WidthScale, float LengthScale, float GlobalScale, float Offset)
		{
			return default(float);
		}

		[Token(Token = "0x60024D4")]
		[Address(RVA = "0xE73348", Offset = "0xE73348", VA = "0xE73348")]
		public float PerlinCustomLocal(Vector3 localPos, float SizeX, float SizeZ, float WidthScale, float LengthScale, float GlobalScale, float Offset)
		{
			return default(float);
		}

		[Token(Token = "0x60024D5")]
		[Address(RVA = "0xE731E0", Offset = "0xE731E0", VA = "0xE731E0")]
		public float WindStrength(float val)
		{
			return default(float);
		}

		[Token(Token = "0x60024D6")]
		[Address(RVA = "0xE73170", Offset = "0xE73170", VA = "0xE73170")]
		private void SetSpeed()
		{
		}

		[Token(Token = "0x60024D7")]
		[Address(RVA = "0xE73438", Offset = "0xE73438", VA = "0xE73438")]
		public RayfireWind()
		{
		}
	}
}
namespace Photon.Realtime.Demo
{
	[Token(Token = "0x2000612")]
	public class ConnectAndJoinRandomLb : MonoBehaviour, IConnectionCallbacks, IMatchmakingCallbacks, ILobbyCallbacks
	{
		[Token(Token = "0x4002399")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private AppSettings appSettings;

		[Token(Token = "0x400239A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private LoadBalancingClient lbc;

		[Token(Token = "0x400239B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private ConnectionHandler ch;

		[Token(Token = "0x400239C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Text StateUiText;

		[Token(Token = "0x60024DE")]
		[Address(RVA = "0xE73680", Offset = "0xE73680", VA = "0xE73680")]
		public void Start()
		{
		}

		[Token(Token = "0x60024DF")]
		[Address(RVA = "0xE7380C", Offset = "0xE7380C", VA = "0xE7380C")]
		public void Update()
		{
		}

		[Token(Token = "0x60024E0")]
		[Address(RVA = "0xE73940", Offset = "0xE73940", VA = "0xE73940", Slot = "4")]
		public void OnConnected()
		{
		}

		[Token(Token = "0x60024E1")]
		[Address(RVA = "0xE73944", Offset = "0xE73944", VA = "0xE73944", Slot = "5")]
		public void OnConnectedToMaster()
		{
		}

		[Token(Token = "0x60024E2")]
		[Address(RVA = "0xE739C8", Offset = "0xE739C8", VA = "0xE739C8", Slot = "6")]
		public void OnDisconnected(DisconnectCause cause)
		{
		}

		[Token(Token = "0x60024E3")]
		[Address(RVA = "0xE73AB4", Offset = "0xE73AB4", VA = "0xE73AB4", Slot = "8")]
		public void OnCustomAuthenticationResponse(Dictionary<string, object> data)
		{
		}

		[Token(Token = "0x60024E4")]
		[Address(RVA = "0xE73AB8", Offset = "0xE73AB8", VA = "0xE73AB8", Slot = "9")]
		public void OnCustomAuthenticationFailed(string debugMessage)
		{
		}

		[Token(Token = "0x60024E5")]
		[Address(RVA = "0xE73ABC", Offset = "0xE73ABC", VA = "0xE73ABC", Slot = "7")]
		public void OnRegionListReceived(RegionHandler regionHandler)
		{
		}

		[Token(Token = "0x60024E6")]
		[Address(RVA = "0xE73B98", Offset = "0xE73B98", VA = "0xE73B98", Slot = "19")]
		public void OnRoomListUpdate(List<RoomInfo> roomList)
		{
		}

		[Token(Token = "0x60024E7")]
		[Address(RVA = "0xE73B9C", Offset = "0xE73B9C", VA = "0xE73B9C", Slot = "20")]
		public void OnLobbyStatisticsUpdate(List<TypedLobbyInfo> lobbyStatistics)
		{
		}

		[Token(Token = "0x60024E8")]
		[Address(RVA = "0xE73BA0", Offset = "0xE73BA0", VA = "0xE73BA0", Slot = "17")]
		public void OnJoinedLobby()
		{
		}

		[Token(Token = "0x60024E9")]
		[Address(RVA = "0xE73BA4", Offset = "0xE73BA4", VA = "0xE73BA4", Slot = "18")]
		public void OnLeftLobby()
		{
		}

		[Token(Token = "0x60024EA")]
		[Address(RVA = "0xE73BA8", Offset = "0xE73BA8", VA = "0xE73BA8", Slot = "10")]
		public void OnFriendListUpdate(List<FriendInfo> friendList)
		{
		}

		[Token(Token = "0x60024EB")]
		[Address(RVA = "0xE73BAC", Offset = "0xE73BAC", VA = "0xE73BAC", Slot = "11")]
		public void OnCreatedRoom()
		{
		}

		[Token(Token = "0x60024EC")]
		[Address(RVA = "0xE73BB0", Offset = "0xE73BB0", VA = "0xE73BB0", Slot = "12")]
		public void OnCreateRoomFailed(short returnCode, string message)
		{
		}

		[Token(Token = "0x60024ED")]
		[Address(RVA = "0xE73BB4", Offset = "0xE73BB4", VA = "0xE73BB4", Slot = "13")]
		public void OnJoinedRoom()
		{
		}

		[Token(Token = "0x60024EE")]
		[Address(RVA = "0xE73C1C", Offset = "0xE73C1C", VA = "0xE73C1C", Slot = "14")]
		public void OnJoinRoomFailed(short returnCode, string message)
		{
		}

		[Token(Token = "0x60024EF")]
		[Address(RVA = "0xE73C20", Offset = "0xE73C20", VA = "0xE73C20", Slot = "15")]
		public void OnJoinRandomFailed(short returnCode, string message)
		{
		}

		[Token(Token = "0x60024F0")]
		[Address(RVA = "0xE73CD4", Offset = "0xE73CD4", VA = "0xE73CD4", Slot = "16")]
		public void OnLeftRoom()
		{
		}

		[Token(Token = "0x60024F1")]
		[Address(RVA = "0xE73CD8", Offset = "0xE73CD8", VA = "0xE73CD8")]
		private void OnRegionPingCompleted(RegionHandler regionHandler)
		{
		}

		[Token(Token = "0x60024F2")]
		[Address(RVA = "0xE73DFC", Offset = "0xE73DFC", VA = "0xE73DFC")]
		public ConnectAndJoinRandomLb()
		{
		}
	}
}
namespace Photon.Chat.UtilityScripts
{
	[Token(Token = "0x2000613")]
	public class EventSystemSpawner : MonoBehaviour
	{
		[Token(Token = "0x60024F3")]
		[Address(RVA = "0xE73E70", Offset = "0xE73E70", VA = "0xE73E70")]
		private void Start()
		{
		}

		[Token(Token = "0x60024F4")]
		[Address(RVA = "0xE73F78", Offset = "0xE73F78", VA = "0xE73F78")]
		public EventSystemSpawner()
		{
		}
	}
	[Token(Token = "0x2000614")]
	public class OnStartDelete : MonoBehaviour
	{
		[Token(Token = "0x60024F5")]
		[Address(RVA = "0xE73F80", Offset = "0xE73F80", VA = "0xE73F80")]
		private void Start()
		{
		}

		[Token(Token = "0x60024F6")]
		[Address(RVA = "0xE73FEC", Offset = "0xE73FEC", VA = "0xE73FEC")]
		public OnStartDelete()
		{
		}
	}
	[Token(Token = "0x2000615")]
	[RequireComponent(typeof(Text))]
	public class TextButtonTransition : MonoBehaviour, IPointerEnterHandler, IEventSystemHandler, IPointerExitHandler
	{
		[Token(Token = "0x400239D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Text _text;

		[Token(Token = "0x400239E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Selectable Selectable;

		[Token(Token = "0x400239F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Color NormalColor;

		[Token(Token = "0x40023A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Color HoverColor;

		[Token(Token = "0x60024F7")]
		[Address(RVA = "0xE73FF4", Offset = "0xE73FF4", VA = "0xE73FF4")]
		public void Awake()
		{
		}

		[Token(Token = "0x60024F8")]
		[Address(RVA = "0xE7404C", Offset = "0xE7404C", VA = "0xE7404C")]
		public void OnEnable()
		{
		}

		[Token(Token = "0x60024F9")]
		[Address(RVA = "0xE7407C", Offset = "0xE7407C", VA = "0xE7407C")]
		public void OnDisable()
		{
		}

		[Token(Token = "0x60024FA")]
		[Address(RVA = "0xE740AC", Offset = "0xE740AC", VA = "0xE740AC", Slot = "4")]
		public void OnPointerEnter(PointerEventData eventData)
		{
		}

		[Token(Token = "0x60024FB")]
		[Address(RVA = "0xE7415C", Offset = "0xE7415C", VA = "0xE7415C", Slot = "5")]
		public void OnPointerExit(PointerEventData eventData)
		{
		}

		[Token(Token = "0x60024FC")]
		[Address(RVA = "0xE7420C", Offset = "0xE7420C", VA = "0xE7420C")]
		public TextButtonTransition()
		{
		}
	}
	[Token(Token = "0x2000616")]
	[RequireComponent(typeof(Text))]
	public class TextToggleIsOnTransition : MonoBehaviour, IPointerEnterHandler, IEventSystemHandler, IPointerExitHandler
	{
		[Token(Token = "0x40023A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Toggle toggle;

		[Token(Token = "0x40023A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Text _text;

		[Token(Token = "0x40023A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Color NormalOnColor;

		[Token(Token = "0x40023A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Color NormalOffColor;

		[Token(Token = "0x40023A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Color HoverOnColor;

		[Token(Token = "0x40023A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Color HoverOffColor;

		[Token(Token = "0x40023A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private bool isHover;

		[Token(Token = "0x60024FD")]
		[Address(RVA = "0xE74228", Offset = "0xE74228", VA = "0xE74228")]
		public void OnEnable()
		{
		}

		[Token(Token = "0x60024FE")]
		[Address(RVA = "0xE7437C", Offset = "0xE7437C", VA = "0xE7437C")]
		public void OnDisable()
		{
		}

		[Token(Token = "0x60024FF")]
		[Address(RVA = "0xE74318", Offset = "0xE74318", VA = "0xE74318")]
		public void OnValueChanged(bool isOn)
		{
		}

		[Token(Token = "0x6002500")]
		[Address(RVA = "0xE74424", Offset = "0xE74424", VA = "0xE74424", Slot = "4")]
		public void OnPointerEnter(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6002501")]
		[Address(RVA = "0xE74498", Offset = "0xE74498", VA = "0xE74498", Slot = "5")]
		public void OnPointerExit(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6002502")]
		[Address(RVA = "0xE74508", Offset = "0xE74508", VA = "0xE74508")]
		public TextToggleIsOnTransition()
		{
		}
	}
}
namespace OculusSampleFramework
{
	[Token(Token = "0x2000617")]
	public class ColorGrabbable : OVRGrabbable
	{
		[Token(Token = "0x40023A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly Color COLOR_GRAB;

		[Token(Token = "0x40023A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static readonly Color COLOR_HIGHLIGHT;

		[Token(Token = "0x40023AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Color m_color;

		[Token(Token = "0x40023AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private MeshRenderer[] m_meshRenderers;

		[Token(Token = "0x40023AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private bool m_highlight;

		[Token(Token = "0x1700022D")]
		public bool Highlight
		{
			[Token(Token = "0x6002503")]
			[Address(RVA = "0xE7452C", Offset = "0xE7452C", VA = "0xE7452C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002504")]
			[Address(RVA = "0xE74534", Offset = "0xE74534", VA = "0xE74534")]
			set
			{
			}
		}

		[Token(Token = "0x6002505")]
		[Address(RVA = "0xE74540", Offset = "0xE74540", VA = "0xE74540")]
		protected void UpdateColor()
		{
		}

		[Token(Token = "0x6002506")]
		[Address(RVA = "0xE746E0", Offset = "0xE746E0", VA = "0xE746E0", Slot = "4")]
		public override void GrabBegin(OVRGrabber hand, Collider grabPoint)
		{
		}

		[Token(Token = "0x6002507")]
		[Address(RVA = "0xE746FC", Offset = "0xE746FC", VA = "0xE746FC", Slot = "5")]
		public override void GrabEnd(Vector3 linearVelocity, Vector3 angularVelocity)
		{
		}

		[Token(Token = "0x6002508")]
		[Address(RVA = "0xE74718", Offset = "0xE74718", VA = "0xE74718")]
		private void Awake()
		{
		}

		[Token(Token = "0x6002509")]
		[Address(RVA = "0xE745EC", Offset = "0xE745EC", VA = "0xE745EC")]
		private void SetColor(Color color)
		{
		}

		[Token(Token = "0x600250A")]
		[Address(RVA = "0xE749CC", Offset = "0xE749CC", VA = "0xE749CC")]
		public ColorGrabbable()
		{
		}
	}
	[Token(Token = "0x2000618")]
	public class DistanceGrabbable : OVRGrabbable
	{
		[Token(Token = "0x40023AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public string m_materialColorField;

		[Token(Token = "0x40023AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private GrabbableCrosshair m_crosshair;

		[Token(Token = "0x40023AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private GrabManager m_crosshairManager;

		[Token(Token = "0x40023B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Renderer m_renderer;

		[Token(Token = "0x40023B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private MaterialPropertyBlock m_mpb;

		[Token(Token = "0x40023B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private bool m_inRange;

		[Token(Token = "0x40023B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x71")]
		private bool m_targeted;

		[Token(Token = "0x1700022E")]
		public bool InRange
		{
			[Token(Token = "0x600250C")]
			[Address(RVA = "0xE74A44", Offset = "0xE74A44", VA = "0xE74A44")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600250D")]
			[Address(RVA = "0xE74A4C", Offset = "0xE74A4C", VA = "0xE74A4C")]
			set
			{
			}
		}

		[Token(Token = "0x1700022F")]
		public bool Targeted
		{
			[Token(Token = "0x600250E")]
			[Address(RVA = "0xE74BB8", Offset = "0xE74BB8", VA = "0xE74BB8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600250F")]
			[Address(RVA = "0xE74BC0", Offset = "0xE74BC0", VA = "0xE74BC0")]
			set
			{
			}
		}

		[Token(Token = "0x6002510")]
		[Address(RVA = "0xE74BCC", Offset = "0xE74BCC", VA = "0xE74BCC", Slot = "6")]
		protected override void Start()
		{
		}

		[Token(Token = "0x6002511")]
		[Address(RVA = "0xE74A58", Offset = "0xE74A58", VA = "0xE74A58")]
		private void RefreshCrosshair()
		{
		}

		[Token(Token = "0x6002512")]
		[Address(RVA = "0xE74DBC", Offset = "0xE74DBC", VA = "0xE74DBC")]
		public DistanceGrabbable()
		{
		}
	}
	[Token(Token = "0x2000619")]
	[RequireComponent(typeof(Rigidbody))]
	public class DistanceGrabber : OVRGrabber
	{
		[Token(Token = "0x40023B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		[SerializeField]
		private float m_spherecastRadius;

		[Token(Token = "0x40023B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[SerializeField]
		private float m_noSnapThreshhold;

		[Token(Token = "0x40023B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		[SerializeField]
		private bool m_useSpherecast;

		[Token(Token = "0x40023B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCD")]
		[SerializeField]
		public bool m_preventGrabThroughWalls;

		[Token(Token = "0x40023B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[SerializeField]
		private float m_objectPullVelocity;

		[Token(Token = "0x40023B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		private float m_objectPullMaxRotationRate;

		[Token(Token = "0x40023BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private bool m_movingObjectToHand;

		[Token(Token = "0x40023BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		[SerializeField]
		private float m_maxGrabDistance;

		[Token(Token = "0x40023BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[SerializeField]
		private int m_grabObjectsInLayer;

		[Token(Token = "0x40023BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		[SerializeField]
		private int m_obstructionLayer;

		[Token(Token = "0x40023BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private DistanceGrabber m_otherHand;

		[Token(Token = "0x40023BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		protected DistanceGrabbable m_target;

		[Token(Token = "0x40023C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		protected Collider m_targetCollider;

		[Token(Token = "0x17000230")]
		public bool UseSpherecast
		{
			[Token(Token = "0x6002513")]
			[Address(RVA = "0xE74DC4", Offset = "0xE74DC4", VA = "0xE74DC4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002514")]
			[Address(RVA = "0xE74DCC", Offset = "0xE74DCC", VA = "0xE74DCC")]
			set
			{
			}
		}

		[Token(Token = "0x6002515")]
		[Address(RVA = "0xE74DE8", Offset = "0xE74DE8", VA = "0xE74DE8", Slot = "5")]
		protected override void Start()
		{
		}

		[Token(Token = "0x6002516")]
		[Address(RVA = "0xE74FF4", Offset = "0xE74FF4", VA = "0xE74FF4", Slot = "6")]
		public override void Update()
		{
		}

		[Token(Token = "0x6002517")]
		[Address(RVA = "0xE758E0", Offset = "0xE758E0", VA = "0xE758E0", Slot = "7")]
		protected override void GrabBegin()
		{
		}

		[Token(Token = "0x6002518")]
		[Address(RVA = "0xE75E48", Offset = "0xE75E48", VA = "0xE75E48", Slot = "8")]
		protected override void MoveGrabbedObject(Vector3 pos, Quaternion rot, bool forceTeleport = false)
		{
		}

		[Token(Token = "0x6002519")]
		[Address(RVA = "0xE76258", Offset = "0xE76258", VA = "0xE76258")]
		private static DistanceGrabbable HitInfoToGrabbable(RaycastHit hitInfo)
		{
			return null;
		}

		[Token(Token = "0x600251A")]
		[Address(RVA = "0xE7521C", Offset = "0xE7521C", VA = "0xE7521C")]
		protected bool FindTarget(out DistanceGrabbable dgOut, out Collider collOut)
		{
			return default(bool);
		}

		[Token(Token = "0x600251B")]
		[Address(RVA = "0xE76344", Offset = "0xE76344", VA = "0xE76344")]
		protected bool FindTargetWithSpherecast(out DistanceGrabbable dgOut, out Collider collOut)
		{
			return default(bool);
		}

		[Token(Token = "0x600251C")]
		[Address(RVA = "0xE76744", Offset = "0xE76744", VA = "0xE76744", Slot = "9")]
		protected override void GrabVolumeEnable(bool enabled)
		{
		}

		[Token(Token = "0x600251D")]
		[Address(RVA = "0xE7675C", Offset = "0xE7675C", VA = "0xE7675C", Slot = "10")]
		protected override void OffhandGrabbed(OVRGrabbable grabbable)
		{
		}

		[Token(Token = "0x600251E")]
		[Address(RVA = "0xE76764", Offset = "0xE76764", VA = "0xE76764")]
		public DistanceGrabber()
		{
		}
	}
	[Token(Token = "0x200061A")]
	public class GrabbableCrosshair : MonoBehaviour
	{
		[Token(Token = "0x200061B")]
		public enum CrosshairState
		{
			[Token(Token = "0x40023C6")]
			Disabled,
			[Token(Token = "0x40023C7")]
			Enabled,
			[Token(Token = "0x40023C8")]
			Targeted
		}

		[Token(Token = "0x40023C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private CrosshairState m_state;

		[Token(Token = "0x40023C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Transform m_centerEyeAnchor;

		[Token(Token = "0x40023C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private GameObject m_targetedCrosshair;

		[Token(Token = "0x40023C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private GameObject m_enabledCrosshair;

		[Token(Token = "0x600251F")]
		[Address(RVA = "0xE76784", Offset = "0xE76784", VA = "0xE76784")]
		private void Start()
		{
		}

		[Token(Token = "0x6002520")]
		[Address(RVA = "0xE74D30", Offset = "0xE74D30", VA = "0xE74D30")]
		public void SetState(CrosshairState cs)
		{
		}

		[Token(Token = "0x6002521")]
		[Address(RVA = "0xE767EC", Offset = "0xE767EC", VA = "0xE767EC")]
		private void Update()
		{
		}

		[Token(Token = "0x6002522")]
		[Address(RVA = "0xE76824", Offset = "0xE76824", VA = "0xE76824")]
		public GrabbableCrosshair()
		{
		}
	}
	[Token(Token = "0x200061C")]
	public class GrabManager : MonoBehaviour
	{
		[Token(Token = "0x40023C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Collider m_grabVolume;

		[Token(Token = "0x40023CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Color OutlineColorInRange;

		[Token(Token = "0x40023CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Color OutlineColorHighlighted;

		[Token(Token = "0x40023CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Color OutlineColorOutOfRange;

		[Token(Token = "0x6002523")]
		[Address(RVA = "0xE7682C", Offset = "0xE7682C", VA = "0xE7682C")]
		private void OnTriggerEnter(Collider otherCollider)
		{
		}

		[Token(Token = "0x6002524")]
		[Address(RVA = "0xE768D8", Offset = "0xE768D8", VA = "0xE768D8")]
		private void OnTriggerExit(Collider otherCollider)
		{
		}

		[Token(Token = "0x6002525")]
		[Address(RVA = "0xE76980", Offset = "0xE76980", VA = "0xE76980")]
		public GrabManager()
		{
		}
	}
	[Token(Token = "0x200061D")]
	public class PauseOnInputLoss : MonoBehaviour
	{
		[Token(Token = "0x6002526")]
		[Address(RVA = "0xE76988", Offset = "0xE76988", VA = "0xE76988")]
		private void Start()
		{
		}

		[Token(Token = "0x6002527")]
		[Address(RVA = "0xE76A74", Offset = "0xE76A74", VA = "0xE76A74")]
		private void OnInputFocusLost()
		{
		}

		[Token(Token = "0x6002528")]
		[Address(RVA = "0xE76A80", Offset = "0xE76A80", VA = "0xE76A80")]
		private void OnInputFocusAcquired()
		{
		}

		[Token(Token = "0x6002529")]
		[Address(RVA = "0xE76A8C", Offset = "0xE76A8C", VA = "0xE76A8C")]
		public PauseOnInputLoss()
		{
		}
	}
	[Token(Token = "0x200061E")]
	public class BoneCapsuleTriggerLogic : MonoBehaviour
	{
		[Token(Token = "0x40023CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public InteractableToolTags ToolTags;

		[Token(Token = "0x40023CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public HashSet<ColliderZone> CollidersTouchingUs;

		[Token(Token = "0x40023CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private List<ColliderZone> _elementsToCleanUp;

		[Token(Token = "0x600252A")]
		[Address(RVA = "0xE76A94", Offset = "0xE76A94", VA = "0xE76A94")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x600252B")]
		[Address(RVA = "0xE76AE4", Offset = "0xE76AE4", VA = "0xE76AE4")]
		private void Update()
		{
		}

		[Token(Token = "0x600252C")]
		[Address(RVA = "0xE76EBC", Offset = "0xE76EBC", VA = "0xE76EBC")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x600252D")]
		[Address(RVA = "0xE76FA8", Offset = "0xE76FA8", VA = "0xE76FA8")]
		private void OnTriggerExit(Collider other)
		{
		}

		[Token(Token = "0x600252E")]
		[Address(RVA = "0xE76AE8", Offset = "0xE76AE8", VA = "0xE76AE8")]
		private void CleanUpDeadColliders()
		{
		}

		[Token(Token = "0x600252F")]
		[Address(RVA = "0xE77094", Offset = "0xE77094", VA = "0xE77094")]
		public BoneCapsuleTriggerLogic()
		{
		}
	}
	[Token(Token = "0x200061F")]
	public class ButtonController : Interactable
	{
		[Token(Token = "0x2000620")]
		public enum ContactTest
		{
			[Token(Token = "0x40023DF")]
			PerpenTest,
			[Token(Token = "0x40023E0")]
			BackwardsPress
		}

		[Token(Token = "0x40023D0")]
		private const float ENTRY_DOT_THRESHOLD = 0.8f;

		[Token(Token = "0x40023D1")]
		private const float PERP_DOT_THRESHOLD = 0.5f;

		[Token(Token = "0x40023D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private GameObject _proximityZone;

		[Token(Token = "0x40023D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private GameObject _contactZone;

		[Token(Token = "0x40023D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private GameObject _actionZone;

		[Token(Token = "0x40023D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private ContactTest[] _contactTests;

		[Token(Token = "0x40023D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private Transform _buttonPlaneCenter;

		[Token(Token = "0x40023D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private bool _makeSureToolIsOnPositiveSide;

		[Token(Token = "0x40023D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		[SerializeField]
		private Vector3 _localButtonDirection;

		[Token(Token = "0x40023D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private InteractableToolTags[] _allValidToolsTags;

		[Token(Token = "0x40023DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private int _toolTagsMask;

		[Token(Token = "0x40023DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		[SerializeField]
		private bool _allowMultipleNearFieldInteraction;

		[Token(Token = "0x40023DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private Dictionary<InteractableTool, InteractableState> _toolToState;

		[Token(Token = "0x17000231")]
		public override int ValidToolTagsMask
		{
			[Token(Token = "0x6002530")]
			[Address(RVA = "0xE7716C", Offset = "0xE7716C", VA = "0xE7716C", Slot = "4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000232")]
		public Vector3 LocalButtonDirection
		{
			[Token(Token = "0x6002531")]
			[Address(RVA = "0xE77174", Offset = "0xE77174", VA = "0xE77174")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x17000233")]
		public InteractableState CurrentButtonState
		{
			[Token(Token = "0x6002532")]
			[Address(RVA = "0xE77180", Offset = "0xE77180", VA = "0xE77180")]
			[CompilerGenerated]
			get
			{
				return default(InteractableState);
			}
			[Token(Token = "0x6002533")]
			[Address(RVA = "0xE77188", Offset = "0xE77188", VA = "0xE77188")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x6002534")]
		[Address(RVA = "0xE77190", Offset = "0xE77190", VA = "0xE77190", Slot = "9")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6002535")]
		[Address(RVA = "0xE772E0", Offset = "0xE772E0", VA = "0xE772E0")]
		private void FireInteractionEventsOnDepth(InteractableCollisionDepth oldDepth, InteractableTool collidingTool, InteractionType interactionType)
		{
		}

		[Token(Token = "0x6002536")]
		[Address(RVA = "0xE774E8", Offset = "0xE774E8", VA = "0xE774E8", Slot = "8")]
		public override void UpdateCollisionDepth(InteractableTool interactableTool, InteractableCollisionDepth oldCollisionDepth, InteractableCollisionDepth newCollisionDepth)
		{
		}

		[Token(Token = "0x6002537")]
		[Address(RVA = "0xE77AAC", Offset = "0xE77AAC", VA = "0xE77AAC")]
		private InteractableState GetUpcomingStateNearField(InteractableState oldState, InteractableCollisionDepth newCollisionDepth, bool toolIsInActionZone, bool toolIsInContactZone, bool toolIsInProximity, bool validContact, bool onPositiveSideOfInteractable)
		{
			return default(InteractableState);
		}

		[Token(Token = "0x6002538")]
		[Address(RVA = "0xE77C14", Offset = "0xE77C14", VA = "0xE77C14")]
		public void ForceResetButton()
		{
		}

		[Token(Token = "0x6002539")]
		[Address(RVA = "0xE779D0", Offset = "0xE779D0", VA = "0xE779D0")]
		private bool IsValidContact(InteractableTool collidingTool, Vector3 buttonDirection)
		{
			return default(bool);
		}

		[Token(Token = "0x600253A")]
		[Address(RVA = "0xE77D20", Offset = "0xE77D20", VA = "0xE77D20")]
		private bool PassEntryTest(InteractableTool collidingTool, Vector3 buttonDirection)
		{
			return default(bool);
		}

		[Token(Token = "0x600253B")]
		[Address(RVA = "0xE77E2C", Offset = "0xE77E2C", VA = "0xE77E2C")]
		private bool PassPerpTest(InteractableTool collidingTool, Vector3 buttonDirection)
		{
			return default(bool);
		}

		[Token(Token = "0x600253C")]
		[Address(RVA = "0xE77EB4", Offset = "0xE77EB4", VA = "0xE77EB4")]
		public ButtonController()
		{
		}
	}
	[Token(Token = "0x2000621")]
	public class ButtonTriggerZone : MonoBehaviour, ColliderZone
	{
		[Token(Token = "0x40023E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject _parentInteractableObj;

		[Token(Token = "0x17000234")]
		public Collider Collider
		{
			[Token(Token = "0x600253D")]
			[Address(RVA = "0xE77FD8", Offset = "0xE77FD8", VA = "0xE77FD8", Slot = "4")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x600253E")]
			[Address(RVA = "0xE77FE0", Offset = "0xE77FE0", VA = "0xE77FE0")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x17000235")]
		public Interactable ParentInteractable
		{
			[Token(Token = "0x600253F")]
			[Address(RVA = "0xE77FE8", Offset = "0xE77FE8", VA = "0xE77FE8", Slot = "5")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6002540")]
			[Address(RVA = "0xE77FF0", Offset = "0xE77FF0", VA = "0xE77FF0")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x17000236")]
		public InteractableCollisionDepth CollisionDepth
		{
			[Token(Token = "0x6002541")]
			[Address(RVA = "0xE77FF8", Offset = "0xE77FF8", VA = "0xE77FF8", Slot = "6")]
			get
			{
				return default(InteractableCollisionDepth);
			}
		}

		[Token(Token = "0x6002542")]
		[Address(RVA = "0xE78048", Offset = "0xE78048", VA = "0xE78048")]
		private void Awake()
		{
		}

		[Token(Token = "0x6002543")]
		[Address(RVA = "0xE780DC", Offset = "0xE780DC", VA = "0xE780DC")]
		public ButtonTriggerZone()
		{
		}
	}
	[Token(Token = "0x2000622")]
	public interface ColliderZone
	{
		[Token(Token = "0x17000237")]
		Collider Collider
		{
			[Token(Token = "0x6002544")]
			get;
		}

		[Token(Token = "0x17000238")]
		Interactable ParentInteractable
		{
			[Token(Token = "0x6002545")]
			get;
		}

		[Token(Token = "0x17000239")]
		InteractableCollisionDepth CollisionDepth
		{
			[Token(Token = "0x6002546")]
			get;
		}
	}
	[Token(Token = "0x2000623")]
	public class ColliderZoneArgs : EventArgs
	{
		[Token(Token = "0x40023E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly ColliderZone Collider;

		[Token(Token = "0x40023E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly float FrameTime;

		[Token(Token = "0x40023E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly InteractableTool CollidingTool;

		[Token(Token = "0x40023E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly InteractionType InteractionT;

		[Token(Token = "0x6002547")]
		[Address(RVA = "0xE7743C", Offset = "0xE7743C", VA = "0xE7743C")]
		public ColliderZoneArgs(ColliderZone collider, float frameTime, InteractableTool collidingTool, InteractionType interactionType)
		{
		}
	}
	[Token(Token = "0x2000624")]
	public enum InteractionType
	{
		[Token(Token = "0x40023E9")]
		Enter,
		[Token(Token = "0x40023EA")]
		Stay,
		[Token(Token = "0x40023EB")]
		Exit
	}
	[Token(Token = "0x2000625")]
	public class HandsManager : MonoBehaviour
	{
		[Token(Token = "0x2000626")]
		public enum HandsVisualMode
		{
			[Token(Token = "0x40023FD")]
			Mesh,
			[Token(Token = "0x40023FE")]
			Skeleton,
			[Token(Token = "0x40023FF")]
			Both
		}

		[Token(Token = "0x2000627")]
		[CompilerGenerated]
		private sealed class <FindSkeletonVisualGameObjects>d__52 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002400")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002401")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002402")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public HandsManager <>4__this;

			[Token(Token = "0x17000245")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002569")]
				[Address(RVA = "0xE7953C", Offset = "0xE7953C", VA = "0xE7953C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000246")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600256B")]
				[Address(RVA = "0xE79584", Offset = "0xE79584", VA = "0xE79584", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002566")]
			[Address(RVA = "0xE78B34", Offset = "0xE78B34", VA = "0xE78B34")]
			[DebuggerHidden]
			public <FindSkeletonVisualGameObjects>d__52(int <>1__state)
			{
			}

			[Token(Token = "0x6002567")]
			[Address(RVA = "0xE7931C", Offset = "0xE7931C", VA = "0xE7931C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002568")]
			[Address(RVA = "0xE79320", Offset = "0xE79320", VA = "0xE79320", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600256A")]
			[Address(RVA = "0xE79544", Offset = "0xE79544", VA = "0xE79544", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40023EC")]
		private const string SKELETON_VISUALIZER_NAME = "SkeletonRenderer";

		[Token(Token = "0x40023ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject _leftHand;

		[Token(Token = "0x40023EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GameObject _rightHand;

		[Token(Token = "0x40023EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public HandsVisualMode VisualMode;

		[Token(Token = "0x40023F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private OVRHand[] _hand;

		[Token(Token = "0x40023F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private OVRSkeleton[] _handSkeleton;

		[Token(Token = "0x40023F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private OVRSkeletonRenderer[] _handSkeletonRenderer;

		[Token(Token = "0x40023F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private OVRMesh[] _handMesh;

		[Token(Token = "0x40023F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private OVRMeshRenderer[] _handMeshRenderer;

		[Token(Token = "0x40023F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private SkinnedMeshRenderer _leftMeshRenderer;

		[Token(Token = "0x40023F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private SkinnedMeshRenderer _rightMeshRenderer;

		[Token(Token = "0x40023F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private GameObject _leftSkeletonVisual;

		[Token(Token = "0x40023F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private GameObject _rightSkeletonVisual;

		[Token(Token = "0x40023F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private float _currentHandAlpha;

		[Token(Token = "0x40023FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private int HandAlphaId;

		[Token(Token = "0x1700023A")]
		public OVRHand RightHand
		{
			[Token(Token = "0x6002548")]
			[Address(RVA = "0xE780E4", Offset = "0xE780E4", VA = "0xE780E4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002549")]
			[Address(RVA = "0xE78110", Offset = "0xE78110", VA = "0xE78110")]
			private set
			{
			}
		}

		[Token(Token = "0x1700023B")]
		public OVRSkeleton RightHandSkeleton
		{
			[Token(Token = "0x600254A")]
			[Address(RVA = "0xE78174", Offset = "0xE78174", VA = "0xE78174")]
			get
			{
				return null;
			}
			[Token(Token = "0x600254B")]
			[Address(RVA = "0xE781A0", Offset = "0xE781A0", VA = "0xE781A0")]
			private set
			{
			}
		}

		[Token(Token = "0x1700023C")]
		public OVRSkeletonRenderer RightHandSkeletonRenderer
		{
			[Token(Token = "0x600254C")]
			[Address(RVA = "0xE78204", Offset = "0xE78204", VA = "0xE78204")]
			get
			{
				return null;
			}
			[Token(Token = "0x600254D")]
			[Address(RVA = "0xE78230", Offset = "0xE78230", VA = "0xE78230")]
			private set
			{
			}
		}

		[Token(Token = "0x1700023D")]
		public OVRMesh RightHandMesh
		{
			[Token(Token = "0x600254E")]
			[Address(RVA = "0xE78294", Offset = "0xE78294", VA = "0xE78294")]
			get
			{
				return null;
			}
			[Token(Token = "0x600254F")]
			[Address(RVA = "0xE782C0", Offset = "0xE782C0", VA = "0xE782C0")]
			private set
			{
			}
		}

		[Token(Token = "0x1700023E")]
		public OVRMeshRenderer RightHandMeshRenderer
		{
			[Token(Token = "0x6002550")]
			[Address(RVA = "0xE78324", Offset = "0xE78324", VA = "0xE78324")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002551")]
			[Address(RVA = "0xE78350", Offset = "0xE78350", VA = "0xE78350")]
			private set
			{
			}
		}

		[Token(Token = "0x1700023F")]
		public OVRHand LeftHand
		{
			[Token(Token = "0x6002552")]
			[Address(RVA = "0xE783B4", Offset = "0xE783B4", VA = "0xE783B4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002553")]
			[Address(RVA = "0xE783DC", Offset = "0xE783DC", VA = "0xE783DC")]
			private set
			{
			}
		}

		[Token(Token = "0x17000240")]
		public OVRSkeleton LeftHandSkeleton
		{
			[Token(Token = "0x6002554")]
			[Address(RVA = "0xE7843C", Offset = "0xE7843C", VA = "0xE7843C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002555")]
			[Address(RVA = "0xE78464", Offset = "0xE78464", VA = "0xE78464")]
			private set
			{
			}
		}

		[Token(Token = "0x17000241")]
		public OVRSkeletonRenderer LeftHandSkeletonRenderer
		{
			[Token(Token = "0x6002556")]
			[Address(RVA = "0xE784C4", Offset = "0xE784C4", VA = "0xE784C4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002557")]
			[Address(RVA = "0xE784EC", Offset = "0xE784EC", VA = "0xE784EC")]
			private set
			{
			}
		}

		[Token(Token = "0x17000242")]
		public OVRMesh LeftHandMesh
		{
			[Token(Token = "0x6002558")]
			[Address(RVA = "0xE7854C", Offset = "0xE7854C", VA = "0xE7854C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002559")]
			[Address(RVA = "0xE78574", Offset = "0xE78574", VA = "0xE78574")]
			private set
			{
			}
		}

		[Token(Token = "0x17000243")]
		public OVRMeshRenderer LeftHandMeshRenderer
		{
			[Token(Token = "0x600255A")]
			[Address(RVA = "0xE785D4", Offset = "0xE785D4", VA = "0xE785D4")]
			get
			{
				return null;
			}
			[Token(Token = "0x600255B")]
			[Address(RVA = "0xE785FC", Offset = "0xE785FC", VA = "0xE785FC")]
			private set
			{
			}
		}

		[Token(Token = "0x17000244")]
		public static HandsManager Instance
		{
			[Token(Token = "0x600255C")]
			[Address(RVA = "0xE7865C", Offset = "0xE7865C", VA = "0xE7865C")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x600255D")]
			[Address(RVA = "0xE786A4", Offset = "0xE786A4", VA = "0xE786A4")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x600255E")]
		[Address(RVA = "0xE786FC", Offset = "0xE786FC", VA = "0xE786FC")]
		private void Awake()
		{
		}

		[Token(Token = "0x600255F")]
		[Address(RVA = "0xE78AB8", Offset = "0xE78AB8", VA = "0xE78AB8")]
		private void Update()
		{
		}

		[Token(Token = "0x6002560")]
		[Address(RVA = "0xE78A44", Offset = "0xE78A44", VA = "0xE78A44")]
		[IteratorStateMachine(typeof(<FindSkeletonVisualGameObjects>d__52))]
		private IEnumerator FindSkeletonVisualGameObjects()
		{
			return null;
		}

		[Token(Token = "0x6002561")]
		[Address(RVA = "0xE78B5C", Offset = "0xE78B5C", VA = "0xE78B5C")]
		public void SwitchVisualization()
		{
		}

		[Token(Token = "0x6002562")]
		[Address(RVA = "0xE78C20", Offset = "0xE78C20", VA = "0xE78C20")]
		private void SetToCurrentVisualMode()
		{
		}

		[Token(Token = "0x6002563")]
		[Address(RVA = "0xE78DF0", Offset = "0xE78DF0", VA = "0xE78DF0")]
		public static List<OVRBoneCapsule> GetCapsulesPerBone(OVRSkeleton skeleton, OVRSkeleton.BoneId boneId)
		{
			return null;
		}

		[Token(Token = "0x6002564")]
		[Address(RVA = "0xE79054", Offset = "0xE79054", VA = "0xE79054")]
		public bool IsInitialized()
		{
			return default(bool);
		}

		[Token(Token = "0x6002565")]
		[Address(RVA = "0xE791B4", Offset = "0xE791B4", VA = "0xE791B4")]
		public HandsManager()
		{
		}
	}
	[Token(Token = "0x2000628")]
	public abstract class Interactable : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000629")]
		public class InteractableStateArgsEvent : UnityEvent<InteractableStateArgs>
		{
			[Token(Token = "0x600257D")]
			[Address(RVA = "0xE79BD4", Offset = "0xE79BD4", VA = "0xE79BD4")]
			public InteractableStateArgsEvent()
			{
			}
		}

		[Token(Token = "0x4002403")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected ColliderZone _proximityZoneCollider;

		[Token(Token = "0x4002404")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		protected ColliderZone _contactZoneCollider;

		[Token(Token = "0x4002405")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		protected ColliderZone _actionZoneCollider;

		[Token(Token = "0x4002409")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public InteractableStateArgsEvent InteractableStateChanged;

		[Token(Token = "0x17000247")]
		public ColliderZone ProximityCollider
		{
			[Token(Token = "0x600256C")]
			[Address(RVA = "0xE7958C", Offset = "0xE7958C", VA = "0xE7958C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000248")]
		public ColliderZone ContactCollider
		{
			[Token(Token = "0x600256D")]
			[Address(RVA = "0xE79594", Offset = "0xE79594", VA = "0xE79594")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000249")]
		public ColliderZone ActionCollider
		{
			[Token(Token = "0x600256E")]
			[Address(RVA = "0xE7959C", Offset = "0xE7959C", VA = "0xE7959C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700024A")]
		public virtual int ValidToolTagsMask
		{
			[Token(Token = "0x600256F")]
			[Address(RVA = "0xE795A4", Offset = "0xE795A4", VA = "0xE795A4", Slot = "4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1400002F")]
		public event Action<ColliderZoneArgs> ProximityZoneEvent
		{
			[Token(Token = "0x6002570")]
			[Address(RVA = "0xE795AC", Offset = "0xE795AC", VA = "0xE795AC")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6002571")]
			[Address(RVA = "0xE7965C", Offset = "0xE7965C", VA = "0xE7965C")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x14000030")]
		public event Action<ColliderZoneArgs> ContactZoneEvent
		{
			[Token(Token = "0x6002573")]
			[Address(RVA = "0xE79728", Offset = "0xE79728", VA = "0xE79728")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6002574")]
			[Address(RVA = "0xE797D8", Offset = "0xE797D8", VA = "0xE797D8")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x14000031")]
		public event Action<ColliderZoneArgs> ActionZoneEvent
		{
			[Token(Token = "0x6002576")]
			[Address(RVA = "0xE798A4", Offset = "0xE798A4", VA = "0xE798A4")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6002577")]
			[Address(RVA = "0xE79954", Offset = "0xE79954", VA = "0xE79954")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x6002572")]
		[Address(RVA = "0xE7970C", Offset = "0xE7970C", VA = "0xE7970C", Slot = "5")]
		protected virtual void OnProximityZoneEvent(ColliderZoneArgs args)
		{
		}

		[Token(Token = "0x6002575")]
		[Address(RVA = "0xE79888", Offset = "0xE79888", VA = "0xE79888", Slot = "6")]
		protected virtual void OnContactZoneEvent(ColliderZoneArgs args)
		{
		}

		[Token(Token = "0x6002578")]
		[Address(RVA = "0xE79A04", Offset = "0xE79A04", VA = "0xE79A04", Slot = "7")]
		protected virtual void OnActionZoneEvent(ColliderZoneArgs args)
		{
		}

		[Token(Token = "0x6002579")]
		public abstract void UpdateCollisionDepth(InteractableTool interactableTool, InteractableCollisionDepth oldCollisionDepth, InteractableCollisionDepth newCollisionDepth);

		[Token(Token = "0x600257A")]
		[Address(RVA = "0xE7728C", Offset = "0xE7728C", VA = "0xE7728C", Slot = "9")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x600257B")]
		[Address(RVA = "0xE79AD0", Offset = "0xE79AD0", VA = "0xE79AD0", Slot = "10")]
		protected virtual void OnDestroy()
		{
		}

		[Token(Token = "0x600257C")]
		[Address(RVA = "0xE77FD0", Offset = "0xE77FD0", VA = "0xE77FD0")]
		protected Interactable()
		{
		}
	}
	[Token(Token = "0x200062A")]
	public enum InteractableCollisionDepth
	{
		[Token(Token = "0x400240B")]
		None,
		[Token(Token = "0x400240C")]
		Proximity,
		[Token(Token = "0x400240D")]
		Contact,
		[Token(Token = "0x400240E")]
		Action
	}
	[Token(Token = "0x200062B")]
	public enum InteractableState
	{
		[Token(Token = "0x4002410")]
		Default,
		[Token(Token = "0x4002411")]
		ProximityState,
		[Token(Token = "0x4002412")]
		ContactState,
		[Token(Token = "0x4002413")]
		ActionState
	}
	[Token(Token = "0x200062C")]
	public class InteractableStateArgs : EventArgs
	{
		[Token(Token = "0x4002414")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly Interactable Interactable;

		[Token(Token = "0x4002415")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly InteractableTool Tool;

		[Token(Token = "0x4002416")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly InteractableState OldInteractableState;

		[Token(Token = "0x4002417")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public readonly InteractableState NewInteractableState;

		[Token(Token = "0x4002418")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly ColliderZoneArgs ColliderArgs;

		[Token(Token = "0x600257E")]
		[Address(RVA = "0xE77B5C", Offset = "0xE77B5C", VA = "0xE77B5C")]
		public InteractableStateArgs(Interactable interactable, InteractableTool tool, InteractableState newInteractableState, InteractableState oldState, ColliderZoneArgs colliderArgs)
		{
		}
	}
	[Token(Token = "0x200062D")]
	public class InteractableRegistry : MonoBehaviour
	{
		[Token(Token = "0x4002419")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static HashSet<Interactable> _interactables;

		[Token(Token = "0x1700024B")]
		public static HashSet<Interactable> Interactables
		{
			[Token(Token = "0x600257F")]
			[Address(RVA = "0xE79C1C", Offset = "0xE79C1C", VA = "0xE79C1C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002580")]
		[Address(RVA = "0xE79A20", Offset = "0xE79A20", VA = "0xE79A20")]
		public static void RegisterInteractable(Interactable interactable)
		{
		}

		[Token(Token = "0x6002581")]
		[Address(RVA = "0xE79B24", Offset = "0xE79B24", VA = "0xE79B24")]
		public static void UnregisterInteractable(Interactable interactable)
		{
		}

		[Token(Token = "0x6002582")]
		[Address(RVA = "0xE79C74", Offset = "0xE79C74", VA = "0xE79C74")]
		public InteractableRegistry()
		{
		}
	}
	[Token(Token = "0x200062E")]
	public class InteractableToolsCreator : MonoBehaviour
	{
		[Token(Token = "0x200062F")]
		[CompilerGenerated]
		private sealed class <AttachToolsToHands>d__3 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400241C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400241D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400241E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Transform[] toolObjects;

			[Token(Token = "0x400241F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public bool isRightHand;

			[Token(Token = "0x4002420")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public InteractableToolsCreator <>4__this;

			[Token(Token = "0x4002421")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private HandsManager <handsManagerObj>5__2;

			[Token(Token = "0x4002422")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private HashSet<Transform>.Enumerator <>7__wrap2;

			[Token(Token = "0x4002423")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			private Transform <toolObject>5__4;

			[Token(Token = "0x4002424")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			private OVRSkeleton <handSkeletonToAttachTo>5__5;

			[Token(Token = "0x1700024C")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600258C")]
				[Address(RVA = "0xE7A434", Offset = "0xE7A434", VA = "0xE7A434", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700024D")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600258E")]
				[Address(RVA = "0xE7A47C", Offset = "0xE7A47C", VA = "0xE7A47C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002588")]
			[Address(RVA = "0xE79E1C", Offset = "0xE79E1C", VA = "0xE79E1C")]
			[DebuggerHidden]
			public <AttachToolsToHands>d__3(int <>1__state)
			{
			}

			[Token(Token = "0x6002589")]
			[Address(RVA = "0xE79F58", Offset = "0xE79F58", VA = "0xE79F58", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600258A")]
			[Address(RVA = "0xE79F74", Offset = "0xE79F74", VA = "0xE79F74", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600258B")]
			[Address(RVA = "0xE7A3E4", Offset = "0xE7A3E4", VA = "0xE7A3E4")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x600258D")]
			[Address(RVA = "0xE7A43C", Offset = "0xE7A43C", VA = "0xE7A43C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400241A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Transform[] LeftHandTools;

		[Token(Token = "0x400241B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Transform[] RightHandTools;

		[Token(Token = "0x6002584")]
		[Address(RVA = "0xE79D14", Offset = "0xE79D14", VA = "0xE79D14")]
		private void Awake()
		{
		}

		[Token(Token = "0x6002585")]
		[Address(RVA = "0xE79D80", Offset = "0xE79D80", VA = "0xE79D80")]
		[IteratorStateMachine(typeof(<AttachToolsToHands>d__3))]
		private IEnumerator AttachToolsToHands(Transform[] toolObjects, bool isRightHand)
		{
			return null;
		}

		[Token(Token = "0x6002586")]
		[Address(RVA = "0xE79E44", Offset = "0xE79E44", VA = "0xE79E44")]
		private void AttachToolToHandTransform(Transform tool, bool isRightHanded)
		{
		}

		[Token(Token = "0x6002587")]
		[Address(RVA = "0xE79F50", Offset = "0xE79F50", VA = "0xE79F50")]
		public InteractableToolsCreator()
		{
		}
	}
	[Token(Token = "0x2000630")]
	public class InteractableToolsInputRouter : MonoBehaviour
	{
		[Token(Token = "0x4002425")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static InteractableToolsInputRouter _instance;

		[Token(Token = "0x4002426")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool _leftPinch;

		[Token(Token = "0x4002427")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		private bool _rightPinch;

		[Token(Token = "0x4002428")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private HashSet<InteractableTool> _leftHandNearTools;

		[Token(Token = "0x4002429")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private HashSet<InteractableTool> _leftHandFarTools;

		[Token(Token = "0x400242A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private HashSet<InteractableTool> _rightHandNearTools;

		[Token(Token = "0x400242B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private HashSet<InteractableTool> _rightHandFarTools;

		[Token(Token = "0x1700024E")]
		public static InteractableToolsInputRouter Instance
		{
			[Token(Token = "0x600258F")]
			[Address(RVA = "0xE7A484", Offset = "0xE7A484", VA = "0xE7A484")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002590")]
		[Address(RVA = "0xE7A5E0", Offset = "0xE7A5E0", VA = "0xE7A5E0")]
		public void RegisterInteractableTool(InteractableTool interactableTool)
		{
		}

		[Token(Token = "0x6002591")]
		[Address(RVA = "0xE7A67C", Offset = "0xE7A67C", VA = "0xE7A67C")]
		public void UnregisterInteractableTool(InteractableTool interactableTool)
		{
		}

		[Token(Token = "0x6002592")]
		[Address(RVA = "0xE7A718", Offset = "0xE7A718", VA = "0xE7A718")]
		private void Update()
		{
		}

		[Token(Token = "0x6002593")]
		[Address(RVA = "0xE7A9B4", Offset = "0xE7A9B4", VA = "0xE7A9B4")]
		private bool UpdateToolsAndEnableState(HashSet<InteractableTool> tools, bool toolsAreEnabledThisFrame)
		{
			return default(bool);
		}

		[Token(Token = "0x6002594")]
		[Address(RVA = "0xE7A9F0", Offset = "0xE7A9F0", VA = "0xE7A9F0")]
		private bool UpdateTools(HashSet<InteractableTool> tools, bool resetCollisionData = false)
		{
			return default(bool);
		}

		[Token(Token = "0x6002595")]
		[Address(RVA = "0xE7ACC8", Offset = "0xE7ACC8", VA = "0xE7ACC8")]
		private void ToggleToolsEnableState(HashSet<InteractableTool> tools, bool enableState)
		{
		}

		[Token(Token = "0x6002596")]
		[Address(RVA = "0xE7AED0", Offset = "0xE7AED0", VA = "0xE7AED0")]
		public InteractableToolsInputRouter()
		{
		}
	}
	[Token(Token = "0x2000631")]
	public class FingerTipPokeTool : InteractableTool
	{
		[Token(Token = "0x2000632")]
		[CompilerGenerated]
		private sealed class <AttachTriggerLogic>d__21 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002437")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002438")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002439")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public FingerTipPokeTool <>4__this;

			[Token(Token = "0x17000253")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60025A8")]
				[Address(RVA = "0xE7C0A0", Offset = "0xE7C0A0", VA = "0xE7C0A0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000254")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60025AA")]
				[Address(RVA = "0xE7C0E8", Offset = "0xE7C0E8", VA = "0xE7C0E8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60025A5")]
			[Address(RVA = "0xE7B16C", Offset = "0xE7B16C", VA = "0xE7B16C")]
			[DebuggerHidden]
			public <AttachTriggerLogic>d__21(int <>1__state)
			{
			}

			[Token(Token = "0x60025A6")]
			[Address(RVA = "0xE7BC10", Offset = "0xE7BC10", VA = "0xE7BC10", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60025A7")]
			[Address(RVA = "0xE7BC14", Offset = "0xE7BC14", VA = "0xE7BC14", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60025A9")]
			[Address(RVA = "0xE7C0A8", Offset = "0xE7C0A8", VA = "0xE7C0A8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400242C")]
		private const int NUM_VELOCITY_FRAMES = 10;

		[Token(Token = "0x400242D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private FingerTipPokeToolView _fingerTipPokeToolView;

		[Token(Token = "0x400242E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private OVRPlugin.HandFinger _fingerToFollow;

		[Token(Token = "0x400242F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Vector3[] _velocityFrames;

		[Token(Token = "0x4002430")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private int _currVelocityFrame;

		[Token(Token = "0x4002431")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private bool _sampledMaxFramesAlready;

		[Token(Token = "0x4002432")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Vector3 _position;

		[Token(Token = "0x4002433")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private BoneCapsuleTriggerLogic[] _boneCapsuleTriggerLogic;

		[Token(Token = "0x4002434")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private float _lastScale;

		[Token(Token = "0x4002435")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		private bool _isInitialized;

		[Token(Token = "0x4002436")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private OVRBoneCapsule _capsuleToTrack;

		[Token(Token = "0x1700024F")]
		public override InteractableToolTags ToolTags
		{
			[Token(Token = "0x6002597")]
			[Address(RVA = "0xE7AFD8", Offset = "0xE7AFD8", VA = "0xE7AFD8", Slot = "4")]
			get
			{
				return default(InteractableToolTags);
			}
		}

		[Token(Token = "0x17000250")]
		public override ToolInputState ToolInputState
		{
			[Token(Token = "0x6002598")]
			[Address(RVA = "0xE7AFE0", Offset = "0xE7AFE0", VA = "0xE7AFE0", Slot = "5")]
			get
			{
				return default(ToolInputState);
			}
		}

		[Token(Token = "0x17000251")]
		public override bool IsFarFieldTool
		{
			[Token(Token = "0x6002599")]
			[Address(RVA = "0xE7AFE8", Offset = "0xE7AFE8", VA = "0xE7AFE8", Slot = "6")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000252")]
		public override bool EnableState
		{
			[Token(Token = "0x600259A")]
			[Address(RVA = "0xE7AFF0", Offset = "0xE7AFF0", VA = "0xE7AFF0", Slot = "10")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600259B")]
			[Address(RVA = "0xE7B018", Offset = "0xE7B018", VA = "0xE7B018", Slot = "11")]
			set
			{
			}
		}

		[Token(Token = "0x600259C")]
		[Address(RVA = "0xE7B048", Offset = "0xE7B048", VA = "0xE7B048", Slot = "12")]
		public override void Initialize()
		{
		}

		[Token(Token = "0x600259D")]
		[Address(RVA = "0xE7B0F8", Offset = "0xE7B0F8", VA = "0xE7B0F8")]
		[IteratorStateMachine(typeof(<AttachTriggerLogic>d__21))]
		private IEnumerator AttachTriggerLogic()
		{
			return null;
		}

		[Token(Token = "0x600259E")]
		[Address(RVA = "0xE7B194", Offset = "0xE7B194", VA = "0xE7B194")]
		private void Update()
		{
		}

		[Token(Token = "0x600259F")]
		[Address(RVA = "0xE7B414", Offset = "0xE7B414", VA = "0xE7B414")]
		private void UpdateAverageVelocity()
		{
		}

		[Token(Token = "0x60025A0")]
		[Address(RVA = "0xE7B5D0", Offset = "0xE7B5D0", VA = "0xE7B5D0")]
		private void CheckAndUpdateScale()
		{
		}

		[Token(Token = "0x60025A1")]
		[Address(RVA = "0xE7B6B8", Offset = "0xE7B6B8", VA = "0xE7B6B8", Slot = "7")]
		public override List<InteractableCollisionInfo> GetNextIntersectingObjects()
		{
			return null;
		}

		[Token(Token = "0x60025A2")]
		[Address(RVA = "0xE7BA4C", Offset = "0xE7BA4C", VA = "0xE7BA4C", Slot = "8")]
		public override void FocusOnInteractable(Interactable focusedInteractable, ColliderZone colliderZone)
		{
		}

		[Token(Token = "0x60025A3")]
		[Address(RVA = "0xE7BA50", Offset = "0xE7BA50", VA = "0xE7BA50", Slot = "9")]
		public override void DeFocus()
		{
		}

		[Token(Token = "0x60025A4")]
		[Address(RVA = "0xE7BA54", Offset = "0xE7BA54", VA = "0xE7BA54")]
		public FingerTipPokeTool()
		{
		}
	}
	[Token(Token = "0x2000633")]
	public class FingerTipPokeToolView : MonoBehaviour, InteractableToolView
	{
		[Token(Token = "0x400243A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private MeshRenderer _sphereMeshRenderer;

		[Token(Token = "0x17000255")]
		public InteractableTool InteractableTool
		{
			[Token(Token = "0x60025AB")]
			[Address(RVA = "0xE7C0F0", Offset = "0xE7C0F0", VA = "0xE7C0F0", Slot = "4")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x60025AC")]
			[Address(RVA = "0xE7C0F8", Offset = "0xE7C0F8", VA = "0xE7C0F8")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x17000256")]
		public bool EnableState
		{
			[Token(Token = "0x60025AD")]
			[Address(RVA = "0xE7C100", Offset = "0xE7C100", VA = "0xE7C100", Slot = "6")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60025AE")]
			[Address(RVA = "0xE7C11C", Offset = "0xE7C11C", VA = "0xE7C11C", Slot = "7")]
			set
			{
			}
		}

		[Token(Token = "0x17000257")]
		public bool ToolActivateState
		{
			[Token(Token = "0x60025AF")]
			[Address(RVA = "0xE7C13C", Offset = "0xE7C13C", VA = "0xE7C13C", Slot = "8")]
			[CompilerGenerated]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60025B0")]
			[Address(RVA = "0xE7C144", Offset = "0xE7C144", VA = "0xE7C144", Slot = "9")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x17000258")]
		public float SphereRadius
		{
			[Token(Token = "0x60025B1")]
			[Address(RVA = "0xE7C150", Offset = "0xE7C150", VA = "0xE7C150")]
			[CompilerGenerated]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60025B2")]
			[Address(RVA = "0xE7C158", Offset = "0xE7C158", VA = "0xE7C158")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x60025B3")]
		[Address(RVA = "0xE7C160", Offset = "0xE7C160", VA = "0xE7C160")]
		private void Awake()
		{
		}

		[Token(Token = "0x60025B4")]
		[Address(RVA = "0xE7C19C", Offset = "0xE7C19C", VA = "0xE7C19C", Slot = "5")]
		public void SetFocusedInteractable(Interactable interactable)
		{
		}

		[Token(Token = "0x60025B5")]
		[Address(RVA = "0xE7C1A0", Offset = "0xE7C1A0", VA = "0xE7C1A0")]
		public FingerTipPokeToolView()
		{
		}
	}
	[Token(Token = "0x2000634")]
	[Flags]
	public enum InteractableToolTags
	{
		[Token(Token = "0x400243F")]
		None = 0,
		[Token(Token = "0x4002440")]
		Ray = 1,
		[Token(Token = "0x4002441")]
		Poke = 4,
		[Token(Token = "0x4002442")]
		All = -1
	}
	[Token(Token = "0x2000635")]
	public enum ToolInputState
	{
		[Token(Token = "0x4002444")]
		Inactive,
		[Token(Token = "0x4002445")]
		PrimaryInputDown,
		[Token(Token = "0x4002446")]
		PrimaryInputDownStay,
		[Token(Token = "0x4002447")]
		PrimaryInputUp
	}
	[Token(Token = "0x2000636")]
	public class InteractableCollisionInfo
	{
		[Token(Token = "0x4002448")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public ColliderZone InteractableCollider;

		[Token(Token = "0x4002449")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public InteractableCollisionDepth CollisionDepth;

		[Token(Token = "0x400244A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public InteractableTool CollidingTool;

		[Token(Token = "0x60025B6")]
		[Address(RVA = "0xE7B9F8", Offset = "0xE7B9F8", VA = "0xE7B9F8")]
		public InteractableCollisionInfo(ColliderZone collider, InteractableCollisionDepth collisionDepth, InteractableTool collidingTool)
		{
		}
	}
	[Token(Token = "0x2000637")]
	public abstract class InteractableTool : MonoBehaviour
	{
		[Token(Token = "0x400244E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		protected List<InteractableCollisionInfo> _currentIntersectingObjects;

		[Token(Token = "0x400244F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private List<Interactable> _addedInteractables;

		[Token(Token = "0x4002450")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private List<Interactable> _removedInteractables;

		[Token(Token = "0x4002451")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private List<Interactable> _remainingInteractables;

		[Token(Token = "0x4002452")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Dictionary<Interactable, InteractableCollisionInfo> _currInteractableToCollisionInfos;

		[Token(Token = "0x4002453")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Dictionary<Interactable, InteractableCollisionInfo> _prevInteractableToCollisionInfos;

		[Token(Token = "0x17000259")]
		public Transform ToolTransform
		{
			[Token(Token = "0x60025B7")]
			[Address(RVA = "0xE77EAC", Offset = "0xE77EAC", VA = "0xE77EAC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700025A")]
		public bool IsRightHandedTool
		{
			[Token(Token = "0x60025B8")]
			[Address(RVA = "0xE7C1A8", Offset = "0xE7C1A8", VA = "0xE7C1A8")]
			[CompilerGenerated]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60025B9")]
			[Address(RVA = "0xE7C1B0", Offset = "0xE7C1B0", VA = "0xE7C1B0")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x1700025B")]
		public abstract InteractableToolTags ToolTags
		{
			[Token(Token = "0x60025BA")]
			get;
		}

		[Token(Token = "0x1700025C")]
		public abstract ToolInputState ToolInputState
		{
			[Token(Token = "0x60025BB")]
			get;
		}

		[Token(Token = "0x1700025D")]
		public abstract bool IsFarFieldTool
		{
			[Token(Token = "0x60025BC")]
			get;
		}

		[Token(Token = "0x1700025E")]
		public Vector3 Velocity
		{
			[Token(Token = "0x60025BD")]
			[Address(RVA = "0xE7C1BC", Offset = "0xE7C1BC", VA = "0xE7C1BC")]
			[CompilerGenerated]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x60025BE")]
			[Address(RVA = "0xE7C1C8", Offset = "0xE7C1C8", VA = "0xE7C1C8")]
			[CompilerGenerated]
			protected set
			{
			}
		}

		[Token(Token = "0x1700025F")]
		public Vector3 InteractionPosition
		{
			[Token(Token = "0x60025BF")]
			[Address(RVA = "0xE7C1D4", Offset = "0xE7C1D4", VA = "0xE7C1D4")]
			[CompilerGenerated]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x60025C0")]
			[Address(RVA = "0xE7C1E0", Offset = "0xE7C1E0", VA = "0xE7C1E0")]
			[CompilerGenerated]
			protected set
			{
			}
		}

		[Token(Token = "0x17000260")]
		public abstract bool EnableState
		{
			[Token(Token = "0x60025C5")]
			get;
			[Token(Token = "0x60025C6")]
			set;
		}

		[Token(Token = "0x60025C1")]
		[Address(RVA = "0xE7C1EC", Offset = "0xE7C1EC", VA = "0xE7C1EC")]
		public List<InteractableCollisionInfo> GetCurrentIntersectingObjects()
		{
			return null;
		}

		[Token(Token = "0x60025C2")]
		public abstract List<InteractableCollisionInfo> GetNextIntersectingObjects();

		[Token(Token = "0x60025C3")]
		public abstract void FocusOnInteractable(Interactable focusedInteractable, ColliderZone colliderZone);

		[Token(Token = "0x60025C4")]
		public abstract void DeFocus();

		[Token(Token = "0x60025C7")]
		public abstract void Initialize();

		[Token(Token = "0x60025C8")]
		[Address(RVA = "0xE7AE38", Offset = "0xE7AE38", VA = "0xE7AE38")]
		public KeyValuePair<Interactable, InteractableCollisionInfo> GetFirstCurrentCollisionInfo()
		{
			return default(KeyValuePair<Interactable, InteractableCollisionInfo>);
		}

		[Token(Token = "0x60025C9")]
		[Address(RVA = "0xE7AE80", Offset = "0xE7AE80", VA = "0xE7AE80")]
		public void ClearAllCurrentCollisionInfos()
		{
		}

		[Token(Token = "0x60025CA")]
		[Address(RVA = "0xE7C1F4", Offset = "0xE7C1F4", VA = "0xE7C1F4", Slot = "13")]
		public virtual void UpdateCurrentCollisionsBasedOnDepth()
		{
		}

		[Token(Token = "0x60025CB")]
		[Address(RVA = "0xE7C4BC", Offset = "0xE7C4BC", VA = "0xE7C4BC", Slot = "14")]
		public virtual void UpdateLatestCollisionData()
		{
		}

		[Token(Token = "0x60025CC")]
		[Address(RVA = "0xE7BA68", Offset = "0xE7BA68", VA = "0xE7BA68")]
		protected InteractableTool()
		{
		}
	}
	[Token(Token = "0x2000638")]
	public interface InteractableToolView
	{
		[Token(Token = "0x17000261")]
		InteractableTool InteractableTool
		{
			[Token(Token = "0x60025CD")]
			get;
		}

		[Token(Token = "0x17000262")]
		bool EnableState
		{
			[Token(Token = "0x60025CF")]
			get;
			[Token(Token = "0x60025D0")]
			set;
		}

		[Token(Token = "0x17000263")]
		bool ToolActivateState
		{
			[Token(Token = "0x60025D1")]
			get;
			[Token(Token = "0x60025D2")]
			set;
		}

		[Token(Token = "0x60025CE")]
		void SetFocusedInteractable(Interactable interactable);
	}
	[Token(Token = "0x2000639")]
	public class PinchStateModule
	{
		[Token(Token = "0x200063A")]
		private enum PinchState
		{
			[Token(Token = "0x4002458")]
			None,
			[Token(Token = "0x4002459")]
			PinchDown,
			[Token(Token = "0x400245A")]
			PinchStay,
			[Token(Token = "0x400245B")]
			PinchUp
		}

		[Token(Token = "0x4002454")]
		private const float PINCH_STRENGTH_THRESHOLD = 1f;

		[Token(Token = "0x4002455")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private PinchState _currPinchState;

		[Token(Token = "0x4002456")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Interactable _firstFocusedInteractable;

		[Token(Token = "0x17000264")]
		public bool PinchUpAndDownOnFocusedObject
		{
			[Token(Token = "0x60025D3")]
			[Address(RVA = "0xE7CD58", Offset = "0xE7CD58", VA = "0xE7CD58")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000265")]
		public bool PinchSteadyOnFocusedObject
		{
			[Token(Token = "0x60025D4")]
			[Address(RVA = "0xE7CDD4", Offset = "0xE7CDD4", VA = "0xE7CDD4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000266")]
		public bool PinchDownOnFocusedObject
		{
			[Token(Token = "0x60025D5")]
			[Address(RVA = "0xE7CE50", Offset = "0xE7CE50", VA = "0xE7CE50")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60025D6")]
		[Address(RVA = "0xE7CECC", Offset = "0xE7CECC", VA = "0xE7CECC")]
		public PinchStateModule()
		{
		}

		[Token(Token = "0x60025D7")]
		[Address(RVA = "0xE7CEF4", Offset = "0xE7CEF4", VA = "0xE7CEF4")]
		public void UpdateState(OVRHand hand, Interactable currFocusedInteractable)
		{
		}
	}
	[Token(Token = "0x200063B")]
	public class RayTool : InteractableTool
	{
		[Token(Token = "0x400245C")]
		private const float MINIMUM_RAY_CAST_DISTANCE = 0.8f;

		[Token(Token = "0x400245D")]
		private const float COLLIDER_RADIUS = 0.01f;

		[Token(Token = "0x400245E")]
		private const int NUM_MAX_PRIMARY_HITS = 10;

		[Token(Token = "0x400245F")]
		private const int NUM_MAX_SECONDARY_HITS = 25;

		[Token(Token = "0x4002460")]
		private const int NUM_COLLIDERS_TO_TEST = 20;

		[Token(Token = "0x4002461")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private RayToolView _rayToolView;

		[Token(Token = "0x4002462")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[Range(0f, 45f)]
		[SerializeField]
		private float _coneAngleDegrees;

		[Token(Token = "0x4002463")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		[SerializeField]
		private float _farFieldMaxDistance;

		[Token(Token = "0x4002464")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private PinchStateModule _pinchStateModule;

		[Token(Token = "0x4002465")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Interactable _focusedInteractable;

		[Token(Token = "0x4002466")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Collider[] _collidersOverlapped;

		[Token(Token = "0x4002467")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Interactable _currInteractableCastedAgainst;

		[Token(Token = "0x4002468")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private float _coneAngleReleaseDegrees;

		[Token(Token = "0x4002469")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private RaycastHit[] _primaryHits;

		[Token(Token = "0x400246A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private Collider[] _secondaryOverlapResults;

		[Token(Token = "0x400246B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private bool _initialized;

		[Token(Token = "0x17000267")]
		public override InteractableToolTags ToolTags
		{
			[Token(Token = "0x60025D8")]
			[Address(RVA = "0xE7D06C", Offset = "0xE7D06C", VA = "0xE7D06C", Slot = "4")]
			get
			{
				return default(InteractableToolTags);
			}
		}

		[Token(Token = "0x17000268")]
		public override ToolInputState ToolInputState
		{
			[Token(Token = "0x60025D9")]
			[Address(RVA = "0xE7D074", Offset = "0xE7D074", VA = "0xE7D074", Slot = "5")]
			get
			{
				return default(ToolInputState);
			}
		}

		[Token(Token = "0x17000269")]
		public override bool IsFarFieldTool
		{
			[Token(Token = "0x60025DA")]
			[Address(RVA = "0xE7D0D0", Offset = "0xE7D0D0", VA = "0xE7D0D0", Slot = "6")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700026A")]
		public override bool EnableState
		{
			[Token(Token = "0x60025DB")]
			[Address(RVA = "0xE7D0D8", Offset = "0xE7D0D8", VA = "0xE7D0D8", Slot = "10")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60025DC")]
			[Address(RVA = "0xE7D118", Offset = "0xE7D118", VA = "0xE7D118", Slot = "11")]
			set
			{
			}
		}

		[Token(Token = "0x60025DD")]
		[Address(RVA = "0xE7D188", Offset = "0xE7D188", VA = "0xE7D188", Slot = "12")]
		public override void Initialize()
		{
		}

		[Token(Token = "0x60025DE")]
		[Address(RVA = "0xE7D1DC", Offset = "0xE7D1DC", VA = "0xE7D1DC")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60025DF")]
		[Address(RVA = "0xE7D268", Offset = "0xE7D268", VA = "0xE7D268")]
		private void Update()
		{
		}

		[Token(Token = "0x60025E0")]
		[Address(RVA = "0xE7D50C", Offset = "0xE7D50C", VA = "0xE7D50C")]
		private Vector3 GetRayCastOrigin()
		{
			return default(Vector3);
		}

		[Token(Token = "0x60025E1")]
		[Address(RVA = "0xE7D588", Offset = "0xE7D588", VA = "0xE7D588", Slot = "7")]
		public override List<InteractableCollisionInfo> GetNextIntersectingObjects()
		{
			return null;
		}

		[Token(Token = "0x60025E2")]
		[Address(RVA = "0xE7D97C", Offset = "0xE7D97C", VA = "0xE7D97C")]
		private bool HasRayReleasedInteractable(Interactable focusedInteractable)
		{
			return default(bool);
		}

		[Token(Token = "0x60025E3")]
		[Address(RVA = "0xE7DB18", Offset = "0xE7DB18", VA = "0xE7DB18")]
		private Interactable FindTargetInteractable()
		{
			return null;
		}

		[Token(Token = "0x60025E4")]
		[Address(RVA = "0xE7DC30", Offset = "0xE7DC30", VA = "0xE7DC30")]
		private Interactable FindPrimaryRaycastHit(Vector3 rayOrigin, Vector3 rayDirection)
		{
			return null;
		}

		[Token(Token = "0x60025E5")]
		[Address(RVA = "0xE7DF54", Offset = "0xE7DF54", VA = "0xE7DF54")]
		private Interactable FindInteractableViaConeTest(Vector3 rayOrigin, Vector3 rayDirection)
		{
			return null;
		}

		[Token(Token = "0x60025E6")]
		[Address(RVA = "0xE7E2D0", Offset = "0xE7E2D0", VA = "0xE7E2D0", Slot = "8")]
		public override void FocusOnInteractable(Interactable focusedInteractable, ColliderZone colliderZone)
		{
		}

		[Token(Token = "0x60025E7")]
		[Address(RVA = "0xE7E3A8", Offset = "0xE7E3A8", VA = "0xE7E3A8", Slot = "9")]
		public override void DeFocus()
		{
		}

		[Token(Token = "0x60025E8")]
		[Address(RVA = "0xE7E3D8", Offset = "0xE7E3D8", VA = "0xE7E3D8")]
		public RayTool()
		{
		}
	}
	[Token(Token = "0x200063C")]
	public class RayToolView : MonoBehaviour, InteractableToolView
	{
		[Token(Token = "0x400246C")]
		private const int NUM_RAY_LINE_POSITIONS = 25;

		[Token(Token = "0x400246D")]
		private const float DEFAULT_RAY_CAST_DISTANCE = 3f;

		[Token(Token = "0x400246E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Transform _targetTransform;

		[Token(Token = "0x400246F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private LineRenderer _lineRenderer;

		[Token(Token = "0x4002470")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool _toolActivateState;

		[Token(Token = "0x4002471")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Transform _focusedTransform;

		[Token(Token = "0x4002472")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Vector3[] linePositions;

		[Token(Token = "0x4002473")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Gradient _oldColorGradient;

		[Token(Token = "0x4002474")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Gradient _highLightColorGradient;

		[Token(Token = "0x1700026B")]
		public bool EnableState
		{
			[Token(Token = "0x60025E9")]
			[Address(RVA = "0xE7D0FC", Offset = "0xE7D0FC", VA = "0xE7D0FC", Slot = "6")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60025EA")]
			[Address(RVA = "0xE7D134", Offset = "0xE7D134", VA = "0xE7D134", Slot = "7")]
			set
			{
			}
		}

		[Token(Token = "0x1700026C")]
		public bool ToolActivateState
		{
			[Token(Token = "0x60025EB")]
			[Address(RVA = "0xE7E4EC", Offset = "0xE7E4EC", VA = "0xE7E4EC", Slot = "8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60025EC")]
			[Address(RVA = "0xE7D4D0", Offset = "0xE7D4D0", VA = "0xE7D4D0", Slot = "9")]
			set
			{
			}
		}

		[Token(Token = "0x1700026D")]
		public InteractableTool InteractableTool
		{
			[Token(Token = "0x60025EE")]
			[Address(RVA = "0xE7E714", Offset = "0xE7E714", VA = "0xE7E714", Slot = "4")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x60025EF")]
			[Address(RVA = "0xE7E71C", Offset = "0xE7E71C", VA = "0xE7E71C")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x60025ED")]
		[Address(RVA = "0xE7E4F4", Offset = "0xE7E4F4", VA = "0xE7E4F4")]
		private void Awake()
		{
		}

		[Token(Token = "0x60025F0")]
		[Address(RVA = "0xE7E308", Offset = "0xE7E308", VA = "0xE7E308", Slot = "5")]
		public void SetFocusedInteractable(Interactable interactable)
		{
		}

		[Token(Token = "0x60025F1")]
		[Address(RVA = "0xE7E724", Offset = "0xE7E724", VA = "0xE7E724")]
		private void Update()
		{
		}

		[Token(Token = "0x60025F2")]
		[Address(RVA = "0xE7E9D0", Offset = "0xE7E9D0", VA = "0xE7E9D0")]
		public static Vector3 GetPointOnBezierCurve(Vector3 p0, Vector3 p1, Vector3 p2, Vector3 p3, float t)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60025F3")]
		[Address(RVA = "0xE7EA78", Offset = "0xE7EA78", VA = "0xE7EA78")]
		public RayToolView()
		{
		}
	}
	[Token(Token = "0x200063D")]
	public class DistanceGrabberSample : MonoBehaviour
	{
		[Token(Token = "0x4002476")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool useSpherecast;

		[Token(Token = "0x4002477")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		private bool allowGrabThroughWalls;

		[Token(Token = "0x4002478")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private DistanceGrabber[] m_grabbers;

		[Token(Token = "0x1700026E")]
		public bool UseSpherecast
		{
			[Token(Token = "0x60025F4")]
			[Address(RVA = "0xE7EADC", Offset = "0xE7EADC", VA = "0xE7EADC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60025F5")]
			[Address(RVA = "0xE7EAE4", Offset = "0xE7EAE4", VA = "0xE7EAE4")]
			set
			{
			}
		}

		[Token(Token = "0x1700026F")]
		public bool AllowGrabThroughWalls
		{
			[Token(Token = "0x60025F6")]
			[Address(RVA = "0xE7EB60", Offset = "0xE7EB60", VA = "0xE7EB60")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60025F7")]
			[Address(RVA = "0xE7EB68", Offset = "0xE7EB68", VA = "0xE7EB68")]
			set
			{
			}
		}

		[Token(Token = "0x60025F8")]
		[Address(RVA = "0xE7EBC4", Offset = "0xE7EBC4", VA = "0xE7EBC4")]
		private void Start()
		{
		}

		[Token(Token = "0x60025F9")]
		[Address(RVA = "0xE7EE64", Offset = "0xE7EE64", VA = "0xE7EE64")]
		public void ToggleSphereCasting(Toggle t)
		{
		}

		[Token(Token = "0x60025FA")]
		[Address(RVA = "0xE7EE74", Offset = "0xE7EE74", VA = "0xE7EE74")]
		public void ToggleGrabThroughWalls(Toggle t)
		{
		}

		[Token(Token = "0x60025FB")]
		[Address(RVA = "0xE7EE84", Offset = "0xE7EE84", VA = "0xE7EE84")]
		public DistanceGrabberSample()
		{
		}
	}
	[Token(Token = "0x200063E")]
	public class ControllerBoxController : MonoBehaviour
	{
		[Token(Token = "0x4002479")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private TrainLocomotive _locomotive;

		[Token(Token = "0x400247A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private CowController _cowController;

		[Token(Token = "0x60025FC")]
		[Address(RVA = "0xE7EE8C", Offset = "0xE7EE8C", VA = "0xE7EE8C")]
		private void Awake()
		{
		}

		[Token(Token = "0x60025FD")]
		[Address(RVA = "0xE7EE90", Offset = "0xE7EE90", VA = "0xE7EE90")]
		public void StartStopStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x60025FE")]
		[Address(RVA = "0xE7EF1C", Offset = "0xE7EF1C", VA = "0xE7EF1C")]
		public void DecreaseSpeedStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x60025FF")]
		[Address(RVA = "0xE7EFAC", Offset = "0xE7EFAC", VA = "0xE7EFAC")]
		public void IncreaseSpeedStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x6002600")]
		[Address(RVA = "0xE7F03C", Offset = "0xE7F03C", VA = "0xE7F03C")]
		public void SmokeButtonStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x6002601")]
		[Address(RVA = "0xE7F0E8", Offset = "0xE7F0E8", VA = "0xE7F0E8")]
		public void WhistleButtonStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x6002602")]
		[Address(RVA = "0xE7F1C4", Offset = "0xE7F1C4", VA = "0xE7F1C4")]
		public void ReverseButtonStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x6002603")]
		[Address(RVA = "0xE7F208", Offset = "0xE7F208", VA = "0xE7F208")]
		public void SwitchVisualization(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x6002604")]
		[Address(RVA = "0xE7F268", Offset = "0xE7F268", VA = "0xE7F268")]
		public void GoMoo(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x6002605")]
		[Address(RVA = "0xE7F2C8", Offset = "0xE7F2C8", VA = "0xE7F2C8")]
		public ControllerBoxController()
		{
		}
	}
	[Token(Token = "0x200063F")]
	public class CowController : MonoBehaviour
	{
		[Token(Token = "0x400247B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Animation _cowAnimation;

		[Token(Token = "0x400247C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private AudioSource _mooCowAudioSource;

		[Token(Token = "0x6002606")]
		[Address(RVA = "0xE7F2D0", Offset = "0xE7F2D0", VA = "0xE7F2D0")]
		private void Start()
		{
		}

		[Token(Token = "0x6002607")]
		[Address(RVA = "0xE7F2D4", Offset = "0xE7F2D4", VA = "0xE7F2D4")]
		public void PlayMooSound()
		{
		}

		[Token(Token = "0x6002608")]
		[Address(RVA = "0xE7F298", Offset = "0xE7F298", VA = "0xE7F298")]
		public void GoMooCowGo()
		{
		}

		[Token(Token = "0x6002609")]
		[Address(RVA = "0xE7F308", Offset = "0xE7F308", VA = "0xE7F308")]
		public CowController()
		{
		}
	}
	[Token(Token = "0x2000640")]
	public class PanelHMDFollower : MonoBehaviour
	{
		[Token(Token = "0x2000641")]
		[CompilerGenerated]
		private sealed class <LerpToHMD>d__13 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002487")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002488")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002489")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public PanelHMDFollower <>4__this;

			[Token(Token = "0x400248A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private Vector3 <newPanelPosition>5__2;

			[Token(Token = "0x400248B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private float <startTime>5__3;

			[Token(Token = "0x400248C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private float <endTime>5__4;

			[Token(Token = "0x17000270")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002612")]
				[Address(RVA = "0xE7F988", Offset = "0xE7F988", VA = "0xE7F988", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000271")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002614")]
				[Address(RVA = "0xE7F9D0", Offset = "0xE7F9D0", VA = "0xE7F9D0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600260F")]
			[Address(RVA = "0xE7F700", Offset = "0xE7F700", VA = "0xE7F700")]
			[DebuggerHidden]
			public <LerpToHMD>d__13(int <>1__state)
			{
			}

			[Token(Token = "0x6002610")]
			[Address(RVA = "0xE7F7C8", Offset = "0xE7F7C8", VA = "0xE7F7C8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002611")]
			[Address(RVA = "0xE7F7CC", Offset = "0xE7F7CC", VA = "0xE7F7CC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002613")]
			[Address(RVA = "0xE7F990", Offset = "0xE7F990", VA = "0xE7F990", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400247D")]
		private const float TOTAL_DURATION = 3f;

		[Token(Token = "0x400247E")]
		private const float HMD_MOVEMENT_THRESHOLD = 0.3f;

		[Token(Token = "0x400247F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private float _maxDistance;

		[Token(Token = "0x4002480")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private float _minDistance;

		[Token(Token = "0x4002481")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float _minZDistance;

		[Token(Token = "0x4002482")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private OVRCameraRig _cameraRig;

		[Token(Token = "0x4002483")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Vector3 _panelInitialPosition;

		[Token(Token = "0x4002484")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Coroutine _coroutine;

		[Token(Token = "0x4002485")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Vector3 _prevPos;

		[Token(Token = "0x4002486")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private Vector3 _lastMovedToPos;

		[Token(Token = "0x600260A")]
		[Address(RVA = "0xE7F310", Offset = "0xE7F310", VA = "0xE7F310")]
		private void Awake()
		{
		}

		[Token(Token = "0x600260B")]
		[Address(RVA = "0xE7F3B0", Offset = "0xE7F3B0", VA = "0xE7F3B0")]
		private void Update()
		{
		}

		[Token(Token = "0x600260C")]
		[Address(RVA = "0xE7F6C0", Offset = "0xE7F6C0", VA = "0xE7F6C0")]
		private Vector3 CalculateIdealAnchorPosition()
		{
			return default(Vector3);
		}

		[Token(Token = "0x600260D")]
		[Address(RVA = "0xE7F64C", Offset = "0xE7F64C", VA = "0xE7F64C")]
		[IteratorStateMachine(typeof(<LerpToHMD>d__13))]
		private IEnumerator LerpToHMD()
		{
			return null;
		}

		[Token(Token = "0x600260E")]
		[Address(RVA = "0xE7F728", Offset = "0xE7F728", VA = "0xE7F728")]
		public PanelHMDFollower()
		{
		}
	}
	[Token(Token = "0x2000642")]
	public class SelectionCylinder : MonoBehaviour
	{
		[Token(Token = "0x2000643")]
		public enum SelectionState
		{
			[Token(Token = "0x4002494")]
			Off,
			[Token(Token = "0x4002495")]
			Selected,
			[Token(Token = "0x4002496")]
			Highlighted
		}

		[Token(Token = "0x400248D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private MeshRenderer _selectionMeshRenderer;

		[Token(Token = "0x400248E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static int _colorId;

		[Token(Token = "0x400248F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Material[] _selectionMaterials;

		[Token(Token = "0x4002490")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Color[] _defaultSelectionColors;

		[Token(Token = "0x4002491")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Color[] _highlightColors;

		[Token(Token = "0x4002492")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private SelectionState _currSelectionState;

		[Token(Token = "0x17000272")]
		public SelectionState CurrSelectionState
		{
			[Token(Token = "0x6002615")]
			[Address(RVA = "0xE7F9D8", Offset = "0xE7F9D8", VA = "0xE7F9D8")]
			get
			{
				return default(SelectionState);
			}
			[Token(Token = "0x6002616")]
			[Address(RVA = "0xE7F9E0", Offset = "0xE7F9E0", VA = "0xE7F9E0")]
			set
			{
			}
		}

		[Token(Token = "0x6002617")]
		[Address(RVA = "0xE7FB34", Offset = "0xE7FB34", VA = "0xE7FB34")]
		private void Awake()
		{
		}

		[Token(Token = "0x6002618")]
		[Address(RVA = "0xE7FCF8", Offset = "0xE7FCF8", VA = "0xE7FCF8")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6002619")]
		[Address(RVA = "0xE7FA54", Offset = "0xE7FA54", VA = "0xE7FA54")]
		private void AffectSelectionColor(Color[] newColors)
		{
		}

		[Token(Token = "0x600261A")]
		[Address(RVA = "0xE7FDC0", Offset = "0xE7FDC0", VA = "0xE7FDC0")]
		public SelectionCylinder()
		{
		}
	}
	[Token(Token = "0x2000644")]
	public class TrackSegment : MonoBehaviour
	{
		[Token(Token = "0x2000645")]
		public enum SegmentType
		{
			[Token(Token = "0x40024A5")]
			Straight,
			[Token(Token = "0x40024A6")]
			LeftTurn,
			[Token(Token = "0x40024A7")]
			RightTurn,
			[Token(Token = "0x40024A8")]
			Switch
		}

		[Token(Token = "0x4002497")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private SegmentType _segmentType;

		[Token(Token = "0x4002498")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private MeshFilter _straight;

		[Token(Token = "0x4002499")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private MeshFilter _leftTurn;

		[Token(Token = "0x400249A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private MeshFilter _rightTurn;

		[Token(Token = "0x400249B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float _gridSize;

		[Token(Token = "0x400249C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private int _subDivCount;

		[Token(Token = "0x400249D")]
		private const float _originalGridSize = 0.8f;

		[Token(Token = "0x400249E")]
		private const float _trackWidth = 0.15f;

		[Token(Token = "0x400249F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private GameObject _mesh;

		[Token(Token = "0x40024A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Pose _p1;

		[Token(Token = "0x40024A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Pose _p2;

		[Token(Token = "0x40024A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Pose _endPose;

		[Token(Token = "0x17000273")]
		public float StartDistance
		{
			[Token(Token = "0x600261C")]
			[Address(RVA = "0xE7FE30", Offset = "0xE7FE30", VA = "0xE7FE30")]
			[CompilerGenerated]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600261D")]
			[Address(RVA = "0xE7FE38", Offset = "0xE7FE38", VA = "0xE7FE38")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x17000274")]
		public float GridSize
		{
			[Token(Token = "0x600261E")]
			[Address(RVA = "0xE7FE40", Offset = "0xE7FE40", VA = "0xE7FE40")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600261F")]
			[Address(RVA = "0xE7FE48", Offset = "0xE7FE48", VA = "0xE7FE48")]
			private set
			{
			}
		}

		[Token(Token = "0x17000275")]
		public int SubDivCount
		{
			[Token(Token = "0x6002620")]
			[Address(RVA = "0xE7FE50", Offset = "0xE7FE50", VA = "0xE7FE50")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6002621")]
			[Address(RVA = "0xE7FE58", Offset = "0xE7FE58", VA = "0xE7FE58")]
			set
			{
			}
		}

		[Token(Token = "0x17000276")]
		public SegmentType Type
		{
			[Token(Token = "0x6002622")]
			[Address(RVA = "0xE7FE60", Offset = "0xE7FE60", VA = "0xE7FE60")]
			get
			{
				return default(SegmentType);
			}
		}

		[Token(Token = "0x17000277")]
		public Pose EndPose
		{
			[Token(Token = "0x6002623")]
			[Address(RVA = "0xE7FE68", Offset = "0xE7FE68", VA = "0xE7FE68")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000278")]
		public float Radius
		{
			[Token(Token = "0x6002624")]
			[Address(RVA = "0xE8023C", Offset = "0xE8023C", VA = "0xE8023C")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000279")]
		public float SegmentLength
		{
			[Token(Token = "0x6002626")]
			[Address(RVA = "0xE7FEC4", Offset = "0xE7FEC4", VA = "0xE7FEC4")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6002625")]
		[Address(RVA = "0xE8024C", Offset = "0xE8024C", VA = "0xE8024C")]
		public float setGridSize(float size)
		{
			return default(float);
		}

		[Token(Token = "0x6002627")]
		[Address(RVA = "0xE80264", Offset = "0xE80264", VA = "0xE80264")]
		private void Awake()
		{
		}

		[Token(Token = "0x6002628")]
		[Address(RVA = "0xE7FF04", Offset = "0xE7FF04", VA = "0xE7FF04")]
		public void UpdatePose(float distanceIntoSegment, Pose pose)
		{
		}

		[Token(Token = "0x6002629")]
		[Address(RVA = "0xE80268", Offset = "0xE80268", VA = "0xE80268")]
		private void Update()
		{
		}

		[Token(Token = "0x600262A")]
		[Address(RVA = "0xE8026C", Offset = "0xE8026C", VA = "0xE8026C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x600262B")]
		[Address(RVA = "0xE802C8", Offset = "0xE802C8", VA = "0xE802C8")]
		private void DrawDebugLines()
		{
		}

		[Token(Token = "0x600262C")]
		[Address(RVA = "0xE80BFC", Offset = "0xE80BFC", VA = "0xE80BFC")]
		public void RegenerateTrackAndMesh()
		{
		}

		[Token(Token = "0x600262D")]
		[Address(RVA = "0xE80E80", Offset = "0xE80E80", VA = "0xE80E80")]
		public TrackSegment()
		{
		}
	}
	[Token(Token = "0x2000646")]
	public class TrainButtonVisualController : MonoBehaviour
	{
		[Token(Token = "0x2000647")]
		[CompilerGenerated]
		private sealed class <ResetPosition>d__26 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40024BA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40024BB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40024BC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public TrainButtonVisualController <>4__this;

			[Token(Token = "0x40024BD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <startTime>5__2;

			[Token(Token = "0x40024BE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float <endTime>5__3;

			[Token(Token = "0x1700027A")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600263C")]
				[Address(RVA = "0xE819A4", Offset = "0xE819A4", VA = "0xE819A4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700027B")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600263E")]
				[Address(RVA = "0xE819EC", Offset = "0xE819EC", VA = "0xE819EC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002639")]
			[Address(RVA = "0xE817D8", Offset = "0xE817D8", VA = "0xE817D8")]
			[DebuggerHidden]
			public <ResetPosition>d__26(int <>1__state)
			{
			}

			[Token(Token = "0x600263A")]
			[Address(RVA = "0xE81828", Offset = "0xE81828", VA = "0xE81828", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600263B")]
			[Address(RVA = "0xE8182C", Offset = "0xE8182C", VA = "0xE8182C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600263D")]
			[Address(RVA = "0xE819AC", Offset = "0xE819AC", VA = "0xE819AC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40024A9")]
		private const float LERP_TO_OLD_POS_DURATION = 1f;

		[Token(Token = "0x40024AA")]
		private const float LOCAL_SIZE_HALVED = 0.5f;

		[Token(Token = "0x40024AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private MeshRenderer _meshRenderer;

		[Token(Token = "0x40024AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private MeshRenderer _glowRenderer;

		[Token(Token = "0x40024AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private ButtonController _buttonController;

		[Token(Token = "0x40024AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Color _buttonContactColor;

		[Token(Token = "0x40024AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Color _buttonActionColor;

		[Token(Token = "0x40024B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private AudioSource _audioSource;

		[Token(Token = "0x40024B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private AudioClip _actionSoundEffect;

		[Token(Token = "0x40024B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private Transform _buttonContactTransform;

		[Token(Token = "0x40024B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private float _contactMaxDisplacementDistance;

		[Token(Token = "0x40024B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Material _buttonMaterial;

		[Token(Token = "0x40024B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Color _buttonDefaultColor;

		[Token(Token = "0x40024B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private int _materialColorId;

		[Token(Token = "0x40024B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private bool _buttonInContactOrActionStates;

		[Token(Token = "0x40024B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Coroutine _lerpToOldPositionCr;

		[Token(Token = "0x40024B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Vector3 _oldPosition;

		[Token(Token = "0x600262E")]
		[Address(RVA = "0xE80FE0", Offset = "0xE80FE0", VA = "0xE80FE0")]
		private void Awake()
		{
		}

		[Token(Token = "0x600262F")]
		[Address(RVA = "0xE81098", Offset = "0xE81098", VA = "0xE81098")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6002630")]
		[Address(RVA = "0xE81128", Offset = "0xE81128", VA = "0xE81128")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6002631")]
		[Address(RVA = "0xE81270", Offset = "0xE81270", VA = "0xE81270")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6002632")]
		[Address(RVA = "0xE813FC", Offset = "0xE813FC", VA = "0xE813FC")]
		private void ActionOrInContactZoneStayEvent(ColliderZoneArgs collisionArgs)
		{
		}

		[Token(Token = "0x6002633")]
		[Address(RVA = "0xE8150C", Offset = "0xE8150C", VA = "0xE8150C")]
		private void InteractableStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x6002634")]
		[Address(RVA = "0xE81710", Offset = "0xE81710", VA = "0xE81710")]
		private void PlaySound(AudioClip clip)
		{
		}

		[Token(Token = "0x6002635")]
		[Address(RVA = "0xE8161C", Offset = "0xE8161C", VA = "0xE8161C")]
		private void StopResetLerping()
		{
		}

		[Token(Token = "0x6002636")]
		[Address(RVA = "0xE81630", Offset = "0xE81630", VA = "0xE81630")]
		private void LerpToOldPosition()
		{
		}

		[Token(Token = "0x6002637")]
		[Address(RVA = "0xE81764", Offset = "0xE81764", VA = "0xE81764")]
		[IteratorStateMachine(typeof(<ResetPosition>d__26))]
		private IEnumerator ResetPosition()
		{
			return null;
		}

		[Token(Token = "0x6002638")]
		[Address(RVA = "0xE81800", Offset = "0xE81800", VA = "0xE81800")]
		public TrainButtonVisualController()
		{
		}
	}
	[Token(Token = "0x2000648")]
	public class TrainCar : TrainCarBase
	{
		[Token(Token = "0x40024BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private TrainCarBase _parentLocomotive;

		[Token(Token = "0x40024C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		protected float _distanceBehindParent;

		[Token(Token = "0x1700027C")]
		public float DistanceBehindParentScaled
		{
			[Token(Token = "0x600263F")]
			[Address(RVA = "0xE819F4", Offset = "0xE819F4", VA = "0xE819F4")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6002640")]
		[Address(RVA = "0xE81A04", Offset = "0xE81A04", VA = "0xE81A04", Slot = "4")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6002641")]
		[Address(RVA = "0xE81A0C", Offset = "0xE81A0C", VA = "0xE81A0C", Slot = "5")]
		public override void UpdatePosition()
		{
		}

		[Token(Token = "0x6002642")]
		[Address(RVA = "0xE81D3C", Offset = "0xE81D3C", VA = "0xE81D3C")]
		public TrainCar()
		{
		}
	}
	[Token(Token = "0x2000649")]
	public abstract class TrainCarBase : MonoBehaviour
	{
		[Token(Token = "0x40024C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Vector3 OFFSET;

		[Token(Token = "0x40024C2")]
		private const float WHEEL_RADIUS = 0.027f;

		[Token(Token = "0x40024C3")]
		private const float TWO_PI = (float)Math.PI * 2f;

		[Token(Token = "0x40024C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		protected Transform _frontWheels;

		[Token(Token = "0x40024C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		protected Transform _rearWheels;

		[Token(Token = "0x40024C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		protected TrainTrack _trainTrack;

		[Token(Token = "0x40024C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		protected Transform[] _individualWheels;

		[Token(Token = "0x40024C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		protected float scale;

		[Token(Token = "0x40024CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Pose _frontPose;

		[Token(Token = "0x40024CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Pose _rearPose;

		[Token(Token = "0x1700027D")]
		public float Distance
		{
			[Token(Token = "0x6002643")]
			[Address(RVA = "0xE81E38", Offset = "0xE81E38", VA = "0xE81E38")]
			[CompilerGenerated]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6002644")]
			[Address(RVA = "0xE81E40", Offset = "0xE81E40", VA = "0xE81E40")]
			[CompilerGenerated]
			protected set
			{
			}
		}

		[Token(Token = "0x1700027E")]
		public float Scale
		{
			[Token(Token = "0x6002645")]
			[Address(RVA = "0xE81E48", Offset = "0xE81E48", VA = "0xE81E48")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6002646")]
			[Address(RVA = "0xE81E50", Offset = "0xE81E50", VA = "0xE81E50")]
			set
			{
			}
		}

		[Token(Token = "0x6002647")]
		[Address(RVA = "0xE81A08", Offset = "0xE81A08", VA = "0xE81A08", Slot = "4")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x6002648")]
		[Address(RVA = "0xE81E58", Offset = "0xE81E58", VA = "0xE81E58")]
		public void UpdatePose(float distance, TrainCarBase train, Pose pose)
		{
		}

		[Token(Token = "0x6002649")]
		[Address(RVA = "0xE81A48", Offset = "0xE81A48", VA = "0xE81A48")]
		protected void UpdateCarPosition()
		{
		}

		[Token(Token = "0x600264A")]
		[Address(RVA = "0xE81C58", Offset = "0xE81C58", VA = "0xE81C58")]
		protected void RotateCarWheels()
		{
		}

		[Token(Token = "0x600264B")]
		public abstract void UpdatePosition();

		[Token(Token = "0x600264C")]
		[Address(RVA = "0xE81D9C", Offset = "0xE81D9C", VA = "0xE81D9C")]
		protected TrainCarBase()
		{
		}
	}
	[Token(Token = "0x200064A")]
	public class TrainCrossingController : MonoBehaviour
	{
		[Token(Token = "0x200064B")]
		[CompilerGenerated]
		private sealed class <AnimateCrossing>d__15 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40024D6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40024D7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40024D8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public TrainCrossingController <>4__this;

			[Token(Token = "0x40024D9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float animationLength;

			[Token(Token = "0x40024DA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float <animationEndTime>5__2;

			[Token(Token = "0x40024DB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <lightBlinkDuration>5__3;

			[Token(Token = "0x40024DC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private float <lightBlinkStartTime>5__4;

			[Token(Token = "0x40024DD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private float <lightBlinkEndTime>5__5;

			[Token(Token = "0x40024DE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private Material <lightToBlinkOn>5__6;

			[Token(Token = "0x40024DF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private Material <lightToBlinkOff>5__7;

			[Token(Token = "0x40024E0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			private Color <onColor>5__8;

			[Token(Token = "0x40024E1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			private Color <offColor>5__9;

			[Token(Token = "0x1700027F")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600265A")]
				[Address(RVA = "0xE82728", Offset = "0xE82728", VA = "0xE82728", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000280")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600265C")]
				[Address(RVA = "0xE82770", Offset = "0xE82770", VA = "0xE82770", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002657")]
			[Address(RVA = "0xE8239C", Offset = "0xE8239C", VA = "0xE8239C")]
			[DebuggerHidden]
			public <AnimateCrossing>d__15(int <>1__state)
			{
			}

			[Token(Token = "0x6002658")]
			[Address(RVA = "0xE82510", Offset = "0xE82510", VA = "0xE82510", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002659")]
			[Address(RVA = "0xE82514", Offset = "0xE82514", VA = "0xE82514", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600265B")]
			[Address(RVA = "0xE82730", Offset = "0xE82730", VA = "0xE82730", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40024CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private AudioSource _audioSource;

		[Token(Token = "0x40024CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private AudioClip[] _crossingSounds;

		[Token(Token = "0x40024CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private MeshRenderer _lightSide1Renderer;

		[Token(Token = "0x40024CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private MeshRenderer _lightSide2Renderer;

		[Token(Token = "0x40024D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private SelectionCylinder _selectionCylinder;

		[Token(Token = "0x40024D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Material _lightsSide1Mat;

		[Token(Token = "0x40024D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Material _lightsSide2Mat;

		[Token(Token = "0x40024D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private int _colorId;

		[Token(Token = "0x40024D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Coroutine _xingAnimationCr;

		[Token(Token = "0x40024D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private InteractableTool _toolInteractingWithMe;

		[Token(Token = "0x600264E")]
		[Address(RVA = "0xE81FC8", Offset = "0xE81FC8", VA = "0xE81FC8")]
		private void Awake()
		{
		}

		[Token(Token = "0x600264F")]
		[Address(RVA = "0xE82024", Offset = "0xE82024", VA = "0xE82024")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6002650")]
		[Address(RVA = "0xE820FC", Offset = "0xE820FC", VA = "0xE820FC")]
		public void CrossingButtonStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x6002651")]
		[Address(RVA = "0xE82250", Offset = "0xE82250", VA = "0xE82250")]
		private void Update()
		{
		}

		[Token(Token = "0x6002652")]
		[Address(RVA = "0xE82158", Offset = "0xE82158", VA = "0xE82158")]
		private void ActivateTrainCrossing()
		{
		}

		[Token(Token = "0x6002653")]
		[Address(RVA = "0xE82318", Offset = "0xE82318", VA = "0xE82318")]
		[IteratorStateMachine(typeof(<AnimateCrossing>d__15))]
		private IEnumerator AnimateCrossing(float animationLength)
		{
			return null;
		}

		[Token(Token = "0x6002654")]
		[Address(RVA = "0xE823C4", Offset = "0xE823C4", VA = "0xE823C4")]
		private void AffectMaterials(Material[] materials, Color newColor)
		{
		}

		[Token(Token = "0x6002655")]
		[Address(RVA = "0xE8245C", Offset = "0xE8245C", VA = "0xE8245C")]
		private void ToggleLightObjects(bool enableState)
		{
		}

		[Token(Token = "0x6002656")]
		[Address(RVA = "0xE824B8", Offset = "0xE824B8", VA = "0xE824B8")]
		public TrainCrossingController()
		{
		}
	}
	[Token(Token = "0x200064C")]
	public class TrainLocomotive : TrainCarBase
	{
		[Token(Token = "0x200064D")]
		private enum EngineSoundState
		{
			[Token(Token = "0x4002500")]
			Start,
			[Token(Token = "0x4002501")]
			AccelerateOrSetProperSpeed,
			[Token(Token = "0x4002502")]
			Stop
		}

		[Token(Token = "0x200064E")]
		[CompilerGenerated]
		private sealed class <StartStopTrain>d__34 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002503")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002504")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002505")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public bool startTrain;

			[Token(Token = "0x4002506")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public TrainLocomotive <>4__this;

			[Token(Token = "0x4002507")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <endSpeed>5__2;

			[Token(Token = "0x4002508")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private float <timePeriodForSpeedChange>5__3;

			[Token(Token = "0x4002509")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private float <startTime>5__4;

			[Token(Token = "0x400250A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private float <endTime>5__5;

			[Token(Token = "0x400250B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private float <startSpeed>5__6;

			[Token(Token = "0x17000281")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600266F")]
				[Address(RVA = "0xE83008", Offset = "0xE83008", VA = "0xE83008", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000282")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002671")]
				[Address(RVA = "0xE83050", Offset = "0xE83050", VA = "0xE83050", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600266C")]
			[Address(RVA = "0xE82A18", Offset = "0xE82A18", VA = "0xE82A18")]
			[DebuggerHidden]
			public <StartStopTrain>d__34(int <>1__state)
			{
			}

			[Token(Token = "0x600266D")]
			[Address(RVA = "0xE82DE0", Offset = "0xE82DE0", VA = "0xE82DE0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600266E")]
			[Address(RVA = "0xE82DE4", Offset = "0xE82DE4", VA = "0xE82DE4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002670")]
			[Address(RVA = "0xE83010", Offset = "0xE83010", VA = "0xE83010", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40024E2")]
		private const float MIN_SPEED = 0.2f;

		[Token(Token = "0x40024E3")]
		private const float MAX_SPEED = 2.7f;

		[Token(Token = "0x40024E4")]
		private const float SMOKE_SPEED_MULTIPLIER = 8f;

		[Token(Token = "0x40024E5")]
		private const int MAX_PARTICLES_MULTIPLIER = 3;

		[Token(Token = "0x40024E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		[Range(0.2f, 2.7f)]
		protected float _initialSpeed;

		[Token(Token = "0x40024E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private GameObject _startStopButton;

		[Token(Token = "0x40024E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private GameObject _decreaseSpeedButton;

		[Token(Token = "0x40024E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private GameObject _increaseSpeedButton;

		[Token(Token = "0x40024EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private GameObject _smokeButton;

		[Token(Token = "0x40024EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private GameObject _whistleButton;

		[Token(Token = "0x40024EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private GameObject _reverseButton;

		[Token(Token = "0x40024ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private AudioSource _whistleAudioSource;

		[Token(Token = "0x40024EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private AudioClip _whistleSound;

		[Token(Token = "0x40024EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		private AudioSource _engineAudioSource;

		[Token(Token = "0x40024F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		private AudioClip[] _accelerationSounds;

		[Token(Token = "0x40024F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[SerializeField]
		private AudioClip[] _decelerationSounds;

		[Token(Token = "0x40024F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[SerializeField]
		private AudioClip _startUpSound;

		[Token(Token = "0x40024F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[SerializeField]
		private AudioSource _smokeStackAudioSource;

		[Token(Token = "0x40024F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[SerializeField]
		private AudioClip _smokeSound;

		[Token(Token = "0x40024F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[SerializeField]
		private ParticleSystem _smoke1;

		[Token(Token = "0x40024F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[SerializeField]
		private ParticleSystem _smoke2;

		[Token(Token = "0x40024F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[SerializeField]
		private TrainCarBase[] _childCars;

		[Token(Token = "0x40024F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private bool _isMoving;

		[Token(Token = "0x40024F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE1")]
		private bool _reverse;

		[Token(Token = "0x40024FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		private float _currentSpeed;

		[Token(Token = "0x40024FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private float _speedDiv;

		[Token(Token = "0x40024FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
		private float _standardRateOverTimeMultiplier;

		[Token(Token = "0x40024FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private int _standardMaxParticles;

		[Token(Token = "0x40024FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private Coroutine _startStopTrainCr;

		[Token(Token = "0x600265D")]
		[Address(RVA = "0xE82778", Offset = "0xE82778", VA = "0xE82778")]
		private void Start()
		{
		}

		[Token(Token = "0x600265E")]
		[Address(RVA = "0xE828D4", Offset = "0xE828D4", VA = "0xE828D4")]
		private void Update()
		{
		}

		[Token(Token = "0x600265F")]
		[Address(RVA = "0xE828E0", Offset = "0xE828E0", VA = "0xE828E0", Slot = "5")]
		public override void UpdatePosition()
		{
		}

		[Token(Token = "0x6002660")]
		[Address(RVA = "0xE7EEC0", Offset = "0xE7EEC0", VA = "0xE7EEC0")]
		public void StartStopStateChanged()
		{
		}

		[Token(Token = "0x6002661")]
		[Address(RVA = "0xE8284C", Offset = "0xE8284C", VA = "0xE8284C")]
		[IteratorStateMachine(typeof(<StartStopTrain>d__34))]
		private IEnumerator StartStopTrain(bool startTrain)
		{
			return null;
		}

		[Token(Token = "0x6002662")]
		[Address(RVA = "0xE82A40", Offset = "0xE82A40", VA = "0xE82A40")]
		private float PlayEngineSound(EngineSoundState engineSoundState)
		{
			return default(float);
		}

		[Token(Token = "0x6002663")]
		[Address(RVA = "0xE829B8", Offset = "0xE829B8", VA = "0xE829B8")]
		private void UpdateDistance()
		{
		}

		[Token(Token = "0x6002664")]
		[Address(RVA = "0xE7EF4C", Offset = "0xE7EF4C", VA = "0xE7EF4C")]
		public void DecreaseSpeedStateChanged()
		{
		}

		[Token(Token = "0x6002665")]
		[Address(RVA = "0xE7EFDC", Offset = "0xE7EFDC", VA = "0xE7EFDC")]
		public void IncreaseSpeedStateChanged()
		{
		}

		[Token(Token = "0x6002666")]
		[Address(RVA = "0xE82C54", Offset = "0xE82C54", VA = "0xE82C54")]
		private void UpdateSmokeEmissionBasedOnSpeed()
		{
		}

		[Token(Token = "0x6002667")]
		[Address(RVA = "0xE82D48", Offset = "0xE82D48", VA = "0xE82D48")]
		private float GetCurrentSmokeEmission()
		{
			return default(float);
		}

		[Token(Token = "0x6002668")]
		[Address(RVA = "0xE7F06C", Offset = "0xE7F06C", VA = "0xE7F06C")]
		public void SmokeButtonStateChanged()
		{
		}

		[Token(Token = "0x6002669")]
		[Address(RVA = "0xE7F118", Offset = "0xE7F118", VA = "0xE7F118")]
		public void WhistleButtonStateChanged()
		{
		}

		[Token(Token = "0x600266A")]
		[Address(RVA = "0xE7F1F8", Offset = "0xE7F1F8", VA = "0xE7F1F8")]
		public void ReverseButtonStateChanged()
		{
		}

		[Token(Token = "0x600266B")]
		[Address(RVA = "0xE82D84", Offset = "0xE82D84", VA = "0xE82D84")]
		public TrainLocomotive()
		{
		}
	}
	[Token(Token = "0x200064F")]
	public class TrainTrack : MonoBehaviour
	{
		[Token(Token = "0x400250C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private float _gridSize;

		[Token(Token = "0x400250D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private int _subDivCount;

		[Token(Token = "0x400250E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Transform _segmentParent;

		[Token(Token = "0x400250F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Transform _trainParent;

		[Token(Token = "0x4002510")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private bool _regnerateTrackMeshOnAwake;

		[Token(Token = "0x4002511")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float _trainLength;

		[Token(Token = "0x4002512")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private TrackSegment[] _trackSegments;

		[Token(Token = "0x17000283")]
		public float TrackLength
		{
			[Token(Token = "0x6002672")]
			[Address(RVA = "0xE83058", Offset = "0xE83058", VA = "0xE83058")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6002673")]
			[Address(RVA = "0xE83060", Offset = "0xE83060", VA = "0xE83060")]
			private set
			{
			}
		}

		[Token(Token = "0x6002674")]
		[Address(RVA = "0xE83068", Offset = "0xE83068", VA = "0xE83068")]
		private void Awake()
		{
		}

		[Token(Token = "0x6002675")]
		[Address(RVA = "0xE81EC0", Offset = "0xE81EC0", VA = "0xE81EC0")]
		public TrackSegment GetSegment(float distance)
		{
			return null;
		}

		[Token(Token = "0x6002676")]
		[Address(RVA = "0xE8306C", Offset = "0xE8306C", VA = "0xE8306C")]
		public void Regenerate()
		{
		}

		[Token(Token = "0x6002677")]
		[Address(RVA = "0xE83264", Offset = "0xE83264", VA = "0xE83264")]
		private void SetScale(float ratio)
		{
		}

		[Token(Token = "0x6002678")]
		[Address(RVA = "0xE83344", Offset = "0xE83344", VA = "0xE83344")]
		public TrainTrack()
		{
		}
	}
	[Token(Token = "0x2000650")]
	public class Pose
	{
		[Token(Token = "0x4002513")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Vector3 Position;

		[Token(Token = "0x4002514")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Quaternion Rotation;

		[Token(Token = "0x6002679")]
		[Address(RVA = "0xE80F48", Offset = "0xE80F48", VA = "0xE80F48")]
		public Pose()
		{
		}

		[Token(Token = "0x600267A")]
		[Address(RVA = "0xE83360", Offset = "0xE83360", VA = "0xE83360")]
		public Pose(Vector3 position, Quaternion rotation)
		{
		}
	}
	[Token(Token = "0x2000651")]
	public class WindmillBladesController : MonoBehaviour
	{
		[Token(Token = "0x2000652")]
		[CompilerGenerated]
		private sealed class <LerpToSpeed>d__17 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002520")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002521")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002522")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public WindmillBladesController <>4__this;

			[Token(Token = "0x4002523")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float goalSpeed;

			[Token(Token = "0x4002524")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float <totalTime>5__2;

			[Token(Token = "0x4002525")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <startSpeed>5__3;

			[Token(Token = "0x17000285")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002687")]
				[Address(RVA = "0xE83954", Offset = "0xE83954", VA = "0xE83954", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000286")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002689")]
				[Address(RVA = "0xE8399C", Offset = "0xE8399C", VA = "0xE8399C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002684")]
			[Address(RVA = "0xE8363C", Offset = "0xE8363C", VA = "0xE8363C")]
			[DebuggerHidden]
			public <LerpToSpeed>d__17(int <>1__state)
			{
			}

			[Token(Token = "0x6002685")]
			[Address(RVA = "0xE837B0", Offset = "0xE837B0", VA = "0xE837B0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002686")]
			[Address(RVA = "0xE837B4", Offset = "0xE837B4", VA = "0xE837B4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002688")]
			[Address(RVA = "0xE8395C", Offset = "0xE8395C", VA = "0xE8395C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000653")]
		[CompilerGenerated]
		private sealed class <PlaySoundDelayed>d__18 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002526")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002527")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002528")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public WindmillBladesController <>4__this;

			[Token(Token = "0x4002529")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public AudioClip initial;

			[Token(Token = "0x400252A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public float timeDelayAfterInitial;

			[Token(Token = "0x400252B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public AudioClip clip;

			[Token(Token = "0x17000287")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600268D")]
				[Address(RVA = "0xE83A78", Offset = "0xE83A78", VA = "0xE83A78", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000288")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600268F")]
				[Address(RVA = "0xE83AC0", Offset = "0xE83AC0", VA = "0xE83AC0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600268A")]
			[Address(RVA = "0xE83718", Offset = "0xE83718", VA = "0xE83718")]
			[DebuggerHidden]
			public <PlaySoundDelayed>d__18(int <>1__state)
			{
			}

			[Token(Token = "0x600268B")]
			[Address(RVA = "0xE839A4", Offset = "0xE839A4", VA = "0xE839A4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600268C")]
			[Address(RVA = "0xE839A8", Offset = "0xE839A8", VA = "0xE839A8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600268E")]
			[Address(RVA = "0xE83A80", Offset = "0xE83A80", VA = "0xE83A80", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4002515")]
		private const float MAX_TIME = 1f;

		[Token(Token = "0x4002516")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private AudioSource _audioSource;

		[Token(Token = "0x4002517")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private AudioClip _windMillRotationSound;

		[Token(Token = "0x4002518")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private AudioClip _windMillStartSound;

		[Token(Token = "0x4002519")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private AudioClip _windMillStopSound;

		[Token(Token = "0x400251B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float _currentSpeed;

		[Token(Token = "0x400251C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Coroutine _lerpSpeedCoroutine;

		[Token(Token = "0x400251D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Coroutine _audioChangeCr;

		[Token(Token = "0x400251E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Quaternion _originalRotation;

		[Token(Token = "0x400251F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private float _rotAngle;

		[Token(Token = "0x17000284")]
		public bool IsMoving
		{
			[Token(Token = "0x600267B")]
			[Address(RVA = "0xE833C4", Offset = "0xE833C4", VA = "0xE833C4")]
			[CompilerGenerated]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600267C")]
			[Address(RVA = "0xE833CC", Offset = "0xE833CC", VA = "0xE833CC")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x600267D")]
		[Address(RVA = "0xE833D8", Offset = "0xE833D8", VA = "0xE833D8")]
		private void Start()
		{
		}

		[Token(Token = "0x600267E")]
		[Address(RVA = "0xE83408", Offset = "0xE83408", VA = "0xE83408")]
		private void Update()
		{
		}

		[Token(Token = "0x600267F")]
		[Address(RVA = "0xE83548", Offset = "0xE83548", VA = "0xE83548")]
		public void SetMoveState(bool newMoveState, float goalSpeed)
		{
		}

		[Token(Token = "0x6002680")]
		[Address(RVA = "0xE835B8", Offset = "0xE835B8", VA = "0xE835B8")]
		[IteratorStateMachine(typeof(<LerpToSpeed>d__17))]
		private IEnumerator LerpToSpeed(float goalSpeed)
		{
			return null;
		}

		[Token(Token = "0x6002681")]
		[Address(RVA = "0xE83664", Offset = "0xE83664", VA = "0xE83664")]
		[IteratorStateMachine(typeof(<PlaySoundDelayed>d__18))]
		private IEnumerator PlaySoundDelayed(AudioClip initial, AudioClip clip, float timeDelayAfterInitial)
		{
			return null;
		}

		[Token(Token = "0x6002682")]
		[Address(RVA = "0xE83740", Offset = "0xE83740", VA = "0xE83740")]
		private void PlaySound(AudioClip clip, bool loop = false)
		{
		}

		[Token(Token = "0x6002683")]
		[Address(RVA = "0xE837A8", Offset = "0xE837A8", VA = "0xE837A8")]
		public WindmillBladesController()
		{
		}
	}
	[Token(Token = "0x2000654")]
	public class WindmillController : MonoBehaviour
	{
		[Token(Token = "0x400252C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject _startStopButton;

		[Token(Token = "0x400252D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float _maxSpeed;

		[Token(Token = "0x400252E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private SelectionCylinder _selectionCylinder;

		[Token(Token = "0x400252F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private WindmillBladesController _bladesRotation;

		[Token(Token = "0x4002530")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private InteractableTool _toolInteractingWithMe;

		[Token(Token = "0x6002690")]
		[Address(RVA = "0xE83AC8", Offset = "0xE83AC8", VA = "0xE83AC8")]
		private void Awake()
		{
		}

		[Token(Token = "0x6002691")]
		[Address(RVA = "0xE83B3C", Offset = "0xE83B3C", VA = "0xE83B3C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6002692")]
		[Address(RVA = "0xE83C04", Offset = "0xE83C04", VA = "0xE83C04")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6002693")]
		[Address(RVA = "0xE83D14", Offset = "0xE83D14", VA = "0xE83D14")]
		private void StartStopStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x6002694")]
		[Address(RVA = "0xE83D90", Offset = "0xE83D90", VA = "0xE83D90")]
		private void Update()
		{
		}

		[Token(Token = "0x6002695")]
		[Address(RVA = "0xE83E58", Offset = "0xE83E58", VA = "0xE83E58")]
		public WindmillController()
		{
		}
	}
	[Token(Token = "0x2000655")]
	public enum EUiDisplayType
	{
		[Token(Token = "0x4002532")]
		EUDT_WorldGeoQuad,
		[Token(Token = "0x4002533")]
		EUDT_OverlayQuad,
		[Token(Token = "0x4002534")]
		EUDT_None,
		[Token(Token = "0x4002535")]
		EUDT_MaxDislayTypes
	}
	[Token(Token = "0x2000656")]
	public class OVROverlaySample : MonoBehaviour
	{
		[Token(Token = "0x2000657")]
		[CompilerGenerated]
		private sealed class <WaitforOVROverlay>d__30 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400254E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400254F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002550")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public OVROverlaySample <>4__this;

			[Token(Token = "0x17000289")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60026A9")]
				[Address(RVA = "0xE854E8", Offset = "0xE854E8", VA = "0xE854E8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700028A")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60026AB")]
				[Address(RVA = "0xE85530", Offset = "0xE85530", VA = "0xE85530", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60026A6")]
			[Address(RVA = "0xE84B78", Offset = "0xE84B78", VA = "0xE84B78")]
			[DebuggerHidden]
			public <WaitforOVROverlay>d__30(int <>1__state)
			{
			}

			[Token(Token = "0x60026A7")]
			[Address(RVA = "0xE852EC", Offset = "0xE852EC", VA = "0xE852EC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60026A8")]
			[Address(RVA = "0xE852F0", Offset = "0xE852F0", VA = "0xE852F0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60026AA")]
			[Address(RVA = "0xE854F0", Offset = "0xE854F0", VA = "0xE854F0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4002536")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool inMenu;

		[Token(Token = "0x4002537")]
		private const string ovrOverlayID = "OVROverlayID";

		[Token(Token = "0x4002538")]
		private const string applicationID = "ApplicationID";

		[Token(Token = "0x4002539")]
		private const string noneID = "NoneID";

		[Token(Token = "0x400253A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Toggle applicationRadioButton;

		[Token(Token = "0x400253B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Toggle noneRadioButton;

		[Token(Token = "0x400253C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[Header("App vs Compositor Comparison Settings")]
		public GameObject mainCamera;

		[Token(Token = "0x400253D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public GameObject uiCamera;

		[Token(Token = "0x400253E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public GameObject uiGeoParent;

		[Token(Token = "0x400253F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public GameObject worldspaceGeoParent;

		[Token(Token = "0x4002540")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public OVROverlay cameraRenderOverlay;

		[Token(Token = "0x4002541")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public OVROverlay renderingLabelOverlay;

		[Token(Token = "0x4002542")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Texture applicationLabelTexture;

		[Token(Token = "0x4002543")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Texture compositorLabelTexture;

		[Token(Token = "0x4002544")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[Header("Level Loading Sim Settings")]
		public GameObject prefabForLevelLoadSim;

		[Token(Token = "0x4002545")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public OVROverlay cubemapOverlay;

		[Token(Token = "0x4002546")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public OVROverlay loadingTextQuadOverlay;

		[Token(Token = "0x4002547")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public float distanceFromCamToLoadText;

		[Token(Token = "0x4002548")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		public float cubeSpawnRadius;

		[Token(Token = "0x4002549")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public float heightBetweenItems;

		[Token(Token = "0x400254A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		public int numObjectsPerLevel;

		[Token(Token = "0x400254B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public int numLevels;

		[Token(Token = "0x400254C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		public int numLoopsTrigger;

		[Token(Token = "0x400254D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private List<GameObject> spawnedCubes;

		[Token(Token = "0x6002696")]
		[Address(RVA = "0xE83E68", Offset = "0xE83E68", VA = "0xE83E68")]
		private void Start()
		{
		}

		[Token(Token = "0x6002697")]
		[Address(RVA = "0xE846A8", Offset = "0xE846A8", VA = "0xE846A8")]
		private void Update()
		{
		}

		[Token(Token = "0x6002698")]
		[Address(RVA = "0xE847D0", Offset = "0xE847D0", VA = "0xE847D0")]
		private void ActivateWorldGeo()
		{
		}

		[Token(Token = "0x6002699")]
		[Address(RVA = "0xE84900", Offset = "0xE84900", VA = "0xE84900")]
		private void ActivateOVROverlay()
		{
		}

		[Token(Token = "0x600269A")]
		[Address(RVA = "0xE84A30", Offset = "0xE84A30", VA = "0xE84A30")]
		private void ActivateNone()
		{
		}

		[Token(Token = "0x600269B")]
		[Address(RVA = "0xE847B0", Offset = "0xE847B0", VA = "0xE847B0")]
		private void TriggerLoad()
		{
		}

		[Token(Token = "0x600269C")]
		[Address(RVA = "0xE84B04", Offset = "0xE84B04", VA = "0xE84B04")]
		[IteratorStateMachine(typeof(<WaitforOVROverlay>d__30))]
		private IEnumerator WaitforOVROverlay()
		{
			return null;
		}

		[Token(Token = "0x600269D")]
		[Address(RVA = "0xE84BA0", Offset = "0xE84BA0", VA = "0xE84BA0")]
		private void TriggerUnload()
		{
		}

		[Token(Token = "0x600269E")]
		[Address(RVA = "0xE842D8", Offset = "0xE842D8", VA = "0xE842D8")]
		private void CameraAndRenderTargetSetup()
		{
		}

		[Token(Token = "0x600269F")]
		[Address(RVA = "0xE84CE8", Offset = "0xE84CE8", VA = "0xE84CE8")]
		private void SimulateLevelLoad()
		{
		}

		[Token(Token = "0x60026A0")]
		[Address(RVA = "0xE84BC8", Offset = "0xE84BC8", VA = "0xE84BC8")]
		private void ClearObjects()
		{
		}

		[Token(Token = "0x60026A1")]
		[Address(RVA = "0xE85070", Offset = "0xE85070", VA = "0xE85070")]
		public void RadioPressed(string radioLabel, string group, Toggle t)
		{
		}

		[Token(Token = "0x60026A2")]
		[Address(RVA = "0xE8515C", Offset = "0xE8515C", VA = "0xE8515C")]
		public OVROverlaySample()
		{
		}
	}
}
namespace OVRTouchSample
{
	[Token(Token = "0x2000658")]
	[RequireComponent(typeof(OVRGrabber))]
	public class Hand : MonoBehaviour
	{
		[Token(Token = "0x4002551")]
		public const string ANIM_LAYER_NAME_POINT = "Point Layer";

		[Token(Token = "0x4002552")]
		public const string ANIM_LAYER_NAME_THUMB = "Thumb Layer";

		[Token(Token = "0x4002553")]
		public const string ANIM_PARAM_NAME_FLEX = "Flex";

		[Token(Token = "0x4002554")]
		public const string ANIM_PARAM_NAME_POSE = "Pose";

		[Token(Token = "0x4002555")]
		public const float THRESH_COLLISION_FLEX = 0.9f;

		[Token(Token = "0x4002556")]
		public const float INPUT_RATE_CHANGE = 20f;

		[Token(Token = "0x4002557")]
		public const float COLLIDER_SCALE_MIN = 0.01f;

		[Token(Token = "0x4002558")]
		public const float COLLIDER_SCALE_MAX = 1f;

		[Token(Token = "0x4002559")]
		public const float COLLIDER_SCALE_PER_SECOND = 1f;

		[Token(Token = "0x400255A")]
		public const float TRIGGER_DEBOUNCE_TIME = 0.05f;

		[Token(Token = "0x400255B")]
		public const float THUMB_DEBOUNCE_TIME = 0.15f;

		[Token(Token = "0x400255C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private OVRInput.Controller m_controller;

		[Token(Token = "0x400255D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Animator m_animator;

		[Token(Token = "0x400255E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private HandPose m_defaultGrabPose;

		[Token(Token = "0x400255F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Collider[] m_colliders;

		[Token(Token = "0x4002560")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool m_collisionEnabled;

		[Token(Token = "0x4002561")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private OVRGrabber m_grabber;

		[Token(Token = "0x4002562")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private List<Renderer> m_showAfterInputFocusAcquired;

		[Token(Token = "0x4002563")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private int m_animLayerIndexThumb;

		[Token(Token = "0x4002564")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private int m_animLayerIndexPoint;

		[Token(Token = "0x4002565")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private int m_animParamIndexFlex;

		[Token(Token = "0x4002566")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private int m_animParamIndexPose;

		[Token(Token = "0x4002567")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private bool m_isPointing;

		[Token(Token = "0x4002568")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
		private bool m_isGivingThumbsUp;

		[Token(Token = "0x4002569")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private float m_pointBlend;

		[Token(Token = "0x400256A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private float m_thumbsUpBlend;

		[Token(Token = "0x400256B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private bool m_restoreOnInputAcquired;

		[Token(Token = "0x400256C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private float m_collisionScaleCurrent;

		[Token(Token = "0x60026AC")]
		[Address(RVA = "0xE85538", Offset = "0xE85538", VA = "0xE85538")]
		private void Awake()
		{
		}

		[Token(Token = "0x60026AD")]
		[Address(RVA = "0xE85590", Offset = "0xE85590", VA = "0xE85590")]
		private void Start()
		{
		}

		[Token(Token = "0x60026AE")]
		[Address(RVA = "0xE859E0", Offset = "0xE859E0", VA = "0xE859E0")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60026AF")]
		[Address(RVA = "0xE85ACC", Offset = "0xE85ACC", VA = "0xE85ACC")]
		private void Update()
		{
		}

		[Token(Token = "0x60026B0")]
		[Address(RVA = "0xE85C30", Offset = "0xE85C30", VA = "0xE85C30")]
		private void UpdateCapTouchStates()
		{
		}

		[Token(Token = "0x60026B1")]
		[Address(RVA = "0xE85F00", Offset = "0xE85F00", VA = "0xE85F00")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x60026B2")]
		[Address(RVA = "0xE85FE4", Offset = "0xE85FE4", VA = "0xE85FE4")]
		private void OnInputFocusLost()
		{
		}

		[Token(Token = "0x60026B3")]
		[Address(RVA = "0xE86194", Offset = "0xE86194", VA = "0xE86194")]
		private void OnInputFocusAcquired()
		{
		}

		[Token(Token = "0x60026B4")]
		[Address(RVA = "0xE85CBC", Offset = "0xE85CBC", VA = "0xE85CBC")]
		private float InputValueRateChange(bool isDown, float value)
		{
			return default(float);
		}

		[Token(Token = "0x60026B5")]
		[Address(RVA = "0xE85D10", Offset = "0xE85D10", VA = "0xE85D10")]
		private void UpdateAnimStates()
		{
		}

		[Token(Token = "0x60026B6")]
		[Address(RVA = "0xE858A0", Offset = "0xE858A0", VA = "0xE858A0")]
		private void CollisionEnable(bool enabled)
		{
		}

		[Token(Token = "0x60026B7")]
		[Address(RVA = "0xE862B8", Offset = "0xE862B8", VA = "0xE862B8")]
		public Hand()
		{
		}
	}
	[Token(Token = "0x200065A")]
	public enum HandPoseId
	{
		[Token(Token = "0x4002570")]
		Default,
		[Token(Token = "0x4002571")]
		Generic,
		[Token(Token = "0x4002572")]
		PingPongBall,
		[Token(Token = "0x4002573")]
		Controller
	}
	[Token(Token = "0x200065B")]
	public class HandPose : MonoBehaviour
	{
		[Token(Token = "0x4002574")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private bool m_allowPointing;

		[Token(Token = "0x4002575")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		[SerializeField]
		private bool m_allowThumbsUp;

		[Token(Token = "0x4002576")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private HandPoseId m_poseId;

		[Token(Token = "0x1700028B")]
		public bool AllowPointing
		{
			[Token(Token = "0x60026BB")]
			[Address(RVA = "0xE86370", Offset = "0xE86370", VA = "0xE86370")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700028C")]
		public bool AllowThumbsUp
		{
			[Token(Token = "0x60026BC")]
			[Address(RVA = "0xE86378", Offset = "0xE86378", VA = "0xE86378")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700028D")]
		public HandPoseId PoseId
		{
			[Token(Token = "0x60026BD")]
			[Address(RVA = "0xE86380", Offset = "0xE86380", VA = "0xE86380")]
			get
			{
				return default(HandPoseId);
			}
		}

		[Token(Token = "0x60026BE")]
		[Address(RVA = "0xE86388", Offset = "0xE86388", VA = "0xE86388")]
		public HandPose()
		{
		}
	}
	[Token(Token = "0x200065C")]
	public class TouchController : MonoBehaviour
	{
		[Token(Token = "0x4002577")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private OVRInput.Controller m_controller;

		[Token(Token = "0x4002578")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Animator m_animator;

		[Token(Token = "0x4002579")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool m_restoreOnInputAcquired;

		[Token(Token = "0x60026BF")]
		[Address(RVA = "0xE86390", Offset = "0xE86390", VA = "0xE86390")]
		private void Update()
		{
		}

		[Token(Token = "0x60026C0")]
		[Address(RVA = "0xE8665C", Offset = "0xE8665C", VA = "0xE8665C")]
		private void OnInputFocusLost()
		{
		}

		[Token(Token = "0x60026C1")]
		[Address(RVA = "0xE866AC", Offset = "0xE866AC", VA = "0xE866AC")]
		private void OnInputFocusAcquired()
		{
		}

		[Token(Token = "0x60026C2")]
		[Address(RVA = "0xE866E4", Offset = "0xE866E4", VA = "0xE866E4")]
		public TouchController()
		{
		}
	}
}
namespace MeshCombineStudio
{
	[Token(Token = "0x200065D")]
	public class DisabledLODGroup : MonoBehaviour
	{
		[Token(Token = "0x400257A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[HideInInspector]
		public MeshCombiner meshCombiner;

		[Token(Token = "0x400257B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LODGroup lodGroup;

		[Token(Token = "0x60026C3")]
		[Address(RVA = "0xE866EC", Offset = "0xE866EC", VA = "0xE866EC")]
		public DisabledLODGroup()
		{
		}
	}
	[Token(Token = "0x200065E")]
	[ExecuteInEditMode]
	public class FindLodGroups : MonoBehaviour
	{
		[Token(Token = "0x400257C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool find;

		[Token(Token = "0x60026C4")]
		[Address(RVA = "0xE866F4", Offset = "0xE866F4", VA = "0xE866F4")]
		private void Start()
		{
		}

		[Token(Token = "0x60026C5")]
		[Address(RVA = "0xE86858", Offset = "0xE86858", VA = "0xE86858")]
		private void Update()
		{
		}

		[Token(Token = "0x60026C6")]
		[Address(RVA = "0xE866F8", Offset = "0xE866F8", VA = "0xE866F8")]
		private void FindLods()
		{
		}

		[Token(Token = "0x60026C7")]
		[Address(RVA = "0xE8686C", Offset = "0xE8686C", VA = "0xE8686C")]
		public FindLodGroups()
		{
		}
	}
	[Token(Token = "0x200065F")]
	public class LODGroupSetup : MonoBehaviour
	{
		[Token(Token = "0x400257D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public MeshCombiner meshCombiner;

		[Token(Token = "0x400257E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LODGroup lodGroup;

		[Token(Token = "0x400257F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int lodGroupParentIndex;

		[Token(Token = "0x4002580")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public int lodCount;

		[Token(Token = "0x4002581")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private LODGroup[] lodGroups;

		[Token(Token = "0x60026C8")]
		[Address(RVA = "0xE86874", Offset = "0xE86874", VA = "0xE86874")]
		public void Init(MeshCombiner meshCombiner, int lodGroupParentIndex)
		{
		}

		[Token(Token = "0x60026C9")]
		[Address(RVA = "0xE8694C", Offset = "0xE8694C", VA = "0xE8694C")]
		private void GetSetup()
		{
		}

		[Token(Token = "0x60026CA")]
		[Address(RVA = "0xE86A4C", Offset = "0xE86A4C", VA = "0xE86A4C")]
		public void ApplySetup()
		{
		}

		[Token(Token = "0x60026CB")]
		[Address(RVA = "0xE86D5C", Offset = "0xE86D5C", VA = "0xE86D5C")]
		public void AddLODGroupsToChildren()
		{
		}

		[Token(Token = "0x60026CC")]
		[Address(RVA = "0xE87064", Offset = "0xE87064", VA = "0xE87064")]
		public void RemoveLODGroupFromChildren()
		{
		}

		[Token(Token = "0x60026CD")]
		[Address(RVA = "0xE8717C", Offset = "0xE8717C", VA = "0xE8717C")]
		public LODGroupSetup()
		{
		}
	}
	[Token(Token = "0x2000660")]
	public class CamGeometryCapture : MonoBehaviour
	{
		[Token(Token = "0x4002582")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ComputeShader computeDepthToArray;

		[Token(Token = "0x4002583")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Int2 resolution;

		[Token(Token = "0x4002584")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Camera cam;

		[Token(Token = "0x4002585")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Transform t;

		[Token(Token = "0x4002586")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public RenderTexture rtCapture;

		[Token(Token = "0x4002587")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float[] heights;

		[Token(Token = "0x4002588")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Bounds bounds;

		[Token(Token = "0x4002589")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private float maxSize;

		[Token(Token = "0x60026CE")]
		[Address(RVA = "0xE87184", Offset = "0xE87184", VA = "0xE87184")]
		public void Init()
		{
		}

		[Token(Token = "0x60026CF")]
		[Address(RVA = "0xE8727C", Offset = "0xE8727C", VA = "0xE8727C")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60026D0")]
		[Address(RVA = "0xE872AC", Offset = "0xE872AC", VA = "0xE872AC")]
		private void DisposeRenderTexture(ref RenderTexture rt)
		{
		}

		[Token(Token = "0x60026D1")]
		[Address(RVA = "0xE87280", Offset = "0xE87280", VA = "0xE87280")]
		public void DisposeRTCapture()
		{
		}

		[Token(Token = "0x60026D2")]
		[Address(RVA = "0xE87360", Offset = "0xE87360", VA = "0xE87360")]
		public void RemoveTrianglesBelowSurface(Transform t, MeshCombineJobManager.MeshCombineJob meshCombineJob, MeshCache.SubMeshCache newMeshCache, ref byte[] vertexIsBelow)
		{
		}

		[Token(Token = "0x60026D3")]
		[Address(RVA = "0xE876A8", Offset = "0xE876A8", VA = "0xE876A8")]
		public void Capture(Bounds bounds, int collisionMask, Vector3 direction, Int2 resolution)
		{
		}

		[Token(Token = "0x60026D4")]
		[Address(RVA = "0xE87DFC", Offset = "0xE87DFC", VA = "0xE87DFC")]
		public void SetCamera(Vector3 direction)
		{
		}

		[Token(Token = "0x60026D5")]
		[Address(RVA = "0xE87B48", Offset = "0xE87B48", VA = "0xE87B48")]
		public float GetHeight(Vector3 pos)
		{
			return default(float);
		}

		[Token(Token = "0x60026D6")]
		[Address(RVA = "0xE87FD8", Offset = "0xE87FD8", VA = "0xE87FD8")]
		public CamGeometryCapture()
		{
		}
	}
	[Token(Token = "0x2000661")]
	public class CombinedLODManager : MonoBehaviour
	{
		[Token(Token = "0x2000662")]
		public enum LodMode
		{
			[Token(Token = "0x4002599")]
			Automatic,
			[Token(Token = "0x400259A")]
			DebugLod
		}

		[Token(Token = "0x2000663")]
		public enum LodDistanceMode
		{
			[Token(Token = "0x400259C")]
			Automatic,
			[Token(Token = "0x400259D")]
			Manual
		}

		[Serializable]
		[Token(Token = "0x2000664")]
		public class LOD
		{
			[Token(Token = "0x400259E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Transform searchParent;

			[Token(Token = "0x400259F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Sphere3 sphere;

			[Token(Token = "0x60026E2")]
			[Address(RVA = "0xE885AC", Offset = "0xE885AC", VA = "0xE885AC")]
			public LOD()
			{
			}

			[Token(Token = "0x60026E3")]
			[Address(RVA = "0xE88EB8", Offset = "0xE88EB8", VA = "0xE88EB8")]
			public LOD(Transform searchParent)
			{
			}
		}

		[Token(Token = "0x2000665")]
		public class Cell : BaseOctree.Cell
		{
			[Token(Token = "0x40025A0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			public Cell[] cells;

			[Token(Token = "0x40025A1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			private AABB3 box;

			[Token(Token = "0x60026E4")]
			[Address(RVA = "0xE88EE8", Offset = "0xE88EE8", VA = "0xE88EE8")]
			public Cell()
			{
			}

			[Token(Token = "0x60026E5")]
			[Address(RVA = "0xE880FC", Offset = "0xE880FC", VA = "0xE880FC")]
			public Cell(Vector3 position, Vector3 size, int maxLevels)
			{
			}

			[Token(Token = "0x60026E6")]
			[Address(RVA = "0xE8861C", Offset = "0xE8861C", VA = "0xE8861C")]
			public void AddMeshRenderer(MeshRenderer mr, Vector3 position, int lodLevel, int lodLevels)
			{
			}

			[Token(Token = "0x60026E7")]
			[Address(RVA = "0xE88EF0", Offset = "0xE88EF0", VA = "0xE88EF0")]
			private void AddMeshRendererInternal(MeshRenderer mr, Vector3 position, int lodLevel, int lodLevels)
			{
			}

			[Token(Token = "0x60026E8")]
			[Address(RVA = "0xE887CC", Offset = "0xE887CC", VA = "0xE887CC")]
			public void AutoLodInternal(LOD[] lods, float lodCulledDistance)
			{
			}

			[Token(Token = "0x60026E9")]
			[Address(RVA = "0xE88B48", Offset = "0xE88B48", VA = "0xE88B48")]
			public void LodInternal(LOD[] lods, int lodLevel)
			{
			}

			[Token(Token = "0x60026EA")]
			[Address(RVA = "0xE88D28", Offset = "0xE88D28", VA = "0xE88D28")]
			public void DrawGizmos(LOD[] lods)
			{
			}

			[Token(Token = "0x60026EB")]
			[Address(RVA = "0xE8924C", Offset = "0xE8924C", VA = "0xE8924C")]
			public void DrawGizmosInternal()
			{
			}
		}

		[Token(Token = "0x2000666")]
		public class MaxCell : Cell
		{
			[Token(Token = "0x40025A2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			public List<MeshRenderer>[] mrList;

			[Token(Token = "0x40025A3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
			public int currentLod;

			[Token(Token = "0x60026EC")]
			[Address(RVA = "0xE89428", Offset = "0xE89428", VA = "0xE89428")]
			public MaxCell()
			{
			}
		}

		[Token(Token = "0x400258A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool drawGizmos;

		[Token(Token = "0x400258B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LOD[] lods;

		[Token(Token = "0x400258C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float[] distances;

		[Token(Token = "0x400258D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public LodDistanceMode lodDistanceMode;

		[Token(Token = "0x400258E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public LodMode lodMode;

		[Token(Token = "0x400258F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public int showLod;

		[Token(Token = "0x4002590")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public bool lodCulled;

		[Token(Token = "0x4002591")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float lodCullDistance;

		[Token(Token = "0x4002592")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public Vector3 octreeCenter;

		[Token(Token = "0x4002593")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Vector3 octreeSize;

		[Token(Token = "0x4002594")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public int maxLevels;

		[Token(Token = "0x4002595")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public bool search;

		[Token(Token = "0x4002596")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Cell octree;

		[Token(Token = "0x4002597")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Transform cameraMainT;

		[Token(Token = "0x60026D7")]
		[Address(RVA = "0xE8801C", Offset = "0xE8801C", VA = "0xE8801C")]
		private void Awake()
		{
		}

		[Token(Token = "0x60026D8")]
		[Address(RVA = "0xE88050", Offset = "0xE88050", VA = "0xE88050")]
		private void InitOctree()
		{
		}

		[Token(Token = "0x60026D9")]
		[Address(RVA = "0xE88104", Offset = "0xE88104", VA = "0xE88104")]
		private void Start()
		{
		}

		[Token(Token = "0x60026DA")]
		[Address(RVA = "0xE8828C", Offset = "0xE8828C", VA = "0xE8828C")]
		private void Update()
		{
		}

		[Token(Token = "0x60026DB")]
		[Address(RVA = "0xE883B0", Offset = "0xE883B0", VA = "0xE883B0")]
		public void UpdateLods(MeshCombiner meshCombiner, int lodAmount)
		{
		}

		[Token(Token = "0x60026DC")]
		[Address(RVA = "0xE885B4", Offset = "0xE885B4", VA = "0xE885B4")]
		public void UpdateDistances(MeshCombiner meshCombiner)
		{
		}

		[Token(Token = "0x60026DD")]
		[Address(RVA = "0xE88130", Offset = "0xE88130", VA = "0xE88130")]
		public void Search()
		{
		}

		[Token(Token = "0x60026DE")]
		[Address(RVA = "0xE886A4", Offset = "0xE886A4", VA = "0xE886A4")]
		public void ResetOctree()
		{
		}

		[Token(Token = "0x60026DF")]
		[Address(RVA = "0xE882B8", Offset = "0xE882B8", VA = "0xE882B8")]
		public void Lod(LodMode lodMode)
		{
		}

		[Token(Token = "0x60026E0")]
		[Address(RVA = "0xE88D00", Offset = "0xE88D00", VA = "0xE88D00")]
		private void OnDrawGizmosSelected()
		{
		}

		[Token(Token = "0x60026E1")]
		[Address(RVA = "0xE88E30", Offset = "0xE88E30", VA = "0xE88E30")]
		public CombinedLODManager()
		{
		}
	}
	[Token(Token = "0x2000667")]
	[ExecuteInEditMode]
	public class MeshCombineJobManager : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000668")]
		public class JobSettings
		{
			[Token(Token = "0x40025B4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public CombineJobMode combineJobMode;

			[Token(Token = "0x40025B5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public ThreadAmountMode threadAmountMode;

			[Token(Token = "0x40025B6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public int combineMeshesPerFrame;

			[Token(Token = "0x40025B7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public bool useMultiThreading;

			[Token(Token = "0x40025B8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
			public bool useMainThread;

			[Token(Token = "0x40025B9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public int customThreadAmount;

			[Token(Token = "0x40025BA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public bool showStats;

			[Token(Token = "0x60026FE")]
			[Address(RVA = "0xE8A66C", Offset = "0xE8A66C", VA = "0xE8A66C")]
			public void CopySettings(JobSettings source)
			{
			}

			[Token(Token = "0x60026FF")]
			[Address(RVA = "0xE8C73C", Offset = "0xE8C73C", VA = "0xE8C73C")]
			public void ReportStatus()
			{
			}

			[Token(Token = "0x6002700")]
			[Address(RVA = "0xE8C71C", Offset = "0xE8C71C", VA = "0xE8C71C")]
			public JobSettings()
			{
			}
		}

		[Token(Token = "0x2000669")]
		public enum CombineJobMode
		{
			[Token(Token = "0x40025BC")]
			CombineAtOnce,
			[Token(Token = "0x40025BD")]
			CombinePerFrame
		}

		[Token(Token = "0x200066A")]
		public enum ThreadAmountMode
		{
			[Token(Token = "0x40025BF")]
			AllThreads,
			[Token(Token = "0x40025C0")]
			HalfThreads,
			[Token(Token = "0x40025C1")]
			Custom
		}

		[Token(Token = "0x200066B")]
		public enum ThreadState
		{
			[Token(Token = "0x40025C3")]
			isFree,
			[Token(Token = "0x40025C4")]
			isReady,
			[Token(Token = "0x40025C5")]
			isRunning,
			[Token(Token = "0x40025C6")]
			hasError
		}

		[Token(Token = "0x200066C")]
		public class MeshCombineJobsThread
		{
			[Token(Token = "0x40025C7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int threadId;

			[Token(Token = "0x40025C8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public ThreadState threadState;

			[Token(Token = "0x40025C9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Queue<MeshCombineJob> meshCombineJobs;

			[Token(Token = "0x40025CA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Queue<NewMeshObject> newMeshObjectsDone;

			[Token(Token = "0x6002701")]
			[Address(RVA = "0xE89B20", Offset = "0xE89B20", VA = "0xE89B20")]
			public MeshCombineJobsThread(int threadId)
			{
			}

			[Token(Token = "0x6002702")]
			[Address(RVA = "0xE8B404", Offset = "0xE8B404", VA = "0xE8B404")]
			public void ExecuteJobsThread(object state)
			{
			}
		}

		[Token(Token = "0x200066D")]
		public class MeshCombineJob
		{
			[Token(Token = "0x40025CB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public MeshCombiner meshCombiner;

			[Token(Token = "0x40025CC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public MeshObjectsHolder meshObjectsHolder;

			[Token(Token = "0x40025CD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Transform parent;

			[Token(Token = "0x40025CE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Vector3 position;

			[Token(Token = "0x40025CF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			public int startIndex;

			[Token(Token = "0x40025D0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public int endIndex;

			[Token(Token = "0x40025D1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			public bool firstMesh;

			[Token(Token = "0x40025D2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3D")]
			public bool intersectsSurface;

			[Token(Token = "0x40025D3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public int backFaceTrianglesRemoved;

			[Token(Token = "0x40025D4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			public int trianglesRemoved;

			[Token(Token = "0x40025D5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public bool abort;

			[Token(Token = "0x40025D6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			public string name;

			[Token(Token = "0x6002703")]
			[Address(RVA = "0xE8AC9C", Offset = "0xE8AC9C", VA = "0xE8AC9C")]
			public MeshCombineJob(MeshCombiner meshCombiner, MeshObjectsHolder meshObjectsHolder, Transform parent, Vector3 position, int startIndex, int length, bool firstMesh, bool intersectsSurface)
			{
			}
		}

		[Token(Token = "0x200066E")]
		public class NewMeshObject
		{
			[Token(Token = "0x40025D7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public MeshCombineJob meshCombineJob;

			[Token(Token = "0x40025D8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public MeshCache.SubMeshCache newMeshCache;

			[Token(Token = "0x40025D9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public bool allSkipped;

			[Token(Token = "0x40025DA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public Vector3 newPosition;

			[Token(Token = "0x40025DB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private byte[] vertexIsBelow;

			[Token(Token = "0x40025DC")]
			private const byte belowSurface = 1;

			[Token(Token = "0x40025DD")]
			private const byte aboveSurface = 2;

			[Token(Token = "0x6002704")]
			[Address(RVA = "0xE8C988", Offset = "0xE8C988", VA = "0xE8C988")]
			public NewMeshObject()
			{
			}

			[Token(Token = "0x6002705")]
			[Address(RVA = "0xE8CA10", Offset = "0xE8CA10", VA = "0xE8CA10")]
			public void Combine(MeshCombineJob meshCombineJob)
			{
			}

			[Token(Token = "0x6002706")]
			[Address(RVA = "0xE8D9E8", Offset = "0xE8D9E8", VA = "0xE8D9E8")]
			private void PrintMissingArrayWarning(MeshCombiner meshCombiner, GameObject go, Mesh mesh, string text)
			{
			}

			[Token(Token = "0x6002707")]
			private void HasArray<T>(ref bool hasNewArray, bool hasArray, ref T[] newArray, Array array, int vertexCount, int totalVertices, bool useDefaultValue = false, [Optional] T defaultValue)
			{
			}

			[Token(Token = "0x6002708")]
			private void FillArray<T>(T[] array, int offset, int length, T value)
			{
			}

			[Token(Token = "0x6002709")]
			[Address(RVA = "0xE8DD08", Offset = "0xE8DD08", VA = "0xE8DD08")]
			public void RemoveTrianglesBelowSurface(Transform t, MeshCombineJob meshCombineJob)
			{
			}

			[Token(Token = "0x600270A")]
			[Address(RVA = "0xE8D6C8", Offset = "0xE8D6C8", VA = "0xE8D6C8")]
			public void RemoveBackFaceTriangles()
			{
			}

			[Token(Token = "0x600270B")]
			[Address(RVA = "0xE8E084", Offset = "0xE8E084", VA = "0xE8E084")]
			private void ArrangeTriangles()
			{
			}

			[Token(Token = "0x600270C")]
			[Address(RVA = "0xE8BA8C", Offset = "0xE8BA8C", VA = "0xE8BA8C")]
			public void CreateMesh()
			{
			}
		}

		[Token(Token = "0x40025A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static MeshCombineJobManager instance;

		[Token(Token = "0x40025A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public JobSettings jobSettings;

		[NonSerialized]
		[Token(Token = "0x40025A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public FastList<NewMeshObject> newMeshObjectsPool;

		[Token(Token = "0x40025A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Dictionary<Mesh, MeshCache> meshCacheDictionary;

		[NonSerialized]
		[Token(Token = "0x40025A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public int totalNewMeshObjects;

		[Token(Token = "0x40025A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Queue<MeshCombineJob> meshCombineJobs;

		[Token(Token = "0x40025AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public MeshCombineJobsThread[] meshCombineJobsThreads;

		[Token(Token = "0x40025AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public CamGeometryCapture camGeometryCapture;

		[Token(Token = "0x40025AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public int cores;

		[Token(Token = "0x40025AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public int threadAmount;

		[Token(Token = "0x40025AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public int startThreadId;

		[Token(Token = "0x40025AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public int endThreadId;

		[Token(Token = "0x40025B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public bool abort;

		[Token(Token = "0x40025B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private MeshCache.SubMeshCache tempMeshCache;

		[Token(Token = "0x40025B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Ray ray;

		[Token(Token = "0x40025B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private RaycastHit hitInfo;

		[Token(Token = "0x60026ED")]
		[Address(RVA = "0xE89430", Offset = "0xE89430", VA = "0xE89430")]
		public static MeshCombineJobManager CreateInstance(MeshCombiner meshCombiner, GameObject instantiatePrefab)
		{
			return null;
		}

		[Token(Token = "0x60026EE")]
		[Address(RVA = "0xE89860", Offset = "0xE89860", VA = "0xE89860")]
		public static void ResetMeshCache()
		{
		}

		[Token(Token = "0x60026EF")]
		[Address(RVA = "0xE8991C", Offset = "0xE8991C", VA = "0xE8991C")]
		private void Awake()
		{
		}

		[Token(Token = "0x60026F0")]
		[Address(RVA = "0xE89974", Offset = "0xE89974", VA = "0xE89974")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60026F1")]
		[Address(RVA = "0xE899F4", Offset = "0xE899F4", VA = "0xE899F4")]
		public void Init()
		{
		}

		[Token(Token = "0x60026F2")]
		[Address(RVA = "0xE89C0C", Offset = "0xE89C0C", VA = "0xE89C0C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60026F3")]
		[Address(RVA = "0xE89C10", Offset = "0xE89C10", VA = "0xE89C10")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60026F4")]
		[Address(RVA = "0xE8A048", Offset = "0xE8A048", VA = "0xE8A048")]
		private void Update()
		{
		}

		[Token(Token = "0x60026F5")]
		[Address(RVA = "0xE8A070", Offset = "0xE8A070", VA = "0xE8A070")]
		private void MyUpdate()
		{
		}

		[Token(Token = "0x60026F6")]
		[Address(RVA = "0xE89644", Offset = "0xE89644", VA = "0xE89644")]
		public void SetJobMode(JobSettings newJobSettings)
		{
		}

		[Token(Token = "0x60026F7")]
		[Address(RVA = "0xE8A6A8", Offset = "0xE8A6A8", VA = "0xE8A6A8")]
		public void AddJob(MeshCombiner meshCombiner, MeshObjectsHolder meshObjectsHolder, Transform parent, Vector3 position)
		{
		}

		[Token(Token = "0x60026F8")]
		[Address(RVA = "0xE8ADB0", Offset = "0xE8ADB0", VA = "0xE8ADB0")]
		private void EnqueueJob(MeshCombiner meshCombiner, MeshCombineJob meshCombineJob)
		{
		}

		[Token(Token = "0x60026F9")]
		[Address(RVA = "0xE8AE4C", Offset = "0xE8AE4C", VA = "0xE8AE4C")]
		public int MeshIntersectsSurface(MeshCombiner meshCombiner, CachedGameObject cachedGO)
		{
			return default(int);
		}

		[Token(Token = "0x60026FA")]
		[Address(RVA = "0xE89C70", Offset = "0xE89C70", VA = "0xE89C70")]
		public void AbortJobs()
		{
		}

		[Token(Token = "0x60026FB")]
		[Address(RVA = "0xE8A074", Offset = "0xE8A074", VA = "0xE8A074")]
		public void ExecuteJobs()
		{
		}

		[Token(Token = "0x60026FC")]
		[Address(RVA = "0xE8B0BC", Offset = "0xE8B0BC", VA = "0xE8B0BC")]
		public void CombineMeshesDone(MeshCombineJobsThread meshCombineJobThread)
		{
		}

		[Token(Token = "0x60026FD")]
		[Address(RVA = "0xE8C4F0", Offset = "0xE8C4F0", VA = "0xE8C4F0")]
		public MeshCombineJobManager()
		{
		}
	}
	[Token(Token = "0x200066F")]
	public class MeshCache
	{
		[Token(Token = "0x2000670")]
		public class SubMeshCache
		{
			[Token(Token = "0x40025E1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Vector3[] vertices;

			[Token(Token = "0x40025E2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Vector3[] normals;

			[Token(Token = "0x40025E3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Vector4[] tangents;

			[Token(Token = "0x40025E4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Vector2[] uv;

			[Token(Token = "0x40025E5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Vector2[] uv2;

			[Token(Token = "0x40025E6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public Vector2[] uv3;

			[Token(Token = "0x40025E7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public Vector2[] uv4;

			[Token(Token = "0x40025E8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public Color32[] colors32;

			[Token(Token = "0x40025E9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			public int[] triangles;

			[Token(Token = "0x40025EA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			public bool hasNormals;

			[Token(Token = "0x40025EB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
			public bool hasTangents;

			[Token(Token = "0x40025EC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x5A")]
			public bool hasUv;

			[Token(Token = "0x40025ED")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x5B")]
			public bool hasUv2;

			[Token(Token = "0x40025EE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
			public bool hasUv3;

			[Token(Token = "0x40025EF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x5D")]
			public bool hasUv4;

			[Token(Token = "0x40025F0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x5E")]
			public bool hasColors;

			[Token(Token = "0x40025F1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			public int vertexCount;

			[Token(Token = "0x40025F2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
			public int triangleCount;

			[Token(Token = "0x600270E")]
			[Address(RVA = "0xE8D608", Offset = "0xE8D608", VA = "0xE8D608")]
			public SubMeshCache()
			{
			}

			[Token(Token = "0x600270F")]
			[Address(RVA = "0xE8E150", Offset = "0xE8E150", VA = "0xE8E150")]
			public void CopySubMeshCache(SubMeshCache source)
			{
			}

			[Token(Token = "0x6002710")]
			public void CopyArray<T>(Array sourceArray, ref T[] destinationArray, int vertexCount)
			{
			}

			[Token(Token = "0x6002711")]
			[Address(RVA = "0xE8E9C4", Offset = "0xE8E9C4", VA = "0xE8E9C4")]
			public SubMeshCache(Mesh mesh, int subMeshIndex)
			{
			}

			[Token(Token = "0x6002712")]
			[Address(RVA = "0xE8E868", Offset = "0xE8E868", VA = "0xE8E868")]
			public SubMeshCache(Mesh mesh, bool assignTriangles)
			{
			}

			[Token(Token = "0x6002713")]
			[Address(RVA = "0xE8EA28", Offset = "0xE8EA28", VA = "0xE8EA28")]
			public void CheckHasArrays()
			{
			}

			[Token(Token = "0x6002714")]
			[Address(RVA = "0xE8D6BC", Offset = "0xE8D6BC", VA = "0xE8D6BC")]
			public void ResetHasBooleans()
			{
			}

			[Token(Token = "0x6002715")]
			[Address(RVA = "0xE8D610", Offset = "0xE8D610", VA = "0xE8D610")]
			public void Init(bool initTriangles = true)
			{
			}

			[Token(Token = "0x6002716")]
			[Address(RVA = "0xE8E318", Offset = "0xE8E318", VA = "0xE8E318")]
			public void RebuildVertexBuffer(SubMeshCache sub, bool resizeArrays)
			{
			}
		}

		[Token(Token = "0x40025DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Mesh mesh;

		[Token(Token = "0x40025DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public SubMeshCache[] subMeshCache;

		[Token(Token = "0x40025E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int subMeshCount;

		[Token(Token = "0x600270D")]
		[Address(RVA = "0xE8AA9C", Offset = "0xE8AA9C", VA = "0xE8AA9C")]
		public MeshCache(Mesh mesh)
		{
		}
	}
	[Token(Token = "0x2000671")]
	public static class MeshExtensionAlloc
	{
		[Token(Token = "0x6002717")]
		[Address(RVA = "0xE8EAD4", Offset = "0xE8EAD4", VA = "0xE8EAD4")]
		public static void ApplyVertices(Mesh mesh, Vector3[] vertices, int length)
		{
		}

		[Token(Token = "0x6002718")]
		[Address(RVA = "0xE8EB5C", Offset = "0xE8EB5C", VA = "0xE8EB5C")]
		public static void ApplyNormals(Mesh mesh, Vector3[] normals, int length)
		{
		}

		[Token(Token = "0x6002719")]
		[Address(RVA = "0xE8EBE4", Offset = "0xE8EBE4", VA = "0xE8EBE4")]
		public static void ApplyTangents(Mesh mesh, Vector4[] tangents, int length)
		{
		}

		[Token(Token = "0x600271A")]
		[Address(RVA = "0xE8EC6C", Offset = "0xE8EC6C", VA = "0xE8EC6C")]
		public static void ApplyUvs(Mesh mesh, int channel, Vector2[] uvs, int length)
		{
		}

		[Token(Token = "0x600271B")]
		[Address(RVA = "0xE8ED80", Offset = "0xE8ED80", VA = "0xE8ED80")]
		public static void ApplyColors32(Mesh mesh, Color32[] colors, int length)
		{
		}

		[Token(Token = "0x600271C")]
		[Address(RVA = "0xE8EE08", Offset = "0xE8EE08", VA = "0xE8EE08")]
		public static void ApplyTriangles(Mesh mesh, int[] triangles, int length)
		{
		}
	}
	[Token(Token = "0x2000672")]
	[ExecuteInEditMode]
	public class MeshCombiner : MonoBehaviour
	{
		[Token(Token = "0x2000673")]
		public enum ObjectType
		{
			[Token(Token = "0x400264B")]
			Normal,
			[Token(Token = "0x400264C")]
			LodGroup,
			[Token(Token = "0x400264D")]
			LodRenderer
		}

		[Token(Token = "0x2000674")]
		public enum HandleComponent
		{
			[Token(Token = "0x400264F")]
			Disable,
			[Token(Token = "0x4002650")]
			Destroy
		}

		[Token(Token = "0x2000675")]
		public enum ObjectCenter
		{
			[Token(Token = "0x4002652")]
			BoundsCenter,
			[Token(Token = "0x4002653")]
			TransformPosition
		}

		[Token(Token = "0x2000676")]
		public enum BackFaceTriangleMode
		{
			[Token(Token = "0x4002655")]
			Box,
			[Token(Token = "0x4002656")]
			Direction
		}

		[Token(Token = "0x2000677")]
		public delegate void DefaultMethod();

		[Token(Token = "0x2000678")]
		public enum RebakeLightingMode
		{
			[Token(Token = "0x4002658")]
			CopyLightmapUvs,
			[Token(Token = "0x4002659")]
			RegenarateLightmapUvs
		}

		[Serializable]
		[Token(Token = "0x2000679")]
		public class SearchOptions
		{
			[Token(Token = "0x200067A")]
			public enum ComponentCondition
			{
				[Token(Token = "0x4002672")]
				And,
				[Token(Token = "0x4002673")]
				Or,
				[Token(Token = "0x4002674")]
				Not
			}

			[Token(Token = "0x200067B")]
			public enum LODGroupSearchMode
			{
				[Token(Token = "0x4002676")]
				LodGroup,
				[Token(Token = "0x4002677")]
				LodRenderers
			}

			[Token(Token = "0x400265A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public GameObject parent;

			[Token(Token = "0x400265B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public ObjectCenter objectCenter;

			[Token(Token = "0x400265C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public LODGroupSearchMode lodGroupSearchMode;

			[Token(Token = "0x400265D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public bool useSearchBox;

			[Token(Token = "0x400265E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public Bounds searchBoxBounds;

			[Token(Token = "0x400265F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			public bool searchBoxSquare;

			[Token(Token = "0x4002660")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public Vector3 searchBoxPivot;

			[Token(Token = "0x4002661")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
			public Vector3 searchBoxSize;

			[Token(Token = "0x4002662")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			public bool useMaxBoundsFactor;

			[Token(Token = "0x4002663")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
			public float maxBoundsFactor;

			[Token(Token = "0x4002664")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			public bool useVertexInputLimit;

			[Token(Token = "0x4002665")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
			public int vertexInputLimit;

			[Token(Token = "0x4002666")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			public bool useLayerMask;

			[Token(Token = "0x4002667")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
			public LayerMask layerMask;

			[Token(Token = "0x4002668")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			public bool useTag;

			[Token(Token = "0x4002669")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
			public string tag;

			[Token(Token = "0x400266A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
			public bool useNameContains;

			[Token(Token = "0x400266B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
			public List<string> nameContainList;

			[Token(Token = "0x400266C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
			public bool onlyActive;

			[Token(Token = "0x400266D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x91")]
			public bool onlyStatic;

			[Token(Token = "0x400266E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x92")]
			public bool useComponentsFilter;

			[Token(Token = "0x400266F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
			public ComponentCondition componentCondition;

			[Token(Token = "0x4002670")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
			public List<string> componentNameList;

			[Token(Token = "0x6002748")]
			[Address(RVA = "0xE93844", Offset = "0xE93844", VA = "0xE93844")]
			public SearchOptions(GameObject parent)
			{
			}

			[Token(Token = "0x6002749")]
			[Address(RVA = "0xE90208", Offset = "0xE90208", VA = "0xE90208")]
			public void GetSearchBoxBounds()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x200067C")]
		public class LODGroupSettings
		{
			[Token(Token = "0x4002678")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public LODSettings[] lodSettings;

			[Token(Token = "0x600274A")]
			[Address(RVA = "0xE8F9FC", Offset = "0xE8F9FC", VA = "0xE8F9FC")]
			public LODGroupSettings(int lodParentIndex)
			{
			}
		}

		[Serializable]
		[Token(Token = "0x200067D")]
		public class LODSettings
		{
			[Token(Token = "0x4002679")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public float screenRelativeTransitionHeight;

			[Token(Token = "0x400267A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public float fadeTransitionWidth;

			[Token(Token = "0x600274B")]
			[Address(RVA = "0xE93960", Offset = "0xE93960", VA = "0xE93960")]
			public LODSettings(float screenRelativeTransitionHeight)
			{
			}
		}

		[Token(Token = "0x200067E")]
		public class LodParentHolder
		{
			[Token(Token = "0x400267B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public GameObject go;

			[Token(Token = "0x400267C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Transform t;

			[Token(Token = "0x400267D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public bool found;

			[Token(Token = "0x400267E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public int[] lods;

			[Token(Token = "0x600274C")]
			[Address(RVA = "0xE92564", Offset = "0xE92564", VA = "0xE92564")]
			public LodParentHolder(int lodCount)
			{
			}

			[Token(Token = "0x600274D")]
			[Address(RVA = "0xE91DAC", Offset = "0xE91DAC", VA = "0xE91DAC")]
			public void Create(MeshCombiner meshCombiner, int lodParentIndex)
			{
			}

			[Token(Token = "0x600274E")]
			[Address(RVA = "0xE925D4", Offset = "0xE925D4", VA = "0xE925D4")]
			public void Reset()
			{
			}
		}

		[Token(Token = "0x40025F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static List<MeshCombiner> instances;

		[Token(Token = "0x40025F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MeshCombineJobManager.JobSettings jobSettings;

		[Token(Token = "0x40025F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public LODGroupSettings[] lodGroupsSettings;

		[Token(Token = "0x40025F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public ComputeShader computeDepthToArray;

		[Token(Token = "0x40025F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public GameObject instantiatePrefab;

		[Token(Token = "0x40025F9")]
		public const int maxLodCount = 8;

		[Token(Token = "0x40025FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public string saveMeshesFolder;

		[Token(Token = "0x40025FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public ObjectOctree.Cell octree;

		[Token(Token = "0x40025FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public List<ObjectOctree.MaxCell> changedCells;

		[NonSerialized]
		[Token(Token = "0x40025FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public bool octreeContainsObjects;

		[Token(Token = "0x40025FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
		public bool useCells;

		[Token(Token = "0x40025FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public int cellSize;

		[Token(Token = "0x4002600")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Vector3 cellOffset;

		[Token(Token = "0x4002601")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public bool useVertexOutputLimit;

		[Token(Token = "0x4002602")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public int vertexOutputLimit;

		[Token(Token = "0x4002603")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		public RebakeLightingMode rebakeLightingMode;

		[Token(Token = "0x4002604")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public bool copyBakedLighting;

		[Token(Token = "0x4002605")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x79")]
		public bool validCopyBakedLighting;

		[Token(Token = "0x4002606")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7A")]
		public bool rebakeLighting;

		[Token(Token = "0x4002607")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7B")]
		public bool validRebakeLighting;

		[Token(Token = "0x4002608")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		public LightProbeUsage lightProbeUsage;

		[Token(Token = "0x4002609")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public ReflectionProbeUsage reflectionProbeUsage;

		[Token(Token = "0x400260A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		public MotionVectorGenerationMode motionVectorGenerationMode;

		[Token(Token = "0x400260B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public bool receiveShadows;

		[Token(Token = "0x400260C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		public ShadowCastingMode shadowCastingMode;

		[Token(Token = "0x400260D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public int outputLayer;

		[Token(Token = "0x400260E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		public int outputStatic;

		[Token(Token = "0x400260F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public float scaleInLightmap;

		[Token(Token = "0x4002610")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		public bool addMeshColliders;

		[Token(Token = "0x4002611")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9D")]
		public bool addMeshCollidersInRange;

		[Token(Token = "0x4002612")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public Bounds addMeshCollidersBounds;

		[Token(Token = "0x4002613")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public bool makeMeshesUnreadable;

		[Token(Token = "0x4002614")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB9")]
		public bool removeTrianglesBelowSurface;

		[Token(Token = "0x4002615")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBA")]
		public bool noColliders;

		[Token(Token = "0x4002616")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		public LayerMask surfaceLayerMask;

		[Token(Token = "0x4002617")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public float maxSurfaceHeight;

		[Token(Token = "0x4002618")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		public bool removeOverlappingTriangles;

		[Token(Token = "0x4002619")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public GameObject overlappingCollidersGO;

		[Token(Token = "0x400261A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		public LayerMask overlapLayerMask;

		[Token(Token = "0x400261B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		public int voxelizeLayer;

		[Token(Token = "0x400261C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		public int lodGroupLayer;

		[Token(Token = "0x400261D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		public bool removeBackFaceTriangles;

		[Token(Token = "0x400261E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		public BackFaceTriangleMode backFaceTriangleMode;

		[Token(Token = "0x400261F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		public Vector3 backFaceDirection;

		[Token(Token = "0x4002620")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		public Bounds backFaceBounds;

		[Token(Token = "0x4002621")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		public bool twoSidedShadows;

		[Token(Token = "0x4002622")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x109")]
		public bool combineInRuntime;

		[Token(Token = "0x4002623")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10A")]
		public bool combineOnStart;

		[Token(Token = "0x4002624")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10B")]
		public bool useCombineSwapKey;

		[Token(Token = "0x4002625")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
		public KeyCode combineSwapKey;

		[Token(Token = "0x4002626")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		public HandleComponent originalMeshRenderers;

		[Token(Token = "0x4002627")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
		public HandleComponent originalLODGroups;

		[Token(Token = "0x4002628")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		public SearchOptions searchOptions;

		[Token(Token = "0x4002629")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		public Vector3 oldPosition;

		[Token(Token = "0x400262A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
		public Vector3 oldScale;

		[Token(Token = "0x400262B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		public LodParentHolder[] lodParentHolders;

		[Token(Token = "0x400262C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		public List<CachedGameObject> foundObjects;

		[Token(Token = "0x400262D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		public List<CachedLodGameObject> foundLodObjects;

		[Token(Token = "0x400262E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		public List<LODGroup> foundLodGroups;

		[Token(Token = "0x400262F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		public List<Collider> foundColliders;

		[Token(Token = "0x4002630")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		public HashSet<LODGroup> uniqueFoundLodGroups;

		[Token(Token = "0x4002631")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		public List<Mesh> unreadableMeshes;

		[Token(Token = "0x4002632")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		public HashSet<Mesh> selectImportSettingsMeshes;

		[Token(Token = "0x4002633")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		public HashSet<MeshCombineJobManager.MeshCombineJob> meshCombineJobs;

		[Token(Token = "0x4002634")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		public int totalMeshCombineJobs;

		[Token(Token = "0x4002635")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x184")]
		public int mrDisabledCount;

		[Token(Token = "0x4002636")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
		public bool combined;

		[Token(Token = "0x4002637")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x189")]
		public bool activeOriginal;

		[Token(Token = "0x4002638")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18A")]
		public bool combinedActive;

		[Token(Token = "0x4002639")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18B")]
		public bool drawGizmos;

		[Token(Token = "0x400263A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18C")]
		public bool drawMeshBounds;

		[Token(Token = "0x400263B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
		public int originalTotalVertices;

		[Token(Token = "0x400263C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x194")]
		public int originalTotalTriangles;

		[Token(Token = "0x400263D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
		public int totalVertices;

		[Token(Token = "0x400263E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19C")]
		public int totalTriangles;

		[Token(Token = "0x400263F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
		public int originalDrawCalls;

		[Token(Token = "0x4002640")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A4")]
		public int newDrawCalls;

		[Token(Token = "0x4002641")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
		public int foundMaterialsCount;

		[Token(Token = "0x4002642")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1AC")]
		public float combineTime;

		[Token(Token = "0x4002643")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
		public FastList<MeshColliderAdd> addMeshCollidersList;

		[Token(Token = "0x4002644")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
		private HashSet<Transform> uniqueLodObjects;

		[Token(Token = "0x4002645")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
		private HashSet<Material> foundMaterials;

		[NonSerialized]
		[Token(Token = "0x4002646")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
		private MeshCombiner thisInstance;

		[Token(Token = "0x4002647")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
		private bool hasFoundFirstObject;

		[Token(Token = "0x4002648")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D4")]
		private Bounds bounds;

		[Token(Token = "0x4002649")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
		private Stopwatch stopwatch;

		[Token(Token = "0x14000032")]
		public event DefaultMethod OnCombiningReady
		{
			[Token(Token = "0x600271D")]
			[Address(RVA = "0xE8EE90", Offset = "0xE8EE90", VA = "0xE8EE90")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x600271E")]
			[Address(RVA = "0xE8EF2C", Offset = "0xE8EF2C", VA = "0xE8EF2C")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x600271F")]
		[Address(RVA = "0xE8C3C8", Offset = "0xE8C3C8", VA = "0xE8C3C8")]
		public void AddMeshColliders()
		{
		}

		[Token(Token = "0x6002720")]
		[Address(RVA = "0xE8C48C", Offset = "0xE8C48C", VA = "0xE8C48C")]
		public void ExecuteOnCombiningReady()
		{
		}

		[Token(Token = "0x6002721")]
		[Address(RVA = "0xE8EFC8", Offset = "0xE8EFC8", VA = "0xE8EFC8")]
		private void Awake()
		{
		}

		[Token(Token = "0x6002722")]
		[Address(RVA = "0xE8F0AC", Offset = "0xE8F0AC", VA = "0xE8F0AC")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6002723")]
		[Address(RVA = "0xE8F1DC", Offset = "0xE8F1DC", VA = "0xE8F1DC")]
		private void Start()
		{
		}

		[Token(Token = "0x6002724")]
		[Address(RVA = "0xE8F534", Offset = "0xE8F534", VA = "0xE8F534")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6002725")]
		[Address(RVA = "0xE8F6D8", Offset = "0xE8F6D8", VA = "0xE8F6D8")]
		public static MeshCombiner GetInstance(string name)
		{
			return null;
		}

		[Token(Token = "0x6002726")]
		[Address(RVA = "0xE8F80C", Offset = "0xE8F80C", VA = "0xE8F80C")]
		public void CopyJobSettingsToAllInstances()
		{
		}

		[Token(Token = "0x6002727")]
		[Address(RVA = "0xE8F310", Offset = "0xE8F310", VA = "0xE8F310")]
		public void InitMeshCombineJobManager()
		{
		}

		[Token(Token = "0x6002728")]
		[Address(RVA = "0xE8F8F0", Offset = "0xE8F8F0", VA = "0xE8F8F0")]
		public void CreateLodGroupsSettings()
		{
		}

		[Token(Token = "0x6002729")]
		[Address(RVA = "0xE8F3B0", Offset = "0xE8F3B0", VA = "0xE8F3B0")]
		private void StartRuntime()
		{
		}

		[Token(Token = "0x600272A")]
		[Address(RVA = "0xE8FD90", Offset = "0xE8FD90", VA = "0xE8FD90")]
		public void DestroyCombinedObjects()
		{
		}

		[Token(Token = "0x600272B")]
		[Address(RVA = "0xE8FF3C", Offset = "0xE8FF3C", VA = "0xE8FF3C")]
		private void Reset()
		{
		}

		[Token(Token = "0x600272C")]
		[Address(RVA = "0xE8FDE4", Offset = "0xE8FDE4", VA = "0xE8FDE4")]
		public void AbortAndClearMeshCombineJobs()
		{
		}

		[Token(Token = "0x600272D")]
		[Address(RVA = "0xE8B064", Offset = "0xE8B064", VA = "0xE8B064")]
		public void ClearMeshCombineJobs()
		{
		}

		[Token(Token = "0x600272E")]
		[Address(RVA = "0xE90360", Offset = "0xE90360", VA = "0xE90360")]
		public void AddObjects(List<Transform> transforms, bool useSearchOptions, bool checkForLODGroups = true)
		{
		}

		[Token(Token = "0x600272F")]
		[Address(RVA = "0xE90F78", Offset = "0xE90F78", VA = "0xE90F78")]
		public void AddObjectsAutomatically()
		{
		}

		[Token(Token = "0x6002730")]
		[Address(RVA = "0xE912D4", Offset = "0xE912D4", VA = "0xE912D4")]
		public void AddFoundObjectsToOctree()
		{
		}

		[Token(Token = "0x6002731")]
		[Address(RVA = "0xE91A98", Offset = "0xE91A98", VA = "0xE91A98")]
		private void AddFoundMaterials(MeshRenderer mr)
		{
		}

		[Token(Token = "0x6002732")]
		[Address(RVA = "0xE90174", Offset = "0xE90174", VA = "0xE90174")]
		public void ResetOctree()
		{
		}

		[Token(Token = "0x6002733")]
		[Address(RVA = "0xE91788", Offset = "0xE91788", VA = "0xE91788")]
		public void CalcOctreeSize(Bounds bounds)
		{
		}

		[Token(Token = "0x6002734")]
		[Address(RVA = "0xE91B94", Offset = "0xE91B94", VA = "0xE91B94")]
		public void ApplyChanges()
		{
		}

		[Token(Token = "0x6002735")]
		[Address(RVA = "0xE8FB50", Offset = "0xE8FB50", VA = "0xE8FB50")]
		public void CombineAll()
		{
		}

		[Token(Token = "0x6002736")]
		[Address(RVA = "0xE9026C", Offset = "0xE9026C", VA = "0xE9026C")]
		private void InitAndResetLodParentsCount()
		{
		}

		[Token(Token = "0x6002737")]
		[Address(RVA = "0xE91044", Offset = "0xE91044", VA = "0xE91044")]
		public void AddObjectsFromSearchParent()
		{
		}

		[Token(Token = "0x6002738")]
		[Address(RVA = "0xE905A4", Offset = "0xE905A4", VA = "0xE905A4")]
		private void AddLodGroups(LODGroup[] lodGroups, bool useSearchOptions = true)
		{
		}

		[Token(Token = "0x6002739")]
		[Address(RVA = "0xE90CE0", Offset = "0xE90CE0", VA = "0xE90CE0")]
		private void AddTransforms(Transform[] transforms, bool useSearchOptions = true)
		{
		}

		[Token(Token = "0x600273A")]
		[Address(RVA = "0xE92600", Offset = "0xE92600", VA = "0xE92600")]
		private int ValidObject(Transform t, ObjectType objectType, bool useSearchOptions, ref CachedGameObject cachedGameObject)
		{
			return default(int);
		}

		[Token(Token = "0x600273B")]
		[Address(RVA = "0xE8F6B0", Offset = "0xE8F6B0", VA = "0xE8F6B0")]
		public void RestoreOriginalRenderersAndLODGroups()
		{
		}

		[Token(Token = "0x600273C")]
		[Address(RVA = "0xE92DC4", Offset = "0xE92DC4", VA = "0xE92DC4")]
		public void SwapCombine()
		{
		}

		[Token(Token = "0x600273D")]
		[Address(RVA = "0xE91C94", Offset = "0xE91C94", VA = "0xE91C94")]
		private void SetOriginalCollidersActive(bool active)
		{
		}

		[Token(Token = "0x600273E")]
		[Address(RVA = "0xE91F70", Offset = "0xE91F70", VA = "0xE91F70")]
		public void ExecuteHandleObjects(bool active, HandleComponent handleOriginalObjects, HandleComponent handleOriginalLodGroups, bool includeColliders = true)
		{
		}

		[Token(Token = "0x600273F")]
		[Address(RVA = "0xE92E08", Offset = "0xE92E08", VA = "0xE92E08")]
		private void DrawGizmosCube(Bounds bounds, Color color)
		{
		}

		[Token(Token = "0x6002740")]
		[Address(RVA = "0xE92EF8", Offset = "0xE92EF8", VA = "0xE92EF8")]
		private void OnDrawGizmosSelected()
		{
		}

		[Token(Token = "0x6002741")]
		[Address(RVA = "0xE91588", Offset = "0xE91588", VA = "0xE91588")]
		private void LogOctreeInfo()
		{
		}

		[Token(Token = "0x6002742")]
		[Address(RVA = "0xE931C4", Offset = "0xE931C4", VA = "0xE931C4")]
		public MeshCombiner()
		{
		}
	}
	[Token(Token = "0x200067F")]
	public struct MeshColliderAdd
	{
		[Token(Token = "0x400267F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public GameObject go;

		[Token(Token = "0x4002680")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Mesh mesh;

		[Token(Token = "0x600274F")]
		[Address(RVA = "0xE8E838", Offset = "0xE8E838", VA = "0xE8E838")]
		public MeshColliderAdd(GameObject go, Mesh mesh)
		{
		}
	}
	[Token(Token = "0x2000680")]
	[ExecuteInEditMode]
	public class ObjectSpawner : MonoBehaviour
	{
		[Token(Token = "0x4002681")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject[] objects;

		[Token(Token = "0x4002682")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float density;

		[Token(Token = "0x4002683")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public Vector2 scaleRange;

		[Token(Token = "0x4002684")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public Vector3 rotationRange;

		[Token(Token = "0x4002685")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Vector2 heightRange;

		[Token(Token = "0x4002686")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float scaleMulti;

		[Token(Token = "0x4002687")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public float resolutionPerMeter;

		[Token(Token = "0x4002688")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public bool spawnInRuntime;

		[Token(Token = "0x4002689")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
		public bool spawn;

		[Token(Token = "0x400268A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4A")]
		public bool deleteChildren;

		[Token(Token = "0x400268B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Transform t;

		[Token(Token = "0x6002750")]
		[Address(RVA = "0xE93988", Offset = "0xE93988", VA = "0xE93988")]
		private void Awake()
		{
		}

		[Token(Token = "0x6002751")]
		[Address(RVA = "0xE93E64", Offset = "0xE93E64", VA = "0xE93E64")]
		private void Update()
		{
		}

		[Token(Token = "0x6002752")]
		[Address(RVA = "0xE93EA0", Offset = "0xE93EA0", VA = "0xE93EA0")]
		public void DeleteChildren()
		{
		}

		[Token(Token = "0x6002753")]
		[Address(RVA = "0xE939E0", Offset = "0xE939E0", VA = "0xE939E0")]
		public void Spawn()
		{
		}

		[Token(Token = "0x6002754")]
		[Address(RVA = "0xE93FF0", Offset = "0xE93FF0", VA = "0xE93FF0")]
		private void OnDrawGizmosSelected()
		{
		}

		[Token(Token = "0x6002755")]
		[Address(RVA = "0xE9409C", Offset = "0xE9409C", VA = "0xE9409C")]
		public ObjectSpawner()
		{
		}
	}
	[Token(Token = "0x2000681")]
	public class RemoveGeometryBelowTerrain : MonoBehaviour
	{
		[Token(Token = "0x400268C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private int totalTriangles;

		[Token(Token = "0x400268D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private int removeTriangles;

		[Token(Token = "0x400268E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int skippedObjects;

		[Token(Token = "0x400268F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public List<Transform> terrains;

		[Token(Token = "0x4002690")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public List<Transform> meshTerrains;

		[Token(Token = "0x4002691")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Bounds[] terrainBounds;

		[Token(Token = "0x4002692")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Bounds[] meshBounds;

		[Token(Token = "0x4002693")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Terrain[] terrainComponents;

		[Token(Token = "0x4002694")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Terrain[] terrainArray;

		[Token(Token = "0x4002695")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Bounds[] terrainBoundsArray;

		[Token(Token = "0x4002696")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private MeshRenderer[] mrs;

		[Token(Token = "0x4002697")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Mesh[] meshTerrainComponents;

		[Token(Token = "0x4002698")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Mesh[] meshArray;

		[Token(Token = "0x4002699")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public bool runOnStart;

		[Token(Token = "0x6002756")]
		[Address(RVA = "0xE940E0", Offset = "0xE940E0", VA = "0xE940E0")]
		private void Start()
		{
		}

		[Token(Token = "0x6002757")]
		[Address(RVA = "0xE94110", Offset = "0xE94110", VA = "0xE94110")]
		public void Remove(GameObject go)
		{
		}

		[Token(Token = "0x6002758")]
		[Address(RVA = "0xE944E4", Offset = "0xE944E4", VA = "0xE944E4")]
		public void RemoveMesh(Transform t, Mesh mesh)
		{
		}

		[Token(Token = "0x6002759")]
		[Address(RVA = "0xE946AC", Offset = "0xE946AC", VA = "0xE946AC")]
		public bool IsMeshUnderTerrain(Transform t, Mesh mesh)
		{
			return default(bool);
		}

		[Token(Token = "0x600275A")]
		[Address(RVA = "0xE94A68", Offset = "0xE94A68", VA = "0xE94A68")]
		public void GetTerrainComponents()
		{
		}

		[Token(Token = "0x600275B")]
		[Address(RVA = "0xE94BB8", Offset = "0xE94BB8", VA = "0xE94BB8")]
		public void GetMeshRenderersAndComponents()
		{
		}

		[Token(Token = "0x600275C")]
		[Address(RVA = "0xE94DB8", Offset = "0xE94DB8", VA = "0xE94DB8")]
		public void CreateTerrainBounds()
		{
		}

		[Token(Token = "0x600275D")]
		[Address(RVA = "0xE95054", Offset = "0xE95054", VA = "0xE95054")]
		public void MakeIntersectLists(Bounds bounds)
		{
		}

		[Token(Token = "0x600275E")]
		[Address(RVA = "0xE9562C", Offset = "0xE9562C", VA = "0xE9562C")]
		public int InterectTerrain(Vector3 pos)
		{
			return default(int);
		}

		[Token(Token = "0x600275F")]
		[Address(RVA = "0xE956C0", Offset = "0xE956C0", VA = "0xE956C0")]
		public int InterectMesh(Vector3 pos)
		{
			return default(int);
		}

		[Token(Token = "0x6002760")]
		[Address(RVA = "0xE95754", Offset = "0xE95754", VA = "0xE95754")]
		public float GetTerrainHeight(Vector3 pos)
		{
			return default(float);
		}

		[Token(Token = "0x6002761")]
		[Address(RVA = "0xE94768", Offset = "0xE94768", VA = "0xE94768")]
		public void RemoveTriangles(Transform t, List<int> newTriangles, Vector3[] vertices)
		{
		}

		[Token(Token = "0x6002762")]
		[Address(RVA = "0xE95838", Offset = "0xE95838", VA = "0xE95838")]
		public RemoveGeometryBelowTerrain()
		{
		}
	}
	[Token(Token = "0x2000682")]
	public class SwapCombineKey : MonoBehaviour
	{
		[Token(Token = "0x400269A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static SwapCombineKey instance;

		[Token(Token = "0x400269B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<MeshCombiner> meshCombinerList;

		[Token(Token = "0x400269C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private MeshCombiner meshCombiner;

		[Token(Token = "0x400269D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private GUIStyle textStyle;

		[Token(Token = "0x6002763")]
		[Address(RVA = "0xE958F0", Offset = "0xE958F0", VA = "0xE958F0")]
		private void Awake()
		{
		}

		[Token(Token = "0x6002764")]
		[Address(RVA = "0xE95A04", Offset = "0xE95A04", VA = "0xE95A04")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6002765")]
		[Address(RVA = "0xE95A58", Offset = "0xE95A58", VA = "0xE95A58")]
		private void Update()
		{
		}

		[Token(Token = "0x6002766")]
		[Address(RVA = "0xE95A98", Offset = "0xE95A98", VA = "0xE95A98")]
		private void OnGUI()
		{
		}

		[Token(Token = "0x6002767")]
		[Address(RVA = "0xE95DC4", Offset = "0xE95DC4", VA = "0xE95DC4")]
		public SwapCombineKey()
		{
		}
	}
	[Token(Token = "0x2000683")]
	public class CachedComponents : MonoBehaviour
	{
		[Token(Token = "0x400269E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject go;

		[Token(Token = "0x400269F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform t;

		[Token(Token = "0x40026A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public MeshRenderer mr;

		[Token(Token = "0x40026A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public MeshFilter mf;

		[Token(Token = "0x40026A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public GarbageCollectMesh garbageCollectMesh;

		[Token(Token = "0x6002768")]
		[Address(RVA = "0xE95E4C", Offset = "0xE95E4C", VA = "0xE95E4C")]
		public CachedComponents()
		{
		}
	}
	[Token(Token = "0x2000684")]
	public class Console : MonoBehaviour
	{
		[Token(Token = "0x2000685")]
		public class LogEntry
		{
			[Token(Token = "0x40026B8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string logString;

			[Token(Token = "0x40026B9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public string stackTrace;

			[Token(Token = "0x40026BA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public LogType logType;

			[Token(Token = "0x40026BB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public int commandType;

			[Token(Token = "0x40026BC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public bool unityLog;

			[Token(Token = "0x40026BD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public float tStamp;

			[Token(Token = "0x40026BE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public GameObject go;

			[Token(Token = "0x40026BF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public MeshCombiner meshCombiner;

			[Token(Token = "0x6002789")]
			[Address(RVA = "0xE9A9A8", Offset = "0xE9A9A8", VA = "0xE9A9A8")]
			public LogEntry(string logString, string stackTrace, LogType logType, bool unityLog = false, int commandType = 0, [Optional] GameObject go, [Optional] MeshCombiner meshCombiner)
			{
			}
		}

		[Token(Token = "0x40026A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static Console instance;

		[Token(Token = "0x40026A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public KeyCode consoleKey;

		[Token(Token = "0x40026A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public bool logActive;

		[Token(Token = "0x40026A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
		public bool showConsole;

		[Token(Token = "0x40026A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E")]
		public bool showOnError;

		[Token(Token = "0x40026A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F")]
		public bool combineAutomatic;

		[Token(Token = "0x40026A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private bool showLast;

		[Token(Token = "0x40026AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		private bool setFocus;

		[Token(Token = "0x40026AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private GameObject selectGO;

		[Token(Token = "0x40026AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public List<LogEntry> logs;

		[Token(Token = "0x40026AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Rect window;

		[Token(Token = "0x40026AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Rect inputRect;

		[Token(Token = "0x40026AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Rect logRect;

		[Token(Token = "0x40026B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Rect vScrollRect;

		[Token(Token = "0x40026B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private string inputText;

		[Token(Token = "0x40026B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private float scrollPos;

		[Token(Token = "0x40026B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private int lines;

		[Token(Token = "0x40026B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private bool showUnityLog;

		[Token(Token = "0x40026B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x89")]
		private bool showInputLog;

		[Token(Token = "0x40026B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private MeshCombiner[] meshCombiners;

		[Token(Token = "0x40026B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private MeshCombiner selectedMeshCombiner;

		[Token(Token = "0x6002769")]
		[Address(RVA = "0xE95E54", Offset = "0xE95E54", VA = "0xE95E54")]
		private void Awake()
		{
		}

		[Token(Token = "0x600276A")]
		[Address(RVA = "0xE95F6C", Offset = "0xE95F6C", VA = "0xE95F6C")]
		private void ReportStartup()
		{
		}

		[Token(Token = "0x600276B")]
		[Address(RVA = "0xE95EF4", Offset = "0xE95EF4", VA = "0xE95EF4")]
		private void FindMeshCombiners()
		{
		}

		[Token(Token = "0x600276C")]
		[Address(RVA = "0xE96120", Offset = "0xE96120", VA = "0xE96120")]
		private void ReportMeshCombiners(bool reportSelected = true)
		{
		}

		[Token(Token = "0x600276D")]
		[Address(RVA = "0xE96500", Offset = "0xE96500", VA = "0xE96500")]
		private void ReportMeshCombiner(MeshCombiner meshCombiner, bool foundText = false)
		{
		}

		[Token(Token = "0x600276E")]
		[Address(RVA = "0xE96228", Offset = "0xE96228", VA = "0xE96228")]
		public int SelectMeshCombiner(string name)
		{
			return default(int);
		}

		[Token(Token = "0x600276F")]
		[Address(RVA = "0xE968C8", Offset = "0xE968C8", VA = "0xE968C8")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6002770")]
		[Address(RVA = "0xE96948", Offset = "0xE96948", VA = "0xE96948")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6002771")]
		[Address(RVA = "0xE969C8", Offset = "0xE969C8", VA = "0xE969C8")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6002772")]
		[Address(RVA = "0xE93068", Offset = "0xE93068", VA = "0xE93068")]
		public static void Log(string logString, int commandType = 0, [Optional] GameObject go, [Optional] MeshCombiner meshCombiner)
		{
		}

		[Token(Token = "0x6002773")]
		[Address(RVA = "0xE96A1C", Offset = "0xE96A1C", VA = "0xE96A1C")]
		private void HandleLog(string logString, string stackTrace, LogType logType)
		{
		}

		[Token(Token = "0x6002774")]
		[Address(RVA = "0xE96B7C", Offset = "0xE96B7C", VA = "0xE96B7C")]
		private void Update()
		{
		}

		[Token(Token = "0x6002775")]
		[Address(RVA = "0xE96B64", Offset = "0xE96B64", VA = "0xE96B64")]
		private void SetConsoleActive(bool active)
		{
		}

		[Token(Token = "0x6002776")]
		[Address(RVA = "0xE96BB4", Offset = "0xE96BB4", VA = "0xE96BB4")]
		private void ExecuteCommand(string cmd)
		{
		}

		[Token(Token = "0x6002777")]
		[Address(RVA = "0xE98E14", Offset = "0xE98E14", VA = "0xE98E14")]
		private void DirSort()
		{
		}

		[Token(Token = "0x6002778")]
		[Address(RVA = "0xE98C6C", Offset = "0xE98C6C", VA = "0xE98C6C")]
		private void DirSort(string name)
		{
		}

		[Token(Token = "0x6002779")]
		[Address(RVA = "0xE98E6C", Offset = "0xE98E6C", VA = "0xE98E6C")]
		public void SortLog(GameObject[] gos, bool showMeshInfo = false)
		{
		}

		[Token(Token = "0x600277A")]
		[Address(RVA = "0xE99590", Offset = "0xE99590", VA = "0xE99590")]
		private string GetMeshInfo(GameObject go, ref int meshCount)
		{
			return null;
		}

		[Token(Token = "0x600277B")]
		[Address(RVA = "0xE998F0", Offset = "0xE998F0", VA = "0xE998F0")]
		private void TimeStep(string cmd)
		{
		}

		[Token(Token = "0x600277C")]
		[Address(RVA = "0xE9991C", Offset = "0xE9991C", VA = "0xE9991C")]
		private void TimeScale(string cmd)
		{
		}

		[Token(Token = "0x600277D")]
		[Address(RVA = "0xE98604", Offset = "0xE98604", VA = "0xE98604")]
		private void Clear(LogEntry log, string cmd)
		{
		}

		[Token(Token = "0x600277E")]
		[Address(RVA = "0xE98940", Offset = "0xE98940", VA = "0xE98940")]
		private void DirAll()
		{
		}

		[Token(Token = "0x600277F")]
		[Address(RVA = "0xE97A00", Offset = "0xE97A00", VA = "0xE97A00")]
		private void Dir()
		{
		}

		[Token(Token = "0x6002780")]
		[Address(RVA = "0xE97FC8", Offset = "0xE97FC8", VA = "0xE97FC8")]
		private void Components(LogEntry log)
		{
		}

		[Token(Token = "0x6002781")]
		[Address(RVA = "0xE99A9C", Offset = "0xE99A9C", VA = "0xE99A9C")]
		private void ShowPath(bool showLines = true)
		{
		}

		[Token(Token = "0x6002782")]
		[Address(RVA = "0xE99948", Offset = "0xE99948", VA = "0xE99948")]
		private string GetPath(GameObject go)
		{
			return null;
		}

		[Token(Token = "0x6002783")]
		[Address(RVA = "0xE98130", Offset = "0xE98130", VA = "0xE98130")]
		private void CD(LogEntry log, string name)
		{
		}

		[Token(Token = "0x6002784")]
		[Address(RVA = "0xE98364", Offset = "0xE98364", VA = "0xE98364")]
		public void SetActiveContains(string textContains, bool active)
		{
		}

		[Token(Token = "0x6002785")]
		[Address(RVA = "0xE987F8", Offset = "0xE987F8", VA = "0xE987F8")]
		public void DirContains(string textContains)
		{
		}

		[Token(Token = "0x6002786")]
		[Address(RVA = "0xE99B68", Offset = "0xE99B68", VA = "0xE99B68")]
		private void OnGUI()
		{
		}

		[Token(Token = "0x6002787")]
		[Address(RVA = "0xE9A810", Offset = "0xE9A810", VA = "0xE9A810")]
		private void AnimateColor(Color col, LogEntry log, float multi)
		{
		}

		[Token(Token = "0x6002788")]
		[Address(RVA = "0xE9A8FC", Offset = "0xE9A8FC", VA = "0xE9A8FC")]
		public Console()
		{
		}
	}
	[Token(Token = "0x2000686")]
	public class DirectDraw : MonoBehaviour
	{
		[Token(Token = "0x40026C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private MeshRenderer[] mrs;

		[Token(Token = "0x40026C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Mesh[] meshes;

		[Token(Token = "0x40026C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Material[] mats;

		[Token(Token = "0x40026C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Vector3[] positions;

		[Token(Token = "0x40026C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Quaternion[] rotations;

		[Token(Token = "0x600278A")]
		[Address(RVA = "0xE9AA40", Offset = "0xE9AA40", VA = "0xE9AA40")]
		private void Awake()
		{
		}

		[Token(Token = "0x600278B")]
		[Address(RVA = "0xE9AD84", Offset = "0xE9AD84", VA = "0xE9AD84")]
		private void SetMeshRenderersEnabled(bool enabled)
		{
		}

		[Token(Token = "0x600278C")]
		[Address(RVA = "0xE9ADEC", Offset = "0xE9ADEC", VA = "0xE9ADEC")]
		private void Update()
		{
		}

		[Token(Token = "0x600278D")]
		[Address(RVA = "0xE9AF4C", Offset = "0xE9AF4C", VA = "0xE9AF4C")]
		public DirectDraw()
		{
		}
	}
	[Token(Token = "0x2000687")]
	public class DisabledLodMeshRender : MonoBehaviour
	{
		[Token(Token = "0x40026C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[HideInInspector]
		public MeshCombiner meshCombiner;

		[Token(Token = "0x40026C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CachedLodGameObject cachedLodGO;

		[Token(Token = "0x600278E")]
		[Address(RVA = "0xE9AF54", Offset = "0xE9AF54", VA = "0xE9AF54")]
		public DisabledLodMeshRender()
		{
		}
	}
	[Token(Token = "0x2000688")]
	public class DisabledMeshRenderer : MonoBehaviour
	{
		[Token(Token = "0x40026C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[HideInInspector]
		public MeshCombiner meshCombiner;

		[Token(Token = "0x40026C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CachedGameObject cachedGO;

		[Token(Token = "0x600278F")]
		[Address(RVA = "0xE9AF5C", Offset = "0xE9AF5C", VA = "0xE9AF5C")]
		public DisabledMeshRenderer()
		{
		}
	}
	[Token(Token = "0x2000689")]
	public class FastListBase
	{
		[Token(Token = "0x40026C9")]
		protected const int defaultCapacity = 4;

		[Token(Token = "0x40026CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int Count;

		[Token(Token = "0x40026CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		protected int _count;

		[Token(Token = "0x40026CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected int arraySize;

		[Token(Token = "0x6002790")]
		[Address(RVA = "0xE9AF64", Offset = "0xE9AF64", VA = "0xE9AF64")]
		public FastListBase()
		{
		}
	}
	[Token(Token = "0x200068A")]
	public class FastListBase<T> : FastListBase
	{
		[Token(Token = "0x40026CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public T[] items;

		[Token(Token = "0x6002791")]
		protected void DoubleCapacity()
		{
		}

		[Token(Token = "0x6002792")]
		public FastListBase()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200068B")]
	public class FastList<T> : FastListBase<T>
	{
		[Token(Token = "0x6002793")]
		public FastList()
		{
		}

		[Token(Token = "0x6002794")]
		public FastList(bool reserve, int reserved)
		{
		}

		[Token(Token = "0x6002795")]
		public FastList(int capacity)
		{
		}

		[Token(Token = "0x6002796")]
		public FastList(FastList<T> list)
		{
		}

		[Token(Token = "0x6002797")]
		public FastList(T[] items)
		{
		}

		[Token(Token = "0x6002798")]
		protected void SetCapacity(int capacity)
		{
		}

		[Token(Token = "0x6002799")]
		public void SetCount(int count)
		{
		}

		[Token(Token = "0x600279A")]
		public void EnsureCount(int count)
		{
		}

		[Token(Token = "0x600279B")]
		public virtual void SetArray(T[] items)
		{
		}

		[Token(Token = "0x600279C")]
		public int AddUnique(T item)
		{
			return default(int);
		}

		[Token(Token = "0x600279D")]
		public bool Contains(T item)
		{
			return default(bool);
		}

		[Token(Token = "0x600279E")]
		public int IndexOf(T item)
		{
			return default(int);
		}

		[Token(Token = "0x600279F")]
		public T GetIndex(T item)
		{
			return (T)null;
		}

		[Token(Token = "0x60027A0")]
		public virtual int Add(T item)
		{
			return default(int);
		}

		[Token(Token = "0x60027A1")]
		public virtual int AddThreadSafe(T item)
		{
			return default(int);
		}

		[Token(Token = "0x60027A2")]
		public virtual void Add(T item, T item2)
		{
		}

		[Token(Token = "0x60027A3")]
		public virtual void Add(T item, T item2, T item3)
		{
		}

		[Token(Token = "0x60027A4")]
		public virtual void Add(T item, T item2, T item3, T item4)
		{
		}

		[Token(Token = "0x60027A5")]
		public virtual void Add(T item, T item2, T item3, T item4, T item5)
		{
		}

		[Token(Token = "0x60027A6")]
		public virtual void Insert(int index, T item)
		{
		}

		[Token(Token = "0x60027A7")]
		public virtual void AddRange(T[] arrayItems)
		{
		}

		[Token(Token = "0x60027A8")]
		public virtual void AddRange(T[] arrayItems, int startIndex, int length)
		{
		}

		[Token(Token = "0x60027A9")]
		public virtual void AddRange(FastList<T> list)
		{
		}

		[Token(Token = "0x60027AA")]
		public virtual int GrabListThreadSafe(FastList<T> threadList, bool fastClear = false)
		{
			return default(int);
		}

		[Token(Token = "0x60027AB")]
		public virtual void ChangeRange(int startIndex, T[] arrayItems)
		{
		}

		[Token(Token = "0x60027AC")]
		public virtual bool Remove(T item, bool weakReference = false)
		{
			return default(bool);
		}

		[Token(Token = "0x60027AD")]
		public virtual void RemoveAt(int index)
		{
		}

		[Token(Token = "0x60027AE")]
		public virtual void RemoveLast()
		{
		}

		[Token(Token = "0x60027AF")]
		public virtual void RemoveRange(int index, int length)
		{
		}

		[Token(Token = "0x60027B0")]
		public virtual T Dequeue()
		{
			return (T)null;
		}

		[Token(Token = "0x60027B1")]
		public virtual T Dequeue(int index)
		{
			return (T)null;
		}

		[Token(Token = "0x60027B2")]
		public virtual void Clear()
		{
		}

		[Token(Token = "0x60027B3")]
		public virtual void ClearThreadSafe()
		{
		}

		[Token(Token = "0x60027B4")]
		public virtual void ClearRange(int startIndex)
		{
		}

		[Token(Token = "0x60027B5")]
		public virtual void FastClear()
		{
		}

		[Token(Token = "0x60027B6")]
		public virtual void FastClear(int newCount)
		{
		}

		[Token(Token = "0x60027B7")]
		public virtual T[] ToArray()
		{
			return null;
		}
	}
	[Serializable]
	[Token(Token = "0x200068C")]
	public class SortedFastList<T> : FastList<T>
	{
		[Token(Token = "0x60027B8")]
		public new void RemoveAt(int index)
		{
		}

		[Token(Token = "0x60027B9")]
		public new void RemoveRange(int index, int endIndex)
		{
		}

		[Token(Token = "0x60027BA")]
		public SortedFastList()
		{
		}
	}
	[Token(Token = "0x200068D")]
	[ExecuteInEditMode]
	public class GarbageCollectMesh : MonoBehaviour
	{
		[Token(Token = "0x40026CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Mesh mesh;

		[Token(Token = "0x60027BB")]
		[Address(RVA = "0xE9AF6C", Offset = "0xE9AF6C", VA = "0xE9AF6C")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60027BC")]
		[Address(RVA = "0xE9AFFC", Offset = "0xE9AFFC", VA = "0xE9AFFC")]
		public GarbageCollectMesh()
		{
		}
	}
	[Token(Token = "0x200068E")]
	public struct AABB3
	{
		[Token(Token = "0x40026CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Vector3 min;

		[Token(Token = "0x40026D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public Vector3 max;

		[Token(Token = "0x60027BD")]
		[Address(RVA = "0xE9B004", Offset = "0xE9B004", VA = "0xE9B004")]
		public AABB3(Vector3 min, Vector3 max)
		{
		}
	}
	[Token(Token = "0x200068F")]
	public struct Triangle3
	{
		[Token(Token = "0x40026D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Vector3 a;

		[Token(Token = "0x40026D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public Vector3 b;

		[Token(Token = "0x40026D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector3 c;

		[Token(Token = "0x40026D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public Vector3 dirAb;

		[Token(Token = "0x40026D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Vector3 dirAc;

		[Token(Token = "0x40026D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public Vector3 dirBc;

		[Token(Token = "0x40026D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Vector3 h1;

		[Token(Token = "0x40026D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public float ab;

		[Token(Token = "0x40026D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public float ac;

		[Token(Token = "0x40026DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public float bc;

		[Token(Token = "0x40026DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public float area;

		[Token(Token = "0x40026DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public float h;

		[Token(Token = "0x40026DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public float ah;

		[Token(Token = "0x40026DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public float hb;

		[Token(Token = "0x60027BE")]
		[Address(RVA = "0xE9B014", Offset = "0xE9B014", VA = "0xE9B014")]
		public void Calc()
		{
		}
	}
	[Token(Token = "0x2000690")]
	public struct Sphere3
	{
		[Token(Token = "0x40026DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Vector3 center;

		[Token(Token = "0x40026E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float radius;

		[Token(Token = "0x60027BF")]
		[Address(RVA = "0xE9B43C", Offset = "0xE9B43C", VA = "0xE9B43C")]
		public Sphere3(Vector3 center, float radius)
		{
		}
	}
	[Token(Token = "0x2000691")]
	public struct Int2
	{
		[Token(Token = "0x40026E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int x;

		[Token(Token = "0x40026E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public int y;

		[Token(Token = "0x60027C0")]
		[Address(RVA = "0xE9B448", Offset = "0xE9B448", VA = "0xE9B448")]
		public Int2(int x, int y)
		{
		}
	}
	[Token(Token = "0x2000692")]
	public struct Int3
	{
		[Token(Token = "0x40026E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int x;

		[Token(Token = "0x40026E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public int y;

		[Token(Token = "0x40026E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public int z;

		[Token(Token = "0x60027C1")]
		[Address(RVA = "0xE9B450", Offset = "0xE9B450", VA = "0xE9B450")]
		public Int3(int x, int y, int z)
		{
		}

		[Token(Token = "0x60027C2")]
		[Address(RVA = "0xE9B45C", Offset = "0xE9B45C", VA = "0xE9B45C")]
		public static Int3 operator +(Int3 a, Int3 b)
		{
			return default(Int3);
		}
	}
	[Token(Token = "0x2000693")]
	public static class Mathw
	{
		[Token(Token = "0x40026E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly int[] bits;

		[Token(Token = "0x60027C3")]
		[Address(RVA = "0xE9B478", Offset = "0xE9B478", VA = "0xE9B478")]
		public static Vector3 Clamp(Vector3 v, float min, float max)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60027C4")]
		[Address(RVA = "0xE9B4AC", Offset = "0xE9B4AC", VA = "0xE9B4AC")]
		public static Vector3 FloatToVector3(float v)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60027C5")]
		[Address(RVA = "0xE9B4B8", Offset = "0xE9B4B8", VA = "0xE9B4B8")]
		public static float SinDeg(float angle)
		{
			return default(float);
		}

		[Token(Token = "0x60027C6")]
		[Address(RVA = "0xE9B4C8", Offset = "0xE9B4C8", VA = "0xE9B4C8")]
		public static float GetMax(Vector3 v)
		{
			return default(float);
		}

		[Token(Token = "0x60027C7")]
		[Address(RVA = "0xE9B4DC", Offset = "0xE9B4DC", VA = "0xE9B4DC")]
		public static Vector3 SetMin(Vector3 v, float min)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60027C8")]
		[Address(RVA = "0xE9B4F8", Offset = "0xE9B4F8", VA = "0xE9B4F8")]
		public static Vector3 Snap(Vector3 v, float snapSize)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60027C9")]
		[Address(RVA = "0xE9B520", Offset = "0xE9B520", VA = "0xE9B520")]
		public static Vector3 Abs(Vector3 v)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60027CA")]
		[Address(RVA = "0xE9B548", Offset = "0xE9B548", VA = "0xE9B548")]
		public static bool IntersectAABB3Sphere3(AABB3 box, Sphere3 sphere)
		{
			return default(bool);
		}

		[Token(Token = "0x60027CB")]
		[Address(RVA = "0xE9B5DC", Offset = "0xE9B5DC", VA = "0xE9B5DC")]
		public static bool IntersectAABB3Triangle3(Vector3 boxCenter, Vector3 boxHalfSize, Triangle3 triangle)
		{
			return default(bool);
		}

		[Token(Token = "0x60027CC")]
		[Address(RVA = "0xE9C244", Offset = "0xE9C244", VA = "0xE9C244")]
		private static void GetMinMax(float x0, float x1, float x2, out float min, out float max)
		{
		}

		[Token(Token = "0x60027CD")]
		[Address(RVA = "0xE9C294", Offset = "0xE9C294", VA = "0xE9C294")]
		private static bool PlaneBoxOverlap(Vector3 normal, Vector3 vert, Vector3 maxBox)
		{
			return default(bool);
		}

		[Token(Token = "0x60027CE")]
		[Address(RVA = "0xE9BF8C", Offset = "0xE9BF8C", VA = "0xE9BF8C")]
		private static float Abs(float v)
		{
			return default(float);
		}

		[Token(Token = "0x60027CF")]
		[Address(RVA = "0xE9BF9C", Offset = "0xE9BF9C", VA = "0xE9BF9C")]
		private static bool AxisTest_X01(Vector3 v0, Vector3 v2, Vector3 boxHalfSize, float a, float b, float fa, float fb, out float min, out float max)
		{
			return default(bool);
		}

		[Token(Token = "0x60027D0")]
		[Address(RVA = "0xE9C160", Offset = "0xE9C160", VA = "0xE9C160")]
		private static bool AxisTest_X2(Vector3 v0, Vector3 v1, Vector3 boxHalfSize, float a, float b, float fa, float fb, out float min, out float max)
		{
			return default(bool);
		}

		[Token(Token = "0x60027D1")]
		[Address(RVA = "0xE9C00C", Offset = "0xE9C00C", VA = "0xE9C00C")]
		private static bool AxisTest_Y02(Vector3 v0, Vector3 v2, Vector3 boxHalfSize, float a, float b, float fa, float fb, out float min, out float max)
		{
			return default(bool);
		}

		[Token(Token = "0x60027D2")]
		[Address(RVA = "0xE9C1D0", Offset = "0xE9C1D0", VA = "0xE9C1D0")]
		private static bool AxisTest_Y1(Vector3 v0, Vector3 v1, Vector3 boxHalfSize, float a, float b, float fa, float fb, out float min, out float max)
		{
			return default(bool);
		}

		[Token(Token = "0x60027D3")]
		[Address(RVA = "0xE9C080", Offset = "0xE9C080", VA = "0xE9C080")]
		private static bool AxisTest_Z12(Vector3 v1, Vector3 v2, Vector3 boxHalfSize, float a, float b, float fa, float fb, out float min, out float max)
		{
			return default(bool);
		}

		[Token(Token = "0x60027D4")]
		[Address(RVA = "0xE9C0F0", Offset = "0xE9C0F0", VA = "0xE9C0F0")]
		private static bool AxisTest_Z0(Vector3 v0, Vector3 v1, Vector3 boxHalfSize, float a, float b, float fa, float fb, out float min, out float max)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000694")]
	public class MCS_CameraController : MonoBehaviour
	{
		[Token(Token = "0x40026E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float speed;

		[Token(Token = "0x40026E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float mouseMoveSpeed;

		[Token(Token = "0x40026E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float shiftMulti;

		[Token(Token = "0x40026EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float controlMulti;

		[Token(Token = "0x40026EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Vector3 oldMousePosition;

		[Token(Token = "0x40026EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private GameObject cameraMountGO;

		[Token(Token = "0x40026ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private GameObject cameraChildGO;

		[Token(Token = "0x40026EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Transform cameraMountT;

		[Token(Token = "0x40026EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Transform cameraChildT;

		[Token(Token = "0x40026F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Transform t;

		[Token(Token = "0x60027D6")]
		[Address(RVA = "0xE9C440", Offset = "0xE9C440", VA = "0xE9C440")]
		private void Awake()
		{
		}

		[Token(Token = "0x60027D7")]
		[Address(RVA = "0xE9C46C", Offset = "0xE9C46C", VA = "0xE9C46C")]
		private void CreateParents()
		{
		}

		[Token(Token = "0x60027D8")]
		[Address(RVA = "0xE9C5E8", Offset = "0xE9C5E8", VA = "0xE9C5E8")]
		private void Update()
		{
		}

		[Token(Token = "0x60027D9")]
		[Address(RVA = "0xE9C8B4", Offset = "0xE9C8B4", VA = "0xE9C8B4")]
		public MCS_CameraController()
		{
		}
	}
	[Token(Token = "0x2000695")]
	public class MCS_FPSCounter : MonoBehaviour
	{
		[Token(Token = "0x2000696")]
		public enum GUIType
		{
			[Token(Token = "0x400272C")]
			DisplayRunning,
			[Token(Token = "0x400272D")]
			DisplayResults,
			[Token(Token = "0x400272E")]
			DisplayNothing
		}

		[Token(Token = "0x40026F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static MCS_FPSCounter instance;

		[Token(Token = "0x40026F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Header("___ Settings ___________________________________________________________________________________________________________")]
		public float interval;

		[Token(Token = "0x40026F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public GUIType displayType;

		[Token(Token = "0x40026F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Vector2 gradientRange;

		[Token(Token = "0x40026F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Font fontRun;

		[Token(Token = "0x40026F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Font fontResult;

		[Token(Token = "0x40026F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Texture logo;

		[Token(Token = "0x40026F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public bool showLogoOnResultsScreen;

		[Token(Token = "0x40026F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public KeyCode showHideButton;

		[Token(Token = "0x40026FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public bool acceptInput;

		[Token(Token = "0x40026FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
		public bool reset;

		[Token(Token = "0x40026FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[Header("___ Results ___________________________________________________________________________________________________________")]
		public float currentFPS;

		[Token(Token = "0x40026FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public float averageFPS;

		[Token(Token = "0x40026FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public float minimumFPS;

		[Token(Token = "0x40026FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public float maximumFPS;

		[Token(Token = "0x4002700")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private int totalFrameCount;

		[Token(Token = "0x4002701")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private int tempFrameCount;

		[Token(Token = "0x4002702")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private double tStamp;

		[Token(Token = "0x4002703")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private double tStampTemp;

		[Token(Token = "0x4002704")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private string currentFPSText;

		[Token(Token = "0x4002705")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private string avgFPSText;

		[Token(Token = "0x4002706")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private string minFPSText;

		[Token(Token = "0x4002707")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private string maxFSPText;

		[Token(Token = "0x4002708")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private GUIStyle bigStyle;

		[Token(Token = "0x4002709")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private GUIStyle bigStyleShadow;

		[Token(Token = "0x400270A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private GUIStyle smallStyle;

		[Token(Token = "0x400270B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private GUIStyle smallStyleShadow;

		[Token(Token = "0x400270C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private GUIStyle smallStyleLabel;

		[Token(Token = "0x400270D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private GUIStyle headerStyle;

		[Token(Token = "0x400270E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private Rect[] rectsRun;

		[Token(Token = "0x400270F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private Rect[] rectsResult;

		[Token(Token = "0x4002710")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private Gradient gradient;

		[Token(Token = "0x4002711")]
		private const float line1 = 4f;

		[Token(Token = "0x4002712")]
		private const float line2 = 30f;

		[Token(Token = "0x4002713")]
		private const float line3 = 44f;

		[Token(Token = "0x4002714")]
		private const float line4 = 58f;

		[Token(Token = "0x4002715")]
		private const float labelWidth = 26f;

		[Token(Token = "0x4002716")]
		private const float paddingH = 8f;

		[Token(Token = "0x4002717")]
		private const float lineHeight = 22f;

		[Token(Token = "0x4002718")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private float columnRight;

		[Token(Token = "0x4002719")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		private float columnLeft;

		[Token(Token = "0x400271A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private Color fontShadow;

		[Token(Token = "0x400271B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private Color label;

		[Token(Token = "0x400271C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		private Color colorCurrent;

		[Token(Token = "0x400271D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		private Color colorAvg;

		[Token(Token = "0x400271E")]
		private const string resultHeader = "BENCHMARK RESULTS";

		[Token(Token = "0x400271F")]
		private const string resultLabelAvg = "AVERAGE FPS:";

		[Token(Token = "0x4002720")]
		private const string resultLabelMin = "MINIMUM FPS:";

		[Token(Token = "0x4002721")]
		private const string resultLabelMax = "MAXIMUM FPS:";

		[Token(Token = "0x4002722")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		private GUIContent resultHeaderGUI;

		[Token(Token = "0x4002723")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		private GUIContent reslutLabelAvgGUI;

		[Token(Token = "0x4002724")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		private GUIContent avgTextGUI;

		[Token(Token = "0x4002725")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		private GUIContent instructions;

		[Token(Token = "0x4002726")]
		private const string runLabelAvg = "Avg:";

		[Token(Token = "0x4002727")]
		private const string runLabelMin = "Min:";

		[Token(Token = "0x4002728")]
		private const string runLabelMax = "Max:";

		[Token(Token = "0x4002729")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		private Vector2 screenSize;

		[Token(Token = "0x400272A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		private GUIType oldDisplayType;

		[Token(Token = "0x60027DA")]
		[Address(RVA = "0xE9C8C8", Offset = "0xE9C8C8", VA = "0xE9C8C8")]
		private void Awake()
		{
		}

		[Token(Token = "0x60027DB")]
		[Address(RVA = "0xE9CA74", Offset = "0xE9CA74", VA = "0xE9CA74")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60027DC")]
		[Address(RVA = "0xE9CB28", Offset = "0xE9CB28", VA = "0xE9CB28")]
		private void OnGUI()
		{
		}

		[Token(Token = "0x60027DD")]
		[Address(RVA = "0xE9D160", Offset = "0xE9D160", VA = "0xE9D160")]
		private void SetRectsRun()
		{
		}

		[Token(Token = "0x60027DE")]
		[Address(RVA = "0xE9D4C0", Offset = "0xE9D4C0", VA = "0xE9D4C0")]
		private void SetRectsResult()
		{
		}

		[Token(Token = "0x60027DF")]
		[Address(RVA = "0xE9D9FC", Offset = "0xE9D9FC", VA = "0xE9D9FC")]
		private void Start()
		{
		}

		[Token(Token = "0x60027E0")]
		[Address(RVA = "0xE9DCAC", Offset = "0xE9DCAC", VA = "0xE9DCAC")]
		private void Update()
		{
		}

		[Token(Token = "0x60027E1")]
		[Address(RVA = "0xE9E06C", Offset = "0xE9E06C", VA = "0xE9E06C")]
		public void StartBenchmark()
		{
		}

		[Token(Token = "0x60027E2")]
		[Address(RVA = "0xE9E08C", Offset = "0xE9E08C", VA = "0xE9E08C")]
		public void StopBenchmark()
		{
		}

		[Token(Token = "0x60027E3")]
		[Address(RVA = "0xE9DE4C", Offset = "0xE9DE4C", VA = "0xE9DE4C")]
		private void GetFPS()
		{
		}

		[Token(Token = "0x60027E4")]
		[Address(RVA = "0xE9DE0C", Offset = "0xE9DE0C", VA = "0xE9DE0C")]
		public void Reset()
		{
		}

		[Token(Token = "0x60027E5")]
		[Address(RVA = "0xE9DDC8", Offset = "0xE9DDC8", VA = "0xE9DDC8")]
		private Color EvaluateGradient(float f)
		{
			return default(Color);
		}

		[Token(Token = "0x60027E6")]
		[Address(RVA = "0xE9E0F0", Offset = "0xE9E0F0", VA = "0xE9E0F0")]
		public MCS_FPSCounter()
		{
		}
	}
	[Token(Token = "0x2000697")]
	public static class Methods
	{
		[Token(Token = "0x60027E7")]
		[Address(RVA = "0xE9E38C", Offset = "0xE9E38C", VA = "0xE9E38C")]
		public static void SetTag(GameObject go, string tag)
		{
		}

		[Token(Token = "0x60027E8")]
		[Address(RVA = "0xE9E430", Offset = "0xE9E430", VA = "0xE9E430")]
		public static void SetTagWhenCollider(GameObject go, string tag)
		{
		}

		[Token(Token = "0x60027E9")]
		[Address(RVA = "0xE9E554", Offset = "0xE9E554", VA = "0xE9E554")]
		public static void SetTagAndLayer(GameObject go, string tag, int layer)
		{
		}

		[Token(Token = "0x60027EA")]
		[Address(RVA = "0xE9E630", Offset = "0xE9E630", VA = "0xE9E630")]
		public static void SetLayer(GameObject go, int layer)
		{
		}

		[Token(Token = "0x60027EB")]
		[Address(RVA = "0xE9E6F0", Offset = "0xE9E6F0", VA = "0xE9E6F0")]
		public static bool LayerMaskContainsLayer(int layerMask, int layer)
		{
			return default(bool);
		}

		[Token(Token = "0x60027EC")]
		[Address(RVA = "0xE9E704", Offset = "0xE9E704", VA = "0xE9E704")]
		public static int GetFirstLayerInLayerMask(int layerMask)
		{
			return default(int);
		}

		[Token(Token = "0x60027ED")]
		[Address(RVA = "0xE9E7A0", Offset = "0xE9E7A0", VA = "0xE9E7A0")]
		public static bool Contains(string compare, string name)
		{
			return default(bool);
		}

		[Token(Token = "0x60027EE")]
		public static T[] Search<T>([Optional] GameObject parentGO)
		{
			return null;
		}

		[Token(Token = "0x60027EF")]
		[Address(RVA = "0xE9E9E0", Offset = "0xE9E9E0", VA = "0xE9E9E0")]
		public static FastList<GameObject> GetAllRootGameObjects()
		{
			return null;
		}

		[Token(Token = "0x60027F0")]
		public static T[] SearchParent<T>(GameObject parentGO, bool searchInActiveGameObjects) where T : Component
		{
			return null;
		}

		[Token(Token = "0x60027F1")]
		public static T[] SearchScene<T>(Scene scene, bool searchInActiveGameObjects) where T : Component
		{
			return null;
		}

		[Token(Token = "0x60027F2")]
		public static FastList<T> SearchAllScenes<T>(bool searchInActiveGameObjects) where T : Component
		{
			return null;
		}

		[Token(Token = "0x60027F3")]
		public static T Find<T>(GameObject parentGO, string name) where T : Component
		{
			return null;
		}

		[Token(Token = "0x60027F4")]
		[Address(RVA = "0xE9EADC", Offset = "0xE9EADC", VA = "0xE9EADC")]
		public static void SetCollidersActive(Collider[] colliders, bool active, string[] nameList)
		{
		}

		[Token(Token = "0x60027F5")]
		[Address(RVA = "0xE9EBC4", Offset = "0xE9EBC4", VA = "0xE9EBC4")]
		public static void SelectChildrenWithMeshRenderer(Transform t)
		{
		}

		[Token(Token = "0x60027F6")]
		[Address(RVA = "0xE9EBC8", Offset = "0xE9EBC8", VA = "0xE9EBC8")]
		public static void DestroyChildren(Transform t)
		{
		}

		[Token(Token = "0x60027F7")]
		[Address(RVA = "0xE9EC8C", Offset = "0xE9EC8C", VA = "0xE9EC8C")]
		public static void Destroy(GameObject go)
		{
		}

		[Token(Token = "0x60027F8")]
		[Address(RVA = "0xE9ED14", Offset = "0xE9ED14", VA = "0xE9ED14")]
		public static void SetChildrenActive(Transform t, bool active)
		{
		}

		[Token(Token = "0x60027F9")]
		[Address(RVA = "0xE9ED94", Offset = "0xE9ED94", VA = "0xE9ED94")]
		public static void SnapBoundsAndPreserveArea(ref Bounds bounds, float snapSize, Vector3 offset)
		{
		}

		[Token(Token = "0x60027FA")]
		public static void ListRemoveAt<T>(List<T> list, int index)
		{
		}

		[Token(Token = "0x60027FB")]
		[Address(RVA = "0xE9EEE8", Offset = "0xE9EEE8", VA = "0xE9EEE8")]
		public static void CopyComponent(Component component, GameObject target)
		{
		}
	}
	[Token(Token = "0x2000698")]
	public class ReadMe : MonoBehaviour
	{
		[Token(Token = "0x400272F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool buttonEdit;

		[Token(Token = "0x4002730")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string readme;

		[Token(Token = "0x60027FC")]
		[Address(RVA = "0xE9EFE8", Offset = "0xE9EFE8", VA = "0xE9EFE8")]
		public ReadMe()
		{
		}
	}
	[Token(Token = "0x2000699")]
	public static class TriangleAAB3
	{
	}
	[Token(Token = "0x200069A")]
	public class BaseOctree
	{
		[Token(Token = "0x200069B")]
		public class Cell
		{
			[Token(Token = "0x4002731")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Cell mainParent;

			[Token(Token = "0x4002732")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Cell parent;

			[Token(Token = "0x4002733")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public bool[] cellsUsed;

			[Token(Token = "0x4002734")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Bounds bounds;

			[Token(Token = "0x4002735")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public int cellIndex;

			[Token(Token = "0x4002736")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			public int cellCount;

			[Token(Token = "0x4002737")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public int level;

			[Token(Token = "0x4002738")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
			public int maxLevels;

			[Token(Token = "0x60027FE")]
			[Address(RVA = "0xE9EFF8", Offset = "0xE9EFF8", VA = "0xE9EFF8")]
			public Cell()
			{
			}

			[Token(Token = "0x60027FF")]
			[Address(RVA = "0xE9F000", Offset = "0xE9F000", VA = "0xE9F000")]
			public Cell(Vector3 position, Vector3 size, int maxLevels)
			{
			}

			[Token(Token = "0x6002800")]
			[Address(RVA = "0xE9F09C", Offset = "0xE9F09C", VA = "0xE9F09C")]
			public Cell(Cell parent, int cellIndex, Bounds bounds)
			{
			}

			[Token(Token = "0x6002801")]
			[Address(RVA = "0xE9F120", Offset = "0xE9F120", VA = "0xE9F120")]
			public void SetCell(Cell parent, int cellIndex, Bounds bounds)
			{
			}

			[Token(Token = "0x6002802")]
			protected int AddCell<T, U>(ref T[] cells, Vector3 position, out bool maxCellCreated) where T : Cell, new() where U : Cell, new()
			{
				return default(int);
			}

			[Token(Token = "0x6002803")]
			protected void AddCell<T, U>(ref T[] cells, int index, int x, int y, int z, out bool maxCellCreated) where T : Cell, new() where U : Cell, new()
			{
			}

			[Token(Token = "0x6002804")]
			[Address(RVA = "0xE9F19C", Offset = "0xE9F19C", VA = "0xE9F19C")]
			public bool InsideBounds(Vector3 position)
			{
				return default(bool);
			}

			[Token(Token = "0x6002805")]
			[Address(RVA = "0xE9F24C", Offset = "0xE9F24C", VA = "0xE9F24C")]
			public void Reset(ref Cell[] cells)
			{
			}
		}

		[Token(Token = "0x60027FD")]
		[Address(RVA = "0xE9EFF0", Offset = "0xE9EFF0", VA = "0xE9EFF0")]
		public BaseOctree()
		{
		}
	}
	[Token(Token = "0x200069C")]
	public class ObjectOctree
	{
		[Token(Token = "0x200069D")]
		public class LODParent
		{
			[Token(Token = "0x4002739")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public GameObject cellGO;

			[Token(Token = "0x400273A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Transform cellT;

			[Token(Token = "0x400273B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public LODGroup lodGroup;

			[Token(Token = "0x400273C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public LODLevel[] lodLevels;

			[Token(Token = "0x400273D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public bool hasChanged;

			[Token(Token = "0x400273E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			public int jobsPending;

			[Token(Token = "0x6002807")]
			[Address(RVA = "0xE9F280", Offset = "0xE9F280", VA = "0xE9F280")]
			public LODParent(int lodCount)
			{
			}

			[Token(Token = "0x6002808")]
			[Address(RVA = "0xE9F470", Offset = "0xE9F470", VA = "0xE9F470")]
			public void AssignLODGroup(MeshCombiner meshCombiner)
			{
			}

			[Token(Token = "0x6002809")]
			[Address(RVA = "0xE9F620", Offset = "0xE9F620", VA = "0xE9F620")]
			public void ApplyChanges(MeshCombiner meshCombiner)
			{
			}
		}

		[Token(Token = "0x200069E")]
		public class LODLevel
		{
			[Token(Token = "0x400273F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public List<CachedGameObject> cachedGOs;

			[Token(Token = "0x4002740")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public List<MeshObjectsHolder> meshObjectsHolders;

			[Token(Token = "0x4002741")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public List<MeshObjectsHolder> changedMeshObjectsHolders;

			[Token(Token = "0x4002742")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public List<MeshRenderer> newMeshRenderers;

			[Token(Token = "0x4002743")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public int vertCount;

			[Token(Token = "0x4002744")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			public int objectCount;

			[Token(Token = "0x600280A")]
			[Address(RVA = "0xE9F740", Offset = "0xE9F740", VA = "0xE9F740")]
			public int GetSortMeshIndex(Material mat, bool shadowCastingModeTwoSided, int lightmapIndex)
			{
				return default(int);
			}

			[Token(Token = "0x600280B")]
			[Address(RVA = "0xE9F680", Offset = "0xE9F680", VA = "0xE9F680")]
			public void ApplyChanges(MeshCombiner meshCombiner)
			{
			}

			[Token(Token = "0x600280C")]
			[Address(RVA = "0xE9F398", Offset = "0xE9F398", VA = "0xE9F398")]
			public LODLevel()
			{
			}
		}

		[Token(Token = "0x200069F")]
		public class MaxCell : Cell
		{
			[Token(Token = "0x4002745")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static int maxCellCount;

			[Token(Token = "0x4002746")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			public LODParent[] lodParents;

			[Token(Token = "0x4002747")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			public List<LODParent> changedLodParents;

			[Token(Token = "0x4002748")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			public bool hasChanged;

			[Token(Token = "0x600280D")]
			[Address(RVA = "0xE9F87C", Offset = "0xE9F87C", VA = "0xE9F87C")]
			public void ApplyChanges(MeshCombiner meshCombiner)
			{
			}

			[Token(Token = "0x600280E")]
			[Address(RVA = "0xE9F948", Offset = "0xE9F948", VA = "0xE9F948")]
			public MaxCell()
			{
			}
		}

		[Token(Token = "0x20006A0")]
		public class Cell : BaseOctree.Cell
		{
			[Token(Token = "0x4002749")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			public Cell[] cells;

			[Token(Token = "0x600280F")]
			[Address(RVA = "0xE9F950", Offset = "0xE9F950", VA = "0xE9F950")]
			public Cell()
			{
			}

			[Token(Token = "0x6002810")]
			[Address(RVA = "0xE9F958", Offset = "0xE9F958", VA = "0xE9F958")]
			public Cell(Vector3 position, Vector3 size, int maxLevels)
			{
			}

			[Token(Token = "0x6002811")]
			[Address(RVA = "0xE9F9F4", Offset = "0xE9F9F4", VA = "0xE9F9F4")]
			public CachedGameObject AddObject(Vector3 position, MeshCombiner meshCombiner, CachedGameObject cachedGO, int lodParentIndex, int lodLevel, bool isChangeMode = false)
			{
				return null;
			}

			[Token(Token = "0x6002812")]
			[Address(RVA = "0xE9FA88", Offset = "0xE9FA88", VA = "0xE9FA88")]
			private void AddObjectInternal(MeshCombiner meshCombiner, CachedGameObject cachedGO, Vector3 position, int lodParentIndex, int lodLevel, bool isChangeMode)
			{
			}

			[Token(Token = "0x6002813")]
			[Address(RVA = "0xEA0390", Offset = "0xEA0390", VA = "0xEA0390")]
			public void SortObjects(MeshCombiner meshCombiner)
			{
			}

			[Token(Token = "0x6002814")]
			[Address(RVA = "0xE9FF44", Offset = "0xE9FF44", VA = "0xE9FF44")]
			public bool SortObject(MeshCombiner meshCombiner, LODLevel lod, CachedGameObject cachedGO, bool isChangeMode = false)
			{
				return default(bool);
			}

			[Token(Token = "0x6002815")]
			[Address(RVA = "0xEA07F0", Offset = "0xEA07F0", VA = "0xEA07F0")]
			public void CombineMeshes(MeshCombiner meshCombiner, int lodParentIndex)
			{
			}

			[Token(Token = "0x6002816")]
			[Address(RVA = "0xEA0CD0", Offset = "0xEA0CD0", VA = "0xEA0CD0")]
			public void Draw(MeshCombiner meshCombiner, bool onlyMaxLevel, bool drawLevel0)
			{
			}
		}

		[Token(Token = "0x6002806")]
		[Address(RVA = "0xE9F278", Offset = "0xE9F278", VA = "0xE9F278")]
		public ObjectOctree()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20006A1")]
	public class MeshObjectsHolder
	{
		[Token(Token = "0x400274A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Material mat;

		[Token(Token = "0x400274B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<MeshObject> meshObjects;

		[Token(Token = "0x400274C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ObjectOctree.LODParent lodParent;

		[Token(Token = "0x400274D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public List<CachedGameObject> newCachedGOs;

		[Token(Token = "0x400274E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public int lodLevel;

		[Token(Token = "0x400274F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public int lightmapIndex;

		[Token(Token = "0x4002750")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public bool shadowCastingModeTwoSided;

		[Token(Token = "0x4002751")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
		public bool hasChanged;

		[Token(Token = "0x6002817")]
		[Address(RVA = "0xEA05B4", Offset = "0xEA05B4", VA = "0xEA05B4")]
		public MeshObjectsHolder(CachedGameObject cachedGO, Material mat, int subMeshIndex, bool shadowCastingModeTwoSided, int lightmapIndex)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20006A2")]
	public class MeshObject
	{
		[Token(Token = "0x4002752")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public CachedGameObject cachedGO;

		[Token(Token = "0x4002753")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public MeshCache meshCache;

		[Token(Token = "0x4002754")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int subMeshIndex;

		[Token(Token = "0x4002755")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public Vector3 position;

		[Token(Token = "0x4002756")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Vector3 scale;

		[Token(Token = "0x4002757")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public Quaternion rotation;

		[Token(Token = "0x4002758")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public Vector4 lightmapScaleOffset;

		[Token(Token = "0x4002759")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public bool intersectsSurface;

		[Token(Token = "0x400275A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public int startNewTriangleIndex;

		[Token(Token = "0x400275B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public int newTriangleCount;

		[Token(Token = "0x400275C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public bool skip;

		[Token(Token = "0x6002818")]
		[Address(RVA = "0xEA0744", Offset = "0xEA0744", VA = "0xEA0744")]
		public MeshObject(CachedGameObject cachedGO, int subMeshIndex)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20006A3")]
	public class CachedGameObject
	{
		[Token(Token = "0x400275D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public GameObject go;

		[Token(Token = "0x400275E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform t;

		[Token(Token = "0x400275F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MeshRenderer mr;

		[Token(Token = "0x4002760")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public MeshFilter mf;

		[Token(Token = "0x4002761")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Mesh mesh;

		[Token(Token = "0x6002819")]
		[Address(RVA = "0xEA1080", Offset = "0xEA1080", VA = "0xEA1080")]
		public CachedGameObject(GameObject go, Transform t, MeshRenderer mr, MeshFilter mf, Mesh mesh)
		{
		}

		[Token(Token = "0x600281A")]
		[Address(RVA = "0xEA1110", Offset = "0xEA1110", VA = "0xEA1110")]
		public CachedGameObject(CachedComponents cachedComponent)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20006A4")]
	public class CachedLodGameObject : CachedGameObject
	{
		[Token(Token = "0x4002762")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Vector3 center;

		[Token(Token = "0x4002763")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public int lodCount;

		[Token(Token = "0x4002764")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public int lodLevel;

		[Token(Token = "0x600281B")]
		[Address(RVA = "0xEA1198", Offset = "0xEA1198", VA = "0xEA1198")]
		public CachedLodGameObject(CachedGameObject cachedGO, int lodCount, int lodLevel)
		{
		}
	}
}
namespace FSG.MeshAnimator
{
	[Token(Token = "0x20006A5")]
	public class AnimatorStateMachine : MonoBehaviour
	{
		[Token(Token = "0x4002765")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public MeshAnimator meshAnimator;

		[Token(Token = "0x4002766")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool crossFade;

		[Token(Token = "0x600281C")]
		[Address(RVA = "0xEA11D8", Offset = "0xEA11D8", VA = "0xEA11D8")]
		private void Start()
		{
		}

		[Token(Token = "0x600281D")]
		[Address(RVA = "0xEA12CC", Offset = "0xEA12CC", VA = "0xEA12CC")]
		private void OnAnimationFinished(string anim)
		{
		}

		[Token(Token = "0x600281E")]
		[Address(RVA = "0xEA14F4", Offset = "0xEA14F4", VA = "0xEA14F4")]
		public AnimatorStateMachine()
		{
		}
	}
	[Token(Token = "0x20006A6")]
	[ExecuteInEditMode]
	public class AttachObjectToFace : MonoBehaviour
	{
		[Token(Token = "0x4002767")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public MeshAnimator meshAnimator;

		[Token(Token = "0x4002768")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int faceIndex;

		[Token(Token = "0x4002769")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public Vector3 offset;

		[Token(Token = "0x400276A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Vector3 rotationOffset;

		[Token(Token = "0x400276B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public bool drawFaceDebugInfo;

		[Token(Token = "0x400276C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Color debugColor;

		[Token(Token = "0x400276D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Transform mTransform;

		[Token(Token = "0x400276E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Transform mMeshAnimatorTransform;

		[Token(Token = "0x400276F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private int[] triangles;

		[Token(Token = "0x4002770")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Vector3[] vertices;

		[Token(Token = "0x600281F")]
		[Address(RVA = "0xEA14FC", Offset = "0xEA14FC", VA = "0xEA14FC")]
		private void Awake()
		{
		}

		[Token(Token = "0x6002820")]
		[Address(RVA = "0xEA1638", Offset = "0xEA1638", VA = "0xEA1638")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6002821")]
		[Address(RVA = "0xEA1FE8", Offset = "0xEA1FE8", VA = "0xEA1FE8")]
		public AttachObjectToFace()
		{
		}
	}
	[Token(Token = "0x20006A7")]
	public class MecanimMeshAnimatorController : MonoBehaviour
	{
		[Token(Token = "0x4002771")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Animator animator;

		[Token(Token = "0x4002772")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MeshAnimator meshAnimator;

		[Token(Token = "0x4002773")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool crossFade;

		[Token(Token = "0x4002774")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Dictionary<int, string> animHashes;

		[Token(Token = "0x4002775")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private string cAnim;

		[Token(Token = "0x6002822")]
		[Address(RVA = "0xEA1FFC", Offset = "0xEA1FFC", VA = "0xEA1FFC", Slot = "4")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x6002823")]
		[Address(RVA = "0xEA21A8", Offset = "0xEA21A8", VA = "0xEA21A8", Slot = "5")]
		protected virtual void LateUpdate()
		{
		}

		[Token(Token = "0x6002824")]
		[Address(RVA = "0xEA2394", Offset = "0xEA2394", VA = "0xEA2394")]
		public MecanimMeshAnimatorController()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20006A8")]
	public class MeshAnimation : ScriptableObject
	{
		[Token(Token = "0x20006A9")]
		public enum RootMotionMode
		{
			[Token(Token = "0x400278E")]
			None,
			[Token(Token = "0x400278F")]
			Baked,
			[Token(Token = "0x4002790")]
			AppliedToTransform
		}

		[Token(Token = "0x20006AA")]
		private sealed class VertexEntry
		{
			[Token(Token = "0x4002791")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int _reserved;

			[Token(Token = "0x4002792")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public int[] TriangleIndex;

			[Token(Token = "0x4002793")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public int[] VertexIndex;

			[Token(Token = "0x4002794")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private int _count;

			[Token(Token = "0x1700028F")]
			public int Count
			{
				[Token(Token = "0x6002836")]
				[Address(RVA = "0xEA51B0", Offset = "0xEA51B0", VA = "0xEA51B0")]
				get
				{
					return default(int);
				}
			}

			[Token(Token = "0x6002837")]
			[Address(RVA = "0xEA51B8", Offset = "0xEA51B8", VA = "0xEA51B8")]
			public VertexEntry()
			{
			}

			[Token(Token = "0x6002838")]
			[Address(RVA = "0xEA4DD8", Offset = "0xEA4DD8", VA = "0xEA4DD8")]
			public void Add(int vertIndex, int triIndex)
			{
			}

			[Token(Token = "0x6002839")]
			[Address(RVA = "0xEA4D3C", Offset = "0xEA4D3C", VA = "0xEA4D3C")]
			public void PopulateArrays()
			{
			}

			[Token(Token = "0x600283A")]
			[Address(RVA = "0xEA4EB0", Offset = "0xEA4EB0", VA = "0xEA4EB0")]
			public void Clear()
			{
			}
		}

		[Token(Token = "0x4002776")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal static Dictionary<Mesh, Dictionary<MeshAnimation, Mesh[]>> generatedFrames;

		[Token(Token = "0x4002777")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string animationName;

		[Token(Token = "0x4002778")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool preGenerateFrames;

		[Token(Token = "0x4002779")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float playbackSpeed;

		[Token(Token = "0x400277A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int smoothNormalsAngle;

		[Token(Token = "0x400277B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public bool instantNormalCalculation;

		[Token(Token = "0x400277C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2D")]
		public bool recalculateNormalsOnRotation;

		[Token(Token = "0x400277D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public WrapMode wrapMode;

		[Token(Token = "0x400277E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[HideInInspector]
		public RootMotionMode rootMotionMode;

		[Token(Token = "0x400277F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[HideInInspector]
		public DeltaCompressedFrameData compressedFrameData;

		[Token(Token = "0x4002780")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[HideInInspector]
		public string[] exposedTransforms;

		[Token(Token = "0x4002781")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public MeshAnimationEvent[] events;

		[Token(Token = "0x4002782")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public float length;

		[Token(Token = "0x4002783")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[HideInInspector]
		public int frameSkip;

		[NonSerialized]
		[Token(Token = "0x4002784")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Mesh[] frames;

		[NonSerialized]
		[Token(Token = "0x4002785")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public int totalFrames;

		[NonSerialized]
		[Token(Token = "0x4002786")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private bool[] generatedMeshes;

		[NonSerialized]
		[Token(Token = "0x4002787")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private bool completelyGenerated;

		[NonSerialized]
		[Token(Token = "0x4002788")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private MeshFrameData[] decompressedFrameData;

		[NonSerialized]
		[Token(Token = "0x4002789")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Quaternion lastRotation;

		[Token(Token = "0x400278A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Queue<Action> mainThreadActions;

		[Token(Token = "0x400278B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Dictionary<Mesh, KeyValuePair<int[], Vector3[]>> meshInfoCache;

		[Token(Token = "0x400278C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static IEqualityComparer<Vector3> VectorComparer;

		[Token(Token = "0x1700028E")]
		[HideInInspector]
		public MeshFrameData[] frameData
		{
			[Token(Token = "0x6002825")]
			[Address(RVA = "0xEA2448", Offset = "0xEA2448", VA = "0xEA2448")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002826")]
		[Address(RVA = "0xEA2948", Offset = "0xEA2948", VA = "0xEA2948")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6002827")]
		[Address(RVA = "0xEA29F8", Offset = "0xEA29F8", VA = "0xEA29F8")]
		public void GenerateFrames(Mesh baseMesh)
		{
		}

		[Token(Token = "0x6002828")]
		[Address(RVA = "0xEA30E0", Offset = "0xEA30E0", VA = "0xEA30E0")]
		public void GenerateFrameIfNeeded(Mesh baseMesh, int frame)
		{
		}

		[Token(Token = "0x6002829")]
		[Address(RVA = "0xEA1CF4", Offset = "0xEA1CF4", VA = "0xEA1CF4")]
		public Vector3[] GetFrame(int frame)
		{
			return null;
		}

		[Token(Token = "0x600282A")]
		[Address(RVA = "0xEA357C", Offset = "0xEA357C", VA = "0xEA357C")]
		public float GetInterpolatingFrames(int frame, out MeshFrameData previousFrame, out MeshFrameData nextFrame)
		{
			return default(float);
		}

		[Token(Token = "0x600282B")]
		[Address(RVA = "0xEA3794", Offset = "0xEA3794", VA = "0xEA3794")]
		public MeshFrameData GetNearestFrame(int frame)
		{
			return null;
		}

		[Token(Token = "0x600282C")]
		[Address(RVA = "0xEA38F8", Offset = "0xEA38F8", VA = "0xEA38F8")]
		public void DisplayFrame(MeshFilter meshFilter, int frame, int previousFrame)
		{
		}

		[Token(Token = "0x600282D")]
		[Address(RVA = "0xEA47AC", Offset = "0xEA47AC", VA = "0xEA47AC")]
		public void FireEvents(GameObject eventReciever, int frame)
		{
		}

		[Token(Token = "0x600282E")]
		[Address(RVA = "0xEA492C", Offset = "0xEA492C", VA = "0xEA492C")]
		public void Reset()
		{
		}

		[Token(Token = "0x600282F")]
		[Address(RVA = "0xEA4A5C", Offset = "0xEA4A5C", VA = "0xEA4A5C")]
		public bool IsName(string animationName)
		{
			return default(bool);
		}

		[Token(Token = "0x6002830")]
		[Address(RVA = "0xEA350C", Offset = "0xEA350C", VA = "0xEA350C")]
		private void CheckFullGeneration(int newFrame)
		{
		}

		[Token(Token = "0x6002831")]
		[Address(RVA = "0xEA2CC4", Offset = "0xEA2CC4", VA = "0xEA2CC4")]
		private Mesh GenerateFrame(Mesh baseMesh, int frame)
		{
			return null;
		}

		[Token(Token = "0x6002832")]
		[Address(RVA = "0xEA4AA8", Offset = "0xEA4AA8", VA = "0xEA4AA8")]
		private void RecalculateNormals(Mesh mesh, float angle)
		{
		}

		[Token(Token = "0x6002833")]
		[Address(RVA = "0xEA3A00", Offset = "0xEA3A00", VA = "0xEA3A00")]
		private void RecalculateNormals(Mesh mesh, float angle, int[] triangles, Vector3[] vertices, bool instant = false)
		{
		}

		[Token(Token = "0x6002834")]
		[Address(RVA = "0xEA4F64", Offset = "0xEA4F64", VA = "0xEA4F64")]
		public MeshAnimation()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20006AE")]
	public class MeshAnimationEvent
	{
		[Token(Token = "0x20006AF")]
		public enum Mode : byte
		{
			[Token(Token = "0x40027A4")]
			Data,
			[Token(Token = "0x40027A5")]
			String,
			[Token(Token = "0x40027A6")]
			Float
		}

		[Token(Token = "0x400279D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string methodName;

		[Token(Token = "0x400279E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int frame;

		[Token(Token = "0x400279F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Mode eventType;

		[Token(Token = "0x40027A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string stringValue;

		[Token(Token = "0x40027A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float floatValue;

		[Token(Token = "0x40027A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public UnityEngine.Object data;

		[Token(Token = "0x6002843")]
		[Address(RVA = "0xEA4828", Offset = "0xEA4828", VA = "0xEA4828")]
		public void FireEvent(GameObject eventReciever)
		{
		}

		[Token(Token = "0x6002844")]
		[Address(RVA = "0xEA53BC", Offset = "0xEA53BC", VA = "0xEA53BC")]
		public MeshAnimationEvent()
		{
		}
	}
	[Token(Token = "0x20006B0")]
	[AddComponentMenu("Miscellaneous/Mesh Animator")]
	[RequireComponent(typeof(MeshFilter))]
	public class MeshAnimator : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20006B1")]
		public class MeshAnimatorLODLevel
		{
			[Token(Token = "0x40027D6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int fps;

			[Token(Token = "0x40027D7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public float distance;

			[Token(Token = "0x40027D8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public float distanceSquared;

			[Token(Token = "0x6002865")]
			[Address(RVA = "0xEA94E4", Offset = "0xEA94E4", VA = "0xEA94E4")]
			public MeshAnimatorLODLevel()
			{
			}
		}

		[Token(Token = "0x20006B2")]
		private struct CurrentCrossFade
		{
			[Token(Token = "0x40027D9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public MeshFrameData fromFrame;

			[Token(Token = "0x40027DA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public MeshFrameData toFrame;

			[Token(Token = "0x40027DB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int framesNeeded;

			[Token(Token = "0x40027DC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public int currentFrame;

			[Token(Token = "0x40027DD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public int generatedFrame;

			[Token(Token = "0x40027DE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public bool isFading;

			[Token(Token = "0x40027DF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float endTime;

			[Token(Token = "0x40027E0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public CrossFadeFrameData frame;

			[Token(Token = "0x6002866")]
			[Address(RVA = "0xEA5EE8", Offset = "0xEA5EE8", VA = "0xEA5EE8")]
			public void Reset()
			{
			}

			[Token(Token = "0x6002867")]
			[Address(RVA = "0xEA7000", Offset = "0xEA7000", VA = "0xEA7000")]
			public void PopulateFrame(int length)
			{
			}

			[Token(Token = "0x6002868")]
			[Address(RVA = "0xEA8618", Offset = "0xEA8618", VA = "0xEA8618")]
			public void ReturnFrame()
			{
			}
		}

		[Token(Token = "0x20006B3")]
		private class CrossFadeFrameData
		{
			[Token(Token = "0x40027E1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Vector3[] positions;

			[Token(Token = "0x40027E2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Vector3[] normals;

			[Token(Token = "0x40027E3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Bounds bounds;

			[Token(Token = "0x6002869")]
			[Address(RVA = "0xEA94EC", Offset = "0xEA94EC", VA = "0xEA94EC")]
			public CrossFadeFrameData()
			{
			}
		}

		[Token(Token = "0x40027A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Dictionary<Mesh, int> s_meshCount;

		[Token(Token = "0x40027A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static List<Thread> s_crossfadeThreads;

		[Token(Token = "0x40027A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static bool s_shutDownThreads;

		[Token(Token = "0x40027AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static Queue<MeshAnimator> s_crossfadeAnimators;

		[Token(Token = "0x40027AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static List<Stack<Mesh>> s_crossFadePool;

		[Token(Token = "0x40027AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static Dictionary<Mesh, int> s_crossFadeIndex;

		[Token(Token = "0x40027AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Mesh baseMesh;

		[Token(Token = "0x40027AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MeshAnimation defaultAnimation;

		[Token(Token = "0x40027AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public MeshAnimation[] animations;

		[Token(Token = "0x40027B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float speed;

		[Token(Token = "0x40027B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public bool updateWhenOffscreen;

		[Token(Token = "0x40027B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x35")]
		public bool playAutomatically;

		[Token(Token = "0x40027B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x36")]
		public bool resetOnEnable;

		[Token(Token = "0x40027B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public GameObject eventReciever;

		[Token(Token = "0x40027B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public int FPS;

		[Token(Token = "0x40027B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public bool skipLastLoopFrame;

		[Token(Token = "0x40027B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x45")]
		public bool recalculateCrossfadeNormals;

		[Token(Token = "0x40027B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Action<string> OnAnimationFinished;

		[Token(Token = "0x40027B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Action OnFrameUpdated;

		[Token(Token = "0x40027BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Action<bool> OnVisibilityChanged;

		[Token(Token = "0x40027BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public int currentFrame;

		[Token(Token = "0x40027BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Transform LODCamera;

		[Token(Token = "0x40027BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public MeshAnimatorLODLevel[] LODLevels;

		[Token(Token = "0x40027BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[HideInInspector]
		public float nextTick;

		[Token(Token = "0x40027BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[HideInInspector]
		public MeshFilter meshFilter;

		[Token(Token = "0x40027C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[HideInInspector]
		public MeshAnimation currentAnimation;

		[Token(Token = "0x40027C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[HideInInspector]
		public MeshTriangleData[] meshTriangleData;

		[Token(Token = "0x40027C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[HideInInspector]
		public Vector2[] uv1Data;

		[Token(Token = "0x40027C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[HideInInspector]
		public Vector2[] uv2Data;

		[Token(Token = "0x40027C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[HideInInspector]
		public Vector2[] uv3Data;

		[Token(Token = "0x40027C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[HideInInspector]
		public Vector2[] uv4Data;

		[Token(Token = "0x40027C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private int currentAnimIndex;

		[Token(Token = "0x40027C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		private bool isVisible;

		[Token(Token = "0x40027C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private float lastFrameTime;

		[Token(Token = "0x40027C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		private bool pingPong;

		[Token(Token = "0x40027CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC5")]
		private bool isPaused;

		[Token(Token = "0x40027CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private float currentAnimTime;

		[Token(Token = "0x40027CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private Mesh crossFadeMesh;

		[Token(Token = "0x40027CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private Queue<string> queuedAnims;

		[Token(Token = "0x40027CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private CurrentCrossFade currentCrossFade;

		[Token(Token = "0x40027CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		private int currentLodLevel;

		[Token(Token = "0x40027D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		private Transform mTransform;

		[Token(Token = "0x40027D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		private Dictionary<string, Transform> childMap;

		[Token(Token = "0x40027D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		private bool initialized;

		[Token(Token = "0x40027D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
		private int previousEventFrame;

		[Token(Token = "0x40027D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		private bool hasExposedTransforms;

		[Token(Token = "0x40027D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
		private int crossFadePoolIndex;

		[Token(Token = "0x6002845")]
		[Address(RVA = "0xEA53C4", Offset = "0xEA53C4", VA = "0xEA53C4")]
		private void Start()
		{
		}

		[Token(Token = "0x6002846")]
		[Address(RVA = "0xEA5AF8", Offset = "0xEA5AF8", VA = "0xEA5AF8")]
		private void OnBecameVisible()
		{
		}

		[Token(Token = "0x6002847")]
		[Address(RVA = "0xEA5B28", Offset = "0xEA5B28", VA = "0xEA5B28")]
		private void OnBecameInvisible()
		{
		}

		[Token(Token = "0x6002848")]
		[Address(RVA = "0xEA5B54", Offset = "0xEA5B54", VA = "0xEA5B54")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6002849")]
		[Address(RVA = "0xEA5DD0", Offset = "0xEA5DD0", VA = "0xEA5DD0")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x600284A")]
		[Address(RVA = "0xEA5F2C", Offset = "0xEA5F2C", VA = "0xEA5F2C")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x600284B")]
		[Address(RVA = "0xEA6A3C", Offset = "0xEA6A3C", VA = "0xEA6A3C")]
		private void FireAnimationEvents(MeshAnimation cAnim, float totalSpeed, bool finished)
		{
		}

		[Token(Token = "0x600284C")]
		[Address(RVA = "0xEA6BA8", Offset = "0xEA6BA8", VA = "0xEA6BA8")]
		private Mesh GetCrossfadeFromPool()
		{
			return null;
		}

		[Token(Token = "0x600284D")]
		[Address(RVA = "0xEA6670", Offset = "0xEA6670", VA = "0xEA6670")]
		private void ReturnCrossfadeToPool()
		{
		}

		[Token(Token = "0x600284E")]
		[Address(RVA = "0xEA6DBC", Offset = "0xEA6DBC", VA = "0xEA6DBC")]
		private void GenerateCrossfadeFrame()
		{
		}

		[Token(Token = "0x600284F")]
		[Address(RVA = "0xEA713C", Offset = "0xEA713C", VA = "0xEA713C")]
		private static void EnqueueAnimatorForCrossfade(MeshAnimator animator)
		{
		}

		[Token(Token = "0x6002850")]
		[Address(RVA = "0xEA727C", Offset = "0xEA727C", VA = "0xEA727C")]
		private static MeshAnimator DequeueAnimatorForCrossfade()
		{
			return null;
		}

		[Token(Token = "0x6002851")]
		[Address(RVA = "0xEA740C", Offset = "0xEA740C", VA = "0xEA740C")]
		private static Matrix4x4 MatrixLerp(Matrix4x4 from, Matrix4x4 to, float time)
		{
			return default(Matrix4x4);
		}

		[Token(Token = "0x6002852")]
		[Address(RVA = "0xEA74C4", Offset = "0xEA74C4", VA = "0xEA74C4")]
		private static void GenerateThreadedCrossfade()
		{
		}

		[Token(Token = "0x6002853")]
		[Address(RVA = "0xEA7748", Offset = "0xEA7748", VA = "0xEA7748")]
		public void UpdateTick(float time)
		{
		}

		[Token(Token = "0x6002854")]
		[Address(RVA = "0xEA1418", Offset = "0xEA1418", VA = "0xEA1418")]
		public void Crossfade(int index)
		{
		}

		[Token(Token = "0x6002855")]
		[Address(RVA = "0xEA230C", Offset = "0xEA230C", VA = "0xEA230C")]
		public void Crossfade(string animationName)
		{
		}

		[Token(Token = "0x6002856")]
		[Address(RVA = "0xEA87AC", Offset = "0xEA87AC", VA = "0xEA87AC")]
		public void Crossfade(int index, float speed)
		{
		}

		[Token(Token = "0x6002857")]
		[Address(RVA = "0xEA8938", Offset = "0xEA8938", VA = "0xEA8938")]
		public void Crossfade(string animationName, float speed)
		{
		}

		[Token(Token = "0x6002858")]
		[Address(RVA = "0xEA12C4", Offset = "0xEA12C4", VA = "0xEA12C4")]
		public void Play()
		{
		}

		[Token(Token = "0x6002859")]
		[Address(RVA = "0xEA2318", Offset = "0xEA2318", VA = "0xEA2318")]
		public void Play(string animationName)
		{
		}

		[Token(Token = "0x600285A")]
		[Address(RVA = "0xEA1424", Offset = "0xEA1424", VA = "0xEA1424")]
		public void Play(int index)
		{
		}

		[Token(Token = "0x600285B")]
		[Address(RVA = "0xEA89C8", Offset = "0xEA89C8", VA = "0xEA89C8")]
		public void PlayRandom(params string[] animationNames)
		{
		}

		[Token(Token = "0x600285C")]
		[Address(RVA = "0xEA8A6C", Offset = "0xEA8A6C", VA = "0xEA8A6C")]
		public void PlayQueued(string animationName)
		{
		}

		[Token(Token = "0x600285D")]
		[Address(RVA = "0xEA8B1C", Offset = "0xEA8B1C", VA = "0xEA8B1C")]
		public void Pause()
		{
		}

		[Token(Token = "0x600285E")]
		[Address(RVA = "0xEA8B28", Offset = "0xEA8B28", VA = "0xEA8B28")]
		public void RestartAnim()
		{
		}

		[Token(Token = "0x600285F")]
		[Address(RVA = "0xEA8B30", Offset = "0xEA8B30", VA = "0xEA8B30")]
		public void SetTime(float time, bool instantUpdate = false)
		{
		}

		[Token(Token = "0x6002860")]
		[Address(RVA = "0xEA8BF8", Offset = "0xEA8BF8", VA = "0xEA8BF8")]
		public void SetTimeNormalized(float time, bool instantUpdate = false)
		{
		}

		[Token(Token = "0x6002861")]
		[Address(RVA = "0xEA8CC4", Offset = "0xEA8CC4", VA = "0xEA8CC4")]
		public MeshAnimation GetClip(string animationName)
		{
			return null;
		}

		[Token(Token = "0x6002862")]
		[Address(RVA = "0xEA8D54", Offset = "0xEA8D54", VA = "0xEA8D54")]
		public void PrepopulateCrossfadePool(int count)
		{
		}

		[Token(Token = "0x6002863")]
		[Address(RVA = "0xEA9068", Offset = "0xEA9068", VA = "0xEA9068")]
		public MeshAnimator()
		{
		}
	}
	[Token(Token = "0x20006B5")]
	public class MeshAnimatorManager : MonoBehaviour
	{
		[Token(Token = "0x20006B6")]
		[CompilerGenerated]
		private sealed class <UnscaledUpdate>d__11 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40027EB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40027EC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40027ED")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public MeshAnimatorManager <>4__this;

			[Token(Token = "0x17000292")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600287E")]
				[Address(RVA = "0xEA9D44", Offset = "0xEA9D44", VA = "0xEA9D44", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000293")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002880")]
				[Address(RVA = "0xEA9D8C", Offset = "0xEA9D8C", VA = "0xEA9D8C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600287B")]
			[Address(RVA = "0xEA9920", Offset = "0xEA9920", VA = "0xEA9920")]
			[DebuggerHidden]
			public <UnscaledUpdate>d__11(int <>1__state)
			{
			}

			[Token(Token = "0x600287C")]
			[Address(RVA = "0xEA9C84", Offset = "0xEA9C84", VA = "0xEA9C84", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600287D")]
			[Address(RVA = "0xEA9C88", Offset = "0xEA9C88", VA = "0xEA9C88", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600287F")]
			[Address(RVA = "0xEA9D4C", Offset = "0xEA9D4C", VA = "0xEA9D4C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40027E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static AnimatorUpdateMode mode;

		[Token(Token = "0x40027E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static MeshAnimatorManager mInstance;

		[Token(Token = "0x40027EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static List<MeshAnimator> mAnimators;

		[Token(Token = "0x17000290")]
		public static int AnimatorCount
		{
			[Token(Token = "0x600286F")]
			[Address(RVA = "0xEA5A30", Offset = "0xEA5A30", VA = "0xEA5A30")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000291")]
		public static MeshAnimatorManager Instance
		{
			[Token(Token = "0x6002870")]
			[Address(RVA = "0xEA9578", Offset = "0xEA9578", VA = "0xEA9578")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002871")]
		[Address(RVA = "0xEA5C9C", Offset = "0xEA5C9C", VA = "0xEA5C9C")]
		public static void AddAnimator(MeshAnimator animator)
		{
		}

		[Token(Token = "0x6002872")]
		[Address(RVA = "0xEA5E68", Offset = "0xEA5E68", VA = "0xEA5E68")]
		public static void RemoveAnimator(MeshAnimator animator)
		{
		}

		[Token(Token = "0x6002873")]
		[Address(RVA = "0xEA9730", Offset = "0xEA9730", VA = "0xEA9730")]
		public static void SetUpdateMode(AnimatorUpdateMode updateMode)
		{
		}

		[Token(Token = "0x6002874")]
		[Address(RVA = "0xEA989C", Offset = "0xEA989C", VA = "0xEA989C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6002875")]
		[Address(RVA = "0xEA9828", Offset = "0xEA9828", VA = "0xEA9828")]
		[IteratorStateMachine(typeof(<UnscaledUpdate>d__11))]
		private IEnumerator UnscaledUpdate()
		{
			return null;
		}

		[Token(Token = "0x6002876")]
		[Address(RVA = "0xEA9948", Offset = "0xEA9948", VA = "0xEA9948")]
		private void Update()
		{
		}

		[Token(Token = "0x6002877")]
		[Address(RVA = "0xEA9B5C", Offset = "0xEA9B5C", VA = "0xEA9B5C")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6002878")]
		[Address(RVA = "0xEA99B8", Offset = "0xEA99B8", VA = "0xEA99B8")]
		private void UpdateTick(float time)
		{
		}

		[Token(Token = "0x6002879")]
		[Address(RVA = "0xEA9BD0", Offset = "0xEA9BD0", VA = "0xEA9BD0")]
		public MeshAnimatorManager()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20006B7")]
	public class MeshFrameData
	{
		[NonSerialized]
		[Token(Token = "0x40027EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Vector3[] decompressed;

		[NonSerialized]
		[Token(Token = "0x40027EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Matrix4x4[] exposedTransforms;

		[NonSerialized]
		[Token(Token = "0x40027F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Vector3 rootMotionPosition;

		[NonSerialized]
		[Token(Token = "0x40027F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public Quaternion rootMotionRotation;

		[Token(Token = "0x17000294")]
		public Vector3[] verts
		{
			[Token(Token = "0x6002881")]
			[Address(RVA = "0xEA9D94", Offset = "0xEA9D94", VA = "0xEA9D94")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002882")]
		[Address(RVA = "0xEA9D9C", Offset = "0xEA9D9C", VA = "0xEA9D9C")]
		public void SetVerts(Vector3[] v)
		{
		}

		[Token(Token = "0x6002883")]
		[Address(RVA = "0xEA9DA4", Offset = "0xEA9DA4", VA = "0xEA9DA4", Slot = "0")]
		public override bool Equals(object obj)
		{
			return default(bool);
		}

		[Token(Token = "0x6002884")]
		[Address(RVA = "0xEA9EC8", Offset = "0xEA9EC8", VA = "0xEA9EC8", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}

		[Token(Token = "0x6002885")]
		[Address(RVA = "0xEA9ED0", Offset = "0xEA9ED0", VA = "0xEA9ED0")]
		public MeshFrameData()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20006B8")]
	public class MeshTriangleData
	{
		[Token(Token = "0x40027F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int submesh;

		[Token(Token = "0x40027F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int[] triangles;

		[Token(Token = "0x6002886")]
		[Address(RVA = "0xEA9ED8", Offset = "0xEA9ED8", VA = "0xEA9ED8")]
		public MeshTriangleData()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20006B9")]
	public class DeltaCompressedFrameData
	{
		[Token(Token = "0x40027F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static float compressionAccuracy;

		[Token(Token = "0x40027F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float accuracy;

		[Token(Token = "0x40027F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int sizeOffset;

		[Token(Token = "0x40027F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int vertLength;

		[Token(Token = "0x40027F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int exposedLength;

		[Token(Token = "0x40027F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[HideInInspector]
		public short[] positionsUShort;

		[Token(Token = "0x40027FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[HideInInspector]
		public int[] positions;

		[Token(Token = "0x40027FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[HideInInspector]
		public int[] frameIndexes;

		[Token(Token = "0x40027FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[HideInInspector]
		public Matrix4x4[] exposedTransforms;

		[Token(Token = "0x40027FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[HideInInspector]
		public Vector3[] rootMotionPositions;

		[Token(Token = "0x40027FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[HideInInspector]
		public Quaternion[] rootMotionRotations;

		[Token(Token = "0x6002887")]
		[Address(RVA = "0xEA24F4", Offset = "0xEA24F4", VA = "0xEA24F4")]
		public static implicit operator MeshFrameData[](DeltaCompressedFrameData s)
		{
			return null;
		}

		[Token(Token = "0x6002888")]
		[Address(RVA = "0xEA9EE0", Offset = "0xEA9EE0", VA = "0xEA9EE0")]
		public static implicit operator DeltaCompressedFrameData(MeshFrameData[] frames)
		{
			return null;
		}

		[Token(Token = "0x6002889")]
		[Address(RVA = "0xEAA85C", Offset = "0xEAA85C", VA = "0xEAA85C")]
		public DeltaCompressedFrameData()
		{
		}
	}
	[Token(Token = "0x20006BA")]
	public static class AllocatedArray<T>
	{
		[Token(Token = "0x40027FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static T defaultValue;

		[Token(Token = "0x4002800")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static List<T[]> allocatedArrays;

		[Token(Token = "0x600288B")]
		private static T[] AllocateArray(int size)
		{
			return null;
		}

		[Token(Token = "0x600288C")]
		public static T[] Get(int size)
		{
			return null;
		}

		[Token(Token = "0x600288D")]
		public static void Return(T[] array, bool resetValues = true)
		{
		}
	}
	[Token(Token = "0x20006BB")]
	public static class Comparers
	{
		[Serializable]
		[Token(Token = "0x20006BC")]
		public class StringComparer : IEqualityComparer<string>
		{
			[Token(Token = "0x6002891")]
			[Address(RVA = "0xEAAA68", Offset = "0xEAAA68", VA = "0xEAAA68", Slot = "4")]
			private bool System.Collections.Generic.IEqualityComparer<System.String>.Equals(string x, string y)
			{
				return default(bool);
			}

			[Token(Token = "0x6002892")]
			[Address(RVA = "0xEAAA78", Offset = "0xEAAA78", VA = "0xEAAA78", Slot = "5")]
			private int System.Collections.Generic.IEqualityComparer<System.String>.GetHashCode(string obj)
			{
				return default(int);
			}

			[Token(Token = "0x6002893")]
			[Address(RVA = "0xEAAA40", Offset = "0xEAAA40", VA = "0xEAAA40")]
			public StringComparer()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20006BD")]
		public class FloatComparer : IEqualityComparer<float>
		{
			[Token(Token = "0x6002894")]
			[Address(RVA = "0xEAAA98", Offset = "0xEAAA98", VA = "0xEAAA98", Slot = "4")]
			private bool System.Collections.Generic.IEqualityComparer<System.Single>.Equals(float x, float y)
			{
				return default(bool);
			}

			[Token(Token = "0x6002895")]
			[Address(RVA = "0xEAAAA4", Offset = "0xEAAAA4", VA = "0xEAAAA4", Slot = "5")]
			private int System.Collections.Generic.IEqualityComparer<System.Single>.GetHashCode(float obj)
			{
				return default(int);
			}

			[Token(Token = "0x6002896")]
			[Address(RVA = "0xEAAA48", Offset = "0xEAAA48", VA = "0xEAAA48")]
			public FloatComparer()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20006BE")]
		public class IntComparer : IEqualityComparer<int>
		{
			[Token(Token = "0x6002897")]
			[Address(RVA = "0xEAAAC0", Offset = "0xEAAAC0", VA = "0xEAAAC0", Slot = "4")]
			private bool System.Collections.Generic.IEqualityComparer<System.Int32>.Equals(int x, int y)
			{
				return default(bool);
			}

			[Token(Token = "0x6002898")]
			[Address(RVA = "0xEAAACC", Offset = "0xEAAACC", VA = "0xEAAACC", Slot = "5")]
			private int System.Collections.Generic.IEqualityComparer<System.Int32>.GetHashCode(int obj)
			{
				return default(int);
			}

			[Token(Token = "0x6002899")]
			[Address(RVA = "0xEAAA50", Offset = "0xEAAA50", VA = "0xEAAA50")]
			public IntComparer()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20006BF")]
		public class ByteComparer : IEqualityComparer<byte>
		{
			[Token(Token = "0x600289A")]
			[Address(RVA = "0xEAAAE8", Offset = "0xEAAAE8", VA = "0xEAAAE8", Slot = "4")]
			private bool System.Collections.Generic.IEqualityComparer<System.Byte>.Equals(byte x, byte y)
			{
				return default(bool);
			}

			[Token(Token = "0x600289B")]
			[Address(RVA = "0xEAAAF8", Offset = "0xEAAAF8", VA = "0xEAAAF8", Slot = "5")]
			private int System.Collections.Generic.IEqualityComparer<System.Byte>.GetHashCode(byte obj)
			{
				return default(int);
			}

			[Token(Token = "0x600289C")]
			[Address(RVA = "0xEAAA58", Offset = "0xEAAA58", VA = "0xEAAA58")]
			public ByteComparer()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20006C0")]
		public class BoolComparer : IEqualityComparer<bool>
		{
			[Token(Token = "0x600289D")]
			[Address(RVA = "0xEAAB14", Offset = "0xEAAB14", VA = "0xEAAB14", Slot = "4")]
			private bool System.Collections.Generic.IEqualityComparer<System.Boolean>.Equals(bool x, bool y)
			{
				return default(bool);
			}

			[Token(Token = "0x600289E")]
			[Address(RVA = "0xEAAB20", Offset = "0xEAAB20", VA = "0xEAAB20", Slot = "5")]
			private int System.Collections.Generic.IEqualityComparer<System.Boolean>.GetHashCode(bool obj)
			{
				return default(int);
			}

			[Token(Token = "0x600289F")]
			[Address(RVA = "0xEAAA60", Offset = "0xEAAA60", VA = "0xEAAA60")]
			public BoolComparer()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20006C1")]
		private class FuncEqualityComparer<T> : EqualityComparer<T>
		{
			[Token(Token = "0x4002806")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private readonly Func<T, T, bool> equals;

			[Token(Token = "0x4002807")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private readonly Func<T, int> hash;

			[Token(Token = "0x60028A0")]
			public FuncEqualityComparer(Func<T, T, bool> equals, Func<T, int> hash)
			{
			}

			[Token(Token = "0x60028A1")]
			public override bool Equals(T a, T b)
			{
				return default(bool);
			}

			[Token(Token = "0x60028A2")]
			public override int GetHashCode(T obj)
			{
				return default(int);
			}
		}

		[Token(Token = "0x4002801")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly StringComparer String;

		[Token(Token = "0x4002802")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static readonly FloatComparer Float;

		[Token(Token = "0x4002803")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static readonly IntComparer Int;

		[Token(Token = "0x4002804")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static readonly ByteComparer Byte;

		[Token(Token = "0x4002805")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public static readonly BoolComparer Bool;

		[Token(Token = "0x600288F")]
		public static IEqualityComparer<T> Create<T>(Func<T, T, bool> equals, [Optional] Func<T, int> hash)
		{
			return null;
		}
	}
	[Token(Token = "0x20006C3")]
	public static class GenericObjectPool<T>
	{
		[Token(Token = "0x400280A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Stack<T> pool;

		[Token(Token = "0x17000295")]
		public static int Count
		{
			[Token(Token = "0x60028A6")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x60028A7")]
		public static void InitPool(int count)
		{
		}

		[Token(Token = "0x60028A8")]
		public static T Get()
		{
			return (T)null;
		}

		[Token(Token = "0x60028A9")]
		public static void Return(T obj)
		{
		}
	}
	[Token(Token = "0x20006C4")]
	public static class MatrixUtils
	{
		[Token(Token = "0x60028AB")]
		[Address(RVA = "0xEA870C", Offset = "0xEA870C", VA = "0xEA870C")]
		public static void FromMatrix4x4(Transform transform, Matrix4x4 matrix)
		{
		}

		[Token(Token = "0x60028AC")]
		[Address(RVA = "0xEAAB4C", Offset = "0xEAAB4C", VA = "0xEAAB4C")]
		public static Quaternion GetRotation(Matrix4x4 matrix)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x60028AD")]
		[Address(RVA = "0xEAAB40", Offset = "0xEAAB40", VA = "0xEAAB40")]
		public static Vector3 GetPosition(Matrix4x4 matrix)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60028AE")]
		[Address(RVA = "0xEAAC70", Offset = "0xEAAC70", VA = "0xEAAC70")]
		public static Vector3 GetScale(Matrix4x4 m)
		{
			return default(Vector3);
		}
	}
	[Token(Token = "0x20006C5")]
	public class PooledDictionary<T, T2> : Dictionary<T, T2>
	{
		[Token(Token = "0x400280B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Stack<PooledDictionary<T, T2>> stack;

		[Token(Token = "0x400280C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static uint checkedOut;

		[Token(Token = "0x400280D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static uint returned;

		[Token(Token = "0x17000296")]
		public bool recycleable
		{
			[Token(Token = "0x60028AF")]
			[CompilerGenerated]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60028B0")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x60028B1")]
		public static void Init(int initialPoolSize = 10)
		{
		}

		[Token(Token = "0x60028B2")]
		public static PooledDictionary<T, T2> Get(int capacity, [Optional] IEqualityComparer<T> comparer)
		{
			return null;
		}

		[Token(Token = "0x60028B3")]
		public static PooledDictionary<T, T2> Get()
		{
			return null;
		}

		[Token(Token = "0x60028B4")]
		public static PooledDictionary<T, T2> Get(IEqualityComparer<T> comparer)
		{
			return null;
		}

		[Token(Token = "0x60028B5")]
		public PooledDictionary()
		{
		}

		[Token(Token = "0x60028B6")]
		public PooledDictionary(int capacity)
		{
		}

		[Token(Token = "0x60028B7")]
		public PooledDictionary(int capacity, IEqualityComparer<T> comparer)
		{
		}

		[Token(Token = "0x60028B8")]
		public void ReturnToPool(bool force = false)
		{
		}
	}
}
namespace DentedPixel
{
	[Token(Token = "0x20006C6")]
	public class LeanDummy
	{
		[Token(Token = "0x60028BA")]
		[Address(RVA = "0xEAAE04", Offset = "0xEAAE04", VA = "0xEAAE04")]
		public LeanDummy()
		{
		}
	}
}
namespace DentedPixel.LTExamples
{
	[Token(Token = "0x20006C7")]
	public class PathBezier : MonoBehaviour
	{
		[Token(Token = "0x400280F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform[] trans;

		[Token(Token = "0x4002810")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private LTBezierPath cr;

		[Token(Token = "0x4002811")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private GameObject avatar1;

		[Token(Token = "0x4002812")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float iter;

		[Token(Token = "0x60028BB")]
		[Address(RVA = "0xEAAE0C", Offset = "0xEAAE0C", VA = "0xEAAE0C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60028BC")]
		[Address(RVA = "0xEAB05C", Offset = "0xEAB05C", VA = "0xEAB05C")]
		private void Start()
		{
		}

		[Token(Token = "0x60028BD")]
		[Address(RVA = "0xEAB1EC", Offset = "0xEAB1EC", VA = "0xEAB1EC")]
		private void Update()
		{
		}

		[Token(Token = "0x60028BE")]
		[Address(RVA = "0xEAB234", Offset = "0xEAB234", VA = "0xEAB234")]
		private void OnDrawGizmos()
		{
		}

		[Token(Token = "0x60028BF")]
		[Address(RVA = "0xEAB284", Offset = "0xEAB284", VA = "0xEAB284")]
		public PathBezier()
		{
		}
	}
	[Token(Token = "0x20006C8")]
	public class TestingUnitTests : MonoBehaviour
	{
		[Token(Token = "0x20006CD")]
		[CompilerGenerated]
		private sealed class <>c__DisplayClass24_0
		{
			[Token(Token = "0x4002849")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public TestingUnitTests <>4__this;

			[Token(Token = "0x400284A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public int pauseCount;

			[Token(Token = "0x400284B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public GameObject cubeRound;

			[Token(Token = "0x400284C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Vector3 onStartPos;

			[Token(Token = "0x400284D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			public Vector3 onStartPosSpline;

			[Token(Token = "0x400284E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public GameObject cubeSpline;

			[Token(Token = "0x400284F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public GameObject cubeSeq;

			[Token(Token = "0x4002850")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			public GameObject cubeBounds;

			[Token(Token = "0x4002851")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			public bool didPassBounds;

			[Token(Token = "0x4002852")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
			public Vector3 failPoint;

			[Token(Token = "0x4002853")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			public int setOnStartNum;

			[Token(Token = "0x4002854")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
			public bool setPosOnUpdate;

			[Token(Token = "0x4002855")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			public int setPosNum;

			[Token(Token = "0x4002856")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
			public bool hasGroupTweensCheckStarted;

			[Token(Token = "0x4002857")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
			public float previousXlt4;

			[Token(Token = "0x4002858")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
			public bool onUpdateWasCalled;

			[Token(Token = "0x4002859")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
			public float start;

			[Token(Token = "0x400285A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
			public float expectedTime;

			[Token(Token = "0x400285B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
			public bool didGetCorrectOnUpdate;

			[Token(Token = "0x400285C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
			public Action <>9__13;

			[Token(Token = "0x400285D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
			public Action<Vector3> <>9__14;

			[Token(Token = "0x400285E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
			public Action <>9__16;

			[Token(Token = "0x400285F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
			public Action<object> <>9__15;

			[Token(Token = "0x60028EC")]
			[Address(RVA = "0xEC24E4", Offset = "0xEC24E4", VA = "0xEC24E4")]
			public <>c__DisplayClass24_0()
			{
			}

			[Token(Token = "0x60028ED")]
			[Address(RVA = "0xEC24EC", Offset = "0xEC24EC", VA = "0xEC24EC")]
			internal void <timeBasedTesting>b__0()
			{
			}

			[Token(Token = "0x60028EE")]
			[Address(RVA = "0xEC2510", Offset = "0xEC2510", VA = "0xEC2510")]
			internal void <timeBasedTesting>b__1()
			{
			}

			[Token(Token = "0x60028EF")]
			[Address(RVA = "0xEC2534", Offset = "0xEC2534", VA = "0xEC2534")]
			internal void <timeBasedTesting>b__2(float val)
			{
			}

			[Token(Token = "0x60028F0")]
			[Address(RVA = "0xEC2544", Offset = "0xEC2544", VA = "0xEC2544")]
			internal void <timeBasedTesting>b__3()
			{
			}

			[Token(Token = "0x60028F1")]
			[Address(RVA = "0xEC26EC", Offset = "0xEC26EC", VA = "0xEC26EC")]
			internal void <timeBasedTesting>b__4()
			{
			}

			[Token(Token = "0x60028F2")]
			[Address(RVA = "0xEC2B4C", Offset = "0xEC2B4C", VA = "0xEC2B4C")]
			internal void <timeBasedTesting>b__5()
			{
			}

			[Token(Token = "0x60028F3")]
			[Address(RVA = "0xEC2D1C", Offset = "0xEC2D1C", VA = "0xEC2D1C")]
			internal void <timeBasedTesting>b__6(float val)
			{
			}

			[Token(Token = "0x60028F4")]
			[Address(RVA = "0xEC2E3C", Offset = "0xEC2E3C", VA = "0xEC2E3C")]
			internal void <timeBasedTesting>b__7()
			{
			}

			[Token(Token = "0x60028F5")]
			[Address(RVA = "0xEC30EC", Offset = "0xEC30EC", VA = "0xEC30EC")]
			internal void <timeBasedTesting>b__13()
			{
			}

			[Token(Token = "0x60028F6")]
			[Address(RVA = "0xEC30FC", Offset = "0xEC30FC", VA = "0xEC30FC")]
			internal void <timeBasedTesting>b__14(Vector3 newPosition)
			{
			}

			[Token(Token = "0x60028F7")]
			[Address(RVA = "0xEC3144", Offset = "0xEC3144", VA = "0xEC3144")]
			internal void <timeBasedTesting>b__15(object param)
			{
			}

			[Token(Token = "0x60028F8")]
			[Address(RVA = "0xEC33F0", Offset = "0xEC33F0", VA = "0xEC33F0")]
			internal void <timeBasedTesting>b__16()
			{
			}

			[Token(Token = "0x60028F9")]
			[Address(RVA = "0xEC3684", Offset = "0xEC3684", VA = "0xEC3684")]
			internal void <timeBasedTesting>b__8()
			{
			}

			[Token(Token = "0x60028FA")]
			[Address(RVA = "0xEC3A40", Offset = "0xEC3A40", VA = "0xEC3A40")]
			internal void <timeBasedTesting>b__9(float val)
			{
			}

			[Token(Token = "0x60028FB")]
			[Address(RVA = "0xEC3A4C", Offset = "0xEC3A4C", VA = "0xEC3A4C")]
			internal void <timeBasedTesting>b__10()
			{
			}

			[Token(Token = "0x60028FC")]
			[Address(RVA = "0xEC3CC4", Offset = "0xEC3CC4", VA = "0xEC3CC4")]
			internal void <timeBasedTesting>b__11(Vector3 val)
			{
			}

			[Token(Token = "0x60028FD")]
			[Address(RVA = "0xEC3D00", Offset = "0xEC3D00", VA = "0xEC3D00")]
			internal void <timeBasedTesting>b__12()
			{
			}
		}

		[Token(Token = "0x20006CE")]
		[CompilerGenerated]
		private sealed class <timeBasedTesting>d__24 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002860")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002861")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002862")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public TestingUnitTests <>4__this;

			[Token(Token = "0x4002863")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private <>c__DisplayClass24_0 <>8__1;

			[Token(Token = "0x4002864")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private int <descriptionMatchCount>5__2;

			[Token(Token = "0x17000297")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002901")]
				[Address(RVA = "0xEC5F68", Offset = "0xEC5F68", VA = "0xEC5F68", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000298")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002903")]
				[Address(RVA = "0xEC5FB0", Offset = "0xEC5FB0", VA = "0xEC5FB0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60028FE")]
			[Address(RVA = "0xEC3D7C", Offset = "0xEC3D7C", VA = "0xEC3D7C")]
			[DebuggerHidden]
			public <timeBasedTesting>d__24(int <>1__state)
			{
			}

			[Token(Token = "0x60028FF")]
			[Address(RVA = "0xEC3DA4", Offset = "0xEC3DA4", VA = "0xEC3DA4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002900")]
			[Address(RVA = "0xEC3DA8", Offset = "0xEC3DA8", VA = "0xEC3DA8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002902")]
			[Address(RVA = "0xEC5F70", Offset = "0xEC5F70", VA = "0xEC5F70", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20006CF")]
		[CompilerGenerated]
		private sealed class <lotsOfCancels>d__25 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002865")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002866")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002867")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public TestingUnitTests <>4__this;

			[Token(Token = "0x4002868")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private int <cubeCount>5__2;

			[Token(Token = "0x4002869")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private int[] <tweensA>5__3;

			[Token(Token = "0x400286A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private GameObject[] <aGOs>5__4;

			[Token(Token = "0x400286B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private int[] <tweensB>5__5;

			[Token(Token = "0x400286C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private GameObject[] <bGOs>5__6;

			[Token(Token = "0x17000299")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002907")]
				[Address(RVA = "0xEC6B10", Offset = "0xEC6B10", VA = "0xEC6B10", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700029A")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002909")]
				[Address(RVA = "0xEC6B58", Offset = "0xEC6B58", VA = "0xEC6B58", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002904")]
			[Address(RVA = "0xEC5FB8", Offset = "0xEC5FB8", VA = "0xEC5FB8")]
			[DebuggerHidden]
			public <lotsOfCancels>d__25(int <>1__state)
			{
			}

			[Token(Token = "0x6002905")]
			[Address(RVA = "0xEC5FE0", Offset = "0xEC5FE0", VA = "0xEC5FE0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002906")]
			[Address(RVA = "0xEC5FE4", Offset = "0xEC5FE4", VA = "0xEC5FE4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002908")]
			[Address(RVA = "0xEC6B18", Offset = "0xEC6B18", VA = "0xEC6B18", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20006D0")]
		[CompilerGenerated]
		private sealed class <pauseTimeNow>d__26 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400286D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400286E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400286F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public TestingUnitTests <>4__this;

			[Token(Token = "0x1700029B")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600290D")]
				[Address(RVA = "0xEC6D84", Offset = "0xEC6D84", VA = "0xEC6D84", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700029C")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600290F")]
				[Address(RVA = "0xEC6DCC", Offset = "0xEC6DCC", VA = "0xEC6DCC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600290A")]
			[Address(RVA = "0xEC6B60", Offset = "0xEC6B60", VA = "0xEC6B60")]
			[DebuggerHidden]
			public <pauseTimeNow>d__26(int <>1__state)
			{
			}

			[Token(Token = "0x600290B")]
			[Address(RVA = "0xEC6B88", Offset = "0xEC6B88", VA = "0xEC6B88", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600290C")]
			[Address(RVA = "0xEC6B8C", Offset = "0xEC6B8C", VA = "0xEC6B8C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600290E")]
			[Address(RVA = "0xEC6D8C", Offset = "0xEC6D8C", VA = "0xEC6D8C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4002813")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject cube1;

		[Token(Token = "0x4002814")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject cube2;

		[Token(Token = "0x4002815")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameObject cube3;

		[Token(Token = "0x4002816")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public GameObject cube4;

		[Token(Token = "0x4002817")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public GameObject cubeAlpha1;

		[Token(Token = "0x4002818")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public GameObject cubeAlpha2;

		[Token(Token = "0x4002819")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private bool eventGameObjectWasCalled;

		[Token(Token = "0x400281A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
		private bool eventGeneralWasCalled;

		[Token(Token = "0x400281B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private int lt1Id;

		[Token(Token = "0x400281C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private LTDescr lt2;

		[Token(Token = "0x400281D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private LTDescr lt3;

		[Token(Token = "0x400281E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private LTDescr lt4;

		[Token(Token = "0x400281F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private LTDescr[] groupTweens;

		[Token(Token = "0x4002820")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private GameObject[] groupGOs;

		[Token(Token = "0x4002821")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private int groupTweensCnt;

		[Token(Token = "0x4002822")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private int rotateRepeat;

		[Token(Token = "0x4002823")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private int rotateRepeatAngle;

		[Token(Token = "0x4002824")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private GameObject boxNoCollider;

		[Token(Token = "0x4002825")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private float timeElapsedNormalTimeScale;

		[Token(Token = "0x4002826")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		private float timeElapsedIgnoreTimeScale;

		[Token(Token = "0x4002827")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private bool pauseTweenDidFinish;

		[Token(Token = "0x60028C0")]
		[Address(RVA = "0xEAB28C", Offset = "0xEAB28C", VA = "0xEAB28C")]
		private void Awake()
		{
		}

		[Token(Token = "0x60028C1")]
		[Address(RVA = "0xEAB374", Offset = "0xEAB374", VA = "0xEAB374")]
		private void Start()
		{
		}

		[Token(Token = "0x60028C2")]
		[Address(RVA = "0xEACF34", Offset = "0xEACF34", VA = "0xEACF34")]
		private GameObject cubeNamed(string name)
		{
			return null;
		}

		[Token(Token = "0x60028C3")]
		[Address(RVA = "0xEACFD0", Offset = "0xEACFD0", VA = "0xEACFD0")]
		[IteratorStateMachine(typeof(<timeBasedTesting>d__24))]
		private IEnumerator timeBasedTesting()
		{
			return null;
		}

		[Token(Token = "0x60028C4")]
		[Address(RVA = "0xEAD044", Offset = "0xEAD044", VA = "0xEAD044")]
		[IteratorStateMachine(typeof(<lotsOfCancels>d__25))]
		private IEnumerator lotsOfCancels()
		{
			return null;
		}

		[Token(Token = "0x60028C5")]
		[Address(RVA = "0xEAD0B8", Offset = "0xEAD0B8", VA = "0xEAD0B8")]
		[IteratorStateMachine(typeof(<pauseTimeNow>d__26))]
		private IEnumerator pauseTimeNow()
		{
			return null;
		}

		[Token(Token = "0x60028C6")]
		[Address(RVA = "0xEAD12C", Offset = "0xEAD12C", VA = "0xEAD12C")]
		private void rotateRepeatFinished()
		{
		}

		[Token(Token = "0x60028C7")]
		[Address(RVA = "0xEAD188", Offset = "0xEAD188", VA = "0xEAD188")]
		private void rotateRepeatAllFinished()
		{
		}

		[Token(Token = "0x60028C8")]
		[Address(RVA = "0xEAD398", Offset = "0xEAD398", VA = "0xEAD398")]
		private void eventGameObjectCalled(LTEvent e)
		{
		}

		[Token(Token = "0x60028C9")]
		[Address(RVA = "0xEAD3A4", Offset = "0xEAD3A4", VA = "0xEAD3A4")]
		private void eventGeneralCalled(LTEvent e)
		{
		}

		[Token(Token = "0x60028CA")]
		[Address(RVA = "0xEAD3B0", Offset = "0xEAD3B0", VA = "0xEAD3B0")]
		public TestingUnitTests()
		{
		}
	}
}
namespace FORGE3D
{
	[Token(Token = "0x20006D1")]
	public class F3DPool : MonoBehaviour
	{
		[Token(Token = "0x4002870")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[HideInInspector]
		public string poolName;

		[Token(Token = "0x4002871")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[HideInInspector]
		public Transform[] templates;

		[Token(Token = "0x4002872")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[HideInInspector]
		public Transform[] templatesParent;

		[Token(Token = "0x4002873")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[HideInInspector]
		public int[] poolLength;

		[Token(Token = "0x4002874")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[HideInInspector]
		public int[] poolLengthCurrent;

		[Token(Token = "0x4002875")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[HideInInspector]
		public int[] poolLengthMax;

		[Token(Token = "0x4002876")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[HideInInspector]
		public string broadcastSpawnName;

		[Token(Token = "0x4002877")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[HideInInspector]
		public string broadcastDespawnName;

		[Token(Token = "0x4002878")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[HideInInspector]
		public bool delayedSpawnInInstall;

		[Token(Token = "0x4002879")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[HideInInspector]
		public int objectsPerUpdate;

		[Token(Token = "0x400287A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[HideInInspector]
		public bool needBroadcasting;

		[Token(Token = "0x400287B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
		[HideInInspector]
		public bool optimizeSpawn;

		[Token(Token = "0x400287C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		[HideInInspector]
		public int targetFPS;

		[Token(Token = "0x400287D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[HideInInspector]
		public bool pooling;

		[Token(Token = "0x400287E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x69")]
		[HideInInspector]
		public bool needDebugging;

		[Token(Token = "0x400287F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6A")]
		[HideInInspector]
		public bool needSort;

		[Token(Token = "0x4002880")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6B")]
		[HideInInspector]
		public bool needParenting;

		[Token(Token = "0x4002881")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private float normalValue;

		[Token(Token = "0x4002882")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Dictionary<Transform, List<Transform>> readyObjects;

		[Token(Token = "0x4002883")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Dictionary<Transform, List<Transform>> occupiedObjects;

		[Token(Token = "0x4002884")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private bool installing;

		[Token(Token = "0x6002910")]
		[Address(RVA = "0xEC6DD4", Offset = "0xEC6DD4", VA = "0xEC6DD4")]
		public int GetTemplatesCount()
		{
			return default(int);
		}

		[Token(Token = "0x6002911")]
		[Address(RVA = "0xEC6DEC", Offset = "0xEC6DEC", VA = "0xEC6DEC")]
		private bool CheckForExistingTemplate(Transform obj)
		{
			return default(bool);
		}

		[Token(Token = "0x6002912")]
		[Address(RVA = "0xEC6EA4", Offset = "0xEC6EA4", VA = "0xEC6EA4")]
		public bool Despawn(Transform obj)
		{
			return default(bool);
		}

		[Token(Token = "0x6002913")]
		[Address(RVA = "0xEC718C", Offset = "0xEC718C", VA = "0xEC718C")]
		public bool Despawn(Transform obj, Transform template)
		{
			return default(bool);
		}

		[Token(Token = "0x6002914")]
		[Address(RVA = "0xEC742C", Offset = "0xEC742C", VA = "0xEC742C")]
		public int GetTemplatePosition(Transform obj)
		{
			return default(int);
		}

		[Token(Token = "0x6002915")]
		[Address(RVA = "0xEC74EC", Offset = "0xEC74EC", VA = "0xEC74EC")]
		public Transform SpawnAudio(Transform obj, AudioClip clip, Vector3 pos, Transform par)
		{
			return null;
		}

		[Token(Token = "0x6002916")]
		[Address(RVA = "0xEC7B40", Offset = "0xEC7B40", VA = "0xEC7B40")]
		public Transform Spawn(Transform obj, Transform par, [Optional] Vector3 pos, [Optional] Quaternion rot)
		{
			return null;
		}

		[Token(Token = "0x6002917")]
		[Address(RVA = "0xEC81A8", Offset = "0xEC81A8", VA = "0xEC81A8")]
		public Transform Spawn(Transform obj, Vector3 pos, Quaternion rot, Transform par)
		{
			return null;
		}

		[Token(Token = "0x6002918")]
		[Address(RVA = "0xEC8810", Offset = "0xEC8810", VA = "0xEC8810")]
		public Transform Spawn(Transform obj, [Optional] Vector3 pos, [Optional] Quaternion rot)
		{
			return null;
		}

		[Token(Token = "0x6002919")]
		[Address(RVA = "0xEC8E3C", Offset = "0xEC8E3C", VA = "0xEC8E3C")]
		public void SetTemplates(Transform[] newArray)
		{
		}

		[Token(Token = "0x600291A")]
		[Address(RVA = "0xEC8E44", Offset = "0xEC8E44", VA = "0xEC8E44")]
		public void SetLength(int[] newPoolLenght)
		{
		}

		[Token(Token = "0x600291B")]
		[Address(RVA = "0xEC8E4C", Offset = "0xEC8E4C", VA = "0xEC8E4C")]
		public void SetLengthMax(int[] newPoolLengthMax)
		{
		}

		[Token(Token = "0x600291C")]
		[Address(RVA = "0xEC8E54", Offset = "0xEC8E54", VA = "0xEC8E54")]
		private void CalculateObjectsPerUpdate()
		{
		}

		[Token(Token = "0x600291D")]
		[Address(RVA = "0xEC8EC8", Offset = "0xEC8EC8", VA = "0xEC8EC8")]
		private void DelayedSpawnInInstall()
		{
		}

		[Token(Token = "0x600291E")]
		[Address(RVA = "0xEC9220", Offset = "0xEC9220", VA = "0xEC9220")]
		private void NonDelayedSpawnInInstall()
		{
		}

		[Token(Token = "0x600291F")]
		[Address(RVA = "0xEC9304", Offset = "0xEC9304", VA = "0xEC9304")]
		private void Update()
		{
		}

		[Token(Token = "0x6002920")]
		[Address(RVA = "0xEC8FDC", Offset = "0xEC8FDC", VA = "0xEC8FDC")]
		private Transform InstantiateItem(Transform temp, Transform par, int templatePosition)
		{
			return null;
		}

		[Token(Token = "0x6002921")]
		[Address(RVA = "0xEC9344", Offset = "0xEC9344", VA = "0xEC9344")]
		public void Install()
		{
		}

		[Token(Token = "0x6002922")]
		[Address(RVA = "0xEC9674", Offset = "0xEC9674", VA = "0xEC9674")]
		public F3DPool()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20006D2")]
	public class F3DPoolContainer
	{
		[Token(Token = "0x4002885")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string poolName;

		[Token(Token = "0x4002886")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform[] templates;

		[Token(Token = "0x4002887")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int[] poolLength;

		[Token(Token = "0x4002888")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int[] poolLengthMax;

		[Token(Token = "0x4002889")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string broadcastSpawnName;

		[Token(Token = "0x400288A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public string broadcastDespawnName;

		[Token(Token = "0x400288B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public bool delayedSpawnInInstall;

		[Token(Token = "0x400288C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public int objectsPerUpdate;

		[Token(Token = "0x400288D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public bool needBroadcasting;

		[Token(Token = "0x400288E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
		public bool optimizeSpawn;

		[Token(Token = "0x400288F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public int targetFPS;

		[Token(Token = "0x4002890")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public bool pooling;

		[Token(Token = "0x4002891")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
		public bool needSort;

		[Token(Token = "0x4002892")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x52")]
		public bool needParenting;

		[Token(Token = "0x4002893")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x53")]
		public bool needDebug;

		[Token(Token = "0x6002923")]
		[Address(RVA = "0xEC9890", Offset = "0xEC9890", VA = "0xEC9890")]
		public F3DPoolContainer()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20006D3")]
	public class F3DPoolManager : MonoBehaviour
	{
		[Token(Token = "0x4002894")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static F3DPoolManager instance;

		[Token(Token = "0x4002895")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Dictionary<string, F3DPool> Pools;

		[Token(Token = "0x4002896")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string databaseName;

		[Token(Token = "0x4002897")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int selectedItem;

		[Token(Token = "0x4002898")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool[] haveToShowArr;

		[Token(Token = "0x4002899")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private List<F3DPool> curPools;

		[Token(Token = "0x6002924")]
		[Address(RVA = "0xEC99D0", Offset = "0xEC99D0", VA = "0xEC99D0")]
		private void Awake()
		{
		}

		[Token(Token = "0x6002925")]
		[Address(RVA = "0xECA18C", Offset = "0xECA18C", VA = "0xECA18C")]
		public F3DPool GetPool(string valueName)
		{
			return null;
		}

		[Token(Token = "0x6002926")]
		[Address(RVA = "0xEC9A40", Offset = "0xEC9A40", VA = "0xEC9A40")]
		private void InstallManager()
		{
		}

		[Token(Token = "0x6002927")]
		[Address(RVA = "0xECA28C", Offset = "0xECA28C", VA = "0xECA28C")]
		public int GetPoolsCount()
		{
			return default(int);
		}

		[Token(Token = "0x6002928")]
		[Address(RVA = "0xECA2D8", Offset = "0xECA2D8", VA = "0xECA2D8")]
		public F3DPoolManager()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20006D4")]
	public class F3DPoolManagerDB : ScriptableObject
	{
		[Token(Token = "0x400289A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<string> poolsName;

		[Token(Token = "0x400289B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<F3DPoolContainer> pools;

		[Token(Token = "0x400289C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string namer;

		[Token(Token = "0x600292A")]
		[Address(RVA = "0xECA41C", Offset = "0xECA41C", VA = "0xECA41C")]
		public F3DPoolManagerDB()
		{
		}
	}
	[Token(Token = "0x20006D5")]
	public class F3DAudioController : MonoBehaviour
	{
		[Token(Token = "0x400289D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static F3DAudioController instance;

		[Token(Token = "0x400289E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private float timer_01;

		[Token(Token = "0x400289F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private float timer_02;

		[Token(Token = "0x40028A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform audioSource;

		[Token(Token = "0x40028A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[Header("Vulcan")]
		public AudioClip[] vulcanHit;

		[Token(Token = "0x40028A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public AudioClip vulcanShot;

		[Token(Token = "0x40028A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float vulcanDelay;

		[Token(Token = "0x40028A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float vulcanHitDelay;

		[Token(Token = "0x40028A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[Header("Solo gun")]
		public AudioClip[] soloGunHit;

		[Token(Token = "0x40028A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public AudioClip soloGunShot;

		[Token(Token = "0x40028A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public float soloGunDelay;

		[Token(Token = "0x40028A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public float soloGunHitDelay;

		[Token(Token = "0x40028A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[Header("Sniper")]
		public AudioClip[] sniperHit;

		[Token(Token = "0x40028AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public AudioClip sniperShot;

		[Token(Token = "0x40028AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public float sniperDelay;

		[Token(Token = "0x40028AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public float sniperHitDelay;

		[Token(Token = "0x40028AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[Header("Shot gun")]
		public AudioClip[] shotGunHit;

		[Token(Token = "0x40028AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public AudioClip shotGunShot;

		[Token(Token = "0x40028AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public float shotGunDelay;

		[Token(Token = "0x40028B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		public float shotGunHitDelay;

		[Token(Token = "0x40028B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[Header("Seeker")]
		public AudioClip[] seekerHit;

		[Token(Token = "0x40028B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public AudioClip seekerShot;

		[Token(Token = "0x40028B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public float seekerDelay;

		[Token(Token = "0x40028B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		public float seekerHitDelay;

		[Token(Token = "0x40028B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[Header("Rail gun")]
		public AudioClip[] railgunHit;

		[Token(Token = "0x40028B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public AudioClip railgunShot;

		[Token(Token = "0x40028B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public float railgunDelay;

		[Token(Token = "0x40028B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		public float railgunHitDelay;

		[Token(Token = "0x40028B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[Header("Plasma gun")]
		public AudioClip[] plasmagunHit;

		[Token(Token = "0x40028BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public AudioClip plasmagunShot;

		[Token(Token = "0x40028BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public float plasmagunDelay;

		[Token(Token = "0x40028BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		public float plasmagunHitDelay;

		[Token(Token = "0x40028BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[Header("Plasma beam")]
		public AudioClip plasmabeamOpen;

		[Token(Token = "0x40028BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		public AudioClip plasmabeamLoop;

		[Token(Token = "0x40028BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		public AudioClip plasmabeamClose;

		[Token(Token = "0x40028C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		[Header("Plasma beam heavy")]
		public AudioClip plasmabeamHeavyOpen;

		[Token(Token = "0x40028C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		public AudioClip plasmabeamHeavyLoop;

		[Token(Token = "0x40028C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		public AudioClip plasmabeamHeavyClose;

		[Token(Token = "0x40028C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		[Header("Lightning gun")]
		public AudioClip lightningGunOpen;

		[Token(Token = "0x40028C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		public AudioClip lightningGunLoop;

		[Token(Token = "0x40028C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		public AudioClip lightningGunClose;

		[Token(Token = "0x40028C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		[Header("Flame gun")]
		public AudioClip flameGunOpen;

		[Token(Token = "0x40028C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		public AudioClip flameGunLoop;

		[Token(Token = "0x40028C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		public AudioClip flameGunClose;

		[Token(Token = "0x40028C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		[Header("Laser impulse")]
		public AudioClip[] laserImpulseHit;

		[Token(Token = "0x40028CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		public AudioClip laserImpulseShot;

		[Token(Token = "0x40028CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		public float laserImpulseDelay;

		[Token(Token = "0x40028CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
		public float laserImpulseHitDelay;

		[Token(Token = "0x600292B")]
		[Address(RVA = "0xECA474", Offset = "0xECA474", VA = "0xECA474")]
		private void Awake()
		{
		}

		[Token(Token = "0x600292C")]
		[Address(RVA = "0xECA4CC", Offset = "0xECA4CC", VA = "0xECA4CC")]
		private void Update()
		{
		}

		[Token(Token = "0x600292D")]
		[Address(RVA = "0xECA50C", Offset = "0xECA50C", VA = "0xECA50C")]
		public void VulcanShot(Vector3 pos)
		{
		}

		[Token(Token = "0x600292E")]
		[Address(RVA = "0xECA6D0", Offset = "0xECA6D0", VA = "0xECA6D0")]
		public void VulcanHit(Vector3 pos)
		{
		}

		[Token(Token = "0x600292F")]
		[Address(RVA = "0xECA8D4", Offset = "0xECA8D4", VA = "0xECA8D4")]
		public void SoloGunShot(Vector3 pos)
		{
		}

		[Token(Token = "0x6002930")]
		[Address(RVA = "0xECAA98", Offset = "0xECAA98", VA = "0xECAA98")]
		public void SoloGunHit(Vector3 pos)
		{
		}

		[Token(Token = "0x6002931")]
		[Address(RVA = "0xECACA0", Offset = "0xECACA0", VA = "0xECACA0")]
		public void SniperShot(Vector3 pos)
		{
		}

		[Token(Token = "0x6002932")]
		[Address(RVA = "0xECAE64", Offset = "0xECAE64", VA = "0xECAE64")]
		public void SniperHit(Vector3 pos)
		{
		}

		[Token(Token = "0x6002933")]
		[Address(RVA = "0xECB068", Offset = "0xECB068", VA = "0xECB068")]
		public void ShotGunShot(Vector3 pos)
		{
		}

		[Token(Token = "0x6002934")]
		[Address(RVA = "0xECB22C", Offset = "0xECB22C", VA = "0xECB22C")]
		public void ShotGunHit(Vector3 pos)
		{
		}

		[Token(Token = "0x6002935")]
		[Address(RVA = "0xECB430", Offset = "0xECB430", VA = "0xECB430")]
		public void SeekerShot(Vector3 pos)
		{
		}

		[Token(Token = "0x6002936")]
		[Address(RVA = "0xECB5F4", Offset = "0xECB5F4", VA = "0xECB5F4")]
		public void SeekerHit(Vector3 pos)
		{
		}

		[Token(Token = "0x6002937")]
		[Address(RVA = "0xECB7F8", Offset = "0xECB7F8", VA = "0xECB7F8")]
		public void RailGunShot(Vector3 pos)
		{
		}

		[Token(Token = "0x6002938")]
		[Address(RVA = "0xECB9BC", Offset = "0xECB9BC", VA = "0xECB9BC")]
		public void RailGunHit(Vector3 pos)
		{
		}

		[Token(Token = "0x6002939")]
		[Address(RVA = "0xECBBC0", Offset = "0xECBBC0", VA = "0xECBBC0")]
		public void PlasmaGunShot(Vector3 pos)
		{
		}

		[Token(Token = "0x600293A")]
		[Address(RVA = "0xECBD84", Offset = "0xECBD84", VA = "0xECBD84")]
		public void PlasmaGunHit(Vector3 pos)
		{
		}

		[Token(Token = "0x600293B")]
		[Address(RVA = "0xECBF8C", Offset = "0xECBF8C", VA = "0xECBF8C")]
		public void PlasmaBeamLoop(Vector3 pos, Transform loopParent)
		{
		}

		[Token(Token = "0x600293C")]
		[Address(RVA = "0xECC264", Offset = "0xECC264", VA = "0xECC264")]
		public void PlasmaBeamClose(Vector3 pos)
		{
		}

		[Token(Token = "0x600293D")]
		[Address(RVA = "0xECC428", Offset = "0xECC428", VA = "0xECC428")]
		public void PlasmaBeamHeavyLoop(Vector3 pos, Transform loopParent)
		{
		}

		[Token(Token = "0x600293E")]
		[Address(RVA = "0xECC700", Offset = "0xECC700", VA = "0xECC700")]
		public void PlasmaBeamHeavyClose(Vector3 pos)
		{
		}

		[Token(Token = "0x600293F")]
		[Address(RVA = "0xECC8C4", Offset = "0xECC8C4", VA = "0xECC8C4")]
		public void LightningGunLoop(Vector3 pos, Transform loopParent)
		{
		}

		[Token(Token = "0x6002940")]
		[Address(RVA = "0xECCBBC", Offset = "0xECCBBC", VA = "0xECCBBC")]
		public void LightningGunClose(Vector3 pos)
		{
		}

		[Token(Token = "0x6002941")]
		[Address(RVA = "0xECCD80", Offset = "0xECCD80", VA = "0xECCD80")]
		public void FlameGunLoop(Vector3 pos, Transform loopParent)
		{
		}

		[Token(Token = "0x6002942")]
		[Address(RVA = "0xECD078", Offset = "0xECD078", VA = "0xECD078")]
		public void FlameGunClose(Vector3 pos)
		{
		}

		[Token(Token = "0x6002943")]
		[Address(RVA = "0xECD23C", Offset = "0xECD23C", VA = "0xECD23C")]
		public void LaserImpulseShot(Vector3 pos)
		{
		}

		[Token(Token = "0x6002944")]
		[Address(RVA = "0xECD400", Offset = "0xECD400", VA = "0xECD400")]
		public void LaserImpulseHit(Vector3 pos)
		{
		}

		[Token(Token = "0x6002945")]
		[Address(RVA = "0xECD60C", Offset = "0xECD60C", VA = "0xECD60C")]
		public F3DAudioController()
		{
		}
	}
	[Token(Token = "0x20006D6")]
	[RequireComponent(typeof(LineRenderer))]
	public class F3DBeam : MonoBehaviour
	{
		[Token(Token = "0x40028CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public LayerMask layerMask;

		[Token(Token = "0x40028CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public F3DFXType fxType;

		[Token(Token = "0x40028CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool OneShot;

		[Token(Token = "0x40028D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Texture[] BeamFrames;

		[Token(Token = "0x40028D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float FrameStep;

		[Token(Token = "0x40028D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float beamScale;

		[Token(Token = "0x40028D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float MaxBeamLength;

		[Token(Token = "0x40028D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public bool AnimateUV;

		[Token(Token = "0x40028D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float UVTime;

		[Token(Token = "0x40028D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Transform rayImpact;

		[Token(Token = "0x40028D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Transform rayMuzzle;

		[Token(Token = "0x40028D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private LineRenderer lineRenderer;

		[Token(Token = "0x40028D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private RaycastHit hitPoint;

		[Token(Token = "0x40028DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private RaycastHit2D hitPoint2D;

		[Token(Token = "0x40028DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private int frameNo;

		[Token(Token = "0x40028DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		private int FrameTimerID;

		[Token(Token = "0x40028DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private float beamLength;

		[Token(Token = "0x40028DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		private float initialBeamOffset;

		[Token(Token = "0x40028DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public float fxOffset;

		[Token(Token = "0x40028E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		private float animateUVTime;

		[Token(Token = "0x6002946")]
		[Address(RVA = "0xECD614", Offset = "0xECD614", VA = "0xECD614")]
		private void Awake()
		{
		}

		[Token(Token = "0x6002947")]
		[Address(RVA = "0xECD6D8", Offset = "0xECD6D8", VA = "0xECD6D8")]
		private void OnSpawned()
		{
		}

		[Token(Token = "0x6002948")]
		[Address(RVA = "0xECE0A4", Offset = "0xECE0A4", VA = "0xECE0A4")]
		private void OnDespawned()
		{
		}

		[Token(Token = "0x6002949")]
		[Address(RVA = "0xECD71C", Offset = "0xECD71C", VA = "0xECD71C")]
		private void Raycast()
		{
		}

		[Token(Token = "0x600294A")]
		[Address(RVA = "0xECE4B0", Offset = "0xECE4B0", VA = "0xECE4B0")]
		private void OnFrameStep()
		{
		}

		[Token(Token = "0x600294B")]
		[Address(RVA = "0xECDF70", Offset = "0xECDF70", VA = "0xECDF70")]
		private void Animate()
		{
		}

		[Token(Token = "0x600294C")]
		[Address(RVA = "0xECE25C", Offset = "0xECE25C", VA = "0xECE25C")]
		private void ApplyForce(float force)
		{
		}

		[Token(Token = "0x600294D")]
		[Address(RVA = "0xECE528", Offset = "0xECE528", VA = "0xECE528")]
		public void SetOffset(float offset)
		{
		}

		[Token(Token = "0x600294E")]
		[Address(RVA = "0xECE530", Offset = "0xECE530", VA = "0xECE530")]
		private void Update()
		{
		}

		[Token(Token = "0x600294F")]
		[Address(RVA = "0xECE5FC", Offset = "0xECE5FC", VA = "0xECE5FC")]
		public F3DBeam()
		{
		}
	}
	[Token(Token = "0x20006D7")]
	[RequireComponent(typeof(LineRenderer))]
	public class F3DCurvedBeam : MonoBehaviour
	{
		[Token(Token = "0x40028E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform dest;

		[Token(Token = "0x40028E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float beamScale;

		[Token(Token = "0x40028E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float UVTime;

		[Token(Token = "0x40028E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private LineRenderer lineRenderer;

		[Token(Token = "0x40028E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public int curvePoints;

		[Token(Token = "0x40028E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float curveHeight;

		[Token(Token = "0x40028E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float initialBeamOffset;

		[Token(Token = "0x6002950")]
		[Address(RVA = "0xECE604", Offset = "0xECE604", VA = "0xECE604")]
		private void Start()
		{
		}

		[Token(Token = "0x6002951")]
		[Address(RVA = "0xECE68C", Offset = "0xECE68C", VA = "0xECE68C")]
		private void Update()
		{
		}

		[Token(Token = "0x6002952")]
		[Address(RVA = "0xECEA64", Offset = "0xECEA64", VA = "0xECEA64")]
		public F3DCurvedBeam()
		{
		}
	}
	[Token(Token = "0x20006D8")]
	public class F3DDespawn : MonoBehaviour
	{
		[Token(Token = "0x40028E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float DespawnDelay;

		[Token(Token = "0x40028E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public bool DespawnOnMouseUp;

		[Token(Token = "0x40028EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private AudioSource aSrc;

		[Token(Token = "0x6002953")]
		[Address(RVA = "0xECEA6C", Offset = "0xECEA6C", VA = "0xECEA6C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6002954")]
		[Address(RVA = "0xECEAC4", Offset = "0xECEAC4", VA = "0xECEAC4")]
		public void OnSpawned()
		{
		}

		[Token(Token = "0x6002955")]
		[Address(RVA = "0xECEB98", Offset = "0xECEB98", VA = "0xECEB98")]
		public void OnDespawned()
		{
		}

		[Token(Token = "0x6002956")]
		[Address(RVA = "0xECEB9C", Offset = "0xECEB9C", VA = "0xECEB9C")]
		public void DespawnOnTimer()
		{
		}

		[Token(Token = "0x6002957")]
		[Address(RVA = "0xECEC38", Offset = "0xECEC38", VA = "0xECEC38")]
		public void Despawn()
		{
		}

		[Token(Token = "0x6002958")]
		[Address(RVA = "0xECECEC", Offset = "0xECECEC", VA = "0xECECEC")]
		private void Update()
		{
		}

		[Token(Token = "0x6002959")]
		[Address(RVA = "0xECED94", Offset = "0xECED94", VA = "0xECED94")]
		public F3DDespawn()
		{
		}
	}
	[Token(Token = "0x20006D9")]
	public class F3DFlameThrower : MonoBehaviour
	{
		[Token(Token = "0x40028EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Light pLight;

		[Token(Token = "0x40028EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ParticleSystem heat;

		[Token(Token = "0x40028ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int lightState;

		[Token(Token = "0x40028EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private bool despawn;

		[Token(Token = "0x40028EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private ParticleSystem ps;

		[Token(Token = "0x600295A")]
		[Address(RVA = "0xECED9C", Offset = "0xECED9C", VA = "0xECED9C")]
		private void Start()
		{
		}

		[Token(Token = "0x600295B")]
		[Address(RVA = "0xECEDF4", Offset = "0xECEDF4", VA = "0xECEDF4")]
		private void OnSpawned()
		{
		}

		[Token(Token = "0x600295C")]
		[Address(RVA = "0xECEE24", Offset = "0xECEE24", VA = "0xECEE24")]
		private void OnDespawned()
		{
		}

		[Token(Token = "0x600295D")]
		[Address(RVA = "0xECEE28", Offset = "0xECEE28", VA = "0xECEE28")]
		private void OnDespawn()
		{
		}

		[Token(Token = "0x600295E")]
		[Address(RVA = "0xECEEDC", Offset = "0xECEEDC", VA = "0xECEEDC")]
		private void Update()
		{
		}

		[Token(Token = "0x600295F")]
		[Address(RVA = "0xECF138", Offset = "0xECF138", VA = "0xECF138")]
		public F3DFlameThrower()
		{
		}
	}
	[Token(Token = "0x20006DA")]
	public enum F3DFXType
	{
		[Token(Token = "0x40028F1")]
		Vulcan,
		[Token(Token = "0x40028F2")]
		SoloGun,
		[Token(Token = "0x40028F3")]
		Sniper,
		[Token(Token = "0x40028F4")]
		ShotGun,
		[Token(Token = "0x40028F5")]
		Seeker,
		[Token(Token = "0x40028F6")]
		RailGun,
		[Token(Token = "0x40028F7")]
		PlasmaGun,
		[Token(Token = "0x40028F8")]
		PlasmaBeam,
		[Token(Token = "0x40028F9")]
		PlasmaBeamHeavy,
		[Token(Token = "0x40028FA")]
		LightningGun,
		[Token(Token = "0x40028FB")]
		FlameRed,
		[Token(Token = "0x40028FC")]
		LaserImpulse
	}
	[Token(Token = "0x20006DB")]
	public class F3DFXController : MonoBehaviour
	{
		[Token(Token = "0x40028FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static F3DFXController instance;

		[Token(Token = "0x40028FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private int curSocket;

		[Token(Token = "0x40028FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private int timerID;

		[Token(Token = "0x4002900")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[Header("Turret setup")]
		public Transform[] TurretSocket;

		[Token(Token = "0x4002901")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public ParticleSystem[] ShellParticles;

		[Token(Token = "0x4002902")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public F3DFXType DefaultFXType;

		[Token(Token = "0x4002903")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[Header("Vulcan")]
		public Transform vulcanProjectile;

		[Token(Token = "0x4002904")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Transform vulcanMuzzle;

		[Token(Token = "0x4002905")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Transform vulcanImpact;

		[Token(Token = "0x4002906")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public float vulcanOffset;

		[Token(Token = "0x4002907")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public float VulcanFireRate;

		[Token(Token = "0x4002908")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[Header("Solo gun")]
		public Transform soloGunProjectile;

		[Token(Token = "0x4002909")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Transform soloGunMuzzle;

		[Token(Token = "0x400290A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Transform soloGunImpact;

		[Token(Token = "0x400290B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public float soloGunOffset;

		[Token(Token = "0x400290C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[Header("Sniper")]
		public Transform sniperBeam;

		[Token(Token = "0x400290D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public Transform sniperMuzzle;

		[Token(Token = "0x400290E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public Transform sniperImpact;

		[Token(Token = "0x400290F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public float sniperOffset;

		[Token(Token = "0x4002910")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[Header("Shotgun")]
		public Transform shotGunProjectile;

		[Token(Token = "0x4002911")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public Transform shotGunMuzzle;

		[Token(Token = "0x4002912")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public Transform shotGunImpact;

		[Token(Token = "0x4002913")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public float shotGunOffset;

		[Token(Token = "0x4002914")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[Header("Seeker")]
		public Transform seekerProjectile;

		[Token(Token = "0x4002915")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public Transform seekerMuzzle;

		[Token(Token = "0x4002916")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public Transform seekerImpact;

		[Token(Token = "0x4002917")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		public float seekerOffset;

		[Token(Token = "0x4002918")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[Header("Rail gun")]
		public Transform railgunBeam;

		[Token(Token = "0x4002919")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		public Transform railgunMuzzle;

		[Token(Token = "0x400291A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		public Transform railgunImpact;

		[Token(Token = "0x400291B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		public float railgunOffset;

		[Token(Token = "0x400291C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		[Header("Plasma gun")]
		public Transform plasmagunProjectile;

		[Token(Token = "0x400291D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		public Transform plasmagunMuzzle;

		[Token(Token = "0x400291E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		public Transform plasmagunImpact;

		[Token(Token = "0x400291F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		public float plasmaGunOffset;

		[Token(Token = "0x4002920")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		[Header("Plasma beam")]
		public Transform plasmaBeam;

		[Token(Token = "0x4002921")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		public float plasmaOffset;

		[Token(Token = "0x4002922")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		[Header("Plasma beam heavy")]
		public Transform plasmaBeamHeavy;

		[Token(Token = "0x4002923")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		public float plasmaBeamHeavyOffset;

		[Token(Token = "0x4002924")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		[Header("Lightning gun")]
		public Transform lightningGunBeam;

		[Token(Token = "0x4002925")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		public float lightingGunBeamOffset;

		[Token(Token = "0x4002926")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		[Header("Flame")]
		public Transform flameRed;

		[Token(Token = "0x4002927")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		public float flameOffset;

		[Token(Token = "0x4002928")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		[Header("Laser impulse")]
		public Transform laserImpulseProjectile;

		[Token(Token = "0x4002929")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		public Transform laserImpulseMuzzle;

		[Token(Token = "0x400292A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		public Transform laserImpulseImpact;

		[Token(Token = "0x400292B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		public float laserImpulseOffset;

		[Token(Token = "0x6002960")]
		[Address(RVA = "0xECF140", Offset = "0xECF140", VA = "0xECF140")]
		private void Awake()
		{
		}

		[Token(Token = "0x6002961")]
		[Address(RVA = "0xECF25C", Offset = "0xECF25C", VA = "0xECF25C")]
		public void NextWeapon()
		{
		}

		[Token(Token = "0x6002962")]
		[Address(RVA = "0xECF338", Offset = "0xECF338", VA = "0xECF338")]
		public void PrevWeapon()
		{
		}

		[Token(Token = "0x6002963")]
		[Address(RVA = "0xECF34C", Offset = "0xECF34C", VA = "0xECF34C")]
		private void AdvanceSocket()
		{
		}

		[Token(Token = "0x6002964")]
		[Address(RVA = "0xECF380", Offset = "0xECF380", VA = "0xECF380")]
		public void Fire()
		{
		}

		[Token(Token = "0x6002965")]
		[Address(RVA = "0xED1FBC", Offset = "0xED1FBC", VA = "0xED1FBC")]
		public void Stop()
		{
		}

		[Token(Token = "0x6002966")]
		[Address(RVA = "0xECF7F4", Offset = "0xECF7F4", VA = "0xECF7F4")]
		private void Vulcan()
		{
		}

		[Token(Token = "0x6002967")]
		[Address(RVA = "0xED2148", Offset = "0xED2148", VA = "0xED2148")]
		public void VulcanImpact(Vector3 pos)
		{
		}

		[Token(Token = "0x6002968")]
		[Address(RVA = "0xECFC58", Offset = "0xECFC58", VA = "0xECFC58")]
		private void SoloGun()
		{
		}

		[Token(Token = "0x6002969")]
		[Address(RVA = "0xED228C", Offset = "0xED228C", VA = "0xED228C")]
		public void SoloGunImpact(Vector3 pos)
		{
		}

		[Token(Token = "0x600296A")]
		[Address(RVA = "0xED007C", Offset = "0xED007C", VA = "0xED007C")]
		private void Sniper()
		{
		}

		[Token(Token = "0x600296B")]
		[Address(RVA = "0xECE118", Offset = "0xECE118", VA = "0xECE118")]
		public void SniperImpact(Vector3 pos)
		{
		}

		[Token(Token = "0x600296C")]
		[Address(RVA = "0xED0480", Offset = "0xED0480", VA = "0xED0480")]
		private void ShotGun()
		{
		}

		[Token(Token = "0x600296D")]
		[Address(RVA = "0xED0810", Offset = "0xED0810", VA = "0xED0810")]
		private void Seeker()
		{
		}

		[Token(Token = "0x600296E")]
		[Address(RVA = "0xED23D0", Offset = "0xED23D0", VA = "0xED23D0")]
		public void SeekerImpact(Vector3 pos)
		{
		}

		[Token(Token = "0x600296F")]
		[Address(RVA = "0xED0BE0", Offset = "0xED0BE0", VA = "0xED0BE0")]
		private void RailGun()
		{
		}

		[Token(Token = "0x6002970")]
		[Address(RVA = "0xECE36C", Offset = "0xECE36C", VA = "0xECE36C")]
		public void RailgunImpact(Vector3 pos)
		{
		}

		[Token(Token = "0x6002971")]
		[Address(RVA = "0xED0FE4", Offset = "0xED0FE4", VA = "0xED0FE4")]
		private void PlasmaGun()
		{
		}

		[Token(Token = "0x6002972")]
		[Address(RVA = "0xED2514", Offset = "0xED2514", VA = "0xED2514")]
		public void PlasmaGunImpact(Vector3 pos)
		{
		}

		[Token(Token = "0x6002973")]
		[Address(RVA = "0xED13B4", Offset = "0xED13B4", VA = "0xED13B4")]
		private void PlasmaBeam()
		{
		}

		[Token(Token = "0x6002974")]
		[Address(RVA = "0xED15C8", Offset = "0xED15C8", VA = "0xED15C8")]
		private void PlasmaBeamHeavy()
		{
		}

		[Token(Token = "0x6002975")]
		[Address(RVA = "0xED17DC", Offset = "0xED17DC", VA = "0xED17DC")]
		private void LightningGun()
		{
		}

		[Token(Token = "0x6002976")]
		[Address(RVA = "0xED19E4", Offset = "0xED19E4", VA = "0xED19E4")]
		private void FlameRed()
		{
		}

		[Token(Token = "0x6002977")]
		[Address(RVA = "0xED1BEC", Offset = "0xED1BEC", VA = "0xED1BEC")]
		private void LaserImpulse()
		{
		}

		[Token(Token = "0x6002978")]
		[Address(RVA = "0xED2658", Offset = "0xED2658", VA = "0xED2658")]
		public void LaserImpulseImpact(Vector3 pos)
		{
		}

		[Token(Token = "0x6002979")]
		[Address(RVA = "0xED279C", Offset = "0xED279C", VA = "0xED279C")]
		public F3DFXController()
		{
		}
	}
	[Token(Token = "0x20006DC")]
	[RequireComponent(typeof(LineRenderer))]
	public class F3DLightning : MonoBehaviour
	{
		[Token(Token = "0x400292C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public LayerMask layerMask;

		[Token(Token = "0x400292D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Texture[] BeamFrames;

		[Token(Token = "0x400292E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float FrameStep;

		[Token(Token = "0x400292F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public bool RandomizeFrames;

		[Token(Token = "0x4002930")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public int Points;

		[Token(Token = "0x4002931")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float MaxBeamLength;

		[Token(Token = "0x4002932")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float beamScale;

		[Token(Token = "0x4002933")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public bool AnimateUV;

		[Token(Token = "0x4002934")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float UVTime;

		[Token(Token = "0x4002935")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public bool Oscillate;

		[Token(Token = "0x4002936")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public float Amplitude;

		[Token(Token = "0x4002937")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public float OscillateTime;

		[Token(Token = "0x4002938")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Transform rayImpact;

		[Token(Token = "0x4002939")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Transform rayMuzzle;

		[Token(Token = "0x400293A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private LineRenderer lineRenderer;

		[Token(Token = "0x400293B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private RaycastHit hitPoint;

		[Token(Token = "0x400293C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		private int frameNo;

		[Token(Token = "0x400293D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private int FrameTimerID;

		[Token(Token = "0x400293E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		private int OscillateTimerID;

		[Token(Token = "0x400293F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private float beamLength;

		[Token(Token = "0x4002940")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		private float initialBeamOffset;

		[Token(Token = "0x600297A")]
		[Address(RVA = "0xED27B8", Offset = "0xED27B8", VA = "0xED27B8")]
		private void Awake()
		{
		}

		[Token(Token = "0x600297B")]
		[Address(RVA = "0xED287C", Offset = "0xED287C", VA = "0xED287C")]
		private void OnSpawned()
		{
		}

		[Token(Token = "0x600297C")]
		[Address(RVA = "0xED2A74", Offset = "0xED2A74", VA = "0xED2A74")]
		private void OnDespawned()
		{
		}

		[Token(Token = "0x600297D")]
		[Address(RVA = "0xED2B14", Offset = "0xED2B14", VA = "0xED2B14")]
		private void Raycast()
		{
		}

		[Token(Token = "0x600297E")]
		[Address(RVA = "0xED304C", Offset = "0xED304C", VA = "0xED304C")]
		private float GetRandomNoise()
		{
			return default(float);
		}

		[Token(Token = "0x600297F")]
		[Address(RVA = "0xED305C", Offset = "0xED305C", VA = "0xED305C")]
		private void OnFrameStep()
		{
		}

		[Token(Token = "0x6002980")]
		[Address(RVA = "0xED30F8", Offset = "0xED30F8", VA = "0xED30F8")]
		private void OnOscillate()
		{
		}

		[Token(Token = "0x6002981")]
		[Address(RVA = "0xED296C", Offset = "0xED296C", VA = "0xED296C")]
		private void Animate()
		{
		}

		[Token(Token = "0x6002982")]
		[Address(RVA = "0xED2F3C", Offset = "0xED2F3C", VA = "0xED2F3C")]
		private void ApplyForce(float force)
		{
		}

		[Token(Token = "0x6002983")]
		[Address(RVA = "0xED32C8", Offset = "0xED32C8", VA = "0xED32C8")]
		private void Update()
		{
		}

		[Token(Token = "0x6002984")]
		[Address(RVA = "0xED335C", Offset = "0xED335C", VA = "0xED335C")]
		public F3DLightning()
		{
		}
	}
	[Token(Token = "0x20006DD")]
	public class F3DMissile : MonoBehaviour
	{
		[Token(Token = "0x20006DE")]
		public enum MissileType
		{
			[Token(Token = "0x4002956")]
			Unguided,
			[Token(Token = "0x4002957")]
			Guided,
			[Token(Token = "0x4002958")]
			Predictive
		}

		[Token(Token = "0x4002941")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public MissileType missileType;

		[Token(Token = "0x4002942")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform target;

		[Token(Token = "0x4002943")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public LayerMask layerMask;

		[Token(Token = "0x4002944")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float detonationDistance;

		[Token(Token = "0x4002945")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float lifeTime;

		[Token(Token = "0x4002946")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float despawnDelay;

		[Token(Token = "0x4002947")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float velocity;

		[Token(Token = "0x4002948")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float alignSpeed;

		[Token(Token = "0x4002949")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float RaycastAdvance;

		[Token(Token = "0x400294A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public bool DelayDespawn;

		[Token(Token = "0x400294B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public ParticleSystem[] delayedParticles;

		[Token(Token = "0x400294C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private ParticleSystem[] particles;

		[Token(Token = "0x400294D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private new Transform transform;

		[Token(Token = "0x400294E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private bool isHit;

		[Token(Token = "0x400294F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
		private bool isFXSpawned;

		[Token(Token = "0x4002950")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private float timer;

		[Token(Token = "0x4002951")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Vector3 targetLastPos;

		[Token(Token = "0x4002952")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private Vector3 step;

		[Token(Token = "0x4002953")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private MeshRenderer meshRenderer;

		[Token(Token = "0x4002954")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public F3DMissileLauncher launcher;

		[Token(Token = "0x6002985")]
		[Address(RVA = "0xED3364", Offset = "0xED3364", VA = "0xED3364")]
		private void Awake()
		{
		}

		[Token(Token = "0x6002986")]
		[Address(RVA = "0xED3424", Offset = "0xED3424", VA = "0xED3424")]
		public void OnSpawned()
		{
		}

		[Token(Token = "0x6002987")]
		[Address(RVA = "0xED34AC", Offset = "0xED34AC", VA = "0xED34AC")]
		public void OnDespawned()
		{
		}

		[Token(Token = "0x6002988")]
		[Address(RVA = "0xED34B0", Offset = "0xED34B0", VA = "0xED34B0")]
		private void Delay()
		{
		}

		[Token(Token = "0x6002989")]
		[Address(RVA = "0xED3630", Offset = "0xED3630", VA = "0xED3630")]
		private void OnMissileDestroy()
		{
		}

		[Token(Token = "0x600298A")]
		[Address(RVA = "0xED36D0", Offset = "0xED36D0", VA = "0xED36D0")]
		private void OnHit()
		{
		}

		[Token(Token = "0x600298B")]
		[Address(RVA = "0xED3718", Offset = "0xED3718", VA = "0xED3718")]
		private void Update()
		{
		}

		[Token(Token = "0x600298C")]
		[Address(RVA = "0xED3CB4", Offset = "0xED3CB4", VA = "0xED3CB4")]
		public F3DMissile()
		{
		}
	}
	[Token(Token = "0x20006DF")]
	public static class F3DPredictTrajectory
	{
		[Token(Token = "0x600298D")]
		[Address(RVA = "0xED3BF4", Offset = "0xED3BF4", VA = "0xED3BF4")]
		public static Vector3 Predict(Vector3 sPos, Vector3 tPos, Vector3 tLastPos, float pSpeed)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600298E")]
		[Address(RVA = "0xED3CD8", Offset = "0xED3CD8", VA = "0xED3CD8")]
		private static float GetProjFlightTime(Vector3 dist, Vector3 tVel, float pSpeed)
		{
			return default(float);
		}
	}
	[Token(Token = "0x20006E0")]
	public class F3DProjectile : MonoBehaviour
	{
		[Token(Token = "0x4002959")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public F3DFXType fxType;

		[Token(Token = "0x400295A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public LayerMask layerMask;

		[Token(Token = "0x400295B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float lifeTime;

		[Token(Token = "0x400295C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float despawnDelay;

		[Token(Token = "0x400295D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float velocity;

		[Token(Token = "0x400295E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float RaycastAdvance;

		[Token(Token = "0x400295F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool DelayDespawn;

		[Token(Token = "0x4002960")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public ParticleSystem[] delayedParticles;

		[Token(Token = "0x4002961")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private ParticleSystem[] particles;

		[Token(Token = "0x4002962")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private new Transform transform;

		[Token(Token = "0x4002963")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private RaycastHit hitPoint;

		[Token(Token = "0x4002964")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private bool isHit;

		[Token(Token = "0x4002965")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7D")]
		private bool isFXSpawned;

		[Token(Token = "0x4002966")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private float timer;

		[Token(Token = "0x4002967")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private float fxOffset;

		[Token(Token = "0x600298F")]
		[Address(RVA = "0xED3D58", Offset = "0xED3D58", VA = "0xED3D58")]
		private void Awake()
		{
		}

		[Token(Token = "0x6002990")]
		[Address(RVA = "0xED3DE8", Offset = "0xED3DE8", VA = "0xED3DE8")]
		public void OnSpawned()
		{
		}

		[Token(Token = "0x6002991")]
		[Address(RVA = "0xED3DFC", Offset = "0xED3DFC", VA = "0xED3DFC")]
		public void OnDespawned()
		{
		}

		[Token(Token = "0x6002992")]
		[Address(RVA = "0xED3E00", Offset = "0xED3E00", VA = "0xED3E00")]
		private void Delay()
		{
		}

		[Token(Token = "0x6002993")]
		[Address(RVA = "0xED3F80", Offset = "0xED3F80", VA = "0xED3F80")]
		private void OnProjectileDestroy()
		{
		}

		[Token(Token = "0x6002994")]
		[Address(RVA = "0xED4020", Offset = "0xED4020", VA = "0xED4020")]
		private void ApplyForce(float force)
		{
		}

		[Token(Token = "0x6002995")]
		[Address(RVA = "0xED412C", Offset = "0xED412C", VA = "0xED412C")]
		private void Update()
		{
		}

		[Token(Token = "0x6002996")]
		[Address(RVA = "0xED456C", Offset = "0xED456C", VA = "0xED456C")]
		public void SetOffset(float offset)
		{
		}

		[Token(Token = "0x6002997")]
		[Address(RVA = "0xED4574", Offset = "0xED4574", VA = "0xED4574")]
		public F3DProjectile()
		{
		}
	}
	[Token(Token = "0x20006E1")]
	public class F3DPulsewave : MonoBehaviour
	{
		[Token(Token = "0x4002968")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float FadeOutDelay;

		[Token(Token = "0x4002969")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float FadeOutTime;

		[Token(Token = "0x400296A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float ScaleTime;

		[Token(Token = "0x400296B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public Vector3 ScaleSize;

		[Token(Token = "0x400296C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool DebugLoop;

		[Token(Token = "0x400296D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private new Transform transform;

		[Token(Token = "0x400296E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private MeshRenderer meshRenderer;

		[Token(Token = "0x400296F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private int timerID;

		[Token(Token = "0x4002970")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private bool isFadeOut;

		[Token(Token = "0x4002971")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4D")]
		private bool isEnabled;

		[Token(Token = "0x4002972")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Color defaultColor;

		[Token(Token = "0x4002973")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Color color;

		[Token(Token = "0x4002974")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private int tintColorRef;

		[Token(Token = "0x6002998")]
		[Address(RVA = "0xED4590", Offset = "0xED4590", VA = "0xED4590")]
		private void Awake()
		{
		}

		[Token(Token = "0x6002999")]
		[Address(RVA = "0xED467C", Offset = "0xED467C", VA = "0xED467C")]
		private void Start()
		{
		}

		[Token(Token = "0x600299A")]
		[Address(RVA = "0xED468C", Offset = "0xED468C", VA = "0xED468C")]
		private void OnSpawned()
		{
		}

		[Token(Token = "0x600299B")]
		[Address(RVA = "0xED47B0", Offset = "0xED47B0", VA = "0xED47B0")]
		private void OnDespawned()
		{
		}

		[Token(Token = "0x600299C")]
		[Address(RVA = "0xED48C0", Offset = "0xED48C0", VA = "0xED48C0")]
		private void OnFadeOut()
		{
		}

		[Token(Token = "0x600299D")]
		[Address(RVA = "0xED48CC", Offset = "0xED48CC", VA = "0xED48CC")]
		private void Update()
		{
		}

		[Token(Token = "0x600299E")]
		[Address(RVA = "0xED4A48", Offset = "0xED4A48", VA = "0xED4A48")]
		public F3DPulsewave()
		{
		}
	}
	[Token(Token = "0x20006E2")]
	public class F3DRandomize : MonoBehaviour
	{
		[Token(Token = "0x4002975")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private new Transform transform;

		[Token(Token = "0x4002976")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Vector3 defaultScale;

		[Token(Token = "0x4002977")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public bool RandomScale;

		[Token(Token = "0x4002978")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2D")]
		public bool RandomRotation;

		[Token(Token = "0x4002979")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float MinScale;

		[Token(Token = "0x400297A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float MaxScale;

		[Token(Token = "0x400297B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float MinRotation;

		[Token(Token = "0x400297C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float MaxRotaion;

		[Token(Token = "0x600299F")]
		[Address(RVA = "0xED4A58", Offset = "0xED4A58", VA = "0xED4A58")]
		private void Awake()
		{
		}

		[Token(Token = "0x60029A0")]
		[Address(RVA = "0xED4AD4", Offset = "0xED4AD4", VA = "0xED4AD4")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60029A1")]
		[Address(RVA = "0xED4C20", Offset = "0xED4C20", VA = "0xED4C20")]
		public F3DRandomize()
		{
		}
	}
	[Token(Token = "0x20006E3")]
	public class F3DRift : MonoBehaviour
	{
		[Token(Token = "0x400297D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float RotationSpeed;

		[Token(Token = "0x400297E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float MorphSpeed;

		[Token(Token = "0x400297F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float MorphFactor;

		[Token(Token = "0x4002980")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private Vector3 dScale;

		[Token(Token = "0x60029A2")]
		[Address(RVA = "0xED4C28", Offset = "0xED4C28", VA = "0xED4C28")]
		private void Start()
		{
		}

		[Token(Token = "0x60029A3")]
		[Address(RVA = "0xED4C58", Offset = "0xED4C58", VA = "0xED4C58")]
		private void Update()
		{
		}

		[Token(Token = "0x60029A4")]
		[Address(RVA = "0xED4DB8", Offset = "0xED4DB8", VA = "0xED4DB8")]
		public F3DRift()
		{
		}
	}
	[Token(Token = "0x20006E4")]
	public class F3DShotgun : MonoBehaviour
	{
		[Token(Token = "0x4002981")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly List<ParticleCollisionEvent> _collisionEvents;

		[Token(Token = "0x4002982")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private ParticleSystem _ps;

		[Token(Token = "0x60029A5")]
		[Address(RVA = "0xED4DC0", Offset = "0xED4DC0", VA = "0xED4DC0")]
		private void Start()
		{
		}

		[Token(Token = "0x60029A6")]
		[Address(RVA = "0xED4E18", Offset = "0xED4E18", VA = "0xED4E18")]
		private void OnParticleCollision(GameObject other)
		{
		}

		[Token(Token = "0x60029A7")]
		[Address(RVA = "0xED510C", Offset = "0xED510C", VA = "0xED510C")]
		public F3DShotgun()
		{
		}
	}
	[Token(Token = "0x20006E5")]
	public class F3DTime : MonoBehaviour
	{
		[Token(Token = "0x20006E6")]
		private class Timer
		{
			[Token(Token = "0x4002987")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int id;

			[Token(Token = "0x4002988")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public bool isActive;

			[Token(Token = "0x4002989")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public float rate;

			[Token(Token = "0x400298A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public int ticks;

			[Token(Token = "0x400298B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public int ticksElapsed;

			[Token(Token = "0x400298C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public float last;

			[Token(Token = "0x400298D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Action callBack;

			[Token(Token = "0x60029B0")]
			[Address(RVA = "0xED53A8", Offset = "0xED53A8", VA = "0xED53A8")]
			public Timer(int id_, float rate_, int ticks_, Action callback_)
			{
			}

			[Token(Token = "0x60029B1")]
			[Address(RVA = "0xED56D4", Offset = "0xED56D4", VA = "0xED56D4")]
			public void Tick()
			{
			}
		}

		[Token(Token = "0x4002983")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static F3DTime time;

		[Token(Token = "0x4002984")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private List<Timer> timers;

		[Token(Token = "0x4002985")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private List<int> removalPending;

		[Token(Token = "0x4002986")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int idCounter;

		[Token(Token = "0x60029A8")]
		[Address(RVA = "0xED5194", Offset = "0xED5194", VA = "0xED5194")]
		private void Awake()
		{
		}

		[Token(Token = "0x60029A9")]
		[Address(RVA = "0xED47A4", Offset = "0xED47A4", VA = "0xED47A4")]
		public int AddTimer(float rate, Action callBack)
		{
			return default(int);
		}

		[Token(Token = "0x60029AA")]
		[Address(RVA = "0xED5298", Offset = "0xED5298", VA = "0xED5298")]
		public int AddTimer(float rate, int ticks, Action callBack)
		{
			return default(int);
		}

		[Token(Token = "0x60029AB")]
		[Address(RVA = "0xED4818", Offset = "0xED4818", VA = "0xED4818")]
		public void RemoveTimer(int timerId)
		{
		}

		[Token(Token = "0x60029AC")]
		[Address(RVA = "0xED5424", Offset = "0xED5424", VA = "0xED5424")]
		private void Remove()
		{
		}

		[Token(Token = "0x60029AD")]
		[Address(RVA = "0xED564C", Offset = "0xED564C", VA = "0xED564C")]
		private void Tick()
		{
		}

		[Token(Token = "0x60029AE")]
		[Address(RVA = "0xED57AC", Offset = "0xED57AC", VA = "0xED57AC")]
		private void Update()
		{
		}

		[Token(Token = "0x60029AF")]
		[Address(RVA = "0xED57C4", Offset = "0xED57C4", VA = "0xED57C4")]
		public F3DTime()
		{
		}
	}
	[Token(Token = "0x20006E7")]
	public class F3DWarpJump : MonoBehaviour
	{
		[Token(Token = "0x400298E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ParticleSystem WarpSpark;

		[Token(Token = "0x400298F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform ShipPos;

		[Token(Token = "0x4002990")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float ShipJumpSpeed;

		[Token(Token = "0x4002991")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public Vector3 ShipJumpStartPoint;

		[Token(Token = "0x4002992")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Vector3 ShipJumpEndPoint;

		[Token(Token = "0x4002993")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public bool SendOnSpawned;

		[Token(Token = "0x4002994")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x45")]
		public bool DebugLoop;

		[Token(Token = "0x4002995")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x46")]
		private bool isWarping;

		[Token(Token = "0x60029B2")]
		[Address(RVA = "0xED57CC", Offset = "0xED57CC", VA = "0xED57CC")]
		private void Start()
		{
		}

		[Token(Token = "0x60029B3")]
		[Address(RVA = "0xED58BC", Offset = "0xED58BC", VA = "0xED58BC")]
		private void Reset()
		{
		}

		[Token(Token = "0x60029B4")]
		[Address(RVA = "0xED599C", Offset = "0xED599C", VA = "0xED599C")]
		public void OnSpawned()
		{
		}

		[Token(Token = "0x60029B5")]
		[Address(RVA = "0xED5AA8", Offset = "0xED5AA8", VA = "0xED5AA8")]
		private void OnWarp()
		{
		}

		[Token(Token = "0x60029B6")]
		[Address(RVA = "0xED5AB4", Offset = "0xED5AB4", VA = "0xED5AB4")]
		private void ShiftShipPosition()
		{
		}

		[Token(Token = "0x60029B7")]
		[Address(RVA = "0xED5BB4", Offset = "0xED5BB4", VA = "0xED5BB4")]
		private void Update()
		{
		}

		[Token(Token = "0x60029B8")]
		[Address(RVA = "0xED5BC4", Offset = "0xED5BC4", VA = "0xED5BC4")]
		public F3DWarpJump()
		{
		}
	}
	[Token(Token = "0x20006E8")]
	public class F3DWarpJumpTunnel : MonoBehaviour
	{
		[Token(Token = "0x4002996")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private new Transform transform;

		[Token(Token = "0x4002997")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private MeshRenderer meshRenderer;

		[Token(Token = "0x4002998")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float StartDelay;

		[Token(Token = "0x4002999")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float FadeDelay;

		[Token(Token = "0x400299A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Vector3 ScaleTo;

		[Token(Token = "0x400299B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float ScaleTime;

		[Token(Token = "0x400299C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float ColorTime;

		[Token(Token = "0x400299D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public float ColorFadeTime;

		[Token(Token = "0x400299E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public float RotationSpeed;

		[Token(Token = "0x400299F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private bool grow;

		[Token(Token = "0x40029A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private float alpha;

		[Token(Token = "0x40029A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private int alphaID;

		[Token(Token = "0x60029B9")]
		[Address(RVA = "0xED5BCC", Offset = "0xED5BCC", VA = "0xED5BCC")]
		private void Awake()
		{
		}

		[Token(Token = "0x60029BA")]
		[Address(RVA = "0xED5C84", Offset = "0xED5C84", VA = "0xED5C84")]
		public void OnSpawned()
		{
		}

		[Token(Token = "0x60029BB")]
		[Address(RVA = "0xED5EB0", Offset = "0xED5EB0", VA = "0xED5EB0")]
		private void ToggleGrow()
		{
		}

		[Token(Token = "0x60029BC")]
		[Address(RVA = "0xED5EC0", Offset = "0xED5EC0", VA = "0xED5EC0")]
		private void Update()
		{
		}

		[Token(Token = "0x60029BD")]
		[Address(RVA = "0xED6038", Offset = "0xED6038", VA = "0xED6038")]
		public F3DWarpJumpTunnel()
		{
		}
	}
	[Token(Token = "0x20006E9")]
	public class F3DWarpTunnel : MonoBehaviour
	{
		[Token(Token = "0x20006EA")]
		[CompilerGenerated]
		private sealed class <RandomDirection>d__5 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40029A6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40029A7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40029A8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public F3DWarpTunnel <>4__this;

			[Token(Token = "0x1700029D")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60029C5")]
				[Address(RVA = "0xED62D8", Offset = "0xED62D8", VA = "0xED62D8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700029E")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60029C7")]
				[Address(RVA = "0xED6320", Offset = "0xED6320", VA = "0xED6320", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60029C2")]
			[Address(RVA = "0xED60D4", Offset = "0xED60D4", VA = "0xED60D4")]
			[DebuggerHidden]
			public <RandomDirection>d__5(int <>1__state)
			{
			}

			[Token(Token = "0x60029C3")]
			[Address(RVA = "0xED6208", Offset = "0xED6208", VA = "0xED6208", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60029C4")]
			[Address(RVA = "0xED620C", Offset = "0xED620C", VA = "0xED620C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60029C6")]
			[Address(RVA = "0xED62E0", Offset = "0xED62E0", VA = "0xED62E0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40029A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float RotationFactor;

		[Token(Token = "0x40029A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float MinTick;

		[Token(Token = "0x40029A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float MaxTick;

		[Token(Token = "0x40029A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private float angle;

		[Token(Token = "0x60029BE")]
		[Address(RVA = "0xED6040", Offset = "0xED6040", VA = "0xED6040")]
		private void Start()
		{
		}

		[Token(Token = "0x60029BF")]
		[Address(RVA = "0xED6060", Offset = "0xED6060", VA = "0xED6060")]
		[IteratorStateMachine(typeof(<RandomDirection>d__5))]
		private IEnumerator RandomDirection()
		{
			return null;
		}

		[Token(Token = "0x60029C0")]
		[Address(RVA = "0xED60FC", Offset = "0xED60FC", VA = "0xED60FC")]
		private void Update()
		{
		}

		[Token(Token = "0x60029C1")]
		[Address(RVA = "0xED61EC", Offset = "0xED61EC", VA = "0xED61EC")]
		public F3DWarpTunnel()
		{
		}
	}
	[Token(Token = "0x20006EB")]
	public class F3DMath : MonoBehaviour
	{
		[Token(Token = "0x60029C8")]
		[Address(RVA = "0xED6328", Offset = "0xED6328", VA = "0xED6328")]
		public static Vector3 ProjectVectorOnPlane(Vector3 planeNormal, Vector3 vector)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60029C9")]
		[Address(RVA = "0xED6358", Offset = "0xED6358", VA = "0xED6358")]
		public static float SignedVectorAngle(Vector3 referenceVector, Vector3 otherVector, Vector3 normal)
		{
			return default(float);
		}

		[Token(Token = "0x60029CA")]
		[Address(RVA = "0xED6514", Offset = "0xED6514", VA = "0xED6514")]
		public F3DMath()
		{
		}
	}
	[Token(Token = "0x20006EC")]
	public class F3DPlayerController : MonoBehaviour
	{
		[Token(Token = "0x40029A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public F3DTurret[] Turret;

		[Token(Token = "0x40029AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool DebugDrawTarget;

		[Token(Token = "0x40029AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private Vector3 targetPos;

		[Token(Token = "0x60029CB")]
		[Address(RVA = "0xED651C", Offset = "0xED651C", VA = "0xED651C")]
		private void Start()
		{
		}

		[Token(Token = "0x60029CC")]
		[Address(RVA = "0xED6520", Offset = "0xED6520", VA = "0xED6520")]
		private void Update()
		{
		}

		[Token(Token = "0x60029CD")]
		[Address(RVA = "0xED6844", Offset = "0xED6844", VA = "0xED6844")]
		private Vector3 GetNewTargetPos()
		{
			return default(Vector3);
		}

		[Token(Token = "0x60029CE")]
		[Address(RVA = "0xED6940", Offset = "0xED6940", VA = "0xED6940")]
		private void OnDrawGizmos()
		{
		}

		[Token(Token = "0x60029CF")]
		[Address(RVA = "0xED6A0C", Offset = "0xED6A0C", VA = "0xED6A0C")]
		public F3DPlayerController()
		{
		}
	}
	[Token(Token = "0x20006ED")]
	public class F3DPlayerTurretController : MonoBehaviour
	{
		[Token(Token = "0x40029AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private RaycastHit hitInfo;

		[Token(Token = "0x40029AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public F3DTurret turret;

		[Token(Token = "0x40029AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private bool isFiring;

		[Token(Token = "0x40029AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public F3DFXController fxController;

		[Token(Token = "0x60029D0")]
		[Address(RVA = "0xED6A1C", Offset = "0xED6A1C", VA = "0xED6A1C")]
		private void Update()
		{
		}

		[Token(Token = "0x60029D1")]
		[Address(RVA = "0xED6ACC", Offset = "0xED6ACC", VA = "0xED6ACC")]
		private void CheckForFire()
		{
		}

		[Token(Token = "0x60029D2")]
		[Address(RVA = "0xED6A34", Offset = "0xED6A34", VA = "0xED6A34")]
		private void CheckForTurn()
		{
		}

		[Token(Token = "0x60029D3")]
		[Address(RVA = "0xED6B40", Offset = "0xED6B40", VA = "0xED6B40")]
		public F3DPlayerTurretController()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20006EE")]
	public class F3DTurretConstructor : MonoBehaviour
	{
		[Token(Token = "0x40029B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject[] Breeches;

		[Token(Token = "0x40029B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject[] Barrels;

		[Token(Token = "0x40029B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameObject Base;

		[Token(Token = "0x40029B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public GameObject Swivel;

		[Token(Token = "0x40029B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public GameObject Mount;

		[Token(Token = "0x40029B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public GameObject Head;

		[Token(Token = "0x40029B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public int turretIndex;

		[Token(Token = "0x40029B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public bool needUpdateListOfTemplates;

		[Token(Token = "0x60029D4")]
		[Address(RVA = "0xED6B48", Offset = "0xED6B48", VA = "0xED6B48")]
		public int GetSelectedType()
		{
			return default(int);
		}

		[Token(Token = "0x60029D5")]
		[Address(RVA = "0xED6B50", Offset = "0xED6B50", VA = "0xED6B50")]
		public void ChangeTurretIndex(int index, TurretStructure struc)
		{
		}

		[Token(Token = "0x60029D6")]
		[Address(RVA = "0xED6C44", Offset = "0xED6C44", VA = "0xED6C44")]
		private bool CheckForName(string[] names, string name)
		{
			return default(bool);
		}

		[Token(Token = "0x60029D7")]
		[Address(RVA = "0xED6B5C", Offset = "0xED6B5C", VA = "0xED6B5C")]
		public void UpdateFullTurret(TurretStructure struc)
		{
		}

		[Token(Token = "0x60029D8")]
		[Address(RVA = "0xED78F8", Offset = "0xED78F8", VA = "0xED78F8")]
		public void UnlinkGameObject()
		{
		}

		[Token(Token = "0x60029D9")]
		[Address(RVA = "0xED6D24", Offset = "0xED6D24", VA = "0xED6D24")]
		private void InstallLods()
		{
		}

		[Token(Token = "0x60029DA")]
		[Address(RVA = "0xED7338", Offset = "0xED7338", VA = "0xED7338")]
		private void InstallTurretController()
		{
		}

		[Token(Token = "0x60029DB")]
		[Address(RVA = "0xED7950", Offset = "0xED7950", VA = "0xED7950")]
		private GameObject FindGameObject(string[] names, GameObject parent)
		{
			return null;
		}

		[Token(Token = "0x60029DC")]
		[Address(RVA = "0xED6CC4", Offset = "0xED6CC4", VA = "0xED6CC4")]
		public void UpdateTurret(TurretStructure curStructure)
		{
		}

		[Token(Token = "0x60029DD")]
		[Address(RVA = "0xED9100", Offset = "0xED9100", VA = "0xED9100")]
		private void UpdateBreeches(List<GameObject> breeches, List<string> socketNames, List<GameObject> barrels, List<string> barrelSocketNames)
		{
		}

		[Token(Token = "0x60029DE")]
		[Address(RVA = "0xED97C8", Offset = "0xED97C8", VA = "0xED97C8")]
		private GameObject UpdateBarrel(GameObject barrelGO, GameObject parentGO, string socket)
		{
			return null;
		}

		[Token(Token = "0x60029DF")]
		[Address(RVA = "0xED84B4", Offset = "0xED84B4", VA = "0xED84B4")]
		private void UpdateHead(GameObject headGO, string prefix)
		{
		}

		[Token(Token = "0x60029E0")]
		[Address(RVA = "0xED8A98", Offset = "0xED8A98", VA = "0xED8A98")]
		private void UpdateMount(GameObject mountGO, string prefix)
		{
		}

		[Token(Token = "0x60029E1")]
		[Address(RVA = "0xED7E5C", Offset = "0xED7E5C", VA = "0xED7E5C")]
		private void UpdateSwivel(GameObject swivelGO, string prefix)
		{
		}

		[Token(Token = "0x60029E2")]
		[Address(RVA = "0xED7AC8", Offset = "0xED7AC8", VA = "0xED7AC8")]
		private void UpdateBase(GameObject baseGO)
		{
		}

		[Token(Token = "0x60029E3")]
		[Address(RVA = "0xED9BC0", Offset = "0xED9BC0", VA = "0xED9BC0")]
		public F3DTurretConstructor()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20006EF")]
	public class F3DTurretScriptable : ScriptableObject
	{
		[Token(Token = "0x40029B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<TurretStructure> Turrets;

		[Token(Token = "0x40029B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<GameObject> Bases;

		[Token(Token = "0x40029BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public List<GameObject> Swivels;

		[Token(Token = "0x40029BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string SwivelPrefix;

		[Token(Token = "0x40029BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public List<GameObject> Heads;

		[Token(Token = "0x40029BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public string HeadPrefix;

		[Token(Token = "0x40029BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public List<GameObject> Mounts;

		[Token(Token = "0x40029BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public string MountPrefix;

		[Token(Token = "0x40029C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public List<GameObject> Breeches;

		[Token(Token = "0x40029C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public string BarrelPrefix;

		[Token(Token = "0x40029C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public List<GameObject> Barrels;

		[Token(Token = "0x40029C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public int SelectedTurret;

		[Token(Token = "0x40029C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public string WeaponSocket;

		[Token(Token = "0x60029E4")]
		[Address(RVA = "0xED9BC8", Offset = "0xED9BC8", VA = "0xED9BC8")]
		public F3DTurretScriptable()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20006F0")]
	public class TurretStructure
	{
		[Token(Token = "0x40029C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool NeedLOD;

		[Token(Token = "0x40029C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string Name;

		[Token(Token = "0x40029C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject Base;

		[Token(Token = "0x40029C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameObject Swivel;

		[Token(Token = "0x40029C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string SwivelPrefix;

		[Token(Token = "0x40029CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public GameObject Head;

		[Token(Token = "0x40029CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public string HeadPrefix;

		[Token(Token = "0x40029CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public GameObject Mount;

		[Token(Token = "0x40029CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public string MountPrefix;

		[Token(Token = "0x40029CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public GameObject Breech;

		[Token(Token = "0x40029CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public string BarrelPrefix;

		[Token(Token = "0x40029D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public List<string> WeaponSlotsNames;

		[Token(Token = "0x40029D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public List<GameObject> WeaponSlots;

		[Token(Token = "0x40029D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public List<GameObject> WeaponBreeches;

		[Token(Token = "0x40029D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public List<string> WeaponBarrelSockets;

		[Token(Token = "0x40029D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public List<GameObject> WeaponBarrels;

		[Token(Token = "0x40029D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public bool HasTurretScript;

		[Token(Token = "0x60029E5")]
		[Address(RVA = "0xED9E24", Offset = "0xED9E24", VA = "0xED9E24")]
		public TurretStructure()
		{
		}
	}
	[Token(Token = "0x20006F1")]
	public class F3DTurret : MonoBehaviour
	{
		[Token(Token = "0x40029D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[HideInInspector]
		public bool destroyIt;

		[Token(Token = "0x40029D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject Mount;

		[Token(Token = "0x40029D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameObject Swivel;

		[Token(Token = "0x40029D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Vector3 defaultDir;

		[Token(Token = "0x40029DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private Quaternion defaultRot;

		[Token(Token = "0x40029DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Transform headTransform;

		[Token(Token = "0x40029DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Transform barrelTransform;

		[Token(Token = "0x40029DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public float HeadingTrackingSpeed;

		[Token(Token = "0x40029DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public float ElevationTrackingSpeed;

		[Token(Token = "0x40029DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Vector3 targetPos;

		[Token(Token = "0x40029E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		[HideInInspector]
		public Vector3 headingVetor;

		[Token(Token = "0x40029E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private float curHeadingAngle;

		[Token(Token = "0x40029E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private float curElevationAngle;

		[Token(Token = "0x40029E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public Vector2 HeadingLimit;

		[Token(Token = "0x40029E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public Vector2 ElevationLimit;

		[Token(Token = "0x40029E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public bool smoothControlling;

		[Token(Token = "0x40029E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x99")]
		public bool DebugDraw;

		[Token(Token = "0x40029E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public Transform DebugTarget;

		[Token(Token = "0x40029E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private bool fullAccess;

		[Token(Token = "0x40029E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public Animator[] Animators;

		[Token(Token = "0x60029E6")]
		[Address(RVA = "0xEDA040", Offset = "0xEDA040", VA = "0xEDA040")]
		private void Awake()
		{
		}

		[Token(Token = "0x60029E7")]
		[Address(RVA = "0xED6698", Offset = "0xED6698", VA = "0xED6698")]
		public void PlayAnimation()
		{
		}

		[Token(Token = "0x60029E8")]
		[Address(RVA = "0xED6724", Offset = "0xED6724", VA = "0xED6724")]
		public void PlayAnimationLoop()
		{
		}

		[Token(Token = "0x60029E9")]
		[Address(RVA = "0xED67B4", Offset = "0xED67B4", VA = "0xED67B4")]
		public void StopAnimation()
		{
		}

		[Token(Token = "0x60029EA")]
		[Address(RVA = "0xEDA0C4", Offset = "0xEDA0C4", VA = "0xEDA0C4")]
		private void Start()
		{
		}

		[Token(Token = "0x60029EB")]
		[Address(RVA = "0xEDA1CC", Offset = "0xEDA1CC", VA = "0xEDA1CC")]
		public void SetNewTarget(Vector3 _targetPos)
		{
		}

		[Token(Token = "0x60029EC")]
		[Address(RVA = "0xEDA1D8", Offset = "0xEDA1D8", VA = "0xEDA1D8")]
		public float GetAngleToTarget()
		{
			return default(float);
		}

		[Token(Token = "0x60029ED")]
		[Address(RVA = "0xEDA334", Offset = "0xEDA334", VA = "0xEDA334")]
		private void Update()
		{
		}

		[Token(Token = "0x60029EE")]
		[Address(RVA = "0xEDB060", Offset = "0xEDB060", VA = "0xEDB060")]
		public F3DTurret()
		{
		}
	}
	[Token(Token = "0x20006F2")]
	public class F3DTurretUI : MonoBehaviour
	{
		[Token(Token = "0x40029EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private List<F3DFXController> _fxControllers;

		[Token(Token = "0x40029EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Text WeaponTypeText;

		[Token(Token = "0x40029EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private string[] _fxTypeName;

		[Token(Token = "0x60029EF")]
		[Address(RVA = "0xEDB070", Offset = "0xEDB070", VA = "0xEDB070")]
		private void Awake()
		{
		}

		[Token(Token = "0x60029F0")]
		[Address(RVA = "0xEDB138", Offset = "0xEDB138", VA = "0xEDB138")]
		private void Start()
		{
		}

		[Token(Token = "0x60029F1")]
		[Address(RVA = "0xEDB13C", Offset = "0xEDB13C", VA = "0xEDB13C")]
		private void SetWeaponTypeText()
		{
		}

		[Token(Token = "0x60029F2")]
		[Address(RVA = "0xEDB1D0", Offset = "0xEDB1D0", VA = "0xEDB1D0")]
		public void OnButtonNext()
		{
		}

		[Token(Token = "0x60029F3")]
		[Address(RVA = "0xEDB370", Offset = "0xEDB370", VA = "0xEDB370")]
		public void OnButtonPrevious()
		{
		}

		[Token(Token = "0x60029F4")]
		[Address(RVA = "0xEDB1D8", Offset = "0xEDB1D8", VA = "0xEDB1D8")]
		private void ToggleWeaponType(bool next)
		{
		}

		[Token(Token = "0x60029F5")]
		[Address(RVA = "0xEDB378", Offset = "0xEDB378", VA = "0xEDB378")]
		private void Update()
		{
		}

		[Token(Token = "0x60029F6")]
		[Address(RVA = "0xEDB3C0", Offset = "0xEDB3C0", VA = "0xEDB3C0")]
		public F3DTurretUI()
		{
		}
	}
	[Token(Token = "0x20006F3")]
	public class F3DBurnoutExample : MonoBehaviour
	{
		[Token(Token = "0x40029ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ParticleSystem[] Heat;

		[Token(Token = "0x40029EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private bool heatShow;

		[Token(Token = "0x40029EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private MeshRenderer[] _turretParts;

		[Token(Token = "0x40029F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int _burnoutId;

		[Token(Token = "0x40029F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float burnout;

		[Token(Token = "0x40029F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float heatBias;

		[Token(Token = "0x60029F7")]
		[Address(RVA = "0xEDB88C", Offset = "0xEDB88C", VA = "0xEDB88C")]
		private void Start()
		{
		}

		[Token(Token = "0x60029F8")]
		[Address(RVA = "0xEDB910", Offset = "0xEDB910", VA = "0xEDB910")]
		private void Update()
		{
		}

		[Token(Token = "0x60029F9")]
		[Address(RVA = "0xEDBA70", Offset = "0xEDBA70", VA = "0xEDBA70")]
		public F3DBurnoutExample()
		{
		}
	}
	[Token(Token = "0x20006F4")]
	public class F3DDummyEvent : MonoBehaviour
	{
		[Token(Token = "0x60029FA")]
		[Address(RVA = "0xEDBA78", Offset = "0xEDBA78", VA = "0xEDBA78")]
		private void Start()
		{
		}

		[Token(Token = "0x60029FB")]
		[Address(RVA = "0xEDBAC8", Offset = "0xEDBAC8", VA = "0xEDBAC8")]
		public F3DDummyEvent()
		{
		}
	}
	[Token(Token = "0x20006F5")]
	public class F3DMissileLauncher : MonoBehaviour
	{
		[Token(Token = "0x40029F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform missilePrefab;

		[Token(Token = "0x40029F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform target;

		[Token(Token = "0x40029F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform[] socket;

		[Token(Token = "0x40029F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Transform explosionPrefab;

		[Token(Token = "0x40029F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private F3DMissile.MissileType missileType;

		[Token(Token = "0x40029F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Text missileTypeLabel;

		[Token(Token = "0x60029FC")]
		[Address(RVA = "0xEDBAD0", Offset = "0xEDBAD0", VA = "0xEDBAD0")]
		private void Start()
		{
		}

		[Token(Token = "0x60029FD")]
		[Address(RVA = "0xEDBB30", Offset = "0xEDBB30", VA = "0xEDBB30")]
		public void SpawnExplosion(Vector3 position)
		{
		}

		[Token(Token = "0x60029FE")]
		[Address(RVA = "0xEDBC44", Offset = "0xEDBC44", VA = "0xEDBC44")]
		private void ProcessInput()
		{
		}

		[Token(Token = "0x60029FF")]
		[Address(RVA = "0xEDBF64", Offset = "0xEDBF64", VA = "0xEDBF64")]
		private void Update()
		{
		}

		[Token(Token = "0x6002A00")]
		[Address(RVA = "0xEDBF68", Offset = "0xEDBF68", VA = "0xEDBF68")]
		public F3DMissileLauncher()
		{
		}
	}
	[Token(Token = "0x20006F6")]
	public class F3DNebula : MonoBehaviour
	{
		[Token(Token = "0x6002A01")]
		[Address(RVA = "0xEDBF70", Offset = "0xEDBF70", VA = "0xEDBF70")]
		private void Start()
		{
		}

		[Token(Token = "0x6002A02")]
		[Address(RVA = "0xEDBF74", Offset = "0xEDBF74", VA = "0xEDBF74")]
		private void Update()
		{
		}

		[Token(Token = "0x6002A03")]
		[Address(RVA = "0xEDC12C", Offset = "0xEDC12C", VA = "0xEDC12C")]
		public F3DNebula()
		{
		}
	}
	[Token(Token = "0x20006F7")]
	public class F3DTrailExample : MonoBehaviour
	{
		[Token(Token = "0x40029F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float Mult;

		[Token(Token = "0x40029FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float TimeMult;

		[Token(Token = "0x40029FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Vector3 defaultPos;

		[Token(Token = "0x6002A04")]
		[Address(RVA = "0xEDC134", Offset = "0xEDC134", VA = "0xEDC134")]
		private void Start()
		{
		}

		[Token(Token = "0x6002A05")]
		[Address(RVA = "0xEDC164", Offset = "0xEDC164", VA = "0xEDC164")]
		private void Update()
		{
		}

		[Token(Token = "0x6002A06")]
		[Address(RVA = "0xEDC214", Offset = "0xEDC214", VA = "0xEDC214")]
		public F3DTrailExample()
		{
		}
	}
	[Token(Token = "0x20006F8")]
	public class F3DTurnTable : MonoBehaviour
	{
		[Token(Token = "0x40029FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float speed;

		[Token(Token = "0x6002A07")]
		[Address(RVA = "0xEDC21C", Offset = "0xEDC21C", VA = "0xEDC21C")]
		private void Start()
		{
		}

		[Token(Token = "0x6002A08")]
		[Address(RVA = "0xEDC220", Offset = "0xEDC220", VA = "0xEDC220")]
		private void Update()
		{
		}

		[Token(Token = "0x6002A09")]
		[Address(RVA = "0xEDC330", Offset = "0xEDC330", VA = "0xEDC330")]
		public F3DTurnTable()
		{
		}
	}
}
namespace TimelineExtension
{
	[Serializable]
	[Token(Token = "0x20006F9")]
	public class EventClip : PlayableAsset
	{
		[Token(Token = "0x40029FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string eventName;

		[Token(Token = "0x1700029F")]
		public override double duration
		{
			[Token(Token = "0x6002A0A")]
			[Address(RVA = "0xEDC338", Offset = "0xEDC338", VA = "0xEDC338", Slot = "7")]
			get
			{
				return default(double);
			}
		}

		[Token(Token = "0x6002A0B")]
		[Address(RVA = "0xEDC340", Offset = "0xEDC340", VA = "0xEDC340", Slot = "6")]
		public override Playable CreatePlayable(PlayableGraph graph, GameObject go)
		{
			return default(Playable);
		}

		[Token(Token = "0x6002A0C")]
		[Address(RVA = "0xEDC560", Offset = "0xEDC560", VA = "0xEDC560")]
		public EventClip()
		{
		}
	}
	[Token(Token = "0x20006FA")]
	[TrackClipType(typeof(EventClip))]
	[TrackColor(62f / 85f, 0.75686276f, 0.16862746f)]
	public class EventTrack : TrackAsset
	{
		[Token(Token = "0x6002A0D")]
		[Address(RVA = "0xEDC5C0", Offset = "0xEDC5C0", VA = "0xEDC5C0", Slot = "24")]
		public override Playable CreateTrackMixer(PlayableGraph graph, GameObject go, int inputCount)
		{
			return default(Playable);
		}

		[Token(Token = "0x6002A0E")]
		[Address(RVA = "0xEDC9E4", Offset = "0xEDC9E4", VA = "0xEDC9E4")]
		public EventTrack()
		{
		}
	}
	[Token(Token = "0x20006FB")]
	internal class UnityEventPlayable : PlayableBehaviour
	{
		[Token(Token = "0x40029FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private UnityEvent unityEvent;

		[Token(Token = "0x6002A0F")]
		[Address(RVA = "0xEDCA3C", Offset = "0xEDCA3C", VA = "0xEDCA3C")]
		public void Initialize(UnityEvent aUnityEvent)
		{
		}

		[Token(Token = "0x6002A10")]
		[Address(RVA = "0xEDCA44", Offset = "0xEDCA44", VA = "0xEDCA44")]
		public void OnTrigger()
		{
		}

		[Token(Token = "0x6002A11")]
		[Address(RVA = "0xEDCA58", Offset = "0xEDCA58", VA = "0xEDCA58", Slot = "17")]
		public override void OnBehaviourPlay(Playable playable, FrameData info)
		{
		}

		[Token(Token = "0x6002A12")]
		[Address(RVA = "0xEDC470", Offset = "0xEDC470", VA = "0xEDC470")]
		public static Playable Create(PlayableGraph graph, UnityEvent aUnityEvent)
		{
			return default(Playable);
		}

		[Token(Token = "0x6002A13")]
		[Address(RVA = "0xEDCA90", Offset = "0xEDCA90", VA = "0xEDCA90")]
		public UnityEventPlayable()
		{
		}
	}
}
namespace DG.Tweening
{
	[Token(Token = "0x20006FC")]
	public static class DOTweenModuleAudio
	{
		[Token(Token = "0x6002A14")]
		[Address(RVA = "0xEDCA98", Offset = "0xEDCA98", VA = "0xEDCA98")]
		public static TweenerCore<float, float, FloatOptions> DOFade(this AudioSource target, float endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x6002A15")]
		[Address(RVA = "0xEDCC4C", Offset = "0xEDCC4C", VA = "0xEDCC4C")]
		public static TweenerCore<float, float, FloatOptions> DOPitch(this AudioSource target, float endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x6002A16")]
		[Address(RVA = "0xEDCDD8", Offset = "0xEDCDD8", VA = "0xEDCDD8")]
		public static TweenerCore<float, float, FloatOptions> DOSetFloat(this AudioMixer target, string floatName, float endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x6002A17")]
		[Address(RVA = "0xEDCF78", Offset = "0xEDCF78", VA = "0xEDCF78")]
		public static int DOComplete(this AudioMixer target, bool withCallbacks = false)
		{
			return default(int);
		}

		[Token(Token = "0x6002A18")]
		[Address(RVA = "0xEDCFE0", Offset = "0xEDCFE0", VA = "0xEDCFE0")]
		public static int DOKill(this AudioMixer target, bool complete = false)
		{
			return default(int);
		}

		[Token(Token = "0x6002A19")]
		[Address(RVA = "0xEDD048", Offset = "0xEDD048", VA = "0xEDD048")]
		public static int DOFlip(this AudioMixer target)
		{
			return default(int);
		}

		[Token(Token = "0x6002A1A")]
		[Address(RVA = "0xEDD0A0", Offset = "0xEDD0A0", VA = "0xEDD0A0")]
		public static int DOGoto(this AudioMixer target, float to, bool andPlay = false)
		{
			return default(int);
		}

		[Token(Token = "0x6002A1B")]
		[Address(RVA = "0xEDD118", Offset = "0xEDD118", VA = "0xEDD118")]
		public static int DOPause(this AudioMixer target)
		{
			return default(int);
		}

		[Token(Token = "0x6002A1C")]
		[Address(RVA = "0xEDD170", Offset = "0xEDD170", VA = "0xEDD170")]
		public static int DOPlay(this AudioMixer target)
		{
			return default(int);
		}

		[Token(Token = "0x6002A1D")]
		[Address(RVA = "0xEDD1C8", Offset = "0xEDD1C8", VA = "0xEDD1C8")]
		public static int DOPlayBackwards(this AudioMixer target)
		{
			return default(int);
		}

		[Token(Token = "0x6002A1E")]
		[Address(RVA = "0xEDD220", Offset = "0xEDD220", VA = "0xEDD220")]
		public static int DOPlayForward(this AudioMixer target)
		{
			return default(int);
		}

		[Token(Token = "0x6002A1F")]
		[Address(RVA = "0xEDD278", Offset = "0xEDD278", VA = "0xEDD278")]
		public static int DORestart(this AudioMixer target)
		{
			return default(int);
		}

		[Token(Token = "0x6002A20")]
		[Address(RVA = "0xEDD2D8", Offset = "0xEDD2D8", VA = "0xEDD2D8")]
		public static int DORewind(this AudioMixer target)
		{
			return default(int);
		}

		[Token(Token = "0x6002A21")]
		[Address(RVA = "0xEDD334", Offset = "0xEDD334", VA = "0xEDD334")]
		public static int DOSmoothRewind(this AudioMixer target)
		{
			return default(int);
		}

		[Token(Token = "0x6002A22")]
		[Address(RVA = "0xEDD38C", Offset = "0xEDD38C", VA = "0xEDD38C")]
		public static int DOTogglePause(this AudioMixer target)
		{
			return default(int);
		}
	}
	[Token(Token = "0x2000700")]
	public static class DOTweenModulePhysics
	{
		[Token(Token = "0x6002A2C")]
		[Address(RVA = "0xEDD4AC", Offset = "0xEDD4AC", VA = "0xEDD4AC")]
		public static TweenerCore<Vector3, Vector3, VectorOptions> DOMove(this Rigidbody target, Vector3 endValue, float duration, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x6002A2D")]
		[Address(RVA = "0xEDD664", Offset = "0xEDD664", VA = "0xEDD664")]
		public static TweenerCore<Vector3, Vector3, VectorOptions> DOMoveX(this Rigidbody target, float endValue, float duration, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x6002A2E")]
		[Address(RVA = "0xEDD810", Offset = "0xEDD810", VA = "0xEDD810")]
		public static TweenerCore<Vector3, Vector3, VectorOptions> DOMoveY(this Rigidbody target, float endValue, float duration, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x6002A2F")]
		[Address(RVA = "0xEDD9BC", Offset = "0xEDD9BC", VA = "0xEDD9BC")]
		public static TweenerCore<Vector3, Vector3, VectorOptions> DOMoveZ(this Rigidbody target, float endValue, float duration, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x6002A30")]
		[Address(RVA = "0xEDDB68", Offset = "0xEDDB68", VA = "0xEDDB68")]
		public static TweenerCore<Quaternion, Vector3, QuaternionOptions> DORotate(this Rigidbody target, Vector3 endValue, float duration, RotateMode mode = RotateMode.Fast)
		{
			return null;
		}

		[Token(Token = "0x6002A31")]
		[Address(RVA = "0xEDDD1C", Offset = "0xEDDD1C", VA = "0xEDDD1C")]
		public static TweenerCore<Quaternion, Vector3, QuaternionOptions> DOLookAt(this Rigidbody target, Vector3 towards, float duration, AxisConstraint axisConstraint = AxisConstraint.None, [Optional] Vector3? up)
		{
			return null;
		}

		[Token(Token = "0x6002A32")]
		[Address(RVA = "0xEDDF84", Offset = "0xEDDF84", VA = "0xEDDF84")]
		public static Sequence DOJump(this Rigidbody target, Vector3 endValue, float jumpPower, int numJumps, float duration, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x6002A33")]
		[Address(RVA = "0xEDE490", Offset = "0xEDE490", VA = "0xEDE490")]
		public static TweenerCore<Vector3, DG.Tweening.Plugins.Core.PathCore.Path, PathOptions> DOPath(this Rigidbody target, Vector3[] path, float duration, PathType pathType = PathType.Linear, PathMode pathMode = PathMode.Full3D, int resolution = 10, [Optional] Color? gizmoColor)
		{
			return null;
		}

		[Token(Token = "0x6002A34")]
		[Address(RVA = "0xEDE704", Offset = "0xEDE704", VA = "0xEDE704")]
		public static TweenerCore<Vector3, DG.Tweening.Plugins.Core.PathCore.Path, PathOptions> DOLocalPath(this Rigidbody target, Vector3[] path, float duration, PathType pathType = PathType.Linear, PathMode pathMode = PathMode.Full3D, int resolution = 10, [Optional] Color? gizmoColor)
		{
			return null;
		}

		[Token(Token = "0x6002A35")]
		[Address(RVA = "0xEDE998", Offset = "0xEDE998", VA = "0xEDE998")]
		internal static TweenerCore<Vector3, DG.Tweening.Plugins.Core.PathCore.Path, PathOptions> DOPath(this Rigidbody target, DG.Tweening.Plugins.Core.PathCore.Path path, float duration, PathMode pathMode = PathMode.Full3D)
		{
			return null;
		}

		[Token(Token = "0x6002A36")]
		[Address(RVA = "0xEDEB6C", Offset = "0xEDEB6C", VA = "0xEDEB6C")]
		internal static TweenerCore<Vector3, DG.Tweening.Plugins.Core.PathCore.Path, PathOptions> DOLocalPath(this Rigidbody target, DG.Tweening.Plugins.Core.PathCore.Path path, float duration, PathMode pathMode = PathMode.Full3D)
		{
			return null;
		}
	}
	[Token(Token = "0x200070C")]
	public static class DOTweenModulePhysics2D
	{
		[Token(Token = "0x6002A53")]
		[Address(RVA = "0xEDF180", Offset = "0xEDF180", VA = "0xEDF180")]
		public static TweenerCore<Vector2, Vector2, VectorOptions> DOMove(this Rigidbody2D target, Vector2 endValue, float duration, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x6002A54")]
		[Address(RVA = "0xEDF330", Offset = "0xEDF330", VA = "0xEDF330")]
		public static TweenerCore<Vector2, Vector2, VectorOptions> DOMoveX(this Rigidbody2D target, float endValue, float duration, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x6002A55")]
		[Address(RVA = "0xEDF4D8", Offset = "0xEDF4D8", VA = "0xEDF4D8")]
		public static TweenerCore<Vector2, Vector2, VectorOptions> DOMoveY(this Rigidbody2D target, float endValue, float duration, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x6002A56")]
		[Address(RVA = "0xEDF680", Offset = "0xEDF680", VA = "0xEDF680")]
		public static TweenerCore<float, float, FloatOptions> DORotate(this Rigidbody2D target, float endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x6002A57")]
		[Address(RVA = "0xEDF810", Offset = "0xEDF810", VA = "0xEDF810")]
		public static Sequence DOJump(this Rigidbody2D target, Vector2 endValue, float jumpPower, int numJumps, float duration, bool snapping = false)
		{
			return null;
		}
	}
	[Token(Token = "0x2000712")]
	public static class DOTweenModuleSprite
	{
		[Token(Token = "0x6002A67")]
		[Address(RVA = "0xEDFDF8", Offset = "0xEDFDF8", VA = "0xEDFDF8")]
		public static TweenerCore<Color, Color, ColorOptions> DOColor(this SpriteRenderer target, Color endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x6002A68")]
		[Address(RVA = "0xEDFFAC", Offset = "0xEDFFAC", VA = "0xEDFFAC")]
		public static TweenerCore<Color, Color, ColorOptions> DOFade(this SpriteRenderer target, float endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x6002A69")]
		[Address(RVA = "0xEE0138", Offset = "0xEE0138", VA = "0xEE0138")]
		public static Sequence DOGradientColor(this SpriteRenderer target, Gradient gradient, float duration)
		{
			return null;
		}

		[Token(Token = "0x6002A6A")]
		[Address(RVA = "0xEE02F0", Offset = "0xEE02F0", VA = "0xEE02F0")]
		public static Tweener DOBlendableColor(this SpriteRenderer target, Color endValue, float duration)
		{
			return null;
		}
	}
	[Token(Token = "0x2000716")]
	public static class DOTweenModuleUI
	{
		[Token(Token = "0x2000717")]
		public static class Utils
		{
			[Token(Token = "0x6002A9C")]
			[Address(RVA = "0xEE4C18", Offset = "0xEE4C18", VA = "0xEE4C18")]
			public static Vector2 SwitchToRectTransform(RectTransform from, RectTransform to)
			{
				return default(Vector2);
			}
		}

		[Token(Token = "0x6002A74")]
		[Address(RVA = "0xEE05E8", Offset = "0xEE05E8", VA = "0xEE05E8")]
		public static TweenerCore<float, float, FloatOptions> DOFade(this CanvasGroup target, float endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x6002A75")]
		[Address(RVA = "0xEE0774", Offset = "0xEE0774", VA = "0xEE0774")]
		public static TweenerCore<Color, Color, ColorOptions> DOColor(this Graphic target, Color endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x6002A76")]
		[Address(RVA = "0xEE0928", Offset = "0xEE0928", VA = "0xEE0928")]
		public static TweenerCore<Color, Color, ColorOptions> DOFade(this Graphic target, float endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x6002A77")]
		[Address(RVA = "0xEE0AB4", Offset = "0xEE0AB4", VA = "0xEE0AB4")]
		public static TweenerCore<Color, Color, ColorOptions> DOColor(this Image target, Color endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x6002A78")]
		[Address(RVA = "0xEE0C68", Offset = "0xEE0C68", VA = "0xEE0C68")]
		public static TweenerCore<Color, Color, ColorOptions> DOFade(this Image target, float endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x6002A79")]
		[Address(RVA = "0xEE0DF4", Offset = "0xEE0DF4", VA = "0xEE0DF4")]
		public static TweenerCore<float, float, FloatOptions> DOFillAmount(this Image target, float endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x6002A7A")]
		[Address(RVA = "0xEE0FA4", Offset = "0xEE0FA4", VA = "0xEE0FA4")]
		public static Sequence DOGradientColor(this Image target, Gradient gradient, float duration)
		{
			return null;
		}

		[Token(Token = "0x6002A7B")]
		[Address(RVA = "0xEE1164", Offset = "0xEE1164", VA = "0xEE1164")]
		public static TweenerCore<Vector2, Vector2, VectorOptions> DOFlexibleSize(this LayoutElement target, Vector2 endValue, float duration, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x6002A7C")]
		[Address(RVA = "0xEE1310", Offset = "0xEE1310", VA = "0xEE1310")]
		public static TweenerCore<Vector2, Vector2, VectorOptions> DOMinSize(this LayoutElement target, Vector2 endValue, float duration, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x6002A7D")]
		[Address(RVA = "0xEE14BC", Offset = "0xEE14BC", VA = "0xEE14BC")]
		public static TweenerCore<Vector2, Vector2, VectorOptions> DOPreferredSize(this LayoutElement target, Vector2 endValue, float duration, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x6002A7E")]
		[Address(RVA = "0xEE1668", Offset = "0xEE1668", VA = "0xEE1668")]
		public static TweenerCore<Color, Color, ColorOptions> DOColor(this Outline target, Color endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x6002A7F")]
		[Address(RVA = "0xEE181C", Offset = "0xEE181C", VA = "0xEE181C")]
		public static TweenerCore<Color, Color, ColorOptions> DOFade(this Outline target, float endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x6002A80")]
		[Address(RVA = "0xEE19A8", Offset = "0xEE19A8", VA = "0xEE19A8")]
		public static TweenerCore<Vector2, Vector2, VectorOptions> DOScale(this Outline target, Vector2 endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x6002A81")]
		[Address(RVA = "0xEE1B44", Offset = "0xEE1B44", VA = "0xEE1B44")]
		public static TweenerCore<Vector2, Vector2, VectorOptions> DOAnchorPos(this RectTransform target, Vector2 endValue, float duration, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x6002A82")]
		[Address(RVA = "0xEE1CF0", Offset = "0xEE1CF0", VA = "0xEE1CF0")]
		public static TweenerCore<Vector2, Vector2, VectorOptions> DOAnchorPosX(this RectTransform target, float endValue, float duration, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x6002A83")]
		[Address(RVA = "0xEE1E94", Offset = "0xEE1E94", VA = "0xEE1E94")]
		public static TweenerCore<Vector2, Vector2, VectorOptions> DOAnchorPosY(this RectTransform target, float endValue, float duration, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x6002A84")]
		[Address(RVA = "0xEE2038", Offset = "0xEE2038", VA = "0xEE2038")]
		public static TweenerCore<Vector3, Vector3, VectorOptions> DOAnchorPos3D(this RectTransform target, Vector3 endValue, float duration, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x6002A85")]
		[Address(RVA = "0xEE21EC", Offset = "0xEE21EC", VA = "0xEE21EC")]
		public static TweenerCore<Vector3, Vector3, VectorOptions> DOAnchorPos3DX(this RectTransform target, float endValue, float duration, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x6002A86")]
		[Address(RVA = "0xEE2394", Offset = "0xEE2394", VA = "0xEE2394")]
		public static TweenerCore<Vector3, Vector3, VectorOptions> DOAnchorPos3DY(this RectTransform target, float endValue, float duration, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x6002A87")]
		[Address(RVA = "0xEE253C", Offset = "0xEE253C", VA = "0xEE253C")]
		public static TweenerCore<Vector3, Vector3, VectorOptions> DOAnchorPos3DZ(this RectTransform target, float endValue, float duration, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x6002A88")]
		[Address(RVA = "0xEE26E4", Offset = "0xEE26E4", VA = "0xEE26E4")]
		public static TweenerCore<Vector2, Vector2, VectorOptions> DOAnchorMax(this RectTransform target, Vector2 endValue, float duration, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x6002A89")]
		[Address(RVA = "0xEE2890", Offset = "0xEE2890", VA = "0xEE2890")]
		public static TweenerCore<Vector2, Vector2, VectorOptions> DOAnchorMin(this RectTransform target, Vector2 endValue, float duration, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x6002A8A")]
		[Address(RVA = "0xEE2A3C", Offset = "0xEE2A3C", VA = "0xEE2A3C")]
		public static TweenerCore<Vector2, Vector2, VectorOptions> DOPivot(this RectTransform target, Vector2 endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x6002A8B")]
		[Address(RVA = "0xEE2BD8", Offset = "0xEE2BD8", VA = "0xEE2BD8")]
		public static TweenerCore<Vector2, Vector2, VectorOptions> DOPivotX(this RectTransform target, float endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x6002A8C")]
		[Address(RVA = "0xEE2D78", Offset = "0xEE2D78", VA = "0xEE2D78")]
		public static TweenerCore<Vector2, Vector2, VectorOptions> DOPivotY(this RectTransform target, float endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x6002A8D")]
		[Address(RVA = "0xEE2F18", Offset = "0xEE2F18", VA = "0xEE2F18")]
		public static TweenerCore<Vector2, Vector2, VectorOptions> DOSizeDelta(this RectTransform target, Vector2 endValue, float duration, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x6002A8E")]
		[Address(RVA = "0xEE30C4", Offset = "0xEE30C4", VA = "0xEE30C4")]
		public static Tweener DOPunchAnchorPos(this RectTransform target, Vector2 punch, float duration, int vibrato = 10, float elasticity = 1f, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x6002A8F")]
		[Address(RVA = "0xEE3280", Offset = "0xEE3280", VA = "0xEE3280")]
		public static Tweener DOShakeAnchorPos(this RectTransform target, float duration, float strength = 100f, int vibrato = 10, float randomness = 90f, bool snapping = false, bool fadeOut = true)
		{
			return null;
		}

		[Token(Token = "0x6002A90")]
		[Address(RVA = "0xEE3464", Offset = "0xEE3464", VA = "0xEE3464")]
		public static Tweener DOShakeAnchorPos(this RectTransform target, float duration, Vector2 strength, int vibrato = 10, float randomness = 90f, bool snapping = false, bool fadeOut = true)
		{
			return null;
		}

		[Token(Token = "0x6002A91")]
		[Address(RVA = "0xEE3650", Offset = "0xEE3650", VA = "0xEE3650")]
		public static Sequence DOJumpAnchorPos(this RectTransform target, Vector2 endValue, float jumpPower, int numJumps, float duration, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x6002A92")]
		[Address(RVA = "0xEE3A78", Offset = "0xEE3A78", VA = "0xEE3A78")]
		public static Tweener DONormalizedPos(this ScrollRect target, Vector2 endValue, float duration, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x6002A93")]
		[Address(RVA = "0xEE3C18", Offset = "0xEE3C18", VA = "0xEE3C18")]
		public static Tweener DOHorizontalNormalizedPos(this ScrollRect target, float endValue, float duration, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x6002A94")]
		[Address(RVA = "0xEE3DA8", Offset = "0xEE3DA8", VA = "0xEE3DA8")]
		public static Tweener DOVerticalNormalizedPos(this ScrollRect target, float endValue, float duration, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x6002A95")]
		[Address(RVA = "0xEE3F38", Offset = "0xEE3F38", VA = "0xEE3F38")]
		public static TweenerCore<float, float, FloatOptions> DOValue(this Slider target, float endValue, float duration, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x6002A96")]
		[Address(RVA = "0xEE40D4", Offset = "0xEE40D4", VA = "0xEE40D4")]
		public static TweenerCore<Color, Color, ColorOptions> DOColor(this Text target, Color endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x6002A97")]
		[Address(RVA = "0xEE4288", Offset = "0xEE4288", VA = "0xEE4288")]
		public static TweenerCore<Color, Color, ColorOptions> DOFade(this Text target, float endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x6002A98")]
		[Address(RVA = "0xEE4414", Offset = "0xEE4414", VA = "0xEE4414")]
		public static TweenerCore<string, string, StringOptions> DOText(this Text target, string endValue, float duration, bool richTextEnabled = true, ScrambleMode scrambleMode = ScrambleMode.None, [Optional] string scrambleChars)
		{
			return null;
		}

		[Token(Token = "0x6002A99")]
		[Address(RVA = "0xEE45D0", Offset = "0xEE45D0", VA = "0xEE45D0")]
		public static Tweener DOBlendableColor(this Graphic target, Color endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x6002A9A")]
		[Address(RVA = "0xEE47E8", Offset = "0xEE47E8", VA = "0xEE47E8")]
		public static Tweener DOBlendableColor(this Image target, Color endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x6002A9B")]
		[Address(RVA = "0xEE4A00", Offset = "0xEE4A00", VA = "0xEE4A00")]
		public static Tweener DOBlendableColor(this Text target, Color endValue, float duration)
		{
			return null;
		}
	}
	[Token(Token = "0x200073F")]
	public static class DOTweenModuleUnityVersion
	{
		[Token(Token = "0x6002B16")]
		[Address(RVA = "0xEE5B08", Offset = "0xEE5B08", VA = "0xEE5B08")]
		public static Sequence DOGradientColor(this Material target, Gradient gradient, float duration)
		{
			return null;
		}

		[Token(Token = "0x6002B17")]
		[Address(RVA = "0xEE5CC4", Offset = "0xEE5CC4", VA = "0xEE5CC4")]
		public static Sequence DOGradientColor(this Material target, Gradient gradient, string property, float duration)
		{
			return null;
		}

		[Token(Token = "0x6002B18")]
		[Address(RVA = "0xEE5E8C", Offset = "0xEE5E8C", VA = "0xEE5E8C")]
		public static CustomYieldInstruction WaitForCompletion(this Tween t, bool returnCustomYieldInstruction)
		{
			return null;
		}

		[Token(Token = "0x6002B19")]
		[Address(RVA = "0xEE5F74", Offset = "0xEE5F74", VA = "0xEE5F74")]
		public static CustomYieldInstruction WaitForRewind(this Tween t, bool returnCustomYieldInstruction)
		{
			return null;
		}

		[Token(Token = "0x6002B1A")]
		[Address(RVA = "0xEE605C", Offset = "0xEE605C", VA = "0xEE605C")]
		public static CustomYieldInstruction WaitForKill(this Tween t, bool returnCustomYieldInstruction)
		{
			return null;
		}

		[Token(Token = "0x6002B1B")]
		[Address(RVA = "0xEE6144", Offset = "0xEE6144", VA = "0xEE6144")]
		public static CustomYieldInstruction WaitForElapsedLoops(this Tween t, int elapsedLoops, bool returnCustomYieldInstruction)
		{
			return null;
		}

		[Token(Token = "0x6002B1C")]
		[Address(RVA = "0xEE6240", Offset = "0xEE6240", VA = "0xEE6240")]
		public static CustomYieldInstruction WaitForPosition(this Tween t, float position, bool returnCustomYieldInstruction)
		{
			return null;
		}

		[Token(Token = "0x6002B1D")]
		[Address(RVA = "0xEE634C", Offset = "0xEE634C", VA = "0xEE634C")]
		public static CustomYieldInstruction WaitForStart(this Tween t, bool returnCustomYieldInstruction)
		{
			return null;
		}

		[Token(Token = "0x6002B1E")]
		[Address(RVA = "0xEE6434", Offset = "0xEE6434", VA = "0xEE6434")]
		public static TweenerCore<Vector2, Vector2, VectorOptions> DOOffset(this Material target, Vector2 endValue, int propertyID, float duration)
		{
			return null;
		}

		[Token(Token = "0x6002B1F")]
		[Address(RVA = "0xEE662C", Offset = "0xEE662C", VA = "0xEE662C")]
		public static TweenerCore<Vector2, Vector2, VectorOptions> DOTiling(this Material target, Vector2 endValue, int propertyID, float duration)
		{
			return null;
		}
	}
	[Token(Token = "0x2000742")]
	public static class DOTweenCYInstruction
	{
		[Token(Token = "0x2000743")]
		public class WaitForCompletion : CustomYieldInstruction
		{
			[Token(Token = "0x4002A58")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private readonly Tween t;

			[Token(Token = "0x170002A0")]
			public override bool keepWaiting
			{
				[Token(Token = "0x6002B26")]
				[Address(RVA = "0xEE68B4", Offset = "0xEE68B4", VA = "0xEE68B4", Slot = "7")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x6002B27")]
			[Address(RVA = "0xEE5F44", Offset = "0xEE5F44", VA = "0xEE5F44")]
			public WaitForCompletion(Tween tween)
			{
			}
		}

		[Token(Token = "0x2000744")]
		public class WaitForRewind : CustomYieldInstruction
		{
			[Token(Token = "0x4002A59")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private readonly Tween t;

			[Token(Token = "0x170002A1")]
			public override bool keepWaiting
			{
				[Token(Token = "0x6002B28")]
				[Address(RVA = "0xEE68E4", Offset = "0xEE68E4", VA = "0xEE68E4", Slot = "7")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x6002B29")]
			[Address(RVA = "0xEE602C", Offset = "0xEE602C", VA = "0xEE602C")]
			public WaitForRewind(Tween tween)
			{
			}
		}

		[Token(Token = "0x2000745")]
		public class WaitForKill : CustomYieldInstruction
		{
			[Token(Token = "0x4002A5A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private readonly Tween t;

			[Token(Token = "0x170002A2")]
			public override bool keepWaiting
			{
				[Token(Token = "0x6002B2A")]
				[Address(RVA = "0xEE6944", Offset = "0xEE6944", VA = "0xEE6944", Slot = "7")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x6002B2B")]
			[Address(RVA = "0xEE6114", Offset = "0xEE6114", VA = "0xEE6114")]
			public WaitForKill(Tween tween)
			{
			}
		}

		[Token(Token = "0x2000746")]
		public class WaitForElapsedLoops : CustomYieldInstruction
		{
			[Token(Token = "0x4002A5B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private readonly Tween t;

			[Token(Token = "0x4002A5C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private readonly int elapsedLoops;

			[Token(Token = "0x170002A3")]
			public override bool keepWaiting
			{
				[Token(Token = "0x6002B2C")]
				[Address(RVA = "0xEE6960", Offset = "0xEE6960", VA = "0xEE6960", Slot = "7")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x6002B2D")]
			[Address(RVA = "0xEE6204", Offset = "0xEE6204", VA = "0xEE6204")]
			public WaitForElapsedLoops(Tween tween, int elapsedLoops)
			{
			}
		}

		[Token(Token = "0x2000747")]
		public class WaitForPosition : CustomYieldInstruction
		{
			[Token(Token = "0x4002A5D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private readonly Tween t;

			[Token(Token = "0x4002A5E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private readonly float position;

			[Token(Token = "0x170002A4")]
			public override bool keepWaiting
			{
				[Token(Token = "0x6002B2E")]
				[Address(RVA = "0xEE69A0", Offset = "0xEE69A0", VA = "0xEE69A0", Slot = "7")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x6002B2F")]
			[Address(RVA = "0xEE6308", Offset = "0xEE6308", VA = "0xEE6308")]
			public WaitForPosition(Tween tween, float position)
			{
			}
		}

		[Token(Token = "0x2000748")]
		public class WaitForStart : CustomYieldInstruction
		{
			[Token(Token = "0x4002A5F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private readonly Tween t;

			[Token(Token = "0x170002A5")]
			public override bool keepWaiting
			{
				[Token(Token = "0x6002B30")]
				[Address(RVA = "0xEE69F8", Offset = "0xEE69F8", VA = "0xEE69F8", Slot = "7")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x6002B31")]
			[Address(RVA = "0xEE6404", Offset = "0xEE6404", VA = "0xEE6404")]
			public WaitForStart(Tween tween)
			{
			}
		}
	}
	[Token(Token = "0x2000749")]
	public static class DOTweenModuleUtils
	{
		[Token(Token = "0x200074A")]
		public static class Physics
		{
			[Token(Token = "0x6002B34")]
			[Address(RVA = "0xEE6B88", Offset = "0xEE6B88", VA = "0xEE6B88")]
			public static void SetOrientationOnPath(PathOptions options, Tween t, Quaternion newRot, Transform trans)
			{
			}

			[Token(Token = "0x6002B35")]
			[Address(RVA = "0xEE6C88", Offset = "0xEE6C88", VA = "0xEE6C88")]
			public static bool HasRigidbody2D(Component target)
			{
				return default(bool);
			}

			[Token(Token = "0x6002B36")]
			[Address(RVA = "0xEE6D14", Offset = "0xEE6D14", VA = "0xEE6D14")]
			[Preserve]
			public static bool HasRigidbody(Component target)
			{
				return default(bool);
			}

			[Token(Token = "0x6002B37")]
			[Address(RVA = "0xEE6DA0", Offset = "0xEE6DA0", VA = "0xEE6DA0")]
			[Preserve]
			public static TweenerCore<Vector3, DG.Tweening.Plugins.Core.PathCore.Path, PathOptions> CreateDOTweenPathTween(MonoBehaviour target, bool tweenRigidbody, bool isLocal, DG.Tweening.Plugins.Core.PathCore.Path path, float duration, PathMode pathMode)
			{
				return null;
			}
		}

		[Token(Token = "0x4002A60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static bool _initialized;

		[Token(Token = "0x6002B32")]
		[Address(RVA = "0xEE6A2C", Offset = "0xEE6A2C", VA = "0xEE6A2C")]
		[Preserve]
		public static void Init()
		{
		}

		[Token(Token = "0x6002B33")]
		[Address(RVA = "0xEE6AE0", Offset = "0xEE6AE0", VA = "0xEE6AE0")]
		[Preserve]
		private static void Preserver()
		{
		}
	}
}
namespace Bhaptics.Tact.Unity
{
	[Token(Token = "0x200074B")]
	public class AndroidHaptic : IHaptic
	{
		[Token(Token = "0x4002A61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected static AndroidJavaObject androidJavaObject;

		[Token(Token = "0x4002A62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		protected List<HapticDevice> deviceList;

		[Token(Token = "0x4002A63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private List<string> registeredCache;

		[Token(Token = "0x4002A64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static readonly object[] SubmitRegisteredParams;

		[Token(Token = "0x4002A65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static readonly int[] Empty;

		[Token(Token = "0x4002A66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static readonly object[] EmptyParams;

		[Token(Token = "0x4002A67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static readonly RotationOption DefaultRotationOption;

		[Token(Token = "0x4002A68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private readonly object syncLock;

		[Token(Token = "0x4002A69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Dictionary<PositionType, int[]> updatedList;

		[Token(Token = "0x4002A6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		protected IntPtr AndroidJavaObjectPtr;

		[Token(Token = "0x4002A6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		protected IntPtr SubmitRegisteredPtr;

		[Token(Token = "0x4002A6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		protected IntPtr SubmitRegisteredWithTimePtr;

		[Token(Token = "0x4002A6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		protected IntPtr RegisterPtr;

		[Token(Token = "0x4002A6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		protected IntPtr RegisterReflectedPtr;

		[Token(Token = "0x4002A6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		protected IntPtr PingPtr;

		[Token(Token = "0x4002A70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		protected IntPtr PingAllPtr;

		[Token(Token = "0x4002A71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		protected IntPtr IsRegisteredPtr;

		[Token(Token = "0x4002A72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		protected IntPtr IsPlayingPtr;

		[Token(Token = "0x4002A73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		protected IntPtr IsPlayingAnythingPtr;

		[Token(Token = "0x4002A74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		protected IntPtr ToggleStreamPtr;

		[Token(Token = "0x4002A75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		protected IntPtr IsStreamingEnablePtr;

		[Token(Token = "0x4002A76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		protected IntPtr GetStreamingHostsPtr;

		[Token(Token = "0x4002A77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		protected IntPtr ShowBluetoothPtr;

		[Token(Token = "0x4002A78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		protected IntPtr RefreshPairingInfoPtr;

		[Token(Token = "0x4002A79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		protected IntPtr EnableDevicePtr;

		[Token(Token = "0x6002B38")]
		[Address(RVA = "0xEE6EE4", Offset = "0xEE6EE4", VA = "0xEE6EE4")]
		public AndroidHaptic()
		{
		}

		[Token(Token = "0x6002B39")]
		[Address(RVA = "0xEE7944", Offset = "0xEE7944", VA = "0xEE7944")]
		public List<AndroidUtils.StreamHost> GetStreamingHosts()
		{
			return null;
		}

		[Token(Token = "0x6002B3A")]
		[Address(RVA = "0xEE7D48", Offset = "0xEE7D48", VA = "0xEE7D48")]
		public bool IsStreamingEnable()
		{
			return default(bool);
		}

		[Token(Token = "0x6002B3B")]
		[Address(RVA = "0xEE7E40", Offset = "0xEE7E40", VA = "0xEE7E40")]
		public void ToggleStreaming()
		{
		}

		[Token(Token = "0x6002B3C")]
		[Address(RVA = "0xEE7F5C", Offset = "0xEE7F5C", VA = "0xEE7F5C", Slot = "4")]
		public bool IsConnect(PositionType type)
		{
			return default(bool);
		}

		[Token(Token = "0x6002B3D")]
		[Address(RVA = "0xEE80C8", Offset = "0xEE80C8", VA = "0xEE80C8", Slot = "5")]
		public bool IsConnect(HapticDeviceType type, bool isLeft = true)
		{
			return default(bool);
		}

		[Token(Token = "0x6002B3E")]
		[Address(RVA = "0xEE8260", Offset = "0xEE8260", VA = "0xEE8260", Slot = "6")]
		public bool IsPlaying(string key)
		{
			return default(bool);
		}

		[Token(Token = "0x6002B3F")]
		[Address(RVA = "0xEE835C", Offset = "0xEE835C", VA = "0xEE835C", Slot = "7")]
		public bool IsFeedbackRegistered(string key)
		{
			return default(bool);
		}

		[Token(Token = "0x6002B40")]
		[Address(RVA = "0xEE8504", Offset = "0xEE8504", VA = "0xEE8504", Slot = "8")]
		public bool IsPlaying()
		{
			return default(bool);
		}

		[Token(Token = "0x6002B41")]
		[Address(RVA = "0xEE8598", Offset = "0xEE8598", VA = "0xEE8598", Slot = "9")]
		public void RegisterTactFileStr(string key, string tactFileStr)
		{
		}

		[Token(Token = "0x6002B42")]
		[Address(RVA = "0xEE86C8", Offset = "0xEE86C8", VA = "0xEE86C8", Slot = "10")]
		public void RegisterTactFileStrReflected(string key, string tactFileStr)
		{
		}

		[Token(Token = "0x6002B43")]
		[Address(RVA = "0xEE87F8", Offset = "0xEE87F8", VA = "0xEE87F8", Slot = "11")]
		public void Submit(string key, PositionType position, List<DotPoint> points, int durationMillis)
		{
		}

		[Token(Token = "0x6002B44")]
		[Address(RVA = "0xEE8D00", Offset = "0xEE8D00", VA = "0xEE8D00", Slot = "12")]
		public void Submit(string key, PositionType position, List<PathPoint> points, int durationMillis)
		{
		}

		[Token(Token = "0x6002B45")]
		[Address(RVA = "0xEE92CC", Offset = "0xEE92CC", VA = "0xEE92CC", Slot = "13")]
		public void SubmitRegistered(string key, string altKey, ScaleOption option)
		{
		}

		[Token(Token = "0x6002B46")]
		[Address(RVA = "0xEE9354", Offset = "0xEE9354", VA = "0xEE9354", Slot = "14")]
		public void SubmitRegistered(string key, string altKey, RotationOption rOption, ScaleOption sOption)
		{
		}

		[Token(Token = "0x6002B47")]
		[Address(RVA = "0xEE963C", Offset = "0xEE963C", VA = "0xEE963C", Slot = "15")]
		public void SubmitRegistered(string key)
		{
		}

		[Token(Token = "0x6002B48")]
		[Address(RVA = "0xEE9654", Offset = "0xEE9654", VA = "0xEE9654", Slot = "16")]
		public void SubmitRegistered(string key, int startTimeMillis)
		{
		}

		[Token(Token = "0x6002B49")]
		[Address(RVA = "0xEE9770", Offset = "0xEE9770", VA = "0xEE9770", Slot = "17")]
		public void TurnOff(string key)
		{
		}

		[Token(Token = "0x6002B4A")]
		[Address(RVA = "0xEE99AC", Offset = "0xEE99AC", VA = "0xEE99AC", Slot = "18")]
		public void TurnOff()
		{
		}

		[Token(Token = "0x6002B4B")]
		[Address(RVA = "0xEE9BC4", Offset = "0xEE9BC4", VA = "0xEE9BC4", Slot = "19")]
		public void Dispose()
		{
		}

		[Token(Token = "0x6002B4C")]
		[Address(RVA = "0xEE9374", Offset = "0xEE9374", VA = "0xEE9374")]
		private void SubmitRequest(string key, string altKey, float intensity, float duration, float offsetAngleX, float offsetY)
		{
		}

		[Token(Token = "0x6002B4D")]
		[Address(RVA = "0xEE9CDC", Offset = "0xEE9CDC", VA = "0xEE9CDC", Slot = "20")]
		public int[] GetCurrentFeedback(PositionType pos)
		{
			return null;
		}

		[Token(Token = "0x6002B4E")]
		[Address(RVA = "0xEE7838", Offset = "0xEE7838", VA = "0xEE7838")]
		public List<HapticDevice> GetDevices()
		{
			return null;
		}

		[Token(Token = "0x6002B4F")]
		[Address(RVA = "0xEEA124", Offset = "0xEEA124", VA = "0xEEA124")]
		public void TogglePosition(string address)
		{
		}

		[Token(Token = "0x6002B50")]
		[Address(RVA = "0xEEA264", Offset = "0xEEA264", VA = "0xEEA264")]
		public void PingAll()
		{
		}

		[Token(Token = "0x6002B51")]
		[Address(RVA = "0xEEA2F4", Offset = "0xEEA2F4", VA = "0xEEA2F4")]
		public void Ping(string address)
		{
		}

		[Token(Token = "0x6002B52")]
		[Address(RVA = "0xEEA3EC", Offset = "0xEEA3EC", VA = "0xEEA3EC")]
		public void ShowBluetoothSetting()
		{
		}

		[Token(Token = "0x6002B53")]
		[Address(RVA = "0xEEA488", Offset = "0xEEA488", VA = "0xEEA488")]
		public void EnableDevice(string address, bool boo)
		{
		}

		[Token(Token = "0x6002B54")]
		[Address(RVA = "0xEEA5E0", Offset = "0xEEA5E0", VA = "0xEEA5E0")]
		public void RefreshPairingInfo()
		{
		}

		[Token(Token = "0x6002B55")]
		[Address(RVA = "0xEE7ED0", Offset = "0xEE7ED0", VA = "0xEE7ED0")]
		private void CallNativeVoidMethod(IntPtr methodPtr, object[] param)
		{
		}

		[Token(Token = "0x6002B56")]
		[Address(RVA = "0xEE7DB0", Offset = "0xEE7DB0", VA = "0xEE7DB0")]
		private bool CallNativeBoolMethod(IntPtr methodPtr, object[] param)
		{
			return default(bool);
		}
	}
	[Serializable]
	[Token(Token = "0x200074C")]
	public class HapticDevice
	{
		[Token(Token = "0x4002A7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool IsPaired;

		[Token(Token = "0x4002A7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		public bool IsConnected;

		[Token(Token = "0x4002A7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string DeviceName;

		[Token(Token = "0x4002A7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PositionType Position;

		[Token(Token = "0x4002A7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string Address;

		[Token(Token = "0x4002A7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public PositionType[] Candidates;

		[Token(Token = "0x4002A80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public bool IsEnable;

		[Token(Token = "0x4002A81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
		public bool IsAudioJack;

		[Token(Token = "0x4002A82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public int Battery;

		[Token(Token = "0x6002B58")]
		[Address(RVA = "0xEEABB4", Offset = "0xEEABB4", VA = "0xEEABB4")]
		public HapticDevice()
		{
		}
	}
	[Token(Token = "0x200074D")]
	public static class AndroidUtils
	{
		[Serializable]
		[Token(Token = "0x200074E")]
		private class Wrapper<T>
		{
			[Token(Token = "0x4002A83")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public T[] array;

			[Token(Token = "0x6002B62")]
			public Wrapper()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x200074F")]
		private class Device
		{
			[Token(Token = "0x4002A84")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public bool paired;

			[Token(Token = "0x4002A85")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public string deviceName;

			[Token(Token = "0x4002A86")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public int position;

			[Token(Token = "0x4002A87")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public bool connected;

			[Token(Token = "0x4002A88")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public string address;

			[Token(Token = "0x4002A89")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public int battery;

			[Token(Token = "0x4002A8A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			public bool enable;

			[Token(Token = "0x4002A8B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x35")]
			public bool audioJackIn;

			[Token(Token = "0x6002B63")]
			[Address(RVA = "0xEEAE58", Offset = "0xEEAE58", VA = "0xEEAE58")]
			public Device()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000750")]
		public class StreamHost
		{
			[Token(Token = "0x4002A8C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string ip;

			[Token(Token = "0x4002A8D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public bool connected;

			[Token(Token = "0x6002B64")]
			[Address(RVA = "0xEEAE60", Offset = "0xEEAE60", VA = "0xEEAE60")]
			public StreamHost()
			{
			}
		}

		[Token(Token = "0x6002B59")]
		[Address(RVA = "0xEEABBC", Offset = "0xEEABBC", VA = "0xEEABBC")]
		private static PositionType ToDeviceType(int type)
		{
			return default(PositionType);
		}

		[Token(Token = "0x6002B5A")]
		[Address(RVA = "0xEEABE0", Offset = "0xEEABE0", VA = "0xEEABE0")]
		private static PositionType[] ToCandidates(int type)
		{
			return null;
		}

		[Token(Token = "0x6002B5B")]
		[Address(RVA = "0xEEAD34", Offset = "0xEEAD34", VA = "0xEEAD34")]
		public static bool IsLeft(PositionType pos)
		{
			return default(bool);
		}

		[Token(Token = "0x6002B5C")]
		[Address(RVA = "0xEEAD5C", Offset = "0xEEAD5C", VA = "0xEEAD5C")]
		public static bool CanChangePosition(PositionType pos)
		{
			return default(bool);
		}

		[Token(Token = "0x6002B5D")]
		public static T[] GetJsonArray<T>(string json)
		{
			return null;
		}

		[Token(Token = "0x6002B5E")]
		[Address(RVA = "0xEEAD6C", Offset = "0xEEAD6C", VA = "0xEEAD6C")]
		private static HapticDevice Convert(Device d)
		{
			return null;
		}

		[Token(Token = "0x6002B5F")]
		[Address(RVA = "0xEE9FD4", Offset = "0xEE9FD4", VA = "0xEE9FD4")]
		public static List<HapticDevice> ConvertToBhapticsDevices(string[] deviceJson)
		{
			return null;
		}

		[Token(Token = "0x6002B60")]
		[Address(RVA = "0xEEA67C", Offset = "0xEEA67C", VA = "0xEEA67C")]
		public static void CallNativeVoidMethod(IntPtr androidObjPtr, IntPtr methodPtr, object[] param)
		{
		}

		[Token(Token = "0x6002B61")]
		[Address(RVA = "0xEEA884", Offset = "0xEEA884", VA = "0xEEA884")]
		public static bool CallNativeBoolMethod(IntPtr androidObjPtr, IntPtr methodPtr, object[] param)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000751")]
	public class AndroidWidget_ControlButton : MonoBehaviour
	{
		[Token(Token = "0x4002A8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private PositionType DeviceType;

		[Token(Token = "0x4002A8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		[Header("Images")]
		private Sprite defaultImage;

		[Token(Token = "0x4002A90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Sprite pairImage;

		[Token(Token = "0x4002A91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Sprite defaultHoverImage;

		[Token(Token = "0x4002A92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Sprite pairHoverImage;

		[Token(Token = "0x4002A93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Transform pairDeviceCount;

		[Token(Token = "0x4002A94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Button button;

		[Token(Token = "0x6002B65")]
		[Address(RVA = "0xEEAE68", Offset = "0xEEAE68", VA = "0xEEAE68")]
		private void Awake()
		{
		}

		[Token(Token = "0x6002B66")]
		[Address(RVA = "0xEEAF30", Offset = "0xEEAF30", VA = "0xEEAF30")]
		public void Refresh()
		{
		}

		[Token(Token = "0x6002B67")]
		[Address(RVA = "0xEEB498", Offset = "0xEEB498", VA = "0xEEB498")]
		public void OnPingDevice()
		{
		}

		[Token(Token = "0x6002B68")]
		[Address(RVA = "0xEEB4F4", Offset = "0xEEB4F4", VA = "0xEEB4F4")]
		public void OnClickDevice()
		{
		}

		[Token(Token = "0x6002B69")]
		[Address(RVA = "0xEEB584", Offset = "0xEEB584", VA = "0xEEB584")]
		public AndroidWidget_ControlButton()
		{
		}
	}
	[Token(Token = "0x2000752")]
	public class AndroidWidget_ObjectPool : MonoBehaviour
	{
		[Token(Token = "0x4002A95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private ScrollRect pariedDeviceScrollrect;

		[Token(Token = "0x4002A96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private AndroidWidget_PairedDeviceUI pairedDeviceUIGameObject;

		[Token(Token = "0x4002A97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private int objectCount;

		[Token(Token = "0x4002A98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private List<AndroidWidget_PairedDeviceUI> pairedUIList;

		[Token(Token = "0x6002B6A")]
		[Address(RVA = "0xEEB58C", Offset = "0xEEB58C", VA = "0xEEB58C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6002B6B")]
		[Address(RVA = "0xEEB764", Offset = "0xEEB764", VA = "0xEEB764")]
		public AndroidWidget_PairedDeviceUI GetPairedDeviceUI()
		{
			return null;
		}

		[Token(Token = "0x6002B6C")]
		[Address(RVA = "0xEEB824", Offset = "0xEEB824", VA = "0xEEB824")]
		public void DisableAll()
		{
		}

		[Token(Token = "0x6002B6D")]
		[Address(RVA = "0xEEB8C0", Offset = "0xEEB8C0", VA = "0xEEB8C0")]
		public AndroidWidget_ObjectPool()
		{
		}
	}
	[Token(Token = "0x2000753")]
	public class AndroidWidget_PairedDeviceUI : MonoBehaviour
	{
		[Token(Token = "0x4002A99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		[Header("[UI]")]
		private Image deviceImage;

		[Token(Token = "0x4002A9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Text deviceName;

		[Token(Token = "0x4002A9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Button pingButton;

		[Token(Token = "0x4002A9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Button toggleButton;

		[Token(Token = "0x4002A9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[Header("[Sprites]")]
		[SerializeField]
		private Sprite leftSide;

		[Token(Token = "0x4002A9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Sprite rightSide;

		[Token(Token = "0x4002A9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private HapticDevice device;

		[Token(Token = "0x6002B6E")]
		[Address(RVA = "0xEEB8C8", Offset = "0xEEB8C8", VA = "0xEEB8C8")]
		private void Start()
		{
		}

		[Token(Token = "0x6002B6F")]
		[Address(RVA = "0xEEB9B8", Offset = "0xEEB9B8", VA = "0xEEB9B8")]
		public void Refresh(HapticDevice tactDevice, Bhaptics_Widget_Setting setting)
		{
		}

		[Token(Token = "0x6002B70")]
		[Address(RVA = "0xEEBB64", Offset = "0xEEBB64", VA = "0xEEBB64")]
		private void OnPing()
		{
		}

		[Token(Token = "0x6002B71")]
		[Address(RVA = "0xEEBBDC", Offset = "0xEEBBDC", VA = "0xEEBBDC")]
		private void OnSwap()
		{
		}

		[Token(Token = "0x6002B72")]
		[Address(RVA = "0xEEBCB0", Offset = "0xEEBCB0", VA = "0xEEBCB0")]
		public AndroidWidget_PairedDeviceUI()
		{
		}
	}
	[Token(Token = "0x2000754")]
	public class AndroidWidget_SettingUIAnimation : MonoBehaviour
	{
		[Token(Token = "0x4002AA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject SettingUI;

		[Token(Token = "0x4002AA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Animator animator;

		[Token(Token = "0x4002AA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool settingPanelEnable;

		[Token(Token = "0x6002B73")]
		[Address(RVA = "0xEEBCB8", Offset = "0xEEBCB8", VA = "0xEEBCB8")]
		private void Start()
		{
		}

		[Token(Token = "0x6002B74")]
		[Address(RVA = "0xEEBD28", Offset = "0xEEBD28", VA = "0xEEBD28")]
		public void Hide()
		{
		}

		[Token(Token = "0x6002B75")]
		[Address(RVA = "0xEEBD48", Offset = "0xEEBD48", VA = "0xEEBD48")]
		public void Show()
		{
		}

		[Token(Token = "0x6002B76")]
		[Address(RVA = "0xEEBD68", Offset = "0xEEBD68", VA = "0xEEBD68")]
		public void ToggleSettingButton()
		{
		}

		[Token(Token = "0x6002B77")]
		[Address(RVA = "0xEEBE88", Offset = "0xEEBE88", VA = "0xEEBE88")]
		public AndroidWidget_SettingUIAnimation()
		{
		}
	}
	[Token(Token = "0x2000755")]
	public class AndroidWidget_UI : MonoBehaviour
	{
		[Token(Token = "0x4002AA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject uiContainer;

		[Token(Token = "0x4002AA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Button pingAllButton;

		[Token(Token = "0x4002AA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[Header("DeviceImages")]
		[SerializeField]
		private Bhaptics_Widget_Setting WidgetSetting;

		[Token(Token = "0x4002AA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private AndroidWidget_ObjectPool settingObjectPool;

		[Token(Token = "0x4002AA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private AudioSource buttonClickAudio;

		[Token(Token = "0x4002AA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Animator animator;

		[Token(Token = "0x4002AA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private bool widgetActive;

		[Token(Token = "0x4002AAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private AndroidWidget_ControlButton[] controllButtons;

		[Token(Token = "0x4002AAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static AndroidWidget_UI Instance;

		[Token(Token = "0x6002B78")]
		[Address(RVA = "0xEEBE90", Offset = "0xEEBE90", VA = "0xEEBE90")]
		private void Awake()
		{
		}

		[Token(Token = "0x6002B79")]
		[Address(RVA = "0xEEC2D4", Offset = "0xEEC2D4", VA = "0xEEC2D4")]
		private void Start()
		{
		}

		[Token(Token = "0x6002B7A")]
		[Address(RVA = "0xEEC080", Offset = "0xEEC080", VA = "0xEEC080")]
		private void InitializeButtons()
		{
		}

		[Token(Token = "0x6002B7B")]
		[Address(RVA = "0xEEC4DC", Offset = "0xEEC4DC", VA = "0xEEC4DC")]
		public void ToggleWidgetButton()
		{
		}

		[Token(Token = "0x6002B7C")]
		[Address(RVA = "0xEEC578", Offset = "0xEEC578", VA = "0xEEC578")]
		public void ShowWidget()
		{
		}

		[Token(Token = "0x6002B7D")]
		[Address(RVA = "0xEEC598", Offset = "0xEEC598", VA = "0xEEC598")]
		public void HideWidget()
		{
		}

		[Token(Token = "0x6002B7E")]
		[Address(RVA = "0xEEC5B8", Offset = "0xEEC5B8", VA = "0xEEC5B8")]
		public void ButtonClickSound()
		{
		}

		[Token(Token = "0x6002B7F")]
		[Address(RVA = "0xEEC5D4", Offset = "0xEEC5D4", VA = "0xEEC5D4")]
		private void RefreshPairedDevices(List<HapticDevice> devices)
		{
		}

		[Token(Token = "0x6002B80")]
		[Address(RVA = "0xEEC3E0", Offset = "0xEEC3E0", VA = "0xEEC3E0")]
		public void Refresh()
		{
		}

		[Token(Token = "0x6002B81")]
		[Address(RVA = "0xEEC7D4", Offset = "0xEEC7D4", VA = "0xEEC7D4")]
		public AndroidWidget_UI()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000756")]
	public class PositonIconSetting
	{
		[Token(Token = "0x4002AAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Sprite connect;

		[Token(Token = "0x4002AAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Sprite disconnect;

		[Token(Token = "0x6002B82")]
		[Address(RVA = "0xEEC7E4", Offset = "0xEEC7E4", VA = "0xEEC7E4")]
		public PositonIconSetting()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000757")]
	public class IconSetting
	{
		[Token(Token = "0x4002AAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[Header("[Setting Icons]")]
		public PositonIconSetting Vest;

		[Token(Token = "0x4002AAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public PositonIconSetting Head;

		[Token(Token = "0x4002AB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PositonIconSetting Arm;

		[Token(Token = "0x4002AB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public PositonIconSetting Foot;

		[Token(Token = "0x4002AB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public PositonIconSetting Hand;

		[Token(Token = "0x6002B83")]
		[Address(RVA = "0xEEC7EC", Offset = "0xEEC7EC", VA = "0xEEC7EC")]
		public IconSetting()
		{
		}
	}
	[Token(Token = "0x2000758")]
	public class Android_DeviceController : MonoBehaviour
	{
		[Token(Token = "0x4002AB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		[Header("UI")]
		private Image icon;

		[Token(Token = "0x4002AB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private IconSetting widgetSetting;

		[Token(Token = "0x4002AB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Sprite TactsuitWiredIcon;

		[Token(Token = "0x4002AB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Image batteryLowImage;

		[Token(Token = "0x4002AB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[Header("Connect Menu")]
		[SerializeField]
		private GameObject ConnectMenu;

		[Token(Token = "0x4002AB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Button pingButton;

		[Token(Token = "0x4002AB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private Button lButton;

		[Token(Token = "0x4002ABA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private Button rButton;

		[Token(Token = "0x4002ABB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private GameObject wiredNotification;

		[Token(Token = "0x4002ABC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[Header("Disconnect Menu")]
		[SerializeField]
		private GameObject DisconnectMenu;

		[Token(Token = "0x4002ABD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static string SelectHexColor;

		[Token(Token = "0x4002ABE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static string SelectHoverHexColor;

		[Token(Token = "0x4002ABF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static string DisableHexColor;

		[Token(Token = "0x4002AC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static string DisableHoverHexColor;

		[Token(Token = "0x4002AC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private HapticDevice device;

		[Token(Token = "0x6002B84")]
		[Address(RVA = "0xEEC7F4", Offset = "0xEEC7F4", VA = "0xEEC7F4")]
		private void Awake()
		{
		}

		[Token(Token = "0x6002B85")]
		[Address(RVA = "0xEEC9D4", Offset = "0xEEC9D4", VA = "0xEEC9D4")]
		public void RefreshDevice(HapticDevice d)
		{
		}

		[Token(Token = "0x6002B86")]
		[Address(RVA = "0xEECB8C", Offset = "0xEECB8C", VA = "0xEECB8C")]
		private void RenderConnectMenu()
		{
		}

		[Token(Token = "0x6002B87")]
		[Address(RVA = "0xEECC14", Offset = "0xEECC14", VA = "0xEECC14")]
		private void RenderDisconnectMenu()
		{
		}

		[Token(Token = "0x6002B88")]
		[Address(RVA = "0xEECC84", Offset = "0xEECC84", VA = "0xEECC84")]
		private void UpdateButtons()
		{
		}

		[Token(Token = "0x6002B89")]
		[Address(RVA = "0xEECA84", Offset = "0xEECA84", VA = "0xEECA84")]
		private void UpdateIcon(HapticDevice d)
		{
		}

		[Token(Token = "0x6002B8A")]
		[Address(RVA = "0xEED0A8", Offset = "0xEED0A8", VA = "0xEED0A8")]
		private Sprite GetSprite(PositonIconSetting icon, bool connected)
		{
			return null;
		}

		[Token(Token = "0x6002B8B")]
		[Address(RVA = "0xEED0D0", Offset = "0xEED0D0", VA = "0xEED0D0")]
		private void Ping()
		{
		}

		[Token(Token = "0x6002B8C")]
		[Address(RVA = "0xEED13C", Offset = "0xEED13C", VA = "0xEED13C")]
		private void ToLeft()
		{
		}

		[Token(Token = "0x6002B8D")]
		[Address(RVA = "0xEED214", Offset = "0xEED214", VA = "0xEED214")]
		private void ToRight()
		{
		}

		[Token(Token = "0x6002B8E")]
		[Address(RVA = "0xEED2EC", Offset = "0xEED2EC", VA = "0xEED2EC")]
		private Color ToColor(string hex)
		{
			return default(Color);
		}

		[Token(Token = "0x6002B8F")]
		[Address(RVA = "0xEECF74", Offset = "0xEECF74", VA = "0xEECF74")]
		private void ChangeButtonColor(Button targetButton, bool isSelect)
		{
		}

		[Token(Token = "0x6002B90")]
		[Address(RVA = "0xEECF0C", Offset = "0xEECF0C", VA = "0xEECF0C")]
		private static bool IsLeft(PositionType pos)
		{
			return default(bool);
		}

		[Token(Token = "0x6002B91")]
		[Address(RVA = "0xEECF40", Offset = "0xEECF40", VA = "0xEECF40")]
		private static bool IsRight(PositionType pos)
		{
			return default(bool);
		}

		[Token(Token = "0x6002B92")]
		[Address(RVA = "0xEED320", Offset = "0xEED320", VA = "0xEED320")]
		public Android_DeviceController()
		{
		}
	}
	[Token(Token = "0x2000759")]
	public class Android_UIController : MonoBehaviour
	{
		[Token(Token = "0x4002AC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private RectTransform mainPanel;

		[Token(Token = "0x4002AC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Transform devicesContainer;

		[Token(Token = "0x4002AC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Transform deviceListPageUi;

		[Token(Token = "0x4002AC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Button deviceListNextPageButton;

		[Token(Token = "0x4002AC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Button deviceListBackPageButton;

		[Token(Token = "0x4002AC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Text deviceListPageText;

		[Token(Token = "0x4002AC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private Android_DeviceController devicePrefab;

		[Token(Token = "0x4002AC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Header("No Paired Device UI")]
		[SerializeField]
		private GameObject noPairedDeviceUi;

		[Token(Token = "0x4002ACA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private Button helpButton;

		[Token(Token = "0x4002ACB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private Button bHpaticsLinkButton;

		[Token(Token = "0x4002ACC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private GameObject helpUi;

		[Token(Token = "0x4002ACD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private Button helpCloseButton;

		[Token(Token = "0x4002ACE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private List<Android_DeviceController> controllers;

		[Token(Token = "0x4002ACF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private BoxCollider mainPanelCollider;

		[Token(Token = "0x4002AD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Vector2 defaultMainPanelSize;

		[Token(Token = "0x4002AD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Vector2 defaultDeviceContainerSize;

		[Token(Token = "0x4002AD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private int deviceListSize;

		[Token(Token = "0x4002AD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		private int deviceListPageIndex;

		[Token(Token = "0x4002AD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private int expandHeight;

		[Token(Token = "0x4002AD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		private int expandDeviceCount;

		[Token(Token = "0x4002AD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private int pageActivateDeviceCount;

		[Token(Token = "0x4002AD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		private int pageExpandHeight;

		[Token(Token = "0x4002AD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private int maxPageIndex;

		[Token(Token = "0x6002B94")]
		[Address(RVA = "0xEED41C", Offset = "0xEED41C", VA = "0xEED41C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6002B95")]
		[Address(RVA = "0xEED9D4", Offset = "0xEED9D4", VA = "0xEED9D4")]
		private void Refresh()
		{
		}

		[Token(Token = "0x6002B96")]
		[Address(RVA = "0xEEE138", Offset = "0xEEE138", VA = "0xEEE138")]
		private void OnHelp()
		{
		}

		[Token(Token = "0x6002B97")]
		[Address(RVA = "0xEEE1C0", Offset = "0xEEE1C0", VA = "0xEEE1C0")]
		private void CloseHelpNotification()
		{
		}

		[Token(Token = "0x6002B98")]
		[Address(RVA = "0xEEE248", Offset = "0xEEE248", VA = "0xEEE248")]
		private void OpenLink()
		{
		}

		[Token(Token = "0x6002B99")]
		[Address(RVA = "0xEEE28C", Offset = "0xEEE28C", VA = "0xEEE28C")]
		private void NextPage()
		{
		}

		[Token(Token = "0x6002B9A")]
		[Address(RVA = "0xEEE2B0", Offset = "0xEEE2B0", VA = "0xEEE2B0")]
		private void BackPage()
		{
		}

		[Token(Token = "0x6002B9B")]
		[Address(RVA = "0xEEE2D4", Offset = "0xEEE2D4", VA = "0xEEE2D4")]
		public Android_UIController()
		{
		}
	}
	[Token(Token = "0x200075A")]
	public class BhapticsAndroidManager : MonoBehaviour
	{
		[Token(Token = "0x4002AD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static BhapticsAndroidManager Instance;

		[Token(Token = "0x4002ADA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static bool pcAndoidTestMode;

		[Token(Token = "0x4002ADB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private List<HapticDevice> Devices;

		[Token(Token = "0x4002ADC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static List<UnityAction> refreshActions;

		[Token(Token = "0x6002B9C")]
		[Address(RVA = "0xEEE370", Offset = "0xEEE370", VA = "0xEEE370")]
		private void Awake()
		{
		}

		[Token(Token = "0x6002B9D")]
		[Address(RVA = "0xEEE484", Offset = "0xEEE484", VA = "0xEEE484")]
		private void Start()
		{
		}

		[Token(Token = "0x6002B9E")]
		[Address(RVA = "0xEEE51C", Offset = "0xEEE51C", VA = "0xEEE51C")]
		private void RefreshDevices()
		{
		}

		[Token(Token = "0x6002B9F")]
		[Address(RVA = "0xEEEA54", Offset = "0xEEEA54", VA = "0xEEEA54")]
		public static void Ping(PositionType pos)
		{
		}

		[Token(Token = "0x6002BA0")]
		[Address(RVA = "0xEEF028", Offset = "0xEEF028", VA = "0xEEF028")]
		public static void TogglePosition(string address)
		{
		}

		[Token(Token = "0x6002BA1")]
		[Address(RVA = "0xEEEEBC", Offset = "0xEEEEBC", VA = "0xEEEEBC")]
		public static void Ping(HapticDevice device)
		{
		}

		[Token(Token = "0x6002BA2")]
		[Address(RVA = "0xEEF0C0", Offset = "0xEEF0C0", VA = "0xEEF0C0")]
		public static void PingAll()
		{
		}

		[Token(Token = "0x6002BA3")]
		[Address(RVA = "0xEEE034", Offset = "0xEEE034", VA = "0xEEE034")]
		public static List<HapticDevice> GetDevices()
		{
			return null;
		}

		[Token(Token = "0x6002BA4")]
		[Address(RVA = "0xEEEC64", Offset = "0xEEEC64", VA = "0xEEEC64")]
		public static List<HapticDevice> GetConnectedDevices(PositionType pos)
		{
			return null;
		}

		[Token(Token = "0x6002BA5")]
		[Address(RVA = "0xEEF144", Offset = "0xEEF144", VA = "0xEEF144")]
		public static List<HapticDevice> GetPairedDevices(PositionType pos)
		{
			return null;
		}

		[Token(Token = "0x6002BA6")]
		[Address(RVA = "0xEED8FC", Offset = "0xEED8FC", VA = "0xEED8FC")]
		public static void AddRefreshAction(UnityAction action)
		{
		}

		[Token(Token = "0x6002BA7")]
		[Address(RVA = "0xEEF394", Offset = "0xEEF394", VA = "0xEEF394")]
		public static void RemoveRefreshAction()
		{
		}

		[Token(Token = "0x6002BA8")]
		[Address(RVA = "0xEEF42C", Offset = "0xEEF42C", VA = "0xEEF42C")]
		public static bool IsStreaming()
		{
			return default(bool);
		}

		[Token(Token = "0x6002BA9")]
		[Address(RVA = "0xEEF4B4", Offset = "0xEEF4B4", VA = "0xEEF4B4")]
		public static void ToggleStreaming()
		{
		}

		[Token(Token = "0x6002BAA")]
		[Address(RVA = "0xEEF538", Offset = "0xEEF538", VA = "0xEEF538")]
		public static List<AndroidUtils.StreamHost> GetStreamingHosts()
		{
			return null;
		}

		[Token(Token = "0x6002BAB")]
		[Address(RVA = "0xEEF5F8", Offset = "0xEEF5F8", VA = "0xEEF5F8")]
		public static void ShowBluetoothSetting()
		{
		}

		[Token(Token = "0x6002BAC")]
		[Address(RVA = "0xEEF67C", Offset = "0xEEF67C", VA = "0xEEF67C")]
		public static void ToggleEnableDevice(HapticDevice device)
		{
		}

		[Token(Token = "0x6002BAD")]
		[Address(RVA = "0xEEF724", Offset = "0xEEF724", VA = "0xEEF724")]
		private void OnApplicationFocus(bool pauseStatus)
		{
		}

		[Token(Token = "0x6002BAE")]
		[Address(RVA = "0xEEF7BC", Offset = "0xEEF7BC", VA = "0xEEF7BC")]
		public BhapticsAndroidManager()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200075B")]
	public class SettingDeviceIcon
	{
		[Token(Token = "0x4002ADD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Sprite pairImage;

		[Token(Token = "0x4002ADE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Sprite unpairImage;

		[Token(Token = "0x6002BB0")]
		[Address(RVA = "0xEEF8E0", Offset = "0xEEF8E0", VA = "0xEEF8E0")]
		public SettingDeviceIcon()
		{
		}
	}
	[Token(Token = "0x200075C")]
	public class Bhaptics_Widget_Setting : ScriptableObject
	{
		[Token(Token = "0x4002ADF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Header("[Setting Icons]")]
		public SettingDeviceIcon SettingTactot;

		[Token(Token = "0x4002AE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SettingDeviceIcon SettingTactal;

		[Token(Token = "0x4002AE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public SettingDeviceIcon SettingTactosyArm;

		[Token(Token = "0x4002AE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public SettingDeviceIcon SettingTactosyFoot;

		[Token(Token = "0x4002AE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public SettingDeviceIcon SettingTactosyHand;

		[Token(Token = "0x6002BB1")]
		[Address(RVA = "0xEEF8E8", Offset = "0xEEF8E8", VA = "0xEEF8E8")]
		public Sprite GetPairedDeviceSprite(HapticDevice device)
		{
			return null;
		}

		[Token(Token = "0x6002BB2")]
		[Address(RVA = "0xEEFA44", Offset = "0xEEFA44", VA = "0xEEFA44")]
		public Bhaptics_Widget_Setting()
		{
		}
	}
	[Token(Token = "0x200075D")]
	public class HapticApi
	{
		[Token(Token = "0x200075E")]
		public struct point
		{
			[Token(Token = "0x4002AE4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public float x;

			[Token(Token = "0x4002AE5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public float y;

			[Token(Token = "0x4002AE6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public int intensity;

			[Token(Token = "0x4002AE7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public int motorCount;
		}

		[Token(Token = "0x200075F")]
		public struct status
		{
			[Token(Token = "0x4002AE8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int[] values;
		}

		[PreserveSig]
		[Token(Token = "0x6002BB3")]
		[Address(RVA = "0xEEFA4C", Offset = "0xEEFA4C", VA = "0xEEFA4C")]
		public static extern bool TryGetExePath(byte[] buf, ref int size);

		[PreserveSig]
		[Token(Token = "0x6002BB4")]
		[Address(RVA = "0xEEFAE0", Offset = "0xEEFAE0", VA = "0xEEFAE0")]
		public static extern void Initialise(string appId, string appName);

		[PreserveSig]
		[Token(Token = "0x6002BB5")]
		[Address(RVA = "0xEEFB8C", Offset = "0xEEFB8C", VA = "0xEEFB8C")]
		public static extern void Destroy();

		[PreserveSig]
		[Token(Token = "0x6002BB6")]
		[Address(RVA = "0xEEFBF0", Offset = "0xEEFBF0", VA = "0xEEFBF0")]
		public static extern void RegisterFeedback(string str, string projectJson);

		[PreserveSig]
		[Token(Token = "0x6002BB7")]
		[Address(RVA = "0xEEFC98", Offset = "0xEEFC98", VA = "0xEEFC98")]
		public static extern void RegisterFeedbackFromTactFile(string str, string tactFileStr);

		[PreserveSig]
		[Token(Token = "0x6002BB8")]
		[Address(RVA = "0xEEFD44", Offset = "0xEEFD44", VA = "0xEEFD44")]
		public static extern void RegisterFeedbackFromTactFileReflected(string str, string tactFileStr);

		[PreserveSig]
		[Token(Token = "0x6002BB9")]
		[Address(RVA = "0xEEFDF0", Offset = "0xEEFDF0", VA = "0xEEFDF0")]
		public static extern void SubmitRegistered(string key);

		[PreserveSig]
		[Token(Token = "0x6002BBA")]
		[Address(RVA = "0xEEFE7C", Offset = "0xEEFE7C", VA = "0xEEFE7C")]
		public static extern void SubmitRegisteredStartMillis(string key, int startTimeMillis);

		[PreserveSig]
		[Token(Token = "0x6002BBB")]
		[Address(RVA = "0xEEFF10", Offset = "0xEEFF10", VA = "0xEEFF10")]
		public static extern void SubmitRegisteredWithOption(string key, string altKey, float intensity, float duration, float offsetX, float offsetY);

		[PreserveSig]
		[Token(Token = "0x6002BBC")]
		[Address(RVA = "0xEEFFEC", Offset = "0xEEFFEC", VA = "0xEEFFEC")]
		public static extern void SubmitByteArray(string key, PositionType pos, byte[] charPtr, int length, int durationMillis);

		[PreserveSig]
		[Token(Token = "0x6002BBD")]
		[Address(RVA = "0xEF00B0", Offset = "0xEF00B0", VA = "0xEF00B0")]
		public static extern void SubmitPathArray(string key, PositionType pos, point[] charPtr, int length, int durationMillis);

		[PreserveSig]
		[Token(Token = "0x6002BBE")]
		[Address(RVA = "0xEF0174", Offset = "0xEF0174", VA = "0xEF0174")]
		public static extern bool IsFeedbackRegistered(string key);

		[PreserveSig]
		[Token(Token = "0x6002BBF")]
		[Address(RVA = "0xEF020C", Offset = "0xEF020C", VA = "0xEF020C")]
		public static extern bool IsPlaying();

		[PreserveSig]
		[Token(Token = "0x6002BC0")]
		[Address(RVA = "0xEF027C", Offset = "0xEF027C", VA = "0xEF027C")]
		public static extern bool IsPlayingKey(string key);

		[PreserveSig]
		[Token(Token = "0x6002BC1")]
		[Address(RVA = "0xEF0314", Offset = "0xEF0314", VA = "0xEF0314")]
		public static extern void TurnOff();

		[PreserveSig]
		[Token(Token = "0x6002BC2")]
		[Address(RVA = "0xEF0378", Offset = "0xEF0378", VA = "0xEF0378")]
		public static extern void TurnOffKey(string key);

		[PreserveSig]
		[Token(Token = "0x6002BC3")]
		[Address(RVA = "0xEF0404", Offset = "0xEF0404", VA = "0xEF0404")]
		public static extern void EnableFeedback();

		[PreserveSig]
		[Token(Token = "0x6002BC4")]
		[Address(RVA = "0xEF0464", Offset = "0xEF0464", VA = "0xEF0464")]
		public static extern void DisableFeedback();

		[PreserveSig]
		[Token(Token = "0x6002BC5")]
		[Address(RVA = "0xEF04C8", Offset = "0xEF04C8", VA = "0xEF04C8")]
		public static extern void ToggleFeedback();

		[PreserveSig]
		[Token(Token = "0x6002BC6")]
		[Address(RVA = "0xEF0528", Offset = "0xEF0528", VA = "0xEF0528")]
		public static extern bool IsDevicePlaying(PositionType pos);

		[PreserveSig]
		[Token(Token = "0x6002BC7")]
		[Address(RVA = "0xEF05AC", Offset = "0xEF05AC", VA = "0xEF05AC")]
		public static extern bool TryGetResponseForPosition(PositionType pos, out status status);

		[Token(Token = "0x6002BC8")]
		[Address(RVA = "0xEF0670", Offset = "0xEF0670", VA = "0xEF0670")]
		public HapticApi()
		{
		}
	}
	[Token(Token = "0x2000760")]
	public class ArmsHapticClip : FileHapticClip
	{
		[Token(Token = "0x4002AE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public bool IsReflect;

		[Token(Token = "0x6002BC9")]
		[Address(RVA = "0xEF0678", Offset = "0xEF0678", VA = "0xEF0678", Slot = "12")]
		public override void Play(float intensity, float duration, float vestRotationAngleX, float vestRotationOffsetY, string identifier = "")
		{
		}

		[Token(Token = "0x6002BCA")]
		[Address(RVA = "0xEF0A20", Offset = "0xEF0A20", VA = "0xEF0A20", Slot = "17")]
		public override void ResetValues()
		{
		}

		[Token(Token = "0x6002BCB")]
		[Address(RVA = "0xEF0A3C", Offset = "0xEF0A3C", VA = "0xEF0A3C")]
		public ArmsHapticClip()
		{
		}
	}
	[Token(Token = "0x2000761")]
	public class BhapticsHaptic : IHaptic
	{
		[Token(Token = "0x6002BCC")]
		[Address(RVA = "0xEF0A64", Offset = "0xEF0A64", VA = "0xEF0A64")]
		public BhapticsHaptic()
		{
		}

		[Token(Token = "0x6002BCD")]
		[Address(RVA = "0xEF0A94", Offset = "0xEF0A94", VA = "0xEF0A94", Slot = "4")]
		public bool IsConnect(PositionType type)
		{
			return default(bool);
		}

		[Token(Token = "0x6002BCE")]
		[Address(RVA = "0xEF0A9C", Offset = "0xEF0A9C", VA = "0xEF0A9C", Slot = "5")]
		public bool IsConnect(HapticDeviceType type, bool isLeft = true)
		{
			return default(bool);
		}

		[Token(Token = "0x6002BCF")]
		[Address(RVA = "0xEF0B50", Offset = "0xEF0B50", VA = "0xEF0B50", Slot = "6")]
		public bool IsPlaying(string key)
		{
			return default(bool);
		}

		[Token(Token = "0x6002BD0")]
		[Address(RVA = "0xEF0B58", Offset = "0xEF0B58", VA = "0xEF0B58", Slot = "7")]
		public bool IsFeedbackRegistered(string key)
		{
			return default(bool);
		}

		[Token(Token = "0x6002BD1")]
		[Address(RVA = "0xEF0B60", Offset = "0xEF0B60", VA = "0xEF0B60", Slot = "8")]
		public bool IsPlaying()
		{
			return default(bool);
		}

		[Token(Token = "0x6002BD2")]
		[Address(RVA = "0xEF0B64", Offset = "0xEF0B64", VA = "0xEF0B64", Slot = "9")]
		public void RegisterTactFileStr(string key, string tactFileStr)
		{
		}

		[Token(Token = "0x6002BD3")]
		[Address(RVA = "0xEF0B70", Offset = "0xEF0B70", VA = "0xEF0B70", Slot = "10")]
		public void RegisterTactFileStrReflected(string key, string tactFileStr)
		{
		}

		[Token(Token = "0x6002BD4")]
		[Address(RVA = "0xEF0B7C", Offset = "0xEF0B7C", VA = "0xEF0B7C", Slot = "11")]
		public void Submit(string key, PositionType position, List<DotPoint> points, int durationMillis)
		{
		}

		[Token(Token = "0x6002BD5")]
		[Address(RVA = "0xEF0C7C", Offset = "0xEF0C7C", VA = "0xEF0C7C", Slot = "12")]
		public void Submit(string key, PositionType position, List<PathPoint> points, int durationMillis)
		{
		}

		[Token(Token = "0x6002BD6")]
		[Address(RVA = "0xEF0DFC", Offset = "0xEF0DFC", VA = "0xEF0DFC", Slot = "13")]
		public void SubmitRegistered(string key, string altKey, ScaleOption option)
		{
		}

		[Token(Token = "0x6002BD7")]
		[Address(RVA = "0xEF0E24", Offset = "0xEF0E24", VA = "0xEF0E24", Slot = "14")]
		public void SubmitRegistered(string key, string altKey, RotationOption rOption, ScaleOption sOption)
		{
		}

		[Token(Token = "0x6002BD8")]
		[Address(RVA = "0xEF0E4C", Offset = "0xEF0E4C", VA = "0xEF0E4C", Slot = "15")]
		public void SubmitRegistered(string key)
		{
		}

		[Token(Token = "0x6002BD9")]
		[Address(RVA = "0xEF0E54", Offset = "0xEF0E54", VA = "0xEF0E54", Slot = "16")]
		public void SubmitRegistered(string key, int startTimeMillis)
		{
		}

		[Token(Token = "0x6002BDA")]
		[Address(RVA = "0xEF0E60", Offset = "0xEF0E60", VA = "0xEF0E60", Slot = "17")]
		public void TurnOff(string key)
		{
		}

		[Token(Token = "0x6002BDB")]
		[Address(RVA = "0xEF0E68", Offset = "0xEF0E68", VA = "0xEF0E68", Slot = "18")]
		public void TurnOff()
		{
		}

		[Token(Token = "0x6002BDC")]
		[Address(RVA = "0xEF0E6C", Offset = "0xEF0E6C", VA = "0xEF0E6C", Slot = "19")]
		public void Dispose()
		{
		}

		[Token(Token = "0x6002BDD")]
		[Address(RVA = "0xEF0E70", Offset = "0xEF0E70", VA = "0xEF0E70", Slot = "20")]
		public int[] GetCurrentFeedback(PositionType pos)
		{
			return null;
		}
	}
	[Token(Token = "0x2000762")]
	public class BhapticsProject
	{
		[Token(Token = "0x170002A6")]
		public Track[] Tracks
		{
			[Token(Token = "0x6002BDE")]
			[Address(RVA = "0xEF0E90", Offset = "0xEF0E90", VA = "0xEF0E90")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6002BDF")]
			[Address(RVA = "0xEF0E98", Offset = "0xEF0E98", VA = "0xEF0E98")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x170002A7")]
		public Layout Layout
		{
			[Token(Token = "0x6002BE0")]
			[Address(RVA = "0xEF0EA0", Offset = "0xEF0EA0", VA = "0xEF0EA0")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6002BE1")]
			[Address(RVA = "0xEF0EA8", Offset = "0xEF0EA8", VA = "0xEF0EA8")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x6002BE2")]
		[Address(RVA = "0xEF0EB0", Offset = "0xEF0EB0", VA = "0xEF0EB0")]
		public static BhapticsProject ToProject(JSONObject jsonObject)
		{
			return null;
		}

		[Token(Token = "0x6002BE3")]
		[Address(RVA = "0xEF173C", Offset = "0xEF173C", VA = "0xEF173C")]
		public JSONObject ToJsonObject()
		{
			return null;
		}

		[Token(Token = "0x6002BE4")]
		[Address(RVA = "0xEF110C", Offset = "0xEF110C", VA = "0xEF110C")]
		public BhapticsProject()
		{
		}
	}
	[Token(Token = "0x2000763")]
	public class HapticFeedbackFile
	{
		[Token(Token = "0x4002AEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public BhapticsProject Project;

		[Token(Token = "0x6002BE5")]
		[Address(RVA = "0xEF1CBC", Offset = "0xEF1CBC", VA = "0xEF1CBC")]
		public static HapticFeedbackFile ToHapticFeedbackFile(string jsonStr)
		{
			return null;
		}

		[Token(Token = "0x6002BE6")]
		[Address(RVA = "0xEF1D8C", Offset = "0xEF1D8C", VA = "0xEF1D8C")]
		public HapticFeedbackFile()
		{
		}
	}
	[Token(Token = "0x2000764")]
	public class Track
	{
		[Token(Token = "0x170002A8")]
		public HapticEffect[] Effects
		{
			[Token(Token = "0x6002BE7")]
			[Address(RVA = "0xEF1D94", Offset = "0xEF1D94", VA = "0xEF1D94")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6002BE8")]
			[Address(RVA = "0xEF1D9C", Offset = "0xEF1D9C", VA = "0xEF1D9C")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x6002BE9")]
		[Address(RVA = "0xEF1DA4", Offset = "0xEF1DA4", VA = "0xEF1DA4", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x6002BEA")]
		[Address(RVA = "0xEF1114", Offset = "0xEF1114", VA = "0xEF1114")]
		internal static Track ToTrack(JSONObject jsonObj)
		{
			return null;
		}

		[Token(Token = "0x6002BEB")]
		[Address(RVA = "0xEF1890", Offset = "0xEF1890", VA = "0xEF1890")]
		internal JSONObject ToJsonObject()
		{
			return null;
		}

		[Token(Token = "0x6002BEC")]
		[Address(RVA = "0xEF1E28", Offset = "0xEF1E28", VA = "0xEF1E28")]
		public Track()
		{
		}
	}
	[Token(Token = "0x2000765")]
	public class HapticEffect
	{
		[Token(Token = "0x170002A9")]
		public int StartTime
		{
			[Token(Token = "0x6002BED")]
			[Address(RVA = "0xEF2364", Offset = "0xEF2364", VA = "0xEF2364")]
			[CompilerGenerated]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6002BEE")]
			[Address(RVA = "0xEF236C", Offset = "0xEF236C", VA = "0xEF236C")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x170002AA")]
		public int OffsetTime
		{
			[Token(Token = "0x6002BEF")]
			[Address(RVA = "0xEF2374", Offset = "0xEF2374", VA = "0xEF2374")]
			[CompilerGenerated]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6002BF0")]
			[Address(RVA = "0xEF237C", Offset = "0xEF237C", VA = "0xEF237C")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x170002AB")]
		public Dictionary<string, HapticEffectMode> Modes
		{
			[Token(Token = "0x6002BF1")]
			[Address(RVA = "0xEF2384", Offset = "0xEF2384", VA = "0xEF2384")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6002BF2")]
			[Address(RVA = "0xEF238C", Offset = "0xEF238C", VA = "0xEF238C")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x6002BF3")]
		[Address(RVA = "0xEF2394", Offset = "0xEF2394", VA = "0xEF2394", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x6002BF4")]
		[Address(RVA = "0xEF1E30", Offset = "0xEF1E30", VA = "0xEF1E30")]
		internal static HapticEffect ToEffect(JSONObject jsonObj)
		{
			return null;
		}

		[Token(Token = "0x6002BF5")]
		[Address(RVA = "0xEF20D8", Offset = "0xEF20D8", VA = "0xEF20D8")]
		internal JSONObject ToJsonObject()
		{
			return null;
		}

		[Token(Token = "0x6002BF6")]
		[Address(RVA = "0xEF2674", Offset = "0xEF2674", VA = "0xEF2674")]
		public HapticEffect()
		{
		}
	}
	[Token(Token = "0x2000766")]
	public class Layout
	{
		[Token(Token = "0x170002AC")]
		public string Type
		{
			[Token(Token = "0x6002BF7")]
			[Address(RVA = "0xEF296C", Offset = "0xEF296C", VA = "0xEF296C")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6002BF8")]
			[Address(RVA = "0xEF2974", Offset = "0xEF2974", VA = "0xEF2974")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x170002AD")]
		public Dictionary<string, LayoutObject[]> Layouts
		{
			[Token(Token = "0x6002BF9")]
			[Address(RVA = "0xEF297C", Offset = "0xEF297C", VA = "0xEF297C")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6002BFA")]
			[Address(RVA = "0xEF2984", Offset = "0xEF2984", VA = "0xEF2984")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x6002BFB")]
		[Address(RVA = "0xEF1354", Offset = "0xEF1354", VA = "0xEF1354")]
		internal static Layout ToLayout(JSONObject jsonObj)
		{
			return null;
		}

		[Token(Token = "0x6002BFC")]
		[Address(RVA = "0xEF19AC", Offset = "0xEF19AC", VA = "0xEF19AC")]
		internal JSONObject ToJsonObject()
		{
			return null;
		}

		[Token(Token = "0x6002BFD")]
		[Address(RVA = "0xEF298C", Offset = "0xEF298C", VA = "0xEF298C")]
		public Layout()
		{
		}
	}
	[Token(Token = "0x2000767")]
	public class LayoutObject
	{
		[Token(Token = "0x170002AE")]
		public int Index
		{
			[Token(Token = "0x6002BFE")]
			[Address(RVA = "0xEF2C0C", Offset = "0xEF2C0C", VA = "0xEF2C0C")]
			[CompilerGenerated]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6002BFF")]
			[Address(RVA = "0xEF2C14", Offset = "0xEF2C14", VA = "0xEF2C14")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x170002AF")]
		public float X
		{
			[Token(Token = "0x6002C00")]
			[Address(RVA = "0xEF2C1C", Offset = "0xEF2C1C", VA = "0xEF2C1C")]
			[CompilerGenerated]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6002C01")]
			[Address(RVA = "0xEF2C24", Offset = "0xEF2C24", VA = "0xEF2C24")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x170002B0")]
		public float Y
		{
			[Token(Token = "0x6002C02")]
			[Address(RVA = "0xEF2C2C", Offset = "0xEF2C2C", VA = "0xEF2C2C")]
			[CompilerGenerated]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6002C03")]
			[Address(RVA = "0xEF2C34", Offset = "0xEF2C34", VA = "0xEF2C34")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x6002C04")]
		[Address(RVA = "0xEF2994", Offset = "0xEF2994", VA = "0xEF2994")]
		internal static LayoutObject ToLayoutObject(JSONObject jsonObj)
		{
			return null;
		}

		[Token(Token = "0x6002C05")]
		[Address(RVA = "0xEF2ACC", Offset = "0xEF2ACC", VA = "0xEF2ACC")]
		internal JSONObject ToJsonObject()
		{
			return null;
		}

		[Token(Token = "0x6002C06")]
		[Address(RVA = "0xEF2C3C", Offset = "0xEF2C3C", VA = "0xEF2C3C")]
		public LayoutObject()
		{
		}
	}
	[Token(Token = "0x2000768")]
	public class HapticEffectMode
	{
		[Token(Token = "0x170002B1")]
		public FeedbackMode Mode
		{
			[Token(Token = "0x6002C07")]
			[Address(RVA = "0xEF2C44", Offset = "0xEF2C44", VA = "0xEF2C44")]
			[CompilerGenerated]
			get
			{
				return default(FeedbackMode);
			}
			[Token(Token = "0x6002C08")]
			[Address(RVA = "0xEF2C4C", Offset = "0xEF2C4C", VA = "0xEF2C4C")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x170002B2")]
		public DotMode DotMode
		{
			[Token(Token = "0x6002C09")]
			[Address(RVA = "0xEF2C54", Offset = "0xEF2C54", VA = "0xEF2C54")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6002C0A")]
			[Address(RVA = "0xEF2C5C", Offset = "0xEF2C5C", VA = "0xEF2C5C")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x170002B3")]
		public PathMode PathMode
		{
			[Token(Token = "0x6002C0B")]
			[Address(RVA = "0xEF2C64", Offset = "0xEF2C64", VA = "0xEF2C64")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6002C0C")]
			[Address(RVA = "0xEF2C6C", Offset = "0xEF2C6C", VA = "0xEF2C6C")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x6002C0D")]
		[Address(RVA = "0xEF267C", Offset = "0xEF267C", VA = "0xEF267C")]
		internal static HapticEffectMode ToMode(JSONObject jsonObj)
		{
			return null;
		}

		[Token(Token = "0x6002C0E")]
		[Address(RVA = "0xEF27F4", Offset = "0xEF27F4", VA = "0xEF27F4")]
		internal JSONObject ToJsonObject()
		{
			return null;
		}

		[Token(Token = "0x6002C0F")]
		[Address(RVA = "0xEF2C74", Offset = "0xEF2C74", VA = "0xEF2C74")]
		public HapticEffectMode()
		{
		}
	}
	[Token(Token = "0x2000769")]
	public class DotMode
	{
		[Token(Token = "0x170002B4")]
		public bool DotConnected
		{
			[Token(Token = "0x6002C10")]
			[Address(RVA = "0xEF33A4", Offset = "0xEF33A4", VA = "0xEF33A4")]
			[CompilerGenerated]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002C11")]
			[Address(RVA = "0xEF33AC", Offset = "0xEF33AC", VA = "0xEF33AC")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x170002B5")]
		public DotModeObjectCollection[] Feedback
		{
			[Token(Token = "0x6002C12")]
			[Address(RVA = "0xEF33B8", Offset = "0xEF33B8", VA = "0xEF33B8")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6002C13")]
			[Address(RVA = "0xEF33C0", Offset = "0xEF33C0", VA = "0xEF33C0")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x6002C14")]
		[Address(RVA = "0xEF2C7C", Offset = "0xEF2C7C", VA = "0xEF2C7C")]
		internal static DotMode ToDotMode(JSONObject jsonObj)
		{
			return null;
		}

		[Token(Token = "0x6002C15")]
		[Address(RVA = "0xEF3108", Offset = "0xEF3108", VA = "0xEF3108")]
		internal JSONObject ToJsonObject()
		{
			return null;
		}

		[Token(Token = "0x6002C16")]
		[Address(RVA = "0xEF33C8", Offset = "0xEF33C8", VA = "0xEF33C8")]
		public DotMode()
		{
		}
	}
	[Token(Token = "0x200076A")]
	public class DotModeObjectCollection
	{
		[Token(Token = "0x4002AFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public PlaybackType PlaybackType;

		[Token(Token = "0x170002B6")]
		public int StartTime
		{
			[Token(Token = "0x6002C17")]
			[Address(RVA = "0xEF38F0", Offset = "0xEF38F0", VA = "0xEF38F0")]
			[CompilerGenerated]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6002C18")]
			[Address(RVA = "0xEF38F8", Offset = "0xEF38F8", VA = "0xEF38F8")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x170002B7")]
		public int EndTime
		{
			[Token(Token = "0x6002C19")]
			[Address(RVA = "0xEF3900", Offset = "0xEF3900", VA = "0xEF3900")]
			[CompilerGenerated]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6002C1A")]
			[Address(RVA = "0xEF3908", Offset = "0xEF3908", VA = "0xEF3908")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x170002B8")]
		public DotModeObject[] PointList
		{
			[Token(Token = "0x6002C1B")]
			[Address(RVA = "0xEF3910", Offset = "0xEF3910", VA = "0xEF3910")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6002C1C")]
			[Address(RVA = "0xEF3918", Offset = "0xEF3918", VA = "0xEF3918")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x6002C1D")]
		[Address(RVA = "0xEF33D0", Offset = "0xEF33D0", VA = "0xEF33D0")]
		internal static DotModeObjectCollection ToObject(JSONObject val)
		{
			return null;
		}

		[Token(Token = "0x6002C1E")]
		[Address(RVA = "0xEF36BC", Offset = "0xEF36BC", VA = "0xEF36BC")]
		internal JSONObject ToJsonObject()
		{
			return null;
		}

		[Token(Token = "0x6002C1F")]
		[Address(RVA = "0xEF3920", Offset = "0xEF3920", VA = "0xEF3920")]
		public DotModeObjectCollection()
		{
		}
	}
	[Token(Token = "0x200076B")]
	public class DotModeObject
	{
		[Token(Token = "0x170002B9")]
		public int Index
		{
			[Token(Token = "0x6002C20")]
			[Address(RVA = "0xEF3C24", Offset = "0xEF3C24", VA = "0xEF3C24")]
			[CompilerGenerated]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6002C21")]
			[Address(RVA = "0xEF3C2C", Offset = "0xEF3C2C", VA = "0xEF3C2C")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x170002BA")]
		public float Intensity
		{
			[Token(Token = "0x6002C22")]
			[Address(RVA = "0xEF3C34", Offset = "0xEF3C34", VA = "0xEF3C34")]
			[CompilerGenerated]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6002C23")]
			[Address(RVA = "0xEF3C3C", Offset = "0xEF3C3C", VA = "0xEF3C3C")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x6002C24")]
		[Address(RVA = "0xEF3A6C", Offset = "0xEF3A6C", VA = "0xEF3A6C")]
		internal static DotModeObject ToObject(JSONObject jsonObject)
		{
			return null;
		}

		[Token(Token = "0x6002C25")]
		[Address(RVA = "0xEF3B24", Offset = "0xEF3B24", VA = "0xEF3B24")]
		internal JSONObject ToJsonObject()
		{
			return null;
		}

		[Token(Token = "0x6002C26")]
		[Address(RVA = "0xEF3C44", Offset = "0xEF3C44", VA = "0xEF3C44")]
		public DotModeObject()
		{
		}
	}
	[Token(Token = "0x200076C")]
	public class PathMode
	{
		[Token(Token = "0x170002BB")]
		public PathModeObjectCollection[] Feedback
		{
			[Token(Token = "0x6002C27")]
			[Address(RVA = "0xEF3DA0", Offset = "0xEF3DA0", VA = "0xEF3DA0")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6002C28")]
			[Address(RVA = "0xEF3DA8", Offset = "0xEF3DA8", VA = "0xEF3DA8")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x6002C29")]
		[Address(RVA = "0xEF2EF0", Offset = "0xEF2EF0", VA = "0xEF2EF0")]
		internal static PathMode ToPathMode(JSONObject jsonObject)
		{
			return null;
		}

		[Token(Token = "0x6002C2A")]
		[Address(RVA = "0xEF3288", Offset = "0xEF3288", VA = "0xEF3288")]
		internal JSONObject ToJsonObject()
		{
			return null;
		}

		[Token(Token = "0x6002C2B")]
		[Address(RVA = "0xEF3DB0", Offset = "0xEF3DB0", VA = "0xEF3DB0")]
		public PathMode()
		{
		}
	}
	[Token(Token = "0x200076D")]
	public class PathModeObjectCollection
	{
		[Token(Token = "0x4002B02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public PlaybackType PlaybackType;

		[Token(Token = "0x4002B03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public PathMovingPattern MovingPattern;

		[Token(Token = "0x170002BC")]
		public PathModeObject[] PointList
		{
			[Token(Token = "0x6002C2C")]
			[Address(RVA = "0xEF42F4", Offset = "0xEF42F4", VA = "0xEF42F4")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6002C2D")]
			[Address(RVA = "0xEF42FC", Offset = "0xEF42FC", VA = "0xEF42FC")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x6002C2E")]
		[Address(RVA = "0xEF3DB8", Offset = "0xEF3DB8", VA = "0xEF3DB8")]
		internal static PathModeObjectCollection ToObject(JSONObject jsonObject)
		{
			return null;
		}

		[Token(Token = "0x6002C2F")]
		[Address(RVA = "0xEF40C4", Offset = "0xEF40C4", VA = "0xEF40C4")]
		internal JSONObject ToJsonObject()
		{
			return null;
		}

		[Token(Token = "0x6002C30")]
		[Address(RVA = "0xEF4304", Offset = "0xEF4304", VA = "0xEF4304")]
		public PathModeObjectCollection()
		{
		}
	}
	[Token(Token = "0x200076E")]
	public class PathModeObject
	{
		[Token(Token = "0x170002BD")]
		public float X
		{
			[Token(Token = "0x6002C31")]
			[Address(RVA = "0xEF45B0", Offset = "0xEF45B0", VA = "0xEF45B0")]
			[CompilerGenerated]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6002C32")]
			[Address(RVA = "0xEF45B8", Offset = "0xEF45B8", VA = "0xEF45B8")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x170002BE")]
		public float Y
		{
			[Token(Token = "0x6002C33")]
			[Address(RVA = "0xEF45C0", Offset = "0xEF45C0", VA = "0xEF45C0")]
			[CompilerGenerated]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6002C34")]
			[Address(RVA = "0xEF45C8", Offset = "0xEF45C8", VA = "0xEF45C8")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x170002BF")]
		public float Intensity
		{
			[Token(Token = "0x6002C35")]
			[Address(RVA = "0xEF45D0", Offset = "0xEF45D0", VA = "0xEF45D0")]
			[CompilerGenerated]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6002C36")]
			[Address(RVA = "0xEF45D8", Offset = "0xEF45D8", VA = "0xEF45D8")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x170002C0")]
		public int Time
		{
			[Token(Token = "0x6002C37")]
			[Address(RVA = "0xEF45E0", Offset = "0xEF45E0", VA = "0xEF45E0")]
			[CompilerGenerated]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6002C38")]
			[Address(RVA = "0xEF45E8", Offset = "0xEF45E8", VA = "0xEF45E8")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x6002C39")]
		[Address(RVA = "0xEF4314", Offset = "0xEF4314", VA = "0xEF4314")]
		internal static PathModeObject ToObject(JSONObject jsonObject)
		{
			return null;
		}

		[Token(Token = "0x6002C3A")]
		[Address(RVA = "0xEF4430", Offset = "0xEF4430", VA = "0xEF4430")]
		internal JSONObject ToJsonObject()
		{
			return null;
		}

		[Token(Token = "0x6002C3B")]
		[Address(RVA = "0xEF45F0", Offset = "0xEF45F0", VA = "0xEF45F0")]
		public PathModeObject()
		{
		}
	}
	[Token(Token = "0x200076F")]
	internal class ParseUtil
	{
		[Token(Token = "0x6002C3C")]
		[Address(RVA = "0xEF3C4C", Offset = "0xEF3C4C", VA = "0xEF3C4C")]
		internal static float GetFloat(JSONObject obj, string key, float defaultValue = -1f)
		{
			return default(float);
		}

		[Token(Token = "0x6002C3D")]
		[Address(RVA = "0xEF3928", Offset = "0xEF3928", VA = "0xEF3928")]
		internal static int GetInt(JSONObject obj, string key, int defaultValue = -1)
		{
			return default(int);
		}

		[Token(Token = "0x6002C3E")]
		[Address(RVA = "0xEF45F8", Offset = "0xEF45F8", VA = "0xEF45F8")]
		public ParseUtil()
		{
		}
	}
	[Token(Token = "0x2000770")]
	public class BhapticsUtils
	{
		[Token(Token = "0x4002B09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static bool isInit;

		[Token(Token = "0x4002B0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static string exeFilePath;

		[Token(Token = "0x4002B0B")]
		public const string TypeHead = "Head";

		[Token(Token = "0x4002B0C")]
		public const string TypeTactal = "Tactal";

		[Token(Token = "0x4002B0D")]
		public const string TypeVest = "Vest";

		[Token(Token = "0x4002B0E")]
		public const string TypeTactot = "Tactot";

		[Token(Token = "0x4002B0F")]
		public const string TypeTactosy = "Tactosy";

		[Token(Token = "0x4002B10")]
		public const string TypeTactosy2 = "Tactosy2";

		[Token(Token = "0x4002B11")]
		public const string TypeHand = "Hand";

		[Token(Token = "0x4002B12")]
		public const string TypeFoot = "Foot";

		[Token(Token = "0x6002C3F")]
		private static T[] SubArray<T>(T[] data, int index, int length)
		{
			return null;
		}

		[Token(Token = "0x6002C40")]
		[Address(RVA = "0xEF4600", Offset = "0xEF4600", VA = "0xEF4600")]
		public static string GetExePath()
		{
			return null;
		}

		[Token(Token = "0x6002C41")]
		[Address(RVA = "0xEF4640", Offset = "0xEF4640", VA = "0xEF4640")]
		public static bool IsPlayerInstalled()
		{
			return default(bool);
		}

		[Token(Token = "0x6002C42")]
		[Address(RVA = "0xEF4648", Offset = "0xEF4648", VA = "0xEF4648")]
		public static bool IsPlayerRunning()
		{
			return default(bool);
		}

		[Token(Token = "0x6002C43")]
		[Address(RVA = "0xEF4650", Offset = "0xEF4650", VA = "0xEF4650")]
		private static bool Is64BitBuild()
		{
			return default(bool);
		}

		[Token(Token = "0x6002C44")]
		[Address(RVA = "0xEF466C", Offset = "0xEF466C", VA = "0xEF466C")]
		public static void LaunchPlayer(bool tryLaunch)
		{
		}

		[Token(Token = "0x6002C45")]
		[Address(RVA = "0xEF4670", Offset = "0xEF4670", VA = "0xEF4670")]
		public static float Angle(Vector3 fwd, Vector3 targetDir)
		{
			return default(float);
		}

		[Token(Token = "0x6002C46")]
		[Address(RVA = "0xEF4814", Offset = "0xEF4814", VA = "0xEF4814")]
		private static int AngleDir(Vector3 fwd, Vector3 targetDir, Vector3 up)
		{
			return default(int);
		}

		[Token(Token = "0x6002C47")]
		[Address(RVA = "0xEF486C", Offset = "0xEF486C", VA = "0xEF486C")]
		public static PositionType ToPositionType(HapticClipPositionType pos)
		{
			return default(PositionType);
		}

		[Token(Token = "0x6002C48")]
		[Address(RVA = "0xEF0AF4", Offset = "0xEF0AF4", VA = "0xEF0AF4")]
		public static PositionType ToPositionType(HapticDeviceType pos, bool isLeft = true)
		{
			return default(PositionType);
		}

		[Token(Token = "0x6002C49")]
		[Address(RVA = "0xEF488C", Offset = "0xEF488C", VA = "0xEF488C")]
		public BhapticsUtils()
		{
		}
	}
	[Token(Token = "0x2000771")]
	public class FeetHapticClip : ArmsHapticClip
	{
		[Token(Token = "0x6002C4A")]
		[Address(RVA = "0xEF4894", Offset = "0xEF4894", VA = "0xEF4894")]
		public FeetHapticClip()
		{
		}
	}
	[Token(Token = "0x2000772")]
	public class FileHapticClip : HapticClip
	{
		[Token(Token = "0x4002B13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[Range(0.2f, 5f)]
		public float Intensity;

		[Token(Token = "0x4002B14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[Range(0.2f, 5f)]
		public float Duration;

		[Token(Token = "0x4002B15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public HapticDeviceType ClipType;

		[Token(Token = "0x4002B16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public string JsonValue;

		[Token(Token = "0x4002B17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		protected int _clipDurationTime;

		[Token(Token = "0x170002C1")]
		public int ClipDurationTime
		{
			[Token(Token = "0x6002C4B")]
			[Address(RVA = "0xEF48A8", Offset = "0xEF48A8", VA = "0xEF48A8")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x6002C4C")]
		[Address(RVA = "0xEF496C", Offset = "0xEF496C", VA = "0xEF496C", Slot = "4")]
		public override void Play()
		{
		}

		[Token(Token = "0x6002C4D")]
		[Address(RVA = "0xEF49C8", Offset = "0xEF49C8", VA = "0xEF49C8", Slot = "5")]
		public override void Play(string identifier)
		{
		}

		[Token(Token = "0x6002C4E")]
		[Address(RVA = "0xEF49E0", Offset = "0xEF49E0", VA = "0xEF49E0", Slot = "6")]
		public override void Play(float intensity, string identifier = "")
		{
		}

		[Token(Token = "0x6002C4F")]
		[Address(RVA = "0xEF49F8", Offset = "0xEF49F8", VA = "0xEF49F8", Slot = "7")]
		public override void Play(float intensity, float duration, string identifier = "")
		{
		}

		[Token(Token = "0x6002C50")]
		[Address(RVA = "0xEF4A0C", Offset = "0xEF4A0C", VA = "0xEF4A0C", Slot = "8")]
		public override void Play(float intensity, float duration, float vestRotationAngleX, string identifier = "")
		{
		}

		[Token(Token = "0x6002C51")]
		[Address(RVA = "0xEF4A1C", Offset = "0xEF4A1C", VA = "0xEF4A1C", Slot = "9")]
		public override void Play(Vector3 contactPos, Collider targetCollider, string identifier = "")
		{
		}

		[Token(Token = "0x6002C52")]
		[Address(RVA = "0xEF4B40", Offset = "0xEF4B40", VA = "0xEF4B40", Slot = "10")]
		public override void Play(Vector3 contactPos, Vector3 targetPos, Vector3 targetForward, float targetHeight, string identifier = "")
		{
		}

		[Token(Token = "0x6002C53")]
		[Address(RVA = "0xEF4BB4", Offset = "0xEF4BB4", VA = "0xEF4BB4", Slot = "12")]
		public override void Play(float intensity, float duration, float vestRotationAngleX, float vestRotationOffsetY, string identifier = "")
		{
		}

		[Token(Token = "0x6002C54")]
		[Address(RVA = "0xEF0A30", Offset = "0xEF0A30", VA = "0xEF0A30", Slot = "17")]
		public override void ResetValues()
		{
		}

		[Token(Token = "0x6002C55")]
		[Address(RVA = "0xEF48D4", Offset = "0xEF48D4", VA = "0xEF48D4")]
		private int CalculateClipDutationTime(HapticFeedbackFile hapticFeedbackFile)
		{
			return default(int);
		}

		[Token(Token = "0x6002C56")]
		[Address(RVA = "0xEF0A50", Offset = "0xEF0A50", VA = "0xEF0A50")]
		public FileHapticClip()
		{
		}
	}
	[Token(Token = "0x2000773")]
	public class HandsHapticClip : ArmsHapticClip
	{
		[Token(Token = "0x6002C57")]
		[Address(RVA = "0xEF4E6C", Offset = "0xEF4E6C", VA = "0xEF4E6C")]
		public HandsHapticClip()
		{
		}
	}
	[Token(Token = "0x2000774")]
	public enum HapticDeviceType
	{
		[Token(Token = "0x4002B19")]
		None,
		[Token(Token = "0x4002B1A")]
		Tactal,
		[Token(Token = "0x4002B1B")]
		TactSuit,
		[Token(Token = "0x4002B1C")]
		Tactosy_arms,
		[Token(Token = "0x4002B1D")]
		Tactosy_hands,
		[Token(Token = "0x4002B1E")]
		Tactosy_feet
	}
	[Serializable]
	[Token(Token = "0x2000775")]
	public enum HapticClipPositionType
	{
		[Token(Token = "0x4002B20")]
		VestFront,
		[Token(Token = "0x4002B21")]
		VestBack,
		[Token(Token = "0x4002B22")]
		Head,
		[Token(Token = "0x4002B23")]
		RightForearm,
		[Token(Token = "0x4002B24")]
		LeftForearm,
		[Token(Token = "0x4002B25")]
		LeftHand,
		[Token(Token = "0x4002B26")]
		RightHand,
		[Token(Token = "0x4002B27")]
		LeftFoot,
		[Token(Token = "0x4002B28")]
		RightFoot
	}
	[Token(Token = "0x2000776")]
	public class HapticClip : ScriptableObject
	{
		[NonSerialized]
		[Token(Token = "0x4002B29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected string assetId;

		[NonSerialized]
		[Token(Token = "0x4002B2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string keyId;

		[Token(Token = "0x6002C58")]
		[Address(RVA = "0xEF4E80", Offset = "0xEF4E80", VA = "0xEF4E80", Slot = "4")]
		public virtual void Play()
		{
		}

		[Token(Token = "0x6002C59")]
		[Address(RVA = "0xEF4EE0", Offset = "0xEF4EE0", VA = "0xEF4EE0", Slot = "5")]
		public virtual void Play(string identifier)
		{
		}

		[Token(Token = "0x6002C5A")]
		[Address(RVA = "0xEF4EFC", Offset = "0xEF4EFC", VA = "0xEF4EFC", Slot = "6")]
		public virtual void Play(float intensity, string identifier = "")
		{
		}

		[Token(Token = "0x6002C5B")]
		[Address(RVA = "0xEF4F14", Offset = "0xEF4F14", VA = "0xEF4F14", Slot = "7")]
		public virtual void Play(float intensity, float duration, string identifier = "")
		{
		}

		[Token(Token = "0x6002C5C")]
		[Address(RVA = "0xEF4F28", Offset = "0xEF4F28", VA = "0xEF4F28", Slot = "8")]
		public virtual void Play(float intensity, float duration, float vestRotationAngleX, string identifier = "")
		{
		}

		[Token(Token = "0x6002C5D")]
		[Address(RVA = "0xEF4F38", Offset = "0xEF4F38", VA = "0xEF4F38", Slot = "9")]
		public virtual void Play(Vector3 contactPos, Collider targetCollider, string identifier = "")
		{
		}

		[Token(Token = "0x6002C5E")]
		[Address(RVA = "0xEF505C", Offset = "0xEF505C", VA = "0xEF505C", Slot = "10")]
		public virtual void Play(Vector3 contactPos, Vector3 targetPos, Vector3 targetForward, float targetHeight, string identifier = "")
		{
		}

		[Token(Token = "0x6002C5F")]
		[Address(RVA = "0xEF50CC", Offset = "0xEF50CC", VA = "0xEF50CC", Slot = "11")]
		public virtual void Play(float intensity, float duration, Vector3 contactPos, Vector3 targetPos, Vector3 targetForward, float targetHeight, string identifier = "")
		{
		}

		[Token(Token = "0x6002C60")]
		[Address(RVA = "0xEF514C", Offset = "0xEF514C", VA = "0xEF514C", Slot = "12")]
		public virtual void Play(float intensity, float duration, float vestRotationAngleX, float vestRotationOffsetY, string identifier = "")
		{
		}

		[Token(Token = "0x6002C61")]
		[Address(RVA = "0xEF5150", Offset = "0xEF5150", VA = "0xEF5150", Slot = "13")]
		public virtual void Stop()
		{
		}

		[Token(Token = "0x6002C62")]
		[Address(RVA = "0xEF51F4", Offset = "0xEF51F4", VA = "0xEF51F4", Slot = "14")]
		public virtual void Stop(string identifier)
		{
		}

		[Token(Token = "0x6002C63")]
		[Address(RVA = "0xEF52C4", Offset = "0xEF52C4", VA = "0xEF52C4", Slot = "15")]
		public virtual bool IsPlaying()
		{
			return default(bool);
		}

		[Token(Token = "0x6002C64")]
		[Address(RVA = "0xEF5380", Offset = "0xEF5380", VA = "0xEF5380", Slot = "16")]
		public virtual bool IsPlaying(string identifier)
		{
			return default(bool);
		}

		[Token(Token = "0x6002C65")]
		[Address(RVA = "0xEF4DF4", Offset = "0xEF4DF4", VA = "0xEF4DF4", Slot = "17")]
		public virtual void ResetValues()
		{
		}

		[Token(Token = "0x6002C66")]
		[Address(RVA = "0xEF5450", Offset = "0xEF5450", VA = "0xEF5450")]
		public string GetAssetID()
		{
			return null;
		}

		[Token(Token = "0x6002C67")]
		[Address(RVA = "0xEF4DF8", Offset = "0xEF4DF8", VA = "0xEF4DF8")]
		public HapticClip()
		{
		}
	}
	[Token(Token = "0x2000777")]
	public class HapticReceiver : MonoBehaviour
	{
		[Token(Token = "0x4002B2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool IsActive;

		[Token(Token = "0x4002B2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public PositionTag PositionTag;

		[Token(Token = "0x6002C68")]
		[Address(RVA = "0xEF5458", Offset = "0xEF5458", VA = "0xEF5458")]
		private void Awake()
		{
		}

		[Token(Token = "0x6002C69")]
		[Address(RVA = "0xEF5598", Offset = "0xEF5598", VA = "0xEF5598")]
		private void OnTriggerEnter(Collider bullet)
		{
		}

		[Token(Token = "0x6002C6A")]
		[Address(RVA = "0xEF5738", Offset = "0xEF5738", VA = "0xEF5738")]
		private void OnCollisionEnter(Collision bullet)
		{
		}

		[Token(Token = "0x6002C6B")]
		[Address(RVA = "0xEF5654", Offset = "0xEF5654", VA = "0xEF5654")]
		private void Handle(Vector3 contactPoint, HapticSender tactSender)
		{
		}

		[Token(Token = "0x6002C6C")]
		[Address(RVA = "0xEF591C", Offset = "0xEF591C", VA = "0xEF591C")]
		public HapticReceiver()
		{
		}
	}
	[Token(Token = "0x2000778")]
	public class HapticSender : MonoBehaviour
	{
		[Token(Token = "0x4002B2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public HapticClip[] DefaultClips;

		[Token(Token = "0x4002B2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public HeadHapticClip[] HeadClips;

		[Token(Token = "0x4002B2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public VestHapticClip[] BodyClips;

		[Token(Token = "0x4002B30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public ArmsHapticClip[] LeftArmClips;

		[Token(Token = "0x4002B31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public ArmsHapticClip[] RightArmClips;

		[Token(Token = "0x4002B32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float yOffsetMultiplier;

		[Token(Token = "0x6002C6D")]
		[Address(RVA = "0xEF592C", Offset = "0xEF592C", VA = "0xEF592C")]
		public void Play(PositionTag posTag = PositionTag.Default)
		{
		}

		[Token(Token = "0x6002C6E")]
		[Address(RVA = "0xEF5810", Offset = "0xEF5810", VA = "0xEF5810")]
		public void Play(PositionTag posTag, Vector3 contactPos, Collider targetCollider)
		{
		}

		[Token(Token = "0x6002C6F")]
		[Address(RVA = "0xEF5BA8", Offset = "0xEF5BA8", VA = "0xEF5BA8")]
		private void Play(PositionTag posTag, Vector3 contactPos, Vector3 targetPos, Vector3 targetForward, float targetHeight)
		{
		}

		[Token(Token = "0x6002C70")]
		[Address(RVA = "0xEF5C1C", Offset = "0xEF5C1C", VA = "0xEF5C1C")]
		public void Play(PositionTag posTag, RaycastHit hit)
		{
		}

		[Token(Token = "0x6002C71")]
		[Address(RVA = "0xEF5D4C", Offset = "0xEF5D4C", VA = "0xEF5D4C")]
		private HapticClip GetClip(PositionTag posTag)
		{
			return null;
		}

		[Token(Token = "0x6002C72")]
		[Address(RVA = "0xEF5E64", Offset = "0xEF5E64", VA = "0xEF5E64")]
		public bool IsPlaying()
		{
			return default(bool);
		}

		[Token(Token = "0x6002C73")]
		[Address(RVA = "0xEF5938", Offset = "0xEF5938", VA = "0xEF5938")]
		public void Play(PositionTag posTag, float angleX, float offsetY)
		{
		}

		[Token(Token = "0x6002C74")]
		[Address(RVA = "0xEF5E6C", Offset = "0xEF5E6C", VA = "0xEF5E6C")]
		public HapticSender()
		{
		}
	}
	[Token(Token = "0x2000779")]
	public enum PositionTag
	{
		[Token(Token = "0x4002B34")]
		Body,
		[Token(Token = "0x4002B35")]
		Head,
		[Token(Token = "0x4002B36")]
		LeftArm,
		[Token(Token = "0x4002B37")]
		RightArm,
		[Token(Token = "0x4002B38")]
		Default
	}
	[Token(Token = "0x200077A")]
	public class HapticSource : MonoBehaviour
	{
		[Token(Token = "0x200077B")]
		[CompilerGenerated]
		private sealed class <PlayCoroutine>d__13 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002B40")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002B41")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002B42")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float delaySecond;

			[Token(Token = "0x4002B43")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public HapticSource <>4__this;

			[Token(Token = "0x170002C2")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002C82")]
				[Address(RVA = "0xEF688C", Offset = "0xEF688C", VA = "0xEF688C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002C3")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002C84")]
				[Address(RVA = "0xEF68D4", Offset = "0xEF68D4", VA = "0xEF68D4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002C7F")]
			[Address(RVA = "0xEF674C", Offset = "0xEF674C", VA = "0xEF674C")]
			[DebuggerHidden]
			public <PlayCoroutine>d__13(int <>1__state)
			{
			}

			[Token(Token = "0x6002C80")]
			[Address(RVA = "0xEF67A4", Offset = "0xEF67A4", VA = "0xEF67A4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002C81")]
			[Address(RVA = "0xEF67A8", Offset = "0xEF67A8", VA = "0xEF67A8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002C83")]
			[Address(RVA = "0xEF6894", Offset = "0xEF6894", VA = "0xEF6894", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200077C")]
		[CompilerGenerated]
		private sealed class <PlayLoopCoroutine>d__15 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002B44")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002B45")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002B46")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public HapticSource <>4__this;

			[Token(Token = "0x4002B47")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private WaitForSeconds <duration>5__2;

			[Token(Token = "0x170002C4")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002C88")]
				[Address(RVA = "0xEF6AC8", Offset = "0xEF6AC8", VA = "0xEF6AC8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002C5")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002C8A")]
				[Address(RVA = "0xEF6B10", Offset = "0xEF6B10", VA = "0xEF6B10", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002C85")]
			[Address(RVA = "0xEF6774", Offset = "0xEF6774", VA = "0xEF6774")]
			[DebuggerHidden]
			public <PlayLoopCoroutine>d__15(int <>1__state)
			{
			}

			[Token(Token = "0x6002C86")]
			[Address(RVA = "0xEF68DC", Offset = "0xEF68DC", VA = "0xEF68DC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002C87")]
			[Address(RVA = "0xEF68E0", Offset = "0xEF68E0", VA = "0xEF68E0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002C89")]
			[Address(RVA = "0xEF6AD0", Offset = "0xEF6AD0", VA = "0xEF6AD0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4002B39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public HapticClip clip;

		[Token(Token = "0x4002B3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool playOnAwake;

		[Token(Token = "0x4002B3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		public bool loop;

		[Token(Token = "0x4002B3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float loopDelaySeconds;

		[Token(Token = "0x4002B3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Coroutine currentCoroutine;

		[Token(Token = "0x4002B3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Coroutine loopCoroutine;

		[Token(Token = "0x4002B3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool isLooping;

		[Token(Token = "0x6002C75")]
		[Address(RVA = "0xEF5E7C", Offset = "0xEF5E7C", VA = "0xEF5E7C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6002C76")]
		[Address(RVA = "0xEF6398", Offset = "0xEF6398", VA = "0xEF6398")]
		public void Play()
		{
		}

		[Token(Token = "0x6002C77")]
		[Address(RVA = "0xEF6138", Offset = "0xEF6138", VA = "0xEF6138")]
		public void PlayLoop()
		{
		}

		[Token(Token = "0x6002C78")]
		[Address(RVA = "0xEF6410", Offset = "0xEF6410", VA = "0xEF6410")]
		public void PlayDelayed(float delaySecond = 0f)
		{
		}

		[Token(Token = "0x6002C79")]
		[Address(RVA = "0xEF65DC", Offset = "0xEF65DC", VA = "0xEF65DC")]
		public void Stop()
		{
		}

		[Token(Token = "0x6002C7A")]
		[Address(RVA = "0xEF66BC", Offset = "0xEF66BC", VA = "0xEF66BC")]
		public bool IsPlaying()
		{
			return default(bool);
		}

		[Token(Token = "0x6002C7B")]
		[Address(RVA = "0xEF6558", Offset = "0xEF6558", VA = "0xEF6558")]
		[IteratorStateMachine(typeof(<PlayCoroutine>d__13))]
		private IEnumerator PlayCoroutine(float delaySecond)
		{
			return null;
		}

		[Token(Token = "0x6002C7C")]
		[Address(RVA = "0xEF6274", Offset = "0xEF6274", VA = "0xEF6274")]
		private void PlayHapticClip()
		{
		}

		[Token(Token = "0x6002C7D")]
		[Address(RVA = "0xEF639C", Offset = "0xEF639C", VA = "0xEF639C")]
		[IteratorStateMachine(typeof(<PlayLoopCoroutine>d__15))]
		private IEnumerator PlayLoopCoroutine()
		{
			return null;
		}

		[Token(Token = "0x6002C7E")]
		[Address(RVA = "0xEF679C", Offset = "0xEF679C", VA = "0xEF679C")]
		public HapticSource()
		{
		}
	}
	[Token(Token = "0x200077D")]
	public class HeadHapticClip : FileHapticClip
	{
		[Token(Token = "0x6002C8B")]
		[Address(RVA = "0xEF6B18", Offset = "0xEF6B18", VA = "0xEF6B18")]
		public HeadHapticClip()
		{
		}
	}
	[Token(Token = "0x200077E")]
	public interface IHaptic
	{
		[Token(Token = "0x6002C8C")]
		bool IsConnect(PositionType type);

		[Token(Token = "0x6002C8D")]
		bool IsConnect(HapticDeviceType type, bool isLeft = true);

		[Token(Token = "0x6002C8E")]
		bool IsPlaying(string key);

		[Token(Token = "0x6002C8F")]
		bool IsFeedbackRegistered(string key);

		[Token(Token = "0x6002C90")]
		bool IsPlaying();

		[Token(Token = "0x6002C91")]
		void RegisterTactFileStr(string key, string tactFileStr);

		[Token(Token = "0x6002C92")]
		void RegisterTactFileStrReflected(string key, string tactFileStr);

		[Token(Token = "0x6002C93")]
		void Submit(string key, PositionType position, List<DotPoint> points, int durationMillis);

		[Token(Token = "0x6002C94")]
		void Submit(string key, PositionType position, List<PathPoint> points, int durationMillis);

		[Token(Token = "0x6002C95")]
		void SubmitRegistered(string key, string altKey, ScaleOption option);

		[Token(Token = "0x6002C96")]
		void SubmitRegistered(string key, string altKey, RotationOption rOption, ScaleOption sOption);

		[Token(Token = "0x6002C97")]
		void SubmitRegistered(string key);

		[Token(Token = "0x6002C98")]
		void SubmitRegistered(string key, int startTimeMillis);

		[Token(Token = "0x6002C99")]
		void TurnOff(string key);

		[Token(Token = "0x6002C9A")]
		void TurnOff();

		[Token(Token = "0x6002C9B")]
		void Dispose();

		[Token(Token = "0x6002C9C")]
		int[] GetCurrentFeedback(PositionType pos);
	}
	[Token(Token = "0x200077F")]
	[CreateAssetMenu(fileName = "SimpleHapticClip", menuName = "Bhaptics/Create Simple HapticClip")]
	public class SimpleHapticClip : HapticClip
	{
		[Token(Token = "0x4002B48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly Point[] DefaultPoints;

		[Token(Token = "0x4002B49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private HapticClipPositionType Position;

		[Token(Token = "0x4002B4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		private SimpleHapticType Mode;

		[Token(Token = "0x4002B4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private int[] DotPoints;

		[Token(Token = "0x4002B4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Point[] Points;

		[Token(Token = "0x4002B4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[Range(20f, 10000f)]
		public int TimeMillis;

		[Token(Token = "0x6002C9D")]
		[Address(RVA = "0xEF6B2C", Offset = "0xEF6B2C", VA = "0xEF6B2C", Slot = "12")]
		public override void Play(float intensity, float duration, float vestRotationAngleX, float vestRotationOffsetY, string identifier = "")
		{
		}

		[Token(Token = "0x6002C9E")]
		[Address(RVA = "0xEF7010", Offset = "0xEF7010", VA = "0xEF7010", Slot = "17")]
		public override void ResetValues()
		{
		}

		[Token(Token = "0x6002C9F")]
		[Address(RVA = "0xEF6D18", Offset = "0xEF6D18", VA = "0xEF6D18")]
		private static List<DotPoint> Convert(int[] points)
		{
			return null;
		}

		[Token(Token = "0x6002CA0")]
		[Address(RVA = "0xEF6E90", Offset = "0xEF6E90", VA = "0xEF6E90")]
		private static List<PathPoint> Convert(Point[] points)
		{
			return null;
		}

		[Token(Token = "0x6002CA1")]
		[Address(RVA = "0xEF70AC", Offset = "0xEF70AC", VA = "0xEF70AC")]
		public SimpleHapticClip()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000780")]
	public class Point
	{
		[Token(Token = "0x4002B4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[Range(0f, 1f)]
		public float X;

		[Token(Token = "0x4002B4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[Range(0f, 1f)]
		public float Y;

		[Token(Token = "0x4002B50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Range(0f, 100f)]
		public int Intensity;

		[Token(Token = "0x6002CA3")]
		[Address(RVA = "0xEF71DC", Offset = "0xEF71DC", VA = "0xEF71DC")]
		public Point(float x, float y, int intensity)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000781")]
	public enum SimpleHapticType
	{
		[Token(Token = "0x4002B52")]
		DotMode = 1,
		[Token(Token = "0x4002B53")]
		PathMode
	}
	[Token(Token = "0x2000782")]
	public class VestHapticClip : FileHapticClip
	{
		[Token(Token = "0x4002B54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[SerializeField]
		[Range(0f, 360f)]
		protected float TactFileAngleX;

		[Token(Token = "0x4002B55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		[Range(-0.5f, 0.5f)]
		protected float TactFileOffsetY;

		[Token(Token = "0x4002B56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private RotationOption _rotationOption;

		[Token(Token = "0x4002B57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private ScaleOption _scaleOption;

		[Token(Token = "0x6002CA4")]
		[Address(RVA = "0xEF7314", Offset = "0xEF7314", VA = "0xEF7314", Slot = "4")]
		public override void Play()
		{
		}

		[Token(Token = "0x6002CA5")]
		[Address(RVA = "0xEF736C", Offset = "0xEF736C", VA = "0xEF736C", Slot = "5")]
		public override void Play(string identifier)
		{
		}

		[Token(Token = "0x6002CA6")]
		[Address(RVA = "0xEF7380", Offset = "0xEF7380", VA = "0xEF7380", Slot = "6")]
		public override void Play(float intensity, string identifier = "")
		{
		}

		[Token(Token = "0x6002CA7")]
		[Address(RVA = "0xEF7394", Offset = "0xEF7394", VA = "0xEF7394", Slot = "7")]
		public override void Play(float intensity, float duration, string identifier = "")
		{
		}

		[Token(Token = "0x6002CA8")]
		[Address(RVA = "0xEF73A4", Offset = "0xEF73A4", VA = "0xEF73A4", Slot = "8")]
		public override void Play(float intensity, float duration, float vestRotationAngleX, string identifier = "")
		{
		}

		[Token(Token = "0x6002CA9")]
		[Address(RVA = "0xEF73B4", Offset = "0xEF73B4", VA = "0xEF73B4", Slot = "12")]
		public override void Play(float intensity, float duration, float vestRotationAngleX, float vestRotationOffsetY, string identifier = "")
		{
		}

		[Token(Token = "0x6002CAA")]
		[Address(RVA = "0xEF7600", Offset = "0xEF7600", VA = "0xEF7600", Slot = "17")]
		public override void ResetValues()
		{
		}

		[Token(Token = "0x6002CAB")]
		[Address(RVA = "0xEF7610", Offset = "0xEF7610", VA = "0xEF7610")]
		public VestHapticClip()
		{
		}
	}
	[Token(Token = "0x2000783")]
	public class VisualFeedback : MonoBehaviour
	{
		[Token(Token = "0x4002B58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public HapticClipPositionType devicePos;

		[Token(Token = "0x4002B59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform motorContainer;

		[Token(Token = "0x4002B5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Gradient motorFeedbackGradient;

		[Token(Token = "0x4002B5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Transform[] motors;

		[Token(Token = "0x4002B5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float motorScaleOffset;

		[Token(Token = "0x6002CAC")]
		[Address(RVA = "0xEF76DC", Offset = "0xEF76DC", VA = "0xEF76DC")]
		private void Start()
		{
		}

		[Token(Token = "0x6002CAD")]
		[Address(RVA = "0xEF7A4C", Offset = "0xEF7A4C", VA = "0xEF7A4C")]
		public void UpdateFeedback(HapticFeedback feedback)
		{
		}

		[Token(Token = "0x6002CAE")]
		[Address(RVA = "0xEF7B04", Offset = "0xEF7B04", VA = "0xEF7B04")]
		public void UpdateFeedback(int[] feedbackValues)
		{
		}

		[Token(Token = "0x6002CAF")]
		[Address(RVA = "0xEF7CE4", Offset = "0xEF7CE4", VA = "0xEF7CE4")]
		public VisualFeedback()
		{
		}
	}
}
