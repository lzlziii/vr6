using System;
using System.Collections;
using System.Collections.Generic;
using System.Diagnostics;
using System.IO;
using System.Reflection;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using System.Text;
using AOT;
using AudioHelm;
using Cubism;
using Il2CppDummyDll;
using OVR.OpenVR;
using Oculus.Platform;
using Oculus.Platform.Models;
using ProceduralPrimitivesUtil;
using Rowhouse;
using SimpleJSON;
using TMPro;
using UnityEngine;
using UnityEngine.AI;
using UnityEngine.Audio;
using UnityEngine.EventSystems;
using UnityEngine.Events;
using UnityEngine.InputSystem;
using UnityEngine.Networking;
using UnityEngine.Rendering;
using UnityEngine.SceneManagement;
using UnityEngine.Serialization;
using UnityEngine.UI;
using UnityEngine.Video;
using UnityEngine.XR;
using mixpanel;

[assembly: AssemblyVersion("0.0.0.0")]
[Token(Token = "0x2000002")]
[CreateAssetMenu(fileName = "HapticClips")]
public class HapticClips : ScriptableObject
{
	[Token(Token = "0x4000001")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool useOVRHaptics;

	[Token(Token = "0x4000002")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[Header("OVRHaptics")]
	public AudioClip tap;

	[Token(Token = "0x4000003")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AudioClip hardTap;

	[Token(Token = "0x4000004")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AudioClip tapTap;

	[Token(Token = "0x4000005")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public AudioClip fadeShort;

	[Token(Token = "0x4000006")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[Header("OVRInput Haptics")]
	public HapticProfile tapProfile;

	[Token(Token = "0x4000007")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public HapticProfile hardTapProfile;

	[Token(Token = "0x4000008")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public HapticProfile tapTapProfile;

	[Token(Token = "0x4000009")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public HapticProfile fadeShortProfile;

	[Token(Token = "0x6000001")]
	[Address(RVA = "0xB02BD8", Offset = "0xB02BD8", VA = "0xB02BD8")]
	public AudioClip GetClip(HapticType clipProfile)
	{
		return null;
	}

	[Token(Token = "0x6000002")]
	[Address(RVA = "0xB02C14", Offset = "0xB02C14", VA = "0xB02C14")]
	public HapticProfile GetProfile(HapticType clipProfile)
	{
		return null;
	}

	[Token(Token = "0x6000003")]
	[Address(RVA = "0xB02C50", Offset = "0xB02C50", VA = "0xB02C50")]
	public HapticClips()
	{
	}
}
[Serializable]
[Token(Token = "0x2000003")]
public class HapticProfile
{
	[Token(Token = "0x400000A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public AnimationCurve amplitude;

	[Token(Token = "0x400000B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AnimationCurve frequency;

	[Token(Token = "0x400000C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float duration;

	[Token(Token = "0x6000004")]
	[Address(RVA = "0xB02C58", Offset = "0xB02C58", VA = "0xB02C58")]
	public HapticProfile()
	{
	}
}
[Token(Token = "0x2000004")]
public enum HapticType
{
	[Token(Token = "0x400000E")]
	tap,
	[Token(Token = "0x400000F")]
	hardTap,
	[Token(Token = "0x4000010")]
	tapTap,
	[Token(Token = "0x4000011")]
	fadeShort
}
[Token(Token = "0x2000005")]
public static class Haptics
{
	[Token(Token = "0x4000012")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static OvrHaptics _oculusHaptics;

	[Token(Token = "0x4000013")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static PicoHaptics _picoHaptics;

	[Token(Token = "0x4000014")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static SteamVrHaptics _steamVrHaptics;

	[Token(Token = "0x4000015")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static MockHaptics _mockHaptics;

	[Token(Token = "0x6000005")]
	[Address(RVA = "0xB02C68", Offset = "0xB02C68", VA = "0xB02C68")]
	public static void PreloadOvrHaptics()
	{
	}

	[Token(Token = "0x6000006")]
	[Address(RVA = "0xB02CF0", Offset = "0xB02CF0", VA = "0xB02CF0")]
	public static void PlayProfile(Cubism.Hand hand, HapticType profile)
	{
	}

	[Token(Token = "0x6000007")]
	[Address(RVA = "0xB03050", Offset = "0xB03050", VA = "0xB03050")]
	public static void SoftTap(Cubism.Hand hand)
	{
	}

	[Token(Token = "0x6000008")]
	[Address(RVA = "0xB030A8", Offset = "0xB030A8", VA = "0xB030A8")]
	public static void HardTap(Cubism.Hand hand)
	{
	}

	[Token(Token = "0x6000009")]
	[Address(RVA = "0xB03100", Offset = "0xB03100", VA = "0xB03100")]
	public static void TapTap(Cubism.Hand hand)
	{
	}

	[Token(Token = "0x600000A")]
	[Address(RVA = "0xB03158", Offset = "0xB03158", VA = "0xB03158")]
	public static void Alert(Cubism.Hand hand)
	{
	}

	[Token(Token = "0x600000B")]
	[Address(RVA = "0xB031B0", Offset = "0xB031B0", VA = "0xB031B0")]
	public static void Custom(Cubism.Hand hand, float frequency, float amplitude)
	{
	}

	[Token(Token = "0x600000C")]
	[Address(RVA = "0xB02DCC", Offset = "0xB02DCC", VA = "0xB02DCC")]
	private static IHaptics GetActiveHaptics()
	{
		return null;
	}
}
[Token(Token = "0x2000006")]
public class HapticsDebug : MonoBehaviour
{
	[Token(Token = "0x4000016")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioClip tapClip;

	[Token(Token = "0x600000E")]
	[Address(RVA = "0xB03310", Offset = "0xB03310", VA = "0xB03310")]
	public HapticsDebug()
	{
	}
}
[Token(Token = "0x2000007")]
internal interface IHaptics
{
	[Token(Token = "0x600000F")]
	void PlayHaptics(Cubism.Hand hand, HapticType profile);

	[Token(Token = "0x6000010")]
	void Pulse(Cubism.Hand hand, float frequency, float amplitude);
}
[Token(Token = "0x2000008")]
public class RuntimeLog : MonoBehaviour
{
	[Token(Token = "0x4000017")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool log;

	[Token(Token = "0x4000018")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool warning;

	[Token(Token = "0x4000019")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	public bool exception;

	[Token(Token = "0x400001A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B")]
	public bool error;

	[Token(Token = "0x400001B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[Space(20f)]
	public bool skipDuplicates;

	[Token(Token = "0x400001C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[Header("Debug")]
	public Text _logText;

	[Token(Token = "0x400001D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private List<string> _logHistory;

	[Token(Token = "0x6000011")]
	[Address(RVA = "0xB03318", Offset = "0xB03318", VA = "0xB03318")]
	private void Start()
	{
	}

	[Token(Token = "0x6000012")]
	[Address(RVA = "0xB0331C", Offset = "0xB0331C", VA = "0xB0331C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000013")]
	[Address(RVA = "0xB03320", Offset = "0xB03320", VA = "0xB03320")]
	private void WriteMessage(string condition, string stackTrace, LogType type)
	{
	}

	[Token(Token = "0x6000014")]
	[Address(RVA = "0xB03540", Offset = "0xB03540", VA = "0xB03540")]
	public RuntimeLog()
	{
	}
}
[Token(Token = "0x2000009")]
public class AlphaStrobe : MonoBehaviour
{
	[Token(Token = "0x400001E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool _strobing;

	[Token(Token = "0x400001F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Renderer _renderer;

	[Token(Token = "0x4000020")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Color _originalColor;

	[Token(Token = "0x4000021")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Color _strobeColor;

	[Token(Token = "0x4000022")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float _flashStart;

	[Token(Token = "0x4000023")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private float _flashDuration;

	[Token(Token = "0x4000024")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool _flashing;

	[Token(Token = "0x4000025")]
	private const float strobeLightness = 1f;

	[Token(Token = "0x4000026")]
	private const float strobeSpeed = 2f;

	[Token(Token = "0x4000027")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private Color _tempColor;

	[Token(Token = "0x6000015")]
	[Address(RVA = "0xB035BC", Offset = "0xB035BC", VA = "0xB035BC")]
	public void Setup(Renderer renderer)
	{
	}

	[Token(Token = "0x6000016")]
	[Address(RVA = "0xB03608", Offset = "0xB03608", VA = "0xB03608")]
	private void Update()
	{
	}

	[Token(Token = "0x6000017")]
	[Address(RVA = "0xB03738", Offset = "0xB03738", VA = "0xB03738")]
	public void SetStrobing(bool value)
	{
	}

	[Token(Token = "0x6000018")]
	[Address(RVA = "0xB03780", Offset = "0xB03780", VA = "0xB03780")]
	public void Flash()
	{
	}

	[Token(Token = "0x6000019")]
	[Address(RVA = "0xB037D4", Offset = "0xB037D4", VA = "0xB037D4")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600001A")]
	[Address(RVA = "0xB037E4", Offset = "0xB037E4", VA = "0xB037E4")]
	public void StartPingRepeated(float interval)
	{
	}

	[Token(Token = "0x600001B")]
	[Address(RVA = "0xB037DC", Offset = "0xB037DC", VA = "0xB037DC")]
	public void StopPingRepeating()
	{
	}

	[Token(Token = "0x600001C")]
	[Address(RVA = "0xB037AC", Offset = "0xB037AC", VA = "0xB037AC")]
	public void Flash(float duration)
	{
	}

	[Token(Token = "0x600001D")]
	[Address(RVA = "0xB03844", Offset = "0xB03844", VA = "0xB03844")]
	public AlphaStrobe()
	{
	}
}
[Token(Token = "0x200000A")]
public class MonoState : MonoBehaviour
{
	[Token(Token = "0x14000001")]
	public event Action<MonoState> ToState
	{
		[Token(Token = "0x600001E")]
		[Address(RVA = "0xB0384C", Offset = "0xB0384C", VA = "0xB0384C")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x600001F")]
		[Address(RVA = "0xB038FC", Offset = "0xB038FC", VA = "0xB038FC")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x6000020")]
	[Address(RVA = "0xB039AC", Offset = "0xB039AC", VA = "0xB039AC")]
	protected void GoToState(MonoState state)
	{
	}

	[Token(Token = "0x6000021")]
	[Address(RVA = "0xB039C8", Offset = "0xB039C8", VA = "0xB039C8")]
	public MonoState()
	{
	}
}
[Token(Token = "0x200000B")]
public class MonoStateMachine : MonoBehaviour
{
	[Token(Token = "0x4000029")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public MonoState[] _states;

	[Token(Token = "0x400002A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public MonoState _entryState;

	[Token(Token = "0x400002B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private MonoState _currentState;

	[Token(Token = "0x6000022")]
	[Address(RVA = "0xB039D0", Offset = "0xB039D0", VA = "0xB039D0", Slot = "4")]
	protected virtual void Init()
	{
	}

	[Token(Token = "0x6000023")]
	[Address(RVA = "0xB03A4C", Offset = "0xB03A4C", VA = "0xB03A4C")]
	public void ToState(MonoState nextState)
	{
	}

	[Token(Token = "0x6000024")]
	[Address(RVA = "0xB03BD0", Offset = "0xB03BD0", VA = "0xB03BD0")]
	public MonoStateMachine()
	{
	}
}
[Token(Token = "0x200000C")]
public class MusicMuffler : MonoBehaviour
{
	[Token(Token = "0x200000D")]
	[CompilerGenerated]
	private sealed class <_Muffle>d__8 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000032")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000033")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000034")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MusicMuffler <>4__this;

		[Token(Token = "0x17000001")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600002E")]
			[Address(RVA = "0xB03E78", Offset = "0xB03E78", VA = "0xB03E78", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000002")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000030")]
			[Address(RVA = "0xB03EC0", Offset = "0xB03EC0", VA = "0xB03EC0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600002B")]
		[Address(RVA = "0xB03D00", Offset = "0xB03D00", VA = "0xB03D00")]
		[DebuggerHidden]
		public <_Muffle>d__8(int <>1__state)
		{
		}

		[Token(Token = "0x600002C")]
		[Address(RVA = "0xB03E14", Offset = "0xB03E14", VA = "0xB03E14", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600002D")]
		[Address(RVA = "0xB03E18", Offset = "0xB03E18", VA = "0xB03E18", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600002F")]
		[Address(RVA = "0xB03E80", Offset = "0xB03E80", VA = "0xB03E80", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200000E")]
	[CompilerGenerated]
	private sealed class <_UnMuffle>d__9 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000035")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000036")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000037")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MusicMuffler <>4__this;

		[Token(Token = "0x17000003")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000034")]
			[Address(RVA = "0xB03F2C", Offset = "0xB03F2C", VA = "0xB03F2C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000004")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000036")]
			[Address(RVA = "0xB03F74", Offset = "0xB03F74", VA = "0xB03F74", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000031")]
		[Address(RVA = "0xB03D28", Offset = "0xB03D28", VA = "0xB03D28")]
		[DebuggerHidden]
		public <_UnMuffle>d__9(int <>1__state)
		{
		}

		[Token(Token = "0x6000032")]
		[Address(RVA = "0xB03EC8", Offset = "0xB03EC8", VA = "0xB03EC8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000033")]
		[Address(RVA = "0xB03ECC", Offset = "0xB03ECC", VA = "0xB03ECC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000035")]
		[Address(RVA = "0xB03F34", Offset = "0xB03F34", VA = "0xB03F34", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200000F")]
	[CompilerGenerated]
	private sealed class <FadeVolume>d__10 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000038")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000039")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400003A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float duration;

		[Token(Token = "0x400003B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float from;

		[Token(Token = "0x400003C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float to;

		[Token(Token = "0x400003D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public MusicMuffler <>4__this;

		[Token(Token = "0x400003E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float <startTime>5__2;

		[Token(Token = "0x17000005")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600003A")]
			[Address(RVA = "0xB040E4", Offset = "0xB040E4", VA = "0xB040E4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000006")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600003C")]
			[Address(RVA = "0xB0412C", Offset = "0xB0412C", VA = "0xB0412C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000037")]
		[Address(RVA = "0xB03DDC", Offset = "0xB03DDC", VA = "0xB03DDC")]
		[DebuggerHidden]
		public <FadeVolume>d__10(int <>1__state)
		{
		}

		[Token(Token = "0x6000038")]
		[Address(RVA = "0xB03F7C", Offset = "0xB03F7C", VA = "0xB03F7C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000039")]
		[Address(RVA = "0xB03F80", Offset = "0xB03F80", VA = "0xB03F80", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600003B")]
		[Address(RVA = "0xB040EC", Offset = "0xB040EC", VA = "0xB040EC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400002C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioMixer _mixer;

	[Token(Token = "0x400002D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[Header("Debug")]
	public float f;

	[Token(Token = "0x400002E")]
	private const float VolumeUnMuffled = -2f;

	[Token(Token = "0x400002F")]
	private const float VolumeMuffled = -15f;

	[Token(Token = "0x4000030")]
	private const float LowpassUnMuffled = 10000f;

	[Token(Token = "0x4000031")]
	private const float LowpassMuffled = 700f;

	[Token(Token = "0x6000025")]
	[Address(RVA = "0xB03BD8", Offset = "0xB03BD8", VA = "0xB03BD8")]
	public void Muffle()
	{
	}

	[Token(Token = "0x6000026")]
	[Address(RVA = "0xB03C6C", Offset = "0xB03C6C", VA = "0xB03C6C")]
	public void UnMuffle()
	{
	}

	[Token(Token = "0x6000027")]
	[Address(RVA = "0xB03C04", Offset = "0xB03C04", VA = "0xB03C04")]
	[IteratorStateMachine(typeof(<_Muffle>d__8))]
	private IEnumerator _Muffle()
	{
		return null;
	}

	[Token(Token = "0x6000028")]
	[Address(RVA = "0xB03C98", Offset = "0xB03C98", VA = "0xB03C98")]
	[IteratorStateMachine(typeof(<_UnMuffle>d__9))]
	private IEnumerator _UnMuffle()
	{
		return null;
	}

	[Token(Token = "0x6000029")]
	[Address(RVA = "0xB03D50", Offset = "0xB03D50", VA = "0xB03D50")]
	[IteratorStateMachine(typeof(<FadeVolume>d__10))]
	public IEnumerator FadeVolume(float from, float to, float duration)
	{
		return null;
	}

	[Token(Token = "0x600002A")]
	[Address(RVA = "0xB03E04", Offset = "0xB03E04", VA = "0xB03E04")]
	public MusicMuffler()
	{
	}
}
[Token(Token = "0x2000010")]
public class MusicStateMachine : MonoStateMachine
{
	[Token(Token = "0x400003F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[Space(30f)]
	public SilentState silentState;

	[Token(Token = "0x4000040")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public WaitingState waitState;

	[Token(Token = "0x4000041")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public PlayingState playingState;

	[Token(Token = "0x600003D")]
	[Address(RVA = "0xB04134", Offset = "0xB04134", VA = "0xB04134")]
	public void Setup(State state, PieceCollection pieceCollection, Grid grid)
	{
	}

	[Token(Token = "0x600003E")]
	[Address(RVA = "0xB042E4", Offset = "0xB042E4", VA = "0xB042E4")]
	public MusicStateMachine()
	{
	}
}
[Token(Token = "0x2000011")]
public class MutedState : MonoState
{
	[Token(Token = "0x4000042")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public MusicPlayer _musicPlayer;

	[Token(Token = "0x4000043")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public MonoState _playingState;

	[Token(Token = "0x4000044")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public MonoState _silentState;

	[Token(Token = "0x4000045")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private State _state;

	[Token(Token = "0x4000046")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private PieceCollection _pieceCollection;

	[Token(Token = "0x4000047")]
	private const float BackToPlayingDelay = 5f;

	[Token(Token = "0x600003F")]
	[Address(RVA = "0xB042EC", Offset = "0xB042EC", VA = "0xB042EC")]
	public void Setup(State state, PieceCollection pieceCollection)
	{
	}

	[Token(Token = "0x6000040")]
	[Address(RVA = "0xB042F4", Offset = "0xB042F4", VA = "0xB042F4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000041")]
	[Address(RVA = "0xB04438", Offset = "0xB04438", VA = "0xB04438")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000042")]
	[Address(RVA = "0xB0456C", Offset = "0xB0456C", VA = "0xB0456C")]
	private void CheckPiecesOnGrid()
	{
	}

	[Token(Token = "0x6000043")]
	[Address(RVA = "0xB04600", Offset = "0xB04600", VA = "0xB04600")]
	private void GoToPlaying()
	{
	}

	[Token(Token = "0x6000044")]
	[Address(RVA = "0xB04644", Offset = "0xB04644", VA = "0xB04644")]
	private void GoToSilentState()
	{
	}

	[Token(Token = "0x6000045")]
	[Address(RVA = "0xB04688", Offset = "0xB04688", VA = "0xB04688")]
	public MutedState()
	{
	}
}
[Token(Token = "0x2000012")]
public class PlayingState : MonoState
{
	[Token(Token = "0x2000013")]
	[CompilerGenerated]
	private sealed class <WaitAndCheckMuffle>d__25 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000054")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000055")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000056")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float time;

		[Token(Token = "0x4000057")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public PlayingState <>4__this;

		[Token(Token = "0x17000007")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600005B")]
			[Address(RVA = "0xB05DB0", Offset = "0xB05DB0", VA = "0xB05DB0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000008")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600005D")]
			[Address(RVA = "0xB05DF8", Offset = "0xB05DF8", VA = "0xB05DF8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000058")]
		[Address(RVA = "0xB0585C", Offset = "0xB0585C", VA = "0xB0585C")]
		[DebuggerHidden]
		public <WaitAndCheckMuffle>d__25(int <>1__state)
		{
		}

		[Token(Token = "0x6000059")]
		[Address(RVA = "0xB05D00", Offset = "0xB05D00", VA = "0xB05D00", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600005A")]
		[Address(RVA = "0xB05D04", Offset = "0xB05D04", VA = "0xB05D04", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600005C")]
		[Address(RVA = "0xB05DB8", Offset = "0xB05DB8", VA = "0xB05DB8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000048")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public MusicPlayer _player;

	[Token(Token = "0x4000049")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public TrackList _trackList;

	[Token(Token = "0x400004A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public SilentState _silentState;

	[Token(Token = "0x400004B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public WaitingState _waitingState;

	[Token(Token = "0x400004C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public VrToggle _playToggle;

	[Token(Token = "0x400004D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public MusicMuffler _musicMuffler;

	[Token(Token = "0x400004E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private State _state;

	[Token(Token = "0x400004F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private PieceCollection _pieceCollection;

	[Token(Token = "0x4000050")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private List<AudioClip> _unplayedTracks;

	[Token(Token = "0x4000051")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Grid _grid;

	[Token(Token = "0x4000052")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private float _lastTimePuzzleOpened;

	[Token(Token = "0x4000053")]
	private const float UnMuteDelay = 2f;

	[Token(Token = "0x6000046")]
	[Address(RVA = "0xB0426C", Offset = "0xB0426C", VA = "0xB0426C")]
	public void Setup(State state, PieceCollection pieceCollection, Grid grid)
	{
	}

	[Token(Token = "0x6000047")]
	[Address(RVA = "0xB04690", Offset = "0xB04690", VA = "0xB04690")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000048")]
	[Address(RVA = "0xB04E1C", Offset = "0xB04E1C", VA = "0xB04E1C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000049")]
	[Address(RVA = "0xB051DC", Offset = "0xB051DC", VA = "0xB051DC")]
	private void CheckPlayButtonMute(InteractableState state)
	{
	}

	[Token(Token = "0x600004A")]
	[Address(RVA = "0xB052D8", Offset = "0xB052D8", VA = "0xB052D8")]
	private void CheckToMuffle(bool open)
	{
	}

	[Token(Token = "0x600004B")]
	[Address(RVA = "0xB04C18", Offset = "0xB04C18", VA = "0xB04C18")]
	private void CheckToMuffle()
	{
	}

	[Token(Token = "0x600004C")]
	[Address(RVA = "0xB055CC", Offset = "0xB055CC", VA = "0xB055CC")]
	private void SetMuffle(bool on)
	{
	}

	[Token(Token = "0x600004D")]
	[Address(RVA = "0xB04D1C", Offset = "0xB04D1C", VA = "0xB04D1C")]
	private void CheckToMute()
	{
	}

	[Token(Token = "0x600004E")]
	[Address(RVA = "0xB051F4", Offset = "0xB051F4", VA = "0xB051F4")]
	private void CheckToUnMute()
	{
	}

	[Token(Token = "0x600004F")]
	[Address(RVA = "0xB055F0", Offset = "0xB055F0", VA = "0xB055F0")]
	private void UnMute()
	{
	}

	[Token(Token = "0x6000050")]
	[Address(RVA = "0xB04AFC", Offset = "0xB04AFC", VA = "0xB04AFC")]
	private AudioClip GetClip()
	{
		return null;
	}

	[Token(Token = "0x6000051")]
	[Address(RVA = "0xB0560C", Offset = "0xB0560C", VA = "0xB0560C")]
	private void GameModeChanged(Mode mode)
	{
	}

	[Token(Token = "0x6000052")]
	[Address(RVA = "0xB056E4", Offset = "0xB056E4", VA = "0xB056E4")]
	private void ActivelevelFinished()
	{
	}

	[Token(Token = "0x6000053")]
	[Address(RVA = "0xB057E4", Offset = "0xB057E4", VA = "0xB057E4")]
	[IteratorStateMachine(typeof(<WaitAndCheckMuffle>d__25))]
	private IEnumerator WaitAndCheckMuffle(float time)
	{
		return null;
	}

	[Token(Token = "0x6000054")]
	[Address(RVA = "0xB05884", Offset = "0xB05884", VA = "0xB05884")]
	private void GoToWaiting()
	{
	}

	[Token(Token = "0x6000055")]
	[Address(RVA = "0xB0593C", Offset = "0xB0593C", VA = "0xB0593C")]
	private void GoToShortWaiting()
	{
	}

	[Token(Token = "0x6000056")]
	[Address(RVA = "0xB052DC", Offset = "0xB052DC", VA = "0xB052DC")]
	private bool GridAlmostComplete()
	{
		return default(bool);
	}

	[Token(Token = "0x6000057")]
	[Address(RVA = "0xB05C84", Offset = "0xB05C84", VA = "0xB05C84")]
	public PlayingState()
	{
	}
}
[Token(Token = "0x2000014")]
public class SilentState : MonoState
{
	[Token(Token = "0x4000058")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public WaitingState waitingState;

	[Token(Token = "0x4000059")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private State _state;

	[Token(Token = "0x600005E")]
	[Address(RVA = "0xB05E00", Offset = "0xB05E00", VA = "0xB05E00")]
	public void Setup(State state)
	{
	}

	[Token(Token = "0x600005F")]
	[Address(RVA = "0xB05E08", Offset = "0xB05E08", VA = "0xB05E08")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000060")]
	[Address(RVA = "0xB05FD0", Offset = "0xB05FD0", VA = "0xB05FD0")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000061")]
	[Address(RVA = "0xB06064", Offset = "0xB06064", VA = "0xB06064")]
	private void CheckGoToWaiting(Mode mode)
	{
	}

	[Token(Token = "0x6000062")]
	[Address(RVA = "0xB06068", Offset = "0xB06068", VA = "0xB06068")]
	private void CheckGoToWaiting()
	{
	}

	[Token(Token = "0x6000063")]
	[Address(RVA = "0xB06228", Offset = "0xB06228", VA = "0xB06228")]
	private void GoToWaiting()
	{
	}

	[Token(Token = "0x6000064")]
	[Address(RVA = "0xB062CC", Offset = "0xB062CC", VA = "0xB062CC")]
	public SilentState()
	{
	}
}
[Token(Token = "0x2000015")]
public class WaitingState : MonoState
{
	[Token(Token = "0x2000016")]
	[CompilerGenerated]
	private sealed class <WaitToStartPlaying>d__22 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000067")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000068")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000069")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public WaitingState <>4__this;

		[Token(Token = "0x400006A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <startTime>5__2;

		[Token(Token = "0x17000009")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000073")]
			[Address(RVA = "0xB06CB4", Offset = "0xB06CB4", VA = "0xB06CB4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700000A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000075")]
			[Address(RVA = "0xB06CFC", Offset = "0xB06CFC", VA = "0xB06CFC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000070")]
		[Address(RVA = "0xB06998", Offset = "0xB06998", VA = "0xB06998")]
		[DebuggerHidden]
		public <WaitToStartPlaying>d__22(int <>1__state)
		{
		}

		[Token(Token = "0x6000071")]
		[Address(RVA = "0xB06A44", Offset = "0xB06A44", VA = "0xB06A44", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000072")]
		[Address(RVA = "0xB06A48", Offset = "0xB06A48", VA = "0xB06A48", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000074")]
		[Address(RVA = "0xB06CBC", Offset = "0xB06CBC", VA = "0xB06CBC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400005A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public SilentState silentState;

	[Token(Token = "0x400005B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public PlayingState playingState;

	[Token(Token = "0x400005C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private State _state;

	[Token(Token = "0x400005D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private PieceCollection _pieces;

	[Token(Token = "0x400005E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	[Header("Debug")]
	private float __waitUntilStartPlaying;

	[Token(Token = "0x400005F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[SerializeField]
	private float __secondsPassed;

	[Token(Token = "0x4000060")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float _minWait;

	[Token(Token = "0x4000061")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private float _maxWait;

	[Token(Token = "0x4000062")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Mode[] _allowedModes;

	[Token(Token = "0x4000063")]
	private const float DefaultMin = 40f;

	[Token(Token = "0x4000064")]
	private const float DefaultMax = 50f;

	[Token(Token = "0x4000065")]
	private const float DefaultMinCmm = 3f;

	[Token(Token = "0x4000066")]
	private const float DefaultMaxCmm = 4f;

	[Token(Token = "0x6000065")]
	[Address(RVA = "0xB041A4", Offset = "0xB041A4", VA = "0xB041A4")]
	public void Setup(State state, PieceCollection pieces)
	{
	}

	[Token(Token = "0x6000066")]
	[Address(RVA = "0xB062D4", Offset = "0xB062D4", VA = "0xB062D4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000067")]
	[Address(RVA = "0xB06560", Offset = "0xB06560", VA = "0xB06560")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000068")]
	[Address(RVA = "0xB05684", Offset = "0xB05684", VA = "0xB05684")]
	public void SetDefaultWait()
	{
	}

	[Token(Token = "0x6000069")]
	[Address(RVA = "0xB05A3C", Offset = "0xB05A3C", VA = "0xB05A3C")]
	public void SetMinMaxWait(float min, float max)
	{
	}

	[Token(Token = "0x600006A")]
	[Address(RVA = "0xB066C4", Offset = "0xB066C4", VA = "0xB066C4")]
	private void GoToPlayingIfContinousMusicMode()
	{
	}

	[Token(Token = "0x600006B")]
	[Address(RVA = "0xB06790", Offset = "0xB06790", VA = "0xB06790")]
	private void StopWaitingAndGoToSilent(Mode mode)
	{
	}

	[Token(Token = "0x600006C")]
	[Address(RVA = "0xB06804", Offset = "0xB06804", VA = "0xB06804")]
	private void StopWaitingAndGoToSilent()
	{
	}

	[Token(Token = "0x600006D")]
	[Address(RVA = "0xB068D0", Offset = "0xB068D0", VA = "0xB068D0")]
	private void RestartWaiting()
	{
	}

	[Token(Token = "0x600006E")]
	[Address(RVA = "0xB064F8", Offset = "0xB064F8", VA = "0xB064F8")]
	[IteratorStateMachine(typeof(<WaitToStartPlaying>d__22))]
	private IEnumerator WaitToStartPlaying()
	{
		return null;
	}

	[Token(Token = "0x600006F")]
	[Address(RVA = "0xB069C0", Offset = "0xB069C0", VA = "0xB069C0")]
	public WaitingState()
	{
	}
}
[Token(Token = "0x2000017")]
public class PieceCollisionAudio : MonoBehaviour
{
	[Token(Token = "0x400006B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioSource _source;

	[Token(Token = "0x400006C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Rigidbody _rigidBody;

	[Token(Token = "0x400006D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static float _lastAudioTimestamp;

	[Token(Token = "0x400006E")]
	private const float _minTimeBetweenCollisionAudio = 0.2f;

	[Token(Token = "0x400006F")]
	private const float _speedMinVolume = 0.01f;

	[Token(Token = "0x4000070")]
	private const float _speedMaxVolume = 0.5f;

	[Token(Token = "0x4000071")]
	private const float _pitchVariation = 0.2f;

	[Token(Token = "0x6000076")]
	[Address(RVA = "0xB06D04", Offset = "0xB06D04", VA = "0xB06D04")]
	private void OnCollisionEnter(Collision other)
	{
	}

	[Token(Token = "0x6000077")]
	[Address(RVA = "0xB06E90", Offset = "0xB06E90", VA = "0xB06E90")]
	private bool ValidCollision(Collision other)
	{
		return default(bool);
	}

	[Token(Token = "0x6000078")]
	[Address(RVA = "0xB06F90", Offset = "0xB06F90", VA = "0xB06F90")]
	private bool CanPlayAudio()
	{
		return default(bool);
	}

	[Token(Token = "0x6000079")]
	[Address(RVA = "0xB06FF4", Offset = "0xB06FF4", VA = "0xB06FF4")]
	public PieceCollisionAudio()
	{
	}
}
[Token(Token = "0x2000018")]
public class PieceNotePlayer : StateBehaviour
{
	[Token(Token = "0x2000019")]
	[CompilerGenerated]
	private sealed class <PlayChord>d__5 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000074")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000075")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000076")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<string> keys;

		[Token(Token = "0x4000077")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float delayBetweenNotes;

		[Token(Token = "0x4000078")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private List<string>.Enumerator <>7__wrap1;

		[Token(Token = "0x1700000B")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000083")]
			[Address(RVA = "0xB07710", Offset = "0xB07710", VA = "0xB07710", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700000C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000085")]
			[Address(RVA = "0xB07758", Offset = "0xB07758", VA = "0xB07758", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600007F")]
		[Address(RVA = "0xB07454", Offset = "0xB07454", VA = "0xB07454")]
		[DebuggerHidden]
		public <PlayChord>d__5(int <>1__state)
		{
		}

		[Token(Token = "0x6000080")]
		[Address(RVA = "0xB07484", Offset = "0xB07484", VA = "0xB07484", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000081")]
		[Address(RVA = "0xB074A0", Offset = "0xB074A0", VA = "0xB074A0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000082")]
		[Address(RVA = "0xB076C0", Offset = "0xB076C0", VA = "0xB076C0")]
		private void <>m__Finally1()
		{
		}

		[Token(Token = "0x6000084")]
		[Address(RVA = "0xB07718", Offset = "0xB07718", VA = "0xB07718", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000072")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Sampler sampler;

	[Token(Token = "0x4000073")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public PieceCollection pieceCollection;

	[Token(Token = "0x600007A")]
	[Address(RVA = "0xB06FFC", Offset = "0xB06FFC", VA = "0xB06FFC", Slot = "5")]
	protected override void ForceSetup()
	{
	}

	[Token(Token = "0x600007B")]
	[Address(RVA = "0xB070F8", Offset = "0xB070F8", VA = "0xB070F8")]
	private void PlayPieceTone(string id)
	{
	}

	[Token(Token = "0x600007C")]
	[Address(RVA = "0xB07360", Offset = "0xB07360", VA = "0xB07360")]
	private void PlayLevelCompleted()
	{
	}

	[Token(Token = "0x600007D")]
	[Address(RVA = "0xB073DC", Offset = "0xB073DC", VA = "0xB073DC")]
	[IteratorStateMachine(typeof(<PlayChord>d__5))]
	private IEnumerator PlayChord(List<string> keys, float delayBetweenNotes)
	{
		return null;
	}

	[Token(Token = "0x600007E")]
	[Address(RVA = "0xB0747C", Offset = "0xB0747C", VA = "0xB0747C")]
	public PieceNotePlayer()
	{
	}
}
[Token(Token = "0x200001A")]
public enum Instrument
{
	[Token(Token = "0x400007A")]
	Piano,
	[Token(Token = "0x400007B")]
	PianoMuffled,
	[Token(Token = "0x400007C")]
	PianoOutOfGrid
}
[Token(Token = "0x200001B")]
public class SamplerWrapper
{
	[Token(Token = "0x200001C")]
	[CompilerGenerated]
	private sealed class <PlayChord>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000080")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000081")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000082")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<string> keys;

		[Token(Token = "0x4000083")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Instrument instrument;

		[Token(Token = "0x4000084")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float delayBetweenNotes;

		[Token(Token = "0x4000085")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private List<string>.Enumerator <>7__wrap1;

		[Token(Token = "0x1700000D")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000090")]
			[Address(RVA = "0xB07D54", Offset = "0xB07D54", VA = "0xB07D54", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700000E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000092")]
			[Address(RVA = "0xB07D9C", Offset = "0xB07D9C", VA = "0xB07D9C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600008C")]
		[Address(RVA = "0xB07930", Offset = "0xB07930", VA = "0xB07930")]
		[DebuggerHidden]
		public <PlayChord>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x600008D")]
		[Address(RVA = "0xB07AD4", Offset = "0xB07AD4", VA = "0xB07AD4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600008E")]
		[Address(RVA = "0xB07AF0", Offset = "0xB07AF0", VA = "0xB07AF0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600008F")]
		[Address(RVA = "0xB07D04", Offset = "0xB07D04", VA = "0xB07D04")]
		private void <>m__Finally1()
		{
		}

		[Token(Token = "0x6000091")]
		[Address(RVA = "0xB07D5C", Offset = "0xB07D5C", VA = "0xB07D5C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400007D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Sampler _piano;

	[Token(Token = "0x400007E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static Sampler _pianoMuffled;

	[Token(Token = "0x400007F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static Sampler _pianoOutOfGrid;

	[Token(Token = "0x6000086")]
	[Address(RVA = "0xB07760", Offset = "0xB07760", VA = "0xB07760")]
	public SamplerWrapper(Sampler piano, Sampler pianoMuffled, Sampler pianoOutOfGrid)
	{
	}

	[Token(Token = "0x6000087")]
	[Address(RVA = "0xB07314", Offset = "0xB07314", VA = "0xB07314")]
	public static void PlayNote(string key, PlayNoteOptions options)
	{
	}

	[Token(Token = "0x6000088")]
	[Address(RVA = "0xB07850", Offset = "0xB07850", VA = "0xB07850")]
	public static void PlayChordArpeggio(List<string> chord, float delay = 0.05f, Instrument instrument = Instrument.Piano)
	{
	}

	[Token(Token = "0x6000089")]
	[Address(RVA = "0xB078A8", Offset = "0xB078A8", VA = "0xB078A8")]
	[IteratorStateMachine(typeof(<PlayChord>d__6))]
	private static IEnumerator PlayChord(List<string> keys, float delayBetweenNotes, Instrument instrument = Instrument.Piano)
	{
		return null;
	}

	[Token(Token = "0x600008A")]
	[Address(RVA = "0xB07958", Offset = "0xB07958", VA = "0xB07958")]
	public static void PlayChord(List<string> chord, Instrument instrument = Instrument.Piano)
	{
	}

	[Token(Token = "0x600008B")]
	[Address(RVA = "0xB077E0", Offset = "0xB077E0", VA = "0xB077E0")]
	private static Sampler GetSampler(Instrument instrument)
	{
		return null;
	}
}
[Serializable]
[Token(Token = "0x200001D")]
public class PlayNoteOptions
{
	[Token(Token = "0x4000086")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Instrument instrument;

	[Token(Token = "0x4000087")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public bool spatial;

	[Token(Token = "0x4000088")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 pos;

	[Token(Token = "0x6000093")]
	[Address(RVA = "0xB0730C", Offset = "0xB0730C", VA = "0xB0730C")]
	public PlayNoteOptions()
	{
	}
}
[Token(Token = "0x200001E")]
[RequireComponent(typeof(GrabAction))]
public class BoomerangForce : MonoBehaviour
{
	[Token(Token = "0x200001F")]
	[CompilerGenerated]
	private sealed class <EnableReleaseForce>d__21 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000097")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000098")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000099")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public BoomerangForce <>4__this;

		[Token(Token = "0x1700000F")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60000A0")]
			[Address(RVA = "0xB08414", Offset = "0xB08414", VA = "0xB08414", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000010")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60000A2")]
			[Address(RVA = "0xB0845C", Offset = "0xB0845C", VA = "0xB0845C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600009D")]
		[Address(RVA = "0xB08314", Offset = "0xB08314", VA = "0xB08314")]
		[DebuggerHidden]
		public <EnableReleaseForce>d__21(int <>1__state)
		{
		}

		[Token(Token = "0x600009E")]
		[Address(RVA = "0xB0835C", Offset = "0xB0835C", VA = "0xB0835C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600009F")]
		[Address(RVA = "0xB08360", Offset = "0xB08360", VA = "0xB08360", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60000A1")]
		[Address(RVA = "0xB0841C", Offset = "0xB0841C", VA = "0xB0841C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000089")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Rigidbody rigidBody;

	[Token(Token = "0x400008A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform leftHand;

	[Token(Token = "0x400008B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform rightHand;

	[Token(Token = "0x400008C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform segmentParent;

	[Token(Token = "0x400008D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float maxDistanceFromTarget;

	[Token(Token = "0x400008E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float maxExtremeDistance;

	[Token(Token = "0x400008F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float forceMultiplier;

	[Token(Token = "0x4000090")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private float _distance;

	[Token(Token = "0x4000091")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Vector3 _target;

	[Token(Token = "0x4000092")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private float _originalAngularDrag;

	[Token(Token = "0x4000093")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool _recentlyReleased;

	[Token(Token = "0x4000094")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
	private bool _outOfRange;

	[Token(Token = "0x4000095")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private GrabAction _interactableObject;

	[Token(Token = "0x4000096")]
	private const float _activeTime = 10f;

	[Token(Token = "0x6000094")]
	[Address(RVA = "0xB07DA4", Offset = "0xB07DA4", VA = "0xB07DA4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000095")]
	[Address(RVA = "0xB07E68", Offset = "0xB07E68", VA = "0xB07E68")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000096")]
	[Address(RVA = "0xB07E6C", Offset = "0xB07E6C", VA = "0xB07E6C")]
	private bool ShouldApplyForce()
	{
		return default(bool);
	}

	[Token(Token = "0x6000097")]
	[Address(RVA = "0xB07F3C", Offset = "0xB07F3C", VA = "0xB07F3C")]
	private void CheckIfOutOfRange()
	{
	}

	[Token(Token = "0x6000098")]
	[Address(RVA = "0xB08118", Offset = "0xB08118", VA = "0xB08118")]
	private void ApplyForce()
	{
	}

	[Token(Token = "0x6000099")]
	[Address(RVA = "0xB0801C", Offset = "0xB0801C", VA = "0xB0801C")]
	private Vector3 GetTarget()
	{
		return default(Vector3);
	}

	[Token(Token = "0x600009A")]
	[Address(RVA = "0xB0828C", Offset = "0xB0828C", VA = "0xB0828C")]
	private void HandleRelease(InteractionData data)
	{
	}

	[Token(Token = "0x600009B")]
	[Address(RVA = "0xB082AC", Offset = "0xB082AC", VA = "0xB082AC")]
	[IteratorStateMachine(typeof(<EnableReleaseForce>d__21))]
	private IEnumerator EnableReleaseForce()
	{
		return null;
	}

	[Token(Token = "0x600009C")]
	[Address(RVA = "0xB0833C", Offset = "0xB0833C", VA = "0xB0833C")]
	public BoomerangForce()
	{
	}
}
[Token(Token = "0x2000020")]
public class ChordDebugger : StateBehaviour
{
	[Token(Token = "0x400009A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float playBackSpeed;

	[Token(Token = "0x400009B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private ActiveLevelService _activeLevelService;

	[Token(Token = "0x400009C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private string _path;

	[Token(Token = "0x400009D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[Space(15f)]
	public List<Note> notes;

	[Token(Token = "0x60000A3")]
	[Address(RVA = "0xB08464", Offset = "0xB08464", VA = "0xB08464", Slot = "5")]
	protected override void ForceSetup()
	{
	}

	[Token(Token = "0x60000A4")]
	[Address(RVA = "0xB08500", Offset = "0xB08500", VA = "0xB08500")]
	public void PlayChord()
	{
	}

	[Token(Token = "0x60000A5")]
	[Address(RVA = "0xB0864C", Offset = "0xB0864C", VA = "0xB0864C")]
	public void PlayTriad()
	{
	}

	[Token(Token = "0x60000A6")]
	[Address(RVA = "0xB08870", Offset = "0xB08870", VA = "0xB08870")]
	public void SaveChanges()
	{
	}

	[Token(Token = "0x60000A7")]
	[Address(RVA = "0xB08E58", Offset = "0xB08E58", VA = "0xB08E58")]
	private void PopulateNoteList()
	{
	}

	[Token(Token = "0x60000A8")]
	[Address(RVA = "0xB089C4", Offset = "0xB089C4", VA = "0xB089C4")]
	private string LoadJsonIntoString(string path)
	{
		return null;
	}

	[Token(Token = "0x60000A9")]
	[Address(RVA = "0xB08ABC", Offset = "0xB08ABC", VA = "0xB08ABC")]
	private JSONArray GetChordClass()
	{
		return null;
	}

	[Token(Token = "0x60000AA")]
	[Address(RVA = "0xB08D54", Offset = "0xB08D54", VA = "0xB08D54")]
	private void SaveToJSON(JSONObject json)
	{
	}

	[Token(Token = "0x60000AB")]
	[Address(RVA = "0xB08ECC", Offset = "0xB08ECC", VA = "0xB08ECC")]
	public ChordDebugger()
	{
	}
}
[Token(Token = "0x2000022")]
public class CirclePosDistributor : MonoBehaviour
{
	[Token(Token = "0x40000A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool __debug;

	[Token(Token = "0x40000A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Transform head;

	[Token(Token = "0x40000A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool performFloorHeightCheck;

	[Token(Token = "0x40000A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float radiusMultiplierIfArc;

	[Token(Token = "0x40000A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public LayerMask _floor;

	[Token(Token = "0x40000A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private Ray _ray;

	[Token(Token = "0x40000A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private RaycastHit _hit;

	[Token(Token = "0x60000B1")]
	[Address(RVA = "0xB09008", Offset = "0xB09008", VA = "0xB09008")]
	private void Start()
	{
	}

	[Token(Token = "0x60000B2")]
	[Address(RVA = "0xB0901C", Offset = "0xB0901C", VA = "0xB0901C")]
	private void Update()
	{
	}

	[Token(Token = "0x60000B3")]
	[Address(RVA = "0xB09194", Offset = "0xB09194", VA = "0xB09194")]
	public void GetPositions(int spaces, float radius, ref List<Vector3> positions)
	{
	}

	[Token(Token = "0x60000B4")]
	[Address(RVA = "0xB09640", Offset = "0xB09640", VA = "0xB09640")]
	public void GetCirclePositions(int spaces, float radius, ref List<Vector3> positions)
	{
	}

	[Token(Token = "0x60000B5")]
	[Address(RVA = "0xB09324", Offset = "0xB09324", VA = "0xB09324")]
	public void GetArcPositions(int spaces, float radius, ref List<Vector3> positions)
	{
	}

	[Token(Token = "0x60000B6")]
	[Address(RVA = "0xB09898", Offset = "0xB09898", VA = "0xB09898")]
	public Vector3 RotatePointAroundPivot(Vector3 point, Vector3 pivot, Vector3 angles)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60000B7")]
	[Address(RVA = "0xB0920C", Offset = "0xB0920C", VA = "0xB0920C")]
	private float GetHeight()
	{
		return default(float);
	}

	[Token(Token = "0x60000B8")]
	[Address(RVA = "0xB09918", Offset = "0xB09918", VA = "0xB09918")]
	public CirclePosDistributor()
	{
	}
}
[Token(Token = "0x2000023")]
public class ColliderEvent : MonoBehaviour
{
	[Token(Token = "0x40000A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public UnityEvent OnEnter;

	[Token(Token = "0x40000AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public UnityEvent OnExit;

	[Token(Token = "0x60000B9")]
	[Address(RVA = "0xB09928", Offset = "0xB09928", VA = "0xB09928")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x60000BA")]
	[Address(RVA = "0xB09944", Offset = "0xB09944", VA = "0xB09944")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x60000BB")]
	[Address(RVA = "0xB09960", Offset = "0xB09960", VA = "0xB09960")]
	public ColliderEvent()
	{
	}
}
[Token(Token = "0x2000024")]
[RequireComponent(typeof(Renderer))]
public class ColorFlash : MonoBehaviour
{
	[Token(Token = "0x2000025")]
	[CompilerGenerated]
	private sealed class <FlashOnce>d__8 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40000B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40000B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40000B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float duration;

		[Token(Token = "0x40000B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public ColorFlash <>4__this;

		[Token(Token = "0x40000B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float <startTime>5__2;

		[Token(Token = "0x17000011")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60000C4")]
			[Address(RVA = "0xB09C2C", Offset = "0xB09C2C", VA = "0xB09C2C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000012")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60000C6")]
			[Address(RVA = "0xB09C74", Offset = "0xB09C74", VA = "0xB09C74", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60000C1")]
		[Address(RVA = "0xB09AD8", Offset = "0xB09AD8", VA = "0xB09AD8")]
		[DebuggerHidden]
		public <FlashOnce>d__8(int <>1__state)
		{
		}

		[Token(Token = "0x60000C2")]
		[Address(RVA = "0xB09B14", Offset = "0xB09B14", VA = "0xB09B14", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60000C3")]
		[Address(RVA = "0xB09B18", Offset = "0xB09B18", VA = "0xB09B18", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60000C5")]
		[Address(RVA = "0xB09C34", Offset = "0xB09C34", VA = "0xB09C34", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40000AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float strobeLightness;

	[Token(Token = "0x40000AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float defaultFlashDuration;

	[Token(Token = "0x40000AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Renderer _renderer;

	[Token(Token = "0x40000AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Color _originalColor;

	[Token(Token = "0x40000AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Color _flashColor;

	[Token(Token = "0x60000BC")]
	[Address(RVA = "0xB09968", Offset = "0xB09968", VA = "0xB09968")]
	private void Start()
	{
	}

	[Token(Token = "0x60000BD")]
	[Address(RVA = "0xB09A1C", Offset = "0xB09A1C", VA = "0xB09A1C")]
	public void Flash()
	{
	}

	[Token(Token = "0x60000BE")]
	[Address(RVA = "0xB09A24", Offset = "0xB09A24", VA = "0xB09A24")]
	public void Flash(float duration)
	{
	}

	[Token(Token = "0x60000BF")]
	[Address(RVA = "0xB09A60", Offset = "0xB09A60", VA = "0xB09A60")]
	[IteratorStateMachine(typeof(<FlashOnce>d__8))]
	private IEnumerator FlashOnce(float duration)
	{
		return null;
	}

	[Token(Token = "0x60000C0")]
	[Address(RVA = "0xB09B00", Offset = "0xB09B00", VA = "0xB09B00")]
	public ColorFlash()
	{
	}
}
[Token(Token = "0x2000026")]
public class ColorStrobe : StateBehaviour
{
	[Token(Token = "0x40000B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool _expandFlash;

	[Token(Token = "0x40000B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Renderer _expandingCube;

	[Token(Token = "0x40000B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Color _expandColor;

	[Token(Token = "0x40000B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Color _expandColorDark;

	[Token(Token = "0x40000B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Color _expandFadeColor;

	[Token(Token = "0x40000BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private float _maxSize;

	[Token(Token = "0x40000BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private float _randomSizeOffset;

	[Token(Token = "0x40000BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private bool _strobing;

	[Token(Token = "0x40000BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Renderer _renderer;

	[Token(Token = "0x40000BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Vector3Int _coords;

	[Token(Token = "0x40000BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private Color _originalColor;

	[Token(Token = "0x40000C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	private Color _strobeColor;

	[Token(Token = "0x40000C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private float _flashStart;

	[Token(Token = "0x40000C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private float _flashDuration;

	[Token(Token = "0x40000C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	private bool _flashing;

	[Token(Token = "0x40000C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private MaterialPropertyBlock _propBlock;

	[Token(Token = "0x40000C5")]
	private const float strobeLightness = 0.3f;

	[Token(Token = "0x60000C7")]
	[Address(RVA = "0xB09C7C", Offset = "0xB09C7C", VA = "0xB09C7C")]
	public void Setup(Renderer renderer, Vector3Int coords)
	{
	}

	[Token(Token = "0x60000C8")]
	[Address(RVA = "0xB09E54", Offset = "0xB09E54", VA = "0xB09E54")]
	private void Update()
	{
	}

	[Token(Token = "0x60000C9")]
	[Address(RVA = "0xB09D54", Offset = "0xB09D54", VA = "0xB09D54")]
	public void SetStrobing(bool value, bool expandFlash)
	{
	}

	[Token(Token = "0x60000CA")]
	[Address(RVA = "0xB0A224", Offset = "0xB0A224", VA = "0xB0A224")]
	public void UpdateColor(Color color)
	{
	}

	[Token(Token = "0x60000CB")]
	[Address(RVA = "0xB0A280", Offset = "0xB0A280", VA = "0xB0A280")]
	public void Flash(float duration)
	{
	}

	[Token(Token = "0x60000CC")]
	[Address(RVA = "0xB0A050", Offset = "0xB0A050", VA = "0xB0A050")]
	private void UpdateExpandingFlash(float factor)
	{
	}

	[Token(Token = "0x60000CD")]
	[Address(RVA = "0xB0A2A8", Offset = "0xB0A2A8", VA = "0xB0A2A8")]
	public ColorStrobe()
	{
	}
}
[Token(Token = "0x2000027")]
[RequireComponent(typeof(Renderer))]
public class ColorSwap : MonoBehaviour
{
	[Token(Token = "0x2000028")]
	[CompilerGenerated]
	private sealed class <_Swap>d__8 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40000CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40000CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40000CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ColorSwap <>4__this;

		[Token(Token = "0x40000CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Color color;

		[Token(Token = "0x17000013")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60000D8")]
			[Address(RVA = "0xB0A66C", Offset = "0xB0A66C", VA = "0xB0A66C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000014")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60000DA")]
			[Address(RVA = "0xB0A6B4", Offset = "0xB0A6B4", VA = "0xB0A6B4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60000D5")]
		[Address(RVA = "0xB0A3F0", Offset = "0xB0A3F0", VA = "0xB0A3F0")]
		[DebuggerHidden]
		public <_Swap>d__8(int <>1__state)
		{
		}

		[Token(Token = "0x60000D6")]
		[Address(RVA = "0xB0A5DC", Offset = "0xB0A5DC", VA = "0xB0A5DC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60000D7")]
		[Address(RVA = "0xB0A5E0", Offset = "0xB0A5E0", VA = "0xB0A5E0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60000D9")]
		[Address(RVA = "0xB0A674", Offset = "0xB0A674", VA = "0xB0A674", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000029")]
	[CompilerGenerated]
	private sealed class <_Revert>d__10 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40000D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40000D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40000D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ColorSwap <>4__this;

		[Token(Token = "0x40000D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Color color;

		[Token(Token = "0x17000015")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60000DE")]
			[Address(RVA = "0xB0A750", Offset = "0xB0A750", VA = "0xB0A750", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000016")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60000E0")]
			[Address(RVA = "0xB0A798", Offset = "0xB0A798", VA = "0xB0A798", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60000DB")]
		[Address(RVA = "0xB0A4DC", Offset = "0xB0A4DC", VA = "0xB0A4DC")]
		[DebuggerHidden]
		public <_Revert>d__10(int <>1__state)
		{
		}

		[Token(Token = "0x60000DC")]
		[Address(RVA = "0xB0A6BC", Offset = "0xB0A6BC", VA = "0xB0A6BC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60000DD")]
		[Address(RVA = "0xB0A6C0", Offset = "0xB0A6C0", VA = "0xB0A6C0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60000DF")]
		[Address(RVA = "0xB0A758", Offset = "0xB0A758", VA = "0xB0A758", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200002A")]
	[CompilerGenerated]
	private sealed class <SwapColor>d__11 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40000D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40000D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40000D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ColorSwap <>4__this;

		[Token(Token = "0x40000D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Color target;

		[Token(Token = "0x40000D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float <startTime>5__2;

		[Token(Token = "0x40000D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private Color <color>5__3;

		[Token(Token = "0x17000017")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60000E4")]
			[Address(RVA = "0xB0A8C0", Offset = "0xB0A8C0", VA = "0xB0A8C0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000018")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60000E6")]
			[Address(RVA = "0xB0A908", Offset = "0xB0A908", VA = "0xB0A908", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60000E1")]
		[Address(RVA = "0xB0A594", Offset = "0xB0A594", VA = "0xB0A594")]
		[DebuggerHidden]
		public <SwapColor>d__11(int <>1__state)
		{
		}

		[Token(Token = "0x60000E2")]
		[Address(RVA = "0xB0A7A0", Offset = "0xB0A7A0", VA = "0xB0A7A0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60000E3")]
		[Address(RVA = "0xB0A7A4", Offset = "0xB0A7A4", VA = "0xB0A7A4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60000E5")]
		[Address(RVA = "0xB0A8C8", Offset = "0xB0A8C8", VA = "0xB0A8C8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40000C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Color swapColor;

	[Token(Token = "0x40000C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float swapSpeed;

	[Token(Token = "0x40000C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Material originalMaterial;

	[Token(Token = "0x40000C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Material fadeMaterial;

	[Token(Token = "0x40000CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Renderer _renderer;

	[Token(Token = "0x40000CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Color _originalColor;

	[Token(Token = "0x60000CE")]
	[Address(RVA = "0xB0A2BC", Offset = "0xB0A2BC", VA = "0xB0A2BC")]
	private void Start()
	{
	}

	[Token(Token = "0x60000CF")]
	[Address(RVA = "0xB0A32C", Offset = "0xB0A32C", VA = "0xB0A32C")]
	public void Swap()
	{
	}

	[Token(Token = "0x60000D0")]
	[Address(RVA = "0xB0A360", Offset = "0xB0A360", VA = "0xB0A360")]
	[IteratorStateMachine(typeof(<_Swap>d__8))]
	private IEnumerator _Swap(Color color)
	{
		return null;
	}

	[Token(Token = "0x60000D1")]
	[Address(RVA = "0xB0A418", Offset = "0xB0A418", VA = "0xB0A418")]
	public void Revert()
	{
	}

	[Token(Token = "0x60000D2")]
	[Address(RVA = "0xB0A44C", Offset = "0xB0A44C", VA = "0xB0A44C")]
	[IteratorStateMachine(typeof(<_Revert>d__10))]
	private IEnumerator _Revert(Color color)
	{
		return null;
	}

	[Token(Token = "0x60000D3")]
	[Address(RVA = "0xB0A504", Offset = "0xB0A504", VA = "0xB0A504")]
	[IteratorStateMachine(typeof(<SwapColor>d__11))]
	private IEnumerator SwapColor(Color target)
	{
		return null;
	}

	[Token(Token = "0x60000D4")]
	[Address(RVA = "0xB0A5BC", Offset = "0xB0A5BC", VA = "0xB0A5BC")]
	public ColorSwap()
	{
	}
}
[Token(Token = "0x200002B")]
[RequireComponent(typeof(Rigidbody))]
public class ConstrainRigidBodyLocal : MonoBehaviour
{
	[Token(Token = "0x40000DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Rigidbody _rigidBody;

	[Token(Token = "0x60000E7")]
	[Address(RVA = "0xB0A910", Offset = "0xB0A910", VA = "0xB0A910")]
	private void Start()
	{
	}

	[Token(Token = "0x60000E8")]
	[Address(RVA = "0xB0A960", Offset = "0xB0A960", VA = "0xB0A960")]
	private void Update()
	{
	}

	[Token(Token = "0x60000E9")]
	[Address(RVA = "0xB0A9EC", Offset = "0xB0A9EC", VA = "0xB0A9EC")]
	public ConstrainRigidBodyLocal()
	{
	}
}
[Token(Token = "0x200002C")]
public class AdvancedControlsController : MonoBehaviour
{
	[Token(Token = "0x40000DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public VrToggle _toggle;

	[Token(Token = "0x60000EA")]
	[Address(RVA = "0xB0A9F4", Offset = "0xB0A9F4", VA = "0xB0A9F4")]
	private void Start()
	{
	}

	[Token(Token = "0x60000EB")]
	[Address(RVA = "0xB0AA80", Offset = "0xB0AA80", VA = "0xB0AA80")]
	private void SendAction(bool value)
	{
	}

	[Token(Token = "0x60000EC")]
	[Address(RVA = "0xB0AB8C", Offset = "0xB0AB8C", VA = "0xB0AB8C")]
	public AdvancedControlsController()
	{
	}
}
[Token(Token = "0x200002D")]
public class AutoselectController : MonoBehaviour
{
	[Token(Token = "0x40000DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public VrToggle toggle;

	[Token(Token = "0x60000ED")]
	[Address(RVA = "0xB0AB94", Offset = "0xB0AB94", VA = "0xB0AB94")]
	private void Awake()
	{
	}

	[Token(Token = "0x60000EE")]
	[Address(RVA = "0xB0AC20", Offset = "0xB0AC20", VA = "0xB0AC20")]
	private void SetRemoveRestriciton(bool enabled)
	{
	}

	[Token(Token = "0x60000EF")]
	[Address(RVA = "0xB0ACC0", Offset = "0xB0ACC0", VA = "0xB0ACC0")]
	public AutoselectController()
	{
	}
}
[Token(Token = "0x200002E")]
public class BackPageController : MonoBehaviour
{
	[Token(Token = "0x40000DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public VrButton button;

	[Token(Token = "0x40000DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public PageGroup group;

	[Token(Token = "0x60000F0")]
	[Address(RVA = "0xB0ACC8", Offset = "0xB0ACC8", VA = "0xB0ACC8")]
	private void Start()
	{
	}

	[Token(Token = "0x60000F1")]
	[Address(RVA = "0xB0AE00", Offset = "0xB0AE00", VA = "0xB0AE00")]
	private void PageUp()
	{
	}

	[Token(Token = "0x60000F2")]
	[Address(RVA = "0xB0AE1C", Offset = "0xB0AE1C", VA = "0xB0AE1C")]
	public BackPageController()
	{
	}
}
[Token(Token = "0x200002F")]
public class BrightnessControllerVrui : MonoBehaviour
{
	[Token(Token = "0x40000DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public VrButton increase;

	[Token(Token = "0x40000E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public VrButton decrease;

	[Token(Token = "0x40000E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public VolumeBars bars;

	[Token(Token = "0x60000F3")]
	[Address(RVA = "0xB0AE24", Offset = "0xB0AE24", VA = "0xB0AE24")]
	private void Start()
	{
	}

	[Token(Token = "0x60000F4")]
	[Address(RVA = "0xB0AF04", Offset = "0xB0AF04", VA = "0xB0AF04")]
	private void IncreaseValue()
	{
	}

	[Token(Token = "0x60000F5")]
	[Address(RVA = "0xB0AFC0", Offset = "0xB0AFC0", VA = "0xB0AFC0")]
	private void DecreaseValue()
	{
	}

	[Token(Token = "0x60000F6")]
	[Address(RVA = "0xB0AF34", Offset = "0xB0AF34", VA = "0xB0AF34")]
	private void SendAction()
	{
	}

	[Token(Token = "0x60000F7")]
	[Address(RVA = "0xB0AFF0", Offset = "0xB0AFF0", VA = "0xB0AFF0")]
	private float LevelToVol(int level)
	{
		return default(float);
	}

	[Token(Token = "0x60000F8")]
	[Address(RVA = "0xB0B060", Offset = "0xB0B060", VA = "0xB0B060")]
	public BrightnessControllerVrui()
	{
	}
}
[Token(Token = "0x2000030")]
public class BuyDlcController : MonoBehaviour
{
	[Token(Token = "0x40000E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public VrButton _button;

	[Token(Token = "0x60000F9")]
	[Address(RVA = "0xB0B068", Offset = "0xB0B068", VA = "0xB0B068")]
	private void Start()
	{
	}

	[Token(Token = "0x60000FA")]
	[Address(RVA = "0xB0B0F4", Offset = "0xB0B0F4", VA = "0xB0B0F4")]
	private void _button_OnClick()
	{
	}

	[Token(Token = "0x60000FB")]
	[Address(RVA = "0xB0B1BC", Offset = "0xB0B1BC", VA = "0xB0B1BC")]
	public BuyDlcController()
	{
	}
}
[Token(Token = "0x2000031")]
public class CamController : MonoBehaviour
{
	[Token(Token = "0x40000E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Dropdown _camSelect;

	[Token(Token = "0x60000FC")]
	[Address(RVA = "0xB0B1C4", Offset = "0xB0B1C4", VA = "0xB0B1C4")]
	private void Start()
	{
	}

	[Token(Token = "0x60000FD")]
	[Address(RVA = "0xB0B26C", Offset = "0xB0B26C", VA = "0xB0B26C")]
	private void ChangeCam(int index)
	{
	}

	[Token(Token = "0x60000FE")]
	[Address(RVA = "0xB0B358", Offset = "0xB0B358", VA = "0xB0B358")]
	public CamController()
	{
	}
}
[Token(Token = "0x2000032")]
public class ClearProgressController : MonoBehaviour
{
	[Token(Token = "0x40000E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public VrButton _button;

	[Token(Token = "0x60000FF")]
	[Address(RVA = "0xB0B360", Offset = "0xB0B360", VA = "0xB0B360")]
	private void Start()
	{
	}

	[Token(Token = "0x6000100")]
	[Address(RVA = "0xB0B3EC", Offset = "0xB0B3EC", VA = "0xB0B3EC")]
	private void SendAction()
	{
	}

	[Token(Token = "0x6000101")]
	[Address(RVA = "0xB0B470", Offset = "0xB0B470", VA = "0xB0B470")]
	public ClearProgressController()
	{
	}
}
[Token(Token = "0x2000033")]
public class ClearPuzzleController : MonoBehaviour
{
	[Token(Token = "0x40000E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public VrButton _clearButton;

	[Token(Token = "0x40000E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public PuzzleLoader _puzzleLoader;

	[Token(Token = "0x40000E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public PuzzleSaver _puzzleSaver;

	[Token(Token = "0x40000E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public WarningMenu _warning;

	[Token(Token = "0x6000102")]
	[Address(RVA = "0xB0B478", Offset = "0xB0B478", VA = "0xB0B478")]
	private void Start()
	{
	}

	[Token(Token = "0x6000103")]
	[Address(RVA = "0xB0B504", Offset = "0xB0B504", VA = "0xB0B504")]
	private void ShowWarning()
	{
	}

	[Token(Token = "0x6000104")]
	[Address(RVA = "0xB0B6EC", Offset = "0xB0B6EC", VA = "0xB0B6EC")]
	private void ClearAll()
	{
	}

	[Token(Token = "0x6000105")]
	[Address(RVA = "0xB0B7F4", Offset = "0xB0B7F4", VA = "0xB0B7F4")]
	private void ClearGrid()
	{
	}

	[Token(Token = "0x6000106")]
	[Address(RVA = "0xB0B860", Offset = "0xB0B860", VA = "0xB0B860")]
	public ClearPuzzleController()
	{
	}
}
[Token(Token = "0x2000034")]
public class ColorThemeController : MonoBehaviour
{
	[Token(Token = "0x40000E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public VrToggle light;

	[Token(Token = "0x40000EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public VrToggle dark;

	[Token(Token = "0x40000EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public VrToggle passthrough;

	[Token(Token = "0x40000EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public VrToggle darkMode;

	[Token(Token = "0x6000107")]
	[Address(RVA = "0xB0B868", Offset = "0xB0B868", VA = "0xB0B868")]
	private void Start()
	{
	}

	[Token(Token = "0x6000108")]
	[Address(RVA = "0xB0BA2C", Offset = "0xB0BA2C", VA = "0xB0BA2C")]
	private void UpdateTheme(ColorThemeType theme)
	{
	}

	[Token(Token = "0x6000109")]
	[Address(RVA = "0xB0BAC0", Offset = "0xB0BAC0", VA = "0xB0BAC0")]
	private void UpdateTheme(bool enabled)
	{
	}

	[Token(Token = "0x600010A")]
	[Address(RVA = "0xB0BAC8", Offset = "0xB0BAC8", VA = "0xB0BAC8")]
	public ColorThemeController()
	{
	}
}
[Token(Token = "0x2000035")]
public class CommunityPuzzleController : MonoBehaviour
{
	[Token(Token = "0x40000ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Space(25f)]
	public VrButton _refresh;

	[Token(Token = "0x40000EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public VrButton _pageUp;

	[Token(Token = "0x40000EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public VrButton _pageDown;

	[Token(Token = "0x40000F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private CommunityLevelModel _model;

	[Token(Token = "0x600010E")]
	[Address(RVA = "0xB0BAE8", Offset = "0xB0BAE8", VA = "0xB0BAE8")]
	public void Setup(CommunityLevelModel model)
	{
	}

	[Token(Token = "0x600010F")]
	[Address(RVA = "0xB0BBD0", Offset = "0xB0BBD0", VA = "0xB0BBD0")]
	private void PageUp()
	{
	}

	[Token(Token = "0x6000110")]
	[Address(RVA = "0xB0BCE4", Offset = "0xB0BCE4", VA = "0xB0BCE4")]
	private void PageDown()
	{
	}

	[Token(Token = "0x6000111")]
	[Address(RVA = "0xB0BD3C", Offset = "0xB0BD3C", VA = "0xB0BD3C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000112")]
	[Address(RVA = "0xB0BC2C", Offset = "0xB0BC2C", VA = "0xB0BC2C")]
	private void QueryPuzzles()
	{
	}

	[Token(Token = "0x6000113")]
	[Address(RVA = "0xB0BD84", Offset = "0xB0BD84", VA = "0xB0BD84")]
	public CommunityPuzzleController()
	{
	}
}
[Token(Token = "0x2000036")]
public class ContrastControllerVrui : MonoBehaviour
{
	[Token(Token = "0x40000F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public VrButton increase;

	[Token(Token = "0x40000F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public VrButton decrease;

	[Token(Token = "0x40000F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public VolumeBars bars;

	[Token(Token = "0x6000114")]
	[Address(RVA = "0xB0BD8C", Offset = "0xB0BD8C", VA = "0xB0BD8C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000115")]
	[Address(RVA = "0xB0BE6C", Offset = "0xB0BE6C", VA = "0xB0BE6C")]
	private void IncreaseValue()
	{
	}

	[Token(Token = "0x6000116")]
	[Address(RVA = "0xB0BF28", Offset = "0xB0BF28", VA = "0xB0BF28")]
	private void DecreaseValue()
	{
	}

	[Token(Token = "0x6000117")]
	[Address(RVA = "0xB0BE9C", Offset = "0xB0BE9C", VA = "0xB0BE9C")]
	private void SendAction()
	{
	}

	[Token(Token = "0x6000118")]
	[Address(RVA = "0xB0BF58", Offset = "0xB0BF58", VA = "0xB0BF58")]
	private float LevelToVol(int level)
	{
		return default(float);
	}

	[Token(Token = "0x6000119")]
	[Address(RVA = "0xB0BFC8", Offset = "0xB0BFC8", VA = "0xB0BFC8")]
	public ContrastControllerVrui()
	{
	}
}
[Token(Token = "0x2000037")]
public class CreateFreezeController : StateBehaviour
{
	[Token(Token = "0x40000F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public InteractionListener[] _noCreationInteractable;

	[Token(Token = "0x40000F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public PageGroup _vruiPageGroup;

	[Token(Token = "0x40000F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public LayerMask _gridLayer;

	[Token(Token = "0x40000F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[Header("Debug")]
	public int _hoveredListeners;

	[Token(Token = "0x40000F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Player _player;

	[Token(Token = "0x40000F9")]
	private const float _maxVel = 0.25f;

	[Token(Token = "0x40000FA")]
	private const float _maxAngularVel = 0.25f;

	[Token(Token = "0x600011A")]
	[Address(RVA = "0xB0BFD0", Offset = "0xB0BFD0", VA = "0xB0BFD0", Slot = "5")]
	protected override void ForceSetup()
	{
	}

	[Token(Token = "0x600011B")]
	[Address(RVA = "0xB0C0C8", Offset = "0xB0C0C8", VA = "0xB0C0C8")]
	private void Update()
	{
	}

	[Token(Token = "0x600011C")]
	[Address(RVA = "0xB0C82C", Offset = "0xB0C82C", VA = "0xB0C82C")]
	private void UnFreeze()
	{
	}

	[Token(Token = "0x600011D")]
	[Address(RVA = "0xB0C8A4", Offset = "0xB0C8A4", VA = "0xB0C8A4")]
	private bool HoveringOverUi()
	{
		return default(bool);
	}

	[Token(Token = "0x600011E")]
	[Address(RVA = "0xB0C35C", Offset = "0xB0C35C", VA = "0xB0C35C")]
	private bool SelectedPieceMovingTooFast()
	{
		return default(bool);
	}

	[Token(Token = "0x600011F")]
	[Address(RVA = "0xB0C534", Offset = "0xB0C534", VA = "0xB0C534")]
	private bool OnWarningOrKeyboardPage()
	{
		return default(bool);
	}

	[Token(Token = "0x6000120")]
	[Address(RVA = "0xB0C950", Offset = "0xB0C950", VA = "0xB0C950")]
	private void CheckToSetFreeze(Cubism.Hand interactingHand, bool freeze)
	{
	}

	[Token(Token = "0x6000121")]
	[Address(RVA = "0xB0C650", Offset = "0xB0C650", VA = "0xB0C650")]
	private bool IsTryingOffGridPieceCreation()
	{
		return default(bool);
	}

	[Token(Token = "0x6000122")]
	[Address(RVA = "0xB0CA70", Offset = "0xB0CA70", VA = "0xB0CA70")]
	private bool OverDeletablePieceCell()
	{
		return default(bool);
	}

	[Token(Token = "0x6000123")]
	[Address(RVA = "0xB0CB24", Offset = "0xB0CB24", VA = "0xB0CB24")]
	public CreateFreezeController()
	{
	}
}
[Token(Token = "0x2000038")]
public enum FreezeReason
{
	[Token(Token = "0x40000FC")]
	none,
	[Token(Token = "0x40000FD")]
	notEditing,
	[Token(Token = "0x40000FE")]
	overUI,
	[Token(Token = "0x40000FF")]
	pieceSpeed,
	[Token(Token = "0x4000100")]
	offGrid,
	[Token(Token = "0x4000101")]
	inWarning
}
[Token(Token = "0x2000039")]
public class DebugOptionsController : StateBehaviour
{
	[Token(Token = "0x4000102")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public VrToggle _fingerJoints;

	[Token(Token = "0x4000103")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public VrToggle _interactionDebug;

	[Token(Token = "0x4000104")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public VrToggle _showReadout;

	[Token(Token = "0x6000124")]
	[Address(RVA = "0xB0CB2C", Offset = "0xB0CB2C", VA = "0xB0CB2C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000125")]
	[Address(RVA = "0xB0CD00", Offset = "0xB0CD00", VA = "0xB0CD00")]
	public DebugOptionsController()
	{
	}
}
[Token(Token = "0x200003A")]
public class DifficultyView : StateBehaviour
{
	[Token(Token = "0x4000105")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public VrToggleGroup _difficulty;

	[Token(Token = "0x6000129")]
	[Address(RVA = "0xB0CDB0", Offset = "0xB0CDB0", VA = "0xB0CDB0", Slot = "5")]
	protected override void ForceSetup()
	{
	}

	[Token(Token = "0x600012A")]
	[Address(RVA = "0xB0CE4C", Offset = "0xB0CE4C", VA = "0xB0CE4C")]
	private void SetDifficulty()
	{
	}

	[Token(Token = "0x600012B")]
	[Address(RVA = "0xB0CED4", Offset = "0xB0CED4", VA = "0xB0CED4")]
	public DifficultyView()
	{
	}
}
[Token(Token = "0x200003B")]
public class EditorController : StateBehaviour
{
	[Token(Token = "0x200003D")]
	[CompilerGenerated]
	private sealed class <TapTaphaptics>d__45 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400012D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400012E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400012F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public EditorController <>4__this;

		[Token(Token = "0x17000019")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000151")]
			[Address(RVA = "0xB0F434", Offset = "0xB0F434", VA = "0xB0F434", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700001A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000153")]
			[Address(RVA = "0xB0F47C", Offset = "0xB0F47C", VA = "0xB0F47C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600014E")]
		[Address(RVA = "0xB0DFDC", Offset = "0xB0DFDC", VA = "0xB0DFDC")]
		[DebuggerHidden]
		public <TapTaphaptics>d__45(int <>1__state)
		{
		}

		[Token(Token = "0x600014F")]
		[Address(RVA = "0xB0F240", Offset = "0xB0F240", VA = "0xB0F240", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000150")]
		[Address(RVA = "0xB0F244", Offset = "0xB0F244", VA = "0xB0F244", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000152")]
		[Address(RVA = "0xB0F43C", Offset = "0xB0F43C", VA = "0xB0F43C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000106")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GridCreation gridCreator;

	[Token(Token = "0x4000107")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public PieceCreation pieceCreator;

	[Token(Token = "0x4000108")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public PuzzleSaver puzzleSaver;

	[Token(Token = "0x4000109")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public WarningMenu warningMenu;

	[Token(Token = "0x400010A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public PuzzleLoader loader;

	[Token(Token = "0x400010B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Grid grid;

	[Token(Token = "0x400010C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public PageGroup vruiPageGroup;

	[Token(Token = "0x400010D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public VrButton backToCustomPuzzles;

	[Token(Token = "0x400010E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public PieceCollection pieceCollection;

	[Token(Token = "0x400010F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public PuzzlePosition puzzlePosition;

	[Token(Token = "0x4000110")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public StaticPuzzleLoader staticPuzzleLoader;

	[Token(Token = "0x4000111")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[Header("Tabs")]
	public PageGroup editorPageGroup;

	[Token(Token = "0x4000112")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public VrToggle settingsTab;

	[Token(Token = "0x4000113")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public VrToggle editGridTab;

	[Token(Token = "0x4000114")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public VrToggle editPiecesTab;

	[Token(Token = "0x4000115")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public VrToggle saveTab;

	[Token(Token = "0x4000116")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[Header("General")]
	public VrButton editName;

	[Token(Token = "0x4000117")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public KeyboardController keyboardController;

	[Token(Token = "0x4000118")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public Text uiTitle;

	[Token(Token = "0x4000119")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public VrToggleGroup _difficulty;

	[Token(Token = "0x400011A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public VrToggle _showDifficultyOptions;

	[Token(Token = "0x400011B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public VrButton deletePuzzle;

	[Token(Token = "0x400011C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public VrButton savePuzzle;

	[Token(Token = "0x400011D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public Text _savedAt;

	[Token(Token = "0x400011E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public Material _greenText;

	[Token(Token = "0x400011F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	[Header("Pieces")]
	public VrButton addPiece;

	[Token(Token = "0x4000120")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public Transform createAnchor;

	[Token(Token = "0x4000121")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public ColorSelector colorSelector;

	[Token(Token = "0x4000122")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	public VrButton deletePiece;

	[Token(Token = "0x4000123")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	public VrButton finishEditingPiece;

	[Token(Token = "0x4000124")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	public Color[] defaultColors;

	[Token(Token = "0x4000125")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	[Header("Settings")]
	public VrToggle leftHand;

	[Token(Token = "0x4000126")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	public VrToggle rightHand;

	[Token(Token = "0x4000127")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	public VrToggle shareWithDeveloper;

	[Token(Token = "0x4000128")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	[Header("Navigation")]
	public VrButton _closeEditor;

	[Token(Token = "0x4000129")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	public Page _customPuzzlePage;

	[Token(Token = "0x400012A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	[SerializeField]
	private string _lastSavedPuzzle;

	[Token(Token = "0x600012C")]
	[Address(RVA = "0xB0CEDC", Offset = "0xB0CEDC", VA = "0xB0CEDC")]
	public void Setup(StaticPuzzleLoader staticPuzzleLoader)
	{
	}

	[Token(Token = "0x600012D")]
	[Address(RVA = "0xB0CEE4", Offset = "0xB0CEE4", VA = "0xB0CEE4")]
	private void SubscribeToEvents()
	{
	}

	[Token(Token = "0x600012E")]
	[Address(RVA = "0xB0D4EC", Offset = "0xB0D4EC", VA = "0xB0D4EC")]
	private void EditShareWithDev(bool value)
	{
	}

	[Token(Token = "0x600012F")]
	[Address(RVA = "0xB0D58C", Offset = "0xB0D58C", VA = "0xB0D58C")]
	private void OpenTabIfNotOpen(EditMode mode)
	{
	}

	[Token(Token = "0x6000130")]
	[Address(RVA = "0xB0D5D0", Offset = "0xB0D5D0", VA = "0xB0D5D0")]
	private void EditName()
	{
	}

	[Token(Token = "0x6000131")]
	[Address(RVA = "0xB0D728", Offset = "0xB0D728", VA = "0xB0D728")]
	private void UpdateTitleIfNotDuplicate(string title)
	{
	}

	[Token(Token = "0x6000132")]
	[Address(RVA = "0xB0DB00", Offset = "0xB0DB00", VA = "0xB0DB00")]
	private void HideDifficultyOptions(VrToggle toggle)
	{
	}

	[Token(Token = "0x6000133")]
	[Address(RVA = "0xB0DB44", Offset = "0xB0DB44", VA = "0xB0DB44")]
	private void CreateNewPiece()
	{
	}

	[Token(Token = "0x6000134")]
	[Address(RVA = "0xB0DF74", Offset = "0xB0DF74", VA = "0xB0DF74")]
	[IteratorStateMachine(typeof(<TapTaphaptics>d__45))]
	private IEnumerator TapTaphaptics()
	{
		return null;
	}

	[Token(Token = "0x6000135")]
	[Address(RVA = "0xB0DDA0", Offset = "0xB0DDA0", VA = "0xB0DDA0")]
	private Color GetColor()
	{
		return default(Color);
	}

	[Token(Token = "0x6000136")]
	[Address(RVA = "0xB0E004", Offset = "0xB0E004", VA = "0xB0E004")]
	private void GoToPlayMode()
	{
	}

	[Token(Token = "0x6000137")]
	[Address(RVA = "0xB0E098", Offset = "0xB0E098", VA = "0xB0E098")]
	private void GoToGridEditMode()
	{
	}

	[Token(Token = "0x6000138")]
	[Address(RVA = "0xB0E100", Offset = "0xB0E100", VA = "0xB0E100")]
	private void GoToPiecesEditMode()
	{
	}

	[Token(Token = "0x6000139")]
	[Address(RVA = "0xB0DE9C", Offset = "0xB0DE9C", VA = "0xB0DE9C")]
	private void GoToPieceEditMode()
	{
	}

	[Token(Token = "0x600013A")]
	[Address(RVA = "0xB0E168", Offset = "0xB0E168", VA = "0xB0E168")]
	private void DeletePiece()
	{
	}

	[Token(Token = "0x600013B")]
	[Address(RVA = "0xB0E19C", Offset = "0xB0E19C", VA = "0xB0E19C")]
	private void SetUnsavedChanges()
	{
	}

	[Token(Token = "0x600013C")]
	[Address(RVA = "0xB0E1A4", Offset = "0xB0E1A4", VA = "0xB0E1A4")]
	private void ShowDeleteConfirm()
	{
	}

	[Token(Token = "0x600013D")]
	[Address(RVA = "0xB0E368", Offset = "0xB0E368", VA = "0xB0E368")]
	private void DeletePuzzle()
	{
	}

	[Token(Token = "0x600013E")]
	[Address(RVA = "0xB0DA6C", Offset = "0xB0DA6C", VA = "0xB0DA6C")]
	private bool PuzzleNameExists(string name)
	{
		return default(bool);
	}

	[Token(Token = "0x600013F")]
	[Address(RVA = "0xB0E484", Offset = "0xB0E484", VA = "0xB0E484")]
	private void CheckForDuplicateFile()
	{
	}

	[Token(Token = "0x6000140")]
	[Address(RVA = "0xB0E674", Offset = "0xB0E674", VA = "0xB0E674")]
	private void SavePuzzle()
	{
	}

	[Token(Token = "0x6000141")]
	[Address(RVA = "0xB0ED04", Offset = "0xB0ED04", VA = "0xB0ED04")]
	private void UpdateHandedness(bool value)
	{
	}

	[Token(Token = "0x6000142")]
	[Address(RVA = "0xB0DF04", Offset = "0xB0DF04", VA = "0xB0DF04")]
	private void SetUnsavedChanges(bool hasUnsavedChanges)
	{
	}

	[Token(Token = "0x6000143")]
	[Address(RVA = "0xB0EDD8", Offset = "0xB0EDD8", VA = "0xB0EDD8")]
	private void CloseEditorIfNoChanges()
	{
	}

	[Token(Token = "0x6000144")]
	[Address(RVA = "0xB0EF98", Offset = "0xB0EF98", VA = "0xB0EF98")]
	private void CloseEditor()
	{
	}

	[Token(Token = "0x6000145")]
	[Address(RVA = "0xB0F0E4", Offset = "0xB0F0E4", VA = "0xB0F0E4")]
	public EditorController()
	{
	}
}
[Token(Token = "0x200003E")]
public class EditPuzzleController : StateBehaviour
{
	[Token(Token = "0x4000130")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public VrButton edit;

	[Token(Token = "0x4000131")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private PageGroup _group;

	[Token(Token = "0x4000132")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Page _page;

	[Token(Token = "0x4000133")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Level _level;

	[Token(Token = "0x6000154")]
	[Address(RVA = "0xB0F484", Offset = "0xB0F484", VA = "0xB0F484")]
	public void Setup(PageGroup group, Page page, Level level)
	{
	}

	[Token(Token = "0x6000155")]
	[Address(RVA = "0xB0F534", Offset = "0xB0F534", VA = "0xB0F534")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000156")]
	[Address(RVA = "0xB0F5C0", Offset = "0xB0F5C0", VA = "0xB0F5C0")]
	private void EditPuzzle()
	{
	}

	[Token(Token = "0x6000157")]
	[Address(RVA = "0xB0F698", Offset = "0xB0F698", VA = "0xB0F698")]
	public EditPuzzleController()
	{
	}
}
[Token(Token = "0x200003F")]
public class EnableEditorController : MonoBehaviour
{
	[Token(Token = "0x4000134")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public VrToggle _toggle;

	[Token(Token = "0x6000158")]
	[Address(RVA = "0xB0F6A0", Offset = "0xB0F6A0", VA = "0xB0F6A0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000159")]
	[Address(RVA = "0xB0F72C", Offset = "0xB0F72C", VA = "0xB0F72C")]
	private void SendAction(bool value)
	{
	}

	[Token(Token = "0x600015A")]
	[Address(RVA = "0xB0F7CC", Offset = "0xB0F7CC", VA = "0xB0F7CC")]
	public EnableEditorController()
	{
	}
}
[Token(Token = "0x2000040")]
public class HandOptionsController : StateBehaviour
{
	[Token(Token = "0x4000135")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public VrToggle _smoothing;

	[Token(Token = "0x4000136")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public VrToggle _hideHandsWhenTrackingLost;

	[Token(Token = "0x600015B")]
	[Address(RVA = "0xB0F7D4", Offset = "0xB0F7D4", VA = "0xB0F7D4")]
	private void Start()
	{
	}

	[Token(Token = "0x600015C")]
	[Address(RVA = "0xB0FA44", Offset = "0xB0FA44", VA = "0xB0FA44")]
	private void UpdateSmoothingValue(bool on)
	{
	}

	[Token(Token = "0x600015D")]
	[Address(RVA = "0xB0FAE4", Offset = "0xB0FAE4", VA = "0xB0FAE4")]
	private void UpdateHideValue(bool on)
	{
	}

	[Token(Token = "0x600015E")]
	[Address(RVA = "0xB0F9A0", Offset = "0xB0F9A0", VA = "0xB0F9A0")]
	private void UpdateButtonState()
	{
	}

	[Token(Token = "0x600015F")]
	[Address(RVA = "0xB0FB84", Offset = "0xB0FB84", VA = "0xB0FB84")]
	public HandOptionsController()
	{
	}
}
[Token(Token = "0x2000041")]
public class MixedRealityOptionsController : StateBehaviour
{
	[Token(Token = "0x4000137")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public VrToggle _setRealityMixerMovingCam;

	[Token(Token = "0x4000138")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public VrToggle _showHands;

	[Token(Token = "0x4000139")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public VrToggle _hideAvatar;

	[Token(Token = "0x6000160")]
	[Address(RVA = "0xB0FB8C", Offset = "0xB0FB8C", VA = "0xB0FB8C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000161")]
	[Address(RVA = "0xB0FE4C", Offset = "0xB0FE4C", VA = "0xB0FE4C")]
	private void SetRealityMixerMovingCam(bool enabled)
	{
	}

	[Token(Token = "0x6000162")]
	[Address(RVA = "0xB0FEEC", Offset = "0xB0FEEC", VA = "0xB0FEEC")]
	private void SetShowHands(bool value)
	{
	}

	[Token(Token = "0x6000163")]
	[Address(RVA = "0xB0FF8C", Offset = "0xB0FF8C", VA = "0xB0FF8C")]
	private void SetHideAvatar(bool value)
	{
	}

	[Token(Token = "0x6000164")]
	[Address(RVA = "0xB0FDA4", Offset = "0xB0FDA4", VA = "0xB0FDA4")]
	private void UpdateButtonStates()
	{
	}

	[Token(Token = "0x6000165")]
	[Address(RVA = "0xB10030", Offset = "0xB10030", VA = "0xB10030")]
	public MixedRealityOptionsController()
	{
	}
}
[Token(Token = "0x2000042")]
public class MusicModeController : StateBehaviour
{
	[Token(Token = "0x400013A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public VrToggle _toggle;

	[Token(Token = "0x6000166")]
	[Address(RVA = "0xB10038", Offset = "0xB10038", VA = "0xB10038", Slot = "5")]
	protected override void ForceSetup()
	{
	}

	[Token(Token = "0x6000167")]
	[Address(RVA = "0xB101A8", Offset = "0xB101A8", VA = "0xB101A8")]
	private void SetMusicMode(bool value)
	{
	}

	[Token(Token = "0x6000168")]
	[Address(RVA = "0xB10158", Offset = "0xB10158", VA = "0xB10158")]
	private void UpdateButtonState()
	{
	}

	[Token(Token = "0x6000169")]
	[Address(RVA = "0xB10248", Offset = "0xB10248", VA = "0xB10248")]
	public MusicModeController()
	{
	}
}
[Token(Token = "0x2000043")]
public class NightModeController : MonoBehaviour
{
	[Token(Token = "0x400013B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public VrToggle _toggle;

	[Token(Token = "0x600016A")]
	[Address(RVA = "0xB10250", Offset = "0xB10250", VA = "0xB10250")]
	private void Start()
	{
	}

	[Token(Token = "0x600016B")]
	[Address(RVA = "0xB102DC", Offset = "0xB102DC", VA = "0xB102DC")]
	private void SendAction(bool value)
	{
	}

	[Token(Token = "0x600016C")]
	[Address(RVA = "0xB1037C", Offset = "0xB1037C", VA = "0xB1037C")]
	public NightModeController()
	{
	}
}
[Token(Token = "0x2000044")]
public class OpenEditorTab : MonoBehaviour
{
	[Token(Token = "0x400013C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public VrButton button;

	[Token(Token = "0x400013D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[Space(25f)]
	public VrToggle _tabToEnable;

	[Token(Token = "0x400013E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public VrToggleGroup _tabGroup;

	[Token(Token = "0x400013F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public PageGroup _editorPageGroup;

	[Token(Token = "0x4000140")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Page _editorSubPage;

	[Token(Token = "0x600016D")]
	[Address(RVA = "0xB10384", Offset = "0xB10384", VA = "0xB10384")]
	private void Start()
	{
	}

	[Token(Token = "0x600016E")]
	[Address(RVA = "0xB10410", Offset = "0xB10410", VA = "0xB10410")]
	private void OpenTab()
	{
	}

	[Token(Token = "0x600016F")]
	[Address(RVA = "0xB104A4", Offset = "0xB104A4", VA = "0xB104A4")]
	public OpenEditorTab()
	{
	}
}
[Token(Token = "0x2000045")]
public class OpenPageController : MonoBehaviour
{
	[Token(Token = "0x4000141")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public PageGroup group;

	[Token(Token = "0x4000142")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Page pageToOpen;

	[Token(Token = "0x4000143")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public VrButton button;

	[Token(Token = "0x4000144")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public VrToggle toggle;

	[Token(Token = "0x6000170")]
	[Address(RVA = "0xB104AC", Offset = "0xB104AC", VA = "0xB104AC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000171")]
	[Address(RVA = "0xB10614", Offset = "0xB10614", VA = "0xB10614")]
	private void OpenPage()
	{
	}

	[Token(Token = "0x6000172")]
	[Address(RVA = "0xB1064C", Offset = "0xB1064C", VA = "0xB1064C")]
	public OpenPageController()
	{
	}
}
[Token(Token = "0x2000046")]
public class OpenUrlController : MonoBehaviour
{
	[Token(Token = "0x4000145")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public VrButton button;

	[Token(Token = "0x4000146")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string url;

	[Token(Token = "0x6000174")]
	[Address(RVA = "0xB10660", Offset = "0xB10660", VA = "0xB10660")]
	private void Start()
	{
	}

	[Token(Token = "0x6000175")]
	[Address(RVA = "0xB106EC", Offset = "0xB106EC", VA = "0xB106EC")]
	private void GoToUrl()
	{
	}

	[Token(Token = "0x6000176")]
	[Address(RVA = "0xB106F8", Offset = "0xB106F8", VA = "0xB106F8")]
	public OpenUrlController()
	{
	}
}
[Token(Token = "0x2000047")]
public class PassthroughControllerVrui : StateBehaviour
{
	[Token(Token = "0x4000147")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public VrToggle toggle;

	[Token(Token = "0x6000177")]
	[Address(RVA = "0xB10700", Offset = "0xB10700", VA = "0xB10700", Slot = "5")]
	protected override void ForceSetup()
	{
	}

	[Token(Token = "0x6000178")]
	[Address(RVA = "0xB1078C", Offset = "0xB1078C", VA = "0xB1078C")]
	private void SetPassthrough(bool enabled)
	{
	}

	[Token(Token = "0x6000179")]
	[Address(RVA = "0xB10834", Offset = "0xB10834", VA = "0xB10834")]
	public PassthroughControllerVrui()
	{
	}
}
[Token(Token = "0x2000048")]
public class PuzzleSongController : MonoBehaviour
{
	[Token(Token = "0x4000148")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public VrToggle vrToggle;

	[Token(Token = "0x4000149")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string stageSetName;

	[Token(Token = "0x600017A")]
	[Address(RVA = "0xB1083C", Offset = "0xB1083C", VA = "0xB1083C")]
	private void Start()
	{
	}

	[Token(Token = "0x600017B")]
	[Address(RVA = "0xB10930", Offset = "0xB10930", VA = "0xB10930")]
	private void SetSongPlaying(bool playing)
	{
	}

	[Token(Token = "0x600017C")]
	[Address(RVA = "0xB109EC", Offset = "0xB109EC", VA = "0xB109EC")]
	public PuzzleSongController()
	{
	}
}
[Token(Token = "0x2000049")]
public class QuitController : MonoBehaviour
{
	[Token(Token = "0x400014A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public VrButton _button;

	[Token(Token = "0x600017D")]
	[Address(RVA = "0xB10A3C", Offset = "0xB10A3C", VA = "0xB10A3C")]
	private void Start()
	{
	}

	[Token(Token = "0x600017E")]
	[Address(RVA = "0xB10AC8", Offset = "0xB10AC8", VA = "0xB10AC8")]
	private void SendAction()
	{
	}

	[Token(Token = "0x600017F")]
	[Address(RVA = "0xB10B4C", Offset = "0xB10B4C", VA = "0xB10B4C")]
	public QuitController()
	{
	}
}
[Token(Token = "0x200004A")]
public class RecalibrateController : MonoBehaviour
{
	[Token(Token = "0x400014B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public VrButton button;

	[Token(Token = "0x6000180")]
	[Address(RVA = "0xB10B54", Offset = "0xB10B54", VA = "0xB10B54")]
	private void Start()
	{
	}

	[Token(Token = "0x6000181")]
	[Address(RVA = "0xB10BE0", Offset = "0xB10BE0", VA = "0xB10BE0")]
	private void Recalibrate()
	{
	}

	[Token(Token = "0x6000182")]
	[Address(RVA = "0xB10C64", Offset = "0xB10C64", VA = "0xB10C64")]
	public RecalibrateController()
	{
	}
}
[Token(Token = "0x200004B")]
public class RemoveRestrictionsController : MonoBehaviour
{
	[Token(Token = "0x400014C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public VrToggle toggle;

	[Token(Token = "0x6000183")]
	[Address(RVA = "0xB10C6C", Offset = "0xB10C6C", VA = "0xB10C6C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000184")]
	[Address(RVA = "0xB10CF8", Offset = "0xB10CF8", VA = "0xB10CF8")]
	private void SetRemoveRestriciton(bool enabled)
	{
	}

	[Token(Token = "0x6000185")]
	[Address(RVA = "0xB10D98", Offset = "0xB10D98", VA = "0xB10D98")]
	public RemoveRestrictionsController()
	{
	}
}
[Token(Token = "0x200004C")]
public class ReprojectControllerPassthroughController : MonoBehaviour
{
	[Token(Token = "0x400014D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public VrToggle toggle;

	[Token(Token = "0x6000186")]
	[Address(RVA = "0xB10DA0", Offset = "0xB10DA0", VA = "0xB10DA0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000187")]
	[Address(RVA = "0xB10E2C", Offset = "0xB10E2C", VA = "0xB10E2C")]
	private void SetToggle(bool obj)
	{
	}

	[Token(Token = "0x6000188")]
	[Address(RVA = "0xB10ED4", Offset = "0xB10ED4", VA = "0xB10ED4")]
	public ReprojectControllerPassthroughController()
	{
	}
}
[Token(Token = "0x200004D")]
public class RestrictPieceToGridController : MonoBehaviour
{
	[Token(Token = "0x400014E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public VrToggle toggle;

	[Token(Token = "0x6000189")]
	[Address(RVA = "0xB10EDC", Offset = "0xB10EDC", VA = "0xB10EDC")]
	private void Awake()
	{
	}

	[Token(Token = "0x600018A")]
	[Address(RVA = "0xB10F68", Offset = "0xB10F68", VA = "0xB10F68")]
	private void SetRemoveRestriciton(bool restrict)
	{
	}

	[Token(Token = "0x600018B")]
	[Address(RVA = "0xB11008", Offset = "0xB11008", VA = "0xB11008")]
	public RestrictPieceToGridController()
	{
	}
}
[Token(Token = "0x200004E")]
public class SetFloorGridController : MonoBehaviour
{
	[Token(Token = "0x400014F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public VrToggle _toggle;

	[Token(Token = "0x600018C")]
	[Address(RVA = "0xB11010", Offset = "0xB11010", VA = "0xB11010")]
	private void Start()
	{
	}

	[Token(Token = "0x600018D")]
	[Address(RVA = "0xB1109C", Offset = "0xB1109C", VA = "0xB1109C")]
	private void SendAction(bool value)
	{
	}

	[Token(Token = "0x600018E")]
	[Address(RVA = "0xB1113C", Offset = "0xB1113C", VA = "0xB1113C")]
	public SetFloorGridController()
	{
	}
}
[Token(Token = "0x200004F")]
public class ShowVirtualHandsController : MonoBehaviour
{
	[Token(Token = "0x4000150")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public VrToggle toggle;

	[Token(Token = "0x600018F")]
	[Address(RVA = "0xB11144", Offset = "0xB11144", VA = "0xB11144")]
	private void Start()
	{
	}

	[Token(Token = "0x6000190")]
	[Address(RVA = "0xB111D0", Offset = "0xB111D0", VA = "0xB111D0")]
	private void ToggleValue(bool obj)
	{
	}

	[Token(Token = "0x6000191")]
	[Address(RVA = "0xB11278", Offset = "0xB11278", VA = "0xB11278")]
	public ShowVirtualHandsController()
	{
	}
}
[Token(Token = "0x2000050")]
public class SolvedSpawnController : MonoBehaviour
{
	[Token(Token = "0x4000151")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public VrToggle _toggle;

	[Token(Token = "0x6000192")]
	[Address(RVA = "0xB11280", Offset = "0xB11280", VA = "0xB11280")]
	private void Start()
	{
	}

	[Token(Token = "0x6000193")]
	[Address(RVA = "0xB1130C", Offset = "0xB1130C", VA = "0xB1130C")]
	private void SendAction(bool value)
	{
	}

	[Token(Token = "0x6000194")]
	[Address(RVA = "0xB113B0", Offset = "0xB113B0", VA = "0xB113B0")]
	public SolvedSpawnController()
	{
	}
}
[Token(Token = "0x2000051")]
public class SpectatorControllerVrui : MonoBehaviour
{
	[Token(Token = "0x4000152")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public VrToggle _none;

	[Token(Token = "0x4000153")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public VrToggle _smooth;

	[Token(Token = "0x4000154")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public VrToggle _spectator;

	[Token(Token = "0x6000195")]
	[Address(RVA = "0xB113B8", Offset = "0xB113B8", VA = "0xB113B8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000196")]
	[Address(RVA = "0xB114E4", Offset = "0xB114E4", VA = "0xB114E4")]
	private void SetCamNone(bool on)
	{
	}

	[Token(Token = "0x6000197")]
	[Address(RVA = "0xB11560", Offset = "0xB11560", VA = "0xB11560")]
	private void SetCamSmooth(bool on)
	{
	}

	[Token(Token = "0x6000198")]
	[Address(RVA = "0xB115DC", Offset = "0xB115DC", VA = "0xB115DC")]
	private void SetCamSpectator(bool on)
	{
	}

	[Token(Token = "0x6000199")]
	[Address(RVA = "0xB11658", Offset = "0xB11658", VA = "0xB11658")]
	public SpectatorControllerVrui()
	{
	}
}
[Token(Token = "0x2000052")]
public class SpectatorFovControllerVrui : MonoBehaviour
{
	[Token(Token = "0x4000155")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public VrToggle _narrow;

	[Token(Token = "0x4000156")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public VrToggle _normal;

	[Token(Token = "0x4000157")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public VrToggle _setWide;

	[Token(Token = "0x4000158")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public VrToggle _setUltraWide;

	[Token(Token = "0x600019A")]
	[Address(RVA = "0xB11660", Offset = "0xB11660", VA = "0xB11660")]
	private void Start()
	{
	}

	[Token(Token = "0x600019B")]
	[Address(RVA = "0xB11824", Offset = "0xB11824", VA = "0xB11824")]
	private void SetNarrow(bool on)
	{
	}

	[Token(Token = "0x600019C")]
	[Address(RVA = "0xB118B8", Offset = "0xB118B8", VA = "0xB118B8")]
	private void SetNormal(bool hidden)
	{
	}

	[Token(Token = "0x600019D")]
	[Address(RVA = "0xB11920", Offset = "0xB11920", VA = "0xB11920")]
	private void SetSetWide(bool hidden)
	{
	}

	[Token(Token = "0x600019E")]
	[Address(RVA = "0xB11988", Offset = "0xB11988", VA = "0xB11988")]
	private void SetSetUltraWide(bool hidden)
	{
	}

	[Token(Token = "0x600019F")]
	[Address(RVA = "0xB119F0", Offset = "0xB119F0", VA = "0xB119F0")]
	public SpectatorFovControllerVrui()
	{
	}
}
[Token(Token = "0x2000053")]
public class SpectatorOptionsControllerVrui : MonoBehaviour
{
	[Token(Token = "0x4000159")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public VrToggle _ortho;

	[Token(Token = "0x400015A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public VrToggle _showUi;

	[Token(Token = "0x400015B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public VrToggle _showAvatar;

	[Token(Token = "0x400015C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public VrToggle _showHands;

	[Token(Token = "0x400015D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public VrToggle _lockRoll;

	[Token(Token = "0x400015E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public VrToggle _lockPitch;

	[Token(Token = "0x400015F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public VrToggle _lockToCenter;

	[Token(Token = "0x4000160")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public VrToggle _snapYaw;

	[Token(Token = "0x4000161")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public VrToggle _orbitPuzzle;

	[Token(Token = "0x60001A0")]
	[Address(RVA = "0xB119F8", Offset = "0xB119F8", VA = "0xB119F8")]
	private void Start()
	{
	}

	[Token(Token = "0x60001A1")]
	[Address(RVA = "0xB11CEC", Offset = "0xB11CEC", VA = "0xB11CEC")]
	private void SetOrtho(bool on)
	{
	}

	[Token(Token = "0x60001A2")]
	[Address(RVA = "0xB11D8C", Offset = "0xB11D8C", VA = "0xB11D8C")]
	private void SetShowUi(bool hidden)
	{
	}

	[Token(Token = "0x60001A3")]
	[Address(RVA = "0xB11E30", Offset = "0xB11E30", VA = "0xB11E30")]
	private void SetShowAvatar(bool hidden)
	{
	}

	[Token(Token = "0x60001A4")]
	[Address(RVA = "0xB11ED4", Offset = "0xB11ED4", VA = "0xB11ED4")]
	private void SetShowHands(bool hidden)
	{
	}

	[Token(Token = "0x60001A5")]
	[Address(RVA = "0xB11F78", Offset = "0xB11F78", VA = "0xB11F78")]
	private void SetLockRoll(bool locked)
	{
	}

	[Token(Token = "0x60001A6")]
	[Address(RVA = "0xB12018", Offset = "0xB12018", VA = "0xB12018")]
	private void SetLockPitch(bool locked)
	{
	}

	[Token(Token = "0x60001A7")]
	[Address(RVA = "0xB120B8", Offset = "0xB120B8", VA = "0xB120B8")]
	private void SetLockToCenter(bool locked)
	{
	}

	[Token(Token = "0x60001A8")]
	[Address(RVA = "0xB12158", Offset = "0xB12158", VA = "0xB12158")]
	private void SetSnapYaw(bool snap)
	{
	}

	[Token(Token = "0x60001A9")]
	[Address(RVA = "0xB121F8", Offset = "0xB121F8", VA = "0xB121F8")]
	private void SetOrbitPuzzle(bool orbit)
	{
	}

	[Token(Token = "0x60001AA")]
	[Address(RVA = "0xB12298", Offset = "0xB12298", VA = "0xB12298")]
	public SpectatorOptionsControllerVrui()
	{
	}
}
[Token(Token = "0x2000054")]
public class SurveyController : StateBehaviour
{
	[Token(Token = "0x4000162")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public VrToggleGroup _difficulty;

	[Token(Token = "0x4000163")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public VrToggleGroup _satisfaction;

	[Token(Token = "0x4000164")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public VrButton _submit;

	[Token(Token = "0x4000165")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject _surveyWrapper;

	[Token(Token = "0x4000166")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject _levelWrapper;

	[Token(Token = "0x4000167")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private ActiveLevelService _activeLevelService;

	[Token(Token = "0x60001AB")]
	[Address(RVA = "0xB122A0", Offset = "0xB122A0", VA = "0xB122A0", Slot = "5")]
	protected override void ForceSetup()
	{
	}

	[Token(Token = "0x60001AC")]
	[Address(RVA = "0xB123C4", Offset = "0xB123C4", VA = "0xB123C4")]
	private void OpenSurvey()
	{
	}

	[Token(Token = "0x60001AD")]
	[Address(RVA = "0xB1245C", Offset = "0xB1245C", VA = "0xB1245C")]
	private void Update()
	{
	}

	[Token(Token = "0x60001AE")]
	[Address(RVA = "0xB124D0", Offset = "0xB124D0", VA = "0xB124D0")]
	private void SubmitSurvey()
	{
	}

	[Token(Token = "0x60001AF")]
	[Address(RVA = "0xB1250C", Offset = "0xB1250C", VA = "0xB1250C")]
	private void TrackCompletedPuzzle()
	{
	}

	[Token(Token = "0x60001B0")]
	[Address(RVA = "0xB12A98", Offset = "0xB12A98", VA = "0xB12A98")]
	public SurveyController()
	{
	}
}
[Token(Token = "0x2000055")]
public class ToggleEditModeController : StateBehaviour
{
	[Token(Token = "0x4000168")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool enableEditMode;

	[Token(Token = "0x4000169")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	public bool clearPuzzle;

	[Token(Token = "0x400016A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public VrButton _button;

	[Token(Token = "0x60001B1")]
	[Address(RVA = "0xB12AA0", Offset = "0xB12AA0", VA = "0xB12AA0")]
	private void Start()
	{
	}

	[Token(Token = "0x60001B2")]
	[Address(RVA = "0xB12B2C", Offset = "0xB12B2C", VA = "0xB12B2C")]
	private void SwitchToEditMode()
	{
	}

	[Token(Token = "0x60001B3")]
	[Address(RVA = "0xB12C44", Offset = "0xB12C44", VA = "0xB12C44")]
	public ToggleEditModeController()
	{
	}
}
[Token(Token = "0x2000056")]
public class ToggleOffOnToggle : MonoBehaviour
{
	[Token(Token = "0x400016B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public VrToggle toggle;

	[Token(Token = "0x400016C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public VrToggle targetToggle;

	[Token(Token = "0x60001B4")]
	[Address(RVA = "0xB12C4C", Offset = "0xB12C4C", VA = "0xB12C4C")]
	private void Start()
	{
	}

	[Token(Token = "0x60001B5")]
	[Address(RVA = "0xB12CD8", Offset = "0xB12CD8", VA = "0xB12CD8")]
	private void ToggleTargetOff(bool data)
	{
	}

	[Token(Token = "0x60001B6")]
	[Address(RVA = "0xB12D0C", Offset = "0xB12D0C", VA = "0xB12D0C")]
	public ToggleOffOnToggle()
	{
	}
}
[Token(Token = "0x2000057")]
public class UndoController : MonoBehaviour
{
	[Token(Token = "0x400016D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public VrButton _undo;

	[Token(Token = "0x400016E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float _undoPressTimeStamp;

	[Token(Token = "0x400016F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float _undoNextPressDelta;

	[Token(Token = "0x4000170")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool _startUndoing;

	[Token(Token = "0x60001B7")]
	[Address(RVA = "0xB12D14", Offset = "0xB12D14", VA = "0xB12D14")]
	private void Start()
	{
	}

	[Token(Token = "0x60001B8")]
	[Address(RVA = "0xB12DF4", Offset = "0xB12DF4", VA = "0xB12DF4")]
	private void Update()
	{
	}

	[Token(Token = "0x60001B9")]
	[Address(RVA = "0xB12EDC", Offset = "0xB12EDC", VA = "0xB12EDC")]
	private void StartUndo()
	{
	}

	[Token(Token = "0x60001BA")]
	[Address(RVA = "0xB12F5C", Offset = "0xB12F5C", VA = "0xB12F5C")]
	private void StopUndo()
	{
	}

	[Token(Token = "0x60001BB")]
	[Address(RVA = "0xB12F64", Offset = "0xB12F64", VA = "0xB12F64")]
	public UndoController()
	{
	}
}
[Token(Token = "0x2000058")]
public class VolumeController : MonoBehaviour
{
	[Token(Token = "0x4000171")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public VrButton increase;

	[Token(Token = "0x4000172")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public VrButton decrease;

	[Token(Token = "0x4000173")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public VolumeBars bars;

	[Token(Token = "0x4000174")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public VolumeTarget target;

	[Token(Token = "0x60001BC")]
	[Address(RVA = "0xB12F78", Offset = "0xB12F78", VA = "0xB12F78")]
	private void Start()
	{
	}

	[Token(Token = "0x60001BD")]
	[Address(RVA = "0xB13058", Offset = "0xB13058", VA = "0xB13058")]
	private void IncreaseVolume()
	{
	}

	[Token(Token = "0x60001BE")]
	[Address(RVA = "0xB1311C", Offset = "0xB1311C", VA = "0xB1311C")]
	private void DecreaseVolume()
	{
	}

	[Token(Token = "0x60001BF")]
	[Address(RVA = "0xB13088", Offset = "0xB13088", VA = "0xB13088")]
	private void SendAction()
	{
	}

	[Token(Token = "0x60001C0")]
	[Address(RVA = "0xB1314C", Offset = "0xB1314C", VA = "0xB1314C")]
	private float LevelToVol(int level)
	{
		return default(float);
	}

	[Token(Token = "0x60001C1")]
	[Address(RVA = "0xB131CC", Offset = "0xB131CC", VA = "0xB131CC")]
	public VolumeController()
	{
	}
}
[Token(Token = "0x2000059")]
public enum VolumeTarget
{
	[Token(Token = "0x4000176")]
	master,
	[Token(Token = "0x4000177")]
	music,
	[Token(Token = "0x4000178")]
	sfx
}
[Token(Token = "0x200005A")]
public class WarningMenu : MonoBehaviour
{
	[Token(Token = "0x4000179")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public PageGroup _vruiPageGroup;

	[Token(Token = "0x400017A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Page _warningPage;

	[Token(Token = "0x400017B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public VrButton _backButton;

	[Token(Token = "0x400017C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public VrButton _cancelButton;

	[Token(Token = "0x400017D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public VrButton _confirmButton;

	[Token(Token = "0x400017E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Text _title;

	[Token(Token = "0x400017F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Text _explainer;

	[Token(Token = "0x4000180")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Text _cancel;

	[Token(Token = "0x4000181")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Text _confirm;

	[Token(Token = "0x4000182")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private WarningParams _warningParams;

	[Token(Token = "0x60001C2")]
	[Address(RVA = "0xB131D4", Offset = "0xB131D4", VA = "0xB131D4")]
	private void Start()
	{
	}

	[Token(Token = "0x60001C3")]
	[Address(RVA = "0xB0B6C0", Offset = "0xB0B6C0", VA = "0xB0B6C0")]
	public void OpenWarning(WarningParams warningParams)
	{
	}

	[Token(Token = "0x60001C4")]
	[Address(RVA = "0xB13300", Offset = "0xB13300", VA = "0xB13300")]
	private void SetAllStrings()
	{
	}

	[Token(Token = "0x60001C5")]
	[Address(RVA = "0xB135F8", Offset = "0xB135F8", VA = "0xB135F8")]
	private void GoBack()
	{
	}

	[Token(Token = "0x60001C6")]
	[Address(RVA = "0xB13644", Offset = "0xB13644", VA = "0xB13644")]
	private void Cancel()
	{
	}

	[Token(Token = "0x60001C7")]
	[Address(RVA = "0xB13694", Offset = "0xB13694", VA = "0xB13694")]
	private void Confirm()
	{
	}

	[Token(Token = "0x60001C8")]
	[Address(RVA = "0xB136E4", Offset = "0xB136E4", VA = "0xB136E4")]
	public WarningMenu()
	{
	}
}
[Serializable]
[Token(Token = "0x200005B")]
public class WarningParams
{
	[Token(Token = "0x4000183")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string backPage;

	[Token(Token = "0x4000184")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string titleString;

	[Token(Token = "0x4000185")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string explainerString;

	[Token(Token = "0x4000186")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string cancelString;

	[Token(Token = "0x4000187")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool backOnCancel;

	[Token(Token = "0x4000188")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Action cancelCallback;

	[Token(Token = "0x4000189")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public string confirmString;

	[Token(Token = "0x400018A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public bool backOnConfirm;

	[Token(Token = "0x400018B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Action confirmCallback;

	[Token(Token = "0x60001C9")]
	[Address(RVA = "0xB13454", Offset = "0xB13454", VA = "0xB13454")]
	public string GetExplainer()
	{
		return null;
	}

	[Token(Token = "0x60001CA")]
	[Address(RVA = "0xB1356C", Offset = "0xB1356C", VA = "0xB1356C")]
	public string GetCancel()
	{
		return null;
	}

	[Token(Token = "0x60001CB")]
	[Address(RVA = "0xB134E0", Offset = "0xB134E0", VA = "0xB134E0")]
	public string GetConfirm()
	{
		return null;
	}

	[Token(Token = "0x60001CC")]
	[Address(RVA = "0xB0B6B0", Offset = "0xB0B6B0", VA = "0xB0B6B0")]
	public WarningParams()
	{
	}
}
[Token(Token = "0x200005C")]
[ExecuteInEditMode]
public class CreatePositionView : StateBehaviour
{
	[Token(Token = "0x400018C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public MeshRenderer _cubeRenderer;

	[Token(Token = "0x400018D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject _wrapper;

	[Token(Token = "0x400018E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform[] _lines;

	[Token(Token = "0x400018F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Renderer[] _linesRenderers;

	[Token(Token = "0x4000190")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float _edgeWidth;

	[Token(Token = "0x4000191")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float _edgeLengthStartFactor;

	[Token(Token = "0x4000192")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Transform _htDot;

	[Token(Token = "0x4000193")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[Space(25f)]
	public Material _edgeMat;

	[Token(Token = "0x4000194")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Material _edgeMatFade;

	[Token(Token = "0x4000195")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Material _bodyMat;

	[Token(Token = "0x4000196")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Color _addEdgeColor;

	[Token(Token = "0x4000197")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Color _addBodyColor;

	[Token(Token = "0x4000198")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public Color _removeEdgeColor;

	[Token(Token = "0x4000199")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public Color _removeBodyColor;

	[Token(Token = "0x400019A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private Controller _controller;

	[Token(Token = "0x400019B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private Vector3 _targetScale;

	[Token(Token = "0x400019C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private EditMode[] _visibleModes;

	[Token(Token = "0x1700001B")]
	protected bool IsActive
	{
		[Token(Token = "0x60001CD")]
		[Address(RVA = "0xB136EC", Offset = "0xB136EC", VA = "0xB136EC")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x60001CE")]
	[Address(RVA = "0xB1386C", Offset = "0xB1386C", VA = "0xB1386C")]
	public void Setup(Controller controller)
	{
	}

	[Token(Token = "0x60001CF")]
	[Address(RVA = "0xB13968", Offset = "0xB13968", VA = "0xB13968")]
	private void Update()
	{
	}

	[Token(Token = "0x60001D0")]
	[Address(RVA = "0xB13D18", Offset = "0xB13D18", VA = "0xB13D18")]
	public void UpdateColor()
	{
	}

	[Token(Token = "0x60001D1")]
	[Address(RVA = "0xB14268", Offset = "0xB14268", VA = "0xB14268")]
	public void SetEdgeFill(float factor)
	{
	}

	[Token(Token = "0x60001D2")]
	[Address(RVA = "0xB1430C", Offset = "0xB1430C", VA = "0xB1430C")]
	private void SetEdgesVisible(bool visible)
	{
	}

	[Token(Token = "0x60001D3")]
	[Address(RVA = "0xB141AC", Offset = "0xB141AC", VA = "0xB141AC")]
	private void SetEdgeColor(Color color)
	{
	}

	[Token(Token = "0x60001D4")]
	[Address(RVA = "0xB13C0C", Offset = "0xB13C0C", VA = "0xB13C0C")]
	private void UpdatePosition()
	{
	}

	[Token(Token = "0x60001D5")]
	[Address(RVA = "0xB14380", Offset = "0xB14380", VA = "0xB14380")]
	private bool OverUI()
	{
		return default(bool);
	}

	[Token(Token = "0x60001D6")]
	[Address(RVA = "0xB14458", Offset = "0xB14458", VA = "0xB14458")]
	public CreatePositionView()
	{
	}
}
[Token(Token = "0x200005D")]
public class AutoSolvePuzzle : StateBehaviour
{
	[Token(Token = "0x400019D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public VrButton _solveAll;

	[Token(Token = "0x400019E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public VrButton _solve;

	[Token(Token = "0x400019F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform _gridPiecesParent;

	[Token(Token = "0x40001A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public PieceCollection _pieceCollection;

	[Token(Token = "0x40001A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private PuzzlePosition _puzzlePos;

	[Token(Token = "0x40001A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private StageSet _set;

	[Token(Token = "0x60001D7")]
	[Address(RVA = "0xB144D8", Offset = "0xB144D8", VA = "0xB144D8")]
	public AutoSolvePuzzle()
	{
	}
}
[Token(Token = "0x200005E")]
public class CurlGrabIndicator : MonoBehaviour
{
	[Token(Token = "0x40001A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Cubism.Hand hand;

	[Token(Token = "0x40001A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Finger finger;

	[Token(Token = "0x40001A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Image _currentCurl;

	[Token(Token = "0x40001A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Image _grabbedCurl;

	[Token(Token = "0x40001A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Image _releaseCurl;

	[Token(Token = "0x40001A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Image _overGrabCurl;

	[Token(Token = "0x40001A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[Header("GrabColors")]
	public Color grabC1;

	[Token(Token = "0x40001AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Color grabC2;

	[Token(Token = "0x40001AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Color grabC3;

	[Token(Token = "0x40001AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[Header("Releaseolors")]
	public Color releaseC1;

	[Token(Token = "0x40001AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Color releaseC2;

	[Token(Token = "0x40001AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public Color releaseC3;

	[Token(Token = "0x60001D8")]
	[Address(RVA = "0xB144E0", Offset = "0xB144E0", VA = "0xB144E0")]
	public void Setup(Cubism.Hand hand)
	{
	}

	[Token(Token = "0x60001D9")]
	[Address(RVA = "0xB14560", Offset = "0xB14560", VA = "0xB14560")]
	public void HideGrabValues()
	{
	}

	[Token(Token = "0x60001DA")]
	[Address(RVA = "0xB145B8", Offset = "0xB145B8", VA = "0xB145B8")]
	public void SetGrabColors()
	{
	}

	[Token(Token = "0x60001DB")]
	[Address(RVA = "0xB14628", Offset = "0xB14628", VA = "0xB14628")]
	public void SetReleaseColors()
	{
	}

	[Token(Token = "0x60001DC")]
	[Address(RVA = "0xB14698", Offset = "0xB14698", VA = "0xB14698")]
	public void SetGrabValues(float grabbedCurl, float releaseCurl, float overGrabCurl)
	{
	}

	[Token(Token = "0x60001DD")]
	[Address(RVA = "0xB14760", Offset = "0xB14760", VA = "0xB14760")]
	private void Update()
	{
	}

	[Token(Token = "0x60001DE")]
	[Address(RVA = "0xB14810", Offset = "0xB14810", VA = "0xB14810")]
	public CurlGrabIndicator()
	{
	}
}
[Token(Token = "0x200005F")]
public class DailyPuzzleLoaderDebugger : StateBehaviour
{
	[Token(Token = "0x60001DF")]
	[Address(RVA = "0xB14818", Offset = "0xB14818", VA = "0xB14818")]
	private void Update()
	{
	}

	[Token(Token = "0x60001E0")]
	[Address(RVA = "0xB148F8", Offset = "0xB148F8", VA = "0xB148F8")]
	public DailyPuzzleLoaderDebugger()
	{
	}
}
[Token(Token = "0x2000060")]
public class DebugAutoSolveSpawner : MonoBehaviour
{
	[Token(Token = "0x40001AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject _prefab;

	[Token(Token = "0x60001E1")]
	[Address(RVA = "0xB14900", Offset = "0xB14900", VA = "0xB14900")]
	public DebugAutoSolveSpawner()
	{
	}
}
[Token(Token = "0x2000061")]
public class EmptySpaceDebug : StateBehaviour
{
	[Token(Token = "0x60001E2")]
	[Address(RVA = "0xB14908", Offset = "0xB14908", VA = "0xB14908")]
	public EmptySpaceDebug()
	{
	}
}
[Token(Token = "0x2000062")]
public class GridDebug : MonoBehaviour
{
	[Token(Token = "0x40001B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Material _freeMat;

	[Token(Token = "0x40001B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Material _occupiedMat;

	[Token(Token = "0x60001E3")]
	[Address(RVA = "0xB14910", Offset = "0xB14910", VA = "0xB14910")]
	public GridDebug()
	{
	}
}
[Token(Token = "0x2000063")]
public class HandDebug : StateBehaviour
{
	[Token(Token = "0x40001B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Cubism.Hand hand;

	[Token(Token = "0x40001B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Text _thumbPinch;

	[Token(Token = "0x40001B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Text _indexPinch;

	[Token(Token = "0x40001B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Text _middlePinch;

	[Token(Token = "0x40001B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Text _ringPinch;

	[Token(Token = "0x40001B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Text _pinkPinch;

	[Token(Token = "0x40001B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[Space(25f)]
	public Text _indexCurl;

	[Token(Token = "0x40001B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Text _middleCurl;

	[Token(Token = "0x40001BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Text _ringCurl;

	[Token(Token = "0x40001BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Text _pinkCurl;

	[Token(Token = "0x40001BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Text _totalCurl;

	[Token(Token = "0x40001BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[Space(25f)]
	public Text _fingerConfThumb;

	[Token(Token = "0x40001BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Text _fingerConfIndex;

	[Token(Token = "0x40001BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public Text _fingerConfMiddle;

	[Token(Token = "0x40001C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public Text _fingerConfRing;

	[Token(Token = "0x40001C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public Text _fingerConfPink;

	[Token(Token = "0x40001C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public Text _tracking;

	[Token(Token = "0x40001C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public Text _crossing;

	[Token(Token = "0x40001C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public Text _handConfidence;

	[Token(Token = "0x40001C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public Text _weightedConfidence;

	[Token(Token = "0x40001C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	[Space(25f)]
	public Text _velocity;

	[Token(Token = "0x40001C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public Text _handScale;

	[Token(Token = "0x40001C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private Controller _controller;

	[Token(Token = "0x60001E4")]
	[Address(RVA = "0xB14918", Offset = "0xB14918", VA = "0xB14918")]
	private void Start()
	{
	}

	[Token(Token = "0x60001E5")]
	[Address(RVA = "0xB1499C", Offset = "0xB1499C", VA = "0xB1499C")]
	private void Update()
	{
	}

	[Token(Token = "0x60001E6")]
	[Address(RVA = "0xB151F4", Offset = "0xB151F4", VA = "0xB151F4")]
	public HandDebug()
	{
	}
}
[Token(Token = "0x2000064")]
public class HandDebugSpawner : MonoBehaviour
{
	[Token(Token = "0x40001C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public HandDebug _handDebug;

	[Token(Token = "0x40001CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform _leftHand;

	[Token(Token = "0x40001CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform _rightHand;

	[Token(Token = "0x60001E7")]
	[Address(RVA = "0xB151FC", Offset = "0xB151FC", VA = "0xB151FC")]
	private void Start()
	{
	}

	[Token(Token = "0x60001E8")]
	[Address(RVA = "0xB1540C", Offset = "0xB1540C", VA = "0xB1540C")]
	public HandDebugSpawner()
	{
	}
}
[Token(Token = "0x2000065")]
public class LoadedPuzzleBoundsDebugger : StateBehaviour
{
	[Token(Token = "0x40001CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform _localBoundsObject;

	[Token(Token = "0x40001CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform _globalBoundsObject;

	[Token(Token = "0x60001E9")]
	[Address(RVA = "0xB15414", Offset = "0xB15414", VA = "0xB15414", Slot = "5")]
	protected override void ForceSetup()
	{
	}

	[Token(Token = "0x60001EA")]
	[Address(RVA = "0xB154B0", Offset = "0xB154B0", VA = "0xB154B0")]
	private void UpdateBounds()
	{
	}

	[Token(Token = "0x60001EB")]
	[Address(RVA = "0xB155CC", Offset = "0xB155CC", VA = "0xB155CC")]
	public LoadedPuzzleBoundsDebugger()
	{
	}
}
[Token(Token = "0x2000066")]
public class ProgressDebugger : StateBehaviour
{
	[Token(Token = "0x40001CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ProgressData progressData;

	[Token(Token = "0x40001CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public CustomLevelProgress customProgress;

	[Token(Token = "0x60001EC")]
	[Address(RVA = "0xB155D4", Offset = "0xB155D4", VA = "0xB155D4")]
	public void SaveProgress()
	{
	}

	[Token(Token = "0x60001ED")]
	[Address(RVA = "0xB155DC", Offset = "0xB155DC", VA = "0xB155DC")]
	public void LoadProgress()
	{
	}

	[Token(Token = "0x60001EE")]
	[Address(RVA = "0xB15610", Offset = "0xB15610", VA = "0xB15610")]
	public void SolveAllMain()
	{
	}

	[Token(Token = "0x60001EF")]
	[Address(RVA = "0xB15658", Offset = "0xB15658", VA = "0xB15658")]
	public void SolveAllPlaytesting()
	{
	}

	[Token(Token = "0x60001F0")]
	[Address(RVA = "0xB156A0", Offset = "0xB156A0", VA = "0xB156A0")]
	public ProgressDebugger()
	{
	}
}
[Token(Token = "0x2000067")]
public class PuzzleBoundsDebugger : MonoBehaviour
{
	[Token(Token = "0x40001D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public PuzzlePosition _puzzlePosition;

	[Token(Token = "0x40001D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[Space(15f)]
	public Transform _bounds;

	[Token(Token = "0x40001D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform _center;

	[Token(Token = "0x60001F1")]
	[Address(RVA = "0xB156A8", Offset = "0xB156A8", VA = "0xB156A8")]
	public void UpdateBounds()
	{
	}

	[Token(Token = "0x60001F2")]
	[Address(RVA = "0xB15710", Offset = "0xB15710", VA = "0xB15710")]
	public PuzzleBoundsDebugger()
	{
	}
}
[Token(Token = "0x2000068")]
public class StageSetDebugger : StateBehaviour
{
	[Serializable]
	[Token(Token = "0x2000069")]
	public class StageDebug
	{
		[Token(Token = "0x40001D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string id;

		[Token(Token = "0x40001D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int index;

		[Token(Token = "0x40001D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string stageName;

		[Token(Token = "0x40001D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Progress progress;

		[Token(Token = "0x40001D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public List<LevelDebug> levels;

		[Token(Token = "0x60001F7")]
		[Address(RVA = "0xB15F0C", Offset = "0xB15F0C", VA = "0xB15F0C")]
		public StageDebug()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x200006A")]
	public class LevelDebug
	{
		[Token(Token = "0x40001DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string id;

		[Token(Token = "0x40001DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string levelName;

		[Token(Token = "0x40001DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Progress progress;

		[Token(Token = "0x40001DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public Vector3 direction;

		[Token(Token = "0x40001DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Bounds bounds;

		[Token(Token = "0x40001DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public float timeSpent;

		[Token(Token = "0x40001E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public float completionTime;

		[Token(Token = "0x40001E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public List<PieceDebug> pieces;

		[Token(Token = "0x60001F8")]
		[Address(RVA = "0xB15F88", Offset = "0xB15F88", VA = "0xB15F88")]
		public LevelDebug()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x200006B")]
	public class PieceDebug
	{
		[Token(Token = "0x40001E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Color color;

		[Token(Token = "0x40001E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool onGrid;

		[Token(Token = "0x40001E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Note note;

		[Token(Token = "0x60001F9")]
		[Address(RVA = "0xB16004", Offset = "0xB16004", VA = "0xB16004")]
		public PieceDebug()
		{
		}
	}

	[Token(Token = "0x40001D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public List<StageDebug> mainStageSet;

	[Token(Token = "0x40001D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ProgressData expectedProgressData;

	[Token(Token = "0x60001F3")]
	[Address(RVA = "0xB15718", Offset = "0xB15718", VA = "0xB15718")]
	public void Setup(StageSet set, StageSet volTwo)
	{
	}

	[Token(Token = "0x60001F4")]
	[Address(RVA = "0xB1571C", Offset = "0xB1571C", VA = "0xB1571C")]
	public void UpdateValues()
	{
	}

	[Token(Token = "0x60001F5")]
	[Address(RVA = "0xB157BC", Offset = "0xB157BC", VA = "0xB157BC")]
	private void UpdateStageSetData()
	{
	}

	[Token(Token = "0x60001F6")]
	[Address(RVA = "0xB1600C", Offset = "0xB1600C", VA = "0xB1600C")]
	public StageSetDebugger()
	{
	}
}
[Token(Token = "0x200006C")]
public class StateDebugger : MonoBehaviour
{
	[Token(Token = "0x40001E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public State _debugState;

	[Token(Token = "0x60001FA")]
	[Address(RVA = "0xB16088", Offset = "0xB16088", VA = "0xB16088")]
	public void Setup(State state)
	{
	}

	[Token(Token = "0x60001FB")]
	[Address(RVA = "0xB16090", Offset = "0xB16090", VA = "0xB16090")]
	public StateDebugger()
	{
	}
}
[Token(Token = "0x200006D")]
public class DevPieceEnabler : MonoBehaviour
{
	[Token(Token = "0x40001E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public PieceCollection _pieces;

	[Token(Token = "0x40001E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool inSequence;

	[Token(Token = "0x40001E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	private bool _visible;

	[Token(Token = "0x60001FC")]
	[Address(RVA = "0xB16098", Offset = "0xB16098", VA = "0xB16098")]
	public void TogglePieces()
	{
	}

	[Token(Token = "0x60001FD")]
	[Address(RVA = "0xB160F8", Offset = "0xB160F8", VA = "0xB160F8")]
	public DevPieceEnabler()
	{
	}
}
[Token(Token = "0x200006E")]
public enum ControllerActionType
{
	[Token(Token = "0x40001EA")]
	REGISTER_MENUANCHOR,
	[Token(Token = "0x40001EB")]
	TOGGLE_MENU,
	[Token(Token = "0x40001EC")]
	SET_MENU,
	[Token(Token = "0x40001ED")]
	TOGGLE_MENU_CURRENT_POS,
	[Token(Token = "0x40001EE")]
	OPEN_LEVEL,
	[Token(Token = "0x40001EF")]
	OPEN_LEVEL_WITH_OPTIONS,
	[Token(Token = "0x40001F0")]
	SET_FLOOR_GRID,
	[Token(Token = "0x40001F1")]
	SET_NIGHT_MODE,
	[Token(Token = "0x40001F2")]
	SET_COLOR_THEME,
	[Token(Token = "0x40001F3")]
	SET_SOLVED_SPAWN,
	[Token(Token = "0x40001F4")]
	SET_ADVANCED_CONTROLS,
	[Token(Token = "0x40001F5")]
	SET_EDITOR_ACCESS,
	[Token(Token = "0x40001F6")]
	CLEAR_PROGRESS,
	[Token(Token = "0x40001F7")]
	QUIT,
	[Token(Token = "0x40001F8")]
	RECALIBRATE,
	[Token(Token = "0x40001F9")]
	SET_PUZZLE_SONG,
	[Token(Token = "0x40001FA")]
	SET_CREDITS,
	[Token(Token = "0x40001FB")]
	SET_GAME_MODE,
	[Token(Token = "0x40001FC")]
	SET_MASTER_VOLUME,
	[Token(Token = "0x40001FD")]
	SET_BRIGHTNESS,
	[Token(Token = "0x40001FE")]
	SET_CONTRAST,
	[Token(Token = "0x40001FF")]
	SET_CONTINOUS_MUSIC_MODE,
	[Token(Token = "0x4000200")]
	SET_SPECTATOR_CAM,
	[Token(Token = "0x4000201")]
	SET_ORTHO,
	[Token(Token = "0x4000202")]
	SET_UI_VISIBLE,
	[Token(Token = "0x4000203")]
	SET_AVATAR_VISIBLE,
	[Token(Token = "0x4000204")]
	SET_HANDS_VISIBLE,
	[Token(Token = "0x4000205")]
	SET_FOV,
	[Token(Token = "0x4000206")]
	SET_LOCK_ROLL,
	[Token(Token = "0x4000207")]
	SET_LOCK_PITCH,
	[Token(Token = "0x4000208")]
	SET_LOCK_CENTER,
	[Token(Token = "0x4000209")]
	SET_SNAP_YAW,
	[Token(Token = "0x400020A")]
	SET_ORBIT_PUZZLE,
	[Token(Token = "0x400020B")]
	SWITCH_TO_SAVEFILE,
	[Token(Token = "0x400020C")]
	CREATE_SAVEFILE,
	[Token(Token = "0x400020D")]
	DELETE_SAVEFILE,
	[Token(Token = "0x400020E")]
	SET_MR_HANDS_VISIBLE,
	[Token(Token = "0x400020F")]
	SET_MR_AVATAR_VISIBLE,
	[Token(Token = "0x4000210")]
	SET_REALITYMIXER_MOVING_CAM,
	[Token(Token = "0x4000211")]
	SET_HAND_SMOOTHING,
	[Token(Token = "0x4000212")]
	SET_HIDE_HANDS,
	[Token(Token = "0x4000213")]
	SET_REFRESH_RATE,
	[Token(Token = "0x4000214")]
	SET_PASSTHROUGH,
	[Token(Token = "0x4000215")]
	SET_REPROJECT_CONTROLLERS,
	[Token(Token = "0x4000216")]
	SET_USE_VIRTUAL_HANDS,
	[Token(Token = "0x4000217")]
	SET_PASSTHROUGH_BRIGHTNESS,
	[Token(Token = "0x4000218")]
	SET_EDITOR_MODE,
	[Token(Token = "0x4000219")]
	SET_EDITOR_HANDEDNESS,
	[Token(Token = "0x400021A")]
	SET_EDITOR_FREEZE,
	[Token(Token = "0x400021B")]
	SET_EDITOR_UNSAVEDCHANGES,
	[Token(Token = "0x400021C")]
	SAVE_PUZZLE,
	[Token(Token = "0x400021D")]
	DELETE_PUZZLE,
	[Token(Token = "0x400021E")]
	SET_VOXEL_CREATIONDATA,
	[Token(Token = "0x400021F")]
	SET_EDITOR_PUZZLENAME,
	[Token(Token = "0x4000220")]
	SET_EDITOR_REMOVE_RESTRICTIONS,
	[Token(Token = "0x4000221")]
	SET_AUTOSELECT_PIECE,
	[Token(Token = "0x4000222")]
	SET_RESTRICT_TO_GRID,
	[Token(Token = "0x4000223")]
	RESET_EDITOR,
	[Token(Token = "0x4000224")]
	SET_LANGUAGE,
	[Token(Token = "0x4000225")]
	RELOAD_CUSTOM_PUZZLES,
	[Token(Token = "0x4000226")]
	SET_GRID_STYLE,
	[Token(Token = "0x4000227")]
	SET_GRID_SOLVED_STATE,
	[Token(Token = "0x4000228")]
	BUY_PUZZLE_PACK,
	[Token(Token = "0x4000229")]
	SHARE_PUZZLE_TO_DISCORD,
	[Token(Token = "0x400022A")]
	SET_SHARE_WITH_DEV,
	[Token(Token = "0x400022B")]
	LOG_EDITOR_ACTION,
	[Token(Token = "0x400022C")]
	EDITOR_UNDO,
	[Token(Token = "0x400022D")]
	QUERY_PUZZLES,
	[Token(Token = "0x400022E")]
	UPLOAD_PUZZLE
}
[Token(Token = "0x200006F")]
public class ControllerAction
{
	[Token(Token = "0x400022F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ControllerActionType type;

	[Token(Token = "0x60001FE")]
	[Address(RVA = "0xB16108", Offset = "0xB16108", VA = "0xB16108")]
	public ControllerAction(ControllerActionType type)
	{
	}
}
[Token(Token = "0x2000070")]
public class RegisterMenuAnchorAction : ControllerAction
{
	[Token(Token = "0x4000230")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public MenuAnchorData data;

	[Token(Token = "0x4000231")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AnchorPosition position;

	[Token(Token = "0x60001FF")]
	[Address(RVA = "0xB16130", Offset = "0xB16130", VA = "0xB16130")]
	public RegisterMenuAnchorAction(AnchorPosition position, MenuAnchorData data)
	{
	}
}
[Token(Token = "0x2000071")]
public class ToggleMenuAction : ControllerAction
{
	[Token(Token = "0x4000232")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public AnchorPosition menuPosition;

	[Token(Token = "0x6000200")]
	[Address(RVA = "0xB16170", Offset = "0xB16170", VA = "0xB16170")]
	public ToggleMenuAction(AnchorPosition menuPosition)
	{
	}
}
[Token(Token = "0x2000072")]
public class SetMenuAction : ControllerAction
{
	[Token(Token = "0x4000233")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public AnchorPosition menuPosition;

	[Token(Token = "0x4000234")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool visible;

	[Token(Token = "0x6000201")]
	[Address(RVA = "0xB1619C", Offset = "0xB1619C", VA = "0xB1619C")]
	public SetMenuAction(AnchorPosition menuPosition, bool visible)
	{
	}
}
[Token(Token = "0x2000073")]
public class ToggleMenuAtCurrentPositionAction : ControllerAction
{
	[Token(Token = "0x6000202")]
	[Address(RVA = "0xB161D0", Offset = "0xB161D0", VA = "0xB161D0")]
	public ToggleMenuAtCurrentPositionAction()
	{
	}
}
[Token(Token = "0x2000074")]
public class OpenLevelAction : ControllerAction
{
	[Token(Token = "0x4000235")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Level level;

	[Token(Token = "0x6000203")]
	[Address(RVA = "0xB0F668", Offset = "0xB0F668", VA = "0xB0F668")]
	public OpenLevelAction(Level level)
	{
	}
}
[Token(Token = "0x2000075")]
public class OpenLevelWithOptionsAction : ControllerAction
{
	[Token(Token = "0x4000236")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Level level;

	[Token(Token = "0x4000237")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public LoadOptions options;

	[Token(Token = "0x6000204")]
	[Address(RVA = "0xB161F0", Offset = "0xB161F0", VA = "0xB161F0")]
	public OpenLevelWithOptionsAction(Level level, LoadOptions options)
	{
	}
}
[Token(Token = "0x2000076")]
public class SetFloorGridAction : ControllerAction
{
	[Token(Token = "0x4000238")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public bool enabled;

	[Token(Token = "0x6000205")]
	[Address(RVA = "0xB1110C", Offset = "0xB1110C", VA = "0xB1110C")]
	public SetFloorGridAction(bool enabled)
	{
	}
}
[Token(Token = "0x2000077")]
public class SetSolvedSpawnAction : ControllerAction
{
	[Token(Token = "0x4000239")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public bool enabled;

	[Token(Token = "0x6000206")]
	[Address(RVA = "0xB11380", Offset = "0xB11380", VA = "0xB11380")]
	public SetSolvedSpawnAction(bool enabled)
	{
	}
}
[Token(Token = "0x2000078")]
public class SetAdvancedControlsAction : ControllerAction
{
	[Token(Token = "0x400023A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public bool enabled;

	[Token(Token = "0x6000207")]
	[Address(RVA = "0xB0AAF0", Offset = "0xB0AAF0", VA = "0xB0AAF0")]
	public SetAdvancedControlsAction(bool enabled)
	{
	}
}
[Token(Token = "0x2000079")]
public class SetNightModeAction : ControllerAction
{
	[Token(Token = "0x400023B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public bool enabled;

	[Token(Token = "0x6000208")]
	[Address(RVA = "0xB1034C", Offset = "0xB1034C", VA = "0xB1034C")]
	public SetNightModeAction(bool enabled)
	{
	}
}
[Token(Token = "0x200007A")]
public class SetColorThemeAction : ControllerAction
{
	[Token(Token = "0x400023C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public ColorThemeType theme;

	[Token(Token = "0x6000209")]
	[Address(RVA = "0xB0BA94", Offset = "0xB0BA94", VA = "0xB0BA94")]
	public SetColorThemeAction(ColorThemeType theme)
	{
	}
}
[Token(Token = "0x200007B")]
public class ClearProgressAction : ControllerAction
{
	[Token(Token = "0x600020A")]
	[Address(RVA = "0xB0B450", Offset = "0xB0B450", VA = "0xB0B450")]
	public ClearProgressAction()
	{
	}
}
[Token(Token = "0x200007C")]
public class QuitAction : ControllerAction
{
	[Token(Token = "0x600020B")]
	[Address(RVA = "0xB10B2C", Offset = "0xB10B2C", VA = "0xB10B2C")]
	public QuitAction()
	{
	}
}
[Token(Token = "0x200007D")]
public class RecalibrateAction : ControllerAction
{
	[Token(Token = "0x600020C")]
	[Address(RVA = "0xB10C44", Offset = "0xB10C44", VA = "0xB10C44")]
	public RecalibrateAction()
	{
	}
}
[Token(Token = "0x200007E")]
public class SetPuzzleSongAction : ControllerAction
{
	[Token(Token = "0x400023D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public bool playing;

	[Token(Token = "0x400023E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string stageSetName;

	[Token(Token = "0x600020D")]
	[Address(RVA = "0xB109B4", Offset = "0xB109B4", VA = "0xB109B4")]
	public SetPuzzleSongAction(bool playing, string stageSetName)
	{
	}
}
[Token(Token = "0x200007F")]
public class SetGameModeAction : ControllerAction
{
	[Token(Token = "0x400023F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public Mode mode;

	[Token(Token = "0x4000240")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool waitForPuzzleLoadToFinish;

	[Token(Token = "0x600020E")]
	[Address(RVA = "0xB0F0B0", Offset = "0xB0F0B0", VA = "0xB0F0B0")]
	public SetGameModeAction(Mode mode, bool waitForPuzzleLoadToFinish = false)
	{
	}
}
[Token(Token = "0x2000080")]
public class SetMasterVolumeAction : ControllerAction
{
	[Token(Token = "0x4000241")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float value;

	[Token(Token = "0x4000242")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public VolumeTarget target;

	[Token(Token = "0x600020F")]
	[Address(RVA = "0xB1318C", Offset = "0xB1318C", VA = "0xB1318C")]
	public SetMasterVolumeAction(float value, VolumeTarget target)
	{
	}
}
[Token(Token = "0x2000081")]
public class SetBrightnessAction : ControllerAction
{
	[Token(Token = "0x4000243")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float value;

	[Token(Token = "0x6000210")]
	[Address(RVA = "0xB0B030", Offset = "0xB0B030", VA = "0xB0B030")]
	public SetBrightnessAction(float value)
	{
	}
}
[Token(Token = "0x2000082")]
public class SetContrastAction : ControllerAction
{
	[Token(Token = "0x4000244")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float value;

	[Token(Token = "0x6000211")]
	[Address(RVA = "0xB0BF98", Offset = "0xB0BF98", VA = "0xB0BF98")]
	public SetContrastAction(float value)
	{
	}
}
[Token(Token = "0x2000083")]
public class SetSpectatorCamAction : ControllerAction
{
	[Token(Token = "0x4000245")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public new SpectatorCam type;

	[Token(Token = "0x6000212")]
	[Address(RVA = "0xB0B32C", Offset = "0xB0B32C", VA = "0xB0B32C")]
	public SetSpectatorCamAction(SpectatorCam type)
	{
	}
}
[Token(Token = "0x2000084")]
public class SetContinousMusicModeAction : ControllerAction
{
	[Token(Token = "0x4000246")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public bool enabled;

	[Token(Token = "0x6000213")]
	[Address(RVA = "0xB10218", Offset = "0xB10218", VA = "0xB10218")]
	public SetContinousMusicModeAction(bool enabled)
	{
	}
}
[Token(Token = "0x2000085")]
public class SetOrthoAction : ControllerAction
{
	[Token(Token = "0x4000247")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public bool isOrtho;

	[Token(Token = "0x6000214")]
	[Address(RVA = "0xB11D5C", Offset = "0xB11D5C", VA = "0xB11D5C")]
	public SetOrthoAction(bool isOrtho)
	{
	}
}
[Token(Token = "0x2000086")]
public class SetUiVisibleAction : ControllerAction
{
	[Token(Token = "0x4000248")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public bool visible;

	[Token(Token = "0x6000215")]
	[Address(RVA = "0xB11E00", Offset = "0xB11E00", VA = "0xB11E00")]
	public SetUiVisibleAction(bool visible)
	{
	}
}
[Token(Token = "0x2000087")]
public class SetAvatarVisibleAction : ControllerAction
{
	[Token(Token = "0x4000249")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public bool visible;

	[Token(Token = "0x6000216")]
	[Address(RVA = "0xB11EA4", Offset = "0xB11EA4", VA = "0xB11EA4")]
	public SetAvatarVisibleAction(bool visible)
	{
	}
}
[Token(Token = "0x2000088")]
public class SetHandsVisibleAction : ControllerAction
{
	[Token(Token = "0x400024A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public bool visible;

	[Token(Token = "0x6000217")]
	[Address(RVA = "0xB11F48", Offset = "0xB11F48", VA = "0xB11F48")]
	public SetHandsVisibleAction(bool visible)
	{
	}
}
[Token(Token = "0x2000089")]
public class SetMrAvatarVisibleAction : ControllerAction
{
	[Token(Token = "0x400024B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public bool visible;

	[Token(Token = "0x6000218")]
	[Address(RVA = "0xB10000", Offset = "0xB10000", VA = "0xB10000")]
	public SetMrAvatarVisibleAction(bool visible)
	{
	}
}
[Token(Token = "0x200008A")]
public class SetPassthroughAction : ControllerAction
{
	[Token(Token = "0x400024C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public bool enabled;

	[Token(Token = "0x6000219")]
	[Address(RVA = "0xB10804", Offset = "0xB10804", VA = "0xB10804")]
	public SetPassthroughAction(bool enabled)
	{
	}
}
[Token(Token = "0x200008B")]
public class SetReprojectControllersAction : ControllerAction
{
	[Token(Token = "0x400024D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public bool enabled;

	[Token(Token = "0x600021A")]
	[Address(RVA = "0xB10EA4", Offset = "0xB10EA4", VA = "0xB10EA4")]
	public SetReprojectControllersAction(bool enabled)
	{
	}
}
[Token(Token = "0x200008C")]
public class SetUseVirtualHandsAction : ControllerAction
{
	[Token(Token = "0x400024E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public bool enabled;

	[Token(Token = "0x600021B")]
	[Address(RVA = "0xB11248", Offset = "0xB11248", VA = "0xB11248")]
	public SetUseVirtualHandsAction(bool enabled)
	{
	}
}
[Token(Token = "0x200008D")]
public class SetPassthroughBrightnessAction : ControllerAction
{
	[Token(Token = "0x400024F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float value;

	[Token(Token = "0x600021C")]
	[Address(RVA = "0xB16224", Offset = "0xB16224", VA = "0xB16224")]
	public SetPassthroughBrightnessAction(float value)
	{
	}
}
[Token(Token = "0x200008E")]
public class SetMrHandsVisibleAction : ControllerAction
{
	[Token(Token = "0x4000250")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public bool visible;

	[Token(Token = "0x600021D")]
	[Address(RVA = "0xB0FF5C", Offset = "0xB0FF5C", VA = "0xB0FF5C")]
	public SetMrHandsVisibleAction(bool visible)
	{
	}
}
[Token(Token = "0x200008F")]
public class SetLockRollAction : ControllerAction
{
	[Token(Token = "0x4000251")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public bool locked;

	[Token(Token = "0x600021E")]
	[Address(RVA = "0xB11FE8", Offset = "0xB11FE8", VA = "0xB11FE8")]
	public SetLockRollAction(bool locked)
	{
	}
}
[Token(Token = "0x2000090")]
public class SetLockPitchAction : ControllerAction
{
	[Token(Token = "0x4000252")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public bool locked;

	[Token(Token = "0x600021F")]
	[Address(RVA = "0xB12088", Offset = "0xB12088", VA = "0xB12088")]
	public SetLockPitchAction(bool locked)
	{
	}
}
[Token(Token = "0x2000091")]
public class SetFovAction : ControllerAction
{
	[Token(Token = "0x4000253")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public SpectatorFieldOfView fov;

	[Token(Token = "0x6000220")]
	[Address(RVA = "0xB1188C", Offset = "0xB1188C", VA = "0xB1188C")]
	public SetFovAction(SpectatorFieldOfView fov)
	{
	}
}
[Token(Token = "0x2000092")]
public class SetLockCenterAction : ControllerAction
{
	[Token(Token = "0x4000254")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public bool locked;

	[Token(Token = "0x6000221")]
	[Address(RVA = "0xB12128", Offset = "0xB12128", VA = "0xB12128")]
	public SetLockCenterAction(bool locked)
	{
	}
}
[Token(Token = "0x2000093")]
public class SetSnapYawAction : ControllerAction
{
	[Token(Token = "0x4000255")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public bool snap;

	[Token(Token = "0x6000222")]
	[Address(RVA = "0xB121C8", Offset = "0xB121C8", VA = "0xB121C8")]
	public SetSnapYawAction(bool snap)
	{
	}
}
[Token(Token = "0x2000094")]
public class SetOrbitPuzzleAction : ControllerAction
{
	[Token(Token = "0x4000256")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public bool orbit;

	[Token(Token = "0x6000223")]
	[Address(RVA = "0xB12268", Offset = "0xB12268", VA = "0xB12268")]
	public SetOrbitPuzzleAction(bool orbit)
	{
	}
}
[Token(Token = "0x2000095")]
public class SwitchToSaveFileAction : ControllerAction
{
	[Token(Token = "0x4000257")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public int index;

	[Token(Token = "0x6000224")]
	[Address(RVA = "0xB16254", Offset = "0xB16254", VA = "0xB16254")]
	public SwitchToSaveFileAction(int index)
	{
	}
}
[Token(Token = "0x2000096")]
public class CreateSaveFileAction : ControllerAction
{
	[Token(Token = "0x4000258")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public int index;

	[Token(Token = "0x6000225")]
	[Address(RVA = "0xB16280", Offset = "0xB16280", VA = "0xB16280")]
	public CreateSaveFileAction(int index)
	{
	}
}
[Token(Token = "0x2000097")]
public class DeleteSaveFileAction : ControllerAction
{
	[Token(Token = "0x4000259")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public int index;

	[Token(Token = "0x6000226")]
	[Address(RVA = "0xB162AC", Offset = "0xB162AC", VA = "0xB162AC")]
	public DeleteSaveFileAction(int index)
	{
	}
}
[Token(Token = "0x2000098")]
public class SetRealityMixerMovingCam : ControllerAction
{
	[Token(Token = "0x400025A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public bool enabled;

	[Token(Token = "0x6000227")]
	[Address(RVA = "0xB0FEBC", Offset = "0xB0FEBC", VA = "0xB0FEBC")]
	public SetRealityMixerMovingCam(bool visible)
	{
	}
}
[Token(Token = "0x2000099")]
public class SetHandSmoothingAction : ControllerAction
{
	[Token(Token = "0x400025B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public bool enabled;

	[Token(Token = "0x6000228")]
	[Address(RVA = "0xB0FAB4", Offset = "0xB0FAB4", VA = "0xB0FAB4")]
	public SetHandSmoothingAction(bool on)
	{
	}
}
[Token(Token = "0x200009A")]
public class SetHideHandsWhenTrackingLostAction : ControllerAction
{
	[Token(Token = "0x400025C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public bool enabled;

	[Token(Token = "0x6000229")]
	[Address(RVA = "0xB0FB54", Offset = "0xB0FB54", VA = "0xB0FB54")]
	public SetHideHandsWhenTrackingLostAction(bool on)
	{
	}
}
[Token(Token = "0x200009B")]
public class SetRefreshRateAction : ControllerAction
{
	[Token(Token = "0x400025D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public int hz;

	[Token(Token = "0x600022A")]
	[Address(RVA = "0xB162D8", Offset = "0xB162D8", VA = "0xB162D8")]
	public SetRefreshRateAction(int hz)
	{
	}
}
[Token(Token = "0x200009C")]
public class SetEditorModeAction : ControllerAction
{
	[Token(Token = "0x400025E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public EditMode mode;

	[Token(Token = "0x600022B")]
	[Address(RVA = "0xB0E06C", Offset = "0xB0E06C", VA = "0xB0E06C")]
	public SetEditorModeAction(EditMode mode)
	{
	}
}
[Token(Token = "0x200009D")]
public class SetEditorHandednessAction : ControllerAction
{
	[Token(Token = "0x400025F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public Cubism.Hand hand;

	[Token(Token = "0x600022C")]
	[Address(RVA = "0xB0ED7C", Offset = "0xB0ED7C", VA = "0xB0ED7C")]
	public SetEditorHandednessAction(Cubism.Hand hand)
	{
	}
}
[Token(Token = "0x200009E")]
public class SetEditorFreezeAction : ControllerAction
{
	[Token(Token = "0x4000260")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public bool freeze;

	[Token(Token = "0x4000261")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public FreezeReason reason;

	[Token(Token = "0x600022D")]
	[Address(RVA = "0xB0C7F4", Offset = "0xB0C7F4", VA = "0xB0C7F4")]
	public SetEditorFreezeAction(bool freeze, FreezeReason reason = FreezeReason.notEditing)
	{
	}
}
[Token(Token = "0x200009F")]
public class SetUnsavedChangesAction : ControllerAction
{
	[Token(Token = "0x4000262")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public bool hasUnsavedChanges;

	[Token(Token = "0x600022E")]
	[Address(RVA = "0xB0EDA8", Offset = "0xB0EDA8", VA = "0xB0EDA8")]
	public SetUnsavedChangesAction(bool hasUnsavedChanges)
	{
	}
}
[Token(Token = "0x20000A0")]
public class SetVoxelCreationDataAction : ControllerAction
{
	[Token(Token = "0x4000263")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform parent;

	[Token(Token = "0x4000264")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Vector3 offset;

	[Token(Token = "0x600022F")]
	[Address(RVA = "0xB16304", Offset = "0xB16304", VA = "0xB16304")]
	public SetVoxelCreationDataAction(Transform parent, Vector3 offset)
	{
	}
}
[Token(Token = "0x20000A1")]
public class SetEditorPuzzleNameAction : ControllerAction
{
	[Token(Token = "0x4000265")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string name;

	[Token(Token = "0x6000230")]
	[Address(RVA = "0xB16358", Offset = "0xB16358", VA = "0xB16358")]
	public SetEditorPuzzleNameAction(string name)
	{
	}
}
[Token(Token = "0x20000A2")]
public class ResetEditorAction : ControllerAction
{
	[Token(Token = "0x4000266")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public bool clearGrid;

	[Token(Token = "0x4000267")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x15")]
	public bool clearPieces;

	[Token(Token = "0x6000231")]
	[Address(RVA = "0xB0B7BC", Offset = "0xB0B7BC", VA = "0xB0B7BC")]
	public ResetEditorAction(bool clearGrid = true, bool clearPieces = true)
	{
	}
}
[Token(Token = "0x20000A3")]
public class SetLanguageAction : ControllerAction
{
	[Token(Token = "0x4000268")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public SystemLanguage language;

	[Token(Token = "0x6000232")]
	[Address(RVA = "0xB16388", Offset = "0xB16388", VA = "0xB16388")]
	public SetLanguageAction(SystemLanguage language)
	{
	}
}
[Token(Token = "0x20000A4")]
public class ReloadCustomPuzzlesAction : ControllerAction
{
	[Token(Token = "0x6000233")]
	[Address(RVA = "0xB163B4", Offset = "0xB163B4", VA = "0xB163B4")]
	public ReloadCustomPuzzlesAction()
	{
	}
}
[Token(Token = "0x20000A5")]
public class SetGridStyleAction : ControllerAction
{
	[Token(Token = "0x4000269")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float edgeWidth;

	[Token(Token = "0x400026A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float dotSize;

	[Token(Token = "0x400026B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float faceOffset;

	[Token(Token = "0x6000234")]
	[Address(RVA = "0xB163D4", Offset = "0xB163D4", VA = "0xB163D4")]
	public SetGridStyleAction(float edgeWidth, float dotSize, float faceOffset)
	{
	}
}
[Token(Token = "0x20000A6")]
public class SetGridVisibleOnSolveAction : ControllerAction
{
	[Token(Token = "0x400026C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public bool visible;

	[Token(Token = "0x6000235")]
	[Address(RVA = "0xB16418", Offset = "0xB16418", VA = "0xB16418")]
	public SetGridVisibleOnSolveAction(bool visible)
	{
	}
}
[Token(Token = "0x20000A7")]
public class BuyPuzzlePackAction : ControllerAction
{
	[Token(Token = "0x400026D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string packName;

	[Token(Token = "0x6000236")]
	[Address(RVA = "0xB0B18C", Offset = "0xB0B18C", VA = "0xB0B18C")]
	public BuyPuzzlePackAction(string packName)
	{
	}
}
[Token(Token = "0x20000A8")]
public class SavePuzzleAction : ControllerAction
{
	[Token(Token = "0x400026E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public PuzzleDescription description;

	[Token(Token = "0x6000237")]
	[Address(RVA = "0xB0ECB4", Offset = "0xB0ECB4", VA = "0xB0ECB4")]
	public SavePuzzleAction(PuzzleDescription description)
	{
	}
}
[Token(Token = "0x20000A9")]
public class DeletePuzzleAction : ControllerAction
{
	[Token(Token = "0x400026F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Level level;

	[Token(Token = "0x6000238")]
	[Address(RVA = "0xB16448", Offset = "0xB16448", VA = "0xB16448")]
	public DeletePuzzleAction(Level level)
	{
	}
}
[Token(Token = "0x20000AA")]
public class SetRemoveRestrictionsAction : ControllerAction
{
	[Token(Token = "0x4000270")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public bool enabled;

	[Token(Token = "0x6000239")]
	[Address(RVA = "0xB10D68", Offset = "0xB10D68", VA = "0xB10D68")]
	public SetRemoveRestrictionsAction(bool enabled)
	{
	}
}
[Token(Token = "0x20000AB")]
public class SetAutoSelectPieceAction : ControllerAction
{
	[Token(Token = "0x4000271")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public bool autoSelect;

	[Token(Token = "0x600023A")]
	[Address(RVA = "0xB0AC90", Offset = "0xB0AC90", VA = "0xB0AC90")]
	public SetAutoSelectPieceAction(bool autoSelect)
	{
	}
}
[Token(Token = "0x20000AC")]
public class SetRestrictToGridAction : ControllerAction
{
	[Token(Token = "0x4000272")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public bool restrict;

	[Token(Token = "0x600023B")]
	[Address(RVA = "0xB10FD8", Offset = "0xB10FD8", VA = "0xB10FD8")]
	public SetRestrictToGridAction(bool restrict)
	{
	}
}
[Token(Token = "0x20000AD")]
public class SetShareWithDevAction : ControllerAction
{
	[Token(Token = "0x4000273")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public bool share;

	[Token(Token = "0x600023C")]
	[Address(RVA = "0xB0D55C", Offset = "0xB0D55C", VA = "0xB0D55C")]
	public SetShareWithDevAction(bool share)
	{
	}
}
[Token(Token = "0x20000AE")]
public class SharePuzzleToDiscordAction : ControllerAction
{
	[Token(Token = "0x600023D")]
	[Address(RVA = "0xB0ECE4", Offset = "0xB0ECE4", VA = "0xB0ECE4")]
	public SharePuzzleToDiscordAction()
	{
	}
}
[Token(Token = "0x20000AF")]
public class SetEditorAccessAction : ControllerAction
{
	[Token(Token = "0x4000274")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public bool enabled;

	[Token(Token = "0x600023E")]
	[Address(RVA = "0xB0F79C", Offset = "0xB0F79C", VA = "0xB0F79C")]
	public SetEditorAccessAction(bool enabled)
	{
	}
}
[Token(Token = "0x20000B0")]
public class LogEditorActionAction : ControllerAction
{
	[Token(Token = "0x4000275")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public EditorAction action;

	[Token(Token = "0x600023F")]
	[Address(RVA = "0xB16478", Offset = "0xB16478", VA = "0xB16478")]
	public LogEditorActionAction(EditorAction action)
	{
	}
}
[Token(Token = "0x20000B1")]
public class EditorUndoAction : ControllerAction
{
	[Token(Token = "0x6000240")]
	[Address(RVA = "0xB12EBC", Offset = "0xB12EBC", VA = "0xB12EBC")]
	public EditorUndoAction()
	{
	}
}
[Token(Token = "0x20000B2")]
public class QueryPuzzlesAction : ControllerAction
{
	[Token(Token = "0x4000276")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public PuzzleQueryOptions options;

	[Token(Token = "0x6000241")]
	[Address(RVA = "0xB0BD54", Offset = "0xB0BD54", VA = "0xB0BD54")]
	public QueryPuzzlesAction(PuzzleQueryOptions options)
	{
	}
}
[Token(Token = "0x20000B3")]
public class UploadPuzzleAction : ControllerAction
{
	[Token(Token = "0x4000277")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Level level;

	[Token(Token = "0x6000242")]
	[Address(RVA = "0xB164A8", Offset = "0xB164A8", VA = "0xB164A8")]
	public UploadPuzzleAction(Level level)
	{
	}
}
[Token(Token = "0x20000B4")]
public class PuzzleQueryOptions
{
	[Token(Token = "0x4000278")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int itemsPerPage;

	[Token(Token = "0x4000279")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public int page;

	[Token(Token = "0x6000243")]
	[Address(RVA = "0xB0BD40", Offset = "0xB0BD40", VA = "0xB0BD40")]
	public PuzzleQueryOptions()
	{
	}
}
[Token(Token = "0x20000B5")]
public static class Dispatcher
{
	[Token(Token = "0x14000002")]
	private static event Action<ControllerAction> callbacks
	{
		[Token(Token = "0x6000244")]
		[Address(RVA = "0xB164D8", Offset = "0xB164D8", VA = "0xB164D8")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000245")]
		[Address(RVA = "0xB165A4", Offset = "0xB165A4", VA = "0xB165A4")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x6000246")]
	[Address(RVA = "0xB16670", Offset = "0xB16670", VA = "0xB16670")]
	public static void Register(Action<ControllerAction> callback)
	{
	}

	[Token(Token = "0x6000247")]
	[Address(RVA = "0xB16674", Offset = "0xB16674", VA = "0xB16674")]
	public static void Unregister(Action<ControllerAction> callback)
	{
	}

	[Token(Token = "0x6000248")]
	[Address(RVA = "0xB0AB20", Offset = "0xB0AB20", VA = "0xB0AB20")]
	public static void Dispatch(ControllerAction action)
	{
	}

	[Token(Token = "0x6000249")]
	[Address(RVA = "0xB16678", Offset = "0xB16678", VA = "0xB16678")]
	public static void ClearRegistrations()
	{
	}
}
[Token(Token = "0x20000B6")]
public class DualControllerTip : MonoBehaviour
{
	[Token(Token = "0x400027B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform _leftController;

	[Token(Token = "0x400027C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform _rightController;

	[Token(Token = "0x400027D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform _leftLine;

	[Token(Token = "0x400027E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform _rightLine;

	[Token(Token = "0x400027F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Text _text;

	[Token(Token = "0x4000280")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float scaleFactor;

	[Token(Token = "0x4000281")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[Header("Debug")]
	public Transform _head;

	[Token(Token = "0x600024A")]
	[Address(RVA = "0xB166C0", Offset = "0xB166C0", VA = "0xB166C0")]
	public void Setup(string text, Transform left, Transform right)
	{
	}

	[Token(Token = "0x600024B")]
	[Address(RVA = "0xB16708", Offset = "0xB16708", VA = "0xB16708")]
	private void Update()
	{
	}

	[Token(Token = "0x600024C")]
	[Address(RVA = "0xB16A0C", Offset = "0xB16A0C", VA = "0xB16A0C")]
	private void ShapeLine(Transform line, Transform controller)
	{
	}

	[Token(Token = "0x600024D")]
	[Address(RVA = "0xB16B48", Offset = "0xB16B48", VA = "0xB16B48")]
	public DualControllerTip()
	{
	}
}
[Token(Token = "0x20000B7")]
public class EdgePing : MonoBehaviour
{
	[Token(Token = "0x4000282")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Animator _animator;

	[Token(Token = "0x4000283")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public CenteredAutoCube _autoCube;

	[Token(Token = "0x600024E")]
	[Address(RVA = "0xB16B50", Offset = "0xB16B50", VA = "0xB16B50")]
	public void StartPingRepeated(float interval, [Optional] EdgePingParams edgeParams)
	{
	}

	[Token(Token = "0x600024F")]
	[Address(RVA = "0xB16C08", Offset = "0xB16C08", VA = "0xB16C08")]
	public void StopPingRepeating()
	{
	}

	[Token(Token = "0x6000250")]
	[Address(RVA = "0xB16C10", Offset = "0xB16C10", VA = "0xB16C10")]
	private void InvokedPing()
	{
	}

	[Token(Token = "0x6000251")]
	[Address(RVA = "0xB16C18", Offset = "0xB16C18", VA = "0xB16C18")]
	public void Ping([Optional] EdgePingParams edgeParams)
	{
	}

	[Token(Token = "0x6000252")]
	[Address(RVA = "0xB16CB4", Offset = "0xB16CB4", VA = "0xB16CB4")]
	public EdgePing()
	{
	}
}
[Serializable]
[Token(Token = "0x20000B8")]
public class EdgePingParams
{
	[Token(Token = "0x4000284")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Vector3 size;

	[Token(Token = "0x4000285")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float thickNess;

	[Token(Token = "0x6000253")]
	[Address(RVA = "0xB16CBC", Offset = "0xB16CBC", VA = "0xB16CBC")]
	public EdgePingParams()
	{
	}
}
[Token(Token = "0x20000B9")]
public class Follow : MonoBehaviour
{
	[Token(Token = "0x4000286")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool followPosition;

	[Token(Token = "0x4000287")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool followRotation;

	[Token(Token = "0x4000288")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform target;

	[Token(Token = "0x6000254")]
	[Address(RVA = "0xB16D2C", Offset = "0xB16D2C", VA = "0xB16D2C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000255")]
	[Address(RVA = "0xB16E18", Offset = "0xB16E18", VA = "0xB16E18")]
	public Follow()
	{
	}
}
[Token(Token = "0x20000BA")]
public class Grid : MonoBehaviour
{
	[Token(Token = "0x400028E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool __debugDrawNeighbours;

	[Token(Token = "0x400028F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Dictionary<string, GridCell> cells;

	[Token(Token = "0x4000290")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Transform gridCellsParent;

	[Token(Token = "0x4000291")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Transform piecesParent;

	[Token(Token = "0x4000292")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private bool _complete;

	[Token(Token = "0x4000293")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private Bounds _localBounds;

	[Token(Token = "0x14000003")]
	public event Action<GridCell> OnAdded
	{
		[Token(Token = "0x6000256")]
		[Address(RVA = "0xB16E20", Offset = "0xB16E20", VA = "0xB16E20")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000257")]
		[Address(RVA = "0xB16ED0", Offset = "0xB16ED0", VA = "0xB16ED0")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x14000004")]
	public event Action<GridCell> OnRemoved
	{
		[Token(Token = "0x6000258")]
		[Address(RVA = "0xB16F80", Offset = "0xB16F80", VA = "0xB16F80")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000259")]
		[Address(RVA = "0xB17030", Offset = "0xB17030", VA = "0xB17030")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x14000005")]
	public event Action OnGridComplete
	{
		[Token(Token = "0x600025A")]
		[Address(RVA = "0xB170E0", Offset = "0xB170E0", VA = "0xB170E0")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x600025B")]
		[Address(RVA = "0xB1717C", Offset = "0xB1717C", VA = "0xB1717C")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x14000006")]
	public event Action OnGridIncomplete
	{
		[Token(Token = "0x600025C")]
		[Address(RVA = "0xB17218", Offset = "0xB17218", VA = "0xB17218")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x600025D")]
		[Address(RVA = "0xB172B4", Offset = "0xB172B4", VA = "0xB172B4")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x14000007")]
	public event Action OnCleared
	{
		[Token(Token = "0x600025E")]
		[Address(RVA = "0xB17350", Offset = "0xB17350", VA = "0xB17350")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x600025F")]
		[Address(RVA = "0xB173EC", Offset = "0xB173EC", VA = "0xB173EC")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x6000260")]
	[Address(RVA = "0xB17488", Offset = "0xB17488", VA = "0xB17488")]
	private void Update()
	{
	}

	[Token(Token = "0x6000261")]
	[Address(RVA = "0xB175F4", Offset = "0xB175F4", VA = "0xB175F4")]
	public GridCell AddCellAtLocalPos(Cell cell, bool occupied)
	{
		return null;
	}

	[Token(Token = "0x6000262")]
	[Address(RVA = "0xB18104", Offset = "0xB18104", VA = "0xB18104")]
	public Vector3 GetGridOffset()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000263")]
	[Address(RVA = "0xB1824C", Offset = "0xB1824C", VA = "0xB1824C")]
	public GridCell AddCellAtLocalPos(Vector3 pos, bool occupied)
	{
		return null;
	}

	[Token(Token = "0x6000264")]
	[Address(RVA = "0xB18394", Offset = "0xB18394", VA = "0xB18394")]
	public GridCell AddCellAtCoordinate(Vector3Int coord, bool occupied)
	{
		return null;
	}

	[Token(Token = "0x6000265")]
	[Address(RVA = "0xB18440", Offset = "0xB18440", VA = "0xB18440")]
	public GridCell AddCellAtWorldPos(Vector3 pos, bool occupied)
	{
		return null;
	}

	[Token(Token = "0x6000266")]
	[Address(RVA = "0xB184A4", Offset = "0xB184A4", VA = "0xB184A4")]
	public void RemoveCellAtLocalPos(Vector3 pos)
	{
	}

	[Token(Token = "0x6000267")]
	[Address(RVA = "0xB18670", Offset = "0xB18670", VA = "0xB18670")]
	public void RemoveCellAtCoordinate(Vector3Int coord)
	{
	}

	[Token(Token = "0x6000268")]
	[Address(RVA = "0xB1870C", Offset = "0xB1870C", VA = "0xB1870C")]
	public void RemoveCellAtWorldPos(Vector3 pos)
	{
	}

	[Token(Token = "0x6000269")]
	[Address(RVA = "0xB18760", Offset = "0xB18760", VA = "0xB18760")]
	public bool HasCellAtPos(Vector3 localPos)
	{
		return default(bool);
	}

	[Token(Token = "0x600026A")]
	[Address(RVA = "0xB187E4", Offset = "0xB187E4", VA = "0xB187E4")]
	public bool HasCellAtCoord(Vector3Int coord)
	{
		return default(bool);
	}

	[Token(Token = "0x600026B")]
	[Address(RVA = "0xB18880", Offset = "0xB18880", VA = "0xB18880")]
	public bool HasCellAtWorldPos(Vector3 pos)
	{
		return default(bool);
	}

	[Token(Token = "0x600026C")]
	[Address(RVA = "0xB188D4", Offset = "0xB188D4", VA = "0xB188D4")]
	public GridCell GetClosestCell(Vector3 worldPosition)
	{
		return null;
	}

	[Token(Token = "0x600026D")]
	[Address(RVA = "0xB18BB8", Offset = "0xB18BB8", VA = "0xB18BB8")]
	public void LogGridOccupancy(string prefix)
	{
	}

	[Token(Token = "0x600026E")]
	[Address(RVA = "0xB18F68", Offset = "0xB18F68", VA = "0xB18F68")]
	public void Clear()
	{
	}

	[Token(Token = "0x600026F")]
	[Address(RVA = "0xB1415C", Offset = "0xB1415C", VA = "0xB1415C")]
	public int Count()
	{
		return default(int);
	}

	[Token(Token = "0x6000270")]
	[Address(RVA = "0xB0541C", Offset = "0xB0541C", VA = "0xB0541C")]
	public bool GridIsComplete()
	{
		return default(bool);
	}

	[Token(Token = "0x6000271")]
	[Address(RVA = "0xB191FC", Offset = "0xB191FC", VA = "0xB191FC")]
	private void CheckIfGridComplete(bool cellOccupied)
	{
	}

	[Token(Token = "0x6000272")]
	[Address(RVA = "0xB19200", Offset = "0xB19200", VA = "0xB19200")]
	public void CheckIfGridComplete()
	{
	}

	[Token(Token = "0x6000273")]
	[Address(RVA = "0xB05A44", Offset = "0xB05A44", VA = "0xB05A44")]
	public bool PieceMatchesEmptyCells(Vector3Int[] pieceCoords)
	{
		return default(bool);
	}

	[Token(Token = "0x6000274")]
	[Address(RVA = "0xB19408", Offset = "0xB19408", VA = "0xB19408")]
	public bool EmptySpacesAreTouching()
	{
		return default(bool);
	}

	[Token(Token = "0x6000275")]
	[Address(RVA = "0xB199D4", Offset = "0xB199D4", VA = "0xB199D4")]
	public Bounds GetLocalBounds()
	{
		return default(Bounds);
	}

	[Token(Token = "0x6000276")]
	[Address(RVA = "0xB19620", Offset = "0xB19620", VA = "0xB19620")]
	private void GetConnectedEmptyCells(GridCell cell, ref List<GridCell> emptyCells)
	{
	}

	[Token(Token = "0x6000277")]
	[Address(RVA = "0xB17DF4", Offset = "0xB17DF4", VA = "0xB17DF4")]
	private Neighbors<GridCell> GetNeighbourGridCells(Vector3 localPos)
	{
		return null;
	}

	[Token(Token = "0x6000278")]
	[Address(RVA = "0xB19D74", Offset = "0xB19D74", VA = "0xB19D74")]
	private Neighbors<GridCell> PopulateNeighbourAtIndexPos(Neighbors<GridCell> n, Vector3 localPos, int x, int y, int z)
	{
		return null;
	}

	[Token(Token = "0x6000279")]
	[Address(RVA = "0xB17988", Offset = "0xB17988", VA = "0xB17988")]
	private string PositionToKey(Vector3 pos)
	{
		return null;
	}

	[Token(Token = "0x600027A")]
	[Address(RVA = "0xB19E98", Offset = "0xB19E98", VA = "0xB19E98")]
	private Vector3 PAIP(Vector3 localPos, int x, int y, int z)
	{
		return default(Vector3);
	}

	[Token(Token = "0x600027B")]
	[Address(RVA = "0xB17498", Offset = "0xB17498", VA = "0xB17498")]
	private void DrawNeighbours()
	{
	}

	[Token(Token = "0x600027C")]
	[Address(RVA = "0xB19F44", Offset = "0xB19F44", VA = "0xB19F44")]
	public Grid()
	{
	}
}
[Token(Token = "0x20000BC")]
public class GridCell : MonoBehaviour
{
	[Token(Token = "0x400029A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool _occupied;

	[Token(Token = "0x400029B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public Vector3Int coordinates;

	[Token(Token = "0x400029C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float size;

	[Token(Token = "0x400029D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Neighbors<GridCell> n;

	[Token(Token = "0x400029E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private List<GameObject> _dotGeom;

	[Token(Token = "0x400029F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private List<GameObject> _lineGeom;

	[Token(Token = "0x40002A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private List<GameObject> _faceGeom;

	[Token(Token = "0x1700001C")]
	public bool occupied
	{
		[Token(Token = "0x6000285")]
		[Address(RVA = "0xB1A208", Offset = "0xB1A208", VA = "0xB1A208")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000286")]
		[Address(RVA = "0xB1A210", Offset = "0xB1A210", VA = "0xB1A210")]
		set
		{
		}
	}

	[Token(Token = "0x14000008")]
	public event Action<bool> OnOccupancyChanged
	{
		[Token(Token = "0x6000283")]
		[Address(RVA = "0xB1A0A8", Offset = "0xB1A0A8", VA = "0xB1A0A8")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000284")]
		[Address(RVA = "0xB1A158", Offset = "0xB1A158", VA = "0xB1A158")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x6000287")]
	[Address(RVA = "0xB1A244", Offset = "0xB1A244", VA = "0xB1A244")]
	public GridCell()
	{
	}

	[Token(Token = "0x6000288")]
	[Address(RVA = "0xB1A338", Offset = "0xB1A338", VA = "0xB1A338")]
	public void Setup(bool occupied, float size, Neighbors<GridCell> neighbors)
	{
	}

	[Token(Token = "0x6000289")]
	[Address(RVA = "0xB1A5E8", Offset = "0xB1A5E8", VA = "0xB1A5E8")]
	public void RemoveFromNeighbours()
	{
	}

	[Token(Token = "0x600028A")]
	[Address(RVA = "0xB1A758", Offset = "0xB1A758", VA = "0xB1A758")]
	private void RemoveFromNeighbour(int x, int y, int z)
	{
	}

	[Token(Token = "0x600028B")]
	[Address(RVA = "0xB1A4FC", Offset = "0xB1A4FC", VA = "0xB1A4FC")]
	public void PopulateNeighbour(int x, int y, int z)
	{
	}

	[Token(Token = "0x600028C")]
	[Address(RVA = "0xB1A840", Offset = "0xB1A840", VA = "0xB1A840")]
	public void AddDotGeom(GameObject geom)
	{
	}

	[Token(Token = "0x600028D")]
	[Address(RVA = "0xB1A8E8", Offset = "0xB1A8E8", VA = "0xB1A8E8")]
	public void AddLineGeom(GameObject geom)
	{
	}

	[Token(Token = "0x600028E")]
	[Address(RVA = "0xB1A990", Offset = "0xB1A990", VA = "0xB1A990")]
	public void AddFaceGeom(GameObject geom)
	{
	}

	[Token(Token = "0x600028F")]
	[Address(RVA = "0xB1AA38", Offset = "0xB1AA38", VA = "0xB1AA38")]
	public void ClearGeometry()
	{
	}

	[Token(Token = "0x6000290")]
	[Address(RVA = "0xB1AE00", Offset = "0xB1AE00", VA = "0xB1AE00")]
	public void ClearNeighbourGeometry()
	{
	}

	[Token(Token = "0x6000291")]
	[Address(RVA = "0xB1AFA0", Offset = "0xB1AFA0", VA = "0xB1AFA0")]
	public bool CornerDotVisible(bool right, bool top, bool front)
	{
		return default(bool);
	}

	[Token(Token = "0x6000292")]
	[Address(RVA = "0xB1B3A8", Offset = "0xB1B3A8", VA = "0xB1B3A8")]
	public bool EdgeVisible(int x, int y, int z)
	{
		return default(bool);
	}

	[Token(Token = "0x6000293")]
	[Address(RVA = "0xB1B60C", Offset = "0xB1B60C", VA = "0xB1B60C")]
	public Vector3 GetCubeCorner(bool right, bool top, bool front)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000294")]
	[Address(RVA = "0xB1B6A4", Offset = "0xB1B6A4", VA = "0xB1B6A4")]
	public Vector3 GetCubeCornerWorldSpace(bool right, bool top, bool front)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000295")]
	[Address(RVA = "0xB1B700", Offset = "0xB1B700", VA = "0xB1B700")]
	public void DrawDebugNeighbours()
	{
	}

	[Token(Token = "0x6000296")]
	[Address(RVA = "0xB1BD48", Offset = "0xB1BD48", VA = "0xB1BD48")]
	private bool TwoOutOfThree(bool a, bool b, bool c)
	{
		return default(bool);
	}
}
[Token(Token = "0x20000BD")]
public class GridCreation : VoxelCreation
{
	[Token(Token = "0x40002A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Grid _grid;

	[Token(Token = "0x40002A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public PieceCollection _pieceCollection;

	[Token(Token = "0x6000297")]
	[Address(RVA = "0xB1BD68", Offset = "0xB1BD68", VA = "0xB1BD68", Slot = "7")]
	protected override Vector3 GetOffset()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000298")]
	[Address(RVA = "0xB1BD84", Offset = "0xB1BD84", VA = "0xB1BD84", Slot = "6")]
	public override void Update()
	{
	}

	[Token(Token = "0x6000299")]
	[Address(RVA = "0xB1BD8C", Offset = "0xB1BD8C", VA = "0xB1BD8C", Slot = "9")]
	protected override void AddAction()
	{
	}

	[Token(Token = "0x600029A")]
	[Address(RVA = "0xB1C234", Offset = "0xB1C234", VA = "0xB1C234", Slot = "10")]
	protected override void RemoveAction()
	{
	}

	[Token(Token = "0x600029B")]
	[Address(RVA = "0xB1C510", Offset = "0xB1C510", VA = "0xB1C510", Slot = "11")]
	protected override bool OverEmptyCell()
	{
		return default(bool);
	}

	[Token(Token = "0x600029C")]
	[Address(RVA = "0xB1C55C", Offset = "0xB1C55C", VA = "0xB1C55C", Slot = "8")]
	protected override bool IsActive()
	{
		return default(bool);
	}

	[Token(Token = "0x600029D")]
	[Address(RVA = "0xB1C048", Offset = "0xB1C048", VA = "0xB1C048")]
	private bool CanCreateCells()
	{
		return default(bool);
	}

	[Token(Token = "0x600029E")]
	[Address(RVA = "0xB1C5F8", Offset = "0xB1C5F8", VA = "0xB1C5F8")]
	public GridCreation()
	{
	}
}
[Token(Token = "0x20000BE")]
public class GridDrawer : StateBehaviour
{
	[Token(Token = "0x40002A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool drawEdges;

	[Token(Token = "0x40002A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	public bool drawVertices;

	[Token(Token = "0x40002A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A")]
	public bool drawFaces;

	[Token(Token = "0x40002A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Grid _grid;

	[Token(Token = "0x40002A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform _dotParent;

	[Token(Token = "0x40002A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Transform _lineParent;

	[Token(Token = "0x40002A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Transform _faceParent;

	[Token(Token = "0x600029F")]
	[Address(RVA = "0xB1C600", Offset = "0xB1C600", VA = "0xB1C600", Slot = "5")]
	protected override void ForceSetup()
	{
	}

	[Token(Token = "0x60002A0")]
	[Address(RVA = "0xB1C8EC", Offset = "0xB1C8EC", VA = "0xB1C8EC")]
	private void DrawGridCell(GridCell cell)
	{
	}

	[Token(Token = "0x60002A1")]
	[Address(RVA = "0xB1C8F4", Offset = "0xB1C8F4", VA = "0xB1C8F4")]
	private void DrawGridCell(GridCell cell, bool redrawNeighbours)
	{
	}

	[Token(Token = "0x60002A2")]
	[Address(RVA = "0xB1CDCC", Offset = "0xB1CDCC", VA = "0xB1CDCC")]
	private void RemoveGridCell(GridCell cell)
	{
	}

	[Token(Token = "0x60002A3")]
	[Address(RVA = "0xB1CC08", Offset = "0xB1CC08", VA = "0xB1CC08")]
	private void RedrawNeighbourCells(GridCell cell)
	{
	}

	[Token(Token = "0x60002A4")]
	[Address(RVA = "0xB1C968", Offset = "0xB1C968", VA = "0xB1C968")]
	private void DrawVertices(GridCell c)
	{
	}

	[Token(Token = "0x60002A5")]
	[Address(RVA = "0xB1CA38", Offset = "0xB1CA38", VA = "0xB1CA38")]
	private void DrawEdges(GridCell c)
	{
	}

	[Token(Token = "0x60002A6")]
	[Address(RVA = "0xB1CB68", Offset = "0xB1CB68", VA = "0xB1CB68")]
	private void DrawFaces(GridCell c)
	{
	}

	[Token(Token = "0x60002A7")]
	[Address(RVA = "0xB1CF98", Offset = "0xB1CF98", VA = "0xB1CF98")]
	private void CheckAndSpawnVertice(GridCell c, bool right, bool top, bool front)
	{
	}

	[Token(Token = "0x60002A8")]
	[Address(RVA = "0xB1D088", Offset = "0xB1D088", VA = "0xB1D088")]
	private void CheckAndSpawnEdge(GridCell c, int x, int y, int z)
	{
	}

	[Token(Token = "0x60002A9")]
	[Address(RVA = "0xB1D254", Offset = "0xB1D254", VA = "0xB1D254")]
	private void CheckAndSpawnFace(GridCell c, int x, int y, int z)
	{
	}

	[Token(Token = "0x60002AA")]
	[Address(RVA = "0xB1DAB0", Offset = "0xB1DAB0", VA = "0xB1DAB0")]
	private bool GetPointExists(Vector3 position)
	{
		return default(bool);
	}

	[Token(Token = "0x60002AB")]
	[Address(RVA = "0xB1D304", Offset = "0xB1D304", VA = "0xB1D304")]
	private void SpawnDot(GridCell c, Vector3 pos)
	{
	}

	[Token(Token = "0x60002AC")]
	[Address(RVA = "0xB1DCFC", Offset = "0xB1DCFC", VA = "0xB1DCFC")]
	private bool HasChildInPosition(Transform parent, Vector3 pos)
	{
		return default(bool);
	}

	[Token(Token = "0x60002AD")]
	[Address(RVA = "0xB1D520", Offset = "0xB1D520", VA = "0xB1D520")]
	private void SpawnLine(GridCell c, Vector3 pos1, Vector3 pos2)
	{
	}

	[Token(Token = "0x60002AE")]
	[Address(RVA = "0xB1D780", Offset = "0xB1D780", VA = "0xB1D780")]
	private void SpawnFace(GridCell c, int x, int y, int z)
	{
	}

	[Token(Token = "0x60002AF")]
	[Address(RVA = "0xB1DDC8", Offset = "0xB1DDC8", VA = "0xB1DDC8")]
	public void SetGridVisibility(bool visible)
	{
	}

	[Token(Token = "0x60002B0")]
	[Address(RVA = "0xB1DE44", Offset = "0xB1DE44", VA = "0xB1DE44")]
	private void UpdateEdgeWidths()
	{
	}

	[Token(Token = "0x60002B1")]
	[Address(RVA = "0xB1E200", Offset = "0xB1E200", VA = "0xB1E200")]
	private void UpdateDotSizes()
	{
	}

	[Token(Token = "0x60002B2")]
	[Address(RVA = "0xB1E5C0", Offset = "0xB1E5C0", VA = "0xB1E5C0")]
	public GridDrawer()
	{
	}
}
[Token(Token = "0x20000BF")]
public class GridMethods
{
	[Token(Token = "0x60002B3")]
	[Address(RVA = "0xB1E5C8", Offset = "0xB1E5C8", VA = "0xB1E5C8")]
	public static Vector3 SnapToGrid(Vector3 localPosition, float gridSize, Vector3 gridOffset)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60002B4")]
	[Address(RVA = "0xB1E640", Offset = "0xB1E640", VA = "0xB1E640")]
	private static float RoundToGridSize(float x, float s, float offset = 0f)
	{
		return default(float);
	}

	[Token(Token = "0x60002B5")]
	[Address(RVA = "0xB1E734", Offset = "0xB1E734", VA = "0xB1E734")]
	public GridMethods()
	{
	}
}
[Token(Token = "0x20000C0")]
public class HandTrackingDisclaimerService : SetupableBehaviour
{
	[Token(Token = "0x40002AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject _disclaimer;

	[Token(Token = "0x40002AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[Space(25f)]
	public GameObject _disclaimer1;

	[Token(Token = "0x40002AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject _disclaimer2;

	[Token(Token = "0x40002AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject _disclaimer3;

	[Token(Token = "0x40002AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject _disclaimer4;

	[Token(Token = "0x40002AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public VrButton _confirm;

	[Token(Token = "0x40002B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Text _confirmButton;

	[Token(Token = "0x40002B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[Space(25f)]
	public GameObject _passthroughDisclaimer;

	[Token(Token = "0x40002B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private GameState _gameState;

	[Token(Token = "0x40002B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private State _state;

	[Token(Token = "0x40002B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private float _startTime;

	[Token(Token = "0x40002B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private Mode _preDisclaimerMode;

	[Token(Token = "0x40002B6")]
	private const float MinTimeShown = 15f;

	[Token(Token = "0x60002B6")]
	[Address(RVA = "0xB1E73C", Offset = "0xB1E73C", VA = "0xB1E73C")]
	public void Setup(State state)
	{
	}

	[Token(Token = "0x60002B7")]
	[Address(RVA = "0xB1E8B8", Offset = "0xB1E8B8", VA = "0xB1E8B8")]
	public void SetConfirmText(bool start)
	{
	}

	[Token(Token = "0x60002B8")]
	[Address(RVA = "0xB1E970", Offset = "0xB1E970", VA = "0xB1E970")]
	private void Update()
	{
	}

	[Token(Token = "0x60002B9")]
	[Address(RVA = "0xB1EB2C", Offset = "0xB1EB2C", VA = "0xB1EB2C")]
	private void HideDisclaimer(bool markViewed)
	{
	}

	[Token(Token = "0x60002BA")]
	[Address(RVA = "0xB1ECA0", Offset = "0xB1ECA0", VA = "0xB1ECA0")]
	public HandTrackingDisclaimerService()
	{
	}
}
[Token(Token = "0x20000C2")]
public class CalibrationStep : Step
{
	[Token(Token = "0x40002B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Calibration calibration;

	[Token(Token = "0x60002BE")]
	[Address(RVA = "0xB1ED00", Offset = "0xB1ED00", VA = "0xB1ED00", Slot = "6")]
	public override void DoStep()
	{
	}

	[Token(Token = "0x60002BF")]
	[Address(RVA = "0xB1EE44", Offset = "0xB1EE44", VA = "0xB1EE44")]
	public CalibrationStep()
	{
	}
}
[Token(Token = "0x20000C3")]
public class ClearGridStep : Step
{
	[Token(Token = "0x40002BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public PuzzleLoader puzzleLoader;

	[Token(Token = "0x60002C0")]
	[Address(RVA = "0xB1EE54", Offset = "0xB1EE54", VA = "0xB1EE54", Slot = "6")]
	public override void DoStep()
	{
	}

	[Token(Token = "0x60002C1")]
	[Address(RVA = "0xB1EE8C", Offset = "0xB1EE8C", VA = "0xB1EE8C")]
	public ClearGridStep()
	{
	}
}
[Token(Token = "0x20000C4")]
public class CloseTutorialStep : Step
{
	[Token(Token = "0x40002BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject[] tooltipsOff;

	[Token(Token = "0x60002C2")]
	[Address(RVA = "0xB1EE94", Offset = "0xB1EE94", VA = "0xB1EE94", Slot = "6")]
	public override void DoStep()
	{
	}

	[Token(Token = "0x60002C3")]
	[Address(RVA = "0xB1EE98", Offset = "0xB1EE98", VA = "0xB1EE98")]
	private void ToggleTooltips()
	{
	}

	[Token(Token = "0x60002C4")]
	[Address(RVA = "0xB1EF08", Offset = "0xB1EF08", VA = "0xB1EF08")]
	public CloseTutorialStep()
	{
	}
}
[Token(Token = "0x20000C5")]
public class ControllerSetupStep : StateBehaviour
{
	[Token(Token = "0x40002BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool triggerEnabled;

	[Token(Token = "0x40002BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	public bool gatherEnabled;

	[Token(Token = "0x40002BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A")]
	public bool openMenuEnabled;

	[Token(Token = "0x40002BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[Space(25f)]
	public Controller[] controllers;

	[Token(Token = "0x60002C5")]
	[Address(RVA = "0xB1EF10", Offset = "0xB1EF10", VA = "0xB1EF10")]
	public void OnEnable()
	{
	}

	[Token(Token = "0x60002C6")]
	[Address(RVA = "0xB1EF20", Offset = "0xB1EF20", VA = "0xB1EF20")]
	private void ToggleControllerButtons()
	{
	}

	[Token(Token = "0x60002C7")]
	[Address(RVA = "0xB1F100", Offset = "0xB1F100", VA = "0xB1F100")]
	public ControllerSetupStep()
	{
	}
}
[Token(Token = "0x20000C6")]
public class DeleteStep : Step
{
	[Token(Token = "0x40002C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject go;

	[Token(Token = "0x60002C8")]
	[Address(RVA = "0xB1F108", Offset = "0xB1F108", VA = "0xB1F108", Slot = "6")]
	public override void DoStep()
	{
	}

	[Token(Token = "0x60002C9")]
	[Address(RVA = "0xB1F198", Offset = "0xB1F198", VA = "0xB1F198")]
	public DeleteStep()
	{
	}
}
[Token(Token = "0x20000C7")]
public class FadeInAfterDelay : MonoBehaviour
{
	[Token(Token = "0x40002C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float delay;

	[Token(Token = "0x40002C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public CameraFader fader;

	[Token(Token = "0x40002C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float _startTime;

	[Token(Token = "0x40002C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private bool _faded;

	[Token(Token = "0x40002C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D")]
	private bool _gotTime;

	[Token(Token = "0x60002CA")]
	[Address(RVA = "0xB1F1A0", Offset = "0xB1F1A0", VA = "0xB1F1A0")]
	private void Update()
	{
	}

	[Token(Token = "0x60002CB")]
	[Address(RVA = "0xB1F220", Offset = "0xB1F220", VA = "0xB1F220")]
	public FadeInAfterDelay()
	{
	}
}
[Token(Token = "0x20000C8")]
public class FirstPuzzleStep : Step
{
	[Token(Token = "0x40002C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ActiveLevelService _activeLevelService;

	[Token(Token = "0x40002C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool _successplayed;

	[Token(Token = "0x40002C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float _startTime;

	[Token(Token = "0x60002CC")]
	[Address(RVA = "0xB1F234", Offset = "0xB1F234", VA = "0xB1F234", Slot = "6")]
	public override void DoStep()
	{
	}

	[Token(Token = "0x60002CD")]
	[Address(RVA = "0xB1F374", Offset = "0xB1F374", VA = "0xB1F374")]
	private void LevelOpened()
	{
	}

	[Token(Token = "0x60002CE")]
	[Address(RVA = "0xB1F4B4", Offset = "0xB1F4B4", VA = "0xB1F4B4")]
	public FirstPuzzleStep()
	{
	}
}
[Token(Token = "0x20000C9")]
public class FlashTriggerStep : StateBehaviour
{
	[Token(Token = "0x40002C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Controller[] controllers;

	[Token(Token = "0x60002CF")]
	[Address(RVA = "0xB1F4BC", Offset = "0xB1F4BC", VA = "0xB1F4BC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60002D0")]
	[Address(RVA = "0xB1F630", Offset = "0xB1F630", VA = "0xB1F630")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60002D1")]
	[Address(RVA = "0xB1F784", Offset = "0xB1F784", VA = "0xB1F784")]
	private void ToggleFocus(bool focus)
	{
	}

	[Token(Token = "0x60002D2")]
	[Address(RVA = "0xB1F7F4", Offset = "0xB1F7F4", VA = "0xB1F7F4")]
	private void AlertPlayer()
	{
	}

	[Token(Token = "0x60002D3")]
	[Address(RVA = "0xB1F96C", Offset = "0xB1F96C", VA = "0xB1F96C")]
	private bool CanHaptic()
	{
		return default(bool);
	}

	[Token(Token = "0x60002D4")]
	[Address(RVA = "0xB1FA24", Offset = "0xB1FA24", VA = "0xB1FA24")]
	public FlashTriggerStep()
	{
	}
}
[Token(Token = "0x20000CA")]
public class GameObjectDestroyer : MonoBehaviour
{
	[Token(Token = "0x40002CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject go;

	[Token(Token = "0x60002D5")]
	[Address(RVA = "0xB1FA2C", Offset = "0xB1FA2C", VA = "0xB1FA2C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60002D6")]
	[Address(RVA = "0xB1FABC", Offset = "0xB1FABC", VA = "0xB1FABC")]
	public GameObjectDestroyer()
	{
	}
}
[Token(Token = "0x20000CB")]
public class IntroService : MonoBehaviour
{
	[Token(Token = "0x40002CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public StepRunner introSteps;

	[Token(Token = "0x40002CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public StepRunner noIntroSteps;

	[Token(Token = "0x40002CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public StepRunner _mockVrSteps;

	[Token(Token = "0x40002CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private State _state;

	[Token(Token = "0x40002CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private StepRunner _activeRunner;

	[Token(Token = "0x60002D7")]
	[Address(RVA = "0xB1FAC4", Offset = "0xB1FAC4", VA = "0xB1FAC4")]
	public void SetupAndRun(State state)
	{
	}

	[Token(Token = "0x60002D8")]
	[Address(RVA = "0xB1FCC0", Offset = "0xB1FCC0", VA = "0xB1FCC0")]
	public void AbortIntro()
	{
	}

	[Token(Token = "0x60002D9")]
	[Address(RVA = "0xB1FACC", Offset = "0xB1FACC", VA = "0xB1FACC")]
	public void RunIntro()
	{
	}

	[Token(Token = "0x60002DA")]
	[Address(RVA = "0xB1FDDC", Offset = "0xB1FDDC", VA = "0xB1FDDC")]
	private void UpdateIntroCompletion()
	{
	}

	[Token(Token = "0x60002DB")]
	[Address(RVA = "0xB1FEA0", Offset = "0xB1FEA0", VA = "0xB1FEA0")]
	private void StepsCompleted(StepRunnerData data)
	{
	}

	[Token(Token = "0x60002DC")]
	[Address(RVA = "0xB1FEC8", Offset = "0xB1FEC8", VA = "0xB1FEC8")]
	private void TutorialCompleted(StepRunnerData data)
	{
	}

	[Token(Token = "0x60002DD")]
	[Address(RVA = "0xB20118", Offset = "0xB20118", VA = "0xB20118")]
	public IntroService()
	{
	}
}
[Token(Token = "0x20000CC")]
public class MovePlayareaStep : Step
{
	[Token(Token = "0x40002D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public PuzzleMovement _puzzleMovement;

	[Token(Token = "0x40002D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public PieceCollection _pieces;

	[Token(Token = "0x40002D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool _isMoving;

	[Token(Token = "0x40002D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Transform _centerMenu;

	[Token(Token = "0x40002D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Transform _floor;

	[Token(Token = "0x60002DE")]
	[Address(RVA = "0xB20120", Offset = "0xB20120", VA = "0xB20120", Slot = "6")]
	public override void DoStep()
	{
	}

	[Token(Token = "0x60002DF")]
	[Address(RVA = "0xB201C8", Offset = "0xB201C8", VA = "0xB201C8")]
	private void Update()
	{
	}

	[Token(Token = "0x60002E0")]
	[Address(RVA = "0xB20698", Offset = "0xB20698", VA = "0xB20698")]
	public MovePlayareaStep()
	{
	}
}
[Token(Token = "0x20000CD")]
public class OnEnableEvent : MonoBehaviour
{
	[Token(Token = "0x40002D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public UnityEvent onStep;

	[Token(Token = "0x60002E1")]
	[Address(RVA = "0xB206A0", Offset = "0xB206A0", VA = "0xB206A0")]
	public void OnEnable()
	{
	}

	[Token(Token = "0x60002E2")]
	[Address(RVA = "0xB206BC", Offset = "0xB206BC", VA = "0xB206BC")]
	public OnEnableEvent()
	{
	}
}
[Token(Token = "0x20000CE")]
public class OpenMenuStep : MonoBehaviour
{
	[Token(Token = "0x40002D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AnchorPosition position;

	[Token(Token = "0x60002E3")]
	[Address(RVA = "0xB206C4", Offset = "0xB206C4", VA = "0xB206C4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60002E4")]
	[Address(RVA = "0xB20734", Offset = "0xB20734", VA = "0xB20734")]
	public OpenMenuStep()
	{
	}
}
[Token(Token = "0x20000CF")]
public class PickupStep : Step
{
	[Token(Token = "0x40002D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Grid grid;

	[Token(Token = "0x40002D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float _startTime;

	[Token(Token = "0x60002E5")]
	[Address(RVA = "0xB2073C", Offset = "0xB2073C", VA = "0xB2073C", Slot = "6")]
	public override void DoStep()
	{
	}

	[Token(Token = "0x60002E6")]
	[Address(RVA = "0xB207D4", Offset = "0xB207D4", VA = "0xB207D4")]
	private void GridComplete()
	{
	}

	[Token(Token = "0x60002E7")]
	[Address(RVA = "0xB20A64", Offset = "0xB20A64", VA = "0xB20A64")]
	public PickupStep()
	{
	}
}
[Token(Token = "0x20000D0")]
public class PlayAudio : MonoBehaviour
{
	[Token(Token = "0x40002D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioSource introJingle;

	[Token(Token = "0x60002E8")]
	[Address(RVA = "0xB20A6C", Offset = "0xB20A6C", VA = "0xB20A6C")]
	public void OnEnable()
	{
	}

	[Token(Token = "0x60002E9")]
	[Address(RVA = "0xB20A88", Offset = "0xB20A88", VA = "0xB20A88")]
	private void PlayJingle()
	{
	}

	[Token(Token = "0x60002EA")]
	[Address(RVA = "0xB20AA4", Offset = "0xB20AA4", VA = "0xB20AA4")]
	public PlayAudio()
	{
	}
}
[Token(Token = "0x20000D1")]
public class PlaySequence : MonoBehaviour
{
	[Token(Token = "0x20000D2")]
	[CompilerGenerated]
	private sealed class <PlayAll>d__4 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40002DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40002DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40002DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PlaySequence <>4__this;

		[Token(Token = "0x40002DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private NoteLengthPair[] <>7__wrap1;

		[Token(Token = "0x40002E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int <>7__wrap2;

		[Token(Token = "0x1700001D")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60002F2")]
			[Address(RVA = "0xB20D28", Offset = "0xB20D28", VA = "0xB20D28", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700001E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60002F4")]
			[Address(RVA = "0xB20D70", Offset = "0xB20D70", VA = "0xB20D70", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60002EF")]
		[Address(RVA = "0xB20B44", Offset = "0xB20B44", VA = "0xB20B44")]
		[DebuggerHidden]
		public <PlayAll>d__4(int <>1__state)
		{
		}

		[Token(Token = "0x60002F0")]
		[Address(RVA = "0xB20BC4", Offset = "0xB20BC4", VA = "0xB20BC4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60002F1")]
		[Address(RVA = "0xB20BC8", Offset = "0xB20BC8", VA = "0xB20BC8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60002F3")]
		[Address(RVA = "0xB20D30", Offset = "0xB20D30", VA = "0xB20D30", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40002DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Instrument instrument;

	[Token(Token = "0x40002DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public NoteLengthPair[] sequence;

	[Token(Token = "0x60002EB")]
	[Address(RVA = "0xB20AAC", Offset = "0xB20AAC", VA = "0xB20AAC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60002EC")]
	[Address(RVA = "0xB20AB0", Offset = "0xB20AB0", VA = "0xB20AB0")]
	public void Play()
	{
	}

	[Token(Token = "0x60002ED")]
	[Address(RVA = "0xB20ADC", Offset = "0xB20ADC", VA = "0xB20ADC")]
	[IteratorStateMachine(typeof(<PlayAll>d__4))]
	private IEnumerator PlayAll()
	{
		return null;
	}

	[Token(Token = "0x60002EE")]
	[Address(RVA = "0xB20B6C", Offset = "0xB20B6C", VA = "0xB20B6C")]
	public PlaySequence()
	{
	}
}
[Serializable]
[Token(Token = "0x20000D3")]
public struct NoteLengthPair
{
	[Token(Token = "0x40002E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public string Note;

	[Token(Token = "0x40002E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float Length;
}
[Token(Token = "0x20000D4")]
public class PrefabSpawner : StateBehaviour
{
	[Token(Token = "0x40002E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject _prefab;

	[Token(Token = "0x40002E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public string _instanceName;

	[Token(Token = "0x40002E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float _spawnDelay;

	[Token(Token = "0x40002E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public Vector3 _spawnLocalPos;

	[Token(Token = "0x40002E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Vector3 _spawnLocalEuler;

	[Token(Token = "0x40002E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public bool _detroyOnDisable;

	[Token(Token = "0x40002E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Transform _parent;

	[Token(Token = "0x40002EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public BuildType[] _buildTypeVisibility;

	[Token(Token = "0x40002EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private GameObject _instance;

	[Token(Token = "0x60002F5")]
	[Address(RVA = "0xB20D78", Offset = "0xB20D78", VA = "0xB20D78")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60002F6")]
	[Address(RVA = "0xB20E1C", Offset = "0xB20E1C", VA = "0xB20E1C")]
	private void SpawnPrefab()
	{
	}

	[Token(Token = "0x60002F7")]
	[Address(RVA = "0xB20F8C", Offset = "0xB20F8C", VA = "0xB20F8C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60002F8")]
	[Address(RVA = "0xB21030", Offset = "0xB21030", VA = "0xB21030")]
	public PrefabSpawner()
	{
	}
}
[Token(Token = "0x20000D5")]
public class PuzzleOpenedStep : Step
{
	[Token(Token = "0x40002EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ActiveLevelService _activeLevelService;

	[Token(Token = "0x40002ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool _successplayed;

	[Token(Token = "0x60002F9")]
	[Address(RVA = "0xB21038", Offset = "0xB21038", VA = "0xB21038", Slot = "6")]
	public override void DoStep()
	{
	}

	[Token(Token = "0x60002FA")]
	[Address(RVA = "0xB210D0", Offset = "0xB210D0", VA = "0xB210D0")]
	private void LevelOpened()
	{
	}

	[Token(Token = "0x60002FB")]
	[Address(RVA = "0xB21174", Offset = "0xB21174", VA = "0xB21174")]
	public PuzzleOpenedStep()
	{
	}
}
[Token(Token = "0x20000D6")]
public class SetHandTipTextStep : StateBehaviour
{
	[Token(Token = "0x40002EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Text _text;

	[Token(Token = "0x40002EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public SpawnHandTipStep _handTipStep;

	[Token(Token = "0x40002F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool _recalibration;

	[Token(Token = "0x40002F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private string ControllerTip;

	[Token(Token = "0x40002F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private string HandTip;

	[Token(Token = "0x40002F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private string ControllerTipRecal;

	[Token(Token = "0x40002F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private string HandTipRecal;

	[Token(Token = "0x40002F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private string NoLeftController;

	[Token(Token = "0x40002F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private string NoRightController;

	[Token(Token = "0x40002F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private string NoControllers;

	[Token(Token = "0x40002F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private string NoControllersOrhands;

	[Token(Token = "0x60002FC")]
	[Address(RVA = "0xB2117C", Offset = "0xB2117C", VA = "0xB2117C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60002FD")]
	[Address(RVA = "0xB21304", Offset = "0xB21304", VA = "0xB21304")]
	private void Update()
	{
	}

	[Token(Token = "0x60002FE")]
	[Address(RVA = "0xB21538", Offset = "0xB21538", VA = "0xB21538")]
	private bool TryGetTextFromSpawn()
	{
		return default(bool);
	}

	[Token(Token = "0x60002FF")]
	[Address(RVA = "0xB21658", Offset = "0xB21658", VA = "0xB21658")]
	public SetHandTipTextStep()
	{
	}
}
[Token(Token = "0x20000D7")]
public class SetHtDisclaimerTextStep : MonoBehaviour
{
	[Token(Token = "0x40002F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool isStartText;

	[Token(Token = "0x40002FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public HandTrackingDisclaimerService _handTrackingDisclaimerService;

	[Token(Token = "0x6000300")]
	[Address(RVA = "0xB21660", Offset = "0xB21660", VA = "0xB21660")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000301")]
	[Address(RVA = "0xB21680", Offset = "0xB21680", VA = "0xB21680")]
	public SetHtDisclaimerTextStep()
	{
	}
}
[Token(Token = "0x20000D8")]
public class SetMenuPageStep : StateBehaviour
{
	[Token(Token = "0x40002FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public PageGroup pageGroup;

	[Token(Token = "0x40002FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Page pageToSet;

	[Token(Token = "0x6000302")]
	[Address(RVA = "0xB21688", Offset = "0xB21688", VA = "0xB21688")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000303")]
	[Address(RVA = "0xB216AC", Offset = "0xB216AC", VA = "0xB216AC")]
	public SetMenuPageStep()
	{
	}
}
[Token(Token = "0x20000D9")]
public class SetUnsolvedPing : StateBehaviour
{
	[Token(Token = "0x40002FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool pingOn;

	[Token(Token = "0x40002FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public LevelViewVrui _levelViewVrui;

	[Token(Token = "0x6000304")]
	[Address(RVA = "0xB216B4", Offset = "0xB216B4", VA = "0xB216B4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000305")]
	[Address(RVA = "0xB2173C", Offset = "0xB2173C", VA = "0xB2173C")]
	public SetUnsolvedPing()
	{
	}
}
[Token(Token = "0x20000DA")]
public class SetupStep : Step
{
	[Token(Token = "0x40002FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject[] tooltips;

	[Token(Token = "0x6000306")]
	[Address(RVA = "0xB21744", Offset = "0xB21744", VA = "0xB21744", Slot = "6")]
	public override void DoStep()
	{
	}

	[Token(Token = "0x6000307")]
	[Address(RVA = "0xB21764", Offset = "0xB21764", VA = "0xB21764")]
	private void ToggleTooltips()
	{
	}

	[Token(Token = "0x6000308")]
	[Address(RVA = "0xB21790", Offset = "0xB21790", VA = "0xB21790")]
	public SetupStep()
	{
	}
}
[Token(Token = "0x20000DB")]
public class SpawnHandTipStep : StateBehaviour
{
	[Token(Token = "0x4000300")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject _tipPrefab;

	[Token(Token = "0x4000301")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public string controllerText;

	[Token(Token = "0x4000302")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public TipPositionParams positionParams;

	[Token(Token = "0x4000303")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	protected Transform _tipAnchorControllerLeft;

	[Token(Token = "0x4000304")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	protected Transform _tipAnchorControllerRight;

	[Token(Token = "0x4000305")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	protected Transform _tipAnchorHandLeft;

	[Token(Token = "0x4000306")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	protected Transform _tipAnchorHandRight;

	[Token(Token = "0x4000307")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	protected ReadableTip _tip;

	[Token(Token = "0x4000308")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	protected GameObject _tipGo;

	[Token(Token = "0x4000309")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private TooltipBezierPositions _leftSpline;

	[Token(Token = "0x400030A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private TooltipBezierPositions _rightSpline;

	[Token(Token = "0x400030B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private GameObject _leftSqueezeTip;

	[Token(Token = "0x400030C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private GameObject _rightSqueezeTip;

	[Token(Token = "0x6000309")]
	[Address(RVA = "0xB21798", Offset = "0xB21798", VA = "0xB21798", Slot = "6")]
	protected virtual void OnEnable()
	{
	}

	[Token(Token = "0x600030A")]
	[Address(RVA = "0xB219E8", Offset = "0xB219E8", VA = "0xB219E8")]
	private void Update()
	{
	}

	[Token(Token = "0x600030B")]
	[Address(RVA = "0xB215D8", Offset = "0xB215D8", VA = "0xB215D8")]
	public Text GetTipText()
	{
		return null;
	}

	[Token(Token = "0x600030C")]
	[Address(RVA = "0xB21C0C", Offset = "0xB21C0C", VA = "0xB21C0C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600030D")]
	[Address(RVA = "0xB21C9C", Offset = "0xB21C9C", VA = "0xB21C9C", Slot = "7")]
	protected virtual void GetAnchors()
	{
	}

	[Token(Token = "0x600030E")]
	[Address(RVA = "0xB21D68", Offset = "0xB21D68", VA = "0xB21D68", Slot = "8")]
	protected virtual void SpawnSplines()
	{
	}

	[Token(Token = "0x600030F")]
	[Address(RVA = "0xB218B8", Offset = "0xB218B8", VA = "0xB218B8")]
	private Vector3 GetSpawnPosition()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000310")]
	[Address(RVA = "0xB21DF0", Offset = "0xB21DF0", VA = "0xB21DF0")]
	public SpawnHandTipStep()
	{
	}
}
[Token(Token = "0x20000DC")]
public class SpawnMenuTipStep : SpawnHandTipStep
{
	[Token(Token = "0x6000311")]
	[Address(RVA = "0xB21E58", Offset = "0xB21E58", VA = "0xB21E58", Slot = "6")]
	protected override void OnEnable()
	{
	}

	[Token(Token = "0x6000312")]
	[Address(RVA = "0xB21E5C", Offset = "0xB21E5C", VA = "0xB21E5C", Slot = "7")]
	protected override void GetAnchors()
	{
	}

	[Token(Token = "0x6000313")]
	[Address(RVA = "0xB21EE8", Offset = "0xB21EE8", VA = "0xB21EE8", Slot = "8")]
	protected override void SpawnSplines()
	{
	}

	[Token(Token = "0x6000314")]
	[Address(RVA = "0xB21F10", Offset = "0xB21F10", VA = "0xB21F10")]
	public SpawnMenuTipStep()
	{
	}
}
[Token(Token = "0x20000DD")]
public class SpawnPieces : MonoBehaviour
{
	[Token(Token = "0x400030D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public PuzzleLoader puzzleLoader;

	[Token(Token = "0x400030E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string intro_2;

	[Token(Token = "0x400030F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string nameJa;

	[Token(Token = "0x4000310")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public string nameZh;

	[Token(Token = "0x4000311")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public string nameKo;

	[Token(Token = "0x4000312")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool enableBoomerang;

	[Token(Token = "0x4000313")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private StageSetParser _stageSetParser;

	[Token(Token = "0x4000314")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Level _level;

	[Token(Token = "0x6000315")]
	[Address(RVA = "0xB21F14", Offset = "0xB21F14", VA = "0xB21F14")]
	public void Awake()
	{
	}

	[Token(Token = "0x6000316")]
	[Address(RVA = "0xB22034", Offset = "0xB22034", VA = "0xB22034")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000317")]
	[Address(RVA = "0xB220D0", Offset = "0xB220D0", VA = "0xB220D0")]
	public SpawnPieces()
	{
	}
}
[Token(Token = "0x20000DE")]
public class SpawnPuzzle : MonoBehaviour
{
	[Token(Token = "0x4000315")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool clearGrid;

	[Token(Token = "0x4000316")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool recenterAfterSpawn;

	[Token(Token = "0x4000317")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float spawnTime;

	[Token(Token = "0x4000318")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool spawnGrid;

	[Token(Token = "0x4000319")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	public bool spawnPieces;

	[Token(Token = "0x400031A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string puzzleName;

	[Token(Token = "0x400031B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public string puzzleNameJa;

	[Token(Token = "0x400031C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public string puzzleNameZh;

	[Token(Token = "0x400031D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public string puzzleNameKo;

	[Token(Token = "0x400031E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[Space(25f)]
	public PuzzleLoader puzzleLoader;

	[Token(Token = "0x400031F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public PuzzlePosition puzzlePosition;

	[Token(Token = "0x4000320")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Grid grid;

	[Token(Token = "0x4000321")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private StageSetParser _stageSetParser;

	[Token(Token = "0x4000322")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private PuzzleParser_1 _puzzleParser;

	[Token(Token = "0x4000323")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Level _level;

	[Token(Token = "0x6000318")]
	[Address(RVA = "0xB220D8", Offset = "0xB220D8", VA = "0xB220D8")]
	private void ParseAndLoad()
	{
	}

	[Token(Token = "0x6000319")]
	[Address(RVA = "0xB223E8", Offset = "0xB223E8", VA = "0xB223E8")]
	public void OnEnable()
	{
	}

	[Token(Token = "0x600031A")]
	[Address(RVA = "0xB224D4", Offset = "0xB224D4", VA = "0xB224D4")]
	public SpawnPuzzle()
	{
	}
}
[Token(Token = "0x20000DF")]
public class SpawnTipStep : MonoBehaviour
{
	[Token(Token = "0x4000324")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject tipPrefab;

	[Token(Token = "0x4000325")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string text;

	[Token(Token = "0x4000326")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float tipDistance;

	[Token(Token = "0x4000327")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float scale;

	[Token(Token = "0x4000328")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool destoryOnDisable;

	[Token(Token = "0x4000329")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public string superFindAnchor;

	[Token(Token = "0x400032A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public string superFindRefOrientation;

	[Token(Token = "0x400032B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Color borderColor;

	[Token(Token = "0x400032C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Color textColor;

	[Token(Token = "0x400032D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public bool ping;

	[Token(Token = "0x400032E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[Header("Debug")]
	public GameObject _instance;

	[Token(Token = "0x400032F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public GameObject _parent;

	[Token(Token = "0x4000330")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public GameObject _refOrientation;

	[Token(Token = "0x4000331")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public ControllerTip _tip;

	[Token(Token = "0x600031B")]
	[Address(RVA = "0xB224DC", Offset = "0xB224DC", VA = "0xB224DC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600031C")]
	[Address(RVA = "0xB2272C", Offset = "0xB2272C", VA = "0xB2272C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600031D")]
	[Address(RVA = "0xB227D0", Offset = "0xB227D0", VA = "0xB227D0")]
	private void Ping()
	{
	}

	[Token(Token = "0x600031E")]
	[Address(RVA = "0xB227EC", Offset = "0xB227EC", VA = "0xB227EC")]
	public SpawnTipStep()
	{
	}
}
[Token(Token = "0x20000E0")]
public abstract class Step : StateBehaviour
{
	[Token(Token = "0x4000332")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool ignoreStep;

	[Token(Token = "0x4000333")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	private bool _finished;

	[Token(Token = "0x600031F")]
	[Address(RVA = "0xB22818", Offset = "0xB22818", VA = "0xB22818")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000320")]
	public abstract void DoStep();

	[Token(Token = "0x6000321")]
	[Address(RVA = "0xB2283C", Offset = "0xB2283C", VA = "0xB2283C")]
	public bool IsFinished()
	{
		return default(bool);
	}

	[Token(Token = "0x6000322")]
	[Address(RVA = "0xB1EE80", Offset = "0xB1EE80", VA = "0xB1EE80")]
	protected void Finish()
	{
	}

	[Token(Token = "0x6000323")]
	[Address(RVA = "0xB1EE4C", Offset = "0xB1EE4C", VA = "0xB1EE4C")]
	protected Step()
	{
	}
}
[Token(Token = "0x20000E1")]
public class StepRunner : MonoBehaviour
{
	[Token(Token = "0x20000E2")]
	[CompilerGenerated]
	private sealed class <GoThroughSteps>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000337")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000338")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000339")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public StepRunner <>4__this;

		[Token(Token = "0x400033A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Action<StepRunnerData> OnComplete;

		[Token(Token = "0x400033B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Step[] <>7__wrap1;

		[Token(Token = "0x400033C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private int <>7__wrap2;

		[Token(Token = "0x400033D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Step <step>5__4;

		[Token(Token = "0x1700001F")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600032D")]
			[Address(RVA = "0xB22AEC", Offset = "0xB22AEC", VA = "0xB22AEC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000020")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600032F")]
			[Address(RVA = "0xB22B34", Offset = "0xB22B34", VA = "0xB22B34", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600032A")]
		[Address(RVA = "0xB228C0", Offset = "0xB228C0", VA = "0xB228C0")]
		[DebuggerHidden]
		public <GoThroughSteps>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x600032B")]
		[Address(RVA = "0xB22910", Offset = "0xB22910", VA = "0xB22910", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600032C")]
		[Address(RVA = "0xB22914", Offset = "0xB22914", VA = "0xB22914", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600032E")]
		[Address(RVA = "0xB22AF4", Offset = "0xB22AF4", VA = "0xB22AF4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000334")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Step[] _steps;

	[Token(Token = "0x4000335")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float _timeStarted;

	[Token(Token = "0x4000336")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private bool _running;

	[Token(Token = "0x6000324")]
	[Address(RVA = "0xB1FE1C", Offset = "0xB1FE1C", VA = "0xB1FE1C")]
	public void DoSteps([Optional] Action<StepRunnerData> OnComplete)
	{
	}

	[Token(Token = "0x6000325")]
	[Address(RVA = "0xB228B8", Offset = "0xB228B8", VA = "0xB228B8")]
	public bool IsRunning()
	{
		return default(bool);
	}

	[Token(Token = "0x6000326")]
	[Address(RVA = "0xB1FD5C", Offset = "0xB1FD5C", VA = "0xB1FD5C")]
	public void AbortAndReset()
	{
	}

	[Token(Token = "0x6000327")]
	[Address(RVA = "0xB22844", Offset = "0xB22844", VA = "0xB22844")]
	[IteratorStateMachine(typeof(<GoThroughSteps>d__6))]
	private IEnumerator GoThroughSteps(Action<StepRunnerData> OnComplete)
	{
		return null;
	}

	[Token(Token = "0x6000328")]
	[Address(RVA = "0xB228E8", Offset = "0xB228E8", VA = "0xB228E8")]
	private StepRunnerData GetStepRunnerData()
	{
		return default(StepRunnerData);
	}

	[Token(Token = "0x6000329")]
	[Address(RVA = "0xB22908", Offset = "0xB22908", VA = "0xB22908")]
	public StepRunner()
	{
	}
}
[Token(Token = "0x20000E3")]
public struct StepRunnerData
{
	[Token(Token = "0x400033E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float completionTime;
}
[Token(Token = "0x20000E4")]
public class TimedPickupTutorial : StateBehaviour
{
	[Token(Token = "0x20000E5")]
	[CompilerGenerated]
	private sealed class <PickupTip>d__5 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000342")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000343")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000344")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TimedPickupTutorial <>4__this;

		[Token(Token = "0x17000021")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000339")]
			[Address(RVA = "0xB22EA4", Offset = "0xB22EA4", VA = "0xB22EA4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000022")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600033B")]
			[Address(RVA = "0xB22EEC", Offset = "0xB22EEC", VA = "0xB22EEC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000336")]
		[Address(RVA = "0xB22CD0", Offset = "0xB22CD0", VA = "0xB22CD0")]
		[DebuggerHidden]
		public <PickupTip>d__5(int <>1__state)
		{
		}

		[Token(Token = "0x6000337")]
		[Address(RVA = "0xB22DF0", Offset = "0xB22DF0", VA = "0xB22DF0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000338")]
		[Address(RVA = "0xB22DF4", Offset = "0xB22DF4", VA = "0xB22DF4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600033A")]
		[Address(RVA = "0xB22EAC", Offset = "0xB22EAC", VA = "0xB22EAC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400033F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float _delay;

	[Token(Token = "0x4000340")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject _tutorialPrefab;

	[Token(Token = "0x4000341")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private GameObject _tutorialInstance;

	[Token(Token = "0x6000330")]
	[Address(RVA = "0xB22B3C", Offset = "0xB22B3C", VA = "0xB22B3C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000331")]
	[Address(RVA = "0xB22C30", Offset = "0xB22C30", VA = "0xB22C30")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000332")]
	[Address(RVA = "0xB22BC8", Offset = "0xB22BC8", VA = "0xB22BC8")]
	[IteratorStateMachine(typeof(<PickupTip>d__5))]
	private IEnumerator PickupTip()
	{
		return null;
	}

	[Token(Token = "0x6000333")]
	[Address(RVA = "0xB22C34", Offset = "0xB22C34", VA = "0xB22C34")]
	private void CancelTip()
	{
	}

	[Token(Token = "0x6000334")]
	[Address(RVA = "0xB22CF8", Offset = "0xB22CF8", VA = "0xB22CF8")]
	private void SpawnHelp()
	{
	}

	[Token(Token = "0x6000335")]
	[Address(RVA = "0xB22DE0", Offset = "0xB22DE0", VA = "0xB22DE0")]
	public TimedPickupTutorial()
	{
	}
}
[Token(Token = "0x20000E6")]
public class ToggleBoomerang : MonoBehaviour
{
	[Token(Token = "0x4000345")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public PiecePositionService _piecePosService;

	[Token(Token = "0x4000346")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool enablePieceBoomerang;

	[Token(Token = "0x600033C")]
	[Address(RVA = "0xB22EF4", Offset = "0xB22EF4", VA = "0xB22EF4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600033D")]
	[Address(RVA = "0xB22F18", Offset = "0xB22F18", VA = "0xB22F18")]
	public ToggleBoomerang()
	{
	}
}
[Token(Token = "0x20000E7")]
public class ToggleComponent : MonoBehaviour
{
	[Token(Token = "0x4000347")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public MonoBehaviour component;

	[Token(Token = "0x4000348")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public new bool enabled;

	[Token(Token = "0x600033E")]
	[Address(RVA = "0xB22F20", Offset = "0xB22F20", VA = "0xB22F20")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600033F")]
	[Address(RVA = "0xB22F44", Offset = "0xB22F44", VA = "0xB22F44")]
	public ToggleComponent()
	{
	}
}
[Token(Token = "0x20000E8")]
public class ToggleControllerModels : StateBehaviour
{
	[Token(Token = "0x4000349")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Controller[] controllers;

	[Token(Token = "0x400034A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool visible;

	[Token(Token = "0x6000340")]
	[Address(RVA = "0xB22F4C", Offset = "0xB22F4C", VA = "0xB22F4C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000341")]
	[Address(RVA = "0xB22F54", Offset = "0xB22F54", VA = "0xB22F54")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000342")]
	[Address(RVA = "0xB23018", Offset = "0xB23018", VA = "0xB23018")]
	private void Update()
	{
	}

	[Token(Token = "0x6000343")]
	[Address(RVA = "0xB230F4", Offset = "0xB230F4", VA = "0xB230F4")]
	private void ShowModels()
	{
	}

	[Token(Token = "0x6000344")]
	[Address(RVA = "0xB22F58", Offset = "0xB22F58", VA = "0xB22F58")]
	private void HideModels()
	{
	}

	[Token(Token = "0x6000345")]
	[Address(RVA = "0xB23154", Offset = "0xB23154", VA = "0xB23154")]
	public ToggleControllerModels()
	{
	}
}
[Token(Token = "0x20000E9")]
public class ToggleGridCompletion : MonoBehaviour
{
	[Token(Token = "0x6000346")]
	[Address(RVA = "0xB2315C", Offset = "0xB2315C", VA = "0xB2315C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000347")]
	[Address(RVA = "0xB23160", Offset = "0xB23160", VA = "0xB23160")]
	private void Update()
	{
	}

	[Token(Token = "0x6000348")]
	[Address(RVA = "0xB23164", Offset = "0xB23164", VA = "0xB23164")]
	public ToggleGridCompletion()
	{
	}
}
[Token(Token = "0x20000EA")]
public class TutorialLauncher : MonoBehaviour
{
	[Token(Token = "0x400034B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public StepRunner _gatherTutorial;

	[Token(Token = "0x400034C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public StepRunner _moveTutorial;

	[Token(Token = "0x400034D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private PuzzleLoader _puzzleLoader;

	[Token(Token = "0x400034E")]
	private const string gatherTutorialKey = "GatherTutorialComplete";

	[Token(Token = "0x400034F")]
	private const string moveTutorialKey = "MoveTutorialComplete";

	[Token(Token = "0x6000349")]
	[Address(RVA = "0xB2316C", Offset = "0xB2316C", VA = "0xB2316C")]
	public void Setup(PuzzleLoader loader)
	{
	}

	[Token(Token = "0x600034A")]
	[Address(RVA = "0xB23170", Offset = "0xB23170", VA = "0xB23170")]
	public bool AllComplete()
	{
		return default(bool);
	}

	[Token(Token = "0x600034B")]
	[Address(RVA = "0xB23254", Offset = "0xB23254", VA = "0xB23254")]
	public void ClearProgress()
	{
	}

	[Token(Token = "0x600034C")]
	[Address(RVA = "0xB232B8", Offset = "0xB232B8", VA = "0xB232B8")]
	private void CheckTutorialLaunch(string puzzle)
	{
	}

	[Token(Token = "0x600034D")]
	[Address(RVA = "0xB232BC", Offset = "0xB232BC", VA = "0xB232BC")]
	private void SetGatherComplete(StepRunnerData data)
	{
	}

	[Token(Token = "0x600034E")]
	[Address(RVA = "0xB23304", Offset = "0xB23304", VA = "0xB23304")]
	private void SetMoveComplete(StepRunnerData data)
	{
	}

	[Token(Token = "0x600034F")]
	[Address(RVA = "0xB23218", Offset = "0xB23218", VA = "0xB23218")]
	private bool TutorialComplete(string key)
	{
		return default(bool);
	}

	[Token(Token = "0x6000350")]
	[Address(RVA = "0xB2334C", Offset = "0xB2334C", VA = "0xB2334C")]
	public TutorialLauncher()
	{
	}
}
[Token(Token = "0x20000EB")]
public class WaitStep : Step
{
	[Token(Token = "0x4000350")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float waitTime;

	[Token(Token = "0x6000351")]
	[Address(RVA = "0xB23354", Offset = "0xB23354", VA = "0xB23354", Slot = "6")]
	public override void DoStep()
	{
	}

	[Token(Token = "0x6000352")]
	[Address(RVA = "0xB233A4", Offset = "0xB233A4", VA = "0xB233A4")]
	public WaitStep()
	{
	}
}
[Token(Token = "0x20000EC")]
public class MeshCanvasGroup : MonoBehaviour
{
	[Token(Token = "0x4000352")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[Range(0f, 1f)]
	public float Alpha;

	[Token(Token = "0x4000353")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Material[] uiMeshMaterial;

	[Token(Token = "0x4000354")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public CanvasGroup[] canvasGroups;

	[Token(Token = "0x4000355")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool affectRenderMaterialsDirectly;

	[Token(Token = "0x4000356")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float _alpha;

	[Token(Token = "0x17000023")]
	public float alpha
	{
		[Token(Token = "0x6000355")]
		[Address(RVA = "0xB2350C", Offset = "0xB2350C", VA = "0xB2350C")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000356")]
		[Address(RVA = "0xB23514", Offset = "0xB23514", VA = "0xB23514")]
		set
		{
		}
	}

	[Token(Token = "0x14000009")]
	public event Action<float> onAlphaChange
	{
		[Token(Token = "0x6000353")]
		[Address(RVA = "0xB233AC", Offset = "0xB233AC", VA = "0xB233AC")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000354")]
		[Address(RVA = "0xB2345C", Offset = "0xB2345C", VA = "0xB2345C")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x6000357")]
	[Address(RVA = "0xB23548", Offset = "0xB23548", VA = "0xB23548")]
	private void Start()
	{
	}

	[Token(Token = "0x6000358")]
	[Address(RVA = "0xB235C8", Offset = "0xB235C8", VA = "0xB235C8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000359")]
	[Address(RVA = "0xB23600", Offset = "0xB23600", VA = "0xB23600")]
	private void ReDraw(float alpha)
	{
	}

	[Token(Token = "0x600035A")]
	[Address(RVA = "0xB237F8", Offset = "0xB237F8", VA = "0xB237F8")]
	public MeshCanvasGroup()
	{
	}
}
[Serializable]
[Token(Token = "0x20000ED")]
public class ActiveLevel
{
	[Token(Token = "0x400035C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GridStyle gridStyle;

	[Token(Token = "0x400035D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private StageSet _stageSet;

	[Token(Token = "0x400035E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private Level _level;

	[Token(Token = "0x400035F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private Stage _stage;

	[Token(Token = "0x4000360")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public LoadOptions LoadOptions;

	[Token(Token = "0x4000361")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public int LoadedSegments;

	[Token(Token = "0x17000024")]
	public StageSet stageSet
	{
		[Token(Token = "0x6000365")]
		[Address(RVA = "0xB23CE0", Offset = "0xB23CE0", VA = "0xB23CE0")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000366")]
		[Address(RVA = "0xB23CE8", Offset = "0xB23CE8", VA = "0xB23CE8")]
		set
		{
		}
	}

	[Token(Token = "0x17000025")]
	public Level level
	{
		[Token(Token = "0x6000367")]
		[Address(RVA = "0xB23DC4", Offset = "0xB23DC4", VA = "0xB23DC4")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000368")]
		[Address(RVA = "0xB23DCC", Offset = "0xB23DCC", VA = "0xB23DCC")]
		set
		{
		}
	}

	[Token(Token = "0x17000026")]
	public Stage stage
	{
		[Token(Token = "0x6000369")]
		[Address(RVA = "0xB240E4", Offset = "0xB240E4", VA = "0xB240E4")]
		get
		{
			return null;
		}
		[Token(Token = "0x600036A")]
		[Address(RVA = "0xB240EC", Offset = "0xB240EC", VA = "0xB240EC")]
		set
		{
		}
	}

	[Token(Token = "0x1400000A")]
	public event Action onActiveStageSetChanged
	{
		[Token(Token = "0x600035B")]
		[Address(RVA = "0xB23800", Offset = "0xB23800", VA = "0xB23800")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x600035C")]
		[Address(RVA = "0xB2389C", Offset = "0xB2389C", VA = "0xB2389C")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x1400000B")]
	public event Action onActiveLevelChanged
	{
		[Token(Token = "0x600035D")]
		[Address(RVA = "0xB23938", Offset = "0xB23938", VA = "0xB23938")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x600035E")]
		[Address(RVA = "0xB239D4", Offset = "0xB239D4", VA = "0xB239D4")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x1400000C")]
	public event Action onActiveStageChanged
	{
		[Token(Token = "0x600035F")]
		[Address(RVA = "0xB23A70", Offset = "0xB23A70", VA = "0xB23A70")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000360")]
		[Address(RVA = "0xB23B0C", Offset = "0xB23B0C", VA = "0xB23B0C")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x1400000D")]
	public event Action onLevelOpened
	{
		[Token(Token = "0x6000361")]
		[Address(RVA = "0xB1F2D8", Offset = "0xB1F2D8", VA = "0xB1F2D8")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000362")]
		[Address(RVA = "0xB1F418", Offset = "0xB1F418", VA = "0xB1F418")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x1400000E")]
	public event Action onActiveLevelCompleted
	{
		[Token(Token = "0x6000363")]
		[Address(RVA = "0xB23BA8", Offset = "0xB23BA8", VA = "0xB23BA8")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000364")]
		[Address(RVA = "0xB23C44", Offset = "0xB23C44", VA = "0xB23C44")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x600036B")]
	[Address(RVA = "0xB24118", Offset = "0xB24118", VA = "0xB24118")]
	public void FireLevelOpened()
	{
	}

	[Token(Token = "0x600036C")]
	[Address(RVA = "0xB24134", Offset = "0xB24134", VA = "0xB24134")]
	public void FireActiveLevelCompleted()
	{
	}

	[Token(Token = "0x600036D")]
	[Address(RVA = "0xB24150", Offset = "0xB24150", VA = "0xB24150")]
	public ActiveLevel()
	{
	}
}
[Serializable]
[Token(Token = "0x20000EE")]
public class GridStyle
{
	[Token(Token = "0x4000367")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private float _edgeWidth;

	[Token(Token = "0x4000368")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[SerializeField]
	private float _dotSize;

	[Token(Token = "0x4000369")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private float _faceOffset;

	[Token(Token = "0x400036A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[SerializeField]
	private bool _showGridOnSolved;

	[Token(Token = "0x400036B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private float _angle;

	[Token(Token = "0x17000027")]
	public float edgeWidth
	{
		[Token(Token = "0x6000378")]
		[Address(RVA = "0xB2470C", Offset = "0xB2470C", VA = "0xB2470C")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000379")]
		[Address(RVA = "0xB24034", Offset = "0xB24034", VA = "0xB24034")]
		set
		{
		}
	}

	[Token(Token = "0x17000028")]
	public float dotSize
	{
		[Token(Token = "0x600037A")]
		[Address(RVA = "0xB24714", Offset = "0xB24714", VA = "0xB24714")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x600037B")]
		[Address(RVA = "0xB24060", Offset = "0xB24060", VA = "0xB24060")]
		set
		{
		}
	}

	[Token(Token = "0x17000029")]
	public float faceOffset
	{
		[Token(Token = "0x600037C")]
		[Address(RVA = "0xB2471C", Offset = "0xB2471C", VA = "0xB2471C")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x600037D")]
		[Address(RVA = "0xB2408C", Offset = "0xB2408C", VA = "0xB2408C")]
		set
		{
		}
	}

	[Token(Token = "0x1700002A")]
	public bool showGridOnSolved
	{
		[Token(Token = "0x600037E")]
		[Address(RVA = "0xB24724", Offset = "0xB24724", VA = "0xB24724")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600037F")]
		[Address(RVA = "0xB24004", Offset = "0xB24004", VA = "0xB24004")]
		set
		{
		}
	}

	[Token(Token = "0x1700002B")]
	public float angle
	{
		[Token(Token = "0x6000380")]
		[Address(RVA = "0xB2472C", Offset = "0xB2472C", VA = "0xB2472C")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000381")]
		[Address(RVA = "0xB240B8", Offset = "0xB240B8", VA = "0xB240B8")]
		set
		{
		}
	}

	[Token(Token = "0x1400000F")]
	public event Action OnEdgeWidthChanged
	{
		[Token(Token = "0x600036E")]
		[Address(RVA = "0xB1C7B4", Offset = "0xB1C7B4", VA = "0xB1C7B4")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x600036F")]
		[Address(RVA = "0xB2422C", Offset = "0xB2422C", VA = "0xB2422C")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x14000010")]
	public event Action OnDotSizeChanged
	{
		[Token(Token = "0x6000370")]
		[Address(RVA = "0xB1C850", Offset = "0xB1C850", VA = "0xB1C850")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000371")]
		[Address(RVA = "0xB242C8", Offset = "0xB242C8", VA = "0xB242C8")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x14000011")]
	public event Action OnFaceOffsetChanged
	{
		[Token(Token = "0x6000372")]
		[Address(RVA = "0xB24364", Offset = "0xB24364", VA = "0xB24364")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000373")]
		[Address(RVA = "0xB24400", Offset = "0xB24400", VA = "0xB24400")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x14000012")]
	public event Action OnShowGridOnSolvedChanged
	{
		[Token(Token = "0x6000374")]
		[Address(RVA = "0xB2449C", Offset = "0xB2449C", VA = "0xB2449C")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000375")]
		[Address(RVA = "0xB24538", Offset = "0xB24538", VA = "0xB24538")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x14000013")]
	public event Action OnAngleChanged
	{
		[Token(Token = "0x6000376")]
		[Address(RVA = "0xB245D4", Offset = "0xB245D4", VA = "0xB245D4")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000377")]
		[Address(RVA = "0xB24670", Offset = "0xB24670", VA = "0xB24670")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x6000382")]
	[Address(RVA = "0xB241B4", Offset = "0xB241B4", VA = "0xB241B4")]
	public GridStyle()
	{
	}
}
[Token(Token = "0x20000EF")]
public class ActiveLevelService
{
	[Token(Token = "0x20000F0")]
	[CompilerGenerated]
	private sealed class <_LoadLevel>d__10 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000370")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000371")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000372")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ActiveLevelService <>4__this;

		[Token(Token = "0x4000373")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Level level;

		[Token(Token = "0x4000374")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public LoadOptions options;

		[Token(Token = "0x1700002C")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600039A")]
			[Address(RVA = "0xB27264", Offset = "0xB27264", VA = "0xB27264", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700002D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600039C")]
			[Address(RVA = "0xB272AC", Offset = "0xB272AC", VA = "0xB272AC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000397")]
		[Address(RVA = "0xB24D94", Offset = "0xB24D94", VA = "0xB24D94")]
		[DebuggerHidden]
		public <_LoadLevel>d__10(int <>1__state)
		{
		}

		[Token(Token = "0x6000398")]
		[Address(RVA = "0xB270E8", Offset = "0xB270E8", VA = "0xB270E8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000399")]
		[Address(RVA = "0xB270EC", Offset = "0xB270EC", VA = "0xB270EC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600039B")]
		[Address(RVA = "0xB2726C", Offset = "0xB2726C", VA = "0xB2726C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400036C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private PuzzleLoader _loader;

	[Token(Token = "0x400036D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Grid _grid;

	[Token(Token = "0x400036E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float _timePuzzleOpened;

	[Token(Token = "0x400036F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private State _state;

	[Token(Token = "0x6000383")]
	[Address(RVA = "0xB24734", Offset = "0xB24734", VA = "0xB24734")]
	public ActiveLevelService(PuzzleLoader loader, Grid grid, State state)
	{
	}

	[Token(Token = "0x6000384")]
	[Address(RVA = "0xB24774", Offset = "0xB24774", VA = "0xB24774")]
	public void SubscribeToEvents()
	{
	}

	[Token(Token = "0x6000385")]
	[Address(RVA = "0xB2485C", Offset = "0xB2485C", VA = "0xB2485C")]
	private void RegisterActions(ControllerAction action)
	{
	}

	[Token(Token = "0x6000386")]
	[Address(RVA = "0xB24B18", Offset = "0xB24B18", VA = "0xB24B18")]
	private void LoadLevel(Level level)
	{
	}

	[Token(Token = "0x6000387")]
	[Address(RVA = "0xB24C18", Offset = "0xB24C18", VA = "0xB24C18")]
	private void LoadLevel(Level level, LoadOptions options)
	{
	}

	[Token(Token = "0x6000388")]
	[Address(RVA = "0xB24C88", Offset = "0xB24C88", VA = "0xB24C88")]
	private void SetActiveStageSet(Level level)
	{
	}

	[Token(Token = "0x6000389")]
	[Address(RVA = "0xB24D18", Offset = "0xB24D18", VA = "0xB24D18")]
	[IteratorStateMachine(typeof(<_LoadLevel>d__10))]
	private IEnumerator _LoadLevel(Level level, LoadOptions options)
	{
		return null;
	}

	[Token(Token = "0x600038A")]
	[Address(RVA = "0xB24DBC", Offset = "0xB24DBC", VA = "0xB24DBC")]
	private void OnGridCompletion()
	{
	}

	[Token(Token = "0x600038B")]
	[Address(RVA = "0xB24F60", Offset = "0xB24F60", VA = "0xB24F60")]
	private bool ShouldUpdateLevelProgress()
	{
		return default(bool);
	}

	[Token(Token = "0x600038C")]
	[Address(RVA = "0xB25034", Offset = "0xB25034", VA = "0xB25034")]
	private void CheckStageUnlocked()
	{
	}

	[Token(Token = "0x600038D")]
	[Address(RVA = "0xB253C4", Offset = "0xB253C4", VA = "0xB253C4")]
	private void CheckStageCompleted()
	{
	}

	[Token(Token = "0x600038E")]
	[Address(RVA = "0xB25448", Offset = "0xB25448", VA = "0xB25448")]
	private void CheckStageSetCompleted()
	{
	}

	[Token(Token = "0x600038F")]
	[Address(RVA = "0xB26570", Offset = "0xB26570", VA = "0xB26570")]
	private void UnlockAllStageLevels(Stage stage)
	{
	}

	[Token(Token = "0x6000390")]
	[Address(RVA = "0xB24FB0", Offset = "0xB24FB0", VA = "0xB24FB0")]
	private void UpdateLevelTimeSpent()
	{
	}

	[Token(Token = "0x6000391")]
	[Address(RVA = "0xB26878", Offset = "0xB26878", VA = "0xB26878")]
	private void CheckIfCloseUnfinishedMainLevel()
	{
	}

	[Token(Token = "0x6000392")]
	[Address(RVA = "0xB254A4", Offset = "0xB254A4", VA = "0xB254A4")]
	private void TrackCompletedMainPuzzle()
	{
	}

	[Token(Token = "0x6000393")]
	[Address(RVA = "0xB25FD0", Offset = "0xB25FD0", VA = "0xB25FD0")]
	private void TrackCompletedPlaytestPuzzle()
	{
	}

	[Token(Token = "0x6000394")]
	[Address(RVA = "0xB25AC4", Offset = "0xB25AC4", VA = "0xB25AC4")]
	private void TrackCompletedCustomPuzzle()
	{
	}

	[Token(Token = "0x6000395")]
	[Address(RVA = "0xB26944", Offset = "0xB26944", VA = "0xB26944")]
	private void TrackUnsolvedMainPuzzle()
	{
	}

	[Token(Token = "0x6000396")]
	[Address(RVA = "0xB26D04", Offset = "0xB26D04", VA = "0xB26D04")]
	private void TrackUnsolvedPlaytestPuzzle()
	{
	}
}
[Serializable]
[Token(Token = "0x20000F1")]
public class BoolValue : ObservableValue<bool>
{
	[Token(Token = "0x4000375")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private bool _value;

	[Token(Token = "0x600039D")]
	[Address(RVA = "0xB272B4", Offset = "0xB272B4", VA = "0xB272B4", Slot = "4")]
	public override bool Get()
	{
		return default(bool);
	}

	[Token(Token = "0x600039E")]
	[Address(RVA = "0xB272BC", Offset = "0xB272BC", VA = "0xB272BC", Slot = "5")]
	public override void Set(bool value)
	{
	}

	[Token(Token = "0x600039F")]
	[Address(RVA = "0xB27324", Offset = "0xB27324", VA = "0xB27324")]
	public BoolValue()
	{
	}
}
[Serializable]
[Token(Token = "0x20000F2")]
public class CalibrationModel
{
	[Token(Token = "0x4000379")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Vector3 _puzzlePosition;

	[Token(Token = "0x400037A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[SerializeField]
	private Vector3 _puzzleForward;

	[Token(Token = "0x400037B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private bool _calibrated;

	[Token(Token = "0x1700002E")]
	public Vector3 puzzlePos
	{
		[Token(Token = "0x60003A6")]
		[Address(RVA = "0xB276C8", Offset = "0xB276C8", VA = "0xB276C8")]
		get
		{
			return default(Vector3);
		}
		[Token(Token = "0x60003A7")]
		[Address(RVA = "0xB276D4", Offset = "0xB276D4", VA = "0xB276D4")]
		private set
		{
		}
	}

	[Token(Token = "0x1700002F")]
	public Vector3 puzzleForward
	{
		[Token(Token = "0x60003A8")]
		[Address(RVA = "0xB27730", Offset = "0xB27730", VA = "0xB27730")]
		get
		{
			return default(Vector3);
		}
		[Token(Token = "0x60003A9")]
		[Address(RVA = "0xB2773C", Offset = "0xB2773C", VA = "0xB2773C")]
		private set
		{
		}
	}

	[Token(Token = "0x14000014")]
	public event Action OnCalibrated
	{
		[Token(Token = "0x60003A0")]
		[Address(RVA = "0xB1EDA8", Offset = "0xB1EDA8", VA = "0xB1EDA8")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x60003A1")]
		[Address(RVA = "0xB2736C", Offset = "0xB2736C", VA = "0xB2736C")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x14000015")]
	public event Action<Vector3> puzzlePositionChanged
	{
		[Token(Token = "0x60003A2")]
		[Address(RVA = "0xB27408", Offset = "0xB27408", VA = "0xB27408")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x60003A3")]
		[Address(RVA = "0xB274B8", Offset = "0xB274B8", VA = "0xB274B8")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x14000016")]
	public event Action<Vector3> puzzleForwardChanged
	{
		[Token(Token = "0x60003A4")]
		[Address(RVA = "0xB27568", Offset = "0xB27568", VA = "0xB27568")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x60003A5")]
		[Address(RVA = "0xB27618", Offset = "0xB27618", VA = "0xB27618")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x60003AA")]
	[Address(RVA = "0xB20630", Offset = "0xB20630", VA = "0xB20630")]
	public void SetNewCalibrationValues(Vector3 pos, Vector3 forward)
	{
	}

	[Token(Token = "0x60003AB")]
	[Address(RVA = "0xB27798", Offset = "0xB27798", VA = "0xB27798")]
	public void SetCalibrated(bool isCalibrated)
	{
	}

	[Token(Token = "0x60003AC")]
	[Address(RVA = "0xB277A4", Offset = "0xB277A4", VA = "0xB277A4")]
	public bool HasCalibrated()
	{
		return default(bool);
	}

	[Token(Token = "0x60003AD")]
	[Address(RVA = "0xB277AC", Offset = "0xB277AC", VA = "0xB277AC")]
	public CalibrationModel()
	{
	}
}
[Token(Token = "0x20000F3")]
public class ColorThemeTypeValue : IntValue
{
	[Token(Token = "0x60003AE")]
	[Address(RVA = "0xB277B4", Offset = "0xB277B4", VA = "0xB277B4")]
	public new ColorThemeType Get()
	{
		return default(ColorThemeType);
	}

	[Token(Token = "0x60003AF")]
	[Address(RVA = "0xB277BC", Offset = "0xB277BC", VA = "0xB277BC")]
	public void Set(ColorThemeType value)
	{
	}

	[Token(Token = "0x60003B0")]
	[Address(RVA = "0xB27824", Offset = "0xB27824", VA = "0xB27824")]
	public ColorThemeTypeValue()
	{
	}
}
[Serializable]
[Token(Token = "0x20000F4")]
public class CommunityLevelModel
{
	[Serializable]
	[Token(Token = "0x20000F5")]
	public class PaginationInfo
	{
		[Token(Token = "0x4000387")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int pageIndex;

		[Token(Token = "0x4000388")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int pageCount;

		[Token(Token = "0x4000389")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int itemsPerPage;

		[Token(Token = "0x400038A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int results;

		[Token(Token = "0x400038B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool lastPage;

		[Token(Token = "0x60003C2")]
		[Address(RVA = "0xB27FAC", Offset = "0xB27FAC", VA = "0xB27FAC")]
		public PaginationInfo()
		{
		}
	}

	[Token(Token = "0x20000F6")]
	public enum LoadState
	{
		[Token(Token = "0x400038D")]
		loading,
		[Token(Token = "0x400038E")]
		finished,
		[Token(Token = "0x400038F")]
		error
	}

	[Token(Token = "0x4000380")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public List<Level> levels;

	[Token(Token = "0x4000381")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private bool _endpointAccessible;

	[Token(Token = "0x4000382")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[SerializeField]
	private LoadState _loadState;

	[Token(Token = "0x4000383")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public string loadError;

	[Token(Token = "0x4000384")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private int _pageIndex;

	[Token(Token = "0x4000385")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private PaginationInfo _paginationInfo;

	[Token(Token = "0x4000386")]
	public const int ItemsPerPage = 12;

	[Token(Token = "0x17000030")]
	public bool endpointAccessible
	{
		[Token(Token = "0x60003B9")]
		[Address(RVA = "0xB27DF0", Offset = "0xB27DF0", VA = "0xB27DF0")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60003BA")]
		[Address(RVA = "0xB27DF8", Offset = "0xB27DF8", VA = "0xB27DF8")]
		set
		{
		}
	}

	[Token(Token = "0x17000031")]
	public LoadState loadState
	{
		[Token(Token = "0x60003BB")]
		[Address(RVA = "0xB27E2C", Offset = "0xB27E2C", VA = "0xB27E2C")]
		get
		{
			return default(LoadState);
		}
		[Token(Token = "0x60003BC")]
		[Address(RVA = "0xB27E34", Offset = "0xB27E34", VA = "0xB27E34")]
		set
		{
		}
	}

	[Token(Token = "0x17000032")]
	public int pageIndex
	{
		[Token(Token = "0x60003BD")]
		[Address(RVA = "0xB27E60", Offset = "0xB27E60", VA = "0xB27E60")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60003BE")]
		[Address(RVA = "0xB27E68", Offset = "0xB27E68", VA = "0xB27E68")]
		set
		{
		}
	}

	[Token(Token = "0x17000033")]
	public PaginationInfo paginationInfo
	{
		[Token(Token = "0x60003BF")]
		[Address(RVA = "0xB27E94", Offset = "0xB27E94", VA = "0xB27E94")]
		get
		{
			return null;
		}
		[Token(Token = "0x60003C0")]
		[Address(RVA = "0xB27E9C", Offset = "0xB27E9C", VA = "0xB27E9C")]
		set
		{
		}
	}

	[Token(Token = "0x14000017")]
	public event Action<bool> OnEndpointAccessible
	{
		[Token(Token = "0x60003B1")]
		[Address(RVA = "0xB27870", Offset = "0xB27870", VA = "0xB27870")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x60003B2")]
		[Address(RVA = "0xB27920", Offset = "0xB27920", VA = "0xB27920")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x14000018")]
	public event Action<LoadState> OnLoadStateChanged
	{
		[Token(Token = "0x60003B3")]
		[Address(RVA = "0xB279D0", Offset = "0xB279D0", VA = "0xB279D0")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x60003B4")]
		[Address(RVA = "0xB27A80", Offset = "0xB27A80", VA = "0xB27A80")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x14000019")]
	public event Action<int> onPageIndexChanged
	{
		[Token(Token = "0x60003B5")]
		[Address(RVA = "0xB27B30", Offset = "0xB27B30", VA = "0xB27B30")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x60003B6")]
		[Address(RVA = "0xB27BE0", Offset = "0xB27BE0", VA = "0xB27BE0")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x1400001A")]
	public event Action<PaginationInfo> OnQueryInfoChanged
	{
		[Token(Token = "0x60003B7")]
		[Address(RVA = "0xB27C90", Offset = "0xB27C90", VA = "0xB27C90")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x60003B8")]
		[Address(RVA = "0xB27D40", Offset = "0xB27D40", VA = "0xB27D40")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x60003C1")]
	[Address(RVA = "0xB27ECC", Offset = "0xB27ECC", VA = "0xB27ECC")]
	public CommunityLevelModel()
	{
	}
}
[Serializable]
[Token(Token = "0x20000F7")]
public class CustomLevelModel
{
	[Token(Token = "0x4000390")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public List<Level> levels;

	[Token(Token = "0x4000391")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool IsLoadingLevels;

	[Token(Token = "0x60003C3")]
	[Address(RVA = "0xB27FBC", Offset = "0xB27FBC", VA = "0xB27FBC")]
	public void Clear()
	{
	}

	[Token(Token = "0x60003C4")]
	[Address(RVA = "0xB2802C", Offset = "0xB2802C", VA = "0xB2802C")]
	public void AddLevel(Level level)
	{
	}

	[Token(Token = "0x60003C5")]
	[Address(RVA = "0xB281D4", Offset = "0xB281D4", VA = "0xB281D4")]
	public void UpdateLevel(Level level)
	{
	}

	[Token(Token = "0x60003C6")]
	[Address(RVA = "0xB283A0", Offset = "0xB283A0", VA = "0xB283A0")]
	public void AddLevels(List<Level> levels)
	{
	}

	[Token(Token = "0x60003C7")]
	[Address(RVA = "0xB28400", Offset = "0xB28400", VA = "0xB28400")]
	public void RemoveLevel(string name)
	{
	}

	[Token(Token = "0x60003C8")]
	[Address(RVA = "0xB28638", Offset = "0xB28638", VA = "0xB28638")]
	public bool HasLevel(string id)
	{
		return default(bool);
	}

	[Token(Token = "0x60003C9")]
	[Address(RVA = "0xB28484", Offset = "0xB28484", VA = "0xB28484")]
	public bool HasLevelWithName(string name)
	{
		return default(bool);
	}

	[Token(Token = "0x60003CA")]
	[Address(RVA = "0xB282C4", Offset = "0xB282C4", VA = "0xB282C4")]
	public Level Get(string id)
	{
		return null;
	}

	[Token(Token = "0x60003CB")]
	[Address(RVA = "0xB2855C", Offset = "0xB2855C", VA = "0xB2855C")]
	public Level GetByName(string name)
	{
		return null;
	}

	[Token(Token = "0x60003CC")]
	[Address(RVA = "0xB28730", Offset = "0xB28730", VA = "0xB28730")]
	public Level Get(string id, string name)
	{
		return null;
	}

	[Token(Token = "0x60003CD")]
	[Address(RVA = "0xB28818", Offset = "0xB28818", VA = "0xB28818")]
	public void SetAllProgress(Progress progress)
	{
	}

	[Token(Token = "0x60003CE")]
	[Address(RVA = "0xB280D4", Offset = "0xB280D4", VA = "0xB280D4")]
	private void SortDateDescending()
	{
	}

	[Token(Token = "0x60003CF")]
	[Address(RVA = "0xB2898C", Offset = "0xB2898C", VA = "0xB2898C")]
	public CustomLevelModel()
	{
	}
}
[Token(Token = "0x20000FE")]
public class DebugModel
{
	[Token(Token = "0x400039D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool _showFingerJoints;

	[Token(Token = "0x400039E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	private bool _showInteractionDebug;

	[Token(Token = "0x400039F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A")]
	private bool _showHandTrackingReadout;

	[Token(Token = "0x17000034")]
	public bool ShowFingerJoints
	{
		[Token(Token = "0x60003E3")]
		[Address(RVA = "0xB28F74", Offset = "0xB28F74", VA = "0xB28F74")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60003E4")]
		[Address(RVA = "0xB28F7C", Offset = "0xB28F7C", VA = "0xB28F7C")]
		set
		{
		}
	}

	[Token(Token = "0x17000035")]
	public bool ShowInteractionDebug
	{
		[Token(Token = "0x60003E5")]
		[Address(RVA = "0xB28FB0", Offset = "0xB28FB0", VA = "0xB28FB0")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60003E6")]
		[Address(RVA = "0xB28FB8", Offset = "0xB28FB8", VA = "0xB28FB8")]
		set
		{
		}
	}

	[Token(Token = "0x17000036")]
	public bool ShowHandTrackingReadout
	{
		[Token(Token = "0x60003E7")]
		[Address(RVA = "0xB28FEC", Offset = "0xB28FEC", VA = "0xB28FEC")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60003E8")]
		[Address(RVA = "0xB28FF4", Offset = "0xB28FF4", VA = "0xB28FF4")]
		set
		{
		}
	}

	[Token(Token = "0x1400001B")]
	public event Action<bool> ShowJointsChanged
	{
		[Token(Token = "0x60003DD")]
		[Address(RVA = "0xB28B7C", Offset = "0xB28B7C", VA = "0xB28B7C")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x60003DE")]
		[Address(RVA = "0xB28C2C", Offset = "0xB28C2C", VA = "0xB28C2C")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x1400001C")]
	public event Action<bool> ShowInteractionChanged
	{
		[Token(Token = "0x60003DF")]
		[Address(RVA = "0xB28CDC", Offset = "0xB28CDC", VA = "0xB28CDC")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x60003E0")]
		[Address(RVA = "0xB28D8C", Offset = "0xB28D8C", VA = "0xB28D8C")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x1400001D")]
	public event Action ShowHandTrackReadoutChanged
	{
		[Token(Token = "0x60003E1")]
		[Address(RVA = "0xB28E3C", Offset = "0xB28E3C", VA = "0xB28E3C")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x60003E2")]
		[Address(RVA = "0xB28ED8", Offset = "0xB28ED8", VA = "0xB28ED8")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x60003E9")]
	[Address(RVA = "0xB29024", Offset = "0xB29024", VA = "0xB29024")]
	public DebugModel()
	{
	}
}
[Serializable]
[Token(Token = "0x20000FF")]
public class EditorModel
{
	[Token(Token = "0x40003A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private EditMode _editMode;

	[Token(Token = "0x40003A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[SerializeField]
	private bool _frozen;

	[Token(Token = "0x40003A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3D")]
	[SerializeField]
	private bool _isAdding;

	[Token(Token = "0x40003A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private VoxelCreationData _voxelCreationData;

	[Token(Token = "0x40003A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private string _name;

	[Token(Token = "0x40003AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private string _id;

	[Token(Token = "0x40003AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private bool _unsavedChanges;

	[Token(Token = "0x40003AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public int maxGridCubes;

	[Token(Token = "0x40003AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public int maxPieces;

	[Token(Token = "0x40003AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public int maxPieceSegments;

	[Token(Token = "0x40003AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public string saveFileLocation;

	[Token(Token = "0x40003B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public FreezeReason reason;

	[Token(Token = "0x17000037")]
	public EditMode editMode
	{
		[Token(Token = "0x60003F4")]
		[Address(RVA = "0xB2970C", Offset = "0xB2970C", VA = "0xB2970C")]
		get
		{
			return default(EditMode);
		}
		[Token(Token = "0x60003F5")]
		[Address(RVA = "0xB29714", Offset = "0xB29714", VA = "0xB29714")]
		set
		{
		}
	}

	[Token(Token = "0x17000038")]
	public bool frozen
	{
		[Token(Token = "0x60003F6")]
		[Address(RVA = "0xB29740", Offset = "0xB29740", VA = "0xB29740")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60003F7")]
		[Address(RVA = "0xB29748", Offset = "0xB29748", VA = "0xB29748")]
		set
		{
		}
	}

	[Token(Token = "0x17000039")]
	public bool isAdding
	{
		[Token(Token = "0x60003F8")]
		[Address(RVA = "0xB2977C", Offset = "0xB2977C", VA = "0xB2977C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60003F9")]
		[Address(RVA = "0xB29784", Offset = "0xB29784", VA = "0xB29784")]
		set
		{
		}
	}

	[Token(Token = "0x1700003A")]
	public VoxelCreationData voxelCreationData
	{
		[Token(Token = "0x60003FA")]
		[Address(RVA = "0xB297B8", Offset = "0xB297B8", VA = "0xB297B8")]
		get
		{
			return null;
		}
		[Token(Token = "0x60003FB")]
		[Address(RVA = "0xB297C0", Offset = "0xB297C0", VA = "0xB297C0")]
		set
		{
		}
	}

	[Token(Token = "0x1700003B")]
	public string name
	{
		[Token(Token = "0x60003FC")]
		[Address(RVA = "0xB297D4", Offset = "0xB297D4", VA = "0xB297D4")]
		get
		{
			return null;
		}
		[Token(Token = "0x60003FD")]
		[Address(RVA = "0xB297DC", Offset = "0xB297DC", VA = "0xB297DC")]
		set
		{
		}
	}

	[Token(Token = "0x1700003C")]
	public string id
	{
		[Token(Token = "0x60003FE")]
		[Address(RVA = "0xB29814", Offset = "0xB29814", VA = "0xB29814")]
		get
		{
			return null;
		}
		[Token(Token = "0x60003FF")]
		[Address(RVA = "0xB2981C", Offset = "0xB2981C", VA = "0xB2981C")]
		set
		{
		}
	}

	[Token(Token = "0x1700003D")]
	public bool unsavedChanges
	{
		[Token(Token = "0x6000400")]
		[Address(RVA = "0xB29854", Offset = "0xB29854", VA = "0xB29854")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000401")]
		[Address(RVA = "0xB2985C", Offset = "0xB2985C", VA = "0xB2985C")]
		set
		{
		}
	}

	[Token(Token = "0x1400001E")]
	public event Action<EditMode> OnEditModeChanged
	{
		[Token(Token = "0x60003EA")]
		[Address(RVA = "0xB2902C", Offset = "0xB2902C", VA = "0xB2902C")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x60003EB")]
		[Address(RVA = "0xB290DC", Offset = "0xB290DC", VA = "0xB290DC")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x1400001F")]
	public event Action<bool> OnFrozenChanged
	{
		[Token(Token = "0x60003EC")]
		[Address(RVA = "0xB2918C", Offset = "0xB2918C", VA = "0xB2918C")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x60003ED")]
		[Address(RVA = "0xB2923C", Offset = "0xB2923C", VA = "0xB2923C")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x14000020")]
	public event Action<string> OnNameChanged
	{
		[Token(Token = "0x60003EE")]
		[Address(RVA = "0xB292EC", Offset = "0xB292EC", VA = "0xB292EC")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x60003EF")]
		[Address(RVA = "0xB2939C", Offset = "0xB2939C", VA = "0xB2939C")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x14000021")]
	public event Action<bool> OnIsAddingChanged
	{
		[Token(Token = "0x60003F0")]
		[Address(RVA = "0xB2944C", Offset = "0xB2944C", VA = "0xB2944C")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x60003F1")]
		[Address(RVA = "0xB294FC", Offset = "0xB294FC", VA = "0xB294FC")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x14000022")]
	public event Action<bool> OnUnsavedChangesChanged
	{
		[Token(Token = "0x60003F2")]
		[Address(RVA = "0xB295AC", Offset = "0xB295AC", VA = "0xB295AC")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x60003F3")]
		[Address(RVA = "0xB2965C", Offset = "0xB2965C", VA = "0xB2965C")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x6000402")]
	[Address(RVA = "0xB29890", Offset = "0xB29890", VA = "0xB29890")]
	public EditorModel()
	{
	}
}
[Serializable]
[Token(Token = "0x2000100")]
public class VoxelCreationData
{
	[Token(Token = "0x40003B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Vector3Int coords;

	[Token(Token = "0x40003B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform parent;

	[Token(Token = "0x40003B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Vector3 offset;

	[Token(Token = "0x1700003E")]
	public Vector3 localSpawnPos
	{
		[Token(Token = "0x6000403")]
		[Address(RVA = "0xB1C194", Offset = "0xB1C194", VA = "0xB1C194")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x1700003F")]
	public Vector3 worldSpawnPos
	{
		[Token(Token = "0x6000404")]
		[Address(RVA = "0xB1C0D0", Offset = "0xB1C0D0", VA = "0xB1C0D0")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x6000405")]
	[Address(RVA = "0xB29930", Offset = "0xB29930", VA = "0xB29930")]
	public VoxelCreationData()
	{
	}
}
[Token(Token = "0x2000101")]
public enum EditMode
{
	[Token(Token = "0x40003B5")]
	EditingGrid,
	[Token(Token = "0x40003B6")]
	EditingPieces,
	[Token(Token = "0x40003B7")]
	EditingPiece,
	[Token(Token = "0x40003B8")]
	Playing
}
[Serializable]
[Token(Token = "0x2000102")]
public class EnumValue<T> : ObservableValue<T>
{
	[Token(Token = "0x40003B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private T _value;

	[Token(Token = "0x6000406")]
	public override T Get()
	{
		return (T)null;
	}

	[Token(Token = "0x6000407")]
	public override void Set(T value)
	{
	}

	[Token(Token = "0x6000408")]
	public EnumValue()
	{
	}
}
[Serializable]
[Token(Token = "0x2000103")]
public class FloatValue : ObservableValue<float>
{
	[Token(Token = "0x40003BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private float _value;

	[Token(Token = "0x6000409")]
	[Address(RVA = "0xB29990", Offset = "0xB29990", VA = "0xB29990", Slot = "4")]
	public override float Get()
	{
		return default(float);
	}

	[Token(Token = "0x600040A")]
	[Address(RVA = "0xB29998", Offset = "0xB29998", VA = "0xB29998", Slot = "5")]
	public override void Set(float value)
	{
	}

	[Token(Token = "0x600040B")]
	[Address(RVA = "0xB299F0", Offset = "0xB299F0", VA = "0xB299F0")]
	public FloatValue()
	{
	}
}
[Serializable]
[Token(Token = "0x2000104")]
public class GameState
{
	[Token(Token = "0x40003C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private Mode _mode;

	[Token(Token = "0x40003C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	[SerializeField]
	private bool _menuOpen;

	[Token(Token = "0x40003C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5D")]
	[SerializeField]
	private bool _faded;

	[Token(Token = "0x40003C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5E")]
	[SerializeField]
	private bool _setupFinished;

	[Token(Token = "0x40003C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5F")]
	[SerializeField]
	private bool _hasFocus;

	[Token(Token = "0x40003C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private bool _handTrackingDisclaimerVisible;

	[Token(Token = "0x40003CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
	[SerializeField]
	private bool _shownHandTrackingDisclaimer;

	[Token(Token = "0x40003CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x62")]
	[SerializeField]
	private bool _handsOverlapping;

	[Token(Token = "0x40003CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x63")]
	[SerializeField]
	private bool _handsInMovePlayareaPose;

	[Token(Token = "0x40003CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public float menuDistanceToSurface;

	[Token(Token = "0x40003CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public float closestSurfaceHeight;

	[Token(Token = "0x40003CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public Vector3 handTrackingDisclaimerForward;

	[Token(Token = "0x40003D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public int buildNumber;

	[Token(Token = "0x40003D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public bool gripGrab;

	[Token(Token = "0x17000040")]
	public Mode mode
	{
		[Token(Token = "0x600041E")]
		[Address(RVA = "0xB2A4F0", Offset = "0xB2A4F0", VA = "0xB2A4F0")]
		get
		{
			return default(Mode);
		}
		[Token(Token = "0x600041F")]
		[Address(RVA = "0xB2A4F8", Offset = "0xB2A4F8", VA = "0xB2A4F8")]
		set
		{
		}
	}

	[Token(Token = "0x17000041")]
	public bool menuOpen
	{
		[Token(Token = "0x6000420")]
		[Address(RVA = "0xB2A5F4", Offset = "0xB2A5F4", VA = "0xB2A5F4")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000421")]
		[Address(RVA = "0xB2A5FC", Offset = "0xB2A5FC", VA = "0xB2A5FC")]
		set
		{
		}
	}

	[Token(Token = "0x17000042")]
	public bool faded
	{
		[Token(Token = "0x6000422")]
		[Address(RVA = "0xB2A630", Offset = "0xB2A630", VA = "0xB2A630")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000423")]
		[Address(RVA = "0xB2A638", Offset = "0xB2A638", VA = "0xB2A638")]
		set
		{
		}
	}

	[Token(Token = "0x17000043")]
	public bool setupFinished
	{
		[Token(Token = "0x6000424")]
		[Address(RVA = "0xB2A66C", Offset = "0xB2A66C", VA = "0xB2A66C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000425")]
		[Address(RVA = "0xB2A674", Offset = "0xB2A674", VA = "0xB2A674")]
		set
		{
		}
	}

	[Token(Token = "0x17000044")]
	public bool hasFocus
	{
		[Token(Token = "0x6000426")]
		[Address(RVA = "0xB2A6A4", Offset = "0xB2A6A4", VA = "0xB2A6A4")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000427")]
		[Address(RVA = "0xB2A6AC", Offset = "0xB2A6AC", VA = "0xB2A6AC")]
		set
		{
		}
	}

	[Token(Token = "0x17000045")]
	public bool handTrackingDisclaimerVisible
	{
		[Token(Token = "0x6000428")]
		[Address(RVA = "0xB2A78C", Offset = "0xB2A78C", VA = "0xB2A78C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000429")]
		[Address(RVA = "0xB1EAF8", Offset = "0xB1EAF8", VA = "0xB1EAF8")]
		set
		{
		}
	}

	[Token(Token = "0x17000046")]
	public bool shownHandTrackingDisclaimer
	{
		[Token(Token = "0x600042A")]
		[Address(RVA = "0xB2A794", Offset = "0xB2A794", VA = "0xB2A794")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600042B")]
		[Address(RVA = "0xB1EBC8", Offset = "0xB1EBC8", VA = "0xB1EBC8")]
		set
		{
		}
	}

	[Token(Token = "0x17000047")]
	public bool handsOverlapping
	{
		[Token(Token = "0x600042C")]
		[Address(RVA = "0xB2A79C", Offset = "0xB2A79C", VA = "0xB2A79C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600042D")]
		[Address(RVA = "0xB2A7A4", Offset = "0xB2A7A4", VA = "0xB2A7A4")]
		set
		{
		}
	}

	[Token(Token = "0x17000048")]
	public bool handsInMovePlayareaPose
	{
		[Token(Token = "0x600042E")]
		[Address(RVA = "0xB2A7D8", Offset = "0xB2A7D8", VA = "0xB2A7D8")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600042F")]
		[Address(RVA = "0xB2A7E0", Offset = "0xB2A7E0", VA = "0xB2A7E0")]
		set
		{
		}
	}

	[Token(Token = "0x17000049")]
	public Platform platform
	{
		[Token(Token = "0x6000430")]
		[Address(RVA = "0xB215D0", Offset = "0xB215D0", VA = "0xB215D0")]
		get
		{
			return default(Platform);
		}
	}

	[Token(Token = "0x1700004A")]
	public bool passThroughSupported
	{
		[Token(Token = "0x6000431")]
		[Address(RVA = "0xB230EC", Offset = "0xB230EC", VA = "0xB230EC")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x14000023")]
	public event Action<Mode> modeChanged
	{
		[Token(Token = "0x600040C")]
		[Address(RVA = "0xB29A40", Offset = "0xB29A40", VA = "0xB29A40")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x600040D")]
		[Address(RVA = "0xB29AF0", Offset = "0xB29AF0", VA = "0xB29AF0")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x14000024")]
	public event Action<bool> menuOpenChanged
	{
		[Token(Token = "0x600040E")]
		[Address(RVA = "0xB29BA0", Offset = "0xB29BA0", VA = "0xB29BA0")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x600040F")]
		[Address(RVA = "0xB29C50", Offset = "0xB29C50", VA = "0xB29C50")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x14000025")]
	public event Action<bool> fadedChanged
	{
		[Token(Token = "0x6000410")]
		[Address(RVA = "0xB29D00", Offset = "0xB29D00", VA = "0xB29D00")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000411")]
		[Address(RVA = "0xB29DB0", Offset = "0xB29DB0", VA = "0xB29DB0")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x14000026")]
	public event Action onSetupFinished
	{
		[Token(Token = "0x6000412")]
		[Address(RVA = "0xB29E60", Offset = "0xB29E60", VA = "0xB29E60")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000413")]
		[Address(RVA = "0xB29EFC", Offset = "0xB29EFC", VA = "0xB29EFC")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x14000027")]
	public event Action<bool> focusChanged
	{
		[Token(Token = "0x6000414")]
		[Address(RVA = "0xB1F580", Offset = "0xB1F580", VA = "0xB1F580")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000415")]
		[Address(RVA = "0xB1F6D4", Offset = "0xB1F6D4", VA = "0xB1F6D4")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x14000028")]
	public event Action<bool> onHandTrackingDisclaimerVisible
	{
		[Token(Token = "0x6000416")]
		[Address(RVA = "0xB29F98", Offset = "0xB29F98", VA = "0xB29F98")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000417")]
		[Address(RVA = "0xB2A048", Offset = "0xB2A048", VA = "0xB2A048")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x14000029")]
	public event Action onShownHandtrackingDisclaimer
	{
		[Token(Token = "0x6000418")]
		[Address(RVA = "0xB2A0F8", Offset = "0xB2A0F8", VA = "0xB2A0F8")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000419")]
		[Address(RVA = "0xB2A194", Offset = "0xB2A194", VA = "0xB2A194")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x1400002A")]
	public event Action<bool> onHandsOverlappingChanged
	{
		[Token(Token = "0x600041A")]
		[Address(RVA = "0xB2A230", Offset = "0xB2A230", VA = "0xB2A230")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x600041B")]
		[Address(RVA = "0xB2A2E0", Offset = "0xB2A2E0", VA = "0xB2A2E0")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x1400002B")]
	public event Action<bool> onHandsInMovePlayareaPoseChanged
	{
		[Token(Token = "0x600041C")]
		[Address(RVA = "0xB2A390", Offset = "0xB2A390", VA = "0xB2A390")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x600041D")]
		[Address(RVA = "0xB2A440", Offset = "0xB2A440", VA = "0xB2A440")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x6000432")]
	[Address(RVA = "0xB2A814", Offset = "0xB2A814", VA = "0xB2A814")]
	public bool HasOculusCloudSupport()
	{
		return default(bool);
	}

	[Token(Token = "0x6000433")]
	[Address(RVA = "0xB2A81C", Offset = "0xB2A81C", VA = "0xB2A81C")]
	public GameState()
	{
	}
}
[Token(Token = "0x2000105")]
public enum Mode
{
	[Token(Token = "0x40003D3")]
	title,
	[Token(Token = "0x40003D4")]
	puzzle,
	[Token(Token = "0x40003D5")]
	editor,
	[Token(Token = "0x40003D6")]
	puzzleSong,
	[Token(Token = "0x40003D7")]
	credits,
	[Token(Token = "0x40003D8")]
	handtrackingDisclaimer
}
[Token(Token = "0x2000106")]
public enum Platform
{
	[Token(Token = "0x40003DA")]
	unity,
	[Token(Token = "0x40003DB")]
	executable,
	[Token(Token = "0x40003DC")]
	steam,
	[Token(Token = "0x40003DD")]
	rift,
	[Token(Token = "0x40003DE")]
	itch,
	[Token(Token = "0x40003DF")]
	quest,
	[Token(Token = "0x40003E0")]
	sideQuest,
	[Token(Token = "0x40003E1")]
	pico
}
[Serializable]
[Token(Token = "0x2000107")]
public class InputModel
{
	[Token(Token = "0x40003E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private bool _gatherEnabled;

	[Token(Token = "0x40003E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
	[SerializeField]
	private bool _grabEnabled;

	[Token(Token = "0x40003E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3A")]
	[SerializeField]
	private bool _transformEnabled;

	[Token(Token = "0x40003EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3B")]
	[SerializeField]
	private bool _openMenuEnabled;

	[Token(Token = "0x40003EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[SerializeField]
	private bool _rotateEnabled;

	[Token(Token = "0x40003EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3D")]
	[SerializeField]
	private bool _handTracking;

	[Token(Token = "0x1700004B")]
	public bool gatherEnabled
	{
		[Token(Token = "0x600043E")]
		[Address(RVA = "0xB2AF1C", Offset = "0xB2AF1C", VA = "0xB2AF1C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600043F")]
		[Address(RVA = "0xB1F098", Offset = "0xB1F098", VA = "0xB1F098")]
		set
		{
		}
	}

	[Token(Token = "0x1700004C")]
	public bool grabEnabled
	{
		[Token(Token = "0x6000440")]
		[Address(RVA = "0xB2AF24", Offset = "0xB2AF24", VA = "0xB2AF24")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000441")]
		[Address(RVA = "0xB1F064", Offset = "0xB1F064", VA = "0xB1F064")]
		set
		{
		}
	}

	[Token(Token = "0x1700004D")]
	public bool transformEnabled
	{
		[Token(Token = "0x6000442")]
		[Address(RVA = "0xB2AF2C", Offset = "0xB2AF2C", VA = "0xB2AF2C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000443")]
		[Address(RVA = "0xB2AF34", Offset = "0xB2AF34", VA = "0xB2AF34")]
		set
		{
		}
	}

	[Token(Token = "0x1700004E")]
	public bool openMenuEnabled
	{
		[Token(Token = "0x6000444")]
		[Address(RVA = "0xB2AF68", Offset = "0xB2AF68", VA = "0xB2AF68")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000445")]
		[Address(RVA = "0xB1F0CC", Offset = "0xB1F0CC", VA = "0xB1F0CC")]
		set
		{
		}
	}

	[Token(Token = "0x1700004F")]
	public bool rotateEnabled
	{
		[Token(Token = "0x6000446")]
		[Address(RVA = "0xB2AF70", Offset = "0xB2AF70", VA = "0xB2AF70")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000447")]
		[Address(RVA = "0xB2AF78", Offset = "0xB2AF78", VA = "0xB2AF78")]
		set
		{
		}
	}

	[Token(Token = "0x1400002C")]
	public event Action<bool> gatherAccesibilityChange
	{
		[Token(Token = "0x6000434")]
		[Address(RVA = "0xB2A83C", Offset = "0xB2A83C", VA = "0xB2A83C")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000435")]
		[Address(RVA = "0xB2A8EC", Offset = "0xB2A8EC", VA = "0xB2A8EC")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x1400002D")]
	public event Action<bool> grabAccesibilityChange
	{
		[Token(Token = "0x6000436")]
		[Address(RVA = "0xB2A99C", Offset = "0xB2A99C", VA = "0xB2A99C")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000437")]
		[Address(RVA = "0xB2AA4C", Offset = "0xB2AA4C", VA = "0xB2AA4C")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x1400002E")]
	public event Action<bool> transformAccesibilityChange
	{
		[Token(Token = "0x6000438")]
		[Address(RVA = "0xB2AAFC", Offset = "0xB2AAFC", VA = "0xB2AAFC")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000439")]
		[Address(RVA = "0xB2ABAC", Offset = "0xB2ABAC", VA = "0xB2ABAC")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x1400002F")]
	public event Action<bool> openMenuAccesibilityChange
	{
		[Token(Token = "0x600043A")]
		[Address(RVA = "0xB2AC5C", Offset = "0xB2AC5C", VA = "0xB2AC5C")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x600043B")]
		[Address(RVA = "0xB2AD0C", Offset = "0xB2AD0C", VA = "0xB2AD0C")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x14000030")]
	public event Action<bool> rotateAccessibilityChange
	{
		[Token(Token = "0x600043C")]
		[Address(RVA = "0xB2ADBC", Offset = "0xB2ADBC", VA = "0xB2ADBC")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x600043D")]
		[Address(RVA = "0xB2AE6C", Offset = "0xB2AE6C", VA = "0xB2AE6C")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x6000448")]
	[Address(RVA = "0xB2AFAC", Offset = "0xB2AFAC", VA = "0xB2AFAC")]
	public InputModel()
	{
	}
}
[Serializable]
[Token(Token = "0x2000108")]
public class IntValue : ObservableValue<int>
{
	[Token(Token = "0x40003ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	protected int _value;

	[Token(Token = "0x6000449")]
	[Address(RVA = "0xB2AFC4", Offset = "0xB2AFC4", VA = "0xB2AFC4", Slot = "4")]
	public override int Get()
	{
		return default(int);
	}

	[Token(Token = "0x600044A")]
	[Address(RVA = "0xB2AFCC", Offset = "0xB2AFCC", VA = "0xB2AFCC", Slot = "5")]
	public override void Set(int value)
	{
	}

	[Token(Token = "0x600044B")]
	[Address(RVA = "0xB27828", Offset = "0xB27828", VA = "0xB27828")]
	public IntValue()
	{
	}
}
[Token(Token = "0x2000109")]
public class LevelModel
{
	[Token(Token = "0x40003F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string path;

	[Token(Token = "0x40003F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public StageModel stage;

	[Token(Token = "0x40003F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public int index;

	[Token(Token = "0x40003F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private bool _unlocked;

	[Token(Token = "0x40003F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3D")]
	private bool _completed;

	[Token(Token = "0x40003F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float _timeSpent;

	[Token(Token = "0x40003F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private float _completionTime;

	[Token(Token = "0x40003F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool _hasSave;

	[Token(Token = "0x40003F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private ActiveLevelService _activeLevelService;

	[Token(Token = "0x40003FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private List<Note> _chord;

	[Token(Token = "0x17000050")]
	public bool unlocked
	{
		[Token(Token = "0x6000452")]
		[Address(RVA = "0xB2B3DC", Offset = "0xB2B3DC", VA = "0xB2B3DC")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000453")]
		[Address(RVA = "0xB2B464", Offset = "0xB2B464", VA = "0xB2B464")]
		set
		{
		}
	}

	[Token(Token = "0x17000051")]
	public bool completed
	{
		[Token(Token = "0x6000454")]
		[Address(RVA = "0xB2B518", Offset = "0xB2B518", VA = "0xB2B518")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000455")]
		[Address(RVA = "0xB2B5A0", Offset = "0xB2B5A0", VA = "0xB2B5A0")]
		set
		{
		}
	}

	[Token(Token = "0x17000052")]
	public float timeSpent
	{
		[Token(Token = "0x6000456")]
		[Address(RVA = "0xB2B668", Offset = "0xB2B668", VA = "0xB2B668")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000457")]
		[Address(RVA = "0xB2B6E8", Offset = "0xB2B6E8", VA = "0xB2B6E8")]
		set
		{
		}
	}

	[Token(Token = "0x17000053")]
	public float completionTime
	{
		[Token(Token = "0x6000458")]
		[Address(RVA = "0xB2B74C", Offset = "0xB2B74C", VA = "0xB2B74C")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000459")]
		[Address(RVA = "0xB2B7CC", Offset = "0xB2B7CC", VA = "0xB2B7CC")]
		set
		{
		}
	}

	[Token(Token = "0x17000054")]
	public bool hasSave
	{
		[Token(Token = "0x600045A")]
		[Address(RVA = "0xB2B830", Offset = "0xB2B830", VA = "0xB2B830")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600045B")]
		[Address(RVA = "0xB2B8B8", Offset = "0xB2B8B8", VA = "0xB2B8B8")]
		set
		{
		}
	}

	[Token(Token = "0x14000031")]
	public event Action onProgressCleared
	{
		[Token(Token = "0x600044C")]
		[Address(RVA = "0xB2B034", Offset = "0xB2B034", VA = "0xB2B034")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x600044D")]
		[Address(RVA = "0xB2B0D0", Offset = "0xB2B0D0", VA = "0xB2B0D0")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x14000032")]
	public event Action onUnlocked
	{
		[Token(Token = "0x600044E")]
		[Address(RVA = "0xB2B16C", Offset = "0xB2B16C", VA = "0xB2B16C")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x600044F")]
		[Address(RVA = "0xB2B208", Offset = "0xB2B208", VA = "0xB2B208")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x14000033")]
	public event Action onCompleted
	{
		[Token(Token = "0x6000450")]
		[Address(RVA = "0xB2B2A4", Offset = "0xB2B2A4", VA = "0xB2B2A4")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000451")]
		[Address(RVA = "0xB2B340", Offset = "0xB2B340", VA = "0xB2B340")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x600045C")]
	[Address(RVA = "0xB2B924", Offset = "0xB2B924", VA = "0xB2B924")]
	public LevelModel(string path, StageModel stage)
	{
	}

	[Token(Token = "0x600045D")]
	[Address(RVA = "0xB2B9B8", Offset = "0xB2B9B8", VA = "0xB2B9B8")]
	public void ClearProgress()
	{
	}

	[Token(Token = "0x600045E")]
	[Address(RVA = "0xB2BB0C", Offset = "0xB2BB0C", VA = "0xB2BB0C")]
	public void SetChord(List<Note> chord)
	{
	}

	[Token(Token = "0x600045F")]
	[Address(RVA = "0xB2BB14", Offset = "0xB2BB14", VA = "0xB2BB14")]
	public List<Note> GetChordNotes()
	{
		return null;
	}

	[Token(Token = "0x6000460")]
	[Address(RVA = "0xB2BB1C", Offset = "0xB2BB1C", VA = "0xB2BB1C")]
	public List<string> GetFullChord()
	{
		return null;
	}

	[Token(Token = "0x6000461")]
	[Address(RVA = "0xB2BC60", Offset = "0xB2BC60", VA = "0xB2BC60")]
	public List<string> GetTriad()
	{
		return null;
	}

	[Token(Token = "0x6000462")]
	[Address(RVA = "0xB2BAF0", Offset = "0xB2BAF0", VA = "0xB2BAF0")]
	private void FireProgressCleared()
	{
	}

	[Token(Token = "0x6000463")]
	[Address(RVA = "0xB2B4FC", Offset = "0xB2B4FC", VA = "0xB2B4FC")]
	private void FireUnlocked()
	{
	}

	[Token(Token = "0x6000464")]
	[Address(RVA = "0xB2B64C", Offset = "0xB2B64C", VA = "0xB2B64C")]
	private void FireCompleted()
	{
	}

	[Token(Token = "0x6000465")]
	[Address(RVA = "0xB2BE7C", Offset = "0xB2BE7C", VA = "0xB2BE7C")]
	private bool IsFirstLevel()
	{
		return default(bool);
	}
}
[Token(Token = "0x200010B")]
public class Loading
{
	[Token(Token = "0x600046B")]
	[Address(RVA = "0xB22248", Offset = "0xB22248", VA = "0xB22248")]
	public static JSONNode LoadPuzzleJsonIntoString(string path)
	{
		return null;
	}

	[Token(Token = "0x600046C")]
	[Address(RVA = "0xB2BFA8", Offset = "0xB2BFA8", VA = "0xB2BFA8")]
	public static JSONNode FromTextAsset(TextAsset asset)
	{
		return null;
	}

	[Token(Token = "0x600046D")]
	[Address(RVA = "0xB2BFC8", Offset = "0xB2BFC8", VA = "0xB2BFC8")]
	public Loading()
	{
	}
}
[Token(Token = "0x200010C")]
public class MenuService : MonoBehaviour
{
	[Token(Token = "0x200010D")]
	[CompilerGenerated]
	private sealed class <_DelayedOpen>d__18 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000408")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000409")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400040A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MenuService <>4__this;

		[Token(Token = "0x17000055")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000481")]
			[Address(RVA = "0xB2CD84", Offset = "0xB2CD84", VA = "0xB2CD84", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000056")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000483")]
			[Address(RVA = "0xB2CDCC", Offset = "0xB2CDCC", VA = "0xB2CDCC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600047E")]
		[Address(RVA = "0xB2CA5C", Offset = "0xB2CA5C", VA = "0xB2CA5C")]
		[DebuggerHidden]
		public <_DelayedOpen>d__18(int <>1__state)
		{
		}

		[Token(Token = "0x600047F")]
		[Address(RVA = "0xB2CCC4", Offset = "0xB2CCC4", VA = "0xB2CCC4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000480")]
		[Address(RVA = "0xB2CCC8", Offset = "0xB2CCC8", VA = "0xB2CCC8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000482")]
		[Address(RVA = "0xB2CD8C", Offset = "0xB2CD8C", VA = "0xB2CD8C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200010E")]
	[CompilerGenerated]
	private sealed class <_GrowCubeThenOpen>d__19 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400040B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400040C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400040D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MenuService <>4__this;

		[Token(Token = "0x17000057")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000487")]
			[Address(RVA = "0xB2CED0", Offset = "0xB2CED0", VA = "0xB2CED0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000058")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000489")]
			[Address(RVA = "0xB2CF18", Offset = "0xB2CF18", VA = "0xB2CF18", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000484")]
		[Address(RVA = "0xB2CA84", Offset = "0xB2CA84", VA = "0xB2CA84")]
		[DebuggerHidden]
		public <_GrowCubeThenOpen>d__19(int <>1__state)
		{
		}

		[Token(Token = "0x6000485")]
		[Address(RVA = "0xB2CDD4", Offset = "0xB2CDD4", VA = "0xB2CDD4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000486")]
		[Address(RVA = "0xB2CDD8", Offset = "0xB2CDD8", VA = "0xB2CDD8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000488")]
		[Address(RVA = "0xB2CED8", Offset = "0xB2CED8", VA = "0xB2CED8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200010F")]
	[CompilerGenerated]
	private sealed class <_DelayedClose>d__22 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400040E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400040F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000410")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MenuService <>4__this;

		[Token(Token = "0x17000059")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600048D")]
			[Address(RVA = "0xB2D010", Offset = "0xB2D010", VA = "0xB2D010", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700005A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600048F")]
			[Address(RVA = "0xB2D058", Offset = "0xB2D058", VA = "0xB2D058", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600048A")]
		[Address(RVA = "0xB2CB64", Offset = "0xB2CB64", VA = "0xB2CB64")]
		[DebuggerHidden]
		public <_DelayedClose>d__22(int <>1__state)
		{
		}

		[Token(Token = "0x600048B")]
		[Address(RVA = "0xB2CF20", Offset = "0xB2CF20", VA = "0xB2CF20", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600048C")]
		[Address(RVA = "0xB2CF24", Offset = "0xB2CF24", VA = "0xB2CF24", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600048E")]
		[Address(RVA = "0xB2D018", Offset = "0xB2D018", VA = "0xB2D018", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40003FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public VrToggle _centerToggle;

	[Token(Token = "0x4000400")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ProximityCubeSizer _centerCubeSizer;

	[Token(Token = "0x4000401")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Dictionary<AnchorPosition, MenuAnchorData> _anchors;

	[Token(Token = "0x4000402")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private AnchorPosition _currentOwner;

	[Token(Token = "0x4000403")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private State _state;

	[Token(Token = "0x4000404")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private PageGroup _pageGroup;

	[Token(Token = "0x4000405")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Grid _grid;

	[Token(Token = "0x4000406")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Mode[] _bigModes;

	[Token(Token = "0x4000407")]
	private const float _timeToOpenAfterFinish = 3f;

	[Token(Token = "0x600046E")]
	[Address(RVA = "0xB2BFD0", Offset = "0xB2BFD0", VA = "0xB2BFD0")]
	public void Setup(State state, PageGroup pageGroup, Grid grid)
	{
	}

	[Token(Token = "0x600046F")]
	[Address(RVA = "0xB2C174", Offset = "0xB2C174", VA = "0xB2C174")]
	private void RegisterActions(ControllerAction action)
	{
	}

	[Token(Token = "0x6000470")]
	[Address(RVA = "0xB2C308", Offset = "0xB2C308", VA = "0xB2C308")]
	private void RegisterAnchor(AnchorPosition pos, MenuAnchorData data)
	{
	}

	[Token(Token = "0x6000471")]
	[Address(RVA = "0xB2C378", Offset = "0xB2C378", VA = "0xB2C378")]
	private void ToggleMenu(AnchorPosition pos)
	{
	}

	[Token(Token = "0x6000472")]
	[Address(RVA = "0xB2C588", Offset = "0xB2C588", VA = "0xB2C588")]
	private bool MenuOpen()
	{
		return default(bool);
	}

	[Token(Token = "0x6000473")]
	[Address(RVA = "0xB2C5DC", Offset = "0xB2C5DC", VA = "0xB2C5DC")]
	private void OpenMenu(AnchorPosition pos)
	{
	}

	[Token(Token = "0x6000474")]
	[Address(RVA = "0xB2C858", Offset = "0xB2C858", VA = "0xB2C858")]
	private bool NotCenterAnchored()
	{
		return default(bool);
	}

	[Token(Token = "0x6000475")]
	[Address(RVA = "0xB2C868", Offset = "0xB2C868", VA = "0xB2C868")]
	private void DelayedOpenMenuIfFirstPuzzle()
	{
	}

	[Token(Token = "0x6000476")]
	[Address(RVA = "0xB2C8C8", Offset = "0xB2C8C8", VA = "0xB2C8C8")]
	private void DelayedOpen()
	{
	}

	[Token(Token = "0x6000477")]
	[Address(RVA = "0xB2C9F4", Offset = "0xB2C9F4", VA = "0xB2C9F4")]
	[IteratorStateMachine(typeof(<_DelayedOpen>d__18))]
	private IEnumerator _DelayedOpen()
	{
		return null;
	}

	[Token(Token = "0x6000478")]
	[Address(RVA = "0xB2C3F8", Offset = "0xB2C3F8", VA = "0xB2C3F8")]
	[IteratorStateMachine(typeof(<_GrowCubeThenOpen>d__19))]
	private IEnumerator _GrowCubeThenOpen()
	{
		return null;
	}

	[Token(Token = "0x6000479")]
	[Address(RVA = "0xB2CAAC", Offset = "0xB2CAAC", VA = "0xB2CAAC")]
	private void CloseMenuIfActiveLevelUnSolved()
	{
	}

	[Token(Token = "0x600047A")]
	[Address(RVA = "0xB2C460", Offset = "0xB2C460", VA = "0xB2C460")]
	private void CloseMenu()
	{
	}

	[Token(Token = "0x600047B")]
	[Address(RVA = "0xB2CAFC", Offset = "0xB2CAFC", VA = "0xB2CAFC")]
	[IteratorStateMachine(typeof(<_DelayedClose>d__22))]
	private IEnumerator _DelayedClose()
	{
		return null;
	}

	[Token(Token = "0x600047C")]
	[Address(RVA = "0xB2CB8C", Offset = "0xB2CB8C", VA = "0xB2CB8C")]
	private bool ShouldBeDynamicOnClosed()
	{
		return default(bool);
	}

	[Token(Token = "0x600047D")]
	[Address(RVA = "0xB2CBF8", Offset = "0xB2CBF8", VA = "0xB2CBF8")]
	public MenuService()
	{
	}
}
[Serializable]
[Token(Token = "0x2000110")]
public class Collection<T> : IEnumerable where T : Entity
{
	[Token(Token = "0x4000413")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private Dictionary<string, T> _objects;

	[Token(Token = "0x14000034")]
	public event Action<string> OnAdded
	{
		[Token(Token = "0x6000490")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000491")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x14000035")]
	public event Action<string> OnRemoved
	{
		[Token(Token = "0x6000492")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000493")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x6000494")]
	public T Get(string id)
	{
		return null;
	}

	[Token(Token = "0x6000495")]
	public bool HasIndex(int index)
	{
		return default(bool);
	}

	[Token(Token = "0x6000496")]
	public T Get(int index)
	{
		return null;
	}

	[Token(Token = "0x6000497")]
	public void Clear()
	{
	}

	[Token(Token = "0x6000498")]
	public int Count()
	{
		return default(int);
	}

	[Token(Token = "0x6000499")]
	public bool Contains(T value)
	{
		return default(bool);
	}

	[Token(Token = "0x600049A")]
	public void Add(T obj, [Optional] string id)
	{
	}

	[Token(Token = "0x600049B")]
	public void Remove(string id)
	{
	}

	[Token(Token = "0x600049C")]
	public IEnumerator GetEnumerator()
	{
		return null;
	}

	[Token(Token = "0x600049D")]
	public IEnumerable<T> Where(Func<T, bool> predicate)
	{
		return null;
	}

	[Token(Token = "0x600049E")]
	public IEnumerable<T> Select(Func<T, T> selector)
	{
		return null;
	}

	[Token(Token = "0x600049F")]
	public List<T> GetValues()
	{
		return null;
	}

	[Token(Token = "0x60004A0")]
	public Collection()
	{
	}
}
[Token(Token = "0x2000111")]
public class Entity
{
	[Token(Token = "0x4000414")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string id;

	[Token(Token = "0x60004A1")]
	[Address(RVA = "0xB2D060", Offset = "0xB2D060", VA = "0xB2D060")]
	public Entity()
	{
	}
}
[Serializable]
[Token(Token = "0x2000112")]
public class MeshLOD
{
	[Token(Token = "0x4000415")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Vector3[] verts;

	[Token(Token = "0x4000416")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3[] norms;

	[Token(Token = "0x4000417")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int[] tris;

	[Token(Token = "0x4000418")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int[] edgeTris;

	[Token(Token = "0x60004A2")]
	[Address(RVA = "0xB2D068", Offset = "0xB2D068", VA = "0xB2D068")]
	public MeshLOD()
	{
	}
}
[Token(Token = "0x2000113")]
public class StageCollection : MonoBehaviour
{
	[Token(Token = "0x60004A3")]
	[Address(RVA = "0xB2D070", Offset = "0xB2D070", VA = "0xB2D070")]
	private void Start()
	{
	}

	[Token(Token = "0x60004A4")]
	[Address(RVA = "0xB2D074", Offset = "0xB2D074", VA = "0xB2D074")]
	private void Update()
	{
	}

	[Token(Token = "0x60004A5")]
	[Address(RVA = "0xB2D078", Offset = "0xB2D078", VA = "0xB2D078")]
	public StageCollection()
	{
	}
}
[Token(Token = "0x2000114")]
public class UnlockableEntity : Entity
{
	[Token(Token = "0x400041A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Progress _progress;

	[Token(Token = "0x1700005B")]
	public Progress progress
	{
		[Token(Token = "0x60004A8")]
		[Address(RVA = "0xB2D1E0", Offset = "0xB2D1E0", VA = "0xB2D1E0")]
		get
		{
			return default(Progress);
		}
		[Token(Token = "0x60004A9")]
		[Address(RVA = "0xB25008", Offset = "0xB25008", VA = "0xB25008")]
		set
		{
		}
	}

	[Token(Token = "0x14000036")]
	public event Action<Progress> ProgressChanged
	{
		[Token(Token = "0x60004A6")]
		[Address(RVA = "0xB2D080", Offset = "0xB2D080", VA = "0xB2D080")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x60004A7")]
		[Address(RVA = "0xB2D130", Offset = "0xB2D130", VA = "0xB2D130")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x60004AA")]
	[Address(RVA = "0xB2D1E8", Offset = "0xB2D1E8", VA = "0xB2D1E8")]
	private void FireProgressChanged(Progress value)
	{
	}

	[Token(Token = "0x60004AB")]
	[Address(RVA = "0xB2D204", Offset = "0xB2D204", VA = "0xB2D204")]
	public UnlockableEntity()
	{
	}
}
[Token(Token = "0x2000115")]
public enum Progress
{
	[Token(Token = "0x400041C")]
	Locked,
	[Token(Token = "0x400041D")]
	Unlocked,
	[Token(Token = "0x400041E")]
	InProgress,
	[Token(Token = "0x400041F")]
	Completed
}
[Serializable]
[Token(Token = "0x2000116")]
public abstract class ObservableValue<T>
{
	[Token(Token = "0x14000037")]
	public event Action OnChanged
	{
		[Token(Token = "0x60004AC")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x60004AD")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x60004AE")]
	public abstract T Get();

	[Token(Token = "0x60004AF")]
	public abstract void Set(T value);

	[Token(Token = "0x60004B0")]
	protected void Changed()
	{
	}

	[Token(Token = "0x60004B1")]
	protected ObservableValue()
	{
	}
}
[Token(Token = "0x2000117")]
public class PassthroughLayerMap : MonoBehaviour
{
	[Token(Token = "0x4000421")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OVRPassthroughLayer underlay;

	[Token(Token = "0x4000422")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public OVRPassthroughLayer reprojected;

	[Token(Token = "0x60004B2")]
	[Address(RVA = "0xB2D20C", Offset = "0xB2D20C", VA = "0xB2D20C")]
	public PassthroughLayerMap()
	{
	}
}
[Serializable]
[Token(Token = "0x2000118")]
public class PlayerVariables
{
	[Token(Token = "0x4000424")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private bool _playedPuzzleSong;

	[Token(Token = "0x4000425")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	public List<string> sharedPuzzleIds;

	[Token(Token = "0x1700005C")]
	public bool playedPuzzleSong
	{
		[Token(Token = "0x60004B5")]
		[Address(RVA = "0xB2D34C", Offset = "0xB2D34C", VA = "0xB2D34C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60004B6")]
		[Address(RVA = "0xB2D354", Offset = "0xB2D354", VA = "0xB2D354")]
		set
		{
		}
	}

	[Token(Token = "0x14000038")]
	public event Action onVarsChanged
	{
		[Token(Token = "0x60004B3")]
		[Address(RVA = "0xB2D214", Offset = "0xB2D214", VA = "0xB2D214")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x60004B4")]
		[Address(RVA = "0xB2D2B0", Offset = "0xB2D2B0", VA = "0xB2D2B0")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x60004B7")]
	[Address(RVA = "0xB2D384", Offset = "0xB2D384", VA = "0xB2D384")]
	public void AddSharedPuzzleId(string id)
	{
	}

	[Token(Token = "0x60004B8")]
	[Address(RVA = "0xB2D474", Offset = "0xB2D474", VA = "0xB2D474")]
	public JSONObject Serialize()
	{
		return null;
	}

	[Token(Token = "0x60004B9")]
	[Address(RVA = "0xB2D70C", Offset = "0xB2D70C", VA = "0xB2D70C")]
	public void FromJSON(JSONNode json)
	{
	}

	[Token(Token = "0x60004BA")]
	[Address(RVA = "0xB2D9E0", Offset = "0xB2D9E0", VA = "0xB2D9E0")]
	public PlayerVariables()
	{
	}
}
[Serializable]
[Token(Token = "0x2000119")]
public class PlaytestLevelsModel
{
	[Token(Token = "0x4000429")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public List<Level> levels;

	[Token(Token = "0x400042A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private string _expirationDateString;

	[Token(Token = "0x400042B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	public PlaytestMetaData meta;

	[Token(Token = "0x1700005D")]
	public string expirationDateString
	{
		[Token(Token = "0x60004C1")]
		[Address(RVA = "0xB2DE54", Offset = "0xB2DE54", VA = "0xB2DE54")]
		get
		{
			return null;
		}
		[Token(Token = "0x60004C2")]
		[Address(RVA = "0xB2DE5C", Offset = "0xB2DE5C", VA = "0xB2DE5C")]
		set
		{
		}
	}

	[Token(Token = "0x14000039")]
	public event Action OnExpirationStringChanged
	{
		[Token(Token = "0x60004BB")]
		[Address(RVA = "0xB2DA5C", Offset = "0xB2DA5C", VA = "0xB2DA5C")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x60004BC")]
		[Address(RVA = "0xB2DAF8", Offset = "0xB2DAF8", VA = "0xB2DAF8")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x1400003A")]
	public event Action<Level> OnAdded
	{
		[Token(Token = "0x60004BD")]
		[Address(RVA = "0xB2DB94", Offset = "0xB2DB94", VA = "0xB2DB94")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x60004BE")]
		[Address(RVA = "0xB2DC44", Offset = "0xB2DC44", VA = "0xB2DC44")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x1400003B")]
	public event Action<Level> OnRemoved
	{
		[Token(Token = "0x60004BF")]
		[Address(RVA = "0xB2DCF4", Offset = "0xB2DCF4", VA = "0xB2DCF4")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x60004C0")]
		[Address(RVA = "0xB2DDA4", Offset = "0xB2DDA4", VA = "0xB2DDA4")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x60004C3")]
	[Address(RVA = "0xB2DEAC", Offset = "0xB2DEAC", VA = "0xB2DEAC")]
	public void AddLevel(Level level)
	{
	}

	[Token(Token = "0x60004C4")]
	[Address(RVA = "0xB2DF74", Offset = "0xB2DF74", VA = "0xB2DF74")]
	public void AddLevels(List<Level> levels)
	{
	}

	[Token(Token = "0x60004C5")]
	[Address(RVA = "0xB2E0E8", Offset = "0xB2E0E8", VA = "0xB2E0E8")]
	public bool HasLevel(string id)
	{
		return default(bool);
	}

	[Token(Token = "0x60004C6")]
	[Address(RVA = "0xB2E1C8", Offset = "0xB2E1C8", VA = "0xB2E1C8")]
	public bool TryGetLevel(string id, out Level level)
	{
		return default(bool);
	}

	[Token(Token = "0x60004C7")]
	[Address(RVA = "0xB2E34C", Offset = "0xB2E34C", VA = "0xB2E34C")]
	public void Clear()
	{
	}

	[Token(Token = "0x60004C8")]
	[Address(RVA = "0xB2E4D4", Offset = "0xB2E4D4", VA = "0xB2E4D4")]
	public void SetAllProgress(Progress progress)
	{
	}

	[Token(Token = "0x60004C9")]
	[Address(RVA = "0xB2E648", Offset = "0xB2E648", VA = "0xB2E648")]
	public PlaytestLevelsModel()
	{
	}
}
[Serializable]
[Token(Token = "0x200011B")]
public class PlaytestMetaData
{
	[Token(Token = "0x400042D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string puzzleTestName;

	[Token(Token = "0x400042E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int weekIndex;

	[Token(Token = "0x400042F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string mainText;

	[Token(Token = "0x4000430")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string subText;

	[Token(Token = "0x4000431")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public string mainTextResolved;

	[Token(Token = "0x4000432")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public string subTextResolved;

	[Token(Token = "0x60004CC")]
	[Address(RVA = "0xB2E710", Offset = "0xB2E710", VA = "0xB2E710")]
	public PlaytestMetaData()
	{
	}
}
[Token(Token = "0x200011C")]
public class RestrictRotationValue : ObservableValue<bool>
{
	[Token(Token = "0x4000433")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool _restrictRotation;

	[Token(Token = "0x60004CD")]
	[Address(RVA = "0xB2E784", Offset = "0xB2E784", VA = "0xB2E784", Slot = "4")]
	public override bool Get()
	{
		return default(bool);
	}

	[Token(Token = "0x60004CE")]
	[Address(RVA = "0xB2E78C", Offset = "0xB2E78C", VA = "0xB2E78C", Slot = "5")]
	public override void Set(bool value)
	{
	}

	[Token(Token = "0x60004CF")]
	[Address(RVA = "0xB2E7F4", Offset = "0xB2E7F4", VA = "0xB2E7F4")]
	public RestrictRotationValue()
	{
	}
}
[Serializable]
[Token(Token = "0x200011D")]
public class SaveFileModel
{
	[Token(Token = "0x4000435")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private int _profileIndex;

	[Token(Token = "0x4000436")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private List<ProgressData> _progressDataDebug;

	[Token(Token = "0x4000437")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Dictionary<int, ProgressData> _progressData;

	[Token(Token = "0x4000438")]
	private const string SaveFilePref = "ActivePlayerProfileIndex";

	[Token(Token = "0x1700005E")]
	public int profileIndex
	{
		[Token(Token = "0x60004D2")]
		[Address(RVA = "0xC0E058", Offset = "0xC0E058", VA = "0xC0E058")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60004D3")]
		[Address(RVA = "0xC0E0C0", Offset = "0xC0E0C0", VA = "0xC0E0C0")]
		set
		{
		}
	}

	[Token(Token = "0x1400003C")]
	public event Action<int> OnSaveFileIndexChanged
	{
		[Token(Token = "0x60004D0")]
		[Address(RVA = "0xC0DEF8", Offset = "0xC0DEF8", VA = "0xC0DEF8")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x60004D1")]
		[Address(RVA = "0xC0DFA8", Offset = "0xC0DFA8", VA = "0xC0DFA8")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x60004D4")]
	[Address(RVA = "0xC0E148", Offset = "0xC0E148", VA = "0xC0E148")]
	public void AddSaveFile(int index, ProgressData file)
	{
	}

	[Token(Token = "0x60004D5")]
	[Address(RVA = "0xC0E290", Offset = "0xC0E290", VA = "0xC0E290")]
	public bool HasSaveFile(int index)
	{
		return default(bool);
	}

	[Token(Token = "0x60004D6")]
	[Address(RVA = "0xC0E300", Offset = "0xC0E300", VA = "0xC0E300")]
	public List<ProgressData> GetProgressDataList()
	{
		return null;
	}

	[Token(Token = "0x60004D7")]
	[Address(RVA = "0xC0E36C", Offset = "0xC0E36C", VA = "0xC0E36C")]
	public ProgressData GetSaveFile(int index)
	{
		return null;
	}

	[Token(Token = "0x60004D8")]
	[Address(RVA = "0xC0E3DC", Offset = "0xC0E3DC", VA = "0xC0E3DC")]
	public void RemoveSaveFile(int index)
	{
	}

	[Token(Token = "0x60004D9")]
	[Address(RVA = "0xC0E4C8", Offset = "0xC0E4C8", VA = "0xC0E4C8")]
	public SaveFileModel()
	{
	}
}
[Token(Token = "0x200011E")]
public class Saving
{
	[Token(Token = "0x4000439")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static string _pathToAudio;

	[Token(Token = "0x60004DA")]
	[Address(RVA = "0xC0E588", Offset = "0xC0E588", VA = "0xC0E588")]
	public static void SaveAudioJson(StageSet stageSet, string name)
	{
	}

	[Token(Token = "0x60004DB")]
	[Address(RVA = "0xC0E6F4", Offset = "0xC0E6F4", VA = "0xC0E6F4")]
	private static JSONObject StagesToChordJson(StageSet stageSet)
	{
		return null;
	}

	[Token(Token = "0x60004DC")]
	[Address(RVA = "0xC0E95C", Offset = "0xC0E95C", VA = "0xC0E95C")]
	private static JSONNode StageToChordJson(Stage stage)
	{
		return null;
	}

	[Token(Token = "0x60004DD")]
	[Address(RVA = "0xC0EBB4", Offset = "0xC0EBB4", VA = "0xC0EBB4")]
	private static JSONArray LevelToChordJson(Level level)
	{
		return null;
	}

	[Token(Token = "0x60004DE")]
	[Address(RVA = "0xC0ED00", Offset = "0xC0ED00", VA = "0xC0ED00")]
	private static JSONArray LevelToMenuNotesJson(Level level)
	{
		return null;
	}

	[Token(Token = "0x60004DF")]
	[Address(RVA = "0xC0EE08", Offset = "0xC0EE08", VA = "0xC0EE08")]
	public Saving()
	{
	}
}
[Token(Token = "0x200011F")]
public static class BinarySaver
{
	[Token(Token = "0x400043A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static string fileExtention;

	[Token(Token = "0x60004E1")]
	public static void Save<T>(T data, string savePath)
	{
	}

	[Token(Token = "0x60004E2")]
	[Address(RVA = "0xC0EE70", Offset = "0xC0EE70", VA = "0xC0EE70")]
	public static bool SaveExists(string savePath)
	{
		return default(bool);
	}

	[Token(Token = "0x60004E3")]
	public static T Load<T>(string savePath)
	{
		return (T)null;
	}

	[Token(Token = "0x60004E4")]
	[Address(RVA = "0xC0EE78", Offset = "0xC0EE78", VA = "0xC0EE78")]
	public static void DeleteSaveFile(string savePath)
	{
	}
}
[Token(Token = "0x2000120")]
public class CustomPuzzleProgressSaver
{
	[Token(Token = "0x400043B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static State _state;

	[Token(Token = "0x400043C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static CustomLevelProgress _progress;

	[Token(Token = "0x60004E6")]
	[Address(RVA = "0xC0EFA4", Offset = "0xC0EFA4", VA = "0xC0EFA4")]
	public static void Setup(State state)
	{
	}

	[Token(Token = "0x60004E7")]
	[Address(RVA = "0xC0EFF0", Offset = "0xC0EFF0", VA = "0xC0EFF0")]
	public static bool HasProgress()
	{
		return default(bool);
	}

	[Token(Token = "0x60004E8")]
	[Address(RVA = "0xC0F09C", Offset = "0xC0F09C", VA = "0xC0F09C")]
	public static bool HasProgress(string levelId)
	{
		return default(bool);
	}

	[Token(Token = "0x60004E9")]
	[Address(RVA = "0xC0F28C", Offset = "0xC0F28C", VA = "0xC0F28C")]
	public static CustomLevelProgress LoadAllProgress()
	{
		return null;
	}

	[Token(Token = "0x60004EA")]
	[Address(RVA = "0xC0F300", Offset = "0xC0F300", VA = "0xC0F300")]
	public static bool TryLoadProgress(string levelId, out LevelProgress progress)
	{
		return default(bool);
	}

	[Token(Token = "0x60004EB")]
	[Address(RVA = "0xC0F378", Offset = "0xC0F378", VA = "0xC0F378")]
	public static bool LoadAndSetProgress()
	{
		return default(bool);
	}

	[Token(Token = "0x60004EC")]
	[Address(RVA = "0xC0F87C", Offset = "0xC0F87C", VA = "0xC0F87C")]
	public static void SaveProgress()
	{
	}

	[Token(Token = "0x60004ED")]
	[Address(RVA = "0xC0F050", Offset = "0xC0F050", VA = "0xC0F050")]
	private static string GetPath()
	{
		return null;
	}

	[Token(Token = "0x60004EE")]
	[Address(RVA = "0xC0FCF4", Offset = "0xC0FCF4", VA = "0xC0FCF4")]
	public CustomPuzzleProgressSaver()
	{
	}
}
[Token(Token = "0x2000121")]
public class GeneralData : MonoBehaviour
{
	[Token(Token = "0x60004EF")]
	[Address(RVA = "0xC0FCFC", Offset = "0xC0FCFC", VA = "0xC0FCFC")]
	private void Start()
	{
	}

	[Token(Token = "0x60004F0")]
	[Address(RVA = "0xC0FD00", Offset = "0xC0FD00", VA = "0xC0FD00")]
	private void Update()
	{
	}

	[Token(Token = "0x60004F1")]
	[Address(RVA = "0xC0FD04", Offset = "0xC0FD04", VA = "0xC0FD04")]
	public GeneralData()
	{
	}
}
[Token(Token = "0x2000122")]
public class MainProgressSaver
{
	[Token(Token = "0x400043E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static State _state;

	[Token(Token = "0x1400003D")]
	public static event Action OnProgressLoaded
	{
		[Token(Token = "0x60004F2")]
		[Address(RVA = "0xC0FD0C", Offset = "0xC0FD0C", VA = "0xC0FD0C")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x60004F3")]
		[Address(RVA = "0xC0FDC4", Offset = "0xC0FDC4", VA = "0xC0FDC4")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x60004F4")]
	[Address(RVA = "0xC0FE7C", Offset = "0xC0FE7C", VA = "0xC0FE7C")]
	public static void Setup(State state)
	{
	}

	[Token(Token = "0x60004F5")]
	[Address(RVA = "0xC0FEC8", Offset = "0xC0FEC8", VA = "0xC0FEC8")]
	public static void MigrateOldSaveIfExists()
	{
	}

	[Token(Token = "0x60004F6")]
	[Address(RVA = "0xC10160", Offset = "0xC10160", VA = "0xC10160")]
	public static void SaveProgress()
	{
	}

	[Token(Token = "0x60004F7")]
	[Address(RVA = "0xC10A00", Offset = "0xC10A00", VA = "0xC10A00")]
	public static bool HasMainProgress()
	{
		return default(bool);
	}

	[Token(Token = "0x60004F8")]
	[Address(RVA = "0xC100C4", Offset = "0xC100C4", VA = "0xC100C4")]
	public static bool HasMainProgressOld()
	{
		return default(bool);
	}

	[Token(Token = "0x60004F9")]
	[Address(RVA = "0xC10A60", Offset = "0xC10A60", VA = "0xC10A60")]
	public static ProgressData LoadMainProgress()
	{
		return null;
	}

	[Token(Token = "0x60004FA")]
	[Address(RVA = "0xC10AD4", Offset = "0xC10AD4", VA = "0xC10AD4")]
	public static bool LoadMainProgressIfExists()
	{
		return default(bool);
	}

	[Token(Token = "0x60004FB")]
	[Address(RVA = "0xC113D8", Offset = "0xC113D8", VA = "0xC113D8")]
	public static void ClearProgress()
	{
	}

	[Token(Token = "0x60004FC")]
	[Address(RVA = "0xC1148C", Offset = "0xC1148C", VA = "0xC1148C")]
	public static void SaveLevelProgress(Level level)
	{
	}

	[Token(Token = "0x60004FD")]
	[Address(RVA = "0xC11778", Offset = "0xC11778", VA = "0xC11778")]
	public static bool HasLevelProgress(Level level)
	{
		return default(bool);
	}

	[Token(Token = "0x60004FE")]
	[Address(RVA = "0xC117E0", Offset = "0xC117E0", VA = "0xC117E0")]
	public static Progress LoadLevelProgress(Level level)
	{
		return default(Progress);
	}

	[Token(Token = "0x60004FF")]
	[Address(RVA = "0xC118EC", Offset = "0xC118EC", VA = "0xC118EC")]
	public static void ClearLevelProgress(Level level)
	{
	}

	[Token(Token = "0x6000500")]
	[Address(RVA = "0xC11968", Offset = "0xC11968", VA = "0xC11968")]
	private static string GetFileBody(Platform platform)
	{
		return null;
	}

	[Token(Token = "0x6000501")]
	[Address(RVA = "0xC11520", Offset = "0xC11520", VA = "0xC11520")]
	private static string GetLevelSaveFileName(Level level)
	{
		return null;
	}

	[Token(Token = "0x6000502")]
	[Address(RVA = "0xC109B4", Offset = "0xC109B4", VA = "0xC109B4")]
	private static string GetPath()
	{
		return null;
	}

	[Token(Token = "0x6000503")]
	[Address(RVA = "0xC10C90", Offset = "0xC10C90", VA = "0xC10C90")]
	private static bool LoadAndSetProgress()
	{
		return default(bool);
	}

	[Token(Token = "0x6000504")]
	[Address(RVA = "0xC11A04", Offset = "0xC11A04", VA = "0xC11A04")]
	private static void ApplyProgressToSet(List<StageProgress> stageProgressList, StageSet set)
	{
	}

	[Token(Token = "0x6000505")]
	[Address(RVA = "0xC10E18", Offset = "0xC10E18", VA = "0xC10E18")]
	private static void UnlockNewLevelsInUnlockedStages(StageSet set)
	{
	}

	[Token(Token = "0x6000506")]
	[Address(RVA = "0xC11DA4", Offset = "0xC11DA4", VA = "0xC11DA4")]
	public MainProgressSaver()
	{
	}
}
[Serializable]
[Token(Token = "0x2000123")]
public class ProgressData
{
	[Token(Token = "0x400043F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string version;

	[Token(Token = "0x4000440")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<StageProgress> stages;

	[Token(Token = "0x4000441")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<StageProgress> volumeTwo;

	[Token(Token = "0x6000507")]
	[Address(RVA = "0xC10284", Offset = "0xC10284", VA = "0xC10284")]
	public ProgressData(StageSet stageSet, StageSet volumeTwo)
	{
	}

	[Token(Token = "0x6000508")]
	[Address(RVA = "0xC121E4", Offset = "0xC121E4", VA = "0xC121E4")]
	public int SolvedLevels()
	{
		return default(int);
	}

	[Token(Token = "0x6000509")]
	[Address(RVA = "0xC12434", Offset = "0xC12434", VA = "0xC12434")]
	public int SolvedLevelsVol2()
	{
		return default(int);
	}
}
[Serializable]
[Token(Token = "0x2000124")]
public class StageProgress
{
	[Token(Token = "0x4000442")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string id;

	[Token(Token = "0x4000443")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string progress;

	[Token(Token = "0x4000444")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<LevelProgress> levels;

	[Token(Token = "0x600050A")]
	[Address(RVA = "0xC11DAC", Offset = "0xC11DAC", VA = "0xC11DAC")]
	public StageProgress(Stage stage)
	{
	}

	[Token(Token = "0x600050B")]
	[Address(RVA = "0xC12338", Offset = "0xC12338", VA = "0xC12338")]
	public int SolvedLevels()
	{
		return default(int);
	}
}
[Serializable]
[Token(Token = "0x2000126")]
public class LevelProgress
{
	[Token(Token = "0x4000447")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string id;

	[Token(Token = "0x4000448")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string name;

	[Token(Token = "0x4000449")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string progress;

	[Token(Token = "0x400044A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float timeSpent;

	[Token(Token = "0x400044B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float completionTime;

	[Token(Token = "0x600050F")]
	[Address(RVA = "0xC1258C", Offset = "0xC1258C", VA = "0xC1258C")]
	public LevelProgress(Level level)
	{
	}
}
[Serializable]
[Token(Token = "0x2000127")]
public class CustomLevelProgress
{
	[Token(Token = "0x400044C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public List<LevelProgress> levels;

	[Token(Token = "0x6000510")]
	[Address(RVA = "0xC0F958", Offset = "0xC0F958", VA = "0xC0F958")]
	public CustomLevelProgress(CustomLevelModel model, PlaytestLevelsModel playtestLevels)
	{
	}

	[Token(Token = "0x6000511")]
	[Address(RVA = "0xC0F108", Offset = "0xC0F108", VA = "0xC0F108")]
	public bool TryGetProgress(string id, out LevelProgress progress)
	{
		return default(bool);
	}
}
[Token(Token = "0x2000128")]
public class SceneModel
{
	[Token(Token = "0x400044D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public List<Vector3> roomCorners;

	[Token(Token = "0x400044E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float roomHeight;

	[Token(Token = "0x1700005F")]
	public Bounds cornerBounds
	{
		[Token(Token = "0x6000512")]
		[Address(RVA = "0xC12720", Offset = "0xC12720", VA = "0xC12720")]
		get
		{
			return default(Bounds);
		}
	}

	[Token(Token = "0x6000513")]
	[Address(RVA = "0xC12758", Offset = "0xC12758", VA = "0xC12758")]
	public SceneModel()
	{
	}
}
[Serializable]
[Token(Token = "0x2000129")]
public class SettingsModel
{
	[Token(Token = "0x4000450")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public BoolValue showFloorGrid;

	[Token(Token = "0x4000451")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public BoolValue restrictRotation;

	[Token(Token = "0x4000452")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public BoolValue nightMode;

	[Token(Token = "0x4000453")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public BoolValue advancedControls;

	[Token(Token = "0x4000454")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public BoolValue controllerSmoothing;

	[Token(Token = "0x4000455")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public BoolValue solvedSpawn;

	[Token(Token = "0x4000456")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public ColorThemeTypeValue colorTheme;

	[Token(Token = "0x4000457")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public IntValue refreshRate;

	[Token(Token = "0x4000458")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public BoolValue passthrough;

	[Token(Token = "0x4000459")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public BoolValue reprojectControllers;

	[Token(Token = "0x400045A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public BoolValue showVirtualHands;

	[Token(Token = "0x400045B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public FloatValue brightness;

	[Token(Token = "0x400045C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public FloatValue contrast;

	[Token(Token = "0x400045D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public FloatValue masterVolume;

	[Token(Token = "0x400045E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public FloatValue sfxVolume;

	[Token(Token = "0x400045F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public FloatValue musicVolume;

	[Token(Token = "0x4000460")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public BoolValue continuousMusicMode;

	[Token(Token = "0x4000461")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public BoolValue avatarVisible;

	[Token(Token = "0x4000462")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public BoolValue handsVisible;

	[Token(Token = "0x4000463")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public BoolValue handSmoothing;

	[Token(Token = "0x4000464")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public BoolValue hideHandsWhenTrackingLost;

	[Token(Token = "0x4000465")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public DebugModel debugModel;

	[Token(Token = "0x4000466")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public BoolValue enableEditor;

	[Token(Token = "0x4000467")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public EnumValue<Cubism.Hand> editingHand;

	[Token(Token = "0x4000468")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public BoolValue overrideLimits;

	[Token(Token = "0x4000469")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public BoolValue autoSelectPieceOnGrab;

	[Token(Token = "0x400046A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public BoolValue restrictPieceToGrid;

	[Token(Token = "0x400046B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public BoolValue shareWithDeveloper;

	[Token(Token = "0x1400003E")]
	public event Action OnEditingHandChanged
	{
		[Token(Token = "0x6000514")]
		[Address(RVA = "0xC127D4", Offset = "0xC127D4", VA = "0xC127D4")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000515")]
		[Address(RVA = "0xC12870", Offset = "0xC12870", VA = "0xC12870")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x6000516")]
	[Address(RVA = "0xC1290C", Offset = "0xC1290C", VA = "0xC1290C")]
	public SettingsModel()
	{
	}
}
[Serializable]
[Token(Token = "0x200012A")]
public class SpectatorCamModel
{
	[Token(Token = "0x4000475")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private SpectatorCam _camType;

	[Token(Token = "0x4000476")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private bool _ortho;

	[Token(Token = "0x4000477")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5D")]
	private bool _showUi;

	[Token(Token = "0x4000478")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5E")]
	private bool _showAvatar;

	[Token(Token = "0x4000479")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5F")]
	private bool _showHands;

	[Token(Token = "0x400047A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private SpectatorFieldOfView _fov;

	[Token(Token = "0x400047B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private bool _lockRoll;

	[Token(Token = "0x400047C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x65")]
	private bool _lockPitch;

	[Token(Token = "0x400047D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x66")]
	private bool _lockToCenter;

	[Token(Token = "0x400047E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x67")]
	private bool _snapYaw;

	[Token(Token = "0x400047F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private bool _orbit;

	[Token(Token = "0x17000060")]
	public SpectatorCam camType
	{
		[Token(Token = "0x6000529")]
		[Address(RVA = "0xC13948", Offset = "0xC13948", VA = "0xC13948")]
		get
		{
			return default(SpectatorCam);
		}
		[Token(Token = "0x600052A")]
		[Address(RVA = "0xC13950", Offset = "0xC13950", VA = "0xC13950")]
		set
		{
		}
	}

	[Token(Token = "0x17000061")]
	public bool ortho
	{
		[Token(Token = "0x600052B")]
		[Address(RVA = "0xC1397C", Offset = "0xC1397C", VA = "0xC1397C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600052C")]
		[Address(RVA = "0xC13984", Offset = "0xC13984", VA = "0xC13984")]
		set
		{
		}
	}

	[Token(Token = "0x17000062")]
	public bool showUi
	{
		[Token(Token = "0x600052D")]
		[Address(RVA = "0xC139B8", Offset = "0xC139B8", VA = "0xC139B8")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600052E")]
		[Address(RVA = "0xC139C0", Offset = "0xC139C0", VA = "0xC139C0")]
		set
		{
		}
	}

	[Token(Token = "0x17000063")]
	public bool showAvatar
	{
		[Token(Token = "0x600052F")]
		[Address(RVA = "0xC139F4", Offset = "0xC139F4", VA = "0xC139F4")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000530")]
		[Address(RVA = "0xC139FC", Offset = "0xC139FC", VA = "0xC139FC")]
		set
		{
		}
	}

	[Token(Token = "0x17000064")]
	public bool showHands
	{
		[Token(Token = "0x6000531")]
		[Address(RVA = "0xC13A30", Offset = "0xC13A30", VA = "0xC13A30")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000532")]
		[Address(RVA = "0xC13A38", Offset = "0xC13A38", VA = "0xC13A38")]
		set
		{
		}
	}

	[Token(Token = "0x17000065")]
	public SpectatorFieldOfView fov
	{
		[Token(Token = "0x6000533")]
		[Address(RVA = "0xC13A6C", Offset = "0xC13A6C", VA = "0xC13A6C")]
		get
		{
			return default(SpectatorFieldOfView);
		}
		[Token(Token = "0x6000534")]
		[Address(RVA = "0xC13A74", Offset = "0xC13A74", VA = "0xC13A74")]
		set
		{
		}
	}

	[Token(Token = "0x17000066")]
	public bool lockRoll
	{
		[Token(Token = "0x6000535")]
		[Address(RVA = "0xC13AA0", Offset = "0xC13AA0", VA = "0xC13AA0")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000536")]
		[Address(RVA = "0xC13AA8", Offset = "0xC13AA8", VA = "0xC13AA8")]
		set
		{
		}
	}

	[Token(Token = "0x17000067")]
	public bool lockPitch
	{
		[Token(Token = "0x6000537")]
		[Address(RVA = "0xC13ADC", Offset = "0xC13ADC", VA = "0xC13ADC")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000538")]
		[Address(RVA = "0xC13AE4", Offset = "0xC13AE4", VA = "0xC13AE4")]
		set
		{
		}
	}

	[Token(Token = "0x17000068")]
	public bool lockToCenter
	{
		[Token(Token = "0x6000539")]
		[Address(RVA = "0xC13B18", Offset = "0xC13B18", VA = "0xC13B18")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600053A")]
		[Address(RVA = "0xC13B20", Offset = "0xC13B20", VA = "0xC13B20")]
		set
		{
		}
	}

	[Token(Token = "0x17000069")]
	public bool snapYaw
	{
		[Token(Token = "0x600053B")]
		[Address(RVA = "0xC13B38", Offset = "0xC13B38", VA = "0xC13B38")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600053C")]
		[Address(RVA = "0xC13B40", Offset = "0xC13B40", VA = "0xC13B40")]
		set
		{
		}
	}

	[Token(Token = "0x1700006A")]
	public bool orbit
	{
		[Token(Token = "0x600053D")]
		[Address(RVA = "0xC13B58", Offset = "0xC13B58", VA = "0xC13B58")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600053E")]
		[Address(RVA = "0xC13B60", Offset = "0xC13B60", VA = "0xC13B60")]
		set
		{
		}
	}

	[Token(Token = "0x1400003F")]
	public event Action<SpectatorCam> onCamTypeChanged
	{
		[Token(Token = "0x6000517")]
		[Address(RVA = "0xC12CE8", Offset = "0xC12CE8", VA = "0xC12CE8")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000518")]
		[Address(RVA = "0xC12D98", Offset = "0xC12D98", VA = "0xC12D98")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x14000040")]
	public event Action<bool> onOrthoChanged
	{
		[Token(Token = "0x6000519")]
		[Address(RVA = "0xC12E48", Offset = "0xC12E48", VA = "0xC12E48")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x600051A")]
		[Address(RVA = "0xC12EF8", Offset = "0xC12EF8", VA = "0xC12EF8")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x14000041")]
	public event Action<bool> onShowUiChanged
	{
		[Token(Token = "0x600051B")]
		[Address(RVA = "0xC12FA8", Offset = "0xC12FA8", VA = "0xC12FA8")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x600051C")]
		[Address(RVA = "0xC13058", Offset = "0xC13058", VA = "0xC13058")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x14000042")]
	public event Action<bool> onShowAvatarChanged
	{
		[Token(Token = "0x600051D")]
		[Address(RVA = "0xC13108", Offset = "0xC13108", VA = "0xC13108")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x600051E")]
		[Address(RVA = "0xC131B8", Offset = "0xC131B8", VA = "0xC131B8")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x14000043")]
	public event Action<bool> onShowHands
	{
		[Token(Token = "0x600051F")]
		[Address(RVA = "0xC13268", Offset = "0xC13268", VA = "0xC13268")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000520")]
		[Address(RVA = "0xC13318", Offset = "0xC13318", VA = "0xC13318")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x14000044")]
	public event Action<SpectatorFieldOfView> onFovChanged
	{
		[Token(Token = "0x6000521")]
		[Address(RVA = "0xC133C8", Offset = "0xC133C8", VA = "0xC133C8")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000522")]
		[Address(RVA = "0xC13478", Offset = "0xC13478", VA = "0xC13478")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x14000045")]
	public event Action<bool> onLockRollChanged
	{
		[Token(Token = "0x6000523")]
		[Address(RVA = "0xC13528", Offset = "0xC13528", VA = "0xC13528")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000524")]
		[Address(RVA = "0xC135D8", Offset = "0xC135D8", VA = "0xC135D8")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x14000046")]
	public event Action<bool> onLockYawChanged
	{
		[Token(Token = "0x6000525")]
		[Address(RVA = "0xC13688", Offset = "0xC13688", VA = "0xC13688")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000526")]
		[Address(RVA = "0xC13738", Offset = "0xC13738", VA = "0xC13738")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x14000047")]
	public event Action<bool> onOrbitChanged
	{
		[Token(Token = "0x6000527")]
		[Address(RVA = "0xC137E8", Offset = "0xC137E8", VA = "0xC137E8")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000528")]
		[Address(RVA = "0xC13898", Offset = "0xC13898", VA = "0xC13898")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x600053F")]
	[Address(RVA = "0xC13B94", Offset = "0xC13B94", VA = "0xC13B94")]
	public SpectatorCamModel()
	{
	}
}
[Token(Token = "0x200012B")]
public class StageModel : MonoBehaviour
{
	[Token(Token = "0x4000483")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public int index;

	[Token(Token = "0x4000484")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public int levelsToUnlock;

	[Token(Token = "0x4000485")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public List<LevelModel> levels;

	[Token(Token = "0x4000486")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool _unlocked;

	[Token(Token = "0x4000487")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private ActiveLevelService _activeLevelService;

	[Token(Token = "0x4000488")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private PuzzleLoader _puzzleLoader;

	[Token(Token = "0x1700006B")]
	public bool unLocked
	{
		[Token(Token = "0x6000546")]
		[Address(RVA = "0xC13F5C", Offset = "0xC13F5C", VA = "0xC13F5C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000547")]
		[Address(RVA = "0xC14000", Offset = "0xC14000", VA = "0xC14000")]
		set
		{
		}
	}

	[Token(Token = "0x14000048")]
	public event Action onProgressCleared
	{
		[Token(Token = "0x6000540")]
		[Address(RVA = "0xC13BB4", Offset = "0xC13BB4", VA = "0xC13BB4")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000541")]
		[Address(RVA = "0xC13C50", Offset = "0xC13C50", VA = "0xC13C50")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x14000049")]
	public event Action onUnlock
	{
		[Token(Token = "0x6000542")]
		[Address(RVA = "0xC13CEC", Offset = "0xC13CEC", VA = "0xC13CEC")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000543")]
		[Address(RVA = "0xC13D88", Offset = "0xC13D88", VA = "0xC13D88")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x1400004A")]
	public event Action onCompleted
	{
		[Token(Token = "0x6000544")]
		[Address(RVA = "0xC13E24", Offset = "0xC13E24", VA = "0xC13E24")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000545")]
		[Address(RVA = "0xC13EC0", Offset = "0xC13EC0", VA = "0xC13EC0")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x6000548")]
	[Address(RVA = "0xC142AC", Offset = "0xC142AC", VA = "0xC142AC")]
	public StageModel(int index, ActiveLevelService activeLevelService, PuzzleLoader puzzleLoader)
	{
	}

	[Token(Token = "0x6000549")]
	[Address(RVA = "0xC14354", Offset = "0xC14354", VA = "0xC14354")]
	public void PopulateLevels(JSONNode data)
	{
	}

	[Token(Token = "0x600054A")]
	[Address(RVA = "0xC14518", Offset = "0xC14518", VA = "0xC14518")]
	public void UpdateStageCompletion()
	{
	}

	[Token(Token = "0x600054B")]
	[Address(RVA = "0xC14634", Offset = "0xC14634", VA = "0xC14634")]
	public int GetCompletedLevels()
	{
		return default(int);
	}

	[Token(Token = "0x600054C")]
	[Address(RVA = "0xC14790", Offset = "0xC14790", VA = "0xC14790")]
	public void ClearProgress()
	{
	}

	[Token(Token = "0x600054D")]
	[Address(RVA = "0xC14928", Offset = "0xC14928", VA = "0xC14928")]
	public void UnlockAll()
	{
	}

	[Token(Token = "0x600054E")]
	[Address(RVA = "0xC14A78", Offset = "0xC14A78", VA = "0xC14A78")]
	public void SolveAll()
	{
	}

	[Token(Token = "0x600054F")]
	[Address(RVA = "0xC145DC", Offset = "0xC145DC", VA = "0xC145DC")]
	private bool GetStageCompleted()
	{
		return default(bool);
	}

	[Token(Token = "0x6000550")]
	[Address(RVA = "0xC14098", Offset = "0xC14098", VA = "0xC14098")]
	private void FireOnUnlockEvent()
	{
	}

	[Token(Token = "0x6000551")]
	[Address(RVA = "0xC1415C", Offset = "0xC1415C", VA = "0xC1415C")]
	private void UnlockStageLevels()
	{
	}
}
[Serializable]
[Token(Token = "0x200012C")]
public class State
{
	[Token(Token = "0x4000489")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public DataSet dataSet;

	[Token(Token = "0x400048A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public StageSet mainStageSet;

	[Token(Token = "0x400048B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public StageSet volumeTwo;

	[Token(Token = "0x400048C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public DlcStageSet dlcOne;

	[Token(Token = "0x400048D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameState gameState;

	[Token(Token = "0x400048E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public SaveFileModel saveFileModel;

	[Token(Token = "0x400048F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public PlayerVariables playerVariables;

	[Token(Token = "0x4000490")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public ActiveLevel activeLevel;

	[Token(Token = "0x4000491")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public SettingsModel settings;

	[Token(Token = "0x4000492")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public InputModel input;

	[Token(Token = "0x4000493")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public CustomLevelModel customLevels;

	[Token(Token = "0x4000494")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public PlaytestLevelsModel playtestLevels;

	[Token(Token = "0x4000495")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public TutorialModel tutorialModel;

	[Token(Token = "0x4000496")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public CalibrationModel calibrationModel;

	[Token(Token = "0x4000497")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public SpectatorCamModel spectatorCam;

	[Token(Token = "0x4000498")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public ColorThemeModel colorThemeModel;

	[Token(Token = "0x4000499")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public EditorModel editorModel;

	[Token(Token = "0x400049A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public UserModel userModel;

	[Token(Token = "0x400049B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public UndoModel undoModel;

	[Token(Token = "0x400049C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public CommunityLevelModel communityLevels;

	[Token(Token = "0x400049D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public SceneModel sceneModel;

	[Token(Token = "0x400049E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static State instance;

	[Token(Token = "0x6000552")]
	[Address(RVA = "0xC14BC8", Offset = "0xC14BC8", VA = "0xC14BC8")]
	public bool ActiveLevelInActiveStageSet()
	{
		return default(bool);
	}

	[Token(Token = "0x6000553")]
	[Address(RVA = "0xC14C00", Offset = "0xC14C00", VA = "0xC14C00")]
	public State()
	{
	}
}
[Token(Token = "0x200012D")]
public class StateBehaviour : SetupableBehaviour
{
	[Token(Token = "0x400049F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private State _state;

	[Token(Token = "0x1700006C")]
	protected State state
	{
		[Token(Token = "0x6000554")]
		[Address(RVA = "0xC14FF8", Offset = "0xC14FF8", VA = "0xC14FF8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000555")]
	[Address(RVA = "0xC15050", Offset = "0xC15050", VA = "0xC15050")]
	public new void Setup()
	{
	}

	[Token(Token = "0x6000556")]
	[Address(RVA = "0xC15074", Offset = "0xC15074", VA = "0xC15074", Slot = "5")]
	protected virtual void ForceSetup()
	{
	}

	[Token(Token = "0x6000557")]
	[Address(RVA = "0xC15078", Offset = "0xC15078", VA = "0xC15078")]
	public StateBehaviour()
	{
	}
}
[Token(Token = "0x200012E")]
public class StateBehaviourInitializer : MonoBehaviour
{
	[Token(Token = "0x6000558")]
	[Address(RVA = "0xC15080", Offset = "0xC15080", VA = "0xC15080")]
	public void SetupStateBehaviours(State state)
	{
	}

	[Token(Token = "0x6000559")]
	[Address(RVA = "0xC15194", Offset = "0xC15194", VA = "0xC15194")]
	public StateBehaviourInitializer()
	{
	}
}
[Token(Token = "0x200012F")]
public class StringValue : ObservableValue<string>
{
	[Token(Token = "0x40004A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private string _value;

	[Token(Token = "0x600055A")]
	[Address(RVA = "0xC1519C", Offset = "0xC1519C", VA = "0xC1519C")]
	public StringValue(string defaultValue)
	{
	}

	[Token(Token = "0x600055B")]
	[Address(RVA = "0xC151F8", Offset = "0xC151F8", VA = "0xC151F8", Slot = "4")]
	public override string Get()
	{
		return null;
	}

	[Token(Token = "0x600055C")]
	[Address(RVA = "0xC15200", Offset = "0xC15200", VA = "0xC15200", Slot = "5")]
	public override void Set(string value)
	{
	}
}
[Serializable]
[Token(Token = "0x2000130")]
public class TutorialModel
{
	[Token(Token = "0x40004A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private bool _firstTimeIntoCompleted;

	[Token(Token = "0x40004A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	[SerializeField]
	private bool _introStepsCompleted;

	[Token(Token = "0x1700006D")]
	public bool firstTimeIntoCompleted
	{
		[Token(Token = "0x6000561")]
		[Address(RVA = "0xC154E8", Offset = "0xC154E8", VA = "0xC154E8")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000562")]
		[Address(RVA = "0xC154F0", Offset = "0xC154F0", VA = "0xC154F0")]
		set
		{
		}
	}

	[Token(Token = "0x1700006E")]
	public bool introStepsCompleted
	{
		[Token(Token = "0x6000563")]
		[Address(RVA = "0xC15520", Offset = "0xC15520", VA = "0xC15520")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000564")]
		[Address(RVA = "0xC15528", Offset = "0xC15528", VA = "0xC15528")]
		set
		{
		}
	}

	[Token(Token = "0x1400004B")]
	public event Action OnIntroCompleted
	{
		[Token(Token = "0x600055D")]
		[Address(RVA = "0xC15278", Offset = "0xC15278", VA = "0xC15278")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x600055E")]
		[Address(RVA = "0xC15314", Offset = "0xC15314", VA = "0xC15314")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x1400004C")]
	public event Action OnIntroStepsCompleted
	{
		[Token(Token = "0x600055F")]
		[Address(RVA = "0xC153B0", Offset = "0xC153B0", VA = "0xC153B0")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000560")]
		[Address(RVA = "0xC1544C", Offset = "0xC1544C", VA = "0xC1544C")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x6000565")]
	[Address(RVA = "0xC14FA0", Offset = "0xC14FA0", VA = "0xC14FA0")]
	public TutorialModel()
	{
	}
}
[Serializable]
[Token(Token = "0x2000131")]
public class UserModel
{
	[Token(Token = "0x40004A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private string _userName;

	[Token(Token = "0x40004A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private ulong _id;

	[Token(Token = "0x1700006F")]
	public string userName
	{
		[Token(Token = "0x600056A")]
		[Address(RVA = "0xC15818", Offset = "0xC15818", VA = "0xC15818")]
		get
		{
			return null;
		}
		[Token(Token = "0x600056B")]
		[Address(RVA = "0xC15820", Offset = "0xC15820", VA = "0xC15820")]
		set
		{
		}
	}

	[Token(Token = "0x17000070")]
	public ulong id
	{
		[Token(Token = "0x600056C")]
		[Address(RVA = "0xC15900", Offset = "0xC15900", VA = "0xC15900")]
		get
		{
			return default(ulong);
		}
		[Token(Token = "0x600056D")]
		[Address(RVA = "0xC15908", Offset = "0xC15908", VA = "0xC15908")]
		set
		{
		}
	}

	[Token(Token = "0x1400004D")]
	public event Action<string> OnUserNameChanged
	{
		[Token(Token = "0x6000566")]
		[Address(RVA = "0xC15558", Offset = "0xC15558", VA = "0xC15558")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000567")]
		[Address(RVA = "0xC15608", Offset = "0xC15608", VA = "0xC15608")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x1400004E")]
	public event Action<ulong> OnIdChanged
	{
		[Token(Token = "0x6000568")]
		[Address(RVA = "0xC156B8", Offset = "0xC156B8", VA = "0xC156B8")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000569")]
		[Address(RVA = "0xC15768", Offset = "0xC15768", VA = "0xC15768")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x600056E")]
	[Address(RVA = "0xC14FA8", Offset = "0xC14FA8", VA = "0xC14FA8")]
	public UserModel()
	{
	}
}
[Token(Token = "0x2000132")]
public class VolumeBars : MonoBehaviour
{
	[Token(Token = "0x40004A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private int _volumeLevel;

	[Token(Token = "0x40004AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Material _onMaterial;

	[Token(Token = "0x40004AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Material _offMaterial;

	[Token(Token = "0x40004AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Renderer[] _bars;

	[Token(Token = "0x17000071")]
	public int volumeLevel
	{
		[Token(Token = "0x600056F")]
		[Address(RVA = "0xC159FC", Offset = "0xC159FC", VA = "0xC159FC")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000570")]
		[Address(RVA = "0xC15A04", Offset = "0xC15A04", VA = "0xC15A04")]
		set
		{
		}
	}

	[Token(Token = "0x6000571")]
	[Address(RVA = "0xC15AC0", Offset = "0xC15AC0", VA = "0xC15AC0")]
	public int LevelCount()
	{
		return default(int);
	}

	[Token(Token = "0x6000572")]
	[Address(RVA = "0xC15A40", Offset = "0xC15A40", VA = "0xC15A40")]
	private void UpdateBars()
	{
	}

	[Token(Token = "0x6000573")]
	[Address(RVA = "0xC15ADC", Offset = "0xC15ADC", VA = "0xC15ADC")]
	public VolumeBars()
	{
	}
}
[Token(Token = "0x2000133")]
public class PieceCollection : MonoBehaviour
{
	[Token(Token = "0x2000135")]
	[CompilerGenerated]
	private sealed class <EnablePiecesInSequence>d__51 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40004BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40004BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40004C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PieceCollection <>4__this;

		[Token(Token = "0x40004C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float waitBetween;

		[Token(Token = "0x40004C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Dictionary<string, PieceView>.Enumerator <>7__wrap1;

		[Token(Token = "0x17000072")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60005AD")]
			[Address(RVA = "0xC1A89C", Offset = "0xC1A89C", VA = "0xC1A89C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000073")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60005AF")]
			[Address(RVA = "0xC1A8E4", Offset = "0xC1A8E4", VA = "0xC1A8E4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60005A9")]
		[Address(RVA = "0xC1986C", Offset = "0xC1986C", VA = "0xC1986C")]
		[DebuggerHidden]
		public <EnablePiecesInSequence>d__51(int <>1__state)
		{
		}

		[Token(Token = "0x60005AA")]
		[Address(RVA = "0xC1A5F8", Offset = "0xC1A5F8", VA = "0xC1A5F8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60005AB")]
		[Address(RVA = "0xC1A614", Offset = "0xC1A614", VA = "0xC1A614", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60005AC")]
		[Address(RVA = "0xC1A84C", Offset = "0xC1A84C", VA = "0xC1A84C")]
		private void <>m__Finally1()
		{
		}

		[Token(Token = "0x60005AE")]
		[Address(RVA = "0xC1A8A4", Offset = "0xC1A8A4", VA = "0xC1A8A4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40004B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Grid _grid;

	[Token(Token = "0x40004B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Transform _worldPiecesParent;

	[Token(Token = "0x40004B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Transform _gridPiecesParent;

	[Token(Token = "0x40004B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Dictionary<string, PieceView> pieces;

	[Token(Token = "0x40004B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	[Header("Debug")]
	private PieceView _selectedPieceView;

	[Token(Token = "0x40004B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private State _state;

	[Token(Token = "0x40004B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Mode[] _flashingStates;

	[Token(Token = "0x1400004F")]
	public event Action<string> OnPieceAdded
	{
		[Token(Token = "0x6000574")]
		[Address(RVA = "0xC15AEC", Offset = "0xC15AEC", VA = "0xC15AEC")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000575")]
		[Address(RVA = "0xC15B9C", Offset = "0xC15B9C", VA = "0xC15B9C")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x14000050")]
	public event Action<string> OnPieceRemoved
	{
		[Token(Token = "0x6000576")]
		[Address(RVA = "0xC15C4C", Offset = "0xC15C4C", VA = "0xC15C4C")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000577")]
		[Address(RVA = "0xC15CFC", Offset = "0xC15CFC", VA = "0xC15CFC")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x14000051")]
	public event Action<string> OnPieceSelected
	{
		[Token(Token = "0x6000578")]
		[Address(RVA = "0xC15DAC", Offset = "0xC15DAC", VA = "0xC15DAC")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000579")]
		[Address(RVA = "0xC15E5C", Offset = "0xC15E5C", VA = "0xC15E5C")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x14000052")]
	public event Action OnPieceAddedToGrid
	{
		[Token(Token = "0x600057A")]
		[Address(RVA = "0xC15F0C", Offset = "0xC15F0C", VA = "0xC15F0C")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x600057B")]
		[Address(RVA = "0xC15FA8", Offset = "0xC15FA8", VA = "0xC15FA8")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x14000053")]
	public event Action OnPieceRemovedFromGrid
	{
		[Token(Token = "0x600057C")]
		[Address(RVA = "0xC16044", Offset = "0xC16044", VA = "0xC16044")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x600057D")]
		[Address(RVA = "0xC160E0", Offset = "0xC160E0", VA = "0xC160E0")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x600057E")]
	[Address(RVA = "0xC1617C", Offset = "0xC1617C", VA = "0xC1617C")]
	public void Setup(State state)
	{
	}

	[Token(Token = "0x600057F")]
	[Address(RVA = "0xC16218", Offset = "0xC16218", VA = "0xC16218")]
	public PieceView CreatePiece(Piece piece, bool onGrid = false, bool spawnEdges = true)
	{
		return null;
	}

	[Token(Token = "0x6000580")]
	[Address(RVA = "0xC168F4", Offset = "0xC168F4", VA = "0xC168F4")]
	private void CheckToRemovePiece(string id)
	{
	}

	[Token(Token = "0x6000581")]
	[Address(RVA = "0xC16AF4", Offset = "0xC16AF4", VA = "0xC16AF4")]
	public bool HasSelected()
	{
		return default(bool);
	}

	[Token(Token = "0x6000582")]
	[Address(RVA = "0xC16B54", Offset = "0xC16B54", VA = "0xC16B54")]
	public PieceView GetSelectedPiece()
	{
		return null;
	}

	[Token(Token = "0x6000583")]
	[Address(RVA = "0xC16B5C", Offset = "0xC16B5C", VA = "0xC16B5C")]
	public PieceView Get(string id)
	{
		return null;
	}

	[Token(Token = "0x6000584")]
	[Address(RVA = "0xC16BF0", Offset = "0xC16BF0", VA = "0xC16BF0")]
	public bool HasPiece(string id)
	{
		return default(bool);
	}

	[Token(Token = "0x6000585")]
	[Address(RVA = "0xC16C48", Offset = "0xC16C48", VA = "0xC16C48")]
	public bool HasPiece(PieceView piece)
	{
		return default(bool);
	}

	[Token(Token = "0x6000586")]
	[Address(RVA = "0xC16CA0", Offset = "0xC16CA0", VA = "0xC16CA0")]
	public void SelectPiece(string id)
	{
	}

	[Token(Token = "0x6000587")]
	[Address(RVA = "0xC16D84", Offset = "0xC16D84", VA = "0xC16D84")]
	public void DeselectCurrentSelectedPiece()
	{
	}

	[Token(Token = "0x6000588")]
	[Address(RVA = "0xC16D8C", Offset = "0xC16D8C", VA = "0xC16D8C")]
	public int PiecesWithColor(Color color)
	{
		return default(int);
	}

	[Token(Token = "0x6000589")]
	[Address(RVA = "0xC168F8", Offset = "0xC168F8", VA = "0xC168F8")]
	public void RemovePiece(string id)
	{
	}

	[Token(Token = "0x600058A")]
	[Address(RVA = "0xC174C0", Offset = "0xC174C0", VA = "0xC174C0")]
	public void DeleteSelected()
	{
	}

	[Token(Token = "0x600058B")]
	[Address(RVA = "0xC174DC", Offset = "0xC174DC", VA = "0xC174DC")]
	public List<PieceView> GetAllPieces()
	{
		return null;
	}

	[Token(Token = "0x600058C")]
	[Address(RVA = "0xC17548", Offset = "0xC17548", VA = "0xC17548")]
	public List<PieceView> GetLoosePieces()
	{
		return null;
	}

	[Token(Token = "0x600058D")]
	[Address(RVA = "0xC177B8", Offset = "0xC177B8", VA = "0xC177B8")]
	public List<PieceView> GetPlacedPieces()
	{
		return null;
	}

	[Token(Token = "0x600058E")]
	[Address(RVA = "0xC17904", Offset = "0xC17904", VA = "0xC17904")]
	public void Clear()
	{
	}

	[Token(Token = "0x600058F")]
	[Address(RVA = "0xC17B14", Offset = "0xC17B14", VA = "0xC17B14")]
	public void ClearEmptyPieces()
	{
	}

	[Token(Token = "0x6000590")]
	[Address(RVA = "0xC17F5C", Offset = "0xC17F5C", VA = "0xC17F5C")]
	public void ClearOffGridPieces()
	{
	}

	[Token(Token = "0x6000591")]
	[Address(RVA = "0xC182B4", Offset = "0xC182B4", VA = "0xC182B4")]
	public int Count()
	{
		return default(int);
	}

	[Token(Token = "0x6000592")]
	[Address(RVA = "0xC18304", Offset = "0xC18304", VA = "0xC18304")]
	public int SegmentCount()
	{
		return default(int);
	}

	[Token(Token = "0x6000593")]
	[Address(RVA = "0xC18498", Offset = "0xC18498", VA = "0xC18498")]
	public int CountOnGrid()
	{
		return default(int);
	}

	[Token(Token = "0x6000594")]
	[Address(RVA = "0xC185C0", Offset = "0xC185C0", VA = "0xC185C0")]
	public int CountOffGrid()
	{
		return default(int);
	}

	[Token(Token = "0x6000595")]
	[Address(RVA = "0xC186E8", Offset = "0xC186E8", VA = "0xC186E8")]
	public bool HasMisplacedPieces()
	{
		return default(bool);
	}

	[Token(Token = "0x6000596")]
	[Address(RVA = "0xC18C58", Offset = "0xC18C58", VA = "0xC18C58")]
	public void TranslateAllLoosePieces(Vector3 translation)
	{
	}

	[Token(Token = "0x6000597")]
	[Address(RVA = "0xC18E2C", Offset = "0xC18E2C", VA = "0xC18E2C")]
	public void RotateAllLoosePiecesAround(float angle, Vector3 origin)
	{
	}

	[Token(Token = "0x6000598")]
	[Address(RVA = "0xC19030", Offset = "0xC19030", VA = "0xC19030")]
	public void SetPiecesToPos(Vector3[] pos)
	{
	}

	[Token(Token = "0x6000599")]
	[Address(RVA = "0xC19304", Offset = "0xC19304", VA = "0xC19304")]
	public void FlashPieces()
	{
	}

	[Token(Token = "0x600059A")]
	[Address(RVA = "0xC19634", Offset = "0xC19634", VA = "0xC19634")]
	public void SetVisibleInSequence(bool visible)
	{
	}

	[Token(Token = "0x600059B")]
	[Address(RVA = "0xC19674", Offset = "0xC19674", VA = "0xC19674")]
	[IteratorStateMachine(typeof(<EnablePiecesInSequence>d__51))]
	private IEnumerator EnablePiecesInSequence(float waitBetween = 0.1f)
	{
		return null;
	}

	[Token(Token = "0x600059C")]
	[Address(RVA = "0xC196EC", Offset = "0xC196EC", VA = "0xC196EC")]
	public void SetPiecesVisiblity(bool visible)
	{
	}

	[Token(Token = "0x600059D")]
	[Address(RVA = "0xC19894", Offset = "0xC19894", VA = "0xC19894")]
	public void AddRotationToPieces()
	{
	}

	[Token(Token = "0x600059E")]
	[Address(RVA = "0xC19A24", Offset = "0xC19A24", VA = "0xC19A24")]
	public bool HasSegmentAtGridCellPos(Vector3 pos, bool markOnGrid = false, bool markOffGrid = false)
	{
		return default(bool);
	}

	[Token(Token = "0x600059F")]
	[Address(RVA = "0xC168D8", Offset = "0xC168D8", VA = "0xC168D8")]
	private void FireCreated(string id)
	{
	}

	[Token(Token = "0x60005A0")]
	[Address(RVA = "0xC16F54", Offset = "0xC16F54", VA = "0xC16F54")]
	private void FireRemoved(string id)
	{
	}

	[Token(Token = "0x60005A1")]
	[Address(RVA = "0xC1A404", Offset = "0xC1A404", VA = "0xC1A404")]
	private void FireRemovedOrAddedToGrid(bool onGrid)
	{
	}

	[Token(Token = "0x60005A2")]
	[Address(RVA = "0xC1A42C", Offset = "0xC1A42C", VA = "0xC1A42C")]
	public PieceCollection()
	{
	}
}
[Token(Token = "0x2000136")]
public class PieceCreation : VoxelCreation
{
	[Token(Token = "0x40004C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public PieceCollection pieceCollection;

	[Token(Token = "0x40004C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public LayerMask pieceLayer;

	[Token(Token = "0x40004C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public LayerMask gridLayer;

	[Token(Token = "0x60005B0")]
	[Address(RVA = "0xC1A8EC", Offset = "0xC1A8EC", VA = "0xC1A8EC")]
	public PieceView CreateNewPiece(bool onGrid, Color color)
	{
		return null;
	}

	[Token(Token = "0x60005B1")]
	[Address(RVA = "0xC1AAB4", Offset = "0xC1AAB4", VA = "0xC1AAB4", Slot = "7")]
	protected override Vector3 GetOffset()
	{
		return default(Vector3);
	}

	[Token(Token = "0x60005B2")]
	[Address(RVA = "0xC1AC70", Offset = "0xC1AC70", VA = "0xC1AC70", Slot = "9")]
	protected override void AddAction()
	{
	}

	[Token(Token = "0x60005B3")]
	[Address(RVA = "0xC1BA20", Offset = "0xC1BA20", VA = "0xC1BA20", Slot = "10")]
	protected override void RemoveAction()
	{
	}

	[Token(Token = "0x60005B4")]
	[Address(RVA = "0xC1B41C", Offset = "0xC1B41C", VA = "0xC1B41C")]
	private bool CanAddSegment()
	{
		return default(bool);
	}

	[Token(Token = "0x60005B5")]
	[Address(RVA = "0xC1C1F8", Offset = "0xC1C1F8", VA = "0xC1C1F8", Slot = "11")]
	protected override bool OverEmptyCell()
	{
		return default(bool);
	}

	[Token(Token = "0x60005B6")]
	[Address(RVA = "0xC1C2A8", Offset = "0xC1C2A8", VA = "0xC1C2A8", Slot = "8")]
	protected override bool IsActive()
	{
		return default(bool);
	}

	[Token(Token = "0x60005B7")]
	[Address(RVA = "0xC1C3A0", Offset = "0xC1C3A0", VA = "0xC1C3A0")]
	public PieceCreation()
	{
	}
}
[Token(Token = "0x2000137")]
public class PieceEdgeDrawer : MonoBehaviour
{
	[Token(Token = "0x40004C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform _edgesParent;

	[Token(Token = "0x60005B8")]
	[Address(RVA = "0xC1C3A8", Offset = "0xC1C3A8", VA = "0xC1C3A8")]
	public void Setup(PieceView pieceView)
	{
	}

	[Token(Token = "0x60005B9")]
	[Address(RVA = "0xC1C748", Offset = "0xC1C748", VA = "0xC1C748")]
	public void UnSubscribeIfSubscribed(PieceView pieceView)
	{
	}

	[Token(Token = "0x60005BA")]
	[Address(RVA = "0xC1C978", Offset = "0xC1C978", VA = "0xC1C978")]
	private void DrawSegmentEdges(PieceSegment segment)
	{
	}

	[Token(Token = "0x60005BB")]
	[Address(RVA = "0xC1C5AC", Offset = "0xC1C5AC", VA = "0xC1C5AC")]
	private void DrawSegmentEdges(PieceSegment segment, bool redrawNeighbors)
	{
	}

	[Token(Token = "0x60005BC")]
	[Address(RVA = "0xC1CB04", Offset = "0xC1CB04", VA = "0xC1CB04")]
	private void RemoveSegmentEdges(PieceSegment segment)
	{
	}

	[Token(Token = "0x60005BD")]
	[Address(RVA = "0xC1CAD0", Offset = "0xC1CAD0", VA = "0xC1CAD0")]
	private void RedrawNeighbourCells(PieceSegment segment)
	{
	}

	[Token(Token = "0x60005BE")]
	[Address(RVA = "0xC1CEA0", Offset = "0xC1CEA0", VA = "0xC1CEA0")]
	private void DrawNeighbors(PieceSegment segment)
	{
	}

	[Token(Token = "0x60005BF")]
	[Address(RVA = "0xC1C9A0", Offset = "0xC1C9A0", VA = "0xC1C9A0")]
	private void DrawEdges(PieceSegment s)
	{
	}

	[Token(Token = "0x60005C0")]
	[Address(RVA = "0xC1D058", Offset = "0xC1D058", VA = "0xC1D058")]
	private void CheckAndSpawnEdge(PieceSegment s, int x, int y, int z)
	{
	}

	[Token(Token = "0x60005C1")]
	[Address(RVA = "0xC1D344", Offset = "0xC1D344", VA = "0xC1D344")]
	private void SpawnLine(PieceSegment s, Vector3 pos1, Vector3 pos2)
	{
	}

	[Token(Token = "0x60005C2")]
	[Address(RVA = "0xC1D564", Offset = "0xC1D564", VA = "0xC1D564")]
	public PieceEdgeDrawer()
	{
	}
}
[Token(Token = "0x2000138")]
public struct DrawAction
{
	[Token(Token = "0x40004C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public PieceSegment segment;

	[Token(Token = "0x40004C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public bool redrawNeighbors;

	[Token(Token = "0x60005C3")]
	[Address(RVA = "0xC1D56C", Offset = "0xC1D56C", VA = "0xC1D56C")]
	public DrawAction(PieceSegment segment, bool redrawNeighbors)
	{
	}
}
[Token(Token = "0x2000139")]
public class PieceFunctions
{
	[Token(Token = "0x40004C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private PieceView _pieceView;

	[Token(Token = "0x40004CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Grid grid;

	[Token(Token = "0x60005C4")]
	[Address(RVA = "0xC1D57C", Offset = "0xC1D57C", VA = "0xC1D57C")]
	public PieceFunctions(PieceView pieceView, Grid grid)
	{
	}

	[Token(Token = "0x60005C5")]
	[Address(RVA = "0xC1D5A8", Offset = "0xC1D5A8", VA = "0xC1D5A8")]
	public void DrawDebugRays()
	{
	}

	[Token(Token = "0x60005C6")]
	[Address(RVA = "0xC1E700", Offset = "0xC1E700", VA = "0xC1E700")]
	public PieceSegment GetMostSnappableElement()
	{
		return null;
	}

	[Token(Token = "0x60005C7")]
	[Address(RVA = "0xC1D7FC", Offset = "0xC1D7FC", VA = "0xC1D7FC")]
	public PieceSegment GetMostSnappableElement(bool alwaysReturnElement)
	{
		return null;
	}

	[Token(Token = "0x60005C8")]
	[Address(RVA = "0xC1D9D0", Offset = "0xC1D9D0", VA = "0xC1D9D0")]
	public Vector3 GetClosestGlobalAxis(Vector3 f, bool excludeParallelAxis = false, [Optional] Vector3 parallelAxis)
	{
		return default(Vector3);
	}
}
[Token(Token = "0x200013A")]
[SerializeField]
public class PieceSegment : MonoBehaviour
{
	[Token(Token = "0x40004CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public MeshRenderer renderer;

	[Token(Token = "0x40004CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public BoxCollider collider;

	[Token(Token = "0x40004CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public BoxCollider grabTriggerCollider;

	[Token(Token = "0x40004CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Grid grid;

	[Token(Token = "0x40004CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Vector3Int coordinates;

	[Token(Token = "0x40004D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GridCell closestGridCell;

	[Token(Token = "0x40004D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float distanceToClosestGridCell;

	[Token(Token = "0x40004D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public bool onGridCell;

	[Token(Token = "0x40004D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public ColorStrobe _strobe;

	[Token(Token = "0x40004D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[Space(25f)]
	public Renderer _pingCube;

	[Token(Token = "0x40004D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private MaterialPropertyBlock _propBlock;

	[Token(Token = "0x40004D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[Header("Debug")]
	public bool _drawNeighbors;

	[Token(Token = "0x40004D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public Vector3Int _coords;

	[Token(Token = "0x40004D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Neighbors<PieceSegment> _n;

	[Token(Token = "0x40004D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private List<GameObject> _edgeGeom;

	[Token(Token = "0x60005C9")]
	[Address(RVA = "0xC1E708", Offset = "0xC1E708", VA = "0xC1E708")]
	public void Setup(Grid grid, Vector3Int coords, Neighbors<PieceSegment> n)
	{
	}

	[Token(Token = "0x60005CA")]
	[Address(RVA = "0xC1EA84", Offset = "0xC1EA84", VA = "0xC1EA84")]
	private void Update()
	{
	}

	[Token(Token = "0x60005CB")]
	[Address(RVA = "0xC19F44", Offset = "0xC19F44", VA = "0xC19F44")]
	public void UpdateProximityValue()
	{
	}

	[Token(Token = "0x60005CC")]
	[Address(RVA = "0xC1A0BC", Offset = "0xC1A0BC", VA = "0xC1A0BC")]
	public void SetStrobing(bool value, bool expandFlash = true)
	{
	}

	[Token(Token = "0x60005CD")]
	[Address(RVA = "0xC1ECD8", Offset = "0xC1ECD8", VA = "0xC1ECD8")]
	public void SetColor(Color color)
	{
	}

	[Token(Token = "0x60005CE")]
	[Address(RVA = "0xC1EDD0", Offset = "0xC1EDD0", VA = "0xC1EDD0")]
	public void SetTexture(string texture)
	{
	}

	[Token(Token = "0x60005CF")]
	[Address(RVA = "0xC1EEA8", Offset = "0xC1EEA8", VA = "0xC1EEA8")]
	public void Flash(float duration)
	{
	}

	[Token(Token = "0x60005D0")]
	[Address(RVA = "0xC1EEC4", Offset = "0xC1EEC4", VA = "0xC1EEC4")]
	public void SetRenderVisible(bool visible)
	{
	}

	[Token(Token = "0x60005D1")]
	[Address(RVA = "0xC1EEE4", Offset = "0xC1EEE4", VA = "0xC1EEE4")]
	public void SetColliderSize(float size)
	{
	}

	[Token(Token = "0x60005D2")]
	[Address(RVA = "0xC1D4BC", Offset = "0xC1D4BC", VA = "0xC1D4BC")]
	public void AddGeometry(GameObject geom)
	{
	}

	[Token(Token = "0x60005D3")]
	[Address(RVA = "0xC1EF5C", Offset = "0xC1EF5C", VA = "0xC1EF5C")]
	public void SetEdgeThickness(float thickness)
	{
	}

	[Token(Token = "0x60005D4")]
	[Address(RVA = "0xC1F10C", Offset = "0xC1F10C", VA = "0xC1F10C")]
	public void SetEdgeMaterial(Material mat)
	{
	}

	[Token(Token = "0x60005D5")]
	[Address(RVA = "0xC1CB40", Offset = "0xC1CB40", VA = "0xC1CB40")]
	public void ClearGeometry()
	{
	}

	[Token(Token = "0x60005D6")]
	[Address(RVA = "0xC1CD00", Offset = "0xC1CD00", VA = "0xC1CD00")]
	public void ClearNeighborGeometry()
	{
	}

	[Token(Token = "0x60005D7")]
	[Address(RVA = "0xC1F294", Offset = "0xC1F294", VA = "0xC1F294")]
	public Neighbors<PieceSegment> GetNeighbors()
	{
		return null;
	}

	[Token(Token = "0x60005D8")]
	[Address(RVA = "0xC1D254", Offset = "0xC1D254", VA = "0xC1D254")]
	public Vector3 GetCubeCorner(bool right, bool top, bool front)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60005D9")]
	[Address(RVA = "0xC1F29C", Offset = "0xC1F29C", VA = "0xC1F29C")]
	public void SetGrabCollider(bool enabled)
	{
	}

	[Token(Token = "0x60005DA")]
	[Address(RVA = "0xC1E914", Offset = "0xC1E914", VA = "0xC1E914")]
	private void UpdateNeigbours()
	{
	}

	[Token(Token = "0x60005DB")]
	[Address(RVA = "0xC1F48C", Offset = "0xC1F48C", VA = "0xC1F48C")]
	public void RemoveFromNeighbors()
	{
	}

	[Token(Token = "0x60005DC")]
	[Address(RVA = "0xC1F3A0", Offset = "0xC1F3A0", VA = "0xC1F3A0")]
	private void PopulateNeighbor(int x, int y, int z)
	{
	}

	[Token(Token = "0x60005DD")]
	[Address(RVA = "0xC1F5FC", Offset = "0xC1F5FC", VA = "0xC1F5FC")]
	private void RemoveFromNeighbor(int x, int y, int z)
	{
	}

	[Token(Token = "0x60005DE")]
	[Address(RVA = "0xC1F6E4", Offset = "0xC1F6E4", VA = "0xC1F6E4")]
	public PieceSegment()
	{
	}
}
[Token(Token = "0x200013B")]
public class PieceVacuum : StateBehaviour
{
	[Token(Token = "0x40004DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public PieceCollection pieceCollection;

	[Token(Token = "0x40004DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Controller controller;

	[Token(Token = "0x40004DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public CirclePosDistributor distributor;

	[Token(Token = "0x40004DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float forceMultiplier;

	[Token(Token = "0x40004DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float radius;

	[Token(Token = "0x40004DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private List<Vector3> _positions;

	[Token(Token = "0x60005DF")]
	[Address(RVA = "0xC1F7A4", Offset = "0xC1F7A4", VA = "0xC1F7A4")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x60005E0")]
	[Address(RVA = "0xC1F8A8", Offset = "0xC1F8A8", VA = "0xC1F8A8")]
	private void AttractLoosePieces()
	{
	}

	[Token(Token = "0x60005E1")]
	[Address(RVA = "0xC1FC38", Offset = "0xC1FC38", VA = "0xC1FC38")]
	public PieceVacuum()
	{
	}
}
[Token(Token = "0x200013C")]
public class PieceView : StateBehaviour
{
	[Token(Token = "0x200013D")]
	[CompilerGenerated]
	private sealed class <PingOnStrobe>d__100 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000505")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000506")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000507")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PieceView <>4__this;

		[Token(Token = "0x4000508")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private string <note>5__2;

		[Token(Token = "0x4000509")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private PlayNoteOptions <options>5__3;

		[Token(Token = "0x400050A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float <prevT>5__4;

		[Token(Token = "0x1700007B")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000630")]
			[Address(RVA = "0xC2427C", Offset = "0xC2427C", VA = "0xC2427C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700007C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000632")]
			[Address(RVA = "0xC242C4", Offset = "0xC242C4", VA = "0xC242C4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600062D")]
		[Address(RVA = "0xC23C30", Offset = "0xC23C30", VA = "0xC23C30")]
		[DebuggerHidden]
		public <PingOnStrobe>d__100(int <>1__state)
		{
		}

		[Token(Token = "0x600062E")]
		[Address(RVA = "0xC23FCC", Offset = "0xC23FCC", VA = "0xC23FCC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600062F")]
		[Address(RVA = "0xC23FD0", Offset = "0xC23FD0", VA = "0xC23FD0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000631")]
		[Address(RVA = "0xC24284", Offset = "0xC24284", VA = "0xC24284", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40004E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public string id;

	[Token(Token = "0x40004E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Rigidbody rigidBody;

	[Token(Token = "0x40004E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Transform segmentParent;

	[Token(Token = "0x40004E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public LayerMask pieceLayer;

	[Token(Token = "0x40004E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[Space(25f)]
	public Material _edgeColorSolid;

	[Token(Token = "0x40004EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Material _edgeColorProximity;

	[Token(Token = "0x40004EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[HideInInspector]
	public Dictionary<string, PieceSegment> segments;

	[Token(Token = "0x40004EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[Space(25f)]
	[SerializeField]
	private GrabAction _grabAction;

	[Token(Token = "0x40004ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[SerializeField]
	private CursorInteractions _cursorInteractions;

	[Token(Token = "0x40004EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[SerializeField]
	private MeshFilter _meshFilter;

	[Token(Token = "0x40004EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[SerializeField]
	private MeshRenderer _meshRenderer;

	[Token(Token = "0x40004F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private Mesh _mesh;

	[Token(Token = "0x40004F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[SerializeField]
	private Grid _grid;

	[Token(Token = "0x40004F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[SerializeField]
	private Transform _originalParent;

	[Token(Token = "0x40004F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	[SerializeField]
	private PieceEdgeDrawer _segmentEdgeDrawer;

	[Token(Token = "0x40004F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private PieceFunctions _functions;

	[Token(Token = "0x40004F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private PieceCollection _pieceCollection;

	[Token(Token = "0x40004F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	[Header("State")]
	[SerializeField]
	private bool __onGrid;

	[Token(Token = "0x40004F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
	[SerializeField]
	private Color _color;

	[Token(Token = "0x40004F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	[SerializeField]
	private string _matName;

	[Token(Token = "0x40004F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	[SerializeField]
	private bool _bevelled;

	[Token(Token = "0x40004FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xFA")]
	[SerializeField]
	private bool __touchedInLastFrame;

	[Token(Token = "0x40004FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xFB")]
	[SerializeField]
	private bool __grabbed;

	[Token(Token = "0x40004FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
	[SerializeField]
	[Header("Debug")]
	private bool __drawOrientationRays;

	[Token(Token = "0x40004FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xFD")]
	[SerializeField]
	private bool __drawClosestGridRay;

	[Token(Token = "0x40004FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xFE")]
	[SerializeField]
	private bool __drawOrigin;

	[Token(Token = "0x4000500")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private MaterialPropertyBlock _propBlock;

	[Token(Token = "0x4000501")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	private Transform _saveRef;

	[Token(Token = "0x4000502")]
	private const float colliderSizeSmall = 0.6f;

	[Token(Token = "0x4000503")]
	private const float colliderSizeNormal = 1f;

	[Token(Token = "0x4000504")]
	private const float colliderSizeBig = 1.2f;

	[Token(Token = "0x17000074")]
	public bool onGrid
	{
		[Token(Token = "0x60005EC")]
		[Address(RVA = "0xC1FDF8", Offset = "0xC1FDF8", VA = "0xC1FDF8")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60005ED")]
		[Address(RVA = "0xC1FE00", Offset = "0xC1FE00", VA = "0xC1FE00")]
		set
		{
		}
	}

	[Token(Token = "0x17000075")]
	public Color color
	{
		[Token(Token = "0x60005EE")]
		[Address(RVA = "0xC1FE5C", Offset = "0xC1FE5C", VA = "0xC1FE5C")]
		get
		{
			return default(Color);
		}
		[Token(Token = "0x60005EF")]
		[Address(RVA = "0xC1FE68", Offset = "0xC1FE68", VA = "0xC1FE68")]
		set
		{
		}
	}

	[Token(Token = "0x17000076")]
	public string matName
	{
		[Token(Token = "0x60005F0")]
		[Address(RVA = "0xC1FE8C", Offset = "0xC1FE8C", VA = "0xC1FE8C")]
		get
		{
			return null;
		}
		[Token(Token = "0x60005F1")]
		[Address(RVA = "0xC1FE94", Offset = "0xC1FE94", VA = "0xC1FE94")]
		set
		{
		}
	}

	[Token(Token = "0x17000077")]
	public bool bevelled
	{
		[Token(Token = "0x60005F2")]
		[Address(RVA = "0xC1FEB4", Offset = "0xC1FEB4", VA = "0xC1FEB4")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60005F3")]
		[Address(RVA = "0xC1FEBC", Offset = "0xC1FEBC", VA = "0xC1FEBC")]
		set
		{
		}
	}

	[Token(Token = "0x17000078")]
	public bool hasMaterial
	{
		[Token(Token = "0x60005F4")]
		[Address(RVA = "0xC1FEE0", Offset = "0xC1FEE0", VA = "0xC1FEE0")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000079")]
	public bool hasMesh
	{
		[Token(Token = "0x60005F5")]
		[Address(RVA = "0xC1FF00", Offset = "0xC1FF00", VA = "0xC1FF00")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700007A")]
	public bool wasEdited
	{
		[Token(Token = "0x60005F6")]
		[Address(RVA = "0xC1FF8C", Offset = "0xC1FF8C", VA = "0xC1FF8C")]
		[CompilerGenerated]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60005F7")]
		[Address(RVA = "0xC1FF94", Offset = "0xC1FF94", VA = "0xC1FF94")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x14000054")]
	public event Action<PieceSegment> OnAdded
	{
		[Token(Token = "0x60005E2")]
		[Address(RVA = "0xC1C5E8", Offset = "0xC1C5E8", VA = "0xC1C5E8")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x60005E3")]
		[Address(RVA = "0xC1C818", Offset = "0xC1C818", VA = "0xC1C818")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x14000055")]
	public event Action<PieceSegment> OnRemoved
	{
		[Token(Token = "0x60005E4")]
		[Address(RVA = "0xC1C698", Offset = "0xC1C698", VA = "0xC1C698")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x60005E5")]
		[Address(RVA = "0xC1C8C8", Offset = "0xC1C8C8", VA = "0xC1C8C8")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x14000056")]
	public event Action<string> OnRemovedAllSegments
	{
		[Token(Token = "0x60005E6")]
		[Address(RVA = "0xC16828", Offset = "0xC16828", VA = "0xC16828")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x60005E7")]
		[Address(RVA = "0xC17020", Offset = "0xC17020", VA = "0xC17020")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x14000057")]
	public event Action<bool> OnGridChanged
	{
		[Token(Token = "0x60005E8")]
		[Address(RVA = "0xC16778", Offset = "0xC16778", VA = "0xC16778")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x60005E9")]
		[Address(RVA = "0xC16F70", Offset = "0xC16F70", VA = "0xC16F70")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x14000058")]
	public event Action OnPropertiesChanged
	{
		[Token(Token = "0x60005EA")]
		[Address(RVA = "0xC1FCC0", Offset = "0xC1FCC0", VA = "0xC1FCC0")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x60005EB")]
		[Address(RVA = "0xC1FD5C", Offset = "0xC1FD5C", VA = "0xC1FD5C")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x60005F8")]
	[Address(RVA = "0xC164F8", Offset = "0xC164F8", VA = "0xC164F8")]
	public void Setup(Piece piece, Grid grid, Transform originalParent, PieceCollection pieceCollection, bool spawnEdges = true)
	{
	}

	[Token(Token = "0x60005F9")]
	[Address(RVA = "0xC207E4", Offset = "0xC207E4", VA = "0xC207E4")]
	public void InitOnGrid(Vector3 pos, Quaternion rot)
	{
	}

	[Token(Token = "0x60005FA")]
	[Address(RVA = "0xC202F4", Offset = "0xC202F4", VA = "0xC202F4")]
	public void DrawMesh(Piece piece)
	{
	}

	[Token(Token = "0x60005FB")]
	[Address(RVA = "0xC20A4C", Offset = "0xC20A4C", VA = "0xC20A4C")]
	public void DrawMesh()
	{
	}

	[Token(Token = "0x60005FC")]
	[Address(RVA = "0xC1B658", Offset = "0xC1B658", VA = "0xC1B658")]
	public void AddSegment(Vector3 pos, Vector3Int coords, bool onGridCell)
	{
	}

	[Token(Token = "0x60005FD")]
	[Address(RVA = "0xC1B99C", Offset = "0xC1B99C", VA = "0xC1B99C")]
	public void MarkEdited()
	{
	}

	[Token(Token = "0x60005FE")]
	[Address(RVA = "0xC1AA1C", Offset = "0xC1AA1C", VA = "0xC1AA1C")]
	public void Select()
	{
	}

	[Token(Token = "0x60005FF")]
	[Address(RVA = "0xC1B18C", Offset = "0xC1B18C", VA = "0xC1B18C")]
	public bool HasSegmentAtPos(Vector3 pos)
	{
		return default(bool);
	}

	[Token(Token = "0x6000600")]
	[Address(RVA = "0xC2146C", Offset = "0xC2146C", VA = "0xC2146C")]
	public PieceSegment GetSegmentAtPos(Vector3 pos)
	{
		return null;
	}

	[Token(Token = "0x6000601")]
	[Address(RVA = "0xC19CC8", Offset = "0xC19CC8", VA = "0xC19CC8")]
	public PieceSegment GetSegmentAtWorldPos(Vector3 pos)
	{
		return null;
	}

	[Token(Token = "0x6000602")]
	[Address(RVA = "0xC1BE00", Offset = "0xC1BE00", VA = "0xC1BE00")]
	public void RemoveSegmentAtPos(Vector3 pos)
	{
	}

	[Token(Token = "0x6000603")]
	[Address(RVA = "0xC216E8", Offset = "0xC216E8", VA = "0xC216E8")]
	public void SetColor(Color color)
	{
	}

	[Token(Token = "0x6000604")]
	[Address(RVA = "0xC218B4", Offset = "0xC218B4", VA = "0xC218B4")]
	public void SetMeshEmission(Color color)
	{
	}

	[Token(Token = "0x6000605")]
	[Address(RVA = "0xC1FFA0", Offset = "0xC1FFA0", VA = "0xC1FFA0")]
	public void SetMaterial(string matName)
	{
	}

	[Token(Token = "0x6000606")]
	[Address(RVA = "0xC21944", Offset = "0xC21944", VA = "0xC21944")]
	public void PositionPiece(Vector3 pos)
	{
	}

	[Token(Token = "0x6000607")]
	[Address(RVA = "0xC19204", Offset = "0xC19204", VA = "0xC19204")]
	public void CorrectCenter()
	{
	}

	[Token(Token = "0x6000608")]
	[Address(RVA = "0xC199EC", Offset = "0xC199EC", VA = "0xC199EC")]
	public void AddRandomRotation()
	{
	}

	[Token(Token = "0x6000609")]
	[Address(RVA = "0xC17248", Offset = "0xC17248", VA = "0xC17248")]
	public void Clear()
	{
	}

	[Token(Token = "0x600060A")]
	[Address(RVA = "0xC21B04", Offset = "0xC21B04", VA = "0xC21B04")]
	public Vector3 GetCenter()
	{
		return default(Vector3);
	}

	[Token(Token = "0x600060B")]
	[Address(RVA = "0xC21E70", Offset = "0xC21E70", VA = "0xC21E70")]
	public Vector3 GetMin()
	{
		return default(Vector3);
	}

	[Token(Token = "0x600060C")]
	[Address(RVA = "0xC21BC0", Offset = "0xC21BC0", VA = "0xC21BC0")]
	public Bounds GetBounds()
	{
		return default(Bounds);
	}

	[Token(Token = "0x600060D")]
	[Address(RVA = "0xC1AB28", Offset = "0xC1AB28", VA = "0xC1AB28")]
	public Vector3 GetGridOffset()
	{
		return default(Vector3);
	}

	[Token(Token = "0x600060E")]
	[Address(RVA = "0xC18AE8", Offset = "0xC18AE8", VA = "0xC18AE8")]
	public bool FullyOnGrid()
	{
		return default(bool);
	}

	[Token(Token = "0x600060F")]
	[Address(RVA = "0xC21F2C", Offset = "0xC21F2C", VA = "0xC21F2C")]
	public void SetEdgeThickness(float thickness)
	{
	}

	[Token(Token = "0x6000610")]
	[Address(RVA = "0xC22094", Offset = "0xC22094", VA = "0xC22094")]
	public void SetEdgeMaterial(bool solid)
	{
	}

	[Token(Token = "0x6000611")]
	[Address(RVA = "0xC1B9A8", Offset = "0xC1B9A8", VA = "0xC1B9A8")]
	public void ForceRelease()
	{
	}

	[Token(Token = "0x6000612")]
	[Address(RVA = "0xC22A58", Offset = "0xC22A58", VA = "0xC22A58")]
	public bool IsHeld()
	{
		return default(bool);
	}

	[Token(Token = "0x6000613")]
	[Address(RVA = "0xC204FC", Offset = "0xC204FC", VA = "0xC204FC")]
	private void SubscribeToEvents()
	{
	}

	[Token(Token = "0x6000614")]
	[Address(RVA = "0xC2198C", Offset = "0xC2198C", VA = "0xC2198C")]
	private void UnSubscribeToEvents()
	{
	}

	[Token(Token = "0x6000615")]
	[Address(RVA = "0xC22A74", Offset = "0xC22A74", VA = "0xC22A74")]
	private void HandleTouch(InteractionData data)
	{
	}

	[Token(Token = "0x6000616")]
	[Address(RVA = "0xC22A80", Offset = "0xC22A80", VA = "0xC22A80")]
	private void HandleUnTouch(InteractionData data)
	{
	}

	[Token(Token = "0x6000617")]
	[Address(RVA = "0xC22AC8", Offset = "0xC22AC8", VA = "0xC22AC8")]
	private void HandlePickup(InteractionData data)
	{
	}

	[Token(Token = "0x6000618")]
	[Address(RVA = "0xC221FC", Offset = "0xC221FC", VA = "0xC221FC")]
	private void HandleRelease(InteractionData data)
	{
	}

	[Token(Token = "0x6000619")]
	[Address(RVA = "0xC1A0E0", Offset = "0xC1A0E0", VA = "0xC1A0E0")]
	public void CheckUnplacedPieceSegments()
	{
	}

	[Token(Token = "0x600061A")]
	[Address(RVA = "0xC23BC8", Offset = "0xC23BC8", VA = "0xC23BC8")]
	[IteratorStateMachine(typeof(<PingOnStrobe>d__100))]
	private IEnumerator PingOnStrobe(Vector3 pos)
	{
		return null;
	}

	[Token(Token = "0x600061B")]
	[Address(RVA = "0xC230C4", Offset = "0xC230C4", VA = "0xC230C4")]
	private void PositionOnFrame(PieceSegment element)
	{
	}

	[Token(Token = "0x600061C")]
	[Address(RVA = "0xC23634", Offset = "0xC23634", VA = "0xC23634")]
	private bool TryAssignPieceSegmentsToGrid()
	{
		return default(bool);
	}

	[Token(Token = "0x600061D")]
	[Address(RVA = "0xC237E4", Offset = "0xC237E4", VA = "0xC237E4")]
	private bool NoSegmentsIntersectingOutsideGrid()
	{
		return default(bool);
	}

	[Token(Token = "0x600061E")]
	[Address(RVA = "0xC23A50", Offset = "0xC23A50", VA = "0xC23A50")]
	public void OccupyGridCells()
	{
	}

	[Token(Token = "0x600061F")]
	[Address(RVA = "0xC170D0", Offset = "0xC170D0", VA = "0xC170D0")]
	public void ClearGridCells()
	{
	}

	[Token(Token = "0x6000620")]
	[Address(RVA = "0xC194BC", Offset = "0xC194BC", VA = "0xC194BC")]
	public void Flash(float duration)
	{
	}

	[Token(Token = "0x6000621")]
	[Address(RVA = "0xC22F3C", Offset = "0xC22F3C", VA = "0xC22F3C")]
	private void StopAlerts()
	{
	}

	[Token(Token = "0x6000622")]
	[Address(RVA = "0xC208EC", Offset = "0xC208EC", VA = "0xC208EC")]
	private void UpdateAllClosestGridCells()
	{
	}

	[Token(Token = "0x6000623")]
	[Address(RVA = "0xC230B8", Offset = "0xC230B8", VA = "0xC230B8")]
	private void SetCollidersSmall()
	{
	}

	[Token(Token = "0x6000624")]
	[Address(RVA = "0xC20A44", Offset = "0xC20A44", VA = "0xC20A44")]
	private void SetCollidersNormal()
	{
	}

	[Token(Token = "0x6000625")]
	[Address(RVA = "0xC20674", Offset = "0xC20674", VA = "0xC20674")]
	private void SetCollidersBig()
	{
	}

	[Token(Token = "0x6000626")]
	[Address(RVA = "0xC23C58", Offset = "0xC23C58", VA = "0xC23C58")]
	private void SetAllColliders(float size)
	{
	}

	[Token(Token = "0x6000627")]
	[Address(RVA = "0xC20680", Offset = "0xC20680", VA = "0xC20680")]
	private void SetAllGrabColliders(bool enabled)
	{
	}

	[Token(Token = "0x6000628")]
	[Address(RVA = "0xC2115C", Offset = "0xC2115C", VA = "0xC2115C")]
	private Neighbors<PieceSegment> GetNeighbourSegments(Vector3 localPos)
	{
		return null;
	}

	[Token(Token = "0x6000629")]
	[Address(RVA = "0xC23DC0", Offset = "0xC23DC0", VA = "0xC23DC0")]
	private Neighbors<PieceSegment> PopulateNeighbourAtIndexPos(Neighbors<PieceSegment> n, Vector3 localPos, int x, int y, int z)
	{
		return null;
	}

	[Token(Token = "0x600062A")]
	[Address(RVA = "0xC23E88", Offset = "0xC23E88", VA = "0xC23E88")]
	private Vector3 GetNeighborPos(Vector3 localPos, int x, int y, int z)
	{
		return default(Vector3);
	}

	[Token(Token = "0x600062B")]
	[Address(RVA = "0xC20F10", Offset = "0xC20F10", VA = "0xC20F10")]
	private PieceSegment GetMinSegment()
	{
		return null;
	}

	[Token(Token = "0x600062C")]
	[Address(RVA = "0xC23F34", Offset = "0xC23F34", VA = "0xC23F34")]
	public PieceView()
	{
	}
}
[Token(Token = "0x200013E")]
public class CameraFader : MonoBehaviour
{
	[Token(Token = "0x200013F")]
	[CompilerGenerated]
	private sealed class <FadeOut>d__5 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400050E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400050F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000510")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CameraFader <>4__this;

		[Token(Token = "0x4000511")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <startTime>5__2;

		[Token(Token = "0x1700007D")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600063D")]
			[Address(RVA = "0xC246AC", Offset = "0xC246AC", VA = "0xC246AC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700007E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600063F")]
			[Address(RVA = "0xC246F4", Offset = "0xC246F4", VA = "0xC246F4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600063A")]
		[Address(RVA = "0xC24440", Offset = "0xC24440", VA = "0xC24440")]
		[DebuggerHidden]
		public <FadeOut>d__5(int <>1__state)
		{
		}

		[Token(Token = "0x600063B")]
		[Address(RVA = "0xC24574", Offset = "0xC24574", VA = "0xC24574", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600063C")]
		[Address(RVA = "0xC24578", Offset = "0xC24578", VA = "0xC24578", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600063E")]
		[Address(RVA = "0xC246B4", Offset = "0xC246B4", VA = "0xC246B4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000140")]
	[CompilerGenerated]
	private sealed class <FadeIn>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000512")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000513")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000514")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CameraFader <>4__this;

		[Token(Token = "0x4000515")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <startTime>5__2;

		[Token(Token = "0x1700007F")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000643")]
			[Address(RVA = "0xC2484C", Offset = "0xC2484C", VA = "0xC2484C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000080")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000645")]
			[Address(RVA = "0xC24894", Offset = "0xC24894", VA = "0xC24894", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000640")]
		[Address(RVA = "0xC244D0", Offset = "0xC244D0", VA = "0xC244D0")]
		[DebuggerHidden]
		public <FadeIn>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x6000641")]
		[Address(RVA = "0xC246FC", Offset = "0xC246FC", VA = "0xC246FC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000642")]
		[Address(RVA = "0xC24700", Offset = "0xC24700", VA = "0xC24700", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000644")]
		[Address(RVA = "0xC24854", Offset = "0xC24854", VA = "0xC24854", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400050B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Image[] _fadeImages;

	[Token(Token = "0x400050C")]
	private const float FadeDuration = 1f;

	[Token(Token = "0x400050D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private GameState _state;

	[Token(Token = "0x6000633")]
	[Address(RVA = "0xC242CC", Offset = "0xC242CC", VA = "0xC242CC")]
	public void Setup(GameState state)
	{
	}

	[Token(Token = "0x6000634")]
	[Address(RVA = "0xC2438C", Offset = "0xC2438C", VA = "0xC2438C")]
	public bool IsFaded()
	{
		return default(bool);
	}

	[Token(Token = "0x6000635")]
	[Address(RVA = "0xC243D8", Offset = "0xC243D8", VA = "0xC243D8")]
	[IteratorStateMachine(typeof(<FadeOut>d__5))]
	public IEnumerator FadeOut()
	{
		return null;
	}

	[Token(Token = "0x6000636")]
	[Address(RVA = "0xC24468", Offset = "0xC24468", VA = "0xC24468")]
	[IteratorStateMachine(typeof(<FadeIn>d__6))]
	public IEnumerator FadeIn()
	{
		return null;
	}

	[Token(Token = "0x6000637")]
	[Address(RVA = "0xC244F8", Offset = "0xC244F8", VA = "0xC244F8")]
	private void SetEnabled(bool enabled)
	{
	}

	[Token(Token = "0x6000638")]
	[Address(RVA = "0xC242FC", Offset = "0xC242FC", VA = "0xC242FC")]
	private void SetAlpha(float alpha)
	{
	}

	[Token(Token = "0x6000639")]
	[Address(RVA = "0xC2456C", Offset = "0xC2456C", VA = "0xC2456C")]
	public CameraFader()
	{
	}
}
[Token(Token = "0x2000141")]
public class FastIKFabric : MonoBehaviour
{
	[Token(Token = "0x4000516")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int ChainLength;

	[Token(Token = "0x4000517")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform Target;

	[Token(Token = "0x4000518")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform Pole;

	[Token(Token = "0x4000519")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[Header("Solver Parameters")]
	public int Iterations;

	[Token(Token = "0x400051A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float Delta;

	[Token(Token = "0x400051B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[Range(0f, 1f)]
	public float SnapBackStrength;

	[Token(Token = "0x400051C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	protected float[] BonesLength;

	[Token(Token = "0x400051D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	protected float CompleteLength;

	[Token(Token = "0x400051E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	protected Transform[] Bones;

	[Token(Token = "0x400051F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	protected Vector3[] Positions;

	[Token(Token = "0x4000520")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	protected Vector3[] StartDirectionSucc;

	[Token(Token = "0x4000521")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	protected Quaternion[] StartRotationBone;

	[Token(Token = "0x4000522")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	protected Quaternion StartRotationTarget;

	[Token(Token = "0x4000523")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	protected Transform Root;

	[Token(Token = "0x6000646")]
	[Address(RVA = "0xC2489C", Offset = "0xC2489C", VA = "0xC2489C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000647")]
	[Address(RVA = "0xC248A0", Offset = "0xC248A0", VA = "0xC248A0")]
	private void Init()
	{
	}

	[Token(Token = "0x6000648")]
	[Address(RVA = "0xC25114", Offset = "0xC25114", VA = "0xC25114")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000649")]
	[Address(RVA = "0xC25118", Offset = "0xC25118", VA = "0xC25118")]
	private void ResolveIK()
	{
	}

	[Token(Token = "0x600064A")]
	[Address(RVA = "0xC24DA8", Offset = "0xC24DA8", VA = "0xC24DA8")]
	private Vector3 GetPositionRootSpace(Transform current)
	{
		return default(Vector3);
	}

	[Token(Token = "0x600064B")]
	[Address(RVA = "0xC24EE0", Offset = "0xC24EE0", VA = "0xC24EE0")]
	private void SetPositionRootSpace(Transform current, Vector3 position)
	{
	}

	[Token(Token = "0x600064C")]
	[Address(RVA = "0xC24FE0", Offset = "0xC24FE0", VA = "0xC24FE0")]
	private Quaternion GetRotationRootSpace(Transform current)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x600064D")]
	[Address(RVA = "0xC25ED4", Offset = "0xC25ED4", VA = "0xC25ED4")]
	private void SetRotationRootSpace(Transform current, Quaternion rotation)
	{
	}

	[Token(Token = "0x600064E")]
	[Address(RVA = "0xC26010", Offset = "0xC26010", VA = "0xC26010")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x600064F")]
	[Address(RVA = "0xC26014", Offset = "0xC26014", VA = "0xC26014")]
	public FastIKFabric()
	{
	}
}
[Token(Token = "0x2000142")]
public class GrabPointPosition : StateBehaviour
{
	[Token(Token = "0x4000524")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Controller controller;

	[Token(Token = "0x6000650")]
	[Address(RVA = "0xC26038", Offset = "0xC26038", VA = "0xC26038", Slot = "5")]
	protected override void ForceSetup()
	{
	}

	[Token(Token = "0x6000651")]
	[Address(RVA = "0xC26274", Offset = "0xC26274", VA = "0xC26274")]
	public Vector3 GetGrabPointPosition()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000652")]
	[Address(RVA = "0xC26238", Offset = "0xC26238", VA = "0xC26238")]
	public void SetGrabPointPosition()
	{
	}

	[Token(Token = "0x6000653")]
	[Address(RVA = "0xC263A4", Offset = "0xC263A4", VA = "0xC263A4")]
	public GrabPointPosition()
	{
	}
}
[Token(Token = "0x2000143")]
public class HandInteractionpointPlacer : SetupableBehaviour
{
	[Token(Token = "0x4000525")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public OVRHand _ovrHand;

	[Token(Token = "0x4000526")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private GrabPointPosition _grabPointPosition;

	[Token(Token = "0x4000527")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Renderer _pointRenderer;

	[Token(Token = "0x4000528")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Cubism.Hand _hand;

	[Token(Token = "0x4000529")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private Vector3 _targetPosition;

	[Token(Token = "0x6000654")]
	[Address(RVA = "0xC263AC", Offset = "0xC263AC", VA = "0xC263AC")]
	public void Setup(OVRHand ovrHand, SettingsModel settings, Cubism.Hand hand)
	{
	}

	[Token(Token = "0x6000655")]
	[Address(RVA = "0xC26448", Offset = "0xC26448", VA = "0xC26448")]
	private void Update()
	{
	}

	[Token(Token = "0x6000656")]
	[Address(RVA = "0xC2648C", Offset = "0xC2648C", VA = "0xC2648C")]
	public void UpdateTargetPosition()
	{
	}

	[Token(Token = "0x6000657")]
	[Address(RVA = "0xC265B0", Offset = "0xC265B0", VA = "0xC265B0")]
	public void RenderVisibility(bool visible)
	{
	}

	[Token(Token = "0x6000658")]
	[Address(RVA = "0xC26648", Offset = "0xC26648", VA = "0xC26648")]
	public HandInteractionpointPlacer()
	{
	}
}
[Token(Token = "0x2000144")]
[ExecuteInEditMode]
public class PassTransformDistance : MonoBehaviour
{
	[Token(Token = "0x400052A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Material[] _distanceFadeMaterials;

	[Token(Token = "0x400052B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool _isLeft;

	[Token(Token = "0x6000659")]
	[Address(RVA = "0xC26650", Offset = "0xC26650", VA = "0xC26650")]
	private void Update()
	{
	}

	[Token(Token = "0x600065A")]
	[Address(RVA = "0xC26788", Offset = "0xC26788", VA = "0xC26788")]
	public PassTransformDistance()
	{
	}
}
[Token(Token = "0x2000145")]
public class PieceRotation : StateBehaviour
{
	[Token(Token = "0x400052C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Controller _controller;

	[Token(Token = "0x400052D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Vector2 _angularSpeed;

	[Token(Token = "0x400052E")]
	private const float _maxSpeed = 12f;

	[Token(Token = "0x400052F")]
	private const float _dragPerFrame = 1.08f;

	[Token(Token = "0x600065B")]
	[Address(RVA = "0xC26790", Offset = "0xC26790", VA = "0xC26790")]
	private void ZeroSpeed()
	{
	}

	[Token(Token = "0x600065C")]
	[Address(RVA = "0xC267E0", Offset = "0xC267E0", VA = "0xC267E0")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x600065D")]
	[Address(RVA = "0xC269F8", Offset = "0xC269F8", VA = "0xC269F8")]
	private void AddSpeed(Vector2 speed)
	{
	}

	[Token(Token = "0x600065E")]
	[Address(RVA = "0xC26A2C", Offset = "0xC26A2C", VA = "0xC26A2C")]
	private void Drag()
	{
	}

	[Token(Token = "0x600065F")]
	[Address(RVA = "0xC26A48", Offset = "0xC26A48", VA = "0xC26A48")]
	public PieceRotation()
	{
	}
}
[Token(Token = "0x2000146")]
[ExecuteInEditMode]
public class ProximityShaderDebug : MonoBehaviour
{
	[Token(Token = "0x4000530")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform _left;

	[Token(Token = "0x4000531")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool _grabbingPieceL;

	[Token(Token = "0x4000532")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	public bool _grabbingPuzzleL;

	[Token(Token = "0x4000533")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform _right;

	[Token(Token = "0x4000534")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool _grabbingPieceR;

	[Token(Token = "0x4000535")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	public bool _grabbingPuzzleR;

	[Token(Token = "0x4000536")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x32")]
	[Space(25f)]
	public bool _transformEnabled;

	[Token(Token = "0x6000660")]
	[Address(RVA = "0xC26AA0", Offset = "0xC26AA0", VA = "0xC26AA0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000661")]
	[Address(RVA = "0xC26CA0", Offset = "0xC26CA0", VA = "0xC26CA0")]
	public ProximityShaderDebug()
	{
	}
}
[Token(Token = "0x2000147")]
public class ProximityShaderHelper : StateBehaviour
{
	[Token(Token = "0x4000537")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform _leftIndex;

	[Token(Token = "0x4000538")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform _leftThumb;

	[Token(Token = "0x4000539")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform _rightIndex;

	[Token(Token = "0x400053A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Transform _rightThumb;

	[Token(Token = "0x400053B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Grid _grid;

	[Token(Token = "0x400053C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[Space(25f)]
	public Material _grabVolumeFaceMat;

	[Token(Token = "0x400053D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Material _grabVolumeEdgeMat;

	[Token(Token = "0x400053E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Player _player;

	[Token(Token = "0x400053F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Transform _grabPointL;

	[Token(Token = "0x4000540")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Transform _grabPointR;

	[Token(Token = "0x4000541")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private float _leftActive;

	[Token(Token = "0x4000542")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private float _rightActive;

	[Token(Token = "0x4000543")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private float _transformEnabled;

	[Token(Token = "0x6000662")]
	[Address(RVA = "0xC26CA8", Offset = "0xC26CA8", VA = "0xC26CA8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000663")]
	[Address(RVA = "0xC26D68", Offset = "0xC26D68", VA = "0xC26D68")]
	private void Update()
	{
	}

	[Token(Token = "0x6000664")]
	[Address(RVA = "0xC272F8", Offset = "0xC272F8", VA = "0xC272F8")]
	public ProximityShaderHelper()
	{
	}
}
[Token(Token = "0x2000148")]
public class PuzzleLoader : MonoBehaviour
{
	[Token(Token = "0x2000149")]
	[CompilerGenerated]
	private sealed class <_SpawnPuzzle>d__16 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400054D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400054E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400054F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LoadOptions options;

		[Token(Token = "0x4000550")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public PuzzleLoader <>4__this;

		[Token(Token = "0x4000551")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Level level;

		[Token(Token = "0x17000081")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000678")]
			[Address(RVA = "0xC50A60", Offset = "0xC50A60", VA = "0xC50A60", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000082")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600067A")]
			[Address(RVA = "0xC50AA8", Offset = "0xC50AA8", VA = "0xC50AA8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000675")]
		[Address(RVA = "0xC50410", Offset = "0xC50410", VA = "0xC50410")]
		[DebuggerHidden]
		public <_SpawnPuzzle>d__16(int <>1__state)
		{
		}

		[Token(Token = "0x6000676")]
		[Address(RVA = "0xC50848", Offset = "0xC50848", VA = "0xC50848", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000677")]
		[Address(RVA = "0xC5084C", Offset = "0xC5084C", VA = "0xC5084C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000679")]
		[Address(RVA = "0xC50A68", Offset = "0xC50A68", VA = "0xC50A68", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200014A")]
	[CompilerGenerated]
	private sealed class <SpawnGrid>d__17 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000552")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000553")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000554")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LoadOptions options;

		[Token(Token = "0x4000555")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Level level;

		[Token(Token = "0x4000556")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public PuzzleLoader <>4__this;

		[Token(Token = "0x4000557")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool <spawnInstantanious>5__2;

		[Token(Token = "0x4000558")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float <wait>5__3;

		[Token(Token = "0x4000559")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private IEnumerator <>7__wrap3;

		[Token(Token = "0x17000083")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600067F")]
			[Address(RVA = "0xC50FE4", Offset = "0xC50FE4", VA = "0xC50FE4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000084")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000681")]
			[Address(RVA = "0xC5102C", Offset = "0xC5102C", VA = "0xC5102C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600067B")]
		[Address(RVA = "0xC504B4", Offset = "0xC504B4", VA = "0xC504B4")]
		[DebuggerHidden]
		public <SpawnGrid>d__17(int <>1__state)
		{
		}

		[Token(Token = "0x600067C")]
		[Address(RVA = "0xC50AB0", Offset = "0xC50AB0", VA = "0xC50AB0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600067D")]
		[Address(RVA = "0xC50ACC", Offset = "0xC50ACC", VA = "0xC50ACC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600067E")]
		[Address(RVA = "0xC50F28", Offset = "0xC50F28", VA = "0xC50F28")]
		private void <>m__Finally1()
		{
		}

		[Token(Token = "0x6000680")]
		[Address(RVA = "0xC50FEC", Offset = "0xC50FEC", VA = "0xC50FEC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200014B")]
	[CompilerGenerated]
	private sealed class <SpawnPieces>d__18 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400055A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400055B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400055C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PuzzleLoader <>4__this;

		[Token(Token = "0x400055D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public LoadOptions options;

		[Token(Token = "0x400055E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Level level;

		[Token(Token = "0x400055F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool <spawnInstantanious>5__2;

		[Token(Token = "0x4000560")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float <wait>5__3;

		[Token(Token = "0x4000561")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private int <i>5__4;

		[Token(Token = "0x17000085")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000685")]
			[Address(RVA = "0xC51658", Offset = "0xC51658", VA = "0xC51658", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000086")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000687")]
			[Address(RVA = "0xC516A0", Offset = "0xC516A0", VA = "0xC516A0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000682")]
		[Address(RVA = "0xC50558", Offset = "0xC50558", VA = "0xC50558")]
		[DebuggerHidden]
		public <SpawnPieces>d__18(int <>1__state)
		{
		}

		[Token(Token = "0x6000683")]
		[Address(RVA = "0xC51034", Offset = "0xC51034", VA = "0xC51034", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000684")]
		[Address(RVA = "0xC51038", Offset = "0xC51038", VA = "0xC51038", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000686")]
		[Address(RVA = "0xC51660", Offset = "0xC51660", VA = "0xC51660", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000546")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public PuzzlePosition _puzzlePosition;

	[Token(Token = "0x4000547")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[Space(25f)]
	public Grid _grid;

	[Token(Token = "0x4000548")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public CirclePosDistributor _piecesPositions;

	[Token(Token = "0x4000549")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public PieceCollection _pieceCollection;

	[Token(Token = "0x400054A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private string _filePath;

	[Token(Token = "0x400054B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool _loadingPuzzle;

	[Token(Token = "0x400054C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private List<Vector3> _positions;

	[Token(Token = "0x14000059")]
	public event Action PuzzleLoaded
	{
		[Token(Token = "0x6000665")]
		[Address(RVA = "0xC4FEB4", Offset = "0xC4FEB4", VA = "0xC4FEB4")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000666")]
		[Address(RVA = "0xC4FF50", Offset = "0xC4FF50", VA = "0xC4FF50")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x1400005A")]
	public event Action LoadingCancelled
	{
		[Token(Token = "0x6000667")]
		[Address(RVA = "0xC4FFEC", Offset = "0xC4FFEC", VA = "0xC4FFEC")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000668")]
		[Address(RVA = "0xC50088", Offset = "0xC50088", VA = "0xC50088")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x6000669")]
	[Address(RVA = "0xC50124", Offset = "0xC50124", VA = "0xC50124")]
	public void Awake()
	{
	}

	[Token(Token = "0x600066A")]
	[Address(RVA = "0xC501A4", Offset = "0xC501A4", VA = "0xC501A4")]
	public bool IsLoadingPuzzle()
	{
		return default(bool);
	}

	[Token(Token = "0x600066B")]
	[Address(RVA = "0xC501AC", Offset = "0xC501AC", VA = "0xC501AC")]
	public void SpawnPuzzle(Level level, [Optional] LoadOptions options)
	{
	}

	[Token(Token = "0x600066C")]
	[Address(RVA = "0xC50394", Offset = "0xC50394", VA = "0xC50394")]
	[IteratorStateMachine(typeof(<_SpawnPuzzle>d__16))]
	private IEnumerator _SpawnPuzzle(Level level, LoadOptions options)
	{
		return null;
	}

	[Token(Token = "0x600066D")]
	[Address(RVA = "0xC50438", Offset = "0xC50438", VA = "0xC50438")]
	[IteratorStateMachine(typeof(<SpawnGrid>d__17))]
	private IEnumerator SpawnGrid(Level level, LoadOptions options)
	{
		return null;
	}

	[Token(Token = "0x600066E")]
	[Address(RVA = "0xC504DC", Offset = "0xC504DC", VA = "0xC504DC")]
	[IteratorStateMachine(typeof(<SpawnPieces>d__18))]
	private IEnumerator SpawnPieces(Level level, LoadOptions options)
	{
		return null;
	}

	[Token(Token = "0x600066F")]
	[Address(RVA = "0xC502FC", Offset = "0xC502FC", VA = "0xC502FC")]
	private void SetMetaData(Level level)
	{
	}

	[Token(Token = "0x6000670")]
	[Address(RVA = "0xC50378", Offset = "0xC50378", VA = "0xC50378")]
	public void RecenterPuzzle(bool applyAngle = false)
	{
	}

	[Token(Token = "0x6000671")]
	[Address(RVA = "0xC50778", Offset = "0xC50778", VA = "0xC50778")]
	public void ClearPuzzle()
	{
	}

	[Token(Token = "0x6000672")]
	[Address(RVA = "0xC507B0", Offset = "0xC507B0", VA = "0xC507B0")]
	private void FirePuzzleLoaded()
	{
	}

	[Token(Token = "0x6000673")]
	[Address(RVA = "0xC502E0", Offset = "0xC502E0", VA = "0xC502E0")]
	private void FireLoadingCancelled()
	{
	}

	[Token(Token = "0x6000674")]
	[Address(RVA = "0xC507CC", Offset = "0xC507CC", VA = "0xC507CC")]
	public PuzzleLoader()
	{
	}
}
[Serializable]
[Token(Token = "0x200014C")]
public class LoadOptions
{
	[Token(Token = "0x4000562")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public bool recenterPuzzle;

	[Token(Token = "0x4000563")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
	public bool playSpawnAudio;

	[Token(Token = "0x4000564")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x12")]
	public bool spawnGrid;

	[Token(Token = "0x4000565")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x13")]
	public bool spawnPieces;

	[Token(Token = "0x4000566")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public bool spawnSolved;

	[Token(Token = "0x4000567")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x15")]
	public bool spawnPieceEdges;

	[Token(Token = "0x4000568")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float timeBeforeSpawn;

	[Token(Token = "0x4000569")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float gridSpawnDuration;

	[Token(Token = "0x400056A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float timeBetweenGridAndPieces;

	[Token(Token = "0x400056B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float piecesSpawnDuration;

	[Token(Token = "0x400056C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float timeAfterSpawn;

	[Token(Token = "0x400056D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Action CallBack;

	[Token(Token = "0x6000688")]
	[Address(RVA = "0xC502B4", Offset = "0xC502B4", VA = "0xC502B4")]
	public LoadOptions()
	{
	}
}
[Serializable]
[Token(Token = "0x200014D")]
public class ColorPos
{
	[Token(Token = "0x400056E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Vector3 pos;

	[Token(Token = "0x400056F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Color color;

	[Token(Token = "0x6000689")]
	[Address(RVA = "0xC516A8", Offset = "0xC516A8", VA = "0xC516A8")]
	public ColorPos(Vector3 pos, Color color)
	{
	}
}
[Serializable]
[Token(Token = "0x200014E")]
public class Note
{
	[Token(Token = "0x4000570")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string note;

	[Token(Token = "0x4000571")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool playInMenu;

	[Token(Token = "0x600068A")]
	[Address(RVA = "0xC5170C", Offset = "0xC5170C", VA = "0xC5170C")]
	public Note()
	{
	}

	[Token(Token = "0x600068B")]
	[Address(RVA = "0xC51714", Offset = "0xC51714", VA = "0xC51714")]
	public Note(string note, bool playInMenu)
	{
	}
}
[Token(Token = "0x200014F")]
public class PuzzleMovement : StateBehaviour
{
	[Token(Token = "0x4000572")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Controller left;

	[Token(Token = "0x4000573")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Controller right;

	[Token(Token = "0x4000574")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform puzzleAnchor;

	[Token(Token = "0x4000575")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public PuzzleGrabInput puzzleGrabInput;

	[Token(Token = "0x4000576")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public InputManager input;

	[Token(Token = "0x4000577")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool _restrictRotationToYAxis;

	[Token(Token = "0x4000578")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private Vector3 prevPosL;

	[Token(Token = "0x4000579")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Vector3 prevPosR;

	[Token(Token = "0x400057A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private Quaternion prevRotL;

	[Token(Token = "0x400057B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private Quaternion prevRotR;

	[Token(Token = "0x400057C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private bool _firstframe;

	[Token(Token = "0x400057D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private Player _player;

	[Token(Token = "0x17000087")]
	public bool restrictRotationToYAxis
	{
		[Token(Token = "0x600068C")]
		[Address(RVA = "0xC51744", Offset = "0xC51744", VA = "0xC51744")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600068D")]
		[Address(RVA = "0xC5174C", Offset = "0xC5174C", VA = "0xC5174C")]
		set
		{
		}
	}

	[Token(Token = "0x600068E")]
	[Address(RVA = "0xC517FC", Offset = "0xC517FC", VA = "0xC517FC")]
	private void Start()
	{
	}

	[Token(Token = "0x600068F")]
	[Address(RVA = "0xC51858", Offset = "0xC51858", VA = "0xC51858")]
	private void Update()
	{
	}

	[Token(Token = "0x6000690")]
	[Address(RVA = "0xC521F4", Offset = "0xC521F4", VA = "0xC521F4")]
	public void Recenter()
	{
	}

	[Token(Token = "0x6000691")]
	[Address(RVA = "0xC52200", Offset = "0xC52200", VA = "0xC52200")]
	public void RotateAlongY(float deg)
	{
	}

	[Token(Token = "0x6000692")]
	[Address(RVA = "0xC52228", Offset = "0xC52228", VA = "0xC52228")]
	public void TranslatePuzzle(Vector3 translate)
	{
	}

	[Token(Token = "0x6000693")]
	[Address(RVA = "0xC519C8", Offset = "0xC519C8", VA = "0xC519C8")]
	private bool OneHandTransform()
	{
		return default(bool);
	}

	[Token(Token = "0x6000694")]
	[Address(RVA = "0xC51BC4", Offset = "0xC51BC4", VA = "0xC51BC4")]
	private bool TwoHandTransform()
	{
		return default(bool);
	}

	[Token(Token = "0x6000695")]
	[Address(RVA = "0xC5227C", Offset = "0xC5227C", VA = "0xC5227C")]
	private bool GrabbingPuzzle(Cubism.Hand hand)
	{
		return default(bool);
	}

	[Token(Token = "0x6000696")]
	[Address(RVA = "0xC51924", Offset = "0xC51924", VA = "0xC51924")]
	private void UpdatePrevPos()
	{
	}

	[Token(Token = "0x6000697")]
	[Address(RVA = "0xC51A00", Offset = "0xC51A00", VA = "0xC51A00")]
	private void HandleSingleDrag()
	{
	}

	[Token(Token = "0x6000698")]
	[Address(RVA = "0xC51BF4", Offset = "0xC51BF4", VA = "0xC51BF4")]
	private void HandleDoubleDrag()
	{
	}

	[Token(Token = "0x6000699")]
	[Address(RVA = "0xC522EC", Offset = "0xC522EC", VA = "0xC522EC")]
	private void HandleDrag(Vector3 pos, Vector3 prevPos)
	{
	}

	[Token(Token = "0x600069A")]
	[Address(RVA = "0xC51A84", Offset = "0xC51A84", VA = "0xC51A84")]
	private void HandleSingleRotation()
	{
	}

	[Token(Token = "0x600069B")]
	[Address(RVA = "0xC52318", Offset = "0xC52318", VA = "0xC52318")]
	private void HandleSingleRot(Vector3 center, Quaternion rot, Quaternion prevRot)
	{
	}

	[Token(Token = "0x600069C")]
	[Address(RVA = "0xC51CA4", Offset = "0xC51CA4", VA = "0xC51CA4")]
	private void HandleRotation()
	{
	}

	[Token(Token = "0x600069D")]
	[Address(RVA = "0xC52074", Offset = "0xC52074", VA = "0xC52074")]
	private void HandleDoubleRotation()
	{
	}

	[Token(Token = "0x600069E")]
	[Address(RVA = "0xC51778", Offset = "0xC51778", VA = "0xC51778")]
	private void RotateUp()
	{
	}

	[Token(Token = "0x600069F")]
	[Address(RVA = "0xC52454", Offset = "0xC52454", VA = "0xC52454")]
	public PuzzleMovement()
	{
	}
}
[Token(Token = "0x2000150")]
public class PuzzlePosition : StateBehaviour
{
	[Token(Token = "0x400057E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Action PuzzleDataUpdated;

	[Token(Token = "0x400057F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Calibration calibration;

	[Token(Token = "0x4000580")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public CirclePosDistributor _circlePosDistributor;

	[Token(Token = "0x4000581")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Transform gridCells;

	[Token(Token = "0x4000582")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Grid grid;

	[Token(Token = "0x4000583")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Bounds _bounds;

	[Token(Token = "0x4000584")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Bounds _loadedBounds;

	[Token(Token = "0x4000585")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Transform _boundsCenterRef;

	[Token(Token = "0x4000586")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private float _angle;

	[Token(Token = "0x4000587")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private bool _editorBoundsDirty;

	[Token(Token = "0x4000588")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private Bounds _calculatedLocalBounds;

	[Token(Token = "0x60006A0")]
	[Address(RVA = "0xC52514", Offset = "0xC52514", VA = "0xC52514", Slot = "5")]
	protected override void ForceSetup()
	{
	}

	[Token(Token = "0x60006A1")]
	[Address(RVA = "0xC526E4", Offset = "0xC526E4", VA = "0xC526E4")]
	private void SetGridBoundsDirty()
	{
	}

	[Token(Token = "0x60006A2")]
	[Address(RVA = "0xC52720", Offset = "0xC52720", VA = "0xC52720")]
	private void Update()
	{
	}

	[Token(Token = "0x60006A3")]
	[Address(RVA = "0xC5277C", Offset = "0xC5277C", VA = "0xC5277C")]
	public Bounds GetLocalBounds()
	{
		return default(Bounds);
	}

	[Token(Token = "0x60006A4")]
	[Address(RVA = "0xC52D94", Offset = "0xC52D94", VA = "0xC52D94")]
	public Bounds GetLocalBoundsWorldCorrected()
	{
		return default(Bounds);
	}

	[Token(Token = "0x60006A5")]
	[Address(RVA = "0xC53394", Offset = "0xC53394", VA = "0xC53394")]
	public Vector3 GetBoundsCenter(bool recalc = true)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60006A6")]
	[Address(RVA = "0xC50580", Offset = "0xC50580", VA = "0xC50580")]
	public void SetLoadedLocalBounds(Bounds bounds)
	{
	}

	[Token(Token = "0x60006A7")]
	[Address(RVA = "0xC533E8", Offset = "0xC533E8", VA = "0xC533E8")]
	public void SetAngle(float angle)
	{
	}

	[Token(Token = "0x60006A8")]
	[Address(RVA = "0xC533F0", Offset = "0xC533F0", VA = "0xC533F0")]
	public Bounds GetLoadedBounds()
	{
		return default(Bounds);
	}

	[Token(Token = "0x60006A9")]
	[Address(RVA = "0xC534DC", Offset = "0xC534DC", VA = "0xC534DC")]
	public Bounds GetCalculatedLocalBounds()
	{
		return default(Bounds);
	}

	[Token(Token = "0x60006AA")]
	[Address(RVA = "0xC534F0", Offset = "0xC534F0", VA = "0xC534F0")]
	public Vector3 GetCalculatedCenter()
	{
		return default(Vector3);
	}

	[Token(Token = "0x60006AB")]
	[Address(RVA = "0xC53554", Offset = "0xC53554", VA = "0xC53554")]
	public Quaternion GetPuzzleRotation()
	{
		return default(Quaternion);
	}

	[Token(Token = "0x60006AC")]
	[Address(RVA = "0xC5357C", Offset = "0xC5357C", VA = "0xC5357C")]
	public float GetLoadedRadius()
	{
		return default(float);
	}

	[Token(Token = "0x60006AD")]
	[Address(RVA = "0xC5160C", Offset = "0xC5160C", VA = "0xC5160C")]
	public void GetPiecePositionsAroundPuzzle(int pieceCount, float margin, ref List<Vector3> positions)
	{
	}

	[Token(Token = "0x60006AE")]
	[Address(RVA = "0xC5361C", Offset = "0xC5361C", VA = "0xC5361C")]
	public void RecenterAroundCalibration(float backOffset, float upOffset)
	{
	}

	[Token(Token = "0x60006AF")]
	[Address(RVA = "0xC537F4", Offset = "0xC537F4", VA = "0xC537F4")]
	public void RecenterPuzzle()
	{
	}

	[Token(Token = "0x60006B0")]
	[Address(RVA = "0xC505AC", Offset = "0xC505AC", VA = "0xC505AC")]
	public void RecenterPuzzle(bool applyAngle)
	{
	}

	[Token(Token = "0x60006B1")]
	[Address(RVA = "0xC537FC", Offset = "0xC537FC", VA = "0xC537FC")]
	public void RecenterAndSnapToClosestAngle()
	{
	}

	[Token(Token = "0x60006B2")]
	[Address(RVA = "0xC533CC", Offset = "0xC533CC", VA = "0xC533CC")]
	private void FirePuzzleDataUpdated()
	{
	}

	[Token(Token = "0x60006B3")]
	[Address(RVA = "0xC539F8", Offset = "0xC539F8", VA = "0xC539F8")]
	public PuzzlePosition()
	{
	}
}
[Token(Token = "0x2000151")]
public class PuzzleSaver : StateBehaviour
{
	[Token(Token = "0x4000589")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string puzzleName;

	[Token(Token = "0x400058A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[Space(25f)]
	public Grid _grid;

	[Token(Token = "0x400058B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform _piecesInSpace;

	[Token(Token = "0x400058C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Transform _piecesOnGrid;

	[Token(Token = "0x400058D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public PuzzlePosition _puzzlePosition;

	[Token(Token = "0x400058E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Transform _gridSaveReference;

	[Token(Token = "0x400058F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Transform _pieceSaveReference;

	[Token(Token = "0x4000590")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Bounds _bounds;

	[Token(Token = "0x4000591")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private StageSetParser _parser;

	[Token(Token = "0x4000592")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private bool _useOldFormat;

	[Token(Token = "0x60006B7")]
	[Address(RVA = "0xC53A0C", Offset = "0xC53A0C", VA = "0xC53A0C", Slot = "5")]
	protected override void ForceSetup()
	{
	}

	[Token(Token = "0x60006B8")]
	[Address(RVA = "0xC53BA0", Offset = "0xC53BA0", VA = "0xC53BA0")]
	public void CreateJSONFromScene(PuzzleDescription desc)
	{
	}

	[Token(Token = "0x60006B9")]
	[Address(RVA = "0xC54C60", Offset = "0xC54C60", VA = "0xC54C60")]
	public bool PuzzleFileExists(string puzzleName)
	{
		return default(bool);
	}

	[Token(Token = "0x60006BA")]
	[Address(RVA = "0xC54E10", Offset = "0xC54E10", VA = "0xC54E10")]
	public void RenameFile(string originalName, string newName)
	{
	}

	[Token(Token = "0x60006BB")]
	[Address(RVA = "0xC54E68", Offset = "0xC54E68", VA = "0xC54E68")]
	public void DeleteFileIfExists(string puzzleName)
	{
	}

	[Token(Token = "0x60006BC")]
	[Address(RVA = "0xC53E4C", Offset = "0xC53E4C", VA = "0xC53E4C")]
	private void PositionReferenceTransform()
	{
	}

	[Token(Token = "0x60006BD")]
	[Address(RVA = "0xC53FF0", Offset = "0xC53FF0", VA = "0xC53FF0")]
	private JSONObject GetMeta(PuzzleDescription desc)
	{
		return null;
	}

	[Token(Token = "0x60006BE")]
	[Address(RVA = "0xC54E98", Offset = "0xC54E98", VA = "0xC54E98")]
	private string GetExistingOrNewId()
	{
		return null;
	}

	[Token(Token = "0x60006BF")]
	[Address(RVA = "0xC5445C", Offset = "0xC5445C", VA = "0xC5445C")]
	private JSONArray GetGridJSON()
	{
		return null;
	}

	[Token(Token = "0x60006C0")]
	[Address(RVA = "0xC54B14", Offset = "0xC54B14", VA = "0xC54B14")]
	private JSONArray GetPieces()
	{
		return null;
	}

	[Token(Token = "0x60006C1")]
	[Address(RVA = "0xC54EFC", Offset = "0xC54EFC", VA = "0xC54EFC")]
	private JSONArray GetPieces(JSONArray pieces, Transform parent)
	{
		return null;
	}

	[Token(Token = "0x60006C2")]
	[Address(RVA = "0xC551E0", Offset = "0xC551E0", VA = "0xC551E0")]
	private JSONArray GetPieceSegmentsJSON(PieceView p)
	{
		return null;
	}

	[Token(Token = "0x60006C3")]
	[Address(RVA = "0xC53A74", Offset = "0xC53A74", VA = "0xC53A74")]
	private void SetupReferenceTransform()
	{
	}

	[Token(Token = "0x60006C4")]
	[Address(RVA = "0xC54B8C", Offset = "0xC54B8C", VA = "0xC54B8C")]
	private void SaveToJSON(JSONObject json)
	{
	}

	[Token(Token = "0x60006C5")]
	[Address(RVA = "0xC54C74", Offset = "0xC54C74", VA = "0xC54C74")]
	private string GetSavePath(string name)
	{
		return null;
	}

	[Token(Token = "0x60006C6")]
	[Address(RVA = "0xC55898", Offset = "0xC55898", VA = "0xC55898")]
	private Vector3 GetForwardDirection()
	{
		return default(Vector3);
	}

	[Token(Token = "0x60006C7")]
	[Address(RVA = "0xC55950", Offset = "0xC55950", VA = "0xC55950")]
	public PuzzleSaver()
	{
	}
}
[Serializable]
[Token(Token = "0x2000152")]
public class PuzzleDescription
{
	[Token(Token = "0x4000593")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string name;

	[Token(Token = "0x4000594")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Difficulty difficulty;

	[Token(Token = "0x4000595")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float angle;

	[Token(Token = "0x4000596")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int miniatureType;

	[Token(Token = "0x4000597")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public bool showGridOnSolved;

	[Token(Token = "0x4000598")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float edgeWidth;

	[Token(Token = "0x4000599")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float dotSize;

	[Token(Token = "0x400059A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float faceOffset;

	[Token(Token = "0x60006C8")]
	[Address(RVA = "0xC55958", Offset = "0xC55958", VA = "0xC55958")]
	public PuzzleDescription()
	{
	}
}
[Token(Token = "0x2000153")]
[RequireComponent(typeof(RectTransform))]
public class RectBoxcollider : MonoBehaviour
{
	[Token(Token = "0x400059C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float height;

	[Token(Token = "0x400059D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private RectTransform rectTransform;

	[Token(Token = "0x1400005B")]
	public event Action onSpawned
	{
		[Token(Token = "0x60006C9")]
		[Address(RVA = "0xC559D0", Offset = "0xC559D0", VA = "0xC559D0")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x60006CA")]
		[Address(RVA = "0xC55A6C", Offset = "0xC55A6C", VA = "0xC55A6C")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x60006CB")]
	[Address(RVA = "0xC55B08", Offset = "0xC55B08", VA = "0xC55B08")]
	private void Start()
	{
	}

	[Token(Token = "0x60006CC")]
	[Address(RVA = "0xC55C2C", Offset = "0xC55C2C", VA = "0xC55C2C")]
	private void Update()
	{
	}

	[Token(Token = "0x60006CD")]
	[Address(RVA = "0xC55C30", Offset = "0xC55C30", VA = "0xC55C30")]
	public RectBoxcollider()
	{
	}
}
[Token(Token = "0x2000154")]
public class RefreshRateController : MonoBehaviour
{
	[Token(Token = "0x400059E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public VrToggle Hz72;

	[Token(Token = "0x400059F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public VrToggle Hz90;

	[Token(Token = "0x40005A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public VrToggle Hz120;

	[Token(Token = "0x60006CE")]
	[Address(RVA = "0xC55C38", Offset = "0xC55C38", VA = "0xC55C38")]
	private void Start()
	{
	}

	[Token(Token = "0x60006CF")]
	[Address(RVA = "0xC55D64", Offset = "0xC55D64", VA = "0xC55D64")]
	private void UpdateRefreshRate(int value)
	{
	}

	[Token(Token = "0x60006D0")]
	[Address(RVA = "0xC55DCC", Offset = "0xC55DCC", VA = "0xC55DCC")]
	public RefreshRateController()
	{
	}
}
[Token(Token = "0x2000155")]
public class RefreshRateOptionView : MonoBehaviour
{
	[Token(Token = "0x40005A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject refreshRateOption;

	[Token(Token = "0x40005A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject Hz120Option;

	[Token(Token = "0x40005A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float[] _freqs;

	[Token(Token = "0x40005A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private HMD[] _supportedHmds;

	[Token(Token = "0x60006D4")]
	[Address(RVA = "0xC55DEC", Offset = "0xC55DEC", VA = "0xC55DEC")]
	private void Start()
	{
	}

	[Token(Token = "0x60006D5")]
	[Address(RVA = "0xC55DF0", Offset = "0xC55DF0", VA = "0xC55DF0")]
	private void UpdateVisiblityStatus()
	{
	}

	[Token(Token = "0x60006D6")]
	[Address(RVA = "0xC55F40", Offset = "0xC55F40", VA = "0xC55F40")]
	private void LogFrequencies()
	{
	}

	[Token(Token = "0x60006D7")]
	[Address(RVA = "0xC56060", Offset = "0xC56060", VA = "0xC56060")]
	public RefreshRateOptionView()
	{
	}
}
[Token(Token = "0x2000156")]
public class RefreshRateView : StateBehaviour
{
	[Token(Token = "0x40005A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public VrToggle Hz72;

	[Token(Token = "0x40005A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public VrToggle Hz90;

	[Token(Token = "0x40005A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public VrToggle Hz120;

	[Token(Token = "0x60006D8")]
	[Address(RVA = "0xC560E4", Offset = "0xC560E4", VA = "0xC560E4")]
	private void Start()
	{
	}

	[Token(Token = "0x60006D9")]
	[Address(RVA = "0xC561A4", Offset = "0xC561A4", VA = "0xC561A4")]
	private void UpdateToggle()
	{
	}

	[Token(Token = "0x60006DA")]
	[Address(RVA = "0xC5628C", Offset = "0xC5628C", VA = "0xC5628C")]
	public RefreshRateView()
	{
	}
}
[Token(Token = "0x2000157")]
[CreateAssetMenu(fileName = "BuildData")]
public class DataSet : ScriptableObject
{
	[Token(Token = "0x40005A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public BuildType BuildType;

	[Token(Token = "0x40005A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TextAsset StageSet;

	[Token(Token = "0x60006DB")]
	[Address(RVA = "0xC56294", Offset = "0xC56294", VA = "0xC56294")]
	public DataSet()
	{
	}
}
[Token(Token = "0x2000158")]
public enum BuildType
{
	[Token(Token = "0x40005AB")]
	full,
	[Token(Token = "0x40005AC")]
	earlyAccess,
	[Token(Token = "0x40005AD")]
	demo,
	[Token(Token = "0x40005AE")]
	testing
}
[Token(Token = "0x2000159")]
[CreateAssetMenu(fileName = "ColorTheme")]
public class ColorTheme : ScriptableObject
{
	[Token(Token = "0x40005AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Header("ENVIRONMENT")]
	public Color floor;

	[Token(Token = "0x40005B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Color fog;

	[Token(Token = "0x40005B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Color camera;

	[Token(Token = "0x40005B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Texture2D floorGridTextureAndroid;

	[Token(Token = "0x40005B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Texture2D floorGridTextureDesktop;

	[Token(Token = "0x40005B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Color pauseOverlay;

	[Token(Token = "0x40005B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[Header("PASSTHROUGH")]
	public bool usingPassthrough;

	[Token(Token = "0x40005B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	[Range(0f, 1f)]
	public float pt_opacity;

	[Token(Token = "0x40005B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[Range(-1f, 1f)]
	public float pt_brightness;

	[Token(Token = "0x40005B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	[Range(-1f, 1f)]
	public float pt_contrast;

	[Token(Token = "0x40005B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[Header("PUZZLE")]
	public Color faceMaterialAndroid;

	[Token(Token = "0x40005BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Color faceMaterialDesktop;

	[Token(Token = "0x40005BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public Color arrow;

	[Token(Token = "0x40005BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public Color puzzleBase;

	[Token(Token = "0x40005BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public Color puzzleBaseEdge;

	[Token(Token = "0x40005BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public Color fadeSurface;

	[Token(Token = "0x40005BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public float fadeSurfaceTransitionFalloff;

	[Token(Token = "0x40005C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
	public float fadeSurfaceTransitionFalloffHeld;

	[Token(Token = "0x40005C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public Color fadeLine;

	[Token(Token = "0x40005C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public float fadeLineTransitionFalloff;

	[Token(Token = "0x40005C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
	public float fadeLineTransitionFalloffHeld;

	[Token(Token = "0x40005C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public Color gridUnsolved;

	[Token(Token = "0x40005C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	public Color gridSolved;

	[Token(Token = "0x40005C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	[Header("DUI")]
	public Color duiText;

	[Token(Token = "0x40005C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	public Color duiSprites;

	[Token(Token = "0x40005C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	public Color duiSpritesInverted;

	[Token(Token = "0x40005C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	public Color duiBackground;

	[Token(Token = "0x40005CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	[Header("VRUI")]
	public Color uiWhiteAndroid;

	[Token(Token = "0x40005CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	public Color uiWhiteAndroidHandTracking;

	[Token(Token = "0x40005CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	public Color uiWhiteDesktop;

	[Token(Token = "0x40005CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	public Color uiWhiteAlphaAndroid;

	[Token(Token = "0x40005CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	public Color uiWhiteAlphaDesktop;

	[Token(Token = "0x40005CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	public Color uiWhiteVeryAlphaAndroid;

	[Token(Token = "0x40005D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	public Color uiWhiteVeryAlphaDesktop;

	[Token(Token = "0x40005D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
	public Color uiTitleTextLight;

	[Token(Token = "0x40005D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
	public Color uiTitle;

	[Token(Token = "0x40005D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
	public Color uiBodyAndroid;

	[Token(Token = "0x40005D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
	public Color uiBodyDesktop;

	[Token(Token = "0x40005D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
	public Color uiBodyLight;

	[Token(Token = "0x40005D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
	public Color uiBlackMediumAlpha;

	[Token(Token = "0x40005D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x228")]
	public Color uiBlackAlphaDesktop;

	[Token(Token = "0x40005D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x238")]
	public Color uiBlackAlphaMobile;

	[Token(Token = "0x40005D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x248")]
	public Color uiDisclaimerAndroid;

	[Token(Token = "0x40005DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x258")]
	public Color uiDisclaimerDesktop;

	[Token(Token = "0x40005DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x268")]
	public Color uiFadeDistanceButton;

	[Token(Token = "0x40005DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x278")]
	public Texture2D unsolvedMiniMatText;

	[Token(Token = "0x40005DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x280")]
	[Header("LIGHTING")]
	public Color ambientLight;

	[Token(Token = "0x40005DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x290")]
	[Range(0f, 360f)]
	public float directionalLightAngle;

	[Token(Token = "0x40005DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x294")]
	[Range(0f, 1f)]
	[Space(15f)]
	public float mainLightIntensityDesktop;

	[Token(Token = "0x40005E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x298")]
	[Range(0f, 1f)]
	public float mainLightIntensityMobile;

	[Token(Token = "0x40005E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29C")]
	[Range(0f, 1f)]
	[Space(15f)]
	public float shadowIntensityDesktop;

	[Token(Token = "0x40005E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A0")]
	[Range(0f, 1f)]
	public float shadowIntensityMobile;

	[Token(Token = "0x40005E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A4")]
	[Space(15f)]
	[Range(0f, 1f)]
	public float fillLightIntensityDesktop;

	[Token(Token = "0x40005E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A8")]
	[Range(0f, 1f)]
	public float fillLightIntensityMobile;

	[Token(Token = "0x40005E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2AC")]
	[Header("HANDTRACKING")]
	public float lerpDamp;

	[Token(Token = "0x40005E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2B0")]
	[Header("HT - Hand State Color")]
	public Color defaultColor;

	[Token(Token = "0x40005E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C0")]
	public Color lowConfidenceColor;

	[Token(Token = "0x40005E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D0")]
	public Color systemGestureColor;

	[Token(Token = "0x40005E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2E0")]
	public Color indexOverUiColor;

	[Token(Token = "0x40005EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2F0")]
	public Color errorMessage;

	[Token(Token = "0x40005EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x300")]
	[Range(0f, 1f)]
	public float fresnelPower;

	[Token(Token = "0x40005EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x304")]
	[Header("HT - Hand Edge")]
	public float poorTrackingBlend;

	[Token(Token = "0x40005ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x308")]
	public float badTrackingBlend;

	[Token(Token = "0x40005EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30C")]
	public float poorTrackingAlphaBlend;

	[Token(Token = "0x40005EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x310")]
	public float badTrackingAlphaBlend;

	[Token(Token = "0x40005F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x314")]
	[Header("HT - Finger Color Blend")]
	public float defaultBlend;

	[Token(Token = "0x40005F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x318")]
	public float hoveringBlend;

	[Token(Token = "0x40005F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31C")]
	public float grabbingBlend;

	[Token(Token = "0x40005F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x320")]
	public float overUiBlend;

	[Token(Token = "0x40005F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x324")]
	[Header("HT - Finger Alpha Blend")]
	public float defaultAlphaBlend;

	[Token(Token = "0x40005F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x328")]
	public float hoveringAlphaBlend;

	[Token(Token = "0x40005F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x32C")]
	public float grabbingAlphaBlend;

	[Token(Token = "0x40005F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x330")]
	public float overUiAlphaBlend;

	[Token(Token = "0x40005F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x334")]
	[Header("HT - Hand State Opacity")]
	public float defaultAlpha;

	[Token(Token = "0x40005F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x338")]
	public float overUiAlpha;

	[Token(Token = "0x40005FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x33C")]
	public float lowConfidenceAlpha;

	[Token(Token = "0x40005FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x340")]
	[Header("HT - Hand outline")]
	public Color defaultLineColor;

	[Token(Token = "0x40005FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x350")]
	public float defaultWidth;

	[Token(Token = "0x40005FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x354")]
	public float grabbingWidth;

	[Token(Token = "0x40005FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x358")]
	public float defaultWidthOverlay;

	[Token(Token = "0x40005FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x35C")]
	public float grabbingWidthOverlay;

	[Token(Token = "0x60006DC")]
	[Address(RVA = "0xC5629C", Offset = "0xC5629C", VA = "0xC5629C")]
	public ColorTheme()
	{
	}
}
[Token(Token = "0x200015A")]
[CreateAssetMenu(fileName = "CubismSoundEffects")]
public class CubismSoundEffects : ScriptableObject
{
	[Token(Token = "0x4000600")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ClipMixer[] clips;

	[Token(Token = "0x60006DD")]
	[Address(RVA = "0xC562A4", Offset = "0xC562A4", VA = "0xC562A4")]
	public ClipMixer GetClip(AudioClipName clipName)
	{
		return null;
	}

	[Token(Token = "0x60006DE")]
	[Address(RVA = "0xC562F4", Offset = "0xC562F4", VA = "0xC562F4")]
	public CubismSoundEffects()
	{
	}
}
[Serializable]
[Token(Token = "0x200015B")]
public class ClipMixer
{
	[Token(Token = "0x4000601")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public AudioClipName clipName;

	[Token(Token = "0x4000602")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioClip clip;

	[Token(Token = "0x4000603")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AudioMixerGroup mixer;

	[Token(Token = "0x60006DF")]
	[Address(RVA = "0xC562FC", Offset = "0xC562FC", VA = "0xC562FC")]
	public ClipMixer()
	{
	}
}
[Token(Token = "0x200015C")]
public enum AudioClipName
{
	[Token(Token = "0x4000605")]
	HoverTap,
	[Token(Token = "0x4000606")]
	Locked,
	[Token(Token = "0x4000607")]
	SnapOnGrid,
	[Token(Token = "0x4000608")]
	GridPop,
	[Token(Token = "0x4000609")]
	Collision,
	[Token(Token = "0x400060A")]
	OutOfGridPing,
	[Token(Token = "0x400060B")]
	UnLock,
	[Token(Token = "0x400060C")]
	GrabPiece,
	[Token(Token = "0x400060D")]
	ClickTap
}
[Token(Token = "0x200015D")]
[CreateAssetMenu(fileName = "TrackList")]
public class TrackList : ScriptableObject
{
	[Token(Token = "0x400060E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioClip[] tracks;

	[Token(Token = "0x60006E0")]
	[Address(RVA = "0xC56304", Offset = "0xC56304", VA = "0xC56304")]
	public int Count()
	{
		return default(int);
	}

	[Token(Token = "0x60006E1")]
	[Address(RVA = "0xC56320", Offset = "0xC56320", VA = "0xC56320")]
	public AudioClip GetRandomTrack()
	{
		return null;
	}

	[Token(Token = "0x60006E2")]
	[Address(RVA = "0xC56370", Offset = "0xC56370", VA = "0xC56370")]
	public AudioClip[] GetAll()
	{
		return null;
	}

	[Token(Token = "0x60006E3")]
	[Address(RVA = "0xC56378", Offset = "0xC56378", VA = "0xC56378")]
	public AudioClip GetAtIndex(int index)
	{
		return null;
	}

	[Token(Token = "0x60006E4")]
	[Address(RVA = "0xC563C4", Offset = "0xC563C4", VA = "0xC563C4")]
	public TrackList()
	{
	}
}
[Token(Token = "0x200015E")]
public class BackButtonAnalytics : VrButtonAnalytics
{
	[Token(Token = "0x60006E5")]
	[Address(RVA = "0xC563CC", Offset = "0xC563CC", VA = "0xC563CC", Slot = "4")]
	protected override void FireEvent()
	{
	}

	[Token(Token = "0x60006E6")]
	[Address(RVA = "0xC56520", Offset = "0xC56520", VA = "0xC56520")]
	public BackButtonAnalytics()
	{
	}
}
[Token(Token = "0x200015F")]
public class ButtonAnalyticsEvent : MonoBehaviour
{
	[Token(Token = "0x400060F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string eventName;

	[Token(Token = "0x4000610")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public VrButton button;

	[Token(Token = "0x60006E7")]
	[Address(RVA = "0xC56530", Offset = "0xC56530", VA = "0xC56530")]
	private void Start()
	{
	}

	[Token(Token = "0x60006E8")]
	[Address(RVA = "0xC565BC", Offset = "0xC565BC", VA = "0xC565BC")]
	private void TrackSetEditorAccess()
	{
	}

	[Token(Token = "0x60006E9")]
	[Address(RVA = "0xC56618", Offset = "0xC56618", VA = "0xC56618")]
	public ButtonAnalyticsEvent()
	{
	}
}
[Token(Token = "0x2000160")]
public class SessionPing : StateBehaviour
{
	[Token(Token = "0x4000611")]
	private const int pingInterval = 60;

	[Token(Token = "0x4000612")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private int sessionMinutes;

	[Token(Token = "0x4000613")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float startTime;

	[Token(Token = "0x60006EA")]
	[Address(RVA = "0xC56620", Offset = "0xC56620", VA = "0xC56620")]
	public void Start()
	{
	}

	[Token(Token = "0x60006EB")]
	[Address(RVA = "0xC5663C", Offset = "0xC5663C", VA = "0xC5663C")]
	public void Update()
	{
	}

	[Token(Token = "0x60006EC")]
	[Address(RVA = "0xC5673C", Offset = "0xC5673C", VA = "0xC5673C")]
	private void OnApplicationFocus(bool isFocused)
	{
	}

	[Token(Token = "0x60006ED")]
	[Address(RVA = "0xC56780", Offset = "0xC56780", VA = "0xC56780")]
	private void OnApplicationPause(bool isPaused)
	{
	}

	[Token(Token = "0x60006EE")]
	[Address(RVA = "0xC56760", Offset = "0xC56760", VA = "0xC56760")]
	private void ResetTime()
	{
	}

	[Token(Token = "0x60006EF")]
	[Address(RVA = "0xC567A4", Offset = "0xC567A4", VA = "0xC567A4")]
	public SessionPing()
	{
	}
}
[Token(Token = "0x2000161")]
public class VrButtonAnalytics : MonoBehaviour
{
	[Token(Token = "0x4000614")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string buttonName;

	[Token(Token = "0x4000615")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public VrButton _button;

	[Token(Token = "0x60006F0")]
	[Address(RVA = "0xC567AC", Offset = "0xC567AC", VA = "0xC567AC")]
	private void Start()
	{
	}

	[Token(Token = "0x60006F1")]
	[Address(RVA = "0xC56400", Offset = "0xC56400", VA = "0xC56400", Slot = "4")]
	protected virtual void FireEvent()
	{
	}

	[Token(Token = "0x60006F2")]
	[Address(RVA = "0xC56528", Offset = "0xC56528", VA = "0xC56528")]
	public VrButtonAnalytics()
	{
	}
}
[Token(Token = "0x2000162")]
public static class ApiEndpoints
{
	[Token(Token = "0x4000616")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static string StagingUri;

	[Token(Token = "0x4000617")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static string ProductionUri;

	[Token(Token = "0x60006F3")]
	[Address(RVA = "0xC56890", Offset = "0xC56890", VA = "0xC56890")]
	public static string HealthUrl()
	{
		return null;
	}

	[Token(Token = "0x60006F4")]
	[Address(RVA = "0xC56934", Offset = "0xC56934", VA = "0xC56934")]
	public static string UploadLevelUrl()
	{
		return null;
	}

	[Token(Token = "0x60006F5")]
	[Address(RVA = "0xC569D8", Offset = "0xC569D8", VA = "0xC569D8")]
	public static string GetLevelsUrl(int page, int puzzlesPerPage)
	{
		return null;
	}

	[Token(Token = "0x60006F6")]
	[Address(RVA = "0xC56BCC", Offset = "0xC56BCC", VA = "0xC56BCC")]
	public static string GetLevel(string id)
	{
		return null;
	}

	[Token(Token = "0x60006F7")]
	[Address(RVA = "0xC56C78", Offset = "0xC56C78", VA = "0xC56C78")]
	private static string GetBaseUrl()
	{
		return null;
	}
}
[Token(Token = "0x2000163")]
public class ApiService : MonoBehaviour
{
	[Token(Token = "0x2000164")]
	[CompilerGenerated]
	private sealed class <UploadLevel>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400061C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400061D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400061E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Level level;

		[Token(Token = "0x400061F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public JSONNode levelJson;

		[Token(Token = "0x4000620")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public ApiService <>4__this;

		[Token(Token = "0x4000621")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Action<string> OnSuccess;

		[Token(Token = "0x4000622")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Action<string> OnError;

		[Token(Token = "0x17000088")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000702")]
			[Address(RVA = "0xC572AC", Offset = "0xC572AC", VA = "0xC572AC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000089")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000704")]
			[Address(RVA = "0xC572F4", Offset = "0xC572F4", VA = "0xC572F4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60006FF")]
		[Address(RVA = "0xC56DDC", Offset = "0xC56DDC", VA = "0xC56DDC")]
		[DebuggerHidden]
		public <UploadLevel>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x6000700")]
		[Address(RVA = "0xC56FE0", Offset = "0xC56FE0", VA = "0xC56FE0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000701")]
		[Address(RVA = "0xC56FE4", Offset = "0xC56FE4", VA = "0xC56FE4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000703")]
		[Address(RVA = "0xC572B4", Offset = "0xC572B4", VA = "0xC572B4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000165")]
	[CompilerGenerated]
	private sealed class <PostRequest>d__7 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000623")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000624")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000625")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public JSONNode data;

		[Token(Token = "0x4000626")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Action<string> OnError;

		[Token(Token = "0x4000627")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Action<string> OnSuccess;

		[Token(Token = "0x4000628")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private UnityWebRequest <request>5__2;

		[Token(Token = "0x1700008A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000708")]
			[Address(RVA = "0xC575D4", Offset = "0xC575D4", VA = "0xC575D4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700008B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600070A")]
			[Address(RVA = "0xC5761C", Offset = "0xC5761C", VA = "0xC5761C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000705")]
		[Address(RVA = "0xC56E80", Offset = "0xC56E80", VA = "0xC56E80")]
		[DebuggerHidden]
		public <PostRequest>d__7(int <>1__state)
		{
		}

		[Token(Token = "0x6000706")]
		[Address(RVA = "0xC572FC", Offset = "0xC572FC", VA = "0xC572FC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000707")]
		[Address(RVA = "0xC57300", Offset = "0xC57300", VA = "0xC57300", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000709")]
		[Address(RVA = "0xC575DC", Offset = "0xC575DC", VA = "0xC575DC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000618")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private State _state;

	[Token(Token = "0x4000619")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[Header("Debug")]
	public TextAsset _levelJson;

	[Token(Token = "0x400061A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool _uploadLevel;

	[Token(Token = "0x400061B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	[Space(10f)]
	public bool _downloadPuzzles;

	[Token(Token = "0x60006F9")]
	[Address(RVA = "0xC56D40", Offset = "0xC56D40", VA = "0xC56D40")]
	public void Setup(State state)
	{
	}

	[Token(Token = "0x60006FA")]
	[Address(RVA = "0xC56D48", Offset = "0xC56D48", VA = "0xC56D48")]
	private void Update()
	{
	}

	[Token(Token = "0x60006FB")]
	[Address(RVA = "0xC56D4C", Offset = "0xC56D4C", VA = "0xC56D4C")]
	[IteratorStateMachine(typeof(<UploadLevel>d__6))]
	public IEnumerator UploadLevel(Level level, JSONNode levelJson, Action<string> OnSuccess, Action<string> OnError)
	{
		return null;
	}

	[Token(Token = "0x60006FC")]
	[Address(RVA = "0xC56E04", Offset = "0xC56E04", VA = "0xC56E04")]
	[IteratorStateMachine(typeof(<PostRequest>d__7))]
	public IEnumerator PostRequest(string uri, JSONNode data, Action<string> OnSuccess, Action<string> OnError)
	{
		return null;
	}

	[Token(Token = "0x60006FD")]
	[Address(RVA = "0xC56EA8", Offset = "0xC56EA8", VA = "0xC56EA8")]
	public void GetRequest(string uri, Action<string> OnSuccess, Action<string> OnError)
	{
	}

	[Token(Token = "0x60006FE")]
	[Address(RVA = "0xC56FD8", Offset = "0xC56FD8", VA = "0xC56FD8")]
	public ApiService()
	{
	}
}
[Token(Token = "0x2000167")]
public class JsonNode
{
	[Token(Token = "0x600070D")]
	[Address(RVA = "0xC57684", Offset = "0xC57684", VA = "0xC57684")]
	public JsonNode()
	{
	}
}
[Token(Token = "0x2000168")]
public class ArcadeResetService : MonoBehaviour
{
	[Token(Token = "0x600070E")]
	[Address(RVA = "0xC5768C", Offset = "0xC5768C", VA = "0xC5768C")]
	public ArcadeResetService()
	{
	}
}
[Token(Token = "0x2000169")]
public class CloudSaveService : Loader
{
	[Token(Token = "0x400062B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private State _state;

	[Token(Token = "0x600070F")]
	[Address(RVA = "0xC57694", Offset = "0xC57694", VA = "0xC57694")]
	public CloudSaveService(State state)
	{
	}
}
[Token(Token = "0x200016A")]
public class CollisionListener : MonoBehaviour
{
	[Token(Token = "0x400062D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Dictionary<Rigidbody, float> _recentCollisions;

	[Token(Token = "0x400062E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Rigidbody[] _keys;

	[Token(Token = "0x400062F")]
	private const float CollisionTimeOut = 0.3f;

	[Token(Token = "0x1400005C")]
	public event Action<Collision> OnCollision
	{
		[Token(Token = "0x6000711")]
		[Address(RVA = "0xC57A20", Offset = "0xC57A20", VA = "0xC57A20")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000712")]
		[Address(RVA = "0xC57AD0", Offset = "0xC57AD0", VA = "0xC57AD0")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x6000713")]
	[Address(RVA = "0xC57B80", Offset = "0xC57B80", VA = "0xC57B80")]
	private void Update()
	{
	}

	[Token(Token = "0x6000714")]
	[Address(RVA = "0xC57CBC", Offset = "0xC57CBC", VA = "0xC57CBC")]
	private void OnCollisionEnter(Collision other)
	{
	}

	[Token(Token = "0x6000715")]
	[Address(RVA = "0xC57E08", Offset = "0xC57E08", VA = "0xC57E08")]
	private void FireOnCollision(Collision other)
	{
	}

	[Token(Token = "0x6000716")]
	[Address(RVA = "0xC57E24", Offset = "0xC57E24", VA = "0xC57E24")]
	public CollisionListener()
	{
	}
}
[Token(Token = "0x200016B")]
public enum ColorThemeType
{
	[Token(Token = "0x4000631")]
	light,
	[Token(Token = "0x4000632")]
	dark,
	[Token(Token = "0x4000633")]
	passThrough,
	[Token(Token = "0x4000634")]
	custom
}
[Token(Token = "0x200016C")]
public class ColorThemeService : MonoBehaviour
{
	[Token(Token = "0x200016D")]
	[CompilerGenerated]
	private sealed class <_ApplyTheme>d__50 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400065F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000660")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000661")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ColorThemeService <>4__this;

		[Token(Token = "0x4000662")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public ColorTheme theme;

		[Token(Token = "0x1700008C")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000728")]
			[Address(RVA = "0xC5A780", Offset = "0xC5A780", VA = "0xC5A780", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700008D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600072A")]
			[Address(RVA = "0xC5A7C8", Offset = "0xC5A7C8", VA = "0xC5A7C8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000725")]
		[Address(RVA = "0xC5A12C", Offset = "0xC5A12C", VA = "0xC5A12C")]
		[DebuggerHidden]
		public <_ApplyTheme>d__50(int <>1__state)
		{
		}

		[Token(Token = "0x6000726")]
		[Address(RVA = "0xC5A668", Offset = "0xC5A668", VA = "0xC5A668", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000727")]
		[Address(RVA = "0xC5A66C", Offset = "0xC5A66C", VA = "0xC5A66C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000729")]
		[Address(RVA = "0xC5A788", Offset = "0xC5A788", VA = "0xC5A788", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000635")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ColorTheme _defaultTheme;

	[Token(Token = "0x4000636")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ColorTheme _nightTheme;

	[Token(Token = "0x4000637")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ColorTheme _passThrough;

	[Token(Token = "0x4000638")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public CameraFader _fader;

	[Token(Token = "0x4000639")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public LightingAngle _lightingAngle;

	[Token(Token = "0x400063A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[Header("Environment")]
	public Material _floorMat;

	[Token(Token = "0x400063B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject _floorWrapper;

	[Token(Token = "0x400063C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Camera[] _cameras;

	[Token(Token = "0x400063D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[Header("Passthrough")]
	public OVRManager _ovrManager;

	[Token(Token = "0x400063E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[Header("Puzzle")]
	public Material _gridMat;

	[Token(Token = "0x400063F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Material _faceMat;

	[Token(Token = "0x4000640")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Material _arrowMat;

	[Token(Token = "0x4000641")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Material _arrowMatFade;

	[Token(Token = "0x4000642")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Material _fadeSurface;

	[Token(Token = "0x4000643")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Material _fadeLine;

	[Token(Token = "0x4000644")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public Material _puzzleBase;

	[Token(Token = "0x4000645")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public Material _puzzleBaseEdge;

	[Token(Token = "0x4000646")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[Header("DUI")]
	public Material _duiBackground;

	[Token(Token = "0x4000647")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public Material _duiText;

	[Token(Token = "0x4000648")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public Material _duiSprite;

	[Token(Token = "0x4000649")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public Material _duiSpriteInverted;

	[Token(Token = "0x400064A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	[Header("VRUI")]
	public Material _uiWhiteAlpha;

	[Token(Token = "0x400064B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public Material _uiWhiteVeryAlpha;

	[Token(Token = "0x400064C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public Material _uiWhite;

	[Token(Token = "0x400064D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public Material _uiWhiteSprite;

	[Token(Token = "0x400064E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public Material _uiTitleTextLight;

	[Token(Token = "0x400064F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public Material _uiGeometry;

	[Token(Token = "0x4000650")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public Material _uiTitle;

	[Token(Token = "0x4000651")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public Material _uiBody;

	[Token(Token = "0x4000652")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public Material _uiBodyLight;

	[Token(Token = "0x4000653")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	public Material _uiMediumAlpha;

	[Token(Token = "0x4000654")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	public Material _uiBlackAlpha;

	[Token(Token = "0x4000655")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	public Material _unsolvedMiniCubeMat;

	[Token(Token = "0x4000656")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	public Material _uiDisclaimertext;

	[Token(Token = "0x4000657")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	public Material _uiFadeDistanceButton;

	[Token(Token = "0x4000658")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	[Header("Lighting")]
	public Light _mainLight;

	[Token(Token = "0x4000659")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	public Light _fillLight;

	[Token(Token = "0x400065A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	[Header("Hands")]
	public Material _errorMessageHands;

	[Token(Token = "0x400065B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	private State _state;

	[Token(Token = "0x400065C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	private ColorTheme _customThemeOverride;

	[Token(Token = "0x400065D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	private OVRPassthroughLayer _passThroughLayer;

	[Token(Token = "0x400065E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	private bool _isHandTracking;

	[Token(Token = "0x6000717")]
	[Address(RVA = "0xC57EC4", Offset = "0xC57EC4", VA = "0xC57EC4")]
	public void Setup(State state)
	{
	}

	[Token(Token = "0x6000718")]
	[Address(RVA = "0xC59590", Offset = "0xC59590", VA = "0xC59590")]
	private void Update()
	{
	}

	[Token(Token = "0x6000719")]
	[Address(RVA = "0xC59F28", Offset = "0xC59F28", VA = "0xC59F28")]
	public void ApplyDefaultTheme(bool fade = true)
	{
	}

	[Token(Token = "0x600071A")]
	[Address(RVA = "0xC59FE4", Offset = "0xC59FE4", VA = "0xC59FE4")]
	public void ApplyNightTheme(bool fade = true)
	{
	}

	[Token(Token = "0x600071B")]
	[Address(RVA = "0xC59FF0", Offset = "0xC59FF0", VA = "0xC59FF0")]
	public void ApplyPassthroughTheme(bool fade = true)
	{
	}

	[Token(Token = "0x600071C")]
	[Address(RVA = "0xC59FFC", Offset = "0xC59FFC", VA = "0xC59FFC")]
	public void ApplyCustomTheme(bool fade = true)
	{
	}

	[Token(Token = "0x600071D")]
	[Address(RVA = "0xC59F34", Offset = "0xC59F34", VA = "0xC59F34")]
	public void SetColorTheme(ColorThemeType themeType, bool fade = true)
	{
	}

	[Token(Token = "0x600071E")]
	[Address(RVA = "0xC5A008", Offset = "0xC5A008", VA = "0xC5A008")]
	private ColorTheme GetThemeByType(ColorThemeType type)
	{
		return null;
	}

	[Token(Token = "0x600071F")]
	[Address(RVA = "0xC5A0B8", Offset = "0xC5A0B8", VA = "0xC5A0B8")]
	[IteratorStateMachine(typeof(<_ApplyTheme>d__50))]
	private IEnumerator _ApplyTheme(ColorTheme theme)
	{
		return null;
	}

	[Token(Token = "0x6000720")]
	[Address(RVA = "0xC59648", Offset = "0xC59648", VA = "0xC59648")]
	private void ApplyTheme(ColorTheme theme)
	{
	}

	[Token(Token = "0x6000721")]
	[Address(RVA = "0xC5A154", Offset = "0xC5A154", VA = "0xC5A154")]
	private bool UseGamma()
	{
		return default(bool);
	}

	[Token(Token = "0x6000722")]
	[Address(RVA = "0xC58084", Offset = "0xC58084", VA = "0xC58084")]
	private bool TryGetCustomTheme(out ColorTheme customTheme)
	{
		return default(bool);
	}

	[Token(Token = "0x6000723")]
	[Address(RVA = "0xC5A15C", Offset = "0xC5A15C", VA = "0xC5A15C")]
	private bool GetFromFileSystem(out JSONNode json)
	{
		return default(bool);
	}

	[Token(Token = "0x6000724")]
	[Address(RVA = "0xC5A660", Offset = "0xC5A660", VA = "0xC5A660")]
	public ColorThemeService()
	{
	}
}
[Token(Token = "0x200016E")]
public class CommunityPuzzleService : SetupableBehaviour
{
	[Token(Token = "0x200016F")]
	[CompilerGenerated]
	private sealed class <_CheckServerConnection>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000667")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000668")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000669")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CommunityPuzzleService <>4__this;

		[Token(Token = "0x1700008E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000739")]
			[Address(RVA = "0xC5B6C4", Offset = "0xC5B6C4", VA = "0xC5B6C4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700008F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600073B")]
			[Address(RVA = "0xC5B70C", Offset = "0xC5B70C", VA = "0xC5B70C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000736")]
		[Address(RVA = "0xC5A96C", Offset = "0xC5A96C", VA = "0xC5A96C")]
		[DebuggerHidden]
		public <_CheckServerConnection>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x6000737")]
		[Address(RVA = "0xC5B580", Offset = "0xC5B580", VA = "0xC5B580", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000738")]
		[Address(RVA = "0xC5B584", Offset = "0xC5B584", VA = "0xC5B584", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600073A")]
		[Address(RVA = "0xC5B6CC", Offset = "0xC5B6CC", VA = "0xC5B6CC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000170")]
	[CompilerGenerated]
	private sealed class <QueryPuzzles>d__8 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400066A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400066B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400066C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CommunityPuzzleService <>4__this;

		[Token(Token = "0x400066D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public PuzzleQueryOptions options;

		[Token(Token = "0x17000090")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600073F")]
			[Address(RVA = "0xC5B8D0", Offset = "0xC5B8D0", VA = "0xC5B8D0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000091")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000741")]
			[Address(RVA = "0xC5B918", Offset = "0xC5B918", VA = "0xC5B918", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600073C")]
		[Address(RVA = "0xC5AB6C", Offset = "0xC5AB6C", VA = "0xC5AB6C")]
		[DebuggerHidden]
		public <QueryPuzzles>d__8(int <>1__state)
		{
		}

		[Token(Token = "0x600073D")]
		[Address(RVA = "0xC5B714", Offset = "0xC5B714", VA = "0xC5B714", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600073E")]
		[Address(RVA = "0xC5B718", Offset = "0xC5B718", VA = "0xC5B718", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000740")]
		[Address(RVA = "0xC5B8D8", Offset = "0xC5B8D8", VA = "0xC5B8D8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000171")]
	[CompilerGenerated]
	private sealed class <UploadPuzzle>d__9 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400066E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400066F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000670")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Level level;

		[Token(Token = "0x4000671")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private UnityWebRequest <request>5__2;

		[Token(Token = "0x17000092")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000745")]
			[Address(RVA = "0xC5BEF0", Offset = "0xC5BEF0", VA = "0xC5BEF0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000093")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000747")]
			[Address(RVA = "0xC5BF38", Offset = "0xC5BF38", VA = "0xC5BF38", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000742")]
		[Address(RVA = "0xC5AB94", Offset = "0xC5AB94", VA = "0xC5AB94")]
		[DebuggerHidden]
		public <UploadPuzzle>d__9(int <>1__state)
		{
		}

		[Token(Token = "0x6000743")]
		[Address(RVA = "0xC5B920", Offset = "0xC5B920", VA = "0xC5B920", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000744")]
		[Address(RVA = "0xC5B924", Offset = "0xC5B924", VA = "0xC5B924", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000746")]
		[Address(RVA = "0xC5BEF8", Offset = "0xC5BEF8", VA = "0xC5BEF8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000663")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private State _state;

	[Token(Token = "0x4000664")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private ApiService _apiService;

	[Token(Token = "0x4000665")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private PuzzleParser _parser;

	[Token(Token = "0x4000666")]
	private const float PingServerInterval = 2f;

	[Token(Token = "0x600072B")]
	[Address(RVA = "0xC5A7D0", Offset = "0xC5A7D0", VA = "0xC5A7D0")]
	public void Setup(State state, ApiService apiService)
	{
	}

	[Token(Token = "0x600072C")]
	[Address(RVA = "0xC5A8CC", Offset = "0xC5A8CC", VA = "0xC5A8CC")]
	private void CheckServerConnection()
	{
	}

	[Token(Token = "0x600072D")]
	[Address(RVA = "0xC5A904", Offset = "0xC5A904", VA = "0xC5A904")]
	[IteratorStateMachine(typeof(<_CheckServerConnection>d__6))]
	private IEnumerator _CheckServerConnection()
	{
		return null;
	}

	[Token(Token = "0x600072E")]
	[Address(RVA = "0xC5A994", Offset = "0xC5A994", VA = "0xC5A994")]
	private void RegisterActions(ControllerAction action)
	{
	}

	[Token(Token = "0x600072F")]
	[Address(RVA = "0xC5AA90", Offset = "0xC5AA90", VA = "0xC5AA90")]
	[IteratorStateMachine(typeof(<QueryPuzzles>d__8))]
	private IEnumerator QueryPuzzles(PuzzleQueryOptions options)
	{
		return null;
	}

	[Token(Token = "0x6000730")]
	[Address(RVA = "0xC5AB04", Offset = "0xC5AB04", VA = "0xC5AB04")]
	[IteratorStateMachine(typeof(<UploadPuzzle>d__9))]
	private IEnumerator UploadPuzzle(Level level)
	{
		return null;
	}

	[Token(Token = "0x6000731")]
	[Address(RVA = "0xC5ABBC", Offset = "0xC5ABBC", VA = "0xC5ABBC")]
	public CommunityPuzzleService()
	{
	}
}
[Token(Token = "0x2000172")]
public class CreditSong : MonoBehaviour
{
	[Token(Token = "0x2000173")]
	[CompilerGenerated]
	private sealed class <>c__DisplayClass13_0
	{
		[Token(Token = "0x400067A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool loaded;

		[Token(Token = "0x6000753")]
		[Address(RVA = "0xC5C550", Offset = "0xC5C550", VA = "0xC5C550")]
		public <>c__DisplayClass13_0()
		{
		}

		[Token(Token = "0x6000754")]
		[Address(RVA = "0xC5C558", Offset = "0xC5C558", VA = "0xC5C558")]
		internal void <PlayCredits>b__0()
		{
		}
	}

	[Token(Token = "0x2000174")]
	[CompilerGenerated]
	private sealed class <PlayCredits>d__13 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400067B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400067C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400067D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CreditSong <>4__this;

		[Token(Token = "0x400067E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private <>c__DisplayClass13_0 <>8__1;

		[Token(Token = "0x400067F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int <i>5__2;

		[Token(Token = "0x17000094")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000758")]
			[Address(RVA = "0xC5C904", Offset = "0xC5C904", VA = "0xC5C904", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000095")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600075A")]
			[Address(RVA = "0xC5C94C", Offset = "0xC5C94C", VA = "0xC5C94C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000755")]
		[Address(RVA = "0xC5C438", Offset = "0xC5C438", VA = "0xC5C438")]
		[DebuggerHidden]
		public <PlayCredits>d__13(int <>1__state)
		{
		}

		[Token(Token = "0x6000756")]
		[Address(RVA = "0xC5C564", Offset = "0xC5C564", VA = "0xC5C564", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000757")]
		[Address(RVA = "0xC5C568", Offset = "0xC5C568", VA = "0xC5C568", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000759")]
		[Address(RVA = "0xC5C90C", Offset = "0xC5C90C", VA = "0xC5C90C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000673")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public PuzzleLoader _loader;

	[Token(Token = "0x4000674")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AudioSource _song;

	[Token(Token = "0x4000675")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Text _title;

	[Token(Token = "0x4000676")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public PageGroup _pageGroup;

	[Token(Token = "0x4000677")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public CreditPage[] _pages;

	[Token(Token = "0x4000678")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private State _state;

	[Token(Token = "0x4000679")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private StaticPuzzleLoader _staticPuzzleLoader;

	[Token(Token = "0x1400005D")]
	public event Action OnFinished
	{
		[Token(Token = "0x6000748")]
		[Address(RVA = "0xC5BF40", Offset = "0xC5BF40", VA = "0xC5BF40")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000749")]
		[Address(RVA = "0xC5BFDC", Offset = "0xC5BFDC", VA = "0xC5BFDC")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x600074A")]
	[Address(RVA = "0xC5C078", Offset = "0xC5C078", VA = "0xC5C078")]
	public void Setup(State state, StaticPuzzleLoader staticPuzzleLoader)
	{
	}

	[Token(Token = "0x600074B")]
	[Address(RVA = "0xC5C080", Offset = "0xC5C080", VA = "0xC5C080")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600074C")]
	[Address(RVA = "0xC5C27C", Offset = "0xC5C27C", VA = "0xC5C27C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600074D")]
	[Address(RVA = "0xC5C214", Offset = "0xC5C214", VA = "0xC5C214")]
	[IteratorStateMachine(typeof(<PlayCredits>d__13))]
	private IEnumerator PlayCredits()
	{
		return null;
	}

	[Token(Token = "0x600074E")]
	[Address(RVA = "0xC5C460", Offset = "0xC5C460", VA = "0xC5C460")]
	private void SetSongPlaying(bool playing)
	{
	}

	[Token(Token = "0x600074F")]
	[Address(RVA = "0xC5C48C", Offset = "0xC5C48C", VA = "0xC5C48C")]
	private void HideAllPages()
	{
	}

	[Token(Token = "0x6000750")]
	[Address(RVA = "0xC5C1E4", Offset = "0xC5C1E4", VA = "0xC5C1E4")]
	private void SetCreditSettings(bool on)
	{
	}

	[Token(Token = "0x6000751")]
	[Address(RVA = "0xC5C41C", Offset = "0xC5C41C", VA = "0xC5C41C")]
	private void FireFinished()
	{
	}

	[Token(Token = "0x6000752")]
	[Address(RVA = "0xC5C4F8", Offset = "0xC5C4F8", VA = "0xC5C4F8")]
	public CreditSong()
	{
	}
}
[Serializable]
[Token(Token = "0x2000175")]
public class CreditPage
{
	[Token(Token = "0x4000680")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float timeStamp;

	[Token(Token = "0x4000681")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string title;

	[Token(Token = "0x4000682")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject page;

	[Token(Token = "0x600075B")]
	[Address(RVA = "0xC5C954", Offset = "0xC5C954", VA = "0xC5C954")]
	public CreditPage()
	{
	}
}
[Token(Token = "0x2000176")]
public class CustomPuzzleLoader
{
	[Token(Token = "0x4000683")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private List<Level> _levels;

	[Token(Token = "0x4000684")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Dictionary<string, string> _fileNames;

	[Token(Token = "0x4000685")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private StageSetParser _parser;

	[Token(Token = "0x4000686")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private State _state;

	[Token(Token = "0x4000687")]
	private const int MinVersion = 1;

	[Token(Token = "0x600075C")]
	[Address(RVA = "0xC5C95C", Offset = "0xC5C95C", VA = "0xC5C95C")]
	public CustomPuzzleLoader(State state)
	{
	}

	[Token(Token = "0x600075D")]
	[Address(RVA = "0xC5CDEC", Offset = "0xC5CDEC", VA = "0xC5CDEC")]
	private void RegisterActions(ControllerAction action)
	{
	}

	[Token(Token = "0x600075E")]
	[Address(RVA = "0xC5CAB8", Offset = "0xC5CAB8", VA = "0xC5CAB8")]
	private void PopulateCustomPuzzles()
	{
	}

	[Token(Token = "0x600075F")]
	[Address(RVA = "0xC5CEB4", Offset = "0xC5CEB4", VA = "0xC5CEB4")]
	private string[] GetPuzzleData()
	{
		return null;
	}

	[Token(Token = "0x6000760")]
	[Address(RVA = "0xC5D0AC", Offset = "0xC5D0AC", VA = "0xC5D0AC")]
	private string[] GetFromResources()
	{
		return null;
	}

	[Token(Token = "0x6000761")]
	[Address(RVA = "0xC5CEB8", Offset = "0xC5CEB8", VA = "0xC5CEB8")]
	private string[] GetFromFileSystem()
	{
		return null;
	}
}
[Token(Token = "0x2000178")]
public class DiscordService : MonoBehaviour
{
	[Token(Token = "0x2000179")]
	[CompilerGenerated]
	private sealed class <_PostPuzzleToDiscord>d__9 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000692")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000693")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000694")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string uri;

		[Token(Token = "0x4000695")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public DiscordService <>4__this;

		[Token(Token = "0x4000696")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string author;

		[Token(Token = "0x4000697")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public ulong userId;

		[Token(Token = "0x4000698")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public string puzzlename;

		[Token(Token = "0x4000699")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public byte[] puzzle;

		[Token(Token = "0x400069A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public bool isAdminPost;

		[Token(Token = "0x17000096")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000771")]
			[Address(RVA = "0xC5E5D4", Offset = "0xC5E5D4", VA = "0xC5E5D4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000097")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000773")]
			[Address(RVA = "0xC5E61C", Offset = "0xC5E61C", VA = "0xC5E61C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600076E")]
		[Address(RVA = "0xC5D7C4", Offset = "0xC5D7C4", VA = "0xC5D7C4")]
		[DebuggerHidden]
		public <_PostPuzzleToDiscord>d__9(int <>1__state)
		{
		}

		[Token(Token = "0x600076F")]
		[Address(RVA = "0xC5E508", Offset = "0xC5E508", VA = "0xC5E508", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000770")]
		[Address(RVA = "0xC5E50C", Offset = "0xC5E50C", VA = "0xC5E50C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000772")]
		[Address(RVA = "0xC5E5DC", Offset = "0xC5E5DC", VA = "0xC5E5DC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400068C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public LayerMask _gridOnly;

	[Token(Token = "0x400068D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public LayerMask _fullSolution;

	[Token(Token = "0x400068E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Material _faceMaterial;

	[Token(Token = "0x400068F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Material _edgeMaterial;

	[Token(Token = "0x4000690")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Camera _puzzleCam;

	[Token(Token = "0x4000691")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Grid _grid;

	[Token(Token = "0x6000767")]
	[Address(RVA = "0xC5D5D4", Offset = "0xC5D5D4", VA = "0xC5D5D4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000768")]
	[Address(RVA = "0xC5D5D8", Offset = "0xC5D5D8", VA = "0xC5D5D8")]
	public void PostToModChannel(string author, ulong userId, string puzzleName, byte[] puzzle)
	{
	}

	[Token(Token = "0x6000769")]
	[Address(RVA = "0xC5D724", Offset = "0xC5D724", VA = "0xC5D724")]
	public void PostToPublicChannel(string author, string puzzleName, byte[] puzzle)
	{
	}

	[Token(Token = "0x600076A")]
	[Address(RVA = "0xC5D67C", Offset = "0xC5D67C", VA = "0xC5D67C")]
	[IteratorStateMachine(typeof(<_PostPuzzleToDiscord>d__9))]
	private IEnumerator _PostPuzzleToDiscord(string author, ulong userId, string puzzlename, byte[] puzzle, string uri, bool isAdminPost)
	{
		return null;
	}

	[Token(Token = "0x600076B")]
	[Address(RVA = "0xC5D7EC", Offset = "0xC5D7EC", VA = "0xC5D7EC")]
	private WWWForm GetFormData(string username, ulong userId, string puzzlename, byte[] puzzle, bool isAdminPost)
	{
		return null;
	}

	[Token(Token = "0x600076C")]
	[Address(RVA = "0xC5E304", Offset = "0xC5E304", VA = "0xC5E304")]
	private byte[] GetImage()
	{
		return null;
	}

	[Token(Token = "0x600076D")]
	[Address(RVA = "0xC5E500", Offset = "0xC5E500", VA = "0xC5E500")]
	public DiscordService()
	{
	}
}
[Token(Token = "0x200017A")]
public class DynamicQualityService
{
	[Token(Token = "0x400069B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private SettingsModel _settings;

	[Token(Token = "0x400069C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private GameState _gameState;

	[Token(Token = "0x400069D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private PageGroup _menuPageGroup;

	[Token(Token = "0x400069E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private HMD[] _supportedDevices;

	[Token(Token = "0x400069F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private string[] _90FpsPages;

	[Token(Token = "0x6000774")]
	[Address(RVA = "0xC5E624", Offset = "0xC5E624", VA = "0xC5E624")]
	public DynamicQualityService(SettingsModel settings, GameState gameState, PageGroup menuPageGroup)
	{
	}

	[Token(Token = "0x6000775")]
	[Address(RVA = "0xC5EAAC", Offset = "0xC5EAAC", VA = "0xC5EAAC")]
	private void SetRefreshRate()
	{
	}
}
[Token(Token = "0x200017B")]
public class EditorService : MonoBehaviour
{
	[Token(Token = "0x200017C")]
	[CompilerGenerated]
	private sealed class <_SetFreeze>d__23 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40006B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40006B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40006B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float delay;

		[Token(Token = "0x40006B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public EditorService <>4__this;

		[Token(Token = "0x40006B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool value;

		[Token(Token = "0x17000098")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600078F")]
			[Address(RVA = "0xC60A40", Offset = "0xC60A40", VA = "0xC60A40", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000099")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000791")]
			[Address(RVA = "0xC60A88", Offset = "0xC60A88", VA = "0xC60A88", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600078C")]
		[Address(RVA = "0xC60380", Offset = "0xC60380", VA = "0xC60380")]
		[DebuggerHidden]
		public <_SetFreeze>d__23(int <>1__state)
		{
		}

		[Token(Token = "0x600078D")]
		[Address(RVA = "0xC60978", Offset = "0xC60978", VA = "0xC60978", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600078E")]
		[Address(RVA = "0xC6097C", Offset = "0xC6097C", VA = "0xC6097C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000790")]
		[Address(RVA = "0xC60A48", Offset = "0xC60A48", VA = "0xC60A48", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200017D")]
	[CompilerGenerated]
	private sealed class <SwitchToPieceEditingOnTriggerUp>d__26 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40006B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40006BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40006BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public EditorService <>4__this;

		[Token(Token = "0x40006BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Controller <controller>5__2;

		[Token(Token = "0x1700009A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000795")]
			[Address(RVA = "0xC60BA8", Offset = "0xC60BA8", VA = "0xC60BA8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700009B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000797")]
			[Address(RVA = "0xC60BF0", Offset = "0xC60BF0", VA = "0xC60BF0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000792")]
		[Address(RVA = "0xC6073C", Offset = "0xC6073C", VA = "0xC6073C")]
		[DebuggerHidden]
		public <SwitchToPieceEditingOnTriggerUp>d__26(int <>1__state)
		{
		}

		[Token(Token = "0x6000793")]
		[Address(RVA = "0xC60A90", Offset = "0xC60A90", VA = "0xC60A90", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000794")]
		[Address(RVA = "0xC60A94", Offset = "0xC60A94", VA = "0xC60A94", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000796")]
		[Address(RVA = "0xC60BB0", Offset = "0xC60BB0", VA = "0xC60BB0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40006A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GridCreation _gridCreation;

	[Token(Token = "0x40006A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public PieceCreation _pieceCreation;

	[Token(Token = "0x40006A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public PuzzleSaver _puzzleSaver;

	[Token(Token = "0x40006A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform _gridParent;

	[Token(Token = "0x40006A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform _piecePrarent;

	[Token(Token = "0x40006A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public DiscordService _discordService;

	[Token(Token = "0x40006A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public PageGroup _pageGroup;

	[Token(Token = "0x40006A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Page _editPiecePage;

	[Token(Token = "0x40006A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Player _player;

	[Token(Token = "0x40006A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private State _state;

	[Token(Token = "0x40006AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private PieceCollection _pieceCollection;

	[Token(Token = "0x40006AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private PuzzleLoader _puzzleLoader;

	[Token(Token = "0x40006AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Grid _grid;

	[Token(Token = "0x40006AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private SetEditorFreezeAction _freezeData;

	[Token(Token = "0x40006AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private float _lastFreezeTimestamp;

	[Token(Token = "0x40006AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private EditMode[] _creationStates;

	[Token(Token = "0x40006B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private EditMode[] _editPieceValidEditModes;

	[Token(Token = "0x40006B1")]
	private const string DefaultPuzzleName = "";

	[Token(Token = "0x40006B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[Header("Debug")]
	public Transform _parent;

	[Token(Token = "0x40006B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public Vector3 _offset;

	[Token(Token = "0x6000779")]
	[Address(RVA = "0xC5EEC0", Offset = "0xC5EEC0", VA = "0xC5EEC0")]
	public void Setup(State state, PieceCollection pieceCollection, PuzzleLoader loader, Grid grid)
	{
	}

	[Token(Token = "0x600077A")]
	[Address(RVA = "0xC5F07C", Offset = "0xC5F07C", VA = "0xC5F07C")]
	private void Update()
	{
	}

	[Token(Token = "0x600077B")]
	[Address(RVA = "0xC5F4A8", Offset = "0xC5F4A8", VA = "0xC5F4A8")]
	private void RegisterActions(ControllerAction action)
	{
	}

	[Token(Token = "0x600077C")]
	[Address(RVA = "0xC602F4", Offset = "0xC602F4", VA = "0xC602F4")]
	[IteratorStateMachine(typeof(<_SetFreeze>d__23))]
	private IEnumerator _SetFreeze(bool value, float delay = 0f)
	{
		return null;
	}

	[Token(Token = "0x600077D")]
	[Address(RVA = "0xC603A8", Offset = "0xC603A8", VA = "0xC603A8")]
	private void ToggleEditor()
	{
	}

	[Token(Token = "0x600077E")]
	[Address(RVA = "0xC605C4", Offset = "0xC605C4", VA = "0xC605C4")]
	private void CheckToStartEditingPiece(string id)
	{
	}

	[Token(Token = "0x600077F")]
	[Address(RVA = "0xC606D4", Offset = "0xC606D4", VA = "0xC606D4")]
	[IteratorStateMachine(typeof(<SwitchToPieceEditingOnTriggerUp>d__26))]
	private IEnumerator SwitchToPieceEditingOnTriggerUp()
	{
		return null;
	}

	[Token(Token = "0x6000780")]
	[Address(RVA = "0xC5FD70", Offset = "0xC5FD70", VA = "0xC5FD70")]
	private void UpdateEditMode(EditMode mode)
	{
	}

	[Token(Token = "0x6000781")]
	[Address(RVA = "0xC5F2AC", Offset = "0xC5F2AC", VA = "0xC5F2AC")]
	private void UpdateSpawnPos()
	{
	}

	[Token(Token = "0x6000782")]
	[Address(RVA = "0xC5FF30", Offset = "0xC5FF30", VA = "0xC5FF30")]
	private void ResetPuzzle(bool clearGrid, bool clearPieces)
	{
	}

	[Token(Token = "0x6000783")]
	[Address(RVA = "0xC60524", Offset = "0xC60524", VA = "0xC60524")]
	private string GetDefaultName()
	{
		return null;
	}

	[Token(Token = "0x6000784")]
	[Address(RVA = "0xC60764", Offset = "0xC60764", VA = "0xC60764")]
	private bool PuzzleNameExists(string name)
	{
		return default(bool);
	}

	[Token(Token = "0x6000785")]
	[Address(RVA = "0xC600A8", Offset = "0xC600A8", VA = "0xC600A8")]
	private void SavePuzzle(PuzzleDescription desc)
	{
	}

	[Token(Token = "0x6000786")]
	[Address(RVA = "0xC600C0", Offset = "0xC600C0", VA = "0xC600C0")]
	private void DeletePuzzle(Level level)
	{
	}

	[Token(Token = "0x6000787")]
	[Address(RVA = "0xC6028C", Offset = "0xC6028C", VA = "0xC6028C")]
	private void ShareCurrentPuzzleToDiscord()
	{
	}

	[Token(Token = "0x6000788")]
	[Address(RVA = "0xC607C4", Offset = "0xC607C4", VA = "0xC607C4")]
	private bool SaveFileExists()
	{
		return default(bool);
	}

	[Token(Token = "0x6000789")]
	[Address(RVA = "0xC607F4", Offset = "0xC607F4", VA = "0xC607F4")]
	private bool GetPuzzleBytes(out byte[] puzzleBytes)
	{
		return default(bool);
	}

	[Token(Token = "0x600078A")]
	[Address(RVA = "0xC608CC", Offset = "0xC608CC", VA = "0xC608CC")]
	public EditorService()
	{
	}
}
[Token(Token = "0x200017E")]
public class GameFocusService : MonoBehaviour
{
	[Token(Token = "0x40006BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private GameState _gameState;

	[Token(Token = "0x6000798")]
	[Address(RVA = "0xC60BF8", Offset = "0xC60BF8", VA = "0xC60BF8")]
	public void Setup(GameState gameState)
	{
	}

	[Token(Token = "0x6000799")]
	[Address(RVA = "0xC60C7C", Offset = "0xC60C7C", VA = "0xC60C7C")]
	private void SetupOculus()
	{
	}

	[Token(Token = "0x600079A")]
	[Address(RVA = "0xC60E18", Offset = "0xC60E18", VA = "0xC60E18")]
	private void PauseGame()
	{
	}

	[Token(Token = "0x600079B")]
	[Address(RVA = "0xC60E44", Offset = "0xC60E44", VA = "0xC60E44")]
	private void ResumeGame()
	{
	}

	[Token(Token = "0x600079C")]
	[Address(RVA = "0xC60E84", Offset = "0xC60E84", VA = "0xC60E84")]
	private bool CanResume()
	{
		return default(bool);
	}

	[Token(Token = "0x600079D")]
	[Address(RVA = "0xC60F9C", Offset = "0xC60F9C", VA = "0xC60F9C")]
	private void OnApplicationFocus(bool hasFocus)
	{
	}

	[Token(Token = "0x600079E")]
	[Address(RVA = "0xC61060", Offset = "0xC61060", VA = "0xC61060")]
	private void OnApplicationPause(bool pauseStatus)
	{
	}

	[Token(Token = "0x600079F")]
	[Address(RVA = "0xC61124", Offset = "0xC61124", VA = "0xC61124")]
	public GameFocusService()
	{
	}
}
[Token(Token = "0x200017F")]
public class GrabColliderManager : StateBehaviour
{
	[Token(Token = "0x40006BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public BoxCollider _bigGrabCollider;

	[Token(Token = "0x40006BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public InputGrabber _grabber;

	[Token(Token = "0x40006C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Vector3 _originalPos;

	[Token(Token = "0x60007A0")]
	[Address(RVA = "0xC6112C", Offset = "0xC6112C", VA = "0xC6112C", Slot = "5")]
	protected override void ForceSetup()
	{
	}

	[Token(Token = "0x60007A1")]
	[Address(RVA = "0xC61204", Offset = "0xC61204", VA = "0xC61204")]
	private void EnableGrabCollider(bool menuOpen)
	{
	}

	[Token(Token = "0x60007A2")]
	[Address(RVA = "0xC61228", Offset = "0xC61228", VA = "0xC61228")]
	public GrabColliderManager()
	{
	}
}
[Token(Token = "0x2000180")]
public class HandOverlapService : SetupableBehaviour
{
	[Token(Token = "0x40006C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Renderer _leftHand;

	[Token(Token = "0x40006C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Renderer _rightHand;

	[Token(Token = "0x40006C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[Header("Debug")]
	private GameState _gamestate;

	[Token(Token = "0x40006C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Rect _leftRect;

	[Token(Token = "0x40006C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Rect _rightRect;

	[Token(Token = "0x40006C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Image _leftDebug;

	[Token(Token = "0x40006C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Image _rightDebug;

	[Token(Token = "0x60007A3")]
	[Address(RVA = "0xC61230", Offset = "0xC61230", VA = "0xC61230")]
	public void Setup(GameState gamestate)
	{
	}

	[Token(Token = "0x60007A4")]
	[Address(RVA = "0xC6123C", Offset = "0xC6123C", VA = "0xC6123C")]
	private void Update()
	{
	}

	[Token(Token = "0x60007A5")]
	[Address(RVA = "0xC6149C", Offset = "0xC6149C", VA = "0xC6149C")]
	public HandOverlapService()
	{
	}
}
[Token(Token = "0x2000181")]
public class HandTrackingTipMap : MonoBehaviour
{
	[Token(Token = "0x2000182")]
	[CompilerGenerated]
	private sealed class <_ShowDisclaimers>d__7 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40006CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40006CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40006D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public HandTrackingTipMap <>4__this;

		[Token(Token = "0x40006D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private PlayNoteOptions <options>5__2;

		[Token(Token = "0x1700009C")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60007AD")]
			[Address(RVA = "0xC61930", Offset = "0xC61930", VA = "0xC61930", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700009D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60007AF")]
			[Address(RVA = "0xC61978", Offset = "0xC61978", VA = "0xC61978", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60007AA")]
		[Address(RVA = "0xC61598", Offset = "0xC61598", VA = "0xC61598")]
		[DebuggerHidden]
		public <_ShowDisclaimers>d__7(int <>1__state)
		{
		}

		[Token(Token = "0x60007AB")]
		[Address(RVA = "0xC6164C", Offset = "0xC6164C", VA = "0xC6164C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60007AC")]
		[Address(RVA = "0xC61650", Offset = "0xC61650", VA = "0xC61650", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60007AE")]
		[Address(RVA = "0xC61938", Offset = "0xC61938", VA = "0xC61938", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40006C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject _disclaimer1;

	[Token(Token = "0x40006C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject _disclaimer2;

	[Token(Token = "0x40006CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject _disclaimer3;

	[Token(Token = "0x40006CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject _disclaimer4;

	[Token(Token = "0x40006CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject _confirm;

	[Token(Token = "0x40006CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool _played;

	[Token(Token = "0x60007A6")]
	[Address(RVA = "0xC614A4", Offset = "0xC614A4", VA = "0xC614A4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60007A7")]
	[Address(RVA = "0xC61530", Offset = "0xC61530", VA = "0xC61530")]
	[IteratorStateMachine(typeof(<_ShowDisclaimers>d__7))]
	private IEnumerator _ShowDisclaimers()
	{
		return null;
	}

	[Token(Token = "0x60007A8")]
	[Address(RVA = "0xC615C0", Offset = "0xC615C0", VA = "0xC615C0")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60007A9")]
	[Address(RVA = "0xC61644", Offset = "0xC61644", VA = "0xC61644")]
	public HandTrackingTipMap()
	{
	}
}
[Token(Token = "0x2000183")]
public class HeldPieceReleaser
{
	[Token(Token = "0x2000184")]
	[CompilerGenerated]
	private sealed class <CheckIfHoldingPieces>d__3 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40006D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40006D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40006D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public HeldPieceReleaser <>4__this;

		[Token(Token = "0x1700009E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60007B6")]
			[Address(RVA = "0xC61D54", Offset = "0xC61D54", VA = "0xC61D54", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700009F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60007B8")]
			[Address(RVA = "0xC61D9C", Offset = "0xC61D9C", VA = "0xC61D9C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60007B3")]
		[Address(RVA = "0xC61B10", Offset = "0xC61B10", VA = "0xC61B10")]
		[DebuggerHidden]
		public <CheckIfHoldingPieces>d__3(int <>1__state)
		{
		}

		[Token(Token = "0x60007B4")]
		[Address(RVA = "0xC61B38", Offset = "0xC61B38", VA = "0xC61B38", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60007B5")]
		[Address(RVA = "0xC61B3C", Offset = "0xC61B3C", VA = "0xC61B3C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60007B7")]
		[Address(RVA = "0xC61D5C", Offset = "0xC61D5C", VA = "0xC61D5C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40006D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public PieceCollection _pieceCollection;

	[Token(Token = "0x60007B0")]
	[Address(RVA = "0xC61980", Offset = "0xC61980", VA = "0xC61980")]
	public HeldPieceReleaser(PieceCollection pieceCollection)
	{
	}

	[Token(Token = "0x60007B1")]
	[Address(RVA = "0xC61A44", Offset = "0xC61A44", VA = "0xC61A44")]
	private void CheckIfStillholidingPiecesNextFrame(bool active)
	{
	}

	[Token(Token = "0x60007B2")]
	[Address(RVA = "0xC61AA8", Offset = "0xC61AA8", VA = "0xC61AA8")]
	[IteratorStateMachine(typeof(<CheckIfHoldingPieces>d__3))]
	private IEnumerator CheckIfHoldingPieces()
	{
		return null;
	}
}
[Token(Token = "0x2000185")]
public class FingerTips : StateBehaviour
{
	[Token(Token = "0x40006D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Cubism.Hand hand;

	[Token(Token = "0x40006D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public HoverHelper thumbHover;

	[Token(Token = "0x40006D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public HoverHelper indexHover;

	[Token(Token = "0x40006DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[Space(25f)]
	public Transform wrist;

	[Token(Token = "0x40006DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Transform thumbTip;

	[Token(Token = "0x40006E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Transform indexTip;

	[Token(Token = "0x40006E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Transform middleTip;

	[Token(Token = "0x40006E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Transform thumbNull;

	[Token(Token = "0x40006E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public Transform indexNull;

	[Token(Token = "0x40006E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public Transform middleNull;

	[Token(Token = "0x40006E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public Transform middleOfPalm;

	[Token(Token = "0x40006E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[Space(25f)]
	public GameObject _tipPrefab;

	[Token(Token = "0x40006E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public CurlGrabIndicator _curlIndicatorPrefab;

	[Token(Token = "0x40006E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public GameObject _badTrackingIndicator;

	[Token(Token = "0x40006E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	[Space(25f)]
	public Transform _interactionPoint;

	[Token(Token = "0x40006EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public SphereCollider _collider;

	[Token(Token = "0x40006EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	[Space(25f)]
	public HandStateView _handStateView;

	[Token(Token = "0x40006EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public HandPullForce _pullForce;

	[Token(Token = "0x40006ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	[Space(25f)]
	public Transform _indexRoot;

	[Token(Token = "0x40006EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private Transform _realThumbTip;

	[Token(Token = "0x40006EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private Transform _realIndexTip;

	[Token(Token = "0x40006F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private VectorQueue _midPointValues;

	[Token(Token = "0x40006F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private Vector3 _wristOffset;

	[Token(Token = "0x40006F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	private Controller _controller;

	[Token(Token = "0x40006F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	private Quaternion _wristRotationOffset;

	[Token(Token = "0x40006F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	private Quaternion _lockedRotationOffset;

	[Token(Token = "0x40006F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	private Transform _midPointAxis;

	[Token(Token = "0x40006F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	private List<Transform> _debugGameObjects;

	[Token(Token = "0x40006F7")]
	private const float MinDistForFineFingerControl = 0.025f;

	[Token(Token = "0x40006F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	[Header("Debug")]
	public RotationMethod _rotationType;

	[Token(Token = "0x40006F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14C")]
	public PositionMethod _positionMethod;

	[Token(Token = "0x170000A0")]
	public HoverHelper middleHover
	{
		[Token(Token = "0x60007B9")]
		[Address(RVA = "0xC61DA4", Offset = "0xC61DA4", VA = "0xC61DA4")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x60007BA")]
		[Address(RVA = "0xC61DAC", Offset = "0xC61DAC", VA = "0xC61DAC")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x170000A1")]
	public ButtonPusher buttonPusher
	{
		[Token(Token = "0x60007BB")]
		[Address(RVA = "0xC61DB4", Offset = "0xC61DB4", VA = "0xC61DB4")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x60007BC")]
		[Address(RVA = "0xC61DBC", Offset = "0xC61DBC", VA = "0xC61DBC")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x170000A2")]
	public FingerGrabber fingerGrabber
	{
		[Token(Token = "0x60007BD")]
		[Address(RVA = "0xC61DC4", Offset = "0xC61DC4", VA = "0xC61DC4")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x60007BE")]
		[Address(RVA = "0xC61DCC", Offset = "0xC61DCC", VA = "0xC61DCC")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x170000A3")]
	public CurlGrabIndicator curlIndicatorIndex
	{
		[Token(Token = "0x60007BF")]
		[Address(RVA = "0xC61DD4", Offset = "0xC61DD4", VA = "0xC61DD4")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x60007C0")]
		[Address(RVA = "0xC61DDC", Offset = "0xC61DDC", VA = "0xC61DDC")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x170000A4")]
	public GameObject badTrackingIndicator
	{
		[Token(Token = "0x60007C1")]
		[Address(RVA = "0xC61DE4", Offset = "0xC61DE4", VA = "0xC61DE4")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x60007C2")]
		[Address(RVA = "0xC61DEC", Offset = "0xC61DEC", VA = "0xC61DEC")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x60007C3")]
	[Address(RVA = "0xC61DF4", Offset = "0xC61DF4", VA = "0xC61DF4")]
	private void Start()
	{
	}

	[Token(Token = "0x60007C4")]
	[Address(RVA = "0xC62288", Offset = "0xC62288", VA = "0xC62288")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x60007C5")]
	[Address(RVA = "0xC62AFC", Offset = "0xC62AFC", VA = "0xC62AFC")]
	private float ThumbToIndex()
	{
		return default(float);
	}

	[Token(Token = "0x60007C6")]
	[Address(RVA = "0xC62BBC", Offset = "0xC62BBC", VA = "0xC62BBC")]
	private void SetColliderRadius()
	{
	}

	[Token(Token = "0x60007C7")]
	[Address(RVA = "0xC624A0", Offset = "0xC624A0", VA = "0xC624A0")]
	private void SetPosition()
	{
	}

	[Token(Token = "0x60007C8")]
	[Address(RVA = "0xC625A8", Offset = "0xC625A8", VA = "0xC625A8")]
	private void SetRotation()
	{
	}

	[Token(Token = "0x60007C9")]
	[Address(RVA = "0xC62390", Offset = "0xC62390", VA = "0xC62390")]
	private Vector3 GetMidpoint()
	{
		return default(Vector3);
	}

	[Token(Token = "0x60007CA")]
	[Address(RVA = "0xC62BE8", Offset = "0xC62BE8", VA = "0xC62BE8")]
	private HoverHelper SpawnFingerTipTrigger(Transform parent)
	{
		return null;
	}

	[Token(Token = "0x60007CB")]
	[Address(RVA = "0xC62088", Offset = "0xC62088", VA = "0xC62088")]
	private CurlGrabIndicator SpawnCurlGrabIndicator(Transform parent)
	{
		return null;
	}

	[Token(Token = "0x60007CC")]
	[Address(RVA = "0xC6217C", Offset = "0xC6217C", VA = "0xC6217C")]
	private void SpawnDebugObjects()
	{
	}

	[Token(Token = "0x60007CD")]
	[Address(RVA = "0xC62CCC", Offset = "0xC62CCC", VA = "0xC62CCC")]
	private void SetDebugVisibility(bool visible)
	{
	}

	[Token(Token = "0x60007CE")]
	[Address(RVA = "0xC62E3C", Offset = "0xC62E3C", VA = "0xC62E3C")]
	public FingerTips()
	{
	}
}
[Token(Token = "0x2000186")]
public enum RotationMethod
{
	[Token(Token = "0x40006FB")]
	WristRotation,
	[Token(Token = "0x40006FC")]
	ThumbIndex
}
[Token(Token = "0x2000187")]
public enum PositionMethod
{
	[Token(Token = "0x40006FE")]
	ThumbIndexMidpoint,
	[Token(Token = "0x40006FF")]
	RollingAverage,
	[Token(Token = "0x4000700")]
	WristOffsetIndex,
	[Token(Token = "0x4000701")]
	WristOffsetIndexMiddle
}
[Token(Token = "0x2000188")]
public enum BoneId
{
	[Token(Token = "0x4000703")]
	Invalid,
	[Token(Token = "0x4000704")]
	Hand_Start,
	[Token(Token = "0x4000705")]
	Hand_Thumb0,
	[Token(Token = "0x4000706")]
	Hand_Thumb1,
	[Token(Token = "0x4000707")]
	Hand_Thumb2,
	[Token(Token = "0x4000708")]
	Hand_Thumb3,
	[Token(Token = "0x4000709")]
	Hand_Index1,
	[Token(Token = "0x400070A")]
	Hand_Index2,
	[Token(Token = "0x400070B")]
	Hand_Index3,
	[Token(Token = "0x400070C")]
	Hand_Middle1,
	[Token(Token = "0x400070D")]
	Hand_Middle2,
	[Token(Token = "0x400070E")]
	Hand_Middle3,
	[Token(Token = "0x400070F")]
	Hand_Ring1,
	[Token(Token = "0x4000710")]
	Hand_Ring2,
	[Token(Token = "0x4000711")]
	Hand_Ring3,
	[Token(Token = "0x4000712")]
	Hand_Pinky0,
	[Token(Token = "0x4000713")]
	Hand_Pinky1,
	[Token(Token = "0x4000714")]
	Hand_Pinky2,
	[Token(Token = "0x4000715")]
	Hand_Pinky3,
	[Token(Token = "0x4000716")]
	Hand_Thumb_Tip,
	[Token(Token = "0x4000717")]
	Hand_Index_Tip,
	[Token(Token = "0x4000718")]
	Hand_Middle_Tip,
	[Token(Token = "0x4000719")]
	Hand_Ring_Tip,
	[Token(Token = "0x400071A")]
	Hand_Pinky_Tip
}
[Serializable]
[Token(Token = "0x2000189")]
public struct HandBone
{
	[Token(Token = "0x400071B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public BoneId Id;

	[Token(Token = "0x400071C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public LerpedTransform Transform;

	[Token(Token = "0x60007CF")]
	[Address(RVA = "0xC62F84", Offset = "0xC62F84", VA = "0xC62F84")]
	public HandBone(BoneId id, LerpedTransform transform)
	{
	}
}
[Token(Token = "0x200018A")]
public abstract class HandDataProvider : StateBehaviour
{
	[Token(Token = "0x400071D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Transform tr0;

	[Token(Token = "0x400071E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Transform tr1;

	[Token(Token = "0x400071F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Transform tr2;

	[Token(Token = "0x4000720")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Transform tr3;

	[Token(Token = "0x4000721")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Transform tr4;

	[Token(Token = "0x4000722")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Transform tr5;

	[Token(Token = "0x4000723")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private List<Transform> boneList;

	[Token(Token = "0x170000A5")]
	public abstract bool IsActive
	{
		[Token(Token = "0x60007D0")]
		get;
	}

	[Token(Token = "0x60007D1")]
	public abstract bool IsTracking(Cubism.Hand hand);

	[Token(Token = "0x60007D2")]
	public abstract Dictionary<BoneId, Transform> GetBones(Cubism.Hand hand);

	[Token(Token = "0x60007D3")]
	public abstract bool TryGetBone(Cubism.Hand hand, BoneId Id, out Transform bone);

	[Token(Token = "0x60007D4")]
	public abstract Transform GetBoneUnsafe(Cubism.Hand hand, BoneId Id);

	[Token(Token = "0x60007D5")]
	[Address(RVA = "0xC62F90", Offset = "0xC62F90", VA = "0xC62F90", Slot = "11")]
	protected virtual void Start()
	{
	}

	[Token(Token = "0x60007D6")]
	[Address(RVA = "0xC63154", Offset = "0xC63154", VA = "0xC63154", Slot = "12")]
	public virtual float HandScale(Cubism.Hand hand)
	{
		return default(float);
	}

	[Token(Token = "0x60007D7")]
	[Address(RVA = "0xC6315C", Offset = "0xC6315C", VA = "0xC6315C", Slot = "13")]
	public virtual bool BonesInitialized()
	{
		return default(bool);
	}

	[Token(Token = "0x60007D8")]
	[Address(RVA = "0xC63164", Offset = "0xC63164", VA = "0xC63164", Slot = "14")]
	public virtual float GetTrackingConfidence(Cubism.Hand hand)
	{
		return default(float);
	}

	[Token(Token = "0x60007D9")]
	[Address(RVA = "0xC6316C", Offset = "0xC6316C", VA = "0xC6316C", Slot = "15")]
	public virtual float GetHandConfidence(Cubism.Hand hand)
	{
		return default(float);
	}

	[Token(Token = "0x60007DA")]
	[Address(RVA = "0xC63174", Offset = "0xC63174", VA = "0xC63174", Slot = "16")]
	public virtual float GetFingerTrackingConfidence(Cubism.Hand hand, Finger finger)
	{
		return default(float);
	}

	[Token(Token = "0x60007DB")]
	[Address(RVA = "0xC6317C", Offset = "0xC6317C", VA = "0xC6317C", Slot = "17")]
	public virtual bool IsPinching(Cubism.Hand hand, Finger finger)
	{
		return default(bool);
	}

	[Token(Token = "0x60007DC")]
	[Address(RVA = "0xC63184", Offset = "0xC63184", VA = "0xC63184", Slot = "18")]
	public virtual bool PinchDown(Cubism.Hand hand, Finger finger)
	{
		return default(bool);
	}

	[Token(Token = "0x60007DD")]
	[Address(RVA = "0xC6318C", Offset = "0xC6318C", VA = "0xC6318C", Slot = "19")]
	public virtual bool PinchUp(Cubism.Hand hand, Finger finger)
	{
		return default(bool);
	}

	[Token(Token = "0x60007DE")]
	[Address(RVA = "0xC63194", Offset = "0xC63194", VA = "0xC63194", Slot = "20")]
	public virtual bool SystemGestureInProgress(Cubism.Hand hand)
	{
		return default(bool);
	}

	[Token(Token = "0x60007DF")]
	[Address(RVA = "0xC6319C", Offset = "0xC6319C", VA = "0xC6319C", Slot = "21")]
	public virtual float GetFingerCurl(Cubism.Hand hand, Finger finger)
	{
		return default(float);
	}

	[Token(Token = "0x60007E0")]
	[Address(RVA = "0xC63824", Offset = "0xC63824", VA = "0xC63824")]
	protected float GetCumulativeAngle(List<Transform> points)
	{
		return default(float);
	}

	[Token(Token = "0x60007E1")]
	[Address(RVA = "0xC63AE0", Offset = "0xC63AE0", VA = "0xC63AE0")]
	protected HandDataProvider()
	{
	}
}
[Token(Token = "0x200018B")]
[DefaultExecutionOrder(-70)]
public class HandDataProviderOVR : HandDataProvider
{
	[Token(Token = "0x4000724")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public OVRSkeleton _ovrSkeletonLeft;

	[Token(Token = "0x4000725")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public OVRSkeleton _ovrSkeletonRight;

	[Token(Token = "0x4000726")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public OVRHand _ovrHandLeft;

	[Token(Token = "0x4000727")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public OVRHand _ovrHandRight;

	[Token(Token = "0x4000728")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private FloatQueue _trackingConfidenceLeft;

	[Token(Token = "0x4000729")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private FloatQueue _trackingConfidenceRight;

	[Token(Token = "0x400072A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly Dictionary<OVRSkeleton.BoneId, BoneId> OVRToPosingIDs;

	[Token(Token = "0x400072B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static readonly Dictionary<Finger, OVRHand.HandFinger> FingerToHandFinger;

	[Token(Token = "0x400072C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private Dictionary<BoneId, Transform> _bonesLeft;

	[Token(Token = "0x400072D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private Dictionary<BoneId, Transform> _bonesRight;

	[Token(Token = "0x400072E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private bool _bonesInitialized;

	[Token(Token = "0x400072F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private OVRPlugin.HandState _handStateLeft;

	[Token(Token = "0x4000730")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private OVRPlugin.HandState _handStateRight;

	[Token(Token = "0x4000731")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	private float _scaleLeftHand;

	[Token(Token = "0x4000732")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19C")]
	private float _scaleRightHand;

	[Token(Token = "0x4000733")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	private bool[] _leftPinchValues;

	[Token(Token = "0x4000734")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	private bool[] _rightPinchValues;

	[Token(Token = "0x170000A6")]
	public override bool IsActive
	{
		[Token(Token = "0x60007E5")]
		[Address(RVA = "0xC64420", Offset = "0xC64420", VA = "0xC64420", Slot = "6")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170000A7")]
	private bool CanInitialise
	{
		[Token(Token = "0x60007F7")]
		[Address(RVA = "0xC63CD0", Offset = "0xC63CD0", VA = "0xC63CD0")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x60007E2")]
	[Address(RVA = "0xC63B5C", Offset = "0xC63B5C", VA = "0xC63B5C", Slot = "11")]
	protected override void Start()
	{
	}

	[Token(Token = "0x60007E3")]
	[Address(RVA = "0xC63BB8", Offset = "0xC63BB8", VA = "0xC63BB8")]
	protected void Update()
	{
	}

	[Token(Token = "0x60007E4")]
	[Address(RVA = "0xC641C0", Offset = "0xC641C0", VA = "0xC641C0")]
	protected void LateUpdate()
	{
	}

	[Token(Token = "0x60007E6")]
	[Address(RVA = "0xC64470", Offset = "0xC64470", VA = "0xC64470", Slot = "7")]
	public override bool IsTracking(Cubism.Hand hand)
	{
		return default(bool);
	}

	[Token(Token = "0x60007E7")]
	[Address(RVA = "0xC6449C", Offset = "0xC6449C", VA = "0xC6449C", Slot = "22")]
	public new virtual bool BonesInitialized()
	{
		return default(bool);
	}

	[Token(Token = "0x60007E8")]
	[Address(RVA = "0xC644A4", Offset = "0xC644A4", VA = "0xC644A4", Slot = "9")]
	public override bool TryGetBone(Cubism.Hand hand, BoneId Id, out Transform bone)
	{
		return default(bool);
	}

	[Token(Token = "0x60007E9")]
	[Address(RVA = "0xC64520", Offset = "0xC64520", VA = "0xC64520", Slot = "10")]
	public override Transform GetBoneUnsafe(Cubism.Hand hand, BoneId Id)
	{
		return null;
	}

	[Token(Token = "0x60007EA")]
	[Address(RVA = "0xC64594", Offset = "0xC64594", VA = "0xC64594", Slot = "8")]
	public override Dictionary<BoneId, Transform> GetBones(Cubism.Hand hand)
	{
		return null;
	}

	[Token(Token = "0x60007EB")]
	[Address(RVA = "0xC645AC", Offset = "0xC645AC", VA = "0xC645AC", Slot = "12")]
	public override float HandScale(Cubism.Hand hand)
	{
		return default(float);
	}

	[Token(Token = "0x60007EC")]
	[Address(RVA = "0xC645C4", Offset = "0xC645C4", VA = "0xC645C4")]
	private void UpdateHandScales()
	{
	}

	[Token(Token = "0x60007ED")]
	[Address(RVA = "0xC645F0", Offset = "0xC645F0", VA = "0xC645F0")]
	private float GetUpdatedHandScale(Cubism.Hand hand)
	{
		return default(float);
	}

	[Token(Token = "0x60007EE")]
	[Address(RVA = "0xC64718", Offset = "0xC64718", VA = "0xC64718", Slot = "15")]
	public override float GetHandConfidence(Cubism.Hand hand)
	{
		return default(float);
	}

	[Token(Token = "0x60007EF")]
	[Address(RVA = "0xC6478C", Offset = "0xC6478C", VA = "0xC6478C", Slot = "14")]
	public override float GetTrackingConfidence(Cubism.Hand hand)
	{
		return default(float);
	}

	[Token(Token = "0x60007F0")]
	[Address(RVA = "0xC64140", Offset = "0xC64140", VA = "0xC64140")]
	private float GetFrameConfidence(Cubism.Hand hand)
	{
		return default(float);
	}

	[Token(Token = "0x60007F1")]
	[Address(RVA = "0xC6471C", Offset = "0xC6471C", VA = "0xC6471C")]
	private float GetFrameHandConfidence(Cubism.Hand hand)
	{
		return default(float);
	}

	[Token(Token = "0x60007F2")]
	[Address(RVA = "0xC647B4", Offset = "0xC647B4", VA = "0xC647B4", Slot = "16")]
	public override float GetFingerTrackingConfidence(Cubism.Hand hand, Finger finger)
	{
		return default(float);
	}

	[Token(Token = "0x60007F3")]
	[Address(RVA = "0xC648B4", Offset = "0xC648B4", VA = "0xC648B4", Slot = "17")]
	public override bool IsPinching(Cubism.Hand hand, Finger finger)
	{
		return default(bool);
	}

	[Token(Token = "0x60007F4")]
	[Address(RVA = "0xC64984", Offset = "0xC64984", VA = "0xC64984", Slot = "18")]
	public override bool PinchDown(Cubism.Hand hand, Finger finger)
	{
		return default(bool);
	}

	[Token(Token = "0x60007F5")]
	[Address(RVA = "0xC649F4", Offset = "0xC649F4", VA = "0xC649F4", Slot = "19")]
	public override bool PinchUp(Cubism.Hand hand, Finger finger)
	{
		return default(bool);
	}

	[Token(Token = "0x60007F6")]
	[Address(RVA = "0xC64A64", Offset = "0xC64A64", VA = "0xC64A64", Slot = "20")]
	public override bool SystemGestureInProgress(Cubism.Hand hand)
	{
		return default(bool);
	}

	[Token(Token = "0x60007F8")]
	[Address(RVA = "0xC63DAC", Offset = "0xC63DAC", VA = "0xC63DAC")]
	private void InitializeBones(ref Dictionary<BoneId, Transform> bones, OVRSkeleton ovrSkeleton)
	{
	}

	[Token(Token = "0x60007F9")]
	[Address(RVA = "0xC64A90", Offset = "0xC64A90", VA = "0xC64A90")]
	public HandDataProviderOVR()
	{
	}
}
[Token(Token = "0x200018C")]
public class HandPoser : StateBehaviour
{
	[Token(Token = "0x4000735")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Cubism.Hand hand;

	[Token(Token = "0x4000736")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Controller _controller;

	[Token(Token = "0x4000737")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[Header("Debug")]
	public bool _lockThumb;

	[Token(Token = "0x4000738")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
	public bool _lockIndex;

	[Token(Token = "0x4000739")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3A")]
	public bool _lockMiddle;

	[Token(Token = "0x400073A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3B")]
	public bool _lockRing;

	[Token(Token = "0x400073B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public bool _lockPinky;

	[Token(Token = "0x400073C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[Space(25f)]
	[SerializeField]
	private List<HandBone> _handBones;

	[Token(Token = "0x400073D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Dictionary<BoneId, LerpedTransform> _jointMap;

	[Token(Token = "0x400073E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private List<GameObject> _debugAxis;

	[Token(Token = "0x400073F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool _debugJointsDrawn;

	[Token(Token = "0x4000740")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private LerpValues lerpValues;

	[Token(Token = "0x4000741")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private LerpValues highConfidenceValues;

	[Token(Token = "0x60007FB")]
	[Address(RVA = "0xC64F00", Offset = "0xC64F00", VA = "0xC64F00")]
	private void Start()
	{
	}

	[Token(Token = "0x60007FC")]
	[Address(RVA = "0xC65234", Offset = "0xC65234", VA = "0xC65234")]
	private void Update()
	{
	}

	[Token(Token = "0x60007FD")]
	[Address(RVA = "0xC65968", Offset = "0xC65968", VA = "0xC65968")]
	public bool TryGetPosedBone(BoneId Id, out Transform bone)
	{
		return default(bool);
	}

	[Token(Token = "0x60007FE")]
	[Address(RVA = "0xC65950", Offset = "0xC65950", VA = "0xC65950")]
	private void LockFingers()
	{
	}

	[Token(Token = "0x60007FF")]
	[Address(RVA = "0xC659FC", Offset = "0xC659FC", VA = "0xC659FC")]
	private void LockFingers(GrabData data)
	{
	}

	[Token(Token = "0x6000800")]
	[Address(RVA = "0xC6595C", Offset = "0xC6595C", VA = "0xC6595C")]
	private void ReleaseFingers()
	{
	}

	[Token(Token = "0x6000801")]
	[Address(RVA = "0xC6500C", Offset = "0xC6500C", VA = "0xC6500C")]
	private void PopulateJointMap()
	{
	}

	[Token(Token = "0x6000802")]
	[Address(RVA = "0xC65584", Offset = "0xC65584", VA = "0xC65584")]
	private void DrawDebugJoints()
	{
	}

	[Token(Token = "0x6000803")]
	[Address(RVA = "0xC65A34", Offset = "0xC65A34", VA = "0xC65A34")]
	private void SetDebugVisibility(bool visible)
	{
	}

	[Token(Token = "0x6000804")]
	[Address(RVA = "0xC65814", Offset = "0xC65814", VA = "0xC65814")]
	private void PoseHand()
	{
	}

	[Token(Token = "0x6000805")]
	[Address(RVA = "0xC65884", Offset = "0xC65884", VA = "0xC65884")]
	private void LerpHand()
	{
	}

	[Token(Token = "0x6000806")]
	[Address(RVA = "0xC65C20", Offset = "0xC65C20", VA = "0xC65C20")]
	private void PoseWrist()
	{
	}

	[Token(Token = "0x6000807")]
	[Address(RVA = "0xC65D64", Offset = "0xC65D64", VA = "0xC65D64")]
	private void LerpWrist()
	{
	}

	[Token(Token = "0x6000808")]
	[Address(RVA = "0xC65C2C", Offset = "0xC65C2C", VA = "0xC65C2C")]
	private void PoseThumb()
	{
	}

	[Token(Token = "0x6000809")]
	[Address(RVA = "0xC65E48", Offset = "0xC65E48", VA = "0xC65E48")]
	private void LerpThumb(float lerpFactor)
	{
	}

	[Token(Token = "0x600080A")]
	[Address(RVA = "0xC65C74", Offset = "0xC65C74", VA = "0xC65C74")]
	private void PoseIndex()
	{
	}

	[Token(Token = "0x600080B")]
	[Address(RVA = "0xC65E98", Offset = "0xC65E98", VA = "0xC65E98")]
	private void LerpIndex(float lerpFactor)
	{
	}

	[Token(Token = "0x600080C")]
	[Address(RVA = "0xC65CAC", Offset = "0xC65CAC", VA = "0xC65CAC")]
	private void PoseMiddle()
	{
	}

	[Token(Token = "0x600080D")]
	[Address(RVA = "0xC65ED8", Offset = "0xC65ED8", VA = "0xC65ED8")]
	private void LerpMiddle(float lerpFactor)
	{
	}

	[Token(Token = "0x600080E")]
	[Address(RVA = "0xC65CE4", Offset = "0xC65CE4", VA = "0xC65CE4")]
	private void PoseRing()
	{
	}

	[Token(Token = "0x600080F")]
	[Address(RVA = "0xC65F18", Offset = "0xC65F18", VA = "0xC65F18")]
	private void LerpRing(float lerpFactor)
	{
	}

	[Token(Token = "0x6000810")]
	[Address(RVA = "0xC65D1C", Offset = "0xC65D1C", VA = "0xC65D1C")]
	private void PosePinkie()
	{
	}

	[Token(Token = "0x6000811")]
	[Address(RVA = "0xC65F58", Offset = "0xC65F58", VA = "0xC65F58")]
	private void LerpPinkie(float lerpFactor)
	{
	}

	[Token(Token = "0x6000812")]
	[Address(RVA = "0xC65FA8", Offset = "0xC65FA8", VA = "0xC65FA8")]
	private void TrySetBonePose(BoneId Id, bool setPos = false)
	{
	}

	[Token(Token = "0x6000813")]
	[Address(RVA = "0xC66594", Offset = "0xC66594", VA = "0xC66594")]
	private void TrySetBonePose(BoneId Id, BoneId sourceId, bool setPos = false)
	{
	}

	[Token(Token = "0x6000814")]
	[Address(RVA = "0xC6629C", Offset = "0xC6629C", VA = "0xC6629C")]
	private void TryLerpBoneRot(BoneId Id, float lerpFactor)
	{
	}

	[Token(Token = "0x6000815")]
	[Address(RVA = "0xC66134", Offset = "0xC66134", VA = "0xC66134")]
	private void TryLerpBonePos(BoneId Id, float lerpFactor)
	{
	}

	[Token(Token = "0x6000816")]
	[Address(RVA = "0xC66720", Offset = "0xC66720", VA = "0xC66720")]
	private bool ShouldLerp()
	{
		return default(bool);
	}

	[Token(Token = "0x6000817")]
	[Address(RVA = "0xC65DF8", Offset = "0xC65DF8", VA = "0xC65DF8")]
	private LerpValues GetLerpValues()
	{
		return null;
	}

	[Token(Token = "0x6000818")]
	[Address(RVA = "0xC6692C", Offset = "0xC6692C", VA = "0xC6692C")]
	public HandPoser()
	{
	}
}
[Serializable]
[Token(Token = "0x200018D")]
public class LerpedTransform
{
	[Token(Token = "0x4000742")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Transform Transform;

	[Token(Token = "0x4000743")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Vector3 _targetPos;

	[Token(Token = "0x4000744")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Quaternion _targetLocalRot;

	[Token(Token = "0x6000819")]
	[Address(RVA = "0xC66AF4", Offset = "0xC66AF4", VA = "0xC66AF4")]
	public void UpdateTarget(Transform target)
	{
	}

	[Token(Token = "0x600081A")]
	[Address(RVA = "0xC66B40", Offset = "0xC66B40", VA = "0xC66B40")]
	public void UpdatePos(Vector3 pos)
	{
	}

	[Token(Token = "0x600081B")]
	[Address(RVA = "0xC66404", Offset = "0xC66404", VA = "0xC66404")]
	public void UpdateRotRelativeToModel(Quaternion rot)
	{
	}

	[Token(Token = "0x600081C")]
	[Address(RVA = "0xC664D4", Offset = "0xC664D4", VA = "0xC664D4")]
	public void UpdateRot(Quaternion rot, Quaternion parentRot)
	{
	}

	[Token(Token = "0x600081D")]
	[Address(RVA = "0xC66904", Offset = "0xC66904", VA = "0xC66904")]
	public void SetPos()
	{
	}

	[Token(Token = "0x600081E")]
	[Address(RVA = "0xC6681C", Offset = "0xC6681C", VA = "0xC6681C")]
	public void SetRot()
	{
	}

	[Token(Token = "0x600081F")]
	[Address(RVA = "0xC66844", Offset = "0xC66844", VA = "0xC66844")]
	public void LerpPos(float lerpFactor, bool lerp)
	{
	}

	[Token(Token = "0x6000820")]
	[Address(RVA = "0xC66754", Offset = "0xC66754", VA = "0xC66754")]
	public void LerpRot(float lerpFactor, bool lerp)
	{
	}

	[Token(Token = "0x6000821")]
	[Address(RVA = "0xC66B4C", Offset = "0xC66B4C", VA = "0xC66B4C")]
	public LerpedTransform()
	{
	}
}
[Serializable]
[Token(Token = "0x200018E")]
public class LerpValues
{
	[Token(Token = "0x4000745")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float Wrist;

	[Token(Token = "0x4000746")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float Joint;

	[Token(Token = "0x4000747")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float WristGrabbing;

	[Token(Token = "0x4000748")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float WristGrabbingPuzzle;

	[Token(Token = "0x4000749")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float JointGrabbing;

	[Token(Token = "0x6000822")]
	[Address(RVA = "0xC66AD8", Offset = "0xC66AD8", VA = "0xC66AD8")]
	public LerpValues()
	{
	}
}
[Token(Token = "0x200018F")]
public class HandStateView : SetupableBehaviour
{
	[Token(Token = "0x400074A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Cubism.Hand _hand;

	[Token(Token = "0x400074B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Renderer _renderer;

	[Token(Token = "0x400074C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public FingerGrabber _fingerGrabber;

	[Token(Token = "0x400074D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Controller _controller;

	[Token(Token = "0x400074E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public FingerTips _fingerTips;

	[Token(Token = "0x400074F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public HandPullForce _handPullForce;

	[Token(Token = "0x4000750")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[Header("Debug")]
	public Material _mat;

	[Token(Token = "0x4000751")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private ButtonPusher _buttonPusher;

	[Token(Token = "0x4000752")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Color _targetHandColor;

	[Token(Token = "0x4000753")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private float _targetHandAlpha;

	[Token(Token = "0x4000754")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private Color _edgeColor;

	[Token(Token = "0x4000755")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private float _targetEdgeColorBlend;

	[Token(Token = "0x4000756")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private float _targetEdgeAlphaBlend;

	[Token(Token = "0x4000757")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private float _targetColorBlendSupport;

	[Token(Token = "0x4000758")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private Color _targetFingerColorSupport;

	[Token(Token = "0x4000759")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private float _targetFingerAlphaBlendSupport;

	[Token(Token = "0x400075A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	private float _targetColorBlendIndex;

	[Token(Token = "0x400075B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private Color _targetFingerColorIndex;

	[Token(Token = "0x400075C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private float _targetFingerAlphaBlendIndex;

	[Token(Token = "0x400075D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	private float _targetColorBlendPull;

	[Token(Token = "0x400075E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private Color _targetFingerColorPull;

	[Token(Token = "0x400075F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private float _targetFingerAlphaBlendPull;

	[Token(Token = "0x4000760")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	private float _targetColorBlendMove;

	[Token(Token = "0x4000761")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private Color _targetFingerColorMove;

	[Token(Token = "0x4000762")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private float _targetFingerAlphaBlendMove;

	[Token(Token = "0x4000763")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
	private Color _targetLineColor;

	[Token(Token = "0x4000764")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
	private float _targetLineWidth;

	[Token(Token = "0x4000765")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private ColorThemeModel _theme;

	[Token(Token = "0x4000766")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private GameState _gameState;

	[Token(Token = "0x4000767")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	private State _state;

	[Token(Token = "0x4000768")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	private Color _transparent;

	[Token(Token = "0x6000823")]
	[Address(RVA = "0xC66BA4", Offset = "0xC66BA4", VA = "0xC66BA4")]
	public void Setup(ButtonPusher buttonPusher, ColorThemeModel theme, State state)
	{
	}

	[Token(Token = "0x6000824")]
	[Address(RVA = "0xC66BD4", Offset = "0xC66BD4", VA = "0xC66BD4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000825")]
	[Address(RVA = "0xC66C6C", Offset = "0xC66C6C", VA = "0xC66C6C")]
	private void UpdateState()
	{
	}

	[Token(Token = "0x6000826")]
	[Address(RVA = "0xC678FC", Offset = "0xC678FC", VA = "0xC678FC")]
	private bool BadTracking()
	{
		return default(bool);
	}

	[Token(Token = "0x6000827")]
	[Address(RVA = "0xC676F0", Offset = "0xC676F0", VA = "0xC676F0")]
	private Color GetHandStateColor()
	{
		return default(Color);
	}

	[Token(Token = "0x6000828")]
	[Address(RVA = "0xC677F4", Offset = "0xC677F4", VA = "0xC677F4")]
	private float GetHandAlpha()
	{
		return default(float);
	}

	[Token(Token = "0x6000829")]
	[Address(RVA = "0xC67A24", Offset = "0xC67A24", VA = "0xC67A24")]
	private Color GetFingerColorSupport()
	{
		return default(Color);
	}

	[Token(Token = "0x600082A")]
	[Address(RVA = "0xC67A14", Offset = "0xC67A14", VA = "0xC67A14")]
	private float GetColorBlendEdge()
	{
		return default(float);
	}

	[Token(Token = "0x600082B")]
	[Address(RVA = "0xC67A1C", Offset = "0xC67A1C", VA = "0xC67A1C")]
	private float GetAlphaBlendEdge()
	{
		return default(float);
	}

	[Token(Token = "0x600082C")]
	[Address(RVA = "0xC67B00", Offset = "0xC67B00", VA = "0xC67B00")]
	private float GetColorBlendSupport()
	{
		return default(float);
	}

	[Token(Token = "0x600082D")]
	[Address(RVA = "0xC67BF0", Offset = "0xC67BF0", VA = "0xC67BF0")]
	private float GetAlphaBlendSupport()
	{
		return default(float);
	}

	[Token(Token = "0x600082E")]
	[Address(RVA = "0xC67CE0", Offset = "0xC67CE0", VA = "0xC67CE0")]
	private Color GetFingerColorIndex()
	{
		return default(Color);
	}

	[Token(Token = "0x600082F")]
	[Address(RVA = "0xC67E24", Offset = "0xC67E24", VA = "0xC67E24")]
	private float GetColorBlendIndex()
	{
		return default(float);
	}

	[Token(Token = "0x6000830")]
	[Address(RVA = "0xC67F14", Offset = "0xC67F14", VA = "0xC67F14")]
	private float GetAlphaBlendIndex()
	{
		return default(float);
	}

	[Token(Token = "0x6000831")]
	[Address(RVA = "0xC6801C", Offset = "0xC6801C", VA = "0xC6801C")]
	private Color GetFingerColorPull()
	{
		return default(Color);
	}

	[Token(Token = "0x6000832")]
	[Address(RVA = "0xC680B4", Offset = "0xC680B4", VA = "0xC680B4")]
	private float GetColorBlendPull()
	{
		return default(float);
	}

	[Token(Token = "0x6000833")]
	[Address(RVA = "0xC68128", Offset = "0xC68128", VA = "0xC68128")]
	private float GetAlphaBlendPull()
	{
		return default(float);
	}

	[Token(Token = "0x6000834")]
	[Address(RVA = "0xC6819C", Offset = "0xC6819C", VA = "0xC6819C")]
	private Color GetFingerColorMove()
	{
		return default(Color);
	}

	[Token(Token = "0x6000835")]
	[Address(RVA = "0xC681E0", Offset = "0xC681E0", VA = "0xC681E0")]
	private float GetColorBlendMove()
	{
		return default(float);
	}

	[Token(Token = "0x6000836")]
	[Address(RVA = "0xC68218", Offset = "0xC68218", VA = "0xC68218")]
	private float GetAlphaBlendMove()
	{
		return default(float);
	}

	[Token(Token = "0x6000837")]
	[Address(RVA = "0xC68250", Offset = "0xC68250", VA = "0xC68250")]
	private Color GetLineColor()
	{
		return default(Color);
	}

	[Token(Token = "0x6000838")]
	[Address(RVA = "0xC6836C", Offset = "0xC6836C", VA = "0xC6836C")]
	private float GetLineWidth()
	{
		return default(float);
	}

	[Token(Token = "0x6000839")]
	[Address(RVA = "0xC66E1C", Offset = "0xC66E1C", VA = "0xC66E1C")]
	private void LerpValues()
	{
	}

	[Token(Token = "0x600083A")]
	[Address(RVA = "0xC68438", Offset = "0xC68438", VA = "0xC68438")]
	public HandStateView()
	{
	}
}
[Token(Token = "0x2000190")]
public class HandTracking : HandDataProvider
{
	[Token(Token = "0x400076B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public HandDataProvider _handDataOvr;

	[Token(Token = "0x400076C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static HandTracking I;

	[Token(Token = "0x400076D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private bool _isActive;

	[Token(Token = "0x400076E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x79")]
	private bool _isActiveLate;

	[Token(Token = "0x400076F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private BoneId[] _nonRemappableBones;

	[Token(Token = "0x170000A8")]
	public override bool IsActive
	{
		[Token(Token = "0x6000842")]
		[Address(RVA = "0xC687C0", Offset = "0xC687C0", VA = "0xC687C0", Slot = "6")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1400005E")]
	public event Action<bool> OnActiveChanged
	{
		[Token(Token = "0x600083B")]
		[Address(RVA = "0xC65184", Offset = "0xC65184", VA = "0xC65184")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x600083C")]
		[Address(RVA = "0xC68440", Offset = "0xC68440", VA = "0xC68440")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x1400005F")]
	public event Action<bool> OnActiveChangedLate
	{
		[Token(Token = "0x600083D")]
		[Address(RVA = "0xC684F0", Offset = "0xC684F0", VA = "0xC684F0")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x600083E")]
		[Address(RVA = "0xC685A0", Offset = "0xC685A0", VA = "0xC685A0")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x600083F")]
	[Address(RVA = "0xC68650", Offset = "0xC68650", VA = "0xC68650")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000840")]
	[Address(RVA = "0xC686E8", Offset = "0xC686E8", VA = "0xC686E8", Slot = "22")]
	protected virtual void Update()
	{
	}

	[Token(Token = "0x6000841")]
	[Address(RVA = "0xC68754", Offset = "0xC68754", VA = "0xC68754", Slot = "23")]
	protected virtual void LateUpdate()
	{
	}

	[Token(Token = "0x6000843")]
	[Address(RVA = "0xC687E0", Offset = "0xC687E0", VA = "0xC687E0", Slot = "8")]
	public override Dictionary<BoneId, Transform> GetBones(Cubism.Hand hand)
	{
		return null;
	}

	[Token(Token = "0x6000844")]
	[Address(RVA = "0xC68800", Offset = "0xC68800", VA = "0xC68800", Slot = "13")]
	public override bool BonesInitialized()
	{
		return default(bool);
	}

	[Token(Token = "0x6000845")]
	[Address(RVA = "0xC68824", Offset = "0xC68824", VA = "0xC68824", Slot = "10")]
	public override Transform GetBoneUnsafe(Cubism.Hand hand, BoneId Id)
	{
		return null;
	}

	[Token(Token = "0x6000846")]
	[Address(RVA = "0xC68844", Offset = "0xC68844", VA = "0xC68844", Slot = "9")]
	public override bool TryGetBone(Cubism.Hand hand, BoneId Id, out Transform bone)
	{
		return default(bool);
	}

	[Token(Token = "0x6000847")]
	[Address(RVA = "0xC68864", Offset = "0xC68864", VA = "0xC68864", Slot = "15")]
	public override float GetHandConfidence(Cubism.Hand hand)
	{
		return default(float);
	}

	[Token(Token = "0x6000848")]
	[Address(RVA = "0xC68888", Offset = "0xC68888", VA = "0xC68888", Slot = "14")]
	public override float GetTrackingConfidence(Cubism.Hand hand)
	{
		return default(float);
	}

	[Token(Token = "0x6000849")]
	[Address(RVA = "0xC688AC", Offset = "0xC688AC", VA = "0xC688AC", Slot = "16")]
	public override float GetFingerTrackingConfidence(Cubism.Hand hand, Finger finger)
	{
		return default(float);
	}

	[Token(Token = "0x600084A")]
	[Address(RVA = "0xC688D0", Offset = "0xC688D0", VA = "0xC688D0", Slot = "12")]
	public override float HandScale(Cubism.Hand hand)
	{
		return default(float);
	}

	[Token(Token = "0x600084B")]
	[Address(RVA = "0xC688F0", Offset = "0xC688F0", VA = "0xC688F0", Slot = "7")]
	public override bool IsTracking(Cubism.Hand hand)
	{
		return default(bool);
	}

	[Token(Token = "0x600084C")]
	[Address(RVA = "0xC68910", Offset = "0xC68910", VA = "0xC68910", Slot = "24")]
	public new virtual bool IsPinching(Cubism.Hand hand, Finger finger)
	{
		return default(bool);
	}

	[Token(Token = "0x600084D")]
	[Address(RVA = "0xC68934", Offset = "0xC68934", VA = "0xC68934", Slot = "25")]
	public new virtual bool PinchDown(Cubism.Hand hand, Finger finger)
	{
		return default(bool);
	}

	[Token(Token = "0x600084E")]
	[Address(RVA = "0xC68958", Offset = "0xC68958", VA = "0xC68958", Slot = "26")]
	public new virtual bool PinchUp(Cubism.Hand hand, Finger finger)
	{
		return default(bool);
	}

	[Token(Token = "0x600084F")]
	[Address(RVA = "0xC6897C", Offset = "0xC6897C", VA = "0xC6897C")]
	public float GetDistanceToThumb(Cubism.Hand hand, Finger finger)
	{
		return default(float);
	}

	[Token(Token = "0x6000850")]
	[Address(RVA = "0xC68ACC", Offset = "0xC68ACC", VA = "0xC68ACC")]
	public Vector3 GetMidPointToThumb(Cubism.Hand hand, Finger finger)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000851")]
	[Address(RVA = "0xC68BB8", Offset = "0xC68BB8", VA = "0xC68BB8")]
	protected Finger BoneIdToFinger(BoneId bone)
	{
		return default(Finger);
	}

	[Token(Token = "0x6000852")]
	[Address(RVA = "0xC68D20", Offset = "0xC68D20", VA = "0xC68D20")]
	protected BoneId RemapToFinger(BoneId bone, Finger finger)
	{
		return default(BoneId);
	}

	[Token(Token = "0x6000853")]
	[Address(RVA = "0xC68AB0", Offset = "0xC68AB0", VA = "0xC68AB0")]
	protected BoneId FingerToFingerTipId(Finger finger)
	{
		return default(BoneId);
	}

	[Token(Token = "0x6000854")]
	[Address(RVA = "0xC69050", Offset = "0xC69050", VA = "0xC69050", Slot = "20")]
	public override bool SystemGestureInProgress(Cubism.Hand hand)
	{
		return default(bool);
	}

	[Token(Token = "0x6000855")]
	[Address(RVA = "0xC69074", Offset = "0xC69074", VA = "0xC69074")]
	private HandDataProvider GetData()
	{
		return null;
	}

	[Token(Token = "0x6000856")]
	[Address(RVA = "0xC6907C", Offset = "0xC6907C", VA = "0xC6907C")]
	public HandTracking()
	{
	}
}
[Token(Token = "0x2000191")]
public enum Finger
{
	[Token(Token = "0x4000771")]
	thumb,
	[Token(Token = "0x4000772")]
	index,
	[Token(Token = "0x4000773")]
	middle,
	[Token(Token = "0x4000774")]
	ring,
	[Token(Token = "0x4000775")]
	pinky
}
[Token(Token = "0x2000192")]
public class IndexInput : InputSource
{
	[Token(Token = "0x6000857")]
	[Address(RVA = "0xC69100", Offset = "0xC69100", VA = "0xC69100")]
	public IndexInput()
	{
	}
}
[Token(Token = "0x2000193")]
public class InputService
{
	[Token(Token = "0x4000776")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private State _state;

	[Token(Token = "0x4000777")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Mode[] _transformModes;

	[Token(Token = "0x6000858")]
	[Address(RVA = "0xC69110", Offset = "0xC69110", VA = "0xC69110")]
	public InputService(State state)
	{
	}

	[Token(Token = "0x6000859")]
	[Address(RVA = "0xC69224", Offset = "0xC69224", VA = "0xC69224")]
	private void UpdateInput(Mode mode)
	{
	}
}
[Token(Token = "0x2000194")]
public class InputSource : MonoBehaviour
{
	[Token(Token = "0x600085A")]
	[Address(RVA = "0xC69298", Offset = "0xC69298", VA = "0xC69298", Slot = "4")]
	public virtual bool MenuPressed(Cubism.Hand hand)
	{
		return default(bool);
	}

	[Token(Token = "0x600085B")]
	[Address(RVA = "0xC692A0", Offset = "0xC692A0", VA = "0xC692A0", Slot = "5")]
	public virtual bool MenuPressed()
	{
		return default(bool);
	}

	[Token(Token = "0x600085C")]
	[Address(RVA = "0xC692A8", Offset = "0xC692A8", VA = "0xC692A8", Slot = "6")]
	public virtual bool MenuDown(Cubism.Hand hand)
	{
		return default(bool);
	}

	[Token(Token = "0x600085D")]
	[Address(RVA = "0xC692B0", Offset = "0xC692B0", VA = "0xC692B0", Slot = "7")]
	public virtual bool MenuDown()
	{
		return default(bool);
	}

	[Token(Token = "0x600085E")]
	[Address(RVA = "0xC692B8", Offset = "0xC692B8", VA = "0xC692B8", Slot = "8")]
	public virtual bool Gather(Cubism.Hand hand)
	{
		return default(bool);
	}

	[Token(Token = "0x600085F")]
	[Address(RVA = "0xC692C0", Offset = "0xC692C0", VA = "0xC692C0", Slot = "9")]
	public virtual bool Trigger(Cubism.Hand hand)
	{
		return default(bool);
	}

	[Token(Token = "0x6000860")]
	[Address(RVA = "0xC692C8", Offset = "0xC692C8", VA = "0xC692C8", Slot = "10")]
	public virtual float TriggerAxis(Cubism.Hand hand)
	{
		return default(float);
	}

	[Token(Token = "0x6000861")]
	[Address(RVA = "0xC692D0", Offset = "0xC692D0", VA = "0xC692D0", Slot = "11")]
	public virtual bool TriggerDown(Cubism.Hand hand)
	{
		return default(bool);
	}

	[Token(Token = "0x6000862")]
	[Address(RVA = "0xC692D8", Offset = "0xC692D8", VA = "0xC692D8", Slot = "12")]
	public virtual bool TriggerUp(Cubism.Hand hand)
	{
		return default(bool);
	}

	[Token(Token = "0x6000863")]
	[Address(RVA = "0xC692E0", Offset = "0xC692E0", VA = "0xC692E0", Slot = "13")]
	public virtual bool Grip(Cubism.Hand hand)
	{
		return default(bool);
	}

	[Token(Token = "0x6000864")]
	[Address(RVA = "0xC692E8", Offset = "0xC692E8", VA = "0xC692E8", Slot = "14")]
	public virtual float GripAxis(Cubism.Hand hand)
	{
		return default(float);
	}

	[Token(Token = "0x6000865")]
	[Address(RVA = "0xC692F0", Offset = "0xC692F0", VA = "0xC692F0", Slot = "15")]
	public virtual bool GripDown(Cubism.Hand hand)
	{
		return default(bool);
	}

	[Token(Token = "0x6000866")]
	[Address(RVA = "0xC692F8", Offset = "0xC692F8", VA = "0xC692F8", Slot = "16")]
	public virtual bool GripUp(Cubism.Hand hand)
	{
		return default(bool);
	}

	[Token(Token = "0x6000867")]
	[Address(RVA = "0xC69300", Offset = "0xC69300", VA = "0xC69300", Slot = "17")]
	public virtual bool SecondaryButton(Cubism.Hand hand)
	{
		return default(bool);
	}

	[Token(Token = "0x6000868")]
	[Address(RVA = "0xC69308", Offset = "0xC69308", VA = "0xC69308", Slot = "18")]
	public virtual bool SecondaryButtonDown(Cubism.Hand hand)
	{
		return default(bool);
	}

	[Token(Token = "0x6000869")]
	[Address(RVA = "0xC69310", Offset = "0xC69310", VA = "0xC69310", Slot = "19")]
	public virtual bool Reposition(Cubism.Hand hand)
	{
		return default(bool);
	}

	[Token(Token = "0x600086A")]
	[Address(RVA = "0xC69318", Offset = "0xC69318", VA = "0xC69318", Slot = "20")]
	public virtual bool TwoHandGrip()
	{
		return default(bool);
	}

	[Token(Token = "0x600086B")]
	[Address(RVA = "0xC69360", Offset = "0xC69360", VA = "0xC69360", Slot = "21")]
	public virtual Vector2 RotatePieceAxis(Cubism.Hand hand)
	{
		return default(Vector2);
	}

	[Token(Token = "0x600086C")]
	[Address(RVA = "0xC69108", Offset = "0xC69108", VA = "0xC69108")]
	public InputSource()
	{
	}
}
[Token(Token = "0x2000195")]
public class MockInput : InputSource
{
	[Token(Token = "0x600086D")]
	[Address(RVA = "0xC693A0", Offset = "0xC693A0", VA = "0xC693A0", Slot = "9")]
	public override bool Trigger(Cubism.Hand hand)
	{
		return default(bool);
	}

	[Token(Token = "0x600086E")]
	[Address(RVA = "0xC693BC", Offset = "0xC693BC", VA = "0xC693BC", Slot = "10")]
	public override float TriggerAxis(Cubism.Hand hand)
	{
		return default(float);
	}

	[Token(Token = "0x600086F")]
	[Address(RVA = "0xC693E8", Offset = "0xC693E8", VA = "0xC693E8", Slot = "11")]
	public override bool TriggerDown(Cubism.Hand hand)
	{
		return default(bool);
	}

	[Token(Token = "0x6000870")]
	[Address(RVA = "0xC693F8", Offset = "0xC693F8", VA = "0xC693F8", Slot = "12")]
	public override bool TriggerUp(Cubism.Hand hand)
	{
		return default(bool);
	}

	[Token(Token = "0x6000871")]
	[Address(RVA = "0xC693B0", Offset = "0xC693B0", VA = "0xC693B0")]
	private int GetMouseButton(Cubism.Hand hand)
	{
		return default(int);
	}

	[Token(Token = "0x6000872")]
	[Address(RVA = "0xC69408", Offset = "0xC69408", VA = "0xC69408")]
	public MockInput()
	{
	}
}
[Token(Token = "0x2000196")]
public class OculusHandInput : OculusInput
{
	[Token(Token = "0x4000778")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OVRHand _leftHand;

	[Token(Token = "0x4000779")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public OVRHand _rightHand;

	[Token(Token = "0x400077A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool _leftPinched;

	[Token(Token = "0x400077B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	private bool _leftPinchDownThisFrame;

	[Token(Token = "0x400077C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A")]
	private bool _leftPinchUpThisFrame;

	[Token(Token = "0x400077D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2B")]
	private bool _rightPinched;

	[Token(Token = "0x400077E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private bool _rightPinchDownThisFrame;

	[Token(Token = "0x400077F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D")]
	private bool _rightPinchUpThisFrame;

	[Token(Token = "0x6000873")]
	[Address(RVA = "0xC69410", Offset = "0xC69410", VA = "0xC69410")]
	private void Update()
	{
	}

	[Token(Token = "0x6000874")]
	[Address(RVA = "0xC69504", Offset = "0xC69504", VA = "0xC69504", Slot = "11")]
	public override bool TriggerDown(Cubism.Hand hand)
	{
		return default(bool);
	}

	[Token(Token = "0x6000875")]
	[Address(RVA = "0xC695A0", Offset = "0xC695A0", VA = "0xC695A0", Slot = "9")]
	public override bool Trigger(Cubism.Hand hand)
	{
		return default(bool);
	}

	[Token(Token = "0x6000876")]
	[Address(RVA = "0xC69734", Offset = "0xC69734", VA = "0xC69734", Slot = "12")]
	public override bool TriggerUp(Cubism.Hand hand)
	{
		return default(bool);
	}

	[Token(Token = "0x6000877")]
	[Address(RVA = "0xC697D0", Offset = "0xC697D0", VA = "0xC697D0")]
	private OVRHand GetHand(Cubism.Hand hand)
	{
		return null;
	}

	[Token(Token = "0x6000878")]
	[Address(RVA = "0xC69614", Offset = "0xC69614", VA = "0xC69614")]
	private bool HandCanTrack(Cubism.Hand hand)
	{
		return default(bool);
	}

	[Token(Token = "0x6000879")]
	[Address(RVA = "0xC697E8", Offset = "0xC697E8", VA = "0xC697E8")]
	private bool OneOrMoreFingersPinching(Cubism.Hand hand)
	{
		return default(bool);
	}

	[Token(Token = "0x600087A")]
	[Address(RVA = "0xC69658", Offset = "0xC69658", VA = "0xC69658")]
	private bool FingerPinching(Cubism.Hand hand, Finger finger)
	{
		return default(bool);
	}

	[Token(Token = "0x600087B")]
	[Address(RVA = "0xC69818", Offset = "0xC69818", VA = "0xC69818")]
	private bool OneOrMoreFingersNearPinching(Cubism.Hand hand)
	{
		return default(bool);
	}

	[Token(Token = "0x600087C")]
	[Address(RVA = "0xC69848", Offset = "0xC69848", VA = "0xC69848")]
	private bool FingerNearPinch(Cubism.Hand hand, Finger finger)
	{
		return default(bool);
	}

	[Token(Token = "0x600087D")]
	[Address(RVA = "0xC69904", Offset = "0xC69904", VA = "0xC69904", Slot = "18")]
	public override bool SecondaryButtonDown(Cubism.Hand hand)
	{
		return default(bool);
	}

	[Token(Token = "0x600087E")]
	[Address(RVA = "0xC69A08", Offset = "0xC69A08", VA = "0xC69A08")]
	public OculusHandInput()
	{
	}
}
[Token(Token = "0x2000197")]
public class OculusInput : InputSource
{
	[Token(Token = "0x4000780")]
	private const OVRInput.Controller _left = OVRInput.Controller.LTouch;

	[Token(Token = "0x4000781")]
	private const OVRInput.Controller _right = OVRInput.Controller.RTouch;

	[Token(Token = "0x4000782")]
	private const OVRInput.Button _grab = OVRInput.Button.PrimaryIndexTrigger;

	[Token(Token = "0x4000783")]
	private const OVRInput.Axis1D _grabAxis = OVRInput.Axis1D.PrimaryIndexTrigger;

	[Token(Token = "0x4000784")]
	private const OVRInput.Axis1D _gripAxis = OVRInput.Axis1D.PrimaryHandTrigger;

	[Token(Token = "0x4000785")]
	private const OVRInput.Button _gripButton = OVRInput.Button.PrimaryHandTrigger;

	[Token(Token = "0x4000786")]
	private const OVRInput.RawButton _gatherLeft = OVRInput.RawButton.X;

	[Token(Token = "0x4000787")]
	private const OVRInput.RawButton _gatherRight = OVRInput.RawButton.A;

	[Token(Token = "0x4000788")]
	private const OVRInput.RawButton _debugLeft = OVRInput.RawButton.Y;

	[Token(Token = "0x4000789")]
	private const OVRInput.RawButton _debugRight = OVRInput.RawButton.B;

	[Token(Token = "0x400078A")]
	private const OVRInput.RawButton _openMenuAlt = OVRInput.RawButton.Start;

	[Token(Token = "0x400078B")]
	private const OVRInput.RawButton _repositionLeft = OVRInput.RawButton.LThumbstick;

	[Token(Token = "0x400078C")]
	private const OVRInput.RawButton _repositionRight = OVRInput.RawButton.RThumbstick;

	[Token(Token = "0x600087F")]
	[Address(RVA = "0xC69A18", Offset = "0xC69A18", VA = "0xC69A18", Slot = "5")]
	public override bool MenuPressed()
	{
		return default(bool);
	}

	[Token(Token = "0x6000880")]
	[Address(RVA = "0xC69A70", Offset = "0xC69A70", VA = "0xC69A70", Slot = "7")]
	public override bool MenuDown()
	{
		return default(bool);
	}

	[Token(Token = "0x6000881")]
	[Address(RVA = "0xC69AC8", Offset = "0xC69AC8", VA = "0xC69AC8", Slot = "8")]
	public override bool Gather(Cubism.Hand hand)
	{
		return default(bool);
	}

	[Token(Token = "0x6000882")]
	[Address(RVA = "0xC696CC", Offset = "0xC696CC", VA = "0xC696CC", Slot = "9")]
	public override bool Trigger(Cubism.Hand hand)
	{
		return default(bool);
	}

	[Token(Token = "0x6000883")]
	[Address(RVA = "0xC69538", Offset = "0xC69538", VA = "0xC69538", Slot = "11")]
	public override bool TriggerDown(Cubism.Hand hand)
	{
		return default(bool);
	}

	[Token(Token = "0x6000884")]
	[Address(RVA = "0xC69B48", Offset = "0xC69B48", VA = "0xC69B48", Slot = "10")]
	public override float TriggerAxis(Cubism.Hand hand)
	{
		return default(float);
	}

	[Token(Token = "0x6000885")]
	[Address(RVA = "0xC69768", Offset = "0xC69768", VA = "0xC69768", Slot = "12")]
	public override bool TriggerUp(Cubism.Hand hand)
	{
		return default(bool);
	}

	[Token(Token = "0x6000886")]
	[Address(RVA = "0xC69BB0", Offset = "0xC69BB0", VA = "0xC69BB0", Slot = "13")]
	public override bool Grip(Cubism.Hand hand)
	{
		return default(bool);
	}

	[Token(Token = "0x6000887")]
	[Address(RVA = "0xC69C18", Offset = "0xC69C18", VA = "0xC69C18", Slot = "15")]
	public override bool GripDown(Cubism.Hand hand)
	{
		return default(bool);
	}

	[Token(Token = "0x6000888")]
	[Address(RVA = "0xC69C80", Offset = "0xC69C80", VA = "0xC69C80", Slot = "14")]
	public override float GripAxis(Cubism.Hand hand)
	{
		return default(float);
	}

	[Token(Token = "0x6000889")]
	[Address(RVA = "0xC69CE8", Offset = "0xC69CE8", VA = "0xC69CE8", Slot = "16")]
	public override bool GripUp(Cubism.Hand hand)
	{
		return default(bool);
	}

	[Token(Token = "0x600088A")]
	[Address(RVA = "0xC69D50", Offset = "0xC69D50", VA = "0xC69D50", Slot = "20")]
	public override bool TwoHandGrip()
	{
		return default(bool);
	}

	[Token(Token = "0x600088B")]
	[Address(RVA = "0xC69D98", Offset = "0xC69D98", VA = "0xC69D98", Slot = "21")]
	public override Vector2 RotatePieceAxis(Cubism.Hand hand)
	{
		return default(Vector2);
	}

	[Token(Token = "0x600088C")]
	[Address(RVA = "0xC69B38", Offset = "0xC69B38", VA = "0xC69B38")]
	private OVRInput.Controller GetOculusHand(Cubism.Hand hand)
	{
		return default(OVRInput.Controller);
	}

	[Token(Token = "0x600088D")]
	[Address(RVA = "0xC69E10", Offset = "0xC69E10", VA = "0xC69E10", Slot = "17")]
	public override bool SecondaryButton(Cubism.Hand hand)
	{
		return default(bool);
	}

	[Token(Token = "0x600088E")]
	[Address(RVA = "0xC6999C", Offset = "0xC6999C", VA = "0xC6999C", Slot = "18")]
	public override bool SecondaryButtonDown(Cubism.Hand hand)
	{
		return default(bool);
	}

	[Token(Token = "0x600088F")]
	[Address(RVA = "0xC69E7C", Offset = "0xC69E7C", VA = "0xC69E7C", Slot = "19")]
	public override bool Reposition(Cubism.Hand hand)
	{
		return default(bool);
	}

	[Token(Token = "0x6000890")]
	[Address(RVA = "0xC69A10", Offset = "0xC69A10", VA = "0xC69A10")]
	public OculusInput()
	{
	}
}
[Token(Token = "0x2000198")]
public class OpenVrInput : InputSource
{
	[Token(Token = "0x400078D")]
	private const OVRInput.Controller _left = OVRInput.Controller.LTouch;

	[Token(Token = "0x400078E")]
	private const OVRInput.Controller _right = OVRInput.Controller.RTouch;

	[Token(Token = "0x400078F")]
	private const OVRInput.Button _grab = OVRInput.Button.PrimaryIndexTrigger;

	[Token(Token = "0x4000790")]
	private const OVRInput.Axis1D _grabAxis = OVRInput.Axis1D.PrimaryIndexTrigger;

	[Token(Token = "0x4000791")]
	private const OVRInput.Axis2D _joystick = OVRInput.Axis2D.PrimaryThumbstick;

	[Token(Token = "0x4000792")]
	private const OVRInput.Button _gather = OVRInput.Button.PrimaryThumbstick;

	[Token(Token = "0x4000793")]
	private const OVRInput.Button _openMenu = OVRInput.Button.Two;

	[Token(Token = "0x4000794")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Vector2 _leftTouchpadDelta;

	[Token(Token = "0x4000795")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Vector2 _rightTouchpadDelta;

	[Token(Token = "0x4000796")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Vector2 _prevTouchpadPosLeft;

	[Token(Token = "0x4000797")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Vector2 _prevTouchpadPosRight;

	[Token(Token = "0x4000798")]
	private const ulong _aButtonIndex = 2uL;

	[Token(Token = "0x4000799")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private ETrackedPropertyError err;

	[Token(Token = "0x400079A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private VRControllerState_t ovrControllerState;

	[Token(Token = "0x6000891")]
	[Address(RVA = "0xC69EE8", Offset = "0xC69EE8", VA = "0xC69EE8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000892")]
	[Address(RVA = "0xC69F00", Offset = "0xC69F00", VA = "0xC69F00")]
	private void UpdateTouchpadValuesLeft()
	{
	}

	[Token(Token = "0x6000893")]
	[Address(RVA = "0xC69FE8", Offset = "0xC69FE8", VA = "0xC69FE8")]
	private void UpdateTouchpadValuesRight()
	{
	}

	[Token(Token = "0x6000894")]
	[Address(RVA = "0xC6A0E0", Offset = "0xC6A0E0", VA = "0xC6A0E0", Slot = "5")]
	public override bool MenuPressed()
	{
		return default(bool);
	}

	[Token(Token = "0x6000895")]
	[Address(RVA = "0xC6A138", Offset = "0xC6A138", VA = "0xC6A138", Slot = "7")]
	public override bool MenuDown()
	{
		return default(bool);
	}

	[Token(Token = "0x6000896")]
	[Address(RVA = "0xC6A1C4", Offset = "0xC6A1C4", VA = "0xC6A1C4", Slot = "9")]
	public override bool Trigger(Cubism.Hand hand)
	{
		return default(bool);
	}

	[Token(Token = "0x6000897")]
	[Address(RVA = "0xC6A22C", Offset = "0xC6A22C", VA = "0xC6A22C", Slot = "11")]
	public override bool TriggerDown(Cubism.Hand hand)
	{
		return default(bool);
	}

	[Token(Token = "0x6000898")]
	[Address(RVA = "0xC6A294", Offset = "0xC6A294", VA = "0xC6A294", Slot = "10")]
	public override float TriggerAxis(Cubism.Hand hand)
	{
		return default(float);
	}

	[Token(Token = "0x6000899")]
	[Address(RVA = "0xC6A2FC", Offset = "0xC6A2FC", VA = "0xC6A2FC", Slot = "12")]
	public override bool TriggerUp(Cubism.Hand hand)
	{
		return default(bool);
	}

	[Token(Token = "0x600089A")]
	[Address(RVA = "0xC6A364", Offset = "0xC6A364", VA = "0xC6A364", Slot = "21")]
	public override Vector2 RotatePieceAxis(Cubism.Hand hand)
	{
		return default(Vector2);
	}

	[Token(Token = "0x600089B")]
	[Address(RVA = "0xC6A368", Offset = "0xC6A368", VA = "0xC6A368")]
	private Vector2 JoystickAxis(Cubism.Hand hand)
	{
		return default(Vector2);
	}

	[Token(Token = "0x600089C")]
	[Address(RVA = "0xC6A578", Offset = "0xC6A578", VA = "0xC6A578", Slot = "8")]
	public override bool Gather(Cubism.Hand hand)
	{
		return default(bool);
	}

	[Token(Token = "0x600089D")]
	[Address(RVA = "0xC6A0D0", Offset = "0xC6A0D0", VA = "0xC6A0D0")]
	private OVRInput.Controller GetOculusHand(Cubism.Hand hand)
	{
		return default(OVRInput.Controller);
	}

	[Token(Token = "0x600089E")]
	[Address(RVA = "0xC6A544", Offset = "0xC6A544", VA = "0xC6A544")]
	private Vector2 GetTouchpadAxis(Cubism.Hand hand)
	{
		return default(Vector2);
	}

	[Token(Token = "0x600089F")]
	[Address(RVA = "0xC6A4D4", Offset = "0xC6A4D4", VA = "0xC6A4D4")]
	private Vector2 GetIndexAxis(Cubism.Hand hand)
	{
		return default(Vector2);
	}

	[Token(Token = "0x60008A0")]
	[Address(RVA = "0xC6A658", Offset = "0xC6A658", VA = "0xC6A658")]
	private bool GetAButtonIndex(Cubism.Hand hand)
	{
		return default(bool);
	}

	[Token(Token = "0x60008A1")]
	[Address(RVA = "0xC6A694", Offset = "0xC6A694", VA = "0xC6A694")]
	private bool updateControllerState(ETrackedControllerRole controllerRole, ref VRControllerState_t state)
	{
		return default(bool);
	}

	[Token(Token = "0x60008A2")]
	[Address(RVA = "0xC6A85C", Offset = "0xC6A85C", VA = "0xC6A85C")]
	private string getControllerName(ETrackedControllerRole controllerRole)
	{
		return null;
	}

	[Token(Token = "0x60008A3")]
	[Address(RVA = "0xC6A820", Offset = "0xC6A820", VA = "0xC6A820")]
	private uint getDeviceIndex(ETrackedControllerRole role)
	{
		return default(uint);
	}

	[Token(Token = "0x60008A4")]
	[Address(RVA = "0xC6A790", Offset = "0xC6A790", VA = "0xC6A790")]
	private bool isOpenVrSystemReady()
	{
		return default(bool);
	}

	[Token(Token = "0x60008A5")]
	[Address(RVA = "0xC6A9A8", Offset = "0xC6A9A8", VA = "0xC6A9A8")]
	public OpenVrInput()
	{
	}
}
[Token(Token = "0x2000199")]
public class OpenXrInput : InputSource
{
	[Token(Token = "0x400079B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool triggerLeft;

	[Token(Token = "0x400079C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	private bool triggerRight;

	[Token(Token = "0x400079D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	private bool triggerLeftPrev;

	[Token(Token = "0x400079E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B")]
	private bool triggerRightPrev;

	[Token(Token = "0x400079F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private float triggerAxis;

	[Token(Token = "0x40007A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool gripLeft;

	[Token(Token = "0x40007A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	private bool gripRight;

	[Token(Token = "0x40007A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x22")]
	private bool gripLeftPrev;

	[Token(Token = "0x40007A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x23")]
	private bool gripRightPrev;

	[Token(Token = "0x40007A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float gripAxis;

	[Token(Token = "0x40007A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool menuLeft;

	[Token(Token = "0x40007A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	private bool menuRight;

	[Token(Token = "0x40007A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A")]
	private bool menuLeftPrev;

	[Token(Token = "0x40007A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2B")]
	private bool menuRightPrev;

	[Token(Token = "0x40007A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private Vector2 joyLeft;

	[Token(Token = "0x40007AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private Vector2 joyRight;

	[Token(Token = "0x40007AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private bool joyPressLeft;

	[Token(Token = "0x40007AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3D")]
	private bool joyPressRight;

	[Token(Token = "0x40007AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3E")]
	private bool gatherLeft;

	[Token(Token = "0x40007AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3F")]
	private bool gatherRight;

	[Token(Token = "0x40007AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool secondaryButtonLeft;

	[Token(Token = "0x40007B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
	private bool secondaryButtonRight;

	[Token(Token = "0x40007B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private Vector2 _leftTouchpadDelta;

	[Token(Token = "0x40007B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private Vector2 _rightTouchpadDelta;

	[Token(Token = "0x40007B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private Vector2 _prevTouchpadPosLeft;

	[Token(Token = "0x40007B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private Vector2 _prevTouchpadPosRight;

	[Token(Token = "0x40007B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private HMD[] _noGripHmds;

	[Token(Token = "0x40007B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private HMD[] _noRepositionHmds;

	[Token(Token = "0x60008A6")]
	[Address(RVA = "0xC6AA0C", Offset = "0xC6AA0C", VA = "0xC6AA0C")]
	private void Update()
	{
	}

	[Token(Token = "0x60008A7")]
	[Address(RVA = "0xC6ADB4", Offset = "0xC6ADB4", VA = "0xC6ADB4")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x60008A8")]
	[Address(RVA = "0xC6ABBC", Offset = "0xC6ABBC", VA = "0xC6ABBC")]
	private void UpdateTouchpadValuesLeft()
	{
	}

	[Token(Token = "0x60008A9")]
	[Address(RVA = "0xC6ACB8", Offset = "0xC6ACB8", VA = "0xC6ACB8")]
	private void UpdateTouchpadValuesRight()
	{
	}

	[Token(Token = "0x60008AA")]
	[Address(RVA = "0xC6ADD0", Offset = "0xC6ADD0", VA = "0xC6ADD0", Slot = "9")]
	public override bool Trigger(Cubism.Hand hand)
	{
		return default(bool);
	}

	[Token(Token = "0x60008AB")]
	[Address(RVA = "0xC6ADE4", Offset = "0xC6ADE4", VA = "0xC6ADE4", Slot = "11")]
	public override bool TriggerDown(Cubism.Hand hand)
	{
		return default(bool);
	}

	[Token(Token = "0x60008AC")]
	[Address(RVA = "0xC6AE18", Offset = "0xC6AE18", VA = "0xC6AE18", Slot = "10")]
	public override float TriggerAxis(Cubism.Hand hand)
	{
		return default(float);
	}

	[Token(Token = "0x60008AD")]
	[Address(RVA = "0xC6AEB8", Offset = "0xC6AEB8", VA = "0xC6AEB8", Slot = "12")]
	public override bool TriggerUp(Cubism.Hand hand)
	{
		return default(bool);
	}

	[Token(Token = "0x60008AE")]
	[Address(RVA = "0xC6AEEC", Offset = "0xC6AEEC", VA = "0xC6AEEC", Slot = "13")]
	public override bool Grip(Cubism.Hand hand)
	{
		return default(bool);
	}

	[Token(Token = "0x60008AF")]
	[Address(RVA = "0xC6AF9C", Offset = "0xC6AF9C", VA = "0xC6AF9C", Slot = "14")]
	public override float GripAxis(Cubism.Hand hand)
	{
		return default(float);
	}

	[Token(Token = "0x60008B0")]
	[Address(RVA = "0xC6B09C", Offset = "0xC6B09C", VA = "0xC6B09C", Slot = "15")]
	public override bool GripDown(Cubism.Hand hand)
	{
		return default(bool);
	}

	[Token(Token = "0x60008B1")]
	[Address(RVA = "0xC6B15C", Offset = "0xC6B15C", VA = "0xC6B15C", Slot = "16")]
	public override bool GripUp(Cubism.Hand hand)
	{
		return default(bool);
	}

	[Token(Token = "0x60008B2")]
	[Address(RVA = "0xC6B21C", Offset = "0xC6B21C", VA = "0xC6B21C", Slot = "4")]
	public override bool MenuPressed(Cubism.Hand hand)
	{
		return default(bool);
	}

	[Token(Token = "0x60008B3")]
	[Address(RVA = "0xC6B230", Offset = "0xC6B230", VA = "0xC6B230", Slot = "5")]
	public override bool MenuPressed()
	{
		return default(bool);
	}

	[Token(Token = "0x60008B4")]
	[Address(RVA = "0xC6B250", Offset = "0xC6B250", VA = "0xC6B250", Slot = "6")]
	public override bool MenuDown(Cubism.Hand hand)
	{
		return default(bool);
	}

	[Token(Token = "0x60008B5")]
	[Address(RVA = "0xC6B284", Offset = "0xC6B284", VA = "0xC6B284", Slot = "7")]
	public override bool MenuDown()
	{
		return default(bool);
	}

	[Token(Token = "0x60008B6")]
	[Address(RVA = "0xC6B2BC", Offset = "0xC6B2BC", VA = "0xC6B2BC", Slot = "19")]
	public override bool Reposition(Cubism.Hand hand)
	{
		return default(bool);
	}

	[Token(Token = "0x60008B7")]
	[Address(RVA = "0xC6B400", Offset = "0xC6B400", VA = "0xC6B400", Slot = "21")]
	public override Vector2 RotatePieceAxis(Cubism.Hand hand)
	{
		return default(Vector2);
	}

	[Token(Token = "0x60008B8")]
	[Address(RVA = "0xC6B6B0", Offset = "0xC6B6B0", VA = "0xC6B6B0", Slot = "8")]
	public override bool Gather(Cubism.Hand hand)
	{
		return default(bool);
	}

	[Token(Token = "0x60008B9")]
	[Address(RVA = "0xC6B87C", Offset = "0xC6B87C", VA = "0xC6B87C", Slot = "17")]
	public override bool SecondaryButton(Cubism.Hand hand)
	{
		return default(bool);
	}

	[Token(Token = "0x60008BA")]
	[Address(RVA = "0xC6ABAC", Offset = "0xC6ABAC", VA = "0xC6ABAC")]
	private XRNode GetHandNode(Cubism.Hand hand)
	{
		return default(XRNode);
	}

	[Token(Token = "0x60008BB")]
	[Address(RVA = "0xC6B99C", Offset = "0xC6B99C", VA = "0xC6B99C")]
	public OpenXrInput()
	{
	}
}
[Token(Token = "0x200019A")]
public class PicoInput : InputSource
{
	[Token(Token = "0x40007B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool triggerLeft;

	[Token(Token = "0x40007B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	private bool triggerRight;

	[Token(Token = "0x40007B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	private bool triggerLeftPrev;

	[Token(Token = "0x40007BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B")]
	private bool triggerRightPrev;

	[Token(Token = "0x40007BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private float triggerAxis;

	[Token(Token = "0x40007BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool gripLeft;

	[Token(Token = "0x40007BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	private bool gripRight;

	[Token(Token = "0x40007BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x22")]
	private bool gripLeftPrev;

	[Token(Token = "0x40007BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x23")]
	private bool gripRightPrev;

	[Token(Token = "0x40007C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float gripAxis;

	[Token(Token = "0x40007C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool menuLeft;

	[Token(Token = "0x40007C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	private bool menuRight;

	[Token(Token = "0x40007C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A")]
	private bool menuLeftPrev;

	[Token(Token = "0x40007C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2B")]
	private bool menuRightPrev;

	[Token(Token = "0x40007C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private Vector2 joyLeft;

	[Token(Token = "0x40007C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private Vector2 joyRight;

	[Token(Token = "0x40007C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private bool joyPressLeft;

	[Token(Token = "0x40007C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3D")]
	private bool joyPressRight;

	[Token(Token = "0x40007C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3E")]
	private bool gatherLeft;

	[Token(Token = "0x40007CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3F")]
	private bool gatherRight;

	[Token(Token = "0x40007CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool secondaryButtonLeft;

	[Token(Token = "0x40007CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
	private bool secondaryButtonRight;

	[Token(Token = "0x60008BC")]
	[Address(RVA = "0xC6BA8C", Offset = "0xC6BA8C", VA = "0xC6BA8C")]
	private void Update()
	{
	}

	[Token(Token = "0x60008BD")]
	[Address(RVA = "0xC6BC00", Offset = "0xC6BC00", VA = "0xC6BC00")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x60008BE")]
	[Address(RVA = "0xC6BC1C", Offset = "0xC6BC1C", VA = "0xC6BC1C", Slot = "9")]
	public override bool Trigger(Cubism.Hand hand)
	{
		return default(bool);
	}

	[Token(Token = "0x60008BF")]
	[Address(RVA = "0xC6BC30", Offset = "0xC6BC30", VA = "0xC6BC30", Slot = "11")]
	public override bool TriggerDown(Cubism.Hand hand)
	{
		return default(bool);
	}

	[Token(Token = "0x60008C0")]
	[Address(RVA = "0xC6BC64", Offset = "0xC6BC64", VA = "0xC6BC64", Slot = "10")]
	public override float TriggerAxis(Cubism.Hand hand)
	{
		return default(float);
	}

	[Token(Token = "0x60008C1")]
	[Address(RVA = "0xC6BD04", Offset = "0xC6BD04", VA = "0xC6BD04", Slot = "12")]
	public override bool TriggerUp(Cubism.Hand hand)
	{
		return default(bool);
	}

	[Token(Token = "0x60008C2")]
	[Address(RVA = "0xC6BD38", Offset = "0xC6BD38", VA = "0xC6BD38", Slot = "13")]
	public override bool Grip(Cubism.Hand hand)
	{
		return default(bool);
	}

	[Token(Token = "0x60008C3")]
	[Address(RVA = "0xC6BD4C", Offset = "0xC6BD4C", VA = "0xC6BD4C", Slot = "14")]
	public override float GripAxis(Cubism.Hand hand)
	{
		return default(float);
	}

	[Token(Token = "0x60008C4")]
	[Address(RVA = "0xC6BDEC", Offset = "0xC6BDEC", VA = "0xC6BDEC", Slot = "15")]
	public override bool GripDown(Cubism.Hand hand)
	{
		return default(bool);
	}

	[Token(Token = "0x60008C5")]
	[Address(RVA = "0xC6BE20", Offset = "0xC6BE20", VA = "0xC6BE20", Slot = "16")]
	public override bool GripUp(Cubism.Hand hand)
	{
		return default(bool);
	}

	[Token(Token = "0x60008C6")]
	[Address(RVA = "0xC6BE54", Offset = "0xC6BE54", VA = "0xC6BE54", Slot = "4")]
	public override bool MenuPressed(Cubism.Hand hand)
	{
		return default(bool);
	}

	[Token(Token = "0x60008C7")]
	[Address(RVA = "0xC6BE68", Offset = "0xC6BE68", VA = "0xC6BE68", Slot = "5")]
	public override bool MenuPressed()
	{
		return default(bool);
	}

	[Token(Token = "0x60008C8")]
	[Address(RVA = "0xC6BE88", Offset = "0xC6BE88", VA = "0xC6BE88", Slot = "6")]
	public override bool MenuDown(Cubism.Hand hand)
	{
		return default(bool);
	}

	[Token(Token = "0x60008C9")]
	[Address(RVA = "0xC6BEBC", Offset = "0xC6BEBC", VA = "0xC6BEBC", Slot = "7")]
	public override bool MenuDown()
	{
		return default(bool);
	}

	[Token(Token = "0x60008CA")]
	[Address(RVA = "0xC6BEF4", Offset = "0xC6BEF4", VA = "0xC6BEF4", Slot = "19")]
	public override bool Reposition(Cubism.Hand hand)
	{
		return default(bool);
	}

	[Token(Token = "0x60008CB")]
	[Address(RVA = "0xC6BFC4", Offset = "0xC6BFC4", VA = "0xC6BFC4", Slot = "21")]
	public override Vector2 RotatePieceAxis(Cubism.Hand hand)
	{
		return default(Vector2);
	}

	[Token(Token = "0x60008CC")]
	[Address(RVA = "0xC6C0B4", Offset = "0xC6C0B4", VA = "0xC6C0B4", Slot = "8")]
	public override bool Gather(Cubism.Hand hand)
	{
		return default(bool);
	}

	[Token(Token = "0x60008CD")]
	[Address(RVA = "0xC6C184", Offset = "0xC6C184", VA = "0xC6C184", Slot = "17")]
	public override bool SecondaryButton(Cubism.Hand hand)
	{
		return default(bool);
	}

	[Token(Token = "0x60008CE")]
	[Address(RVA = "0xC6BBF0", Offset = "0xC6BBF0", VA = "0xC6BBF0")]
	private XRNode GetHandNode(Cubism.Hand hand)
	{
		return default(XRNode);
	}

	[Token(Token = "0x60008CF")]
	[Address(RVA = "0xC6C254", Offset = "0xC6C254", VA = "0xC6C254")]
	public PicoInput()
	{
	}
}
[Token(Token = "0x200019B")]
public abstract class PuzzleDetection : StateBehaviour
{
	[Token(Token = "0x40007CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Controller _left;

	[Token(Token = "0x40007CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Controller _right;

	[Token(Token = "0x40007CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public LayerMask _pieceLayers;

	[Token(Token = "0x40007D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public LayerMask _uiLayers;

	[Token(Token = "0x40007D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Transform _grabPoint;

	[Token(Token = "0x40007D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Collider[] _ui;

	[Token(Token = "0x60008D0")]
	[Address(RVA = "0xC6C25C", Offset = "0xC6C25C", VA = "0xC6C25C")]
	public bool OverGrabbablePuzzle(Cubism.Hand hand)
	{
		return default(bool);
	}

	[Token(Token = "0x60008D1")]
	[Address(RVA = "0xC6C414", Offset = "0xC6C414", VA = "0xC6C414")]
	private Transform GetGrabPoint(Cubism.Hand hand)
	{
		return null;
	}

	[Token(Token = "0x60008D2")]
	protected abstract bool OverPuzzle(Vector3 pos);

	[Token(Token = "0x60008D3")]
	[Address(RVA = "0xC6C4EC", Offset = "0xC6C4EC", VA = "0xC6C4EC")]
	protected bool OverUi(Vector3 pos)
	{
		return default(bool);
	}

	[Token(Token = "0x60008D4")]
	[Address(RVA = "0xC6C550", Offset = "0xC6C550", VA = "0xC6C550")]
	protected PuzzleDetection()
	{
	}
}
[Token(Token = "0x200019C")]
public class PuzzleDetectionBoundingSphere : PuzzleDetection
{
	[Token(Token = "0x40007D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Transform _gridCenter;

	[Token(Token = "0x40007D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public PuzzlePosition _puzzlePosition;

	[Token(Token = "0x40007D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public float _margin;

	[Token(Token = "0x60008D5")]
	[Address(RVA = "0xC6C5A8", Offset = "0xC6C5A8", VA = "0xC6C5A8", Slot = "6")]
	protected override bool OverPuzzle(Vector3 pos)
	{
		return default(bool);
	}

	[Token(Token = "0x60008D6")]
	[Address(RVA = "0xC6C670", Offset = "0xC6C670", VA = "0xC6C670")]
	public float GetGrabbableRadius()
	{
		return default(float);
	}

	[Token(Token = "0x60008D7")]
	[Address(RVA = "0xC6C69C", Offset = "0xC6C69C", VA = "0xC6C69C")]
	public PuzzleDetectionBoundingSphere()
	{
	}
}
[Token(Token = "0x200019D")]
public class PuzzleDetectionBoundingSphereView : MonoBehaviour
{
	[Token(Token = "0x40007D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public PuzzleDetectionBoundingSphere _bounds;

	[Token(Token = "0x40007D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform _gridCenter;

	[Token(Token = "0x60008D8")]
	[Address(RVA = "0xC6C6AC", Offset = "0xC6C6AC", VA = "0xC6C6AC")]
	private void Update()
	{
	}

	[Token(Token = "0x60008D9")]
	[Address(RVA = "0xC6C774", Offset = "0xC6C774", VA = "0xC6C774")]
	public PuzzleDetectionBoundingSphereView()
	{
	}
}
[Token(Token = "0x200019E")]
public class PuzzleDetectionGridCells : PuzzleDetection
{
	[Token(Token = "0x40007D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public LayerMask _puzzleLayers;

	[Token(Token = "0x40007D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private float _overPuzzleRadius;

	[Token(Token = "0x40007DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Collider[] _colliders;

	[Token(Token = "0x60008DA")]
	[Address(RVA = "0xC6C77C", Offset = "0xC6C77C", VA = "0xC6C77C", Slot = "6")]
	protected override bool OverPuzzle(Vector3 pos)
	{
		return default(bool);
	}

	[Token(Token = "0x60008DB")]
	[Address(RVA = "0xC6C7E0", Offset = "0xC6C7E0", VA = "0xC6C7E0")]
	public PuzzleDetectionGridCells()
	{
	}
}
[Token(Token = "0x200019F")]
public class SantaCruzInput : InputSource
{
	[Token(Token = "0x40007DB")]
	private const OVRInput.Controller _left = OVRInput.Controller.LTouch;

	[Token(Token = "0x40007DC")]
	private const OVRInput.Controller _right = OVRInput.Controller.RTouch;

	[Token(Token = "0x40007DD")]
	private const OVRInput.Button _grab = OVRInput.Button.PrimaryIndexTrigger;

	[Token(Token = "0x40007DE")]
	private const OVRInput.Button _menu = OVRInput.Button.Back;

	[Token(Token = "0x40007DF")]
	private const OVRInput.Axis1D _transform = OVRInput.Axis1D.PrimaryHandTrigger;

	[Token(Token = "0x40007E0")]
	private const OVRInput.Button _gather = OVRInput.Button.PrimaryTouchpad;

	[Token(Token = "0x60008DC")]
	[Address(RVA = "0xC6C840", Offset = "0xC6C840", VA = "0xC6C840", Slot = "9")]
	public override bool Trigger(Cubism.Hand hand)
	{
		return default(bool);
	}

	[Token(Token = "0x60008DD")]
	[Address(RVA = "0xC6C8B8", Offset = "0xC6C8B8", VA = "0xC6C8B8", Slot = "11")]
	public override bool TriggerDown(Cubism.Hand hand)
	{
		return default(bool);
	}

	[Token(Token = "0x60008DE")]
	[Address(RVA = "0xC6C920", Offset = "0xC6C920", VA = "0xC6C920", Slot = "12")]
	public override bool TriggerUp(Cubism.Hand hand)
	{
		return default(bool);
	}

	[Token(Token = "0x60008DF")]
	[Address(RVA = "0xC6C988", Offset = "0xC6C988", VA = "0xC6C988", Slot = "4")]
	public override bool MenuPressed(Cubism.Hand hand)
	{
		return default(bool);
	}

	[Token(Token = "0x60008E0")]
	[Address(RVA = "0xC6C9F0", Offset = "0xC6C9F0", VA = "0xC6C9F0", Slot = "6")]
	public override bool MenuDown(Cubism.Hand hand)
	{
		return default(bool);
	}

	[Token(Token = "0x60008E1")]
	[Address(RVA = "0xC6CA58", Offset = "0xC6CA58", VA = "0xC6CA58", Slot = "8")]
	public override bool Gather(Cubism.Hand hand)
	{
		return default(bool);
	}

	[Token(Token = "0x60008E2")]
	[Address(RVA = "0xC6CAC0", Offset = "0xC6CAC0", VA = "0xC6CAC0", Slot = "13")]
	public override bool Grip(Cubism.Hand hand)
	{
		return default(bool);
	}

	[Token(Token = "0x60008E3")]
	[Address(RVA = "0xC6CB38", Offset = "0xC6CB38", VA = "0xC6CB38", Slot = "20")]
	public override bool TwoHandGrip()
	{
		return default(bool);
	}

	[Token(Token = "0x60008E4")]
	[Address(RVA = "0xC6CB80", Offset = "0xC6CB80", VA = "0xC6CB80", Slot = "21")]
	public override Vector2 RotatePieceAxis(Cubism.Hand hand)
	{
		return default(Vector2);
	}

	[Token(Token = "0x60008E5")]
	[Address(RVA = "0xC6C8A8", Offset = "0xC6C8A8", VA = "0xC6C8A8")]
	private OVRInput.Controller GetGoHand(Cubism.Hand hand)
	{
		return default(OVRInput.Controller);
	}

	[Token(Token = "0x60008E6")]
	[Address(RVA = "0xC6CBF8", Offset = "0xC6CBF8", VA = "0xC6CBF8")]
	private OVRInput.Controller GetOculusHand(Cubism.Hand hand)
	{
		return default(OVRInput.Controller);
	}

	[Token(Token = "0x60008E7")]
	[Address(RVA = "0xC6CC08", Offset = "0xC6CC08", VA = "0xC6CC08")]
	public SantaCruzInput()
	{
	}
}
[Token(Token = "0x20001A0")]
public class SteamVrInput : InputSource
{
	[Token(Token = "0x60008E8")]
	[Address(RVA = "0xC6CC10", Offset = "0xC6CC10", VA = "0xC6CC10")]
	public SteamVrInput()
	{
	}
}
[Token(Token = "0x20001A1")]
public class SteamVrInput2 : InputSource
{
	[Token(Token = "0x60008E9")]
	[Address(RVA = "0xC6CC18", Offset = "0xC6CC18", VA = "0xC6CC18")]
	public SteamVrInput2()
	{
	}
}
[Token(Token = "0x20001A2")]
public class LanguageService
{
	[Token(Token = "0x40007E1")]
	private const string LanguagePrefKey = "PlayerLanguage";

	[Token(Token = "0x60008EA")]
	[Address(RVA = "0xC6CC20", Offset = "0xC6CC20", VA = "0xC6CC20")]
	public LanguageService()
	{
	}

	[Token(Token = "0x60008EB")]
	[Address(RVA = "0xC6CE38", Offset = "0xC6CE38", VA = "0xC6CE38")]
	private void RegisterActions(ControllerAction controllerAction)
	{
	}

	[Token(Token = "0x60008EC")]
	[Address(RVA = "0xC6CCB0", Offset = "0xC6CCB0", VA = "0xC6CCB0")]
	private void SetLanguageFromPrefsOrSystem()
	{
	}
}
[Token(Token = "0x20001A3")]
public class MusicPlayer : StateBehaviour
{
	[Token(Token = "0x20001A4")]
	[CompilerGenerated]
	private sealed class <FadeVolume>d__12 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40007E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40007E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40007E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float duration;

		[Token(Token = "0x40007EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float end;

		[Token(Token = "0x40007EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float start;

		[Token(Token = "0x40007EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public MusicPlayer <>4__this;

		[Token(Token = "0x40007ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float <startTime>5__2;

		[Token(Token = "0x170000A9")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000903")]
			[Address(RVA = "0xC6D7B4", Offset = "0xC6D7B4", VA = "0xC6D7B4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000AA")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000905")]
			[Address(RVA = "0xC6D7FC", Offset = "0xC6D7FC", VA = "0xC6D7FC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000900")]
		[Address(RVA = "0xC6D31C", Offset = "0xC6D31C", VA = "0xC6D31C")]
		[DebuggerHidden]
		public <FadeVolume>d__12(int <>1__state)
		{
		}

		[Token(Token = "0x6000901")]
		[Address(RVA = "0xC6D6C4", Offset = "0xC6D6C4", VA = "0xC6D6C4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000902")]
		[Address(RVA = "0xC6D6C8", Offset = "0xC6D6C8", VA = "0xC6D6C8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000904")]
		[Address(RVA = "0xC6D7BC", Offset = "0xC6D7BC", VA = "0xC6D7BC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20001A5")]
	[CompilerGenerated]
	private sealed class <_FadeMute>d__19 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40007EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40007EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40007F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MusicPlayer <>4__this;

		[Token(Token = "0x170000AB")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000909")]
			[Address(RVA = "0xC6D880", Offset = "0xC6D880", VA = "0xC6D880", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000AC")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600090B")]
			[Address(RVA = "0xC6D8C8", Offset = "0xC6D8C8", VA = "0xC6D8C8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000906")]
		[Address(RVA = "0xC6D638", Offset = "0xC6D638", VA = "0xC6D638")]
		[DebuggerHidden]
		public <_FadeMute>d__19(int <>1__state)
		{
		}

		[Token(Token = "0x6000907")]
		[Address(RVA = "0xC6D804", Offset = "0xC6D804", VA = "0xC6D804", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000908")]
		[Address(RVA = "0xC6D808", Offset = "0xC6D808", VA = "0xC6D808", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600090A")]
		[Address(RVA = "0xC6D888", Offset = "0xC6D888", VA = "0xC6D888", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20001A6")]
	[CompilerGenerated]
	private sealed class <_FadeUnMute>d__20 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40007F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40007F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40007F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MusicPlayer <>4__this;

		[Token(Token = "0x170000AD")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600090F")]
			[Address(RVA = "0xC6D94C", Offset = "0xC6D94C", VA = "0xC6D94C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000AE")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000911")]
			[Address(RVA = "0xC6D994", Offset = "0xC6D994", VA = "0xC6D994", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600090C")]
		[Address(RVA = "0xC6D660", Offset = "0xC6D660", VA = "0xC6D660")]
		[DebuggerHidden]
		public <_FadeUnMute>d__20(int <>1__state)
		{
		}

		[Token(Token = "0x600090D")]
		[Address(RVA = "0xC6D8D0", Offset = "0xC6D8D0", VA = "0xC6D8D0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600090E")]
		[Address(RVA = "0xC6D8D4", Offset = "0xC6D8D4", VA = "0xC6D8D4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000910")]
		[Address(RVA = "0xC6D954", Offset = "0xC6D954", VA = "0xC6D954", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20001A7")]
	[CompilerGenerated]
	private sealed class <_StopPlaying>d__21 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40007F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40007F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40007F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MusicPlayer <>4__this;

		[Token(Token = "0x170000AF")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000915")]
			[Address(RVA = "0xC6DA30", Offset = "0xC6DA30", VA = "0xC6DA30", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000B0")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000917")]
			[Address(RVA = "0xC6DA78", Offset = "0xC6DA78", VA = "0xC6DA78", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000912")]
		[Address(RVA = "0xC6D688", Offset = "0xC6D688", VA = "0xC6D688")]
		[DebuggerHidden]
		public <_StopPlaying>d__21(int <>1__state)
		{
		}

		[Token(Token = "0x6000913")]
		[Address(RVA = "0xC6D99C", Offset = "0xC6D99C", VA = "0xC6D99C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000914")]
		[Address(RVA = "0xC6D9A0", Offset = "0xC6D9A0", VA = "0xC6D9A0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000916")]
		[Address(RVA = "0xC6DA38", Offset = "0xC6DA38", VA = "0xC6DA38", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40007E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AudioSource _audioSource;

	[Token(Token = "0x40007E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float _targetVolume;

	[Token(Token = "0x40007E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float _transitionDuration;

	[Token(Token = "0x40007E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool _checkIfFinihed;

	[Token(Token = "0x14000060")]
	public event Action OnSongFinished
	{
		[Token(Token = "0x60008ED")]
		[Address(RVA = "0xC6CF88", Offset = "0xC6CF88", VA = "0xC6CF88")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x60008EE")]
		[Address(RVA = "0xC6D024", Offset = "0xC6D024", VA = "0xC6D024")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x60008EF")]
	[Address(RVA = "0xC6D0C0", Offset = "0xC6D0C0", VA = "0xC6D0C0")]
	private void Start()
	{
	}

	[Token(Token = "0x60008F0")]
	[Address(RVA = "0xC6D19C", Offset = "0xC6D19C", VA = "0xC6D19C")]
	private void Update()
	{
	}

	[Token(Token = "0x60008F1")]
	[Address(RVA = "0xC6D20C", Offset = "0xC6D20C", VA = "0xC6D20C")]
	public bool IsPlaying()
	{
		return default(bool);
	}

	[Token(Token = "0x60008F2")]
	[Address(RVA = "0xC6D228", Offset = "0xC6D228", VA = "0xC6D228")]
	public void SetClip(AudioClip clip)
	{
	}

	[Token(Token = "0x60008F3")]
	[Address(RVA = "0xC6D244", Offset = "0xC6D244", VA = "0xC6D244")]
	public void StartPlaying()
	{
	}

	[Token(Token = "0x60008F4")]
	[Address(RVA = "0xC6D290", Offset = "0xC6D290", VA = "0xC6D290")]
	[IteratorStateMachine(typeof(<FadeVolume>d__12))]
	public IEnumerator FadeVolume(float start, float end, float duration)
	{
		return null;
	}

	[Token(Token = "0x60008F5")]
	[Address(RVA = "0xC6D344", Offset = "0xC6D344", VA = "0xC6D344")]
	public void Pause()
	{
	}

	[Token(Token = "0x60008F6")]
	[Address(RVA = "0xC6D3C8", Offset = "0xC6D3C8", VA = "0xC6D3C8")]
	public void UnPause()
	{
	}

	[Token(Token = "0x60008F7")]
	[Address(RVA = "0xC6D44C", Offset = "0xC6D44C", VA = "0xC6D44C")]
	public void StopPlaying()
	{
	}

	[Token(Token = "0x60008F8")]
	[Address(RVA = "0xC6D4E0", Offset = "0xC6D4E0", VA = "0xC6D4E0")]
	public bool IsMuted()
	{
		return default(bool);
	}

	[Token(Token = "0x60008F9")]
	[Address(RVA = "0xC6D510", Offset = "0xC6D510", VA = "0xC6D510")]
	public void FadeMute()
	{
	}

	[Token(Token = "0x60008FA")]
	[Address(RVA = "0xC6D5A4", Offset = "0xC6D5A4", VA = "0xC6D5A4")]
	public void FadeUnMute()
	{
	}

	[Token(Token = "0x60008FB")]
	[Address(RVA = "0xC6D53C", Offset = "0xC6D53C", VA = "0xC6D53C")]
	[IteratorStateMachine(typeof(<_FadeMute>d__19))]
	private IEnumerator _FadeMute()
	{
		return null;
	}

	[Token(Token = "0x60008FC")]
	[Address(RVA = "0xC6D5D0", Offset = "0xC6D5D0", VA = "0xC6D5D0")]
	[IteratorStateMachine(typeof(<_FadeUnMute>d__20))]
	private IEnumerator _FadeUnMute()
	{
		return null;
	}

	[Token(Token = "0x60008FD")]
	[Address(RVA = "0xC6D478", Offset = "0xC6D478", VA = "0xC6D478")]
	[IteratorStateMachine(typeof(<_StopPlaying>d__21))]
	private IEnumerator _StopPlaying()
	{
		return null;
	}

	[Token(Token = "0x60008FE")]
	[Address(RVA = "0xC6D6B0", Offset = "0xC6D6B0", VA = "0xC6D6B0")]
	private void PausePlayback(bool hasFocus)
	{
	}

	[Token(Token = "0x60008FF")]
	[Address(RVA = "0xC6D6BC", Offset = "0xC6D6BC", VA = "0xC6D6BC")]
	public MusicPlayer()
	{
	}
}
[Token(Token = "0x20001A8")]
public class OptionsService : MonoBehaviour
{
	[Token(Token = "0x40007F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject _floorGrid;

	[Token(Token = "0x40007F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public PuzzleMovement _puzzleMovement;

	[Token(Token = "0x40007F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ColorThemeService _themeSystem;

	[Token(Token = "0x40007FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private State _state;

	[Token(Token = "0x40007FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private SettingsModel _settings;

	[Token(Token = "0x40007FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool _setThemeFirstTime;

	[Token(Token = "0x40007FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
	private bool _setPassthroughFirstTime;

	[Token(Token = "0x6000918")]
	[Address(RVA = "0xC6DA80", Offset = "0xC6DA80", VA = "0xC6DA80")]
	public void Setup(State state)
	{
	}

	[Token(Token = "0x6000919")]
	[Address(RVA = "0xC6DAAC", Offset = "0xC6DAAC", VA = "0xC6DAAC")]
	private void SubscribeToModelEvents()
	{
	}

	[Token(Token = "0x600091A")]
	[Address(RVA = "0xC6DCAC", Offset = "0xC6DCAC", VA = "0xC6DCAC")]
	private void ApplyAll()
	{
	}

	[Token(Token = "0x600091B")]
	[Address(RVA = "0xC6DCDC", Offset = "0xC6DCDC", VA = "0xC6DCDC")]
	private void UpdateFloorGridVisibility()
	{
	}

	[Token(Token = "0x600091C")]
	[Address(RVA = "0xC6DD20", Offset = "0xC6DD20", VA = "0xC6DD20")]
	private void UpdateRotationRestriction()
	{
	}

	[Token(Token = "0x600091D")]
	[Address(RVA = "0xC6DDAC", Offset = "0xC6DDAC", VA = "0xC6DDAC")]
	private void UpdateNightMode()
	{
	}

	[Token(Token = "0x600091E")]
	[Address(RVA = "0xC6E030", Offset = "0xC6E030", VA = "0xC6E030")]
	private void UpdateAdvancedControls()
	{
	}

	[Token(Token = "0x600091F")]
	[Address(RVA = "0xC6DF1C", Offset = "0xC6DF1C", VA = "0xC6DF1C")]
	private void UpdatePassthrough()
	{
	}

	[Token(Token = "0x6000920")]
	[Address(RVA = "0xC6E0C0", Offset = "0xC6E0C0", VA = "0xC6E0C0")]
	public OptionsService()
	{
	}
}
[Token(Token = "0x20001A9")]
public class OvrSceneModelLoader : MonoBehaviour
{
	[Token(Token = "0x40007FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OVRSceneManager SceneManager;

	[Token(Token = "0x6000921")]
	[Address(RVA = "0xC6E0C8", Offset = "0xC6E0C8", VA = "0xC6E0C8")]
	public void TryLoadSceneModel()
	{
	}

	[Token(Token = "0x6000922")]
	[Address(RVA = "0xC6E0E0", Offset = "0xC6E0E0", VA = "0xC6E0E0")]
	private void SubscribeToOVREvents()
	{
	}

	[Token(Token = "0x6000923")]
	[Address(RVA = "0xC6E2A4", Offset = "0xC6E2A4", VA = "0xC6E2A4")]
	private void UnsubscribeToOVREvents()
	{
	}

	[Token(Token = "0x6000924")]
	[Address(RVA = "0xC6E224", Offset = "0xC6E224", VA = "0xC6E224")]
	private void OnStart()
	{
	}

	[Token(Token = "0x6000925")]
	[Address(RVA = "0xC6E3E8", Offset = "0xC6E3E8", VA = "0xC6E3E8")]
	private void OnSceneModelLoadedSuccessfully()
	{
	}

	[Token(Token = "0x6000926")]
	[Address(RVA = "0xC6E45C", Offset = "0xC6E45C", VA = "0xC6E45C")]
	private void OnNoSceneModelToLoad()
	{
	}

	[Token(Token = "0x6000927")]
	[Address(RVA = "0xC6E4C4", Offset = "0xC6E4C4", VA = "0xC6E4C4")]
	public OvrSceneModelLoader()
	{
	}
}
[Token(Token = "0x20001AA")]
public class PassthroughService : SetupableBehaviour
{
	[Token(Token = "0x40007FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public OVRPassthroughLayer ptLayer;

	[Token(Token = "0x4000800")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public CameraFader fader;

	[Token(Token = "0x4000801")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private State _state;

	[Token(Token = "0x4000802")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private SettingsModel _settings;

	[Token(Token = "0x4000803")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float _targetBrightness;

	[Token(Token = "0x4000804")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private float _targetContrast;

	[Token(Token = "0x4000805")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool _setPassthroughVisibilityWhenFaded;

	[Token(Token = "0x4000806")]
	private const float MinBrightness = -0.25f;

	[Token(Token = "0x4000807")]
	private const float MaxBrightness = 0.25f;

	[Token(Token = "0x4000808")]
	private const float MinContrast = -0.55f;

	[Token(Token = "0x4000809")]
	private const float MaxContrast = 0.35f;

	[Token(Token = "0x6000928")]
	[Address(RVA = "0xC6E4CC", Offset = "0xC6E4CC", VA = "0xC6E4CC")]
	public void Setup(State state, ColorThemeModel colorThemeModel)
	{
	}

	[Token(Token = "0x6000929")]
	[Address(RVA = "0xC6E620", Offset = "0xC6E620", VA = "0xC6E620")]
	private void Update()
	{
	}

	[Token(Token = "0x600092A")]
	[Address(RVA = "0xC6E79C", Offset = "0xC6E79C", VA = "0xC6E79C")]
	private float ConvertUnitToValue(float value)
	{
		return default(float);
	}

	[Token(Token = "0x600092B")]
	[Address(RVA = "0xC6E7AC", Offset = "0xC6E7AC", VA = "0xC6E7AC")]
	public PassthroughService()
	{
	}
}
[Token(Token = "0x20001AB")]
public class PiecePositionService : MonoBehaviour
{
	[Token(Token = "0x400080A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Player _player;

	[Token(Token = "0x400080B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private PieceCollection _pieceCollection;

	[Token(Token = "0x400080C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private List<PieceView> _scenePieces;

	[Token(Token = "0x400080D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private UnityEngine.Plane _headPlane;

	[Token(Token = "0x400080E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float _headToPuzzle;

	[Token(Token = "0x400080F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private float _headToPiece;

	[Token(Token = "0x4000810")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Vector3 _forceDirection;

	[Token(Token = "0x4000811")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private bool _pieceBetweenPlayerAndPuzzle;

	[Token(Token = "0x4000812")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float _pieceToHeadAngle;

	[Token(Token = "0x4000813")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private Vector3 _headToPuzzleDirection;

	[Token(Token = "0x4000814")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private PuzzlePosition _puzzlePosition;

	[Token(Token = "0x4000815")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Vector3 _pieceTargetPos;

	[Token(Token = "0x4000816")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private List<Vector3> _positions;

	[Token(Token = "0x4000817")]
	private const float OutOfBoundsRadiusMargin = 0.4f;

	[Token(Token = "0x4000818")]
	private const float ForceAngularDrag = 0.75f;

	[Token(Token = "0x4000819")]
	private const float DefaultAngularDrag = 1f;

	[Token(Token = "0x400081A")]
	private const float OutOfBoundsForceMultiplier = 0.025f;

	[Token(Token = "0x400081B")]
	private const float HeadAvoidanceForceMultiplier = 0.1f;

	[Token(Token = "0x400081C")]
	private const float MinHeadRadius = 0.15f;

	[Token(Token = "0x400081D")]
	private const float MinPieceToHeadAngle = 75f;

	[Token(Token = "0x600092D")]
	[Address(RVA = "0xC6E7CC", Offset = "0xC6E7CC", VA = "0xC6E7CC")]
	public void Setup(PieceCollection pieceCollection, PuzzlePosition puzzlePosition)
	{
	}

	[Token(Token = "0x600092E")]
	[Address(RVA = "0xC6E8F0", Offset = "0xC6E8F0", VA = "0xC6E8F0")]
	private void AddPieceToList(string id)
	{
	}

	[Token(Token = "0x600092F")]
	[Address(RVA = "0xC6E9B0", Offset = "0xC6E9B0", VA = "0xC6E9B0")]
	private void RemovePieceFromList(string id)
	{
	}

	[Token(Token = "0x6000930")]
	[Address(RVA = "0xC6EA20", Offset = "0xC6EA20", VA = "0xC6EA20")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000931")]
	[Address(RVA = "0xC6EB38", Offset = "0xC6EB38", VA = "0xC6EB38")]
	private void UpdatePieceParams(PieceView pieceView, int index)
	{
	}

	[Token(Token = "0x6000932")]
	[Address(RVA = "0xC6F264", Offset = "0xC6F264", VA = "0xC6F264")]
	private Vector3 GetTargetPosition(int pieceIndex)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000933")]
	[Address(RVA = "0xC6F1F8", Offset = "0xC6F1F8", VA = "0xC6F1F8")]
	private Vector3 GetPiecePos(PieceView pieceView)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000934")]
	[Address(RVA = "0xC6F308", Offset = "0xC6F308", VA = "0xC6F308")]
	private bool InHeadRange()
	{
		return default(bool);
	}

	[Token(Token = "0x6000935")]
	[Address(RVA = "0xC6F320", Offset = "0xC6F320", VA = "0xC6F320")]
	private void ApplyHeadAvoidanceForce(PieceView pieceView)
	{
	}

	[Token(Token = "0x6000936")]
	[Address(RVA = "0xC6EFE0", Offset = "0xC6EFE0", VA = "0xC6EFE0")]
	private bool OutOfRange()
	{
		return default(bool);
	}

	[Token(Token = "0x6000937")]
	[Address(RVA = "0xC6F020", Offset = "0xC6F020", VA = "0xC6F020")]
	private void ApplyReturnForce(PieceView pieceView)
	{
	}

	[Token(Token = "0x6000938")]
	[Address(RVA = "0xC6F1D4", Offset = "0xC6F1D4", VA = "0xC6F1D4")]
	private void SetDefaultPhysics(PieceView pieceView)
	{
	}

	[Token(Token = "0x6000939")]
	[Address(RVA = "0xC6F4D8", Offset = "0xC6F4D8", VA = "0xC6F4D8")]
	private bool RecentlyThrown(PieceView pieceView)
	{
		return default(bool);
	}

	[Token(Token = "0x600093A")]
	[Address(RVA = "0xC6F5C4", Offset = "0xC6F5C4", VA = "0xC6F5C4")]
	public PiecePositionService()
	{
	}
}
[Token(Token = "0x20001AC")]
public class PlayerVariableSaver
{
	[Token(Token = "0x400081E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private State _state;

	[Token(Token = "0x400081F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private PlayerVariables _vars;

	[Token(Token = "0x600093B")]
	[Address(RVA = "0xC6F684", Offset = "0xC6F684", VA = "0xC6F684")]
	public PlayerVariableSaver(State state)
	{
	}

	[Token(Token = "0x600093C")]
	[Address(RVA = "0xC6F8C8", Offset = "0xC6F8C8", VA = "0xC6F8C8")]
	public void Clear()
	{
	}

	[Token(Token = "0x600093D")]
	[Address(RVA = "0xC6F6C4", Offset = "0xC6F6C4", VA = "0xC6F6C4")]
	private void SubscribeToChanges()
	{
	}

	[Token(Token = "0x600093E")]
	[Address(RVA = "0xC6F9D4", Offset = "0xC6F9D4", VA = "0xC6F9D4")]
	private void Save()
	{
	}

	[Token(Token = "0x600093F")]
	[Address(RVA = "0xC6F750", Offset = "0xC6F750", VA = "0xC6F750")]
	private void LoadIfExists()
	{
	}

	[Token(Token = "0x6000940")]
	[Address(RVA = "0xC6F96C", Offset = "0xC6F96C", VA = "0xC6F96C")]
	private string GetFilePath()
	{
		return null;
	}

	[Token(Token = "0x6000941")]
	[Address(RVA = "0xC6FA84", Offset = "0xC6FA84", VA = "0xC6FA84")]
	private string GetFileName()
	{
		return null;
	}

	[Token(Token = "0x6000942")]
	[Address(RVA = "0xC6FB48", Offset = "0xC6FB48", VA = "0xC6FB48")]
	private static string GetFileBody(Platform platform)
	{
		return null;
	}
}
[Token(Token = "0x20001AD")]
public class PlaytestPuzzleLoader
{
	[Token(Token = "0x20001AE")]
	[CompilerGenerated]
	private sealed class <LoadExpirationDateStringFromWeb>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000824")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000825")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000826")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PlaytestPuzzleLoader <>4__this;

		[Token(Token = "0x4000827")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private WWW <w>5__2;

		[Token(Token = "0x170000B1")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000949")]
			[Address(RVA = "0xC703FC", Offset = "0xC703FC", VA = "0xC703FC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000B2")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600094B")]
			[Address(RVA = "0xC70444", Offset = "0xC70444", VA = "0xC70444", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000946")]
		[Address(RVA = "0xC70270", Offset = "0xC70270", VA = "0xC70270")]
		[DebuggerHidden]
		public <LoadExpirationDateStringFromWeb>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x6000947")]
		[Address(RVA = "0xC70298", Offset = "0xC70298", VA = "0xC70298", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000948")]
		[Address(RVA = "0xC7029C", Offset = "0xC7029C", VA = "0xC7029C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600094A")]
		[Address(RVA = "0xC70404", Offset = "0xC70404", VA = "0xC70404", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000820")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private State _state;

	[Token(Token = "0x4000821")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private StageSetParser _parser;

	[Token(Token = "0x4000822")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private string _expirationDateUrl;

	[Token(Token = "0x4000823")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private string[] _urls;

	[Token(Token = "0x6000943")]
	[Address(RVA = "0xC6FBE4", Offset = "0xC6FBE4", VA = "0xC6FBE4")]
	public PlaytestPuzzleLoader(State state, TextAsset puzzleSet, StageSetParser parser)
	{
	}

	[Token(Token = "0x6000944")]
	[Address(RVA = "0xC6FCB0", Offset = "0xC6FCB0", VA = "0xC6FCB0")]
	private void ParsePuzzles(TextAsset puzzleSet)
	{
	}

	[Token(Token = "0x6000945")]
	[Address(RVA = "0xC70208", Offset = "0xC70208", VA = "0xC70208")]
	[IteratorStateMachine(typeof(<LoadExpirationDateStringFromWeb>d__6))]
	private IEnumerator LoadExpirationDateStringFromWeb()
	{
		return null;
	}
}
[Token(Token = "0x20001AF")]
public class PuzzleSnapService : StateBehaviour
{
	[Token(Token = "0x4000829")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float minDistToCenter;

	[Token(Token = "0x400082A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float maxAngle;

	[Token(Token = "0x400082B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[Space(25f)]
	public PuzzlePosition _puzzlePosition;

	[Token(Token = "0x400082C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public PuzzleGrabInput _puzzleGrabInput;

	[Token(Token = "0x400082D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Transform _grid;

	[Token(Token = "0x400082E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Transform _puzzleCenter;

	[Token(Token = "0x400082F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool _canSnap;

	[Token(Token = "0x4000830")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
	[Header("Debug")]
	public bool _baseSquare;

	[Token(Token = "0x4000831")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5A")]
	public bool _faceSquare;

	[Token(Token = "0x4000832")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5B")]
	public bool _sideSquare;

	[Token(Token = "0x4000833")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public bool _isCube;

	[Token(Token = "0x14000061")]
	public event Action OnSnapped
	{
		[Token(Token = "0x600094C")]
		[Address(RVA = "0xC7044C", Offset = "0xC7044C", VA = "0xC7044C")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x600094D")]
		[Address(RVA = "0xC704E8", Offset = "0xC704E8", VA = "0xC704E8")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x600094E")]
	[Address(RVA = "0xC70584", Offset = "0xC70584", VA = "0xC70584", Slot = "5")]
	protected override void ForceSetup()
	{
	}

	[Token(Token = "0x600094F")]
	[Address(RVA = "0xC70610", Offset = "0xC70610", VA = "0xC70610")]
	private void Update()
	{
	}

	[Token(Token = "0x6000950")]
	[Address(RVA = "0xC71800", Offset = "0xC71800", VA = "0xC71800")]
	public bool PuzzleCanBeSnapped()
	{
		return default(bool);
	}

	[Token(Token = "0x6000951")]
	[Address(RVA = "0xC71808", Offset = "0xC71808", VA = "0xC71808")]
	private void CheckToSnapInPlace()
	{
	}

	[Token(Token = "0x6000952")]
	[Address(RVA = "0xC71850", Offset = "0xC71850", VA = "0xC71850")]
	private bool SideIsLongest()
	{
		return default(bool);
	}

	[Token(Token = "0x6000953")]
	[Address(RVA = "0xC714FC", Offset = "0xC714FC", VA = "0xC714FC")]
	private bool BaseIsSquare()
	{
		return default(bool);
	}

	[Token(Token = "0x6000954")]
	[Address(RVA = "0xC715E8", Offset = "0xC715E8", VA = "0xC715E8")]
	private bool FaceIsSquare()
	{
		return default(bool);
	}

	[Token(Token = "0x6000955")]
	[Address(RVA = "0xC716AC", Offset = "0xC716AC", VA = "0xC716AC")]
	private bool SideIsSquare()
	{
		return default(bool);
	}

	[Token(Token = "0x6000956")]
	[Address(RVA = "0xC71770", Offset = "0xC71770", VA = "0xC71770")]
	private bool IsCube()
	{
		return default(bool);
	}

	[Token(Token = "0x6000957")]
	[Address(RVA = "0xC718A0", Offset = "0xC718A0", VA = "0xC718A0")]
	private Bounds GetBounds()
	{
		return default(Bounds);
	}

	[Token(Token = "0x6000958")]
	[Address(RVA = "0xC718E0", Offset = "0xC718E0", VA = "0xC718E0")]
	public PuzzleSnapService()
	{
	}
}
[Token(Token = "0x20001B0")]
public class PuzzleSongService : SetupableBehaviour
{
	[Token(Token = "0x20001B1")]
	[CompilerGenerated]
	private sealed class <_PlaySequence>d__23 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000844")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000845")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000846")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float startDelay;

		[Token(Token = "0x4000847")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public PuzzleSongService <>4__this;

		[Token(Token = "0x4000848")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float delayAfterOpeningMenu;

		[Token(Token = "0x4000849")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private int <i>5__2;

		[Token(Token = "0x400084A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private LoadOptions <options>5__3;

		[Token(Token = "0x400084B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Text <thanksText>5__4;

		[Token(Token = "0x400084C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Text <completionText>5__5;

		[Token(Token = "0x400084D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private string[] <thankStrings>5__6;

		[Token(Token = "0x170000B3")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600096B")]
			[Address(RVA = "0xC73600", Offset = "0xC73600", VA = "0xC73600", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000B4")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600096D")]
			[Address(RVA = "0xC73648", Offset = "0xC73648", VA = "0xC73648", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000968")]
		[Address(RVA = "0xC72118", Offset = "0xC72118", VA = "0xC72118")]
		[DebuggerHidden]
		public <_PlaySequence>d__23(int <>1__state)
		{
		}

		[Token(Token = "0x6000969")]
		[Address(RVA = "0xC72408", Offset = "0xC72408", VA = "0xC72408", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600096A")]
		[Address(RVA = "0xC7240C", Offset = "0xC7240C", VA = "0xC7240C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600096C")]
		[Address(RVA = "0xC73608", Offset = "0xC73608", VA = "0xC73608", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000835")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public PSElements _elementsMain;

	[Token(Token = "0x4000836")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public PSElements _elementsDlc;

	[Token(Token = "0x4000837")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public PuzzleLoader _loader;

	[Token(Token = "0x4000838")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public AudioSource _song;

	[Token(Token = "0x4000839")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public AudioSource _unclick;

	[Token(Token = "0x400083A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public AudioMixer _menuPianoAudioMixer;

	[Token(Token = "0x400083B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GameObject _thankYouPrefab;

	[Token(Token = "0x400083C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public GameObject _thankYouPrefabTimber;

	[Token(Token = "0x400083D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private GameObject _thankYouInstance;

	[Token(Token = "0x400083E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private float[] _spawnTimeStamps;

	[Token(Token = "0x400083F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private State _state;

	[Token(Token = "0x4000840")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private LevelUi _lastHoveredUi;

	[Token(Token = "0x4000841")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private PSElements _elements;

	[Token(Token = "0x4000842")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private StageSet _set;

	[Token(Token = "0x4000843")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private Level _currentLevel;

	[Token(Token = "0x14000062")]
	public event Action OnFinished
	{
		[Token(Token = "0x6000959")]
		[Address(RVA = "0xC718F4", Offset = "0xC718F4", VA = "0xC718F4")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x600095A")]
		[Address(RVA = "0xC71990", Offset = "0xC71990", VA = "0xC71990")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x600095B")]
	[Address(RVA = "0xC71A2C", Offset = "0xC71A2C", VA = "0xC71A2C")]
	public void Setup(State state)
	{
	}

	[Token(Token = "0x600095C")]
	[Address(RVA = "0xC71B2C", Offset = "0xC71B2C", VA = "0xC71B2C")]
	public void SetMainSequence()
	{
	}

	[Token(Token = "0x600095D")]
	[Address(RVA = "0xC71B84", Offset = "0xC71B84", VA = "0xC71B84")]
	public void SetVolTwoSequence()
	{
	}

	[Token(Token = "0x600095E")]
	[Address(RVA = "0xC71BDC", Offset = "0xC71BDC", VA = "0xC71BDC")]
	private void RegisterActions(ControllerAction action)
	{
	}

	[Token(Token = "0x600095F")]
	[Address(RVA = "0xC71F94", Offset = "0xC71F94", VA = "0xC71F94")]
	private void CheckToPlaySequence()
	{
	}

	[Token(Token = "0x6000960")]
	[Address(RVA = "0xC71DA8", Offset = "0xC71DA8", VA = "0xC71DA8")]
	[IteratorStateMachine(typeof(<_PlaySequence>d__23))]
	private IEnumerator _PlaySequence(float startDelay, float delayAfterOpeningMenu)
	{
		return null;
	}

	[Token(Token = "0x6000961")]
	[Address(RVA = "0xC71EB0", Offset = "0xC71EB0", VA = "0xC71EB0")]
	private void InterruptSongSequence()
	{
	}

	[Token(Token = "0x6000962")]
	[Address(RVA = "0xC72140", Offset = "0xC72140", VA = "0xC72140")]
	private void SetSongSettings(bool on)
	{
	}

	[Token(Token = "0x6000963")]
	[Address(RVA = "0xC723D4", Offset = "0xC723D4", VA = "0xC723D4")]
	private void SetSongPlaying(bool playing)
	{
	}

	[Token(Token = "0x6000964")]
	[Address(RVA = "0xC723B8", Offset = "0xC723B8", VA = "0xC723B8")]
	private void FireFinished()
	{
	}

	[Token(Token = "0x6000965")]
	[Address(RVA = "0xC71D20", Offset = "0xC71D20", VA = "0xC71D20")]
	private void TrackPlay()
	{
	}

	[Token(Token = "0x6000966")]
	[Address(RVA = "0xC71E28", Offset = "0xC71E28", VA = "0xC71E28")]
	private void TrackStop()
	{
	}

	[Token(Token = "0x6000967")]
	[Address(RVA = "0xC72400", Offset = "0xC72400", VA = "0xC72400")]
	public PuzzleSongService()
	{
	}
}
[Serializable]
[Token(Token = "0x20001B2")]
public class PSElements
{
	[Token(Token = "0x400084E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public LevelViewVrui levelViewVrui;

	[Token(Token = "0x400084F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public VrToggleGroup toggleGroup;

	[Token(Token = "0x4000850")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int timesForThankYou;

	[Token(Token = "0x4000851")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public int endSequence;

	[Token(Token = "0x600096E")]
	[Address(RVA = "0xC73650", Offset = "0xC73650", VA = "0xC73650")]
	public PSElements()
	{
	}
}
[Token(Token = "0x20001B3")]
public class RecalibrationService : SetupableBehaviour
{
	[Token(Token = "0x20001B4")]
	[CompilerGenerated]
	private sealed class <Recalibrate>d__24 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000863")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000864")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000865")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public RecalibrationService <>4__this;

		[Token(Token = "0x170000B5")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600097C")]
			[Address(RVA = "0xC758E0", Offset = "0xC758E0", VA = "0xC758E0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000B6")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600097E")]
			[Address(RVA = "0xC75928", Offset = "0xC75928", VA = "0xC75928", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000979")]
		[Address(RVA = "0xC7539C", Offset = "0xC7539C", VA = "0xC7539C")]
		[DebuggerHidden]
		public <Recalibrate>d__24(int <>1__state)
		{
		}

		[Token(Token = "0x600097A")]
		[Address(RVA = "0xC75718", Offset = "0xC75718", VA = "0xC75718", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600097B")]
		[Address(RVA = "0xC7571C", Offset = "0xC7571C", VA = "0xC7571C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600097D")]
		[Address(RVA = "0xC758E8", Offset = "0xC758E8", VA = "0xC758E8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000852")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public StepRunner _recalibrateSteps;

	[Token(Token = "0x4000853")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public PuzzleMovement _puzzleMovement;

	[Token(Token = "0x4000854")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public PuzzlePosition _puzzlePosition;

	[Token(Token = "0x4000855")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public PieceCollection _pieces;

	[Token(Token = "0x4000856")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Calibration _calibration;

	[Token(Token = "0x4000857")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private State _state;

	[Token(Token = "0x4000858")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool _prevMidHandPosSet;

	[Token(Token = "0x4000859")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private Vector3 _prevMidHandPos;

	[Token(Token = "0x400085A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private VectorQueue _prevPositions;

	[Token(Token = "0x400085B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private FloatQueue _angleQueue;

	[Token(Token = "0x400085C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Player _player;

	[Token(Token = "0x400085D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Vector3 _prevPosL;

	[Token(Token = "0x400085E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private Vector3 _prevPosR;

	[Token(Token = "0x400085F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private Vector3 _prevPosLWrist;

	[Token(Token = "0x4000860")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	private Vector3 _prevPosRWrist;

	[Token(Token = "0x4000861")]
	private const float MinFistSpeed = 0.1f;

	[Token(Token = "0x4000862")]
	private const float MinMoveConfidence = 0.8f;

	[Token(Token = "0x600096F")]
	[Address(RVA = "0xC73660", Offset = "0xC73660", VA = "0xC73660")]
	public void Setup(State state)
	{
	}

	[Token(Token = "0x6000970")]
	[Address(RVA = "0xC7388C", Offset = "0xC7388C", VA = "0xC7388C")]
	public void Update()
	{
	}

	[Token(Token = "0x6000971")]
	[Address(RVA = "0xC74484", Offset = "0xC74484", VA = "0xC74484")]
	private void CheckTranslateControllers()
	{
	}

	[Token(Token = "0x6000972")]
	[Address(RVA = "0xC73988", Offset = "0xC73988", VA = "0xC73988")]
	private void CheckTranslatehands()
	{
	}

	[Token(Token = "0x6000973")]
	[Address(RVA = "0xC74E04", Offset = "0xC74E04", VA = "0xC74E04")]
	private void MoveEnvironment(Vector3 dist)
	{
	}

	[Token(Token = "0x6000974")]
	[Address(RVA = "0xC7513C", Offset = "0xC7513C", VA = "0xC7513C")]
	private void RotateEnvironment(float angle, Vector3 rotOrigin)
	{
	}

	[Token(Token = "0x6000975")]
	[Address(RVA = "0xC752F8", Offset = "0xC752F8", VA = "0xC752F8")]
	private void RegisterActions(ControllerAction action)
	{
	}

	[Token(Token = "0x6000976")]
	[Address(RVA = "0xC75334", Offset = "0xC75334", VA = "0xC75334")]
	[IteratorStateMachine(typeof(<Recalibrate>d__24))]
	private IEnumerator Recalibrate()
	{
		return null;
	}

	[Token(Token = "0x6000977")]
	[Address(RVA = "0xC753C4", Offset = "0xC753C4", VA = "0xC753C4")]
	private void ResetPosition()
	{
	}

	[Token(Token = "0x6000978")]
	[Address(RVA = "0xC75668", Offset = "0xC75668", VA = "0xC75668")]
	public RecalibrationService()
	{
	}
}
[Token(Token = "0x20001B5")]
public class SaveFileService : MonoBehaviour
{
	[Token(Token = "0x20001B9")]
	[CompilerGenerated]
	private sealed class <ResetProgressAndRunIntro>d__18 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000875")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000876")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000877")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SaveFileService <>4__this;

		[Token(Token = "0x4000878")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int index;

		[Token(Token = "0x170000B7")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000999")]
			[Address(RVA = "0xC7734C", Offset = "0xC7734C", VA = "0xC7734C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000B8")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600099B")]
			[Address(RVA = "0xC77394", Offset = "0xC77394", VA = "0xC77394", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000996")]
		[Address(RVA = "0xC76DC4", Offset = "0xC76DC4", VA = "0xC76DC4")]
		[DebuggerHidden]
		public <ResetProgressAndRunIntro>d__18(int <>1__state)
		{
		}

		[Token(Token = "0x6000997")]
		[Address(RVA = "0xC771CC", Offset = "0xC771CC", VA = "0xC771CC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000998")]
		[Address(RVA = "0xC771D0", Offset = "0xC771D0", VA = "0xC771D0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600099A")]
		[Address(RVA = "0xC77354", Offset = "0xC77354", VA = "0xC77354", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000866")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public LevelViewVrui[] _levelViews;

	[Token(Token = "0x4000867")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private State _state;

	[Token(Token = "0x4000868")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private SaveFileModel _saveFileModel;

	[Token(Token = "0x4000869")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Grid _grid;

	[Token(Token = "0x400086A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private PieceCollection _pieceCollection;

	[Token(Token = "0x400086B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private CameraFader _fader;

	[Token(Token = "0x400086C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private IntroService _introService;

	[Token(Token = "0x400086D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private WarningMenu _warningMenu;

	[Token(Token = "0x400086E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private StaticPuzzleLoader _staticPuzzleLoader;

	[Token(Token = "0x600097F")]
	[Address(RVA = "0xC75930", Offset = "0xC75930", VA = "0xC75930")]
	public void Setup(State state, Grid grid, PieceCollection pieceCollection, CameraFader fader, IntroService introService, WarningMenu warningMenu, StaticPuzzleLoader staticPuzzleLoader)
	{
	}

	[Token(Token = "0x6000980")]
	[Address(RVA = "0xC75B24", Offset = "0xC75B24", VA = "0xC75B24")]
	public void UnlockAll()
	{
	}

	[Token(Token = "0x6000981")]
	[Address(RVA = "0xC75A24", Offset = "0xC75A24", VA = "0xC75A24")]
	private void LoadIfExists(int index)
	{
	}

	[Token(Token = "0x6000982")]
	[Address(RVA = "0xC75B6C", Offset = "0xC75B6C", VA = "0xC75B6C")]
	private bool HasSaveForProfile(int index)
	{
		return default(bool);
	}

	[Token(Token = "0x6000983")]
	[Address(RVA = "0xC75E84", Offset = "0xC75E84", VA = "0xC75E84")]
	private void RegisterActions(ControllerAction action)
	{
	}

	[Token(Token = "0x6000984")]
	[Address(RVA = "0xC75FD4", Offset = "0xC75FD4", VA = "0xC75FD4")]
	private void ShowLoadGameWarning(int index)
	{
	}

	[Token(Token = "0x6000985")]
	[Address(RVA = "0xC76248", Offset = "0xC76248", VA = "0xC76248")]
	private void ShowNewGameWarning(int index)
	{
	}

	[Token(Token = "0x6000986")]
	[Address(RVA = "0xC76440", Offset = "0xC76440", VA = "0xC76440")]
	private void ShowDeleteWarning(int index)
	{
	}

	[Token(Token = "0x6000987")]
	[Address(RVA = "0xC76700", Offset = "0xC76700", VA = "0xC76700")]
	private void SwitchToSaveFile(int index)
	{
	}

	[Token(Token = "0x6000988")]
	[Address(RVA = "0xC76BE8", Offset = "0xC76BE8", VA = "0xC76BE8")]
	[IteratorStateMachine(typeof(<ResetProgressAndRunIntro>d__18))]
	private IEnumerator ResetProgressAndRunIntro(int index)
	{
		return null;
	}

	[Token(Token = "0x6000989")]
	[Address(RVA = "0xC76DEC", Offset = "0xC76DEC", VA = "0xC76DEC")]
	private void DeleteSaveFile(int index)
	{
	}

	[Token(Token = "0x600098A")]
	[Address(RVA = "0xC7690C", Offset = "0xC7690C", VA = "0xC7690C")]
	private void ResetProgressAndVrui()
	{
	}

	[Token(Token = "0x600098B")]
	[Address(RVA = "0xC76A24", Offset = "0xC76A24", VA = "0xC76A24")]
	public void SelectLastUnlocked()
	{
	}

	[Token(Token = "0x600098C")]
	[Address(RVA = "0xC76C60", Offset = "0xC76C60", VA = "0xC76C60")]
	private void TrackCreateSave()
	{
	}

	[Token(Token = "0x600098D")]
	[Address(RVA = "0xC76FB8", Offset = "0xC76FB8", VA = "0xC76FB8")]
	private void TrackDeleteSave(int deletedIndex, bool currentFile)
	{
	}

	[Token(Token = "0x600098E")]
	[Address(RVA = "0xC76A84", Offset = "0xC76A84", VA = "0xC76A84")]
	private void TrackSwitchSave()
	{
	}

	[Token(Token = "0x600098F")]
	[Address(RVA = "0xC77164", Offset = "0xC77164", VA = "0xC77164")]
	public SaveFileService()
	{
	}
}
[Token(Token = "0x20001BA")]
public class SceneService : MonoBehaviour
{
	[Token(Token = "0x4000879")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject ovrSceneManagerGo;

	[Token(Token = "0x400087A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public OvrSceneModelLoader ovrSceneModelLoader;

	[Token(Token = "0x400087B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OVRRoomRedrawer ovrRoomRedrawer;

	[Token(Token = "0x400087C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private State _state;

	[Token(Token = "0x600099C")]
	[Address(RVA = "0xC7739C", Offset = "0xC7739C", VA = "0xC7739C")]
	public void Setup(State state)
	{
	}

	[Token(Token = "0x600099D")]
	[Address(RVA = "0xC77418", Offset = "0xC77418", VA = "0xC77418")]
	public SceneService()
	{
	}
}
[Token(Token = "0x20001BB")]
public class SettingsService
{
	[Token(Token = "0x400087D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private State _state;

	[Token(Token = "0x600099E")]
	[Address(RVA = "0xC77420", Offset = "0xC77420", VA = "0xC77420")]
	public SettingsService(State state)
	{
	}

	[Token(Token = "0x600099F")]
	[Address(RVA = "0xC774BC", Offset = "0xC774BC", VA = "0xC774BC")]
	private void RegisterActions(ControllerAction controllerAction)
	{
	}

	[Token(Token = "0x60009A0")]
	[Address(RVA = "0xC77F84", Offset = "0xC77F84", VA = "0xC77F84")]
	private void TrackGridAnalytics(bool value)
	{
	}

	[Token(Token = "0x60009A1")]
	[Address(RVA = "0xC77E30", Offset = "0xC77E30", VA = "0xC77E30")]
	private void TrackNightModeAnalytics(bool value)
	{
	}

	[Token(Token = "0x60009A2")]
	[Address(RVA = "0xC78A20", Offset = "0xC78A20", VA = "0xC78A20")]
	private void TrackPassthroughAnalytics(bool value)
	{
	}

	[Token(Token = "0x60009A3")]
	[Address(RVA = "0xC77CDC", Offset = "0xC77CDC", VA = "0xC77CDC")]
	private void TrackAdvancedControlsAnalytics(bool value)
	{
	}

	[Token(Token = "0x60009A4")]
	[Address(RVA = "0xC780D8", Offset = "0xC780D8", VA = "0xC780D8")]
	private void TrackSolvedSpawnAnalytics(bool value)
	{
	}

	[Token(Token = "0x60009A5")]
	[Address(RVA = "0xC7822C", Offset = "0xC7822C", VA = "0xC7822C")]
	private void TrackMusicModeAnalytics(bool value)
	{
	}

	[Token(Token = "0x60009A6")]
	[Address(RVA = "0xC78380", Offset = "0xC78380", VA = "0xC78380")]
	private void TrackSmoothingAnalytics(bool value)
	{
	}

	[Token(Token = "0x60009A7")]
	[Address(RVA = "0xC784D4", Offset = "0xC784D4", VA = "0xC784D4")]
	private void TrackHideHandsAnalytics(bool value)
	{
	}

	[Token(Token = "0x60009A8")]
	[Address(RVA = "0xC78628", Offset = "0xC78628", VA = "0xC78628")]
	private void TrackRRAnalytics(int value)
	{
	}

	[Token(Token = "0x60009A9")]
	[Address(RVA = "0xC78778", Offset = "0xC78778", VA = "0xC78778")]
	private void TrackReprojectControllers(bool value)
	{
	}

	[Token(Token = "0x60009AA")]
	[Address(RVA = "0xC788CC", Offset = "0xC788CC", VA = "0xC788CC")]
	private void TrackUseVirtualhands(bool value)
	{
	}

	[Token(Token = "0x60009AB")]
	[Address(RVA = "0xC77B88", Offset = "0xC77B88", VA = "0xC77B88")]
	private void TrackSetEditorAccess(bool value)
	{
	}
}
[Token(Token = "0x20001BC")]
public class SongPoolPerformance : StateBehaviour
{
	[Token(Token = "0x400087E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GridCellPool cellPool;

	[Token(Token = "0x400087F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObjectPool dotPool;

	[Token(Token = "0x4000880")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObjectPool edgePool;

	[Token(Token = "0x4000881")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObjectPool facePool;

	[Token(Token = "0x4000882")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[Space(15f)]
	public Transform cellParentDefault;

	[Token(Token = "0x4000883")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Transform cellParentSong;

	[Token(Token = "0x4000884")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[Space(15f)]
	public Transform dotParentDefault;

	[Token(Token = "0x4000885")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Transform dotParentSong;

	[Token(Token = "0x4000886")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[Space(15f)]
	public Transform edgeParentDefault;

	[Token(Token = "0x4000887")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Transform edgeParentSong;

	[Token(Token = "0x4000888")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[Space(15f)]
	public Transform faceParentDefault;

	[Token(Token = "0x4000889")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Transform faceParentSong;

	[Token(Token = "0x60009AC")]
	[Address(RVA = "0xC79B74", Offset = "0xC79B74", VA = "0xC79B74")]
	private void Start()
	{
	}

	[Token(Token = "0x60009AD")]
	[Address(RVA = "0xC79C18", Offset = "0xC79C18", VA = "0xC79C18")]
	private void UpdateParents()
	{
	}

	[Token(Token = "0x60009AE")]
	[Address(RVA = "0xC79F3C", Offset = "0xC79F3C", VA = "0xC79F3C")]
	public SongPoolPerformance()
	{
	}
}
[Token(Token = "0x20001BD")]
public static class StaticPuzzleNames
{
	[Token(Token = "0x20001BE")]
	public enum StaticPuzzleName
	{
		[Token(Token = "0x4000898")]
		credits,
		[Token(Token = "0x4000899")]
		introStart,
		[Token(Token = "0x400089A")]
		introFill,
		[Token(Token = "0x400089B")]
		introFull
	}

	[Token(Token = "0x400088A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static string introStartEn;

	[Token(Token = "0x400088B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static string introFillEn;

	[Token(Token = "0x400088C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static string introFullEn;

	[Token(Token = "0x400088D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static string introStartJa;

	[Token(Token = "0x400088E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public static string introFillJa;

	[Token(Token = "0x400088F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public static string introFullJa;

	[Token(Token = "0x4000890")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public static string introStartKo;

	[Token(Token = "0x4000891")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public static string introFillKo;

	[Token(Token = "0x4000892")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public static string introFullKo;

	[Token(Token = "0x4000893")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public static string introStartZh;

	[Token(Token = "0x4000894")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public static string introFillZh;

	[Token(Token = "0x4000895")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public static string introFullZh;

	[Token(Token = "0x4000896")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public static string credits;
}
[Token(Token = "0x20001BF")]
public class VolumeService : MonoBehaviour
{
	[Token(Token = "0x400089C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioMixer _mixer;

	[Token(Token = "0x400089D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private SettingsModel _settings;

	[Token(Token = "0x60009B1")]
	[Address(RVA = "0xC7A140", Offset = "0xC7A140", VA = "0xC7A140")]
	public void Setup(SettingsModel settings)
	{
	}

	[Token(Token = "0x60009B2")]
	[Address(RVA = "0xC7A6FC", Offset = "0xC7A6FC", VA = "0xC7A6FC")]
	private void Start()
	{
	}

	[Token(Token = "0x60009B3")]
	[Address(RVA = "0xC7A71C", Offset = "0xC7A71C", VA = "0xC7A71C")]
	private void RegisterActions(ControllerAction action)
	{
	}

	[Token(Token = "0x60009B4")]
	[Address(RVA = "0xC7A7B8", Offset = "0xC7A7B8", VA = "0xC7A7B8")]
	private void SetVolume(float volume, VolumeTarget target)
	{
	}

	[Token(Token = "0x60009B5")]
	[Address(RVA = "0xC7A30C", Offset = "0xC7A30C", VA = "0xC7A30C")]
	private void SetMasterVolume()
	{
	}

	[Token(Token = "0x60009B6")]
	[Address(RVA = "0xC7A45C", Offset = "0xC7A45C", VA = "0xC7A45C")]
	private void SetSfxVolume()
	{
	}

	[Token(Token = "0x60009B7")]
	[Address(RVA = "0xC7A5AC", Offset = "0xC7A5AC", VA = "0xC7A5AC")]
	private void SetMusicVolume()
	{
	}

	[Token(Token = "0x60009B8")]
	[Address(RVA = "0xC7A824", Offset = "0xC7A824", VA = "0xC7A824")]
	private void TrackSetMasterVolumeAnalytics(float value)
	{
	}

	[Token(Token = "0x60009B9")]
	[Address(RVA = "0xC7AAD4", Offset = "0xC7AAD4", VA = "0xC7AAD4")]
	private void TrackSetMusicVolumeAnalytics(float value)
	{
	}

	[Token(Token = "0x60009BA")]
	[Address(RVA = "0xC7A97C", Offset = "0xC7A97C", VA = "0xC7A97C")]
	private void TrackSetSfxVolumeAnalytics(float value)
	{
	}

	[Token(Token = "0x60009BB")]
	[Address(RVA = "0xC7AC2C", Offset = "0xC7AC2C", VA = "0xC7AC2C")]
	public VolumeService()
	{
	}
}
[Token(Token = "0x20001C0")]
public class ChordPopulator
{
	[Token(Token = "0x400089E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private StageSet _set;

	[Token(Token = "0x60009BC")]
	[Address(RVA = "0xC7AC34", Offset = "0xC7AC34", VA = "0xC7AC34")]
	public void PopulateNotes(StageSet set)
	{
	}

	[Token(Token = "0x60009BD")]
	[Address(RVA = "0xC7B378", Offset = "0xC7B378", VA = "0xC7B378")]
	public ChordPopulator()
	{
	}
}
[Token(Token = "0x20001C1")]
public class ComponentPool<T> : MonoBehaviour where T : MonoBehaviour
{
	[Token(Token = "0x20001C2")]
	[CompilerGenerated]
	private sealed class <Setup>d__11 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40008AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int <>1__state;

		[Token(Token = "0x40008AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private object <>2__current;

		[Token(Token = "0x40008AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ComponentPool<T> <>4__this;

		[Token(Token = "0x170000B9")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60009CC")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000BA")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60009CE")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60009C9")]
		[DebuggerHidden]
		public <Setup>d__11(int <>1__state)
		{
		}

		[Token(Token = "0x60009CA")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60009CB")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60009CD")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20001C4")]
	[CompilerGenerated]
	private sealed class <PopulateAsync>d__17 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40008AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int <>1__state;

		[Token(Token = "0x40008AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private object <>2__current;

		[Token(Token = "0x40008B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ComponentPool<T> <>4__this;

		[Token(Token = "0x40008B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int instancesPerFrame;

		[Token(Token = "0x40008B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int <i>5__2;

		[Token(Token = "0x170000BB")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60009D5")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000BC")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60009D7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60009D2")]
		[DebuggerHidden]
		public <PopulateAsync>d__17(int <>1__state)
		{
		}

		[Token(Token = "0x60009D3")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60009D4")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60009D6")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400089F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public T _prefab;

	[Token(Token = "0x40008A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public int _minInstances;

	[Token(Token = "0x40008A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Transform _unusedParent;

	[Token(Token = "0x40008A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public HideMethod _hideMethod;

	[Token(Token = "0x40008A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public bool _allowUsedLookup;

	[Token(Token = "0x40008A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public int _maxInstancesSpawnedPerFrame;

	[Token(Token = "0x40008A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private Queue<T> _unused;

	[Token(Token = "0x40008A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private HashSet<T> _used;

	[Token(Token = "0x40008A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[Header("Debug")]
	public int __instancesCreated;

	[Token(Token = "0x40008A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public int __inPool;

	[Token(Token = "0x40008A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public int __outOfPool;

	[Token(Token = "0x60009BE")]
	[IteratorStateMachine(typeof(ComponentPool<>.<Setup>d__11))]
	public IEnumerator Setup()
	{
		return null;
	}

	[Token(Token = "0x60009BF")]
	private void Update()
	{
	}

	[Token(Token = "0x60009C0")]
	public virtual T Get()
	{
		return null;
	}

	[Token(Token = "0x60009C1")]
	public virtual void Return(T comp)
	{
	}

	[Token(Token = "0x60009C2")]
	public void ReparentUnused()
	{
	}

	[Token(Token = "0x60009C3")]
	public bool HasObjectInPos(Vector3 pos, Space relativeTo = Space.Self)
	{
		return default(bool);
	}

	[Token(Token = "0x60009C4")]
	[IteratorStateMachine(typeof(ComponentPool<>.<PopulateAsync>d__17))]
	private IEnumerator PopulateAsync(int instancesPerFrame)
	{
		return null;
	}

	[Token(Token = "0x60009C5")]
	private void AddToPool()
	{
	}

	[Token(Token = "0x60009C6")]
	private void Hide(T go)
	{
	}

	[Token(Token = "0x60009C7")]
	private void Show(T go)
	{
	}

	[Token(Token = "0x60009C8")]
	public ComponentPool()
	{
	}
}
[Token(Token = "0x20001C5")]
public class GameObjectPool : MonoBehaviour
{
	[Token(Token = "0x20001C6")]
	[CompilerGenerated]
	private sealed class <Setup>d__10 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40008BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40008BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40008BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObjectPool <>4__this;

		[Token(Token = "0x170000BD")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60009E6")]
			[Address(RVA = "0xC7BB6C", Offset = "0xC7BB6C", VA = "0xC7BB6C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000BE")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60009E8")]
			[Address(RVA = "0xC7BBB4", Offset = "0xC7BBB4", VA = "0xC7BBB4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60009E3")]
		[Address(RVA = "0xC7B3E8", Offset = "0xC7B3E8", VA = "0xC7B3E8")]
		[DebuggerHidden]
		public <Setup>d__10(int <>1__state)
		{
		}

		[Token(Token = "0x60009E4")]
		[Address(RVA = "0xC7BAA4", Offset = "0xC7BAA4", VA = "0xC7BAA4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60009E5")]
		[Address(RVA = "0xC7BAA8", Offset = "0xC7BAA8", VA = "0xC7BAA8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60009E7")]
		[Address(RVA = "0xC7BB74", Offset = "0xC7BB74", VA = "0xC7BB74", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20001C8")]
	[CompilerGenerated]
	private sealed class <PopulateAsync>d__16 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40008C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40008C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40008C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObjectPool <>4__this;

		[Token(Token = "0x40008C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int instancesPerFrame;

		[Token(Token = "0x40008C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private int <i>5__2;

		[Token(Token = "0x170000BF")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60009EF")]
			[Address(RVA = "0xC7BD48", Offset = "0xC7BD48", VA = "0xC7BD48", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000C0")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60009F1")]
			[Address(RVA = "0xC7BD90", Offset = "0xC7BD90", VA = "0xC7BD90", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60009EC")]
		[Address(RVA = "0xC7B9BC", Offset = "0xC7B9BC", VA = "0xC7B9BC")]
		[DebuggerHidden]
		public <PopulateAsync>d__16(int <>1__state)
		{
		}

		[Token(Token = "0x60009ED")]
		[Address(RVA = "0xC7BC8C", Offset = "0xC7BC8C", VA = "0xC7BC8C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60009EE")]
		[Address(RVA = "0xC7BC90", Offset = "0xC7BC90", VA = "0xC7BC90", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60009F0")]
		[Address(RVA = "0xC7BD50", Offset = "0xC7BD50", VA = "0xC7BD50", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40008B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject _prefab;

	[Token(Token = "0x40008B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int _minInstances;

	[Token(Token = "0x40008B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform _unusedParent;

	[Token(Token = "0x40008B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public HideMethod _hideMethod;

	[Token(Token = "0x40008B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public bool _allowUsedLookup;

	[Token(Token = "0x40008B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Queue<GameObject> _unused;

	[Token(Token = "0x40008B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private HashSet<GameObject> _used;

	[Token(Token = "0x40008BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[Header("Debug")]
	public int __instancesCreated;

	[Token(Token = "0x40008BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public int __inPool;

	[Token(Token = "0x40008BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public int __outOfPool;

	[Token(Token = "0x60009D8")]
	[Address(RVA = "0xC7B380", Offset = "0xC7B380", VA = "0xC7B380")]
	[IteratorStateMachine(typeof(<Setup>d__10))]
	public IEnumerator Setup()
	{
		return null;
	}

	[Token(Token = "0x60009D9")]
	[Address(RVA = "0xC7B410", Offset = "0xC7B410", VA = "0xC7B410")]
	private void Update()
	{
	}

	[Token(Token = "0x60009DA")]
	[Address(RVA = "0xC7B45C", Offset = "0xC7B45C", VA = "0xC7B45C", Slot = "4")]
	public virtual GameObject Get()
	{
		return null;
	}

	[Token(Token = "0x60009DB")]
	[Address(RVA = "0xC7B628", Offset = "0xC7B628", VA = "0xC7B628", Slot = "5")]
	public virtual void Return(GameObject obj)
	{
	}

	[Token(Token = "0x60009DC")]
	[Address(RVA = "0xC7B7FC", Offset = "0xC7B7FC", VA = "0xC7B7FC")]
	public bool HasObjectInPos(Vector3 pos, Space relativeTo = Space.Self)
	{
		return default(bool);
	}

	[Token(Token = "0x60009DD")]
	[Address(RVA = "0xC79D30", Offset = "0xC79D30", VA = "0xC79D30")]
	public void ReparentUnused()
	{
	}

	[Token(Token = "0x60009DE")]
	[Address(RVA = "0xC7B944", Offset = "0xC7B944", VA = "0xC7B944")]
	[IteratorStateMachine(typeof(<PopulateAsync>d__16))]
	private IEnumerator PopulateAsync(int instancesPerFrame)
	{
		return null;
	}

	[Token(Token = "0x60009DF")]
	[Address(RVA = "0xC7B52C", Offset = "0xC7B52C", VA = "0xC7B52C")]
	private void AddToPool()
	{
	}

	[Token(Token = "0x60009E0")]
	[Address(RVA = "0xC7B758", Offset = "0xC7B758", VA = "0xC7B758")]
	private void Hide(GameObject go)
	{
	}

	[Token(Token = "0x60009E1")]
	[Address(RVA = "0xC7B5F8", Offset = "0xC7B5F8", VA = "0xC7B5F8")]
	private void Show(GameObject go)
	{
	}

	[Token(Token = "0x60009E2")]
	[Address(RVA = "0xC7B9E4", Offset = "0xC7B9E4", VA = "0xC7B9E4")]
	public GameObjectPool()
	{
	}
}
[Token(Token = "0x20001C9")]
public enum HideMethod
{
	[Token(Token = "0x40008C7")]
	Disable,
	[Token(Token = "0x40008C8")]
	Distance
}
[Token(Token = "0x20001CA")]
public class GridCellPool : ComponentPool<GridCell>
{
	[Token(Token = "0x60009F2")]
	[Address(RVA = "0xC7BD98", Offset = "0xC7BD98", VA = "0xC7BD98")]
	public GridCellPool()
	{
	}
}
[Token(Token = "0x20001CB")]
public class Loader
{
	[Token(Token = "0x40008CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool _loaded;

	[Token(Token = "0x14000063")]
	private event Action OnLoaded
	{
		[Token(Token = "0x60009F3")]
		[Address(RVA = "0xC7BDE0", Offset = "0xC7BDE0", VA = "0xC7BDE0")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x60009F4")]
		[Address(RVA = "0xC7BE7C", Offset = "0xC7BE7C", VA = "0xC7BE7C")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x60009F5")]
	[Address(RVA = "0xC7BF18", Offset = "0xC7BF18", VA = "0xC7BF18")]
	public bool HasFinishedLoading()
	{
		return default(bool);
	}

	[Token(Token = "0x60009F6")]
	[Address(RVA = "0xC7BF20", Offset = "0xC7BF20", VA = "0xC7BF20")]
	public void Subscribe(Action callback)
	{
	}

	[Token(Token = "0x60009F7")]
	[Address(RVA = "0xC7BF64", Offset = "0xC7BF64", VA = "0xC7BF64")]
	public void FinishLoading()
	{
	}

	[Token(Token = "0x60009F8")]
	[Address(RVA = "0xC7BF88", Offset = "0xC7BF88", VA = "0xC7BF88")]
	public Loader()
	{
	}
}
[Token(Token = "0x20001CC")]
public class LoaderGroup : Loader
{
	[Token(Token = "0x40008CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private List<Loader> _loaders;

	[Token(Token = "0x60009F9")]
	[Address(RVA = "0xC7BF90", Offset = "0xC7BF90", VA = "0xC7BF90")]
	public void AddLoader(Loader loader)
	{
	}

	[Token(Token = "0x60009FA")]
	[Address(RVA = "0xC7C088", Offset = "0xC7C088", VA = "0xC7C088")]
	private void CheckFinished()
	{
	}

	[Token(Token = "0x60009FB")]
	[Address(RVA = "0xC7C1FC", Offset = "0xC7C1FC", VA = "0xC7C1FC")]
	public LoaderGroup()
	{
	}
}
[Token(Token = "0x20001CD")]
public class MockVrSetup
{
	[Token(Token = "0x60009FC")]
	[Address(RVA = "0xC7C278", Offset = "0xC7C278", VA = "0xC7C278")]
	public MockVrSetup()
	{
	}
}
[Token(Token = "0x20001CE")]
public class MonoPool<T> : MonoBehaviour where T : MonoBehaviour
{
	[Token(Token = "0x20001CF")]
	[CompilerGenerated]
	private sealed class <Setup>d__8 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40008D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int <>1__state;

		[Token(Token = "0x40008D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private object <>2__current;

		[Token(Token = "0x40008D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public MonoPool<T> <>4__this;

		[Token(Token = "0x170000C1")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000A09")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000C2")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000A0B")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000A06")]
		[DebuggerHidden]
		public <Setup>d__8(int <>1__state)
		{
		}

		[Token(Token = "0x6000A07")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000A08")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000A0A")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20001D0")]
	[CompilerGenerated]
	private sealed class <PopulateAsync>d__12 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40008D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int <>1__state;

		[Token(Token = "0x40008D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private object <>2__current;

		[Token(Token = "0x40008D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public MonoPool<T> <>4__this;

		[Token(Token = "0x40008DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int instancesPerFrame;

		[Token(Token = "0x40008DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int <i>5__2;

		[Token(Token = "0x170000C3")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000A0F")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000C4")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000A11")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000A0C")]
		[DebuggerHidden]
		public <PopulateAsync>d__12(int <>1__state)
		{
		}

		[Token(Token = "0x6000A0D")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000A0E")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000A10")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40008CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public T _prefab;

	[Token(Token = "0x40008CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public int _minInstances;

	[Token(Token = "0x40008CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Transform _unusedParent;

	[Token(Token = "0x40008CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public HideMethod _hideMethod;

	[Token(Token = "0x40008D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private Queue<T> _unused;

	[Token(Token = "0x40008D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[Header("Debug")]
	public int __instancesCreated;

	[Token(Token = "0x40008D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public int __inPool;

	[Token(Token = "0x40008D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public int __outOfPool;

	[Token(Token = "0x60009FD")]
	[IteratorStateMachine(typeof(MonoPool<>.<Setup>d__8))]
	public IEnumerator Setup()
	{
		return null;
	}

	[Token(Token = "0x60009FE")]
	private void Update()
	{
	}

	[Token(Token = "0x60009FF")]
	public virtual T Get()
	{
		return null;
	}

	[Token(Token = "0x6000A00")]
	public virtual void Return(T obj)
	{
	}

	[Token(Token = "0x6000A01")]
	[IteratorStateMachine(typeof(MonoPool<>.<PopulateAsync>d__12))]
	private IEnumerator PopulateAsync(int instancesPerFrame)
	{
		return null;
	}

	[Token(Token = "0x6000A02")]
	private void AddToPool()
	{
	}

	[Token(Token = "0x6000A03")]
	private void Hide(T go)
	{
	}

	[Token(Token = "0x6000A04")]
	private void Show(T go)
	{
	}

	[Token(Token = "0x6000A05")]
	public MonoPool()
	{
	}
}
[Token(Token = "0x20001D1")]
public class ObjectPools : MonoBehaviour
{
	[Token(Token = "0x20001D2")]
	[CompilerGenerated]
	private sealed class <PopulatePools>d__15 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40008EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40008EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40008EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ObjectPools <>4__this;

		[Token(Token = "0x170000C5")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000A18")]
			[Address(RVA = "0xC7C7E8", Offset = "0xC7C7E8", VA = "0xC7C7E8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000C6")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000A1A")]
			[Address(RVA = "0xC7C830", Offset = "0xC7C830", VA = "0xC7C830", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000A15")]
		[Address(RVA = "0xC7C538", Offset = "0xC7C538", VA = "0xC7C538")]
		[DebuggerHidden]
		public <PopulatePools>d__15(int <>1__state)
		{
		}

		[Token(Token = "0x6000A16")]
		[Address(RVA = "0xC7C568", Offset = "0xC7C568", VA = "0xC7C568", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000A17")]
		[Address(RVA = "0xC7C56C", Offset = "0xC7C56C", VA = "0xC7C56C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000A19")]
		[Address(RVA = "0xC7C7F0", Offset = "0xC7C7F0", VA = "0xC7C7F0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40008DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static ObjectPools I;

	[Token(Token = "0x40008DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Header("Grid")]
	public GridCellPool Cells;

	[Token(Token = "0x40008DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObjectPool Dots;

	[Token(Token = "0x40008DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObjectPool Lines;

	[Token(Token = "0x40008E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObjectPool Faces;

	[Token(Token = "0x40008E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[Header("Pieces")]
	public GameObjectPool Pieces;

	[Token(Token = "0x40008E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObjectPool SegmentEdges;

	[Token(Token = "0x40008E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObjectPool Segments;

	[Token(Token = "0x40008E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObjectPool SegmentsTextured;

	[Token(Token = "0x40008E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[Header("Menu")]
	public GameObjectPool MiniUnsolvedCubes;

	[Token(Token = "0x40008E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public GameObjectPool MiniSolvedCubes;

	[Token(Token = "0x40008E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public GameObjectPool MiniCubesTextured;

	[Token(Token = "0x40008E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public PieceVruiViewPool PieceVruiViewPool;

	[Token(Token = "0x40008E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Loader loader;

	[Token(Token = "0x6000A12")]
	[Address(RVA = "0xC7C334", Offset = "0xC7C334", VA = "0xC7C334")]
	public void Setup()
	{
	}

	[Token(Token = "0x6000A13")]
	[Address(RVA = "0xC7C4D0", Offset = "0xC7C4D0", VA = "0xC7C4D0")]
	[IteratorStateMachine(typeof(<PopulatePools>d__15))]
	private IEnumerator PopulatePools()
	{
		return null;
	}

	[Token(Token = "0x6000A14")]
	[Address(RVA = "0xC7C560", Offset = "0xC7C560", VA = "0xC7C560")]
	public ObjectPools()
	{
	}
}
[Token(Token = "0x20001D3")]
public class OculusPlatformService
{
	[Token(Token = "0x40008ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private State _state;

	[Token(Token = "0x40008EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private readonly string[] skus;

	[Token(Token = "0x6000A1B")]
	[Address(RVA = "0xC7C838", Offset = "0xC7C838", VA = "0xC7C838")]
	public OculusPlatformService(State state)
	{
	}

	[Token(Token = "0x6000A1C")]
	[Address(RVA = "0xC7CAE8", Offset = "0xC7CAE8", VA = "0xC7CAE8")]
	private void InitCallback(Message<PlatformInitialize> msg)
	{
	}

	[Token(Token = "0x6000A1D")]
	[Address(RVA = "0xC7CBEC", Offset = "0xC7CBEC", VA = "0xC7CBEC")]
	private void EntitlementCallback(Message msg)
	{
	}

	[Token(Token = "0x6000A1E")]
	[Address(RVA = "0xC7CD2C", Offset = "0xC7CD2C", VA = "0xC7CD2C")]
	private void GetLoggedInUserCallback(Message<User> msg)
	{
	}
}
[Token(Token = "0x20001D4")]
public class PicoPlatformService : MonoBehaviour
{
	[Token(Token = "0x6000A1F")]
	[Address(RVA = "0xC7D034", Offset = "0xC7D034", VA = "0xC7D034")]
	public PicoPlatformService()
	{
	}
}
[Token(Token = "0x20001D5")]
public class PieceVruiViewPool : ComponentPool<PieceVruiView>
{
	[Token(Token = "0x6000A20")]
	[Address(RVA = "0xC7D03C", Offset = "0xC7D03C", VA = "0xC7D03C")]
	public PieceVruiViewPool()
	{
	}
}
[Token(Token = "0x20001D6")]
public class PlatformSpecificSetup : MonoBehaviour
{
	[Token(Token = "0x40008EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Light _mainLight;

	[Token(Token = "0x40008F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject _desktopUi;

	[Token(Token = "0x40008F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OVRManager _ovrManager;

	[Token(Token = "0x6000A21")]
	[Address(RVA = "0xC7D084", Offset = "0xC7D084", VA = "0xC7D084")]
	private void Start()
	{
	}

	[Token(Token = "0x6000A22")]
	[Address(RVA = "0xC7D088", Offset = "0xC7D088", VA = "0xC7D088")]
	public void SetupAndroid()
	{
	}

	[Token(Token = "0x6000A23")]
	[Address(RVA = "0xC7D284", Offset = "0xC7D284", VA = "0xC7D284")]
	private void SetDefaultRenderScale()
	{
	}

	[Token(Token = "0x6000A24")]
	[Address(RVA = "0xC7D3FC", Offset = "0xC7D3FC", VA = "0xC7D3FC")]
	public void SetupDesktop()
	{
	}

	[Token(Token = "0x6000A25")]
	[Address(RVA = "0xC7D4BC", Offset = "0xC7D4BC", VA = "0xC7D4BC")]
	public PlatformSpecificSetup()
	{
	}
}
[Token(Token = "0x20001D7")]
public class ButtonPusherSwitcher : MonoBehaviour
{
	[Token(Token = "0x40008F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Transform _eyes;

	[Token(Token = "0x40008F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private ButtonPusher _pusherLeft;

	[Token(Token = "0x40008F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private ButtonPusher _pusherRight;

	[Token(Token = "0x40008F5")]
	private const float MinEyeFingerAngle = 28.5f;

	[Token(Token = "0x40008F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[Header("Debug")]
	[SerializeField]
	private float _angleLeft;

	[Token(Token = "0x40008F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[SerializeField]
	private float _angleRight;

	[Token(Token = "0x40008F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private float _orientationLeft;

	[Token(Token = "0x40008F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[SerializeField]
	private float _orientationRight;

	[Token(Token = "0x6000A26")]
	[Address(RVA = "0xC7D4C4", Offset = "0xC7D4C4", VA = "0xC7D4C4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000A27")]
	[Address(RVA = "0xC7DBC4", Offset = "0xC7DBC4", VA = "0xC7DBC4")]
	public ButtonPusherSwitcher()
	{
	}
}
[Token(Token = "0x20001D8")]
public class ControllerSetup : SetupableBehaviour
{
	[Token(Token = "0x40008FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Controller _leftController;

	[Token(Token = "0x40008FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Controller _rightController;

	[Token(Token = "0x40008FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject _pincer;

	[Token(Token = "0x40008FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject _solidArrow;

	[Token(Token = "0x40008FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject _handPoint;

	[Token(Token = "0x40008FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public CreatePositionView _spawnPlaceHolder;

	[Token(Token = "0x4000900")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[Space(25f)]
	public AnchorSpawner _anchorSpawner;

	[Token(Token = "0x4000901")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[Space(25f)]
	public ControllerAssets _cambriaAssets;

	[Token(Token = "0x4000902")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public ControllerAssets _oculusAssets;

	[Token(Token = "0x4000903")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public ControllerAssets _questAssets;

	[Token(Token = "0x4000904")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public ControllerAssets _picoAssets;

	[Token(Token = "0x4000905")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public ControllerAssets _pico4Assets;

	[Token(Token = "0x4000906")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public ControllerAssets _viveAssets;

	[Token(Token = "0x4000907")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public ControllerAssets _indexAssets;

	[Token(Token = "0x4000908")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public ControllerAssets _wmrAssets;

	[Token(Token = "0x4000909")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public ControllerAssets _mockAssets;

	[Token(Token = "0x400090A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private List<GameObject> _controllerPoints;

	[Token(Token = "0x400090B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private List<GameObject> _handPoints;

	[Token(Token = "0x400090C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private State _state;

	[Token(Token = "0x6000A28")]
	[Address(RVA = "0xC7DBCC", Offset = "0xC7DBCC", VA = "0xC7DBCC")]
	public void Setup(State state)
	{
	}

	[Token(Token = "0x6000A29")]
	[Address(RVA = "0xC7E024", Offset = "0xC7E024", VA = "0xC7E024")]
	public void Update()
	{
	}

	[Token(Token = "0x6000A2A")]
	[Address(RVA = "0xC7DE38", Offset = "0xC7DE38", VA = "0xC7DE38")]
	private void SetupController(Controller controller)
	{
	}

	[Token(Token = "0x6000A2B")]
	[Address(RVA = "0xC7E398", Offset = "0xC7E398", VA = "0xC7E398")]
	private void SpawnPincerArrow(Controller controller)
	{
	}

	[Token(Token = "0x6000A2C")]
	[Address(RVA = "0xC7E2B0", Offset = "0xC7E2B0", VA = "0xC7E2B0")]
	private ControllerAssets GetControllerAssets()
	{
		return null;
	}

	[Token(Token = "0x6000A2D")]
	[Address(RVA = "0xC7E520", Offset = "0xC7E520", VA = "0xC7E520")]
	private GameObject SpawnAndCenter(GameObject obj, Transform parent)
	{
		return null;
	}

	[Token(Token = "0x6000A2E")]
	[Address(RVA = "0xC7E5C0", Offset = "0xC7E5C0", VA = "0xC7E5C0")]
	public ControllerSetup()
	{
	}
}
[Serializable]
[Token(Token = "0x20001D9")]
public class ControllerAssets
{
	[Token(Token = "0x400090D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public GameObject model;

	[Token(Token = "0x400090E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string triggerAnim;

	[Token(Token = "0x6000A2F")]
	[Address(RVA = "0xC7E660", Offset = "0xC7E660", VA = "0xC7E660")]
	public ControllerAssets()
	{
	}
}
[Token(Token = "0x20001DA")]
public class FingerTipTriggers : SetupableBehaviour
{
	[Token(Token = "0x400090F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject _triggerPrefab;

	[Token(Token = "0x4000910")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform _leftParent;

	[Token(Token = "0x4000911")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform _rightParent;

	[Token(Token = "0x4000912")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Dictionary<Transform, FingerTip> _triggers;

	[Token(Token = "0x6000A30")]
	[Address(RVA = "0xC7E668", Offset = "0xC7E668", VA = "0xC7E668")]
	private void Update()
	{
	}

	[Token(Token = "0x6000A31")]
	[Address(RVA = "0xC7E8AC", Offset = "0xC7E8AC", VA = "0xC7E8AC")]
	private void TrySetup()
	{
	}

	[Token(Token = "0x6000A32")]
	[Address(RVA = "0xC7E9B8", Offset = "0xC7E9B8", VA = "0xC7E9B8")]
	private void SpawnHandTriggers(Cubism.Hand hand)
	{
	}

	[Token(Token = "0x6000A33")]
	[Address(RVA = "0xC7E9BC", Offset = "0xC7E9BC", VA = "0xC7E9BC")]
	private void SpawnFingerTrigger(Cubism.Hand hand, Finger finger)
	{
	}

	[Token(Token = "0x6000A34")]
	[Address(RVA = "0xC7EAB8", Offset = "0xC7EAB8", VA = "0xC7EAB8")]
	public FingerTipTriggers()
	{
	}
}
[Token(Token = "0x20001DB")]
public struct FingerTip
{
	[Token(Token = "0x4000913")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Cubism.Hand hand;

	[Token(Token = "0x4000914")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public Finger finger;

	[Token(Token = "0x6000A35")]
	[Address(RVA = "0xC7E974", Offset = "0xC7E974", VA = "0xC7E974")]
	public Vector3 GetPosition()
	{
		return default(Vector3);
	}
}
[Token(Token = "0x20001DC")]
public abstract class GrabAction : StateBehaviour
{
	[Token(Token = "0x4000917")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public CursorInteractions _cursorInteractions;

	[Token(Token = "0x4000918")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	protected InteractionData _lastInteractionData;

	[Token(Token = "0x4000919")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	protected bool _grabbed;

	[Token(Token = "0x14000064")]
	public event Action<InteractionData> OnGrab
	{
		[Token(Token = "0x6000A36")]
		[Address(RVA = "0xC7EB34", Offset = "0xC7EB34", VA = "0xC7EB34")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000A37")]
		[Address(RVA = "0xC7EBE4", Offset = "0xC7EBE4", VA = "0xC7EBE4")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x14000065")]
	public event Action<InteractionData> OnRelease
	{
		[Token(Token = "0x6000A38")]
		[Address(RVA = "0xC7EC94", Offset = "0xC7EC94", VA = "0xC7EC94")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000A39")]
		[Address(RVA = "0xC7ED44", Offset = "0xC7ED44", VA = "0xC7ED44")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x6000A3A")]
	[Address(RVA = "0xC7EDF4", Offset = "0xC7EDF4", VA = "0xC7EDF4")]
	protected void Awake()
	{
	}

	[Token(Token = "0x6000A3B")]
	[Address(RVA = "0xC7EED4", Offset = "0xC7EED4", VA = "0xC7EED4")]
	protected void Start()
	{
	}

	[Token(Token = "0x6000A3C")]
	[Address(RVA = "0xC7EFE0", Offset = "0xC7EFE0", VA = "0xC7EFE0")]
	public bool IsGrabbed()
	{
		return default(bool);
	}

	[Token(Token = "0x6000A3D")]
	[Address(RVA = "0xC7EFE8", Offset = "0xC7EFE8", VA = "0xC7EFE8")]
	public void ForceRelease(bool fireEvent = true)
	{
	}

	[Token(Token = "0x6000A3E")]
	[Address(RVA = "0xC7F120", Offset = "0xC7F120", VA = "0xC7F120")]
	private void ReleaseOnFocusGained(bool focus)
	{
	}

	[Token(Token = "0x6000A3F")]
	[Address(RVA = "0xC7F140", Offset = "0xC7F140", VA = "0xC7F140")]
	private void Grab(InteractionData data)
	{
	}

	[Token(Token = "0x6000A40")]
	[Address(RVA = "0xC7F008", Offset = "0xC7F008", VA = "0xC7F008")]
	private void Release(InteractionData data, bool fireEvent = true)
	{
	}

	[Token(Token = "0x6000A41")]
	protected abstract void DoGrab(InteractionData data);

	[Token(Token = "0x6000A42")]
	protected abstract void DoRelease(InteractionData grabber);

	[Token(Token = "0x6000A43")]
	[Address(RVA = "0xC7F2A4", Offset = "0xC7F2A4", VA = "0xC7F2A4")]
	private void FireOnGrab(InteractionData data)
	{
	}

	[Token(Token = "0x6000A44")]
	[Address(RVA = "0xC7F2C0", Offset = "0xC7F2C0", VA = "0xC7F2C0")]
	private void FireOnRelease(InteractionData data)
	{
	}

	[Token(Token = "0x6000A45")]
	[Address(RVA = "0xC7F2DC", Offset = "0xC7F2DC", VA = "0xC7F2DC")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000A46")]
	[Address(RVA = "0xC7F2F4", Offset = "0xC7F2F4", VA = "0xC7F2F4")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000A47")]
	[Address(RVA = "0xC7F30C", Offset = "0xC7F30C", VA = "0xC7F30C")]
	protected GrabAction()
	{
	}
}
[Token(Token = "0x20001DD")]
public class GrabActionFixedJoint : GrabAction
{
	[Token(Token = "0x400091A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Rigidbody _rigidBody;

	[Token(Token = "0x400091B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public float velocityFactor;

	[Token(Token = "0x400091C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public float rotationFactor;

	[Token(Token = "0x400091D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public float _breakForce;

	[Token(Token = "0x400091E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private FixedJoint _joint;

	[Token(Token = "0x400091F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Rigidbody _controllerRigidbody;

	[Token(Token = "0x4000920")]
	private const float MinVelocityForReleaseVelocity = 0.4f;

	[Token(Token = "0x4000921")]
	private const float MinVelocityForReleaseVelocityHT = 0.55f;

	[Token(Token = "0x4000922")]
	private const float MinAngVelocityForReleaseVelocity = 85f;

	[Token(Token = "0x4000923")]
	private const float MaxVelocity = 7f;

	[Token(Token = "0x4000924")]
	private const float IgnoreVelocity = 15f;

	[Token(Token = "0x4000925")]
	private const float MinThrowTrackingConfidence = 0.75f;

	[Token(Token = "0x4000926")]
	private const float MinHighConfDurationForThrow = 0.5f;

	[Token(Token = "0x4000927")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private bool _releasedLastFrame;

	[Token(Token = "0x4000928")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private float _badTrackingTimeStamp;

	[Token(Token = "0x6000A4B")]
	[Address(RVA = "0xC7F35C", Offset = "0xC7F35C", VA = "0xC7F35C")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000A4C")]
	[Address(RVA = "0xC7F900", Offset = "0xC7F900", VA = "0xC7F900", Slot = "6")]
	protected override void DoGrab(InteractionData data)
	{
	}

	[Token(Token = "0x6000A4D")]
	[Address(RVA = "0xC7FA10", Offset = "0xC7FA10", VA = "0xC7FA10", Slot = "7")]
	protected override void DoRelease(InteractionData data)
	{
	}

	[Token(Token = "0x6000A4E")]
	[Address(RVA = "0xC7F9A4", Offset = "0xC7F9A4", VA = "0xC7F9A4")]
	private void CreateJoint()
	{
	}

	[Token(Token = "0x6000A4F")]
	[Address(RVA = "0xC7F870", Offset = "0xC7F870", VA = "0xC7F870")]
	private void DestroyJointIfExists()
	{
	}

	[Token(Token = "0x6000A50")]
	[Address(RVA = "0xC7FAD0", Offset = "0xC7FAD0", VA = "0xC7FAD0")]
	private void OnJointBreak(float breakForce)
	{
	}

	[Token(Token = "0x6000A51")]
	[Address(RVA = "0xC7FAEC", Offset = "0xC7FAEC", VA = "0xC7FAEC")]
	public GrabActionFixedJoint()
	{
	}
}
[Token(Token = "0x20001DE")]
public class GrabActionForce : GrabAction
{
	[Token(Token = "0x4000929")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Rigidbody _rigidBody;

	[Token(Token = "0x400092A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Transform _interactionPoint;

	[Token(Token = "0x400092B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public float _releaseDistance;

	[Token(Token = "0x400092C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private float velocityFactor;

	[Token(Token = "0x400092D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Vector3 _posDelta;

	[Token(Token = "0x400092E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private float rotationFactor;

	[Token(Token = "0x400092F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Quaternion _rotationDelta;

	[Token(Token = "0x4000930")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private float _angle;

	[Token(Token = "0x4000931")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private Vector3 _axis;

	[Token(Token = "0x6000A52")]
	[Address(RVA = "0xC7FB0C", Offset = "0xC7FB0C", VA = "0xC7FB0C")]
	private new void Awake()
	{
	}

	[Token(Token = "0x6000A53")]
	[Address(RVA = "0xC7FB48", Offset = "0xC7FB48", VA = "0xC7FB48")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000A54")]
	[Address(RVA = "0xC7FEAC", Offset = "0xC7FEAC", VA = "0xC7FEAC", Slot = "6")]
	protected override void DoGrab(InteractionData data)
	{
	}

	[Token(Token = "0x6000A55")]
	[Address(RVA = "0xC7FF2C", Offset = "0xC7FF2C", VA = "0xC7FF2C", Slot = "7")]
	protected override void DoRelease(InteractionData data)
	{
	}

	[Token(Token = "0x6000A56")]
	[Address(RVA = "0xC7FB84", Offset = "0xC7FB84", VA = "0xC7FB84")]
	private void ApplyVelocity()
	{
	}

	[Token(Token = "0x6000A57")]
	[Address(RVA = "0xC7FC30", Offset = "0xC7FC30", VA = "0xC7FC30")]
	private void ApplyAngularVelocity()
	{
	}

	[Token(Token = "0x6000A58")]
	[Address(RVA = "0xC7FDA8", Offset = "0xC7FDA8", VA = "0xC7FDA8")]
	private void CheckReleaseDistance()
	{
	}

	[Token(Token = "0x6000A59")]
	[Address(RVA = "0xC7FF30", Offset = "0xC7FF30", VA = "0xC7FF30")]
	public GrabActionForce()
	{
	}
}
[Token(Token = "0x20001DF")]
public class GrabActionSpringJoint : GrabAction
{
	[Token(Token = "0x4000932")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Rigidbody _rigidBody;

	[Token(Token = "0x4000933")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public float velocityFactor;

	[Token(Token = "0x4000934")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public float rotationFactor;

	[Token(Token = "0x4000935")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private SpringJoint _joint;

	[Token(Token = "0x4000936")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Rigidbody _controllerRigidbody;

	[Token(Token = "0x4000937")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private float _breakForce;

	[Token(Token = "0x4000938")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private bool _released;

	[Token(Token = "0x6000A5A")]
	[Address(RVA = "0xC7FF4C", Offset = "0xC7FF4C", VA = "0xC7FF4C")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000A5B")]
	[Address(RVA = "0xC80068", Offset = "0xC80068", VA = "0xC80068", Slot = "6")]
	protected override void DoGrab(InteractionData data)
	{
	}

	[Token(Token = "0x6000A5C")]
	[Address(RVA = "0xC80164", Offset = "0xC80164", VA = "0xC80164", Slot = "7")]
	protected override void DoRelease(InteractionData controller)
	{
	}

	[Token(Token = "0x6000A5D")]
	[Address(RVA = "0xC80104", Offset = "0xC80104", VA = "0xC80104")]
	private void CreateJoint()
	{
	}

	[Token(Token = "0x6000A5E")]
	[Address(RVA = "0xC8000C", Offset = "0xC8000C", VA = "0xC8000C")]
	private void DestroyJoint()
	{
	}

	[Token(Token = "0x6000A5F")]
	[Address(RVA = "0xC80170", Offset = "0xC80170", VA = "0xC80170")]
	public GrabActionSpringJoint()
	{
	}
}
[Token(Token = "0x20001E0")]
public class GrabActionStatic : GrabAction
{
	[Token(Token = "0x4000939")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private FixedJoint _joint;

	[Token(Token = "0x400093A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Transform _interactionPoint;

	[Token(Token = "0x400093B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private bool _releasedLastFrame;

	[Token(Token = "0x6000A60")]
	[Address(RVA = "0xC8018C", Offset = "0xC8018C", VA = "0xC8018C")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000A61")]
	[Address(RVA = "0xC80248", Offset = "0xC80248", VA = "0xC80248", Slot = "6")]
	protected override void DoGrab(InteractionData data)
	{
	}

	[Token(Token = "0x6000A62")]
	[Address(RVA = "0xC80358", Offset = "0xC80358", VA = "0xC80358", Slot = "7")]
	protected override void DoRelease(InteractionData data)
	{
	}

	[Token(Token = "0x6000A63")]
	[Address(RVA = "0xC802F8", Offset = "0xC802F8", VA = "0xC802F8")]
	private void CreateJoint()
	{
	}

	[Token(Token = "0x6000A64")]
	[Address(RVA = "0xC801B8", Offset = "0xC801B8", VA = "0xC801B8")]
	private void DestroyJointIfExists()
	{
	}

	[Token(Token = "0x6000A65")]
	[Address(RVA = "0xC80418", Offset = "0xC80418", VA = "0xC80418")]
	public GrabActionStatic()
	{
	}
}
[Token(Token = "0x20001E1")]
public class Hands : MonoBehaviour
{
	[Token(Token = "0x400093C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public HandFunctions left;

	[Token(Token = "0x400093D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public HandFunctions right;

	[Token(Token = "0x400093E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private CameraRig _rig;

	[Token(Token = "0x6000A66")]
	[Address(RVA = "0xC80420", Offset = "0xC80420", VA = "0xC80420")]
	public void Setup(CameraRig rig)
	{
	}

	[Token(Token = "0x6000A67")]
	[Address(RVA = "0xC80484", Offset = "0xC80484", VA = "0xC80484")]
	public HandFunctions GetHand(Cubism.Hand hand)
	{
		return null;
	}

	[Token(Token = "0x6000A68")]
	[Address(RVA = "0xC80448", Offset = "0xC80448", VA = "0xC80448")]
	private void SetupHand(HandFunctions functions)
	{
	}

	[Token(Token = "0x6000A69")]
	[Address(RVA = "0xC8049C", Offset = "0xC8049C", VA = "0xC8049C")]
	private void ParentHand(HandFunctions functions)
	{
	}

	[Token(Token = "0x6000A6A")]
	[Address(RVA = "0xC804EC", Offset = "0xC804EC", VA = "0xC804EC")]
	public Hands()
	{
	}
}
[Serializable]
[Token(Token = "0x20001E2")]
public class HandFunctions
{
	[Token(Token = "0x400093F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Transform handRoot;

	[Token(Token = "0x4000940")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Cubism.Hand hand;

	[Token(Token = "0x4000941")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Controller controller;

	[Token(Token = "0x4000942")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public PieceVacuum pieceVacuum;

	[Token(Token = "0x4000943")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public PieceRotation pieceRotation;

	[Token(Token = "0x6000A6B")]
	[Address(RVA = "0xC804F4", Offset = "0xC804F4", VA = "0xC804F4")]
	public HandFunctions()
	{
	}
}
[Token(Token = "0x20001E3")]
public class MockHandMover : MonoBehaviour
{
	[Token(Token = "0x4000944")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float _maxDistance;

	[Token(Token = "0x4000945")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float _forwardCorrection;

	[Token(Token = "0x4000946")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public LayerMask _rayMask;

	[Token(Token = "0x6000A6C")]
	[Address(RVA = "0xC804FC", Offset = "0xC804FC", VA = "0xC804FC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000A6D")]
	[Address(RVA = "0xC809E4", Offset = "0xC809E4", VA = "0xC809E4")]
	public MockHandMover()
	{
	}
}
[Token(Token = "0x20001E4")]
public class MockHandSetup : StateBehaviour
{
	[Token(Token = "0x4000947")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject _buttonPrefab;

	[Token(Token = "0x4000948")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float _maxDistance;

	[Token(Token = "0x4000949")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float _forwardCorrection;

	[Token(Token = "0x400094A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Transform _mockHandParent;

	[Token(Token = "0x6000A6E")]
	[Address(RVA = "0xC809F4", Offset = "0xC809F4", VA = "0xC809F4", Slot = "5")]
	protected override void ForceSetup()
	{
	}

	[Token(Token = "0x6000A6F")]
	[Address(RVA = "0xC80B70", Offset = "0xC80B70", VA = "0xC80B70")]
	private GameObject SpawnAndCenter(GameObject obj, Transform parent)
	{
		return null;
	}

	[Token(Token = "0x6000A70")]
	[Address(RVA = "0xC80D20", Offset = "0xC80D20", VA = "0xC80D20")]
	public MockHandSetup()
	{
	}
}
[Token(Token = "0x20001E5")]
public class Player : MonoBehaviour
{
	[Token(Token = "0x400094B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Hands hands;

	[Token(Token = "0x400094C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public CameraRig cameraRig;

	[Token(Token = "0x400094D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject avatarHeadPrefab;

	[Token(Token = "0x400094E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[Space(25f)]
	public SdkSetup _sdkSetup;

	[Token(Token = "0x6000A71")]
	[Address(RVA = "0xC80D34", Offset = "0xC80D34", VA = "0xC80D34")]
	public Vector3 GetEyeGazeDirection()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000A72")]
	[Address(RVA = "0xC80D58", Offset = "0xC80D58", VA = "0xC80D58")]
	public void Setup()
	{
	}

	[Token(Token = "0x6000A73")]
	[Address(RVA = "0xC80E64", Offset = "0xC80E64", VA = "0xC80E64")]
	public Player()
	{
	}
}
[Serializable]
[Token(Token = "0x20001E6")]
public class CameraRig
{
	[Token(Token = "0x400094F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Transform root;

	[Token(Token = "0x4000950")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform head;

	[Token(Token = "0x4000951")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Camera camera;

	[Token(Token = "0x4000952")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform leftHand;

	[Token(Token = "0x4000953")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform rightHand;

	[Token(Token = "0x6000A74")]
	[Address(RVA = "0xC80E6C", Offset = "0xC80E6C", VA = "0xC80E6C")]
	public CameraRig()
	{
	}
}
[Token(Token = "0x20001E7")]
public class SdkSetup : MonoBehaviour
{
	[Token(Token = "0x4000954")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public CameraRig oculusCameraRig;

	[Token(Token = "0x4000955")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public CameraRig steamVrCameraRig;

	[Token(Token = "0x4000956")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public CameraRig openXrCameraRig;

	[Token(Token = "0x4000957")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public CameraRig picoCameraRig;

	[Token(Token = "0x4000958")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public CameraRig mockVrCameraRig;

	[Token(Token = "0x4000959")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool _setup;

	[Token(Token = "0x400095A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private CameraRig _rig;

	[Token(Token = "0x6000A75")]
	[Address(RVA = "0xC80E74", Offset = "0xC80E74", VA = "0xC80E74")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000A76")]
	[Address(RVA = "0xC80E40", Offset = "0xC80E40", VA = "0xC80E40")]
	public CameraRig GetRig()
	{
		return null;
	}

	[Token(Token = "0x6000A77")]
	[Address(RVA = "0xC80E84", Offset = "0xC80E84", VA = "0xC80E84")]
	private void SetupBody()
	{
	}

	[Token(Token = "0x6000A78")]
	[Address(RVA = "0xC81250", Offset = "0xC81250", VA = "0xC81250")]
	private CameraRig SetupOculus()
	{
		return null;
	}

	[Token(Token = "0x6000A79")]
	[Address(RVA = "0xC81410", Offset = "0xC81410", VA = "0xC81410")]
	private CameraRig SetupSteamVr()
	{
		return null;
	}

	[Token(Token = "0x6000A7A")]
	[Address(RVA = "0xC81330", Offset = "0xC81330", VA = "0xC81330")]
	private CameraRig SetupPico()
	{
		return null;
	}

	[Token(Token = "0x6000A7B")]
	[Address(RVA = "0xC81170", Offset = "0xC81170", VA = "0xC81170")]
	private CameraRig SetupOpenXR()
	{
		return null;
	}

	[Token(Token = "0x6000A7C")]
	[Address(RVA = "0xC81058", Offset = "0xC81058", VA = "0xC81058")]
	private CameraRig SetupMockVrRig()
	{
		return null;
	}

	[Token(Token = "0x6000A7D")]
	[Address(RVA = "0xC814F0", Offset = "0xC814F0", VA = "0xC814F0")]
	public SdkSetup()
	{
	}
}
[Token(Token = "0x20001E8")]
public class Setup : MonoBehaviour
{
	[Token(Token = "0x20001E9")]
	[CompilerGenerated]
	private sealed class <WaitAndFadeIn>d__70 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40009A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40009A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40009A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Setup <>4__this;

		[Token(Token = "0x170000C7")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000A8A")]
			[Address(RVA = "0xC829C8", Offset = "0xC829C8", VA = "0xC829C8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000C8")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000A8C")]
			[Address(RVA = "0xC82A10", Offset = "0xC82A10", VA = "0xC82A10", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000A87")]
		[Address(RVA = "0xC82558", Offset = "0xC82558", VA = "0xC82558")]
		[DebuggerHidden]
		public <WaitAndFadeIn>d__70(int <>1__state)
		{
		}

		[Token(Token = "0x6000A88")]
		[Address(RVA = "0xC82904", Offset = "0xC82904", VA = "0xC82904", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000A89")]
		[Address(RVA = "0xC82908", Offset = "0xC82908", VA = "0xC82908", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000A8B")]
		[Address(RVA = "0xC829D0", Offset = "0xC829D0", VA = "0xC829D0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20001EA")]
	[CompilerGenerated]
	private sealed class <RuntimeSetup>d__71 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40009A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40009A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40009A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Setup <>4__this;

		[Token(Token = "0x170000C9")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000A90")]
			[Address(RVA = "0xC83030", Offset = "0xC83030", VA = "0xC83030", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000CA")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000A92")]
			[Address(RVA = "0xC83078", Offset = "0xC83078", VA = "0xC83078", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000A8D")]
		[Address(RVA = "0xC82580", Offset = "0xC82580", VA = "0xC82580")]
		[DebuggerHidden]
		public <RuntimeSetup>d__71(int <>1__state)
		{
		}

		[Token(Token = "0x6000A8E")]
		[Address(RVA = "0xC82A18", Offset = "0xC82A18", VA = "0xC82A18", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000A8F")]
		[Address(RVA = "0xC82A1C", Offset = "0xC82A1C", VA = "0xC82A1C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000A91")]
		[Address(RVA = "0xC83038", Offset = "0xC83038", VA = "0xC83038", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400095B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public DataSet dataSet;

	[Token(Token = "0x400095C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TextAsset testPuzzles;

	[Token(Token = "0x400095D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public TextAsset volumeTwoSet;

	[Token(Token = "0x400095E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ReadableTip startWarning;

	[Token(Token = "0x400095F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public int _buildNumber;

	[Token(Token = "0x4000960")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[Space(25f)]
	public PuzzleLoader _puzzleLoader;

	[Token(Token = "0x4000961")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Grid _grid;

	[Token(Token = "0x4000962")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public IntroService _introService;

	[Token(Token = "0x4000963")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[Header("Player")]
	public InputManager _inputManager;

	[Token(Token = "0x4000964")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public ControllerSetup _controllerSetup;

	[Token(Token = "0x4000965")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public CameraFader _cameraFader;

	[Token(Token = "0x4000966")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[Header("Services")]
	public GameFocusService _focusService;

	[Token(Token = "0x4000967")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Shortcuts _shortCuts;

	[Token(Token = "0x4000968")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Player _player;

	[Token(Token = "0x4000969")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public PuzzleMovement _puzzleMovement;

	[Token(Token = "0x400096A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public ChordEditor _chordEditor;

	[Token(Token = "0x400096B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public PiecePositionService _piecePositionService;

	[Token(Token = "0x400096C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public PuzzlePosition _puzzelPosition;

	[Token(Token = "0x400096D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public MenuService _menuService;

	[Token(Token = "0x400096E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public Calibration _calibration;

	[Token(Token = "0x400096F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public RecalibrationService _recalibrationService;

	[Token(Token = "0x4000970")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public PuzzleSongService _puzzleSongService;

	[Token(Token = "0x4000971")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public DailyPuzzleLoader _dailyPuzzleLoader;

	[Token(Token = "0x4000972")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public CreditSong _creditSong;

	[Token(Token = "0x4000973")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public OptionsService _optionsService;

	[Token(Token = "0x4000974")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public VolumeService _volumeService;

	[Token(Token = "0x4000975")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public MusicStateMachine _musicStateMachine;

	[Token(Token = "0x4000976")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public SpectatorCamService _spectatorCam;

	[Token(Token = "0x4000977")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public MixedRealityCamService _mixedRealityCamService;

	[Token(Token = "0x4000978")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public ColorThemeService _colorThemeService;

	[Token(Token = "0x4000979")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	public SaveFileService _saveFileService;

	[Token(Token = "0x400097A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	public HandTrackingDisclaimerService _handTrackingDisclaimerService;

	[Token(Token = "0x400097B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	public HandOverlapService _handOverlapService;

	[Token(Token = "0x400097C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	public EditorService _editorService;

	[Token(Token = "0x400097D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	public PassthroughService _passthroughService;

	[Token(Token = "0x400097E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	public UndoService _undoService;

	[Token(Token = "0x400097F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	public ApiService _apiService;

	[Token(Token = "0x4000980")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	public CommunityPuzzleService _communityPuzzleService;

	[Token(Token = "0x4000981")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	public SceneService _sceneService;

	[Token(Token = "0x4000982")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	public UiAngleService _uiAngleService;

	[Token(Token = "0x4000983")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	public SteamManager _steamManager;

	[Token(Token = "0x4000984")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	public ArcadeResetService _arcadeResetService;

	[Token(Token = "0x4000985")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	private StageSetParser _stageSetParser;

	[Token(Token = "0x4000986")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	private PlayerPrefSaver _playerPrefSaver;

	[Token(Token = "0x4000987")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	private PlayerVariableSaver _playerVariableSaver;

	[Token(Token = "0x4000988")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	private StaticPuzzleLoader _staticPuzzleLoader;

	[Token(Token = "0x4000989")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	[Header("Audio")]
	public Sampler piano;

	[Token(Token = "0x400098A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	public Sampler pianoMuffled;

	[Token(Token = "0x400098B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	public Sampler pianoOutOfGrid;

	[Token(Token = "0x400098C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	[Header("Views")]
	public ObjectPools _objectPools;

	[Token(Token = "0x400098D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	public Material _gridMat;

	[Token(Token = "0x400098E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	public PageGroup _menuGroup;

	[Token(Token = "0x400098F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	public StateBehaviourInitializer _stateBehaviourInitializer;

	[Token(Token = "0x4000990")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	public PieceCollection _pieceCollection;

	[Token(Token = "0x4000991")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
	public SaveFilePresenter _saveFilePresenter;

	[Token(Token = "0x4000992")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
	public LevelViewVrui _levelViewVrui;

	[Token(Token = "0x4000993")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
	public LevelViewVrui _levelViewVruiVol2;

	[Token(Token = "0x4000994")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
	[Header("Controllers")]
	public WarningMenu _warningMenu;

	[Token(Token = "0x4000995")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
	public KeyboardController _keyboardController;

	[Token(Token = "0x4000996")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
	public EditorController editorController;

	[Token(Token = "0x4000997")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
	public CommunityPuzzleController communityPuzzleController;

	[Token(Token = "0x4000998")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
	[Header("Model")]
	private StageSet _stageSet;

	[Token(Token = "0x4000999")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
	private State _state;

	[Token(Token = "0x400099A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
	[Header("Debug")]
	public StageSetDebugger _stageDebugger;

	[Token(Token = "0x400099B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
	public StateDebugger _stateDebugger;

	[Token(Token = "0x400099C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x220")]
	private float _loadTimeStamp;

	[Token(Token = "0x400099D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x224")]
	private bool _mainLoadedSuccesfully;

	[Token(Token = "0x400099E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x225")]
	private bool _customLoadedSuccesfully;

	[Token(Token = "0x400099F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x226")]
	private bool _progressLoaded;

	[Token(Token = "0x6000A7E")]
	[Address(RVA = "0xC814F8", Offset = "0xC814F8", VA = "0xC814F8")]
	public void Awake()
	{
	}

	[Token(Token = "0x6000A7F")]
	[Address(RVA = "0xC824F0", Offset = "0xC824F0", VA = "0xC824F0")]
	[IteratorStateMachine(typeof(<WaitAndFadeIn>d__70))]
	private IEnumerator WaitAndFadeIn()
	{
		return null;
	}

	[Token(Token = "0x6000A80")]
	[Address(RVA = "0xC82488", Offset = "0xC82488", VA = "0xC82488")]
	[IteratorStateMachine(typeof(<RuntimeSetup>d__71))]
	private IEnumerator RuntimeSetup()
	{
		return null;
	}

	[Token(Token = "0x6000A81")]
	[Address(RVA = "0xC825A8", Offset = "0xC825A8", VA = "0xC825A8")]
	private void LoadProgress()
	{
	}

	[Token(Token = "0x6000A82")]
	[Address(RVA = "0xC826B0", Offset = "0xC826B0", VA = "0xC826B0")]
	private bool ReadyForSetup()
	{
		return default(bool);
	}

	[Token(Token = "0x6000A83")]
	[Address(RVA = "0xC82870", Offset = "0xC82870", VA = "0xC82870")]
	private bool ControllersActive()
	{
		return default(bool);
	}

	[Token(Token = "0x6000A84")]
	[Address(RVA = "0xC820B8", Offset = "0xC820B8", VA = "0xC820B8")]
	private void StartLog()
	{
	}

	[Token(Token = "0x6000A85")]
	[Address(RVA = "0xC828F4", Offset = "0xC828F4", VA = "0xC828F4")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000A86")]
	[Address(RVA = "0xC828FC", Offset = "0xC828FC", VA = "0xC828FC")]
	public Setup()
	{
	}
}
[Token(Token = "0x20001EB")]
public class TagSetup : MonoBehaviour
{
	[Token(Token = "0x40009A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Text[] verionText;

	[Token(Token = "0x40009A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject[] comingSoonText;

	[Token(Token = "0x40009A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject[] background;

	[Token(Token = "0x6000A93")]
	[Address(RVA = "0xC83080", Offset = "0xC83080", VA = "0xC83080")]
	public void Setup(DataSet data)
	{
	}

	[Token(Token = "0x6000A94")]
	[Address(RVA = "0xC830C8", Offset = "0xC830C8", VA = "0xC830C8")]
	private void SetupTest()
	{
	}

	[Token(Token = "0x6000A95")]
	[Address(RVA = "0xC83138", Offset = "0xC83138", VA = "0xC83138")]
	private void SetupDemo()
	{
	}

	[Token(Token = "0x6000A96")]
	[Address(RVA = "0xC831A8", Offset = "0xC831A8", VA = "0xC831A8")]
	private void SetupEarlyAccess()
	{
	}

	[Token(Token = "0x6000A97")]
	[Address(RVA = "0xC83218", Offset = "0xC83218", VA = "0xC83218")]
	private void SetupFull()
	{
	}

	[Token(Token = "0x6000A98")]
	[Address(RVA = "0xC832DC", Offset = "0xC832DC", VA = "0xC832DC")]
	private void ToggleComingSoon(bool visible)
	{
	}

	[Token(Token = "0x6000A99")]
	[Address(RVA = "0xC83344", Offset = "0xC83344", VA = "0xC83344")]
	private void SetVersionText(string text)
	{
	}

	[Token(Token = "0x6000A9A")]
	[Address(RVA = "0xC833B4", Offset = "0xC833B4", VA = "0xC833B4")]
	public TagSetup()
	{
	}
}
[Token(Token = "0x20001EC")]
public class Tooltips : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x20001ED")]
	public class Tooltip
	{
		[Token(Token = "0x40009AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string name;

		[Token(Token = "0x40009AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject tipObject;

		[Token(Token = "0x6000A9E")]
		[Address(RVA = "0xC834BC", Offset = "0xC834BC", VA = "0xC834BC")]
		public Tooltip()
		{
		}
	}

	[Token(Token = "0x40009A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Tooltip[] _tooltips;

	[Token(Token = "0x6000A9B")]
	[Address(RVA = "0xC833BC", Offset = "0xC833BC", VA = "0xC833BC")]
	public void HideAllTips()
	{
	}

	[Token(Token = "0x6000A9C")]
	[Address(RVA = "0xC83428", Offset = "0xC83428", VA = "0xC83428")]
	public void ShowTip(string name)
	{
	}

	[Token(Token = "0x6000A9D")]
	[Address(RVA = "0xC834B4", Offset = "0xC834B4", VA = "0xC834B4")]
	public Tooltips()
	{
	}
}
[Token(Token = "0x20001EE")]
public class TwoStepTouch : MonoBehaviour
{
	[Token(Token = "0x40009AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public UnityEvent OnHoverOn;

	[Token(Token = "0x40009AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public UnityEvent OnHoverOff;

	[Token(Token = "0x40009AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public UnityEvent OnClickStart;

	[Token(Token = "0x40009AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public UnityEvent OnClickEnd;

	[Token(Token = "0x40009B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public TriggerEvents _hover;

	[Token(Token = "0x40009B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public TriggerEvents _click;

	[Token(Token = "0x6000A9F")]
	[Address(RVA = "0xC834C4", Offset = "0xC834C4", VA = "0xC834C4")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000AA0")]
	[Address(RVA = "0xC8358C", Offset = "0xC8358C", VA = "0xC8358C")]
	public TwoStepTouch()
	{
	}
}
[Token(Token = "0x20001EF")]
public class ButtonReaction : MonoBehaviour
{
	[Token(Token = "0x40009B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ColorSwap _colorSwap;

	[Token(Token = "0x40009B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Cubism.Hand _hand;

	[Token(Token = "0x40009B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private bool _buttonFirstDown;

	[Token(Token = "0x6000AA1")]
	[Address(RVA = "0xC83594", Offset = "0xC83594", VA = "0xC83594")]
	public void Setup(ColorSwap colorSwap, Cubism.Hand hand)
	{
	}

	[Token(Token = "0x6000AA2")]
	[Address(RVA = "0xC835A0", Offset = "0xC835A0", VA = "0xC835A0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000AA3")]
	[Address(RVA = "0xC83604", Offset = "0xC83604", VA = "0xC83604", Slot = "4")]
	protected virtual bool CheckButtonPressed(Cubism.Hand hand)
	{
		return default(bool);
	}

	[Token(Token = "0x6000AA4")]
	[Address(RVA = "0xC8360C", Offset = "0xC8360C", VA = "0xC8360C")]
	public ButtonReaction()
	{
	}
}
[Token(Token = "0x20001F0")]
public class GatherButtonReaction : ButtonReaction
{
	[Token(Token = "0x6000AA5")]
	[Address(RVA = "0xC83614", Offset = "0xC83614", VA = "0xC83614", Slot = "4")]
	protected override bool CheckButtonPressed(Cubism.Hand hand)
	{
		return default(bool);
	}

	[Token(Token = "0x6000AA6")]
	[Address(RVA = "0xC83670", Offset = "0xC83670", VA = "0xC83670")]
	public GatherButtonReaction()
	{
	}
}
[Token(Token = "0x20001F1")]
public class GrabButtonReaction : ButtonReaction
{
	[Token(Token = "0x6000AA7")]
	[Address(RVA = "0xC83678", Offset = "0xC83678", VA = "0xC83678", Slot = "4")]
	protected override bool CheckButtonPressed(Cubism.Hand hand)
	{
		return default(bool);
	}

	[Token(Token = "0x6000AA8")]
	[Address(RVA = "0xC836D4", Offset = "0xC836D4", VA = "0xC836D4")]
	public GrabButtonReaction()
	{
	}
}
[Token(Token = "0x20001F2")]
public class MenuButtonReaction : ButtonReaction
{
	[Token(Token = "0x6000AA9")]
	[Address(RVA = "0xC836DC", Offset = "0xC836DC", VA = "0xC836DC", Slot = "4")]
	protected override bool CheckButtonPressed(Cubism.Hand hand)
	{
		return default(bool);
	}

	[Token(Token = "0x6000AAA")]
	[Address(RVA = "0xC83738", Offset = "0xC83738", VA = "0xC83738")]
	public MenuButtonReaction()
	{
	}
}
[Token(Token = "0x20001F3")]
public class TransformButtonReaction : ButtonReaction
{
	[Token(Token = "0x6000AAB")]
	[Address(RVA = "0xC83740", Offset = "0xC83740", VA = "0xC83740", Slot = "4")]
	protected override bool CheckButtonPressed(Cubism.Hand hand)
	{
		return default(bool);
	}

	[Token(Token = "0x6000AAC")]
	[Address(RVA = "0xC8379C", Offset = "0xC8379C", VA = "0xC8379C")]
	public TransformButtonReaction()
	{
	}
}
[Token(Token = "0x20001F4")]
public class AudioPing : MonoBehaviour
{
	[Token(Token = "0x40009B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Level _level;

	[Token(Token = "0x6000AAD")]
	[Address(RVA = "0xC837A4", Offset = "0xC837A4", VA = "0xC837A4")]
	public void StartPingRepeated(float interval, Level level)
	{
	}

	[Token(Token = "0x6000AAE")]
	[Address(RVA = "0xC83820", Offset = "0xC83820", VA = "0xC83820")]
	public void StopPingRepeating()
	{
	}

	[Token(Token = "0x6000AAF")]
	[Address(RVA = "0xC83828", Offset = "0xC83828", VA = "0xC83828")]
	public void Ping()
	{
	}

	[Token(Token = "0x6000AB0")]
	[Address(RVA = "0xC838FC", Offset = "0xC838FC", VA = "0xC838FC")]
	public AudioPing()
	{
	}
}
[Token(Token = "0x20001F5")]
[ExecuteInEditMode]
public class AutoBorder : MonoBehaviour
{
	[Token(Token = "0x40009B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector4 padding;

	[Token(Token = "0x40009B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject[] borderlines;

	[Token(Token = "0x40009B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool _centerPositioned;

	[Token(Token = "0x40009B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float s;

	[Token(Token = "0x6000AB1")]
	[Address(RVA = "0xC83904", Offset = "0xC83904", VA = "0xC83904")]
	private void Update()
	{
	}

	[Token(Token = "0x6000AB2")]
	[Address(RVA = "0xC8395C", Offset = "0xC8395C", VA = "0xC8395C")]
	public void ToggleBorder(bool value)
	{
	}

	[Token(Token = "0x6000AB3")]
	[Address(RVA = "0xC83908", Offset = "0xC83908", VA = "0xC83908")]
	private void UpdateBorderPosition()
	{
	}

	[Token(Token = "0x6000AB4")]
	[Address(RVA = "0xC83D2C", Offset = "0xC83D2C", VA = "0xC83D2C")]
	private void UpdateBorderPosition(GameObject top, GameObject bottom, GameObject left, GameObject right)
	{
	}

	[Token(Token = "0x6000AB5")]
	[Address(RVA = "0xC839C4", Offset = "0xC839C4", VA = "0xC839C4")]
	private void UpdateBorderPositionCenters(GameObject top, GameObject bottom, GameObject left, GameObject right)
	{
	}

	[Token(Token = "0x6000AB6")]
	[Address(RVA = "0xC840EC", Offset = "0xC840EC", VA = "0xC840EC")]
	public AutoBorder()
	{
	}
}
[Token(Token = "0x20001F6")]
[ExecuteInEditMode]
public class AutoCube : MonoBehaviour, IAutoCube
{
	[Token(Token = "0x40009BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 size;

	[Token(Token = "0x40009BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform cube;

	[Token(Token = "0x40009BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject[] borderlines;

	[Token(Token = "0x40009BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float _edgeSize;

	[Token(Token = "0x6000AB7")]
	[Address(RVA = "0xC8414C", Offset = "0xC8414C", VA = "0xC8414C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000AB8")]
	[Address(RVA = "0xC84250", Offset = "0xC84250", VA = "0xC84250", Slot = "4")]
	public List<Renderer> GetBorders()
	{
		return null;
	}

	[Token(Token = "0x6000AB9")]
	[Address(RVA = "0xC84368", Offset = "0xC84368", VA = "0xC84368", Slot = "5")]
	public void SetSize(Vector3 size)
	{
	}

	[Token(Token = "0x6000ABA")]
	[Address(RVA = "0xC84374", Offset = "0xC84374", VA = "0xC84374", Slot = "6")]
	public Vector3 GetSize()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000ABB")]
	[Address(RVA = "0xC84380", Offset = "0xC84380", VA = "0xC84380")]
	public void ToggleBorder(bool value)
	{
	}

	[Token(Token = "0x6000ABC")]
	[Address(RVA = "0xC84150", Offset = "0xC84150", VA = "0xC84150")]
	private void UpdateBorderPosition()
	{
	}

	[Token(Token = "0x6000ABD")]
	[Address(RVA = "0xC8487C", Offset = "0xC8487C", VA = "0xC8487C", Slot = "7")]
	protected virtual Vector3 GetDimensions()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000ABE")]
	[Address(RVA = "0xC84888", Offset = "0xC84888", VA = "0xC84888", Slot = "8")]
	protected virtual void UpdateCube(Vector3 size)
	{
	}

	[Token(Token = "0x6000ABF")]
	[Address(RVA = "0xC843E8", Offset = "0xC843E8", VA = "0xC843E8")]
	private void UpdateBorderHalo(Vector3 size, GameObject top, GameObject bottom, GameObject left, GameObject right, bool topHalo)
	{
	}

	[Token(Token = "0x6000AC0")]
	[Address(RVA = "0xC84634", Offset = "0xC84634", VA = "0xC84634")]
	private void UpdateEdges(Vector3 size, GameObject top, GameObject bottom, GameObject left, GameObject right)
	{
	}

	[Token(Token = "0x6000AC1")]
	[Address(RVA = "0xC8493C", Offset = "0xC8493C", VA = "0xC8493C")]
	public AutoCube()
	{
	}
}
[Token(Token = "0x20001F8")]
public class AutoCubeArrowUi : AutoCubeUi
{
	[Token(Token = "0x40009C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public float leftInset;

	[Token(Token = "0x40009C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	public float rightInset;

	[Token(Token = "0x6000AC5")]
	[Address(RVA = "0xC84A6C", Offset = "0xC84A6C", VA = "0xC84A6C", Slot = "7")]
	protected override void UpdateBorderPosition()
	{
	}

	[Token(Token = "0x6000AC6")]
	[Address(RVA = "0xC84AE4", Offset = "0xC84AE4", VA = "0xC84AE4")]
	public AutoCubeArrowUi()
	{
	}
}
[Token(Token = "0x20001F9")]
[ExecuteInEditMode]
public class AutoCubeUi : MonoBehaviour, IAutoCube
{
	[Token(Token = "0x40009C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform cube;

	[Token(Token = "0x40009C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool updateCollider;

	[Token(Token = "0x40009C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public BoxCollider collider;

	[Token(Token = "0x40009C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public BoxCollider fingerCollider;

	[Token(Token = "0x40009C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject[] borderlines;

	[Token(Token = "0x40009C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Transform _icon;

	[Token(Token = "0x40009C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public bool autoheight;

	[Token(Token = "0x40009C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float height;

	[Token(Token = "0x40009CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float colliderPadding;

	[Token(Token = "0x40009CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public float _s;

	[Token(Token = "0x40009CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public bool _updateAtRuntime;

	[Token(Token = "0x40009CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	protected RectTransform _rectTransform;

	[Token(Token = "0x40009CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	protected float _h;

	[Token(Token = "0x40009CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private Rect _currentRect;

	[Token(Token = "0x40009D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private Rect _rect;

	[Token(Token = "0x40009D1")]
	private const float topMargin = 10f;

	[Token(Token = "0x40009D2")]
	private const float bottomMargin = 5f;

	[Token(Token = "0x40009D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private int _framesUpdated;

	[Token(Token = "0x40009D4")]
	private const int FramesToUpdate = 5;

	[Token(Token = "0x6000AC7")]
	[Address(RVA = "0xC84B54", Offset = "0xC84B54", VA = "0xC84B54")]
	private void Start()
	{
	}

	[Token(Token = "0x6000AC8")]
	[Address(RVA = "0xC84BC8", Offset = "0xC84BC8", VA = "0xC84BC8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000AC9")]
	[Address(RVA = "0xC84C1C", Offset = "0xC84C1C", VA = "0xC84C1C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000ACA")]
	[Address(RVA = "0xC84C24", Offset = "0xC84C24", VA = "0xC84C24", Slot = "4")]
	public List<Renderer> GetBorders()
	{
		return null;
	}

	[Token(Token = "0x6000ACB")]
	[Address(RVA = "0xC84D3C", Offset = "0xC84D3C", VA = "0xC84D3C", Slot = "5")]
	public void SetSize(Vector3 size)
	{
	}

	[Token(Token = "0x6000ACC")]
	[Address(RVA = "0xC84DDC", Offset = "0xC84DDC", VA = "0xC84DDC", Slot = "6")]
	public Vector3 GetSize()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000ACD")]
	[Address(RVA = "0xC84EA8", Offset = "0xC84EA8", VA = "0xC84EA8")]
	public void ToggleBorder(bool value)
	{
	}

	[Token(Token = "0x6000ACE")]
	[Address(RVA = "0xC84E34", Offset = "0xC84E34", VA = "0xC84E34")]
	public float GetHeight()
	{
		return default(float);
	}

	[Token(Token = "0x6000ACF")]
	[Address(RVA = "0xC84F10", Offset = "0xC84F10", VA = "0xC84F10", Slot = "7")]
	protected virtual void UpdateBorderPosition()
	{
	}

	[Token(Token = "0x6000AD0")]
	[Address(RVA = "0xC8508C", Offset = "0xC8508C", VA = "0xC8508C")]
	protected void UpdateCube(Rect rect, float height)
	{
	}

	[Token(Token = "0x6000AD1")]
	[Address(RVA = "0xC85120", Offset = "0xC85120", VA = "0xC85120")]
	private void UpdateCollider(Rect rect, float height)
	{
	}

	[Token(Token = "0x6000AD2")]
	[Address(RVA = "0xC8523C", Offset = "0xC8523C", VA = "0xC8523C")]
	private void UpdateBorderHalo(Rect rect, GameObject top, GameObject bottom, GameObject left, GameObject right, float height)
	{
	}

	[Token(Token = "0x6000AD3")]
	[Address(RVA = "0xC85540", Offset = "0xC85540", VA = "0xC85540")]
	private void UpdateEdges(Rect rect, GameObject top, GameObject bottom, GameObject left, GameObject right, float height)
	{
	}

	[Token(Token = "0x6000AD4")]
	[Address(RVA = "0xC84AE8", Offset = "0xC84AE8", VA = "0xC84AE8")]
	public AutoCubeUi()
	{
	}
}
[Token(Token = "0x20001FB")]
[ExecuteInEditMode]
public class AutoPlane : MonoBehaviour
{
	[Token(Token = "0x40009D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector2 size;

	[Token(Token = "0x40009D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform plane;

	[Token(Token = "0x40009D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public RectTransform canvas;

	[Token(Token = "0x40009DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject[] borderlines;

	[Token(Token = "0x40009DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float _edgeSize;

	[Token(Token = "0x40009DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[Space(15f)]
	public bool positionCorners;

	[Token(Token = "0x40009DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float minOffsetForCornerVisibility;

	[Token(Token = "0x40009DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float cornerOffset;

	[Token(Token = "0x40009DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Transform[] corners;

	[Token(Token = "0x40009E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[Header("Debug")]
	public bool _overrideSize;

	[Token(Token = "0x40009E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public Vector2 _sizeOverride;

	[Token(Token = "0x6000AD8")]
	[Address(RVA = "0xC858C4", Offset = "0xC858C4", VA = "0xC858C4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000AD9")]
	[Address(RVA = "0xC85A44", Offset = "0xC85A44", VA = "0xC85A44")]
	public void ToggleBorder(bool value)
	{
	}

	[Token(Token = "0x6000ADA")]
	[Address(RVA = "0xC858C8", Offset = "0xC858C8", VA = "0xC858C8")]
	private void UpdateBorderPosition()
	{
	}

	[Token(Token = "0x6000ADB")]
	[Address(RVA = "0xC85E3C", Offset = "0xC85E3C", VA = "0xC85E3C", Slot = "4")]
	protected virtual Vector3 GetDimensions()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000ADC")]
	[Address(RVA = "0xC85E6C", Offset = "0xC85E6C", VA = "0xC85E6C", Slot = "5")]
	protected virtual void UpdateCube(Vector3 scale)
	{
	}

	[Token(Token = "0x6000ADD")]
	[Address(RVA = "0xC85AAC", Offset = "0xC85AAC", VA = "0xC85AAC")]
	private Vector2 GetSize()
	{
		return default(Vector2);
	}

	[Token(Token = "0x6000ADE")]
	[Address(RVA = "0xC85AD8", Offset = "0xC85AD8", VA = "0xC85AD8")]
	private void UpdateBorderHalo(Vector3 size, GameObject top, GameObject bottom, GameObject left, GameObject right)
	{
	}

	[Token(Token = "0x6000ADF")]
	[Address(RVA = "0xC85D00", Offset = "0xC85D00", VA = "0xC85D00")]
	private void UpdateCorners(Vector3 size, Transform c1, Transform c2, Transform c3, Transform c4)
	{
	}

	[Token(Token = "0x6000AE0")]
	[Address(RVA = "0xC85F90", Offset = "0xC85F90", VA = "0xC85F90")]
	public AutoPlane()
	{
	}
}
[Token(Token = "0x20001FC")]
public class BadTrackingText : StateBehaviour
{
	[Token(Token = "0x40009E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Text _text;

	[Token(Token = "0x6000AE1")]
	[Address(RVA = "0xC86038", Offset = "0xC86038", VA = "0xC86038")]
	private void Update()
	{
	}

	[Token(Token = "0x6000AE2")]
	[Address(RVA = "0xC8608C", Offset = "0xC8608C", VA = "0xC8608C")]
	private string GetBadTrackMsg()
	{
		return null;
	}

	[Token(Token = "0x6000AE3")]
	[Address(RVA = "0xC86144", Offset = "0xC86144", VA = "0xC86144")]
	private string GetOverlapMesg()
	{
		return null;
	}

	[Token(Token = "0x6000AE4")]
	[Address(RVA = "0xC861FC", Offset = "0xC861FC", VA = "0xC861FC")]
	public BadTrackingText()
	{
	}
}
[Token(Token = "0x20001FD")]
public class BillboardPivotManager : MonoBehaviour
{
	[Token(Token = "0x20001FE")]
	private enum anchor
	{
		[Token(Token = "0x40009E9")]
		top,
		[Token(Token = "0x40009EA")]
		right,
		[Token(Token = "0x40009EB")]
		bottom,
		[Token(Token = "0x40009EC")]
		left
	}

	[Token(Token = "0x40009E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public RectTransform _bounds;

	[Token(Token = "0x40009E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[Space(10f)]
	public Transform _root;

	[Token(Token = "0x40009E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform _pivot;

	[Token(Token = "0x40009E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public RectTransform _canvas;

	[Token(Token = "0x40009E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool ignoreTopBottomPosition;

	[Token(Token = "0x6000AE5")]
	[Address(RVA = "0xC86204", Offset = "0xC86204", VA = "0xC86204")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000AE6")]
	[Address(RVA = "0xC8625C", Offset = "0xC8625C", VA = "0xC8625C")]
	private void UpdateAnchor()
	{
	}

	[Token(Token = "0x6000AE7")]
	[Address(RVA = "0xC86278", Offset = "0xC86278", VA = "0xC86278")]
	private anchor getAnchor()
	{
		return default(anchor);
	}

	[Token(Token = "0x6000AE8")]
	[Address(RVA = "0xC8652C", Offset = "0xC8652C", VA = "0xC8652C")]
	private void positionAnchor(anchor anchor)
	{
	}

	[Token(Token = "0x6000AE9")]
	[Address(RVA = "0xC86688", Offset = "0xC86688", VA = "0xC86688")]
	public BillboardPivotManager()
	{
	}
}
[Token(Token = "0x20001FF")]
[RequireComponent(typeof(RectTransform))]
public class Border : MonoBehaviour
{
	[Token(Token = "0x40009ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject prefab;

	[Token(Token = "0x40009EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Vector4 padding;

	[Token(Token = "0x40009EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool setupOnStart;

	[Token(Token = "0x40009F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private RectTransform rectTransform;

	[Token(Token = "0x40009F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[Header("debug")]
	public GameObject[] borderlines;

	[Token(Token = "0x40009F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float s;

	[Token(Token = "0x6000AEA")]
	[Address(RVA = "0xC86690", Offset = "0xC86690", VA = "0xC86690")]
	public void Start()
	{
	}

	[Token(Token = "0x6000AEB")]
	[Address(RVA = "0xC866A0", Offset = "0xC866A0", VA = "0xC866A0")]
	public void Setup()
	{
	}

	[Token(Token = "0x6000AEC")]
	[Address(RVA = "0xC868AC", Offset = "0xC868AC", VA = "0xC868AC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000AED")]
	[Address(RVA = "0xC86918", Offset = "0xC86918", VA = "0xC86918")]
	public void ToggleBorder(bool value)
	{
	}

	[Token(Token = "0x6000AEE")]
	[Address(RVA = "0xC866A4", Offset = "0xC866A4", VA = "0xC866A4")]
	private void DrawBorder()
	{
	}

	[Token(Token = "0x6000AEF")]
	[Address(RVA = "0xC868D4", Offset = "0xC868D4", VA = "0xC868D4")]
	private void UpdateBorderPosition()
	{
	}

	[Token(Token = "0x6000AF0")]
	[Address(RVA = "0xC86980", Offset = "0xC86980", VA = "0xC86980")]
	private void UpdateBorderPosition(GameObject top, GameObject bottom, GameObject left, GameObject right)
	{
	}

	[Token(Token = "0x6000AF1")]
	[Address(RVA = "0xC86D44", Offset = "0xC86D44", VA = "0xC86D44")]
	public Border()
	{
	}
}
[Token(Token = "0x2000200")]
public class ButtonActivator : MonoBehaviour
{
	[Token(Token = "0x40009F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public VrButton vrButton;

	[Token(Token = "0x40009F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[Space(25f)]
	public GameObject targetGo;

	[Token(Token = "0x40009F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool goOn;

	[Token(Token = "0x6000AF2")]
	[Address(RVA = "0xC86D9C", Offset = "0xC86D9C", VA = "0xC86D9C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000AF3")]
	[Address(RVA = "0xC86E28", Offset = "0xC86E28", VA = "0xC86E28")]
	private void ToggleTargets()
	{
	}

	[Token(Token = "0x6000AF4")]
	[Address(RVA = "0xC86EB0", Offset = "0xC86EB0", VA = "0xC86EB0")]
	public ButtonActivator()
	{
	}
}
[Token(Token = "0x2000201")]
public class ButtonConfirm : MonoBehaviour
{
	[Token(Token = "0x2000203")]
	[CompilerGenerated]
	private sealed class <SetConfirmHeight>d__7 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40009FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40009FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40009FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ButtonConfirm <>4__this;

		[Token(Token = "0x40009FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float height;

		[Token(Token = "0x40009FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Action callBack;

		[Token(Token = "0x170000CB")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000B03")]
			[Address(RVA = "0xC87508", Offset = "0xC87508", VA = "0xC87508", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000CC")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000B05")]
			[Address(RVA = "0xC87550", Offset = "0xC87550", VA = "0xC87550", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000B00")]
		[Address(RVA = "0xC87280", Offset = "0xC87280", VA = "0xC87280")]
		[DebuggerHidden]
		public <SetConfirmHeight>d__7(int <>1__state)
		{
		}

		[Token(Token = "0x6000B01")]
		[Address(RVA = "0xC873B4", Offset = "0xC873B4", VA = "0xC873B4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000B02")]
		[Address(RVA = "0xC873B8", Offset = "0xC873B8", VA = "0xC873B8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000B04")]
		[Address(RVA = "0xC87510", Offset = "0xC87510", VA = "0xC87510", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40009F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public VrButton target;

	[Token(Token = "0x40009F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public LayoutElement confirmOptions;

	[Token(Token = "0x40009F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float confirmHeight;

	[Token(Token = "0x6000AF5")]
	[Address(RVA = "0xC86EB8", Offset = "0xC86EB8", VA = "0xC86EB8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000AF6")]
	[Address(RVA = "0xC86F44", Offset = "0xC86F44", VA = "0xC86F44")]
	private void ShowConfirm()
	{
	}

	[Token(Token = "0x6000AF7")]
	[Address(RVA = "0xC87110", Offset = "0xC87110", VA = "0xC87110")]
	private void HideConfirm()
	{
	}

	[Token(Token = "0x6000AF8")]
	[Address(RVA = "0xC871C4", Offset = "0xC871C4", VA = "0xC871C4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000AF9")]
	[Address(RVA = "0xC87088", Offset = "0xC87088", VA = "0xC87088")]
	[IteratorStateMachine(typeof(<SetConfirmHeight>d__7))]
	private IEnumerator SetConfirmHeight(float height, Action callBack)
	{
		return null;
	}

	[Token(Token = "0x6000AFA")]
	[Address(RVA = "0xC872A8", Offset = "0xC872A8", VA = "0xC872A8")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000AFB")]
	[Address(RVA = "0xC87310", Offset = "0xC87310", VA = "0xC87310")]
	public ButtonConfirm()
	{
	}
}
[Token(Token = "0x2000204")]
public class ButtonIndicator : MonoBehaviour
{
	[Token(Token = "0x4000A00")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ButtonSet _buttonSet;

	[Token(Token = "0x6000B06")]
	[Address(RVA = "0xC87558", Offset = "0xC87558", VA = "0xC87558")]
	public void Setup(ButtonSet buttonSet)
	{
	}

	[Token(Token = "0x6000B07")]
	[Address(RVA = "0xC87560", Offset = "0xC87560", VA = "0xC87560")]
	public void FlashButton(ControllerButton button)
	{
	}

	[Token(Token = "0x6000B08")]
	[Address(RVA = "0xC87644", Offset = "0xC87644", VA = "0xC87644")]
	public ButtonIndicator()
	{
	}
}
[Token(Token = "0x2000205")]
public class ButtonSet : MonoBehaviour
{
	[Token(Token = "0x4000A01")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject trigger;

	[Token(Token = "0x4000A02")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject grip;

	[Token(Token = "0x4000A03")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject gather;

	[Token(Token = "0x4000A04")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject menu;

	[Token(Token = "0x4000A05")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject colliderPrefab;

	[Token(Token = "0x4000A06")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Dictionary<ControllerButton, GameObject> buttons;

	[Token(Token = "0x4000A07")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Cubism.Hand _hand;

	[Token(Token = "0x4000A08")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private State _state;

	[Token(Token = "0x6000B09")]
	[Address(RVA = "0xC80C10", Offset = "0xC80C10", VA = "0xC80C10")]
	public void Setup(Cubism.Hand hand, State state)
	{
	}

	[Token(Token = "0x6000B0A")]
	[Address(RVA = "0xC87A48", Offset = "0xC87A48", VA = "0xC87A48")]
	public void FlashButton(ControllerButton button)
	{
	}

	[Token(Token = "0x6000B0B")]
	[Address(RVA = "0xC875CC", Offset = "0xC875CC", VA = "0xC875CC")]
	public GameObject GetButton(ControllerButton button)
	{
		return null;
	}

	[Token(Token = "0x6000B0C")]
	[Address(RVA = "0xC8764C", Offset = "0xC8764C", VA = "0xC8764C")]
	private void SetupButton(GameObject button, ControllerButton type)
	{
	}

	[Token(Token = "0x6000B0D")]
	[Address(RVA = "0xC87AB0", Offset = "0xC87AB0", VA = "0xC87AB0")]
	private ButtonReaction AddButtonReaction(GameObject button, ControllerButton type)
	{
		return null;
	}

	[Token(Token = "0x6000B0E")]
	[Address(RVA = "0xC877D8", Offset = "0xC877D8", VA = "0xC877D8")]
	private void SubscribeToVisibilityChanges()
	{
	}

	[Token(Token = "0x6000B0F")]
	[Address(RVA = "0xC8798C", Offset = "0xC8798C", VA = "0xC8798C")]
	private void SetCurrentButtonVisibility()
	{
	}

	[Token(Token = "0x6000B10")]
	[Address(RVA = "0xC8772C", Offset = "0xC8772C", VA = "0xC8772C")]
	private void SpawnCollider()
	{
	}

	[Token(Token = "0x6000B11")]
	[Address(RVA = "0xC87B70", Offset = "0xC87B70", VA = "0xC87B70")]
	public ButtonSet()
	{
	}
}
[Token(Token = "0x2000206")]
public enum ControllerButton
{
	[Token(Token = "0x4000A0A")]
	trigger,
	[Token(Token = "0x4000A0B")]
	gather,
	[Token(Token = "0x4000A0C")]
	menu,
	[Token(Token = "0x4000A0D")]
	grip
}
[Token(Token = "0x2000207")]
public class ButtonVisibility : MonoBehaviour
{
	[Token(Token = "0x6000B12")]
	[Address(RVA = "0xC87BEC", Offset = "0xC87BEC", VA = "0xC87BEC")]
	public void Setup(ButtonSet buttonSet, State _state)
	{
	}

	[Token(Token = "0x6000B13")]
	[Address(RVA = "0xC87DBC", Offset = "0xC87DBC", VA = "0xC87DBC")]
	public ButtonVisibility()
	{
	}
}
[Token(Token = "0x2000208")]
[ExecuteInEditMode]
public class CenteredAutoCube : MonoBehaviour
{
	[Token(Token = "0x4000A0E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform cube;

	[Token(Token = "0x4000A0F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject[] borderlines;

	[Token(Token = "0x4000A10")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Vector3 size;

	[Token(Token = "0x4000A11")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float thickness;

	[Token(Token = "0x4000A12")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float t;

	[Token(Token = "0x6000B14")]
	[Address(RVA = "0xC87DC4", Offset = "0xC87DC4", VA = "0xC87DC4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000B15")]
	[Address(RVA = "0xC87EFC", Offset = "0xC87EFC", VA = "0xC87EFC")]
	public void ToggleBorder(bool value)
	{
	}

	[Token(Token = "0x6000B16")]
	[Address(RVA = "0xC87DC8", Offset = "0xC87DC8", VA = "0xC87DC8")]
	private void UpdateBorderPosition()
	{
	}

	[Token(Token = "0x6000B17")]
	[Address(RVA = "0xC87F64", Offset = "0xC87F64", VA = "0xC87F64")]
	private void UpdateCube(Vector3 size)
	{
	}

	[Token(Token = "0x6000B18")]
	[Address(RVA = "0xC87F80", Offset = "0xC87F80", VA = "0xC87F80")]
	private void UpdateBorderHalo(Vector3 size, GameObject top, GameObject bottom, GameObject left, GameObject right, float height)
	{
	}

	[Token(Token = "0x6000B19")]
	[Address(RVA = "0xC881B8", Offset = "0xC881B8", VA = "0xC881B8")]
	private void UpdateEdges(Vector3 size, GameObject top, GameObject bottom, GameObject left, GameObject right, float height)
	{
	}

	[Token(Token = "0x6000B1A")]
	[Address(RVA = "0xC88400", Offset = "0xC88400", VA = "0xC88400")]
	public CenteredAutoCube()
	{
	}
}
[Token(Token = "0x2000209")]
public class ColorPickerMenu : StateBehaviour
{
	[Token(Token = "0x4000A13")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform defaultParent;

	[Token(Token = "0x4000A14")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public VrButton _close;

	[Token(Token = "0x4000A15")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public VrButton _next;

	[Token(Token = "0x4000A16")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public VrButton _prev;

	[Token(Token = "0x4000A17")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public ColorSelector _selector;

	[Token(Token = "0x4000A18")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public PieceCollection _pieceCollection;

	[Token(Token = "0x4000A19")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Image _bg;

	[Token(Token = "0x4000A1A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Text _colorPickerTitle;

	[Token(Token = "0x4000A1B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Text _paletteTitle;

	[Token(Token = "0x4000A1C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Image[] _lines;

	[Token(Token = "0x4000A1D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Material _defaultBgMat;

	[Token(Token = "0x4000A1E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static ColorPickerMenu I;

	[Token(Token = "0x4000A1F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private PieceView _editingPiece;

	[Token(Token = "0x6000B1B")]
	[Address(RVA = "0xC88460", Offset = "0xC88460", VA = "0xC88460", Slot = "5")]
	protected override void ForceSetup()
	{
	}

	[Token(Token = "0x6000B1C")]
	[Address(RVA = "0xC88868", Offset = "0xC88868", VA = "0xC88868")]
	private void Update()
	{
	}

	[Token(Token = "0x6000B1D")]
	[Address(RVA = "0xC88A2C", Offset = "0xC88A2C", VA = "0xC88A2C")]
	private void CloseIfNotEditMode(Mode mode)
	{
	}

	[Token(Token = "0x6000B1E")]
	[Address(RVA = "0xC88A80", Offset = "0xC88A80", VA = "0xC88A80")]
	private void CloseIfNotPieceEdit(EditMode mode)
	{
	}

	[Token(Token = "0x6000B1F")]
	[Address(RVA = "0xC88A94", Offset = "0xC88A94", VA = "0xC88A94")]
	public void Open(Transform anchor, PieceView piece)
	{
	}

	[Token(Token = "0x6000B20")]
	[Address(RVA = "0xC88C14", Offset = "0xC88C14", VA = "0xC88C14")]
	public bool IsOpen()
	{
		return default(bool);
	}

	[Token(Token = "0x6000B21")]
	[Address(RVA = "0xC88A3C", Offset = "0xC88A3C", VA = "0xC88A3C")]
	public void Close()
	{
	}

	[Token(Token = "0x6000B22")]
	[Address(RVA = "0xC88C34", Offset = "0xC88C34", VA = "0xC88C34")]
	private void SetColor(Color color, bool undoable)
	{
	}

	[Token(Token = "0x6000B23")]
	[Address(RVA = "0xC88DF4", Offset = "0xC88DF4", VA = "0xC88DF4")]
	public ColorPickerMenu()
	{
	}
}
[Token(Token = "0x200020A")]
public class ColorPickerSlidersRgb : StateBehaviour
{
	[Token(Token = "0x4000A21")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public VrSlider _rSlider;

	[Token(Token = "0x4000A22")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public VrSlider _gSlider;

	[Token(Token = "0x4000A23")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public VrSlider _bSlider;

	[Token(Token = "0x4000A24")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Text _rText;

	[Token(Token = "0x4000A25")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Text _gText;

	[Token(Token = "0x4000A26")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Text _bText;

	[Token(Token = "0x4000A27")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private PieceView _editingPiece;

	[Token(Token = "0x4000A28")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Color _preChangeColor;

	[Token(Token = "0x14000066")]
	public event Action<Color, bool> OnColorSelected
	{
		[Token(Token = "0x6000B25")]
		[Address(RVA = "0xC88E00", Offset = "0xC88E00", VA = "0xC88E00")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000B26")]
		[Address(RVA = "0xC88EB0", Offset = "0xC88EB0", VA = "0xC88EB0")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x6000B27")]
	[Address(RVA = "0xC88F60", Offset = "0xC88F60", VA = "0xC88F60")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000B28")]
	[Address(RVA = "0xC891DC", Offset = "0xC891DC", VA = "0xC891DC")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000B29")]
	[Address(RVA = "0xC89458", Offset = "0xC89458", VA = "0xC89458")]
	private void FireColorSelected(float value)
	{
	}

	[Token(Token = "0x6000B2A")]
	[Address(RVA = "0xC894B0", Offset = "0xC894B0", VA = "0xC894B0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000B2B")]
	[Address(RVA = "0xC898A4", Offset = "0xC898A4", VA = "0xC898A4")]
	public void SetSlidersTo(Color color)
	{
	}

	[Token(Token = "0x6000B2C")]
	[Address(RVA = "0xC898FC", Offset = "0xC898FC", VA = "0xC898FC")]
	public void SetLatestPiece(PieceView piece)
	{
	}

	[Token(Token = "0x6000B2D")]
	[Address(RVA = "0xC89858", Offset = "0xC89858", VA = "0xC89858")]
	private bool SlidersInUse()
	{
		return default(bool);
	}

	[Token(Token = "0x6000B2E")]
	[Address(RVA = "0xC89904", Offset = "0xC89904", VA = "0xC89904")]
	private void SavePreChangeColor(float value)
	{
	}

	[Token(Token = "0x6000B2F")]
	[Address(RVA = "0xC89944", Offset = "0xC89944", VA = "0xC89944")]
	private void RegisterUndoAction(float value)
	{
	}

	[Token(Token = "0x6000B30")]
	[Address(RVA = "0xC89AA4", Offset = "0xC89AA4", VA = "0xC89AA4")]
	public ColorPickerSlidersRgb()
	{
	}
}
[Token(Token = "0x200020B")]
public class ColorSelector : StateBehaviour
{
	[Token(Token = "0x4000A2B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ColorPickerSlidersRgb _sliders;

	[Token(Token = "0x4000A2C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private UiColor[] colors;

	[Token(Token = "0x4000A2D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private UiMaterial[] materials;

	[Token(Token = "0x14000067")]
	public event Action<Color, bool> OnColorSelected
	{
		[Token(Token = "0x6000B31")]
		[Address(RVA = "0xC887B8", Offset = "0xC887B8", VA = "0xC887B8")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000B32")]
		[Address(RVA = "0xC89AAC", Offset = "0xC89AAC", VA = "0xC89AAC")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x14000068")]
	public event Action<string> OnMaterialSelected
	{
		[Token(Token = "0x6000B33")]
		[Address(RVA = "0xC89B5C", Offset = "0xC89B5C", VA = "0xC89B5C")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000B34")]
		[Address(RVA = "0xC89C0C", Offset = "0xC89C0C", VA = "0xC89C0C")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x6000B35")]
	[Address(RVA = "0xC89CBC", Offset = "0xC89CBC", VA = "0xC89CBC", Slot = "5")]
	protected override void ForceSetup()
	{
	}

	[Token(Token = "0x6000B36")]
	[Address(RVA = "0xC88B08", Offset = "0xC88B08", VA = "0xC88B08")]
	public void TryAndSelectColor(Color targetColor, PieceView piece)
	{
	}

	[Token(Token = "0x6000B37")]
	[Address(RVA = "0xC89EAC", Offset = "0xC89EAC", VA = "0xC89EAC")]
	private void FireMaterialEvent(string key)
	{
	}

	[Token(Token = "0x6000B38")]
	[Address(RVA = "0xC89EC8", Offset = "0xC89EC8", VA = "0xC89EC8")]
	private void FireColorEvent(Color color, bool undoable)
	{
	}

	[Token(Token = "0x6000B39")]
	[Address(RVA = "0xC89EE8", Offset = "0xC89EE8", VA = "0xC89EE8")]
	public ColorSelector()
	{
	}
}
[Token(Token = "0x200020C")]
public class ControllerButtonMap : MonoBehaviour
{
	[Token(Token = "0x4000A2E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ColorFlash colorFlash;

	[Token(Token = "0x6000B3A")]
	[Address(RVA = "0xC89EF0", Offset = "0xC89EF0", VA = "0xC89EF0")]
	public ControllerButtonMap()
	{
	}
}
[Token(Token = "0x200020D")]
public class ControllerTip : MonoBehaviour
{
	[Token(Token = "0x4000A2F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Text _tipText;

	[Token(Token = "0x4000A30")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform _line;

	[Token(Token = "0x4000A31")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform _tipAnchor;

	[Token(Token = "0x4000A32")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public TagOrientation _followAligned;

	[Token(Token = "0x4000A33")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Border _border;

	[Token(Token = "0x4000A34")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Animator _ping;

	[Token(Token = "0x4000A35")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Renderer[] _renderers;

	[Token(Token = "0x4000A36")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Image[] _images;

	[Token(Token = "0x6000B3B")]
	[Address(RVA = "0xC89EF8", Offset = "0xC89EF8", VA = "0xC89EF8")]
	public void Setup(string tipText, float distance, Transform orientation)
	{
	}

	[Token(Token = "0x6000B3C")]
	[Address(RVA = "0xC89FDC", Offset = "0xC89FDC", VA = "0xC89FDC")]
	public void Flash()
	{
	}

	[Token(Token = "0x6000B3D")]
	[Address(RVA = "0xC8A030", Offset = "0xC8A030", VA = "0xC8A030")]
	public void SetTextColor(Color color)
	{
	}

	[Token(Token = "0x6000B3E")]
	[Address(RVA = "0xC8A054", Offset = "0xC8A054", VA = "0xC8A054")]
	public void SetBorderColor(Color color)
	{
	}

	[Token(Token = "0x6000B3F")]
	[Address(RVA = "0xC89F64", Offset = "0xC89F64", VA = "0xC89F64")]
	private void SetDistance(float dist)
	{
	}

	[Token(Token = "0x6000B40")]
	[Address(RVA = "0xC8A1E4", Offset = "0xC8A1E4", VA = "0xC8A1E4")]
	public ControllerTip()
	{
	}
}
[Token(Token = "0x200020E")]
public class CursorInteractions : InteractionListener
{
	[Token(Token = "0x6000B41")]
	[Address(RVA = "0xC8A268", Offset = "0xC8A268", VA = "0xC8A268")]
	public CursorInteractions()
	{
	}
}
[Token(Token = "0x200020F")]
public enum GrabButton
{
	[Token(Token = "0x4000A38")]
	trigger,
	[Token(Token = "0x4000A39")]
	grip,
	[Token(Token = "0x4000A3A")]
	none
}
[Token(Token = "0x2000210")]
public class CustomLevelUi : LevelUi
{
	[Token(Token = "0x4000A3E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	[Space(25f)]
	public Text _puzzleNameAbrev;

	[Token(Token = "0x4000A3F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public Text _creationDate;

	[Token(Token = "0x4000A40")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public GameObject _abrvWrapper;

	[Token(Token = "0x4000A41")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public GameObject _buttonsWrapper;

	[Token(Token = "0x4000A42")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public VrButton _upload;

	[Token(Token = "0x4000A43")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public VrButton _edit;

	[Token(Token = "0x4000A44")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public VrButton _delete;

	[Token(Token = "0x14000069")]
	public event Action<Level> OnEdit
	{
		[Token(Token = "0x6000B42")]
		[Address(RVA = "0xC8A270", Offset = "0xC8A270", VA = "0xC8A270")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000B43")]
		[Address(RVA = "0xC8A320", Offset = "0xC8A320", VA = "0xC8A320")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x1400006A")]
	public event Action<Level> OnDelete
	{
		[Token(Token = "0x6000B44")]
		[Address(RVA = "0xC8A3D0", Offset = "0xC8A3D0", VA = "0xC8A3D0")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000B45")]
		[Address(RVA = "0xC8A480", Offset = "0xC8A480", VA = "0xC8A480")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x1400006B")]
	public event Action<Level> OnUpload
	{
		[Token(Token = "0x6000B46")]
		[Address(RVA = "0xC8A530", Offset = "0xC8A530", VA = "0xC8A530")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000B47")]
		[Address(RVA = "0xC8A5E0", Offset = "0xC8A5E0", VA = "0xC8A5E0")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x6000B48")]
	[Address(RVA = "0xC8A690", Offset = "0xC8A690", VA = "0xC8A690", Slot = "6")]
	public override void Setup(Stage stage, Level level, bool loadMiniatureAtStart, bool showDifficulty, bool showInfoOnHover)
	{
	}

	[Token(Token = "0x6000B49")]
	[Address(RVA = "0xC8A8E8", Offset = "0xC8A8E8", VA = "0xC8A8E8")]
	private void FireOnDelete()
	{
	}

	[Token(Token = "0x6000B4A")]
	[Address(RVA = "0xC8A908", Offset = "0xC8A908", VA = "0xC8A908")]
	private void FireOnEdit()
	{
	}

	[Token(Token = "0x6000B4B")]
	[Address(RVA = "0xC8A928", Offset = "0xC8A928", VA = "0xC8A928")]
	private void FireOnUpload()
	{
	}

	[Token(Token = "0x6000B4C")]
	[Address(RVA = "0xC8A948", Offset = "0xC8A948", VA = "0xC8A948", Slot = "7")]
	protected override void OnDestroy()
	{
	}

	[Token(Token = "0x6000B4D")]
	[Address(RVA = "0xC8AA80", Offset = "0xC8AA80", VA = "0xC8AA80")]
	public CustomLevelUi()
	{
	}
}
[Token(Token = "0x2000211")]
public class DebugSplinePositionSetter : MonoBehaviour
{
	[Token(Token = "0x4000A45")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TooltipBezierPositions _tooltip;

	[Token(Token = "0x4000A46")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ReadableTip _tip;

	[Token(Token = "0x6000B4E")]
	[Address(RVA = "0xC8AA88", Offset = "0xC8AA88", VA = "0xC8AA88")]
	private void Start()
	{
	}

	[Token(Token = "0x6000B4F")]
	[Address(RVA = "0xC8AAD8", Offset = "0xC8AAD8", VA = "0xC8AAD8")]
	private void SetStuff()
	{
	}

	[Token(Token = "0x6000B50")]
	[Address(RVA = "0xC8AB7C", Offset = "0xC8AB7C", VA = "0xC8AB7C")]
	public DebugSplinePositionSetter()
	{
	}
}
[Token(Token = "0x2000212")]
[ExecuteInEditMode]
public class DeviderTitle : MonoBehaviour
{
	[Token(Token = "0x4000A47")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public RectTransform _wrapper;

	[Token(Token = "0x4000A48")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public RectTransform _leftLine;

	[Token(Token = "0x4000A49")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public RectTransform _rightLine;

	[Token(Token = "0x4000A4A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public RectTransform _title;

	[Token(Token = "0x4000A4B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float _padding;

	[Token(Token = "0x6000B51")]
	[Address(RVA = "0xC8AB84", Offset = "0xC8AB84", VA = "0xC8AB84")]
	private void Update()
	{
	}

	[Token(Token = "0x6000B52")]
	[Address(RVA = "0xC8AC30", Offset = "0xC8AC30", VA = "0xC8AC30")]
	public DeviderTitle()
	{
	}
}
[Token(Token = "0x2000213")]
public class AlphaEffect : Effect
{
	[Token(Token = "0x4000A4C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[Range(0f, 1f)]
	public float normal;

	[Token(Token = "0x4000A4D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[Range(0f, 1f)]
	public float hover;

	[Token(Token = "0x4000A4E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[Range(0f, 1f)]
	public float clicked;

	[Token(Token = "0x4000A4F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[Range(0f, 1f)]
	public float clickedHover;

	[Token(Token = "0x4000A50")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Renderer target;

	[Token(Token = "0x4000A51")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float _defaultAlpha;

	[Token(Token = "0x6000B53")]
	[Address(RVA = "0xC8AC38", Offset = "0xC8AC38", VA = "0xC8AC38")]
	public new void Start()
	{
	}

	[Token(Token = "0x6000B54")]
	[Address(RVA = "0xC8AD04", Offset = "0xC8AD04", VA = "0xC8AD04", Slot = "5")]
	protected override void OnStateChange(InteractableState state)
	{
	}

	[Token(Token = "0x6000B55")]
	[Address(RVA = "0xC8AD50", Offset = "0xC8AD50", VA = "0xC8AD50")]
	private void SetAlpha(float a)
	{
	}

	[Token(Token = "0x6000B56")]
	[Address(RVA = "0xC8ADC8", Offset = "0xC8ADC8", VA = "0xC8ADC8")]
	public AlphaEffect()
	{
	}
}
[Token(Token = "0x2000214")]
public class AnimationTriggerEffect : Effect
{
	[Token(Token = "0x4000A52")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string boolName;

	[Token(Token = "0x4000A53")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Animator animator;

	[Token(Token = "0x4000A54")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[Space(25f)]
	public bool normal;

	[Token(Token = "0x4000A55")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	public bool hover;

	[Token(Token = "0x4000A56")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x32")]
	public bool clicked;

	[Token(Token = "0x4000A57")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x33")]
	public bool clickedHover;

	[Token(Token = "0x6000B57")]
	[Address(RVA = "0xC8ADD8", Offset = "0xC8ADD8", VA = "0xC8ADD8", Slot = "5")]
	protected override void OnStateChange(InteractableState state)
	{
	}

	[Token(Token = "0x6000B58")]
	[Address(RVA = "0xC8AE60", Offset = "0xC8AE60", VA = "0xC8AE60")]
	public AnimationTriggerEffect()
	{
	}
}
[Token(Token = "0x2000215")]
public class AudioClickEffect : MonoBehaviour
{
	[Token(Token = "0x6000B59")]
	[Address(RVA = "0xC8AE68", Offset = "0xC8AE68", VA = "0xC8AE68")]
	private void Start()
	{
	}

	[Token(Token = "0x6000B5A")]
	[Address(RVA = "0xC8B154", Offset = "0xC8B154", VA = "0xC8B154")]
	private void PlayAudio()
	{
	}

	[Token(Token = "0x6000B5B")]
	[Address(RVA = "0xC8B1EC", Offset = "0xC8B1EC", VA = "0xC8B1EC")]
	public AudioClickEffect()
	{
	}
}
[Token(Token = "0x2000216")]
public class AudioHoverEffect : Effect
{
	[Token(Token = "0x6000B5D")]
	[Address(RVA = "0xC8B1F8", Offset = "0xC8B1F8", VA = "0xC8B1F8", Slot = "5")]
	protected override void OnStateChange(InteractableState state)
	{
	}

	[Token(Token = "0x6000B5E")]
	[Address(RVA = "0xC8B20C", Offset = "0xC8B20C", VA = "0xC8B20C")]
	private void PlayAudio()
	{
	}

	[Token(Token = "0x6000B5F")]
	[Address(RVA = "0xC8B2A4", Offset = "0xC8B2A4", VA = "0xC8B2A4")]
	public AudioHoverEffect()
	{
	}
}
[Token(Token = "0x2000217")]
public class AudioHoverEffectLevel : Effect
{
	[Token(Token = "0x4000A58")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public LevelUi levelUi;

	[Token(Token = "0x4000A59")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	protected static AudioHoverEffectLevel _lastPlayed;

	[Token(Token = "0x6000B60")]
	[Address(RVA = "0xC8B2AC", Offset = "0xC8B2AC", VA = "0xC8B2AC", Slot = "5")]
	protected override void OnStateChange(InteractableState state)
	{
	}

	[Token(Token = "0x6000B61")]
	[Address(RVA = "0xC8B2BC", Offset = "0xC8B2BC", VA = "0xC8B2BC")]
	private void PlayAudio()
	{
	}

	[Token(Token = "0x6000B62")]
	[Address(RVA = "0xC8B4F0", Offset = "0xC8B4F0", VA = "0xC8B4F0")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000B63")]
	[Address(RVA = "0xC8B538", Offset = "0xC8B538", VA = "0xC8B538")]
	private void ResetLastPlayed()
	{
	}

	[Token(Token = "0x6000B64")]
	[Address(RVA = "0xC8B580", Offset = "0xC8B580", VA = "0xC8B580")]
	public AudioHoverEffectLevel()
	{
	}
}
[Token(Token = "0x2000218")]
public class CanvasFadeEffect : Effect
{
	[Token(Token = "0x2000219")]
	[CompilerGenerated]
	private sealed class <_FadeTo>d__12 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000A62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000A63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000A64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CanvasFadeEffect <>4__this;

		[Token(Token = "0x4000A65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float alpha;

		[Token(Token = "0x4000A66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <startAlpha>5__2;

		[Token(Token = "0x4000A67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float <startTime>5__3;

		[Token(Token = "0x170000CD")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000B6E")]
			[Address(RVA = "0xC8B8C4", Offset = "0xC8B8C4", VA = "0xC8B8C4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000CE")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000B70")]
			[Address(RVA = "0xC8B90C", Offset = "0xC8B90C", VA = "0xC8B90C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000B6B")]
		[Address(RVA = "0xC8B6FC", Offset = "0xC8B6FC", VA = "0xC8B6FC")]
		[DebuggerHidden]
		public <_FadeTo>d__12(int <>1__state)
		{
		}

		[Token(Token = "0x6000B6C")]
		[Address(RVA = "0xC8B738", Offset = "0xC8B738", VA = "0xC8B738", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000B6D")]
		[Address(RVA = "0xC8B73C", Offset = "0xC8B73C", VA = "0xC8B73C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000B6F")]
		[Address(RVA = "0xC8B8CC", Offset = "0xC8B8CC", VA = "0xC8B8CC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000A5A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[Range(0f, 1f)]
	public float normal;

	[Token(Token = "0x4000A5B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[Range(0f, 1f)]
	public float hover;

	[Token(Token = "0x4000A5C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[Range(0f, 1f)]
	public float clicked;

	[Token(Token = "0x4000A5D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[Range(0f, 1f)]
	public float clickedHover;

	[Token(Token = "0x4000A5E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[Space(25f)]
	public CanvasGroup canvasGroup;

	[Token(Token = "0x4000A5F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float delay;

	[Token(Token = "0x4000A60")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float fadeTime;

	[Token(Token = "0x4000A61")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float _targetAlpha;

	[Token(Token = "0x6000B65")]
	[Address(RVA = "0xC8B588", Offset = "0xC8B588", VA = "0xC8B588", Slot = "4")]
	public override void Start()
	{
	}

	[Token(Token = "0x6000B66")]
	[Address(RVA = "0xC8B5B8", Offset = "0xC8B5B8", VA = "0xC8B5B8")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000B67")]
	[Address(RVA = "0xC8B5E4", Offset = "0xC8B5E4", VA = "0xC8B5E4", Slot = "5")]
	protected override void OnStateChange(InteractableState state)
	{
	}

	[Token(Token = "0x6000B68")]
	[Address(RVA = "0xC8B630", Offset = "0xC8B630", VA = "0xC8B630")]
	private void FadeTo(float alpha)
	{
	}

	[Token(Token = "0x6000B69")]
	[Address(RVA = "0xC8B684", Offset = "0xC8B684", VA = "0xC8B684")]
	[IteratorStateMachine(typeof(<_FadeTo>d__12))]
	private IEnumerator _FadeTo(float alpha)
	{
		return null;
	}

	[Token(Token = "0x6000B6A")]
	[Address(RVA = "0xC8B724", Offset = "0xC8B724", VA = "0xC8B724")]
	public CanvasFadeEffect()
	{
	}
}
[Token(Token = "0x200021A")]
public class CubeHeightEffect : Effect
{
	[Token(Token = "0x200021B")]
	[CompilerGenerated]
	private sealed class <ChangeScale>d__8 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000A6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000A6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000A70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CubeHeightEffect <>4__this;

		[Token(Token = "0x4000A71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float target;

		[Token(Token = "0x4000A72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <start>5__2;

		[Token(Token = "0x4000A73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float <startScale>5__3;

		[Token(Token = "0x170000CF")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000B79")]
			[Address(RVA = "0xC8BBD0", Offset = "0xC8BBD0", VA = "0xC8BBD0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000D0")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000B7B")]
			[Address(RVA = "0xC8BC18", Offset = "0xC8BC18", VA = "0xC8BC18", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000B76")]
		[Address(RVA = "0xC8BA44", Offset = "0xC8BA44", VA = "0xC8BA44")]
		[DebuggerHidden]
		public <ChangeScale>d__8(int <>1__state)
		{
		}

		[Token(Token = "0x6000B77")]
		[Address(RVA = "0xC8BAA0", Offset = "0xC8BAA0", VA = "0xC8BAA0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000B78")]
		[Address(RVA = "0xC8BAA4", Offset = "0xC8BAA4", VA = "0xC8BAA4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000B7A")]
		[Address(RVA = "0xC8BBD8", Offset = "0xC8BBD8", VA = "0xC8BBD8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000A68")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AutoCubeUi _target;

	[Token(Token = "0x4000A69")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float normal;

	[Token(Token = "0x4000A6A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float hover;

	[Token(Token = "0x4000A6B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float clicked;

	[Token(Token = "0x4000A6C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float clickedHover;

	[Token(Token = "0x4000A6D")]
	private const float _transitionTime = 0.3f;

	[Token(Token = "0x6000B71")]
	[Address(RVA = "0xC8B914", Offset = "0xC8B914", VA = "0xC8B914", Slot = "5")]
	protected override void OnStateChange(InteractableState state)
	{
	}

	[Token(Token = "0x6000B72")]
	[Address(RVA = "0xC8B960", Offset = "0xC8B960", VA = "0xC8B960")]
	private void ChangeHeight(float target)
	{
	}

	[Token(Token = "0x6000B73")]
	[Address(RVA = "0xC8B9CC", Offset = "0xC8B9CC", VA = "0xC8B9CC")]
	[IteratorStateMachine(typeof(<ChangeScale>d__8))]
	private IEnumerator ChangeScale(float target)
	{
		return null;
	}

	[Token(Token = "0x6000B74")]
	[Address(RVA = "0xC8BA6C", Offset = "0xC8BA6C", VA = "0xC8BA6C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000B75")]
	[Address(RVA = "0xC8BA98", Offset = "0xC8BA98", VA = "0xC8BA98")]
	public CubeHeightEffect()
	{
	}
}
[Token(Token = "0x200021C")]
public abstract class Effect : MonoBehaviour
{
	[Token(Token = "0x4000A74")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Interactable interactable;

	[Token(Token = "0x6000B7C")]
	[Address(RVA = "0xC8AC70", Offset = "0xC8AC70", VA = "0xC8AC70", Slot = "4")]
	public virtual void Start()
	{
	}

	[Token(Token = "0x6000B7D")]
	[Address(RVA = "0xC8BCD0", Offset = "0xC8BCD0", VA = "0xC8BCD0")]
	public void Render()
	{
	}

	[Token(Token = "0x6000B7E")]
	protected abstract void OnStateChange(InteractableState state);

	[Token(Token = "0x6000B7F")]
	[Address(RVA = "0xC8ADD0", Offset = "0xC8ADD0", VA = "0xC8ADD0")]
	protected Effect()
	{
	}
}
[Token(Token = "0x200021D")]
public class FollowEffect : Effect
{
	[Token(Token = "0x200021E")]
	public enum FollowTarget
	{
		[Token(Token = "0x4000A7D")]
		player,
		[Token(Token = "0x4000A7E")]
		playerX,
		[Token(Token = "0x4000A7F")]
		zero,
		[Token(Token = "0x4000A80")]
		up
	}

	[Token(Token = "0x4000A75")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public FollowTarget normal;

	[Token(Token = "0x4000A76")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public FollowTarget hover;

	[Token(Token = "0x4000A77")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public FollowTarget clicked;

	[Token(Token = "0x4000A78")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public FollowTarget clickedHover;

	[Token(Token = "0x4000A79")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[Space(25f)]
	public Transform lookTransform;

	[Token(Token = "0x4000A7A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform angleCorrection;

	[Token(Token = "0x4000A7B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private FollowTarget _target;

	[Token(Token = "0x6000B80")]
	[Address(RVA = "0xC8BCF4", Offset = "0xC8BCF4", VA = "0xC8BCF4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000B81")]
	[Address(RVA = "0xC8C254", Offset = "0xC8C254", VA = "0xC8C254", Slot = "5")]
	protected override void OnStateChange(InteractableState state)
	{
	}

	[Token(Token = "0x6000B82")]
	[Address(RVA = "0xC8C2A0", Offset = "0xC8C2A0", VA = "0xC8C2A0")]
	private void SetTarget(FollowTarget target)
	{
	}

	[Token(Token = "0x6000B83")]
	[Address(RVA = "0xC8BE00", Offset = "0xC8BE00", VA = "0xC8BE00")]
	private void LookRotate()
	{
	}

	[Token(Token = "0x6000B84")]
	[Address(RVA = "0xC8C2A8", Offset = "0xC8C2A8", VA = "0xC8C2A8")]
	private void LookRotateReference(Vector3 forward, Vector3 right)
	{
	}

	[Token(Token = "0x6000B85")]
	[Address(RVA = "0xC8C0F0", Offset = "0xC8C0F0", VA = "0xC8C0F0")]
	private void voidFixedLocalRotation(Vector3 eulerAngles)
	{
	}

	[Token(Token = "0x6000B86")]
	[Address(RVA = "0xC8BFD8", Offset = "0xC8BFD8", VA = "0xC8BFD8")]
	private void CorrectionRotate(float xAngleCorrection)
	{
	}

	[Token(Token = "0x6000B87")]
	[Address(RVA = "0xC8C0B8", Offset = "0xC8C0B8", VA = "0xC8C0B8")]
	private void ZeroYzRotation()
	{
	}

	[Token(Token = "0x6000B88")]
	[Address(RVA = "0xC8C45C", Offset = "0xC8C45C", VA = "0xC8C45C")]
	public FollowEffect()
	{
	}
}
[Token(Token = "0x200021F")]
public class FontSwapEffect : Effect
{
	[Token(Token = "0x4000A81")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Font normal;

	[Token(Token = "0x4000A82")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Font hover;

	[Token(Token = "0x4000A83")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Font clicked;

	[Token(Token = "0x4000A84")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Font clickedHover;

	[Token(Token = "0x4000A85")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Text target;

	[Token(Token = "0x6000B89")]
	[Address(RVA = "0xC8C464", Offset = "0xC8C464", VA = "0xC8C464")]
	public new void Start()
	{
	}

	[Token(Token = "0x6000B8A")]
	[Address(RVA = "0xC8C468", Offset = "0xC8C468", VA = "0xC8C468", Slot = "5")]
	protected override void OnStateChange(InteractableState state)
	{
	}

	[Token(Token = "0x6000B8B")]
	[Address(RVA = "0xC8C4EC", Offset = "0xC8C4EC", VA = "0xC8C4EC")]
	private void SetFont(Font f)
	{
	}

	[Token(Token = "0x6000B8C")]
	[Address(RVA = "0xC8C508", Offset = "0xC8C508", VA = "0xC8C508")]
	public FontSwapEffect()
	{
	}
}
[Token(Token = "0x2000220")]
public class GrowEffect : Effect
{
	[Token(Token = "0x2000221")]
	[CompilerGenerated]
	private sealed class <ScaleTowardsInteraction>d__19 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000A93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000A94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000A95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GrowEffect <>4__this;

		[Token(Token = "0x4000A96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <scale>5__2;

		[Token(Token = "0x170000D1")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000B9A")]
			[Address(RVA = "0xC8CB84", Offset = "0xC8CB84", VA = "0xC8CB84", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000D2")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000B9C")]
			[Address(RVA = "0xC8CBCC", Offset = "0xC8CBCC", VA = "0xC8CBCC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000B97")]
		[Address(RVA = "0xC8C880", Offset = "0xC8C880", VA = "0xC8C880")]
		[DebuggerHidden]
		public <ScaleTowardsInteraction>d__19(int <>1__state)
		{
		}

		[Token(Token = "0x6000B98")]
		[Address(RVA = "0xC8C950", Offset = "0xC8C950", VA = "0xC8C950", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000B99")]
		[Address(RVA = "0xC8C954", Offset = "0xC8C954", VA = "0xC8C954", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000B9B")]
		[Address(RVA = "0xC8CB8C", Offset = "0xC8CB8C", VA = "0xC8CB8C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000222")]
	[CompilerGenerated]
	private sealed class <ChangeScale>d__20 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000A97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000A98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000A99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GrowEffect <>4__this;

		[Token(Token = "0x4000A9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float target;

		[Token(Token = "0x4000A9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <start>5__2;

		[Token(Token = "0x4000A9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float <startScale>5__3;

		[Token(Token = "0x170000D3")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000BA0")]
			[Address(RVA = "0xC8CD6C", Offset = "0xC8CD6C", VA = "0xC8CD6C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000D4")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000BA2")]
			[Address(RVA = "0xC8CDB4", Offset = "0xC8CDB4", VA = "0xC8CDB4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000B9D")]
		[Address(RVA = "0xC8C8A8", Offset = "0xC8C8A8", VA = "0xC8C8A8")]
		[DebuggerHidden]
		public <ChangeScale>d__20(int <>1__state)
		{
		}

		[Token(Token = "0x6000B9E")]
		[Address(RVA = "0xC8CBD4", Offset = "0xC8CBD4", VA = "0xC8CBD4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000B9F")]
		[Address(RVA = "0xC8CBD8", Offset = "0xC8CBD8", VA = "0xC8CBD8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000BA1")]
		[Address(RVA = "0xC8CD74", Offset = "0xC8CD74", VA = "0xC8CD74", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000A86")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform _target;

	[Token(Token = "0x4000A87")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[Header("Handtracking Push Info")]
	public bool _pushable;

	[Token(Token = "0x4000A88")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AutoCubeUi _autoCubeUi;

	[Token(Token = "0x4000A89")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool _customHeight;

	[Token(Token = "0x4000A8A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float _buttonMaxHeight;

	[Token(Token = "0x4000A8B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[Space(25f)]
	public float normal;

	[Token(Token = "0x4000A8C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float hover;

	[Token(Token = "0x4000A8D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float clicked;

	[Token(Token = "0x4000A8E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float clickedHover;

	[Token(Token = "0x4000A8F")]
	private const float HoverTransitionTime = 0.3f;

	[Token(Token = "0x4000A90")]
	private const float FingerRadius = 0.005f;

	[Token(Token = "0x4000A91")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[Header("Debug")]
	[SerializeField]
	private Transform _interactingTransform;

	[Token(Token = "0x4000A92")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool _touched;

	[Token(Token = "0x6000B8D")]
	[Address(RVA = "0xC8C510", Offset = "0xC8C510", VA = "0xC8C510", Slot = "4")]
	public override void Start()
	{
	}

	[Token(Token = "0x6000B8E")]
	[Address(RVA = "0xC8C5A0", Offset = "0xC8C5A0", VA = "0xC8C5A0")]
	public float CurrentHeight()
	{
		return default(float);
	}

	[Token(Token = "0x6000B8F")]
	[Address(RVA = "0xC8C5F4", Offset = "0xC8C5F4", VA = "0xC8C5F4")]
	public float CurrentHeight01()
	{
		return default(float);
	}

	[Token(Token = "0x6000B90")]
	[Address(RVA = "0xC8C618", Offset = "0xC8C618", VA = "0xC8C618")]
	public bool Touched()
	{
		return default(bool);
	}

	[Token(Token = "0x6000B91")]
	[Address(RVA = "0xC8C620", Offset = "0xC8C620", VA = "0xC8C620", Slot = "5")]
	protected override void OnStateChange(InteractableState state)
	{
	}

	[Token(Token = "0x6000B92")]
	[Address(RVA = "0xC8C66C", Offset = "0xC8C66C", VA = "0xC8C66C")]
	private void ChangeHeight(float target)
	{
	}

	[Token(Token = "0x6000B93")]
	[Address(RVA = "0xC8C7A0", Offset = "0xC8C7A0", VA = "0xC8C7A0")]
	[IteratorStateMachine(typeof(<ScaleTowardsInteraction>d__19))]
	private IEnumerator ScaleTowardsInteraction()
	{
		return null;
	}

	[Token(Token = "0x6000B94")]
	[Address(RVA = "0xC8C808", Offset = "0xC8C808", VA = "0xC8C808")]
	[IteratorStateMachine(typeof(<ChangeScale>d__20))]
	private IEnumerator ChangeScale(float target)
	{
		return null;
	}

	[Token(Token = "0x6000B95")]
	[Address(RVA = "0xC8C8D0", Offset = "0xC8C8D0", VA = "0xC8C8D0")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000B96")]
	[Address(RVA = "0xC8C934", Offset = "0xC8C934", VA = "0xC8C934")]
	public GrowEffect()
	{
	}
}
[Token(Token = "0x2000223")]
public class InfoVisibilityEffect : Effect
{
	[Token(Token = "0x4000A9D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public LevelUi _levelUi;

	[Token(Token = "0x4000A9E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool normal;

	[Token(Token = "0x4000A9F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	public bool hover;

	[Token(Token = "0x4000AA0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A")]
	public bool clicked;

	[Token(Token = "0x4000AA1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2B")]
	public bool clickedHover;

	[Token(Token = "0x6000BA3")]
	[Address(RVA = "0xC8CDBC", Offset = "0xC8CDBC", VA = "0xC8CDBC", Slot = "5")]
	protected override void OnStateChange(InteractableState state)
	{
	}

	[Token(Token = "0x6000BA4")]
	[Address(RVA = "0xC8CE68", Offset = "0xC8CE68", VA = "0xC8CE68")]
	public InfoVisibilityEffect()
	{
	}
}
[Token(Token = "0x2000224")]
public class MaterialColorEffect : Effect
{
	[Token(Token = "0x2000225")]
	[CompilerGenerated]
	private sealed class <_SetMaterial>d__15 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000AAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000AAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000AAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MaterialColorEffect <>4__this;

		[Token(Token = "0x4000AAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Color color;

		[Token(Token = "0x4000AAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Color <startColor>5__2;

		[Token(Token = "0x4000AB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float <startTime>5__3;

		[Token(Token = "0x170000D5")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000BB0")]
			[Address(RVA = "0xC8D3E0", Offset = "0xC8D3E0", VA = "0xC8D3E0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000D6")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000BB2")]
			[Address(RVA = "0xC8D428", Offset = "0xC8D428", VA = "0xC8D428", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000BAD")]
		[Address(RVA = "0xC8D1E8", Offset = "0xC8D1E8", VA = "0xC8D1E8")]
		[DebuggerHidden]
		public <_SetMaterial>d__15(int <>1__state)
		{
		}

		[Token(Token = "0x6000BAE")]
		[Address(RVA = "0xC8D224", Offset = "0xC8D224", VA = "0xC8D224", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000BAF")]
		[Address(RVA = "0xC8D228", Offset = "0xC8D228", VA = "0xC8D228", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000BB1")]
		[Address(RVA = "0xC8D3E8", Offset = "0xC8D3E8", VA = "0xC8D3E8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000AA2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Material normal;

	[Token(Token = "0x4000AA3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Material hover;

	[Token(Token = "0x4000AA4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Material clicked;

	[Token(Token = "0x4000AA5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Material clickedHover;

	[Token(Token = "0x4000AA6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[Space(25f)]
	public Material targetMaterial;

	[Token(Token = "0x4000AA7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float delay;

	[Token(Token = "0x4000AA8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float transitionTime;

	[Token(Token = "0x4000AA9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Color _targetColor;

	[Token(Token = "0x4000AAA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private bool _lerping;

	[Token(Token = "0x6000BA5")]
	[Address(RVA = "0xC8CE70", Offset = "0xC8CE70", VA = "0xC8CE70", Slot = "4")]
	public override void Start()
	{
	}

	[Token(Token = "0x6000BA6")]
	[Address(RVA = "0xC8CFF0", Offset = "0xC8CFF0", VA = "0xC8CFF0")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000BA7")]
	[Address(RVA = "0xC8D024", Offset = "0xC8D024", VA = "0xC8D024")]
	private void Update()
	{
	}

	[Token(Token = "0x6000BA8")]
	[Address(RVA = "0xC8D034", Offset = "0xC8D034", VA = "0xC8D034", Slot = "5")]
	protected override void OnStateChange(InteractableState state)
	{
	}

	[Token(Token = "0x6000BA9")]
	[Address(RVA = "0xC8CF64", Offset = "0xC8CF64", VA = "0xC8CF64")]
	private void SetCurrentColor()
	{
	}

	[Token(Token = "0x6000BAA")]
	[Address(RVA = "0xC8D0A8", Offset = "0xC8D0A8", VA = "0xC8D0A8")]
	private void SetMaterial(Color color)
	{
	}

	[Token(Token = "0x6000BAB")]
	[Address(RVA = "0xC8D158", Offset = "0xC8D158", VA = "0xC8D158")]
	[IteratorStateMachine(typeof(<_SetMaterial>d__15))]
	private IEnumerator _SetMaterial(Color color)
	{
		return null;
	}

	[Token(Token = "0x6000BAC")]
	[Address(RVA = "0xC8D210", Offset = "0xC8D210", VA = "0xC8D210")]
	public MaterialColorEffect()
	{
	}
}
[Token(Token = "0x2000226")]
public class MaterialSwapEffect : Effect
{
	[Token(Token = "0x4000AB1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Material normal;

	[Token(Token = "0x4000AB2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Material hover;

	[Token(Token = "0x4000AB3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Material clicked;

	[Token(Token = "0x4000AB4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Material clickedHover;

	[Token(Token = "0x4000AB5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[Space(20f)]
	public Renderer _renderer;

	[Token(Token = "0x4000AB6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Renderer[] _rendererGroup;

	[Token(Token = "0x4000AB7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Image _image;

	[Token(Token = "0x6000BB3")]
	[Address(RVA = "0xC8D430", Offset = "0xC8D430", VA = "0xC8D430", Slot = "5")]
	protected override void OnStateChange(InteractableState state)
	{
	}

	[Token(Token = "0x6000BB4")]
	[Address(RVA = "0xC8D47C", Offset = "0xC8D47C", VA = "0xC8D47C")]
	public void SetMaterial(Material mat)
	{
	}

	[Token(Token = "0x6000BB5")]
	[Address(RVA = "0xC8D64C", Offset = "0xC8D64C", VA = "0xC8D64C")]
	public MaterialSwapEffect()
	{
	}
}
[Token(Token = "0x2000227")]
public class ScaleEffect : Effect
{
	[Token(Token = "0x2000228")]
	[CompilerGenerated]
	private sealed class <_Scale>d__12 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000AC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000AC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000AC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ScaleEffect <>4__this;

		[Token(Token = "0x4000AC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Vector3 scale;

		[Token(Token = "0x4000AC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private Vector3 <startScale>5__2;

		[Token(Token = "0x4000AC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float <startTime>5__3;

		[Token(Token = "0x170000D7")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000BBF")]
			[Address(RVA = "0xC8DAA8", Offset = "0xC8DAA8", VA = "0xC8DAA8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000D8")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000BC1")]
			[Address(RVA = "0xC8DAF0", Offset = "0xC8DAF0", VA = "0xC8DAF0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000BBC")]
		[Address(RVA = "0xC8D87C", Offset = "0xC8D87C", VA = "0xC8D87C")]
		[DebuggerHidden]
		public <_Scale>d__12(int <>1__state)
		{
		}

		[Token(Token = "0x6000BBD")]
		[Address(RVA = "0xC8D8B8", Offset = "0xC8D8B8", VA = "0xC8D8B8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000BBE")]
		[Address(RVA = "0xC8D8BC", Offset = "0xC8D8BC", VA = "0xC8D8BC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000BC0")]
		[Address(RVA = "0xC8DAB0", Offset = "0xC8DAB0", VA = "0xC8DAB0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000AB8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Vector3 normal;

	[Token(Token = "0x4000AB9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public Vector3 hover;

	[Token(Token = "0x4000ABA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Vector3 clicked;

	[Token(Token = "0x4000ABB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public Vector3 clickedHover;

	[Token(Token = "0x4000ABC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[Space(25f)]
	public RectTransform targetTransform;

	[Token(Token = "0x4000ABD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public float delay;

	[Token(Token = "0x4000ABE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public float transitionTime;

	[Token(Token = "0x4000ABF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Vector3 _targetScale;

	[Token(Token = "0x6000BB6")]
	[Address(RVA = "0xC8D654", Offset = "0xC8D654", VA = "0xC8D654", Slot = "4")]
	public override void Start()
	{
	}

	[Token(Token = "0x6000BB7")]
	[Address(RVA = "0xC8D694", Offset = "0xC8D694", VA = "0xC8D694")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000BB8")]
	[Address(RVA = "0xC8D6C4", Offset = "0xC8D6C4", VA = "0xC8D6C4", Slot = "5")]
	protected override void OnStateChange(InteractableState state)
	{
	}

	[Token(Token = "0x6000BB9")]
	[Address(RVA = "0xC8D754", Offset = "0xC8D754", VA = "0xC8D754")]
	private void Scale(Vector3 scale)
	{
	}

	[Token(Token = "0x6000BBA")]
	[Address(RVA = "0xC8D7F0", Offset = "0xC8D7F0", VA = "0xC8D7F0")]
	[IteratorStateMachine(typeof(<_Scale>d__12))]
	private IEnumerator _Scale(Vector3 scale)
	{
		return null;
	}

	[Token(Token = "0x6000BBB")]
	[Address(RVA = "0xC8D8A4", Offset = "0xC8D8A4", VA = "0xC8D8A4")]
	public ScaleEffect()
	{
	}
}
[Token(Token = "0x2000229")]
public class TargetEnabledEffect : Effect
{
	[Token(Token = "0x4000AC6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject target;

	[Token(Token = "0x4000AC7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool normal;

	[Token(Token = "0x4000AC8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	public bool hover;

	[Token(Token = "0x4000AC9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A")]
	public bool clicked;

	[Token(Token = "0x4000ACA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2B")]
	public bool clickedHover;

	[Token(Token = "0x6000BC2")]
	[Address(RVA = "0xC8DAF8", Offset = "0xC8DAF8", VA = "0xC8DAF8", Slot = "5")]
	protected override void OnStateChange(InteractableState state)
	{
	}

	[Token(Token = "0x6000BC3")]
	[Address(RVA = "0xC8DB94", Offset = "0xC8DB94", VA = "0xC8DB94")]
	private void SetActive(bool active)
	{
	}

	[Token(Token = "0x6000BC4")]
	[Address(RVA = "0xC8DBB4", Offset = "0xC8DBB4", VA = "0xC8DBB4")]
	public TargetEnabledEffect()
	{
	}
}
[Token(Token = "0x200022A")]
public class TextMaterialSwapEffect : Effect
{
	[Token(Token = "0x4000ACB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Material normal;

	[Token(Token = "0x4000ACC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Material hover;

	[Token(Token = "0x4000ACD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Material clicked;

	[Token(Token = "0x4000ACE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Material clickedHover;

	[Token(Token = "0x4000ACF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Text _text;

	[Token(Token = "0x6000BC5")]
	[Address(RVA = "0xC8DBBC", Offset = "0xC8DBBC", VA = "0xC8DBBC", Slot = "5")]
	protected override void OnStateChange(InteractableState state)
	{
	}

	[Token(Token = "0x6000BC6")]
	[Address(RVA = "0xC8DC50", Offset = "0xC8DC50", VA = "0xC8DC50")]
	public void SetMaterial(Material mat)
	{
	}

	[Token(Token = "0x6000BC7")]
	[Address(RVA = "0xC8DC74", Offset = "0xC8DC74", VA = "0xC8DC74")]
	public TextMaterialSwapEffect()
	{
	}
}
[Token(Token = "0x200022B")]
public class TextTagEffect : Effect
{
	[Token(Token = "0x200022C")]
	[CompilerGenerated]
	private sealed class <WaitAndUpdate>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000AD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000AD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000AD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TextTagEffect <>4__this;

		[Token(Token = "0x170000D9")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000BD2")]
			[Address(RVA = "0xC8E150", Offset = "0xC8E150", VA = "0xC8E150", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000DA")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000BD4")]
			[Address(RVA = "0xC8E198", Offset = "0xC8E198", VA = "0xC8E198", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000BCF")]
		[Address(RVA = "0xC8DD90", Offset = "0xC8DD90", VA = "0xC8DD90")]
		[DebuggerHidden]
		public <WaitAndUpdate>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x6000BD0")]
		[Address(RVA = "0xC8E0EC", Offset = "0xC8E0EC", VA = "0xC8E0EC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000BD1")]
		[Address(RVA = "0xC8E0F0", Offset = "0xC8E0F0", VA = "0xC8E0F0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000BD3")]
		[Address(RVA = "0xC8E158", Offset = "0xC8E158", VA = "0xC8E158", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000AD0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool normal;

	[Token(Token = "0x4000AD1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	public bool hover;

	[Token(Token = "0x4000AD2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x22")]
	public bool clicked;

	[Token(Token = "0x4000AD3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x23")]
	public bool clickedHover;

	[Token(Token = "0x4000AD4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Text _text;

	[Token(Token = "0x6000BC8")]
	[Address(RVA = "0xC8DC7C", Offset = "0xC8DC7C", VA = "0xC8DC7C")]
	public new void Start()
	{
	}

	[Token(Token = "0x6000BC9")]
	[Address(RVA = "0xC8DD28", Offset = "0xC8DD28", VA = "0xC8DD28")]
	[IteratorStateMachine(typeof(<WaitAndUpdate>d__6))]
	private IEnumerator WaitAndUpdate()
	{
		return null;
	}

	[Token(Token = "0x6000BCA")]
	[Address(RVA = "0xC8DDB8", Offset = "0xC8DDB8", VA = "0xC8DDB8", Slot = "5")]
	protected override void OnStateChange(InteractableState state)
	{
	}

	[Token(Token = "0x6000BCB")]
	[Address(RVA = "0xC8DE10", Offset = "0xC8DE10", VA = "0xC8DE10")]
	private void AddTags()
	{
	}

	[Token(Token = "0x6000BCC")]
	[Address(RVA = "0xC8DF50", Offset = "0xC8DF50", VA = "0xC8DF50")]
	private void RemoveTags()
	{
	}

	[Token(Token = "0x6000BCD")]
	[Address(RVA = "0xC8E0C4", Offset = "0xC8E0C4", VA = "0xC8E0C4")]
	public TextTagEffect()
	{
	}
}
[Token(Token = "0x200022D")]
public class ThicknessAnimationEffect : Effect
{
	[Token(Token = "0x200022E")]
	[CompilerGenerated]
	private sealed class <DoGrabAnim>d__16 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000AE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000AE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000AE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ThicknessAnimationEffect <>4__this;

		[Token(Token = "0x4000AE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public AnimationCurve curve;

		[Token(Token = "0x4000AEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float <startTime>5__2;

		[Token(Token = "0x170000DB")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000BDE")]
			[Address(RVA = "0xC8E5C0", Offset = "0xC8E5C0", VA = "0xC8E5C0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000DC")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000BE0")]
			[Address(RVA = "0xC8E608", Offset = "0xC8E608", VA = "0xC8E608", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000BDB")]
		[Address(RVA = "0xC8E3DC", Offset = "0xC8E3DC", VA = "0xC8E3DC")]
		[DebuggerHidden]
		public <DoGrabAnim>d__16(int <>1__state)
		{
		}

		[Token(Token = "0x6000BDC")]
		[Address(RVA = "0xC8E4D4", Offset = "0xC8E4D4", VA = "0xC8E4D4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000BDD")]
		[Address(RVA = "0xC8E4D8", Offset = "0xC8E4D8", VA = "0xC8E4D8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000BDF")]
		[Address(RVA = "0xC8E5C8", Offset = "0xC8E5C8", VA = "0xC8E5C8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000AD8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AutoCubeUi _autoCubeUi;

	[Token(Token = "0x4000AD9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AutoBorder _autoBroder;

	[Token(Token = "0x4000ADA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool handTrackingOnly;

	[Token(Token = "0x4000ADB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float animationDuration;

	[Token(Token = "0x4000ADC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool animateNormal;

	[Token(Token = "0x4000ADD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public AnimationCurve normal;

	[Token(Token = "0x4000ADE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public bool animateHover;

	[Token(Token = "0x4000ADF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public AnimationCurve hover;

	[Token(Token = "0x4000AE0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public bool animateClicked;

	[Token(Token = "0x4000AE1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public AnimationCurve clicked;

	[Token(Token = "0x4000AE2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public bool animateClickedHover;

	[Token(Token = "0x4000AE3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public AnimationCurve clickedHover;

	[Token(Token = "0x4000AE4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private float _defaultThickness;

	[Token(Token = "0x4000AE5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private bool _animInProgress;

	[Token(Token = "0x6000BD5")]
	[Address(RVA = "0xC8E1A0", Offset = "0xC8E1A0", VA = "0xC8E1A0", Slot = "4")]
	public override void Start()
	{
	}

	[Token(Token = "0x6000BD6")]
	[Address(RVA = "0xC8E258", Offset = "0xC8E258", VA = "0xC8E258", Slot = "5")]
	protected override void OnStateChange(InteractableState state)
	{
	}

	[Token(Token = "0x6000BD7")]
	[Address(RVA = "0xC8E368", Offset = "0xC8E368", VA = "0xC8E368")]
	[IteratorStateMachine(typeof(<DoGrabAnim>d__16))]
	private IEnumerator DoGrabAnim(AnimationCurve curve)
	{
		return null;
	}

	[Token(Token = "0x6000BD8")]
	[Address(RVA = "0xC8E404", Offset = "0xC8E404", VA = "0xC8E404")]
	private void SetThickness(float value)
	{
	}

	[Token(Token = "0x6000BD9")]
	[Address(RVA = "0xC8E4BC", Offset = "0xC8E4BC", VA = "0xC8E4BC")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000BDA")]
	[Address(RVA = "0xC8E4C4", Offset = "0xC8E4C4", VA = "0xC8E4C4")]
	public ThicknessAnimationEffect()
	{
	}
}
[Token(Token = "0x200022F")]
public class ThicknessEffect : Effect
{
	[Token(Token = "0x4000AEB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AutoCubeUi _autoCubeUi;

	[Token(Token = "0x4000AEC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AutoBorder _autoBroder;

	[Token(Token = "0x4000AED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float normal;

	[Token(Token = "0x4000AEE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float hover;

	[Token(Token = "0x4000AEF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float clicked;

	[Token(Token = "0x4000AF0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float clickedHover;

	[Token(Token = "0x6000BE1")]
	[Address(RVA = "0xC8E610", Offset = "0xC8E610", VA = "0xC8E610", Slot = "5")]
	protected override void OnStateChange(InteractableState state)
	{
	}

	[Token(Token = "0x6000BE2")]
	[Address(RVA = "0xC8E65C", Offset = "0xC8E65C", VA = "0xC8E65C")]
	private void ChangeThickness(float value)
	{
	}

	[Token(Token = "0x6000BE3")]
	[Address(RVA = "0xC8E714", Offset = "0xC8E714", VA = "0xC8E714")]
	public ThicknessEffect()
	{
	}
}
[Token(Token = "0x2000230")]
public class ThicknessGrowMultiplierEffect : MonoBehaviour
{
	[Token(Token = "0x4000AF1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AutoCubeUi _autoCubeUi;

	[Token(Token = "0x4000AF2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AnimationCurve _multiplier;

	[Token(Token = "0x4000AF3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GrowEffect _growEffect;

	[Token(Token = "0x4000AF4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Interactable _interactable;

	[Token(Token = "0x4000AF5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float _defaultWidth;

	[Token(Token = "0x6000BE4")]
	[Address(RVA = "0xC8E728", Offset = "0xC8E728", VA = "0xC8E728")]
	public void Start()
	{
	}

	[Token(Token = "0x6000BE5")]
	[Address(RVA = "0xC8E778", Offset = "0xC8E778", VA = "0xC8E778")]
	public void Update()
	{
	}

	[Token(Token = "0x6000BE6")]
	[Address(RVA = "0xC8E860", Offset = "0xC8E860", VA = "0xC8E860")]
	public ThicknessGrowMultiplierEffect()
	{
	}
}
[Token(Token = "0x2000231")]
public class TranslateEffect : Effect
{
	[Token(Token = "0x2000232")]
	[CompilerGenerated]
	private sealed class <_MoveTo>d__12 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000AFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000AFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000B00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TranslateEffect <>4__this;

		[Token(Token = "0x4000B01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Vector3 pos;

		[Token(Token = "0x4000B02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private Vector3 <startPos>5__2;

		[Token(Token = "0x4000B03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float <startTime>5__3;

		[Token(Token = "0x170000DD")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000BF0")]
			[Address(RVA = "0xC8EC98", Offset = "0xC8EC98", VA = "0xC8EC98", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000DE")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000BF2")]
			[Address(RVA = "0xC8ECE0", Offset = "0xC8ECE0", VA = "0xC8ECE0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000BED")]
		[Address(RVA = "0xC8EA6C", Offset = "0xC8EA6C", VA = "0xC8EA6C")]
		[DebuggerHidden]
		public <_MoveTo>d__12(int <>1__state)
		{
		}

		[Token(Token = "0x6000BEE")]
		[Address(RVA = "0xC8EAA8", Offset = "0xC8EAA8", VA = "0xC8EAA8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000BEF")]
		[Address(RVA = "0xC8EAAC", Offset = "0xC8EAAC", VA = "0xC8EAAC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000BF1")]
		[Address(RVA = "0xC8ECA0", Offset = "0xC8ECA0", VA = "0xC8ECA0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000AF6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Vector3 normal;

	[Token(Token = "0x4000AF7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public Vector3 hover;

	[Token(Token = "0x4000AF8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Vector3 clicked;

	[Token(Token = "0x4000AF9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public Vector3 clickedHover;

	[Token(Token = "0x4000AFA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[Space(25f)]
	public RectTransform targetTransform;

	[Token(Token = "0x4000AFB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public float delay;

	[Token(Token = "0x4000AFC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public float transitionTime;

	[Token(Token = "0x4000AFD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Vector3 _targetPos;

	[Token(Token = "0x6000BE7")]
	[Address(RVA = "0xC8E870", Offset = "0xC8E870", VA = "0xC8E870", Slot = "4")]
	public override void Start()
	{
	}

	[Token(Token = "0x6000BE8")]
	[Address(RVA = "0xC8E8B0", Offset = "0xC8E8B0", VA = "0xC8E8B0")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000BE9")]
	[Address(RVA = "0xC8E8E0", Offset = "0xC8E8E0", VA = "0xC8E8E0", Slot = "5")]
	protected override void OnStateChange(InteractableState state)
	{
	}

	[Token(Token = "0x6000BEA")]
	[Address(RVA = "0xC8E944", Offset = "0xC8E944", VA = "0xC8E944")]
	private void MoveTo(Vector3 pos)
	{
	}

	[Token(Token = "0x6000BEB")]
	[Address(RVA = "0xC8E9E0", Offset = "0xC8E9E0", VA = "0xC8E9E0")]
	[IteratorStateMachine(typeof(<_MoveTo>d__12))]
	private IEnumerator _MoveTo(Vector3 pos)
	{
		return null;
	}

	[Token(Token = "0x6000BEC")]
	[Address(RVA = "0xC8EA94", Offset = "0xC8EA94", VA = "0xC8EA94")]
	public TranslateEffect()
	{
	}
}
[Token(Token = "0x2000233")]
public class UnityEventEffect : Effect
{
	[Token(Token = "0x4000B04")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public UnityEvent normal;

	[Token(Token = "0x4000B05")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public UnityEvent hover;

	[Token(Token = "0x4000B06")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public UnityEvent onClick;

	[Token(Token = "0x4000B07")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public UnityEvent onClickHover;

	[Token(Token = "0x6000BF3")]
	[Address(RVA = "0xC8ECE8", Offset = "0xC8ECE8", VA = "0xC8ECE8", Slot = "5")]
	protected override void OnStateChange(InteractableState state)
	{
	}

	[Token(Token = "0x6000BF4")]
	[Address(RVA = "0xC8ED50", Offset = "0xC8ED50", VA = "0xC8ED50")]
	public UnityEventEffect()
	{
	}
}
[Token(Token = "0x2000234")]
public class FadePage : Page
{
	[Token(Token = "0x4000B08")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public VruiFader _vruiFader;

	[Token(Token = "0x6000BF5")]
	[Address(RVA = "0xC8ED58", Offset = "0xC8ED58", VA = "0xC8ED58", Slot = "4")]
	public override void Open()
	{
	}

	[Token(Token = "0x6000BF6")]
	[Address(RVA = "0xC8ED84", Offset = "0xC8ED84", VA = "0xC8ED84", Slot = "5")]
	public override void Close()
	{
	}

	[Token(Token = "0x6000BF7")]
	[Address(RVA = "0xC8EDB0", Offset = "0xC8EDB0", VA = "0xC8EDB0")]
	public FadePage()
	{
	}
}
[Token(Token = "0x2000235")]
public class FlexibleGridLayout : LayoutGroup
{
	[Token(Token = "0x2000236")]
	public enum FitType
	{
		[Token(Token = "0x4000B0E")]
		FixedColumns,
		[Token(Token = "0x4000B0F")]
		FixedRows
	}

	[Token(Token = "0x4000B09")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public FitType fitType;

	[Token(Token = "0x4000B0A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public int columns;

	[Token(Token = "0x4000B0B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public int rows;

	[Token(Token = "0x4000B0C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public Vector2 spacing;

	[Token(Token = "0x6000BF8")]
	[Address(RVA = "0xC8EDB8", Offset = "0xC8EDB8", VA = "0xC8EDB8")]
	public void Update()
	{
	}

	[Token(Token = "0x6000BF9")]
	[Address(RVA = "0xC8EDBC", Offset = "0xC8EDBC", VA = "0xC8EDBC", Slot = "28")]
	public override void CalculateLayoutInputHorizontal()
	{
	}

	[Token(Token = "0x6000BFA")]
	[Address(RVA = "0xC8F138", Offset = "0xC8F138", VA = "0xC8F138", Slot = "29")]
	public override void CalculateLayoutInputVertical()
	{
	}

	[Token(Token = "0x6000BFB")]
	[Address(RVA = "0xC8F18C", Offset = "0xC8F18C", VA = "0xC8F18C", Slot = "37")]
	public override void SetLayoutHorizontal()
	{
	}

	[Token(Token = "0x6000BFC")]
	[Address(RVA = "0xC8F190", Offset = "0xC8F190", VA = "0xC8F190", Slot = "38")]
	public override void SetLayoutVertical()
	{
	}

	[Token(Token = "0x6000BFD")]
	[Address(RVA = "0xC8F194", Offset = "0xC8F194", VA = "0xC8F194")]
	public FlexibleGridLayout()
	{
	}
}
[Token(Token = "0x2000237")]
public class GroupInteractable : Interactable
{
	[Token(Token = "0x2000238")]
	public enum Method
	{
		[Token(Token = "0x4000B13")]
		copyAnyNewState,
		[Token(Token = "0x4000B14")]
		prioritizeHover
	}

	[Token(Token = "0x4000B10")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Method _method;

	[Token(Token = "0x4000B11")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Interactable[] _interactables;

	[Token(Token = "0x6000BFE")]
	[Address(RVA = "0xC8F19C", Offset = "0xC8F19C", VA = "0xC8F19C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000BFF")]
	[Address(RVA = "0xC8F270", Offset = "0xC8F270", VA = "0xC8F270")]
	private void CheckToUpdateState(InteractableState state)
	{
	}

	[Token(Token = "0x6000C00")]
	[Address(RVA = "0xC8F304", Offset = "0xC8F304", VA = "0xC8F304")]
	private bool AnyInteractableInteracted()
	{
		return default(bool);
	}

	[Token(Token = "0x6000C01")]
	[Address(RVA = "0xC8F4B4", Offset = "0xC8F4B4", VA = "0xC8F4B4")]
	public GroupInteractable()
	{
	}
}
[Token(Token = "0x2000239")]
[RequireComponent(typeof(InteractionListener))]
public class HandHoverInteractions : MonoBehaviour
{
	[Token(Token = "0x4000B15")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private InteractionListener _listener;

	[Token(Token = "0x6000C02")]
	[Address(RVA = "0xC8F4D4", Offset = "0xC8F4D4", VA = "0xC8F4D4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000C03")]
	[Address(RVA = "0xC8F524", Offset = "0xC8F524", VA = "0xC8F524")]
	private void OnTriggerEnter(Collider collider)
	{
	}

	[Token(Token = "0x6000C04")]
	[Address(RVA = "0xC8F8FC", Offset = "0xC8F8FC", VA = "0xC8F8FC")]
	private void OnTriggerExit(Collider collider)
	{
	}

	[Token(Token = "0x6000C05")]
	[Address(RVA = "0xC8F560", Offset = "0xC8F560", VA = "0xC8F560")]
	private bool GetData(Collider collider, out InteractionData data)
	{
		return default(bool);
	}

	[Token(Token = "0x6000C06")]
	[Address(RVA = "0xC8FAD0", Offset = "0xC8FAD0", VA = "0xC8FAD0")]
	public HandHoverInteractions()
	{
	}
}
[Token(Token = "0x200023A")]
public class HandMenuController : StateBehaviour
{
	[Token(Token = "0x4000B16")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Cubism.Hand _hand;

	[Token(Token = "0x4000B17")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private MenuAnchor _anchor;

	[Token(Token = "0x6000C07")]
	[Address(RVA = "0xC8FAD8", Offset = "0xC8FAD8", VA = "0xC8FAD8")]
	public void Setup(Cubism.Hand hand, MenuAnchor anchor)
	{
	}

	[Token(Token = "0x6000C08")]
	[Address(RVA = "0xC8FAE4", Offset = "0xC8FAE4", VA = "0xC8FAE4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000C09")]
	[Address(RVA = "0xC8FC04", Offset = "0xC8FC04", VA = "0xC8FC04")]
	public HandMenuController()
	{
	}
}
[Token(Token = "0x200023B")]
[ExecuteInEditMode]
public class HeightFromAutoCubeTop : MonoBehaviour
{
	[Token(Token = "0x4000B18")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float heightFromTop;

	[Token(Token = "0x4000B19")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AutoCubeUi autoCubeUi;

	[Token(Token = "0x6000C0A")]
	[Address(RVA = "0xC8FC0C", Offset = "0xC8FC0C", VA = "0xC8FC0C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000C0B")]
	[Address(RVA = "0xC8FCF0", Offset = "0xC8FCF0", VA = "0xC8FCF0")]
	public HeightFromAutoCubeTop()
	{
	}
}
[Token(Token = "0x200023C")]
public interface IAutoCube
{
	[Token(Token = "0x6000C0C")]
	List<Renderer> GetBorders();

	[Token(Token = "0x6000C0D")]
	void SetSize(Vector3 size);

	[Token(Token = "0x6000C0E")]
	Vector3 GetSize();
}
[Token(Token = "0x200023D")]
public class InputListener : MonoBehaviour
{
	[Token(Token = "0x6000C0F")]
	[Address(RVA = "0xC8FCF8", Offset = "0xC8FCF8", VA = "0xC8FCF8")]
	public InputListener()
	{
	}
}
[Token(Token = "0x200023E")]
public enum InteractableState
{
	[Token(Token = "0x4000B1B")]
	normal,
	[Token(Token = "0x4000B1C")]
	normalHover,
	[Token(Token = "0x4000B1D")]
	clicked,
	[Token(Token = "0x4000B1E")]
	clickedHover
}
[Token(Token = "0x200023F")]
public abstract class Interactable : MonoBehaviour
{
	[Token(Token = "0x4000B20")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool active;

	[Token(Token = "0x4000B21")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public InteractionListener cursorInteractions;

	[Token(Token = "0x4000B22")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Interactable focusedInteractable;

	[Token(Token = "0x4000B23")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[Header("Debug")]
	[SerializeField]
	public bool _logInteractions;

	[Token(Token = "0x4000B24")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private InteractableState _interactableState;

	[Token(Token = "0x170000DF")]
	public InteractableState interactableState
	{
		[Token(Token = "0x6000C12")]
		[Address(RVA = "0xC8FDB0", Offset = "0xC8FDB0", VA = "0xC8FDB0")]
		get
		{
			return default(InteractableState);
		}
		[Token(Token = "0x6000C13")]
		[Address(RVA = "0xC8F358", Offset = "0xC8F358", VA = "0xC8F358")]
		set
		{
		}
	}

	[Token(Token = "0x1400006C")]
	public event Action<InteractableState> onButtonStateChange
	{
		[Token(Token = "0x6000C10")]
		[Address(RVA = "0xC8BC20", Offset = "0xC8BC20", VA = "0xC8BC20")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000C11")]
		[Address(RVA = "0xC8FD00", Offset = "0xC8FD00", VA = "0xC8FD00")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x6000C14")]
	[Address(RVA = "0xC8F4C4", Offset = "0xC8F4C4", VA = "0xC8F4C4")]
	protected Interactable()
	{
	}
}
[Token(Token = "0x2000240")]
public class InteractionListener : MonoBehaviour
{
	[Token(Token = "0x4000B29")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	protected InteractionData _lastInteractionData;

	[Token(Token = "0x4000B2A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	[Header("Debug")]
	private List<Grabber> _hoveredGrabbers;

	[Token(Token = "0x4000B2B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private List<Grabber> _clickedGrabbers;

	[Token(Token = "0x4000B2C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private bool _hovered;

	[Token(Token = "0x4000B2D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
	[SerializeField]
	private bool _grabbed;

	[Token(Token = "0x4000B2E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x52")]
	[SerializeField]
	private bool _logInteractions;

	[Token(Token = "0x1400006D")]
	public event Action<InteractionData> OnHoverOn
	{
		[Token(Token = "0x6000C15")]
		[Address(RVA = "0xC8FDB8", Offset = "0xC8FDB8", VA = "0xC8FDB8")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000C16")]
		[Address(RVA = "0xC8FE68", Offset = "0xC8FE68", VA = "0xC8FE68")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x1400006E")]
	public event Action<InteractionData> OnHoverOff
	{
		[Token(Token = "0x6000C17")]
		[Address(RVA = "0xC8FF18", Offset = "0xC8FF18", VA = "0xC8FF18")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000C18")]
		[Address(RVA = "0xC8FFC8", Offset = "0xC8FFC8", VA = "0xC8FFC8")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x1400006F")]
	public event Action<InteractionData> OnClickDown
	{
		[Token(Token = "0x6000C19")]
		[Address(RVA = "0xC90078", Offset = "0xC90078", VA = "0xC90078")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000C1A")]
		[Address(RVA = "0xC90128", Offset = "0xC90128", VA = "0xC90128")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x14000070")]
	public event Action<InteractionData> OnClickUp
	{
		[Token(Token = "0x6000C1B")]
		[Address(RVA = "0xC901D8", Offset = "0xC901D8", VA = "0xC901D8")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000C1C")]
		[Address(RVA = "0xC90288", Offset = "0xC90288", VA = "0xC90288")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x6000C1D")]
	[Address(RVA = "0xC90338", Offset = "0xC90338", VA = "0xC90338")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000C1E")]
	[Address(RVA = "0xC90598", Offset = "0xC90598", VA = "0xC90598")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000C1F")]
	[Address(RVA = "0xC9059C", Offset = "0xC9059C", VA = "0xC9059C", Slot = "4")]
	public virtual bool IsHovered()
	{
		return default(bool);
	}

	[Token(Token = "0x6000C20")]
	[Address(RVA = "0xC905A4", Offset = "0xC905A4", VA = "0xC905A4", Slot = "5")]
	public virtual InteractionData GetLastInteractionData()
	{
		return null;
	}

	[Token(Token = "0x6000C21")]
	[Address(RVA = "0xC8F6E8", Offset = "0xC8F6E8", VA = "0xC8F6E8")]
	public void HoverOn(InteractionData data)
	{
	}

	[Token(Token = "0x6000C22")]
	[Address(RVA = "0xC8F938", Offset = "0xC8F938", VA = "0xC8F938")]
	public void HoverOff(InteractionData data)
	{
	}

	[Token(Token = "0x6000C23")]
	[Address(RVA = "0xC905AC", Offset = "0xC905AC", VA = "0xC905AC")]
	public void ClickDown(InteractionData data)
	{
	}

	[Token(Token = "0x6000C24")]
	[Address(RVA = "0xC906D4", Offset = "0xC906D4", VA = "0xC906D4")]
	public void ClickUp(InteractionData data)
	{
	}

	[Token(Token = "0x6000C25")]
	[Address(RVA = "0xC9033C", Offset = "0xC9033C", VA = "0xC9033C")]
	public void ForceRemoveInteractions()
	{
	}

	[Token(Token = "0x6000C26")]
	[Address(RVA = "0xC907F8", Offset = "0xC907F8", VA = "0xC907F8")]
	public InteractionListener()
	{
	}
}
[Token(Token = "0x2000241")]
public class LevelUi : StateBehaviour
{
	[Token(Token = "0x4000B2F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GrowOnEnable growOnEnable;

	[Token(Token = "0x4000B30")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public string _path;

	[Token(Token = "0x4000B31")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public LevelMiniature _miniature;

	[Token(Token = "0x4000B32")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject _lockedCube;

	[Token(Token = "0x4000B33")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject _unsolvedCube;

	[Token(Token = "0x4000B34")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject _solvedCube;

	[Token(Token = "0x4000B35")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public VrButton _openButton;

	[Token(Token = "0x4000B36")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Renderer _renderer;

	[Token(Token = "0x4000B37")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public AudioPing _audioPing;

	[Token(Token = "0x4000B38")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Text _difficulty;

	[Token(Token = "0x4000B39")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public GameObject _infoWrapper;

	[Token(Token = "0x4000B3A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Text _infoTitle;

	[Token(Token = "0x4000B3B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Text _infoAuthor;

	[Token(Token = "0x4000B3C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	protected Stage _stage;

	[Token(Token = "0x4000B3D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	protected Level _level;

	[Token(Token = "0x4000B3E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	protected bool _flashIfUnsolved;

	[Token(Token = "0x4000B3F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA1")]
	protected bool _showInfoOnHover;

	[Token(Token = "0x4000B40")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public EdgePing _edgePing;

	[Token(Token = "0x6000C27")]
	[Address(RVA = "0xC90898", Offset = "0xC90898", VA = "0xC90898", Slot = "6")]
	public virtual void Setup(Stage stage, Level level, bool loadMiniatureAtStart, bool showDifficulty, bool showInfoOnHover)
	{
	}

	[Token(Token = "0x6000C28")]
	[Address(RVA = "0xC8CE3C", Offset = "0xC8CE3C", VA = "0xC8CE3C")]
	public void SetInfoVisible(bool visible)
	{
	}

	[Token(Token = "0x6000C29")]
	[Address(RVA = "0xC90F14", Offset = "0xC90F14", VA = "0xC90F14")]
	public void FlashIfUnsolved(bool flashOn)
	{
	}

	[Token(Token = "0x6000C2A")]
	[Address(RVA = "0xC90F20", Offset = "0xC90F20", VA = "0xC90F20")]
	public void SetHovered(bool hovered)
	{
	}

	[Token(Token = "0x6000C2B")]
	[Address(RVA = "0xC90BA8", Offset = "0xC90BA8", VA = "0xC90BA8")]
	public void RefreshDisplay(Progress progress = Progress.Locked)
	{
	}

	[Token(Token = "0x6000C2C")]
	[Address(RVA = "0xC91260", Offset = "0xC91260", VA = "0xC91260")]
	public Level GetLevelModel()
	{
		return null;
	}

	[Token(Token = "0x6000C2D")]
	[Address(RVA = "0xC90DC0", Offset = "0xC90DC0", VA = "0xC90DC0")]
	private void SubscribeToEvents()
	{
	}

	[Token(Token = "0x6000C2E")]
	[Address(RVA = "0xC91268", Offset = "0xC91268", VA = "0xC91268")]
	private void UnSubscribeToEvents()
	{
	}

	[Token(Token = "0x6000C2F")]
	[Address(RVA = "0xC90F98", Offset = "0xC90F98", VA = "0xC90F98")]
	private void UpdateStrobe()
	{
	}

	[Token(Token = "0x6000C30")]
	[Address(RVA = "0xC91204", Offset = "0xC91204", VA = "0xC91204")]
	private void DisplayLocked()
	{
	}

	[Token(Token = "0x6000C31")]
	[Address(RVA = "0xC911A8", Offset = "0xC911A8", VA = "0xC911A8")]
	private void DisplayUnsolved()
	{
	}

	[Token(Token = "0x6000C32")]
	[Address(RVA = "0xC90F3C", Offset = "0xC90F3C", VA = "0xC90F3C")]
	private void DisplaySolved()
	{
	}

	[Token(Token = "0x6000C33")]
	[Address(RVA = "0xC91458", Offset = "0xC91458", VA = "0xC91458")]
	private bool IsFirstLevel()
	{
		return default(bool);
	}

	[Token(Token = "0x6000C34")]
	[Address(RVA = "0xC914D4", Offset = "0xC914D4", VA = "0xC914D4")]
	private bool IsInvalid()
	{
		return default(bool);
	}

	[Token(Token = "0x6000C35")]
	[Address(RVA = "0xC91570", Offset = "0xC91570", VA = "0xC91570")]
	private void LoadLevel()
	{
	}

	[Token(Token = "0x6000C36")]
	[Address(RVA = "0xC91C00", Offset = "0xC91C00", VA = "0xC91C00", Slot = "7")]
	protected virtual void OnDestroy()
	{
	}

	[Token(Token = "0x6000C37")]
	[Address(RVA = "0xC90BF4", Offset = "0xC90BF4", VA = "0xC90BF4")]
	private void SetDifficultyString()
	{
	}

	[Token(Token = "0x6000C38")]
	[Address(RVA = "0xC91C04", Offset = "0xC91C04", VA = "0xC91C04")]
	public LevelUi()
	{
	}
}
[Token(Token = "0x2000242")]
[ExecuteInEditMode]
public class LocalScaleToAutoCubeSize : MonoBehaviour
{
	[Token(Token = "0x4000B41")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform _target;

	[Token(Token = "0x4000B42")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AutoCube _cube;

	[Token(Token = "0x4000B43")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Vector3 _remappedScale;

	[Token(Token = "0x6000C39")]
	[Address(RVA = "0xC91C0C", Offset = "0xC91C0C", VA = "0xC91C0C")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000C3A")]
	[Address(RVA = "0xC91D10", Offset = "0xC91D10", VA = "0xC91D10")]
	public LocalScaleToAutoCubeSize()
	{
	}
}
[Token(Token = "0x2000243")]
public class MainMenuSizerView : StateBehaviour
{
	[Token(Token = "0x4000B44")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public VrToggle _toggle;

	[Token(Token = "0x4000B45")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ProximityCubeSizer _sizer;

	[Token(Token = "0x4000B46")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Mode[] _bigModes;

	[Token(Token = "0x6000C3B")]
	[Address(RVA = "0xC91D18", Offset = "0xC91D18", VA = "0xC91D18", Slot = "5")]
	protected override void ForceSetup()
	{
	}

	[Token(Token = "0x6000C3C")]
	[Address(RVA = "0xC91EC0", Offset = "0xC91EC0", VA = "0xC91EC0")]
	private void UpdateSizeState()
	{
	}

	[Token(Token = "0x6000C3D")]
	[Address(RVA = "0xC91F9C", Offset = "0xC91F9C", VA = "0xC91F9C")]
	public MainMenuSizerView()
	{
	}
}
[Token(Token = "0x2000244")]
public enum AnchorPosition
{
	[Token(Token = "0x4000B48")]
	left,
	[Token(Token = "0x4000B49")]
	right,
	[Token(Token = "0x4000B4A")]
	center
}
[Token(Token = "0x2000245")]
public class MenuAnchor : StateBehaviour
{
	[Token(Token = "0x4000B4B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AnchorPosition anchorPosition;

	[Token(Token = "0x4000B4C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public MenuAnchorData data;

	[Token(Token = "0x6000C40")]
	[Address(RVA = "0xC9202C", Offset = "0xC9202C", VA = "0xC9202C", Slot = "5")]
	protected override void ForceSetup()
	{
	}

	[Token(Token = "0x6000C41")]
	[Address(RVA = "0xC920AC", Offset = "0xC920AC", VA = "0xC920AC")]
	public MenuAnchor()
	{
	}
}
[Serializable]
[Token(Token = "0x2000246")]
public struct MenuAnchorData
{
	[Token(Token = "0x4000B4D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public bool showStageTitle;

	[Token(Token = "0x4000B4E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public Transform anchor;
}
[Token(Token = "0x2000247")]
public class MenuButtonController : StateBehaviour
{
	[Token(Token = "0x6000C42")]
	[Address(RVA = "0xC920B4", Offset = "0xC920B4", VA = "0xC920B4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000C43")]
	[Address(RVA = "0xC922D0", Offset = "0xC922D0", VA = "0xC922D0")]
	public MenuButtonController()
	{
	}
}
[Token(Token = "0x2000248")]
public class MenuFader : MonoBehaviour
{
	[Token(Token = "0x4000B4F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float enableAngle;

	[Token(Token = "0x4000B50")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float fadeRange;

	[Token(Token = "0x4000B51")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject menuWrapper;

	[Token(Token = "0x4000B52")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public MenuFocus _focus;

	[Token(Token = "0x4000B53")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public MeshCanvasGroup _meshCanvasGroup;

	[Token(Token = "0x6000C44")]
	[Address(RVA = "0xC922D8", Offset = "0xC922D8", VA = "0xC922D8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000C45")]
	[Address(RVA = "0xC92358", Offset = "0xC92358", VA = "0xC92358")]
	public MenuFader()
	{
	}
}
[Token(Token = "0x2000249")]
public class MenuFocus : MonoBehaviour
{
	[Token(Token = "0x4000B54")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform menu;

	[Token(Token = "0x4000B55")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Transform head;

	[Token(Token = "0x4000B56")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float headFocusAngle;

	[Token(Token = "0x4000B57")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float menuFocusAngle;

	[Token(Token = "0x4000B58")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float focusAngle;

	[Token(Token = "0x6000C46")]
	[Address(RVA = "0xC92360", Offset = "0xC92360", VA = "0xC92360")]
	private void Update()
	{
	}

	[Token(Token = "0x6000C47")]
	[Address(RVA = "0xC92398", Offset = "0xC92398", VA = "0xC92398")]
	private float GetMenuFocusAngle()
	{
		return default(float);
	}

	[Token(Token = "0x6000C48")]
	[Address(RVA = "0xC924FC", Offset = "0xC924FC", VA = "0xC924FC")]
	private float GetHeadFocusAngle()
	{
		return default(float);
	}

	[Token(Token = "0x6000C49")]
	[Address(RVA = "0xC92660", Offset = "0xC92660", VA = "0xC92660")]
	public MenuFocus()
	{
	}
}
[Token(Token = "0x200024A")]
public class MenuOpener : MonoBehaviour
{
	[Token(Token = "0x4000B5B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Controller left;

	[Token(Token = "0x4000B5C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Controller right;

	[Token(Token = "0x4000B5D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform menu;

	[Token(Token = "0x4000B5E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject menuWrapper;

	[Token(Token = "0x4000B5F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Follow follow;

	[Token(Token = "0x4000B60")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static MenuOpener instance;

	[Token(Token = "0x4000B61")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Transform currentAnchor;

	[Token(Token = "0x14000071")]
	public event Action OnMenuOpened
	{
		[Token(Token = "0x6000C4A")]
		[Address(RVA = "0xC92668", Offset = "0xC92668", VA = "0xC92668")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000C4B")]
		[Address(RVA = "0xC92704", Offset = "0xC92704", VA = "0xC92704")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x14000072")]
	public event Action OnMenuClosed
	{
		[Token(Token = "0x6000C4C")]
		[Address(RVA = "0xC927A0", Offset = "0xC927A0", VA = "0xC927A0")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000C4D")]
		[Address(RVA = "0xC9283C", Offset = "0xC9283C", VA = "0xC9283C")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x6000C4E")]
	[Address(RVA = "0xC928D8", Offset = "0xC928D8", VA = "0xC928D8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000C4F")]
	[Address(RVA = "0xC92970", Offset = "0xC92970", VA = "0xC92970")]
	private void Update()
	{
	}

	[Token(Token = "0x6000C50")]
	[Address(RVA = "0xC92A78", Offset = "0xC92A78", VA = "0xC92A78")]
	public bool IsOpen()
	{
		return default(bool);
	}

	[Token(Token = "0x6000C51")]
	[Address(RVA = "0xC92A2C", Offset = "0xC92A2C", VA = "0xC92A2C")]
	public void HandleMenuPress(Transform anchor)
	{
	}

	[Token(Token = "0x6000C52")]
	[Address(RVA = "0xC92AB0", Offset = "0xC92AB0", VA = "0xC92AB0")]
	public void OpenMenu()
	{
	}

	[Token(Token = "0x6000C53")]
	[Address(RVA = "0xC92A94", Offset = "0xC92A94", VA = "0xC92A94")]
	public void CloseMenu()
	{
	}

	[Token(Token = "0x6000C54")]
	[Address(RVA = "0xC92ACC", Offset = "0xC92ACC", VA = "0xC92ACC")]
	public MenuOpener()
	{
	}
}
[Token(Token = "0x200024B")]
public class Panel : MonoBehaviour
{
	[Token(Token = "0x4000B63")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Panel parent;

	[Token(Token = "0x4000B64")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Border _border;

	[Token(Token = "0x4000B65")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public CanvasGroup _canvasGroup;

	[Token(Token = "0x4000B66")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool _hasFocus;

	[Token(Token = "0x4000B67")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Interactable[] interactables;

	[Token(Token = "0x170000E0")]
	public bool hasFocus
	{
		[Token(Token = "0x6000C57")]
		[Address(RVA = "0xC92C34", Offset = "0xC92C34", VA = "0xC92C34")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000C58")]
		[Address(RVA = "0xC92C3C", Offset = "0xC92C3C", VA = "0xC92C3C")]
		set
		{
		}
	}

	[Token(Token = "0x14000073")]
	public event Action<bool> onFocusChange
	{
		[Token(Token = "0x6000C55")]
		[Address(RVA = "0xC92AD4", Offset = "0xC92AD4", VA = "0xC92AD4")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000C56")]
		[Address(RVA = "0xC92B84", Offset = "0xC92B84", VA = "0xC92B84")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x6000C59")]
	[Address(RVA = "0xC92C78", Offset = "0xC92C78", VA = "0xC92C78")]
	private void Start()
	{
	}

	[Token(Token = "0x6000C5A")]
	[Address(RVA = "0xC92D2C", Offset = "0xC92D2C", VA = "0xC92D2C")]
	public void Close()
	{
	}

	[Token(Token = "0x6000C5B")]
	[Address(RVA = "0xC92E08", Offset = "0xC92E08", VA = "0xC92E08")]
	private void ToggleFocus(bool value)
	{
	}

	[Token(Token = "0x6000C5C")]
	[Address(RVA = "0xC92F40", Offset = "0xC92F40", VA = "0xC92F40")]
	private void SetPanelReferenceInButtons()
	{
	}

	[Token(Token = "0x6000C5D")]
	[Address(RVA = "0xC92F6C", Offset = "0xC92F6C", VA = "0xC92F6C")]
	public Panel()
	{
	}
}
[Token(Token = "0x200024C")]
public class PlayButtonSizerView : StateBehaviour
{
	[Token(Token = "0x4000B68")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public VrToggle _toggle;

	[Token(Token = "0x4000B69")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ProximityCubeSizer _sizer;

	[Token(Token = "0x6000C5E")]
	[Address(RVA = "0xC92F74", Offset = "0xC92F74", VA = "0xC92F74", Slot = "5")]
	protected override void ForceSetup()
	{
	}

	[Token(Token = "0x6000C5F")]
	[Address(RVA = "0xC930E4", Offset = "0xC930E4", VA = "0xC930E4")]
	private void UpdateSizeState()
	{
	}

	[Token(Token = "0x6000C60")]
	[Address(RVA = "0xC93178", Offset = "0xC93178", VA = "0xC93178")]
	public PlayButtonSizerView()
	{
	}
}
[Token(Token = "0x200024D")]
public class PlayPingOnFirstEnabled : StateBehaviour
{
	[Token(Token = "0x200024E")]
	[CompilerGenerated]
	private sealed class <PlayPing>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000B6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000B6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000B6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float delay;

		[Token(Token = "0x4000B6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public PlayPingOnFirstEnabled <>4__this;

		[Token(Token = "0x170000E1")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000C6C")]
			[Address(RVA = "0xC935C0", Offset = "0xC935C0", VA = "0xC935C0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000E2")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000C6E")]
			[Address(RVA = "0xC93608", Offset = "0xC93608", VA = "0xC93608", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000C69")]
		[Address(RVA = "0xC933C8", Offset = "0xC933C8", VA = "0xC933C8")]
		[DebuggerHidden]
		public <PlayPing>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x6000C6A")]
		[Address(RVA = "0xC933F8", Offset = "0xC933F8", VA = "0xC933F8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000C6B")]
		[Address(RVA = "0xC933FC", Offset = "0xC933FC", VA = "0xC933FC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000C6D")]
		[Address(RVA = "0xC935C8", Offset = "0xC935C8", VA = "0xC935C8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000B6A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool _shouldPingOnEnable;

	[Token(Token = "0x4000B6B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private EdgePing _ping;

	[Token(Token = "0x6000C63")]
	[Address(RVA = "0xC93188", Offset = "0xC93188", VA = "0xC93188", Slot = "5")]
	protected override void ForceSetup()
	{
	}

	[Token(Token = "0x6000C64")]
	[Address(RVA = "0xC93224", Offset = "0xC93224", VA = "0xC93224")]
	private void CheckToPlayPing()
	{
	}

	[Token(Token = "0x6000C65")]
	[Address(RVA = "0xC93264", Offset = "0xC93264", VA = "0xC93264")]
	private void Update()
	{
	}

	[Token(Token = "0x6000C66")]
	[Address(RVA = "0xC93310", Offset = "0xC93310", VA = "0xC93310")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000C67")]
	[Address(RVA = "0xC93298", Offset = "0xC93298", VA = "0xC93298")]
	[IteratorStateMachine(typeof(<PlayPing>d__6))]
	private IEnumerator PlayPing(float delay)
	{
		return null;
	}

	[Token(Token = "0x6000C68")]
	[Address(RVA = "0xC933F0", Offset = "0xC933F0", VA = "0xC933F0")]
	public PlayPingOnFirstEnabled()
	{
	}
}
[Token(Token = "0x200024F")]
public enum SizeState
{
	[Token(Token = "0x4000B71")]
	disabled,
	[Token(Token = "0x4000B72")]
	small,
	[Token(Token = "0x4000B73")]
	big,
	[Token(Token = "0x4000B74")]
	dynamic
}
[Token(Token = "0x2000250")]
[RequireComponent(typeof(IAutoCube))]
public class ProximityCubeSizer : StateBehaviour
{
	[Token(Token = "0x4000B75")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float offSize;

	[Token(Token = "0x4000B76")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float minSize;

	[Token(Token = "0x4000B77")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float maxSize;

	[Token(Token = "0x4000B78")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float minDist;

	[Token(Token = "0x4000B79")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float maxDist;

	[Token(Token = "0x4000B7A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float lerpSmooth;

	[Token(Token = "0x4000B7B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[Space(25f)]
	public InteractionListener _interactionListener;

	[Token(Token = "0x4000B7C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	public GameObject _icon;

	[Token(Token = "0x4000B7D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public bool _hideIconWhenSmall;

	[Token(Token = "0x4000B7E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
	public bool _proximityScale;

	[Token(Token = "0x4000B7F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x52")]
	public bool _proximityColor;

	[Token(Token = "0x4000B80")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Controller _left;

	[Token(Token = "0x4000B81")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Controller _right;

	[Token(Token = "0x4000B82")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private IAutoCube _autoCube;

	[Token(Token = "0x4000B83")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private float _targetFactor;

	[Token(Token = "0x4000B84")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private SizeState _sizeState;

	[Token(Token = "0x4000B85")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private List<Renderer> _borders;

	[Token(Token = "0x6000C6F")]
	[Address(RVA = "0xC93610", Offset = "0xC93610", VA = "0xC93610", Slot = "5")]
	protected override void ForceSetup()
	{
	}

	[Token(Token = "0x6000C70")]
	[Address(RVA = "0xC93A6C", Offset = "0xC93A6C", VA = "0xC93A6C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000C71")]
	[Address(RVA = "0xC91F74", Offset = "0xC91F74", VA = "0xC91F74")]
	public void SetSizeState(SizeState state)
	{
	}

	[Token(Token = "0x6000C72")]
	[Address(RVA = "0xC93AB4", Offset = "0xC93AB4", VA = "0xC93AB4")]
	private void UpdateTargetFactor()
	{
	}

	[Token(Token = "0x6000C73")]
	[Address(RVA = "0xC9418C", Offset = "0xC9418C", VA = "0xC9418C")]
	private bool ShouldIgnoreController(Controller controller)
	{
		return default(bool);
	}

	[Token(Token = "0x6000C74")]
	[Address(RVA = "0xC937B0", Offset = "0xC937B0", VA = "0xC937B0")]
	private void SetStartValues()
	{
	}

	[Token(Token = "0x6000C75")]
	[Address(RVA = "0xC93D14", Offset = "0xC93D14", VA = "0xC93D14")]
	private void LerpCubeSize()
	{
	}

	[Token(Token = "0x6000C76")]
	[Address(RVA = "0xC93F68", Offset = "0xC93F68", VA = "0xC93F68")]
	private void LerpColor()
	{
	}

	[Token(Token = "0x6000C77")]
	[Address(RVA = "0xC941C4", Offset = "0xC941C4", VA = "0xC941C4")]
	public ProximityCubeSizer()
	{
	}
}
[Token(Token = "0x2000251")]
public class PuzzleMenuPosition : StateBehaviour
{
	[Token(Token = "0x4000B86")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform _positionAnchor;

	[Token(Token = "0x4000B87")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Vector3 _targetPos;

	[Token(Token = "0x6000C78")]
	[Address(RVA = "0xC94264", Offset = "0xC94264", VA = "0xC94264", Slot = "5")]
	protected override void ForceSetup()
	{
	}

	[Token(Token = "0x6000C79")]
	[Address(RVA = "0xC94300", Offset = "0xC94300", VA = "0xC94300")]
	public void SetPosition()
	{
	}

	[Token(Token = "0x6000C7A")]
	[Address(RVA = "0xC9437C", Offset = "0xC9437C", VA = "0xC9437C")]
	public PuzzleMenuPosition()
	{
	}
}
[Token(Token = "0x2000252")]
public class PuzzlePodium : StateBehaviour
{
	[Token(Token = "0x2000253")]
	[CompilerGenerated]
	private sealed class <SetPlanePositionAsync>d__9 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000B90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000B91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000B92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PuzzlePodium <>4__this;

		[Token(Token = "0x4000B93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Bounds bounds;

		[Token(Token = "0x170000E3")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000C84")]
			[Address(RVA = "0xC94A44", Offset = "0xC94A44", VA = "0xC94A44", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000E4")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000C86")]
			[Address(RVA = "0xC94A8C", Offset = "0xC94A8C", VA = "0xC94A8C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000C81")]
		[Address(RVA = "0xC94940", Offset = "0xC94940", VA = "0xC94940")]
		[DebuggerHidden]
		public <SetPlanePositionAsync>d__9(int <>1__state)
		{
		}

		[Token(Token = "0x6000C82")]
		[Address(RVA = "0xC94978", Offset = "0xC94978", VA = "0xC94978", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000C83")]
		[Address(RVA = "0xC9497C", Offset = "0xC9497C", VA = "0xC9497C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000C85")]
		[Address(RVA = "0xC94A4C", Offset = "0xC94A4C", VA = "0xC94A4C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000B88")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public PuzzlePosition _puzzlePosition;

	[Token(Token = "0x4000B89")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AutoPlane _plane;

	[Token(Token = "0x4000B8A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform _puzzleCenter;

	[Token(Token = "0x4000B8B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Vector3 _targetLocalCenterPos;

	[Token(Token = "0x4000B8C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private Vector2 _targetSize;

	[Token(Token = "0x4000B8D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private Quaternion _targetRot;

	[Token(Token = "0x4000B8E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private Vector3 _targetPuzzlePos;

	[Token(Token = "0x4000B8F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private bool _baseIsSquare;

	[Token(Token = "0x6000C7B")]
	[Address(RVA = "0xC94384", Offset = "0xC94384", VA = "0xC94384")]
	private void Update()
	{
	}

	[Token(Token = "0x6000C7C")]
	[Address(RVA = "0xC948BC", Offset = "0xC948BC", VA = "0xC948BC")]
	[IteratorStateMachine(typeof(<SetPlanePositionAsync>d__9))]
	public IEnumerator SetPlanePositionAsync(Bounds bounds)
	{
		return null;
	}

	[Token(Token = "0x6000C7D")]
	[Address(RVA = "0xC94968", Offset = "0xC94968", VA = "0xC94968")]
	public bool BaseIsSquare()
	{
		return default(bool);
	}

	[Token(Token = "0x6000C7E")]
	[Address(RVA = "0xC943F8", Offset = "0xC943F8", VA = "0xC943F8")]
	public void SetPlanePositionFromBounds(Bounds bounds)
	{
	}

	[Token(Token = "0x6000C7F")]
	[Address(RVA = "0xC945F8", Offset = "0xC945F8", VA = "0xC945F8")]
	private void UpdatePlanePose()
	{
	}

	[Token(Token = "0x6000C80")]
	[Address(RVA = "0xC94970", Offset = "0xC94970", VA = "0xC94970")]
	public PuzzlePodium()
	{
	}
}
[Token(Token = "0x2000254")]
public enum TipAnchor
{
	[Token(Token = "0x4000B95")]
	top,
	[Token(Token = "0x4000B96")]
	right,
	[Token(Token = "0x4000B97")]
	bottom,
	[Token(Token = "0x4000B98")]
	left
}
[Token(Token = "0x2000255")]
public class ReadableTip : MonoBehaviour
{
	[Token(Token = "0x4000B99")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ReadableTipAnchors anchors;

	[Token(Token = "0x4000B9A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public TipPositioner position;

	[Token(Token = "0x4000B9B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Text _text;

	[Token(Token = "0x4000B9C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public TooltipBezierPositions _bezierLine;

	[Token(Token = "0x4000B9D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public ScaleAlongFingers _squeezeTip;

	[Token(Token = "0x6000C87")]
	[Address(RVA = "0xC94A94", Offset = "0xC94A94", VA = "0xC94A94")]
	public void Setup(string text, TipPositionParams positionParams)
	{
	}

	[Token(Token = "0x6000C88")]
	[Address(RVA = "0xC94AD8", Offset = "0xC94AD8", VA = "0xC94AD8")]
	public Text GetText()
	{
		return null;
	}

	[Token(Token = "0x6000C89")]
	[Address(RVA = "0xC94AE0", Offset = "0xC94AE0", VA = "0xC94AE0")]
	public void SetText(string text)
	{
	}

	[Token(Token = "0x6000C8A")]
	[Address(RVA = "0xC94B04", Offset = "0xC94B04", VA = "0xC94B04")]
	public void SetFontSize(int size)
	{
	}

	[Token(Token = "0x6000C8B")]
	[Address(RVA = "0xC94B20", Offset = "0xC94B20", VA = "0xC94B20")]
	public TooltipBezierPositions AddSpline(TipAnchor tipAnchor, Transform anchor)
	{
		return null;
	}

	[Token(Token = "0x6000C8C")]
	[Address(RVA = "0xC94C48", Offset = "0xC94C48", VA = "0xC94C48")]
	public GameObject AddSqueezeTip(Cubism.Hand hand)
	{
		return null;
	}

	[Token(Token = "0x6000C8D")]
	[Address(RVA = "0xC94CF0", Offset = "0xC94CF0", VA = "0xC94CF0")]
	public ReadableTip()
	{
	}
}
[Serializable]
[Token(Token = "0x2000256")]
public struct ReadableTipAnchors
{
	[Token(Token = "0x4000B9E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Transform top;

	[Token(Token = "0x4000B9F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public Transform right;

	[Token(Token = "0x4000BA0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Transform bottom;

	[Token(Token = "0x4000BA1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform left;

	[Token(Token = "0x6000C8E")]
	[Address(RVA = "0xC94C10", Offset = "0xC94C10", VA = "0xC94C10")]
	public Transform Get(TipAnchor anchor)
	{
		return null;
	}
}
[Token(Token = "0x2000257")]
public class BoolPref : Playerpref
{
	[Token(Token = "0x4000BA2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private BoolValue _boolValue;

	[Token(Token = "0x4000BA3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool _default;

	[Token(Token = "0x6000C8F")]
	[Address(RVA = "0xC94CF8", Offset = "0xC94CF8", VA = "0xC94CF8")]
	public BoolPref(string key, BoolValue boolValue, bool defaultValue)
	{
	}

	[Token(Token = "0x6000C90")]
	[Address(RVA = "0xC94D78", Offset = "0xC94D78", VA = "0xC94D78", Slot = "4")]
	public override void SubscribeToChangeEvents()
	{
	}

	[Token(Token = "0x6000C91")]
	[Address(RVA = "0xC94E08", Offset = "0xC94E08", VA = "0xC94E08", Slot = "5")]
	public override void UpdateSave()
	{
	}

	[Token(Token = "0x6000C92")]
	[Address(RVA = "0xC94E48", Offset = "0xC94E48", VA = "0xC94E48", Slot = "6")]
	protected override void SetFromSave()
	{
	}

	[Token(Token = "0x6000C93")]
	[Address(RVA = "0xC94E40", Offset = "0xC94E40", VA = "0xC94E40")]
	private int BoolToInt(bool value)
	{
		return default(int);
	}

	[Token(Token = "0x6000C94")]
	[Address(RVA = "0xC94EAC", Offset = "0xC94EAC", VA = "0xC94EAC")]
	private bool IntToBool(int value)
	{
		return default(bool);
	}
}
[Token(Token = "0x2000258")]
public class FloatPref : Playerpref
{
	[Token(Token = "0x4000BA4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private FloatValue _floatValue;

	[Token(Token = "0x4000BA5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float _default;

	[Token(Token = "0x6000C95")]
	[Address(RVA = "0xC94EB8", Offset = "0xC94EB8", VA = "0xC94EB8")]
	public FloatPref(string key, FloatValue floatValue, float defaultValue)
	{
	}

	[Token(Token = "0x6000C96")]
	[Address(RVA = "0xC94F10", Offset = "0xC94F10", VA = "0xC94F10", Slot = "4")]
	public override void SubscribeToChangeEvents()
	{
	}

	[Token(Token = "0x6000C97")]
	[Address(RVA = "0xC94FA0", Offset = "0xC94FA0", VA = "0xC94FA0", Slot = "5")]
	public override void UpdateSave()
	{
	}

	[Token(Token = "0x6000C98")]
	[Address(RVA = "0xC94FD4", Offset = "0xC94FD4", VA = "0xC94FD4", Slot = "6")]
	protected override void SetFromSave()
	{
	}
}
[Token(Token = "0x2000259")]
public class HandPref : Playerpref
{
	[Token(Token = "0x4000BA6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private EnumValue<Cubism.Hand> _handValue;

	[Token(Token = "0x4000BA7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Cubism.Hand _default;

	[Token(Token = "0x6000C99")]
	[Address(RVA = "0xC95030", Offset = "0xC95030", VA = "0xC95030")]
	public HandPref(string key, EnumValue<Cubism.Hand> handValue, Cubism.Hand defaultValue)
	{
	}

	[Token(Token = "0x6000C9A")]
	[Address(RVA = "0xC95088", Offset = "0xC95088", VA = "0xC95088", Slot = "4")]
	public override void SubscribeToChangeEvents()
	{
	}

	[Token(Token = "0x6000C9B")]
	[Address(RVA = "0xC95118", Offset = "0xC95118", VA = "0xC95118", Slot = "5")]
	public override void UpdateSave()
	{
	}

	[Token(Token = "0x6000C9C")]
	[Address(RVA = "0xC951A8", Offset = "0xC951A8", VA = "0xC951A8", Slot = "6")]
	protected override void SetFromSave()
	{
	}
}
[Token(Token = "0x200025A")]
public class IntPref : Playerpref
{
	[Token(Token = "0x4000BA8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private IntValue _value;

	[Token(Token = "0x4000BA9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int _default;

	[Token(Token = "0x6000C9D")]
	[Address(RVA = "0xC952E8", Offset = "0xC952E8", VA = "0xC952E8")]
	public IntPref(string key, IntValue value, int defaultValue)
	{
	}

	[Token(Token = "0x6000C9E")]
	[Address(RVA = "0xC95340", Offset = "0xC95340", VA = "0xC95340", Slot = "4")]
	public override void SubscribeToChangeEvents()
	{
	}

	[Token(Token = "0x6000C9F")]
	[Address(RVA = "0xC953D0", Offset = "0xC953D0", VA = "0xC953D0", Slot = "5")]
	public override void UpdateSave()
	{
	}

	[Token(Token = "0x6000CA0")]
	[Address(RVA = "0xC95408", Offset = "0xC95408", VA = "0xC95408", Slot = "6")]
	protected override void SetFromSave()
	{
	}
}
[Token(Token = "0x200025B")]
public abstract class Playerpref
{
	[Token(Token = "0x4000BAA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string key;

	[Token(Token = "0x6000CA1")]
	public abstract void SubscribeToChangeEvents();

	[Token(Token = "0x6000CA2")]
	public abstract void UpdateSave();

	[Token(Token = "0x6000CA3")]
	protected abstract void SetFromSave();

	[Token(Token = "0x6000CA4")]
	[Address(RVA = "0xC94D50", Offset = "0xC94D50", VA = "0xC94D50")]
	public Playerpref(string key)
	{
	}

	[Token(Token = "0x6000CA5")]
	[Address(RVA = "0xC95468", Offset = "0xC95468", VA = "0xC95468")]
	public void Clear()
	{
	}
}
[Token(Token = "0x200025C")]
public class PlayerPrefSaver
{
	[Token(Token = "0x4000BAB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private List<Playerpref> _settings;

	[Token(Token = "0x6000CA6")]
	[Address(RVA = "0xC95490", Offset = "0xC95490", VA = "0xC95490")]
	public PlayerPrefSaver(SettingsModel settings, EditorModel editorModel)
	{
	}

	[Token(Token = "0x6000CA7")]
	[Address(RVA = "0xC96A14", Offset = "0xC96A14", VA = "0xC96A14")]
	public void Reset()
	{
	}
}
[Token(Token = "0x200025D")]
public class RotationPref : Playerpref
{
	[Token(Token = "0x4000BAC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private RestrictRotationValue _value;

	[Token(Token = "0x6000CA8")]
	[Address(RVA = "0xC96B74", Offset = "0xC96B74", VA = "0xC96B74")]
	public RotationPref(string key, RestrictRotationValue value)
	{
	}

	[Token(Token = "0x6000CA9")]
	[Address(RVA = "0xC96BBC", Offset = "0xC96BBC", VA = "0xC96BBC", Slot = "4")]
	public override void SubscribeToChangeEvents()
	{
	}

	[Token(Token = "0x6000CAA")]
	[Address(RVA = "0xC96C4C", Offset = "0xC96C4C", VA = "0xC96C4C", Slot = "5")]
	public override void UpdateSave()
	{
	}

	[Token(Token = "0x6000CAB")]
	[Address(RVA = "0xC96C8C", Offset = "0xC96C8C", VA = "0xC96C8C", Slot = "6")]
	protected override void SetFromSave()
	{
	}

	[Token(Token = "0x6000CAC")]
	[Address(RVA = "0xC96C84", Offset = "0xC96C84", VA = "0xC96C84")]
	private int BoolToInt(bool value)
	{
		return default(int);
	}

	[Token(Token = "0x6000CAD")]
	[Address(RVA = "0xC96CE0", Offset = "0xC96CE0", VA = "0xC96CE0")]
	private bool IntToBool(int value)
	{
		return default(bool);
	}
}
[Token(Token = "0x200025E")]
public class StringPref : Playerpref
{
	[Token(Token = "0x4000BAD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private StringValue _stringValue;

	[Token(Token = "0x4000BAE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private string _default;

	[Token(Token = "0x6000CAE")]
	[Address(RVA = "0xC96CEC", Offset = "0xC96CEC", VA = "0xC96CEC")]
	public StringPref(string key, StringValue boolValue, string defaultValue)
	{
	}

	[Token(Token = "0x6000CAF")]
	[Address(RVA = "0xC96D44", Offset = "0xC96D44", VA = "0xC96D44", Slot = "4")]
	public override void SubscribeToChangeEvents()
	{
	}

	[Token(Token = "0x6000CB0")]
	[Address(RVA = "0xC96DD4", Offset = "0xC96DD4", VA = "0xC96DD4", Slot = "5")]
	public override void UpdateSave()
	{
	}

	[Token(Token = "0x6000CB1")]
	[Address(RVA = "0xC96E0C", Offset = "0xC96E0C", VA = "0xC96E0C", Slot = "6")]
	protected override void SetFromSave()
	{
	}
}
[Token(Token = "0x200025F")]
public class SidebarToggle : MonoBehaviour
{
	[Token(Token = "0x4000BAF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Toggle _toggleMenu;

	[Token(Token = "0x4000BB0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool _isOpen;

	[Token(Token = "0x6000CB2")]
	[Address(RVA = "0xC96E6C", Offset = "0xC96E6C", VA = "0xC96E6C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000CB3")]
	[Address(RVA = "0xC96F1C", Offset = "0xC96F1C", VA = "0xC96F1C")]
	public void ToggleSideBar(bool turnOn)
	{
	}

	[Token(Token = "0x6000CB4")]
	[Address(RVA = "0xC96F94", Offset = "0xC96F94", VA = "0xC96F94")]
	public bool IsOpen()
	{
		return default(bool);
	}

	[Token(Token = "0x6000CB5")]
	[Address(RVA = "0xC96F28", Offset = "0xC96F28", VA = "0xC96F28")]
	private void ShowSideBar()
	{
	}

	[Token(Token = "0x6000CB6")]
	[Address(RVA = "0xC96F64", Offset = "0xC96F64", VA = "0xC96F64")]
	private void HideSideBar()
	{
	}

	[Token(Token = "0x6000CB7")]
	[Address(RVA = "0xC96F9C", Offset = "0xC96F9C", VA = "0xC96F9C")]
	public SidebarToggle()
	{
	}
}
[Token(Token = "0x2000260")]
public class SliderValueView : MonoBehaviour
{
	[Token(Token = "0x4000BB1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Slider _slider;

	[Token(Token = "0x4000BB2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public InputField _inputField;

	[Token(Token = "0x4000BB3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Text _value;

	[Token(Token = "0x6000CB8")]
	[Address(RVA = "0xC96FAC", Offset = "0xC96FAC", VA = "0xC96FAC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000CB9")]
	[Address(RVA = "0xC970D0", Offset = "0xC970D0", VA = "0xC970D0")]
	private void UpdateSlider(string value)
	{
	}

	[Token(Token = "0x6000CBA")]
	[Address(RVA = "0xC97160", Offset = "0xC97160", VA = "0xC97160")]
	private void UpdateInputField(float value)
	{
	}

	[Token(Token = "0x6000CBB")]
	[Address(RVA = "0xC971A0", Offset = "0xC971A0", VA = "0xC971A0")]
	public SliderValueView()
	{
	}
}
[Token(Token = "0x2000261")]
public class StageLabel : MonoBehaviour
{
	[Token(Token = "0x2000262")]
	[CompilerGenerated]
	private sealed class <UnlockSequence>d__10 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000BBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000BBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000BBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public StageLabel <>4__this;

		[Token(Token = "0x170000E5")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000CCB")]
			[Address(RVA = "0xC977B0", Offset = "0xC977B0", VA = "0xC977B0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000E6")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000CCD")]
			[Address(RVA = "0xC977F8", Offset = "0xC977F8", VA = "0xC977F8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000CC8")]
		[Address(RVA = "0xC97408", Offset = "0xC97408", VA = "0xC97408")]
		[DebuggerHidden]
		public <UnlockSequence>d__10(int <>1__state)
		{
		}

		[Token(Token = "0x6000CC9")]
		[Address(RVA = "0xC976C8", Offset = "0xC976C8", VA = "0xC976C8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000CCA")]
		[Address(RVA = "0xC976CC", Offset = "0xC976CC", VA = "0xC976CC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000CCC")]
		[Address(RVA = "0xC977B8", Offset = "0xC977B8", VA = "0xC977B8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000BB4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public VrInteractable _interactable;

	[Token(Token = "0x4000BB5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject _label;

	[Token(Token = "0x4000BB6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Text _progressLabelText;

	[Token(Token = "0x4000BB7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject _lockedLabel;

	[Token(Token = "0x4000BB8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject _unlockedLabel;

	[Token(Token = "0x4000BB9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private StageModel _stageOld;

	[Token(Token = "0x4000BBA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Stage _stage;

	[Token(Token = "0x4000BBB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private StageSet _set;

	[Token(Token = "0x6000CBC")]
	[Address(RVA = "0xC971A8", Offset = "0xC971A8", VA = "0xC971A8")]
	public void Setup(StageSet set, Stage stage)
	{
	}

	[Token(Token = "0x6000CBD")]
	[Address(RVA = "0xC97378", Offset = "0xC97378", VA = "0xC97378")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000CBE")]
	[Address(RVA = "0xC973A0", Offset = "0xC973A0", VA = "0xC973A0")]
	[IteratorStateMachine(typeof(<UnlockSequence>d__10))]
	public IEnumerator UnlockSequence()
	{
		return null;
	}

	[Token(Token = "0x6000CBF")]
	[Address(RVA = "0xC971EC", Offset = "0xC971EC", VA = "0xC971EC")]
	private void SetState()
	{
	}

	[Token(Token = "0x6000CC0")]
	[Address(RVA = "0xC97240", Offset = "0xC97240", VA = "0xC97240")]
	private void SubscribeToEvents()
	{
	}

	[Token(Token = "0x6000CC1")]
	[Address(RVA = "0xC97468", Offset = "0xC97468", VA = "0xC97468")]
	private void SetLocked()
	{
	}

	[Token(Token = "0x6000CC2")]
	[Address(RVA = "0xC97430", Offset = "0xC97430", VA = "0xC97430")]
	private void SetUnLocked()
	{
	}

	[Token(Token = "0x6000CC3")]
	[Address(RVA = "0xC975D8", Offset = "0xC975D8", VA = "0xC975D8")]
	private void ShowLabel()
	{
	}

	[Token(Token = "0x6000CC4")]
	[Address(RVA = "0xC971CC", Offset = "0xC971CC", VA = "0xC971CC")]
	private void HideLabel()
	{
	}

	[Token(Token = "0x6000CC5")]
	[Address(RVA = "0xC97600", Offset = "0xC97600", VA = "0xC97600")]
	private void UpdateProgressText()
	{
	}

	[Token(Token = "0x6000CC6")]
	[Address(RVA = "0xC976BC", Offset = "0xC976BC", VA = "0xC976BC")]
	public StageLabel()
	{
	}
}
[Token(Token = "0x2000263")]
public class StageTab : MonoBehaviour
{
	[Token(Token = "0x2000264")]
	[CompilerGenerated]
	private sealed class <PlayUnlockSequence>d__35 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000BD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000BD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000BDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public StageTab <>4__this;

		[Token(Token = "0x170000E7")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000CE1")]
			[Address(RVA = "0xC98BE0", Offset = "0xC98BE0", VA = "0xC98BE0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000E8")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000CE3")]
			[Address(RVA = "0xC98C28", Offset = "0xC98C28", VA = "0xC98C28", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000CDE")]
		[Address(RVA = "0xC98300", Offset = "0xC98300", VA = "0xC98300")]
		[DebuggerHidden]
		public <PlayUnlockSequence>d__35(int <>1__state)
		{
		}

		[Token(Token = "0x6000CDF")]
		[Address(RVA = "0xC9865C", Offset = "0xC9865C", VA = "0xC9865C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000CE0")]
		[Address(RVA = "0xC98660", Offset = "0xC98660", VA = "0xC98660", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000CE2")]
		[Address(RVA = "0xC98BE8", Offset = "0xC98BE8", VA = "0xC98BE8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000265")]
	[CompilerGenerated]
	private sealed class <PlayUnlockJingle>d__36 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000BDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000BDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000BDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private PlayNoteOptions <options>5__2;

		[Token(Token = "0x170000E9")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000CE7")]
			[Address(RVA = "0xC98DB8", Offset = "0xC98DB8", VA = "0xC98DB8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000EA")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000CE9")]
			[Address(RVA = "0xC98E00", Offset = "0xC98E00", VA = "0xC98E00", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000CE4")]
		[Address(RVA = "0xC98388", Offset = "0xC98388", VA = "0xC98388")]
		[DebuggerHidden]
		public <PlayUnlockJingle>d__36(int <>1__state)
		{
		}

		[Token(Token = "0x6000CE5")]
		[Address(RVA = "0xC98C30", Offset = "0xC98C30", VA = "0xC98C30", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000CE6")]
		[Address(RVA = "0xC98C34", Offset = "0xC98C34", VA = "0xC98C34", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000CE8")]
		[Address(RVA = "0xC98DC0", Offset = "0xC98DC0", VA = "0xC98DC0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000BBF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public VrToggle _toggle;

	[Token(Token = "0x4000BC0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Text _stageText;

	[Token(Token = "0x4000BC1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject _cubeLight;

	[Token(Token = "0x4000BC2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject _cubeDark;

	[Token(Token = "0x4000BC3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Rigidbody _lock;

	[Token(Token = "0x4000BC4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Animator _animator;

	[Token(Token = "0x4000BC5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public VrInteractable _interactable;

	[Token(Token = "0x4000BC6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public StageLabel _stageLabel;

	[Token(Token = "0x4000BC7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public ThicknessEffect _thickness;

	[Token(Token = "0x4000BC8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[Space(15f)]
	public Material _unsolvedTextMat;

	[Token(Token = "0x4000BC9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Material _solvedTextMat;

	[Token(Token = "0x4000BCA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Transform _levelTrayParent;

	[Token(Token = "0x4000BCB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Transform _disabledParent;

	[Token(Token = "0x4000BCC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private GameObject _levelTray;

	[Token(Token = "0x4000BCD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private StageModel _stageOld;

	[Token(Token = "0x4000BCE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private Stage _stage;

	[Token(Token = "0x4000BCF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private Transform _lockParent;

	[Token(Token = "0x4000BD0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private StageSet _set;

	[Token(Token = "0x4000BD1")]
	private const string ResetAnim = "Neutral";

	[Token(Token = "0x4000BD2")]
	private const string LockedAnim = "Locked";

	[Token(Token = "0x4000BD3")]
	private const string UnlockAnim = "Open";

	[Token(Token = "0x4000BD4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private bool _playUnlockWhenEnabled;

	[Token(Token = "0x4000BD5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA9")]
	private bool _playingUnlock;

	[Token(Token = "0x4000BD6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private EdgePing _edgePing;

	[Token(Token = "0x4000BD7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private LevelMiniature[] _levelMiniatures;

	[Token(Token = "0x6000CCE")]
	[Address(RVA = "0xC97800", Offset = "0xC97800", VA = "0xC97800")]
	public void Setup(GameObject levelTray, StageSet set, Stage stage, VrToggleGroup toggleGroup)
	{
	}

	[Token(Token = "0x6000CCF")]
	[Address(RVA = "0xC97F14", Offset = "0xC97F14", VA = "0xC97F14")]
	private void Update()
	{
	}

	[Token(Token = "0x6000CD0")]
	[Address(RVA = "0xC97FAC", Offset = "0xC97FAC", VA = "0xC97FAC")]
	public void Open()
	{
	}

	[Token(Token = "0x6000CD1")]
	[Address(RVA = "0xC97D98", Offset = "0xC97D98", VA = "0xC97D98")]
	private void LockVisible(bool visible)
	{
	}

	[Token(Token = "0x6000CD2")]
	[Address(RVA = "0xC97E94", Offset = "0xC97E94", VA = "0xC97E94")]
	private void UpdateProgress(Progress progress)
	{
	}

	[Token(Token = "0x6000CD3")]
	[Address(RVA = "0xC97FD4", Offset = "0xC97FD4", VA = "0xC97FD4")]
	private void SetUnCompletedTheme()
	{
	}

	[Token(Token = "0x6000CD4")]
	[Address(RVA = "0xC97BC0", Offset = "0xC97BC0", VA = "0xC97BC0")]
	public void ToggleLevelTray(bool on)
	{
	}

	[Token(Token = "0x6000CD5")]
	[Address(RVA = "0xC97ACC", Offset = "0xC97ACC", VA = "0xC97ACC")]
	private Transform GetDisabledparent()
	{
		return null;
	}

	[Token(Token = "0x6000CD6")]
	[Address(RVA = "0xC981C4", Offset = "0xC981C4", VA = "0xC981C4")]
	private void PlayLockedAnimIfLocked()
	{
	}

	[Token(Token = "0x6000CD7")]
	[Address(RVA = "0xC98028", Offset = "0xC98028", VA = "0xC98028")]
	private void Lock()
	{
	}

	[Token(Token = "0x6000CD8")]
	[Address(RVA = "0xC97F44", Offset = "0xC97F44", VA = "0xC97F44")]
	[IteratorStateMachine(typeof(<PlayUnlockSequence>d__35))]
	private IEnumerator PlayUnlockSequence()
	{
		return null;
	}

	[Token(Token = "0x6000CD9")]
	[Address(RVA = "0xC98328", Offset = "0xC98328", VA = "0xC98328")]
	[IteratorStateMachine(typeof(<PlayUnlockJingle>d__36))]
	private IEnumerator PlayUnlockJingle()
	{
		return null;
	}

	[Token(Token = "0x6000CDA")]
	[Address(RVA = "0xC983B0", Offset = "0xC983B0", VA = "0xC983B0")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000CDB")]
	[Address(RVA = "0xC98484", Offset = "0xC98484", VA = "0xC98484")]
	private void TrackOpenedStage()
	{
	}

	[Token(Token = "0x6000CDC")]
	[Address(RVA = "0xC98600", Offset = "0xC98600", VA = "0xC98600")]
	public StageTab()
	{
	}
}
[Token(Token = "0x2000266")]
public class StageUi : MonoBehaviour
{
	[Token(Token = "0x4000BDE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Text _title;

	[Token(Token = "0x4000BDF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Text _subtitle;

	[Token(Token = "0x4000BE0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform _levelParent;

	[Token(Token = "0x4000BE1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Stage _stage;

	[Token(Token = "0x6000CEA")]
	[Address(RVA = "0xC98E08", Offset = "0xC98E08", VA = "0xC98E08")]
	public void Setup(Stage stage)
	{
	}

	[Token(Token = "0x6000CEB")]
	[Address(RVA = "0xC991D0", Offset = "0xC991D0", VA = "0xC991D0")]
	private string IntToFormattedString(int value)
	{
		return null;
	}

	[Token(Token = "0x6000CEC")]
	[Address(RVA = "0xC99240", Offset = "0xC99240", VA = "0xC99240")]
	private void UpdateDisplay(Progress progress)
	{
	}

	[Token(Token = "0x6000CED")]
	[Address(RVA = "0xC993C8", Offset = "0xC993C8", VA = "0xC993C8")]
	public StageUi()
	{
	}
}
[Token(Token = "0x2000267")]
public class Switch : Interactable
{
	[Token(Token = "0x4000BE2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public LayerMask interactableLayers;

	[Token(Token = "0x4000BE3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public UnityEvent OnActivated;

	[Token(Token = "0x4000BE4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public UnityEvent OnDeActivated;

	[Token(Token = "0x4000BE5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Animator _anim;

	[Token(Token = "0x4000BE6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Toggle _toggle;

	[Token(Token = "0x4000BE7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private bool _active;

	[Token(Token = "0x6000CEE")]
	[Address(RVA = "0xC993D0", Offset = "0xC993D0", VA = "0xC993D0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000CEF")]
	[Address(RVA = "0xC99478", Offset = "0xC99478", VA = "0xC99478")]
	private void SetFromToggle(bool value)
	{
	}

	[Token(Token = "0x6000CF0")]
	[Address(RVA = "0xC99500", Offset = "0xC99500", VA = "0xC99500")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000CF1")]
	[Address(RVA = "0xC995B4", Offset = "0xC995B4", VA = "0xC995B4")]
	private void Activate()
	{
	}

	[Token(Token = "0x6000CF2")]
	[Address(RVA = "0xC99484", Offset = "0xC99484", VA = "0xC99484")]
	private void DeActivate()
	{
	}

	[Token(Token = "0x6000CF3")]
	[Address(RVA = "0xC99634", Offset = "0xC99634", VA = "0xC99634")]
	public Switch()
	{
	}
}
[Token(Token = "0x2000268")]
public class TagOrientation : MonoBehaviour
{
	[Token(Token = "0x6000CF4")]
	[Address(RVA = "0xC99644", Offset = "0xC99644", VA = "0xC99644")]
	public void Setup(Transform reference)
	{
	}

	[Token(Token = "0x6000CF5")]
	[Address(RVA = "0xC99688", Offset = "0xC99688", VA = "0xC99688")]
	public TagOrientation()
	{
	}
}
[Token(Token = "0x2000269")]
[RequireComponent(typeof(VrToggle))]
public class ToggleActivator : MonoBehaviour
{
	[Token(Token = "0x4000BE8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject _target;

	[Token(Token = "0x4000BE9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private VrToggle _toggle;

	[Token(Token = "0x6000CF6")]
	[Address(RVA = "0xC99690", Offset = "0xC99690", VA = "0xC99690")]
	private void Start()
	{
	}

	[Token(Token = "0x6000CF7")]
	[Address(RVA = "0xC99760", Offset = "0xC99760", VA = "0xC99760")]
	private void ToggleTarget(bool on)
	{
	}

	[Token(Token = "0x6000CF8")]
	[Address(RVA = "0xC99780", Offset = "0xC99780", VA = "0xC99780")]
	public ToggleActivator()
	{
	}
}
[Token(Token = "0x200026A")]
public class ToggleDeactivator : MonoBehaviour
{
	[Token(Token = "0x4000BEA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject _target;

	[Token(Token = "0x4000BEB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private VrToggle _toggle;

	[Token(Token = "0x6000CF9")]
	[Address(RVA = "0xC99788", Offset = "0xC99788", VA = "0xC99788")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000CFA")]
	[Address(RVA = "0xC99860", Offset = "0xC99860", VA = "0xC99860")]
	private void ToggleTarget(bool on)
	{
	}

	[Token(Token = "0x6000CFB")]
	[Address(RVA = "0xC99884", Offset = "0xC99884", VA = "0xC99884")]
	public ToggleDeactivator()
	{
	}
}
[Token(Token = "0x200026B")]
public class ToggleMenuController : StateBehaviour
{
	[Token(Token = "0x4000BEC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public VrToggle _toggle;

	[Token(Token = "0x4000BED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public MenuAnchor _anchor;

	[Token(Token = "0x6000CFC")]
	[Address(RVA = "0xC9988C", Offset = "0xC9988C", VA = "0xC9988C", Slot = "5")]
	protected override void ForceSetup()
	{
	}

	[Token(Token = "0x6000CFD")]
	[Address(RVA = "0xC99914", Offset = "0xC99914", VA = "0xC99914")]
	private void ToggleMenu(bool visible)
	{
	}

	[Token(Token = "0x6000CFE")]
	[Address(RVA = "0xC99ACC", Offset = "0xC99ACC", VA = "0xC99ACC")]
	public ToggleMenuController()
	{
	}
}
[Token(Token = "0x200026C")]
[RequireComponent(typeof(VrToggle))]
public class ToggleOffOnClose : MonoBehaviour
{
	[Token(Token = "0x4000BEE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private VrToggle _toggle;

	[Token(Token = "0x6000CFF")]
	[Address(RVA = "0xC99AD4", Offset = "0xC99AD4", VA = "0xC99AD4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000D00")]
	[Address(RVA = "0xC99B24", Offset = "0xC99B24", VA = "0xC99B24")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000D01")]
	[Address(RVA = "0xC99BF4", Offset = "0xC99BF4", VA = "0xC99BF4")]
	public ToggleOffOnClose()
	{
	}
}
[Token(Token = "0x200026D")]
[ExecuteInEditMode]
public class TooltipBezierPositions : StateBehaviour
{
	[Token(Token = "0x4000BEF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public BezierDrawer _bezier;

	[Token(Token = "0x4000BF0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform _start;

	[Token(Token = "0x4000BF1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform _end;

	[Token(Token = "0x4000BF2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float _tangentDistance;

	[Token(Token = "0x4000BF3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float _size;

	[Token(Token = "0x4000BF4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Vector3[] p;

	[Token(Token = "0x6000D02")]
	[Address(RVA = "0xC94C40", Offset = "0xC94C40", VA = "0xC94C40")]
	public void SetStartEndAnchors(Transform start, Transform end)
	{
	}

	[Token(Token = "0x6000D03")]
	[Address(RVA = "0xC99BFC", Offset = "0xC99BFC", VA = "0xC99BFC")]
	public void SetStartAnchor(Transform start)
	{
	}

	[Token(Token = "0x6000D04")]
	[Address(RVA = "0xC99C04", Offset = "0xC99C04", VA = "0xC99C04")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000D05")]
	[Address(RVA = "0xC99DF0", Offset = "0xC99DF0", VA = "0xC99DF0")]
	private bool ReferencesSet()
	{
		return default(bool);
	}

	[Token(Token = "0x6000D06")]
	[Address(RVA = "0xC99EB0", Offset = "0xC99EB0", VA = "0xC99EB0")]
	public TooltipBezierPositions()
	{
	}
}
[Token(Token = "0x200026E")]
public class TriggerEvents : MonoBehaviour
{
	[Token(Token = "0x200026F")]
	[CompilerGenerated]
	private sealed class <TurnOffTriggerEnter>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000BF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000BF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000BFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TriggerEvents <>4__this;

		[Token(Token = "0x170000EB")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000D10")]
			[Address(RVA = "0xC9A0F4", Offset = "0xC9A0F4", VA = "0xC9A0F4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000EC")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000D12")]
			[Address(RVA = "0xC9A13C", Offset = "0xC9A13C", VA = "0xC9A13C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000D0D")]
		[Address(RVA = "0xC9A034", Offset = "0xC9A034", VA = "0xC9A034")]
		[DebuggerHidden]
		public <TurnOffTriggerEnter>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x6000D0E")]
		[Address(RVA = "0xC9A08C", Offset = "0xC9A08C", VA = "0xC9A08C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000D0F")]
		[Address(RVA = "0xC9A090", Offset = "0xC9A090", VA = "0xC9A090", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000D11")]
		[Address(RVA = "0xC9A0FC", Offset = "0xC9A0FC", VA = "0xC9A0FC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000270")]
	[CompilerGenerated]
	private sealed class <TurnOffTriggerExit>d__7 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000BFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000BFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000BFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TriggerEvents <>4__this;

		[Token(Token = "0x170000ED")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000D16")]
			[Address(RVA = "0xC9A1AC", Offset = "0xC9A1AC", VA = "0xC9A1AC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000EE")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000D18")]
			[Address(RVA = "0xC9A1F4", Offset = "0xC9A1F4", VA = "0xC9A1F4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000D13")]
		[Address(RVA = "0xC9A05C", Offset = "0xC9A05C", VA = "0xC9A05C")]
		[DebuggerHidden]
		public <TurnOffTriggerExit>d__7(int <>1__state)
		{
		}

		[Token(Token = "0x6000D14")]
		[Address(RVA = "0xC9A144", Offset = "0xC9A144", VA = "0xC9A144", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000D15")]
		[Address(RVA = "0xC9A148", Offset = "0xC9A148", VA = "0xC9A148", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000D17")]
		[Address(RVA = "0xC9A1B4", Offset = "0xC9A1B4", VA = "0xC9A1B4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000BF5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool triggerEnter;

	[Token(Token = "0x4000BF6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool triggerStay;

	[Token(Token = "0x4000BF7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	public bool triggerExit;

	[Token(Token = "0x6000D07")]
	[Address(RVA = "0xC99F14", Offset = "0xC99F14", VA = "0xC99F14")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000D08")]
	[Address(RVA = "0xC99F9C", Offset = "0xC99F9C", VA = "0xC99F9C")]
	private void OnTriggerStay(Collider other)
	{
	}

	[Token(Token = "0x6000D09")]
	[Address(RVA = "0xC99FA8", Offset = "0xC99FA8", VA = "0xC99FA8")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x6000D0A")]
	[Address(RVA = "0xC99F34", Offset = "0xC99F34", VA = "0xC99F34")]
	[IteratorStateMachine(typeof(<TurnOffTriggerEnter>d__6))]
	private IEnumerator TurnOffTriggerEnter()
	{
		return null;
	}

	[Token(Token = "0x6000D0B")]
	[Address(RVA = "0xC99FCC", Offset = "0xC99FCC", VA = "0xC99FCC")]
	[IteratorStateMachine(typeof(<TurnOffTriggerExit>d__7))]
	private IEnumerator TurnOffTriggerExit()
	{
		return null;
	}

	[Token(Token = "0x6000D0C")]
	[Address(RVA = "0xC9A084", Offset = "0xC9A084", VA = "0xC9A084")]
	public TriggerEvents()
	{
	}
}
[Token(Token = "0x2000271")]
public class TwoButtonToggle : MonoBehaviour
{
	[Token(Token = "0x4000BFE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public VrButton buttonA;

	[Token(Token = "0x4000BFF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public VrButton buttonB;

	[Token(Token = "0x4000C00")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject panelA;

	[Token(Token = "0x4000C01")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject panelB;

	[Token(Token = "0x6000D19")]
	[Address(RVA = "0xC9A1FC", Offset = "0xC9A1FC", VA = "0xC9A1FC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000D1A")]
	[Address(RVA = "0xC9A2D4", Offset = "0xC9A2D4", VA = "0xC9A2D4")]
	private void TogglePanels(bool aVisible)
	{
	}

	[Token(Token = "0x6000D1B")]
	[Address(RVA = "0xC9A35C", Offset = "0xC9A35C", VA = "0xC9A35C")]
	public TwoButtonToggle()
	{
	}
}
[Token(Token = "0x2000272")]
public class UiAngleService : SetupableBehaviour
{
	[Token(Token = "0x4000C02")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float _maxUiHeight;

	[Token(Token = "0x4000C03")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float _angleOffset;

	[Token(Token = "0x4000C04")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public LayerMask _floor;

	[Token(Token = "0x4000C05")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float _targetAngle;

	[Token(Token = "0x4000C06")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private Ray _ray;

	[Token(Token = "0x4000C07")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private RaycastHit _hit;

	[Token(Token = "0x4000C08")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private GameState _state;

	[Token(Token = "0x4000C09")]
	public const float MinAngle = 45f;

	[Token(Token = "0x4000C0A")]
	private const float RaycastOffset = 0.2f;

	[Token(Token = "0x6000D1E")]
	[Address(RVA = "0xC9A374", Offset = "0xC9A374", VA = "0xC9A374")]
	public void Setup(GameState state)
	{
	}

	[Token(Token = "0x6000D1F")]
	[Address(RVA = "0xC9A398", Offset = "0xC9A398", VA = "0xC9A398")]
	private void Update()
	{
	}

	[Token(Token = "0x6000D20")]
	[Address(RVA = "0xC9A670", Offset = "0xC9A670", VA = "0xC9A670")]
	private void UpdateTargetAngle()
	{
	}

	[Token(Token = "0x6000D21")]
	[Address(RVA = "0xC9A4D0", Offset = "0xC9A4D0", VA = "0xC9A4D0")]
	private void UpdateMenuPositionValues()
	{
	}

	[Token(Token = "0x6000D22")]
	[Address(RVA = "0xC9A6D0", Offset = "0xC9A6D0", VA = "0xC9A6D0")]
	public UiAngleService()
	{
	}
}
[Token(Token = "0x2000273")]
public class UiButton : Interactable
{
	[Token(Token = "0x4000C0B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public LayerMask interactableLayers;

	[Token(Token = "0x4000C0C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public UnityEvent OnDown;

	[Token(Token = "0x4000C0D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public UnityEvent OnUp;

	[Token(Token = "0x4000C0E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Animator _anim;

	[Token(Token = "0x6000D23")]
	[Address(RVA = "0xC9A6EC", Offset = "0xC9A6EC", VA = "0xC9A6EC")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000D24")]
	[Address(RVA = "0xC9A7C8", Offset = "0xC9A7C8", VA = "0xC9A7C8")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x6000D25")]
	[Address(RVA = "0xC9A8A4", Offset = "0xC9A8A4", VA = "0xC9A8A4")]
	public UiButton()
	{
	}
}
[Token(Token = "0x2000274")]
[ExecuteInEditMode]
public class UiColor : StateBehaviour
{
	[Token(Token = "0x4000C10")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Material color;

	[Token(Token = "0x4000C11")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Color matColor;

	[Token(Token = "0x4000C12")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Renderer blob;

	[Token(Token = "0x4000C13")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Renderer cube;

	[Token(Token = "0x4000C14")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public VrToggle toggle;

	[Token(Token = "0x4000C15")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private MaterialPropertyBlock _propBlock;

	[Token(Token = "0x14000074")]
	public event Action<Color, bool> OnSelect
	{
		[Token(Token = "0x6000D26")]
		[Address(RVA = "0xC9A8B4", Offset = "0xC9A8B4", VA = "0xC9A8B4")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000D27")]
		[Address(RVA = "0xC9A964", Offset = "0xC9A964", VA = "0xC9A964")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x6000D28")]
	[Address(RVA = "0xC9AA14", Offset = "0xC9AA14", VA = "0xC9AA14")]
	private void Start()
	{
	}

	[Token(Token = "0x6000D29")]
	[Address(RVA = "0xC9AC84", Offset = "0xC9AC84", VA = "0xC9AC84")]
	private void Update()
	{
	}

	[Token(Token = "0x6000D2A")]
	[Address(RVA = "0xC9ADD8", Offset = "0xC9ADD8", VA = "0xC9ADD8")]
	private void CallSelectedEvent(bool on)
	{
	}

	[Token(Token = "0x6000D2B")]
	[Address(RVA = "0xC9ABB4", Offset = "0xC9ABB4", VA = "0xC9ABB4")]
	private Color GetCubeColor()
	{
		return default(Color);
	}

	[Token(Token = "0x6000D2C")]
	[Address(RVA = "0xC9AE84", Offset = "0xC9AE84", VA = "0xC9AE84")]
	public UiColor()
	{
	}
}
[Token(Token = "0x2000275")]
[ExecuteInEditMode]
public class UiMaterial : MonoBehaviour
{
	[Token(Token = "0x4000C17")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public MaterialSwapEffect materialSwapEffect;

	[Token(Token = "0x4000C18")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string materialKey;

	[Token(Token = "0x4000C19")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Renderer blob;

	[Token(Token = "0x4000C1A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public VrToggle toggle;

	[Token(Token = "0x14000075")]
	public event Action<string> OnSelect
	{
		[Token(Token = "0x6000D2D")]
		[Address(RVA = "0xC9AE8C", Offset = "0xC9AE8C", VA = "0xC9AE8C")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000D2E")]
		[Address(RVA = "0xC9AF3C", Offset = "0xC9AF3C", VA = "0xC9AF3C")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x6000D2F")]
	[Address(RVA = "0xC9AFEC", Offset = "0xC9AFEC", VA = "0xC9AFEC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000D30")]
	[Address(RVA = "0xC9B0D4", Offset = "0xC9B0D4", VA = "0xC9B0D4")]
	private void CallSelectedEvent(bool on)
	{
	}

	[Token(Token = "0x6000D31")]
	[Address(RVA = "0xC9B0F8", Offset = "0xC9B0F8", VA = "0xC9B0F8")]
	public UiMaterial()
	{
	}
}
[Token(Token = "0x2000276")]
public class UrlOpener : MonoBehaviour
{
	[Token(Token = "0x4000C1B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string url;

	[Token(Token = "0x6000D32")]
	[Address(RVA = "0xC9B100", Offset = "0xC9B100", VA = "0xC9B100")]
	public void Open()
	{
	}

	[Token(Token = "0x6000D33")]
	[Address(RVA = "0xC9B10C", Offset = "0xC9B10C", VA = "0xC9B10C")]
	public UrlOpener()
	{
	}
}
[Token(Token = "0x2000277")]
public class VrButton : Interactable
{
	[Token(Token = "0x4000C1E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool _clickDown;

	[Token(Token = "0x14000076")]
	public event Action OnClick
	{
		[Token(Token = "0x6000D34")]
		[Address(RVA = "0xC8B008", Offset = "0xC8B008", VA = "0xC8B008")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000D35")]
		[Address(RVA = "0xC913BC", Offset = "0xC913BC", VA = "0xC913BC")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x14000077")]
	public event Action OnClickUp
	{
		[Token(Token = "0x6000D36")]
		[Address(RVA = "0xC9B114", Offset = "0xC9B114", VA = "0xC9B114")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000D37")]
		[Address(RVA = "0xC9B1B0", Offset = "0xC9B1B0", VA = "0xC9B1B0")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x6000D38")]
	[Address(RVA = "0xC9B24C", Offset = "0xC9B24C", VA = "0xC9B24C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000D39")]
	[Address(RVA = "0xC9B3B4", Offset = "0xC9B3B4", VA = "0xC9B3B4")]
	private void OnCursorEnter(InteractionData data)
	{
	}

	[Token(Token = "0x6000D3A")]
	[Address(RVA = "0xC9B43C", Offset = "0xC9B43C", VA = "0xC9B43C")]
	private void OnCursorExit(InteractionData data)
	{
	}

	[Token(Token = "0x6000D3B")]
	[Address(RVA = "0xC9B450", Offset = "0xC9B450", VA = "0xC9B450")]
	private void ClickDown(InteractionData data)
	{
	}

	[Token(Token = "0x6000D3C")]
	[Address(RVA = "0xC9B560", Offset = "0xC9B560", VA = "0xC9B560")]
	private void ClickUp(InteractionData data)
	{
	}

	[Token(Token = "0x6000D3D")]
	[Address(RVA = "0xC9B5B8", Offset = "0xC9B5B8", VA = "0xC9B5B8")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000D3E")]
	[Address(RVA = "0xC9B5C4", Offset = "0xC9B5C4", VA = "0xC9B5C4")]
	public VrButton()
	{
	}
}
[Token(Token = "0x2000278")]
public class VrChar : MonoBehaviour
{
	[Token(Token = "0x4000C1F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public char character;

	[Token(Token = "0x4000C20")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform origin;

	[Token(Token = "0x4000C21")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Transform _nextAnchor;

	[Token(Token = "0x4000C22")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Transform _nextAnchorTight;

	[Token(Token = "0x4000C23")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private char[] _tightNextChars;

	[Token(Token = "0x6000D3F")]
	[Address(RVA = "0xC9B5D4", Offset = "0xC9B5D4", VA = "0xC9B5D4")]
	public Transform GetNextAnchor(char c)
	{
		return null;
	}

	[Token(Token = "0x6000D40")]
	[Address(RVA = "0xC9B644", Offset = "0xC9B644", VA = "0xC9B644")]
	public VrChar()
	{
	}
}
[Token(Token = "0x2000279")]
[CreateAssetMenu(menuName = "VrFont")]
public class VrFont : ScriptableObject
{
	[Token(Token = "0x4000C24")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject defaultCharacter;

	[Token(Token = "0x4000C25")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject[] chars;

	[Token(Token = "0x6000D41")]
	[Address(RVA = "0xC9B64C", Offset = "0xC9B64C", VA = "0xC9B64C")]
	public CharPrefab GetDefaultCharacter()
	{
		return null;
	}

	[Token(Token = "0x6000D42")]
	[Address(RVA = "0xC9B6EC", Offset = "0xC9B6EC", VA = "0xC9B6EC")]
	public Dictionary<char, CharPrefab> GetFontDictionary()
	{
		return null;
	}

	[Token(Token = "0x6000D43")]
	[Address(RVA = "0xC9B844", Offset = "0xC9B844", VA = "0xC9B844")]
	public VrFont()
	{
	}
}
[Serializable]
[Token(Token = "0x200027A")]
public class CharPrefab
{
	[Token(Token = "0x4000C26")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public VrChar vrChar;

	[Token(Token = "0x4000C27")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject charPrefab;

	[Token(Token = "0x6000D44")]
	[Address(RVA = "0xC9B6E4", Offset = "0xC9B6E4", VA = "0xC9B6E4")]
	public CharPrefab()
	{
	}
}
[Token(Token = "0x200027B")]
public class VrFontRenderer : MonoBehaviour
{
	[Token(Token = "0x4000C28")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public VrFont vrFont;

	[Token(Token = "0x4000C29")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string text;

	[Token(Token = "0x4000C2A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform origin;

	[Token(Token = "0x4000C2B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private string _prevText;

	[Token(Token = "0x4000C2C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool _fontLoaded;

	[Token(Token = "0x4000C2D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Dictionary<char, CharPrefab> _characterDictionary;

	[Token(Token = "0x4000C2E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private VrChar _prevChar;

	[Token(Token = "0x6000D45")]
	[Address(RVA = "0xC9B84C", Offset = "0xC9B84C", VA = "0xC9B84C")]
	public void Awake()
	{
	}

	[Token(Token = "0x6000D46")]
	[Address(RVA = "0xC9B984", Offset = "0xC9B984", VA = "0xC9B984")]
	public void ClearText()
	{
	}

	[Token(Token = "0x6000D47")]
	[Address(RVA = "0xC9BC94", Offset = "0xC9BC94", VA = "0xC9BC94")]
	private void LoadFont()
	{
	}

	[Token(Token = "0x6000D48")]
	[Address(RVA = "0xC9B850", Offset = "0xC9B850", VA = "0xC9B850")]
	public void RenderText()
	{
	}

	[Token(Token = "0x6000D49")]
	[Address(RVA = "0xC9BD10", Offset = "0xC9BD10", VA = "0xC9BD10")]
	private VrChar SpawnChar(char character)
	{
		return null;
	}

	[Token(Token = "0x6000D4A")]
	[Address(RVA = "0xC9BD18", Offset = "0xC9BD18", VA = "0xC9BD18")]
	private VrChar SpawnChar(char character, char previousCharacter)
	{
		return null;
	}

	[Token(Token = "0x6000D4B")]
	[Address(RVA = "0xC9BD5C", Offset = "0xC9BD5C", VA = "0xC9BD5C")]
	private VrChar SpawnChar(char character, Transform anchor)
	{
		return null;
	}

	[Token(Token = "0x6000D4C")]
	[Address(RVA = "0xC9BCB8", Offset = "0xC9BCB8", VA = "0xC9BCB8")]
	private bool HasChar(char c)
	{
		return default(bool);
	}

	[Token(Token = "0x6000D4D")]
	[Address(RVA = "0xC9BF00", Offset = "0xC9BF00", VA = "0xC9BF00")]
	private CharPrefab GetCharPrefab(char c)
	{
		return null;
	}

	[Token(Token = "0x6000D4E")]
	[Address(RVA = "0xC9B990", Offset = "0xC9B990", VA = "0xC9B990")]
	private void ClearAll()
	{
	}

	[Token(Token = "0x6000D4F")]
	[Address(RVA = "0xC9BFB4", Offset = "0xC9BFB4", VA = "0xC9BFB4")]
	public VrFontRenderer()
	{
	}
}
[Token(Token = "0x200027C")]
public class VrInteractable : Interactable
{
	[Token(Token = "0x4000C32")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool _hovered;

	[Token(Token = "0x14000078")]
	public event Action OnHoverOn
	{
		[Token(Token = "0x6000D50")]
		[Address(RVA = "0xC974A0", Offset = "0xC974A0", VA = "0xC974A0")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000D51")]
		[Address(RVA = "0xC9C030", Offset = "0xC9C030", VA = "0xC9C030")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x14000079")]
	public event Action OnHoverOff
	{
		[Token(Token = "0x6000D52")]
		[Address(RVA = "0xC9753C", Offset = "0xC9753C", VA = "0xC9753C")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000D53")]
		[Address(RVA = "0xC9C0CC", Offset = "0xC9C0CC", VA = "0xC9C0CC")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x1400007A")]
	public event Action OnClick
	{
		[Token(Token = "0x6000D54")]
		[Address(RVA = "0xC97DF8", Offset = "0xC97DF8", VA = "0xC97DF8")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000D55")]
		[Address(RVA = "0xC9C168", Offset = "0xC9C168", VA = "0xC9C168")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x6000D56")]
	[Address(RVA = "0xC9C204", Offset = "0xC9C204", VA = "0xC9C204")]
	public void Awake()
	{
	}

	[Token(Token = "0x6000D57")]
	[Address(RVA = "0xC9C324", Offset = "0xC9C324", VA = "0xC9C324")]
	protected void OnCursorEnter(InteractionData data)
	{
	}

	[Token(Token = "0x6000D58")]
	[Address(RVA = "0xC9C328", Offset = "0xC9C328", VA = "0xC9C328")]
	protected void OnCursorEnter()
	{
	}

	[Token(Token = "0x6000D59")]
	[Address(RVA = "0xC9C36C", Offset = "0xC9C36C", VA = "0xC9C36C")]
	protected void OnCursorExit(InteractionData data)
	{
	}

	[Token(Token = "0x6000D5A")]
	[Address(RVA = "0xC9C370", Offset = "0xC9C370", VA = "0xC9C370")]
	protected void OnCursorExit()
	{
	}

	[Token(Token = "0x6000D5B")]
	[Address(RVA = "0xC9C3B0", Offset = "0xC9C3B0", VA = "0xC9C3B0")]
	protected void OnClickDown(InteractionData data)
	{
	}

	[Token(Token = "0x6000D5C")]
	[Address(RVA = "0xC9C3CC", Offset = "0xC9C3CC", VA = "0xC9C3CC")]
	public VrInteractable()
	{
	}
}
[Token(Token = "0x200027D")]
public class VrSlider : MonoBehaviour
{
	[Token(Token = "0x4000C36")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float value;

	[Token(Token = "0x4000C37")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[Space(25f)]
	public VrButton _button;

	[Token(Token = "0x4000C38")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public RectTransform _buttonRect;

	[Token(Token = "0x4000C39")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public RectTransform _bar;

	[Token(Token = "0x4000C3A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public RectTransform _fill;

	[Token(Token = "0x4000C3B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public float hapticStep;

	[Token(Token = "0x4000C3C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	[Header("Debug")]
	private bool _held;

	[Token(Token = "0x4000C3D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private float _holdOffsetX;

	[Token(Token = "0x4000C3E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	[SerializeField]
	private float _lastTapValue;

	[Token(Token = "0x1400007B")]
	public event Action<float> OnValueChanged
	{
		[Token(Token = "0x6000D5D")]
		[Address(RVA = "0xC9C3DC", Offset = "0xC9C3DC", VA = "0xC9C3DC")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000D5E")]
		[Address(RVA = "0xC9C48C", Offset = "0xC9C48C", VA = "0xC9C48C")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x1400007C")]
	public event Action<float> OnClickDown
	{
		[Token(Token = "0x6000D5F")]
		[Address(RVA = "0xC9C53C", Offset = "0xC9C53C", VA = "0xC9C53C")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000D60")]
		[Address(RVA = "0xC9C5EC", Offset = "0xC9C5EC", VA = "0xC9C5EC")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x1400007D")]
	public event Action<float> OnClickUp
	{
		[Token(Token = "0x6000D61")]
		[Address(RVA = "0xC9C69C", Offset = "0xC9C69C", VA = "0xC9C69C")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000D62")]
		[Address(RVA = "0xC9C74C", Offset = "0xC9C74C", VA = "0xC9C74C")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x6000D63")]
	[Address(RVA = "0xC9C7FC", Offset = "0xC9C7FC", VA = "0xC9C7FC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000D64")]
	[Address(RVA = "0xC9C99C", Offset = "0xC9C99C", VA = "0xC9C99C")]
	private void FireOnRelease()
	{
	}

	[Token(Token = "0x6000D65")]
	[Address(RVA = "0xC9C9BC", Offset = "0xC9C9BC", VA = "0xC9C9BC")]
	private void SetClickedDown()
	{
	}

	[Token(Token = "0x6000D66")]
	[Address(RVA = "0xC9CA70", Offset = "0xC9CA70", VA = "0xC9CA70")]
	private void Update()
	{
	}

	[Token(Token = "0x6000D67")]
	[Address(RVA = "0xC9C8E0", Offset = "0xC9C8E0", VA = "0xC9C8E0")]
	public void SetValue(float value)
	{
	}

	[Token(Token = "0x6000D68")]
	[Address(RVA = "0xC9CE90", Offset = "0xC9CE90", VA = "0xC9CE90")]
	public bool IsHeld()
	{
		return default(bool);
	}

	[Token(Token = "0x6000D69")]
	[Address(RVA = "0xC9CE98", Offset = "0xC9CE98", VA = "0xC9CE98")]
	public VrSlider()
	{
	}
}
[Token(Token = "0x200027E")]
public class VrToggle : Interactable
{
	[Token(Token = "0x4000C43")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public bool isOn;

	[Token(Token = "0x4000C44")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public VrToggleGroup toggleGroup;

	[Token(Token = "0x4000C45")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public bool _allowHoverWhileInactive;

	[Token(Token = "0x4000C46")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x69")]
	public bool _interactionOnClickUp;

	[Token(Token = "0x4000C47")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6A")]
	private bool _hovered;

	[Token(Token = "0x4000C48")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6B")]
	private bool _clickDown;

	[Token(Token = "0x1400007E")]
	public event Action OnHoverOn
	{
		[Token(Token = "0x6000D6A")]
		[Address(RVA = "0xC9CEA0", Offset = "0xC9CEA0", VA = "0xC9CEA0")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000D6B")]
		[Address(RVA = "0xC9CF3C", Offset = "0xC9CF3C", VA = "0xC9CF3C")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x1400007F")]
	public event Action OnHoverOff
	{
		[Token(Token = "0x6000D6C")]
		[Address(RVA = "0xC9CFD8", Offset = "0xC9CFD8", VA = "0xC9CFD8")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000D6D")]
		[Address(RVA = "0xC9D074", Offset = "0xC9D074", VA = "0xC9D074")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x14000080")]
	public event Action<bool> OnToggle
	{
		[Token(Token = "0x6000D6E")]
		[Address(RVA = "0xC91E10", Offset = "0xC91E10", VA = "0xC91E10")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000D6F")]
		[Address(RVA = "0xC9D110", Offset = "0xC9D110", VA = "0xC9D110")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x14000081")]
	public event Action<bool> OnToggleByuser
	{
		[Token(Token = "0x6000D70")]
		[Address(RVA = "0xC8B0A4", Offset = "0xC8B0A4", VA = "0xC8B0A4")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000D71")]
		[Address(RVA = "0xC9D1C0", Offset = "0xC9D1C0", VA = "0xC9D1C0")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x6000D72")]
	[Address(RVA = "0xC9D270", Offset = "0xC9D270", VA = "0xC9D270")]
	public void Start()
	{
	}

	[Token(Token = "0x6000D73")]
	[Address(RVA = "0xC9D3F8", Offset = "0xC9D3F8", VA = "0xC9D3F8")]
	public void Update()
	{
	}

	[Token(Token = "0x6000D74")]
	[Address(RVA = "0xC97CC0", Offset = "0xC97CC0", VA = "0xC97CC0")]
	public void Toggle()
	{
	}

	[Token(Token = "0x6000D75")]
	[Address(RVA = "0xC9D450", Offset = "0xC9D450", VA = "0xC9D450")]
	public void Set(bool on)
	{
	}

	[Token(Token = "0x6000D76")]
	[Address(RVA = "0xC99BC8", Offset = "0xC99BC8", VA = "0xC99BC8")]
	public void Set(bool on, bool fireEvent)
	{
	}

	[Token(Token = "0x6000D77")]
	[Address(RVA = "0xC9D474", Offset = "0xC9D474", VA = "0xC9D474")]
	protected void OnCursorEnter(InteractionData data)
	{
	}

	[Token(Token = "0x6000D78")]
	[Address(RVA = "0xC9D53C", Offset = "0xC9D53C", VA = "0xC9D53C")]
	protected void OnCursorExit(InteractionData data)
	{
	}

	[Token(Token = "0x6000D79")]
	[Address(RVA = "0xC9D580", Offset = "0xC9D580", VA = "0xC9D580")]
	private void OnClick(InteractionData data)
	{
	}

	[Token(Token = "0x6000D7A")]
	[Address(RVA = "0xC9D5DC", Offset = "0xC9D5DC", VA = "0xC9D5DC")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000D7B")]
	[Address(RVA = "0xC9D520", Offset = "0xC9D520", VA = "0xC9D520")]
	private void FireOnHoverOn()
	{
	}

	[Token(Token = "0x6000D7C")]
	[Address(RVA = "0xC9D564", Offset = "0xC9D564", VA = "0xC9D564")]
	private void FireOnHoverOff()
	{
	}

	[Token(Token = "0x6000D7D")]
	[Address(RVA = "0xC9D430", Offset = "0xC9D430", VA = "0xC9D430")]
	private void FireOnToggle()
	{
	}

	[Token(Token = "0x6000D7E")]
	[Address(RVA = "0xC9D5BC", Offset = "0xC9D5BC", VA = "0xC9D5BC")]
	private void FireOnToggleByUser()
	{
	}

	[Token(Token = "0x6000D7F")]
	[Address(RVA = "0xC9D5E4", Offset = "0xC9D5E4", VA = "0xC9D5E4")]
	public VrToggle()
	{
	}
}
[Token(Token = "0x200027F")]
public class VrToggleGroup : MonoBehaviour
{
	[Token(Token = "0x4000C4A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool allowSwitchOff;

	[Token(Token = "0x4000C4B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	public bool populateFromChildren;

	[Token(Token = "0x4000C4C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private List<VrToggle> _toggles;

	[Token(Token = "0x4000C4D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private VrToggle _activeToggle;

	[Token(Token = "0x14000082")]
	public event Action<VrToggle> OnSelectedChanged
	{
		[Token(Token = "0x6000D80")]
		[Address(RVA = "0xC9E5F4", Offset = "0xC9E5F4", VA = "0xC9E5F4")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000D81")]
		[Address(RVA = "0xC9E6A4", Offset = "0xC9E6A4", VA = "0xC9E6A4")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x6000D82")]
	[Address(RVA = "0xC9E754", Offset = "0xC9E754", VA = "0xC9E754")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000D83")]
	[Address(RVA = "0xC9E8D4", Offset = "0xC9E8D4", VA = "0xC9E8D4")]
	public void ForceCollectToggles()
	{
	}

	[Token(Token = "0x6000D84")]
	[Address(RVA = "0xC9E8D8", Offset = "0xC9E8D8", VA = "0xC9E8D8")]
	public void AddToggle(VrToggle toggle)
	{
	}

	[Token(Token = "0x6000D85")]
	[Address(RVA = "0xC9EA54", Offset = "0xC9EA54", VA = "0xC9EA54")]
	public void Refresh()
	{
	}

	[Token(Token = "0x6000D86")]
	[Address(RVA = "0xC9EBF8", Offset = "0xC9EBF8", VA = "0xC9EBF8")]
	public void SetActiveToggle(VrToggle toggle)
	{
	}

	[Token(Token = "0x6000D87")]
	[Address(RVA = "0xC9EDB4", Offset = "0xC9EDB4", VA = "0xC9EDB4")]
	public void SetActiveToggle(int index)
	{
	}

	[Token(Token = "0x6000D88")]
	[Address(RVA = "0xC9F020", Offset = "0xC9F020", VA = "0xC9F020")]
	public void SetActiveToggle(string toggleName)
	{
	}

	[Token(Token = "0x6000D89")]
	[Address(RVA = "0xC9F228", Offset = "0xC9F228", VA = "0xC9F228")]
	public bool HasSelection()
	{
		return default(bool);
	}

	[Token(Token = "0x6000D8A")]
	[Address(RVA = "0xC9F398", Offset = "0xC9F398", VA = "0xC9F398")]
	public VrToggle GetSelected()
	{
		return null;
	}

	[Token(Token = "0x6000D8B")]
	[Address(RVA = "0xC9E764", Offset = "0xC9E764", VA = "0xC9E764")]
	private void GetTogglesInChildren()
	{
	}

	[Token(Token = "0x6000D8C")]
	[Address(RVA = "0xC9F500", Offset = "0xC9F500", VA = "0xC9F500")]
	private void FireSelectedToggleChanged(VrToggle selected)
	{
	}

	[Token(Token = "0x6000D8D")]
	[Address(RVA = "0xC9F51C", Offset = "0xC9F51C", VA = "0xC9F51C")]
	public VrToggleGroup()
	{
	}
}
[Token(Token = "0x2000281")]
public class AudioUtils : MonoBehaviour
{
	[Token(Token = "0x6000D90")]
	[Address(RVA = "0xC9F5D0", Offset = "0xC9F5D0", VA = "0xC9F5D0")]
	public static int KeyToInt(string key)
	{
		return default(int);
	}

	[Token(Token = "0x6000D91")]
	[Address(RVA = "0xC9F6E0", Offset = "0xC9F6E0", VA = "0xC9F6E0")]
	private static int GetNoteIndex(char note)
	{
		return default(int);
	}

	[Token(Token = "0x6000D92")]
	[Address(RVA = "0xC9F70C", Offset = "0xC9F70C", VA = "0xC9F70C")]
	public AudioUtils()
	{
	}
}
[Token(Token = "0x2000282")]
[ExecuteInEditMode]
public class BezierDrawer : StateBehaviour
{
	[Token(Token = "0x4000C50")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool setWidth;

	[Token(Token = "0x4000C51")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float width;

	[Token(Token = "0x4000C52")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public int segments;

	[Token(Token = "0x4000C53")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public LineRenderer _lineRenderer;

	[Token(Token = "0x4000C54")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[Header("Debug")]
	public bool _setPositionsFromTransforms;

	[Token(Token = "0x4000C55")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Transform _start;

	[Token(Token = "0x4000C56")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Transform _cp1;

	[Token(Token = "0x4000C57")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Transform _cp2;

	[Token(Token = "0x4000C58")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Transform _end;

	[Token(Token = "0x4000C59")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private List<Vector3> _points;

	[Token(Token = "0x4000C5A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Vector3[] _bezierPoints;

	[Token(Token = "0x4000C5B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private bool _positionsSet;

	[Token(Token = "0x6000D93")]
	[Address(RVA = "0xC9F714", Offset = "0xC9F714", VA = "0xC9F714")]
	public void SetPositions(Vector3[] positions)
	{
	}

	[Token(Token = "0x6000D94")]
	[Address(RVA = "0xC9F724", Offset = "0xC9F724", VA = "0xC9F724")]
	private void Update()
	{
	}

	[Token(Token = "0x6000D95")]
	[Address(RVA = "0xC9FA78", Offset = "0xC9FA78", VA = "0xC9FA78")]
	public BezierDrawer()
	{
	}
}
[Token(Token = "0x2000283")]
public static class BezierUtils
{
	[Token(Token = "0x6000D96")]
	[Address(RVA = "0xC9F908", Offset = "0xC9F908", VA = "0xC9F908")]
	public static void GetBezierCurvePoints(Vector3[] bPoints, int segments, ref List<Vector3> points)
	{
	}

	[Token(Token = "0x6000D97")]
	[Address(RVA = "0xC9FB30", Offset = "0xC9FB30", VA = "0xC9FB30")]
	private static Vector3 SampleBezierCurve(Vector3 start, Vector3 end, Vector3 control1, Vector3 control2, float t)
	{
		return default(Vector3);
	}
}
[Token(Token = "0x2000284")]
public static class BoundsExtensions
{
	[Token(Token = "0x4000C5C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Vector3[] worldCorners;

	[Token(Token = "0x4000C5D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static Vector3[] screenCorners;

	[Token(Token = "0x6000D98")]
	[Address(RVA = "0xC9FC08", Offset = "0xC9FC08", VA = "0xC9FC08")]
	public static Rect ToScreenSpace(this Bounds bounds, Camera camera)
	{
		return default(Rect);
	}
}
[Token(Token = "0x2000286")]
public class Calibration : SetupableBehaviour
{
	[Token(Token = "0x2000287")]
	[CompilerGenerated]
	private sealed class <SetPuzzlePos>d__22 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000C74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000C75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000C76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Calibration <>4__this;

		[Token(Token = "0x170000EF")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000DAB")]
			[Address(RVA = "0xCA10B4", Offset = "0xCA10B4", VA = "0xCA10B4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000F0")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000DAD")]
			[Address(RVA = "0xCA10FC", Offset = "0xCA10FC", VA = "0xCA10FC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000DA8")]
		[Address(RVA = "0xCA0D7C", Offset = "0xCA0D7C", VA = "0xCA0D7C")]
		[DebuggerHidden]
		public <SetPuzzlePos>d__22(int <>1__state)
		{
		}

		[Token(Token = "0x6000DA9")]
		[Address(RVA = "0xCA103C", Offset = "0xCA103C", VA = "0xCA103C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000DAA")]
		[Address(RVA = "0xCA1040", Offset = "0xCA1040", VA = "0xCA1040", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000DAC")]
		[Address(RVA = "0xCA10BC", Offset = "0xCA10BC", VA = "0xCA10BC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000C63")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public LayerMask _snappableSurfaceLayer;

	[Token(Token = "0x4000C64")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[Header("Debug")]
	public Transform _debugHead;

	[Token(Token = "0x4000C65")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform _debugHeadAndHoriz;

	[Token(Token = "0x4000C66")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform _debugHeadAndHorizAndVrt;

	[Token(Token = "0x4000C67")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool _calibrating;

	[Token(Token = "0x4000C68")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private State _state;

	[Token(Token = "0x4000C69")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool _replaceWithHtDisclaimerIfHt;

	[Token(Token = "0x4000C6A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
	private bool _snappedToSurface;

	[Token(Token = "0x4000C6B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Transform _hitTransform;

	[Token(Token = "0x4000C6C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Vector3 _surfaceFwd;

	[Token(Token = "0x4000C6D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private float _timeHeldLeft;

	[Token(Token = "0x4000C6E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private float _timeHeldRight;

	[Token(Token = "0x4000C6F")]
	private const float MinHoldTime = 2f;

	[Token(Token = "0x4000C70")]
	private const float HorizontalDistanceFromhead = 0.4f;

	[Token(Token = "0x4000C71")]
	private const float HorizontalDistanceFromheadHT = 0.35f;

	[Token(Token = "0x4000C72")]
	private const float VerticalDistanceFromHead = 0.25f;

	[Token(Token = "0x4000C73")]
	private const float MinSnapToTableDistance = 0.45f;

	[Token(Token = "0x6000DA0")]
	[Address(RVA = "0xCA04B0", Offset = "0xCA04B0", VA = "0xCA04B0")]
	public void Setup(State state)
	{
	}

	[Token(Token = "0x6000DA1")]
	[Address(RVA = "0xCA0608", Offset = "0xCA0608", VA = "0xCA0608")]
	private void Update()
	{
	}

	[Token(Token = "0x6000DA2")]
	[Address(RVA = "0xCA0888", Offset = "0xCA0888", VA = "0xCA0888")]
	public void Calibrate()
	{
	}

	[Token(Token = "0x6000DA3")]
	[Address(RVA = "0xCA0894", Offset = "0xCA0894", VA = "0xCA0894")]
	public bool IsCalibrating()
	{
		return default(bool);
	}

	[Token(Token = "0x6000DA4")]
	[Address(RVA = "0xCA089C", Offset = "0xCA089C", VA = "0xCA089C")]
	public Vector3 GetTargetPos()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000DA5")]
	[Address(RVA = "0xCA0820", Offset = "0xCA0820", VA = "0xCA0820")]
	[IteratorStateMachine(typeof(<SetPuzzlePos>d__22))]
	private IEnumerator SetPuzzlePos()
	{
		return null;
	}

	[Token(Token = "0x6000DA6")]
	[Address(RVA = "0xCA0DA4", Offset = "0xCA0DA4", VA = "0xCA0DA4")]
	private void CalculatePuzzlePos()
	{
	}

	[Token(Token = "0x6000DA7")]
	[Address(RVA = "0xCA1034", Offset = "0xCA1034", VA = "0xCA1034")]
	public Calibration()
	{
	}
}
[Token(Token = "0x2000288")]
public class CanvasForceUpdater : StateBehaviour
{
	[Token(Token = "0x4000C77")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static CanvasForceUpdater I;

	[Token(Token = "0x6000DAE")]
	[Address(RVA = "0xCA1104", Offset = "0xCA1104", VA = "0xCA1104", Slot = "5")]
	protected override void ForceSetup()
	{
	}

	[Token(Token = "0x6000DAF")]
	[Address(RVA = "0xCA119C", Offset = "0xCA119C", VA = "0xCA119C")]
	public void ForceUpdate()
	{
	}

	[Token(Token = "0x6000DB0")]
	[Address(RVA = "0xCA11F0", Offset = "0xCA11F0", VA = "0xCA11F0")]
	public CanvasForceUpdater()
	{
	}
}
[Token(Token = "0x2000289")]
[ExecuteInEditMode]
public class ChamferBoxTransformCopy : MonoBehaviour
{
	[Token(Token = "0x4000C78")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ChamferBox box;

	[Token(Token = "0x4000C79")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform target;

	[Token(Token = "0x6000DB1")]
	[Address(RVA = "0xCA11F8", Offset = "0xCA11F8", VA = "0xCA11F8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000DB2")]
	[Address(RVA = "0xCA12D8", Offset = "0xCA12D8", VA = "0xCA12D8")]
	public ChamferBoxTransformCopy()
	{
	}
}
[Token(Token = "0x200028A")]
public class CloseOnStart : MonoBehaviour
{
	[Token(Token = "0x6000DB3")]
	[Address(RVA = "0xCA12E0", Offset = "0xCA12E0", VA = "0xCA12E0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000DB4")]
	[Address(RVA = "0xCA1304", Offset = "0xCA1304", VA = "0xCA1304")]
	public CloseOnStart()
	{
	}
}
[Token(Token = "0x200028B")]
public class ColorPaletteView : MonoBehaviour
{
	[Token(Token = "0x4000C7A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public VrToggle targetToggle;

	[Token(Token = "0x6000DB5")]
	[Address(RVA = "0xCA130C", Offset = "0xCA130C", VA = "0xCA130C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000DB6")]
	[Address(RVA = "0xCA13CC", Offset = "0xCA13CC", VA = "0xCA13CC")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000DB7")]
	[Address(RVA = "0xCA13F0", Offset = "0xCA13F0", VA = "0xCA13F0")]
	public ColorPaletteView()
	{
	}
}
[Token(Token = "0x200028C")]
public class ContinousCollisionDetection : MonoBehaviour
{
	[Token(Token = "0x4000C7B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public LayerMask layerMask;

	[Token(Token = "0x4000C7C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float skinWidth;

	[Token(Token = "0x4000C7D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float minimumExtent;

	[Token(Token = "0x4000C7E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float partialExtent;

	[Token(Token = "0x4000C7F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float sqrMinimumExtent;

	[Token(Token = "0x4000C80")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private Vector3 previousPosition;

	[Token(Token = "0x4000C81")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Rigidbody myRigidbody;

	[Token(Token = "0x4000C82")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Collider myCollider;

	[Token(Token = "0x6000DB8")]
	[Address(RVA = "0xCA13F8", Offset = "0xCA13F8", VA = "0xCA13F8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000DB9")]
	[Address(RVA = "0xCA156C", Offset = "0xCA156C", VA = "0xCA156C")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000DBA")]
	[Address(RVA = "0xCA1718", Offset = "0xCA1718", VA = "0xCA1718")]
	public ContinousCollisionDetection()
	{
	}
}
[Token(Token = "0x200028D")]
public static class CoordinateNeighbors
{
	[Token(Token = "0x6000DBB")]
	[Address(RVA = "0xCA1748", Offset = "0xCA1748", VA = "0xCA1748")]
	public static void Parse(this bool[,,] n, Vector3Int center, Vector3Int[] coordinates)
	{
	}

	[Token(Token = "0x6000DBC")]
	[Address(RVA = "0xCA1B60", Offset = "0xCA1B60", VA = "0xCA1B60")]
	public static bool HasNeighbor(this bool[,,] n, int x, int y, int z)
	{
		return default(bool);
	}

	[Token(Token = "0x6000DBD")]
	[Address(RVA = "0xCA1A68", Offset = "0xCA1A68", VA = "0xCA1A68")]
	private static void PutNeighbor(Vector3Int center, Vector3Int neighbor, Vector3Int[] coordinates, ref bool[,,] n)
	{
	}
}
[Token(Token = "0x200028E")]
public class CopyTransform : MonoBehaviour
{
	[Token(Token = "0x4000C83")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool _copyPosition;

	[Token(Token = "0x4000C84")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool _copyRotation;

	[Token(Token = "0x4000C85")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform _target;

	[Token(Token = "0x4000C86")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool _useLocal;

	[Token(Token = "0x6000DBE")]
	[Address(RVA = "0xCA1BC8", Offset = "0xCA1BC8", VA = "0xCA1BC8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000DBF")]
	[Address(RVA = "0xCA1CE8", Offset = "0xCA1CE8", VA = "0xCA1CE8")]
	public CopyTransform()
	{
	}
}
[Token(Token = "0x200028F")]
public class DataHelper
{
	[Token(Token = "0x6000DC0")]
	[Address(RVA = "0xCA1CF0", Offset = "0xCA1CF0", VA = "0xCA1CF0")]
	public static void IterateStages(DataSet data)
	{
	}

	[Token(Token = "0x6000DC1")]
	[Address(RVA = "0xCA1DF4", Offset = "0xCA1DF4", VA = "0xCA1DF4")]
	private static void IterateLevels(JSONNode json)
	{
	}

	[Token(Token = "0x6000DC2")]
	[Address(RVA = "0xCA1F94", Offset = "0xCA1F94", VA = "0xCA1F94")]
	private static void SaveToJSON(JSONNode json, string name)
	{
	}

	[Token(Token = "0x6000DC3")]
	[Address(RVA = "0xCA2060", Offset = "0xCA2060", VA = "0xCA2060")]
	public DataHelper()
	{
	}
}
[Token(Token = "0x2000290")]
public class DateTimeUtils
{
	[Token(Token = "0x4000C87")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static string format;

	[Token(Token = "0x6000DC4")]
	[Address(RVA = "0xCA2068", Offset = "0xCA2068", VA = "0xCA2068")]
	public static DateTime FromString(string dateTime)
	{
		return default(DateTime);
	}

	[Token(Token = "0x6000DC5")]
	[Address(RVA = "0xCA21C8", Offset = "0xCA21C8", VA = "0xCA21C8")]
	public static string ToString(DateTime dateTime)
	{
		return null;
	}

	[Token(Token = "0x6000DC6")]
	[Address(RVA = "0xCA2164", Offset = "0xCA2164", VA = "0xCA2164")]
	public static DateTime DefaultTime()
	{
		return default(DateTime);
	}

	[Token(Token = "0x6000DC7")]
	[Address(RVA = "0xCA2230", Offset = "0xCA2230", VA = "0xCA2230")]
	public DateTimeUtils()
	{
	}
}
[Token(Token = "0x2000291")]
[ExecuteInEditMode]
public class DebugSetColor : MonoBehaviour
{
	[Token(Token = "0x4000C88")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Color color;

	[Token(Token = "0x4000C89")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public MeshRenderer renderer;

	[Token(Token = "0x4000C8A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private MaterialPropertyBlock _propBlock;

	[Token(Token = "0x6000DC9")]
	[Address(RVA = "0xCA2298", Offset = "0xCA2298", VA = "0xCA2298")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000DCA")]
	[Address(RVA = "0xCA233C", Offset = "0xCA233C", VA = "0xCA233C")]
	public DebugSetColor()
	{
	}
}
[Token(Token = "0x2000292")]
[ExecuteInEditMode]
public class DebugSetCoordinates : MonoBehaviour
{
	[Token(Token = "0x4000C8B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Texture2D mainTex;

	[Token(Token = "0x4000C8C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Vector3Int coordinates;

	[Token(Token = "0x4000C8D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public MeshRenderer renderer;

	[Token(Token = "0x4000C8E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private MaterialPropertyBlock _propBlock;

	[Token(Token = "0x6000DCB")]
	[Address(RVA = "0xCA2344", Offset = "0xCA2344", VA = "0xCA2344")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000DCC")]
	[Address(RVA = "0xCA2438", Offset = "0xCA2438", VA = "0xCA2438")]
	public DebugSetCoordinates()
	{
	}
}
[Token(Token = "0x2000293")]
public class DevOnly : MonoBehaviour
{
	[Token(Token = "0x6000DCD")]
	[Address(RVA = "0xCA2440", Offset = "0xCA2440", VA = "0xCA2440")]
	private void Start()
	{
	}

	[Token(Token = "0x6000DCE")]
	[Address(RVA = "0xCA24CC", Offset = "0xCA24CC", VA = "0xCA24CC")]
	public DevOnly()
	{
	}
}
[Token(Token = "0x2000294")]
[ExecuteInEditMode]
public class DottedLineHelper : MonoBehaviour
{
	[Token(Token = "0x4000C8F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Renderer renderer;

	[Token(Token = "0x4000C90")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform line;

	[Token(Token = "0x4000C91")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float dashesPerUnit;

	[Token(Token = "0x4000C92")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float offsetPerSecond;

	[Token(Token = "0x6000DCF")]
	[Address(RVA = "0xCA24D4", Offset = "0xCA24D4", VA = "0xCA24D4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000DD0")]
	[Address(RVA = "0xCA2594", Offset = "0xCA2594", VA = "0xCA2594")]
	public DottedLineHelper()
	{
	}
}
[Token(Token = "0x2000295")]
public class DrawNormals : MonoBehaviour
{
	[Token(Token = "0x6000DD1")]
	[Address(RVA = "0xCA25A8", Offset = "0xCA25A8", VA = "0xCA25A8")]
	public DrawNormals()
	{
	}
}
[Token(Token = "0x2000296")]
public class DropOutQueue<T> : Queue<T>
{
	[Token(Token = "0x4000C93")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private int _max;

	[Token(Token = "0x6000DD2")]
	public DropOutQueue(int max)
	{
	}

	[Token(Token = "0x6000DD3")]
	public new void Enqueue(T value)
	{
	}
}
[Token(Token = "0x2000297")]
public class DropShadowPositioner : StateBehaviour
{
	[Token(Token = "0x2000298")]
	[CompilerGenerated]
	private sealed class <WaitAndRecalcBounds>d__13 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000C9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000C9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000C9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public DropShadowPositioner <>4__this;

		[Token(Token = "0x4000C9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int <f>5__2;

		[Token(Token = "0x170000F1")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000DE0")]
			[Address(RVA = "0xCA2E18", Offset = "0xCA2E18", VA = "0xCA2E18", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000F2")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000DE2")]
			[Address(RVA = "0xCA2E60", Offset = "0xCA2E60", VA = "0xCA2E60", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000DDD")]
		[Address(RVA = "0xCA2BB4", Offset = "0xCA2BB4", VA = "0xCA2BB4")]
		[DebuggerHidden]
		public <WaitAndRecalcBounds>d__13(int <>1__state)
		{
		}

		[Token(Token = "0x6000DDE")]
		[Address(RVA = "0xCA2C84", Offset = "0xCA2C84", VA = "0xCA2C84", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000DDF")]
		[Address(RVA = "0xCA2C88", Offset = "0xCA2C88", VA = "0xCA2C88", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000DE1")]
		[Address(RVA = "0xCA2E20", Offset = "0xCA2E20", VA = "0xCA2E20", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000C94")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public SpriteRenderer renderer;

	[Token(Token = "0x4000C95")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public PieceView piece;

	[Token(Token = "0x4000C96")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public LayerMask floor;

	[Token(Token = "0x4000C97")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float shadowMinDist;

	[Token(Token = "0x4000C98")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float shadowMaxDist;

	[Token(Token = "0x4000C99")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[Header("debug")]
	[SerializeField]
	private Bounds _bounds;

	[Token(Token = "0x4000C9A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private RaycastHit _hit;

	[Token(Token = "0x4000C9B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private bool _dirty;

	[Token(Token = "0x6000DD4")]
	[Address(RVA = "0xCA25B0", Offset = "0xCA25B0", VA = "0xCA25B0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000DD5")]
	[Address(RVA = "0xCA2684", Offset = "0xCA2684", VA = "0xCA2684")]
	private void SubscribeToPieceUpdates()
	{
	}

	[Token(Token = "0x6000DD6")]
	[Address(RVA = "0xCA27B8", Offset = "0xCA27B8", VA = "0xCA27B8")]
	private void UpdateBounds(PieceSegment obj)
	{
	}

	[Token(Token = "0x6000DD7")]
	[Address(RVA = "0xCA2828", Offset = "0xCA2828", VA = "0xCA2828")]
	private void Update()
	{
	}

	[Token(Token = "0x6000DD8")]
	[Address(RVA = "0xCA2A98", Offset = "0xCA2A98", VA = "0xCA2A98")]
	private float GetDistToFloor()
	{
		return default(float);
	}

	[Token(Token = "0x6000DD9")]
	[Address(RVA = "0xCA2A30", Offset = "0xCA2A30", VA = "0xCA2A30")]
	[IteratorStateMachine(typeof(<WaitAndRecalcBounds>d__13))]
	private IEnumerator WaitAndRecalcBounds()
	{
		return null;
	}

	[Token(Token = "0x6000DDA")]
	[Address(RVA = "0xCA2BDC", Offset = "0xCA2BDC", VA = "0xCA2BDC")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000DDB")]
	[Address(RVA = "0xCA27F4", Offset = "0xCA27F4", VA = "0xCA27F4")]
	private bool CanShow()
	{
		return default(bool);
	}

	[Token(Token = "0x6000DDC")]
	[Address(RVA = "0xCA2C70", Offset = "0xCA2C70", VA = "0xCA2C70")]
	public DropShadowPositioner()
	{
	}
}
[Token(Token = "0x2000299")]
public class FaceCamera : MonoBehaviour
{
	[Token(Token = "0x4000CA0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Transform head;

	[Token(Token = "0x4000CA1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool _keepLocalXRotZero;

	[Token(Token = "0x4000CA2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	public bool _keepLocalYRotZero;

	[Token(Token = "0x6000DE3")]
	[Address(RVA = "0xCA2E68", Offset = "0xCA2E68", VA = "0xCA2E68")]
	private void Update()
	{
	}

	[Token(Token = "0x6000DE4")]
	[Address(RVA = "0xCA2FAC", Offset = "0xCA2FAC", VA = "0xCA2FAC")]
	public FaceCamera()
	{
	}
}
[Token(Token = "0x200029A")]
public class FirstPersonCam : MonoBehaviour
{
	[Token(Token = "0x4000CA3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float speedH;

	[Token(Token = "0x4000CA4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float speedV;

	[Token(Token = "0x4000CA5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float yaw;

	[Token(Token = "0x4000CA6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float pitch;

	[Token(Token = "0x6000DE5")]
	[Address(RVA = "0xCA2FB4", Offset = "0xCA2FB4", VA = "0xCA2FB4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000DE6")]
	[Address(RVA = "0xCA30B4", Offset = "0xCA30B4", VA = "0xCA30B4")]
	public FirstPersonCam()
	{
	}
}
[Token(Token = "0x200029B")]
public class FlashingMaterialService : MonoBehaviour
{
	[Token(Token = "0x4000CA7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Material _matA;

	[Token(Token = "0x4000CA8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Material _matB;

	[Token(Token = "0x4000CA9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Material _target;

	[Token(Token = "0x4000CAA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AnimationCurve _lerpCurve;

	[Token(Token = "0x4000CAB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float _frequency;

	[Token(Token = "0x6000DE7")]
	[Address(RVA = "0xCA30C4", Offset = "0xCA30C4", VA = "0xCA30C4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000DE8")]
	[Address(RVA = "0xCA31BC", Offset = "0xCA31BC", VA = "0xCA31BC")]
	public FlashingMaterialService()
	{
	}
}
[Token(Token = "0x200029C")]
public class FloatQueue : DropOutQueue<float>
{
	[Token(Token = "0x6000DE9")]
	[Address(RVA = "0xCA31CC", Offset = "0xCA31CC", VA = "0xCA31CC")]
	public FloatQueue(int max)
	{
	}

	[Token(Token = "0x6000DEA")]
	[Address(RVA = "0xCA3224", Offset = "0xCA3224", VA = "0xCA3224")]
	public float Average()
	{
		return default(float);
	}
}
[Token(Token = "0x200029D")]
public class followhand : MonoBehaviour
{
	[Token(Token = "0x6000DEB")]
	[Address(RVA = "0xCA33B4", Offset = "0xCA33B4", VA = "0xCA33B4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000DEC")]
	[Address(RVA = "0xCA33B8", Offset = "0xCA33B8", VA = "0xCA33B8")]
	public followhand()
	{
	}
}
[Token(Token = "0x200029E")]
public class HandTrackWrapper : MonoBehaviour
{
	[Token(Token = "0x4000CAD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public OVRHand _leftHand;

	[Token(Token = "0x4000CAE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OVRHand _rightHand;

	[Token(Token = "0x4000CB0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private OVRSkeleton _leftSkeleton;

	[Token(Token = "0x4000CB1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private OVRSkeleton _rightSkeleton;

	[Token(Token = "0x4000CB2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool _handTracking;

	[Token(Token = "0x4000CB3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Finger[] _nonThumbFingers;

	[Token(Token = "0x4000CB4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float[] _pinchTimeStamps;

	[Token(Token = "0x4000CB5")]
	private const float PinchMinDuration = 0.03f;

	[Token(Token = "0x170000F3")]
	public static HandTrackWrapper instance
	{
		[Token(Token = "0x6000DEF")]
		[Address(RVA = "0xCA3520", Offset = "0xCA3520", VA = "0xCA3520")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x6000DF0")]
		[Address(RVA = "0xCA3568", Offset = "0xCA3568", VA = "0xCA3568")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x14000083")]
	public event Action<bool> OnHandTrackingChanged
	{
		[Token(Token = "0x6000DED")]
		[Address(RVA = "0xCA33C0", Offset = "0xCA33C0", VA = "0xCA33C0")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000DEE")]
		[Address(RVA = "0xCA3470", Offset = "0xCA3470", VA = "0xCA3470")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x6000DF1")]
	[Address(RVA = "0xCA35B4", Offset = "0xCA35B4", VA = "0xCA35B4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000DF2")]
	[Address(RVA = "0xCA3758", Offset = "0xCA3758", VA = "0xCA3758")]
	private void Update()
	{
	}

	[Token(Token = "0x6000DF3")]
	[Address(RVA = "0xCA37B4", Offset = "0xCA37B4", VA = "0xCA37B4")]
	public bool IsHandtracking()
	{
		return default(bool);
	}

	[Token(Token = "0x6000DF4")]
	[Address(RVA = "0xCA385C", Offset = "0xCA385C", VA = "0xCA385C")]
	public Transform GetFingerTip(Cubism.Hand hand, Finger finger)
	{
		return null;
	}

	[Token(Token = "0x6000DF5")]
	[Address(RVA = "0xCA39C0", Offset = "0xCA39C0", VA = "0xCA39C0")]
	public bool FingerPinching(Cubism.Hand hand, Finger finger)
	{
		return default(bool);
	}

	[Token(Token = "0x6000DF6")]
	[Address(RVA = "0xCA3B90", Offset = "0xCA3B90", VA = "0xCA3B90")]
	public Finger GetClosestTip(Cubism.Hand hand)
	{
		return default(Finger);
	}

	[Token(Token = "0x6000DF7")]
	[Address(RVA = "0xCA3D1C", Offset = "0xCA3D1C", VA = "0xCA3D1C")]
	public Vector3 GetThumbFingerMidpoint(Cubism.Hand hand, Finger finger)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000DF8")]
	[Address(RVA = "0xCA3C38", Offset = "0xCA3C38", VA = "0xCA3C38")]
	public float DistanceToThumb(Cubism.Hand hand, Finger finger)
	{
		return default(float);
	}

	[Token(Token = "0x6000DF9")]
	[Address(RVA = "0xCA3B34", Offset = "0xCA3B34", VA = "0xCA3B34")]
	private OVRHand.HandFinger InsiteToOvrFinger(Finger finger)
	{
		return default(OVRHand.HandFinger);
	}

	[Token(Token = "0x6000DFA")]
	[Address(RVA = "0xCA3878", Offset = "0xCA3878", VA = "0xCA3878")]
	private Transform GetBoneTransform(OVRSkeleton.BoneId boneId, Cubism.Hand hand)
	{
		return null;
	}

	[Token(Token = "0x6000DFB")]
	[Address(RVA = "0xCA3B1C", Offset = "0xCA3B1C", VA = "0xCA3B1C")]
	private OVRHand GetOvrHand(Cubism.Hand hand)
	{
		return null;
	}

	[Token(Token = "0x6000DFC")]
	[Address(RVA = "0xCA3DA0", Offset = "0xCA3DA0", VA = "0xCA3DA0")]
	private OVRSkeleton GetOvrSkeleton(Cubism.Hand hand)
	{
		return null;
	}

	[Token(Token = "0x6000DFD")]
	[Address(RVA = "0xCA3B40", Offset = "0xCA3B40", VA = "0xCA3B40")]
	private int GetFingerIndex(Cubism.Hand hand, Finger finger)
	{
		return default(int);
	}

	[Token(Token = "0x6000DFE")]
	[Address(RVA = "0xCA3DB8", Offset = "0xCA3DB8", VA = "0xCA3DB8")]
	public HandTrackWrapper()
	{
	}
}
[Token(Token = "0x200029F")]
public class MockHaptics : IHaptics
{
	[Token(Token = "0x6000DFF")]
	[Address(RVA = "0xCA3E60", Offset = "0xCA3E60", VA = "0xCA3E60", Slot = "4")]
	public void PlayHaptics(Cubism.Hand hand, HapticType profile)
	{
	}

	[Token(Token = "0x6000E00")]
	[Address(RVA = "0xCA3E64", Offset = "0xCA3E64", VA = "0xCA3E64", Slot = "5")]
	public void Pulse(Cubism.Hand hand, float frequency, float amplitude)
	{
	}

	[Token(Token = "0x6000E01")]
	[Address(RVA = "0xCA3E68", Offset = "0xCA3E68", VA = "0xCA3E68")]
	public MockHaptics()
	{
	}
}
[Token(Token = "0x20002A0")]
public class OvrHaptics : IHaptics
{
	[Token(Token = "0x20002A1")]
	[CompilerGenerated]
	private sealed class <SetControllerVibration>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000CBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000CBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000CBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public HapticProfile profile;

		[Token(Token = "0x4000CBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public OvrHaptics <>4__this;

		[Token(Token = "0x4000CBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Cubism.Hand hand;

		[Token(Token = "0x4000CBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float <startTime>5__2;

		[Token(Token = "0x170000F4")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000E0D")]
			[Address(RVA = "0xCA47AC", Offset = "0xCA47AC", VA = "0xCA47AC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000F5")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000E0F")]
			[Address(RVA = "0xCA47F4", Offset = "0xCA47F4", VA = "0xCA47F4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000E0A")]
		[Address(RVA = "0xCA44B0", Offset = "0xCA44B0", VA = "0xCA44B0")]
		[DebuggerHidden]
		public <SetControllerVibration>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x6000E0B")]
		[Address(RVA = "0xCA4628", Offset = "0xCA4628", VA = "0xCA4628", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000E0C")]
		[Address(RVA = "0xCA462C", Offset = "0xCA462C", VA = "0xCA462C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000E0E")]
		[Address(RVA = "0xCA47B4", Offset = "0xCA47B4", VA = "0xCA47B4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000CB6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private HapticClips _clips;

	[Token(Token = "0x4000CB7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static string ClipsAndroid;

	[Token(Token = "0x4000CB8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static string ClipsPC;

	[Token(Token = "0x4000CB9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static string ClipsPCOpenVr;

	[Token(Token = "0x6000E02")]
	[Address(RVA = "0xCA3E70", Offset = "0xCA3E70", VA = "0xCA3E70")]
	public OvrHaptics()
	{
	}

	[Token(Token = "0x6000E03")]
	[Address(RVA = "0xCA3FB8", Offset = "0xCA3FB8", VA = "0xCA3FB8", Slot = "4")]
	public void PlayHaptics(Cubism.Hand hand, HapticType type)
	{
	}

	[Token(Token = "0x6000E04")]
	[Address(RVA = "0xCA4434", Offset = "0xCA4434", VA = "0xCA4434")]
	[IteratorStateMachine(typeof(<SetControllerVibration>d__6))]
	private IEnumerator SetControllerVibration(Cubism.Hand hand, HapticProfile profile)
	{
		return null;
	}

	[Token(Token = "0x6000E05")]
	[Address(RVA = "0xCA44D8", Offset = "0xCA44D8", VA = "0xCA44D8", Slot = "5")]
	public void Pulse(Cubism.Hand hand, float frequency, float amplitude)
	{
	}

	[Token(Token = "0x6000E06")]
	[Address(RVA = "0xCA4570", Offset = "0xCA4570", VA = "0xCA4570")]
	private OVRInput.Controller GetControllerMask(Cubism.Hand hand)
	{
		return default(OVRInput.Controller);
	}

	[Token(Token = "0x6000E07")]
	[Address(RVA = "0xCA432C", Offset = "0xCA432C", VA = "0xCA432C")]
	private OVRHaptics.OVRHapticsChannel GetChannel(Cubism.Hand hand)
	{
		return null;
	}

	[Token(Token = "0x6000E08")]
	[Address(RVA = "0xCA41A0", Offset = "0xCA41A0", VA = "0xCA41A0")]
	private bool CanDoHaptics(Cubism.Hand hand)
	{
		return default(bool);
	}
}
[Token(Token = "0x20002A2")]
public class PicoHaptics : IHaptics
{
	[Token(Token = "0x20002A3")]
	[CompilerGenerated]
	private sealed class <SetControllerVibration>d__5 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000CC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000CC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000CC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public HapticProfile profile;

		[Token(Token = "0x4000CC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public PicoHaptics <>4__this;

		[Token(Token = "0x4000CC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Cubism.Hand hand;

		[Token(Token = "0x4000CC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float <startTime>5__2;

		[Token(Token = "0x170000F6")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000E1A")]
			[Address(RVA = "0xCA4D10", Offset = "0xCA4D10", VA = "0xCA4D10", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000F7")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000E1C")]
			[Address(RVA = "0xCA4D58", Offset = "0xCA4D58", VA = "0xCA4D58", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000E17")]
		[Address(RVA = "0xCA4B24", Offset = "0xCA4B24", VA = "0xCA4B24")]
		[DebuggerHidden]
		public <SetControllerVibration>d__5(int <>1__state)
		{
		}

		[Token(Token = "0x6000E18")]
		[Address(RVA = "0xCA4BBC", Offset = "0xCA4BBC", VA = "0xCA4BBC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000E19")]
		[Address(RVA = "0xCA4BC0", Offset = "0xCA4BC0", VA = "0xCA4BC0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000E1B")]
		[Address(RVA = "0xCA4D18", Offset = "0xCA4D18", VA = "0xCA4D18", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000CC0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private HapticClips _clips;

	[Token(Token = "0x4000CC1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static string Clips;

	[Token(Token = "0x6000E10")]
	[Address(RVA = "0xCA47FC", Offset = "0xCA47FC", VA = "0xCA47FC")]
	public PicoHaptics()
	{
	}

	[Token(Token = "0x6000E11")]
	[Address(RVA = "0xCA48C4", Offset = "0xCA48C4", VA = "0xCA48C4", Slot = "4")]
	public void PlayHaptics(Cubism.Hand hand, HapticType type)
	{
	}

	[Token(Token = "0x6000E12")]
	[Address(RVA = "0xCA4B20", Offset = "0xCA4B20", VA = "0xCA4B20", Slot = "5")]
	public void Pulse(Cubism.Hand hand, float frequency, float amplitude)
	{
	}

	[Token(Token = "0x6000E13")]
	[Address(RVA = "0xCA4AA4", Offset = "0xCA4AA4", VA = "0xCA4AA4")]
	[IteratorStateMachine(typeof(<SetControllerVibration>d__5))]
	private IEnumerator SetControllerVibration(Cubism.Hand hand, HapticProfile profile)
	{
		return null;
	}

	[Token(Token = "0x6000E14")]
	[Address(RVA = "0xCA4B4C", Offset = "0xCA4B4C", VA = "0xCA4B4C")]
	private XRNode GetHandNode(Cubism.Hand hand)
	{
		return default(XRNode);
	}

	[Token(Token = "0x6000E15")]
	[Address(RVA = "0xCA4A48", Offset = "0xCA4A48", VA = "0xCA4A48")]
	private bool CanDoHaptics(Cubism.Hand hand)
	{
		return default(bool);
	}
}
[Token(Token = "0x20002A4")]
public class StaticBehaviour : MonoBehaviour
{
	[Token(Token = "0x4000CC8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static StaticBehaviour _instance;

	[Token(Token = "0x6000E1D")]
	[Address(RVA = "0xCA4398", Offset = "0xCA4398", VA = "0xCA4398")]
	public static StaticBehaviour GetInstance()
	{
		return null;
	}

	[Token(Token = "0x6000E1E")]
	[Address(RVA = "0xCA4D60", Offset = "0xCA4D60", VA = "0xCA4D60")]
	private static StaticBehaviour CreateInstance()
	{
		return null;
	}

	[Token(Token = "0x6000E1F")]
	[Address(RVA = "0xCA4DEC", Offset = "0xCA4DEC", VA = "0xCA4DEC")]
	public StaticBehaviour()
	{
	}
}
[Token(Token = "0x20002A5")]
public class SteamVrHaptics : IHaptics
{
	[Token(Token = "0x6000E20")]
	[Address(RVA = "0xCA4DF4", Offset = "0xCA4DF4", VA = "0xCA4DF4", Slot = "4")]
	public void PlayHaptics(Cubism.Hand hand, HapticType type)
	{
	}

	[Token(Token = "0x6000E21")]
	[Address(RVA = "0xCA4DF8", Offset = "0xCA4DF8", VA = "0xCA4DF8", Slot = "5")]
	public void Pulse(Cubism.Hand hand, float frequency, float amplitude)
	{
	}

	[Token(Token = "0x6000E22")]
	[Address(RVA = "0xCA4DFC", Offset = "0xCA4DFC", VA = "0xCA4DFC")]
	public SteamVrHaptics()
	{
	}
}
[Token(Token = "0x20002A6")]
public class HoverHelper : StateBehaviour
{
	[Token(Token = "0x4000CC9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public LayerMask interactableLayers;

	[Token(Token = "0x4000CCA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public List<InteractionListener> interactingListeners;

	[Token(Token = "0x4000CCC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[Space(25f)]
	public HoverDetectionMethod _method;

	[Token(Token = "0x4000CCD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private readonly List<InteractionListener> _stayingListeners;

	[Token(Token = "0x4000CCE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Rigidbody _rigidBody;

	[Token(Token = "0x4000CCF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Collider[] _tipCollisions;

	[Token(Token = "0x4000CD0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private RaycastHit _sweepHit;

	[Token(Token = "0x4000CD1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private Vector3 _prevPos;

	[Token(Token = "0x4000CD2")]
	private const float GrabRadius = 0.012f;

	[Token(Token = "0x4000CD3")]
	private const float SweepDist = 0.05f;

	[Token(Token = "0x4000CD4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private Color _defaultColor;

	[Token(Token = "0x4000CD5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private Color _hoveredColor;

	[Token(Token = "0x14000084")]
	public event Action<Collider> OnTriggerEntered
	{
		[Token(Token = "0x6000E23")]
		[Address(RVA = "0xCA4E04", Offset = "0xCA4E04", VA = "0xCA4E04")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000E24")]
		[Address(RVA = "0xCA4EB4", Offset = "0xCA4EB4", VA = "0xCA4EB4")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x6000E25")]
	[Address(RVA = "0xCA4F64", Offset = "0xCA4F64", VA = "0xCA4F64")]
	private void Start()
	{
	}

	[Token(Token = "0x6000E26")]
	[Address(RVA = "0xCA4FF8", Offset = "0xCA4FF8", VA = "0xCA4FF8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000E27")]
	[Address(RVA = "0xCA5578", Offset = "0xCA5578", VA = "0xCA5578")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000E28")]
	[Address(RVA = "0xCA561C", Offset = "0xCA561C", VA = "0xCA561C")]
	private void OnTriggerStay(Collider aOther)
	{
	}

	[Token(Token = "0x6000E29")]
	[Address(RVA = "0xCA56BC", Offset = "0xCA56BC", VA = "0xCA56BC")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000E2A")]
	[Address(RVA = "0xCA5730", Offset = "0xCA5730", VA = "0xCA5730")]
	public bool HoveringOverLayer(LayerMask layer, ref List<InteractionListener> hoveredListener)
	{
		return default(bool);
	}

	[Token(Token = "0x6000E2B")]
	[Address(RVA = "0xCA5744", Offset = "0xCA5744", VA = "0xCA5744")]
	private bool HoveringOverLayerOverlapSphere(LayerMask layer, ref List<InteractionListener> hoveredListener)
	{
		return default(bool);
	}

	[Token(Token = "0x6000E2C")]
	[Address(RVA = "0xCA5A34", Offset = "0xCA5A34", VA = "0xCA5A34")]
	private bool HoveringOverLayerTrigger(LayerMask layer, ref List<InteractionListener> hoveredListener)
	{
		return default(bool);
	}

	[Token(Token = "0x6000E2D")]
	[Address(RVA = "0xCA5440", Offset = "0xCA5440", VA = "0xCA5440")]
	private void HoverStay(Collider other)
	{
	}

	[Token(Token = "0x6000E2E")]
	[Address(RVA = "0xCA5CD4", Offset = "0xCA5CD4", VA = "0xCA5CD4")]
	public HoverHelper()
	{
	}
}
[Token(Token = "0x20002A8")]
public enum HoverDetectionMethod
{
	[Token(Token = "0x4000CDA")]
	OverlapSphere,
	[Token(Token = "0x4000CDB")]
	TriggerEnter,
	[Token(Token = "0x4000CDC")]
	SweepTest
}
[Token(Token = "0x20002A9")]
public interface IEnableable
{
	[Token(Token = "0x6000E33")]
	void SetActive(bool value);
}
[Token(Token = "0x20002AA")]
[RequireComponent(typeof(Interactable))]
public class InactiveDuringFade : StateBehaviour
{
	[Token(Token = "0x4000CDD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Interactable _interactable;

	[Token(Token = "0x6000E34")]
	[Address(RVA = "0xCA5ED8", Offset = "0xCA5ED8", VA = "0xCA5ED8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000E35")]
	[Address(RVA = "0xCA5FC8", Offset = "0xCA5FC8", VA = "0xCA5FC8")]
	private void SetInteractableActrive(bool faded)
	{
	}

	[Token(Token = "0x6000E36")]
	[Address(RVA = "0xCA5FEC", Offset = "0xCA5FEC", VA = "0xCA5FEC")]
	public InactiveDuringFade()
	{
	}
}
[Token(Token = "0x20002AB")]
[ExecuteInEditMode]
public class InverseScale : MonoBehaviour
{
	[Token(Token = "0x4000CDE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform reference;

	[Token(Token = "0x6000E37")]
	[Address(RVA = "0xCA5FF4", Offset = "0xCA5FF4", VA = "0xCA5FF4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000E38")]
	[Address(RVA = "0xCA60E0", Offset = "0xCA60E0", VA = "0xCA60E0")]
	public InverseScale()
	{
	}
}
[Token(Token = "0x20002AC")]
public class AddPuzzleId : JsonUpdater
{
	[Token(Token = "0x6000E39")]
	[Address(RVA = "0xCA60E8", Offset = "0xCA60E8", VA = "0xCA60E8", Slot = "4")]
	public override JSONNode UpdateJson(JSONNode node)
	{
		return null;
	}

	[Token(Token = "0x6000E3A")]
	[Address(RVA = "0xCA61C0", Offset = "0xCA61C0", VA = "0xCA61C0")]
	public AddPuzzleId()
	{
	}
}
[Token(Token = "0x20002AD")]
public class AddVersionIfAbsent : JsonUpdater
{
	[Token(Token = "0x6000E3B")]
	[Address(RVA = "0xCA61D0", Offset = "0xCA61D0", VA = "0xCA61D0", Slot = "4")]
	public override JSONNode UpdateJson(JSONNode node)
	{
		return null;
	}

	[Token(Token = "0x6000E3C")]
	[Address(RVA = "0xCA63C0", Offset = "0xCA63C0", VA = "0xCA63C0")]
	public AddVersionIfAbsent()
	{
	}
}
[Token(Token = "0x20002AE")]
public class BottomToTopSort : JsonUpdater
{
	[Token(Token = "0x6000E3D")]
	[Address(RVA = "0xCA63C8", Offset = "0xCA63C8", VA = "0xCA63C8", Slot = "4")]
	public override JSONNode UpdateJson(JSONNode node)
	{
		return null;
	}

	[Token(Token = "0x6000E3E")]
	[Address(RVA = "0xCA6C0C", Offset = "0xCA6C0C", VA = "0xCA6C0C")]
	public BottomToTopSort()
	{
	}
}
[Token(Token = "0x20002B0")]
public class FrontToBackSort : JsonUpdater
{
	[Token(Token = "0x6000E44")]
	[Address(RVA = "0xCA6C98", Offset = "0xCA6C98", VA = "0xCA6C98", Slot = "4")]
	public override JSONNode UpdateJson(JSONNode node)
	{
		return null;
	}

	[Token(Token = "0x6000E45")]
	[Address(RVA = "0xCA7134", Offset = "0xCA7134", VA = "0xCA7134")]
	public FrontToBackSort()
	{
	}
}
[Token(Token = "0x20002B2")]
public abstract class JsonUpdater : MonoBehaviour
{
	[Token(Token = "0x6000E4B")]
	public abstract JSONNode UpdateJson(JSONNode node);

	[Token(Token = "0x6000E4C")]
	[Address(RVA = "0xCA61C8", Offset = "0xCA61C8", VA = "0xCA61C8")]
	protected JsonUpdater()
	{
	}
}
[Token(Token = "0x20002B3")]
public class OpenAndReSaveAll : PuzzleUpdaterAsync
{
	[Token(Token = "0x20002B4")]
	[CompilerGenerated]
	private sealed class <UpdateJson>d__2 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000CE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000CEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000CEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string file;

		[Token(Token = "0x4000CEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public OpenAndReSaveAll <>4__this;

		[Token(Token = "0x4000CED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Level <level>5__2;

		[Token(Token = "0x170000F8")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000E52")]
			[Address(RVA = "0xCA752C", Offset = "0xCA752C", VA = "0xCA752C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000F9")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000E54")]
			[Address(RVA = "0xCA7574", Offset = "0xCA7574", VA = "0xCA7574", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000E4F")]
		[Address(RVA = "0xCA7234", Offset = "0xCA7234", VA = "0xCA7234")]
		[DebuggerHidden]
		public <UpdateJson>d__2(int <>1__state)
		{
		}

		[Token(Token = "0x6000E50")]
		[Address(RVA = "0xCA726C", Offset = "0xCA726C", VA = "0xCA726C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000E51")]
		[Address(RVA = "0xCA7270", Offset = "0xCA7270", VA = "0xCA7270", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000E53")]
		[Address(RVA = "0xCA7534", Offset = "0xCA7534", VA = "0xCA7534", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000CE7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public PuzzleLoader puzzleLoader;

	[Token(Token = "0x4000CE8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public PuzzleSaver puzzleSaver;

	[Token(Token = "0x6000E4D")]
	[Address(RVA = "0xCA71C0", Offset = "0xCA71C0", VA = "0xCA71C0", Slot = "4")]
	[IteratorStateMachine(typeof(<UpdateJson>d__2))]
	public override IEnumerator UpdateJson(string file)
	{
		return null;
	}

	[Token(Token = "0x6000E4E")]
	[Address(RVA = "0xCA725C", Offset = "0xCA725C", VA = "0xCA725C")]
	public OpenAndReSaveAll()
	{
	}
}
[Token(Token = "0x20002B5")]
public class PuzzleJsonUpdater : SetupableBehaviour
{
	[Token(Token = "0x20002B6")]
	[CompilerGenerated]
	private sealed class <_UpdateSinglePuzzleRuntime>d__10 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000CF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000CF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000CF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PuzzleJsonUpdater <>4__this;

		[Token(Token = "0x170000FA")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000E61")]
			[Address(RVA = "0xCA7F38", Offset = "0xCA7F38", VA = "0xCA7F38", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000FB")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000E63")]
			[Address(RVA = "0xCA7F80", Offset = "0xCA7F80", VA = "0xCA7F80", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000E5E")]
		[Address(RVA = "0xCA7E58", Offset = "0xCA7E58", VA = "0xCA7E58")]
		[DebuggerHidden]
		public <_UpdateSinglePuzzleRuntime>d__10(int <>1__state)
		{
		}

		[Token(Token = "0x6000E5F")]
		[Address(RVA = "0xCA7EB0", Offset = "0xCA7EB0", VA = "0xCA7EB0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000E60")]
		[Address(RVA = "0xCA7EB4", Offset = "0xCA7EB4", VA = "0xCA7EB4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000E62")]
		[Address(RVA = "0xCA7F40", Offset = "0xCA7F40", VA = "0xCA7F40", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20002B7")]
	[CompilerGenerated]
	private sealed class <_UpdateAllPuzzleJsonAsync>d__11 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000CF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000CF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000CF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PuzzleJsonUpdater <>4__this;

		[Token(Token = "0x4000CFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private string[] <>7__wrap1;

		[Token(Token = "0x4000CFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int <>7__wrap2;

		[Token(Token = "0x170000FC")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000E67")]
			[Address(RVA = "0xCA8054", Offset = "0xCA8054", VA = "0xCA8054", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000FD")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000E69")]
			[Address(RVA = "0xCA809C", Offset = "0xCA809C", VA = "0xCA809C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000E64")]
		[Address(RVA = "0xCA7E80", Offset = "0xCA7E80", VA = "0xCA7E80")]
		[DebuggerHidden]
		public <_UpdateAllPuzzleJsonAsync>d__11(int <>1__state)
		{
		}

		[Token(Token = "0x6000E65")]
		[Address(RVA = "0xCA7F88", Offset = "0xCA7F88", VA = "0xCA7F88", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000E66")]
		[Address(RVA = "0xCA7F8C", Offset = "0xCA7F8C", VA = "0xCA7F8C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000E68")]
		[Address(RVA = "0xCA805C", Offset = "0xCA805C", VA = "0xCA805C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000CEE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public DataSet data;

	[Token(Token = "0x4000CEF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public JsonUpdater jsonUpdater;

	[Token(Token = "0x4000CF0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public PuzzleUpdaterAsync jsonUpdaterRuntime;

	[Token(Token = "0x4000CF1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool debugMode;

	[Token(Token = "0x4000CF2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
	public bool stageSetOnly;

	[Token(Token = "0x4000CF3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public TextAsset singlePuzzle;

	[Token(Token = "0x6000E55")]
	[Address(RVA = "0xCA757C", Offset = "0xCA757C", VA = "0xCA757C")]
	public void UpdateAllPuzzleJson()
	{
	}

	[Token(Token = "0x6000E56")]
	[Address(RVA = "0xCA7BEC", Offset = "0xCA7BEC", VA = "0xCA7BEC")]
	public void UpdateAllPuzzlesRuntime()
	{
	}

	[Token(Token = "0x6000E57")]
	[Address(RVA = "0xCA7D1C", Offset = "0xCA7D1C", VA = "0xCA7D1C")]
	public void UpdateSinglePuzzle()
	{
	}

	[Token(Token = "0x6000E58")]
	[Address(RVA = "0xCA7DD0", Offset = "0xCA7DD0", VA = "0xCA7DD0")]
	public void UpdateSinglePuzzleRuntime()
	{
	}

	[Token(Token = "0x6000E59")]
	[Address(RVA = "0xCA7DF0", Offset = "0xCA7DF0", VA = "0xCA7DF0")]
	[IteratorStateMachine(typeof(<_UpdateSinglePuzzleRuntime>d__10))]
	private IEnumerator _UpdateSinglePuzzleRuntime()
	{
		return null;
	}

	[Token(Token = "0x6000E5A")]
	[Address(RVA = "0xCA7CB4", Offset = "0xCA7CB4", VA = "0xCA7CB4")]
	[IteratorStateMachine(typeof(<_UpdateAllPuzzleJsonAsync>d__11))]
	private IEnumerator _UpdateAllPuzzleJsonAsync()
	{
		return null;
	}

	[Token(Token = "0x6000E5B")]
	[Address(RVA = "0xCA7928", Offset = "0xCA7928", VA = "0xCA7928")]
	private void SaveToJSON(JSONNode json, string name)
	{
	}

	[Token(Token = "0x6000E5C")]
	[Address(RVA = "0xCA7A60", Offset = "0xCA7A60", VA = "0xCA7A60")]
	private string[] GetFileNamesFromResources()
	{
		return null;
	}

	[Token(Token = "0x6000E5D")]
	[Address(RVA = "0xCA7EA8", Offset = "0xCA7EA8", VA = "0xCA7EA8")]
	public PuzzleJsonUpdater()
	{
	}
}
[Token(Token = "0x20002B9")]
public abstract class PuzzleUpdaterAsync : MonoBehaviour
{
	[Token(Token = "0x6000E6D")]
	public abstract IEnumerator UpdateJson(string puzzleName);

	[Token(Token = "0x6000E6E")]
	[Address(RVA = "0xCA7264", Offset = "0xCA7264", VA = "0xCA7264")]
	protected PuzzleUpdaterAsync()
	{
	}
}
[Token(Token = "0x20002BA")]
public class RemoveUnusedFields : JsonUpdater
{
	[Token(Token = "0x6000E6F")]
	[Address(RVA = "0xCA8128", Offset = "0xCA8128", VA = "0xCA8128", Slot = "4")]
	public override JSONNode UpdateJson(JSONNode node)
	{
		return null;
	}

	[Token(Token = "0x6000E70")]
	[Address(RVA = "0xCA8468", Offset = "0xCA8468", VA = "0xCA8468")]
	public RemoveUnusedFields()
	{
	}
}
[Token(Token = "0x20002BB")]
public class RgbToHex : JsonUpdater
{
	[Token(Token = "0x6000E71")]
	[Address(RVA = "0xCA8470", Offset = "0xCA8470", VA = "0xCA8470", Slot = "4")]
	public override JSONNode UpdateJson(JSONNode node)
	{
		return null;
	}

	[Token(Token = "0x6000E72")]
	[Address(RVA = "0xCA8818", Offset = "0xCA8818", VA = "0xCA8818")]
	public RgbToHex()
	{
	}
}
[Token(Token = "0x20002BC")]
public class RotatePuzzle : JsonUpdater
{
	[Token(Token = "0x4000CFE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3Int euler;

	[Token(Token = "0x6000E73")]
	[Address(RVA = "0xCA8820", Offset = "0xCA8820", VA = "0xCA8820", Slot = "4")]
	public override JSONNode UpdateJson(JSONNode node)
	{
		return null;
	}

	[Token(Token = "0x6000E74")]
	[Address(RVA = "0xCA8BAC", Offset = "0xCA8BAC", VA = "0xCA8BAC")]
	public RotatePuzzle()
	{
	}
}
[Token(Token = "0x20002BD")]
public class RoundAllPositions : JsonUpdater
{
	[Token(Token = "0x6000E75")]
	[Address(RVA = "0xCA8BB4", Offset = "0xCA8BB4", VA = "0xCA8BB4", Slot = "4")]
	public override JSONNode UpdateJson(JSONNode node)
	{
		return null;
	}

	[Token(Token = "0x6000E76")]
	[Address(RVA = "0xCA9258", Offset = "0xCA9258", VA = "0xCA9258")]
	public RoundAllPositions()
	{
	}
}
[Token(Token = "0x20002BE")]
public class SetGridMeta : JsonUpdater
{
	[Token(Token = "0x6000E77")]
	[Address(RVA = "0xCA9260", Offset = "0xCA9260", VA = "0xCA9260", Slot = "4")]
	public override JSONNode UpdateJson(JSONNode node)
	{
		return null;
	}

	[Token(Token = "0x6000E78")]
	[Address(RVA = "0xCA945C", Offset = "0xCA945C", VA = "0xCA945C")]
	public SetGridMeta()
	{
	}
}
[Token(Token = "0x20002BF")]
public class TransformPuzzle : JsonUpdater
{
	[Token(Token = "0x4000CFF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public new Vector3Int transform;

	[Token(Token = "0x6000E79")]
	[Address(RVA = "0xCA9464", Offset = "0xCA9464", VA = "0xCA9464", Slot = "4")]
	public override JSONNode UpdateJson(JSONNode node)
	{
		return null;
	}

	[Token(Token = "0x6000E7A")]
	[Address(RVA = "0xCA981C", Offset = "0xCA981C", VA = "0xCA981C")]
	public TransformPuzzle()
	{
	}
}
[Token(Token = "0x20002C0")]
public class JsonUtils
{
	[Token(Token = "0x6000E7B")]
	[Address(RVA = "0xCA8E98", Offset = "0xCA8E98", VA = "0xCA8E98")]
	public static Vector3 VectorFromJSON(JSONNode data)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000E7C")]
	[Address(RVA = "0xCA6864", Offset = "0xCA6864", VA = "0xCA6864")]
	public static Vector3Int VectorIntFromJSON(JSONNode data)
	{
		return default(Vector3Int);
	}

	[Token(Token = "0x6000E7D")]
	[Address(RVA = "0xCA9824", Offset = "0xCA9824", VA = "0xCA9824")]
	public static Quaternion QuaternionFromJSON(JSONNode data)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x6000E7E")]
	[Address(RVA = "0xCA8660", Offset = "0xCA8660", VA = "0xCA8660")]
	public static Color ColorFromJSON(JSONNode data)
	{
		return default(Color);
	}

	[Token(Token = "0x6000E7F")]
	[Address(RVA = "0xCA9974", Offset = "0xCA9974", VA = "0xCA9974")]
	public static Color32 Color32FromJSON(JSONNode data)
	{
		return default(Color32);
	}

	[Token(Token = "0x6000E80")]
	[Address(RVA = "0xCA90E0", Offset = "0xCA90E0", VA = "0xCA90E0")]
	public static JSONNode VectorToJSON(Vector3 v)
	{
		return null;
	}

	[Token(Token = "0x6000E81")]
	[Address(RVA = "0xCA9B28", Offset = "0xCA9B28", VA = "0xCA9B28")]
	public static JSONNode VectorToIntJSON(Vector3 v)
	{
		return null;
	}

	[Token(Token = "0x6000E82")]
	[Address(RVA = "0xCA6AA8", Offset = "0xCA6AA8", VA = "0xCA6AA8")]
	public static JSONNode VectorIntToJson(Vector3Int v)
	{
		return null;
	}

	[Token(Token = "0x6000E83")]
	[Address(RVA = "0xCA9ECC", Offset = "0xCA9ECC", VA = "0xCA9ECC")]
	public static JSONNode QuaternionToJSON(Quaternion q)
	{
		return null;
	}

	[Token(Token = "0x6000E84")]
	[Address(RVA = "0xCAA090", Offset = "0xCAA090", VA = "0xCAA090")]
	public static JSONNode ColorToJSON(Color c)
	{
		return null;
	}

	[Token(Token = "0x6000E85")]
	[Address(RVA = "0xCAA254", Offset = "0xCAA254", VA = "0xCAA254")]
	public JsonUtils()
	{
	}
}
[Token(Token = "0x20002C1")]
public class LightingAngle : MonoBehaviour
{
	[Token(Token = "0x4000D00")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform _lightingParent;

	[Token(Token = "0x6000E86")]
	[Address(RVA = "0xCAA25C", Offset = "0xCAA25C", VA = "0xCAA25C")]
	public void SetAngle(float angle)
	{
	}

	[Token(Token = "0x6000E87")]
	[Address(RVA = "0xCAA284", Offset = "0xCAA284", VA = "0xCAA284")]
	public void RotateByDeg(int deg)
	{
	}

	[Token(Token = "0x6000E88")]
	[Address(RVA = "0xCAA2AC", Offset = "0xCAA2AC", VA = "0xCAA2AC")]
	public LightingAngle()
	{
	}
}
[Token(Token = "0x20002C2")]
public class ListPagination : MonoBehaviour
{
	[Token(Token = "0x4000D02")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform _pageWrapper;

	[Token(Token = "0x4000D03")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject _paginationUiWrapper;

	[Token(Token = "0x4000D04")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Text _pageText;

	[Token(Token = "0x4000D05")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public VrButton _prev;

	[Token(Token = "0x4000D06")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public VrButton _next;

	[Token(Token = "0x4000D07")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[Space(15f)]
	public int _itemsPerPage;

	[Token(Token = "0x4000D08")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public string _pagePrefix;

	[Token(Token = "0x4000D09")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public string _pageDivider;

	[Token(Token = "0x4000D0A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private List<Transform> _items;

	[Token(Token = "0x4000D0B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private int _numberOfPages;

	[Token(Token = "0x4000D0C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private int _currentPage;

	[Token(Token = "0x170000FE")]
	public int currentPage
	{
		[Token(Token = "0x6000E8B")]
		[Address(RVA = "0xCAA414", Offset = "0xCAA414", VA = "0xCAA414")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000E8C")]
		[Address(RVA = "0xCAA41C", Offset = "0xCAA41C", VA = "0xCAA41C")]
		set
		{
		}
	}

	[Token(Token = "0x14000085")]
	public event Action<int> OnPageChange
	{
		[Token(Token = "0x6000E89")]
		[Address(RVA = "0xCAA2B4", Offset = "0xCAA2B4", VA = "0xCAA2B4")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000E8A")]
		[Address(RVA = "0xCAA364", Offset = "0xCAA364", VA = "0xCAA364")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x6000E8D")]
	[Address(RVA = "0xCAA464", Offset = "0xCAA464", VA = "0xCAA464")]
	private void Start()
	{
	}

	[Token(Token = "0x6000E8E")]
	[Address(RVA = "0xCAA54C", Offset = "0xCAA54C", VA = "0xCAA54C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000E8F")]
	[Address(RVA = "0xCAA5BC", Offset = "0xCAA5BC", VA = "0xCAA5BC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000E90")]
	[Address(RVA = "0xCAA434", Offset = "0xCAA434", VA = "0xCAA434")]
	private void UpdateView()
	{
	}

	[Token(Token = "0x6000E91")]
	[Address(RVA = "0xCAA5C0", Offset = "0xCAA5C0", VA = "0xCAA5C0")]
	private void UpdatePages()
	{
	}

	[Token(Token = "0x6000E92")]
	[Address(RVA = "0xCAABEC", Offset = "0xCAABEC", VA = "0xCAABEC")]
	public void PageUp()
	{
	}

	[Token(Token = "0x6000E93")]
	[Address(RVA = "0xCAAC18", Offset = "0xCAAC18", VA = "0xCAAC18")]
	public void PageDown()
	{
	}

	[Token(Token = "0x6000E94")]
	[Address(RVA = "0xCAAC3C", Offset = "0xCAAC3C", VA = "0xCAAC3C")]
	public void ToEnd()
	{
	}

	[Token(Token = "0x6000E95")]
	[Address(RVA = "0xCAA9AC", Offset = "0xCAA9AC", VA = "0xCAA9AC")]
	private void UpdateVisibleItems()
	{
	}

	[Token(Token = "0x6000E96")]
	[Address(RVA = "0xCAAAF4", Offset = "0xCAAAF4", VA = "0xCAAAF4")]
	private void UpdatePageText()
	{
	}

	[Token(Token = "0x6000E97")]
	[Address(RVA = "0xCAAA78", Offset = "0xCAAA78", VA = "0xCAAA78")]
	private void UpdateVisibility()
	{
	}

	[Token(Token = "0x6000E98")]
	[Address(RVA = "0xCAAB84", Offset = "0xCAAB84", VA = "0xCAAB84")]
	private void CheckPageValidity()
	{
	}

	[Token(Token = "0x6000E99")]
	[Address(RVA = "0xCAAC54", Offset = "0xCAAC54", VA = "0xCAAC54")]
	private void FireOnPageChanged()
	{
	}

	[Token(Token = "0x6000E9A")]
	[Address(RVA = "0xCAAC74", Offset = "0xCAAC74", VA = "0xCAAC74")]
	public ListPagination()
	{
	}
}
[Token(Token = "0x20002C3")]
public class LockRotation : MonoBehaviour
{
	[Token(Token = "0x4000D0D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 constantEuler;

	[Token(Token = "0x6000E9B")]
	[Address(RVA = "0xCAAD38", Offset = "0xCAAD38", VA = "0xCAAD38")]
	private void Update()
	{
	}

	[Token(Token = "0x6000E9C")]
	[Address(RVA = "0xCAAD64", Offset = "0xCAAD64", VA = "0xCAAD64")]
	public LockRotation()
	{
	}
}
[Token(Token = "0x20002C4")]
public class LockRotations : MonoBehaviour
{
	[Token(Token = "0x4000D0E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool lockX;

	[Token(Token = "0x4000D0F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool lockY;

	[Token(Token = "0x4000D10")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	public bool lockZ;

	[Token(Token = "0x4000D11")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Vector3 constantEuler;

	[Token(Token = "0x6000E9D")]
	[Address(RVA = "0xCAAD6C", Offset = "0xCAAD6C", VA = "0xCAAD6C")]
	public void Update()
	{
	}

	[Token(Token = "0x6000E9E")]
	[Address(RVA = "0xCAAE34", Offset = "0xCAAE34", VA = "0xCAAE34")]
	public LockRotations()
	{
	}
}
[Token(Token = "0x20002C5")]
public class LookAtPuzzle : MonoBehaviour
{
	[Token(Token = "0x4000D12")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Grid grid;

	[Token(Token = "0x4000D13")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float damp;

	[Token(Token = "0x4000D14")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform _target;

	[Token(Token = "0x6000E9F")]
	[Address(RVA = "0xCAAE3C", Offset = "0xCAAE3C", VA = "0xCAAE3C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000EA0")]
	[Address(RVA = "0xCAAF58", Offset = "0xCAAF58", VA = "0xCAAF58")]
	public LookAtPuzzle()
	{
	}
}
[Token(Token = "0x20002C6")]
public class Math3d
{
	[Token(Token = "0x4000D15")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Transform tempChild;

	[Token(Token = "0x4000D16")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static Transform tempParent;

	[Token(Token = "0x4000D17")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static Vector3[] positionRegister;

	[Token(Token = "0x4000D18")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static float[] posTimeRegister;

	[Token(Token = "0x4000D19")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private static int positionSamplesTaken;

	[Token(Token = "0x4000D1A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private static Quaternion[] rotationRegister;

	[Token(Token = "0x4000D1B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private static float[] rotTimeRegister;

	[Token(Token = "0x4000D1C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private static int rotationSamplesTaken;

	[Token(Token = "0x6000EA1")]
	[Address(RVA = "0xCAAF60", Offset = "0xCAAF60", VA = "0xCAAF60")]
	public static void Init()
	{
	}

	[Token(Token = "0x6000EA2")]
	[Address(RVA = "0xCAB118", Offset = "0xCAB118", VA = "0xCAB118")]
	public static Vector2 GetPointOnSpline(float percentage, Vector2[] cPoints)
	{
		return default(Vector2);
	}

	[Token(Token = "0x6000EA3")]
	[Address(RVA = "0xCAB284", Offset = "0xCAB284", VA = "0xCAB284")]
	public static float[] GetLineSplineIntersections(Vector2[] linePoints, Vector2[] cPoints)
	{
		return null;
	}

	[Token(Token = "0x6000EA4")]
	[Address(RVA = "0xCAB6A0", Offset = "0xCAB6A0", VA = "0xCAB6A0")]
	private static void SolveCubic(out int nRoots, out float x1, out float x2, out float x3, float a, float b, float c, float d)
	{
	}

	[Token(Token = "0x6000EA5")]
	[Address(RVA = "0xCAB8A0", Offset = "0xCAB8A0", VA = "0xCAB8A0")]
	private static float CubeRoot(float d)
	{
		return default(float);
	}

	[Token(Token = "0x6000EA6")]
	[Address(RVA = "0xCAB8D8", Offset = "0xCAB8D8", VA = "0xCAB8D8")]
	public static Vector3 AddVectorLength(Vector3 vector, float size)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000EA7")]
	[Address(RVA = "0xCAB968", Offset = "0xCAB968", VA = "0xCAB968")]
	public static Vector3 SetVectorLength(Vector3 vector, float size)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000EA8")]
	[Address(RVA = "0xCABA48", Offset = "0xCABA48", VA = "0xCABA48")]
	public static Quaternion SubtractRotation(Quaternion B, Quaternion A)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x6000EA9")]
	[Address(RVA = "0xCABAFC", Offset = "0xCABAFC", VA = "0xCABAFC")]
	public static Quaternion AddRotation(Quaternion A, Quaternion B)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x6000EAA")]
	[Address(RVA = "0xCABB70", Offset = "0xCABB70", VA = "0xCABB70")]
	public static Vector3 TransformDirectionMath(Quaternion rotation, Vector3 vector)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000EAB")]
	[Address(RVA = "0xCABB78", Offset = "0xCABB78", VA = "0xCABB78")]
	public static Vector3 InverseTransformDirectionMath(Quaternion rotation, Vector3 vector)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000EAC")]
	[Address(RVA = "0xCABBB8", Offset = "0xCABBB8", VA = "0xCABBB8")]
	public static Vector3 RotateVectorFromTo(Quaternion from, Quaternion to, Vector3 vector)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000EAD")]
	[Address(RVA = "0xCABCA8", Offset = "0xCABCA8", VA = "0xCABCA8")]
	public static bool PlanePlaneIntersection(out Vector3 linePoint, out Vector3 lineVec, Vector3 plane1Normal, Vector3 plane1Position, Vector3 plane2Normal, Vector3 plane2Position)
	{
		return default(bool);
	}

	[Token(Token = "0x6000EAE")]
	[Address(RVA = "0xCABE28", Offset = "0xCABE28", VA = "0xCABE28")]
	public static bool LinePlaneIntersection(out Vector3 intersection, Vector3 linePoint, Vector3 lineVec, Vector3 planeNormal, Vector3 planePoint)
	{
		return default(bool);
	}

	[Token(Token = "0x6000EAF")]
	[Address(RVA = "0xCABF54", Offset = "0xCABF54", VA = "0xCABF54")]
	public static bool LineLineIntersection(out Vector3 intersection, Vector3 linePoint1, Vector3 lineVec1, Vector3 linePoint2, Vector3 lineVec2)
	{
		return default(bool);
	}

	[Token(Token = "0x6000EB0")]
	[Address(RVA = "0xCAC098", Offset = "0xCAC098", VA = "0xCAC098")]
	public static bool ClosestPointsOnTwoLines(out Vector3 closestPointLine1, out Vector3 closestPointLine2, Vector3 linePoint1, Vector3 lineVec1, Vector3 linePoint2, Vector3 lineVec2)
	{
		return default(bool);
	}

	[Token(Token = "0x6000EB1")]
	[Address(RVA = "0xCAC258", Offset = "0xCAC258", VA = "0xCAC258")]
	public static Vector3 ProjectPointOnLine(Vector3 linePoint, Vector3 lineVec, Vector3 point)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000EB2")]
	[Address(RVA = "0xCAC29C", Offset = "0xCAC29C", VA = "0xCAC29C")]
	public static Vector3 ProjectPointOnLineSegment(Vector3 linePoint1, Vector3 linePoint2, Vector3 point)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000EB3")]
	[Address(RVA = "0xCAC598", Offset = "0xCAC598", VA = "0xCAC598")]
	public static Vector3 ProjectPointOnPlane(Vector3 planeNormal, Vector3 planePoint, Vector3 point)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000EB4")]
	[Address(RVA = "0xCAC61C", Offset = "0xCAC61C", VA = "0xCAC61C")]
	public static Vector3 ProjectVectorOnPlane(Vector3 planeNormal, Vector3 vector)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000EB5")]
	[Address(RVA = "0xCAC5F0", Offset = "0xCAC5F0", VA = "0xCAC5F0")]
	public static float SignedDistancePlanePoint(Vector3 planeNormal, Vector3 planePoint, Vector3 point)
	{
		return default(float);
	}

	[Token(Token = "0x6000EB6")]
	[Address(RVA = "0xCAC64C", Offset = "0xCAC64C", VA = "0xCAC64C")]
	public static float SignedDotProduct(Vector3 vectorA, Vector3 vectorB, Vector3 normal)
	{
		return default(float);
	}

	[Token(Token = "0x6000EB7")]
	[Address(RVA = "0xCAC690", Offset = "0xCAC690", VA = "0xCAC690")]
	public static float SignedVectorAngle(Vector3 referenceVector, Vector3 otherVector, Vector3 normal)
	{
		return default(float);
	}

	[Token(Token = "0x6000EB8")]
	[Address(RVA = "0xCAC84C", Offset = "0xCAC84C", VA = "0xCAC84C")]
	public static float AngleVectorPlane(Vector3 vector, Vector3 normal)
	{
		return default(float);
	}

	[Token(Token = "0x6000EB9")]
	[Address(RVA = "0xCAC8F4", Offset = "0xCAC8F4", VA = "0xCAC8F4")]
	public static float DotProductAngle(Vector3 vec1, Vector3 vec2)
	{
		return default(float);
	}

	[Token(Token = "0x6000EBA")]
	[Address(RVA = "0xCAC9A4", Offset = "0xCAC9A4", VA = "0xCAC9A4")]
	public static void PlaneFrom3Points(out Vector3 planeNormal, out Vector3 planePoint, Vector3 pointA, Vector3 pointB, Vector3 pointC)
	{
	}

	[Token(Token = "0x6000EBB")]
	[Address(RVA = "0xCACC5C", Offset = "0xCACC5C", VA = "0xCACC5C")]
	public static Vector3 GetForwardVector(Quaternion q)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000EBC")]
	[Address(RVA = "0xCACCD4", Offset = "0xCACCD4", VA = "0xCACCD4")]
	public static Vector3 GetUpVector(Quaternion q)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000EBD")]
	[Address(RVA = "0xCACD4C", Offset = "0xCACD4C", VA = "0xCACD4C")]
	public static Vector3 GetRightVector(Quaternion q)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000EBE")]
	[Address(RVA = "0xCACDC4", Offset = "0xCACDC4", VA = "0xCACDC4")]
	public static Quaternion QuaternionFromMatrix(Matrix4x4 m)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x6000EBF")]
	[Address(RVA = "0xCACE28", Offset = "0xCACE28", VA = "0xCACE28")]
	public static Vector3 PositionFromMatrix(Matrix4x4 m)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000EC0")]
	[Address(RVA = "0xCACE34", Offset = "0xCACE34", VA = "0xCACE34")]
	public static void LookRotationExtended(ref GameObject gameObjectInOut, Vector3 alignWithVector, Vector3 alignWithNormal, Vector3 customForward, Vector3 customUp)
	{
	}

	[Token(Token = "0x6000EC1")]
	[Address(RVA = "0xCACF74", Offset = "0xCACF74", VA = "0xCACF74")]
	public static void TransformWithParent(out Quaternion childRotation, out Vector3 childPosition, Quaternion parentRotation, Vector3 parentPosition, Quaternion startParentRotation, Vector3 startParentPosition, Quaternion startChildRotation, Vector3 startChildPosition)
	{
	}

	[Token(Token = "0x6000EC2")]
	[Address(RVA = "0xCAD220", Offset = "0xCAD220", VA = "0xCAD220")]
	public static void PreciseAlign(ref GameObject gameObjectInOut, Vector3 alignWithVector, Vector3 alignWithNormal, Vector3 alignWithPosition, Vector3 triangleForward, Vector3 triangleNormal, Vector3 trianglePosition)
	{
	}

	[Token(Token = "0x6000EC3")]
	[Address(RVA = "0xCAD2E4", Offset = "0xCAD2E4", VA = "0xCAD2E4")]
	public static void VectorsToTransform(ref GameObject gameObjectInOut, Vector3 positionVector, Vector3 directionVector, Vector3 normalVector)
	{
	}

	[Token(Token = "0x6000EC4")]
	[Address(RVA = "0xCAC478", Offset = "0xCAC478", VA = "0xCAC478")]
	public static int PointOnWhichSideOfLineSegment(Vector3 linePoint1, Vector3 linePoint2, Vector3 point)
	{
		return default(int);
	}

	[Token(Token = "0x6000EC5")]
	[Address(RVA = "0xCAD3A8", Offset = "0xCAD3A8", VA = "0xCAD3A8")]
	public static float MouseDistanceToLine(Vector3 linePoint1, Vector3 linePoint2)
	{
		return default(float);
	}

	[Token(Token = "0x6000EC6")]
	[Address(RVA = "0xCAD4E4", Offset = "0xCAD4E4", VA = "0xCAD4E4")]
	public static float MouseDistanceToCircle(Vector3 point, float radius)
	{
		return default(float);
	}

	[Token(Token = "0x6000EC7")]
	[Address(RVA = "0xCAD5CC", Offset = "0xCAD5CC", VA = "0xCAD5CC")]
	public static bool IsLineInRectangle(Vector3 linePoint1, Vector3 linePoint2, Vector3 rectA, Vector3 rectB, Vector3 rectC, Vector3 rectD)
	{
		return default(bool);
	}

	[Token(Token = "0x6000EC8")]
	[Address(RVA = "0xCAD7D0", Offset = "0xCAD7D0", VA = "0xCAD7D0")]
	public static bool IsPointInRectangle(Vector3 point, Vector3 rectA, Vector3 rectC, Vector3 rectB, Vector3 rectD)
	{
		return default(bool);
	}

	[Token(Token = "0x6000EC9")]
	[Address(RVA = "0xCADBF4", Offset = "0xCADBF4", VA = "0xCADBF4")]
	public static bool AreLineSegmentsCrossing(Vector3 pointA1, Vector3 pointA2, Vector3 pointB1, Vector3 pointB2)
	{
		return default(bool);
	}

	[Token(Token = "0x6000ECA")]
	[Address(RVA = "0xCADF04", Offset = "0xCADF04", VA = "0xCADF04")]
	public static bool LinearAcceleration(out Vector3 vector, Vector3 position, int samples)
	{
		return default(bool);
	}

	[Token(Token = "0x6000ECB")]
	[Address(RVA = "0xCAE284", Offset = "0xCAE284", VA = "0xCAE284")]
	public static bool AngularAcceleration(out Vector3 vector, Quaternion rotation, int samples)
	{
		return default(bool);
	}

	[Token(Token = "0x6000ECC")]
	[Address(RVA = "0xCAE804", Offset = "0xCAE804", VA = "0xCAE804")]
	public static float LinearFunction2DBasic(float x, float Qx, float Qy)
	{
		return default(float);
	}

	[Token(Token = "0x6000ECD")]
	[Address(RVA = "0xCAE810", Offset = "0xCAE810", VA = "0xCAE810")]
	public static float LinearFunction2DFull(float x, float Px, float Py, float Qx, float Qy)
	{
		return default(float);
	}

	[Token(Token = "0x6000ECE")]
	[Address(RVA = "0xCAE660", Offset = "0xCAE660", VA = "0xCAE660")]
	private static Vector3 RotDiffToSpeedVec(Quaternion rotation, float deltaTime)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000ECF")]
	[Address(RVA = "0xCAE82C", Offset = "0xCAE82C", VA = "0xCAE82C")]
	public Math3d()
	{
	}
}
[Token(Token = "0x20002C7")]
public static class MathUtil
{
	[Token(Token = "0x6000ED0")]
	[Address(RVA = "0xCAE834", Offset = "0xCAE834", VA = "0xCAE834")]
	public static Vector3 RoundEulerToOrtho(Vector3 eulerAngles)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000ED1")]
	[Address(RVA = "0xCAE850", Offset = "0xCAE850", VA = "0xCAE850")]
	public static Vector3 RoundToMultiple(Vector3 value, float multiple)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000ED2")]
	[Address(RVA = "0xCAE998", Offset = "0xCAE998", VA = "0xCAE998")]
	public static Quaternion RoundToMultiple(Quaternion value, float multiple)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x6000ED3")]
	[Address(RVA = "0xCAE904", Offset = "0xCAE904", VA = "0xCAE904")]
	public static float RoundToMultiple(float value, float multiple)
	{
		return default(float);
	}

	[Token(Token = "0x6000ED4")]
	[Address(RVA = "0xCAEA14", Offset = "0xCAEA14", VA = "0xCAEA14")]
	public static bool FloatsAreEqual(float f1, float f2)
	{
		return default(bool);
	}

	[Token(Token = "0x6000ED5")]
	[Address(RVA = "0xCAEA2C", Offset = "0xCAEA2C", VA = "0xCAEA2C")]
	public static float LimitDecimalSpaces(float f, int spaces)
	{
		return default(float);
	}

	[Token(Token = "0x6000ED6")]
	[Address(RVA = "0xCAE8AC", Offset = "0xCAE8AC", VA = "0xCAE8AC")]
	public static Vector3 LimitDecimalSpaces(Vector3 v, int spaces)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000ED7")]
	[Address(RVA = "0xCAEAD0", Offset = "0xCAEAD0", VA = "0xCAEAD0")]
	public static string FloatToHoursMinutesSeconds(float f)
	{
		return null;
	}

	[Token(Token = "0x6000ED8")]
	[Address(RVA = "0xCAED80", Offset = "0xCAED80", VA = "0xCAED80")]
	public static string TwoDigitTime(int value)
	{
		return null;
	}

	[Token(Token = "0x6000ED9")]
	[Address(RVA = "0xCAEE0C", Offset = "0xCAEE0C", VA = "0xCAEE0C")]
	public static float CoordinatesToRad(float x, float y)
	{
		return default(float);
	}
}
[Token(Token = "0x20002C8")]
public class ShortcutToggle : MonoBehaviour
{
	[Token(Token = "0x4000D1D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public KeyCode key;

	[Token(Token = "0x4000D1E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject target;

	[Token(Token = "0x6000EDA")]
	[Address(RVA = "0xCAEF08", Offset = "0xCAEF08", VA = "0xCAEF08")]
	private void Update()
	{
	}

	[Token(Token = "0x6000EDB")]
	[Address(RVA = "0xCAEF58", Offset = "0xCAEF58", VA = "0xCAEF58")]
	public ShortcutToggle()
	{
	}
}
[Token(Token = "0x20002C9")]
[RequireComponent(typeof(MeshFilter))]
public class MeshGeneration : MonoBehaviour
{
	[Token(Token = "0x4000D1F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3Int[] coords;

	[Token(Token = "0x4000D20")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Piece piece;

	[Token(Token = "0x4000D21")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float bevel;

	[Token(Token = "0x4000D22")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Vector3Int[] coords2;

	[Token(Token = "0x4000D23")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[Header("Debug")]
	private Mesh _mesh;

	[Token(Token = "0x4000D24")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Vector3[] _vertices;

	[Token(Token = "0x4000D25")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private int[] _triangles;

	[Token(Token = "0x170000FF")]
	private float r
	{
		[Token(Token = "0x6000EDC")]
		[Address(RVA = "0xCAEF60", Offset = "0xCAEF60", VA = "0xCAEF60")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000100")]
	private float rb
	{
		[Token(Token = "0x6000EDD")]
		[Address(RVA = "0xCAEFB8", Offset = "0xCAEFB8", VA = "0xCAEFB8")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000101")]
	private float rpb
	{
		[Token(Token = "0x6000EDE")]
		[Address(RVA = "0xCAF01C", Offset = "0xCAF01C", VA = "0xCAF01C")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000102")]
	private float rphb
	{
		[Token(Token = "0x6000EDF")]
		[Address(RVA = "0xCAF080", Offset = "0xCAF080", VA = "0xCAF080")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000103")]
	private float rmhb
	{
		[Token(Token = "0x6000EE0")]
		[Address(RVA = "0xCAF0EC", Offset = "0xCAF0EC", VA = "0xCAF0EC")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000104")]
	private float d
	{
		[Token(Token = "0x6000EE1")]
		[Address(RVA = "0xCAF158", Offset = "0xCAF158", VA = "0xCAF158")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x6000EE2")]
	[Address(RVA = "0xCAF1B0", Offset = "0xCAF1B0", VA = "0xCAF1B0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000EE3")]
	[Address(RVA = "0xCAF310", Offset = "0xCAF310", VA = "0xCAF310")]
	private void DrawMesh()
	{
	}

	[Token(Token = "0x6000EE4")]
	[Address(RVA = "0xCAF32C", Offset = "0xCAF32C", VA = "0xCAF32C")]
	private void CreateShape(Piece piece)
	{
	}

	[Token(Token = "0x6000EE5")]
	[Address(RVA = "0xCBCF34", Offset = "0xCBCF34", VA = "0xCBCF34")]
	private float GetVertOffset(bool axisNeighbor, bool perpNeighbor, bool cornerNeighbor, bool normEdge)
	{
		return default(float);
	}

	[Token(Token = "0x6000EE6")]
	[Address(RVA = "0xCBCEDC", Offset = "0xCBCEDC", VA = "0xCBCEDC")]
	private void UpdateMesh()
	{
	}

	[Token(Token = "0x6000EE7")]
	[Address(RVA = "0xCBCF9C", Offset = "0xCBCF9C", VA = "0xCBCF9C")]
	public MeshGeneration()
	{
	}
}
[Token(Token = "0x20002CA")]
[RequireComponent(typeof(MeshFilter))]
public class MeshGenerationNormal : MonoBehaviour
{
	[Token(Token = "0x4000D26")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3Int[] coords;

	[Token(Token = "0x4000D27")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Piece piece;

	[Token(Token = "0x4000D28")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float bevel;

	[Token(Token = "0x4000D29")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[Header("Debug")]
	private Mesh _mesh;

	[Token(Token = "0x4000D2A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Vector3[] _vertices;

	[Token(Token = "0x4000D2B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Vector3[] _normals;

	[Token(Token = "0x4000D2C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private int[] _triangles;

	[Token(Token = "0x4000D2D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Segment _currentSegment;

	[Token(Token = "0x4000D2E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool hasD;

	[Token(Token = "0x4000D2F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
	private bool hasF;

	[Token(Token = "0x4000D30")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5A")]
	private bool hasU;

	[Token(Token = "0x4000D31")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5B")]
	private bool hasB;

	[Token(Token = "0x4000D32")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private bool hasL;

	[Token(Token = "0x4000D33")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5D")]
	private bool hasR;

	[Token(Token = "0x4000D34")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5E")]
	private bool hasBL;

	[Token(Token = "0x4000D35")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5F")]
	private bool hasFL;

	[Token(Token = "0x4000D36")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private bool hasBR;

	[Token(Token = "0x4000D37")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
	private bool hasFR;

	[Token(Token = "0x4000D38")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x62")]
	private bool hasDR;

	[Token(Token = "0x4000D39")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x63")]
	private bool hasDL;

	[Token(Token = "0x4000D3A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private bool hasUR;

	[Token(Token = "0x4000D3B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x65")]
	private bool hasUL;

	[Token(Token = "0x4000D3C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x66")]
	private bool hasDF;

	[Token(Token = "0x4000D3D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x67")]
	private bool hasDB;

	[Token(Token = "0x4000D3E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private bool hasUF;

	[Token(Token = "0x4000D3F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x69")]
	private bool hasUB;

	[Token(Token = "0x4000D40")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6A")]
	private bool hasDFL;

	[Token(Token = "0x4000D41")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6B")]
	private bool hasDFR;

	[Token(Token = "0x4000D42")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private bool hasDBL;

	[Token(Token = "0x4000D43")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6D")]
	private bool hasDBR;

	[Token(Token = "0x4000D44")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6E")]
	private bool hasUFL;

	[Token(Token = "0x4000D45")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6F")]
	private bool hasUFR;

	[Token(Token = "0x4000D46")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private bool hasUBL;

	[Token(Token = "0x4000D47")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x71")]
	private bool hasUBR;

	[Token(Token = "0x4000D48")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private int vIndex;

	[Token(Token = "0x4000D49")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private int tIndex;

	[Token(Token = "0x17000105")]
	private float r
	{
		[Token(Token = "0x6000EE8")]
		[Address(RVA = "0xCBD09C", Offset = "0xCBD09C", VA = "0xCBD09C")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000106")]
	private float rb
	{
		[Token(Token = "0x6000EE9")]
		[Address(RVA = "0xCBD0F4", Offset = "0xCBD0F4", VA = "0xCBD0F4")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000107")]
	private float rpb
	{
		[Token(Token = "0x6000EEA")]
		[Address(RVA = "0xCBD158", Offset = "0xCBD158", VA = "0xCBD158")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000108")]
	private float rphb
	{
		[Token(Token = "0x6000EEB")]
		[Address(RVA = "0xCBD1BC", Offset = "0xCBD1BC", VA = "0xCBD1BC")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000109")]
	private float rmhb
	{
		[Token(Token = "0x6000EEC")]
		[Address(RVA = "0xCBD228", Offset = "0xCBD228", VA = "0xCBD228")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x1700010A")]
	private float d
	{
		[Token(Token = "0x6000EED")]
		[Address(RVA = "0xCBD294", Offset = "0xCBD294", VA = "0xCBD294")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x1700010B")]
	private Vector3 nd
	{
		[Token(Token = "0x6000EEE")]
		[Address(RVA = "0xCBD2EC", Offset = "0xCBD2EC", VA = "0xCBD2EC")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x1700010C")]
	private Vector3 nu
	{
		[Token(Token = "0x6000EEF")]
		[Address(RVA = "0xCBD330", Offset = "0xCBD330", VA = "0xCBD330")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x1700010D")]
	private Vector3 nf
	{
		[Token(Token = "0x6000EF0")]
		[Address(RVA = "0xCBD374", Offset = "0xCBD374", VA = "0xCBD374")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x1700010E")]
	private Vector3 nb
	{
		[Token(Token = "0x6000EF1")]
		[Address(RVA = "0xCBD3B8", Offset = "0xCBD3B8", VA = "0xCBD3B8")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x1700010F")]
	private Vector3 nl
	{
		[Token(Token = "0x6000EF2")]
		[Address(RVA = "0xCBD3FC", Offset = "0xCBD3FC", VA = "0xCBD3FC")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x17000110")]
	private Vector3 nr
	{
		[Token(Token = "0x6000EF3")]
		[Address(RVA = "0xCBD440", Offset = "0xCBD440", VA = "0xCBD440")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x17000111")]
	private Vector3 ndf
	{
		[Token(Token = "0x6000EF4")]
		[Address(RVA = "0xCBD484", Offset = "0xCBD484", VA = "0xCBD484")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x17000112")]
	private Vector3 ndb
	{
		[Token(Token = "0x6000EF5")]
		[Address(RVA = "0xCBD510", Offset = "0xCBD510", VA = "0xCBD510")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x17000113")]
	private Vector3 ndr
	{
		[Token(Token = "0x6000EF6")]
		[Address(RVA = "0xCBD59C", Offset = "0xCBD59C", VA = "0xCBD59C")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x17000114")]
	private Vector3 ndl
	{
		[Token(Token = "0x6000EF7")]
		[Address(RVA = "0xCBD628", Offset = "0xCBD628", VA = "0xCBD628")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x17000115")]
	private Vector3 nuf
	{
		[Token(Token = "0x6000EF8")]
		[Address(RVA = "0xCBD6B4", Offset = "0xCBD6B4", VA = "0xCBD6B4")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x17000116")]
	private Vector3 nub
	{
		[Token(Token = "0x6000EF9")]
		[Address(RVA = "0xCBD740", Offset = "0xCBD740", VA = "0xCBD740")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x17000117")]
	private Vector3 nur
	{
		[Token(Token = "0x6000EFA")]
		[Address(RVA = "0xCBD7CC", Offset = "0xCBD7CC", VA = "0xCBD7CC")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x17000118")]
	private Vector3 nul
	{
		[Token(Token = "0x6000EFB")]
		[Address(RVA = "0xCBD858", Offset = "0xCBD858", VA = "0xCBD858")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x17000119")]
	private Vector3 nfl
	{
		[Token(Token = "0x6000EFC")]
		[Address(RVA = "0xCBD8E4", Offset = "0xCBD8E4", VA = "0xCBD8E4")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x1700011A")]
	private Vector3 nfr
	{
		[Token(Token = "0x6000EFD")]
		[Address(RVA = "0xCBD970", Offset = "0xCBD970", VA = "0xCBD970")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x1700011B")]
	private Vector3 nbl
	{
		[Token(Token = "0x6000EFE")]
		[Address(RVA = "0xCBD9FC", Offset = "0xCBD9FC", VA = "0xCBD9FC")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x1700011C")]
	private Vector3 nbr
	{
		[Token(Token = "0x6000EFF")]
		[Address(RVA = "0xCBDA88", Offset = "0xCBDA88", VA = "0xCBDA88")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x1700011D")]
	private Vector3 ndfl
	{
		[Token(Token = "0x6000F00")]
		[Address(RVA = "0xCBDB14", Offset = "0xCBDB14", VA = "0xCBDB14")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x1700011E")]
	private Vector3 ndfr
	{
		[Token(Token = "0x6000F01")]
		[Address(RVA = "0xCBDBDC", Offset = "0xCBDBDC", VA = "0xCBDBDC")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x1700011F")]
	private Vector3 ndbl
	{
		[Token(Token = "0x6000F02")]
		[Address(RVA = "0xCBDCA4", Offset = "0xCBDCA4", VA = "0xCBDCA4")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x17000120")]
	private Vector3 ndbr
	{
		[Token(Token = "0x6000F03")]
		[Address(RVA = "0xCBDD6C", Offset = "0xCBDD6C", VA = "0xCBDD6C")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x17000121")]
	private Vector3 nufl
	{
		[Token(Token = "0x6000F04")]
		[Address(RVA = "0xCBDE34", Offset = "0xCBDE34", VA = "0xCBDE34")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x17000122")]
	private Vector3 nufr
	{
		[Token(Token = "0x6000F05")]
		[Address(RVA = "0xCBDEFC", Offset = "0xCBDEFC", VA = "0xCBDEFC")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x17000123")]
	private Vector3 nubl
	{
		[Token(Token = "0x6000F06")]
		[Address(RVA = "0xCBDFC4", Offset = "0xCBDFC4", VA = "0xCBDFC4")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x17000124")]
	private Vector3 nubr
	{
		[Token(Token = "0x6000F07")]
		[Address(RVA = "0xCBE08C", Offset = "0xCBE08C", VA = "0xCBE08C")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x6000F08")]
	[Address(RVA = "0xCBE154", Offset = "0xCBE154", VA = "0xCBE154")]
	private void Start()
	{
	}

	[Token(Token = "0x6000F09")]
	[Address(RVA = "0xCBE2B4", Offset = "0xCBE2B4", VA = "0xCBE2B4")]
	private void DrawMesh()
	{
	}

	[Token(Token = "0x6000F0A")]
	[Address(RVA = "0xCBE2D0", Offset = "0xCBE2D0", VA = "0xCBE2D0")]
	private void CreateShape(Piece piece)
	{
	}

	[Token(Token = "0x6000F0B")]
	[Address(RVA = "0xCC8CDC", Offset = "0xCC8CDC", VA = "0xCC8CDC")]
	private void AddToTriangleArray(int vert)
	{
	}

	[Token(Token = "0x6000F0C")]
	[Address(RVA = "0xCC868C", Offset = "0xCC868C", VA = "0xCC868C")]
	private Vector3 GetNormalDFL()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000F0D")]
	[Address(RVA = "0xCC8B48", Offset = "0xCC8B48", VA = "0xCC8B48")]
	private Vector3 GetNormalDFR()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000F0E")]
	[Address(RVA = "0xCC8820", Offset = "0xCC8820", VA = "0xCC8820")]
	private Vector3 GetNormalDBL()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000F0F")]
	[Address(RVA = "0xCC89B4", Offset = "0xCC89B4", VA = "0xCC89B4")]
	private Vector3 GetNormalDBR()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000F10")]
	[Address(RVA = "0xCC9104", Offset = "0xCC9104", VA = "0xCC9104")]
	private Vector3 GetNormalUFL()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000F11")]
	[Address(RVA = "0xCC8D1C", Offset = "0xCC8D1C", VA = "0xCC8D1C")]
	private Vector3 GetNormalUFR()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000F12")]
	[Address(RVA = "0xCC9298", Offset = "0xCC9298", VA = "0xCC9298")]
	private Vector3 GetNormalUBL()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000F13")]
	[Address(RVA = "0xCC942C", Offset = "0xCC942C", VA = "0xCC942C")]
	private Vector3 GetNormalUBR()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000F14")]
	[Address(RVA = "0xCC95C0", Offset = "0xCC95C0", VA = "0xCC95C0")]
	private float GetVertOffset(bool axisNeighbor, bool perpNeighbor, bool cornerNeighbor, bool normEdge)
	{
		return default(float);
	}

	[Token(Token = "0x6000F15")]
	[Address(RVA = "0xCC8630", Offset = "0xCC8630", VA = "0xCC8630")]
	private void UpdateMesh()
	{
	}

	[Token(Token = "0x6000F16")]
	[Address(RVA = "0xCC9628", Offset = "0xCC9628", VA = "0xCC9628")]
	public MeshGenerationNormal()
	{
	}
}
[Token(Token = "0x20002CB")]
[RequireComponent(typeof(MeshFilter))]
public class MeshGenerationNormalBackup : MonoBehaviour
{
	[Token(Token = "0x4000D4A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3Int[] coords;

	[Token(Token = "0x4000D4B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Piece piece;

	[Token(Token = "0x4000D4C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float bevel;

	[Token(Token = "0x4000D4D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[Header("Debug")]
	private Mesh _mesh;

	[Token(Token = "0x4000D4E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Vector3[] _verts;

	[Token(Token = "0x4000D4F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Vector3[] _norms;

	[Token(Token = "0x4000D50")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Vector3[] _normsCopy;

	[Token(Token = "0x4000D51")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private int[] _tris;

	[Token(Token = "0x4000D52")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Segment _currentSegment;

	[Token(Token = "0x4000D53")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private bool hasD;

	[Token(Token = "0x4000D54")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
	private bool hasF;

	[Token(Token = "0x4000D55")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x62")]
	private bool hasU;

	[Token(Token = "0x4000D56")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x63")]
	private bool hasB;

	[Token(Token = "0x4000D57")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private bool hasL;

	[Token(Token = "0x4000D58")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x65")]
	private bool hasR;

	[Token(Token = "0x4000D59")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private int vIndex;

	[Token(Token = "0x4000D5A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private int tIndex;

	[Token(Token = "0x4000D5B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private List<int> edgeVertices;

	[Token(Token = "0x17000125")]
	private float r
	{
		[Token(Token = "0x6000F17")]
		[Address(RVA = "0xCC96EC", Offset = "0xCC96EC", VA = "0xCC96EC")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000126")]
	private float rb
	{
		[Token(Token = "0x6000F18")]
		[Address(RVA = "0xCC9744", Offset = "0xCC9744", VA = "0xCC9744")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000127")]
	private float rpb
	{
		[Token(Token = "0x6000F19")]
		[Address(RVA = "0xCC97A8", Offset = "0xCC97A8", VA = "0xCC97A8")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000128")]
	private float rphb
	{
		[Token(Token = "0x6000F1A")]
		[Address(RVA = "0xCC980C", Offset = "0xCC980C", VA = "0xCC980C")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000129")]
	private float rmhb
	{
		[Token(Token = "0x6000F1B")]
		[Address(RVA = "0xCC9878", Offset = "0xCC9878", VA = "0xCC9878")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x1700012A")]
	private float d
	{
		[Token(Token = "0x6000F1C")]
		[Address(RVA = "0xCC98E4", Offset = "0xCC98E4", VA = "0xCC98E4")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x1700012B")]
	private Vector3 nd
	{
		[Token(Token = "0x6000F1D")]
		[Address(RVA = "0xCC993C", Offset = "0xCC993C", VA = "0xCC993C")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x1700012C")]
	private Vector3 nu
	{
		[Token(Token = "0x6000F1E")]
		[Address(RVA = "0xCC9980", Offset = "0xCC9980", VA = "0xCC9980")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x1700012D")]
	private Vector3 nf
	{
		[Token(Token = "0x6000F1F")]
		[Address(RVA = "0xCC99C4", Offset = "0xCC99C4", VA = "0xCC99C4")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x1700012E")]
	private Vector3 nb
	{
		[Token(Token = "0x6000F20")]
		[Address(RVA = "0xCC9A08", Offset = "0xCC9A08", VA = "0xCC9A08")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x1700012F")]
	private Vector3 nl
	{
		[Token(Token = "0x6000F21")]
		[Address(RVA = "0xCC9A4C", Offset = "0xCC9A4C", VA = "0xCC9A4C")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x17000130")]
	private Vector3 nr
	{
		[Token(Token = "0x6000F22")]
		[Address(RVA = "0xCC9A90", Offset = "0xCC9A90", VA = "0xCC9A90")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x6000F23")]
	[Address(RVA = "0xCC9AD4", Offset = "0xCC9AD4", VA = "0xCC9AD4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000F24")]
	[Address(RVA = "0xCC9C34", Offset = "0xCC9C34", VA = "0xCC9C34")]
	private void DrawMesh()
	{
	}

	[Token(Token = "0x6000F25")]
	[Address(RVA = "0xCC9C50", Offset = "0xCC9C50", VA = "0xCC9C50")]
	private void CreateShape(Piece piece)
	{
	}

	[Token(Token = "0x6000F26")]
	[Address(RVA = "0xCD59BC", Offset = "0xCD59BC", VA = "0xCD59BC")]
	private void AddToTriangleArray(int vert)
	{
	}

	[Token(Token = "0x6000F27")]
	[Address(RVA = "0xCD59FC", Offset = "0xCD59FC", VA = "0xCD59FC")]
	private float GetVertOffset(bool axisNeighbor, bool perpNeighbor, bool cornerNeighbor, bool normEdge)
	{
		return default(float);
	}

	[Token(Token = "0x6000F28")]
	[Address(RVA = "0xCD5960", Offset = "0xCD5960", VA = "0xCD5960")]
	private void UpdateMesh()
	{
	}

	[Token(Token = "0x6000F29")]
	[Address(RVA = "0xCD5A64", Offset = "0xCD5A64", VA = "0xCD5A64")]
	public MeshGenerationNormalBackup()
	{
	}
}
[Token(Token = "0x20002CE")]
public class MixedRealityCamService : MonoBehaviour
{
	[Token(Token = "0x4000D5F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OVRManager _ovrManager;

	[Token(Token = "0x4000D60")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private State _state;

	[Token(Token = "0x4000D61")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private CameraTestServer _camTestServer;

	[Token(Token = "0x6000F2F")]
	[Address(RVA = "0xCD5C44", Offset = "0xCD5C44", VA = "0xCD5C44")]
	public void Setup(State state)
	{
	}

	[Token(Token = "0x6000F30")]
	[Address(RVA = "0xCD5DE0", Offset = "0xCD5DE0", VA = "0xCD5DE0")]
	private void RegisterActions(ControllerAction action)
	{
	}

	[Token(Token = "0x6000F31")]
	[Address(RVA = "0xCD5CDC", Offset = "0xCD5CDC", VA = "0xCD5CDC")]
	private void UpdateMrCamera()
	{
	}

	[Token(Token = "0x6000F32")]
	[Address(RVA = "0xCD5FC8", Offset = "0xCD5FC8", VA = "0xCD5FC8")]
	private void ShowLayer(bool visibility, string layer)
	{
	}

	[Token(Token = "0x6000F33")]
	[Address(RVA = "0xCD5F30", Offset = "0xCD5F30", VA = "0xCD5F30")]
	private void SpawnCamTestServerIfNoneExist()
	{
	}

	[Token(Token = "0x6000F34")]
	[Address(RVA = "0xCD6044", Offset = "0xCD6044", VA = "0xCD6044")]
	public MixedRealityCamService()
	{
	}
}
[Token(Token = "0x20002CF")]
public class Mixp : MonoBehaviour
{
	[Token(Token = "0x6000F35")]
	[Address(RVA = "0xCD604C", Offset = "0xCD604C", VA = "0xCD604C")]
	private void mix()
	{
	}

	[Token(Token = "0x6000F36")]
	[Address(RVA = "0xCD6188", Offset = "0xCD6188", VA = "0xCD6188")]
	public Mixp()
	{
	}
}
[Token(Token = "0x20002D0")]
[SerializeField]
public class Neighbors<T>
{
	[Token(Token = "0x4000D62")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public T[,,] neighbours;

	[Token(Token = "0x6000F37")]
	public void Put(T cell, int right, int top, int front)
	{
	}

	[Token(Token = "0x6000F38")]
	public T Get(int right, int top, int front)
	{
		return (T)null;
	}

	[Token(Token = "0x6000F39")]
	public void Clear(int right, int top, int front)
	{
	}

	[Token(Token = "0x6000F3A")]
	public bool Has(int right, int top, int front)
	{
		return default(bool);
	}

	[Token(Token = "0x6000F3B")]
	public bool EdgeOnCorner(int x, int y, int z)
	{
		return default(bool);
	}

	[Token(Token = "0x6000F3C")]
	public List<T> GetAllNeighbors()
	{
		return null;
	}

	[Token(Token = "0x6000F3D")]
	public List<T> GetTouchingNeighbors()
	{
		return null;
	}

	[Token(Token = "0x6000F3E")]
	public int NeighborsInCorner(int r, int u, int f)
	{
		return default(int);
	}

	[Token(Token = "0x6000F3F")]
	public override string ToString()
	{
		return null;
	}

	[Token(Token = "0x6000F40")]
	public Neighbors()
	{
	}
}
[Token(Token = "0x20002D1")]
public class ObjectLogger : MonoBehaviour
{
	[Token(Token = "0x4000D63")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject target;

	[Token(Token = "0x6000F41")]
	[Address(RVA = "0xCD6190", Offset = "0xCD6190", VA = "0xCD6190")]
	private void Update()
	{
	}

	[Token(Token = "0x6000F42")]
	[Address(RVA = "0xCD63FC", Offset = "0xCD63FC", VA = "0xCD63FC")]
	public ObjectLogger()
	{
	}
}
[Token(Token = "0x20002D2")]
public class OrbitalCamera : StateBehaviour
{
	[Token(Token = "0x4000D64")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Toggle _viewOrtho;

	[Token(Token = "0x4000D65")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Toggle _showUi;

	[Token(Token = "0x4000D66")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Toggle _showAvatar;

	[Token(Token = "0x4000D67")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Toggle _showHands;

	[Token(Token = "0x4000D68")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Slider _rpm;

	[Token(Token = "0x4000D69")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float degreesPerSecond;

	[Token(Token = "0x4000D6A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public float zoomStep;

	[Token(Token = "0x4000D6B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public float orthoZoomStep;

	[Token(Token = "0x4000D6C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public float dragStep;

	[Token(Token = "0x4000D6D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[Space(25f)]
	public Calibration _calibration;

	[Token(Token = "0x4000D6E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public PuzzleLoader _puzzleLoader;

	[Token(Token = "0x4000D6F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Grid _grid;

	[Token(Token = "0x4000D70")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Transform _yawTransform;

	[Token(Token = "0x4000D71")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Transform _pitchTransform;

	[Token(Token = "0x4000D72")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Transform _camWrapper;

	[Token(Token = "0x4000D73")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[Space(25f)]
	public Camera _perspective;

	[Token(Token = "0x4000D74")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public Camera _ortho;

	[Token(Token = "0x4000D75")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public Transform _target;

	[Token(Token = "0x4000D76")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private Vector3 _mousePrevPos;

	[Token(Token = "0x4000D77")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	private bool _rotateActive;

	[Token(Token = "0x6000F43")]
	[Address(RVA = "0xCD6404", Offset = "0xCD6404", VA = "0xCD6404")]
	private void Start()
	{
	}

	[Token(Token = "0x6000F44")]
	[Address(RVA = "0xCD6854", Offset = "0xCD6854", VA = "0xCD6854")]
	private void Update()
	{
	}

	[Token(Token = "0x6000F45")]
	[Address(RVA = "0xCD692C", Offset = "0xCD692C", VA = "0xCD692C")]
	private void Position()
	{
	}

	[Token(Token = "0x6000F46")]
	[Address(RVA = "0xCD6C08", Offset = "0xCD6C08", VA = "0xCD6C08")]
	private void VerticalPan()
	{
	}

	[Token(Token = "0x6000F47")]
	[Address(RVA = "0xCD6CA8", Offset = "0xCD6CA8", VA = "0xCD6CA8")]
	private void HorizontalPan()
	{
	}

	[Token(Token = "0x6000F48")]
	[Address(RVA = "0xCD6A3C", Offset = "0xCD6A3C", VA = "0xCD6A3C")]
	private void Zoom()
	{
	}

	[Token(Token = "0x6000F49")]
	[Address(RVA = "0xCD6B34", Offset = "0xCD6B34", VA = "0xCD6B34")]
	private void Rotate()
	{
	}

	[Token(Token = "0x6000F4A")]
	[Address(RVA = "0xCD6D48", Offset = "0xCD6D48", VA = "0xCD6D48")]
	private void HandleInput()
	{
	}

	[Token(Token = "0x6000F4B")]
	[Address(RVA = "0xCD66B8", Offset = "0xCD66B8", VA = "0xCD66B8")]
	private void SetOrtho(bool visible)
	{
	}

	[Token(Token = "0x6000F4C")]
	[Address(RVA = "0xCD6820", Offset = "0xCD6820", VA = "0xCD6820")]
	private void SetDegreesPerSecond(float rpm)
	{
	}

	[Token(Token = "0x6000F4D")]
	[Address(RVA = "0xCD6718", Offset = "0xCD6718", VA = "0xCD6718")]
	private void ShowUi(bool show)
	{
	}

	[Token(Token = "0x6000F4E")]
	[Address(RVA = "0xCD6770", Offset = "0xCD6770", VA = "0xCD6770")]
	private void ShowAvatar(bool show)
	{
	}

	[Token(Token = "0x6000F4F")]
	[Address(RVA = "0xCD67C8", Offset = "0xCD67C8", VA = "0xCD67C8")]
	private void ShowHands(bool show)
	{
	}

	[Token(Token = "0x6000F50")]
	[Address(RVA = "0xCD6F34", Offset = "0xCD6F34", VA = "0xCD6F34")]
	private void ShowLayer(bool visibility, string layer)
	{
	}

	[Token(Token = "0x6000F51")]
	[Address(RVA = "0xCD6FC0", Offset = "0xCD6FC0", VA = "0xCD6FC0")]
	public OrbitalCamera()
	{
	}
}
[Token(Token = "0x20002D3")]
public class OVRRoomRedrawer : MonoBehaviour
{
	[Token(Token = "0x20002D4")]
	[CompilerGenerated]
	private sealed class <_WaitAndRedrawRoom>d__7 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000D7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000D7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000D7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public OVRRoomRedrawer <>4__this;

		[Token(Token = "0x17000131")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000F5C")]
			[Address(RVA = "0xCD7D48", Offset = "0xCD7D48", VA = "0xCD7D48", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000132")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000F5E")]
			[Address(RVA = "0xCD7D90", Offset = "0xCD7D90", VA = "0xCD7D90", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000F59")]
		[Address(RVA = "0xCD7274", Offset = "0xCD7274", VA = "0xCD7274")]
		[DebuggerHidden]
		public <_WaitAndRedrawRoom>d__7(int <>1__state)
		{
		}

		[Token(Token = "0x6000F5A")]
		[Address(RVA = "0xCD7CF4", Offset = "0xCD7CF4", VA = "0xCD7CF4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000F5B")]
		[Address(RVA = "0xCD7CF8", Offset = "0xCD7CF8", VA = "0xCD7CF8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000F5D")]
		[Address(RVA = "0xCD7D50", Offset = "0xCD7D50", VA = "0xCD7D50", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000D78")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OVRSceneManager sceneManager;

	[Token(Token = "0x4000D79")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public RoomColliderSpawner roomColliderSpawner;

	[Token(Token = "0x4000D7A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float refreshRate;

	[Token(Token = "0x4000D7B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private SceneModel _scene;

	[Token(Token = "0x6000F52")]
	[Address(RVA = "0xCD6FD0", Offset = "0xCD6FD0", VA = "0xCD6FD0")]
	public void Setup(SceneModel scene)
	{
	}

	[Token(Token = "0x6000F53")]
	[Address(RVA = "0xCD70F8", Offset = "0xCD70F8", VA = "0xCD70F8")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000F54")]
	[Address(RVA = "0xCD71EC", Offset = "0xCD71EC", VA = "0xCD71EC")]
	private void WaitAndRedrawRoom()
	{
	}

	[Token(Token = "0x6000F55")]
	[Address(RVA = "0xCD720C", Offset = "0xCD720C", VA = "0xCD720C")]
	[IteratorStateMachine(typeof(<_WaitAndRedrawRoom>d__7))]
	private IEnumerator _WaitAndRedrawRoom()
	{
		return null;
	}

	[Token(Token = "0x6000F56")]
	[Address(RVA = "0xCD729C", Offset = "0xCD729C", VA = "0xCD729C")]
	private void RedrawRoom()
	{
	}

	[Token(Token = "0x6000F57")]
	[Address(RVA = "0xCD732C", Offset = "0xCD732C", VA = "0xCD732C")]
	private void RecalcCorners()
	{
	}

	[Token(Token = "0x6000F58")]
	[Address(RVA = "0xCD7CE4", Offset = "0xCD7CE4", VA = "0xCD7CE4")]
	public OVRRoomRedrawer()
	{
	}
}
[Token(Token = "0x20002D5")]
public class Pagination : MonoBehaviour
{
	[Token(Token = "0x4000D80")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform _pageWrapper;

	[Token(Token = "0x4000D81")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject _paginationUiWrapper;

	[Token(Token = "0x4000D82")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Text _pageText;

	[Token(Token = "0x4000D83")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public VrButton _prev;

	[Token(Token = "0x4000D84")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public VrButton _next;

	[Token(Token = "0x4000D85")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[Space(15f)]
	public bool _useGameObjectName;

	[Token(Token = "0x4000D86")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public string _pagePrefix;

	[Token(Token = "0x4000D87")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public string _pageDivider;

	[Token(Token = "0x4000D88")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private List<Transform> _pages;

	[Token(Token = "0x4000D89")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private int _numberOfPages;

	[Token(Token = "0x4000D8A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private int _currentPage;

	[Token(Token = "0x17000133")]
	public int currentPage
	{
		[Token(Token = "0x6000F61")]
		[Address(RVA = "0xCD7EF8", Offset = "0xCD7EF8", VA = "0xCD7EF8")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000F62")]
		[Address(RVA = "0xCD7F00", Offset = "0xCD7F00", VA = "0xCD7F00")]
		set
		{
		}
	}

	[Token(Token = "0x14000086")]
	public event Action<int> OnPageChange
	{
		[Token(Token = "0x6000F5F")]
		[Address(RVA = "0xCD7D98", Offset = "0xCD7D98", VA = "0xCD7D98")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000F60")]
		[Address(RVA = "0xCD7E48", Offset = "0xCD7E48", VA = "0xCD7E48")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x6000F63")]
	[Address(RVA = "0xCD7F48", Offset = "0xCD7F48", VA = "0xCD7F48")]
	private void Start()
	{
	}

	[Token(Token = "0x6000F64")]
	[Address(RVA = "0xCD8030", Offset = "0xCD8030", VA = "0xCD8030")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000F65")]
	[Address(RVA = "0xCD7F18", Offset = "0xCD7F18", VA = "0xCD7F18")]
	private void UpdateView()
	{
	}

	[Token(Token = "0x6000F66")]
	[Address(RVA = "0xCD8034", Offset = "0xCD8034", VA = "0xCD8034")]
	private void UpdatePages()
	{
	}

	[Token(Token = "0x6000F67")]
	[Address(RVA = "0xCD8664", Offset = "0xCD8664", VA = "0xCD8664")]
	public void PageUp()
	{
	}

	[Token(Token = "0x6000F68")]
	[Address(RVA = "0xCD8690", Offset = "0xCD8690", VA = "0xCD8690")]
	public void PageDown()
	{
	}

	[Token(Token = "0x6000F69")]
	[Address(RVA = "0xCD86B4", Offset = "0xCD86B4", VA = "0xCD86B4")]
	public void ToEnd()
	{
	}

	[Token(Token = "0x6000F6A")]
	[Address(RVA = "0xCD83D0", Offset = "0xCD83D0", VA = "0xCD83D0")]
	private void UpdateVisiblePage()
	{
	}

	[Token(Token = "0x6000F6B")]
	[Address(RVA = "0xCD84F4", Offset = "0xCD84F4", VA = "0xCD84F4")]
	private void UpdatePageText()
	{
	}

	[Token(Token = "0x6000F6C")]
	[Address(RVA = "0xCD8478", Offset = "0xCD8478", VA = "0xCD8478")]
	private void UpdateVisibility()
	{
	}

	[Token(Token = "0x6000F6D")]
	[Address(RVA = "0xCD85FC", Offset = "0xCD85FC", VA = "0xCD85FC")]
	private void CheckPageValidity()
	{
	}

	[Token(Token = "0x6000F6E")]
	[Address(RVA = "0xCD86CC", Offset = "0xCD86CC", VA = "0xCD86CC")]
	private void FireOnPageChanged()
	{
	}

	[Token(Token = "0x6000F6F")]
	[Address(RVA = "0xCD86EC", Offset = "0xCD86EC", VA = "0xCD86EC")]
	public Pagination()
	{
	}
}
[Token(Token = "0x20002D6")]
public class PathCreator
{
	[Token(Token = "0x4000D8B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private State _state;

	[Token(Token = "0x4000D8C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private string _savePath;

	[Token(Token = "0x4000D8D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static PathCreator _instance;

	[Token(Token = "0x6000F70")]
	[Address(RVA = "0xCD87B0", Offset = "0xCD87B0", VA = "0xCD87B0")]
	public PathCreator(State state)
	{
	}

	[Token(Token = "0x6000F71")]
	[Address(RVA = "0xCD8884", Offset = "0xCD8884", VA = "0xCD8884")]
	public void UpdateSavePath(string savePath)
	{
	}

	[Token(Token = "0x6000F72")]
	[Address(RVA = "0xCD8918", Offset = "0xCD8918", VA = "0xCD8918")]
	public static PathCreator Get()
	{
		return null;
	}

	[Token(Token = "0x6000F73")]
	[Address(RVA = "0xCD8960", Offset = "0xCD8960", VA = "0xCD8960")]
	public string GetSavePath(string fileName)
	{
		return null;
	}

	[Token(Token = "0x6000F74")]
	[Address(RVA = "0xCD8A20", Offset = "0xCD8A20", VA = "0xCD8A20")]
	public string GetSavePathOld(string fileName)
	{
		return null;
	}

	[Token(Token = "0x6000F75")]
	[Address(RVA = "0xCD8AB8", Offset = "0xCD8AB8", VA = "0xCD8AB8")]
	public string GetMainFilepath()
	{
		return null;
	}

	[Token(Token = "0x6000F76")]
	[Address(RVA = "0xCD8AEC", Offset = "0xCD8AEC", VA = "0xCD8AEC")]
	public string GetMainFilepath(int index)
	{
		return null;
	}

	[Token(Token = "0x6000F77")]
	[Address(RVA = "0xCD8CD4", Offset = "0xCD8CD4", VA = "0xCD8CD4")]
	public string GetPuzzlePackFilepath(string packName)
	{
		return null;
	}

	[Token(Token = "0x6000F78")]
	[Address(RVA = "0xCD8D18", Offset = "0xCD8D18", VA = "0xCD8D18")]
	public string GetPuzzlePackFilepath(int index, string packName)
	{
		return null;
	}

	[Token(Token = "0x6000F79")]
	[Address(RVA = "0xCD8DE0", Offset = "0xCD8DE0", VA = "0xCD8DE0")]
	public string GetCustomFilepath()
	{
		return null;
	}

	[Token(Token = "0x6000F7A")]
	[Address(RVA = "0xCD8E14", Offset = "0xCD8E14", VA = "0xCD8E14")]
	public string GetCustomFilepath(int index)
	{
		return null;
	}

	[Token(Token = "0x6000F7B")]
	[Address(RVA = "0xCD8ED4", Offset = "0xCD8ED4", VA = "0xCD8ED4")]
	public string GetMainFilePathOld(int saveFileIndex = 0)
	{
		return null;
	}

	[Token(Token = "0x6000F7C")]
	[Address(RVA = "0xCD8BB4", Offset = "0xCD8BB4", VA = "0xCD8BB4")]
	private string GetFileBody(Platform platform)
	{
		return null;
	}

	[Token(Token = "0x6000F7D")]
	[Address(RVA = "0xCD8C50", Offset = "0xCD8C50", VA = "0xCD8C50")]
	private string GetFileSuffix(BuildType buildType)
	{
		return null;
	}

	[Token(Token = "0x6000F7E")]
	[Address(RVA = "0xCD8FE8", Offset = "0xCD8FE8", VA = "0xCD8FE8")]
	public static string GetCustomPuzzlePath()
	{
		return null;
	}
}
[Token(Token = "0x20002D7")]
public static class PieceMeshGen
{
	[Token(Token = "0x4000D8E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static float bevel;

	[Token(Token = "0x4000D8F")]
	public const float bevelLod0 = 0.0015f;

	[Token(Token = "0x4000D90")]
	public const float bevelLod2 = 0.003f;

	[Token(Token = "0x4000D91")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	private static int VertLimit;

	[Token(Token = "0x4000D92")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static int TriLimit;

	[Token(Token = "0x4000D93")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static Vector3[] _normsCopy;

	[Token(Token = "0x4000D94")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static List<int> _edgeVertices;

	[Token(Token = "0x4000D95")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private static List<int> _concaveEdgeVertices;

	[Token(Token = "0x4000D96")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private static Vector3[] faceNormals;

	[Token(Token = "0x4000D97")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private static Vector3[] edgeNormals;

	[Token(Token = "0x4000D98")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private static Vector3[] cornerNormals;

	[Token(Token = "0x4000D99")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private static bool hasD;

	[Token(Token = "0x4000D9A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
	private static bool hasF;

	[Token(Token = "0x4000D9B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x42")]
	private static bool hasU;

	[Token(Token = "0x4000D9C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x43")]
	private static bool hasB;

	[Token(Token = "0x4000D9D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private static bool hasL;

	[Token(Token = "0x4000D9E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x45")]
	private static bool hasR;

	[Token(Token = "0x4000D9F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private static int vIndex;

	[Token(Token = "0x4000DA0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private static int tIndex;

	[Token(Token = "0x4000DA1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private static int vIndexLod1;

	[Token(Token = "0x4000DA2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private static int tIndexLod1;

	[Token(Token = "0x4000DA3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private static Piece _piece;

	[Token(Token = "0x4000DA4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private static Segment _segm;

	[Token(Token = "0x17000134")]
	private static float r
	{
		[Token(Token = "0x6000F7F")]
		[Address(RVA = "0xCD90A0", Offset = "0xCD90A0", VA = "0xCD90A0")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000135")]
	private static float rb
	{
		[Token(Token = "0x6000F80")]
		[Address(RVA = "0xCD90F8", Offset = "0xCD90F8", VA = "0xCD90F8")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000136")]
	private static float rpb
	{
		[Token(Token = "0x6000F81")]
		[Address(RVA = "0xCD9198", Offset = "0xCD9198", VA = "0xCD9198")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000137")]
	private static float d
	{
		[Token(Token = "0x6000F82")]
		[Address(RVA = "0xCD9238", Offset = "0xCD9238", VA = "0xCD9238")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000138")]
	private static Vector3 nd
	{
		[Token(Token = "0x6000F83")]
		[Address(RVA = "0xCD9290", Offset = "0xCD9290", VA = "0xCD9290")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x17000139")]
	private static Vector3 nu
	{
		[Token(Token = "0x6000F84")]
		[Address(RVA = "0xCD92D4", Offset = "0xCD92D4", VA = "0xCD92D4")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x1700013A")]
	private static Vector3 nf
	{
		[Token(Token = "0x6000F85")]
		[Address(RVA = "0xCD9318", Offset = "0xCD9318", VA = "0xCD9318")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x1700013B")]
	private static Vector3 nb
	{
		[Token(Token = "0x6000F86")]
		[Address(RVA = "0xCD935C", Offset = "0xCD935C", VA = "0xCD935C")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x1700013C")]
	private static Vector3 nl
	{
		[Token(Token = "0x6000F87")]
		[Address(RVA = "0xCD93A0", Offset = "0xCD93A0", VA = "0xCD93A0")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x1700013D")]
	private static Vector3 nr
	{
		[Token(Token = "0x6000F88")]
		[Address(RVA = "0xCD93E4", Offset = "0xCD93E4", VA = "0xCD93E4")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x1700013E")]
	private static Vector3 ndf
	{
		[Token(Token = "0x6000F89")]
		[Address(RVA = "0xCD9428", Offset = "0xCD9428", VA = "0xCD9428")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x1700013F")]
	private static Vector3 ndb
	{
		[Token(Token = "0x6000F8A")]
		[Address(RVA = "0xCD94B4", Offset = "0xCD94B4", VA = "0xCD94B4")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x17000140")]
	private static Vector3 ndr
	{
		[Token(Token = "0x6000F8B")]
		[Address(RVA = "0xCD9540", Offset = "0xCD9540", VA = "0xCD9540")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x17000141")]
	private static Vector3 ndl
	{
		[Token(Token = "0x6000F8C")]
		[Address(RVA = "0xCD95CC", Offset = "0xCD95CC", VA = "0xCD95CC")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x17000142")]
	private static Vector3 nuf
	{
		[Token(Token = "0x6000F8D")]
		[Address(RVA = "0xCD9658", Offset = "0xCD9658", VA = "0xCD9658")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x17000143")]
	private static Vector3 nub
	{
		[Token(Token = "0x6000F8E")]
		[Address(RVA = "0xCD96E4", Offset = "0xCD96E4", VA = "0xCD96E4")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x17000144")]
	private static Vector3 nur
	{
		[Token(Token = "0x6000F8F")]
		[Address(RVA = "0xCD9770", Offset = "0xCD9770", VA = "0xCD9770")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x17000145")]
	private static Vector3 nul
	{
		[Token(Token = "0x6000F90")]
		[Address(RVA = "0xCD97FC", Offset = "0xCD97FC", VA = "0xCD97FC")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x17000146")]
	private static Vector3 nfl
	{
		[Token(Token = "0x6000F91")]
		[Address(RVA = "0xCD9888", Offset = "0xCD9888", VA = "0xCD9888")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x17000147")]
	private static Vector3 nfr
	{
		[Token(Token = "0x6000F92")]
		[Address(RVA = "0xCD9914", Offset = "0xCD9914", VA = "0xCD9914")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x17000148")]
	private static Vector3 nbl
	{
		[Token(Token = "0x6000F93")]
		[Address(RVA = "0xCD99A0", Offset = "0xCD99A0", VA = "0xCD99A0")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x17000149")]
	private static Vector3 nbr
	{
		[Token(Token = "0x6000F94")]
		[Address(RVA = "0xCD9A2C", Offset = "0xCD9A2C", VA = "0xCD9A2C")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x1700014A")]
	private static Vector3 ndfl
	{
		[Token(Token = "0x6000F95")]
		[Address(RVA = "0xCD9AB8", Offset = "0xCD9AB8", VA = "0xCD9AB8")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x1700014B")]
	private static Vector3 ndfr
	{
		[Token(Token = "0x6000F96")]
		[Address(RVA = "0xCD9B80", Offset = "0xCD9B80", VA = "0xCD9B80")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x1700014C")]
	private static Vector3 ndbl
	{
		[Token(Token = "0x6000F97")]
		[Address(RVA = "0xCD9C48", Offset = "0xCD9C48", VA = "0xCD9C48")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x1700014D")]
	private static Vector3 ndbr
	{
		[Token(Token = "0x6000F98")]
		[Address(RVA = "0xCD9D10", Offset = "0xCD9D10", VA = "0xCD9D10")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x1700014E")]
	private static Vector3 nufl
	{
		[Token(Token = "0x6000F99")]
		[Address(RVA = "0xCD9DD8", Offset = "0xCD9DD8", VA = "0xCD9DD8")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x1700014F")]
	private static Vector3 nufr
	{
		[Token(Token = "0x6000F9A")]
		[Address(RVA = "0xCD9EA0", Offset = "0xCD9EA0", VA = "0xCD9EA0")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x17000150")]
	private static Vector3 nubl
	{
		[Token(Token = "0x6000F9B")]
		[Address(RVA = "0xCD9F68", Offset = "0xCD9F68", VA = "0xCD9F68")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x17000151")]
	private static Vector3 nubr
	{
		[Token(Token = "0x6000F9C")]
		[Address(RVA = "0xCDA030", Offset = "0xCDA030", VA = "0xCDA030")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x6000F9D")]
	[Address(RVA = "0xCDA0F8", Offset = "0xCDA0F8", VA = "0xCDA0F8")]
	public static void PopulateMeshInfo(ref Piece piece, bool useCoordinates = true, [Optional] Vector3 pieceOrigin, [Optional] Vector3 extents)
	{
	}

	[Token(Token = "0x6000F9E")]
	[Address(RVA = "0xCE4A4C", Offset = "0xCE4A4C", VA = "0xCE4A4C")]
	private static void PopulateLod1(Vector3 normal)
	{
	}

	[Token(Token = "0x6000F9F")]
	[Address(RVA = "0xCE3DCC", Offset = "0xCE3DCC", VA = "0xCE3DCC")]
	private static void AddEdgeVertices()
	{
	}

	[Token(Token = "0x6000FA0")]
	[Address(RVA = "0xCE4314", Offset = "0xCE4314", VA = "0xCE4314")]
	private static void SetDefaultNormals(Vector3 normal)
	{
	}

	[Token(Token = "0x6000FA1")]
	[Address(RVA = "0xCE45E0", Offset = "0xCE45E0", VA = "0xCE45E0")]
	private static void AddTriangles()
	{
	}

	[Token(Token = "0x6000FA2")]
	[Address(RVA = "0xCE4EC4", Offset = "0xCE4EC4", VA = "0xCE4EC4")]
	private static void AddToTriangleArray(int vert)
	{
	}

	[Token(Token = "0x6000FA3")]
	[Address(RVA = "0xCE4F60", Offset = "0xCE4F60", VA = "0xCE4F60")]
	public static void PopulateLod2Info(ref Piece piece, [Optional] Vector3 pieceOrigin, [Optional] Vector3 extents)
	{
	}

	[Token(Token = "0x6000FA4")]
	[Address(RVA = "0xCED724", Offset = "0xCED724", VA = "0xCED724")]
	private static void AddLod2Triangles()
	{
	}

	[Token(Token = "0x6000FA5")]
	[Address(RVA = "0xCED7E0", Offset = "0xCED7E0", VA = "0xCED7E0")]
	private static void AddToLod2TriangleArray(int vert)
	{
	}

	[Token(Token = "0x6000FA6")]
	[Address(RVA = "0xCED608", Offset = "0xCED608", VA = "0xCED608")]
	private static void SetLod2DefaultNormals(Vector3 normal)
	{
	}
}
[Token(Token = "0x20002DA")]
public static class PieceMeshGen2
{
	[Token(Token = "0x4000DA8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static float bevel;

	[Token(Token = "0x4000DA9")]
	public const float bevelLod0 = 0.0015f;

	[Token(Token = "0x4000DAA")]
	public const float bevelLod2 = 0.003f;

	[Token(Token = "0x4000DAB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	private static int VertLimit;

	[Token(Token = "0x4000DAC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static int TriLimit;

	[Token(Token = "0x4000DAD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static Vector3[] _normsCopy;

	[Token(Token = "0x4000DAE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static List<int> _edgeVertices;

	[Token(Token = "0x4000DAF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private static List<int> _concaveEdgeVertices;

	[Token(Token = "0x4000DB0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private static Vector3[] faceNormals;

	[Token(Token = "0x4000DB1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private static Vector3[] edgeNormals;

	[Token(Token = "0x4000DB2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private static Vector3[] cornerNormals;

	[Token(Token = "0x4000DB3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private static bool hasD;

	[Token(Token = "0x4000DB4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
	private static bool hasF;

	[Token(Token = "0x4000DB5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x42")]
	private static bool hasU;

	[Token(Token = "0x4000DB6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x43")]
	private static bool hasB;

	[Token(Token = "0x4000DB7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private static bool hasL;

	[Token(Token = "0x4000DB8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x45")]
	private static bool hasR;

	[Token(Token = "0x4000DB9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private static int vIndex;

	[Token(Token = "0x4000DBA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private static int tIndex;

	[Token(Token = "0x4000DBB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private static int tEdgeIndex;

	[Token(Token = "0x4000DBC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private static int vIndexLod1;

	[Token(Token = "0x4000DBD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private static int tIndexLod1;

	[Token(Token = "0x4000DBE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private static Piece _piece;

	[Token(Token = "0x4000DBF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private static Segment _segm;

	[Token(Token = "0x17000152")]
	private static float r
	{
		[Token(Token = "0x6000FAD")]
		[Address(RVA = "0xCEDCE4", Offset = "0xCEDCE4", VA = "0xCEDCE4")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000153")]
	private static float rb
	{
		[Token(Token = "0x6000FAE")]
		[Address(RVA = "0xCEDD3C", Offset = "0xCEDD3C", VA = "0xCEDD3C")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000154")]
	private static float rpb
	{
		[Token(Token = "0x6000FAF")]
		[Address(RVA = "0xCEDDDC", Offset = "0xCEDDDC", VA = "0xCEDDDC")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000155")]
	private static float d
	{
		[Token(Token = "0x6000FB0")]
		[Address(RVA = "0xCEDE7C", Offset = "0xCEDE7C", VA = "0xCEDE7C")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000156")]
	private static Vector3 nd
	{
		[Token(Token = "0x6000FB1")]
		[Address(RVA = "0xCEDED4", Offset = "0xCEDED4", VA = "0xCEDED4")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x17000157")]
	private static Vector3 nu
	{
		[Token(Token = "0x6000FB2")]
		[Address(RVA = "0xCEDF18", Offset = "0xCEDF18", VA = "0xCEDF18")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x17000158")]
	private static Vector3 nf
	{
		[Token(Token = "0x6000FB3")]
		[Address(RVA = "0xCEDF5C", Offset = "0xCEDF5C", VA = "0xCEDF5C")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x17000159")]
	private static Vector3 nb
	{
		[Token(Token = "0x6000FB4")]
		[Address(RVA = "0xCEDFA0", Offset = "0xCEDFA0", VA = "0xCEDFA0")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x1700015A")]
	private static Vector3 nl
	{
		[Token(Token = "0x6000FB5")]
		[Address(RVA = "0xCEDFE4", Offset = "0xCEDFE4", VA = "0xCEDFE4")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x1700015B")]
	private static Vector3 nr
	{
		[Token(Token = "0x6000FB6")]
		[Address(RVA = "0xCEE028", Offset = "0xCEE028", VA = "0xCEE028")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x1700015C")]
	private static Vector3 ndf
	{
		[Token(Token = "0x6000FB7")]
		[Address(RVA = "0xCEE06C", Offset = "0xCEE06C", VA = "0xCEE06C")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x1700015D")]
	private static Vector3 ndb
	{
		[Token(Token = "0x6000FB8")]
		[Address(RVA = "0xCEE0F8", Offset = "0xCEE0F8", VA = "0xCEE0F8")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x1700015E")]
	private static Vector3 ndr
	{
		[Token(Token = "0x6000FB9")]
		[Address(RVA = "0xCEE184", Offset = "0xCEE184", VA = "0xCEE184")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x1700015F")]
	private static Vector3 ndl
	{
		[Token(Token = "0x6000FBA")]
		[Address(RVA = "0xCEE210", Offset = "0xCEE210", VA = "0xCEE210")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x17000160")]
	private static Vector3 nuf
	{
		[Token(Token = "0x6000FBB")]
		[Address(RVA = "0xCEE29C", Offset = "0xCEE29C", VA = "0xCEE29C")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x17000161")]
	private static Vector3 nub
	{
		[Token(Token = "0x6000FBC")]
		[Address(RVA = "0xCEE328", Offset = "0xCEE328", VA = "0xCEE328")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x17000162")]
	private static Vector3 nur
	{
		[Token(Token = "0x6000FBD")]
		[Address(RVA = "0xCEE3B4", Offset = "0xCEE3B4", VA = "0xCEE3B4")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x17000163")]
	private static Vector3 nul
	{
		[Token(Token = "0x6000FBE")]
		[Address(RVA = "0xCEE440", Offset = "0xCEE440", VA = "0xCEE440")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x17000164")]
	private static Vector3 nfl
	{
		[Token(Token = "0x6000FBF")]
		[Address(RVA = "0xCEE4CC", Offset = "0xCEE4CC", VA = "0xCEE4CC")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x17000165")]
	private static Vector3 nfr
	{
		[Token(Token = "0x6000FC0")]
		[Address(RVA = "0xCEE558", Offset = "0xCEE558", VA = "0xCEE558")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x17000166")]
	private static Vector3 nbl
	{
		[Token(Token = "0x6000FC1")]
		[Address(RVA = "0xCEE5E4", Offset = "0xCEE5E4", VA = "0xCEE5E4")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x17000167")]
	private static Vector3 nbr
	{
		[Token(Token = "0x6000FC2")]
		[Address(RVA = "0xCEE670", Offset = "0xCEE670", VA = "0xCEE670")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x17000168")]
	private static Vector3 ndfl
	{
		[Token(Token = "0x6000FC3")]
		[Address(RVA = "0xCEE6FC", Offset = "0xCEE6FC", VA = "0xCEE6FC")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x17000169")]
	private static Vector3 ndfr
	{
		[Token(Token = "0x6000FC4")]
		[Address(RVA = "0xCEE7C4", Offset = "0xCEE7C4", VA = "0xCEE7C4")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x1700016A")]
	private static Vector3 ndbl
	{
		[Token(Token = "0x6000FC5")]
		[Address(RVA = "0xCEE88C", Offset = "0xCEE88C", VA = "0xCEE88C")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x1700016B")]
	private static Vector3 ndbr
	{
		[Token(Token = "0x6000FC6")]
		[Address(RVA = "0xCEE954", Offset = "0xCEE954", VA = "0xCEE954")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x1700016C")]
	private static Vector3 nufl
	{
		[Token(Token = "0x6000FC7")]
		[Address(RVA = "0xCEEA1C", Offset = "0xCEEA1C", VA = "0xCEEA1C")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x1700016D")]
	private static Vector3 nufr
	{
		[Token(Token = "0x6000FC8")]
		[Address(RVA = "0xCEEAE4", Offset = "0xCEEAE4", VA = "0xCEEAE4")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x1700016E")]
	private static Vector3 nubl
	{
		[Token(Token = "0x6000FC9")]
		[Address(RVA = "0xCEEBAC", Offset = "0xCEEBAC", VA = "0xCEEBAC")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x1700016F")]
	private static Vector3 nubr
	{
		[Token(Token = "0x6000FCA")]
		[Address(RVA = "0xCEEC74", Offset = "0xCEEC74", VA = "0xCEEC74")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x6000FCB")]
	[Address(RVA = "0xCEED3C", Offset = "0xCEED3C", VA = "0xCEED3C")]
	public static void PopulateMeshInfo(ref Piece piece, bool useCoordinates = true, [Optional] Vector3 pieceOrigin, [Optional] Vector3 extents)
	{
	}

	[Token(Token = "0x6000FCC")]
	[Address(RVA = "0xCF9698", Offset = "0xCF9698", VA = "0xCF9698")]
	private static void PopulateLod1(Vector3 normal)
	{
	}

	[Token(Token = "0x6000FCD")]
	[Address(RVA = "0xCF8A18", Offset = "0xCF8A18", VA = "0xCF8A18")]
	private static void AddEdgeVertices()
	{
	}

	[Token(Token = "0x6000FCE")]
	[Address(RVA = "0xCF8F60", Offset = "0xCF8F60", VA = "0xCF8F60")]
	private static void SetDefaultNormals(Vector3 normal)
	{
	}

	[Token(Token = "0x6000FCF")]
	[Address(RVA = "0xCF922C", Offset = "0xCF922C", VA = "0xCF922C")]
	private static void AddTriangles()
	{
	}

	[Token(Token = "0x6000FD0")]
	[Address(RVA = "0xCF9B08", Offset = "0xCF9B08", VA = "0xCF9B08")]
	private static void AddToTriangleArray(int vert)
	{
	}

	[Token(Token = "0x6000FD1")]
	[Address(RVA = "0xCF9BA4", Offset = "0xCF9BA4", VA = "0xCF9BA4")]
	public static void PopulateLod2Info(ref Piece piece, [Optional] Vector3 pieceOrigin, [Optional] Vector3 extents, float bevel = 0.003f)
	{
	}

	[Token(Token = "0x6000FD2")]
	[Address(RVA = "0xCFF330", Offset = "0xCFF330", VA = "0xCFF330")]
	private static void AddLodCenterTriangles()
	{
	}

	[Token(Token = "0x6000FD3")]
	[Address(RVA = "0xCFF3EC", Offset = "0xCFF3EC", VA = "0xCFF3EC")]
	private static void AddLodEdgeTriangles(bool L, bool cL, bool F, bool cF, bool R, bool cR, bool B, bool cB, bool LB, bool cLB, bool LF, bool cLF, bool RF, bool cRF, bool RB, bool cRB, bool LU, bool FU, bool RU, bool BU, bool cLU, bool cFU, bool cRU, bool cBU)
	{
	}

	[Token(Token = "0x6000FD4")]
	[Address(RVA = "0xCFFF20", Offset = "0xCFFF20", VA = "0xCFFF20")]
	private static void AddToLod2TriangleArray(int vert)
	{
	}

	[Token(Token = "0x6000FD5")]
	[Address(RVA = "0xCFFFBC", Offset = "0xCFFFBC", VA = "0xCFFFBC")]
	private static void AddToLod2EdgeTriangleArray(int vert)
	{
	}

	[Token(Token = "0x6000FD6")]
	[Address(RVA = "0xCFF064", Offset = "0xCFF064", VA = "0xCFF064")]
	private static void SetLod2DefaultNormals(Vector3 normal)
	{
	}
}
[Token(Token = "0x20002DD")]
public class PieceMeshGenDebug : MonoBehaviour
{
	[Token(Token = "0x4000DC3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TextAsset puzzle;

	[Token(Token = "0x4000DC4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Vector3Int[] coords;

	[Token(Token = "0x4000DC5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string material;

	[Token(Token = "0x4000DC6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private PieceMeshGenerationMono _gen;

	[Token(Token = "0x4000DC7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Piece _piece;

	[Token(Token = "0x4000DC8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private MeshFilter _filter;

	[Token(Token = "0x4000DC9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private MeshRenderer _renderer;

	[Token(Token = "0x4000DCA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private MaterialPropertyBlock _propBlock;

	[Token(Token = "0x4000DCB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Level level;

	[Token(Token = "0x6000FDD")]
	[Address(RVA = "0xB2F8F8", Offset = "0xB2F8F8", VA = "0xB2F8F8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000FDE")]
	[Address(RVA = "0xB30088", Offset = "0xB30088", VA = "0xB30088")]
	private void DrawMesh()
	{
	}

	[Token(Token = "0x6000FDF")]
	[Address(RVA = "0xB30200", Offset = "0xB30200", VA = "0xB30200")]
	public PieceMeshGenDebug()
	{
	}
}
[Token(Token = "0x20002DE")]
[RequireComponent(typeof(MeshFilter))]
public class PieceMeshGeneration2 : MonoBehaviour
{
	[Token(Token = "0x4000DCC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float bevel;

	[Token(Token = "0x4000DCD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Mesh _mesh;

	[Token(Token = "0x4000DCE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private MeshFilter _meshFilter;

	[Token(Token = "0x4000DCF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Vector3[] _verts;

	[Token(Token = "0x4000DD0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Vector3[] _norms;

	[Token(Token = "0x4000DD1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Vector3[] _normsCopy;

	[Token(Token = "0x4000DD2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private int[] _tris;

	[Token(Token = "0x4000DD3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool hasD;

	[Token(Token = "0x4000DD4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
	private bool hasF;

	[Token(Token = "0x4000DD5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x52")]
	private bool hasU;

	[Token(Token = "0x4000DD6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x53")]
	private bool hasB;

	[Token(Token = "0x4000DD7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private bool hasL;

	[Token(Token = "0x4000DD8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x55")]
	private bool hasR;

	[Token(Token = "0x4000DD9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x56")]
	private bool hasBL;

	[Token(Token = "0x4000DDA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x57")]
	private bool hasFL;

	[Token(Token = "0x4000DDB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool hasBR;

	[Token(Token = "0x4000DDC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
	private bool hasFR;

	[Token(Token = "0x4000DDD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5A")]
	private bool hasDR;

	[Token(Token = "0x4000DDE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5B")]
	private bool hasDL;

	[Token(Token = "0x4000DDF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private bool hasUR;

	[Token(Token = "0x4000DE0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5D")]
	private bool hasUL;

	[Token(Token = "0x4000DE1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5E")]
	private bool hasDF;

	[Token(Token = "0x4000DE2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5F")]
	private bool hasDB;

	[Token(Token = "0x4000DE3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private bool hasUF;

	[Token(Token = "0x4000DE4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
	private bool hasUB;

	[Token(Token = "0x4000DE5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x62")]
	private bool hasDFL;

	[Token(Token = "0x4000DE6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x63")]
	private bool hasDFR;

	[Token(Token = "0x4000DE7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private bool hasDBL;

	[Token(Token = "0x4000DE8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x65")]
	private bool hasDBR;

	[Token(Token = "0x4000DE9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x66")]
	private bool hasUFL;

	[Token(Token = "0x4000DEA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x67")]
	private bool hasUFR;

	[Token(Token = "0x4000DEB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private bool hasUBL;

	[Token(Token = "0x4000DEC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x69")]
	private bool hasUBR;

	[Token(Token = "0x4000DED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private int vIndex;

	[Token(Token = "0x4000DEE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private int tIndex;

	[Token(Token = "0x4000DEF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Segment _segm;

	[Token(Token = "0x4000DF0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private List<int> _edgeVertices;

	[Token(Token = "0x4000DF1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private Vector3Int[] _vertMap;

	[Token(Token = "0x4000DF2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private int[] _vertIntMap;

	[Token(Token = "0x4000DF3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private float[] lPosMap;

	[Token(Token = "0x17000170")]
	private float r
	{
		[Token(Token = "0x6000FE0")]
		[Address(RVA = "0xB302C4", Offset = "0xB302C4", VA = "0xB302C4")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000171")]
	private float rb
	{
		[Token(Token = "0x6000FE1")]
		[Address(RVA = "0xB3031C", Offset = "0xB3031C", VA = "0xB3031C")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000172")]
	private float d
	{
		[Token(Token = "0x6000FE2")]
		[Address(RVA = "0xB30380", Offset = "0xB30380", VA = "0xB30380")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000173")]
	private Vector3 nd
	{
		[Token(Token = "0x6000FE3")]
		[Address(RVA = "0xB303D8", Offset = "0xB303D8", VA = "0xB303D8")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x17000174")]
	private Vector3 nu
	{
		[Token(Token = "0x6000FE4")]
		[Address(RVA = "0xB3041C", Offset = "0xB3041C", VA = "0xB3041C")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x17000175")]
	private Vector3 nf
	{
		[Token(Token = "0x6000FE5")]
		[Address(RVA = "0xB30460", Offset = "0xB30460", VA = "0xB30460")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x17000176")]
	private Vector3 nb
	{
		[Token(Token = "0x6000FE6")]
		[Address(RVA = "0xB304A4", Offset = "0xB304A4", VA = "0xB304A4")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x17000177")]
	private Vector3 nl
	{
		[Token(Token = "0x6000FE7")]
		[Address(RVA = "0xB304E8", Offset = "0xB304E8", VA = "0xB304E8")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x17000178")]
	private Vector3 nr
	{
		[Token(Token = "0x6000FE8")]
		[Address(RVA = "0xB3052C", Offset = "0xB3052C", VA = "0xB3052C")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x6000FE9")]
	[Address(RVA = "0xB30570", Offset = "0xB30570", VA = "0xB30570")]
	private void Start()
	{
	}

	[Token(Token = "0x6000FEA")]
	[Address(RVA = "0xB30774", Offset = "0xB30774", VA = "0xB30774")]
	public void DrawMesh(Piece piece)
	{
	}

	[Token(Token = "0x6000FEB")]
	[Address(RVA = "0xB3078C", Offset = "0xB3078C", VA = "0xB3078C")]
	private void CreateShape(Piece piece)
	{
	}

	[Token(Token = "0x6000FEC")]
	[Address(RVA = "0xB3699C", Offset = "0xB3699C", VA = "0xB3699C")]
	private void AddVert(int index, Vector3 pos)
	{
	}

	[Token(Token = "0x6000FED")]
	[Address(RVA = "0xB367CC", Offset = "0xB367CC", VA = "0xB367CC")]
	private void AddVert(int index, int x, int y, int z)
	{
	}

	[Token(Token = "0x6000FEE")]
	[Address(RVA = "0xB3695C", Offset = "0xB3695C", VA = "0xB3695C")]
	private void AddToTriangleArray(int vert)
	{
	}

	[Token(Token = "0x6000FEF")]
	[Address(RVA = "0xB36770", Offset = "0xB36770", VA = "0xB36770")]
	private void UpdateMesh()
	{
	}

	[Token(Token = "0x6000FF0")]
	[Address(RVA = "0xB36C2C", Offset = "0xB36C2C", VA = "0xB36C2C")]
	public bool V3Equal(Vector3 a, Vector3 b)
	{
		return default(bool);
	}

	[Token(Token = "0x6000FF1")]
	[Address(RVA = "0xB36C60", Offset = "0xB36C60", VA = "0xB36C60")]
	public PieceMeshGeneration2()
	{
	}
}
[Token(Token = "0x20002DF")]
[RequireComponent(typeof(MeshFilter))]
public class PieceMeshGenerationMono : MonoBehaviour
{
	[Token(Token = "0x20002E0")]
	[CompilerGenerated]
	private sealed class <UpdatePieceAndDraw>d__5 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000DF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000DF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000DFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Piece piece;

		[Token(Token = "0x4000DFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public PieceMeshGenerationMono <>4__this;

		[Token(Token = "0x17000179")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000FF9")]
			[Address(RVA = "0xB370E4", Offset = "0xB370E4", VA = "0xB370E4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700017A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000FFB")]
			[Address(RVA = "0xB3712C", Offset = "0xB3712C", VA = "0xB3712C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000FF6")]
		[Address(RVA = "0xB36EB0", Offset = "0xB36EB0", VA = "0xB36EB0")]
		[DebuggerHidden]
		public <UpdatePieceAndDraw>d__5(int <>1__state)
		{
		}

		[Token(Token = "0x6000FF7")]
		[Address(RVA = "0xB36FB8", Offset = "0xB36FB8", VA = "0xB36FB8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000FF8")]
		[Address(RVA = "0xB36FBC", Offset = "0xB36FBC", VA = "0xB36FBC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000FFA")]
		[Address(RVA = "0xB370EC", Offset = "0xB370EC", VA = "0xB370EC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000DF4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float bevel;

	[Token(Token = "0x4000DF5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Mesh _mesh;

	[Token(Token = "0x4000DF6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private MeshFilter _meshFilter;

	[Token(Token = "0x4000DF7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool _lod1;

	[Token(Token = "0x6000FF2")]
	[Address(RVA = "0xB36DB0", Offset = "0xB36DB0", VA = "0xB36DB0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000FF3")]
	[Address(RVA = "0xB3018C", Offset = "0xB3018C", VA = "0xB3018C")]
	[IteratorStateMachine(typeof(<UpdatePieceAndDraw>d__5))]
	public IEnumerator UpdatePieceAndDraw(Piece piece)
	{
		return null;
	}

	[Token(Token = "0x6000FF4")]
	[Address(RVA = "0xB36ED8", Offset = "0xB36ED8", VA = "0xB36ED8")]
	private void DrawMesh(Piece piece)
	{
	}

	[Token(Token = "0x6000FF5")]
	[Address(RVA = "0xB36FA4", Offset = "0xB36FA4", VA = "0xB36FA4")]
	public PieceMeshGenerationMono()
	{
	}
}
[Token(Token = "0x20002E1")]
public class QuaternionQueue : DropOutQueue<Quaternion>
{
	[Token(Token = "0x6000FFC")]
	[Address(RVA = "0xB37134", Offset = "0xB37134", VA = "0xB37134")]
	public QuaternionQueue(int max)
	{
	}

	[Token(Token = "0x6000FFD")]
	[Address(RVA = "0xB3718C", Offset = "0xB3718C", VA = "0xB3718C")]
	public Quaternion Average()
	{
		return default(Quaternion);
	}
}
[Token(Token = "0x20002E2")]
public class RadialLookAt : MonoBehaviour
{
	[Token(Token = "0x4000DFC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform _puzzleCenter;

	[Token(Token = "0x4000DFD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform _target;

	[Token(Token = "0x4000DFE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public PuzzlePosition _puzzlePosition;

	[Token(Token = "0x4000DFF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float _margin;

	[Token(Token = "0x4000E00")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private Vector3 _targetDirection;

	[Token(Token = "0x6000FFE")]
	[Address(RVA = "0xB373CC", Offset = "0xB373CC", VA = "0xB373CC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000FFF")]
	[Address(RVA = "0xB37568", Offset = "0xB37568", VA = "0xB37568")]
	public RadialLookAt()
	{
	}
}
[Token(Token = "0x20002E3")]
public class RadialPosHeadFacing : MonoBehaviour
{
	[Token(Token = "0x4000E01")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform _puzzleCenter;

	[Token(Token = "0x4000E02")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public PuzzlePosition _puzzlePosition;

	[Token(Token = "0x4000E03")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float _downPosFromCenter;

	[Token(Token = "0x4000E04")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float _margin;

	[Token(Token = "0x4000E05")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Transform _head;

	[Token(Token = "0x4000E06")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Vector3 _headDirection;

	[Token(Token = "0x4000E07")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private Vector3 _headDirectionProjected;

	[Token(Token = "0x6001000")]
	[Address(RVA = "0xB3757C", Offset = "0xB3757C", VA = "0xB3757C")]
	private void Start()
	{
	}

	[Token(Token = "0x6001001")]
	[Address(RVA = "0xB375A8", Offset = "0xB375A8", VA = "0xB375A8")]
	private void Update()
	{
	}

	[Token(Token = "0x6001002")]
	[Address(RVA = "0xB378DC", Offset = "0xB378DC", VA = "0xB378DC")]
	public RadialPosHeadFacing()
	{
	}
}
[Token(Token = "0x20002E4")]
public static class RandomUtils
{
	[Token(Token = "0x6001003")]
	[Address(RVA = "0xB378F0", Offset = "0xB378F0", VA = "0xB378F0")]
	public static string RandomString(int length)
	{
		return null;
	}

	[Token(Token = "0x6001004")]
	[Address(RVA = "0xB379C8", Offset = "0xB379C8", VA = "0xB379C8")]
	public static float RemapValue(this float from, float fromMin, float fromMax, float toMin, float toMax)
	{
		return default(float);
	}

	[Token(Token = "0x6001005")]
	[Address(RVA = "0xB379E4", Offset = "0xB379E4", VA = "0xB379E4")]
	public static bool IsParallel(Vector3 v1, Vector3 v2)
	{
		return default(bool);
	}

	[Token(Token = "0x6001006")]
	[Address(RVA = "0xB37B54", Offset = "0xB37B54", VA = "0xB37B54")]
	public static Vector3 CleanUpVector(Vector3 pos, float roundMultiple = 0.015f)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6001007")]
	[Address(RVA = "0xB37BC0", Offset = "0xB37BC0", VA = "0xB37BC0")]
	public static Vector3Int Vector3ToVector3Int(Vector3 pos)
	{
		return default(Vector3Int);
	}

	[Token(Token = "0x6001008")]
	[Address(RVA = "0xB37E0C", Offset = "0xB37E0C", VA = "0xB37E0C")]
	public static Quaternion CleanUpQuaternion(Quaternion rot)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x6001009")]
	[Address(RVA = "0xB37E88", Offset = "0xB37E88", VA = "0xB37E88")]
	public static bool IsCompatibleVersion(string version, string minimumVersion)
	{
		return default(bool);
	}

	[Token(Token = "0x600100A")]
	[Address(RVA = "0xB37E90", Offset = "0xB37E90", VA = "0xB37E90")]
	public static string GetDaySuffix(int day)
	{
		return null;
	}

	[Token(Token = "0x600100B")]
	[Address(RVA = "0xB37F64", Offset = "0xB37F64", VA = "0xB37F64")]
	public static string TrimBrTag(string source)
	{
		return null;
	}

	[Token(Token = "0x600100C")]
	[Address(RVA = "0xB38014", Offset = "0xB38014", VA = "0xB38014")]
	public static string TrimTags(string value)
	{
		return null;
	}

	[Token(Token = "0x600100D")]
	[Address(RVA = "0xB38160", Offset = "0xB38160", VA = "0xB38160")]
	public static string SanitizeString(string value)
	{
		return null;
	}

	[Token(Token = "0x600100E")]
	public static bool FindFirstCommonElement<T>(T[] array1, T[] array2, out T firstCommon)
	{
		return default(bool);
	}

	[Token(Token = "0x600100F")]
	public static bool FindFirstCommonElement<T>(List<T> list1, List<T> list2, out T firstCommon)
	{
		return default(bool);
	}

	[Token(Token = "0x6001010")]
	public static void ShuffleList<T>(ref List<T> list)
	{
	}

	[Token(Token = "0x6001011")]
	[Address(RVA = "0xB38630", Offset = "0xB38630", VA = "0xB38630")]
	public static string CapitalizeFirstLetter(string value)
	{
		return null;
	}

	[Token(Token = "0x6001012")]
	[Address(RVA = "0xB3870C", Offset = "0xB3870C", VA = "0xB3870C")]
	public static Color GetLegibleTextColor(Color background)
	{
		return default(Color);
	}

	[Token(Token = "0x6001013")]
	[Address(RVA = "0xB38758", Offset = "0xB38758", VA = "0xB38758")]
	public static Vector3 GetPosClosestAxisFromRefTransform(Vector3 pos, Transform reference)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6001014")]
	[Address(RVA = "0xB387A4", Offset = "0xB387A4", VA = "0xB387A4")]
	public static Vector3 GetDirClosestAxisFromRefTransform(Vector3 dir, Transform reference)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6001015")]
	[Address(RVA = "0xB3931C", Offset = "0xB3931C", VA = "0xB3931C")]
	public static Vector3 ClosestSideOfRect(Vector3 pos, Transform reference)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6001016")]
	[Address(RVA = "0xB39590", Offset = "0xB39590", VA = "0xB39590")]
	public static string Truncate(string value, int maxChars, bool addEllipsis)
	{
		return null;
	}

	[Token(Token = "0x6001017")]
	[Address(RVA = "0xB3962C", Offset = "0xB3962C", VA = "0xB3962C")]
	public static string GetCultureAwareDateFormat(DateTime dt)
	{
		return null;
	}

	[Token(Token = "0x6001018")]
	[Address(RVA = "0xB39700", Offset = "0xB39700", VA = "0xB39700")]
	public static Bounds BoundsFromPointList(List<Vector3> points)
	{
		return default(Bounds);
	}

	[Token(Token = "0x6001019")]
	[Address(RVA = "0xB39914", Offset = "0xB39914", VA = "0xB39914")]
	public static Vector3[] Concat(Vector3[] a1, Vector3[] a2)
	{
		return null;
	}

	[Token(Token = "0x600101A")]
	[Address(RVA = "0xB39A34", Offset = "0xB39A34", VA = "0xB39A34")]
	public static int[] Concat(int[] a1, int[] a2)
	{
		return null;
	}

	[Token(Token = "0x600101B")]
	[Address(RVA = "0xB39B54", Offset = "0xB39B54", VA = "0xB39B54")]
	public static void CombineMeshes(GameObject parent, bool hideOriginal = true)
	{
	}
}
[Token(Token = "0x20002E5")]
public static class RecenterWrapper
{
	[Token(Token = "0x600101C")]
	[Address(RVA = "0xB3AAB4", Offset = "0xB3AAB4", VA = "0xB3AAB4")]
	public static void Recenter()
	{
	}

	[Token(Token = "0x600101D")]
	[Address(RVA = "0xB3AE9C", Offset = "0xB3AE9C", VA = "0xB3AE9C")]
	public static void ResetAdjustments()
	{
	}
}
[Token(Token = "0x20002E6")]
public static class RectTransformExtensions
{
	[Token(Token = "0x600101E")]
	[Address(RVA = "0xB3AFE0", Offset = "0xB3AFE0", VA = "0xB3AFE0")]
	public static void SetLeft(this RectTransform rt, float left)
	{
	}

	[Token(Token = "0x600101F")]
	[Address(RVA = "0xB3B018", Offset = "0xB3B018", VA = "0xB3B018")]
	public static void SetRight(this RectTransform rt, float right)
	{
	}

	[Token(Token = "0x6001020")]
	[Address(RVA = "0xB3B050", Offset = "0xB3B050", VA = "0xB3B050")]
	public static void SetTop(this RectTransform rt, float top)
	{
	}

	[Token(Token = "0x6001021")]
	[Address(RVA = "0xB3B088", Offset = "0xB3B088", VA = "0xB3B088")]
	public static void SetBottom(this RectTransform rt, float bottom)
	{
	}
}
[Token(Token = "0x20002E7")]
public class ResetService
{
	[Token(Token = "0x20002E8")]
	[CompilerGenerated]
	private sealed class <ClearAllAndRestart>d__11 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000E11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000E12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000E13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ResetService <>4__this;

		[Token(Token = "0x1700017B")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600102C")]
			[Address(RVA = "0xB3B9B8", Offset = "0xB3B9B8", VA = "0xB3B9B8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700017C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600102E")]
			[Address(RVA = "0xB3BA00", Offset = "0xB3BA00", VA = "0xB3BA00", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001029")]
		[Address(RVA = "0xB3B4D8", Offset = "0xB3B4D8", VA = "0xB3B4D8")]
		[DebuggerHidden]
		public <ClearAllAndRestart>d__11(int <>1__state)
		{
		}

		[Token(Token = "0x600102A")]
		[Address(RVA = "0xB3B66C", Offset = "0xB3B66C", VA = "0xB3B66C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600102B")]
		[Address(RVA = "0xB3B670", Offset = "0xB3B670", VA = "0xB3B670", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600102D")]
		[Address(RVA = "0xB3B9C0", Offset = "0xB3B9C0", VA = "0xB3B9C0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000E08")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private State _state;

	[Token(Token = "0x4000E09")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private PlayerPrefSaver _playerPrefSaver;

	[Token(Token = "0x4000E0A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private PlayerVariableSaver _playerVariableSaver;

	[Token(Token = "0x4000E0B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private CameraFader _fader;

	[Token(Token = "0x4000E0C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private IntroService _introService;

	[Token(Token = "0x4000E0D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Grid _grid;

	[Token(Token = "0x4000E0E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private PieceCollection _pieceCollection;

	[Token(Token = "0x4000E0F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private ColorThemeService _colorThemeService;

	[Token(Token = "0x4000E10")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private LevelViewVrui _levelViewVrui;

	[Token(Token = "0x6001022")]
	[Address(RVA = "0xB3B0C0", Offset = "0xB3B0C0", VA = "0xB3B0C0")]
	public ResetService(State state, PlayerPrefSaver playerPrefSaver, PlayerVariableSaver playerVariableSaver, CameraFader fader, IntroService introService, Grid grid, PieceCollection pieceCollection, ColorThemeService colorThemeService, LevelViewVrui levelViewVrui)
	{
	}

	[Token(Token = "0x6001023")]
	[Address(RVA = "0xB3B1A0", Offset = "0xB3B1A0", VA = "0xB3B1A0")]
	private void RegisterActions(ControllerAction controllerAction)
	{
	}

	[Token(Token = "0x6001024")]
	[Address(RVA = "0xB3B468", Offset = "0xB3B468", VA = "0xB3B468")]
	[IteratorStateMachine(typeof(<ClearAllAndRestart>d__11))]
	private IEnumerator ClearAllAndRestart()
	{
		return null;
	}

	[Token(Token = "0x6001025")]
	[Address(RVA = "0xB3B500", Offset = "0xB3B500", VA = "0xB3B500")]
	private void ClearProgress()
	{
	}

	[Token(Token = "0x6001026")]
	[Address(RVA = "0xB3B51C", Offset = "0xB3B51C", VA = "0xB3B51C")]
	private void ClearOnlinePuzzleProgress()
	{
	}

	[Token(Token = "0x6001027")]
	[Address(RVA = "0xB3B218", Offset = "0xB3B218", VA = "0xB3B218")]
	private void TrackReset()
	{
	}

	[Token(Token = "0x6001028")]
	[Address(RVA = "0xB3B4D0", Offset = "0xB3B4D0", VA = "0xB3B4D0")]
	private void QuitApplication()
	{
	}
}
[Token(Token = "0x20002E9")]
public class ScaleAlongFingers : MonoBehaviour
{
	[Token(Token = "0x4000E14")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float maxScale;

	[Token(Token = "0x4000E15")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float fingerDistPadding;

	[Token(Token = "0x4000E16")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Cubism.Hand hand;

	[Token(Token = "0x4000E17")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Transform _thumbTip;

	[Token(Token = "0x4000E18")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Transform _indexTip;

	[Token(Token = "0x600102F")]
	[Address(RVA = "0xB3BA08", Offset = "0xB3BA08", VA = "0xB3BA08")]
	private void Update()
	{
	}

	[Token(Token = "0x6001030")]
	[Address(RVA = "0xB3BCB4", Offset = "0xB3BCB4", VA = "0xB3BCB4")]
	public ScaleAlongFingers()
	{
	}
}
[Token(Token = "0x20002EA")]
[ExecuteInEditMode]
public class ScaleIndependentLineScaler : MonoBehaviour
{
	[Token(Token = "0x4000E19")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform target;

	[Token(Token = "0x6001031")]
	[Address(RVA = "0xB3BCC8", Offset = "0xB3BCC8", VA = "0xB3BCC8")]
	private void Update()
	{
	}

	[Token(Token = "0x6001032")]
	[Address(RVA = "0xB3BEB4", Offset = "0xB3BEB4", VA = "0xB3BEB4")]
	public ScaleIndependentLineScaler()
	{
	}
}
[Token(Token = "0x20002EB")]
public class SceneFinder : MonoBehaviour
{
	[Token(Token = "0x4000E1A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static SceneFinder _singleton;

	[Token(Token = "0x4000E1B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject _oculusHead;

	[Token(Token = "0x4000E1C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject _steamVrHead;

	[Token(Token = "0x4000E1D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private GameObject _picoHead;

	[Token(Token = "0x4000E1E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private GameObject _openXrHead;

	[Token(Token = "0x4000E1F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private OVRManager _ovrManager;

	[Token(Token = "0x4000E20")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private Player _player;

	[Token(Token = "0x4000E21")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private GameObject _puzzleArea;

	[Token(Token = "0x4000E22")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private Grid _grid;

	[Token(Token = "0x4000E23")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private GameObject _puzzleCenter;

	[Token(Token = "0x4000E24")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private GameObject _floor;

	[Token(Token = "0x4000E25")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private GameObject _vrui;

	[Token(Token = "0x4000E26")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private GameObject _centerMenu;

	[Token(Token = "0x4000E27")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private SpectatorCamService _spectatorCam;

	[Token(Token = "0x4000E28")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	private PieceCollection _pieceCollection;

	[Token(Token = "0x4000E29")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	private Transform _gridPieces;

	[Token(Token = "0x4000E2A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[SerializeField]
	private GameObject _OVRHandPrefabLeft;

	[Token(Token = "0x4000E2B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[SerializeField]
	private GameObject _OVRHandPrefabRight;

	[Token(Token = "0x4000E2C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[SerializeField]
	private Transform _hiddenParent;

	[Token(Token = "0x4000E2D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[SerializeField]
	private VrToggleGroup _mainToggleGroup;

	[Token(Token = "0x4000E2E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[SerializeField]
	private Transform _leftHandInteractionPoint;

	[Token(Token = "0x4000E2F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[SerializeField]
	private Transform _rightHandInteractionPoint;

	[Token(Token = "0x4000E30")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	[SerializeField]
	private Transform _gridCenter;

	[Token(Token = "0x1700017D")]
	public static SceneFinder I
	{
		[Token(Token = "0x6001034")]
		[Address(RVA = "0xB3BF54", Offset = "0xB3BF54", VA = "0xB3BF54")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700017E")]
	public GameObject oculusHead
	{
		[Token(Token = "0x6001035")]
		[Address(RVA = "0xB3BF9C", Offset = "0xB3BF9C", VA = "0xB3BF9C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700017F")]
	public GameObject steamVrHead
	{
		[Token(Token = "0x6001036")]
		[Address(RVA = "0xB3BFA4", Offset = "0xB3BFA4", VA = "0xB3BFA4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000180")]
	public GameObject picoHead
	{
		[Token(Token = "0x6001037")]
		[Address(RVA = "0xB3BFAC", Offset = "0xB3BFAC", VA = "0xB3BFAC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000181")]
	public GameObject openXrHead
	{
		[Token(Token = "0x6001038")]
		[Address(RVA = "0xB3BFB4", Offset = "0xB3BFB4", VA = "0xB3BFB4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000182")]
	public OVRManager ovrManager
	{
		[Token(Token = "0x6001039")]
		[Address(RVA = "0xB3BFBC", Offset = "0xB3BFBC", VA = "0xB3BFBC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000183")]
	public Player player
	{
		[Token(Token = "0x600103A")]
		[Address(RVA = "0xB3BFC4", Offset = "0xB3BFC4", VA = "0xB3BFC4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000184")]
	public GameObject puzzleArea
	{
		[Token(Token = "0x600103B")]
		[Address(RVA = "0xB3BFCC", Offset = "0xB3BFCC", VA = "0xB3BFCC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000185")]
	public Grid grid
	{
		[Token(Token = "0x600103C")]
		[Address(RVA = "0xB3BFD4", Offset = "0xB3BFD4", VA = "0xB3BFD4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000186")]
	public GameObject puzzleCenter
	{
		[Token(Token = "0x600103D")]
		[Address(RVA = "0xB3BFDC", Offset = "0xB3BFDC", VA = "0xB3BFDC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000187")]
	public GameObject floor
	{
		[Token(Token = "0x600103E")]
		[Address(RVA = "0xB3BFE4", Offset = "0xB3BFE4", VA = "0xB3BFE4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000188")]
	public GameObject vrui
	{
		[Token(Token = "0x600103F")]
		[Address(RVA = "0xB3BFEC", Offset = "0xB3BFEC", VA = "0xB3BFEC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000189")]
	public GameObject centerMenu
	{
		[Token(Token = "0x6001040")]
		[Address(RVA = "0xB3BFF4", Offset = "0xB3BFF4", VA = "0xB3BFF4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700018A")]
	public SpectatorCamService spectatorCam
	{
		[Token(Token = "0x6001041")]
		[Address(RVA = "0xB3BFFC", Offset = "0xB3BFFC", VA = "0xB3BFFC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700018B")]
	public PieceCollection pieceCollection
	{
		[Token(Token = "0x6001042")]
		[Address(RVA = "0xB3C004", Offset = "0xB3C004", VA = "0xB3C004")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700018C")]
	public Transform gridPieces
	{
		[Token(Token = "0x6001043")]
		[Address(RVA = "0xB3C00C", Offset = "0xB3C00C", VA = "0xB3C00C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700018D")]
	public GameObject OVRHandPrefabLeft
	{
		[Token(Token = "0x6001044")]
		[Address(RVA = "0xB3C014", Offset = "0xB3C014", VA = "0xB3C014")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700018E")]
	public GameObject OVRHandPrefabRight
	{
		[Token(Token = "0x6001045")]
		[Address(RVA = "0xB3C01C", Offset = "0xB3C01C", VA = "0xB3C01C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700018F")]
	public Transform hiddenParent
	{
		[Token(Token = "0x6001046")]
		[Address(RVA = "0xB3C024", Offset = "0xB3C024", VA = "0xB3C024")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000190")]
	public VrToggleGroup mainToggleGroup
	{
		[Token(Token = "0x6001047")]
		[Address(RVA = "0xB3C02C", Offset = "0xB3C02C", VA = "0xB3C02C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000191")]
	public Transform leftHandInteractionPoint
	{
		[Token(Token = "0x6001048")]
		[Address(RVA = "0xB3C034", Offset = "0xB3C034", VA = "0xB3C034")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000192")]
	public Transform rightHandInteractionPoint
	{
		[Token(Token = "0x6001049")]
		[Address(RVA = "0xB3C03C", Offset = "0xB3C03C", VA = "0xB3C03C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000193")]
	public Transform gridCenter
	{
		[Token(Token = "0x600104A")]
		[Address(RVA = "0xB3C044", Offset = "0xB3C044", VA = "0xB3C044")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6001033")]
	[Address(RVA = "0xB3BEBC", Offset = "0xB3BEBC", VA = "0xB3BEBC")]
	private void Awake()
	{
	}

	[Token(Token = "0x600104B")]
	[Address(RVA = "0xB3C04C", Offset = "0xB3C04C", VA = "0xB3C04C")]
	public SceneFinder()
	{
	}
}
[Token(Token = "0x20002EC")]
public class ScreenshotCam : MonoBehaviour
{
	[Token(Token = "0x20002ED")]
	[CompilerGenerated]
	private sealed class <_TakeScreenshot>d__5 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000E33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000E34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000E35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ScreenshotCam <>4__this;

		[Token(Token = "0x4000E36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public ScreenshotDesc desc;

		[Token(Token = "0x17000194")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001054")]
			[Address(RVA = "0xB3C684", Offset = "0xB3C684", VA = "0xB3C684", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000195")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001056")]
			[Address(RVA = "0xB3C6CC", Offset = "0xB3C6CC", VA = "0xB3C6CC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001051")]
		[Address(RVA = "0xB3C13C", Offset = "0xB3C13C", VA = "0xB3C13C")]
		[DebuggerHidden]
		public <_TakeScreenshot>d__5(int <>1__state)
		{
		}

		[Token(Token = "0x6001052")]
		[Address(RVA = "0xB3C16C", Offset = "0xB3C16C", VA = "0xB3C16C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001053")]
		[Address(RVA = "0xB3C170", Offset = "0xB3C170", VA = "0xB3C170", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001055")]
		[Address(RVA = "0xB3C68C", Offset = "0xB3C68C", VA = "0xB3C68C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000E31")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Camera _cam;

	[Token(Token = "0x4000E32")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public SpectatorCamService _spectatorCam;

	[Token(Token = "0x600104C")]
	[Address(RVA = "0xB3C054", Offset = "0xB3C054", VA = "0xB3C054")]
	private void Start()
	{
	}

	[Token(Token = "0x600104D")]
	[Address(RVA = "0xB3C074", Offset = "0xB3C074", VA = "0xB3C074")]
	public void TakeScreenshot()
	{
	}

	[Token(Token = "0x600104E")]
	[Address(RVA = "0xB3C078", Offset = "0xB3C078", VA = "0xB3C078")]
	public void TakeScreenshot(ScreenshotDesc desc)
	{
	}

	[Token(Token = "0x600104F")]
	[Address(RVA = "0xB3C0B4", Offset = "0xB3C0B4", VA = "0xB3C0B4")]
	[IteratorStateMachine(typeof(<_TakeScreenshot>d__5))]
	private IEnumerator _TakeScreenshot(ScreenshotDesc desc)
	{
		return null;
	}

	[Token(Token = "0x6001050")]
	[Address(RVA = "0xB3C164", Offset = "0xB3C164", VA = "0xB3C164")]
	public ScreenshotCam()
	{
	}
}
[Token(Token = "0x20002EE")]
public struct ScreenshotDesc
{
	[Token(Token = "0x4000E37")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Camera targetCam;

	[Token(Token = "0x4000E38")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public bool lockRoll;

	[Token(Token = "0x4000E39")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9")]
	public bool lockPitch;

	[Token(Token = "0x4000E3A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string savePath;

	[Token(Token = "0x4000E3B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string fileName;

	[Token(Token = "0x4000E3C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int width;

	[Token(Token = "0x4000E3D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public int height;
}
[Token(Token = "0x20002EF")]
public static class ScriptDefine
{
	[Token(Token = "0x4000E3E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static bool Dev;

	[Token(Token = "0x4000E3F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
	public static bool Recorder;

	[Token(Token = "0x4000E40")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2")]
	public static bool Trailer;

	[Token(Token = "0x4000E41")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3")]
	public static bool MockVR;

	[Token(Token = "0x4000E42")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public static bool ForceSteamVr;

	[Token(Token = "0x4000E43")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5")]
	public static bool VrDebug;

	[Token(Token = "0x4000E44")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6")]
	public static bool Playtest;
}
[Token(Token = "0x20002F0")]
[RequireComponent(typeof(CanvasGroup))]
public class FadeInSlide : MonoBehaviour
{
	[Token(Token = "0x20002F1")]
	[CompilerGenerated]
	private sealed class <SlideInFade>d__14 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000E4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000E4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000E4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public FadeInSlide <>4__this;

		[Token(Token = "0x4000E4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <startTime>5__2;

		[Token(Token = "0x17000196")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001064")]
			[Address(RVA = "0xB3CBA0", Offset = "0xB3CBA0", VA = "0xB3CBA0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000197")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001066")]
			[Address(RVA = "0xB3CBE8", Offset = "0xB3CBE8", VA = "0xB3CBE8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001061")]
		[Address(RVA = "0xB3C978", Offset = "0xB3C978", VA = "0xB3C978")]
		[DebuggerHidden]
		public <SlideInFade>d__14(int <>1__state)
		{
		}

		[Token(Token = "0x6001062")]
		[Address(RVA = "0xB3C9B0", Offset = "0xB3C9B0", VA = "0xB3C9B0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001063")]
		[Address(RVA = "0xB3C9B4", Offset = "0xB3C9B4", VA = "0xB3C9B4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001065")]
		[Address(RVA = "0xB3CBA8", Offset = "0xB3CBA8", VA = "0xB3CBA8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000E45")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public SlideDirection _slideDirection;

	[Token(Token = "0x4000E46")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float _slideInOffset;

	[Token(Token = "0x4000E47")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float _initialDelay;

	[Token(Token = "0x4000E48")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float _transitionLength;

	[Token(Token = "0x4000E49")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool _playOnAwake;

	[Token(Token = "0x4000E4A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private CanvasGroup _group;

	[Token(Token = "0x4000E4B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Vector3 _startPos;

	[Token(Token = "0x6001057")]
	[Address(RVA = "0xB3C6D4", Offset = "0xB3C6D4", VA = "0xB3C6D4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001058")]
	[Address(RVA = "0xB3C748", Offset = "0xB3C748", VA = "0xB3C748")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6001059")]
	[Address(RVA = "0xB3C7A0", Offset = "0xB3C7A0", VA = "0xB3C7A0")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600105A")]
	[Address(RVA = "0xB3C85C", Offset = "0xB3C85C", VA = "0xB3C85C")]
	public void SlideFromLeft()
	{
	}

	[Token(Token = "0x600105B")]
	[Address(RVA = "0xB3C8B0", Offset = "0xB3C8B0", VA = "0xB3C8B0")]
	public void SlideFromRight()
	{
	}

	[Token(Token = "0x600105C")]
	[Address(RVA = "0xB3C908", Offset = "0xB3C908", VA = "0xB3C908")]
	public void SetSlideDirection(SlideDirection slideDirection)
	{
	}

	[Token(Token = "0x600105D")]
	[Address(RVA = "0xB3C758", Offset = "0xB3C758", VA = "0xB3C758")]
	public void Play()
	{
	}

	[Token(Token = "0x600105E")]
	[Address(RVA = "0xB3C910", Offset = "0xB3C910", VA = "0xB3C910")]
	[IteratorStateMachine(typeof(<SlideInFade>d__14))]
	private IEnumerator SlideInFade()
	{
		return null;
	}

	[Token(Token = "0x600105F")]
	[Address(RVA = "0xB3C7BC", Offset = "0xB3C7BC", VA = "0xB3C7BC")]
	private void SetOffset()
	{
	}

	[Token(Token = "0x6001060")]
	[Address(RVA = "0xB3C9A0", Offset = "0xB3C9A0", VA = "0xB3C9A0")]
	public FadeInSlide()
	{
	}
}
[Token(Token = "0x20002F2")]
public enum SlideDirection
{
	[Token(Token = "0x4000E51")]
	left,
	[Token(Token = "0x4000E52")]
	right,
	[Token(Token = "0x4000E53")]
	none
}
[Token(Token = "0x20002F3")]
public class FadeOnEnable : StateBehaviour
{
	[Token(Token = "0x20002F4")]
	[CompilerGenerated]
	private sealed class <FadeIn>d__9 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000E5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000E5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000E5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public FadeOnEnable <>4__this;

		[Token(Token = "0x4000E5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <start>5__2;

		[Token(Token = "0x17000198")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001071")]
			[Address(RVA = "0xB3CFF8", Offset = "0xB3CFF8", VA = "0xB3CFF8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000199")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001073")]
			[Address(RVA = "0xB3D040", Offset = "0xB3D040", VA = "0xB3D040", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600106E")]
		[Address(RVA = "0xB3CCD4", Offset = "0xB3CCD4", VA = "0xB3CCD4")]
		[DebuggerHidden]
		public <FadeIn>d__9(int <>1__state)
		{
		}

		[Token(Token = "0x600106F")]
		[Address(RVA = "0xB3CE2C", Offset = "0xB3CE2C", VA = "0xB3CE2C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001070")]
		[Address(RVA = "0xB3CE30", Offset = "0xB3CE30", VA = "0xB3CE30", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001072")]
		[Address(RVA = "0xB3D000", Offset = "0xB3D000", VA = "0xB3D000", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000E54")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float initialDelay;

	[Token(Token = "0x4000E55")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float fadeTime;

	[Token(Token = "0x4000E56")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool addDelayBasedOnIndex;

	[Token(Token = "0x4000E57")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float delayFactor;

	[Token(Token = "0x4000E58")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public CanvasGroup canvasGroup;

	[Token(Token = "0x4000E59")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public AnimationCurve curve;

	[Token(Token = "0x6001067")]
	[Address(RVA = "0xB3CBF0", Offset = "0xB3CBF0", VA = "0xB3CBF0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001068")]
	[Address(RVA = "0xB3CC04", Offset = "0xB3CC04", VA = "0xB3CC04")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6001069")]
	[Address(RVA = "0xB3CCA8", Offset = "0xB3CCA8", VA = "0xB3CCA8")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600106A")]
	[Address(RVA = "0xB3CC40", Offset = "0xB3CC40", VA = "0xB3CC40")]
	[IteratorStateMachine(typeof(<FadeIn>d__9))]
	private IEnumerator FadeIn()
	{
		return null;
	}

	[Token(Token = "0x600106B")]
	[Address(RVA = "0xB3CCFC", Offset = "0xB3CCFC", VA = "0xB3CCFC")]
	private int GetSiblingIndex()
	{
		return default(int);
	}

	[Token(Token = "0x600106C")]
	[Address(RVA = "0xB3CDF4", Offset = "0xB3CDF4", VA = "0xB3CDF4")]
	private bool ContinueLerping()
	{
		return default(bool);
	}

	[Token(Token = "0x600106D")]
	[Address(RVA = "0xB3CE24", Offset = "0xB3CE24", VA = "0xB3CE24")]
	public FadeOnEnable()
	{
	}
}
[Token(Token = "0x20002F5")]
public class GrowOnEnable : StateBehaviour
{
	[Token(Token = "0x20002F6")]
	[CompilerGenerated]
	private sealed class <Grow>d__14 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000E68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000E69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000E6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GrowOnEnable <>4__this;

		[Token(Token = "0x4000E6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Vector3 <vel>5__2;

		[Token(Token = "0x1700019A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600107F")]
			[Address(RVA = "0xB3D61C", Offset = "0xB3D61C", VA = "0xB3D61C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700019B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001081")]
			[Address(RVA = "0xB3D664", Offset = "0xB3D664", VA = "0xB3D664", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600107C")]
		[Address(RVA = "0xB3D1BC", Offset = "0xB3D1BC", VA = "0xB3D1BC")]
		[DebuggerHidden]
		public <Grow>d__14(int <>1__state)
		{
		}

		[Token(Token = "0x600107D")]
		[Address(RVA = "0xB3D3B0", Offset = "0xB3D3B0", VA = "0xB3D3B0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600107E")]
		[Address(RVA = "0xB3D3B4", Offset = "0xB3D3B4", VA = "0xB3D3B4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001080")]
		[Address(RVA = "0xB3D624", Offset = "0xB3D624", VA = "0xB3D624", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000E5E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool X;

	[Token(Token = "0x4000E5F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	public bool Y;

	[Token(Token = "0x4000E60")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A")]
	public bool Z;

	[Token(Token = "0x4000E61")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float initialDelay;

	[Token(Token = "0x4000E62")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float growTime;

	[Token(Token = "0x4000E63")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public bool addDelayBasedOnIndex;

	[Token(Token = "0x4000E64")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float delayFactor;

	[Token(Token = "0x4000E65")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public bool setCustomDefaultValue;

	[Token(Token = "0x4000E66")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Vector3 customDefaultValue;

	[Token(Token = "0x4000E67")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private Vector3 _origScale;

	[Token(Token = "0x6001074")]
	[Address(RVA = "0xB3D048", Offset = "0xB3D048", VA = "0xB3D048", Slot = "5")]
	protected override void ForceSetup()
	{
	}

	[Token(Token = "0x6001075")]
	[Address(RVA = "0xB3D098", Offset = "0xB3D098", VA = "0xB3D098")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001076")]
	[Address(RVA = "0xB3D0AC", Offset = "0xB3D0AC", VA = "0xB3D0AC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6001077")]
	[Address(RVA = "0xB3D184", Offset = "0xB3D184", VA = "0xB3D184")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6001078")]
	[Address(RVA = "0xB3D11C", Offset = "0xB3D11C", VA = "0xB3D11C")]
	[IteratorStateMachine(typeof(<Grow>d__14))]
	private IEnumerator Grow()
	{
		return null;
	}

	[Token(Token = "0x6001079")]
	[Address(RVA = "0xB3D1E4", Offset = "0xB3D1E4", VA = "0xB3D1E4")]
	private int GetSiblingIndex()
	{
		return default(int);
	}

	[Token(Token = "0x600107A")]
	[Address(RVA = "0xB3D2DC", Offset = "0xB3D2DC", VA = "0xB3D2DC")]
	private bool ContinueLerping()
	{
		return default(bool);
	}

	[Token(Token = "0x600107B")]
	[Address(RVA = "0xB3D3A0", Offset = "0xB3D3A0", VA = "0xB3D3A0")]
	public GrowOnEnable()
	{
	}
}
[Token(Token = "0x20002F7")]
public class Move : MonoBehaviour
{
	[Token(Token = "0x4000E6C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float speed;

	[Token(Token = "0x4000E6D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Vector3 direction;

	[Token(Token = "0x6001082")]
	[Address(RVA = "0xB3D66C", Offset = "0xB3D66C", VA = "0xB3D66C")]
	private void Update()
	{
	}

	[Token(Token = "0x6001083")]
	[Address(RVA = "0xB3D788", Offset = "0xB3D788", VA = "0xB3D788")]
	public Move()
	{
	}
}
[Token(Token = "0x20002F8")]
public class Rotate : MonoBehaviour
{
	[Token(Token = "0x4000E6E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float rpm;

	[Token(Token = "0x4000E6F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool x;

	[Token(Token = "0x4000E70")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
	public bool y;

	[Token(Token = "0x4000E71")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E")]
	public bool z;

	[Token(Token = "0x6001084")]
	[Address(RVA = "0xB3D79C", Offset = "0xB3D79C", VA = "0xB3D79C")]
	private void Update()
	{
	}

	[Token(Token = "0x6001085")]
	[Address(RVA = "0xB3D8DC", Offset = "0xB3D8DC", VA = "0xB3D8DC")]
	public Rotate()
	{
	}
}
[Token(Token = "0x20002F9")]
public class SdkVisibility : MonoBehaviour
{
	[Token(Token = "0x4000E72")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool Oculus;

	[Token(Token = "0x4000E73")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool SteamVR;

	[Token(Token = "0x6001086")]
	[Address(RVA = "0xB3D8F4", Offset = "0xB3D8F4", VA = "0xB3D8F4")]
	private void Start()
	{
	}

	[Token(Token = "0x6001087")]
	[Address(RVA = "0xB3D9B8", Offset = "0xB3D9B8", VA = "0xB3D9B8")]
	public SdkVisibility()
	{
	}
}
[Token(Token = "0x20002FA")]
[RequireComponent(typeof(Camera))]
public class SetOrthoTransparency : MonoBehaviour
{
	[Token(Token = "0x6001088")]
	[Address(RVA = "0xB3D9C0", Offset = "0xB3D9C0", VA = "0xB3D9C0")]
	private void Start()
	{
	}

	[Token(Token = "0x6001089")]
	[Address(RVA = "0xB3DA1C", Offset = "0xB3DA1C", VA = "0xB3DA1C")]
	public SetOrthoTransparency()
	{
	}
}
[Token(Token = "0x20002FB")]
public class SetParent : MonoBehaviour
{
	[Token(Token = "0x4000E74")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform target;

	[Token(Token = "0x4000E75")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform anchor;

	[Token(Token = "0x600108A")]
	[Address(RVA = "0xB3DA24", Offset = "0xB3DA24", VA = "0xB3DA24")]
	public void SetParentTo()
	{
	}

	[Token(Token = "0x600108B")]
	[Address(RVA = "0xB3DB34", Offset = "0xB3DB34", VA = "0xB3DB34")]
	public SetParent()
	{
	}
}
[Token(Token = "0x20002FC")]
public class SetupableBehaviour : MonoBehaviour
{
	[Token(Token = "0x4000E76")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool _isSetup;

	[Token(Token = "0x600108C")]
	[Address(RVA = "0xB3DB3C", Offset = "0xB3DB3C", VA = "0xB3DB3C", Slot = "4")]
	public virtual void Setup()
	{
	}

	[Token(Token = "0x600108D")]
	[Address(RVA = "0xB3DB48", Offset = "0xB3DB48", VA = "0xB3DB48")]
	public bool IsSetup()
	{
		return default(bool);
	}

	[Token(Token = "0x600108E")]
	[Address(RVA = "0xB3DB50", Offset = "0xB3DB50", VA = "0xB3DB50")]
	public SetupableBehaviour()
	{
	}
}
[Token(Token = "0x20002FD")]
public class Shortcut
{
	[Token(Token = "0x4000E77")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Key[] keys;

	[Token(Token = "0x4000E79")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string description;

	[Token(Token = "0x4000E7A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool _called;

	[Token(Token = "0x14000087")]
	public event Action callback
	{
		[Token(Token = "0x600108F")]
		[Address(RVA = "0xB3DB58", Offset = "0xB3DB58", VA = "0xB3DB58")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6001090")]
		[Address(RVA = "0xB3DBF4", Offset = "0xB3DBF4", VA = "0xB3DBF4")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x6001091")]
	[Address(RVA = "0xB3DC90", Offset = "0xB3DC90", VA = "0xB3DC90")]
	public Shortcut(Key[] keys, Action callback)
	{
	}

	[Token(Token = "0x6001092")]
	[Address(RVA = "0xB3DCBC", Offset = "0xB3DCBC", VA = "0xB3DCBC")]
	public void CheckIfPressed()
	{
	}
}
[Token(Token = "0x20002FE")]
public class Shortcuts : StateBehaviour
{
	[Token(Token = "0x20002FF")]
	[CompilerGenerated]
	private sealed class <CountDownAndScreenShot>d__16 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000E89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000E8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000E8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Shortcuts <>4__this;

		[Token(Token = "0x4000E8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private PlayNoteOptions <options>5__2;

		[Token(Token = "0x1700019C")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60010A3")]
			[Address(RVA = "0xB3FC2C", Offset = "0xB3FC2C", VA = "0xB3FC2C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700019D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60010A5")]
			[Address(RVA = "0xB3FC74", Offset = "0xB3FC74", VA = "0xB3FC74", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60010A0")]
		[Address(RVA = "0xB3F860", Offset = "0xB3F860", VA = "0xB3F860")]
		[DebuggerHidden]
		public <CountDownAndScreenShot>d__16(int <>1__state)
		{
		}

		[Token(Token = "0x60010A1")]
		[Address(RVA = "0xB3FA50", Offset = "0xB3FA50", VA = "0xB3FA50", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60010A2")]
		[Address(RVA = "0xB3FA54", Offset = "0xB3FA54", VA = "0xB3FA54", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60010A4")]
		[Address(RVA = "0xB3FC34", Offset = "0xB3FC34", VA = "0xB3FC34", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000E7B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject canvas;

	[Token(Token = "0x4000E7C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public PuzzleLoader puzzleLoader;

	[Token(Token = "0x4000E7D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public EditorService editorToggle;

	[Token(Token = "0x4000E7E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public ResetService resetService;

	[Token(Token = "0x4000E7F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public InputManager input;

	[Token(Token = "0x4000E80")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public LightingAngle lightingDebug;

	[Token(Token = "0x4000E81")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public DevPieceEnabler devPieceEnabler;

	[Token(Token = "0x4000E82")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public SpectatorCamMovement spectatorCamMovement;

	[Token(Token = "0x4000E83")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public PuzzleMovement puzzleMovement;

	[Token(Token = "0x4000E84")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public PuzzlePosition puzzlePosition;

	[Token(Token = "0x4000E85")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public GridCompletionView gridCompletionView;

	[Token(Token = "0x4000E86")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public ScreenshotCam _screenshotCam;

	[Token(Token = "0x4000E87")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private List<Shortcut> shortcuts;

	[Token(Token = "0x4000E88")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private bool _tookScreenShot;

	[Token(Token = "0x6001093")]
	[Address(RVA = "0xB3DDB0", Offset = "0xB3DDB0", VA = "0xB3DDB0", Slot = "5")]
	protected override void ForceSetup()
	{
	}

	[Token(Token = "0x6001094")]
	[Address(RVA = "0xB3E9E4", Offset = "0xB3E9E4", VA = "0xB3E9E4")]
	private void Update()
	{
	}

	[Token(Token = "0x6001095")]
	[Address(RVA = "0xB3F7F8", Offset = "0xB3F7F8", VA = "0xB3F7F8")]
	[IteratorStateMachine(typeof(<CountDownAndScreenShot>d__16))]
	private IEnumerator CountDownAndScreenShot()
	{
		return null;
	}

	[Token(Token = "0x6001096")]
	[Address(RVA = "0xB3F888", Offset = "0xB3F888", VA = "0xB3F888")]
	private void ToggleMenuVisibility()
	{
	}

	[Token(Token = "0x6001097")]
	[Address(RVA = "0xB3F8BC", Offset = "0xB3F8BC", VA = "0xB3F8BC")]
	public Shortcuts()
	{
	}
}
[Token(Token = "0x2000300")]
[ExecuteInEditMode]
[RequireComponent(typeof(LineRenderer))]
public class SineCircle : MonoBehaviour
{
	[Token(Token = "0x4000E8D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int points;

	[Token(Token = "0x4000E8E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int waves;

	[Token(Token = "0x4000E8F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float R;

	[Token(Token = "0x4000E90")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float A;

	[Token(Token = "0x4000E91")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool _setLocalY;

	[Token(Token = "0x4000E92")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private LineRenderer _lineRenderer;

	[Token(Token = "0x4000E93")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float angle;

	[Token(Token = "0x4000E94")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float x;

	[Token(Token = "0x4000E95")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float z;

	[Token(Token = "0x60010A6")]
	[Address(RVA = "0xB3FC7C", Offset = "0xB3FC7C", VA = "0xB3FC7C")]
	private void Update()
	{
	}

	[Token(Token = "0x60010A7")]
	[Address(RVA = "0xB3FE08", Offset = "0xB3FE08", VA = "0xB3FE08")]
	public SineCircle()
	{
	}
}
[Token(Token = "0x2000301")]
[RequireComponent(typeof(SineCircle))]
public class SineCircleOscilator : MonoBehaviour
{
	[Token(Token = "0x4000E96")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool haptics;

	[Token(Token = "0x4000E97")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool showSine;

	[Token(Token = "0x4000E98")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float maxAmplitude;

	[Token(Token = "0x4000E99")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float oscilationSpeed;

	[Token(Token = "0x4000E9A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float waveSpeed;

	[Token(Token = "0x4000E9B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Cubism.Hand hand;

	[Token(Token = "0x4000E9C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private SineCircle _sineCircle;

	[Token(Token = "0x4000E9D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float osc;

	[Token(Token = "0x60010A8")]
	[Address(RVA = "0xB3FE10", Offset = "0xB3FE10", VA = "0xB3FE10")]
	private void Update()
	{
	}

	[Token(Token = "0x60010A9")]
	[Address(RVA = "0xB3FF30", Offset = "0xB3FF30", VA = "0xB3FF30")]
	public SineCircleOscilator()
	{
	}
}
[Token(Token = "0x2000302")]
public class SingleTogglePlayerpref : MonoBehaviour
{
	[Token(Token = "0x60010AA")]
	[Address(RVA = "0xB3FF38", Offset = "0xB3FF38", VA = "0xB3FF38")]
	private void Start()
	{
	}

	[Token(Token = "0x60010AB")]
	[Address(RVA = "0xB3FF3C", Offset = "0xB3FF3C", VA = "0xB3FF3C")]
	private void Update()
	{
	}

	[Token(Token = "0x60010AC")]
	[Address(RVA = "0xB3FF40", Offset = "0xB3FF40", VA = "0xB3FF40")]
	public SingleTogglePlayerpref()
	{
	}
}
[Token(Token = "0x2000303")]
public class SmoothFollow : MonoBehaviour
{
	[Token(Token = "0x4000E9E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool followPos;

	[Token(Token = "0x4000E9F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool followRot;

	[Token(Token = "0x4000EA0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	public bool clampXrot;

	[Token(Token = "0x4000EA1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B")]
	public bool clampYrot;

	[Token(Token = "0x4000EA2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool clampZrot;

	[Token(Token = "0x4000EA3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float positionalDamp;

	[Token(Token = "0x4000EA4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float rotationalDamp;

	[Token(Token = "0x60010AD")]
	[Address(RVA = "0xB3FF48", Offset = "0xB3FF48", VA = "0xB3FF48")]
	private void Update()
	{
	}

	[Token(Token = "0x60010AE")]
	[Address(RVA = "0xB402D8", Offset = "0xB402D8", VA = "0xB402D8")]
	public SmoothFollow()
	{
	}
}
[Token(Token = "0x2000304")]
public class SmoothFollowTransform : MonoBehaviour
{
	[Token(Token = "0x4000EA5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform target;

	[Token(Token = "0x60010AF")]
	[Address(RVA = "0xB402E8", Offset = "0xB402E8", VA = "0xB402E8")]
	private void Update()
	{
	}

	[Token(Token = "0x60010B0")]
	[Address(RVA = "0xB404B0", Offset = "0xB404B0", VA = "0xB404B0")]
	public SmoothFollowTransform()
	{
	}
}
[Token(Token = "0x2000305")]
public class SnapToTargetOnRelease : MonoBehaviour
{
	[Token(Token = "0x4000EA6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GrabAction grabAction;

	[Token(Token = "0x4000EA7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform target;

	[Token(Token = "0x60010B1")]
	[Address(RVA = "0xB404B8", Offset = "0xB404B8", VA = "0xB404B8")]
	public void Start()
	{
	}

	[Token(Token = "0x60010B2")]
	[Address(RVA = "0xB40544", Offset = "0xB40544", VA = "0xB40544")]
	private void SnapToTarget(InteractionData obj)
	{
	}

	[Token(Token = "0x60010B3")]
	[Address(RVA = "0xB40584", Offset = "0xB40584", VA = "0xB40584")]
	public SnapToTargetOnRelease()
	{
	}
}
[Token(Token = "0x2000306")]
public class SoundEffects : MonoBehaviour
{
	[Token(Token = "0x4000EA8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public CubismSoundEffects soundEffects;

	[Token(Token = "0x4000EA9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static CubismSoundEffects _soundEffects;

	[Token(Token = "0x4000EAA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static Dictionary<AudioClipName, AudioSource> _audioSources;

	[Token(Token = "0x60010B4")]
	[Address(RVA = "0xB4058C", Offset = "0xB4058C", VA = "0xB4058C")]
	private void Start()
	{
	}

	[Token(Token = "0x60010B5")]
	[Address(RVA = "0xB407D0", Offset = "0xB407D0", VA = "0xB407D0")]
	public static void Play(AudioClipName clip, EffectOptions options)
	{
	}

	[Token(Token = "0x60010B6")]
	[Address(RVA = "0xB40A24", Offset = "0xB40A24", VA = "0xB40A24")]
	public static void PlayHoverTap(Vector3 pos)
	{
	}

	[Token(Token = "0x60010B7")]
	[Address(RVA = "0xB40B08", Offset = "0xB40B08", VA = "0xB40B08")]
	public static void PlayClickTap(Vector3 pos)
	{
	}

	[Token(Token = "0x60010B8")]
	[Address(RVA = "0xB40BD0", Offset = "0xB40BD0", VA = "0xB40BD0")]
	public static void PlayLocked(Vector3 pos)
	{
	}

	[Token(Token = "0x60010B9")]
	[Address(RVA = "0xB40C98", Offset = "0xB40C98", VA = "0xB40C98")]
	public static void PlayUnLock(Vector3 pos)
	{
	}

	[Token(Token = "0x60010BA")]
	[Address(RVA = "0xB40D60", Offset = "0xB40D60", VA = "0xB40D60")]
	public static void PlayGridPop(Vector3 pos)
	{
	}

	[Token(Token = "0x60010BB")]
	[Address(RVA = "0xB40E24", Offset = "0xB40E24", VA = "0xB40E24")]
	public static void PlaySnapOnGridTap(Vector3 pos)
	{
	}

	[Token(Token = "0x60010BC")]
	[Address(RVA = "0xB40EF0", Offset = "0xB40EF0", VA = "0xB40EF0")]
	public static void PlayGrabPiece(Vector3 pos)
	{
	}

	[Token(Token = "0x60010BD")]
	[Address(RVA = "0xB40FBC", Offset = "0xB40FBC", VA = "0xB40FBC")]
	public static void PlayCollision(Vector3 pos, float vol)
	{
	}

	[Token(Token = "0x60010BE")]
	[Address(RVA = "0xB4108C", Offset = "0xB4108C", VA = "0xB4108C")]
	public static void PlayOutOfGrid(Vector3 pos)
	{
	}

	[Token(Token = "0x60010BF")]
	[Address(RVA = "0xB4098C", Offset = "0xB4098C", VA = "0xB4098C")]
	private static AudioSource GetSource(AudioClipName clip)
	{
		return null;
	}

	[Token(Token = "0x60010C0")]
	[Address(RVA = "0xB405F0", Offset = "0xB405F0", VA = "0xB405F0")]
	private void SpawnAudioSources()
	{
	}

	[Token(Token = "0x60010C1")]
	[Address(RVA = "0xB41154", Offset = "0xB41154", VA = "0xB41154")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60010C2")]
	[Address(RVA = "0xB411CC", Offset = "0xB411CC", VA = "0xB411CC")]
	public SoundEffects()
	{
	}
}
[Serializable]
[Token(Token = "0x2000307")]
public class EffectOptions
{
	[Token(Token = "0x4000EAB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public bool forcePlay;

	[Token(Token = "0x4000EAC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
	public bool addPitchVariation;

	[Token(Token = "0x4000EAD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float pitchRange;

	[Token(Token = "0x4000EAE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool addPitchShift;

	[Token(Token = "0x4000EAF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float pitchShift;

	[Token(Token = "0x4000EB0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool spatialized;

	[Token(Token = "0x4000EB1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public Vector3 position;

	[Token(Token = "0x4000EB2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float volume;

	[Token(Token = "0x60010C4")]
	[Address(RVA = "0xB40AEC", Offset = "0xB40AEC", VA = "0xB40AEC")]
	public EffectOptions()
	{
	}
}
[Token(Token = "0x2000308")]
public class SpectatorCamMovement : StateBehaviour
{
	[Token(Token = "0x4000EB3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GrabAction camGrabAction;

	[Token(Token = "0x4000EB4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GrabAction refGrabAction;

	[Token(Token = "0x4000EB5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public SpectatorMovementType movementType;

	[Token(Token = "0x4000EB6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float translationSpeed;

	[Token(Token = "0x4000EB7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool active;

	[Token(Token = "0x4000EB8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Transform _spectatorCam;

	[Token(Token = "0x4000EB9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Transform _spectatorCamMoveAnchor;

	[Token(Token = "0x4000EBA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public SineCircle _spectatorOrbitCircle;

	[Token(Token = "0x4000EBB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Transform _refPoint;

	[Token(Token = "0x4000EBC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Transform _line;

	[Token(Token = "0x4000EBD")]
	private const float MinMoveDist = 0.005f;

	[Token(Token = "0x4000EBE")]
	private const float MaxReposRefDist = 0.01f;

	[Token(Token = "0x4000EBF")]
	private const float RotateDegPerSec = 2.5f;

	[Token(Token = "0x4000EC0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private bool _moving;

	[Token(Token = "0x60010C5")]
	[Address(RVA = "0xB41260", Offset = "0xB41260", VA = "0xB41260")]
	private void Start()
	{
	}

	[Token(Token = "0x60010C6")]
	[Address(RVA = "0xB412FC", Offset = "0xB412FC", VA = "0xB412FC")]
	public void Update()
	{
	}

	[Token(Token = "0x60010C7")]
	[Address(RVA = "0xB41AC4", Offset = "0xB41AC4", VA = "0xB41AC4")]
	private bool CanMove()
	{
		return default(bool);
	}

	[Token(Token = "0x60010C8")]
	[Address(RVA = "0xB41BD0", Offset = "0xB41BD0", VA = "0xB41BD0")]
	private bool CanRepositionRef()
	{
		return default(bool);
	}

	[Token(Token = "0x60010C9")]
	[Address(RVA = "0xB41C38", Offset = "0xB41C38", VA = "0xB41C38")]
	private bool CanShowLine()
	{
		return default(bool);
	}

	[Token(Token = "0x60010CA")]
	[Address(RVA = "0xB41B10", Offset = "0xB41B10", VA = "0xB41B10")]
	private float DistanceToRef()
	{
		return default(float);
	}

	[Token(Token = "0x60010CB")]
	[Address(RVA = "0xB41C70", Offset = "0xB41C70", VA = "0xB41C70")]
	private void HandleInput()
	{
	}

	[Token(Token = "0x60010CC")]
	[Address(RVA = "0xB41C74", Offset = "0xB41C74", VA = "0xB41C74")]
	public SpectatorCamMovement()
	{
	}
}
[Token(Token = "0x2000309")]
public enum SpectatorMovementType
{
	[Token(Token = "0x4000EC2")]
	none,
	[Token(Token = "0x4000EC3")]
	translate,
	[Token(Token = "0x4000EC4")]
	orbit
}
[Token(Token = "0x200030A")]
public enum SpectatorCam
{
	[Token(Token = "0x4000EC6")]
	none,
	[Token(Token = "0x4000EC7")]
	smooth,
	[Token(Token = "0x4000EC8")]
	orbital,
	[Token(Token = "0x4000EC9")]
	puzzleFirstPerson,
	[Token(Token = "0x4000ECA")]
	spectator
}
[Token(Token = "0x200030B")]
public class SpectatorCamService : SetupableBehaviour
{
	[Token(Token = "0x4000ECC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject _firstperson;

	[Token(Token = "0x4000ECD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject _orbital;

	[Token(Token = "0x4000ECE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject _puzzleFirstPerson;

	[Token(Token = "0x4000ECF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject _spectatorCamera;

	[Token(Token = "0x4000ED0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[Header("Options")]
	public Camera _spectatorCam;

	[Token(Token = "0x4000ED1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Camera _spectatorRtCam;

	[Token(Token = "0x4000ED2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Transform _grabParent;

	[Token(Token = "0x4000ED3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Transform _rollParent;

	[Token(Token = "0x4000ED4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Transform _pitchParent;

	[Token(Token = "0x4000ED5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Transform _yawParent;

	[Token(Token = "0x4000ED6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private SpectatorCamModel _model;

	[Token(Token = "0x14000088")]
	public event Action<SpectatorCam> onCamChanged
	{
		[Token(Token = "0x60010CE")]
		[Address(RVA = "0xB41CB4", Offset = "0xB41CB4", VA = "0xB41CB4")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x60010CF")]
		[Address(RVA = "0xB41D64", Offset = "0xB41D64", VA = "0xB41D64")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x60010D0")]
	[Address(RVA = "0xB41E14", Offset = "0xB41E14", VA = "0xB41E14")]
	public void Setup(SpectatorCamModel model)
	{
	}

	[Token(Token = "0x60010D1")]
	[Address(RVA = "0xB41ED4", Offset = "0xB41ED4", VA = "0xB41ED4")]
	private void Update()
	{
	}

	[Token(Token = "0x60010D2")]
	[Address(RVA = "0xB42080", Offset = "0xB42080", VA = "0xB42080")]
	public Camera GetActiveCamera()
	{
		return null;
	}

	[Token(Token = "0x60010D3")]
	[Address(RVA = "0xB42134", Offset = "0xB42134", VA = "0xB42134")]
	private void RegisterActions(ControllerAction action)
	{
	}

	[Token(Token = "0x60010D4")]
	[Address(RVA = "0xB41E38", Offset = "0xB41E38", VA = "0xB41E38")]
	private void SetCamStates(SpectatorCam cam)
	{
	}

	[Token(Token = "0x60010D5")]
	[Address(RVA = "0xB426B0", Offset = "0xB426B0", VA = "0xB426B0")]
	private void SetFov()
	{
	}

	[Token(Token = "0x60010D6")]
	[Address(RVA = "0xB4258C", Offset = "0xB4258C", VA = "0xB4258C")]
	private void UpdateSpectatorCamera()
	{
	}

	[Token(Token = "0x60010D7")]
	[Address(RVA = "0xB42868", Offset = "0xB42868", VA = "0xB42868")]
	private void UpdateCamDepth()
	{
	}

	[Token(Token = "0x60010D8")]
	[Address(RVA = "0xB4295C", Offset = "0xB4295C", VA = "0xB4295C")]
	private void ShowLayer(bool visibility, string layer)
	{
	}

	[Token(Token = "0x60010D9")]
	[Address(RVA = "0xB429E8", Offset = "0xB429E8", VA = "0xB429E8")]
	public SpectatorCamService()
	{
	}
}
[Token(Token = "0x200030C")]
public enum SpectatorFieldOfView
{
	[Token(Token = "0x4000ED8")]
	narrow,
	[Token(Token = "0x4000ED9")]
	normal,
	[Token(Token = "0x4000EDA")]
	wide,
	[Token(Token = "0x4000EDB")]
	ultraWide
}
[Token(Token = "0x200030D")]
public static class StandardShaderUtils
{
	[Token(Token = "0x200030E")]
	public enum BlendMode
	{
		[Token(Token = "0x4000EDD")]
		Opaque,
		[Token(Token = "0x4000EDE")]
		Cutout,
		[Token(Token = "0x4000EDF")]
		Fade,
		[Token(Token = "0x4000EE0")]
		Transparent
	}

	[Token(Token = "0x60010DA")]
	[Address(RVA = "0xB429F0", Offset = "0xB429F0", VA = "0xB429F0")]
	public static void ChangeRenderMode(Material standardShaderMaterial, BlendMode blendMode)
	{
	}
}
[Token(Token = "0x200030F")]
public class TargetScale : MonoBehaviour
{
	[Token(Token = "0x4000EE1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform target;

	[Token(Token = "0x4000EE2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float minDist;

	[Token(Token = "0x4000EE3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float maxDist;

	[Token(Token = "0x4000EE4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float minScale;

	[Token(Token = "0x4000EE5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[Header("Debug")]
	public float _distanceToTarget;

	[Token(Token = "0x4000EE6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float _mappedDistance;

	[Token(Token = "0x60010DB")]
	[Address(RVA = "0xB42CC4", Offset = "0xB42CC4", VA = "0xB42CC4")]
	private void Update()
	{
	}

	[Token(Token = "0x60010DC")]
	[Address(RVA = "0xB42E38", Offset = "0xB42E38", VA = "0xB42E38")]
	public TargetScale()
	{
	}
}
[Token(Token = "0x2000310")]
public enum TipPositionMethod
{
	[Token(Token = "0x4000EE8")]
	head,
	[Token(Token = "0x4000EE9")]
	handMidpoint,
	[Token(Token = "0x4000EEA")]
	handOffset
}
[Token(Token = "0x2000311")]
public class TipPositioner : StateBehaviour
{
	[Token(Token = "0x4000EEB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Vector3 _targetPosition;

	[Token(Token = "0x4000EEC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private Quaternion _targetRotation;

	[Token(Token = "0x4000EED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public TipPositionParams positionParams;

	[Token(Token = "0x4000EEE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[Header("Debug")]
	[SerializeField]
	private Transform _head;

	[Token(Token = "0x4000EEF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private Transform _left;

	[Token(Token = "0x4000EF0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private Transform _right;

	[Token(Token = "0x60010DD")]
	[Address(RVA = "0xB42E4C", Offset = "0xB42E4C", VA = "0xB42E4C")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x60010DE")]
	[Address(RVA = "0xB43054", Offset = "0xB43054", VA = "0xB43054")]
	private void UpdateReferences()
	{
	}

	[Token(Token = "0x60010DF")]
	[Address(RVA = "0xB431B4", Offset = "0xB431B4", VA = "0xB431B4")]
	private GameObject GetSdkCamera()
	{
		return null;
	}

	[Token(Token = "0x60010E0")]
	[Address(RVA = "0xB430EC", Offset = "0xB430EC", VA = "0xB430EC")]
	private void UpdatePositionTarget()
	{
	}

	[Token(Token = "0x60010E1")]
	[Address(RVA = "0xB43134", Offset = "0xB43134", VA = "0xB43134")]
	private void UpdateRotationTarget()
	{
	}

	[Token(Token = "0x60010E2")]
	[Address(RVA = "0xB432E8", Offset = "0xB432E8", VA = "0xB432E8")]
	private void UpdateTargetsMidpoint()
	{
	}

	[Token(Token = "0x60010E3")]
	[Address(RVA = "0xB435F4", Offset = "0xB435F4", VA = "0xB435F4")]
	private void UpdateTargetsHead()
	{
	}

	[Token(Token = "0x60010E4")]
	[Address(RVA = "0xB437AC", Offset = "0xB437AC", VA = "0xB437AC")]
	private void UpdateTargethandOffset()
	{
	}

	[Token(Token = "0x60010E5")]
	[Address(RVA = "0xB43980", Offset = "0xB43980", VA = "0xB43980")]
	public TipPositioner()
	{
	}
}
[Serializable]
[Token(Token = "0x2000312")]
public class TipPositionParams
{
	[Token(Token = "0x4000EF1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float backOffset;

	[Token(Token = "0x4000EF2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float damp;

	[Token(Token = "0x4000EF3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TipPositionMethod positionMethod;

	[Token(Token = "0x4000EF4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float upOffset;

	[Token(Token = "0x60010E6")]
	[Address(RVA = "0xB43988", Offset = "0xB43988", VA = "0xB43988")]
	public TipPositionParams()
	{
	}
}
[Token(Token = "0x2000313")]
public class TrailerManager : MonoBehaviour
{
	[Token(Token = "0x4000EF5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject _trailerGameObject;

	[Token(Token = "0x4000EF6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public VideoPlayer _videoPlayer;

	[Token(Token = "0x4000EF7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool _isPlaying;

	[Token(Token = "0x60010E7")]
	[Address(RVA = "0xB439A8", Offset = "0xB439A8", VA = "0xB439A8")]
	public void ToggleTrailer()
	{
	}

	[Token(Token = "0x60010E8")]
	[Address(RVA = "0xB43A14", Offset = "0xB43A14", VA = "0xB43A14")]
	public TrailerManager()
	{
	}
}
[Token(Token = "0x2000314")]
public static class TransformUtils
{
	[Token(Token = "0x60010E9")]
	[Address(RVA = "0xB43A1C", Offset = "0xB43A1C", VA = "0xB43A1C")]
	public static void ResetTransform(this Transform transform)
	{
	}
}
[Token(Token = "0x2000315")]
public class TurnOnOnStart : MonoBehaviour
{
	[Token(Token = "0x4000EF8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject target;

	[Token(Token = "0x60010EA")]
	[Address(RVA = "0xB43AFC", Offset = "0xB43AFC", VA = "0xB43AFC")]
	private void Start()
	{
	}

	[Token(Token = "0x60010EB")]
	[Address(RVA = "0xB43B1C", Offset = "0xB43B1C", VA = "0xB43B1C")]
	public TurnOnOnStart()
	{
	}
}
[Token(Token = "0x2000316")]
public static class Vector3IntExtentionMethods
{
	[Token(Token = "0x4000EF9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Vector3Int[] _rotations;

	[Token(Token = "0x60010EC")]
	[Address(RVA = "0xB43B24", Offset = "0xB43B24", VA = "0xB43B24")]
	public static Vector3Int GetMin(this Vector3Int[] coords)
	{
		return default(Vector3Int);
	}

	[Token(Token = "0x60010ED")]
	[Address(RVA = "0xB43BC4", Offset = "0xB43BC4", VA = "0xB43BC4")]
	public static void TranslateValues(this Vector3Int[] coords, Vector3Int translation)
	{
	}

	[Token(Token = "0x60010EE")]
	[Address(RVA = "0xB43C38", Offset = "0xB43C38", VA = "0xB43C38")]
	public static string ToListString(this Vector3Int[] coords)
	{
		return null;
	}

	[Token(Token = "0x60010EF")]
	[Address(RVA = "0xB43D1C", Offset = "0xB43D1C", VA = "0xB43D1C")]
	public static Vector3Int GetInverse(this Vector3Int vector3Int)
	{
		return default(Vector3Int);
	}

	[Token(Token = "0x60010F0")]
	[Address(RVA = "0xB43D30", Offset = "0xB43D30", VA = "0xB43D30")]
	public static void TranslateToMinZero(this Vector3Int[] coords)
	{
	}

	[Token(Token = "0x60010F1")]
	[Address(RVA = "0xB43D9C", Offset = "0xB43D9C", VA = "0xB43D9C")]
	public static Vector3Int ToVector3Int(this Vector3 vector)
	{
		return default(Vector3Int);
	}

	[Token(Token = "0x60010F2")]
	[Address(RVA = "0xB43FE8", Offset = "0xB43FE8", VA = "0xB43FE8")]
	public static void Rotate(this Vector3Int[] coords, Vector3Int euler)
	{
	}

	[Token(Token = "0x60010F3")]
	[Address(RVA = "0xB4411C", Offset = "0xB4411C", VA = "0xB4411C")]
	public static bool EqualValues(this Vector3Int[] set1, Vector3Int[] set2)
	{
		return default(bool);
	}

	[Token(Token = "0x60010F4")]
	[Address(RVA = "0xB441DC", Offset = "0xB441DC", VA = "0xB441DC")]
	public static bool EqualPattern(this Vector3Int[] set1, Vector3Int[] set2)
	{
		return default(bool);
	}
}
[Token(Token = "0x2000317")]
public class VectorQueue : DropOutQueue<Vector3>
{
	[Token(Token = "0x60010F6")]
	[Address(RVA = "0xB445B8", Offset = "0xB445B8", VA = "0xB445B8")]
	public VectorQueue(int max)
	{
	}

	[Token(Token = "0x60010F7")]
	[Address(RVA = "0xB44610", Offset = "0xB44610", VA = "0xB44610")]
	public Vector3 Average()
	{
		return default(Vector3);
	}

	[Token(Token = "0x60010F8")]
	[Address(RVA = "0xB447DC", Offset = "0xB447DC", VA = "0xB447DC")]
	public Vector3 AverageMovement()
	{
		return default(Vector3);
	}
}
[Token(Token = "0x2000318")]
public class VruiFader : StateBehaviour, IEnableable
{
	[Token(Token = "0x2000319")]
	[CompilerGenerated]
	private sealed class <FadeOutAndDisable>d__12 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000F03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000F04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000F05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public VruiFader <>4__this;

		[Token(Token = "0x4000F06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <startTime>5__2;

		[Token(Token = "0x1700019E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001107")]
			[Address(RVA = "0xB4545C", Offset = "0xB4545C", VA = "0xB4545C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700019F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001109")]
			[Address(RVA = "0xB454A4", Offset = "0xB454A4", VA = "0xB454A4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001104")]
		[Address(RVA = "0xB44D58", Offset = "0xB44D58", VA = "0xB44D58")]
		[DebuggerHidden]
		public <FadeOutAndDisable>d__12(int <>1__state)
		{
		}

		[Token(Token = "0x6001105")]
		[Address(RVA = "0xB45314", Offset = "0xB45314", VA = "0xB45314", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001106")]
		[Address(RVA = "0xB45318", Offset = "0xB45318", VA = "0xB45318", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001108")]
		[Address(RVA = "0xB45464", Offset = "0xB45464", VA = "0xB45464", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200031A")]
	[CompilerGenerated]
	private sealed class <EnableAndFadeIn>d__13 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000F07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000F08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000F09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public VruiFader <>4__this;

		[Token(Token = "0x4000F0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <waitStart>5__2;

		[Token(Token = "0x4000F0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <startTime>5__3;

		[Token(Token = "0x170001A0")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600110D")]
			[Address(RVA = "0xB45650", Offset = "0xB45650", VA = "0xB45650", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001A1")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600110F")]
			[Address(RVA = "0xB45698", Offset = "0xB45698", VA = "0xB45698", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600110A")]
		[Address(RVA = "0xB44D80", Offset = "0xB44D80", VA = "0xB44D80")]
		[DebuggerHidden]
		public <EnableAndFadeIn>d__13(int <>1__state)
		{
		}

		[Token(Token = "0x600110B")]
		[Address(RVA = "0xB454AC", Offset = "0xB454AC", VA = "0xB454AC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600110C")]
		[Address(RVA = "0xB454B0", Offset = "0xB454B0", VA = "0xB454B0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600110E")]
		[Address(RVA = "0xB45658", Offset = "0xB45658", VA = "0xB45658", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000EFA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Shader _unlitTransparentShader;

	[Token(Token = "0x4000EFB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public CanvasGroup _canvasGroup;

	[Token(Token = "0x4000EFC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public SlideParams _params;

	[Token(Token = "0x4000EFD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[Header("DEBUG")]
	public bool _fadeOut;

	[Token(Token = "0x4000EFE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
	public bool _fadeIn;

	[Token(Token = "0x4000EFF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x42")]
	private bool _fading;

	[Token(Token = "0x4000F00")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private MeshRenderer[] _renderers;

	[Token(Token = "0x4000F01")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Dictionary<Material, Material> _regToFade;

	[Token(Token = "0x4000F02")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Dictionary<Material, Material> _fadeToReg;

	[Token(Token = "0x60010F9")]
	[Address(RVA = "0xB44A10", Offset = "0xB44A10", VA = "0xB44A10", Slot = "5")]
	protected override void ForceSetup()
	{
	}

	[Token(Token = "0x60010FA")]
	[Address(RVA = "0xB44BF0", Offset = "0xB44BF0", VA = "0xB44BF0")]
	private void Update()
	{
	}

	[Token(Token = "0x60010FB")]
	[Address(RVA = "0xB44C30", Offset = "0xB44C30", VA = "0xB44C30", Slot = "6")]
	public void SetActive(bool value)
	{
	}

	[Token(Token = "0x60010FC")]
	[Address(RVA = "0xB44CF0", Offset = "0xB44CF0", VA = "0xB44CF0")]
	[IteratorStateMachine(typeof(<FadeOutAndDisable>d__12))]
	public IEnumerator FadeOutAndDisable()
	{
		return null;
	}

	[Token(Token = "0x60010FD")]
	[Address(RVA = "0xB44C88", Offset = "0xB44C88", VA = "0xB44C88")]
	[IteratorStateMachine(typeof(<EnableAndFadeIn>d__13))]
	public IEnumerator EnableAndFadeIn()
	{
		return null;
	}

	[Token(Token = "0x60010FE")]
	[Address(RVA = "0xB44A14", Offset = "0xB44A14", VA = "0xB44A14")]
	private void UpdateTransparentMaterials()
	{
	}

	[Token(Token = "0x60010FF")]
	[Address(RVA = "0xB44DA8", Offset = "0xB44DA8", VA = "0xB44DA8")]
	private void SetAllMaterialsToFade()
	{
	}

	[Token(Token = "0x6001100")]
	[Address(RVA = "0xB44EC0", Offset = "0xB44EC0", VA = "0xB44EC0")]
	private void SetAllMaterialsToRegular()
	{
	}

	[Token(Token = "0x6001101")]
	[Address(RVA = "0xB44FD8", Offset = "0xB44FD8", VA = "0xB44FD8")]
	private void SetAllMaterialAlphas(float alphaFactor)
	{
	}

	[Token(Token = "0x6001102")]
	[Address(RVA = "0xB451DC", Offset = "0xB451DC", VA = "0xB451DC")]
	private void SetCanvasAlpha(float alpha)
	{
	}

	[Token(Token = "0x6001103")]
	[Address(RVA = "0xB45274", Offset = "0xB45274", VA = "0xB45274")]
	public VruiFader()
	{
	}
}
[Serializable]
[Token(Token = "0x200031B")]
public class SlideParams
{
	[Token(Token = "0x4000F0C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float duration;

	[Token(Token = "0x6001110")]
	[Address(RVA = "0xB456A0", Offset = "0xB456A0", VA = "0xB456A0")]
	public SlideParams()
	{
	}
}
[Token(Token = "0x200031C")]
public class VrUtils
{
	[Token(Token = "0x4000F0D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static string _sdkName;

	[Token(Token = "0x4000F0E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static string _modelName;

	[Token(Token = "0x4000F0F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static bool _initialized;

	[Token(Token = "0x4000F10")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private static HMD _detectedHmd;

	[Token(Token = "0x4000F11")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static SDK _detectedSdk;

	[Token(Token = "0x4000F12")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private static bool _leftControllerDetected;

	[Token(Token = "0x4000F13")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
	private static bool _rightControllerDetected;

	[Token(Token = "0x4000F14")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E")]
	private static bool _hmdDetected;

	[Token(Token = "0x4000F15")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private static HMD[] _oculusHmds;

	[Token(Token = "0x4000F16")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private static HMD[] _mobileHmds;

	[Token(Token = "0x4000F17")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private static HMD[] _handTrackingEnabledHmds;

	[Token(Token = "0x6001111")]
	[Address(RVA = "0xB456B0", Offset = "0xB456B0", VA = "0xB456B0")]
	public static void Initialize()
	{
	}

	[Token(Token = "0x6001112")]
	[Address(RVA = "0xB45910", Offset = "0xB45910", VA = "0xB45910")]
	private static void DeviceConnected(UnityEngine.XR.InputDevice device)
	{
	}

	[Token(Token = "0x6001113")]
	[Address(RVA = "0xB45B5C", Offset = "0xB45B5C", VA = "0xB45B5C")]
	public static string GetHmdRaw()
	{
		return null;
	}

	[Token(Token = "0x6001114")]
	[Address(RVA = "0xB45C1C", Offset = "0xB45C1C", VA = "0xB45C1C")]
	public static HMD GetHmd()
	{
		return default(HMD);
	}

	[Token(Token = "0x6001115")]
	[Address(RVA = "0xB43244", Offset = "0xB43244", VA = "0xB43244")]
	public static SDK GetSDK()
	{
		return default(SDK);
	}

	[Token(Token = "0x6001116")]
	[Address(RVA = "0xB45CDC", Offset = "0xB45CDC", VA = "0xB45CDC")]
	public static bool HmdPresent()
	{
		return default(bool);
	}

	[Token(Token = "0x6001117")]
	[Address(RVA = "0xB45D74", Offset = "0xB45D74", VA = "0xB45D74")]
	private static bool XrNodeTracked(XRNode node)
	{
		return default(bool);
	}

	[Token(Token = "0x6001118")]
	[Address(RVA = "0xB45E18", Offset = "0xB45E18", VA = "0xB45E18")]
	public static bool ControllerTracking(Cubism.Hand hand)
	{
		return default(bool);
	}

	[Token(Token = "0x6001119")]
	[Address(RVA = "0xB45F88", Offset = "0xB45F88", VA = "0xB45F88")]
	public static bool IsOculusHmd()
	{
		return default(bool);
	}

	[Token(Token = "0x600111A")]
	[Address(RVA = "0xB46004", Offset = "0xB46004", VA = "0xB46004")]
	public static bool IsMobileHmd()
	{
		return default(bool);
	}

	[Token(Token = "0x600111B")]
	[Address(RVA = "0xB46080", Offset = "0xB46080", VA = "0xB46080")]
	public static bool SupportsHandTracking()
	{
		return default(bool);
	}

	[Token(Token = "0x600111C")]
	[Address(RVA = "0xB460FC", Offset = "0xB460FC", VA = "0xB460FC")]
	public static bool HasKnucklesControllers()
	{
		return default(bool);
	}

	[Token(Token = "0x600111D")]
	[Address(RVA = "0xB4617C", Offset = "0xB4617C", VA = "0xB4617C")]
	private static string GetControllerRaw()
	{
		return null;
	}

	[Token(Token = "0x600111E")]
	[Address(RVA = "0xB46224", Offset = "0xB46224", VA = "0xB46224")]
	public VrUtils()
	{
	}
}
[Token(Token = "0x200031D")]
public enum HMD
{
	[Token(Token = "0x4000F19")]
	vive,
	[Token(Token = "0x4000F1A")]
	index,
	[Token(Token = "0x4000F1B")]
	wmr,
	[Token(Token = "0x4000F1C")]
	odyssey,
	[Token(Token = "0x4000F1D")]
	rift,
	[Token(Token = "0x4000F1E")]
	riftS,
	[Token(Token = "0x4000F1F")]
	link,
	[Token(Token = "0x4000F20")]
	quest,
	[Token(Token = "0x4000F21")]
	quest2,
	[Token(Token = "0x4000F22")]
	cambria,
	[Token(Token = "0x4000F23")]
	none,
	[Token(Token = "0x4000F24")]
	picoNeo,
	[Token(Token = "0x4000F25")]
	undefined,
	[Token(Token = "0x4000F26")]
	picoNeo4
}
[Token(Token = "0x200031E")]
public enum SDK
{
	[Token(Token = "0x4000F28")]
	steamVR,
	[Token(Token = "0x4000F29")]
	oculus,
	[Token(Token = "0x4000F2A")]
	pico,
	[Token(Token = "0x4000F2B")]
	openXr,
	[Token(Token = "0x4000F2C")]
	undefined
}
[Token(Token = "0x200031F")]
public class ActiveSaveFileView : StateBehaviour
{
	[Token(Token = "0x4000F2D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Text _text;

	[Token(Token = "0x6001120")]
	[Address(RVA = "0xB4635C", Offset = "0xB4635C", VA = "0xB4635C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6001121")]
	[Address(RVA = "0xB4647C", Offset = "0xB4647C", VA = "0xB4647C")]
	public ActiveSaveFileView()
	{
	}
}
[Token(Token = "0x2000320")]
public class AdvancedControlsViewVrui : StateBehaviour
{
	[Token(Token = "0x4000F2E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public VrToggle toggle;

	[Token(Token = "0x6001122")]
	[Address(RVA = "0xB46484", Offset = "0xB46484", VA = "0xB46484", Slot = "5")]
	protected override void ForceSetup()
	{
	}

	[Token(Token = "0x6001123")]
	[Address(RVA = "0xB46544", Offset = "0xB46544", VA = "0xB46544")]
	private void UpdateToggle()
	{
	}

	[Token(Token = "0x6001124")]
	[Address(RVA = "0xB46594", Offset = "0xB46594", VA = "0xB46594")]
	public AdvancedControlsViewVrui()
	{
	}
}
[Token(Token = "0x2000321")]
public class BrightnessViewVrui : StateBehaviour
{
	[Token(Token = "0x4000F2F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public VolumeBars bars;

	[Token(Token = "0x6001125")]
	[Address(RVA = "0xB4659C", Offset = "0xB4659C", VA = "0xB4659C")]
	private void Start()
	{
	}

	[Token(Token = "0x6001126")]
	[Address(RVA = "0xB465B4", Offset = "0xB465B4", VA = "0xB465B4")]
	private void SubscribeToChanges()
	{
	}

	[Token(Token = "0x6001127")]
	[Address(RVA = "0xB4666C", Offset = "0xB4666C", VA = "0xB4666C")]
	private void UpdateBars()
	{
	}

	[Token(Token = "0x6001128")]
	[Address(RVA = "0xB466CC", Offset = "0xB466CC", VA = "0xB466CC")]
	private int VolToLevel(float volume)
	{
		return default(int);
	}

	[Token(Token = "0x6001129")]
	[Address(RVA = "0xB467C4", Offset = "0xB467C4", VA = "0xB467C4")]
	public BrightnessViewVrui()
	{
	}
}
[Token(Token = "0x2000322")]
public class CamUiView : MonoBehaviour
{
	[Token(Token = "0x4000F30")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public SpectatorCamService _spectatorCam;

	[Token(Token = "0x4000F31")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Dropdown _spectatorCamDropdown;

	[Token(Token = "0x4000F32")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject _orbitalOptions;

	[Token(Token = "0x600112A")]
	[Address(RVA = "0xB467CC", Offset = "0xB467CC", VA = "0xB467CC")]
	private void Start()
	{
	}

	[Token(Token = "0x600112B")]
	[Address(RVA = "0xB46858", Offset = "0xB46858", VA = "0xB46858")]
	private void UpdateDropdrown(SpectatorCam cam)
	{
	}

	[Token(Token = "0x600112C")]
	[Address(RVA = "0xB468C8", Offset = "0xB468C8", VA = "0xB468C8")]
	private void OpenCamOptions(SpectatorCam cam)
	{
	}

	[Token(Token = "0x600112D")]
	[Address(RVA = "0xB468A8", Offset = "0xB468A8", VA = "0xB468A8")]
	private void SetAllOptionsOff()
	{
	}

	[Token(Token = "0x600112E")]
	[Address(RVA = "0xB468F8", Offset = "0xB468F8", VA = "0xB468F8")]
	private int GetSpectatorCamIndex(SpectatorCam cam)
	{
		return default(int);
	}

	[Token(Token = "0x600112F")]
	[Address(RVA = "0xB46914", Offset = "0xB46914", VA = "0xB46914")]
	public CamUiView()
	{
	}
}
[Token(Token = "0x2000323")]
public class CenterMenuView : StateBehaviour
{
	[Token(Token = "0x4000F33")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject _menuButton;

	[Token(Token = "0x4000F34")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject _podium;

	[Token(Token = "0x4000F35")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Mode[] _podiumModes;

	[Token(Token = "0x4000F36")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Mode[] _buttonModes;

	[Token(Token = "0x6001130")]
	[Address(RVA = "0xB4691C", Offset = "0xB4691C", VA = "0xB4691C", Slot = "5")]
	protected override void ForceSetup()
	{
	}

	[Token(Token = "0x6001131")]
	[Address(RVA = "0xB46A30", Offset = "0xB46A30", VA = "0xB46A30")]
	private void UpdateView()
	{
	}

	[Token(Token = "0x6001132")]
	[Address(RVA = "0xB46B2C", Offset = "0xB46B2C", VA = "0xB46B2C")]
	public CenterMenuView()
	{
	}
}
[Token(Token = "0x2000324")]
[RequireComponent(typeof(CollisionListener))]
public class CollisionAudio : MonoBehaviour
{
	[Token(Token = "0x4000F37")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private PieceView _pieceView;

	[Token(Token = "0x4000F38")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private CollisionListener _collisionListener;

	[Token(Token = "0x4000F39")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Rigidbody _localRigidBody;

	[Token(Token = "0x4000F3A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private MotionValues _motionValues;

	[Token(Token = "0x4000F3B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static float _lastCollisionPlay;

	[Token(Token = "0x4000F3C")]
	private const float MinSqrVelForAudio = 1.5f;

	[Token(Token = "0x4000F3D")]
	private const float MinSqrVelForAudioOnGrid = 20f;

	[Token(Token = "0x4000F3E")]
	private const float MaxSqrVelForMaxAudio = 40f;

	[Token(Token = "0x4000F3F")]
	private const float TimeBetweenCollisionAudio = 0.05f;

	[Token(Token = "0x6001135")]
	[Address(RVA = "0xB46BDC", Offset = "0xB46BDC", VA = "0xB46BDC")]
	private void Start()
	{
	}

	[Token(Token = "0x6001136")]
	[Address(RVA = "0xB46D08", Offset = "0xB46D08", VA = "0xB46D08")]
	private void CheckToPlayAudio(Collision other)
	{
	}

	[Token(Token = "0x6001137")]
	[Address(RVA = "0xB46E94", Offset = "0xB46E94", VA = "0xB46E94")]
	private void PlayCollision(Vector3 pos, float vel, float minVel)
	{
	}

	[Token(Token = "0x6001138")]
	[Address(RVA = "0xB46FB0", Offset = "0xB46FB0", VA = "0xB46FB0")]
	public CollisionAudio()
	{
	}
}
[Token(Token = "0x2000325")]
public class ColorPickerPresenter : StateBehaviour
{
	[Token(Token = "0x4000F40")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ColorPickerView selectorPrefab;

	[Token(Token = "0x4000F41")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform selectorParent;

	[Token(Token = "0x4000F42")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Dictionary<string, ColorPickerView> _pickers;

	[Token(Token = "0x6001139")]
	[Address(RVA = "0xB46FB8", Offset = "0xB46FB8", VA = "0xB46FB8")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600113A")]
	[Address(RVA = "0xB47370", Offset = "0xB47370", VA = "0xB47370")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600113B")]
	[Address(RVA = "0xB47654", Offset = "0xB47654", VA = "0xB47654")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600113C")]
	[Address(RVA = "0xB47658", Offset = "0xB47658", VA = "0xB47658")]
	private void AddPicker(string id)
	{
	}

	[Token(Token = "0x600113D")]
	[Address(RVA = "0xB47268", Offset = "0xB47268", VA = "0xB47268")]
	private void AddPicker(PieceView pieceView)
	{
	}

	[Token(Token = "0x600113E")]
	[Address(RVA = "0xB47374", Offset = "0xB47374", VA = "0xB47374")]
	private void Clear()
	{
	}

	[Token(Token = "0x600113F")]
	[Address(RVA = "0xB4775C", Offset = "0xB4775C", VA = "0xB4775C")]
	private void RemovePicker(string id)
	{
	}

	[Token(Token = "0x6001140")]
	[Address(RVA = "0xB4783C", Offset = "0xB4783C", VA = "0xB4783C")]
	public ColorPickerPresenter()
	{
	}
}
[Token(Token = "0x2000326")]
public class ColorPickerView : StateBehaviour
{
	[Token(Token = "0x4000F43")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform dot;

	[Token(Token = "0x4000F44")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GrabAction target;

	[Token(Token = "0x4000F45")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Renderer colorSphere;

	[Token(Token = "0x4000F46")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Text text;

	[Token(Token = "0x4000F47")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Transform dottedLine;

	[Token(Token = "0x4000F48")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public MeshRenderer dottedLineRenderer;

	[Token(Token = "0x4000F49")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public InteractionListener listener;

	[Token(Token = "0x4000F4A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	protected Color _color;

	[Token(Token = "0x4000F4B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	protected PieceView _piece;

	[Token(Token = "0x4000F4C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private PieceCollection _pieceCollection;

	[Token(Token = "0x6001141")]
	[Address(RVA = "0xB476CC", Offset = "0xB476CC", VA = "0xB476CC")]
	public void Setup(PieceView pieceView)
	{
	}

	[Token(Token = "0x6001142")]
	[Address(RVA = "0xB4797C", Offset = "0xB4797C", VA = "0xB4797C")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6001143")]
	[Address(RVA = "0xB47F30", Offset = "0xB47F30", VA = "0xB47F30", Slot = "6")]
	protected virtual void SetPosFromColor()
	{
	}

	[Token(Token = "0x6001144")]
	[Address(RVA = "0xB47FF4", Offset = "0xB47FF4", VA = "0xB47FF4", Slot = "7")]
	protected virtual void UpdatePosition()
	{
	}

	[Token(Token = "0x6001145")]
	[Address(RVA = "0xB480DC", Offset = "0xB480DC", VA = "0xB480DC", Slot = "8")]
	protected virtual void SetTargetColorFromPos()
	{
	}

	[Token(Token = "0x6001146")]
	[Address(RVA = "0xB478B8", Offset = "0xB478B8", VA = "0xB478B8")]
	private void UpdateText()
	{
	}

	[Token(Token = "0x6001147")]
	[Address(RVA = "0xB47E48", Offset = "0xB47E48", VA = "0xB47E48")]
	private void UpdateTextColor()
	{
	}

	[Token(Token = "0x6001148")]
	[Address(RVA = "0xB48140", Offset = "0xB48140", VA = "0xB48140")]
	public ColorPickerView()
	{
	}
}
[Token(Token = "0x2000327")]
public class ColorPickerViewCilinder : ColorPickerView
{
	[Token(Token = "0x4000F4D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[Header("Debug")]
	public Color _pieceColor;

	[Token(Token = "0x4000F4E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public float h;

	[Token(Token = "0x4000F4F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	public float s;

	[Token(Token = "0x4000F50")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public float v;

	[Token(Token = "0x4000F51")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	public float hp;

	[Token(Token = "0x4000F52")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public float sp;

	[Token(Token = "0x4000F53")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	public float vp;

	[Token(Token = "0x4000F54")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public float angleP;

	[Token(Token = "0x4000F55")]
	private const float cilinderHeight = 1f;

	[Token(Token = "0x6001149")]
	[Address(RVA = "0xB48148", Offset = "0xB48148", VA = "0xB48148", Slot = "6")]
	protected override void SetPosFromColor()
	{
	}

	[Token(Token = "0x600114A")]
	[Address(RVA = "0xB48280", Offset = "0xB48280", VA = "0xB48280", Slot = "7")]
	protected override void UpdatePosition()
	{
	}

	[Token(Token = "0x600114B")]
	[Address(RVA = "0xB48390", Offset = "0xB48390", VA = "0xB48390", Slot = "8")]
	protected override void SetTargetColorFromPos()
	{
	}

	[Token(Token = "0x600114C")]
	[Address(RVA = "0xB48498", Offset = "0xB48498", VA = "0xB48498")]
	public ColorPickerViewCilinder()
	{
	}
}
[Token(Token = "0x2000328")]
public class ColorThemeViewVrui : StateBehaviour
{
	[Token(Token = "0x4000F56")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public VrToggle light;

	[Token(Token = "0x4000F57")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public VrToggle dark;

	[Token(Token = "0x4000F58")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public VrToggle passthrough;

	[Token(Token = "0x4000F59")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public VrToggle darkMode;

	[Token(Token = "0x600114D")]
	[Address(RVA = "0xB484A0", Offset = "0xB484A0", VA = "0xB484A0", Slot = "5")]
	protected override void ForceSetup()
	{
	}

	[Token(Token = "0x600114E")]
	[Address(RVA = "0xB48560", Offset = "0xB48560", VA = "0xB48560")]
	private void UpdateToggle()
	{
	}

	[Token(Token = "0x600114F")]
	[Address(RVA = "0xB486B4", Offset = "0xB486B4", VA = "0xB486B4")]
	public ColorThemeViewVrui()
	{
	}
}
[Token(Token = "0x2000329")]
public class CommunityPuzzlePaginationView : StateBehaviour
{
	[Token(Token = "0x4000F5A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject _paginationWrapper;

	[Token(Token = "0x4000F5B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Text _pageText;

	[Token(Token = "0x6001150")]
	[Address(RVA = "0xB486BC", Offset = "0xB486BC", VA = "0xB486BC", Slot = "5")]
	protected override void ForceSetup()
	{
	}

	[Token(Token = "0x6001151")]
	[Address(RVA = "0xB487C8", Offset = "0xB487C8", VA = "0xB487C8")]
	private void UpdatePageView()
	{
	}

	[Token(Token = "0x6001152")]
	[Address(RVA = "0xB488E8", Offset = "0xB488E8", VA = "0xB488E8")]
	public CommunityPuzzlePaginationView()
	{
	}
}
[Token(Token = "0x200032A")]
public class CommunityPuzzlePresenter : StateBehaviour
{
	[Token(Token = "0x4000F5C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject _levelUiPrefab;

	[Token(Token = "0x4000F5D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject _emptyLevelSlot;

	[Token(Token = "0x4000F5E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform _levelParent;

	[Token(Token = "0x4000F5F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject _loadingWrapper;

	[Token(Token = "0x4000F60")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject _levelWrapper;

	[Token(Token = "0x4000F61")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject _offlineWrapper;

	[Token(Token = "0x4000F62")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GameObject _errorWrapper;

	[Token(Token = "0x4000F63")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Text _errorText;

	[Token(Token = "0x4000F64")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Dictionary<string, LevelUi> _levelButtons;

	[Token(Token = "0x4000F65")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private List<GameObject> _emptyButtons;

	[Token(Token = "0x6001155")]
	[Address(RVA = "0xB488F8", Offset = "0xB488F8", VA = "0xB488F8")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6001156")]
	[Address(RVA = "0xB48C3C", Offset = "0xB48C3C", VA = "0xB48C3C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6001157")]
	[Address(RVA = "0xB49050", Offset = "0xB49050", VA = "0xB49050")]
	private void RenderPageAfterConnectionChange(bool accessible)
	{
	}

	[Token(Token = "0x6001158")]
	[Address(RVA = "0xB48A28", Offset = "0xB48A28", VA = "0xB48A28")]
	private void CheckToRenderPage(CommunityLevelModel.LoadState loadState)
	{
	}

	[Token(Token = "0x6001159")]
	[Address(RVA = "0xB49080", Offset = "0xB49080", VA = "0xB49080")]
	private void SpawnLevelButton(Level level, int siblingIndex = -1)
	{
	}

	[Token(Token = "0x600115A")]
	[Address(RVA = "0xB4929C", Offset = "0xB4929C", VA = "0xB4929C")]
	private void SpawnEmptySlot()
	{
	}

	[Token(Token = "0x600115B")]
	[Address(RVA = "0xB48D50", Offset = "0xB48D50", VA = "0xB48D50")]
	private void ClearButtons()
	{
	}

	[Token(Token = "0x600115C")]
	[Address(RVA = "0xB4939C", Offset = "0xB4939C", VA = "0xB4939C")]
	public CommunityPuzzlePresenter()
	{
	}
}
[Token(Token = "0x200032B")]
public class ContrastViewVrui : StateBehaviour
{
	[Token(Token = "0x4000F66")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public VolumeBars bars;

	[Token(Token = "0x600115D")]
	[Address(RVA = "0xB4945C", Offset = "0xB4945C", VA = "0xB4945C")]
	private void Start()
	{
	}

	[Token(Token = "0x600115E")]
	[Address(RVA = "0xB49474", Offset = "0xB49474", VA = "0xB49474")]
	private void SubscribeToChanges()
	{
	}

	[Token(Token = "0x600115F")]
	[Address(RVA = "0xB4952C", Offset = "0xB4952C", VA = "0xB4952C")]
	private void UpdateBars()
	{
	}

	[Token(Token = "0x6001160")]
	[Address(RVA = "0xB4958C", Offset = "0xB4958C", VA = "0xB4958C")]
	private int VolToLevel(float volume)
	{
		return default(int);
	}

	[Token(Token = "0x6001161")]
	[Address(RVA = "0xB49684", Offset = "0xB49684", VA = "0xB49684")]
	public ContrastViewVrui()
	{
	}
}
[Token(Token = "0x200032C")]
public class CursorInteractionHaptics : MonoBehaviour
{
	[Token(Token = "0x4000F67")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public CursorInteractions _cursorInteractions;

	[Token(Token = "0x6001162")]
	[Address(RVA = "0xB4968C", Offset = "0xB4968C", VA = "0xB4968C")]
	private void Start()
	{
	}

	[Token(Token = "0x6001163")]
	[Address(RVA = "0xB49718", Offset = "0xB49718", VA = "0xB49718")]
	private void HoverHaptics(InteractionData data)
	{
	}

	[Token(Token = "0x6001164")]
	[Address(RVA = "0xB4977C", Offset = "0xB4977C", VA = "0xB4977C")]
	public CursorInteractionHaptics()
	{
	}
}
[Token(Token = "0x200032D")]
public class CustomPuzzleMenuVisibility : StateBehaviour
{
	[Token(Token = "0x4000F68")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject _customPuzzleButton;

	[Token(Token = "0x4000F69")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Version maxVersion;

	[Token(Token = "0x6001165")]
	[Address(RVA = "0xB49784", Offset = "0xB49784", VA = "0xB49784", Slot = "5")]
	protected override void ForceSetup()
	{
	}

	[Token(Token = "0x6001166")]
	[Address(RVA = "0xB49858", Offset = "0xB49858", VA = "0xB49858")]
	public CustomPuzzleMenuVisibility()
	{
	}
}
[Token(Token = "0x200032E")]
public class CustomPuzzlePresenter : StateBehaviour
{
	[Token(Token = "0x200032F")]
	[CompilerGenerated]
	private sealed class <UpdatePuzzleButtons>d__28 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000F7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000F7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000F80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CustomPuzzlePresenter <>4__this;

		[Token(Token = "0x4000F81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int <i>5__2;

		[Token(Token = "0x170001A2")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600117B")]
			[Address(RVA = "0xB4AE00", Offset = "0xB4AE00", VA = "0xB4AE00", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001A3")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600117D")]
			[Address(RVA = "0xB4AE48", Offset = "0xB4AE48", VA = "0xB4AE48", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001178")]
		[Address(RVA = "0xB4A198", Offset = "0xB4A198", VA = "0xB4A198")]
		[DebuggerHidden]
		public <UpdatePuzzleButtons>d__28(int <>1__state)
		{
		}

		[Token(Token = "0x6001179")]
		[Address(RVA = "0xB4AC70", Offset = "0xB4AC70", VA = "0xB4AC70", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600117A")]
		[Address(RVA = "0xB4AC74", Offset = "0xB4AC74", VA = "0xB4AC74", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600117C")]
		[Address(RVA = "0xB4AE08", Offset = "0xB4AE08", VA = "0xB4AE08", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000F6A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject _levelUiPrefab;

	[Token(Token = "0x4000F6B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject _emptyLevelSlot;

	[Token(Token = "0x4000F6C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform _levelParent;

	[Token(Token = "0x4000F6D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject _paginationWrapper;

	[Token(Token = "0x4000F6E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public VrButton _pgDown;

	[Token(Token = "0x4000F6F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Text _pageTxt;

	[Token(Token = "0x4000F70")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public VrButton _pgUp;

	[Token(Token = "0x4000F71")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public PageGroup _pageGroup;

	[Token(Token = "0x4000F72")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Page _editorPage;

	[Token(Token = "0x4000F73")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public WarningMenu _warningMenu;

	[Token(Token = "0x4000F74")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public SortOrder _order;

	[Token(Token = "0x4000F75")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public VrToggle _editorTabToOpenOnEdit;

	[Token(Token = "0x4000F76")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public VrToggleGroup _editorTabGroup;

	[Token(Token = "0x4000F77")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public PageGroup _editorPageGroup;

	[Token(Token = "0x4000F78")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public Page _editorSubPage;

	[Token(Token = "0x4000F79")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[Header("Debug")]
	public bool _clearButtons;

	[Token(Token = "0x4000F7A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	private int _page;

	[Token(Token = "0x4000F7B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private Dictionary<string, CustomLevelUi> _levelButtons;

	[Token(Token = "0x4000F7C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private List<GameObject> _emptyButtons;

	[Token(Token = "0x4000F7D")]
	private const int LevelsPerPage = 12;

	[Token(Token = "0x6001167")]
	[Address(RVA = "0xB498D8", Offset = "0xB498D8", VA = "0xB498D8", Slot = "5")]
	protected override void ForceSetup()
	{
	}

	[Token(Token = "0x6001168")]
	[Address(RVA = "0xB499B8", Offset = "0xB499B8", VA = "0xB499B8")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6001169")]
	[Address(RVA = "0xB499F0", Offset = "0xB499F0", VA = "0xB499F0")]
	private void Update()
	{
	}

	[Token(Token = "0x600116A")]
	[Address(RVA = "0xB49E34", Offset = "0xB49E34", VA = "0xB49E34")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600116B")]
	[Address(RVA = "0xB49E38", Offset = "0xB49E38", VA = "0xB49E38")]
	public void PageUp()
	{
	}

	[Token(Token = "0x600116C")]
	[Address(RVA = "0xB49EC8", Offset = "0xB49EC8", VA = "0xB49EC8")]
	public void PageDown()
	{
	}

	[Token(Token = "0x600116D")]
	[Address(RVA = "0xB499BC", Offset = "0xB499BC", VA = "0xB499BC")]
	private void RenderPage()
	{
	}

	[Token(Token = "0x600116E")]
	[Address(RVA = "0xB49FA8", Offset = "0xB49FA8", VA = "0xB49FA8")]
	private void UpdatePagination()
	{
	}

	[Token(Token = "0x600116F")]
	[Address(RVA = "0xB4A130", Offset = "0xB4A130", VA = "0xB4A130")]
	[IteratorStateMachine(typeof(<UpdatePuzzleButtons>d__28))]
	private IEnumerator UpdatePuzzleButtons()
	{
		return null;
	}

	[Token(Token = "0x6001170")]
	[Address(RVA = "0xB49A10", Offset = "0xB49A10", VA = "0xB49A10")]
	private void ClearButtons()
	{
	}

	[Token(Token = "0x6001171")]
	[Address(RVA = "0xB4A1C0", Offset = "0xB4A1C0", VA = "0xB4A1C0")]
	private void SpawnLevelButton(Level level)
	{
	}

	[Token(Token = "0x6001172")]
	[Address(RVA = "0xB4A418", Offset = "0xB4A418", VA = "0xB4A418")]
	private void SpawnEmptySlot()
	{
	}

	[Token(Token = "0x6001173")]
	[Address(RVA = "0xB4A518", Offset = "0xB4A518", VA = "0xB4A518")]
	private void EditPuzzle(Level level)
	{
	}

	[Token(Token = "0x6001174")]
	[Address(RVA = "0xB4A8A8", Offset = "0xB4A8A8", VA = "0xB4A8A8")]
	private void ShowDeleteWarning(Level level)
	{
	}

	[Token(Token = "0x6001175")]
	[Address(RVA = "0xB4AAAC", Offset = "0xB4AAAC", VA = "0xB4AAAC")]
	private void DeletePuzzle(Level level)
	{
	}

	[Token(Token = "0x6001176")]
	[Address(RVA = "0xB4AB48", Offset = "0xB4AB48", VA = "0xB4AB48")]
	private void UploadPuzzle(Level level)
	{
	}

	[Token(Token = "0x6001177")]
	[Address(RVA = "0xB4ABB0", Offset = "0xB4ABB0", VA = "0xB4ABB0")]
	public CustomPuzzlePresenter()
	{
	}
}
[Token(Token = "0x2000331")]
public enum SortOrder
{
	[Token(Token = "0x4000F85")]
	Recent,
	[Token(Token = "0x4000F86")]
	AtoZ,
	[Token(Token = "0x4000F87")]
	ZtoA
}
[Token(Token = "0x2000332")]
public class CustomPuzzleView : StateBehaviour
{
	[Token(Token = "0x2000333")]
	[CompilerGenerated]
	private sealed class <UpdatePuzzleButtons>d__17 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000F92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000F93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000F94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CustomPuzzleView <>4__this;

		[Token(Token = "0x4000F95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int <i>5__2;

		[Token(Token = "0x170001A4")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600118F")]
			[Address(RVA = "0xB4B8E4", Offset = "0xB4B8E4", VA = "0xB4B8E4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001A5")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001191")]
			[Address(RVA = "0xB4B92C", Offset = "0xB4B92C", VA = "0xB4B92C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600118C")]
		[Address(RVA = "0xB4B44C", Offset = "0xB4B44C", VA = "0xB4B44C")]
		[DebuggerHidden]
		public <UpdatePuzzleButtons>d__17(int <>1__state)
		{
		}

		[Token(Token = "0x600118D")]
		[Address(RVA = "0xB4B754", Offset = "0xB4B754", VA = "0xB4B754", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600118E")]
		[Address(RVA = "0xB4B758", Offset = "0xB4B758", VA = "0xB4B758", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001190")]
		[Address(RVA = "0xB4B8EC", Offset = "0xB4B8EC", VA = "0xB4B8EC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000F88")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject _levelUiPrefab;

	[Token(Token = "0x4000F89")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject _emptyLevelSlot;

	[Token(Token = "0x4000F8A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform _levelParent;

	[Token(Token = "0x4000F8B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject _paginationWrapper;

	[Token(Token = "0x4000F8C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public VrButton _pgDown;

	[Token(Token = "0x4000F8D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Text _pageTxt;

	[Token(Token = "0x4000F8E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public VrButton _pgUp;

	[Token(Token = "0x4000F8F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private int _page;

	[Token(Token = "0x4000F90")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private List<GameObject> _levelButtons;

	[Token(Token = "0x4000F91")]
	private const int LevelsPerPage = 12;

	[Token(Token = "0x6001180")]
	[Address(RVA = "0xB4AE70", Offset = "0xB4AE70", VA = "0xB4AE70", Slot = "5")]
	protected override void ForceSetup()
	{
	}

	[Token(Token = "0x6001181")]
	[Address(RVA = "0xB4AF50", Offset = "0xB4AF50", VA = "0xB4AF50")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6001182")]
	[Address(RVA = "0xB4AF88", Offset = "0xB4AF88", VA = "0xB4AF88")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6001183")]
	[Address(RVA = "0xB4B0EC", Offset = "0xB4B0EC", VA = "0xB4B0EC")]
	public void PageUp()
	{
	}

	[Token(Token = "0x6001184")]
	[Address(RVA = "0xB4B17C", Offset = "0xB4B17C", VA = "0xB4B17C")]
	public void PageDown()
	{
	}

	[Token(Token = "0x6001185")]
	[Address(RVA = "0xB4AF54", Offset = "0xB4AF54", VA = "0xB4AF54")]
	private void RenderPage()
	{
	}

	[Token(Token = "0x6001186")]
	[Address(RVA = "0xB4B25C", Offset = "0xB4B25C", VA = "0xB4B25C")]
	private void UpdatePagination()
	{
	}

	[Token(Token = "0x6001187")]
	[Address(RVA = "0xB4B3E4", Offset = "0xB4B3E4", VA = "0xB4B3E4")]
	[IteratorStateMachine(typeof(<UpdatePuzzleButtons>d__17))]
	private IEnumerator UpdatePuzzleButtons()
	{
		return null;
	}

	[Token(Token = "0x6001188")]
	[Address(RVA = "0xB4AF8C", Offset = "0xB4AF8C", VA = "0xB4AF8C")]
	private void ClearButtons()
	{
	}

	[Token(Token = "0x6001189")]
	[Address(RVA = "0xB4B474", Offset = "0xB4B474", VA = "0xB4B474")]
	private void SpawnLevelButton(Level level)
	{
	}

	[Token(Token = "0x600118A")]
	[Address(RVA = "0xB4B5D8", Offset = "0xB4B5D8", VA = "0xB4B5D8")]
	private void SpawnEmptySlot()
	{
	}

	[Token(Token = "0x600118B")]
	[Address(RVA = "0xB4B6D8", Offset = "0xB4B6D8", VA = "0xB4B6D8")]
	public CustomPuzzleView()
	{
	}
}
[Token(Token = "0x2000334")]
public class DailyPuzzleView : StateBehaviour
{
	[Token(Token = "0x4000F96")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Text _title;

	[Token(Token = "0x4000F97")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Text _mainText;

	[Token(Token = "0x4000F98")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Text _subText;

	[Token(Token = "0x4000F99")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Transform _parent;

	[Token(Token = "0x4000F9A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject _levelUiPrefab;

	[Token(Token = "0x4000F9B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject _emptyLevelPrefab;

	[Token(Token = "0x4000F9C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private GameObject _levelButton;

	[Token(Token = "0x6001192")]
	[Address(RVA = "0xB4B934", Offset = "0xB4B934", VA = "0xB4B934")]
	private void Start()
	{
	}

	[Token(Token = "0x6001193")]
	[Address(RVA = "0xB4BA34", Offset = "0xB4BA34", VA = "0xB4BA34")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6001194")]
	[Address(RVA = "0xB4BB14", Offset = "0xB4BB14", VA = "0xB4BB14")]
	private void ClearButton()
	{
	}

	[Token(Token = "0x6001195")]
	[Address(RVA = "0xB4BA38", Offset = "0xB4BA38", VA = "0xB4BA38")]
	private void RenderPage()
	{
	}

	[Token(Token = "0x6001196")]
	[Address(RVA = "0xB4BCE8", Offset = "0xB4BCE8", VA = "0xB4BCE8")]
	private void SetTitle()
	{
	}

	[Token(Token = "0x6001197")]
	[Address(RVA = "0xB4BDE8", Offset = "0xB4BDE8", VA = "0xB4BDE8")]
	private void SetText()
	{
	}

	[Token(Token = "0x6001198")]
	[Address(RVA = "0xB4BEFC", Offset = "0xB4BEFC", VA = "0xB4BEFC")]
	private void SpawnLevelButton(Level level)
	{
	}

	[Token(Token = "0x6001199")]
	[Address(RVA = "0xB4BBA4", Offset = "0xB4BBA4", VA = "0xB4BBA4")]
	private void SetErrorText()
	{
	}

	[Token(Token = "0x600119A")]
	[Address(RVA = "0xB4BC60", Offset = "0xB4BC60", VA = "0xB4BC60")]
	private void SpawnEmptyPuzzle()
	{
	}

	[Token(Token = "0x600119B")]
	[Address(RVA = "0xB4BFC8", Offset = "0xB4BFC8", VA = "0xB4BFC8")]
	public DailyPuzzleView()
	{
	}
}
[Token(Token = "0x2000335")]
public class DarkModeDisabledVisibility : StateBehaviour
{
	[Token(Token = "0x600119E")]
	[Address(RVA = "0xB4BFD8", Offset = "0xB4BFD8", VA = "0xB4BFD8", Slot = "5")]
	protected override void ForceSetup()
	{
	}

	[Token(Token = "0x600119F")]
	[Address(RVA = "0xB4C0F8", Offset = "0xB4C0F8", VA = "0xB4C0F8")]
	private void UpdateVisibility()
	{
	}

	[Token(Token = "0x60011A0")]
	[Address(RVA = "0xB4C184", Offset = "0xB4C184", VA = "0xB4C184")]
	public DarkModeDisabledVisibility()
	{
	}
}
[Token(Token = "0x2000336")]
public class DayOfMonthView : MonoBehaviour
{
	[Token(Token = "0x4000F9D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Text text;

	[Token(Token = "0x60011A1")]
	[Address(RVA = "0xB4C18C", Offset = "0xB4C18C", VA = "0xB4C18C")]
	public void Start()
	{
	}

	[Token(Token = "0x60011A2")]
	[Address(RVA = "0xB4C294", Offset = "0xB4C294", VA = "0xB4C294")]
	public DayOfMonthView()
	{
	}
}
[Token(Token = "0x2000337")]
[ExecuteInEditMode]
public class DebugMatValues : MonoBehaviour
{
	[Token(Token = "0x4000F9E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Renderer renderere;

	[Token(Token = "0x4000F9F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Material _mat;

	[Token(Token = "0x4000FA0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Color _targetHandColor;

	[Token(Token = "0x4000FA1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[Range(0f, 1f)]
	public float _targetHandAlpha;

	[Token(Token = "0x4000FA2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public Color _edgeColor;

	[Token(Token = "0x4000FA3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[Range(0f, 1f)]
	public float _targetEdgeColorBlend;

	[Token(Token = "0x4000FA4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[Range(0f, 1f)]
	public float _targetEdgeAlphaBlend;

	[Token(Token = "0x4000FA5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	[Range(0f, 1f)]
	public float _targetColorBlendSupport;

	[Token(Token = "0x4000FA6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Color _targetFingerColorSupport;

	[Token(Token = "0x4000FA7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[Range(0f, 1f)]
	public float _targetFingerAlphaBlendSupport;

	[Token(Token = "0x4000FA8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	[Range(0f, 1f)]
	public float _targetColorBlendIndex;

	[Token(Token = "0x4000FA9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Color _targetFingerColorIndex;

	[Token(Token = "0x4000FAA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[Range(0f, 1f)]
	public float _targetFingerAlphaBlendIndex;

	[Token(Token = "0x4000FAB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	[Range(0f, 1f)]
	public float _targetColorBlendPull;

	[Token(Token = "0x4000FAC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Color _targetFingerColorPull;

	[Token(Token = "0x4000FAD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[Range(0f, 1f)]
	public float _targetFingerAlphaBlendPull;

	[Token(Token = "0x4000FAE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	[Range(0f, 1f)]
	public float _targetColorBlendMove;

	[Token(Token = "0x4000FAF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public Color _targetFingerColorMove;

	[Token(Token = "0x4000FB0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[Range(0f, 1f)]
	public float _targetFingerAlphaBlendMove;

	[Token(Token = "0x60011A3")]
	[Address(RVA = "0xB4C29C", Offset = "0xB4C29C", VA = "0xB4C29C")]
	private void Start()
	{
	}

	[Token(Token = "0x60011A4")]
	[Address(RVA = "0xB4C2C4", Offset = "0xB4C2C4", VA = "0xB4C2C4")]
	private void Update()
	{
	}

	[Token(Token = "0x60011A5")]
	[Address(RVA = "0xB4C2C8", Offset = "0xB4C2C8", VA = "0xB4C2C8")]
	private void LerpValues()
	{
	}

	[Token(Token = "0x60011A6")]
	[Address(RVA = "0xB4CA04", Offset = "0xB4CA04", VA = "0xB4CA04")]
	public DebugMatValues()
	{
	}
}
[Token(Token = "0x2000338")]
public class DiscordShareView : StateBehaviour
{
	[Token(Token = "0x4000FB1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject _discordWrapper;

	[Token(Token = "0x4000FB2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public VrButton _shareOnDiscord;

	[Token(Token = "0x4000FB3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject _shareOnDiscordDisabled;

	[Token(Token = "0x4000FB4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public DiscordService _discordService;

	[Token(Token = "0x4000FB5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public WarningMenu warningMenu;

	[Token(Token = "0x4000FB6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Text _buttonText;

	[Token(Token = "0x4000FB7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Text _shareText;

	[Token(Token = "0x4000FB8")]
	public const string buttonShare = "Share to \nDiscord";

	[Token(Token = "0x4000FB9")]
	public const string buttonShared = "Shared!";

	[Token(Token = "0x4000FBA")]
	public const string explainerShare = "Go to cubism-vr.com/discord \nto join and find other puzzles!";

	[Token(Token = "0x4000FBB")]
	public const string explainerShared = "Puzzles can only be shared once. \nJoin cubism-vr.com/discord to see yours!";

	[Token(Token = "0x60011A7")]
	[Address(RVA = "0xB4CA0C", Offset = "0xB4CA0C", VA = "0xB4CA0C")]
	private void Start()
	{
	}

	[Token(Token = "0x60011A8")]
	[Address(RVA = "0xB4CAB8", Offset = "0xB4CAB8", VA = "0xB4CAB8")]
	private void Update()
	{
	}

	[Token(Token = "0x60011A9")]
	[Address(RVA = "0xB4CC98", Offset = "0xB4CC98", VA = "0xB4CC98")]
	private bool SaveFileExists()
	{
		return default(bool);
	}

	[Token(Token = "0x60011AA")]
	[Address(RVA = "0xB4CCEC", Offset = "0xB4CCEC", VA = "0xB4CCEC")]
	private void OpenWarning()
	{
	}

	[Token(Token = "0x60011AB")]
	[Address(RVA = "0xB4CE30", Offset = "0xB4CE30", VA = "0xB4CE30")]
	private void ShareToDiscord()
	{
	}

	[Token(Token = "0x60011AC")]
	[Address(RVA = "0xB4CF30", Offset = "0xB4CF30", VA = "0xB4CF30")]
	private bool GetPuzzleBytes(out byte[] puzzleBytes)
	{
		return default(bool);
	}

	[Token(Token = "0x60011AD")]
	[Address(RVA = "0xB4D010", Offset = "0xB4D010", VA = "0xB4D010")]
	public DiscordShareView()
	{
	}
}
[Token(Token = "0x2000339")]
public class EditorBetaView : StateBehaviour
{
	[Token(Token = "0x4000FBC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject[] showIfEditorBeta;

	[Token(Token = "0x4000FBD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[FormerlySerializedAs("hideIfEditorBeta")]
	public GameObject[] showIfNotEditorBeta;

	[Token(Token = "0x60011AE")]
	[Address(RVA = "0xB4D018", Offset = "0xB4D018", VA = "0xB4D018", Slot = "5")]
	protected override void ForceSetup()
	{
	}

	[Token(Token = "0x60011AF")]
	[Address(RVA = "0xB4D0CC", Offset = "0xB4D0CC", VA = "0xB4D0CC")]
	protected void OnEnable()
	{
	}

	[Token(Token = "0x60011B0")]
	[Address(RVA = "0xB4D01C", Offset = "0xB4D01C", VA = "0xB4D01C")]
	private void UpdateView()
	{
	}

	[Token(Token = "0x60011B1")]
	[Address(RVA = "0xB4D0D0", Offset = "0xB4D0D0", VA = "0xB4D0D0")]
	public EditorBetaView()
	{
	}
}
[Token(Token = "0x200033A")]
public class EditorGeneralView : StateBehaviour
{
	[Token(Token = "0x4000FBE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public PuzzleSaver saver;

	[Token(Token = "0x4000FBF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Grid grid;

	[Token(Token = "0x4000FC0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public PieceCollection pieceCollection;

	[Token(Token = "0x4000FC1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[Header("Settings")]
	public VrToggleGroup _handedness;

	[Token(Token = "0x4000FC2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public VrToggle _left;

	[Token(Token = "0x4000FC3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public VrToggle _right;

	[Token(Token = "0x4000FC4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public VrToggle _overrideLimits;

	[Token(Token = "0x4000FC5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public VrToggle _autoSelectPieces;

	[Token(Token = "0x4000FC6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public VrToggle _restrictPieceToGrid;

	[Token(Token = "0x4000FC7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public VrToggle _shareWithDev;

	[Token(Token = "0x4000FC8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[Header("Grid")]
	public GameObject _clearGridButton;

	[Token(Token = "0x4000FC9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public GameObject _clearGridDisabled;

	[Token(Token = "0x4000FCA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Text _gridCells;

	[Token(Token = "0x4000FCB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[Header("Pieces")]
	public GameObject _createPieceButton;

	[Token(Token = "0x4000FCC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public MaterialSwapEffect _addPieceSwapEffect;

	[Token(Token = "0x4000FCD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public Material _veryLightMat;

	[Token(Token = "0x4000FCE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public Material _flashingMat;

	[Token(Token = "0x4000FCF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public GameObject _createPieceButtonDisabled;

	[Token(Token = "0x4000FD0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[Header("Save")]
	public Text _title;

	[Token(Token = "0x4000FD1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public Text _emptyTitle;

	[Token(Token = "0x4000FD2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public Text _pieces;

	[Token(Token = "0x4000FD3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public VrToggleGroup _difficulty;

	[Token(Token = "0x4000FD4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public Text _savedAt;

	[Token(Token = "0x4000FD5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public Text _savedButtonText;

	[Token(Token = "0x4000FD6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public Text _shareToDevText;

	[Token(Token = "0x4000FD7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	[Space(25f)]
	public VrToggleGroup _difficultyToggleGroup;

	[Token(Token = "0x4000FD8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public Text _difficultyLabel;

	[Token(Token = "0x4000FD9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	[Header("Checklist")]
	public Material _redText;

	[Token(Token = "0x4000FDA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	public Material _greenText;

	[Token(Token = "0x4000FDB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	public Material _blackText;

	[Token(Token = "0x4000FDC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	public Material _blackLight;

	[Token(Token = "0x4000FDD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	public Text _namedIcon;

	[Token(Token = "0x4000FDE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	public Text _namedText;

	[Token(Token = "0x4000FDF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	public Text _solvedIcon;

	[Token(Token = "0x4000FE0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	public Text _solvedText;

	[Token(Token = "0x4000FE1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	public GameObject _looseWrapper;

	[Token(Token = "0x4000FE2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	public Text _looseIcon;

	[Token(Token = "0x4000FE3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	public Text _looseText;

	[Token(Token = "0x4000FE4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	public GameObject _misPlacedWrapper;

	[Token(Token = "0x4000FE5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	public Text _misplacedIcon;

	[Token(Token = "0x4000FE6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	public Text _misplacedText;

	[Token(Token = "0x4000FE7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	public GameObject _saveButton;

	[Token(Token = "0x4000FE8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	public GameObject _saveButtonDisabled;

	[Token(Token = "0x4000FE9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	private bool _savedOnceThisSession;

	[Token(Token = "0x60011B2")]
	[Address(RVA = "0xB4D0D8", Offset = "0xB4D0D8", VA = "0xB4D0D8", Slot = "5")]
	protected override void ForceSetup()
	{
	}

	[Token(Token = "0x60011B3")]
	[Address(RVA = "0xB4D478", Offset = "0xB4D478", VA = "0xB4D478")]
	private void UpdateRestrictPieceToGridOption()
	{
	}

	[Token(Token = "0x60011B4")]
	[Address(RVA = "0xB4D4C4", Offset = "0xB4D4C4", VA = "0xB4D4C4")]
	private void UpdateHandeddnessOption()
	{
	}

	[Token(Token = "0x60011B5")]
	[Address(RVA = "0xB4D524", Offset = "0xB4D524", VA = "0xB4D524")]
	private void UpdateOverrideLimitsOption()
	{
	}

	[Token(Token = "0x60011B6")]
	[Address(RVA = "0xB4D570", Offset = "0xB4D570", VA = "0xB4D570")]
	private void UpdateAutoSelectOption()
	{
	}

	[Token(Token = "0x60011B7")]
	[Address(RVA = "0xB4D5BC", Offset = "0xB4D5BC", VA = "0xB4D5BC")]
	private void UpdateShareWithDev()
	{
	}

	[Token(Token = "0x60011B8")]
	[Address(RVA = "0xB4D608", Offset = "0xB4D608", VA = "0xB4D608")]
	private void SetSavedAtToUnsavedChanges(bool unsavedChanges)
	{
	}

	[Token(Token = "0x60011B9")]
	[Address(RVA = "0xB4D730", Offset = "0xB4D730", VA = "0xB4D730")]
	private void ResetSavedAtAndFreeze(Mode mode)
	{
	}

	[Token(Token = "0x60011BA")]
	[Address(RVA = "0xB4D868", Offset = "0xB4D868", VA = "0xB4D868")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60011BB")]
	[Address(RVA = "0xB4D95C", Offset = "0xB4D95C", VA = "0xB4D95C")]
	private void Update()
	{
	}

	[Token(Token = "0x60011BC")]
	[Address(RVA = "0xB4E0F8", Offset = "0xB4E0F8", VA = "0xB4E0F8")]
	private string GetDifficultyString()
	{
		return null;
	}

	[Token(Token = "0x60011BD")]
	[Address(RVA = "0xB4E318", Offset = "0xB4E318", VA = "0xB4E318")]
	private void UpdateCheckList()
	{
	}

	[Token(Token = "0x60011BE")]
	[Address(RVA = "0xB4E894", Offset = "0xB4E894", VA = "0xB4E894")]
	public EditorGeneralView()
	{
	}
}
[Token(Token = "0x200033B")]
public class EnableEditorView : StateBehaviour
{
	[Token(Token = "0x4000FEA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public VrToggle toggle;

	[Token(Token = "0x60011BF")]
	[Address(RVA = "0xB4E89C", Offset = "0xB4E89C", VA = "0xB4E89C", Slot = "5")]
	protected override void ForceSetup()
	{
	}

	[Token(Token = "0x60011C0")]
	[Address(RVA = "0xB4E95C", Offset = "0xB4E95C", VA = "0xB4E95C")]
	private void UpdateToggle()
	{
	}

	[Token(Token = "0x60011C1")]
	[Address(RVA = "0xB4E9AC", Offset = "0xB4E9AC", VA = "0xB4E9AC")]
	public EnableEditorView()
	{
	}
}
[Token(Token = "0x200033C")]
public class FileCustomPuzzleView : StateBehaviour
{
	[Token(Token = "0x200033D")]
	[CompilerGenerated]
	private sealed class <UpdatePuzzleButtons>d__21 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000FF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000FFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000FFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public FileCustomPuzzleView <>4__this;

		[Token(Token = "0x4000FFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int <i>5__2;

		[Token(Token = "0x4000FFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Level <level>5__3;

		[Token(Token = "0x170001A6")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60011D5")]
			[Address(RVA = "0xB4FC58", Offset = "0xB4FC58", VA = "0xB4FC58", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001A7")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60011D7")]
			[Address(RVA = "0xB4FCA0", Offset = "0xB4FCA0", VA = "0xB4FCA0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60011D2")]
		[Address(RVA = "0xB4EFE0", Offset = "0xB4EFE0", VA = "0xB4EFE0")]
		[DebuggerHidden]
		public <UpdatePuzzleButtons>d__21(int <>1__state)
		{
		}

		[Token(Token = "0x60011D3")]
		[Address(RVA = "0xB4FB14", Offset = "0xB4FB14", VA = "0xB4FB14", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60011D4")]
		[Address(RVA = "0xB4FB18", Offset = "0xB4FB18", VA = "0xB4FB18", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60011D6")]
		[Address(RVA = "0xB4FC60", Offset = "0xB4FC60", VA = "0xB4FC60", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000FEB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject _levelUiPrefab;

	[Token(Token = "0x4000FEC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject _emptyLevelSlot;

	[Token(Token = "0x4000FED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform _levelParent;

	[Token(Token = "0x4000FEE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject _paginationWrapper;

	[Token(Token = "0x4000FEF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public VrButton _pgDown;

	[Token(Token = "0x4000FF0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Text _pageTxt;

	[Token(Token = "0x4000FF1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public VrButton _pgUp;

	[Token(Token = "0x4000FF2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private int _page;

	[Token(Token = "0x4000FF3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private List<GameObject> _levelButtons;

	[Token(Token = "0x4000FF4")]
	private const int MinVersion = 1;

	[Token(Token = "0x4000FF5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Dictionary<string, string> _fileNames;

	[Token(Token = "0x4000FF6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private string[] _puzzleData;

	[Token(Token = "0x4000FF7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private StageSetParser _parser;

	[Token(Token = "0x4000FF8")]
	private const int LevelsPerPage = 12;

	[Token(Token = "0x60011C2")]
	[Address(RVA = "0xB4E9B4", Offset = "0xB4E9B4", VA = "0xB4E9B4", Slot = "5")]
	protected override void ForceSetup()
	{
	}

	[Token(Token = "0x60011C3")]
	[Address(RVA = "0xB4EAC8", Offset = "0xB4EAC8", VA = "0xB4EAC8")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60011C4")]
	[Address(RVA = "0xB4EB1C", Offset = "0xB4EB1C", VA = "0xB4EB1C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60011C5")]
	[Address(RVA = "0xB4EC80", Offset = "0xB4EC80", VA = "0xB4EC80")]
	public void PageUp()
	{
	}

	[Token(Token = "0x60011C6")]
	[Address(RVA = "0xB4ED10", Offset = "0xB4ED10", VA = "0xB4ED10")]
	public void PageDown()
	{
	}

	[Token(Token = "0x60011C7")]
	[Address(RVA = "0xB4EAE8", Offset = "0xB4EAE8", VA = "0xB4EAE8")]
	private void RenderPage()
	{
	}

	[Token(Token = "0x60011C8")]
	[Address(RVA = "0xB4EDF0", Offset = "0xB4EDF0", VA = "0xB4EDF0")]
	private void UpdatePagination()
	{
	}

	[Token(Token = "0x60011C9")]
	[Address(RVA = "0xB4EF78", Offset = "0xB4EF78", VA = "0xB4EF78")]
	[IteratorStateMachine(typeof(<UpdatePuzzleButtons>d__21))]
	private IEnumerator UpdatePuzzleButtons()
	{
		return null;
	}

	[Token(Token = "0x60011CA")]
	[Address(RVA = "0xB4EB20", Offset = "0xB4EB20", VA = "0xB4EB20")]
	private void ClearButtons()
	{
	}

	[Token(Token = "0x60011CB")]
	[Address(RVA = "0xB4F008", Offset = "0xB4F008", VA = "0xB4F008")]
	private bool TryParseLevel(string jsonTxt, out Level level)
	{
		return default(bool);
	}

	[Token(Token = "0x60011CC")]
	[Address(RVA = "0xB4F204", Offset = "0xB4F204", VA = "0xB4F204")]
	private void SpawnLevelButton(Level level)
	{
	}

	[Token(Token = "0x60011CD")]
	[Address(RVA = "0xB4F380", Offset = "0xB4F380", VA = "0xB4F380")]
	private void SpawnEmptySlot()
	{
	}

	[Token(Token = "0x60011CE")]
	[Address(RVA = "0xB4EAE4", Offset = "0xB4EAE4", VA = "0xB4EAE4")]
	private string[] GetPuzzleData()
	{
		return null;
	}

	[Token(Token = "0x60011CF")]
	[Address(RVA = "0xB4F674", Offset = "0xB4F674", VA = "0xB4F674")]
	private string[] GetFromResources()
	{
		return null;
	}

	[Token(Token = "0x60011D0")]
	[Address(RVA = "0xB4F480", Offset = "0xB4F480", VA = "0xB4F480")]
	private string[] GetFromFileSystem()
	{
		return null;
	}

	[Token(Token = "0x60011D1")]
	[Address(RVA = "0xB4FA54", Offset = "0xB4FA54", VA = "0xB4FA54")]
	public FileCustomPuzzleView()
	{
	}
}
[Token(Token = "0x200033F")]
public class FloorgridViewVrui : StateBehaviour
{
	[Token(Token = "0x4001002")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public VrToggle toggle;

	[Token(Token = "0x60011DD")]
	[Address(RVA = "0xB4FDC0", Offset = "0xB4FDC0", VA = "0xB4FDC0", Slot = "5")]
	protected override void ForceSetup()
	{
	}

	[Token(Token = "0x60011DE")]
	[Address(RVA = "0xB4FE80", Offset = "0xB4FE80", VA = "0xB4FE80")]
	private void UpdateToggle()
	{
	}

	[Token(Token = "0x60011DF")]
	[Address(RVA = "0xB4FED0", Offset = "0xB4FED0", VA = "0xB4FED0")]
	public FloorgridViewVrui()
	{
	}
}
[Token(Token = "0x2000340")]
public class GridCenterAnchorPositioner : StateBehaviour
{
	[Token(Token = "0x4001003")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Grid grid;

	[Token(Token = "0x60011E0")]
	[Address(RVA = "0xB4FED8", Offset = "0xB4FED8", VA = "0xB4FED8")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x60011E1")]
	[Address(RVA = "0xB50028", Offset = "0xB50028", VA = "0xB50028")]
	public GridCenterAnchorPositioner()
	{
	}
}
[Token(Token = "0x2000341")]
public class GridCompletionView : StateBehaviour
{
	[Token(Token = "0x2000342")]
	[CompilerGenerated]
	private sealed class <WaitOneFrameThenCheckCompletion>d__7 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001009")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400100A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400100B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GridCompletionView <>4__this;

		[Token(Token = "0x170001A8")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60011EE")]
			[Address(RVA = "0xB506C4", Offset = "0xB506C4", VA = "0xB506C4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001A9")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60011F0")]
			[Address(RVA = "0xB5070C", Offset = "0xB5070C", VA = "0xB5070C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60011EB")]
		[Address(RVA = "0xB50434", Offset = "0xB50434", VA = "0xB50434")]
		[DebuggerHidden]
		public <WaitOneFrameThenCheckCompletion>d__7(int <>1__state)
		{
		}

		[Token(Token = "0x60011EC")]
		[Address(RVA = "0xB5062C", Offset = "0xB5062C", VA = "0xB5062C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60011ED")]
		[Address(RVA = "0xB50630", Offset = "0xB50630", VA = "0xB50630", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60011EF")]
		[Address(RVA = "0xB506CC", Offset = "0xB506CC", VA = "0xB506CC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4001004")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool active;

	[Token(Token = "0x4001005")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Grid _grid;

	[Token(Token = "0x4001006")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GridDrawer _gridDrawer;

	[Token(Token = "0x4001007")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Material _gridMaterial;

	[Token(Token = "0x4001008")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public PieceCollection _pieces;

	[Token(Token = "0x60011E2")]
	[Address(RVA = "0xB50030", Offset = "0xB50030", VA = "0xB50030", Slot = "5")]
	protected override void ForceSetup()
	{
	}

	[Token(Token = "0x60011E3")]
	[Address(RVA = "0xB50370", Offset = "0xB50370", VA = "0xB50370")]
	private void UpdateIfEditing(GridCell cell)
	{
	}

	[Token(Token = "0x60011E4")]
	[Address(RVA = "0xB503CC", Offset = "0xB503CC", VA = "0xB503CC")]
	[IteratorStateMachine(typeof(<WaitOneFrameThenCheckCompletion>d__7))]
	private IEnumerator WaitOneFrameThenCheckCompletion()
	{
		return null;
	}

	[Token(Token = "0x60011E5")]
	[Address(RVA = "0xB5045C", Offset = "0xB5045C", VA = "0xB5045C")]
	private void UpdateGridIfSolved()
	{
	}

	[Token(Token = "0x60011E6")]
	[Address(RVA = "0xB50600", Offset = "0xB50600", VA = "0xB50600")]
	public void SetActive(bool state)
	{
	}

	[Token(Token = "0x60011E7")]
	[Address(RVA = "0xB5060C", Offset = "0xB5060C", VA = "0xB5060C")]
	private void PuzzleSongPlayingChanged(Mode mode)
	{
	}

	[Token(Token = "0x60011E8")]
	[Address(RVA = "0xB50490", Offset = "0xB50490", VA = "0xB50490")]
	public void TurnGridSolved()
	{
	}

	[Token(Token = "0x60011E9")]
	[Address(RVA = "0xB502C4", Offset = "0xB502C4", VA = "0xB502C4")]
	public void TurnGridUnsolved()
	{
	}

	[Token(Token = "0x60011EA")]
	[Address(RVA = "0xB5061C", Offset = "0xB5061C", VA = "0xB5061C")]
	public GridCompletionView()
	{
	}
}
[Token(Token = "0x2000343")]
public class GridInteractionView : MonoBehaviour
{
	[Token(Token = "0x400100C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform _gridLines;

	[Token(Token = "0x400100D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform _gridDots;

	[Token(Token = "0x400100E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public PuzzleDetectionGridCells _puzzleDetection;

	[Token(Token = "0x400100F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool _hovering;

	[Token(Token = "0x4001010")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float _hoverOffWidth;

	[Token(Token = "0x4001011")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float _hoverOnWidth;

	[Token(Token = "0x60011F1")]
	[Address(RVA = "0xB50714", Offset = "0xB50714", VA = "0xB50714")]
	private void Update()
	{
	}

	[Token(Token = "0x60011F2")]
	[Address(RVA = "0xB50790", Offset = "0xB50790", VA = "0xB50790")]
	private bool InteractableHover(Cubism.Hand hand)
	{
		return default(bool);
	}

	[Token(Token = "0x60011F3")]
	[Address(RVA = "0xB507AC", Offset = "0xB507AC", VA = "0xB507AC")]
	private void SetLinesWidth(float width)
	{
	}

	[Token(Token = "0x60011F4")]
	[Address(RVA = "0xB50D10", Offset = "0xB50D10", VA = "0xB50D10")]
	public GridInteractionView()
	{
	}
}
[Token(Token = "0x2000344")]
public class HandControllerVisibility : StateBehaviour
{
	[Token(Token = "0x4001012")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool visibleWithHands;

	[Token(Token = "0x4001013")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	public bool visibleWithControllers;

	[Token(Token = "0x4001014")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public Cubism.Hand hand;

	[Token(Token = "0x4001015")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Controller _controller;

	[Token(Token = "0x4001016")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool _disableWhenPossible;

	[Token(Token = "0x60011F5")]
	[Address(RVA = "0xB50D24", Offset = "0xB50D24", VA = "0xB50D24", Slot = "5")]
	protected override void ForceSetup()
	{
	}

	[Token(Token = "0x60011F6")]
	[Address(RVA = "0xB50E40", Offset = "0xB50E40", VA = "0xB50E40")]
	private void UpdateVisibility()
	{
	}

	[Token(Token = "0x60011F7")]
	[Address(RVA = "0xB50F7C", Offset = "0xB50F7C", VA = "0xB50F7C")]
	private void Update()
	{
	}

	[Token(Token = "0x60011F8")]
	[Address(RVA = "0xB50FD0", Offset = "0xB50FD0", VA = "0xB50FD0")]
	public HandControllerVisibility()
	{
	}
}
[Token(Token = "0x2000345")]
public class HandMoveArrowPositioner : StateBehaviour
{
	[Token(Token = "0x60011FA")]
	[Address(RVA = "0xB50FDC", Offset = "0xB50FDC", VA = "0xB50FDC", Slot = "5")]
	protected override void ForceSetup()
	{
	}

	[Token(Token = "0x60011FB")]
	[Address(RVA = "0xB51010", Offset = "0xB51010", VA = "0xB51010")]
	private void SetVisibility(bool visible)
	{
	}

	[Token(Token = "0x60011FC")]
	[Address(RVA = "0xB51038", Offset = "0xB51038", VA = "0xB51038")]
	private void Update()
	{
	}

	[Token(Token = "0x60011FD")]
	[Address(RVA = "0xB51208", Offset = "0xB51208", VA = "0xB51208")]
	public HandMoveArrowPositioner()
	{
	}
}
[Token(Token = "0x2000346")]
public class HideWhenGrabbed : MonoBehaviour
{
	[Token(Token = "0x4001017")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int grabsUntilHide;

	[Token(Token = "0x4001018")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GrabAction _grabaction;

	[Token(Token = "0x4001019")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject _hideTarget;

	[Token(Token = "0x400101A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private int _grabs;

	[Token(Token = "0x60011FE")]
	[Address(RVA = "0xB51210", Offset = "0xB51210", VA = "0xB51210")]
	private void Start()
	{
	}

	[Token(Token = "0x60011FF")]
	[Address(RVA = "0xB5129C", Offset = "0xB5129C", VA = "0xB5129C")]
	private void IncreaseGrabs()
	{
	}

	[Token(Token = "0x6001200")]
	[Address(RVA = "0xB512DC", Offset = "0xB512DC", VA = "0xB512DC")]
	public HideWhenGrabbed()
	{
	}
}
[Token(Token = "0x2000347")]
public class LevelTrayView : MonoBehaviour
{
	[Token(Token = "0x400101B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Text stageName;

	[Token(Token = "0x400101C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Text stageSetName;

	[Token(Token = "0x6001202")]
	[Address(RVA = "0xB512E8", Offset = "0xB512E8", VA = "0xB512E8")]
	public LevelTrayView()
	{
	}
}
[Token(Token = "0x2000348")]
public class LevelViewVrui : MonoBehaviour
{
	[Token(Token = "0x400101D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public VrToggleGroup _stageToggleGroup;

	[Token(Token = "0x400101E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform _levelTrayParent;

	[Token(Token = "0x400101F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform _stageTabParent;

	[Token(Token = "0x4001020")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject _tabPrefab;

	[Token(Token = "0x4001021")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject _levelTrayPrefab;

	[Token(Token = "0x4001022")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject _levelPrefab;

	[Token(Token = "0x4001023")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private StageTab _lastUnlocked;

	[Token(Token = "0x4001024")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private StageTab _firstStage;

	[Token(Token = "0x4001025")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private StageSet _set;

	[Token(Token = "0x4001026")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Difficulty _difficultyLastLevel;

	[Token(Token = "0x4001027")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private State _state;

	[Token(Token = "0x4001028")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Dictionary<string, StageTab> _stageTabs;

	[Token(Token = "0x4001029")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Dictionary<string, LevelUi> _levelButtons;

	[Token(Token = "0x400102A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private bool _populated;

	[Token(Token = "0x6001203")]
	[Address(RVA = "0xB512F0", Offset = "0xB512F0", VA = "0xB512F0")]
	public void Setup(State state)
	{
	}

	[Token(Token = "0x6001204")]
	[Address(RVA = "0xB512F8", Offset = "0xB512F8", VA = "0xB512F8")]
	public void PopulateMenu(StageSet set)
	{
	}

	[Token(Token = "0x6001205")]
	[Address(RVA = "0xB515F8", Offset = "0xB515F8", VA = "0xB515F8")]
	private void ClearMenu()
	{
	}

	[Token(Token = "0x6001206")]
	[Address(RVA = "0xB5244C", Offset = "0xB5244C", VA = "0xB5244C")]
	public bool TryGetLevelUi(string levelId, out LevelUi levelUi)
	{
		return default(bool);
	}

	[Token(Token = "0x6001207")]
	[Address(RVA = "0xB52044", Offset = "0xB52044", VA = "0xB52044")]
	public void SelectLastUnlocked()
	{
	}

	[Token(Token = "0x6001208")]
	[Address(RVA = "0xB51918", Offset = "0xB51918", VA = "0xB51918")]
	private void CreateStageUi(StageSet set, Stage stage)
	{
	}

	[Token(Token = "0x6001209")]
	[Address(RVA = "0xB524BC", Offset = "0xB524BC", VA = "0xB524BC")]
	private void CreateLevelUi(Transform parent, Level level, Stage stage)
	{
	}

	[Token(Token = "0x600120A")]
	[Address(RVA = "0xB52644", Offset = "0xB52644", VA = "0xB52644")]
	private bool IsNewDifficulty(Level level)
	{
		return default(bool);
	}

	[Token(Token = "0x600120B")]
	[Address(RVA = "0xB52678", Offset = "0xB52678", VA = "0xB52678")]
	public LevelViewVrui()
	{
	}
}
[Token(Token = "0x200034A")]
public class MainMenuView : StateBehaviour
{
	[Token(Token = "0x400102F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject _mainMenuWithEditor;

	[Token(Token = "0x4001030")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject _mainMenuOld;

	[Token(Token = "0x600120E")]
	[Address(RVA = "0xB5288C", Offset = "0xB5288C", VA = "0xB5288C", Slot = "5")]
	protected override void ForceSetup()
	{
	}

	[Token(Token = "0x600120F")]
	[Address(RVA = "0xB5294C", Offset = "0xB5294C", VA = "0xB5294C")]
	private void SetVisibility()
	{
	}

	[Token(Token = "0x6001210")]
	[Address(RVA = "0xB529D0", Offset = "0xB529D0", VA = "0xB529D0")]
	private bool VersionHighEnough()
	{
		return default(bool);
	}

	[Token(Token = "0x6001211")]
	[Address(RVA = "0xB52A84", Offset = "0xB52A84", VA = "0xB52A84")]
	public MainMenuView()
	{
	}
}
[Token(Token = "0x200034B")]
public class NightModeViewVrui : StateBehaviour
{
	[Token(Token = "0x4001031")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public VrToggle toggle;

	[Token(Token = "0x6001212")]
	[Address(RVA = "0xB52A8C", Offset = "0xB52A8C", VA = "0xB52A8C", Slot = "5")]
	protected override void ForceSetup()
	{
	}

	[Token(Token = "0x6001213")]
	[Address(RVA = "0xB52B4C", Offset = "0xB52B4C", VA = "0xB52B4C")]
	private void UpdateToggle()
	{
	}

	[Token(Token = "0x6001214")]
	[Address(RVA = "0xB52B9C", Offset = "0xB52B9C", VA = "0xB52B9C")]
	public NightModeViewVrui()
	{
	}
}
[Token(Token = "0x200034C")]
public class OptionsView : MonoBehaviour
{
	[Token(Token = "0x4001032")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public VrToggle _showGrid;

	[Token(Token = "0x4001033")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public VrToggle _restrictRotation;

	[Token(Token = "0x4001034")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public VrToggle _nightMode;

	[Token(Token = "0x4001035")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public VrToggle _advancedControls;

	[Token(Token = "0x4001036")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public VrToggle _controllerSmoothing;

	[Token(Token = "0x4001037")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private SettingsModel _settings;

	[Token(Token = "0x6001215")]
	[Address(RVA = "0xB52BA4", Offset = "0xB52BA4", VA = "0xB52BA4")]
	public void Setup(SettingsModel settings)
	{
	}

	[Token(Token = "0x6001216")]
	[Address(RVA = "0xB52BC0", Offset = "0xB52BC0", VA = "0xB52BC0")]
	private void SubscribeToModelEvents()
	{
	}

	[Token(Token = "0x6001217")]
	[Address(RVA = "0xB52DC0", Offset = "0xB52DC0", VA = "0xB52DC0")]
	private void Refresh()
	{
	}

	[Token(Token = "0x6001218")]
	[Address(RVA = "0xB52DF0", Offset = "0xB52DF0", VA = "0xB52DF0")]
	private void UpdateShowGridToggle()
	{
	}

	[Token(Token = "0x6001219")]
	[Address(RVA = "0xB52E34", Offset = "0xB52E34", VA = "0xB52E34")]
	private void UpdateRotationToggle()
	{
	}

	[Token(Token = "0x600121A")]
	[Address(RVA = "0xB52E7C", Offset = "0xB52E7C", VA = "0xB52E7C")]
	private void UpdateNightModeToggle()
	{
	}

	[Token(Token = "0x600121B")]
	[Address(RVA = "0xB52EC4", Offset = "0xB52EC4", VA = "0xB52EC4")]
	private void UpdateAdvancedControls()
	{
	}

	[Token(Token = "0x600121C")]
	[Address(RVA = "0xB52F0C", Offset = "0xB52F0C", VA = "0xB52F0C")]
	private void UpdateControllerSmoothing()
	{
	}

	[Token(Token = "0x600121D")]
	[Address(RVA = "0xB52F54", Offset = "0xB52F54", VA = "0xB52F54")]
	public OptionsView()
	{
	}
}
[Token(Token = "0x200034D")]
public class PassthroughControllerReprojectionView : StateBehaviour
{
	[Token(Token = "0x4001038")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject _quest1L;

	[Token(Token = "0x4001039")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject _quest1R;

	[Token(Token = "0x400103A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[Space(15f)]
	public GameObject _quest2L;

	[Token(Token = "0x400103B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject _quest2R;

	[Token(Token = "0x400103C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[Space(15f)]
	public GameObject _cambriaL;

	[Token(Token = "0x400103D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject _cambriaR;

	[Token(Token = "0x400103E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool _controllersVisible;

	[Token(Token = "0x600121E")]
	[Address(RVA = "0xB52F5C", Offset = "0xB52F5C", VA = "0xB52F5C")]
	private void Start()
	{
	}

	[Token(Token = "0x600121F")]
	[Address(RVA = "0xB53224", Offset = "0xB53224", VA = "0xB53224")]
	private void Update()
	{
	}

	[Token(Token = "0x6001220")]
	[Address(RVA = "0xB53148", Offset = "0xB53148", VA = "0xB53148")]
	private void UpdateVisibility()
	{
	}

	[Token(Token = "0x6001221")]
	[Address(RVA = "0xB53430", Offset = "0xB53430", VA = "0xB53430")]
	public PassthroughControllerReprojectionView()
	{
	}
}
[Token(Token = "0x200034E")]
public class PassthroughOptionsView : StateBehaviour
{
	[Token(Token = "0x400103F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject passthroughoptions;

	[Token(Token = "0x6001223")]
	[Address(RVA = "0xB5343C", Offset = "0xB5343C", VA = "0xB5343C", Slot = "5")]
	protected override void ForceSetup()
	{
	}

	[Token(Token = "0x6001224")]
	[Address(RVA = "0xB53580", Offset = "0xB53580", VA = "0xB53580")]
	private void SetVisibility()
	{
	}

	[Token(Token = "0x6001225")]
	[Address(RVA = "0xB53634", Offset = "0xB53634", VA = "0xB53634")]
	public PassthroughOptionsView()
	{
	}
}
[Token(Token = "0x200034F")]
public class PassthroughViewVrui : StateBehaviour
{
	[Token(Token = "0x4001040")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public VrToggle toggle;

	[Token(Token = "0x6001227")]
	[Address(RVA = "0xB53640", Offset = "0xB53640", VA = "0xB53640", Slot = "5")]
	protected override void ForceSetup()
	{
	}

	[Token(Token = "0x6001228")]
	[Address(RVA = "0xB53700", Offset = "0xB53700", VA = "0xB53700")]
	private void SetValue()
	{
	}

	[Token(Token = "0x6001229")]
	[Address(RVA = "0xB53750", Offset = "0xB53750", VA = "0xB53750")]
	public PassthroughViewVrui()
	{
	}
}
[Token(Token = "0x2000350")]
public class PassthroughVirtualHandsView : StateBehaviour
{
	[Token(Token = "0x4001041")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject[] _passthroughHands;

	[Token(Token = "0x4001042")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Renderer[] _overlayHands;

	[Token(Token = "0x4001043")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Material _overlayMat;

	[Token(Token = "0x4001044")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Material _passthroughMat;

	[Token(Token = "0x4001045")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Material _regularMat;

	[Token(Token = "0x600122A")]
	[Address(RVA = "0xB53758", Offset = "0xB53758", VA = "0xB53758", Slot = "5")]
	protected override void ForceSetup()
	{
	}

	[Token(Token = "0x600122B")]
	[Address(RVA = "0xB538F4", Offset = "0xB538F4", VA = "0xB538F4")]
	private void SetVirtualhandsVisibility()
	{
	}

	[Token(Token = "0x600122C")]
	[Address(RVA = "0xB53B44", Offset = "0xB53B44", VA = "0xB53B44")]
	public PassthroughVirtualHandsView()
	{
	}
}
[Token(Token = "0x2000351")]
public class PassthroughVisibilityView : StateBehaviour
{
	[Token(Token = "0x4001046")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject[] visibleInPassthrough;

	[Token(Token = "0x4001047")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject[] hiddeninPassthrough;

	[Token(Token = "0x600122E")]
	[Address(RVA = "0xB53B50", Offset = "0xB53B50", VA = "0xB53B50")]
	private void Update()
	{
	}

	[Token(Token = "0x600122F")]
	[Address(RVA = "0xB53C6C", Offset = "0xB53C6C", VA = "0xB53C6C")]
	public PassthroughVisibilityView()
	{
	}
}
[Token(Token = "0x2000352")]
public class PausedView : StateBehaviour
{
	[Token(Token = "0x2000353")]
	[CompilerGenerated]
	private sealed class <FadeTo>d__8 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400104C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400104D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400104E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PausedView <>4__this;

		[Token(Token = "0x400104F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Color color;

		[Token(Token = "0x4001050")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public bool disableOnFinish;

		[Token(Token = "0x4001051")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float <start>5__2;

		[Token(Token = "0x4001052")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Color <startColor>5__3;

		[Token(Token = "0x170001AA")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600123A")]
			[Address(RVA = "0xB54080", Offset = "0xB54080", VA = "0xB54080", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001AB")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600123C")]
			[Address(RVA = "0xB540C8", Offset = "0xB540C8", VA = "0xB540C8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001237")]
		[Address(RVA = "0xB53F18", Offset = "0xB53F18", VA = "0xB53F18")]
		[DebuggerHidden]
		public <FadeTo>d__8(int <>1__state)
		{
		}

		[Token(Token = "0x6001238")]
		[Address(RVA = "0xB53F54", Offset = "0xB53F54", VA = "0xB53F54", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001239")]
		[Address(RVA = "0xB53F58", Offset = "0xB53F58", VA = "0xB53F58", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600123B")]
		[Address(RVA = "0xB54088", Offset = "0xB54088", VA = "0xB54088", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4001048")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Material pauseFadeColor;

	[Token(Token = "0x4001049")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float fadeTime;

	[Token(Token = "0x400104A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private Color fadeOutColor;

	[Token(Token = "0x400104B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private Color fadeInColor;

	[Token(Token = "0x6001230")]
	[Address(RVA = "0xB53C74", Offset = "0xB53C74", VA = "0xB53C74", Slot = "5")]
	protected override void ForceSetup()
	{
	}

	[Token(Token = "0x6001231")]
	[Address(RVA = "0xB53D54", Offset = "0xB53D54", VA = "0xB53D54")]
	private void SetFocus(bool unpaused)
	{
	}

	[Token(Token = "0x6001232")]
	[Address(RVA = "0xB53DA0", Offset = "0xB53DA0", VA = "0xB53DA0")]
	private void TurnOnAndFadeIn()
	{
	}

	[Token(Token = "0x6001233")]
	[Address(RVA = "0xB53D60", Offset = "0xB53D60", VA = "0xB53D60")]
	private void FadeOutAndTurnOff()
	{
	}

	[Token(Token = "0x6001234")]
	[Address(RVA = "0xB53E74", Offset = "0xB53E74", VA = "0xB53E74")]
	[IteratorStateMachine(typeof(<FadeTo>d__8))]
	private IEnumerator FadeTo(Color color, bool disableOnFinish = false)
	{
		return null;
	}

	[Token(Token = "0x6001235")]
	[Address(RVA = "0xB53E18", Offset = "0xB53E18", VA = "0xB53E18")]
	private void SetFadeColors()
	{
	}

	[Token(Token = "0x6001236")]
	[Address(RVA = "0xB53F40", Offset = "0xB53F40", VA = "0xB53F40")]
	public PausedView()
	{
	}
}
[Token(Token = "0x2000354")]
public class PieceCreationOrientation : StateBehaviour
{
	[Token(Token = "0x4001053")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public PieceCollection _pieces;

	[Token(Token = "0x600123D")]
	[Address(RVA = "0xB540D0", Offset = "0xB540D0", VA = "0xB540D0")]
	private void Update()
	{
	}

	[Token(Token = "0x600123E")]
	[Address(RVA = "0xB54278", Offset = "0xB54278", VA = "0xB54278")]
	public PieceCreationOrientation()
	{
	}
}
[Token(Token = "0x2000355")]
public class PieceHoverColorView : MonoBehaviour
{
	[Token(Token = "0x4001054")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public CursorInteractions _interactions;

	[Token(Token = "0x4001055")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public PieceView _pieceView;

	[Token(Token = "0x4001056")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Color _preHoverColor;

	[Token(Token = "0x4001057")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool _hovered;

	[Token(Token = "0x4001058")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private Color _meshNoHoverEmission;

	[Token(Token = "0x4001059")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private Color _meshHoverEmission;

	[Token(Token = "0x400105A")]
	private const float HoverBrightness = 0.1f;

	[Token(Token = "0x600123F")]
	[Address(RVA = "0xB54280", Offset = "0xB54280", VA = "0xB54280")]
	private void Start()
	{
	}

	[Token(Token = "0x6001240")]
	[Address(RVA = "0xB543DC", Offset = "0xB543DC", VA = "0xB543DC")]
	private void SetHoverColor(InteractionData data)
	{
	}

	[Token(Token = "0x6001241")]
	[Address(RVA = "0xB544A4", Offset = "0xB544A4", VA = "0xB544A4")]
	private void SetNormalColor()
	{
	}

	[Token(Token = "0x6001242")]
	[Address(RVA = "0xB54514", Offset = "0xB54514", VA = "0xB54514")]
	private void HandleOnGridChanged(bool onGrid)
	{
	}

	[Token(Token = "0x6001243")]
	[Address(RVA = "0xB54528", Offset = "0xB54528", VA = "0xB54528")]
	public PieceHoverColorView()
	{
	}
}
[Token(Token = "0x2000356")]
public class PieceHoverEdgeView : MonoBehaviour
{
	[Token(Token = "0x2000357")]
	[CompilerGenerated]
	private sealed class <DoGrabAnim>d__12 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001064")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001065")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001066")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PieceHoverEdgeView <>4__this;

		[Token(Token = "0x4001067")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <startTime>5__2;

		[Token(Token = "0x170001AC")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001252")]
			[Address(RVA = "0xB54998", Offset = "0xB54998", VA = "0xB54998", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001AD")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001254")]
			[Address(RVA = "0xB549E0", Offset = "0xB549E0", VA = "0xB549E0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600124F")]
		[Address(RVA = "0xB547F0", Offset = "0xB547F0", VA = "0xB547F0")]
		[DebuggerHidden]
		public <DoGrabAnim>d__12(int <>1__state)
		{
		}

		[Token(Token = "0x6001250")]
		[Address(RVA = "0xB548B4", Offset = "0xB548B4", VA = "0xB548B4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001251")]
		[Address(RVA = "0xB548B8", Offset = "0xB548B8", VA = "0xB548B8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001253")]
		[Address(RVA = "0xB549A0", Offset = "0xB549A0", VA = "0xB549A0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400105B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject _edgeWrapper;

	[Token(Token = "0x400105C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public CursorInteractions _interactions;

	[Token(Token = "0x400105D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GrabAction _grabAction;

	[Token(Token = "0x400105E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AnimationCurve _grabAnimation;

	[Token(Token = "0x400105F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float _grabAnimationDuration;

	[Token(Token = "0x4001060")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private PieceView _pieceView;

	[Token(Token = "0x4001061")]
	private const float EdgeThickness = 0.001f;

	[Token(Token = "0x4001062")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[Header("Debug")]
	[SerializeField]
	private bool _hovered;

	[Token(Token = "0x4001063")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
	[SerializeField]
	private bool _grabbed;

	[Token(Token = "0x6001245")]
	[Address(RVA = "0xB54534", Offset = "0xB54534", VA = "0xB54534")]
	private void Start()
	{
	}

	[Token(Token = "0x6001246")]
	[Address(RVA = "0xB546E8", Offset = "0xB546E8", VA = "0xB546E8")]
	private void SetHovering(InteractionData data, bool value)
	{
	}

	[Token(Token = "0x6001247")]
	[Address(RVA = "0xB546F4", Offset = "0xB546F4", VA = "0xB546F4")]
	private void SetGrabbing(InteractionData data, bool value)
	{
	}

	[Token(Token = "0x6001248")]
	[Address(RVA = "0xB54788", Offset = "0xB54788", VA = "0xB54788")]
	[IteratorStateMachine(typeof(<DoGrabAnim>d__12))]
	private IEnumerator DoGrabAnim()
	{
		return null;
	}

	[Token(Token = "0x6001249")]
	[Address(RVA = "0xB54818", Offset = "0xB54818", VA = "0xB54818")]
	private void Update()
	{
	}

	[Token(Token = "0x600124A")]
	[Address(RVA = "0xB54854", Offset = "0xB54854", VA = "0xB54854")]
	public PieceHoverEdgeView()
	{
	}
}
[Token(Token = "0x2000358")]
public class PieceVruiPresenter : StateBehaviour
{
	[Token(Token = "0x4001068")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform _parent;

	[Token(Token = "0x4001069")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public PieceCollection _pieceCollection;

	[Token(Token = "0x400106A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject _pieceRowPrefab;

	[Token(Token = "0x400106B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[Header("Pagination")]
	public GameObject _paginationUiWrapper;

	[Token(Token = "0x400106C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Text _pageText;

	[Token(Token = "0x400106D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public VrButton _prev;

	[Token(Token = "0x400106E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public VrButton _next;

	[Token(Token = "0x400106F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private int _pages;

	[Token(Token = "0x4001070")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private int _rowsPerPage;

	[Token(Token = "0x4001071")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private int _currentPageIndex;

	[Token(Token = "0x4001072")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private SortedDictionary<string, PieceVruiView> _pieceVruiViews;

	[Token(Token = "0x4001073")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private List<PieceVruiView> _pieceVruiViewList;

	[Token(Token = "0x4001074")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private List<Transform> _pieceRows;

	[Token(Token = "0x4001075")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private bool _isDirty;

	[Token(Token = "0x6001255")]
	[Address(RVA = "0xB549E8", Offset = "0xB549E8", VA = "0xB549E8", Slot = "5")]
	protected override void ForceSetup()
	{
	}

	[Token(Token = "0x6001256")]
	[Address(RVA = "0xB54CF8", Offset = "0xB54CF8", VA = "0xB54CF8")]
	private void Update()
	{
	}

	[Token(Token = "0x6001257")]
	[Address(RVA = "0xB5529C", Offset = "0xB5529C", VA = "0xB5529C")]
	private void PageUp()
	{
	}

	[Token(Token = "0x6001258")]
	[Address(RVA = "0xB552BC", Offset = "0xB552BC", VA = "0xB552BC")]
	private void PageDown()
	{
	}

	[Token(Token = "0x6001259")]
	[Address(RVA = "0xB550CC", Offset = "0xB550CC", VA = "0xB550CC")]
	private void UpdatePaginationView()
	{
	}

	[Token(Token = "0x600125A")]
	[Address(RVA = "0xB552E0", Offset = "0xB552E0", VA = "0xB552E0")]
	private void UpdatePaginationUi()
	{
	}

	[Token(Token = "0x600125B")]
	[Address(RVA = "0xB54BD8", Offset = "0xB54BD8", VA = "0xB54BD8")]
	private void SpawnPieceRow()
	{
	}

	[Token(Token = "0x600125C")]
	[Address(RVA = "0xB553B0", Offset = "0xB553B0", VA = "0xB553B0")]
	private void SelectVruiElement(string id)
	{
	}

	[Token(Token = "0x600125D")]
	[Address(RVA = "0xB5553C", Offset = "0xB5553C", VA = "0xB5553C")]
	private void AddPieceVrui(string id)
	{
	}

	[Token(Token = "0x600125E")]
	[Address(RVA = "0xB55A2C", Offset = "0xB55A2C", VA = "0xB55A2C")]
	private void DeletePiece(string id)
	{
	}

	[Token(Token = "0x600125F")]
	[Address(RVA = "0xB55E2C", Offset = "0xB55E2C", VA = "0xB55E2C")]
	private void RemovePieceVrui(string id)
	{
	}

	[Token(Token = "0x6001260")]
	[Address(RVA = "0xB562F4", Offset = "0xB562F4", VA = "0xB562F4")]
	public PieceVruiPresenter()
	{
	}
}
[Token(Token = "0x2000359")]
public class PieceVruiView : StateBehaviour
{
	[Token(Token = "0x4001078")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Image colorSwab;

	[Token(Token = "0x4001079")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Image colorSwabHighlight;

	[Token(Token = "0x400107A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Image select;

	[Token(Token = "0x400107B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Text pieceTitle;

	[Token(Token = "0x400107C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Text segments;

	[Token(Token = "0x400107D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Image cubeImage;

	[Token(Token = "0x400107E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Transform colorPickerMenuAnchor;

	[Token(Token = "0x400107F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public RectTransform rectTransform;

	[Token(Token = "0x4001080")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Transform lineTarget;

	[Token(Token = "0x4001081")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Renderer lineMeshRenderer;

	[Token(Token = "0x4001082")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Transform dottedLine;

	[Token(Token = "0x4001083")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public Renderer dottedLineRenderer;

	[Token(Token = "0x4001084")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public CanvasGroup canvasGroup;

	[Token(Token = "0x4001085")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public TargetEnabledEffect fadeInfoTab;

	[Token(Token = "0x4001086")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public FadeOnEnable fadeOnEnable;

	[Token(Token = "0x4001087")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public VrToggle editColor;

	[Token(Token = "0x4001088")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public VrButton delete;

	[Token(Token = "0x4001089")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public VrButton editSegments;

	[Token(Token = "0x400108A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public VrButton hover;

	[Token(Token = "0x400108B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public Text _selectText;

	[Token(Token = "0x400108C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public GameObject _crossEdit;

	[Token(Token = "0x400108D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private PieceView _piece;

	[Token(Token = "0x400108E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private Color _targetColor;

	[Token(Token = "0x400108F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private AnimationCurve _lineWidthCurve;

	[Token(Token = "0x14000089")]
	public event Action<string> OnDelete
	{
		[Token(Token = "0x6001261")]
		[Address(RVA = "0xB5597C", Offset = "0xB5597C", VA = "0xB5597C")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6001262")]
		[Address(RVA = "0xB56244", Offset = "0xB56244", VA = "0xB56244")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x1400008A")]
	public event Action OnRecolor
	{
		[Token(Token = "0x6001263")]
		[Address(RVA = "0xB56404", Offset = "0xB56404", VA = "0xB56404")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6001264")]
		[Address(RVA = "0xB564A0", Offset = "0xB564A0", VA = "0xB564A0")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x6001265")]
	[Address(RVA = "0xB55700", Offset = "0xB55700", VA = "0xB55700")]
	public void Setup(PieceView piece)
	{
	}

	[Token(Token = "0x6001266")]
	[Address(RVA = "0xB56634", Offset = "0xB56634", VA = "0xB56634")]
	private void UntoggleColorIfDeselect(string id)
	{
	}

	[Token(Token = "0x6001267")]
	[Address(RVA = "0xB56688", Offset = "0xB56688", VA = "0xB56688")]
	public void Update()
	{
	}

	[Token(Token = "0x6001268")]
	[Address(RVA = "0xB55F90", Offset = "0xB55F90", VA = "0xB55F90")]
	public void Cleanup()
	{
	}

	[Token(Token = "0x6001269")]
	[Address(RVA = "0xB57238", Offset = "0xB57238", VA = "0xB57238")]
	private void FireOnRecoler(bool on)
	{
	}

	[Token(Token = "0x600126A")]
	[Address(RVA = "0xB57200", Offset = "0xB57200", VA = "0xB57200")]
	private void FireOnDelete()
	{
	}

	[Token(Token = "0x600126B")]
	[Address(RVA = "0xB57258", Offset = "0xB57258", VA = "0xB57258")]
	private void SelectPiece()
	{
	}

	[Token(Token = "0x600126C")]
	[Address(RVA = "0xB5653C", Offset = "0xB5653C", VA = "0xB5653C")]
	private void UpdateView()
	{
	}

	[Token(Token = "0x600126D")]
	[Address(RVA = "0xB57448", Offset = "0xB57448", VA = "0xB57448")]
	private Color GetLegibleTextColor()
	{
		return default(Color);
	}

	[Token(Token = "0x600126E")]
	[Address(RVA = "0xB574B0", Offset = "0xB574B0", VA = "0xB574B0")]
	private void OpenColorPicker(bool on)
	{
	}

	[Token(Token = "0x600126F")]
	[Address(RVA = "0xB575D0", Offset = "0xB575D0", VA = "0xB575D0")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6001270")]
	[Address(RVA = "0xB575D4", Offset = "0xB575D4", VA = "0xB575D4")]
	public PieceVruiView()
	{
	}
}
[Token(Token = "0x200035A")]
public class PincerArrowView : StateBehaviour
{
	[Token(Token = "0x4001090")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Cubism.Hand hand;

	[Token(Token = "0x4001091")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform _leftSide;

	[Token(Token = "0x4001092")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform _rightSide;

	[Token(Token = "0x4001093")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject _moveArrow;

	[Token(Token = "0x4001094")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Transform _moveArrowMesh;

	[Token(Token = "0x4001095")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject _creationDot;

	[Token(Token = "0x4001096")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[Space(15f)]
	public Material _solidButtonMat;

	[Token(Token = "0x4001097")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Material _fadeButtonMat;

	[Token(Token = "0x4001098")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Renderer[] _renderers;

	[Token(Token = "0x4001099")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private float _angle;

	[Token(Token = "0x400109A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private GrabButton _grabButton;

	[Token(Token = "0x400109B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Controller _controller;

	[Token(Token = "0x400109C")]
	private const float MaxAngle = 15f;

	[Token(Token = "0x6001271")]
	[Address(RVA = "0xB5763C", Offset = "0xB5763C", VA = "0xB5763C")]
	private void Start()
	{
	}

	[Token(Token = "0x6001272")]
	[Address(RVA = "0xB576F4", Offset = "0xB576F4", VA = "0xB576F4")]
	private void Update()
	{
	}

	[Token(Token = "0x6001273")]
	[Address(RVA = "0xB57A08", Offset = "0xB57A08", VA = "0xB57A08")]
	private void UpdateAngle()
	{
	}

	[Token(Token = "0x6001274")]
	[Address(RVA = "0xB57BE0", Offset = "0xB57BE0", VA = "0xB57BE0")]
	public PincerArrowView()
	{
	}
}
[Token(Token = "0x200035B")]
public class PincerPosQuestPassthrough : StateBehaviour
{
	[Token(Token = "0x400109D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Vector3 regularPos;

	[Token(Token = "0x400109E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public Vector3 passThroughPos;

	[Token(Token = "0x6001275")]
	[Address(RVA = "0xB57BE8", Offset = "0xB57BE8", VA = "0xB57BE8", Slot = "5")]
	protected override void ForceSetup()
	{
	}

	[Token(Token = "0x6001276")]
	[Address(RVA = "0xB57D08", Offset = "0xB57D08", VA = "0xB57D08")]
	private void SetPosition()
	{
	}

	[Token(Token = "0x6001277")]
	[Address(RVA = "0xB57D9C", Offset = "0xB57D9C", VA = "0xB57D9C")]
	public PincerPosQuestPassthrough()
	{
	}
}
[Token(Token = "0x200035C")]
public class PlaytestPuzzleView : StateBehaviour
{
	[Token(Token = "0x400109F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject _levelUiPrefab;

	[Token(Token = "0x40010A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform _parent;

	[Token(Token = "0x40010A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject _noInternet;

	[Token(Token = "0x40010A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Dictionary<string, GameObject> _levelButtons;

	[Token(Token = "0x40010A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Difficulty _prevDifficulty;

	[Token(Token = "0x6001278")]
	[Address(RVA = "0xB57DA4", Offset = "0xB57DA4", VA = "0xB57DA4", Slot = "5")]
	protected override void ForceSetup()
	{
	}

	[Token(Token = "0x6001279")]
	[Address(RVA = "0xB57DA8", Offset = "0xB57DA8", VA = "0xB57DA8")]
	private void PopulatePuzzles()
	{
	}

	[Token(Token = "0x600127A")]
	[Address(RVA = "0xB57EEC", Offset = "0xB57EEC", VA = "0xB57EEC")]
	private void SpawnLevelButton(Level level)
	{
	}

	[Token(Token = "0x600127B")]
	[Address(RVA = "0xB5807C", Offset = "0xB5807C", VA = "0xB5807C")]
	private void RemoveLevelButton(Level level)
	{
	}

	[Token(Token = "0x600127C")]
	[Address(RVA = "0xB5814C", Offset = "0xB5814C", VA = "0xB5814C")]
	private void ClearButtons()
	{
	}

	[Token(Token = "0x600127D")]
	[Address(RVA = "0xB582E8", Offset = "0xB582E8", VA = "0xB582E8")]
	public PlaytestPuzzleView()
	{
	}
}
[Token(Token = "0x200035D")]
public class PlaytestSubtitleView : StateBehaviour
{
	[Token(Token = "0x40010A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Text _subtitle;

	[Token(Token = "0x600127E")]
	[Address(RVA = "0xB5836C", Offset = "0xB5836C", VA = "0xB5836C", Slot = "5")]
	protected override void ForceSetup()
	{
	}

	[Token(Token = "0x600127F")]
	[Address(RVA = "0xB58410", Offset = "0xB58410", VA = "0xB58410")]
	private void UpdateSubtitleText()
	{
	}

	[Token(Token = "0x6001280")]
	[Address(RVA = "0xB58490", Offset = "0xB58490", VA = "0xB58490")]
	public PlaytestSubtitleView()
	{
	}
}
[Token(Token = "0x200035E")]
public class ProgressView : StateBehaviour
{
	[Token(Token = "0x40010A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Text _completion;

	[Token(Token = "0x40010A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool _isVolume2;

	[Token(Token = "0x40010A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private int _numberOfPuzzles;

	[Token(Token = "0x40010A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float _progressPercentage;

	[Token(Token = "0x40010A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private int _puzzlesSolved;

	[Token(Token = "0x6001281")]
	[Address(RVA = "0xB58498", Offset = "0xB58498", VA = "0xB58498")]
	private void Start()
	{
	}

	[Token(Token = "0x6001282")]
	[Address(RVA = "0xB58610", Offset = "0xB58610", VA = "0xB58610")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6001283")]
	[Address(RVA = "0xB58638", Offset = "0xB58638", VA = "0xB58638")]
	private void CalcProgress()
	{
	}

	[Token(Token = "0x6001284")]
	[Address(RVA = "0xB587D4", Offset = "0xB587D4", VA = "0xB587D4")]
	private void UpdateString()
	{
	}

	[Token(Token = "0x6001285")]
	[Address(RVA = "0xB589D0", Offset = "0xB589D0", VA = "0xB589D0")]
	public ProgressView()
	{
	}
}
[Token(Token = "0x200035F")]
public class PuzzleSnapView : MonoBehaviour
{
	[Token(Token = "0x40010AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float offsetSnappable;

	[Token(Token = "0x40010AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AutoPlane autoPlane;

	[Token(Token = "0x40010AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public PuzzleSnapService puzzleSnapService;

	[Token(Token = "0x40010AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float _targetoffset;

	[Token(Token = "0x40010AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float _easing;

	[Token(Token = "0x40010AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float _timeStampNotSnappable;

	[Token(Token = "0x6001286")]
	[Address(RVA = "0xB589D8", Offset = "0xB589D8", VA = "0xB589D8")]
	private void Start()
	{
	}

	[Token(Token = "0x6001287")]
	[Address(RVA = "0xB58A7C", Offset = "0xB58A7C", VA = "0xB58A7C")]
	private void PlaySnapAudio()
	{
	}

	[Token(Token = "0x6001288")]
	[Address(RVA = "0xB58A70", Offset = "0xB58A70", VA = "0xB58A70")]
	private void SetSlowEasing()
	{
	}

	[Token(Token = "0x6001289")]
	[Address(RVA = "0xB58B9C", Offset = "0xB58B9C", VA = "0xB58B9C")]
	private void SetFastEasing()
	{
	}

	[Token(Token = "0x600128A")]
	[Address(RVA = "0xB58BA8", Offset = "0xB58BA8", VA = "0xB58BA8")]
	private void Update()
	{
	}

	[Token(Token = "0x600128B")]
	[Address(RVA = "0xB58C54", Offset = "0xB58C54", VA = "0xB58C54")]
	public PuzzleSnapView()
	{
	}
}
[Token(Token = "0x2000360")]
public class PuzzleSongViewVrui : StateBehaviour
{
	[Token(Token = "0x40010B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public VrToggle toggle;

	[Token(Token = "0x600128C")]
	[Address(RVA = "0xB58C74", Offset = "0xB58C74", VA = "0xB58C74")]
	private void Start()
	{
	}

	[Token(Token = "0x600128D")]
	[Address(RVA = "0xB58D70", Offset = "0xB58D70", VA = "0xB58D70")]
	private void UnToggleIfToggled(Mode mode)
	{
	}

	[Token(Token = "0x600128E")]
	[Address(RVA = "0xB58DBC", Offset = "0xB58DBC", VA = "0xB58DBC")]
	public PuzzleSongViewVrui()
	{
	}
}
[Token(Token = "0x2000361")]
public class RepositionOptionVisibility : MonoBehaviour
{
	[Token(Token = "0x40010B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject _button;

	[Token(Token = "0x40010B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject _thumbstickPrompt;

	[Token(Token = "0x600128F")]
	[Address(RVA = "0xB58DC4", Offset = "0xB58DC4", VA = "0xB58DC4")]
	private void Update()
	{
	}

	[Token(Token = "0x6001290")]
	[Address(RVA = "0xB58E70", Offset = "0xB58E70", VA = "0xB58E70")]
	public RepositionOptionVisibility()
	{
	}
}
[Token(Token = "0x2000362")]
public class ReprojectControllersVruiView : StateBehaviour
{
	[Token(Token = "0x40010B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public VrToggle toggle;

	[Token(Token = "0x6001291")]
	[Address(RVA = "0xB58E78", Offset = "0xB58E78", VA = "0xB58E78", Slot = "5")]
	protected override void ForceSetup()
	{
	}

	[Token(Token = "0x6001292")]
	[Address(RVA = "0xB58F38", Offset = "0xB58F38", VA = "0xB58F38")]
	private void SetToggle()
	{
	}

	[Token(Token = "0x6001293")]
	[Address(RVA = "0xB58FE0", Offset = "0xB58FE0", VA = "0xB58FE0")]
	public ReprojectControllersVruiView()
	{
	}
}
[Token(Token = "0x2000363")]
public class SaveFilePresenter : MonoBehaviour
{
	[Token(Token = "0x40010B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject _prefab;

	[Token(Token = "0x40010B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform _saveFileParent;

	[Token(Token = "0x40010B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private SaveFileModel _saveFileModel;

	[Token(Token = "0x6001294")]
	[Address(RVA = "0xB58FE8", Offset = "0xB58FE8", VA = "0xB58FE8")]
	public void Setup(SaveFileModel saveFileModel)
	{
	}

	[Token(Token = "0x6001295")]
	[Address(RVA = "0xB59018", Offset = "0xB59018", VA = "0xB59018")]
	private void SpawnSaveFileView(int index)
	{
	}

	[Token(Token = "0x6001296")]
	[Address(RVA = "0xB5917C", Offset = "0xB5917C", VA = "0xB5917C")]
	public SaveFilePresenter()
	{
	}
}
[Token(Token = "0x2000364")]
public class SaveFileView : StateBehaviour
{
	[Token(Token = "0x40010B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Text _saveName;

	[Token(Token = "0x40010B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Text _campaignProgress;

	[Token(Token = "0x40010B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject _existingSaveWrapper;

	[Token(Token = "0x40010BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject _newSaveWrapper;

	[Token(Token = "0x40010BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject _selectedBackground;

	[Token(Token = "0x40010BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Material _selectedMat;

	[Token(Token = "0x40010BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Material _defaultMat;

	[Token(Token = "0x40010BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public VrButton _create;

	[Token(Token = "0x40010BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public VrButton _load;

	[Token(Token = "0x40010C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public VrButton _delete;

	[Token(Token = "0x40010C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public GameObject _loadedMsg;

	[Token(Token = "0x40010C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	[Space(25f)]
	private int _saveIndex;

	[Token(Token = "0x6001297")]
	[Address(RVA = "0xB590C8", Offset = "0xB590C8", VA = "0xB590C8")]
	public void Setup(int index)
	{
	}

	[Token(Token = "0x6001298")]
	[Address(RVA = "0xB594E4", Offset = "0xB594E4", VA = "0xB594E4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6001299")]
	[Address(RVA = "0xB59184", Offset = "0xB59184", VA = "0xB59184")]
	private void SubscribeToButtonEvents()
	{
	}

	[Token(Token = "0x600129A")]
	[Address(RVA = "0xB594E8", Offset = "0xB594E8", VA = "0xB594E8")]
	private void CreateNewSave()
	{
	}

	[Token(Token = "0x600129B")]
	[Address(RVA = "0xB59554", Offset = "0xB59554", VA = "0xB59554")]
	private void LoadSave()
	{
	}

	[Token(Token = "0x600129C")]
	[Address(RVA = "0xB595C0", Offset = "0xB595C0", VA = "0xB595C0")]
	private void DeleteSave()
	{
	}

	[Token(Token = "0x600129D")]
	[Address(RVA = "0xB592B0", Offset = "0xB592B0", VA = "0xB592B0")]
	private void UpdateView()
	{
	}

	[Token(Token = "0x600129E")]
	[Address(RVA = "0xB59918", Offset = "0xB59918", VA = "0xB59918")]
	private void SetProgressString()
	{
	}

	[Token(Token = "0x600129F")]
	[Address(RVA = "0xB59FC4", Offset = "0xB59FC4", VA = "0xB59FC4")]
	public SaveFileView()
	{
	}
}
[Token(Token = "0x2000365")]
public class ShowVirtualHandsView : StateBehaviour
{
	[Token(Token = "0x40010C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public VrToggle toggle;

	[Token(Token = "0x60012A1")]
	[Address(RVA = "0xB59FD0", Offset = "0xB59FD0", VA = "0xB59FD0", Slot = "5")]
	protected override void ForceSetup()
	{
	}

	[Token(Token = "0x60012A2")]
	[Address(RVA = "0xB5A090", Offset = "0xB5A090", VA = "0xB5A090")]
	private void SetToggle()
	{
	}

	[Token(Token = "0x60012A3")]
	[Address(RVA = "0xB5A0F4", Offset = "0xB5A0F4", VA = "0xB5A0F4")]
	public ShowVirtualHandsView()
	{
	}
}
[Token(Token = "0x2000366")]
public class SideLoadLocationView : StateBehaviour
{
	[Token(Token = "0x40010C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Text location;

	[Token(Token = "0x60012A4")]
	[Address(RVA = "0xB5A0FC", Offset = "0xB5A0FC", VA = "0xB5A0FC", Slot = "5")]
	protected override void ForceSetup()
	{
	}

	[Token(Token = "0x60012A5")]
	[Address(RVA = "0xB5A100", Offset = "0xB5A100", VA = "0xB5A100")]
	public SideLoadLocationView()
	{
	}
}
[Token(Token = "0x2000367")]
public class SolidArrowView : MonoBehaviour
{
	[Token(Token = "0x40010C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Cubism.Hand hand;

	[Token(Token = "0x40010C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ColorSwap _colorSwap;

	[Token(Token = "0x40010C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool _grabFirstDown;

	[Token(Token = "0x60012A6")]
	[Address(RVA = "0xB5A108", Offset = "0xB5A108", VA = "0xB5A108")]
	private void Update()
	{
	}

	[Token(Token = "0x60012A7")]
	[Address(RVA = "0xB5A1F4", Offset = "0xB5A1F4", VA = "0xB5A1F4")]
	public SolidArrowView()
	{
	}
}
[Token(Token = "0x2000368")]
public class SolvedSpawnView : StateBehaviour
{
	[Token(Token = "0x40010C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public VrToggle toggle;

	[Token(Token = "0x60012A8")]
	[Address(RVA = "0xB5A1FC", Offset = "0xB5A1FC", VA = "0xB5A1FC", Slot = "5")]
	protected override void ForceSetup()
	{
	}

	[Token(Token = "0x60012A9")]
	[Address(RVA = "0xB5A2BC", Offset = "0xB5A2BC", VA = "0xB5A2BC")]
	private void UpdateToggle()
	{
	}

	[Token(Token = "0x60012AA")]
	[Address(RVA = "0xB5A310", Offset = "0xB5A310", VA = "0xB5A310")]
	public SolvedSpawnView()
	{
	}
}
[Token(Token = "0x2000369")]
public class SpectatorCamView : StateBehaviour
{
	[Token(Token = "0x40010C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public VrToggle _noCam;

	[Token(Token = "0x40010CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public VrToggle _smoothCam;

	[Token(Token = "0x40010CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public VrToggle _spectatorCam;

	[Token(Token = "0x40010CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public VrToggle _ortho;

	[Token(Token = "0x40010CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public VrToggle _hideUi;

	[Token(Token = "0x40010CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public VrToggle _hideAvatar;

	[Token(Token = "0x40010CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public VrToggle _hideHands;

	[Token(Token = "0x60012AB")]
	[Address(RVA = "0xB5A318", Offset = "0xB5A318", VA = "0xB5A318", Slot = "5")]
	protected override void ForceSetup()
	{
	}

	[Token(Token = "0x60012AC")]
	[Address(RVA = "0xB5A5A0", Offset = "0xB5A5A0", VA = "0xB5A5A0")]
	private void SetCamTypeButton(SpectatorCam cam)
	{
	}

	[Token(Token = "0x60012AD")]
	[Address(RVA = "0xB5A5F0", Offset = "0xB5A5F0", VA = "0xB5A5F0")]
	private void SetOrtho(bool on)
	{
	}

	[Token(Token = "0x60012AE")]
	[Address(RVA = "0xB5A610", Offset = "0xB5A610", VA = "0xB5A610")]
	private void SetHideUi(bool visible)
	{
	}

	[Token(Token = "0x60012AF")]
	[Address(RVA = "0xB5A634", Offset = "0xB5A634", VA = "0xB5A634")]
	private void SetHideAvatar(bool visible)
	{
	}

	[Token(Token = "0x60012B0")]
	[Address(RVA = "0xB5A658", Offset = "0xB5A658", VA = "0xB5A658")]
	private void SetHideHands(bool visible)
	{
	}

	[Token(Token = "0x60012B1")]
	[Address(RVA = "0xB5A67C", Offset = "0xB5A67C", VA = "0xB5A67C")]
	public SpectatorCamView()
	{
	}
}
[Token(Token = "0x200036A")]
public class SplashSceneView : MonoBehaviour
{
	[Token(Token = "0x200036B")]
	[CompilerGenerated]
	private sealed class <Start>d__1 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40010D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40010D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40010D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SplashSceneView <>4__this;

		[Token(Token = "0x40010D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private AsyncOperation <asyncOperation>5__2;

		[Token(Token = "0x170001AE")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60012B7")]
			[Address(RVA = "0xB5A968", Offset = "0xB5A968", VA = "0xB5A968", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001AF")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60012B9")]
			[Address(RVA = "0xB5A9B0", Offset = "0xB5A9B0", VA = "0xB5A9B0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60012B4")]
		[Address(RVA = "0xB5A6EC", Offset = "0xB5A6EC", VA = "0xB5A6EC")]
		[DebuggerHidden]
		public <Start>d__1(int <>1__state)
		{
		}

		[Token(Token = "0x60012B5")]
		[Address(RVA = "0xB5A71C", Offset = "0xB5A71C", VA = "0xB5A71C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60012B6")]
		[Address(RVA = "0xB5A720", Offset = "0xB5A720", VA = "0xB5A720", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60012B8")]
		[Address(RVA = "0xB5A970", Offset = "0xB5A970", VA = "0xB5A970", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40010D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Text text;

	[Token(Token = "0x60012B2")]
	[Address(RVA = "0xB5A684", Offset = "0xB5A684", VA = "0xB5A684")]
	[IteratorStateMachine(typeof(<Start>d__1))]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x60012B3")]
	[Address(RVA = "0xB5A714", Offset = "0xB5A714", VA = "0xB5A714")]
	public SplashSceneView()
	{
	}
}
[Token(Token = "0x200036C")]
public class StateVisibility : StateBehaviour
{
	[Token(Token = "0x40010D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[Header("BuildType")]
	public bool full;

	[Token(Token = "0x40010D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	public bool demo;

	[Token(Token = "0x40010D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A")]
	public bool earlyAccess;

	[Token(Token = "0x40010D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2B")]
	public bool testing;

	[Token(Token = "0x40010D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[Header("OS")]
	public bool android;

	[Token(Token = "0x40010DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D")]
	public bool windows;

	[Token(Token = "0x40010DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2E")]
	public bool unityEditor;

	[Token(Token = "0x40010DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2F")]
	[Header("InputMethod")]
	public bool hands;

	[Token(Token = "0x40010DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool controllers;

	[Token(Token = "0x40010DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	[Header("IntroCompletion")]
	public bool introNotCompleted;

	[Token(Token = "0x40010DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x32")]
	public bool introCompleted;

	[Token(Token = "0x40010E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x33")]
	[Header("GameplayState")]
	public bool title;

	[Token(Token = "0x40010E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public bool puzzle;

	[Token(Token = "0x40010E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x35")]
	public bool editing;

	[Token(Token = "0x40010E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x36")]
	public bool puzzleSong;

	[Token(Token = "0x40010E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x37")]
	public bool credits;

	[Token(Token = "0x40010E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[Header("Main set completion")]
	public int minConsecutivePuzzlesSolved;

	[Token(Token = "0x40010E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public bool mainSetCompleted;

	[Token(Token = "0x40010E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3D")]
	public bool mainSetNotCompleted;

	[Token(Token = "0x40010E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3E")]
	[Header("ScriptDefine Dev")]
	public bool dev;

	[Token(Token = "0x40010E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3F")]
	public bool notDev;

	[Token(Token = "0x40010EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[Header("ScriptDefine Recorder")]
	public bool recorder;

	[Token(Token = "0x40010EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
	public bool notRecorder;

	[Token(Token = "0x40010EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x42")]
	[Header("ScriptDefine Playtest")]
	public bool playTest;

	[Token(Token = "0x40010ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x43")]
	public bool notPlayTest;

	[Token(Token = "0x40010EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[Header("Hmd")]
	public bool rift;

	[Token(Token = "0x40010EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x45")]
	public bool riftS;

	[Token(Token = "0x40010F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x46")]
	public bool link;

	[Token(Token = "0x40010F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x47")]
	public bool quest;

	[Token(Token = "0x40010F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public bool quest2;

	[Token(Token = "0x40010F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
	public bool cambria;

	[Token(Token = "0x40010F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4A")]
	public bool pico;

	[Token(Token = "0x40010F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4B")]
	public bool pico4;

	[Token(Token = "0x40010F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public bool wmr;

	[Token(Token = "0x40010F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4D")]
	public bool vive;

	[Token(Token = "0x40010F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4E")]
	public bool index;

	[Token(Token = "0x40010F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4F")]
	[Header("Focus")]
	public bool inFocus;

	[Token(Token = "0x40010FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public bool outOfFocus;

	[Token(Token = "0x40010FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
	[Header("ColorTheme")]
	public bool overridden;

	[Token(Token = "0x40010FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x52")]
	public bool notOverridden;

	[Token(Token = "0x40010FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x53")]
	[Header("ColorThemeType")]
	public bool light;

	[Token(Token = "0x40010FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public bool dark;

	[Token(Token = "0x40010FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x55")]
	public bool passthrough;

	[Token(Token = "0x4001100")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x56")]
	[Header("Passthrough Supported")]
	public bool passthroughSupported;

	[Token(Token = "0x4001101")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x57")]
	public bool passthroughNotSupported;

	[Token(Token = "0x4001102")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[Header("Debug")]
	public bool handTrackingReadoutOn;

	[Token(Token = "0x4001103")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
	public bool handTrackingReadoutOff;

	[Token(Token = "0x4001104")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5A")]
	[Header("HandTrackingDisclaimer")]
	public bool handTrackingDisclaimerVisible;

	[Token(Token = "0x4001105")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5B")]
	public bool handTrackingDisclaimerInvisible;

	[Token(Token = "0x4001106")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[Header("Version")]
	public string minVersion;

	[Token(Token = "0x4001107")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public string maxVersion;

	[Token(Token = "0x4001108")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Version _version;

	[Token(Token = "0x4001109")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Version _minVersion;

	[Token(Token = "0x400110A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Version _maxVersion;

	[Token(Token = "0x60012BA")]
	[Address(RVA = "0xB5A9B8", Offset = "0xB5A9B8", VA = "0xB5A9B8", Slot = "5")]
	protected override void ForceSetup()
	{
	}

	[Token(Token = "0x60012BB")]
	[Address(RVA = "0xB5AA88", Offset = "0xB5AA88", VA = "0xB5AA88")]
	private void SubscribeToEvents()
	{
	}

	[Token(Token = "0x60012BC")]
	[Address(RVA = "0xB5AE50", Offset = "0xB5AE50", VA = "0xB5AE50")]
	private void UpdateVisibility()
	{
	}

	[Token(Token = "0x60012BD")]
	[Address(RVA = "0xB5AF5C", Offset = "0xB5AF5C", VA = "0xB5AF5C")]
	private bool CheckBuildTypeData()
	{
		return default(bool);
	}

	[Token(Token = "0x60012BE")]
	[Address(RVA = "0xB5B700", Offset = "0xB5B700", VA = "0xB5B700")]
	private bool CheckOs()
	{
		return default(bool);
	}

	[Token(Token = "0x60012BF")]
	[Address(RVA = "0xB5B044", Offset = "0xB5B044", VA = "0xB5B044")]
	private bool CheckInputMethodData()
	{
		return default(bool);
	}

	[Token(Token = "0x60012C0")]
	[Address(RVA = "0xB5B0B4", Offset = "0xB5B0B4", VA = "0xB5B0B4")]
	private bool CheckIntroCompletion()
	{
		return default(bool);
	}

	[Token(Token = "0x60012C1")]
	[Address(RVA = "0xB5B0F0", Offset = "0xB5B0F0", VA = "0xB5B0F0")]
	private bool CheckGameplayState()
	{
		return default(bool);
	}

	[Token(Token = "0x60012C2")]
	[Address(RVA = "0xB5B170", Offset = "0xB5B170", VA = "0xB5B170")]
	private bool CheckMinConsecutivePuzzles()
	{
		return default(bool);
	}

	[Token(Token = "0x60012C3")]
	[Address(RVA = "0xB5B1AC", Offset = "0xB5B1AC", VA = "0xB5B1AC")]
	private bool CheckMainSetCompletion()
	{
		return default(bool);
	}

	[Token(Token = "0x60012C4")]
	[Address(RVA = "0xB5B1EC", Offset = "0xB5B1EC", VA = "0xB5B1EC")]
	private bool CheckDev()
	{
		return default(bool);
	}

	[Token(Token = "0x60012C5")]
	[Address(RVA = "0xB5B248", Offset = "0xB5B248", VA = "0xB5B248")]
	private bool CheckRecorder()
	{
		return default(bool);
	}

	[Token(Token = "0x60012C6")]
	[Address(RVA = "0xB5B2A4", Offset = "0xB5B2A4", VA = "0xB5B2A4")]
	private bool CheckPlaytest()
	{
		return default(bool);
	}

	[Token(Token = "0x60012C7")]
	[Address(RVA = "0xB5B300", Offset = "0xB5B300", VA = "0xB5B300")]
	private bool CheckHmd()
	{
		return default(bool);
	}

	[Token(Token = "0x60012C8")]
	[Address(RVA = "0xB5B3E0", Offset = "0xB5B3E0", VA = "0xB5B3E0")]
	private bool Checkfocus()
	{
		return default(bool);
	}

	[Token(Token = "0x60012C9")]
	[Address(RVA = "0xB5B41C", Offset = "0xB5B41C", VA = "0xB5B41C")]
	private bool CheckColorThemeOverride()
	{
		return default(bool);
	}

	[Token(Token = "0x60012CA")]
	[Address(RVA = "0xB5B458", Offset = "0xB5B458", VA = "0xB5B458")]
	private bool CheckColorTheme()
	{
		return default(bool);
	}

	[Token(Token = "0x60012CB")]
	[Address(RVA = "0xB5B59C", Offset = "0xB5B59C", VA = "0xB5B59C")]
	private bool CheckHandTrackingReadout()
	{
		return default(bool);
	}

	[Token(Token = "0x60012CC")]
	[Address(RVA = "0xB5B5E0", Offset = "0xB5B5E0", VA = "0xB5B5E0")]
	private bool CheckHtDisclaimerVisibility()
	{
		return default(bool);
	}

	[Token(Token = "0x60012CD")]
	[Address(RVA = "0xB5B61C", Offset = "0xB5B61C", VA = "0xB5B61C")]
	private bool PassthroughSupportedCheck()
	{
		return default(bool);
	}

	[Token(Token = "0x60012CE")]
	[Address(RVA = "0xB5B6AC", Offset = "0xB5B6AC", VA = "0xB5B6AC")]
	private bool CheckVersion()
	{
		return default(bool);
	}

	[Token(Token = "0x60012CF")]
	[Address(RVA = "0xB5B708", Offset = "0xB5B708", VA = "0xB5B708")]
	public StateVisibility()
	{
	}
}
[Token(Token = "0x200036D")]
public class ThemeOverrideViewVrui : StateBehaviour
{
	[Token(Token = "0x400110B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Text _text;

	[Token(Token = "0x60012D4")]
	[Address(RVA = "0xB5B7A0", Offset = "0xB5B7A0", VA = "0xB5B7A0")]
	private void Update()
	{
	}

	[Token(Token = "0x60012D5")]
	[Address(RVA = "0xB5B934", Offset = "0xB5B934", VA = "0xB5B934")]
	public ThemeOverrideViewVrui()
	{
	}
}
[Token(Token = "0x200036E")]
public class TimberPlayButtonView : StateBehaviour
{
	[Token(Token = "0x60012D6")]
	[Address(RVA = "0xB5B93C", Offset = "0xB5B93C", VA = "0xB5B93C", Slot = "5")]
	protected override void ForceSetup()
	{
	}

	[Token(Token = "0x60012D7")]
	[Address(RVA = "0xB5BA14", Offset = "0xB5BA14", VA = "0xB5BA14")]
	private void UpdateVisibility()
	{
	}

	[Token(Token = "0x60012D8")]
	[Address(RVA = "0xB5BA94", Offset = "0xB5BA94", VA = "0xB5BA94")]
	public TimberPlayButtonView()
	{
	}
}
[Token(Token = "0x200036F")]
public class UndoVruiView : StateBehaviour
{
	[Token(Token = "0x400110C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject _activeButton;

	[Token(Token = "0x400110D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject _inactiveButton;

	[Token(Token = "0x60012D9")]
	[Address(RVA = "0xB5BA9C", Offset = "0xB5BA9C", VA = "0xB5BA9C")]
	private void Update()
	{
	}

	[Token(Token = "0x60012DA")]
	[Address(RVA = "0xB5BB24", Offset = "0xB5BB24", VA = "0xB5BB24")]
	public UndoVruiView()
	{
	}
}
[Token(Token = "0x2000370")]
public class UserNameView : StateBehaviour
{
	[Token(Token = "0x400110E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Text _name;

	[Token(Token = "0x60012DB")]
	[Address(RVA = "0xB5BB2C", Offset = "0xB5BB2C", VA = "0xB5BB2C", Slot = "5")]
	protected override void ForceSetup()
	{
	}

	[Token(Token = "0x60012DC")]
	[Address(RVA = "0xB5BBFC", Offset = "0xB5BBFC", VA = "0xB5BBFC")]
	private void SetName(string name)
	{
	}

	[Token(Token = "0x60012DD")]
	[Address(RVA = "0xB5BC20", Offset = "0xB5BC20", VA = "0xB5BC20")]
	public UserNameView()
	{
	}
}
[Token(Token = "0x2000371")]
public class VersionTagView : StateBehaviour
{
	[Token(Token = "0x400110F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Text version;

	[Token(Token = "0x60012DE")]
	[Address(RVA = "0xB5BC28", Offset = "0xB5BC28", VA = "0xB5BC28")]
	private void Start()
	{
	}

	[Token(Token = "0x60012DF")]
	[Address(RVA = "0xB5BD18", Offset = "0xB5BD18", VA = "0xB5BD18", Slot = "5")]
	protected override void ForceSetup()
	{
	}

	[Token(Token = "0x60012E0")]
	[Address(RVA = "0xB5BCB8", Offset = "0xB5BCB8", VA = "0xB5BCB8")]
	private void SetupTag()
	{
	}

	[Token(Token = "0x60012E1")]
	[Address(RVA = "0xB5BDA8", Offset = "0xB5BDA8", VA = "0xB5BDA8")]
	private void SetupTest()
	{
	}

	[Token(Token = "0x60012E2")]
	[Address(RVA = "0xB5BE24", Offset = "0xB5BE24", VA = "0xB5BE24")]
	private void SetupDemo()
	{
	}

	[Token(Token = "0x60012E3")]
	[Address(RVA = "0xB5BEA0", Offset = "0xB5BEA0", VA = "0xB5BEA0")]
	private void SetupEarlyAccess()
	{
	}

	[Token(Token = "0x60012E4")]
	[Address(RVA = "0xB5BF1C", Offset = "0xB5BF1C", VA = "0xB5BF1C")]
	private void SetupFull()
	{
	}

	[Token(Token = "0x60012E5")]
	[Address(RVA = "0xB5BFD0", Offset = "0xB5BFD0", VA = "0xB5BFD0")]
	private string GetBuildSuffix()
	{
		return null;
	}

	[Token(Token = "0x60012E6")]
	[Address(RVA = "0xB5BFA8", Offset = "0xB5BFA8", VA = "0xB5BFA8")]
	private void ToggleComingSoon(bool visible)
	{
	}

	[Token(Token = "0x60012E7")]
	[Address(RVA = "0xB5BFAC", Offset = "0xB5BFAC", VA = "0xB5BFAC")]
	private void SetVersionText(string text)
	{
	}

	[Token(Token = "0x60012E8")]
	[Address(RVA = "0xB5C048", Offset = "0xB5C048", VA = "0xB5C048")]
	public VersionTagView()
	{
	}
}
[Token(Token = "0x2000372")]
public class VolumeTwoUnlockView : StateBehaviour
{
	[Token(Token = "0x4001110")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public VrButton _button;

	[Token(Token = "0x4001111")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public OpenPageController _openPageController;

	[Token(Token = "0x4001112")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject _unlockedWrapper;

	[Token(Token = "0x4001113")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject _lockedWrapper;

	[Token(Token = "0x4001114")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Text _completionShort;

	[Token(Token = "0x4001115")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Text _completionLong;

	[Token(Token = "0x4001116")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Animator _animator;

	[Token(Token = "0x4001117")]
	private const string CompletionShortKey = "ui_main_volumeOneShort";

	[Token(Token = "0x4001118")]
	private const string CompletionLongKey = "ui_main_volumeTwoUnlock";

	[Token(Token = "0x4001119")]
	private const string LockedAnim = "Locked";

	[Token(Token = "0x60012E9")]
	[Address(RVA = "0xB5C050", Offset = "0xB5C050", VA = "0xB5C050", Slot = "5")]
	protected override void ForceSetup()
	{
	}

	[Token(Token = "0x60012EA")]
	[Address(RVA = "0xB5C3B0", Offset = "0xB5C3B0", VA = "0xB5C3B0")]
	private void CheckToPlayLockAnimation()
	{
	}

	[Token(Token = "0x60012EB")]
	[Address(RVA = "0xB5C578", Offset = "0xB5C578", VA = "0xB5C578")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60012EC")]
	[Address(RVA = "0xB5C228", Offset = "0xB5C228", VA = "0xB5C228")]
	private void UpdateView()
	{
	}

	[Token(Token = "0x60012ED")]
	[Address(RVA = "0xB5C4E8", Offset = "0xB5C4E8", VA = "0xB5C4E8")]
	private bool IsVolTwoUnlocked()
	{
		return default(bool);
	}

	[Token(Token = "0x60012EE")]
	[Address(RVA = "0xB5C57C", Offset = "0xB5C57C", VA = "0xB5C57C")]
	public VolumeTwoUnlockView()
	{
	}
}
[Token(Token = "0x2000373")]
public class VolumeView : StateBehaviour
{
	[Token(Token = "0x400111A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public VolumeBars bars;

	[Token(Token = "0x400111B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public VolumeTarget target;

	[Token(Token = "0x60012F1")]
	[Address(RVA = "0xB5C58C", Offset = "0xB5C58C", VA = "0xB5C58C")]
	private void Start()
	{
	}

	[Token(Token = "0x60012F2")]
	[Address(RVA = "0xB5C5A4", Offset = "0xB5C5A4", VA = "0xB5C5A4")]
	private void SubscribeToChanges()
	{
	}

	[Token(Token = "0x60012F3")]
	[Address(RVA = "0xB5C6CC", Offset = "0xB5C6CC", VA = "0xB5C6CC")]
	private void UpdateVolume()
	{
	}

	[Token(Token = "0x60012F4")]
	[Address(RVA = "0xB5C7A4", Offset = "0xB5C7A4", VA = "0xB5C7A4")]
	private int VolToLevel(float volume)
	{
		return default(int);
	}

	[Token(Token = "0x60012F5")]
	[Address(RVA = "0xB5C89C", Offset = "0xB5C89C", VA = "0xB5C89C")]
	public VolumeView()
	{
	}
}
[Token(Token = "0x2000374")]
public class VoxelCreation : StateBehaviour
{
	[Token(Token = "0x400111C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool isCreating;

	[Token(Token = "0x400111D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform spawnParent;

	[Token(Token = "0x400111E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Color addColor;

	[Token(Token = "0x400111F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Color deleteColor;

	[Token(Token = "0x4001121")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	protected Player _player;

	[Token(Token = "0x170001B0")]
	public bool overEmptyCell
	{
		[Token(Token = "0x60012F6")]
		[Address(RVA = "0xB5C8A4", Offset = "0xB5C8A4", VA = "0xB5C8A4")]
		[CompilerGenerated]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60012F7")]
		[Address(RVA = "0xB5C8AC", Offset = "0xB5C8AC", VA = "0xB5C8AC")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x60012F8")]
	[Address(RVA = "0xB5C8B8", Offset = "0xB5C8B8", VA = "0xB5C8B8", Slot = "5")]
	protected override void ForceSetup()
	{
	}

	[Token(Token = "0x60012F9")]
	[Address(RVA = "0xB5C914", Offset = "0xB5C914", VA = "0xB5C914", Slot = "6")]
	public virtual void Update()
	{
	}

	[Token(Token = "0x60012FA")]
	[Address(RVA = "0xB5CA80", Offset = "0xB5CA80", VA = "0xB5CA80")]
	public void SetCreating(bool creating)
	{
	}

	[Token(Token = "0x60012FB")]
	[Address(RVA = "0xB5CB54", Offset = "0xB5CB54", VA = "0xB5CB54")]
	protected Controller GetController()
	{
		return null;
	}

	[Token(Token = "0x60012FC")]
	[Address(RVA = "0xB5CBB8", Offset = "0xB5CBB8", VA = "0xB5CBB8", Slot = "7")]
	protected virtual Vector3 GetOffset()
	{
		return default(Vector3);
	}

	[Token(Token = "0x60012FD")]
	[Address(RVA = "0xB5CBFC", Offset = "0xB5CBFC", VA = "0xB5CBFC", Slot = "8")]
	protected virtual bool IsActive()
	{
		return default(bool);
	}

	[Token(Token = "0x60012FE")]
	[Address(RVA = "0xB5CC04", Offset = "0xB5CC04", VA = "0xB5CC04", Slot = "9")]
	protected virtual void AddAction()
	{
	}

	[Token(Token = "0x60012FF")]
	[Address(RVA = "0xB5CC08", Offset = "0xB5CC08", VA = "0xB5CC08", Slot = "10")]
	protected virtual void RemoveAction()
	{
	}

	[Token(Token = "0x6001300")]
	[Address(RVA = "0xB5CC0C", Offset = "0xB5CC0C", VA = "0xB5CC0C", Slot = "11")]
	protected virtual bool OverEmptyCell()
	{
		return default(bool);
	}

	[Token(Token = "0x6001301")]
	[Address(RVA = "0xB5CC14", Offset = "0xB5CC14", VA = "0xB5CC14")]
	public VoxelCreation()
	{
	}
}
[Token(Token = "0x2000375")]
[CreateAssetMenu(fileName = "KeyboardSettings")]
public class KeyboardSettings : ScriptableObject
{
	[Token(Token = "0x4001122")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public KeyRow[] charRows;

	[Token(Token = "0x4001123")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Vector2 buttonSize;

	[Token(Token = "0x4001124")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float buttonMargin;

	[Token(Token = "0x4001125")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[Space(15f)]
	public KeySpriteOverride[] keySpriteOverrides;

	[Token(Token = "0x4001126")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public KeySizeOverride[] keySizeOverrides;

	[Token(Token = "0x6001302")]
	[Address(RVA = "0xB5CC24", Offset = "0xB5CC24", VA = "0xB5CC24")]
	public bool GetKeySpriteOverride(string keyValue, out Sprite sprite)
	{
		return default(bool);
	}

	[Token(Token = "0x6001303")]
	[Address(RVA = "0xB5CCBC", Offset = "0xB5CCBC", VA = "0xB5CCBC")]
	public bool GetKeySizeOverride(string keyValue, out KeySizeOverrideValue value)
	{
		return default(bool);
	}

	[Token(Token = "0x6001304")]
	[Address(RVA = "0xB5CD98", Offset = "0xB5CD98", VA = "0xB5CD98")]
	public KeyboardSettings()
	{
	}
}
[Serializable]
[Token(Token = "0x2000376")]
public struct KeySpriteOverride
{
	[Token(Token = "0x4001127")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public string keyValue;

	[Token(Token = "0x4001128")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public Sprite sprite;
}
[Serializable]
[Token(Token = "0x2000377")]
public struct KeySizeOverride
{
	[Token(Token = "0x4001129")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public string keyValue;

	[Token(Token = "0x400112A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public KeySizeOverrideValue value;
}
[Serializable]
[Token(Token = "0x2000378")]
public struct KeySizeOverrideValue
{
	[Token(Token = "0x400112B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector2 size;

	[Token(Token = "0x400112C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public bool affectsXPositioning;
}
[Serializable]
[Token(Token = "0x2000379")]
public struct KeyRow
{
	[Token(Token = "0x400112D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public string[] keys;
}
[Token(Token = "0x200037A")]
public interface ISettableKeyValue
{
	[Token(Token = "0x6001305")]
	void SetKeyValue(string value);
}
[Token(Token = "0x200037B")]
public class KeyboardController : MonoBehaviour
{
	[Token(Token = "0x400112E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int maxChars;

	[Token(Token = "0x400112F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Page _keyboardPage;

	[Token(Token = "0x4001130")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public PageGroup _pageGroup;

	[Token(Token = "0x4001131")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject _keyWrapper;

	[Token(Token = "0x4001132")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Text _title;

	[Token(Token = "0x4001133")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public InputField _uiText;

	[Token(Token = "0x4001134")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject _upperKeys;

	[Token(Token = "0x4001135")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject _lowerKeys;

	[Token(Token = "0x4001136")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public VrButton _back;

	[Token(Token = "0x4001137")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public VrButton _clearAll;

	[Token(Token = "0x4001138")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private bool _upperCase;

	[Token(Token = "0x4001139")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private KeyboardParams _keyboardParamns;

	[Token(Token = "0x6001306")]
	[Address(RVA = "0xB5D840", Offset = "0xB5D840", VA = "0xB5D840")]
	public void Setup()
	{
	}

	[Token(Token = "0x6001307")]
	[Address(RVA = "0xB5DAEC", Offset = "0xB5DAEC", VA = "0xB5DAEC")]
	private void Update()
	{
	}

	[Token(Token = "0x6001308")]
	[Address(RVA = "0xB5DB34", Offset = "0xB5DB34", VA = "0xB5DB34")]
	private void ClearAll()
	{
	}

	[Token(Token = "0x6001309")]
	[Address(RVA = "0xB5DB88", Offset = "0xB5DB88", VA = "0xB5DB88")]
	public void OpenKeyboard(KeyboardParams keyboardParamns)
	{
	}

	[Token(Token = "0x600130A")]
	[Address(RVA = "0xB5DC18", Offset = "0xB5DC18", VA = "0xB5DC18")]
	private void ProcessKeyStroke(string input)
	{
	}

	[Token(Token = "0x600130B")]
	[Address(RVA = "0xB5DD0C", Offset = "0xB5DD0C", VA = "0xB5DD0C")]
	private void ToggleCase()
	{
	}

	[Token(Token = "0x600130C")]
	[Address(RVA = "0xB5DD5C", Offset = "0xB5DD5C", VA = "0xB5DD5C")]
	private void BackSpace()
	{
	}

	[Token(Token = "0x600130D")]
	[Address(RVA = "0xB5DE28", Offset = "0xB5DE28", VA = "0xB5DE28")]
	private void AddString(string value)
	{
	}

	[Token(Token = "0x600130E")]
	[Address(RVA = "0xB5DDA8", Offset = "0xB5DDA8", VA = "0xB5DDA8")]
	private void Submit()
	{
	}

	[Token(Token = "0x600130F")]
	[Address(RVA = "0xB5DE78", Offset = "0xB5DE78", VA = "0xB5DE78")]
	private void Back()
	{
	}

	[Token(Token = "0x6001310")]
	[Address(RVA = "0xB5DEC4", Offset = "0xB5DEC4", VA = "0xB5DEC4")]
	public KeyboardController()
	{
	}
}
[Serializable]
[Token(Token = "0x200037C")]
public class KeyboardParams
{
	[Token(Token = "0x400113A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string title;

	[Token(Token = "0x400113B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string initialValue;

	[Token(Token = "0x400113C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool backOnConfirm;

	[Token(Token = "0x400113D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string backPage;

	[Token(Token = "0x400113E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Action<string> confirmCallback;

	[Token(Token = "0x6001311")]
	[Address(RVA = "0xB5DED4", Offset = "0xB5DED4", VA = "0xB5DED4")]
	public KeyboardParams()
	{
	}
}
[Token(Token = "0x200037D")]
public class KeyInput : MonoBehaviour, ISettableKeyValue
{
	[Token(Token = "0x4001140")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string keyValue;

	[Token(Token = "0x4001141")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public VrButton _button;

	[Token(Token = "0x4001142")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Text _text;

	[Token(Token = "0x4001143")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Image _sprite;

	[Token(Token = "0x4001144")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool _checkForLongPress;

	[Token(Token = "0x4001145")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private float _clickDownTimeStamp;

	[Token(Token = "0x4001146")]
	private const float LongPressTreshold = 1f;

	[Token(Token = "0x1400008B")]
	public event Action<string> OnKeyDown
	{
		[Token(Token = "0x6001312")]
		[Address(RVA = "0xB5DA3C", Offset = "0xB5DA3C", VA = "0xB5DA3C")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6001313")]
		[Address(RVA = "0xB5DF50", Offset = "0xB5DF50", VA = "0xB5DF50")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x6001314")]
	[Address(RVA = "0xB5E000", Offset = "0xB5E000", VA = "0xB5E000")]
	private void Start()
	{
	}

	[Token(Token = "0x6001315")]
	[Address(RVA = "0xB5E0E0", Offset = "0xB5E0E0", VA = "0xB5E0E0")]
	private void ResetLongPressValues()
	{
	}

	[Token(Token = "0x6001316")]
	[Address(RVA = "0xB5E0FC", Offset = "0xB5E0FC", VA = "0xB5E0FC")]
	private void Update()
	{
	}

	[Token(Token = "0x6001317")]
	[Address(RVA = "0xB5E180", Offset = "0xB5E180", VA = "0xB5E180")]
	private void FireKeyPressedEvent()
	{
	}

	[Token(Token = "0x6001318")]
	[Address(RVA = "0xB5E1C4", Offset = "0xB5E1C4", VA = "0xB5E1C4", Slot = "4")]
	public void SetKeyValue(string value)
	{
	}

	[Token(Token = "0x6001319")]
	[Address(RVA = "0xB5E1CC", Offset = "0xB5E1CC", VA = "0xB5E1CC")]
	public KeyInput()
	{
	}
}
[Token(Token = "0x200037E")]
public class CsvLoader : MonoBehaviour
{
	[Token(Token = "0x4001147")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private TextAsset csvFile;

	[Token(Token = "0x4001148")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private char lineSeperator;

	[Token(Token = "0x4001149")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x22")]
	private char surround;

	[Token(Token = "0x400114A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private string[] fieldSeperator;

	[Token(Token = "0x400114B")]
	private const string filePath = "Assets/#Project/Systems/Localisation/Resources/";

	[Token(Token = "0x400114C")]
	private const string CsvFileLocation = "CubismLocalisation - Export";

	[Token(Token = "0x600131A")]
	[Address(RVA = "0xB5E1D4", Offset = "0xB5E1D4", VA = "0xB5E1D4")]
	public void LoadCsv()
	{
	}

	[Token(Token = "0x600131B")]
	[Address(RVA = "0xB5E240", Offset = "0xB5E240", VA = "0xB5E240")]
	public Dictionary<string, string> GetDictionaryValues(string attributeId)
	{
		return null;
	}

	[Token(Token = "0x600131C")]
	[Address(RVA = "0xB5E6C0", Offset = "0xB5E6C0", VA = "0xB5E6C0")]
	public CsvLoader()
	{
	}
}
[Token(Token = "0x2000380")]
public class CurrentLanguageView : MonoBehaviour
{
	[Token(Token = "0x400114F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Text text;

	[Token(Token = "0x6001320")]
	[Address(RVA = "0xB5E84C", Offset = "0xB5E84C", VA = "0xB5E84C")]
	private void Start()
	{
	}

	[Token(Token = "0x6001321")]
	[Address(RVA = "0xB5E8F4", Offset = "0xB5E8F4", VA = "0xB5E8F4")]
	private void Set()
	{
	}

	[Token(Token = "0x6001322")]
	[Address(RVA = "0xB5E9CC", Offset = "0xB5E9CC", VA = "0xB5E9CC")]
	public CurrentLanguageView()
	{
	}
}
[Token(Token = "0x2000381")]
public class LanguageView : MonoBehaviour
{
	[Token(Token = "0x4001150")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public VrToggle toggle;

	[Token(Token = "0x4001151")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public SystemLanguage language;

	[Token(Token = "0x6001323")]
	[Address(RVA = "0xB5E9D4", Offset = "0xB5E9D4", VA = "0xB5E9D4")]
	private void Start()
	{
	}

	[Token(Token = "0x6001324")]
	[Address(RVA = "0xB5EA7C", Offset = "0xB5EA7C", VA = "0xB5EA7C")]
	private void CheckToEnable()
	{
	}

	[Token(Token = "0x6001325")]
	[Address(RVA = "0xB5EB40", Offset = "0xB5EB40", VA = "0xB5EB40")]
	public LanguageView()
	{
	}
}
[Token(Token = "0x2000382")]
public class Localisation
{
	[Token(Token = "0x4001153")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static SystemLanguage _language;

	[Token(Token = "0x4001154")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static Dictionary<string, string> localisedEN;

	[Token(Token = "0x4001155")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static Dictionary<string, string> localisedFR;

	[Token(Token = "0x4001156")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private static Dictionary<string, string> localisedES;

	[Token(Token = "0x4001157")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private static Dictionary<string, string> localisedDE;

	[Token(Token = "0x4001158")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private static Dictionary<string, string> localisedKO;

	[Token(Token = "0x4001159")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private static Dictionary<string, string> localisedJA;

	[Token(Token = "0x400115A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private static Dictionary<string, string> localisedZH;

	[Token(Token = "0x400115B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private static bool isSetup;

	[Token(Token = "0x400115C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private static CsvLoader csvLoader;

	[Token(Token = "0x170001B1")]
	public static SystemLanguage language
	{
		[Token(Token = "0x6001328")]
		[Address(RVA = "0xB5EC20", Offset = "0xB5EC20", VA = "0xB5EC20")]
		get
		{
			return default(SystemLanguage);
		}
		[Token(Token = "0x6001329")]
		[Address(RVA = "0xB5EC78", Offset = "0xB5EC78", VA = "0xB5EC78")]
		set
		{
		}
	}

	[Token(Token = "0x1400008C")]
	public static event Action OnLanguageChanged
	{
		[Token(Token = "0x6001326")]
		[Address(RVA = "0xB58538", Offset = "0xB58538", VA = "0xB58538")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6001327")]
		[Address(RVA = "0xB5EB48", Offset = "0xB5EB48", VA = "0xB5EB48")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x600132A")]
	[Address(RVA = "0xB5ED14", Offset = "0xB5ED14", VA = "0xB5ED14")]
	public static void Setup()
	{
	}

	[Token(Token = "0x600132B")]
	[Address(RVA = "0xB5EDB4", Offset = "0xB5EDB4", VA = "0xB5EDB4")]
	public static void UpdateDictionaries()
	{
	}

	[Token(Token = "0x600132C")]
	[Address(RVA = "0xB5962C", Offset = "0xB5962C", VA = "0xB5962C")]
	public static string GetLocalisedValue(string key)
	{
		return null;
	}

	[Token(Token = "0x600132D")]
	[Address(RVA = "0xB5EF74", Offset = "0xB5EF74", VA = "0xB5EF74")]
	public static void Add(string key, string value)
	{
	}

	[Token(Token = "0x600132E")]
	[Address(RVA = "0xB5EF78", Offset = "0xB5EF78", VA = "0xB5EF78")]
	public static void Replace(string key, string value)
	{
	}

	[Token(Token = "0x600132F")]
	[Address(RVA = "0xB5EF7C", Offset = "0xB5EF7C", VA = "0xB5EF7C")]
	public static void Remove(string key)
	{
	}

	[Token(Token = "0x6001330")]
	[Address(RVA = "0xB5EF80", Offset = "0xB5EF80", VA = "0xB5EF80")]
	public static Dictionary<string, string> GetDictionaryForEditor()
	{
		return null;
	}

	[Token(Token = "0x6001331")]
	[Address(RVA = "0xB5E968", Offset = "0xB5E968", VA = "0xB5E968")]
	public static string GetCurrentLanguageString()
	{
		return null;
	}

	[Token(Token = "0x6001332")]
	[Address(RVA = "0xB5F008", Offset = "0xB5F008", VA = "0xB5F008")]
	public Localisation()
	{
	}
}
[Serializable]
[Token(Token = "0x2000383")]
public struct LocalisedString
{
	[Token(Token = "0x400115D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public string key;

	[Token(Token = "0x170001B2")]
	public string value
	{
		[Token(Token = "0x6001335")]
		[Address(RVA = "0xB5F064", Offset = "0xB5F064", VA = "0xB5F064")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6001334")]
	[Address(RVA = "0xB5F05C", Offset = "0xB5F05C", VA = "0xB5F05C")]
	public LocalisedString(string key)
	{
	}

	[Token(Token = "0x6001336")]
	[Address(RVA = "0xB5F0BC", Offset = "0xB5F0BC", VA = "0xB5F0BC")]
	public static implicit operator LocalisedString(string key)
	{
		return default(LocalisedString);
	}
}
[Token(Token = "0x2000384")]
public class SetLanguageController : MonoBehaviour
{
	[Token(Token = "0x400115E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public VrToggle toggle;

	[Token(Token = "0x400115F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public SystemLanguage language;

	[Token(Token = "0x6001337")]
	[Address(RVA = "0xB5F0C0", Offset = "0xB5F0C0", VA = "0xB5F0C0")]
	private void Start()
	{
	}

	[Token(Token = "0x6001338")]
	[Address(RVA = "0xB5F14C", Offset = "0xB5F14C", VA = "0xB5F14C")]
	private void Toggle_OnToggleByuser(bool obj)
	{
	}

	[Token(Token = "0x6001339")]
	[Address(RVA = "0xB5F1B8", Offset = "0xB5F1B8", VA = "0xB5F1B8")]
	public SetLanguageController()
	{
	}
}
[Token(Token = "0x2000385")]
[RequireComponent(typeof(Text))]
[ExecuteInEditMode]
public class TextLocaliserUI : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x2000386")]
	public struct Modifiers
	{
		[Token(Token = "0x4001163")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public bool addBoldTags;

		[Token(Token = "0x4001164")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
		public bool addItalicsTags;

		[Token(Token = "0x4001165")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2")]
		public bool toUpper;

		[Token(Token = "0x4001166")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3")]
		public bool toLower;

		[Token(Token = "0x4001167")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public string prefix;

		[Token(Token = "0x4001168")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string suffix;

		[Token(Token = "0x4001169")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Space(15f)]
		public LanguageTextProps propsDefault;

		[Token(Token = "0x400116A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public LanguageTextProps propsEn;

		[Token(Token = "0x400116B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public LanguageTextProps propsJa;

		[Token(Token = "0x400116C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public LanguageTextProps propsKo;

		[Token(Token = "0x400116D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public LanguageTextProps propsFr;

		[Token(Token = "0x400116E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		public LanguageTextProps propsEs;

		[Token(Token = "0x400116F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public LanguageTextProps propsDe;

		[Token(Token = "0x4001170")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		public LanguageTextProps propsZh;

		[Token(Token = "0x600133E")]
		[Address(RVA = "0xB5F5C8", Offset = "0xB5F5C8", VA = "0xB5F5C8")]
		public bool ShouldOverride()
		{
			return default(bool);
		}

		[Token(Token = "0x600133F")]
		[Address(RVA = "0xB5F830", Offset = "0xB5F830", VA = "0xB5F830")]
		public bool OverrideExists()
		{
			return default(bool);
		}

		[Token(Token = "0x6001340")]
		[Address(RVA = "0xB5F6F4", Offset = "0xB5F6F4", VA = "0xB5F6F4")]
		public LanguageTextProps GetProps()
		{
			return default(LanguageTextProps);
		}
	}

	[Serializable]
	[Token(Token = "0x2000387")]
	public struct LanguageTextProps
	{
		[Token(Token = "0x4001171")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public bool overrideProps;

		[Token(Token = "0x4001172")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public int fontSize;

		[Token(Token = "0x4001173")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public bool bestFit;

		[Token(Token = "0x4001174")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public int bestFitMin;

		[Token(Token = "0x4001175")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int bestFitMax;
	}

	[Token(Token = "0x4001160")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public LocalisedString localisedString;

	[Token(Token = "0x4001161")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Modifiers modifiers;

	[Token(Token = "0x4001162")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	[Space(15f)]
	public Text text;

	[Token(Token = "0x600133A")]
	[Address(RVA = "0xB5F1C0", Offset = "0xB5F1C0", VA = "0xB5F1C0")]
	private void Start()
	{
	}

	[Token(Token = "0x600133B")]
	[Address(RVA = "0xB5F2C8", Offset = "0xB5F2C8", VA = "0xB5F2C8")]
	private void SetValue()
	{
	}

	[Token(Token = "0x600133C")]
	[Address(RVA = "0xB5F878", Offset = "0xB5F878", VA = "0xB5F878")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600133D")]
	[Address(RVA = "0xB5F918", Offset = "0xB5F918", VA = "0xB5F918")]
	public TextLocaliserUI()
	{
	}
}
[Token(Token = "0x2000388")]
public class PoolTest : MonoBehaviour
{
	[Token(Token = "0x2000389")]
	[CompilerGenerated]
	private sealed class <Start>d__2 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001178")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001179")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400117A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PoolTest <>4__this;

		[Token(Token = "0x170001B3")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001346")]
			[Address(RVA = "0xB5FD2C", Offset = "0xB5FD2C", VA = "0xB5FD2C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001B4")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001348")]
			[Address(RVA = "0xB5FD74", Offset = "0xB5FD74", VA = "0xB5FD74", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001343")]
		[Address(RVA = "0xB5F988", Offset = "0xB5F988", VA = "0xB5F988")]
		[DebuggerHidden]
		public <Start>d__2(int <>1__state)
		{
		}

		[Token(Token = "0x6001344")]
		[Address(RVA = "0xB5FA2C", Offset = "0xB5FA2C", VA = "0xB5FA2C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001345")]
		[Address(RVA = "0xB5FA30", Offset = "0xB5FA30", VA = "0xB5FA30", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001347")]
		[Address(RVA = "0xB5FD34", Offset = "0xB5FD34", VA = "0xB5FD34", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4001176")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObjectPool pool;

	[Token(Token = "0x4001177")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private List<GameObject> objects;

	[Token(Token = "0x6001341")]
	[Address(RVA = "0xB5F920", Offset = "0xB5F920", VA = "0xB5F920")]
	[IteratorStateMachine(typeof(<Start>d__2))]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x6001342")]
	[Address(RVA = "0xB5F9B0", Offset = "0xB5F9B0", VA = "0xB5F9B0")]
	public PoolTest()
	{
	}
}
[Token(Token = "0x200038A")]
[ExecuteInEditMode]
public class MathTestDebug : MonoBehaviour
{
	[Token(Token = "0x400117B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform referece;

	[Token(Token = "0x400117C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float angle;

	[Token(Token = "0x6001349")]
	[Address(RVA = "0xB5FD7C", Offset = "0xB5FD7C", VA = "0xB5FD7C")]
	private void Update()
	{
	}

	[Token(Token = "0x600134A")]
	[Address(RVA = "0xB5FDDC", Offset = "0xB5FDDC", VA = "0xB5FDDC")]
	public MathTestDebug()
	{
	}
}
[Token(Token = "0x200038B")]
public class MeshCombineTest : MonoBehaviour
{
	[Token(Token = "0x400117D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform scalableParent;

	[Token(Token = "0x400117E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject combineParent;

	[Token(Token = "0x400117F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[Space(25f)]
	public bool _toggleScale;

	[Token(Token = "0x600134B")]
	[Address(RVA = "0xB5FDE4", Offset = "0xB5FDE4", VA = "0xB5FDE4")]
	private void Start()
	{
	}

	[Token(Token = "0x600134C")]
	[Address(RVA = "0xB5FDF4", Offset = "0xB5FDF4", VA = "0xB5FDF4")]
	private void Update()
	{
	}

	[Token(Token = "0x600134D")]
	[Address(RVA = "0xB5FE64", Offset = "0xB5FE64", VA = "0xB5FE64")]
	public MeshCombineTest()
	{
	}
}
[Token(Token = "0x200038C")]
public class SteamTest : MonoBehaviour
{
	[Token(Token = "0x600134E")]
	[Address(RVA = "0xB5FE6C", Offset = "0xB5FE6C", VA = "0xB5FE6C")]
	private void Awake()
	{
	}

	[Token(Token = "0x600134F")]
	[Address(RVA = "0xB5FEE0", Offset = "0xB5FEE0", VA = "0xB5FEE0")]
	public SteamTest()
	{
	}
}
[Token(Token = "0x200038D")]
[ExecuteInEditMode]
public class TableDirectionDebug : MonoBehaviour
{
	[Token(Token = "0x4001180")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform table;

	[Token(Token = "0x4001181")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform reference;

	[Token(Token = "0x6001350")]
	[Address(RVA = "0xB5FEE8", Offset = "0xB5FEE8", VA = "0xB5FEE8")]
	private void Update()
	{
	}

	[Token(Token = "0x6001351")]
	[Address(RVA = "0xB601E8", Offset = "0xB601E8", VA = "0xB601E8")]
	public TableDirectionDebug()
	{
	}
}
[Token(Token = "0x200038E")]
[RequireComponent(typeof(Camera))]
[ImageEffectAllowedInSceneView]
[ExecuteInEditMode]
public class Pixelize : MonoBehaviour
{
	[Token(Token = "0x4001182")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Shader _screenAndMaskShader;

	[Token(Token = "0x4001183")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Material _screenAndMaskMaterial;

	[Token(Token = "0x4001184")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private RenderTexture _temporaryRenderTexture;

	[Token(Token = "0x4001185")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Shader _combineLayersShader;

	[Token(Token = "0x4001186")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Material _combineLayersMaterial;

	[Token(Token = "0x170001B5")]
	private Shader ScreenAndMaskShader
	{
		[Token(Token = "0x6001352")]
		[Address(RVA = "0xB601F0", Offset = "0xB601F0", VA = "0xB601F0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170001B6")]
	private Material ScreenAndMaskMaterial
	{
		[Token(Token = "0x6001353")]
		[Address(RVA = "0xB60284", Offset = "0xB60284", VA = "0xB60284")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170001B7")]
	private RenderTexture TemporaryRenderTarget
	{
		[Token(Token = "0x6001354")]
		[Address(RVA = "0xB60340", Offset = "0xB60340", VA = "0xB60340")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170001B8")]
	private Shader CombineLayersShader
	{
		[Token(Token = "0x6001355")]
		[Address(RVA = "0xB604A4", Offset = "0xB604A4", VA = "0xB604A4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170001B9")]
	private Material CombineLayersMaterial
	{
		[Token(Token = "0x6001356")]
		[Address(RVA = "0xB60538", Offset = "0xB60538", VA = "0xB60538")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6001357")]
	[Address(RVA = "0xB605F4", Offset = "0xB605F4", VA = "0xB605F4")]
	private void OnRenderImage(RenderTexture src, RenderTexture dest)
	{
	}

	[Token(Token = "0x6001358")]
	[Address(RVA = "0xB603B4", Offset = "0xB603B4", VA = "0xB603B4")]
	private void CreateTemporaryRenderTarget()
	{
	}

	[Token(Token = "0x6001359")]
	[Address(RVA = "0xB606B0", Offset = "0xB606B0", VA = "0xB606B0")]
	private void CheckTemporaryRenderTarget()
	{
	}

	[Token(Token = "0x600135A")]
	[Address(RVA = "0xB60730", Offset = "0xB60730", VA = "0xB60730")]
	private void ReleaseTemporaryRenderTarget()
	{
	}

	[Token(Token = "0x600135B")]
	[Address(RVA = "0xB60758", Offset = "0xB60758", VA = "0xB60758")]
	public Pixelize()
	{
	}
}
[Token(Token = "0x200038F")]
[ExecuteInEditMode]
public class VolumetricSphere : MonoBehaviour
{
	[Token(Token = "0x4001187")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Header("Parameters")]
	[Tooltip("The radius of the sphere")]
	[Range(0f, 50f)]
	public float radius;

	[Token(Token = "0x4001188")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[Tooltip("The density of the sphere")]
	[Range(0f, 10f)]
	public float density;

	[Token(Token = "0x4001189")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[Tooltip("The curve of the fade-out")]
	[Range(0.2f, 5f)]
	public float exponent;

	[Token(Token = "0x400118A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[Range(1f, 10f)]
	[Tooltip("The maximum pixelization size")]
	public int maxPixelizationLevel;

	[Token(Token = "0x400118B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[Tooltip("Enabled the interpolation between the layers of different pixels size")]
	public bool enableLayersInterpolation;

	[Token(Token = "0x400118C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	[Tooltip("Outputs the sphere mask")]
	[Header("Debug")]
	public bool debugSphere;

	[Token(Token = "0x600135C")]
	[Address(RVA = "0xB60760", Offset = "0xB60760", VA = "0xB60760")]
	private void Update()
	{
	}

	[Token(Token = "0x600135D")]
	[Address(RVA = "0xB608E0", Offset = "0xB608E0", VA = "0xB608E0")]
	private void OnDrawGizmosSelected()
	{
	}

	[Token(Token = "0x600135E")]
	[Address(RVA = "0xB6092C", Offset = "0xB6092C", VA = "0xB6092C")]
	public VolumetricSphere()
	{
	}
}
[Token(Token = "0x2000390")]
public class SimpleGPUInstancingExample : MonoBehaviour
{
	[Token(Token = "0x400118D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform Prefab;

	[Token(Token = "0x400118E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Material InstancedMaterial;

	[Token(Token = "0x600135F")]
	[Address(RVA = "0xB60958", Offset = "0xB60958", VA = "0xB60958")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001360")]
	[Address(RVA = "0xB60BA4", Offset = "0xB60BA4", VA = "0xB60BA4")]
	public SimpleGPUInstancingExample()
	{
	}
}
[Token(Token = "0x2000391")]
public class SimpleMoveExample : MonoBehaviour
{
	[Token(Token = "0x400118F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Vector3 m_previous;

	[Token(Token = "0x4001190")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Vector3 m_target;

	[Token(Token = "0x4001191")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Vector3 m_originalPosition;

	[Token(Token = "0x4001192")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public Vector3 BoundingVolume;

	[Token(Token = "0x4001193")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float Speed;

	[Token(Token = "0x6001361")]
	[Address(RVA = "0xB60BAC", Offset = "0xB60BAC", VA = "0xB60BAC")]
	private void Start()
	{
	}

	[Token(Token = "0x6001362")]
	[Address(RVA = "0xB60C1C", Offset = "0xB60C1C", VA = "0xB60C1C")]
	private void Update()
	{
	}

	[Token(Token = "0x6001363")]
	[Address(RVA = "0xB60E20", Offset = "0xB60E20", VA = "0xB60E20")]
	public SimpleMoveExample()
	{
	}
}
[Token(Token = "0x2000392")]
public class Smear : MonoBehaviour
{
	[Token(Token = "0x4001194")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Queue<Vector3> m_recentPositions;

	[Token(Token = "0x4001195")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int FramesBufferSize;

	[Token(Token = "0x4001196")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Renderer Renderer;

	[Token(Token = "0x4001197")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Material m_instancedMaterial;

	[Token(Token = "0x170001BA")]
	private Material InstancedMaterial
	{
		[Token(Token = "0x6001364")]
		[Address(RVA = "0xB60E34", Offset = "0xB60E34", VA = "0xB60E34")]
		get
		{
			return null;
		}
		[Token(Token = "0x6001365")]
		[Address(RVA = "0xB60E3C", Offset = "0xB60E3C", VA = "0xB60E3C")]
		set
		{
		}
	}

	[Token(Token = "0x6001366")]
	[Address(RVA = "0xB60E44", Offset = "0xB60E44", VA = "0xB60E44")]
	private void Start()
	{
	}

	[Token(Token = "0x6001367")]
	[Address(RVA = "0xB60E6C", Offset = "0xB60E6C", VA = "0xB60E6C")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6001368")]
	[Address(RVA = "0xB60F90", Offset = "0xB60F90", VA = "0xB60F90")]
	public Smear()
	{
	}
}
[Token(Token = "0x2000393")]
[ExecuteInEditMode]
public class SRPHDOmniDecalMovement : MonoBehaviour
{
	[Token(Token = "0x4001198")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Transform m_transform;

	[Token(Token = "0x4001199")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Vector3 m_speed;

	[Token(Token = "0x6001369")]
	[Address(RVA = "0xB6100C", Offset = "0xB6100C", VA = "0xB6100C")]
	private void Awake()
	{
	}

	[Token(Token = "0x600136A")]
	[Address(RVA = "0xB61028", Offset = "0xB61028", VA = "0xB61028")]
	private void Update()
	{
	}

	[Token(Token = "0x600136B")]
	[Address(RVA = "0xB610E0", Offset = "0xB610E0", VA = "0xB610E0")]
	public SRPHDOmniDecalMovement()
	{
	}
}
[Token(Token = "0x2000394")]
[ExecuteInEditMode]
public class PostProcessExample : MonoBehaviour
{
	[Token(Token = "0x400119A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Material PostProcessMat;

	[Token(Token = "0x600136C")]
	[Address(RVA = "0xB610F8", Offset = "0xB610F8", VA = "0xB610F8")]
	private void Awake()
	{
	}

	[Token(Token = "0x600136D")]
	[Address(RVA = "0xB6119C", Offset = "0xB6119C", VA = "0xB6119C")]
	private void OnRenderImage(RenderTexture src, RenderTexture dest)
	{
	}

	[Token(Token = "0x600136E")]
	[Address(RVA = "0xB61210", Offset = "0xB61210", VA = "0xB61210")]
	public PostProcessExample()
	{
	}
}
[Token(Token = "0x2000395")]
[ExecuteInEditMode]
public class SpriteMaskController : MonoBehaviour
{
	[Token(Token = "0x400119B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private SpriteRenderer m_spriteRenderer;

	[Token(Token = "0x400119C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Vector4 m_uvs;

	[Token(Token = "0x600136F")]
	[Address(RVA = "0xB61218", Offset = "0xB61218", VA = "0xB61218")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6001370")]
	[Address(RVA = "0xB612C0", Offset = "0xB612C0", VA = "0xB612C0")]
	public SpriteMaskController()
	{
	}
}
[Token(Token = "0x2000396")]
public class Amplitude
{
	[Token(Token = "0x400119D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly string UnityLibraryName;

	[Token(Token = "0x400119E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static readonly string UnityLibraryVersion;

	[Token(Token = "0x400119F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static Dictionary<string, Amplitude> instances;

	[Token(Token = "0x40011A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static readonly object instanceLock;

	[Token(Token = "0x40011A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private static readonly string androidPluginName;

	[Token(Token = "0x40011A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private AndroidJavaClass pluginClass;

	[Token(Token = "0x40011A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool logging;

	[Token(Token = "0x40011A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private string instanceName;

	[Token(Token = "0x170001BB")]
	public static Amplitude Instance
	{
		[Token(Token = "0x6001373")]
		[Address(RVA = "0xB616EC", Offset = "0xB616EC", VA = "0xB616EC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6001371")]
	[Address(RVA = "0xB612C8", Offset = "0xB612C8", VA = "0xB612C8")]
	public static Amplitude getInstance()
	{
		return null;
	}

	[Token(Token = "0x6001372")]
	[Address(RVA = "0xB61318", Offset = "0xB61318", VA = "0xB61318")]
	public static Amplitude getInstance(string instanceName)
	{
		return null;
	}

	[Token(Token = "0x6001374")]
	[Address(RVA = "0xB615B4", Offset = "0xB615B4", VA = "0xB615B4")]
	public Amplitude(string instanceName)
	{
	}

	[Token(Token = "0x6001375")]
	[Address(RVA = "0xB619B8", Offset = "0xB619B8", VA = "0xB619B8")]
	protected void Log(string message)
	{
	}

	[Token(Token = "0x6001376")]
	protected void Log<T>(string message, string property, IEnumerable<T> array)
	{
	}

	[Token(Token = "0x6001377")]
	[Address(RVA = "0xB61A28", Offset = "0xB61A28", VA = "0xB61A28")]
	public void init(string apiKey)
	{
	}

	[Token(Token = "0x6001378")]
	[Address(RVA = "0xB620F4", Offset = "0xB620F4", VA = "0xB620F4")]
	public void init(string apiKey, string userId)
	{
	}

	[Token(Token = "0x6001379")]
	[Address(RVA = "0xB62804", Offset = "0xB62804", VA = "0xB62804")]
	public void setTrackingOptions(IDictionary<string, bool> trackingOptions)
	{
	}

	[Token(Token = "0x600137A")]
	[Address(RVA = "0xB6295C", Offset = "0xB6295C", VA = "0xB6295C")]
	public void logEvent(string evt)
	{
	}

	[Token(Token = "0x600137B")]
	[Address(RVA = "0xB62A9C", Offset = "0xB62A9C", VA = "0xB62A9C")]
	public void logEvent(string evt, IDictionary<string, object> properties)
	{
	}

	[Token(Token = "0x600137C")]
	[Address(RVA = "0xB62C64", Offset = "0xB62C64", VA = "0xB62C64")]
	public void logEvent(string evt, IDictionary<string, object> properties, bool outOfSession)
	{
	}

	[Token(Token = "0x600137D")]
	[Address(RVA = "0xB62E9C", Offset = "0xB62E9C", VA = "0xB62E9C")]
	public void setOffline(bool offline)
	{
	}

	[Token(Token = "0x600137E")]
	[Address(RVA = "0xB63014", Offset = "0xB63014", VA = "0xB63014")]
	public void setUserId(string userId)
	{
	}

	[Token(Token = "0x600137F")]
	[Address(RVA = "0xB63154", Offset = "0xB63154", VA = "0xB63154")]
	public void setUserProperties(IDictionary<string, object> properties)
	{
	}

	[Token(Token = "0x6001380")]
	[Address(RVA = "0xB632EC", Offset = "0xB632EC", VA = "0xB632EC")]
	public void setOptOut(bool enabled)
	{
	}

	[Token(Token = "0x6001381")]
	[Address(RVA = "0xB63464", Offset = "0xB63464", VA = "0xB63464")]
	public void setMinTimeBetweenSessionsMillis(long minTimeBetweenSessionsMillis)
	{
	}

	[Token(Token = "0x6001382")]
	[Address(RVA = "0xB635DC", Offset = "0xB635DC", VA = "0xB635DC")]
	public void setDeviceId(string deviceId)
	{
	}

	[Token(Token = "0x6001383")]
	[Address(RVA = "0xB6371C", Offset = "0xB6371C", VA = "0xB6371C")]
	public void enableCoppaControl()
	{
	}

	[Token(Token = "0x6001384")]
	[Address(RVA = "0xB63814", Offset = "0xB63814", VA = "0xB63814")]
	public void disableCoppaControl()
	{
	}

	[Token(Token = "0x6001385")]
	[Address(RVA = "0xB6396C", Offset = "0xB6396C", VA = "0xB6396C")]
	public void setServerUrl(string serverUrl)
	{
	}

	[Token(Token = "0x6001386")]
	[Address(RVA = "0xB63AFC", Offset = "0xB63AFC", VA = "0xB63AFC")]
	[Obsolete("Please call setUserProperties instead", false)]
	public void setGlobalUserProperties(IDictionary<string, object> properties)
	{
	}

	[Token(Token = "0x6001387")]
	[Address(RVA = "0xB63B00", Offset = "0xB63B00", VA = "0xB63B00")]
	public void logRevenue(double amount)
	{
	}

	[Token(Token = "0x6001388")]
	[Address(RVA = "0xB63C80", Offset = "0xB63C80", VA = "0xB63C80")]
	public void logRevenue(string productId, int quantity, double price)
	{
	}

	[Token(Token = "0x6001389")]
	[Address(RVA = "0xB63EA4", Offset = "0xB63EA4", VA = "0xB63EA4")]
	public void logRevenue(string productId, int quantity, double price, string receipt, string receiptSignature)
	{
	}

	[Token(Token = "0x600138A")]
	[Address(RVA = "0xB64128", Offset = "0xB64128", VA = "0xB64128")]
	public void logRevenue(string productId, int quantity, double price, string receipt, string receiptSignature, string revenueType, IDictionary<string, object> eventProperties)
	{
	}

	[Token(Token = "0x600138B")]
	[Address(RVA = "0xB6453C", Offset = "0xB6453C", VA = "0xB6453C")]
	public string getDeviceId()
	{
		return null;
	}

	[Token(Token = "0x600138C")]
	[Address(RVA = "0xB6462C", Offset = "0xB6462C", VA = "0xB6462C")]
	public void regenerateDeviceId()
	{
	}

	[Token(Token = "0x600138D")]
	[Address(RVA = "0xB64704", Offset = "0xB64704", VA = "0xB64704")]
	public void useAdvertisingIdForDeviceId()
	{
	}

	[Token(Token = "0x600138E")]
	[Address(RVA = "0xB647DC", Offset = "0xB647DC", VA = "0xB647DC")]
	public void trackSessionEvents(bool enabled)
	{
	}

	[Token(Token = "0x600138F")]
	[Address(RVA = "0xB64954", Offset = "0xB64954", VA = "0xB64954")]
	public long getSessionId()
	{
		return default(long);
	}

	[Token(Token = "0x6001390")]
	[Address(RVA = "0xB64A44", Offset = "0xB64A44", VA = "0xB64A44")]
	public void uploadEvents()
	{
	}

	[Token(Token = "0x6001391")]
	[Address(RVA = "0xB64B1C", Offset = "0xB64B1C", VA = "0xB64B1C")]
	public void clearUserProperties()
	{
	}

	[Token(Token = "0x6001392")]
	[Address(RVA = "0xB64C74", Offset = "0xB64C74", VA = "0xB64C74")]
	public void unsetUserProperty(string property)
	{
	}

	[Token(Token = "0x6001393")]
	[Address(RVA = "0xB64DB4", Offset = "0xB64DB4", VA = "0xB64DB4")]
	public void setOnceUserProperty(string property, bool value)
	{
	}

	[Token(Token = "0x6001394")]
	[Address(RVA = "0xB64F5C", Offset = "0xB64F5C", VA = "0xB64F5C")]
	public void setOnceUserProperty(string property, double value)
	{
	}

	[Token(Token = "0x6001395")]
	[Address(RVA = "0xB65104", Offset = "0xB65104", VA = "0xB65104")]
	public void setOnceUserProperty(string property, float value)
	{
	}

	[Token(Token = "0x6001396")]
	[Address(RVA = "0xB652AC", Offset = "0xB652AC", VA = "0xB652AC")]
	public void setOnceUserProperty(string property, int value)
	{
	}

	[Token(Token = "0x6001397")]
	[Address(RVA = "0xB65454", Offset = "0xB65454", VA = "0xB65454")]
	public void setOnceUserProperty(string property, long value)
	{
	}

	[Token(Token = "0x6001398")]
	[Address(RVA = "0xB655FC", Offset = "0xB655FC", VA = "0xB655FC")]
	public void setOnceUserProperty(string property, string value)
	{
	}

	[Token(Token = "0x6001399")]
	[Address(RVA = "0xB6576C", Offset = "0xB6576C", VA = "0xB6576C")]
	public void setOnceUserProperty(string property, IDictionary<string, object> values)
	{
	}

	[Token(Token = "0x600139A")]
	public void setOnceUserProperty<T>(string property, IList<T> values)
	{
	}

	[Token(Token = "0x600139B")]
	[Address(RVA = "0xB658F4", Offset = "0xB658F4", VA = "0xB658F4")]
	public void setOnceUserProperty(string property, bool[] array)
	{
	}

	[Token(Token = "0x600139C")]
	[Address(RVA = "0xB65A7C", Offset = "0xB65A7C", VA = "0xB65A7C")]
	public void setOnceUserProperty(string property, double[] array)
	{
	}

	[Token(Token = "0x600139D")]
	[Address(RVA = "0xB65C04", Offset = "0xB65C04", VA = "0xB65C04")]
	public void setOnceUserProperty(string property, float[] array)
	{
	}

	[Token(Token = "0x600139E")]
	[Address(RVA = "0xB65D8C", Offset = "0xB65D8C", VA = "0xB65D8C")]
	public void setOnceUserProperty(string property, int[] array)
	{
	}

	[Token(Token = "0x600139F")]
	[Address(RVA = "0xB65F14", Offset = "0xB65F14", VA = "0xB65F14")]
	public void setOnceUserProperty(string property, long[] array)
	{
	}

	[Token(Token = "0x60013A0")]
	[Address(RVA = "0xB6609C", Offset = "0xB6609C", VA = "0xB6609C")]
	public void setOnceUserProperty(string property, string[] array)
	{
	}

	[Token(Token = "0x60013A1")]
	[Address(RVA = "0xB66224", Offset = "0xB66224", VA = "0xB66224")]
	public void setUserProperty(string property, bool value)
	{
	}

	[Token(Token = "0x60013A2")]
	[Address(RVA = "0xB663CC", Offset = "0xB663CC", VA = "0xB663CC")]
	public void setUserProperty(string property, double value)
	{
	}

	[Token(Token = "0x60013A3")]
	[Address(RVA = "0xB66574", Offset = "0xB66574", VA = "0xB66574")]
	public void setUserProperty(string property, float value)
	{
	}

	[Token(Token = "0x60013A4")]
	[Address(RVA = "0xB6671C", Offset = "0xB6671C", VA = "0xB6671C")]
	public void setUserProperty(string property, int value)
	{
	}

	[Token(Token = "0x60013A5")]
	[Address(RVA = "0xB668C4", Offset = "0xB668C4", VA = "0xB668C4")]
	public void setUserProperty(string property, long value)
	{
	}

	[Token(Token = "0x60013A6")]
	[Address(RVA = "0xB66A6C", Offset = "0xB66A6C", VA = "0xB66A6C")]
	public void setUserProperty(string property, string value)
	{
	}

	[Token(Token = "0x60013A7")]
	[Address(RVA = "0xB66BDC", Offset = "0xB66BDC", VA = "0xB66BDC")]
	public void setUserProperty(string property, IDictionary<string, object> values)
	{
	}

	[Token(Token = "0x60013A8")]
	public void setUserProperty<T>(string property, IList<T> values)
	{
	}

	[Token(Token = "0x60013A9")]
	[Address(RVA = "0xB66D64", Offset = "0xB66D64", VA = "0xB66D64")]
	public void setUserProperty(string property, bool[] array)
	{
	}

	[Token(Token = "0x60013AA")]
	[Address(RVA = "0xB66EEC", Offset = "0xB66EEC", VA = "0xB66EEC")]
	public void setUserProperty(string property, double[] array)
	{
	}

	[Token(Token = "0x60013AB")]
	[Address(RVA = "0xB67074", Offset = "0xB67074", VA = "0xB67074")]
	public void setUserProperty(string property, float[] array)
	{
	}

	[Token(Token = "0x60013AC")]
	[Address(RVA = "0xB671FC", Offset = "0xB671FC", VA = "0xB671FC")]
	public void setUserProperty(string property, int[] array)
	{
	}

	[Token(Token = "0x60013AD")]
	[Address(RVA = "0xB67384", Offset = "0xB67384", VA = "0xB67384")]
	public void setUserProperty(string property, long[] array)
	{
	}

	[Token(Token = "0x60013AE")]
	[Address(RVA = "0xB6750C", Offset = "0xB6750C", VA = "0xB6750C")]
	public void setUserProperty(string property, string[] array)
	{
	}

	[Token(Token = "0x60013AF")]
	[Address(RVA = "0xB67694", Offset = "0xB67694", VA = "0xB67694")]
	public void addUserProperty(string property, double value)
	{
	}

	[Token(Token = "0x60013B0")]
	[Address(RVA = "0xB6783C", Offset = "0xB6783C", VA = "0xB6783C")]
	public void addUserProperty(string property, float value)
	{
	}

	[Token(Token = "0x60013B1")]
	[Address(RVA = "0xB679E4", Offset = "0xB679E4", VA = "0xB679E4")]
	public void addUserProperty(string property, int value)
	{
	}

	[Token(Token = "0x60013B2")]
	[Address(RVA = "0xB67B8C", Offset = "0xB67B8C", VA = "0xB67B8C")]
	public void addUserProperty(string property, long value)
	{
	}

	[Token(Token = "0x60013B3")]
	[Address(RVA = "0xB67D34", Offset = "0xB67D34", VA = "0xB67D34")]
	public void addUserProperty(string property, string value)
	{
	}

	[Token(Token = "0x60013B4")]
	[Address(RVA = "0xB67EA4", Offset = "0xB67EA4", VA = "0xB67EA4")]
	public void addUserProperty(string property, IDictionary<string, object> values)
	{
	}

	[Token(Token = "0x60013B5")]
	[Address(RVA = "0xB6802C", Offset = "0xB6802C", VA = "0xB6802C")]
	public void appendUserProperty(string property, bool value)
	{
	}

	[Token(Token = "0x60013B6")]
	[Address(RVA = "0xB681D4", Offset = "0xB681D4", VA = "0xB681D4")]
	public void appendUserProperty(string property, double value)
	{
	}

	[Token(Token = "0x60013B7")]
	[Address(RVA = "0xB6837C", Offset = "0xB6837C", VA = "0xB6837C")]
	public void appendUserProperty(string property, float value)
	{
	}

	[Token(Token = "0x60013B8")]
	[Address(RVA = "0xB68524", Offset = "0xB68524", VA = "0xB68524")]
	public void appendUserProperty(string property, int value)
	{
	}

	[Token(Token = "0x60013B9")]
	[Address(RVA = "0xB686CC", Offset = "0xB686CC", VA = "0xB686CC")]
	public void appendUserProperty(string property, long value)
	{
	}

	[Token(Token = "0x60013BA")]
	[Address(RVA = "0xB68874", Offset = "0xB68874", VA = "0xB68874")]
	public void appendUserProperty(string property, string value)
	{
	}

	[Token(Token = "0x60013BB")]
	[Address(RVA = "0xB689E4", Offset = "0xB689E4", VA = "0xB689E4")]
	public void appendUserProperty(string property, IDictionary<string, object> values)
	{
	}

	[Token(Token = "0x60013BC")]
	public void appendUserProperty<T>(string property, IList<T> values)
	{
	}

	[Token(Token = "0x60013BD")]
	[Address(RVA = "0xB68B6C", Offset = "0xB68B6C", VA = "0xB68B6C")]
	public void appendUserProperty(string property, bool[] array)
	{
	}

	[Token(Token = "0x60013BE")]
	[Address(RVA = "0xB68CF4", Offset = "0xB68CF4", VA = "0xB68CF4")]
	public void appendUserProperty(string property, double[] array)
	{
	}

	[Token(Token = "0x60013BF")]
	[Address(RVA = "0xB68E7C", Offset = "0xB68E7C", VA = "0xB68E7C")]
	public void appendUserProperty(string property, float[] array)
	{
	}

	[Token(Token = "0x60013C0")]
	[Address(RVA = "0xB69004", Offset = "0xB69004", VA = "0xB69004")]
	public void appendUserProperty(string property, int[] array)
	{
	}

	[Token(Token = "0x60013C1")]
	[Address(RVA = "0xB6918C", Offset = "0xB6918C", VA = "0xB6918C")]
	public void appendUserProperty(string property, long[] array)
	{
	}

	[Token(Token = "0x60013C2")]
	[Address(RVA = "0xB69314", Offset = "0xB69314", VA = "0xB69314")]
	public void appendUserProperty(string property, string[] array)
	{
	}

	[Token(Token = "0x60013C3")]
	[Address(RVA = "0xB61738", Offset = "0xB61738", VA = "0xB61738")]
	private void setLibraryName(string libraryName)
	{
	}

	[Token(Token = "0x60013C4")]
	[Address(RVA = "0xB61878", Offset = "0xB61878", VA = "0xB61878")]
	private void setLibraryVersion(string libraryVersion)
	{
	}

	[Token(Token = "0x60013C5")]
	[Address(RVA = "0xB6949C", Offset = "0xB6949C", VA = "0xB6949C")]
	public void startSession()
	{
	}

	[Token(Token = "0x60013C6")]
	[Address(RVA = "0xB694A0", Offset = "0xB694A0", VA = "0xB694A0")]
	public void endSession()
	{
	}
}
[Token(Token = "0x2000397")]
public static class ConsoleProDebug
{
	[Token(Token = "0x60013C8")]
	[Address(RVA = "0xB69584", Offset = "0xB69584", VA = "0xB69584")]
	public static void Clear()
	{
	}

	[Token(Token = "0x60013C9")]
	[Address(RVA = "0xB69588", Offset = "0xB69588", VA = "0xB69588")]
	public static void LogToFilter(string inLog, string inFilterName)
	{
	}

	[Token(Token = "0x60013CA")]
	[Address(RVA = "0xB6963C", Offset = "0xB6963C", VA = "0xB6963C")]
	public static void Watch(string inName, string inValue)
	{
	}
}
[Token(Token = "0x2000398")]
public class OvrAvatarTestDriver : OvrAvatarDriver
{
	[Token(Token = "0x40011A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private Vector3 headPos;

	[Token(Token = "0x40011A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private Quaternion headRot;

	[Token(Token = "0x40011A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	private float voiceAmplitude;

	[Token(Token = "0x60013CB")]
	[Address(RVA = "0xB69824", Offset = "0xB69824", VA = "0xB69824")]
	private ControllerPose GetMalibuControllerPose(OVRInput.Controller controller)
	{
		return default(ControllerPose);
	}

	[Token(Token = "0x60013CC")]
	[Address(RVA = "0xB69964", Offset = "0xB69964", VA = "0xB69964")]
	private ControllerPose GetControllerPose(OVRInput.Controller controller)
	{
		return default(ControllerPose);
	}

	[Token(Token = "0x60013CD")]
	[Address(RVA = "0xB69C94", Offset = "0xB69C94", VA = "0xB69C94")]
	private void CalculateCurrentPose()
	{
	}

	[Token(Token = "0x60013CE")]
	[Address(RVA = "0xB69E2C", Offset = "0xB69E2C", VA = "0xB69E2C", Slot = "4")]
	public override void UpdateTransforms(IntPtr sdkAvatar)
	{
	}

	[Token(Token = "0x60013CF")]
	[Address(RVA = "0xB69E58", Offset = "0xB69E58", VA = "0xB69E58")]
	public OvrAvatarTestDriver()
	{
	}
}
[Token(Token = "0x2000399")]
public class PoseEditHelper : MonoBehaviour
{
	[Token(Token = "0x40011A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform poseRoot;

	[Token(Token = "0x60013D0")]
	[Address(RVA = "0xB69EC0", Offset = "0xB69EC0", VA = "0xB69EC0")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x60013D1")]
	[Address(RVA = "0xB69F3C", Offset = "0xB69F3C", VA = "0xB69F3C")]
	private void DrawJoints(Transform joint)
	{
	}

	[Token(Token = "0x60013D2")]
	[Address(RVA = "0xB6A0AC", Offset = "0xB6A0AC", VA = "0xB6A0AC")]
	public PoseEditHelper()
	{
	}
}
[Token(Token = "0x200039A")]
public class GazeTargetSpawner : MonoBehaviour
{
	[Token(Token = "0x40011A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject GazeTargetPrefab;

	[Token(Token = "0x40011AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int NumberOfDummyTargets;

	[Token(Token = "0x40011AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public int RadiusMultiplier;

	[Token(Token = "0x40011AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private bool isVisible;

	[Token(Token = "0x170001BC")]
	public bool IsVisible
	{
		[Token(Token = "0x60013D3")]
		[Address(RVA = "0xB6A0B4", Offset = "0xB6A0B4", VA = "0xB6A0B4")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60013D4")]
		[Address(RVA = "0xB6A0BC", Offset = "0xB6A0BC", VA = "0xB6A0BC")]
		set
		{
		}
	}

	[Token(Token = "0x60013D5")]
	[Address(RVA = "0xB6A1E0", Offset = "0xB6A1E0", VA = "0xB6A1E0")]
	private void Start()
	{
	}

	[Token(Token = "0x60013D6")]
	[Address(RVA = "0xB6A3D0", Offset = "0xB6A3D0", VA = "0xB6A3D0")]
	private void OnValidate()
	{
	}

	[Token(Token = "0x60013D7")]
	[Address(RVA = "0xB6A3D8", Offset = "0xB6A3D8", VA = "0xB6A3D8")]
	public GazeTargetSpawner()
	{
	}
}
[Token(Token = "0x200039B")]
public class RemoteLoopbackManager : MonoBehaviour
{
	[Token(Token = "0x200039C")]
	private class PacketLatencyPair
	{
		[Token(Token = "0x40011B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public byte[] PacketData;

		[Token(Token = "0x40011B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float FakeLatency;

		[Token(Token = "0x60013DE")]
		[Address(RVA = "0xB6AFC8", Offset = "0xB6AFC8", VA = "0xB6AFC8")]
		public PacketLatencyPair()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x200039D")]
	public class SimulatedLatencySettings
	{
		[Token(Token = "0x40011B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[Range(0f, 0.5f)]
		public float FakeLatencyMax;

		[Token(Token = "0x40011B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[Range(0f, 0.5f)]
		public float FakeLatencyMin;

		[Token(Token = "0x40011B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Range(0f, 1f)]
		public float LatencyWeight;

		[Token(Token = "0x40011B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[Range(0f, 10f)]
		public int MaxSamples;

		[Token(Token = "0x40011B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal float AverageWindow;

		[Token(Token = "0x40011B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		internal float LatencySum;

		[Token(Token = "0x40011BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		internal LinkedList<float> LatencyValues;

		[Token(Token = "0x60013DF")]
		[Address(RVA = "0xB6AFD0", Offset = "0xB6AFD0", VA = "0xB6AFD0")]
		public float NextValue()
		{
			return default(float);
		}

		[Token(Token = "0x60013E0")]
		[Address(RVA = "0xB6B1AC", Offset = "0xB6B1AC", VA = "0xB6B1AC")]
		public SimulatedLatencySettings()
		{
		}
	}

	[Token(Token = "0x40011AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OvrAvatar LocalAvatar;

	[Token(Token = "0x40011AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public OvrAvatar LoopbackAvatar;

	[Token(Token = "0x40011AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public SimulatedLatencySettings LatencySettings;

	[Token(Token = "0x40011B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private int PacketSequence;

	[Token(Token = "0x40011B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private LinkedList<PacketLatencyPair> packetQueue;

	[Token(Token = "0x60013D8")]
	[Address(RVA = "0xB6A3EC", Offset = "0xB6A3EC", VA = "0xB6A3EC")]
	private void Start()
	{
	}

	[Token(Token = "0x60013D9")]
	[Address(RVA = "0xB6A530", Offset = "0xB6A530", VA = "0xB6A530")]
	private void OnLocalAvatarPacketRecorded(object sender, OvrAvatar.PacketEventArgs args)
	{
	}

	[Token(Token = "0x60013DA")]
	[Address(RVA = "0xB6A920", Offset = "0xB6A920", VA = "0xB6A920")]
	private void Update()
	{
	}

	[Token(Token = "0x60013DB")]
	[Address(RVA = "0xB6A880", Offset = "0xB6A880", VA = "0xB6A880")]
	private void SendPacketData(byte[] data)
	{
	}

	[Token(Token = "0x60013DC")]
	[Address(RVA = "0xB6ACAC", Offset = "0xB6ACAC", VA = "0xB6ACAC")]
	private void ReceivePacketData(byte[] data)
	{
	}

	[Token(Token = "0x60013DD")]
	[Address(RVA = "0xB6B104", Offset = "0xB6B104", VA = "0xB6B104")]
	public RemoteLoopbackManager()
	{
	}
}
[Token(Token = "0x200039E")]
public class P2PManager
{
	[Token(Token = "0x200039F")]
	private enum MessageType : byte
	{
		[Token(Token = "0x40011BC")]
		Update = 1
	}

	[Token(Token = "0x60013E1")]
	[Address(RVA = "0xB6B240", Offset = "0xB6B240", VA = "0xB6B240")]
	public P2PManager()
	{
	}

	[Token(Token = "0x60013E2")]
	[Address(RVA = "0xB6B30C", Offset = "0xB6B30C", VA = "0xB6B30C")]
	public void ConnectTo(ulong userID)
	{
	}

	[Token(Token = "0x60013E3")]
	[Address(RVA = "0xB6B54C", Offset = "0xB6B54C", VA = "0xB6B54C")]
	public void Disconnect(ulong userID)
	{
	}

	[Token(Token = "0x60013E4")]
	[Address(RVA = "0xB6B694", Offset = "0xB6B694", VA = "0xB6B694")]
	private void PeerConnectRequestCallback(Message<NetworkingPeer> msg)
	{
	}

	[Token(Token = "0x60013E5")]
	[Address(RVA = "0xB6B7E4", Offset = "0xB6B7E4", VA = "0xB6B7E4")]
	private void ConnectionStateChangedCallback(Message<NetworkingPeer> msg)
	{
	}

	[Token(Token = "0x60013E6")]
	[Address(RVA = "0xB6B9D0", Offset = "0xB6B9D0", VA = "0xB6B9D0")]
	public void SendAvatarUpdate(ulong userID, Transform rootTransform, uint sequence, byte[] avatarPacket)
	{
	}

	[Token(Token = "0x60013E7")]
	[Address(RVA = "0xB6BD88", Offset = "0xB6BD88", VA = "0xB6BD88")]
	public void GetRemotePackets()
	{
	}

	[Token(Token = "0x60013E8")]
	[Address(RVA = "0xB6C010", Offset = "0xB6C010", VA = "0xB6C010")]
	public void processAvatarPacket(RemotePlayer remote, ref byte[] packet, ref int offset)
	{
	}

	[Token(Token = "0x60013E9")]
	[Address(RVA = "0xB6BB94", Offset = "0xB6BB94", VA = "0xB6BB94")]
	private void PackByte(byte b, byte[] buf, ref int offset)
	{
	}

	[Token(Token = "0x60013EA")]
	[Address(RVA = "0xB6BF5C", Offset = "0xB6BF5C", VA = "0xB6BF5C")]
	private byte ReadByte(byte[] buf, ref int offset)
	{
		return default(byte);
	}

	[Token(Token = "0x60013EB")]
	[Address(RVA = "0xB6BC60", Offset = "0xB6BC60", VA = "0xB6BC60")]
	private void PackFloat(float f, byte[] buf, ref int offset)
	{
	}

	[Token(Token = "0x60013EC")]
	[Address(RVA = "0xB6C238", Offset = "0xB6C238", VA = "0xB6C238")]
	private float ReadFloat(byte[] buf, ref int offset)
	{
		return default(float);
	}

	[Token(Token = "0x60013ED")]
	[Address(RVA = "0xB6BBD0", Offset = "0xB6BBD0", VA = "0xB6BBD0")]
	private void PackULong(ulong u, byte[] buf, ref int offset)
	{
	}

	[Token(Token = "0x60013EE")]
	[Address(RVA = "0xB6BF94", Offset = "0xB6BF94", VA = "0xB6BF94")]
	private ulong ReadULong(byte[] buf, ref int offset)
	{
		return default(ulong);
	}

	[Token(Token = "0x60013EF")]
	[Address(RVA = "0xB6BCF8", Offset = "0xB6BCF8", VA = "0xB6BCF8")]
	private void PackUInt32(uint u, byte[] buf, ref int offset)
	{
	}

	[Token(Token = "0x60013F0")]
	[Address(RVA = "0xB6C2B4", Offset = "0xB6C2B4", VA = "0xB6C2B4")]
	private uint ReadUInt32(byte[] buf, ref int offset)
	{
		return default(uint);
	}
}
[Token(Token = "0x20003A0")]
public class PlayerController : SocialPlatformManager
{
	[Token(Token = "0x40011BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public Camera spyCamera;

	[Token(Token = "0x40011BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private GameObject cameraRig;

	[Token(Token = "0x40011BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private bool showUI;

	[Token(Token = "0x60013F1")]
	[Address(RVA = "0xB6C330", Offset = "0xB6C330", VA = "0xB6C330", Slot = "5")]
	public override void Awake()
	{
	}

	[Token(Token = "0x60013F2")]
	[Address(RVA = "0xB6C6B4", Offset = "0xB6C6B4", VA = "0xB6C6B4", Slot = "6")]
	public override void Start()
	{
	}

	[Token(Token = "0x60013F3")]
	[Address(RVA = "0xB6C6D8", Offset = "0xB6C6D8", VA = "0xB6C6D8", Slot = "4")]
	public override void Update()
	{
	}

	[Token(Token = "0x60013F4")]
	[Address(RVA = "0xB6CA78", Offset = "0xB6CA78", VA = "0xB6CA78")]
	private void checkInput()
	{
	}

	[Token(Token = "0x60013F5")]
	[Address(RVA = "0xB6CBD8", Offset = "0xB6CBD8", VA = "0xB6CBD8")]
	private void ToggleCamera()
	{
	}

	[Token(Token = "0x60013F6")]
	[Address(RVA = "0xB6CC54", Offset = "0xB6CC54", VA = "0xB6CC54")]
	private void ToggleUI()
	{
	}

	[Token(Token = "0x60013F7")]
	[Address(RVA = "0xB6CC9C", Offset = "0xB6CC9C", VA = "0xB6CC9C")]
	public PlayerController()
	{
	}
}
[Token(Token = "0x20003A1")]
public class RemotePlayer
{
	[Token(Token = "0x40011C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ulong remoteUserID;

	[Token(Token = "0x40011C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool stillInRoom;

	[Token(Token = "0x40011C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public PeerConnectionState p2pConnectionState;

	[Token(Token = "0x40011C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public PeerConnectionState voipConnectionState;

	[Token(Token = "0x40011C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OvrAvatar RemoteAvatar;

	[Token(Token = "0x40011C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Vector3 receivedRootPosition;

	[Token(Token = "0x40011C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public Vector3 receivedRootPositionPrior;

	[Token(Token = "0x40011C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Quaternion receivedRootRotation;

	[Token(Token = "0x40011C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Quaternion receivedRootRotationPrior;

	[Token(Token = "0x40011C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public VoipAudioSourceHiLevel voipSource;

	[Token(Token = "0x60013F8")]
	[Address(RVA = "0xB6CD74", Offset = "0xB6CD74", VA = "0xB6CD74")]
	public RemotePlayer()
	{
	}
}
[Token(Token = "0x20003A2")]
public class RoomManager
{
	[Token(Token = "0x40011CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ulong roomID;

	[Token(Token = "0x40011CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private ulong invitedRoomID;

	[Token(Token = "0x40011CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool amIServer;

	[Token(Token = "0x40011CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	private bool startupDone;

	[Token(Token = "0x60013F9")]
	[Address(RVA = "0xB6CD7C", Offset = "0xB6CD7C", VA = "0xB6CD7C")]
	public RoomManager()
	{
	}

	[Token(Token = "0x60013FA")]
	[Address(RVA = "0xB6CE60", Offset = "0xB6CE60", VA = "0xB6CE60")]
	private void AcceptingInviteCallback(Message<string> msg)
	{
	}

	[Token(Token = "0x60013FB")]
	[Address(RVA = "0xB6D060", Offset = "0xB6D060", VA = "0xB6D060")]
	public bool CheckForInvite()
	{
		return default(bool);
	}

	[Token(Token = "0x60013FC")]
	[Address(RVA = "0xB6D178", Offset = "0xB6D178", VA = "0xB6D178")]
	public void CreateRoom()
	{
	}

	[Token(Token = "0x60013FD")]
	[Address(RVA = "0xB6D230", Offset = "0xB6D230", VA = "0xB6D230")]
	private void CreateAndJoinPrivateRoomCallback(Message<Room> msg)
	{
	}

	[Token(Token = "0x60013FE")]
	[Address(RVA = "0xB6D61C", Offset = "0xB6D61C", VA = "0xB6D61C")]
	private void OnLaunchInviteWorkflowComplete(Message msg)
	{
	}

	[Token(Token = "0x60013FF")]
	[Address(RVA = "0xB6D08C", Offset = "0xB6D08C", VA = "0xB6D08C")]
	public void JoinExistingRoom(ulong roomID)
	{
	}

	[Token(Token = "0x6001400")]
	[Address(RVA = "0xB6D694", Offset = "0xB6D694", VA = "0xB6D694")]
	private void JoinRoomCallback(Message<Room> msg)
	{
	}

	[Token(Token = "0x6001401")]
	[Address(RVA = "0xB6DD98", Offset = "0xB6DD98", VA = "0xB6DD98")]
	private void RoomUpdateCallback(Message<Room> msg)
	{
	}

	[Token(Token = "0x6001402")]
	[Address(RVA = "0xB6E060", Offset = "0xB6E060", VA = "0xB6E060")]
	public void LeaveCurrentRoom()
	{
	}

	[Token(Token = "0x6001403")]
	[Address(RVA = "0xB6D948", Offset = "0xB6D948", VA = "0xB6D948")]
	private void ProcessRoomData(Message<Room> msg)
	{
	}
}
[Token(Token = "0x20003A3")]
public class SocialPlatformManager : MonoBehaviour
{
	[Token(Token = "0x20003A4")]
	public enum State
	{
		[Token(Token = "0x40011F4")]
		INITIALIZING,
		[Token(Token = "0x40011F5")]
		CHECKING_LAUNCH_STATE,
		[Token(Token = "0x40011F6")]
		CREATING_A_ROOM,
		[Token(Token = "0x40011F7")]
		WAITING_IN_A_ROOM,
		[Token(Token = "0x40011F8")]
		JOINING_A_ROOM,
		[Token(Token = "0x40011F9")]
		CONNECTED_IN_A_ROOM,
		[Token(Token = "0x40011FA")]
		LEAVING_A_ROOM,
		[Token(Token = "0x40011FB")]
		SHUTDOWN
	}

	[Token(Token = "0x40011CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly Vector3 START_ROTATION_ONE;

	[Token(Token = "0x40011CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private static readonly Vector3 START_POSITION_ONE;

	[Token(Token = "0x40011D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static readonly Vector3 START_ROTATION_TWO;

	[Token(Token = "0x40011D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private static readonly Vector3 START_POSITION_TWO;

	[Token(Token = "0x40011D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private static readonly Vector3 START_ROTATION_THREE;

	[Token(Token = "0x40011D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private static readonly Vector3 START_POSITION_THREE;

	[Token(Token = "0x40011D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private static readonly Vector3 START_ROTATION_FOUR;

	[Token(Token = "0x40011D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private static readonly Vector3 START_POSITION_FOUR;

	[Token(Token = "0x40011D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private static readonly Color BLACK;

	[Token(Token = "0x40011D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private static readonly Color WHITE;

	[Token(Token = "0x40011D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private static readonly Color CYAN;

	[Token(Token = "0x40011D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private static readonly Color BLUE;

	[Token(Token = "0x40011DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private static readonly Color GREEN;

	[Token(Token = "0x40011DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float voiceCurrent;

	[Token(Token = "0x40011DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private uint packetSequence;

	[Token(Token = "0x40011DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public OvrAvatar localAvatarPrefab;

	[Token(Token = "0x40011DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OvrAvatar remoteAvatarPrefab;

	[Token(Token = "0x40011DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject helpPanel;

	[Token(Token = "0x40011E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	protected MeshRenderer helpMesh;

	[Token(Token = "0x40011E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Material riftMaterial;

	[Token(Token = "0x40011E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Material gearMaterial;

	[Token(Token = "0x40011E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	protected OvrAvatar localAvatar;

	[Token(Token = "0x40011E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	protected GameObject localTrackingSpace;

	[Token(Token = "0x40011E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	protected GameObject localPlayerHead;

	[Token(Token = "0x40011E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	protected Dictionary<ulong, RemotePlayer> remoteUsers;

	[Token(Token = "0x40011E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public GameObject roomSphere;

	[Token(Token = "0x40011E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	protected MeshRenderer sphereMesh;

	[Token(Token = "0x40011E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public GameObject roomFloor;

	[Token(Token = "0x40011EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	protected MeshRenderer floorMesh;

	[Token(Token = "0x40011EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	protected State currentState;

	[Token(Token = "0x40011EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	protected static SocialPlatformManager s_instance;

	[Token(Token = "0x40011ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	protected RoomManager roomManager;

	[Token(Token = "0x40011EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	protected P2PManager p2pManager;

	[Token(Token = "0x40011EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	protected VoipManager voipManager;

	[Token(Token = "0x40011F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	protected ulong myID;

	[Token(Token = "0x40011F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	protected string myOculusID;

	[Token(Token = "0x40011F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public static readonly float VOIP_SCALE;

	[Token(Token = "0x170001BD")]
	public static State CurrentState
	{
		[Token(Token = "0x6001410")]
		[Address(RVA = "0xB6FC78", Offset = "0xB6FC78", VA = "0xB6FC78")]
		get
		{
			return default(State);
		}
	}

	[Token(Token = "0x170001BE")]
	public static ulong MyID
	{
		[Token(Token = "0x6001411")]
		[Address(RVA = "0xB6B3D4", Offset = "0xB6B3D4", VA = "0xB6B3D4")]
		get
		{
			return default(ulong);
		}
	}

	[Token(Token = "0x170001BF")]
	public static string MyOculusID
	{
		[Token(Token = "0x6001412")]
		[Address(RVA = "0xB6FCDC", Offset = "0xB6FCDC", VA = "0xB6FCDC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6001404")]
	[Address(RVA = "0xB6C6F0", Offset = "0xB6C6F0", VA = "0xB6C6F0", Slot = "4")]
	public virtual void Update()
	{
	}

	[Token(Token = "0x6001405")]
	[Address(RVA = "0xB6C35C", Offset = "0xB6C35C", VA = "0xB6C35C", Slot = "5")]
	public virtual void Awake()
	{
	}

	[Token(Token = "0x6001406")]
	[Address(RVA = "0xB6EA24", Offset = "0xB6EA24", VA = "0xB6EA24")]
	private void InitCallback(Message<PlatformInitialize> msg)
	{
	}

	[Token(Token = "0x6001407")]
	[Address(RVA = "0xB6C6D4", Offset = "0xB6C6D4", VA = "0xB6C6D4", Slot = "6")]
	public virtual void Start()
	{
	}

	[Token(Token = "0x6001408")]
	[Address(RVA = "0xB6EBAC", Offset = "0xB6EBAC", VA = "0xB6EBAC")]
	private void IsEntitledCallback(Message msg)
	{
	}

	[Token(Token = "0x6001409")]
	[Address(RVA = "0xB6ECA4", Offset = "0xB6ECA4", VA = "0xB6ECA4")]
	private void GetLoggedInUserCallback(Message<User> msg)
	{
	}

	[Token(Token = "0x600140A")]
	[Address(RVA = "0xB6F434", Offset = "0xB6F434", VA = "0xB6F434")]
	private void GetLoggedInUserFriendsAndRoomsCallback(Message<UserAndRoomList> msg)
	{
	}

	[Token(Token = "0x600140B")]
	[Address(RVA = "0xB6F84C", Offset = "0xB6F84C", VA = "0xB6F84C")]
	public void OnLocalAvatarPacketRecorded(object sender, OvrAvatar.PacketEventArgs args)
	{
	}

	[Token(Token = "0x600140C")]
	[Address(RVA = "0xB6FA70", Offset = "0xB6FA70", VA = "0xB6FA70")]
	public void OnApplicationQuit()
	{
	}

	[Token(Token = "0x600140D")]
	[Address(RVA = "0xB6FC10", Offset = "0xB6FC10", VA = "0xB6FC10")]
	public void AddUser(ulong userID, ref RemotePlayer remoteUser)
	{
	}

	[Token(Token = "0x600140E")]
	[Address(RVA = "0xB6E97C", Offset = "0xB6E97C", VA = "0xB6E97C")]
	public void LogOutputLine(string line)
	{
	}

	[Token(Token = "0x600140F")]
	[Address(RVA = "0xB6CFB4", Offset = "0xB6CFB4", VA = "0xB6CFB4")]
	public static void TerminateWithError(Message msg)
	{
	}

	[Token(Token = "0x6001413")]
	[Address(RVA = "0xB6D31C", Offset = "0xB6D31C", VA = "0xB6D31C")]
	public static void TransitionToState(State newState)
	{
	}

	[Token(Token = "0x6001414")]
	[Address(RVA = "0xB6FDE0", Offset = "0xB6FDE0", VA = "0xB6FDE0")]
	private static void SetSphereColorForState()
	{
	}

	[Token(Token = "0x6001415")]
	[Address(RVA = "0xB6D55C", Offset = "0xB6D55C", VA = "0xB6D55C")]
	public static void SetFloorColorForState(bool host)
	{
	}

	[Token(Token = "0x6001416")]
	[Address(RVA = "0xB6E0C8", Offset = "0xB6E0C8", VA = "0xB6E0C8")]
	public static void MarkAllRemoteUsersAsNotInRoom()
	{
	}

	[Token(Token = "0x6001417")]
	[Address(RVA = "0xB6E4A8", Offset = "0xB6E4A8", VA = "0xB6E4A8")]
	public static void MarkRemoteUserInRoom(ulong userID)
	{
	}

	[Token(Token = "0x6001418")]
	[Address(RVA = "0xB6E588", Offset = "0xB6E588", VA = "0xB6E588")]
	public static void ForgetRemoteUsersNotInRoom()
	{
	}

	[Token(Token = "0x6001419")]
	[Address(RVA = "0xB6B498", Offset = "0xB6B498", VA = "0xB6B498")]
	public static void LogOutput(string line)
	{
	}

	[Token(Token = "0x600141A")]
	[Address(RVA = "0xB6E24C", Offset = "0xB6E24C", VA = "0xB6E24C")]
	public static bool IsUserInRoom(ulong userID)
	{
		return default(bool);
	}

	[Token(Token = "0x600141B")]
	[Address(RVA = "0xB6E2D4", Offset = "0xB6E2D4", VA = "0xB6E2D4")]
	public static void AddRemoteUser(ulong userID)
	{
	}

	[Token(Token = "0x600141C")]
	[Address(RVA = "0xB6FF64", Offset = "0xB6FF64", VA = "0xB6FF64")]
	public static void RemoveRemoteUser(ulong userID)
	{
	}

	[Token(Token = "0x600141D")]
	[Address(RVA = "0xB70160", Offset = "0xB70160", VA = "0xB70160")]
	public void UpdateVoiceData(short[] pcmData, int numChannels)
	{
	}

	[Token(Token = "0x600141E")]
	[Address(RVA = "0xB6E904", Offset = "0xB6E904", VA = "0xB6E904")]
	[MonoPInvokeCallback(typeof(CAPI.FilterCallback))]
	public static void MicFilter(short[] pcmData, UIntPtr pcmDataLength, int frequency, int numChannels)
	{
	}

	[Token(Token = "0x600141F")]
	[Address(RVA = "0xB6B5BC", Offset = "0xB6B5BC", VA = "0xB6B5BC")]
	public static RemotePlayer GetRemoteUser(ulong userID)
	{
		return null;
	}

	[Token(Token = "0x6001420")]
	[Address(RVA = "0xB6CCF8", Offset = "0xB6CCF8", VA = "0xB6CCF8")]
	public SocialPlatformManager()
	{
	}
}
[Token(Token = "0x20003A5")]
public class VoipManager
{
	[Token(Token = "0x6001422")]
	[Address(RVA = "0xB703C8", Offset = "0xB703C8", VA = "0xB703C8")]
	public VoipManager()
	{
	}

	[Token(Token = "0x6001423")]
	[Address(RVA = "0xB70494", Offset = "0xB70494", VA = "0xB70494")]
	public void ConnectTo(ulong userID)
	{
	}

	[Token(Token = "0x6001424")]
	[Address(RVA = "0xB70564", Offset = "0xB70564", VA = "0xB70564")]
	public void Disconnect(ulong userID)
	{
	}

	[Token(Token = "0x6001425")]
	[Address(RVA = "0xB705D8", Offset = "0xB705D8", VA = "0xB705D8")]
	private void VoipConnectRequestCallback(Message<NetworkingPeer> msg)
	{
	}

	[Token(Token = "0x6001426")]
	[Address(RVA = "0xB70734", Offset = "0xB70734", VA = "0xB70734")]
	private void VoipStateChangedCallback(Message<NetworkingPeer> msg)
	{
	}
}
[Token(Token = "0x20003A6")]
public class GazeTarget : MonoBehaviour
{
	[Token(Token = "0x40011FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ovrAvatarGazeTargetType Type;

	[Token(Token = "0x40011FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static ovrAvatarGazeTargets RuntimeTargetList;

	[Token(Token = "0x6001427")]
	[Address(RVA = "0xB70930", Offset = "0xB70930", VA = "0xB70930")]
	static GazeTarget()
	{
	}

	[Token(Token = "0x6001428")]
	[Address(RVA = "0xB709A0", Offset = "0xB709A0", VA = "0xB709A0")]
	private void Start()
	{
	}

	[Token(Token = "0x6001429")]
	[Address(RVA = "0xB70AE4", Offset = "0xB70AE4", VA = "0xB70AE4")]
	private void Update()
	{
	}

	[Token(Token = "0x600142A")]
	[Address(RVA = "0xB70B38", Offset = "0xB70B38", VA = "0xB70B38")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600142B")]
	[Address(RVA = "0xB709D0", Offset = "0xB709D0", VA = "0xB709D0")]
	private void UpdateGazeTarget()
	{
	}

	[Token(Token = "0x600142C")]
	[Address(RVA = "0xB70BE8", Offset = "0xB70BE8", VA = "0xB70BE8")]
	private ovrAvatarGazeTarget CreateOvrGazeTarget(uint targetId, Vector3 targetPosition, ovrAvatarGazeTargetType targetType)
	{
		return default(ovrAvatarGazeTarget);
	}

	[Token(Token = "0x600142D")]
	[Address(RVA = "0xB70C00", Offset = "0xB70C00", VA = "0xB70C00")]
	public GazeTarget()
	{
	}
}
[Serializable]
[Token(Token = "0x20003A7")]
public class AvatarLayer
{
	[Token(Token = "0x40011FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int layerIndex;

	[Token(Token = "0x600142E")]
	[Address(RVA = "0xB70C08", Offset = "0xB70C08", VA = "0xB70C08")]
	public AvatarLayer()
	{
	}
}
[Serializable]
[Token(Token = "0x20003A8")]
public class PacketRecordSettings
{
	[Token(Token = "0x40011FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	internal bool RecordingFrames;

	[Token(Token = "0x4001200")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float UpdateRate;

	[Token(Token = "0x4001201")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	internal float AccumulatedTime;

	[Token(Token = "0x600142F")]
	[Address(RVA = "0xB70C10", Offset = "0xB70C10", VA = "0xB70C10")]
	public PacketRecordSettings()
	{
	}
}
[Token(Token = "0x20003A9")]
public class OvrAvatar : MonoBehaviour
{
	[Token(Token = "0x20003AA")]
	public class PacketEventArgs : EventArgs
	{
		[Token(Token = "0x400125B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly OvrAvatarPacket Packet;

		[Token(Token = "0x6001464")]
		[Address(RVA = "0xB75468", Offset = "0xB75468", VA = "0xB75468")]
		public PacketEventArgs(OvrAvatarPacket packet)
		{
		}
	}

	[Token(Token = "0x20003AB")]
	public enum HandType
	{
		[Token(Token = "0x400125D")]
		Right,
		[Token(Token = "0x400125E")]
		Left,
		[Token(Token = "0x400125F")]
		Max
	}

	[Token(Token = "0x20003AC")]
	public enum HandJoint
	{
		[Token(Token = "0x4001261")]
		HandBase,
		[Token(Token = "0x4001262")]
		IndexBase,
		[Token(Token = "0x4001263")]
		IndexTip,
		[Token(Token = "0x4001264")]
		ThumbBase,
		[Token(Token = "0x4001265")]
		ThumbTip,
		[Token(Token = "0x4001266")]
		Max
	}

	[Token(Token = "0x20003AD")]
	[CompilerGenerated]
	private sealed class <WaitForMouthAudioSource>d__137 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001267")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001268")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001269")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public OvrAvatar <>4__this;

		[Token(Token = "0x170001C0")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001468")]
			[Address(RVA = "0xB777E0", Offset = "0xB777E0", VA = "0xB777E0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001C1")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600146A")]
			[Address(RVA = "0xB77828", Offset = "0xB77828", VA = "0xB77828", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001465")]
		[Address(RVA = "0xB7723C", Offset = "0xB7723C", VA = "0xB7723C")]
		[DebuggerHidden]
		public <WaitForMouthAudioSource>d__137(int <>1__state)
		{
		}

		[Token(Token = "0x6001466")]
		[Address(RVA = "0xB77644", Offset = "0xB77644", VA = "0xB77644", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001467")]
		[Address(RVA = "0xB77648", Offset = "0xB77648", VA = "0xB77648", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001469")]
		[Address(RVA = "0xB777E8", Offset = "0xB777E8", VA = "0xB777E8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4001202")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Header("Avatar")]
	public IntPtr sdkAvatar;

	[Token(Token = "0x4001203")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string oculusUserID;

	[Token(Token = "0x4001204")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OvrAvatarDriver Driver;

	[Token(Token = "0x4001205")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[Header("Capabilities")]
	public bool EnableBody;

	[Token(Token = "0x4001206")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	public bool EnableHands;

	[Token(Token = "0x4001207")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x32")]
	public bool EnableBase;

	[Token(Token = "0x4001208")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x33")]
	public bool EnableExpressive;

	[Token(Token = "0x4001209")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[Header("Network")]
	public bool RecordPackets;

	[Token(Token = "0x400120A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x35")]
	public bool UseSDKPackets;

	[Token(Token = "0x400120B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public PacketRecordSettings PacketSettings;

	[Token(Token = "0x400120C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[Header("Visibility")]
	public bool StartWithControllers;

	[Token(Token = "0x400120D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public AvatarLayer FirstPersonLayer;

	[Token(Token = "0x400120E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public AvatarLayer ThirdPersonLayer;

	[Token(Token = "0x400120F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public bool ShowFirstPerson;

	[Token(Token = "0x4001210")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
	public bool ShowThirdPerson;

	[Token(Token = "0x4001211")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	internal ovrAvatarCapabilities Capabilities;

	[Token(Token = "0x4001212")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[Header("Performance")]
	[SerializeField]
	[Tooltip("LOD mesh complexity and texture resolution. Highest LOD recommended on PC and simple mobile apps. Medium LOD recommended on mobile devices or for background characters on PC. Lowest LOD recommended for background characters on mobile.")]
	internal ovrAvatarAssetLevelOfDetail LevelOfDetail;

	[Token(Token = "0x4001213")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	[Tooltip("Enable to use combined meshes to reduce draw calls. Currently only available on mobile devices. Will be forced to false on PC.")]
	private bool CombineMeshes;

	[Token(Token = "0x4001214")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x65")]
	[Tooltip("Enable to use transparent queue, disable to use geometry queue. Requires restart to take effect.")]
	public bool UseTransparentRenderQueue;

	[Token(Token = "0x4001215")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[Header("Shaders")]
	public Shader Monochrome_SurfaceShader;

	[Token(Token = "0x4001216")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Shader Monochrome_SurfaceShader_SelfOccluding;

	[Token(Token = "0x4001217")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Shader Monochrome_SurfaceShader_PBS;

	[Token(Token = "0x4001218")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Shader Skinshaded_SurfaceShader_SingleComponent;

	[Token(Token = "0x4001219")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Shader Skinshaded_VertFrag_SingleComponent;

	[Token(Token = "0x400121A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public Shader Skinshaded_VertFrag_CombinedMesh;

	[Token(Token = "0x400121B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public Shader Skinshaded_Expressive_SurfaceShader_SingleComponent;

	[Token(Token = "0x400121C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public Shader Skinshaded_Expressive_VertFrag_SingleComponent;

	[Token(Token = "0x400121D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public Shader Skinshaded_Expressive_VertFrag_CombinedMesh;

	[Token(Token = "0x400121E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public Shader Loader_VertFrag_CombinedMesh;

	[Token(Token = "0x400121F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public Shader EyeLens;

	[Token(Token = "0x4001220")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public Shader ControllerShader;

	[Token(Token = "0x4001221")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	[Header("Other")]
	public bool CanOwnMicrophone;

	[Token(Token = "0x4001222")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC9")]
	[Tooltip("Enable laughter detection and animation as part of OVRLipSync.")]
	public bool EnableLaughter;

	[Token(Token = "0x4001223")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public GameObject MouthAnchor;

	[Token(Token = "0x4001224")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public Transform LeftHandCustomPose;

	[Token(Token = "0x4001225")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public Transform RightHandCustomPose;

	[Token(Token = "0x4001226")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private HashSet<ulong> assetLoadingIds;

	[Token(Token = "0x4001227")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private bool assetsFinishedLoading;

	[Token(Token = "0x4001228")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private OvrAvatarMaterialManager materialManager;

	[Token(Token = "0x4001229")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private bool waitingForCombinedMesh;

	[Token(Token = "0x400122A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static bool doneExpressiveGlobalInit;

	[Token(Token = "0x400122B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
	private Vector4 clothingAlphaOffset;

	[Token(Token = "0x400122C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	private ulong clothingAlphaTexture;

	[Token(Token = "0x400122D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private OVRLipSyncMicInput micInput;

	[Token(Token = "0x400122E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	private OVRLipSyncContext lipsyncContext;

	[Token(Token = "0x400122F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	private OVRLipSync.Frame currentFrame;

	[Token(Token = "0x4001230")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	private float[] visemes;

	[Token(Token = "0x4001231")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	private AudioSource audioSource;

	[Token(Token = "0x4001232")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	private ONSPAudioSource spatializedSource;

	[Token(Token = "0x4001233")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	private List<float[]> voiceUpdates;

	[Token(Token = "0x4001234")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static ovrAvatarVisemes RuntimeVisemes;

	[Token(Token = "0x4001235")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	private Transform cachedLeftHandCustomPose;

	[Token(Token = "0x4001236")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	private Transform[] cachedCustomLeftHandJoints;

	[Token(Token = "0x4001237")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	private ovrAvatarTransform[] cachedLeftHandTransforms;

	[Token(Token = "0x4001238")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	private Transform cachedRightHandCustomPose;

	[Token(Token = "0x4001239")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	private Transform[] cachedCustomRightHandJoints;

	[Token(Token = "0x400123A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	private ovrAvatarTransform[] cachedRightHandTransforms;

	[Token(Token = "0x400123B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	private bool showLeftController;

	[Token(Token = "0x400123C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x189")]
	private bool showRightController;

	[Token(Token = "0x400123D")]
	private const bool USE_MOBILE_TEXTURE_FORMAT = true;

	[Token(Token = "0x400123E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static readonly Vector3 MOUTH_HEAD_OFFSET;

	[Token(Token = "0x400123F")]
	private const string MOUTH_HELPER_NAME = "MouthAnchor";

	[Token(Token = "0x4001240")]
	private const int VISEME_COUNT = 16;

	[Token(Token = "0x4001241")]
	private const float ACTION_UNIT_ONSET_SPEED = 30f;

	[Token(Token = "0x4001242")]
	private const float ACTION_UNIT_FALLOFF_SPEED = 20f;

	[Token(Token = "0x4001243")]
	private const float VISEME_LEVEL_MULTIPLIER = 1.5f;

	[Token(Token = "0x4001244")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	internal ulong oculusUserIDInternal;

	[Token(Token = "0x4001245")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	internal OvrAvatarBase Base;

	[Token(Token = "0x4001246")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	internal OvrAvatarTouchController ControllerLeft;

	[Token(Token = "0x4001247")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	internal OvrAvatarTouchController ControllerRight;

	[Token(Token = "0x4001248")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	internal OvrAvatarBody Body;

	[Token(Token = "0x4001249")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	internal OvrAvatarHand HandLeft;

	[Token(Token = "0x400124A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	internal OvrAvatarHand HandRight;

	[Token(Token = "0x400124B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
	internal ovrAvatarLookAndFeelVersion LookAndFeelVersion;

	[Token(Token = "0x400124C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1CC")]
	internal ovrAvatarLookAndFeelVersion FallbackLookAndFeelVersion;

	[Token(Token = "0x400124D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
	private OvrAvatarPacket CurrentUnityPacket;

	[Token(Token = "0x400124E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
	public EventHandler<PacketEventArgs> PacketRecorded;

	[Token(Token = "0x400124F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private static string[,] HandJoints;

	[Token(Token = "0x4001250")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private static Vector3 MOUTH_POSITION_OFFSET;

	[Token(Token = "0x4001251")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private static string VOICE_PROPERTY;

	[Token(Token = "0x4001252")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private static string MOUTH_POSITION_PROPERTY;

	[Token(Token = "0x4001253")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private static string MOUTH_DIRECTION_PROPERTY;

	[Token(Token = "0x4001254")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private static string MOUTH_SCALE_PROPERTY;

	[Token(Token = "0x4001255")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private static float MOUTH_SCALE_GLOBAL;

	[Token(Token = "0x4001256")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private static float MOUTH_MAX_GLOBAL;

	[Token(Token = "0x4001257")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private static string NECK_JONT;

	[Token(Token = "0x4001258")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
	public float VoiceAmplitude;

	[Token(Token = "0x4001259")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E4")]
	public bool EnableMouthVertexAnimation;

	[Token(Token = "0x400125A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private static ovrAvatarLights ovrLights;

	[Token(Token = "0x6001430")]
	[Address(RVA = "0xB70C24", Offset = "0xB70C24", VA = "0xB70C24")]
	static OvrAvatar()
	{
	}

	[Token(Token = "0x6001431")]
	[Address(RVA = "0xB70F9C", Offset = "0xB70F9C", VA = "0xB70F9C")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6001432")]
	[Address(RVA = "0xB71024", Offset = "0xB71024", VA = "0xB71024")]
	public void AssetLoadedCallback(OvrAvatarAsset asset)
	{
	}

	[Token(Token = "0x6001433")]
	[Address(RVA = "0xB71080", Offset = "0xB71080", VA = "0xB71080")]
	public void CombinedMeshLoadedCallback(IntPtr assetPtr)
	{
	}

	[Token(Token = "0x6001434")]
	[Address(RVA = "0xB71194", Offset = "0xB71194", VA = "0xB71194")]
	private OvrAvatarSkinnedMeshRenderComponent AddSkinnedMeshRenderComponent(GameObject gameObject, ovrAvatarRenderPart_SkinnedMeshRender skinnedMeshRender)
	{
		return null;
	}

	[Token(Token = "0x6001435")]
	[Address(RVA = "0xB713B0", Offset = "0xB713B0", VA = "0xB713B0")]
	private OvrAvatarSkinnedMeshRenderPBSComponent AddSkinnedMeshRenderPBSComponent(GameObject gameObject, ovrAvatarRenderPart_SkinnedMeshRenderPBS skinnedMeshRenderPBS)
	{
		return null;
	}

	[Token(Token = "0x6001436")]
	[Address(RVA = "0xB715B4", Offset = "0xB715B4", VA = "0xB715B4")]
	private OvrAvatarSkinnedMeshPBSV2RenderComponent AddSkinnedMeshRenderPBSV2Component(IntPtr renderPart, GameObject go, ovrAvatarRenderPart_SkinnedMeshRenderPBS_V2 skinnedMeshRenderPBSV2, bool isBodyPartZero, bool isControllerModel)
	{
		return null;
	}

	[Token(Token = "0x6001437")]
	[Address(RVA = "0xB71B54", Offset = "0xB71B54", VA = "0xB71B54")]
	public static IntPtr GetRenderPart(ovrAvatarComponent component, uint renderPartIndex)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x6001438")]
	[Address(RVA = "0xB71C1C", Offset = "0xB71C1C", VA = "0xB71C1C")]
	private static string GetRenderPartName(ovrAvatarComponent component, uint renderPartIndex)
	{
		return null;
	}

	[Token(Token = "0x6001439")]
	[Address(RVA = "0xB71C90", Offset = "0xB71C90", VA = "0xB71C90")]
	internal static void ConvertTransform(float[] transform, ref ovrAvatarTransform target)
	{
	}

	[Token(Token = "0x600143A")]
	[Address(RVA = "0xB71D48", Offset = "0xB71D48", VA = "0xB71D48")]
	internal static void ConvertTransform(ovrAvatarTransform transform, Transform target)
	{
	}

	[Token(Token = "0x600143B")]
	[Address(RVA = "0xB71DD0", Offset = "0xB71DD0", VA = "0xB71DD0")]
	public static ovrAvatarTransform CreateOvrAvatarTransform(Vector3 position, Quaternion orientation)
	{
		return default(ovrAvatarTransform);
	}

	[Token(Token = "0x600143C")]
	[Address(RVA = "0xB71E74", Offset = "0xB71E74", VA = "0xB71E74")]
	private static ovrAvatarGazeTarget CreateOvrGazeTarget(uint targetId, Vector3 targetPosition, ovrAvatarGazeTargetType targetType)
	{
		return default(ovrAvatarGazeTarget);
	}

	[Token(Token = "0x600143D")]
	[Address(RVA = "0xB71E8C", Offset = "0xB71E8C", VA = "0xB71E8C")]
	private void BuildRenderComponents()
	{
	}

	[Token(Token = "0x600143E")]
	private void AddAvatarComponent<T>(ref T root, ovrAvatarComponent nativeComponent) where T : OvrAvatarComponent
	{
	}

	[Token(Token = "0x600143F")]
	[Address(RVA = "0xB72298", Offset = "0xB72298", VA = "0xB72298")]
	private void UpdateCustomPoses()
	{
	}

	[Token(Token = "0x6001440")]
	[Address(RVA = "0xB7258C", Offset = "0xB7258C", VA = "0xB7258C")]
	private static bool UpdatePoseRoot(Transform poseRoot, ref Transform cachedPoseRoot, ref Transform[] cachedPoseJoints, ref ovrAvatarTransform[] transforms)
	{
		return default(bool);
	}

	[Token(Token = "0x6001441")]
	[Address(RVA = "0xB72720", Offset = "0xB72720", VA = "0xB72720")]
	private static bool UpdateTransforms(Transform[] joints, ovrAvatarTransform[] transforms)
	{
		return default(bool);
	}

	[Token(Token = "0x6001442")]
	[Address(RVA = "0xB7295C", Offset = "0xB7295C", VA = "0xB7295C")]
	private static void OrderJoints(Transform transform, List<Transform> joints)
	{
	}

	[Token(Token = "0x6001443")]
	[Address(RVA = "0xB72A88", Offset = "0xB72A88", VA = "0xB72A88")]
	private void AvatarSpecificationCallback(IntPtr avatarSpecification)
	{
	}

	[Token(Token = "0x6001444")]
	[Address(RVA = "0xB736D8", Offset = "0xB736D8", VA = "0xB736D8")]
	private void Start()
	{
	}

	[Token(Token = "0x6001445")]
	[Address(RVA = "0xB73C48", Offset = "0xB73C48", VA = "0xB73C48")]
	private void Update()
	{
	}

	[Token(Token = "0x6001446")]
	[Address(RVA = "0xB74740", Offset = "0xB74740", VA = "0xB74740")]
	public static ovrAvatarHandInputState CreateInputState(ovrAvatarTransform transform, OvrAvatarDriver.ControllerPose pose)
	{
		return default(ovrAvatarHandInputState);
	}

	[Token(Token = "0x6001447")]
	[Address(RVA = "0xB74784", Offset = "0xB74784", VA = "0xB74784")]
	public void ShowControllers(bool show)
	{
	}

	[Token(Token = "0x6001448")]
	[Address(RVA = "0xB72D0C", Offset = "0xB72D0C", VA = "0xB72D0C")]
	public void ShowLeftController(bool show)
	{
	}

	[Token(Token = "0x6001449")]
	[Address(RVA = "0xB72DA4", Offset = "0xB72DA4", VA = "0xB72DA4")]
	public void ShowRightController(bool show)
	{
	}

	[Token(Token = "0x600144A")]
	[Address(RVA = "0xB747B0", Offset = "0xB747B0", VA = "0xB747B0")]
	public void UpdateVoiceVisualization(float[] voiceSamples)
	{
	}

	[Token(Token = "0x600144B")]
	[Address(RVA = "0xB74018", Offset = "0xB74018", VA = "0xB74018")]
	private void RecordFrame()
	{
	}

	[Token(Token = "0x600144C")]
	[Address(RVA = "0xB74A20", Offset = "0xB74A20", VA = "0xB74A20")]
	private void RecordUnityFrame()
	{
	}

	[Token(Token = "0x600144D")]
	[Address(RVA = "0xB74858", Offset = "0xB74858", VA = "0xB74858")]
	private void RecordSDKFrame()
	{
	}

	[Token(Token = "0x600144E")]
	[Address(RVA = "0xB755E8", Offset = "0xB755E8", VA = "0xB755E8")]
	private void AddRenderParts(OvrAvatarComponent ovrComponent, ovrAvatarComponent component, Transform parent)
	{
	}

	[Token(Token = "0x600144F")]
	[Address(RVA = "0xB75A60", Offset = "0xB75A60", VA = "0xB75A60")]
	public void RefreshBodyParts()
	{
	}

	[Token(Token = "0x6001450")]
	[Address(RVA = "0xB75E78", Offset = "0xB75E78", VA = "0xB75E78")]
	public ovrAvatarBodyComponent? GetBodyComponent()
	{
		return null;
	}

	[Token(Token = "0x6001451")]
	[Address(RVA = "0xB75FB0", Offset = "0xB75FB0", VA = "0xB75FB0")]
	public Transform GetHandTransform(HandType hand, HandJoint joint)
	{
		return null;
	}

	[Token(Token = "0x6001452")]
	[Address(RVA = "0xB7617C", Offset = "0xB7617C", VA = "0xB7617C")]
	public void GetPointingDirection(HandType hand, ref Vector3 forward, ref Vector3 up)
	{
	}

	[Token(Token = "0x6001453")]
	[Address(RVA = "0xB74218", Offset = "0xB74218", VA = "0xB74218")]
	private void UpdateVoiceBehavior()
	{
	}

	[Token(Token = "0x6001454")]
	[Address(RVA = "0xB76244", Offset = "0xB76244", VA = "0xB76244")]
	private bool IsValidMic()
	{
		return default(bool);
	}

	[Token(Token = "0x6001455")]
	[Address(RVA = "0xB74028", Offset = "0xB74028", VA = "0xB74028")]
	private void InitPostLoad()
	{
	}

	[Token(Token = "0x6001456")]
	[Address(RVA = "0xB76320", Offset = "0xB76320", VA = "0xB76320")]
	private static void ExpressiveGlobalInit()
	{
	}

	[Token(Token = "0x6001457")]
	[Address(RVA = "0xB768F4", Offset = "0xB768F4", VA = "0xB768F4")]
	private static void InitializeLights()
	{
	}

	[Token(Token = "0x6001458")]
	[Address(RVA = "0xB76D7C", Offset = "0xB76D7C", VA = "0xB76D7C")]
	private static ovrAvatarLight CreateLightDirectional(uint id, Vector3 direction, float intensity, ref ovrAvatarLight light)
	{
		return default(ovrAvatarLight);
	}

	[Token(Token = "0x6001459")]
	[Address(RVA = "0xB76DA4", Offset = "0xB76DA4", VA = "0xB76DA4")]
	private static ovrAvatarLight CreateLightPoint(uint id, Vector3 position, float range, float intensity, ref ovrAvatarLight light)
	{
		return default(ovrAvatarLight);
	}

	[Token(Token = "0x600145A")]
	[Address(RVA = "0xB76DCC", Offset = "0xB76DCC", VA = "0xB76DCC")]
	private static ovrAvatarLight CreateLightSpot(uint id, Vector3 position, Vector3 direction, float spotAngleDeg, float range, float intensity, ref ovrAvatarLight light)
	{
		return default(ovrAvatarLight);
	}

	[Token(Token = "0x600145B")]
	[Address(RVA = "0xB745E8", Offset = "0xB745E8", VA = "0xB745E8")]
	private void UpdateExpressive()
	{
	}

	[Token(Token = "0x600145C")]
	[Address(RVA = "0xB763D0", Offset = "0xB763D0", VA = "0xB763D0")]
	private void ConfigureHelpers()
	{
	}

	[Token(Token = "0x600145D")]
	[Address(RVA = "0xB771D4", Offset = "0xB771D4", VA = "0xB771D4")]
	[IteratorStateMachine(typeof(<WaitForMouthAudioSource>d__137))]
	private IEnumerator WaitForMouthAudioSource()
	{
		return null;
	}

	[Token(Token = "0x600145E")]
	[Address(RVA = "0xB77264", Offset = "0xB77264", VA = "0xB77264")]
	public void DestroyHelperObjects()
	{
	}

	[Token(Token = "0x600145F")]
	[Address(RVA = "0xB77068", Offset = "0xB77068", VA = "0xB77068")]
	public GameObject CreateHelperObject(Transform parent, Vector3 localPositionOffset, string helperName, string helperTag = "")
	{
		return null;
	}

	[Token(Token = "0x6001460")]
	[Address(RVA = "0xB77308", Offset = "0xB77308", VA = "0xB77308")]
	public void UpdateVoiceData(short[] pcmData, int numChannels)
	{
	}

	[Token(Token = "0x6001461")]
	[Address(RVA = "0xB773D0", Offset = "0xB773D0", VA = "0xB773D0")]
	public void UpdateVoiceData(float[] pcmData, int numChannels)
	{
	}

	[Token(Token = "0x6001462")]
	[Address(RVA = "0xB76E08", Offset = "0xB76E08", VA = "0xB76E08")]
	private void UpdateFacewave()
	{
	}

	[Token(Token = "0x6001463")]
	[Address(RVA = "0xB77498", Offset = "0xB77498", VA = "0xB77498")]
	public OvrAvatar()
	{
	}
}
[Token(Token = "0x20003AE")]
public class OvrAvatarAsset
{
	[Token(Token = "0x400126A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ulong assetID;

	[Token(Token = "0x600146B")]
	[Address(RVA = "0xB77830", Offset = "0xB77830", VA = "0xB77830")]
	public OvrAvatarAsset()
	{
	}
}
[Token(Token = "0x20003AF")]
public class OvrAvatarAssetMesh : OvrAvatarAsset
{
	[Token(Token = "0x400126B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Mesh mesh;

	[Token(Token = "0x400126C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private ovrAvatarSkinnedMeshPose skinnedBindPose;

	[Token(Token = "0x400126D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public string[] jointNames;

	[Token(Token = "0x600146C")]
	[Address(RVA = "0xB77838", Offset = "0xB77838", VA = "0xB77838")]
	public OvrAvatarAssetMesh(ulong _assetId, IntPtr asset, ovrAvatarAssetType meshType)
	{
	}

	[Token(Token = "0x600146D")]
	[Address(RVA = "0xB78954", Offset = "0xB78954", VA = "0xB78954")]
	private void LoadSubmeshes(IntPtr asset, IntPtr indexBufferPtr, ulong indexCount)
	{
	}

	[Token(Token = "0x600146E")]
	[Address(RVA = "0xB785B0", Offset = "0xB785B0", VA = "0xB785B0")]
	private void LoadBlendShapes(IntPtr asset, long vertexCount)
	{
	}

	[Token(Token = "0x600146F")]
	[Address(RVA = "0xB78360", Offset = "0xB78360", VA = "0xB78360")]
	private void SetSkinnedBindPose(IntPtr asset, ovrAvatarAssetType meshType)
	{
	}

	[Token(Token = "0x6001470")]
	[Address(RVA = "0xB78434", Offset = "0xB78434", VA = "0xB78434")]
	private void GetVertexAndIndexData(IntPtr asset, ovrAvatarAssetType meshType, out long vertexCount, out IntPtr vertexBuffer, out uint indexCount, out IntPtr indexBuffer)
	{
	}

	[Token(Token = "0x6001471")]
	[Address(RVA = "0xB78BA0", Offset = "0xB78BA0", VA = "0xB78BA0")]
	public SkinnedMeshRenderer CreateSkinnedMeshRendererOnObject(GameObject target)
	{
		return null;
	}
}
[Token(Token = "0x20003B0")]
public class OvrAvatarAssetTexture : OvrAvatarAsset
{
	[Token(Token = "0x400126E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Texture2D texture;

	[Token(Token = "0x400126F")]
	private const int ASTCHeaderSize = 16;

	[Token(Token = "0x6001472")]
	[Address(RVA = "0xB790EC", Offset = "0xB790EC", VA = "0xB790EC")]
	public OvrAvatarAssetTexture(ulong _assetId, IntPtr asset)
	{
	}
}
[Token(Token = "0x20003B1")]
public class OvrAvatarBase : OvrAvatarComponent
{
	[Token(Token = "0x4001270")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private ovrAvatarBaseComponent component;

	[Token(Token = "0x6001473")]
	[Address(RVA = "0xB79324", Offset = "0xB79324", VA = "0xB79324")]
	private void Update()
	{
	}

	[Token(Token = "0x6001474")]
	[Address(RVA = "0xB79730", Offset = "0xB79730", VA = "0xB79730")]
	public OvrAvatarBase()
	{
	}
}
[Token(Token = "0x20003B2")]
public class OvrAvatarBody : OvrAvatarComponent
{
	[Token(Token = "0x4001271")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public ovrAvatarBodyComponent component;

	[Token(Token = "0x6001475")]
	[Address(RVA = "0xB75D2C", Offset = "0xB75D2C", VA = "0xB75D2C")]
	public ovrAvatarComponent? GetNativeAvatarComponent()
	{
		return null;
	}

	[Token(Token = "0x6001476")]
	[Address(RVA = "0xB79844", Offset = "0xB79844", VA = "0xB79844")]
	private void Update()
	{
	}

	[Token(Token = "0x6001477")]
	[Address(RVA = "0xB7994C", Offset = "0xB7994C", VA = "0xB7994C")]
	public OvrAvatarBody()
	{
	}
}
[Token(Token = "0x20003B3")]
public class OvrAvatarComponent : MonoBehaviour
{
	[Token(Token = "0x4001272")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static readonly string[] LayerKeywords;

	[Token(Token = "0x4001273")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static readonly string[] LayerSampleModeParameters;

	[Token(Token = "0x4001274")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static readonly string[] LayerBlendModeParameters;

	[Token(Token = "0x4001275")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static readonly string[] LayerMaskTypeParameters;

	[Token(Token = "0x4001276")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public static readonly string[] LayerColorParameters;

	[Token(Token = "0x4001277")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public static readonly string[] LayerSurfaceParameters;

	[Token(Token = "0x4001278")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public static readonly string[] LayerSampleParametersParameters;

	[Token(Token = "0x4001279")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public static readonly string[] LayerMaskParametersParameters;

	[Token(Token = "0x400127A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public static readonly string[] LayerMaskAxisParameters;

	[Token(Token = "0x400127B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Dictionary<Material, ovrAvatarMaterialState> materialStates;

	[Token(Token = "0x400127C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<OvrAvatarRenderComponent> RenderParts;

	[Token(Token = "0x400127D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	protected OvrAvatar owner;

	[Token(Token = "0x400127E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	protected ovrAvatarComponent nativeAvatarComponent;

	[Token(Token = "0x6001478")]
	[Address(RVA = "0xB799A0", Offset = "0xB799A0", VA = "0xB799A0")]
	public void SetOvrAvatarOwner(OvrAvatar ovrAvatarOwner)
	{
	}

	[Token(Token = "0x6001479")]
	[Address(RVA = "0xB7942C", Offset = "0xB7942C", VA = "0xB7942C")]
	public void UpdateAvatar(IntPtr nativeComponent)
	{
	}

	[Token(Token = "0x600147A")]
	[Address(RVA = "0xB79F68", Offset = "0xB79F68", VA = "0xB79F68")]
	protected void UpdateActive(OvrAvatar avatar, ovrAvatarVisibilityFlags mask)
	{
	}

	[Token(Token = "0x600147B")]
	[Address(RVA = "0xB79FBC", Offset = "0xB79FBC", VA = "0xB79FBC")]
	public void UpdateAvatarMaterial(Material mat, ovrAvatarMaterialState matState)
	{
	}

	[Token(Token = "0x600147C")]
	[Address(RVA = "0xB7A6C4", Offset = "0xB7A6C4", VA = "0xB7A6C4")]
	public static Texture2D GetLoadedTexture(ulong assetId)
	{
		return null;
	}

	[Token(Token = "0x600147D")]
	[Address(RVA = "0xB79784", Offset = "0xB79784", VA = "0xB79784")]
	public OvrAvatarComponent()
	{
	}
}
[Token(Token = "0x20003B4")]
public abstract class OvrAvatarDriver : MonoBehaviour
{
	[Token(Token = "0x20003B5")]
	public enum PacketMode
	{
		[Token(Token = "0x4001283")]
		SDK,
		[Token(Token = "0x4001284")]
		Unity
	}

	[Token(Token = "0x20003B6")]
	public struct ControllerPose
	{
		[Token(Token = "0x4001285")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ovrAvatarButton buttons;

		[Token(Token = "0x4001286")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public ovrAvatarTouch touches;

		[Token(Token = "0x4001287")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Vector2 joystickPosition;

		[Token(Token = "0x4001288")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float indexTrigger;

		[Token(Token = "0x4001289")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float handTrigger;

		[Token(Token = "0x400128A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool isActive;

		[Token(Token = "0x6001485")]
		[Address(RVA = "0xB7BB9C", Offset = "0xB7BB9C", VA = "0xB7BB9C")]
		public static ControllerPose Interpolate(ControllerPose a, ControllerPose b, float t)
		{
			return default(ControllerPose);
		}
	}

	[Token(Token = "0x20003B7")]
	public struct PoseFrame
	{
		[Token(Token = "0x400128B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Vector3 headPosition;

		[Token(Token = "0x400128C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public Quaternion headRotation;

		[Token(Token = "0x400128D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Vector3 handLeftPosition;

		[Token(Token = "0x400128E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Quaternion handLeftRotation;

		[Token(Token = "0x400128F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Vector3 handRightPosition;

		[Token(Token = "0x4001290")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public Quaternion handRightRotation;

		[Token(Token = "0x4001291")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public float voiceAmplitude;

		[Token(Token = "0x4001292")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public ControllerPose controllerLeftPose;

		[Token(Token = "0x4001293")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		public ControllerPose controllerRightPose;

		[Token(Token = "0x6001486")]
		[Address(RVA = "0xB75170", Offset = "0xB75170", VA = "0xB75170")]
		public static PoseFrame Interpolate(PoseFrame a, PoseFrame b, float t)
		{
			return default(PoseFrame);
		}
	}

	[Token(Token = "0x400127F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public PacketMode Mode;

	[Token(Token = "0x4001280")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	protected PoseFrame CurrentPose;

	[Token(Token = "0x4001281")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private ovrAvatarControllerType ControllerType;

	[Token(Token = "0x600147F")]
	[Address(RVA = "0xB7BAF8", Offset = "0xB7BAF8", VA = "0xB7BAF8")]
	public PoseFrame GetCurrentPose()
	{
		return default(PoseFrame);
	}

	[Token(Token = "0x6001480")]
	public abstract void UpdateTransforms(IntPtr sdkAvatar);

	[Token(Token = "0x6001481")]
	[Address(RVA = "0xB7BB08", Offset = "0xB7BB08", VA = "0xB7BB08")]
	private void Start()
	{
	}

	[Token(Token = "0x6001482")]
	[Address(RVA = "0xB72E3C", Offset = "0xB72E3C", VA = "0xB72E3C")]
	public void UpdateTransformsFromPose(IntPtr sdkAvatar)
	{
	}

	[Token(Token = "0x6001483")]
	[Address(RVA = "0xB7BB84", Offset = "0xB7BB84", VA = "0xB7BB84")]
	public static bool GetIsTrackedRemote()
	{
		return default(bool);
	}

	[Token(Token = "0x6001484")]
	[Address(RVA = "0xB7BB8C", Offset = "0xB7BB8C", VA = "0xB7BB8C")]
	protected OvrAvatarDriver()
	{
	}
}
[Token(Token = "0x20003B8")]
public class OvrAvatarHand : OvrAvatarComponent
{
	[Token(Token = "0x4001294")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public bool isLeftHand;

	[Token(Token = "0x4001295")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private ovrAvatarHandComponent component;

	[Token(Token = "0x6001487")]
	[Address(RVA = "0xB7BC0C", Offset = "0xB7BC0C", VA = "0xB7BC0C")]
	private void Update()
	{
	}

	[Token(Token = "0x6001488")]
	[Address(RVA = "0xB7BD38", Offset = "0xB7BD38", VA = "0xB7BD38")]
	public OvrAvatarHand()
	{
	}
}
[Token(Token = "0x20003B9")]
public class OvrAvatarLocalDriver : OvrAvatarDriver
{
	[Token(Token = "0x4001296")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private Vector3 centerEyePosition;

	[Token(Token = "0x4001297")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private Quaternion centerEyeRotation;

	[Token(Token = "0x4001298")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	private float voiceAmplitude;

	[Token(Token = "0x6001489")]
	[Address(RVA = "0xB7BD94", Offset = "0xB7BD94", VA = "0xB7BD94")]
	private ControllerPose GetMalibuControllerPose(OVRInput.Controller controller)
	{
		return default(ControllerPose);
	}

	[Token(Token = "0x600148A")]
	[Address(RVA = "0xB7BED4", Offset = "0xB7BED4", VA = "0xB7BED4")]
	private ControllerPose GetControllerPose(OVRInput.Controller controller)
	{
		return default(ControllerPose);
	}

	[Token(Token = "0x600148B")]
	[Address(RVA = "0xB7C204", Offset = "0xB7C204", VA = "0xB7C204")]
	private void CalculateCurrentPose()
	{
	}

	[Token(Token = "0x600148C")]
	[Address(RVA = "0xB7C420", Offset = "0xB7C420", VA = "0xB7C420", Slot = "4")]
	public override void UpdateTransforms(IntPtr sdkAvatar)
	{
	}

	[Token(Token = "0x600148D")]
	[Address(RVA = "0xB7C448", Offset = "0xB7C448", VA = "0xB7C448")]
	public OvrAvatarLocalDriver()
	{
	}
}
[Token(Token = "0x20003BA")]
public class OvrAvatarMaterialManager : MonoBehaviour
{
	[Token(Token = "0x20003BB")]
	public enum TextureType
	{
		[Token(Token = "0x40012BA")]
		DiffuseTextures,
		[Token(Token = "0x40012BB")]
		NormalMaps,
		[Token(Token = "0x40012BC")]
		RoughnessMaps,
		[Token(Token = "0x40012BD")]
		Count
	}

	[Token(Token = "0x20003BC")]
	public struct AvatarComponentMaterialProperties
	{
		[Token(Token = "0x40012BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ovrAvatarBodyPartType TypeIndex;

		[Token(Token = "0x40012BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public Color Color;

		[Token(Token = "0x40012C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Texture2D[] Textures;

		[Token(Token = "0x40012C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float DiffuseIntensity;

		[Token(Token = "0x40012C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float RimIntensity;

		[Token(Token = "0x40012C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float ReflectionIntensity;
	}

	[Token(Token = "0x20003BD")]
	public struct AvatarTextureArrayProperties
	{
		[Token(Token = "0x40012C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Texture2D[] Textures;

		[Token(Token = "0x40012C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Texture2DArray TextureArray;
	}

	[Token(Token = "0x20003BE")]
	public struct AvatarMaterialPropertyBlock
	{
		[Token(Token = "0x40012C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Vector4[] Colors;

		[Token(Token = "0x40012C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float[] DiffuseIntensities;

		[Token(Token = "0x40012C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float[] RimIntensities;

		[Token(Token = "0x40012C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float[] ReflectionIntensities;
	}

	[Serializable]
	[Token(Token = "0x20003BF")]
	public class AvatarMaterialConfig
	{
		[Token(Token = "0x40012CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public AvatarComponentMaterialProperties[] ComponentMaterialProperties;

		[Token(Token = "0x40012CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AvatarMaterialPropertyBlock MaterialPropertyBlock;

		[Token(Token = "0x600149D")]
		[Address(RVA = "0xB7E130", Offset = "0xB7E130", VA = "0xB7E130")]
		public AvatarMaterialConfig()
		{
		}
	}

	[Token(Token = "0x20003C0")]
	[CompilerGenerated]
	private sealed class <RunLoadingAnimation>d__49 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40012CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40012CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40012CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public OvrAvatarMaterialManager <>4__this;

		[Token(Token = "0x40012CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Action callBack;

		[Token(Token = "0x40012D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int <srcBlend>5__2;

		[Token(Token = "0x40012D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private int <dstBlend>5__3;

		[Token(Token = "0x40012D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private string <lightModeTag>5__4;

		[Token(Token = "0x40012D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private string <renderTypeTag>5__5;

		[Token(Token = "0x40012D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private string <renderQueueTag>5__6;

		[Token(Token = "0x40012D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private string <ignoreProjectorTag>5__7;

		[Token(Token = "0x40012D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private int <renderQueue>5__8;

		[Token(Token = "0x40012D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private bool <transparentQueue>5__9;

		[Token(Token = "0x170001C2")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60014A1")]
			[Address(RVA = "0xB7EB04", Offset = "0xB7EB04", VA = "0xB7EB04", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001C3")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60014A3")]
			[Address(RVA = "0xB7EB4C", Offset = "0xB7EB4C", VA = "0xB7EB4C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600149E")]
		[Address(RVA = "0xB7DF64", Offset = "0xB7DF64", VA = "0xB7DF64")]
		[DebuggerHidden]
		public <RunLoadingAnimation>d__49(int <>1__state)
		{
		}

		[Token(Token = "0x600149F")]
		[Address(RVA = "0xB7E4EC", Offset = "0xB7E4EC", VA = "0xB7E4EC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60014A0")]
		[Address(RVA = "0xB7E4F0", Offset = "0xB7E4F0", VA = "0xB7E4F0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60014A2")]
		[Address(RVA = "0xB7EB0C", Offset = "0xB7EB0C", VA = "0xB7EB0C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4001299")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Renderer TargetRenderer;

	[Token(Token = "0x400129A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private AvatarTextureArrayProperties[] TextureArrays;

	[Token(Token = "0x400129B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private readonly string[] TextureTypeToShaderProperties;

	[Token(Token = "0x400129C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AvatarMaterialConfig LocalAvatarConfig;

	[Token(Token = "0x400129D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public List<ReflectionProbeBlendInfo> ReflectionProbes;

	[Token(Token = "0x400129E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Shader CombinedShader;

	[Token(Token = "0x400129F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static string AVATAR_SHADER_LOADER;

	[Token(Token = "0x40012A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static string AVATAR_SHADER_MAINTEX;

	[Token(Token = "0x40012A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static string AVATAR_SHADER_NORMALMAP;

	[Token(Token = "0x40012A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static string AVATAR_SHADER_ROUGHNESSMAP;

	[Token(Token = "0x40012A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public static string AVATAR_SHADER_COLOR;

	[Token(Token = "0x40012A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public static string AVATAR_SHADER_DIFFUSEINTENSITY;

	[Token(Token = "0x40012A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public static string AVATAR_SHADER_RIMINTENSITY;

	[Token(Token = "0x40012A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public static string AVATAR_SHADER_REFLECTIONINTENSITY;

	[Token(Token = "0x40012A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public static string AVATAR_SHADER_CUBEMAP;

	[Token(Token = "0x40012A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public static string AVATAR_SHADER_ALPHA;

	[Token(Token = "0x40012A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public static string AVATAR_SHADER_LOADING_DIMMER;

	[Token(Token = "0x40012AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public static string AVATAR_SHADER_IRIS_COLOR;

	[Token(Token = "0x40012AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public static string AVATAR_SHADER_LIP_COLOR;

	[Token(Token = "0x40012AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public static string AVATAR_SHADER_BROW_COLOR;

	[Token(Token = "0x40012AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public static string AVATAR_SHADER_LASH_COLOR;

	[Token(Token = "0x40012AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public static string AVATAR_SHADER_SCLERA_COLOR;

	[Token(Token = "0x40012AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public static string AVATAR_SHADER_GUM_COLOR;

	[Token(Token = "0x40012B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public static string AVATAR_SHADER_TEETH_COLOR;

	[Token(Token = "0x40012B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public static string AVATAR_SHADER_LIP_SMOOTHNESS;

	[Token(Token = "0x40012B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public static float[] DiffuseIntensities;

	[Token(Token = "0x40012B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public static float[] RimIntensities;

	[Token(Token = "0x40012B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public static float[] ReflectionIntensities;

	[Token(Token = "0x40012B5")]
	private const float LOADING_ANIMATION_AMPLITUDE = 0.5f;

	[Token(Token = "0x40012B6")]
	private const float LOADING_ANIMATION_PERIOD = 0.35f;

	[Token(Token = "0x40012B7")]
	private const float LOADING_ANIMATION_CURVE_SCALE = 0.25f;

	[Token(Token = "0x40012B8")]
	private const float LOADING_ANIMATION_DIMMER_MIN = 0.3f;

	[Token(Token = "0x600148E")]
	[Address(RVA = "0xB7C4E8", Offset = "0xB7C4E8", VA = "0xB7C4E8")]
	public void CreateTextureArrays()
	{
	}

	[Token(Token = "0x600148F")]
	[Address(RVA = "0xB7C668", Offset = "0xB7C668", VA = "0xB7C668")]
	public void SetRenderer(Renderer renderer)
	{
	}

	[Token(Token = "0x6001490")]
	[Address(RVA = "0xB7C690", Offset = "0xB7C690", VA = "0xB7C690")]
	public void OnCombinedMeshReady()
	{
	}

	[Token(Token = "0x6001491")]
	[Address(RVA = "0xB7CD8C", Offset = "0xB7CD8C", VA = "0xB7CD8C")]
	public void AddTextureIDToTextureManager(ulong assetID, bool isSingleComponent)
	{
	}

	[Token(Token = "0x6001492")]
	[Address(RVA = "0xB7CE60", Offset = "0xB7CE60", VA = "0xB7CE60")]
	private void DeleteTextureSet()
	{
	}

	[Token(Token = "0x6001493")]
	[Address(RVA = "0xB7C730", Offset = "0xB7C730", VA = "0xB7C730")]
	public void InitTextureArrays()
	{
	}

	[Token(Token = "0x6001494")]
	[Address(RVA = "0xB7CEA8", Offset = "0xB7CEA8", VA = "0xB7CEA8")]
	private void ProcessTexturesWithMips(Texture2D[] textures, int texArrayResolution, Texture2DArray texArray)
	{
	}

	[Token(Token = "0x6001495")]
	[Address(RVA = "0xB7CB60", Offset = "0xB7CB60", VA = "0xB7CB60")]
	private void SetMaterialPropertyBlock()
	{
	}

	[Token(Token = "0x6001496")]
	[Address(RVA = "0xB7CF7C", Offset = "0xB7CF7C", VA = "0xB7CF7C")]
	private void ApplyMaterialPropertyBlock()
	{
	}

	[Token(Token = "0x6001497")]
	[Address(RVA = "0xB7D200", Offset = "0xB7D200", VA = "0xB7D200")]
	public static ovrAvatarBodyPartType GetComponentType(string objectName)
	{
		return default(ovrAvatarBodyPartType);
	}

	[Token(Token = "0x6001498")]
	[Address(RVA = "0xB7D324", Offset = "0xB7D324", VA = "0xB7D324")]
	private ulong GetTextureIDForType(ovrAvatarPBSMaterialState materialState, TextureType type)
	{
		return default(ulong);
	}

	[Token(Token = "0x6001499")]
	[Address(RVA = "0xB7D35C", Offset = "0xB7D35C", VA = "0xB7D35C")]
	public void ValidateTextures(ovrAvatarPBSMaterialState[] materialStates)
	{
	}

	[Token(Token = "0x600149A")]
	[Address(RVA = "0xB7CD18", Offset = "0xB7CD18", VA = "0xB7CD18")]
	[IteratorStateMachine(typeof(<RunLoadingAnimation>d__49))]
	private IEnumerator RunLoadingAnimation(Action callBack)
	{
		return null;
	}

	[Token(Token = "0x600149B")]
	[Address(RVA = "0xB7DF8C", Offset = "0xB7DF8C", VA = "0xB7DF8C")]
	public OvrAvatarMaterialManager()
	{
	}
}
[Token(Token = "0x20003C1")]
public class OvrAvatarPacket
{
	[Token(Token = "0x40012D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public IntPtr ovrNativePacket;

	[Token(Token = "0x40012D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private List<float> frameTimes;

	[Token(Token = "0x40012DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private List<OvrAvatarDriver.PoseFrame> frames;

	[Token(Token = "0x40012DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private List<byte[]> encodedAudioPackets;

	[Token(Token = "0x170001C4")]
	public float Duration
	{
		[Token(Token = "0x60014A4")]
		[Address(RVA = "0xB74F00", Offset = "0xB74F00", VA = "0xB74F00")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x170001C5")]
	public OvrAvatarDriver.PoseFrame FinalFrame
	{
		[Token(Token = "0x60014A5")]
		[Address(RVA = "0xB750E8", Offset = "0xB750E8", VA = "0xB750E8")]
		get
		{
			return default(OvrAvatarDriver.PoseFrame);
		}
	}

	[Token(Token = "0x60014A6")]
	[Address(RVA = "0xB754D4", Offset = "0xB754D4", VA = "0xB754D4")]
	public OvrAvatarPacket()
	{
	}

	[Token(Token = "0x60014A7")]
	[Address(RVA = "0xB74CAC", Offset = "0xB74CAC", VA = "0xB74CAC")]
	public OvrAvatarPacket(OvrAvatarDriver.PoseFrame initialPose)
	{
	}

	[Token(Token = "0x60014A8")]
	[Address(RVA = "0xB7EB54", Offset = "0xB7EB54", VA = "0xB7EB54")]
	private OvrAvatarPacket(List<float> frameTimes, List<OvrAvatarDriver.PoseFrame> frames, List<byte[]> audioPackets)
	{
	}

	[Token(Token = "0x60014A9")]
	[Address(RVA = "0xB74F64", Offset = "0xB74F64", VA = "0xB74F64")]
	public void AddFrame(OvrAvatarDriver.PoseFrame frame, float deltaSeconds)
	{
	}

	[Token(Token = "0x60014AA")]
	[Address(RVA = "0xB7EC80", Offset = "0xB7EC80", VA = "0xB7EC80")]
	public OvrAvatarDriver.PoseFrame GetPoseFrame(float seconds)
	{
		return default(OvrAvatarDriver.PoseFrame);
	}

	[Token(Token = "0x60014AB")]
	[Address(RVA = "0xB7EE5C", Offset = "0xB7EE5C", VA = "0xB7EE5C")]
	public static OvrAvatarPacket Read(Stream stream)
	{
		return null;
	}

	[Token(Token = "0x60014AC")]
	[Address(RVA = "0xB7F3A4", Offset = "0xB7F3A4", VA = "0xB7F3A4")]
	public void Write(Stream stream)
	{
	}
}
[Token(Token = "0x20003C2")]
internal static class BinaryWriterExtensions
{
	[Token(Token = "0x60014AD")]
	[Address(RVA = "0xB7F5C8", Offset = "0xB7F5C8", VA = "0xB7F5C8")]
	public static void Write(this BinaryWriter writer, OvrAvatarDriver.PoseFrame frame)
	{
	}

	[Token(Token = "0x60014AE")]
	[Address(RVA = "0xB7F6D0", Offset = "0xB7F6D0", VA = "0xB7F6D0")]
	public static void Write(this BinaryWriter writer, Vector3 vec3)
	{
	}

	[Token(Token = "0x60014AF")]
	[Address(RVA = "0xB7F85C", Offset = "0xB7F85C", VA = "0xB7F85C")]
	public static void Write(this BinaryWriter writer, Vector2 vec2)
	{
	}

	[Token(Token = "0x60014B0")]
	[Address(RVA = "0xB7F734", Offset = "0xB7F734", VA = "0xB7F734")]
	public static void Write(this BinaryWriter writer, Quaternion quat)
	{
	}

	[Token(Token = "0x60014B1")]
	[Address(RVA = "0xB7F7BC", Offset = "0xB7F7BC", VA = "0xB7F7BC")]
	public static void Write(this BinaryWriter writer, OvrAvatarDriver.ControllerPose pose)
	{
	}
}
[Token(Token = "0x20003C3")]
internal static class BinaryReaderExtensions
{
	[Token(Token = "0x60014B2")]
	[Address(RVA = "0xB7F208", Offset = "0xB7F208", VA = "0xB7F208")]
	public static OvrAvatarDriver.PoseFrame ReadPoseFrame(this BinaryReader reader)
	{
		return default(OvrAvatarDriver.PoseFrame);
	}

	[Token(Token = "0x60014B3")]
	[Address(RVA = "0xB7FA84", Offset = "0xB7FA84", VA = "0xB7FA84")]
	public static Vector2 ReadVector2(this BinaryReader reader)
	{
		return default(Vector2);
	}

	[Token(Token = "0x60014B4")]
	[Address(RVA = "0xB7F8A4", Offset = "0xB7F8A4", VA = "0xB7F8A4")]
	public static Vector3 ReadVector3(this BinaryReader reader)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60014B5")]
	[Address(RVA = "0xB7F910", Offset = "0xB7F910", VA = "0xB7F910")]
	public static Quaternion ReadQuaternion(this BinaryReader reader)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x60014B6")]
	[Address(RVA = "0xB7F9A0", Offset = "0xB7F9A0", VA = "0xB7F9A0")]
	public static OvrAvatarDriver.ControllerPose ReadControllerPose(this BinaryReader reader)
	{
		return default(OvrAvatarDriver.ControllerPose);
	}
}
[Token(Token = "0x20003C4")]
public class OvrAvatarRemoteDriver : OvrAvatarDriver
{
	[Token(Token = "0x40012DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private Queue<OvrAvatarPacket> packetQueue;

	[Token(Token = "0x40012DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private IntPtr CurrentSDKPacket;

	[Token(Token = "0x40012DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private float CurrentPacketTime;

	[Token(Token = "0x40012DF")]
	private const int MinPacketQueue = 1;

	[Token(Token = "0x40012E0")]
	private const int MaxPacketQueue = 4;

	[Token(Token = "0x40012E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	private int CurrentSequence;

	[Token(Token = "0x40012E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private bool isStreaming;

	[Token(Token = "0x40012E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private OvrAvatarPacket currentPacket;

	[Token(Token = "0x60014B7")]
	[Address(RVA = "0xB7FAD4", Offset = "0xB7FAD4", VA = "0xB7FAD4")]
	public void QueuePacket(int sequence, OvrAvatarPacket packet)
	{
	}

	[Token(Token = "0x60014B8")]
	[Address(RVA = "0xB7FB58", Offset = "0xB7FB58", VA = "0xB7FB58", Slot = "4")]
	public override void UpdateTransforms(IntPtr sdkAvatar)
	{
	}

	[Token(Token = "0x60014B9")]
	[Address(RVA = "0xB7FB74", Offset = "0xB7FB74", VA = "0xB7FB74")]
	private void UpdateFromSDKPacket(IntPtr sdkAvatar)
	{
	}

	[Token(Token = "0x60014BA")]
	[Address(RVA = "0xB7FCF8", Offset = "0xB7FCF8", VA = "0xB7FCF8")]
	private void UpdateFromUnityPacket(IntPtr sdkAvatar)
	{
	}

	[Token(Token = "0x60014BB")]
	[Address(RVA = "0xB7FE7C", Offset = "0xB7FE7C", VA = "0xB7FE7C")]
	public OvrAvatarRemoteDriver()
	{
	}
}
[Token(Token = "0x20003C5")]
public class OvrAvatarRenderComponent : MonoBehaviour
{
	[Token(Token = "0x40012E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool firstSkinnedUpdate;

	[Token(Token = "0x40012E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public SkinnedMeshRenderer mesh;

	[Token(Token = "0x40012E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform[] bones;

	[Token(Token = "0x40012E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool isBodyComponent;

	[Token(Token = "0x60014BC")]
	[Address(RVA = "0xB7FF14", Offset = "0xB7FF14", VA = "0xB7FF14")]
	protected void UpdateActive(OvrAvatar avatar, ovrAvatarVisibilityFlags mask)
	{
	}

	[Token(Token = "0x60014BD")]
	[Address(RVA = "0xB7FFF0", Offset = "0xB7FFF0", VA = "0xB7FFF0")]
	protected SkinnedMeshRenderer CreateSkinnedMesh(ulong assetID, ovrAvatarVisibilityFlags visibilityMask, int thirdPersonLayer, int firstPersonLayer)
	{
		return null;
	}

	[Token(Token = "0x60014BE")]
	[Address(RVA = "0xB801D8", Offset = "0xB801D8", VA = "0xB801D8")]
	protected void UpdateSkinnedMesh(OvrAvatar avatar, Transform[] bones, ovrAvatarTransform localTransform, ovrAvatarVisibilityFlags visibilityMask, IntPtr renderPart)
	{
	}

	[Token(Token = "0x60014BF")]
	[Address(RVA = "0xB80518", Offset = "0xB80518", VA = "0xB80518")]
	protected Material CreateAvatarMaterial(string name, Shader shader)
	{
		return null;
	}

	[Token(Token = "0x60014C0")]
	[Address(RVA = "0xB8061C", Offset = "0xB8061C", VA = "0xB8061C")]
	public OvrAvatarRenderComponent()
	{
	}
}
[Token(Token = "0x20003C6")]
[Flags]
public enum ovrAvatarCapabilities
{
	[Token(Token = "0x40012E9")]
	Body = 1,
	[Token(Token = "0x40012EA")]
	Hands = 2,
	[Token(Token = "0x40012EB")]
	Base = 4,
	[Token(Token = "0x40012EC")]
	BodyTilt = 0x10,
	[Token(Token = "0x40012ED")]
	Expressive = 0x20,
	[Token(Token = "0x40012EE")]
	All = -1
}
[Token(Token = "0x20003C7")]
public enum ovrAvatarMessageType
{
	[Token(Token = "0x40012F0")]
	AvatarSpecification,
	[Token(Token = "0x40012F1")]
	AssetLoaded,
	[Token(Token = "0x40012F2")]
	Count
}
[Token(Token = "0x20003C8")]
public struct ovrAvatarMessage_AvatarSpecification
{
	[Token(Token = "0x40012F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public IntPtr avatarSpec;

	[Token(Token = "0x40012F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public ulong oculusUserID;
}
[Token(Token = "0x20003C9")]
public struct ovrAvatarMessage_AssetLoaded
{
	[Token(Token = "0x40012F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ulong assetID;

	[Token(Token = "0x40012F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public IntPtr asset;
}
[Token(Token = "0x20003CA")]
public enum ovrAvatarAssetType
{
	[Token(Token = "0x40012F8")]
	Mesh,
	[Token(Token = "0x40012F9")]
	Texture,
	[Token(Token = "0x40012FA")]
	Pose,
	[Token(Token = "0x40012FB")]
	Material,
	[Token(Token = "0x40012FC")]
	CombinedMesh,
	[Token(Token = "0x40012FD")]
	PBSMaterial,
	[Token(Token = "0x40012FE")]
	FailedLoad,
	[Token(Token = "0x40012FF")]
	Count
}
[Token(Token = "0x20003CB")]
public struct ovrAvatarMeshVertex
{
	[Token(Token = "0x4001300")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float x;

	[Token(Token = "0x4001301")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public float y;

	[Token(Token = "0x4001302")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float z;

	[Token(Token = "0x4001303")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public float nx;

	[Token(Token = "0x4001304")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float ny;

	[Token(Token = "0x4001305")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float nz;

	[Token(Token = "0x4001306")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float tx;

	[Token(Token = "0x4001307")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float ty;

	[Token(Token = "0x4001308")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float tz;

	[Token(Token = "0x4001309")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float tw;

	[Token(Token = "0x400130A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float u;

	[Token(Token = "0x400130B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float v;

	[Token(Token = "0x400130C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public byte[] blendIndices;

	[Token(Token = "0x400130D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float[] blendWeights;
}
[Token(Token = "0x20003CC")]
public struct ovrAvatarMeshVertexV2
{
	[Token(Token = "0x400130E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float x;

	[Token(Token = "0x400130F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public float y;

	[Token(Token = "0x4001310")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float z;

	[Token(Token = "0x4001311")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public float nx;

	[Token(Token = "0x4001312")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float ny;

	[Token(Token = "0x4001313")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float nz;

	[Token(Token = "0x4001314")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float tx;

	[Token(Token = "0x4001315")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float ty;

	[Token(Token = "0x4001316")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float tz;

	[Token(Token = "0x4001317")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float tw;

	[Token(Token = "0x4001318")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float u;

	[Token(Token = "0x4001319")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float v;

	[Token(Token = "0x400131A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float r;

	[Token(Token = "0x400131B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float g;

	[Token(Token = "0x400131C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float b;

	[Token(Token = "0x400131D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float a;

	[Token(Token = "0x400131E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public byte[] blendIndices;

	[Token(Token = "0x400131F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float[] blendWeights;
}
[Token(Token = "0x20003CD")]
public struct ovrAvatarBlendVertex
{
	[Token(Token = "0x4001320")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float x;

	[Token(Token = "0x4001321")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public float y;

	[Token(Token = "0x4001322")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float z;

	[Token(Token = "0x4001323")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public float nx;

	[Token(Token = "0x4001324")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float ny;

	[Token(Token = "0x4001325")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float nz;

	[Token(Token = "0x4001326")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float tx;

	[Token(Token = "0x4001327")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float ty;

	[Token(Token = "0x4001328")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float tz;
}
[Token(Token = "0x20003CE")]
public struct ovrAvatarMeshAssetData
{
	[Token(Token = "0x4001329")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint vertexCount;

	[Token(Token = "0x400132A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public IntPtr vertexBuffer;

	[Token(Token = "0x400132B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public uint indexCount;

	[Token(Token = "0x400132C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public IntPtr indexBuffer;

	[Token(Token = "0x400132D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ovrAvatarSkinnedMeshPose skinnedBindPose;
}
[Token(Token = "0x20003CF")]
public struct ovrAvatarMeshAssetDataV2
{
	[Token(Token = "0x400132E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint vertexCount;

	[Token(Token = "0x400132F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public IntPtr vertexBuffer;

	[Token(Token = "0x4001330")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public uint indexCount;

	[Token(Token = "0x4001331")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public IntPtr indexBuffer;

	[Token(Token = "0x4001332")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ovrAvatarSkinnedMeshPose skinnedBindPose;
}
[Token(Token = "0x20003D0")]
public enum ovrAvatarTextureFormat
{
	[Token(Token = "0x4001334")]
	RGB24,
	[Token(Token = "0x4001335")]
	DXT1,
	[Token(Token = "0x4001336")]
	DXT5,
	[Token(Token = "0x4001337")]
	ASTC_RGB_6x6,
	[Token(Token = "0x4001338")]
	ASTC_RGB_6x6_MIPMAPS,
	[Token(Token = "0x4001339")]
	Count
}
[Token(Token = "0x20003D1")]
public struct ovrAvatarTextureAssetData
{
	[Token(Token = "0x400133A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTextureFormat format;

	[Token(Token = "0x400133B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public uint sizeX;

	[Token(Token = "0x400133C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public uint sizeY;

	[Token(Token = "0x400133D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public uint mipCount;

	[Token(Token = "0x400133E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ulong textureDataSize;

	[Token(Token = "0x400133F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public IntPtr textureData;
}
[Token(Token = "0x20003D2")]
public enum ovrAvatarRenderPartType
{
	[Token(Token = "0x4001341")]
	SkinnedMeshRender,
	[Token(Token = "0x4001342")]
	SkinnedMeshRenderPBS,
	[Token(Token = "0x4001343")]
	ProjectorRender,
	[Token(Token = "0x4001344")]
	SkinnedMeshRenderPBS_V2,
	[Token(Token = "0x4001345")]
	Count
}
[Token(Token = "0x20003D3")]
public enum ovrAvatarLogLevel
{
	[Token(Token = "0x4001347")]
	Unknown,
	[Token(Token = "0x4001348")]
	Default,
	[Token(Token = "0x4001349")]
	Verbose,
	[Token(Token = "0x400134A")]
	Debug,
	[Token(Token = "0x400134B")]
	Info,
	[Token(Token = "0x400134C")]
	Warn,
	[Token(Token = "0x400134D")]
	Error,
	[Token(Token = "0x400134E")]
	Fatal,
	[Token(Token = "0x400134F")]
	Silent
}
[Token(Token = "0x20003D4")]
public struct ovrAvatarTransform
{
	[Token(Token = "0x4001350")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector3 position;

	[Token(Token = "0x4001351")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Quaternion orientation;

	[Token(Token = "0x4001352")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Vector3 scale;
}
[Token(Token = "0x20003D5")]
[Flags]
public enum ovrAvatarButton
{
	[Token(Token = "0x4001354")]
	One = 1,
	[Token(Token = "0x4001355")]
	Two = 2,
	[Token(Token = "0x4001356")]
	Three = 4,
	[Token(Token = "0x4001357")]
	Joystick = 8
}
[Token(Token = "0x20003D6")]
[Flags]
public enum ovrAvatarTouch
{
	[Token(Token = "0x4001359")]
	One = 1,
	[Token(Token = "0x400135A")]
	Two = 2,
	[Token(Token = "0x400135B")]
	Joystick = 4,
	[Token(Token = "0x400135C")]
	ThumbRest = 8,
	[Token(Token = "0x400135D")]
	Index = 0x10,
	[Token(Token = "0x400135E")]
	Pointing = 0x40,
	[Token(Token = "0x400135F")]
	ThumbUp = 0x80
}
[Token(Token = "0x20003D7")]
public struct ovrAvatarHandInputState
{
	[Token(Token = "0x4001360")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform transform;

	[Token(Token = "0x4001361")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ovrAvatarButton buttonMask;

	[Token(Token = "0x4001362")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public ovrAvatarTouch touchMask;

	[Token(Token = "0x4001363")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float joystickX;

	[Token(Token = "0x4001364")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float joystickY;

	[Token(Token = "0x4001365")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float indexTrigger;

	[Token(Token = "0x4001366")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float handTrigger;

	[Token(Token = "0x4001367")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool isActive;
}
[Token(Token = "0x20003D8")]
public struct ovrAvatarComponent
{
	[Token(Token = "0x4001368")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform transform;

	[Token(Token = "0x4001369")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public uint renderPartCount;

	[Token(Token = "0x400136A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public IntPtr renderParts;

	[Token(Token = "0x400136B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public string name;
}
[Token(Token = "0x20003D9")]
internal struct ovrAvatarComponent_Offsets
{
	[Token(Token = "0x400136C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static long transform;

	[Token(Token = "0x400136D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static int renderPartCount;

	[Token(Token = "0x400136E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public static int renderParts;

	[Token(Token = "0x400136F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static int name;
}
[Token(Token = "0x20003DA")]
public struct ovrAvatarBaseComponent
{
	[Token(Token = "0x4001370")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector3 basePosition;

	[Token(Token = "0x4001371")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public IntPtr renderComponent;
}
[Token(Token = "0x20003DB")]
public struct ovrAvatarBodyComponent
{
	[Token(Token = "0x4001372")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform leftEyeTransform;

	[Token(Token = "0x4001373")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ovrAvatarTransform rightEyeTransform;

	[Token(Token = "0x4001374")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public ovrAvatarTransform centerEyeTransform;

	[Token(Token = "0x4001375")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public IntPtr renderComponent;
}
[Token(Token = "0x20003DC")]
public struct ovrAvatarBodyComponent_Offsets
{
	[Token(Token = "0x4001376")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static long leftEyeTransform;

	[Token(Token = "0x4001377")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static long rightEyeTransform;

	[Token(Token = "0x4001378")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static long centerEyeTransform;

	[Token(Token = "0x4001379")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static long renderComponent;
}
[Token(Token = "0x20003DD")]
public struct ovrAvatarControllerComponent
{
	[Token(Token = "0x400137A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarHandInputState inputState;

	[Token(Token = "0x400137B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public IntPtr renderComponent;
}
[Token(Token = "0x20003DE")]
public struct ovrAvatarHandComponent
{
	[Token(Token = "0x400137C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarHandInputState inputState;

	[Token(Token = "0x400137D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public IntPtr renderComponent;
}
[Token(Token = "0x20003DF")]
public enum ovrAvatarMaterialLayerBlendMode
{
	[Token(Token = "0x400137F")]
	Add,
	[Token(Token = "0x4001380")]
	Multiply,
	[Token(Token = "0x4001381")]
	Count
}
[Token(Token = "0x20003E0")]
public enum ovrAvatarMaterialLayerSampleMode
{
	[Token(Token = "0x4001383")]
	Color,
	[Token(Token = "0x4001384")]
	Texture,
	[Token(Token = "0x4001385")]
	TextureSingleChannel,
	[Token(Token = "0x4001386")]
	Parallax,
	[Token(Token = "0x4001387")]
	Count
}
[Token(Token = "0x20003E1")]
public enum ovrAvatarMaterialMaskType
{
	[Token(Token = "0x4001389")]
	None,
	[Token(Token = "0x400138A")]
	Positional,
	[Token(Token = "0x400138B")]
	ViewReflection,
	[Token(Token = "0x400138C")]
	Fresnel,
	[Token(Token = "0x400138D")]
	Pulse,
	[Token(Token = "0x400138E")]
	Count
}
[Token(Token = "0x20003E2")]
public enum ovrAvatarControllerType
{
	[Token(Token = "0x4001390")]
	Touch,
	[Token(Token = "0x4001391")]
	Malibu,
	[Token(Token = "0x4001392")]
	Go,
	[Token(Token = "0x4001393")]
	Quest,
	[Token(Token = "0x4001394")]
	Count
}
[Token(Token = "0x20003E3")]
public enum ovrAvatarAssetLevelOfDetail
{
	[Token(Token = "0x4001396")]
	Lowest = 1,
	[Token(Token = "0x4001397")]
	Medium = 3,
	[Token(Token = "0x4001398")]
	Highest = 5
}
[Token(Token = "0x20003E4")]
public enum ovrAvatarLookAndFeelVersion
{
	[Token(Token = "0x400139A")]
	Unknown = -1,
	[Token(Token = "0x400139B")]
	One,
	[Token(Token = "0x400139C")]
	Two
}
[Token(Token = "0x20003E5")]
public struct ovrAvatarMaterialLayerState
{
	[Token(Token = "0x400139D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarMaterialLayerBlendMode blendMode;

	[Token(Token = "0x400139E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public ovrAvatarMaterialLayerSampleMode sampleMode;

	[Token(Token = "0x400139F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public ovrAvatarMaterialMaskType maskType;

	[Token(Token = "0x40013A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Vector4 layerColor;

	[Token(Token = "0x40013A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Vector4 sampleParameters;

	[Token(Token = "0x40013A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ulong sampleTexture;

	[Token(Token = "0x40013A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Vector4 sampleScaleOffset;

	[Token(Token = "0x40013A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Vector4 maskParameters;

	[Token(Token = "0x40013A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Vector4 maskAxis;

	[Token(Token = "0x60014C3")]
	[Address(RVA = "0xB809F4", Offset = "0xB809F4", VA = "0xB809F4")]
	private static bool VectorEquals(Vector4 a, Vector4 b)
	{
		return default(bool);
	}

	[Token(Token = "0x60014C4")]
	[Address(RVA = "0xB80A24", Offset = "0xB80A24", VA = "0xB80A24", Slot = "0")]
	public override bool Equals(object obj)
	{
		return default(bool);
	}

	[Token(Token = "0x60014C5")]
	[Address(RVA = "0xB80C34", Offset = "0xB80C34", VA = "0xB80C34", Slot = "2")]
	public override int GetHashCode()
	{
		return default(int);
	}
}
[Token(Token = "0x20003E6")]
public struct ovrAvatarMaterialState
{
	[Token(Token = "0x40013A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector4 baseColor;

	[Token(Token = "0x40013A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ovrAvatarMaterialMaskType baseMaskType;

	[Token(Token = "0x40013A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public Vector4 baseMaskParameters;

	[Token(Token = "0x40013A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public Vector4 baseMaskAxis;

	[Token(Token = "0x40013AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public ovrAvatarMaterialLayerSampleMode sampleMode;

	[Token(Token = "0x40013AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ulong alphaMaskTextureID;

	[Token(Token = "0x40013AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Vector4 alphaMaskScaleOffset;

	[Token(Token = "0x40013AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public ulong normalMapTextureID;

	[Token(Token = "0x40013AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Vector4 normalMapScaleOffset;

	[Token(Token = "0x40013AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public ulong parallaxMapTextureID;

	[Token(Token = "0x40013B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Vector4 parallaxMapScaleOffset;

	[Token(Token = "0x40013B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public ulong roughnessMapTextureID;

	[Token(Token = "0x40013B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Vector4 roughnessMapScaleOffset;

	[Token(Token = "0x40013B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public uint layerCount;

	[Token(Token = "0x40013B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public ovrAvatarMaterialLayerState[] layers;

	[Token(Token = "0x60014C6")]
	[Address(RVA = "0xB80E78", Offset = "0xB80E78", VA = "0xB80E78")]
	private static bool VectorEquals(Vector4 a, Vector4 b)
	{
		return default(bool);
	}

	[Token(Token = "0x60014C7")]
	[Address(RVA = "0xB80EA8", Offset = "0xB80EA8", VA = "0xB80EA8", Slot = "0")]
	public override bool Equals(object obj)
	{
		return default(bool);
	}

	[Token(Token = "0x60014C8")]
	[Address(RVA = "0xB81238", Offset = "0xB81238", VA = "0xB81238", Slot = "2")]
	public override int GetHashCode()
	{
		return default(int);
	}
}
[Token(Token = "0x20003E7")]
public struct ovrAvatarExpressiveParameters
{
	[Token(Token = "0x40013B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector4 irisColor;

	[Token(Token = "0x40013B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Vector4 scleraColor;

	[Token(Token = "0x40013B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Vector4 lashColor;

	[Token(Token = "0x40013B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Vector4 browColor;

	[Token(Token = "0x40013B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Vector4 lipColor;

	[Token(Token = "0x40013BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Vector4 teethColor;

	[Token(Token = "0x40013BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Vector4 gumColor;

	[Token(Token = "0x40013BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public float browLashIntensity;

	[Token(Token = "0x40013BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public float lipSmoothness;

	[Token(Token = "0x60014C9")]
	[Address(RVA = "0xB815E0", Offset = "0xB815E0", VA = "0xB815E0")]
	private static bool VectorEquals(Vector4 a, Vector4 b)
	{
		return default(bool);
	}

	[Token(Token = "0x60014CA")]
	[Address(RVA = "0xB81610", Offset = "0xB81610", VA = "0xB81610", Slot = "0")]
	public override bool Equals(object obj)
	{
		return default(bool);
	}

	[Token(Token = "0x60014CB")]
	[Address(RVA = "0xB81858", Offset = "0xB81858", VA = "0xB81858", Slot = "2")]
	public override int GetHashCode()
	{
		return default(int);
	}
}
[Token(Token = "0x20003E8")]
public struct ovrAvatarPBSMaterialState
{
	[Token(Token = "0x40013BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector4 baseColor;

	[Token(Token = "0x40013BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ulong albedoTextureID;

	[Token(Token = "0x40013C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector4 albedoMultiplier;

	[Token(Token = "0x40013C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ulong metallicnessTextureID;

	[Token(Token = "0x40013C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float glossinessScale;

	[Token(Token = "0x40013C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ulong normalTextureID;

	[Token(Token = "0x40013C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public ulong heightTextureID;

	[Token(Token = "0x40013C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public ulong occlusionTextureID;

	[Token(Token = "0x40013C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public ulong emissionTextureID;

	[Token(Token = "0x40013C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Vector4 emissionMultiplier;

	[Token(Token = "0x40013C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public ulong detailMaskTextureID;

	[Token(Token = "0x40013C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public ulong detailAlbedoTextureID;

	[Token(Token = "0x40013CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public ulong detailNormalTextureID;

	[Token(Token = "0x60014CC")]
	[Address(RVA = "0xB81B2C", Offset = "0xB81B2C", VA = "0xB81B2C")]
	private static bool VectorEquals(Vector4 a, Vector4 b)
	{
		return default(bool);
	}

	[Token(Token = "0x60014CD")]
	[Address(RVA = "0xB81B5C", Offset = "0xB81B5C", VA = "0xB81B5C", Slot = "0")]
	public override bool Equals(object obj)
	{
		return default(bool);
	}

	[Token(Token = "0x60014CE")]
	[Address(RVA = "0xB81D24", Offset = "0xB81D24", VA = "0xB81D24", Slot = "2")]
	public override int GetHashCode()
	{
		return default(int);
	}
}
[Token(Token = "0x20003E9")]
public class OvrAvatarAssetMaterial : OvrAvatarAsset
{
	[Token(Token = "0x40013CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ovrAvatarMaterialState material;

	[Token(Token = "0x60014CF")]
	[Address(RVA = "0xB81F38", Offset = "0xB81F38", VA = "0xB81F38")]
	public OvrAvatarAssetMaterial(ulong id, IntPtr mat)
	{
	}
}
[Token(Token = "0x20003EA")]
public struct ovrAvatarSkinnedMeshPose
{
	[Token(Token = "0x40013CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint jointCount;

	[Token(Token = "0x40013CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public ovrAvatarTransform[] jointTransform;

	[Token(Token = "0x40013CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int[] jointParents;

	[Token(Token = "0x40013CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public IntPtr[] jointNames;
}
[Token(Token = "0x20003EB")]
[Flags]
public enum ovrAvatarVisibilityFlags
{
	[Token(Token = "0x40013D1")]
	FirstPerson = 1,
	[Token(Token = "0x40013D2")]
	ThirdPerson = 2,
	[Token(Token = "0x40013D3")]
	SelfOccluding = 4
}
[Token(Token = "0x20003EC")]
public struct ovrAvatarRenderPart_SkinnedMeshRender
{
	[Token(Token = "0x40013D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform localTransform;

	[Token(Token = "0x40013D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ovrAvatarVisibilityFlags visibilityMask;

	[Token(Token = "0x40013D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ulong meshAssetID;

	[Token(Token = "0x40013D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ovrAvatarMaterialState materialState;

	[Token(Token = "0x40013D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public ovrAvatarSkinnedMeshPose skinnedPose;
}
[Token(Token = "0x20003ED")]
public struct ovrAvatarRenderPart_SkinnedMeshRenderPBS
{
	[Token(Token = "0x40013D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform localTransform;

	[Token(Token = "0x40013DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ovrAvatarVisibilityFlags visibilityMask;

	[Token(Token = "0x40013DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ulong meshAssetID;

	[Token(Token = "0x40013DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ulong albedoTextureAssetID;

	[Token(Token = "0x40013DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public ulong surfaceTextureAssetID;

	[Token(Token = "0x40013DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public ovrAvatarSkinnedMeshPose skinnedPose;
}
[Token(Token = "0x20003EE")]
public struct ovrAvatarRenderPart_ProjectorRender
{
	[Token(Token = "0x40013DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform localTransform;

	[Token(Token = "0x40013E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public uint componentIndex;

	[Token(Token = "0x40013E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public uint renderPartIndex;

	[Token(Token = "0x40013E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ovrAvatarMaterialState materialState;
}
[Token(Token = "0x20003EF")]
public struct ovrAvatarRenderPart_SkinnedMeshRenderPBS_V2
{
	[Token(Token = "0x40013E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform localTransform;

	[Token(Token = "0x40013E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ovrAvatarVisibilityFlags visibilityMask;

	[Token(Token = "0x40013E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ulong meshAssetID;

	[Token(Token = "0x40013E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ovrAvatarPBSMaterialState materialState;

	[Token(Token = "0x40013E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public ovrAvatarSkinnedMeshPose skinnedPose;
}
[Token(Token = "0x20003F0")]
public enum ovrAvatarHandGesture
{
	[Token(Token = "0x40013E9")]
	Default,
	[Token(Token = "0x40013EA")]
	GripSphere,
	[Token(Token = "0x40013EB")]
	GripCube,
	[Token(Token = "0x40013EC")]
	Count
}
[Token(Token = "0x20003F1")]
public enum ovrAvatarBodyPartType
{
	[Token(Token = "0x40013EE")]
	Body,
	[Token(Token = "0x40013EF")]
	Clothing,
	[Token(Token = "0x40013F0")]
	Eyewear,
	[Token(Token = "0x40013F1")]
	Hair,
	[Token(Token = "0x40013F2")]
	Beard,
	[Token(Token = "0x40013F3")]
	Count
}
[Token(Token = "0x20003F2")]
public struct ovrAvatarBlendShapeParams
{
	[Token(Token = "0x40013F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint blendShapeParamCount;

	[Token(Token = "0x40013F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float[] blendShapeParams;
}
[Token(Token = "0x20003F3")]
internal struct ovrAvatarBlendShapeParams_Offsets
{
	[Token(Token = "0x40013F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int blendShapeParamCount;

	[Token(Token = "0x40013F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static long blendShapeParams;
}
[Token(Token = "0x20003F4")]
public struct ovrAvatarVisemes
{
	[Token(Token = "0x40013F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint visemeParamCount;

	[Token(Token = "0x40013F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float[] visemeParams;
}
[Token(Token = "0x20003F5")]
internal struct ovrAvatarVisemes_Offsets
{
	[Token(Token = "0x40013FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int visemeParamCount;

	[Token(Token = "0x40013FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static long visemeParams;
}
[Token(Token = "0x20003F6")]
public enum ovrAvatarGazeTargetType
{
	[Token(Token = "0x40013FD")]
	AvatarHead,
	[Token(Token = "0x40013FE")]
	AvatarHand,
	[Token(Token = "0x40013FF")]
	Object,
	[Token(Token = "0x4001400")]
	ObjectStatic,
	[Token(Token = "0x4001401")]
	Count
}
[Token(Token = "0x20003F7")]
public struct ovrAvatarGazeTarget
{
	[Token(Token = "0x4001402")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint id;

	[Token(Token = "0x4001403")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public Vector3 worldPosition;

	[Token(Token = "0x4001404")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ovrAvatarGazeTargetType type;
}
[Token(Token = "0x20003F8")]
internal struct ovrAvatarGazeTarget_Offsets
{
	[Token(Token = "0x4001405")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int id;

	[Token(Token = "0x4001406")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public static int worldPosition;

	[Token(Token = "0x4001407")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static int type;
}
[Token(Token = "0x20003F9")]
public struct ovrAvatarGazeTargets
{
	[Token(Token = "0x4001408")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint targetCount;

	[Token(Token = "0x4001409")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public ovrAvatarGazeTarget[] targets;
}
[Token(Token = "0x20003FA")]
internal struct ovrAvatarGazeTargets_Offsets
{
	[Token(Token = "0x400140A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int targetCount;

	[Token(Token = "0x400140B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static long targets;
}
[Token(Token = "0x20003FB")]
public enum ovrAvatarLightType
{
	[Token(Token = "0x400140D")]
	Point,
	[Token(Token = "0x400140E")]
	Direction,
	[Token(Token = "0x400140F")]
	Spot,
	[Token(Token = "0x4001410")]
	Count
}
[Token(Token = "0x20003FC")]
public struct ovrAvatarLight
{
	[Token(Token = "0x4001411")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint id;

	[Token(Token = "0x4001412")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public ovrAvatarLightType type;

	[Token(Token = "0x4001413")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float intensity;

	[Token(Token = "0x4001414")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Vector3 worldDirection;

	[Token(Token = "0x4001415")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 worldPosition;

	[Token(Token = "0x4001416")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float range;

	[Token(Token = "0x4001417")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float spotAngleDeg;
}
[Token(Token = "0x20003FD")]
internal struct ovrAvatarLight_Offsets
{
	[Token(Token = "0x4001418")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static long id;

	[Token(Token = "0x4001419")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static long type;

	[Token(Token = "0x400141A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static long intensity;

	[Token(Token = "0x400141B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static long worldDirection;

	[Token(Token = "0x400141C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public static long worldPosition;

	[Token(Token = "0x400141D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public static long range;

	[Token(Token = "0x400141E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public static long spotAngleDeg;
}
[Token(Token = "0x20003FE")]
public struct ovrAvatarLights
{
	[Token(Token = "0x400141F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float ambientIntensity;

	[Token(Token = "0x4001420")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public uint lightCount;

	[Token(Token = "0x4001421")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public ovrAvatarLight[] lights;
}
[Token(Token = "0x20003FF")]
internal struct ovrAvatarLights_Offsets
{
	[Token(Token = "0x4001422")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static long ambientIntensity;

	[Token(Token = "0x4001423")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static long lightCount;

	[Token(Token = "0x4001424")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static long lights;
}
[Token(Token = "0x2000400")]
[Flags]
public enum ovrAvatarDebugContext : uint
{
	[Token(Token = "0x4001426")]
	None = 0u,
	[Token(Token = "0x4001427")]
	GazeTarget = 1u,
	[Token(Token = "0x4001428")]
	Any = uint.MaxValue
}
[Token(Token = "0x2000401")]
public struct ovrAvatarDebugLine
{
	[Token(Token = "0x4001429")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector3 startPoint;

	[Token(Token = "0x400142A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Vector3 endPoint;

	[Token(Token = "0x400142B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 color;

	[Token(Token = "0x400142C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public ovrAvatarDebugContext context;

	[Token(Token = "0x400142D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public IntPtr text;
}
[Token(Token = "0x2000402")]
public struct ovrAvatarDebugTransform
{
	[Token(Token = "0x400142E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform transform;

	[Token(Token = "0x400142F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ovrAvatarDebugContext context;

	[Token(Token = "0x4001430")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public IntPtr text;
}
[Token(Token = "0x2000403")]
public delegate void specificationCallback(IntPtr specification);
[Token(Token = "0x2000404")]
public delegate void assetLoadedCallback(OvrAvatarAsset asset);
[Token(Token = "0x2000405")]
public delegate void combinedMeshLoadedCallback(IntPtr asset);
[Token(Token = "0x2000406")]
public class OvrAvatarSDKManager : MonoBehaviour
{
	[Token(Token = "0x2000407")]
	public struct AvatarSpecRequestParams
	{
		[Token(Token = "0x400143E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ulong _userId;

		[Token(Token = "0x400143F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public specificationCallback _callback;

		[Token(Token = "0x4001440")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool _useCombinedMesh;

		[Token(Token = "0x4001441")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public ovrAvatarAssetLevelOfDetail _lod;

		[Token(Token = "0x4001442")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool _forceMobileTextureFormat;

		[Token(Token = "0x4001443")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public ovrAvatarLookAndFeelVersion _lookVersion;

		[Token(Token = "0x4001444")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ovrAvatarLookAndFeelVersion _fallbackVersion;

		[Token(Token = "0x4001445")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public bool _enableExpressive;

		[Token(Token = "0x60014F3")]
		[Address(RVA = "0xB73AF0", Offset = "0xB73AF0", VA = "0xB73AF0")]
		public AvatarSpecRequestParams(ulong userId, specificationCallback callback, bool useCombinedMesh, ovrAvatarAssetLevelOfDetail lod, bool forceMobileTextureFormat, ovrAvatarLookAndFeelVersion lookVersion, ovrAvatarLookAndFeelVersion fallbackVersion, bool enableExpressive)
		{
		}
	}

	[Token(Token = "0x4001431")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static OvrAvatarSDKManager _instance;

	[Token(Token = "0x4001432")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool initialized;

	[Token(Token = "0x4001433")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Dictionary<ulong, HashSet<specificationCallback>> specificationCallbacks;

	[Token(Token = "0x4001434")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Dictionary<ulong, HashSet<assetLoadedCallback>> assetLoadedCallbacks;

	[Token(Token = "0x4001435")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Dictionary<IntPtr, combinedMeshLoadedCallback> combinedMeshLoadedCallbacks;

	[Token(Token = "0x4001436")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Dictionary<ulong, OvrAvatarAsset> assetCache;

	[Token(Token = "0x4001437")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private OvrAvatarTextureCopyManager textureCopyManager;

	[Token(Token = "0x4001438")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public ovrAvatarLogLevel LoggingLevel;

	[Token(Token = "0x4001439")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Queue<AvatarSpecRequestParams> avatarSpecificationQueue;

	[Token(Token = "0x400143A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private List<int> loadingAvatars;

	[Token(Token = "0x400143B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private bool avatarSpecRequestAvailable;

	[Token(Token = "0x400143C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private float lastDispatchedAvatarSpecRequestTime;

	[Token(Token = "0x400143D")]
	private const float AVATAR_SPEC_REQUEST_TIMEOUT = 5f;

	[Token(Token = "0x170001C6")]
	public static OvrAvatarSDKManager Instance
	{
		[Token(Token = "0x60014E2")]
		[Address(RVA = "0xB73078", Offset = "0xB73078", VA = "0xB73078")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60014E3")]
	[Address(RVA = "0xB82AA4", Offset = "0xB82AA4", VA = "0xB82AA4")]
	private bool Initialize()
	{
		return default(bool);
	}

	[Token(Token = "0x60014E4")]
	[Address(RVA = "0xB82DAC", Offset = "0xB82DAC", VA = "0xB82DAC")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60014E5")]
	[Address(RVA = "0xB82E10", Offset = "0xB82E10", VA = "0xB82E10")]
	private void Update()
	{
	}

	[Token(Token = "0x60014E6")]
	[Address(RVA = "0xB83798", Offset = "0xB83798", VA = "0xB83798")]
	public bool IsAvatarSpecWaiting()
	{
		return default(bool);
	}

	[Token(Token = "0x60014E7")]
	[Address(RVA = "0xB837E8", Offset = "0xB837E8", VA = "0xB837E8")]
	public bool IsAvatarLoading()
	{
		return default(bool);
	}

	[Token(Token = "0x60014E8")]
	[Address(RVA = "0xB73BA0", Offset = "0xB73BA0", VA = "0xB73BA0")]
	public void AddLoadingAvatar(int gameobjectID)
	{
	}

	[Token(Token = "0x60014E9")]
	[Address(RVA = "0xB741C0", Offset = "0xB741C0", VA = "0xB741C0")]
	public void RemoveLoadingAvatar(int gameobjectID)
	{
	}

	[Token(Token = "0x60014EA")]
	[Address(RVA = "0xB73B1C", Offset = "0xB73B1C", VA = "0xB73B1C")]
	public void RequestAvatarSpecification(AvatarSpecRequestParams avatarSpecRequest)
	{
	}

	[Token(Token = "0x60014EB")]
	[Address(RVA = "0xB835B8", Offset = "0xB835B8", VA = "0xB835B8")]
	private void DispatchAvatarSpecificationRequest(AvatarSpecRequestParams avatarSpecRequest)
	{
	}

	[Token(Token = "0x60014EC")]
	[Address(RVA = "0xB733DC", Offset = "0xB733DC", VA = "0xB733DC")]
	public void BeginLoadingAsset(ulong assetId, ovrAvatarAssetLevelOfDetail lod, assetLoadedCallback callback)
	{
	}

	[Token(Token = "0x60014ED")]
	[Address(RVA = "0xB735EC", Offset = "0xB735EC", VA = "0xB735EC")]
	public void RegisterCombinedMeshCallback(IntPtr sdkAvatar, combinedMeshLoadedCallback callback)
	{
	}

	[Token(Token = "0x60014EE")]
	[Address(RVA = "0xB73238", Offset = "0xB73238", VA = "0xB73238")]
	public OvrAvatarAsset GetAsset(ulong assetId)
	{
		return null;
	}

	[Token(Token = "0x60014EF")]
	[Address(RVA = "0xB83838", Offset = "0xB83838", VA = "0xB83838")]
	public void DeleteAssetFromCache(ulong assetId)
	{
	}

	[Token(Token = "0x60014F0")]
	[Address(RVA = "0xB82D6C", Offset = "0xB82D6C", VA = "0xB82D6C")]
	public string GetAppId()
	{
		return null;
	}

	[Token(Token = "0x60014F1")]
	[Address(RVA = "0xB7CDEC", Offset = "0xB7CDEC", VA = "0xB7CDEC")]
	public OvrAvatarTextureCopyManager GetTextureCopyManager()
	{
		return null;
	}

	[Token(Token = "0x60014F2")]
	[Address(RVA = "0xB83900", Offset = "0xB83900", VA = "0xB83900")]
	public OvrAvatarSDKManager()
	{
	}
}
[Token(Token = "0x2000408")]
public sealed class OvrAvatarSettings : ScriptableObject
{
	[Token(Token = "0x4001446")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static OvrAvatarSettings instance;

	[Token(Token = "0x4001447")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private string ovrAppID;

	[Token(Token = "0x4001448")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private string ovrGearAppID;

	[Token(Token = "0x170001C7")]
	public static string AppID
	{
		[Token(Token = "0x60014F4")]
		[Address(RVA = "0xB838C8", Offset = "0xB838C8", VA = "0xB838C8")]
		get
		{
			return null;
		}
		[Token(Token = "0x60014F5")]
		[Address(RVA = "0xB83A3C", Offset = "0xB83A3C", VA = "0xB83A3C")]
		set
		{
		}
	}

	[Token(Token = "0x170001C8")]
	public static string MobileAppID
	{
		[Token(Token = "0x60014F6")]
		[Address(RVA = "0xB838E4", Offset = "0xB838E4", VA = "0xB838E4")]
		get
		{
			return null;
		}
		[Token(Token = "0x60014F7")]
		[Address(RVA = "0xB83A5C", Offset = "0xB83A5C", VA = "0xB83A5C")]
		set
		{
		}
	}

	[Token(Token = "0x170001C9")]
	public static OvrAvatarSettings Instance
	{
		[Token(Token = "0x60014F8")]
		[Address(RVA = "0xB83918", Offset = "0xB83918", VA = "0xB83918")]
		get
		{
			return null;
		}
		[Token(Token = "0x60014F9")]
		[Address(RVA = "0xB83A7C", Offset = "0xB83A7C", VA = "0xB83A7C")]
		set
		{
		}
	}

	[Token(Token = "0x60014FA")]
	[Address(RVA = "0xB83AC8", Offset = "0xB83AC8", VA = "0xB83AC8")]
	public OvrAvatarSettings()
	{
	}
}
[Token(Token = "0x2000409")]
public class OvrAvatarSkinnedMeshRenderComponent : OvrAvatarRenderComponent
{
	[Token(Token = "0x4001449")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Shader surface;

	[Token(Token = "0x400144A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Shader surfaceSelfOccluding;

	[Token(Token = "0x400144B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool previouslyActive;

	[Token(Token = "0x60014FB")]
	[Address(RVA = "0xB7126C", Offset = "0xB7126C", VA = "0xB7126C")]
	internal void Initialize(ovrAvatarRenderPart_SkinnedMeshRender skinnedMeshRender, Shader surface, Shader surfaceSelfOccluding, int thirdPersonLayer, int firstPersonLayer)
	{
	}

	[Token(Token = "0x60014FC")]
	[Address(RVA = "0xB799A8", Offset = "0xB799A8", VA = "0xB799A8")]
	public void UpdateSkinnedMeshRender(OvrAvatarComponent component, OvrAvatar avatar, IntPtr renderPart)
	{
	}

	[Token(Token = "0x60014FD")]
	[Address(RVA = "0xB83B18", Offset = "0xB83B18", VA = "0xB83B18")]
	private void UpdateMeshMaterial(ovrAvatarVisibilityFlags visibilityMask, SkinnedMeshRenderer rootMesh)
	{
	}

	[Token(Token = "0x60014FE")]
	[Address(RVA = "0xB83C60", Offset = "0xB83C60", VA = "0xB83C60")]
	public OvrAvatarSkinnedMeshRenderComponent()
	{
	}
}
[Token(Token = "0x200040A")]
public class OvrAvatarSkinnedMeshRenderPBSComponent : OvrAvatarRenderComponent
{
	[Token(Token = "0x400144C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	private bool isMaterialInitilized;

	[Token(Token = "0x60014FF")]
	[Address(RVA = "0xB7147C", Offset = "0xB7147C", VA = "0xB7147C")]
	internal void Initialize(ovrAvatarRenderPart_SkinnedMeshRenderPBS skinnedMeshRenderPBS, Shader shader, int thirdPersonLayer, int firstPersonLayer)
	{
	}

	[Token(Token = "0x6001500")]
	[Address(RVA = "0xB79BB4", Offset = "0xB79BB4", VA = "0xB79BB4")]
	internal void UpdateSkinnedMeshRenderPBS(OvrAvatar avatar, IntPtr renderPart, Material mat)
	{
	}

	[Token(Token = "0x6001501")]
	[Address(RVA = "0xB83C70", Offset = "0xB83C70", VA = "0xB83C70")]
	public OvrAvatarSkinnedMeshRenderPBSComponent()
	{
	}
}
[Token(Token = "0x200040B")]
public class OvrAvatarSkinnedMeshPBSV2RenderComponent : OvrAvatarRenderComponent
{
	[Token(Token = "0x400144D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private OvrAvatarMaterialManager avatarMaterialManager;

	[Token(Token = "0x400144E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool previouslyActive;

	[Token(Token = "0x400144F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
	private bool isCombinedMaterial;

	[Token(Token = "0x4001450")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private ovrAvatarExpressiveParameters ExpressiveParameters;

	[Token(Token = "0x4001451")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private bool EnableExpressive;

	[Token(Token = "0x4001452")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private int blendShapeCount;

	[Token(Token = "0x4001453")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private ovrAvatarBlendShapeParams blendShapeParams;

	[Token(Token = "0x4001454")]
	private const string MAIN_MATERIAL_NAME = "main_material";

	[Token(Token = "0x4001455")]
	private const string EYE_MATERIAL_NAME = "eye_material";

	[Token(Token = "0x4001456")]
	private const string DEFAULT_MATERIAL_NAME = "_material";

	[Token(Token = "0x6001502")]
	[Address(RVA = "0xB71780", Offset = "0xB71780", VA = "0xB71780")]
	internal void Initialize(IntPtr renderPart, ovrAvatarRenderPart_SkinnedMeshRenderPBS_V2 skinnedMeshRender, OvrAvatarMaterialManager materialManager, int thirdPersonLayer, int firstPersonLayer, bool combinedMesh, ovrAvatarAssetLevelOfDetail lod, bool assignExpressiveParams, OvrAvatar avatar, bool isControllerModel)
	{
	}

	[Token(Token = "0x6001503")]
	[Address(RVA = "0xB79D5C", Offset = "0xB79D5C", VA = "0xB79D5C")]
	public void UpdateSkinnedMeshRender(OvrAvatarComponent component, OvrAvatar avatar, IntPtr renderPart)
	{
	}

	[Token(Token = "0x6001504")]
	[Address(RVA = "0xB84798", Offset = "0xB84798", VA = "0xB84798")]
	private void InitializeSingleComponentMaterial(IntPtr renderPart, int lodIndex)
	{
	}

	[Token(Token = "0x6001505")]
	[Address(RVA = "0xB83F84", Offset = "0xB83F84", VA = "0xB83F84")]
	private void InitializeCombinedMaterial(IntPtr renderPart, int lodIndex)
	{
	}

	[Token(Token = "0x6001506")]
	[Address(RVA = "0xB83C80", Offset = "0xB83C80", VA = "0xB83C80")]
	private void SetMaterialTransparent(Material mat)
	{
	}

	[Token(Token = "0x6001507")]
	[Address(RVA = "0xB83DF8", Offset = "0xB83DF8", VA = "0xB83DF8")]
	private void SetMaterialOpaque(Material mat)
	{
	}

	[Token(Token = "0x6001508")]
	[Address(RVA = "0xB84FA0", Offset = "0xB84FA0", VA = "0xB84FA0")]
	public OvrAvatarSkinnedMeshPBSV2RenderComponent()
	{
	}
}
[Token(Token = "0x200040C")]
public class OvrAvatarTextureCopyManager : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x200040D")]
	public struct FallbackTextureSet
	{
		[Token(Token = "0x4001465")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public bool Initialized;

		[Token(Token = "0x4001466")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Texture2D DiffuseRoughness;

		[Token(Token = "0x4001467")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Texture2D Normal;
	}

	[Token(Token = "0x200040E")]
	private struct CopyTextureParams
	{
		[Token(Token = "0x4001468")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Texture Src;

		[Token(Token = "0x4001469")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Texture Dst;

		[Token(Token = "0x400146A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int Mip;

		[Token(Token = "0x400146B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int SrcSize;

		[Token(Token = "0x400146C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int DstElement;

		[Token(Token = "0x6001513")]
		[Address(RVA = "0xB85750", Offset = "0xB85750", VA = "0xB85750")]
		public CopyTextureParams(Texture src, Texture dst, int mip, int srcSize, int dstElement)
		{
		}
	}

	[Token(Token = "0x200040F")]
	public struct TextureSet
	{
		[Token(Token = "0x400146D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Dictionary<ulong, bool> TextureIDSingleMeshPair;

		[Token(Token = "0x400146E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public bool IsProcessed;

		[Token(Token = "0x6001514")]
		[Address(RVA = "0xB85940", Offset = "0xB85940", VA = "0xB85940")]
		public TextureSet(Dictionary<ulong, bool> textureIDSingleMeshPair, bool isProcessed)
		{
		}
	}

	[Token(Token = "0x2000410")]
	[CompilerGenerated]
	private sealed class <DeleteTextureSetCoroutine>d__24 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400146F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001470")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001471")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TextureSet textureSetToDelete;

		[Token(Token = "0x4001472")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public OvrAvatarTextureCopyManager <>4__this;

		[Token(Token = "0x4001473")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public int gameobjectID;

		[Token(Token = "0x170001CA")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001518")]
			[Address(RVA = "0xB861B0", Offset = "0xB861B0", VA = "0xB861B0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001CB")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600151A")]
			[Address(RVA = "0xB861F8", Offset = "0xB861F8", VA = "0xB861F8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001515")]
		[Address(RVA = "0xB85A74", Offset = "0xB85A74", VA = "0xB85A74")]
		[DebuggerHidden]
		public <DeleteTextureSetCoroutine>d__24(int <>1__state)
		{
		}

		[Token(Token = "0x6001516")]
		[Address(RVA = "0xB85BE0", Offset = "0xB85BE0", VA = "0xB85BE0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001517")]
		[Address(RVA = "0xB85BE4", Offset = "0xB85BE4", VA = "0xB85BE4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001519")]
		[Address(RVA = "0xB861B8", Offset = "0xB861B8", VA = "0xB861B8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4001457")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public FallbackTextureSet[] FallbackTextureSets;

	[Token(Token = "0x4001458")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Queue<CopyTextureParams> texturesToCopy;

	[Token(Token = "0x4001459")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Dictionary<int, TextureSet> textureSets;

	[Token(Token = "0x400145A")]
	private const int TEXTURES_TO_COPY_QUEUE_CAPACITY = 256;

	[Token(Token = "0x400145B")]
	private const int COPIES_PER_FRAME = 8;

	[Token(Token = "0x400145C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private readonly string[] FALLBACK_TEXTURE_PATHS_DIFFUSE_ROUGHNESS;

	[Token(Token = "0x400145D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private readonly string[] FALLBACK_TEXTURE_PATHS_NORMAL;

	[Token(Token = "0x400145E")]
	private const string PATH_HIGHEST_DIFFUSE_ROUGHNESS = "FallbackTextures/fallback_diffuse_roughness_2048";

	[Token(Token = "0x400145F")]
	private const string PATH_MEDIUM_DIFFUSE_ROUGHNESS = "FallbackTextures/fallback_diffuse_roughness_1024";

	[Token(Token = "0x4001460")]
	private const string PATH_LOWEST_DIFFUSE_ROUGHNESS = "FallbackTextures/fallback_diffuse_roughness_256";

	[Token(Token = "0x4001461")]
	private const string PATH_HIGHEST_NORMAL = "FallbackTextures/fallback_normal_2048";

	[Token(Token = "0x4001462")]
	private const string PATH_MEDIUM_NORMAL = "FallbackTextures/fallback_normal_1024";

	[Token(Token = "0x4001463")]
	private const string PATH_LOWEST_NORMAL = "FallbackTextures/fallback_normal_256";

	[Token(Token = "0x4001464")]
	private const int GPU_TEXTURE_COPY_WAIT_TIME = 10;

	[Token(Token = "0x6001509")]
	[Address(RVA = "0xB84FB0", Offset = "0xB84FB0", VA = "0xB84FB0")]
	public OvrAvatarTextureCopyManager()
	{
	}

	[Token(Token = "0x600150A")]
	[Address(RVA = "0xB8538C", Offset = "0xB8538C", VA = "0xB8538C")]
	public void Update()
	{
	}

	[Token(Token = "0x600150B")]
	[Address(RVA = "0xB85570", Offset = "0xB85570", VA = "0xB85570")]
	public int GetTextureCount()
	{
		return default(int);
	}

	[Token(Token = "0x600150C")]
	[Address(RVA = "0xB855B8", Offset = "0xB855B8", VA = "0xB855B8")]
	public void CopyTexture(Texture src, Texture dst, int mipLevel, int mipSize, int dstElement, bool useQueue = true)
	{
	}

	[Token(Token = "0x600150D")]
	[Address(RVA = "0xB854F0", Offset = "0xB854F0", VA = "0xB854F0")]
	private void CopyTexture(CopyTextureParams copyTextureParams)
	{
	}

	[Token(Token = "0x600150E")]
	[Address(RVA = "0xB85760", Offset = "0xB85760", VA = "0xB85760")]
	public void AddTextureIDToTextureSet(int gameobjectID, ulong textureID, bool isSingleMesh)
	{
	}

	[Token(Token = "0x600150F")]
	[Address(RVA = "0xB85950", Offset = "0xB85950", VA = "0xB85950")]
	public void DeleteTextureSet(int gameobjectID)
	{
	}

	[Token(Token = "0x6001510")]
	[Address(RVA = "0xB859E8", Offset = "0xB859E8", VA = "0xB859E8")]
	[IteratorStateMachine(typeof(<DeleteTextureSetCoroutine>d__24))]
	private IEnumerator DeleteTextureSetCoroutine(TextureSet textureSetToDelete, int gameobjectID)
	{
		return null;
	}

	[Token(Token = "0x6001511")]
	[Address(RVA = "0xB85A9C", Offset = "0xB85A9C", VA = "0xB85A9C")]
	public void CheckFallbackTextureSet(ovrAvatarAssetLevelOfDetail lod)
	{
	}

	[Token(Token = "0x6001512")]
	[Address(RVA = "0xB85ADC", Offset = "0xB85ADC", VA = "0xB85ADC")]
	private void InitFallbackTextureSet(ovrAvatarAssetLevelOfDetail lod)
	{
	}
}
[Token(Token = "0x2000411")]
public class OvrAvatarTouchController : OvrAvatarComponent
{
	[Token(Token = "0x4001474")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public bool isLeftHand;

	[Token(Token = "0x4001475")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private ovrAvatarControllerComponent component;

	[Token(Token = "0x600151B")]
	[Address(RVA = "0xB86200", Offset = "0xB86200", VA = "0xB86200")]
	private void Update()
	{
	}

	[Token(Token = "0x600151C")]
	[Address(RVA = "0xB86330", Offset = "0xB86330", VA = "0xB86330")]
	public OvrAvatarTouchController()
	{
	}
}
[Token(Token = "0x2000412")]
public class DebugUIBuilder : MonoBehaviour
{
	[Token(Token = "0x2000413")]
	public delegate void OnClick();

	[Token(Token = "0x2000414")]
	public delegate void OnToggleValueChange(Toggle t);

	[Token(Token = "0x2000415")]
	public delegate void OnSlider(float f);

	[Token(Token = "0x2000416")]
	public delegate bool ActiveUpdate();

	[Token(Token = "0x4001476")]
	public const int DEBUG_PANE_CENTER = 0;

	[Token(Token = "0x4001477")]
	public const int DEBUG_PANE_RIGHT = 1;

	[Token(Token = "0x4001478")]
	public const int DEBUG_PANE_LEFT = 2;

	[Token(Token = "0x4001479")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private RectTransform buttonPrefab;

	[Token(Token = "0x400147A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private RectTransform[] additionalButtonPrefab;

	[Token(Token = "0x400147B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private RectTransform labelPrefab;

	[Token(Token = "0x400147C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private RectTransform sliderPrefab;

	[Token(Token = "0x400147D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private RectTransform dividerPrefab;

	[Token(Token = "0x400147E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private RectTransform togglePrefab;

	[Token(Token = "0x400147F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private RectTransform radioPrefab;

	[Token(Token = "0x4001480")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private RectTransform textPrefab;

	[Token(Token = "0x4001481")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private GameObject uiHelpersToInstantiate;

	[Token(Token = "0x4001482")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private Transform[] targetContentPanels;

	[Token(Token = "0x4001483")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private bool[] reEnable;

	[Token(Token = "0x4001484")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private List<GameObject> toEnable;

	[Token(Token = "0x4001485")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private List<GameObject> toDisable;

	[Token(Token = "0x4001486")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static DebugUIBuilder instance;

	[Token(Token = "0x4001487")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public float elementSpacing;

	[Token(Token = "0x4001488")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public float marginH;

	[Token(Token = "0x4001489")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public float marginV;

	[Token(Token = "0x400148A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private Vector2[] insertPositions;

	[Token(Token = "0x400148B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private List<RectTransform>[] insertedElements;

	[Token(Token = "0x400148C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private Vector3 menuOffset;

	[Token(Token = "0x400148D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private OVRCameraRig rig;

	[Token(Token = "0x400148E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private Dictionary<string, ToggleGroup> radioGroups;

	[Token(Token = "0x400148F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private LaserPointer lp;

	[Token(Token = "0x4001490")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private LineRenderer lr;

	[Token(Token = "0x4001491")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public LaserPointer.LaserBeamBehavior laserBeamBehavior;

	[Token(Token = "0x4001492")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	public bool isHorizontal;

	[Token(Token = "0x4001493")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD5")]
	public bool usePanelCentricRelayout;

	[Token(Token = "0x600151D")]
	[Address(RVA = "0xB86390", Offset = "0xB86390", VA = "0xB86390")]
	public void Awake()
	{
	}

	[Token(Token = "0x600151E")]
	[Address(RVA = "0xB86884", Offset = "0xB86884", VA = "0xB86884")]
	public void Show()
	{
	}

	[Token(Token = "0x600151F")]
	[Address(RVA = "0xB86BEC", Offset = "0xB86BEC", VA = "0xB86BEC")]
	public void Hide()
	{
	}

	[Token(Token = "0x6001520")]
	[Address(RVA = "0xB86D68", Offset = "0xB86D68", VA = "0xB86D68")]
	private void StackedRelayout()
	{
	}

	[Token(Token = "0x6001521")]
	[Address(RVA = "0xB86F80", Offset = "0xB86F80", VA = "0xB86F80")]
	private void PanelCentricRelayout()
	{
	}

	[Token(Token = "0x6001522")]
	[Address(RVA = "0xB86BDC", Offset = "0xB86BDC", VA = "0xB86BDC")]
	private void Relayout()
	{
	}

	[Token(Token = "0x6001523")]
	[Address(RVA = "0xB87274", Offset = "0xB87274", VA = "0xB87274")]
	private void AddRect(RectTransform r, int targetCanvas)
	{
	}

	[Token(Token = "0x6001524")]
	[Address(RVA = "0xB87578", Offset = "0xB87578", VA = "0xB87578")]
	public RectTransform AddButton(string label, [Optional] OnClick handler, int buttonIndex = -1, int targetCanvas = 0, bool highResolutionText = false)
	{
		return null;
	}

	[Token(Token = "0x6001525")]
	[Address(RVA = "0xB87910", Offset = "0xB87910", VA = "0xB87910")]
	public RectTransform AddLabel(string label, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x6001526")]
	[Address(RVA = "0xB87A08", Offset = "0xB87A08", VA = "0xB87A08")]
	public RectTransform AddSlider(string label, float min, float max, OnSlider onValueChanged, bool wholeNumbersOnly = false, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x6001527")]
	[Address(RVA = "0xB87BCC", Offset = "0xB87BCC", VA = "0xB87BCC")]
	public RectTransform AddDivider(int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x6001528")]
	[Address(RVA = "0xB87C64", Offset = "0xB87C64", VA = "0xB87C64")]
	public RectTransform AddToggle(string label, OnToggleValueChange onValueChanged, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x6001529")]
	[Address(RVA = "0xB87E20", Offset = "0xB87E20", VA = "0xB87E20")]
	public RectTransform AddToggle(string label, OnToggleValueChange onValueChanged, bool defaultValue, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x600152A")]
	[Address(RVA = "0xB87FFC", Offset = "0xB87FFC", VA = "0xB87FFC")]
	public RectTransform AddRadio(string label, string group, OnToggleValueChange handler, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x600152B")]
	[Address(RVA = "0xB882D8", Offset = "0xB882D8", VA = "0xB882D8")]
	public RectTransform AddTextField(string label, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x600152C")]
	[Address(RVA = "0xB883C8", Offset = "0xB883C8", VA = "0xB883C8")]
	public void ToggleLaserPointer(bool isOn)
	{
	}

	[Token(Token = "0x600152D")]
	[Address(RVA = "0xB8845C", Offset = "0xB8845C", VA = "0xB8845C")]
	public DebugUIBuilder()
	{
	}
}
[Token(Token = "0x200041C")]
public class HandedInputSelector : MonoBehaviour
{
	[Token(Token = "0x400149C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private OVRCameraRig m_CameraRig;

	[Token(Token = "0x400149D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private OVRInputModule m_InputModule;

	[Token(Token = "0x6001548")]
	[Address(RVA = "0xB88A90", Offset = "0xB88A90", VA = "0xB88A90")]
	private void Start()
	{
	}

	[Token(Token = "0x6001549")]
	[Address(RVA = "0xB88B20", Offset = "0xB88B20", VA = "0xB88B20")]
	private void Update()
	{
	}

	[Token(Token = "0x600154A")]
	[Address(RVA = "0xB88BBC", Offset = "0xB88BBC", VA = "0xB88BBC")]
	private void SetActiveController(OVRInput.Controller c)
	{
	}

	[Token(Token = "0x600154B")]
	[Address(RVA = "0xB88BF4", Offset = "0xB88BF4", VA = "0xB88BF4")]
	public HandedInputSelector()
	{
	}
}
[Token(Token = "0x200041D")]
public class LaserPointer : OVRCursor
{
	[Token(Token = "0x200041E")]
	public enum LaserBeamBehavior
	{
		[Token(Token = "0x40014A8")]
		On,
		[Token(Token = "0x40014A9")]
		Off,
		[Token(Token = "0x40014AA")]
		OnWhenHitTarget
	}

	[Token(Token = "0x400149E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject cursorVisual;

	[Token(Token = "0x400149F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float maxLength;

	[Token(Token = "0x40014A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private LaserBeamBehavior _laserBeamBehavior;

	[Token(Token = "0x40014A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool m_restoreOnInputAcquired;

	[Token(Token = "0x40014A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private Vector3 _startPoint;

	[Token(Token = "0x40014A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Vector3 _forward;

	[Token(Token = "0x40014A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private Vector3 _endPoint;

	[Token(Token = "0x40014A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool _hitTarget;

	[Token(Token = "0x40014A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private LineRenderer lineRenderer;

	[Token(Token = "0x170001CC")]
	public LaserBeamBehavior laserBeamBehavior
	{
		[Token(Token = "0x600154D")]
		[Address(RVA = "0xB88BFC", Offset = "0xB88BFC", VA = "0xB88BFC")]
		get
		{
			return default(LaserBeamBehavior);
		}
		[Token(Token = "0x600154C")]
		[Address(RVA = "0xB86844", Offset = "0xB86844", VA = "0xB86844")]
		set
		{
		}
	}

	[Token(Token = "0x600154E")]
	[Address(RVA = "0xB88C04", Offset = "0xB88C04", VA = "0xB88C04")]
	private void Awake()
	{
	}

	[Token(Token = "0x600154F")]
	[Address(RVA = "0xB88C54", Offset = "0xB88C54", VA = "0xB88C54")]
	private void Start()
	{
	}

	[Token(Token = "0x6001550")]
	[Address(RVA = "0xB88D8C", Offset = "0xB88D8C", VA = "0xB88D8C", Slot = "5")]
	public override void SetCursorStartDest(Vector3 start, Vector3 dest, Vector3 normal)
	{
	}

	[Token(Token = "0x6001551")]
	[Address(RVA = "0xB88DA8", Offset = "0xB88DA8", VA = "0xB88DA8", Slot = "4")]
	public override void SetCursorRay(Transform t)
	{
	}

	[Token(Token = "0x6001552")]
	[Address(RVA = "0xB88DF8", Offset = "0xB88DF8", VA = "0xB88DF8")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6001553")]
	[Address(RVA = "0xB88F98", Offset = "0xB88F98", VA = "0xB88F98")]
	private void UpdateLaserBeam(Vector3 start, Vector3 end)
	{
	}

	[Token(Token = "0x6001554")]
	[Address(RVA = "0xB890A8", Offset = "0xB890A8", VA = "0xB890A8")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6001555")]
	[Address(RVA = "0xB8912C", Offset = "0xB8912C", VA = "0xB8912C")]
	public void OnInputFocusLost()
	{
	}

	[Token(Token = "0x6001556")]
	[Address(RVA = "0xB891EC", Offset = "0xB891EC", VA = "0xB891EC")]
	public void OnInputFocusAcquired()
	{
	}

	[Token(Token = "0x6001557")]
	[Address(RVA = "0xB89294", Offset = "0xB89294", VA = "0xB89294")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6001558")]
	[Address(RVA = "0xB89380", Offset = "0xB89380", VA = "0xB89380")]
	public LaserPointer()
	{
	}
}
[Token(Token = "0x200041F")]
public class CharacterCameraConstraint : MonoBehaviour
{
	[Token(Token = "0x40014AB")]
	private const float FADE_RAY_LENGTH = 0.25f;

	[Token(Token = "0x40014AC")]
	private const float FADE_OVERLAP_MAXIMUM = 0.1f;

	[Token(Token = "0x40014AD")]
	private const float FADE_AMOUNT_MAXIMUM = 1f;

	[Token(Token = "0x40014AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Tooltip("This should be a reference to the OVRCameraRig that is usually a child of the PlayerController.")]
	public OVRCameraRig CameraRig;

	[Token(Token = "0x40014AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[Tooltip("Collision layers to be used for the purposes of fading out the screen when the HMD is inside world geometry and adjusting the capsule height.")]
	public LayerMask CollideLayers;

	[Token(Token = "0x40014B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[Tooltip("Offset is added to camera's real world height, effectively treating it as though the player was taller/standing higher.")]
	public float HeightOffset;

	[Token(Token = "0x40014B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[Tooltip("Minimum height that the character capsule can shrink to.  To disable, set to capsule's height.")]
	public float MinimumHeight;

	[Token(Token = "0x40014B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[Tooltip("Maximum height that the character capsule can grow to.  To disable, set to capsule's height.")]
	public float MaximumHeight;

	[Token(Token = "0x40014B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private CapsuleCollider _character;

	[Token(Token = "0x40014B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private SimpleCapsuleWithStickMovement _simplePlayerController;

	[Token(Token = "0x6001559")]
	[Address(RVA = "0xB89390", Offset = "0xB89390", VA = "0xB89390")]
	private CharacterCameraConstraint()
	{
	}

	[Token(Token = "0x600155A")]
	[Address(RVA = "0xB89398", Offset = "0xB89398", VA = "0xB89398")]
	private void Awake()
	{
	}

	[Token(Token = "0x600155B")]
	[Address(RVA = "0xB89414", Offset = "0xB89414", VA = "0xB89414")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600155C")]
	[Address(RVA = "0xB89538", Offset = "0xB89538", VA = "0xB89538")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600155D")]
	[Address(RVA = "0xB8965C", Offset = "0xB8965C", VA = "0xB8965C")]
	private void CameraUpdate()
	{
	}

	[Token(Token = "0x600155E")]
	[Address(RVA = "0xB8997C", Offset = "0xB8997C", VA = "0xB8997C")]
	private bool CheckCameraOverlapped()
	{
		return default(bool);
	}

	[Token(Token = "0x600155F")]
	[Address(RVA = "0xB89BDC", Offset = "0xB89BDC", VA = "0xB89BDC")]
	private bool CheckCameraNearClipping(out float result)
	{
		return default(bool);
	}
}
[Token(Token = "0x2000420")]
public class LocomotionController : MonoBehaviour
{
	[Token(Token = "0x40014B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OVRCameraRig CameraRig;

	[Token(Token = "0x40014B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public CapsuleCollider CharacterController;

	[Token(Token = "0x40014B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public SimpleCapsuleWithStickMovement PlayerController;

	[Token(Token = "0x6001560")]
	[Address(RVA = "0xB8A334", Offset = "0xB8A334", VA = "0xB8A334")]
	private void Start()
	{
	}

	[Token(Token = "0x6001561")]
	[Address(RVA = "0xB8A3CC", Offset = "0xB8A3CC", VA = "0xB8A3CC")]
	public LocomotionController()
	{
	}
}
[Token(Token = "0x2000421")]
public class LocomotionTeleport : MonoBehaviour
{
	[Token(Token = "0x2000422")]
	public enum States
	{
		[Token(Token = "0x40014DB")]
		Ready,
		[Token(Token = "0x40014DC")]
		Aim,
		[Token(Token = "0x40014DD")]
		CancelAim,
		[Token(Token = "0x40014DE")]
		PreTeleport,
		[Token(Token = "0x40014DF")]
		CancelTeleport,
		[Token(Token = "0x40014E0")]
		Teleporting,
		[Token(Token = "0x40014E1")]
		PostTeleport
	}

	[Token(Token = "0x2000423")]
	public enum TeleportIntentions
	{
		[Token(Token = "0x40014E3")]
		None,
		[Token(Token = "0x40014E4")]
		Aim,
		[Token(Token = "0x40014E5")]
		PreTeleport,
		[Token(Token = "0x40014E6")]
		Teleport
	}

	[Token(Token = "0x2000424")]
	public enum AimCollisionTypes
	{
		[Token(Token = "0x40014E8")]
		Point,
		[Token(Token = "0x40014E9")]
		Sphere,
		[Token(Token = "0x40014EA")]
		Capsule
	}

	[Token(Token = "0x2000425")]
	public class AimData
	{
		[Token(Token = "0x40014EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public RaycastHit TargetHitInfo;

		[Token(Token = "0x40014EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public bool TargetValid;

		[Token(Token = "0x40014ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Vector3? Destination;

		[Token(Token = "0x40014EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public float Radius;

		[Token(Token = "0x170001D0")]
		public List<Vector3> Points
		{
			[Token(Token = "0x6001597")]
			[Address(RVA = "0xB8C07C", Offset = "0xB8C07C", VA = "0xB8C07C")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001598")]
			[Address(RVA = "0xB8C084", Offset = "0xB8C084", VA = "0xB8C084")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x6001596")]
		[Address(RVA = "0xB8BFFC", Offset = "0xB8BFFC", VA = "0xB8BFFC")]
		public AimData()
		{
		}

		[Token(Token = "0x6001599")]
		[Address(RVA = "0xB8C08C", Offset = "0xB8C08C", VA = "0xB8C08C")]
		public void Reset()
		{
		}
	}

	[Token(Token = "0x2000426")]
	[CompilerGenerated]
	private sealed class <ReadyStateCoroutine>d__52 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40014F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40014F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40014F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x170001D1")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600159D")]
			[Address(RVA = "0xB8C1D4", Offset = "0xB8C1D4", VA = "0xB8C1D4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001D2")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600159F")]
			[Address(RVA = "0xB8C21C", Offset = "0xB8C21C", VA = "0xB8C21C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600159A")]
		[Address(RVA = "0xB8AD98", Offset = "0xB8AD98", VA = "0xB8AD98")]
		[DebuggerHidden]
		public <ReadyStateCoroutine>d__52(int <>1__state)
		{
		}

		[Token(Token = "0x600159B")]
		[Address(RVA = "0xB8C0E4", Offset = "0xB8C0E4", VA = "0xB8C0E4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600159C")]
		[Address(RVA = "0xB8C0E8", Offset = "0xB8C0E8", VA = "0xB8C0E8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600159E")]
		[Address(RVA = "0xB8C1DC", Offset = "0xB8C1DC", VA = "0xB8C1DC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000427")]
	[CompilerGenerated]
	private sealed class <AimStateCoroutine>d__64 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40014F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40014F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40014F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x170001D3")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60015A3")]
			[Address(RVA = "0xB8C368", Offset = "0xB8C368", VA = "0xB8C368", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001D4")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60015A5")]
			[Address(RVA = "0xB8C3B0", Offset = "0xB8C3B0", VA = "0xB8C3B0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60015A0")]
		[Address(RVA = "0xB8B214", Offset = "0xB8B214", VA = "0xB8B214")]
		[DebuggerHidden]
		public <AimStateCoroutine>d__64(int <>1__state)
		{
		}

		[Token(Token = "0x60015A1")]
		[Address(RVA = "0xB8C224", Offset = "0xB8C224", VA = "0xB8C224", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60015A2")]
		[Address(RVA = "0xB8C228", Offset = "0xB8C228", VA = "0xB8C228", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60015A4")]
		[Address(RVA = "0xB8C370", Offset = "0xB8C370", VA = "0xB8C370", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000428")]
	[CompilerGenerated]
	private sealed class <CancelAimStateCoroutine>d__68 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40014F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40014F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40014F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x170001D5")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60015A9")]
			[Address(RVA = "0xB8C45C", Offset = "0xB8C45C", VA = "0xB8C45C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001D6")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60015AB")]
			[Address(RVA = "0xB8C4A4", Offset = "0xB8C4A4", VA = "0xB8C4A4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60015A6")]
		[Address(RVA = "0xB8B3DC", Offset = "0xB8B3DC", VA = "0xB8B3DC")]
		[DebuggerHidden]
		public <CancelAimStateCoroutine>d__68(int <>1__state)
		{
		}

		[Token(Token = "0x60015A7")]
		[Address(RVA = "0xB8C3B8", Offset = "0xB8C3B8", VA = "0xB8C3B8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60015A8")]
		[Address(RVA = "0xB8C3BC", Offset = "0xB8C3BC", VA = "0xB8C3BC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60015AA")]
		[Address(RVA = "0xB8C464", Offset = "0xB8C464", VA = "0xB8C464", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000429")]
	[CompilerGenerated]
	private sealed class <PreTeleportStateCoroutine>d__72 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40014F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40014FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40014FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x170001D7")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60015AF")]
			[Address(RVA = "0xB8C588", Offset = "0xB8C588", VA = "0xB8C588", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001D8")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60015B1")]
			[Address(RVA = "0xB8C5D0", Offset = "0xB8C5D0", VA = "0xB8C5D0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60015AC")]
		[Address(RVA = "0xB8B5A4", Offset = "0xB8B5A4", VA = "0xB8B5A4")]
		[DebuggerHidden]
		public <PreTeleportStateCoroutine>d__72(int <>1__state)
		{
		}

		[Token(Token = "0x60015AD")]
		[Address(RVA = "0xB8C4AC", Offset = "0xB8C4AC", VA = "0xB8C4AC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60015AE")]
		[Address(RVA = "0xB8C4B0", Offset = "0xB8C4B0", VA = "0xB8C4B0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60015B0")]
		[Address(RVA = "0xB8C590", Offset = "0xB8C590", VA = "0xB8C590", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200042A")]
	[CompilerGenerated]
	private sealed class <CancelTeleportStateCoroutine>d__76 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40014FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40014FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40014FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x170001D9")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60015B5")]
			[Address(RVA = "0xB8C67C", Offset = "0xB8C67C", VA = "0xB8C67C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001DA")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60015B7")]
			[Address(RVA = "0xB8C6C4", Offset = "0xB8C6C4", VA = "0xB8C6C4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60015B2")]
		[Address(RVA = "0xB8B76C", Offset = "0xB8B76C", VA = "0xB8B76C")]
		[DebuggerHidden]
		public <CancelTeleportStateCoroutine>d__76(int <>1__state)
		{
		}

		[Token(Token = "0x60015B3")]
		[Address(RVA = "0xB8C5D8", Offset = "0xB8C5D8", VA = "0xB8C5D8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60015B4")]
		[Address(RVA = "0xB8C5DC", Offset = "0xB8C5DC", VA = "0xB8C5DC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60015B6")]
		[Address(RVA = "0xB8C684", Offset = "0xB8C684", VA = "0xB8C684", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200042B")]
	[CompilerGenerated]
	private sealed class <TeleportingStateCoroutine>d__80 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40014FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001500")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001501")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x170001DB")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60015BB")]
			[Address(RVA = "0xB8C7A4", Offset = "0xB8C7A4", VA = "0xB8C7A4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001DC")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60015BD")]
			[Address(RVA = "0xB8C7EC", Offset = "0xB8C7EC", VA = "0xB8C7EC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60015B8")]
		[Address(RVA = "0xB8B934", Offset = "0xB8B934", VA = "0xB8B934")]
		[DebuggerHidden]
		public <TeleportingStateCoroutine>d__80(int <>1__state)
		{
		}

		[Token(Token = "0x60015B9")]
		[Address(RVA = "0xB8C6CC", Offset = "0xB8C6CC", VA = "0xB8C6CC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60015BA")]
		[Address(RVA = "0xB8C6D0", Offset = "0xB8C6D0", VA = "0xB8C6D0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60015BC")]
		[Address(RVA = "0xB8C7AC", Offset = "0xB8C7AC", VA = "0xB8C7AC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200042C")]
	[CompilerGenerated]
	private sealed class <PostTeleportStateCoroutine>d__84 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001502")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001503")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001504")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x170001DD")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60015C1")]
			[Address(RVA = "0xB8C8DC", Offset = "0xB8C8DC", VA = "0xB8C8DC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001DE")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60015C3")]
			[Address(RVA = "0xB8C924", Offset = "0xB8C924", VA = "0xB8C924", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60015BE")]
		[Address(RVA = "0xB8BAFC", Offset = "0xB8BAFC", VA = "0xB8BAFC")]
		[DebuggerHidden]
		public <PostTeleportStateCoroutine>d__84(int <>1__state)
		{
		}

		[Token(Token = "0x60015BF")]
		[Address(RVA = "0xB8C7F4", Offset = "0xB8C7F4", VA = "0xB8C7F4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60015C0")]
		[Address(RVA = "0xB8C7F8", Offset = "0xB8C7F8", VA = "0xB8C7F8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60015C2")]
		[Address(RVA = "0xB8C8E4", Offset = "0xB8C8E4", VA = "0xB8C8E4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40014B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Tooltip("Allow linear movement prior to the teleport system being activated.")]
	public bool EnableMovementDuringReady;

	[Token(Token = "0x40014B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	[Tooltip("Allow linear movement while the teleport system is in the process of aiming for a teleport target.")]
	public bool EnableMovementDuringAim;

	[Token(Token = "0x40014BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	[Tooltip("Allow linear movement while the teleport system is in the process of configuring the landing orientation.")]
	public bool EnableMovementDuringPreTeleport;

	[Token(Token = "0x40014BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B")]
	[Tooltip("Allow linear movement after the teleport has occurred but before the system has returned to the ready state.")]
	public bool EnableMovementDuringPostTeleport;

	[Token(Token = "0x40014BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[Tooltip("Allow rotation prior to the teleport system being activated.")]
	public bool EnableRotationDuringReady;

	[Token(Token = "0x40014BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
	[Tooltip("Allow rotation while the teleport system is in the process of aiming for a teleport target.")]
	public bool EnableRotationDuringAim;

	[Token(Token = "0x40014BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E")]
	[Tooltip("Allow rotation while the teleport system is in the process of configuring the landing orientation.")]
	public bool EnableRotationDuringPreTeleport;

	[Token(Token = "0x40014BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F")]
	[Tooltip("Allow rotation after the teleport has occurred but before the system has returned to the ready state.")]
	public bool EnableRotationDuringPostTeleport;

	[NonSerialized]
	[Token(Token = "0x40014C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public TeleportAimHandler AimHandler;

	[Token(Token = "0x40014C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[Tooltip("This prefab will be instantiated as needed and updated to match the current aim target.")]
	public TeleportDestination TeleportDestinationPrefab;

	[Token(Token = "0x40014C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[Tooltip("TeleportDestinationPrefab will be instantiated into this layer.")]
	public int TeleportDestinationLayer;

	[NonSerialized]
	[Token(Token = "0x40014C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public TeleportInputHandler InputHandler;

	[NonSerialized]
	[Token(Token = "0x40014C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public TeleportIntentions CurrentIntention;

	[NonSerialized]
	[Token(Token = "0x40014C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public bool IsPreTeleportRequested;

	[NonSerialized]
	[Token(Token = "0x40014C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x55")]
	public bool IsTransitioning;

	[NonSerialized]
	[Token(Token = "0x40014C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x56")]
	public bool IsPostTeleportRequested;

	[Token(Token = "0x40014CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private TeleportDestination _teleportDestination;

	[Token(Token = "0x40014CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[Tooltip("When aiming at possible destinations, the aim collision type determines which shape to use for collision tests.")]
	public AimCollisionTypes AimCollisionType;

	[Token(Token = "0x40014CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	[Tooltip("Use the character collision radius/height/skinwidth for sphere/capsule collision tests.")]
	public bool UseCharacterCollisionData;

	[Token(Token = "0x40014CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[Tooltip("Radius of the sphere or capsule used for collision testing when aiming to possible teleport destinations. Ignored if UseCharacterCollisionData is true.")]
	public float AimCollisionRadius;

	[Token(Token = "0x40014CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	[Tooltip("Height of the capsule used for collision testing when aiming to possible teleport destinations. Ignored if UseCharacterCollisionData is true.")]
	public float AimCollisionHeight;

	[Token(Token = "0x170001CD")]
	public States CurrentState
	{
		[Token(Token = "0x6001564")]
		[Address(RVA = "0xB8A41C", Offset = "0xB8A41C", VA = "0xB8A41C")]
		[CompilerGenerated]
		get
		{
			return default(States);
		}
		[Token(Token = "0x6001565")]
		[Address(RVA = "0xB8A424", Offset = "0xB8A424", VA = "0xB8A424")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x170001CE")]
	public Quaternion DestinationRotation
	{
		[Token(Token = "0x6001569")]
		[Address(RVA = "0xB8A5F4", Offset = "0xB8A5F4", VA = "0xB8A5F4")]
		get
		{
			return default(Quaternion);
		}
	}

	[Token(Token = "0x170001CF")]
	public LocomotionController LocomotionController
	{
		[Token(Token = "0x600156A")]
		[Address(RVA = "0xB8A618", Offset = "0xB8A618", VA = "0xB8A618")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x600156B")]
		[Address(RVA = "0xB8A620", Offset = "0xB8A620", VA = "0xB8A620")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x1400008D")]
	public event Action<bool, Vector3?, Quaternion?, Quaternion?> UpdateTeleportDestination
	{
		[Token(Token = "0x6001566")]
		[Address(RVA = "0xB8A42C", Offset = "0xB8A42C", VA = "0xB8A42C")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6001567")]
		[Address(RVA = "0xB8A4DC", Offset = "0xB8A4DC", VA = "0xB8A4DC")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x1400008E")]
	public event Action EnterStateReady
	{
		[Token(Token = "0x6001575")]
		[Address(RVA = "0xB8AC60", Offset = "0xB8AC60", VA = "0xB8AC60")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6001576")]
		[Address(RVA = "0xB8ACFC", Offset = "0xB8ACFC", VA = "0xB8ACFC")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x1400008F")]
	public event Action EnterStateAim
	{
		[Token(Token = "0x6001578")]
		[Address(RVA = "0xB8ADC0", Offset = "0xB8ADC0", VA = "0xB8ADC0")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6001579")]
		[Address(RVA = "0xB8AE5C", Offset = "0xB8AE5C", VA = "0xB8AE5C")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x14000090")]
	public event Action<AimData> UpdateAimData
	{
		[Token(Token = "0x600157A")]
		[Address(RVA = "0xB8AEF8", Offset = "0xB8AEF8", VA = "0xB8AEF8")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x600157B")]
		[Address(RVA = "0xB8AFA8", Offset = "0xB8AFA8", VA = "0xB8AFA8")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x14000091")]
	public event Action ExitStateAim
	{
		[Token(Token = "0x600157D")]
		[Address(RVA = "0xB8B074", Offset = "0xB8B074", VA = "0xB8B074")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x600157E")]
		[Address(RVA = "0xB8B110", Offset = "0xB8B110", VA = "0xB8B110")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x14000092")]
	public event Action EnterStateCancelAim
	{
		[Token(Token = "0x6001580")]
		[Address(RVA = "0xB8B23C", Offset = "0xB8B23C", VA = "0xB8B23C")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6001581")]
		[Address(RVA = "0xB8B2D8", Offset = "0xB8B2D8", VA = "0xB8B2D8")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x14000093")]
	public event Action EnterStatePreTeleport
	{
		[Token(Token = "0x6001583")]
		[Address(RVA = "0xB8B404", Offset = "0xB8B404", VA = "0xB8B404")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6001584")]
		[Address(RVA = "0xB8B4A0", Offset = "0xB8B4A0", VA = "0xB8B4A0")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x14000094")]
	public event Action EnterStateCancelTeleport
	{
		[Token(Token = "0x6001586")]
		[Address(RVA = "0xB8B5CC", Offset = "0xB8B5CC", VA = "0xB8B5CC")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6001587")]
		[Address(RVA = "0xB8B668", Offset = "0xB8B668", VA = "0xB8B668")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x14000095")]
	public event Action EnterStateTeleporting
	{
		[Token(Token = "0x6001589")]
		[Address(RVA = "0xB8B794", Offset = "0xB8B794", VA = "0xB8B794")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x600158A")]
		[Address(RVA = "0xB8B830", Offset = "0xB8B830", VA = "0xB8B830")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x14000096")]
	public event Action EnterStatePostTeleport
	{
		[Token(Token = "0x600158C")]
		[Address(RVA = "0xB8B95C", Offset = "0xB8B95C", VA = "0xB8B95C")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x600158D")]
		[Address(RVA = "0xB8B9F8", Offset = "0xB8B9F8", VA = "0xB8B9F8")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x14000097")]
	public event Action<Transform, Vector3, Quaternion> Teleported
	{
		[Token(Token = "0x600158F")]
		[Address(RVA = "0xB8BB24", Offset = "0xB8BB24", VA = "0xB8BB24")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6001590")]
		[Address(RVA = "0xB8BBD4", Offset = "0xB8BBD4", VA = "0xB8BBD4")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x6001562")]
	[Address(RVA = "0xB8A3D4", Offset = "0xB8A3D4", VA = "0xB8A3D4")]
	public void EnableMovement(bool ready, bool aim, bool pre, bool post)
	{
	}

	[Token(Token = "0x6001563")]
	[Address(RVA = "0xB8A3F8", Offset = "0xB8A3F8", VA = "0xB8A3F8")]
	public void EnableRotation(bool ready, bool aim, bool pre, bool post)
	{
	}

	[Token(Token = "0x6001568")]
	[Address(RVA = "0xB8A58C", Offset = "0xB8A58C", VA = "0xB8A58C")]
	public void OnUpdateTeleportDestination(bool isValidDestination, Vector3? position, Quaternion? rotation, Quaternion? landingRotation)
	{
	}

	[Token(Token = "0x600156C")]
	[Address(RVA = "0xB8A628", Offset = "0xB8A628", VA = "0xB8A628")]
	public bool AimCollisionTest(Vector3 start, Vector3 end, LayerMask aimCollisionLayerMask, out RaycastHit hitInfo)
	{
		return default(bool);
	}

	[Token(Token = "0x600156D")]
	[Address(RVA = "0xB8A8F0", Offset = "0xB8A8F0", VA = "0xB8A8F0")]
	[Conditional("DEBUG_TELEPORT_STATES")]
	protected void LogState(string msg)
	{
	}

	[Token(Token = "0x600156E")]
	[Address(RVA = "0xB8A998", Offset = "0xB8A998", VA = "0xB8A998")]
	protected void CreateNewTeleportDestination()
	{
	}

	[Token(Token = "0x600156F")]
	[Address(RVA = "0xB8AA5C", Offset = "0xB8AA5C", VA = "0xB8AA5C")]
	private void DeactivateDestination()
	{
	}

	[Token(Token = "0x6001570")]
	[Address(RVA = "0xB8AA98", Offset = "0xB8AA98", VA = "0xB8AA98")]
	public void RecycleTeleportDestination(TeleportDestination oldDestination)
	{
	}

	[Token(Token = "0x6001571")]
	[Address(RVA = "0xB8AB48", Offset = "0xB8AB48", VA = "0xB8AB48")]
	private void EnableMotion(bool enableLinear, bool enableRotation)
	{
	}

	[Token(Token = "0x6001572")]
	[Address(RVA = "0xB8AB78", Offset = "0xB8AB78", VA = "0xB8AB78")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001573")]
	[Address(RVA = "0xB8ABCC", Offset = "0xB8ABCC", VA = "0xB8ABCC", Slot = "4")]
	public virtual void OnEnable()
	{
	}

	[Token(Token = "0x6001574")]
	[Address(RVA = "0xB8AC58", Offset = "0xB8AC58", VA = "0xB8AC58", Slot = "5")]
	public virtual void OnDisable()
	{
	}

	[Token(Token = "0x6001577")]
	[Address(RVA = "0xB8ABF0", Offset = "0xB8ABF0", VA = "0xB8ABF0")]
	[IteratorStateMachine(typeof(<ReadyStateCoroutine>d__52))]
	protected IEnumerator ReadyStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x600157C")]
	[Address(RVA = "0xB8B058", Offset = "0xB8B058", VA = "0xB8B058")]
	public void OnUpdateAimData(AimData aimData)
	{
	}

	[Token(Token = "0x600157F")]
	[Address(RVA = "0xB8B1AC", Offset = "0xB8B1AC", VA = "0xB8B1AC")]
	[IteratorStateMachine(typeof(<AimStateCoroutine>d__64))]
	protected IEnumerator AimStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6001582")]
	[Address(RVA = "0xB8B374", Offset = "0xB8B374", VA = "0xB8B374")]
	[IteratorStateMachine(typeof(<CancelAimStateCoroutine>d__68))]
	protected IEnumerator CancelAimStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6001585")]
	[Address(RVA = "0xB8B53C", Offset = "0xB8B53C", VA = "0xB8B53C")]
	[IteratorStateMachine(typeof(<PreTeleportStateCoroutine>d__72))]
	protected IEnumerator PreTeleportStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6001588")]
	[Address(RVA = "0xB8B704", Offset = "0xB8B704", VA = "0xB8B704")]
	[IteratorStateMachine(typeof(<CancelTeleportStateCoroutine>d__76))]
	protected IEnumerator CancelTeleportStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x600158B")]
	[Address(RVA = "0xB8B8CC", Offset = "0xB8B8CC", VA = "0xB8B8CC")]
	[IteratorStateMachine(typeof(<TeleportingStateCoroutine>d__80))]
	protected IEnumerator TeleportingStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x600158E")]
	[Address(RVA = "0xB8BA94", Offset = "0xB8BA94", VA = "0xB8BA94")]
	[IteratorStateMachine(typeof(<PostTeleportStateCoroutine>d__84))]
	protected IEnumerator PostTeleportStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6001591")]
	[Address(RVA = "0xB8BC84", Offset = "0xB8BC84", VA = "0xB8BC84")]
	public void DoTeleport()
	{
	}

	[Token(Token = "0x6001592")]
	[Address(RVA = "0xB8BD98", Offset = "0xB8BD98", VA = "0xB8BD98")]
	public Vector3 GetCharacterPosition()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6001593")]
	[Address(RVA = "0xB8BDC8", Offset = "0xB8BDC8", VA = "0xB8BDC8")]
	public Quaternion GetHeadRotationY()
	{
		return default(Quaternion);
	}

	[Token(Token = "0x6001594")]
	[Address(RVA = "0xB8BF04", Offset = "0xB8BF04", VA = "0xB8BF04")]
	public void DoWarp(Vector3 startPos, float positionPercent)
	{
	}

	[Token(Token = "0x6001595")]
	[Address(RVA = "0xB8BFEC", Offset = "0xB8BFEC", VA = "0xB8BFEC")]
	public LocomotionTeleport()
	{
	}
}
[Token(Token = "0x200042D")]
public class SimpleCapsuleWithStickMovement : MonoBehaviour
{
	[Token(Token = "0x4001505")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool EnableLinearMovement;

	[Token(Token = "0x4001506")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool EnableRotation;

	[Token(Token = "0x4001507")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	public bool HMDRotatesPlayer;

	[Token(Token = "0x4001508")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B")]
	public bool RotationEitherThumbstick;

	[Token(Token = "0x4001509")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float RotationAngle;

	[Token(Token = "0x400150A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float Speed;

	[Token(Token = "0x400150B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OVRCameraRig CameraRig;

	[Token(Token = "0x400150C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool ReadyToSnapTurn;

	[Token(Token = "0x400150D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Rigidbody _rigidbody;

	[Token(Token = "0x14000098")]
	public event Action CameraUpdated
	{
		[Token(Token = "0x60015C4")]
		[Address(RVA = "0xB8949C", Offset = "0xB8949C", VA = "0xB8949C")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x60015C5")]
		[Address(RVA = "0xB895C0", Offset = "0xB895C0", VA = "0xB895C0")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x14000099")]
	public event Action PreCharacterMove
	{
		[Token(Token = "0x60015C6")]
		[Address(RVA = "0xB8C92C", Offset = "0xB8C92C", VA = "0xB8C92C")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x60015C7")]
		[Address(RVA = "0xB8C9C8", Offset = "0xB8C9C8", VA = "0xB8C9C8")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x60015C8")]
	[Address(RVA = "0xB8CA64", Offset = "0xB8CA64", VA = "0xB8CA64")]
	private void Awake()
	{
	}

	[Token(Token = "0x60015C9")]
	[Address(RVA = "0xB8CB1C", Offset = "0xB8CB1C", VA = "0xB8CB1C")]
	private void Start()
	{
	}

	[Token(Token = "0x60015CA")]
	[Address(RVA = "0xB8CB20", Offset = "0xB8CB20", VA = "0xB8CB20")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x60015CB")]
	[Address(RVA = "0xB8CB94", Offset = "0xB8CB94", VA = "0xB8CB94")]
	private void RotatePlayerToHMD()
	{
	}

	[Token(Token = "0x60015CC")]
	[Address(RVA = "0xB8CCB8", Offset = "0xB8CCB8", VA = "0xB8CCB8")]
	private void StickMovement()
	{
	}

	[Token(Token = "0x60015CD")]
	[Address(RVA = "0xB8CF30", Offset = "0xB8CF30", VA = "0xB8CF30")]
	private void SnapTurn()
	{
	}

	[Token(Token = "0x60015CE")]
	[Address(RVA = "0xB8D150", Offset = "0xB8D150", VA = "0xB8D150")]
	public SimpleCapsuleWithStickMovement()
	{
	}
}
[Token(Token = "0x200042E")]
public abstract class TeleportAimHandler : TeleportSupport
{
	[Token(Token = "0x60015CF")]
	[Address(RVA = "0xB8D170", Offset = "0xB8D170", VA = "0xB8D170", Slot = "4")]
	protected override void OnEnable()
	{
	}

	[Token(Token = "0x60015D0")]
	[Address(RVA = "0xB8D1F0", Offset = "0xB8D1F0", VA = "0xB8D1F0", Slot = "5")]
	protected override void OnDisable()
	{
	}

	[Token(Token = "0x60015D1")]
	public abstract void GetPoints(List<Vector3> points);

	[Token(Token = "0x60015D2")]
	[Address(RVA = "0xB8D2A4", Offset = "0xB8D2A4", VA = "0xB8D2A4")]
	protected TeleportAimHandler()
	{
	}
}
[Token(Token = "0x200042F")]
public class TeleportAimHandlerLaser : TeleportAimHandler
{
	[Token(Token = "0x4001510")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[Tooltip("Maximum range for aiming.")]
	public float Range;

	[Token(Token = "0x60015D3")]
	[Address(RVA = "0xB8D2B4", Offset = "0xB8D2B4", VA = "0xB8D2B4", Slot = "8")]
	public override void GetPoints(List<Vector3> points)
	{
	}

	[Token(Token = "0x60015D4")]
	[Address(RVA = "0xB8D444", Offset = "0xB8D444", VA = "0xB8D444")]
	public TeleportAimHandlerLaser()
	{
	}
}
[Token(Token = "0x2000430")]
public class TeleportAimHandlerParabolic : TeleportAimHandler
{
	[Token(Token = "0x4001511")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[Tooltip("Maximum range for aiming.")]
	public float Range;

	[Token(Token = "0x4001512")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[Tooltip("The MinimumElevation is relative to the AimPosition.")]
	public float MinimumElevation;

	[Token(Token = "0x4001513")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[Tooltip("The Gravity is used in conjunction with AimVelocity and the aim direction to simulate a projectile.")]
	public float Gravity;

	[Token(Token = "0x4001514")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[Tooltip("The AimVelocity is the initial speed of the faked projectile.")]
	[Range(0.001f, 50f)]
	public float AimVelocity;

	[Token(Token = "0x4001515")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[Tooltip("The AimStep is the how much to subdivide the iteration.")]
	[Range(0.001f, 1f)]
	public float AimStep;

	[Token(Token = "0x60015D5")]
	[Address(RVA = "0xB8D454", Offset = "0xB8D454", VA = "0xB8D454", Slot = "8")]
	public override void GetPoints(List<Vector3> points)
	{
	}

	[Token(Token = "0x60015D6")]
	[Address(RVA = "0xB8D628", Offset = "0xB8D628", VA = "0xB8D628")]
	public TeleportAimHandlerParabolic()
	{
	}
}
[Token(Token = "0x2000431")]
public class TeleportAimVisualLaser : TeleportSupport
{
	[Token(Token = "0x4001516")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[Tooltip("This prefab will be instantiated when the aim visual is awakened, and will be set active when the user is aiming, and deactivated when they are done aiming.")]
	public LineRenderer LaserPrefab;

	[Token(Token = "0x4001517")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private readonly Action _enterAimStateAction;

	[Token(Token = "0x4001518")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private readonly Action _exitAimStateAction;

	[Token(Token = "0x4001519")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private readonly Action<LocomotionTeleport.AimData> _updateAimDataAction;

	[Token(Token = "0x400151A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private LineRenderer _lineRenderer;

	[Token(Token = "0x400151B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Vector3[] _linePoints;

	[Token(Token = "0x60015D7")]
	[Address(RVA = "0xB8D63C", Offset = "0xB8D63C", VA = "0xB8D63C")]
	public TeleportAimVisualLaser()
	{
	}

	[Token(Token = "0x60015D8")]
	[Address(RVA = "0xB8D748", Offset = "0xB8D748", VA = "0xB8D748")]
	private void EnterAimState()
	{
	}

	[Token(Token = "0x60015D9")]
	[Address(RVA = "0xB8D774", Offset = "0xB8D774", VA = "0xB8D774")]
	private void ExitAimState()
	{
	}

	[Token(Token = "0x60015DA")]
	[Address(RVA = "0xB8D7A0", Offset = "0xB8D7A0", VA = "0xB8D7A0")]
	private void Awake()
	{
	}

	[Token(Token = "0x60015DB")]
	[Address(RVA = "0xB8D83C", Offset = "0xB8D83C", VA = "0xB8D83C", Slot = "6")]
	protected override void AddEventHandlers()
	{
	}

	[Token(Token = "0x60015DC")]
	[Address(RVA = "0xB8D890", Offset = "0xB8D890", VA = "0xB8D890", Slot = "7")]
	protected override void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x60015DD")]
	[Address(RVA = "0xB8D8E0", Offset = "0xB8D8E0", VA = "0xB8D8E0")]
	private void UpdateAimData(LocomotionTeleport.AimData obj)
	{
	}
}
[Token(Token = "0x2000432")]
public class TeleportDestination : MonoBehaviour
{
	[Token(Token = "0x400151D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[Tooltip("If the target handler provides a target position, this transform will be moved to that position and it's game object enabled. A target position being provided does not mean the position is valid, only that the aim handler found something to test as a destination.")]
	public Transform PositionIndicator;

	[Token(Token = "0x400151E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[Tooltip("This transform will be rotated to match the rotation of the aiming target. Simple teleport destinations should assign this to the object containing this component. More complex teleport destinations might assign this to a sub-object that is used to indicate the landing orientation independently from the rest of the destination indicator, such as when world space effects are required. This will typically be a child of the PositionIndicator.")]
	public Transform OrientationIndicator;

	[Token(Token = "0x400151F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[Tooltip("After the player teleports, the character controller will have it's rotation set to this value. It is different from the OrientationIndicator transform.rotation in order to support both head-relative and forward-facing teleport modes (See TeleportOrientationHandlerThumbstick.cs).")]
	public Quaternion LandingRotation;

	[NonSerialized]
	[Token(Token = "0x4001520")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public LocomotionTeleport LocomotionTeleport;

	[NonSerialized]
	[Token(Token = "0x4001521")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public LocomotionTeleport.States TeleportState;

	[Token(Token = "0x4001522")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private readonly Action<bool, Vector3?, Quaternion?, Quaternion?> _updateTeleportDestinationAction;

	[Token(Token = "0x4001523")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool _eventsActive;

	[Token(Token = "0x170001DF")]
	public bool IsValidDestination
	{
		[Token(Token = "0x60015DE")]
		[Address(RVA = "0xB8D9DC", Offset = "0xB8D9DC", VA = "0xB8D9DC")]
		[CompilerGenerated]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60015DF")]
		[Address(RVA = "0xB8D9E4", Offset = "0xB8D9E4", VA = "0xB8D9E4")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x1400009A")]
	public event Action<TeleportDestination> Deactivated
	{
		[Token(Token = "0x60015E4")]
		[Address(RVA = "0xB8DB64", Offset = "0xB8DB64", VA = "0xB8DB64")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x60015E5")]
		[Address(RVA = "0xB8DC14", Offset = "0xB8DC14", VA = "0xB8DC14")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x60015E0")]
	[Address(RVA = "0xB8D9F0", Offset = "0xB8D9F0", VA = "0xB8D9F0")]
	private TeleportDestination()
	{
	}

	[Token(Token = "0x60015E1")]
	[Address(RVA = "0xB8DA6C", Offset = "0xB8DA6C", VA = "0xB8DA6C")]
	public void OnEnable()
	{
	}

	[Token(Token = "0x60015E2")]
	[Address(RVA = "0xB8DB30", Offset = "0xB8DB30", VA = "0xB8DB30")]
	private void TryDisableEventHandlers()
	{
	}

	[Token(Token = "0x60015E3")]
	[Address(RVA = "0xB8DB60", Offset = "0xB8DB60", VA = "0xB8DB60")]
	public void OnDisable()
	{
	}

	[Token(Token = "0x60015E6")]
	[Address(RVA = "0xB8AA74", Offset = "0xB8AA74", VA = "0xB8AA74")]
	public void OnDeactivated()
	{
	}

	[Token(Token = "0x60015E7")]
	[Address(RVA = "0xB8DCC4", Offset = "0xB8DCC4", VA = "0xB8DCC4")]
	public void Recycle()
	{
	}

	[Token(Token = "0x60015E8")]
	[Address(RVA = "0xB8DCE0", Offset = "0xB8DCE0", VA = "0xB8DCE0", Slot = "4")]
	public virtual void UpdateTeleportDestination(bool isValidDestination, Vector3? position, Quaternion? rotation, Quaternion? landingRotation)
	{
	}
}
[Token(Token = "0x2000433")]
public abstract class TeleportInputHandler : TeleportSupport
{
	[Token(Token = "0x2000434")]
	[CompilerGenerated]
	private sealed class <TeleportReadyCoroutine>d__5 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001527")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001528")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001529")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportInputHandler <>4__this;

		[Token(Token = "0x170001E0")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60015F5")]
			[Address(RVA = "0xB8E25C", Offset = "0xB8E25C", VA = "0xB8E25C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001E1")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60015F7")]
			[Address(RVA = "0xB8E2A4", Offset = "0xB8E2A4", VA = "0xB8E2A4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60015F2")]
		[Address(RVA = "0xB8E0E0", Offset = "0xB8E0E0", VA = "0xB8E0E0")]
		[DebuggerHidden]
		public <TeleportReadyCoroutine>d__5(int <>1__state)
		{
		}

		[Token(Token = "0x60015F3")]
		[Address(RVA = "0xB8E1D8", Offset = "0xB8E1D8", VA = "0xB8E1D8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60015F4")]
		[Address(RVA = "0xB8E1DC", Offset = "0xB8E1DC", VA = "0xB8E1DC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60015F6")]
		[Address(RVA = "0xB8E264", Offset = "0xB8E264", VA = "0xB8E264", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000435")]
	[CompilerGenerated]
	private sealed class <TeleportAimCoroutine>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400152A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400152B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400152C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportInputHandler <>4__this;

		[Token(Token = "0x170001E2")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60015FB")]
			[Address(RVA = "0xB8E33C", Offset = "0xB8E33C", VA = "0xB8E33C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001E3")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60015FD")]
			[Address(RVA = "0xB8E384", Offset = "0xB8E384", VA = "0xB8E384", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60015F8")]
		[Address(RVA = "0xB8E170", Offset = "0xB8E170", VA = "0xB8E170")]
		[DebuggerHidden]
		public <TeleportAimCoroutine>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x60015F9")]
		[Address(RVA = "0xB8E2AC", Offset = "0xB8E2AC", VA = "0xB8E2AC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60015FA")]
		[Address(RVA = "0xB8E2B0", Offset = "0xB8E2B0", VA = "0xB8E2B0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60015FC")]
		[Address(RVA = "0xB8E344", Offset = "0xB8E344", VA = "0xB8E344", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4001525")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private readonly Action _startReadyAction;

	[Token(Token = "0x4001526")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private readonly Action _startAimAction;

	[Token(Token = "0x60015E9")]
	[Address(RVA = "0xB8DED4", Offset = "0xB8DED4", VA = "0xB8DED4")]
	protected TeleportInputHandler()
	{
	}

	[Token(Token = "0x60015EA")]
	[Address(RVA = "0xB8DF94", Offset = "0xB8DF94", VA = "0xB8DF94", Slot = "6")]
	protected override void AddEventHandlers()
	{
	}

	[Token(Token = "0x60015EB")]
	[Address(RVA = "0xB8DFD0", Offset = "0xB8DFD0", VA = "0xB8DFD0", Slot = "7")]
	protected override void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x60015EC")]
	[Address(RVA = "0xB8E078", Offset = "0xB8E078", VA = "0xB8E078")]
	[IteratorStateMachine(typeof(<TeleportReadyCoroutine>d__5))]
	private IEnumerator TeleportReadyCoroutine()
	{
		return null;
	}

	[Token(Token = "0x60015ED")]
	[Address(RVA = "0xB8E108", Offset = "0xB8E108", VA = "0xB8E108")]
	[IteratorStateMachine(typeof(<TeleportAimCoroutine>d__6))]
	private IEnumerator TeleportAimCoroutine()
	{
		return null;
	}

	[Token(Token = "0x60015EE")]
	public abstract LocomotionTeleport.TeleportIntentions GetIntention();

	[Token(Token = "0x60015EF")]
	public abstract void GetAimData(out Ray aimRay);
}
[Token(Token = "0x2000436")]
public class TeleportInputHandlerHMD : TeleportInputHandler
{
	[Token(Token = "0x400152E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[Tooltip("The button used to begin aiming for a teleport.")]
	public OVRInput.RawButton AimButton;

	[Token(Token = "0x400152F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[Tooltip("The button used to trigger the teleport after aiming. It can be the same button as the AimButton, however you cannot abort a teleport if it is.")]
	public OVRInput.RawButton TeleportButton;

	[Token(Token = "0x4001530")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[Tooltip("When true, the system will not use the PreTeleport intention which will allow a teleport to occur on a button downpress. When false, the button downpress will trigger the PreTeleport intention and the Teleport intention when the button is released.")]
	public bool FastTeleport;

	[Token(Token = "0x170001E4")]
	public Transform Pointer
	{
		[Token(Token = "0x60015FE")]
		[Address(RVA = "0xB8E38C", Offset = "0xB8E38C", VA = "0xB8E38C")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x60015FF")]
		[Address(RVA = "0xB8E394", Offset = "0xB8E394", VA = "0xB8E394")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x6001600")]
	[Address(RVA = "0xB8E39C", Offset = "0xB8E39C", VA = "0xB8E39C", Slot = "8")]
	public override LocomotionTeleport.TeleportIntentions GetIntention()
	{
		return default(LocomotionTeleport.TeleportIntentions);
	}

	[Token(Token = "0x6001601")]
	[Address(RVA = "0xB8E4C8", Offset = "0xB8E4C8", VA = "0xB8E4C8", Slot = "9")]
	public override void GetAimData(out Ray aimRay)
	{
	}

	[Token(Token = "0x6001602")]
	[Address(RVA = "0xB8E57C", Offset = "0xB8E57C", VA = "0xB8E57C")]
	public TeleportInputHandlerHMD()
	{
	}
}
[Token(Token = "0x2000437")]
public class TeleportInputHandlerTouch : TeleportInputHandlerHMD
{
	[Token(Token = "0x2000438")]
	public enum InputModes
	{
		[Token(Token = "0x400153B")]
		CapacitiveButtonForAimAndTeleport,
		[Token(Token = "0x400153C")]
		SeparateButtonsForAimAndTeleport,
		[Token(Token = "0x400153D")]
		ThumbstickTeleport,
		[Token(Token = "0x400153E")]
		ThumbstickTeleportForwardBackOnly
	}

	[Token(Token = "0x2000439")]
	public enum AimCapTouchButtons
	{
		[Token(Token = "0x4001540")]
		A,
		[Token(Token = "0x4001541")]
		B,
		[Token(Token = "0x4001542")]
		LeftTrigger,
		[Token(Token = "0x4001543")]
		LeftThumbstick,
		[Token(Token = "0x4001544")]
		RightTrigger,
		[Token(Token = "0x4001545")]
		RightThumbstick,
		[Token(Token = "0x4001546")]
		X,
		[Token(Token = "0x4001547")]
		Y
	}

	[Token(Token = "0x4001531")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Transform LeftHand;

	[Token(Token = "0x4001532")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Transform RightHand;

	[Token(Token = "0x4001533")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[Tooltip("CapacitiveButtonForAimAndTeleport=Activate aiming via cap touch detection, press the same button to teleport.\nSeparateButtonsForAimAndTeleport=Use one button to begin aiming, and another to trigger the teleport.\nThumbstickTeleport=Push a thumbstick to begin aiming, release to teleport.")]
	public InputModes InputMode;

	[Token(Token = "0x4001534")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private readonly OVRInput.RawButton[] _rawButtons;

	[Token(Token = "0x4001535")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private readonly OVRInput.RawTouch[] _rawTouch;

	[Token(Token = "0x4001536")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[Tooltip("Select the controller to be used for aiming. Supports LTouch, RTouch, or Touch for either.")]
	public OVRInput.Controller AimingController;

	[Token(Token = "0x4001537")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private OVRInput.Controller InitiatingController;

	[Token(Token = "0x4001538")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[Tooltip("Select the button to use for triggering aim and teleport when InputMode==CapacitiveButtonForAimAndTeleport")]
	public AimCapTouchButtons CapacitiveAimAndTeleportButton;

	[Token(Token = "0x4001539")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	[Tooltip("The thumbstick magnitude required to trigger aiming and teleports when InputMode==InputModes.ThumbstickTeleport")]
	public float ThumbstickTeleportThreshold;

	[Token(Token = "0x6001603")]
	[Address(RVA = "0xB8E580", Offset = "0xB8E580", VA = "0xB8E580")]
	private void Start()
	{
	}

	[Token(Token = "0x6001604")]
	[Address(RVA = "0xB8E584", Offset = "0xB8E584", VA = "0xB8E584", Slot = "8")]
	public override LocomotionTeleport.TeleportIntentions GetIntention()
	{
		return default(LocomotionTeleport.TeleportIntentions);
	}

	[Token(Token = "0x6001605")]
	[Address(RVA = "0xB8E9B8", Offset = "0xB8E9B8", VA = "0xB8E9B8", Slot = "9")]
	public override void GetAimData(out Ray aimRay)
	{
	}

	[Token(Token = "0x6001606")]
	[Address(RVA = "0xB8EA74", Offset = "0xB8EA74", VA = "0xB8EA74")]
	public TeleportInputHandlerTouch()
	{
	}
}
[Token(Token = "0x200043A")]
public abstract class TeleportOrientationHandler : TeleportSupport
{
	[Token(Token = "0x200043B")]
	public enum OrientationModes
	{
		[Token(Token = "0x400154C")]
		HeadRelative,
		[Token(Token = "0x400154D")]
		ForwardFacing
	}

	[Token(Token = "0x200043C")]
	[CompilerGenerated]
	private sealed class <UpdateOrientationCoroutine>d__7 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400154E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400154F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001550")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportOrientationHandler <>4__this;

		[Token(Token = "0x170001E5")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001613")]
			[Address(RVA = "0xB8EEE0", Offset = "0xB8EEE0", VA = "0xB8EEE0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001E6")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001615")]
			[Address(RVA = "0xB8EF28", Offset = "0xB8EF28", VA = "0xB8EF28", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001610")]
		[Address(RVA = "0xB8ECFC", Offset = "0xB8ECFC", VA = "0xB8ECFC")]
		[DebuggerHidden]
		public <UpdateOrientationCoroutine>d__7(int <>1__state)
		{
		}

		[Token(Token = "0x6001611")]
		[Address(RVA = "0xB8EE3C", Offset = "0xB8EE3C", VA = "0xB8EE3C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001612")]
		[Address(RVA = "0xB8EE40", Offset = "0xB8EE40", VA = "0xB8EE40", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001614")]
		[Address(RVA = "0xB8EEE8", Offset = "0xB8EEE8", VA = "0xB8EEE8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4001548")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private readonly Action _updateOrientationAction;

	[Token(Token = "0x4001549")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private readonly Action<LocomotionTeleport.AimData> _updateAimDataAction;

	[Token(Token = "0x400154A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	protected LocomotionTeleport.AimData AimData;

	[Token(Token = "0x6001607")]
	[Address(RVA = "0xB8EB4C", Offset = "0xB8EB4C", VA = "0xB8EB4C")]
	protected TeleportOrientationHandler()
	{
	}

	[Token(Token = "0x6001608")]
	[Address(RVA = "0xB8EC20", Offset = "0xB8EC20", VA = "0xB8EC20")]
	private void UpdateAimData(LocomotionTeleport.AimData aimData)
	{
	}

	[Token(Token = "0x6001609")]
	[Address(RVA = "0xB8EC28", Offset = "0xB8EC28", VA = "0xB8EC28", Slot = "6")]
	protected override void AddEventHandlers()
	{
	}

	[Token(Token = "0x600160A")]
	[Address(RVA = "0xB8EC60", Offset = "0xB8EC60", VA = "0xB8EC60", Slot = "7")]
	protected override void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x600160B")]
	[Address(RVA = "0xB8EC94", Offset = "0xB8EC94", VA = "0xB8EC94")]
	[IteratorStateMachine(typeof(<UpdateOrientationCoroutine>d__7))]
	private IEnumerator UpdateOrientationCoroutine()
	{
		return null;
	}

	[Token(Token = "0x600160C")]
	protected abstract void InitializeTeleportDestination();

	[Token(Token = "0x600160D")]
	protected abstract void UpdateTeleportDestination();

	[Token(Token = "0x600160E")]
	[Address(RVA = "0xB8ED24", Offset = "0xB8ED24", VA = "0xB8ED24")]
	protected Quaternion GetLandingOrientation(OrientationModes mode, Quaternion rotation)
	{
		return default(Quaternion);
	}
}
[Token(Token = "0x200043D")]
public class TeleportOrientationHandler360 : TeleportOrientationHandler
{
	[Token(Token = "0x6001616")]
	[Address(RVA = "0xB8EF30", Offset = "0xB8EF30", VA = "0xB8EF30", Slot = "8")]
	protected override void InitializeTeleportDestination()
	{
	}

	[Token(Token = "0x6001617")]
	[Address(RVA = "0xB8EF34", Offset = "0xB8EF34", VA = "0xB8EF34", Slot = "9")]
	protected override void UpdateTeleportDestination()
	{
	}

	[Token(Token = "0x6001618")]
	[Address(RVA = "0xB8EFDC", Offset = "0xB8EFDC", VA = "0xB8EFDC")]
	public TeleportOrientationHandler360()
	{
	}
}
[Token(Token = "0x200043E")]
public class TeleportOrientationHandlerHMD : TeleportOrientationHandler
{
	[Token(Token = "0x4001551")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[Tooltip("HeadRelative=Character will orient to match the arrow. ForwardFacing=When user orients to match the arrow, they will be facing the sensors.")]
	public OrientationModes OrientationMode;

	[Token(Token = "0x4001552")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[Tooltip("Should the destination orientation be updated during the aim state in addition to the PreTeleport state?")]
	public bool UpdateOrientationDuringAim;

	[Token(Token = "0x4001553")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[Tooltip("How far from the destination must the HMD be pointing before using it for orientation")]
	public float AimDistanceThreshold;

	[Token(Token = "0x4001554")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[Tooltip("How far from the destination must the HMD be pointing before rejecting the teleport")]
	public float AimDistanceMaxRange;

	[Token(Token = "0x4001555")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Quaternion _initialRotation;

	[Token(Token = "0x6001619")]
	[Address(RVA = "0xB8EFE0", Offset = "0xB8EFE0", VA = "0xB8EFE0", Slot = "8")]
	protected override void InitializeTeleportDestination()
	{
	}

	[Token(Token = "0x600161A")]
	[Address(RVA = "0xB8F030", Offset = "0xB8F030", VA = "0xB8F030", Slot = "9")]
	protected override void UpdateTeleportDestination()
	{
	}

	[Token(Token = "0x600161B")]
	[Address(RVA = "0xB8F4F4", Offset = "0xB8F4F4", VA = "0xB8F4F4")]
	public TeleportOrientationHandlerHMD()
	{
	}
}
[Token(Token = "0x200043F")]
public class TeleportOrientationHandlerThumbstick : TeleportOrientationHandler
{
	[Token(Token = "0x4001556")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[Tooltip("HeadRelative=Character will orient to match the arrow. ForwardFacing=When user orients to match the arrow, they will be facing the sensors.")]
	public OrientationModes OrientationMode;

	[Token(Token = "0x4001557")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[Tooltip("Which thumbstick is to be used for adjusting the teleport orientation. Supports LTouch, RTouch, or Touch for either.")]
	public OVRInput.Controller Thumbstick;

	[Token(Token = "0x4001558")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[Tooltip("The orientation will only change if the thumbstick magnitude is above this value. This will usually be larger than the TeleportInputHandlerTouch.ThumbstickTeleportThreshold.")]
	public float RotateStickThreshold;

	[Token(Token = "0x4001559")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private Quaternion _initialRotation;

	[Token(Token = "0x400155A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private Quaternion _currentRotation;

	[Token(Token = "0x400155B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private Vector2 _lastValidDirection;

	[Token(Token = "0x600161C")]
	[Address(RVA = "0xB8F4F8", Offset = "0xB8F4F8", VA = "0xB8F4F8", Slot = "8")]
	protected override void InitializeTeleportDestination()
	{
	}

	[Token(Token = "0x600161D")]
	[Address(RVA = "0xB8F52C", Offset = "0xB8F52C", VA = "0xB8F52C", Slot = "9")]
	protected override void UpdateTeleportDestination()
	{
	}

	[Token(Token = "0x600161E")]
	[Address(RVA = "0xB8FA28", Offset = "0xB8FA28", VA = "0xB8FA28")]
	public TeleportOrientationHandlerThumbstick()
	{
	}
}
[Token(Token = "0x2000440")]
public class TeleportPoint : MonoBehaviour
{
	[Token(Token = "0x400155C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float dimmingSpeed;

	[Token(Token = "0x400155D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float fullIntensity;

	[Token(Token = "0x400155E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float lowIntensity;

	[Token(Token = "0x400155F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform destTransform;

	[Token(Token = "0x4001560")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float lastLookAtTime;

	[Token(Token = "0x600161F")]
	[Address(RVA = "0xB8FA38", Offset = "0xB8FA38", VA = "0xB8FA38")]
	private void Start()
	{
	}

	[Token(Token = "0x6001620")]
	[Address(RVA = "0xB8FA3C", Offset = "0xB8FA3C", VA = "0xB8FA3C")]
	public Transform GetDestTransform()
	{
		return null;
	}

	[Token(Token = "0x6001621")]
	[Address(RVA = "0xB8FA44", Offset = "0xB8FA44", VA = "0xB8FA44")]
	private void Update()
	{
	}

	[Token(Token = "0x6001622")]
	[Address(RVA = "0xB8FB30", Offset = "0xB8FB30", VA = "0xB8FB30")]
	public void OnLookAt()
	{
	}

	[Token(Token = "0x6001623")]
	[Address(RVA = "0xB8FB4C", Offset = "0xB8FB4C", VA = "0xB8FB4C")]
	public TeleportPoint()
	{
	}
}
[Token(Token = "0x2000441")]
public abstract class TeleportSupport : MonoBehaviour
{
	[Token(Token = "0x4001562")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool _eventsActive;

	[Token(Token = "0x170001E7")]
	protected LocomotionTeleport LocomotionTeleport
	{
		[Token(Token = "0x6001624")]
		[Address(RVA = "0xB8FB64", Offset = "0xB8FB64", VA = "0xB8FB64")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x6001625")]
		[Address(RVA = "0xB8FB6C", Offset = "0xB8FB6C", VA = "0xB8FB6C")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x6001626")]
	[Address(RVA = "0xB8D194", Offset = "0xB8D194", VA = "0xB8D194", Slot = "4")]
	protected virtual void OnEnable()
	{
	}

	[Token(Token = "0x6001627")]
	[Address(RVA = "0xB8D284", Offset = "0xB8D284", VA = "0xB8D284", Slot = "5")]
	protected virtual void OnDisable()
	{
	}

	[Token(Token = "0x6001628")]
	[Address(RVA = "0xB8FB74", Offset = "0xB8FB74", VA = "0xB8FB74")]
	[Conditional("DEBUG_TELEPORT_EVENT_HANDLERS")]
	private void LogEventHandler(string msg)
	{
	}

	[Token(Token = "0x6001629")]
	[Address(RVA = "0xB8D884", Offset = "0xB8D884", VA = "0xB8D884", Slot = "6")]
	protected virtual void AddEventHandlers()
	{
	}

	[Token(Token = "0x600162A")]
	[Address(RVA = "0xB8D8D8", Offset = "0xB8D8D8", VA = "0xB8D8D8", Slot = "7")]
	protected virtual void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x600162B")]
	[Address(RVA = "0xB8D2AC", Offset = "0xB8D2AC", VA = "0xB8D2AC")]
	protected TeleportSupport()
	{
	}
}
[Token(Token = "0x2000442")]
public abstract class TeleportTargetHandler : TeleportSupport
{
	[Token(Token = "0x2000443")]
	[CompilerGenerated]
	private sealed class <TargetAimCoroutine>d__7 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001568")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001569")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400156A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportTargetHandler <>4__this;

		[Token(Token = "0x170001E8")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001637")]
			[Address(RVA = "0xB9022C", Offset = "0xB9022C", VA = "0xB9022C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001E9")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001639")]
			[Address(RVA = "0xB90274", Offset = "0xB90274", VA = "0xB90274", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001634")]
		[Address(RVA = "0xB8FDF0", Offset = "0xB8FDF0", VA = "0xB8FDF0")]
		[DebuggerHidden]
		public <TargetAimCoroutine>d__7(int <>1__state)
		{
		}

		[Token(Token = "0x6001635")]
		[Address(RVA = "0xB8FF6C", Offset = "0xB8FF6C", VA = "0xB8FF6C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001636")]
		[Address(RVA = "0xB8FF70", Offset = "0xB8FF70", VA = "0xB8FF70", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001638")]
		[Address(RVA = "0xB90234", Offset = "0xB90234", VA = "0xB90234", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4001563")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[Tooltip("This bitmask controls which game object layers will be included in the targeting collision tests.")]
	public LayerMask AimCollisionLayerMask;

	[Token(Token = "0x4001564")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	protected readonly LocomotionTeleport.AimData AimData;

	[Token(Token = "0x4001565")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private readonly Action _startAimAction;

	[Token(Token = "0x4001566")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private readonly List<Vector3> _aimPoints;

	[Token(Token = "0x4001567")]
	private const float ERROR_MARGIN = 0.1f;

	[Token(Token = "0x600162C")]
	[Address(RVA = "0xB8FC44", Offset = "0xB8FC44", VA = "0xB8FC44")]
	protected TeleportTargetHandler()
	{
	}

	[Token(Token = "0x600162D")]
	[Address(RVA = "0xB8FD3C", Offset = "0xB8FD3C", VA = "0xB8FD3C", Slot = "6")]
	protected override void AddEventHandlers()
	{
	}

	[Token(Token = "0x600162E")]
	[Address(RVA = "0xB8FD64", Offset = "0xB8FD64", VA = "0xB8FD64", Slot = "7")]
	protected override void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x600162F")]
	[Address(RVA = "0xB8FD88", Offset = "0xB8FD88", VA = "0xB8FD88")]
	[IteratorStateMachine(typeof(<TargetAimCoroutine>d__7))]
	private IEnumerator TargetAimCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6001630")]
	[Address(RVA = "0xB8FE18", Offset = "0xB8FE18", VA = "0xB8FE18", Slot = "8")]
	protected virtual void ResetAimData()
	{
	}

	[Token(Token = "0x6001631")]
	protected abstract bool ConsiderTeleport(Vector3 start, ref Vector3 end);

	[Token(Token = "0x6001632")]
	[Address(RVA = "0xB8FE30", Offset = "0xB8FE30", VA = "0xB8FE30", Slot = "10")]
	public virtual Vector3? ConsiderDestination(Vector3 location)
	{
		return null;
	}
}
[Token(Token = "0x2000444")]
public class TeleportTargetHandlerNavMesh : TeleportTargetHandler
{
	[Token(Token = "0x400156B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public int NavMeshAreaMask;

	[Token(Token = "0x400156C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private NavMeshPath _path;

	[Token(Token = "0x600163A")]
	[Address(RVA = "0xB9027C", Offset = "0xB9027C", VA = "0xB9027C")]
	private void Awake()
	{
	}

	[Token(Token = "0x600163B")]
	[Address(RVA = "0xB902DC", Offset = "0xB902DC", VA = "0xB902DC", Slot = "9")]
	protected override bool ConsiderTeleport(Vector3 start, ref Vector3 end)
	{
		return default(bool);
	}

	[Token(Token = "0x600163C")]
	[Address(RVA = "0xB90444", Offset = "0xB90444", VA = "0xB90444", Slot = "10")]
	public override Vector3? ConsiderDestination(Vector3 location)
	{
		return null;
	}

	[Token(Token = "0x600163D")]
	[Address(RVA = "0xB90530", Offset = "0xB90530", VA = "0xB90530")]
	[Conditional("SHOW_PATH_RESULT")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x600163E")]
	[Address(RVA = "0xB90534", Offset = "0xB90534", VA = "0xB90534")]
	public TeleportTargetHandlerNavMesh()
	{
	}
}
[Token(Token = "0x2000445")]
public class TeleportTargetHandlerNode : TeleportTargetHandler
{
	[Token(Token = "0x400156D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[Tooltip("When checking line of sight to the destination, add this value to the vertical offset for targeting collision checks.")]
	public float LOSOffset;

	[Token(Token = "0x400156E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[Tooltip("Teleport logic will only work with TeleportPoint components that exist in the layers specified by this mask.")]
	public LayerMask TeleportLayerMask;

	[Token(Token = "0x600163F")]
	[Address(RVA = "0xB90540", Offset = "0xB90540", VA = "0xB90540", Slot = "9")]
	protected override bool ConsiderTeleport(Vector3 start, ref Vector3 end)
	{
		return default(bool);
	}

	[Token(Token = "0x6001640")]
	[Address(RVA = "0xB90738", Offset = "0xB90738", VA = "0xB90738")]
	public TeleportTargetHandlerNode()
	{
	}
}
[Token(Token = "0x2000446")]
public class TeleportTargetHandlerPhysical : TeleportTargetHandler
{
	[Token(Token = "0x6001641")]
	[Address(RVA = "0xB90744", Offset = "0xB90744", VA = "0xB90744", Slot = "9")]
	protected override bool ConsiderTeleport(Vector3 start, ref Vector3 end)
	{
		return default(bool);
	}

	[Token(Token = "0x6001642")]
	[Address(RVA = "0xB908AC", Offset = "0xB908AC", VA = "0xB908AC")]
	public TeleportTargetHandlerPhysical()
	{
	}
}
[Token(Token = "0x2000447")]
public abstract class TeleportTransition : TeleportSupport
{
	[Token(Token = "0x6001643")]
	[Address(RVA = "0xB908B0", Offset = "0xB908B0", VA = "0xB908B0", Slot = "6")]
	protected override void AddEventHandlers()
	{
	}

	[Token(Token = "0x6001644")]
	[Address(RVA = "0xB90934", Offset = "0xB90934", VA = "0xB90934", Slot = "7")]
	protected override void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x6001645")]
	protected abstract void LocomotionTeleportOnEnterStateTeleporting();

	[Token(Token = "0x6001646")]
	[Address(RVA = "0xB909B4", Offset = "0xB909B4", VA = "0xB909B4")]
	protected TeleportTransition()
	{
	}
}
[Token(Token = "0x2000448")]
public class TeleportTransitionBlink : TeleportTransition
{
	[Token(Token = "0x2000449")]
	[CompilerGenerated]
	private sealed class <BlinkCoroutine>d__4 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001572")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001573")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001574")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportTransitionBlink <>4__this;

		[Token(Token = "0x4001575")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <elapsedTime>5__2;

		[Token(Token = "0x4001576")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <teleportTime>5__3;

		[Token(Token = "0x4001577")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool <teleported>5__4;

		[Token(Token = "0x170001EA")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600164D")]
			[Address(RVA = "0xB90CF4", Offset = "0xB90CF4", VA = "0xB90CF4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001EB")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600164F")]
			[Address(RVA = "0xB90D3C", Offset = "0xB90D3C", VA = "0xB90D3C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600164A")]
		[Address(RVA = "0xB90A44", Offset = "0xB90A44", VA = "0xB90A44")]
		[DebuggerHidden]
		public <BlinkCoroutine>d__4(int <>1__state)
		{
		}

		[Token(Token = "0x600164B")]
		[Address(RVA = "0xB90BFC", Offset = "0xB90BFC", VA = "0xB90BFC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600164C")]
		[Address(RVA = "0xB90C00", Offset = "0xB90C00", VA = "0xB90C00", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600164E")]
		[Address(RVA = "0xB90CFC", Offset = "0xB90CFC", VA = "0xB90CFC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400156F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[Tooltip("How long the transition takes. Usually this is greater than Teleport Delay.")]
	[Range(0.01f, 2f)]
	public float TransitionDuration;

	[Token(Token = "0x4001570")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[Tooltip("At what percentage of the elapsed transition time does the teleport occur?")]
	[Range(0f, 1f)]
	public float TeleportDelay;

	[Token(Token = "0x4001571")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[Tooltip("Fade to black over the duration of the transition")]
	public AnimationCurve FadeLevels;

	[Token(Token = "0x6001647")]
	[Address(RVA = "0xB909BC", Offset = "0xB909BC", VA = "0xB909BC", Slot = "8")]
	protected override void LocomotionTeleportOnEnterStateTeleporting()
	{
	}

	[Token(Token = "0x6001648")]
	[Address(RVA = "0xB909DC", Offset = "0xB909DC", VA = "0xB909DC")]
	[IteratorStateMachine(typeof(<BlinkCoroutine>d__4))]
	protected IEnumerator BlinkCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6001649")]
	[Address(RVA = "0xB90A6C", Offset = "0xB90A6C", VA = "0xB90A6C")]
	public TeleportTransitionBlink()
	{
	}
}
[Token(Token = "0x200044A")]
public class TeleportTransitionInstant : TeleportTransition
{
	[Token(Token = "0x6001650")]
	[Address(RVA = "0xB90D44", Offset = "0xB90D44", VA = "0xB90D44", Slot = "8")]
	protected override void LocomotionTeleportOnEnterStateTeleporting()
	{
	}

	[Token(Token = "0x6001651")]
	[Address(RVA = "0xB90D5C", Offset = "0xB90D5C", VA = "0xB90D5C")]
	public TeleportTransitionInstant()
	{
	}
}
[Token(Token = "0x200044B")]
public class TeleportTransitionWarp : TeleportTransition
{
	[Token(Token = "0x200044C")]
	[CompilerGenerated]
	private sealed class <DoWarp>d__3 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400157A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400157B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400157C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportTransitionWarp <>4__this;

		[Token(Token = "0x400157D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Vector3 <startPosition>5__2;

		[Token(Token = "0x400157E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float <elapsedTime>5__3;

		[Token(Token = "0x170001EC")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001658")]
			[Address(RVA = "0xB90F5C", Offset = "0xB90F5C", VA = "0xB90F5C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001ED")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600165A")]
			[Address(RVA = "0xB90FA4", Offset = "0xB90FA4", VA = "0xB90FA4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001655")]
		[Address(RVA = "0xB90DEC", Offset = "0xB90DEC", VA = "0xB90DEC")]
		[DebuggerHidden]
		public <DoWarp>d__3(int <>1__state)
		{
		}

		[Token(Token = "0x6001656")]
		[Address(RVA = "0xB90E50", Offset = "0xB90E50", VA = "0xB90E50", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001657")]
		[Address(RVA = "0xB90E54", Offset = "0xB90E54", VA = "0xB90E54", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001659")]
		[Address(RVA = "0xB90F64", Offset = "0xB90F64", VA = "0xB90F64", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4001578")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[Range(0.01f, 1f)]
	[Tooltip("How much time the warp transition takes to complete.")]
	public float TransitionDuration;

	[Token(Token = "0x4001579")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[HideInInspector]
	public AnimationCurve PositionLerp;

	[Token(Token = "0x6001652")]
	[Address(RVA = "0xB90D64", Offset = "0xB90D64", VA = "0xB90D64", Slot = "8")]
	protected override void LocomotionTeleportOnEnterStateTeleporting()
	{
	}

	[Token(Token = "0x6001653")]
	[Address(RVA = "0xB90D84", Offset = "0xB90D84", VA = "0xB90D84")]
	[IteratorStateMachine(typeof(<DoWarp>d__3))]
	private IEnumerator DoWarp()
	{
		return null;
	}

	[Token(Token = "0x6001654")]
	[Address(RVA = "0xB90E14", Offset = "0xB90E14", VA = "0xB90E14")]
	public TeleportTransitionWarp()
	{
	}
}
[Token(Token = "0x200044D")]
public static class NativeVideoPlayer
{
	[Token(Token = "0x200044E")]
	public enum PlabackState
	{
		[Token(Token = "0x4001597")]
		Idle = 1,
		[Token(Token = "0x4001598")]
		Preparing,
		[Token(Token = "0x4001599")]
		Buffering,
		[Token(Token = "0x400159A")]
		Ready,
		[Token(Token = "0x400159B")]
		Ended
	}

	[Token(Token = "0x200044F")]
	public enum StereoMode
	{
		[Token(Token = "0x400159D")]
		Unknown = -1,
		[Token(Token = "0x400159E")]
		Mono,
		[Token(Token = "0x400159F")]
		TopBottom,
		[Token(Token = "0x40015A0")]
		LeftRight,
		[Token(Token = "0x40015A1")]
		Mesh
	}

	[Token(Token = "0x400157F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static IntPtr? _Activity;

	[Token(Token = "0x4001580")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static IntPtr? _VideoPlayerClass;

	[Token(Token = "0x4001581")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private static readonly jvalue[] EmptyParams;

	[Token(Token = "0x4001582")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private static IntPtr getIsPlayingMethodId;

	[Token(Token = "0x4001583")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private static IntPtr getCurrentPlaybackStateMethodId;

	[Token(Token = "0x4001584")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private static IntPtr getDurationMethodId;

	[Token(Token = "0x4001585")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private static IntPtr getStereoModeMethodId;

	[Token(Token = "0x4001586")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private static IntPtr getWidthMethodId;

	[Token(Token = "0x4001587")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private static IntPtr getHeightMethodId;

	[Token(Token = "0x4001588")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private static IntPtr getPlaybackPositionMethodId;

	[Token(Token = "0x4001589")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private static IntPtr setPlaybackPositionMethodId;

	[Token(Token = "0x400158A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private static jvalue[] setPlaybackPositionParams;

	[Token(Token = "0x400158B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private static IntPtr playVideoMethodId;

	[Token(Token = "0x400158C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private static jvalue[] playVideoParams;

	[Token(Token = "0x400158D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private static IntPtr stopMethodId;

	[Token(Token = "0x400158E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private static IntPtr resumeMethodId;

	[Token(Token = "0x400158F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private static IntPtr pauseMethodId;

	[Token(Token = "0x4001590")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private static IntPtr setPlaybackSpeedMethodId;

	[Token(Token = "0x4001591")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private static jvalue[] setPlaybackSpeedParams;

	[Token(Token = "0x4001592")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private static IntPtr setLoopingMethodId;

	[Token(Token = "0x4001593")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private static jvalue[] setLoopingParams;

	[Token(Token = "0x4001594")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private static IntPtr setListenerRotationQuaternionMethodId;

	[Token(Token = "0x4001595")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private static jvalue[] setListenerRotationQuaternionParams;

	[Token(Token = "0x170001EE")]
	private static IntPtr VideoPlayerClass
	{
		[Token(Token = "0x600165B")]
		[Address(RVA = "0xB90FAC", Offset = "0xB90FAC", VA = "0xB90FAC")]
		get
		{
			return default(IntPtr);
		}
	}

	[Token(Token = "0x170001EF")]
	private static IntPtr Activity
	{
		[Token(Token = "0x600165C")]
		[Address(RVA = "0xB91268", Offset = "0xB91268", VA = "0xB91268")]
		get
		{
			return default(IntPtr);
		}
	}

	[Token(Token = "0x170001F0")]
	public static bool IsAvailable
	{
		[Token(Token = "0x600165D")]
		[Address(RVA = "0xB914D4", Offset = "0xB914D4", VA = "0xB914D4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170001F1")]
	public static bool IsPlaying
	{
		[Token(Token = "0x600165E")]
		[Address(RVA = "0xB91538", Offset = "0xB91538", VA = "0xB91538")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170001F2")]
	public static PlabackState CurrentPlaybackState
	{
		[Token(Token = "0x600165F")]
		[Address(RVA = "0xB9162C", Offset = "0xB9162C", VA = "0xB9162C")]
		get
		{
			return default(PlabackState);
		}
	}

	[Token(Token = "0x170001F3")]
	public static long Duration
	{
		[Token(Token = "0x6001660")]
		[Address(RVA = "0xB91724", Offset = "0xB91724", VA = "0xB91724")]
		get
		{
			return default(long);
		}
	}

	[Token(Token = "0x170001F4")]
	public static StereoMode VideoStereoMode
	{
		[Token(Token = "0x6001661")]
		[Address(RVA = "0xB9181C", Offset = "0xB9181C", VA = "0xB9181C")]
		get
		{
			return default(StereoMode);
		}
	}

	[Token(Token = "0x170001F5")]
	public static int VideoWidth
	{
		[Token(Token = "0x6001662")]
		[Address(RVA = "0xB91914", Offset = "0xB91914", VA = "0xB91914")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x170001F6")]
	public static int VideoHeight
	{
		[Token(Token = "0x6001663")]
		[Address(RVA = "0xB91A0C", Offset = "0xB91A0C", VA = "0xB91A0C")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x170001F7")]
	public static long PlaybackPosition
	{
		[Token(Token = "0x6001664")]
		[Address(RVA = "0xB91B04", Offset = "0xB91B04", VA = "0xB91B04")]
		get
		{
			return default(long);
		}
		[Token(Token = "0x6001665")]
		[Address(RVA = "0xB91BFC", Offset = "0xB91BFC", VA = "0xB91BFC")]
		set
		{
		}
	}

	[Token(Token = "0x6001666")]
	[Address(RVA = "0xB91D4C", Offset = "0xB91D4C", VA = "0xB91D4C")]
	public static void PlayVideo(string path, string drmLicenseUrl, IntPtr surfaceObj)
	{
	}

	[Token(Token = "0x6001667")]
	[Address(RVA = "0xB91F48", Offset = "0xB91F48", VA = "0xB91F48")]
	public static void Stop()
	{
	}

	[Token(Token = "0x6001668")]
	[Address(RVA = "0xB92040", Offset = "0xB92040", VA = "0xB92040")]
	public static void Play()
	{
	}

	[Token(Token = "0x6001669")]
	[Address(RVA = "0xB92138", Offset = "0xB92138", VA = "0xB92138")]
	public static void Pause()
	{
	}

	[Token(Token = "0x600166A")]
	[Address(RVA = "0xB92230", Offset = "0xB92230", VA = "0xB92230")]
	public static void SetPlaybackSpeed(float speed)
	{
	}

	[Token(Token = "0x600166B")]
	[Address(RVA = "0xB92388", Offset = "0xB92388", VA = "0xB92388")]
	public static void SetLooping(bool looping)
	{
	}

	[Token(Token = "0x600166C")]
	[Address(RVA = "0xB924DC", Offset = "0xB924DC", VA = "0xB924DC")]
	public static void SetListenerRotation(Quaternion rotation)
	{
	}
}
[Token(Token = "0x2000450")]
public class ButtonDownListener : MonoBehaviour, IPointerDownHandler, IEventSystemHandler
{
	[Token(Token = "0x1400009B")]
	public event Action onButtonDown
	{
		[Token(Token = "0x600166E")]
		[Address(RVA = "0xB92710", Offset = "0xB92710", VA = "0xB92710")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x600166F")]
		[Address(RVA = "0xB927AC", Offset = "0xB927AC", VA = "0xB927AC")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x6001670")]
	[Address(RVA = "0xB92848", Offset = "0xB92848", VA = "0xB92848", Slot = "4")]
	public void OnPointerDown(PointerEventData eventData)
	{
	}

	[Token(Token = "0x6001671")]
	[Address(RVA = "0xB92864", Offset = "0xB92864", VA = "0xB92864")]
	public ButtonDownListener()
	{
	}
}
[Token(Token = "0x2000451")]
public class MediaPlayerImage : Image
{
	[Token(Token = "0x2000452")]
	public enum ButtonType
	{
		[Token(Token = "0x40015A5")]
		Play,
		[Token(Token = "0x40015A6")]
		Pause,
		[Token(Token = "0x40015A7")]
		FastForward,
		[Token(Token = "0x40015A8")]
		Rewind,
		[Token(Token = "0x40015A9")]
		SkipForward,
		[Token(Token = "0x40015AA")]
		SkipBack,
		[Token(Token = "0x40015AB")]
		Stop
	}

	[Token(Token = "0x40015A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	[SerializeField]
	private ButtonType m_ButtonType;

	[Token(Token = "0x170001F8")]
	public ButtonType buttonType
	{
		[Token(Token = "0x6001672")]
		[Address(RVA = "0xB9286C", Offset = "0xB9286C", VA = "0xB9286C")]
		get
		{
			return default(ButtonType);
		}
		[Token(Token = "0x6001673")]
		[Address(RVA = "0xB92874", Offset = "0xB92874", VA = "0xB92874")]
		set
		{
		}
	}

	[Token(Token = "0x6001674")]
	[Address(RVA = "0xB92898", Offset = "0xB92898", VA = "0xB92898", Slot = "44")]
	protected override void OnPopulateMesh(VertexHelper toFill)
	{
	}

	[Token(Token = "0x6001675")]
	[Address(RVA = "0xB936EC", Offset = "0xB936EC", VA = "0xB936EC")]
	public MediaPlayerImage()
	{
	}
}
[Token(Token = "0x2000453")]
public class MoviePlayerSample : MonoBehaviour
{
	[Token(Token = "0x2000454")]
	public enum VideoShape
	{
		[Token(Token = "0x40015C0")]
		_360,
		[Token(Token = "0x40015C1")]
		_180,
		[Token(Token = "0x40015C2")]
		Quad
	}

	[Token(Token = "0x2000455")]
	public enum VideoStereo
	{
		[Token(Token = "0x40015C4")]
		Mono,
		[Token(Token = "0x40015C5")]
		TopBottom,
		[Token(Token = "0x40015C6")]
		LeftRight,
		[Token(Token = "0x40015C7")]
		BottomTop
	}

	[Token(Token = "0x2000456")]
	[CompilerGenerated]
	private sealed class <Start>d__33 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40015C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40015C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40015CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MoviePlayerSample <>4__this;

		[Token(Token = "0x170001FC")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600168C")]
			[Address(RVA = "0xB94B74", Offset = "0xB94B74", VA = "0xB94B74", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001FD")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600168E")]
			[Address(RVA = "0xB94BBC", Offset = "0xB94BBC", VA = "0xB94BBC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001689")]
		[Address(RVA = "0xB93D90", Offset = "0xB93D90", VA = "0xB93D90")]
		[DebuggerHidden]
		public <Start>d__33(int <>1__state)
		{
		}

		[Token(Token = "0x600168A")]
		[Address(RVA = "0xB949D4", Offset = "0xB949D4", VA = "0xB949D4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600168B")]
		[Address(RVA = "0xB949D8", Offset = "0xB949D8", VA = "0xB949D8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600168D")]
		[Address(RVA = "0xB94B7C", Offset = "0xB94B7C", VA = "0xB94B7C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40015AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool videoPausedBeforeAppPause;

	[Token(Token = "0x40015AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private VideoPlayer videoPlayer;

	[Token(Token = "0x40015AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private OVROverlay overlay;

	[Token(Token = "0x40015AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Renderer mediaRenderer;

	[Token(Token = "0x40015B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private RenderTexture copyTexture;

	[Token(Token = "0x40015B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Material externalTex2DMaterial;

	[Token(Token = "0x40015B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public string MovieName;

	[Token(Token = "0x40015B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public string DrmLicenseUrl;

	[Token(Token = "0x40015B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public bool LoopVideo;

	[Token(Token = "0x40015B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public VideoShape Shape;

	[Token(Token = "0x40015B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public VideoStereo Stereo;

	[Token(Token = "0x40015BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public bool AutoDetectStereoLayout;

	[Token(Token = "0x40015BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7D")]
	public bool DisplayMono;

	[Token(Token = "0x40015BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private VideoShape _LastShape;

	[Token(Token = "0x40015BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private VideoStereo _LastStereo;

	[Token(Token = "0x40015BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private bool _LastDisplayMono;

	[Token(Token = "0x170001F9")]
	public bool IsPlaying
	{
		[Token(Token = "0x6001676")]
		[Address(RVA = "0xB93744", Offset = "0xB93744", VA = "0xB93744")]
		[CompilerGenerated]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6001677")]
		[Address(RVA = "0xB9374C", Offset = "0xB9374C", VA = "0xB9374C")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x170001FA")]
	public long Duration
	{
		[Token(Token = "0x6001678")]
		[Address(RVA = "0xB93758", Offset = "0xB93758", VA = "0xB93758")]
		[CompilerGenerated]
		get
		{
			return default(long);
		}
		[Token(Token = "0x6001679")]
		[Address(RVA = "0xB93760", Offset = "0xB93760", VA = "0xB93760")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x170001FB")]
	public long PlaybackPosition
	{
		[Token(Token = "0x600167A")]
		[Address(RVA = "0xB93768", Offset = "0xB93768", VA = "0xB93768")]
		[CompilerGenerated]
		get
		{
			return default(long);
		}
		[Token(Token = "0x600167B")]
		[Address(RVA = "0xB93770", Offset = "0xB93770", VA = "0xB93770")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x600167C")]
	[Address(RVA = "0xB93778", Offset = "0xB93778", VA = "0xB93778")]
	private void Awake()
	{
	}

	[Token(Token = "0x600167D")]
	[Address(RVA = "0xB939C8", Offset = "0xB939C8", VA = "0xB939C8")]
	private bool IsLocalVideo(string movieName)
	{
		return default(bool);
	}

	[Token(Token = "0x600167E")]
	[Address(RVA = "0xB93A28", Offset = "0xB93A28", VA = "0xB93A28")]
	private void UpdateShapeAndStereo()
	{
	}

	[Token(Token = "0x600167F")]
	[Address(RVA = "0xB93D28", Offset = "0xB93D28", VA = "0xB93D28")]
	[IteratorStateMachine(typeof(<Start>d__33))]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x6001680")]
	[Address(RVA = "0xB93DB8", Offset = "0xB93DB8", VA = "0xB93DB8")]
	public void Play(string moviePath, string drmLicencesUrl)
	{
	}

	[Token(Token = "0x6001681")]
	[Address(RVA = "0xB94048", Offset = "0xB94048", VA = "0xB94048")]
	public void Play()
	{
	}

	[Token(Token = "0x6001682")]
	[Address(RVA = "0xB940CC", Offset = "0xB940CC", VA = "0xB940CC")]
	public void Pause()
	{
	}

	[Token(Token = "0x6001683")]
	[Address(RVA = "0xB9414C", Offset = "0xB9414C", VA = "0xB9414C")]
	public void SeekTo(long position)
	{
	}

	[Token(Token = "0x6001684")]
	[Address(RVA = "0xB94238", Offset = "0xB94238", VA = "0xB94238")]
	private void Update()
	{
	}

	[Token(Token = "0x6001685")]
	[Address(RVA = "0xB947C8", Offset = "0xB947C8", VA = "0xB947C8")]
	public void SetPlaybackSpeed(float speed)
	{
	}

	[Token(Token = "0x6001686")]
	[Address(RVA = "0xB94864", Offset = "0xB94864", VA = "0xB94864")]
	public void Stop()
	{
	}

	[Token(Token = "0x6001687")]
	[Address(RVA = "0xB948E4", Offset = "0xB948E4", VA = "0xB948E4")]
	private void OnApplicationPause(bool appWasPaused)
	{
	}

	[Token(Token = "0x6001688")]
	[Address(RVA = "0xB949C4", Offset = "0xB949C4", VA = "0xB949C4")]
	public MoviePlayerSample()
	{
	}
}
[Token(Token = "0x2000458")]
public class MoviePlayerSampleControls : MonoBehaviour
{
	[Token(Token = "0x2000459")]
	private enum PlaybackState
	{
		[Token(Token = "0x40015E4")]
		Playing,
		[Token(Token = "0x40015E5")]
		Paused,
		[Token(Token = "0x40015E6")]
		Rewinding,
		[Token(Token = "0x40015E7")]
		FastForwarding
	}

	[Token(Token = "0x40015CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public MoviePlayerSample Player;

	[Token(Token = "0x40015CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public OVRInputModule InputModule;

	[Token(Token = "0x40015D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OVRGazePointer GazePointer;

	[Token(Token = "0x40015D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject LeftHand;

	[Token(Token = "0x40015D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject RightHand;

	[Token(Token = "0x40015D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Canvas Canvas;

	[Token(Token = "0x40015D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public ButtonDownListener PlayPause;

	[Token(Token = "0x40015D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public MediaPlayerImage PlayPauseImage;

	[Token(Token = "0x40015D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Slider ProgressBar;

	[Token(Token = "0x40015D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public ButtonDownListener FastForward;

	[Token(Token = "0x40015D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public MediaPlayerImage FastForwardImage;

	[Token(Token = "0x40015D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public ButtonDownListener Rewind;

	[Token(Token = "0x40015DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public MediaPlayerImage RewindImage;

	[Token(Token = "0x40015DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public float TimeoutTime;

	[Token(Token = "0x40015DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private bool _isVisible;

	[Token(Token = "0x40015DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private float _lastButtonTime;

	[Token(Token = "0x40015DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private bool _didSeek;

	[Token(Token = "0x40015DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private long _seekPreviousPosition;

	[Token(Token = "0x40015E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private long _rewindStartPosition;

	[Token(Token = "0x40015E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private float _rewindStartTime;

	[Token(Token = "0x40015E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	private PlaybackState _state;

	[Token(Token = "0x6001691")]
	[Address(RVA = "0xB94C98", Offset = "0xB94C98", VA = "0xB94C98")]
	private void Start()
	{
	}

	[Token(Token = "0x6001692")]
	[Address(RVA = "0xB94FC4", Offset = "0xB94FC4", VA = "0xB94FC4")]
	private void OnPlayPauseClicked()
	{
	}

	[Token(Token = "0x6001693")]
	[Address(RVA = "0xB95194", Offset = "0xB95194", VA = "0xB95194")]
	private void OnFastForwardClicked()
	{
	}

	[Token(Token = "0x6001694")]
	[Address(RVA = "0xB952B8", Offset = "0xB952B8", VA = "0xB952B8")]
	private void OnRewindClicked()
	{
	}

	[Token(Token = "0x6001695")]
	[Address(RVA = "0xB953B4", Offset = "0xB953B4", VA = "0xB953B4")]
	private void OnSeekBarMoved(float value)
	{
	}

	[Token(Token = "0x6001696")]
	[Address(RVA = "0xB9528C", Offset = "0xB9528C", VA = "0xB9528C")]
	private void Seek(long pos)
	{
	}

	[Token(Token = "0x6001697")]
	[Address(RVA = "0xB95414", Offset = "0xB95414", VA = "0xB95414")]
	private void Update()
	{
	}

	[Token(Token = "0x6001698")]
	[Address(RVA = "0xB94EC4", Offset = "0xB94EC4", VA = "0xB94EC4")]
	private void SetVisible(bool visible)
	{
	}

	[Token(Token = "0x6001699")]
	[Address(RVA = "0xB95720", Offset = "0xB95720", VA = "0xB95720")]
	public MoviePlayerSampleControls()
	{
	}
}
[Token(Token = "0x200045A")]
public static class VectorUtil
{
	[Token(Token = "0x600169A")]
	[Address(RVA = "0xB94750", Offset = "0xB94750", VA = "0xB94750")]
	public static Vector4 ToVector(this Rect rect)
	{
		return default(Vector4);
	}
}
[Token(Token = "0x200045B")]
public class AppDeeplinkUI : MonoBehaviour
{
	[Token(Token = "0x40015E8")]
	private const ulong UNITY_COMPANION_APP_ID = 3535750239844224uL;

	[Token(Token = "0x40015E9")]
	private const ulong UNREAL_COMPANION_APP_ID = 4055411724486843uL;

	[Token(Token = "0x40015EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private RectTransform deeplinkAppId;

	[Token(Token = "0x40015EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private RectTransform deeplinkMessage;

	[Token(Token = "0x40015EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private RectTransform uiLaunchType;

	[Token(Token = "0x40015ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private RectTransform uiLaunchSource;

	[Token(Token = "0x40015EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private RectTransform uiDeepLinkMessage;

	[Token(Token = "0x40015EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool inMenu;

	[Token(Token = "0x600169B")]
	[Address(RVA = "0xB95730", Offset = "0xB95730", VA = "0xB95730")]
	private void Start()
	{
	}

	[Token(Token = "0x600169C")]
	[Address(RVA = "0xB95CEC", Offset = "0xB95CEC", VA = "0xB95CEC")]
	private void Update()
	{
	}

	[Token(Token = "0x600169D")]
	[Address(RVA = "0xB95F40", Offset = "0xB95F40", VA = "0xB95F40")]
	private void LaunchUnrealDeeplinkSample()
	{
	}

	[Token(Token = "0x600169E")]
	[Address(RVA = "0xB960A4", Offset = "0xB960A4", VA = "0xB960A4")]
	private void LaunchSelf()
	{
	}

	[Token(Token = "0x600169F")]
	[Address(RVA = "0xB9620C", Offset = "0xB9620C", VA = "0xB9620C")]
	private void LaunchOtherApp()
	{
	}

	[Token(Token = "0x60016A0")]
	[Address(RVA = "0xB96390", Offset = "0xB96390", VA = "0xB96390")]
	public AppDeeplinkUI()
	{
	}
}
[Token(Token = "0x200045C")]
public class CustomDebugUI : MonoBehaviour
{
	[Token(Token = "0x40015F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private RectTransform textPrefab;

	[Token(Token = "0x40015F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static CustomDebugUI instance;

	[Token(Token = "0x40015F2")]
	private const BindingFlags privateFlags = BindingFlags.Instance | BindingFlags.NonPublic;

	[Token(Token = "0x60016A1")]
	[Address(RVA = "0xB963A0", Offset = "0xB963A0", VA = "0xB963A0")]
	private void Awake()
	{
	}

	[Token(Token = "0x60016A2")]
	[Address(RVA = "0xB963EC", Offset = "0xB963EC", VA = "0xB963EC")]
	private void Start()
	{
	}

	[Token(Token = "0x60016A3")]
	[Address(RVA = "0xB963F0", Offset = "0xB963F0", VA = "0xB963F0")]
	private void Update()
	{
	}

	[Token(Token = "0x60016A4")]
	[Address(RVA = "0xB95AAC", Offset = "0xB95AAC", VA = "0xB95AAC")]
	public RectTransform AddTextField(string label, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x60016A5")]
	[Address(RVA = "0xB963F4", Offset = "0xB963F4", VA = "0xB963F4")]
	public void RemoveFromCanvas(RectTransform element, int targetCanvas = 0)
	{
	}

	[Token(Token = "0x60016A6")]
	[Address(RVA = "0xB96610", Offset = "0xB96610", VA = "0xB96610")]
	public CustomDebugUI()
	{
	}
}
[Token(Token = "0x200045D")]
public class DebugUISample : MonoBehaviour
{
	[Token(Token = "0x40015F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool inMenu;

	[Token(Token = "0x40015F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Text sliderText;

	[Token(Token = "0x60016A7")]
	[Address(RVA = "0xB96618", Offset = "0xB96618", VA = "0xB96618")]
	private void Start()
	{
	}

	[Token(Token = "0x60016A8")]
	[Address(RVA = "0xB96B10", Offset = "0xB96B10", VA = "0xB96B10")]
	public void TogglePressed(Toggle t)
	{
	}

	[Token(Token = "0x60016A9")]
	[Address(RVA = "0xB96BBC", Offset = "0xB96BBC", VA = "0xB96BBC")]
	public void RadioPressed(string radioLabel, string group, Toggle t)
	{
	}

	[Token(Token = "0x60016AA")]
	[Address(RVA = "0xB96DD4", Offset = "0xB96DD4", VA = "0xB96DD4")]
	public void SliderPressed(float f)
	{
	}

	[Token(Token = "0x60016AB")]
	[Address(RVA = "0xB96EA8", Offset = "0xB96EA8", VA = "0xB96EA8")]
	private void Update()
	{
	}

	[Token(Token = "0x60016AC")]
	[Address(RVA = "0xB96F78", Offset = "0xB96F78", VA = "0xB96F78")]
	private void LogButtonPressed()
	{
	}

	[Token(Token = "0x60016AD")]
	[Address(RVA = "0xB96FE0", Offset = "0xB96FE0", VA = "0xB96FE0")]
	public DebugUISample()
	{
	}
}
[Token(Token = "0x200045E")]
public class AnalyticsUI : MonoBehaviour
{
	[Token(Token = "0x60016B2")]
	[Address(RVA = "0xB98188", Offset = "0xB98188", VA = "0xB98188")]
	public AnalyticsUI()
	{
	}
}
[Token(Token = "0x200045F")]
public class SampleUI : MonoBehaviour
{
	[Token(Token = "0x40015F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private RectTransform collectionButton;

	[Token(Token = "0x40015F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private RectTransform inputText;

	[Token(Token = "0x40015F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private RectTransform valueText;

	[Token(Token = "0x40015F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool inMenu;

	[Token(Token = "0x60016B3")]
	[Address(RVA = "0xB98190", Offset = "0xB98190", VA = "0xB98190")]
	private void Start()
	{
	}

	[Token(Token = "0x60016B4")]
	[Address(RVA = "0xB98228", Offset = "0xB98228", VA = "0xB98228")]
	private void Update()
	{
	}

	[Token(Token = "0x60016B5")]
	[Address(RVA = "0xB98300", Offset = "0xB98300", VA = "0xB98300")]
	private string GetText()
	{
		return null;
	}

	[Token(Token = "0x60016B6")]
	[Address(RVA = "0xB9835C", Offset = "0xB9835C", VA = "0xB9835C")]
	public SampleUI()
	{
	}
}
[Token(Token = "0x2000460")]
public class StartCrashlytics : MonoBehaviour
{
	[Token(Token = "0x60016B7")]
	[Address(RVA = "0xB98364", Offset = "0xB98364", VA = "0xB98364")]
	public StartCrashlytics()
	{
	}
}
[Token(Token = "0x2000461")]
public class HandsActiveChecker : MonoBehaviour
{
	[Token(Token = "0x2000462")]
	[CompilerGenerated]
	private sealed class <GetCenterEye>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40015FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40015FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40015FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public HandsActiveChecker <>4__this;

		[Token(Token = "0x170001FE")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60016BF")]
			[Address(RVA = "0xB98730", Offset = "0xB98730", VA = "0xB98730", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001FF")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60016C1")]
			[Address(RVA = "0xB98778", Offset = "0xB98778", VA = "0xB98778", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60016BC")]
		[Address(RVA = "0xB985F8", Offset = "0xB985F8", VA = "0xB985F8")]
		[DebuggerHidden]
		public <GetCenterEye>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x60016BD")]
		[Address(RVA = "0xB98628", Offset = "0xB98628", VA = "0xB98628", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60016BE")]
		[Address(RVA = "0xB9862C", Offset = "0xB9862C", VA = "0xB9862C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60016C0")]
		[Address(RVA = "0xB98738", Offset = "0xB98738", VA = "0xB98738", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40015F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject _notificationPrefab;

	[Token(Token = "0x40015FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private GameObject _notification;

	[Token(Token = "0x40015FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private OVRCameraRig _cameraRig;

	[Token(Token = "0x40015FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Transform _centerEye;

	[Token(Token = "0x60016B8")]
	[Address(RVA = "0xB9836C", Offset = "0xB9836C", VA = "0xB9836C")]
	private void Awake()
	{
	}

	[Token(Token = "0x60016B9")]
	[Address(RVA = "0xB98460", Offset = "0xB98460", VA = "0xB98460")]
	private void Update()
	{
	}

	[Token(Token = "0x60016BA")]
	[Address(RVA = "0xB983F8", Offset = "0xB983F8", VA = "0xB983F8")]
	[IteratorStateMachine(typeof(<GetCenterEye>d__6))]
	private IEnumerator GetCenterEye()
	{
		return null;
	}

	[Token(Token = "0x60016BB")]
	[Address(RVA = "0xB98620", Offset = "0xB98620", VA = "0xB98620")]
	public HandsActiveChecker()
	{
	}
}
[Token(Token = "0x2000463")]
[ExecuteInEditMode]
public class CharacterCapsule : MonoBehaviour
{
	[Token(Token = "0x4001600")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private CharacterController _character;

	[Token(Token = "0x4001601")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private MeshFilter _meshFilter;

	[Token(Token = "0x4001602")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float _height;

	[Token(Token = "0x4001603")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float _radius;

	[Token(Token = "0x4001604")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[Range(4f, 32f)]
	public int SubdivisionsU;

	[Token(Token = "0x4001605")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[Range(4f, 32f)]
	public int SubdivisionsV;

	[Token(Token = "0x4001606")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int _subdivisionU;

	[Token(Token = "0x4001607")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private int _subdivisionV;

	[Token(Token = "0x4001608")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Vector3[] _vertices;

	[Token(Token = "0x4001609")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private int[] _triangles;

	[Token(Token = "0x60016C2")]
	[Address(RVA = "0xB98780", Offset = "0xB98780", VA = "0xB98780")]
	private void Update()
	{
	}

	[Token(Token = "0x60016C3")]
	[Address(RVA = "0xB9A0EC", Offset = "0xB9A0EC", VA = "0xB9A0EC")]
	public CharacterCapsule()
	{
	}
}
[Token(Token = "0x2000464")]
public class LocomotionSampleSupport : MonoBehaviour
{
	[Token(Token = "0x400160A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private LocomotionController lc;

	[Token(Token = "0x400160B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool inMenu;

	[Token(Token = "0x17000200")]
	private LocomotionTeleport TeleportController
	{
		[Token(Token = "0x60016C4")]
		[Address(RVA = "0xB9A0F4", Offset = "0xB9A0F4", VA = "0xB9A0F4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60016C5")]
	[Address(RVA = "0xB9A144", Offset = "0xB9A144", VA = "0xB9A144")]
	public void Start()
	{
	}

	[Token(Token = "0x60016C6")]
	[Address(RVA = "0xB9A570", Offset = "0xB9A570", VA = "0xB9A570")]
	public void Update()
	{
	}

	[Token(Token = "0x60016C7")]
	[Address(RVA = "0xB9A648", Offset = "0xB9A648", VA = "0xB9A648")]
	[Conditional("DEBUG_LOCOMOTION_PANEL")]
	private static void Log(string msg)
	{
	}

	[Token(Token = "0x60016C8")]
	public static TActivate ActivateCategory<TCategory, TActivate>(GameObject target) where TCategory : MonoBehaviour where TActivate : MonoBehaviour
	{
		return null;
	}

	[Token(Token = "0x60016C9")]
	protected void ActivateHandlers<TInput, TAim, TTarget, TOrientation, TTransition>() where TInput : TeleportInputHandler where TAim : TeleportAimHandler where TTarget : TeleportTargetHandler where TOrientation : TeleportOrientationHandler where TTransition : TeleportTransition
	{
	}

	[Token(Token = "0x60016CA")]
	protected void ActivateInput<TActivate>() where TActivate : TeleportInputHandler
	{
	}

	[Token(Token = "0x60016CB")]
	protected void ActivateAim<TActivate>() where TActivate : TeleportAimHandler
	{
	}

	[Token(Token = "0x60016CC")]
	protected void ActivateTarget<TActivate>() where TActivate : TeleportTargetHandler
	{
	}

	[Token(Token = "0x60016CD")]
	protected void ActivateOrientation<TActivate>() where TActivate : TeleportOrientationHandler
	{
	}

	[Token(Token = "0x60016CE")]
	protected void ActivateTransition<TActivate>() where TActivate : TeleportTransition
	{
	}

	[Token(Token = "0x60016CF")]
	protected TActivate ActivateCategory<TCategory, TActivate>() where TCategory : MonoBehaviour where TActivate : MonoBehaviour
	{
		return null;
	}

	[Token(Token = "0x60016D0")]
	[Address(RVA = "0xB9A6A0", Offset = "0xB9A6A0", VA = "0xB9A6A0")]
	protected void UpdateToggle(Toggle toggle, bool enabled)
	{
	}

	[Token(Token = "0x60016D1")]
	[Address(RVA = "0xB9A6E0", Offset = "0xB9A6E0", VA = "0xB9A6E0")]
	private void SetupNonCap()
	{
	}

	[Token(Token = "0x60016D2")]
	[Address(RVA = "0xB9A74C", Offset = "0xB9A74C", VA = "0xB9A74C")]
	private void SetupTeleportDefaults()
	{
	}

	[Token(Token = "0x60016D3")]
	[Address(RVA = "0xB9A898", Offset = "0xB9A898", VA = "0xB9A898")]
	protected GameObject AddInstance(GameObject template, string label)
	{
		return null;
	}

	[Token(Token = "0x60016D4")]
	[Address(RVA = "0xB9A968", Offset = "0xB9A968", VA = "0xB9A968")]
	private void SetupNodeTeleport()
	{
	}

	[Token(Token = "0x60016D5")]
	[Address(RVA = "0xB9A44C", Offset = "0xB9A44C", VA = "0xB9A44C")]
	private void SetupTwoStickTeleport()
	{
	}

	[Token(Token = "0x60016D6")]
	[Address(RVA = "0xB9AA38", Offset = "0xB9AA38", VA = "0xB9AA38")]
	private void SetupWalkOnly()
	{
	}

	[Token(Token = "0x60016D7")]
	[Address(RVA = "0xB9AA84", Offset = "0xB9AA84", VA = "0xB9AA84")]
	private void SetupLeftStrafeRightTeleport()
	{
	}

	[Token(Token = "0x60016D8")]
	[Address(RVA = "0xB9AB94", Offset = "0xB9AB94", VA = "0xB9AB94")]
	public LocomotionSampleSupport()
	{
	}
}
[Token(Token = "0x2000465")]
[RequireComponent(typeof(Canvas))]
public class OVROverlayCanvas : MonoBehaviour
{
	[Token(Token = "0x2000466")]
	public enum DrawMode
	{
		[Token(Token = "0x4001621")]
		Opaque,
		[Token(Token = "0x4001622")]
		OpaqueWithClip,
		[Token(Token = "0x4001623")]
		TransparentDefaultAlpha,
		[Token(Token = "0x4001624")]
		TransparentCorrectAlpha
	}

	[Token(Token = "0x400160C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	[HideInInspector]
	private Shader _transparentShader;

	[Token(Token = "0x400160D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	[HideInInspector]
	private Shader _opaqueShader;

	[Token(Token = "0x400160E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private RectTransform _rectTransform;

	[Token(Token = "0x400160F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Canvas _canvas;

	[Token(Token = "0x4001610")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Camera _camera;

	[Token(Token = "0x4001611")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private OVROverlay _overlay;

	[Token(Token = "0x4001612")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private RenderTexture _renderTexture;

	[Token(Token = "0x4001613")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private MeshRenderer _meshRenderer;

	[Token(Token = "0x4001614")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Mesh _quad;

	[Token(Token = "0x4001615")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Material _defaultMat;

	[Token(Token = "0x4001616")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public int MaxTextureSize;

	[Token(Token = "0x4001617")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public int MinTextureSize;

	[Token(Token = "0x4001618")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public float PixelsPerUnit;

	[Token(Token = "0x4001619")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public int DrawRate;

	[Token(Token = "0x400161A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public int DrawFrameOffset;

	[Token(Token = "0x400161B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public bool Expensive;

	[Token(Token = "0x400161C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public int Layer;

	[Token(Token = "0x400161D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public DrawMode Opacity;

	[Token(Token = "0x400161E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private bool ScaleViewport;

	[Token(Token = "0x400161F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly UnityEngine.Plane[] _FrustumPlanes;

	[Token(Token = "0x17000201")]
	public bool overlayEnabled
	{
		[Token(Token = "0x60016DF")]
		[Address(RVA = "0xB9C0F0", Offset = "0xB9C0F0", VA = "0xB9C0F0")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60016E0")]
		[Address(RVA = "0xB9C174", Offset = "0xB9C174", VA = "0xB9C174")]
		set
		{
		}
	}

	[Token(Token = "0x60016D9")]
	[Address(RVA = "0xB9AB9C", Offset = "0xB9AB9C", VA = "0xB9AB9C")]
	private void Start()
	{
	}

	[Token(Token = "0x60016DA")]
	[Address(RVA = "0xB9B778", Offset = "0xB9B778", VA = "0xB9B778")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60016DB")]
	[Address(RVA = "0xB9B7EC", Offset = "0xB9B7EC", VA = "0xB9B7EC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60016DC")]
	[Address(RVA = "0xB9B8BC", Offset = "0xB9B8BC", VA = "0xB9B8BC")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60016DD")]
	[Address(RVA = "0xB9B98C", Offset = "0xB9B98C", VA = "0xB9B98C", Slot = "4")]
	protected virtual bool ShouldRender()
	{
		return default(bool);
	}

	[Token(Token = "0x60016DE")]
	[Address(RVA = "0xB9BB90", Offset = "0xB9BB90", VA = "0xB9BB90")]
	private void Update()
	{
	}

	[Token(Token = "0x60016E1")]
	[Address(RVA = "0xB9C230", Offset = "0xB9C230", VA = "0xB9C230")]
	public OVROverlayCanvas()
	{
	}
}
[Token(Token = "0x2000467")]
public class AugmentedObject : MonoBehaviour
{
	[Token(Token = "0x4001625")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OVRInput.Controller controllerHand;

	[Token(Token = "0x4001626")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform shadow;

	[Token(Token = "0x4001627")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool groundShadow;

	[Token(Token = "0x60016E3")]
	[Address(RVA = "0xB9C2E0", Offset = "0xB9C2E0", VA = "0xB9C2E0")]
	private void Start()
	{
	}

	[Token(Token = "0x60016E4")]
	[Address(RVA = "0xB9C62C", Offset = "0xB9C62C", VA = "0xB9C62C")]
	private void Update()
	{
	}

	[Token(Token = "0x60016E5")]
	[Address(RVA = "0xB9C7C0", Offset = "0xB9C7C0", VA = "0xB9C7C0")]
	public void Grab(OVRInput.Controller grabHand)
	{
	}

	[Token(Token = "0x60016E6")]
	[Address(RVA = "0xB9C7C8", Offset = "0xB9C7C8", VA = "0xB9C7C8")]
	public void Release()
	{
	}

	[Token(Token = "0x60016E7")]
	[Address(RVA = "0xB9C7B0", Offset = "0xB9C7B0", VA = "0xB9C7B0")]
	private void ToggleShadowType()
	{
	}

	[Token(Token = "0x60016E8")]
	[Address(RVA = "0xB9C7D0", Offset = "0xB9C7D0", VA = "0xB9C7D0")]
	public AugmentedObject()
	{
	}
}
[Token(Token = "0x2000468")]
public class BrushController : MonoBehaviour
{
	[Token(Token = "0x2000469")]
	[CompilerGenerated]
	private sealed class <FadeCameraClearColor>d__8 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400162C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400162D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400162E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float fadeTime;

		[Token(Token = "0x400162F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public Color newColor;

		[Token(Token = "0x4001630")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float <timer>5__2;

		[Token(Token = "0x4001631")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Color <currentColor>5__3;

		[Token(Token = "0x17000202")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60016F3")]
			[Address(RVA = "0xB9CE84", Offset = "0xB9CE84", VA = "0xB9CE84", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000203")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60016F5")]
			[Address(RVA = "0xB9CECC", Offset = "0xB9CECC", VA = "0xB9CECC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60016F0")]
		[Address(RVA = "0xB9CD40", Offset = "0xB9CD40", VA = "0xB9CD40")]
		[DebuggerHidden]
		public <FadeCameraClearColor>d__8(int <>1__state)
		{
		}

		[Token(Token = "0x60016F1")]
		[Address(RVA = "0xB9CD98", Offset = "0xB9CD98", VA = "0xB9CD98", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60016F2")]
		[Address(RVA = "0xB9CD9C", Offset = "0xB9CD9C", VA = "0xB9CD9C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60016F4")]
		[Address(RVA = "0xB9CE8C", Offset = "0xB9CE8C", VA = "0xB9CE8C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200046A")]
	[CompilerGenerated]
	private sealed class <FadeSphere>d__9 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001632")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001633")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001634")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public BrushController <>4__this;

		[Token(Token = "0x4001635")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float fadeTime;

		[Token(Token = "0x4001636")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public Color newColor;

		[Token(Token = "0x4001637")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public bool disableOnFinish;

		[Token(Token = "0x4001638")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float <timer>5__2;

		[Token(Token = "0x4001639")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private Color <currentColor>5__3;

		[Token(Token = "0x17000204")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60016F9")]
			[Address(RVA = "0xB9D044", Offset = "0xB9D044", VA = "0xB9D044", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000205")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60016FB")]
			[Address(RVA = "0xB9D08C", Offset = "0xB9D08C", VA = "0xB9D08C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60016F6")]
		[Address(RVA = "0xB9CD68", Offset = "0xB9CD68", VA = "0xB9CD68")]
		[DebuggerHidden]
		public <FadeSphere>d__9(int <>1__state)
		{
		}

		[Token(Token = "0x60016F7")]
		[Address(RVA = "0xB9CED4", Offset = "0xB9CED4", VA = "0xB9CED4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60016F8")]
		[Address(RVA = "0xB9CED8", Offset = "0xB9CED8", VA = "0xB9CED8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60016FA")]
		[Address(RVA = "0xB9D04C", Offset = "0xB9D04C", VA = "0xB9D04C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4001628")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public PassthroughBrush brush;

	[Token(Token = "0x4001629")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public MeshRenderer backgroundSphere;

	[Token(Token = "0x400162A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private IEnumerator grabRoutine;

	[Token(Token = "0x400162B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private IEnumerator releaseRoutine;

	[Token(Token = "0x60016E9")]
	[Address(RVA = "0xB9C7D8", Offset = "0xB9C7D8", VA = "0xB9C7D8")]
	private void Start()
	{
	}

	[Token(Token = "0x60016EA")]
	[Address(RVA = "0xB9CA78", Offset = "0xB9CA78", VA = "0xB9CA78")]
	private void Update()
	{
	}

	[Token(Token = "0x60016EB")]
	[Address(RVA = "0xB9CAC8", Offset = "0xB9CAC8", VA = "0xB9CAC8")]
	public void Grab(OVRInput.Controller grabHand)
	{
	}

	[Token(Token = "0x60016EC")]
	[Address(RVA = "0xB9CC1C", Offset = "0xB9CC1C", VA = "0xB9CC1C")]
	public void Release()
	{
	}

	[Token(Token = "0x60016ED")]
	[Address(RVA = "0xB9CCA8", Offset = "0xB9CCA8", VA = "0xB9CCA8")]
	[IteratorStateMachine(typeof(<FadeCameraClearColor>d__8))]
	private IEnumerator FadeCameraClearColor(Color newColor, float fadeTime)
	{
		return null;
	}

	[Token(Token = "0x60016EE")]
	[Address(RVA = "0xB9CB68", Offset = "0xB9CB68", VA = "0xB9CB68")]
	[IteratorStateMachine(typeof(<FadeSphere>d__9))]
	private IEnumerator FadeSphere(Color newColor, float fadeTime, bool disableOnFinish = false)
	{
		return null;
	}

	[Token(Token = "0x60016EF")]
	[Address(RVA = "0xB9CD90", Offset = "0xB9CD90", VA = "0xB9CD90")]
	public BrushController()
	{
	}
}
[Token(Token = "0x200046B")]
public class EnableUnpremultipliedAlpha : MonoBehaviour
{
	[Token(Token = "0x60016FC")]
	[Address(RVA = "0xB9D094", Offset = "0xB9D094", VA = "0xB9D094")]
	private void Start()
	{
	}

	[Token(Token = "0x60016FD")]
	[Address(RVA = "0xB9D0E8", Offset = "0xB9D0E8", VA = "0xB9D0E8")]
	public EnableUnpremultipliedAlpha()
	{
	}
}
[Token(Token = "0x200046C")]
public class Flashlight : MonoBehaviour
{
	[Token(Token = "0x400163A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject lightVolume;

	[Token(Token = "0x400163B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Light spotlight;

	[Token(Token = "0x400163C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject bulbGlow;

	[Token(Token = "0x60016FE")]
	[Address(RVA = "0xB9D0F0", Offset = "0xB9D0F0", VA = "0xB9D0F0")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x60016FF")]
	[Address(RVA = "0xB9D2C4", Offset = "0xB9D2C4", VA = "0xB9D2C4")]
	public void ToggleFlashlight()
	{
	}

	[Token(Token = "0x6001700")]
	[Address(RVA = "0xB9D354", Offset = "0xB9D354", VA = "0xB9D354")]
	public void EnableFlashlight(bool doEnable)
	{
	}

	[Token(Token = "0x6001701")]
	[Address(RVA = "0xB9D3B0", Offset = "0xB9D3B0", VA = "0xB9D3B0")]
	public Flashlight()
	{
	}
}
[Token(Token = "0x200046D")]
public class FlashlightController : MonoBehaviour
{
	[Token(Token = "0x200046E")]
	[CompilerGenerated]
	private sealed class <FadeLighting>d__17 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001647")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001648")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001649")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public FlashlightController <>4__this;

		[Token(Token = "0x400164A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float fadeTime;

		[Token(Token = "0x400164B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public Color newColor;

		[Token(Token = "0x400164C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float sceneLightIntensity;

		[Token(Token = "0x400164D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float <timer>5__2;

		[Token(Token = "0x400164E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private Color <currentColor>5__3;

		[Token(Token = "0x400164F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private float <currentLight>5__4;

		[Token(Token = "0x17000206")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600170E")]
			[Address(RVA = "0xB9E4F4", Offset = "0xB9E4F4", VA = "0xB9E4F4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000207")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001710")]
			[Address(RVA = "0xB9E53C", Offset = "0xB9E53C", VA = "0xB9E53C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600170B")]
		[Address(RVA = "0xB9E268", Offset = "0xB9E268", VA = "0xB9E268")]
		[DebuggerHidden]
		public <FadeLighting>d__17(int <>1__state)
		{
		}

		[Token(Token = "0x600170C")]
		[Address(RVA = "0xB9E330", Offset = "0xB9E330", VA = "0xB9E330", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600170D")]
		[Address(RVA = "0xB9E334", Offset = "0xB9E334", VA = "0xB9E334", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600170F")]
		[Address(RVA = "0xB9E4FC", Offset = "0xB9E4FC", VA = "0xB9E4FC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400163D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Light sceneLight;

	[Token(Token = "0x400163E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform flashlightRoot;

	[Token(Token = "0x400163F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Vector3 localPosition;

	[Token(Token = "0x4001640")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private Quaternion localRotation;

	[Token(Token = "0x4001641")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public TextMesh infoText;

	[Token(Token = "0x4001642")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private GrabObject externalController;

	[Token(Token = "0x4001643")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private OVRSkeleton[] skeletons;

	[Token(Token = "0x4001644")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private OVRHand[] hands;

	[Token(Token = "0x4001645")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private int handIndex;

	[Token(Token = "0x4001646")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private bool pinching;

	[Token(Token = "0x6001702")]
	[Address(RVA = "0xB9D3B8", Offset = "0xB9D3B8", VA = "0xB9D3B8")]
	private void Start()
	{
	}

	[Token(Token = "0x6001703")]
	[Address(RVA = "0xB9D654", Offset = "0xB9D654", VA = "0xB9D654")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6001704")]
	[Address(RVA = "0xB9D940", Offset = "0xB9D940", VA = "0xB9D940")]
	private void FindHands()
	{
	}

	[Token(Token = "0x6001705")]
	[Address(RVA = "0xB9DC38", Offset = "0xB9DC38", VA = "0xB9DC38")]
	private void AlignWithHand(OVRHand hand, OVRSkeleton skeleton)
	{
	}

	[Token(Token = "0x6001706")]
	[Address(RVA = "0xB9DF10", Offset = "0xB9DF10", VA = "0xB9DF10")]
	private void AlignWithController(OVRInput.Controller controller)
	{
	}

	[Token(Token = "0x6001707")]
	[Address(RVA = "0xB9DFF8", Offset = "0xB9DFF8", VA = "0xB9DFF8")]
	public void Grab(OVRInput.Controller grabHand)
	{
	}

	[Token(Token = "0x6001708")]
	[Address(RVA = "0xB9E184", Offset = "0xB9E184", VA = "0xB9E184")]
	public void Release()
	{
	}

	[Token(Token = "0x6001709")]
	[Address(RVA = "0xB9E0E0", Offset = "0xB9E0E0", VA = "0xB9E0E0")]
	[IteratorStateMachine(typeof(<FadeLighting>d__17))]
	private IEnumerator FadeLighting(Color newColor, float sceneLightIntensity, float fadeTime)
	{
		return null;
	}

	[Token(Token = "0x600170A")]
	[Address(RVA = "0xB9E290", Offset = "0xB9E290", VA = "0xB9E290")]
	public FlashlightController()
	{
	}
}
[Token(Token = "0x200046F")]
public class GrabObject : MonoBehaviour
{
	[Token(Token = "0x2000470")]
	public enum ManipulationType
	{
		[Token(Token = "0x4001659")]
		Default,
		[Token(Token = "0x400165A")]
		ForcedHand,
		[Token(Token = "0x400165B")]
		DollyHand,
		[Token(Token = "0x400165C")]
		DollyAttached,
		[Token(Token = "0x400165D")]
		HorizontalScaled,
		[Token(Token = "0x400165E")]
		VerticalScaled,
		[Token(Token = "0x400165F")]
		Menu
	}

	[Token(Token = "0x2000471")]
	public delegate void GrabbedObject(OVRInput.Controller grabHand);

	[Token(Token = "0x2000472")]
	public delegate void ReleasedObject();

	[Token(Token = "0x2000473")]
	public delegate void SetCursorPosition(Vector3 cursorPosition);

	[Token(Token = "0x4001650")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[TextArea]
	public string ObjectName;

	[Token(Token = "0x4001651")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[TextArea]
	public string ObjectInstructions;

	[Token(Token = "0x4001652")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ManipulationType objectManipulationType;

	[Token(Token = "0x4001653")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public bool showLaserWhileGrabbed;

	[Token(Token = "0x4001654")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[HideInInspector]
	public Quaternion grabbedRotation;

	[Token(Token = "0x4001655")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GrabbedObject GrabbedObjectDelegate;

	[Token(Token = "0x4001656")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public ReleasedObject ReleasedObjectDelegate;

	[Token(Token = "0x4001657")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public SetCursorPosition CursorPositionDelegate;

	[Token(Token = "0x6001711")]
	[Address(RVA = "0xB9E544", Offset = "0xB9E544", VA = "0xB9E544")]
	public void Grab(OVRInput.Controller grabHand)
	{
	}

	[Token(Token = "0x6001712")]
	[Address(RVA = "0xB9E5A4", Offset = "0xB9E5A4", VA = "0xB9E5A4")]
	public void Release()
	{
	}

	[Token(Token = "0x6001713")]
	[Address(RVA = "0xB9E5C0", Offset = "0xB9E5C0", VA = "0xB9E5C0")]
	public void CursorPos(Vector3 cursorPos)
	{
	}

	[Token(Token = "0x6001714")]
	[Address(RVA = "0xB9E5DC", Offset = "0xB9E5DC", VA = "0xB9E5DC")]
	public GrabObject()
	{
	}
}
[Token(Token = "0x2000474")]
public class HandMeshMask : MonoBehaviour
{
	[Token(Token = "0x4001660")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OVRSkeleton referenceHand;

	[Token(Token = "0x4001661")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Material maskMaterial;

	[Token(Token = "0x4001662")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[Tooltip("The segments around the tip of a finger")]
	public int radialDivisions;

	[Token(Token = "0x4001663")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[Tooltip("The fade range (finger width is 2x this)")]
	public float borderSize;

	[Token(Token = "0x4001664")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[Tooltip("Along the fingers, each knuckle scales down by this amount.  Default is zero for uniform width along entire finger.")]
	public float fingerTaper;

	[Token(Token = "0x4001665")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[Tooltip("Shorten the last bone of each finger; need this to account for bone structure (end bone is at finger tip instead of center). Default is 1.")]
	public float fingerTipLength;

	[Token(Token = "0x4001666")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[Tooltip("Move the base of the 4 main fingers towards the tips, to avoid a visible mesh crack between finger webbing. Default is 0.")]
	public float webOffset;

	[Token(Token = "0x4001667")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float handScale;

	[Token(Token = "0x4001668")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private GameObject maskMeshObject;

	[Token(Token = "0x4001669")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Mesh maskMesh;

	[Token(Token = "0x400166A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Vector3[] handVertices;

	[Token(Token = "0x400166B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Vector2[] handUVs;

	[Token(Token = "0x400166C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Color32[] handColors;

	[Token(Token = "0x400166D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private int[] handTriangles;

	[Token(Token = "0x400166E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private int vertCounter;

	[Token(Token = "0x400166F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private int triCounter;

	[Token(Token = "0x6001721")]
	[Address(RVA = "0xB9E884", Offset = "0xB9E884", VA = "0xB9E884")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001722")]
	[Address(RVA = "0xB9EAB8", Offset = "0xB9EAB8", VA = "0xB9EAB8")]
	private void Update()
	{
	}

	[Token(Token = "0x6001723")]
	[Address(RVA = "0xB9EC80", Offset = "0xB9EC80", VA = "0xB9EC80")]
	private void CreateHandMesh()
	{
	}

	[Token(Token = "0x6001724")]
	[Address(RVA = "0xB9F288", Offset = "0xB9F288", VA = "0xB9F288")]
	private void AddKnuckleMesh(int knuckleVerts, float point1scale, float point2scale, Vector3 point1, Vector3 point2)
	{
	}

	[Token(Token = "0x6001725")]
	[Address(RVA = "0xB9F820", Offset = "0xB9F820", VA = "0xB9F820")]
	private void AddPalmMesh(int knuckleVerts)
	{
	}

	[Token(Token = "0x6001726")]
	[Address(RVA = "0xBA1B28", Offset = "0xBA1B28", VA = "0xBA1B28")]
	private void AddVertex(Vector3 position, Vector2 uv, Color color)
	{
	}

	[Token(Token = "0x6001727")]
	[Address(RVA = "0xBA1E9C", Offset = "0xBA1E9C", VA = "0xBA1E9C")]
	public HandMeshMask()
	{
	}
}
[Token(Token = "0x2000475")]
public class HandMeshUI : MonoBehaviour
{
	[Token(Token = "0x4001670")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public SphereCollider[] knobs;

	[Token(Token = "0x4001671")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TextMesh[] readouts;

	[Token(Token = "0x4001672")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private int rightHeldKnob;

	[Token(Token = "0x4001673")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private int leftHeldKnob;

	[Token(Token = "0x4001674")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public OVRSkeleton leftHand;

	[Token(Token = "0x4001675")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public OVRSkeleton rightHand;

	[Token(Token = "0x4001676")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public HandMeshMask leftMask;

	[Token(Token = "0x4001677")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public HandMeshMask rightMask;

	[Token(Token = "0x6001728")]
	[Address(RVA = "0xBA1EC0", Offset = "0xBA1EC0", VA = "0xBA1EC0")]
	private void Start()
	{
	}

	[Token(Token = "0x6001729")]
	[Address(RVA = "0xBA2228", Offset = "0xBA2228", VA = "0xBA2228")]
	private void Update()
	{
	}

	[Token(Token = "0x600172A")]
	[Address(RVA = "0xBA1F5C", Offset = "0xBA1F5C", VA = "0xBA1F5C")]
	private void SetSliderValue(int sliderID, float value, bool isNormalized)
	{
	}

	[Token(Token = "0x600172B")]
	[Address(RVA = "0xBA2690", Offset = "0xBA2690", VA = "0xBA2690")]
	private void CheckForHands()
	{
	}

	[Token(Token = "0x600172C")]
	[Address(RVA = "0xBA2C00", Offset = "0xBA2C00", VA = "0xBA2C00")]
	public HandMeshUI()
	{
	}
}
[Token(Token = "0x2000476")]
public class ObjectManipulator : MonoBehaviour
{
	[Token(Token = "0x2000477")]
	[CompilerGenerated]
	private sealed class <StartDemo>d__23 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400168B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400168C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400168D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ObjectManipulator <>4__this;

		[Token(Token = "0x400168E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <timer>5__2;

		[Token(Token = "0x400168F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <fadeTime>5__3;

		[Token(Token = "0x17000208")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600173C")]
			[Address(RVA = "0xBA53EC", Offset = "0xBA53EC", VA = "0xBA53EC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000209")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600173E")]
			[Address(RVA = "0xBA5434", Offset = "0xBA5434", VA = "0xBA5434", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001739")]
		[Address(RVA = "0xBA4D38", Offset = "0xBA4D38", VA = "0xBA4D38")]
		[DebuggerHidden]
		public <StartDemo>d__23(int <>1__state)
		{
		}

		[Token(Token = "0x600173A")]
		[Address(RVA = "0xBA5120", Offset = "0xBA5120", VA = "0xBA5120", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600173B")]
		[Address(RVA = "0xBA5124", Offset = "0xBA5124", VA = "0xBA5124", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600173D")]
		[Address(RVA = "0xBA53F4", Offset = "0xBA53F4", VA = "0xBA53F4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4001678")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private OVRInput.Controller controller;

	[Token(Token = "0x4001679")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private GameObject hoverObject;

	[Token(Token = "0x400167A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private GameObject grabObject;

	[Token(Token = "0x400167B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float grabTime;

	[Token(Token = "0x400167C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private Vector3 localGrabOffset;

	[Token(Token = "0x400167D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Quaternion localGrabRotation;

	[Token(Token = "0x400167E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Vector3 camGrabPosition;

	[Token(Token = "0x400167F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private Quaternion camGrabRotation;

	[Token(Token = "0x4001680")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private Vector3 handGrabPosition;

	[Token(Token = "0x4001681")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Quaternion handGrabRotation;

	[Token(Token = "0x4001682")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private Vector3 cursorPosition;

	[Token(Token = "0x4001683")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private float rotationOffset;

	[Token(Token = "0x4001684")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public LineRenderer laser;

	[Token(Token = "0x4001685")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public Transform objectInfo;

	[Token(Token = "0x4001686")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public TextMesh objectNameLabel;

	[Token(Token = "0x4001687")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public TextMesh objectInstructionsLabel;

	[Token(Token = "0x4001688")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public Image objectInfoBG;

	[Token(Token = "0x4001689")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public GameObject demoObjects;

	[Token(Token = "0x400168A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public OVRPassthroughLayer passthrough;

	[Token(Token = "0x600172D")]
	[Address(RVA = "0xBA2C10", Offset = "0xBA2C10", VA = "0xBA2C10")]
	private void Start()
	{
	}

	[Token(Token = "0x600172E")]
	[Address(RVA = "0xBA2E00", Offset = "0xBA2E00", VA = "0xBA2E00")]
	private void Update()
	{
	}

	[Token(Token = "0x600172F")]
	[Address(RVA = "0xBA3CAC", Offset = "0xBA3CAC", VA = "0xBA3CAC")]
	private void GrabHoverObject(GameObject grbObj, Vector3 controllerPos, Quaternion controllerRot)
	{
	}

	[Token(Token = "0x6001730")]
	[Address(RVA = "0xBA4A40", Offset = "0xBA4A40", VA = "0xBA4A40")]
	private void ReleaseObject()
	{
	}

	[Token(Token = "0x6001731")]
	[Address(RVA = "0xBA2D98", Offset = "0xBA2D98", VA = "0xBA2D98")]
	[IteratorStateMachine(typeof(<StartDemo>d__23))]
	private IEnumerator StartDemo()
	{
		return null;
	}

	[Token(Token = "0x6001732")]
	[Address(RVA = "0xBA3048", Offset = "0xBA3048", VA = "0xBA3048")]
	private void FindHoverObject(Vector3 controllerPos, Quaternion controllerRot)
	{
	}

	[Token(Token = "0x6001733")]
	[Address(RVA = "0xBA3FA0", Offset = "0xBA3FA0", VA = "0xBA3FA0")]
	private void ManipulateObject(GameObject obj, Vector3 controllerPos, Quaternion controllerRot)
	{
	}

	[Token(Token = "0x6001734")]
	[Address(RVA = "0xBA4D60", Offset = "0xBA4D60", VA = "0xBA4D60")]
	private void ClampGrabOffset(ref Vector3 localOffset, float thumbY)
	{
	}

	[Token(Token = "0x6001735")]
	[Address(RVA = "0xBA4E14", Offset = "0xBA4E14", VA = "0xBA4E14")]
	private Vector3 ClampScale(Vector3 localScale, Vector2 thumb)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6001736")]
	[Address(RVA = "0xBA4E44", Offset = "0xBA4E44", VA = "0xBA4E44")]
	private void CheckForDominantHand()
	{
	}

	[Token(Token = "0x6001737")]
	[Address(RVA = "0xBA4C1C", Offset = "0xBA4C1C", VA = "0xBA4C1C")]
	private void AssignInstructions(GrabObject targetObject)
	{
	}

	[Token(Token = "0x6001738")]
	[Address(RVA = "0xBA4F34", Offset = "0xBA4F34", VA = "0xBA4F34")]
	public ObjectManipulator()
	{
	}
}
[Token(Token = "0x2000478")]
public class OverlayPassthrough : MonoBehaviour
{
	[Token(Token = "0x4001690")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private OVRPassthroughLayer passthroughLayer;

	[Token(Token = "0x600173F")]
	[Address(RVA = "0xBA543C", Offset = "0xBA543C", VA = "0xBA543C")]
	private void Start()
	{
	}

	[Token(Token = "0x6001740")]
	[Address(RVA = "0xBA559C", Offset = "0xBA559C", VA = "0xBA559C")]
	private void Update()
	{
	}

	[Token(Token = "0x6001741")]
	[Address(RVA = "0xBA5650", Offset = "0xBA5650", VA = "0xBA5650")]
	public OverlayPassthrough()
	{
	}
}
[Token(Token = "0x2000479")]
public class PassthroughBrush : MonoBehaviour
{
	[Token(Token = "0x200047A")]
	public enum BrushState
	{
		[Token(Token = "0x400169C")]
		Idle,
		[Token(Token = "0x400169D")]
		Inking
	}

	[Token(Token = "0x4001691")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OVRInput.Controller controllerHand;

	[Token(Token = "0x4001692")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject lineSegmentPrefab;

	[Token(Token = "0x4001693")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject lineContainer;

	[Token(Token = "0x4001694")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool forceActive;

	[Token(Token = "0x4001695")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private LineRenderer currentLineSegment;

	[Token(Token = "0x4001696")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private List<Vector3> inkPositions;

	[Token(Token = "0x4001697")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float minInkDist;

	[Token(Token = "0x4001698")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private float strokeWidth;

	[Token(Token = "0x4001699")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float strokeLength;

	[Token(Token = "0x400169A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private BrushState brushStatus;

	[Token(Token = "0x6001742")]
	[Address(RVA = "0xBA5658", Offset = "0xBA5658", VA = "0xBA5658")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6001743")]
	[Address(RVA = "0xBA5660", Offset = "0xBA5660", VA = "0xBA5660")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6001744")]
	[Address(RVA = "0xBA5910", Offset = "0xBA5910", VA = "0xBA5910")]
	private void StartLine(Vector3 inkPos)
	{
	}

	[Token(Token = "0x6001745")]
	[Address(RVA = "0xBA5B30", Offset = "0xBA5B30", VA = "0xBA5B30")]
	private void UpdateLine(Vector3 inkPos)
	{
	}

	[Token(Token = "0x6001746")]
	[Address(RVA = "0xBA5D70", Offset = "0xBA5D70", VA = "0xBA5D70")]
	public void ClearLines()
	{
	}

	[Token(Token = "0x6001747")]
	[Address(RVA = "0xBA5828", Offset = "0xBA5828", VA = "0xBA5828")]
	public void UndoInkLine()
	{
	}

	[Token(Token = "0x6001748")]
	[Address(RVA = "0xBA5E40", Offset = "0xBA5E40", VA = "0xBA5E40")]
	public PassthroughBrush()
	{
	}
}
[Token(Token = "0x200047B")]
public class PassthroughController : MonoBehaviour
{
	[Token(Token = "0x400169E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private OVRPassthroughLayer passthroughLayer;

	[Token(Token = "0x6001749")]
	[Address(RVA = "0xBA5ED0", Offset = "0xBA5ED0", VA = "0xBA5ED0")]
	private void Start()
	{
	}

	[Token(Token = "0x600174A")]
	[Address(RVA = "0xBA6030", Offset = "0xBA6030", VA = "0xBA6030")]
	private void Update()
	{
	}

	[Token(Token = "0x600174B")]
	[Address(RVA = "0xBA621C", Offset = "0xBA621C", VA = "0xBA621C")]
	public PassthroughController()
	{
	}
}
[Token(Token = "0x200047C")]
public class PassthroughProjectionSurface : MonoBehaviour
{
	[Token(Token = "0x400169F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private OVRPassthroughLayer passthroughLayer;

	[Token(Token = "0x40016A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public MeshFilter projectionObject;

	[Token(Token = "0x40016A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private MeshRenderer quadOutline;

	[Token(Token = "0x600174C")]
	[Address(RVA = "0xBA6224", Offset = "0xBA6224", VA = "0xBA6224")]
	private void Start()
	{
	}

	[Token(Token = "0x600174D")]
	[Address(RVA = "0xBA63EC", Offset = "0xBA63EC", VA = "0xBA63EC")]
	private void Update()
	{
	}

	[Token(Token = "0x600174E")]
	[Address(RVA = "0xBA658C", Offset = "0xBA658C", VA = "0xBA658C")]
	public PassthroughProjectionSurface()
	{
	}
}
[Token(Token = "0x200047D")]
public class PassthroughStyler : MonoBehaviour
{
	[Token(Token = "0x200047E")]
	[CompilerGenerated]
	private sealed class <FadeToCurrentStyle>d__19 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40016B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40016B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40016B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PassthroughStyler <>4__this;

		[Token(Token = "0x40016B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float fadeTime;

		[Token(Token = "0x40016B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <timer>5__2;

		[Token(Token = "0x40016B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float <brightness>5__3;

		[Token(Token = "0x40016B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float <contrast>5__4;

		[Token(Token = "0x40016B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float <posterize>5__5;

		[Token(Token = "0x40016B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private Color <edgeCol>5__6;

		[Token(Token = "0x1700020A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001761")]
			[Address(RVA = "0xBA7198", Offset = "0xBA7198", VA = "0xBA7198", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700020B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001763")]
			[Address(RVA = "0xBA71E0", Offset = "0xBA71E0", VA = "0xBA71E0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600175E")]
		[Address(RVA = "0xBA6ECC", Offset = "0xBA6ECC", VA = "0xBA6ECC")]
		[DebuggerHidden]
		public <FadeToCurrentStyle>d__19(int <>1__state)
		{
		}

		[Token(Token = "0x600175F")]
		[Address(RVA = "0xBA7030", Offset = "0xBA7030", VA = "0xBA7030", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001760")]
		[Address(RVA = "0xBA7034", Offset = "0xBA7034", VA = "0xBA7034", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001762")]
		[Address(RVA = "0xBA71A0", Offset = "0xBA71A0", VA = "0xBA71A0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200047F")]
	[CompilerGenerated]
	private sealed class <FadeToDefaultPassthrough>d__20 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40016BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40016BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40016BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PassthroughStyler <>4__this;

		[Token(Token = "0x40016BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float fadeTime;

		[Token(Token = "0x40016BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <timer>5__2;

		[Token(Token = "0x40016BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float <brightness>5__3;

		[Token(Token = "0x40016C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float <contrast>5__4;

		[Token(Token = "0x40016C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float <posterize>5__5;

		[Token(Token = "0x40016C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private Color <edgeCol>5__6;

		[Token(Token = "0x1700020C")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001767")]
			[Address(RVA = "0xBA7364", Offset = "0xBA7364", VA = "0xBA7364", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700020D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001769")]
			[Address(RVA = "0xBA73AC", Offset = "0xBA73AC", VA = "0xBA73AC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001764")]
		[Address(RVA = "0xBA6EF4", Offset = "0xBA6EF4", VA = "0xBA6EF4")]
		[DebuggerHidden]
		public <FadeToDefaultPassthrough>d__20(int <>1__state)
		{
		}

		[Token(Token = "0x6001765")]
		[Address(RVA = "0xBA71E8", Offset = "0xBA71E8", VA = "0xBA71E8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001766")]
		[Address(RVA = "0xBA71EC", Offset = "0xBA71EC", VA = "0xBA71EC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001768")]
		[Address(RVA = "0xBA736C", Offset = "0xBA736C", VA = "0xBA736C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40016A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OVRInput.Controller controllerHand;

	[Token(Token = "0x40016A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public OVRPassthroughLayer passthroughLayer;

	[Token(Token = "0x40016A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private IEnumerator fadeIn;

	[Token(Token = "0x40016A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private IEnumerator fadeOut;

	[Token(Token = "0x40016A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public RectTransform[] menuOptions;

	[Token(Token = "0x40016A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public RectTransform colorWheel;

	[Token(Token = "0x40016A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Texture2D colorTexture;

	[Token(Token = "0x40016A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Vector3 cursorPosition;

	[Token(Token = "0x40016AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private bool settingColor;

	[Token(Token = "0x40016AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Color savedColor;

	[Token(Token = "0x40016AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private float savedBrightness;

	[Token(Token = "0x40016AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private float savedContrast;

	[Token(Token = "0x40016AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private float savedPosterize;

	[Token(Token = "0x40016AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public CanvasGroup mainCanvas;

	[Token(Token = "0x40016B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public GameObject[] compactObjects;

	[Token(Token = "0x600174F")]
	[Address(RVA = "0xBA6594", Offset = "0xBA6594", VA = "0xBA6594")]
	private void Start()
	{
	}

	[Token(Token = "0x6001750")]
	[Address(RVA = "0xBA6888", Offset = "0xBA6888", VA = "0xBA6888")]
	private void Update()
	{
	}

	[Token(Token = "0x6001751")]
	[Address(RVA = "0xBA6C28", Offset = "0xBA6C28", VA = "0xBA6C28")]
	public void Grab(OVRInput.Controller grabHand)
	{
	}

	[Token(Token = "0x6001752")]
	[Address(RVA = "0xBA6D80", Offset = "0xBA6D80", VA = "0xBA6D80")]
	public void Release()
	{
	}

	[Token(Token = "0x6001753")]
	[Address(RVA = "0xBA6D08", Offset = "0xBA6D08", VA = "0xBA6D08")]
	[IteratorStateMachine(typeof(<FadeToCurrentStyle>d__19))]
	private IEnumerator FadeToCurrentStyle(float fadeTime)
	{
		return null;
	}

	[Token(Token = "0x6001754")]
	[Address(RVA = "0xBA6E54", Offset = "0xBA6E54", VA = "0xBA6E54")]
	[IteratorStateMachine(typeof(<FadeToDefaultPassthrough>d__20))]
	private IEnumerator FadeToDefaultPassthrough(float fadeTime)
	{
		return null;
	}

	[Token(Token = "0x6001755")]
	[Address(RVA = "0xBA6F1C", Offset = "0xBA6F1C", VA = "0xBA6F1C")]
	public void OnBrightnessChanged(float newValue)
	{
	}

	[Token(Token = "0x6001756")]
	[Address(RVA = "0xBA6F3C", Offset = "0xBA6F3C", VA = "0xBA6F3C")]
	public void OnContrastChanged(float newValue)
	{
	}

	[Token(Token = "0x6001757")]
	[Address(RVA = "0xBA6F5C", Offset = "0xBA6F5C", VA = "0xBA6F5C")]
	public void OnPosterizeChanged(float newValue)
	{
	}

	[Token(Token = "0x6001758")]
	[Address(RVA = "0xBA6F7C", Offset = "0xBA6F7C", VA = "0xBA6F7C")]
	public void OnAlphaChanged(float newValue)
	{
	}

	[Token(Token = "0x6001759")]
	[Address(RVA = "0xBA6820", Offset = "0xBA6820", VA = "0xBA6820")]
	private void ShowFullMenu(bool doShow)
	{
	}

	[Token(Token = "0x600175A")]
	[Address(RVA = "0xBA6FB0", Offset = "0xBA6FB0", VA = "0xBA6FB0")]
	public void Cursor(Vector3 cP)
	{
	}

	[Token(Token = "0x600175B")]
	[Address(RVA = "0xBA6FBC", Offset = "0xBA6FBC", VA = "0xBA6FBC")]
	public void DoColorDrag(bool doDrag)
	{
	}

	[Token(Token = "0x600175C")]
	[Address(RVA = "0xBA68A0", Offset = "0xBA68A0", VA = "0xBA68A0")]
	public void GetColorFromWheel()
	{
	}

	[Token(Token = "0x600175D")]
	[Address(RVA = "0xBA6FC8", Offset = "0xBA6FC8", VA = "0xBA6FC8")]
	public PassthroughStyler()
	{
	}
}
[Token(Token = "0x2000480")]
public class PassthroughSurface : MonoBehaviour
{
	[Token(Token = "0x40016C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OVRPassthroughLayer passthroughLayer;

	[Token(Token = "0x40016C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public MeshFilter projectionObject;

	[Token(Token = "0x600176A")]
	[Address(RVA = "0xBA73B4", Offset = "0xBA73B4", VA = "0xBA73B4")]
	private void Start()
	{
	}

	[Token(Token = "0x600176B")]
	[Address(RVA = "0xBA7468", Offset = "0xBA7468", VA = "0xBA7468")]
	public PassthroughSurface()
	{
	}
}
[Token(Token = "0x2000481")]
public class SceneSampler : MonoBehaviour
{
	[Token(Token = "0x40016C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private int currentSceneIndex;

	[Token(Token = "0x40016C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject displayText;

	[Token(Token = "0x600176C")]
	[Address(RVA = "0xBA7470", Offset = "0xBA7470", VA = "0xBA7470")]
	private void Awake()
	{
	}

	[Token(Token = "0x600176D")]
	[Address(RVA = "0xBA74DC", Offset = "0xBA74DC", VA = "0xBA74DC")]
	private void Update()
	{
	}

	[Token(Token = "0x600176E")]
	[Address(RVA = "0xBA77D0", Offset = "0xBA77D0", VA = "0xBA77D0")]
	public SceneSampler()
	{
	}
}
[Token(Token = "0x2000482")]
public class SelectivePassthroughExperience : MonoBehaviour
{
	[Token(Token = "0x40016C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject leftMaskObject;

	[Token(Token = "0x40016C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject rightMaskObject;

	[Token(Token = "0x600176F")]
	[Address(RVA = "0xBA77D8", Offset = "0xBA77D8", VA = "0xBA77D8")]
	private void Update()
	{
	}

	[Token(Token = "0x6001770")]
	[Address(RVA = "0xBA7C2C", Offset = "0xBA7C2C", VA = "0xBA7C2C")]
	public SelectivePassthroughExperience()
	{
	}
}
[Token(Token = "0x2000483")]
public class SPPquad : MonoBehaviour
{
	[Token(Token = "0x40016C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private OVRPassthroughLayer passthroughLayer;

	[Token(Token = "0x40016CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public MeshFilter projectionObject;

	[Token(Token = "0x40016CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private OVRInput.Controller controllerHand;

	[Token(Token = "0x6001771")]
	[Address(RVA = "0xBA7C34", Offset = "0xBA7C34", VA = "0xBA7C34")]
	private void Start()
	{
	}

	[Token(Token = "0x6001772")]
	[Address(RVA = "0xBA7E54", Offset = "0xBA7E54", VA = "0xBA7E54")]
	public void Grab(OVRInput.Controller grabHand)
	{
	}

	[Token(Token = "0x6001773")]
	[Address(RVA = "0xBA7EA0", Offset = "0xBA7EA0", VA = "0xBA7EA0")]
	public void Release()
	{
	}

	[Token(Token = "0x6001774")]
	[Address(RVA = "0xBA7EE0", Offset = "0xBA7EE0", VA = "0xBA7EE0")]
	public SPPquad()
	{
	}
}
[Token(Token = "0x2000484")]
public class BouncingBallLogic : MonoBehaviour
{
	[Token(Token = "0x2000485")]
	[CompilerGenerated]
	private sealed class <PlayPopCallback>d__18 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40016D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40016D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40016DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float clipLength;

		[Token(Token = "0x40016DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public BouncingBallLogic <>4__this;

		[Token(Token = "0x1700020E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001780")]
			[Address(RVA = "0xBA85CC", Offset = "0xBA85CC", VA = "0xBA85CC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700020F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001782")]
			[Address(RVA = "0xBA8614", Offset = "0xBA8614", VA = "0xBA8614", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600177D")]
		[Address(RVA = "0xBA84A0", Offset = "0xBA84A0", VA = "0xBA84A0")]
		[DebuggerHidden]
		public <PlayPopCallback>d__18(int <>1__state)
		{
		}

		[Token(Token = "0x600177E")]
		[Address(RVA = "0xBA84E0", Offset = "0xBA84E0", VA = "0xBA84E0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600177F")]
		[Address(RVA = "0xBA84E4", Offset = "0xBA84E4", VA = "0xBA84E4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001781")]
		[Address(RVA = "0xBA85D4", Offset = "0xBA85D4", VA = "0xBA85D4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40016CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private float TTL;

	[Token(Token = "0x40016CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private AudioClip pop;

	[Token(Token = "0x40016CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private AudioClip bounce;

	[Token(Token = "0x40016CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private AudioClip loadball;

	[Token(Token = "0x40016D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private Material visibleMat;

	[Token(Token = "0x40016D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private Material hiddenMat;

	[Token(Token = "0x40016D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private AudioSource audioSource;

	[Token(Token = "0x40016D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Transform centerEyeCamera;

	[Token(Token = "0x40016D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool isVisible;

	[Token(Token = "0x40016D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private float timer;

	[Token(Token = "0x40016D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private bool isReleased;

	[Token(Token = "0x40016D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
	private bool isReadyForDestroy;

	[Token(Token = "0x6001775")]
	[Address(RVA = "0xBA7EE8", Offset = "0xBA7EE8", VA = "0xBA7EE8")]
	private void OnCollisionEnter()
	{
	}

	[Token(Token = "0x6001776")]
	[Address(RVA = "0xBA7F0C", Offset = "0xBA7F0C", VA = "0xBA7F0C")]
	private void Start()
	{
	}

	[Token(Token = "0x6001777")]
	[Address(RVA = "0xBA7FFC", Offset = "0xBA7FFC", VA = "0xBA7FFC")]
	private void Update()
	{
	}

	[Token(Token = "0x6001778")]
	[Address(RVA = "0xBA80A0", Offset = "0xBA80A0", VA = "0xBA80A0")]
	private void UpdateVisibility()
	{
	}

	[Token(Token = "0x6001779")]
	[Address(RVA = "0xBA82E8", Offset = "0xBA82E8", VA = "0xBA82E8")]
	private void SetVisible(bool setVisible)
	{
	}

	[Token(Token = "0x600177A")]
	[Address(RVA = "0xBA838C", Offset = "0xBA838C", VA = "0xBA838C")]
	public void Release(Vector3 pos, Vector3 vel, Vector3 angVel)
	{
	}

	[Token(Token = "0x600177B")]
	[Address(RVA = "0xBA8270", Offset = "0xBA8270", VA = "0xBA8270")]
	[IteratorStateMachine(typeof(<PlayPopCallback>d__18))]
	private IEnumerator PlayPopCallback(float clipLength)
	{
		return null;
	}

	[Token(Token = "0x600177C")]
	[Address(RVA = "0xBA84C8", Offset = "0xBA84C8", VA = "0xBA84C8")]
	public BouncingBallLogic()
	{
	}
}
[Token(Token = "0x2000486")]
public class BouncingBallMgr : MonoBehaviour
{
	[Token(Token = "0x40016DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Transform trackingspace;

	[Token(Token = "0x40016DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject rightControllerPivot;

	[Token(Token = "0x40016DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private OVRInput.RawButton actionBtn;

	[Token(Token = "0x40016DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private GameObject ball;

	[Token(Token = "0x40016E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private GameObject currentBall;

	[Token(Token = "0x40016E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool ballGrabbed;

	[Token(Token = "0x6001783")]
	[Address(RVA = "0xBA861C", Offset = "0xBA861C", VA = "0xBA861C")]
	private void Update()
	{
	}

	[Token(Token = "0x6001784")]
	[Address(RVA = "0xBA8918", Offset = "0xBA8918", VA = "0xBA8918")]
	public BouncingBallMgr()
	{
	}
}
[Token(Token = "0x2000487")]
[DefaultExecutionOrder(30)]
[RequireComponent(typeof(OVRSceneAnchor))]
public class FurnitureSpawner : MonoBehaviour
{
	[Token(Token = "0x40016E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Tooltip("Add a point at ceiling.")]
	public GameObject RoomLightPrefab;

	[Token(Token = "0x40016E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<Spawnable> SpawnablePrefabs;

	[Token(Token = "0x40016E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private OVRSceneAnchor _sceneAnchor;

	[Token(Token = "0x40016E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private OVRSemanticClassification _classification;

	[Token(Token = "0x40016E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static GameObject _roomLightRef;

	[Token(Token = "0x40016E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int _frameCounter;

	[Token(Token = "0x6001785")]
	[Address(RVA = "0xBA8920", Offset = "0xBA8920", VA = "0xBA8920")]
	private void Start()
	{
	}

	[Token(Token = "0x6001786")]
	[Address(RVA = "0xBA8B04", Offset = "0xBA8B04", VA = "0xBA8B04")]
	private void SpawnSpawnable()
	{
	}

	[Token(Token = "0x6001787")]
	[Address(RVA = "0xBA8F74", Offset = "0xBA8F74", VA = "0xBA8F74")]
	private bool FindValidSpawnable(out Spawnable currentSpawnable)
	{
		return default(bool);
	}

	[Token(Token = "0x6001788")]
	[Address(RVA = "0xBA89A8", Offset = "0xBA89A8", VA = "0xBA89A8")]
	private void AddRoomLight()
	{
	}

	[Token(Token = "0x6001789")]
	[Address(RVA = "0xBA9178", Offset = "0xBA9178", VA = "0xBA9178")]
	private void GetVolumeFromTopPlane(Transform plane, Vector2 dimensions, float height, out Vector3 position, out Quaternion rotation, out Vector3 localScale)
	{
	}

	[Token(Token = "0x600178A")]
	[Address(RVA = "0xBA9664", Offset = "0xBA9664", VA = "0xBA9664")]
	public FurnitureSpawner()
	{
	}
}
[Token(Token = "0x2000488")]
public class MyCustomSceneModelLoader : OVRSceneModelLoader
{
	[Token(Token = "0x2000489")]
	[CompilerGenerated]
	private sealed class <DelayedLoad>d__0 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40016E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40016E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40016EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MyCustomSceneModelLoader <>4__this;

		[Token(Token = "0x17000210")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001792")]
			[Address(RVA = "0xBA9880", Offset = "0xBA9880", VA = "0xBA9880", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000211")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001794")]
			[Address(RVA = "0xBA98C8", Offset = "0xBA98C8", VA = "0xBA98C8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600178F")]
		[Address(RVA = "0xBA96D4", Offset = "0xBA96D4", VA = "0xBA96D4")]
		[DebuggerHidden]
		public <DelayedLoad>d__0(int <>1__state)
		{
		}

		[Token(Token = "0x6001790")]
		[Address(RVA = "0xBA978C", Offset = "0xBA978C", VA = "0xBA978C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001791")]
		[Address(RVA = "0xBA9790", Offset = "0xBA9790", VA = "0xBA9790", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001793")]
		[Address(RVA = "0xBA9888", Offset = "0xBA9888", VA = "0xBA9888", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x600178B")]
	[Address(RVA = "0xBA966C", Offset = "0xBA966C", VA = "0xBA966C")]
	[IteratorStateMachine(typeof(<DelayedLoad>d__0))]
	private IEnumerator DelayedLoad()
	{
		return null;
	}

	[Token(Token = "0x600178C")]
	[Address(RVA = "0xBA96FC", Offset = "0xBA96FC", VA = "0xBA96FC", Slot = "4")]
	protected override void OnStart()
	{
	}

	[Token(Token = "0x600178D")]
	[Address(RVA = "0xBA971C", Offset = "0xBA971C", VA = "0xBA971C", Slot = "6")]
	protected override void OnNoSceneModelToLoad()
	{
	}

	[Token(Token = "0x600178E")]
	[Address(RVA = "0xBA9784", Offset = "0xBA9784", VA = "0xBA9784")]
	public MyCustomSceneModelLoader()
	{
	}
}
[Token(Token = "0x200048A")]
[RequireComponent(typeof(OVRManager))]
public class PassthroughPlayInEditor : MonoBehaviour
{
	[Token(Token = "0x6001795")]
	[Address(RVA = "0xBA98D0", Offset = "0xBA98D0", VA = "0xBA98D0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001796")]
	[Address(RVA = "0xBA98D4", Offset = "0xBA98D4", VA = "0xBA98D4")]
	public PassthroughPlayInEditor()
	{
	}
}
[Token(Token = "0x200048B")]
public class RequestCaptureFlow : MonoBehaviour
{
	[Token(Token = "0x40016EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OVRInput.Button RequestCaptureBtn;

	[Token(Token = "0x40016EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private OVRSceneManager _sceneManager;

	[Token(Token = "0x6001797")]
	[Address(RVA = "0xBA98DC", Offset = "0xBA98DC", VA = "0xBA98DC")]
	private void Start()
	{
	}

	[Token(Token = "0x6001798")]
	[Address(RVA = "0xBA994C", Offset = "0xBA994C", VA = "0xBA994C")]
	private void Update()
	{
	}

	[Token(Token = "0x6001799")]
	[Address(RVA = "0xBA99D0", Offset = "0xBA99D0", VA = "0xBA99D0")]
	public RequestCaptureFlow()
	{
	}
}
[Token(Token = "0x200048C")]
[ExecuteInEditMode]
public class SimpleResizable : MonoBehaviour
{
	[Token(Token = "0x200048D")]
	public enum Method
	{
		[Token(Token = "0x40016FC")]
		Adapt,
		[Token(Token = "0x40016FD")]
		AdaptWithAsymmetricalPadding,
		[Token(Token = "0x40016FE")]
		Scale,
		[Token(Token = "0x40016FF")]
		None
	}

	[Token(Token = "0x40016ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Space(15f)]
	public Method ScalingX;

	[Token(Token = "0x40016EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[Range(0f, 0.5f)]
	public float PaddingX;

	[Token(Token = "0x40016EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[Range(-0.5f, 0f)]
	public float PaddingXMax;

	[Token(Token = "0x40016F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[Space(15f)]
	public Method ScalingY;

	[Token(Token = "0x40016F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[Range(0f, 0.5f)]
	public float PaddingY;

	[Token(Token = "0x40016F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[Range(-0.5f, 0f)]
	public float PaddingYMax;

	[Token(Token = "0x40016F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[Space(15f)]
	public Method ScalingZ;

	[Token(Token = "0x40016F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[Range(0f, 0.5f)]
	public float PaddingZ;

	[Token(Token = "0x40016F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[Range(-0.5f, 0f)]
	public float PaddingZMax;

	[Token(Token = "0x40016F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Bounds _bounds;

	[Token(Token = "0x40016FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private Transform _pivotTransform;

	[Token(Token = "0x17000212")]
	public Vector3 PivotPosition
	{
		[Token(Token = "0x600179A")]
		[Address(RVA = "0xBA99E0", Offset = "0xBA99E0", VA = "0xBA99E0")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x17000213")]
	public Vector3 NewSize
	{
		[Token(Token = "0x600179B")]
		[Address(RVA = "0xBA99FC", Offset = "0xBA99FC", VA = "0xBA99FC")]
		[CompilerGenerated]
		get
		{
			return default(Vector3);
		}
		[Token(Token = "0x600179C")]
		[Address(RVA = "0xBA9A08", Offset = "0xBA9A08", VA = "0xBA9A08")]
		[CompilerGenerated]
		set
		{
		}
	}

	[Token(Token = "0x17000214")]
	public Vector3 DefaultSize
	{
		[Token(Token = "0x600179D")]
		[Address(RVA = "0xBA9A14", Offset = "0xBA9A14", VA = "0xBA9A14")]
		[CompilerGenerated]
		get
		{
			return default(Vector3);
		}
		[Token(Token = "0x600179E")]
		[Address(RVA = "0xBA9A20", Offset = "0xBA9A20", VA = "0xBA9A20")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x17000215")]
	public Mesh Mesh
	{
		[Token(Token = "0x600179F")]
		[Address(RVA = "0xBA9A2C", Offset = "0xBA9A2C", VA = "0xBA9A2C")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x60017A0")]
		[Address(RVA = "0xBA9A34", Offset = "0xBA9A34", VA = "0xBA9A34")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x60017A1")]
	[Address(RVA = "0xBA9A3C", Offset = "0xBA9A3C", VA = "0xBA9A3C")]
	private void Awake()
	{
	}

	[Token(Token = "0x60017A2")]
	[Address(RVA = "0xBA9B4C", Offset = "0xBA9B4C", VA = "0xBA9B4C")]
	public SimpleResizable()
	{
	}
}
[Token(Token = "0x200048E")]
public class SimpleResizer
{
	[Token(Token = "0x60017A3")]
	[Address(RVA = "0xBA92D0", Offset = "0xBA92D0", VA = "0xBA92D0")]
	public void CreateResizedObject(Vector3 newSize, GameObject parent, SimpleResizable sourcePrefab)
	{
	}

	[Token(Token = "0x60017A4")]
	[Address(RVA = "0xBA9B54", Offset = "0xBA9B54", VA = "0xBA9B54")]
	private Mesh ProcessVertices(SimpleResizable resizable, Vector3 newSize)
	{
		return null;
	}

	[Token(Token = "0x60017A5")]
	[Address(RVA = "0xBA9DD8", Offset = "0xBA9DD8", VA = "0xBA9DD8")]
	private float CalculateNewVertexPosition(SimpleResizable.Method resizeMethod, float currentPosition, float currentSize, float newSize, float padding, float paddingMax, float pivot)
	{
		return default(float);
	}

	[Token(Token = "0x60017A6")]
	[Address(RVA = "0xBA92C8", Offset = "0xBA92C8", VA = "0xBA92C8")]
	public SimpleResizer()
	{
	}
}
[Serializable]
[Token(Token = "0x200048F")]
public class Spawnable : ISerializationCallbackReceiver
{
	[Token(Token = "0x4001700")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public SimpleResizable ResizablePrefab;

	[Token(Token = "0x4001701")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string ClassificationLabel;

	[Token(Token = "0x4001702")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private int _editorClassificationIndex;

	[Token(Token = "0x60017A7")]
	[Address(RVA = "0xBA9E80", Offset = "0xBA9E80", VA = "0xBA9E80", Slot = "4")]
	public void OnBeforeSerialize()
	{
	}

	[Token(Token = "0x60017A8")]
	[Address(RVA = "0xBA9E84", Offset = "0xBA9E84", VA = "0xBA9E84", Slot = "5")]
	public void OnAfterDeserialize()
	{
	}

	[Token(Token = "0x60017A9")]
	[Address(RVA = "0xBAA2EC", Offset = "0xBAA2EC", VA = "0xBAA2EC")]
	public Spawnable()
	{
	}
}
[Token(Token = "0x2000490")]
[RequireComponent(typeof(OVRSceneAnchor))]
public class VolumeAndPlaneSwitcher : MonoBehaviour
{
	[Token(Token = "0x2000491")]
	public enum GeometryType
	{
		[Token(Token = "0x4001707")]
		Plane,
		[Token(Token = "0x4001708")]
		Volume
	}

	[Serializable]
	[Token(Token = "0x2000492")]
	public struct LabelGeometryPair
	{
		[Token(Token = "0x4001709")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string label;

		[Token(Token = "0x400170A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public GeometryType desiredGeometryType;
	}

	[Token(Token = "0x4001703")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OVRSceneAnchor planePrefab;

	[Token(Token = "0x4001704")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public OVRSceneAnchor volumePrefab;

	[Token(Token = "0x4001705")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public List<LabelGeometryPair> desiredSwitches;

	[Token(Token = "0x60017AB")]
	[Address(RVA = "0xBAA33C", Offset = "0xBAA33C", VA = "0xBAA33C")]
	private void ReplaceAnchor(OVRSceneAnchor prefab, Vector3 position, Quaternion rotation, Vector3 localScale)
	{
	}

	[Token(Token = "0x60017AC")]
	[Address(RVA = "0xBAA780", Offset = "0xBAA780", VA = "0xBAA780")]
	private void Start()
	{
	}

	[Token(Token = "0x60017AD")]
	[Address(RVA = "0xBAB0B8", Offset = "0xBAB0B8", VA = "0xBAB0B8")]
	private void GetVolumeFromTopPlane(Transform plane, Vector2 dimensions, float height, out Vector3 position, out Quaternion rotation, out Vector3 localScale)
	{
	}

	[Token(Token = "0x60017AE")]
	[Address(RVA = "0xBAAF90", Offset = "0xBAAF90", VA = "0xBAAF90")]
	private void GetTopPlaneFromVolume(Transform volume, Vector3 dimensions, out Vector3 position, out Quaternion rotation, out Vector3 localScale)
	{
	}

	[Token(Token = "0x60017AF")]
	[Address(RVA = "0xBAB138", Offset = "0xBAB138", VA = "0xBAB138")]
	public VolumeAndPlaneSwitcher()
	{
	}
}
[Token(Token = "0x2000493")]
[RequireComponent(typeof(OVRSpatialAnchor))]
public class Anchor : MonoBehaviour
{
	[Token(Token = "0x2000494")]
	[CompilerGenerated]
	private sealed class <Start>d__20 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400171E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400171F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001720")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Anchor <>4__this;

		[Token(Token = "0x17000217")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60017C3")]
			[Address(RVA = "0xBACE8C", Offset = "0xBACE8C", VA = "0xBACE8C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000218")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60017C5")]
			[Address(RVA = "0xBACED4", Offset = "0xBACED4", VA = "0xBACED4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60017C0")]
		[Address(RVA = "0xBAC2F0", Offset = "0xBAC2F0", VA = "0xBAC2F0")]
		[DebuggerHidden]
		public <Start>d__20(int <>1__state)
		{
		}

		[Token(Token = "0x60017C1")]
		[Address(RVA = "0xBACD1C", Offset = "0xBACD1C", VA = "0xBACD1C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60017C2")]
		[Address(RVA = "0xBACD20", Offset = "0xBACD20", VA = "0xBACD20", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60017C4")]
		[Address(RVA = "0xBACE94", Offset = "0xBACE94", VA = "0xBACE94", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400170B")]
	public const string NumUuidsPlayerPref = "numUuids";

	[Token(Token = "0x400170C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[FormerlySerializedAs("canvas_")]
	[SerializeField]
	private Canvas _canvas;

	[Token(Token = "0x400170D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[FormerlySerializedAs("pivot_")]
	[SerializeField]
	private Transform _pivot;

	[Token(Token = "0x400170E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[FormerlySerializedAs("anchorMenu_")]
	[SerializeField]
	private GameObject _anchorMenu;

	[Token(Token = "0x400170F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool _isSelected;

	[Token(Token = "0x4001710")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	private bool _isHovered;

	[Token(Token = "0x4001711")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	[FormerlySerializedAs("anchorName_")]
	private TextMeshProUGUI _anchorName;

	[Token(Token = "0x4001712")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[FormerlySerializedAs("saveIcon_")]
	[SerializeField]
	private GameObject _saveIcon;

	[Token(Token = "0x4001713")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[FormerlySerializedAs("labelImage_")]
	[SerializeField]
	private Image _labelImage;

	[Token(Token = "0x4001714")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[FormerlySerializedAs("labelBaseColor_")]
	[SerializeField]
	private Color _labelBaseColor;

	[Token(Token = "0x4001715")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	[FormerlySerializedAs("labelHighlightColor_")]
	private Color _labelHighlightColor;

	[Token(Token = "0x4001716")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[FormerlySerializedAs("labelSelectedColor_")]
	[SerializeField]
	private Color _labelSelectedColor;

	[Token(Token = "0x4001717")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[FormerlySerializedAs("uiManager_")]
	[SerializeField]
	private AnchorUIManager _uiManager;

	[Token(Token = "0x4001718")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[FormerlySerializedAs("renderers_")]
	[SerializeField]
	private MeshRenderer[] _renderers;

	[Token(Token = "0x4001719")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private int _menuIndex;

	[Token(Token = "0x400171A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[SerializeField]
	[FormerlySerializedAs("buttonList_")]
	private List<Button> _buttonList;

	[Token(Token = "0x400171B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private Button _selectedButton;

	[Token(Token = "0x400171C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private OVRSpatialAnchor _spatialAnchor;

	[Token(Token = "0x400171D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private GameObject _icon;

	[Token(Token = "0x17000216")]
	public bool ShowSaveIcon
	{
		[Token(Token = "0x60017B6")]
		[Address(RVA = "0xBAC79C", Offset = "0xBAC79C", VA = "0xBAC79C")]
		set
		{
		}
	}

	[Token(Token = "0x60017B0")]
	[Address(RVA = "0xBAC140", Offset = "0xBAC140", VA = "0xBAC140")]
	private void Awake()
	{
	}

	[Token(Token = "0x60017B1")]
	[Address(RVA = "0xBAC288", Offset = "0xBAC288", VA = "0xBAC288")]
	[IteratorStateMachine(typeof(<Start>d__20))]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x60017B2")]
	[Address(RVA = "0xBAC318", Offset = "0xBAC318", VA = "0xBAC318")]
	private void Update()
	{
	}

	[Token(Token = "0x60017B3")]
	[Address(RVA = "0xBAC590", Offset = "0xBAC590", VA = "0xBAC590")]
	public void OnSaveLocalButtonPressed()
	{
	}

	[Token(Token = "0x60017B4")]
	[Address(RVA = "0xBAC660", Offset = "0xBAC660", VA = "0xBAC660")]
	public void OnHideButtonPressed()
	{
	}

	[Token(Token = "0x60017B5")]
	[Address(RVA = "0xBAC6CC", Offset = "0xBAC6CC", VA = "0xBAC6CC")]
	public void OnEraseButtonPressed()
	{
	}

	[Token(Token = "0x60017B7")]
	[Address(RVA = "0xBAC7BC", Offset = "0xBAC7BC", VA = "0xBAC7BC")]
	public void OnHoverStart()
	{
	}

	[Token(Token = "0x60017B8")]
	[Address(RVA = "0xBAC8D8", Offset = "0xBAC8D8", VA = "0xBAC8D8")]
	public void OnHoverEnd()
	{
	}

	[Token(Token = "0x60017B9")]
	[Address(RVA = "0xBAC9E0", Offset = "0xBAC9E0", VA = "0xBAC9E0")]
	public void OnSelect()
	{
	}

	[Token(Token = "0x60017BA")]
	[Address(RVA = "0xBAC368", Offset = "0xBAC368", VA = "0xBAC368")]
	private void BillboardPanel(Transform panel)
	{
	}

	[Token(Token = "0x60017BB")]
	[Address(RVA = "0xBAC49C", Offset = "0xBAC49C", VA = "0xBAC49C")]
	private void HandleMenuNavigation()
	{
	}

	[Token(Token = "0x60017BC")]
	[Address(RVA = "0xBACAA0", Offset = "0xBACAA0", VA = "0xBACAA0")]
	private void NavigateToIndexInMenu(bool moveNext)
	{
	}

	[Token(Token = "0x60017BD")]
	[Address(RVA = "0xBACBC4", Offset = "0xBACBC4", VA = "0xBACBC4")]
	public Anchor()
	{
	}
}
[Token(Token = "0x2000495")]
[RequireComponent(typeof(SpatialAnchorLoader))]
public class AnchorUIManager : MonoBehaviour
{
	[Token(Token = "0x2000496")]
	public enum AnchorMode
	{
		[Token(Token = "0x4001734")]
		Create,
		[Token(Token = "0x4001735")]
		Select
	}

	[Token(Token = "0x2000497")]
	private delegate void PrimaryPressDelegate();

	[Token(Token = "0x4001721")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static AnchorUIManager Instance;

	[Token(Token = "0x4001722")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[FormerlySerializedAs("createModeButton_")]
	[SerializeField]
	private GameObject _createModeButton;

	[Token(Token = "0x4001723")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	[FormerlySerializedAs("selectModeButton_")]
	private GameObject _selectModeButton;

	[Token(Token = "0x4001724")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	[FormerlySerializedAs("trackedDevice_")]
	private Transform _trackedDevice;

	[Token(Token = "0x4001725")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Transform _raycastOrigin;

	[Token(Token = "0x4001726")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool _drawRaycast;

	[Token(Token = "0x4001727")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[FormerlySerializedAs("lineRenderer_")]
	[SerializeField]
	private LineRenderer _lineRenderer;

	[Token(Token = "0x4001728")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Anchor _hoveredAnchor;

	[Token(Token = "0x4001729")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Anchor _selectedAnchor;

	[Token(Token = "0x400172A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private AnchorMode _mode;

	[Token(Token = "0x400172B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[FormerlySerializedAs("buttonList_")]
	[SerializeField]
	private List<Button> _buttonList;

	[Token(Token = "0x400172C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private int _menuIndex;

	[Token(Token = "0x400172D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Button _selectedButton;

	[Token(Token = "0x400172E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private Anchor _anchorPrefab;

	[Token(Token = "0x400172F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	[FormerlySerializedAs("placementPreview_")]
	private GameObject _placementPreview;

	[Token(Token = "0x4001730")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	[FormerlySerializedAs("anchorPlacementTransform_")]
	private Transform _anchorPlacementTransform;

	[Token(Token = "0x4001731")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private PrimaryPressDelegate _primaryPressDelegate;

	[Token(Token = "0x4001732")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private bool _isFocused;

	[Token(Token = "0x17000219")]
	public Anchor AnchorPrefab
	{
		[Token(Token = "0x60017C6")]
		[Address(RVA = "0xBACEDC", Offset = "0xBACEDC", VA = "0xBACEDC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60017C7")]
	[Address(RVA = "0xBACEE4", Offset = "0xBACEE4", VA = "0xBACEE4")]
	private void Awake()
	{
	}

	[Token(Token = "0x60017C8")]
	[Address(RVA = "0xBACFA4", Offset = "0xBACFA4", VA = "0xBACFA4")]
	private void Start()
	{
	}

	[Token(Token = "0x60017C9")]
	[Address(RVA = "0xBAD0C4", Offset = "0xBAD0C4", VA = "0xBAD0C4")]
	private void Update()
	{
	}

	[Token(Token = "0x60017CA")]
	[Address(RVA = "0xBAD538", Offset = "0xBAD538", VA = "0xBAD538")]
	public void OnCreateModeButtonPressed()
	{
	}

	[Token(Token = "0x60017CB")]
	[Address(RVA = "0xBAD5A4", Offset = "0xBAD5A4", VA = "0xBAD5A4")]
	public void OnLoadAnchorsButtonPressed()
	{
	}

	[Token(Token = "0x60017CC")]
	[Address(RVA = "0xBAD074", Offset = "0xBAD074", VA = "0xBAD074")]
	private void ToggleCreateMode()
	{
	}

	[Token(Token = "0x60017CD")]
	[Address(RVA = "0xBAD768", Offset = "0xBAD768", VA = "0xBAD768")]
	private void StartPlacementMode()
	{
	}

	[Token(Token = "0x60017CE")]
	[Address(RVA = "0xBAD7E8", Offset = "0xBAD7E8", VA = "0xBAD7E8")]
	private void EndPlacementMode()
	{
	}

	[Token(Token = "0x60017CF")]
	[Address(RVA = "0xBAD800", Offset = "0xBAD800", VA = "0xBAD800")]
	private void StartSelectMode()
	{
	}

	[Token(Token = "0x60017D0")]
	[Address(RVA = "0xBAD750", Offset = "0xBAD750", VA = "0xBAD750")]
	private void EndSelectMode()
	{
	}

	[Token(Token = "0x60017D1")]
	[Address(RVA = "0xBAD444", Offset = "0xBAD444", VA = "0xBAD444")]
	private void HandleMenuNavigation()
	{
	}

	[Token(Token = "0x60017D2")]
	[Address(RVA = "0xBAD9E8", Offset = "0xBAD9E8", VA = "0xBAD9E8")]
	private void NavigateToIndexInMenu(bool moveNext)
	{
	}

	[Token(Token = "0x60017D3")]
	[Address(RVA = "0xBAD880", Offset = "0xBAD880", VA = "0xBAD880")]
	private void ShowAnchorPreview()
	{
	}

	[Token(Token = "0x60017D4")]
	[Address(RVA = "0xBAD95C", Offset = "0xBAD95C", VA = "0xBAD95C")]
	private void HideAnchorPreview()
	{
	}

	[Token(Token = "0x60017D5")]
	[Address(RVA = "0xBADAD4", Offset = "0xBADAD4", VA = "0xBADAD4")]
	private void PlaceAnchor()
	{
	}

	[Token(Token = "0x60017D6")]
	[Address(RVA = "0xBAD97C", Offset = "0xBAD97C", VA = "0xBAD97C")]
	private void ShowRaycastLine()
	{
	}

	[Token(Token = "0x60017D7")]
	[Address(RVA = "0xBAD9B4", Offset = "0xBAD9B4", VA = "0xBAD9B4")]
	private void HideRaycastLine()
	{
	}

	[Token(Token = "0x60017D8")]
	[Address(RVA = "0xBAD1C4", Offset = "0xBAD1C4", VA = "0xBAD1C4")]
	private void ControllerRaycast()
	{
	}

	[Token(Token = "0x60017D9")]
	[Address(RVA = "0xBADBC0", Offset = "0xBADBC0", VA = "0xBADBC0")]
	private void HoverAnchor(Anchor anchor)
	{
	}

	[Token(Token = "0x60017DA")]
	[Address(RVA = "0xBADBDC", Offset = "0xBADBDC", VA = "0xBADBDC")]
	private void UnhoverAnchor()
	{
	}

	[Token(Token = "0x60017DB")]
	[Address(RVA = "0xBADC58", Offset = "0xBADC58", VA = "0xBADC58")]
	private void SelectAnchor()
	{
	}

	[Token(Token = "0x60017DC")]
	[Address(RVA = "0xBADD70", Offset = "0xBADD70", VA = "0xBADD70")]
	public AnchorUIManager()
	{
	}
}
[Token(Token = "0x2000498")]
public class SpatialAnchorLoader : MonoBehaviour
{
	[Token(Token = "0x4001736")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private OVRSpatialAnchor _anchorPrefab;

	[Token(Token = "0x4001737")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private readonly HashSet<ulong> _locateAnchorRequest;

	[Token(Token = "0x4001738")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private ulong _queryRequestId;

	[Token(Token = "0x60017E1")]
	[Address(RVA = "0xBADDC0", Offset = "0xBADDC0", VA = "0xBADDC0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60017E2")]
	[Address(RVA = "0xBADEC0", Offset = "0xBADEC0", VA = "0xBADEC0")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60017E3")]
	[Address(RVA = "0xBADFC0", Offset = "0xBADFC0", VA = "0xBADFC0")]
	private void SetComponentEnabled(ulong requestId, bool result, OVRSpace space, Guid uuid, OVRPlugin.SpaceComponentType componentType, bool enabled)
	{
	}

	[Token(Token = "0x60017E4")]
	[Address(RVA = "0xBAE214", Offset = "0xBAE214", VA = "0xBAE214")]
	private void QueryComplete(ulong requestId, bool result)
	{
	}

	[Token(Token = "0x60017E5")]
	[Address(RVA = "0xBAE420", Offset = "0xBAE420", VA = "0xBAE420")]
	private void TryEnableComponent(ulong anchorHandle, OVRPlugin.SpaceComponentType type)
	{
	}

	[Token(Token = "0x60017E6")]
	[Address(RVA = "0xBAE784", Offset = "0xBAE784", VA = "0xBAE784")]
	public void LoadAnchorsByUuid()
	{
	}

	[Token(Token = "0x60017E7")]
	[Address(RVA = "0xBAD5F8", Offset = "0xBAD5F8", VA = "0xBAD5F8")]
	public void LoadAllLocalAnchors()
	{
	}

	[Token(Token = "0x60017E8")]
	[Address(RVA = "0xBAE188", Offset = "0xBAE188", VA = "0xBAE188")]
	private static void Log(string message)
	{
	}

	[Token(Token = "0x60017E9")]
	[Address(RVA = "0xBAE9F8", Offset = "0xBAE9F8", VA = "0xBAE9F8")]
	public SpatialAnchorLoader()
	{
	}
}
[Token(Token = "0x2000499")]
public class StartMenu : MonoBehaviour
{
	[Token(Token = "0x4001739")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OVROverlay overlay;

	[Token(Token = "0x400173A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public OVROverlay text;

	[Token(Token = "0x400173B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OVRCameraRig vrRig;

	[Token(Token = "0x60017EA")]
	[Address(RVA = "0xBAEA74", Offset = "0xBAEA74", VA = "0xBAEA74")]
	private void Start()
	{
	}

	[Token(Token = "0x60017EB")]
	[Address(RVA = "0xBAEC78", Offset = "0xBAEC78", VA = "0xBAEC78")]
	private void LoadScene(int idx)
	{
	}

	[Token(Token = "0x60017EC")]
	[Address(RVA = "0xBAED7C", Offset = "0xBAED7C", VA = "0xBAED7C")]
	public StartMenu()
	{
	}
}
[Token(Token = "0x200049B")]
[DisallowMultipleComponent]
public class Outline : MonoBehaviour
{
	[Token(Token = "0x200049C")]
	public enum Mode
	{
		[Token(Token = "0x400174C")]
		OutlineAll,
		[Token(Token = "0x400174D")]
		OutlineVisible,
		[Token(Token = "0x400174E")]
		OutlineHidden,
		[Token(Token = "0x400174F")]
		OutlineAndSilhouette,
		[Token(Token = "0x4001750")]
		SilhouetteOnly
	}

	[Serializable]
	[Token(Token = "0x200049D")]
	private class ListVector3
	{
		[Token(Token = "0x4001751")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public List<Vector3> data;

		[Token(Token = "0x6001801")]
		[Address(RVA = "0xBB0664", Offset = "0xBB0664", VA = "0xBB0664")]
		public ListVector3()
		{
		}
	}

	[Token(Token = "0x400173E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static HashSet<Mesh> registeredMeshes;

	[Token(Token = "0x400173F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Mode outlineMode;

	[Token(Token = "0x4001740")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private Color outlineColor;

	[Token(Token = "0x4001741")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Texture2D alphaMask;

	[Token(Token = "0x4001742")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[Range(0f, 10f)]
	[SerializeField]
	private float outlineWidth;

	[Token(Token = "0x4001743")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[Tooltip("Precompute enabled: Per-vertex calculations are performed in the editor and serialized with the object. Precompute disabled: Per-vertex calculations are performed at runtime in Awake(). This may cause a pause for large meshes.")]
	[SerializeField]
	[Header("Optional")]
	private bool precomputeOutline;

	[Token(Token = "0x4001744")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	[HideInInspector]
	private List<Mesh> bakeKeys;

	[Token(Token = "0x4001745")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[HideInInspector]
	[SerializeField]
	private List<ListVector3> bakeValues;

	[Token(Token = "0x4001746")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Renderer[] renderers;

	[Token(Token = "0x4001747")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Material outlineMaskMaterial;

	[Token(Token = "0x4001748")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Material outlineFillMaterial;

	[Token(Token = "0x4001749")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private bool needsUpdate;

	[Token(Token = "0x400174A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x69")]
	private bool setUpMaterials;

	[Token(Token = "0x1700021A")]
	public Mode OutlineMode
	{
		[Token(Token = "0x60017EF")]
		[Address(RVA = "0xBAEDA0", Offset = "0xBAEDA0", VA = "0xBAEDA0")]
		get
		{
			return default(Mode);
		}
		[Token(Token = "0x60017F0")]
		[Address(RVA = "0xBAEDA8", Offset = "0xBAEDA8", VA = "0xBAEDA8")]
		set
		{
		}
	}

	[Token(Token = "0x1700021B")]
	public Color OutlineColor
	{
		[Token(Token = "0x60017F1")]
		[Address(RVA = "0xBAEDB8", Offset = "0xBAEDB8", VA = "0xBAEDB8")]
		get
		{
			return default(Color);
		}
		[Token(Token = "0x60017F2")]
		[Address(RVA = "0xBAEDC4", Offset = "0xBAEDC4", VA = "0xBAEDC4")]
		set
		{
		}
	}

	[Token(Token = "0x1700021C")]
	public float OutlineWidth
	{
		[Token(Token = "0x60017F3")]
		[Address(RVA = "0xBAEDD8", Offset = "0xBAEDD8", VA = "0xBAEDD8")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60017F4")]
		[Address(RVA = "0xBAEDE0", Offset = "0xBAEDE0", VA = "0xBAEDE0")]
		set
		{
		}
	}

	[Token(Token = "0x60017F5")]
	[Address(RVA = "0xBAEDF0", Offset = "0xBAEDF0", VA = "0xBAEDF0")]
	private void Awake()
	{
	}

	[Token(Token = "0x60017F6")]
	[Address(RVA = "0xBAF21C", Offset = "0xBAF21C", VA = "0xBAF21C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60017F7")]
	[Address(RVA = "0xBAF3D8", Offset = "0xBAF3D8", VA = "0xBAF3D8")]
	private void OnValidate()
	{
	}

	[Token(Token = "0x60017F8")]
	[Address(RVA = "0xBAF750", Offset = "0xBAF750", VA = "0xBAF750")]
	private void Update()
	{
	}

	[Token(Token = "0x60017F9")]
	[Address(RVA = "0xBAF93C", Offset = "0xBAF93C", VA = "0xBAF93C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60017FA")]
	[Address(RVA = "0xBAFA54", Offset = "0xBAFA54", VA = "0xBAFA54")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60017FB")]
	[Address(RVA = "0xBAF4F0", Offset = "0xBAF4F0", VA = "0xBAF4F0")]
	private void Bake()
	{
	}

	[Token(Token = "0x60017FC")]
	[Address(RVA = "0xBAEF68", Offset = "0xBAEF68", VA = "0xBAEF68")]
	private void LoadSmoothNormals()
	{
	}

	[Token(Token = "0x60017FD")]
	[Address(RVA = "0xBAFABC", Offset = "0xBAFABC", VA = "0xBAFABC")]
	private List<Vector3> SmoothNormals(Mesh mesh)
	{
		return null;
	}

	[Token(Token = "0x60017FE")]
	[Address(RVA = "0xBAF764", Offset = "0xBAF764", VA = "0xBAF764")]
	private void UpdateMaterialProperties()
	{
	}

	[Token(Token = "0x60017FF")]
	[Address(RVA = "0xBB066C", Offset = "0xBB066C", VA = "0xBB066C")]
	public Outline()
	{
	}
}
[Token(Token = "0x200049F")]
[RequireComponent(typeof(MeshFilter), typeof(MeshRenderer))]
public class CLCGrid : MonoBehaviour
{
	[Token(Token = "0x4001755")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int xSize;

	[Token(Token = "0x4001756")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int ySize;

	[Token(Token = "0x4001757")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Mesh mesh;

	[Token(Token = "0x4001758")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Vector3[] vertices;

	[Token(Token = "0x6001806")]
	[Address(RVA = "0xBB0914", Offset = "0xBB0914", VA = "0xBB0914")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001807")]
	[Address(RVA = "0xBB0918", Offset = "0xBB0918", VA = "0xBB0918")]
	private void Generate()
	{
	}

	[Token(Token = "0x6001808")]
	[Address(RVA = "0xBB0CC4", Offset = "0xBB0CC4", VA = "0xBB0CC4")]
	public CLCGrid()
	{
	}
}
[Token(Token = "0x20004A0")]
[RequireComponent(typeof(MeshFilter), typeof(MeshRenderer))]
public class RoundedCube : MonoBehaviour
{
	[Token(Token = "0x4001759")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int xSize;

	[Token(Token = "0x400175A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int ySize;

	[Token(Token = "0x400175B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int zSize;

	[Token(Token = "0x400175C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public int roundness;

	[Token(Token = "0x400175D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Mesh mesh;

	[Token(Token = "0x400175E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Vector3[] vertices;

	[Token(Token = "0x400175F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Vector3[] normals;

	[Token(Token = "0x6001809")]
	[Address(RVA = "0xBB0CCC", Offset = "0xBB0CCC", VA = "0xBB0CCC")]
	private void Awake()
	{
	}

	[Token(Token = "0x600180A")]
	[Address(RVA = "0xBB0CD0", Offset = "0xBB0CD0", VA = "0xBB0CD0")]
	private void Generate()
	{
	}

	[Token(Token = "0x600180B")]
	[Address(RVA = "0xBB0DA8", Offset = "0xBB0DA8", VA = "0xBB0DA8")]
	private void CreateVertices()
	{
	}

	[Token(Token = "0x600180C")]
	[Address(RVA = "0xBB120C", Offset = "0xBB120C", VA = "0xBB120C")]
	private void SetVertex(int i, int x, int y, int z)
	{
	}

	[Token(Token = "0x600180D")]
	[Address(RVA = "0xBB10B0", Offset = "0xBB10B0", VA = "0xBB10B0")]
	private void CreateTriangles()
	{
	}

	[Token(Token = "0x600180E")]
	[Address(RVA = "0xBB14F8", Offset = "0xBB14F8", VA = "0xBB14F8")]
	private int CreateTopFace(int[] triangles, int t, int ring)
	{
		return default(int);
	}

	[Token(Token = "0x600180F")]
	[Address(RVA = "0xBB172C", Offset = "0xBB172C", VA = "0xBB172C")]
	private int CreateBottomFace(int[] triangles, int t, int ring)
	{
		return default(int);
	}

	[Token(Token = "0x6001810")]
	[Address(RVA = "0xBB1464", Offset = "0xBB1464", VA = "0xBB1464")]
	private static int SetQuad(int[] triangles, int i, int v00, int v10, int v01, int v11)
	{
		return default(int);
	}

	[Token(Token = "0x6001811")]
	[Address(RVA = "0xBB198C", Offset = "0xBB198C", VA = "0xBB198C")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x6001812")]
	[Address(RVA = "0xBB1AA8", Offset = "0xBB1AA8", VA = "0xBB1AA8")]
	public RoundedCube()
	{
	}
}
[Token(Token = "0x20004A1")]
[DisallowMultipleComponent]
public class SteamManager : MonoBehaviour
{
	[Token(Token = "0x1700021D")]
	public static bool Initialized
	{
		[Token(Token = "0x6001813")]
		[Address(RVA = "0xBB1AB0", Offset = "0xBB1AB0", VA = "0xBB1AB0")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6001814")]
	[Address(RVA = "0xBB1AB8", Offset = "0xBB1AB8", VA = "0xBB1AB8")]
	public SteamManager()
	{
	}
}
[Token(Token = "0x20004A2")]
public class VrDebugExample : MonoBehaviour
{
	[Token(Token = "0x4001760")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform referenceTransform;

	[Token(Token = "0x6001815")]
	[Address(RVA = "0xBB1AC0", Offset = "0xBB1AC0", VA = "0xBB1AC0")]
	private void Start()
	{
	}

	[Token(Token = "0x6001816")]
	[Address(RVA = "0xBB1EF0", Offset = "0xBB1EF0", VA = "0xBB1EF0")]
	public VrDebugExample()
	{
	}
}
namespace VrDebugPlugin
{
	[Token(Token = "0x20004A3")]
	public class MatchTransform : MonoBehaviour
	{
		[Token(Token = "0x4001761")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform target;

		[Token(Token = "0x6001817")]
		[Address(RVA = "0xBB1EF8", Offset = "0xBB1EF8", VA = "0xBB1EF8")]
		private void Update()
		{
		}

		[Token(Token = "0x6001818")]
		[Address(RVA = "0xBB1FD4", Offset = "0xBB1FD4", VA = "0xBB1FD4")]
		public MatchTransform()
		{
		}
	}
	[Token(Token = "0x20004A4")]
	public class ObjectPool
	{
		[Token(Token = "0x4001762")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public HideMethod hideMethod;

		[Token(Token = "0x4001763")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Transform _unusedParent;

		[Token(Token = "0x4001764")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private string _prefabLocation;

		[Token(Token = "0x4001765")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Queue<GameObject> _unused;

		[Token(Token = "0x4001766")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[Header("Debug")]
		private int _instancesCreated;

		[Token(Token = "0x4001767")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private int _inPool;

		[Token(Token = "0x4001768")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private int _outOfPool;

		[Token(Token = "0x6001819")]
		[Address(RVA = "0xBB1FDC", Offset = "0xBB1FDC", VA = "0xBB1FDC")]
		public ObjectPool(string prefabLocation, Transform parent, int initialSize = 0)
		{
		}

		[Token(Token = "0x600181A")]
		[Address(RVA = "0xBB20C8", Offset = "0xBB20C8", VA = "0xBB20C8")]
		public GameObject Get()
		{
			return null;
		}

		[Token(Token = "0x600181B")]
		[Address(RVA = "0xBB2284", Offset = "0xBB2284", VA = "0xBB2284")]
		public void Return(GameObject obj)
		{
		}

		[Token(Token = "0x600181C")]
		[Address(RVA = "0xBB2094", Offset = "0xBB2094", VA = "0xBB2094")]
		private void Populate(int size)
		{
		}

		[Token(Token = "0x600181D")]
		[Address(RVA = "0xBB2168", Offset = "0xBB2168", VA = "0xBB2168")]
		private void AddToPool()
		{
		}

		[Token(Token = "0x600181E")]
		[Address(RVA = "0xBB2384", Offset = "0xBB2384", VA = "0xBB2384")]
		private void Hide(GameObject go)
		{
		}

		[Token(Token = "0x600181F")]
		[Address(RVA = "0xBB2254", Offset = "0xBB2254", VA = "0xBB2254")]
		private void Show(GameObject go)
		{
		}
	}
	[Token(Token = "0x20004A5")]
	public enum HideMethod
	{
		[Token(Token = "0x400176A")]
		Disable,
		[Token(Token = "0x400176B")]
		Distance
	}
	[Token(Token = "0x20004A6")]
	public class StaticBehaviour : MonoBehaviour
	{
		[Token(Token = "0x400176E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static StaticBehaviour _instance;

		[Token(Token = "0x1400009C")]
		public event Action Updated
		{
			[Token(Token = "0x6001820")]
			[Address(RVA = "0xBB2428", Offset = "0xBB2428", VA = "0xBB2428")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6001821")]
			[Address(RVA = "0xBB24C4", Offset = "0xBB24C4", VA = "0xBB24C4")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x1400009D")]
		public event Action Destroyed
		{
			[Token(Token = "0x6001822")]
			[Address(RVA = "0xBB2560", Offset = "0xBB2560", VA = "0xBB2560")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6001823")]
			[Address(RVA = "0xBB25FC", Offset = "0xBB25FC", VA = "0xBB25FC")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x6001824")]
		[Address(RVA = "0xBB2698", Offset = "0xBB2698", VA = "0xBB2698")]
		public static StaticBehaviour GetInstance()
		{
			return null;
		}

		[Token(Token = "0x6001825")]
		[Address(RVA = "0xBB2768", Offset = "0xBB2768", VA = "0xBB2768")]
		private static StaticBehaviour CreateInstance()
		{
			return null;
		}

		[Token(Token = "0x6001826")]
		[Address(RVA = "0xBB26F0", Offset = "0xBB26F0", VA = "0xBB26F0")]
		public static bool HasInstance()
		{
			return default(bool);
		}

		[Token(Token = "0x6001827")]
		[Address(RVA = "0xBB27F4", Offset = "0xBB27F4", VA = "0xBB27F4")]
		public StaticBehaviour()
		{
		}
	}
	[Token(Token = "0x20004A7")]
	public class VrDebug : MonoBehaviour
	{
		[Token(Token = "0x400176F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Transform _debugObjectsParent;

		[Token(Token = "0x4001770")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static ObjectPool _axisPool;

		[Token(Token = "0x4001771")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static ObjectPool _pointPool;

		[Token(Token = "0x4001772")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static ObjectPool _linePool;

		[Token(Token = "0x4001773")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static ObjectPool _linePoolOpaque;

		[Token(Token = "0x4001774")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static Dictionary<GameObject, ObjectPool> _activeObjects;

		[Token(Token = "0x4001775")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private static Dictionary<GameObject, ObjectPool> _markedForRemoval;

		[Token(Token = "0x4001776")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private static VrDebug _instance;

		[Token(Token = "0x6001828")]
		[Address(RVA = "0xBB27FC", Offset = "0xBB27FC", VA = "0xBB27FC")]
		private static void CheckToInit()
		{
		}

		[Token(Token = "0x6001829")]
		[Address(RVA = "0xBB2A54", Offset = "0xBB2A54", VA = "0xBB2A54")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x600182A")]
		[Address(RVA = "0xBB2DAC", Offset = "0xBB2DAC", VA = "0xBB2DAC")]
		public static void DrawAxis(Vector3 pos, Quaternion rot, float scale = 0.02f)
		{
		}

		[Token(Token = "0x600182B")]
		[Address(RVA = "0xBB1D7C", Offset = "0xBB1D7C", VA = "0xBB1D7C")]
		public static void DrawAxis(Transform tran, float scale = 0.02f)
		{
		}

		[Token(Token = "0x600182C")]
		[Address(RVA = "0xBB1B8C", Offset = "0xBB1B8C", VA = "0xBB1B8C")]
		public static void DrawPoint(Vector3 pos, [Optional] Color color, float scale = 0.005f)
		{
		}

		[Token(Token = "0x600182D")]
		[Address(RVA = "0xBB2F40", Offset = "0xBB2F40", VA = "0xBB2F40")]
		public static void DrawLine(Vector3 start, Vector3 end, [Optional] Color color, float thickness = 0.008f)
		{
		}

		[Token(Token = "0x600182E")]
		[Address(RVA = "0xBB3194", Offset = "0xBB3194", VA = "0xBB3194")]
		public static void DrawLineOpque(Vector3 start, Vector3 end, [Optional] Color color, float thickness = 0.008f)
		{
		}

		[Token(Token = "0x600182F")]
		[Address(RVA = "0xBB33E8", Offset = "0xBB33E8", VA = "0xBB33E8")]
		public static GameObject SpawnAxis(Transform parent, float scale = 0.02f)
		{
			return null;
		}

		[Token(Token = "0x6001830")]
		[Address(RVA = "0xBB34FC", Offset = "0xBB34FC", VA = "0xBB34FC")]
		public static GameObject SpawnAxis(Vector3 pos, Quaternion rot, float scale = 0.02f)
		{
			return null;
		}

		[Token(Token = "0x6001831")]
		[Address(RVA = "0xBB368C", Offset = "0xBB368C", VA = "0xBB368C")]
		public static GameObject SpawnPoint(Vector3 pos, [Optional] Color color, float scale = 0.005f)
		{
			return null;
		}

		[Token(Token = "0x6001832")]
		[Address(RVA = "0xBB3838", Offset = "0xBB3838", VA = "0xBB3838")]
		public static GameObject SpawnLine(Vector3 start, Vector3 end, [Optional] Color color, float thickness = 0.008f)
		{
			return null;
		}

		[Token(Token = "0x6001833")]
		[Address(RVA = "0xBB3A30", Offset = "0xBB3A30", VA = "0xBB3A30")]
		public static void SetDebugColor(GameObject obj, Color color)
		{
		}

		[Token(Token = "0x6001834")]
		[Address(RVA = "0xBB3AC8", Offset = "0xBB3AC8", VA = "0xBB3AC8")]
		public static void PositionLine(GameObject line, Vector3 start, Vector3 end)
		{
		}

		[Token(Token = "0x6001835")]
		[Address(RVA = "0xBB3C1C", Offset = "0xBB3C1C", VA = "0xBB3C1C")]
		public VrDebug()
		{
		}
	}
}
namespace SuperFindPlugin
{
	[Token(Token = "0x20004A8")]
	public static class Constants
	{
		[Token(Token = "0x4001777")]
		public const string Wildcard = "*";
	}
	[Token(Token = "0x20004A9")]
	public interface INode : IEnumerable
	{
	}
	[Token(Token = "0x20004AA")]
	public class TransformNode : INode, IEnumerable
	{
		[Token(Token = "0x4001778")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly Transform _transform;

		[Token(Token = "0x4001779")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private List<TransformNode> _children;

		[Token(Token = "0x6001837")]
		[Address(RVA = "0xBB3CDC", Offset = "0xBB3CDC", VA = "0xBB3CDC")]
		public TransformNode(Transform transform)
		{
		}

		[Token(Token = "0x6001838")]
		[Address(RVA = "0xBB40C0", Offset = "0xBB40C0", VA = "0xBB40C0", Slot = "4")]
		public IEnumerator GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x6001839")]
		[Address(RVA = "0xBB4150", Offset = "0xBB4150", VA = "0xBB4150")]
		public Transform GetTransform()
		{
			return null;
		}
	}
	[Token(Token = "0x20004AB")]
	public interface IDescender
	{
		[Token(Token = "0x600183A")]
		void Descend(IVisitor visitor);
	}
	[Token(Token = "0x20004AC")]
	public class SceneDescender : IDescender
	{
		[Token(Token = "0x400177A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Scene _scene;

		[Token(Token = "0x400177B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private IVisitor _visitor;

		[Token(Token = "0x600183B")]
		[Address(RVA = "0xBB4158", Offset = "0xBB4158", VA = "0xBB4158")]
		public SceneDescender(Scene scene)
		{
		}

		[Token(Token = "0x600183C")]
		[Address(RVA = "0xBB4180", Offset = "0xBB4180", VA = "0xBB4180", Slot = "4")]
		public void Descend(IVisitor visitor)
		{
		}

		[Token(Token = "0x600183D")]
		[Address(RVA = "0xBB42D8", Offset = "0xBB42D8", VA = "0xBB42D8")]
		private void Descend(INode node)
		{
		}
	}
	[Token(Token = "0x20004AD")]
	public class ComponentFlair : Flair
	{
		[Token(Token = "0x400177C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private string componentName;

		[Token(Token = "0x600183E")]
		[Address(RVA = "0xBB47A8", Offset = "0xBB47A8", VA = "0xBB47A8")]
		public ComponentFlair(string componentName)
		{
		}

		[Token(Token = "0x600183F")]
		[Address(RVA = "0xBB481C", Offset = "0xBB481C", VA = "0xBB481C", Slot = "4")]
		public override bool Match(Transform toMatch, string name)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20004AE")]
	public abstract class Flair
	{
		[Token(Token = "0x400177D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static string[] ValidWords;

		[Token(Token = "0x6001840")]
		[Address(RVA = "0xBB4898", Offset = "0xBB4898", VA = "0xBB4898")]
		public static Flair FromString(string flairStr)
		{
			return null;
		}

		[Token(Token = "0x6001841")]
		[Address(RVA = "0xBB4A10", Offset = "0xBB4A10", VA = "0xBB4A10")]
		public static bool IsValidWord(string word)
		{
			return default(bool);
		}

		[Token(Token = "0x6001842")]
		public abstract bool Match(Transform transform, string name);

		[Token(Token = "0x6001843")]
		[Address(RVA = "0xBB4814", Offset = "0xBB4814", VA = "0xBB4814")]
		protected Flair()
		{
		}
	}
	[Token(Token = "0x20004B0")]
	public class IndexFlair : Flair
	{
		[Token(Token = "0x400177F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int index;

		[Token(Token = "0x6001847")]
		[Address(RVA = "0xBB49A4", Offset = "0xBB49A4", VA = "0xBB49A4")]
		public IndexFlair(int index)
		{
		}

		[Token(Token = "0x6001848")]
		[Address(RVA = "0xBB4C98", Offset = "0xBB4C98", VA = "0xBB4C98", Slot = "4")]
		public override bool Match(Transform toMatch, string name)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20004B1")]
	public class WordFlair : Flair
	{
		[Token(Token = "0x4001780")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private string word;

		[Token(Token = "0x6001849")]
		[Address(RVA = "0xBB4B10", Offset = "0xBB4B10", VA = "0xBB4B10")]
		public WordFlair(string word)
		{
		}

		[Token(Token = "0x600184A")]
		[Address(RVA = "0xBB51C0", Offset = "0xBB51C0", VA = "0xBB51C0", Slot = "4")]
		public override bool Match(Transform toMatch, string name)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20004B2")]
	public class Selector
	{
		[Token(Token = "0x4001781")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private string _name;

		[Token(Token = "0x4001782")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Flair[] _flairs;

		[Token(Token = "0x600184B")]
		[Address(RVA = "0xBB5ADC", Offset = "0xBB5ADC", VA = "0xBB5ADC")]
		public Selector(string name)
		{
		}

		[Token(Token = "0x600184C")]
		[Address(RVA = "0xBB5B04", Offset = "0xBB5B04", VA = "0xBB5B04")]
		public Selector(string name, Flair[] flairs)
		{
		}

		[Token(Token = "0x600184D")]
		[Address(RVA = "0xBB5B30", Offset = "0xBB5B30", VA = "0xBB5B30")]
		public static Selector FromString(string selectorStr)
		{
			return null;
		}

		[Token(Token = "0x600184E")]
		[Address(RVA = "0xBB5CD8", Offset = "0xBB5CD8", VA = "0xBB5CD8")]
		public bool Match(Transform transform)
		{
			return default(bool);
		}

		[Token(Token = "0x600184F")]
		[Address(RVA = "0xBB5D4C", Offset = "0xBB5D4C", VA = "0xBB5D4C")]
		private bool MatchName(string nodeName)
		{
			return default(bool);
		}

		[Token(Token = "0x6001850")]
		[Address(RVA = "0xBB5DCC", Offset = "0xBB5DCC", VA = "0xBB5DCC")]
		private bool MatchFlairs(Transform transform)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20004B3")]
	public class SelectorChain
	{
		[Token(Token = "0x4001783")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private List<Selector> _chain;

		[Token(Token = "0x6001851")]
		[Address(RVA = "0xBB5E58", Offset = "0xBB5E58", VA = "0xBB5E58")]
		public SelectorChain(string fullSelector)
		{
		}

		[Token(Token = "0x6001852")]
		[Address(RVA = "0xBB603C", Offset = "0xBB603C", VA = "0xBB603C")]
		public bool Match(Transform transform)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20004B4")]
	public static class SuperFind
	{
		[Token(Token = "0x6001853")]
		[Address(RVA = "0xBB61B0", Offset = "0xBB61B0", VA = "0xBB61B0")]
		public static GameObject Find(string selector)
		{
			return null;
		}

		[Token(Token = "0x6001854")]
		[Address(RVA = "0xBB6338", Offset = "0xBB6338", VA = "0xBB6338")]
		public static GameObject[] FindAll(string selector)
		{
			return null;
		}

		[Token(Token = "0x6001855")]
		[Address(RVA = "0xBB6520", Offset = "0xBB6520", VA = "0xBB6520")]
		private static GameObject[] GetGameObjectsFromTransforms(Transform[] transforms)
		{
			return null;
		}

		[Token(Token = "0x6001856")]
		[Address(RVA = "0xBB660C", Offset = "0xBB660C", VA = "0xBB660C")]
		public static string NamesOfTransforms(Transform[] transforms, bool ids = false)
		{
			return null;
		}
	}
	[Token(Token = "0x20004B5")]
	public class FindAllVisitor : IVisitor
	{
		[Token(Token = "0x4001784")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private List<Transform> _foundTransforms;

		[Token(Token = "0x4001785")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private SelectorChain _selectors;

		[Token(Token = "0x6001857")]
		[Address(RVA = "0xBB6440", Offset = "0xBB6440", VA = "0xBB6440")]
		public FindAllVisitor(SelectorChain selectors)
		{
		}

		[Token(Token = "0x6001858")]
		[Address(RVA = "0xBB6884", Offset = "0xBB6884", VA = "0xBB6884", Slot = "4")]
		public void Visit(INode node)
		{
		}

		[Token(Token = "0x6001859")]
		[Address(RVA = "0xBB6A10", Offset = "0xBB6A10", VA = "0xBB6A10", Slot = "5")]
		public bool ShortCircuit()
		{
			return default(bool);
		}

		[Token(Token = "0x600185A")]
		[Address(RVA = "0xBB694C", Offset = "0xBB694C", VA = "0xBB694C")]
		public void Visit(TransformNode node)
		{
		}

		[Token(Token = "0x600185B")]
		[Address(RVA = "0xBB6A18", Offset = "0xBB6A18", VA = "0xBB6A18")]
		private bool MatchesSelectors(Transform transform)
		{
			return default(bool);
		}

		[Token(Token = "0x600185C")]
		[Address(RVA = "0xBB64D0", Offset = "0xBB64D0", VA = "0xBB64D0")]
		public Transform[] GetTransforms()
		{
			return null;
		}
	}
	[Token(Token = "0x20004B6")]
	public class FindVisitor : IVisitor
	{
		[Token(Token = "0x4001786")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Transform _result;

		[Token(Token = "0x4001787")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private SelectorChain _selectors;

		[Token(Token = "0x600185D")]
		[Address(RVA = "0xBB6310", Offset = "0xBB6310", VA = "0xBB6310")]
		public FindVisitor(SelectorChain selectors)
		{
		}

		[Token(Token = "0x600185E")]
		[Address(RVA = "0xBB6A30", Offset = "0xBB6A30", VA = "0xBB6A30", Slot = "4")]
		public void Visit(INode node)
		{
		}

		[Token(Token = "0x600185F")]
		[Address(RVA = "0xBB6B34", Offset = "0xBB6B34", VA = "0xBB6B34", Slot = "5")]
		public bool ShortCircuit()
		{
			return default(bool);
		}

		[Token(Token = "0x6001860")]
		[Address(RVA = "0xBB6AF8", Offset = "0xBB6AF8", VA = "0xBB6AF8")]
		public void Visit(TransformNode node)
		{
		}

		[Token(Token = "0x6001861")]
		[Address(RVA = "0xBB6B94", Offset = "0xBB6B94", VA = "0xBB6B94")]
		private bool MatchesSelectors(Transform transform)
		{
			return default(bool);
		}

		[Token(Token = "0x6001862")]
		[Address(RVA = "0xBB6BAC", Offset = "0xBB6BAC", VA = "0xBB6BAC")]
		public Transform GetTransform()
		{
			return null;
		}
	}
	[Token(Token = "0x20004B7")]
	public interface IVisitor
	{
		[Token(Token = "0x6001863")]
		void Visit(INode node);

		[Token(Token = "0x6001864")]
		bool ShortCircuit();
	}
}
namespace ProceduralPrimitivesUtil
{
	[Token(Token = "0x20004B8")]
	public class Arrow : PPBase
	{
		[Token(Token = "0x4001788")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[Header("Basic parameters")]
		public float width1;

		[Token(Token = "0x4001789")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		public float width2;

		[Token(Token = "0x400178A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public float width3;

		[Token(Token = "0x400178B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		public float length1;

		[Token(Token = "0x400178C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public float length2;

		[Token(Token = "0x400178D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		public float height;

		[Token(Token = "0x400178E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[Header("Segments")]
		public int widthSegs1;

		[Token(Token = "0x400178F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		public int lengthSegs1;

		[Token(Token = "0x4001790")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public int widthSegs2;

		[Token(Token = "0x4001791")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		public int lengthSegs2;

		[Token(Token = "0x4001792")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public int heightSegs;

		[Token(Token = "0x4001793")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		[Header("Mapping Coordinates")]
		public bool generateMappingCoords;

		[Token(Token = "0x4001794")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA5")]
		public bool realWorldMapSize;

		[Token(Token = "0x4001795")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public Vector2 UVOffset;

		[Token(Token = "0x4001796")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public Vector2 UVTiling;

		[Token(Token = "0x4001797")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[Header("Others")]
		public bool flipNormals;

		[Token(Token = "0x6001865")]
		[Address(RVA = "0xBB6BB4", Offset = "0xBB6BB4", VA = "0xBB6BB4", Slot = "4")]
		protected override void CreateMesh()
		{
		}

		[Token(Token = "0x6001866")]
		[Address(RVA = "0xBB7F20", Offset = "0xBB7F20", VA = "0xBB7F20")]
		public Arrow()
		{
		}
	}
	[Token(Token = "0x20004B9")]
	public class Box : PPBase
	{
		[Token(Token = "0x4001798")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[Header("Basic parameters")]
		public float width;

		[Token(Token = "0x4001799")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		public float length;

		[Token(Token = "0x400179A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public float height;

		[Token(Token = "0x400179B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		[Header("Segments")]
		public int widthSegs;

		[Token(Token = "0x400179C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public int lengthSegs;

		[Token(Token = "0x400179D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		public int heightSegs;

		[Token(Token = "0x400179E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[Header("Mapping Coordinates")]
		public bool generateMappingCoords;

		[Token(Token = "0x400179F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x91")]
		public bool realWorldMapSize;

		[Token(Token = "0x40017A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		public Vector2 UVOffset;

		[Token(Token = "0x40017A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		public Vector2 UVTiling;

		[Token(Token = "0x40017A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		[Header("Others")]
		public bool flipNormals;

		[Token(Token = "0x6001867")]
		[Address(RVA = "0xBB7F64", Offset = "0xBB7F64", VA = "0xBB7F64", Slot = "4")]
		protected override void CreateMesh()
		{
		}

		[Token(Token = "0x6001868")]
		[Address(RVA = "0xBB88F0", Offset = "0xBB88F0", VA = "0xBB88F0")]
		public Box()
		{
		}
	}
	[Token(Token = "0x20004BA")]
	public class Capsule : PPBase
	{
		[Token(Token = "0x40017A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[Header("Basic parameters")]
		public float radius;

		[Token(Token = "0x40017A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		public float height;

		[Token(Token = "0x40017A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[Header("Segments")]
		public int sides;

		[Token(Token = "0x40017A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		public int heightSegs;

		[Token(Token = "0x40017A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[Header("Slice")]
		public bool sliceOn;

		[Token(Token = "0x40017A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		public float sliceFrom;

		[Token(Token = "0x40017A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public float sliceTo;

		[Token(Token = "0x40017AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		[Header("Mapping Coordinates")]
		public bool generateMappingCoords;

		[Token(Token = "0x40017AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x95")]
		public bool realWorldMapSize;

		[Token(Token = "0x40017AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public Vector2 UVOffset;

		[Token(Token = "0x40017AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public Vector2 UVTiling;

		[Token(Token = "0x40017AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[Header("Others")]
		public bool flipNormals;

		[Token(Token = "0x40017AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA9")]
		public bool smooth;

		[Token(Token = "0x6001869")]
		[Address(RVA = "0xBB892C", Offset = "0xBB892C", VA = "0xBB892C", Slot = "4")]
		protected override void CreateMesh()
		{
		}

		[Token(Token = "0x600186A")]
		[Address(RVA = "0xBB9B14", Offset = "0xBB9B14", VA = "0xBB9B14")]
		public Capsule()
		{
		}
	}
	[Token(Token = "0x20004BB")]
	public class ChamferBox : PPBase
	{
		[Token(Token = "0x40017B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[Header("Basic parameters")]
		public float width;

		[Token(Token = "0x40017B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		public float length;

		[Token(Token = "0x40017B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public float height;

		[Token(Token = "0x40017B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		public float fillet;

		[Token(Token = "0x40017B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[Header("Segments")]
		public int widthSegs;

		[Token(Token = "0x40017B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		public int lengthSegs;

		[Token(Token = "0x40017B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public int heightSegs;

		[Token(Token = "0x40017B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		public int filletSegs;

		[Token(Token = "0x40017B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[Header("Mapping Coordinates")]
		public bool generateMappingCoords;

		[Token(Token = "0x40017B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x99")]
		public bool realWorldMapSize;

		[Token(Token = "0x40017BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		public Vector2 UVOffset;

		[Token(Token = "0x40017BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		public Vector2 UVTiling;

		[Token(Token = "0x40017BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		[Header("Others")]
		public bool flipNormals;

		[Token(Token = "0x40017BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAD")]
		public bool smooth;

		[Token(Token = "0x600186B")]
		[Address(RVA = "0xBB9B50", Offset = "0xBB9B50", VA = "0xBB9B50", Slot = "4")]
		protected override void CreateMesh()
		{
		}

		[Token(Token = "0x600186C")]
		[Address(RVA = "0xBBC560", Offset = "0xBBC560", VA = "0xBBC560")]
		public ChamferBox()
		{
		}
	}
	[Token(Token = "0x20004BC")]
	public class ChamferCylinder : PPBase
	{
		[Token(Token = "0x40017BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[Header("Basic parameters")]
		public float radius;

		[Token(Token = "0x40017BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		public float height;

		[Token(Token = "0x40017C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public float fillet;

		[Token(Token = "0x40017C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		[Header("Segments")]
		public int sides;

		[Token(Token = "0x40017C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public int capSegs;

		[Token(Token = "0x40017C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		public int heightSegs;

		[Token(Token = "0x40017C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public int filletSegs;

		[Token(Token = "0x40017C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		[Header("Slice")]
		public bool sliceOn;

		[Token(Token = "0x40017C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public float sliceFrom;

		[Token(Token = "0x40017C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		public float sliceTo;

		[Token(Token = "0x40017C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[Header("Mapping Coordinates")]
		public bool generateMappingCoords;

		[Token(Token = "0x40017C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA1")]
		public bool realWorldMapSize;

		[Token(Token = "0x40017CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		public Vector2 UVOffset;

		[Token(Token = "0x40017CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		public Vector2 UVTiling;

		[Token(Token = "0x40017CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		[Header("Others")]
		public bool flipNormals;

		[Token(Token = "0x40017CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB5")]
		public bool smooth;

		[Token(Token = "0x600186D")]
		[Address(RVA = "0xBBC598", Offset = "0xBBC598", VA = "0xBBC598", Slot = "4")]
		protected override void CreateMesh()
		{
		}

		[Token(Token = "0x600186E")]
		[Address(RVA = "0xBBE72C", Offset = "0xBBE72C", VA = "0xBBE72C")]
		public ChamferCylinder()
		{
		}
	}
	[Token(Token = "0x20004BD")]
	public class ChamferPlane : PPBase
	{
		[Token(Token = "0x40017CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[Header("Basic parameters")]
		public float width;

		[Token(Token = "0x40017CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		public float length;

		[Token(Token = "0x40017D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public float fillet;

		[Token(Token = "0x40017D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		[Header("Segments")]
		public int widthSegs;

		[Token(Token = "0x40017D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public int lengthSegs;

		[Token(Token = "0x40017D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		public int filletSegs;

		[Token(Token = "0x40017D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[Header("Mapping Coordinates")]
		public bool generateMappingCoords;

		[Token(Token = "0x40017D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x91")]
		public bool realWorldMapSize;

		[Token(Token = "0x40017D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		public Vector2 UVOffset;

		[Token(Token = "0x40017D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		public Vector2 UVTiling;

		[Token(Token = "0x40017D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		[Header("Others")]
		public bool flipNormals;

		[Token(Token = "0x600186F")]
		[Address(RVA = "0xBBE778", Offset = "0xBBE778", VA = "0xBBE778", Slot = "4")]
		protected override void CreateMesh()
		{
		}

		[Token(Token = "0x6001870")]
		[Address(RVA = "0xBBF740", Offset = "0xBBF740", VA = "0xBBF740")]
		public ChamferPlane()
		{
		}
	}
	[Token(Token = "0x20004BE")]
	public class Circle : PPBase
	{
		[Token(Token = "0x40017D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[Header("Basic parameters")]
		public float radius;

		[Token(Token = "0x40017DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		[Header("Segments")]
		public int sides;

		[Token(Token = "0x40017DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public int segments;

		[Token(Token = "0x40017DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		[Header("Slice")]
		public bool sliceOn;

		[Token(Token = "0x40017DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public float sliceFrom;

		[Token(Token = "0x40017DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		public float sliceTo;

		[Token(Token = "0x40017DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[Header("Mapping Coordinates")]
		public bool generateMappingCoords;

		[Token(Token = "0x40017E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x91")]
		public bool realWorldMapSize;

		[Token(Token = "0x40017E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		public Vector2 UVOffset;

		[Token(Token = "0x40017E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		public Vector2 UVTiling;

		[Token(Token = "0x40017E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		[Header("Others")]
		public bool flipNormals;

		[Token(Token = "0x6001871")]
		[Address(RVA = "0xBBF780", Offset = "0xBBF780", VA = "0xBBF780", Slot = "4")]
		protected override void CreateMesh()
		{
		}

		[Token(Token = "0x6001872")]
		[Address(RVA = "0xBBFE3C", Offset = "0xBBFE3C", VA = "0xBBFE3C")]
		public Circle()
		{
		}
	}
	[Token(Token = "0x20004BF")]
	public class Cone : PPBase
	{
		[Token(Token = "0x40017E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[Header("Basic parameters")]
		public float radius1;

		[Token(Token = "0x40017E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		public float radius2;

		[Token(Token = "0x40017E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public float height;

		[Token(Token = "0x40017E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		[Header("Segments")]
		public int sides;

		[Token(Token = "0x40017E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public int capSegs;

		[Token(Token = "0x40017E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		public int heightSegs;

		[Token(Token = "0x40017EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[Header("Slice")]
		public bool sliceOn;

		[Token(Token = "0x40017EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		public float sliceFrom;

		[Token(Token = "0x40017EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public float sliceTo;

		[Token(Token = "0x40017ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		[Header("Mapping Coordinates")]
		public bool generateMappingCoords;

		[Token(Token = "0x40017EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9D")]
		public bool realWorldMapSize;

		[Token(Token = "0x40017EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public Vector2 UVOffset;

		[Token(Token = "0x40017F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public Vector2 UVTiling;

		[Token(Token = "0x40017F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[Header("Others")]
		public bool flipNormals;

		[Token(Token = "0x40017F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB1")]
		public bool smooth;

		[Token(Token = "0x6001873")]
		[Address(RVA = "0xBBFF98", Offset = "0xBBFF98", VA = "0xBBFF98", Slot = "4")]
		protected override void CreateMesh()
		{
		}

		[Token(Token = "0x6001874")]
		[Address(RVA = "0xBC10AC", Offset = "0xBC10AC", VA = "0xBC10AC")]
		public Cone()
		{
		}
	}
	[Token(Token = "0x20004C0")]
	public class Cylinder : PPBase
	{
		[Token(Token = "0x40017F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[Header("Basic parameters")]
		public float radius;

		[Token(Token = "0x40017F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		public float height;

		[Token(Token = "0x40017F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[Header("Segments")]
		public int sides;

		[Token(Token = "0x40017F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		public int capSegs;

		[Token(Token = "0x40017F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public int heightSegs;

		[Token(Token = "0x40017F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		[Header("Slice")]
		public bool sliceOn;

		[Token(Token = "0x40017F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public float sliceFrom;

		[Token(Token = "0x40017FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		public float sliceTo;

		[Token(Token = "0x40017FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[Header("Mapping Coordinates")]
		public bool generateMappingCoords;

		[Token(Token = "0x40017FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x99")]
		public bool realWorldMapSize;

		[Token(Token = "0x40017FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		public Vector2 UVOffset;

		[Token(Token = "0x40017FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		public Vector2 UVTiling;

		[Token(Token = "0x40017FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		[Header("Others")]
		public bool flipNormals;

		[Token(Token = "0x4001800")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAD")]
		public bool smooth;

		[Token(Token = "0x6001875")]
		[Address(RVA = "0xBC10F8", Offset = "0xBC10F8", VA = "0xBC10F8", Slot = "4")]
		protected override void CreateMesh()
		{
		}

		[Token(Token = "0x6001876")]
		[Address(RVA = "0xBC22F4", Offset = "0xBC22F4", VA = "0xBC22F4")]
		public Cylinder()
		{
		}
	}
	[Token(Token = "0x20004C1")]
	public class DoubleSphere : PPBase
	{
		[Token(Token = "0x4001801")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[Header("Basic parameters")]
		public float radius1;

		[Token(Token = "0x4001802")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		public float radius2;

		[Token(Token = "0x4001803")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[Header("Segments")]
		public int segments;

		[Token(Token = "0x4001804")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		[Header("Slice")]
		public bool sliceOn;

		[Token(Token = "0x4001805")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public float sliceFrom;

		[Token(Token = "0x4001806")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		public float sliceTo;

		[Token(Token = "0x4001807")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public SphereCutOption cutTpye;

		[Token(Token = "0x4001808")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		public float cutFrom;

		[Token(Token = "0x4001809")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public float cutTo;

		[Token(Token = "0x400180A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		[Header("Mapping Coordinates")]
		public bool generateMappingCoords;

		[Token(Token = "0x400180B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9D")]
		public bool realWorldMapSize;

		[Token(Token = "0x400180C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public Vector2 UVOffset;

		[Token(Token = "0x400180D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public Vector2 UVTiling;

		[Token(Token = "0x400180E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[Header("Others")]
		public bool flipNormals;

		[Token(Token = "0x400180F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB1")]
		public bool smooth;

		[Token(Token = "0x6001877")]
		[Address(RVA = "0xBC2334", Offset = "0xBC2334", VA = "0xBC2334", Slot = "4")]
		protected override void CreateMesh()
		{
		}

		[Token(Token = "0x6001878")]
		[Address(RVA = "0xBC71E8", Offset = "0xBC71E8", VA = "0xBC71E8")]
		public DoubleSphere()
		{
		}
	}
	[Token(Token = "0x20004C2")]
	public class Plane : PPBase
	{
		[Token(Token = "0x4001810")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[Header("Basic parameters")]
		public float width;

		[Token(Token = "0x4001811")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		public float length;

		[Token(Token = "0x4001812")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[Header("Segments")]
		public int widthSegs;

		[Token(Token = "0x4001813")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		public int lengthSegs;

		[Token(Token = "0x4001814")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[Header("Mapping Coordinates")]
		public bool generateMappingCoords;

		[Token(Token = "0x4001815")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x89")]
		public bool realWorldMapSize;

		[Token(Token = "0x4001816")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		public Vector2 UVOffset;

		[Token(Token = "0x4001817")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		public Vector2 UVTiling;

		[Token(Token = "0x4001818")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		[Header("Others")]
		public bool flipNormals;

		[Token(Token = "0x6001879")]
		[Address(RVA = "0xBC7230", Offset = "0xBC7230", VA = "0xBC7230", Slot = "4")]
		protected override void CreateMesh()
		{
		}

		[Token(Token = "0x600187A")]
		[Address(RVA = "0xBC7464", Offset = "0xBC7464", VA = "0xBC7464")]
		public Plane()
		{
		}
	}
	[Token(Token = "0x20004C3")]
	public class Prism : PPBase
	{
		[Token(Token = "0x4001819")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[Header("Basic parameters")]
		public float width;

		[Token(Token = "0x400181A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		public float length;

		[Token(Token = "0x400181B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public float height;

		[Token(Token = "0x400181C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		public float offset;

		[Token(Token = "0x400181D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[Header("Segments")]
		public int sideSegs;

		[Token(Token = "0x400181E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		public int heightSegs;

		[Token(Token = "0x400181F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[Header("Mapping Coordinates")]
		public bool generateMappingCoords;

		[Token(Token = "0x4001820")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x91")]
		public bool realWorldMapSize;

		[Token(Token = "0x4001821")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		public Vector2 UVOffset;

		[Token(Token = "0x4001822")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		public Vector2 UVTiling;

		[Token(Token = "0x4001823")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		[Header("Others")]
		public bool flipNormals;

		[Token(Token = "0x600187B")]
		[Address(RVA = "0xBC7488", Offset = "0xBC7488", VA = "0xBC7488", Slot = "4")]
		protected override void CreateMesh()
		{
		}

		[Token(Token = "0x600187C")]
		[Address(RVA = "0xBC81D8", Offset = "0xBC81D8", VA = "0xBC81D8")]
		public Prism()
		{
		}
	}
	[Token(Token = "0x20004C4")]
	public class Pyramid : PPBase
	{
		[Token(Token = "0x4001824")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[Header("Basic parameters")]
		public float width1;

		[Token(Token = "0x4001825")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		public float length1;

		[Token(Token = "0x4001826")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public float width2;

		[Token(Token = "0x4001827")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		public float length2;

		[Token(Token = "0x4001828")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public float height;

		[Token(Token = "0x4001829")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		[Header("Segments")]
		public int widthSegs;

		[Token(Token = "0x400182A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public int lengthSegs;

		[Token(Token = "0x400182B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		public int heightSegs;

		[Token(Token = "0x400182C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[Header("Mapping Coordinates")]
		public bool generateMappingCoords;

		[Token(Token = "0x400182D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x99")]
		public bool realWorldMapSize;

		[Token(Token = "0x400182E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		public Vector2 UVOffset;

		[Token(Token = "0x400182F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		public Vector2 UVTiling;

		[Token(Token = "0x4001830")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		[Header("Others")]
		public bool flipNormals;

		[Token(Token = "0x600187D")]
		[Address(RVA = "0xBC8208", Offset = "0xBC8208", VA = "0xBC8208", Slot = "4")]
		protected override void CreateMesh()
		{
		}

		[Token(Token = "0x600187E")]
		[Address(RVA = "0xBC8CE8", Offset = "0xBC8CE8", VA = "0xBC8CE8")]
		public Pyramid()
		{
		}
	}
	[Token(Token = "0x20004C5")]
	public class RectTube : PPBase
	{
		[Token(Token = "0x4001831")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[Header("Basic parameters")]
		public float width1;

		[Token(Token = "0x4001832")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		public float width2;

		[Token(Token = "0x4001833")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public float length1;

		[Token(Token = "0x4001834")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		public float length2;

		[Token(Token = "0x4001835")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public float height;

		[Token(Token = "0x4001836")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		public bool cap1;

		[Token(Token = "0x4001837")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public float capThickness1;

		[Token(Token = "0x4001838")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		public bool cap2;

		[Token(Token = "0x4001839")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public float capThickness2;

		[Token(Token = "0x400183A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		[Header("Segments")]
		public int widthSegs;

		[Token(Token = "0x400183B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public int lengthSegs;

		[Token(Token = "0x400183C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		public int heightSegs;

		[Token(Token = "0x400183D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public int capSegs;

		[Token(Token = "0x400183E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		[Header("Mapping Coordinates")]
		public bool generateMappingCoords;

		[Token(Token = "0x400183F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAD")]
		public bool realWorldMapSize;

		[Token(Token = "0x4001840")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public Vector2 UVOffset;

		[Token(Token = "0x4001841")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public Vector2 UVTiling;

		[Token(Token = "0x4001842")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[Header("Others")]
		public bool flipNormals;

		[Token(Token = "0x600187F")]
		[Address(RVA = "0xBC8D24", Offset = "0xBC8D24", VA = "0xBC8D24", Slot = "4")]
		protected override void CreateMesh()
		{
		}

		[Token(Token = "0x6001880")]
		[Address(RVA = "0xBCAC30", Offset = "0xBCAC30", VA = "0xBCAC30")]
		public RectTube()
		{
		}
	}
	[Token(Token = "0x20004C6")]
	public class Ring : PPBase
	{
		[Token(Token = "0x4001843")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[Header("Basic parameters")]
		public float radius1;

		[Token(Token = "0x4001844")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		public float radius2;

		[Token(Token = "0x4001845")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[Header("Segments")]
		public int sides;

		[Token(Token = "0x4001846")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		public int segments;

		[Token(Token = "0x4001847")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[Header("Slice")]
		public bool sliceOn;

		[Token(Token = "0x4001848")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		public float sliceFrom;

		[Token(Token = "0x4001849")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public float sliceTo;

		[Token(Token = "0x400184A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		[Header("Mapping Coordinates")]
		public bool generateMappingCoords;

		[Token(Token = "0x400184B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x95")]
		public bool realWorldMapSize;

		[Token(Token = "0x400184C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public Vector2 UVOffset;

		[Token(Token = "0x400184D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public Vector2 UVTiling;

		[Token(Token = "0x400184E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[Header("Others")]
		public bool flipNormals;

		[Token(Token = "0x6001881")]
		[Address(RVA = "0xBCAC74", Offset = "0xBCAC74", VA = "0xBCAC74", Slot = "4")]
		protected override void CreateMesh()
		{
		}

		[Token(Token = "0x6001882")]
		[Address(RVA = "0xBCAEF0", Offset = "0xBCAEF0", VA = "0xBCAEF0")]
		public Ring()
		{
		}
	}
	[Token(Token = "0x20004C7")]
	public class Sphere : PPBase
	{
		[Token(Token = "0x400184F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[Header("Basic parameters")]
		public float radius;

		[Token(Token = "0x4001850")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		[Header("Segments")]
		public int segments;

		[Token(Token = "0x4001851")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[Header("Slice")]
		public bool sliceOn;

		[Token(Token = "0x4001852")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		public float sliceFrom;

		[Token(Token = "0x4001853")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public float sliceTo;

		[Token(Token = "0x4001854")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		public SphereCutOption cutTpye;

		[Token(Token = "0x4001855")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public float cutFrom;

		[Token(Token = "0x4001856")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		public float cutTo;

		[Token(Token = "0x4001857")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[Header("Mapping Coordinates")]
		public bool generateMappingCoords;

		[Token(Token = "0x4001858")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x99")]
		public bool realWorldMapSize;

		[Token(Token = "0x4001859")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		public Vector2 UVOffset;

		[Token(Token = "0x400185A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		public Vector2 UVTiling;

		[Token(Token = "0x400185B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		[Header("Others")]
		public bool flipNormals;

		[Token(Token = "0x400185C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAD")]
		public bool smooth;

		[Token(Token = "0x6001883")]
		[Address(RVA = "0xBCAF24", Offset = "0xBCAF24", VA = "0xBCAF24", Slot = "4")]
		protected override void CreateMesh()
		{
		}

		[Token(Token = "0x6001884")]
		[Address(RVA = "0xBCD098", Offset = "0xBCD098", VA = "0xBCD098")]
		public Sphere()
		{
		}
	}
	[Token(Token = "0x20004C8")]
	public class Torus : PPBase
	{
		[Token(Token = "0x400185D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[Header("Basic parameters")]
		public float radius1;

		[Token(Token = "0x400185E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		public float radius2;

		[Token(Token = "0x400185F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[Header("Segments")]
		public int sides;

		[Token(Token = "0x4001860")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		public int segments;

		[Token(Token = "0x4001861")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[Header("Slice")]
		public bool sliceOn;

		[Token(Token = "0x4001862")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		public float sliceFrom;

		[Token(Token = "0x4001863")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public float sliceTo;

		[Token(Token = "0x4001864")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		[Header("Mapping Coordinates")]
		public bool generateMappingCoords;

		[Token(Token = "0x4001865")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x95")]
		public bool realWorldMapSize;

		[Token(Token = "0x4001866")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public Vector2 UVOffset;

		[Token(Token = "0x4001867")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public Vector2 UVTiling;

		[Token(Token = "0x4001868")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[Header("Others")]
		public bool flipNormals;

		[Token(Token = "0x4001869")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA9")]
		public bool smooth;

		[Token(Token = "0x6001885")]
		[Address(RVA = "0xBCD0D0", Offset = "0xBCD0D0", VA = "0xBCD0D0", Slot = "4")]
		protected override void CreateMesh()
		{
		}

		[Token(Token = "0x6001886")]
		[Address(RVA = "0xBCDEF8", Offset = "0xBCDEF8", VA = "0xBCDEF8")]
		public Torus()
		{
		}
	}
	[Token(Token = "0x20004C9")]
	public class Trapezoid : PPBase
	{
		[Token(Token = "0x400186A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[Header("Basic parameters")]
		public float width1;

		[Token(Token = "0x400186B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		public float width2;

		[Token(Token = "0x400186C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public float length;

		[Token(Token = "0x400186D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		public float offset;

		[Token(Token = "0x400186E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[Header("Segments")]
		public int widthSegs;

		[Token(Token = "0x400186F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		public int lengthSegs;

		[Token(Token = "0x4001870")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[Header("Mapping Coordinates")]
		public bool generateMappingCoords;

		[Token(Token = "0x4001871")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x91")]
		public bool realWorldMapSize;

		[Token(Token = "0x4001872")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		public Vector2 UVOffset;

		[Token(Token = "0x4001873")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		public Vector2 UVTiling;

		[Token(Token = "0x4001874")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		[Header("Others")]
		public bool flipNormals;

		[Token(Token = "0x6001887")]
		[Address(RVA = "0xBCDF30", Offset = "0xBCDF30", VA = "0xBCDF30", Slot = "4")]
		protected override void CreateMesh()
		{
		}

		[Token(Token = "0x6001888")]
		[Address(RVA = "0xBCE19C", Offset = "0xBCE19C", VA = "0xBCE19C")]
		public Trapezoid()
		{
		}
	}
	[Token(Token = "0x20004CA")]
	public class Triangle : PPBase
	{
		[Token(Token = "0x4001875")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[Header("Basic parameters")]
		public float width;

		[Token(Token = "0x4001876")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		public float length;

		[Token(Token = "0x4001877")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public float offset;

		[Token(Token = "0x4001878")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		[Header("Segments")]
		public int widthSegs;

		[Token(Token = "0x4001879")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public int lengthSegs;

		[Token(Token = "0x400187A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		[Header("Mapping Coordinates")]
		public bool generateMappingCoords;

		[Token(Token = "0x400187B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8D")]
		public bool realWorldMapSize;

		[Token(Token = "0x400187C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public Vector2 UVOffset;

		[Token(Token = "0x400187D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public Vector2 UVTiling;

		[Token(Token = "0x400187E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[Header("Others")]
		public bool flipNormals;

		[Token(Token = "0x400187F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA1")]
		public bool uniformTriangle;

		[Token(Token = "0x6001889")]
		[Address(RVA = "0xBCE1D0", Offset = "0xBCE1D0", VA = "0xBCE1D0", Slot = "4")]
		protected override void CreateMesh()
		{
		}

		[Token(Token = "0x600188A")]
		[Address(RVA = "0xBCE828", Offset = "0xBCE828", VA = "0xBCE828")]
		public Triangle()
		{
		}
	}
	[Token(Token = "0x20004CB")]
	public class Tube : PPBase
	{
		[Token(Token = "0x4001880")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[Header("Basic parameters")]
		public float radius1;

		[Token(Token = "0x4001881")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		public float radius2;

		[Token(Token = "0x4001882")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public float height;

		[Token(Token = "0x4001883")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		public bool cap1;

		[Token(Token = "0x4001884")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public float capThickness1;

		[Token(Token = "0x4001885")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		public bool cap2;

		[Token(Token = "0x4001886")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public float capThickness2;

		[Token(Token = "0x4001887")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		[Header("Segments")]
		public int sides;

		[Token(Token = "0x4001888")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public int capSegs;

		[Token(Token = "0x4001889")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		public int heightSegs;

		[Token(Token = "0x400188A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[Header("Slice")]
		public bool sliceOn;

		[Token(Token = "0x400188B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		public float sliceFrom;

		[Token(Token = "0x400188C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public float sliceTo;

		[Token(Token = "0x400188D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		[Header("Mapping Coordinates")]
		public bool generateMappingCoords;

		[Token(Token = "0x400188E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAD")]
		public bool realWorldMapSize;

		[Token(Token = "0x400188F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public Vector2 UVOffset;

		[Token(Token = "0x4001890")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public Vector2 UVTiling;

		[Token(Token = "0x4001891")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[Header("Others")]
		public bool flipNormals;

		[Token(Token = "0x4001892")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC1")]
		public bool smooth;

		[Token(Token = "0x600188B")]
		[Address(RVA = "0xBCE854", Offset = "0xBCE854", VA = "0xBCE854", Slot = "4")]
		protected override void CreateMesh()
		{
		}

		[Token(Token = "0x600188C")]
		[Address(RVA = "0xBCFF88", Offset = "0xBCFF88", VA = "0xBCFF88")]
		public Tube()
		{
		}
	}
	[Token(Token = "0x20004CC")]
	public enum SphereCutOption
	{
		[Token(Token = "0x4001894")]
		None,
		[Token(Token = "0x4001895")]
		HemiSphere,
		[Token(Token = "0x4001896")]
		SphericalSector
	}
	[Token(Token = "0x20004CD")]
	[ExecuteInEditMode]
	public abstract class PPBase : MonoBehaviour
	{
		[Token(Token = "0x4001897")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected List<Vector3> m_vertices;

		[Token(Token = "0x4001898")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		protected List<int> m_triangles;

		[Token(Token = "0x4001899")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		protected List<Vector3> m_normals;

		[Token(Token = "0x400189A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		protected List<Vector2> m_uv;

		[Token(Token = "0x400189B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool m_dirty;

		[Token(Token = "0x400189C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private MeshFilter m_meshFilter;

		[Token(Token = "0x400189D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		protected Mesh m_mesh;

		[Token(Token = "0x400189E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Vector3 pivotOffset;

		[Token(Token = "0x400189F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public Vector3 rotation;

		[Token(Token = "0x40018A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		protected Quaternion m_rotation;

		[Token(Token = "0x1700021E")]
		public bool isDirty
		{
			[Token(Token = "0x600188D")]
			[Address(RVA = "0xBCFFE4", Offset = "0xBCFFE4", VA = "0xBCFFE4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700021F")]
		public Mesh mesh
		{
			[Token(Token = "0x600188E")]
			[Address(RVA = "0xBCFFEC", Offset = "0xBCFFEC", VA = "0xBCFFEC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600188F")]
		[Address(RVA = "0xBCFFF4", Offset = "0xBCFFF4", VA = "0xBCFFF4")]
		public static float PointLineDistance(Vector3 vp, Vector3 v)
		{
			return default(float);
		}

		[Token(Token = "0x6001890")]
		[Address(RVA = "0xBD0104", Offset = "0xBD0104", VA = "0xBD0104")]
		public static float PointLineProjectionn(Vector3 vp, Vector3 v)
		{
			return default(float);
		}

		[Token(Token = "0x6001891")]
		[Address(RVA = "0xBD019C", Offset = "0xBD019C", VA = "0xBD019C")]
		protected void CreateTriangle(Vector3 p0, Vector3 p1, Vector3 p2)
		{
		}

		[Token(Token = "0x6001892")]
		[Address(RVA = "0xBD0738", Offset = "0xBD0738", VA = "0xBD0738")]
		protected void CreateTriangle(Vector3 p0, Vector3 p1, Vector3 p2, Vector2 p0uv, Vector2 p1uv, Vector2 p2uv)
		{
		}

		[Token(Token = "0x6001893")]
		[Address(RVA = "0xBD0E5C", Offset = "0xBD0E5C", VA = "0xBD0E5C")]
		protected void CreateQuad(Vector3 p0, Vector3 p1, Vector3 p2, Vector3 p3)
		{
		}

		[Token(Token = "0x6001894")]
		[Address(RVA = "0xBD16D4", Offset = "0xBD16D4", VA = "0xBD16D4")]
		protected void CreateQuad(Vector3 p0, Vector3 p1, Vector3 p2, Vector3 p3, Vector2 p0uv, Vector2 p1uv, Vector2 p2uv, Vector2 p3uv)
		{
		}

		[Token(Token = "0x6001895")]
		[Address(RVA = "0xBD2138", Offset = "0xBD2138", VA = "0xBD2138")]
		protected void CreateTriangle(Vector3 center, Vector3 forward, Vector3 right, float width, float length, float offset, int seg, bool generateUV, bool realWorldMapSize, bool flip)
		{
		}

		[Token(Token = "0x6001896")]
		[Address(RVA = "0xBC7E94", Offset = "0xBC7E94", VA = "0xBC7E94")]
		protected void CreateTriangle(Vector3 center, Vector3 forward, Vector3 right, float width, float length, float offset, int seg, bool generateUV, bool realWorldMapSize, Vector2 uvOffset, Vector2 uvTiling, bool flip)
		{
		}

		[Token(Token = "0x6001897")]
		[Address(RVA = "0xBD2294", Offset = "0xBD2294", VA = "0xBD2294")]
		protected void CreateTriangle(Vector3 p0, Vector3 p1, Vector3 p2, Vector3 normal, int seg, bool generateUV, Vector2 uvOffset, Vector2 uvTiling)
		{
		}

		[Token(Token = "0x6001898")]
		[Address(RVA = "0xBD2C1C", Offset = "0xBD2C1C", VA = "0xBD2C1C")]
		protected void CreateTriangle(Vector3 center, Vector3 forward, Vector3 right, float width, float length, float offset, int segW, int segL, bool generateUV, bool realWorldMapSize, bool flip)
		{
		}

		[Token(Token = "0x6001899")]
		[Address(RVA = "0xBCE4DC", Offset = "0xBCE4DC", VA = "0xBCE4DC")]
		protected void CreateTriangle(Vector3 center, Vector3 forward, Vector3 right, float width, float length, float offset, int segW, int segL, bool generateUV, bool realWorldMapSize, Vector2 uvOffset, Vector2 uvTiling, bool flip)
		{
		}

		[Token(Token = "0x600189A")]
		[Address(RVA = "0xBD2D88", Offset = "0xBD2D88", VA = "0xBD2D88")]
		protected void CreateTriangle(Vector3 p0, Vector3 p1, Vector3 p2, Vector3 normal, int segW, int segL, bool generateUV, Vector2 uvOffset, Vector2 uvTiling)
		{
		}

		[Token(Token = "0x600189B")]
		[Address(RVA = "0xBD36A4", Offset = "0xBD36A4", VA = "0xBD36A4")]
		protected void CreatePlane(Vector3 center, Vector3 forward, Vector3 right, float width, float length, int segW, int segL, bool generateUV, bool realWorldMapSize, bool flip)
		{
		}

		[Token(Token = "0x600189C")]
		[Address(RVA = "0xBC2038", Offset = "0xBC2038", VA = "0xBC2038")]
		protected void CreatePlane(Vector3 center, Vector3 forward, Vector3 right, float width, float length, int segW, int segL, bool generateUV, bool realWorldMapSize, Vector2 uvOffset, Vector2 uvTiling, bool flip)
		{
		}

		[Token(Token = "0x600189D")]
		[Address(RVA = "0xBD3808", Offset = "0xBD3808", VA = "0xBD3808")]
		protected void CreatePlane(Vector3 p0, Vector3 p1, Vector3 p2, Vector3 p3, Vector3 normal, int segW, int segL, bool generateUV, Vector2 uvOffset, Vector2 uvTiling)
		{
		}

		[Token(Token = "0x600189E")]
		[Address(RVA = "0xBD4044", Offset = "0xBD4044", VA = "0xBD4044")]
		protected void CreateTrapezoid(Vector3 center, Vector3 forward, Vector3 right, float width1, float width2, float length, float offset, int segW, int segL, bool generateUV, bool realWorldMapSize, bool flip)
		{
		}

		[Token(Token = "0x600189F")]
		[Address(RVA = "0xBC0CEC", Offset = "0xBC0CEC", VA = "0xBC0CEC")]
		protected void CreateTrapezoid(Vector3 center, Vector3 forward, Vector3 right, float width1, float width2, float length, float offset, int segW, int segL, bool generateUV, bool realWorldMapSize, Vector2 uvOffset, Vector2 uvTiling, bool flip)
		{
		}

		[Token(Token = "0x60018A0")]
		[Address(RVA = "0xBD41C0", Offset = "0xBD41C0", VA = "0xBD41C0")]
		protected void CreateTrapezoid(Vector3 p0, Vector3 p1, Vector3 p2, Vector3 p3, Vector3 normal, int segW, int segL, bool generateUV, Vector2 uvOffset, Vector2 uvTiling)
		{
		}

		[Token(Token = "0x60018A1")]
		[Address(RVA = "0xBD4AAC", Offset = "0xBD4AAC", VA = "0xBD4AAC")]
		protected void CreateCircle(Vector3 center, Vector3 forward, Vector3 right, float radius, int sides, int seg, bool generateUV, bool realWorldMapSize, bool flip)
		{
		}

		[Token(Token = "0x60018A2")]
		[Address(RVA = "0xBD4C10", Offset = "0xBD4C10", VA = "0xBD4C10")]
		protected void CreateCircle(Vector3 center, Vector3 forward, Vector3 right, float radius, int sides, int seg, bool sliceOn, float sliceFrom, float sliceTo, bool generateUV, bool realWorldMapSize, bool flip)
		{
		}

		[Token(Token = "0x60018A3")]
		[Address(RVA = "0xBBF9E8", Offset = "0xBBF9E8", VA = "0xBBF9E8")]
		protected void CreateCircle(Vector3 center, Vector3 forward, Vector3 right, float radius, int sides, int seg, bool sliceOn, float sliceFrom, float sliceTo, bool generateUV, bool realWorldMapSize, Vector2 uvOffset, Vector2 uvTiling, bool flip)
		{
		}

		[Token(Token = "0x60018A4")]
		[Address(RVA = "0xBD5898", Offset = "0xBD5898", VA = "0xBD5898")]
		protected void CreateHemiCircle(Vector3 center, Vector3 forward, Vector3 right, float radius, int sides, int seg, bool hemiCircle, float cutFrom, float cutTo, bool generateUV, bool realWorldMapSize, bool flip, bool isSector = false)
		{
		}

		[Token(Token = "0x60018A5")]
		[Address(RVA = "0xBCBF78", Offset = "0xBCBF78", VA = "0xBCBF78")]
		protected void CreateHemiCircle(Vector3 center, Vector3 forward, Vector3 right, float radius, int sides, int seg, bool hemiCircle, float cutFrom, float cutTo, bool generateUV, bool realWorldMapSize, Vector2 uvOffset, Vector2 uvTiling, bool flip, bool isSector = false)
		{
		}

		[Token(Token = "0x60018A6")]
		[Address(RVA = "0xBD4D84", Offset = "0xBD4D84", VA = "0xBD4D84")]
		protected void CreateCircle(Vector3[] points, Vector2[] uvs, Vector3 center, Vector3 normal, int seg, Vector2 uvOffset, Vector2 uvTiling, float centerUVOffset = 0f)
		{
		}

		[Token(Token = "0x60018A7")]
		[Address(RVA = "0xBD5A1C", Offset = "0xBD5A1C", VA = "0xBD5A1C")]
		protected void CreateRing(Vector3 center, Vector3 forward, Vector3 right, float radius1, float radius2, int sides, int seg, bool generateUV, bool realWorldMapSize, bool flip)
		{
		}

		[Token(Token = "0x60018A8")]
		[Address(RVA = "0xBD5B98", Offset = "0xBD5B98", VA = "0xBD5B98")]
		protected void CreateRing(Vector3 center, Vector3 forward, Vector3 right, float radius1, float radius2, int sides, int seg, bool sliceOn, float sliceFrom, float sliceTo, bool generateUV, bool realWorldMapSize, bool flip)
		{
		}

		[Token(Token = "0x60018A9")]
		[Address(RVA = "0xBC6D70", Offset = "0xBC6D70", VA = "0xBC6D70")]
		protected void CreateRing(Vector3 center, Vector3 forward, Vector3 right, float radius1, float radius2, int sides, int seg, bool sliceOn, float sliceFrom, float sliceTo, bool generateUV, bool realWorldMapSize, Vector2 uvOffset, Vector2 uvTiling, bool flip)
		{
		}

		[Token(Token = "0x60018AA")]
		[Address(RVA = "0xBD5D1C", Offset = "0xBD5D1C", VA = "0xBD5D1C")]
		protected void CreateRing(Vector3[] points, Vector2[] uvs, Vector3 center, Vector3 normal, float ratio, int seg, Vector2 uvOffset, Vector2 uvTiling, float centerUVOffset = 0f)
		{
		}

		[Token(Token = "0x60018AB")]
		[Address(RVA = "0xBD6550", Offset = "0xBD6550", VA = "0xBD6550")]
		protected void CreateHemiRing(Vector3 center, Vector3 forward, Vector3 right, float radius1, float radius2, int sides, int seg, bool hemiCircle, float cutFrom, float cutTo, bool generateUV, bool realWorldMapSize, bool flip, bool isSector = false)
		{
		}

		[Token(Token = "0x60018AC")]
		[Address(RVA = "0xBC3F34", Offset = "0xBC3F34", VA = "0xBC3F34")]
		protected void CreateHemiRing(Vector3 center, Vector3 forward, Vector3 right, float radius1, float radius2, int sides, int seg, bool hemiCircle, float cutFrom, float cutTo, bool generateUV, bool realWorldMapSize, Vector2 uvOffset, Vector2 uvTiling, bool flip, bool isSector = false)
		{
		}

		[Token(Token = "0x60018AD")]
		[Address(RVA = "0xBD66E8", Offset = "0xBD66E8", VA = "0xBD66E8")]
		protected void CreateRing(Vector3[] points, Vector3[] points2, Vector2[] uvs, Vector2[] uvs2, Vector3 center, Vector3 normal, int seg, Vector2 uvOffset, Vector2 uvTiling, float centerUVOffset = 0f)
		{
		}

		[Token(Token = "0x60018AE")]
		[Address(RVA = "0xBD6F78", Offset = "0xBD6F78", VA = "0xBD6F78")]
		protected void CreateTorus(Vector3 center, Vector3 forward, Vector3 right, float radius1, float radius2, int sides, int seg, bool sliceOn, float sliceFrom, float sliceTo, bool generateUV, bool realWorldMapSize, bool flip, bool smooth, float sectionSliceFrom = 0f, float sectionSliceTo = 360f)
		{
		}

		[Token(Token = "0x60018AF")]
		[Address(RVA = "0xBCD894", Offset = "0xBCD894", VA = "0xBCD894")]
		protected void CreateTorus(Vector3 center, Vector3 forward, Vector3 right, float radius1, float radius2, int sides, int seg, bool sliceOn, float sliceFrom, float sliceTo, bool generateUV, bool realWorldMapSize, Vector2 uvOffset, Vector2 uvTiling, bool flip, bool smooth, float sectionSliceFrom, float sectionSliceTo)
		{
		}

		[Token(Token = "0x60018B0")]
		[Address(RVA = "0xBD7118", Offset = "0xBD7118", VA = "0xBD7118")]
		protected void CreateTorus(Vector3[][] points, Vector3[] centers, int seg, bool generateUV, Vector2 uvOffset, Vector2 uvTiling, bool flip, bool smooth)
		{
		}

		[Token(Token = "0x60018B1")]
		[Address(RVA = "0xBD803C", Offset = "0xBD803C", VA = "0xBD803C")]
		protected void CreateCylinder(Vector3 center, Vector3 forward, Vector3 right, float height, float radius, int sides, int segHeight, bool sliceOn, float sliceFrom, float sliceTo, bool generateUV, bool realWorldMapSize, bool flip, bool smooth)
		{
		}

		[Token(Token = "0x60018B2")]
		[Address(RVA = "0xBC1B70", Offset = "0xBC1B70", VA = "0xBC1B70")]
		protected void CreateCylinder(Vector3 center, Vector3 forward, Vector3 right, float height, float radius, int sides, int segHeight, bool sliceOn, float sliceFrom, float sliceTo, bool generateUV, bool realWorldMapSize, Vector2 uvOffset, Vector2 uvTiling, bool flip, bool smooth)
		{
		}

		[Token(Token = "0x60018B3")]
		[Address(RVA = "0xBD81D4", Offset = "0xBD81D4", VA = "0xBD81D4")]
		protected void CreateCylinder(Vector3[] pDown, Vector3[] pUp, Vector3 centerDown, Vector3 centerUp, int seg, bool generateUV, Vector2 uvOffset, Vector2 uvTiling, bool flip, bool smooth)
		{
		}

		[Token(Token = "0x60018B4")]
		[Address(RVA = "0xBD8EB4", Offset = "0xBD8EB4", VA = "0xBD8EB4")]
		protected void CreateCone(Vector3 center, Vector3 forward, Vector3 right, float height, float radius1, float radius2, int sides, int segHeight, bool sliceOn, float sliceFrom, float sliceTo, bool generateUV, bool realWorldMapSize, bool flip, bool smooth)
		{
		}

		[Token(Token = "0x60018B5")]
		[Address(RVA = "0xBC0A5C", Offset = "0xBC0A5C", VA = "0xBC0A5C")]
		protected void CreateCone(Vector3 center, Vector3 forward, Vector3 right, float height, float radius1, float radius2, int sides, int segHeight, bool sliceOn, float sliceFrom, float sliceTo, bool generateUV, bool realWorldMapSize, Vector2 uvOffset, Vector2 uvTiling, bool flip, bool smooth)
		{
		}

		[Token(Token = "0x60018B6")]
		[Address(RVA = "0xBD9694", Offset = "0xBD9694", VA = "0xBD9694")]
		protected void CreateCone(Vector3 centerDown, Vector3 centerUp, Vector3 forward, Vector3 right, float height, float radius1, float radius2, int sides, int segHeight, bool sliceOn, float sliceFrom, float sliceTo, bool generateUV, bool realWorldMapSize, bool flip, bool smooth)
		{
		}

		[Token(Token = "0x60018B7")]
		[Address(RVA = "0xBD91B4", Offset = "0xBD91B4", VA = "0xBD91B4")]
		protected void CreateCone(Vector3 centerDown, Vector3 centerUp, Vector3 forward, Vector3 right, float height, float radius1, float radius2, int sides, int segHeight, bool sliceOn, float sliceFrom, float sliceTo, bool generateUV, bool realWorldMapSize, Vector2 uvOffset, Vector2 uvTiling, bool flip, bool smooth)
		{
		}

		[Token(Token = "0x60018B8")]
		[Address(RVA = "0xBD9850", Offset = "0xBD9850", VA = "0xBD9850")]
		protected void CreateCone(Vector3[] pDown, Vector3[] pUp, Vector3 centerDown, Vector3 centerUp, Vector3 up, int seg, bool generateUV, Vector2 uvOffset, Vector2 uvTiling, bool flip, bool smooth)
		{
		}

		[Token(Token = "0x60018B9")]
		[Address(RVA = "0xBDA764", Offset = "0xBDA764", VA = "0xBDA764")]
		protected void CreateSphere(Vector3 center, Vector3 forward, Vector3 right, float radius, int sides, int seg, bool sliceOn, float sliceFrom, float sliceTo, bool hemiSphere, float cutFrom, float cutTo, bool generateUV, bool realWorldMapSize, bool flip, bool smooth)
		{
		}

		[Token(Token = "0x60018BA")]
		[Address(RVA = "0xBC3678", Offset = "0xBC3678", VA = "0xBC3678")]
		protected void CreateSphere(Vector3 center, Vector3 forward, Vector3 right, float radius, int sides, int seg, bool sliceOn, float sliceFrom, float sliceTo, bool hemiSphere, float cutFrom, float cutTo, bool generateUV, bool realWorldMapSize, Vector2 uvOffset, Vector2 uvTiling, bool flip, bool smooth)
		{
		}

		[Token(Token = "0x60018BB")]
		[Address(RVA = "0xBDA908", Offset = "0xBDA908", VA = "0xBDA908")]
		protected void CreateSphere(Vector3[][] points, Vector3 center, bool generateUV, Vector2 uvOffset, Vector2 uvTiling, bool flip, bool smooth, float rFrom, float rTo)
		{
		}

		[Token(Token = "0x60018BC")]
		protected abstract void CreateMesh();

		[Token(Token = "0x60018BD")]
		[Address(RVA = "0xBDBD14", Offset = "0xBDBD14", VA = "0xBDBD14")]
		public void Apply()
		{
		}

		[Token(Token = "0x60018BE")]
		[Address(RVA = "0xBDBFBC", Offset = "0xBDBFBC", VA = "0xBDBFBC")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60018BF")]
		[Address(RVA = "0xBDC04C", Offset = "0xBDC04C", VA = "0xBDC04C")]
		private void Awake()
		{
		}

		[Token(Token = "0x60018C0")]
		[Address(RVA = "0xBDC0D8", Offset = "0xBDC0D8", VA = "0xBDC0D8")]
		private void Start()
		{
		}

		[Token(Token = "0x60018C1")]
		[Address(RVA = "0xBDC0DC", Offset = "0xBDC0DC", VA = "0xBDC0DC")]
		private void Reset()
		{
		}

		[Token(Token = "0x60018C2")]
		[Address(RVA = "0xBDC0E0", Offset = "0xBDC0E0", VA = "0xBDC0E0")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x60018C3")]
		[Address(RVA = "0xBDC0EC", Offset = "0xBDC0EC", VA = "0xBDC0EC")]
		public GameObject CreateInstance()
		{
			return null;
		}

		[Token(Token = "0x60018C4")]
		[Address(RVA = "0xBDC0F4", Offset = "0xBDC0F4", VA = "0xBDC0F4")]
		public void ForceRecreateMesh()
		{
		}

		[Token(Token = "0x60018C5")]
		[Address(RVA = "0xBBFE70", Offset = "0xBBFE70", VA = "0xBBFE70")]
		protected PPBase()
		{
		}
	}
	[Token(Token = "0x20004CE")]
	public class PPCombiner : PPBase
	{
		[Token(Token = "0x40018A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public List<GameObject> elements;

		[Token(Token = "0x40018A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public bool includeChildren;

		[Token(Token = "0x40018A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x81")]
		public bool applyTargetsTransform;

		[Token(Token = "0x40018A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private List<Mesh> mList;

		[Token(Token = "0x60018C6")]
		[Address(RVA = "0xBDC0FC", Offset = "0xBDC0FC", VA = "0xBDC0FC", Slot = "4")]
		protected override void CreateMesh()
		{
		}

		[Token(Token = "0x60018C7")]
		[Address(RVA = "0xBDC500", Offset = "0xBDC500", VA = "0xBDC500")]
		private void AddMesh(Mesh m, [Optional] Transform trans)
		{
		}

		[Token(Token = "0x60018C8")]
		[Address(RVA = "0xBDCA90", Offset = "0xBDCA90", VA = "0xBDCA90")]
		public PPCombiner()
		{
		}
	}
	[Token(Token = "0x20004CF")]
	[ExecuteInEditMode]
	public class PPInstance : MonoBehaviour
	{
		[Token(Token = "0x40018A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public PPBase m_source;

		[Token(Token = "0x60018C9")]
		[Address(RVA = "0xBDCB14", Offset = "0xBDCB14", VA = "0xBDCB14")]
		private void Start()
		{
		}

		[Token(Token = "0x60018CA")]
		[Address(RVA = "0xBDCC08", Offset = "0xBDCC08", VA = "0xBDCC08")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x60018CB")]
		[Address(RVA = "0xBDCB18", Offset = "0xBDCB18", VA = "0xBDCB18")]
		public void ApplySource()
		{
		}

		[Token(Token = "0x60018CC")]
		[Address(RVA = "0xBDCC0C", Offset = "0xBDCC0C", VA = "0xBDCC0C")]
		public void ApplySource(PPBase source)
		{
		}

		[Token(Token = "0x60018CD")]
		[Address(RVA = "0xBDCD00", Offset = "0xBDCD00", VA = "0xBDCD00")]
		public PPInstance()
		{
		}
	}
	[Token(Token = "0x20004D0")]
	public enum ProceduralPrimitiveType
	{
		[Token(Token = "0x40018A7")]
		Plane,
		[Token(Token = "0x40018A8")]
		Circle,
		[Token(Token = "0x40018A9")]
		Ring,
		[Token(Token = "0x40018AA")]
		Triangle,
		[Token(Token = "0x40018AB")]
		Trapezoid,
		[Token(Token = "0x40018AC")]
		ChamferPlane,
		[Token(Token = "0x40018AD")]
		Capsule,
		[Token(Token = "0x40018AE")]
		Arrow,
		[Token(Token = "0x40018AF")]
		Prism,
		[Token(Token = "0x40018B0")]
		ChamferBox,
		[Token(Token = "0x40018B1")]
		ChamferCylinder,
		[Token(Token = "0x40018B2")]
		DoubleSphere,
		[Token(Token = "0x40018B3")]
		Box,
		[Token(Token = "0x40018B4")]
		Sphere,
		[Token(Token = "0x40018B5")]
		Cylinder,
		[Token(Token = "0x40018B6")]
		Cone,
		[Token(Token = "0x40018B7")]
		Tube,
		[Token(Token = "0x40018B8")]
		RectTube,
		[Token(Token = "0x40018B9")]
		Torus,
		[Token(Token = "0x40018BA")]
		Pyramid
	}
	[Token(Token = "0x20004D1")]
	public static class ProceduralPrimitives
	{
		[Token(Token = "0x60018CE")]
		[Address(RVA = "0xBDCD08", Offset = "0xBDCD08", VA = "0xBDCD08")]
		private static GameObject CreateBase()
		{
			return null;
		}

		[Token(Token = "0x60018CF")]
		[Address(RVA = "0xBDCDD0", Offset = "0xBDCDD0", VA = "0xBDCDD0")]
		public static GameObject CreateInstance([Optional] PPBase source)
		{
			return null;
		}

		[Token(Token = "0x60018D0")]
		[Address(RVA = "0xBDCE5C", Offset = "0xBDCE5C", VA = "0xBDCE5C")]
		public static GameObject CreateCombiner()
		{
			return null;
		}

		[Token(Token = "0x60018D1")]
		[Address(RVA = "0xBDCED8", Offset = "0xBDCED8", VA = "0xBDCED8")]
		public static GameObject CreatePrimitive(ProceduralPrimitiveType type)
		{
			return null;
		}
	}
}
namespace OculusSampleFramework
{
	[Token(Token = "0x20004D2")]
	public class ColorGrabbable : OVRGrabbable
	{
		[Token(Token = "0x40018BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly Color COLOR_GRAB;

		[Token(Token = "0x40018BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static readonly Color COLOR_HIGHLIGHT;

		[Token(Token = "0x40018BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Color m_color;

		[Token(Token = "0x40018BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private MeshRenderer[] m_meshRenderers;

		[Token(Token = "0x40018BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private bool m_highlight;

		[Token(Token = "0x17000220")]
		public bool Highlight
		{
			[Token(Token = "0x60018D2")]
			[Address(RVA = "0xBDD16C", Offset = "0xBDD16C", VA = "0xBDD16C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60018D3")]
			[Address(RVA = "0xBDD174", Offset = "0xBDD174", VA = "0xBDD174")]
			set
			{
			}
		}

		[Token(Token = "0x60018D4")]
		[Address(RVA = "0xBDD180", Offset = "0xBDD180", VA = "0xBDD180")]
		protected void UpdateColor()
		{
		}

		[Token(Token = "0x60018D5")]
		[Address(RVA = "0xBDD320", Offset = "0xBDD320", VA = "0xBDD320", Slot = "4")]
		public override void GrabBegin(OVRGrabber hand, Collider grabPoint)
		{
		}

		[Token(Token = "0x60018D6")]
		[Address(RVA = "0xBDD33C", Offset = "0xBDD33C", VA = "0xBDD33C", Slot = "5")]
		public override void GrabEnd(Vector3 linearVelocity, Vector3 angularVelocity)
		{
		}

		[Token(Token = "0x60018D7")]
		[Address(RVA = "0xBDD358", Offset = "0xBDD358", VA = "0xBDD358")]
		private void Awake()
		{
		}

		[Token(Token = "0x60018D8")]
		[Address(RVA = "0xBDD22C", Offset = "0xBDD22C", VA = "0xBDD22C")]
		private void SetColor(Color color)
		{
		}

		[Token(Token = "0x60018D9")]
		[Address(RVA = "0xBDD5BC", Offset = "0xBDD5BC", VA = "0xBDD5BC")]
		public ColorGrabbable()
		{
		}
	}
	[Token(Token = "0x20004D3")]
	public class DistanceGrabbable : OVRGrabbable
	{
		[Token(Token = "0x40018C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public string m_materialColorField;

		[Token(Token = "0x40018C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private GrabbableCrosshair m_crosshair;

		[Token(Token = "0x40018C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private GrabManager m_crosshairManager;

		[Token(Token = "0x40018C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Renderer m_renderer;

		[Token(Token = "0x40018C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private MaterialPropertyBlock m_mpb;

		[Token(Token = "0x40018C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private bool m_inRange;

		[Token(Token = "0x40018C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x71")]
		private bool m_targeted;

		[Token(Token = "0x17000221")]
		public bool InRange
		{
			[Token(Token = "0x60018DB")]
			[Address(RVA = "0xBDD634", Offset = "0xBDD634", VA = "0xBDD634")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60018DC")]
			[Address(RVA = "0xBDD63C", Offset = "0xBDD63C", VA = "0xBDD63C")]
			set
			{
			}
		}

		[Token(Token = "0x17000222")]
		public bool Targeted
		{
			[Token(Token = "0x60018DD")]
			[Address(RVA = "0xBDD7A8", Offset = "0xBDD7A8", VA = "0xBDD7A8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60018DE")]
			[Address(RVA = "0xBDD7B0", Offset = "0xBDD7B0", VA = "0xBDD7B0")]
			set
			{
			}
		}

		[Token(Token = "0x60018DF")]
		[Address(RVA = "0xBDD7BC", Offset = "0xBDD7BC", VA = "0xBDD7BC", Slot = "6")]
		protected override void Start()
		{
		}

		[Token(Token = "0x60018E0")]
		[Address(RVA = "0xBDD648", Offset = "0xBDD648", VA = "0xBDD648")]
		private void RefreshCrosshair()
		{
		}

		[Token(Token = "0x60018E1")]
		[Address(RVA = "0xBDD978", Offset = "0xBDD978", VA = "0xBDD978")]
		public DistanceGrabbable()
		{
		}
	}
	[Token(Token = "0x20004D4")]
	[RequireComponent(typeof(Rigidbody))]
	public class DistanceGrabber : OVRGrabber
	{
		[Token(Token = "0x40018C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		[SerializeField]
		private float m_spherecastRadius;

		[Token(Token = "0x40018C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[SerializeField]
		private float m_noSnapThreshhold;

		[Token(Token = "0x40018C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		[SerializeField]
		private bool m_useSpherecast;

		[Token(Token = "0x40018CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCD")]
		[SerializeField]
		public bool m_preventGrabThroughWalls;

		[Token(Token = "0x40018CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[SerializeField]
		private float m_objectPullVelocity;

		[Token(Token = "0x40018CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		private float m_objectPullMaxRotationRate;

		[Token(Token = "0x40018CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private bool m_movingObjectToHand;

		[Token(Token = "0x40018CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		[SerializeField]
		private float m_maxGrabDistance;

		[Token(Token = "0x40018CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[SerializeField]
		private int m_grabObjectsInLayer;

		[Token(Token = "0x40018D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		[SerializeField]
		private int m_obstructionLayer;

		[Token(Token = "0x40018D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private DistanceGrabber m_otherHand;

		[Token(Token = "0x40018D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		protected DistanceGrabbable m_target;

		[Token(Token = "0x40018D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		protected Collider m_targetCollider;

		[Token(Token = "0x17000223")]
		public bool UseSpherecast
		{
			[Token(Token = "0x60018E2")]
			[Address(RVA = "0xBDD980", Offset = "0xBDD980", VA = "0xBDD980")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60018E3")]
			[Address(RVA = "0xBDD988", Offset = "0xBDD988", VA = "0xBDD988")]
			set
			{
			}
		}

		[Token(Token = "0x60018E4")]
		[Address(RVA = "0xBDD9A4", Offset = "0xBDD9A4", VA = "0xBDD9A4", Slot = "5")]
		protected override void Start()
		{
		}

		[Token(Token = "0x60018E5")]
		[Address(RVA = "0xBDDBA8", Offset = "0xBDDBA8", VA = "0xBDDBA8", Slot = "6")]
		public override void Update()
		{
		}

		[Token(Token = "0x60018E6")]
		[Address(RVA = "0xBDE43C", Offset = "0xBDE43C", VA = "0xBDE43C", Slot = "7")]
		protected override void GrabBegin()
		{
		}

		[Token(Token = "0x60018E7")]
		[Address(RVA = "0xBDE990", Offset = "0xBDE990", VA = "0xBDE990", Slot = "8")]
		protected override void MoveGrabbedObject(Vector3 pos, Quaternion rot, bool forceTeleport = false)
		{
		}

		[Token(Token = "0x60018E8")]
		[Address(RVA = "0xBDEDA0", Offset = "0xBDEDA0", VA = "0xBDEDA0")]
		private static DistanceGrabbable HitInfoToGrabbable(RaycastHit hitInfo)
		{
			return null;
		}

		[Token(Token = "0x60018E9")]
		[Address(RVA = "0xBDDDB0", Offset = "0xBDDDB0", VA = "0xBDDDB0")]
		protected bool FindTarget(out DistanceGrabbable dgOut, out Collider collOut)
		{
			return default(bool);
		}

		[Token(Token = "0x60018EA")]
		[Address(RVA = "0xBDEE8C", Offset = "0xBDEE8C", VA = "0xBDEE8C")]
		protected bool FindTargetWithSpherecast(out DistanceGrabbable dgOut, out Collider collOut)
		{
			return default(bool);
		}

		[Token(Token = "0x60018EB")]
		[Address(RVA = "0xBDF22C", Offset = "0xBDF22C", VA = "0xBDF22C", Slot = "9")]
		protected override void GrabVolumeEnable(bool enabled)
		{
		}

		[Token(Token = "0x60018EC")]
		[Address(RVA = "0xBDF244", Offset = "0xBDF244", VA = "0xBDF244", Slot = "10")]
		protected override void OffhandGrabbed(OVRGrabbable grabbable)
		{
		}

		[Token(Token = "0x60018ED")]
		[Address(RVA = "0xBDF24C", Offset = "0xBDF24C", VA = "0xBDF24C")]
		public DistanceGrabber()
		{
		}
	}
	[Token(Token = "0x20004D5")]
	public class GrabbableCrosshair : MonoBehaviour
	{
		[Token(Token = "0x20004D6")]
		public enum CrosshairState
		{
			[Token(Token = "0x40018D9")]
			Disabled,
			[Token(Token = "0x40018DA")]
			Enabled,
			[Token(Token = "0x40018DB")]
			Targeted
		}

		[Token(Token = "0x40018D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private CrosshairState m_state;

		[Token(Token = "0x40018D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Transform m_centerEyeAnchor;

		[Token(Token = "0x40018D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private GameObject m_targetedCrosshair;

		[Token(Token = "0x40018D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private GameObject m_enabledCrosshair;

		[Token(Token = "0x60018EE")]
		[Address(RVA = "0xBDF26C", Offset = "0xBDF26C", VA = "0xBDF26C")]
		private void Start()
		{
		}

		[Token(Token = "0x60018EF")]
		[Address(RVA = "0xBDD8EC", Offset = "0xBDD8EC", VA = "0xBDD8EC")]
		public void SetState(CrosshairState cs)
		{
		}

		[Token(Token = "0x60018F0")]
		[Address(RVA = "0xBDF2CC", Offset = "0xBDF2CC", VA = "0xBDF2CC")]
		private void Update()
		{
		}

		[Token(Token = "0x60018F1")]
		[Address(RVA = "0xBDF304", Offset = "0xBDF304", VA = "0xBDF304")]
		public GrabbableCrosshair()
		{
		}
	}
	[Token(Token = "0x20004D7")]
	public class GrabManager : MonoBehaviour
	{
		[Token(Token = "0x40018DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Collider m_grabVolume;

		[Token(Token = "0x40018DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Color OutlineColorInRange;

		[Token(Token = "0x40018DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Color OutlineColorHighlighted;

		[Token(Token = "0x40018DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Color OutlineColorOutOfRange;

		[Token(Token = "0x60018F2")]
		[Address(RVA = "0xBDF30C", Offset = "0xBDF30C", VA = "0xBDF30C")]
		private void OnTriggerEnter(Collider otherCollider)
		{
		}

		[Token(Token = "0x60018F3")]
		[Address(RVA = "0xBDF3B8", Offset = "0xBDF3B8", VA = "0xBDF3B8")]
		private void OnTriggerExit(Collider otherCollider)
		{
		}

		[Token(Token = "0x60018F4")]
		[Address(RVA = "0xBDF460", Offset = "0xBDF460", VA = "0xBDF460")]
		public GrabManager()
		{
		}
	}
	[Token(Token = "0x20004D8")]
	public class PauseOnInputLoss : MonoBehaviour
	{
		[Token(Token = "0x60018F5")]
		[Address(RVA = "0xBDF468", Offset = "0xBDF468", VA = "0xBDF468")]
		private void Start()
		{
		}

		[Token(Token = "0x60018F6")]
		[Address(RVA = "0xBDF554", Offset = "0xBDF554", VA = "0xBDF554")]
		private void OnInputFocusLost()
		{
		}

		[Token(Token = "0x60018F7")]
		[Address(RVA = "0xBDF560", Offset = "0xBDF560", VA = "0xBDF560")]
		private void OnInputFocusAcquired()
		{
		}

		[Token(Token = "0x60018F8")]
		[Address(RVA = "0xBDF56C", Offset = "0xBDF56C", VA = "0xBDF56C")]
		public PauseOnInputLoss()
		{
		}
	}
	[Token(Token = "0x20004D9")]
	public class BoneCapsuleTriggerLogic : MonoBehaviour
	{
		[Token(Token = "0x40018E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public InteractableToolTags ToolTags;

		[Token(Token = "0x40018E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public HashSet<ColliderZone> CollidersTouchingUs;

		[Token(Token = "0x40018E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private List<ColliderZone> _elementsToCleanUp;

		[Token(Token = "0x60018F9")]
		[Address(RVA = "0xBDF574", Offset = "0xBDF574", VA = "0xBDF574")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60018FA")]
		[Address(RVA = "0xBDF5C4", Offset = "0xBDF5C4", VA = "0xBDF5C4")]
		private void Update()
		{
		}

		[Token(Token = "0x60018FB")]
		[Address(RVA = "0xBDF98C", Offset = "0xBDF98C", VA = "0xBDF98C")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x60018FC")]
		[Address(RVA = "0xBDFA78", Offset = "0xBDFA78", VA = "0xBDFA78")]
		private void OnTriggerExit(Collider other)
		{
		}

		[Token(Token = "0x60018FD")]
		[Address(RVA = "0xBDF5C8", Offset = "0xBDF5C8", VA = "0xBDF5C8")]
		private void CleanUpDeadColliders()
		{
		}

		[Token(Token = "0x60018FE")]
		[Address(RVA = "0xBDFB64", Offset = "0xBDFB64", VA = "0xBDFB64")]
		public BoneCapsuleTriggerLogic()
		{
		}
	}
	[Token(Token = "0x20004DA")]
	public class ButtonController : Interactable
	{
		[Token(Token = "0x20004DB")]
		public enum ContactTest
		{
			[Token(Token = "0x40018F2")]
			PerpenTest,
			[Token(Token = "0x40018F3")]
			BackwardsPress
		}

		[Token(Token = "0x40018E3")]
		private const float ENTRY_DOT_THRESHOLD = 0.8f;

		[Token(Token = "0x40018E4")]
		private const float PERP_DOT_THRESHOLD = 0.5f;

		[Token(Token = "0x40018E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private GameObject _proximityZone;

		[Token(Token = "0x40018E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private GameObject _contactZone;

		[Token(Token = "0x40018E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private GameObject _actionZone;

		[Token(Token = "0x40018E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private ContactTest[] _contactTests;

		[Token(Token = "0x40018E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private Transform _buttonPlaneCenter;

		[Token(Token = "0x40018EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private bool _makeSureToolIsOnPositiveSide;

		[Token(Token = "0x40018EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		[SerializeField]
		private Vector3 _localButtonDirection;

		[Token(Token = "0x40018EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private InteractableToolTags[] _allValidToolsTags;

		[Token(Token = "0x40018ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private int _toolTagsMask;

		[Token(Token = "0x40018EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		[SerializeField]
		private bool _allowMultipleNearFieldInteraction;

		[Token(Token = "0x40018F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private Dictionary<InteractableTool, InteractableState> _toolToState;

		[Token(Token = "0x17000224")]
		public override int ValidToolTagsMask
		{
			[Token(Token = "0x60018FF")]
			[Address(RVA = "0xBDFC24", Offset = "0xBDFC24", VA = "0xBDFC24", Slot = "4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000225")]
		public Vector3 LocalButtonDirection
		{
			[Token(Token = "0x6001900")]
			[Address(RVA = "0xBDFC2C", Offset = "0xBDFC2C", VA = "0xBDFC2C")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x17000226")]
		public InteractableState CurrentButtonState
		{
			[Token(Token = "0x6001901")]
			[Address(RVA = "0xBDFC38", Offset = "0xBDFC38", VA = "0xBDFC38")]
			[CompilerGenerated]
			get
			{
				return default(InteractableState);
			}
			[Token(Token = "0x6001902")]
			[Address(RVA = "0xBDFC40", Offset = "0xBDFC40", VA = "0xBDFC40")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x6001903")]
		[Address(RVA = "0xBDFC48", Offset = "0xBDFC48", VA = "0xBDFC48", Slot = "9")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6001904")]
		[Address(RVA = "0xBDFD78", Offset = "0xBDFD78", VA = "0xBDFD78")]
		private void FireInteractionEventsOnDepth(InteractableCollisionDepth oldDepth, InteractableTool collidingTool, InteractionType interactionType)
		{
		}

		[Token(Token = "0x6001905")]
		[Address(RVA = "0xBDFF68", Offset = "0xBDFF68", VA = "0xBDFF68", Slot = "8")]
		public override void UpdateCollisionDepth(InteractableTool interactableTool, InteractableCollisionDepth oldCollisionDepth, InteractableCollisionDepth newCollisionDepth)
		{
		}

		[Token(Token = "0x6001906")]
		[Address(RVA = "0xBE052C", Offset = "0xBE052C", VA = "0xBE052C")]
		private InteractableState GetUpcomingStateNearField(InteractableState oldState, InteractableCollisionDepth newCollisionDepth, bool toolIsInActionZone, bool toolIsInContactZone, bool toolIsInProximity, bool validContact, bool onPositiveSideOfInteractable)
		{
			return default(InteractableState);
		}

		[Token(Token = "0x6001907")]
		[Address(RVA = "0xBE0670", Offset = "0xBE0670", VA = "0xBE0670")]
		public void ForceResetButton()
		{
		}

		[Token(Token = "0x6001908")]
		[Address(RVA = "0xBE0450", Offset = "0xBE0450", VA = "0xBE0450")]
		private bool IsValidContact(InteractableTool collidingTool, Vector3 buttonDirection)
		{
			return default(bool);
		}

		[Token(Token = "0x6001909")]
		[Address(RVA = "0xBE077C", Offset = "0xBE077C", VA = "0xBE077C")]
		private bool PassEntryTest(InteractableTool collidingTool, Vector3 buttonDirection)
		{
			return default(bool);
		}

		[Token(Token = "0x600190A")]
		[Address(RVA = "0xBE0888", Offset = "0xBE0888", VA = "0xBE0888")]
		private bool PassPerpTest(InteractableTool collidingTool, Vector3 buttonDirection)
		{
			return default(bool);
		}

		[Token(Token = "0x600190B")]
		[Address(RVA = "0xBE0910", Offset = "0xBE0910", VA = "0xBE0910")]
		public ButtonController()
		{
		}
	}
	[Token(Token = "0x20004DC")]
	public class ButtonTriggerZone : MonoBehaviour, ColliderZone
	{
		[Token(Token = "0x40018F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject _parentInteractableObj;

		[Token(Token = "0x17000227")]
		public Collider Collider
		{
			[Token(Token = "0x600190C")]
			[Address(RVA = "0xBE0A1C", Offset = "0xBE0A1C", VA = "0xBE0A1C", Slot = "4")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x600190D")]
			[Address(RVA = "0xBE0A24", Offset = "0xBE0A24", VA = "0xBE0A24")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x17000228")]
		public Interactable ParentInteractable
		{
			[Token(Token = "0x600190E")]
			[Address(RVA = "0xBE0A2C", Offset = "0xBE0A2C", VA = "0xBE0A2C", Slot = "5")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x600190F")]
			[Address(RVA = "0xBE0A34", Offset = "0xBE0A34", VA = "0xBE0A34")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x17000229")]
		public InteractableCollisionDepth CollisionDepth
		{
			[Token(Token = "0x6001910")]
			[Address(RVA = "0xBE0A3C", Offset = "0xBE0A3C", VA = "0xBE0A3C", Slot = "6")]
			get
			{
				return default(InteractableCollisionDepth);
			}
		}

		[Token(Token = "0x6001911")]
		[Address(RVA = "0xBE0A8C", Offset = "0xBE0A8C", VA = "0xBE0A8C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001912")]
		[Address(RVA = "0xBE0B0C", Offset = "0xBE0B0C", VA = "0xBE0B0C")]
		public ButtonTriggerZone()
		{
		}
	}
	[Token(Token = "0x20004DD")]
	public interface ColliderZone
	{
		[Token(Token = "0x1700022A")]
		Collider Collider
		{
			[Token(Token = "0x6001913")]
			get;
		}

		[Token(Token = "0x1700022B")]
		Interactable ParentInteractable
		{
			[Token(Token = "0x6001914")]
			get;
		}

		[Token(Token = "0x1700022C")]
		InteractableCollisionDepth CollisionDepth
		{
			[Token(Token = "0x6001915")]
			get;
		}
	}
	[Token(Token = "0x20004DE")]
	public class ColliderZoneArgs : EventArgs
	{
		[Token(Token = "0x40018F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly ColliderZone Collider;

		[Token(Token = "0x40018F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly float FrameTime;

		[Token(Token = "0x40018F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly InteractableTool CollidingTool;

		[Token(Token = "0x40018FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly InteractionType InteractionT;

		[Token(Token = "0x6001916")]
		[Address(RVA = "0xBDFED4", Offset = "0xBDFED4", VA = "0xBDFED4")]
		public ColliderZoneArgs(ColliderZone collider, float frameTime, InteractableTool collidingTool, InteractionType interactionType)
		{
		}
	}
	[Token(Token = "0x20004DF")]
	public enum InteractionType
	{
		[Token(Token = "0x40018FC")]
		Enter,
		[Token(Token = "0x40018FD")]
		Stay,
		[Token(Token = "0x40018FE")]
		Exit
	}
	[Token(Token = "0x20004E0")]
	public class HandsManager : MonoBehaviour
	{
		[Token(Token = "0x20004E1")]
		public enum HandsVisualMode
		{
			[Token(Token = "0x4001910")]
			Mesh,
			[Token(Token = "0x4001911")]
			Skeleton,
			[Token(Token = "0x4001912")]
			Both
		}

		[Token(Token = "0x20004E2")]
		[CompilerGenerated]
		private sealed class <FindSkeletonVisualGameObjects>d__52 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001913")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001914")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001915")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public HandsManager <>4__this;

			[Token(Token = "0x17000238")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001938")]
				[Address(RVA = "0xBE1E68", Offset = "0xBE1E68", VA = "0xBE1E68", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000239")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600193A")]
				[Address(RVA = "0xBE1EB0", Offset = "0xBE1EB0", VA = "0xBE1EB0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001935")]
			[Address(RVA = "0xBE14D4", Offset = "0xBE14D4", VA = "0xBE14D4")]
			[DebuggerHidden]
			public <FindSkeletonVisualGameObjects>d__52(int <>1__state)
			{
			}

			[Token(Token = "0x6001936")]
			[Address(RVA = "0xBE1C7C", Offset = "0xBE1C7C", VA = "0xBE1C7C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001937")]
			[Address(RVA = "0xBE1C80", Offset = "0xBE1C80", VA = "0xBE1C80", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001939")]
			[Address(RVA = "0xBE1E70", Offset = "0xBE1E70", VA = "0xBE1E70", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40018FF")]
		private const string SKELETON_VISUALIZER_NAME = "SkeletonRenderer";

		[Token(Token = "0x4001900")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject _leftHand;

		[Token(Token = "0x4001901")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GameObject _rightHand;

		[Token(Token = "0x4001902")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public HandsVisualMode VisualMode;

		[Token(Token = "0x4001903")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private OVRHand[] _hand;

		[Token(Token = "0x4001904")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private OVRSkeleton[] _handSkeleton;

		[Token(Token = "0x4001905")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private OVRSkeletonRenderer[] _handSkeletonRenderer;

		[Token(Token = "0x4001906")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private OVRMesh[] _handMesh;

		[Token(Token = "0x4001907")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private OVRMeshRenderer[] _handMeshRenderer;

		[Token(Token = "0x4001908")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private SkinnedMeshRenderer _leftMeshRenderer;

		[Token(Token = "0x4001909")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private SkinnedMeshRenderer _rightMeshRenderer;

		[Token(Token = "0x400190A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private GameObject _leftSkeletonVisual;

		[Token(Token = "0x400190B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private GameObject _rightSkeletonVisual;

		[Token(Token = "0x400190C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private float _currentHandAlpha;

		[Token(Token = "0x400190D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private int HandAlphaId;

		[Token(Token = "0x1700022D")]
		public OVRHand RightHand
		{
			[Token(Token = "0x6001917")]
			[Address(RVA = "0xBE0B14", Offset = "0xBE0B14", VA = "0xBE0B14")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001918")]
			[Address(RVA = "0xBE0B40", Offset = "0xBE0B40", VA = "0xBE0B40")]
			private set
			{
			}
		}

		[Token(Token = "0x1700022E")]
		public OVRSkeleton RightHandSkeleton
		{
			[Token(Token = "0x6001919")]
			[Address(RVA = "0xBE0B9C", Offset = "0xBE0B9C", VA = "0xBE0B9C")]
			get
			{
				return null;
			}
			[Token(Token = "0x600191A")]
			[Address(RVA = "0xBE0BC8", Offset = "0xBE0BC8", VA = "0xBE0BC8")]
			private set
			{
			}
		}

		[Token(Token = "0x1700022F")]
		public OVRSkeletonRenderer RightHandSkeletonRenderer
		{
			[Token(Token = "0x600191B")]
			[Address(RVA = "0xBE0C24", Offset = "0xBE0C24", VA = "0xBE0C24")]
			get
			{
				return null;
			}
			[Token(Token = "0x600191C")]
			[Address(RVA = "0xBE0C50", Offset = "0xBE0C50", VA = "0xBE0C50")]
			private set
			{
			}
		}

		[Token(Token = "0x17000230")]
		public OVRMesh RightHandMesh
		{
			[Token(Token = "0x600191D")]
			[Address(RVA = "0xBE0CAC", Offset = "0xBE0CAC", VA = "0xBE0CAC")]
			get
			{
				return null;
			}
			[Token(Token = "0x600191E")]
			[Address(RVA = "0xBE0CD8", Offset = "0xBE0CD8", VA = "0xBE0CD8")]
			private set
			{
			}
		}

		[Token(Token = "0x17000231")]
		public OVRMeshRenderer RightHandMeshRenderer
		{
			[Token(Token = "0x600191F")]
			[Address(RVA = "0xBE0D34", Offset = "0xBE0D34", VA = "0xBE0D34")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001920")]
			[Address(RVA = "0xBE0D60", Offset = "0xBE0D60", VA = "0xBE0D60")]
			private set
			{
			}
		}

		[Token(Token = "0x17000232")]
		public OVRHand LeftHand
		{
			[Token(Token = "0x6001921")]
			[Address(RVA = "0xBE0DBC", Offset = "0xBE0DBC", VA = "0xBE0DBC")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001922")]
			[Address(RVA = "0xBE0DE4", Offset = "0xBE0DE4", VA = "0xBE0DE4")]
			private set
			{
			}
		}

		[Token(Token = "0x17000233")]
		public OVRSkeleton LeftHandSkeleton
		{
			[Token(Token = "0x6001923")]
			[Address(RVA = "0xBE0E3C", Offset = "0xBE0E3C", VA = "0xBE0E3C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001924")]
			[Address(RVA = "0xBE0E64", Offset = "0xBE0E64", VA = "0xBE0E64")]
			private set
			{
			}
		}

		[Token(Token = "0x17000234")]
		public OVRSkeletonRenderer LeftHandSkeletonRenderer
		{
			[Token(Token = "0x6001925")]
			[Address(RVA = "0xBE0EBC", Offset = "0xBE0EBC", VA = "0xBE0EBC")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001926")]
			[Address(RVA = "0xBE0EE4", Offset = "0xBE0EE4", VA = "0xBE0EE4")]
			private set
			{
			}
		}

		[Token(Token = "0x17000235")]
		public OVRMesh LeftHandMesh
		{
			[Token(Token = "0x6001927")]
			[Address(RVA = "0xBE0F3C", Offset = "0xBE0F3C", VA = "0xBE0F3C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001928")]
			[Address(RVA = "0xBE0F64", Offset = "0xBE0F64", VA = "0xBE0F64")]
			private set
			{
			}
		}

		[Token(Token = "0x17000236")]
		public OVRMeshRenderer LeftHandMeshRenderer
		{
			[Token(Token = "0x6001929")]
			[Address(RVA = "0xBE0FBC", Offset = "0xBE0FBC", VA = "0xBE0FBC")]
			get
			{
				return null;
			}
			[Token(Token = "0x600192A")]
			[Address(RVA = "0xBE0FE4", Offset = "0xBE0FE4", VA = "0xBE0FE4")]
			private set
			{
			}
		}

		[Token(Token = "0x17000237")]
		public static HandsManager Instance
		{
			[Token(Token = "0x600192B")]
			[Address(RVA = "0xBE103C", Offset = "0xBE103C", VA = "0xBE103C")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x600192C")]
			[Address(RVA = "0xBE1084", Offset = "0xBE1084", VA = "0xBE1084")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x600192D")]
		[Address(RVA = "0xBE10D0", Offset = "0xBE10D0", VA = "0xBE10D0")]
		private void Awake()
		{
		}

		[Token(Token = "0x600192E")]
		[Address(RVA = "0xBE1458", Offset = "0xBE1458", VA = "0xBE1458")]
		private void Update()
		{
		}

		[Token(Token = "0x600192F")]
		[Address(RVA = "0xBE13F0", Offset = "0xBE13F0", VA = "0xBE13F0")]
		[IteratorStateMachine(typeof(<FindSkeletonVisualGameObjects>d__52))]
		private IEnumerator FindSkeletonVisualGameObjects()
		{
			return null;
		}

		[Token(Token = "0x6001930")]
		[Address(RVA = "0xBE14FC", Offset = "0xBE14FC", VA = "0xBE14FC")]
		public void SwitchVisualization()
		{
		}

		[Token(Token = "0x6001931")]
		[Address(RVA = "0xBE15C0", Offset = "0xBE15C0", VA = "0xBE15C0")]
		private void SetToCurrentVisualMode()
		{
		}

		[Token(Token = "0x6001932")]
		[Address(RVA = "0xBE1790", Offset = "0xBE1790", VA = "0xBE1790")]
		public static List<OVRBoneCapsule> GetCapsulesPerBone(OVRSkeleton skeleton, OVRSkeleton.BoneId boneId)
		{
			return null;
		}

		[Token(Token = "0x6001933")]
		[Address(RVA = "0xBE19F0", Offset = "0xBE19F0", VA = "0xBE19F0")]
		public bool IsInitialized()
		{
			return default(bool);
		}

		[Token(Token = "0x6001934")]
		[Address(RVA = "0xBE1B50", Offset = "0xBE1B50", VA = "0xBE1B50")]
		public HandsManager()
		{
		}
	}
	[Token(Token = "0x20004E3")]
	public abstract class Interactable : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20004E4")]
		public class InteractableStateArgsEvent : UnityEvent<InteractableStateArgs>
		{
			[Token(Token = "0x600194C")]
			[Address(RVA = "0xBE2500", Offset = "0xBE2500", VA = "0xBE2500")]
			public InteractableStateArgsEvent()
			{
			}
		}

		[Token(Token = "0x4001916")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected ColliderZone _proximityZoneCollider;

		[Token(Token = "0x4001917")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		protected ColliderZone _contactZoneCollider;

		[Token(Token = "0x4001918")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		protected ColliderZone _actionZoneCollider;

		[Token(Token = "0x400191C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public InteractableStateArgsEvent InteractableStateChanged;

		[Token(Token = "0x1700023A")]
		public ColliderZone ProximityCollider
		{
			[Token(Token = "0x600193B")]
			[Address(RVA = "0xBE1EB8", Offset = "0xBE1EB8", VA = "0xBE1EB8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700023B")]
		public ColliderZone ContactCollider
		{
			[Token(Token = "0x600193C")]
			[Address(RVA = "0xBE1EC0", Offset = "0xBE1EC0", VA = "0xBE1EC0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700023C")]
		public ColliderZone ActionCollider
		{
			[Token(Token = "0x600193D")]
			[Address(RVA = "0xBE1EC8", Offset = "0xBE1EC8", VA = "0xBE1EC8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700023D")]
		public virtual int ValidToolTagsMask
		{
			[Token(Token = "0x600193E")]
			[Address(RVA = "0xBE1ED0", Offset = "0xBE1ED0", VA = "0xBE1ED0", Slot = "4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1400009E")]
		public event Action<ColliderZoneArgs> ProximityZoneEvent
		{
			[Token(Token = "0x600193F")]
			[Address(RVA = "0xBE1ED8", Offset = "0xBE1ED8", VA = "0xBE1ED8")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6001940")]
			[Address(RVA = "0xBE1F88", Offset = "0xBE1F88", VA = "0xBE1F88")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x1400009F")]
		public event Action<ColliderZoneArgs> ContactZoneEvent
		{
			[Token(Token = "0x6001942")]
			[Address(RVA = "0xBE2054", Offset = "0xBE2054", VA = "0xBE2054")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6001943")]
			[Address(RVA = "0xBE2104", Offset = "0xBE2104", VA = "0xBE2104")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x140000A0")]
		public event Action<ColliderZoneArgs> ActionZoneEvent
		{
			[Token(Token = "0x6001945")]
			[Address(RVA = "0xBE21D0", Offset = "0xBE21D0", VA = "0xBE21D0")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6001946")]
			[Address(RVA = "0xBE2280", Offset = "0xBE2280", VA = "0xBE2280")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x6001941")]
		[Address(RVA = "0xBE2038", Offset = "0xBE2038", VA = "0xBE2038", Slot = "5")]
		protected virtual void OnProximityZoneEvent(ColliderZoneArgs args)
		{
		}

		[Token(Token = "0x6001944")]
		[Address(RVA = "0xBE21B4", Offset = "0xBE21B4", VA = "0xBE21B4", Slot = "6")]
		protected virtual void OnContactZoneEvent(ColliderZoneArgs args)
		{
		}

		[Token(Token = "0x6001947")]
		[Address(RVA = "0xBE2330", Offset = "0xBE2330", VA = "0xBE2330", Slot = "7")]
		protected virtual void OnActionZoneEvent(ColliderZoneArgs args)
		{
		}

		[Token(Token = "0x6001948")]
		public abstract void UpdateCollisionDepth(InteractableTool interactableTool, InteractableCollisionDepth oldCollisionDepth, InteractableCollisionDepth newCollisionDepth);

		[Token(Token = "0x6001949")]
		[Address(RVA = "0xBDFD24", Offset = "0xBDFD24", VA = "0xBDFD24", Slot = "9")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x600194A")]
		[Address(RVA = "0xBE23FC", Offset = "0xBE23FC", VA = "0xBE23FC", Slot = "10")]
		protected virtual void OnDestroy()
		{
		}

		[Token(Token = "0x600194B")]
		[Address(RVA = "0xBE0A14", Offset = "0xBE0A14", VA = "0xBE0A14")]
		protected Interactable()
		{
		}
	}
	[Token(Token = "0x20004E5")]
	public enum InteractableCollisionDepth
	{
		[Token(Token = "0x400191E")]
		None,
		[Token(Token = "0x400191F")]
		Proximity,
		[Token(Token = "0x4001920")]
		Contact,
		[Token(Token = "0x4001921")]
		Action
	}
	[Token(Token = "0x20004E6")]
	public enum InteractableState
	{
		[Token(Token = "0x4001923")]
		Default,
		[Token(Token = "0x4001924")]
		ProximityState,
		[Token(Token = "0x4001925")]
		ContactState,
		[Token(Token = "0x4001926")]
		ActionState
	}
	[Token(Token = "0x20004E7")]
	public class InteractableStateArgs : EventArgs
	{
		[Token(Token = "0x4001927")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly Interactable Interactable;

		[Token(Token = "0x4001928")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly InteractableTool Tool;

		[Token(Token = "0x4001929")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly InteractableState OldInteractableState;

		[Token(Token = "0x400192A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public readonly InteractableState NewInteractableState;

		[Token(Token = "0x400192B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly ColliderZoneArgs ColliderArgs;

		[Token(Token = "0x600194D")]
		[Address(RVA = "0xBE05DC", Offset = "0xBE05DC", VA = "0xBE05DC")]
		public InteractableStateArgs(Interactable interactable, InteractableTool tool, InteractableState newInteractableState, InteractableState oldState, ColliderZoneArgs colliderArgs)
		{
		}
	}
	[Token(Token = "0x20004E8")]
	public class InteractableRegistry : MonoBehaviour
	{
		[Token(Token = "0x400192C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static HashSet<Interactable> _interactables;

		[Token(Token = "0x1700023E")]
		public static HashSet<Interactable> Interactables
		{
			[Token(Token = "0x600194E")]
			[Address(RVA = "0xBE2548", Offset = "0xBE2548", VA = "0xBE2548")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600194F")]
		[Address(RVA = "0xBE234C", Offset = "0xBE234C", VA = "0xBE234C")]
		public static void RegisterInteractable(Interactable interactable)
		{
		}

		[Token(Token = "0x6001950")]
		[Address(RVA = "0xBE2450", Offset = "0xBE2450", VA = "0xBE2450")]
		public static void UnregisterInteractable(Interactable interactable)
		{
		}

		[Token(Token = "0x6001951")]
		[Address(RVA = "0xBE25A0", Offset = "0xBE25A0", VA = "0xBE25A0")]
		public InteractableRegistry()
		{
		}
	}
	[Token(Token = "0x20004E9")]
	public class InteractableToolsCreator : MonoBehaviour
	{
		[Token(Token = "0x20004EA")]
		[CompilerGenerated]
		private sealed class <AttachToolsToHands>d__3 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400192F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001930")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001931")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Transform[] toolObjects;

			[Token(Token = "0x4001932")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public bool isRightHand;

			[Token(Token = "0x4001933")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public InteractableToolsCreator <>4__this;

			[Token(Token = "0x4001934")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private HandsManager <handsManagerObj>5__2;

			[Token(Token = "0x4001935")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private HashSet<Transform>.Enumerator <>7__wrap2;

			[Token(Token = "0x4001936")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			private Transform <toolObject>5__4;

			[Token(Token = "0x4001937")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			private OVRSkeleton <handSkeletonToAttachTo>5__5;

			[Token(Token = "0x1700023F")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600195B")]
				[Address(RVA = "0xBE2CB4", Offset = "0xBE2CB4", VA = "0xBE2CB4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000240")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600195D")]
				[Address(RVA = "0xBE2CFC", Offset = "0xBE2CFC", VA = "0xBE2CFC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001957")]
			[Address(RVA = "0xBE2724", Offset = "0xBE2724", VA = "0xBE2724")]
			[DebuggerHidden]
			public <AttachToolsToHands>d__3(int <>1__state)
			{
			}

			[Token(Token = "0x6001958")]
			[Address(RVA = "0xBE2860", Offset = "0xBE2860", VA = "0xBE2860", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001959")]
			[Address(RVA = "0xBE287C", Offset = "0xBE287C", VA = "0xBE287C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600195A")]
			[Address(RVA = "0xBE2C64", Offset = "0xBE2C64", VA = "0xBE2C64")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x600195C")]
			[Address(RVA = "0xBE2CBC", Offset = "0xBE2CBC", VA = "0xBE2CBC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400192D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Transform[] LeftHandTools;

		[Token(Token = "0x400192E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Transform[] RightHandTools;

		[Token(Token = "0x6001953")]
		[Address(RVA = "0xBE2634", Offset = "0xBE2634", VA = "0xBE2634")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001954")]
		[Address(RVA = "0xBE26A0", Offset = "0xBE26A0", VA = "0xBE26A0")]
		[IteratorStateMachine(typeof(<AttachToolsToHands>d__3))]
		private IEnumerator AttachToolsToHands(Transform[] toolObjects, bool isRightHand)
		{
			return null;
		}

		[Token(Token = "0x6001955")]
		[Address(RVA = "0xBE274C", Offset = "0xBE274C", VA = "0xBE274C")]
		private void AttachToolToHandTransform(Transform tool, bool isRightHanded)
		{
		}

		[Token(Token = "0x6001956")]
		[Address(RVA = "0xBE2858", Offset = "0xBE2858", VA = "0xBE2858")]
		public InteractableToolsCreator()
		{
		}
	}
	[Token(Token = "0x20004EB")]
	public class InteractableToolsInputRouter : MonoBehaviour
	{
		[Token(Token = "0x4001938")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static InteractableToolsInputRouter _instance;

		[Token(Token = "0x4001939")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool _leftPinch;

		[Token(Token = "0x400193A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		private bool _rightPinch;

		[Token(Token = "0x400193B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private HashSet<InteractableTool> _leftHandNearTools;

		[Token(Token = "0x400193C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private HashSet<InteractableTool> _leftHandFarTools;

		[Token(Token = "0x400193D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private HashSet<InteractableTool> _rightHandNearTools;

		[Token(Token = "0x400193E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private HashSet<InteractableTool> _rightHandFarTools;

		[Token(Token = "0x17000241")]
		public static InteractableToolsInputRouter Instance
		{
			[Token(Token = "0x600195E")]
			[Address(RVA = "0xBE2D04", Offset = "0xBE2D04", VA = "0xBE2D04")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600195F")]
		[Address(RVA = "0xBE2E50", Offset = "0xBE2E50", VA = "0xBE2E50")]
		public void RegisterInteractableTool(InteractableTool interactableTool)
		{
		}

		[Token(Token = "0x6001960")]
		[Address(RVA = "0xBE2EEC", Offset = "0xBE2EEC", VA = "0xBE2EEC")]
		public void UnregisterInteractableTool(InteractableTool interactableTool)
		{
		}

		[Token(Token = "0x6001961")]
		[Address(RVA = "0xBE2F88", Offset = "0xBE2F88", VA = "0xBE2F88")]
		private void Update()
		{
		}

		[Token(Token = "0x6001962")]
		[Address(RVA = "0xBE3224", Offset = "0xBE3224", VA = "0xBE3224")]
		private bool UpdateToolsAndEnableState(HashSet<InteractableTool> tools, bool toolsAreEnabledThisFrame)
		{
			return default(bool);
		}

		[Token(Token = "0x6001963")]
		[Address(RVA = "0xBE3260", Offset = "0xBE3260", VA = "0xBE3260")]
		private bool UpdateTools(HashSet<InteractableTool> tools, bool resetCollisionData = false)
		{
			return default(bool);
		}

		[Token(Token = "0x6001964")]
		[Address(RVA = "0xBE351C", Offset = "0xBE351C", VA = "0xBE351C")]
		private void ToggleToolsEnableState(HashSet<InteractableTool> tools, bool enableState)
		{
		}

		[Token(Token = "0x6001965")]
		[Address(RVA = "0xBE3724", Offset = "0xBE3724", VA = "0xBE3724")]
		public InteractableToolsInputRouter()
		{
		}
	}
	[Token(Token = "0x20004EC")]
	public class FingerTipPokeTool : InteractableTool
	{
		[Token(Token = "0x20004ED")]
		[CompilerGenerated]
		private sealed class <AttachTriggerLogic>d__21 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400194A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400194B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400194C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public FingerTipPokeTool <>4__this;

			[Token(Token = "0x17000246")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001977")]
				[Address(RVA = "0xBE4810", Offset = "0xBE4810", VA = "0xBE4810", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000247")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001979")]
				[Address(RVA = "0xBE4858", Offset = "0xBE4858", VA = "0xBE4858", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001974")]
			[Address(RVA = "0xBE3968", Offset = "0xBE3968", VA = "0xBE3968")]
			[DebuggerHidden]
			public <AttachTriggerLogic>d__21(int <>1__state)
			{
			}

			[Token(Token = "0x6001975")]
			[Address(RVA = "0xBE43AC", Offset = "0xBE43AC", VA = "0xBE43AC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001976")]
			[Address(RVA = "0xBE43B0", Offset = "0xBE43B0", VA = "0xBE43B0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001978")]
			[Address(RVA = "0xBE4818", Offset = "0xBE4818", VA = "0xBE4818", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400193F")]
		private const int NUM_VELOCITY_FRAMES = 10;

		[Token(Token = "0x4001940")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private FingerTipPokeToolView _fingerTipPokeToolView;

		[Token(Token = "0x4001941")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private OVRPlugin.HandFinger _fingerToFollow;

		[Token(Token = "0x4001942")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Vector3[] _velocityFrames;

		[Token(Token = "0x4001943")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private int _currVelocityFrame;

		[Token(Token = "0x4001944")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private bool _sampledMaxFramesAlready;

		[Token(Token = "0x4001945")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Vector3 _position;

		[Token(Token = "0x4001946")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private BoneCapsuleTriggerLogic[] _boneCapsuleTriggerLogic;

		[Token(Token = "0x4001947")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private float _lastScale;

		[Token(Token = "0x4001948")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		private bool _isInitialized;

		[Token(Token = "0x4001949")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private OVRBoneCapsule _capsuleToTrack;

		[Token(Token = "0x17000242")]
		public override InteractableToolTags ToolTags
		{
			[Token(Token = "0x6001966")]
			[Address(RVA = "0xBE37FC", Offset = "0xBE37FC", VA = "0xBE37FC", Slot = "4")]
			get
			{
				return default(InteractableToolTags);
			}
		}

		[Token(Token = "0x17000243")]
		public override ToolInputState ToolInputState
		{
			[Token(Token = "0x6001967")]
			[Address(RVA = "0xBE3804", Offset = "0xBE3804", VA = "0xBE3804", Slot = "5")]
			get
			{
				return default(ToolInputState);
			}
		}

		[Token(Token = "0x17000244")]
		public override bool IsFarFieldTool
		{
			[Token(Token = "0x6001968")]
			[Address(RVA = "0xBE380C", Offset = "0xBE380C", VA = "0xBE380C", Slot = "6")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000245")]
		public override bool EnableState
		{
			[Token(Token = "0x6001969")]
			[Address(RVA = "0xBE3814", Offset = "0xBE3814", VA = "0xBE3814", Slot = "10")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600196A")]
			[Address(RVA = "0xBE383C", Offset = "0xBE383C", VA = "0xBE383C", Slot = "11")]
			set
			{
			}
		}

		[Token(Token = "0x600196B")]
		[Address(RVA = "0xBE386C", Offset = "0xBE386C", VA = "0xBE386C", Slot = "12")]
		public override void Initialize()
		{
		}

		[Token(Token = "0x600196C")]
		[Address(RVA = "0xBE3900", Offset = "0xBE3900", VA = "0xBE3900")]
		[IteratorStateMachine(typeof(<AttachTriggerLogic>d__21))]
		private IEnumerator AttachTriggerLogic()
		{
			return null;
		}

		[Token(Token = "0x600196D")]
		[Address(RVA = "0xBE3990", Offset = "0xBE3990", VA = "0xBE3990")]
		private void Update()
		{
		}

		[Token(Token = "0x600196E")]
		[Address(RVA = "0xBE3C10", Offset = "0xBE3C10", VA = "0xBE3C10")]
		private void UpdateAverageVelocity()
		{
		}

		[Token(Token = "0x600196F")]
		[Address(RVA = "0xBE3DCC", Offset = "0xBE3DCC", VA = "0xBE3DCC")]
		private void CheckAndUpdateScale()
		{
		}

		[Token(Token = "0x6001970")]
		[Address(RVA = "0xBE3EB4", Offset = "0xBE3EB4", VA = "0xBE3EB4", Slot = "7")]
		public override List<InteractableCollisionInfo> GetNextIntersectingObjects()
		{
			return null;
		}

		[Token(Token = "0x6001971")]
		[Address(RVA = "0xBE4230", Offset = "0xBE4230", VA = "0xBE4230", Slot = "8")]
		public override void FocusOnInteractable(Interactable focusedInteractable, ColliderZone colliderZone)
		{
		}

		[Token(Token = "0x6001972")]
		[Address(RVA = "0xBE4234", Offset = "0xBE4234", VA = "0xBE4234", Slot = "9")]
		public override void DeFocus()
		{
		}

		[Token(Token = "0x6001973")]
		[Address(RVA = "0xBE4238", Offset = "0xBE4238", VA = "0xBE4238")]
		public FingerTipPokeTool()
		{
		}
	}
	[Token(Token = "0x20004EE")]
	public class FingerTipPokeToolView : MonoBehaviour, InteractableToolView
	{
		[Token(Token = "0x400194D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private MeshRenderer _sphereMeshRenderer;

		[Token(Token = "0x17000248")]
		public InteractableTool InteractableTool
		{
			[Token(Token = "0x600197A")]
			[Address(RVA = "0xBE4860", Offset = "0xBE4860", VA = "0xBE4860", Slot = "4")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x600197B")]
			[Address(RVA = "0xBE4868", Offset = "0xBE4868", VA = "0xBE4868")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x17000249")]
		public bool EnableState
		{
			[Token(Token = "0x600197C")]
			[Address(RVA = "0xBE4870", Offset = "0xBE4870", VA = "0xBE4870", Slot = "6")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600197D")]
			[Address(RVA = "0xBE488C", Offset = "0xBE488C", VA = "0xBE488C", Slot = "7")]
			set
			{
			}
		}

		[Token(Token = "0x1700024A")]
		public bool ToolActivateState
		{
			[Token(Token = "0x600197E")]
			[Address(RVA = "0xBE48AC", Offset = "0xBE48AC", VA = "0xBE48AC", Slot = "8")]
			[CompilerGenerated]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600197F")]
			[Address(RVA = "0xBE48B4", Offset = "0xBE48B4", VA = "0xBE48B4", Slot = "9")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x1700024B")]
		public float SphereRadius
		{
			[Token(Token = "0x6001980")]
			[Address(RVA = "0xBE48C0", Offset = "0xBE48C0", VA = "0xBE48C0")]
			[CompilerGenerated]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001981")]
			[Address(RVA = "0xBE48C8", Offset = "0xBE48C8", VA = "0xBE48C8")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x6001982")]
		[Address(RVA = "0xBE48D0", Offset = "0xBE48D0", VA = "0xBE48D0")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001983")]
		[Address(RVA = "0xBE490C", Offset = "0xBE490C", VA = "0xBE490C", Slot = "5")]
		public void SetFocusedInteractable(Interactable interactable)
		{
		}

		[Token(Token = "0x6001984")]
		[Address(RVA = "0xBE4910", Offset = "0xBE4910", VA = "0xBE4910")]
		public FingerTipPokeToolView()
		{
		}
	}
	[Token(Token = "0x20004EF")]
	[Flags]
	public enum InteractableToolTags
	{
		[Token(Token = "0x4001952")]
		None = 0,
		[Token(Token = "0x4001953")]
		Ray = 1,
		[Token(Token = "0x4001954")]
		Poke = 4,
		[Token(Token = "0x4001955")]
		All = -1
	}
	[Token(Token = "0x20004F0")]
	public enum ToolInputState
	{
		[Token(Token = "0x4001957")]
		Inactive,
		[Token(Token = "0x4001958")]
		PrimaryInputDown,
		[Token(Token = "0x4001959")]
		PrimaryInputDownStay,
		[Token(Token = "0x400195A")]
		PrimaryInputUp
	}
	[Token(Token = "0x20004F1")]
	public class InteractableCollisionInfo
	{
		[Token(Token = "0x400195B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public ColliderZone InteractableCollider;

		[Token(Token = "0x400195C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public InteractableCollisionDepth CollisionDepth;

		[Token(Token = "0x400195D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public InteractableTool CollidingTool;

		[Token(Token = "0x6001985")]
		[Address(RVA = "0xBE41F0", Offset = "0xBE41F0", VA = "0xBE41F0")]
		public InteractableCollisionInfo(ColliderZone collider, InteractableCollisionDepth collisionDepth, InteractableTool collidingTool)
		{
		}
	}
	[Token(Token = "0x20004F2")]
	public abstract class InteractableTool : MonoBehaviour
	{
		[Token(Token = "0x4001961")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		protected List<InteractableCollisionInfo> _currentIntersectingObjects;

		[Token(Token = "0x4001962")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private List<Interactable> _addedInteractables;

		[Token(Token = "0x4001963")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private List<Interactable> _removedInteractables;

		[Token(Token = "0x4001964")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private List<Interactable> _remainingInteractables;

		[Token(Token = "0x4001965")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Dictionary<Interactable, InteractableCollisionInfo> _currInteractableToCollisionInfos;

		[Token(Token = "0x4001966")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Dictionary<Interactable, InteractableCollisionInfo> _prevInteractableToCollisionInfos;

		[Token(Token = "0x1700024C")]
		public Transform ToolTransform
		{
			[Token(Token = "0x6001986")]
			[Address(RVA = "0xBE0908", Offset = "0xBE0908", VA = "0xBE0908")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700024D")]
		public bool IsRightHandedTool
		{
			[Token(Token = "0x6001987")]
			[Address(RVA = "0xBE4918", Offset = "0xBE4918", VA = "0xBE4918")]
			[CompilerGenerated]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001988")]
			[Address(RVA = "0xBE4920", Offset = "0xBE4920", VA = "0xBE4920")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x1700024E")]
		public abstract InteractableToolTags ToolTags
		{
			[Token(Token = "0x6001989")]
			get;
		}

		[Token(Token = "0x1700024F")]
		public abstract ToolInputState ToolInputState
		{
			[Token(Token = "0x600198A")]
			get;
		}

		[Token(Token = "0x17000250")]
		public abstract bool IsFarFieldTool
		{
			[Token(Token = "0x600198B")]
			get;
		}

		[Token(Token = "0x17000251")]
		public Vector3 Velocity
		{
			[Token(Token = "0x600198C")]
			[Address(RVA = "0xBE492C", Offset = "0xBE492C", VA = "0xBE492C")]
			[CompilerGenerated]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x600198D")]
			[Address(RVA = "0xBE4938", Offset = "0xBE4938", VA = "0xBE4938")]
			[CompilerGenerated]
			protected set
			{
			}
		}

		[Token(Token = "0x17000252")]
		public Vector3 InteractionPosition
		{
			[Token(Token = "0x600198E")]
			[Address(RVA = "0xBE4944", Offset = "0xBE4944", VA = "0xBE4944")]
			[CompilerGenerated]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x600198F")]
			[Address(RVA = "0xBE4950", Offset = "0xBE4950", VA = "0xBE4950")]
			[CompilerGenerated]
			protected set
			{
			}
		}

		[Token(Token = "0x17000253")]
		public abstract bool EnableState
		{
			[Token(Token = "0x6001994")]
			get;
			[Token(Token = "0x6001995")]
			set;
		}

		[Token(Token = "0x6001990")]
		[Address(RVA = "0xBE495C", Offset = "0xBE495C", VA = "0xBE495C")]
		public List<InteractableCollisionInfo> GetCurrentIntersectingObjects()
		{
			return null;
		}

		[Token(Token = "0x6001991")]
		public abstract List<InteractableCollisionInfo> GetNextIntersectingObjects();

		[Token(Token = "0x6001992")]
		public abstract void FocusOnInteractable(Interactable focusedInteractable, ColliderZone colliderZone);

		[Token(Token = "0x6001993")]
		public abstract void DeFocus();

		[Token(Token = "0x6001996")]
		public abstract void Initialize();

		[Token(Token = "0x6001997")]
		[Address(RVA = "0xBE368C", Offset = "0xBE368C", VA = "0xBE368C")]
		public KeyValuePair<Interactable, InteractableCollisionInfo> GetFirstCurrentCollisionInfo()
		{
			return default(KeyValuePair<Interactable, InteractableCollisionInfo>);
		}

		[Token(Token = "0x6001998")]
		[Address(RVA = "0xBE36D4", Offset = "0xBE36D4", VA = "0xBE36D4")]
		public void ClearAllCurrentCollisionInfos()
		{
		}

		[Token(Token = "0x6001999")]
		[Address(RVA = "0xBE4964", Offset = "0xBE4964", VA = "0xBE4964", Slot = "13")]
		public virtual void UpdateCurrentCollisionsBasedOnDepth()
		{
		}

		[Token(Token = "0x600199A")]
		[Address(RVA = "0xBE4C10", Offset = "0xBE4C10", VA = "0xBE4C10", Slot = "14")]
		public virtual void UpdateLatestCollisionData()
		{
		}

		[Token(Token = "0x600199B")]
		[Address(RVA = "0xBE424C", Offset = "0xBE424C", VA = "0xBE424C")]
		protected InteractableTool()
		{
		}
	}
	[Token(Token = "0x20004F3")]
	public interface InteractableToolView
	{
		[Token(Token = "0x17000254")]
		InteractableTool InteractableTool
		{
			[Token(Token = "0x600199C")]
			get;
		}

		[Token(Token = "0x17000255")]
		bool EnableState
		{
			[Token(Token = "0x600199E")]
			get;
			[Token(Token = "0x600199F")]
			set;
		}

		[Token(Token = "0x17000256")]
		bool ToolActivateState
		{
			[Token(Token = "0x60019A0")]
			get;
			[Token(Token = "0x60019A1")]
			set;
		}

		[Token(Token = "0x600199D")]
		void SetFocusedInteractable(Interactable interactable);
	}
	[Token(Token = "0x20004F4")]
	public class PinchStateModule
	{
		[Token(Token = "0x20004F5")]
		private enum PinchState
		{
			[Token(Token = "0x400196B")]
			None,
			[Token(Token = "0x400196C")]
			PinchDown,
			[Token(Token = "0x400196D")]
			PinchStay,
			[Token(Token = "0x400196E")]
			PinchUp
		}

		[Token(Token = "0x4001967")]
		private const float PINCH_STRENGTH_THRESHOLD = 1f;

		[Token(Token = "0x4001968")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private PinchState _currPinchState;

		[Token(Token = "0x4001969")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Interactable _firstFocusedInteractable;

		[Token(Token = "0x17000257")]
		public bool PinchUpAndDownOnFocusedObject
		{
			[Token(Token = "0x60019A2")]
			[Address(RVA = "0xBE5458", Offset = "0xBE5458", VA = "0xBE5458")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000258")]
		public bool PinchSteadyOnFocusedObject
		{
			[Token(Token = "0x60019A3")]
			[Address(RVA = "0xBE54D4", Offset = "0xBE54D4", VA = "0xBE54D4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000259")]
		public bool PinchDownOnFocusedObject
		{
			[Token(Token = "0x60019A4")]
			[Address(RVA = "0xBE5550", Offset = "0xBE5550", VA = "0xBE5550")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60019A5")]
		[Address(RVA = "0xBE55CC", Offset = "0xBE55CC", VA = "0xBE55CC")]
		public PinchStateModule()
		{
		}

		[Token(Token = "0x60019A6")]
		[Address(RVA = "0xBE55EC", Offset = "0xBE55EC", VA = "0xBE55EC")]
		public void UpdateState(OVRHand hand, Interactable currFocusedInteractable)
		{
		}
	}
	[Token(Token = "0x20004F6")]
	public class RayTool : InteractableTool
	{
		[Token(Token = "0x400196F")]
		private const float MINIMUM_RAY_CAST_DISTANCE = 0.8f;

		[Token(Token = "0x4001970")]
		private const float COLLIDER_RADIUS = 0.01f;

		[Token(Token = "0x4001971")]
		private const int NUM_MAX_PRIMARY_HITS = 10;

		[Token(Token = "0x4001972")]
		private const int NUM_MAX_SECONDARY_HITS = 25;

		[Token(Token = "0x4001973")]
		private const int NUM_COLLIDERS_TO_TEST = 20;

		[Token(Token = "0x4001974")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private RayToolView _rayToolView;

		[Token(Token = "0x4001975")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		[Range(0f, 45f)]
		private float _coneAngleDegrees;

		[Token(Token = "0x4001976")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		[SerializeField]
		private float _farFieldMaxDistance;

		[Token(Token = "0x4001977")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private PinchStateModule _pinchStateModule;

		[Token(Token = "0x4001978")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Interactable _focusedInteractable;

		[Token(Token = "0x4001979")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Collider[] _collidersOverlapped;

		[Token(Token = "0x400197A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Interactable _currInteractableCastedAgainst;

		[Token(Token = "0x400197B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private float _coneAngleReleaseDegrees;

		[Token(Token = "0x400197C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private RaycastHit[] _primaryHits;

		[Token(Token = "0x400197D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private Collider[] _secondaryOverlapResults;

		[Token(Token = "0x400197E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private bool _initialized;

		[Token(Token = "0x1700025A")]
		public override InteractableToolTags ToolTags
		{
			[Token(Token = "0x60019A7")]
			[Address(RVA = "0xBE5738", Offset = "0xBE5738", VA = "0xBE5738", Slot = "4")]
			get
			{
				return default(InteractableToolTags);
			}
		}

		[Token(Token = "0x1700025B")]
		public override ToolInputState ToolInputState
		{
			[Token(Token = "0x60019A8")]
			[Address(RVA = "0xBE5740", Offset = "0xBE5740", VA = "0xBE5740", Slot = "5")]
			get
			{
				return default(ToolInputState);
			}
		}

		[Token(Token = "0x1700025C")]
		public override bool IsFarFieldTool
		{
			[Token(Token = "0x60019A9")]
			[Address(RVA = "0xBE579C", Offset = "0xBE579C", VA = "0xBE579C", Slot = "6")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700025D")]
		public override bool EnableState
		{
			[Token(Token = "0x60019AA")]
			[Address(RVA = "0xBE57A4", Offset = "0xBE57A4", VA = "0xBE57A4", Slot = "10")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60019AB")]
			[Address(RVA = "0xBE57E4", Offset = "0xBE57E4", VA = "0xBE57E4", Slot = "11")]
			set
			{
			}
		}

		[Token(Token = "0x60019AC")]
		[Address(RVA = "0xBE5854", Offset = "0xBE5854", VA = "0xBE5854", Slot = "12")]
		public override void Initialize()
		{
		}

		[Token(Token = "0x60019AD")]
		[Address(RVA = "0xBE58A0", Offset = "0xBE58A0", VA = "0xBE58A0")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60019AE")]
		[Address(RVA = "0xBE592C", Offset = "0xBE592C", VA = "0xBE592C")]
		private void Update()
		{
		}

		[Token(Token = "0x60019AF")]
		[Address(RVA = "0xBE5BD0", Offset = "0xBE5BD0", VA = "0xBE5BD0")]
		private Vector3 GetRayCastOrigin()
		{
			return default(Vector3);
		}

		[Token(Token = "0x60019B0")]
		[Address(RVA = "0xBE5C4C", Offset = "0xBE5C4C", VA = "0xBE5C4C", Slot = "7")]
		public override List<InteractableCollisionInfo> GetNextIntersectingObjects()
		{
			return null;
		}

		[Token(Token = "0x60019B1")]
		[Address(RVA = "0xBE6010", Offset = "0xBE6010", VA = "0xBE6010")]
		private bool HasRayReleasedInteractable(Interactable focusedInteractable)
		{
			return default(bool);
		}

		[Token(Token = "0x60019B2")]
		[Address(RVA = "0xBE61AC", Offset = "0xBE61AC", VA = "0xBE61AC")]
		private Interactable FindTargetInteractable()
		{
			return null;
		}

		[Token(Token = "0x60019B3")]
		[Address(RVA = "0xBE62C4", Offset = "0xBE62C4", VA = "0xBE62C4")]
		private Interactable FindPrimaryRaycastHit(Vector3 rayOrigin, Vector3 rayDirection)
		{
			return null;
		}

		[Token(Token = "0x60019B4")]
		[Address(RVA = "0xBE65E8", Offset = "0xBE65E8", VA = "0xBE65E8")]
		private Interactable FindInteractableViaConeTest(Vector3 rayOrigin, Vector3 rayDirection)
		{
			return null;
		}

		[Token(Token = "0x60019B5")]
		[Address(RVA = "0xBE6964", Offset = "0xBE6964", VA = "0xBE6964", Slot = "8")]
		public override void FocusOnInteractable(Interactable focusedInteractable, ColliderZone colliderZone)
		{
		}

		[Token(Token = "0x60019B6")]
		[Address(RVA = "0xBE6A24", Offset = "0xBE6A24", VA = "0xBE6A24", Slot = "9")]
		public override void DeFocus()
		{
		}

		[Token(Token = "0x60019B7")]
		[Address(RVA = "0xBE6A4C", Offset = "0xBE6A4C", VA = "0xBE6A4C")]
		public RayTool()
		{
		}
	}
	[Token(Token = "0x20004F7")]
	public class RayToolView : MonoBehaviour, InteractableToolView
	{
		[Token(Token = "0x400197F")]
		private const int NUM_RAY_LINE_POSITIONS = 25;

		[Token(Token = "0x4001980")]
		private const float DEFAULT_RAY_CAST_DISTANCE = 3f;

		[Token(Token = "0x4001981")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Transform _targetTransform;

		[Token(Token = "0x4001982")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private LineRenderer _lineRenderer;

		[Token(Token = "0x4001983")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool _toolActivateState;

		[Token(Token = "0x4001984")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Transform _focusedTransform;

		[Token(Token = "0x4001985")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Vector3[] linePositions;

		[Token(Token = "0x4001986")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Gradient _oldColorGradient;

		[Token(Token = "0x4001987")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Gradient _highLightColorGradient;

		[Token(Token = "0x1700025E")]
		public bool EnableState
		{
			[Token(Token = "0x60019B8")]
			[Address(RVA = "0xBE57C8", Offset = "0xBE57C8", VA = "0xBE57C8", Slot = "6")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60019B9")]
			[Address(RVA = "0xBE5800", Offset = "0xBE5800", VA = "0xBE5800", Slot = "7")]
			set
			{
			}
		}

		[Token(Token = "0x1700025F")]
		public bool ToolActivateState
		{
			[Token(Token = "0x60019BA")]
			[Address(RVA = "0xBE6B24", Offset = "0xBE6B24", VA = "0xBE6B24", Slot = "8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60019BB")]
			[Address(RVA = "0xBE5B94", Offset = "0xBE5B94", VA = "0xBE5B94", Slot = "9")]
			set
			{
			}
		}

		[Token(Token = "0x17000260")]
		public InteractableTool InteractableTool
		{
			[Token(Token = "0x60019BD")]
			[Address(RVA = "0xBE6D2C", Offset = "0xBE6D2C", VA = "0xBE6D2C", Slot = "4")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x60019BE")]
			[Address(RVA = "0xBE6D34", Offset = "0xBE6D34", VA = "0xBE6D34")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x60019BC")]
		[Address(RVA = "0xBE6B2C", Offset = "0xBE6B2C", VA = "0xBE6B2C")]
		private void Awake()
		{
		}

		[Token(Token = "0x60019BF")]
		[Address(RVA = "0xBE6994", Offset = "0xBE6994", VA = "0xBE6994", Slot = "5")]
		public void SetFocusedInteractable(Interactable interactable)
		{
		}

		[Token(Token = "0x60019C0")]
		[Address(RVA = "0xBE6D3C", Offset = "0xBE6D3C", VA = "0xBE6D3C")]
		private void Update()
		{
		}

		[Token(Token = "0x60019C1")]
		[Address(RVA = "0xBE6FE8", Offset = "0xBE6FE8", VA = "0xBE6FE8")]
		public static Vector3 GetPointOnBezierCurve(Vector3 p0, Vector3 p1, Vector3 p2, Vector3 p3, float t)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60019C2")]
		[Address(RVA = "0xBE7090", Offset = "0xBE7090", VA = "0xBE7090")]
		public RayToolView()
		{
		}
	}
	[Token(Token = "0x20004F8")]
	public class DistanceGrabberSample : MonoBehaviour
	{
		[Token(Token = "0x4001989")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool useSpherecast;

		[Token(Token = "0x400198A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		private bool allowGrabThroughWalls;

		[Token(Token = "0x400198B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private DistanceGrabber[] m_grabbers;

		[Token(Token = "0x17000261")]
		public bool UseSpherecast
		{
			[Token(Token = "0x60019C3")]
			[Address(RVA = "0xBE70E8", Offset = "0xBE70E8", VA = "0xBE70E8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60019C4")]
			[Address(RVA = "0xBE70F0", Offset = "0xBE70F0", VA = "0xBE70F0")]
			set
			{
			}
		}

		[Token(Token = "0x17000262")]
		public bool AllowGrabThroughWalls
		{
			[Token(Token = "0x60019C5")]
			[Address(RVA = "0xBE716C", Offset = "0xBE716C", VA = "0xBE716C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60019C6")]
			[Address(RVA = "0xBE7174", Offset = "0xBE7174", VA = "0xBE7174")]
			set
			{
			}
		}

		[Token(Token = "0x60019C7")]
		[Address(RVA = "0xBE71D0", Offset = "0xBE71D0", VA = "0xBE71D0")]
		private void Start()
		{
		}

		[Token(Token = "0x60019C8")]
		[Address(RVA = "0xBE7470", Offset = "0xBE7470", VA = "0xBE7470")]
		public void ToggleSphereCasting(Toggle t)
		{
		}

		[Token(Token = "0x60019C9")]
		[Address(RVA = "0xBE7480", Offset = "0xBE7480", VA = "0xBE7480")]
		public void ToggleGrabThroughWalls(Toggle t)
		{
		}

		[Token(Token = "0x60019CA")]
		[Address(RVA = "0xBE7490", Offset = "0xBE7490", VA = "0xBE7490")]
		public DistanceGrabberSample()
		{
		}
	}
	[Token(Token = "0x20004F9")]
	public class ControllerBoxController : MonoBehaviour
	{
		[Token(Token = "0x400198C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private TrainLocomotive _locomotive;

		[Token(Token = "0x400198D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private CowController _cowController;

		[Token(Token = "0x60019CB")]
		[Address(RVA = "0xBE7498", Offset = "0xBE7498", VA = "0xBE7498")]
		private void Awake()
		{
		}

		[Token(Token = "0x60019CC")]
		[Address(RVA = "0xBE749C", Offset = "0xBE749C", VA = "0xBE749C")]
		public void StartStopStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x60019CD")]
		[Address(RVA = "0xBE7508", Offset = "0xBE7508", VA = "0xBE7508")]
		public void DecreaseSpeedStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x60019CE")]
		[Address(RVA = "0xBE7598", Offset = "0xBE7598", VA = "0xBE7598")]
		public void IncreaseSpeedStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x60019CF")]
		[Address(RVA = "0xBE7628", Offset = "0xBE7628", VA = "0xBE7628")]
		public void SmokeButtonStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x60019D0")]
		[Address(RVA = "0xBE76D4", Offset = "0xBE76D4", VA = "0xBE76D4")]
		public void WhistleButtonStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x60019D1")]
		[Address(RVA = "0xBE77B0", Offset = "0xBE77B0", VA = "0xBE77B0")]
		public void ReverseButtonStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x60019D2")]
		[Address(RVA = "0xBE77F4", Offset = "0xBE77F4", VA = "0xBE77F4")]
		public void SwitchVisualization(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x60019D3")]
		[Address(RVA = "0xBE7854", Offset = "0xBE7854", VA = "0xBE7854")]
		public void GoMoo(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x60019D4")]
		[Address(RVA = "0xBE78B4", Offset = "0xBE78B4", VA = "0xBE78B4")]
		public ControllerBoxController()
		{
		}
	}
	[Token(Token = "0x20004FA")]
	public class CowController : MonoBehaviour
	{
		[Token(Token = "0x400198E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Animation _cowAnimation;

		[Token(Token = "0x400198F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private AudioSource _mooCowAudioSource;

		[Token(Token = "0x60019D5")]
		[Address(RVA = "0xBE78BC", Offset = "0xBE78BC", VA = "0xBE78BC")]
		private void Start()
		{
		}

		[Token(Token = "0x60019D6")]
		[Address(RVA = "0xBE78C0", Offset = "0xBE78C0", VA = "0xBE78C0")]
		public void PlayMooSound()
		{
		}

		[Token(Token = "0x60019D7")]
		[Address(RVA = "0xBE7884", Offset = "0xBE7884", VA = "0xBE7884")]
		public void GoMooCowGo()
		{
		}

		[Token(Token = "0x60019D8")]
		[Address(RVA = "0xBE78F4", Offset = "0xBE78F4", VA = "0xBE78F4")]
		public CowController()
		{
		}
	}
	[Token(Token = "0x20004FB")]
	public class PanelHMDFollower : MonoBehaviour
	{
		[Token(Token = "0x20004FC")]
		[CompilerGenerated]
		private sealed class <LerpToHMD>d__13 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400199A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400199B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400199C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public PanelHMDFollower <>4__this;

			[Token(Token = "0x400199D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private Vector3 <newPanelPosition>5__2;

			[Token(Token = "0x400199E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private float <startTime>5__3;

			[Token(Token = "0x400199F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private float <endTime>5__4;

			[Token(Token = "0x17000263")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60019E1")]
				[Address(RVA = "0xBE7F3C", Offset = "0xBE7F3C", VA = "0xBE7F3C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000264")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60019E3")]
				[Address(RVA = "0xBE7F84", Offset = "0xBE7F84", VA = "0xBE7F84", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60019DE")]
			[Address(RVA = "0xBE7CC4", Offset = "0xBE7CC4", VA = "0xBE7CC4")]
			[DebuggerHidden]
			public <LerpToHMD>d__13(int <>1__state)
			{
			}

			[Token(Token = "0x60019DF")]
			[Address(RVA = "0xBE7D8C", Offset = "0xBE7D8C", VA = "0xBE7D8C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60019E0")]
			[Address(RVA = "0xBE7D90", Offset = "0xBE7D90", VA = "0xBE7D90", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60019E2")]
			[Address(RVA = "0xBE7F44", Offset = "0xBE7F44", VA = "0xBE7F44", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001990")]
		private const float TOTAL_DURATION = 3f;

		[Token(Token = "0x4001991")]
		private const float HMD_MOVEMENT_THRESHOLD = 0.3f;

		[Token(Token = "0x4001992")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private float _maxDistance;

		[Token(Token = "0x4001993")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private float _minDistance;

		[Token(Token = "0x4001994")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float _minZDistance;

		[Token(Token = "0x4001995")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private OVRCameraRig _cameraRig;

		[Token(Token = "0x4001996")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Vector3 _panelInitialPosition;

		[Token(Token = "0x4001997")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Coroutine _coroutine;

		[Token(Token = "0x4001998")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Vector3 _prevPos;

		[Token(Token = "0x4001999")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private Vector3 _lastMovedToPos;

		[Token(Token = "0x60019D9")]
		[Address(RVA = "0xBE78FC", Offset = "0xBE78FC", VA = "0xBE78FC")]
		private void Awake()
		{
		}

		[Token(Token = "0x60019DA")]
		[Address(RVA = "0xBE7990", Offset = "0xBE7990", VA = "0xBE7990")]
		private void Update()
		{
		}

		[Token(Token = "0x60019DB")]
		[Address(RVA = "0xBE7C84", Offset = "0xBE7C84", VA = "0xBE7C84")]
		private Vector3 CalculateIdealAnchorPosition()
		{
			return default(Vector3);
		}

		[Token(Token = "0x60019DC")]
		[Address(RVA = "0xBE7C1C", Offset = "0xBE7C1C", VA = "0xBE7C1C")]
		[IteratorStateMachine(typeof(<LerpToHMD>d__13))]
		private IEnumerator LerpToHMD()
		{
			return null;
		}

		[Token(Token = "0x60019DD")]
		[Address(RVA = "0xBE7CEC", Offset = "0xBE7CEC", VA = "0xBE7CEC")]
		public PanelHMDFollower()
		{
		}
	}
	[Token(Token = "0x20004FD")]
	public class SelectionCylinder : MonoBehaviour
	{
		[Token(Token = "0x20004FE")]
		public enum SelectionState
		{
			[Token(Token = "0x40019A7")]
			Off,
			[Token(Token = "0x40019A8")]
			Selected,
			[Token(Token = "0x40019A9")]
			Highlighted
		}

		[Token(Token = "0x40019A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private MeshRenderer _selectionMeshRenderer;

		[Token(Token = "0x40019A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static int _colorId;

		[Token(Token = "0x40019A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Material[] _selectionMaterials;

		[Token(Token = "0x40019A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Color[] _defaultSelectionColors;

		[Token(Token = "0x40019A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Color[] _highlightColors;

		[Token(Token = "0x40019A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private SelectionState _currSelectionState;

		[Token(Token = "0x17000265")]
		public SelectionState CurrSelectionState
		{
			[Token(Token = "0x60019E4")]
			[Address(RVA = "0xBE7F8C", Offset = "0xBE7F8C", VA = "0xBE7F8C")]
			get
			{
				return default(SelectionState);
			}
			[Token(Token = "0x60019E5")]
			[Address(RVA = "0xBE7F94", Offset = "0xBE7F94", VA = "0xBE7F94")]
			set
			{
			}
		}

		[Token(Token = "0x60019E6")]
		[Address(RVA = "0xBE80E8", Offset = "0xBE80E8", VA = "0xBE80E8")]
		private void Awake()
		{
		}

		[Token(Token = "0x60019E7")]
		[Address(RVA = "0xBE8270", Offset = "0xBE8270", VA = "0xBE8270")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60019E8")]
		[Address(RVA = "0xBE8008", Offset = "0xBE8008", VA = "0xBE8008")]
		private void AffectSelectionColor(Color[] newColors)
		{
		}

		[Token(Token = "0x60019E9")]
		[Address(RVA = "0xBE8338", Offset = "0xBE8338", VA = "0xBE8338")]
		public SelectionCylinder()
		{
		}
	}
	[Token(Token = "0x20004FF")]
	public class TrackSegment : MonoBehaviour
	{
		[Token(Token = "0x2000500")]
		public enum SegmentType
		{
			[Token(Token = "0x40019B8")]
			Straight,
			[Token(Token = "0x40019B9")]
			LeftTurn,
			[Token(Token = "0x40019BA")]
			RightTurn,
			[Token(Token = "0x40019BB")]
			Switch
		}

		[Token(Token = "0x40019AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private SegmentType _segmentType;

		[Token(Token = "0x40019AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private MeshFilter _straight;

		[Token(Token = "0x40019AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private MeshFilter _leftTurn;

		[Token(Token = "0x40019AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private MeshFilter _rightTurn;

		[Token(Token = "0x40019AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float _gridSize;

		[Token(Token = "0x40019AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private int _subDivCount;

		[Token(Token = "0x40019B0")]
		private const float _originalGridSize = 0.8f;

		[Token(Token = "0x40019B1")]
		private const float _trackWidth = 0.15f;

		[Token(Token = "0x40019B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private GameObject _mesh;

		[Token(Token = "0x40019B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Pose _p1;

		[Token(Token = "0x40019B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Pose _p2;

		[Token(Token = "0x40019B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Pose _endPose;

		[Token(Token = "0x17000266")]
		public float StartDistance
		{
			[Token(Token = "0x60019EB")]
			[Address(RVA = "0xBE83A8", Offset = "0xBE83A8", VA = "0xBE83A8")]
			[CompilerGenerated]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60019EC")]
			[Address(RVA = "0xBE83B0", Offset = "0xBE83B0", VA = "0xBE83B0")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x17000267")]
		public float GridSize
		{
			[Token(Token = "0x60019ED")]
			[Address(RVA = "0xBE83B8", Offset = "0xBE83B8", VA = "0xBE83B8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60019EE")]
			[Address(RVA = "0xBE83C0", Offset = "0xBE83C0", VA = "0xBE83C0")]
			private set
			{
			}
		}

		[Token(Token = "0x17000268")]
		public int SubDivCount
		{
			[Token(Token = "0x60019EF")]
			[Address(RVA = "0xBE83C8", Offset = "0xBE83C8", VA = "0xBE83C8")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60019F0")]
			[Address(RVA = "0xBE83D0", Offset = "0xBE83D0", VA = "0xBE83D0")]
			set
			{
			}
		}

		[Token(Token = "0x17000269")]
		public SegmentType Type
		{
			[Token(Token = "0x60019F1")]
			[Address(RVA = "0xBE83D8", Offset = "0xBE83D8", VA = "0xBE83D8")]
			get
			{
				return default(SegmentType);
			}
		}

		[Token(Token = "0x1700026A")]
		public Pose EndPose
		{
			[Token(Token = "0x60019F2")]
			[Address(RVA = "0xBE83E0", Offset = "0xBE83E0", VA = "0xBE83E0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700026B")]
		public float Radius
		{
			[Token(Token = "0x60019F3")]
			[Address(RVA = "0xBE87B4", Offset = "0xBE87B4", VA = "0xBE87B4")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700026C")]
		public float SegmentLength
		{
			[Token(Token = "0x60019F5")]
			[Address(RVA = "0xBE843C", Offset = "0xBE843C", VA = "0xBE843C")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x60019F4")]
		[Address(RVA = "0xBE87C4", Offset = "0xBE87C4", VA = "0xBE87C4")]
		public float setGridSize(float size)
		{
			return default(float);
		}

		[Token(Token = "0x60019F6")]
		[Address(RVA = "0xBE87DC", Offset = "0xBE87DC", VA = "0xBE87DC")]
		private void Awake()
		{
		}

		[Token(Token = "0x60019F7")]
		[Address(RVA = "0xBE847C", Offset = "0xBE847C", VA = "0xBE847C")]
		public void UpdatePose(float distanceIntoSegment, Pose pose)
		{
		}

		[Token(Token = "0x60019F8")]
		[Address(RVA = "0xBE87E0", Offset = "0xBE87E0", VA = "0xBE87E0")]
		private void Update()
		{
		}

		[Token(Token = "0x60019F9")]
		[Address(RVA = "0xBE87E4", Offset = "0xBE87E4", VA = "0xBE87E4")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60019FA")]
		[Address(RVA = "0xBE8840", Offset = "0xBE8840", VA = "0xBE8840")]
		private void DrawDebugLines()
		{
		}

		[Token(Token = "0x60019FB")]
		[Address(RVA = "0xBE9174", Offset = "0xBE9174", VA = "0xBE9174")]
		public void RegenerateTrackAndMesh()
		{
		}

		[Token(Token = "0x60019FC")]
		[Address(RVA = "0xBE93CC", Offset = "0xBE93CC", VA = "0xBE93CC")]
		public TrackSegment()
		{
		}
	}
	[Token(Token = "0x2000501")]
	public class TrainButtonVisualController : MonoBehaviour
	{
		[Token(Token = "0x2000502")]
		[CompilerGenerated]
		private sealed class <ResetPosition>d__26 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40019CD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40019CE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40019CF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public TrainButtonVisualController <>4__this;

			[Token(Token = "0x40019D0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <startTime>5__2;

			[Token(Token = "0x40019D1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float <endTime>5__3;

			[Token(Token = "0x1700026D")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001A0B")]
				[Address(RVA = "0xBE9E84", Offset = "0xBE9E84", VA = "0xBE9E84", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700026E")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001A0D")]
				[Address(RVA = "0xBE9ECC", Offset = "0xBE9ECC", VA = "0xBE9ECC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001A08")]
			[Address(RVA = "0xBE9CC8", Offset = "0xBE9CC8", VA = "0xBE9CC8")]
			[DebuggerHidden]
			public <ResetPosition>d__26(int <>1__state)
			{
			}

			[Token(Token = "0x6001A09")]
			[Address(RVA = "0xBE9D18", Offset = "0xBE9D18", VA = "0xBE9D18", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001A0A")]
			[Address(RVA = "0xBE9D1C", Offset = "0xBE9D1C", VA = "0xBE9D1C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001A0C")]
			[Address(RVA = "0xBE9E8C", Offset = "0xBE9E8C", VA = "0xBE9E8C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40019BC")]
		private const float LERP_TO_OLD_POS_DURATION = 1f;

		[Token(Token = "0x40019BD")]
		private const float LOCAL_SIZE_HALVED = 0.5f;

		[Token(Token = "0x40019BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private MeshRenderer _meshRenderer;

		[Token(Token = "0x40019BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private MeshRenderer _glowRenderer;

		[Token(Token = "0x40019C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private ButtonController _buttonController;

		[Token(Token = "0x40019C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Color _buttonContactColor;

		[Token(Token = "0x40019C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Color _buttonActionColor;

		[Token(Token = "0x40019C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private AudioSource _audioSource;

		[Token(Token = "0x40019C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private AudioClip _actionSoundEffect;

		[Token(Token = "0x40019C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private Transform _buttonContactTransform;

		[Token(Token = "0x40019C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private float _contactMaxDisplacementDistance;

		[Token(Token = "0x40019C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Material _buttonMaterial;

		[Token(Token = "0x40019C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Color _buttonDefaultColor;

		[Token(Token = "0x40019C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private int _materialColorId;

		[Token(Token = "0x40019CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private bool _buttonInContactOrActionStates;

		[Token(Token = "0x40019CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Coroutine _lerpToOldPositionCr;

		[Token(Token = "0x40019CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Vector3 _oldPosition;

		[Token(Token = "0x60019FD")]
		[Address(RVA = "0xBE9508", Offset = "0xBE9508", VA = "0xBE9508")]
		private void Awake()
		{
		}

		[Token(Token = "0x60019FE")]
		[Address(RVA = "0xBE95AC", Offset = "0xBE95AC", VA = "0xBE95AC")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60019FF")]
		[Address(RVA = "0xBE963C", Offset = "0xBE963C", VA = "0xBE963C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001A00")]
		[Address(RVA = "0xBE9784", Offset = "0xBE9784", VA = "0xBE9784")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001A01")]
		[Address(RVA = "0xBE9910", Offset = "0xBE9910", VA = "0xBE9910")]
		private void ActionOrInContactZoneStayEvent(ColliderZoneArgs collisionArgs)
		{
		}

		[Token(Token = "0x6001A02")]
		[Address(RVA = "0xBE9A20", Offset = "0xBE9A20", VA = "0xBE9A20")]
		private void InteractableStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x6001A03")]
		[Address(RVA = "0xBE9C0C", Offset = "0xBE9C0C", VA = "0xBE9C0C")]
		private void PlaySound(AudioClip clip)
		{
		}

		[Token(Token = "0x6001A04")]
		[Address(RVA = "0xBE9B30", Offset = "0xBE9B30", VA = "0xBE9B30")]
		private void StopResetLerping()
		{
		}

		[Token(Token = "0x6001A05")]
		[Address(RVA = "0xBE9B44", Offset = "0xBE9B44", VA = "0xBE9B44")]
		private void LerpToOldPosition()
		{
		}

		[Token(Token = "0x6001A06")]
		[Address(RVA = "0xBE9C60", Offset = "0xBE9C60", VA = "0xBE9C60")]
		[IteratorStateMachine(typeof(<ResetPosition>d__26))]
		private IEnumerator ResetPosition()
		{
			return null;
		}

		[Token(Token = "0x6001A07")]
		[Address(RVA = "0xBE9CF0", Offset = "0xBE9CF0", VA = "0xBE9CF0")]
		public TrainButtonVisualController()
		{
		}
	}
	[Token(Token = "0x2000503")]
	public class TrainCar : TrainCarBase
	{
		[Token(Token = "0x40019D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private TrainCarBase _parentLocomotive;

		[Token(Token = "0x40019D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		protected float _distanceBehindParent;

		[Token(Token = "0x1700026F")]
		public float DistanceBehindParentScaled
		{
			[Token(Token = "0x6001A0E")]
			[Address(RVA = "0xBE9ED4", Offset = "0xBE9ED4", VA = "0xBE9ED4")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6001A0F")]
		[Address(RVA = "0xBE9EE4", Offset = "0xBE9EE4", VA = "0xBE9EE4", Slot = "4")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6001A10")]
		[Address(RVA = "0xBE9EEC", Offset = "0xBE9EEC", VA = "0xBE9EEC", Slot = "5")]
		public override void UpdatePosition()
		{
		}

		[Token(Token = "0x6001A11")]
		[Address(RVA = "0xBEA21C", Offset = "0xBEA21C", VA = "0xBEA21C")]
		public TrainCar()
		{
		}
	}
	[Token(Token = "0x2000504")]
	public abstract class TrainCarBase : MonoBehaviour
	{
		[Token(Token = "0x40019D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Vector3 OFFSET;

		[Token(Token = "0x40019D5")]
		private const float WHEEL_RADIUS = 0.027f;

		[Token(Token = "0x40019D6")]
		private const float TWO_PI = (float)Math.PI * 2f;

		[Token(Token = "0x40019D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		protected Transform _frontWheels;

		[Token(Token = "0x40019D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		protected Transform _rearWheels;

		[Token(Token = "0x40019D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		protected TrainTrack _trainTrack;

		[Token(Token = "0x40019DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		protected Transform[] _individualWheels;

		[Token(Token = "0x40019DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		protected float scale;

		[Token(Token = "0x40019DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Pose _frontPose;

		[Token(Token = "0x40019DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Pose _rearPose;

		[Token(Token = "0x17000270")]
		public float Distance
		{
			[Token(Token = "0x6001A12")]
			[Address(RVA = "0xBEA300", Offset = "0xBEA300", VA = "0xBEA300")]
			[CompilerGenerated]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001A13")]
			[Address(RVA = "0xBEA308", Offset = "0xBEA308", VA = "0xBEA308")]
			[CompilerGenerated]
			protected set
			{
			}
		}

		[Token(Token = "0x17000271")]
		public float Scale
		{
			[Token(Token = "0x6001A14")]
			[Address(RVA = "0xBEA310", Offset = "0xBEA310", VA = "0xBEA310")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001A15")]
			[Address(RVA = "0xBEA318", Offset = "0xBEA318", VA = "0xBEA318")]
			set
			{
			}
		}

		[Token(Token = "0x6001A16")]
		[Address(RVA = "0xBE9EE8", Offset = "0xBE9EE8", VA = "0xBE9EE8", Slot = "4")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x6001A17")]
		[Address(RVA = "0xBEA320", Offset = "0xBEA320", VA = "0xBEA320")]
		public void UpdatePose(float distance, TrainCarBase train, Pose pose)
		{
		}

		[Token(Token = "0x6001A18")]
		[Address(RVA = "0xBE9F28", Offset = "0xBE9F28", VA = "0xBE9F28")]
		protected void UpdateCarPosition()
		{
		}

		[Token(Token = "0x6001A19")]
		[Address(RVA = "0xBEA138", Offset = "0xBEA138", VA = "0xBEA138")]
		protected void RotateCarWheels()
		{
		}

		[Token(Token = "0x6001A1A")]
		public abstract void UpdatePosition();

		[Token(Token = "0x6001A1B")]
		[Address(RVA = "0xBEA27C", Offset = "0xBEA27C", VA = "0xBEA27C")]
		protected TrainCarBase()
		{
		}
	}
	[Token(Token = "0x2000505")]
	public class TrainCrossingController : MonoBehaviour
	{
		[Token(Token = "0x2000506")]
		[CompilerGenerated]
		private sealed class <AnimateCrossing>d__15 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40019E9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40019EA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40019EB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public TrainCrossingController <>4__this;

			[Token(Token = "0x40019EC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float animationLength;

			[Token(Token = "0x40019ED")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float <animationEndTime>5__2;

			[Token(Token = "0x40019EE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <lightBlinkDuration>5__3;

			[Token(Token = "0x40019EF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private float <lightBlinkStartTime>5__4;

			[Token(Token = "0x40019F0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private float <lightBlinkEndTime>5__5;

			[Token(Token = "0x40019F1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private Material <lightToBlinkOn>5__6;

			[Token(Token = "0x40019F2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private Material <lightToBlinkOff>5__7;

			[Token(Token = "0x40019F3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			private Color <onColor>5__8;

			[Token(Token = "0x40019F4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			private Color <offColor>5__9;

			[Token(Token = "0x17000272")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001A29")]
				[Address(RVA = "0xBEAB68", Offset = "0xBEAB68", VA = "0xBEAB68", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000273")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001A2B")]
				[Address(RVA = "0xBEABB0", Offset = "0xBEABB0", VA = "0xBEABB0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001A26")]
			[Address(RVA = "0xBEA82C", Offset = "0xBEA82C", VA = "0xBEA82C")]
			[DebuggerHidden]
			public <AnimateCrossing>d__15(int <>1__state)
			{
			}

			[Token(Token = "0x6001A27")]
			[Address(RVA = "0xBEA9A0", Offset = "0xBEA9A0", VA = "0xBEA9A0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001A28")]
			[Address(RVA = "0xBEA9A4", Offset = "0xBEA9A4", VA = "0xBEA9A4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001A2A")]
			[Address(RVA = "0xBEAB70", Offset = "0xBEAB70", VA = "0xBEAB70", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40019DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private AudioSource _audioSource;

		[Token(Token = "0x40019E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private AudioClip[] _crossingSounds;

		[Token(Token = "0x40019E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private MeshRenderer _lightSide1Renderer;

		[Token(Token = "0x40019E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private MeshRenderer _lightSide2Renderer;

		[Token(Token = "0x40019E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private SelectionCylinder _selectionCylinder;

		[Token(Token = "0x40019E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Material _lightsSide1Mat;

		[Token(Token = "0x40019E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Material _lightsSide2Mat;

		[Token(Token = "0x40019E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private int _colorId;

		[Token(Token = "0x40019E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Coroutine _xingAnimationCr;

		[Token(Token = "0x40019E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private InteractableTool _toolInteractingWithMe;

		[Token(Token = "0x6001A1D")]
		[Address(RVA = "0xBEA490", Offset = "0xBEA490", VA = "0xBEA490")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001A1E")]
		[Address(RVA = "0xBEA4D0", Offset = "0xBEA4D0", VA = "0xBEA4D0")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001A1F")]
		[Address(RVA = "0xBEA5A8", Offset = "0xBEA5A8", VA = "0xBEA5A8")]
		public void CrossingButtonStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x6001A20")]
		[Address(RVA = "0xBEA6EC", Offset = "0xBEA6EC", VA = "0xBEA6EC")]
		private void Update()
		{
		}

		[Token(Token = "0x6001A21")]
		[Address(RVA = "0xBEA600", Offset = "0xBEA600", VA = "0xBEA600")]
		private void ActivateTrainCrossing()
		{
		}

		[Token(Token = "0x6001A22")]
		[Address(RVA = "0xBEA7B4", Offset = "0xBEA7B4", VA = "0xBEA7B4")]
		[IteratorStateMachine(typeof(<AnimateCrossing>d__15))]
		private IEnumerator AnimateCrossing(float animationLength)
		{
			return null;
		}

		[Token(Token = "0x6001A23")]
		[Address(RVA = "0xBEA854", Offset = "0xBEA854", VA = "0xBEA854")]
		private void AffectMaterials(Material[] materials, Color newColor)
		{
		}

		[Token(Token = "0x6001A24")]
		[Address(RVA = "0xBEA8EC", Offset = "0xBEA8EC", VA = "0xBEA8EC")]
		private void ToggleLightObjects(bool enableState)
		{
		}

		[Token(Token = "0x6001A25")]
		[Address(RVA = "0xBEA948", Offset = "0xBEA948", VA = "0xBEA948")]
		public TrainCrossingController()
		{
		}
	}
	[Token(Token = "0x2000507")]
	public class TrainLocomotive : TrainCarBase
	{
		[Token(Token = "0x2000508")]
		private enum EngineSoundState
		{
			[Token(Token = "0x4001A13")]
			Start,
			[Token(Token = "0x4001A14")]
			AccelerateOrSetProperSpeed,
			[Token(Token = "0x4001A15")]
			Stop
		}

		[Token(Token = "0x2000509")]
		[CompilerGenerated]
		private sealed class <StartStopTrain>d__34 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001A16")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001A17")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001A18")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public bool startTrain;

			[Token(Token = "0x4001A19")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public TrainLocomotive <>4__this;

			[Token(Token = "0x4001A1A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <endSpeed>5__2;

			[Token(Token = "0x4001A1B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private float <timePeriodForSpeedChange>5__3;

			[Token(Token = "0x4001A1C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private float <startTime>5__4;

			[Token(Token = "0x4001A1D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private float <endTime>5__5;

			[Token(Token = "0x4001A1E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private float <startSpeed>5__6;

			[Token(Token = "0x17000274")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001A3E")]
				[Address(RVA = "0xBEB414", Offset = "0xBEB414", VA = "0xBEB414", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000275")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001A40")]
				[Address(RVA = "0xBEB45C", Offset = "0xBEB45C", VA = "0xBEB45C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001A3B")]
			[Address(RVA = "0xBEAE40", Offset = "0xBEAE40", VA = "0xBEAE40")]
			[DebuggerHidden]
			public <StartStopTrain>d__34(int <>1__state)
			{
			}

			[Token(Token = "0x6001A3C")]
			[Address(RVA = "0xBEB208", Offset = "0xBEB208", VA = "0xBEB208", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001A3D")]
			[Address(RVA = "0xBEB20C", Offset = "0xBEB20C", VA = "0xBEB20C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001A3F")]
			[Address(RVA = "0xBEB41C", Offset = "0xBEB41C", VA = "0xBEB41C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40019F5")]
		private const float MIN_SPEED = 0.2f;

		[Token(Token = "0x40019F6")]
		private const float MAX_SPEED = 2.7f;

		[Token(Token = "0x40019F7")]
		private const float SMOKE_SPEED_MULTIPLIER = 8f;

		[Token(Token = "0x40019F8")]
		private const int MAX_PARTICLES_MULTIPLIER = 3;

		[Token(Token = "0x40019F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Range(0.2f, 2.7f)]
		[SerializeField]
		protected float _initialSpeed;

		[Token(Token = "0x40019FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private GameObject _startStopButton;

		[Token(Token = "0x40019FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private GameObject _decreaseSpeedButton;

		[Token(Token = "0x40019FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private GameObject _increaseSpeedButton;

		[Token(Token = "0x40019FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private GameObject _smokeButton;

		[Token(Token = "0x40019FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private GameObject _whistleButton;

		[Token(Token = "0x40019FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private GameObject _reverseButton;

		[Token(Token = "0x4001A00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private AudioSource _whistleAudioSource;

		[Token(Token = "0x4001A01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private AudioClip _whistleSound;

		[Token(Token = "0x4001A02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		private AudioSource _engineAudioSource;

		[Token(Token = "0x4001A03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		private AudioClip[] _accelerationSounds;

		[Token(Token = "0x4001A04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[SerializeField]
		private AudioClip[] _decelerationSounds;

		[Token(Token = "0x4001A05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[SerializeField]
		private AudioClip _startUpSound;

		[Token(Token = "0x4001A06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[SerializeField]
		private AudioSource _smokeStackAudioSource;

		[Token(Token = "0x4001A07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[SerializeField]
		private AudioClip _smokeSound;

		[Token(Token = "0x4001A08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[SerializeField]
		private ParticleSystem _smoke1;

		[Token(Token = "0x4001A09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[SerializeField]
		private ParticleSystem _smoke2;

		[Token(Token = "0x4001A0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[SerializeField]
		private TrainCarBase[] _childCars;

		[Token(Token = "0x4001A0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private bool _isMoving;

		[Token(Token = "0x4001A0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE1")]
		private bool _reverse;

		[Token(Token = "0x4001A0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		private float _currentSpeed;

		[Token(Token = "0x4001A0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private float _speedDiv;

		[Token(Token = "0x4001A0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
		private float _standardRateOverTimeMultiplier;

		[Token(Token = "0x4001A10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private int _standardMaxParticles;

		[Token(Token = "0x4001A11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private Coroutine _startStopTrainCr;

		[Token(Token = "0x6001A2C")]
		[Address(RVA = "0xBEABB8", Offset = "0xBEABB8", VA = "0xBEABB8")]
		private void Start()
		{
		}

		[Token(Token = "0x6001A2D")]
		[Address(RVA = "0xBEACFC", Offset = "0xBEACFC", VA = "0xBEACFC")]
		private void Update()
		{
		}

		[Token(Token = "0x6001A2E")]
		[Address(RVA = "0xBEAD08", Offset = "0xBEAD08", VA = "0xBEAD08", Slot = "5")]
		public override void UpdatePosition()
		{
		}

		[Token(Token = "0x6001A2F")]
		[Address(RVA = "0xBE74CC", Offset = "0xBE74CC", VA = "0xBE74CC")]
		public void StartStopStateChanged()
		{
		}

		[Token(Token = "0x6001A30")]
		[Address(RVA = "0xBEAC80", Offset = "0xBEAC80", VA = "0xBEAC80")]
		[IteratorStateMachine(typeof(<StartStopTrain>d__34))]
		private IEnumerator StartStopTrain(bool startTrain)
		{
			return null;
		}

		[Token(Token = "0x6001A31")]
		[Address(RVA = "0xBEAE68", Offset = "0xBEAE68", VA = "0xBEAE68")]
		private float PlayEngineSound(EngineSoundState engineSoundState)
		{
			return default(float);
		}

		[Token(Token = "0x6001A32")]
		[Address(RVA = "0xBEADE0", Offset = "0xBEADE0", VA = "0xBEADE0")]
		private void UpdateDistance()
		{
		}

		[Token(Token = "0x6001A33")]
		[Address(RVA = "0xBE7538", Offset = "0xBE7538", VA = "0xBE7538")]
		public void DecreaseSpeedStateChanged()
		{
		}

		[Token(Token = "0x6001A34")]
		[Address(RVA = "0xBE75C8", Offset = "0xBE75C8", VA = "0xBE75C8")]
		public void IncreaseSpeedStateChanged()
		{
		}

		[Token(Token = "0x6001A35")]
		[Address(RVA = "0xBEB07C", Offset = "0xBEB07C", VA = "0xBEB07C")]
		private void UpdateSmokeEmissionBasedOnSpeed()
		{
		}

		[Token(Token = "0x6001A36")]
		[Address(RVA = "0xBEB170", Offset = "0xBEB170", VA = "0xBEB170")]
		private float GetCurrentSmokeEmission()
		{
			return default(float);
		}

		[Token(Token = "0x6001A37")]
		[Address(RVA = "0xBE7658", Offset = "0xBE7658", VA = "0xBE7658")]
		public void SmokeButtonStateChanged()
		{
		}

		[Token(Token = "0x6001A38")]
		[Address(RVA = "0xBE7704", Offset = "0xBE7704", VA = "0xBE7704")]
		public void WhistleButtonStateChanged()
		{
		}

		[Token(Token = "0x6001A39")]
		[Address(RVA = "0xBE77E4", Offset = "0xBE77E4", VA = "0xBE77E4")]
		public void ReverseButtonStateChanged()
		{
		}

		[Token(Token = "0x6001A3A")]
		[Address(RVA = "0xBEB1AC", Offset = "0xBEB1AC", VA = "0xBEB1AC")]
		public TrainLocomotive()
		{
		}
	}
	[Token(Token = "0x200050A")]
	public class TrainTrack : MonoBehaviour
	{
		[Token(Token = "0x4001A1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private float _gridSize;

		[Token(Token = "0x4001A20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private int _subDivCount;

		[Token(Token = "0x4001A21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Transform _segmentParent;

		[Token(Token = "0x4001A22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Transform _trainParent;

		[Token(Token = "0x4001A23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private bool _regnerateTrackMeshOnAwake;

		[Token(Token = "0x4001A24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float _trainLength;

		[Token(Token = "0x4001A25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private TrackSegment[] _trackSegments;

		[Token(Token = "0x17000276")]
		public float TrackLength
		{
			[Token(Token = "0x6001A41")]
			[Address(RVA = "0xBEB464", Offset = "0xBEB464", VA = "0xBEB464")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001A42")]
			[Address(RVA = "0xBEB46C", Offset = "0xBEB46C", VA = "0xBEB46C")]
			private set
			{
			}
		}

		[Token(Token = "0x6001A43")]
		[Address(RVA = "0xBEB474", Offset = "0xBEB474", VA = "0xBEB474")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001A44")]
		[Address(RVA = "0xBEA388", Offset = "0xBEA388", VA = "0xBEA388")]
		public TrackSegment GetSegment(float distance)
		{
			return null;
		}

		[Token(Token = "0x6001A45")]
		[Address(RVA = "0xBEB478", Offset = "0xBEB478", VA = "0xBEB478")]
		public void Regenerate()
		{
		}

		[Token(Token = "0x6001A46")]
		[Address(RVA = "0xBEB664", Offset = "0xBEB664", VA = "0xBEB664")]
		private void SetScale(float ratio)
		{
		}

		[Token(Token = "0x6001A47")]
		[Address(RVA = "0xBEB744", Offset = "0xBEB744", VA = "0xBEB744")]
		public TrainTrack()
		{
		}
	}
	[Token(Token = "0x200050B")]
	public class Pose
	{
		[Token(Token = "0x4001A26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Vector3 Position;

		[Token(Token = "0x4001A27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Quaternion Rotation;

		[Token(Token = "0x6001A48")]
		[Address(RVA = "0xBE9470", Offset = "0xBE9470", VA = "0xBE9470")]
		public Pose()
		{
		}

		[Token(Token = "0x6001A49")]
		[Address(RVA = "0xBEB760", Offset = "0xBEB760", VA = "0xBEB760")]
		public Pose(Vector3 position, Quaternion rotation)
		{
		}
	}
	[Token(Token = "0x200050C")]
	public class WindmillBladesController : MonoBehaviour
	{
		[Token(Token = "0x200050D")]
		[CompilerGenerated]
		private sealed class <LerpToSpeed>d__17 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001A33")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001A34")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001A35")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public WindmillBladesController <>4__this;

			[Token(Token = "0x4001A36")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float goalSpeed;

			[Token(Token = "0x4001A37")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float <totalTime>5__2;

			[Token(Token = "0x4001A38")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <startSpeed>5__3;

			[Token(Token = "0x17000278")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001A56")]
				[Address(RVA = "0xBEBCEC", Offset = "0xBEBCEC", VA = "0xBEBCEC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000279")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001A58")]
				[Address(RVA = "0xBEBD34", Offset = "0xBEBD34", VA = "0xBEBD34", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001A53")]
			[Address(RVA = "0xBEBA1C", Offset = "0xBEBA1C", VA = "0xBEBA1C")]
			[DebuggerHidden]
			public <LerpToSpeed>d__17(int <>1__state)
			{
			}

			[Token(Token = "0x6001A54")]
			[Address(RVA = "0xBEBB68", Offset = "0xBEBB68", VA = "0xBEBB68", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001A55")]
			[Address(RVA = "0xBEBB6C", Offset = "0xBEBB6C", VA = "0xBEBB6C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001A57")]
			[Address(RVA = "0xBEBCF4", Offset = "0xBEBCF4", VA = "0xBEBCF4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200050E")]
		[CompilerGenerated]
		private sealed class <PlaySoundDelayed>d__18 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001A39")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001A3A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001A3B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public WindmillBladesController <>4__this;

			[Token(Token = "0x4001A3C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public AudioClip initial;

			[Token(Token = "0x4001A3D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public float timeDelayAfterInitial;

			[Token(Token = "0x4001A3E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public AudioClip clip;

			[Token(Token = "0x1700027A")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001A5C")]
				[Address(RVA = "0xBEBE04", Offset = "0xBEBE04", VA = "0xBEBE04", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700027B")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001A5E")]
				[Address(RVA = "0xBEBE4C", Offset = "0xBEBE4C", VA = "0xBEBE4C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001A59")]
			[Address(RVA = "0xBEBAD0", Offset = "0xBEBAD0", VA = "0xBEBAD0")]
			[DebuggerHidden]
			public <PlaySoundDelayed>d__18(int <>1__state)
			{
			}

			[Token(Token = "0x6001A5A")]
			[Address(RVA = "0xBEBD3C", Offset = "0xBEBD3C", VA = "0xBEBD3C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001A5B")]
			[Address(RVA = "0xBEBD40", Offset = "0xBEBD40", VA = "0xBEBD40", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001A5D")]
			[Address(RVA = "0xBEBE0C", Offset = "0xBEBE0C", VA = "0xBEBE0C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001A28")]
		private const float MAX_TIME = 1f;

		[Token(Token = "0x4001A29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private AudioSource _audioSource;

		[Token(Token = "0x4001A2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private AudioClip _windMillRotationSound;

		[Token(Token = "0x4001A2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private AudioClip _windMillStartSound;

		[Token(Token = "0x4001A2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private AudioClip _windMillStopSound;

		[Token(Token = "0x4001A2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float _currentSpeed;

		[Token(Token = "0x4001A2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Coroutine _lerpSpeedCoroutine;

		[Token(Token = "0x4001A30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Coroutine _audioChangeCr;

		[Token(Token = "0x4001A31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Quaternion _originalRotation;

		[Token(Token = "0x4001A32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private float _rotAngle;

		[Token(Token = "0x17000277")]
		public bool IsMoving
		{
			[Token(Token = "0x6001A4A")]
			[Address(RVA = "0xBEB7C4", Offset = "0xBEB7C4", VA = "0xBEB7C4")]
			[CompilerGenerated]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001A4B")]
			[Address(RVA = "0xBEB7CC", Offset = "0xBEB7CC", VA = "0xBEB7CC")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x6001A4C")]
		[Address(RVA = "0xBEB7D8", Offset = "0xBEB7D8", VA = "0xBEB7D8")]
		private void Start()
		{
		}

		[Token(Token = "0x6001A4D")]
		[Address(RVA = "0xBEB808", Offset = "0xBEB808", VA = "0xBEB808")]
		private void Update()
		{
		}

		[Token(Token = "0x6001A4E")]
		[Address(RVA = "0xBEB948", Offset = "0xBEB948", VA = "0xBEB948")]
		public void SetMoveState(bool newMoveState, float goalSpeed)
		{
		}

		[Token(Token = "0x6001A4F")]
		[Address(RVA = "0xBEB9A4", Offset = "0xBEB9A4", VA = "0xBEB9A4")]
		[IteratorStateMachine(typeof(<LerpToSpeed>d__17))]
		private IEnumerator LerpToSpeed(float goalSpeed)
		{
			return null;
		}

		[Token(Token = "0x6001A50")]
		[Address(RVA = "0xBEBA44", Offset = "0xBEBA44", VA = "0xBEBA44")]
		[IteratorStateMachine(typeof(<PlaySoundDelayed>d__18))]
		private IEnumerator PlaySoundDelayed(AudioClip initial, AudioClip clip, float timeDelayAfterInitial)
		{
			return null;
		}

		[Token(Token = "0x6001A51")]
		[Address(RVA = "0xBEBAF8", Offset = "0xBEBAF8", VA = "0xBEBAF8")]
		private void PlaySound(AudioClip clip, bool loop = false)
		{
		}

		[Token(Token = "0x6001A52")]
		[Address(RVA = "0xBEBB60", Offset = "0xBEBB60", VA = "0xBEBB60")]
		public WindmillBladesController()
		{
		}
	}
	[Token(Token = "0x200050F")]
	public class WindmillController : MonoBehaviour
	{
		[Token(Token = "0x4001A3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject _startStopButton;

		[Token(Token = "0x4001A40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float _maxSpeed;

		[Token(Token = "0x4001A41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private SelectionCylinder _selectionCylinder;

		[Token(Token = "0x4001A42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private WindmillBladesController _bladesRotation;

		[Token(Token = "0x4001A43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private InteractableTool _toolInteractingWithMe;

		[Token(Token = "0x6001A5F")]
		[Address(RVA = "0xBEBE54", Offset = "0xBEBE54", VA = "0xBEBE54")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001A60")]
		[Address(RVA = "0xBEBEB4", Offset = "0xBEBEB4", VA = "0xBEBEB4")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001A61")]
		[Address(RVA = "0xBEBF7C", Offset = "0xBEBF7C", VA = "0xBEBF7C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001A62")]
		[Address(RVA = "0xBEC08C", Offset = "0xBEC08C", VA = "0xBEC08C")]
		private void StartStopStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x6001A63")]
		[Address(RVA = "0xBEC104", Offset = "0xBEC104", VA = "0xBEC104")]
		private void Update()
		{
		}

		[Token(Token = "0x6001A64")]
		[Address(RVA = "0xBEC1CC", Offset = "0xBEC1CC", VA = "0xBEC1CC")]
		public WindmillController()
		{
		}
	}
	[Token(Token = "0x2000510")]
	public enum EUiDisplayType
	{
		[Token(Token = "0x4001A45")]
		EUDT_WorldGeoQuad,
		[Token(Token = "0x4001A46")]
		EUDT_OverlayQuad,
		[Token(Token = "0x4001A47")]
		EUDT_None,
		[Token(Token = "0x4001A48")]
		EUDT_MaxDislayTypes
	}
	[Token(Token = "0x2000511")]
	public class OVROverlaySample : MonoBehaviour
	{
		[Token(Token = "0x2000512")]
		[CompilerGenerated]
		private sealed class <WaitforOVROverlay>d__30 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001A61")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001A62")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001A63")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public OVROverlaySample <>4__this;

			[Token(Token = "0x1700027C")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001A78")]
				[Address(RVA = "0xBED7D0", Offset = "0xBED7D0", VA = "0xBED7D0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700027D")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001A7A")]
				[Address(RVA = "0xBED818", Offset = "0xBED818", VA = "0xBED818", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001A75")]
			[Address(RVA = "0xBECE94", Offset = "0xBECE94", VA = "0xBECE94")]
			[DebuggerHidden]
			public <WaitforOVROverlay>d__30(int <>1__state)
			{
			}

			[Token(Token = "0x6001A76")]
			[Address(RVA = "0xBED5F0", Offset = "0xBED5F0", VA = "0xBED5F0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001A77")]
			[Address(RVA = "0xBED5F4", Offset = "0xBED5F4", VA = "0xBED5F4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001A79")]
			[Address(RVA = "0xBED7D8", Offset = "0xBED7D8", VA = "0xBED7D8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001A49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool inMenu;

		[Token(Token = "0x4001A4A")]
		private const string ovrOverlayID = "OVROverlayID";

		[Token(Token = "0x4001A4B")]
		private const string applicationID = "ApplicationID";

		[Token(Token = "0x4001A4C")]
		private const string noneID = "NoneID";

		[Token(Token = "0x4001A4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Toggle applicationRadioButton;

		[Token(Token = "0x4001A4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Toggle noneRadioButton;

		[Token(Token = "0x4001A4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[Header("App vs Compositor Comparison Settings")]
		public GameObject mainCamera;

		[Token(Token = "0x4001A50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public GameObject uiCamera;

		[Token(Token = "0x4001A51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public GameObject uiGeoParent;

		[Token(Token = "0x4001A52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public GameObject worldspaceGeoParent;

		[Token(Token = "0x4001A53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public OVROverlay cameraRenderOverlay;

		[Token(Token = "0x4001A54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public OVROverlay renderingLabelOverlay;

		[Token(Token = "0x4001A55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Texture applicationLabelTexture;

		[Token(Token = "0x4001A56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Texture compositorLabelTexture;

		[Token(Token = "0x4001A57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[Header("Level Loading Sim Settings")]
		public GameObject prefabForLevelLoadSim;

		[Token(Token = "0x4001A58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public OVROverlay cubemapOverlay;

		[Token(Token = "0x4001A59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public OVROverlay loadingTextQuadOverlay;

		[Token(Token = "0x4001A5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public float distanceFromCamToLoadText;

		[Token(Token = "0x4001A5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		public float cubeSpawnRadius;

		[Token(Token = "0x4001A5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public float heightBetweenItems;

		[Token(Token = "0x4001A5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		public int numObjectsPerLevel;

		[Token(Token = "0x4001A5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public int numLevels;

		[Token(Token = "0x4001A5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		public int numLoopsTrigger;

		[Token(Token = "0x4001A60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private List<GameObject> spawnedCubes;

		[Token(Token = "0x6001A65")]
		[Address(RVA = "0xBEC1DC", Offset = "0xBEC1DC", VA = "0xBEC1DC")]
		private void Start()
		{
		}

		[Token(Token = "0x6001A66")]
		[Address(RVA = "0xBEC9F8", Offset = "0xBEC9F8", VA = "0xBEC9F8")]
		private void Update()
		{
		}

		[Token(Token = "0x6001A67")]
		[Address(RVA = "0xBECB20", Offset = "0xBECB20", VA = "0xBECB20")]
		private void ActivateWorldGeo()
		{
		}

		[Token(Token = "0x6001A68")]
		[Address(RVA = "0xBECC3C", Offset = "0xBECC3C", VA = "0xBECC3C")]
		private void ActivateOVROverlay()
		{
		}

		[Token(Token = "0x6001A69")]
		[Address(RVA = "0xBECD58", Offset = "0xBECD58", VA = "0xBECD58")]
		private void ActivateNone()
		{
		}

		[Token(Token = "0x6001A6A")]
		[Address(RVA = "0xBECB00", Offset = "0xBECB00", VA = "0xBECB00")]
		private void TriggerLoad()
		{
		}

		[Token(Token = "0x6001A6B")]
		[Address(RVA = "0xBECE2C", Offset = "0xBECE2C", VA = "0xBECE2C")]
		[IteratorStateMachine(typeof(<WaitforOVROverlay>d__30))]
		private IEnumerator WaitforOVROverlay()
		{
			return null;
		}

		[Token(Token = "0x6001A6C")]
		[Address(RVA = "0xBECEBC", Offset = "0xBECEBC", VA = "0xBECEBC")]
		private void TriggerUnload()
		{
		}

		[Token(Token = "0x6001A6D")]
		[Address(RVA = "0xBEC634", Offset = "0xBEC634", VA = "0xBEC634")]
		private void CameraAndRenderTargetSetup()
		{
		}

		[Token(Token = "0x6001A6E")]
		[Address(RVA = "0xBED004", Offset = "0xBED004", VA = "0xBED004")]
		private void SimulateLevelLoad()
		{
		}

		[Token(Token = "0x6001A6F")]
		[Address(RVA = "0xBECEE4", Offset = "0xBECEE4", VA = "0xBECEE4")]
		private void ClearObjects()
		{
		}

		[Token(Token = "0x6001A70")]
		[Address(RVA = "0xBED380", Offset = "0xBED380", VA = "0xBED380")]
		public void RadioPressed(string radioLabel, string group, Toggle t)
		{
		}

		[Token(Token = "0x6001A71")]
		[Address(RVA = "0xBED46C", Offset = "0xBED46C", VA = "0xBED46C")]
		public OVROverlaySample()
		{
		}
	}
}
namespace OVRTouchSample
{
	[Token(Token = "0x2000513")]
	[RequireComponent(typeof(OVRGrabber))]
	public class Hand : MonoBehaviour
	{
		[Token(Token = "0x4001A64")]
		public const string ANIM_LAYER_NAME_POINT = "Point Layer";

		[Token(Token = "0x4001A65")]
		public const string ANIM_LAYER_NAME_THUMB = "Thumb Layer";

		[Token(Token = "0x4001A66")]
		public const string ANIM_PARAM_NAME_FLEX = "Flex";

		[Token(Token = "0x4001A67")]
		public const string ANIM_PARAM_NAME_POSE = "Pose";

		[Token(Token = "0x4001A68")]
		public const float THRESH_COLLISION_FLEX = 0.9f;

		[Token(Token = "0x4001A69")]
		public const float INPUT_RATE_CHANGE = 20f;

		[Token(Token = "0x4001A6A")]
		public const float COLLIDER_SCALE_MIN = 0.01f;

		[Token(Token = "0x4001A6B")]
		public const float COLLIDER_SCALE_MAX = 1f;

		[Token(Token = "0x4001A6C")]
		public const float COLLIDER_SCALE_PER_SECOND = 1f;

		[Token(Token = "0x4001A6D")]
		public const float TRIGGER_DEBOUNCE_TIME = 0.05f;

		[Token(Token = "0x4001A6E")]
		public const float THUMB_DEBOUNCE_TIME = 0.15f;

		[Token(Token = "0x4001A6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private OVRInput.Controller m_controller;

		[Token(Token = "0x4001A70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Animator m_animator;

		[Token(Token = "0x4001A71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private HandPose m_defaultGrabPose;

		[Token(Token = "0x4001A72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Collider[] m_colliders;

		[Token(Token = "0x4001A73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool m_collisionEnabled;

		[Token(Token = "0x4001A74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private OVRGrabber m_grabber;

		[Token(Token = "0x4001A75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private List<Renderer> m_showAfterInputFocusAcquired;

		[Token(Token = "0x4001A76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private int m_animLayerIndexThumb;

		[Token(Token = "0x4001A77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private int m_animLayerIndexPoint;

		[Token(Token = "0x4001A78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private int m_animParamIndexFlex;

		[Token(Token = "0x4001A79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private int m_animParamIndexPose;

		[Token(Token = "0x4001A7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private bool m_isPointing;

		[Token(Token = "0x4001A7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
		private bool m_isGivingThumbsUp;

		[Token(Token = "0x4001A7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private float m_pointBlend;

		[Token(Token = "0x4001A7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private float m_thumbsUpBlend;

		[Token(Token = "0x4001A7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private bool m_restoreOnInputAcquired;

		[Token(Token = "0x4001A7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private float m_collisionScaleCurrent;

		[Token(Token = "0x6001A7B")]
		[Address(RVA = "0xBED820", Offset = "0xBED820", VA = "0xBED820")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001A7C")]
		[Address(RVA = "0xBED870", Offset = "0xBED870", VA = "0xBED870")]
		private void Start()
		{
		}

		[Token(Token = "0x6001A7D")]
		[Address(RVA = "0xBEDCA0", Offset = "0xBEDCA0", VA = "0xBEDCA0")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001A7E")]
		[Address(RVA = "0xBEDD8C", Offset = "0xBEDD8C", VA = "0xBEDD8C")]
		private void Update()
		{
		}

		[Token(Token = "0x6001A7F")]
		[Address(RVA = "0xBEDEF0", Offset = "0xBEDEF0", VA = "0xBEDEF0")]
		private void UpdateCapTouchStates()
		{
		}

		[Token(Token = "0x6001A80")]
		[Address(RVA = "0xBEE1C0", Offset = "0xBEE1C0", VA = "0xBEE1C0")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6001A81")]
		[Address(RVA = "0xBEE2A4", Offset = "0xBEE2A4", VA = "0xBEE2A4")]
		private void OnInputFocusLost()
		{
		}

		[Token(Token = "0x6001A82")]
		[Address(RVA = "0xBEE44C", Offset = "0xBEE44C", VA = "0xBEE44C")]
		private void OnInputFocusAcquired()
		{
		}

		[Token(Token = "0x6001A83")]
		[Address(RVA = "0xBEDF7C", Offset = "0xBEDF7C", VA = "0xBEDF7C")]
		private float InputValueRateChange(bool isDown, float value)
		{
			return default(float);
		}

		[Token(Token = "0x6001A84")]
		[Address(RVA = "0xBEDFD0", Offset = "0xBEDFD0", VA = "0xBEDFD0")]
		private void UpdateAnimStates()
		{
		}

		[Token(Token = "0x6001A85")]
		[Address(RVA = "0xBEDB60", Offset = "0xBEDB60", VA = "0xBEDB60")]
		private void CollisionEnable(bool enabled)
		{
		}

		[Token(Token = "0x6001A86")]
		[Address(RVA = "0xBEE570", Offset = "0xBEE570", VA = "0xBEE570")]
		public Hand()
		{
		}
	}
	[Token(Token = "0x2000515")]
	public enum HandPoseId
	{
		[Token(Token = "0x4001A83")]
		Default,
		[Token(Token = "0x4001A84")]
		Generic,
		[Token(Token = "0x4001A85")]
		PingPongBall,
		[Token(Token = "0x4001A86")]
		Controller
	}
	[Token(Token = "0x2000516")]
	public class HandPose : MonoBehaviour
	{
		[Token(Token = "0x4001A87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private bool m_allowPointing;

		[Token(Token = "0x4001A88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		[SerializeField]
		private bool m_allowThumbsUp;

		[Token(Token = "0x4001A89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private HandPoseId m_poseId;

		[Token(Token = "0x1700027E")]
		public bool AllowPointing
		{
			[Token(Token = "0x6001A8A")]
			[Address(RVA = "0xBEE61C", Offset = "0xBEE61C", VA = "0xBEE61C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700027F")]
		public bool AllowThumbsUp
		{
			[Token(Token = "0x6001A8B")]
			[Address(RVA = "0xBEE624", Offset = "0xBEE624", VA = "0xBEE624")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000280")]
		public HandPoseId PoseId
		{
			[Token(Token = "0x6001A8C")]
			[Address(RVA = "0xBEE62C", Offset = "0xBEE62C", VA = "0xBEE62C")]
			get
			{
				return default(HandPoseId);
			}
		}

		[Token(Token = "0x6001A8D")]
		[Address(RVA = "0xBEE634", Offset = "0xBEE634", VA = "0xBEE634")]
		public HandPose()
		{
		}
	}
	[Token(Token = "0x2000517")]
	public class TouchController : MonoBehaviour
	{
		[Token(Token = "0x4001A8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private OVRInput.Controller m_controller;

		[Token(Token = "0x4001A8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Animator m_animator;

		[Token(Token = "0x4001A8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool m_restoreOnInputAcquired;

		[Token(Token = "0x6001A8E")]
		[Address(RVA = "0xBEE63C", Offset = "0xBEE63C", VA = "0xBEE63C")]
		private void Update()
		{
		}

		[Token(Token = "0x6001A8F")]
		[Address(RVA = "0xBEE908", Offset = "0xBEE908", VA = "0xBEE908")]
		private void OnInputFocusLost()
		{
		}

		[Token(Token = "0x6001A90")]
		[Address(RVA = "0xBEE958", Offset = "0xBEE958", VA = "0xBEE958")]
		private void OnInputFocusAcquired()
		{
		}

		[Token(Token = "0x6001A91")]
		[Address(RVA = "0xBEE990", Offset = "0xBEE990", VA = "0xBEE990")]
		public TouchController()
		{
		}
	}
}
namespace Oculus.Avatar
{
	[Token(Token = "0x2000518")]
	public static class AvatarLogger
	{
		[Token(Token = "0x4001A8D")]
		public const string LogAvatar = "[Avatars] - ";

		[Token(Token = "0x4001A8E")]
		public const string Tab = "    ";

		[Token(Token = "0x6001A92")]
		[Address(RVA = "0xBEE998", Offset = "0xBEE998", VA = "0xBEE998")]
		[Conditional("ENABLE_AVATAR_LOG_BASIC")]
		[Conditional("ENABLE_AVATAR_LOGS")]
		public static void Log(string logMsg)
		{
		}

		[Token(Token = "0x6001A93")]
		[Address(RVA = "0xBEEA24", Offset = "0xBEEA24", VA = "0xBEEA24")]
		[Conditional("ENABLE_AVATAR_LOGS")]
		[Conditional("ENABLE_AVATAR_LOG_BASIC")]
		public static void Log(string logMsg, UnityEngine.Object context)
		{
		}

		[Token(Token = "0x6001A94")]
		[Address(RVA = "0xBEEAB8", Offset = "0xBEEAB8", VA = "0xBEEAB8")]
		[Conditional("ENABLE_AVATAR_LOGS")]
		[Conditional("ENABLE_AVATAR_LOG_WARNING")]
		public static void LogWarning(string logMsg)
		{
		}

		[Token(Token = "0x6001A95")]
		[Address(RVA = "0xBEEB44", Offset = "0xBEEB44", VA = "0xBEEB44")]
		[Conditional("ENABLE_AVATAR_LOG_ERROR")]
		[Conditional("ENABLE_AVATAR_LOGS")]
		public static void LogError(string logMsg)
		{
		}

		[Token(Token = "0x6001A96")]
		[Address(RVA = "0xBEEBD0", Offset = "0xBEEBD0", VA = "0xBEEBD0")]
		[Conditional("ENABLE_AVATAR_LOG_ERROR")]
		[Conditional("ENABLE_AVATAR_LOGS")]
		public static void LogError(string logMsg, UnityEngine.Object context)
		{
		}
	}
	[Token(Token = "0x2000519")]
	public class CAPI
	{
		[Token(Token = "0x200051A")]
		public delegate void LoggingDelegate(IntPtr str);

		[Token(Token = "0x200051B")]
		public enum Result
		{
			[Token(Token = "0x4001A9A")]
			Success = 0,
			[Token(Token = "0x4001A9B")]
			Failure = -1000,
			[Token(Token = "0x4001A9C")]
			Failure_InvalidParameter = -1001,
			[Token(Token = "0x4001A9D")]
			Failure_NotInitialized = -1002,
			[Token(Token = "0x4001A9E")]
			Failure_InvalidOperation = -1003,
			[Token(Token = "0x4001A9F")]
			Failure_Unsupported = -1004,
			[Token(Token = "0x4001AA0")]
			Failure_NotYetImplemented = -1005,
			[Token(Token = "0x4001AA1")]
			Failure_OperationFailed = -1006,
			[Token(Token = "0x4001AA2")]
			Failure_InsufficientSize = -1007
		}

		[Token(Token = "0x200051C")]
		private static class OVRP_1_30_0
		{
			[Token(Token = "0x4001AA3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly Version version;

			[PreserveSig]
			[Token(Token = "0x6001B2B")]
			[Address(RVA = "0xBF633C", Offset = "0xBF633C", VA = "0xBF633C")]
			public static extern Result ovrp_SendEvent2(string name, string param, string source);
		}

		[Token(Token = "0x4001A8F")]
		private const string LibFile = "ovravatarloader";

		[Token(Token = "0x4001A90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static IntPtr nativeVisemeData;

		[Token(Token = "0x4001A91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static IntPtr nativeGazeTargetsData;

		[Token(Token = "0x4001A92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static IntPtr nativeAvatarLightsData;

		[Token(Token = "0x4001A93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static IntPtr DebugLineCountData;

		[Token(Token = "0x4001A94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static float[] scratchBufferFloat;

		[Token(Token = "0x4001A95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static GameObject debugLineGo;

		[Token(Token = "0x4001A96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private static string SDKRuntimePrefix;

		[Token(Token = "0x4001A97")]
		private const string ovrPluginDLL = "OVRPlugin";

		[Token(Token = "0x4001A98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private static Version ovrPluginVersion;

		[PreserveSig]
		[Token(Token = "0x6001A97")]
		[Address(RVA = "0xBEECBC", Offset = "0xBEECBC", VA = "0xBEECBC")]
		public static extern void ovrAvatar_InitializeAndroidUnity(string appID);

		[Token(Token = "0x6001A98")]
		[Address(RVA = "0xBEED48", Offset = "0xBEED48", VA = "0xBEED48")]
		public static void Initialize()
		{
		}

		[Token(Token = "0x6001A99")]
		[Address(RVA = "0xBEEF50", Offset = "0xBEEF50", VA = "0xBEEF50")]
		public static void Shutdown()
		{
		}

		[PreserveSig]
		[Token(Token = "0x6001A9A")]
		[Address(RVA = "0xBEF024", Offset = "0xBEF024", VA = "0xBEF024")]
		public static extern void ovrAvatar_Shutdown();

		[PreserveSig]
		[Token(Token = "0x6001A9B")]
		[Address(RVA = "0xBEF088", Offset = "0xBEF088", VA = "0xBEF088")]
		public static extern IntPtr ovrAvatarMessage_Pop();

		[PreserveSig]
		[Token(Token = "0x6001A9C")]
		[Address(RVA = "0xBEF0F0", Offset = "0xBEF0F0", VA = "0xBEF0F0")]
		public static extern ovrAvatarMessageType ovrAvatarMessage_GetType(IntPtr msg);

		[Token(Token = "0x6001A9D")]
		[Address(RVA = "0xBEF16C", Offset = "0xBEF16C", VA = "0xBEF16C")]
		public static ovrAvatarMessage_AvatarSpecification ovrAvatarMessage_GetAvatarSpecification(IntPtr msg)
		{
			return default(ovrAvatarMessage_AvatarSpecification);
		}

		[PreserveSig]
		[Token(Token = "0x6001A9E")]
		[Address(RVA = "0xBEF29C", Offset = "0xBEF29C", VA = "0xBEF29C")]
		private static extern IntPtr ovrAvatarMessage_GetAvatarSpecification_Native(IntPtr msg);

		[Token(Token = "0x6001A9F")]
		[Address(RVA = "0xBEF318", Offset = "0xBEF318", VA = "0xBEF318")]
		public static ovrAvatarMessage_AssetLoaded ovrAvatarMessage_GetAssetLoaded(IntPtr msg)
		{
			return default(ovrAvatarMessage_AssetLoaded);
		}

		[PreserveSig]
		[Token(Token = "0x6001AA0")]
		[Address(RVA = "0xBEF448", Offset = "0xBEF448", VA = "0xBEF448")]
		private static extern IntPtr ovrAvatarMessage_GetAssetLoaded_Native(IntPtr msg);

		[PreserveSig]
		[Token(Token = "0x6001AA1")]
		[Address(RVA = "0xBEF4C4", Offset = "0xBEF4C4", VA = "0xBEF4C4")]
		public static extern void ovrAvatarMessage_Free(IntPtr msg);

		[PreserveSig]
		[Token(Token = "0x6001AA2")]
		[Address(RVA = "0xBEF540", Offset = "0xBEF540", VA = "0xBEF540")]
		public static extern IntPtr ovrAvatarSpecificationRequest_Create(ulong userID);

		[PreserveSig]
		[Token(Token = "0x6001AA3")]
		[Address(RVA = "0xBEF5BC", Offset = "0xBEF5BC", VA = "0xBEF5BC")]
		public static extern void ovrAvatarSpecificationRequest_Destroy(IntPtr specificationRequest);

		[PreserveSig]
		[Token(Token = "0x6001AA4")]
		[Address(RVA = "0xBEF638", Offset = "0xBEF638", VA = "0xBEF638")]
		public static extern void ovrAvatarSpecificationRequest_SetCombineMeshes(IntPtr specificationRequest, bool useCombinedMesh);

		[PreserveSig]
		[Token(Token = "0x6001AA5")]
		[Address(RVA = "0xBEF6BC", Offset = "0xBEF6BC", VA = "0xBEF6BC")]
		public static extern void ovrAvatarSpecificationRequest_SetLookAndFeelVersion(IntPtr specificationRequest, ovrAvatarLookAndFeelVersion version);

		[PreserveSig]
		[Token(Token = "0x6001AA6")]
		[Address(RVA = "0xBEF740", Offset = "0xBEF740", VA = "0xBEF740")]
		public static extern void ovrAvatarSpecificationRequest_SetLevelOfDetail(IntPtr specificationRequest, ovrAvatarAssetLevelOfDetail lod);

		[PreserveSig]
		[Token(Token = "0x6001AA7")]
		[Address(RVA = "0xBEF7C4", Offset = "0xBEF7C4", VA = "0xBEF7C4")]
		public static extern void ovrAvatar_RequestAvatarSpecification(ulong userID);

		[PreserveSig]
		[Token(Token = "0x6001AA8")]
		[Address(RVA = "0xBEF840", Offset = "0xBEF840", VA = "0xBEF840")]
		public static extern void ovrAvatar_RequestAvatarSpecificationFromSpecRequest(IntPtr specificationRequest);

		[PreserveSig]
		[Token(Token = "0x6001AA9")]
		[Address(RVA = "0xBEF8BC", Offset = "0xBEF8BC", VA = "0xBEF8BC")]
		public static extern void ovrAvatarSpecificationRequest_SetFallbackLookAndFeelVersion(IntPtr specificationRequest, ovrAvatarLookAndFeelVersion version);

		[PreserveSig]
		[Token(Token = "0x6001AAA")]
		[Address(RVA = "0xBEF940", Offset = "0xBEF940", VA = "0xBEF940")]
		public static extern void ovrAvatarSpecificationRequest_SetExpressiveFlag(IntPtr specificationRequest, bool enable);

		[PreserveSig]
		[Token(Token = "0x6001AAB")]
		[Address(RVA = "0xBEF9C4", Offset = "0xBEF9C4", VA = "0xBEF9C4")]
		public static extern IntPtr ovrAvatar_Create(IntPtr avatarSpecification, ovrAvatarCapabilities capabilities);

		[PreserveSig]
		[Token(Token = "0x6001AAC")]
		[Address(RVA = "0xBEFA48", Offset = "0xBEFA48", VA = "0xBEFA48")]
		public static extern void ovrAvatar_Destroy(IntPtr avatar);

		[PreserveSig]
		[Token(Token = "0x6001AAD")]
		[Address(RVA = "0xBEFAC4", Offset = "0xBEFAC4", VA = "0xBEFAC4")]
		public static extern void ovrAvatarPose_UpdateBody(IntPtr avatar, ovrAvatarTransform headPose);

		[Token(Token = "0x6001AAE")]
		[Address(RVA = "0xBEFB58", Offset = "0xBEFB58", VA = "0xBEFB58")]
		public static void ovrAvatarPose_UpdateVoiceVisualization(IntPtr avatar, float[] pcmData)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6001AAF")]
		[Address(RVA = "0xBEFBC0", Offset = "0xBEFBC0", VA = "0xBEFBC0")]
		private static extern void ovrAvatarPose_UpdateVoiceVisualization_Native(IntPtr avatar, uint pcmDataSize, [In] float[] pcmData);

		[PreserveSig]
		[Token(Token = "0x6001AB0")]
		[Address(RVA = "0xBEFC5C", Offset = "0xBEFC5C", VA = "0xBEFC5C")]
		public static extern void ovrAvatarPose_UpdateHands(IntPtr avatar, ovrAvatarHandInputState inputStateLeft, ovrAvatarHandInputState inputStateRight);

		[PreserveSig]
		[Token(Token = "0x6001AB1")]
		[Address(RVA = "0xBEFD10", Offset = "0xBEFD10", VA = "0xBEFD10")]
		public static extern void ovrAvatarPose_UpdateHandsWithType(IntPtr avatar, ovrAvatarHandInputState inputStateLeft, ovrAvatarHandInputState inputStateRight, ovrAvatarControllerType type);

		[PreserveSig]
		[Token(Token = "0x6001AB2")]
		[Address(RVA = "0xBEFDD4", Offset = "0xBEFDD4", VA = "0xBEFDD4")]
		public static extern void ovrAvatarPose_Finalize(IntPtr avatar, float elapsedSeconds);

		[PreserveSig]
		[Token(Token = "0x6001AB3")]
		[Address(RVA = "0xBEFE60", Offset = "0xBEFE60", VA = "0xBEFE60")]
		public static extern void ovrAvatar_SetLeftControllerVisibility(IntPtr avatar, bool show);

		[PreserveSig]
		[Token(Token = "0x6001AB4")]
		[Address(RVA = "0xBEFEE4", Offset = "0xBEFEE4", VA = "0xBEFEE4")]
		public static extern void ovrAvatar_SetRightControllerVisibility(IntPtr avatar, bool show);

		[PreserveSig]
		[Token(Token = "0x6001AB5")]
		[Address(RVA = "0xBEFF68", Offset = "0xBEFF68", VA = "0xBEFF68")]
		public static extern void ovrAvatar_SetLeftHandVisibility(IntPtr avatar, bool show);

		[PreserveSig]
		[Token(Token = "0x6001AB6")]
		[Address(RVA = "0xBEFFEC", Offset = "0xBEFFEC", VA = "0xBEFFEC")]
		public static extern void ovrAvatar_SetRightHandVisibility(IntPtr avatar, bool show);

		[PreserveSig]
		[Token(Token = "0x6001AB7")]
		[Address(RVA = "0xBF0070", Offset = "0xBF0070", VA = "0xBF0070")]
		public static extern uint ovrAvatarComponent_Count(IntPtr avatar);

		[Token(Token = "0x6001AB8")]
		[Address(RVA = "0xBF00EC", Offset = "0xBF00EC", VA = "0xBF00EC")]
		public static void ovrAvatarComponent_Get(IntPtr avatar, uint index, bool includeName, ref ovrAvatarComponent component)
		{
		}

		[Token(Token = "0x6001AB9")]
		[Address(RVA = "0xBF01F0", Offset = "0xBF01F0", VA = "0xBF01F0")]
		public static void ovrAvatarComponent_Get(IntPtr componentPtr, bool includeName, ref ovrAvatarComponent component)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6001ABA")]
		[Address(RVA = "0xBF016C", Offset = "0xBF016C", VA = "0xBF016C")]
		public static extern IntPtr ovrAvatarComponent_Get_Native(IntPtr avatar, uint index);

		[Token(Token = "0x6001ABB")]
		[Address(RVA = "0xBF03D0", Offset = "0xBF03D0", VA = "0xBF03D0")]
		public static bool ovrAvatarPose_GetBaseComponent(IntPtr avatar, ref ovrAvatarBaseComponent component)
		{
			return default(bool);
		}

		[PreserveSig]
		[Token(Token = "0x6001ABC")]
		[Address(RVA = "0xBF0524", Offset = "0xBF0524", VA = "0xBF0524")]
		private static extern IntPtr ovrAvatarPose_GetBaseComponent_Native(IntPtr avatar);

		[Token(Token = "0x6001ABD")]
		public static IntPtr MarshalRenderComponent<T>(IntPtr ptr) where T : struct
		{
			return default(IntPtr);
		}

		[Token(Token = "0x6001ABE")]
		[Address(RVA = "0xBF05A0", Offset = "0xBF05A0", VA = "0xBF05A0")]
		public static bool ovrAvatarPose_GetBodyComponent(IntPtr avatar, ref ovrAvatarBodyComponent component)
		{
			return default(bool);
		}

		[PreserveSig]
		[Token(Token = "0x6001ABF")]
		[Address(RVA = "0xBF0824", Offset = "0xBF0824", VA = "0xBF0824")]
		private static extern IntPtr ovrAvatarPose_GetBodyComponent_Native(IntPtr avatar);

		[Token(Token = "0x6001AC0")]
		[Address(RVA = "0xBF08A0", Offset = "0xBF08A0", VA = "0xBF08A0")]
		public static bool ovrAvatarPose_GetLeftControllerComponent(IntPtr avatar, ref ovrAvatarControllerComponent component)
		{
			return default(bool);
		}

		[PreserveSig]
		[Token(Token = "0x6001AC1")]
		[Address(RVA = "0xBF09F4", Offset = "0xBF09F4", VA = "0xBF09F4")]
		private static extern IntPtr ovrAvatarPose_GetLeftControllerComponent_Native(IntPtr avatar);

		[Token(Token = "0x6001AC2")]
		[Address(RVA = "0xBF0A70", Offset = "0xBF0A70", VA = "0xBF0A70")]
		public static bool ovrAvatarPose_GetRightControllerComponent(IntPtr avatar, ref ovrAvatarControllerComponent component)
		{
			return default(bool);
		}

		[PreserveSig]
		[Token(Token = "0x6001AC3")]
		[Address(RVA = "0xBF0BC4", Offset = "0xBF0BC4", VA = "0xBF0BC4")]
		private static extern IntPtr ovrAvatarPose_GetRightControllerComponent_Native(IntPtr avatar);

		[Token(Token = "0x6001AC4")]
		[Address(RVA = "0xBF0C40", Offset = "0xBF0C40", VA = "0xBF0C40")]
		public static bool ovrAvatarPose_GetLeftHandComponent(IntPtr avatar, ref ovrAvatarHandComponent component)
		{
			return default(bool);
		}

		[PreserveSig]
		[Token(Token = "0x6001AC5")]
		[Address(RVA = "0xBF0D94", Offset = "0xBF0D94", VA = "0xBF0D94")]
		private static extern IntPtr ovrAvatarPose_GetLeftHandComponent_Native(IntPtr avatar);

		[Token(Token = "0x6001AC6")]
		[Address(RVA = "0xBF0E10", Offset = "0xBF0E10", VA = "0xBF0E10")]
		public static bool ovrAvatarPose_GetRightHandComponent(IntPtr avatar, ref ovrAvatarHandComponent component)
		{
			return default(bool);
		}

		[PreserveSig]
		[Token(Token = "0x6001AC7")]
		[Address(RVA = "0xBF0F64", Offset = "0xBF0F64", VA = "0xBF0F64")]
		private static extern IntPtr ovrAvatarPose_GetRightHandComponent_Native(IntPtr avatar);

		[PreserveSig]
		[Token(Token = "0x6001AC8")]
		[Address(RVA = "0xBF0FE0", Offset = "0xBF0FE0", VA = "0xBF0FE0")]
		public static extern void ovrAvatarAsset_BeginLoading(ulong assetID);

		[PreserveSig]
		[Token(Token = "0x6001AC9")]
		[Address(RVA = "0xBF105C", Offset = "0xBF105C", VA = "0xBF105C")]
		public static extern bool ovrAvatarAsset_BeginLoadingLOD(ulong assetId, ovrAvatarAssetLevelOfDetail lod);

		[PreserveSig]
		[Token(Token = "0x6001ACA")]
		[Address(RVA = "0xBF10E8", Offset = "0xBF10E8", VA = "0xBF10E8")]
		public static extern ovrAvatarAssetType ovrAvatarAsset_GetType(IntPtr assetHandle);

		[Token(Token = "0x6001ACB")]
		[Address(RVA = "0xBF1164", Offset = "0xBF1164", VA = "0xBF1164")]
		public static ovrAvatarMeshAssetData ovrAvatarAsset_GetMeshData(IntPtr assetPtr)
		{
			return default(ovrAvatarMeshAssetData);
		}

		[Token(Token = "0x6001ACC")]
		[Address(RVA = "0xBF131C", Offset = "0xBF131C", VA = "0xBF131C")]
		public static ovrAvatarMeshAssetDataV2 ovrAvatarAsset_GetCombinedMeshData(IntPtr assetPtr)
		{
			return default(ovrAvatarMeshAssetDataV2);
		}

		[PreserveSig]
		[Token(Token = "0x6001ACD")]
		[Address(RVA = "0xBF1458", Offset = "0xBF1458", VA = "0xBF1458")]
		private static extern IntPtr ovrAvatarAsset_GetCombinedMeshData_Native(IntPtr assetPtr);

		[PreserveSig]
		[Token(Token = "0x6001ACE")]
		[Address(RVA = "0xBF12A0", Offset = "0xBF12A0", VA = "0xBF12A0")]
		private static extern IntPtr ovrAvatarAsset_GetMeshData_Native(IntPtr assetPtr);

		[PreserveSig]
		[Token(Token = "0x6001ACF")]
		[Address(RVA = "0xBF14D4", Offset = "0xBF14D4", VA = "0xBF14D4")]
		public static extern uint ovrAvatarAsset_GetMeshBlendShapeCount(IntPtr assetPtr);

		[PreserveSig]
		[Token(Token = "0x6001AD0")]
		[Address(RVA = "0xBF1550", Offset = "0xBF1550", VA = "0xBF1550")]
		public static extern IntPtr ovrAvatarAsset_GetMeshBlendShapeName(IntPtr assetPtr, uint index);

		[PreserveSig]
		[Token(Token = "0x6001AD1")]
		[Address(RVA = "0xBF15D4", Offset = "0xBF15D4", VA = "0xBF15D4")]
		public static extern uint ovrAvatarAsset_GetSubmeshCount(IntPtr assetPtr);

		[PreserveSig]
		[Token(Token = "0x6001AD2")]
		[Address(RVA = "0xBF1650", Offset = "0xBF1650", VA = "0xBF1650")]
		public static extern uint ovrAvatarAsset_GetSubmeshLastIndex(IntPtr assetPtr, uint index);

		[PreserveSig]
		[Token(Token = "0x6001AD3")]
		[Address(RVA = "0xBF16D4", Offset = "0xBF16D4", VA = "0xBF16D4")]
		public static extern IntPtr ovrAvatarAsset_GetMeshBlendShapeVertices(IntPtr assetPtr);

		[PreserveSig]
		[Token(Token = "0x6001AD4")]
		[Address(RVA = "0xBF1750", Offset = "0xBF1750", VA = "0xBF1750")]
		public static extern IntPtr ovrAvatarAsset_GetAvatar(IntPtr assetHandle);

		[Token(Token = "0x6001AD5")]
		[Address(RVA = "0xBF17CC", Offset = "0xBF17CC", VA = "0xBF17CC")]
		public static ulong[] ovrAvatarAsset_GetCombinedMeshIDs(IntPtr assetHandle)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6001AD6")]
		[Address(RVA = "0xBF1A14", Offset = "0xBF1A14", VA = "0xBF1A14")]
		public static extern IntPtr ovrAvatarAsset_GetCombinedMeshIDs_Native(IntPtr assetHandle, IntPtr count);

		[Token(Token = "0x6001AD7")]
		[Address(RVA = "0xBF1A98", Offset = "0xBF1A98", VA = "0xBF1A98")]
		public static void ovrAvatar_GetCombinedMeshAlphaData(IntPtr avatar, ref ulong textureID, ref Vector4 offset)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6001AD8")]
		[Address(RVA = "0xBF1CAC", Offset = "0xBF1CAC", VA = "0xBF1CAC")]
		public static extern IntPtr ovrAvatar_GetCombinedMeshAlphaData_Native(IntPtr avatar, IntPtr textureIDPtr, IntPtr offsetPtr);

		[Token(Token = "0x6001AD9")]
		[Address(RVA = "0xBF1D40", Offset = "0xBF1D40", VA = "0xBF1D40")]
		public static ovrAvatarTextureAssetData ovrAvatarAsset_GetTextureData(IntPtr assetPtr)
		{
			return default(ovrAvatarTextureAssetData);
		}

		[PreserveSig]
		[Token(Token = "0x6001ADA")]
		[Address(RVA = "0xBF1E74", Offset = "0xBF1E74", VA = "0xBF1E74")]
		private static extern IntPtr ovrAvatarAsset_GetTextureData_Native(IntPtr assetPtr);

		[PreserveSig]
		[Token(Token = "0x6001ADB")]
		[Address(RVA = "0xBF1EF0", Offset = "0xBF1EF0", VA = "0xBF1EF0")]
		private static extern IntPtr ovrAvatarAsset_GetMaterialData_Native(IntPtr assetPtr);

		[Token(Token = "0x6001ADC")]
		[Address(RVA = "0xBF1F6C", Offset = "0xBF1F6C", VA = "0xBF1F6C")]
		public static ovrAvatarMaterialState ovrAvatarAsset_GetMaterialState(IntPtr assetPtr)
		{
			return default(ovrAvatarMaterialState);
		}

		[PreserveSig]
		[Token(Token = "0x6001ADD")]
		[Address(RVA = "0xBF20A4", Offset = "0xBF20A4", VA = "0xBF20A4")]
		public static extern ovrAvatarRenderPartType ovrAvatarRenderPart_GetType(IntPtr renderPart);

		[Token(Token = "0x6001ADE")]
		[Address(RVA = "0xBF2120", Offset = "0xBF2120", VA = "0xBF2120")]
		public static ovrAvatarRenderPart_SkinnedMeshRender ovrAvatarRenderPart_GetSkinnedMeshRender(IntPtr renderPart)
		{
			return default(ovrAvatarRenderPart_SkinnedMeshRender);
		}

		[PreserveSig]
		[Token(Token = "0x6001ADF")]
		[Address(RVA = "0xBF2258", Offset = "0xBF2258", VA = "0xBF2258")]
		private static extern IntPtr ovrAvatarRenderPart_GetSkinnedMeshRender_Native(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6001AE0")]
		[Address(RVA = "0xBF22D4", Offset = "0xBF22D4", VA = "0xBF22D4")]
		public static extern ovrAvatarTransform ovrAvatarSkinnedMeshRender_GetTransform(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6001AE1")]
		[Address(RVA = "0xBF2358", Offset = "0xBF2358", VA = "0xBF2358")]
		public static extern ovrAvatarTransform ovrAvatarSkinnedMeshRenderPBS_GetTransform(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6001AE2")]
		[Address(RVA = "0xBF23DC", Offset = "0xBF23DC", VA = "0xBF23DC")]
		public static extern ovrAvatarTransform ovrAvatarSkinnedMeshRenderPBSV2_GetTransform(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6001AE3")]
		[Address(RVA = "0xBF2460", Offset = "0xBF2460", VA = "0xBF2460")]
		public static extern ovrAvatarVisibilityFlags ovrAvatarSkinnedMeshRender_GetVisibilityMask(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6001AE4")]
		[Address(RVA = "0xBF24DC", Offset = "0xBF24DC", VA = "0xBF24DC")]
		public static extern bool ovrAvatarSkinnedMeshRender_MaterialStateChanged(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6001AE5")]
		[Address(RVA = "0xBF2560", Offset = "0xBF2560", VA = "0xBF2560")]
		public static extern bool ovrAvatarSkinnedMeshRenderPBSV2_MaterialStateChanged(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6001AE6")]
		[Address(RVA = "0xBF25E4", Offset = "0xBF25E4", VA = "0xBF25E4")]
		public static extern ovrAvatarVisibilityFlags ovrAvatarSkinnedMeshRenderPBS_GetVisibilityMask(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6001AE7")]
		[Address(RVA = "0xBF2660", Offset = "0xBF2660", VA = "0xBF2660")]
		public static extern ovrAvatarVisibilityFlags ovrAvatarSkinnedMeshRenderPBSV2_GetVisibilityMask(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6001AE8")]
		[Address(RVA = "0xBF26DC", Offset = "0xBF26DC", VA = "0xBF26DC")]
		public static extern ovrAvatarMaterialState ovrAvatarSkinnedMeshRender_GetMaterialState(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6001AE9")]
		[Address(RVA = "0xBF278C", Offset = "0xBF278C", VA = "0xBF278C")]
		public static extern ovrAvatarPBSMaterialState ovrAvatarSkinnedMeshRenderPBSV2_GetPBSMaterialState(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6001AEA")]
		[Address(RVA = "0xBF2810", Offset = "0xBF2810", VA = "0xBF2810")]
		public static extern ovrAvatarExpressiveParameters ovrAvatar_GetExpressiveParameters(IntPtr avatar);

		[PreserveSig]
		[Token(Token = "0x6001AEB")]
		[Address(RVA = "0xBF2894", Offset = "0xBF2894", VA = "0xBF2894")]
		public static extern ulong ovrAvatarSkinnedMeshRender_GetDirtyJoints(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6001AEC")]
		[Address(RVA = "0xBF2910", Offset = "0xBF2910", VA = "0xBF2910")]
		public static extern ulong ovrAvatarSkinnedMeshRenderPBS_GetDirtyJoints(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6001AED")]
		[Address(RVA = "0xBF298C", Offset = "0xBF298C", VA = "0xBF298C")]
		public static extern ulong ovrAvatarSkinnedMeshRenderPBSV2_GetDirtyJoints(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6001AEE")]
		[Address(RVA = "0xBF2A08", Offset = "0xBF2A08", VA = "0xBF2A08")]
		public static extern ovrAvatarTransform ovrAvatarSkinnedMeshRender_GetJointTransform(IntPtr renderPart, uint jointIndex);

		[PreserveSig]
		[Token(Token = "0x6001AEF")]
		[Address(RVA = "0xBF2A9C", Offset = "0xBF2A9C", VA = "0xBF2A9C")]
		public static extern void ovrAvatar_SetActionUnitOnsetSpeed(IntPtr avatar, float onsetSpeed);

		[PreserveSig]
		[Token(Token = "0x6001AF0")]
		[Address(RVA = "0xBF2B28", Offset = "0xBF2B28", VA = "0xBF2B28")]
		public static extern void ovrAvatar_SetActionUnitFalloffSpeed(IntPtr avatar, float falloffSpeed);

		[PreserveSig]
		[Token(Token = "0x6001AF1")]
		[Address(RVA = "0xBF2BB4", Offset = "0xBF2BB4", VA = "0xBF2BB4")]
		public static extern void ovrAvatar_SetVisemeMultiplier(IntPtr avatar, float visemeMultiplier);

		[PreserveSig]
		[Token(Token = "0x6001AF2")]
		[Address(RVA = "0xBF2C40", Offset = "0xBF2C40", VA = "0xBF2C40")]
		public static extern ovrAvatarTransform ovrAvatarSkinnedMeshRenderPBS_GetJointTransform(IntPtr renderPart, uint jointIndex);

		[PreserveSig]
		[Token(Token = "0x6001AF3")]
		[Address(RVA = "0xBF2CD4", Offset = "0xBF2CD4", VA = "0xBF2CD4")]
		public static extern ovrAvatarTransform ovrAvatarSkinnedMeshRenderPBSV2_GetJointTransform(IntPtr renderPart, uint jointIndex);

		[PreserveSig]
		[Token(Token = "0x6001AF4")]
		[Address(RVA = "0xBF2D68", Offset = "0xBF2D68", VA = "0xBF2D68")]
		public static extern ulong ovrAvatarSkinnedMeshRenderPBS_GetAlbedoTextureAssetID(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6001AF5")]
		[Address(RVA = "0xBF2DE4", Offset = "0xBF2DE4", VA = "0xBF2DE4")]
		public static extern ulong ovrAvatarSkinnedMeshRenderPBS_GetSurfaceTextureAssetID(IntPtr renderPart);

		[Token(Token = "0x6001AF6")]
		[Address(RVA = "0xBF2E60", Offset = "0xBF2E60", VA = "0xBF2E60")]
		public static ovrAvatarRenderPart_SkinnedMeshRenderPBS ovrAvatarRenderPart_GetSkinnedMeshRenderPBS(IntPtr renderPart)
		{
			return default(ovrAvatarRenderPart_SkinnedMeshRenderPBS);
		}

		[PreserveSig]
		[Token(Token = "0x6001AF7")]
		[Address(RVA = "0xBF2F98", Offset = "0xBF2F98", VA = "0xBF2F98")]
		private static extern IntPtr ovrAvatarRenderPart_GetSkinnedMeshRenderPBS_Native(IntPtr renderPart);

		[Token(Token = "0x6001AF8")]
		[Address(RVA = "0xBF3014", Offset = "0xBF3014", VA = "0xBF3014")]
		public static ovrAvatarRenderPart_SkinnedMeshRenderPBS_V2 ovrAvatarRenderPart_GetSkinnedMeshRenderPBSV2(IntPtr renderPart)
		{
			return default(ovrAvatarRenderPart_SkinnedMeshRenderPBS_V2);
		}

		[PreserveSig]
		[Token(Token = "0x6001AF9")]
		[Address(RVA = "0xBF314C", Offset = "0xBF314C", VA = "0xBF314C")]
		private static extern IntPtr ovrAvatarRenderPart_GetSkinnedMeshRenderPBSV2_Native(IntPtr renderPart);

		[Token(Token = "0x6001AFA")]
		[Address(RVA = "0xBF31C8", Offset = "0xBF31C8", VA = "0xBF31C8")]
		public static void ovrAvatarSkinnedMeshRender_GetBlendShapeParams(IntPtr renderPart, ref ovrAvatarBlendShapeParams blendParams)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6001AFB")]
		[Address(RVA = "0xBF32E8", Offset = "0xBF32E8", VA = "0xBF32E8")]
		private static extern IntPtr ovrAvatarSkinnedMeshRender_GetBlendShapeParams_Native(IntPtr renderPart);

		[Token(Token = "0x6001AFC")]
		[Address(RVA = "0xBF3364", Offset = "0xBF3364", VA = "0xBF3364")]
		public static ovrAvatarRenderPart_ProjectorRender ovrAvatarRenderPart_GetProjectorRender(IntPtr renderPart)
		{
			return default(ovrAvatarRenderPart_ProjectorRender);
		}

		[Token(Token = "0x6001AFD")]
		[Address(RVA = "0xBF3518", Offset = "0xBF3518", VA = "0xBF3518")]
		public static ovrAvatarPBSMaterialState[] ovrAvatar_GetBodyPBSMaterialStates(IntPtr renderPart)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6001AFE")]
		[Address(RVA = "0xBF37C0", Offset = "0xBF37C0", VA = "0xBF37C0")]
		private static extern IntPtr ovrAvatar_GetBodyPBSMaterialStates_Native(IntPtr avatar, IntPtr count);

		[PreserveSig]
		[Token(Token = "0x6001AFF")]
		[Address(RVA = "0xBF349C", Offset = "0xBF349C", VA = "0xBF349C")]
		private static extern IntPtr ovrAvatarRenderPart_GetProjectorRender_Native(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6001B00")]
		[Address(RVA = "0xBF3844", Offset = "0xBF3844", VA = "0xBF3844")]
		public static extern uint ovrAvatar_GetReferencedAssetCount(IntPtr avatar);

		[PreserveSig]
		[Token(Token = "0x6001B01")]
		[Address(RVA = "0xBF38C0", Offset = "0xBF38C0", VA = "0xBF38C0")]
		public static extern ulong ovrAvatar_GetReferencedAsset(IntPtr avatar, uint index);

		[PreserveSig]
		[Token(Token = "0x6001B02")]
		[Address(RVA = "0xBF3944", Offset = "0xBF3944", VA = "0xBF3944")]
		public static extern void ovrAvatar_SetLeftHandGesture(IntPtr avatar, ovrAvatarHandGesture gesture);

		[PreserveSig]
		[Token(Token = "0x6001B03")]
		[Address(RVA = "0xBF39C8", Offset = "0xBF39C8", VA = "0xBF39C8")]
		public static extern void ovrAvatar_SetRightHandGesture(IntPtr avatar, ovrAvatarHandGesture gesture);

		[PreserveSig]
		[Token(Token = "0x6001B04")]
		[Address(RVA = "0xBF3A4C", Offset = "0xBF3A4C", VA = "0xBF3A4C")]
		public static extern void ovrAvatar_SetLeftHandCustomGesture(IntPtr avatar, uint jointCount, [In] ovrAvatarTransform[] customJointTransforms);

		[PreserveSig]
		[Token(Token = "0x6001B05")]
		[Address(RVA = "0xBF3AE8", Offset = "0xBF3AE8", VA = "0xBF3AE8")]
		public static extern void ovrAvatar_SetRightHandCustomGesture(IntPtr avatar, uint jointCount, [In] ovrAvatarTransform[] customJointTransforms);

		[PreserveSig]
		[Token(Token = "0x6001B06")]
		[Address(RVA = "0xBF3B84", Offset = "0xBF3B84", VA = "0xBF3B84")]
		public static extern void ovrAvatar_UpdatePoseFromPacket(IntPtr avatar, IntPtr packet, float secondsFromStart);

		[PreserveSig]
		[Token(Token = "0x6001B07")]
		[Address(RVA = "0xBF3C18", Offset = "0xBF3C18", VA = "0xBF3C18")]
		public static extern void ovrAvatarPacket_BeginRecording(IntPtr avatar);

		[PreserveSig]
		[Token(Token = "0x6001B08")]
		[Address(RVA = "0xBF3C94", Offset = "0xBF3C94", VA = "0xBF3C94")]
		public static extern IntPtr ovrAvatarPacket_EndRecording(IntPtr avatar);

		[PreserveSig]
		[Token(Token = "0x6001B09")]
		[Address(RVA = "0xBF3D10", Offset = "0xBF3D10", VA = "0xBF3D10")]
		public static extern uint ovrAvatarPacket_GetSize(IntPtr packet);

		[PreserveSig]
		[Token(Token = "0x6001B0A")]
		[Address(RVA = "0xBF3D8C", Offset = "0xBF3D8C", VA = "0xBF3D8C")]
		public static extern float ovrAvatarPacket_GetDurationSeconds(IntPtr packet);

		[PreserveSig]
		[Token(Token = "0x6001B0B")]
		[Address(RVA = "0xBF3E08", Offset = "0xBF3E08", VA = "0xBF3E08")]
		public static extern void ovrAvatarPacket_Free(IntPtr packet);

		[PreserveSig]
		[Token(Token = "0x6001B0C")]
		[Address(RVA = "0xBF3E84", Offset = "0xBF3E84", VA = "0xBF3E84")]
		public static extern bool ovrAvatarPacket_Write(IntPtr packet, uint bufferSize, [Out] byte[] buffer);

		[PreserveSig]
		[Token(Token = "0x6001B0D")]
		[Address(RVA = "0xBF3FA8", Offset = "0xBF3FA8", VA = "0xBF3FA8")]
		public static extern IntPtr ovrAvatarPacket_Read(uint bufferSize, [In] byte[] buffer);

		[PreserveSig]
		[Token(Token = "0x6001B0E")]
		[Address(RVA = "0xBF4034", Offset = "0xBF4034", VA = "0xBF4034")]
		private static extern void ovrAvatar_SetInternalForceASTCTextures(bool value);

		[Token(Token = "0x6001B0F")]
		[Address(RVA = "0xBF40B0", Offset = "0xBF40B0", VA = "0xBF40B0")]
		public static void ovrAvatar_SetForceASTCTextures(bool value)
		{
		}

		[Token(Token = "0x6001B10")]
		[Address(RVA = "0xBF4104", Offset = "0xBF4104", VA = "0xBF4104")]
		public static void ovrAvatar_OverrideExpressiveLogic(IntPtr avatar, ovrAvatarBlendShapeParams blendParams)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6001B11")]
		[Address(RVA = "0xBF4238", Offset = "0xBF4238", VA = "0xBF4238")]
		private static extern void ovrAvatar_OverrideExpressiveLogic_Native(IntPtr avatar, IntPtr state);

		[Token(Token = "0x6001B12")]
		[Address(RVA = "0xBF42BC", Offset = "0xBF42BC", VA = "0xBF42BC")]
		public static void ovrAvatar_SetVisemes(IntPtr avatar, ovrAvatarVisemes visemes)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6001B13")]
		[Address(RVA = "0xBF43F0", Offset = "0xBF43F0", VA = "0xBF43F0")]
		private static extern void ovrAvatar_SetVisemes_Native(IntPtr avatar, IntPtr visemes);

		[PreserveSig]
		[Token(Token = "0x6001B14")]
		[Address(RVA = "0xBF4474", Offset = "0xBF4474", VA = "0xBF4474")]
		public static extern void ovrAvatar_UpdateWorldTransform(IntPtr avatar, ovrAvatarTransform transform);

		[Token(Token = "0x6001B15")]
		[Address(RVA = "0xBF4508", Offset = "0xBF4508", VA = "0xBF4508")]
		public static void ovrAvatar_UpdateGazeTargets(ovrAvatarGazeTargets targets)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6001B16")]
		[Address(RVA = "0xBF4840", Offset = "0xBF4840", VA = "0xBF4840")]
		private static extern void ovrAvatar_UpdateGazeTargets_Native(IntPtr targets);

		[PreserveSig]
		[Token(Token = "0x6001B17")]
		[Address(RVA = "0xBF48BC", Offset = "0xBF48BC", VA = "0xBF48BC")]
		public static extern void ovrAvatar_RemoveGazeTargets(uint targetCount, uint[] ids);

		[Token(Token = "0x6001B18")]
		[Address(RVA = "0xBF4948", Offset = "0xBF4948", VA = "0xBF4948")]
		public static void ovrAvatar_UpdateLights(ovrAvatarLights lights)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6001B19")]
		[Address(RVA = "0xBF509C", Offset = "0xBF509C", VA = "0xBF509C")]
		private static extern void ovrAvatar_UpdateLights_Native(IntPtr lights);

		[PreserveSig]
		[Token(Token = "0x6001B1A")]
		[Address(RVA = "0xBF5118", Offset = "0xBF5118", VA = "0xBF5118")]
		public static extern void ovrAvatar_RemoveLights(uint lightCount, uint[] ids);

		[Token(Token = "0x6001B1B")]
		[Address(RVA = "0xBEEC64", Offset = "0xBEEC64", VA = "0xBEEC64")]
		[MonoPInvokeCallback(typeof(LoggingDelegate))]
		public static void LoggingCallback(IntPtr str)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6001B1C")]
		[Address(RVA = "0xBF51A4", Offset = "0xBF51A4", VA = "0xBF51A4")]
		public static extern void ovrAvatar_RegisterLoggingCallback(LoggingDelegate callback);

		[PreserveSig]
		[Token(Token = "0x6001B1D")]
		[Address(RVA = "0xBF5224", Offset = "0xBF5224", VA = "0xBF5224")]
		public static extern void ovrAvatar_SetLoggingLevel(ovrAvatarLogLevel level);

		[PreserveSig]
		[Token(Token = "0x6001B1E")]
		[Address(RVA = "0xBF52A0", Offset = "0xBF52A0", VA = "0xBF52A0")]
		public static extern IntPtr ovrAvatar_GetDebugTransforms_Native(IntPtr count);

		[PreserveSig]
		[Token(Token = "0x6001B1F")]
		[Address(RVA = "0xBF531C", Offset = "0xBF531C", VA = "0xBF531C")]
		public static extern IntPtr ovrAvatar_GetDebugLines_Native(IntPtr count);

		[Token(Token = "0x6001B20")]
		[Address(RVA = "0xBF5398", Offset = "0xBF5398", VA = "0xBF5398")]
		public static void ovrAvatar_DrawDebugLines()
		{
		}

		[PreserveSig]
		[Token(Token = "0x6001B21")]
		[Address(RVA = "0xBF5CF0", Offset = "0xBF5CF0", VA = "0xBF5CF0")]
		public static extern void ovrAvatar_SetDebugDrawContext(uint context);

		[Token(Token = "0x6001B22")]
		[Address(RVA = "0xBF5D6C", Offset = "0xBF5D6C", VA = "0xBF5D6C")]
		public static bool SendEvent(string name, string param = "", string source = "")
		{
			return default(bool);
		}

		[PreserveSig]
		[Token(Token = "0x6001B23")]
		[Address(RVA = "0xBF60BC", Offset = "0xBF60BC", VA = "0xBF60BC")]
		private static extern IntPtr _ovrp_GetVersion();

		[Token(Token = "0x6001B24")]
		[Address(RVA = "0xBF6038", Offset = "0xBF6038", VA = "0xBF6038")]
		public static string ovrp_GetVersion()
		{
			return null;
		}

		[Token(Token = "0x6001B25")]
		[Address(RVA = "0xBF6124", Offset = "0xBF6124", VA = "0xBF6124")]
		public CAPI()
		{
		}
	}
}
namespace FlyingWormConsole3
{
	[Token(Token = "0x200051D")]
	public class ConsoleProRemoteServer : MonoBehaviour
	{
		[Token(Token = "0x4001AA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool useNATPunch;

		[Token(Token = "0x4001AA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int port;

		[Token(Token = "0x6001B2D")]
		[Address(RVA = "0xBF6498", Offset = "0xBF6498", VA = "0xBF6498")]
		public void Awake()
		{
		}

		[Token(Token = "0x6001B2E")]
		[Address(RVA = "0xBF6500", Offset = "0xBF6500", VA = "0xBF6500")]
		public ConsoleProRemoteServer()
		{
		}
	}
}
namespace AudioHelm
{
	[Token(Token = "0x200051E")]
	[AddComponentMenu("")]
	public class BounceAudio2d : MonoBehaviour
	{
		[Token(Token = "0x4001AA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public HelmController synth;

		[Token(Token = "0x4001AA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int[] scale;

		[Token(Token = "0x4001AA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int minNote;

		[Token(Token = "0x4001AA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float maxSize;

		[Token(Token = "0x4001AAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float noteLength;

		[Token(Token = "0x4001AAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float maxSpeed;

		[Token(Token = "0x6001B2F")]
		[Address(RVA = "0xBF6510", Offset = "0xBF6510", VA = "0xBF6510")]
		private float GetCollisionStrength(Collision2D collision)
		{
			return default(float);
		}

		[Token(Token = "0x6001B30")]
		[Address(RVA = "0xBF66A8", Offset = "0xBF66A8", VA = "0xBF66A8")]
		private int GetNote()
		{
			return default(int);
		}

		[Token(Token = "0x6001B31")]
		[Address(RVA = "0xBF67AC", Offset = "0xBF67AC", VA = "0xBF67AC")]
		private void OnCollisionEnter2D(Collision2D collision)
		{
		}

		[Token(Token = "0x6001B32")]
		[Address(RVA = "0xBF69B8", Offset = "0xBF69B8", VA = "0xBF69B8")]
		public BounceAudio2d()
		{
		}
	}
	[Token(Token = "0x200051F")]
	[AddComponentMenu("")]
	public class CameraMan : MonoBehaviour
	{
		[Token(Token = "0x4001AAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform player;

		[Token(Token = "0x4001AAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		protected Vector3 diff_;

		[Token(Token = "0x6001B33")]
		[Address(RVA = "0xBF6A58", Offset = "0xBF6A58", VA = "0xBF6A58")]
		private void Start()
		{
		}

		[Token(Token = "0x6001B34")]
		[Address(RVA = "0xBF6AC0", Offset = "0xBF6AC0", VA = "0xBF6AC0")]
		private void Update()
		{
		}

		[Token(Token = "0x6001B35")]
		[Address(RVA = "0xBF6B1C", Offset = "0xBF6B1C", VA = "0xBF6B1C")]
		public CameraMan()
		{
		}
	}
	[Token(Token = "0x2000520")]
	[AddComponentMenu("")]
	public class ControlJump : MonoBehaviour
	{
		[Token(Token = "0x4001AAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float jumpForce;

		[Token(Token = "0x4001AAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public KeyCode key;

		[Token(Token = "0x4001AB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Vector3 surface_normal_;

		[Token(Token = "0x6001B36")]
		[Address(RVA = "0xBF6B24", Offset = "0xBF6B24", VA = "0xBF6B24")]
		private void Update()
		{
		}

		[Token(Token = "0x6001B37")]
		[Address(RVA = "0xBF6BE8", Offset = "0xBF6BE8", VA = "0xBF6BE8")]
		private void OnCollisionStay(Collision collision)
		{
		}

		[Token(Token = "0x6001B38")]
		[Address(RVA = "0xBF6C94", Offset = "0xBF6C94", VA = "0xBF6C94")]
		public ControlJump()
		{
		}
	}
	[Token(Token = "0x2000521")]
	[AddComponentMenu("")]
	public class ControlTorque : MonoBehaviour
	{
		[Token(Token = "0x4001AB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float torque;

		[Token(Token = "0x4001AB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float maxAngularVelocity;

		[Token(Token = "0x4001AB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Vector3 forward;

		[Token(Token = "0x4001AB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public Vector3 right;

		[Token(Token = "0x6001B39")]
		[Address(RVA = "0xBF6D00", Offset = "0xBF6D00", VA = "0xBF6D00")]
		private void Start()
		{
		}

		[Token(Token = "0x6001B3A")]
		[Address(RVA = "0xBF6D5C", Offset = "0xBF6D5C", VA = "0xBF6D5C")]
		private void Update()
		{
		}

		[Token(Token = "0x6001B3B")]
		[Address(RVA = "0xBF6F90", Offset = "0xBF6F90", VA = "0xBF6F90")]
		public ControlTorque()
		{
		}
	}
	[Token(Token = "0x2000522")]
	[AddComponentMenu("")]
	public class DestroyAfterTime : MonoBehaviour
	{
		[Token(Token = "0x4001AB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float time;

		[Token(Token = "0x6001B3C")]
		[Address(RVA = "0xBF7030", Offset = "0xBF7030", VA = "0xBF7030")]
		private void Start()
		{
		}

		[Token(Token = "0x6001B3D")]
		[Address(RVA = "0xBF7080", Offset = "0xBF7080", VA = "0xBF7080")]
		private void Die()
		{
		}

		[Token(Token = "0x6001B3E")]
		[Address(RVA = "0xBF70EC", Offset = "0xBF70EC", VA = "0xBF70EC")]
		public DestroyAfterTime()
		{
		}
	}
	[Token(Token = "0x2000523")]
	[AddComponentMenu("")]
	public class EnableAfterTime : MonoBehaviour
	{
		[Token(Token = "0x4001AB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float time;

		[Token(Token = "0x4001AB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Sequencer sequencer;

		[Token(Token = "0x6001B3F")]
		[Address(RVA = "0xBF70FC", Offset = "0xBF70FC", VA = "0xBF70FC")]
		private void Start()
		{
		}

		[Token(Token = "0x6001B40")]
		[Address(RVA = "0xBF714C", Offset = "0xBF714C", VA = "0xBF714C")]
		private void Enable()
		{
		}

		[Token(Token = "0x6001B41")]
		[Address(RVA = "0xBF716C", Offset = "0xBF716C", VA = "0xBF716C")]
		public EnableAfterTime()
		{
		}
	}
	[Token(Token = "0x2000524")]
	[AddComponentMenu("")]
	public class GroundKey : MonoBehaviour
	{
		[Token(Token = "0x4001AB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Renderer keyLight;

		[Token(Token = "0x4001AB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private bool noteOn;

		[Token(Token = "0x6001B42")]
		[Address(RVA = "0xBF717C", Offset = "0xBF717C", VA = "0xBF717C")]
		public bool IsInside(Vector3 position)
		{
			return default(bool);
		}

		[Token(Token = "0x6001B43")]
		[Address(RVA = "0xBF71E8", Offset = "0xBF71E8", VA = "0xBF71E8")]
		public bool IsOn()
		{
			return default(bool);
		}

		[Token(Token = "0x6001B44")]
		[Address(RVA = "0xBF71F0", Offset = "0xBF71F0", VA = "0xBF71F0")]
		public void SetOn(bool isOn)
		{
		}

		[Token(Token = "0x6001B45")]
		[Address(RVA = "0xBF71FC", Offset = "0xBF71FC", VA = "0xBF71FC")]
		private void Update()
		{
		}

		[Token(Token = "0x6001B46")]
		[Address(RVA = "0xBF72A8", Offset = "0xBF72A8", VA = "0xBF72A8")]
		public GroundKey()
		{
		}
	}
	[Token(Token = "0x2000525")]
	[AddComponentMenu("")]
	public class GroundKeyboard : MonoBehaviour
	{
		[Token(Token = "0x2000526")]
		[CompilerGenerated]
		private sealed class <OnCollisionStay>d__19 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001AC5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001AC6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001AC7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public GroundKeyboard <>4__this;

			[Token(Token = "0x4001AC8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Collision collision;

			[Token(Token = "0x17000281")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001B56")]
				[Address(RVA = "0xBF7FD0", Offset = "0xBF7FD0", VA = "0xBF7FD0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000282")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001B58")]
				[Address(RVA = "0xBF8018", Offset = "0xBF8018", VA = "0xBF8018", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001B53")]
			[Address(RVA = "0xBF7B78", Offset = "0xBF7B78", VA = "0xBF7B78")]
			[DebuggerHidden]
			public <OnCollisionStay>d__19(int <>1__state)
			{
			}

			[Token(Token = "0x6001B54")]
			[Address(RVA = "0xBF7F2C", Offset = "0xBF7F2C", VA = "0xBF7F2C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001B55")]
			[Address(RVA = "0xBF7F30", Offset = "0xBF7F30", VA = "0xBF7F30", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001B57")]
			[Address(RVA = "0xBF7FD8", Offset = "0xBF7FD8", VA = "0xBF7FD8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000527")]
		[CompilerGenerated]
		private sealed class <OnCollisionEnter>d__20 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001AC9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001ACA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001ACB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public GroundKeyboard <>4__this;

			[Token(Token = "0x4001ACC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Collision collision;

			[Token(Token = "0x17000283")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001B5C")]
				[Address(RVA = "0xBF80C4", Offset = "0xBF80C4", VA = "0xBF80C4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000284")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001B5E")]
				[Address(RVA = "0xBF810C", Offset = "0xBF810C", VA = "0xBF810C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001B59")]
			[Address(RVA = "0xBF7C14", Offset = "0xBF7C14", VA = "0xBF7C14")]
			[DebuggerHidden]
			public <OnCollisionEnter>d__20(int <>1__state)
			{
			}

			[Token(Token = "0x6001B5A")]
			[Address(RVA = "0xBF8020", Offset = "0xBF8020", VA = "0xBF8020", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001B5B")]
			[Address(RVA = "0xBF8024", Offset = "0xBF8024", VA = "0xBF8024", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001B5D")]
			[Address(RVA = "0xBF80CC", Offset = "0xBF80CC", VA = "0xBF80CC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001ABA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GroundKey keyModel;

		[Token(Token = "0x4001ABB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public HelmController synth;

		[Token(Token = "0x4001ABC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Vector3 keyOffset;

		[Token(Token = "0x4001ABD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float verticalOffset;

		[Token(Token = "0x4001ABE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public int numKeys;

		[Token(Token = "0x4001ABF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public int startingKey;

		[Token(Token = "0x4001AC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public int[] scale;

		[Token(Token = "0x4001AC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public int octaveSize;

		[Token(Token = "0x4001AC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private GroundKey[] keys;

		[Token(Token = "0x4001AC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private HashSet<int> currentIndices;

		[Token(Token = "0x4001AC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private HashSet<int> newIndices;

		[Token(Token = "0x6001B47")]
		[Address(RVA = "0xBF72B0", Offset = "0xBF72B0", VA = "0xBF72B0")]
		private void Start()
		{
		}

		[Token(Token = "0x6001B48")]
		[Address(RVA = "0xBF739C", Offset = "0xBF739C", VA = "0xBF739C")]
		private GroundKey CreateKey(int key)
		{
			return null;
		}

		[Token(Token = "0x6001B49")]
		[Address(RVA = "0xBF74BC", Offset = "0xBF74BC", VA = "0xBF74BC")]
		private int GetKeyFromIndex(int index)
		{
			return default(int);
		}

		[Token(Token = "0x6001B4A")]
		[Address(RVA = "0xBF7504", Offset = "0xBF7504", VA = "0xBF7504")]
		private void NoteOn(int index)
		{
		}

		[Token(Token = "0x6001B4B")]
		[Address(RVA = "0xBF7678", Offset = "0xBF7678", VA = "0xBF7678")]
		private void NoteOff(int index)
		{
		}

		[Token(Token = "0x6001B4C")]
		[Address(RVA = "0xBF7808", Offset = "0xBF7808", VA = "0xBF7808")]
		private void TryNoteOn(int index, Vector3 contactPoint)
		{
		}

		[Token(Token = "0x6001B4D")]
		[Address(RVA = "0xBF7910", Offset = "0xBF7910", VA = "0xBF7910")]
		private void TryNoteOff(int index)
		{
		}

		[Token(Token = "0x6001B4E")]
		[Address(RVA = "0xBF7954", Offset = "0xBF7954", VA = "0xBF7954")]
		private void Impulse(Collision collision)
		{
		}

		[Token(Token = "0x6001B4F")]
		[Address(RVA = "0xBF7B04", Offset = "0xBF7B04", VA = "0xBF7B04")]
		[IteratorStateMachine(typeof(<OnCollisionStay>d__19))]
		private IEnumerator OnCollisionStay(Collision collision)
		{
			return null;
		}

		[Token(Token = "0x6001B50")]
		[Address(RVA = "0xBF7BA0", Offset = "0xBF7BA0", VA = "0xBF7BA0")]
		[IteratorStateMachine(typeof(<OnCollisionEnter>d__20))]
		private IEnumerator OnCollisionEnter(Collision collision)
		{
			return null;
		}

		[Token(Token = "0x6001B51")]
		[Address(RVA = "0xBF7C3C", Offset = "0xBF7C3C", VA = "0xBF7C3C")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6001B52")]
		[Address(RVA = "0xBF7E24", Offset = "0xBF7E24", VA = "0xBF7E24")]
		public GroundKeyboard()
		{
		}
	}
	[Token(Token = "0x2000528")]
	[AddComponentMenu("")]
	public class MaterialOnOff : MonoBehaviour
	{
		[Token(Token = "0x4001ACD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Material offMaterial;

		[Token(Token = "0x4001ACE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Material onMaterial;

		[Token(Token = "0x4001ACF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private RawImage rawImage;

		[Token(Token = "0x4001AD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float progress;

		[Token(Token = "0x4001AD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private bool on;

		[Token(Token = "0x6001B5F")]
		[Address(RVA = "0xBF8114", Offset = "0xBF8114", VA = "0xBF8114")]
		private void Start()
		{
		}

		[Token(Token = "0x6001B60")]
		[Address(RVA = "0xBF8164", Offset = "0xBF8164", VA = "0xBF8164")]
		public void On()
		{
		}

		[Token(Token = "0x6001B61")]
		[Address(RVA = "0xBF81B0", Offset = "0xBF81B0", VA = "0xBF81B0")]
		public void Off()
		{
		}

		[Token(Token = "0x6001B62")]
		[Address(RVA = "0xBF81B8", Offset = "0xBF81B8", VA = "0xBF81B8")]
		private void Update()
		{
		}

		[Token(Token = "0x6001B63")]
		[Address(RVA = "0xBF8310", Offset = "0xBF8310", VA = "0xBF8310")]
		public MaterialOnOff()
		{
		}
	}
	[Token(Token = "0x2000529")]
	[AddComponentMenu("")]
	public class MaterialPulse : MonoBehaviour
	{
		[Token(Token = "0x4001AD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Material defaultMaterial;

		[Token(Token = "0x4001AD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Material pulseMaterial;

		[Token(Token = "0x4001AD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float decay;

		[Token(Token = "0x4001AD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float progress;

		[Token(Token = "0x4001AD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Renderer render;

		[Token(Token = "0x4001AD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private RawImage rawImage;

		[Token(Token = "0x6001B64")]
		[Address(RVA = "0xBF690C", Offset = "0xBF690C", VA = "0xBF690C")]
		public void Pulse(float amount)
		{
		}

		[Token(Token = "0x6001B65")]
		[Address(RVA = "0xBF8318", Offset = "0xBF8318", VA = "0xBF8318")]
		private void Update()
		{
		}

		[Token(Token = "0x6001B66")]
		[Address(RVA = "0xBF84CC", Offset = "0xBF84CC", VA = "0xBF84CC")]
		public MaterialPulse()
		{
		}
	}
	[Token(Token = "0x200052A")]
	[AddComponentMenu("")]
	public class NoteBlaster : MonoBehaviour
	{
		[Token(Token = "0x4001AD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public HelmController player;

		[Token(Token = "0x4001AD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int min;

		[Token(Token = "0x4001ADA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public int max;

		[Token(Token = "0x6001B67")]
		[Address(RVA = "0xBF84DC", Offset = "0xBF84DC", VA = "0xBF84DC")]
		private void Update()
		{
		}

		[Token(Token = "0x6001B68")]
		[Address(RVA = "0xBF8548", Offset = "0xBF8548", VA = "0xBF8548")]
		public NoteBlaster()
		{
		}
	}
	[Token(Token = "0x200052B")]
	[AddComponentMenu("")]
	public class Oscillate : MonoBehaviour
	{
		[Token(Token = "0x4001ADB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector3 oscillationVector;

		[Token(Token = "0x4001ADC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float freqeuncy;

		[Token(Token = "0x4001ADD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float progress;

		[Token(Token = "0x4001ADE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private Vector3 startingPosition;

		[Token(Token = "0x6001B69")]
		[Address(RVA = "0xBF855C", Offset = "0xBF855C", VA = "0xBF855C")]
		private void Start()
		{
		}

		[Token(Token = "0x6001B6A")]
		[Address(RVA = "0xBF858C", Offset = "0xBF858C", VA = "0xBF858C")]
		private void Update()
		{
		}

		[Token(Token = "0x6001B6B")]
		[Address(RVA = "0xBF861C", Offset = "0xBF861C", VA = "0xBF861C")]
		public Oscillate()
		{
		}
	}
	[Token(Token = "0x200052C")]
	[AddComponentMenu("")]
	public class PlatformCreator : MonoBehaviour
	{
		[Token(Token = "0x4001ADF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform platformModel;

		[Token(Token = "0x4001AE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float minWidth;

		[Token(Token = "0x4001AE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public List<Transform> allPlatforms;

		[Token(Token = "0x4001AE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public KeyCode clearKey;

		[Token(Token = "0x4001AE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public KeyCode undoKey;

		[Token(Token = "0x4001AE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Transform currentPlatform;

		[Token(Token = "0x4001AE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Vector2 startPosition;

		[Token(Token = "0x6001B6C")]
		[Address(RVA = "0xBF86B4", Offset = "0xBF86B4", VA = "0xBF86B4")]
		private void TryInitialize(Vector2 position)
		{
		}

		[Token(Token = "0x6001B6D")]
		[Address(RVA = "0xBF8774", Offset = "0xBF8774", VA = "0xBF8774")]
		private void TryRelease(Vector2 position)
		{
		}

		[Token(Token = "0x6001B6E")]
		[Address(RVA = "0xBF88D0", Offset = "0xBF88D0", VA = "0xBF88D0")]
		private void TryUpdate(Vector2 position)
		{
		}

		[Token(Token = "0x6001B6F")]
		[Address(RVA = "0xBF8A34", Offset = "0xBF8A34", VA = "0xBF8A34")]
		private void ClearPlatforms()
		{
		}

		[Token(Token = "0x6001B70")]
		[Address(RVA = "0xBF8BEC", Offset = "0xBF8BEC", VA = "0xBF8BEC")]
		private void UndoPlatform()
		{
		}

		[Token(Token = "0x6001B71")]
		[Address(RVA = "0xBF8CD0", Offset = "0xBF8CD0", VA = "0xBF8CD0")]
		private void Update()
		{
		}

		[Token(Token = "0x6001B72")]
		[Address(RVA = "0xBF8D84", Offset = "0xBF8D84", VA = "0xBF8D84")]
		public PlatformCreator()
		{
		}
	}
	[Token(Token = "0x200052D")]
	[AddComponentMenu("")]
	public class PulseImageOnNote : MonoBehaviour
	{
		[Token(Token = "0x4001AE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public MaterialPulse[] images;

		[Token(Token = "0x4001AE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int startingNote;

		[Token(Token = "0x4001AE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int[] scale;

		[Token(Token = "0x6001B73")]
		[Address(RVA = "0xBF8E18", Offset = "0xBF8E18", VA = "0xBF8E18")]
		private int GetNoteIndex(int note)
		{
			return default(int);
		}

		[Token(Token = "0x6001B74")]
		[Address(RVA = "0xBF8EB4", Offset = "0xBF8EB4", VA = "0xBF8EB4")]
		public void NoteOn(Note note)
		{
		}

		[Token(Token = "0x6001B75")]
		[Address(RVA = "0xBF8F04", Offset = "0xBF8F04", VA = "0xBF8F04")]
		public PulseImageOnNote()
		{
		}
	}
	[Token(Token = "0x200052E")]
	[AddComponentMenu("")]
	public class RepetitiveSpawner : MonoBehaviour
	{
		[Token(Token = "0x4001AE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform model;

		[Token(Token = "0x4001AEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float rate;

		[Token(Token = "0x4001AEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private float progress;

		[Token(Token = "0x6001B76")]
		[Address(RVA = "0xBF8F90", Offset = "0xBF8F90", VA = "0xBF8F90")]
		private void Spawn()
		{
		}

		[Token(Token = "0x6001B77")]
		[Address(RVA = "0xBF90FC", Offset = "0xBF90FC", VA = "0xBF90FC")]
		private void Update()
		{
		}

		[Token(Token = "0x6001B78")]
		[Address(RVA = "0xBF9150", Offset = "0xBF9150", VA = "0xBF9150")]
		public RepetitiveSpawner()
		{
		}
	}
	[Token(Token = "0x200052F")]
	[AddComponentMenu("")]
	public class SequenceGenerator : MonoBehaviour
	{
		[Token(Token = "0x4001AEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public HelmSequencer sequencer;

		[Token(Token = "0x4001AED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int[] scale;

		[Token(Token = "0x4001AEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int minNote;

		[Token(Token = "0x4001AEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public int octaveSpan;

		[Token(Token = "0x4001AF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float minDensity;

		[Token(Token = "0x4001AF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float maxDensity;

		[Token(Token = "0x6001B79")]
		[Address(RVA = "0xBF9160", Offset = "0xBF9160", VA = "0xBF9160")]
		private void GenerateRhythm()
		{
		}

		[Token(Token = "0x6001B7A")]
		[Address(RVA = "0xBF9164", Offset = "0xBF9164", VA = "0xBF9164")]
		private void GenerateMelody()
		{
		}

		[Token(Token = "0x6001B7B")]
		[Address(RVA = "0xBF9168", Offset = "0xBF9168", VA = "0xBF9168")]
		private void Start()
		{
		}

		[Token(Token = "0x6001B7C")]
		[Address(RVA = "0xBF92A4", Offset = "0xBF92A4", VA = "0xBF92A4")]
		private int GetKeyFromRandomWalk(int note)
		{
			return default(int);
		}

		[Token(Token = "0x6001B7D")]
		[Address(RVA = "0xBF92EC", Offset = "0xBF92EC", VA = "0xBF92EC")]
		private int GetNextNote(int current, int max)
		{
			return default(int);
		}

		[Token(Token = "0x6001B7E")]
		[Address(RVA = "0xBF916C", Offset = "0xBF916C", VA = "0xBF916C")]
		public void Generate()
		{
		}

		[Token(Token = "0x6001B7F")]
		[Address(RVA = "0xBF9908", Offset = "0xBF9908", VA = "0xBF9908")]
		public SequenceGenerator()
		{
		}
	}
	[Token(Token = "0x2000530")]
	[RequireComponent(typeof(Slider))]
	[AddComponentMenu("")]
	public class SetAnimationParameter : MonoBehaviour
	{
		[Token(Token = "0x4001AF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string parameter;

		[Token(Token = "0x4001AF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Animator animator;

		[Token(Token = "0x6001B80")]
		[Address(RVA = "0xBF99A0", Offset = "0xBF99A0", VA = "0xBF99A0")]
		public void SetValue()
		{
		}

		[Token(Token = "0x6001B81")]
		[Address(RVA = "0xBF9A20", Offset = "0xBF9A20", VA = "0xBF9A20")]
		private void Start()
		{
		}

		[Token(Token = "0x6001B82")]
		[Address(RVA = "0xBF9A24", Offset = "0xBF9A24", VA = "0xBF9A24")]
		public SetAnimationParameter()
		{
		}
	}
	[Token(Token = "0x2000531")]
	[AddComponentMenu("")]
	[RequireComponent(typeof(Slider))]
	public class SetHelmParameter : MonoBehaviour
	{
		[Token(Token = "0x4001AF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int parameterIndex;

		[Token(Token = "0x4001AF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public HelmController controller;

		[Token(Token = "0x6001B83")]
		[Address(RVA = "0xBF9A2C", Offset = "0xBF9A2C", VA = "0xBF9A2C")]
		public void SetPercent()
		{
		}

		[Token(Token = "0x6001B84")]
		[Address(RVA = "0xBF9BAC", Offset = "0xBF9BAC", VA = "0xBF9BAC")]
		private void Start()
		{
		}

		[Token(Token = "0x6001B85")]
		[Address(RVA = "0xBF9BB0", Offset = "0xBF9BB0", VA = "0xBF9BB0")]
		public SetHelmParameter()
		{
		}
	}
	[Token(Token = "0x2000532")]
	[AddComponentMenu("")]
	public class SetSleepThreshold : MonoBehaviour
	{
		[Token(Token = "0x4001AF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float threshold;

		[Token(Token = "0x6001B86")]
		[Address(RVA = "0xBF9BB8", Offset = "0xBF9BB8", VA = "0xBF9BB8")]
		private void Start()
		{
		}

		[Token(Token = "0x6001B87")]
		[Address(RVA = "0xBF9C14", Offset = "0xBF9C14", VA = "0xBF9C14")]
		public SetSleepThreshold()
		{
		}
	}
	[Token(Token = "0x2000533")]
	[AddComponentMenu("")]
	public class SyncAudioAndSequencers : MonoBehaviour
	{
		[Token(Token = "0x4001AF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AudioHelmClock clock;

		[Token(Token = "0x4001AF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AudioSource loop;

		[Token(Token = "0x4001AF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float waitTime;

		[Token(Token = "0x4001AFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Text text;

		[Token(Token = "0x4001AFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private int lastSecond;

		[Token(Token = "0x6001B88")]
		[Address(RVA = "0xBF9C1C", Offset = "0xBF9C1C", VA = "0xBF9C1C")]
		private void Start()
		{
		}

		[Token(Token = "0x6001B89")]
		[Address(RVA = "0xBF9CF8", Offset = "0xBF9CF8", VA = "0xBF9CF8")]
		private void Update()
		{
		}

		[Token(Token = "0x6001B8A")]
		[Address(RVA = "0xBF9E8C", Offset = "0xBF9E8C", VA = "0xBF9E8C")]
		public SyncAudioAndSequencers()
		{
		}
	}
	[Token(Token = "0x2000534")]
	[AddComponentMenu("")]
	public class ToggleParameter : MonoBehaviour
	{
		[Token(Token = "0x4001AFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public HelmController controller;

		[Token(Token = "0x4001AFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Param param;

		[Token(Token = "0x4001AFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float onValue;

		[Token(Token = "0x4001AFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float offValue;

		[Token(Token = "0x4001B00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private bool isOn;

		[Token(Token = "0x6001B8B")]
		[Address(RVA = "0xBF9E9C", Offset = "0xBF9E9C", VA = "0xBF9E9C")]
		private void Start()
		{
		}

		[Token(Token = "0x6001B8C")]
		[Address(RVA = "0xBF9EC8", Offset = "0xBF9EC8", VA = "0xBF9EC8")]
		public void Toggle()
		{
		}

		[Token(Token = "0x6001B8D")]
		[Address(RVA = "0xBF9F0C", Offset = "0xBF9F0C", VA = "0xBF9F0C")]
		public ToggleParameter()
		{
		}
	}
	[Token(Token = "0x2000535")]
	[AddComponentMenu("")]
	public class TriggerVisibleNotes : MonoBehaviour
	{
		[Token(Token = "0x4001B01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public MaterialOnOff[] images;

		[Token(Token = "0x4001B02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int startingNote;

		[Token(Token = "0x6001B8E")]
		[Address(RVA = "0xBF9F1C", Offset = "0xBF9F1C", VA = "0xBF9F1C")]
		private int GetIndex(Note note)
		{
			return default(int);
		}

		[Token(Token = "0x6001B8F")]
		[Address(RVA = "0xBF9F50", Offset = "0xBF9F50", VA = "0xBF9F50")]
		public void NoteOn(Note note)
		{
		}

		[Token(Token = "0x6001B90")]
		[Address(RVA = "0xBF9F9C", Offset = "0xBF9F9C", VA = "0xBF9F9C")]
		public void NoteOff(Note note)
		{
		}

		[Token(Token = "0x6001B91")]
		[Address(RVA = "0xBF9FE4", Offset = "0xBF9FE4", VA = "0xBF9FE4")]
		public void Clear()
		{
		}

		[Token(Token = "0x6001B92")]
		[Address(RVA = "0xBFA028", Offset = "0xBFA028", VA = "0xBFA028")]
		public TriggerVisibleNotes()
		{
		}
	}
	[Token(Token = "0x2000536")]
	[AddComponentMenu("Audio Helm/Audio Helm Clock")]
	[HelpURL("http://tytel.org/audiohelm/manual/class_audio_helm_1_1_audio_helm_clock.html")]
	public class AudioHelmClock : MonoBehaviour
	{
		[Token(Token = "0x2000537")]
		public delegate void ResetAction();

		[Token(Token = "0x4001B03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static float globalBpm;

		[Token(Token = "0x4001B04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private static bool globalPause;

		[Token(Token = "0x4001B05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static double globalBeatTime;

		[Token(Token = "0x4001B06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static double lastSampledTime;

		[Token(Token = "0x4001B07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static AudioHelmClock singleton;

		[Token(Token = "0x4001B08")]
		private const double waitToSync = 1.0;

		[Token(Token = "0x4001B09")]
		private const double SECONDS_PER_MIN = 60.0;

		[Token(Token = "0x4001B0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float bpm_;

		[Token(Token = "0x4001B0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private bool pause_;

		[Token(Token = "0x17000285")]
		public float bpm
		{
			[Token(Token = "0x6001B95")]
			[Address(RVA = "0xBFA170", Offset = "0xBFA170", VA = "0xBFA170")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001B96")]
			[Address(RVA = "0xBFA178", Offset = "0xBFA178", VA = "0xBFA178")]
			set
			{
			}
		}

		[Token(Token = "0x17000286")]
		public bool pause
		{
			[Token(Token = "0x6001B97")]
			[Address(RVA = "0xBFA1F0", Offset = "0xBFA1F0", VA = "0xBFA1F0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001B98")]
			[Address(RVA = "0xBFA1F8", Offset = "0xBFA1F8", VA = "0xBFA1F8")]
			set
			{
			}
		}

		[Token(Token = "0x140000A1")]
		public event ResetAction OnReset
		{
			[Token(Token = "0x6001B93")]
			[Address(RVA = "0xBFA038", Offset = "0xBFA038", VA = "0xBFA038")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6001B94")]
			[Address(RVA = "0xBFA0D4", Offset = "0xBFA0D4", VA = "0xBFA0D4")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x6001B99")]
		[Address(RVA = "0xBFA288", Offset = "0xBFA288", VA = "0xBFA288")]
		public static AudioHelmClock GetInstance()
		{
			return null;
		}

		[Token(Token = "0x6001B9A")]
		[Address(RVA = "0xBFA2E0", Offset = "0xBFA2E0", VA = "0xBFA2E0")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001B9B")]
		[Address(RVA = "0xBFA470", Offset = "0xBFA470", VA = "0xBFA470")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001B9C")]
		[Address(RVA = "0xBFA180", Offset = "0xBFA180", VA = "0xBFA180")]
		private void SetGlobalBpm()
		{
		}

		[Token(Token = "0x6001B9D")]
		[Address(RVA = "0xBFA204", Offset = "0xBFA204", VA = "0xBFA204")]
		private void SetGlobalPause()
		{
		}

		[Token(Token = "0x6001B9E")]
		[Address(RVA = "0xBF9C6C", Offset = "0xBF9C6C", VA = "0xBF9C6C")]
		public void StartScheduled(double timeToStart)
		{
		}

		[Token(Token = "0x6001B9F")]
		[Address(RVA = "0xBFA358", Offset = "0xBFA358", VA = "0xBFA358")]
		public void Reset()
		{
		}

		[Token(Token = "0x6001BA0")]
		[Address(RVA = "0xBFA568", Offset = "0xBFA568", VA = "0xBFA568")]
		public static float GetGlobalBpm()
		{
			return default(float);
		}

		[Token(Token = "0x6001BA1")]
		[Address(RVA = "0xBFA5C0", Offset = "0xBFA5C0", VA = "0xBFA5C0")]
		public static double GetGlobalBeatTime()
		{
			return default(double);
		}

		[Token(Token = "0x6001BA2")]
		[Address(RVA = "0xBFA618", Offset = "0xBFA618", VA = "0xBFA618")]
		public static bool GetGlobalPause()
		{
			return default(bool);
		}

		[Token(Token = "0x6001BA3")]
		[Address(RVA = "0xBFA670", Offset = "0xBFA670", VA = "0xBFA670")]
		public static double GetLastSampledTime()
		{
			return default(double);
		}

		[Token(Token = "0x6001BA4")]
		[Address(RVA = "0xBFA6C8", Offset = "0xBFA6C8", VA = "0xBFA6C8")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6001BA5")]
		[Address(RVA = "0xBFA774", Offset = "0xBFA774", VA = "0xBFA774")]
		public AudioHelmClock()
		{
		}
	}
	[Token(Token = "0x2000538")]
	[ExecuteInEditMode]
	[RequireComponent(typeof(AudioSource))]
	[HelpURL("http://tytel.org/audiohelm/manual/class_audio_helm_1_1_helm_audio_init.html")]
	[AddComponentMenu("Audio Helm/Helm Audio Init")]
	public class HelmAudioInit : MonoBehaviour
	{
		[Token(Token = "0x4001B0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool warnedNoAudioGroup;

		[Token(Token = "0x4001B0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[Tooltip("The Audio Mixer Group where the Helm synthesizer instance is running.")]
		public AudioMixerGroup synthesizerMixerGroup;

		[Token(Token = "0x4001B0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[Tooltip("The Audio Mixer Group where the spatialized audio should route to.")]
		public AudioMixerGroup spatializerMixerGroup;

		[Token(Token = "0x4001B10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private AudioSource sendAudioSource;

		[Token(Token = "0x4001B11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool wasSpatialized;

		[Token(Token = "0x4001B12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private HelmAudioReceive receiveAudio;

		[Token(Token = "0x6001BAB")]
		[Address(RVA = "0xBFA8D4", Offset = "0xBFA8D4", VA = "0xBFA8D4")]
		private int GetChannel()
		{
			return default(int);
		}

		[Token(Token = "0x6001BAC")]
		[Address(RVA = "0xBFA9CC", Offset = "0xBFA9CC", VA = "0xBFA9CC")]
		private void SetupSpatialization(AudioSource audioComponent)
		{
		}

		[Token(Token = "0x6001BAD")]
		[Address(RVA = "0xBFADD4", Offset = "0xBFADD4", VA = "0xBFADD4")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001BAE")]
		[Address(RVA = "0xBFAEAC", Offset = "0xBFAEAC", VA = "0xBFAEAC")]
		private void Update()
		{
		}

		[Token(Token = "0x6001BAF")]
		[Address(RVA = "0xBFB164", Offset = "0xBFB164", VA = "0xBFB164")]
		public HelmAudioInit()
		{
		}
	}
	[Token(Token = "0x2000539")]
	[RequireComponent(typeof(AudioSource))]
	[AddComponentMenu("Audio Helm/Helm Audio Receive")]
	[HelpURL("http://tytel.org/audiohelm/manual/class_audio_helm_1_1_helm_audio_receive.html")]
	public class HelmAudioReceive : MonoBehaviour
	{
		[Token(Token = "0x4001B13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int channel;

		[Token(Token = "0x6001BB0")]
		[Address(RVA = "0xBFB16C", Offset = "0xBFB16C", VA = "0xBFB16C")]
		private void OnAudioFilterRead(float[] data, int audioChannels)
		{
		}

		[Token(Token = "0x6001BB1")]
		[Address(RVA = "0xBFB23C", Offset = "0xBFB23C", VA = "0xBFB23C")]
		public HelmAudioReceive()
		{
		}
	}
	[Token(Token = "0x200053A")]
	[RequireComponent(typeof(HelmAudioInit))]
	[AddComponentMenu("Audio Helm/Helm Controller")]
	[HelpURL("http://tytel.org/audiohelm/manual/class_audio_helm_1_1_helm_controller.html")]
	public class HelmController : MonoBehaviour, NoteHandler
	{
		[Token(Token = "0x200053B")]
		[CompilerGenerated]
		private sealed class <WaitNoteOff>d__48 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001B2A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001B2B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001B2C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float length;

			[Token(Token = "0x4001B2D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public HelmController <>4__this;

			[Token(Token = "0x4001B2E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public int note;

			[Token(Token = "0x17000287")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001BDA")]
				[Address(RVA = "0xBFCDDC", Offset = "0xBFCDDC", VA = "0xBFCDDC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000288")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001BDC")]
				[Address(RVA = "0xBFCE24", Offset = "0xBFCE24", VA = "0xBFCE24", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001BD7")]
			[Address(RVA = "0xBFC5F4", Offset = "0xBFC5F4", VA = "0xBFC5F4")]
			[DebuggerHidden]
			public <WaitNoteOff>d__48(int <>1__state)
			{
			}

			[Token(Token = "0x6001BD8")]
			[Address(RVA = "0xBFCD28", Offset = "0xBFCD28", VA = "0xBFCD28", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001BD9")]
			[Address(RVA = "0xBFCD2C", Offset = "0xBFCD2C", VA = "0xBFCD2C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001BDB")]
			[Address(RVA = "0xBFCDE4", Offset = "0xBFCDE4", VA = "0xBFCDE4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200053C")]
		[CompilerGenerated]
		private sealed class <WaitFrequencyOff>d__52 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001B2F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001B30")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001B31")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float length;

			[Token(Token = "0x4001B32")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public HelmController <>4__this;

			[Token(Token = "0x4001B33")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public float frequency;

			[Token(Token = "0x17000289")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001BE0")]
				[Address(RVA = "0xBFCEE0", Offset = "0xBFCEE0", VA = "0xBFCEE0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700028A")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001BE2")]
				[Address(RVA = "0xBFCF28", Offset = "0xBFCF28", VA = "0xBFCF28", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001BDD")]
			[Address(RVA = "0xBFC8A0", Offset = "0xBFC8A0", VA = "0xBFC8A0")]
			[DebuggerHidden]
			public <WaitFrequencyOff>d__52(int <>1__state)
			{
			}

			[Token(Token = "0x6001BDE")]
			[Address(RVA = "0xBFCE2C", Offset = "0xBFCE2C", VA = "0xBFCE2C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001BDF")]
			[Address(RVA = "0xBFCE30", Offset = "0xBFCE30", VA = "0xBFCE30", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001BE1")]
			[Address(RVA = "0xBFCEE8", Offset = "0xBFCEE8", VA = "0xBFCEE8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001B14")]
		public const float UPDATE_WAIT = 0.04f;

		[Token(Token = "0x4001B15")]
		public const int MAX_PARAMETERS = 16;

		[Token(Token = "0x4001B16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Tooltip("The native synth channel to send note events to. This must match the channel set in the Helm Audio plugin.")]
		public int channel;

		[Token(Token = "0x4001B17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		protected float synthParamValue0;

		[Token(Token = "0x4001B18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		protected float synthParamValue1;

		[Token(Token = "0x4001B19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		protected float synthParamValue2;

		[Token(Token = "0x4001B1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		protected float synthParamValue3;

		[Token(Token = "0x4001B1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		protected float synthParamValue4;

		[Token(Token = "0x4001B1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		protected float synthParamValue5;

		[Token(Token = "0x4001B1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[SerializeField]
		protected float synthParamValue6;

		[Token(Token = "0x4001B1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		protected float synthParamValue7;

		[Token(Token = "0x4001B1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[SerializeField]
		protected float synthParamValue8;

		[Token(Token = "0x4001B20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		protected float synthParamValue9;

		[Token(Token = "0x4001B21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[SerializeField]
		protected float synthParamValue10;

		[Token(Token = "0x4001B22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		protected float synthParamValue11;

		[Token(Token = "0x4001B23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[SerializeField]
		protected float synthParamValue12;

		[Token(Token = "0x4001B24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		protected float synthParamValue13;

		[Token(Token = "0x4001B25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[SerializeField]
		protected float synthParamValue14;

		[Token(Token = "0x4001B26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		protected float synthParamValue15;

		[Token(Token = "0x4001B27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public List<HelmParameter> synthParameters;

		[Token(Token = "0x4001B28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Dictionary<int, int> pressedNotes;

		[Token(Token = "0x4001B29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Dictionary<float, int> pressedFrequencies;

		[Token(Token = "0x6001BB2")]
		[Address(RVA = "0xBFB244", Offset = "0xBFB244", VA = "0xBFB244")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001BB3")]
		[Address(RVA = "0xBFB2C4", Offset = "0xBFB2C4", VA = "0xBFB2C4")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001BB4")]
		[Address(RVA = "0xBFB2C8", Offset = "0xBFB2C8", VA = "0xBFB2C8")]
		private void Start()
		{
		}

		[Token(Token = "0x6001BB5")]
		[Address(RVA = "0xBFB34C", Offset = "0xBFB34C", VA = "0xBFB34C")]
		public void LoadPatch(HelmPatch patch)
		{
		}

		[Token(Token = "0x6001BB6")]
		[Address(RVA = "0xBFB96C", Offset = "0xBFB96C", VA = "0xBFB96C")]
		public float GetParameterAtIndex(int index)
		{
			return default(float);
		}

		[Token(Token = "0x6001BB7")]
		[Address(RVA = "0xBF9AAC", Offset = "0xBF9AAC", VA = "0xBF9AAC")]
		public void SetParameterAtIndex(int index, float newValue)
		{
		}

		[Token(Token = "0x6001BB8")]
		[Address(RVA = "0xBFBA64", Offset = "0xBFBA64", VA = "0xBFBA64")]
		public void UpdateAllParameters()
		{
		}

		[Token(Token = "0x6001BB9")]
		[Address(RVA = "0xBFBC5C", Offset = "0xBFBC5C", VA = "0xBFBC5C")]
		public void UpdateParameter(int index)
		{
		}

		[Token(Token = "0x6001BBA")]
		[Address(RVA = "0xBFBE3C", Offset = "0xBFBE3C", VA = "0xBFBE3C")]
		public HelmParameter AddEmptyParameter()
		{
			return null;
		}

		[Token(Token = "0x6001BBB")]
		[Address(RVA = "0xBFBF90", Offset = "0xBFBF90", VA = "0xBFBF90")]
		public HelmParameter AddParameter(Param parameter)
		{
			return null;
		}

		[Token(Token = "0x6001BBC")]
		[Address(RVA = "0xBFC124", Offset = "0xBFC124", VA = "0xBFC124")]
		public int RemoveParameter(HelmParameter parameter)
		{
			return default(int);
		}

		[Token(Token = "0x6001BBD")]
		[Address(RVA = "0xBFC1B4", Offset = "0xBFC1B4", VA = "0xBFC1B4")]
		public float GetParameterValue(Param parameter)
		{
			return default(float);
		}

		[Token(Token = "0x6001BBE")]
		[Address(RVA = "0xBF9EC0", Offset = "0xBF9EC0", VA = "0xBF9EC0")]
		public void SetParameterValue(Param parameter, float newValue)
		{
		}

		[Token(Token = "0x6001BBF")]
		[Address(RVA = "0xBFC240", Offset = "0xBFC240", VA = "0xBFC240")]
		public float GetParameterValue(CommonParam parameter)
		{
			return default(float);
		}

		[Token(Token = "0x6001BC0")]
		[Address(RVA = "0xBFC2CC", Offset = "0xBFC2CC", VA = "0xBFC2CC")]
		public void SetParameterValue(CommonParam parameter, float newValue)
		{
		}

		[Token(Token = "0x6001BC1")]
		[Address(RVA = "0xBFC2D4", Offset = "0xBFC2D4", VA = "0xBFC2D4")]
		public float GetParameterPercent(Param parameter)
		{
			return default(float);
		}

		[Token(Token = "0x6001BC2")]
		[Address(RVA = "0xBFC2DC", Offset = "0xBFC2DC", VA = "0xBFC2DC")]
		public void SetParameterPercent(Param parameter, float newPercent)
		{
		}

		[Token(Token = "0x6001BC3")]
		[Address(RVA = "0xBFC380", Offset = "0xBFC380", VA = "0xBFC380")]
		public float GetParameterPercent(CommonParam parameter)
		{
			return default(float);
		}

		[Token(Token = "0x6001BC4")]
		[Address(RVA = "0xBFC388", Offset = "0xBFC388", VA = "0xBFC388")]
		public void SetParameterPercent(CommonParam parameter, float newPercent)
		{
		}

		[Token(Token = "0x6001BC5")]
		[Address(RVA = "0xBFC390", Offset = "0xBFC390", VA = "0xBFC390")]
		public void SetPolyphony(int numVoices)
		{
		}

		[Token(Token = "0x6001BC6")]
		[Address(RVA = "0xBFB248", Offset = "0xBFB248", VA = "0xBFB248", Slot = "4")]
		public void AllNotesOff()
		{
		}

		[Token(Token = "0x6001BC7")]
		[Address(RVA = "0xBFC418", Offset = "0xBFC418", VA = "0xBFC418")]
		public bool IsNoteOn(int note)
		{
			return default(bool);
		}

		[Token(Token = "0x6001BC8")]
		[Address(RVA = "0xBFC470", Offset = "0xBFC470", VA = "0xBFC470")]
		public bool IsFrequencyOn(float frequency)
		{
			return default(bool);
		}

		[Token(Token = "0x6001BC9")]
		[Address(RVA = "0xBFC4D0", Offset = "0xBFC4D0", VA = "0xBFC4D0")]
		public Dictionary<int, int> GetPressedNotes()
		{
			return null;
		}

		[Token(Token = "0x6001BCA")]
		[Address(RVA = "0xBF68C4", Offset = "0xBF68C4", VA = "0xBF68C4")]
		public void NoteOn(int note, float velocity, float length)
		{
		}

		[Token(Token = "0x6001BCB")]
		[Address(RVA = "0xBF75C8", Offset = "0xBF75C8", VA = "0xBF75C8", Slot = "5")]
		public void NoteOn(int note, float velocity = 1f)
		{
		}

		[Token(Token = "0x6001BCC")]
		[Address(RVA = "0xBFC4D8", Offset = "0xBFC4D8", VA = "0xBFC4D8")]
		[IteratorStateMachine(typeof(<WaitNoteOff>d__48))]
		private IEnumerator WaitNoteOff(int note, float length)
		{
			return null;
		}

		[Token(Token = "0x6001BCD")]
		[Address(RVA = "0xBF7734", Offset = "0xBF7734", VA = "0xBF7734", Slot = "6")]
		public void NoteOff(int note)
		{
		}

		[Token(Token = "0x6001BCE")]
		[Address(RVA = "0xBFC6A0", Offset = "0xBFC6A0", VA = "0xBFC6A0")]
		public void FrequencyOn(float frequency, float velocity, float length)
		{
		}

		[Token(Token = "0x6001BCF")]
		[Address(RVA = "0xBFC6E0", Offset = "0xBFC6E0", VA = "0xBFC6E0")]
		public void FrequencyOn(float frequency, float velocity = 1f)
		{
		}

		[Token(Token = "0x6001BD0")]
		[Address(RVA = "0xBFC790", Offset = "0xBFC790", VA = "0xBFC790")]
		[IteratorStateMachine(typeof(<WaitFrequencyOff>d__52))]
		private IEnumerator WaitFrequencyOff(float frequency, float length)
		{
			return null;
		}

		[Token(Token = "0x6001BD1")]
		[Address(RVA = "0xBFC8C8", Offset = "0xBFC8C8", VA = "0xBFC8C8")]
		public void FrequencyOff(float frequency)
		{
		}

		[Token(Token = "0x6001BD2")]
		[Address(RVA = "0xBFCA30", Offset = "0xBFCA30", VA = "0xBFCA30")]
		public void SetPitchWheel(float wheelValue)
		{
		}

		[Token(Token = "0x6001BD3")]
		[Address(RVA = "0xBFCAC4", Offset = "0xBFCAC4", VA = "0xBFCAC4")]
		public void SetModWheel(float wheelValue)
		{
		}

		[Token(Token = "0x6001BD4")]
		[Address(RVA = "0xBFCB54", Offset = "0xBFCB54", VA = "0xBFCB54")]
		public void SetAftertouch(int note, float aftertouchValue)
		{
		}

		[Token(Token = "0x6001BD5")]
		[Address(RVA = "0xBFCBF0", Offset = "0xBFCBF0", VA = "0xBFCBF0")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6001BD6")]
		[Address(RVA = "0xBFCC24", Offset = "0xBFCC24", VA = "0xBFCC24")]
		public HelmController()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200053D")]
	public class HelmParameter
	{
		[Token(Token = "0x200053E")]
		public enum ScaleType
		{
			[Token(Token = "0x4001B3C")]
			kByValue,
			[Token(Token = "0x4001B3D")]
			kByPercent
		}

		[Token(Token = "0x4001B34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		private Param parameter_;

		[Token(Token = "0x4001B35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public ScaleType scaleType;

		[Token(Token = "0x4001B36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public HelmController parent;

		[Token(Token = "0x4001B37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private float lastValue;

		[Token(Token = "0x4001B38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private float minimumRange;

		[Token(Token = "0x4001B39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private float maximumRange;

		[Token(Token = "0x4001B3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		private float paramValue_;

		[Token(Token = "0x1700028B")]
		public Param parameter
		{
			[Token(Token = "0x6001BE3")]
			[Address(RVA = "0xBFCF30", Offset = "0xBFCF30", VA = "0xBFCF30")]
			get
			{
				return default(Param);
			}
			[Token(Token = "0x6001BE4")]
			[Address(RVA = "0xBFCF38", Offset = "0xBFCF38", VA = "0xBFCF38")]
			set
			{
			}
		}

		[Token(Token = "0x1700028C")]
		public float paramValue
		{
			[Token(Token = "0x6001BE5")]
			[Address(RVA = "0xBFCFD0", Offset = "0xBFCFD0", VA = "0xBFCFD0")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001BE6")]
			[Address(RVA = "0xBFBC44", Offset = "0xBFBC44", VA = "0xBFBC44")]
			set
			{
			}
		}

		[Token(Token = "0x6001BE7")]
		[Address(RVA = "0xBFD0B8", Offset = "0xBFD0B8", VA = "0xBFD0B8")]
		public HelmParameter()
		{
		}

		[Token(Token = "0x6001BE8")]
		[Address(RVA = "0xBFBF50", Offset = "0xBFBF50", VA = "0xBFBF50")]
		public HelmParameter(HelmController par)
		{
		}

		[Token(Token = "0x6001BE9")]
		[Address(RVA = "0xBFC094", Offset = "0xBFC094", VA = "0xBFC094")]
		public HelmParameter(HelmController par, Param param)
		{
		}

		[Token(Token = "0x6001BEA")]
		[Address(RVA = "0xBFD0EC", Offset = "0xBFD0EC", VA = "0xBFD0EC")]
		public float GetMinimumRange()
		{
			return default(float);
		}

		[Token(Token = "0x6001BEB")]
		[Address(RVA = "0xBFD0F4", Offset = "0xBFD0F4", VA = "0xBFD0F4")]
		public float GetMaximumRange()
		{
			return default(float);
		}

		[Token(Token = "0x6001BEC")]
		[Address(RVA = "0xBFCF50", Offset = "0xBFCF50", VA = "0xBFCF50")]
		private void UpdateMinMax()
		{
		}

		[Token(Token = "0x6001BED")]
		[Address(RVA = "0xBFCFD8", Offset = "0xBFCFD8", VA = "0xBFCFD8")]
		private void UpdateNative()
		{
		}
	}
	[Token(Token = "0x200053F")]
	public class HelmPatch : MonoBehaviour
	{
		[Token(Token = "0x4001B3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public UnityEngine.Object patchObject;

		[Token(Token = "0x4001B3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public HelmPatchFormat patchData;

		[Token(Token = "0x6001BEE")]
		[Address(RVA = "0xBFD1F4", Offset = "0xBFD1F4", VA = "0xBFD1F4")]
		public void LoadPatchData(string filePath)
		{
		}

		[Token(Token = "0x6001BEF")]
		[Address(RVA = "0xBFD258", Offset = "0xBFD258", VA = "0xBFD258")]
		public HelmPatch()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000540")]
	public class HelmModulationSetting
	{
		[Token(Token = "0x4001B40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string source;

		[Token(Token = "0x4001B41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string destination;

		[Token(Token = "0x4001B42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float amount;

		[Token(Token = "0x6001BF0")]
		[Address(RVA = "0xBFD260", Offset = "0xBFD260", VA = "0xBFD260")]
		public HelmModulationSetting()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000541")]
	public class HelmPatchSettings
	{
		[Token(Token = "0x4001B43")]
		public const int kMaxModulations = 16;

		[Token(Token = "0x4001B44")]
		public const int kMaxCharacters = 15;

		[Token(Token = "0x4001B45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly string[] kModulationSources;

		[Token(Token = "0x4001B46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static readonly string[] kModulationDestinations;

		[Token(Token = "0x4001B47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static readonly string[] kShortenNames;

		[Token(Token = "0x4001B48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float amp_attack;

		[Token(Token = "0x4001B49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float amp_decay;

		[Token(Token = "0x4001B4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float amp_release;

		[Token(Token = "0x4001B4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float amp_sustain;

		[Token(Token = "0x4001B4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float arp_frequency;

		[Token(Token = "0x4001B4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float arp_gate;

		[Token(Token = "0x4001B4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float arp_octaves;

		[Token(Token = "0x4001B4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float arp_on;

		[Token(Token = "0x4001B50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float arp_pattern;

		[Token(Token = "0x4001B51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float arp_sync;

		[Token(Token = "0x4001B52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float arp_tempo;

		[Token(Token = "0x4001B53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float beats_per_minute;

		[Token(Token = "0x4001B54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float cross_modulation;

		[Token(Token = "0x4001B55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public float cutoff;

		[Token(Token = "0x4001B56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public float delay_dry_wet;

		[Token(Token = "0x4001B57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public float delay_feedback;

		[Token(Token = "0x4001B58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public float delay_frequency;

		[Token(Token = "0x4001B59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public float delay_on;

		[Token(Token = "0x4001B5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public float delay_sync;

		[Token(Token = "0x4001B5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public float delay_tempo;

		[Token(Token = "0x4001B5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public float distortion_drive;

		[Token(Token = "0x4001B5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public float distortion_mix;

		[Token(Token = "0x4001B5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public float distortion_on;

		[Token(Token = "0x4001B5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public float distortion_type;

		[Token(Token = "0x4001B60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public float fil_attack;

		[Token(Token = "0x4001B61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		public float fil_decay;

		[Token(Token = "0x4001B62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public float fil_env_depth;

		[Token(Token = "0x4001B63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		public float fil_release;

		[Token(Token = "0x4001B64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public float fil_sustain;

		[Token(Token = "0x4001B65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		public float filter_blend;

		[Token(Token = "0x4001B66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public float filter_drive;

		[Token(Token = "0x4001B67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		public float filter_on;

		[Token(Token = "0x4001B68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public float filter_saturation;

		[Token(Token = "0x4001B69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		public float filter_shelf;

		[Token(Token = "0x4001B6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public float filter_style;

		[Token(Token = "0x4001B6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		public float filter_type;

		[Token(Token = "0x4001B6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public float formant_on;

		[Token(Token = "0x4001B6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		public float formant_x;

		[Token(Token = "0x4001B6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public float formant_y;

		[Token(Token = "0x4001B6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		public float keytrack;

		[Token(Token = "0x4001B70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public float legato;

		[Token(Token = "0x4001B71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		public float mod_attack;

		[Token(Token = "0x4001B72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public float mod_decay;

		[Token(Token = "0x4001B73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		public float mod_release;

		[Token(Token = "0x4001B74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public float mod_sustain;

		[Token(Token = "0x4001B75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		public float mono_lfo_1_amplitude;

		[Token(Token = "0x4001B76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public float mono_lfo_1_frequency;

		[Token(Token = "0x4001B77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		public float mono_lfo_1_retrigger;

		[Token(Token = "0x4001B78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		public float mono_lfo_1_sync;

		[Token(Token = "0x4001B79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		public float mono_lfo_1_tempo;

		[Token(Token = "0x4001B7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		public float mono_lfo_1_waveform;

		[Token(Token = "0x4001B7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		public float mono_lfo_2_amplitude;

		[Token(Token = "0x4001B7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		public float mono_lfo_2_frequency;

		[Token(Token = "0x4001B7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		public float mono_lfo_2_retrigger;

		[Token(Token = "0x4001B7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		public float mono_lfo_2_sync;

		[Token(Token = "0x4001B7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
		public float mono_lfo_2_tempo;

		[Token(Token = "0x4001B80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		public float mono_lfo_2_waveform;

		[Token(Token = "0x4001B81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
		public float noise_volume;

		[Token(Token = "0x4001B82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		public float num_steps;

		[Token(Token = "0x4001B83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
		public float osc_1_transpose;

		[Token(Token = "0x4001B84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		public float osc_1_tune;

		[Token(Token = "0x4001B85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
		public float osc_1_unison_detune;

		[Token(Token = "0x4001B86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		public float osc_1_unison_voices;

		[Token(Token = "0x4001B87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
		public float osc_1_volume;

		[Token(Token = "0x4001B88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		public float osc_1_waveform;

		[Token(Token = "0x4001B89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
		public float osc_2_transpose;

		[Token(Token = "0x4001B8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		public float osc_2_tune;

		[Token(Token = "0x4001B8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
		public float osc_2_unison_detune;

		[Token(Token = "0x4001B8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		public float osc_2_unison_voices;

		[Token(Token = "0x4001B8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
		public float osc_2_volume;

		[Token(Token = "0x4001B8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		public float osc_2_waveform;

		[Token(Token = "0x4001B8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
		public float osc_feedback_amount;

		[Token(Token = "0x4001B90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		public float osc_feedback_transpose;

		[Token(Token = "0x4001B91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
		public float osc_feedback_tune;

		[Token(Token = "0x4001B92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		public float osc_mix;

		[Token(Token = "0x4001B93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x13C")]
		public float pitch_bend_range;

		[Token(Token = "0x4001B94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		public float poly_lfo_amplitude;

		[Token(Token = "0x4001B95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
		public float poly_lfo_frequency;

		[Token(Token = "0x4001B96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		public float poly_lfo_sync;

		[Token(Token = "0x4001B97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14C")]
		public float poly_lfo_tempo;

		[Token(Token = "0x4001B98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		public float poly_lfo_waveform;

		[Token(Token = "0x4001B99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x154")]
		public float polyphony;

		[Token(Token = "0x4001B9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		public float portamento;

		[Token(Token = "0x4001B9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x15C")]
		public float portamento_type;

		[Token(Token = "0x4001B9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		public float resonance;

		[Token(Token = "0x4001B9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x164")]
		public float reverb_damping;

		[Token(Token = "0x4001B9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		public float reverb_dry_wet;

		[Token(Token = "0x4001B9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x16C")]
		public float reverb_feedback;

		[Token(Token = "0x4001BA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		public float reverb_on;

		[Token(Token = "0x4001BA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x174")]
		public float step_frequency;

		[Token(Token = "0x4001BA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		public float step_seq_00;

		[Token(Token = "0x4001BA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x17C")]
		public float step_seq_01;

		[Token(Token = "0x4001BA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		public float step_seq_02;

		[Token(Token = "0x4001BA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x184")]
		public float step_seq_03;

		[Token(Token = "0x4001BA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
		public float step_seq_04;

		[Token(Token = "0x4001BA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18C")]
		public float step_seq_05;

		[Token(Token = "0x4001BA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
		public float step_seq_06;

		[Token(Token = "0x4001BA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x194")]
		public float step_seq_07;

		[Token(Token = "0x4001BAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
		public float step_seq_08;

		[Token(Token = "0x4001BAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19C")]
		public float step_seq_09;

		[Token(Token = "0x4001BAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
		public float step_seq_10;

		[Token(Token = "0x4001BAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A4")]
		public float step_seq_11;

		[Token(Token = "0x4001BAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
		public float step_seq_12;

		[Token(Token = "0x4001BAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1AC")]
		public float step_seq_13;

		[Token(Token = "0x4001BB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
		public float step_seq_14;

		[Token(Token = "0x4001BB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B4")]
		public float step_seq_15;

		[Token(Token = "0x4001BB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
		public float step_seq_16;

		[Token(Token = "0x4001BB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1BC")]
		public float step_seq_17;

		[Token(Token = "0x4001BB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
		public float step_seq_18;

		[Token(Token = "0x4001BB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C4")]
		public float step_seq_19;

		[Token(Token = "0x4001BB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
		public float step_seq_20;

		[Token(Token = "0x4001BB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1CC")]
		public float step_seq_21;

		[Token(Token = "0x4001BB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
		public float step_seq_22;

		[Token(Token = "0x4001BB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D4")]
		public float step_seq_23;

		[Token(Token = "0x4001BBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
		public float step_seq_24;

		[Token(Token = "0x4001BBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1DC")]
		public float step_seq_25;

		[Token(Token = "0x4001BBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
		public float step_seq_26;

		[Token(Token = "0x4001BBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E4")]
		public float step_seq_27;

		[Token(Token = "0x4001BBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
		public float step_seq_28;

		[Token(Token = "0x4001BBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1EC")]
		public float step_seq_29;

		[Token(Token = "0x4001BC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
		public float step_seq_30;

		[Token(Token = "0x4001BC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F4")]
		public float step_seq_31;

		[Token(Token = "0x4001BC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
		public float step_sequencer_retrigger;

		[Token(Token = "0x4001BC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1FC")]
		public float step_sequencer_sync;

		[Token(Token = "0x4001BC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
		public float step_sequencer_tempo;

		[Token(Token = "0x4001BC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x204")]
		public float step_smoothing;

		[Token(Token = "0x4001BC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
		public float stutter_frequency;

		[Token(Token = "0x4001BC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20C")]
		public float stutter_on;

		[Token(Token = "0x4001BC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
		public float stutter_resample_frequency;

		[Token(Token = "0x4001BC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x214")]
		public float stutter_resample_sync;

		[Token(Token = "0x4001BCA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
		public float stutter_resample_tempo;

		[Token(Token = "0x4001BCB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21C")]
		public float stutter_softness;

		[Token(Token = "0x4001BCC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x220")]
		public float stutter_sync;

		[Token(Token = "0x4001BCD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x224")]
		public float stutter_tempo;

		[Token(Token = "0x4001BCE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x228")]
		public float sub_octave;

		[Token(Token = "0x4001BCF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x22C")]
		public float sub_shuffle;

		[Token(Token = "0x4001BD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x230")]
		public float sub_volume;

		[Token(Token = "0x4001BD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x234")]
		public float sub_waveform;

		[Token(Token = "0x4001BD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x238")]
		public float unison_1_harmonize;

		[Token(Token = "0x4001BD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x23C")]
		public float unison_2_harmonize;

		[Token(Token = "0x4001BD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x240")]
		public float velocity_track;

		[Token(Token = "0x4001BD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x244")]
		public float volume;

		[Token(Token = "0x4001BD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x248")]
		public HelmModulationSetting[] modulations;

		[Token(Token = "0x6001BF1")]
		[Address(RVA = "0xBFD268", Offset = "0xBFD268", VA = "0xBFD268")]
		public static string ConvertToPlugin(string name)
		{
			return null;
		}

		[Token(Token = "0x6001BF2")]
		[Address(RVA = "0xBFD3B0", Offset = "0xBFD3B0", VA = "0xBFD3B0")]
		public static int GetSourceIndex(string source)
		{
			return default(int);
		}

		[Token(Token = "0x6001BF3")]
		[Address(RVA = "0xBFD478", Offset = "0xBFD478", VA = "0xBFD478")]
		public static int GetDestinationIndex(string dest)
		{
			return default(int);
		}

		[Token(Token = "0x6001BF4")]
		[Address(RVA = "0xBFD540", Offset = "0xBFD540", VA = "0xBFD540")]
		public HelmPatchSettings()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000542")]
	public class HelmPatchFormat
	{
		[Token(Token = "0x4001BD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string license;

		[Token(Token = "0x4001BD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string synth_version;

		[Token(Token = "0x4001BD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string patch_name;

		[Token(Token = "0x4001BDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string folder_name;

		[Token(Token = "0x4001BDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string author;

		[Token(Token = "0x4001BDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public HelmPatchSettings settings;

		[Token(Token = "0x6001BF6")]
		[Address(RVA = "0xBFFB88", Offset = "0xBFFB88", VA = "0xBFFB88")]
		public HelmPatchFormat()
		{
		}
	}
	[Token(Token = "0x2000543")]
	[HelpURL("http://tytel.org/audiohelm/manual/class_audio_helm_1_1_helm_sequencer.html")]
	[AddComponentMenu("Audio Helm/Helm Sequencer")]
	[RequireComponent(typeof(HelmAudioInit))]
	public class HelmSequencer : Sequencer
	{
		[Token(Token = "0x4001BDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		[Tooltip("The native synth channel to send note events to. This must match the channel set in the Helm Audio plugin.")]
		public int channel;

		[Token(Token = "0x4001BDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private IntPtr reference;

		[Token(Token = "0x4001BDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private int currentChannel;

		[Token(Token = "0x4001BE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		private int currentLength;

		[Token(Token = "0x4001BE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private bool currentLoop;

		[Token(Token = "0x6001BF7")]
		[Address(RVA = "0xBFFB90", Offset = "0xBFFB90", VA = "0xBFFB90")]
		private void CreateNativeSequencer()
		{
		}

		[Token(Token = "0x6001BF8")]
		[Address(RVA = "0xBFFC48", Offset = "0xBFFC48", VA = "0xBFFC48")]
		private void DeleteNativeSequencer()
		{
		}

		[Token(Token = "0x6001BF9")]
		[Address(RVA = "0xBFFD20", Offset = "0xBFFD20", VA = "0xBFFD20", Slot = "15")]
		public override IntPtr Reference()
		{
			return default(IntPtr);
		}

		[Token(Token = "0x6001BFA")]
		[Address(RVA = "0xBFFD28", Offset = "0xBFFD28", VA = "0xBFFD28")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001BFB")]
		[Address(RVA = "0xC0034C", Offset = "0xC0034C", VA = "0xC0034C")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001BFC")]
		[Address(RVA = "0xC003B8", Offset = "0xC003B8", VA = "0xC003B8", Slot = "13")]
		protected override void OnEnable()
		{
		}

		[Token(Token = "0x6001BFD")]
		[Address(RVA = "0xC00608", Offset = "0xC00608", VA = "0xC00608", Slot = "14")]
		protected override void OnDisable()
		{
		}

		[Token(Token = "0x6001BFE")]
		[Address(RVA = "0xC00798", Offset = "0xC00798", VA = "0xC00798", Slot = "9")]
		public override void AllNotesOff()
		{
		}

		[Token(Token = "0x6001BFF")]
		[Address(RVA = "0xC009A8", Offset = "0xC009A8", VA = "0xC009A8", Slot = "10")]
		public override void NoteOn(int note, float velocity = 1f)
		{
		}

		[Token(Token = "0x6001C00")]
		[Address(RVA = "0xC009B0", Offset = "0xC009B0", VA = "0xC009B0", Slot = "11")]
		public override void NoteOff(int note)
		{
		}

		[Token(Token = "0x6001C01")]
		[Address(RVA = "0xC009B8", Offset = "0xC009B8", VA = "0xC009B8")]
		private void EnableComponent()
		{
		}

		[Token(Token = "0x6001C02")]
		[Address(RVA = "0xC009C4", Offset = "0xC009C4", VA = "0xC009C4", Slot = "12")]
		public override void StartOnNextCycle()
		{
		}

		[Token(Token = "0x6001C03")]
		[Address(RVA = "0xC00C08", Offset = "0xC00C08", VA = "0xC00C08")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6001C04")]
		[Address(RVA = "0xC00D08", Offset = "0xC00D08", VA = "0xC00D08")]
		private void Update()
		{
		}

		[Token(Token = "0x6001C05")]
		[Address(RVA = "0xC00C0C", Offset = "0xC00C0C", VA = "0xC00C0C")]
		private void DoUpdate()
		{
		}

		[Token(Token = "0x6001C06")]
		[Address(RVA = "0xC00FCC", Offset = "0xC00FCC", VA = "0xC00FCC")]
		public HelmSequencer()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000544")]
	public class Keyzone
	{
		[Token(Token = "0x4001BE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public AudioClip audioClip;

		[Token(Token = "0x4001BE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AudioMixerGroup mixer;

		[Token(Token = "0x4001BE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int rootKey;

		[Token(Token = "0x4001BE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public int minKey;

		[Token(Token = "0x4001BE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int maxKey;

		[Token(Token = "0x4001BE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float minVelocity;

		[Token(Token = "0x4001BE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float maxVelocity;

		[Token(Token = "0x6001C07")]
		[Address(RVA = "0xC011F4", Offset = "0xC011F4", VA = "0xC011F4")]
		public bool ValidForNote(int note)
		{
			return default(bool);
		}

		[Token(Token = "0x6001C08")]
		[Address(RVA = "0xC01280", Offset = "0xC01280", VA = "0xC01280")]
		public bool ValidForNote(int note, float velocity)
		{
			return default(bool);
		}

		[Token(Token = "0x6001C09")]
		[Address(RVA = "0xC012C4", Offset = "0xC012C4", VA = "0xC012C4")]
		public Keyzone()
		{
		}
	}
	[Token(Token = "0x2000545")]
	public class MidiFile : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000546")]
		public class MidiData
		{
			[Token(Token = "0x4001BEB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int length;

			[Token(Token = "0x4001BEC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public List<Note> notes;

			[Token(Token = "0x6001C0D")]
			[Address(RVA = "0xC013B4", Offset = "0xC013B4", VA = "0xC013B4")]
			public MidiData()
			{
			}
		}

		[Token(Token = "0x4001BE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public UnityEngine.Object midiObject;

		[Token(Token = "0x4001BEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MidiData midiData;

		[Token(Token = "0x6001C0A")]
		[Address(RVA = "0xC012E4", Offset = "0xC012E4", VA = "0xC012E4")]
		public void LoadMidiData(string filePath)
		{
		}

		[Token(Token = "0x6001C0B")]
		[Address(RVA = "0xC0135C", Offset = "0xC0135C", VA = "0xC0135C")]
		public static MidiData LoadMidiData(Stream midiStream)
		{
			return null;
		}

		[Token(Token = "0x6001C0C")]
		[Address(RVA = "0xC01438", Offset = "0xC01438", VA = "0xC01438")]
		public MidiFile()
		{
		}
	}
	[Token(Token = "0x2000547")]
	public static class Native
	{
		[PreserveSig]
		[Token(Token = "0x6001C0E")]
		[Address(RVA = "0xBFC560", Offset = "0xBFC560", VA = "0xBFC560")]
		public static extern void HelmNoteOn(int channel, int note, float velocity);

		[PreserveSig]
		[Token(Token = "0x6001C0F")]
		[Address(RVA = "0xBFC61C", Offset = "0xBFC61C", VA = "0xBFC61C")]
		public static extern void HelmNoteOff(int channel, int note);

		[PreserveSig]
		[Token(Token = "0x6001C10")]
		[Address(RVA = "0xBFC810", Offset = "0xBFC810", VA = "0xBFC810")]
		public static extern void HelmFrequencyOn(int channel, float frequency, float velocity);

		[PreserveSig]
		[Token(Token = "0x6001C11")]
		[Address(RVA = "0xBFC9A4", Offset = "0xBFC9A4", VA = "0xBFC9A4")]
		public static extern void HelmFrequencyOff(int channel, float frequency);

		[PreserveSig]
		[Token(Token = "0x6001C12")]
		[Address(RVA = "0xBFC3A0", Offset = "0xBFC3A0", VA = "0xBFC3A0")]
		public static extern void HelmAllNotesOff(int channel);

		[PreserveSig]
		[Token(Token = "0x6001C13")]
		[Address(RVA = "0xBFCA38", Offset = "0xBFCA38", VA = "0xBFCA38")]
		public static extern void HelmSetPitchWheel(int channel, float value);

		[PreserveSig]
		[Token(Token = "0x6001C14")]
		[Address(RVA = "0xBFCACC", Offset = "0xBFCACC", VA = "0xBFCACC")]
		public static extern void HelmSetModWheel(int channel, float value);

		[PreserveSig]
		[Token(Token = "0x6001C15")]
		[Address(RVA = "0xBFCB5C", Offset = "0xBFCB5C", VA = "0xBFCB5C")]
		public static extern void HelmSetAftertouch(int channel, int note, float value);

		[PreserveSig]
		[Token(Token = "0x6001C16")]
		[Address(RVA = "0xBFB780", Offset = "0xBFB780", VA = "0xBFB780")]
		public static extern void HelmClearModulations(int channel);

		[PreserveSig]
		[Token(Token = "0x6001C17")]
		[Address(RVA = "0xBFB898", Offset = "0xBFB898", VA = "0xBFB898")]
		public static extern void HelmAddModulation(int channel, int index, string source, string dest, float amount);

		[PreserveSig]
		[Token(Token = "0x6001C18")]
		[Address(RVA = "0xBFD0FC", Offset = "0xBFD0FC", VA = "0xBFD0FC")]
		public static extern float HelmGetParameterMinimum(int index);

		[PreserveSig]
		[Token(Token = "0x6001C19")]
		[Address(RVA = "0xBFD178", Offset = "0xBFD178", VA = "0xBFD178")]
		public static extern float HelmGetParameterMaximum(int index);

		[PreserveSig]
		[Token(Token = "0x6001C1A")]
		[Address(RVA = "0xBFC1BC", Offset = "0xBFC1BC", VA = "0xBFC1BC")]
		public static extern float HelmGetParameterValue(int channel, int paramIndex);

		[PreserveSig]
		[Token(Token = "0x6001C1B")]
		[Address(RVA = "0xBFB7FC", Offset = "0xBFB7FC", VA = "0xBFB7FC")]
		public static extern bool HelmSetParameterValue(int channel, int paramIndex, float newValue);

		[PreserveSig]
		[Token(Token = "0x6001C1C")]
		[Address(RVA = "0xBFC248", Offset = "0xBFC248", VA = "0xBFC248")]
		public static extern float HelmGetParameterPercent(int channel, int paramIndex);

		[PreserveSig]
		[Token(Token = "0x6001C1D")]
		[Address(RVA = "0xBFC2E4", Offset = "0xBFC2E4", VA = "0xBFC2E4")]
		public static extern bool HelmSetParameterPercent(int channel, int paramIndex, float newPercent);

		[PreserveSig]
		[Token(Token = "0x6001C1E")]
		[Address(RVA = "0xBFB0D8", Offset = "0xBFB0D8", VA = "0xBFB0D8")]
		public static extern bool HelmSilence(int channel, bool silent);

		[PreserveSig]
		[Token(Token = "0x6001C1F")]
		[Address(RVA = "0xBFB190", Offset = "0xBFB190", VA = "0xBFB190")]
		public static extern bool HelmGetBufferData(int channel, float[] buffer, int samples, int numAudioChannels);

		[PreserveSig]
		[Token(Token = "0x6001C20")]
		[Address(RVA = "0xBFA478", Offset = "0xBFA478", VA = "0xBFA478")]
		public static extern void SetBpm(float bpm);

		[PreserveSig]
		[Token(Token = "0x6001C21")]
		[Address(RVA = "0xBFFBE4", Offset = "0xBFFBE4", VA = "0xBFFBE4")]
		public static extern IntPtr CreateSequencer();

		[PreserveSig]
		[Token(Token = "0x6001C22")]
		[Address(RVA = "0xBFFCA8", Offset = "0xBFFCA8", VA = "0xBFFCA8")]
		public static extern void DeleteSequencer(IntPtr sequencer);

		[PreserveSig]
		[Token(Token = "0x6001C23")]
		[Address(RVA = "0xC00588", Offset = "0xC00588", VA = "0xC00588")]
		public static extern void EnableSequencer(IntPtr sequencer, bool enable);

		[PreserveSig]
		[Token(Token = "0x6001C24")]
		[Address(RVA = "0xC001DC", Offset = "0xC001DC", VA = "0xC001DC")]
		public static extern void ChangeSequencerLength(IntPtr sequencer, float length);

		[PreserveSig]
		[Token(Token = "0x6001C25")]
		[Address(RVA = "0xC00268", Offset = "0xC00268", VA = "0xC00268")]
		public static extern void LoopSequencer(IntPtr sequencer, bool loop);

		[PreserveSig]
		[Token(Token = "0x6001C26")]
		[Address(RVA = "0xC00150", Offset = "0xC00150", VA = "0xC00150")]
		public static extern bool ChangeSequencerChannel(IntPtr sequencer, int channel);

		[PreserveSig]
		[Token(Token = "0x6001C27")]
		[Address(RVA = "0xC00B7C", Offset = "0xC00B7C", VA = "0xC00B7C")]
		public static extern void SetSequencerStart(IntPtr sequencer, double startBeat);

		[PreserveSig]
		[Token(Token = "0x6001C28")]
		[Address(RVA = "0xC01440", Offset = "0xC01440", VA = "0xC01440")]
		public static extern IntPtr CreateNote(IntPtr sequencer, int note, float velocity, float start, float end);

		[PreserveSig]
		[Token(Token = "0x6001C29")]
		[Address(RVA = "0xC014EC", Offset = "0xC014EC", VA = "0xC014EC")]
		public static extern IntPtr DeleteNote(IntPtr sequencer, IntPtr note);

		[PreserveSig]
		[Token(Token = "0x6001C2A")]
		[Address(RVA = "0xC01570", Offset = "0xC01570", VA = "0xC01570")]
		public static extern IntPtr ChangeNoteStart(IntPtr sequencer, IntPtr note, float newStart);

		[PreserveSig]
		[Token(Token = "0x6001C2B")]
		[Address(RVA = "0xC01600", Offset = "0xC01600", VA = "0xC01600")]
		public static extern IntPtr ChangeNoteEnd(IntPtr sequencer, IntPtr note, float newEnd);

		[PreserveSig]
		[Token(Token = "0x6001C2C")]
		[Address(RVA = "0xC01694", Offset = "0xC01694", VA = "0xC01694")]
		public static extern IntPtr ChangeNoteValues(IntPtr sequencer, IntPtr note, int newMidiKey, float newStart, float newEnd, float newVelocity);

		[PreserveSig]
		[Token(Token = "0x6001C2D")]
		[Address(RVA = "0xC01750", Offset = "0xC01750", VA = "0xC01750")]
		public static extern IntPtr ChangeNoteKey(IntPtr sequencer, IntPtr note, int key);

		[PreserveSig]
		[Token(Token = "0x6001C2E")]
		[Address(RVA = "0xC017E4", Offset = "0xC017E4", VA = "0xC017E4")]
		public static extern IntPtr ChangeNoteVelocity(IntPtr note, float velocity);

		[PreserveSig]
		[Token(Token = "0x6001C2F")]
		[Address(RVA = "0xBFA4F0", Offset = "0xBFA4F0", VA = "0xBFA4F0")]
		public static extern void SetBeatTime(double time);

		[PreserveSig]
		[Token(Token = "0x6001C30")]
		[Address(RVA = "0xBFA3F4", Offset = "0xBFA3F4", VA = "0xBFA3F4")]
		public static extern void Pause(bool pause);
	}
	[Serializable]
	[Token(Token = "0x2000548")]
	public class Note : ISerializationCallbackReceiver
	{
		[Token(Token = "0x2000549")]
		public delegate void NoteAction(Note note);

		[Token(Token = "0x4001BEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private int note_;

		[Token(Token = "0x4001BF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private float start_;

		[Token(Token = "0x4001BF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private float end_;

		[Token(Token = "0x4001BF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		private float velocity_;

		[Token(Token = "0x4001BF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Sequencer parent;

		[Token(Token = "0x4001BF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private IntPtr reference;

		[Token(Token = "0x1700028D")]
		public int note
		{
			[Token(Token = "0x6001C35")]
			[Address(RVA = "0xC01AE0", Offset = "0xC01AE0", VA = "0xC01AE0")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001C36")]
			[Address(RVA = "0xC01AE8", Offset = "0xC01AE8", VA = "0xC01AE8")]
			set
			{
			}
		}

		[Token(Token = "0x1700028E")]
		public float start
		{
			[Token(Token = "0x6001C37")]
			[Address(RVA = "0xC01D58", Offset = "0xC01D58", VA = "0xC01D58")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001C38")]
			[Address(RVA = "0xC01D60", Offset = "0xC01D60", VA = "0xC01D60")]
			set
			{
			}
		}

		[Token(Token = "0x1700028F")]
		public float end
		{
			[Token(Token = "0x6001C39")]
			[Address(RVA = "0xC01EE0", Offset = "0xC01EE0", VA = "0xC01EE0")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001C3A")]
			[Address(RVA = "0xBF9828", Offset = "0xBF9828", VA = "0xBF9828")]
			set
			{
			}
		}

		[Token(Token = "0x17000290")]
		public float velocity
		{
			[Token(Token = "0x6001C3B")]
			[Address(RVA = "0xC01F8C", Offset = "0xC01F8C", VA = "0xC01F8C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001C3C")]
			[Address(RVA = "0xC01F94", Offset = "0xC01F94", VA = "0xC01F94")]
			set
			{
			}
		}

		[Token(Token = "0x140000A2")]
		public event NoteAction OnNoteOn
		{
			[Token(Token = "0x6001C31")]
			[Address(RVA = "0xC01870", Offset = "0xC01870", VA = "0xC01870")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6001C32")]
			[Address(RVA = "0xC0190C", Offset = "0xC0190C", VA = "0xC0190C")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x140000A3")]
		public event NoteAction OnNoteOff
		{
			[Token(Token = "0x6001C33")]
			[Address(RVA = "0xC019A8", Offset = "0xC019A8", VA = "0xC019A8")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6001C34")]
			[Address(RVA = "0xC01A44", Offset = "0xC01A44", VA = "0xC01A44")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x6001C3D")]
		[Address(RVA = "0xC01FD8", Offset = "0xC01FD8", VA = "0xC01FD8", Slot = "5")]
		public void OnAfterDeserialize()
		{
		}

		[Token(Token = "0x6001C3E")]
		[Address(RVA = "0xC01FDC", Offset = "0xC01FDC", VA = "0xC01FDC", Slot = "4")]
		public void OnBeforeSerialize()
		{
		}

		[Token(Token = "0x6001C3F")]
		[Address(RVA = "0xC01FE0", Offset = "0xC01FE0", VA = "0xC01FE0")]
		private void CopySettingsToNative()
		{
		}

		[Token(Token = "0x6001C40")]
		[Address(RVA = "0xC02038", Offset = "0xC02038", VA = "0xC02038")]
		private bool HasNativeNote()
		{
			return default(bool);
		}

		[Token(Token = "0x6001C41")]
		[Address(RVA = "0xC0207C", Offset = "0xC0207C", VA = "0xC0207C")]
		private bool HasNativeSequencer()
		{
			return default(bool);
		}

		[Token(Token = "0x6001C42")]
		[Address(RVA = "0xC01BBC", Offset = "0xC01BBC", VA = "0xC01BBC")]
		private bool FullyNative()
		{
			return default(bool);
		}

		[Token(Token = "0x6001C43")]
		[Address(RVA = "0xC02124", Offset = "0xC02124", VA = "0xC02124")]
		public void TriggerNoteOnEvent()
		{
		}

		[Token(Token = "0x6001C44")]
		[Address(RVA = "0xC02144", Offset = "0xC02144", VA = "0xC02144")]
		public void TriggerNoteOffEvent()
		{
		}

		[Token(Token = "0x6001C45")]
		[Address(RVA = "0xC002EC", Offset = "0xC002EC", VA = "0xC002EC")]
		public void TryCreate()
		{
		}

		[Token(Token = "0x6001C46")]
		[Address(RVA = "0xC02164", Offset = "0xC02164", VA = "0xC02164")]
		public void TryDelete()
		{
		}

		[Token(Token = "0x6001C47")]
		[Address(RVA = "0xC021DC", Offset = "0xC021DC", VA = "0xC021DC")]
		public bool OverlapsRange(float rangeStart, float rangeEnd)
		{
			return default(bool);
		}

		[Token(Token = "0x6001C48")]
		[Address(RVA = "0xC022A4", Offset = "0xC022A4", VA = "0xC022A4")]
		public bool InsideRange(float rangeStart, float rangeEnd)
		{
			return default(bool);
		}

		[Token(Token = "0x6001C49")]
		[Address(RVA = "0xC022C8", Offset = "0xC022C8", VA = "0xC022C8")]
		public void RemoveRange(float rangeStart, float rangeEnd)
		{
		}

		[Token(Token = "0x6001C4A")]
		[Address(RVA = "0xC02320", Offset = "0xC02320", VA = "0xC02320")]
		public Note()
		{
		}
	}
	[Token(Token = "0x200054A")]
	public interface NoteHandler
	{
		[Token(Token = "0x6001C4F")]
		void AllNotesOff();

		[Token(Token = "0x6001C50")]
		void NoteOn(int note, float velocity = 1f);

		[Token(Token = "0x6001C51")]
		void NoteOff(int note);
	}
	[Serializable]
	[Token(Token = "0x200054B")]
	public class NoteRow : ISerializationCallbackReceiver
	{
		[Token(Token = "0x4001BF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public List<Note> notes;

		[Token(Token = "0x4001BF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private List<Note> oldNotes;

		[Token(Token = "0x6001C52")]
		[Address(RVA = "0xC02494", Offset = "0xC02494", VA = "0xC02494", Slot = "4")]
		public void OnBeforeSerialize()
		{
		}

		[Token(Token = "0x6001C53")]
		[Address(RVA = "0xC02510", Offset = "0xC02510", VA = "0xC02510", Slot = "5")]
		public void OnAfterDeserialize()
		{
		}

		[Token(Token = "0x6001C54")]
		[Address(RVA = "0xC02740", Offset = "0xC02740", VA = "0xC02740")]
		public NoteRow()
		{
		}
	}
	[Token(Token = "0x200054C")]
	[HelpURL("http://tytel.org/audiohelm/manual/class_audio_helm_1_1_sampler.html")]
	[AddComponentMenu("Audio Helm/Sampler")]
	[RequireComponent(typeof(AudioSource))]
	public class Sampler : MonoBehaviour, NoteHandler
	{
		[Token(Token = "0x200054D")]
		private class ActiveNote
		{
			[Token(Token = "0x4001BFE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int note;

			[Token(Token = "0x4001BFF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public List<AudioSource> audioSources;

			[Token(Token = "0x4001C00")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public double startTime;

			[Token(Token = "0x6001C6B")]
			[Address(RVA = "0xC038F8", Offset = "0xC038F8", VA = "0xC038F8")]
			public ActiveNote(int n, List<AudioSource> sources, double start)
			{
			}
		}

		[Token(Token = "0x200054E")]
		[CompilerGenerated]
		private sealed class <TurnVoiceOffInSeconds>d__24 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001C01")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001C02")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001C03")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float seconds;

			[Token(Token = "0x4001C04")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Sampler <>4__this;

			[Token(Token = "0x4001C05")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public int note;

			[Token(Token = "0x17000292")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001C6F")]
				[Address(RVA = "0xC041DC", Offset = "0xC041DC", VA = "0xC041DC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000293")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001C71")]
				[Address(RVA = "0xC04224", Offset = "0xC04224", VA = "0xC04224", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001C6C")]
			[Address(RVA = "0xC035F0", Offset = "0xC035F0", VA = "0xC035F0")]
			[DebuggerHidden]
			public <TurnVoiceOffInSeconds>d__24(int <>1__state)
			{
			}

			[Token(Token = "0x6001C6D")]
			[Address(RVA = "0xC04128", Offset = "0xC04128", VA = "0xC04128", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001C6E")]
			[Address(RVA = "0xC0412C", Offset = "0xC0412C", VA = "0xC0412C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001C70")]
			[Address(RVA = "0xC041E4", Offset = "0xC041E4", VA = "0xC041E4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001BF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<Keyzone> keyzones;

		[Token(Token = "0x4001BF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[Tooltip("How much the velocity of a note on event affects the volume of the samples. 0.0 for no effect and 1.0 for full effect")]
		public float velocityTracking;

		[Token(Token = "0x4001BF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[Tooltip("Total number of concurrently playing sounds from this Sampler (polyphony). Increase this if your voices are cutting out unexpectedly.")]
		public int numVoices;

		[Token(Token = "0x4001BFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		[Tooltip("Does a voice silence when it gets a note off event?")]
		private bool useNoteOff_;

		[Token(Token = "0x4001BFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private int audioIndex;

		[Token(Token = "0x4001BFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private readonly List<ActiveNote> activeNotes;

		[Token(Token = "0x4001BFD")]
		private const double endEarlyTime = 0.01;

		[Token(Token = "0x17000291")]
		public bool useNoteOff
		{
			[Token(Token = "0x6001C55")]
			[Address(RVA = "0xC027E0", Offset = "0xC027E0", VA = "0xC027E0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001C56")]
			[Address(RVA = "0xC027E8", Offset = "0xC027E8", VA = "0xC027E8")]
			set
			{
			}
		}

		[Token(Token = "0x6001C57")]
		[Address(RVA = "0xC028D4", Offset = "0xC028D4", VA = "0xC028D4")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001C58")]
		[Address(RVA = "0xC029EC", Offset = "0xC029EC", VA = "0xC029EC")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001C59")]
		[Address(RVA = "0xC029F0", Offset = "0xC029F0", VA = "0xC029F0")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001C5A")]
		[Address(RVA = "0xC029F4", Offset = "0xC029F4", VA = "0xC029F4")]
		public Keyzone AddKeyzone()
		{
			return null;
		}

		[Token(Token = "0x6001C5B")]
		[Address(RVA = "0xC02ADC", Offset = "0xC02ADC", VA = "0xC02ADC")]
		public int RemoveKeyzone(Keyzone keyzone)
		{
			return default(int);
		}

		[Token(Token = "0x6001C5C")]
		[Address(RVA = "0xC02B6C", Offset = "0xC02B6C", VA = "0xC02B6C")]
		private AudioSource GetNextAudioSource()
		{
			return null;
		}

		[Token(Token = "0x6001C5D")]
		[Address(RVA = "0xC02C3C", Offset = "0xC02C3C", VA = "0xC02C3C")]
		private void PrepNote(AudioSource audioSource, int note, float velocity)
		{
		}

		[Token(Token = "0x6001C5E")]
		[Address(RVA = "0xC02D10", Offset = "0xC02D10", VA = "0xC02D10")]
		private void PrepNote(AudioSource audioSource, Keyzone keyzone, int note, float velocity)
		{
		}

		[Token(Token = "0x6001C5F")]
		[Address(RVA = "0xC02E00", Offset = "0xC02E00", VA = "0xC02E00")]
		private List<Keyzone> GetValidKeyzones(int note, float velocity = 1f)
		{
			return null;
		}

		[Token(Token = "0x6001C60")]
		[Address(RVA = "0xC03048", Offset = "0xC03048", VA = "0xC03048")]
		private List<AudioSource> GetPreppedAudioSources(int note, float velocity)
		{
			return null;
		}

		[Token(Token = "0x6001C61")]
		[Address(RVA = "0xC03288", Offset = "0xC03288", VA = "0xC03288")]
		public int GetMinKey()
		{
			return default(int);
		}

		[Token(Token = "0x6001C62")]
		[Address(RVA = "0xC033F8", Offset = "0xC033F8", VA = "0xC033F8")]
		public int GetMaxKey()
		{
			return default(int);
		}

		[Token(Token = "0x6001C63")]
		[Address(RVA = "0xC027FC", Offset = "0xC027FC", VA = "0xC027FC", Slot = "4")]
		public void AllNotesOff()
		{
		}

		[Token(Token = "0x6001C64")]
		[Address(RVA = "0xC03568", Offset = "0xC03568", VA = "0xC03568")]
		[IteratorStateMachine(typeof(<TurnVoiceOffInSeconds>d__24))]
		private IEnumerator TurnVoiceOffInSeconds(int note, float seconds)
		{
			return null;
		}

		[Token(Token = "0x6001C65")]
		[Address(RVA = "0xC03618", Offset = "0xC03618", VA = "0xC03618", Slot = "5")]
		public void NoteOn(int note, float velocity = 1f)
		{
		}

		[Token(Token = "0x6001C66")]
		[Address(RVA = "0xC03938", Offset = "0xC03938", VA = "0xC03938")]
		public void NoteOnScheduled(int note, float velocity, double timeToStart, double timeToEnd)
		{
		}

		[Token(Token = "0x6001C67")]
		[Address(RVA = "0xC03C90", Offset = "0xC03C90", VA = "0xC03C90")]
		private ActiveNote FindActiveNote(int note)
		{
			return null;
		}

		[Token(Token = "0x6001C68")]
		[Address(RVA = "0xC03DF4", Offset = "0xC03DF4", VA = "0xC03DF4", Slot = "6")]
		public void NoteOff(int note)
		{
		}

		[Token(Token = "0x6001C69")]
		[Address(RVA = "0xC03E04", Offset = "0xC03E04", VA = "0xC03E04")]
		private void DoNoteOff(int note)
		{
		}

		[Token(Token = "0x6001C6A")]
		[Address(RVA = "0xC03FA8", Offset = "0xC03FA8", VA = "0xC03FA8")]
		public Sampler()
		{
		}
	}
	[Token(Token = "0x200054F")]
	[HelpURL("http://tytel.org/audiohelm/manual/class_audio_helm_1_1_sample_sequencer.html")]
	[RequireComponent(typeof(Sampler))]
	[AddComponentMenu("Audio Helm/Sample Sequencer")]
	public class SampleSequencer : Sequencer
	{
		[Token(Token = "0x4001C06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private double lastWindowTime;

		[Token(Token = "0x4001C07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private int numCycles;

		[Token(Token = "0x4001C08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		private bool waitTillNextCycle;

		[Token(Token = "0x4001C09")]
		private const float lookaheadTime = 0.1f;

		[Token(Token = "0x6001C72")]
		[Address(RVA = "0xC0422C", Offset = "0xC0422C", VA = "0xC0422C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001C73")]
		[Address(RVA = "0xC04254", Offset = "0xC04254", VA = "0xC04254")]
		private void Start()
		{
		}

		[Token(Token = "0x6001C74")]
		[Address(RVA = "0xC04334", Offset = "0xC04334", VA = "0xC04334")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001C75")]
		[Address(RVA = "0xC04340", Offset = "0xC04340", VA = "0xC04340", Slot = "13")]
		protected override void OnEnable()
		{
		}

		[Token(Token = "0x6001C76")]
		[Address(RVA = "0xC04384", Offset = "0xC04384", VA = "0xC04384", Slot = "14")]
		protected override void OnDisable()
		{
		}

		[Token(Token = "0x6001C77")]
		[Address(RVA = "0xC043AC", Offset = "0xC043AC", VA = "0xC043AC", Slot = "9")]
		public override void AllNotesOff()
		{
		}

		[Token(Token = "0x6001C78")]
		[Address(RVA = "0xC04408", Offset = "0xC04408", VA = "0xC04408", Slot = "10")]
		public override void NoteOn(int note, float velocity = 1f)
		{
		}

		[Token(Token = "0x6001C79")]
		[Address(RVA = "0xC0447C", Offset = "0xC0447C", VA = "0xC0447C", Slot = "11")]
		public override void NoteOff(int note)
		{
		}

		[Token(Token = "0x6001C7A")]
		[Address(RVA = "0xC044F8", Offset = "0xC044F8", VA = "0xC044F8")]
		private void EnableComponent()
		{
		}

		[Token(Token = "0x6001C7B")]
		[Address(RVA = "0xC04504", Offset = "0xC04504", VA = "0xC04504", Slot = "12")]
		public override void StartOnNextCycle()
		{
		}

		[Token(Token = "0x6001C7C")]
		[Address(RVA = "0xC04564", Offset = "0xC04564", VA = "0xC04564")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6001C7D")]
		[Address(RVA = "0xC04568", Offset = "0xC04568", VA = "0xC04568")]
		private void DoUpdate()
		{
		}

		[Token(Token = "0x6001C7E")]
		[Address(RVA = "0xC04938", Offset = "0xC04938", VA = "0xC04938")]
		public SampleSequencer()
		{
		}
	}
	[Token(Token = "0x2000550")]
	public abstract class Sequencer : MonoBehaviour, NoteHandler, ISerializationCallbackReceiver
	{
		[Token(Token = "0x2000551")]
		public delegate void NoteAction(Note note);

		[Token(Token = "0x2000552")]
		public delegate void BeatAction(int index);

		[Serializable]
		[Token(Token = "0x2000553")]
		public class NoteEvent : UnityEvent<Note>
		{
			[Token(Token = "0x6001CBA")]
			[Address(RVA = "0xC06610", Offset = "0xC06610", VA = "0xC06610")]
			public NoteEvent()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000554")]
		public class BeatEvent : UnityEvent<int>
		{
			[Token(Token = "0x6001CBB")]
			[Address(RVA = "0xC06658", Offset = "0xC06658", VA = "0xC06658")]
			public BeatEvent()
			{
			}
		}

		[Token(Token = "0x2000555")]
		private class NoteComparer : IComparer<Note>
		{
			[Token(Token = "0x6001CBC")]
			[Address(RVA = "0xC066A0", Offset = "0xC066A0", VA = "0xC066A0", Slot = "4")]
			public int Compare(Note left, Note right)
			{
				return default(int);
			}

			[Token(Token = "0x6001CBD")]
			[Address(RVA = "0xC0632C", Offset = "0xC0632C", VA = "0xC0632C")]
			public NoteComparer()
			{
			}
		}

		[Token(Token = "0x2000556")]
		private class NotePositionComparer : IComparer<NotePosition>
		{
			[Token(Token = "0x6001CBE")]
			[Address(RVA = "0xC066D4", Offset = "0xC066D4", VA = "0xC066D4", Slot = "4")]
			public int Compare(NotePosition left, NotePosition right)
			{
				return default(int);
			}

			[Token(Token = "0x6001CBF")]
			[Address(RVA = "0xC06334", Offset = "0xC06334", VA = "0xC06334")]
			public NotePositionComparer()
			{
			}
		}

		[Token(Token = "0x2000557")]
		private struct NotePosition
		{
			[Token(Token = "0x4001C20")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public float position_;

			[Token(Token = "0x4001C21")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public int note_;

			[Token(Token = "0x6001CC0")]
			[Address(RVA = "0xC04D70", Offset = "0xC04D70", VA = "0xC04D70")]
			public NotePosition(float position, int note)
			{
			}
		}

		[Token(Token = "0x2000558")]
		public enum Division
		{
			[Token(Token = "0x4001C23")]
			kEighth,
			[Token(Token = "0x4001C24")]
			kSixteenth,
			[Token(Token = "0x4001C25")]
			kTriplet,
			[Token(Token = "0x4001C26")]
			kThirtySecond
		}

		[Token(Token = "0x4001C0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[Tooltip("Triggered when note on happens. Passes the AudioHelm.Note object.")]
		public NoteEvent noteOnEvent;

		[Token(Token = "0x4001C0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[Tooltip("Triggered when note off happens. Passes the AudioHelm.Note object.")]
		public NoteEvent noteOffEvent;

		[Token(Token = "0x4001C0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[Tooltip("Triggered when a beat happens. Passes the index of the division starting at 0.")]
		public BeatEvent beatEvent;

		[Token(Token = "0x4001C10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private List<Note> activeNotes;

		[Token(Token = "0x4001C11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("The number of sixteenth notes in the sequencer.")]
		public int length;

		[Token(Token = "0x4001C12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public int currentIndex;

		[Token(Token = "0x4001C13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public bool loop;

		[Token(Token = "0x4001C14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		protected double beatTime;

		[Token(Token = "0x4001C15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		protected bool paused;

		[Token(Token = "0x4001C16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public NoteRow[] allNotes;

		[Token(Token = "0x4001C17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public Vector2 scrollPosition;

		[Token(Token = "0x4001C18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[Tooltip("If enabled, will scroll with playhead while sequencer is playing.")]
		public bool autoScroll;

		[Token(Token = "0x4001C19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		[Tooltip("How often a bar or a division is placed in the sequencer inspector view.")]
		public Division division;

		[Token(Token = "0x4001C1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[Tooltip("How zoomed into the inspector sequencer we are. [0.0, 1.0]")]
		public float zoom;

		[Token(Token = "0x4001C1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static NoteComparer noteComparer;

		[Token(Token = "0x4001C1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static NotePositionComparer notePositionComparer;

		[Token(Token = "0x4001C1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private SortedList<NotePosition, Note> sortedNoteOns;

		[Token(Token = "0x4001C1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private SortedList<NotePosition, Note> sortedNoteOffs;

		[Token(Token = "0x4001C1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private float lastSequencerPosition;

		[Token(Token = "0x140000A4")]
		public event NoteAction OnNoteOn
		{
			[Token(Token = "0x6001C7F")]
			[Address(RVA = "0xC049A0", Offset = "0xC049A0", VA = "0xC049A0")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6001C80")]
			[Address(RVA = "0xC04A3C", Offset = "0xC04A3C", VA = "0xC04A3C")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x140000A5")]
		public event NoteAction OnNoteOff
		{
			[Token(Token = "0x6001C81")]
			[Address(RVA = "0xC04AD8", Offset = "0xC04AD8", VA = "0xC04AD8")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6001C82")]
			[Address(RVA = "0xC04B74", Offset = "0xC04B74", VA = "0xC04B74")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x140000A6")]
		public event BeatAction OnBeat
		{
			[Token(Token = "0x6001C83")]
			[Address(RVA = "0xC04C10", Offset = "0xC04C10", VA = "0xC04C10")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6001C84")]
			[Address(RVA = "0xC04CAC", Offset = "0xC04CAC", VA = "0xC04CAC")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x6001C85")]
		[Address(RVA = "0xC007B4", Offset = "0xC007B4", VA = "0xC007B4", Slot = "9")]
		public virtual void AllNotesOff()
		{
		}

		[Token(Token = "0x6001C86")]
		public abstract void NoteOn(int note, float velocity = 1f);

		[Token(Token = "0x6001C87")]
		public abstract void NoteOff(int note);

		[Token(Token = "0x6001C88")]
		[Address(RVA = "0xC04D48", Offset = "0xC04D48", VA = "0xC04D48")]
		[Obsolete("StartScheduled is deprecated. Use AudioHelmClock.StartScheduled instead.")]
		public void StartScheduled(double dspTime)
		{
		}

		[Token(Token = "0x6001C89")]
		public abstract void StartOnNextCycle();

		[Token(Token = "0x6001C8A")]
		[Address(RVA = "0xC04D4C", Offset = "0xC04D4C", VA = "0xC04D4C", Slot = "7")]
		public void OnBeforeSerialize()
		{
		}

		[Token(Token = "0x6001C8B")]
		[Address(RVA = "0xC04D50", Offset = "0xC04D50", VA = "0xC04D50", Slot = "8")]
		public void OnAfterDeserialize()
		{
		}

		[Token(Token = "0x6001C8C")]
		[Address(RVA = "0xC00420", Offset = "0xC00420", VA = "0xC00420", Slot = "13")]
		protected virtual void OnEnable()
		{
		}

		[Token(Token = "0x6001C8D")]
		[Address(RVA = "0xC00680", Offset = "0xC00680", VA = "0xC00680", Slot = "14")]
		protected virtual void OnDisable()
		{
		}

		[Token(Token = "0x6001C8E")]
		[Address(RVA = "0xC04D54", Offset = "0xC04D54", VA = "0xC04D54")]
		private NotePosition NoteOnPosition(Note note)
		{
			return default(NotePosition);
		}

		[Token(Token = "0x6001C8F")]
		[Address(RVA = "0xC04D7C", Offset = "0xC04D7C", VA = "0xC04D7C")]
		private NotePosition NoteOffPosition(Note note)
		{
			return default(NotePosition);
		}

		[Token(Token = "0x6001C90")]
		[Address(RVA = "0xC04D9C", Offset = "0xC04D9C", VA = "0xC04D9C")]
		protected void RemoveSortedNoteEvents(Note note)
		{
		}

		[Token(Token = "0x6001C91")]
		[Address(RVA = "0xC04E18", Offset = "0xC04E18", VA = "0xC04E18")]
		protected void AddSortedNoteEvents(Note note)
		{
		}

		[Token(Token = "0x6001C92")]
		[Address(RVA = "0xC04F00", Offset = "0xC04F00", VA = "0xC04F00", Slot = "15")]
		public virtual IntPtr Reference()
		{
			return default(IntPtr);
		}

		[Token(Token = "0x6001C93")]
		[Address(RVA = "0xBFFF04", Offset = "0xBFFF04", VA = "0xBFFF04")]
		protected void InitNoteRows()
		{
		}

		[Token(Token = "0x6001C94")]
		[Address(RVA = "0xC04F30", Offset = "0xC04F30", VA = "0xC04F30")]
		public float GetDivisionLength()
		{
			return default(float);
		}

		[Token(Token = "0x6001C95")]
		[Address(RVA = "0xC01BE4", Offset = "0xC01BE4", VA = "0xC01BE4")]
		public void NotifyNoteKeyChanged(Note note, int oldKey)
		{
		}

		[Token(Token = "0x6001C96")]
		[Address(RVA = "0xC01E40", Offset = "0xC01E40", VA = "0xC01E40")]
		public void NotifyNoteStartChanged(Note note, float oldStart)
		{
		}

		[Token(Token = "0x6001C97")]
		[Address(RVA = "0xC01EE8", Offset = "0xC01EE8", VA = "0xC01EE8")]
		public void NotifyNoteEndChanged(Note note, float oldEnd)
		{
		}

		[Token(Token = "0x6001C98")]
		[Address(RVA = "0xC04F60", Offset = "0xC04F60", VA = "0xC04F60")]
		public void RemoveNote(Note note)
		{
		}

		[Token(Token = "0x6001C99")]
		[Address(RVA = "0xC05000", Offset = "0xC05000", VA = "0xC05000")]
		public bool NoteExistsInRange(int note, float start, float end)
		{
			return default(bool);
		}

		[Token(Token = "0x6001C9A")]
		[Address(RVA = "0xC0501C", Offset = "0xC0501C", VA = "0xC0501C")]
		public Note GetNoteInRange(int note, float start, float end, [Optional] Note ignore)
		{
			return null;
		}

		[Token(Token = "0x6001C9B")]
		[Address(RVA = "0xC051E4", Offset = "0xC051E4", VA = "0xC051E4")]
		public List<Note> GetAllNotes()
		{
			return null;
		}

		[Token(Token = "0x6001C9C")]
		[Address(RVA = "0xC04930", Offset = "0xC04930", VA = "0xC04930")]
		public List<Note> GetAllNoteOnsInRange(float start, float end)
		{
			return null;
		}

		[Token(Token = "0x6001C9D")]
		[Address(RVA = "0xC05528", Offset = "0xC05528", VA = "0xC05528")]
		public List<Note> GetAllNoteOffsInRange(float start, float end)
		{
			return null;
		}

		[Token(Token = "0x6001C9E")]
		[Address(RVA = "0xC05530", Offset = "0xC05530", VA = "0xC05530")]
		public void RemoveNotesInRange(int note, float start, float end)
		{
		}

		[Token(Token = "0x6001C9F")]
		[Address(RVA = "0xC05854", Offset = "0xC05854", VA = "0xC05854")]
		public void RemoveNotesContainedInRange(int note, float start, float end, [Optional] Note ignore)
		{
		}

		[Token(Token = "0x6001CA0")]
		[Address(RVA = "0xC05B84", Offset = "0xC05B84", VA = "0xC05B84")]
		public void ClampNotesInRange(int note, float start, float end, [Optional] Note ignore)
		{
		}

		[Token(Token = "0x6001CA1")]
		[Address(RVA = "0xBF95A0", Offset = "0xBF95A0", VA = "0xBF95A0")]
		public Note AddNote(int note, float start, float end, float velocity = 1f)
		{
			return null;
		}

		[Token(Token = "0x6001CA2")]
		[Address(RVA = "0xC05BE4", Offset = "0xC05BE4", VA = "0xC05BE4")]
		public void TransposeNotes(int transpose)
		{
		}

		[Token(Token = "0x6001CA3")]
		[Address(RVA = "0xC05D7C", Offset = "0xC05D7C", VA = "0xC05D7C")]
		private void ReadMidiData(MidiFile.MidiData midiData)
		{
		}

		[Token(Token = "0x6001CA4")]
		[Address(RVA = "0xC05EF4", Offset = "0xC05EF4", VA = "0xC05EF4")]
		public void ReadMidiFile(Stream midiStream)
		{
		}

		[Token(Token = "0x6001CA5")]
		[Address(RVA = "0xC05F10", Offset = "0xC05F10", VA = "0xC05F10")]
		public void ReadMidiFile(MidiFile midiFile)
		{
		}

		[Token(Token = "0x6001CA6")]
		[Address(RVA = "0xBF9374", Offset = "0xBF9374", VA = "0xBF9374")]
		public void Clear()
		{
		}

		[Token(Token = "0x6001CA7")]
		[Address(RVA = "0xC04298", Offset = "0xC04298", VA = "0xC04298")]
		public float GetSixteenthTime()
		{
			return default(float);
		}

		[Token(Token = "0x6001CA8")]
		[Address(RVA = "0xC00B6C", Offset = "0xC00B6C", VA = "0xC00B6C")]
		protected double GetSequencerTime()
		{
			return default(double);
		}

		[Token(Token = "0x6001CA9")]
		[Address(RVA = "0xC048E8", Offset = "0xC048E8", VA = "0xC048E8")]
		public double GetSequencerPosition()
		{
			return default(double);
		}

		[Token(Token = "0x6001CAA")]
		[Address(RVA = "0xC05288", Offset = "0xC05288", VA = "0xC05288")]
		private List<Note> GetAllNoteEventsInRange(float start, float end, SortedList<NotePosition, Note> events)
		{
			return null;
		}

		[Token(Token = "0x6001CAB")]
		[Address(RVA = "0xC05FA0", Offset = "0xC05FA0", VA = "0xC05FA0")]
		private void UpdateIndex()
		{
		}

		[Token(Token = "0x6001CAC")]
		[Address(RVA = "0xC00A38", Offset = "0xC00A38", VA = "0xC00A38")]
		protected void UpdateBeatTime()
		{
		}

		[Token(Token = "0x6001CAD")]
		[Address(RVA = "0xC060B4", Offset = "0xC060B4", VA = "0xC060B4")]
		private void SendNoteOff(Note note)
		{
		}

		[Token(Token = "0x6001CAE")]
		[Address(RVA = "0xC06170", Offset = "0xC06170", VA = "0xC06170")]
		private void SendNoteOn(Note note)
		{
		}

		[Token(Token = "0x6001CAF")]
		[Address(RVA = "0xC00D0C", Offset = "0xC00D0C", VA = "0xC00D0C")]
		protected void UpdatePosition()
		{
		}

		[Token(Token = "0x6001CB0")]
		[Address(RVA = "0xC01040", Offset = "0xC01040", VA = "0xC01040")]
		protected Sequencer()
		{
		}
	}
	[Token(Token = "0x2000559")]
	public enum CommonParam
	{
		[Token(Token = "0x4001C28")]
		kNone = 0,
		[Token(Token = "0x4001C29")]
		kFilterCutoff = 14,
		[Token(Token = "0x4001C2A")]
		kResonance = 85,
		[Token(Token = "0x4001C2B")]
		kFilterAttack = 25,
		[Token(Token = "0x4001C2C")]
		kFilterRelease = 28,
		[Token(Token = "0x4001C2D")]
		kFilterEnvelopeDepth = 27,
		[Token(Token = "0x4001C2E")]
		kFormantX = 38,
		[Token(Token = "0x4001C2F")]
		kFormantY = 39,
		[Token(Token = "0x4001C30")]
		kAmplitudeAttack = 1,
		[Token(Token = "0x4001C31")]
		kAmplitudeRelease = 4,
		[Token(Token = "0x4001C32")]
		kCrossMod = 13,
		[Token(Token = "0x4001C33")]
		kOsc1Tune = 61,
		[Token(Token = "0x4001C34")]
		kOsc2Tune = 67,
		[Token(Token = "0x4001C35")]
		kOsc1Transpose = 60,
		[Token(Token = "0x4001C36")]
		kOsc2Transpose = 66,
		[Token(Token = "0x4001C37")]
		kOsc1UnisonDetune = 62,
		[Token(Token = "0x4001C38")]
		kOsc2UnisonDetune = 68,
		[Token(Token = "0x4001C39")]
		kDelayFrequency = 17,
		[Token(Token = "0x4001C3A")]
		kDelayTempo = 20
	}
	[Token(Token = "0x200055A")]
	public enum Param
	{
		[Token(Token = "0x4001C3C")]
		kNone = 0,
		[Token(Token = "0x4001C3D")]
		kAmplitudeAttack = 1,
		[Token(Token = "0x4001C3E")]
		kAmplitudeDecay = 2,
		[Token(Token = "0x4001C3F")]
		kAmplitudeSustain = 3,
		[Token(Token = "0x4001C40")]
		kAmplitudeRelease = 4,
		[Token(Token = "0x4001C41")]
		kArpFrequency = 5,
		[Token(Token = "0x4001C42")]
		kArpGate = 6,
		[Token(Token = "0x4001C43")]
		kArpOctaves = 7,
		[Token(Token = "0x4001C44")]
		kArpOn = 8,
		[Token(Token = "0x4001C45")]
		kArpPattern = 9,
		[Token(Token = "0x4001C46")]
		kArpSync = 10,
		[Token(Token = "0x4001C47")]
		kArpTempo = 11,
		[Token(Token = "0x4001C48")]
		kCrossMod = 13,
		[Token(Token = "0x4001C49")]
		kFilterCutoff = 14,
		[Token(Token = "0x4001C4A")]
		kDelayDryWet = 15,
		[Token(Token = "0x4001C4B")]
		kDelayFeedback = 16,
		[Token(Token = "0x4001C4C")]
		kDelayFrequency = 17,
		[Token(Token = "0x4001C4D")]
		kDelayOn = 18,
		[Token(Token = "0x4001C4E")]
		kDelaySync = 19,
		[Token(Token = "0x4001C4F")]
		kDelayTempo = 20,
		[Token(Token = "0x4001C50")]
		kDistortionOn = 21,
		[Token(Token = "0x4001C51")]
		kDistortionType = 22,
		[Token(Token = "0x4001C52")]
		kDistortionDrive = 23,
		[Token(Token = "0x4001C53")]
		kDistortionMix = 24,
		[Token(Token = "0x4001C54")]
		kFilterAttack = 25,
		[Token(Token = "0x4001C55")]
		kFilterDecay = 26,
		[Token(Token = "0x4001C56")]
		kFilterEnvelopeDepth = 27,
		[Token(Token = "0x4001C57")]
		kFilterRelease = 28,
		[Token(Token = "0x4001C58")]
		kFilterSustain = 29,
		[Token(Token = "0x4001C59")]
		kFilterDrive = 31,
		[Token(Token = "0x4001C5A")]
		kFilterBlend = 32,
		[Token(Token = "0x4001C5B")]
		kFilterStyle = 34,
		[Token(Token = "0x4001C5C")]
		kFilterShelf = 35,
		[Token(Token = "0x4001C5D")]
		kFilterOn = 36,
		[Token(Token = "0x4001C5E")]
		kFormantOn = 37,
		[Token(Token = "0x4001C5F")]
		kFormantX = 38,
		[Token(Token = "0x4001C60")]
		kFormantY = 39,
		[Token(Token = "0x4001C61")]
		kKeytrack = 40,
		[Token(Token = "0x4001C62")]
		kLegato = 41,
		[Token(Token = "0x4001C63")]
		kModAttack = 42,
		[Token(Token = "0x4001C64")]
		kModDecay = 43,
		[Token(Token = "0x4001C65")]
		kModRelease = 44,
		[Token(Token = "0x4001C66")]
		kModSustain = 45,
		[Token(Token = "0x4001C67")]
		kMonoLfo1Amplitude = 46,
		[Token(Token = "0x4001C68")]
		kMonoLfo1Frequency = 47,
		[Token(Token = "0x4001C69")]
		kMonoLfo1Retrigger = 48,
		[Token(Token = "0x4001C6A")]
		kMonoLfo1Sync = 49,
		[Token(Token = "0x4001C6B")]
		kMonoLfo1Tempo = 50,
		[Token(Token = "0x4001C6C")]
		kMonoLfo1Waveform = 51,
		[Token(Token = "0x4001C6D")]
		kMonoLfo2Amplitude = 52,
		[Token(Token = "0x4001C6E")]
		kMonoLfo2Frequency = 53,
		[Token(Token = "0x4001C6F")]
		kMonoLfo2Retrigger = 54,
		[Token(Token = "0x4001C70")]
		kMonoLfo2Sync = 55,
		[Token(Token = "0x4001C71")]
		kMonoLfo2Tempo = 56,
		[Token(Token = "0x4001C72")]
		kMonoLfo2Waveform = 57,
		[Token(Token = "0x4001C73")]
		kNoiseVolume = 58,
		[Token(Token = "0x4001C74")]
		kNumSteps = 59,
		[Token(Token = "0x4001C75")]
		kOsc1Transpose = 60,
		[Token(Token = "0x4001C76")]
		kOsc1Tune = 61,
		[Token(Token = "0x4001C77")]
		kOsc1UnisonDetune = 62,
		[Token(Token = "0x4001C78")]
		kOsc1UnisonVoices = 63,
		[Token(Token = "0x4001C79")]
		kOsc1Volume = 64,
		[Token(Token = "0x4001C7A")]
		kOsc1Waveform = 65,
		[Token(Token = "0x4001C7B")]
		kOsc2Transpose = 66,
		[Token(Token = "0x4001C7C")]
		kOsc2Tune = 67,
		[Token(Token = "0x4001C7D")]
		kOsc2UnisonDetune = 68,
		[Token(Token = "0x4001C7E")]
		kOsc2UnisonVoices = 69,
		[Token(Token = "0x4001C7F")]
		kOsc2Volume = 70,
		[Token(Token = "0x4001C80")]
		kOsc2Waveform = 71,
		[Token(Token = "0x4001C81")]
		kOscFeedbackAmount = 72,
		[Token(Token = "0x4001C82")]
		kOscFeedbackTranspose = 73,
		[Token(Token = "0x4001C83")]
		kOscFeedbackTune = 74,
		[Token(Token = "0x4001C84")]
		kPitchBendRange = 76,
		[Token(Token = "0x4001C85")]
		kPolyLfoAmplitude = 77,
		[Token(Token = "0x4001C86")]
		kPolyLfoFrequency = 78,
		[Token(Token = "0x4001C87")]
		kPolyLfoSync = 79,
		[Token(Token = "0x4001C88")]
		kPolyLfoTempo = 80,
		[Token(Token = "0x4001C89")]
		kPolyLfoWaveform = 81,
		[Token(Token = "0x4001C8A")]
		kPolyphony = 82,
		[Token(Token = "0x4001C8B")]
		kPortamento = 83,
		[Token(Token = "0x4001C8C")]
		kPortamentoType = 84,
		[Token(Token = "0x4001C8D")]
		kResonance = 85,
		[Token(Token = "0x4001C8E")]
		kReverbDamping = 86,
		[Token(Token = "0x4001C8F")]
		kReverbDryWet = 87,
		[Token(Token = "0x4001C90")]
		kReverbFeedback = 88,
		[Token(Token = "0x4001C91")]
		kReverbOn = 89,
		[Token(Token = "0x4001C92")]
		kStepFrequency = 90,
		[Token(Token = "0x4001C93")]
		kStepSequencerRetrigger = 123,
		[Token(Token = "0x4001C94")]
		kStepSequencerSync = 124,
		[Token(Token = "0x4001C95")]
		kStepSequencerTempo = 125,
		[Token(Token = "0x4001C96")]
		kStepSmoothing = 126,
		[Token(Token = "0x4001C97")]
		kStutterFrequency = 127,
		[Token(Token = "0x4001C98")]
		kStutterOn = 128,
		[Token(Token = "0x4001C99")]
		kStutterResampleFrequency = 129,
		[Token(Token = "0x4001C9A")]
		kStutterResampleSync = 130,
		[Token(Token = "0x4001C9B")]
		kStutterResampleTempo = 131,
		[Token(Token = "0x4001C9C")]
		kStutterSoftness = 132,
		[Token(Token = "0x4001C9D")]
		kStutterSync = 133,
		[Token(Token = "0x4001C9E")]
		kStutterTempo = 134,
		[Token(Token = "0x4001C9F")]
		kSubShuffle = 135,
		[Token(Token = "0x4001CA0")]
		kSubOctave = 136,
		[Token(Token = "0x4001CA1")]
		kSubVolume = 137,
		[Token(Token = "0x4001CA2")]
		kSubWaveform = 138,
		[Token(Token = "0x4001CA3")]
		kOsc1UnisonHarmonize = 139,
		[Token(Token = "0x4001CA4")]
		kOsc2UnisonHarmonize = 140,
		[Token(Token = "0x4001CA5")]
		kVelocityTrack = 141,
		[Token(Token = "0x4001CA6")]
		kVolume = 142
	}
	[Token(Token = "0x200055B")]
	public static class Utils
	{
		[Token(Token = "0x4001CA7")]
		public const int kMidiSize = 128;

		[Token(Token = "0x4001CA8")]
		public const int kNotesPerOctave = 12;

		[Token(Token = "0x4001CA9")]
		public const int kMaxChannels = 16;

		[Token(Token = "0x4001CAA")]
		public const float kBpmToSixteenths = 1f / 15f;

		[Token(Token = "0x4001CAB")]
		public const double kSecondsPerMinute = 60.0;

		[Token(Token = "0x4001CAC")]
		public const double kSixteenthsPerBeat = 4.0;

		[Token(Token = "0x4001CAD")]
		public const int kMinOctave = -2;

		[Token(Token = "0x4001CAE")]
		public const int kMiddleC = 60;

		[Token(Token = "0x4001CAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static bool[] blackKeys;

		[Token(Token = "0x6001CC1")]
		[Address(RVA = "0xC06710", Offset = "0xC06710", VA = "0xC06710")]
		public static bool IsBlackKey(int key)
		{
			return default(bool);
		}

		[Token(Token = "0x6001CC2")]
		[Address(RVA = "0xC067AC", Offset = "0xC067AC", VA = "0xC067AC")]
		public static bool IsC(int key)
		{
			return default(bool);
		}

		[Token(Token = "0x6001CC3")]
		[Address(RVA = "0xC067D8", Offset = "0xC067D8", VA = "0xC067D8")]
		public static int GetOctave(int key)
		{
			return default(int);
		}

		[Token(Token = "0x6001CC4")]
		[Address(RVA = "0xC02D00", Offset = "0xC02D00", VA = "0xC02D00")]
		public static float MidiChangeToRatio(int midi)
		{
			return default(float);
		}

		[Token(Token = "0x6001CC5")]
		[Address(RVA = "0xC02274", Offset = "0xC02274", VA = "0xC02274")]
		public static bool RangesOverlap(float start, float end, float rangeStart, float rangeEnd)
		{
			return default(bool);
		}

		[Token(Token = "0x6001CC6")]
		[Address(RVA = "0xBFACC0", Offset = "0xBFACC0", VA = "0xBFACC0")]
		public static void InitAudioSource(AudioSource audio)
		{
		}

		[Token(Token = "0x6001CC7")]
		public static T CopyComponent<T>(T original, GameObject destination) where T : Component
		{
			return null;
		}
	}
}
namespace AmplitudeNS.MiniJSON
{
	[Token(Token = "0x200055C")]
	public static class Json
	{
		[Token(Token = "0x200055D")]
		private sealed class Parser : IDisposable
		{
			[Token(Token = "0x200055E")]
			private enum TOKEN
			{
				[Token(Token = "0x4001CB4")]
				NONE,
				[Token(Token = "0x4001CB5")]
				CURLY_OPEN,
				[Token(Token = "0x4001CB6")]
				CURLY_CLOSE,
				[Token(Token = "0x4001CB7")]
				SQUARED_OPEN,
				[Token(Token = "0x4001CB8")]
				SQUARED_CLOSE,
				[Token(Token = "0x4001CB9")]
				COLON,
				[Token(Token = "0x4001CBA")]
				COMMA,
				[Token(Token = "0x4001CBB")]
				STRING,
				[Token(Token = "0x4001CBC")]
				NUMBER,
				[Token(Token = "0x4001CBD")]
				TRUE,
				[Token(Token = "0x4001CBE")]
				FALSE,
				[Token(Token = "0x4001CBF")]
				NULL
			}

			[Token(Token = "0x4001CB0")]
			private const string WHITE_SPACE = " \t\n\r";

			[Token(Token = "0x4001CB1")]
			private const string WORD_BREAK = " \t\n\r{}[],:\"";

			[Token(Token = "0x4001CB2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private StringReader json;

			[Token(Token = "0x17000294")]
			private char PeekChar
			{
				[Token(Token = "0x6001CD5")]
				[Address(RVA = "0xC07538", Offset = "0xC07538", VA = "0xC07538")]
				get
				{
					return default(char);
				}
			}

			[Token(Token = "0x17000295")]
			private char NextChar
			{
				[Token(Token = "0x6001CD6")]
				[Address(RVA = "0xC0734C", Offset = "0xC0734C", VA = "0xC0734C")]
				get
				{
					return default(char);
				}
			}

			[Token(Token = "0x17000296")]
			private string NextWord
			{
				[Token(Token = "0x6001CD7")]
				[Address(RVA = "0xC073C4", Offset = "0xC073C4", VA = "0xC073C4")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000297")]
			private TOKEN NextToken
			{
				[Token(Token = "0x6001CD8")]
				[Address(RVA = "0xC06C90", Offset = "0xC06C90", VA = "0xC06C90")]
				get
				{
					return default(TOKEN);
				}
			}

			[Token(Token = "0x6001CCB")]
			[Address(RVA = "0xC06AAC", Offset = "0xC06AAC", VA = "0xC06AAC")]
			private Parser(string jsonString)
			{
			}

			[Token(Token = "0x6001CCC")]
			[Address(RVA = "0xC06898", Offset = "0xC06898", VA = "0xC06898")]
			public static object Parse(string jsonString)
			{
				return null;
			}

			[Token(Token = "0x6001CCD")]
			[Address(RVA = "0xC06B44", Offset = "0xC06B44", VA = "0xC06B44", Slot = "4")]
			public void Dispose()
			{
			}

			[Token(Token = "0x6001CCE")]
			[Address(RVA = "0xC06B6C", Offset = "0xC06B6C", VA = "0xC06B6C")]
			private Dictionary<string, object> ParseObject()
			{
				return null;
			}

			[Token(Token = "0x6001CCF")]
			[Address(RVA = "0xC07090", Offset = "0xC07090", VA = "0xC07090")]
			private List<object> ParseArray()
			{
				return null;
			}

			[Token(Token = "0x6001CD0")]
			[Address(RVA = "0xC06B28", Offset = "0xC06B28", VA = "0xC06B28")]
			private object ParseValue()
			{
				return null;
			}

			[Token(Token = "0x6001CD1")]
			[Address(RVA = "0xC071B4", Offset = "0xC071B4", VA = "0xC071B4")]
			private object ParseByToken(TOKEN token)
			{
				return null;
			}

			[Token(Token = "0x6001CD2")]
			[Address(RVA = "0xC06E54", Offset = "0xC06E54", VA = "0xC06E54")]
			private string ParseString()
			{
				return null;
			}

			[Token(Token = "0x6001CD3")]
			[Address(RVA = "0xC0729C", Offset = "0xC0729C", VA = "0xC0729C")]
			private object ParseNumber()
			{
				return null;
			}

			[Token(Token = "0x6001CD4")]
			[Address(RVA = "0xC0749C", Offset = "0xC0749C", VA = "0xC0749C")]
			private void EatWhitespace()
			{
			}
		}

		[Token(Token = "0x200055F")]
		private sealed class Serializer
		{
			[Token(Token = "0x4001CC0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private StringBuilder builder;

			[Token(Token = "0x6001CD9")]
			[Address(RVA = "0xC075B0", Offset = "0xC075B0", VA = "0xC075B0")]
			private Serializer()
			{
			}

			[Token(Token = "0x6001CDA")]
			[Address(RVA = "0xC06A38", Offset = "0xC06A38", VA = "0xC06A38")]
			public static string Serialize(object obj)
			{
				return null;
			}

			[Token(Token = "0x6001CDB")]
			[Address(RVA = "0xC0761C", Offset = "0xC0761C", VA = "0xC0761C")]
			private void SerializeValue(object value)
			{
			}

			[Token(Token = "0x6001CDC")]
			[Address(RVA = "0xC07DD4", Offset = "0xC07DD4", VA = "0xC07DD4")]
			private void SerializeObject(IDictionary obj)
			{
			}

			[Token(Token = "0x6001CDD")]
			[Address(RVA = "0xC07A74", Offset = "0xC07A74", VA = "0xC07A74")]
			private void SerializeArray(IList anArray)
			{
			}

			[Token(Token = "0x6001CDE")]
			[Address(RVA = "0xC077BC", Offset = "0xC077BC", VA = "0xC077BC")]
			private void SerializeString(string str)
			{
			}

			[Token(Token = "0x6001CDF")]
			[Address(RVA = "0xC08260", Offset = "0xC08260", VA = "0xC08260")]
			private void SerializeOther(object value)
			{
			}
		}

		[Token(Token = "0x6001CC9")]
		[Address(RVA = "0xC0688C", Offset = "0xC0688C", VA = "0xC0688C")]
		public static object Deserialize(string json)
		{
			return null;
		}

		[Token(Token = "0x6001CCA")]
		[Address(RVA = "0xC06A34", Offset = "0xC06A34", VA = "0xC06A34")]
		public static string Serialize(object obj)
		{
			return null;
		}
	}
}
namespace TFHC_Shader_Samples
{
	[Token(Token = "0x2000560")]
	public class highlightAnimated : MonoBehaviour
	{
		[Token(Token = "0x4001CC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Material mat;

		[Token(Token = "0x6001CE0")]
		[Address(RVA = "0xC08508", Offset = "0xC08508", VA = "0xC08508")]
		private void Start()
		{
		}

		[Token(Token = "0x6001CE1")]
		[Address(RVA = "0xC08568", Offset = "0xC08568", VA = "0xC08568")]
		private void OnMouseEnter()
		{
		}

		[Token(Token = "0x6001CE2")]
		[Address(RVA = "0xC085D8", Offset = "0xC085D8", VA = "0xC085D8")]
		private void OnMouseExit()
		{
		}

		[Token(Token = "0x6001CE3")]
		[Address(RVA = "0xC08570", Offset = "0xC08570", VA = "0xC08570")]
		private void switchhighlighted(bool highlighted)
		{
		}

		[Token(Token = "0x6001CE4")]
		[Address(RVA = "0xC085E0", Offset = "0xC085E0", VA = "0xC085E0")]
		public highlightAnimated()
		{
		}
	}
}
namespace TFHC_ForceShield_Shader_Sample
{
	[Token(Token = "0x2000561")]
	public class ForceShieldDestroyBall : MonoBehaviour
	{
		[Token(Token = "0x4001CC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float lifetime;

		[Token(Token = "0x6001CE5")]
		[Address(RVA = "0xC085E8", Offset = "0xC085E8", VA = "0xC085E8")]
		private void Start()
		{
		}

		[Token(Token = "0x6001CE6")]
		[Address(RVA = "0xC08664", Offset = "0xC08664", VA = "0xC08664")]
		public ForceShieldDestroyBall()
		{
		}
	}
	[Token(Token = "0x2000562")]
	public class ForceShieldImpactDetection : MonoBehaviour
	{
		[Token(Token = "0x4001CC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private float hitTime;

		[Token(Token = "0x4001CC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Material mat;

		[Token(Token = "0x6001CE7")]
		[Address(RVA = "0xC08674", Offset = "0xC08674", VA = "0xC08674")]
		private void Start()
		{
		}

		[Token(Token = "0x6001CE8")]
		[Address(RVA = "0xC086D4", Offset = "0xC086D4", VA = "0xC086D4")]
		private void Update()
		{
		}

		[Token(Token = "0x6001CE9")]
		[Address(RVA = "0xC08770", Offset = "0xC08770", VA = "0xC08770")]
		private void OnCollisionEnter(Collision collision)
		{
		}

		[Token(Token = "0x6001CEA")]
		[Address(RVA = "0xC088C0", Offset = "0xC088C0", VA = "0xC088C0")]
		public ForceShieldImpactDetection()
		{
		}
	}
	[Token(Token = "0x2000563")]
	public class ForceShieldShootBall : MonoBehaviour
	{
		[Token(Token = "0x4001CC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Rigidbody bullet;

		[Token(Token = "0x4001CC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform origshoot;

		[Token(Token = "0x4001CC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float speed;

		[Token(Token = "0x4001CC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float distance;

		[Token(Token = "0x6001CEB")]
		[Address(RVA = "0xC088C8", Offset = "0xC088C8", VA = "0xC088C8")]
		private void Update()
		{
		}

		[Token(Token = "0x6001CEC")]
		[Address(RVA = "0xC08ABC", Offset = "0xC08ABC", VA = "0xC08ABC")]
		public ForceShieldShootBall()
		{
		}
	}
}
namespace Rowhouse
{
	[Token(Token = "0x2000564")]
	[ExecuteInEditMode]
	public class Cuboid : MonoBehaviour
	{
		[Token(Token = "0x2000565")]
		public enum Origin
		{
			[Token(Token = "0x4001CDE")]
			corner,
			[Token(Token = "0x4001CDF")]
			topCenter,
			[Token(Token = "0x4001CE0")]
			leftSide
		}

		[Token(Token = "0x4001CC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float width;

		[Token(Token = "0x4001CCA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float depth;

		[Token(Token = "0x4001CCB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float height;

		[Token(Token = "0x4001CCC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float thickness;

		[Token(Token = "0x4001CCD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Origin origin;

		[Token(Token = "0x4001CCE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[Space(25f)]
		[SerializeField]
		private Transform l1;

		[Token(Token = "0x4001CCF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Transform l2;

		[Token(Token = "0x4001CD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Transform l3;

		[Token(Token = "0x4001CD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private Transform l4;

		[Token(Token = "0x4001CD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private Transform l5;

		[Token(Token = "0x4001CD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private Transform l6;

		[Token(Token = "0x4001CD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private Transform l7;

		[Token(Token = "0x4001CD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private Transform l8;

		[Token(Token = "0x4001CD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private Transform l9;

		[Token(Token = "0x4001CD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private Transform l10;

		[Token(Token = "0x4001CD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private Transform l11;

		[Token(Token = "0x4001CD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private Transform l12;

		[Token(Token = "0x4001CDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private Transform cube;

		[Token(Token = "0x4001CDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		private Renderer cubeRenderer;

		[Token(Token = "0x4001CDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		private Collider cubeCollider;

		[Token(Token = "0x17000298")]
		public Vector3 p1
		{
			[Token(Token = "0x6001CED")]
			[Address(RVA = "0xC08AD0", Offset = "0xC08AD0", VA = "0xC08AD0")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x17000299")]
		public Vector3 p2
		{
			[Token(Token = "0x6001CEE")]
			[Address(RVA = "0xC08AF0", Offset = "0xC08AF0", VA = "0xC08AF0")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x1700029A")]
		public Vector3 p3
		{
			[Token(Token = "0x6001CEF")]
			[Address(RVA = "0xC08B68", Offset = "0xC08B68", VA = "0xC08B68")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x1700029B")]
		public Vector3 p4
		{
			[Token(Token = "0x6001CF0")]
			[Address(RVA = "0xC08C30", Offset = "0xC08C30", VA = "0xC08C30")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x1700029C")]
		public Vector3 p5
		{
			[Token(Token = "0x6001CF1")]
			[Address(RVA = "0xC08CA8", Offset = "0xC08CA8", VA = "0xC08CA8")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x1700029D")]
		public Vector3 p6
		{
			[Token(Token = "0x6001CF2")]
			[Address(RVA = "0xC08D20", Offset = "0xC08D20", VA = "0xC08D20")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x1700029E")]
		public Vector3 p7
		{
			[Token(Token = "0x6001CF3")]
			[Address(RVA = "0xC08DE8", Offset = "0xC08DE8", VA = "0xC08DE8")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x1700029F")]
		public Vector3 p8
		{
			[Token(Token = "0x6001CF4")]
			[Address(RVA = "0xC08F0C", Offset = "0xC08F0C", VA = "0xC08F0C")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x6001CF5")]
		[Address(RVA = "0xC08FD4", Offset = "0xC08FD4", VA = "0xC08FD4")]
		private void Update()
		{
		}

		[Token(Token = "0x6001CF6")]
		[Address(RVA = "0xC0923C", Offset = "0xC0923C", VA = "0xC0923C")]
		private void DrawFromCorner()
		{
		}

		[Token(Token = "0x6001CF7")]
		[Address(RVA = "0xC09DD4", Offset = "0xC09DD4", VA = "0xC09DD4")]
		private void DrawFromTopCenter()
		{
		}

		[Token(Token = "0x6001CF8")]
		[Address(RVA = "0xC0AF68", Offset = "0xC0AF68", VA = "0xC0AF68")]
		private void DrawFromLeftSide()
		{
		}

		[Token(Token = "0x6001CF9")]
		[Address(RVA = "0xC0C348", Offset = "0xC0C348", VA = "0xC0C348")]
		public void SetLine(Vector3 corner, Vector3 right, float width)
		{
		}

		[Token(Token = "0x6001CFA")]
		[Address(RVA = "0xC0C3E4", Offset = "0xC0C3E4", VA = "0xC0C3E4")]
		public void SetSquare(Vector3 corner, Vector3 right, Vector3 fwd, float width, float depth)
		{
		}

		[Token(Token = "0x6001CFB")]
		[Address(RVA = "0xC0C4D4", Offset = "0xC0C4D4", VA = "0xC0C4D4")]
		public void SetCube(Vector3 corner, Vector3 right, Vector3 fwd, float width, float depth, float height)
		{
		}

		[Token(Token = "0x6001CFC")]
		[Address(RVA = "0xC0C5C8", Offset = "0xC0C5C8", VA = "0xC0C5C8")]
		public void SetCubeOld(Vector3 corner, Vector3 right, Vector3 up, float width, float depth, float height)
		{
		}

		[Token(Token = "0x6001CFD")]
		[Address(RVA = "0xC0C6B0", Offset = "0xC0C6B0", VA = "0xC0C6B0")]
		public void ShowFaces(bool visible)
		{
		}

		[Token(Token = "0x6001CFE")]
		[Address(RVA = "0xC0C6D0", Offset = "0xC0C6D0", VA = "0xC0C6D0")]
		public void SetCollider(bool enabled)
		{
		}

		[Token(Token = "0x6001CFF")]
		[Address(RVA = "0xC0C6F0", Offset = "0xC0C6F0", VA = "0xC0C6F0")]
		public Vector3 GetClosestCornerPos(Vector3 pos)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001D00")]
		[Address(RVA = "0xC0C1F4", Offset = "0xC0C1F4", VA = "0xC0C1F4")]
		private void PositionLine(Transform line, Vector3 start, Vector3 end)
		{
		}

		[Token(Token = "0x6001D01")]
		[Address(RVA = "0xC0CEE4", Offset = "0xC0CEE4", VA = "0xC0CEE4")]
		public Cuboid()
		{
		}
	}
	[Token(Token = "0x2000566")]
	[ExecuteInEditMode]
	public class ScalableCuboid : MonoBehaviour
	{
		[Token(Token = "0x4001CE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Cuboid cuboid;

		[Token(Token = "0x4001CE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ChamferBox chamferBox;

		[Token(Token = "0x6001D02")]
		[Address(RVA = "0xC28300", Offset = "0xC28300", VA = "0xC28300")]
		private void Update()
		{
		}

		[Token(Token = "0x6001D03")]
		[Address(RVA = "0xC285B4", Offset = "0xC285B4", VA = "0xC285B4")]
		public ScalableCuboid()
		{
		}
	}
	[Token(Token = "0x2000567")]
	public class RoomColliderSpawner : StateBehaviour
	{
		[Token(Token = "0x4001CE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameObject _planeColliderPrefab;

		[Token(Token = "0x4001CE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public GameObject _line;

		[Token(Token = "0x4001CE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Transform _parent;

		[Token(Token = "0x4001CE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public bool _spawnColliders;

		[Token(Token = "0x4001CE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
		public bool _spawnEdges;

		[Token(Token = "0x4001CE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private readonly List<GameObject> _objects;

		[Token(Token = "0x6001D04")]
		[Address(RVA = "0xC285BC", Offset = "0xC285BC", VA = "0xC285BC")]
		public void ReSpawnColliders()
		{
		}

		[Token(Token = "0x6001D05")]
		[Address(RVA = "0xC290A8", Offset = "0xC290A8", VA = "0xC290A8")]
		public void ClearRoomObjects()
		{
		}

		[Token(Token = "0x6001D06")]
		[Address(RVA = "0xC29240", Offset = "0xC29240", VA = "0xC29240")]
		public RoomColliderSpawner()
		{
		}
	}
}
namespace Cubism
{
	[Token(Token = "0x2000568")]
	public class ChordEditor : MonoBehaviour
	{
		[Token(Token = "0x4001CE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public TextAsset stageSetAsset;

		[Token(Token = "0x4001CEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[HideInInspector]
		public int stageIndex;

		[Token(Token = "0x4001CEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[HideInInspector]
		public bool playArpeggio;

		[Token(Token = "0x4001CEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[HideInInspector]
		public float arpeggioInterval;

		[Token(Token = "0x4001CED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[HideInInspector]
		public StageSet stageSet;

		[Token(Token = "0x4001CEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private TextAsset _data;

		[Token(Token = "0x6001D07")]
		[Address(RVA = "0xC292C4", Offset = "0xC292C4", VA = "0xC292C4")]
		public void Start()
		{
		}

		[Token(Token = "0x6001D08")]
		[Address(RVA = "0xC29388", Offset = "0xC29388", VA = "0xC29388")]
		public void LoadFromJson()
		{
		}

		[Token(Token = "0x6001D09")]
		[Address(RVA = "0xC29564", Offset = "0xC29564", VA = "0xC29564")]
		public void SaveToJson()
		{
		}

		[Token(Token = "0x6001D0A")]
		[Address(RVA = "0xC29618", Offset = "0xC29618", VA = "0xC29618")]
		public void PlayLevelChord(Level level)
		{
		}

		[Token(Token = "0x6001D0B")]
		[Address(RVA = "0xC2985C", Offset = "0xC2985C", VA = "0xC2985C")]
		public void PlayLevelMenuNotes(Level level)
		{
		}

		[Token(Token = "0x6001D0C")]
		[Address(RVA = "0xC29A90", Offset = "0xC29A90", VA = "0xC29A90")]
		public void PlayBaseAndTop(Level level)
		{
		}

		[Token(Token = "0x6001D0D")]
		[Address(RVA = "0xC29400", Offset = "0xC29400", VA = "0xC29400")]
		private void PopulateNotes()
		{
		}

		[Token(Token = "0x6001D0E")]
		[Address(RVA = "0xC29C5C", Offset = "0xC29C5C", VA = "0xC29C5C")]
		public ChordEditor()
		{
		}
	}
	[Token(Token = "0x2000569")]
	public class Controller : StateBehaviour
	{
		[Token(Token = "0x200056A")]
		[CompilerGenerated]
		private sealed class <ShowController>d__24 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001D03")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001D04")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001D05")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float delay;

			[Token(Token = "0x4001D06")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Controller <>4__this;

			[Token(Token = "0x170002A0")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001D24")]
				[Address(RVA = "0xC2A33C", Offset = "0xC2A33C", VA = "0xC2A33C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002A1")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001D26")]
				[Address(RVA = "0xC2A384", Offset = "0xC2A384", VA = "0xC2A384", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001D21")]
			[Address(RVA = "0xC29F04", Offset = "0xC29F04", VA = "0xC29F04")]
			[DebuggerHidden]
			public <ShowController>d__24(int <>1__state)
			{
			}

			[Token(Token = "0x6001D22")]
			[Address(RVA = "0xC2A27C", Offset = "0xC2A27C", VA = "0xC2A27C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001D23")]
			[Address(RVA = "0xC2A280", Offset = "0xC2A280", VA = "0xC2A280", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001D25")]
			[Address(RVA = "0xC2A344", Offset = "0xC2A344", VA = "0xC2A344", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001CEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform point;

		[Token(Token = "0x4001CF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Transform interactionPointHt;

		[Token(Token = "0x4001CF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public FingerTips fingerTips;

		[Token(Token = "0x4001CF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public CreatePositionView spawnPosition;

		[Token(Token = "0x4001CF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Hand hand;

		[Token(Token = "0x4001CF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Anchors anchors;

		[Token(Token = "0x4001CF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Rigidbody grabAttachPoint;

		[Token(Token = "0x4001CF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public MotionValues motion;

		[Token(Token = "0x4001CF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public GrabButton activeGrabbingButton;

		[Token(Token = "0x4001CF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public InputGrabber inputGrabber;

		[Token(Token = "0x4001CF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[HideInInspector]
		public string grabAnim;

		[Token(Token = "0x4001CFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[HideInInspector]
		public string triggerAnim;

		[Token(Token = "0x4001CFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[HideInInspector]
		public GameObject controllerModel;

		[Token(Token = "0x4001CFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[HideInInspector]
		public Animator controllerAnimator;

		[Token(Token = "0x4001CFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public float lastPlacedPieceOnGridTimeStamp;

		[Token(Token = "0x4001CFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		[SerializeField]
		[Header("Debug")]
		private bool _grabbingPiece;

		[Token(Token = "0x4001CFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9D")]
		[SerializeField]
		private bool _grabbingPuzzle;

		[Token(Token = "0x4001D00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9E")]
		[SerializeField]
		private bool _isCreating;

		[Token(Token = "0x4001D01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private Collider[] _pieces;

		[Token(Token = "0x4001D02")]
		private const float PieceProximityCheckRadius = 0.009f;

		[Token(Token = "0x6001D0F")]
		[Address(RVA = "0xC29C70", Offset = "0xC29C70", VA = "0xC29C70")]
		private void Update()
		{
		}

		[Token(Token = "0x6001D10")]
		[Address(RVA = "0xC29DD8", Offset = "0xC29DD8", VA = "0xC29DD8")]
		public Transform GetInteractionPoint()
		{
			return null;
		}

		[Token(Token = "0x6001D11")]
		[Address(RVA = "0xC29E4C", Offset = "0xC29E4C", VA = "0xC29E4C")]
		public void ShowControllerModelWithDelay(float delay)
		{
		}

		[Token(Token = "0x6001D12")]
		[Address(RVA = "0xC29EE4", Offset = "0xC29EE4", VA = "0xC29EE4")]
		public void ShowControllerModel()
		{
		}

		[Token(Token = "0x6001D13")]
		[Address(RVA = "0xC29E6C", Offset = "0xC29E6C", VA = "0xC29E6C")]
		[IteratorStateMachine(typeof(<ShowController>d__24))]
		private IEnumerator ShowController(float delay)
		{
			return null;
		}

		[Token(Token = "0x6001D14")]
		[Address(RVA = "0xC29F2C", Offset = "0xC29F2C", VA = "0xC29F2C")]
		public void HideControllerModel()
		{
		}

		[Token(Token = "0x6001D15")]
		[Address(RVA = "0xC29F58", Offset = "0xC29F58", VA = "0xC29F58")]
		public void FlashGrip()
		{
		}

		[Token(Token = "0x6001D16")]
		[Address(RVA = "0xC29FF0", Offset = "0xC29FF0", VA = "0xC29FF0")]
		public void FlashTrigger()
		{
		}

		[Token(Token = "0x6001D17")]
		[Address(RVA = "0xC2A088", Offset = "0xC2A088", VA = "0xC2A088")]
		public void SetGrabbingPiece(bool grabbing)
		{
		}

		[Token(Token = "0x6001D18")]
		[Address(RVA = "0xC2A094", Offset = "0xC2A094", VA = "0xC2A094")]
		public void SetGrabbingPuzzle(bool grabbing)
		{
		}

		[Token(Token = "0x6001D19")]
		[Address(RVA = "0xC2A0A0", Offset = "0xC2A0A0", VA = "0xC2A0A0")]
		public bool IsInUse()
		{
			return default(bool);
		}

		[Token(Token = "0x6001D1A")]
		[Address(RVA = "0xC2A0C8", Offset = "0xC2A0C8", VA = "0xC2A0C8")]
		public bool InProximityToPiece()
		{
			return default(bool);
		}

		[Token(Token = "0x6001D1B")]
		[Address(RVA = "0xC2A1D8", Offset = "0xC2A1D8", VA = "0xC2A1D8")]
		public bool IsGrabbing()
		{
			return default(bool);
		}

		[Token(Token = "0x6001D1C")]
		[Address(RVA = "0xC2A1F8", Offset = "0xC2A1F8", VA = "0xC2A1F8")]
		public bool IsGrabbingPiece()
		{
			return default(bool);
		}

		[Token(Token = "0x6001D1D")]
		[Address(RVA = "0xC2A200", Offset = "0xC2A200", VA = "0xC2A200")]
		public bool IsGrabbingPuzzle()
		{
			return default(bool);
		}

		[Token(Token = "0x6001D1E")]
		[Address(RVA = "0xC2A208", Offset = "0xC2A208", VA = "0xC2A208")]
		public void SetCreating(bool creating)
		{
		}

		[Token(Token = "0x6001D1F")]
		[Address(RVA = "0xC2A214", Offset = "0xC2A214", VA = "0xC2A214")]
		public bool IsCreating()
		{
			return default(bool);
		}

		[Token(Token = "0x6001D20")]
		[Address(RVA = "0xC2A21C", Offset = "0xC2A21C", VA = "0xC2A21C")]
		public Controller()
		{
		}
	}
	[Token(Token = "0x200056B")]
	public enum Hand
	{
		[Token(Token = "0x4001D08")]
		left,
		[Token(Token = "0x4001D09")]
		right
	}
	[Token(Token = "0x200056C")]
	public class DlcPageController : StateBehaviour
	{
		[Token(Token = "0x4001D0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public VrButton _button;

		[Token(Token = "0x4001D0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public PageGroup _pageGroup;

		[Token(Token = "0x4001D0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Page _dlcOverviewPage;

		[Token(Token = "0x4001D0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Page _timberPackPage;

		[Token(Token = "0x6001D27")]
		[Address(RVA = "0xC2A38C", Offset = "0xC2A38C", VA = "0xC2A38C", Slot = "5")]
		protected override void ForceSetup()
		{
		}

		[Token(Token = "0x6001D28")]
		[Address(RVA = "0xC2A418", Offset = "0xC2A418", VA = "0xC2A418")]
		private void OpenRelevantPage()
		{
		}

		[Token(Token = "0x6001D29")]
		[Address(RVA = "0xC2A478", Offset = "0xC2A478", VA = "0xC2A478")]
		public DlcPageController()
		{
		}
	}
	[Token(Token = "0x200056D")]
	public class Keys
	{
		[Token(Token = "0x4001D0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static string KeyStorePass;

		[Token(Token = "0x4001D0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static string KeyAliasPass;

		[Token(Token = "0x4001D10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static string WebPuzzleKey;

		[Token(Token = "0x4001D11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static long DiscordOAuthClientID;

		[Token(Token = "0x4001D12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public static string DiscordOAuthSecret;

		[Token(Token = "0x4001D13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public static string DiscordWebHookMod;

		[Token(Token = "0x4001D14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public static string DiscordWebHookPublic;

		[Token(Token = "0x6001D2A")]
		[Address(RVA = "0xC2A480", Offset = "0xC2A480", VA = "0xC2A480")]
		public Keys()
		{
		}
	}
	[Token(Token = "0x200056E")]
	public class HandPullForce : StateBehaviour
	{
		[Token(Token = "0x4001D15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Hand hand;

		[Token(Token = "0x4001D16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public PieceView pullCandidate;

		[Token(Token = "0x4001D17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public FingerGrabber _fingerGrabber;

		[Token(Token = "0x4001D18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Transform _head;

		[Token(Token = "0x4001D19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Transform _middleTip;

		[Token(Token = "0x4001D1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Transform _middleBottom;

		[Token(Token = "0x4001D1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Transform _wrist;

		[Token(Token = "0x4001D1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private PieceCollection _pieceCollection;

		[Token(Token = "0x4001D1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private ButtonPusher _buttonPusher;

		[Token(Token = "0x4001D1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Vector3 _middleCheckPos;

		[Token(Token = "0x4001D1F")]
		private const float CurlTresholdOpen = 132f;

		[Token(Token = "0x4001D20")]
		private const float CurlTresholdToPull = 137f;

		[Token(Token = "0x4001D21")]
		private const float MinDistFromPiece = 0.17f;

		[Token(Token = "0x4001D22")]
		private const float MinAngleToPull = 20f;

		[Token(Token = "0x4001D23")]
		private const float MinLineOfSightAngle = 18f;

		[Token(Token = "0x4001D24")]
		private const float GestureTimeframe = 0.4f;

		[Token(Token = "0x4001D25")]
		private const float PieceDetectionTimeFrame = 0.2f;

		[Token(Token = "0x4001D26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		[Header("Debug")]
		public bool _handFacingUp;

		[Token(Token = "0x4001D27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7D")]
		public bool _palmFacingFace;

		[Token(Token = "0x4001D28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7E")]
		public bool _palmOpen;

		[Token(Token = "0x4001D29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7F")]
		public bool _palmClosed;

		[Token(Token = "0x4001D2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public float _palmOpenTimeStamp;

		[Token(Token = "0x4001D2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		public float _pieceDetectedTimeStamp;

		[Token(Token = "0x4001D2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public bool _palmOpenPrev;

		[Token(Token = "0x6001D2C")]
		[Address(RVA = "0xC2A588", Offset = "0xC2A588", VA = "0xC2A588")]
		public void Setup(ButtonPusher buttonPusher)
		{
		}

		[Token(Token = "0x6001D2D")]
		[Address(RVA = "0xC2A590", Offset = "0xC2A590", VA = "0xC2A590", Slot = "5")]
		protected override void ForceSetup()
		{
		}

		[Token(Token = "0x6001D2E")]
		[Address(RVA = "0xC2A604", Offset = "0xC2A604", VA = "0xC2A604")]
		private void Update()
		{
		}

		[Token(Token = "0x6001D2F")]
		[Address(RVA = "0xC2B3F0", Offset = "0xC2B3F0", VA = "0xC2B3F0")]
		public bool CanPullPiece()
		{
			return default(bool);
		}

		[Token(Token = "0x6001D30")]
		[Address(RVA = "0xC2AE0C", Offset = "0xC2AE0C", VA = "0xC2AE0C")]
		private bool TryGetClosestPiece(out PieceView piece)
		{
			return default(bool);
		}

		[Token(Token = "0x6001D31")]
		[Address(RVA = "0xC2AD80", Offset = "0xC2AD80", VA = "0xC2AD80")]
		private bool CanPull()
		{
			return default(bool);
		}

		[Token(Token = "0x6001D32")]
		[Address(RVA = "0xC2B4CC", Offset = "0xC2B4CC", VA = "0xC2B4CC")]
		public HandPullForce()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200056F")]
	public class ColorThemeModel
	{
		[Token(Token = "0x4001D2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool OverridingColorTheme;

		[Token(Token = "0x4001D2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string LoadedThemeFileName;

		[Token(Token = "0x4001D2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ColorTheme ActiveTheme;

		[Token(Token = "0x6001D33")]
		[Address(RVA = "0xC2B4D4", Offset = "0xC2B4D4", VA = "0xC2B4D4")]
		public ColorThemeModel()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000570")]
	public class DlcStageSet
	{
		[Token(Token = "0x4001D32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private StageSet _set;

		[Token(Token = "0x4001D33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private DlcStatus _status;

		[Token(Token = "0x170002A2")]
		public StageSet set
		{
			[Token(Token = "0x6001D38")]
			[Address(RVA = "0xC2B7BC", Offset = "0xC2B7BC", VA = "0xC2B7BC")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001D39")]
			[Address(RVA = "0xC2B7C4", Offset = "0xC2B7C4", VA = "0xC2B7C4")]
			set
			{
			}
		}

		[Token(Token = "0x170002A3")]
		public DlcStatus status
		{
			[Token(Token = "0x6001D3A")]
			[Address(RVA = "0xC2B7F0", Offset = "0xC2B7F0", VA = "0xC2B7F0")]
			get
			{
				return default(DlcStatus);
			}
			[Token(Token = "0x6001D3B")]
			[Address(RVA = "0xC2B7F8", Offset = "0xC2B7F8", VA = "0xC2B7F8")]
			set
			{
			}
		}

		[Token(Token = "0x140000A7")]
		public event Action OnLoaded
		{
			[Token(Token = "0x6001D34")]
			[Address(RVA = "0xC2B524", Offset = "0xC2B524", VA = "0xC2B524")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6001D35")]
			[Address(RVA = "0xC2B5C0", Offset = "0xC2B5C0", VA = "0xC2B5C0")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x140000A8")]
		public event Action<DlcStatus> OnStatusChanged
		{
			[Token(Token = "0x6001D36")]
			[Address(RVA = "0xC2B65C", Offset = "0xC2B65C", VA = "0xC2B65C")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6001D37")]
			[Address(RVA = "0xC2B70C", Offset = "0xC2B70C", VA = "0xC2B70C")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x6001D3C")]
		[Address(RVA = "0xC2A468", Offset = "0xC2A468", VA = "0xC2A468")]
		public bool UserEntitled()
		{
			return default(bool);
		}

		[Token(Token = "0x6001D3D")]
		[Address(RVA = "0xC2B824", Offset = "0xC2B824", VA = "0xC2B824")]
		public bool IsLoaded()
		{
			return default(bool);
		}

		[Token(Token = "0x6001D3E")]
		[Address(RVA = "0xC2B834", Offset = "0xC2B834", VA = "0xC2B834")]
		public DlcStageSet()
		{
		}
	}
	[Token(Token = "0x2000571")]
	public enum DlcStatus
	{
		[Token(Token = "0x4001D35")]
		NotEntitled,
		[Token(Token = "0x4001D36")]
		Entitled,
		[Token(Token = "0x4001D37")]
		Downloading,
		[Token(Token = "0x4001D38")]
		Downloaded,
		[Token(Token = "0x4001D39")]
		Parsed
	}
	[Serializable]
	[Token(Token = "0x2000572")]
	public class Cell : Entity
	{
		[Token(Token = "0x4001D3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector3 localPos;

		[Token(Token = "0x4001D3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public Vector3Int coordinates;

		[Token(Token = "0x4001D3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool occupied;

		[Token(Token = "0x4001D3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Neighbors<Cell> n;

		[Token(Token = "0x6001D3F")]
		[Address(RVA = "0xC2B83C", Offset = "0xC2B83C", VA = "0xC2B83C")]
		public static Cell FromJson(JSONNode json)
		{
			return null;
		}

		[Token(Token = "0x6001D40")]
		[Address(RVA = "0xC2B994", Offset = "0xC2B994", VA = "0xC2B994")]
		public JSONNode ToJSON()
		{
			return null;
		}

		[Token(Token = "0x6001D41")]
		[Address(RVA = "0xC2B918", Offset = "0xC2B918", VA = "0xC2B918")]
		public Cell()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000573")]
	public class Level : UnlockableEntity
	{
		[Token(Token = "0x4001D3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public int index;

		[Token(Token = "0x4001D3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string levelName;

		[Token(Token = "0x4001D40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Bounds bounds;

		[Token(Token = "0x4001D41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public float angle;

		[Token(Token = "0x4001D42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public Difficulty difficulty;

		[Token(Token = "0x4001D43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public int version;

		[Token(Token = "0x4001D44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public Category category;

		[Token(Token = "0x4001D45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public string author;

		[Token(Token = "0x4001D46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public bool showGridOnSolved;

		[Token(Token = "0x4001D47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public float edgeWidth;

		[Token(Token = "0x4001D48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public float dotSize;

		[Token(Token = "0x4001D49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public float faceOffset;

		[Token(Token = "0x4001D4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public int miniatureType;

		[Token(Token = "0x4001D4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		public Color miniatureEdgeColor;

		[Token(Token = "0x4001D4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public DateTime created;

		[Token(Token = "0x4001D4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public float timeSpent;

		[Token(Token = "0x4001D4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		public float completionTime;

		[Token(Token = "0x4001D4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public Collection<Piece> pieces;

		[Token(Token = "0x4001D50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public Collection<Cell> cells;

		[Token(Token = "0x4001D51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public Note[] menuNotes;

		[Token(Token = "0x6001D42")]
		[Address(RVA = "0xC29668", Offset = "0xC29668", VA = "0xC29668")]
		public List<string> GetChord()
		{
			return null;
		}

		[Token(Token = "0x6001D43")]
		[Address(RVA = "0xC2BA88", Offset = "0xC2BA88", VA = "0xC2BA88")]
		public List<Note> GetChordNotes()
		{
			return null;
		}

		[Token(Token = "0x6001D44")]
		[Address(RVA = "0xC298A0", Offset = "0xC298A0", VA = "0xC298A0")]
		public List<string> GetMenuNotes()
		{
			return null;
		}

		[Token(Token = "0x6001D45")]
		[Address(RVA = "0xC2BBCC", Offset = "0xC2BBCC", VA = "0xC2BBCC")]
		public void AddCell(Cell cell)
		{
		}

		[Token(Token = "0x6001D46")]
		[Address(RVA = "0xC2BE98", Offset = "0xC2BE98", VA = "0xC2BE98")]
		private void AddToNeighbors(Cell cell, int x, int y, int z)
		{
		}

		[Token(Token = "0x6001D47")]
		[Address(RVA = "0xC2BF78", Offset = "0xC2BF78", VA = "0xC2BF78")]
		public bool TryGetCellAtCoord(Vector3Int coord, out Cell cell)
		{
			return default(bool);
		}

		[Token(Token = "0x6001D48")]
		[Address(RVA = "0xC2C2C8", Offset = "0xC2C2C8", VA = "0xC2C2C8")]
		public Level Duplicate()
		{
			return null;
		}

		[Token(Token = "0x6001D49")]
		[Address(RVA = "0xC2C6D8", Offset = "0xC2C6D8", VA = "0xC2C6D8")]
		public JSONNode ToJSON()
		{
			return null;
		}

		[Token(Token = "0x6001D4A")]
		[Address(RVA = "0xC2C4B0", Offset = "0xC2C4B0", VA = "0xC2C4B0")]
		public Level()
		{
		}
	}
	[Token(Token = "0x2000575")]
	public enum Difficulty
	{
		[Token(Token = "0x4001D5A")]
		easy,
		[Token(Token = "0x4001D5B")]
		normal,
		[Token(Token = "0x4001D5C")]
		hard,
		[Token(Token = "0x4001D5D")]
		expert,
		[Token(Token = "0x4001D5E")]
		master
	}
	[Token(Token = "0x2000576")]
	public enum Category
	{
		[Token(Token = "0x4001D60")]
		main,
		[Token(Token = "0x4001D61")]
		playtest,
		[Token(Token = "0x4001D62")]
		daily,
		[Token(Token = "0x4001D63")]
		custom
	}
	[Serializable]
	[Token(Token = "0x2000577")]
	public class Piece : Entity
	{
		[Token(Token = "0x4001D64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector3 localPos;

		[Token(Token = "0x4001D65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public Quaternion localRot;

		[Token(Token = "0x4001D66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public Bounds bounds;

		[Token(Token = "0x4001D67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public Color color;

		[Token(Token = "0x4001D68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public bool onGrid;

		[Token(Token = "0x4001D69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public int index;

		[Token(Token = "0x4001D6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public string materialName;

		[Token(Token = "0x4001D6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public bool bevelled;

		[Token(Token = "0x4001D6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public MeshLOD lod0;

		[Token(Token = "0x4001D6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public MeshLOD lod1;

		[Token(Token = "0x4001D6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public MeshLOD lod2;

		[Token(Token = "0x4001D6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public Level level;

		[Token(Token = "0x4001D70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public Note note;

		[Token(Token = "0x4001D71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public Collection<Segment> segments;

		[Token(Token = "0x170002A4")]
		public bool hasMaterial
		{
			[Token(Token = "0x6001D53")]
			[Address(RVA = "0xC2D6C4", Offset = "0xC2D6C4", VA = "0xC2D6C4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170002A5")]
		public bool hasGeneratedGeometry
		{
			[Token(Token = "0x6001D54")]
			[Address(RVA = "0xC2D6E4", Offset = "0xC2D6E4", VA = "0xC2D6E4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001D55")]
		[Address(RVA = "0xC2D718", Offset = "0xC2D718", VA = "0xC2D718")]
		public void AddSegment(Segment segment)
		{
		}

		[Token(Token = "0x6001D56")]
		[Address(RVA = "0xC2D9E4", Offset = "0xC2D9E4", VA = "0xC2D9E4")]
		private void AddToNeighbors(Segment segment, int x, int y, int z)
		{
		}

		[Token(Token = "0x6001D57")]
		[Address(RVA = "0xC2DAC4", Offset = "0xC2DAC4", VA = "0xC2DAC4")]
		public bool TryGetSegmentAtCoord(Vector3Int coord, out Segment segment)
		{
			return default(bool);
		}

		[Token(Token = "0x6001D58")]
		[Address(RVA = "0xC2DE14", Offset = "0xC2DE14", VA = "0xC2DE14")]
		public Vector3Int[] GetSegmentCoords()
		{
			return null;
		}

		[Token(Token = "0x6001D59")]
		[Address(RVA = "0xC2DF58", Offset = "0xC2DF58", VA = "0xC2DF58")]
		public Bounds BoundsFromSegments()
		{
			return default(Bounds);
		}

		[Token(Token = "0x6001D5A")]
		[Address(RVA = "0xC2D608", Offset = "0xC2D608", VA = "0xC2D608")]
		public Piece Duplicate()
		{
			return null;
		}

		[Token(Token = "0x6001D5B")]
		[Address(RVA = "0xC2D040", Offset = "0xC2D040", VA = "0xC2D040")]
		public JSONNode ToJSON()
		{
			return null;
		}

		[Token(Token = "0x6001D5C")]
		[Address(RVA = "0xC2E190", Offset = "0xC2E190", VA = "0xC2E190")]
		public Piece()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000579")]
	public class Segment : Entity
	{
		[Token(Token = "0x4001D74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector3Int coordinates;

		[Token(Token = "0x4001D75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Neighbors<Segment> n;

		[Token(Token = "0x4001D76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Vector3 localPos;

		[Token(Token = "0x4001D77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public bool onGridCell;

		[Token(Token = "0x6001D60")]
		[Address(RVA = "0xC2E468", Offset = "0xC2E468", VA = "0xC2E468")]
		public static Segment FromJson(JSONNode json)
		{
			return null;
		}

		[Token(Token = "0x6001D61")]
		[Address(RVA = "0xC2E2EC", Offset = "0xC2E2EC", VA = "0xC2E2EC")]
		public JSONNode ToJSON()
		{
			return null;
		}

		[Token(Token = "0x6001D62")]
		[Address(RVA = "0xC2E544", Offset = "0xC2E544", VA = "0xC2E544")]
		public Segment()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200057A")]
	public class Stage : UnlockableEntity
	{
		[Token(Token = "0x4001D78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string stageName;

		[Token(Token = "0x4001D79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string localisationTag;

		[Token(Token = "0x4001D7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public int index;

		[Token(Token = "0x4001D7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public int minPuzzlesToUnlock;

		[Token(Token = "0x4001D7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public bool unlockedDuringGameplay;

		[Token(Token = "0x4001D7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Collection<Level> levels;

		[Token(Token = "0x6001D63")]
		[Address(RVA = "0xC2E5C0", Offset = "0xC2E5C0", VA = "0xC2E5C0")]
		public string GetFormattedStageName()
		{
			return null;
		}

		[Token(Token = "0x6001D64")]
		[Address(RVA = "0xC2E684", Offset = "0xC2E684", VA = "0xC2E684")]
		public bool ContainsLevel(Level level)
		{
			return default(bool);
		}

		[Token(Token = "0x6001D65")]
		[Address(RVA = "0xC2E6DC", Offset = "0xC2E6DC", VA = "0xC2E6DC")]
		public bool TryGetLevel(string id, out Level level)
		{
			return default(bool);
		}

		[Token(Token = "0x6001D66")]
		[Address(RVA = "0xC2EA24", Offset = "0xC2EA24", VA = "0xC2EA24")]
		public bool TryGetLevel(int index, out Level level)
		{
			return default(bool);
		}

		[Token(Token = "0x6001D67")]
		[Address(RVA = "0xC2EAD0", Offset = "0xC2EAD0", VA = "0xC2EAD0")]
		public int GetCompletedLevels()
		{
			return default(int);
		}

		[Token(Token = "0x6001D68")]
		[Address(RVA = "0xC2EDBC", Offset = "0xC2EDBC", VA = "0xC2EDBC")]
		public bool AllLevelsCompleted()
		{
			return default(bool);
		}

		[Token(Token = "0x6001D69")]
		[Address(RVA = "0xC2F0B0", Offset = "0xC2F0B0", VA = "0xC2F0B0")]
		public List<Level> GetUncompletedLevels()
		{
			return null;
		}

		[Token(Token = "0x6001D6A")]
		[Address(RVA = "0xC2F45C", Offset = "0xC2F45C", VA = "0xC2F45C")]
		public Stage()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200057B")]
	public class StageSet
	{
		[Token(Token = "0x4001D7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string name;

		[Token(Token = "0x4001D80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string localisationTag;

		[Token(Token = "0x4001D81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Collection<Stage> stages;

		[Token(Token = "0x4001D82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string chordsFileLocation;

		[Token(Token = "0x4001D83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public bool showDifficulty;

		[Token(Token = "0x4001D84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public AudioClip puzzleSong;

		[Token(Token = "0x4001D85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public float[] puzzleSongTimeStamps;

		[Token(Token = "0x4001D86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private int _completedLevels;

		[Token(Token = "0x4001D87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private int _numberOfLevels;

		[Token(Token = "0x4001D88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private int _completedConsecutiveLevels;

		[Token(Token = "0x4001D89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private float _completionTime;

		[Token(Token = "0x4001D8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private bool _completedLevelsDirty;

		[Token(Token = "0x4001D8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
		private bool _numberOfLevelsDirty;

		[Token(Token = "0x4001D8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x62")]
		private bool _completedConsecutiveLevelsDirty;

		[Token(Token = "0x4001D8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x63")]
		private bool _completionTimeDirty;

		[Token(Token = "0x140000A9")]
		public event Action OnCompletedAllLevels
		{
			[Token(Token = "0x6001D6B")]
			[Address(RVA = "0xC2F4D8", Offset = "0xC2F4D8", VA = "0xC2F4D8")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6001D6C")]
			[Address(RVA = "0xC2F574", Offset = "0xC2F574", VA = "0xC2F574")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x6001D6D")]
		[Address(RVA = "0xC2F610", Offset = "0xC2F610", VA = "0xC2F610")]
		public string GetFormattedStageSetName()
		{
			return null;
		}

		[Token(Token = "0x6001D6E")]
		[Address(RVA = "0xC2F68C", Offset = "0xC2F68C", VA = "0xC2F68C")]
		public bool CompletedFullStageSet()
		{
			return default(bool);
		}

		[Token(Token = "0x6001D6F")]
		[Address(RVA = "0xC2FFF0", Offset = "0xC2FFF0", VA = "0xC2FFF0")]
		public void MarkCalculatedDataDirty()
		{
		}

		[Token(Token = "0x6001D70")]
		[Address(RVA = "0xC2FA04", Offset = "0xC2FA04", VA = "0xC2FA04")]
		public int CompletedLevels()
		{
			return default(int);
		}

		[Token(Token = "0x6001D71")]
		[Address(RVA = "0xC2FFFC", Offset = "0xC2FFFC", VA = "0xC2FFFC")]
		public float CompletionTimeSeconds()
		{
			return default(float);
		}

		[Token(Token = "0x6001D72")]
		[Address(RVA = "0xC2F6BC", Offset = "0xC2F6BC", VA = "0xC2F6BC")]
		public int NumberOfLevels()
		{
			return default(int);
		}

		[Token(Token = "0x6001D73")]
		[Address(RVA = "0xC305F0", Offset = "0xC305F0", VA = "0xC305F0")]
		public bool ContainsLevel(Level level)
		{
			return default(bool);
		}

		[Token(Token = "0x6001D74")]
		[Address(RVA = "0xC308FC", Offset = "0xC308FC", VA = "0xC308FC")]
		public bool TryGetLevel(string id, out Level level)
		{
			return default(bool);
		}

		[Token(Token = "0x6001D75")]
		[Address(RVA = "0xC30C24", Offset = "0xC30C24", VA = "0xC30C24")]
		public bool TryGetLevel(int index, out Level level)
		{
			return default(bool);
		}

		[Token(Token = "0x6001D76")]
		[Address(RVA = "0xC30FD4", Offset = "0xC30FD4", VA = "0xC30FD4")]
		public Stage GetStageWithLevel(Level level)
		{
			return null;
		}

		[Token(Token = "0x6001D77")]
		[Address(RVA = "0xC312F0", Offset = "0xC312F0", VA = "0xC312F0")]
		public int CompletedConsecutiveLevels()
		{
			return default(int);
		}

		[Token(Token = "0x6001D78")]
		[Address(RVA = "0xC318FC", Offset = "0xC318FC", VA = "0xC318FC")]
		public void FireCompletedAllLevels()
		{
		}

		[Token(Token = "0x6001D79")]
		[Address(RVA = "0xC31918", Offset = "0xC31918", VA = "0xC31918")]
		public void SetAllProgress(Progress progress)
		{
		}

		[Token(Token = "0x6001D7A")]
		[Address(RVA = "0xC31F0C", Offset = "0xC31F0C", VA = "0xC31F0C")]
		public void UnlockFirst()
		{
		}

		[Token(Token = "0x6001D7B")]
		[Address(RVA = "0xC31FCC", Offset = "0xC31FCC", VA = "0xC31FCC")]
		public void UnlockFirstStageFull()
		{
		}

		[Token(Token = "0x6001D7C")]
		[Address(RVA = "0xC32300", Offset = "0xC32300", VA = "0xC32300")]
		public void UnlockAll()
		{
		}

		[Token(Token = "0x6001D7D")]
		[Address(RVA = "0xC328FC", Offset = "0xC328FC", VA = "0xC328FC")]
		public List<Level> GetUnsolvedLevels()
		{
			return null;
		}

		[Token(Token = "0x6001D7E")]
		[Address(RVA = "0xC32C44", Offset = "0xC32C44", VA = "0xC32C44")]
		public StageSet()
		{
		}
	}
	[Token(Token = "0x200057C")]
	public class UndoModel
	{
		[Token(Token = "0x4001D8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		public Stack<EditorAction> redoActions;

		[Token(Token = "0x4001D8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		public Stack<EditorAction> undoActions;

		[Token(Token = "0x6001D7F")]
		[Address(RVA = "0xC32CE4", Offset = "0xC32CE4", VA = "0xC32CE4")]
		public bool HasUndoableActions()
		{
			return default(bool);
		}

		[Token(Token = "0x6001D80")]
		[Address(RVA = "0xC32D34", Offset = "0xC32D34", VA = "0xC32D34")]
		public UndoModel()
		{
		}
	}
	[Token(Token = "0x200057D")]
	public class ButtonPusher : StateBehaviour
	{
		[Token(Token = "0x200057E")]
		[CompilerGenerated]
		private sealed class <WaitAndClickUp>d__21 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001D9B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001D9C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001D9D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public InteractionListener listener;

			[Token(Token = "0x4001D9E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public ButtonPusher <>4__this;

			[Token(Token = "0x170002A6")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001D90")]
				[Address(RVA = "0xC339A0", Offset = "0xC339A0", VA = "0xC339A0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002A7")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001D92")]
				[Address(RVA = "0xC339E8", Offset = "0xC339E8", VA = "0xC339E8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001D8D")]
			[Address(RVA = "0xC338FC", Offset = "0xC338FC", VA = "0xC338FC")]
			[DebuggerHidden]
			public <WaitAndClickUp>d__21(int <>1__state)
			{
			}

			[Token(Token = "0x6001D8E")]
			[Address(RVA = "0xC33934", Offset = "0xC33934", VA = "0xC33934", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001D8F")]
			[Address(RVA = "0xC33938", Offset = "0xC33938", VA = "0xC33938", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001D91")]
			[Address(RVA = "0xC339A8", Offset = "0xC339A8", VA = "0xC339A8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001D90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool active;

		[Token(Token = "0x4001D91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private LayerMask _pushableLayer;

		[Token(Token = "0x4001D92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Hand _hand;

		[Token(Token = "0x4001D93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private Ray _ray;

		[Token(Token = "0x4001D94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private Vector3 _castDirection;

		[Token(Token = "0x4001D95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private bool _hitThisFrame;

		[Token(Token = "0x4001D96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private RaycastHit _hit;

		[Token(Token = "0x4001D97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Controller _controller;

		[Token(Token = "0x4001D98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private HoverHelper _fingerHoverHelper;

		[Token(Token = "0x4001D99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private bool _pinchedDown;

		[Token(Token = "0x4001D9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[Header("Debug")]
		[SerializeField]
		private InteractionListener _hoveringListener;

		[Token(Token = "0x6001D81")]
		[Address(RVA = "0xC32DD4", Offset = "0xC32DD4", VA = "0xC32DD4")]
		public void Setup(HoverHelper fingerHoverHelper, Hand hand)
		{
		}

		[Token(Token = "0x6001D82")]
		[Address(RVA = "0xC32FD0", Offset = "0xC32FD0", VA = "0xC32FD0")]
		public float GetInteractionDistance()
		{
			return default(float);
		}

		[Token(Token = "0x6001D83")]
		[Address(RVA = "0xC32FF0", Offset = "0xC32FF0", VA = "0xC32FF0")]
		public Vector3 GetInteractionPoint()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001D84")]
		[Address(RVA = "0xC33010", Offset = "0xC33010", VA = "0xC33010")]
		private void Update()
		{
		}

		[Token(Token = "0x6001D85")]
		[Address(RVA = "0xC33504", Offset = "0xC33504", VA = "0xC33504")]
		public Vector3 GetCastDirection()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001D86")]
		[Address(RVA = "0xC33624", Offset = "0xC33624", VA = "0xC33624")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001D87")]
		[Address(RVA = "0xC2B46C", Offset = "0xC2B46C", VA = "0xC2B46C")]
		public bool IsHovering()
		{
			return default(bool);
		}

		[Token(Token = "0x6001D88")]
		[Address(RVA = "0xC335AC", Offset = "0xC335AC", VA = "0xC335AC")]
		private InteractionData GetInteractionData()
		{
			return null;
		}

		[Token(Token = "0x6001D89")]
		[Address(RVA = "0xC336BC", Offset = "0xC336BC", VA = "0xC336BC")]
		private void TriggerEnteredFinger(Collider aOther)
		{
		}

		[Token(Token = "0x6001D8A")]
		[Address(RVA = "0xC33750", Offset = "0xC33750", VA = "0xC33750")]
		private void CheckForPush(Collider other)
		{
		}

		[Token(Token = "0x6001D8B")]
		[Address(RVA = "0xC33888", Offset = "0xC33888", VA = "0xC33888")]
		[IteratorStateMachine(typeof(<WaitAndClickUp>d__21))]
		private IEnumerator WaitAndClickUp(InteractionListener listener)
		{
			return null;
		}

		[Token(Token = "0x6001D8C")]
		[Address(RVA = "0xC33924", Offset = "0xC33924", VA = "0xC33924")]
		public ButtonPusher()
		{
		}
	}
	[Token(Token = "0x200057F")]
	public class FingerGrabber : Grabber
	{
		[Token(Token = "0x4001DA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public PieceView closestPiece;

		[Token(Token = "0x4001DA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public InteractionListener closestListener;

		[Token(Token = "0x4001DA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[Space(25f)]
		public LayerMask pieceLayer;

		[Token(Token = "0x4001DA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public FingerTips fingerTips;

		[Token(Token = "0x4001DA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private float _grabDistance;

		[Token(Token = "0x4001DA6")]
		private const float GrabTreshold = 0.01f;

		[Token(Token = "0x4001DA7")]
		private const float MaxReleaseTreshold = 0.021f;

		[Token(Token = "0x4001DA8")]
		private const float MinReleaseTreshold = 0.01f;

		[Token(Token = "0x4001DA9")]
		private const float ReleaseDistUpperLimit = 0.12f;

		[Token(Token = "0x4001DAA")]
		private const float ReleaseDistLowerLimit = 0.03f;

		[Token(Token = "0x4001DAB")]
		private const float RepositionReleaseDistTreshold = 0.06f;

		[Token(Token = "0x4001DAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		private float _grabCurl;

		[Token(Token = "0x4001DAD")]
		private const float GrabTresholdCurl = 10f;

		[Token(Token = "0x4001DAE")]
		private const float ReleaseTresholdCurl = 15f;

		[Token(Token = "0x4001DAF")]
		private const float RepositionReleaseDistTresholdCurl = 45f;

		[Token(Token = "0x4001DB0")]
		private const float CoolDownAfterPlacePiece = 0.2f;

		[Token(Token = "0x4001DB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private Transform _thumb1;

		[Token(Token = "0x4001DB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private Transform _thumb2;

		[Token(Token = "0x4001DB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private Transform _thumb3;

		[Token(Token = "0x4001DB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private Transform _thumbTip;

		[Token(Token = "0x4001DB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private Transform _index1;

		[Token(Token = "0x4001DB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private Transform _index2;

		[Token(Token = "0x4001DB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private Transform _index3;

		[Token(Token = "0x4001DB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private Transform _indexTip;

		[Token(Token = "0x4001DB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private Transform _middleTip;

		[Token(Token = "0x4001DBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private List<InteractionListener> thumbListeners;

		[Token(Token = "0x4001DBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		private List<InteractionListener> indexListeners;

		[Token(Token = "0x4001DBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		[Header("Debug")]
		[SerializeField]
		private GrabMethod _grabMethod;

		[Token(Token = "0x4001DBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		private GrabData _activeGrab;

		[Token(Token = "0x4001DBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		private int _releaseFrames;

		[Token(Token = "0x4001DBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
		private int _highConfidenceFrames;

		[Token(Token = "0x4001DC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		private float _releaseTreshold;

		[Token(Token = "0x4001DC1")]
		private const int MinFramesToRelease = 5;

		[Token(Token = "0x4001DC2")]
		private const int MinHighConfidenceFrames = 3;

		[Token(Token = "0x140000AA")]
		public event Action<GrabData> OnGrabStart
		{
			[Token(Token = "0x6001D93")]
			[Address(RVA = "0xC339F0", Offset = "0xC339F0", VA = "0xC339F0")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6001D94")]
			[Address(RVA = "0xC33AA0", Offset = "0xC33AA0", VA = "0xC33AA0")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x140000AB")]
		public event Action OnGrabEnd
		{
			[Token(Token = "0x6001D95")]
			[Address(RVA = "0xC33B50", Offset = "0xC33B50", VA = "0xC33B50")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6001D96")]
			[Address(RVA = "0xC33BEC", Offset = "0xC33BEC", VA = "0xC33BEC")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x6001D97")]
		[Address(RVA = "0xC33C88", Offset = "0xC33C88", VA = "0xC33C88", Slot = "6")]
		protected override void Start()
		{
		}

		[Token(Token = "0x6001D98")]
		[Address(RVA = "0xC33E68", Offset = "0xC33E68", VA = "0xC33E68")]
		private void RemoveClosestPieceIfHTOff(bool active)
		{
		}

		[Token(Token = "0x6001D99")]
		[Address(RVA = "0xC33E74", Offset = "0xC33E74", VA = "0xC33E74", Slot = "7")]
		protected override void Update()
		{
		}

		[Token(Token = "0x6001D9A")]
		[Address(RVA = "0xC34470", Offset = "0xC34470", VA = "0xC34470")]
		public bool IsGrabbing()
		{
			return default(bool);
		}

		[Token(Token = "0x6001D9B")]
		[Address(RVA = "0xC34554", Offset = "0xC34554", VA = "0xC34554", Slot = "8")]
		public override void ReleaseOntoOtherGrabber()
		{
		}

		[Token(Token = "0x6001D9C")]
		[Address(RVA = "0xC34628", Offset = "0xC34628", VA = "0xC34628", Slot = "9")]
		public override void ForceRelease()
		{
		}

		[Token(Token = "0x6001D9D")]
		[Address(RVA = "0xC34630", Offset = "0xC34630", VA = "0xC34630", Slot = "10")]
		protected override void CheckInteractions()
		{
		}

		[Token(Token = "0x6001D9E")]
		[Address(RVA = "0xC34640", Offset = "0xC34640", VA = "0xC34640")]
		private void CheckInteractDown()
		{
		}

		[Token(Token = "0x6001D9F")]
		[Address(RVA = "0xC34698", Offset = "0xC34698", VA = "0xC34698")]
		private void CheckDownCurl()
		{
		}

		[Token(Token = "0x6001DA0")]
		[Address(RVA = "0xC34E48", Offset = "0xC34E48", VA = "0xC34E48")]
		private void CheckInteractUpCurl()
		{
		}

		[Token(Token = "0x6001DA1")]
		[Address(RVA = "0xC3497C", Offset = "0xC3497C", VA = "0xC3497C")]
		private void CheckDownDistanceGrab()
		{
		}

		[Token(Token = "0x6001DA2")]
		[Address(RVA = "0xC34654", Offset = "0xC34654", VA = "0xC34654")]
		private void CheckInteractUp()
		{
		}

		[Token(Token = "0x6001DA3")]
		[Address(RVA = "0xC34F64", Offset = "0xC34F64", VA = "0xC34F64")]
		private void CheckInteractUpDistance()
		{
		}

		[Token(Token = "0x6001DA4")]
		[Address(RVA = "0xC351BC", Offset = "0xC351BC", VA = "0xC351BC")]
		private void DrawReleaseDebug(bool releaseIgnored)
		{
		}

		[Token(Token = "0x6001DA5")]
		[Address(RVA = "0xC3455C", Offset = "0xC3455C", VA = "0xC3455C")]
		private void Release(bool clickUpInteracted = true)
		{
		}

		[Token(Token = "0x6001DA6")]
		[Address(RVA = "0xC35470", Offset = "0xC35470", VA = "0xC35470")]
		public FingerGrabber()
		{
		}
	}
	[Token(Token = "0x2000580")]
	public enum GrabMethod
	{
		[Token(Token = "0x4001DC4")]
		FingerDistance,
		[Token(Token = "0x4001DC5")]
		FingerCurl
	}
	[Serializable]
	[Token(Token = "0x2000581")]
	public class GrabData
	{
		[Token(Token = "0x4001DC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public InteractionListener listener;

		[Token(Token = "0x4001DC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Finger grabbingFinger;

		[Token(Token = "0x4001DC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform grabbingTip;

		[Token(Token = "0x4001DC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float grabStartDistance;

		[Token(Token = "0x4001DCA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float grabStartCurl;

		[Token(Token = "0x6001DA7")]
		[Address(RVA = "0xC34DB4", Offset = "0xC34DB4", VA = "0xC34DB4")]
		public GrabData()
		{
		}
	}
	[Token(Token = "0x2000582")]
	public abstract class Grabber : StateBehaviour
	{
		[Token(Token = "0x4001DCB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public LayerMask interactableLayers;

		[Token(Token = "0x4001DCC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public LayerMask interactableLayersCreating;

		[Token(Token = "0x4001DCD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Controller controller;

		[Token(Token = "0x4001DCE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Rigidbody rigidBody;

		[Token(Token = "0x4001DCF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		protected GameState _gameState;

		[Token(Token = "0x4001DD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		protected readonly Dictionary<InteractionListener, int> _interactingListeners;

		[Token(Token = "0x4001DD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public List<InteractionListener> _hoveringListeners;

		[Token(Token = "0x4001DD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		protected readonly Queue<InteractionListener> _hoverRemoval;

		[Token(Token = "0x4001DD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		protected readonly Dictionary<InteractionListener, (Vector3, float)> _interactionDistances;

		[Token(Token = "0x4001DD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		protected InputModel _input;

		[Token(Token = "0x4001DD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		[Header("Debug")]
		protected bool _logInteractions;

		[Token(Token = "0x6001DA8")]
		[Address(RVA = "0xC33D40", Offset = "0xC33D40", VA = "0xC33D40", Slot = "6")]
		protected virtual void Start()
		{
		}

		[Token(Token = "0x6001DA9")]
		[Address(RVA = "0xC34480", Offset = "0xC34480", VA = "0xC34480", Slot = "7")]
		protected virtual void Update()
		{
		}

		[Token(Token = "0x6001DAA")]
		[Address(RVA = "0xC3565C", Offset = "0xC3565C", VA = "0xC3565C")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6001DAB")]
		[Address(RVA = "0xC35900", Offset = "0xC35900", VA = "0xC35900")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001DAC")]
		[Address(RVA = "0xC35B28", Offset = "0xC35B28", VA = "0xC35B28")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001DAD")]
		[Address(RVA = "0xC35B2C", Offset = "0xC35B2C", VA = "0xC35B2C")]
		private void OnTriggerEnter(Collider aOther)
		{
		}

		[Token(Token = "0x6001DAE")]
		[Address(RVA = "0xC35FF8", Offset = "0xC35FF8", VA = "0xC35FF8")]
		private void OnTriggerStay(Collider aOther)
		{
		}

		[Token(Token = "0x6001DAF")]
		[Address(RVA = "0xC35B8C", Offset = "0xC35B8C", VA = "0xC35B8C")]
		private bool CanInteractWithLayer(int layer)
		{
			return default(bool);
		}

		[Token(Token = "0x6001DB0")]
		[Address(RVA = "0xC35904", Offset = "0xC35904", VA = "0xC35904")]
		public void ForceRemoveHoverAndInterActions()
		{
		}

		[Token(Token = "0x6001DB1")]
		public abstract void ReleaseOntoOtherGrabber();

		[Token(Token = "0x6001DB2")]
		public abstract void ForceRelease();

		[Token(Token = "0x6001DB3")]
		[Address(RVA = "0xC35BFC", Offset = "0xC35BFC", VA = "0xC35BFC")]
		private void HoverOn(Collider other)
		{
		}

		[Token(Token = "0x6001DB4")]
		[Address(RVA = "0xC36058", Offset = "0xC36058", VA = "0xC36058")]
		private void HoverStay(Collider other)
		{
		}

		[Token(Token = "0x6001DB5")]
		protected abstract void CheckInteractions();

		[Token(Token = "0x6001DB6")]
		[Address(RVA = "0xC361D0", Offset = "0xC361D0", VA = "0xC361D0")]
		private void UninteractIfFocusLost(bool focus)
		{
		}

		[Token(Token = "0x6001DB7")]
		[Address(RVA = "0xC34DBC", Offset = "0xC34DBC", VA = "0xC34DBC")]
		protected InteractionData GetInteractionData()
		{
			return null;
		}

		[Token(Token = "0x6001DB8")]
		[Address(RVA = "0xC35514", Offset = "0xC35514", VA = "0xC35514")]
		protected Grabber()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000583")]
	public class InteractionData
	{
		[Token(Token = "0x4001DD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Hand hand;

		[Token(Token = "0x4001DD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Grabber grabber;

		[Token(Token = "0x4001DD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Controller controller;

		[Token(Token = "0x4001DD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Rigidbody interactingRigidBody;

		[Token(Token = "0x4001DDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Transform interactingTransform;

		[Token(Token = "0x6001DB9")]
		[Address(RVA = "0xC336B4", Offset = "0xC336B4", VA = "0xC336B4")]
		public InteractionData()
		{
		}
	}
	[Token(Token = "0x2000584")]
	public class InputGrabber : Grabber
	{
		[Token(Token = "0x4001DDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		protected readonly List<InteractionListener> _clickedListeners;

		[Token(Token = "0x4001DDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		protected readonly List<InteractionListener> _grabbedListeners;

		[Token(Token = "0x4001DDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private bool _forceReleaseAtEndOfFrame;

		[Token(Token = "0x4001DDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		[SerializeField]
		[Header("Debug")]
		private int _interactedListenersCount;

		[Token(Token = "0x4001DDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private int _clickedListenersCount;

		[Token(Token = "0x6001DBA")]
		[Address(RVA = "0xC361DC", Offset = "0xC361DC", VA = "0xC361DC", Slot = "8")]
		public override void ReleaseOntoOtherGrabber()
		{
		}

		[Token(Token = "0x6001DBB")]
		[Address(RVA = "0xC361E8", Offset = "0xC361E8", VA = "0xC361E8", Slot = "9")]
		public override void ForceRelease()
		{
		}

		[Token(Token = "0x6001DBC")]
		[Address(RVA = "0xC361F4", Offset = "0xC361F4", VA = "0xC361F4")]
		public bool IsHovering()
		{
			return default(bool);
		}

		[Token(Token = "0x6001DBD")]
		[Address(RVA = "0xC36204", Offset = "0xC36204", VA = "0xC36204")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6001DBE")]
		[Address(RVA = "0xC3653C", Offset = "0xC3653C", VA = "0xC3653C", Slot = "10")]
		protected override void CheckInteractions()
		{
		}

		[Token(Token = "0x6001DBF")]
		[Address(RVA = "0xC36D24", Offset = "0xC36D24", VA = "0xC36D24")]
		private void CheckInteractDown(InteractionListener listener)
		{
		}

		[Token(Token = "0x6001DC0")]
		[Address(RVA = "0xC370B0", Offset = "0xC370B0", VA = "0xC370B0")]
		public InputGrabber()
		{
		}
	}
	[Token(Token = "0x2000585")]
	[CreateAssetMenu(fileName = "PieceMaterials")]
	public class PieceMaterials : ScriptableObject
	{
		[Token(Token = "0x4001DE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public PieceMaterial defaultMaterial;

		[Token(Token = "0x4001DE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PieceMaterial[] materials;

		[Token(Token = "0x6001DC1")]
		[Address(RVA = "0xC3714C", Offset = "0xC3714C", VA = "0xC3714C")]
		public Material GetMaterial(string key, MaterialType type)
		{
			return null;
		}

		[Token(Token = "0x6001DC2")]
		[Address(RVA = "0xC3723C", Offset = "0xC3723C", VA = "0xC3723C")]
		public Color GetColor(string key)
		{
			return default(Color);
		}

		[Token(Token = "0x6001DC3")]
		[Address(RVA = "0xC372F4", Offset = "0xC372F4", VA = "0xC372F4")]
		public PieceMaterials()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000586")]
	public class PieceMaterial
	{
		[Token(Token = "0x4001DE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string key;

		[Token(Token = "0x4001DE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Material standard;

		[Token(Token = "0x4001DE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Material unlit;

		[Token(Token = "0x4001DE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Color fingerColor;

		[Token(Token = "0x6001DC4")]
		[Address(RVA = "0xC37224", Offset = "0xC37224", VA = "0xC37224")]
		public Material Get(MaterialType type)
		{
			return null;
		}

		[Token(Token = "0x6001DC5")]
		[Address(RVA = "0xC372FC", Offset = "0xC372FC", VA = "0xC372FC")]
		public PieceMaterial()
		{
		}
	}
	[Token(Token = "0x2000587")]
	public enum MaterialType
	{
		[Token(Token = "0x4001DE7")]
		Standard,
		[Token(Token = "0x4001DE8")]
		Unlit
	}
	[Token(Token = "0x2000588")]
	public class AmplitudeAnalytics : MonoBehaviour, IAnalyticsTracker
	{
		[Token(Token = "0x4001DE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private State _state;

		[Token(Token = "0x4001DEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Amplitude _amplitude;

		[Token(Token = "0x4001DEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private List<AmplitudeEvent> _eventQueue;

		[Token(Token = "0x4001DEC")]
		private const int UpdateInterval = 1;

		[Token(Token = "0x4001DED")]
		private const string Url = "https://api.amplitude.com/2/httpapi";

		[Token(Token = "0x4001DEE")]
		private const string ApiKeyStaging = "731b2468d9894ee27d0d479ccd49bf4d";

		[Token(Token = "0x4001DEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private string[] DoNotTrack;

		[Token(Token = "0x6001DC6")]
		[Address(RVA = "0xC37304", Offset = "0xC37304", VA = "0xC37304")]
		public void Setup(State state)
		{
		}

		[Token(Token = "0x6001DC7")]
		[Address(RVA = "0xC373C4", Offset = "0xC373C4", VA = "0xC373C4", Slot = "4")]
		public void TrackEvent(string eventName)
		{
		}

		[Token(Token = "0x6001DC8")]
		[Address(RVA = "0xC37984", Offset = "0xC37984", VA = "0xC37984", Slot = "5")]
		public void TrackEvent(string eventName, Dictionary<string, object> value)
		{
		}

		[Token(Token = "0x6001DC9")]
		[Address(RVA = "0xC37D80", Offset = "0xC37D80", VA = "0xC37D80")]
		private void SendQueuedEvents()
		{
		}

		[Token(Token = "0x6001DCA")]
		[Address(RVA = "0xC374E0", Offset = "0xC374E0", VA = "0xC374E0")]
		private Dictionary<string, object> GetDefaultProps()
		{
			return null;
		}

		[Token(Token = "0x6001DCB")]
		[Address(RVA = "0xC37E14", Offset = "0xC37E14", VA = "0xC37E14")]
		private void PostEvents(List<AmplitudeEvent> events)
		{
		}

		[Token(Token = "0x6001DCC")]
		[Address(RVA = "0xC387FC", Offset = "0xC387FC", VA = "0xC387FC")]
		public AmplitudeAnalytics()
		{
		}
	}
	[Token(Token = "0x200058A")]
	public class AmplitudeEvent
	{
		[Token(Token = "0x4001DF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string eventName;

		[Token(Token = "0x4001DF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Dictionary<string, object> props;

		[Token(Token = "0x6001DCF")]
		[Address(RVA = "0xC37908", Offset = "0xC37908", VA = "0xC37908")]
		public AmplitudeEvent()
		{
		}
	}
	[Token(Token = "0x200058B")]
	public class AmplitudeAndroidAnalytics : IAnalyticsTracker
	{
		[Token(Token = "0x4001DF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private State _state;

		[Token(Token = "0x4001DF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Amplitude _amplitude;

		[Token(Token = "0x4001DF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private string[] DoNotTrack;

		[Token(Token = "0x6001DD0")]
		[Address(RVA = "0xC38A14", Offset = "0xC38A14", VA = "0xC38A14")]
		public AmplitudeAndroidAnalytics(State state)
		{
		}

		[Token(Token = "0x6001DD1")]
		[Address(RVA = "0xC38BA8", Offset = "0xC38BA8", VA = "0xC38BA8", Slot = "4")]
		public void TrackEvent(string eventName)
		{
		}

		[Token(Token = "0x6001DD2")]
		[Address(RVA = "0xC39090", Offset = "0xC39090", VA = "0xC39090", Slot = "5")]
		public void TrackEvent(string eventName, Dictionary<string, object> value)
		{
		}

		[Token(Token = "0x6001DD3")]
		[Address(RVA = "0xC38C68", Offset = "0xC38C68", VA = "0xC38C68")]
		private Dictionary<string, object> GetDefaultProps()
		{
			return null;
		}
	}
	[Token(Token = "0x200058C")]
	public static class Analytics
	{
		[Token(Token = "0x4001DF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static List<IAnalyticsTracker> _analyticsTrackers;

		[Token(Token = "0x6001DD4")]
		[Address(RVA = "0xC39430", Offset = "0xC39430", VA = "0xC39430")]
		public static void Subscribe(IAnalyticsTracker tracker)
		{
		}

		[Token(Token = "0x6001DD5")]
		[Address(RVA = "0xC39500", Offset = "0xC39500", VA = "0xC39500")]
		public static void UnSubscribe(IAnalyticsTracker tracker)
		{
		}

		[Token(Token = "0x6001DD6")]
		[Address(RVA = "0xC39580", Offset = "0xC39580", VA = "0xC39580")]
		public static void TrackEvent(string eventName)
		{
		}

		[Token(Token = "0x6001DD7")]
		[Address(RVA = "0xC39758", Offset = "0xC39758", VA = "0xC39758")]
		public static void TrackEvent(string eventName, Dictionary<string, object> value)
		{
		}
	}
	[Token(Token = "0x200058D")]
	public static class AnalyticsEvents
	{
		[Token(Token = "0x4001DF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static string openedApp;

		[Token(Token = "0x4001DF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static string sessionPing;

		[Token(Token = "0x4001DF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static string pickupStepComplete;

		[Token(Token = "0x4001DFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static string tutorialComplete;

		[Token(Token = "0x4001DFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public static string levelOpened;

		[Token(Token = "0x4001DFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public static string openedCustomPuzzle;

		[Token(Token = "0x4001DFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public static string triedOpeningLockedLevel;

		[Token(Token = "0x4001DFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public static string stageTabOpened;

		[Token(Token = "0x4001DFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public static string toggledMenu;

		[Token(Token = "0x4001E00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public static string closedUnfinishedLevel;

		[Token(Token = "0x4001E01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public static string finishedLevel;

		[Token(Token = "0x4001E02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public static string finishedCustomLevel;

		[Token(Token = "0x4001E03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public static string pieceRemoved;

		[Token(Token = "0x4001E04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public static string piecePlaced;

		[Token(Token = "0x4001E05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public static string setAdvancedControls;

		[Token(Token = "0x4001E06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public static string setReplaySolved;

		[Token(Token = "0x4001E07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public static string setContinuousMusicMode;

		[Token(Token = "0x4001E08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public static string setHandSmoothing;

		[Token(Token = "0x4001E09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public static string setHideHandsWhenTrackingLost;

		[Token(Token = "0x4001E0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public static string setRefreshRate;

		[Token(Token = "0x4001E0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public static string setReprojectController;

		[Token(Token = "0x4001E0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public static string setUseVirtualHands;

		[Token(Token = "0x4001E0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public static string setMasterVolume;

		[Token(Token = "0x4001E0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public static string setMusicVolume;

		[Token(Token = "0x4001E0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public static string setSfxVolume;

		[Token(Token = "0x4001E10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public static string setDarkMode;

		[Token(Token = "0x4001E11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		public static string setPassthroughVisible;

		[Token(Token = "0x4001E12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		public static string setFloorGridVisible;

		[Token(Token = "0x4001E13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		public static string clearProgress;

		[Token(Token = "0x4001E14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		public static string buttonPressed;

		[Token(Token = "0x4001E15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		public static string playedPuzzleSong;

		[Token(Token = "0x4001E16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		public static string stoppedPuzzleSong;

		[Token(Token = "0x4001E17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		public static string playedPuzzleSongOnCompletion;

		[Token(Token = "0x4001E18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		public static string saveFileCreated;

		[Token(Token = "0x4001E19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		public static string saveFileDeleted;

		[Token(Token = "0x4001E1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		public static string saveFileSwitched;

		[Token(Token = "0x4001E1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		public static string usingCustomTheme;

		[Token(Token = "0x4001E1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		public static string setEditorAccess;

		[Token(Token = "0x4001E1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		public static string openCustomPuzzles;

		[Token(Token = "0x4001E1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		public static string startedCreatingPuzzle;

		[Token(Token = "0x4001E1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		public static string savedPuzzle;

		[Token(Token = "0x4001E20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		public static string startedEditingPuzzle;

		[Token(Token = "0x4001E21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		public static string setHandedness;

		[Token(Token = "0x4001E22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		public static string setRemoveLimits;

		[Token(Token = "0x4001E23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		public static string setAutoSelectPiece;

		[Token(Token = "0x4001E24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		public static string setRestrictToGrid;

		[Token(Token = "0x4001E25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		public static string clearedEditor;

		[Token(Token = "0x4001E26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		public static string editedName;

		[Token(Token = "0x4001E27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		public static string deletedPuzzle;
	}
	[Token(Token = "0x200058E")]
	public class CsvSessionLogger : IAnalyticsTracker
	{
		[Token(Token = "0x4001E28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private State _state;

		[Token(Token = "0x4001E29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private string _sessionFileName;

		[Token(Token = "0x4001E2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private JSONObject _session;

		[Token(Token = "0x4001E2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private JSONArray _sessionEvents;

		[Token(Token = "0x4001E2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private JSONArray _lastPuzzleOpenedMoves;

		[Token(Token = "0x4001E2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private string[] _moveEvents;

		[Token(Token = "0x6001DDA")]
		[Address(RVA = "0xC3A020", Offset = "0xC3A020", VA = "0xC3A020")]
		public CsvSessionLogger(State state)
		{
		}

		[Token(Token = "0x6001DDB")]
		[Address(RVA = "0xC3A5A4", Offset = "0xC3A5A4", VA = "0xC3A5A4", Slot = "4")]
		public void TrackEvent(string eventName)
		{
		}

		[Token(Token = "0x6001DDC")]
		[Address(RVA = "0xC3A6B4", Offset = "0xC3A6B4", VA = "0xC3A6B4", Slot = "5")]
		public void TrackEvent(string eventName, Dictionary<string, object> values)
		{
		}

		[Token(Token = "0x6001DDD")]
		[Address(RVA = "0xC3B078", Offset = "0xC3B078", VA = "0xC3B078")]
		private string FormatFloatValue(float v)
		{
			return null;
		}

		[Token(Token = "0x6001DDE")]
		[Address(RVA = "0xC3B0AC", Offset = "0xC3B0AC", VA = "0xC3B0AC")]
		private void EmulateHeavyLogging()
		{
		}

		[Token(Token = "0x6001DDF")]
		[Address(RVA = "0xC3A378", Offset = "0xC3A378", VA = "0xC3A378")]
		private string GetSessionMetaData()
		{
			return null;
		}

		[Token(Token = "0x6001DE0")]
		[Address(RVA = "0xC3A5DC", Offset = "0xC3A5DC", VA = "0xC3A5DC")]
		private string GetDefaultProps()
		{
			return null;
		}

		[Token(Token = "0x6001DE1")]
		[Address(RVA = "0xC3A50C", Offset = "0xC3A50C", VA = "0xC3A50C")]
		private void WriteLineToFile(string line)
		{
		}
	}
	[Token(Token = "0x200058F")]
	public interface IAnalyticsTracker
	{
		[Token(Token = "0x6001DE2")]
		void TrackEvent(string eventName);

		[Token(Token = "0x6001DE3")]
		void TrackEvent(string eventName, Dictionary<string, object> value);
	}
	[Token(Token = "0x2000590")]
	public class JsonSessionLogger : IAnalyticsTracker
	{
		[Token(Token = "0x4001E2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private State _state;

		[Token(Token = "0x4001E2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private string _sessionFileName;

		[Token(Token = "0x4001E30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private JSONObject _session;

		[Token(Token = "0x4001E31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private JSONArray _sessionEvents;

		[Token(Token = "0x4001E32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private JSONArray _lastPuzzleOpenedMoves;

		[Token(Token = "0x4001E33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private string[] _moveEvents;

		[Token(Token = "0x6001DE4")]
		[Address(RVA = "0xC3B104", Offset = "0xC3B104", VA = "0xC3B104")]
		public JsonSessionLogger(State state)
		{
		}

		[Token(Token = "0x6001DE5")]
		[Address(RVA = "0xC3B848", Offset = "0xC3B848", VA = "0xC3B848", Slot = "4")]
		public void TrackEvent(string eventName)
		{
		}

		[Token(Token = "0x6001DE6")]
		[Address(RVA = "0xC3BA60", Offset = "0xC3BA60", VA = "0xC3BA60", Slot = "5")]
		public void TrackEvent(string eventName, Dictionary<string, object> values)
		{
		}

		[Token(Token = "0x6001DE7")]
		[Address(RVA = "0xC3B754", Offset = "0xC3B754", VA = "0xC3B754")]
		private void EmulateHeavyLogging()
		{
		}

		[Token(Token = "0x6001DE8")]
		[Address(RVA = "0xC3B4C0", Offset = "0xC3B4C0", VA = "0xC3B4C0")]
		private JSONObject GetSessionMetaData()
		{
			return null;
		}

		[Token(Token = "0x6001DE9")]
		[Address(RVA = "0xC3B8EC", Offset = "0xC3B8EC", VA = "0xC3B8EC")]
		private JSONObject GetDefaultProps()
		{
			return null;
		}

		[Token(Token = "0x6001DEA")]
		[Address(RVA = "0xC3B7AC", Offset = "0xC3B7AC", VA = "0xC3B7AC")]
		private void SaveJSON()
		{
		}
	}
	[Token(Token = "0x2000591")]
	public class MixpanelAnalytics : IAnalyticsTracker
	{
		[Token(Token = "0x4001E34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private State _state;

		[Token(Token = "0x4001E35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private string[] DoNotTrack;

		[Token(Token = "0x6001DEB")]
		[Address(RVA = "0xC3BF8C", Offset = "0xC3BF8C", VA = "0xC3BF8C")]
		public MixpanelAnalytics(State state)
		{
		}

		[Token(Token = "0x6001DEC")]
		[Address(RVA = "0xC3C0D4", Offset = "0xC3C0D4", VA = "0xC3C0D4", Slot = "4")]
		public void TrackEvent(string eventName)
		{
		}

		[Token(Token = "0x6001DED")]
		[Address(RVA = "0xC3C6E8", Offset = "0xC3C6E8", VA = "0xC3C6E8", Slot = "5")]
		public void TrackEvent(string eventName, Dictionary<string, object> value)
		{
		}

		[Token(Token = "0x6001DEE")]
		[Address(RVA = "0xC3C184", Offset = "0xC3C184", VA = "0xC3C184")]
		private Value GetDefaultProps()
		{
			return null;
		}
	}
	[Token(Token = "0x2000592")]
	public class NullAnalytics : IAnalyticsTracker
	{
		[Token(Token = "0x6001DEF")]
		[Address(RVA = "0xC3CA40", Offset = "0xC3CA40", VA = "0xC3CA40", Slot = "4")]
		public void TrackEvent(string eventName)
		{
		}

		[Token(Token = "0x6001DF0")]
		[Address(RVA = "0xC3CA44", Offset = "0xC3CA44", VA = "0xC3CA44", Slot = "5")]
		public void TrackEvent(string eventName, Dictionary<string, object> value)
		{
		}

		[Token(Token = "0x6001DF1")]
		[Address(RVA = "0xC3CA48", Offset = "0xC3CA48", VA = "0xC3CA48")]
		public NullAnalytics()
		{
		}
	}
	[Token(Token = "0x2000593")]
	public class UnityAnalytics : IAnalyticsTracker
	{
		[Token(Token = "0x4001E36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private State _state;

		[Token(Token = "0x4001E37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private string[] DoNotTrack;

		[Token(Token = "0x6001DF2")]
		[Address(RVA = "0xC3CA50", Offset = "0xC3CA50", VA = "0xC3CA50")]
		public UnityAnalytics(State state)
		{
		}

		[Token(Token = "0x6001DF3")]
		[Address(RVA = "0xC3CB64", Offset = "0xC3CB64", VA = "0xC3CB64", Slot = "4")]
		public void TrackEvent(string eventName)
		{
		}

		[Token(Token = "0x6001DF4")]
		[Address(RVA = "0xC3CF14", Offset = "0xC3CF14", VA = "0xC3CF14", Slot = "5")]
		public void TrackEvent(string eventName, Dictionary<string, object> value)
		{
		}

		[Token(Token = "0x6001DF5")]
		[Address(RVA = "0xC3CC14", Offset = "0xC3CC14", VA = "0xC3CC14")]
		private Dictionary<string, object> GetDefaultProps()
		{
			return null;
		}
	}
	[Token(Token = "0x2000594")]
	public class DailyPuzzleLoader : MonoBehaviour
	{
		[Token(Token = "0x2000595")]
		[CompilerGenerated]
		private sealed class <_PopulatePuzzles>d__8 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001E3D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001E3E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001E3F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public DailyPuzzleLoader <>4__this;

			[Token(Token = "0x4001E40")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private bool <populated>5__2;

			[Token(Token = "0x170002A8")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001E04")]
				[Address(RVA = "0xC3D920", Offset = "0xC3D920", VA = "0xC3D920", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002A9")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001E06")]
				[Address(RVA = "0xC3D968", Offset = "0xC3D968", VA = "0xC3D968", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001E01")]
			[Address(RVA = "0xC3D488", Offset = "0xC3D488", VA = "0xC3D488")]
			[DebuggerHidden]
			public <_PopulatePuzzles>d__8(int <>1__state)
			{
			}

			[Token(Token = "0x6001E02")]
			[Address(RVA = "0xC3D7E4", Offset = "0xC3D7E4", VA = "0xC3D7E4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001E03")]
			[Address(RVA = "0xC3D7E8", Offset = "0xC3D7E8", VA = "0xC3D7E8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001E05")]
			[Address(RVA = "0xC3D928", Offset = "0xC3D928", VA = "0xC3D928", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000596")]
		[CompilerGenerated]
		private sealed class <LoadFromWebPost>d__12 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001E41")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001E42")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001E43")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public DailyPuzzleLoader <>4__this;

			[Token(Token = "0x4001E44")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private UnityWebRequest <www>5__2;

			[Token(Token = "0x170002AA")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001E0A")]
				[Address(RVA = "0xC3DCE8", Offset = "0xC3DCE8", VA = "0xC3DCE8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002AB")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001E0C")]
				[Address(RVA = "0xC3DD30", Offset = "0xC3DD30", VA = "0xC3DD30", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001E07")]
			[Address(RVA = "0xC3D720", Offset = "0xC3D720", VA = "0xC3D720")]
			[DebuggerHidden]
			public <LoadFromWebPost>d__12(int <>1__state)
			{
			}

			[Token(Token = "0x6001E08")]
			[Address(RVA = "0xC3D970", Offset = "0xC3D970", VA = "0xC3D970", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001E09")]
			[Address(RVA = "0xC3D974", Offset = "0xC3D974", VA = "0xC3D974", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001E0B")]
			[Address(RVA = "0xC3DCF0", Offset = "0xC3DCF0", VA = "0xC3DCF0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000597")]
		[CompilerGenerated]
		private sealed class <LoadMetaFromWeb>d__13 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001E45")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001E46")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001E47")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public DailyPuzzleLoader <>4__this;

			[Token(Token = "0x4001E48")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private UnityWebRequest <w>5__2;

			[Token(Token = "0x170002AC")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001E10")]
				[Address(RVA = "0xC3E0A4", Offset = "0xC3E0A4", VA = "0xC3E0A4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002AD")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001E12")]
				[Address(RVA = "0xC3E0EC", Offset = "0xC3E0EC", VA = "0xC3E0EC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001E0D")]
			[Address(RVA = "0xC3D7B0", Offset = "0xC3D7B0", VA = "0xC3D7B0")]
			[DebuggerHidden]
			public <LoadMetaFromWeb>d__13(int <>1__state)
			{
			}

			[Token(Token = "0x6001E0E")]
			[Address(RVA = "0xC3DD38", Offset = "0xC3DD38", VA = "0xC3DD38", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001E0F")]
			[Address(RVA = "0xC3DD3C", Offset = "0xC3DD3C", VA = "0xC3DD3C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001E11")]
			[Address(RVA = "0xC3E0AC", Offset = "0xC3E0AC", VA = "0xC3E0AC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001E38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int _day;

		[Token(Token = "0x4001E39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int _week;

		[Token(Token = "0x4001E3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private State _state;

		[Token(Token = "0x4001E3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private StageSetParser _parser;

		[Token(Token = "0x4001E3C")]
		private const string BaseUrl = "https://www.cubism-vr.com/dailyPuzzle.php";

		[Token(Token = "0x6001DF6")]
		[Address(RVA = "0xC3D2A8", Offset = "0xC3D2A8", VA = "0xC3D2A8")]
		public void Setup(State state, StageSetParser stageSetParser)
		{
		}

		[Token(Token = "0x6001DF7")]
		[Address(RVA = "0xC3D3FC", Offset = "0xC3D3FC", VA = "0xC3D3FC")]
		public void ClearAll()
		{
		}

		[Token(Token = "0x6001DF8")]
		[Address(RVA = "0xC3D3BC", Offset = "0xC3D3BC", VA = "0xC3D3BC")]
		public void PopulatePuzzles()
		{
		}

		[Token(Token = "0x6001DF9")]
		[Address(RVA = "0xC3D420", Offset = "0xC3D420", VA = "0xC3D420")]
		[IteratorStateMachine(typeof(<_PopulatePuzzles>d__8))]
		private IEnumerator _PopulatePuzzles()
		{
			return null;
		}

		[Token(Token = "0x6001DFA")]
		[Address(RVA = "0xC3D2C4", Offset = "0xC3D2C4", VA = "0xC3D2C4")]
		private void SetDayWeek()
		{
		}

		[Token(Token = "0x6001DFB")]
		[Address(RVA = "0xC3D5A4", Offset = "0xC3D5A4", VA = "0xC3D5A4")]
		private string GetDailyUrl()
		{
			return null;
		}

		[Token(Token = "0x6001DFC")]
		[Address(RVA = "0xC3D4B0", Offset = "0xC3D4B0", VA = "0xC3D4B0")]
		public int GetIso8601WeekOfYear(DateTime time)
		{
			return default(int);
		}

		[Token(Token = "0x6001DFD")]
		[Address(RVA = "0xC3D6B8", Offset = "0xC3D6B8", VA = "0xC3D6B8")]
		[IteratorStateMachine(typeof(<LoadFromWebPost>d__12))]
		private IEnumerator LoadFromWebPost()
		{
			return null;
		}

		[Token(Token = "0x6001DFE")]
		[Address(RVA = "0xC3D748", Offset = "0xC3D748", VA = "0xC3D748")]
		[IteratorStateMachine(typeof(<LoadMetaFromWeb>d__13))]
		private IEnumerator LoadMetaFromWeb()
		{
			return null;
		}

		[Token(Token = "0x6001DFF")]
		[Address(RVA = "0xC3D7D8", Offset = "0xC3D7D8", VA = "0xC3D7D8")]
		public void Update()
		{
		}

		[Token(Token = "0x6001E00")]
		[Address(RVA = "0xC3D7DC", Offset = "0xC3D7DC", VA = "0xC3D7DC")]
		public DailyPuzzleLoader()
		{
		}
	}
	[Token(Token = "0x2000598")]
	public interface iDlcApi
	{
		[Token(Token = "0x6001E13")]
		void BuyPuzzlePackOne(Action SuccessCallback, Action<string> ErrorCallback);
	}
	[Token(Token = "0x2000599")]
	public class DlcApiOculus : iDlcApi
	{
		[Token(Token = "0x200059A")]
		[CompilerGenerated]
		private sealed class <WaitForCoreAndInitialize>d__3 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001E4B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001E4C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001E4D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public DlcApiOculus <>4__this;

			[Token(Token = "0x170002AE")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001E1E")]
				[Address(RVA = "0xC3EF48", Offset = "0xC3EF48", VA = "0xC3EF48", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002AF")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001E20")]
				[Address(RVA = "0xC3EF90", Offset = "0xC3EF90", VA = "0xC3EF90", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001E1B")]
			[Address(RVA = "0xC3E270", Offset = "0xC3E270", VA = "0xC3E270")]
			[DebuggerHidden]
			public <WaitForCoreAndInitialize>d__3(int <>1__state)
			{
			}

			[Token(Token = "0x6001E1C")]
			[Address(RVA = "0xC3EE68", Offset = "0xC3EE68", VA = "0xC3EE68", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001E1D")]
			[Address(RVA = "0xC3EE6C", Offset = "0xC3EE6C", VA = "0xC3EE6C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001E1F")]
			[Address(RVA = "0xC3EF50", Offset = "0xC3EF50", VA = "0xC3EF50", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001E49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private State _state;

		[Token(Token = "0x4001E4A")]
		private const string PuzzlePackOne = "PuzzlePackOne";

		[Token(Token = "0x6001E14")]
		[Address(RVA = "0xC3E0F4", Offset = "0xC3E0F4", VA = "0xC3E0F4")]
		public DlcApiOculus(State state)
		{
		}

		[Token(Token = "0x6001E15")]
		[Address(RVA = "0xC3E208", Offset = "0xC3E208", VA = "0xC3E208")]
		[IteratorStateMachine(typeof(<WaitForCoreAndInitialize>d__3))]
		private IEnumerator WaitForCoreAndInitialize()
		{
			return null;
		}

		[Token(Token = "0x6001E16")]
		[Address(RVA = "0xC3E298", Offset = "0xC3E298", VA = "0xC3E298")]
		public void FetchProductInfo()
		{
		}

		[Token(Token = "0x6001E17")]
		[Address(RVA = "0xC3E400", Offset = "0xC3E400", VA = "0xC3E400")]
		private void GetProductsBySKUCallback(Message<ProductList> msg)
		{
		}

		[Token(Token = "0x6001E18")]
		[Address(RVA = "0xC3E808", Offset = "0xC3E808", VA = "0xC3E808")]
		public void FetchPurchasedProducts()
		{
		}

		[Token(Token = "0x6001E19")]
		[Address(RVA = "0xC3E8B4", Offset = "0xC3E8B4", VA = "0xC3E8B4")]
		private void GetViewerPurchasesCallback(Message<PurchaseList> msg)
		{
		}

		[Token(Token = "0x6001E1A")]
		[Address(RVA = "0xC3ED60", Offset = "0xC3ED60", VA = "0xC3ED60", Slot = "4")]
		public void BuyPuzzlePackOne(Action SuccessCallback, Action<string> ErrorCallback)
		{
		}
	}
	[Token(Token = "0x200059C")]
	public class DlcPuzzleService : Loader
	{
		[Token(Token = "0x200059D")]
		[CompilerGenerated]
		private sealed class <CheckEntitlementsAndInitialize>d__10 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001E55")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001E56")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001E57")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public DlcPuzzleService <>4__this;

			[Token(Token = "0x170002B0")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001E2F")]
				[Address(RVA = "0xC3F80C", Offset = "0xC3F80C", VA = "0xC3F80C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002B1")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001E31")]
				[Address(RVA = "0xC3F854", Offset = "0xC3F854", VA = "0xC3F854", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001E2C")]
			[Address(RVA = "0xC3F5B4", Offset = "0xC3F5B4", VA = "0xC3F5B4")]
			[DebuggerHidden]
			public <CheckEntitlementsAndInitialize>d__10(int <>1__state)
			{
			}

			[Token(Token = "0x6001E2D")]
			[Address(RVA = "0xC3F67C", Offset = "0xC3F67C", VA = "0xC3F67C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001E2E")]
			[Address(RVA = "0xC3F680", Offset = "0xC3F680", VA = "0xC3F680", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001E30")]
			[Address(RVA = "0xC3F814", Offset = "0xC3F814", VA = "0xC3F814", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200059E")]
		[CompilerGenerated]
		private sealed class <CheckToDownloadTimber>d__12 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001E58")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001E59")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001E5A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public DlcPuzzleService <>4__this;

			[Token(Token = "0x170002B2")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001E35")]
				[Address(RVA = "0xC3F8E4", Offset = "0xC3F8E4", VA = "0xC3F8E4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002B3")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001E37")]
				[Address(RVA = "0xC3F92C", Offset = "0xC3F92C", VA = "0xC3F92C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001E32")]
			[Address(RVA = "0xC3F64C", Offset = "0xC3F64C", VA = "0xC3F64C")]
			[DebuggerHidden]
			public <CheckToDownloadTimber>d__12(int <>1__state)
			{
			}

			[Token(Token = "0x6001E33")]
			[Address(RVA = "0xC3F85C", Offset = "0xC3F85C", VA = "0xC3F85C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001E34")]
			[Address(RVA = "0xC3F860", Offset = "0xC3F860", VA = "0xC3F860", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001E36")]
			[Address(RVA = "0xC3F8EC", Offset = "0xC3F8EC", VA = "0xC3F8EC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001E50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private State _state;

		[Token(Token = "0x4001E51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private TextAsset _setAsset;

		[Token(Token = "0x4001E52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private LevelViewVrui _levelViewVrui;

		[Token(Token = "0x4001E53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private StageSetParser _parser;

		[Token(Token = "0x4001E54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private iDlcApi _dlcApi;

		[Token(Token = "0x6001E23")]
		[Address(RVA = "0xC3F11C", Offset = "0xC3F11C", VA = "0xC3F11C")]
		public DlcPuzzleService(State state, TextAsset setAsset, LevelViewVrui levelView)
		{
		}

		[Token(Token = "0x6001E24")]
		[Address(RVA = "0xC3F2C8", Offset = "0xC3F2C8", VA = "0xC3F2C8")]
		private void RegisterActions(ControllerAction action)
		{
		}

		[Token(Token = "0x6001E25")]
		[Address(RVA = "0xC3F4B0", Offset = "0xC3F4B0", VA = "0xC3F4B0")]
		private void PurchaseErrorCallback(string errorMessage)
		{
		}

		[Token(Token = "0x6001E26")]
		[Address(RVA = "0xC3F4B4", Offset = "0xC3F4B4", VA = "0xC3F4B4")]
		private void PurchaseSucessCallback()
		{
		}

		[Token(Token = "0x6001E27")]
		[Address(RVA = "0xC3F51C", Offset = "0xC3F51C", VA = "0xC3F51C")]
		private void PopulateVrui()
		{
		}

		[Token(Token = "0x6001E28")]
		[Address(RVA = "0xC3F54C", Offset = "0xC3F54C", VA = "0xC3F54C")]
		[IteratorStateMachine(typeof(<CheckEntitlementsAndInitialize>d__10))]
		public IEnumerator CheckEntitlementsAndInitialize()
		{
			return null;
		}

		[Token(Token = "0x6001E29")]
		[Address(RVA = "0xC3F5DC", Offset = "0xC3F5DC", VA = "0xC3F5DC")]
		private bool EntitledToTimberPack()
		{
			return default(bool);
		}

		[Token(Token = "0x6001E2A")]
		[Address(RVA = "0xC3F5E4", Offset = "0xC3F5E4", VA = "0xC3F5E4")]
		[IteratorStateMachine(typeof(<CheckToDownloadTimber>d__12))]
		private IEnumerator CheckToDownloadTimber()
		{
			return null;
		}

		[Token(Token = "0x6001E2B")]
		[Address(RVA = "0xC3F674", Offset = "0xC3F674", VA = "0xC3F674")]
		private bool PackDownloaded()
		{
			return default(bool);
		}
	}
	[Token(Token = "0x200059F")]
	public class GameModeService
	{
		[Token(Token = "0x4001E5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private GameState _gameState;

		[Token(Token = "0x4001E5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private ActiveLevel _activeLevel;

		[Token(Token = "0x4001E5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private PuzzleLoader _puzzleLoader;

		[Token(Token = "0x4001E5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Mode[] _puzzleAllowedOrigins;

		[Token(Token = "0x4001E5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Mode _modeToSet;

		[Token(Token = "0x6001E38")]
		[Address(RVA = "0xC3F934", Offset = "0xC3F934", VA = "0xC3F934")]
		public GameModeService(State state, PuzzleLoader loader)
		{
		}

		[Token(Token = "0x6001E39")]
		[Address(RVA = "0xC3FAA4", Offset = "0xC3FAA4", VA = "0xC3FAA4")]
		private void RegisterActions(ControllerAction action)
		{
		}

		[Token(Token = "0x6001E3A")]
		[Address(RVA = "0xC3FCE0", Offset = "0xC3FCE0", VA = "0xC3FCE0")]
		private void ToPuzzleState()
		{
		}

		[Token(Token = "0x6001E3B")]
		[Address(RVA = "0xC3FDEC", Offset = "0xC3FDEC", VA = "0xC3FDEC")]
		private void SetGameModeCallback()
		{
		}

		[Token(Token = "0x6001E3C")]
		[Address(RVA = "0xC3FBBC", Offset = "0xC3FBBC", VA = "0xC3FBBC")]
		private void SetGameMode(Mode mode)
		{
		}
	}
	[Token(Token = "0x20005A0")]
	public class InputManager : SetupableBehaviour
	{
		[Token(Token = "0x4001E60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static InputManager I;

		[Token(Token = "0x4001E61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public OculusHandInput _oculusHandInput;

		[Token(Token = "0x4001E62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public SteamVrInput2 _steamVrInput;

		[Token(Token = "0x4001E63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public PicoInput _picoInput;

		[Token(Token = "0x4001E64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public MockInput _mockInput;

		[Token(Token = "0x4001E65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public OpenXrInput _openXrInput;

		[Token(Token = "0x4001E66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[Space(35f)]
		public GameObject _steamVrActionSetLoader;

		[Token(Token = "0x4001E67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private InputSource _input;

		[Token(Token = "0x6001E3D")]
		[Address(RVA = "0xC3FDF4", Offset = "0xC3FDF4", VA = "0xC3FDF4")]
		public new void Setup()
		{
		}

		[Token(Token = "0x6001E3E")]
		[Address(RVA = "0xC3FFB4", Offset = "0xC3FFB4", VA = "0xC3FFB4")]
		public bool MenuPressed(Hand hand)
		{
			return default(bool);
		}

		[Token(Token = "0x6001E3F")]
		[Address(RVA = "0xC3FFDC", Offset = "0xC3FFDC", VA = "0xC3FFDC")]
		public bool MenuPressed()
		{
			return default(bool);
		}

		[Token(Token = "0x6001E40")]
		[Address(RVA = "0xC3FFFC", Offset = "0xC3FFFC", VA = "0xC3FFFC")]
		public bool MenuDown(Hand hand)
		{
			return default(bool);
		}

		[Token(Token = "0x6001E41")]
		[Address(RVA = "0xC40024", Offset = "0xC40024", VA = "0xC40024")]
		public bool MenuDown()
		{
			return default(bool);
		}

		[Token(Token = "0x6001E42")]
		[Address(RVA = "0xC40044", Offset = "0xC40044", VA = "0xC40044")]
		public bool Gather(Hand hand)
		{
			return default(bool);
		}

		[Token(Token = "0x6001E43")]
		[Address(RVA = "0xC37030", Offset = "0xC37030", VA = "0xC37030")]
		public bool Trigger(Hand hand)
		{
			return default(bool);
		}

		[Token(Token = "0x6001E44")]
		[Address(RVA = "0xC4006C", Offset = "0xC4006C", VA = "0xC4006C")]
		public float TriggerAxis(Hand hand)
		{
			return default(float);
		}

		[Token(Token = "0x6001E45")]
		[Address(RVA = "0xC34F3C", Offset = "0xC34F3C", VA = "0xC34F3C")]
		public bool TriggerDown(Hand hand)
		{
			return default(bool);
		}

		[Token(Token = "0x6001E46")]
		[Address(RVA = "0xC40094", Offset = "0xC40094", VA = "0xC40094")]
		public bool TriggerUp(Hand hand)
		{
			return default(bool);
		}

		[Token(Token = "0x6001E47")]
		[Address(RVA = "0xC37058", Offset = "0xC37058", VA = "0xC37058")]
		public bool Grip(Hand hand)
		{
			return default(bool);
		}

		[Token(Token = "0x6001E48")]
		[Address(RVA = "0xC400BC", Offset = "0xC400BC", VA = "0xC400BC")]
		public float GripAxis(Hand hand)
		{
			return default(float);
		}

		[Token(Token = "0x6001E49")]
		[Address(RVA = "0xC37084", Offset = "0xC37084", VA = "0xC37084")]
		public bool GripDown(Hand hand)
		{
			return default(bool);
		}

		[Token(Token = "0x6001E4A")]
		[Address(RVA = "0xC400E8", Offset = "0xC400E8", VA = "0xC400E8")]
		public bool GripUp(Hand hand)
		{
			return default(bool);
		}

		[Token(Token = "0x6001E4B")]
		[Address(RVA = "0xC40114", Offset = "0xC40114", VA = "0xC40114")]
		public bool TwoHandGrip()
		{
			return default(bool);
		}

		[Token(Token = "0x6001E4C")]
		[Address(RVA = "0xC40138", Offset = "0xC40138", VA = "0xC40138")]
		public Vector2 RotatePieceAxis(Hand hand)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6001E4D")]
		[Address(RVA = "0xC40164", Offset = "0xC40164", VA = "0xC40164")]
		public bool SecondaryButton(Hand hand)
		{
			return default(bool);
		}

		[Token(Token = "0x6001E4E")]
		[Address(RVA = "0xC40190", Offset = "0xC40190", VA = "0xC40190")]
		public bool SecondaryButtonDown(Hand hand)
		{
			return default(bool);
		}

		[Token(Token = "0x6001E4F")]
		[Address(RVA = "0xC29DAC", Offset = "0xC29DAC", VA = "0xC29DAC")]
		public bool Reposition(Hand hand)
		{
			return default(bool);
		}

		[Token(Token = "0x6001E50")]
		[Address(RVA = "0xC3FEB0", Offset = "0xC3FEB0", VA = "0xC3FEB0")]
		private InputSource GetInput()
		{
			return null;
		}

		[Token(Token = "0x6001E51")]
		[Address(RVA = "0xC401BC", Offset = "0xC401BC", VA = "0xC401BC")]
		public InputManager()
		{
		}
	}
	[Token(Token = "0x20005A1")]
	public class PuzzleDetectionBoundingBox : PuzzleDetectionGridCells
	{
		[Token(Token = "0x4001E68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public PuzzlePosition _puzzlePosition;

		[Token(Token = "0x4001E69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Transform _gridCenter;

		[Token(Token = "0x4001E6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public Transform _boundsTrigger;

		[Token(Token = "0x4001E6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public AutoCube _cube;

		[Token(Token = "0x4001E6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public Grid _grid;

		[Token(Token = "0x4001E6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Vector3 _remappedScale;

		[Token(Token = "0x4001E6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		private Bounds _localBounds;

		[Token(Token = "0x4001E6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		private bool _dirtyBounds;

		[Token(Token = "0x6001E52")]
		[Address(RVA = "0xC401C4", Offset = "0xC401C4", VA = "0xC401C4")]
		private void Start()
		{
		}

		[Token(Token = "0x6001E53")]
		[Address(RVA = "0xC40300", Offset = "0xC40300", VA = "0xC40300")]
		private void Update()
		{
		}

		[Token(Token = "0x6001E54")]
		[Address(RVA = "0xC40658", Offset = "0xC40658", VA = "0xC40658")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6001E55")]
		[Address(RVA = "0xC406AC", Offset = "0xC406AC", VA = "0xC406AC")]
		private void SetBoundsDirtyIfEditing(Mode obj)
		{
		}

		[Token(Token = "0x6001E56")]
		[Address(RVA = "0xC406B0", Offset = "0xC406B0", VA = "0xC406B0")]
		private void SetBoundsDirtyIfEditing(GridCell cell)
		{
		}

		[Token(Token = "0x6001E57")]
		[Address(RVA = "0xC4055C", Offset = "0xC4055C", VA = "0xC4055C")]
		private void SetAutoCubeSize()
		{
		}

		[Token(Token = "0x6001E58")]
		[Address(RVA = "0xC406EC", Offset = "0xC406EC", VA = "0xC406EC")]
		public PuzzleDetectionBoundingBox()
		{
		}
	}
	[Token(Token = "0x20005A2")]
	public class PuzzleDetectionBoundingBoxView : MonoBehaviour
	{
		[Token(Token = "0x4001E70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public PuzzleDetectionBoundingBox detection;

		[Token(Token = "0x4001E71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Bounds _bounds;

		[Token(Token = "0x6001E59")]
		[Address(RVA = "0xC406F4", Offset = "0xC406F4", VA = "0xC406F4")]
		private void Update()
		{
		}

		[Token(Token = "0x6001E5A")]
		[Address(RVA = "0xC406F8", Offset = "0xC406F8", VA = "0xC406F8")]
		public PuzzleDetectionBoundingBoxView()
		{
		}
	}
	[Token(Token = "0x20005A3")]
	public class PuzzleGrabInput : StateBehaviour
	{
		[Token(Token = "0x4001E74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public PuzzleDetection _puzzleDetection;

		[Token(Token = "0x4001E75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[Header("Debug")]
		[SerializeField]
		private GrabState _leftGrabState;

		[Token(Token = "0x4001E76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private GrabState _rightGrabState;

		[Token(Token = "0x4001E77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private bool _grabbed;

		[Token(Token = "0x140000AC")]
		public event Action OnPuzzleGrabbed
		{
			[Token(Token = "0x6001E5B")]
			[Address(RVA = "0xC40700", Offset = "0xC40700", VA = "0xC40700")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6001E5C")]
			[Address(RVA = "0xC4079C", Offset = "0xC4079C", VA = "0xC4079C")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x140000AD")]
		public event Action OnPuzzleReleased
		{
			[Token(Token = "0x6001E5D")]
			[Address(RVA = "0xC40838", Offset = "0xC40838", VA = "0xC40838")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6001E5E")]
			[Address(RVA = "0xC408D4", Offset = "0xC408D4", VA = "0xC408D4")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x6001E5F")]
		[Address(RVA = "0xC40970", Offset = "0xC40970", VA = "0xC40970")]
		private void Start()
		{
		}

		[Token(Token = "0x6001E60")]
		[Address(RVA = "0xC40B08", Offset = "0xC40B08", VA = "0xC40B08")]
		private void Update()
		{
		}

		[Token(Token = "0x6001E61")]
		[Address(RVA = "0xC40E1C", Offset = "0xC40E1C", VA = "0xC40E1C")]
		public bool GrabbingPuzzle(Hand hand)
		{
			return default(bool);
		}

		[Token(Token = "0x6001E62")]
		[Address(RVA = "0xC40E44", Offset = "0xC40E44", VA = "0xC40E44")]
		public PuzzleGrabInput()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20005A4")]
	public class GrabState
	{
		[Token(Token = "0x4001E79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[Header("Debug")]
		private GrabMethod _grabMethod;

		[Token(Token = "0x4001E7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Hand _hand;

		[Token(Token = "0x4001E7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private PuzzleDetection _puzzleDetection;

		[Token(Token = "0x4001E7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private GrabButton _grabbingButton;

		[Token(Token = "0x4001E7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private Vector3 _puzzleGrabPos;

		[Token(Token = "0x4001E7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Player _player;

		[Token(Token = "0x4001E7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private FingerTips _fingerTips;

		[Token(Token = "0x4001E80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Transform _grid;

		[Token(Token = "0x4001E81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private State _state;

		[Token(Token = "0x4001E82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private int _releaseFrames;

		[Token(Token = "0x4001E83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private int _highConfidenceFrames;

		[Token(Token = "0x4001E84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private float _grabCurl;

		[Token(Token = "0x4001E85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private float _grabDistIndex;

		[Token(Token = "0x4001E86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private float _releaseTreshold;

		[Token(Token = "0x4001E87")]
		private const float ReleaseCurlMargin = 20f;

		[Token(Token = "0x4001E88")]
		private const float ReleaseTreshold = 0.03f;

		[Token(Token = "0x4001E89")]
		private const float ReleaseTresholdLc = 0.04f;

		[Token(Token = "0x4001E8A")]
		private const int FramesToRelease = 5;

		[Token(Token = "0x4001E8B")]
		private const int MinHighConfidenceFrames = 3;

		[Token(Token = "0x4001E8C")]
		private const float MaxGrabDist = 0.1f;

		[Token(Token = "0x4001E8D")]
		private const float MaxGrabDistHt = 0.25f;

		[Token(Token = "0x170002B4")]
		public bool IsGrabbing
		{
			[Token(Token = "0x6001E63")]
			[Address(RVA = "0xC40E4C", Offset = "0xC40E4C", VA = "0xC40E4C")]
			[CompilerGenerated]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001E64")]
			[Address(RVA = "0xC40E54", Offset = "0xC40E54", VA = "0xC40E54")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x6001E65")]
		[Address(RVA = "0xC40A34", Offset = "0xC40A34", VA = "0xC40A34")]
		public GrabState(Hand hand, PuzzleDetection puzzleDetection, State state)
		{
		}

		[Token(Token = "0x6001E66")]
		[Address(RVA = "0xC40BC4", Offset = "0xC40BC4", VA = "0xC40BC4")]
		public void UpdateGrabState()
		{
		}

		[Token(Token = "0x6001E67")]
		[Address(RVA = "0xC40E60", Offset = "0xC40E60", VA = "0xC40E60")]
		private bool GetGrabState()
		{
			return default(bool);
		}

		[Token(Token = "0x6001E68")]
		[Address(RVA = "0xC414A8", Offset = "0xC414A8", VA = "0xC414A8")]
		private bool TriggerDown()
		{
			return default(bool);
		}

		[Token(Token = "0x6001E69")]
		[Address(RVA = "0xC41594", Offset = "0xC41594", VA = "0xC41594")]
		private bool GripDown()
		{
			return default(bool);
		}

		[Token(Token = "0x6001E6A")]
		[Address(RVA = "0xC411A4", Offset = "0xC411A4", VA = "0xC411A4")]
		private bool CheckInteractUp()
		{
			return default(bool);
		}

		[Token(Token = "0x6001E6B")]
		[Address(RVA = "0xC41680", Offset = "0xC41680", VA = "0xC41680")]
		private void DrawGrabDebug(bool ignored)
		{
		}
	}
	[Token(Token = "0x20005A5")]
	public class SceneEffects : MonoBehaviour
	{
		[Token(Token = "0x20005A6")]
		[CompilerGenerated]
		private sealed class <PopulatePools>d__3 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001E90")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001E91")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001E92")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SceneEffects <>4__this;

			[Token(Token = "0x170002B5")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001E72")]
				[Address(RVA = "0xC42B58", Offset = "0xC42B58", VA = "0xC42B58", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002B6")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001E74")]
				[Address(RVA = "0xC42BA0", Offset = "0xC42BA0", VA = "0xC42BA0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001E6F")]
			[Address(RVA = "0xC42A94", Offset = "0xC42A94", VA = "0xC42A94")]
			[DebuggerHidden]
			public <PopulatePools>d__3(int <>1__state)
			{
			}

			[Token(Token = "0x6001E70")]
			[Address(RVA = "0xC42AC4", Offset = "0xC42AC4", VA = "0xC42AC4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001E71")]
			[Address(RVA = "0xC42AC8", Offset = "0xC42AC8", VA = "0xC42AC8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001E73")]
			[Address(RVA = "0xC42B60", Offset = "0xC42B60", VA = "0xC42B60", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001E8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static SceneEffects I;

		[Token(Token = "0x4001E8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public EdgePingPool edgePing;

		[Token(Token = "0x6001E6C")]
		[Address(RVA = "0xC42980", Offset = "0xC42980", VA = "0xC42980")]
		private void Start()
		{
		}

		[Token(Token = "0x6001E6D")]
		[Address(RVA = "0xC42A2C", Offset = "0xC42A2C", VA = "0xC42A2C")]
		[IteratorStateMachine(typeof(<PopulatePools>d__3))]
		private IEnumerator PopulatePools()
		{
			return null;
		}

		[Token(Token = "0x6001E6E")]
		[Address(RVA = "0xC42ABC", Offset = "0xC42ABC", VA = "0xC42ABC")]
		public SceneEffects()
		{
		}
	}
	[Token(Token = "0x20005A7")]
	public class SessionStats
	{
		[Token(Token = "0x4001E93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static SessionStats _instance;

		[Token(Token = "0x4001E94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private float _startTime;

		[Token(Token = "0x4001E95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private string _sessionId;

		[Token(Token = "0x4001E96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int sessionIndex;

		[Token(Token = "0x4001E97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private int puzzlesSolvedDuringSession;

		[Token(Token = "0x4001E98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int piecesPlacedDuringSolve;

		[Token(Token = "0x4001E99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private int piecesRemovedDuringSolve;

		[Token(Token = "0x4001E9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int piecesMovedDuringSolve;

		[Token(Token = "0x4001E9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private string lastRemovedPieceId;

		[Token(Token = "0x4001E9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private string _userId;

		[Token(Token = "0x170002B7")]
		public static SessionStats I
		{
			[Token(Token = "0x6001E75")]
			[Address(RVA = "0xC42BA8", Offset = "0xC42BA8", VA = "0xC42BA8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002B8")]
		public string UserId
		{
			[Token(Token = "0x6001E76")]
			[Address(RVA = "0xC42C30", Offset = "0xC42C30", VA = "0xC42C30")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001E77")]
			[Address(RVA = "0xC42C38", Offset = "0xC42C38", VA = "0xC42C38")]
			set
			{
			}
		}

		[Token(Token = "0x6001E78")]
		[Address(RVA = "0xC42C94", Offset = "0xC42C94", VA = "0xC42C94")]
		public void SetSessionStartValues()
		{
		}

		[Token(Token = "0x6001E79")]
		[Address(RVA = "0xC42E10", Offset = "0xC42E10", VA = "0xC42E10")]
		public float GetPlaytime()
		{
			return default(float);
		}

		[Token(Token = "0x6001E7A")]
		[Address(RVA = "0xC42E30", Offset = "0xC42E30", VA = "0xC42E30")]
		public string GetPlaytimeFormatted()
		{
			return null;
		}

		[Token(Token = "0x6001E7B")]
		[Address(RVA = "0xC42E54", Offset = "0xC42E54", VA = "0xC42E54")]
		public string GetSessionId()
		{
			return null;
		}

		[Token(Token = "0x6001E7C")]
		[Address(RVA = "0xC42E5C", Offset = "0xC42E5C", VA = "0xC42E5C")]
		public int GetSessionIndex()
		{
			return default(int);
		}

		[Token(Token = "0x6001E7D")]
		[Address(RVA = "0xC42E64", Offset = "0xC42E64", VA = "0xC42E64")]
		public void IncreasePuzzlesSolved()
		{
		}

		[Token(Token = "0x6001E7E")]
		[Address(RVA = "0xC42E74", Offset = "0xC42E74", VA = "0xC42E74")]
		public int GetPuzzlesSolvedDuringSession()
		{
			return default(int);
		}

		[Token(Token = "0x6001E7F")]
		[Address(RVA = "0xC42E7C", Offset = "0xC42E7C", VA = "0xC42E7C")]
		public void ResetSolveStats()
		{
		}

		[Token(Token = "0x6001E80")]
		[Address(RVA = "0xC42E8C", Offset = "0xC42E8C", VA = "0xC42E8C")]
		public void IncreasePiecesPlaced(string pieceId)
		{
		}

		[Token(Token = "0x6001E81")]
		[Address(RVA = "0xC42EE4", Offset = "0xC42EE4", VA = "0xC42EE4")]
		public void IncreasePiecesRemoved(string pieceId)
		{
		}

		[Token(Token = "0x6001E82")]
		[Address(RVA = "0xC42EEC", Offset = "0xC42EEC", VA = "0xC42EEC")]
		public int GetPiecesPlaced()
		{
			return default(int);
		}

		[Token(Token = "0x6001E83")]
		[Address(RVA = "0xC42EF4", Offset = "0xC42EF4", VA = "0xC42EF4")]
		public int GetPiecesRemoved()
		{
			return default(int);
		}

		[Token(Token = "0x6001E84")]
		[Address(RVA = "0xC42EFC", Offset = "0xC42EFC", VA = "0xC42EFC")]
		public int GetPiecesMoved()
		{
			return default(int);
		}

		[Token(Token = "0x6001E85")]
		[Address(RVA = "0xC42D9C", Offset = "0xC42D9C", VA = "0xC42D9C")]
		private void LoadIncreaseAndSaveSessionIndex()
		{
		}

		[Token(Token = "0x6001E86")]
		[Address(RVA = "0xC42C28", Offset = "0xC42C28", VA = "0xC42C28")]
		public SessionStats()
		{
		}
	}
	[Token(Token = "0x20005A8")]
	public class StaticPuzzleLoader
	{
		[Token(Token = "0x20005A9")]
		[CompilerGenerated]
		private sealed class <Recenter>d__12 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001EA4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001EA5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001EA6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public StaticPuzzleLoader <>4__this;

			[Token(Token = "0x170002B9")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001E91")]
				[Address(RVA = "0xC43A0C", Offset = "0xC43A0C", VA = "0xC43A0C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002BA")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001E93")]
				[Address(RVA = "0xC43A54", Offset = "0xC43A54", VA = "0xC43A54", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001E8E")]
			[Address(RVA = "0xC43928", Offset = "0xC43928", VA = "0xC43928")]
			[DebuggerHidden]
			public <Recenter>d__12(int <>1__state)
			{
			}

			[Token(Token = "0x6001E8F")]
			[Address(RVA = "0xC43950", Offset = "0xC43950", VA = "0xC43950", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001E90")]
			[Address(RVA = "0xC43954", Offset = "0xC43954", VA = "0xC43954", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001E92")]
			[Address(RVA = "0xC43A14", Offset = "0xC43A14", VA = "0xC43A14", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001E9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private PuzzleLoader _loader;

		[Token(Token = "0x4001E9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private StageSetParser _stageSetParser;

		[Token(Token = "0x4001E9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private ActiveLevel _activeLevel;

		[Token(Token = "0x4001EA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private GameState _gameState;

		[Token(Token = "0x4001EA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private PuzzlePosition _puzzlePosition;

		[Token(Token = "0x4001EA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private string _currentTitleString;

		[Token(Token = "0x4001EA3")]
		private const string CreditPuzzle = "credits2";

		[Token(Token = "0x6001E87")]
		[Address(RVA = "0xC42F04", Offset = "0xC42F04", VA = "0xC42F04")]
		public StaticPuzzleLoader(PuzzleLoader loader, ActiveLevel activeLevel, GameState gameState, PuzzlePosition puzzlePosition)
		{
		}

		[Token(Token = "0x6001E88")]
		[Address(RVA = "0xC431E8", Offset = "0xC431E8", VA = "0xC431E8")]
		private void CheckToReloadTitle()
		{
		}

		[Token(Token = "0x6001E89")]
		[Address(RVA = "0xC430AC", Offset = "0xC430AC", VA = "0xC430AC")]
		private string LanguageToTitlePuzzle()
		{
			return null;
		}

		[Token(Token = "0x6001E8A")]
		[Address(RVA = "0xC43260", Offset = "0xC43260", VA = "0xC43260")]
		public void LoadTitlePuzzle([Optional] Action callback)
		{
		}

		[Token(Token = "0x6001E8B")]
		[Address(RVA = "0xC4377C", Offset = "0xC4377C", VA = "0xC4377C")]
		public void LoadCreditsPuzzle([Optional] Action callback)
		{
		}

		[Token(Token = "0x6001E8C")]
		[Address(RVA = "0xC4343C", Offset = "0xC4343C", VA = "0xC4343C")]
		[IteratorStateMachine(typeof(<Recenter>d__12))]
		private IEnumerator Recenter()
		{
			return null;
		}

		[Token(Token = "0x6001E8D")]
		[Address(RVA = "0xC434A4", Offset = "0xC434A4", VA = "0xC434A4")]
		private Quaternion GetRot()
		{
			return default(Quaternion);
		}
	}
	[Token(Token = "0x20005AA")]
	public class UndoService : SetupableBehaviour
	{
		[Token(Token = "0x4001EA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private State _state;

		[Token(Token = "0x4001EA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private PieceCollection _pieces;

		[Token(Token = "0x4001EA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Grid _grid;

		[Token(Token = "0x4001EAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float _undoPressTimeStamp;

		[Token(Token = "0x4001EAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float _undoNextPressDelta;

		[Token(Token = "0x4001EAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float _redoPressTimeStamp;

		[Token(Token = "0x4001EAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private float _redoNextPressDelta;

		[Token(Token = "0x4001EAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private bool _startUndo;

		[Token(Token = "0x4001EAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
		private bool _stopUndo;

		[Token(Token = "0x6001E94")]
		[Address(RVA = "0xC43A5C", Offset = "0xC43A5C", VA = "0xC43A5C")]
		public void Setup(State state, PieceCollection pieces, Grid grid)
		{
		}

		[Token(Token = "0x6001E95")]
		[Address(RVA = "0xC43B68", Offset = "0xC43B68", VA = "0xC43B68")]
		private void RegisterActions(ControllerAction action)
		{
		}

		[Token(Token = "0x6001E96")]
		[Address(RVA = "0xC443B4", Offset = "0xC443B4", VA = "0xC443B4")]
		public void Update()
		{
		}

		[Token(Token = "0x6001E97")]
		[Address(RVA = "0xC444C8", Offset = "0xC444C8", VA = "0xC444C8")]
		private void ClearActionQueue(Mode gameMode)
		{
		}

		[Token(Token = "0x6001E98")]
		[Address(RVA = "0xC43CAC", Offset = "0xC43CAC", VA = "0xC43CAC")]
		private void UndoLastAction()
		{
		}

		[Token(Token = "0x6001E99")]
		[Address(RVA = "0xC44548", Offset = "0xC44548", VA = "0xC44548")]
		private void RedoLastUndo()
		{
		}

		[Token(Token = "0x6001E9A")]
		[Address(RVA = "0xC448A8", Offset = "0xC448A8", VA = "0xC448A8")]
		public UndoService()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20005AB")]
	public class EditorAction
	{
		[Token(Token = "0x20005AC")]
		public enum Type
		{
			[Token(Token = "0x4001EB2")]
			RemoveGridCell,
			[Token(Token = "0x4001EB3")]
			AddGridCell,
			[Token(Token = "0x4001EB4")]
			AddSegment,
			[Token(Token = "0x4001EB5")]
			RemoveSegment,
			[Token(Token = "0x4001EB6")]
			EditColor,
			[Token(Token = "0x4001EB7")]
			DeletePiece
		}

		[Token(Token = "0x4001EB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Type type;

		[Token(Token = "0x6001E9B")]
		[Address(RVA = "0xC448BC", Offset = "0xC448BC", VA = "0xC448BC")]
		protected EditorAction(Type type)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20005AD")]
	public class AddGridCell : EditorAction
	{
		[Token(Token = "0x4001EB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public Vector3Int coords;

		[Token(Token = "0x4001EB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Vector3 localPos;

		[Token(Token = "0x4001EBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public bool occupied;

		[Token(Token = "0x6001E9C")]
		[Address(RVA = "0xC448E4", Offset = "0xC448E4", VA = "0xC448E4")]
		public AddGridCell(Vector3Int coords, Vector3 localPos, bool occupied)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20005AE")]
	public class RemoveGridCell : EditorAction
	{
		[Token(Token = "0x4001EBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public Vector3Int coords;

		[Token(Token = "0x4001EBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Vector3 localPos;

		[Token(Token = "0x4001EBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public bool occupied;

		[Token(Token = "0x6001E9D")]
		[Address(RVA = "0xC44950", Offset = "0xC44950", VA = "0xC44950")]
		public RemoveGridCell(Vector3Int coords, Vector3 localPos, bool occupied)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20005AF")]
	public class AddSegment : EditorAction
	{
		[Token(Token = "0x4001EBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public PieceView piece;

		[Token(Token = "0x4001EBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Vector3 pieceLocalPos;

		[Token(Token = "0x4001EC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public Vector3 localPos;

		[Token(Token = "0x4001EC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Vector3Int coords;

		[Token(Token = "0x4001EC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public bool onGrid;

		[Token(Token = "0x6001E9E")]
		[Address(RVA = "0xC449B8", Offset = "0xC449B8", VA = "0xC449B8")]
		public AddSegment(PieceView piece, Vector3 pieceLocalPos, Vector3 localPos, Vector3Int coords, bool onGrid)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20005B0")]
	public class RemoveSegment : EditorAction
	{
		[Token(Token = "0x4001EC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public PieceView piece;

		[Token(Token = "0x4001EC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Vector3 pieceLocalPos;

		[Token(Token = "0x4001EC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public Vector3 localPos;

		[Token(Token = "0x4001EC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Vector3Int coords;

		[Token(Token = "0x4001EC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public bool onGrid;

		[Token(Token = "0x6001E9F")]
		[Address(RVA = "0xC44A44", Offset = "0xC44A44", VA = "0xC44A44")]
		public RemoveSegment(PieceView piece, Vector3 pieceLocalPos, Vector3 localPos, Vector3Int coords, bool onGrid)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20005B1")]
	public class EditColor : EditorAction
	{
		[Token(Token = "0x4001EC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public PieceView piece;

		[Token(Token = "0x4001EC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Color oldColor;

		[Token(Token = "0x4001ECA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Color newColor;

		[Token(Token = "0x6001EA0")]
		[Address(RVA = "0xC44AD0", Offset = "0xC44AD0", VA = "0xC44AD0")]
		public EditColor(PieceView piece, Color oldColor, Color newColor)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20005B2")]
	public class DeletePiece : EditorAction
	{
		[Token(Token = "0x4001ECB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public PieceView piece;

		[Token(Token = "0x4001ECC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<Segment> segments;

		[Token(Token = "0x4001ECD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Vector3 pieceLocalPos;

		[Token(Token = "0x4001ECE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public Quaternion pieceLocalRot;

		[Token(Token = "0x4001ECF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public bool onGrid;

		[Token(Token = "0x6001EA1")]
		[Address(RVA = "0xC44B50", Offset = "0xC44B50", VA = "0xC44B50")]
		public DeletePiece(PieceView piece, List<Segment> segments, Vector3 pieceLocalPos, Quaternion pieceLocalRot, bool onGrid)
		{
		}
	}
	[Token(Token = "0x20005B3")]
	public class AnchorSpawner : MonoBehaviour
	{
		[Token(Token = "0x4001ED0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AnchorPrefabPair _oculusAnchors;

		[Token(Token = "0x4001ED1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AnchorPrefabPair _questAnchors;

		[Token(Token = "0x4001ED2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public AnchorPrefabPair _linkAnchors;

		[Token(Token = "0x4001ED3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[FormerlySerializedAs("_linkAnchors")]
		public AnchorPrefabPair _linkAnchorsOXR;

		[Token(Token = "0x4001ED4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public AnchorPrefabPair _cambriaAnchors;

		[Token(Token = "0x4001ED5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public AnchorPrefabPair _picoAnchors;

		[Token(Token = "0x4001ED6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public AnchorPrefabPair _viveAnchors;

		[Token(Token = "0x4001ED7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[FormerlySerializedAs("_viveAnchors")]
		public AnchorPrefabPair _viveAnchorsOXR;

		[Token(Token = "0x4001ED8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public AnchorPrefabPair _oddyseyAnchors;

		[Token(Token = "0x4001ED9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public AnchorPrefabPair _wmrAnchors;

		[Token(Token = "0x4001EDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[FormerlySerializedAs("_wmrAnchors")]
		public AnchorPrefabPair _wmrAnchorsOXR;

		[Token(Token = "0x4001EDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Transform _parent;

		[Token(Token = "0x6001EA2")]
		[Address(RVA = "0xC44C70", Offset = "0xC44C70", VA = "0xC44C70")]
		public Anchors GetAnchors(Transform parent, Hand hand)
		{
			return null;
		}

		[Token(Token = "0x6001EA3")]
		[Address(RVA = "0xC44DC8", Offset = "0xC44DC8", VA = "0xC44DC8")]
		private Anchors SpawnAnchors(GameObject prefab)
		{
			return null;
		}

		[Token(Token = "0x6001EA4")]
		[Address(RVA = "0xC451AC", Offset = "0xC451AC", VA = "0xC451AC")]
		public AnchorSpawner()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20005B4")]
	public class Anchors
	{
		[Token(Token = "0x4001EDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Transform menuAnchor;

		[Token(Token = "0x4001EDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform controllerAssets;

		[Token(Token = "0x4001EDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform grabber;

		[Token(Token = "0x4001EDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public TipAnchors tipAnchors;

		[Token(Token = "0x6001EA5")]
		[Address(RVA = "0xC451A4", Offset = "0xC451A4", VA = "0xC451A4")]
		public Anchors()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20005B5")]
	public class TipAnchors
	{
		[Token(Token = "0x4001EE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Transform grip;

		[Token(Token = "0x4001EE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform trigger;

		[Token(Token = "0x4001EE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform menu;

		[Token(Token = "0x4001EE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform gather;

		[Token(Token = "0x6001EA6")]
		[Address(RVA = "0xC4519C", Offset = "0xC4519C", VA = "0xC4519C")]
		public TipAnchors()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20005B6")]
	public class AnchorPrefabPair
	{
		[Token(Token = "0x4001EE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public GameObject left;

		[Token(Token = "0x4001EE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject right;

		[Token(Token = "0x6001EA7")]
		[Address(RVA = "0xC44DB0", Offset = "0xC44DB0", VA = "0xC44DB0")]
		public GameObject Get(Hand hand)
		{
			return null;
		}

		[Token(Token = "0x6001EA8")]
		[Address(RVA = "0xC451B4", Offset = "0xC451B4", VA = "0xC451B4")]
		public AnchorPrefabPair()
		{
		}
	}
	[Token(Token = "0x20005B7")]
	public class EdgePingPool : MonoPool<EdgePing>
	{
		[Token(Token = "0x6001EA9")]
		[Address(RVA = "0xC451BC", Offset = "0xC451BC", VA = "0xC451BC")]
		public EdgePingPool()
		{
		}
	}
	[Token(Token = "0x20005B8")]
	public class PuzzleParser
	{
		[Token(Token = "0x4001EE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Vector3 _extents;

		[Token(Token = "0x6001EAA")]
		[Address(RVA = "0xC45204", Offset = "0xC45204", VA = "0xC45204", Slot = "4")]
		public virtual int GetMinVersion()
		{
			return default(int);
		}

		[Token(Token = "0x6001EAB")]
		[Address(RVA = "0xC4520C", Offset = "0xC4520C", VA = "0xC4520C", Slot = "5")]
		public virtual bool LevelFromJson(JSONNode json, out Level level)
		{
			return default(bool);
		}

		[Token(Token = "0x6001EAC")]
		[Address(RVA = "0xC454D8", Offset = "0xC454D8", VA = "0xC454D8", Slot = "6")]
		protected virtual bool PopulateMetaData(Level level, JSONNode json)
		{
			return default(bool);
		}

		[Token(Token = "0x6001EAD")]
		[Address(RVA = "0xC4628C", Offset = "0xC4628C", VA = "0xC4628C", Slot = "7")]
		protected virtual bool PopulatePieces(Level level, JSONNode json)
		{
			return default(bool);
		}

		[Token(Token = "0x6001EAE")]
		[Address(RVA = "0xC464E8", Offset = "0xC464E8", VA = "0xC464E8", Slot = "8")]
		protected virtual bool PieceFromJson(JSONNode json, ref Piece piece)
		{
			return default(bool);
		}

		[Token(Token = "0x6001EAF")]
		[Address(RVA = "0xC46D2C", Offset = "0xC46D2C", VA = "0xC46D2C", Slot = "9")]
		protected virtual bool PopulateCells(Level level, JSONNode json)
		{
			return default(bool);
		}

		[Token(Token = "0x6001EB0")]
		[Address(RVA = "0xC46F60", Offset = "0xC46F60", VA = "0xC46F60", Slot = "10")]
		protected virtual bool CellFromJson(JSONNode json, ref Cell cell)
		{
			return default(bool);
		}

		[Token(Token = "0x6001EB1")]
		[Address(RVA = "0xC470EC", Offset = "0xC470EC", VA = "0xC470EC", Slot = "11")]
		protected virtual bool PopulateSegments(Piece piece, JSONNode json)
		{
			return default(bool);
		}

		[Token(Token = "0x6001EB2")]
		[Address(RVA = "0xC472E8", Offset = "0xC472E8", VA = "0xC472E8", Slot = "12")]
		protected virtual bool SegmentFromJson(JSONNode json, Vector3 pieceOrigin, ref Segment segment)
		{
			return default(bool);
		}

		[Token(Token = "0x6001EB3")]
		[Address(RVA = "0xC460A8", Offset = "0xC460A8", VA = "0xC460A8")]
		private Bounds BoundsFromValues(JSONArray jsonArray)
		{
			return default(Bounds);
		}

		[Token(Token = "0x6001EB4")]
		[Address(RVA = "0xC47490", Offset = "0xC47490", VA = "0xC47490")]
		public PuzzleParser()
		{
		}
	}
	[Token(Token = "0x20005B9")]
	public class PuzzleParser_1 : PuzzleParser
	{
		[Token(Token = "0x4001EE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private Vector3 _extents;

		[Token(Token = "0x6001EB5")]
		[Address(RVA = "0xC47498", Offset = "0xC47498", VA = "0xC47498", Slot = "4")]
		public override int GetMinVersion()
		{
			return default(int);
		}

		[Token(Token = "0x6001EB6")]
		[Address(RVA = "0xC474A0", Offset = "0xC474A0", VA = "0xC474A0")]
		public PuzzleParser_1()
		{
		}
	}
	[Token(Token = "0x20005BA")]
	public class StageSetParser
	{
		[Token(Token = "0x4001EE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private PuzzleParser _puzzleParser;

		[Token(Token = "0x4001EEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private PuzzleParser _puzzleParser_110;

		[Token(Token = "0x140000AE")]
		public event Action OnFinished
		{
			[Token(Token = "0x6001EB7")]
			[Address(RVA = "0xC474A8", Offset = "0xC474A8", VA = "0xC474A8")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6001EB8")]
			[Address(RVA = "0xC47544", Offset = "0xC47544", VA = "0xC47544")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x6001EB9")]
		[Address(RVA = "0xC43010", Offset = "0xC43010", VA = "0xC43010")]
		public StageSetParser()
		{
		}

		[Token(Token = "0x6001EBA")]
		[Address(RVA = "0xC475E0", Offset = "0xC475E0", VA = "0xC475E0")]
		public StageSet StageSetFromJson(JSONNode json)
		{
			return null;
		}

		[Token(Token = "0x6001EBB")]
		[Address(RVA = "0xC47BEC", Offset = "0xC47BEC", VA = "0xC47BEC")]
		public Stage StageFromJson(JSONNode json)
		{
			return null;
		}

		[Token(Token = "0x6001EBC")]
		[Address(RVA = "0xC43408", Offset = "0xC43408", VA = "0xC43408")]
		public bool LevelFromPuzzleName(string puzzleName, out Level level)
		{
			return default(bool);
		}

		[Token(Token = "0x6001EBD")]
		[Address(RVA = "0xC47FDC", Offset = "0xC47FDC", VA = "0xC47FDC")]
		public bool LevelFromJson(JSONNode json, out Level level)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20005BB")]
	public class SteamPlatformService
	{
		[Token(Token = "0x20005BC")]
		[CompilerGenerated]
		private sealed class <WaitToInit>d__2 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001EEC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001EED")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x170002BB")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001EC3")]
				[Address(RVA = "0xC484E8", Offset = "0xC484E8", VA = "0xC484E8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002BC")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001EC5")]
				[Address(RVA = "0xC48530", Offset = "0xC48530", VA = "0xC48530", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001EC0")]
			[Address(RVA = "0xC48488", Offset = "0xC48488", VA = "0xC48488")]
			[DebuggerHidden]
			public <WaitToInit>d__2(int <>1__state)
			{
			}

			[Token(Token = "0x6001EC1")]
			[Address(RVA = "0xC484B0", Offset = "0xC484B0", VA = "0xC484B0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001EC2")]
			[Address(RVA = "0xC484B4", Offset = "0xC484B4", VA = "0xC484B4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001EC4")]
			[Address(RVA = "0xC484F0", Offset = "0xC484F0", VA = "0xC484F0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001EEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private State _state;

		[Token(Token = "0x6001EBE")]
		[Address(RVA = "0xC483DC", Offset = "0xC483DC", VA = "0xC483DC")]
		public SteamPlatformService(State state)
		{
		}

		[Token(Token = "0x6001EBF")]
		[Address(RVA = "0xC48428", Offset = "0xC48428", VA = "0xC48428")]
		[IteratorStateMachine(typeof(<WaitToInit>d__2))]
		private IEnumerator WaitToInit()
		{
			return null;
		}
	}
	[Token(Token = "0x20005BD")]
	public interface IInteractable
	{
		[Token(Token = "0x140000AF")]
		event Action<Controller> OnCursorEnter;

		[Token(Token = "0x140000B0")]
		event Action<Controller> OnCursorExit;

		[Token(Token = "0x140000B1")]
		event Action<Controller> OnClickDown;

		[Token(Token = "0x140000B2")]
		event Action<Controller> OnClickUp;

		[Token(Token = "0x6001ECE")]
		void ForceHoverOff(Collider other);

		[Token(Token = "0x6001ECF")]
		Controller GetLastControllerInteracting();
	}
	[Token(Token = "0x20005BE")]
	public class Input
	{
		[Token(Token = "0x6001ED0")]
		[Address(RVA = "0xC48538", Offset = "0xC48538", VA = "0xC48538", Slot = "4")]
		public virtual bool Grab()
		{
			return default(bool);
		}

		[Token(Token = "0x6001ED1")]
		[Address(RVA = "0xC48540", Offset = "0xC48540", VA = "0xC48540", Slot = "5")]
		public virtual bool Drag()
		{
			return default(bool);
		}

		[Token(Token = "0x6001ED2")]
		[Address(RVA = "0xC48548", Offset = "0xC48548", VA = "0xC48548", Slot = "6")]
		public virtual bool Gather()
		{
			return default(bool);
		}

		[Token(Token = "0x6001ED3")]
		[Address(RVA = "0xC48550", Offset = "0xC48550", VA = "0xC48550", Slot = "7")]
		public virtual bool ToggleMenu()
		{
			return default(bool);
		}

		[Token(Token = "0x6001ED4")]
		[Address(RVA = "0xC48558", Offset = "0xC48558", VA = "0xC48558")]
		public Input()
		{
		}
	}
	[Token(Token = "0x20005BF")]
	public class LevelMiniature : StateBehaviour
	{
		[Token(Token = "0x20005C0")]
		[CompilerGenerated]
		private sealed class <_SpawnMiniature>d__24 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001EFF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001F00")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001F01")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public LevelMiniature <>4__this;

			[Token(Token = "0x4001F02")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private int <i>5__2;

			[Token(Token = "0x170002BD")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001EE7")]
				[Address(RVA = "0xC49478", Offset = "0xC49478", VA = "0xC49478", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002BE")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001EE9")]
				[Address(RVA = "0xC494C0", Offset = "0xC494C0", VA = "0xC494C0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001EE4")]
			[Address(RVA = "0xC488E0", Offset = "0xC488E0", VA = "0xC488E0")]
			[DebuggerHidden]
			public <_SpawnMiniature>d__24(int <>1__state)
			{
			}

			[Token(Token = "0x6001EE5")]
			[Address(RVA = "0xC48FA8", Offset = "0xC48FA8", VA = "0xC48FA8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001EE6")]
			[Address(RVA = "0xC48FAC", Offset = "0xC48FAC", VA = "0xC48FAC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001EE8")]
			[Address(RVA = "0xC49480", Offset = "0xC49480", VA = "0xC49480", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20005C1")]
		[CompilerGenerated]
		private sealed class <_SpawnSolvedMiniature>d__26 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001F03")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001F04")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001F05")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public LevelMiniature <>4__this;

			[Token(Token = "0x4001F06")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private int <i>5__2;

			[Token(Token = "0x170002BF")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001EED")]
				[Address(RVA = "0xC4A2D8", Offset = "0xC4A2D8", VA = "0xC4A2D8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002C0")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001EEF")]
				[Address(RVA = "0xC4A320", Offset = "0xC4A320", VA = "0xC4A320", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001EEA")]
			[Address(RVA = "0xC48970", Offset = "0xC48970", VA = "0xC48970")]
			[DebuggerHidden]
			public <_SpawnSolvedMiniature>d__26(int <>1__state)
			{
			}

			[Token(Token = "0x6001EEB")]
			[Address(RVA = "0xC494C8", Offset = "0xC494C8", VA = "0xC494C8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001EEC")]
			[Address(RVA = "0xC494CC", Offset = "0xC494CC", VA = "0xC494CC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001EEE")]
			[Address(RVA = "0xC4A2E0", Offset = "0xC4A2E0", VA = "0xC4A2E0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001EEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform miniAnchor;

		[Token(Token = "0x4001EEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Transform miniParent;

		[Token(Token = "0x4001EF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Transform miniParentUnsolved;

		[Token(Token = "0x4001EF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Transform miniParentSolved;

		[Token(Token = "0x4001EF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public bool spinning;

		[Token(Token = "0x4001EF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
		public bool spawnInSteps;

		[Token(Token = "0x4001EF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public int cellsPerStep;

		[Token(Token = "0x4001EF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Header("debug")]
		public bool initAtStart;

		[Token(Token = "0x4001EF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
		public bool solved;

		[Token(Token = "0x4001EF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x52")]
		public bool combineMeshes;

		[Token(Token = "0x4001EF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Level _level;

		[Token(Token = "0x4001EF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Stage _stage;

		[Token(Token = "0x4001EFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private float _rpm;

		[Token(Token = "0x4001EFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private MaterialPropertyBlock _propBlock;

		[Token(Token = "0x4001EFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private List<GameObject> _unsolvedGeom;

		[Token(Token = "0x4001EFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private List<GameObject> _solvedGeom;

		[Token(Token = "0x4001EFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private List<GameObject> _solvedGeomTextured;

		[Token(Token = "0x6001ED5")]
		[Address(RVA = "0xC48560", Offset = "0xC48560", VA = "0xC48560")]
		private void Start()
		{
		}

		[Token(Token = "0x6001ED6")]
		[Address(RVA = "0xC485E8", Offset = "0xC485E8", VA = "0xC485E8")]
		public void Setup(Level level, Stage stage)
		{
		}

		[Token(Token = "0x6001ED7")]
		[Address(RVA = "0xC485F0", Offset = "0xC485F0", VA = "0xC485F0")]
		public void Hide()
		{
		}

		[Token(Token = "0x6001ED8")]
		[Address(RVA = "0xC486AC", Offset = "0xC486AC", VA = "0xC486AC")]
		public void ShowSolved()
		{
		}

		[Token(Token = "0x6001ED9")]
		[Address(RVA = "0xC48730", Offset = "0xC48730", VA = "0xC48730")]
		public void ShowUnSolved()
		{
		}

		[Token(Token = "0x6001EDA")]
		[Address(RVA = "0xC487B4", Offset = "0xC487B4", VA = "0xC487B4")]
		private void Update()
		{
		}

		[Token(Token = "0x6001EDB")]
		[Address(RVA = "0xC485C8", Offset = "0xC485C8", VA = "0xC485C8")]
		public void SpawnMiniature()
		{
		}

		[Token(Token = "0x6001EDC")]
		[Address(RVA = "0xC48878", Offset = "0xC48878", VA = "0xC48878")]
		[IteratorStateMachine(typeof(<_SpawnMiniature>d__24))]
		private IEnumerator _SpawnMiniature()
		{
			return null;
		}

		[Token(Token = "0x6001EDD")]
		[Address(RVA = "0xC485A8", Offset = "0xC485A8", VA = "0xC485A8")]
		public void SpawnSolvedMiniature()
		{
		}

		[Token(Token = "0x6001EDE")]
		[Address(RVA = "0xC48908", Offset = "0xC48908", VA = "0xC48908")]
		[IteratorStateMachine(typeof(<_SpawnSolvedMiniature>d__26))]
		private IEnumerator _SpawnSolvedMiniature()
		{
			return null;
		}

		[Token(Token = "0x6001EDF")]
		[Address(RVA = "0xC48998", Offset = "0xC48998", VA = "0xC48998")]
		private void ClearGeometry()
		{
		}

		[Token(Token = "0x6001EE0")]
		[Address(RVA = "0xC48DB0", Offset = "0xC48DB0", VA = "0xC48DB0")]
		private void AdjustScaleToBounds()
		{
		}

		[Token(Token = "0x6001EE1")]
		[Address(RVA = "0xC48EB8", Offset = "0xC48EB8", VA = "0xC48EB8")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001EE2")]
		[Address(RVA = "0xC48EC0", Offset = "0xC48EC0", VA = "0xC48EC0")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001EE3")]
		[Address(RVA = "0xC48EDC", Offset = "0xC48EDC", VA = "0xC48EDC")]
		public LevelMiniature()
		{
		}
	}
	[Token(Token = "0x20005C2")]
	public class Page : MonoBehaviour
	{
		[Token(Token = "0x4001F07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject content;

		[Token(Token = "0x4001F08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Page back;

		[Token(Token = "0x6001EF0")]
		[Address(RVA = "0xC4A328", Offset = "0xC4A328", VA = "0xC4A328", Slot = "4")]
		public virtual void Open()
		{
		}

		[Token(Token = "0x6001EF1")]
		[Address(RVA = "0xC4A3C8", Offset = "0xC4A3C8", VA = "0xC4A3C8", Slot = "5")]
		public virtual void Close()
		{
		}

		[Token(Token = "0x6001EF2")]
		[Address(RVA = "0xC4A350", Offset = "0xC4A350", VA = "0xC4A350")]
		protected void SetContentIfNull()
		{
		}

		[Token(Token = "0x6001EF3")]
		[Address(RVA = "0xC4A3F0", Offset = "0xC4A3F0", VA = "0xC4A3F0")]
		public void SetParent(Transform parent)
		{
		}

		[Token(Token = "0x6001EF4")]
		[Address(RVA = "0xC4A4E4", Offset = "0xC4A4E4", VA = "0xC4A4E4")]
		public bool HasBack()
		{
			return default(bool);
		}

		[Token(Token = "0x6001EF5")]
		[Address(RVA = "0xC4A544", Offset = "0xC4A544", VA = "0xC4A544")]
		public bool IsOpen()
		{
			return default(bool);
		}

		[Token(Token = "0x6001EF6")]
		[Address(RVA = "0xC4A560", Offset = "0xC4A560", VA = "0xC4A560")]
		public Page()
		{
		}
	}
	[Token(Token = "0x20005C3")]
	public class PageGroup : MonoBehaviour
	{
		[Token(Token = "0x4001F0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool _collectPagesOnStart;

		[Token(Token = "0x4001F0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		public bool _unparentInactivePages;

		[Token(Token = "0x4001F0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform _pageParent;

		[Token(Token = "0x4001F0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public List<Page> _pages;

		[Token(Token = "0x4001F0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Page _activePage;

		[Token(Token = "0x4001F0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Transform _inactiveParent;

		[Token(Token = "0x140000B3")]
		public event Action<Page> OnPageChanged
		{
			[Token(Token = "0x6001EF7")]
			[Address(RVA = "0xC4A568", Offset = "0xC4A568", VA = "0xC4A568")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6001EF8")]
			[Address(RVA = "0xC4A618", Offset = "0xC4A618", VA = "0xC4A618")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x6001EF9")]
		[Address(RVA = "0xC4A6C8", Offset = "0xC4A6C8", VA = "0xC4A6C8")]
		public void Awake()
		{
		}

		[Token(Token = "0x6001EFA")]
		[Address(RVA = "0xC4A988", Offset = "0xC4A988", VA = "0xC4A988")]
		public void AddPage(Page page)
		{
		}

		[Token(Token = "0x6001EFB")]
		[Address(RVA = "0xC4AA78", Offset = "0xC4AA78", VA = "0xC4AA78")]
		public void RemovePage(Page page)
		{
		}

		[Token(Token = "0x6001EFC")]
		[Address(RVA = "0xC4AB08", Offset = "0xC4AB08", VA = "0xC4AB08")]
		public void OpenPage(string pageName)
		{
		}

		[Token(Token = "0x6001EFD")]
		[Address(RVA = "0xC4ACE0", Offset = "0xC4ACE0", VA = "0xC4ACE0")]
		public void OpenPage(Page page)
		{
		}

		[Token(Token = "0x6001EFE")]
		[Address(RVA = "0xC4AE80", Offset = "0xC4AE80", VA = "0xC4AE80")]
		public void CloseAll()
		{
		}

		[Token(Token = "0x6001EFF")]
		[Address(RVA = "0xC4B070", Offset = "0xC4B070", VA = "0xC4B070")]
		public Page GetActivePage()
		{
			return null;
		}

		[Token(Token = "0x6001F00")]
		[Address(RVA = "0xC4B078", Offset = "0xC4B078", VA = "0xC4B078")]
		public void Back()
		{
		}

		[Token(Token = "0x6001F01")]
		[Address(RVA = "0xC4B110", Offset = "0xC4B110", VA = "0xC4B110")]
		public PageGroup()
		{
		}
	}
	[Token(Token = "0x20005C4")]
	[ExecuteInEditMode]
	public class ButtonShaderHelper : StateBehaviour
	{
		[Token(Token = "0x4001F10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Hand hand;

		[Token(Token = "0x4001F11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private Ray _ray;

		[Token(Token = "0x4001F12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private RaycastHit _hit;

		[Token(Token = "0x4001F13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Vector3 _castDirection;

		[Token(Token = "0x4001F14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private Vector3 _interactionPoint;

		[Token(Token = "0x4001F15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private float _interactionDistance;

		[Token(Token = "0x6001F02")]
		[Address(RVA = "0xC4B18C", Offset = "0xC4B18C", VA = "0xC4B18C")]
		private void Start()
		{
		}

		[Token(Token = "0x6001F03")]
		[Address(RVA = "0xC4B210", Offset = "0xC4B210", VA = "0xC4B210")]
		private void Update()
		{
		}

		[Token(Token = "0x6001F04")]
		[Address(RVA = "0xC4B704", Offset = "0xC4B704", VA = "0xC4B704")]
		private Vector3 GetCastDirection()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001F05")]
		[Address(RVA = "0xC4B7AC", Offset = "0xC4B7AC", VA = "0xC4B7AC")]
		private string GetHitPosParam()
		{
			return null;
		}

		[Token(Token = "0x6001F06")]
		[Address(RVA = "0xC4B818", Offset = "0xC4B818", VA = "0xC4B818")]
		private string GetDistParam()
		{
			return null;
		}

		[Token(Token = "0x6001F07")]
		[Address(RVA = "0xC4B884", Offset = "0xC4B884", VA = "0xC4B884")]
		public ButtonShaderHelper()
		{
		}
	}
	[Token(Token = "0x20005C5")]
	public static class Globals
	{
		[Token(Token = "0x4001F16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static float GridSize;

		[Token(Token = "0x4001F17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public static float GridSizeHalf;

		[Token(Token = "0x4001F18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static float PuzzleBoundsMargin;

		[Token(Token = "0x4001F19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public static float PuzzleBoundsMarginHT;

		[Token(Token = "0x4001F1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static string CustomPuzzleFolder;

		[Token(Token = "0x4001F1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static string ScreenshotsFolder;

		[Token(Token = "0x4001F1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public static string AudioFolderResources;

		[Token(Token = "0x4001F1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public static float StrobeSpeed;

		[Token(Token = "0x4001F1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public static string PuzzleFileExtension;

		[Token(Token = "0x4001F1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public static string CustomPuzzleFileExtension;

		[Token(Token = "0x4001F20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public static string CustomColorThemeExtension;

		[Token(Token = "0x4001F21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public static float ButtonCastDepth;

		[Token(Token = "0x4001F22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public static float ButtonCastDepthCreating;

		[Token(Token = "0x4001F23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public static float MinPuzzleDistToFloor;

		[Token(Token = "0x4001F24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public static float EdgeWidth;

		[Token(Token = "0x4001F25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public static float DotSize;

		[Token(Token = "0x4001F26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public static float FaceOffset;

		[Token(Token = "0x4001F27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public static string SaveFileExtension;

		[Token(Token = "0x4001F28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public static int PuzzleFormatVersion;

		[Token(Token = "0x4001F29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public static float MinReleaseConfidence;

		[Token(Token = "0x4001F2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public static float MinHtConfidenceToNoLerp;

		[Token(Token = "0x4001F2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		public static float MinHtConfidence;

		[Token(Token = "0x4001F2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public static float MinHtConfidenceLerping;

		[Token(Token = "0x4001F2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		public static float MinHtConfidenceHeld;

		[Token(Token = "0x4001F2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public static float MinHtConfidenceHeldLerping;

		[Token(Token = "0x4001F2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		public static float MinFingerButtonAngle;

		[Token(Token = "0x4001F30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public static float MinConfForPinch;

		[Token(Token = "0x4001F31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public static string QuestAppId;

		[Token(Token = "0x4001F32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public static string VolumeOne;

		[Token(Token = "0x4001F33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public static string VolumeTwo;

		[Token(Token = "0x4001F34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public static int MinPuzzlesToUnlockVol2;

		[Token(Token = "0x6001F08")]
		[Address(RVA = "0xC4B88C", Offset = "0xC4B88C", VA = "0xC4B88C")]
		public static float GetPuzzleBoundsMargin()
		{
			return default(float);
		}
	}
	[Token(Token = "0x20005C6")]
	public static class MaterialFinder
	{
		[Token(Token = "0x4001F35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static string MaterialLocResources;

		[Token(Token = "0x4001F36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static string DefaultMaterial;

		[Token(Token = "0x4001F37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static string StandardSuffix;

		[Token(Token = "0x4001F38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static string UnlitSuffix;

		[Token(Token = "0x4001F39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static PieceMaterials _pieceMaterials;

		[Token(Token = "0x6001F0A")]
		[Address(RVA = "0xC4A19C", Offset = "0xC4A19C", VA = "0xC4A19C")]
		public static Material GetMaterial(string name, MaterialType type)
		{
			return null;
		}

		[Token(Token = "0x6001F0B")]
		[Address(RVA = "0xC4BB0C", Offset = "0xC4BB0C", VA = "0xC4BB0C")]
		public static Color GetMaterialColor(string name)
		{
			return default(Color);
		}
	}
	[Token(Token = "0x20005C7")]
	public class MotionValues : MonoBehaviour
	{
		[Token(Token = "0x4001F3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool __debug;

		[Token(Token = "0x4001F3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private Vector3 _pos;

		[Token(Token = "0x4001F3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Vector3 _prevPos;

		[Token(Token = "0x4001F3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private Quaternion _rot;

		[Token(Token = "0x4001F3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private Quaternion _prevRot;

		[Token(Token = "0x4001F3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private Quaternion _rotationDelta;

		[Token(Token = "0x4001F40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private float _angle;

		[Token(Token = "0x4001F41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Vector3 _axis;

		[Token(Token = "0x4001F42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private Vector3 _distance;

		[Token(Token = "0x4001F43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Vector3 _velocity;

		[Token(Token = "0x4001F44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private Vector3 _prevVelocity;

		[Token(Token = "0x4001F45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Vector3 _acceleration;

		[Token(Token = "0x4001F46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private DropOutQueue<Vector3> _velocities;

		[Token(Token = "0x4001F47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private DropOutQueue<Vector3> _accelerations;

		[Token(Token = "0x4001F48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private DropOutQueue<Vector3> _angularVelocities;

		[Token(Token = "0x170002C1")]
		public Vector3 pos
		{
			[Token(Token = "0x6001F0D")]
			[Address(RVA = "0xC4BD0C", Offset = "0xC4BD0C", VA = "0xC4BD0C")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x170002C2")]
		public Vector3 distance
		{
			[Token(Token = "0x6001F0E")]
			[Address(RVA = "0xC4BD18", Offset = "0xC4BD18", VA = "0xC4BD18")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x170002C3")]
		public Vector3 velocity
		{
			[Token(Token = "0x6001F0F")]
			[Address(RVA = "0xC4BD24", Offset = "0xC4BD24", VA = "0xC4BD24")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x170002C4")]
		public Vector3 acceleration
		{
			[Token(Token = "0x6001F10")]
			[Address(RVA = "0xC4BF00", Offset = "0xC4BF00", VA = "0xC4BF00")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x170002C5")]
		public float yAngle
		{
			[Token(Token = "0x6001F11")]
			[Address(RVA = "0xC4BF08", Offset = "0xC4BF08", VA = "0xC4BF08")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170002C6")]
		public Vector3 angularVelocity
		{
			[Token(Token = "0x6001F12")]
			[Address(RVA = "0xC4BF44", Offset = "0xC4BF44", VA = "0xC4BF44")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x6001F13")]
		[Address(RVA = "0xC4BF4C", Offset = "0xC4BF4C", VA = "0xC4BF4C")]
		private void Update()
		{
		}

		[Token(Token = "0x6001F14")]
		[Address(RVA = "0xC4C224", Offset = "0xC4C224", VA = "0xC4C224")]
		private void CalcVelocity()
		{
		}

		[Token(Token = "0x6001F15")]
		[Address(RVA = "0xC4C0C8", Offset = "0xC4C0C8", VA = "0xC4C0C8")]
		private void CalcAngularVelocity()
		{
		}

		[Token(Token = "0x6001F16")]
		[Address(RVA = "0xC4BD2C", Offset = "0xC4BD2C", VA = "0xC4BD2C")]
		private Vector3 GetAverage(DropOutQueue<Vector3> queue)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001F17")]
		[Address(RVA = "0xC4C2BC", Offset = "0xC4C2BC", VA = "0xC4C2BC")]
		public MotionValues()
		{
		}
	}
	[Token(Token = "0x20005C8")]
	public class PuzzlePreview : StateBehaviour
	{
		[Token(Token = "0x20005C9")]
		public enum PuzzleGroup
		{
			[Token(Token = "0x4001F60")]
			vol1,
			[Token(Token = "0x4001F61")]
			vol2,
			[Token(Token = "0x4001F62")]
			custom
		}

		[Token(Token = "0x20005CA")]
		[CompilerGenerated]
		private sealed class <_SpawnCubesUnsolved>d__34 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001F63")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001F64")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001F65")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Level level;

			[Token(Token = "0x4001F66")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public PuzzlePreview <>4__this;

			[Token(Token = "0x4001F67")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private IEnumerator <>7__wrap1;

			[Token(Token = "0x170002C7")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001F2E")]
				[Address(RVA = "0xC4ECEC", Offset = "0xC4ECEC", VA = "0xC4ECEC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002C8")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001F30")]
				[Address(RVA = "0xC4ED34", Offset = "0xC4ED34", VA = "0xC4ED34", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001F2A")]
			[Address(RVA = "0xC4D63C", Offset = "0xC4D63C", VA = "0xC4D63C")]
			[DebuggerHidden]
			public <_SpawnCubesUnsolved>d__34(int <>1__state)
			{
			}

			[Token(Token = "0x6001F2B")]
			[Address(RVA = "0xC4E6E4", Offset = "0xC4E6E4", VA = "0xC4E6E4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001F2C")]
			[Address(RVA = "0xC4E700", Offset = "0xC4E700", VA = "0xC4E700", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001F2D")]
			[Address(RVA = "0xC4EC30", Offset = "0xC4EC30", VA = "0xC4EC30")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x6001F2F")]
			[Address(RVA = "0xC4ECF4", Offset = "0xC4ECF4", VA = "0xC4ECF4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20005CB")]
		[CompilerGenerated]
		private sealed class <_SpawnSolvedMiniature>d__36 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001F68")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001F69")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001F6A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Level level;

			[Token(Token = "0x4001F6B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public PuzzlePreview <>4__this;

			[Token(Token = "0x4001F6C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private IEnumerator <>7__wrap1;

			[Token(Token = "0x170002C9")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001F35")]
				[Address(RVA = "0xC4FE64", Offset = "0xC4FE64", VA = "0xC4FE64", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002CA")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001F37")]
				[Address(RVA = "0xC4FEAC", Offset = "0xC4FEAC", VA = "0xC4FEAC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001F31")]
			[Address(RVA = "0xC4D6D8", Offset = "0xC4D6D8", VA = "0xC4D6D8")]
			[DebuggerHidden]
			public <_SpawnSolvedMiniature>d__36(int <>1__state)
			{
			}

			[Token(Token = "0x6001F32")]
			[Address(RVA = "0xC4ED3C", Offset = "0xC4ED3C", VA = "0xC4ED3C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001F33")]
			[Address(RVA = "0xC4ED58", Offset = "0xC4ED58", VA = "0xC4ED58", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001F34")]
			[Address(RVA = "0xC4FDA8", Offset = "0xC4FDA8", VA = "0xC4FDA8")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x6001F36")]
			[Address(RVA = "0xC4FE6C", Offset = "0xC4FE6C", VA = "0xC4FE6C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001F49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public PuzzleGroup group;

		[Token(Token = "0x4001F4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public MaterialSwapEffect swapEffect;

		[Token(Token = "0x4001F4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Text[] texts;

		[Token(Token = "0x4001F4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Text[] textLight;

		[Token(Token = "0x4001F4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Transform _parent;

		[Token(Token = "0x4001F4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Material _cubeUnsolved;

		[Token(Token = "0x4001F4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Material _cubeSolved;

		[Token(Token = "0x4001F50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Material _cubeHoverUnsolved;

		[Token(Token = "0x4001F51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Material _cubeHoverSolved;

		[Token(Token = "0x4001F52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public Material _textUnsolved;

		[Token(Token = "0x4001F53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public Material _textSolved;

		[Token(Token = "0x4001F54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public Material _textLightUnsolved;

		[Token(Token = "0x4001F55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public Material _textLightSolved;

		[Token(Token = "0x4001F56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public TextAsset _defaultPuzzleCustom;

		[Token(Token = "0x4001F57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private List<GameObject> _unsolvedGeom;

		[Token(Token = "0x4001F58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private List<GameObject> _solvedGeom;

		[Token(Token = "0x4001F59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private List<GameObject> _solvedGeomTextured;

		[Token(Token = "0x4001F5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private MaterialPropertyBlock _propBlock;

		[Token(Token = "0x4001F5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private Level _displayedLevel;

		[Token(Token = "0x4001F5C")]
		private const float DefaultParentScale = 120f;

		[Token(Token = "0x4001F5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private List<(int, int)> PreferredLevelsOne;

		[Token(Token = "0x4001F5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private List<(int, int)> PreferredLevelsTwo;

		[Token(Token = "0x6001F18")]
		[Address(RVA = "0xC4C384", Offset = "0xC4C384", VA = "0xC4C384")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001F19")]
		[Address(RVA = "0xC4C388", Offset = "0xC4C388", VA = "0xC4C388")]
		public void Redraw()
		{
		}

		[Token(Token = "0x6001F1A")]
		[Address(RVA = "0xC4C464", Offset = "0xC4C464", VA = "0xC4C464")]
		private bool SetComplete()
		{
			return default(bool);
		}

		[Token(Token = "0x6001F1B")]
		[Address(RVA = "0xC4C7EC", Offset = "0xC4C7EC", VA = "0xC4C7EC")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001F1C")]
		[Address(RVA = "0xC4C5CC", Offset = "0xC4C5CC", VA = "0xC4C5CC")]
		private void SetUnsolvedTheme()
		{
		}

		[Token(Token = "0x6001F1D")]
		[Address(RVA = "0xC4C4B0", Offset = "0xC4C4B0", VA = "0xC4C4B0")]
		private void SetSolvedTheme()
		{
		}

		[Token(Token = "0x6001F1E")]
		[Address(RVA = "0xC4C3FC", Offset = "0xC4C3FC", VA = "0xC4C3FC")]
		private Level SelectLevel()
		{
			return null;
		}

		[Token(Token = "0x6001F1F")]
		[Address(RVA = "0xC4C7F4", Offset = "0xC4C7F4", VA = "0xC4C7F4")]
		private Level SelectLevelStageSets(StageSet set, List<(int, int)> preferred)
		{
			return null;
		}

		[Token(Token = "0x6001F20")]
		[Address(RVA = "0xC4CAAC", Offset = "0xC4CAAC", VA = "0xC4CAAC")]
		private Level GetCustomLevel()
		{
			return null;
		}

		[Token(Token = "0x6001F21")]
		[Address(RVA = "0xC4CBF0", Offset = "0xC4CBF0", VA = "0xC4CBF0")]
		private Level GetRandomFromUnsolved(StageSet set)
		{
			return null;
		}

		[Token(Token = "0x6001F22")]
		[Address(RVA = "0xC4C6B0", Offset = "0xC4C6B0", VA = "0xC4C6B0")]
		private void SpawnMiniatureUnsolved(Level level)
		{
		}

		[Token(Token = "0x6001F23")]
		[Address(RVA = "0xC4D110", Offset = "0xC4D110", VA = "0xC4D110")]
		private void SpawnCubes(Level level)
		{
		}

		[Token(Token = "0x6001F24")]
		[Address(RVA = "0xC4D09C", Offset = "0xC4D09C", VA = "0xC4D09C")]
		[IteratorStateMachine(typeof(<_SpawnCubesUnsolved>d__34))]
		private IEnumerator _SpawnCubesUnsolved(Level level)
		{
			return null;
		}

		[Token(Token = "0x6001F25")]
		[Address(RVA = "0xC4C594", Offset = "0xC4C594", VA = "0xC4C594")]
		private void SpawnMiniatureSolved(Level level)
		{
		}

		[Token(Token = "0x6001F26")]
		[Address(RVA = "0xC4D664", Offset = "0xC4D664", VA = "0xC4D664")]
		[IteratorStateMachine(typeof(<_SpawnSolvedMiniature>d__36))]
		public IEnumerator _SpawnSolvedMiniature(Level level)
		{
			return null;
		}

		[Token(Token = "0x6001F27")]
		[Address(RVA = "0xC4CC74", Offset = "0xC4CC74", VA = "0xC4CC74")]
		private void ClearGeometry()
		{
		}

		[Token(Token = "0x6001F28")]
		[Address(RVA = "0xC4C6E8", Offset = "0xC4C6E8", VA = "0xC4C6E8")]
		private void AdjustScaleToBounds(Level level)
		{
		}

		[Token(Token = "0x6001F29")]
		[Address(RVA = "0xC4D700", Offset = "0xC4D700", VA = "0xC4D700")]
		public PuzzlePreview()
		{
		}
	}
}
