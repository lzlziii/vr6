using System;
using System.Collections;
using System.Collections.Generic;
using System.Diagnostics;
using System.IO;
using System.Reflection;
using System.Runtime.InteropServices;
using System.Runtime.Serialization;
using System.Runtime.Serialization.Formatters.Binary;
using System.Threading;
using System.Xml.Serialization;
using BallGame;
using Il2CppDummyDll;
using Oculus.Platform;
using Oculus.Spatializer.Propagation;
using PGMaths;
using UnityEngine;
using UnityEngine.AI;
using UnityEngine.Audio;
using UnityEngine.EventSystems;
using UnityEngine.Events;
using UnityEngine.SceneManagement;
using UnityEngine.UI;
using UnityEngine.Video;
using UserTable;
using Wacki;
using XmlKeys;
using ZMaths;

[assembly: AssemblyVersion("0.0.0.0")]
[Token(Token = "0x2000002")]
public class TriFiller
{
	[Token(Token = "0x4000001")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public List<Vector2> outline;

	[Token(Token = "0x4000002")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<int> tris;

	[Token(Token = "0x4000003")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private List<int> vertsLeft;

	[Token(Token = "0x6000001")]
	[Address(RVA = "0x81F284", Offset = "0x81F284", VA = "0x81F284")]
	public TriFiller(List<Vector2> _outline)
	{
	}

	[Token(Token = "0x6000002")]
	[Address(RVA = "0x81F814", Offset = "0x81F814", VA = "0x81F814")]
	public bool isInside(int i0, int i1)
	{
		return default(bool);
	}

	[Token(Token = "0x6000003")]
	[Address(RVA = "0x81F5FC", Offset = "0x81F5FC", VA = "0x81F5FC")]
	public bool crosses(int i0, int i1)
	{
		return default(bool);
	}
}
[Token(Token = "0x2000003")]
public class IntSlider : MonoBehaviour
{
	[Token(Token = "0x4000004")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Text valueText;

	[Token(Token = "0x4000005")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int value;

	[Token(Token = "0x4000006")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private XRangeInt range;

	[Token(Token = "0x4000007")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private bool incOn;

	[Token(Token = "0x4000008")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D")]
	private bool decOn;

	[Token(Token = "0x6000004")]
	[Address(RVA = "0x1081ABC", Offset = "0x1081ABC", VA = "0x1081ABC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000005")]
	[Address(RVA = "0x1081AC4", Offset = "0x1081AC4", VA = "0x1081AC4")]
	public void incDown()
	{
	}

	[Token(Token = "0x6000006")]
	[Address(RVA = "0x1081AD0", Offset = "0x1081AD0", VA = "0x1081AD0")]
	public void decDown()
	{
	}

	[Token(Token = "0x6000007")]
	[Address(RVA = "0x1081ADC", Offset = "0x1081ADC", VA = "0x1081ADC")]
	public void incUp()
	{
	}

	[Token(Token = "0x6000008")]
	[Address(RVA = "0x1081AE4", Offset = "0x1081AE4", VA = "0x1081AE4")]
	public void decUp()
	{
	}

	[Token(Token = "0x6000009")]
	[Address(RVA = "0x1081AEC", Offset = "0x1081AEC", VA = "0x1081AEC")]
	public void init(XRangeInt _range)
	{
	}

	[Token(Token = "0x600000A")]
	[Address(RVA = "0x1081AF8", Offset = "0x1081AF8", VA = "0x1081AF8")]
	public void setValue(int _value)
	{
	}

	[Token(Token = "0x600000B")]
	[Address(RVA = "0x1081B24", Offset = "0x1081B24", VA = "0x1081B24")]
	public int getValue()
	{
		return default(int);
	}

	[Token(Token = "0x600000C")]
	[Address(RVA = "0x1081B2C", Offset = "0x1081B2C", VA = "0x1081B2C")]
	private void Update()
	{
	}

	[Token(Token = "0x600000D")]
	[Address(RVA = "0x1081BB8", Offset = "0x1081BB8", VA = "0x1081BB8")]
	public IntSlider()
	{
	}
}
[Token(Token = "0x2000004")]
public class LocalizedImage : MonoBehaviour
{
	[Token(Token = "0x4000009")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string imageName;

	[Token(Token = "0x600000E")]
	[Address(RVA = "0x108A4A0", Offset = "0x108A4A0", VA = "0x108A4A0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600000F")]
	[Address(RVA = "0x108A5F4", Offset = "0x108A5F4", VA = "0x108A5F4")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000010")]
	[Address(RVA = "0x108A654", Offset = "0x108A654", VA = "0x108A654")]
	public LocalizedImage()
	{
	}
}
[Token(Token = "0x2000005")]
[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0x43EE48", Offset = "0x43EE48")]
public class FastList<T>
{
	[Token(Token = "0x200019A")]
	public delegate int CompareFunc(T left, T right);

	[Token(Token = "0x200019B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x43F270", Offset = "0x43F270")]
	private sealed class <GetEnumerator>d__25 : IEnumerator<T>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000C44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int <>1__state;

		[Token(Token = "0x4000C45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private T <>2__current;

		[Token(Token = "0x4000C46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public FastList<T> <>4__this;

		[Token(Token = "0x4000C47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int <i>5__2;

		[Token(Token = "0x1700008D")]
		private T System.Collections.Generic.IEnumerator<T>.Current
		{
			[Token(Token = "0x6000C53")]
			[DebuggerHidden]
			get
			{
				return (T)null;
			}
		}

		[Token(Token = "0x1700008E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000C55")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000C50")]
		[DebuggerHidden]
		public <GetEnumerator>d__25(int <>1__state)
		{
		}

		[Token(Token = "0x6000C51")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000C52")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000C54")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400000A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public T[] array;

	[Token(Token = "0x400000B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public int size;

	[Token(Token = "0x17000001")]
	public int Count
	{
		[Token(Token = "0x6000013")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000014")]
		set
		{
		}
	}

	[Token(Token = "0x17000002")]
	public T Item
	{
		[Token(Token = "0x6000015")]
		get
		{
			return (T)null;
		}
		[Token(Token = "0x6000016")]
		set
		{
		}
	}

	[Token(Token = "0x6000011")]
	public FastList()
	{
	}

	[Token(Token = "0x6000012")]
	public FastList(int size)
	{
	}

	[Token(Token = "0x6000017")]
	public void Add(T item)
	{
	}

	[Token(Token = "0x6000018")]
	public void AddUnique(T item)
	{
	}

	[Token(Token = "0x6000019")]
	public void AddRange(IEnumerable<T> items)
	{
	}

	[Token(Token = "0x600001A")]
	public void Insert(int index, T item)
	{
	}

	[Token(Token = "0x600001B")]
	public bool Remove(T item)
	{
		return default(bool);
	}

	[Token(Token = "0x600001C")]
	public void RemoveAt(int index)
	{
	}

	[Token(Token = "0x600001D")]
	public bool RemoveFast(T item)
	{
		return default(bool);
	}

	[Token(Token = "0x600001E")]
	public void RemoveAtFast(int index)
	{
	}

	[Token(Token = "0x600001F")]
	public bool Contains(T item)
	{
		return default(bool);
	}

	[Token(Token = "0x6000020")]
	public int IndexOf(T item)
	{
		return default(int);
	}

	[Token(Token = "0x6000021")]
	public T Pop()
	{
		return (T)null;
	}

	[Token(Token = "0x6000022")]
	public T[] ToArray()
	{
		return null;
	}

	[Token(Token = "0x6000023")]
	public void Sort(CompareFunc comparer)
	{
	}

	[Token(Token = "0x6000024")]
	public void InsertionSort(CompareFunc comparer)
	{
	}

	[Token(Token = "0x6000025")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x441A14", Offset = "0x441A14")]
	public IEnumerator<T> GetEnumerator()
	{
		return null;
	}

	[Token(Token = "0x6000026")]
	public T Find(Predicate<T> match)
	{
		return (T)null;
	}

	[Token(Token = "0x6000027")]
	private void Allocate()
	{
	}

	[Token(Token = "0x6000028")]
	private void Trim()
	{
	}

	[Token(Token = "0x6000029")]
	public void Clear()
	{
	}

	[Token(Token = "0x600002A")]
	public void Release()
	{
	}
}
[Token(Token = "0x2000006")]
public class InspectorNoteAttribute : PropertyAttribute
{
	[Token(Token = "0x400000C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public readonly string header;

	[Token(Token = "0x400000D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public readonly string message;

	[Token(Token = "0x600002B")]
	[Address(RVA = "0x1081A6C", Offset = "0x1081A6C", VA = "0x1081A6C")]
	public InspectorNoteAttribute(string header, string message = "")
	{
	}
}
[Token(Token = "0x2000007")]
public class InspectorCommentAttribute : PropertyAttribute
{
	[Token(Token = "0x400000E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public readonly string message;

	[Token(Token = "0x600002C")]
	[Address(RVA = "0x1081A38", Offset = "0x1081A38", VA = "0x1081A38")]
	public InspectorCommentAttribute(string message = "")
	{
	}
}
[Token(Token = "0x2000008")]
public class DebugUIBuilder : MonoBehaviour
{
	[Token(Token = "0x200019C")]
	public delegate void OnClick();

	[Token(Token = "0x200019D")]
	public delegate void OnToggleValueChange(Toggle t);

	[Token(Token = "0x200019E")]
	public delegate void OnSlider(float f);

	[Token(Token = "0x200019F")]
	public delegate bool ActiveUpdate();

	[Token(Token = "0x20001A0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x43F280", Offset = "0x43F280")]
	private sealed class <>c__DisplayClass35_0
	{
		[Token(Token = "0x4000C48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public OnClick handler;

		[Token(Token = "0x6000C66")]
		[Address(RVA = "0x85D528", Offset = "0x85D528", VA = "0x85D528")]
		public <>c__DisplayClass35_0()
		{
		}

		[Token(Token = "0x6000C67")]
		[Address(RVA = "0x85D530", Offset = "0x85D530", VA = "0x85D530")]
		internal void <AddButton>b__0()
		{
		}
	}

	[Token(Token = "0x20001A1")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x43F290", Offset = "0x43F290")]
	private sealed class <>c__DisplayClass37_0
	{
		[Token(Token = "0x4000C49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public OnSlider onValueChanged;

		[Token(Token = "0x6000C68")]
		[Address(RVA = "0x85D754", Offset = "0x85D754", VA = "0x85D754")]
		public <>c__DisplayClass37_0()
		{
		}

		[Token(Token = "0x6000C69")]
		[Address(RVA = "0x85D75C", Offset = "0x85D75C", VA = "0x85D75C")]
		internal void <AddSlider>b__0(float f)
		{
		}
	}

	[Token(Token = "0x20001A2")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x43F2A0", Offset = "0x43F2A0")]
	private sealed class <>c__DisplayClass39_0
	{
		[Token(Token = "0x4000C4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public OnToggleValueChange onValueChanged;

		[Token(Token = "0x4000C4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Toggle t;

		[Token(Token = "0x6000C6A")]
		[Address(RVA = "0x85D9A8", Offset = "0x85D9A8", VA = "0x85D9A8")]
		public <>c__DisplayClass39_0()
		{
		}

		[Token(Token = "0x6000C6B")]
		[Address(RVA = "0x85D9B0", Offset = "0x85D9B0", VA = "0x85D9B0")]
		internal void <AddToggle>b__0(bool <p0>)
		{
		}
	}

	[Token(Token = "0x20001A3")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x43F2B0", Offset = "0x43F2B0")]
	private sealed class <>c__DisplayClass40_0
	{
		[Token(Token = "0x4000C4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public OnToggleValueChange onValueChanged;

		[Token(Token = "0x4000C4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Toggle t;

		[Token(Token = "0x6000C6C")]
		[Address(RVA = "0x85DD44", Offset = "0x85DD44", VA = "0x85DD44")]
		public <>c__DisplayClass40_0()
		{
		}

		[Token(Token = "0x6000C6D")]
		[Address(RVA = "0x85DD4C", Offset = "0x85DD4C", VA = "0x85DD4C")]
		internal void <AddToggle>b__0(bool <p0>)
		{
		}
	}

	[Token(Token = "0x20001A4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x43F2C0", Offset = "0x43F2C0")]
	private sealed class <>c__DisplayClass41_0
	{
		[Token(Token = "0x4000C4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public OnToggleValueChange handler;

		[Token(Token = "0x4000C4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Toggle tb;

		[Token(Token = "0x6000C6E")]
		[Address(RVA = "0x85DD6C", Offset = "0x85DD6C", VA = "0x85DD6C")]
		public <>c__DisplayClass41_0()
		{
		}

		[Token(Token = "0x6000C6F")]
		[Address(RVA = "0x85DD74", Offset = "0x85DD74", VA = "0x85DD74")]
		internal void <AddRadio>b__0(bool <p0>)
		{
		}
	}

	[Token(Token = "0x400000F")]
	public const int DEBUG_PANE_CENTER = 0;

	[Token(Token = "0x4000010")]
	public const int DEBUG_PANE_RIGHT = 1;

	[Token(Token = "0x4000011")]
	public const int DEBUG_PANE_LEFT = 2;

	[Token(Token = "0x4000012")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private RectTransform buttonPrefab;

	[Token(Token = "0x4000013")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private RectTransform labelPrefab;

	[Token(Token = "0x4000014")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private RectTransform sliderPrefab;

	[Token(Token = "0x4000015")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private RectTransform dividerPrefab;

	[Token(Token = "0x4000016")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private RectTransform togglePrefab;

	[Token(Token = "0x4000017")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private RectTransform radioPrefab;

	[Token(Token = "0x4000018")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private GameObject uiHelpersToInstantiate;

	[Token(Token = "0x4000019")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private Transform[] targetContentPanels;

	[Token(Token = "0x400001A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool[] reEnable;

	[Token(Token = "0x400001B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private List<GameObject> toEnable;

	[Token(Token = "0x400001C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private List<GameObject> toDisable;

	[Token(Token = "0x400001D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static DebugUIBuilder instance;

	[Token(Token = "0x400001E")]
	private const float elementSpacing = 16f;

	[Token(Token = "0x400001F")]
	private const float marginH = 16f;

	[Token(Token = "0x4000020")]
	private const float marginV = 16f;

	[Token(Token = "0x4000021")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Vector2[] insertPositions;

	[Token(Token = "0x4000022")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private List<RectTransform>[] insertedElements;

	[Token(Token = "0x4000023")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Vector3 menuOffset;

	[Token(Token = "0x4000024")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private OVRCameraRig rig;

	[Token(Token = "0x4000025")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private Dictionary<string, ToggleGroup> radioGroups;

	[Token(Token = "0x4000026")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private LaserPointer lp;

	[Token(Token = "0x4000027")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private LineRenderer lr;

	[Token(Token = "0x4000028")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public LaserPointer.LaserBeamBehavior laserBeamBehavior;

	[Token(Token = "0x600002D")]
	[Address(RVA = "0x92E2CC", Offset = "0x92E2CC", VA = "0x92E2CC")]
	public void Awake()
	{
	}

	[Token(Token = "0x600002E")]
	[Address(RVA = "0x92E7FC", Offset = "0x92E7FC", VA = "0x92E7FC")]
	public void Show()
	{
	}

	[Token(Token = "0x600002F")]
	[Address(RVA = "0x92EDD4", Offset = "0x92EDD4", VA = "0x92EDD4")]
	public void Hide()
	{
	}

	[Token(Token = "0x6000030")]
	[Address(RVA = "0x92EBB4", Offset = "0x92EBB4", VA = "0x92EBB4")]
	private void Relayout()
	{
	}

	[Token(Token = "0x6000031")]
	[Address(RVA = "0x92EF90", Offset = "0x92EF90", VA = "0x92EF90")]
	private void AddRect(RectTransform r, int targetCanvas)
	{
	}

	[Token(Token = "0x6000032")]
	[Address(RVA = "0x92F2B0", Offset = "0x92F2B0", VA = "0x92F2B0")]
	public RectTransform AddButton(string label, OnClick handler, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x6000033")]
	[Address(RVA = "0x92F54C", Offset = "0x92F54C", VA = "0x92F54C")]
	public RectTransform AddLabel(string label, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x6000034")]
	[Address(RVA = "0x92F650", Offset = "0x92F650", VA = "0x92F650")]
	public RectTransform AddSlider(string label, float min, float max, OnSlider onValueChanged, bool wholeNumbersOnly = false, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x6000035")]
	[Address(RVA = "0x92F834", Offset = "0x92F834", VA = "0x92F834")]
	public RectTransform AddDivider(int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x6000036")]
	[Address(RVA = "0x92F8D8", Offset = "0x92F8D8", VA = "0x92F8D8")]
	public RectTransform AddToggle(string label, OnToggleValueChange onValueChanged, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x6000037")]
	[Address(RVA = "0x92FAC8", Offset = "0x92FAC8", VA = "0x92FAC8")]
	public RectTransform AddToggle(string label, OnToggleValueChange onValueChanged, bool defaultValue, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x6000038")]
	[Address(RVA = "0x92FCD0", Offset = "0x92FCD0", VA = "0x92FCD0")]
	public RectTransform AddRadio(string label, string group, OnToggleValueChange handler, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x6000039")]
	[Address(RVA = "0x92FFD4", Offset = "0x92FFD4", VA = "0x92FFD4")]
	public void ToggleLaserPointer(bool isOn)
	{
	}

	[Token(Token = "0x600003A")]
	[Address(RVA = "0x930080", Offset = "0x930080", VA = "0x930080")]
	public DebugUIBuilder()
	{
	}
}
[Token(Token = "0x2000009")]
public class HandedInputSelector : MonoBehaviour
{
	[Token(Token = "0x4000029")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private OVRCameraRig m_CameraRig;

	[Token(Token = "0x400002A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private OVRInputModule m_InputModule;

	[Token(Token = "0x600003B")]
	[Address(RVA = "0x754764", Offset = "0x754764", VA = "0x754764")]
	private void Start()
	{
	}

	[Token(Token = "0x600003C")]
	[Address(RVA = "0x754814", Offset = "0x754814", VA = "0x754814")]
	private void Update()
	{
	}

	[Token(Token = "0x600003D")]
	[Address(RVA = "0x7548D4", Offset = "0x7548D4", VA = "0x7548D4")]
	private void SetActiveController(OVRInput.Controller c)
	{
	}

	[Token(Token = "0x600003E")]
	[Address(RVA = "0x754910", Offset = "0x754910", VA = "0x754910")]
	public HandedInputSelector()
	{
	}
}
[Token(Token = "0x200000A")]
public class LaserPointer : OVRCursor
{
	[Token(Token = "0x20001A5")]
	public enum LaserBeamBehavior
	{
		[Token(Token = "0x4000C51")]
		On,
		[Token(Token = "0x4000C52")]
		Off,
		[Token(Token = "0x4000C53")]
		OnWhenHitTarget
	}

	[Token(Token = "0x400002B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject cursorVisual;

	[Token(Token = "0x400002C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float maxLength;

	[Token(Token = "0x400002D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private LaserBeamBehavior _laserBeamBehavior;

	[Token(Token = "0x400002E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool m_restoreOnInputAcquired;

	[Token(Token = "0x400002F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private Vector3 _startPoint;

	[Token(Token = "0x4000030")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Vector3 _forward;

	[Token(Token = "0x4000031")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private Vector3 _endPoint;

	[Token(Token = "0x4000032")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool _hitTarget;

	[Token(Token = "0x4000033")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private LineRenderer lineRenderer;

	[Token(Token = "0x17000003")]
	public LaserBeamBehavior laserBeamBehavior
	{
		[Token(Token = "0x6000040")]
		[Address(RVA = "0x1087BBC", Offset = "0x1087BBC", VA = "0x1087BBC")]
		get
		{
			return default(LaserBeamBehavior);
		}
		[Token(Token = "0x600003F")]
		[Address(RVA = "0x1087B78", Offset = "0x1087B78", VA = "0x1087B78")]
		set
		{
		}
	}

	[Token(Token = "0x6000041")]
	[Address(RVA = "0x1087BC4", Offset = "0x1087BC4", VA = "0x1087BC4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000042")]
	[Address(RVA = "0x1087C20", Offset = "0x1087C20", VA = "0x1087C20")]
	private void Start()
	{
	}

	[Token(Token = "0x6000043")]
	[Address(RVA = "0x1087D64", Offset = "0x1087D64", VA = "0x1087D64", Slot = "5")]
	public override void SetCursorStartDest(Vector3 start, Vector3 dest, Vector3 normal)
	{
	}

	[Token(Token = "0x6000044")]
	[Address(RVA = "0x1087D80", Offset = "0x1087D80", VA = "0x1087D80", Slot = "4")]
	public override void SetCursorRay(Transform t)
	{
	}

	[Token(Token = "0x6000045")]
	[Address(RVA = "0x1087DD4", Offset = "0x1087DD4", VA = "0x1087DD4")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000046")]
	[Address(RVA = "0x1087F90", Offset = "0x1087F90", VA = "0x1087F90")]
	private void UpdateLaserBeam(Vector3 start, Vector3 end)
	{
	}

	[Token(Token = "0x6000047")]
	[Address(RVA = "0x10880A4", Offset = "0x10880A4", VA = "0x10880A4")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000048")]
	[Address(RVA = "0x1088134", Offset = "0x1088134", VA = "0x1088134")]
	public void OnInputFocusLost()
	{
	}

	[Token(Token = "0x6000049")]
	[Address(RVA = "0x1088200", Offset = "0x1088200", VA = "0x1088200")]
	public void OnInputFocusAcquired()
	{
	}

	[Token(Token = "0x600004A")]
	[Address(RVA = "0x10882B4", Offset = "0x10882B4", VA = "0x10882B4")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600004B")]
	[Address(RVA = "0x10883A0", Offset = "0x10883A0", VA = "0x10883A0")]
	public LaserPointer()
	{
	}
}
[Token(Token = "0x200000B")]
public class BoundsLockedObject : MonoBehaviour
{
	[Token(Token = "0x4000034")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Vector3 m_initialOffset;

	[Token(Token = "0x4000035")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OVRCameraRig m_playerOrigin;

	[Token(Token = "0x4000036")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GuardianBoundaryEnforcer m_enforcer;

	[Token(Token = "0x4000037")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Bounds? m_bounds;

	[Token(Token = "0x600004C")]
	[Address(RVA = "0x921F64", Offset = "0x921F64", VA = "0x921F64")]
	private void Start()
	{
	}

	[Token(Token = "0x600004D")]
	[Address(RVA = "0x922160", Offset = "0x922160", VA = "0x922160")]
	private void RefreshDisplay()
	{
	}

	[Token(Token = "0x600004E")]
	[Address(RVA = "0x922540", Offset = "0x922540", VA = "0x922540")]
	public BoundsLockedObject()
	{
	}
}
[Token(Token = "0x200000C")]
public class GuardianBoundaryDisplay : MonoBehaviour
{
	[Token(Token = "0x4000038")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GuardianBoundaryEnforcer m_enforcer;

	[Token(Token = "0x4000039")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public OVRBoundary.BoundaryType m_boundaryType;

	[Token(Token = "0x400003A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject m_errorDisplay;

	[Token(Token = "0x600004F")]
	[Address(RVA = "0x75322C", Offset = "0x75322C", VA = "0x75322C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000050")]
	[Address(RVA = "0x753364", Offset = "0x753364", VA = "0x753364")]
	private void RefreshDisplay()
	{
	}

	[Token(Token = "0x6000051")]
	[Address(RVA = "0x7535C0", Offset = "0x7535C0", VA = "0x7535C0")]
	public GuardianBoundaryDisplay()
	{
	}
}
[Token(Token = "0x200000D")]
public class GuardianBoundaryEnforcer : MonoBehaviour
{
	[Token(Token = "0x400003C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool m_AllowRecenter;

	[Token(Token = "0x400003D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OVRCameraRig m_mainCamera;

	[Token(Token = "0x400003E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Quaternion m_originalTrackerOrientation;

	[Token(Token = "0x400003F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private int m_framecount;

	[Token(Token = "0x4000040")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private Quaternion m_orientToOriginalForward;

	[Token(Token = "0x17000004")]
	public Quaternion OrientToOriginalForward
	{
		[Token(Token = "0x6000054")]
		[Address(RVA = "0x753668", Offset = "0x753668", VA = "0x753668")]
		get
		{
			return default(Quaternion);
		}
	}

	[Token(Token = "0x14000001")]
	public event Action TrackingChanged
	{
		[Token(Token = "0x6000052")]
		[Address(RVA = "0x7532C4", Offset = "0x7532C4", VA = "0x7532C4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x441A74", Offset = "0x441A74")]
		add
		{
		}
		[Token(Token = "0x6000053")]
		[Address(RVA = "0x7535C8", Offset = "0x7535C8", VA = "0x7535C8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x441A84", Offset = "0x441A84")]
		remove
		{
		}
	}

	[Token(Token = "0x6000055")]
	[Address(RVA = "0x753674", Offset = "0x753674", VA = "0x753674")]
	private void Start()
	{
	}

	[Token(Token = "0x6000056")]
	[Address(RVA = "0x7537E8", Offset = "0x7537E8", VA = "0x7537E8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000057")]
	[Address(RVA = "0x753938", Offset = "0x753938", VA = "0x753938")]
	private void Recentered()
	{
	}

	[Token(Token = "0x6000058")]
	[Address(RVA = "0x753940", Offset = "0x753940", VA = "0x753940")]
	public GuardianBoundaryEnforcer()
	{
	}
}
[Token(Token = "0x200000E")]
public class CharacterCameraConstraint : MonoBehaviour
{
	[Token(Token = "0x4000041")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x43F748", Offset = "0x43F748")]
	public OVRCameraRig CameraRig;

	[Token(Token = "0x4000042")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x43F780", Offset = "0x43F780")]
	public bool EnableCollision;

	[Token(Token = "0x4000043")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public LayerMask CollideLayers;

	[Token(Token = "0x4000044")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x43F7B8", Offset = "0x43F7B8")]
	public float MaxFade;

	[Token(Token = "0x4000045")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x43F7F0", Offset = "0x43F7F0")]
	public float FadeMinDistance;

	[Token(Token = "0x4000046")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float PreferredHeight;

	[Token(Token = "0x4000047")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x43F828", Offset = "0x43F828")]
	public float FadeMaxDistance;

	[Token(Token = "0x4000048")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private readonly Action _cameraUpdateAction;

	[Token(Token = "0x4000049")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private readonly Action _preCharacterMovementAction;

	[Token(Token = "0x400004A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private CapsuleCollider _character;

	[Token(Token = "0x400004B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private SimpleCapsuleWithStickMovement _simplePlayerController;

	[Token(Token = "0x6000059")]
	[Address(RVA = "0x928AEC", Offset = "0x928AEC", VA = "0x928AEC")]
	private CharacterCameraConstraint()
	{
	}

	[Token(Token = "0x600005A")]
	[Address(RVA = "0x928B84", Offset = "0x928B84", VA = "0x928B84")]
	private void Awake()
	{
	}

	[Token(Token = "0x600005B")]
	[Address(RVA = "0x928C10", Offset = "0x928C10", VA = "0x928C10")]
	private void Start()
	{
	}

	[Token(Token = "0x600005C")]
	[Address(RVA = "0x928C14", Offset = "0x928C14", VA = "0x928C14")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600005D")]
	[Address(RVA = "0x928C38", Offset = "0x928C38", VA = "0x928C38")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600005E")]
	[Address(RVA = "0x928C5C", Offset = "0x928C5C", VA = "0x928C5C")]
	private void CameraUpdate()
	{
	}
}
[Token(Token = "0x200000F")]
public class LocomotionController : MonoBehaviour
{
	[Token(Token = "0x400004C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OVRCameraRig CameraRig;

	[Token(Token = "0x400004D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public CapsuleCollider CharacterController;

	[Token(Token = "0x400004E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public SimpleCapsuleWithStickMovement PlayerController;

	[Token(Token = "0x600005F")]
	[Address(RVA = "0x108A65C", Offset = "0x108A65C", VA = "0x108A65C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000060")]
	[Address(RVA = "0x108A728", Offset = "0x108A728", VA = "0x108A728")]
	public LocomotionController()
	{
	}
}
[Token(Token = "0x2000010")]
public class LocomotionTeleport : MonoBehaviour
{
	[Token(Token = "0x20001A6")]
	public enum States
	{
		[Token(Token = "0x4000C55")]
		Ready,
		[Token(Token = "0x4000C56")]
		Aim,
		[Token(Token = "0x4000C57")]
		CancelAim,
		[Token(Token = "0x4000C58")]
		PreTeleport,
		[Token(Token = "0x4000C59")]
		CancelTeleport,
		[Token(Token = "0x4000C5A")]
		Teleporting,
		[Token(Token = "0x4000C5B")]
		PostTeleport
	}

	[Token(Token = "0x20001A7")]
	public enum TeleportIntentions
	{
		[Token(Token = "0x4000C5D")]
		None,
		[Token(Token = "0x4000C5E")]
		Aim,
		[Token(Token = "0x4000C5F")]
		PreTeleport,
		[Token(Token = "0x4000C60")]
		Teleport
	}

	[Token(Token = "0x20001A8")]
	public enum AimCollisionTypes
	{
		[Token(Token = "0x4000C62")]
		Point,
		[Token(Token = "0x4000C63")]
		Sphere,
		[Token(Token = "0x4000C64")]
		Capsule
	}

	[Token(Token = "0x20001A9")]
	public class AimData
	{
		[Token(Token = "0x4000C65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public RaycastHit TargetHitInfo;

		[Token(Token = "0x4000C66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public bool TargetValid;

		[Token(Token = "0x4000C67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Vector3? Destination;

		[Token(Token = "0x4000C68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public float Radius;

		[Token(Token = "0x4000C69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4419D4", Offset = "0x4419D4")]
		private List<Vector3> <Points>k__BackingField;

		[Token(Token = "0x1700008F")]
		public List<Vector3> Points
		{
			[Token(Token = "0x6000C71")]
			[Address(RVA = "0x842574", Offset = "0x842574", VA = "0x842574")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x442DA8", Offset = "0x442DA8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000C72")]
			[Address(RVA = "0x84257C", Offset = "0x84257C", VA = "0x84257C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x442DB8", Offset = "0x442DB8")]
			private set
			{
			}
		}

		[Token(Token = "0x6000C70")]
		[Address(RVA = "0x8424F0", Offset = "0x8424F0", VA = "0x8424F0")]
		public AimData()
		{
		}

		[Token(Token = "0x6000C73")]
		[Address(RVA = "0x842584", Offset = "0x842584", VA = "0x842584")]
		public void Reset()
		{
		}
	}

	[Token(Token = "0x20001AA")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x43F2D0", Offset = "0x43F2D0")]
	private sealed class <ReadyStateCoroutine>d__52 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000C6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000C6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000C6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x17000090")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000C77")]
			[Address(RVA = "0x865504", Offset = "0x865504", VA = "0x865504", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000091")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000C79")]
			[Address(RVA = "0x86554C", Offset = "0x86554C", VA = "0x86554C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000C74")]
		[Address(RVA = "0x8653C8", Offset = "0x8653C8", VA = "0x8653C8")]
		[DebuggerHidden]
		public <ReadyStateCoroutine>d__52(int <>1__state)
		{
		}

		[Token(Token = "0x6000C75")]
		[Address(RVA = "0x8653F4", Offset = "0x8653F4", VA = "0x8653F4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000C76")]
		[Address(RVA = "0x8653F8", Offset = "0x8653F8", VA = "0x8653F8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000C78")]
		[Address(RVA = "0x86550C", Offset = "0x86550C", VA = "0x86550C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20001AB")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x43F2E0", Offset = "0x43F2E0")]
	private sealed class <AimStateCoroutine>d__64 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000C6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000C6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000C6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x17000092")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000C7D")]
			[Address(RVA = "0x864E34", Offset = "0x864E34", VA = "0x864E34", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000093")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000C7F")]
			[Address(RVA = "0x864E7C", Offset = "0x864E7C", VA = "0x864E7C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000C7A")]
		[Address(RVA = "0x864CAC", Offset = "0x864CAC", VA = "0x864CAC")]
		[DebuggerHidden]
		public <AimStateCoroutine>d__64(int <>1__state)
		{
		}

		[Token(Token = "0x6000C7B")]
		[Address(RVA = "0x864CD8", Offset = "0x864CD8", VA = "0x864CD8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000C7C")]
		[Address(RVA = "0x864CDC", Offset = "0x864CDC", VA = "0x864CDC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000C7E")]
		[Address(RVA = "0x864E3C", Offset = "0x864E3C", VA = "0x864E3C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20001AC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x43F2F0", Offset = "0x43F2F0")]
	private sealed class <CancelAimStateCoroutine>d__68 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000C70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000C71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000C72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x17000094")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000C83")]
			[Address(RVA = "0x864F60", Offset = "0x864F60", VA = "0x864F60", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000095")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000C85")]
			[Address(RVA = "0x864FA8", Offset = "0x864FA8", VA = "0x864FA8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000C80")]
		[Address(RVA = "0x864E84", Offset = "0x864E84", VA = "0x864E84")]
		[DebuggerHidden]
		public <CancelAimStateCoroutine>d__68(int <>1__state)
		{
		}

		[Token(Token = "0x6000C81")]
		[Address(RVA = "0x864EB0", Offset = "0x864EB0", VA = "0x864EB0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000C82")]
		[Address(RVA = "0x864EB4", Offset = "0x864EB4", VA = "0x864EB4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000C84")]
		[Address(RVA = "0x864F68", Offset = "0x864F68", VA = "0x864F68", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20001AD")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x43F300", Offset = "0x43F300")]
	private sealed class <PreTeleportStateCoroutine>d__72 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000C73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000C74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000C75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x17000096")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000C89")]
			[Address(RVA = "0x865378", Offset = "0x865378", VA = "0x865378", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000097")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000C8B")]
			[Address(RVA = "0x8653C0", Offset = "0x8653C0", VA = "0x8653C0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000C86")]
		[Address(RVA = "0x86525C", Offset = "0x86525C", VA = "0x86525C")]
		[DebuggerHidden]
		public <PreTeleportStateCoroutine>d__72(int <>1__state)
		{
		}

		[Token(Token = "0x6000C87")]
		[Address(RVA = "0x865288", Offset = "0x865288", VA = "0x865288", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000C88")]
		[Address(RVA = "0x86528C", Offset = "0x86528C", VA = "0x86528C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000C8A")]
		[Address(RVA = "0x865380", Offset = "0x865380", VA = "0x865380", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20001AE")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x43F310", Offset = "0x43F310")]
	private sealed class <CancelTeleportStateCoroutine>d__76 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000C76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000C77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000C78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x17000098")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000C8F")]
			[Address(RVA = "0x86508C", Offset = "0x86508C", VA = "0x86508C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000099")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000C91")]
			[Address(RVA = "0x8650D4", Offset = "0x8650D4", VA = "0x8650D4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000C8C")]
		[Address(RVA = "0x864FB0", Offset = "0x864FB0", VA = "0x864FB0")]
		[DebuggerHidden]
		public <CancelTeleportStateCoroutine>d__76(int <>1__state)
		{
		}

		[Token(Token = "0x6000C8D")]
		[Address(RVA = "0x864FDC", Offset = "0x864FDC", VA = "0x864FDC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000C8E")]
		[Address(RVA = "0x864FE0", Offset = "0x864FE0", VA = "0x864FE0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000C90")]
		[Address(RVA = "0x865094", Offset = "0x865094", VA = "0x865094", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20001AF")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x43F320", Offset = "0x43F320")]
	private sealed class <TeleportingStateCoroutine>d__80 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000C79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000C7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000C7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x1700009A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000C95")]
			[Address(RVA = "0x8424A0", Offset = "0x8424A0", VA = "0x8424A0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700009B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000C97")]
			[Address(RVA = "0x8424E8", Offset = "0x8424E8", VA = "0x8424E8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000C92")]
		[Address(RVA = "0x84238C", Offset = "0x84238C", VA = "0x84238C")]
		[DebuggerHidden]
		public <TeleportingStateCoroutine>d__80(int <>1__state)
		{
		}

		[Token(Token = "0x6000C93")]
		[Address(RVA = "0x8423B8", Offset = "0x8423B8", VA = "0x8423B8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000C94")]
		[Address(RVA = "0x8423BC", Offset = "0x8423BC", VA = "0x8423BC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000C96")]
		[Address(RVA = "0x8424A8", Offset = "0x8424A8", VA = "0x8424A8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20001B0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x43F330", Offset = "0x43F330")]
	private sealed class <PostTeleportStateCoroutine>d__84 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000C7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000C7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000C7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x1700009C")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000C9B")]
			[Address(RVA = "0x86520C", Offset = "0x86520C", VA = "0x86520C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700009D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000C9D")]
			[Address(RVA = "0x865254", Offset = "0x865254", VA = "0x865254", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000C98")]
		[Address(RVA = "0x8650DC", Offset = "0x8650DC", VA = "0x8650DC")]
		[DebuggerHidden]
		public <PostTeleportStateCoroutine>d__84(int <>1__state)
		{
		}

		[Token(Token = "0x6000C99")]
		[Address(RVA = "0x865108", Offset = "0x865108", VA = "0x865108", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000C9A")]
		[Address(RVA = "0x86510C", Offset = "0x86510C", VA = "0x86510C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000C9C")]
		[Address(RVA = "0x865214", Offset = "0x865214", VA = "0x865214", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400004F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x43F860", Offset = "0x43F860")]
	public bool EnableMovementDuringReady;

	[Token(Token = "0x4000050")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x43F898", Offset = "0x43F898")]
	public bool EnableMovementDuringAim;

	[Token(Token = "0x4000051")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x43F8D0", Offset = "0x43F8D0")]
	public bool EnableMovementDuringPreTeleport;

	[Token(Token = "0x4000052")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x43F908", Offset = "0x43F908")]
	public bool EnableMovementDuringPostTeleport;

	[Token(Token = "0x4000053")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x43F940", Offset = "0x43F940")]
	public bool EnableRotationDuringReady;

	[Token(Token = "0x4000054")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x43F978", Offset = "0x43F978")]
	public bool EnableRotationDuringAim;

	[Token(Token = "0x4000055")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x43F9B0", Offset = "0x43F9B0")]
	public bool EnableRotationDuringPreTeleport;

	[Token(Token = "0x4000056")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x43F9E8", Offset = "0x43F9E8")]
	public bool EnableRotationDuringPostTeleport;

	[Token(Token = "0x4000057")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x43FA20", Offset = "0x43FA20")]
	private States <CurrentState>k__BackingField;

	[NonSerialized]
	[Token(Token = "0x4000058")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public TeleportAimHandler AimHandler;

	[Token(Token = "0x4000059")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x43FA30", Offset = "0x43FA30")]
	public TeleportDestination TeleportDestinationPrefab;

	[Token(Token = "0x400005A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x43FA68", Offset = "0x43FA68")]
	public int TeleportDestinationLayer;

	[NonSerialized]
	[Token(Token = "0x400005C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public TeleportInputHandler InputHandler;

	[NonSerialized]
	[Token(Token = "0x400005D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public TeleportIntentions CurrentIntention;

	[NonSerialized]
	[Token(Token = "0x400005E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public bool IsPreTeleportRequested;

	[NonSerialized]
	[Token(Token = "0x400005F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x55")]
	public bool IsTransitioning;

	[NonSerialized]
	[Token(Token = "0x4000060")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x56")]
	public bool IsPostTeleportRequested;

	[Token(Token = "0x4000061")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private TeleportDestination _teleportDestination;

	[Token(Token = "0x4000062")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x43FAB0", Offset = "0x43FAB0")]
	private LocomotionController <LocomotionController>k__BackingField;

	[Token(Token = "0x4000063")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x43FAC0", Offset = "0x43FAC0")]
	public AimCollisionTypes AimCollisionType;

	[Token(Token = "0x4000064")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x43FAF8", Offset = "0x43FAF8")]
	public bool UseCharacterCollisionData;

	[Token(Token = "0x4000065")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x43FB30", Offset = "0x43FB30")]
	public float AimCollisionRadius;

	[Token(Token = "0x4000066")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x43FB68", Offset = "0x43FB68")]
	public float AimCollisionHeight;

	[Token(Token = "0x17000005")]
	public States CurrentState
	{
		[Token(Token = "0x6000063")]
		[Address(RVA = "0x108B204", Offset = "0x108B204", VA = "0x108B204")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x441A94", Offset = "0x441A94")]
		get
		{
			return default(States);
		}
		[Token(Token = "0x6000064")]
		[Address(RVA = "0x108B20C", Offset = "0x108B20C", VA = "0x108B20C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x441AA4", Offset = "0x441AA4")]
		private set
		{
		}
	}

	[Token(Token = "0x17000006")]
	public Quaternion DestinationRotation
	{
		[Token(Token = "0x6000068")]
		[Address(RVA = "0x108B430", Offset = "0x108B430", VA = "0x108B430")]
		get
		{
			return default(Quaternion);
		}
	}

	[Token(Token = "0x17000007")]
	public LocomotionController LocomotionController
	{
		[Token(Token = "0x6000069")]
		[Address(RVA = "0x108B458", Offset = "0x108B458", VA = "0x108B458")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x441AD4", Offset = "0x441AD4")]
		get
		{
			return null;
		}
		[Token(Token = "0x600006A")]
		[Address(RVA = "0x108B460", Offset = "0x108B460", VA = "0x108B460")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x441AE4", Offset = "0x441AE4")]
		private set
		{
		}
	}

	[Token(Token = "0x14000002")]
	public event Action<bool, Vector3?, Quaternion?, Quaternion?> UpdateTeleportDestination
	{
		[Token(Token = "0x6000065")]
		[Address(RVA = "0x108B214", Offset = "0x108B214", VA = "0x108B214")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x441AB4", Offset = "0x441AB4")]
		add
		{
		}
		[Token(Token = "0x6000066")]
		[Address(RVA = "0x108B2B4", Offset = "0x108B2B4", VA = "0x108B2B4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x441AC4", Offset = "0x441AC4")]
		remove
		{
		}
	}

	[Token(Token = "0x14000003")]
	public event Action EnterStateReady
	{
		[Token(Token = "0x6000074")]
		[Address(RVA = "0x108BAA0", Offset = "0x108BAA0", VA = "0x108BAA0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x441B2C", Offset = "0x441B2C")]
		add
		{
		}
		[Token(Token = "0x6000075")]
		[Address(RVA = "0x108BB40", Offset = "0x108BB40", VA = "0x108BB40")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x441B3C", Offset = "0x441B3C")]
		remove
		{
		}
	}

	[Token(Token = "0x14000004")]
	public event Action EnterStateAim
	{
		[Token(Token = "0x6000077")]
		[Address(RVA = "0x108BBE0", Offset = "0x108BBE0", VA = "0x108BBE0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x441BAC", Offset = "0x441BAC")]
		add
		{
		}
		[Token(Token = "0x6000078")]
		[Address(RVA = "0x108BC80", Offset = "0x108BC80", VA = "0x108BC80")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x441BBC", Offset = "0x441BBC")]
		remove
		{
		}
	}

	[Token(Token = "0x14000005")]
	public event Action<AimData> UpdateAimData
	{
		[Token(Token = "0x6000079")]
		[Address(RVA = "0x108BD20", Offset = "0x108BD20", VA = "0x108BD20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x441BCC", Offset = "0x441BCC")]
		add
		{
		}
		[Token(Token = "0x600007A")]
		[Address(RVA = "0x108BDC0", Offset = "0x108BDC0", VA = "0x108BDC0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x441BDC", Offset = "0x441BDC")]
		remove
		{
		}
	}

	[Token(Token = "0x14000006")]
	public event Action ExitStateAim
	{
		[Token(Token = "0x600007C")]
		[Address(RVA = "0x108BED0", Offset = "0x108BED0", VA = "0x108BED0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x441BEC", Offset = "0x441BEC")]
		add
		{
		}
		[Token(Token = "0x600007D")]
		[Address(RVA = "0x108BF70", Offset = "0x108BF70", VA = "0x108BF70")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x441BFC", Offset = "0x441BFC")]
		remove
		{
		}
	}

	[Token(Token = "0x14000007")]
	public event Action EnterStateCancelAim
	{
		[Token(Token = "0x600007F")]
		[Address(RVA = "0x108C088", Offset = "0x108C088", VA = "0x108C088")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x441C6C", Offset = "0x441C6C")]
		add
		{
		}
		[Token(Token = "0x6000080")]
		[Address(RVA = "0x108C128", Offset = "0x108C128", VA = "0x108C128")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x441C7C", Offset = "0x441C7C")]
		remove
		{
		}
	}

	[Token(Token = "0x14000008")]
	public event Action EnterStatePreTeleport
	{
		[Token(Token = "0x6000082")]
		[Address(RVA = "0x108C240", Offset = "0x108C240", VA = "0x108C240")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x441CEC", Offset = "0x441CEC")]
		add
		{
		}
		[Token(Token = "0x6000083")]
		[Address(RVA = "0x108C2E0", Offset = "0x108C2E0", VA = "0x108C2E0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x441CFC", Offset = "0x441CFC")]
		remove
		{
		}
	}

	[Token(Token = "0x14000009")]
	public event Action EnterStateCancelTeleport
	{
		[Token(Token = "0x6000085")]
		[Address(RVA = "0x108C3F8", Offset = "0x108C3F8", VA = "0x108C3F8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x441D6C", Offset = "0x441D6C")]
		add
		{
		}
		[Token(Token = "0x6000086")]
		[Address(RVA = "0x108C498", Offset = "0x108C498", VA = "0x108C498")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x441D7C", Offset = "0x441D7C")]
		remove
		{
		}
	}

	[Token(Token = "0x1400000A")]
	public event Action EnterStateTeleporting
	{
		[Token(Token = "0x6000088")]
		[Address(RVA = "0x108C5B0", Offset = "0x108C5B0", VA = "0x108C5B0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x441DEC", Offset = "0x441DEC")]
		add
		{
		}
		[Token(Token = "0x6000089")]
		[Address(RVA = "0x108C650", Offset = "0x108C650", VA = "0x108C650")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x441DFC", Offset = "0x441DFC")]
		remove
		{
		}
	}

	[Token(Token = "0x1400000B")]
	public event Action EnterStatePostTeleport
	{
		[Token(Token = "0x600008B")]
		[Address(RVA = "0x108C768", Offset = "0x108C768", VA = "0x108C768")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x441E6C", Offset = "0x441E6C")]
		add
		{
		}
		[Token(Token = "0x600008C")]
		[Address(RVA = "0x108C808", Offset = "0x108C808", VA = "0x108C808")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x441E7C", Offset = "0x441E7C")]
		remove
		{
		}
	}

	[Token(Token = "0x1400000C")]
	public event Action<Transform, Vector3, Quaternion> Teleported
	{
		[Token(Token = "0x600008E")]
		[Address(RVA = "0x108C920", Offset = "0x108C920", VA = "0x108C920")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x441EEC", Offset = "0x441EEC")]
		add
		{
		}
		[Token(Token = "0x600008F")]
		[Address(RVA = "0x108C9C0", Offset = "0x108C9C0", VA = "0x108C9C0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x441EFC", Offset = "0x441EFC")]
		remove
		{
		}
	}

	[Token(Token = "0x6000061")]
	[Address(RVA = "0x108AEB0", Offset = "0x108AEB0", VA = "0x108AEB0")]
	public void EnableMovement(bool ready, bool aim, bool pre, bool post)
	{
	}

	[Token(Token = "0x6000062")]
	[Address(RVA = "0x108AED4", Offset = "0x108AED4", VA = "0x108AED4")]
	public void EnableRotation(bool ready, bool aim, bool pre, bool post)
	{
	}

	[Token(Token = "0x6000067")]
	[Address(RVA = "0x108B354", Offset = "0x108B354", VA = "0x108B354")]
	public void OnUpdateTeleportDestination(bool isValidDestination, Vector3? position, Quaternion? rotation, Quaternion? landingRotation)
	{
	}

	[Token(Token = "0x600006B")]
	[Address(RVA = "0x108B468", Offset = "0x108B468", VA = "0x108B468")]
	public bool AimCollisionTest(Vector3 start, Vector3 end, LayerMask aimCollisionLayerMask, out RaycastHit hitInfo)
	{
		return default(bool);
	}

	[Token(Token = "0x600006C")]
	[Address(RVA = "0x108B6B4", Offset = "0x108B6B4", VA = "0x108B6B4")]
	[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x441AF4", Offset = "0x441AF4")]
	protected void LogState(string msg)
	{
	}

	[Token(Token = "0x600006D")]
	[Address(RVA = "0x108B768", Offset = "0x108B768", VA = "0x108B768")]
	protected void CreateNewTeleportDestination()
	{
	}

	[Token(Token = "0x600006E")]
	[Address(RVA = "0x108B868", Offset = "0x108B868", VA = "0x108B868")]
	private void DeactivateDestination()
	{
	}

	[Token(Token = "0x600006F")]
	[Address(RVA = "0x108B884", Offset = "0x108B884", VA = "0x108B884")]
	public void RecycleTeleportDestination(TeleportDestination oldDestination)
	{
	}

	[Token(Token = "0x6000070")]
	[Address(RVA = "0x108B948", Offset = "0x108B948", VA = "0x108B948")]
	private void EnableMotion(bool enableLinear, bool enableRotation)
	{
	}

	[Token(Token = "0x6000071")]
	[Address(RVA = "0x108B98C", Offset = "0x108B98C", VA = "0x108B98C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000072")]
	[Address(RVA = "0x108B9F0", Offset = "0x108B9F0", VA = "0x108B9F0", Slot = "4")]
	public virtual void OnEnable()
	{
	}

	[Token(Token = "0x6000073")]
	[Address(RVA = "0x108BA98", Offset = "0x108BA98", VA = "0x108BA98", Slot = "5")]
	public virtual void OnDisable()
	{
	}

	[Token(Token = "0x6000076")]
	[Address(RVA = "0x108BA20", Offset = "0x108BA20", VA = "0x108BA20")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x441B4C", Offset = "0x441B4C")]
	protected IEnumerator ReadyStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x600007B")]
	[Address(RVA = "0x108BE60", Offset = "0x108BE60", VA = "0x108BE60")]
	public void OnUpdateAimData(AimData aimData)
	{
	}

	[Token(Token = "0x600007E")]
	[Address(RVA = "0x108C010", Offset = "0x108C010", VA = "0x108C010")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x441C0C", Offset = "0x441C0C")]
	protected IEnumerator AimStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000081")]
	[Address(RVA = "0x108C1C8", Offset = "0x108C1C8", VA = "0x108C1C8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x441C8C", Offset = "0x441C8C")]
	protected IEnumerator CancelAimStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000084")]
	[Address(RVA = "0x108C380", Offset = "0x108C380", VA = "0x108C380")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x441D0C", Offset = "0x441D0C")]
	protected IEnumerator PreTeleportStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000087")]
	[Address(RVA = "0x108C538", Offset = "0x108C538", VA = "0x108C538")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x441D8C", Offset = "0x441D8C")]
	protected IEnumerator CancelTeleportStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x600008A")]
	[Address(RVA = "0x108C6F0", Offset = "0x108C6F0", VA = "0x108C6F0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x441E0C", Offset = "0x441E0C")]
	protected IEnumerator TeleportingStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x600008D")]
	[Address(RVA = "0x108C8A8", Offset = "0x108C8A8", VA = "0x108C8A8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x441E8C", Offset = "0x441E8C")]
	protected IEnumerator PostTeleportStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000090")]
	[Address(RVA = "0x108CA60", Offset = "0x108CA60", VA = "0x108CA60")]
	public void DoTeleport()
	{
	}

	[Token(Token = "0x6000091")]
	[Address(RVA = "0x108CBA0", Offset = "0x108CBA0", VA = "0x108CBA0")]
	public Vector3 GetCharacterPosition()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000092")]
	[Address(RVA = "0x108CBD4", Offset = "0x108CBD4", VA = "0x108CBD4")]
	public Quaternion GetHeadRotationY()
	{
		return default(Quaternion);
	}

	[Token(Token = "0x6000093")]
	[Address(RVA = "0x108CC9C", Offset = "0x108CC9C", VA = "0x108CC9C")]
	public void DoWarp(Vector3 startPos, float positionPercent)
	{
	}

	[Token(Token = "0x6000094")]
	[Address(RVA = "0x108CD94", Offset = "0x108CD94", VA = "0x108CD94")]
	public LocomotionTeleport()
	{
	}
}
[Token(Token = "0x2000011")]
public class SimpleCapsuleWithStickMovement : MonoBehaviour
{
	[Token(Token = "0x4000071")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool EnableLinearMovement;

	[Token(Token = "0x4000072")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool EnableRotation;

	[Token(Token = "0x4000073")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	public bool HMDRotatesPlayer;

	[Token(Token = "0x4000074")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B")]
	public bool RotationEitherThumbstick;

	[Token(Token = "0x4000075")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float RotationAngle;

	[Token(Token = "0x4000076")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float Speed;

	[Token(Token = "0x4000077")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OVRCameraRig CameraRig;

	[Token(Token = "0x4000078")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool ReadyToSnapTurn;

	[Token(Token = "0x4000079")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Rigidbody _rigidbody;

	[Token(Token = "0x1400000D")]
	public event Action CameraUpdated
	{
		[Token(Token = "0x6000095")]
		[Address(RVA = "0x8BBEBC", Offset = "0x8BBEBC", VA = "0x8BBEBC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x441F0C", Offset = "0x441F0C")]
		add
		{
		}
		[Token(Token = "0x6000096")]
		[Address(RVA = "0x8BBF5C", Offset = "0x8BBF5C", VA = "0x8BBF5C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x441F1C", Offset = "0x441F1C")]
		remove
		{
		}
	}

	[Token(Token = "0x1400000E")]
	public event Action PreCharacterMove
	{
		[Token(Token = "0x6000097")]
		[Address(RVA = "0x8BBFFC", Offset = "0x8BBFFC", VA = "0x8BBFFC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x441F2C", Offset = "0x441F2C")]
		add
		{
		}
		[Token(Token = "0x6000098")]
		[Address(RVA = "0x8BC09C", Offset = "0x8BC09C", VA = "0x8BC09C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x441F3C", Offset = "0x441F3C")]
		remove
		{
		}
	}

	[Token(Token = "0x6000099")]
	[Address(RVA = "0x8BC13C", Offset = "0x8BC13C", VA = "0x8BC13C")]
	private void Awake()
	{
	}

	[Token(Token = "0x600009A")]
	[Address(RVA = "0x8BC228", Offset = "0x8BC228", VA = "0x8BC228")]
	private void Start()
	{
	}

	[Token(Token = "0x600009B")]
	[Address(RVA = "0x8BC22C", Offset = "0x8BC22C", VA = "0x8BC22C")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x600009C")]
	[Address(RVA = "0x8BC2A0", Offset = "0x8BC2A0", VA = "0x8BC2A0")]
	private void RotatePlayerToHMD()
	{
	}

	[Token(Token = "0x600009D")]
	[Address(RVA = "0x8BC3C4", Offset = "0x8BC3C4", VA = "0x8BC3C4")]
	private void StickMovement()
	{
	}

	[Token(Token = "0x600009E")]
	[Address(RVA = "0x8BC5AC", Offset = "0x8BC5AC", VA = "0x8BC5AC")]
	private void SnapTurn()
	{
	}

	[Token(Token = "0x600009F")]
	[Address(RVA = "0x8BC774", Offset = "0x8BC774", VA = "0x8BC774")]
	public SimpleCapsuleWithStickMovement()
	{
	}
}
[Token(Token = "0x2000012")]
public abstract class TeleportAimHandler : TeleportSupport
{
	[Token(Token = "0x60000A0")]
	[Address(RVA = "0x817700", Offset = "0x817700", VA = "0x817700", Slot = "4")]
	protected override void OnEnable()
	{
	}

	[Token(Token = "0x60000A1")]
	[Address(RVA = "0x8177A0", Offset = "0x8177A0", VA = "0x8177A0", Slot = "5")]
	protected override void OnDisable()
	{
	}

	[Token(Token = "0x60000A2")]
	public abstract void GetPoints(List<Vector3> points);

	[Token(Token = "0x60000A3")]
	[Address(RVA = "0x817890", Offset = "0x817890", VA = "0x817890")]
	protected TeleportAimHandler()
	{
	}
}
[Token(Token = "0x2000013")]
public class TeleportAimHandlerLaser : TeleportAimHandler
{
	[Token(Token = "0x400007C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x43FC60", Offset = "0x43FC60")]
	public float Range;

	[Token(Token = "0x60000A4")]
	[Address(RVA = "0x8178A0", Offset = "0x8178A0", VA = "0x8178A0", Slot = "8")]
	public override void GetPoints(List<Vector3> points)
	{
	}

	[Token(Token = "0x60000A5")]
	[Address(RVA = "0x81799C", Offset = "0x81799C", VA = "0x81799C")]
	public TeleportAimHandlerLaser()
	{
	}
}
[Token(Token = "0x2000014")]
public class TeleportAimHandlerParabolic : TeleportAimHandler
{
	[Token(Token = "0x400007D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x43FC98", Offset = "0x43FC98")]
	public float Range;

	[Token(Token = "0x400007E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x43FCD0", Offset = "0x43FCD0")]
	public float MinimumElevation;

	[Token(Token = "0x400007F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x43FD08", Offset = "0x43FD08")]
	public float Gravity;

	[Token(Token = "0x4000080")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x43FD40", Offset = "0x43FD40")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x43FD40", Offset = "0x43FD40")]
	public float AimVelocity;

	[Token(Token = "0x4000081")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x43FD9C", Offset = "0x43FD9C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x43FD9C", Offset = "0x43FD9C")]
	public float AimStep;

	[Token(Token = "0x60000A6")]
	[Address(RVA = "0x8179AC", Offset = "0x8179AC", VA = "0x8179AC", Slot = "8")]
	public override void GetPoints(List<Vector3> points)
	{
	}

	[Token(Token = "0x60000A7")]
	[Address(RVA = "0x817B3C", Offset = "0x817B3C", VA = "0x817B3C")]
	public TeleportAimHandlerParabolic()
	{
	}
}
[Token(Token = "0x2000015")]
public class TeleportAimVisualLaser : TeleportSupport
{
	[Token(Token = "0x4000082")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x43FDF4", Offset = "0x43FDF4")]
	public LineRenderer LaserPrefab;

	[Token(Token = "0x4000083")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private readonly Action _enterAimStateAction;

	[Token(Token = "0x4000084")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private readonly Action _exitAimStateAction;

	[Token(Token = "0x4000085")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private readonly Action<LocomotionTeleport.AimData> _updateAimDataAction;

	[Token(Token = "0x4000086")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private LineRenderer _lineRenderer;

	[Token(Token = "0x4000087")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Vector3[] _linePoints;

	[Token(Token = "0x60000A8")]
	[Address(RVA = "0x817B50", Offset = "0x817B50", VA = "0x817B50")]
	public TeleportAimVisualLaser()
	{
	}

	[Token(Token = "0x60000A9")]
	[Address(RVA = "0x817C8C", Offset = "0x817C8C", VA = "0x817C8C")]
	private void EnterAimState()
	{
	}

	[Token(Token = "0x60000AA")]
	[Address(RVA = "0x817CBC", Offset = "0x817CBC", VA = "0x817CBC")]
	private void ExitAimState()
	{
	}

	[Token(Token = "0x60000AB")]
	[Address(RVA = "0x817CEC", Offset = "0x817CEC", VA = "0x817CEC")]
	private void Awake()
	{
	}

	[Token(Token = "0x60000AC")]
	[Address(RVA = "0x817D9C", Offset = "0x817D9C", VA = "0x817D9C", Slot = "6")]
	protected override void AddEventHandlers()
	{
	}

	[Token(Token = "0x60000AD")]
	[Address(RVA = "0x817E08", Offset = "0x817E08", VA = "0x817E08", Slot = "7")]
	protected override void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x60000AE")]
	[Address(RVA = "0x817E70", Offset = "0x817E70", VA = "0x817E70")]
	private void UpdateAimData(LocomotionTeleport.AimData obj)
	{
	}
}
[Token(Token = "0x2000016")]
public class TeleportDestination : MonoBehaviour
{
	[Token(Token = "0x4000088")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x43FE2C", Offset = "0x43FE2C")]
	private bool <IsValidDestination>k__BackingField;

	[Token(Token = "0x4000089")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x43FE3C", Offset = "0x43FE3C")]
	public Transform PositionIndicator;

	[Token(Token = "0x400008A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x43FE74", Offset = "0x43FE74")]
	public Transform OrientationIndicator;

	[Token(Token = "0x400008B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x43FEAC", Offset = "0x43FEAC")]
	public Quaternion LandingRotation;

	[NonSerialized]
	[Token(Token = "0x400008C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public LocomotionTeleport LocomotionTeleport;

	[NonSerialized]
	[Token(Token = "0x400008D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public LocomotionTeleport.States TeleportState;

	[Token(Token = "0x400008E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private readonly Action<bool, Vector3?, Quaternion?, Quaternion?> _updateTeleportDestinationAction;

	[Token(Token = "0x400008F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool _eventsActive;

	[Token(Token = "0x17000008")]
	public bool IsValidDestination
	{
		[Token(Token = "0x60000AF")]
		[Address(RVA = "0x817F94", Offset = "0x817F94", VA = "0x817F94")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x441F4C", Offset = "0x441F4C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60000B0")]
		[Address(RVA = "0x817F9C", Offset = "0x817F9C", VA = "0x817F9C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x441F5C", Offset = "0x441F5C")]
		private set
		{
		}
	}

	[Token(Token = "0x1400000F")]
	public event Action<TeleportDestination> Deactivated
	{
		[Token(Token = "0x60000B5")]
		[Address(RVA = "0x818158", Offset = "0x818158", VA = "0x818158")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x441F6C", Offset = "0x441F6C")]
		add
		{
		}
		[Token(Token = "0x60000B6")]
		[Address(RVA = "0x8181F8", Offset = "0x8181F8", VA = "0x8181F8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x441F7C", Offset = "0x441F7C")]
		remove
		{
		}
	}

	[Token(Token = "0x60000B1")]
	[Address(RVA = "0x817FA8", Offset = "0x817FA8", VA = "0x817FA8")]
	private TeleportDestination()
	{
	}

	[Token(Token = "0x60000B2")]
	[Address(RVA = "0x818040", Offset = "0x818040", VA = "0x818040")]
	public void OnEnable()
	{
	}

	[Token(Token = "0x60000B3")]
	[Address(RVA = "0x818114", Offset = "0x818114", VA = "0x818114")]
	private void TryDisableEventHandlers()
	{
	}

	[Token(Token = "0x60000B4")]
	[Address(RVA = "0x818154", Offset = "0x818154", VA = "0x818154")]
	public void OnDisable()
	{
	}

	[Token(Token = "0x60000B7")]
	[Address(RVA = "0x818298", Offset = "0x818298", VA = "0x818298")]
	public void OnDeactivated()
	{
	}

	[Token(Token = "0x60000B8")]
	[Address(RVA = "0x8182FC", Offset = "0x8182FC", VA = "0x8182FC")]
	public void Recycle()
	{
	}

	[Token(Token = "0x60000B9")]
	[Address(RVA = "0x81831C", Offset = "0x81831C", VA = "0x81831C", Slot = "4")]
	public virtual void UpdateTeleportDestination(bool isValidDestination, Vector3? position, Quaternion? rotation, Quaternion? landingRotation)
	{
	}
}
[Token(Token = "0x2000017")]
public abstract class TeleportInputHandler : TeleportSupport
{
	[Token(Token = "0x20001B1")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x43F340", Offset = "0x43F340")]
	private sealed class <TeleportReadyCoroutine>d__5 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000C7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000C80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000C81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportInputHandler <>4__this;

		[Token(Token = "0x1700009E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000CA1")]
			[Address(RVA = "0x851FA0", Offset = "0x851FA0", VA = "0x851FA0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700009F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000CA3")]
			[Address(RVA = "0x851FE8", Offset = "0x851FE8", VA = "0x851FE8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000C9E")]
		[Address(RVA = "0x851ED8", Offset = "0x851ED8", VA = "0x851ED8")]
		[DebuggerHidden]
		public <TeleportReadyCoroutine>d__5(int <>1__state)
		{
		}

		[Token(Token = "0x6000C9F")]
		[Address(RVA = "0x851F04", Offset = "0x851F04", VA = "0x851F04", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000CA0")]
		[Address(RVA = "0x851F08", Offset = "0x851F08", VA = "0x851F08", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000CA2")]
		[Address(RVA = "0x851FA8", Offset = "0x851FA8", VA = "0x851FA8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20001B2")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x43F350", Offset = "0x43F350")]
	private sealed class <TeleportAimCoroutine>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000C82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000C83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000C84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportInputHandler <>4__this;

		[Token(Token = "0x170000A0")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000CA7")]
			[Address(RVA = "0x851E88", Offset = "0x851E88", VA = "0x851E88", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000A1")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000CA9")]
			[Address(RVA = "0x851ED0", Offset = "0x851ED0", VA = "0x851ED0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000CA4")]
		[Address(RVA = "0x851DBC", Offset = "0x851DBC", VA = "0x851DBC")]
		[DebuggerHidden]
		public <TeleportAimCoroutine>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x6000CA5")]
		[Address(RVA = "0x851DE8", Offset = "0x851DE8", VA = "0x851DE8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000CA6")]
		[Address(RVA = "0x851DEC", Offset = "0x851DEC", VA = "0x851DEC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000CA8")]
		[Address(RVA = "0x851E90", Offset = "0x851E90", VA = "0x851E90", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000091")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private readonly Action _startReadyAction;

	[Token(Token = "0x4000092")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private readonly Action _startAimAction;

	[Token(Token = "0x60000BA")]
	[Address(RVA = "0x818528", Offset = "0x818528", VA = "0x818528")]
	protected TeleportInputHandler()
	{
	}

	[Token(Token = "0x60000BB")]
	[Address(RVA = "0x8185FC", Offset = "0x8185FC", VA = "0x8185FC", Slot = "6")]
	protected override void AddEventHandlers()
	{
	}

	[Token(Token = "0x60000BC")]
	[Address(RVA = "0x81865C", Offset = "0x81865C", VA = "0x81865C", Slot = "7")]
	protected override void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x60000BD")]
	[Address(RVA = "0x81871C", Offset = "0x81871C", VA = "0x81871C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x441F8C", Offset = "0x441F8C")]
	private IEnumerator TeleportReadyCoroutine()
	{
		return null;
	}

	[Token(Token = "0x60000BE")]
	[Address(RVA = "0x818794", Offset = "0x818794", VA = "0x818794")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x441FEC", Offset = "0x441FEC")]
	private IEnumerator TeleportAimCoroutine()
	{
		return null;
	}

	[Token(Token = "0x60000BF")]
	public abstract LocomotionTeleport.TeleportIntentions GetIntention();

	[Token(Token = "0x60000C0")]
	public abstract void GetAimData(out Ray aimRay);

	[Token(Token = "0x60000C1")]
	[Address(RVA = "0x81880C", Offset = "0x81880C", VA = "0x81880C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x44204C", Offset = "0x44204C")]
	private void <.ctor>b__2_0()
	{
	}

	[Token(Token = "0x60000C2")]
	[Address(RVA = "0x818838", Offset = "0x818838", VA = "0x818838")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x44205C", Offset = "0x44205C")]
	private void <.ctor>b__2_1()
	{
	}
}
[Token(Token = "0x2000018")]
public class TeleportInputHandlerHMD : TeleportInputHandler
{
	[Token(Token = "0x4000093")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x43FEF4", Offset = "0x43FEF4")]
	private Transform <Pointer>k__BackingField;

	[Token(Token = "0x4000094")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x43FF04", Offset = "0x43FF04")]
	public OVRInput.RawButton AimButton;

	[Token(Token = "0x4000095")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x43FF3C", Offset = "0x43FF3C")]
	public OVRInput.RawButton TeleportButton;

	[Token(Token = "0x4000096")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x43FF74", Offset = "0x43FF74")]
	public bool FastTeleport;

	[Token(Token = "0x17000009")]
	public Transform Pointer
	{
		[Token(Token = "0x60000C3")]
		[Address(RVA = "0x818864", Offset = "0x818864", VA = "0x818864")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x44206C", Offset = "0x44206C")]
		get
		{
			return null;
		}
		[Token(Token = "0x60000C4")]
		[Address(RVA = "0x81886C", Offset = "0x81886C", VA = "0x81886C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x44207C", Offset = "0x44207C")]
		private set
		{
		}
	}

	[Token(Token = "0x60000C5")]
	[Address(RVA = "0x818874", Offset = "0x818874", VA = "0x818874", Slot = "8")]
	public override LocomotionTeleport.TeleportIntentions GetIntention()
	{
		return default(LocomotionTeleport.TeleportIntentions);
	}

	[Token(Token = "0x60000C6")]
	[Address(RVA = "0x8189CC", Offset = "0x8189CC", VA = "0x8189CC", Slot = "9")]
	public override void GetAimData(out Ray aimRay)
	{
	}

	[Token(Token = "0x60000C7")]
	[Address(RVA = "0x818A84", Offset = "0x818A84", VA = "0x818A84")]
	public TeleportInputHandlerHMD()
	{
	}
}
[Token(Token = "0x2000019")]
public class TeleportInputHandlerTouch : TeleportInputHandlerHMD
{
	[Token(Token = "0x20001B3")]
	public enum InputModes
	{
		[Token(Token = "0x4000C86")]
		CapacitiveButtonForAimAndTeleport,
		[Token(Token = "0x4000C87")]
		SeparateButtonsForAimAndTeleport,
		[Token(Token = "0x4000C88")]
		ThumbstickTeleport,
		[Token(Token = "0x4000C89")]
		ThumbstickTeleportForwardBackOnly
	}

	[Token(Token = "0x20001B4")]
	public enum AimCapTouchButtons
	{
		[Token(Token = "0x4000C8B")]
		A,
		[Token(Token = "0x4000C8C")]
		B,
		[Token(Token = "0x4000C8D")]
		LeftTrigger,
		[Token(Token = "0x4000C8E")]
		LeftThumbstick,
		[Token(Token = "0x4000C8F")]
		RightTrigger,
		[Token(Token = "0x4000C90")]
		RightThumbstick,
		[Token(Token = "0x4000C91")]
		X,
		[Token(Token = "0x4000C92")]
		Y
	}

	[Token(Token = "0x4000097")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Transform LeftHand;

	[Token(Token = "0x4000098")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Transform RightHand;

	[Token(Token = "0x4000099")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x43FFAC", Offset = "0x43FFAC")]
	public InputModes InputMode;

	[Token(Token = "0x400009A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private readonly OVRInput.RawButton[] _rawButtons;

	[Token(Token = "0x400009B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private readonly OVRInput.RawTouch[] _rawTouch;

	[Token(Token = "0x400009C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x43FFE4", Offset = "0x43FFE4")]
	public OVRInput.Controller AimingController;

	[Token(Token = "0x400009D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private OVRInput.Controller InitiatingController;

	[Token(Token = "0x400009E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x44001C", Offset = "0x44001C")]
	public AimCapTouchButtons CapacitiveAimAndTeleportButton;

	[Token(Token = "0x400009F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x440054", Offset = "0x440054")]
	public float ThumbstickTeleportThreshold;

	[Token(Token = "0x60000C8")]
	[Address(RVA = "0x818A88", Offset = "0x818A88", VA = "0x818A88")]
	private void Start()
	{
	}

	[Token(Token = "0x60000C9")]
	[Address(RVA = "0x818A8C", Offset = "0x818A8C", VA = "0x818A8C", Slot = "8")]
	public override LocomotionTeleport.TeleportIntentions GetIntention()
	{
		return default(LocomotionTeleport.TeleportIntentions);
	}

	[Token(Token = "0x60000CA")]
	[Address(RVA = "0x818E74", Offset = "0x818E74", VA = "0x818E74", Slot = "9")]
	public override void GetAimData(out Ray aimRay)
	{
	}

	[Token(Token = "0x60000CB")]
	[Address(RVA = "0x818F34", Offset = "0x818F34", VA = "0x818F34")]
	public TeleportInputHandlerTouch()
	{
	}
}
[Token(Token = "0x200001A")]
public abstract class TeleportOrientationHandler : TeleportSupport
{
	[Token(Token = "0x20001B5")]
	public enum OrientationModes
	{
		[Token(Token = "0x4000C94")]
		HeadRelative,
		[Token(Token = "0x4000C95")]
		ForwardFacing
	}

	[Token(Token = "0x20001B6")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x43F360", Offset = "0x43F360")]
	private sealed class <UpdateOrientationCoroutine>d__7 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000C96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000C97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000C98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportOrientationHandler <>4__this;

		[Token(Token = "0x170000A2")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000CAD")]
			[Address(RVA = "0x8520D0", Offset = "0x8520D0", VA = "0x8520D0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000A3")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000CAF")]
			[Address(RVA = "0x852118", Offset = "0x852118", VA = "0x852118", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000CAA")]
		[Address(RVA = "0x851FF0", Offset = "0x851FF0", VA = "0x851FF0")]
		[DebuggerHidden]
		public <UpdateOrientationCoroutine>d__7(int <>1__state)
		{
		}

		[Token(Token = "0x6000CAB")]
		[Address(RVA = "0x85201C", Offset = "0x85201C", VA = "0x85201C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000CAC")]
		[Address(RVA = "0x852020", Offset = "0x852020", VA = "0x852020", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000CAE")]
		[Address(RVA = "0x8520D8", Offset = "0x8520D8", VA = "0x8520D8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40000A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private readonly Action _updateOrientationAction;

	[Token(Token = "0x40000A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private readonly Action<LocomotionTeleport.AimData> _updateAimDataAction;

	[Token(Token = "0x40000A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	protected LocomotionTeleport.AimData AimData;

	[Token(Token = "0x60000CC")]
	[Address(RVA = "0x819018", Offset = "0x819018", VA = "0x819018")]
	protected TeleportOrientationHandler()
	{
	}

	[Token(Token = "0x60000CD")]
	[Address(RVA = "0x81910C", Offset = "0x81910C", VA = "0x81910C")]
	private void UpdateAimData(LocomotionTeleport.AimData aimData)
	{
	}

	[Token(Token = "0x60000CE")]
	[Address(RVA = "0x819114", Offset = "0x819114", VA = "0x819114", Slot = "6")]
	protected override void AddEventHandlers()
	{
	}

	[Token(Token = "0x60000CF")]
	[Address(RVA = "0x819160", Offset = "0x819160", VA = "0x819160", Slot = "7")]
	protected override void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x60000D0")]
	[Address(RVA = "0x8191A8", Offset = "0x8191A8", VA = "0x8191A8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x44208C", Offset = "0x44208C")]
	private IEnumerator UpdateOrientationCoroutine()
	{
		return null;
	}

	[Token(Token = "0x60000D1")]
	protected abstract void InitializeTeleportDestination();

	[Token(Token = "0x60000D2")]
	protected abstract void UpdateTeleportDestination();

	[Token(Token = "0x60000D3")]
	[Address(RVA = "0x819220", Offset = "0x819220", VA = "0x819220")]
	protected Quaternion GetLandingOrientation(OrientationModes mode, Quaternion rotation)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x60000D4")]
	[Address(RVA = "0x8192DC", Offset = "0x8192DC", VA = "0x8192DC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4420EC", Offset = "0x4420EC")]
	private void <.ctor>b__3_0()
	{
	}
}
[Token(Token = "0x200001B")]
public class TeleportOrientationHandler360 : TeleportOrientationHandler
{
	[Token(Token = "0x60000D5")]
	[Address(RVA = "0x819308", Offset = "0x819308", VA = "0x819308", Slot = "8")]
	protected override void InitializeTeleportDestination()
	{
	}

	[Token(Token = "0x60000D6")]
	[Address(RVA = "0x81930C", Offset = "0x81930C", VA = "0x81930C", Slot = "9")]
	protected override void UpdateTeleportDestination()
	{
	}

	[Token(Token = "0x60000D7")]
	[Address(RVA = "0x819388", Offset = "0x819388", VA = "0x819388")]
	public TeleportOrientationHandler360()
	{
	}
}
[Token(Token = "0x200001C")]
public class TeleportOrientationHandlerHMD : TeleportOrientationHandler
{
	[Token(Token = "0x40000A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x44008C", Offset = "0x44008C")]
	public OrientationModes OrientationMode;

	[Token(Token = "0x40000A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4400C4", Offset = "0x4400C4")]
	public bool UpdateOrientationDuringAim;

	[Token(Token = "0x40000A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4400FC", Offset = "0x4400FC")]
	public float AimDistanceThreshold;

	[Token(Token = "0x40000A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x440134", Offset = "0x440134")]
	public float AimDistanceMaxRange;

	[Token(Token = "0x40000A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Quaternion _initialRotation;

	[Token(Token = "0x60000D8")]
	[Address(RVA = "0x81938C", Offset = "0x81938C", VA = "0x81938C", Slot = "8")]
	protected override void InitializeTeleportDestination()
	{
	}

	[Token(Token = "0x60000D9")]
	[Address(RVA = "0x8193B8", Offset = "0x8193B8", VA = "0x8193B8", Slot = "9")]
	protected override void UpdateTeleportDestination()
	{
	}

	[Token(Token = "0x60000DA")]
	[Address(RVA = "0x819768", Offset = "0x819768", VA = "0x819768")]
	public TeleportOrientationHandlerHMD()
	{
	}
}
[Token(Token = "0x200001D")]
public class TeleportOrientationHandlerThumbstick : TeleportOrientationHandler
{
	[Token(Token = "0x40000A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x44016C", Offset = "0x44016C")]
	public OrientationModes OrientationMode;

	[Token(Token = "0x40000A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4401A4", Offset = "0x4401A4")]
	public OVRInput.Controller Thumbstick;

	[Token(Token = "0x40000AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4401DC", Offset = "0x4401DC")]
	public float RotateStickThreshold;

	[Token(Token = "0x40000AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private Quaternion _initialRotation;

	[Token(Token = "0x40000AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private Quaternion _currentRotation;

	[Token(Token = "0x40000AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private Vector2 _lastValidDirection;

	[Token(Token = "0x60000DB")]
	[Address(RVA = "0x81976C", Offset = "0x81976C", VA = "0x81976C", Slot = "8")]
	protected override void InitializeTeleportDestination()
	{
	}

	[Token(Token = "0x60000DC")]
	[Address(RVA = "0x8197B0", Offset = "0x8197B0", VA = "0x8197B0", Slot = "9")]
	protected override void UpdateTeleportDestination()
	{
	}

	[Token(Token = "0x60000DD")]
	[Address(RVA = "0x819B58", Offset = "0x819B58", VA = "0x819B58")]
	public TeleportOrientationHandlerThumbstick()
	{
	}
}
[Token(Token = "0x200001E")]
public class TeleportPoint : MonoBehaviour
{
	[Token(Token = "0x40000AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float dimmingSpeed;

	[Token(Token = "0x40000AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float fullIntensity;

	[Token(Token = "0x40000B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float lowIntensity;

	[Token(Token = "0x40000B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform destTransform;

	[Token(Token = "0x40000B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float lastLookAtTime;

	[Token(Token = "0x60000DE")]
	[Address(RVA = "0x819B68", Offset = "0x819B68", VA = "0x819B68")]
	private void Start()
	{
	}

	[Token(Token = "0x60000DF")]
	[Address(RVA = "0x819B6C", Offset = "0x819B6C", VA = "0x819B6C")]
	public Transform GetDestTransform()
	{
		return null;
	}

	[Token(Token = "0x60000E0")]
	[Address(RVA = "0x819B74", Offset = "0x819B74", VA = "0x819B74")]
	private void Update()
	{
	}

	[Token(Token = "0x60000E1")]
	[Address(RVA = "0x819C30", Offset = "0x819C30", VA = "0x819C30")]
	public void OnLookAt()
	{
	}

	[Token(Token = "0x60000E2")]
	[Address(RVA = "0x819C58", Offset = "0x819C58", VA = "0x819C58")]
	public TeleportPoint()
	{
	}
}
[Token(Token = "0x200001F")]
public abstract class TeleportSupport : MonoBehaviour
{
	[Token(Token = "0x40000B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x440214", Offset = "0x440214")]
	private LocomotionTeleport <LocomotionTeleport>k__BackingField;

	[Token(Token = "0x40000B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool _eventsActive;

	[Token(Token = "0x1700000A")]
	protected LocomotionTeleport LocomotionTeleport
	{
		[Token(Token = "0x60000E3")]
		[Address(RVA = "0x819C70", Offset = "0x819C70", VA = "0x819C70")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4420FC", Offset = "0x4420FC")]
		get
		{
			return null;
		}
		[Token(Token = "0x60000E4")]
		[Address(RVA = "0x819C78", Offset = "0x819C78", VA = "0x819C78")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x44210C", Offset = "0x44210C")]
		private set
		{
		}
	}

	[Token(Token = "0x60000E5")]
	[Address(RVA = "0x817734", Offset = "0x817734", VA = "0x817734", Slot = "4")]
	protected virtual void OnEnable()
	{
	}

	[Token(Token = "0x60000E6")]
	[Address(RVA = "0x81785C", Offset = "0x81785C", VA = "0x81785C", Slot = "5")]
	protected virtual void OnDisable()
	{
	}

	[Token(Token = "0x60000E7")]
	[Address(RVA = "0x819C80", Offset = "0x819C80", VA = "0x819C80")]
	[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x44211C", Offset = "0x44211C")]
	private void LogEventHandler(string msg)
	{
	}

	[Token(Token = "0x60000E8")]
	[Address(RVA = "0x817DFC", Offset = "0x817DFC", VA = "0x817DFC", Slot = "6")]
	protected virtual void AddEventHandlers()
	{
	}

	[Token(Token = "0x60000E9")]
	[Address(RVA = "0x817E68", Offset = "0x817E68", VA = "0x817E68", Slot = "7")]
	protected virtual void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x60000EA")]
	[Address(RVA = "0x817898", Offset = "0x817898", VA = "0x817898")]
	protected TeleportSupport()
	{
	}
}
[Token(Token = "0x2000020")]
public abstract class TeleportTargetHandler : TeleportSupport
{
	[Token(Token = "0x20001B7")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x43F370", Offset = "0x43F370")]
	private sealed class <TargetAimCoroutine>d__7 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000C99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000C9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000C9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportTargetHandler <>4__this;

		[Token(Token = "0x170000A4")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000CB3")]
			[Address(RVA = "0x8523F0", Offset = "0x8523F0", VA = "0x8523F0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000A5")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000CB5")]
			[Address(RVA = "0x852438", Offset = "0x852438", VA = "0x852438", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000CB0")]
		[Address(RVA = "0x852120", Offset = "0x852120", VA = "0x852120")]
		[DebuggerHidden]
		public <TargetAimCoroutine>d__7(int <>1__state)
		{
		}

		[Token(Token = "0x6000CB1")]
		[Address(RVA = "0x85214C", Offset = "0x85214C", VA = "0x85214C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000CB2")]
		[Address(RVA = "0x852150", Offset = "0x852150", VA = "0x852150", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000CB4")]
		[Address(RVA = "0x8523F8", Offset = "0x8523F8", VA = "0x8523F8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40000B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x440224", Offset = "0x440224")]
	public LayerMask AimCollisionLayerMask;

	[Token(Token = "0x40000B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	protected readonly LocomotionTeleport.AimData AimData;

	[Token(Token = "0x40000B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private readonly Action _startAimAction;

	[Token(Token = "0x40000B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private readonly List<Vector3> _aimPoints;

	[Token(Token = "0x40000B9")]
	private const float ERROR_MARGIN = 0.1f;

	[Token(Token = "0x60000EB")]
	[Address(RVA = "0x819E30", Offset = "0x819E30", VA = "0x819E30")]
	protected TeleportTargetHandler()
	{
	}

	[Token(Token = "0x60000EC")]
	[Address(RVA = "0x819F40", Offset = "0x819F40", VA = "0x819F40", Slot = "6")]
	protected override void AddEventHandlers()
	{
	}

	[Token(Token = "0x60000ED")]
	[Address(RVA = "0x819F6C", Offset = "0x819F6C", VA = "0x819F6C", Slot = "7")]
	protected override void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x60000EE")]
	[Address(RVA = "0x819F94", Offset = "0x819F94", VA = "0x819F94")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x442154", Offset = "0x442154")]
	private IEnumerator TargetAimCoroutine()
	{
		return null;
	}

	[Token(Token = "0x60000EF")]
	[Address(RVA = "0x81A00C", Offset = "0x81A00C", VA = "0x81A00C", Slot = "8")]
	protected virtual void ResetAimData()
	{
	}

	[Token(Token = "0x60000F0")]
	protected abstract bool ConsiderTeleport(Vector3 start, ref Vector3 end);

	[Token(Token = "0x60000F1")]
	[Address(RVA = "0x81A028", Offset = "0x81A028", VA = "0x81A028", Slot = "10")]
	public virtual Vector3? ConsiderDestination(Vector3 location)
	{
		return null;
	}

	[Token(Token = "0x60000F2")]
	[Address(RVA = "0x81A148", Offset = "0x81A148", VA = "0x81A148")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4421B4", Offset = "0x4421B4")]
	private void <.ctor>b__3_0()
	{
	}
}
[Token(Token = "0x2000021")]
public class TeleportTargetHandlerNavMesh : TeleportTargetHandler
{
	[Token(Token = "0x40000BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public int NavMeshAreaMask;

	[Token(Token = "0x40000BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private NavMeshPath _path;

	[Token(Token = "0x60000F3")]
	[Address(RVA = "0x81A174", Offset = "0x81A174", VA = "0x81A174")]
	private void Awake()
	{
	}

	[Token(Token = "0x60000F4")]
	[Address(RVA = "0x81A1D8", Offset = "0x81A1D8", VA = "0x81A1D8", Slot = "9")]
	protected override bool ConsiderTeleport(Vector3 start, ref Vector3 end)
	{
		return default(bool);
	}

	[Token(Token = "0x60000F5")]
	[Address(RVA = "0x81A2D0", Offset = "0x81A2D0", VA = "0x81A2D0", Slot = "10")]
	public override Vector3? ConsiderDestination(Vector3 location)
	{
		return null;
	}

	[Token(Token = "0x60000F6")]
	[Address(RVA = "0x81A3C8", Offset = "0x81A3C8", VA = "0x81A3C8")]
	[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x4421C4", Offset = "0x4421C4")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x60000F7")]
	[Address(RVA = "0x81A3CC", Offset = "0x81A3CC", VA = "0x81A3CC")]
	public TeleportTargetHandlerNavMesh()
	{
	}
}
[Token(Token = "0x2000022")]
public class TeleportTargetHandlerNode : TeleportTargetHandler
{
	[Token(Token = "0x40000BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x44025C", Offset = "0x44025C")]
	public float LOSOffset;

	[Token(Token = "0x40000BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x440294", Offset = "0x440294")]
	public LayerMask TeleportLayerMask;

	[Token(Token = "0x60000F8")]
	[Address(RVA = "0x81A3D8", Offset = "0x81A3D8", VA = "0x81A3D8", Slot = "9")]
	protected override bool ConsiderTeleport(Vector3 start, ref Vector3 end)
	{
		return default(bool);
	}

	[Token(Token = "0x60000F9")]
	[Address(RVA = "0x81A5E4", Offset = "0x81A5E4", VA = "0x81A5E4")]
	public TeleportTargetHandlerNode()
	{
	}
}
[Token(Token = "0x2000023")]
public class TeleportTargetHandlerPhysical : TeleportTargetHandler
{
	[Token(Token = "0x60000FA")]
	[Address(RVA = "0x81A5F0", Offset = "0x81A5F0", VA = "0x81A5F0", Slot = "9")]
	protected override bool ConsiderTeleport(Vector3 start, ref Vector3 end)
	{
		return default(bool);
	}

	[Token(Token = "0x60000FB")]
	[Address(RVA = "0x81A6E8", Offset = "0x81A6E8", VA = "0x81A6E8")]
	public TeleportTargetHandlerPhysical()
	{
	}
}
[Token(Token = "0x2000024")]
public abstract class TeleportTransition : TeleportSupport
{
	[Token(Token = "0x60000FC")]
	[Address(RVA = "0x81A6EC", Offset = "0x81A6EC", VA = "0x81A6EC", Slot = "6")]
	protected override void AddEventHandlers()
	{
	}

	[Token(Token = "0x60000FD")]
	[Address(RVA = "0x81A780", Offset = "0x81A780", VA = "0x81A780", Slot = "7")]
	protected override void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x60000FE")]
	protected abstract void LocomotionTeleportOnEnterStateTeleporting();

	[Token(Token = "0x60000FF")]
	[Address(RVA = "0x81A810", Offset = "0x81A810", VA = "0x81A810")]
	protected TeleportTransition()
	{
	}
}
[Token(Token = "0x2000025")]
public class TeleportTransitionBlink : TeleportTransition
{
	[Token(Token = "0x20001B8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x43F380", Offset = "0x43F380")]
	private sealed class <BlinkCoroutine>d__4 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000C9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000C9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000C9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportTransitionBlink <>4__this;

		[Token(Token = "0x4000C9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <elapsedTime>5__2;

		[Token(Token = "0x4000CA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <teleportTime>5__3;

		[Token(Token = "0x4000CA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool <teleported>5__4;

		[Token(Token = "0x170000A6")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000CB9")]
			[Address(RVA = "0x852578", Offset = "0x852578", VA = "0x852578", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000A7")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000CBB")]
			[Address(RVA = "0x8525C0", Offset = "0x8525C0", VA = "0x8525C0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000CB6")]
		[Address(RVA = "0x852440", Offset = "0x852440", VA = "0x852440")]
		[DebuggerHidden]
		public <BlinkCoroutine>d__4(int <>1__state)
		{
		}

		[Token(Token = "0x6000CB7")]
		[Address(RVA = "0x85246C", Offset = "0x85246C", VA = "0x85246C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000CB8")]
		[Address(RVA = "0x852470", Offset = "0x852470", VA = "0x852470", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000CBA")]
		[Address(RVA = "0x852580", Offset = "0x852580", VA = "0x852580", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40000BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4402CC", Offset = "0x4402CC")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4402CC", Offset = "0x4402CC")]
	public float TransitionDuration;

	[Token(Token = "0x40000BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x440324", Offset = "0x440324")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x440324", Offset = "0x440324")]
	public float TeleportDelay;

	[Token(Token = "0x40000C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x440378", Offset = "0x440378")]
	public AnimationCurve FadeLevels;

	[Token(Token = "0x6000100")]
	[Address(RVA = "0x81A818", Offset = "0x81A818", VA = "0x81A818", Slot = "8")]
	protected override void LocomotionTeleportOnEnterStateTeleporting()
	{
	}

	[Token(Token = "0x6000101")]
	[Address(RVA = "0x81A844", Offset = "0x81A844", VA = "0x81A844")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x4421FC", Offset = "0x4421FC")]
	protected IEnumerator BlinkCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000102")]
	[Address(RVA = "0x81A8BC", Offset = "0x81A8BC", VA = "0x81A8BC")]
	public TeleportTransitionBlink()
	{
	}
}
[Token(Token = "0x2000026")]
public class TeleportTransitionInstant : TeleportTransition
{
	[Token(Token = "0x6000103")]
	[Address(RVA = "0x81AA68", Offset = "0x81AA68", VA = "0x81AA68", Slot = "8")]
	protected override void LocomotionTeleportOnEnterStateTeleporting()
	{
	}

	[Token(Token = "0x6000104")]
	[Address(RVA = "0x81AA84", Offset = "0x81AA84", VA = "0x81AA84")]
	public TeleportTransitionInstant()
	{
	}
}
[Token(Token = "0x2000027")]
public class TeleportTransitionWarp : TeleportTransition
{
	[Token(Token = "0x20001B9")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x43F390", Offset = "0x43F390")]
	private sealed class <DoWarp>d__3 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000CA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000CA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000CA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportTransitionWarp <>4__this;

		[Token(Token = "0x4000CA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Vector3 <startPosition>5__2;

		[Token(Token = "0x4000CA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float <elapsedTime>5__3;

		[Token(Token = "0x170000A8")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000CBF")]
			[Address(RVA = "0x852734", Offset = "0x852734", VA = "0x852734", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000A9")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000CC1")]
			[Address(RVA = "0x85277C", Offset = "0x85277C", VA = "0x85277C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000CBC")]
		[Address(RVA = "0x8525C8", Offset = "0x8525C8", VA = "0x8525C8")]
		[DebuggerHidden]
		public <DoWarp>d__3(int <>1__state)
		{
		}

		[Token(Token = "0x6000CBD")]
		[Address(RVA = "0x8525F4", Offset = "0x8525F4", VA = "0x8525F4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000CBE")]
		[Address(RVA = "0x8525F8", Offset = "0x8525F8", VA = "0x8525F8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000CC0")]
		[Address(RVA = "0x85273C", Offset = "0x85273C", VA = "0x85273C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40000C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4403B0", Offset = "0x4403B0")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4403B0", Offset = "0x4403B0")]
	public float TransitionDuration;

	[Token(Token = "0x40000C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[HideInInspector]
	public AnimationCurve PositionLerp;

	[Token(Token = "0x6000105")]
	[Address(RVA = "0x81AA8C", Offset = "0x81AA8C", VA = "0x81AA8C", Slot = "8")]
	protected override void LocomotionTeleportOnEnterStateTeleporting()
	{
	}

	[Token(Token = "0x6000106")]
	[Address(RVA = "0x81AAB8", Offset = "0x81AAB8", VA = "0x81AAB8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x44225C", Offset = "0x44225C")]
	private IEnumerator DoWarp()
	{
		return null;
	}

	[Token(Token = "0x6000107")]
	[Address(RVA = "0x81AB30", Offset = "0x81AB30", VA = "0x81AB30")]
	public TeleportTransitionWarp()
	{
	}
}
[Token(Token = "0x2000028")]
public static class NativeVideoPlayer
{
	[Token(Token = "0x20001BA")]
	public enum PlabackState
	{
		[Token(Token = "0x4000CA8")]
		Idle = 1,
		[Token(Token = "0x4000CA9")]
		Preparing,
		[Token(Token = "0x4000CAA")]
		Buffering,
		[Token(Token = "0x4000CAB")]
		Ready,
		[Token(Token = "0x4000CAC")]
		Ended
	}

	[Token(Token = "0x40000C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static IntPtr? _Activity;

	[Token(Token = "0x40000C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static IntPtr? _VideoPlayerClass;

	[Token(Token = "0x40000C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private static readonly jvalue[] EmptyParams;

	[Token(Token = "0x40000C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private static IntPtr getIsPlayingMethodId;

	[Token(Token = "0x40000C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private static IntPtr getCurrentPlaybackStateMethodId;

	[Token(Token = "0x40000C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private static IntPtr getDurationMethodId;

	[Token(Token = "0x40000C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private static IntPtr getPlaybackPositionMethodId;

	[Token(Token = "0x40000CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private static IntPtr setPlaybackPositionMethodId;

	[Token(Token = "0x40000CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private static jvalue[] setPlaybackPositionParams;

	[Token(Token = "0x40000CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private static IntPtr playVideoMethodId;

	[Token(Token = "0x40000CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private static jvalue[] playVideoParams;

	[Token(Token = "0x40000CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private static IntPtr stopMethodId;

	[Token(Token = "0x40000CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private static IntPtr resumeMethodId;

	[Token(Token = "0x40000D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private static IntPtr pauseMethodId;

	[Token(Token = "0x40000D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private static IntPtr setPlaybackSpeedMethodId;

	[Token(Token = "0x40000D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private static jvalue[] setPlaybackSpeedParams;

	[Token(Token = "0x40000D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private static IntPtr setLoopingMethodId;

	[Token(Token = "0x40000D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private static jvalue[] setLoopingParams;

	[Token(Token = "0x40000D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private static IntPtr setListenerRotationQuaternionMethodId;

	[Token(Token = "0x40000D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private static jvalue[] setListenerRotationQuaternionParams;

	[Token(Token = "0x1700000B")]
	private static IntPtr VideoPlayerClass
	{
		[Token(Token = "0x6000108")]
		[Address(RVA = "0x7233EC", Offset = "0x7233EC", VA = "0x7233EC")]
		get
		{
			return default(IntPtr);
		}
	}

	[Token(Token = "0x1700000C")]
	private static IntPtr Activity
	{
		[Token(Token = "0x6000109")]
		[Address(RVA = "0x723730", Offset = "0x723730", VA = "0x723730")]
		get
		{
			return default(IntPtr);
		}
	}

	[Token(Token = "0x1700000D")]
	public static bool IsAvailable
	{
		[Token(Token = "0x600010A")]
		[Address(RVA = "0x720410", Offset = "0x720410", VA = "0x720410")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700000E")]
	public static bool IsPlaying
	{
		[Token(Token = "0x600010B")]
		[Address(RVA = "0x7217CC", Offset = "0x7217CC", VA = "0x7217CC")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700000F")]
	public static PlabackState CurrentPlaybackState
	{
		[Token(Token = "0x600010C")]
		[Address(RVA = "0x723A00", Offset = "0x723A00", VA = "0x723A00")]
		get
		{
			return default(PlabackState);
		}
	}

	[Token(Token = "0x17000010")]
	public static long Duration
	{
		[Token(Token = "0x600010D")]
		[Address(RVA = "0x7219F0", Offset = "0x7219F0", VA = "0x7219F0")]
		get
		{
			return default(long);
		}
	}

	[Token(Token = "0x17000011")]
	public static long PlaybackPosition
	{
		[Token(Token = "0x600010E")]
		[Address(RVA = "0x7218DC", Offset = "0x7218DC", VA = "0x7218DC")]
		get
		{
			return default(long);
		}
		[Token(Token = "0x600010F")]
		[Address(RVA = "0x720F00", Offset = "0x720F00", VA = "0x720F00")]
		set
		{
		}
	}

	[Token(Token = "0x6000110")]
	[Address(RVA = "0x723B14", Offset = "0x723B14", VA = "0x723B14")]
	public static void PlayVideo(string path, string drmLicenseUrl, IntPtr surfaceObj)
	{
	}

	[Token(Token = "0x6000111")]
	[Address(RVA = "0x721DC0", Offset = "0x721DC0", VA = "0x721DC0")]
	public static void Stop()
	{
	}

	[Token(Token = "0x6000112")]
	[Address(RVA = "0x720B4C", Offset = "0x720B4C", VA = "0x720B4C")]
	public static void Play()
	{
	}

	[Token(Token = "0x6000113")]
	[Address(RVA = "0x720CEC", Offset = "0x720CEC", VA = "0x720CEC")]
	public static void Pause()
	{
	}

	[Token(Token = "0x6000114")]
	[Address(RVA = "0x721BB8", Offset = "0x721BB8", VA = "0x721BB8")]
	public static void SetPlaybackSpeed(float speed)
	{
	}

	[Token(Token = "0x6000115")]
	[Address(RVA = "0x723D40", Offset = "0x723D40", VA = "0x723D40")]
	public static void SetLooping(bool looping)
	{
	}

	[Token(Token = "0x6000116")]
	[Address(RVA = "0x7215DC", Offset = "0x7215DC", VA = "0x7215DC")]
	public static void SetListenerRotation(Quaternion rotation)
	{
	}
}
[Token(Token = "0x2000029")]
public class ButtonDownListener : MonoBehaviour, IPointerDownHandler, IEventSystemHandler
{
	[Token(Token = "0x14000010")]
	public event Action onButtonDown
	{
		[Token(Token = "0x6000118")]
		[Address(RVA = "0x923A80", Offset = "0x923A80", VA = "0x923A80")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4422BC", Offset = "0x4422BC")]
		add
		{
		}
		[Token(Token = "0x6000119")]
		[Address(RVA = "0x923B20", Offset = "0x923B20", VA = "0x923B20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4422CC", Offset = "0x4422CC")]
		remove
		{
		}
	}

	[Token(Token = "0x600011A")]
	[Address(RVA = "0x923BC0", Offset = "0x923BC0", VA = "0x923BC0", Slot = "4")]
	public void OnPointerDown(PointerEventData eventData)
	{
	}

	[Token(Token = "0x600011B")]
	[Address(RVA = "0x923BD4", Offset = "0x923BD4", VA = "0x923BD4")]
	public ButtonDownListener()
	{
	}
}
[Token(Token = "0x200002A")]
public class MediaPlayerImage : Image
{
	[Token(Token = "0x20001BB")]
	public enum ButtonType
	{
		[Token(Token = "0x4000CAE")]
		Play,
		[Token(Token = "0x4000CAF")]
		Pause,
		[Token(Token = "0x4000CB0")]
		FastForward,
		[Token(Token = "0x4000CB1")]
		Rewind,
		[Token(Token = "0x4000CB2")]
		SkipForward,
		[Token(Token = "0x4000CB3")]
		SkipBack,
		[Token(Token = "0x4000CB4")]
		Stop
	}

	[Token(Token = "0x40000D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	[SerializeField]
	private ButtonType m_ButtonType;

	[Token(Token = "0x17000012")]
	public ButtonType buttonType
	{
		[Token(Token = "0x600011C")]
		[Address(RVA = "0x1091390", Offset = "0x1091390", VA = "0x1091390")]
		get
		{
			return default(ButtonType);
		}
		[Token(Token = "0x600011D")]
		[Address(RVA = "0x1091398", Offset = "0x1091398", VA = "0x1091398")]
		set
		{
		}
	}

	[Token(Token = "0x600011E")]
	[Address(RVA = "0x10913BC", Offset = "0x10913BC", VA = "0x10913BC", Slot = "44")]
	protected override void OnPopulateMesh(VertexHelper toFill)
	{
	}

	[Token(Token = "0x600011F")]
	[Address(RVA = "0x1092854", Offset = "0x1092854", VA = "0x1092854")]
	public MediaPlayerImage()
	{
	}
}
[Token(Token = "0x200002B")]
public class MoviePlayerSample : MonoBehaviour
{
	[Token(Token = "0x20001BC")]
	public enum VideoShape
	{
		[Token(Token = "0x4000CB6")]
		_360,
		[Token(Token = "0x4000CB7")]
		_180,
		[Token(Token = "0x4000CB8")]
		Quad
	}

	[Token(Token = "0x20001BD")]
	public enum VideoStereo
	{
		[Token(Token = "0x4000CBA")]
		Mono,
		[Token(Token = "0x4000CBB")]
		TopBottom,
		[Token(Token = "0x4000CBC")]
		LeftRight,
		[Token(Token = "0x4000CBD")]
		BottomTop
	}

	[Token(Token = "0x20001BE")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x43F3A0", Offset = "0x43F3A0")]
	private sealed class <Start>d__32 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000CBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000CBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000CC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MoviePlayerSample <>4__this;

		[Token(Token = "0x170000AA")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000CC5")]
			[Address(RVA = "0x84BD70", Offset = "0x84BD70", VA = "0x84BD70", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000AB")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000CC7")]
			[Address(RVA = "0x84BDB8", Offset = "0x84BDB8", VA = "0x84BDB8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000CC2")]
		[Address(RVA = "0x84BB7C", Offset = "0x84BB7C", VA = "0x84BB7C")]
		[DebuggerHidden]
		public <Start>d__32(int <>1__state)
		{
		}

		[Token(Token = "0x6000CC3")]
		[Address(RVA = "0x84BBA8", Offset = "0x84BBA8", VA = "0x84BBA8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000CC4")]
		[Address(RVA = "0x84BBAC", Offset = "0x84BBAC", VA = "0x84BBAC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000CC6")]
		[Address(RVA = "0x84BD78", Offset = "0x84BD78", VA = "0x84BD78", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20001BF")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x43F3B0", Offset = "0x43F3B0")]
	private sealed class <>c__DisplayClass33_0
	{
		[Token(Token = "0x4000CC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string moviePath;

		[Token(Token = "0x4000CC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string drmLicencesUrl;

		[Token(Token = "0x4000CC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MoviePlayerSample <>4__this;

		[Token(Token = "0x6000CC8")]
		[Address(RVA = "0x84BA84", Offset = "0x84BA84", VA = "0x84BA84")]
		public <>c__DisplayClass33_0()
		{
		}

		[Token(Token = "0x6000CC9")]
		[Address(RVA = "0x84BA8C", Offset = "0x84BA8C", VA = "0x84BA8C")]
		internal void <Play>b__0()
		{
		}
	}

	[Token(Token = "0x40000D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool videoPausedBeforeAppPause;

	[Token(Token = "0x40000DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private VideoPlayer videoPlayer;

	[Token(Token = "0x40000DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private OVROverlay overlay;

	[Token(Token = "0x40000DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Renderer mediaRenderer;

	[Token(Token = "0x40000DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x440438", Offset = "0x440438")]
	private bool <IsPlaying>k__BackingField;

	[Token(Token = "0x40000DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x440448", Offset = "0x440448")]
	private long <Duration>k__BackingField;

	[Token(Token = "0x40000DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x440458", Offset = "0x440458")]
	private long <PlaybackPosition>k__BackingField;

	[Token(Token = "0x40000E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private RenderTexture copyTexture;

	[Token(Token = "0x40000E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Material externalTex2DMaterial;

	[Token(Token = "0x40000E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public string MovieName;

	[Token(Token = "0x40000E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public string DrmLicenseUrl;

	[Token(Token = "0x40000E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public bool LoopVideo;

	[Token(Token = "0x40000E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public VideoShape Shape;

	[Token(Token = "0x40000E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public VideoStereo Stereo;

	[Token(Token = "0x40000E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public bool DisplayMono;

	[Token(Token = "0x40000E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private VideoShape _LastShape;

	[Token(Token = "0x40000E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private VideoStereo _LastStereo;

	[Token(Token = "0x40000EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private bool _LastDisplayMono;

	[Token(Token = "0x17000013")]
	public bool IsPlaying
	{
		[Token(Token = "0x6000120")]
		[Address(RVA = "0x720134", Offset = "0x720134", VA = "0x720134")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4422DC", Offset = "0x4422DC")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000121")]
		[Address(RVA = "0x72013C", Offset = "0x72013C", VA = "0x72013C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4422EC", Offset = "0x4422EC")]
		private set
		{
		}
	}

	[Token(Token = "0x17000014")]
	public long Duration
	{
		[Token(Token = "0x6000122")]
		[Address(RVA = "0x720148", Offset = "0x720148", VA = "0x720148")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4422FC", Offset = "0x4422FC")]
		get
		{
			return default(long);
		}
		[Token(Token = "0x6000123")]
		[Address(RVA = "0x720150", Offset = "0x720150", VA = "0x720150")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x44230C", Offset = "0x44230C")]
		private set
		{
		}
	}

	[Token(Token = "0x17000015")]
	public long PlaybackPosition
	{
		[Token(Token = "0x6000124")]
		[Address(RVA = "0x720158", Offset = "0x720158", VA = "0x720158")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x44231C", Offset = "0x44231C")]
		get
		{
			return default(long);
		}
		[Token(Token = "0x6000125")]
		[Address(RVA = "0x720160", Offset = "0x720160", VA = "0x720160")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x44232C", Offset = "0x44232C")]
		private set
		{
		}
	}

	[Token(Token = "0x6000126")]
	[Address(RVA = "0x720168", Offset = "0x720168", VA = "0x720168")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000127")]
	[Address(RVA = "0x720480", Offset = "0x720480", VA = "0x720480")]
	private bool IsLocalVideo(string movieName)
	{
		return default(bool);
	}

	[Token(Token = "0x6000128")]
	[Address(RVA = "0x7204E4", Offset = "0x7204E4", VA = "0x7204E4")]
	private void UpdateShapeAndStereo()
	{
	}

	[Token(Token = "0x6000129")]
	[Address(RVA = "0x72075C", Offset = "0x72075C", VA = "0x72075C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x44233C", Offset = "0x44233C")]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x600012A")]
	[Address(RVA = "0x7207D4", Offset = "0x7207D4", VA = "0x7207D4")]
	public void Play(string moviePath, string drmLicencesUrl)
	{
	}

	[Token(Token = "0x600012B")]
	[Address(RVA = "0x720ABC", Offset = "0x720ABC", VA = "0x720ABC")]
	public void Play()
	{
	}

	[Token(Token = "0x600012C")]
	[Address(RVA = "0x720C60", Offset = "0x720C60", VA = "0x720C60")]
	public void Pause()
	{
	}

	[Token(Token = "0x600012D")]
	[Address(RVA = "0x720E00", Offset = "0x720E00", VA = "0x720E00")]
	public void SeekTo(long position)
	{
	}

	[Token(Token = "0x600012E")]
	[Address(RVA = "0x721074", Offset = "0x721074", VA = "0x721074")]
	private void Update()
	{
	}

	[Token(Token = "0x600012F")]
	[Address(RVA = "0x721B04", Offset = "0x721B04", VA = "0x721B04")]
	public void SetPlaybackSpeed(float speed)
	{
	}

	[Token(Token = "0x6000130")]
	[Address(RVA = "0x721D34", Offset = "0x721D34", VA = "0x721D34")]
	public void Stop()
	{
	}

	[Token(Token = "0x6000131")]
	[Address(RVA = "0x721ED4", Offset = "0x721ED4", VA = "0x721ED4")]
	private void OnApplicationPause(bool appWasPaused)
	{
	}

	[Token(Token = "0x6000132")]
	[Address(RVA = "0x721FC0", Offset = "0x721FC0", VA = "0x721FC0")]
	public MoviePlayerSample()
	{
	}
}
[Token(Token = "0x200002C")]
public class MoviePlayerSampleControls : MonoBehaviour
{
	[Token(Token = "0x20001C0")]
	private enum PlaybackState
	{
		[Token(Token = "0x4000CC5")]
		Playing,
		[Token(Token = "0x4000CC6")]
		Paused,
		[Token(Token = "0x4000CC7")]
		Rewinding,
		[Token(Token = "0x4000CC8")]
		FastForwarding
	}

	[Token(Token = "0x40000EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public MoviePlayerSample Player;

	[Token(Token = "0x40000EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public OVRInputModule InputModule;

	[Token(Token = "0x40000ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OVRGazePointer GazePointer;

	[Token(Token = "0x40000EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject LeftHand;

	[Token(Token = "0x40000EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject RightHand;

	[Token(Token = "0x40000F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Canvas Canvas;

	[Token(Token = "0x40000F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public ButtonDownListener PlayPause;

	[Token(Token = "0x40000F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public MediaPlayerImage PlayPauseImage;

	[Token(Token = "0x40000F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Slider ProgressBar;

	[Token(Token = "0x40000F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public ButtonDownListener FastForward;

	[Token(Token = "0x40000F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public MediaPlayerImage FastForwardImage;

	[Token(Token = "0x40000F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public ButtonDownListener Rewind;

	[Token(Token = "0x40000F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public MediaPlayerImage RewindImage;

	[Token(Token = "0x40000F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public float TimeoutTime;

	[Token(Token = "0x40000F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private bool _isVisible;

	[Token(Token = "0x40000FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private float _lastButtonTime;

	[Token(Token = "0x40000FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private bool _didSeek;

	[Token(Token = "0x40000FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private long _seekPreviousPosition;

	[Token(Token = "0x40000FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private long _rewindStartPosition;

	[Token(Token = "0x40000FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private float _rewindStartTime;

	[Token(Token = "0x40000FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	private PlaybackState _state;

	[Token(Token = "0x6000133")]
	[Address(RVA = "0x721FD0", Offset = "0x721FD0", VA = "0x721FD0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000134")]
	[Address(RVA = "0x7222DC", Offset = "0x7222DC", VA = "0x7222DC")]
	private void OnPlayPauseClicked()
	{
	}

	[Token(Token = "0x6000135")]
	[Address(RVA = "0x722408", Offset = "0x722408", VA = "0x722408")]
	private void OnFastForwardClicked()
	{
	}

	[Token(Token = "0x6000136")]
	[Address(RVA = "0x722514", Offset = "0x722514", VA = "0x722514")]
	private void OnRewindClicked()
	{
	}

	[Token(Token = "0x6000137")]
	[Address(RVA = "0x7225F4", Offset = "0x7225F4", VA = "0x7225F4")]
	private void OnSeekBarMoved(float value)
	{
	}

	[Token(Token = "0x6000138")]
	[Address(RVA = "0x7224E8", Offset = "0x7224E8", VA = "0x7224E8")]
	private void Seek(long pos)
	{
	}

	[Token(Token = "0x6000139")]
	[Address(RVA = "0x72263C", Offset = "0x72263C", VA = "0x72263C")]
	private void Update()
	{
	}

	[Token(Token = "0x600013A")]
	[Address(RVA = "0x7221C8", Offset = "0x7221C8", VA = "0x7221C8")]
	private void SetVisible(bool visible)
	{
	}

	[Token(Token = "0x600013B")]
	[Address(RVA = "0x7229A0", Offset = "0x7229A0", VA = "0x7229A0")]
	public MoviePlayerSampleControls()
	{
	}
}
[Token(Token = "0x200002D")]
[ExecuteInEditMode]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x43EE80", Offset = "0x43EE80")]
public class OVROverlayMeshGenerator : MonoBehaviour
{
	[Token(Token = "0x20001C1")]
	private enum CubeFace
	{
		[Token(Token = "0x4000CCA")]
		Right,
		[Token(Token = "0x4000CCB")]
		Left,
		[Token(Token = "0x4000CCC")]
		Top,
		[Token(Token = "0x4000CCD")]
		Bottom,
		[Token(Token = "0x4000CCE")]
		Front,
		[Token(Token = "0x4000CCF")]
		Back,
		[Token(Token = "0x4000CD0")]
		COUNT
	}

	[Token(Token = "0x4000100")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Mesh _Mesh;

	[Token(Token = "0x4000101")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private List<Vector3> _Verts;

	[Token(Token = "0x4000102")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private List<Vector2> _UV;

	[Token(Token = "0x4000103")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private List<int> _Tris;

	[Token(Token = "0x4000104")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private OVROverlay _Overlay;

	[Token(Token = "0x4000105")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private MeshFilter _MeshFilter;

	[Token(Token = "0x4000106")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private MeshCollider _MeshCollider;

	[Token(Token = "0x4000107")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Transform _CameraRoot;

	[Token(Token = "0x4000108")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Transform _Transform;

	[Token(Token = "0x4000109")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private OVROverlay.OverlayShape _LastShape;

	[Token(Token = "0x400010A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private Vector3 _LastPosition;

	[Token(Token = "0x400010B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Quaternion _LastRotation;

	[Token(Token = "0x400010C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Vector3 _LastScale;

	[Token(Token = "0x400010D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private Rect _LastRectLeft;

	[Token(Token = "0x400010E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	private Rect _LastRectRight;

	[Token(Token = "0x400010F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private bool _Awake;

	[Token(Token = "0x4000110")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly Vector3[] BottomLeft;

	[Token(Token = "0x4000111")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static readonly Vector3[] RightVector;

	[Token(Token = "0x4000112")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static readonly Vector3[] UpVector;

	[Token(Token = "0x600013C")]
	[Address(RVA = "0xE5C028", Offset = "0xE5C028", VA = "0xE5C028")]
	protected void Awake()
	{
	}

	[Token(Token = "0x600013D")]
	[Address(RVA = "0xE5C1E4", Offset = "0xE5C1E4", VA = "0xE5C1E4")]
	private Rect GetBoundingRect(Rect a, Rect b)
	{
		return default(Rect);
	}

	[Token(Token = "0x600013E")]
	[Address(RVA = "0xE5C350", Offset = "0xE5C350", VA = "0xE5C350")]
	private void Update()
	{
	}

	[Token(Token = "0x600013F")]
	[Address(RVA = "0xE5C718", Offset = "0xE5C718", VA = "0xE5C718")]
	private void UpdateMesh(OVROverlay.OverlayShape shape, Vector3 position, Quaternion rotation, Vector3 scale, Rect rect)
	{
	}

	[Token(Token = "0x6000140")]
	[Address(RVA = "0xE5CA50", Offset = "0xE5CA50", VA = "0xE5CA50")]
	public static void GenerateMesh(List<Vector3> verts, List<Vector2> uvs, List<int> tris, OVROverlay.OverlayShape shape, Vector3 position, Quaternion rotation, Vector3 scale, Rect rect)
	{
	}

	[Token(Token = "0x6000141")]
	[Address(RVA = "0xE5DB48", Offset = "0xE5DB48", VA = "0xE5DB48")]
	private static Vector2 GetSphereUV(float theta, float phi, float expand_coef)
	{
		return default(Vector2);
	}

	[Token(Token = "0x6000142")]
	[Address(RVA = "0xE5DB80", Offset = "0xE5DB80", VA = "0xE5DB80")]
	private static Vector3 GetSphereVert(float theta, float phi)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000143")]
	[Address(RVA = "0xE5CDCC", Offset = "0xE5CDCC", VA = "0xE5CDCC")]
	public static void BuildSphere(List<Vector3> verts, List<Vector2> uv, List<int> triangles, Vector3 position, Quaternion rotation, Vector3 scale, Rect rect, float worldScale = 800f, int latitudes = 128, int longitudes = 128, float expand_coef = 1f)
	{
	}

	[Token(Token = "0x6000144")]
	[Address(RVA = "0xE5DBF4", Offset = "0xE5DBF4", VA = "0xE5DBF4")]
	private static Vector2 GetCubeUV(CubeFace face, Vector2 sideUV, float expand_coef)
	{
		return default(Vector2);
	}

	[Token(Token = "0x6000145")]
	[Address(RVA = "0xE5DD08", Offset = "0xE5DD08", VA = "0xE5DD08")]
	private static Vector3 GetCubeVert(CubeFace face, Vector2 sideUV, float expand_coef)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000146")]
	[Address(RVA = "0xE5D25C", Offset = "0xE5D25C", VA = "0xE5D25C")]
	public static void BuildCube(List<Vector3> verts, List<Vector2> uv, List<int> triangles, Vector3 position, Quaternion rotation, Vector3 scale, float worldScale = 800f, int subQuads = 1, float expand_coef = 1.01f)
	{
	}

	[Token(Token = "0x6000147")]
	[Address(RVA = "0xE5D55C", Offset = "0xE5D55C", VA = "0xE5D55C")]
	public static void BuildQuad(List<Vector3> verts, List<Vector2> uv, List<int> triangles, Rect rect)
	{
	}

	[Token(Token = "0x6000148")]
	[Address(RVA = "0xE5D808", Offset = "0xE5D808", VA = "0xE5D808")]
	public static void BuildHemicylinder(List<Vector3> verts, List<Vector2> uv, List<int> triangles, Vector3 scale, Rect rect, int longitudes = 128)
	{
	}

	[Token(Token = "0x6000149")]
	[Address(RVA = "0xE5DE28", Offset = "0xE5DE28", VA = "0xE5DE28")]
	public OVROverlayMeshGenerator()
	{
	}
}
[Token(Token = "0x200002E")]
public static class VectorUtil
{
	[Token(Token = "0x600014B")]
	[Address(RVA = "0x823250", Offset = "0x823250", VA = "0x823250")]
	public static Vector4 ToVector(this Rect rect)
	{
		return default(Vector4);
	}
}
[Token(Token = "0x200002F")]
public class DebugUISample : MonoBehaviour
{
	[Token(Token = "0x4000113")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool inMenu;

	[Token(Token = "0x4000114")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Text sliderText;

	[Token(Token = "0x600014C")]
	[Address(RVA = "0x930104", Offset = "0x930104", VA = "0x930104")]
	private void Start()
	{
	}

	[Token(Token = "0x600014D")]
	[Address(RVA = "0x930618", Offset = "0x930618", VA = "0x930618")]
	public void TogglePressed(Toggle t)
	{
	}

	[Token(Token = "0x600014E")]
	[Address(RVA = "0x9306D8", Offset = "0x9306D8", VA = "0x9306D8")]
	public void RadioPressed(string radioLabel, string group, Toggle t)
	{
	}

	[Token(Token = "0x600014F")]
	[Address(RVA = "0x930958", Offset = "0x930958", VA = "0x930958")]
	public void SliderPressed(float f)
	{
	}

	[Token(Token = "0x6000150")]
	[Address(RVA = "0x930A38", Offset = "0x930A38", VA = "0x930A38")]
	private void Update()
	{
	}

	[Token(Token = "0x6000151")]
	[Address(RVA = "0x930B1C", Offset = "0x930B1C", VA = "0x930B1C")]
	private void LogButtonPressed()
	{
	}

	[Token(Token = "0x6000152")]
	[Address(RVA = "0x930B90", Offset = "0x930B90", VA = "0x930B90")]
	public DebugUISample()
	{
	}

	[Token(Token = "0x6000153")]
	[Address(RVA = "0x930B98", Offset = "0x930B98", VA = "0x930B98")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4423AC", Offset = "0x4423AC")]
	private void <Start>b__2_0(Toggle t)
	{
	}

	[Token(Token = "0x6000154")]
	[Address(RVA = "0x930BFC", Offset = "0x930BFC", VA = "0x930BFC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4423BC", Offset = "0x4423BC")]
	private void <Start>b__2_1(Toggle t)
	{
	}

	[Token(Token = "0x6000155")]
	[Address(RVA = "0x930C60", Offset = "0x930C60", VA = "0x930C60")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4423CC", Offset = "0x4423CC")]
	private void <Start>b__2_2(Toggle t)
	{
	}

	[Token(Token = "0x6000156")]
	[Address(RVA = "0x930CC4", Offset = "0x930CC4", VA = "0x930CC4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4423DC", Offset = "0x4423DC")]
	private void <Start>b__2_3(Toggle t)
	{
	}
}
[Token(Token = "0x2000030")]
public class HandsActiveChecker : MonoBehaviour
{
	[Token(Token = "0x20001C2")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x43F3C0", Offset = "0x43F3C0")]
	private sealed class <GetCenterEye>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000CD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000CD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000CD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public HandsActiveChecker <>4__this;

		[Token(Token = "0x170000AC")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000CCD")]
			[Address(RVA = "0x85EB10", Offset = "0x85EB10", VA = "0x85EB10", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000AD")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000CCF")]
			[Address(RVA = "0x85EB58", Offset = "0x85EB58", VA = "0x85EB58", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000CCA")]
		[Address(RVA = "0x85E994", Offset = "0x85E994", VA = "0x85E994")]
		[DebuggerHidden]
		public <GetCenterEye>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x6000CCB")]
		[Address(RVA = "0x85E9C0", Offset = "0x85E9C0", VA = "0x85E9C0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000CCC")]
		[Address(RVA = "0x85E9C4", Offset = "0x85E9C4", VA = "0x85E9C4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000CCE")]
		[Address(RVA = "0x85EB18", Offset = "0x85EB18", VA = "0x85EB18", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000115")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject _notificationPrefab;

	[Token(Token = "0x4000116")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private GameObject _notification;

	[Token(Token = "0x4000117")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private OVRCameraRig _cameraRig;

	[Token(Token = "0x4000118")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Transform _centerEye;

	[Token(Token = "0x6000157")]
	[Address(RVA = "0x754918", Offset = "0x754918", VA = "0x754918")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000158")]
	[Address(RVA = "0x754A34", Offset = "0x754A34", VA = "0x754A34")]
	private void Update()
	{
	}

	[Token(Token = "0x6000159")]
	[Address(RVA = "0x7549BC", Offset = "0x7549BC", VA = "0x7549BC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x4423EC", Offset = "0x4423EC")]
	private IEnumerator GetCenterEye()
	{
		return null;
	}

	[Token(Token = "0x600015A")]
	[Address(RVA = "0x754BE0", Offset = "0x754BE0", VA = "0x754BE0")]
	public HandsActiveChecker()
	{
	}
}
[Token(Token = "0x2000031")]
[ExecuteInEditMode]
public class CharacterCapsule : MonoBehaviour
{
	[Token(Token = "0x4000119")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private CharacterController _character;

	[Token(Token = "0x400011A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private MeshFilter _meshFilter;

	[Token(Token = "0x400011B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float _height;

	[Token(Token = "0x400011C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float _radius;

	[Token(Token = "0x400011D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x440478", Offset = "0x440478")]
	public int SubdivisionsU;

	[Token(Token = "0x400011E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x440494", Offset = "0x440494")]
	public int SubdivisionsV;

	[Token(Token = "0x400011F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int _subdivisionU;

	[Token(Token = "0x4000120")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private int _subdivisionV;

	[Token(Token = "0x4000121")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Vector3[] _vertices;

	[Token(Token = "0x4000122")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private int[] _triangles;

	[Token(Token = "0x600015B")]
	[Address(RVA = "0x928EC0", Offset = "0x928EC0", VA = "0x928EC0")]
	private void Update()
	{
	}

	[Token(Token = "0x600015C")]
	[Address(RVA = "0x929908", Offset = "0x929908", VA = "0x929908")]
	public CharacterCapsule()
	{
	}
}
[Token(Token = "0x2000032")]
public class LocomotionSampleSupport : MonoBehaviour
{
	[Token(Token = "0x4000123")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private LocomotionController lc;

	[Token(Token = "0x4000124")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool inMenu;

	[Token(Token = "0x17000016")]
	private LocomotionTeleport TeleportController
	{
		[Token(Token = "0x600015D")]
		[Address(RVA = "0x108A730", Offset = "0x108A730", VA = "0x108A730")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600015E")]
	[Address(RVA = "0x108A784", Offset = "0x108A784", VA = "0x108A784")]
	public void Start()
	{
	}

	[Token(Token = "0x600015F")]
	[Address(RVA = "0x108AB8C", Offset = "0x108AB8C", VA = "0x108AB8C")]
	public void Update()
	{
	}

	[Token(Token = "0x6000160")]
	[Address(RVA = "0x108AC78", Offset = "0x108AC78", VA = "0x108AC78")]
	[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x44244C", Offset = "0x44244C")]
	private static void Log(string msg)
	{
	}

	[Token(Token = "0x6000161")]
	public static TActivate ActivateCategory<TCategory, TActivate>(GameObject target) where TCategory : MonoBehaviour where TActivate : MonoBehaviour
	{
		return null;
	}

	[Token(Token = "0x6000162")]
	protected void ActivateHandlers<TInput, TAim, TTarget, TOrientation, TTransition>() where TInput : TeleportInputHandler where TAim : TeleportAimHandler where TTarget : TeleportTargetHandler where TOrientation : TeleportOrientationHandler where TTransition : TeleportTransition
	{
	}

	[Token(Token = "0x6000163")]
	protected void ActivateInput<TActivate>() where TActivate : TeleportInputHandler
	{
	}

	[Token(Token = "0x6000164")]
	protected void ActivateAim<TActivate>() where TActivate : TeleportAimHandler
	{
	}

	[Token(Token = "0x6000165")]
	protected void ActivateTarget<TActivate>() where TActivate : TeleportTargetHandler
	{
	}

	[Token(Token = "0x6000166")]
	protected void ActivateOrientation<TActivate>() where TActivate : TeleportOrientationHandler
	{
	}

	[Token(Token = "0x6000167")]
	protected void ActivateTransition<TActivate>() where TActivate : TeleportTransition
	{
	}

	[Token(Token = "0x6000168")]
	protected TActivate ActivateCategory<TCategory, TActivate>() where TCategory : MonoBehaviour where TActivate : MonoBehaviour
	{
		return null;
	}

	[Token(Token = "0x6000169")]
	[Address(RVA = "0x108ACDC", Offset = "0x108ACDC", VA = "0x108ACDC")]
	protected void UpdateToggle(Toggle toggle, bool enabled)
	{
	}

	[Token(Token = "0x600016A")]
	[Address(RVA = "0x108AD18", Offset = "0x108AD18", VA = "0x108AD18")]
	private void SetupNonCap()
	{
	}

	[Token(Token = "0x600016B")]
	[Address(RVA = "0x108AD88", Offset = "0x108AD88", VA = "0x108AD88")]
	private void SetupTeleportDefaults()
	{
	}

	[Token(Token = "0x600016C")]
	[Address(RVA = "0x108AEF8", Offset = "0x108AEF8", VA = "0x108AEF8")]
	protected GameObject AddInstance(GameObject template, string label)
	{
		return null;
	}

	[Token(Token = "0x600016D")]
	[Address(RVA = "0x108AFD4", Offset = "0x108AFD4", VA = "0x108AFD4")]
	private void SetupNodeTeleport()
	{
	}

	[Token(Token = "0x600016E")]
	[Address(RVA = "0x108AA84", Offset = "0x108AA84", VA = "0x108AA84")]
	private void SetupTwoStickTeleport()
	{
	}

	[Token(Token = "0x600016F")]
	[Address(RVA = "0x108B09C", Offset = "0x108B09C", VA = "0x108B09C")]
	private void SetupWalkOnly()
	{
	}

	[Token(Token = "0x6000170")]
	[Address(RVA = "0x108B104", Offset = "0x108B104", VA = "0x108B104")]
	private void SetupLeftStrafeRightTeleport()
	{
	}

	[Token(Token = "0x6000171")]
	[Address(RVA = "0x108B1FC", Offset = "0x108B1FC", VA = "0x108B1FC")]
	public LocomotionSampleSupport()
	{
	}
}
[Token(Token = "0x2000033")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x43EF10", Offset = "0x43EF10")]
public class OVROverlayCanvas : MonoBehaviour
{
	[Token(Token = "0x20001C3")]
	public enum DrawMode
	{
		[Token(Token = "0x4000CD5")]
		Opaque,
		[Token(Token = "0x4000CD6")]
		OpaqueWithClip,
		[Token(Token = "0x4000CD7")]
		TransparentDefaultAlpha,
		[Token(Token = "0x4000CD8")]
		TransparentCorrectAlpha
	}

	[Token(Token = "0x4000125")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	[HideInInspector]
	private Shader _transparentShader;

	[Token(Token = "0x4000126")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	[HideInInspector]
	private Shader _opaqueShader;

	[Token(Token = "0x4000127")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private RectTransform _rectTransform;

	[Token(Token = "0x4000128")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Canvas _canvas;

	[Token(Token = "0x4000129")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Camera _camera;

	[Token(Token = "0x400012A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private OVROverlay _overlay;

	[Token(Token = "0x400012B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private RenderTexture _renderTexture;

	[Token(Token = "0x400012C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private MeshRenderer _meshRenderer;

	[Token(Token = "0x400012D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Mesh _quad;

	[Token(Token = "0x400012E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Material _defaultMat;

	[Token(Token = "0x400012F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public int MaxTextureSize;

	[Token(Token = "0x4000130")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public int MinTextureSize;

	[Token(Token = "0x4000131")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public float PixelsPerUnit;

	[Token(Token = "0x4000132")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public int DrawRate;

	[Token(Token = "0x4000133")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public int DrawFrameOffset;

	[Token(Token = "0x4000134")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public bool Expensive;

	[Token(Token = "0x4000135")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public int Layer;

	[Token(Token = "0x4000136")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public DrawMode Opacity;

	[Token(Token = "0x4000137")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private bool ScaleViewport;

	[Token(Token = "0x4000138")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly Plane[] _FrustumPlanes;

	[Token(Token = "0x17000017")]
	public bool overlayEnabled
	{
		[Token(Token = "0x6000178")]
		[Address(RVA = "0xE5BE04", Offset = "0xE5BE04", VA = "0xE5BE04")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000179")]
		[Address(RVA = "0xE5BE94", Offset = "0xE5BE94", VA = "0xE5BE94")]
		set
		{
		}
	}

	[Token(Token = "0x6000172")]
	[Address(RVA = "0xE5A880", Offset = "0xE5A880", VA = "0xE5A880")]
	private void Start()
	{
	}

	[Token(Token = "0x6000173")]
	[Address(RVA = "0xE5B470", Offset = "0xE5B470", VA = "0xE5B470")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000174")]
	[Address(RVA = "0xE5B4F0", Offset = "0xE5B4F0", VA = "0xE5B4F0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000175")]
	[Address(RVA = "0xE5B5E0", Offset = "0xE5B5E0", VA = "0xE5B5E0")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000176")]
	[Address(RVA = "0xE5B6D0", Offset = "0xE5B6D0", VA = "0xE5B6D0", Slot = "4")]
	protected virtual bool ShouldRender()
	{
		return default(bool);
	}

	[Token(Token = "0x6000177")]
	[Address(RVA = "0xE5B8DC", Offset = "0xE5B8DC", VA = "0xE5B8DC")]
	private void Update()
	{
	}

	[Token(Token = "0x600017A")]
	[Address(RVA = "0xE5BF60", Offset = "0xE5BF60", VA = "0xE5BF60")]
	public OVROverlayCanvas()
	{
	}
}
[Token(Token = "0x2000034")]
public class StartMenu : MonoBehaviour
{
	[Token(Token = "0x20001C4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x43F3D0", Offset = "0x43F3D0")]
	private sealed class <>c__DisplayClass3_0
	{
		[Token(Token = "0x4000CD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int sceneIndex;

		[Token(Token = "0x4000CDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public StartMenu <>4__this;

		[Token(Token = "0x6000CD0")]
		[Address(RVA = "0x851C3C", Offset = "0x851C3C", VA = "0x851C3C")]
		public <>c__DisplayClass3_0()
		{
		}

		[Token(Token = "0x6000CD1")]
		[Address(RVA = "0x851C44", Offset = "0x851C44", VA = "0x851C44")]
		internal void <Start>b__0()
		{
		}
	}

	[Token(Token = "0x4000139")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OVROverlay overlay;

	[Token(Token = "0x400013A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public OVROverlay text;

	[Token(Token = "0x400013B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OVRCameraRig vrRig;

	[Token(Token = "0x600017C")]
	[Address(RVA = "0x81518C", Offset = "0x81518C", VA = "0x81518C")]
	private void Start()
	{
	}

	[Token(Token = "0x600017D")]
	[Address(RVA = "0x8153A0", Offset = "0x8153A0", VA = "0x8153A0")]
	private void LoadScene(int idx)
	{
	}

	[Token(Token = "0x600017E")]
	[Address(RVA = "0x8154B0", Offset = "0x8154B0", VA = "0x8154B0")]
	public StartMenu()
	{
	}
}
[Token(Token = "0x2000035")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x43EF70", Offset = "0x43EF70")]
public class MouseLook : MonoBehaviour
{
	[Token(Token = "0x20001C5")]
	public enum RotationAxes
	{
		[Token(Token = "0x4000CDC")]
		MouseXAndY,
		[Token(Token = "0x4000CDD")]
		MouseX,
		[Token(Token = "0x4000CDE")]
		MouseY
	}

	[Token(Token = "0x400013C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public RotationAxes axes;

	[Token(Token = "0x400013D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float sensitivityX;

	[Token(Token = "0x400013E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float sensitivityY;

	[Token(Token = "0x400013F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float minimumX;

	[Token(Token = "0x4000140")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float maximumX;

	[Token(Token = "0x4000141")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float minimumY;

	[Token(Token = "0x4000142")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float maximumY;

	[Token(Token = "0x4000143")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float rotationY;

	[Token(Token = "0x600017F")]
	[Address(RVA = "0x71FA78", Offset = "0x71FA78", VA = "0x71FA78")]
	private void Update()
	{
	}

	[Token(Token = "0x6000180")]
	[Address(RVA = "0x71FC50", Offset = "0x71FC50", VA = "0x71FC50")]
	private void Start()
	{
	}

	[Token(Token = "0x6000181")]
	[Address(RVA = "0x71FD18", Offset = "0x71FD18", VA = "0x71FD18")]
	public MouseLook()
	{
	}
}
[Token(Token = "0x2000036")]
public class ONSPAmbisonicsNative : MonoBehaviour
{
	[Token(Token = "0x20001C6")]
	public enum ovrAmbisonicsNativeStatus
	{
		[Token(Token = "0x4000CE0")]
		Uninitialized = -1,
		[Token(Token = "0x4000CE1")]
		NotEnabled,
		[Token(Token = "0x4000CE2")]
		Success,
		[Token(Token = "0x4000CE3")]
		StreamError,
		[Token(Token = "0x4000CE4")]
		ProcessError,
		[Token(Token = "0x4000CE5")]
		MaxStatValue
	}

	[Token(Token = "0x4000144")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private AudioSource source;

	[Token(Token = "0x4000145")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static int numFOAChannels;

	[Token(Token = "0x4000146")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	private static int paramVSpeakerMode;

	[Token(Token = "0x4000147")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static int paramAmbiStat;

	[Token(Token = "0x4000148")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private ovrAmbisonicsNativeStatus currentStatus;

	[Token(Token = "0x4000149")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	private bool useVirtualSpeakers;

	[Token(Token = "0x17000018")]
	public bool UseVirtualSpeakers
	{
		[Token(Token = "0x6000182")]
		[Address(RVA = "0x723F2C", Offset = "0x723F2C", VA = "0x723F2C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000183")]
		[Address(RVA = "0x723F34", Offset = "0x723F34", VA = "0x723F34")]
		set
		{
		}
	}

	[Token(Token = "0x6000184")]
	[Address(RVA = "0x723F40", Offset = "0x723F40", VA = "0x723F40")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000185")]
	[Address(RVA = "0x7241D4", Offset = "0x7241D4", VA = "0x7241D4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000186")]
	[Address(RVA = "0x724474", Offset = "0x724474", VA = "0x724474")]
	public ONSPAmbisonicsNative()
	{
	}
}
[Token(Token = "0x2000037")]
public class ONSPAudioSource : MonoBehaviour
{
	[Token(Token = "0x20001C7")]
	private enum Parameters
	{
		[Token(Token = "0x4000CE7")]
		P_GAIN,
		[Token(Token = "0x4000CE8")]
		P_USEINVSQR,
		[Token(Token = "0x4000CE9")]
		P_NEAR,
		[Token(Token = "0x4000CEA")]
		P_FAR,
		[Token(Token = "0x4000CEB")]
		P_RADIUS,
		[Token(Token = "0x4000CEC")]
		P_DISABLE_RFL,
		[Token(Token = "0x4000CED")]
		P_VSPEAKERMODE,
		[Token(Token = "0x4000CEE")]
		P_AMBISTAT,
		[Token(Token = "0x4000CEF")]
		P_READONLY_GLOBAL_RFL_ENABLED,
		[Token(Token = "0x4000CF0")]
		P_READONLY_NUM_VOICES,
		[Token(Token = "0x4000CF1")]
		P_SENDLEVEL,
		[Token(Token = "0x4000CF2")]
		P_NUM
	}

	[Token(Token = "0x400014A")]
	public const string strONSPS = "AudioPluginOculusSpatializer";

	[Token(Token = "0x400014B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private bool enableSpatialization;

	[Token(Token = "0x400014C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private float gain;

	[Token(Token = "0x400014D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private bool useInvSqr;

	[Token(Token = "0x400014E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	private float near;

	[Token(Token = "0x400014F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private float far;

	[Token(Token = "0x4000150")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[SerializeField]
	private float volumetricRadius;

	[Token(Token = "0x4000151")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private float reverbSend;

	[Token(Token = "0x4000152")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[SerializeField]
	private bool enableRfl;

	[Token(Token = "0x4000153")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static ONSPAudioSource RoomReflectionGizmoAS;

	[Token(Token = "0x17000019")]
	public bool EnableSpatialization
	{
		[Token(Token = "0x600018A")]
		[Address(RVA = "0x7246C8", Offset = "0x7246C8", VA = "0x7246C8")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600018B")]
		[Address(RVA = "0x7246D0", Offset = "0x7246D0", VA = "0x7246D0")]
		set
		{
		}
	}

	[Token(Token = "0x1700001A")]
	public float Gain
	{
		[Token(Token = "0x600018C")]
		[Address(RVA = "0x7246DC", Offset = "0x7246DC", VA = "0x7246DC")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x600018D")]
		[Address(RVA = "0x7246E4", Offset = "0x7246E4", VA = "0x7246E4")]
		set
		{
		}
	}

	[Token(Token = "0x1700001B")]
	public bool UseInvSqr
	{
		[Token(Token = "0x600018E")]
		[Address(RVA = "0x724714", Offset = "0x724714", VA = "0x724714")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600018F")]
		[Address(RVA = "0x72471C", Offset = "0x72471C", VA = "0x72471C")]
		set
		{
		}
	}

	[Token(Token = "0x1700001C")]
	public float Near
	{
		[Token(Token = "0x6000190")]
		[Address(RVA = "0x724728", Offset = "0x724728", VA = "0x724728")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000191")]
		[Address(RVA = "0x724730", Offset = "0x724730", VA = "0x724730")]
		set
		{
		}
	}

	[Token(Token = "0x1700001D")]
	public float Far
	{
		[Token(Token = "0x6000192")]
		[Address(RVA = "0x724764", Offset = "0x724764", VA = "0x724764")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000193")]
		[Address(RVA = "0x72476C", Offset = "0x72476C", VA = "0x72476C")]
		set
		{
		}
	}

	[Token(Token = "0x1700001E")]
	public float VolumetricRadius
	{
		[Token(Token = "0x6000194")]
		[Address(RVA = "0x7247A0", Offset = "0x7247A0", VA = "0x7247A0")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000195")]
		[Address(RVA = "0x7247A8", Offset = "0x7247A8", VA = "0x7247A8")]
		set
		{
		}
	}

	[Token(Token = "0x1700001F")]
	public float ReverbSend
	{
		[Token(Token = "0x6000196")]
		[Address(RVA = "0x7247DC", Offset = "0x7247DC", VA = "0x7247DC")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000197")]
		[Address(RVA = "0x7247E4", Offset = "0x7247E4", VA = "0x7247E4")]
		set
		{
		}
	}

	[Token(Token = "0x17000020")]
	public bool EnableRfl
	{
		[Token(Token = "0x6000198")]
		[Address(RVA = "0x724818", Offset = "0x724818", VA = "0x724818")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000199")]
		[Address(RVA = "0x724820", Offset = "0x724820", VA = "0x724820")]
		set
		{
		}
	}

	[Token(Token = "0x6000188")]
	[Address(RVA = "0x7244F4", Offset = "0x7244F4", VA = "0x7244F4")]
	[AttributeAttribute(Name = "RuntimeInitializeOnLoadMethodAttribute", RVA = "0x442484", Offset = "0x442484")]
	private static void OnBeforeSceneLoadRuntimeMethod()
	{
	}

	[PreserveSig]
	[Token(Token = "0x6000189")]
	[Address(RVA = "0x7245E8", Offset = "0x7245E8", VA = "0x7245E8")]
	private static extern void ONSP_GetGlobalRoomReflectionValues(ref bool reflOn, ref bool reverbOn, ref float width, ref float height, ref float length);

	[Token(Token = "0x600019A")]
	[Address(RVA = "0x72482C", Offset = "0x72482C", VA = "0x72482C")]
	private void Awake()
	{
	}

	[Token(Token = "0x600019B")]
	[Address(RVA = "0x72499C", Offset = "0x72499C", VA = "0x72499C")]
	private void Start()
	{
	}

	[Token(Token = "0x600019C")]
	[Address(RVA = "0x7249A0", Offset = "0x7249A0", VA = "0x7249A0")]
	private void Update()
	{
	}

	[Token(Token = "0x600019D")]
	[Address(RVA = "0x724894", Offset = "0x724894", VA = "0x724894")]
	public void SetParameters(ref AudioSource source)
	{
	}

	[Token(Token = "0x600019E")]
	[Address(RVA = "0x724A64", Offset = "0x724A64", VA = "0x724A64")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x600019F")]
	[Address(RVA = "0x724E5C", Offset = "0x724E5C", VA = "0x724E5C")]
	private void OnDestroy()
	{
	}

	[PreserveSig]
	[Token(Token = "0x60001A0")]
	[Address(RVA = "0x724568", Offset = "0x724568", VA = "0x724568")]
	private static extern int OSP_SetGlobalVoiceLimit(int VoiceLimit);

	[Token(Token = "0x60001A1")]
	[Address(RVA = "0x724F48", Offset = "0x724F48", VA = "0x724F48")]
	public ONSPAudioSource()
	{
	}
}
[Token(Token = "0x2000038")]
public class ONSPProfiler : MonoBehaviour
{
	[Token(Token = "0x4000154")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool profilerEnabled;

	[Token(Token = "0x4000155")]
	private const int DEFAULT_PORT = 2121;

	[Token(Token = "0x4000156")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int port;

	[Token(Token = "0x4000157")]
	public const string strONSPS = "AudioPluginOculusSpatializer";

	[Token(Token = "0x60001A3")]
	[Address(RVA = "0x724F68", Offset = "0x724F68", VA = "0x724F68")]
	private void Start()
	{
	}

	[Token(Token = "0x60001A4")]
	[Address(RVA = "0x724F74", Offset = "0x724F74", VA = "0x724F74")]
	private void Update()
	{
	}

	[PreserveSig]
	[Token(Token = "0x60001A5")]
	[Address(RVA = "0x72502C", Offset = "0x72502C", VA = "0x72502C")]
	private static extern int ONSP_SetProfilerEnabled(bool enabled);

	[PreserveSig]
	[Token(Token = "0x60001A6")]
	[Address(RVA = "0x724FAC", Offset = "0x724FAC", VA = "0x724FAC")]
	private static extern int ONSP_SetProfilerPort(int port);

	[Token(Token = "0x60001A7")]
	[Address(RVA = "0x7250AC", Offset = "0x7250AC", VA = "0x7250AC")]
	public ONSPProfiler()
	{
	}
}
[Token(Token = "0x2000039")]
public class ONSPPropagationGeometry : MonoBehaviour
{
	[Token(Token = "0x20001C8")]
	private struct MeshMaterial
	{
		[Token(Token = "0x4000CF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public MeshFilter meshFilter;

		[Token(Token = "0x4000CF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public ONSPPropagationMaterial[] materials;
	}

	[Token(Token = "0x20001C9")]
	private struct TerrainMaterial
	{
		[Token(Token = "0x4000CF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Terrain terrain;

		[Token(Token = "0x4000CF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public ONSPPropagationMaterial[] materials;

		[Token(Token = "0x4000CF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Mesh[] treePrototypeMeshes;
	}

	[Token(Token = "0x4000158")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static string GeometryAssetDirectory;

	[Token(Token = "0x4000159")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string filePathRelative;

	[Token(Token = "0x400015A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool fileEnabled;

	[Token(Token = "0x400015B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	public bool includeChildMeshes;

	[Token(Token = "0x400015C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private IntPtr geometryHandle;

	[Token(Token = "0x400015D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static int OSPSuccess;

	[Token(Token = "0x400015E")]
	public const string GEOMETRY_FILE_EXTENSION = "ovramesh";

	[Token(Token = "0x400015F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private static int terrainDecimation;

	[Token(Token = "0x17000021")]
	public static string GeometryAssetPath
	{
		[Token(Token = "0x60001A8")]
		[Address(RVA = "0x7253C4", Offset = "0x7253C4", VA = "0x7253C4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000022")]
	public string filePath
	{
		[Token(Token = "0x60001A9")]
		[Address(RVA = "0x725458", Offset = "0x725458", VA = "0x725458")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60001AA")]
	[Address(RVA = "0x7254D8", Offset = "0x7254D8", VA = "0x7254D8")]
	private static string GetPath(Transform current)
	{
		return null;
	}

	[Token(Token = "0x60001AB")]
	[Address(RVA = "0x725640", Offset = "0x725640", VA = "0x725640")]
	private void Awake()
	{
	}

	[Token(Token = "0x60001AC")]
	[Address(RVA = "0x725644", Offset = "0x725644", VA = "0x725644")]
	private void CreatePropagationGeometry()
	{
	}

	[Token(Token = "0x60001AD")]
	[Address(RVA = "0x725C1C", Offset = "0x725C1C", VA = "0x725C1C")]
	private void Update()
	{
	}

	[Token(Token = "0x60001AE")]
	[Address(RVA = "0x725FC8", Offset = "0x725FC8", VA = "0x725FC8")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60001AF")]
	[Address(RVA = "0x726144", Offset = "0x726144", VA = "0x726144")]
	private static void traverseMeshHierarchy(GameObject obj, ONSPPropagationMaterial[] currentMaterials, bool includeChildren, List<MeshMaterial> meshMaterials, List<TerrainMaterial> terrainMaterials, bool ignoreStatic, ref int ignoredMeshCount)
	{
	}

	[Token(Token = "0x60001B0")]
	[Address(RVA = "0x726938", Offset = "0x726938", VA = "0x726938")]
	private int uploadMesh(IntPtr geometryHandle, GameObject meshObject, Matrix4x4 worldToLocal)
	{
		return default(int);
	}

	[Token(Token = "0x60001B1")]
	[Address(RVA = "0x726974", Offset = "0x726974", VA = "0x726974")]
	private int uploadMesh(IntPtr geometryHandle, GameObject meshObject, Matrix4x4 worldToLocal, bool ignoreStatic, ref int ignoredMeshCount)
	{
		return default(int);
	}

	[Token(Token = "0x60001B2")]
	[Address(RVA = "0x727FA8", Offset = "0x727FA8", VA = "0x727FA8")]
	private static void uploadMeshFilter(List<Vector3> tempVertices, List<int> tempIndices, MeshGroup[] groups, float[] vertices, int[] indices, ref int vertexOffset, ref int indexOffset, ref int groupOffset, Mesh mesh, ONSPPropagationMaterial[] materials, Matrix4x4 matrix)
	{
	}

	[Token(Token = "0x60001B3")]
	[Address(RVA = "0x727E80", Offset = "0x727E80", VA = "0x727E80")]
	private static void updateCountsForMesh(ref int totalVertexCount, ref uint totalIndexCount, ref int totalFaceCount, ref int totalMaterialCount, Mesh mesh)
	{
	}

	[Token(Token = "0x60001B4")]
	[Address(RVA = "0x725A34", Offset = "0x725A34", VA = "0x725A34")]
	public void UploadGeometry()
	{
	}

	[Token(Token = "0x60001B5")]
	[Address(RVA = "0x72583C", Offset = "0x72583C", VA = "0x72583C")]
	public bool ReadFile()
	{
		return default(bool);
	}

	[Token(Token = "0x60001B6")]
	[Address(RVA = "0x7284A8", Offset = "0x7284A8", VA = "0x7284A8")]
	public bool WriteToObj()
	{
		return default(bool);
	}

	[Token(Token = "0x60001B7")]
	[Address(RVA = "0x728940", Offset = "0x728940", VA = "0x728940")]
	public ONSPPropagationGeometry()
	{
	}
}
[Token(Token = "0x200003A")]
internal class ONSPPropagation
{
	[Token(Token = "0x20001CA")]
	public enum ovrAudioScalarType : uint
	{
		[Token(Token = "0x4000CF9")]
		Int8,
		[Token(Token = "0x4000CFA")]
		UInt8,
		[Token(Token = "0x4000CFB")]
		Int16,
		[Token(Token = "0x4000CFC")]
		UInt16,
		[Token(Token = "0x4000CFD")]
		Int32,
		[Token(Token = "0x4000CFE")]
		UInt32,
		[Token(Token = "0x4000CFF")]
		Int64,
		[Token(Token = "0x4000D00")]
		UInt64,
		[Token(Token = "0x4000D01")]
		Float16,
		[Token(Token = "0x4000D02")]
		Float32,
		[Token(Token = "0x4000D03")]
		Float64
	}

	[Token(Token = "0x20001CB")]
	public class ClientType
	{
		[Token(Token = "0x4000D04")]
		public const uint OVRA_CLIENT_TYPE_NATIVE = 0u;

		[Token(Token = "0x4000D05")]
		public const uint OVRA_CLIENT_TYPE_WWISE_2016 = 1u;

		[Token(Token = "0x4000D06")]
		public const uint OVRA_CLIENT_TYPE_WWISE_2017_1 = 2u;

		[Token(Token = "0x4000D07")]
		public const uint OVRA_CLIENT_TYPE_WWISE_2017_2 = 3u;

		[Token(Token = "0x4000D08")]
		public const uint OVRA_CLIENT_TYPE_WWISE_2018_1 = 4u;

		[Token(Token = "0x4000D09")]
		public const uint OVRA_CLIENT_TYPE_FMOD = 5u;

		[Token(Token = "0x4000D0A")]
		public const uint OVRA_CLIENT_TYPE_UNITY = 6u;

		[Token(Token = "0x4000D0B")]
		public const uint OVRA_CLIENT_TYPE_UE4 = 7u;

		[Token(Token = "0x4000D0C")]
		public const uint OVRA_CLIENT_TYPE_VST = 8u;

		[Token(Token = "0x4000D0D")]
		public const uint OVRA_CLIENT_TYPE_AAX = 9u;

		[Token(Token = "0x4000D0E")]
		public const uint OVRA_CLIENT_TYPE_TEST = 10u;

		[Token(Token = "0x4000D0F")]
		public const uint OVRA_CLIENT_TYPE_OTHER = 11u;

		[Token(Token = "0x4000D10")]
		public const uint OVRA_CLIENT_TYPE_WWISE_UNKNOWN = 12u;

		[Token(Token = "0x4000D11")]
		public const uint OVRA_CLIENT_TYPE_WWISE_2019_1 = 13u;

		[Token(Token = "0x4000D12")]
		public const uint OVRA_CLIENT_TYPE_WWISE_2019_2 = 14u;

		[Token(Token = "0x6000CD2")]
		[Address(RVA = "0x84D6A4", Offset = "0x84D6A4", VA = "0x84D6A4")]
		public ClientType()
		{
		}
	}

	[Token(Token = "0x20001CC")]
	public interface PropagationInterface
	{
		[Token(Token = "0x6000CD3")]
		int SetPropagationQuality(float quality);

		[Token(Token = "0x6000CD4")]
		int SetPropagationThreadAffinity(ulong cpuMask);

		[Token(Token = "0x6000CD5")]
		int CreateAudioGeometry(out IntPtr geometry);

		[Token(Token = "0x6000CD6")]
		int DestroyAudioGeometry(IntPtr geometry);

		[Token(Token = "0x6000CD7")]
		int AudioGeometryUploadMeshArrays(IntPtr geometry, float[] vertices, int vertexCount, int[] indices, int indexCount, MeshGroup[] groups, int groupCount);

		[Token(Token = "0x6000CD8")]
		int AudioGeometrySetTransform(IntPtr geometry, float[] matrix4x4);

		[Token(Token = "0x6000CD9")]
		int AudioGeometryGetTransform(IntPtr geometry, out float[] matrix4x4);

		[Token(Token = "0x6000CDA")]
		int AudioGeometryWriteMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x6000CDB")]
		int AudioGeometryReadMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x6000CDC")]
		int AudioGeometryWriteMeshFileObj(IntPtr geometry, string filePath);

		[Token(Token = "0x6000CDD")]
		int AudioMaterialGetFrequency(IntPtr material, MaterialProperty property, float frequency, out float value);

		[Token(Token = "0x6000CDE")]
		int CreateAudioMaterial(out IntPtr material);

		[Token(Token = "0x6000CDF")]
		int DestroyAudioMaterial(IntPtr material);

		[Token(Token = "0x6000CE0")]
		int AudioMaterialSetFrequency(IntPtr material, MaterialProperty property, float frequency, float value);

		[Token(Token = "0x6000CE1")]
		int AudioMaterialReset(IntPtr material, MaterialProperty property);
	}

	[Token(Token = "0x20001CD")]
	public class UnityNativeInterface : PropagationInterface
	{
		[Token(Token = "0x4000D13")]
		public const string strOSPS = "AudioPluginOculusSpatializer";

		[Token(Token = "0x4000D14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IntPtr context_;

		[Token(Token = "0x170000AE")]
		private IntPtr context
		{
			[Token(Token = "0x6000CE2")]
			[Address(RVA = "0x84E3E8", Offset = "0x84E3E8", VA = "0x84E3E8")]
			get
			{
				return default(IntPtr);
			}
		}

		[PreserveSig]
		[Token(Token = "0x6000CE3")]
		[Address(RVA = "0x84E448", Offset = "0x84E448", VA = "0x84E448")]
		public static extern int ovrAudio_GetPluginContext(out IntPtr context, uint clientType);

		[PreserveSig]
		[Token(Token = "0x6000CE4")]
		[Address(RVA = "0x84E4D8", Offset = "0x84E4D8", VA = "0x84E4D8")]
		private static extern int ovrAudio_SetPropagationQuality(IntPtr context, float quality);

		[Token(Token = "0x6000CE5")]
		[Address(RVA = "0x84E568", Offset = "0x84E568", VA = "0x84E568", Slot = "4")]
		public int SetPropagationQuality(float quality)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000CE6")]
		[Address(RVA = "0x84E58C", Offset = "0x84E58C", VA = "0x84E58C")]
		private static extern int ovrAudio_SetPropagationThreadAffinity(IntPtr context, ulong cpuMask);

		[Token(Token = "0x6000CE7")]
		[Address(RVA = "0x84E61C", Offset = "0x84E61C", VA = "0x84E61C", Slot = "5")]
		public int SetPropagationThreadAffinity(ulong cpuMask)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000CE8")]
		[Address(RVA = "0x84E640", Offset = "0x84E640", VA = "0x84E640")]
		private static extern int ovrAudio_CreateAudioGeometry(IntPtr context, out IntPtr geometry);

		[Token(Token = "0x6000CE9")]
		[Address(RVA = "0x84E6CC", Offset = "0x84E6CC", VA = "0x84E6CC", Slot = "6")]
		public int CreateAudioGeometry(out IntPtr geometry)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000CEA")]
		[Address(RVA = "0x84E6F0", Offset = "0x84E6F0", VA = "0x84E6F0")]
		private static extern int ovrAudio_DestroyAudioGeometry(IntPtr geometry);

		[Token(Token = "0x6000CEB")]
		[Address(RVA = "0x84E770", Offset = "0x84E770", VA = "0x84E770", Slot = "7")]
		public int DestroyAudioGeometry(IntPtr geometry)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000CEC")]
		[Address(RVA = "0x84E778", Offset = "0x84E778", VA = "0x84E778")]
		private static extern int ovrAudio_AudioGeometryUploadMeshArrays(IntPtr geometry, float[] vertices, UIntPtr verticesBytesOffset, UIntPtr vertexCount, UIntPtr vertexStride, ovrAudioScalarType vertexType, int[] indices, UIntPtr indicesByteOffset, UIntPtr indexCount, ovrAudioScalarType indexType, MeshGroup[] groups, UIntPtr groupCount);

		[Token(Token = "0x6000CED")]
		[Address(RVA = "0x84E898", Offset = "0x84E898", VA = "0x84E898", Slot = "8")]
		public int AudioGeometryUploadMeshArrays(IntPtr geometry, float[] vertices, int vertexCount, int[] indices, int indexCount, MeshGroup[] groups, int groupCount)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000CEE")]
		[Address(RVA = "0x84E98C", Offset = "0x84E98C", VA = "0x84E98C")]
		private static extern int ovrAudio_AudioGeometrySetTransform(IntPtr geometry, float[] matrix4x4);

		[Token(Token = "0x6000CEF")]
		[Address(RVA = "0x84EA24", Offset = "0x84EA24", VA = "0x84EA24", Slot = "9")]
		public int AudioGeometrySetTransform(IntPtr geometry, float[] matrix4x4)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000CF0")]
		[Address(RVA = "0x84EA30", Offset = "0x84EA30", VA = "0x84EA30")]
		private static extern int ovrAudio_AudioGeometryGetTransform(IntPtr geometry, out float[] matrix4x4);

		[Token(Token = "0x6000CF1")]
		[Address(RVA = "0x84EB60", Offset = "0x84EB60", VA = "0x84EB60", Slot = "10")]
		public int AudioGeometryGetTransform(IntPtr geometry, out float[] matrix4x4)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000CF2")]
		[Address(RVA = "0x84EB6C", Offset = "0x84EB6C", VA = "0x84EB6C")]
		private static extern int ovrAudio_AudioGeometryWriteMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x6000CF3")]
		[Address(RVA = "0x84EC18", Offset = "0x84EC18", VA = "0x84EC18", Slot = "11")]
		public int AudioGeometryWriteMeshFile(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000CF4")]
		[Address(RVA = "0x84EC24", Offset = "0x84EC24", VA = "0x84EC24")]
		private static extern int ovrAudio_AudioGeometryReadMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x6000CF5")]
		[Address(RVA = "0x84ECD0", Offset = "0x84ECD0", VA = "0x84ECD0", Slot = "12")]
		public int AudioGeometryReadMeshFile(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000CF6")]
		[Address(RVA = "0x84ECDC", Offset = "0x84ECDC", VA = "0x84ECDC")]
		private static extern int ovrAudio_AudioGeometryWriteMeshFileObj(IntPtr geometry, string filePath);

		[Token(Token = "0x6000CF7")]
		[Address(RVA = "0x84ED88", Offset = "0x84ED88", VA = "0x84ED88", Slot = "13")]
		public int AudioGeometryWriteMeshFileObj(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000CF8")]
		[Address(RVA = "0x84ED94", Offset = "0x84ED94", VA = "0x84ED94")]
		private static extern int ovrAudio_CreateAudioMaterial(IntPtr context, out IntPtr material);

		[Token(Token = "0x6000CF9")]
		[Address(RVA = "0x84EE20", Offset = "0x84EE20", VA = "0x84EE20", Slot = "15")]
		public int CreateAudioMaterial(out IntPtr material)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000CFA")]
		[Address(RVA = "0x84EE44", Offset = "0x84EE44", VA = "0x84EE44")]
		private static extern int ovrAudio_DestroyAudioMaterial(IntPtr material);

		[Token(Token = "0x6000CFB")]
		[Address(RVA = "0x84EEC4", Offset = "0x84EEC4", VA = "0x84EEC4", Slot = "16")]
		public int DestroyAudioMaterial(IntPtr material)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000CFC")]
		[Address(RVA = "0x84EECC", Offset = "0x84EECC", VA = "0x84EECC")]
		private static extern int ovrAudio_AudioMaterialSetFrequency(IntPtr material, MaterialProperty property, float frequency, float value);

		[Token(Token = "0x6000CFD")]
		[Address(RVA = "0x84EF74", Offset = "0x84EF74", VA = "0x84EF74", Slot = "17")]
		public int AudioMaterialSetFrequency(IntPtr material, MaterialProperty property, float frequency, float value)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000CFE")]
		[Address(RVA = "0x84EF80", Offset = "0x84EF80", VA = "0x84EF80")]
		private static extern int ovrAudio_AudioMaterialGetFrequency(IntPtr material, MaterialProperty property, float frequency, out float value);

		[Token(Token = "0x6000CFF")]
		[Address(RVA = "0x84F028", Offset = "0x84F028", VA = "0x84F028", Slot = "14")]
		public int AudioMaterialGetFrequency(IntPtr material, MaterialProperty property, float frequency, out float value)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000D00")]
		[Address(RVA = "0x84F038", Offset = "0x84F038", VA = "0x84F038")]
		private static extern int ovrAudio_AudioMaterialReset(IntPtr material, MaterialProperty property);

		[Token(Token = "0x6000D01")]
		[Address(RVA = "0x84F0C8", Offset = "0x84F0C8", VA = "0x84F0C8", Slot = "18")]
		public int AudioMaterialReset(IntPtr material, MaterialProperty property)
		{
			return default(int);
		}

		[Token(Token = "0x6000D02")]
		[Address(RVA = "0x84F0D4", Offset = "0x84F0D4", VA = "0x84F0D4")]
		public UnityNativeInterface()
		{
		}
	}

	[Token(Token = "0x20001CE")]
	public class WwisePluginInterface : PropagationInterface
	{
		[Token(Token = "0x4000D15")]
		public const string strOSPS = "OculusSpatializerWwise";

		[Token(Token = "0x4000D16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IntPtr context_;

		[Token(Token = "0x170000AF")]
		private IntPtr context
		{
			[Token(Token = "0x6000D03")]
			[Address(RVA = "0x84F11C", Offset = "0x84F11C", VA = "0x84F11C")]
			get
			{
				return default(IntPtr);
			}
		}

		[PreserveSig]
		[Token(Token = "0x6000D04")]
		[Address(RVA = "0x84F17C", Offset = "0x84F17C", VA = "0x84F17C")]
		public static extern int ovrAudio_GetPluginContext(out IntPtr context, uint clientType);

		[PreserveSig]
		[Token(Token = "0x6000D05")]
		[Address(RVA = "0x84F20C", Offset = "0x84F20C", VA = "0x84F20C")]
		private static extern int ovrAudio_SetPropagationQuality(IntPtr context, float quality);

		[Token(Token = "0x6000D06")]
		[Address(RVA = "0x84F29C", Offset = "0x84F29C", VA = "0x84F29C", Slot = "4")]
		public int SetPropagationQuality(float quality)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000D07")]
		[Address(RVA = "0x84F2C0", Offset = "0x84F2C0", VA = "0x84F2C0")]
		private static extern int ovrAudio_SetPropagationThreadAffinity(IntPtr context, ulong cpuMask);

		[Token(Token = "0x6000D08")]
		[Address(RVA = "0x84F350", Offset = "0x84F350", VA = "0x84F350", Slot = "5")]
		public int SetPropagationThreadAffinity(ulong cpuMask)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000D09")]
		[Address(RVA = "0x84F374", Offset = "0x84F374", VA = "0x84F374")]
		private static extern int ovrAudio_CreateAudioGeometry(IntPtr context, out IntPtr geometry);

		[Token(Token = "0x6000D0A")]
		[Address(RVA = "0x84F404", Offset = "0x84F404", VA = "0x84F404", Slot = "6")]
		public int CreateAudioGeometry(out IntPtr geometry)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000D0B")]
		[Address(RVA = "0x84F428", Offset = "0x84F428", VA = "0x84F428")]
		private static extern int ovrAudio_DestroyAudioGeometry(IntPtr geometry);

		[Token(Token = "0x6000D0C")]
		[Address(RVA = "0x84F4A8", Offset = "0x84F4A8", VA = "0x84F4A8", Slot = "7")]
		public int DestroyAudioGeometry(IntPtr geometry)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000D0D")]
		[Address(RVA = "0x84F4B0", Offset = "0x84F4B0", VA = "0x84F4B0")]
		private static extern int ovrAudio_AudioGeometryUploadMeshArrays(IntPtr geometry, float[] vertices, UIntPtr verticesBytesOffset, UIntPtr vertexCount, UIntPtr vertexStride, ovrAudioScalarType vertexType, int[] indices, UIntPtr indicesByteOffset, UIntPtr indexCount, ovrAudioScalarType indexType, MeshGroup[] groups, UIntPtr groupCount);

		[Token(Token = "0x6000D0E")]
		[Address(RVA = "0x84F5D0", Offset = "0x84F5D0", VA = "0x84F5D0", Slot = "8")]
		public int AudioGeometryUploadMeshArrays(IntPtr geometry, float[] vertices, int vertexCount, int[] indices, int indexCount, MeshGroup[] groups, int groupCount)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000D0F")]
		[Address(RVA = "0x84F6C4", Offset = "0x84F6C4", VA = "0x84F6C4")]
		private static extern int ovrAudio_AudioGeometrySetTransform(IntPtr geometry, float[] matrix4x4);

		[Token(Token = "0x6000D10")]
		[Address(RVA = "0x84F75C", Offset = "0x84F75C", VA = "0x84F75C", Slot = "9")]
		public int AudioGeometrySetTransform(IntPtr geometry, float[] matrix4x4)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000D11")]
		[Address(RVA = "0x84F768", Offset = "0x84F768", VA = "0x84F768")]
		private static extern int ovrAudio_AudioGeometryGetTransform(IntPtr geometry, out float[] matrix4x4);

		[Token(Token = "0x6000D12")]
		[Address(RVA = "0x84F898", Offset = "0x84F898", VA = "0x84F898", Slot = "10")]
		public int AudioGeometryGetTransform(IntPtr geometry, out float[] matrix4x4)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000D13")]
		[Address(RVA = "0x84F8A4", Offset = "0x84F8A4", VA = "0x84F8A4")]
		private static extern int ovrAudio_AudioGeometryWriteMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x6000D14")]
		[Address(RVA = "0x84F950", Offset = "0x84F950", VA = "0x84F950", Slot = "11")]
		public int AudioGeometryWriteMeshFile(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000D15")]
		[Address(RVA = "0x84F95C", Offset = "0x84F95C", VA = "0x84F95C")]
		private static extern int ovrAudio_AudioGeometryReadMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x6000D16")]
		[Address(RVA = "0x84FA08", Offset = "0x84FA08", VA = "0x84FA08", Slot = "12")]
		public int AudioGeometryReadMeshFile(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000D17")]
		[Address(RVA = "0x84FA14", Offset = "0x84FA14", VA = "0x84FA14")]
		private static extern int ovrAudio_AudioGeometryWriteMeshFileObj(IntPtr geometry, string filePath);

		[Token(Token = "0x6000D18")]
		[Address(RVA = "0x84FAC0", Offset = "0x84FAC0", VA = "0x84FAC0", Slot = "13")]
		public int AudioGeometryWriteMeshFileObj(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000D19")]
		[Address(RVA = "0x84FACC", Offset = "0x84FACC", VA = "0x84FACC")]
		private static extern int ovrAudio_CreateAudioMaterial(IntPtr context, out IntPtr material);

		[Token(Token = "0x6000D1A")]
		[Address(RVA = "0x84FB5C", Offset = "0x84FB5C", VA = "0x84FB5C", Slot = "15")]
		public int CreateAudioMaterial(out IntPtr material)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000D1B")]
		[Address(RVA = "0x84FB80", Offset = "0x84FB80", VA = "0x84FB80")]
		private static extern int ovrAudio_DestroyAudioMaterial(IntPtr material);

		[Token(Token = "0x6000D1C")]
		[Address(RVA = "0x84FC00", Offset = "0x84FC00", VA = "0x84FC00", Slot = "16")]
		public int DestroyAudioMaterial(IntPtr material)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000D1D")]
		[Address(RVA = "0x84FC08", Offset = "0x84FC08", VA = "0x84FC08")]
		private static extern int ovrAudio_AudioMaterialSetFrequency(IntPtr material, MaterialProperty property, float frequency, float value);

		[Token(Token = "0x6000D1E")]
		[Address(RVA = "0x84FCB0", Offset = "0x84FCB0", VA = "0x84FCB0", Slot = "17")]
		public int AudioMaterialSetFrequency(IntPtr material, MaterialProperty property, float frequency, float value)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000D1F")]
		[Address(RVA = "0x84FCBC", Offset = "0x84FCBC", VA = "0x84FCBC")]
		private static extern int ovrAudio_AudioMaterialGetFrequency(IntPtr material, MaterialProperty property, float frequency, out float value);

		[Token(Token = "0x6000D20")]
		[Address(RVA = "0x84FD64", Offset = "0x84FD64", VA = "0x84FD64", Slot = "14")]
		public int AudioMaterialGetFrequency(IntPtr material, MaterialProperty property, float frequency, out float value)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000D21")]
		[Address(RVA = "0x84FD74", Offset = "0x84FD74", VA = "0x84FD74")]
		private static extern int ovrAudio_AudioMaterialReset(IntPtr material, MaterialProperty property);

		[Token(Token = "0x6000D22")]
		[Address(RVA = "0x84FE04", Offset = "0x84FE04", VA = "0x84FE04", Slot = "18")]
		public int AudioMaterialReset(IntPtr material, MaterialProperty property)
		{
			return default(int);
		}

		[Token(Token = "0x6000D23")]
		[Address(RVA = "0x84FE10", Offset = "0x84FE10", VA = "0x84FE10")]
		public WwisePluginInterface()
		{
		}
	}

	[Token(Token = "0x20001CF")]
	public class FMODPluginInterface : PropagationInterface
	{
		[Token(Token = "0x4000D17")]
		public const string strOSPS = "OculusSpatializerFMOD";

		[Token(Token = "0x4000D18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IntPtr context_;

		[Token(Token = "0x170000B0")]
		private IntPtr context
		{
			[Token(Token = "0x6000D24")]
			[Address(RVA = "0x84D6AC", Offset = "0x84D6AC", VA = "0x84D6AC")]
			get
			{
				return default(IntPtr);
			}
		}

		[PreserveSig]
		[Token(Token = "0x6000D25")]
		[Address(RVA = "0x84D70C", Offset = "0x84D70C", VA = "0x84D70C")]
		public static extern int ovrAudio_GetPluginContext(out IntPtr context, uint clientType);

		[PreserveSig]
		[Token(Token = "0x6000D26")]
		[Address(RVA = "0x84D79C", Offset = "0x84D79C", VA = "0x84D79C")]
		private static extern int ovrAudio_SetPropagationQuality(IntPtr context, float quality);

		[Token(Token = "0x6000D27")]
		[Address(RVA = "0x84D82C", Offset = "0x84D82C", VA = "0x84D82C", Slot = "4")]
		public int SetPropagationQuality(float quality)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000D28")]
		[Address(RVA = "0x84D850", Offset = "0x84D850", VA = "0x84D850")]
		private static extern int ovrAudio_SetPropagationThreadAffinity(IntPtr context, ulong cpuMask);

		[Token(Token = "0x6000D29")]
		[Address(RVA = "0x84D8E0", Offset = "0x84D8E0", VA = "0x84D8E0", Slot = "5")]
		public int SetPropagationThreadAffinity(ulong cpuMask)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000D2A")]
		[Address(RVA = "0x84D904", Offset = "0x84D904", VA = "0x84D904")]
		private static extern int ovrAudio_CreateAudioGeometry(IntPtr context, out IntPtr geometry);

		[Token(Token = "0x6000D2B")]
		[Address(RVA = "0x84D994", Offset = "0x84D994", VA = "0x84D994", Slot = "6")]
		public int CreateAudioGeometry(out IntPtr geometry)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000D2C")]
		[Address(RVA = "0x84D9B8", Offset = "0x84D9B8", VA = "0x84D9B8")]
		private static extern int ovrAudio_DestroyAudioGeometry(IntPtr geometry);

		[Token(Token = "0x6000D2D")]
		[Address(RVA = "0x84DA38", Offset = "0x84DA38", VA = "0x84DA38", Slot = "7")]
		public int DestroyAudioGeometry(IntPtr geometry)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000D2E")]
		[Address(RVA = "0x84DA40", Offset = "0x84DA40", VA = "0x84DA40")]
		private static extern int ovrAudio_AudioGeometryUploadMeshArrays(IntPtr geometry, float[] vertices, UIntPtr verticesBytesOffset, UIntPtr vertexCount, UIntPtr vertexStride, ovrAudioScalarType vertexType, int[] indices, UIntPtr indicesByteOffset, UIntPtr indexCount, ovrAudioScalarType indexType, MeshGroup[] groups, UIntPtr groupCount);

		[Token(Token = "0x6000D2F")]
		[Address(RVA = "0x84DB60", Offset = "0x84DB60", VA = "0x84DB60", Slot = "8")]
		public int AudioGeometryUploadMeshArrays(IntPtr geometry, float[] vertices, int vertexCount, int[] indices, int indexCount, MeshGroup[] groups, int groupCount)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000D30")]
		[Address(RVA = "0x84DC54", Offset = "0x84DC54", VA = "0x84DC54")]
		private static extern int ovrAudio_AudioGeometrySetTransform(IntPtr geometry, float[] matrix4x4);

		[Token(Token = "0x6000D31")]
		[Address(RVA = "0x84DCEC", Offset = "0x84DCEC", VA = "0x84DCEC", Slot = "9")]
		public int AudioGeometrySetTransform(IntPtr geometry, float[] matrix4x4)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000D32")]
		[Address(RVA = "0x84DCF8", Offset = "0x84DCF8", VA = "0x84DCF8")]
		private static extern int ovrAudio_AudioGeometryGetTransform(IntPtr geometry, out float[] matrix4x4);

		[Token(Token = "0x6000D33")]
		[Address(RVA = "0x84DE28", Offset = "0x84DE28", VA = "0x84DE28", Slot = "10")]
		public int AudioGeometryGetTransform(IntPtr geometry, out float[] matrix4x4)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000D34")]
		[Address(RVA = "0x84DE34", Offset = "0x84DE34", VA = "0x84DE34")]
		private static extern int ovrAudio_AudioGeometryWriteMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x6000D35")]
		[Address(RVA = "0x84DEE0", Offset = "0x84DEE0", VA = "0x84DEE0", Slot = "11")]
		public int AudioGeometryWriteMeshFile(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000D36")]
		[Address(RVA = "0x84DEEC", Offset = "0x84DEEC", VA = "0x84DEEC")]
		private static extern int ovrAudio_AudioGeometryReadMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x6000D37")]
		[Address(RVA = "0x84DF98", Offset = "0x84DF98", VA = "0x84DF98", Slot = "12")]
		public int AudioGeometryReadMeshFile(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000D38")]
		[Address(RVA = "0x84DFA4", Offset = "0x84DFA4", VA = "0x84DFA4")]
		private static extern int ovrAudio_AudioGeometryWriteMeshFileObj(IntPtr geometry, string filePath);

		[Token(Token = "0x6000D39")]
		[Address(RVA = "0x84E050", Offset = "0x84E050", VA = "0x84E050", Slot = "13")]
		public int AudioGeometryWriteMeshFileObj(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000D3A")]
		[Address(RVA = "0x84E05C", Offset = "0x84E05C", VA = "0x84E05C")]
		private static extern int ovrAudio_CreateAudioMaterial(IntPtr context, out IntPtr material);

		[Token(Token = "0x6000D3B")]
		[Address(RVA = "0x84E0EC", Offset = "0x84E0EC", VA = "0x84E0EC", Slot = "15")]
		public int CreateAudioMaterial(out IntPtr material)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000D3C")]
		[Address(RVA = "0x84E110", Offset = "0x84E110", VA = "0x84E110")]
		private static extern int ovrAudio_DestroyAudioMaterial(IntPtr material);

		[Token(Token = "0x6000D3D")]
		[Address(RVA = "0x84E190", Offset = "0x84E190", VA = "0x84E190", Slot = "16")]
		public int DestroyAudioMaterial(IntPtr material)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000D3E")]
		[Address(RVA = "0x84E198", Offset = "0x84E198", VA = "0x84E198")]
		private static extern int ovrAudio_AudioMaterialSetFrequency(IntPtr material, MaterialProperty property, float frequency, float value);

		[Token(Token = "0x6000D3F")]
		[Address(RVA = "0x84E240", Offset = "0x84E240", VA = "0x84E240", Slot = "17")]
		public int AudioMaterialSetFrequency(IntPtr material, MaterialProperty property, float frequency, float value)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000D40")]
		[Address(RVA = "0x84E24C", Offset = "0x84E24C", VA = "0x84E24C")]
		private static extern int ovrAudio_AudioMaterialGetFrequency(IntPtr material, MaterialProperty property, float frequency, out float value);

		[Token(Token = "0x6000D41")]
		[Address(RVA = "0x84E2F4", Offset = "0x84E2F4", VA = "0x84E2F4", Slot = "14")]
		public int AudioMaterialGetFrequency(IntPtr material, MaterialProperty property, float frequency, out float value)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000D42")]
		[Address(RVA = "0x84E304", Offset = "0x84E304", VA = "0x84E304")]
		private static extern int ovrAudio_AudioMaterialReset(IntPtr material, MaterialProperty property);

		[Token(Token = "0x6000D43")]
		[Address(RVA = "0x84E394", Offset = "0x84E394", VA = "0x84E394", Slot = "18")]
		public int AudioMaterialReset(IntPtr material, MaterialProperty property)
		{
			return default(int);
		}

		[Token(Token = "0x6000D44")]
		[Address(RVA = "0x84E3A0", Offset = "0x84E3A0", VA = "0x84E3A0")]
		public FMODPluginInterface()
		{
		}
	}

	[Token(Token = "0x4000160")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static PropagationInterface CachedInterface;

	[Token(Token = "0x17000023")]
	public static PropagationInterface Interface
	{
		[Token(Token = "0x60001B9")]
		[Address(RVA = "0x7250BC", Offset = "0x7250BC", VA = "0x7250BC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60001BA")]
	[Address(RVA = "0x725134", Offset = "0x725134", VA = "0x725134")]
	private static PropagationInterface FindInterface()
	{
		return null;
	}

	[Token(Token = "0x60001BB")]
	[Address(RVA = "0x7253BC", Offset = "0x7253BC", VA = "0x7253BC")]
	public ONSPPropagation()
	{
	}
}
[Token(Token = "0x200003B")]
public sealed class ONSPPropagationMaterial : MonoBehaviour
{
	[Token(Token = "0x20001D0")]
	public enum Preset
	{
		[Token(Token = "0x4000D1A")]
		Custom,
		[Token(Token = "0x4000D1B")]
		AcousticTile,
		[Token(Token = "0x4000D1C")]
		Brick,
		[Token(Token = "0x4000D1D")]
		BrickPainted,
		[Token(Token = "0x4000D1E")]
		Carpet,
		[Token(Token = "0x4000D1F")]
		CarpetHeavy,
		[Token(Token = "0x4000D20")]
		CarpetHeavyPadded,
		[Token(Token = "0x4000D21")]
		CeramicTile,
		[Token(Token = "0x4000D22")]
		Concrete,
		[Token(Token = "0x4000D23")]
		ConcreteRough,
		[Token(Token = "0x4000D24")]
		ConcreteBlock,
		[Token(Token = "0x4000D25")]
		ConcreteBlockPainted,
		[Token(Token = "0x4000D26")]
		Curtain,
		[Token(Token = "0x4000D27")]
		Foliage,
		[Token(Token = "0x4000D28")]
		Glass,
		[Token(Token = "0x4000D29")]
		GlassHeavy,
		[Token(Token = "0x4000D2A")]
		Grass,
		[Token(Token = "0x4000D2B")]
		Gravel,
		[Token(Token = "0x4000D2C")]
		GypsumBoard,
		[Token(Token = "0x4000D2D")]
		PlasterOnBrick,
		[Token(Token = "0x4000D2E")]
		PlasterOnConcreteBlock,
		[Token(Token = "0x4000D2F")]
		Soil,
		[Token(Token = "0x4000D30")]
		SoundProof,
		[Token(Token = "0x4000D31")]
		Snow,
		[Token(Token = "0x4000D32")]
		Steel,
		[Token(Token = "0x4000D33")]
		Water,
		[Token(Token = "0x4000D34")]
		WoodThin,
		[Token(Token = "0x4000D35")]
		WoodThick,
		[Token(Token = "0x4000D36")]
		WoodFloor,
		[Token(Token = "0x4000D37")]
		WoodOnConcrete
	}

	[Serializable]
	[Token(Token = "0x20001D1")]
	public sealed class Point
	{
		[Token(Token = "0x4000D38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float frequency;

		[Token(Token = "0x4000D39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float data;

		[Token(Token = "0x6000D45")]
		[Address(RVA = "0x84FE58", Offset = "0x84FE58", VA = "0x84FE58")]
		public Point(float frequency = 0f, float data = 0f)
		{
		}

		[Token(Token = "0x6000D46")]
		[Address(RVA = "0x84FE90", Offset = "0x84FE90", VA = "0x84FE90")]
		public static implicit operator Point(Vector2 v)
		{
			return null;
		}

		[Token(Token = "0x6000D47")]
		[Address(RVA = "0x84FEFC", Offset = "0x84FEFC", VA = "0x84FEFC")]
		public static implicit operator Vector2(Point point)
		{
			return default(Vector2);
		}
	}

	[Serializable]
	[Token(Token = "0x20001D2")]
	[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0x43F3E0", Offset = "0x43F3E0")]
	public sealed class Spectrum
	{
		[Serializable]
		[Token(Token = "0x20002D8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x43F678", Offset = "0x43F678")]
		private sealed class <>c
		{
			[Token(Token = "0x400105B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x400105C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<Point, float> <>9__3_0;

			[Token(Token = "0x400105D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Func<Point, float> <>9__3_1;

			[Token(Token = "0x6000FBB")]
			[Address(RVA = "0x8547B8", Offset = "0x8547B8", VA = "0x8547B8")]
			public <>c()
			{
			}

			[Token(Token = "0x6000FBC")]
			[Address(RVA = "0x8547C0", Offset = "0x8547C0", VA = "0x8547C0")]
			internal float <get_Item>b__3_0(Point p)
			{
				return default(float);
			}

			[Token(Token = "0x6000FBD")]
			[Address(RVA = "0x8547D8", Offset = "0x8547D8", VA = "0x8547D8")]
			internal float <get_Item>b__3_1(Point p)
			{
				return default(float);
			}
		}

		[Token(Token = "0x4000D3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int selection;

		[Token(Token = "0x4000D3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<Point> points;

		[Token(Token = "0x170000B1")]
		public float Item
		{
			[Token(Token = "0x6000D48")]
			[Address(RVA = "0x84FF14", Offset = "0x84FF14", VA = "0x84FF14")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6000D49")]
		[Address(RVA = "0x850378", Offset = "0x850378", VA = "0x850378")]
		public Spectrum()
		{
		}
	}

	[Token(Token = "0x4000161")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public IntPtr materialHandle;

	[Token(Token = "0x4000162")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4405B0", Offset = "0x4405B0")]
	public Spectrum absorption;

	[Token(Token = "0x4000163")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4405E8", Offset = "0x4405E8")]
	public Spectrum transmission;

	[Token(Token = "0x4000164")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x440620", Offset = "0x440620")]
	public Spectrum scattering;

	[Token(Token = "0x4000165")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private Preset preset_;

	[Token(Token = "0x17000024")]
	public Preset preset
	{
		[Token(Token = "0x60001BC")]
		[Address(RVA = "0xE50CAC", Offset = "0xE50CAC", VA = "0xE50CAC")]
		get
		{
			return default(Preset);
		}
		[Token(Token = "0x60001BD")]
		[Address(RVA = "0xE50CB4", Offset = "0xE50CB4", VA = "0xE50CB4")]
		set
		{
		}
	}

	[Token(Token = "0x60001BE")]
	[Address(RVA = "0xE50E70", Offset = "0xE50E70", VA = "0xE50E70")]
	private void Start()
	{
	}

	[Token(Token = "0x60001BF")]
	[Address(RVA = "0xE50E74", Offset = "0xE50E74", VA = "0xE50E74")]
	public void StartInternal()
	{
	}

	[Token(Token = "0x60001C0")]
	[Address(RVA = "0xE51600", Offset = "0xE51600", VA = "0xE51600")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60001C1")]
	[Address(RVA = "0xE51604", Offset = "0xE51604", VA = "0xE51604")]
	public void DestroyInternal()
	{
	}

	[Token(Token = "0x60001C2")]
	[Address(RVA = "0xE51004", Offset = "0xE51004", VA = "0xE51004")]
	public void UploadMaterial()
	{
	}

	[Token(Token = "0x60001C3")]
	[Address(RVA = "0xE50CDC", Offset = "0xE50CDC", VA = "0xE50CDC")]
	public void SetPreset(Preset preset)
	{
	}

	[Token(Token = "0x60001C4")]
	[Address(RVA = "0xE516F4", Offset = "0xE516F4", VA = "0xE516F4")]
	private static void AcousticTile(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60001C5")]
	[Address(RVA = "0xE51BD4", Offset = "0xE51BD4", VA = "0xE51BD4")]
	private static void Brick(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60001C6")]
	[Address(RVA = "0xE520B8", Offset = "0xE520B8", VA = "0xE520B8")]
	private static void BrickPainted(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60001C7")]
	[Address(RVA = "0xE52598", Offset = "0xE52598", VA = "0xE52598")]
	private static void Carpet(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60001C8")]
	[Address(RVA = "0xE52A8C", Offset = "0xE52A8C", VA = "0xE52A8C")]
	private static void CarpetHeavy(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60001C9")]
	[Address(RVA = "0xE52F6C", Offset = "0xE52F6C", VA = "0xE52F6C")]
	private static void CarpetHeavyPadded(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60001CA")]
	[Address(RVA = "0xE5344C", Offset = "0xE5344C", VA = "0xE5344C")]
	private static void CeramicTile(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60001CB")]
	[Address(RVA = "0xE53934", Offset = "0xE53934", VA = "0xE53934")]
	private static void Concrete(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60001CC")]
	[Address(RVA = "0xE53E1C", Offset = "0xE53E1C", VA = "0xE53E1C")]
	private static void ConcreteRough(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60001CD")]
	[Address(RVA = "0xE54308", Offset = "0xE54308", VA = "0xE54308")]
	private static void ConcreteBlock(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60001CE")]
	[Address(RVA = "0xE547F0", Offset = "0xE547F0", VA = "0xE547F0")]
	private static void ConcreteBlockPainted(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60001CF")]
	[Address(RVA = "0xE54CE0", Offset = "0xE54CE0", VA = "0xE54CE0")]
	private static void Curtain(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60001D0")]
	[Address(RVA = "0xE551C0", Offset = "0xE551C0", VA = "0xE551C0")]
	private static void Foliage(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60001D1")]
	[Address(RVA = "0xE556B4", Offset = "0xE556B4", VA = "0xE556B4")]
	private static void Glass(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60001D2")]
	[Address(RVA = "0xE55B84", Offset = "0xE55B84", VA = "0xE55B84")]
	private static void GlassHeavy(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60001D3")]
	[Address(RVA = "0xE56060", Offset = "0xE56060", VA = "0xE56060")]
	private static void Grass(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60001D4")]
	[Address(RVA = "0xE56428", Offset = "0xE56428", VA = "0xE56428")]
	private static void Gravel(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60001D5")]
	[Address(RVA = "0xE567E8", Offset = "0xE567E8", VA = "0xE567E8")]
	private static void GypsumBoard(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60001D6")]
	[Address(RVA = "0xE56CD8", Offset = "0xE56CD8", VA = "0xE56CD8")]
	private static void PlasterOnBrick(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60001D7")]
	[Address(RVA = "0xE571C4", Offset = "0xE571C4", VA = "0xE571C4")]
	private static void PlasterOnConcreteBlock(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60001D8")]
	[Address(RVA = "0xE576A8", Offset = "0xE576A8", VA = "0xE576A8")]
	private static void Soil(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60001D9")]
	[Address(RVA = "0xE57A74", Offset = "0xE57A74", VA = "0xE57A74")]
	private static void SoundProof(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60001DA")]
	[Address(RVA = "0xE57C18", Offset = "0xE57C18", VA = "0xE57C18")]
	private static void Snow(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60001DB")]
	[Address(RVA = "0xE57FD4", Offset = "0xE57FD4", VA = "0xE57FD4")]
	private static void Steel(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60001DC")]
	[Address(RVA = "0xE584A4", Offset = "0xE584A4", VA = "0xE584A4")]
	private static void Water(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60001DD")]
	[Address(RVA = "0xE58988", Offset = "0xE58988", VA = "0xE58988")]
	private static void WoodThin(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60001DE")]
	[Address(RVA = "0xE58E60", Offset = "0xE58E60", VA = "0xE58E60")]
	private static void WoodThick(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60001DF")]
	[Address(RVA = "0xE59340", Offset = "0xE59340", VA = "0xE59340")]
	private static void WoodFloor(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60001E0")]
	[Address(RVA = "0xE59828", Offset = "0xE59828", VA = "0xE59828")]
	private static void WoodOnConcrete(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60001E1")]
	[Address(RVA = "0xE59D0C", Offset = "0xE59D0C", VA = "0xE59D0C")]
	public ONSPPropagationMaterial()
	{
	}
}
[Token(Token = "0x200003C")]
public class ONSPPropagationSettings : MonoBehaviour
{
	[Token(Token = "0x4000166")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float quality;

	[Token(Token = "0x60001E2")]
	[Address(RVA = "0xE59DDC", Offset = "0xE59DDC", VA = "0xE59DDC")]
	private void Update()
	{
	}

	[Token(Token = "0x60001E3")]
	[Address(RVA = "0xE59EAC", Offset = "0xE59EAC", VA = "0xE59EAC")]
	public ONSPPropagationSettings()
	{
	}
}
[Token(Token = "0x200003D")]
public sealed class ONSPSettings : ScriptableObject
{
	[Token(Token = "0x4000167")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	public int voiceLimit;

	[Token(Token = "0x4000168")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static ONSPSettings instance;

	[Token(Token = "0x17000025")]
	public static ONSPSettings Instance
	{
		[Token(Token = "0x60001E4")]
		[Address(RVA = "0xE5A504", Offset = "0xE5A504", VA = "0xE5A504")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60001E5")]
	[Address(RVA = "0xE5A65C", Offset = "0xE5A65C", VA = "0xE5A65C")]
	public ONSPSettings()
	{
	}
}
[Token(Token = "0x200003E")]
public class ONSPVersion : MonoBehaviour
{
	[Token(Token = "0x4000169")]
	public const string strONSPS = "AudioPluginOculusSpatializer";

	[PreserveSig]
	[Token(Token = "0x60001E6")]
	[Address(RVA = "0xE5A66C", Offset = "0xE5A66C", VA = "0xE5A66C")]
	private static extern void ONSP_GetVersion(ref int Major, ref int Minor, ref int Patch);

	[Token(Token = "0x60001E7")]
	[Address(RVA = "0xE5A704", Offset = "0xE5A704", VA = "0xE5A704")]
	private void Awake()
	{
	}

	[Token(Token = "0x60001E8")]
	[Address(RVA = "0xE5A824", Offset = "0xE5A824", VA = "0xE5A824")]
	private void Start()
	{
	}

	[Token(Token = "0x60001E9")]
	[Address(RVA = "0xE5A828", Offset = "0xE5A828", VA = "0xE5A828")]
	private void Update()
	{
	}

	[Token(Token = "0x60001EA")]
	[Address(RVA = "0xE5A82C", Offset = "0xE5A82C", VA = "0xE5A82C")]
	public ONSPVersion()
	{
	}
}
[Token(Token = "0x200003F")]
public class OculusSpatializerUnity : MonoBehaviour
{
	[Token(Token = "0x20001D3")]
	public delegate void AudioRaycastCallback(Vector3 origin, Vector3 direction, out Vector3 point, out Vector3 normal, IntPtr data);

	[Token(Token = "0x400016A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public LayerMask layerMask;

	[Token(Token = "0x400016B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool visualizeRoom;

	[Token(Token = "0x400016C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
	private bool roomVisualizationInitialized;

	[Token(Token = "0x400016D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int raysPerSecond;

	[Token(Token = "0x400016E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float roomInterpSpeed;

	[Token(Token = "0x400016F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float maxWallDistance;

	[Token(Token = "0x4000170")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public int rayCacheSize;

	[Token(Token = "0x4000171")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool dynamicReflectionsEnabled;

	[Token(Token = "0x4000172")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float particleSize;

	[Token(Token = "0x4000173")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float particleOffset;

	[Token(Token = "0x4000174")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private GameObject room;

	[Token(Token = "0x4000175")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Renderer[] wallRenderer;

	[Token(Token = "0x4000176")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float[] dims;

	[Token(Token = "0x4000177")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float[] coefs;

	[Token(Token = "0x4000178")]
	private const int HIT_COUNT = 2048;

	[Token(Token = "0x4000179")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Vector3[] points;

	[Token(Token = "0x400017A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Vector3[] normals;

	[Token(Token = "0x400017B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private ParticleSystem sys;

	[Token(Token = "0x400017C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private ParticleSystem.Particle[] particles;

	[Token(Token = "0x400017D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static LayerMask gLayerMask;

	[Token(Token = "0x400017E")]
	private const string strOSP = "AudioPluginOculusSpatializer";

	[Token(Token = "0x60001EB")]
	[Address(RVA = "0xE5F794", Offset = "0xE5F794", VA = "0xE5F794")]
	private static Vector3 swapHandedness(Vector3 vec)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60001EC")]
	[Address(RVA = "0xE5F624", Offset = "0xE5F624", VA = "0xE5F624")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x442498", Offset = "0x442498")]
	private static void AudioRaycast(Vector3 origin, Vector3 direction, out Vector3 point, out Vector3 normal, IntPtr data)
	{
	}

	[Token(Token = "0x60001ED")]
	[Address(RVA = "0xE5F79C", Offset = "0xE5F79C", VA = "0xE5F79C")]
	private void Start()
	{
	}

	[Token(Token = "0x60001EE")]
	[Address(RVA = "0xE5F8E0", Offset = "0xE5F8E0", VA = "0xE5F8E0")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60001EF")]
	[Address(RVA = "0xE5F9DC", Offset = "0xE5F9DC", VA = "0xE5F9DC")]
	private void Update()
	{
	}

	[Token(Token = "0x60001F0")]
	[Address(RVA = "0xE602F8", Offset = "0xE602F8", VA = "0xE602F8")]
	private void inititalizeRoomVisualization()
	{
	}

	[PreserveSig]
	[Token(Token = "0x60001F1")]
	[Address(RVA = "0xE5F84C", Offset = "0xE5F84C", VA = "0xE5F84C")]
	private static extern int OSP_Unity_AssignRaycastCallback(AudioRaycastCallback callback, IntPtr data);

	[PreserveSig]
	[Token(Token = "0x60001F2")]
	[Address(RVA = "0xE5F94C", Offset = "0xE5F94C", VA = "0xE5F94C")]
	private static extern int OSP_Unity_AssignRaycastCallback(IntPtr callback, IntPtr data);

	[PreserveSig]
	[Token(Token = "0x60001F3")]
	[Address(RVA = "0xE60060", Offset = "0xE60060", VA = "0xE60060")]
	private static extern int OSP_Unity_SetDynamicRoomRaysPerSecond(int RaysPerSecond);

	[PreserveSig]
	[Token(Token = "0x60001F4")]
	[Address(RVA = "0xE600E0", Offset = "0xE600E0", VA = "0xE600E0")]
	private static extern int OSP_Unity_SetDynamicRoomInterpSpeed(float InterpSpeed);

	[PreserveSig]
	[Token(Token = "0x60001F5")]
	[Address(RVA = "0xE60168", Offset = "0xE60168", VA = "0xE60168")]
	private static extern int OSP_Unity_SetDynamicRoomMaxWallDistance(float MaxWallDistance);

	[PreserveSig]
	[Token(Token = "0x60001F6")]
	[Address(RVA = "0xE601F0", Offset = "0xE601F0", VA = "0xE601F0")]
	private static extern int OSP_Unity_SetDynamicRoomRaysRayCacheSize(int RayCacheSize);

	[PreserveSig]
	[Token(Token = "0x60001F7")]
	[Address(RVA = "0xE60270", Offset = "0xE60270", VA = "0xE60270")]
	private static extern int OSP_Unity_UpdateRoomModel(float wetLevel);

	[PreserveSig]
	[Token(Token = "0x60001F8")]
	[Address(RVA = "0xE60FF8", Offset = "0xE60FF8", VA = "0xE60FF8")]
	private static extern int OSP_Unity_GetRoomDimensions(float[] roomDimensions, float[] reflectionsCoefs, out Vector3 position);

	[PreserveSig]
	[Token(Token = "0x60001F9")]
	[Address(RVA = "0xE610A0", Offset = "0xE610A0", VA = "0xE610A0")]
	private static extern int OSP_Unity_GetRaycastHits(Vector3[] points, Vector3[] normals, int length);

	[Token(Token = "0x60001FA")]
	[Address(RVA = "0xE61148", Offset = "0xE61148", VA = "0xE61148")]
	public OculusSpatializerUnity()
	{
	}
}
[Token(Token = "0x2000040")]
public struct ReflectionSnapshot
{
	[Token(Token = "0x400017F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public AudioMixerSnapshot mixerSnapshot;

	[Token(Token = "0x4000180")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float fadeTime;
}
[Token(Token = "0x2000041")]
public class ONSPReflectionZone : MonoBehaviour
{
	[Token(Token = "0x4000181")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioMixerSnapshot mixerSnapshot;

	[Token(Token = "0x4000182")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float fadeTime;

	[Token(Token = "0x4000183")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Stack<ReflectionSnapshot> snapshotList;

	[Token(Token = "0x4000184")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static ReflectionSnapshot currentSnapshot;

	[Token(Token = "0x60001FC")]
	[Address(RVA = "0xE59EBC", Offset = "0xE59EBC", VA = "0xE59EBC")]
	private void Start()
	{
	}

	[Token(Token = "0x60001FD")]
	[Address(RVA = "0xE59EC0", Offset = "0xE59EC0", VA = "0xE59EC0")]
	private void Update()
	{
	}

	[Token(Token = "0x60001FE")]
	[Address(RVA = "0xE59EC4", Offset = "0xE59EC4", VA = "0xE59EC4")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x60001FF")]
	[Address(RVA = "0xE5A03C", Offset = "0xE5A03C", VA = "0xE5A03C")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x6000200")]
	[Address(RVA = "0xE59F10", Offset = "0xE59F10", VA = "0xE59F10")]
	private bool CheckForAudioListener(GameObject gameObject)
	{
		return default(bool);
	}

	[Token(Token = "0x6000201")]
	[Address(RVA = "0xE59FA8", Offset = "0xE59FA8", VA = "0xE59FA8")]
	private void PushCurrentMixerShapshot()
	{
	}

	[Token(Token = "0x6000202")]
	[Address(RVA = "0xE5A088", Offset = "0xE5A088", VA = "0xE5A088")]
	private void PopCurrentMixerSnapshot()
	{
	}

	[Token(Token = "0x6000203")]
	[Address(RVA = "0xE5A128", Offset = "0xE5A128", VA = "0xE5A128")]
	private void SetReflectionValues()
	{
	}

	[Token(Token = "0x6000204")]
	[Address(RVA = "0xE5A2C4", Offset = "0xE5A2C4", VA = "0xE5A2C4")]
	private void SetReflectionValues(ref ReflectionSnapshot mss)
	{
	}

	[Token(Token = "0x6000205")]
	[Address(RVA = "0xE5A460", Offset = "0xE5A460", VA = "0xE5A460")]
	public ONSPReflectionZone()
	{
	}
}
[Token(Token = "0x2000042")]
public static class Words
{
	[Token(Token = "0x20001D4")]
	private class FixStrings
	{
		[Token(Token = "0x4000D3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string inCode;

		[Token(Token = "0x4000D3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string inFile;

		[Token(Token = "0x6000D4E")]
		[Address(RVA = "0x853630", Offset = "0x853630", VA = "0x853630")]
		public FixStrings(string _inCode, string _inFile)
		{
		}
	}

	[Serializable]
	[Token(Token = "0x20001D5")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x43F418", Offset = "0x43F418")]
	private sealed class <>c
	{
		[Token(Token = "0x4000D3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4000D3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Comparison<FieldInfo> <>9__317_0;

		[Token(Token = "0x6000D50")]
		[Address(RVA = "0x8535CC", Offset = "0x8535CC", VA = "0x8535CC")]
		public <>c()
		{
		}

		[Token(Token = "0x6000D51")]
		[Address(RVA = "0x8535D4", Offset = "0x8535D4", VA = "0x8535D4")]
		internal int <save>b__317_0(FieldInfo a, FieldInfo b)
		{
			return default(int);
		}
	}

	[Token(Token = "0x4000185")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static string NOINTERNET_TITLE;

	[Token(Token = "0x4000186")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static string NOINTERNET_MESSAGE;

	[Token(Token = "0x4000187")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static string NONETWORKGAME_TITLE;

	[Token(Token = "0x4000188")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static string NONETWORKGAME_MESSAGE;

	[Token(Token = "0x4000189")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public static string EXIT;

	[Token(Token = "0x400018A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public static string SHOW_HUD;

	[Token(Token = "0x400018B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public static string HIDE_HUD;

	[Token(Token = "0x400018C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public static string UIHELP_HIDEUI;

	[Token(Token = "0x400018D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public static string HEIGHT_LABEL;

	[Token(Token = "0x400018E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public static string METERS;

	[Token(Token = "0x400018F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public static string FEET;

	[Token(Token = "0x4000190")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public static string INCHES;

	[Token(Token = "0x4000191")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public static string MOVE6DOF_TITLE;

	[Token(Token = "0x4000192")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public static string MOVE6DOF_TELEPORT;

	[Token(Token = "0x4000193")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public static string MOVE6DOF_CUELOCKED;

	[Token(Token = "0x4000194")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public static string MOVE6DOF_CUE;

	[Token(Token = "0x4000195")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public static string QUICK6DOF_HOWTOTURN;

	[Token(Token = "0x4000196")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public static string QUICK6DOF_HOWTOCHANGESPIN;

	[Token(Token = "0x4000197")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public static string QUICK6DOF_HOWTOCHANGEPOWER;

	[Token(Token = "0x4000198")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public static string QUICK6DOF_HOWTOSHOOT;

	[Token(Token = "0x4000199")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public static string QUICK6DOF_TITLE;

	[Token(Token = "0x400019A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public static string UIHELP_TITLE;

	[Token(Token = "0x400019B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public static string UIHELP_SCORLINE;

	[Token(Token = "0x400019C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public static string UIHELP_SHOOT;

	[Token(Token = "0x400019D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public static string UIHELP_QVIEW;

	[Token(Token = "0x400019E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public static string UIHELP_QVIEWLOCK;

	[Token(Token = "0x400019F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public static string UIHELP_CROUCH;

	[Token(Token = "0x40001A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public static string UIHELP_HELP;

	[Token(Token = "0x40001A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public static string UIHELP_SPIN;

	[Token(Token = "0x40001A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public static string UIHELP_POWER;

	[Token(Token = "0x40001A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public static string UIHELP_PATHPREVIEW;

	[Token(Token = "0x40001A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public static string UIHELP_SETTINGS;

	[Token(Token = "0x40001A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public static string VRMODE_KEY;

	[Token(Token = "0x40001A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	public static string VRMODE_SEATED;

	[Token(Token = "0x40001A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	public static string VRMODE_STANDING;

	[Token(Token = "0x40001A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	public static string HELP_EDITOR;

	[Token(Token = "0x40001A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	public static string CROWD_LEVEL;

	[Token(Token = "0x40001AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	public static string CROWD_0;

	[Token(Token = "0x40001AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	public static string CROWD_1;

	[Token(Token = "0x40001AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	public static string CROWD_2;

	[Token(Token = "0x40001AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	public static string MORE_INFO;

	[Token(Token = "0x40001AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	public static string SETTINGS_POINTER_HAND;

	[Token(Token = "0x40001AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	public static string SETTINGS_BED_MODE;

	[Token(Token = "0x40001B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	public static string SETTINGS_EDITOR_HELP;

	[Token(Token = "0x40001B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	public static string SETTINGS_GAME_HELP;

	[Token(Token = "0x40001B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	public static string SETTINGS_HEIGHT_OFFSET;

	[Token(Token = "0x40001B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	public static string HELPINPUT_TITLE;

	[Token(Token = "0x40001B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	public static string HELPINPUT_TURNCUE;

	[Token(Token = "0x40001B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	public static string HELPINPUT_BACK;

	[Token(Token = "0x40001B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	public static string HELPINPUT_INTERACT;

	[Token(Token = "0x40001B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	public static string HELPINPUT_CHANGEPOSITION;

	[Token(Token = "0x40001B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	public static string HELPINPUT_SPINPOWER;

	[Token(Token = "0x40001B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	public static string HELPINPUT_TOGGLESPINPOWER;

	[Token(Token = "0x40001BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	public static string HELPINPUT_CROUCH;

	[Token(Token = "0x40001BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	public static string HELPINPUT_TOGGLEUI;

	[Token(Token = "0x40001BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	public static string HELPINPUT_TELEPORT;

	[Token(Token = "0x40001BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	public static string HOME_PAGE;

	[Token(Token = "0x40001BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
	public static string MENU_TABLE_LOAD;

	[Token(Token = "0x40001BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
	public static string UPDATES_TITLE;

	[Token(Token = "0x40001C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
	public static string TABLE_ERROR_DEE_TOO_SMALL;

	[Token(Token = "0x40001C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
	public static string SETTINGS_NAME_HELP_VR;

	[Token(Token = "0x40001C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
	public static string ENTER_TABLE_NAME;

	[Token(Token = "0x40001C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
	public static string CUSTOM;

	[Token(Token = "0x40001C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
	public static string TABLE_STATUS;

	[Token(Token = "0x40001C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
	public static string SAVE_TABLE_QUESTION;

	[Token(Token = "0x40001C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
	public static string MENU_TITLE_BAD_TABLE;

	[Token(Token = "0x40001C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
	public static string MENU_ACCEPT_BAD_TABLE;

	[Token(Token = "0x40001C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
	public static string ENTER_SHOOT_STRENGTH;

	[Token(Token = "0x40001C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x220")]
	public static string TABLE_GOOD;

	[Token(Token = "0x40001CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x228")]
	public static string TABLE_BAD;

	[Token(Token = "0x40001CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x230")]
	public static string TABLE_TOOLS;

	[Token(Token = "0x40001CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x238")]
	public static string TABLE_CONSTANTS;

	[Token(Token = "0x40001CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x240")]
	public static string TABLE_SELECTED_ITEM;

	[Token(Token = "0x40001CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x248")]
	public static string TABLE_ERROR;

	[Token(Token = "0x40001CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x250")]
	public static string TABLE_ERROR_BALLS_OVERLAP;

	[Token(Token = "0x40001D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x258")]
	public static string TABLE_ERROR_BALLS_OFF_TABLE;

	[Token(Token = "0x40001D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x260")]
	public static string TABLE_ERROR_BAD_OUTLINE;

	[Token(Token = "0x40001D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x268")]
	public static string TABLE_ERROR_BALLS_CROSS_HEADSTRING;

	[Token(Token = "0x40001D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x270")]
	public static string MENU_TABLE_NEW;

	[Token(Token = "0x40001D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x278")]
	public static string MENU_TABLE_TEMPLATE_0;

	[Token(Token = "0x40001D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x280")]
	public static string MENU_TABLE_TEMPLATE_1;

	[Token(Token = "0x40001D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x288")]
	public static string MENU_TABLE_TEMPLATE_2;

	[Token(Token = "0x40001D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x290")]
	public static string MENU_TABLE_MENU;

	[Token(Token = "0x40001D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x298")]
	public static string MENU_TABLE_SAVE;

	[Token(Token = "0x40001D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A0")]
	public static string MENU_TABLE_PREVIEW;

	[Token(Token = "0x40001DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A8")]
	public static string MENU_TITLE_UNSAVED_CHANGES;

	[Token(Token = "0x40001DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2B0")]
	public static string MENU_SAVE;

	[Token(Token = "0x40001DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2B8")]
	public static string MENU_DONT_SAVE;

	[Token(Token = "0x40001DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C0")]
	public static string ENTER_FILE_NAME;

	[Token(Token = "0x40001DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C8")]
	public static string SELECT_RULES;

	[Token(Token = "0x40001DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D0")]
	public static string SELECT_TABLE;

	[Token(Token = "0x40001E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D8")]
	public static string SELECT_OPTIONS;

	[Token(Token = "0x40001E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2E0")]
	public static string REQUESTOR;

	[Token(Token = "0x40001E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2E8")]
	public static string DELETE_FILE_QUESTION;

	[Token(Token = "0x40001E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2F0")]
	public static string DELETE;

	[Token(Token = "0x40001E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2F8")]
	public static string ENTER_NAME;

	[Token(Token = "0x40001E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x300")]
	public static string PAGE_X_OF_Y;

	[Token(Token = "0x40001E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x308")]
	public static string MOUSEMODE_ADD;

	[Token(Token = "0x40001E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x310")]
	public static string MOUSEMODE_SELECT;

	[Token(Token = "0x40001E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x318")]
	public static string MOUSEMODE_MOVE;

	[Token(Token = "0x40001E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x320")]
	public static string MOUSEMODE_SUB;

	[Token(Token = "0x40001EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x328")]
	public static string TITLE_SAVE_TABLE;

	[Token(Token = "0x40001EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x330")]
	public static string TITLE_LOAD_TABLE;

	[Token(Token = "0x40001EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x338")]
	public static string CORNERTYPE_CORNER;

	[Token(Token = "0x40001ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x340")]
	public static string CORNERTYPE_POCKET;

	[Token(Token = "0x40001EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x348")]
	public static string CONSTANTS_DEERADIUS;

	[Token(Token = "0x40001EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x350")]
	public static string ANGLE;

	[Token(Token = "0x40001F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x358")]
	public static string TABLE_ITEM_BLUEBALL;

	[Token(Token = "0x40001F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x360")]
	public static string TABLE_ITEM_BLACKBALL;

	[Token(Token = "0x40001F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x368")]
	public static string TABLE_ITEM_VERTICES;

	[Token(Token = "0x40001F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x370")]
	public static string TABLE_ITEM_PYRAMID;

	[Token(Token = "0x40001F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x378")]
	public static string TABLE_ITEM_DEE;

	[Token(Token = "0x40001F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x380")]
	public static string TABLE_ITEM_NONE;

	[Token(Token = "0x40001F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x388")]
	public static string MENU_EDIT_TABLE;

	[Token(Token = "0x40001F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x390")]
	public static string DEFAULT;

	[Token(Token = "0x40001F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x398")]
	public static string ENTERPORT_TITLE;

	[Token(Token = "0x40001F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3A0")]
	public static string ENTERPORT_MESSAGE;

	[Token(Token = "0x40001FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3A8")]
	public static string CONNECTIONINFO_TITLE;

	[Token(Token = "0x40001FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3B0")]
	public static string CONNECTIONINFO_MESSAGE;

	[Token(Token = "0x40001FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3B8")]
	public static string MENU_CONSTANTS;

	[Token(Token = "0x40001FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C0")]
	public static string MENU_PLAYBACK;

	[Token(Token = "0x40001FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C8")]
	public static string CONSTANTS_TITLE;

	[Token(Token = "0x40001FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3D0")]
	public static string CONSTANTS_SHOOTSTRENGTH;

	[Token(Token = "0x4000200")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3D8")]
	public static string CONSTANTS_DRAG;

	[Token(Token = "0x4000201")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3E0")]
	public static string CONSTANTS_SPINSTRENGTH;

	[Token(Token = "0x4000202")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3E8")]
	public static string CONSTANTS_BALLRADIUS;

	[Token(Token = "0x4000203")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3F0")]
	public static string CUSTOMCONSTANTS_LABEL;

	[Token(Token = "0x4000204")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3F8")]
	public static string CUSTOMCONSTANTS_DESCRIPTION;

	[Token(Token = "0x4000205")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x400")]
	public static string SETTINGS_BALLPREVIEW;

	[Token(Token = "0x4000206")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x408")]
	public static string VERSION;

	[Token(Token = "0x4000207")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x410")]
	public static string SHOW_AGAIN;

	[Token(Token = "0x4000208")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x418")]
	public static string SPIN_FORWARD;

	[Token(Token = "0x4000209")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x420")]
	public static string SPIN_BACKWARD;

	[Token(Token = "0x400020A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x428")]
	public static string SPIN_LEFT;

	[Token(Token = "0x400020B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x430")]
	public static string SPIN_RIGHT;

	[Token(Token = "0x400020C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x438")]
	public static string SHOT_START_VIEW;

	[Token(Token = "0x400020D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x440")]
	public static string SHOT_START_VIEW_DONT_CHANGE;

	[Token(Token = "0x400020E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x448")]
	public static string SHOT_START_VIEW_CUE;

	[Token(Token = "0x400020F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x450")]
	public static string SHOT_START_VIEW_CUE_LOCKED;

	[Token(Token = "0x4000210")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x458")]
	public static string SHOT_START_VIEW_DESCRIPTION;

	[Token(Token = "0x4000211")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x460")]
	public static string SHOW_CUE;

	[Token(Token = "0x4000212")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x468")]
	public static string SHOW_CUE_DESCRIPTION;

	[Token(Token = "0x4000213")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x470")]
	public static string QUICKSTART_TITLE;

	[Token(Token = "0x4000214")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x478")]
	public static string QUICKSTART_TEXT;

	[Token(Token = "0x4000215")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x480")]
	public static string TIPS_ZOOM_VR;

	[Token(Token = "0x4000216")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x488")]
	public static string TIPS_ROTATE_FIXED_CAMERA;

	[Token(Token = "0x4000217")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x490")]
	public static string TIPS_PLAN_VIEW;

	[Token(Token = "0x4000218")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x498")]
	public static string MENU_TITLE_EXIT_GAME;

	[Token(Token = "0x4000219")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4A0")]
	public static string MENU_YES;

	[Token(Token = "0x400021A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4A8")]
	public static string MENU_NO;

	[Token(Token = "0x400021B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4B0")]
	public static string MENU_LESSON;

	[Token(Token = "0x400021C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4B8")]
	public static string LESSON_PAGE1_TITLE;

	[Token(Token = "0x400021D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C0")]
	public static string LESSON_PAGE2_0;

	[Token(Token = "0x400021E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C8")]
	public static string LESSON_PAGE2_1;

	[Token(Token = "0x400021F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4D0")]
	public static string LESSON_PAGE2_2;

	[Token(Token = "0x4000220")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4D8")]
	public static string LESSON_PAGE3_TITLE;

	[Token(Token = "0x4000221")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4E0")]
	public static string LESSON_PAGE4_0;

	[Token(Token = "0x4000222")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4E8")]
	public static string LESSON_PAGE4_1;

	[Token(Token = "0x4000223")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4F0")]
	public static string LESSON_PAGE4_2;

	[Token(Token = "0x4000224")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4F8")]
	public static string LESSON_PAGE4_3;

	[Token(Token = "0x4000225")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x500")]
	public static string LESSON_PAGE4_4;

	[Token(Token = "0x4000226")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x508")]
	public static string LESSON_PAGE4_5;

	[Token(Token = "0x4000227")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x510")]
	public static string LESSON_PAGE4_6;

	[Token(Token = "0x4000228")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x518")]
	public static string LESSON_PAGE5_TITLE;

	[Token(Token = "0x4000229")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x520")]
	public static string LESSON_PAGE6_0;

	[Token(Token = "0x400022A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x528")]
	public static string LESSON_PAGE6_1;

	[Token(Token = "0x400022B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x530")]
	public static string LESSON_PAGE6_2;

	[Token(Token = "0x400022C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x538")]
	public static string LESSON_PAGE6_3;

	[Token(Token = "0x400022D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x540")]
	public static string LESSON_PAGE6_4;

	[Token(Token = "0x400022E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x548")]
	public static string LESSON_PAGE6_5;

	[Token(Token = "0x400022F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x550")]
	public static string LESSON_PAGE6_4_MONITOR;

	[Token(Token = "0x4000230")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x558")]
	public static string LESSON_PAGE7_TITLE;

	[Token(Token = "0x4000231")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x560")]
	public static string LESSON_PAGE8_0;

	[Token(Token = "0x4000232")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x568")]
	public static string LESSON_PAGE8_1;

	[Token(Token = "0x4000233")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x570")]
	public static string LESSON_PAGE8_2;

	[Token(Token = "0x4000234")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x578")]
	public static string LESSON_PAGE8_3;

	[Token(Token = "0x4000235")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x580")]
	public static string LESSON_PAGE9_TITLE;

	[Token(Token = "0x4000236")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x588")]
	public static string LESSON_PAGE10_0;

	[Token(Token = "0x4000237")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x590")]
	public static string LESSON_PAGE10_1;

	[Token(Token = "0x4000238")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x598")]
	public static string LESSON_PAGE10_2;

	[Token(Token = "0x4000239")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5A0")]
	public static string LESSON_PAGE10_3;

	[Token(Token = "0x400023A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5A8")]
	public static string LESSON_PAGE11_TITLE;

	[Token(Token = "0x400023B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5B0")]
	public static string LESSON_PAGE12_0;

	[Token(Token = "0x400023C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5B8")]
	public static string LESSON_PAGE12_1;

	[Token(Token = "0x400023D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C0")]
	public static string LESSON_PAGE12_2;

	[Token(Token = "0x400023E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C8")]
	public static string LESSON_PAGE12_3;

	[Token(Token = "0x400023F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5D0")]
	public static string LESSON_PAGE12_4;

	[Token(Token = "0x4000240")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5D8")]
	public static string PATH_PREVIEW;

	[Token(Token = "0x4000241")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5E0")]
	public static string PATH_PREVIEW_NONE;

	[Token(Token = "0x4000242")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5E8")]
	public static string PATH_PREVIEW_FIRST_CONTACT;

	[Token(Token = "0x4000243")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5F0")]
	public static string PATH_PREVIEW_COMPLETE;

	[Token(Token = "0x4000244")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5F8")]
	public static string PATH_PREVIEW_DETAILS_NONE;

	[Token(Token = "0x4000245")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x600")]
	public static string PATH_PREVIEW_DETAILS_FIRST_CONTACT;

	[Token(Token = "0x4000246")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x608")]
	public static string PATH_PREVIEW_DETAILS_COMPLETE;

	[Token(Token = "0x4000247")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x610")]
	public static string SETTINGS_SHOW_HELP;

	[Token(Token = "0x4000248")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x618")]
	public static string TIPS_SPIN_DETAILS;

	[Token(Token = "0x4000249")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x620")]
	public static string TIPS_CUE_VIEW;

	[Token(Token = "0x400024A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x628")]
	public static string TIPS_TIPS;

	[Token(Token = "0x400024B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x630")]
	public static string TIPS_TITLE_1;

	[Token(Token = "0x400024C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x638")]
	public static string TIPS_TITLE_2;

	[Token(Token = "0x400024D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x640")]
	public static string TIPS_TITLE_3;

	[Token(Token = "0x400024E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x648")]
	public static string TIPS_ROTATE_CUE;

	[Token(Token = "0x400024F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x650")]
	public static string TIPS_ZOOM;

	[Token(Token = "0x4000250")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x658")]
	public static string TIPS_SHOOT;

	[Token(Token = "0x4000251")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x660")]
	public static string TIPS_POWER;

	[Token(Token = "0x4000252")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x668")]
	public static string TIPS_ROTATE_SPEED;

	[Token(Token = "0x4000253")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x670")]
	public static string TIPS_PREVIEW;

	[Token(Token = "0x4000254")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x678")]
	public static string TIPS_SHOW_OBJECT;

	[Token(Token = "0x4000255")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x680")]
	public static string TIPS_ZOOM_BALL;

	[Token(Token = "0x4000256")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x688")]
	public static string TIPS_SETTINGS;

	[Token(Token = "0x4000257")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x690")]
	public static string TIPS_SPIN;

	[Token(Token = "0x4000258")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x698")]
	public static string TIPS_CUE_VIEW_LOCKED;

	[Token(Token = "0x4000259")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6A0")]
	public static string TIPS_MOVE;

	[Token(Token = "0x400025A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6A8")]
	public static string MENU_TITLE_NETWORK_GAME;

	[Token(Token = "0x400025B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6B0")]
	public static string MENU_NETWORK_GAME;

	[Token(Token = "0x400025C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6B8")]
	public static string MENU_PROFILE;

	[Token(Token = "0x400025D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C0")]
	public static string CONTINUES;

	[Token(Token = "0x400025E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C8")]
	public static string TO_SHOOT;

	[Token(Token = "0x400025F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6D0")]
	public static string SKILL_LEVEL;

	[Token(Token = "0x4000260")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6D8")]
	public static string SKILL_1;

	[Token(Token = "0x4000261")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6E0")]
	public static string SKILL_2;

	[Token(Token = "0x4000262")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6E8")]
	public static string SKILL_3;

	[Token(Token = "0x4000263")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6F0")]
	public static string DECIDES_TO_CONTINUE;

	[Token(Token = "0x4000264")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6F8")]
	public static string DECIDES_RERACK_BREAK;

	[Token(Token = "0x4000265")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x700")]
	public static string DECIDES_RERACK_OPPONENT_BREAK;

	[Token(Token = "0x4000266")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x708")]
	public static string SELECT_OPTION;

	[Token(Token = "0x4000267")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x710")]
	public static string RERACK_OPTION_TITLE;

	[Token(Token = "0x4000268")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x718")]
	public static string RERACK_OPTION_CONTINUE;

	[Token(Token = "0x4000269")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x720")]
	public static string RERACK_OPTION_RERACK_BREAK;

	[Token(Token = "0x400026A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x728")]
	public static string RERACK_OPTION_RERACK_OPPONENT_BREAK;

	[Token(Token = "0x400026B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x730")]
	public static string NOMINATE_POCKET;

	[Token(Token = "0x400026C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x738")]
	public static string VERSUS;

	[Token(Token = "0x400026D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x740")]
	public static string TAP_OKAY_WHEN_READY;

	[Token(Token = "0x400026E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x748")]
	public static string ITEMS;

	[Token(Token = "0x400026F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x750")]
	public static string YES;

	[Token(Token = "0x4000270")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x758")]
	public static string NO;

	[Token(Token = "0x4000271")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x760")]
	public static string DEBUG_LOG;

	[Token(Token = "0x4000272")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x768")]
	public static string DEBUG_STATS;

	[Token(Token = "0x4000273")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x770")]
	public static string HOST;

	[Token(Token = "0x4000274")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x778")]
	public static string MESSAGE_WAITING_FOR;

	[Token(Token = "0x4000275")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x780")]
	public static string MOVE_TYPE;

	[Token(Token = "0x4000276")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x788")]
	public static string MOVE_BASIC;

	[Token(Token = "0x4000277")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x790")]
	public static string MOVE_SPIN;

	[Token(Token = "0x4000278")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x798")]
	public static string MENU_ABOUT;

	[Token(Token = "0x4000279")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7A0")]
	public static string MENU_SETTINGS;

	[Token(Token = "0x400027A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7A8")]
	public static string MENU_ONE_PLAYER;

	[Token(Token = "0x400027B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7B0")]
	public static string MENU_HOST;

	[Token(Token = "0x400027C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7B8")]
	public static string MENU_CLIENT;

	[Token(Token = "0x400027D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C0")]
	public static string MENU_PLAY;

	[Token(Token = "0x400027E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C8")]
	public static string MENU_TITLE_MAIN;

	[Token(Token = "0x400027F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7D0")]
	public static string MENU_TITLE_PLAY;

	[Token(Token = "0x4000280")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7D8")]
	public static string VICTORY_FOR;

	[Token(Token = "0x4000281")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7E0")]
	public static string GAME_OVER;

	[Token(Token = "0x4000282")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7E8")]
	public static string EXIT_GAME;

	[Token(Token = "0x4000283")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7F0")]
	public static string GAMEOPTIONS_TITLE;

	[Token(Token = "0x4000284")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7F8")]
	public static string KEYBOARD_TITLE;

	[Token(Token = "0x4000285")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x800")]
	public static string ENTER_HOST_IP;

	[Token(Token = "0x4000286")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x808")]
	public static string ITS_A_DRAW;

	[Token(Token = "0x4000287")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x810")]
	public static string SETTINGS_TRAILS;

	[Token(Token = "0x4000288")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x818")]
	public static string SETTINGS_BILLBOARDS;

	[Token(Token = "0x4000289")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x820")]
	public static string SETTINGS_NAME_HELP;

	[Token(Token = "0x400028A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x828")]
	public static string DEBUG_STATS_HELP;

	[Token(Token = "0x400028B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x830")]
	public static string NAME_PROMPT;

	[Token(Token = "0x400028C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x838")]
	public static string FOUL;

	[Token(Token = "0x400028D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x840")]
	public static string FOUL_HIT_WRONG_BALL;

	[Token(Token = "0x400028E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x848")]
	public static string FOUL_POTTED_WRONG_BALL;

	[Token(Token = "0x400028F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x850")]
	public static string FOUL_FAILED_TO_HIT;

	[Token(Token = "0x4000290")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x858")]
	public static string FOUL_FAILED_TO_RAIL;

	[Token(Token = "0x4000291")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x860")]
	public static string BREAK_OF;

	[Token(Token = "0x4000292")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x868")]
	public static string NOMINATE_BALL;

	[Token(Token = "0x4000293")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x870")]
	public static string SCORES;

	[Token(Token = "0x4000294")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x878")]
	public static string POINTS;

	[Token(Token = "0x4000295")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x880")]
	public static string TO_BREAK;

	[Token(Token = "0x4000296")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x888")]
	public static string LOADING;

	[Token(Token = "0x4000297")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x890")]
	public static string CLIENT;

	[Token(Token = "0x4000298")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x898")]
	public static string CPU_NAME;

	[Token(Token = "0x4000299")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8A0")]
	public static string ABOUT_TITLE;

	[Token(Token = "0x400029A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8A8")]
	public static string ABOUT_DESCRIPTION;

	[Token(Token = "0x400029B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8B0")]
	public static string OKAY;

	[Token(Token = "0x400029C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8B8")]
	public static string CANCEL;

	[Token(Token = "0x400029D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C0")]
	public static string SETTINGS_TITLE;

	[Token(Token = "0x400029E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C8")]
	public static string SETTINGS_LANGUAGE;

	[Token(Token = "0x400029F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8D0")]
	public static string SETTINGS_NAME;

	[Token(Token = "0x40002A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8D8")]
	public static string SETTINGS_STATS;

	[Token(Token = "0x40002A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8E0")]
	public static string SELECTGAME_TITLE;

	[Token(Token = "0x40002A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8E8")]
	public static string SELECTGAME_ONE_PLAYER;

	[Token(Token = "0x40002A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8F0")]
	public static string SELECTGAME_HOST;

	[Token(Token = "0x40002A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8F8")]
	public static string SELECTGAME_CLIENT;

	[Token(Token = "0x40002A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x900")]
	public static string SELECTGAME_SETTINGS;

	[Token(Token = "0x40002A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x908")]
	public static string SELECTGAME_ABOUT;

	[Token(Token = "0x40002A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x910")]
	public static string JOINING_ROOM;

	[Token(Token = "0x40002A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x918")]
	public static string TITLE_HOST;

	[Token(Token = "0x40002A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x920")]
	public static string MESSAGE_SETTING_UP;

	[Token(Token = "0x40002AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x928")]
	public static string MESSAGE_WAITING_FOR_OPPONENT;

	[Token(Token = "0x40002AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x930")]
	public static string ERROR_ROOM_CONNECTION_FAILED;

	[Token(Token = "0x40002AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x938")]
	public static string STARTING_GAME;

	[Token(Token = "0x40002AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x940")]
	public static string RULES;

	[Token(Token = "0x40002AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x948")]
	public static string STADIUM;

	[Token(Token = "0x40002AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x950")]
	public static string TABLES;

	[Token(Token = "0x40002B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x958")]
	public static string TABLE;

	[Token(Token = "0x40002B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x960")]
	public static string SNOOKER;

	[Token(Token = "0x40002B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x968")]
	public static string POOL;

	[Token(Token = "0x40002B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x970")]
	public static string NINE_BALL;

	[Token(Token = "0x40002B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x978")]
	public static string STADIUM_OCTAGON;

	[Token(Token = "0x40002B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x980")]
	public static string STADIUM_BASIC;

	[Token(Token = "0x40002B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x988")]
	public static string STADIUM_GLOBE;

	[Token(Token = "0x40002B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x990")]
	public static string STADIUM_GREEK;

	[Token(Token = "0x40002B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x998")]
	public static string STADIUM_THEATRE;

	[Token(Token = "0x40002B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9A0")]
	public static string TABLE_REGULAR;

	[Token(Token = "0x40002BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9A8")]
	public static string TABLE_PENTAGON;

	[Token(Token = "0x40002BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9B0")]
	public static string TABLE_HEXAGON;

	[Token(Token = "0x40002BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9B8")]
	public static string TABLE_PENTAGRAM;

	[Token(Token = "0x40002BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C0")]
	public static string TABLE_STAR_6;

	[Token(Token = "0x40002BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C8")]
	public static string TABLE_POOL;

	[Token(Token = "0x40002BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9D0")]
	public static LinkedList<ZuiWord> words;

	[Token(Token = "0x40002C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9D8")]
	private static Dictionary<string, string> lookup;

	[Token(Token = "0x40002C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9E0")]
	private static FixStrings[] fixStrings;

	[Token(Token = "0x6000207")]
	[Address(RVA = "0x823A3C", Offset = "0x823A3C", VA = "0x823A3C")]
	public static void applyAll()
	{
	}

	[Token(Token = "0x6000208")]
	[Address(RVA = "0x823C9C", Offset = "0x823C9C", VA = "0x823C9C")]
	public static void save(string _file)
	{
	}

	[Token(Token = "0x6000209")]
	[Address(RVA = "0x82433C", Offset = "0x82433C", VA = "0x82433C")]
	private static string fixCharsSaving(string s)
	{
		return null;
	}

	[Token(Token = "0x600020A")]
	[Address(RVA = "0x824410", Offset = "0x824410", VA = "0x824410")]
	private static string fixCharsLoading(string s)
	{
		return null;
	}

	[Token(Token = "0x600020B")]
	[Address(RVA = "0x823BA0", Offset = "0x823BA0", VA = "0x823BA0")]
	public static void apply(ZuiWord w)
	{
	}

	[Token(Token = "0x600020C")]
	[Address(RVA = "0x8244E4", Offset = "0x8244E4", VA = "0x8244E4")]
	public static void add(ZuiWord _setter)
	{
	}

	[Token(Token = "0x600020D")]
	[Address(RVA = "0x82457C", Offset = "0x82457C", VA = "0x82457C")]
	public static void sub(ZuiWord v)
	{
	}

	[Token(Token = "0x600020E")]
	[Address(RVA = "0x824608", Offset = "0x824608", VA = "0x824608")]
	public static string removeQuotes(string s)
	{
		return null;
	}

	[Token(Token = "0x600020F")]
	[Address(RVA = "0x824680", Offset = "0x824680", VA = "0x824680")]
	public static string removeQuotes2(string s)
	{
		return null;
	}

	[Token(Token = "0x6000210")]
	[Address(RVA = "0x8246F8", Offset = "0x8246F8", VA = "0x8246F8")]
	public static bool load(string _file)
	{
		return default(bool);
	}

	[Token(Token = "0x6000211")]
	[Address(RVA = "0x813544", Offset = "0x813544", VA = "0x813544")]
	public static string get(string _key)
	{
		return null;
	}

	[Token(Token = "0x6000212")]
	[Address(RVA = "0x825084", Offset = "0x825084", VA = "0x825084")]
	public static bool tryGet(string _key, out string value)
	{
		return default(bool);
	}
}
[Token(Token = "0x2000043")]
public class ZuiArea : MonoBehaviour
{
	[Token(Token = "0x20001D6")]
	public enum ChildArrangement
	{
		[Token(Token = "0x4000D41")]
		horizontal,
		[Token(Token = "0x4000D42")]
		vertical,
		[Token(Token = "0x4000D43")]
		stacked,
		[Token(Token = "0x4000D44")]
		none
	}

	[Token(Token = "0x20001D7")]
	public enum ChildAlignment
	{
		[Token(Token = "0x4000D46")]
		left,
		[Token(Token = "0x4000D47")]
		right,
		[Token(Token = "0x4000D48")]
		center
	}

	[Token(Token = "0x20001D8")]
	public enum SizeMethod
	{
		[Token(Token = "0x4000D4A")]
		elastic,
		[Token(Token = "0x4000D4B")]
		icon,
		[Token(Token = "0x4000D4C")]
		title
	}

	[Token(Token = "0x40002C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ChildArrangement childArrangement;

	[Token(Token = "0x40002C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public ChildAlignment childAlignement;

	[Token(Token = "0x40002C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public SizeMethod sizeMethod;

	[Token(Token = "0x40002C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float size;

	[Token(Token = "0x40002C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float left;

	[Token(Token = "0x40002C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float right;

	[Token(Token = "0x40002C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float top;

	[Token(Token = "0x40002C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float bottom;

	[Token(Token = "0x40002CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float spacing;

	[Token(Token = "0x40002CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	internal int generation;

	[Token(Token = "0x40002CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	internal ZuiAreaBoss boss;

	[Token(Token = "0x40002CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private List<ZuiArea> children;

	[Token(Token = "0x40002CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	internal bool dirty;

	[Token(Token = "0x6000214")]
	[Address(RVA = "0x8557F0", Offset = "0x8557F0", VA = "0x8557F0")]
	public void setDirty()
	{
	}

	[Token(Token = "0x6000215")]
	[Address(RVA = "0x855884", Offset = "0x855884", VA = "0x855884")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000216")]
	[Address(RVA = "0x855A94", Offset = "0x855A94", VA = "0x855A94")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000217")]
	[Address(RVA = "0x855B1C", Offset = "0x855B1C", VA = "0x855B1C")]
	internal void setChildSizes()
	{
	}

	[Token(Token = "0x6000218")]
	[Address(RVA = "0x856784", Offset = "0x856784", VA = "0x856784")]
	public static void getRange(GameObject go, out Vector2 _min, out Vector2 _max)
	{
	}

	[Token(Token = "0x6000219")]
	[Address(RVA = "0x856888", Offset = "0x856888", VA = "0x856888")]
	private void setRange(Vector2 r0, Vector2 r1)
	{
	}

	[Token(Token = "0x600021A")]
	[Address(RVA = "0x856974", Offset = "0x856974", VA = "0x856974")]
	public ZuiArea()
	{
	}
}
[Token(Token = "0x2000044")]
[ExecuteInEditMode]
public class ZuiAreaBoss : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x20001D9")]
	public struct Sizes
	{
		[Token(Token = "0x4000D4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float icon;

		[Token(Token = "0x4000D4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float title;

		[Token(Token = "0x4000D4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float text;

		[Token(Token = "0x6000D52")]
		[Address(RVA = "0x3FC730", Offset = "0x3FC730", VA = "0x3FC730")]
		public Sizes(float _icon = 0.3f, float _text = 0.21f, float _title = 0.21f)
		{
		}

		[Token(Token = "0x6000D53")]
		[Address(RVA = "0x3FC73C", Offset = "0x3FC73C", VA = "0x3FC73C")]
		public Sizes scale(float s)
		{
			return default(Sizes);
		}

		[Token(Token = "0x6000D54")]
		[Address(RVA = "0x3FC758", Offset = "0x3FC758", VA = "0x3FC758")]
		public bool isSame(Sizes other)
		{
			return default(bool);
		}

		[Token(Token = "0x6000D55")]
		[Address(RVA = "0x3FC788", Offset = "0x3FC788", VA = "0x3FC788")]
		public float get(Elements e)
		{
			return default(float);
		}
	}

	[Token(Token = "0x20001DA")]
	public enum Elements
	{
		[Token(Token = "0x4000D51")]
		icon,
		[Token(Token = "0x4000D52")]
		title,
		[Token(Token = "0x4000D53")]
		text
	}

	[Token(Token = "0x40002CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int iconsAcross;

	[Token(Token = "0x40002D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public static int iconsDown;

	[Token(Token = "0x40002D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static Sizes monitorSizes;

	[Token(Token = "0x40002D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public static Sizes vrSizes;

	[Token(Token = "0x40002D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public static Sizes pixelSizes;

	[Token(Token = "0x40002D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private static Vector2 lastScreenSize;

	[Token(Token = "0x40002D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Vector2 oldScreenSize;

	[Token(Token = "0x40002D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool dirty;

	[Token(Token = "0x40002D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Vector2 bossSize;

	[Token(Token = "0x600021B")]
	[Address(RVA = "0x856A00", Offset = "0x856A00", VA = "0x856A00")]
	public void OnEnable()
	{
	}

	[Token(Token = "0x600021C")]
	[Address(RVA = "0x8558EC", Offset = "0x8558EC", VA = "0x8558EC")]
	public static void add(ZuiArea _area)
	{
	}

	[Token(Token = "0x600021D")]
	[Address(RVA = "0x855878", Offset = "0x855878", VA = "0x855878")]
	public void setDirty()
	{
	}

	[Token(Token = "0x600021E")]
	[Address(RVA = "0x856A0C", Offset = "0x856A0C", VA = "0x856A0C")]
	private void updateSizesMonitor()
	{
	}

	[Token(Token = "0x600021F")]
	[Address(RVA = "0x856B48", Offset = "0x856B48", VA = "0x856B48")]
	private void updateSizesVr()
	{
	}

	[Token(Token = "0x6000220")]
	[Address(RVA = "0x856BB8", Offset = "0x856BB8", VA = "0x856BB8")]
	private void resizeAll()
	{
	}

	[Token(Token = "0x6000221")]
	[Address(RVA = "0x856E94", Offset = "0x856E94", VA = "0x856E94")]
	private void updateDirty()
	{
	}

	[Token(Token = "0x6000222")]
	[Address(RVA = "0x856F50", Offset = "0x856F50", VA = "0x856F50")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000223")]
	[Address(RVA = "0x857140", Offset = "0x857140", VA = "0x857140")]
	private Vector2 getSize()
	{
		return default(Vector2);
	}

	[Token(Token = "0x6000224")]
	[Address(RVA = "0x85717C", Offset = "0x85717C", VA = "0x85717C")]
	public ZuiAreaBoss()
	{
	}
}
[Token(Token = "0x2000045")]
public class ZuiColor : MonoBehaviour
{
	[Token(Token = "0x40002D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string key;

	[Token(Token = "0x6000226")]
	[Address(RVA = "0x85729C", Offset = "0x85729C", VA = "0x85729C")]
	public void setKey(string _key)
	{
	}

	[Token(Token = "0x6000227")]
	[Address(RVA = "0x8574D4", Offset = "0x8574D4", VA = "0x8574D4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000228")]
	[Address(RVA = "0x857530", Offset = "0x857530", VA = "0x857530")]
	public ZuiColor()
	{
	}
}
[Token(Token = "0x2000046")]
public class ZuiColorBoss : MonoBehaviour
{
	[Token(Token = "0x40002D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ColorPrefs colorPrefs;

	[Token(Token = "0x40002DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	internal static ZuiColorBoss I;

	[Token(Token = "0x40002DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Dictionary<string, int> dic;

	[Token(Token = "0x6000229")]
	[Address(RVA = "0x857538", Offset = "0x857538", VA = "0x857538")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600022A")]
	[Address(RVA = "0x85753C", Offset = "0x85753C", VA = "0x85753C")]
	public void init()
	{
	}

	[Token(Token = "0x600022B")]
	[Address(RVA = "0x857314", Offset = "0x857314", VA = "0x857314")]
	public void apply(ZuiColor v)
	{
	}

	[Token(Token = "0x600022C")]
	[Address(RVA = "0x85771C", Offset = "0x85771C", VA = "0x85771C")]
	public Color getByIndex(int _index)
	{
		return default(Color);
	}

	[Token(Token = "0x600022D")]
	[Address(RVA = "0x8577A4", Offset = "0x8577A4", VA = "0x8577A4")]
	public int getIndex(string _name)
	{
		return default(int);
	}

	[Token(Token = "0x600022E")]
	[Address(RVA = "0x857630", Offset = "0x857630", VA = "0x857630")]
	public Color getByName(string _name)
	{
		return default(Color);
	}

	[Token(Token = "0x600022F")]
	[Address(RVA = "0x857820", Offset = "0x857820", VA = "0x857820")]
	public ZuiColorBoss()
	{
	}
}
[Token(Token = "0x2000047")]
public class ZuiColorButton : MonoBehaviour
{
	[Token(Token = "0x40002DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string on;

	[Token(Token = "0x40002DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string off;

	[Token(Token = "0x6000230")]
	[Address(RVA = "0x8578A4", Offset = "0x8578A4", VA = "0x8578A4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000231")]
	[Address(RVA = "0x857A74", Offset = "0x857A74", VA = "0x857A74")]
	public ZuiColorButton()
	{
	}
}
[Token(Token = "0x2000048")]
public class ZuiSlider : MonoBehaviour
{
	[Token(Token = "0x20001DB")]
	public delegate void OnEditStart();

	[Token(Token = "0x20001DC")]
	public delegate void OnValueChanges(float v);

	[Token(Token = "0x20001DD")]
	public struct Setup
	{
		[Token(Token = "0x4000D54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float start;

		[Token(Token = "0x4000D55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float min;

		[Token(Token = "0x4000D56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float max;

		[Token(Token = "0x4000D57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public bool integer;

		[Token(Token = "0x6000D5E")]
		[Address(RVA = "0x3FC81C", Offset = "0x3FC81C", VA = "0x3FC81C")]
		public Setup(float _min, float _max)
		{
		}
	}

	[Token(Token = "0x40002DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject container;

	[Token(Token = "0x40002DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject knob;

	[Token(Token = "0x40002E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject filler;

	[Token(Token = "0x40002E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Setup setup;

	[Token(Token = "0x40002E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float fraction;

	[Token(Token = "0x40002E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private Vector2 mouseStart;

	[Token(Token = "0x40002E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private bool dragging;

	[Token(Token = "0x40002E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float startFraction;

	[Token(Token = "0x40002E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private float returnValue;

	[Token(Token = "0x40002E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private OnEditStart onEditStart;

	[Token(Token = "0x40002E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private OnValueChanges onValueChanged;

	[Token(Token = "0x40002E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Vector3[] corners;

	[Token(Token = "0x6000232")]
	[Address(RVA = "0x857A7C", Offset = "0x857A7C", VA = "0x857A7C")]
	public void setOnEditStart(OnEditStart _onEditStart)
	{
	}

	[Token(Token = "0x6000233")]
	[Address(RVA = "0x857A84", Offset = "0x857A84", VA = "0x857A84")]
	public void setOnValueChanged(OnValueChanges _onValueChanged)
	{
	}

	[Token(Token = "0x6000234")]
	[Address(RVA = "0x857A8C", Offset = "0x857A8C", VA = "0x857A8C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000235")]
	[Address(RVA = "0x857ECC", Offset = "0x857ECC", VA = "0x857ECC")]
	public void eventDown(BaseEventData bd)
	{
	}

	[Token(Token = "0x6000236")]
	[Address(RVA = "0x857ED0", Offset = "0x857ED0", VA = "0x857ED0")]
	public void eventUp(BaseEventData bd)
	{
	}

	[Token(Token = "0x6000237")]
	[Address(RVA = "0x857ED4", Offset = "0x857ED4", VA = "0x857ED4")]
	public void init(Setup _setup)
	{
	}

	[Token(Token = "0x6000238")]
	[Address(RVA = "0x857EFC", Offset = "0x857EFC", VA = "0x857EFC")]
	public bool isDragging()
	{
		return default(bool);
	}

	[Token(Token = "0x6000239")]
	[Address(RVA = "0x857F04", Offset = "0x857F04", VA = "0x857F04")]
	public void setValue(float _value)
	{
	}

	[Token(Token = "0x600023A")]
	[Address(RVA = "0x857F2C", Offset = "0x857F2C", VA = "0x857F2C")]
	public float getValue()
	{
		return default(float);
	}

	[Token(Token = "0x600023B")]
	[Address(RVA = "0x857F34", Offset = "0x857F34", VA = "0x857F34")]
	private void Update()
	{
	}

	[Token(Token = "0x600023C")]
	[Address(RVA = "0x8585C4", Offset = "0x8585C4", VA = "0x8585C4")]
	public void dragStart(BaseEventData bd)
	{
	}

	[Token(Token = "0x600023D")]
	[Address(RVA = "0x8581E8", Offset = "0x8581E8", VA = "0x8581E8")]
	private Vector2 getPointerCrossingFraction()
	{
		return default(Vector2);
	}

	[Token(Token = "0x600023E")]
	[Address(RVA = "0x8586C8", Offset = "0x8586C8", VA = "0x8586C8")]
	private float getPointerFraction()
	{
		return default(float);
	}

	[Token(Token = "0x600023F")]
	[Address(RVA = "0x8586E0", Offset = "0x8586E0", VA = "0x8586E0")]
	public void dragContinue(BaseEventData bd)
	{
	}

	[Token(Token = "0x6000240")]
	[Address(RVA = "0x858848", Offset = "0x858848", VA = "0x858848")]
	public void dragEnd(BaseEventData bd)
	{
	}

	[Token(Token = "0x6000241")]
	[Address(RVA = "0x8588C8", Offset = "0x8588C8", VA = "0x8588C8")]
	public ZuiSlider()
	{
	}

	[Token(Token = "0x6000242")]
	[Address(RVA = "0x85895C", Offset = "0x85895C", VA = "0x85895C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4424F8", Offset = "0x4424F8")]
	private void <Awake>b__14_0(BaseEventData data)
	{
	}

	[Token(Token = "0x6000243")]
	[Address(RVA = "0x858960", Offset = "0x858960", VA = "0x858960")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x442508", Offset = "0x442508")]
	private void <Awake>b__14_1(BaseEventData data)
	{
	}

	[Token(Token = "0x6000244")]
	[Address(RVA = "0x858964", Offset = "0x858964", VA = "0x858964")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x442518", Offset = "0x442518")]
	private void <Awake>b__14_2(BaseEventData data)
	{
	}

	[Token(Token = "0x6000245")]
	[Address(RVA = "0x858968", Offset = "0x858968", VA = "0x858968")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x442528", Offset = "0x442528")]
	private void <Awake>b__14_3(BaseEventData data)
	{
	}

	[Token(Token = "0x6000246")]
	[Address(RVA = "0x85896C", Offset = "0x85896C", VA = "0x85896C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x442538", Offset = "0x442538")]
	private void <Awake>b__14_4(BaseEventData data)
	{
	}
}
[Token(Token = "0x2000049")]
public class ZuiTextSizer : MonoBehaviour
{
	[Token(Token = "0x40002EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ZuiAreaBoss.Elements element;

	[Token(Token = "0x40002EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float size;

	[Token(Token = "0x6000247")]
	[Address(RVA = "0x858970", Offset = "0x858970", VA = "0x858970")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000248")]
	[Address(RVA = "0x858A80", Offset = "0x858A80", VA = "0x858A80")]
	public ZuiTextSizer()
	{
	}
}
[Token(Token = "0x200004A")]
public static class ZuiTools
{
	[Token(Token = "0x20001DE")]
	public struct PlaneRange
	{
		[Token(Token = "0x4000D58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float width;

		[Token(Token = "0x4000D59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float height;

		[Token(Token = "0x4000D5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Vector3 pos;

		[Token(Token = "0x4000D5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public Vector3 x;

		[Token(Token = "0x4000D5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Vector3 y;

		[Token(Token = "0x4000D5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public Vector3 z;
	}

	[Token(Token = "0x40002EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Vector3[] planeCorners;

	[Token(Token = "0x6000249")]
	[Address(RVA = "0x858A94", Offset = "0x858A94", VA = "0x858A94")]
	public static bool isOverCamera(Vector2 p, Camera cam)
	{
		return default(bool);
	}

	[Token(Token = "0x600024A")]
	[Address(RVA = "0x858B30", Offset = "0x858B30", VA = "0x858B30")]
	public static void setActive(GameObject go, bool _active)
	{
	}

	[Token(Token = "0x600024B")]
	[Address(RVA = "0x858BE4", Offset = "0x858BE4", VA = "0x858BE4")]
	public static void setActive(MonoBehaviour mo, bool _active)
	{
	}

	[Token(Token = "0x600024C")]
	[Address(RVA = "0x858CC0", Offset = "0x858CC0", VA = "0x858CC0")]
	public static void setRange(GameObject go, Vector2 r0, Vector2 r1)
	{
	}

	[Token(Token = "0x600024D")]
	[Address(RVA = "0x858564", Offset = "0x858564", VA = "0x858564")]
	public static void setRange(RectTransform rt, Vector2 r0, Vector2 r1)
	{
	}

	[Token(Token = "0x600024E")]
	[Address(RVA = "0x858D80", Offset = "0x858D80", VA = "0x858D80")]
	public static void getRange(GameObject go, out Vector2 _min, out Vector2 _max)
	{
	}

	[Token(Token = "0x600024F")]
	[Address(RVA = "0x858F60", Offset = "0x858F60", VA = "0x858F60")]
	public static PlaneRange getPlaneRange(GameObject go)
	{
		return default(PlaneRange);
	}

	[Token(Token = "0x6000250")]
	[Address(RVA = "0x858E28", Offset = "0x858E28", VA = "0x858E28")]
	public static void getRange(RectTransform t, out Vector2 _min, out Vector2 _max)
	{
	}
}
[Token(Token = "0x200004B")]
public class ZuiWord : MonoBehaviour
{
	[Token(Token = "0x40002ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string key;

	[Token(Token = "0x40002EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	internal LinkedListNode<ZuiWord> link;

	[Token(Token = "0x6000252")]
	[Address(RVA = "0x859268", Offset = "0x859268", VA = "0x859268")]
	public void setKey(string _key)
	{
	}

	[Token(Token = "0x6000253")]
	[Address(RVA = "0x8592E8", Offset = "0x8592E8", VA = "0x8592E8")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000254")]
	[Address(RVA = "0x85939C", Offset = "0x85939C", VA = "0x85939C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000255")]
	[Address(RVA = "0x859400", Offset = "0x859400", VA = "0x859400")]
	public ZuiWord()
	{
	}
}
[Token(Token = "0x200004C")]
public class BallInfo : ScriptableObject
{
	[Serializable]
	[Token(Token = "0x20001DF")]
	public class RenderInfo
	{
		[Token(Token = "0x4000D5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public BBallType type;

		[Token(Token = "0x4000D5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Texture texture;

		[Token(Token = "0x4000D60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Texture billboard;

		[Token(Token = "0x4000D61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Color trail;

		[Token(Token = "0x6000D5F")]
		[Address(RVA = "0x85A9B0", Offset = "0x85A9B0", VA = "0x85A9B0")]
		public RenderInfo()
		{
		}
	}

	[Token(Token = "0x40002EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public RenderInfo[] balls;

	[Token(Token = "0x6000256")]
	[Address(RVA = "0x91F9A8", Offset = "0x91F9A8", VA = "0x91F9A8")]
	public BallInfo()
	{
	}
}
[Token(Token = "0x200004D")]
public class ButtonClick : MonoBehaviour
{
	[Token(Token = "0x40002F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool useColorHighlighting;

	[Token(Token = "0x40002F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Button button;

	[Token(Token = "0x40002F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Image image;

	[Token(Token = "0x40002F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Color hi;

	[Token(Token = "0x40002F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Color lo;

	[Token(Token = "0x40002F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool addedTriggers;

	[Token(Token = "0x6000257")]
	[Address(RVA = "0x922548", Offset = "0x922548", VA = "0x922548")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000258")]
	[Address(RVA = "0x92296C", Offset = "0x92296C", VA = "0x92296C")]
	private void click()
	{
	}

	[Token(Token = "0x6000259")]
	[Address(RVA = "0x922994", Offset = "0x922994", VA = "0x922994")]
	private void onEnter()
	{
	}

	[Token(Token = "0x600025A")]
	[Address(RVA = "0x922A3C", Offset = "0x922A3C", VA = "0x922A3C")]
	private void onExit()
	{
	}

	[Token(Token = "0x600025B")]
	[Address(RVA = "0x922AE4", Offset = "0x922AE4", VA = "0x922AE4")]
	public ButtonClick()
	{
	}

	[Token(Token = "0x600025C")]
	[Address(RVA = "0x922AF4", Offset = "0x922AF4", VA = "0x922AF4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x442548", Offset = "0x442548")]
	private void <OnEnable>b__6_0(BaseEventData <p0>)
	{
	}

	[Token(Token = "0x600025D")]
	[Address(RVA = "0x922AF8", Offset = "0x922AF8", VA = "0x922AF8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x442558", Offset = "0x442558")]
	private void <OnEnable>b__6_1(BaseEventData <p0>)
	{
	}

	[Token(Token = "0x600025E")]
	[Address(RVA = "0x922AFC", Offset = "0x922AFC", VA = "0x922AFC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x442568", Offset = "0x442568")]
	private void <OnEnable>b__6_2(BaseEventData <p0>)
	{
	}
}
[Token(Token = "0x200004E")]
public class ButtonContinuous : Selectable
{
	[Token(Token = "0x40002F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public string onColor;

	[Token(Token = "0x40002F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public string offColor;

	[Token(Token = "0x40002F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	public Image back;

	[Token(Token = "0x40002F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	private bool on;

	[Token(Token = "0x40002FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x111")]
	private bool down;

	[Token(Token = "0x40002FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x112")]
	private bool lastDown;

	[Token(Token = "0x40002FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
	private Color _onColor;

	[Token(Token = "0x40002FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
	private Color _offColor;

	[Token(Token = "0x600025F")]
	[Address(RVA = "0x922B00", Offset = "0x922B00", VA = "0x922B00")]
	public bool isDown()
	{
		return default(bool);
	}

	[Token(Token = "0x6000260")]
	[Address(RVA = "0x922B08", Offset = "0x922B08", VA = "0x922B08")]
	public bool isClick()
	{
		return default(bool);
	}

	[Token(Token = "0x6000261")]
	[Address(RVA = "0x922B28", Offset = "0x922B28", VA = "0x922B28")]
	public bool isRelease()
	{
		return default(bool);
	}

	[Token(Token = "0x6000262")]
	[Address(RVA = "0x922B48", Offset = "0x922B48", VA = "0x922B48")]
	private void Update()
	{
	}

	[Token(Token = "0x6000263")]
	[Address(RVA = "0x922B5C", Offset = "0x922B5C", VA = "0x922B5C", Slot = "5")]
	protected override void OnEnable()
	{
	}

	[Token(Token = "0x6000264")]
	[Address(RVA = "0x922C84", Offset = "0x922C84", VA = "0x922C84", Slot = "7")]
	protected override void OnDisable()
	{
	}

	[Token(Token = "0x6000265")]
	[Address(RVA = "0x922CAC", Offset = "0x922CAC", VA = "0x922CAC", Slot = "34")]
	public override void OnPointerEnter(PointerEventData eventData)
	{
	}

	[Token(Token = "0x6000266")]
	[Address(RVA = "0x922D74", Offset = "0x922D74", VA = "0x922D74", Slot = "35")]
	public override void OnPointerExit(PointerEventData eventData)
	{
	}

	[Token(Token = "0x6000267")]
	[Address(RVA = "0x922E3C", Offset = "0x922E3C", VA = "0x922E3C", Slot = "32")]
	public override void OnPointerDown(PointerEventData eventData)
	{
	}

	[Token(Token = "0x6000268")]
	[Address(RVA = "0x922E68", Offset = "0x922E68", VA = "0x922E68", Slot = "33")]
	public override void OnPointerUp(PointerEventData eventData)
	{
	}

	[Token(Token = "0x6000269")]
	[Address(RVA = "0x922E90", Offset = "0x922E90", VA = "0x922E90")]
	public ButtonContinuous()
	{
	}
}
[Token(Token = "0x200004F")]
public class CTArc : MonoBehaviour
{
	[Token(Token = "0x40002FE")]
	private const int detail = 20;

	[Token(Token = "0x40002FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Material mat;

	[Token(Token = "0x4000300")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Mesh mesh;

	[Token(Token = "0x4000301")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool initted;

	[Token(Token = "0x4000302")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float zOffset;

	[Token(Token = "0x4000303")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float boundingRadius;

	[Token(Token = "0x4000304")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private RPolygon polygon;

	[Token(Token = "0x4000305")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private RenderTexture currentRT;

	[Token(Token = "0x600026A")]
	[Address(RVA = "0x923CF0", Offset = "0x923CF0", VA = "0x923CF0")]
	private void init()
	{
	}

	[Token(Token = "0x600026B")]
	[Address(RVA = "0x924034", Offset = "0x924034", VA = "0x924034")]
	public void setArea(Color _color, Color _color2, float _z, float _boundingRadius, RPolygon _tableArea)
	{
	}

	[Token(Token = "0x600026C")]
	[Address(RVA = "0x924150", Offset = "0x924150", VA = "0x924150")]
	public void set(Vector2 _center, float _radius, float _angle0, float _angle1, float _width)
	{
	}

	[Token(Token = "0x600026D")]
	[Address(RVA = "0x92447C", Offset = "0x92447C", VA = "0x92447C")]
	public CTArc()
	{
	}
}
[Token(Token = "0x2000050")]
public class CTLine : MonoBehaviour
{
	[Token(Token = "0x4000306")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Material mat;

	[Token(Token = "0x4000307")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Mesh mesh;

	[Token(Token = "0x4000308")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool initted;

	[Token(Token = "0x4000309")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Vector3[] vertices;

	[Token(Token = "0x400030A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static int[] tris;

	[Token(Token = "0x400030B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float zOffset;

	[Token(Token = "0x400030C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float boundingRadius;

	[Token(Token = "0x400030D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private RPolygon polygon;

	[Token(Token = "0x400030E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private RenderTexture currentRT;

	[Token(Token = "0x600026E")]
	[Address(RVA = "0x924484", Offset = "0x924484", VA = "0x924484")]
	private void init()
	{
	}

	[Token(Token = "0x600026F")]
	[Address(RVA = "0x924688", Offset = "0x924688", VA = "0x924688")]
	public void setArea(Color _color, Color _color2, float _z, float _boundingRadius, RPolygon _tableArea)
	{
	}

	[Token(Token = "0x6000270")]
	[Address(RVA = "0x9247A4", Offset = "0x9247A4", VA = "0x9247A4")]
	public void set(Vector2 _start, Vector2 _end, float _width)
	{
	}

	[Token(Token = "0x6000271")]
	[Address(RVA = "0x924A88", Offset = "0x924A88", VA = "0x924A88")]
	public CTLine()
	{
	}
}
[Token(Token = "0x2000051")]
internal struct CameraVolume
{
	[Token(Token = "0x400030F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private Transform t;

	[Token(Token = "0x4000310")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private float fieldY;

	[Token(Token = "0x4000311")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private float fieldX;

	[Token(Token = "0x6000273")]
	[Address(RVA = "0x402288", Offset = "0x402288", VA = "0x402288")]
	public CameraVolume(Camera cam)
	{
	}

	[Token(Token = "0x6000274")]
	[Address(RVA = "0x402290", Offset = "0x402290", VA = "0x402290")]
	public bool isInside(Vector3 vWorld)
	{
		return default(bool);
	}
}
[Token(Token = "0x2000052")]
public class CanvasSwitcher : MonoBehaviour
{
	[Token(Token = "0x4000312")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool isHud;

	[Token(Token = "0x6000275")]
	[Address(RVA = "0x9289E4", Offset = "0x9289E4", VA = "0x9289E4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000276")]
	[Address(RVA = "0x928A64", Offset = "0x928A64", VA = "0x928A64")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000277")]
	[Address(RVA = "0x928AE4", Offset = "0x928AE4", VA = "0x928AE4")]
	public CanvasSwitcher()
	{
	}
}
[Token(Token = "0x2000053")]
public class ColorPrefs : ScriptableObject
{
	[Serializable]
	[Token(Token = "0x20001E0")]
	public class Entry
	{
		[Token(Token = "0x4000D62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string name;

		[Token(Token = "0x4000D63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Color color;

		[Token(Token = "0x6000D60")]
		[Address(RVA = "0x85CA58", Offset = "0x85CA58", VA = "0x85CA58")]
		public Entry()
		{
		}
	}

	[Token(Token = "0x4000313")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<Entry> entries;

	[Token(Token = "0x4000314")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Color badColor;

	[Token(Token = "0x6000278")]
	[Address(RVA = "0x92B424", Offset = "0x92B424", VA = "0x92B424")]
	public ColorPrefs()
	{
	}
}
[Token(Token = "0x2000054")]
public class Coordinator : MonoBehaviour, INetBoss
{
	[Token(Token = "0x6000279")]
	[Address(RVA = "0x92B7D8", Offset = "0x92B7D8", VA = "0x92B7D8", Slot = "6")]
	public bool nb_isInRoom()
	{
		return default(bool);
	}

	[Token(Token = "0x600027A")]
	[Address(RVA = "0x92B7E0", Offset = "0x92B7E0", VA = "0x92B7E0", Slot = "4")]
	public void nb_start()
	{
	}

	[Token(Token = "0x600027B")]
	[Address(RVA = "0x92B7E4", Offset = "0x92B7E4", VA = "0x92B7E4", Slot = "5")]
	public void nb_stop()
	{
	}

	[Token(Token = "0x600027C")]
	[Address(RVA = "0x92B7E8", Offset = "0x92B7E8", VA = "0x92B7E8", Slot = "7")]
	public void nb_leaveRoom()
	{
	}

	[Token(Token = "0x600027D")]
	[Address(RVA = "0x92B7EC", Offset = "0x92B7EC", VA = "0x92B7EC", Slot = "8")]
	public void nb_createRoom(string roomName)
	{
	}

	[Token(Token = "0x600027E")]
	[Address(RVA = "0x92B7F0", Offset = "0x92B7F0", VA = "0x92B7F0", Slot = "9")]
	public void nb_joinRoom(string roomName)
	{
	}

	[Token(Token = "0x600027F")]
	[Address(RVA = "0x92B7F4", Offset = "0x92B7F4", VA = "0x92B7F4", Slot = "10")]
	public void nb_sendMessageToOthers(MyMessage _message)
	{
	}

	[Token(Token = "0x6000280")]
	[Address(RVA = "0x92B7F8", Offset = "0x92B7F8", VA = "0x92B7F8", Slot = "11")]
	public void nb_setListener(ModeNet state)
	{
	}

	[Token(Token = "0x6000281")]
	[Address(RVA = "0x92B7FC", Offset = "0x92B7FC", VA = "0x92B7FC")]
	public Coordinator()
	{
	}
}
[Token(Token = "0x2000055")]
public class Crowd : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x20001E1")]
	public struct Fade
	{
		[Token(Token = "0x4000D64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Transform center;

		[Token(Token = "0x4000D65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Transform start;

		[Token(Token = "0x4000D66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Transform end;

		[Token(Token = "0x4000D67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Color color;
	}

	[Serializable]
	[Token(Token = "0x20001E2")]
	public struct Slot
	{
		[Token(Token = "0x4000D68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Type type;

		[Token(Token = "0x4000D69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Transform item;
	}

	[Token(Token = "0x20001E3")]
	public enum Type
	{
		[Token(Token = "0x4000D6B")]
		benches,
		[Token(Token = "0x4000D6C")]
		seats
	}

	[Token(Token = "0x20001E4")]
	private class BasicMesh
	{
		[Token(Token = "0x4000D6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public List<Vector3> verts;

		[Token(Token = "0x4000D6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<int> faces;

		[Token(Token = "0x4000D6F")]
		private const float weldDistance = 0.001f;

		[Token(Token = "0x6000D61")]
		[Address(RVA = "0x85CA8C", Offset = "0x85CA8C", VA = "0x85CA8C")]
		public BasicMesh(Mesh from)
		{
		}

		[Token(Token = "0x6000D62")]
		[Address(RVA = "0x85CE58", Offset = "0x85CE58", VA = "0x85CE58")]
		public void applyTransform(Transform t)
		{
		}
	}

	[Token(Token = "0x20001E5")]
	private struct Edge
	{
		[Token(Token = "0x4000D70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int i0;

		[Token(Token = "0x4000D71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public int i1;

		[Token(Token = "0x6000D63")]
		[Address(RVA = "0x3FCAA0", Offset = "0x3FCAA0", VA = "0x3FCAA0")]
		public void set(int a0, int a1)
		{
		}
	}

	[Token(Token = "0x20001E6")]
	private class Bench
	{
		[Token(Token = "0x4000D72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Type type;

		[Token(Token = "0x4000D73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<Vector3> points;

		[Token(Token = "0x4000D74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int sitters;

		[Token(Token = "0x4000D75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private int iseg;

		[Token(Token = "0x4000D76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float distanceMoved;

		[Token(Token = "0x4000D77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float nextPointDistance;

		[Token(Token = "0x4000D78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float lastPointDistance;

		[Token(Token = "0x4000D79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float totalLength;

		[Token(Token = "0x6000D64")]
		[Address(RVA = "0x85CF3C", Offset = "0x85CF3C", VA = "0x85CF3C")]
		public float getLength()
		{
			return default(float);
		}

		[Token(Token = "0x6000D65")]
		[Address(RVA = "0x85CFD4", Offset = "0x85CFD4", VA = "0x85CFD4")]
		public float getSegmentLength(int index)
		{
			return default(float);
		}

		[Token(Token = "0x6000D66")]
		[Address(RVA = "0x85D0C8", Offset = "0x85D0C8", VA = "0x85D0C8")]
		public void startTravel()
		{
		}

		[Token(Token = "0x6000D67")]
		[Address(RVA = "0x85D104", Offset = "0x85D104", VA = "0x85D104")]
		public void move(float d)
		{
		}

		[Token(Token = "0x6000D68")]
		[Address(RVA = "0x85D26C", Offset = "0x85D26C", VA = "0x85D26C")]
		public Vector3 getPosition()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000D69")]
		[Address(RVA = "0x85D37C", Offset = "0x85D37C", VA = "0x85D37C")]
		public Vector3 getZ()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000D6A")]
		[Address(RVA = "0x85D480", Offset = "0x85D480", VA = "0x85D480")]
		public Bench()
		{
		}
	}

	[Token(Token = "0x4000315")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string layer;

	[Token(Token = "0x4000316")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform benches;

	[Token(Token = "0x4000317")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public List<Slot> seatings;

	[Token(Token = "0x4000318")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Fade fade;

	[Token(Token = "0x4000319")]
	private const float personalSpace = 0.75f;

	[Token(Token = "0x400031A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float fade0;

	[Token(Token = "0x400031B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private float fade1;

	[Token(Token = "0x400031C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Crowd I;

	[Token(Token = "0x6000282")]
	[Address(RVA = "0x92BA40", Offset = "0x92BA40", VA = "0x92BA40")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000283")]
	[Address(RVA = "0x92BC78", Offset = "0x92BC78", VA = "0x92BC78")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000284")]
	[Address(RVA = "0x92BCCC", Offset = "0x92BCCC", VA = "0x92BCCC")]
	private Color getFade(Vector3 position)
	{
		return default(Color);
	}

	[Token(Token = "0x6000285")]
	[Address(RVA = "0x92BD94", Offset = "0x92BD94", VA = "0x92BD94")]
	public void setCrowdLevel(int level)
	{
	}

	[Token(Token = "0x6000286")]
	[Address(RVA = "0x92D488", Offset = "0x92D488", VA = "0x92D488")]
	private List<float> randomPartion(float len, int count)
	{
		return null;
	}

	[Token(Token = "0x6000287")]
	[Address(RVA = "0x92CA6C", Offset = "0x92CA6C", VA = "0x92CA6C")]
	private void addBenchEdges(List<Bench> benchEdges, List<Edge> _edges, BasicMesh m, Type _type)
	{
	}

	[Token(Token = "0x6000288")]
	[Address(RVA = "0x92D7DC", Offset = "0x92D7DC", VA = "0x92D7DC")]
	public Crowd()
	{
	}
}
[Token(Token = "0x2000056")]
public class CrowdController : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x20001E7")]
	public class Sprites
	{
		[Token(Token = "0x4000D7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Sprite waypoint;

		[Token(Token = "0x4000D7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Sprite blank;

		[Token(Token = "0x6000D6B")]
		[Address(RVA = "0x85D520", Offset = "0x85D520", VA = "0x85D520")]
		public Sprites()
		{
		}
	}

	[Token(Token = "0x20001E8")]
	public class Person
	{
		[Token(Token = "0x4000D7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal GameObject go;

		[Token(Token = "0x4000D7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal MaterialPropertyBlock propertyBlock;

		[Token(Token = "0x4000D7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal MeshRenderer mr;

		[Token(Token = "0x4000D7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		internal Vector2 size;

		[Token(Token = "0x4000D80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		internal ZmRangeVector2 texturePixelArea;

		[Token(Token = "0x4000D81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		internal Vector2 drawOffset;

		[Token(Token = "0x6000D6C")]
		[Address(RVA = "0x85D518", Offset = "0x85D518", VA = "0x85D518")]
		public Person()
		{
		}
	}

	[Token(Token = "0x400031D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector2 pixelSize;

	[Token(Token = "0x400031E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Vector2 worldSize;

	[Token(Token = "0x400031F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject spritePrefab;

	[Token(Token = "0x4000320")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject crowdPrefab;

	[Token(Token = "0x4000321")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public List<Sprite> sprites;

	[Token(Token = "0x4000322")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static CrowdController I;

	[Token(Token = "0x4000323")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private int idColor;

	[Token(Token = "0x4000324")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Material spriteMaterial;

	[Token(Token = "0x4000325")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private List<Person> people;

	[Token(Token = "0x4000326")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private List<Vector3> crowdVerts;

	[Token(Token = "0x4000327")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private List<Vector2> crowdUvs;

	[Token(Token = "0x4000328")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private List<Color32> crowdColors;

	[Token(Token = "0x4000329")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private List<int> crowdTris;

	[Token(Token = "0x6000289")]
	[Address(RVA = "0x92CF30", Offset = "0x92CF30", VA = "0x92CF30")]
	public void startCrowd()
	{
	}

	[Token(Token = "0x600028A")]
	[Address(RVA = "0x92D5E4", Offset = "0x92D5E4", VA = "0x92D5E4")]
	public void endCrowd()
	{
	}

	[Token(Token = "0x600028B")]
	[Address(RVA = "0x92CFF0", Offset = "0x92CFF0", VA = "0x92CFF0")]
	public void addPerson(Vector3 _position, Color _color, Vector3 z, string layer)
	{
	}

	[Token(Token = "0x600028C")]
	[Address(RVA = "0x92D82C", Offset = "0x92D82C", VA = "0x92D82C")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600028D")]
	[Address(RVA = "0x92D8DC", Offset = "0x92D8DC", VA = "0x92D8DC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600028E")]
	[Address(RVA = "0x92DB90", Offset = "0x92DB90", VA = "0x92DB90")]
	public void setSprite(Person _icon, Sprite _sprite)
	{
	}

	[Token(Token = "0x600028F")]
	[Address(RVA = "0x92DCBC", Offset = "0x92DCBC", VA = "0x92DCBC")]
	public Person makeIcon(Sprite _sprite, string _layer)
	{
		return null;
	}

	[Token(Token = "0x6000290")]
	[Address(RVA = "0x92BABC", Offset = "0x92BABC", VA = "0x92BABC")]
	public void freePeople()
	{
	}

	[Token(Token = "0x6000291")]
	[Address(RVA = "0x92DF34", Offset = "0x92DF34", VA = "0x92DF34")]
	public void OnDisable()
	{
	}

	[Token(Token = "0x6000292")]
	[Address(RVA = "0x92DF38", Offset = "0x92DF38", VA = "0x92DF38")]
	public void drawIcon(Person _icon, Vector3 _position, Color _color, Vector3 z)
	{
	}

	[Token(Token = "0x6000293")]
	[Address(RVA = "0x92D7E4", Offset = "0x92D7E4", VA = "0x92D7E4")]
	private void getXYTransform(out Vector2 worldOffset, out Vector2 scale, Vector2 spriteOffset, Vector2 spriteSizeCutout, Vector2 worldSize, Vector2 spriteSize)
	{
	}

	[Token(Token = "0x6000294")]
	[Address(RVA = "0x92E118", Offset = "0x92E118", VA = "0x92E118")]
	public CrowdController()
	{
	}
}
[Token(Token = "0x2000057")]
public class EnterIp : MonoBehaviour
{
	[Token(Token = "0x20001E9")]
	public enum Type
	{
		[Token(Token = "0x4000D83")]
		port,
		[Token(Token = "0x4000D84")]
		ipAndPort
	}

	[Token(Token = "0x20001EA")]
	public enum RetCode
	{
		[Token(Token = "0x4000D86")]
		busy,
		[Token(Token = "0x4000D87")]
		okay,
		[Token(Token = "0x4000D88")]
		cancel
	}

	[Token(Token = "0x20001EB")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x43F428", Offset = "0x43F428")]
	private sealed class <>c__DisplayClass16_0
	{
		[Token(Token = "0x4000D89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public EnterIp <>4__this;

		[Token(Token = "0x4000D8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public InputField inp;

		[Token(Token = "0x6000D6D")]
		[Address(RVA = "0x85E150", Offset = "0x85E150", VA = "0x85E150")]
		public <>c__DisplayClass16_0()
		{
		}

		[Token(Token = "0x6000D6E")]
		[Address(RVA = "0x85E158", Offset = "0x85E158", VA = "0x85E158")]
		internal void <initInputField>b__0()
		{
		}
	}

	[Token(Token = "0x400032A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public InputField port;

	[Token(Token = "0x400032B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public InputField ipAddress;

	[Token(Token = "0x400032C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject portGroup;

	[Token(Token = "0x400032D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject ipGroup;

	[Token(Token = "0x400032E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject vrKeypad;

	[Token(Token = "0x400032F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Text title;

	[Token(Token = "0x4000330")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Text message;

	[Token(Token = "0x4000331")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private List<Text> ipText;

	[Token(Token = "0x4000332")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool initted;

	[Token(Token = "0x4000333")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private GameObject currenInputField;

	[Token(Token = "0x4000334")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private RetCode retCode;

	[Token(Token = "0x4000335")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private Type type;

	[Token(Token = "0x4000336")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private bool vr;

	[Token(Token = "0x4000337")]
	private const int minPort = 1024;

	[Token(Token = "0x4000338")]
	private const int maxPort = 49151;

	[Token(Token = "0x6000295")]
	[Address(RVA = "0x74EBEC", Offset = "0x74EBEC", VA = "0x74EBEC")]
	private void init()
	{
	}

	[Token(Token = "0x6000296")]
	[Address(RVA = "0x74EC2C", Offset = "0x74EC2C", VA = "0x74EC2C")]
	private void initInputField(InputField inp)
	{
	}

	[Token(Token = "0x6000297")]
	[Address(RVA = "0x74EE64", Offset = "0x74EE64", VA = "0x74EE64")]
	private void setColor(GameObject go, Color c)
	{
	}

	[Token(Token = "0x6000298")]
	[Address(RVA = "0x74EEF0", Offset = "0x74EEF0", VA = "0x74EEF0")]
	private void setColor(InputField inp, Color c)
	{
	}

	[Token(Token = "0x6000299")]
	[Address(RVA = "0x74EFB4", Offset = "0x74EFB4", VA = "0x74EFB4")]
	private void setInputField(InputField inp, string s)
	{
	}

	[Token(Token = "0x600029A")]
	[Address(RVA = "0x74EFD4", Offset = "0x74EFD4", VA = "0x74EFD4")]
	public void buttonClick(GameObject newInputField)
	{
	}

	[Token(Token = "0x600029B")]
	[Address(RVA = "0x74F208", Offset = "0x74F208", VA = "0x74F208")]
	public void init(Type _type, string ip, string _port)
	{
	}

	[Token(Token = "0x600029C")]
	[Address(RVA = "0x74F650", Offset = "0x74F650", VA = "0x74F650")]
	public string getAddress()
	{
		return null;
	}

	[Token(Token = "0x600029D")]
	[Address(RVA = "0x74F1A0", Offset = "0x74F1A0", VA = "0x74F1A0")]
	public string removeCursor(string s)
	{
		return null;
	}

	[Token(Token = "0x600029E")]
	[Address(RVA = "0x74F66C", Offset = "0x74F66C", VA = "0x74F66C")]
	public string getPort()
	{
		return null;
	}

	[Token(Token = "0x600029F")]
	[Address(RVA = "0x74F688", Offset = "0x74F688", VA = "0x74F688")]
	private void Update()
	{
	}

	[Token(Token = "0x60002A0")]
	[Address(RVA = "0x74F9E8", Offset = "0x74F9E8", VA = "0x74F9E8")]
	public void buttonKeypad(GameObject digit)
	{
	}

	[Token(Token = "0x60002A1")]
	[Address(RVA = "0x74FB48", Offset = "0x74FB48", VA = "0x74FB48")]
	public RetCode getRetCode()
	{
		return default(RetCode);
	}

	[Token(Token = "0x60002A2")]
	[Address(RVA = "0x74F740", Offset = "0x74F740", VA = "0x74F740")]
	public void buttonOkay()
	{
	}

	[Token(Token = "0x60002A3")]
	[Address(RVA = "0x74F9DC", Offset = "0x74F9DC", VA = "0x74F9DC")]
	public void buttonCancel()
	{
	}

	[Token(Token = "0x60002A4")]
	[Address(RVA = "0x74FB50", Offset = "0x74FB50", VA = "0x74FB50")]
	public void buttonDefault()
	{
	}

	[Token(Token = "0x60002A5")]
	[Address(RVA = "0x74FBD0", Offset = "0x74FBD0", VA = "0x74FBD0")]
	public EnterIp()
	{
	}
}
[Token(Token = "0x2000058")]
public class ErrorPanel : MonoBehaviour
{
	[Token(Token = "0x20001EC")]
	public enum Ret
	{
		[Token(Token = "0x4000D8C")]
		none,
		[Token(Token = "0x4000D8D")]
		cancelled,
		[Token(Token = "0x4000D8E")]
		okayed
	}

	[Token(Token = "0x4000339")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Text statusMessage;

	[Token(Token = "0x400033A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Text title;

	[Token(Token = "0x400033B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Ret ret;

	[Token(Token = "0x60002A6")]
	[Address(RVA = "0x74FEEC", Offset = "0x74FEEC", VA = "0x74FEEC")]
	public bool isFinished()
	{
		return default(bool);
	}

	[Token(Token = "0x60002A7")]
	[Address(RVA = "0x74FEFC", Offset = "0x74FEFC", VA = "0x74FEFC")]
	public Ret getRet()
	{
		return default(Ret);
	}

	[Token(Token = "0x60002A8")]
	[Address(RVA = "0x74FF04", Offset = "0x74FF04", VA = "0x74FF04")]
	public void OnEnable()
	{
	}

	[Token(Token = "0x60002A9")]
	[Address(RVA = "0x74FF0C", Offset = "0x74FF0C", VA = "0x74FF0C")]
	public void setTitle(string _title)
	{
	}

	[Token(Token = "0x60002AA")]
	[Address(RVA = "0x74FF30", Offset = "0x74FF30", VA = "0x74FF30")]
	public void setMessage(string _message)
	{
	}

	[Token(Token = "0x60002AB")]
	[Address(RVA = "0x74FF54", Offset = "0x74FF54", VA = "0x74FF54")]
	public void Update()
	{
	}

	[Token(Token = "0x60002AC")]
	[Address(RVA = "0x75000C", Offset = "0x75000C", VA = "0x75000C")]
	public void buttonOkay()
	{
	}

	[Token(Token = "0x60002AD")]
	[Address(RVA = "0x750018", Offset = "0x750018", VA = "0x750018")]
	public ErrorPanel()
	{
	}
}
[Token(Token = "0x2000059")]
public class Fitter : MonoBehaviour
{
	[Token(Token = "0x400033C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private ZuiArea parent;

	[Token(Token = "0x400033D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private List<ZuiArea> areas;

	[Token(Token = "0x60002AE")]
	[Address(RVA = "0x750C98", Offset = "0x750C98", VA = "0x750C98")]
	private void Start()
	{
	}

	[Token(Token = "0x60002AF")]
	[Address(RVA = "0x751004", Offset = "0x751004", VA = "0x751004")]
	private void Update()
	{
	}

	[Token(Token = "0x60002B0")]
	[Address(RVA = "0x751180", Offset = "0x751180", VA = "0x751180")]
	public Fitter()
	{
	}
}
[Token(Token = "0x200005A")]
public class FloatingButtons : MonoBehaviour
{
	[Token(Token = "0x20001ED")]
	public class Item
	{
		[Token(Token = "0x4000D8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Vector3 position;

		[Token(Token = "0x6000D6F")]
		[Address(RVA = "0x85E620", Offset = "0x85E620", VA = "0x85E620")]
		public Item()
		{
		}
	}

	[Token(Token = "0x20001EE")]
	public delegate void OnSelect(int _index);

	[Token(Token = "0x400033E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float selectionScale;

	[Token(Token = "0x400033F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject template;

	[Token(Token = "0x4000340")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float buttonRadius;

	[Token(Token = "0x4000341")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float buttonHeight;

	[Token(Token = "0x4000342")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float size;

	[Token(Token = "0x4000343")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private OnSelect callback;

	[Token(Token = "0x4000344")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private List<Item> items;

	[Token(Token = "0x4000345")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private int currentSelection;

	[Token(Token = "0x4000346")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Material himat;

	[Token(Token = "0x4000347")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Material lomat;

	[Token(Token = "0x4000348")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private List<GameObject> buttons;

	[Token(Token = "0x4000349")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private bool visible;

	[Token(Token = "0x400034A")]
	private const bool forceOn = false;

	[Token(Token = "0x60002B1")]
	[Address(RVA = "0x751204", Offset = "0x751204", VA = "0x751204")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60002B2")]
	[Address(RVA = "0x751344", Offset = "0x751344", VA = "0x751344")]
	public void init(List<Item> _items, OnSelect _onSelect)
	{
	}

	[Token(Token = "0x60002B3")]
	[Address(RVA = "0x75185C", Offset = "0x75185C", VA = "0x75185C")]
	public void setVisible(bool _visible)
	{
	}

	[Token(Token = "0x60002B4")]
	[Address(RVA = "0x751868", Offset = "0x751868", VA = "0x751868")]
	private void Update()
	{
	}

	[Token(Token = "0x60002B5")]
	[Address(RVA = "0x751DE8", Offset = "0x751DE8", VA = "0x751DE8")]
	public FloatingButtons()
	{
	}
}
[Token(Token = "0x200005B")]
public class FloorMarker : MonoBehaviour
{
	[Token(Token = "0x400034B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Material skyBox;

	[Token(Token = "0x60002B6")]
	[Address(RVA = "0x751E80", Offset = "0x751E80", VA = "0x751E80")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60002B7")]
	[Address(RVA = "0x751E8C", Offset = "0x751E8C", VA = "0x751E8C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60002B8")]
	[Address(RVA = "0x751E98", Offset = "0x751E98", VA = "0x751E98")]
	public FloorMarker()
	{
	}
}
[Token(Token = "0x200005C")]
public class GamePosition
{
	[Token(Token = "0x400034C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public List<BSimBoss.LayoutPos> layout;

	[Token(Token = "0x400034D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public BBallType[] targetTypes;

	[Token(Token = "0x60002B9")]
	[Address(RVA = "0x7520C0", Offset = "0x7520C0", VA = "0x7520C0")]
	public static GamePosition read(StreamRW s)
	{
		return null;
	}

	[Token(Token = "0x60002BA")]
	[Address(RVA = "0x752388", Offset = "0x752388", VA = "0x752388")]
	public void write(StreamRW s)
	{
	}

	[Token(Token = "0x60002BB")]
	[Address(RVA = "0x752304", Offset = "0x752304", VA = "0x752304")]
	public GamePosition()
	{
	}
}
[Serializable]
[Token(Token = "0x200005D")]
public class GameSetup
{
	[Token(Token = "0x400034E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public CTable ctable;

	[Token(Token = "0x400034F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string rules;

	[Token(Token = "0x4000350")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string table;

	[Token(Token = "0x4000351")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string stadium;

	[Token(Token = "0x60002BC")]
	[Address(RVA = "0x752608", Offset = "0x752608", VA = "0x752608")]
	public string getStadium()
	{
		return null;
	}

	[Token(Token = "0x60002BD")]
	[Address(RVA = "0x7526BC", Offset = "0x7526BC", VA = "0x7526BC")]
	public string getTable()
	{
		return null;
	}

	[Token(Token = "0x60002BE")]
	[Address(RVA = "0x752770", Offset = "0x752770", VA = "0x752770")]
	public int getRules()
	{
		return default(int);
	}

	[Token(Token = "0x60002BF")]
	[Address(RVA = "0x752838", Offset = "0x752838", VA = "0x752838")]
	public void setRules(int _rules)
	{
	}

	[Token(Token = "0x60002C0")]
	[Address(RVA = "0x7528D4", Offset = "0x7528D4", VA = "0x7528D4")]
	public void write(StreamRW _stream)
	{
	}

	[Token(Token = "0x60002C1")]
	[Address(RVA = "0x752928", Offset = "0x752928", VA = "0x752928")]
	public static void read(out GameSetup ret, StreamRW _stream)
	{
	}

	[Token(Token = "0x60002C2")]
	[Address(RVA = "0x7529E4", Offset = "0x7529E4", VA = "0x7529E4")]
	public GameSetup()
	{
	}
}
[Token(Token = "0x200005E")]
public enum MessageID
{
	[Token(Token = "0x4000353")]
	none,
	[Token(Token = "0x4000354")]
	loadScene,
	[Token(Token = "0x4000355")]
	loadSceneDone,
	[Token(Token = "0x4000356")]
	playAnim,
	[Token(Token = "0x4000357")]
	playAnimDone,
	[Token(Token = "0x4000358")]
	clientAnim,
	[Token(Token = "0x4000359")]
	setLayout,
	[Token(Token = "0x400035A")]
	setPlayerData,
	[Token(Token = "0x400035B")]
	clientPlayerReady,
	[Token(Token = "0x400035C")]
	raiseCurtain,
	[Token(Token = "0x400035D")]
	requestName,
	[Token(Token = "0x400035E")]
	setOpponentName,
	[Token(Token = "0x400035F")]
	areYouReady,
	[Token(Token = "0x4000360")]
	iAmReady,
	[Token(Token = "0x4000361")]
	request,
	[Token(Token = "0x4000362")]
	setPathPreviewType,
	[Token(Token = "0x4000363")]
	setCrowdSize,
	[Token(Token = "0x4000364")]
	showMessage,
	[Token(Token = "0x4000365")]
	messageShown,
	[Token(Token = "0x4000366")]
	response
}
[Token(Token = "0x200005F")]
public struct MyMessage
{
	[Token(Token = "0x4000367")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public MessageID id;

	[Token(Token = "0x4000368")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public byte[] data;

	[Token(Token = "0x60002C3")]
	[Address(RVA = "0x3F9B70", Offset = "0x3F9B70", VA = "0x3F9B70")]
	public MyMessage(MessageID _id, byte[] _data)
	{
	}
}
[Serializable]
[Token(Token = "0x2000060")]
public class GameInit
{
	[Token(Token = "0x4000369")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string rules;

	[Token(Token = "0x400036A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string table;

	[Token(Token = "0x400036B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string stadium;

	[Token(Token = "0x60002C4")]
	[Address(RVA = "0x752044", Offset = "0x752044", VA = "0x752044")]
	public GameInit()
	{
	}
}
[Token(Token = "0x2000061")]
public class GlobalData : MonoBehaviour
{
	[Token(Token = "0x400036C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameInit gameInit;

	[Token(Token = "0x400036D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private List<GameObject> killList;

	[Token(Token = "0x400036E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static GlobalData original;

	[Token(Token = "0x60002C5")]
	[Address(RVA = "0x752A60", Offset = "0x752A60", VA = "0x752A60")]
	private void Awake()
	{
	}

	[Token(Token = "0x60002C6")]
	[Address(RVA = "0x752C68", Offset = "0x752C68", VA = "0x752C68")]
	private void Update()
	{
	}

	[Token(Token = "0x60002C7")]
	[Address(RVA = "0x752C6C", Offset = "0x752C6C", VA = "0x752C6C")]
	private void clearKillList()
	{
	}

	[Token(Token = "0x60002C8")]
	[Address(RVA = "0x752DCC", Offset = "0x752DCC", VA = "0x752DCC")]
	private void OnSceneLoaded(Scene scene, LoadSceneMode mode)
	{
	}

	[Token(Token = "0x60002C9")]
	[Address(RVA = "0x752E84", Offset = "0x752E84", VA = "0x752E84")]
	public void destroyThis(GameObject go)
	{
	}

	[Token(Token = "0x60002CA")]
	[Address(RVA = "0x752F78", Offset = "0x752F78", VA = "0x752F78")]
	public GlobalData()
	{
	}
}
[Token(Token = "0x2000062")]
public enum KeyboardState
{
	[Token(Token = "0x4000370")]
	none,
	[Token(Token = "0x4000371")]
	okay,
	[Token(Token = "0x4000372")]
	cancel
}
[Token(Token = "0x2000063")]
public interface IKeyboard
{
	[Token(Token = "0x60002CB")]
	void setTitle(string _title);

	[Token(Token = "0x60002CC")]
	void setString(string _startString, int _maxChar);

	[Token(Token = "0x60002CD")]
	string getString();

	[Token(Token = "0x60002CE")]
	KeyboardState getRetCode();
}
[Token(Token = "0x2000064")]
public interface INetBoss
{
	[Token(Token = "0x60002CF")]
	void nb_start();

	[Token(Token = "0x60002D0")]
	void nb_stop();

	[Token(Token = "0x60002D1")]
	bool nb_isInRoom();

	[Token(Token = "0x60002D2")]
	void nb_leaveRoom();

	[Token(Token = "0x60002D3")]
	void nb_createRoom(string roomName);

	[Token(Token = "0x60002D4")]
	void nb_joinRoom(string roomName);

	[Token(Token = "0x60002D5")]
	void nb_sendMessageToOthers(MyMessage _message);

	[Token(Token = "0x60002D6")]
	void nb_setListener(ModeNet state);
}
[Token(Token = "0x2000065")]
public class ImageStretcher : MonoBehaviour
{
	[Token(Token = "0x4000373")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private RectTransform rt;

	[Token(Token = "0x4000374")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Vector2 size;

	[Token(Token = "0x60002D7")]
	[Address(RVA = "0x75C92C", Offset = "0x75C92C", VA = "0x75C92C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60002D8")]
	[Address(RVA = "0x75C9A4", Offset = "0x75C9A4", VA = "0x75C9A4")]
	public void LateUpdate()
	{
	}

	[Token(Token = "0x60002D9")]
	[Address(RVA = "0x75CAC8", Offset = "0x75CAC8", VA = "0x75CAC8")]
	public ImageStretcher()
	{
	}
}
[Token(Token = "0x2000066")]
public class ImportTable : MonoBehaviour
{
	[Token(Token = "0x4000375")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string resourceName;

	[Token(Token = "0x4000376")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public BDescGame.Orientation orientation;

	[Token(Token = "0x4000377")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float headFraction;

	[Token(Token = "0x4000378")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float apexFraction;

	[Token(Token = "0x4000379")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float deeRadius;

	[Token(Token = "0x60002DA")]
	[Address(RVA = "0x75CAD0", Offset = "0x75CAD0", VA = "0x75CAD0")]
	public BImportTable get()
	{
		return null;
	}

	[Token(Token = "0x60002DB")]
	[Address(RVA = "0x75CB60", Offset = "0x75CB60", VA = "0x75CB60")]
	private void addData(BImportTable tableOutline)
	{
	}

	[Token(Token = "0x60002DC")]
	[Address(RVA = "0x75CEF0", Offset = "0x75CEF0", VA = "0x75CEF0")]
	private void addCollision(BImportTable tableOutline, Transform _t)
	{
	}

	[Token(Token = "0x60002DD")]
	[Address(RVA = "0x75D5B0", Offset = "0x75D5B0", VA = "0x75D5B0")]
	private void addPlayArea(BImportTable tableOutline, Transform _t)
	{
	}

	[Token(Token = "0x60002DE")]
	[Address(RVA = "0x75D2D0", Offset = "0x75D2D0", VA = "0x75D2D0")]
	private void addCushionCorners(BImportTable tableOutline, Transform _t)
	{
	}

	[Token(Token = "0x60002DF")]
	[Address(RVA = "0x75D424", Offset = "0x75D424", VA = "0x75D424")]
	private void addPockets(BImportTable tableOutline, Transform _t)
	{
	}

	[Token(Token = "0x60002E0")]
	[Address(RVA = "0x75D62C", Offset = "0x75D62C", VA = "0x75D62C")]
	private BShape getShape(Transform _t)
	{
		return null;
	}

	[Token(Token = "0x60002E1")]
	[Address(RVA = "0x75D578", Offset = "0x75D578", VA = "0x75D578")]
	private void addStraight(BImportTable tableOutline, Transform _t)
	{
	}

	[Token(Token = "0x60002E2")]
	[Address(RVA = "0x75DF80", Offset = "0x75DF80", VA = "0x75DF80")]
	private List<BImportCircle> getCircles(Transform _t)
	{
		return null;
	}

	[Token(Token = "0x60002E3")]
	[Address(RVA = "0x75E1C0", Offset = "0x75E1C0", VA = "0x75E1C0")]
	private Vector2 get2D(Vector3 a)
	{
		return default(Vector2);
	}

	[Token(Token = "0x60002E4")]
	[Address(RVA = "0x75E1C8", Offset = "0x75E1C8", VA = "0x75E1C8")]
	private void addBalls(BImportTable tableOutline, Transform _t)
	{
	}

	[Token(Token = "0x60002E5")]
	[Address(RVA = "0x75E5C8", Offset = "0x75E5C8", VA = "0x75E5C8")]
	public ImportTable()
	{
	}
}
[Token(Token = "0x2000067")]
public class IngameHelp : MonoBehaviour
{
	[Token(Token = "0x400037A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject[] pages;

	[Token(Token = "0x400037B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int iPage;

	[Token(Token = "0x60002E6")]
	[Address(RVA = "0x1081984", Offset = "0x1081984", VA = "0x1081984")]
	public void OnEnable()
	{
	}

	[Token(Token = "0x60002E7")]
	[Address(RVA = "0x108198C", Offset = "0x108198C", VA = "0x108198C")]
	private void setPage(int _iPage)
	{
	}

	[Token(Token = "0x60002E8")]
	[Address(RVA = "0x1081A18", Offset = "0x1081A18", VA = "0x1081A18")]
	public void buttonNextPage()
	{
	}

	[Token(Token = "0x60002E9")]
	[Address(RVA = "0x1081A24", Offset = "0x1081A24", VA = "0x1081A24")]
	public void buttonLastPage()
	{
	}

	[Token(Token = "0x60002EA")]
	[Address(RVA = "0x1081A30", Offset = "0x1081A30", VA = "0x1081A30")]
	public IngameHelp()
	{
	}
}
[Token(Token = "0x2000068")]
public class KeyBoss : MonoBehaviour
{
	[Token(Token = "0x20001EF")]
	private class KeyboardConfig
	{
		[Token(Token = "0x4000D90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public DescKeyboardConfig desc;

		[Token(Token = "0x4000D91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Keyboard currentKeyboard;

		[Token(Token = "0x4000D92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<Keyboard> keyboards;

		[Token(Token = "0x6000D74")]
		[Address(RVA = "0x864C20", Offset = "0x864C20", VA = "0x864C20")]
		public KeyboardConfig()
		{
		}
	}

	[Token(Token = "0x20001F0")]
	private class Keyboard
	{
		[Token(Token = "0x4000D93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public DescKeyboard desc;

		[Token(Token = "0x4000D94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject go;

		[Token(Token = "0x6000D75")]
		[Address(RVA = "0x864C18", Offset = "0x864C18", VA = "0x864C18")]
		public Keyboard()
		{
		}
	}

	[Token(Token = "0x20001F1")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x43F438", Offset = "0x43F438")]
	private sealed class <>c__DisplayClass35_0
	{
		[Token(Token = "0x4000D95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int jj;

		[Token(Token = "0x4000D96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public KeyBoss <>4__this;

		[Token(Token = "0x6000D76")]
		[Address(RVA = "0x864B28", Offset = "0x864B28", VA = "0x864B28")]
		public <>c__DisplayClass35_0()
		{
		}

		[Token(Token = "0x6000D77")]
		[Address(RVA = "0x864B30", Offset = "0x864B30", VA = "0x864B30")]
		internal void <initLayout>b__0()
		{
		}
	}

	[Token(Token = "0x20001F2")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x43F448", Offset = "0x43F448")]
	private sealed class <>c__DisplayClass50_0
	{
		[Token(Token = "0x4000D97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public KeyTemplate tKey;

		[Token(Token = "0x4000D98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public KeyBoss <>4__this;

		[Token(Token = "0x6000D78")]
		[Address(RVA = "0x864B54", Offset = "0x864B54", VA = "0x864B54")]
		public <>c__DisplayClass50_0()
		{
		}

		[Token(Token = "0x6000D79")]
		[Address(RVA = "0x864B5C", Offset = "0x864B5C", VA = "0x864B5C")]
		internal void <initBoard>b__0(BaseEventData data)
		{
		}

		[Token(Token = "0x6000D7A")]
		[Address(RVA = "0x864B80", Offset = "0x864B80", VA = "0x864B80")]
		internal void <initBoard>b__1(BaseEventData data)
		{
		}
	}

	[Token(Token = "0x20001F3")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x43F458", Offset = "0x43F458")]
	private sealed class <>c__DisplayClass50_1
	{
		[Token(Token = "0x4000D99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public KeyTemplate tKey;

		[Token(Token = "0x4000D9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public KeyBoss <>4__this;

		[Token(Token = "0x6000D7B")]
		[Address(RVA = "0x864BA4", Offset = "0x864BA4", VA = "0x864BA4")]
		public <>c__DisplayClass50_1()
		{
		}

		[Token(Token = "0x6000D7C")]
		[Address(RVA = "0x864BAC", Offset = "0x864BAC", VA = "0x864BAC")]
		internal void <initBoard>b__2(BaseEventData data)
		{
		}

		[Token(Token = "0x6000D7D")]
		[Address(RVA = "0x864BD0", Offset = "0x864BD0", VA = "0x864BD0")]
		internal void <initBoard>b__3(BaseEventData data)
		{
		}

		[Token(Token = "0x6000D7E")]
		[Address(RVA = "0x864BF4", Offset = "0x864BF4", VA = "0x864BF4")]
		internal void <initBoard>b__4(BaseEventData data)
		{
		}
	}

	[Token(Token = "0x400037C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject buttonSymbols;

	[Token(Token = "0x400037D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject buttonLetters;

	[Token(Token = "0x400037E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject countryButton;

	[Token(Token = "0x400037F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float keySpacing;

	[Token(Token = "0x4000380")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float keyboardBorder;

	[Token(Token = "0x4000381")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float clickTime;

	[Token(Token = "0x4000382")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject keyboardTemplate;

	[Token(Token = "0x4000383")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Text output;

	[Token(Token = "0x4000384")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float textSize;

	[Token(Token = "0x4000385")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GameObject keyTemplate;

	[Token(Token = "0x4000386")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public GameObject rowTemplate;

	[Token(Token = "0x4000387")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Sprite enter;

	[Token(Token = "0x4000388")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Sprite backspace;

	[Token(Token = "0x4000389")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Sprite shift;

	[Token(Token = "0x400038A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Sprite unshift;

	[Token(Token = "0x400038B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Sprite alt;

	[Token(Token = "0x400038C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public Sprite language;

	[Token(Token = "0x400038D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public ZuiArea countryContainer;

	[Token(Token = "0x400038E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public string[] layoutFileNames;

	[Token(Token = "0x400038F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private List<GameObject> keyboards;

	[Token(Token = "0x4000390")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private int maxChar;

	[Token(Token = "0x4000391")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private string value;

	[Token(Token = "0x4000392")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private KeyTemplate currentSubKey;

	[Token(Token = "0x4000393")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private List<KeyboardConfig> keyboardConfigs;

	[Token(Token = "0x4000394")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private bool initted;

	[Token(Token = "0x4000395")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	private int iConfig;

	[Token(Token = "0x4000396")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private KeyTemplate currentKey;

	[Token(Token = "0x4000397")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private float currentKeyTime;

	[Token(Token = "0x4000398")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private GameObject currentSubBoard;

	[Token(Token = "0x4000399")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private List<GameObject> countryButtons;

	[Token(Token = "0x400039A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private bool finished;

	[Token(Token = "0x60002EB")]
	[Address(RVA = "0x1083E7C", Offset = "0x1083E7C", VA = "0x1083E7C")]
	public void buttonChangeCountry(int _index)
	{
	}

	[Token(Token = "0x60002EC")]
	[Address(RVA = "0x1084384", Offset = "0x1084384", VA = "0x1084384")]
	public void buttonChangeLetters()
	{
	}

	[Token(Token = "0x60002ED")]
	[Address(RVA = "0x1084580", Offset = "0x1084580", VA = "0x1084580")]
	public void buttonChangeNumbers()
	{
	}

	[Token(Token = "0x60002EE")]
	[Address(RVA = "0x1084760", Offset = "0x1084760", VA = "0x1084760")]
	public string getString()
	{
		return null;
	}

	[Token(Token = "0x60002EF")]
	[Address(RVA = "0x108411C", Offset = "0x108411C", VA = "0x108411C")]
	private void refreshButtonHilights()
	{
	}

	[Token(Token = "0x60002F0")]
	[Address(RVA = "0x10847D4", Offset = "0x10847D4", VA = "0x10847D4")]
	private void initLayout()
	{
	}

	[Token(Token = "0x60002F1")]
	[Address(RVA = "0x1083EA0", Offset = "0x1083EA0", VA = "0x1083EA0")]
	private void setConfig(int index)
	{
	}

	[Token(Token = "0x60002F2")]
	[Address(RVA = "0x1086508", Offset = "0x1086508", VA = "0x1086508")]
	public Canvas getCanvas(GameObject go)
	{
		return null;
	}

	[Token(Token = "0x60002F3")]
	[Address(RVA = "0x1084560", Offset = "0x1084560", VA = "0x1084560")]
	private void startKeyboard(GameObject go)
	{
	}

	[Token(Token = "0x60002F4")]
	[Address(RVA = "0x108660C", Offset = "0x108660C", VA = "0x108660C")]
	public bool isFinished()
	{
		return default(bool);
	}

	[Token(Token = "0x60002F5")]
	[Address(RVA = "0x1086614", Offset = "0x1086614", VA = "0x1086614")]
	public void init(string _startString, int _maxChar)
	{
	}

	[Token(Token = "0x60002F6")]
	[Address(RVA = "0x1086714", Offset = "0x1086714", VA = "0x1086714")]
	private void Update()
	{
	}

	[Token(Token = "0x60002F7")]
	[Address(RVA = "0x1086FA8", Offset = "0x1086FA8", VA = "0x1086FA8")]
	private Vector2 getSize(GameObject subKeyboard)
	{
		return default(Vector2);
	}

	[Token(Token = "0x60002F8")]
	[Address(RVA = "0x1086838", Offset = "0x1086838", VA = "0x1086838")]
	private void startMiniBoard(GameObject subKeyboard)
	{
	}

	[Token(Token = "0x60002F9")]
	[Address(RVA = "0x1087608", Offset = "0x1087608", VA = "0x1087608")]
	public void eventDown(KeyTemplate key)
	{
	}

	[Token(Token = "0x60002FA")]
	[Address(RVA = "0x108763C", Offset = "0x108763C", VA = "0x108763C")]
	public void eventUp(KeyTemplate key)
	{
	}

	[Token(Token = "0x60002FB")]
	[Address(RVA = "0x1087790", Offset = "0x1087790", VA = "0x1087790")]
	public void eventEnter(KeyTemplate key)
	{
	}

	[Token(Token = "0x60002FC")]
	[Address(RVA = "0x10866A0", Offset = "0x10866A0", VA = "0x10866A0")]
	private void refreshCurrentString()
	{
	}

	[Token(Token = "0x60002FD")]
	[Address(RVA = "0x1086A40", Offset = "0x1086A40", VA = "0x1086A40")]
	public void doKeyFunction(KeyTemplate key)
	{
	}

	[Token(Token = "0x60002FE")]
	[Address(RVA = "0x1085418", Offset = "0x1085418", VA = "0x1085418")]
	private GameObject initBoard(DescBoard b, GameObject keyboardTemplate, Dictionary<char, GameObject> miniBoards)
	{
		return null;
	}

	[Token(Token = "0x60002FF")]
	[Address(RVA = "0x1087A54", Offset = "0x1087A54", VA = "0x1087A54")]
	public KeyBoss()
	{
	}
}
[Token(Token = "0x2000069")]
public class KeyButton : MonoBehaviour
{
	[Token(Token = "0x20001F4")]
	public enum Type
	{
		[Token(Token = "0x4000D9C")]
		normal,
		[Token(Token = "0x4000D9D")]
		backspace,
		[Token(Token = "0x4000D9E")]
		space,
		[Token(Token = "0x4000D9F")]
		shift
	}

	[Token(Token = "0x400039B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Type type;

	[Token(Token = "0x6000300")]
	[Address(RVA = "0x1087B58", Offset = "0x1087B58", VA = "0x1087B58")]
	public KeyButton()
	{
	}
}
[Token(Token = "0x200006A")]
public class KeyTemplate : MonoBehaviour
{
	[Token(Token = "0x400039C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Text main;

	[Token(Token = "0x400039D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Text topRight;

	[Token(Token = "0x400039E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Text topLeft;

	[Token(Token = "0x400039F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Image icon;

	[Token(Token = "0x40003A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public EventTrigger eventTrigger;

	[Token(Token = "0x40003A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	internal GameObject subKeyboard;

	[Token(Token = "0x40003A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	internal DescItem item;

	[Token(Token = "0x6000301")]
	[Address(RVA = "0x1087958", Offset = "0x1087958", VA = "0x1087958")]
	public void init()
	{
	}

	[Token(Token = "0x6000302")]
	[Address(RVA = "0x10879B4", Offset = "0x10879B4", VA = "0x10879B4")]
	public void setText(string _text)
	{
	}

	[Token(Token = "0x6000303")]
	[Address(RVA = "0x1087A08", Offset = "0x1087A08", VA = "0x1087A08")]
	public void setIcon(Sprite _sprite)
	{
	}

	[Token(Token = "0x6000304")]
	[Address(RVA = "0x1087B60", Offset = "0x1087B60", VA = "0x1087B60")]
	public KeyTemplate()
	{
	}
}
[Token(Token = "0x200006B")]
public class LabelledTool : MonoBehaviour
{
	[Token(Token = "0x40003A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Text text;

	[Token(Token = "0x40003A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Image icon;

	[Token(Token = "0x40003A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Image back;

	[Token(Token = "0x6000305")]
	[Address(RVA = "0x1087B68", Offset = "0x1087B68", VA = "0x1087B68")]
	public LabelledTool()
	{
	}
}
[Token(Token = "0x200006C")]
public class LanguageOption : MonoBehaviour
{
	[Token(Token = "0x40003A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Text text;

	[Token(Token = "0x40003A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Button button;

	[Token(Token = "0x6000306")]
	[Address(RVA = "0x1087B70", Offset = "0x1087B70", VA = "0x1087B70")]
	public LanguageOption()
	{
	}
}
[Token(Token = "0x200006D")]
public class LazerPointer : MonoBehaviour
{
	[Token(Token = "0x40003A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float radius;

	[Token(Token = "0x40003A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Material mat;

	[Token(Token = "0x40003AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Vector3 target;

	[Token(Token = "0x40003AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private bool noTarget;

	[Token(Token = "0x6000307")]
	[Address(RVA = "0x108A040", Offset = "0x108A040", VA = "0x108A040")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000308")]
	[Address(RVA = "0x108A0B8", Offset = "0x108A0B8", VA = "0x108A0B8")]
	public void setColor(Color _color)
	{
	}

	[Token(Token = "0x6000309")]
	[Address(RVA = "0x108A0D4", Offset = "0x108A0D4", VA = "0x108A0D4")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x600030A")]
	[Address(RVA = "0x108A330", Offset = "0x108A330", VA = "0x108A330")]
	public void setTarget(Vector3 v)
	{
	}

	[Token(Token = "0x600030B")]
	[Address(RVA = "0x108A340", Offset = "0x108A340", VA = "0x108A340")]
	public LazerPointer()
	{
	}
}
[Token(Token = "0x200006E")]
public class LessonBox : MonoBehaviour
{
	[Token(Token = "0x40003AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float interval;

	[Token(Token = "0x600030C")]
	[Address(RVA = "0x108A354", Offset = "0x108A354", VA = "0x108A354")]
	public LessonBox()
	{
	}
}
[Token(Token = "0x200006F")]
public class ListItem : MonoBehaviour
{
	[Token(Token = "0x40003AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject customMarker;

	[Token(Token = "0x40003AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Text text;

	[Token(Token = "0x40003AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public RawImage rawImage;

	[Token(Token = "0x40003B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Image frame;

	[Token(Token = "0x40003B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Button button;

	[Token(Token = "0x600030D")]
	[Address(RVA = "0x108A364", Offset = "0x108A364", VA = "0x108A364")]
	public ListItem()
	{
	}
}
[Token(Token = "0x2000070")]
public class ListSelector : MonoBehaviour
{
	[Token(Token = "0x40003B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Text label;

	[Token(Token = "0x40003B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int value;

	[Token(Token = "0x40003B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private List<string> options;

	[Token(Token = "0x40003B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool useKeys;

	[Token(Token = "0x600030E")]
	[Address(RVA = "0x108A36C", Offset = "0x108A36C", VA = "0x108A36C")]
	public void setOptions(List<string> _options, bool _useKeys = false)
	{
	}

	[Token(Token = "0x600030F")]
	[Address(RVA = "0x108A37C", Offset = "0x108A37C", VA = "0x108A37C")]
	public void setValue(int _value)
	{
	}

	[Token(Token = "0x6000310")]
	[Address(RVA = "0x108A478", Offset = "0x108A478", VA = "0x108A478")]
	public int getValue()
	{
		return default(int);
	}

	[Token(Token = "0x6000311")]
	[Address(RVA = "0x108A480", Offset = "0x108A480", VA = "0x108A480")]
	public void buttonInc()
	{
	}

	[Token(Token = "0x6000312")]
	[Address(RVA = "0x108A48C", Offset = "0x108A48C", VA = "0x108A48C")]
	public void buttonDec()
	{
	}

	[Token(Token = "0x6000313")]
	[Address(RVA = "0x108A498", Offset = "0x108A498", VA = "0x108A498")]
	public ListSelector()
	{
	}
}
[Token(Token = "0x2000071")]
public class Logger : MonoBehaviour, BILog
{
	[Token(Token = "0x40003B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject textVr;

	[Token(Token = "0x40003B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject textMonitor;

	[Token(Token = "0x40003B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int maxLines;

	[Token(Token = "0x40003B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private string[] lines;

	[Token(Token = "0x40003BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int iline;

	[Token(Token = "0x40003BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Text text;

	[Token(Token = "0x40003BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool initted;

	[Token(Token = "0x6000314")]
	[Address(RVA = "0x108CDA4", Offset = "0x108CDA4", VA = "0x108CDA4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000315")]
	[Address(RVA = "0x108CDA8", Offset = "0x108CDA8", VA = "0x108CDA8")]
	private void init()
	{
	}

	[Token(Token = "0x6000316")]
	[Address(RVA = "0x108D138", Offset = "0x108D138", VA = "0x108D138")]
	private void refreshText()
	{
	}

	[Token(Token = "0x6000317")]
	[Address(RVA = "0x108D21C", Offset = "0x108D21C", VA = "0x108D21C")]
	public void enableLog(bool _enable)
	{
	}

	[Token(Token = "0x6000318")]
	[Address(RVA = "0x108CF80", Offset = "0x108CF80", VA = "0x108CF80", Slot = "4")]
	public void addLine(string s)
	{
	}

	[Token(Token = "0x6000319")]
	[Address(RVA = "0x108D2F4", Offset = "0x108D2F4", VA = "0x108D2F4")]
	public Logger()
	{
	}
}
[Token(Token = "0x2000072")]
public class Main : MonoBehaviour
{
	[Token(Token = "0x20001F5")]
	internal enum GameType
	{
		[Token(Token = "0x4000DA1")]
		onePlayer,
		[Token(Token = "0x4000DA2")]
		host,
		[Token(Token = "0x4000DA3")]
		client
	}

	[Serializable]
	[Token(Token = "0x20001F6")]
	public class Language
	{
		[Token(Token = "0x4000DA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string userName;

		[Token(Token = "0x4000DA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string folder;

		[Token(Token = "0x6000D7F")]
		[Address(RVA = "0x8425E4", Offset = "0x8425E4", VA = "0x8425E4")]
		public Language()
		{
		}
	}

	[Token(Token = "0x40003BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string homePage;

	[Token(Token = "0x40003BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject cursor;

	[Token(Token = "0x40003BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public LazerPointer lazerPointer;

	[Token(Token = "0x40003C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static bool playback;

	[Token(Token = "0x40003C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public string gameName;

	[Token(Token = "0x40003C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public BallInfo ballInfo;

	[Token(Token = "0x40003C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public ColorPrefs colorPrefs;

	[Token(Token = "0x40003C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public bool useLan;

	[Token(Token = "0x40003C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float teleportSize;

	[Token(Token = "0x40003C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public int iconsAcross;

	[Token(Token = "0x40003C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public int iconsDown;

	[Token(Token = "0x40003C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public ModeHelp modeHelp;

	[Token(Token = "0x40003C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public ModeOptions modeOptions;

	[Token(Token = "0x40003CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public ModeEditHelp modeEditHelp;

	[Token(Token = "0x40003CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public ModeSelectTable modeSelectTable;

	[Token(Token = "0x40003CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public ModeSelectRules modeSelectRules;

	[Token(Token = "0x40003CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public ModeSelectGameOptions modeSelectGameOptions;

	[Token(Token = "0x40003CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public ModeRequestor modeRequestor;

	[Token(Token = "0x40003CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public ModeUpdates modeUpdates;

	[Token(Token = "0x40003D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public ModeEditTable modeEditTable;

	[Token(Token = "0x40003D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public ModePlayback modePlayback;

	[Token(Token = "0x40003D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public ModeLesson modeLesson;

	[Token(Token = "0x40003D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public ModeLanguage modeLanguage;

	[Token(Token = "0x40003D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public ModeNetHost modeNetHost;

	[Token(Token = "0x40003D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public ModeMenu modeMenu;

	[Token(Token = "0x40003D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public ModeNetClient modeNetClient;

	[Token(Token = "0x40003D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public ModeSolo modeOnePlayer;

	[Token(Token = "0x40003D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public ModeAbout modeAbout;

	[Token(Token = "0x40003D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public ModeKeyboard modeKeyboard;

	[Token(Token = "0x40003DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public ModeMessage modeMessage;

	[Token(Token = "0x40003DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public float cursorHeight;

	[Token(Token = "0x40003DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public Coordinator coordinator;

	[Token(Token = "0x40003DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public XNet coordinatorLan;

	[Token(Token = "0x40003DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	public Language[] languages;

	[Token(Token = "0x40003DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	public string[] customTables;

	[Token(Token = "0x40003E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static Options options;

	[Token(Token = "0x40003E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	internal static Main I;

	[Token(Token = "0x40003E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	private List<Mode> modeList;

	[Token(Token = "0x40003E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private Mode currentMode;

	[Token(Token = "0x40003E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	internal GameType gameType;

	[Token(Token = "0x40003E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	private readonly XmlSerializer optionsSerializer;

	[Token(Token = "0x40003E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	private Mode lastMode;

	[Token(Token = "0x40003E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	private Mode returnMode;

	[Token(Token = "0x40003E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	internal static string folderTables;

	[Token(Token = "0x40003E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	private BallInfo.RenderInfo[] lookup;

	[Token(Token = "0x40003EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	internal bool inTableEditor;

	[Token(Token = "0x40003EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	private readonly string stadiumName;

	[Token(Token = "0x40003EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	private bool shownNoInternetWarning;

	[Token(Token = "0x40003ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x161")]
	private bool bedModeOn;

	[Token(Token = "0x40003EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	private XTransform lastRay;

	[Token(Token = "0x40003EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	private XTransform ray;

	[Token(Token = "0x40003F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	private XTransform lastTilt;

	[Token(Token = "0x40003F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	private XTransform tilt;

	[Token(Token = "0x40003F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	private XTransform delta;

	[Token(Token = "0x600031A")]
	[Address(RVA = "0x108D2FC", Offset = "0x108D2FC", VA = "0x108D2FC")]
	public BallInfo.RenderInfo getByType(BBallType _type)
	{
		return null;
	}

	[Token(Token = "0x600031B")]
	[Address(RVA = "0x108D43C", Offset = "0x108D43C", VA = "0x108D43C")]
	private void menuBadTable()
	{
	}

	[Token(Token = "0x600031C")]
	[Address(RVA = "0x108D778", Offset = "0x108D778", VA = "0x108D778")]
	private void menuQuit()
	{
	}

	[Token(Token = "0x600031D")]
	[Address(RVA = "0x108D7E0", Offset = "0x108D7E0", VA = "0x108D7E0")]
	private void menuEditTableStartMenu()
	{
	}

	[Token(Token = "0x600031E")]
	[Address(RVA = "0x108D858", Offset = "0x108D858", VA = "0x108D858")]
	private void menuEditTableMenu()
	{
	}

	[Token(Token = "0x600031F")]
	[Address(RVA = "0x108D8F8", Offset = "0x108D8F8", VA = "0x108D8F8")]
	private void menuStart()
	{
	}

	[Token(Token = "0x6000320")]
	[Address(RVA = "0x108DB2C", Offset = "0x108DB2C", VA = "0x108DB2C")]
	private void menuNetworkGameType()
	{
	}

	[Token(Token = "0x6000321")]
	[Address(RVA = "0x108DB94", Offset = "0x108DB94", VA = "0x108DB94")]
	private void menuGameType()
	{
	}

	[Token(Token = "0x6000322")]
	[Address(RVA = "0x108DBFC", Offset = "0x108DBFC", VA = "0x108DBFC")]
	public static string getSettingsPath()
	{
		return null;
	}

	[Token(Token = "0x6000323")]
	[Address(RVA = "0x108DC4C", Offset = "0x108DC4C", VA = "0x108DC4C")]
	public void saveSettings()
	{
	}

	[Token(Token = "0x6000324")]
	[Address(RVA = "0x108DD08", Offset = "0x108DD08", VA = "0x108DD08")]
	public void loadSettings()
	{
	}

	[Token(Token = "0x6000325")]
	[Address(RVA = "0x108DFF8", Offset = "0x108DFF8", VA = "0x108DFF8")]
	public void applySettings()
	{
	}

	[Token(Token = "0x6000326")]
	[Address(RVA = "0x108E19C", Offset = "0x108E19C", VA = "0x108E19C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000327")]
	[Address(RVA = "0x108E6C8", Offset = "0x108E6C8", VA = "0x108E6C8")]
	private void warnNoNetworkGame()
	{
	}

	[Token(Token = "0x6000328")]
	[Address(RVA = "0x108DAB0", Offset = "0x108DAB0", VA = "0x108DAB0")]
	private void warnNoInternet()
	{
	}

	[Token(Token = "0x6000329")]
	[Address(RVA = "0x108DA90", Offset = "0x108DA90", VA = "0x108DA90")]
	public static bool internetOn()
	{
		return default(bool);
	}

	[Token(Token = "0x600032A")]
	[Address(RVA = "0x108E744", Offset = "0x108E744", VA = "0x108E744")]
	private void Update()
	{
	}

	[Token(Token = "0x600032B")]
	[Address(RVA = "0x108EE18", Offset = "0x108EE18", VA = "0x108EE18")]
	private void updateBedMode()
	{
	}

	[Token(Token = "0x600032C")]
	[Address(RVA = "0x108F174", Offset = "0x108F174", VA = "0x108F174")]
	private void getPointerTransform(Ray r, XTransform t)
	{
	}

	[Token(Token = "0x600032D")]
	[Address(RVA = "0x108E860", Offset = "0x108E860", VA = "0x108E860")]
	private void updateMode()
	{
	}

	[Token(Token = "0x600032E")]
	[Address(RVA = "0x1090CF4", Offset = "0x1090CF4", VA = "0x1090CF4")]
	private void updateScreenGrab()
	{
	}

	[Token(Token = "0x600032F")]
	[Address(RVA = "0x1090CF8", Offset = "0x1090CF8", VA = "0x1090CF8")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000330")]
	[Address(RVA = "0x1090CFC", Offset = "0x1090CFC", VA = "0x1090CFC")]
	private void updateCursor()
	{
	}

	[Token(Token = "0x6000331")]
	[Address(RVA = "0x108D490", Offset = "0x108D490", VA = "0x108D490")]
	private void setMode(Mode _mode)
	{
	}

	[Token(Token = "0x6000332")]
	[Address(RVA = "0x108F534", Offset = "0x108F534", VA = "0x108F534")]
	private void modePlaybackExit()
	{
	}

	[Token(Token = "0x6000333")]
	[Address(RVA = "0x108F510", Offset = "0x108F510", VA = "0x108F510")]
	private void modeEditHelpExit()
	{
	}

	[Token(Token = "0x6000334")]
	[Address(RVA = "0x1091098", Offset = "0x1091098", VA = "0x1091098")]
	private void modeGetHeightExit()
	{
	}

	[Token(Token = "0x6000335")]
	[Address(RVA = "0x108F234", Offset = "0x108F234", VA = "0x108F234")]
	private void modeQuickStartExit()
	{
	}

	[Token(Token = "0x6000336")]
	[Address(RVA = "0x108F27C", Offset = "0x108F27C", VA = "0x108F27C")]
	private void modeMessageExit()
	{
	}

	[Token(Token = "0x6000337")]
	[Address(RVA = "0x108F538", Offset = "0x108F538", VA = "0x108F538")]
	private void modeUpdatesExit()
	{
	}

	[Token(Token = "0x6000338")]
	[Address(RVA = "0x108FD70", Offset = "0x108FD70", VA = "0x108FD70")]
	private void modeNetClientExit()
	{
	}

	[Token(Token = "0x6000339")]
	[Address(RVA = "0x108FA18", Offset = "0x108FA18", VA = "0x108FA18")]
	private void modeNetHostExit()
	{
	}

	[Token(Token = "0x600033A")]
	[Address(RVA = "0x108FA1C", Offset = "0x108FA1C", VA = "0x108FA1C")]
	private void modeAboutExit()
	{
	}

	[Token(Token = "0x600033B")]
	[Address(RVA = "0x108FA20", Offset = "0x108FA20", VA = "0x108FA20")]
	private void modeLessonExit()
	{
	}

	[Token(Token = "0x600033C")]
	[Address(RVA = "0x108F20C", Offset = "0x108F20C", VA = "0x108F20C")]
	private void modeOnPlayerExit()
	{
	}

	[Token(Token = "0x600033D")]
	[Address(RVA = "0x108F360", Offset = "0x108F360", VA = "0x108F360")]
	private void modeOptionsExit()
	{
	}

	[Token(Token = "0x600033E")]
	[Address(RVA = "0x108F53C", Offset = "0x108F53C", VA = "0x108F53C")]
	private void modeRequestorExit()
	{
	}

	[Token(Token = "0x600033F")]
	[Address(RVA = "0x108F79C", Offset = "0x108F79C", VA = "0x108F79C")]
	private void modeEditTableExit()
	{
	}

	[Token(Token = "0x6000340")]
	[Address(RVA = "0x108FA24", Offset = "0x108FA24", VA = "0x108FA24")]
	private void modeKeyboardExit()
	{
	}

	[Token(Token = "0x6000341")]
	[Address(RVA = "0x108FC3C", Offset = "0x108FC3C", VA = "0x108FC3C")]
	private void modeLanguageExit()
	{
	}

	[Token(Token = "0x6000342")]
	[Address(RVA = "0x108FD74", Offset = "0x108FD74", VA = "0x108FD74")]
	private void modeSelectGameOptionsExit()
	{
	}

	[Token(Token = "0x6000343")]
	[Address(RVA = "0x1090110", Offset = "0x1090110", VA = "0x1090110")]
	private void modeSelectRulesExit()
	{
	}

	[Token(Token = "0x6000344")]
	[Address(RVA = "0x109017C", Offset = "0x109017C", VA = "0x109017C")]
	private void modeSelectTableExit()
	{
	}

	[Token(Token = "0x6000345")]
	[Address(RVA = "0x1090848", Offset = "0x1090848", VA = "0x1090848")]
	private void modeMenuExit()
	{
	}

	[Token(Token = "0x6000346")]
	[Address(RVA = "0x109112C", Offset = "0x109112C", VA = "0x109112C")]
	public Main()
	{
	}
}
[Token(Token = "0x2000073")]
public class MenuOption : MonoBehaviour
{
	[Token(Token = "0x40003F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Text text;

	[Token(Token = "0x40003F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Button button;

	[Token(Token = "0x40003F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	internal int item;

	[Token(Token = "0x6000348")]
	[Address(RVA = "0x10928B8", Offset = "0x10928B8", VA = "0x10928B8")]
	public MenuOption()
	{
	}
}
[Token(Token = "0x2000074")]
public class Mode : MonoBehaviour
{
	[Token(Token = "0x6000349")]
	[Address(RVA = "0x109292C", Offset = "0x109292C", VA = "0x109292C")]
	private void Awake()
	{
	}

	[Token(Token = "0x600034A")]
	[Address(RVA = "0x1092938", Offset = "0x1092938", VA = "0x1092938")]
	private void Start()
	{
	}

	[Token(Token = "0x600034B")]
	[Address(RVA = "0x1092944", Offset = "0x1092944", VA = "0x1092944")]
	private void Update()
	{
	}

	[Token(Token = "0x600034C")]
	[Address(RVA = "0x1092950", Offset = "0x1092950", VA = "0x1092950")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x600034D")]
	[Address(RVA = "0x109295C", Offset = "0x109295C", VA = "0x109295C", Slot = "4")]
	public virtual string getName()
	{
		return null;
	}

	[Token(Token = "0x600034E")]
	[Address(RVA = "0x10929A0", Offset = "0x10929A0", VA = "0x10929A0", Slot = "5")]
	public virtual void update()
	{
	}

	[Token(Token = "0x600034F")]
	[Address(RVA = "0x10929AC", Offset = "0x10929AC", VA = "0x10929AC", Slot = "6")]
	public virtual void refreshColors()
	{
	}

	[Token(Token = "0x6000350")]
	[Address(RVA = "0x10929B0", Offset = "0x10929B0", VA = "0x10929B0", Slot = "7")]
	public virtual void fixedUpdate()
	{
	}

	[Token(Token = "0x6000351")]
	[Address(RVA = "0x10929B4", Offset = "0x10929B4", VA = "0x10929B4", Slot = "8")]
	public virtual void start()
	{
	}

	[Token(Token = "0x6000352")]
	[Address(RVA = "0x10929B8", Offset = "0x10929B8", VA = "0x10929B8", Slot = "9")]
	public virtual void enter()
	{
	}

	[Token(Token = "0x6000353")]
	[Address(RVA = "0x10929BC", Offset = "0x10929BC", VA = "0x10929BC", Slot = "10")]
	public virtual void exit()
	{
	}

	[Token(Token = "0x6000354")]
	[Address(RVA = "0x10929C0", Offset = "0x10929C0", VA = "0x10929C0", Slot = "11")]
	public virtual void awake()
	{
	}

	[Token(Token = "0x6000355")]
	[Address(RVA = "0x10929C4", Offset = "0x10929C4", VA = "0x10929C4", Slot = "12")]
	public virtual void enableGui(bool _enable)
	{
	}

	[Token(Token = "0x6000356")]
	[Address(RVA = "0x10929C8", Offset = "0x10929C8", VA = "0x10929C8", Slot = "13")]
	public virtual void enableInteraction(bool _enable)
	{
	}

	[Token(Token = "0x6000357")]
	[Address(RVA = "0x10929CC", Offset = "0x10929CC", VA = "0x10929CC", Slot = "14")]
	public virtual bool isFinished()
	{
		return default(bool);
	}

	[Token(Token = "0x6000358")]
	[Address(RVA = "0x10929D4", Offset = "0x10929D4", VA = "0x10929D4", Slot = "15")]
	public virtual void refreshText()
	{
	}

	[Token(Token = "0x6000359")]
	[Address(RVA = "0x10929D8", Offset = "0x10929D8", VA = "0x10929D8", Slot = "16")]
	public virtual bool onEscape()
	{
		return default(bool);
	}

	[Token(Token = "0x600035A")]
	[Address(RVA = "0x10929E0", Offset = "0x10929E0", VA = "0x10929E0")]
	public Mode()
	{
	}
}
[Token(Token = "0x2000075")]
public class ModeAbout : Mode
{
	[Token(Token = "0x40003F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject root;

	[Token(Token = "0x40003F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Text version;

	[Token(Token = "0x40003F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Text url;

	[Token(Token = "0x40003F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool finished;

	[Token(Token = "0x600035B")]
	[Address(RVA = "0x10929E8", Offset = "0x10929E8", VA = "0x10929E8", Slot = "9")]
	public override void enter()
	{
	}

	[Token(Token = "0x600035C")]
	[Address(RVA = "0x1092BC8", Offset = "0x1092BC8", VA = "0x1092BC8", Slot = "5")]
	public override void update()
	{
	}

	[Token(Token = "0x600035D")]
	[Address(RVA = "0x1092C84", Offset = "0x1092C84", VA = "0x1092C84", Slot = "12")]
	public override void enableGui(bool _enable)
	{
	}

	[Token(Token = "0x600035E")]
	[Address(RVA = "0x1092CA4", Offset = "0x1092CA4", VA = "0x1092CA4", Slot = "14")]
	public override bool isFinished()
	{
		return default(bool);
	}

	[Token(Token = "0x600035F")]
	[Address(RVA = "0x1092C78", Offset = "0x1092C78", VA = "0x1092C78")]
	public void buttonCancel()
	{
	}

	[Token(Token = "0x6000360")]
	[Address(RVA = "0x1092CAC", Offset = "0x1092CAC", VA = "0x1092CAC")]
	public ModeAbout()
	{
	}
}
[Token(Token = "0x2000076")]
public class ModeEditHelp : Mode
{
	[Token(Token = "0x40003FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject root;

	[Token(Token = "0x40003FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Image tickImage;

	[Token(Token = "0x40003FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Text message;

	[Token(Token = "0x40003FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private readonly string url;

	[Token(Token = "0x40003FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool finished;

	[Token(Token = "0x40003FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
	private bool cancelled;

	[Token(Token = "0x4000400")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3A")]
	private bool showEditHelp;

	[Token(Token = "0x6000361")]
	[Address(RVA = "0x1092CB4", Offset = "0x1092CB4", VA = "0x1092CB4")]
	public void buttonShowAgain()
	{
	}

	[Token(Token = "0x6000362")]
	[Address(RVA = "0x1092CC4", Offset = "0x1092CC4", VA = "0x1092CC4", Slot = "10")]
	public override void exit()
	{
	}

	[Token(Token = "0x6000363")]
	[Address(RVA = "0x1092D3C", Offset = "0x1092D3C", VA = "0x1092D3C", Slot = "9")]
	public override void enter()
	{
	}

	[Token(Token = "0x6000364")]
	[Address(RVA = "0x1092F04", Offset = "0x1092F04", VA = "0x1092F04", Slot = "5")]
	public override void update()
	{
	}

	[Token(Token = "0x6000365")]
	[Address(RVA = "0x1093004", Offset = "0x1093004", VA = "0x1093004", Slot = "12")]
	public override void enableGui(bool _enable)
	{
	}

	[Token(Token = "0x6000366")]
	[Address(RVA = "0x1093024", Offset = "0x1093024", VA = "0x1093024", Slot = "14")]
	public override bool isFinished()
	{
		return default(bool);
	}

	[Token(Token = "0x6000367")]
	[Address(RVA = "0x109302C", Offset = "0x109302C", VA = "0x109302C")]
	public bool isCancelled()
	{
		return default(bool);
	}

	[Token(Token = "0x6000368")]
	[Address(RVA = "0x1092FEC", Offset = "0x1092FEC", VA = "0x1092FEC")]
	public void buttonCancel()
	{
	}

	[Token(Token = "0x6000369")]
	[Address(RVA = "0x1092FF8", Offset = "0x1092FF8", VA = "0x1092FF8")]
	public void buttonOkay()
	{
	}

	[Token(Token = "0x600036A")]
	[Address(RVA = "0x1093034", Offset = "0x1093034", VA = "0x1093034")]
	public ModeEditHelp()
	{
	}
}
[Token(Token = "0x2000077")]
public class ModeEditTable : Mode
{
	[Token(Token = "0x20001F7")]
	private class State
	{
		[Token(Token = "0x4000DA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal ModeEditTable B;

		[Token(Token = "0x4000DA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal bool finished;

		[Token(Token = "0x6000D80")]
		[Address(RVA = "0x842688", Offset = "0x842688", VA = "0x842688", Slot = "4")]
		public virtual void enter()
		{
		}

		[Token(Token = "0x6000D81")]
		[Address(RVA = "0x84395C", Offset = "0x84395C", VA = "0x84395C", Slot = "5")]
		public virtual void exit()
		{
		}

		[Token(Token = "0x6000D82")]
		[Address(RVA = "0x8430E8", Offset = "0x8430E8", VA = "0x8430E8", Slot = "6")]
		public virtual void update()
		{
		}

		[Token(Token = "0x6000D83")]
		[Address(RVA = "0x84311C", Offset = "0x84311C", VA = "0x84311C")]
		public State()
		{
		}
	}

	[Token(Token = "0x20001F8")]
	private class SIdle : State
	{
		[Token(Token = "0x4000DA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private State wantedState;

		[Token(Token = "0x4000DA9")]
		private const float closestPocket = 0.1f;

		[Token(Token = "0x6000D84")]
		[Address(RVA = "0x842678", Offset = "0x842678", VA = "0x842678", Slot = "4")]
		public override void enter()
		{
		}

		[Token(Token = "0x6000D85")]
		[Address(RVA = "0x842690", Offset = "0x842690", VA = "0x842690", Slot = "6")]
		public override void update()
		{
		}

		[Token(Token = "0x6000D86")]
		[Address(RVA = "0x84310C", Offset = "0x84310C", VA = "0x84310C")]
		public State getWantedState()
		{
			return null;
		}

		[Token(Token = "0x6000D87")]
		[Address(RVA = "0x843114", Offset = "0x843114", VA = "0x843114")]
		public SIdle()
		{
		}
	}

	[Token(Token = "0x20001F9")]
	private class SPan : State
	{
		[Token(Token = "0x4000DAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private Vector2 startPlanePos;

		[Token(Token = "0x4000DAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private Vector2 startPan;

		[Token(Token = "0x6000D88")]
		[Address(RVA = "0x843124", Offset = "0x843124", VA = "0x843124", Slot = "4")]
		public override void enter()
		{
		}

		[Token(Token = "0x6000D89")]
		[Address(RVA = "0x843290", Offset = "0x843290", VA = "0x843290", Slot = "6")]
		public override void update()
		{
		}

		[Token(Token = "0x6000D8A")]
		[Address(RVA = "0x8433B0", Offset = "0x8433B0", VA = "0x8433B0")]
		public SPan()
		{
		}
	}

	[Token(Token = "0x20001FA")]
	private class SVertexMove : State
	{
		[Token(Token = "0x4000DAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private Vector2 startItemPos;

		[Token(Token = "0x4000DAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private Vector2 startCursorPos;

		[Token(Token = "0x6000D8B")]
		[Address(RVA = "0x8433B8", Offset = "0x8433B8", VA = "0x8433B8", Slot = "4")]
		public override void enter()
		{
		}

		[Token(Token = "0x6000D8C")]
		[Address(RVA = "0x8435B4", Offset = "0x8435B4", VA = "0x8435B4", Slot = "6")]
		public override void update()
		{
		}

		[Token(Token = "0x6000D8D")]
		[Address(RVA = "0x843954", Offset = "0x843954", VA = "0x843954")]
		public SVertexMove()
		{
		}
	}

	[Token(Token = "0x20001FB")]
	public enum ZOrder
	{
		[Token(Token = "0x4000DAF")]
		grid,
		[Token(Token = "0x4000DB0")]
		slate,
		[Token(Token = "0x4000DB1")]
		edge,
		[Token(Token = "0x4000DB2")]
		vertex,
		[Token(Token = "0x4000DB3")]
		marking,
		[Token(Token = "0x4000DB4")]
		pack,
		[Token(Token = "0x4000DB5")]
		ball,
		[Token(Token = "0x4000DB6")]
		cursor
	}

	[Token(Token = "0x20001FC")]
	public enum RetCode
	{
		[Token(Token = "0x4000DB8")]
		busy,
		[Token(Token = "0x4000DB9")]
		previewTable,
		[Token(Token = "0x4000DBA")]
		loadTable,
		[Token(Token = "0x4000DBB")]
		saveTable,
		[Token(Token = "0x4000DBC")]
		menu,
		[Token(Token = "0x4000DBD")]
		cancel,
		[Token(Token = "0x4000DBE")]
		enterNumber,
		[Token(Token = "0x4000DBF")]
		saveTableThenQuit
	}

	[Token(Token = "0x20001FD")]
	public enum MouseMode
	{
		[Token(Token = "0x4000DC1")]
		add,
		[Token(Token = "0x4000DC2")]
		move,
		[Token(Token = "0x4000DC3")]
		select,
		[Token(Token = "0x4000DC4")]
		sub
	}

	[Token(Token = "0x20001FE")]
	private class ViewPos
	{
		[Token(Token = "0x4000DC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float zoom;

		[Token(Token = "0x4000DC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public Vector2 position;

		[Token(Token = "0x6000D8E")]
		[Address(RVA = "0x843968", Offset = "0x843968", VA = "0x843968")]
		public ViewPos()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x20001FF")]
	public class ToolButton
	{
		[Token(Token = "0x4000DC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Sprite sprite;

		[Token(Token = "0x4000DC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public MouseMode mouseMode;

		[Token(Token = "0x4000DC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal GameObject go;

		[Token(Token = "0x6000D8F")]
		[Address(RVA = "0x843960", Offset = "0x843960", VA = "0x843960")]
		public ToolButton()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x2000200")]
	public struct Sizes
	{
		[Token(Token = "0x4000DCA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float vertex;

		[Token(Token = "0x4000DCB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float line;
	}

	[Serializable]
	[Token(Token = "0x2000201")]
	public struct Prefabs
	{
		[Token(Token = "0x4000DCC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public GameObject vertex;

		[Token(Token = "0x4000DCD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public GameObject line;

		[Token(Token = "0x4000DCE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public GameObject toolButton;

		[Token(Token = "0x6000D90")]
		[Address(RVA = "0x3FC680", Offset = "0x3FC680", VA = "0x3FC680")]
		public void disableAll()
		{
		}
	}

	[Token(Token = "0x2000202")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x43F468", Offset = "0x43F468")]
	private sealed class <>c__DisplayClass102_0
	{
		[Token(Token = "0x4000DCF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public ModeEditTable <>4__this;

		[Token(Token = "0x4000DD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ToolButton tb;

		[Token(Token = "0x6000D91")]
		[Address(RVA = "0x8425EC", Offset = "0x8425EC", VA = "0x8425EC")]
		public <>c__DisplayClass102_0()
		{
		}

		[Token(Token = "0x6000D92")]
		[Address(RVA = "0x8425F4", Offset = "0x8425F4", VA = "0x8425F4")]
		internal void <addToolButton>b__0()
		{
		}
	}

	[Token(Token = "0x4000401")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float uiHeight;

	[Token(Token = "0x4000402")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Canvas rootCanvas;

	[Token(Token = "0x4000403")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform vrRoot;

	[Token(Token = "0x4000404")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Text errorsPopup;

	[Token(Token = "0x4000405")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Text errorsSidePanel;

	[Token(Token = "0x4000406")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Text errorsTitle;

	[Token(Token = "0x4000407")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public AudioClip editSnd;

	[Token(Token = "0x4000408")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject savePrompt;

	[Token(Token = "0x4000409")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GameObject errorList;

	[Token(Token = "0x400040A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public float lineGrabDistance;

	[Token(Token = "0x400040B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public CTLine headString;

	[Token(Token = "0x400040C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public CTArc deeArc;

	[Token(Token = "0x400040D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Image errorFrame;

	[Token(Token = "0x400040E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public GameObject circle;

	[Token(Token = "0x400040F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Button undoButton;

	[Token(Token = "0x4000410")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public Button redoButton;

	[Token(Token = "0x4000411")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public Transform itemProperties;

	[Token(Token = "0x4000412")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public Transform gameProperties;

	[Token(Token = "0x4000413")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public SliderValue sliderValue;

	[Token(Token = "0x4000414")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public Transform world;

	[Token(Token = "0x4000415")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public GameObject leftPanel;

	[Token(Token = "0x4000416")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public GameObject rightPanel;

	[Token(Token = "0x4000417")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public GameObject bottomPanel;

	[Token(Token = "0x4000418")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public GameObject errorPanel;

	[Token(Token = "0x4000419")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public Transform vrLeft;

	[Token(Token = "0x400041A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public Transform vrRight;

	[Token(Token = "0x400041B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public Transform vrBottom;

	[Token(Token = "0x400041C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public Transform vrError;

	[Token(Token = "0x400041D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public Transform vrPopup;

	[Token(Token = "0x400041E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public Transform popupPanel;

	[Token(Token = "0x400041F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	public Vector3 vrUiOffset;

	[Token(Token = "0x4000420")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	public ZuiArea centerSection;

	[Token(Token = "0x4000421")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	public ButtonContinuous zoomIn;

	[Token(Token = "0x4000422")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	public ButtonContinuous zoomOut;

	[Token(Token = "0x4000423")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	public ZuiArea guiContainer;

	[Token(Token = "0x4000424")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	public GameObject cursor;

	[Token(Token = "0x4000425")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	public ListSelector vertexType;

	[Token(Token = "0x4000426")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	public ListSelector rulesSelector;

	[Token(Token = "0x4000427")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	public float zoomSpeed;

	[Token(Token = "0x4000428")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x154")]
	public float minZoom;

	[Token(Token = "0x4000429")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	public float maxZoom;

	[Token(Token = "0x400042A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	public Text itemName;

	[Token(Token = "0x400042B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	public RPolygon rpolygon;

	[Token(Token = "0x400042C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	public Texture2D cornerVertex;

	[Token(Token = "0x400042D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	public Texture2D pocketVertex;

	[Token(Token = "0x400042E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	public Texture2D deeTexture;

	[Token(Token = "0x400042F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	public Color iconColor;

	[Token(Token = "0x4000430")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	public GameObject ballPrefab;

	[Token(Token = "0x4000431")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	public Sizes sizes;

	[Token(Token = "0x4000432")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	public Prefabs prefabs;

	[Token(Token = "0x4000433")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	public Texture2D[] poolBalls;

	[Token(Token = "0x4000434")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
	public Texture2D[] snookerBalls;

	[Token(Token = "0x4000435")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
	public ToolButton[] tools;

	[Token(Token = "0x4000436")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
	public GameObject[] enableInVr;

	[Token(Token = "0x4000437")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
	private Sizes sizeMap;

	[Token(Token = "0x4000438")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
	private List<GameObject> balls;

	[Token(Token = "0x4000439")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
	private SliderValue ballRadius;

	[Token(Token = "0x400043A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
	private SliderValue deeRadius;

	[Token(Token = "0x400043B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
	private SliderValue itemAngle;

	[Token(Token = "0x400043C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
	private SliderValue shootSpeed;

	[Token(Token = "0x400043D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
	private SliderValue sliderNeedingKeyboardInput;

	[Token(Token = "0x400043E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
	private RetCode retCode;

	[Token(Token = "0x400043F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x220")]
	private List<GameObject> vertices;

	[Token(Token = "0x4000440")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x228")]
	private List<GameObject> lines;

	[Token(Token = "0x4000441")]
	private const float cameraDistance = 10f;

	[Token(Token = "0x4000442")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x230")]
	private Vector2 cursorPos;

	[Token(Token = "0x4000443")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x238")]
	private State currentState;

	[Token(Token = "0x4000444")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x240")]
	private SIdle sIdle;

	[Token(Token = "0x4000445")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x248")]
	private SPan sPan;

	[Token(Token = "0x4000446")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x250")]
	private SVertexMove sVertexMove;

	[Token(Token = "0x4000447")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x258")]
	private ModeEditTable I;

	[Token(Token = "0x4000448")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x260")]
	private MouseMode mouseMode;

	[Token(Token = "0x4000449")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x264")]
	private bool initted;

	[Token(Token = "0x400044A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x268")]
	private ViewPos viewPos;

	[Token(Token = "0x400044B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x270")]
	private Color goodButton;

	[Token(Token = "0x400044C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x280")]
	private Color badButton;

	[Token(Token = "0x400044D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x290")]
	private bool popupActive;

	[Token(Token = "0x400044E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x298")]
	private List<RectTransform> blockers;

	[Token(Token = "0x400044F")]
	private const float startZoom = -1f;

	[Token(Token = "0x4000450")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A0")]
	private int[] pyramidIndices;

	[Token(Token = "0x4000451")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A8")]
	private int[] diamondIndices;

	[Token(Token = "0x4000452")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2B0")]
	private float floorHeight;

	[Token(Token = "0x600036B")]
	[Address(RVA = "0x1093090", Offset = "0x1093090", VA = "0x1093090")]
	public void playSound(AudioClip clip)
	{
	}

	[Token(Token = "0x600036C")]
	[Address(RVA = "0x10930FC", Offset = "0x10930FC", VA = "0x10930FC")]
	private void makeThumbnail()
	{
	}

	[Token(Token = "0x600036D")]
	[Address(RVA = "0x1093390", Offset = "0x1093390", VA = "0x1093390")]
	public float getZ(ZOrder _order)
	{
		return default(float);
	}

	[Token(Token = "0x600036E")]
	[Address(RVA = "0x10933A4", Offset = "0x10933A4", VA = "0x10933A4")]
	public void buttonUndo()
	{
	}

	[Token(Token = "0x600036F")]
	[Address(RVA = "0x1093400", Offset = "0x1093400", VA = "0x1093400")]
	public void buttonRedo()
	{
	}

	[Token(Token = "0x6000370")]
	[Address(RVA = "0x109345C", Offset = "0x109345C", VA = "0x109345C")]
	public void buttonSave()
	{
	}

	[Token(Token = "0x6000371")]
	[Address(RVA = "0x1093484", Offset = "0x1093484", VA = "0x1093484")]
	public void buttonNew()
	{
	}

	[Token(Token = "0x6000372")]
	[Address(RVA = "0x10934FC", Offset = "0x10934FC", VA = "0x10934FC")]
	public void buttonLoad()
	{
	}

	[Token(Token = "0x6000373")]
	[Address(RVA = "0x1093508", Offset = "0x1093508", VA = "0x1093508")]
	public void buttonFactoryReset()
	{
	}

	[Token(Token = "0x6000374")]
	[Address(RVA = "0x10935DC", Offset = "0x10935DC", VA = "0x10935DC")]
	public void buttonMenu()
	{
	}

	[Token(Token = "0x6000375")]
	[Address(RVA = "0x10935E8", Offset = "0x10935E8", VA = "0x10935E8")]
	private void showPopup(bool _on)
	{
	}

	[Token(Token = "0x6000376")]
	[Address(RVA = "0x1093698", Offset = "0x1093698", VA = "0x1093698")]
	public void buttonCancel()
	{
	}

	[Token(Token = "0x6000377")]
	[Address(RVA = "0x1093738", Offset = "0x1093738", VA = "0x1093738")]
	public void buttonPromptCancel()
	{
	}

	[Token(Token = "0x6000378")]
	[Address(RVA = "0x1093770", Offset = "0x1093770", VA = "0x1093770")]
	public void buttonPromptYes()
	{
	}

	[Token(Token = "0x6000379")]
	[Address(RVA = "0x109377C", Offset = "0x109377C", VA = "0x109377C")]
	public void buttonPromptNo()
	{
	}

	[Token(Token = "0x600037A")]
	[Address(RVA = "0x1093788", Offset = "0x1093788", VA = "0x1093788")]
	public void buttonPreview()
	{
	}

	[Token(Token = "0x600037B")]
	[Address(RVA = "0x1093794", Offset = "0x1093794", VA = "0x1093794")]
	private SliderValue makeSliderValue(SliderValue.Desc _desc, Transform _parent)
	{
		return null;
	}

	[Token(Token = "0x600037C")]
	[Address(RVA = "0x1093918", Offset = "0x1093918", VA = "0x1093918")]
	private void buttonShowErrors()
	{
	}

	[Token(Token = "0x600037D")]
	[Address(RVA = "0x10939F0", Offset = "0x10939F0", VA = "0x10939F0")]
	public void buttonHideErrors()
	{
	}

	[Token(Token = "0x600037E")]
	[Address(RVA = "0x1093A10", Offset = "0x1093A10", VA = "0x1093A10")]
	private void init()
	{
	}

	[Token(Token = "0x600037F")]
	[Address(RVA = "0x1094584", Offset = "0x1094584", VA = "0x1094584")]
	private void moveCanvas(Transform t, Transform parent)
	{
	}

	[Token(Token = "0x6000380")]
	[Address(RVA = "0x1094410", Offset = "0x1094410", VA = "0x1094410")]
	private void initCanvas()
	{
	}

	[Token(Token = "0x6000381")]
	[Address(RVA = "0x1094648", Offset = "0x1094648", VA = "0x1094648")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000382")]
	[Address(RVA = "0x109412C", Offset = "0x109412C", VA = "0x109412C")]
	private void addToolButton(ToolButton tb)
	{
	}

	[Token(Token = "0x6000383")]
	[Address(RVA = "0x1094740", Offset = "0x1094740", VA = "0x1094740")]
	public void buttonTool(MouseMode _mode)
	{
	}

	[Token(Token = "0x6000384")]
	[Address(RVA = "0x109488C", Offset = "0x109488C", VA = "0x109488C")]
	public bool isOverUi()
	{
		return default(bool);
	}

	[Token(Token = "0x6000385")]
	[Address(RVA = "0x1094990", Offset = "0x1094990", VA = "0x1094990")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000386")]
	[Address(RVA = "0x10949A8", Offset = "0x10949A8", VA = "0x10949A8")]
	private void onUndoAdd()
	{
	}

	[Token(Token = "0x6000387")]
	[Address(RVA = "0x10949B0", Offset = "0x10949B0", VA = "0x10949B0")]
	private void onUndoRedo()
	{
	}

	[Token(Token = "0x6000388")]
	[Address(RVA = "0x10949B4", Offset = "0x10949B4", VA = "0x10949B4")]
	private void tableToUi()
	{
	}

	[Token(Token = "0x6000389")]
	[Address(RVA = "0x1094BFC", Offset = "0x1094BFC", VA = "0x1094BFC")]
	private void setupBlockers()
	{
	}

	[Token(Token = "0x600038A")]
	[Address(RVA = "0x1094D20", Offset = "0x1094D20", VA = "0x1094D20", Slot = "9")]
	public override void enter()
	{
	}

	[Token(Token = "0x600038B")]
	[Address(RVA = "0x1096418", Offset = "0x1096418", VA = "0x1096418")]
	public void buttonZoomIn()
	{
	}

	[Token(Token = "0x600038C")]
	[Address(RVA = "0x1096544", Offset = "0x1096544", VA = "0x1096544")]
	public void buttonZoomOut()
	{
	}

	[Token(Token = "0x600038D")]
	[Address(RVA = "0x1096464", Offset = "0x1096464", VA = "0x1096464")]
	public void setZoom(float _zoom)
	{
	}

	[Token(Token = "0x600038E")]
	[Address(RVA = "0x10965B0", Offset = "0x10965B0", VA = "0x10965B0")]
	public void clampPan()
	{
	}

	[Token(Token = "0x600038F")]
	[Address(RVA = "0x1096620", Offset = "0x1096620", VA = "0x1096620", Slot = "10")]
	public override void exit()
	{
	}

	[Token(Token = "0x6000390")]
	[Address(RVA = "0x10952E4", Offset = "0x10952E4", VA = "0x10952E4")]
	public void sync()
	{
	}

	[Token(Token = "0x6000391")]
	[Address(RVA = "0x10966FC", Offset = "0x10966FC", VA = "0x10966FC")]
	public Vector2 clampSize(Vector2 v)
	{
		return default(Vector2);
	}

	[Token(Token = "0x6000392")]
	[Address(RVA = "0x1096744", Offset = "0x1096744", VA = "0x1096744")]
	private GameObject makeBall(Texture2D _texture)
	{
		return null;
	}

	[Token(Token = "0x6000393")]
	[Address(RVA = "0x1096880", Offset = "0x1096880", VA = "0x1096880")]
	private GameObject makePyramid(Texture2D[] balls, bool diamond)
	{
		return null;
	}

	[Token(Token = "0x6000394")]
	[Address(RVA = "0x1096BD0", Offset = "0x1096BD0", VA = "0x1096BD0", Slot = "14")]
	public override bool isFinished()
	{
		return default(bool);
	}

	[Token(Token = "0x6000395")]
	[Address(RVA = "0x1096BE0", Offset = "0x1096BE0", VA = "0x1096BE0")]
	private Vector2 worldToPlane(Vector2 vWorld)
	{
		return default(Vector2);
	}

	[Token(Token = "0x6000396")]
	[Address(RVA = "0x1096C50", Offset = "0x1096C50", VA = "0x1096C50")]
	private Vector2 planeToWorld(Vector2 vPlane)
	{
		return default(Vector2);
	}

	[Token(Token = "0x6000397")]
	[Address(RVA = "0x10910A0", Offset = "0x10910A0", VA = "0x10910A0")]
	public void getKeyboardInputNeeded(out string _title, out string _startValue)
	{
	}

	[Token(Token = "0x6000398")]
	[Address(RVA = "0x1096CB4", Offset = "0x1096CB4", VA = "0x1096CB4", Slot = "5")]
	public override void update()
	{
	}

	[Token(Token = "0x6000399")]
	[Address(RVA = "0x1096590", Offset = "0x1096590", VA = "0x1096590")]
	private float getWorldScale()
	{
		return default(float);
	}

	[Token(Token = "0x600039A")]
	[Address(RVA = "0x10975FC", Offset = "0x10975FC", VA = "0x10975FC")]
	private void updateProperties()
	{
	}

	[Token(Token = "0x600039B")]
	[Address(RVA = "0x1097550", Offset = "0x1097550", VA = "0x1097550")]
	private Vector2 getCursorWorldPos(Ray _ray)
	{
		return default(Vector2);
	}

	[Token(Token = "0x600039C")]
	[Address(RVA = "0x1097924", Offset = "0x1097924", VA = "0x1097924")]
	private Vector2 getCursorPlanePos(Ray _ray)
	{
		return default(Vector2);
	}

	[Token(Token = "0x600039D")]
	[Address(RVA = "0x1097590", Offset = "0x1097590", VA = "0x1097590")]
	private void updateState()
	{
	}

	[Token(Token = "0x600039E")]
	[Address(RVA = "0x1095288", Offset = "0x1095288", VA = "0x1095288")]
	private void setState(State s)
	{
	}

	[Token(Token = "0x600039F")]
	[Address(RVA = "0x1094ACC", Offset = "0x1094ACC", VA = "0x1094ACC")]
	private void setSelection(CTable.Item _item, int index = -1)
	{
	}

	[Token(Token = "0x60003A0")]
	[Address(RVA = "0x109796C", Offset = "0x109796C", VA = "0x109796C")]
	public RetCode getRetCode()
	{
		return default(RetCode);
	}

	[Token(Token = "0x60003A1")]
	[Address(RVA = "0x1097974", Offset = "0x1097974", VA = "0x1097974")]
	public ModeEditTable()
	{
	}

	[Token(Token = "0x60003A2")]
	[Address(RVA = "0x1097C38", Offset = "0x1097C38", VA = "0x1097C38")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x442578", Offset = "0x442578")]
	private void <init>b__98_0()
	{
	}

	[Token(Token = "0x60003A3")]
	[Address(RVA = "0x1097C3C", Offset = "0x1097C3C", VA = "0x1097C3C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x442588", Offset = "0x442588")]
	private void <init>b__98_1()
	{
	}
}
[Token(Token = "0x2000078")]
public class ModeGame : Mode
{
	[Token(Token = "0x2000203")]
	public class SBase
	{
		[Token(Token = "0x4000DD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		protected bool finished;

		[Token(Token = "0x6000D93")]
		[Address(RVA = "0x843970", Offset = "0x843970", VA = "0x843970")]
		public bool isFinished()
		{
			return default(bool);
		}

		[Token(Token = "0x6000D94")]
		[Address(RVA = "0x843978", Offset = "0x843978", VA = "0x843978", Slot = "4")]
		public virtual void enter()
		{
		}

		[Token(Token = "0x6000D95")]
		[Address(RVA = "0x843980", Offset = "0x843980", VA = "0x843980", Slot = "5")]
		public virtual void exit()
		{
		}

		[Token(Token = "0x6000D96")]
		[Address(RVA = "0x843984", Offset = "0x843984", VA = "0x843984", Slot = "6")]
		public virtual void update()
		{
		}

		[Token(Token = "0x6000D97")]
		[Address(RVA = "0x843988", Offset = "0x843988", VA = "0x843988")]
		public SBase()
		{
		}
	}

	[Token(Token = "0x4000453")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject userTablePrefab;

	[Token(Token = "0x4000454")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ErrorPanel errorPanel;

	[Token(Token = "0x4000455")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public StatusPanel statusPanel;

	[Token(Token = "0x4000456")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float timeStep;

	[Token(Token = "0x4000457")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject humanRoot;

	[Token(Token = "0x4000458")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	protected RTableMesh userTable;

	[Token(Token = "0x4000459")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	protected IHumanPlayer humanPlayer;

	[Token(Token = "0x400045A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	protected GameSetup gameSetup;

	[Token(Token = "0x400045B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	protected BDescGame descGame;

	[Token(Token = "0x400045C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	protected BSimBoss simBoss;

	[Token(Token = "0x400045D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	protected BAnimHead animHead;

	[Token(Token = "0x400045E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	protected float stateTime;

	[Token(Token = "0x400045F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private int iframe;

	[Token(Token = "0x4000460")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	protected SBase currentState;

	[Token(Token = "0x4000461")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	protected BDescGame customDescGame;

	[Token(Token = "0x60003A4")]
	[Address(RVA = "0x7130AC", Offset = "0x7130AC", VA = "0x7130AC", Slot = "17")]
	public virtual void init()
	{
	}

	[Token(Token = "0x60003A5")]
	[Address(RVA = "0x7131E0", Offset = "0x7131E0", VA = "0x7131E0", Slot = "11")]
	public override void awake()
	{
	}

	[Token(Token = "0x60003A6")]
	[Address(RVA = "0x713250", Offset = "0x713250", VA = "0x713250")]
	protected void loadCustomTable()
	{
	}

	[Token(Token = "0x60003A7")]
	[Address(RVA = "0x71331C", Offset = "0x71331C", VA = "0x71331C")]
	protected void initSim()
	{
	}

	[Token(Token = "0x60003A8")]
	[Address(RVA = "0x713558", Offset = "0x713558", VA = "0x713558")]
	protected bool isCustomTable()
	{
		return default(bool);
	}

	[Token(Token = "0x60003A9")]
	[Address(RVA = "0x71357C", Offset = "0x71357C", VA = "0x71357C")]
	public Vector3 swapYZ(Vector3 v)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60003AA")]
	[Address(RVA = "0x71358C", Offset = "0x71358C", VA = "0x71358C", Slot = "14")]
	public override bool isFinished()
	{
		return default(bool);
	}

	[Token(Token = "0x60003AB")]
	[Address(RVA = "0x7135F0", Offset = "0x7135F0", VA = "0x7135F0", Slot = "5")]
	public override void update()
	{
	}

	[Token(Token = "0x60003AC")]
	[Address(RVA = "0x713664", Offset = "0x713664", VA = "0x713664", Slot = "18")]
	public virtual void setState(SBase _state)
	{
	}

	[Token(Token = "0x60003AD")]
	[Address(RVA = "0x7136D8", Offset = "0x7136D8", VA = "0x7136D8")]
	public ModeGame()
	{
	}
}
[Token(Token = "0x2000079")]
public class ModeHelp : Mode
{
	[Token(Token = "0x2000204")]
	public enum Panel
	{
		[Token(Token = "0x4000DD3")]
		sixDof,
		[Token(Token = "0x4000DD4")]
		threeDof,
		[Token(Token = "0x4000DD5")]
		phone
	}

	[Token(Token = "0x4000462")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject root;

	[Token(Token = "0x4000463")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Image tickImage;

	[Token(Token = "0x4000464")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject[] panels_6dof;

	[Token(Token = "0x4000465")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject[] panels_3dof;

	[Token(Token = "0x4000466")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject[] panels_phone;

	[Token(Token = "0x4000467")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private GameObject[] panels;

	[Token(Token = "0x4000468")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool finished;

	[Token(Token = "0x4000469")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
	private bool cancelled;

	[Token(Token = "0x400046A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4A")]
	private bool showQuickStart;

	[Token(Token = "0x400046B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private int page;

	[Token(Token = "0x60003AE")]
	[Address(RVA = "0x7136E0", Offset = "0x7136E0", VA = "0x7136E0")]
	public void setPanel(Panel _panel)
	{
	}

	[Token(Token = "0x60003AF")]
	[Address(RVA = "0x713818", Offset = "0x713818", VA = "0x713818")]
	public void buttonShowAgain()
	{
	}

	[Token(Token = "0x60003B0")]
	[Address(RVA = "0x713828", Offset = "0x713828", VA = "0x713828", Slot = "10")]
	public override void exit()
	{
	}

	[Token(Token = "0x60003B1")]
	[Address(RVA = "0x7138AC", Offset = "0x7138AC", VA = "0x7138AC", Slot = "9")]
	public override void enter()
	{
	}

	[Token(Token = "0x60003B2")]
	[Address(RVA = "0x713A04", Offset = "0x713A04", VA = "0x713A04")]
	private void setPage(int _page)
	{
	}

	[Token(Token = "0x60003B3")]
	[Address(RVA = "0x713A90", Offset = "0x713A90", VA = "0x713A90", Slot = "5")]
	public override void update()
	{
	}

	[Token(Token = "0x60003B4")]
	[Address(RVA = "0x713B8C", Offset = "0x713B8C", VA = "0x713B8C", Slot = "12")]
	public override void enableGui(bool _enable)
	{
	}

	[Token(Token = "0x60003B5")]
	[Address(RVA = "0x713BCC", Offset = "0x713BCC", VA = "0x713BCC", Slot = "14")]
	public override bool isFinished()
	{
		return default(bool);
	}

	[Token(Token = "0x60003B6")]
	[Address(RVA = "0x713BD4", Offset = "0x713BD4", VA = "0x713BD4")]
	public bool isCancelled()
	{
		return default(bool);
	}

	[Token(Token = "0x60003B7")]
	[Address(RVA = "0x713B74", Offset = "0x713B74", VA = "0x713B74")]
	public void buttonCancel()
	{
	}

	[Token(Token = "0x60003B8")]
	[Address(RVA = "0x713B80", Offset = "0x713B80", VA = "0x713B80")]
	public void buttonOkay()
	{
	}

	[Token(Token = "0x60003B9")]
	[Address(RVA = "0x713BDC", Offset = "0x713BDC", VA = "0x713BDC")]
	public void buttonNextPage()
	{
	}

	[Token(Token = "0x60003BA")]
	[Address(RVA = "0x713BE8", Offset = "0x713BE8", VA = "0x713BE8")]
	public void buttonLastPage()
	{
	}

	[Token(Token = "0x60003BB")]
	[Address(RVA = "0x713BF4", Offset = "0x713BF4", VA = "0x713BF4")]
	public ModeHelp()
	{
	}
}
[Token(Token = "0x200007A")]
public class ModeKeyboard : Mode, IKeyboard
{
	[Token(Token = "0x400046C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float questKeyboarDistance;

	[Token(Token = "0x400046D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject root;

	[Token(Token = "0x400046E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public KeyBoss keyBoss;

	[Token(Token = "0x400046F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Text title;

	[Token(Token = "0x4000470")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public InputField inputField;

	[Token(Token = "0x4000471")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject rootVr;

	[Token(Token = "0x4000472")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject rootMonitor;

	[Token(Token = "0x4000473")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject qCanvas;

	[Token(Token = "0x4000474")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Text qText;

	[Token(Token = "0x4000475")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Text qTitle;

	[Token(Token = "0x4000476")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private KeyboardState retCode;

	[Token(Token = "0x4000477")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private TouchScreenKeyboard qKeyboard;

	[Token(Token = "0x60003BC")]
	[Address(RVA = "0x713BFC", Offset = "0x713BFC", VA = "0x713BFC", Slot = "17")]
	public void setTitle(string _title)
	{
	}

	[Token(Token = "0x60003BD")]
	[Address(RVA = "0x713C50", Offset = "0x713C50", VA = "0x713C50", Slot = "18")]
	public void setString(string _startString, int _maxChar)
	{
	}

	[Token(Token = "0x60003BE")]
	[Address(RVA = "0x713D90", Offset = "0x713D90", VA = "0x713D90", Slot = "19")]
	public string getString()
	{
		return null;
	}

	[Token(Token = "0x60003BF")]
	[Address(RVA = "0x713E80", Offset = "0x713E80", VA = "0x713E80", Slot = "9")]
	public override void enter()
	{
	}

	[Token(Token = "0x60003C0")]
	[Address(RVA = "0x714048", Offset = "0x714048", VA = "0x714048", Slot = "5")]
	public override void update()
	{
	}

	[Token(Token = "0x60003C1")]
	[Address(RVA = "0x7141D4", Offset = "0x7141D4", VA = "0x7141D4")]
	private void updateQuestTextPosition()
	{
	}

	[Token(Token = "0x60003C2")]
	[Address(RVA = "0x7143A4", Offset = "0x7143A4", VA = "0x7143A4")]
	public void buttonOkay()
	{
	}

	[Token(Token = "0x60003C3")]
	[Address(RVA = "0x7141C8", Offset = "0x7141C8", VA = "0x7141C8")]
	public void buttonCancel()
	{
	}

	[Token(Token = "0x60003C4")]
	[Address(RVA = "0x7143B0", Offset = "0x7143B0", VA = "0x7143B0", Slot = "12")]
	public override void enableGui(bool _enable)
	{
	}

	[Token(Token = "0x60003C5")]
	[Address(RVA = "0x714470", Offset = "0x714470", VA = "0x714470", Slot = "14")]
	public override bool isFinished()
	{
		return default(bool);
	}

	[Token(Token = "0x60003C6")]
	[Address(RVA = "0x714480", Offset = "0x714480", VA = "0x714480", Slot = "20")]
	public KeyboardState getRetCode()
	{
		return default(KeyboardState);
	}

	[Token(Token = "0x60003C7")]
	[Address(RVA = "0x714488", Offset = "0x714488", VA = "0x714488")]
	public ModeKeyboard()
	{
	}
}
[Token(Token = "0x200007B")]
public class ModeLanguage : Mode
{
	[Token(Token = "0x2000205")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x43F478", Offset = "0x43F478")]
	private sealed class <>c__DisplayClass10_0
	{
		[Token(Token = "0x4000DD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public ModeLanguage <>4__this;

		[Token(Token = "0x4000DD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int xx;

		[Token(Token = "0x6000D98")]
		[Address(RVA = "0x843990", Offset = "0x843990", VA = "0x843990")]
		public <>c__DisplayClass10_0()
		{
		}

		[Token(Token = "0x6000D99")]
		[Address(RVA = "0x843998", Offset = "0x843998", VA = "0x843998")]
		internal void <addItem>b__0()
		{
		}
	}

	[Token(Token = "0x4000478")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject root;

	[Token(Token = "0x4000479")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject itemTemplate;

	[Token(Token = "0x400047A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool finished;

	[Token(Token = "0x400047B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private int selection;

	[Token(Token = "0x400047C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private List<GameObject> items;

	[Token(Token = "0x400047D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool canCancel;

	[Token(Token = "0x60003C8")]
	[Address(RVA = "0x714490", Offset = "0x714490", VA = "0x714490")]
	private void Awake()
	{
	}

	[Token(Token = "0x60003C9")]
	[Address(RVA = "0x7144B0", Offset = "0x7144B0", VA = "0x7144B0", Slot = "9")]
	public override void enter()
	{
	}

	[Token(Token = "0x60003CA")]
	[Address(RVA = "0x7148E4", Offset = "0x7148E4", VA = "0x7148E4", Slot = "5")]
	public override void update()
	{
	}

	[Token(Token = "0x60003CB")]
	[Address(RVA = "0x7149E0", Offset = "0x7149E0", VA = "0x7149E0")]
	public void setCanCancel(bool _flag)
	{
	}

	[Token(Token = "0x60003CC")]
	[Address(RVA = "0x7145EC", Offset = "0x7145EC", VA = "0x7145EC")]
	public void addItem(string _item)
	{
	}

	[Token(Token = "0x60003CD")]
	[Address(RVA = "0x7149D0", Offset = "0x7149D0", VA = "0x7149D0")]
	public void buttonItem(int _index)
	{
	}

	[Token(Token = "0x60003CE")]
	[Address(RVA = "0x7149EC", Offset = "0x7149EC", VA = "0x7149EC")]
	public int getSelection()
	{
		return default(int);
	}

	[Token(Token = "0x60003CF")]
	[Address(RVA = "0x7149F4", Offset = "0x7149F4", VA = "0x7149F4", Slot = "12")]
	public override void enableGui(bool _enable)
	{
	}

	[Token(Token = "0x60003D0")]
	[Address(RVA = "0x714A34", Offset = "0x714A34", VA = "0x714A34", Slot = "14")]
	public override bool isFinished()
	{
		return default(bool);
	}

	[Token(Token = "0x60003D1")]
	[Address(RVA = "0x714A3C", Offset = "0x714A3C", VA = "0x714A3C")]
	public ModeLanguage()
	{
	}
}
[Token(Token = "0x200007C")]
public class ModeLesson : Mode
{
	[Token(Token = "0x400047E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public RectTransform arrowImage;

	[Token(Token = "0x400047F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Text description;

	[Token(Token = "0x4000480")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Text title;

	[Token(Token = "0x4000481")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject root;

	[Token(Token = "0x4000482")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float glowPeriod;

	[Token(Token = "0x4000483")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float titleTime;

	[Token(Token = "0x4000484")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject lessonMonitor;

	[Token(Token = "0x4000485")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject lessonVr;

	[Token(Token = "0x4000486")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public RectTransform descriptionBox;

	[Token(Token = "0x4000487")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private GameObject lesson;

	[Token(Token = "0x4000488")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private int iPage;

	[Token(Token = "0x4000489")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private int iItem;

	[Token(Token = "0x400048A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private float time;

	[Token(Token = "0x400048B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private GameObject page;

	[Token(Token = "0x400048C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private bool finished;

	[Token(Token = "0x400048D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private Color lo;

	[Token(Token = "0x400048E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private Color hi;

	[Token(Token = "0x400048F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	private float glowTime;

	[Token(Token = "0x4000490")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private Color glowColor;

	[Token(Token = "0x4000491")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private bool initted;

	[Token(Token = "0x4000492")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private List<GameObject> pages;

	[Token(Token = "0x4000493")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private LessonBox[] lessonBoxes;

	[Token(Token = "0x4000494")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private float containerWidth;

	[Token(Token = "0x4000495")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	private float containerHeight;

	[Token(Token = "0x4000496")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private float containerAspect;

	[Token(Token = "0x60003D2")]
	[Address(RVA = "0x714A44", Offset = "0x714A44", VA = "0x714A44")]
	private void init()
	{
	}

	[Token(Token = "0x60003D3")]
	[Address(RVA = "0x714A5C", Offset = "0x714A5C", VA = "0x714A5C", Slot = "9")]
	public override void enter()
	{
	}

	[Token(Token = "0x60003D4")]
	[Address(RVA = "0x715044", Offset = "0x715044", VA = "0x715044", Slot = "12")]
	public override void enableGui(bool _enable)
	{
	}

	[Token(Token = "0x60003D5")]
	[Address(RVA = "0x714CB4", Offset = "0x714CB4", VA = "0x714CB4")]
	private void startLesson(GameObject _lesson)
	{
	}

	[Token(Token = "0x60003D6")]
	[Address(RVA = "0x7154C8", Offset = "0x7154C8", VA = "0x7154C8")]
	private void Update()
	{
	}

	[Token(Token = "0x60003D7")]
	[Address(RVA = "0x716138", Offset = "0x716138", VA = "0x716138", Slot = "14")]
	public override bool isFinished()
	{
		return default(bool);
	}

	[Token(Token = "0x60003D8")]
	[Address(RVA = "0x715E1C", Offset = "0x715E1C", VA = "0x715E1C")]
	public void buttonQuit()
	{
	}

	[Token(Token = "0x60003D9")]
	[Address(RVA = "0x715084", Offset = "0x715084", VA = "0x715084")]
	private bool nextPage()
	{
		return default(bool);
	}

	[Token(Token = "0x60003DA")]
	[Address(RVA = "0x716140", Offset = "0x716140", VA = "0x716140")]
	private Canvas getCanvas(Transform t)
	{
		return null;
	}

	[Token(Token = "0x60003DB")]
	[Address(RVA = "0x715810", Offset = "0x715810", VA = "0x715810")]
	private void placeDescriptionBox(RectTransform screen, RectTransform box, RectTransform target)
	{
	}

	[Token(Token = "0x60003DC")]
	[Address(RVA = "0x715E28", Offset = "0x715E28", VA = "0x715E28")]
	private bool nextItem()
	{
		return default(bool);
	}

	[Token(Token = "0x60003DD")]
	[Address(RVA = "0x716228", Offset = "0x716228", VA = "0x716228")]
	public ModeLesson()
	{
	}
}
[Token(Token = "0x200007D")]
public class ModeMenu : Mode
{
	[Token(Token = "0x2000206")]
	public enum Item
	{
		[Token(Token = "0x4000DD9")]
		NONE,
		[Token(Token = "0x4000DDA")]
		CANCEL,
		[Token(Token = "0x4000DDB")]
		ABOUT,
		[Token(Token = "0x4000DDC")]
		NETWORK_GAME,
		[Token(Token = "0x4000DDD")]
		ONE_PLAYER,
		[Token(Token = "0x4000DDE")]
		HOST,
		[Token(Token = "0x4000DDF")]
		CLIENT,
		[Token(Token = "0x4000DE0")]
		PLAY,
		[Token(Token = "0x4000DE1")]
		SETTINGS,
		[Token(Token = "0x4000DE2")]
		TITLE_MAIN,
		[Token(Token = "0x4000DE3")]
		TITLE_PLAY,
		[Token(Token = "0x4000DE4")]
		TITLE_NETWORK_GAME,
		[Token(Token = "0x4000DE5")]
		TITLE_EXIT_GAME,
		[Token(Token = "0x4000DE6")]
		CHANGE_LANGUAGE,
		[Token(Token = "0x4000DE7")]
		CONSTANTS,
		[Token(Token = "0x4000DE8")]
		LESSON,
		[Token(Token = "0x4000DE9")]
		YES,
		[Token(Token = "0x4000DEA")]
		NO,
		[Token(Token = "0x4000DEB")]
		PLAYBACK,
		[Token(Token = "0x4000DEC")]
		EDIT_TABLE,
		[Token(Token = "0x4000DED")]
		NEW,
		[Token(Token = "0x4000DEE")]
		TABLE_LOAD,
		[Token(Token = "0x4000DEF")]
		TABLE_NEW,
		[Token(Token = "0x4000DF0")]
		TABLE_SAVE,
		[Token(Token = "0x4000DF1")]
		TABLE_MENU,
		[Token(Token = "0x4000DF2")]
		TABLE_PREVIEW,
		[Token(Token = "0x4000DF3")]
		TITLE_UNSAVED_CHANGES,
		[Token(Token = "0x4000DF4")]
		SAVE,
		[Token(Token = "0x4000DF5")]
		DONT_SAVE,
		[Token(Token = "0x4000DF6")]
		TITLE_BAD_TABLE,
		[Token(Token = "0x4000DF7")]
		ACCEPT_BAD_TABLE
	}

	[Token(Token = "0x2000207")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x43F488", Offset = "0x43F488")]
	private sealed class <>c__DisplayClass12_0
	{
		[Token(Token = "0x4000DF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public ModeMenu <>4__this;

		[Token(Token = "0x4000DF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Item _item;

		[Token(Token = "0x6000D9A")]
		[Address(RVA = "0x8439BC", Offset = "0x8439BC", VA = "0x8439BC")]
		public <>c__DisplayClass12_0()
		{
		}

		[Token(Token = "0x6000D9B")]
		[Address(RVA = "0x8439C4", Offset = "0x8439C4", VA = "0x8439C4")]
		internal void <addItem>b__0()
		{
		}
	}

	[Token(Token = "0x4000497")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject root;

	[Token(Token = "0x4000498")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject languageButton;

	[Token(Token = "0x4000499")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject cancelButton;

	[Token(Token = "0x400049A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject itemTemplate;

	[Token(Token = "0x400049B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Text title;

	[Token(Token = "0x400049C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Item selectedItem;

	[Token(Token = "0x400049D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private Item titleItem;

	[Token(Token = "0x400049E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private List<GameObject> items;

	[Token(Token = "0x60003DE")]
	[Address(RVA = "0x7162B4", Offset = "0x7162B4", VA = "0x7162B4")]
	public Item getSelectedItem()
	{
		return default(Item);
	}

	[Token(Token = "0x60003DF")]
	[Address(RVA = "0x7162BC", Offset = "0x7162BC", VA = "0x7162BC")]
	private void Awake()
	{
	}

	[Token(Token = "0x60003E0")]
	[Address(RVA = "0x7162DC", Offset = "0x7162DC", VA = "0x7162DC")]
	public void reset(Item _title, bool _languageButton = false)
	{
	}

	[Token(Token = "0x60003E1")]
	[Address(RVA = "0x716548", Offset = "0x716548", VA = "0x716548")]
	public Item getTitle()
	{
		return default(Item);
	}

	[Token(Token = "0x60003E2")]
	[Address(RVA = "0x716550", Offset = "0x716550", VA = "0x716550")]
	public void addItem(Item _item)
	{
	}

	[Token(Token = "0x60003E3")]
	[Address(RVA = "0x71691C", Offset = "0x71691C", VA = "0x71691C")]
	public void buttonItem(Item _item)
	{
	}

	[Token(Token = "0x60003E4")]
	[Address(RVA = "0x716924", Offset = "0x716924", VA = "0x716924")]
	public void buttonLanguage()
	{
	}

	[Token(Token = "0x60003E5")]
	[Address(RVA = "0x716930", Offset = "0x716930", VA = "0x716930", Slot = "9")]
	public override void enter()
	{
	}

	[Token(Token = "0x60003E6")]
	[Address(RVA = "0x716958", Offset = "0x716958", VA = "0x716958")]
	public void buttonCancel()
	{
	}

	[Token(Token = "0x60003E7")]
	[Address(RVA = "0x716964", Offset = "0x716964", VA = "0x716964", Slot = "5")]
	public override void update()
	{
	}

	[Token(Token = "0x60003E8")]
	[Address(RVA = "0x716A80", Offset = "0x716A80", VA = "0x716A80")]
	private void selectByIndex(int _index)
	{
	}

	[Token(Token = "0x60003E9")]
	[Address(RVA = "0x716B34", Offset = "0x716B34", VA = "0x716B34", Slot = "12")]
	public override void enableGui(bool _enable)
	{
	}

	[Token(Token = "0x60003EA")]
	[Address(RVA = "0x716B74", Offset = "0x716B74", VA = "0x716B74", Slot = "14")]
	public override bool isFinished()
	{
		return default(bool);
	}

	[Token(Token = "0x60003EB")]
	[Address(RVA = "0x716B84", Offset = "0x716B84", VA = "0x716B84")]
	public ModeMenu()
	{
	}
}
[Token(Token = "0x200007E")]
public class ModeMessage : Mode
{
	[Token(Token = "0x2000208")]
	public enum Ret
	{
		[Token(Token = "0x4000DFB")]
		okay,
		[Token(Token = "0x4000DFC")]
		busy
	}

	[Token(Token = "0x400049F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject root;

	[Token(Token = "0x40004A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Text title;

	[Token(Token = "0x40004A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Text message;

	[Token(Token = "0x40004A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Ret ret;

	[Token(Token = "0x40004A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private string titleKey;

	[Token(Token = "0x60003EC")]
	[Address(RVA = "0x716C08", Offset = "0x716C08", VA = "0x716C08")]
	public string getTitleKey()
	{
		return null;
	}

	[Token(Token = "0x60003ED")]
	[Address(RVA = "0x716C10", Offset = "0x716C10", VA = "0x716C10", Slot = "9")]
	public override void enter()
	{
	}

	[Token(Token = "0x60003EE")]
	[Address(RVA = "0x716D18", Offset = "0x716D18", VA = "0x716D18", Slot = "12")]
	public override void enableGui(bool _enable)
	{
	}

	[Token(Token = "0x60003EF")]
	[Address(RVA = "0x716D58", Offset = "0x716D58", VA = "0x716D58")]
	public void init(string _titleKey, string _messageKey)
	{
	}

	[Token(Token = "0x60003F0")]
	[Address(RVA = "0x716E34", Offset = "0x716E34", VA = "0x716E34", Slot = "14")]
	public override bool isFinished()
	{
		return default(bool);
	}

	[Token(Token = "0x60003F1")]
	[Address(RVA = "0x716E44", Offset = "0x716E44", VA = "0x716E44")]
	public Ret getRet()
	{
		return default(Ret);
	}

	[Token(Token = "0x60003F2")]
	[Address(RVA = "0x716E4C", Offset = "0x716E4C", VA = "0x716E4C")]
	public void buttonOkay()
	{
	}

	[Token(Token = "0x60003F3")]
	[Address(RVA = "0x716E54", Offset = "0x716E54", VA = "0x716E54")]
	public ModeMessage()
	{
	}
}
[Token(Token = "0x200007F")]
public class ModeNet : ModeGame
{
	[Token(Token = "0x2000209")]
	public class SBaseNet : SBase
	{
		[Token(Token = "0x6000D9C")]
		[Address(RVA = "0x8439E4", Offset = "0x8439E4", VA = "0x8439E4", Slot = "7")]
		public virtual bool receiveMessage(MyMessage _message)
		{
			return default(bool);
		}

		[Token(Token = "0x6000D9D")]
		[Address(RVA = "0x843AE8", Offset = "0x843AE8", VA = "0x843AE8")]
		public SBaseNet()
		{
		}
	}

	[Token(Token = "0x40004A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public INetBoss coordinator;

	[Token(Token = "0x40004A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	protected readonly string roomName;

	[Token(Token = "0x40004A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	protected string ipAddress;

	[Token(Token = "0x40004A7")]
	protected const float timeout = 4f;

	[Token(Token = "0x40004A8")]
	protected const float waitLoadingTime = 2f;

	[Token(Token = "0x60003F4")]
	[Address(RVA = "0x716E5C", Offset = "0x716E5C", VA = "0x716E5C", Slot = "10")]
	public override void exit()
	{
	}

	[Token(Token = "0x60003F5")]
	[Address(RVA = "0x716FFC", Offset = "0x716FFC", VA = "0x716FFC", Slot = "9")]
	public override void enter()
	{
	}

	[Token(Token = "0x60003F6")]
	[Address(RVA = "0x717178", Offset = "0x717178", VA = "0x717178", Slot = "18")]
	public override void setState(SBase _state)
	{
	}

	[Token(Token = "0x60003F7")]
	[Address(RVA = "0x71717C", Offset = "0x71717C", VA = "0x71717C", Slot = "19")]
	public virtual bool sendMessage(MyMessage _message)
	{
		return default(bool);
	}

	[Token(Token = "0x60003F8")]
	[Address(RVA = "0x717234", Offset = "0x717234", VA = "0x717234")]
	protected void messageToOthers(MyMessage _message)
	{
	}

	[Token(Token = "0x60003F9")]
	[Address(RVA = "0x7172FC", Offset = "0x7172FC", VA = "0x7172FC", Slot = "20")]
	public virtual void OnLeftRoom()
	{
	}

	[Token(Token = "0x60003FA")]
	[Address(RVA = "0x717300", Offset = "0x717300", VA = "0x717300", Slot = "21")]
	public virtual void OnJoinedRoom()
	{
	}

	[Token(Token = "0x60003FB")]
	[Address(RVA = "0x717304", Offset = "0x717304", VA = "0x717304", Slot = "22")]
	public virtual void OnJoinRoomFailed(short returnCode, string message)
	{
	}

	[Token(Token = "0x60003FC")]
	[Address(RVA = "0x717378", Offset = "0x717378", VA = "0x717378", Slot = "23")]
	public virtual void OnDisconnected()
	{
	}

	[Token(Token = "0x60003FD")]
	[Address(RVA = "0x7173EC", Offset = "0x7173EC", VA = "0x7173EC", Slot = "24")]
	public virtual void OnCreatedRoom()
	{
	}

	[Token(Token = "0x60003FE")]
	[Address(RVA = "0x717460", Offset = "0x717460", VA = "0x717460", Slot = "25")]
	public virtual void OnPlayerEnteredRoom()
	{
	}

	[Token(Token = "0x60003FF")]
	[Address(RVA = "0x7174D4", Offset = "0x7174D4", VA = "0x7174D4")]
	public ModeNet()
	{
	}
}
[Token(Token = "0x2000080")]
public class ModeNetClient : ModeNet
{
	[Token(Token = "0x200020A")]
	public class SNetClient : SBaseNet
	{
		[Token(Token = "0x4000DFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ModeNetClient B;

		[Token(Token = "0x6000D9E")]
		[Address(RVA = "0x844488", Offset = "0x844488", VA = "0x844488", Slot = "7")]
		public override bool receiveMessage(MyMessage _message)
		{
			return default(bool);
		}

		[Token(Token = "0x6000D9F")]
		[Address(RVA = "0x844904", Offset = "0x844904", VA = "0x844904")]
		public SNetClient()
		{
		}
	}

	[Token(Token = "0x200020B")]
	public class SIdle : SNetClient
	{
		[Token(Token = "0x6000DA0")]
		[Address(RVA = "0x845718", Offset = "0x845718", VA = "0x845718")]
		public SIdle()
		{
		}
	}

	[Token(Token = "0x200020C")]
	public class SAcceptGame : SNetClient
	{
		[Token(Token = "0x4000DFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		private bool sentReadyMessage;

		[Token(Token = "0x6000DA1")]
		[Address(RVA = "0x843AF0", Offset = "0x843AF0", VA = "0x843AF0", Slot = "4")]
		public override void enter()
		{
		}

		[Token(Token = "0x6000DA2")]
		[Address(RVA = "0x843DF8", Offset = "0x843DF8", VA = "0x843DF8", Slot = "5")]
		public override void exit()
		{
		}

		[Token(Token = "0x6000DA3")]
		[Address(RVA = "0x843E98", Offset = "0x843E98", VA = "0x843E98", Slot = "6")]
		public override void update()
		{
		}

		[Token(Token = "0x6000DA4")]
		[Address(RVA = "0x844054", Offset = "0x844054", VA = "0x844054", Slot = "7")]
		public override bool receiveMessage(MyMessage _message)
		{
			return default(bool);
		}

		[Token(Token = "0x6000DA5")]
		[Address(RVA = "0x8448FC", Offset = "0x8448FC", VA = "0x8448FC")]
		public SAcceptGame()
		{
		}
	}

	[Token(Token = "0x200020D")]
	public class SJoiningRoom : SNetClient
	{
		[Token(Token = "0x6000DA6")]
		[Address(RVA = "0x8457FC", Offset = "0x8457FC", VA = "0x8457FC", Slot = "4")]
		public override void enter()
		{
		}

		[Token(Token = "0x6000DA7")]
		[Address(RVA = "0x845940", Offset = "0x845940", VA = "0x845940", Slot = "5")]
		public override void exit()
		{
		}

		[Token(Token = "0x6000DA8")]
		[Address(RVA = "0x845944", Offset = "0x845944", VA = "0x845944", Slot = "7")]
		public override bool receiveMessage(MyMessage _message)
		{
			return default(bool);
		}

		[Token(Token = "0x6000DA9")]
		[Address(RVA = "0x845968", Offset = "0x845968", VA = "0x845968")]
		public SJoiningRoom()
		{
		}
	}

	[Token(Token = "0x200020E")]
	public class SInRoom : SNetClient
	{
		[Token(Token = "0x4000DFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		private bool error;

		[Token(Token = "0x6000DAA")]
		[Address(RVA = "0x845720", Offset = "0x845720", VA = "0x845720")]
		public bool isError()
		{
			return default(bool);
		}

		[Token(Token = "0x6000DAB")]
		[Address(RVA = "0x845728", Offset = "0x845728", VA = "0x845728", Slot = "4")]
		public override void enter()
		{
		}

		[Token(Token = "0x6000DAC")]
		[Address(RVA = "0x8457CC", Offset = "0x8457CC", VA = "0x8457CC", Slot = "6")]
		public override void update()
		{
		}

		[Token(Token = "0x6000DAD")]
		[Address(RVA = "0x8457D0", Offset = "0x8457D0", VA = "0x8457D0", Slot = "7")]
		public override bool receiveMessage(MyMessage _message)
		{
			return default(bool);
		}

		[Token(Token = "0x6000DAE")]
		[Address(RVA = "0x8457F4", Offset = "0x8457F4", VA = "0x8457F4")]
		public SInRoom()
		{
		}
	}

	[Token(Token = "0x200020F")]
	public class SWaitPlayerReadyStart : SNetClient
	{
		[Token(Token = "0x6000DAF")]
		[Address(RVA = "0x8467E8", Offset = "0x8467E8", VA = "0x8467E8", Slot = "6")]
		public override void update()
		{
		}

		[Token(Token = "0x6000DB0")]
		[Address(RVA = "0x8469A0", Offset = "0x8469A0", VA = "0x8469A0")]
		public SWaitPlayerReadyStart()
		{
		}
	}

	[Token(Token = "0x2000210")]
	public class SCancel : SNetClient
	{
		[Token(Token = "0x6000DB1")]
		[Address(RVA = "0x84490C", Offset = "0x84490C", VA = "0x84490C")]
		public SCancel()
		{
		}
	}

	[Token(Token = "0x2000211")]
	public class SLoadingScene : SNetClient
	{
		[Token(Token = "0x6000DB2")]
		[Address(RVA = "0x845970", Offset = "0x845970", VA = "0x845970", Slot = "4")]
		public override void enter()
		{
		}

		[Token(Token = "0x6000DB3")]
		[Address(RVA = "0x845B48", Offset = "0x845B48", VA = "0x845B48")]
		private bool tableLoaded()
		{
			return default(bool);
		}

		[Token(Token = "0x6000DB4")]
		[Address(RVA = "0x845BB8", Offset = "0x845BB8", VA = "0x845BB8", Slot = "6")]
		public override void update()
		{
		}

		[Token(Token = "0x6000DB5")]
		[Address(RVA = "0x845CD8", Offset = "0x845CD8", VA = "0x845CD8")]
		public SLoadingScene()
		{
		}
	}

	[Token(Token = "0x2000212")]
	public class SStartingGame : SNetClient
	{
		[Token(Token = "0x6000DB6")]
		[Address(RVA = "0x846088", Offset = "0x846088", VA = "0x846088", Slot = "4")]
		public override void enter()
		{
		}

		[Token(Token = "0x6000DB7")]
		[Address(RVA = "0x846144", Offset = "0x846144", VA = "0x846144", Slot = "5")]
		public override void exit()
		{
		}

		[Token(Token = "0x6000DB8")]
		[Address(RVA = "0x846148", Offset = "0x846148", VA = "0x846148")]
		public SStartingGame()
		{
		}
	}

	[Token(Token = "0x2000213")]
	public class SShowShot : SNetClient
	{
		[Token(Token = "0x6000DB9")]
		[Address(RVA = "0x845F54", Offset = "0x845F54", VA = "0x845F54", Slot = "6")]
		public override void update()
		{
		}

		[Token(Token = "0x6000DBA")]
		[Address(RVA = "0x846080", Offset = "0x846080", VA = "0x846080")]
		public SShowShot()
		{
		}
	}

	[Token(Token = "0x2000214")]
	public class SShowMessage : SNetClient
	{
		[Token(Token = "0x6000DBB")]
		[Address(RVA = "0x845CE0", Offset = "0x845CE0", VA = "0x845CE0", Slot = "4")]
		public override void enter()
		{
		}

		[Token(Token = "0x6000DBC")]
		[Address(RVA = "0x845DC0", Offset = "0x845DC0", VA = "0x845DC0", Slot = "6")]
		public override void update()
		{
		}

		[Token(Token = "0x6000DBD")]
		[Address(RVA = "0x845F4C", Offset = "0x845F4C", VA = "0x845F4C")]
		public SShowMessage()
		{
		}
	}

	[Token(Token = "0x2000215")]
	public class SGetRequest : SNetClient
	{
		[Token(Token = "0x20002D9")]
		private enum Phase
		{
			[Token(Token = "0x400105F")]
			waitResponse,
			[Token(Token = "0x4001060")]
			encodingResponse,
			[Token(Token = "0x4001061")]
			waitShotShown
		}

		[Token(Token = "0x4000E00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private Phase phase;

		[Token(Token = "0x4000E01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private byte[] encodedResponse;

		[Token(Token = "0x6000DBE")]
		[Address(RVA = "0x8452B8", Offset = "0x8452B8", VA = "0x8452B8", Slot = "4")]
		public override void enter()
		{
		}

		[Token(Token = "0x6000DBF")]
		[Address(RVA = "0x8453BC", Offset = "0x8453BC", VA = "0x8453BC")]
		private void encode()
		{
		}

		[Token(Token = "0x6000DC0")]
		[Address(RVA = "0x845430", Offset = "0x845430", VA = "0x845430", Slot = "6")]
		public override void update()
		{
		}

		[Token(Token = "0x6000DC1")]
		[Address(RVA = "0x845710", Offset = "0x845710", VA = "0x845710")]
		public SGetRequest()
		{
		}
	}

	[Token(Token = "0x2000216")]
	public class SWaitHost : SNetClient
	{
		[Token(Token = "0x20002DA")]
		private enum Phase
		{
			[Token(Token = "0x4001063")]
			setLayout,
			[Token(Token = "0x4001064")]
			idle,
			[Token(Token = "0x4001065")]
			exiting
		}

		[Token(Token = "0x4000E02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private SNetClient wantedS;

		[Token(Token = "0x4000E03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Phase phase;

		[Token(Token = "0x4000E04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private MessageID lastMessage;

		[Token(Token = "0x4000E05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private byte[] lastMessageData;

		[Token(Token = "0x4000E06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private byte[] layoutData;

		[Token(Token = "0x4000E07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private BAnimHead ah;

		[Token(Token = "0x6000DC2")]
		[Address(RVA = "0x846150", Offset = "0x846150", VA = "0x846150", Slot = "4")]
		public override void enter()
		{
		}

		[Token(Token = "0x6000DC3")]
		[Address(RVA = "0x8461B4", Offset = "0x8461B4", VA = "0x8461B4")]
		public SNetClient getWantedState()
		{
			return null;
		}

		[Token(Token = "0x6000DC4")]
		[Address(RVA = "0x8461BC", Offset = "0x8461BC", VA = "0x8461BC", Slot = "6")]
		public override void update()
		{
		}

		[Token(Token = "0x6000DC5")]
		[Address(RVA = "0x8463C8", Offset = "0x8463C8", VA = "0x8463C8")]
		private void doMessage()
		{
		}

		[Token(Token = "0x6000DC6")]
		[Address(RVA = "0x8465B0", Offset = "0x8465B0", VA = "0x8465B0")]
		private void setLayout()
		{
		}

		[Token(Token = "0x6000DC7")]
		[Address(RVA = "0x8466C0", Offset = "0x8466C0", VA = "0x8466C0", Slot = "7")]
		public override bool receiveMessage(MyMessage _message)
		{
			return default(bool);
		}

		[Token(Token = "0x6000DC8")]
		[Address(RVA = "0x8467E0", Offset = "0x8467E0", VA = "0x8467E0")]
		public SWaitHost()
		{
		}
	}

	[Token(Token = "0x2000217")]
	public class SExit : SNetClient
	{
		[Token(Token = "0x6000DC9")]
		[Address(RVA = "0x844E84", Offset = "0x844E84", VA = "0x844E84", Slot = "4")]
		public override void enter()
		{
		}

		[Token(Token = "0x6000DCA")]
		[Address(RVA = "0x844FF4", Offset = "0x844FF4", VA = "0x844FF4", Slot = "6")]
		public override void update()
		{
		}

		[Token(Token = "0x6000DCB")]
		[Address(RVA = "0x845240", Offset = "0x845240", VA = "0x845240")]
		private bool tableUnloaded()
		{
			return default(bool);
		}

		[Token(Token = "0x6000DCC")]
		[Address(RVA = "0x8452B0", Offset = "0x8452B0", VA = "0x8452B0")]
		public SExit()
		{
		}
	}

	[Token(Token = "0x2000218")]
	public class SError : SNetClient
	{
		[Token(Token = "0x6000DCD")]
		[Address(RVA = "0x844D20", Offset = "0x844D20", VA = "0x844D20", Slot = "4")]
		public override void enter()
		{
		}

		[Token(Token = "0x6000DCE")]
		[Address(RVA = "0x844D98", Offset = "0x844D98", VA = "0x844D98", Slot = "5")]
		public override void exit()
		{
		}

		[Token(Token = "0x6000DCF")]
		[Address(RVA = "0x844E08", Offset = "0x844E08", VA = "0x844E08", Slot = "6")]
		public override void update()
		{
		}

		[Token(Token = "0x6000DD0")]
		[Address(RVA = "0x844E7C", Offset = "0x844E7C", VA = "0x844E7C")]
		public SError()
		{
		}
	}

	[Token(Token = "0x2000219")]
	public class SEnterIpHost : SNetClient
	{
		[Token(Token = "0x6000DD1")]
		[Address(RVA = "0x844914", Offset = "0x844914", VA = "0x844914", Slot = "4")]
		public override void enter()
		{
		}

		[Token(Token = "0x6000DD2")]
		[Address(RVA = "0x844A2C", Offset = "0x844A2C", VA = "0x844A2C", Slot = "5")]
		public override void exit()
		{
		}

		[Token(Token = "0x6000DD3")]
		[Address(RVA = "0x844ACC", Offset = "0x844ACC", VA = "0x844ACC", Slot = "6")]
		public override void update()
		{
		}

		[Token(Token = "0x6000DD4")]
		[Address(RVA = "0x844D18", Offset = "0x844D18", VA = "0x844D18")]
		public SEnterIpHost()
		{
		}
	}

	[Token(Token = "0x40004A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public EnterIp enterIp;

	[Token(Token = "0x40004AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private BMessage message;

	[Token(Token = "0x40004AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private AsyncOperation loadingTable;

	[Token(Token = "0x40004AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private AsyncOperation loadingStadium;

	[Token(Token = "0x40004AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private BSimCueInput cueInput;

	[Token(Token = "0x40004AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private BInputRequest request;

	[Token(Token = "0x40004AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private BInputResponse response;

	[Token(Token = "0x40004B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private AsyncOperation unloadTable;

	[Token(Token = "0x40004B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private AsyncOperation unloadStadium;

	[Token(Token = "0x40004B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private bool levelsLoaded;

	[Token(Token = "0x40004B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private SGetRequest sGetRequest;

	[Token(Token = "0x40004B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private SIdle sIdle;

	[Token(Token = "0x40004B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private SShowMessage sShowMessage;

	[Token(Token = "0x40004B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	private SJoiningRoom sJoiningRoom;

	[Token(Token = "0x40004B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	private SInRoom sInRoom;

	[Token(Token = "0x40004B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	private SWaitPlayerReadyStart sWaitPlayerReadyStart;

	[Token(Token = "0x40004B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private SCancel sCancel;

	[Token(Token = "0x40004BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	private SLoadingScene sLoadingScene;

	[Token(Token = "0x40004BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	private SStartingGame sStartingGame;

	[Token(Token = "0x40004BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	private SShowShot sShowShot;

	[Token(Token = "0x40004BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	private SWaitHost sWaitHost;

	[Token(Token = "0x40004BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	private SExit sExit;

	[Token(Token = "0x40004BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	private SError sError;

	[Token(Token = "0x40004C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	private SEnterIpHost sEnterIpHost;

	[Token(Token = "0x40004C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	private SAcceptGame sAcceptGame;

	[Token(Token = "0x40004C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	private bool initted;

	[Token(Token = "0x40004C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	private string hostName;

	[Token(Token = "0x6000400")]
	[Address(RVA = "0x717554", Offset = "0x717554", VA = "0x717554", Slot = "17")]
	public override void init()
	{
	}

	[Token(Token = "0x6000401")]
	[Address(RVA = "0x7175CC", Offset = "0x7175CC", VA = "0x7175CC", Slot = "9")]
	public override void enter()
	{
	}

	[Token(Token = "0x6000402")]
	[Address(RVA = "0x717734", Offset = "0x717734", VA = "0x717734", Slot = "14")]
	public override bool isFinished()
	{
		return default(bool);
	}

	[Token(Token = "0x6000403")]
	[Address(RVA = "0x717750", Offset = "0x717750", VA = "0x717750", Slot = "10")]
	public override void exit()
	{
	}

	[Token(Token = "0x6000404")]
	[Address(RVA = "0x71782C", Offset = "0x71782C", VA = "0x71782C")]
	private void changeState()
	{
	}

	[Token(Token = "0x6000405")]
	[Address(RVA = "0x717A60", Offset = "0x717A60", VA = "0x717A60", Slot = "5")]
	public override void update()
	{
	}

	[Token(Token = "0x6000406")]
	[Address(RVA = "0x717C44", Offset = "0x717C44", VA = "0x717C44")]
	private void exitGame()
	{
	}

	[Token(Token = "0x6000407")]
	[Address(RVA = "0x717C74", Offset = "0x717C74", VA = "0x717C74", Slot = "20")]
	public override void OnLeftRoom()
	{
	}

	[Token(Token = "0x6000408")]
	[Address(RVA = "0x717CA4", Offset = "0x717CA4", VA = "0x717CA4", Slot = "21")]
	public override void OnJoinedRoom()
	{
	}

	[Token(Token = "0x6000409")]
	[Address(RVA = "0x717CB8", Offset = "0x717CB8", VA = "0x717CB8", Slot = "22")]
	public override void OnJoinRoomFailed(short returnCode, string message)
	{
	}

	[Token(Token = "0x600040A")]
	[Address(RVA = "0x717CEC", Offset = "0x717CEC", VA = "0x717CEC", Slot = "23")]
	public override void OnDisconnected()
	{
	}

	[Token(Token = "0x600040B")]
	[Address(RVA = "0x717D38", Offset = "0x717D38", VA = "0x717D38")]
	public ModeNetClient()
	{
	}
}
[Token(Token = "0x2000081")]
public class ModeNetHost : ModeNet
{
	[Token(Token = "0x200021A")]
	public class SNetHost : SBaseNet
	{
		[Token(Token = "0x4000E08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ModeNetHost B;

		[Token(Token = "0x6000DD5")]
		[Address(RVA = "0x847420", Offset = "0x847420", VA = "0x847420", Slot = "7")]
		public override bool receiveMessage(MyMessage _message)
		{
			return default(bool);
		}

		[Token(Token = "0x6000DD6")]
		[Address(RVA = "0x847650", Offset = "0x847650", VA = "0x847650")]
		public SNetHost()
		{
		}
	}

	[Token(Token = "0x200021B")]
	public class SIdle : SNetHost
	{
		[Token(Token = "0x6000DD7")]
		[Address(RVA = "0x848584", Offset = "0x848584", VA = "0x848584")]
		public SIdle()
		{
		}
	}

	[Token(Token = "0x200021C")]
	public class SGetPort : SNetHost
	{
		[Token(Token = "0x4000E09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		private bool cancelled;

		[Token(Token = "0x6000DD8")]
		[Address(RVA = "0x84820C", Offset = "0x84820C", VA = "0x84820C", Slot = "4")]
		public override void enter()
		{
		}

		[Token(Token = "0x6000DD9")]
		[Address(RVA = "0x848324", Offset = "0x848324", VA = "0x848324", Slot = "5")]
		public override void exit()
		{
		}

		[Token(Token = "0x6000DDA")]
		[Address(RVA = "0x8483C4", Offset = "0x8483C4", VA = "0x8483C4")]
		public bool didCancel()
		{
			return default(bool);
		}

		[Token(Token = "0x6000DDB")]
		[Address(RVA = "0x8483CC", Offset = "0x8483CC", VA = "0x8483CC", Slot = "6")]
		public override void update()
		{
		}

		[Token(Token = "0x6000DDC")]
		[Address(RVA = "0x84857C", Offset = "0x84857C", VA = "0x84857C")]
		public SGetPort()
		{
		}
	}

	[Token(Token = "0x200021D")]
	public class SLoadingScene : SNetHost
	{
		[Token(Token = "0x6000DDD")]
		[Address(RVA = "0x84858C", Offset = "0x84858C", VA = "0x84858C", Slot = "4")]
		public override void enter()
		{
		}

		[Token(Token = "0x6000DDE")]
		[Address(RVA = "0x848888", Offset = "0x848888", VA = "0x848888")]
		private bool tableLoaded()
		{
			return default(bool);
		}

		[Token(Token = "0x6000DDF")]
		[Address(RVA = "0x8488F8", Offset = "0x8488F8", VA = "0x8488F8", Slot = "6")]
		public override void update()
		{
		}

		[Token(Token = "0x6000DE0")]
		[Address(RVA = "0x8489C0", Offset = "0x8489C0", VA = "0x8489C0", Slot = "7")]
		public override bool receiveMessage(MyMessage _message)
		{
			return default(bool);
		}

		[Token(Token = "0x6000DE1")]
		[Address(RVA = "0x848A58", Offset = "0x848A58", VA = "0x848A58")]
		public SLoadingScene()
		{
		}
	}

	[Token(Token = "0x200021E")]
	public class SWaitClientJoinRoom : SNetHost
	{
		[Token(Token = "0x6000DE2")]
		[Address(RVA = "0x8497A4", Offset = "0x8497A4", VA = "0x8497A4", Slot = "4")]
		public override void enter()
		{
		}

		[Token(Token = "0x6000DE3")]
		[Address(RVA = "0x849914", Offset = "0x849914", VA = "0x849914")]
		public SWaitClientJoinRoom()
		{
		}
	}

	[Token(Token = "0x200021F")]
	public class SShowMessage : SNetHost
	{
		[Token(Token = "0x4000E0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		private bool remoteMessageShown;

		[Token(Token = "0x6000DE4")]
		[Address(RVA = "0x848E18", Offset = "0x848E18", VA = "0x848E18", Slot = "4")]
		public override void enter()
		{
		}

		[Token(Token = "0x6000DE5")]
		[Address(RVA = "0x848F88", Offset = "0x848F88", VA = "0x848F88", Slot = "6")]
		public override void update()
		{
		}

		[Token(Token = "0x6000DE6")]
		[Address(RVA = "0x8490E8", Offset = "0x8490E8", VA = "0x8490E8", Slot = "7")]
		public override bool receiveMessage(MyMessage _message)
		{
			return default(bool);
		}

		[Token(Token = "0x6000DE7")]
		[Address(RVA = "0x84910C", Offset = "0x84910C", VA = "0x84910C")]
		public SShowMessage()
		{
		}
	}

	[Token(Token = "0x2000220")]
	public class SShowShot : SNetHost
	{
		[Token(Token = "0x4000E0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private byte[] encodedAnim;

		[Token(Token = "0x4000E0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private ThreadBoss.MyThread encodeThread;

		[Token(Token = "0x6000DE8")]
		[Address(RVA = "0x849114", Offset = "0x849114", VA = "0x849114", Slot = "4")]
		public override void enter()
		{
		}

		[Token(Token = "0x6000DE9")]
		[Address(RVA = "0x84932C", Offset = "0x84932C", VA = "0x84932C")]
		private void encodeAnim()
		{
		}

		[Token(Token = "0x6000DEA")]
		[Address(RVA = "0x8493A8", Offset = "0x8493A8", VA = "0x8493A8", Slot = "6")]
		public override void update()
		{
		}

		[Token(Token = "0x6000DEB")]
		[Address(RVA = "0x84979C", Offset = "0x84979C", VA = "0x84979C")]
		public SShowShot()
		{
		}
	}

	[Token(Token = "0x2000221")]
	public class SExit : SNetHost
	{
		[Token(Token = "0x6000DEC")]
		[Address(RVA = "0x8477AC", Offset = "0x8477AC", VA = "0x8477AC", Slot = "4")]
		public override void enter()
		{
		}

		[Token(Token = "0x6000DED")]
		[Address(RVA = "0x84791C", Offset = "0x84791C", VA = "0x84791C", Slot = "6")]
		public override void update()
		{
		}

		[Token(Token = "0x6000DEE")]
		[Address(RVA = "0x847B68", Offset = "0x847B68", VA = "0x847B68")]
		private bool tableUnloaded()
		{
			return default(bool);
		}

		[Token(Token = "0x6000DEF")]
		[Address(RVA = "0x847BD8", Offset = "0x847BD8", VA = "0x847BD8")]
		public SExit()
		{
		}
	}

	[Token(Token = "0x2000222")]
	public class SGetInput : SNetHost
	{
		[Token(Token = "0x20002DB")]
		private enum Phase
		{
			[Token(Token = "0x4001067")]
			encoding,
			[Token(Token = "0x4001068")]
			waiting,
			[Token(Token = "0x4001069")]
			decoding
		}

		[Token(Token = "0x4000E0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private BInputResponse reqAway;

		[Token(Token = "0x4000E0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private BInputResponse reqHome;

		[Token(Token = "0x4000E0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int ip;

		[Token(Token = "0x4000E10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private byte[] reqBytes;

		[Token(Token = "0x4000E11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Phase phase;

		[Token(Token = "0x4000E12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private byte[] awayData;

		[Token(Token = "0x6000DF0")]
		[Address(RVA = "0x847BE0", Offset = "0x847BE0", VA = "0x847BE0", Slot = "4")]
		public override void enter()
		{
		}

		[Token(Token = "0x6000DF1")]
		[Address(RVA = "0x847D0C", Offset = "0x847D0C", VA = "0x847D0C")]
		public void threadEncode()
		{
		}

		[Token(Token = "0x6000DF2")]
		[Address(RVA = "0x847D80", Offset = "0x847D80", VA = "0x847D80")]
		public void threadDecode()
		{
		}

		[Token(Token = "0x6000DF3")]
		[Address(RVA = "0x847DC4", Offset = "0x847DC4", VA = "0x847DC4", Slot = "6")]
		public override void update()
		{
		}

		[Token(Token = "0x6000DF4")]
		[Address(RVA = "0x8481D8", Offset = "0x8481D8", VA = "0x8481D8", Slot = "7")]
		public override bool receiveMessage(MyMessage _message)
		{
			return default(bool);
		}

		[Token(Token = "0x6000DF5")]
		[Address(RVA = "0x848204", Offset = "0x848204", VA = "0x848204")]
		public SGetInput()
		{
		}
	}

	[Token(Token = "0x2000223")]
	public class SPlacingBalls : SNetHost
	{
		[Token(Token = "0x6000DF6")]
		[Address(RVA = "0x848A60", Offset = "0x848A60", VA = "0x848A60", Slot = "4")]
		public override void enter()
		{
		}

		[Token(Token = "0x6000DF7")]
		[Address(RVA = "0x848D10", Offset = "0x848D10", VA = "0x848D10", Slot = "7")]
		public override bool receiveMessage(MyMessage _message)
		{
			return default(bool);
		}

		[Token(Token = "0x6000DF8")]
		[Address(RVA = "0x848DA8", Offset = "0x848DA8", VA = "0x848DA8", Slot = "6")]
		public override void update()
		{
		}

		[Token(Token = "0x6000DF9")]
		[Address(RVA = "0x848E10", Offset = "0x848E10", VA = "0x848E10")]
		public SPlacingBalls()
		{
		}
	}

	[Token(Token = "0x2000224")]
	public class SWaitClientLoadScene : SNetHost
	{
		[Token(Token = "0x6000DFA")]
		[Address(RVA = "0x84991C", Offset = "0x84991C", VA = "0x84991C", Slot = "7")]
		public override bool receiveMessage(MyMessage _message)
		{
			return default(bool);
		}

		[Token(Token = "0x6000DFB")]
		[Address(RVA = "0x8499B4", Offset = "0x8499B4", VA = "0x8499B4", Slot = "6")]
		public override void update()
		{
		}

		[Token(Token = "0x6000DFC")]
		[Address(RVA = "0x849A1C", Offset = "0x849A1C", VA = "0x849A1C")]
		public SWaitClientLoadScene()
		{
		}
	}

	[Token(Token = "0x2000225")]
	public class SCancel : SNetHost
	{
		[Token(Token = "0x6000DFD")]
		[Address(RVA = "0x847658", Offset = "0x847658", VA = "0x847658")]
		public SCancel()
		{
		}
	}

	[Token(Token = "0x2000226")]
	public class SAcceptGame : SNetHost
	{
		[Token(Token = "0x20002DC")]
		private enum Response
		{
			[Token(Token = "0x400106B")]
			none,
			[Token(Token = "0x400106C")]
			abort,
			[Token(Token = "0x400106D")]
			start
		}

		[Token(Token = "0x4000E13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private Response responseHost;

		[Token(Token = "0x4000E14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Response responseClient;

		[Token(Token = "0x6000DFE")]
		[Address(RVA = "0x8469A8", Offset = "0x8469A8", VA = "0x8469A8", Slot = "4")]
		public override void enter()
		{
		}

		[Token(Token = "0x6000DFF")]
		[Address(RVA = "0x846FE0", Offset = "0x846FE0", VA = "0x846FE0", Slot = "5")]
		public override void exit()
		{
		}

		[Token(Token = "0x6000E00")]
		[Address(RVA = "0x847080", Offset = "0x847080", VA = "0x847080", Slot = "7")]
		public override bool receiveMessage(MyMessage _message)
		{
			return default(bool);
		}

		[Token(Token = "0x6000E01")]
		[Address(RVA = "0x8474A8", Offset = "0x8474A8", VA = "0x8474A8", Slot = "6")]
		public override void update()
		{
		}

		[Token(Token = "0x6000E02")]
		[Address(RVA = "0x847624", Offset = "0x847624", VA = "0x847624")]
		public bool doGame()
		{
			return default(bool);
		}

		[Token(Token = "0x6000E03")]
		[Address(RVA = "0x847648", Offset = "0x847648", VA = "0x847648")]
		public SAcceptGame()
		{
		}
	}

	[Token(Token = "0x2000227")]
	public class SWaitPlayerReadyStart : SNetHost
	{
		[Token(Token = "0x4000E15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float delay;

		[Token(Token = "0x6000E04")]
		[Address(RVA = "0x849A24", Offset = "0x849A24", VA = "0x849A24", Slot = "4")]
		public override void enter()
		{
		}

		[Token(Token = "0x6000E05")]
		[Address(RVA = "0x849A30", Offset = "0x849A30", VA = "0x849A30", Slot = "6")]
		public override void update()
		{
		}

		[Token(Token = "0x6000E06")]
		[Address(RVA = "0x849D34", Offset = "0x849D34", VA = "0x849D34")]
		public SWaitPlayerReadyStart()
		{
		}
	}

	[Token(Token = "0x2000228")]
	public class SCreatingRoom : SNetHost
	{
		[Token(Token = "0x6000E07")]
		[Address(RVA = "0x847660", Offset = "0x847660", VA = "0x847660", Slot = "4")]
		public override void enter()
		{
		}

		[Token(Token = "0x6000E08")]
		[Address(RVA = "0x8477A4", Offset = "0x8477A4", VA = "0x8477A4")]
		public SCreatingRoom()
		{
		}
	}

	[Token(Token = "0x40004C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public EnterIp enterIp;

	[Token(Token = "0x40004C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private AsyncOperation loadingTable;

	[Token(Token = "0x40004C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private AsyncOperation loadingStadium;

	[Token(Token = "0x40004C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private BRef referee;

	[Token(Token = "0x40004C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private readonly int iHome;

	[Token(Token = "0x40004C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	private readonly int iAway;

	[Token(Token = "0x40004CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private BSimCueInput cueInput;

	[Token(Token = "0x40004CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private AsyncOperation unloadTable;

	[Token(Token = "0x40004CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private AsyncOperation unloadStadium;

	[Token(Token = "0x40004CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private BInputRequest inputRequest;

	[Token(Token = "0x40004CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private BInputResponse response;

	[Token(Token = "0x40004CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private BMessage message;

	[Token(Token = "0x40004D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private bool clientLoadedScene;

	[Token(Token = "0x40004D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF9")]
	private bool clientPlayedAnim;

	[Token(Token = "0x40004D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xFA")]
	private bool clientPlayerReady;

	[Token(Token = "0x40004D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private byte[] clientAnim;

	[Token(Token = "0x40004D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	private byte[] clientEndPos;

	[Token(Token = "0x40004D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	private int iStadiumLevel;

	[Token(Token = "0x40004D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
	private int iTableLevel;

	[Token(Token = "0x40004D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	private bool levelsLoaded;

	[Token(Token = "0x40004D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private string clientName;

	[Token(Token = "0x40004D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	private bool initted;

	[Token(Token = "0x40004DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	private SIdle sIdle;

	[Token(Token = "0x40004DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	private SGetPort sGetPort;

	[Token(Token = "0x40004DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	private SWaitClientJoinRoom sWaitClientJoinRoom;

	[Token(Token = "0x40004DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	private SAcceptGame sAcceptGame;

	[Token(Token = "0x40004DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	private SShowMessage sShowMessage;

	[Token(Token = "0x40004DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	private SCreatingRoom sCreatingRoom;

	[Token(Token = "0x40004E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	private SLoadingScene sLoadingScene;

	[Token(Token = "0x40004E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	private SCancel sCancel;

	[Token(Token = "0x40004E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	private SWaitPlayerReadyStart sWaitPlayerReadyStart;

	[Token(Token = "0x40004E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	private SWaitClientLoadScene sWaitClientLoadScene;

	[Token(Token = "0x40004E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	private SPlacingBalls sPlacingBalls;

	[Token(Token = "0x40004E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	private SShowShot sShowShot;

	[Token(Token = "0x40004E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	private SExit sExit;

	[Token(Token = "0x40004E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	private SGetInput sGetInput;

	[Token(Token = "0x600040C")]
	[Address(RVA = "0x7180D8", Offset = "0x7180D8", VA = "0x7180D8")]
	public void init(GameSetup _gameSetup)
	{
	}

	[Token(Token = "0x600040D")]
	[Address(RVA = "0x71847C", Offset = "0x71847C", VA = "0x71847C", Slot = "9")]
	public override void enter()
	{
	}

	[Token(Token = "0x600040E")]
	[Address(RVA = "0x7185B0", Offset = "0x7185B0", VA = "0x7185B0", Slot = "14")]
	public override bool isFinished()
	{
		return default(bool);
	}

	[Token(Token = "0x600040F")]
	[Address(RVA = "0x7185C4", Offset = "0x7185C4", VA = "0x7185C4", Slot = "10")]
	public override void exit()
	{
	}

	[Token(Token = "0x6000410")]
	[Address(RVA = "0x7186A0", Offset = "0x7186A0", VA = "0x7186A0")]
	private void changeState()
	{
	}

	[Token(Token = "0x6000411")]
	[Address(RVA = "0x71895C", Offset = "0x71895C", VA = "0x71895C", Slot = "5")]
	public override void update()
	{
	}

	[Token(Token = "0x6000412")]
	[Address(RVA = "0x718B40", Offset = "0x718B40", VA = "0x718B40")]
	private void exitGame()
	{
	}

	[Token(Token = "0x6000413")]
	[Address(RVA = "0x718B70", Offset = "0x718B70", VA = "0x718B70", Slot = "20")]
	public override void OnLeftRoom()
	{
	}

	[Token(Token = "0x6000414")]
	[Address(RVA = "0x718BA0", Offset = "0x718BA0", VA = "0x718BA0", Slot = "19")]
	public override bool sendMessage(MyMessage _message)
	{
		return default(bool);
	}

	[Token(Token = "0x6000415")]
	[Address(RVA = "0x718BC4", Offset = "0x718BC4", VA = "0x718BC4", Slot = "25")]
	public override void OnPlayerEnteredRoom()
	{
	}

	[Token(Token = "0x6000416")]
	[Address(RVA = "0x718BF8", Offset = "0x718BF8", VA = "0x718BF8", Slot = "22")]
	public override void OnJoinRoomFailed(short returnCode, string message)
	{
	}

	[Token(Token = "0x6000417")]
	[Address(RVA = "0x718C2C", Offset = "0x718C2C", VA = "0x718C2C", Slot = "23")]
	public override void OnDisconnected()
	{
	}

	[Token(Token = "0x6000418")]
	[Address(RVA = "0x718C60", Offset = "0x718C60", VA = "0x718C60", Slot = "24")]
	public override void OnCreatedRoom()
	{
	}

	[Token(Token = "0x6000419")]
	[Address(RVA = "0x718C94", Offset = "0x718C94", VA = "0x718C94")]
	public ModeNetHost()
	{
	}
}
[Token(Token = "0x2000082")]
public class ModeOptions : Mode
{
	[Token(Token = "0x2000229")]
	public enum RetCode
	{
		[Token(Token = "0x4000E17")]
		none,
		[Token(Token = "0x4000E18")]
		okay,
		[Token(Token = "0x4000E19")]
		cancel,
		[Token(Token = "0x4000E1A")]
		getName
	}

	[Token(Token = "0x40004E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject root;

	[Token(Token = "0x40004E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject[] heightOjects;

	[Token(Token = "0x40004EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject vrModeGadgets;

	[Token(Token = "0x40004EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public InputField nameMonitor;

	[Token(Token = "0x40004EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Text nameVr;

	[Token(Token = "0x40004ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Text vrMode;

	[Token(Token = "0x40004EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject nameVrGadget;

	[Token(Token = "0x40004EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject nameMonitorGadget;

	[Token(Token = "0x40004F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GameObject cancelButton;

	[Token(Token = "0x40004F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public GameObject handGadgets;

	[Token(Token = "0x40004F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Text hand;

	[Token(Token = "0x40004F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public GameObject editHelpGadgets;

	[Token(Token = "0x40004F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Text editHelp;

	[Token(Token = "0x40004F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public GameObject gameHelpGadgets;

	[Token(Token = "0x40004F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Text gameHelp;

	[Token(Token = "0x40004F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private float startHeight;

	[Token(Token = "0x40004F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private int startHand;

	[Token(Token = "0x40004F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private int startVrModeValue;

	[Token(Token = "0x40004FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private string startName;

	[Token(Token = "0x40004FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private int startShowEditHelp;

	[Token(Token = "0x40004FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private int startShowGameHelp;

	[Token(Token = "0x40004FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private RetCode retCode;

	[Token(Token = "0x40004FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	private bool canCancel;

	[Token(Token = "0x600041A")]
	[Address(RVA = "0x718CF4", Offset = "0x718CF4", VA = "0x718CF4")]
	public void setCanCancel(bool _flag)
	{
	}

	[Token(Token = "0x600041B")]
	[Address(RVA = "0x718D00", Offset = "0x718D00", VA = "0x718D00")]
	public RetCode getRetCode()
	{
		return default(RetCode);
	}

	[Token(Token = "0x600041C")]
	[Address(RVA = "0x718D08", Offset = "0x718D08", VA = "0x718D08", Slot = "14")]
	public override bool isFinished()
	{
		return default(bool);
	}

	[Token(Token = "0x600041D")]
	[Address(RVA = "0x718D18", Offset = "0x718D18", VA = "0x718D18", Slot = "10")]
	public override void exit()
	{
	}

	[Token(Token = "0x600041E")]
	[Address(RVA = "0x718D50", Offset = "0x718D50", VA = "0x718D50", Slot = "9")]
	public override void enter()
	{
	}

	[Token(Token = "0x600041F")]
	[Address(RVA = "0x719104", Offset = "0x719104", VA = "0x719104", Slot = "5")]
	public override void update()
	{
	}

	[Token(Token = "0x6000420")]
	[Address(RVA = "0x719548", Offset = "0x719548", VA = "0x719548")]
	public void buttonUserName()
	{
	}

	[Token(Token = "0x6000421")]
	[Address(RVA = "0x719554", Offset = "0x719554", VA = "0x719554")]
	public void buttonHand()
	{
	}

	[Token(Token = "0x6000422")]
	[Address(RVA = "0x7195D0", Offset = "0x7195D0", VA = "0x7195D0")]
	public void buttonEditHelp()
	{
	}

	[Token(Token = "0x6000423")]
	[Address(RVA = "0x71964C", Offset = "0x71964C", VA = "0x71964C")]
	public void buttonGameHelp()
	{
	}

	[Token(Token = "0x6000424")]
	[Address(RVA = "0x7196C8", Offset = "0x7196C8", VA = "0x7196C8")]
	public void buttonBedMode()
	{
	}

	[Token(Token = "0x6000425")]
	[Address(RVA = "0x7196CC", Offset = "0x7196CC", VA = "0x7196CC")]
	public void buttonVrMode()
	{
	}

	[Token(Token = "0x6000426")]
	[Address(RVA = "0x719748", Offset = "0x719748", VA = "0x719748")]
	public void buttonOkay()
	{
	}

	[Token(Token = "0x6000427")]
	[Address(RVA = "0x719470", Offset = "0x719470", VA = "0x719470")]
	public void buttonCancel()
	{
	}

	[Token(Token = "0x6000428")]
	[Address(RVA = "0x7197E0", Offset = "0x7197E0", VA = "0x7197E0")]
	public ModeOptions()
	{
	}
}
[Token(Token = "0x2000083")]
public class ModePlayback : Mode
{
	[Token(Token = "0x200022A")]
	private enum Phase
	{
		[Token(Token = "0x4000E1C")]
		finished,
		[Token(Token = "0x4000E1D")]
		unloadingScene,
		[Token(Token = "0x4000E1E")]
		loadingScene,
		[Token(Token = "0x4000E1F")]
		idle,
		[Token(Token = "0x4000E20")]
		play,
		[Token(Token = "0x4000E21")]
		getInput
	}

	[Token(Token = "0x40004FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject root;

	[Token(Token = "0x4000500")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public RGame rgame;

	[Token(Token = "0x4000501")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Slider slider;

	[Token(Token = "0x4000502")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private AsyncOperation loadingTable;

	[Token(Token = "0x4000503")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private GameSetup gameSetup;

	[Token(Token = "0x4000504")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private List<GamePosition> positions;

	[Token(Token = "0x4000505")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private BSimBoss simBoss;

	[Token(Token = "0x4000506")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Phase phase;

	[Token(Token = "0x4000507")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private BAi ai;

	[Token(Token = "0x4000508")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private int iPosition;

	[Token(Token = "0x4000509")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private AsyncOperation unloading;

	[Token(Token = "0x400050A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private float playTime;

	[Token(Token = "0x400050B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private BInputResponse inputResponse;

	[Token(Token = "0x6000429")]
	[Address(RVA = "0x7197E8", Offset = "0x7197E8", VA = "0x7197E8")]
	private void setPhase(Phase _phase)
	{
	}

	[Token(Token = "0x600042A")]
	[Address(RVA = "0x7197F0", Offset = "0x7197F0", VA = "0x7197F0", Slot = "10")]
	public override void exit()
	{
	}

	[Token(Token = "0x600042B")]
	[Address(RVA = "0x719834", Offset = "0x719834", VA = "0x719834", Slot = "9")]
	public override void enter()
	{
	}

	[Token(Token = "0x600042C")]
	[Address(RVA = "0x719A44", Offset = "0x719A44", VA = "0x719A44")]
	public void buttonPlay()
	{
	}

	[Token(Token = "0x600042D")]
	[Address(RVA = "0x719BD0", Offset = "0x719BD0", VA = "0x719BD0", Slot = "5")]
	public override void update()
	{
	}

	[Token(Token = "0x600042E")]
	[Address(RVA = "0x719B44", Offset = "0x719B44", VA = "0x719B44")]
	private void setPosition(int _iPosition)
	{
	}

	[Token(Token = "0x600042F")]
	[Address(RVA = "0x71A15C", Offset = "0x71A15C", VA = "0x71A15C", Slot = "12")]
	public override void enableGui(bool _enable)
	{
	}

	[Token(Token = "0x6000430")]
	[Address(RVA = "0x71A19C", Offset = "0x71A19C", VA = "0x71A19C", Slot = "14")]
	public override bool isFinished()
	{
		return default(bool);
	}

	[Token(Token = "0x6000431")]
	[Address(RVA = "0x71A0B4", Offset = "0x71A0B4", VA = "0x71A0B4")]
	public void buttonCancel()
	{
	}

	[Token(Token = "0x6000432")]
	[Address(RVA = "0x71A1AC", Offset = "0x71A1AC", VA = "0x71A1AC")]
	public ModePlayback()
	{
	}
}
[Token(Token = "0x2000084")]
public class ModeQuickStart : Mode
{
	[Token(Token = "0x200022B")]
	public enum Ret
	{
		[Token(Token = "0x4000E23")]
		okay,
		[Token(Token = "0x4000E24")]
		cancel,
		[Token(Token = "0x4000E25")]
		none
	}

	[Token(Token = "0x400050C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Image tickImage;

	[Token(Token = "0x400050D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Sprite tickSprite;

	[Token(Token = "0x400050E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string _fileName;

	[Token(Token = "0x400050F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Image image;

	[Token(Token = "0x4000510")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject rootUi;

	[Token(Token = "0x4000511")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Ret ret;

	[Token(Token = "0x4000512")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private bool showQuickStart;

	[Token(Token = "0x6000433")]
	[Address(RVA = "0x71A230", Offset = "0x71A230", VA = "0x71A230", Slot = "12")]
	public override void enableGui(bool _enable)
	{
	}

	[Token(Token = "0x6000434")]
	[Address(RVA = "0x71A270", Offset = "0x71A270", VA = "0x71A270", Slot = "9")]
	public override void enter()
	{
	}

	[Token(Token = "0x6000435")]
	[Address(RVA = "0x71A5C8", Offset = "0x71A5C8", VA = "0x71A5C8", Slot = "5")]
	public override void update()
	{
	}

	[Token(Token = "0x6000436")]
	[Address(RVA = "0x71A768", Offset = "0x71A768", VA = "0x71A768", Slot = "14")]
	public override bool isFinished()
	{
		return default(bool);
	}

	[Token(Token = "0x6000437")]
	[Address(RVA = "0x71A6AC", Offset = "0x71A6AC", VA = "0x71A6AC")]
	public void buttonQuit()
	{
	}

	[Token(Token = "0x6000438")]
	[Address(RVA = "0x71A6B8", Offset = "0x71A6B8", VA = "0x71A6B8")]
	public void buttonOkay()
	{
	}

	[Token(Token = "0x6000439")]
	[Address(RVA = "0x71A778", Offset = "0x71A778", VA = "0x71A778")]
	public void buttonShowAgain()
	{
	}

	[Token(Token = "0x600043A")]
	[Address(RVA = "0x71A788", Offset = "0x71A788", VA = "0x71A788")]
	public Ret getReturnCode()
	{
		return default(Ret);
	}

	[Token(Token = "0x600043B")]
	[Address(RVA = "0x71A790", Offset = "0x71A790", VA = "0x71A790")]
	public ModeQuickStart()
	{
	}
}
[Token(Token = "0x2000085")]
public class ModeRequestor : Mode
{
	[Token(Token = "0x200022C")]
	public enum Ret
	{
		[Token(Token = "0x4000E27")]
		okay,
		[Token(Token = "0x4000E28")]
		cancel,
		[Token(Token = "0x4000E29")]
		busy
	}

	[Token(Token = "0x4000513")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject root;

	[Token(Token = "0x4000514")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Text title;

	[Token(Token = "0x4000515")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Text message;

	[Token(Token = "0x4000516")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Ret ret;

	[Token(Token = "0x600043C")]
	[Address(RVA = "0x71A798", Offset = "0x71A798", VA = "0x71A798", Slot = "9")]
	public override void enter()
	{
	}

	[Token(Token = "0x600043D")]
	[Address(RVA = "0x71A8A0", Offset = "0x71A8A0", VA = "0x71A8A0", Slot = "12")]
	public override void enableGui(bool _enable)
	{
	}

	[Token(Token = "0x600043E")]
	[Address(RVA = "0x71A8E0", Offset = "0x71A8E0", VA = "0x71A8E0")]
	public void init(string _title, string _message)
	{
	}

	[Token(Token = "0x600043F")]
	[Address(RVA = "0x71A934", Offset = "0x71A934", VA = "0x71A934", Slot = "14")]
	public override bool isFinished()
	{
		return default(bool);
	}

	[Token(Token = "0x6000440")]
	[Address(RVA = "0x71A944", Offset = "0x71A944", VA = "0x71A944")]
	public Ret getRet()
	{
		return default(Ret);
	}

	[Token(Token = "0x6000441")]
	[Address(RVA = "0x71A94C", Offset = "0x71A94C", VA = "0x71A94C")]
	public void buttonOkay()
	{
	}

	[Token(Token = "0x6000442")]
	[Address(RVA = "0x71A954", Offset = "0x71A954", VA = "0x71A954")]
	public void buttonCancel()
	{
	}

	[Token(Token = "0x6000443")]
	[Address(RVA = "0x71A960", Offset = "0x71A960", VA = "0x71A960")]
	public ModeRequestor()
	{
	}
}
[Token(Token = "0x2000086")]
public class ModeSaveLoadTable : Mode
{
	[Token(Token = "0x200022D")]
	public enum State
	{
		[Token(Token = "0x4000E2B")]
		busy,
		[Token(Token = "0x4000E2C")]
		accepted,
		[Token(Token = "0x4000E2D")]
		cancelled,
		[Token(Token = "0x4000E2E")]
		needName,
		[Token(Token = "0x4000E2F")]
		deleteFile
	}

	[Token(Token = "0x200022E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x43F498", Offset = "0x43F498")]
	private sealed class <>c__DisplayClass23_0
	{
		[Token(Token = "0x4000E30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int jj;

		[Token(Token = "0x4000E31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ModeSaveLoadTable <>4__this;

		[Token(Token = "0x6000E09")]
		[Address(RVA = "0x849DC0", Offset = "0x849DC0", VA = "0x849DC0")]
		public <>c__DisplayClass23_0()
		{
		}

		[Token(Token = "0x6000E0A")]
		[Address(RVA = "0x849DC8", Offset = "0x849DC8", VA = "0x849DC8")]
		internal void <listFolder>b__1()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x200022F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x43F4A8", Offset = "0x43F4A8")]
	private sealed class <>c
	{
		[Token(Token = "0x4000E32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4000E33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Comparison<string> <>9__23_0;

		[Token(Token = "0x6000E0C")]
		[Address(RVA = "0x849DA0", Offset = "0x849DA0", VA = "0x849DA0")]
		public <>c()
		{
		}

		[Token(Token = "0x6000E0D")]
		[Address(RVA = "0x849DA8", Offset = "0x849DA8", VA = "0x849DA8")]
		internal int <listFolder>b__23_0(string a, string b)
		{
			return default(int);
		}
	}

	[Token(Token = "0x4000517")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Text title;

	[Token(Token = "0x4000518")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Text pageText;

	[Token(Token = "0x4000519")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject root;

	[Token(Token = "0x400051A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public int itemsPerPage;

	[Token(Token = "0x400051B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public InputField fileName;

	[Token(Token = "0x400051C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject fileNameVr;

	[Token(Token = "0x400051D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject itemTemplate;

	[Token(Token = "0x400051E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private State state;

	[Token(Token = "0x400051F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private List<string> files;

	[Token(Token = "0x4000520")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private List<GameObject> items;

	[Token(Token = "0x4000521")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private bool saveMode;

	[Token(Token = "0x4000522")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private int iPage;

	[Token(Token = "0x4000523")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private bool initted;

	[Token(Token = "0x4000524")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private Color hiColor;

	[Token(Token = "0x4000525")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private Color loColor;

	[Token(Token = "0x6000444")]
	[Address(RVA = "0x71A968", Offset = "0x71A968", VA = "0x71A968")]
	public string getFileName()
	{
		return null;
	}

	[Token(Token = "0x6000445")]
	[Address(RVA = "0x71A9FC", Offset = "0x71A9FC", VA = "0x71A9FC")]
	public string getSelection()
	{
		return null;
	}

	[Token(Token = "0x6000446")]
	[Address(RVA = "0x71AAAC", Offset = "0x71AAAC", VA = "0x71AAAC")]
	public void setSaveMode(bool _save)
	{
	}

	[Token(Token = "0x6000447")]
	[Address(RVA = "0x71AAB8", Offset = "0x71AAB8", VA = "0x71AAB8")]
	public bool getSaveMode()
	{
		return default(bool);
	}

	[Token(Token = "0x6000448")]
	[Address(RVA = "0x71AAC0", Offset = "0x71AAC0", VA = "0x71AAC0")]
	private void init()
	{
	}

	[Token(Token = "0x6000449")]
	[Address(RVA = "0x71AAD8", Offset = "0x71AAD8", VA = "0x71AAD8")]
	public void setFileName(string _fileName)
	{
	}

	[Token(Token = "0x600044A")]
	[Address(RVA = "0x71AB68", Offset = "0x71AB68", VA = "0x71AB68")]
	public void buttonFileName()
	{
	}

	[Token(Token = "0x600044B")]
	[Address(RVA = "0x71AB74", Offset = "0x71AB74", VA = "0x71AB74", Slot = "9")]
	public override void enter()
	{
	}

	[Token(Token = "0x600044C")]
	[Address(RVA = "0x71ADBC", Offset = "0x71ADBC", VA = "0x71ADBC")]
	private void listFolder()
	{
	}

	[Token(Token = "0x600044D")]
	[Address(RVA = "0x71B4C0", Offset = "0x71B4C0", VA = "0x71B4C0")]
	private void buttonListItem(int _index)
	{
	}

	[Token(Token = "0x600044E")]
	[Address(RVA = "0x71B538", Offset = "0x71B538", VA = "0x71B538")]
	private int getPageCount()
	{
		return default(int);
	}

	[Token(Token = "0x600044F")]
	[Address(RVA = "0x71B398", Offset = "0x71B398", VA = "0x71B398")]
	private void setPage(int newPage)
	{
	}

	[Token(Token = "0x6000450")]
	[Address(RVA = "0x71B5A0", Offset = "0x71B5A0", VA = "0x71B5A0")]
	public void buttonPageLeft()
	{
	}

	[Token(Token = "0x6000451")]
	[Address(RVA = "0x71B5AC", Offset = "0x71B5AC", VA = "0x71B5AC")]
	public void buttonPageRight()
	{
	}

	[Token(Token = "0x6000452")]
	[Address(RVA = "0x71B5B8", Offset = "0x71B5B8", VA = "0x71B5B8")]
	public void buttonPageFirst()
	{
	}

	[Token(Token = "0x6000453")]
	[Address(RVA = "0x71B5C0", Offset = "0x71B5C0", VA = "0x71B5C0")]
	public void buttonPageLast()
	{
	}

	[Token(Token = "0x6000454")]
	[Address(RVA = "0x71B5E8", Offset = "0x71B5E8", VA = "0x71B5E8", Slot = "5")]
	public override void update()
	{
	}

	[Token(Token = "0x6000455")]
	[Address(RVA = "0x71B720", Offset = "0x71B720", VA = "0x71B720", Slot = "12")]
	public override void enableGui(bool _enable)
	{
	}

	[Token(Token = "0x6000456")]
	[Address(RVA = "0x71B714", Offset = "0x71B714", VA = "0x71B714")]
	public void buttonCancel()
	{
	}

	[Token(Token = "0x6000457")]
	[Address(RVA = "0x71B760", Offset = "0x71B760", VA = "0x71B760")]
	public void buttonOkay()
	{
	}

	[Token(Token = "0x6000458")]
	[Address(RVA = "0x71B76C", Offset = "0x71B76C", VA = "0x71B76C")]
	public void buttonDelete()
	{
	}

	[Token(Token = "0x6000459")]
	[Address(RVA = "0x71B7DC", Offset = "0x71B7DC", VA = "0x71B7DC", Slot = "14")]
	public override bool isFinished()
	{
		return default(bool);
	}

	[Token(Token = "0x600045A")]
	[Address(RVA = "0x71B7EC", Offset = "0x71B7EC", VA = "0x71B7EC")]
	public State getState()
	{
		return default(State);
	}

	[Token(Token = "0x600045B")]
	[Address(RVA = "0x71B7F4", Offset = "0x71B7F4", VA = "0x71B7F4")]
	public ModeSaveLoadTable()
	{
	}
}
[Token(Token = "0x2000087")]
public class ModeSelectGameOptions : Mode
{
	[Serializable]
	[Token(Token = "0x2000230")]
	public class Item
	{
		[Token(Token = "0x4000E34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Sprite[] sprites;

		[Token(Token = "0x4000E35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string[] strings;

		[Token(Token = "0x4000E36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Image image;

		[Token(Token = "0x4000E37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Text text;

		[Token(Token = "0x4000E38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool wrap;

		[Token(Token = "0x4000E39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		internal int selection;

		[Token(Token = "0x6000E0E")]
		[Address(RVA = "0x849DEC", Offset = "0x849DEC", VA = "0x849DEC")]
		public Item()
		{
		}
	}

	[Token(Token = "0x2000231")]
	public enum Ret
	{
		[Token(Token = "0x4000E3B")]
		none,
		[Token(Token = "0x4000E3C")]
		okay,
		[Token(Token = "0x4000E3D")]
		cancel
	}

	[Token(Token = "0x4000526")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject root;

	[Token(Token = "0x4000527")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject skillRoot;

	[Token(Token = "0x4000528")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject gap;

	[Token(Token = "0x4000529")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Item skill;

	[Token(Token = "0x400052A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Item preview;

	[Token(Token = "0x400052B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Item stadium;

	[Token(Token = "0x400052C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Item crowd;

	[Token(Token = "0x400052D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Ret ret;

	[Token(Token = "0x400052E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private bool isNetworkGame;

	[Token(Token = "0x600045C")]
	[Address(RVA = "0x71B8CC", Offset = "0x71B8CC", VA = "0x71B8CC")]
	public void setIsNetworkGame(bool _flag)
	{
	}

	[Token(Token = "0x600045D")]
	[Address(RVA = "0x71B8D8", Offset = "0x71B8D8", VA = "0x71B8D8", Slot = "5")]
	public override void update()
	{
	}

	[Token(Token = "0x600045E")]
	[Address(RVA = "0x71BA48", Offset = "0x71BA48", VA = "0x71BA48", Slot = "9")]
	public override void enter()
	{
	}

	[Token(Token = "0x600045F")]
	[Address(RVA = "0x71BC7C", Offset = "0x71BC7C", VA = "0x71BC7C", Slot = "14")]
	public override bool isFinished()
	{
		return default(bool);
	}

	[Token(Token = "0x6000460")]
	[Address(RVA = "0x71BC8C", Offset = "0x71BC8C", VA = "0x71BC8C", Slot = "12")]
	public override void enableGui(bool _enable)
	{
	}

	[Token(Token = "0x6000461")]
	[Address(RVA = "0x71B944", Offset = "0x71B944", VA = "0x71B944")]
	public void buttonOkay()
	{
	}

	[Token(Token = "0x6000462")]
	[Address(RVA = "0x71B938", Offset = "0x71B938", VA = "0x71B938")]
	public void buttonCancel()
	{
	}

	[Token(Token = "0x6000463")]
	[Address(RVA = "0x71BCCC", Offset = "0x71BCCC", VA = "0x71BCCC")]
	public void buttonSkillInc()
	{
	}

	[Token(Token = "0x6000464")]
	[Address(RVA = "0x71BCEC", Offset = "0x71BCEC", VA = "0x71BCEC")]
	public void buttonSkillDec()
	{
	}

	[Token(Token = "0x6000465")]
	[Address(RVA = "0x71BD0C", Offset = "0x71BD0C", VA = "0x71BD0C")]
	public void buttonPreviewTypeInc()
	{
	}

	[Token(Token = "0x6000466")]
	[Address(RVA = "0x71BD2C", Offset = "0x71BD2C", VA = "0x71BD2C")]
	public void buttonPreviewTypeDec()
	{
	}

	[Token(Token = "0x6000467")]
	[Address(RVA = "0x71BD4C", Offset = "0x71BD4C", VA = "0x71BD4C")]
	public void buttonStadiumInc()
	{
	}

	[Token(Token = "0x6000468")]
	[Address(RVA = "0x71BD6C", Offset = "0x71BD6C", VA = "0x71BD6C")]
	public void buttonStadiumDec()
	{
	}

	[Token(Token = "0x6000469")]
	[Address(RVA = "0x71BD8C", Offset = "0x71BD8C", VA = "0x71BD8C")]
	public void buttonCrowdInc()
	{
	}

	[Token(Token = "0x600046A")]
	[Address(RVA = "0x71BDAC", Offset = "0x71BDAC", VA = "0x71BDAC")]
	public void buttonCrowdDec()
	{
	}

	[Token(Token = "0x600046B")]
	[Address(RVA = "0x71BB4C", Offset = "0x71BB4C", VA = "0x71BB4C")]
	private void setValue(Item _item, int _value)
	{
	}

	[Token(Token = "0x600046C")]
	[Address(RVA = "0x71BDCC", Offset = "0x71BDCC", VA = "0x71BDCC")]
	public Ret getRet()
	{
		return default(Ret);
	}

	[Token(Token = "0x600046D")]
	[Address(RVA = "0x71BDD4", Offset = "0x71BDD4", VA = "0x71BDD4")]
	public ModeSelectGameOptions()
	{
	}
}
[Token(Token = "0x2000088")]
public class ModeSelectRules : Mode
{
	[Token(Token = "0x2000232")]
	public enum Ret
	{
		[Token(Token = "0x4000E3F")]
		none,
		[Token(Token = "0x4000E40")]
		okay,
		[Token(Token = "0x4000E41")]
		cancel
	}

	[Token(Token = "0x400052F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject root;

	[Token(Token = "0x4000530")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Image image;

	[Token(Token = "0x4000531")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Text label;

	[Token(Token = "0x4000532")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Sprite[] ruleSprites;

	[Token(Token = "0x4000533")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int iRules;

	[Token(Token = "0x4000534")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private List<string> rulesNames;

	[Token(Token = "0x4000535")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Ret ret;

	[Token(Token = "0x600046E")]
	[Address(RVA = "0x71BDDC", Offset = "0x71BDDC", VA = "0x71BDDC", Slot = "5")]
	public override void update()
	{
	}

	[Token(Token = "0x600046F")]
	[Address(RVA = "0x71BEF0", Offset = "0x71BEF0", VA = "0x71BEF0", Slot = "10")]
	public override void exit()
	{
	}

	[Token(Token = "0x6000470")]
	[Address(RVA = "0x71BEF8", Offset = "0x71BEF8", VA = "0x71BEF8", Slot = "9")]
	public override void enter()
	{
	}

	[Token(Token = "0x6000471")]
	[Address(RVA = "0x71C1CC", Offset = "0x71C1CC", VA = "0x71C1CC", Slot = "14")]
	public override bool isFinished()
	{
		return default(bool);
	}

	[Token(Token = "0x6000472")]
	[Address(RVA = "0x71C1DC", Offset = "0x71C1DC", VA = "0x71C1DC", Slot = "12")]
	public override void enableGui(bool _enable)
	{
	}

	[Token(Token = "0x6000473")]
	[Address(RVA = "0x71BF8C", Offset = "0x71BF8C", VA = "0x71BF8C")]
	private void init()
	{
	}

	[Token(Token = "0x6000474")]
	[Address(RVA = "0x71BE48", Offset = "0x71BE48", VA = "0x71BE48")]
	public void buttonOkay()
	{
	}

	[Token(Token = "0x6000475")]
	[Address(RVA = "0x71BE3C", Offset = "0x71BE3C", VA = "0x71BE3C")]
	public void buttonCancel()
	{
	}

	[Token(Token = "0x6000476")]
	[Address(RVA = "0x71C21C", Offset = "0x71C21C", VA = "0x71C21C")]
	public void buttonDec()
	{
	}

	[Token(Token = "0x6000477")]
	[Address(RVA = "0x71C228", Offset = "0x71C228", VA = "0x71C228")]
	public void buttonInc()
	{
	}

	[Token(Token = "0x6000478")]
	[Address(RVA = "0x71C0DC", Offset = "0x71C0DC", VA = "0x71C0DC")]
	public void setRules(int _rules)
	{
	}

	[Token(Token = "0x6000479")]
	[Address(RVA = "0x71C234", Offset = "0x71C234", VA = "0x71C234")]
	public Ret getRet()
	{
		return default(Ret);
	}

	[Token(Token = "0x600047A")]
	[Address(RVA = "0x71C23C", Offset = "0x71C23C", VA = "0x71C23C")]
	public ModeSelectRules()
	{
	}
}
[Token(Token = "0x2000089")]
public class ModeSelectTable : Mode
{
	[Token(Token = "0x2000233")]
	public enum Type
	{
		[Token(Token = "0x4000E43")]
		loadUser,
		[Token(Token = "0x4000E44")]
		saveUser,
		[Token(Token = "0x4000E45")]
		loadTemplate,
		[Token(Token = "0x4000E46")]
		selectForGame
	}

	[Token(Token = "0x2000234")]
	public enum Ret
	{
		[Token(Token = "0x4000E48")]
		none,
		[Token(Token = "0x4000E49")]
		okay,
		[Token(Token = "0x4000E4A")]
		cancel,
		[Token(Token = "0x4000E4B")]
		keyboard,
		[Token(Token = "0x4000E4C")]
		deleteFile
	}

	[Token(Token = "0x2000235")]
	public class Item
	{
		[Token(Token = "0x4000E4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public TableType type;

		[Token(Token = "0x4000E4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string name;

		[Token(Token = "0x4000E4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Texture2D texture;

		[Token(Token = "0x4000E50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool selectable;

		[Token(Token = "0x4000E51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public int order;

		[Token(Token = "0x6000E0F")]
		[Address(RVA = "0x849EE4", Offset = "0x849EE4", VA = "0x849EE4")]
		public Texture2D getTexture()
		{
			return null;
		}

		[Token(Token = "0x6000E10")]
		[Address(RVA = "0x84A128", Offset = "0x84A128", VA = "0x84A128")]
		public string getName()
		{
			return null;
		}

		[Token(Token = "0x6000E11")]
		[Address(RVA = "0x84A1D4", Offset = "0x84A1D4", VA = "0x84A1D4")]
		public Item()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x2000236")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x43F4B8", Offset = "0x43F4B8")]
	private sealed class <>c
	{
		[Token(Token = "0x4000E52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4000E53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Comparison<Item> <>9__24_0;

		[Token(Token = "0x6000E13")]
		[Address(RVA = "0x849E58", Offset = "0x849E58", VA = "0x849E58")]
		public <>c()
		{
		}

		[Token(Token = "0x6000E14")]
		[Address(RVA = "0x849E60", Offset = "0x849E60", VA = "0x849E60")]
		internal int <enter>b__24_0(Item a, Item b)
		{
			return default(int);
		}
	}

	[Token(Token = "0x2000237")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x43F4C8", Offset = "0x43F4C8")]
	private sealed class <>c__DisplayClass29_0
	{
		[Token(Token = "0x4000E54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int jj;

		[Token(Token = "0x4000E55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ModeSelectTable <>4__this;

		[Token(Token = "0x6000E15")]
		[Address(RVA = "0x849EB8", Offset = "0x849EB8", VA = "0x849EB8")]
		public <>c__DisplayClass29_0()
		{
		}

		[Token(Token = "0x6000E16")]
		[Address(RVA = "0x849EC0", Offset = "0x849EC0", VA = "0x849EC0")]
		internal void <init>b__0()
		{
		}
	}

	[Token(Token = "0x4000536")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Button keyboardButton;

	[Token(Token = "0x4000537")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Button deleteButton;

	[Token(Token = "0x4000538")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Text title;

	[Token(Token = "0x4000539")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject root;

	[Token(Token = "0x400053A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Text pageNumber;

	[Token(Token = "0x400053B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public InputField inputField;

	[Token(Token = "0x400053C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public RawImage selectedImage;

	[Token(Token = "0x400053D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Texture2D[] tableTextures;

	[Token(Token = "0x400053E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public ListItem[] tableListItems;

	[Token(Token = "0x400053F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private int iPage;

	[Token(Token = "0x4000540")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private int nPage;

	[Token(Token = "0x4000541")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private int iTable;

	[Token(Token = "0x4000542")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private List<Texture2D> generatedTextures;

	[Token(Token = "0x4000543")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private List<Item> items;

	[Token(Token = "0x4000544")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private bool initted;

	[Token(Token = "0x4000545")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private Ret ret;

	[Token(Token = "0x4000546")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly string[] builtInCustomTables;

	[Token(Token = "0x4000547")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private Type type;

	[Token(Token = "0x600047B")]
	[Address(RVA = "0x71C2C0", Offset = "0x71C2C0", VA = "0x71C2C0")]
	public string getSelection()
	{
		return null;
	}

	[Token(Token = "0x600047C")]
	[Address(RVA = "0x71C378", Offset = "0x71C378", VA = "0x71C378")]
	public void setFileName(string s)
	{
	}

	[Token(Token = "0x600047D")]
	[Address(RVA = "0x71C3C4", Offset = "0x71C3C4", VA = "0x71C3C4")]
	public void setType(Type _type)
	{
	}

	[Token(Token = "0x600047E")]
	[Address(RVA = "0x71C3CC", Offset = "0x71C3CC", VA = "0x71C3CC")]
	public Type getType()
	{
		return default(Type);
	}

	[Token(Token = "0x600047F")]
	[Address(RVA = "0x71C3D4", Offset = "0x71C3D4", VA = "0x71C3D4", Slot = "5")]
	public override void update()
	{
	}

	[Token(Token = "0x6000480")]
	[Address(RVA = "0x71C690", Offset = "0x71C690", VA = "0x71C690", Slot = "10")]
	public override void exit()
	{
	}

	[Token(Token = "0x6000481")]
	[Address(RVA = "0x71C974", Offset = "0x71C974", VA = "0x71C974", Slot = "9")]
	public override void enter()
	{
	}

	[Token(Token = "0x6000482")]
	[Address(RVA = "0x71DF14", Offset = "0x71DF14", VA = "0x71DF14")]
	public void buttonDeleteFile()
	{
	}

	[Token(Token = "0x6000483")]
	[Address(RVA = "0x71DF20", Offset = "0x71DF20", VA = "0x71DF20")]
	public void buttonKeyboard()
	{
	}

	[Token(Token = "0x6000484")]
	[Address(RVA = "0x71DF2C", Offset = "0x71DF2C", VA = "0x71DF2C", Slot = "14")]
	public override bool isFinished()
	{
		return default(bool);
	}

	[Token(Token = "0x6000485")]
	[Address(RVA = "0x71DF3C", Offset = "0x71DF3C", VA = "0x71DF3C", Slot = "12")]
	public override void enableGui(bool _enable)
	{
	}

	[Token(Token = "0x6000486")]
	[Address(RVA = "0x71D82C", Offset = "0x71D82C", VA = "0x71D82C")]
	private void init()
	{
	}

	[Token(Token = "0x6000487")]
	[Address(RVA = "0x71DF7C", Offset = "0x71DF7C", VA = "0x71DF7C")]
	public void buttonListItem(int _index)
	{
	}

	[Token(Token = "0x6000488")]
	[Address(RVA = "0x71DDFC", Offset = "0x71DDFC", VA = "0x71DDFC")]
	public void setTable(int index)
	{
	}

	[Token(Token = "0x6000489")]
	[Address(RVA = "0x71DFFC", Offset = "0x71DFFC", VA = "0x71DFFC")]
	private void refreshHighlights()
	{
	}

	[Token(Token = "0x600048A")]
	[Address(RVA = "0x71C720", Offset = "0x71C720", VA = "0x71C720")]
	private void destroyOldTexture(RawImage item)
	{
	}

	[Token(Token = "0x600048B")]
	[Address(RVA = "0x71C440", Offset = "0x71C440", VA = "0x71C440")]
	public void buttonOkay()
	{
	}

	[Token(Token = "0x600048C")]
	[Address(RVA = "0x71C434", Offset = "0x71C434", VA = "0x71C434")]
	public void buttonCancel()
	{
	}

	[Token(Token = "0x600048D")]
	[Address(RVA = "0x71E224", Offset = "0x71E224", VA = "0x71E224")]
	public void buttonPagePrev()
	{
	}

	[Token(Token = "0x600048E")]
	[Address(RVA = "0x71E230", Offset = "0x71E230", VA = "0x71E230")]
	public void buttonPageNext()
	{
	}

	[Token(Token = "0x600048F")]
	[Address(RVA = "0x71E23C", Offset = "0x71E23C", VA = "0x71E23C")]
	public void buttonPageFirst()
	{
	}

	[Token(Token = "0x6000490")]
	[Address(RVA = "0x71E244", Offset = "0x71E244", VA = "0x71E244")]
	public void buttonPageLast()
	{
	}

	[Token(Token = "0x6000491")]
	[Address(RVA = "0x71DAEC", Offset = "0x71DAEC", VA = "0x71DAEC")]
	public void setPage(int _page)
	{
	}

	[Token(Token = "0x6000492")]
	[Address(RVA = "0x71E250", Offset = "0x71E250", VA = "0x71E250")]
	public Ret getRet()
	{
		return default(Ret);
	}

	[Token(Token = "0x6000493")]
	[Address(RVA = "0x71E258", Offset = "0x71E258", VA = "0x71E258")]
	public ModeSelectTable()
	{
	}
}
[Token(Token = "0x200008A")]
public class ModeSettings : Mode
{
	[Token(Token = "0x2000238")]
	private enum RetCode
	{
		[Token(Token = "0x4000E57")]
		none,
		[Token(Token = "0x4000E58")]
		okay,
		[Token(Token = "0x4000E59")]
		cancel
	}

	[Token(Token = "0x4000548")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject root;

	[Token(Token = "0x4000549")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public SettingsGui settingsGui;

	[Token(Token = "0x400054A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Image display;

	[Token(Token = "0x400054B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject pictureBox;

	[Token(Token = "0x400054C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private PropString userName;

	[Token(Token = "0x400054D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private PropList vrMode;

	[Token(Token = "0x400054E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private RetCode retCode;

	[Token(Token = "0x6000495")]
	[Address(RVA = "0x71E4B0", Offset = "0x71E4B0", VA = "0x71E4B0", Slot = "9")]
	public override void enter()
	{
	}

	[Token(Token = "0x6000496")]
	[Address(RVA = "0x71E7F8", Offset = "0x71E7F8", VA = "0x71E7F8", Slot = "5")]
	public override void update()
	{
	}

	[Token(Token = "0x6000497")]
	[Address(RVA = "0x71E920", Offset = "0x71E920", VA = "0x71E920", Slot = "12")]
	public override void enableGui(bool _enable)
	{
	}

	[Token(Token = "0x6000498")]
	[Address(RVA = "0x71E960", Offset = "0x71E960", VA = "0x71E960", Slot = "14")]
	public override bool isFinished()
	{
		return default(bool);
	}

	[Token(Token = "0x6000499")]
	[Address(RVA = "0x71E970", Offset = "0x71E970", VA = "0x71E970")]
	public ModeSettings()
	{
	}
}
[Token(Token = "0x200008B")]
public class ModeSolo : ModeGame
{
	[Token(Token = "0x2000239")]
	public class SSolo : SBase
	{
		[Token(Token = "0x4000E5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ModeSolo B;

		[Token(Token = "0x6000E17")]
		[Address(RVA = "0x84A888", Offset = "0x84A888", VA = "0x84A888", Slot = "6")]
		public override void update()
		{
		}

		[Token(Token = "0x6000E18")]
		[Address(RVA = "0x84B7D4", Offset = "0x84B7D4", VA = "0x84B7D4", Slot = "7")]
		public virtual bool canQuit()
		{
			return default(bool);
		}

		[Token(Token = "0x6000E19")]
		[Address(RVA = "0x84A2F0", Offset = "0x84A2F0", VA = "0x84A2F0")]
		public SSolo()
		{
		}
	}

	[Token(Token = "0x200023A")]
	public class SIdle : SSolo
	{
		[Token(Token = "0x6000E1A")]
		[Address(RVA = "0x84A894", Offset = "0x84A894", VA = "0x84A894", Slot = "7")]
		public override bool canQuit()
		{
			return default(bool);
		}

		[Token(Token = "0x6000E1B")]
		[Address(RVA = "0x84A89C", Offset = "0x84A89C", VA = "0x84A89C")]
		public SIdle()
		{
		}
	}

	[Token(Token = "0x200023B")]
	public class SShowMessage : SSolo
	{
		[Token(Token = "0x6000E1C")]
		[Address(RVA = "0x84B594", Offset = "0x84B594", VA = "0x84B594", Slot = "4")]
		public override void enter()
		{
		}

		[Token(Token = "0x6000E1D")]
		[Address(RVA = "0x84B674", Offset = "0x84B674", VA = "0x84B674", Slot = "6")]
		public override void update()
		{
		}

		[Token(Token = "0x6000E1E")]
		[Address(RVA = "0x84B7CC", Offset = "0x84B7CC", VA = "0x84B7CC")]
		public SShowMessage()
		{
		}
	}

	[Token(Token = "0x200023C")]
	public class SEndGameMessage : SSolo
	{
		[Token(Token = "0x6000E1F")]
		[Address(RVA = "0x84A1E4", Offset = "0x84A1E4", VA = "0x84A1E4", Slot = "4")]
		public override void enter()
		{
		}

		[Token(Token = "0x6000E20")]
		[Address(RVA = "0x84A2E8", Offset = "0x84A2E8", VA = "0x84A2E8")]
		public SEndGameMessage()
		{
		}
	}

	[Token(Token = "0x200023D")]
	public class SWait : SSolo
	{
		[Token(Token = "0x4000E5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float wait;

		[Token(Token = "0x6000E21")]
		[Address(RVA = "0x84BA2C", Offset = "0x84BA2C", VA = "0x84BA2C")]
		public void setTime(float _time)
		{
		}

		[Token(Token = "0x6000E22")]
		[Address(RVA = "0x84BA34", Offset = "0x84BA34", VA = "0x84BA34", Slot = "6")]
		public override void update()
		{
		}

		[Token(Token = "0x6000E23")]
		[Address(RVA = "0x84BA7C", Offset = "0x84BA7C", VA = "0x84BA7C")]
		public SWait()
		{
		}
	}

	[Token(Token = "0x200023E")]
	public class SLoading : SSolo
	{
		[Token(Token = "0x4000E5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float waitTime;

		[Token(Token = "0x6000E24")]
		[Address(RVA = "0x84AEC8", Offset = "0x84AEC8", VA = "0x84AEC8", Slot = "7")]
		public override bool canQuit()
		{
			return default(bool);
		}

		[Token(Token = "0x6000E25")]
		[Address(RVA = "0x84AED0", Offset = "0x84AED0", VA = "0x84AED0", Slot = "4")]
		public override void enter()
		{
		}

		[Token(Token = "0x6000E26")]
		[Address(RVA = "0x84B034", Offset = "0x84B034", VA = "0x84B034")]
		private bool tableLoaded()
		{
			return default(bool);
		}

		[Token(Token = "0x6000E27")]
		[Address(RVA = "0x84B0A4", Offset = "0x84B0A4", VA = "0x84B0A4", Slot = "6")]
		public override void update()
		{
		}

		[Token(Token = "0x6000E28")]
		[Address(RVA = "0x84B1BC", Offset = "0x84B1BC", VA = "0x84B1BC")]
		public SLoading()
		{
		}
	}

	[Token(Token = "0x200023F")]
	public class SUnloading : SSolo
	{
		[Token(Token = "0x6000E29")]
		[Address(RVA = "0x84B7DC", Offset = "0x84B7DC", VA = "0x84B7DC", Slot = "7")]
		public override bool canQuit()
		{
			return default(bool);
		}

		[Token(Token = "0x6000E2A")]
		[Address(RVA = "0x84B7E4", Offset = "0x84B7E4", VA = "0x84B7E4")]
		private bool tableUnloaded()
		{
			return default(bool);
		}

		[Token(Token = "0x6000E2B")]
		[Address(RVA = "0x84B854", Offset = "0x84B854", VA = "0x84B854", Slot = "4")]
		public override void enter()
		{
		}

		[Token(Token = "0x6000E2C")]
		[Address(RVA = "0x84B9A8", Offset = "0x84B9A8", VA = "0x84B9A8", Slot = "6")]
		public override void update()
		{
		}

		[Token(Token = "0x6000E2D")]
		[Address(RVA = "0x84BA24", Offset = "0x84BA24", VA = "0x84BA24")]
		public SUnloading()
		{
		}
	}

	[Token(Token = "0x2000240")]
	public class SPlayShot : SSolo
	{
		[Token(Token = "0x4000E5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private BInputRequest req;

		[Token(Token = "0x4000E5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private BAnimHead animHead;

		[Token(Token = "0x6000E2E")]
		[Address(RVA = "0x84B1C4", Offset = "0x84B1C4", VA = "0x84B1C4", Slot = "4")]
		public override void enter()
		{
		}

		[Token(Token = "0x6000E2F")]
		[Address(RVA = "0x84B34C", Offset = "0x84B34C", VA = "0x84B34C", Slot = "6")]
		public override void update()
		{
		}

		[Token(Token = "0x6000E30")]
		[Address(RVA = "0x84B58C", Offset = "0x84B58C", VA = "0x84B58C")]
		public SPlayShot()
		{
		}
	}

	[Token(Token = "0x2000241")]
	public class SGetRequest : SSolo
	{
		[Token(Token = "0x4000E5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private int ip;

		[Token(Token = "0x4000E60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private BInputResponse responseAi;

		[Token(Token = "0x4000E61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private BInputResponse responseHuman;

		[Token(Token = "0x6000E31")]
		[Address(RVA = "0x84A2F8", Offset = "0x84A2F8", VA = "0x84A2F8", Slot = "4")]
		public override void enter()
		{
		}

		[Token(Token = "0x6000E32")]
		[Address(RVA = "0x84A59C", Offset = "0x84A59C", VA = "0x84A59C")]
		private void addToRecording()
		{
		}

		[Token(Token = "0x6000E33")]
		[Address(RVA = "0x84A730", Offset = "0x84A730", VA = "0x84A730", Slot = "6")]
		public override void update()
		{
		}

		[Token(Token = "0x6000E34")]
		[Address(RVA = "0x84A88C", Offset = "0x84A88C", VA = "0x84A88C")]
		public SGetRequest()
		{
		}
	}

	[Token(Token = "0x2000242")]
	public class SInitGame : SSolo
	{
		[Token(Token = "0x6000E35")]
		[Address(RVA = "0x84A8A4", Offset = "0x84A8A4", VA = "0x84A8A4", Slot = "4")]
		public override void enter()
		{
		}

		[Token(Token = "0x6000E36")]
		[Address(RVA = "0x84ACC0", Offset = "0x84ACC0", VA = "0x84ACC0", Slot = "6")]
		public override void update()
		{
		}

		[Token(Token = "0x6000E37")]
		[Address(RVA = "0x84AEC0", Offset = "0x84AEC0", VA = "0x84AEC0")]
		public SInitGame()
		{
		}
	}

	[Token(Token = "0x400054F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private StreamRW recStream;

	[Token(Token = "0x4000550")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private AsyncOperation loadingTable;

	[Token(Token = "0x4000551")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private AsyncOperation loadingStadium;

	[Token(Token = "0x4000552")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private BRef referee;

	[Token(Token = "0x4000553")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private BAi aiPlayer;

	[Token(Token = "0x4000554")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private readonly int iHuman;

	[Token(Token = "0x4000555")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	private readonly int iCpu;

	[Token(Token = "0x4000556")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private BSimCueInput cueInput;

	[Token(Token = "0x4000557")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private BBallType nominatedBall;

	[Token(Token = "0x4000558")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private BInputRequest request;

	[Token(Token = "0x4000559")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private BInputResponse response;

	[Token(Token = "0x400055A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private BMessage message;

	[Token(Token = "0x400055B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private AsyncOperation unloadTable;

	[Token(Token = "0x400055C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private AsyncOperation unloadStadium;

	[Token(Token = "0x400055D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private string[] playerNames;

	[Token(Token = "0x400055E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private bool loadedScene;

	[Token(Token = "0x400055F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private SIdle sIdle;

	[Token(Token = "0x4000560")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	private SInitGame sInitGame;

	[Token(Token = "0x4000561")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	private SLoading sLoading;

	[Token(Token = "0x4000562")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	private SUnloading sUnloading;

	[Token(Token = "0x4000563")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private SPlayShot sPlayShot;

	[Token(Token = "0x4000564")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	private SEndGameMessage sEndGameMessage;

	[Token(Token = "0x4000565")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	private SWait sWait;

	[Token(Token = "0x4000566")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	private SGetRequest sGetRequest;

	[Token(Token = "0x4000567")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	private SShowMessage sShowMessage;

	[Token(Token = "0x4000568")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	private bool initted;

	[Token(Token = "0x4000569")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x149")]
	private bool isPreview;

	[Token(Token = "0x600049A")]
	[Address(RVA = "0x71E978", Offset = "0x71E978", VA = "0x71E978")]
	public bool getIsPreview()
	{
		return default(bool);
	}

	[Token(Token = "0x600049B")]
	[Address(RVA = "0x71E980", Offset = "0x71E980", VA = "0x71E980")]
	public void init(GameSetup _gameSetup, bool _isPreview = false)
	{
	}

	[Token(Token = "0x600049C")]
	[Address(RVA = "0x71ED84", Offset = "0x71ED84", VA = "0x71ED84", Slot = "14")]
	public override bool isFinished()
	{
		return default(bool);
	}

	[Token(Token = "0x600049D")]
	[Address(RVA = "0x71ED98", Offset = "0x71ED98", VA = "0x71ED98", Slot = "9")]
	public override void enter()
	{
	}

	[Token(Token = "0x600049E")]
	[Address(RVA = "0x71F130", Offset = "0x71F130", VA = "0x71F130", Slot = "10")]
	public override void exit()
	{
	}

	[Token(Token = "0x600049F")]
	[Address(RVA = "0x71F23C", Offset = "0x71F23C", VA = "0x71F23C")]
	private void changeState()
	{
	}

	[Token(Token = "0x60004A0")]
	[Address(RVA = "0x71F410", Offset = "0x71F410", VA = "0x71F410")]
	private void quitGame()
	{
	}

	[Token(Token = "0x60004A1")]
	[Address(RVA = "0x71F468", Offset = "0x71F468", VA = "0x71F468", Slot = "5")]
	public override void update()
	{
	}

	[Token(Token = "0x60004A2")]
	[Address(RVA = "0x71F620", Offset = "0x71F620", VA = "0x71F620")]
	public ModeSolo()
	{
	}
}
[Token(Token = "0x200008C")]
public class ModeUpdates : Mode
{
	[Token(Token = "0x400056A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject root;

	[Token(Token = "0x400056B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Text text;

	[Token(Token = "0x400056C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool finished;

	[Token(Token = "0x400056D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private int lastUpdate;

	[Token(Token = "0x400056E")]
	public const int updateCount = 2;

	[Token(Token = "0x60004A3")]
	[Address(RVA = "0x71F630", Offset = "0x71F630", VA = "0x71F630")]
	public void setLastUpdate(int _update)
	{
	}

	[Token(Token = "0x60004A4")]
	[Address(RVA = "0x71F638", Offset = "0x71F638", VA = "0x71F638", Slot = "9")]
	public override void enter()
	{
	}

	[Token(Token = "0x60004A5")]
	[Address(RVA = "0x71F970", Offset = "0x71F970", VA = "0x71F970", Slot = "5")]
	public override void update()
	{
	}

	[Token(Token = "0x60004A6")]
	[Address(RVA = "0x71FA28", Offset = "0x71FA28", VA = "0x71FA28", Slot = "12")]
	public override void enableGui(bool _enable)
	{
	}

	[Token(Token = "0x60004A7")]
	[Address(RVA = "0x71FA68", Offset = "0x71FA68", VA = "0x71FA68", Slot = "14")]
	public override bool isFinished()
	{
		return default(bool);
	}

	[Token(Token = "0x60004A8")]
	[Address(RVA = "0x71FA1C", Offset = "0x71FA1C", VA = "0x71FA1C")]
	public void buttonCancel()
	{
	}

	[Token(Token = "0x60004A9")]
	[Address(RVA = "0x71FA70", Offset = "0x71FA70", VA = "0x71FA70")]
	public ModeUpdates()
	{
	}
}
[Token(Token = "0x200008D")]
public class MyScrollRect : ScrollRect
{
	[Token(Token = "0x60004AA")]
	[Address(RVA = "0x7229C0", Offset = "0x7229C0", VA = "0x7229C0", Slot = "44")]
	public override void OnBeginDrag(PointerEventData eventData)
	{
	}

	[Token(Token = "0x60004AB")]
	[Address(RVA = "0x7229C4", Offset = "0x7229C4", VA = "0x7229C4", Slot = "46")]
	public override void OnDrag(PointerEventData eventData)
	{
	}

	[Token(Token = "0x60004AC")]
	[Address(RVA = "0x7229C8", Offset = "0x7229C8", VA = "0x7229C8", Slot = "45")]
	public override void OnEndDrag(PointerEventData eventData)
	{
	}

	[Token(Token = "0x60004AD")]
	[Address(RVA = "0x7229CC", Offset = "0x7229CC", VA = "0x7229CC")]
	public MyScrollRect()
	{
	}
}
[Token(Token = "0x200008E")]
public enum TableType
{
	[Token(Token = "0x4000570")]
	standard,
	[Token(Token = "0x4000571")]
	generated,
	[Token(Token = "0x4000572")]
	user,
	[Token(Token = "0x4000573")]
	count
}
[Token(Token = "0x200008F")]
public enum VrMode
{
	[Token(Token = "0x4000575")]
	seated,
	[Token(Token = "0x4000576")]
	standing
}
[Serializable]
[Token(Token = "0x2000090")]
public struct GameConstants
{
	[Token(Token = "0x4000577")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float ballRadius;

	[Token(Token = "0x4000578")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public float drag;

	[Token(Token = "0x4000579")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float maxHitSpeed;

	[Token(Token = "0x400057A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public float maxSpinSpeed;

	[Token(Token = "0x400057B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static readonly XRange ballRadiusRange;

	[Token(Token = "0x400057C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static readonly XRange dragRange;

	[Token(Token = "0x400057D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static readonly XRange maxHitSpeedRange;

	[Token(Token = "0x400057E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static readonly XRange maxSpinSpeedRange;

	[Token(Token = "0x400057F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public static readonly XRangeInt heightOffsetRange;

	[Token(Token = "0x60004AE")]
	[Address(RVA = "0x751EA0", Offset = "0x751EA0", VA = "0x751EA0")]
	public static GameConstants getDefault()
	{
		return default(GameConstants);
	}
}
[Serializable]
[Token(Token = "0x2000091")]
public class Options
{
	[Token(Token = "0x2000243")]
	public static class ShotStartView
	{
		[Token(Token = "0x4000E62")]
		public const int dontChange = 0;

		[Token(Token = "0x4000E63")]
		public const int cue = 1;

		[Token(Token = "0x4000E64")]
		public const int cueLocked = 2;

		[Token(Token = "0x4000E65")]
		public const int count = 3;
	}

	[Token(Token = "0x2000244")]
	public static class PathPreviewType
	{
		[Token(Token = "0x4000E66")]
		public const int none = 0;

		[Token(Token = "0x4000E67")]
		public const int firstContact = 1;

		[Token(Token = "0x4000E68")]
		public const int complete = 2;

		[Token(Token = "0x4000E69")]
		public const int count = 3;
	}

	[Token(Token = "0x4000580")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int version;

	[Token(Token = "0x4000581")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public int vrMode;

	[Token(Token = "0x4000582")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int heightOffset;

	[Token(Token = "0x4000583")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int hand;

	[Token(Token = "0x4000584")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int showQuickStart;

	[Token(Token = "0x4000585")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public int showEditHelp;

	[Token(Token = "0x4000586")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int updatesShown;

	[Token(Token = "0x4000587")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public string hostAddress;

	[Token(Token = "0x4000588")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public string port;

	[Token(Token = "0x4000589")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool firstRun;

	[Token(Token = "0x400058A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
	public bool firstPlay;

	[Token(Token = "0x400058B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public int cueZoomStep;

	[Token(Token = "0x400058C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float monitorZoom;

	[Token(Token = "0x400058D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public string name;

	[Token(Token = "0x400058E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public int language;

	[Token(Token = "0x400058F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public int guiScale;

	[Token(Token = "0x4000590")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public int skipIntro;

	[Token(Token = "0x4000591")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public int helpTextSize;

	[Token(Token = "0x4000592")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public int rules;

	[Token(Token = "0x4000593")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public int stadium;

	[Token(Token = "0x4000594")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public TableType tableType;

	[Token(Token = "0x4000595")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public int table;

	[Token(Token = "0x4000596")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public string customTableName;

	[Token(Token = "0x4000597")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public int moveType;

	[Token(Token = "0x4000598")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public int log;

	[Token(Token = "0x4000599")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public int stats;

	[Token(Token = "0x400059A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	public int skillLevel;

	[Token(Token = "0x400059B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public int crowdLevel;

	[Token(Token = "0x400059C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	public int pathPreviewType;

	[Token(Token = "0x400059D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public int showCue;

	[Token(Token = "0x400059E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	public int shotStartView;

	[Token(Token = "0x400059F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public int showTrails;

	[Token(Token = "0x40005A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	public int customConstants;

	[Token(Token = "0x40005A1")]
	public const int defaultZoomStep = 4;

	[Token(Token = "0x40005A2")]
	public const int maxZoomStep = 8;

	[Token(Token = "0x40005A3")]
	public const float minHeight = 1f;

	[Token(Token = "0x40005A4")]
	public const float maxHeight = 2.4f;

	[Token(Token = "0x40005A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int maxNameSize;

	[Token(Token = "0x40005A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	internal static float[] guiScaleValues;

	[Token(Token = "0x40005A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static string fileName;

	[Token(Token = "0x40005A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static string[] pathPreviewTypes;

	[Token(Token = "0x40005A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public static string[] ruleNames;

	[Token(Token = "0x40005AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public static string[] skillLevelNames;

	[Token(Token = "0x40005AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public static string[] stadiumLevels;

	[Token(Token = "0x40005AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public static string[] tableNames;

	[Token(Token = "0x40005AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public static string[] tableLevels;

	[Token(Token = "0x60004B0")]
	[Address(RVA = "0xE61340", Offset = "0xE61340", VA = "0xE61340")]
	public string getSkillLevelName()
	{
		return null;
	}

	[Token(Token = "0x60004B1")]
	[Address(RVA = "0xE613D4", Offset = "0xE613D4", VA = "0xE613D4")]
	public string getTableName()
	{
		return null;
	}

	[Token(Token = "0x60004B2")]
	[Address(RVA = "0xE61468", Offset = "0xE61468", VA = "0xE61468")]
	public string getTableLevel()
	{
		return null;
	}

	[Token(Token = "0x60004B3")]
	[Address(RVA = "0xE614FC", Offset = "0xE614FC", VA = "0xE614FC")]
	public string getStadiumLevel()
	{
		return null;
	}

	[Token(Token = "0x60004B4")]
	[Address(RVA = "0xE61590", Offset = "0xE61590", VA = "0xE61590")]
	public string getRulesName()
	{
		return null;
	}

	[Token(Token = "0x60004B5")]
	[Address(RVA = "0xE61624", Offset = "0xE61624", VA = "0xE61624")]
	public VrMode getVrMode()
	{
		return default(VrMode);
	}

	[Token(Token = "0x60004B6")]
	[Address(RVA = "0xE6162C", Offset = "0xE6162C", VA = "0xE6162C")]
	public Options()
	{
	}

	[Token(Token = "0x60004B7")]
	[Address(RVA = "0xE61700", Offset = "0xE61700", VA = "0xE61700")]
	public static bool save(Options _setup)
	{
		return default(bool);
	}

	[Token(Token = "0x60004B8")]
	[Address(RVA = "0xE618FC", Offset = "0xE618FC", VA = "0xE618FC")]
	public void fix()
	{
	}

	[Token(Token = "0x60004B9")]
	[Address(RVA = "0xE61A78", Offset = "0xE61A78", VA = "0xE61A78")]
	public static Options load()
	{
		return null;
	}

	[Token(Token = "0x60004BA")]
	[Address(RVA = "0xE61CF0", Offset = "0xE61CF0", VA = "0xE61CF0")]
	internal float getGuiScale()
	{
		return default(float);
	}
}
[Token(Token = "0x2000092")]
public class PictureFitter : MonoBehaviour
{
	[Token(Token = "0x60004BC")]
	[Address(RVA = "0xE62B50", Offset = "0xE62B50", VA = "0xE62B50")]
	private void Update()
	{
	}

	[Token(Token = "0x60004BD")]
	[Address(RVA = "0xE62F28", Offset = "0xE62F28", VA = "0xE62F28")]
	public PictureFitter()
	{
	}
}
[Token(Token = "0x2000093")]
public class PictureMenu : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x2000245")]
	public class Item
	{
		[Token(Token = "0x4000E6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string userName;

		[Token(Token = "0x4000E6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Sprite sprite;

		[Token(Token = "0x4000E6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string levelName;

		[Token(Token = "0x6000E38")]
		[Address(RVA = "0x850D24", Offset = "0x850D24", VA = "0x850D24")]
		public Item()
		{
		}
	}

	[Token(Token = "0x40005AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Text title;

	[Token(Token = "0x40005AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Image image;

	[Token(Token = "0x40005B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Text text;

	[Token(Token = "0x40005B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Item[] items;

	[Token(Token = "0x40005B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int selection;

	[Token(Token = "0x60004BE")]
	[Address(RVA = "0xE62F30", Offset = "0xE62F30", VA = "0xE62F30")]
	public void setItems(string _title, Item[] _items)
	{
	}

	[Token(Token = "0x60004BF")]
	[Address(RVA = "0xE630E4", Offset = "0xE630E4", VA = "0xE630E4")]
	public int getSelectionIndex()
	{
		return default(int);
	}

	[Token(Token = "0x60004C0")]
	[Address(RVA = "0xE630EC", Offset = "0xE630EC", VA = "0xE630EC")]
	public Item getSelection()
	{
		return null;
	}

	[Token(Token = "0x60004C1")]
	[Address(RVA = "0xE62FE4", Offset = "0xE62FE4", VA = "0xE62FE4")]
	public void setSelectionIndex(int _selection)
	{
	}

	[Token(Token = "0x60004C2")]
	[Address(RVA = "0xE6312C", Offset = "0xE6312C", VA = "0xE6312C")]
	public void buttonLeft()
	{
	}

	[Token(Token = "0x60004C3")]
	[Address(RVA = "0xE6315C", Offset = "0xE6315C", VA = "0xE6315C")]
	public void buttonRight()
	{
	}

	[Token(Token = "0x60004C4")]
	[Address(RVA = "0xE63188", Offset = "0xE63188", VA = "0xE63188")]
	public PictureMenu()
	{
	}
}
[Token(Token = "0x2000094")]
public class HumanPlayer : MonoBehaviour, IHumanPlayer
{
	[Token(Token = "0x2000246")]
	private class Cam
	{
		[Token(Token = "0x4000E6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public HumanPlayer B;

		[Token(Token = "0x6000E39")]
		[Address(RVA = "0x85EE78", Offset = "0x85EE78", VA = "0x85EE78", Slot = "4")]
		public virtual void enter()
		{
		}

		[Token(Token = "0x6000E3A")]
		[Address(RVA = "0x85EE7C", Offset = "0x85EE7C", VA = "0x85EE7C", Slot = "5")]
		public virtual void exit()
		{
		}

		[Token(Token = "0x6000E3B")]
		[Address(RVA = "0x85EE80", Offset = "0x85EE80", VA = "0x85EE80", Slot = "6")]
		public virtual void update()
		{
		}

		[Token(Token = "0x6000E3C")]
		[Address(RVA = "0x85EE84", Offset = "0x85EE84", VA = "0x85EE84")]
		public Cam()
		{
		}
	}

	[Token(Token = "0x2000247")]
	private class CamCueLocked : Cam
	{
		[Token(Token = "0x4000E6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private float cueZoomTime;

		[Token(Token = "0x6000E3D")]
		[Address(RVA = "0x85EE8C", Offset = "0x85EE8C", VA = "0x85EE8C", Slot = "4")]
		public override void enter()
		{
		}

		[Token(Token = "0x6000E3E")]
		[Address(RVA = "0x85EE94", Offset = "0x85EE94", VA = "0x85EE94", Slot = "6")]
		public override void update()
		{
		}

		[Token(Token = "0x6000E3F")]
		[Address(RVA = "0x85F400", Offset = "0x85F400", VA = "0x85F400")]
		private int clicks(float time)
		{
			return default(int);
		}

		[Token(Token = "0x6000E40")]
		[Address(RVA = "0x85F438", Offset = "0x85F438", VA = "0x85F438")]
		public CamCueLocked()
		{
		}
	}

	[Token(Token = "0x2000248")]
	private class CamFixed : Cam
	{
		[Token(Token = "0x4000E6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private XTransform camStart;

		[Token(Token = "0x4000E70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private bool lastCrouch;

		[Token(Token = "0x6000E41")]
		[Address(RVA = "0x85F440", Offset = "0x85F440", VA = "0x85F440", Slot = "4")]
		public override void enter()
		{
		}

		[Token(Token = "0x6000E42")]
		[Address(RVA = "0x85F4E0", Offset = "0x85F4E0", VA = "0x85F4E0", Slot = "6")]
		public override void update()
		{
		}

		[Token(Token = "0x6000E43")]
		[Address(RVA = "0x85F8C0", Offset = "0x85F8C0", VA = "0x85F8C0")]
		public CamFixed()
		{
		}
	}

	[Token(Token = "0x2000249")]
	private class CamPlan : Cam
	{
		[Token(Token = "0x4000E71")]
		private const float camHeight = 0.5f;

		[Token(Token = "0x4000E72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector3 pos;

		[Token(Token = "0x4000E73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float zoom;

		[Token(Token = "0x4000E74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public XRange2 viewArea;

		[Token(Token = "0x4000E75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float minZoom;

		[Token(Token = "0x4000E76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float maxZoom;

		[Token(Token = "0x4000E77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public bool dragging;

		[Token(Token = "0x4000E78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public Vector3 startCamPos;

		[Token(Token = "0x4000E79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Vector3 startMousePos;

		[Token(Token = "0x6000E44")]
		[Address(RVA = "0x85F930", Offset = "0x85F930", VA = "0x85F930", Slot = "4")]
		public override void enter()
		{
		}

		[Token(Token = "0x6000E45")]
		[Address(RVA = "0x85F978", Offset = "0x85F978", VA = "0x85F978", Slot = "6")]
		public override void update()
		{
		}

		[Token(Token = "0x6000E46")]
		[Address(RVA = "0x85FD98", Offset = "0x85FD98", VA = "0x85FD98")]
		public CamPlan()
		{
		}
	}

	[Token(Token = "0x200024A")]
	private struct Show
	{
		[Token(Token = "0x4000E7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public bool toolbar;

		[Token(Token = "0x4000E7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
		public bool settings;

		[Token(Token = "0x4000E7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2")]
		public bool help;

		[Token(Token = "0x4000E7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3")]
		public bool message;

		[Token(Token = "0x4000E7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public bool exitRequestor;
	}

	[Serializable]
	[Token(Token = "0x200024B")]
	public class Sprites
	{
		[Token(Token = "0x4000E7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Sprite red;

		[Token(Token = "0x4000E80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Sprite yellow;

		[Token(Token = "0x4000E81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Sprite green;

		[Token(Token = "0x4000E82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Sprite blue;

		[Token(Token = "0x4000E83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Sprite pink;

		[Token(Token = "0x4000E84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Sprite black;

		[Token(Token = "0x4000E85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Sprite brown;

		[Token(Token = "0x4000E86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Sprite tick;

		[Token(Token = "0x4000E87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Sprite cross;

		[Token(Token = "0x6000E47")]
		[Address(RVA = "0x8644E8", Offset = "0x8644E8", VA = "0x8644E8")]
		public Sprites()
		{
		}
	}

	[Token(Token = "0x200024C")]
	private class Segment
	{
		[Token(Token = "0x4000E88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Vector2 v0;

		[Token(Token = "0x4000E89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector2 v1;

		[Token(Token = "0x6000E48")]
		[Address(RVA = "0x8643F4", Offset = "0x8643F4", VA = "0x8643F4")]
		public Vector2 getDir()
		{
			return default(Vector2);
		}

		[Token(Token = "0x6000E49")]
		[Address(RVA = "0x86444C", Offset = "0x86444C", VA = "0x86444C")]
		public Segment()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x200024D")]
	public struct Sensitivity
	{
		[Token(Token = "0x4000E8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float inSize;

		[Token(Token = "0x4000E8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float outSize;

		[Token(Token = "0x6000E4A")]
		[Address(RVA = "0x3FCB78", Offset = "0x3FCB78", VA = "0x3FCB78", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}

	[Serializable]
	[Token(Token = "0x200024E")]
	public class WiggleMapping
	{
		[Token(Token = "0x4000E8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public List<Sensitivity> sensitivity;

		[Token(Token = "0x6000E4B")]
		[Address(RVA = "0x8644F0", Offset = "0x8644F0", VA = "0x8644F0")]
		public WiggleMapping()
		{
		}
	}

	[Token(Token = "0x200024F")]
	private class PGettingInput : Phase, BIEventCallback
	{
		[Token(Token = "0x20002DD")]
		private enum WiggleInputMode
		{
			[Token(Token = "0x400106F")]
			power,
			[Token(Token = "0x4001070")]
			spin
		}

		[Token(Token = "0x20002DE")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x43F688", Offset = "0x43F688")]
		private sealed class <updatePreview>d__16 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001071")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001072")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001073")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public PGettingInput <>4__this;

			[Token(Token = "0x4001074")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private bool <generatedPath>5__2;

			[Token(Token = "0x4001075")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private int <iCue>5__3;

			[Token(Token = "0x4001076")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <ballRadius>5__4;

			[Token(Token = "0x4001077")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private Vector3 <lastPos>5__5;

			[Token(Token = "0x4001078")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private int <isegment>5__6;

			[Token(Token = "0x4001079")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			private bool <startAgain>5__7;

			[Token(Token = "0x400107A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x45")]
			private bool <hitObjectBall>5__8;

			[Token(Token = "0x170000CE")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000FC1")]
				[Address(RVA = "0x854704", Offset = "0x854704", VA = "0x854704", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170000CF")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000FC3")]
				[Address(RVA = "0x85474C", Offset = "0x85474C", VA = "0x85474C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000FBE")]
			[Address(RVA = "0x853EB4", Offset = "0x853EB4", VA = "0x853EB4")]
			[DebuggerHidden]
			public <updatePreview>d__16(int <>1__state)
			{
			}

			[Token(Token = "0x6000FBF")]
			[Address(RVA = "0x853EE0", Offset = "0x853EE0", VA = "0x853EE0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000FC0")]
			[Address(RVA = "0x853EE4", Offset = "0x853EE4", VA = "0x853EE4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000FC2")]
			[Address(RVA = "0x85470C", Offset = "0x85470C", VA = "0x85470C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000E8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private bool isMovingCue;

		[Token(Token = "0x4000E8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Vector3 focusPos;

		[Token(Token = "0x4000E8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private List<Vector3> path;

		[Token(Token = "0x4000E90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool previewDone;

		[Token(Token = "0x4000E91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
		private bool hitCushion;

		[Token(Token = "0x4000E92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private int objectBall;

		[Token(Token = "0x4000E93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool showPreview;

		[Token(Token = "0x4000E94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private WiggleInputMode wiggleInputMode;

		[Token(Token = "0x4000E95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Coroutine previewCoroutine;

		[Token(Token = "0x6000E4C")]
		[Address(RVA = "0x85FDB0", Offset = "0x85FDB0", VA = "0x85FDB0")]
		private void setWiggleMode(WiggleInputMode _mode)
		{
		}

		[Token(Token = "0x6000E4D")]
		[Address(RVA = "0x85FFE0", Offset = "0x85FFE0", VA = "0x85FFE0", Slot = "4")]
		public override void buttonSpin()
		{
		}

		[Token(Token = "0x6000E4E")]
		[Address(RVA = "0x85FFE8", Offset = "0x85FFE8", VA = "0x85FFE8", Slot = "5")]
		public override void buttonPower()
		{
		}

		[Token(Token = "0x6000E4F")]
		[Address(RVA = "0x85FFF0", Offset = "0x85FFF0", VA = "0x85FFF0", Slot = "6")]
		public override void buttonTurn()
		{
		}

		[Token(Token = "0x6000E50")]
		[Address(RVA = "0x85FFF4", Offset = "0x85FFF4", VA = "0x85FFF4")]
		public Vector3 getFocusPos()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000E51")]
		[Address(RVA = "0x860000", Offset = "0x860000", VA = "0x860000", Slot = "12")]
		public override void exit()
		{
		}

		[Token(Token = "0x6000E52")]
		[Address(RVA = "0x860154", Offset = "0x860154", VA = "0x860154", Slot = "7")]
		public override void buttonShoot()
		{
		}

		[Token(Token = "0x6000E53")]
		[Address(RVA = "0x8601C4", Offset = "0x8601C4", VA = "0x8601C4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x443278", Offset = "0x443278")]
		private IEnumerator updatePreview()
		{
			return null;
		}

		[Token(Token = "0x6000E54")]
		[Address(RVA = "0x86023C", Offset = "0x86023C", VA = "0x86023C", Slot = "8")]
		public override void buttonTogglePreview()
		{
		}

		[Token(Token = "0x6000E55")]
		[Address(RVA = "0x86024C", Offset = "0x86024C", VA = "0x86024C", Slot = "14")]
		public bool simEvent(BEvent _event)
		{
			return default(bool);
		}

		[Token(Token = "0x6000E56")]
		[Address(RVA = "0x860304", Offset = "0x860304", VA = "0x860304")]
		private void quickPreview()
		{
		}

		[Token(Token = "0x6000E57")]
		[Address(RVA = "0x860058", Offset = "0x860058", VA = "0x860058")]
		private void turnOffPreviewGfx()
		{
		}

		[Token(Token = "0x6000E58")]
		[Address(RVA = "0x8605D0", Offset = "0x8605D0", VA = "0x8605D0", Slot = "9")]
		public override void buttonHome()
		{
		}

		[Token(Token = "0x6000E59")]
		[Address(RVA = "0x860800", Offset = "0x860800", VA = "0x860800", Slot = "10")]
		public override void buttonHomeLocked()
		{
		}

		[Token(Token = "0x6000E5A")]
		[Address(RVA = "0x8608A4", Offset = "0x8608A4", VA = "0x8608A4", Slot = "11")]
		public override void enter()
		{
		}

		[Token(Token = "0x6000E5B")]
		[Address(RVA = "0x8614F0", Offset = "0x8614F0", VA = "0x8614F0")]
		private void setInitialCueAngle()
		{
		}

		[Token(Token = "0x6000E5C")]
		[Address(RVA = "0x861750", Offset = "0x861750", VA = "0x861750", Slot = "13")]
		public override void update()
		{
		}

		[Token(Token = "0x6000E5D")]
		[Address(RVA = "0x862DD0", Offset = "0x862DD0", VA = "0x862DD0")]
		public PGettingInput()
		{
		}
	}

	[Token(Token = "0x2000250")]
	private class PIdle : Phase
	{
		[Token(Token = "0x6000E5E")]
		[Address(RVA = "0x862E5C", Offset = "0x862E5C", VA = "0x862E5C")]
		public PIdle()
		{
		}
	}

	[Token(Token = "0x2000251")]
	private class PPlayingAnim : Phase
	{
		[Token(Token = "0x6000E5F")]
		[Address(RVA = "0x862E64", Offset = "0x862E64", VA = "0x862E64", Slot = "11")]
		public override void enter()
		{
		}

		[Token(Token = "0x6000E60")]
		[Address(RVA = "0x863374", Offset = "0x863374", VA = "0x863374")]
		public void setCueSize()
		{
		}

		[Token(Token = "0x6000E61")]
		[Address(RVA = "0x863378", Offset = "0x863378", VA = "0x863378", Slot = "13")]
		public override void update()
		{
		}

		[Token(Token = "0x6000E62")]
		[Address(RVA = "0x863CD0", Offset = "0x863CD0", VA = "0x863CD0")]
		public PPlayingAnim()
		{
		}
	}

	[Token(Token = "0x2000252")]
	private class PShoot : Phase
	{
		[Token(Token = "0x4000E96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private BAnimHead animHeadShoot;

		[Token(Token = "0x4000E97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private ThreadBoss.MyThread shootThread;

		[Token(Token = "0x6000E63")]
		[Address(RVA = "0x863CD8", Offset = "0x863CD8", VA = "0x863CD8", Slot = "11")]
		public override void enter()
		{
		}

		[Token(Token = "0x6000E64")]
		[Address(RVA = "0x863DA0", Offset = "0x863DA0", VA = "0x863DA0", Slot = "13")]
		public override void update()
		{
		}

		[Token(Token = "0x6000E65")]
		[Address(RVA = "0x863E34", Offset = "0x863E34", VA = "0x863E34")]
		private void startShoot()
		{
		}

		[Token(Token = "0x6000E66")]
		[Address(RVA = "0x863FCC", Offset = "0x863FCC", VA = "0x863FCC")]
		public PShoot()
		{
		}
	}

	[Token(Token = "0x2000253")]
	private class PShowMessage : Phase
	{
		[Token(Token = "0x6000E67")]
		[Address(RVA = "0x863FD4", Offset = "0x863FD4", VA = "0x863FD4", Slot = "11")]
		public override void enter()
		{
		}

		[Token(Token = "0x6000E68")]
		[Address(RVA = "0x864280", Offset = "0x864280", VA = "0x864280", Slot = "12")]
		public override void exit()
		{
		}

		[Token(Token = "0x6000E69")]
		[Address(RVA = "0x8642A0", Offset = "0x8642A0", VA = "0x8642A0", Slot = "13")]
		public override void update()
		{
		}

		[Token(Token = "0x6000E6A")]
		[Address(RVA = "0x8643D0", Offset = "0x8643D0", VA = "0x8643D0")]
		public PShowMessage()
		{
		}
	}

	[Token(Token = "0x2000254")]
	private class Phase
	{
		[Token(Token = "0x4000E98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public HumanPlayer B;

		[Token(Token = "0x4000E99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected float timeInState;

		[Token(Token = "0x6000E6B")]
		[Address(RVA = "0x8643D8", Offset = "0x8643D8", VA = "0x8643D8", Slot = "4")]
		public virtual void buttonSpin()
		{
		}

		[Token(Token = "0x6000E6C")]
		[Address(RVA = "0x8643DC", Offset = "0x8643DC", VA = "0x8643DC", Slot = "5")]
		public virtual void buttonPower()
		{
		}

		[Token(Token = "0x6000E6D")]
		[Address(RVA = "0x8643E0", Offset = "0x8643E0", VA = "0x8643E0", Slot = "6")]
		public virtual void buttonTurn()
		{
		}

		[Token(Token = "0x6000E6E")]
		[Address(RVA = "0x8643E4", Offset = "0x8643E4", VA = "0x8643E4", Slot = "7")]
		public virtual void buttonShoot()
		{
		}

		[Token(Token = "0x6000E6F")]
		[Address(RVA = "0x8643E8", Offset = "0x8643E8", VA = "0x8643E8", Slot = "8")]
		public virtual void buttonTogglePreview()
		{
		}

		[Token(Token = "0x6000E70")]
		[Address(RVA = "0x8643EC", Offset = "0x8643EC", VA = "0x8643EC", Slot = "9")]
		public virtual void buttonHome()
		{
		}

		[Token(Token = "0x6000E71")]
		[Address(RVA = "0x8643F0", Offset = "0x8643F0", VA = "0x8643F0", Slot = "10")]
		public virtual void buttonHomeLocked()
		{
		}

		[Token(Token = "0x6000E72")]
		[Address(RVA = "0x861088", Offset = "0x861088", VA = "0x861088", Slot = "11")]
		public virtual void enter()
		{
		}

		[Token(Token = "0x6000E73")]
		[Address(RVA = "0x86429C", Offset = "0x86429C", VA = "0x86429C", Slot = "12")]
		public virtual void exit()
		{
		}

		[Token(Token = "0x6000E74")]
		[Address(RVA = "0x862D98", Offset = "0x862D98", VA = "0x862D98", Slot = "13")]
		public virtual void update()
		{
		}

		[Token(Token = "0x6000E75")]
		[Address(RVA = "0x862E54", Offset = "0x862E54", VA = "0x862E54")]
		public Phase()
		{
		}
	}

	[Token(Token = "0x2000255")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x43F4D8", Offset = "0x43F4D8")]
	private sealed class <>c__DisplayClass200_0
	{
		[Token(Token = "0x4000E9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int index;

		[Token(Token = "0x4000E9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public HumanPlayer <>4__this;

		[Token(Token = "0x6000E76")]
		[Address(RVA = "0x85EE4C", Offset = "0x85EE4C", VA = "0x85EE4C")]
		public <>c__DisplayClass200_0()
		{
		}

		[Token(Token = "0x6000E77")]
		[Address(RVA = "0x85EE54", Offset = "0x85EE54", VA = "0x85EE54")]
		internal void <initNominate>b__0()
		{
		}
	}

	[Token(Token = "0x40005B3")]
	public const float floorY = -0.83f;

	[Token(Token = "0x40005B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Text maximizeText;

	[Token(Token = "0x40005B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float spinMoveSpeed;

	[Token(Token = "0x40005B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float powerMoveSpeed;

	[Token(Token = "0x40005B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public RVisibility rVisibility;

	[Token(Token = "0x40005B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Text debugText;

	[Token(Token = "0x40005B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float clickInterval;

	[Token(Token = "0x40005BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject tableCursor;

	[Token(Token = "0x40005BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float camTurnSpeed;

	[Token(Token = "0x40005BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float planZoomSpeed;

	[Token(Token = "0x40005BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public FloatingButtons cameraButtons;

	[Token(Token = "0x40005BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public float placeSpeed;

	[Token(Token = "0x40005BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public float grabPocketDistance;

	[Token(Token = "0x40005C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public float fastForward;

	[Token(Token = "0x40005C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public bool aiDebug;

	[Token(Token = "0x40005C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public GameObject pocketMarker;

	[Token(Token = "0x40005C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Transform debugSphere;

	[Token(Token = "0x40005C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public int framesPerUpdate;

	[Token(Token = "0x40005C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public float rangeTurnRate;

	[Token(Token = "0x40005C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public int maxPreviewParts;

	[Token(Token = "0x40005C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public float messageTime;

	[Token(Token = "0x40005C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public RPath rpath;

	[Token(Token = "0x40005C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public float buttonTurnRate;

	[Token(Token = "0x40005CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public Transform animPosition;

	[Token(Token = "0x40005CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public float monitorTurnRate;

	[Token(Token = "0x40005CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	public float mouseWheelZoomSpeed;

	[Token(Token = "0x40005CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public float planMinCamHeight;

	[Token(Token = "0x40005CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	public float planMaxCamHeight;

	[Token(Token = "0x40005CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public AudioClip sndBallBall;

	[Token(Token = "0x40005D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public AudioClip sndBallCue;

	[Token(Token = "0x40005D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public AudioClip sndBallPocket;

	[Token(Token = "0x40005D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public GameObject cue;

	[Token(Token = "0x40005D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public float cueTilt;

	[Token(Token = "0x40005D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	public float selectDistance;

	[Token(Token = "0x40005D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public RGame rGame;

	[Token(Token = "0x40005D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public float tableViewHeight;

	[Token(Token = "0x40005D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
	public float turnRate;

	[Token(Token = "0x40005D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public HudGame hud3dof;

	[Token(Token = "0x40005D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public HudGame hud6dof;

	[Token(Token = "0x40005DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public HudGame hudMonitor;

	[Token(Token = "0x40005DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public Sprites sprites;

	[Token(Token = "0x40005DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	public Vector2 fixedCameraMonitor;

	[Token(Token = "0x40005DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	public Vector2 fixedCameraVr;

	[Token(Token = "0x40005DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	public WiggleMapping wiggleMapping;

	[Token(Token = "0x40005DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	public Vector3 hudPos;

	[Token(Token = "0x40005E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
	public float hudScale;

	[Token(Token = "0x40005E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	private bool hudActive;

	[Token(Token = "0x40005E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x131")]
	private bool disableHudForScreenShot;

	[Token(Token = "0x40005E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
	private float headY_stand;

	[Token(Token = "0x40005E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	private float headY_crouch;

	[Token(Token = "0x40005E5")]
	private const float maxSpinStrength = 125f;

	[Token(Token = "0x40005E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	private SliderUseDetector suPower;

	[Token(Token = "0x40005E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	private SliderUseDetector suTurnrate;

	[Token(Token = "0x40005E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	private SliderUseDetector suSpin;

	[Token(Token = "0x40005E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	private float camAngle;

	[Token(Token = "0x40005EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	private BSimCueInput lastCueInput;

	[Token(Token = "0x40005EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	private int highlightedPocket;

	[Token(Token = "0x40005EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x16C")]
	private int nominatedPocket;

	[Token(Token = "0x40005ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	private Color loButtonColor;

	[Token(Token = "0x40005EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	private List<XTransform> fixedCameras;

	[Token(Token = "0x40005EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	private BAnimFrame lerpFrame;

	[Token(Token = "0x40005F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	private BBallType nominatedBall;

	[Token(Token = "0x40005F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	private HudGame hud;

	[Token(Token = "0x40005F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	private float cueZoom;

	[Token(Token = "0x40005F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	private BAnimHead anim;

	[Token(Token = "0x40005F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	private float animTime;

	[Token(Token = "0x40005F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B4")]
	private int animFrame;

	[Token(Token = "0x40005F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	private float cueAngle;

	[Token(Token = "0x40005F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1BC")]
	private int iRenderEvent;

	[Token(Token = "0x40005F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	private BInputRequest inputRequest;

	[Token(Token = "0x40005F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
	private BInputResponse inputResponse;

	[Token(Token = "0x40005FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
	private BSimBoss simBoss;

	[Token(Token = "0x40005FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
	private BSimCueInput cueInput;

	[Token(Token = "0x40005FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
	private BSimCueInput currentInput;

	[Token(Token = "0x40005FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
	private BSimBoss previewSim;

	[Token(Token = "0x40005FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
	private BGameInfo gameInfo;

	[Token(Token = "0x40005FF")]
	private const float twoPi = (float)Math.PI * 2f;

	[Token(Token = "0x4000600")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
	private List<RPath> pathParts;

	[Token(Token = "0x4000601")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
	private RPath quickPath;

	[Token(Token = "0x4000602")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
	private BMessage reqMessage;

	[Token(Token = "0x4000603")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
	private List<Vector3> previewPositions;

	[Token(Token = "0x4000604")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
	private bool exitRequest;

	[Token(Token = "0x4000605")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x220")]
	private List<GameObject> pocketArrows;

	[Token(Token = "0x4000606")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x228")]
	private int pathPreviewType;

	[Token(Token = "0x4000607")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x22C")]
	private int crowdSize;

	[Token(Token = "0x4000608")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x230")]
	private Vector3 hitP;

	[Token(Token = "0x4000609")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x23C")]
	private Vector3 hitN;

	[Token(Token = "0x400060A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x248")]
	private bool onUi;

	[Token(Token = "0x400060B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x249")]
	private bool worldUiActive;

	[Token(Token = "0x400060C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24C")]
	private float shootSpeed;

	[Token(Token = "0x400060D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x250")]
	private Phase currentPhase;

	[Token(Token = "0x400060E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x258")]
	private PGettingInput pGettingInput;

	[Token(Token = "0x400060F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x260")]
	private PPlayingAnim pPlayingAnim;

	[Token(Token = "0x4000610")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x268")]
	private PShoot pShoot;

	[Token(Token = "0x4000611")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x270")]
	private PShowMessage pShowMessage;

	[Token(Token = "0x4000612")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x278")]
	private PIdle pIdle;

	[Token(Token = "0x4000613")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x280")]
	private Cam currentCam;

	[Token(Token = "0x4000614")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x288")]
	private CamCueLocked cCueLocked;

	[Token(Token = "0x4000615")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x290")]
	private CamFixed cFixed;

	[Token(Token = "0x4000616")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x298")]
	private CamPlan cPlan;

	[Token(Token = "0x4000617")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A0")]
	private List<Phase> phases;

	[Token(Token = "0x4000618")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A8")]
	private List<Cam> cams;

	[Token(Token = "0x4000619")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2B0")]
	private float shootCounter;

	[Token(Token = "0x400061A")]
	private const float shootAimTime = 2f;

	[Token(Token = "0x400061B")]
	private const float _shootFireTime = 1f;

	[Token(Token = "0x400061C")]
	private const float shootEndTime = 1f;

	[Token(Token = "0x400061D")]
	private const float shootPullBackAim = 0.2f;

	[Token(Token = "0x400061E")]
	private const float shootPullBackShoot = 0.5f;

	[Token(Token = "0x400061F")]
	private const float pullBackCycles = 1f;

	[Token(Token = "0x4000620")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2B8")]
	private readonly string[] startViewOptions;

	[Token(Token = "0x4000621")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C0")]
	private bool closeEyes;

	[Token(Token = "0x4000622")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C4")]
	private int openFrames;

	[Token(Token = "0x4000623")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C8")]
	private int iLastFixedCam;

	[Token(Token = "0x4000624")]
	private const float pathWidth = 0.5f;

	[Token(Token = "0x4000625")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2CC")]
	private Vector3 manPos;

	[Token(Token = "0x4000626")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D8")]
	private Vector3 manFacing;

	[Token(Token = "0x4000627")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2E4")]
	private bool manValid;

	[Token(Token = "0x4000628")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static HumanPlayer I;

	[Token(Token = "0x4000629")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2E8")]
	internal Vector3 manequinPosition;

	[Token(Token = "0x400062A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2F4")]
	internal Vector3 manequinFacing;

	[Token(Token = "0x400062B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x300")]
	private List<BDescGame.PreviewPos> pPositions;

	[Token(Token = "0x400062C")]
	private const float selectTilt = (float)Math.PI * 4f / 25f;

	[Token(Token = "0x400062D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x308")]
	private bool crouched;

	[Token(Token = "0x400062E")]
	private const float cameraTableOffset = 0.5f;

	[Token(Token = "0x400062F")]
	private const float cameraMinMoveDistance = 1f;

	[Token(Token = "0x4000630")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x309")]
	private Show show;

	[Token(Token = "0x4000631")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30E")]
	private bool placedCrowd;

	[Token(Token = "0x60004C5")]
	[Address(RVA = "0x756734", Offset = "0x756734", VA = "0x756734")]
	private bool setCameraPreview(bool _on)
	{
		return default(bool);
	}

	[Token(Token = "0x60004C6")]
	[Address(RVA = "0x756B34", Offset = "0x756B34", VA = "0x756B34")]
	public static void setDebugText(string text)
	{
	}

	[Token(Token = "0x60004C7")]
	[Address(RVA = "0x756C08", Offset = "0x756C08", VA = "0x756C08", Slot = "4")]
	public void hpCloseEyes(bool _on)
	{
	}

	[Token(Token = "0x60004C8")]
	[Address(RVA = "0x756E34", Offset = "0x756E34", VA = "0x756E34")]
	private void updateCloseEyes()
	{
	}

	[Token(Token = "0x60004C9")]
	[Address(RVA = "0x756FC8", Offset = "0x756FC8", VA = "0x756FC8")]
	public void OnEnable()
	{
	}

	[Token(Token = "0x60004CA")]
	[Address(RVA = "0x757B4C", Offset = "0x757B4C", VA = "0x757B4C")]
	public void OnDisable()
	{
	}

	[Token(Token = "0x60004CB")]
	[Address(RVA = "0x757C18", Offset = "0x757C18", VA = "0x757C18")]
	private void Awake()
	{
	}

	[Token(Token = "0x60004CC")]
	[Address(RVA = "0x757E24", Offset = "0x757E24", VA = "0x757E24")]
	private void resetHudPosition()
	{
	}

	[Token(Token = "0x60004CD")]
	[Address(RVA = "0x757E98", Offset = "0x757E98", VA = "0x757E98")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x60004CE")]
	[Address(RVA = "0x7582A0", Offset = "0x7582A0", VA = "0x7582A0")]
	private float applyStep(float value, float step)
	{
		return default(float);
	}

	[Token(Token = "0x60004CF")]
	[Address(RVA = "0x7582E4", Offset = "0x7582E4", VA = "0x7582E4")]
	public void buttonSettingsExit()
	{
	}

	[Token(Token = "0x60004D0")]
	[Address(RVA = "0x7582F4", Offset = "0x7582F4", VA = "0x7582F4")]
	public void Update()
	{
	}

	[Token(Token = "0x60004D1")]
	[Address(RVA = "0x759964", Offset = "0x759964", VA = "0x759964")]
	public void buttonExit()
	{
	}

	[Token(Token = "0x60004D2")]
	[Address(RVA = "0x759970", Offset = "0x759970", VA = "0x759970")]
	public void buttonMaximize()
	{
	}

	[Token(Token = "0x60004D3")]
	[Address(RVA = "0x759980", Offset = "0x759980", VA = "0x759980", Slot = "6")]
	public void hpSetActive(bool _enable)
	{
	}

	[Token(Token = "0x60004D4")]
	[Address(RVA = "0x7599B4", Offset = "0x7599B4", VA = "0x7599B4", Slot = "7")]
	public bool hpGetActive()
	{
		return default(bool);
	}

	[Token(Token = "0x60004D5")]
	[Address(RVA = "0x7599D8", Offset = "0x7599D8", VA = "0x7599D8", Slot = "8")]
	public void hpSetPathPreviewType(int _type)
	{
	}

	[Token(Token = "0x60004D6")]
	[Address(RVA = "0x7599E0", Offset = "0x7599E0", VA = "0x7599E0", Slot = "9")]
	public void hpSetCrowdSize(int _size)
	{
	}

	[Token(Token = "0x60004D7")]
	[Address(RVA = "0x7599EC", Offset = "0x7599EC", VA = "0x7599EC", Slot = "10")]
	public void hpSetGameInfo(BGameInfo _gameInfo)
	{
	}

	[Token(Token = "0x60004D8")]
	[Address(RVA = "0x759A28", Offset = "0x759A28", VA = "0x759A28", Slot = "11")]
	public bool hpIsAnimDone()
	{
		return default(bool);
	}

	[Token(Token = "0x60004D9")]
	[Address(RVA = "0x759A38", Offset = "0x759A38", VA = "0x759A38", Slot = "12")]
	public void hpSetBallPositions(BAnimFrame _frame)
	{
	}

	[Token(Token = "0x60004DA")]
	[Address(RVA = "0x759A54", Offset = "0x759A54", VA = "0x759A54", Slot = "13")]
	public void hpShowMessage(BMessage _message)
	{
	}

	[Token(Token = "0x60004DB")]
	[Address(RVA = "0x759A84", Offset = "0x759A84", VA = "0x759A84", Slot = "14")]
	public void hpInitGame(BSimBoss _simBoss)
	{
	}

	[Token(Token = "0x60004DC")]
	[Address(RVA = "0x75AC80", Offset = "0x75AC80", VA = "0x75AC80", Slot = "15")]
	public void hpPlayAnim(BAnimHead _anim)
	{
	}

	[Token(Token = "0x60004DD")]
	[Address(RVA = "0x75ACB0", Offset = "0x75ACB0", VA = "0x75ACB0", Slot = "16")]
	public BInputResponse hpGetResponse()
	{
		return null;
	}

	[Token(Token = "0x60004DE")]
	[Address(RVA = "0x75ACB8", Offset = "0x75ACB8", VA = "0x75ACB8", Slot = "5")]
	public bool hpShowingMessage()
	{
		return default(bool);
	}

	[Token(Token = "0x60004DF")]
	[Address(RVA = "0x75ACCC", Offset = "0x75ACCC", VA = "0x75ACCC", Slot = "17")]
	public void hpDoRequest(BInputRequest _req, BSimBoss _simBoss)
	{
	}

	[Token(Token = "0x60004E0")]
	[Address(RVA = "0x75AD14", Offset = "0x75AD14", VA = "0x75AD14", Slot = "18")]
	public bool hpExitRequest()
	{
		return default(bool);
	}

	[Token(Token = "0x60004E1")]
	[Address(RVA = "0x75AD1C", Offset = "0x75AD1C", VA = "0x75AD1C")]
	private List<Segment> merge(List<Segment> segs)
	{
		return null;
	}

	[Token(Token = "0x60004E2")]
	[Address(RVA = "0x75A4A0", Offset = "0x75A4A0", VA = "0x75A4A0")]
	private void initCameraButtons()
	{
	}

	[Token(Token = "0x60004E3")]
	[Address(RVA = "0x75B050", Offset = "0x75B050", VA = "0x75B050")]
	private float getHeadY()
	{
		return default(float);
	}

	[Token(Token = "0x60004E4")]
	[Address(RVA = "0x756C54", Offset = "0x756C54", VA = "0x756C54")]
	private void buttonCamera(int _index)
	{
	}

	[Token(Token = "0x60004E5")]
	[Address(RVA = "0x759658", Offset = "0x759658", VA = "0x759658")]
	private void updateRemoteCamera()
	{
	}

	[Token(Token = "0x60004E6")]
	[Address(RVA = "0x75AB60", Offset = "0x75AB60", VA = "0x75AB60")]
	private void initPlanCamera()
	{
	}

	[Token(Token = "0x60004E7")]
	[Address(RVA = "0x759D34", Offset = "0x759D34", VA = "0x759D34")]
	private void initStates()
	{
	}

	[Token(Token = "0x60004E8")]
	[Address(RVA = "0x75A1C4", Offset = "0x75A1C4", VA = "0x75A1C4")]
	private void initNomintePocket()
	{
	}

	[Token(Token = "0x60004E9")]
	[Address(RVA = "0x75952C", Offset = "0x75952C", VA = "0x75952C")]
	private void debugInput()
	{
	}

	[Token(Token = "0x60004EA")]
	[Address(RVA = "0x75B32C", Offset = "0x75B32C", VA = "0x75B32C")]
	private void buttonShowVisibility()
	{
	}

	[Token(Token = "0x60004EB")]
	[Address(RVA = "0x75B1B4", Offset = "0x75B1B4", VA = "0x75B1B4")]
	private void buttonDebug()
	{
	}

	[Token(Token = "0x60004EC")]
	[Address(RVA = "0x75B3C8", Offset = "0x75B3C8", VA = "0x75B3C8")]
	private Vector3 swapYZ(Vector3 v)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60004ED")]
	[Address(RVA = "0x75B3D8", Offset = "0x75B3D8", VA = "0x75B3D8")]
	public void buttonPlaybackViewCue()
	{
	}

	[Token(Token = "0x60004EE")]
	[Address(RVA = "0x7598A0", Offset = "0x7598A0", VA = "0x7598A0")]
	public void buttonCrouch()
	{
	}

	[Token(Token = "0x60004EF")]
	[Address(RVA = "0x75B3E0", Offset = "0x75B3E0", VA = "0x75B3E0")]
	public void buttonToggleRenderMode()
	{
	}

	[Token(Token = "0x60004F0")]
	[Address(RVA = "0x75B480", Offset = "0x75B480", VA = "0x75B480")]
	public void buttonToggleBallPreview()
	{
	}

	[Token(Token = "0x60004F1")]
	[Address(RVA = "0x75B5AC", Offset = "0x75B5AC", VA = "0x75B5AC")]
	public void buttonToggleTrails()
	{
	}

	[Token(Token = "0x60004F2")]
	[Address(RVA = "0x75B6D8", Offset = "0x75B6D8", VA = "0x75B6D8")]
	public void buttonStartViewLeft()
	{
	}

	[Token(Token = "0x60004F3")]
	[Address(RVA = "0x75B778", Offset = "0x75B778", VA = "0x75B778")]
	public void buttonStartViewRight()
	{
	}

	[Token(Token = "0x60004F4")]
	[Address(RVA = "0x75798C", Offset = "0x75798C", VA = "0x75798C")]
	private void refreshStartViewDisplay()
	{
	}

	[Token(Token = "0x60004F5")]
	[Address(RVA = "0x75B818", Offset = "0x75B818", VA = "0x75B818")]
	public void buttonHandToggle()
	{
	}

	[Token(Token = "0x60004F6")]
	[Address(RVA = "0x75B08C", Offset = "0x75B08C", VA = "0x75B08C")]
	public void buttonTogglePreview()
	{
	}

	[Token(Token = "0x60004F7")]
	[Address(RVA = "0x75B07C", Offset = "0x75B07C", VA = "0x75B07C")]
	public void buttonToggleHelp()
	{
	}

	[Token(Token = "0x60004F8")]
	[Address(RVA = "0x7598B0", Offset = "0x7598B0", VA = "0x7598B0")]
	public void buttonHelpExit()
	{
	}

	[Token(Token = "0x60004F9")]
	[Address(RVA = "0x75B0A4", Offset = "0x75B0A4", VA = "0x75B0A4")]
	public void buttonToggleSettings()
	{
	}

	[Token(Token = "0x60004FA")]
	[Address(RVA = "0x75B0B4", Offset = "0x75B0B4", VA = "0x75B0B4")]
	public void buttonToggleSpinPanel()
	{
	}

	[Token(Token = "0x60004FB")]
	[Address(RVA = "0x75B900", Offset = "0x75B900", VA = "0x75B900")]
	public void buttonPower()
	{
	}

	[Token(Token = "0x60004FC")]
	[Address(RVA = "0x75B918", Offset = "0x75B918", VA = "0x75B918")]
	public void buttonSpin()
	{
	}

	[Token(Token = "0x60004FD")]
	[Address(RVA = "0x75B930", Offset = "0x75B930", VA = "0x75B930")]
	public void buttonTurn()
	{
	}

	[Token(Token = "0x60004FE")]
	[Address(RVA = "0x75B948", Offset = "0x75B948", VA = "0x75B948")]
	public void buttonOkay()
	{
	}

	[Token(Token = "0x60004FF")]
	[Address(RVA = "0x75B958", Offset = "0x75B958", VA = "0x75B958")]
	public void buttonCancel()
	{
	}

	[Token(Token = "0x6000500")]
	[Address(RVA = "0x75B960", Offset = "0x75B960", VA = "0x75B960")]
	public void buttonHome()
	{
	}

	[Token(Token = "0x6000501")]
	[Address(RVA = "0x75B184", Offset = "0x75B184", VA = "0x75B184")]
	public void buttonHomeLocked()
	{
	}

	[Token(Token = "0x6000502")]
	[Address(RVA = "0x75B978", Offset = "0x75B978", VA = "0x75B978")]
	public void buttonPlan()
	{
	}

	[Token(Token = "0x6000503")]
	[Address(RVA = "0x75B19C", Offset = "0x75B19C", VA = "0x75B19C")]
	public void buttonShoot()
	{
	}

	[Token(Token = "0x6000504")]
	[Address(RVA = "0x75B994", Offset = "0x75B994", VA = "0x75B994")]
	private void playSound(AudioClip _clip)
	{
	}

	[Token(Token = "0x6000505")]
	[Address(RVA = "0x75BA00", Offset = "0x75BA00", VA = "0x75BA00")]
	public void buttonNominateBall(int _index)
	{
	}

	[Token(Token = "0x6000506")]
	[Address(RVA = "0x75B074", Offset = "0x75B074", VA = "0x75B074")]
	private void setHighlightedPocket(int _index)
	{
	}

	[Token(Token = "0x6000507")]
	[Address(RVA = "0x75B06C", Offset = "0x75B06C", VA = "0x75B06C")]
	private void setNominatedPocket(int _index)
	{
	}

	[Token(Token = "0x6000508")]
	[Address(RVA = "0x75BB88", Offset = "0x75BB88", VA = "0x75BB88")]
	private void refreshPocketColors()
	{
	}

	[Token(Token = "0x6000509")]
	[Address(RVA = "0x75BCE4", Offset = "0x75BCE4", VA = "0x75BCE4")]
	private void placePocketMarkers()
	{
	}

	[Token(Token = "0x600050A")]
	[Address(RVA = "0x75BE48", Offset = "0x75BE48", VA = "0x75BE48")]
	private void initNominate()
	{
	}

	[Token(Token = "0x600050B")]
	[Address(RVA = "0x75C0E4", Offset = "0x75C0E4", VA = "0x75C0E4")]
	private Sprite getSprite(BBallType _ballType)
	{
		return null;
	}

	[Token(Token = "0x600050C")]
	[Address(RVA = "0x75C190", Offset = "0x75C190", VA = "0x75C190")]
	private int getStringLines(string s)
	{
		return default(int);
	}

	[Token(Token = "0x600050D")]
	[Address(RVA = "0x75C208", Offset = "0x75C208", VA = "0x75C208")]
	private static void setActive(GameObject go, bool on)
	{
	}

	[Token(Token = "0x600050E")]
	[Address(RVA = "0x7598B8", Offset = "0x7598B8", VA = "0x7598B8")]
	private static void setActive(MonoBehaviour mb, bool on)
	{
	}

	[Token(Token = "0x600050F")]
	[Address(RVA = "0x757AE8", Offset = "0x757AE8", VA = "0x757AE8")]
	private void setPhase(Phase _phase)
	{
	}

	[Token(Token = "0x6000510")]
	[Address(RVA = "0x757928", Offset = "0x757928", VA = "0x757928")]
	private void setCam(Cam _cam)
	{
	}

	[Token(Token = "0x6000511")]
	[Address(RVA = "0x75C2A8", Offset = "0x75C2A8", VA = "0x75C2A8")]
	public HumanPlayer()
	{
	}
}
[Token(Token = "0x2000095")]
public class HudGame : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x2000256")]
	public class Scoreline
	{
		[Token(Token = "0x4000E9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Image moveIcon;

		[Token(Token = "0x4000E9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Image snookered;

		[Token(Token = "0x4000E9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Image freeBall;

		[Token(Token = "0x4000E9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Text textName;

		[Token(Token = "0x4000EA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Text textScore;

		[Token(Token = "0x4000EA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Image ballIcon;

		[Token(Token = "0x6000E78")]
		[Address(RVA = "0x85EE44", Offset = "0x85EE44", VA = "0x85EE44")]
		public Scoreline()
		{
		}
	}

	[Token(Token = "0x4000632")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public IntSlider heightOffset;

	[Token(Token = "0x4000633")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform maximizeIcon;

	[Token(Token = "0x4000634")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject toolbarRoot;

	[Token(Token = "0x4000635")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject tips;

	[Token(Token = "0x4000636")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject exitRequestor;

	[Token(Token = "0x4000637")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject settingsRoot;

	[Token(Token = "0x4000638")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject message;

	[Token(Token = "0x4000639")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject nominatePocketRoot;

	[Token(Token = "0x400063A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GameObject frameCrouch;

	[Token(Token = "0x400063B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public SpinIndicator spinIndicator;

	[Token(Token = "0x400063C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public PowerIndicator powerIndicator;

	[Token(Token = "0x400063D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public TurnIndicator turnIndicator;

	[Token(Token = "0x400063E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public GameObject frameTips;

	[Token(Token = "0x400063F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public GameObject frameSpinPanel;

	[Token(Token = "0x4000640")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public GameObject frameTogglePreview;

	[Token(Token = "0x4000641")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public GameObject frameSettingsToggle;

	[Token(Token = "0x4000642")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public GameObject frameHomeLocked;

	[Token(Token = "0x4000643")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public GameObject framePlan;

	[Token(Token = "0x4000644")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public GameObject plan;

	[Token(Token = "0x4000645")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public GameObject spinPanel;

	[Token(Token = "0x4000646")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public GameObject nominateRoot;

	[Token(Token = "0x4000647")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public GameObject[] nonimateBalls;

	[Token(Token = "0x4000648")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public Canvas canvas;

	[Token(Token = "0x4000649")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public Slider power;

	[Token(Token = "0x400064A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public Slider turnRate;

	[Token(Token = "0x400064B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public Vector2 farViewPos;

	[Token(Token = "0x400064C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public Vector2 nearViewPos;

	[Token(Token = "0x400064D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public ButtonContinuous zoomIn;

	[Token(Token = "0x400064E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public ButtonContinuous zoomOut;

	[Token(Token = "0x400064F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public ButtonContinuous rotateLeft;

	[Token(Token = "0x4000650")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	public ButtonContinuous rotateRight;

	[Token(Token = "0x4000651")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	public ButtonContinuous camLeft;

	[Token(Token = "0x4000652")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	public ButtonContinuous camRight;

	[Token(Token = "0x4000653")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	public GameObject shoot;

	[Token(Token = "0x4000654")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	public GameObject home;

	[Token(Token = "0x4000655")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	public GameObject homeLocked;

	[Token(Token = "0x4000656")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	public GameObject spinPanelToggle;

	[Token(Token = "0x4000657")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	public Button settingsToggle;

	[Token(Token = "0x4000658")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	public Button togglePreview;

	[Token(Token = "0x4000659")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	public Button toggleTrails;

	[Token(Token = "0x400065A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	public Button toggleRenderMode;

	[Token(Token = "0x400065B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	public Button showCue;

	[Token(Token = "0x400065C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	public Text startViewOption;

	[Token(Token = "0x400065D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	public Text hand;

	[Token(Token = "0x400065E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	public Scoreline[] scoreLine;

	[Token(Token = "0x400065F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	public Sprite sprCanMoveBall;

	[Token(Token = "0x4000660")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	public Sprite sprCantMoveBall;

	[Token(Token = "0x4000661")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	public Sprite anyColor;

	[Token(Token = "0x4000662")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	public Sprite reds;

	[Token(Token = "0x4000663")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	public Sprite blues;

	[Token(Token = "0x4000664")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	public Sprite greens;

	[Token(Token = "0x4000665")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	public Sprite yellows;

	[Token(Token = "0x4000666")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	public Sprite browns;

	[Token(Token = "0x4000667")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	public Sprite pinks;

	[Token(Token = "0x4000668")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
	public Sprite blacks;

	[Token(Token = "0x4000669")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
	public Sprite other;

	[Token(Token = "0x400066A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
	public Sprite poolAny;

	[Token(Token = "0x400066B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
	public Sprite poolStripes;

	[Token(Token = "0x400066C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
	public Sprite poolSpots;

	[Token(Token = "0x400066D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
	public Sprite pool1Ball;

	[Token(Token = "0x400066E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
	public Sprite pool2Ball;

	[Token(Token = "0x400066F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
	public Sprite pool3Ball;

	[Token(Token = "0x4000670")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
	public Sprite pool4Ball;

	[Token(Token = "0x4000671")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
	public Sprite pool5Ball;

	[Token(Token = "0x4000672")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
	public Sprite pool6Ball;

	[Token(Token = "0x4000673")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x220")]
	public Sprite pool7Ball;

	[Token(Token = "0x4000674")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x228")]
	public Sprite pool8Ball;

	[Token(Token = "0x4000675")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x230")]
	public Sprite pool9Ball;

	[Token(Token = "0x4000676")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x238")]
	public Sprite pool10Ball;

	[Token(Token = "0x4000677")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x240")]
	public Sprite pool11Ball;

	[Token(Token = "0x4000678")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x248")]
	public Sprite pool12Ball;

	[Token(Token = "0x4000679")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x250")]
	public Sprite pool13Ball;

	[Token(Token = "0x400067A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x258")]
	public Sprite pool14Ball;

	[Token(Token = "0x400067B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x260")]
	public Sprite pool15Ball;

	[Token(Token = "0x400067C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x268")]
	private BDescGame descGame;

	[Token(Token = "0x400067D")]
	private const float flashPeriod = 3f;

	[Token(Token = "0x6000512")]
	[Address(RVA = "0x755D34", Offset = "0x755D34", VA = "0x755D34")]
	public void setTable(BDescGame _descGame)
	{
	}

	[Token(Token = "0x6000513")]
	[Address(RVA = "0x755D44", Offset = "0x755D44", VA = "0x755D44")]
	private bool matches(BBallType[] a, BBallType[] b)
	{
		return default(bool);
	}

	[Token(Token = "0x6000514")]
	[Address(RVA = "0x755DC0", Offset = "0x755DC0", VA = "0x755DC0")]
	public void setGameInfo(BGameInfo _gameInfo)
	{
	}

	[Token(Token = "0x6000515")]
	[Address(RVA = "0x7560A4", Offset = "0x7560A4", VA = "0x7560A4")]
	public Sprite getPlayeSprite(BPlayerInfo pi)
	{
		return null;
	}

	[Token(Token = "0x6000516")]
	[Address(RVA = "0x7560E0", Offset = "0x7560E0", VA = "0x7560E0")]
	private Sprite getTargetSprite(BBallType[] type)
	{
		return null;
	}

	[Token(Token = "0x6000517")]
	[Address(RVA = "0x756720", Offset = "0x756720", VA = "0x756720")]
	public HudGame()
	{
	}
}
[Token(Token = "0x2000096")]
public interface IHumanPlayer
{
	[Token(Token = "0x6000518")]
	void hpCloseEyes(bool _close);

	[Token(Token = "0x6000519")]
	bool hpShowingMessage();

	[Token(Token = "0x600051A")]
	void hpSetActive(bool _enable);

	[Token(Token = "0x600051B")]
	bool hpGetActive();

	[Token(Token = "0x600051C")]
	void hpSetPathPreviewType(int _type);

	[Token(Token = "0x600051D")]
	void hpSetCrowdSize(int _crowdSize);

	[Token(Token = "0x600051E")]
	void hpSetGameInfo(BGameInfo _gameInfo);

	[Token(Token = "0x600051F")]
	bool hpIsAnimDone();

	[Token(Token = "0x6000520")]
	void hpSetBallPositions(BAnimFrame _frame);

	[Token(Token = "0x6000521")]
	void hpShowMessage(BMessage _message);

	[Token(Token = "0x6000522")]
	void hpInitGame(BSimBoss _simBoss);

	[Token(Token = "0x6000523")]
	void hpPlayAnim(BAnimHead _anim);

	[Token(Token = "0x6000524")]
	BInputResponse hpGetResponse();

	[Token(Token = "0x6000525")]
	void hpDoRequest(BInputRequest _req, BSimBoss _simBoss);

	[Token(Token = "0x6000526")]
	bool hpExitRequest();
}
[Token(Token = "0x2000097")]
public class PowerIndicator : MonoBehaviour
{
	[Token(Token = "0x400067E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Image filler;

	[Token(Token = "0x400067F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Image frame;

	[Token(Token = "0x4000680")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool dragging;

	[Token(Token = "0x6000527")]
	[Address(RVA = "0xE635A4", Offset = "0xE635A4", VA = "0xE635A4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000528")]
	[Address(RVA = "0xE635AC", Offset = "0xE635AC", VA = "0xE635AC")]
	public void set(float _fill)
	{
	}

	[Token(Token = "0x6000529")]
	[Address(RVA = "0xE635C8", Offset = "0xE635C8", VA = "0xE635C8")]
	public float get()
	{
		return default(float);
	}

	[Token(Token = "0x600052A")]
	[Address(RVA = "0xE635E4", Offset = "0xE635E4", VA = "0xE635E4")]
	public void dragStart()
	{
	}

	[Token(Token = "0x600052B")]
	[Address(RVA = "0xE635F0", Offset = "0xE635F0", VA = "0xE635F0")]
	public void dragEnd()
	{
	}

	[Token(Token = "0x600052C")]
	[Address(RVA = "0xE635F8", Offset = "0xE635F8", VA = "0xE635F8")]
	private void Update()
	{
	}

	[Token(Token = "0x600052D")]
	[Address(RVA = "0xE63724", Offset = "0xE63724", VA = "0xE63724")]
	public PowerIndicator()
	{
	}
}
[Token(Token = "0x2000098")]
public class QuickStart6Dof : MonoBehaviour
{
	[Token(Token = "0x4000681")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Text howToTurn;

	[Token(Token = "0x4000682")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Text howToChangeSpin;

	[Token(Token = "0x4000683")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Text howToChangePower;

	[Token(Token = "0x4000684")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Text howToShoot;

	[Token(Token = "0x600052E")]
	[Address(RVA = "0x8AC91C", Offset = "0x8AC91C", VA = "0x8AC91C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600052F")]
	[Address(RVA = "0x8ACA40", Offset = "0x8ACA40", VA = "0x8ACA40")]
	private string setHands(string s)
	{
		return null;
	}

	[Token(Token = "0x6000530")]
	[Address(RVA = "0x8ACBF4", Offset = "0x8ACBF4", VA = "0x8ACBF4")]
	public QuickStart6Dof()
	{
	}
}
[Token(Token = "0x2000099")]
public class RBall : MonoBehaviour
{
	[Token(Token = "0x4000685")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public BBallType type;

	[Token(Token = "0x4000686")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject threed;

	[Token(Token = "0x4000687")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject billboard;

	[Token(Token = "0x4000688")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject shadow;

	[Token(Token = "0x4000689")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject trail;

	[Token(Token = "0x6000531")]
	[Address(RVA = "0x8ACBFC", Offset = "0x8ACBFC", VA = "0x8ACBFC")]
	public RBall()
	{
	}
}
[Token(Token = "0x200009A")]
public class RGame : MonoBehaviour
{
	[Token(Token = "0x2000257")]
	public enum RenderMode
	{
		[Token(Token = "0x4000EA3")]
		threed,
		[Token(Token = "0x4000EA4")]
		billboard
	}

	[Token(Token = "0x400068A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float manequinSize;

	[Token(Token = "0x400068B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject manequin;

	[Token(Token = "0x400068C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float lineFraction;

	[Token(Token = "0x400068D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float spotFraction;

	[Token(Token = "0x400068E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject spotTemplate;

	[Token(Token = "0x400068F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public int previewBallCount;

	[Token(Token = "0x4000690")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public RBall rBall;

	[Token(Token = "0x4000691")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject highlight;

	[Token(Token = "0x4000692")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float highlightScreenSize;

	[Token(Token = "0x4000693")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public float highlightOffset;

	[Token(Token = "0x4000694")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GameObject linePrefab;

	[Token(Token = "0x4000695")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public float lineHeight;

	[Token(Token = "0x4000696")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Mesh shadowMesh;

	[Token(Token = "0x4000697")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Material shadowMat;

	[Token(Token = "0x4000698")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private float ballRadius;

	[Token(Token = "0x4000699")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private List<RBall> balls;

	[Token(Token = "0x400069A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private BAnimFrame renderScene;

	[Token(Token = "0x400069B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private Vector3 scale;

	[Token(Token = "0x400069C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	private RenderMode renderMode;

	[Token(Token = "0x400069D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private List<Material> materials;

	[Token(Token = "0x400069E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private bool initted;

	[Token(Token = "0x400069F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private List<GameObject> allBalls;

	[Token(Token = "0x40006A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private bool showTrails;

	[Token(Token = "0x40006A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private Vector3 hiPos;

	[Token(Token = "0x40006A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private float hiRadius;

	[Token(Token = "0x40006A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	private bool hiShow;

	[Token(Token = "0x40006A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private Color hiColor;

	[Token(Token = "0x40006A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private List<RBall> previewBalls;

	[Token(Token = "0x40006A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private List<GameObject> lines;

	[Token(Token = "0x40006A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private List<GameObject> spots;

	[Token(Token = "0x40006A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private bool useInstancing;

	[Token(Token = "0x40006A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private Matrix4x4[] shadowMatrices;

	[Token(Token = "0x40006AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	private int shadowMatricesCount;

	[Token(Token = "0x6000532")]
	[Address(RVA = "0x8ACC04", Offset = "0x8ACC04", VA = "0x8ACC04")]
	public void setPreviewBallsOn(bool _on)
	{
	}

	[Token(Token = "0x6000533")]
	[Address(RVA = "0x8ACCBC", Offset = "0x8ACCBC", VA = "0x8ACCBC")]
	public void enablePreviewBall(int _index)
	{
	}

	[Token(Token = "0x6000534")]
	[Address(RVA = "0x8ACDB8", Offset = "0x8ACDB8", VA = "0x8ACDB8")]
	public void setDrawManequin(bool _on)
	{
	}

	[Token(Token = "0x6000535")]
	[Address(RVA = "0x8ACDD8", Offset = "0x8ACDD8", VA = "0x8ACDD8")]
	public void setManequinPos(Vector3 _position, Vector3 _facing)
	{
	}

	[Token(Token = "0x6000536")]
	[Address(RVA = "0x8ACECC", Offset = "0x8ACECC", VA = "0x8ACECC")]
	public void setPreviewBall(int _index, Vector3 _pos)
	{
	}

	[Token(Token = "0x6000537")]
	[Address(RVA = "0x8AD004", Offset = "0x8AD004", VA = "0x8AD004")]
	public int getPreviewBallCount()
	{
		return default(int);
	}

	[Token(Token = "0x6000538")]
	[Address(RVA = "0x8AD050", Offset = "0x8AD050", VA = "0x8AD050")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000539")]
	[Address(RVA = "0x8AD054", Offset = "0x8AD054", VA = "0x8AD054")]
	private void Update()
	{
	}

	[Token(Token = "0x600053A")]
	[Address(RVA = "0x8AD220", Offset = "0x8AD220", VA = "0x8AD220")]
	private void updatePreviewBalls()
	{
	}

	[Token(Token = "0x600053B")]
	[Address(RVA = "0x8AD828", Offset = "0x8AD828", VA = "0x8AD828")]
	private void Start()
	{
	}

	[Token(Token = "0x600053C")]
	[Address(RVA = "0x8AD878", Offset = "0x8AD878", VA = "0x8AD878")]
	public void toggleRenderMode()
	{
	}

	[Token(Token = "0x600053D")]
	[Address(RVA = "0x8ADA50", Offset = "0x8ADA50", VA = "0x8ADA50")]
	public RenderMode getRenderMode()
	{
		return default(RenderMode);
	}

	[Token(Token = "0x600053E")]
	[Address(RVA = "0x8AD898", Offset = "0x8AD898", VA = "0x8AD898")]
	public void setRenderMode(RenderMode _mode)
	{
	}

	[Token(Token = "0x600053F")]
	[Address(RVA = "0x8ADA58", Offset = "0x8ADA58", VA = "0x8ADA58")]
	private void setRenderMode(RBall _ball, RenderMode _mode)
	{
	}

	[Token(Token = "0x6000540")]
	[Address(RVA = "0x8ADB18", Offset = "0x8ADB18", VA = "0x8ADB18")]
	public void setHighlightPos(bool _on, Vector3 v, float _radius, Color _color)
	{
	}

	[Token(Token = "0x6000541")]
	[Address(RVA = "0x8ACEBC", Offset = "0x8ACEBC", VA = "0x8ACEBC")]
	private Vector3 swapYZ(Vector3 v)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000542")]
	[Address(RVA = "0x8ADB34", Offset = "0x8ADB34", VA = "0x8ADB34")]
	public void setShowTrails(bool _show)
	{
	}

	[Token(Token = "0x6000543")]
	[Address(RVA = "0x8ADC74", Offset = "0x8ADC74", VA = "0x8ADC74")]
	public void setBallPos(int _index, Vector3 pos)
	{
	}

	[Token(Token = "0x6000544")]
	[Address(RVA = "0x8ADF24", Offset = "0x8ADF24", VA = "0x8ADF24")]
	public void setBalls(BAnimFrame head)
	{
	}

	[Token(Token = "0x6000545")]
	[Address(RVA = "0x8AD584", Offset = "0x8AD584", VA = "0x8AD584")]
	private void setShadows(BAnimFrame _frame)
	{
	}

	[Token(Token = "0x6000546")]
	[Address(RVA = "0x8AD41C", Offset = "0x8AD41C", VA = "0x8AD41C")]
	private void updateHighlight()
	{
	}

	[Token(Token = "0x6000547")]
	[Address(RVA = "0x8AE478", Offset = "0x8AE478", VA = "0x8AE478")]
	public void deinit()
	{
	}

	[Token(Token = "0x6000548")]
	[Address(RVA = "0x8AE97C", Offset = "0x8AE97C", VA = "0x8AE97C")]
	private void makeLine(BMarkLine line)
	{
	}

	[Token(Token = "0x6000549")]
	[Address(RVA = "0x8AEDE8", Offset = "0x8AEDE8", VA = "0x8AEDE8")]
	public void init(BSimBoss _boss)
	{
	}

	[Token(Token = "0x600054A")]
	[Address(RVA = "0x8AF340", Offset = "0x8AF340", VA = "0x8AF340")]
	private RBall makeBall(BBallType _type, float _radius)
	{
		return null;
	}

	[Token(Token = "0x600054B")]
	[Address(RVA = "0x8AF874", Offset = "0x8AF874", VA = "0x8AF874")]
	public RGame()
	{
	}
}
[Token(Token = "0x200009B")]
public class RPath : MonoBehaviour
{
	[Token(Token = "0x40006AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int pathAccuracy;

	[Token(Token = "0x40006AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float groundOffset;

	[Token(Token = "0x40006AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float tileMoveSpeed;

	[Token(Token = "0x40006AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float tileScale;

	[Token(Token = "0x40006AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private int nSegment;

	[Token(Token = "0x40006B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Vector3[] meshVertices;

	[Token(Token = "0x40006B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Vector2[] meshUv;

	[Token(Token = "0x40006B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Material meshMaterial;

	[Token(Token = "0x40006B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Vector3[] centerPath;

	[Token(Token = "0x40006B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool initted;

	[Token(Token = "0x600054C")]
	[Address(RVA = "0x8AFA7C", Offset = "0x8AFA7C", VA = "0x8AFA7C")]
	private void init()
	{
	}

	[Token(Token = "0x600054D")]
	[Address(RVA = "0x8AFE44", Offset = "0x8AFE44", VA = "0x8AFE44")]
	private void Awake()
	{
	}

	[Token(Token = "0x600054E")]
	[Address(RVA = "0x8AFE48", Offset = "0x8AFE48", VA = "0x8AFE48")]
	internal bool setPath(List<Vector3> path, float pathWidth)
	{
		return default(bool);
	}

	[Token(Token = "0x600054F")]
	[Address(RVA = "0x8B049C", Offset = "0x8B049C", VA = "0x8B049C")]
	public RPath()
	{
	}
}
[Token(Token = "0x200009C")]
public class RPolygon : MonoBehaviour
{
	[Token(Token = "0x2000258")]
	public enum Plane
	{
		[Token(Token = "0x4000EA6")]
		x,
		[Token(Token = "0x4000EA7")]
		y,
		[Token(Token = "0x4000EA8")]
		z
	}

	[Token(Token = "0x40006B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject quad;

	[Token(Token = "0x40006B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Camera myCamera;

	[Token(Token = "0x40006B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Material polyMat;

	[Token(Token = "0x40006B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Material polyrgbMat;

	[Token(Token = "0x40006B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public int offscreenLayer;

	[Token(Token = "0x40006BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private XRange2 range;

	[Token(Token = "0x40006BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private RenderTexture myTexture;

	[Token(Token = "0x40006BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private GameObject frontObj;

	[Token(Token = "0x40006BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private GameObject backObj;

	[Token(Token = "0x40006BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private List<Vector3> verts;

	[Token(Token = "0x40006BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private List<int> triForward;

	[Token(Token = "0x40006C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private List<int> triBackward;

	[Token(Token = "0x40006C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Mesh frontMesh;

	[Token(Token = "0x40006C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Mesh backMesh;

	[Token(Token = "0x40006C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private Material addMat;

	[Token(Token = "0x40006C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private Material subMat;

	[Token(Token = "0x40006C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private bool initted;

	[Token(Token = "0x40006C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private Transform offscreen;

	[Token(Token = "0x6000550")]
	[Address(RVA = "0x8B04B8", Offset = "0x8B04B8", VA = "0x8B04B8")]
	public void getArea(out RenderTexture _rt, out XRange2 _range)
	{
	}

	[Token(Token = "0x6000551")]
	[Address(RVA = "0x8B04F8", Offset = "0x8B04F8", VA = "0x8B04F8")]
	public void saveImage(string _fileName, Color iconColor)
	{
	}

	[Token(Token = "0x6000552")]
	[Address(RVA = "0x8B0794", Offset = "0x8B0794", VA = "0x8B0794")]
	public void OnDestroy()
	{
	}

	[Token(Token = "0x6000553")]
	[Address(RVA = "0x8B08A0", Offset = "0x8B08A0", VA = "0x8B08A0")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000554")]
	[Address(RVA = "0x8B09FC", Offset = "0x8B09FC", VA = "0x8B09FC")]
	public void draw(List<Vector2> outline, int texSize, Plane _plane, bool oneOff = false)
	{
	}

	[Token(Token = "0x6000555")]
	[Address(RVA = "0x8B1798", Offset = "0x8B1798", VA = "0x8B1798")]
	public RPolygon()
	{
	}
}
[Token(Token = "0x200009D")]
public struct Trans2DMat
{
	[Token(Token = "0x40006C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector2 p;

	[Token(Token = "0x40006C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public Vector2 x;

	[Token(Token = "0x40006C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Vector2 y;

	[Token(Token = "0x6000556")]
	[Address(RVA = "0x3FC344", Offset = "0x3FC344", VA = "0x3FC344")]
	public Vector2 localToWorld(Vector2 v)
	{
		return default(Vector2);
	}
}
[Token(Token = "0x200009E")]
public class RTableMesh : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x2000259")]
	public class Materials
	{
		[Token(Token = "0x4000EA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Material felt;

		[Token(Token = "0x4000EAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Material feltTop;

		[Token(Token = "0x4000EAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Material wood;

		[Token(Token = "0x4000EAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Material cushion;

		[Token(Token = "0x4000EAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Material woodTop;

		[Token(Token = "0x4000EAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Material shadow;

		[Token(Token = "0x4000EAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Material tunnel;

		[Token(Token = "0x6000E79")]
		[Address(RVA = "0x850DA4", Offset = "0x850DA4", VA = "0x850DA4")]
		public Materials()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x200025A")]
	public class LightSettings
	{
		[Token(Token = "0x4000EB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Color color;

		[Token(Token = "0x4000EB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int textureSize;

		[Token(Token = "0x4000EB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float height;

		[Token(Token = "0x4000EB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float ambient;

		[Token(Token = "0x4000EB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float intensity;

		[Token(Token = "0x6000E7A")]
		[Address(RVA = "0x850D2C", Offset = "0x850D2C", VA = "0x850D2C")]
		public LightSettings()
		{
		}
	}

	[Token(Token = "0x200025B")]
	private class UvTiling
	{
		[Token(Token = "0x4000EB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Vector2 origin;

		[Token(Token = "0x4000EB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector2 uDir;

		[Token(Token = "0x4000EB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Vector2 vDir;

		[Token(Token = "0x4000EB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float uTile;

		[Token(Token = "0x4000EB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float vTile;

		[Token(Token = "0x6000E7B")]
		[Address(RVA = "0x850DAC", Offset = "0x850DAC", VA = "0x850DAC")]
		public UvTiling()
		{
		}
	}

	[Token(Token = "0x40006CA")]
	private const float floorHeight = -0.82000005f;

	[Token(Token = "0x40006CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public LightSettings lightSettings;

	[Token(Token = "0x40006CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Materials materials;

	[Token(Token = "0x40006CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject legPrefab;

	[Token(Token = "0x40006CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject meshPrefab;

	[Token(Token = "0x40006CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float woodTileSize;

	[Token(Token = "0x40006D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private GameObject straights;

	[Token(Token = "0x40006D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private GameObject frontMesh;

	[Token(Token = "0x40006D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private GameObject backMesh;

	[Token(Token = "0x40006D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Transform tMeshes;

	[Token(Token = "0x40006D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Texture2D feltTexture;

	[Token(Token = "0x40006D5")]
	private const float closestVert = 0.001f;

	[Token(Token = "0x6000557")]
	[Address(RVA = "0x8B18D4", Offset = "0x8B18D4", VA = "0x8B18D4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000558")]
	[Address(RVA = "0x8B1904", Offset = "0x8B1904", VA = "0x8B1904")]
	private void listVerts(List<Vector2> verts)
	{
	}

	[Token(Token = "0x6000559")]
	[Address(RVA = "0x8B1BD8", Offset = "0x8B1BD8", VA = "0x8B1BD8")]
	private void makeFeltTexture(XRange2 range, Color _color)
	{
	}

	[Token(Token = "0x600055A")]
	[Address(RVA = "0x8B1E30", Offset = "0x8B1E30", VA = "0x8B1E30")]
	public void init(CTable _table, BDescGame dg)
	{
	}

	[Token(Token = "0x600055B")]
	[Address(RVA = "0x8B4D98", Offset = "0x8B4D98", VA = "0x8B4D98")]
	private List<Vector2> removeRepeats(List<Vector2> from)
	{
		return null;
	}

	[Token(Token = "0x600055C")]
	[Address(RVA = "0x8B3BDC", Offset = "0x8B3BDC", VA = "0x8B3BDC")]
	private GameObject makeTunnel(string _name, Corner _corner, Material mat, Trans2DMat _trans)
	{
		return null;
	}

	[Token(Token = "0x600055D")]
	[Address(RVA = "0x8B36A0", Offset = "0x8B36A0", VA = "0x8B36A0")]
	private GameObject makeArea(List<Vector2> points, float height, string _name, Material _mat, int direction, [Optional] UvTiling uvTiling)
	{
		return null;
	}

	[Token(Token = "0x600055E")]
	[Address(RVA = "0x8B460C", Offset = "0x8B460C", VA = "0x8B460C")]
	private GameObject makeWall(List<Vector2> front, float _height0, float _height1, int direction, string _name, float tiling, Material _mat)
	{
		return null;
	}

	[Token(Token = "0x600055F")]
	[Address(RVA = "0x8B4F38", Offset = "0x8B4F38", VA = "0x8B4F38")]
	public RTableMesh()
	{
	}
}
[Token(Token = "0x200009F")]
public class RVisibility : MonoBehaviour
{
	[Token(Token = "0x40006D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int selection;

	[Token(Token = "0x40006D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject arcPrefab;

	[Token(Token = "0x40006D8")]
	private const int arcDetail = 16;

	[Token(Token = "0x40006D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private BVisibility visibility;

	[Token(Token = "0x40006DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private List<GameObject> arcs;

	[Token(Token = "0x40006DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private BVisibility source;

	[Token(Token = "0x6000560")]
	[Address(RVA = "0x8B4F4C", Offset = "0x8B4F4C", VA = "0x8B4F4C")]
	public void OnEnable()
	{
	}

	[Token(Token = "0x6000561")]
	[Address(RVA = "0x8B4F6C", Offset = "0x8B4F6C", VA = "0x8B4F6C")]
	private void makeMesh()
	{
	}

	[Token(Token = "0x6000562")]
	[Address(RVA = "0x8B52B4", Offset = "0x8B52B4", VA = "0x8B52B4")]
	public void setSource(BVisibility _source)
	{
	}

	[Token(Token = "0x6000563")]
	[Address(RVA = "0x8B5550", Offset = "0x8B5550", VA = "0x8B5550")]
	private void setArc(GameObject go, BVisibility.Item item, bool highlight)
	{
	}

	[Token(Token = "0x6000564")]
	[Address(RVA = "0x8B56E8", Offset = "0x8B56E8", VA = "0x8B56E8")]
	public RVisibility()
	{
	}
}
[Token(Token = "0x20000A0")]
public class Move
{
	[Token(Token = "0x40006DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int skillLevel;

	[Token(Token = "0x40006DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public BBallType[] targetTypes;

	[Token(Token = "0x40006DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<BSimBoss.LayoutPos> endLayout;

	[Token(Token = "0x6000565")]
	[Address(RVA = "0x71FD38", Offset = "0x71FD38", VA = "0x71FD38")]
	private static void read(out Move ret, StreamRW s)
	{
	}

	[Token(Token = "0x6000566")]
	[Address(RVA = "0x71FF34", Offset = "0x71FF34", VA = "0x71FF34")]
	private void write(StreamRW stream)
	{
	}

	[Token(Token = "0x6000567")]
	[Address(RVA = "0x71FF2C", Offset = "0x71FF2C", VA = "0x71FF2C")]
	public Move()
	{
	}
}
[Serializable]
[Token(Token = "0x20000A1")]
public class Recording
{
	[Token(Token = "0x40006DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public GameSetup setup;

	[Token(Token = "0x40006E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int skillLevel;

	[Token(Token = "0x40006E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<Move> moves;

	[Token(Token = "0x40006E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private FileStream stream;

	[Token(Token = "0x6000568")]
	[Address(RVA = "0x8B71F4", Offset = "0x8B71F4", VA = "0x8B71F4")]
	public static string getFolder()
	{
		return null;
	}

	[Token(Token = "0x6000569")]
	[Address(RVA = "0x8B7244", Offset = "0x8B7244", VA = "0x8B7244")]
	public void addMove(Move _move)
	{
	}

	[Token(Token = "0x600056A")]
	[Address(RVA = "0x8B72A8", Offset = "0x8B72A8", VA = "0x8B72A8")]
	public static Recording startRecord(GameSetup _setup)
	{
		return null;
	}

	[Token(Token = "0x600056B")]
	[Address(RVA = "0x8B73F4", Offset = "0x8B73F4", VA = "0x8B73F4")]
	public Recording()
	{
	}
}
[Token(Token = "0x20000A2")]
public class Rig : MonoBehaviour
{
	[Token(Token = "0x200025C")]
	public class ButtonState
	{
		[Token(Token = "0x4000EBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool down;

		[Token(Token = "0x4000EBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		public bool lastDown;

		[Token(Token = "0x6000E7C")]
		[Address(RVA = "0x8430EC", Offset = "0x8430EC", VA = "0x8430EC")]
		public bool click()
		{
			return default(bool);
		}

		[Token(Token = "0x6000E7D")]
		[Address(RVA = "0x850DB4", Offset = "0x850DB4", VA = "0x850DB4")]
		public bool release()
		{
			return default(bool);
		}

		[Token(Token = "0x6000E7E")]
		[Address(RVA = "0x850DD4", Offset = "0x850DD4", VA = "0x850DD4")]
		public void update(bool _down)
		{
		}

		[Token(Token = "0x6000E7F")]
		[Address(RVA = "0x850DE8", Offset = "0x850DE8", VA = "0x850DE8")]
		public ButtonState()
		{
		}
	}

	[Token(Token = "0x200025D")]
	public class Pointer
	{
		[Token(Token = "0x4000EBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Transform trans;

		[Token(Token = "0x4000EBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ButtonState action;

		[Token(Token = "0x4000EBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ButtonState wiggleClick;

		[Token(Token = "0x4000EBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Vector2 wiggle;

		[Token(Token = "0x4000EC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Vector2 wiggleDz;

		[Token(Token = "0x6000E80")]
		[Address(RVA = "0x843208", Offset = "0x843208", VA = "0x843208")]
		public Ray getRay()
		{
			return default(Ray);
		}

		[Token(Token = "0x6000E81")]
		[Address(RVA = "0x8512BC", Offset = "0x8512BC", VA = "0x8512BC")]
		public Pointer()
		{
		}
	}

	[Token(Token = "0x200025E")]
	public class MainInput
	{
		[Token(Token = "0x4000EC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public List<Pointer> pointerList;

		[Token(Token = "0x4000EC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ButtonState hudToggle;

		[Token(Token = "0x4000EC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ButtonState crouch;

		[Token(Token = "0x4000EC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public ButtonState back;

		[Token(Token = "0x4000EC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public ButtonState zoomIn;

		[Token(Token = "0x4000EC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public ButtonState zoomOut;

		[Token(Token = "0x4000EC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public ButtonState touchPad;

		[Token(Token = "0x4000EC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public ButtonState grip;

		[Token(Token = "0x4000EC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public ButtonState reset;

		[Token(Token = "0x4000ECA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public ButtonState dPadLeft;

		[Token(Token = "0x4000ECB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public ButtonState dPadRight;

		[Token(Token = "0x4000ECC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public ButtonState dPadUp;

		[Token(Token = "0x4000ECD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public ButtonState dPadDown;

		[Token(Token = "0x4000ECE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public ButtonState bedMode;

		[Token(Token = "0x4000ECF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public float mouseWheel;

		[Token(Token = "0x6000E82")]
		[Address(RVA = "0x850DF0", Offset = "0x850DF0", VA = "0x850DF0")]
		public MainInput()
		{
		}
	}

	[Token(Token = "0x200025F")]
	public enum VrType
	{
		[Token(Token = "0x4000ED1")]
		monitor,
		[Token(Token = "0x4000ED2")]
		vr3,
		[Token(Token = "0x4000ED3")]
		vr6
	}

	[Token(Token = "0x2000260")]
	public enum Platform
	{
		[Token(Token = "0x4000ED5")]
		phone,
		[Token(Token = "0x4000ED6")]
		go,
		[Token(Token = "0x4000ED7")]
		quest,
		[Token(Token = "0x4000ED8")]
		steam,
		[Token(Token = "0x4000ED9")]
		rift
	}

	[Token(Token = "0x2000261")]
	public enum InputMode
	{
		[Token(Token = "0x4000EDB")]
		monitor,
		[Token(Token = "0x4000EDC")]
		vrOneHand,
		[Token(Token = "0x4000EDD")]
		vrTwoHands
	}

	[Token(Token = "0x2000262")]
	public delegate void OnEvent();

	[Token(Token = "0x40006E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform tilt;

	[Token(Token = "0x40006E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool isVr;

	[Token(Token = "0x40006E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Camera eventCamera;

	[Token(Token = "0x40006E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject curtain;

	[Token(Token = "0x40006E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public int handIndex;

	[Token(Token = "0x40006E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Rig I;

	[Token(Token = "0x40006E9")]
	public const float seatedFraction = 0.8f;

	[Token(Token = "0x40006EA")]
	public const float crouchFraction = 0.7f;

	[Token(Token = "0x40006EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	internal float floorHeight;

	[Token(Token = "0x40006EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	internal InputMode inputMode;

	[Token(Token = "0x40006ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	protected static List<OnEvent> onFocusAcquiredList;

	[Token(Token = "0x40006EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	protected static List<OnEvent> onFocusLostList;

	[Token(Token = "0x600056C")]
	[Address(RVA = "0x8B7478", Offset = "0x8B7478", VA = "0x8B7478", Slot = "4")]
	public virtual void recenter()
	{
	}

	[Token(Token = "0x600056D")]
	[Address(RVA = "0x8B747C", Offset = "0x8B747C", VA = "0x8B747C")]
	public void setFloorHeight(float _floorHeight)
	{
	}

	[Token(Token = "0x600056E")]
	[Address(RVA = "0x8B74F0", Offset = "0x8B74F0", VA = "0x8B74F0", Slot = "5")]
	public virtual bool isSystemOverlayOn()
	{
		return default(bool);
	}

	[Token(Token = "0x600056F")]
	[Address(RVA = "0x8B74F8", Offset = "0x8B74F8", VA = "0x8B74F8")]
	public void setHand(int _hand)
	{
	}

	[Token(Token = "0x6000570")]
	[Address(RVA = "0x8B7500", Offset = "0x8B7500", VA = "0x8B7500", Slot = "6")]
	public virtual VrType getVrType()
	{
		return default(VrType);
	}

	[Token(Token = "0x6000571")]
	[Address(RVA = "0x8B7508", Offset = "0x8B7508", VA = "0x8B7508", Slot = "7")]
	public virtual Platform getPlatform()
	{
		return default(Platform);
	}

	[Token(Token = "0x6000572")]
	[Address(RVA = "0x8B7510", Offset = "0x8B7510", VA = "0x8B7510", Slot = "8")]
	public virtual GraphicRaycaster addRayCaster(GameObject go)
	{
		return null;
	}

	[Token(Token = "0x6000573")]
	[Address(RVA = "0x8B7518", Offset = "0x8B7518", VA = "0x8B7518")]
	private void Update()
	{
	}

	[Token(Token = "0x6000574")]
	[Address(RVA = "0x8B7524", Offset = "0x8B7524", VA = "0x8B7524")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000575")]
	[Address(RVA = "0x8B7530", Offset = "0x8B7530", VA = "0x8B7530")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000576")]
	[Address(RVA = "0x8B753C", Offset = "0x8B753C", VA = "0x8B753C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000577")]
	[Address(RVA = "0x8B7548", Offset = "0x8B7548", VA = "0x8B7548", Slot = "9")]
	public virtual void update()
	{
	}

	[Token(Token = "0x6000578")]
	[Address(RVA = "0x8B754C", Offset = "0x8B754C", VA = "0x8B754C", Slot = "10")]
	public virtual void lateUpdate()
	{
	}

	[Token(Token = "0x6000579")]
	[Address(RVA = "0x8B75CC", Offset = "0x8B75CC", VA = "0x8B75CC", Slot = "11")]
	public virtual void onEnable()
	{
	}

	[Token(Token = "0x600057A")]
	[Address(RVA = "0x8B75D0", Offset = "0x8B75D0", VA = "0x8B75D0", Slot = "12")]
	public virtual void onDisable()
	{
	}

	[Token(Token = "0x600057B")]
	[Address(RVA = "0x8B75D4", Offset = "0x8B75D4", VA = "0x8B75D4", Slot = "13")]
	public virtual void addCanvas(CanvasSwitcher _switcher)
	{
	}

	[Token(Token = "0x600057C")]
	[Address(RVA = "0x8B75D8", Offset = "0x8B75D8", VA = "0x8B75D8", Slot = "14")]
	public virtual void subCanvas(CanvasSwitcher _switcher)
	{
	}

	[Token(Token = "0x600057D")]
	[Address(RVA = "0x8B75DC", Offset = "0x8B75DC", VA = "0x8B75DC", Slot = "15")]
	public virtual void setPlayerPosition(Vector3 pos)
	{
	}

	[Token(Token = "0x600057E")]
	[Address(RVA = "0x8B7650", Offset = "0x8B7650", VA = "0x8B7650", Slot = "16")]
	public virtual void setPlayerPosition(Vector3 pos, Vector3 forward, Vector3 up)
	{
	}

	[Token(Token = "0x600057F")]
	[Address(RVA = "0x8B771C", Offset = "0x8B771C", VA = "0x8B771C", Slot = "17")]
	public virtual void getPlayerPosition(out Vector3 pos, out Vector3 forward, out Vector3 up)
	{
	}

	[Token(Token = "0x6000580")]
	[Address(RVA = "0x8B77AC", Offset = "0x8B77AC", VA = "0x8B77AC", Slot = "18")]
	public virtual Transform getPlayerTransform()
	{
		return null;
	}

	[Token(Token = "0x6000581")]
	[Address(RVA = "0x8B77B4", Offset = "0x8B77B4", VA = "0x8B77B4", Slot = "19")]
	public virtual Transform getHeadTransform()
	{
		return null;
	}

	[Token(Token = "0x6000582")]
	[Address(RVA = "0x8B77BC", Offset = "0x8B77BC", VA = "0x8B77BC", Slot = "20")]
	public virtual void setPositionAndHeadFacing(Vector3 pos, Vector3 wantedZ)
	{
	}

	[Token(Token = "0x6000583")]
	[Address(RVA = "0x8B7944", Offset = "0x8B7944", VA = "0x8B7944", Slot = "21")]
	public virtual int getPointerCount()
	{
		return default(int);
	}

	[Token(Token = "0x6000584")]
	[Address(RVA = "0x8B794C", Offset = "0x8B794C", VA = "0x8B794C", Slot = "22")]
	public virtual MainInput getMainInput()
	{
		return null;
	}

	[Token(Token = "0x6000585")]
	[Address(RVA = "0x8B7954", Offset = "0x8B7954", VA = "0x8B7954")]
	public Pointer getMainPointer()
	{
		return null;
	}

	[Token(Token = "0x6000586")]
	[Address(RVA = "0x8B79D8", Offset = "0x8B79D8", VA = "0x8B79D8")]
	public Pointer getSecondaryPointer()
	{
		return null;
	}

	[Token(Token = "0x6000587")]
	[Address(RVA = "0x8B7A64", Offset = "0x8B7A64", VA = "0x8B7A64", Slot = "23")]
	public virtual Transform getCameraTransform()
	{
		return null;
	}

	[Token(Token = "0x6000588")]
	[Address(RVA = "0x8B7A6C", Offset = "0x8B7A6C", VA = "0x8B7A6C")]
	public void showCurtain(bool _show)
	{
	}

	[Token(Token = "0x6000589")]
	[Address(RVA = "0x8B7B38", Offset = "0x8B7B38", VA = "0x8B7B38")]
	protected float addDeadZone(float x, float deadZone)
	{
		return default(float);
	}

	[Token(Token = "0x600058A")]
	[Address(RVA = "0x8B7B68", Offset = "0x8B7B68", VA = "0x8B7B68")]
	protected Vector2 addDeadZone(Vector2 v, float deadZone)
	{
		return default(Vector2);
	}

	[Token(Token = "0x600058B")]
	[Address(RVA = "0x8B7BC4", Offset = "0x8B7BC4", VA = "0x8B7BC4")]
	public void setTilt(XTransform _tilt)
	{
	}

	[Token(Token = "0x600058C")]
	[Address(RVA = "0x8B7BC8", Offset = "0x8B7BC8", VA = "0x8B7BC8")]
	public void getTilt(XTransform _tilt)
	{
	}

	[Token(Token = "0x600058D")]
	[Address(RVA = "0x8B7BCC", Offset = "0x8B7BCC", VA = "0x8B7BCC")]
	public Rig()
	{
	}
}
[Token(Token = "0x20000A3")]
public class SafeCanvas : MonoBehaviour
{
	[Token(Token = "0x40006EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Rect lastCanvasRect;

	[Token(Token = "0x40006F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Rect lastSafeRect;

	[Token(Token = "0x40006F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Canvas canvas;

	[Token(Token = "0x40006F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private RectTransform rtCanvas;

	[Token(Token = "0x40006F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private RectTransform rtWindow;

	[Token(Token = "0x600058F")]
	[Address(RVA = "0x8B9CB0", Offset = "0x8B9CB0", VA = "0x8B9CB0")]
	private Rect getSafeArea()
	{
		return default(Rect);
	}

	[Token(Token = "0x6000590")]
	[Address(RVA = "0x8B9CB8", Offset = "0x8B9CB8", VA = "0x8B9CB8")]
	public void refresh()
	{
	}

	[Token(Token = "0x6000591")]
	[Address(RVA = "0x8B9FC0", Offset = "0x8B9FC0", VA = "0x8B9FC0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000592")]
	[Address(RVA = "0x8B9FC4", Offset = "0x8B9FC4", VA = "0x8B9FC4")]
	public SafeCanvas()
	{
	}
}
[Token(Token = "0x20000A4")]
public class Prop : MonoBehaviour
{
	[Token(Token = "0x40006F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ZuiWord keyList;

	[Token(Token = "0x40006F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject listEntry;

	[Token(Token = "0x40006F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject uiGadgets;

	[Token(Token = "0x40006F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ZuiColor back;

	[Token(Token = "0x40006F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	internal string key;

	[Token(Token = "0x40006F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	internal string description;

	[Token(Token = "0x6000593")]
	[Address(RVA = "0xE6372C", Offset = "0xE6372C", VA = "0xE6372C", Slot = "4")]
	public virtual void setListColor(string _color)
	{
	}

	[Token(Token = "0x6000594")]
	[Address(RVA = "0xE6379C", Offset = "0xE6379C", VA = "0xE6379C", Slot = "5")]
	public virtual void update()
	{
	}

	[Token(Token = "0x6000595")]
	[Address(RVA = "0xE637A0", Offset = "0xE637A0", VA = "0xE637A0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000596")]
	[Address(RVA = "0xE637AC", Offset = "0xE637AC", VA = "0xE637AC")]
	protected void initKeys(string _key, string _description)
	{
	}

	[Token(Token = "0x6000597")]
	[Address(RVA = "0xE63804", Offset = "0xE63804", VA = "0xE63804")]
	public string getKey()
	{
		return null;
	}

	[Token(Token = "0x6000598")]
	[Address(RVA = "0xE6380C", Offset = "0xE6380C", VA = "0xE6380C")]
	public Prop()
	{
	}
}
[Token(Token = "0x20000A5")]
public class PropFloat : Prop
{
	[Token(Token = "0x40006FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Text listValue;

	[Token(Token = "0x40006FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Text uiValue;

	[Token(Token = "0x40006FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public float rateChange;

	[Token(Token = "0x40006FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private float min;

	[Token(Token = "0x40006FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private float max;

	[Token(Token = "0x40006FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private float value;

	[Token(Token = "0x4000700")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private EventTrigger eventTrigger;

	[Token(Token = "0x4000701")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private bool dragging;

	[Token(Token = "0x4000702")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private float dragStartValue;

	[Token(Token = "0x4000703")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Vector3 dragStartMouse;

	[Token(Token = "0x6000599")]
	[Address(RVA = "0xE63814", Offset = "0xE63814", VA = "0xE63814")]
	public void Update()
	{
	}

	[Token(Token = "0x600059A")]
	[Address(RVA = "0xE638C0", Offset = "0xE638C0", VA = "0xE638C0")]
	public void init(string _key, string _description, float _min, float _max, float _startValue)
	{
	}

	[Token(Token = "0x600059B")]
	[Address(RVA = "0xE63B6C", Offset = "0xE63B6C", VA = "0xE63B6C")]
	public void startDrag()
	{
	}

	[Token(Token = "0x600059C")]
	[Address(RVA = "0xE63BA8", Offset = "0xE63BA8", VA = "0xE63BA8")]
	public void endDrag()
	{
	}

	[Token(Token = "0x600059D")]
	[Address(RVA = "0xE63BB0", Offset = "0xE63BB0", VA = "0xE63BB0")]
	public void refreshListItem()
	{
	}

	[Token(Token = "0x600059E")]
	[Address(RVA = "0xE63890", Offset = "0xE63890", VA = "0xE63890")]
	public void setValue(float _value)
	{
	}

	[Token(Token = "0x600059F")]
	[Address(RVA = "0xE63C60", Offset = "0xE63C60", VA = "0xE63C60")]
	public float getValue()
	{
		return default(float);
	}

	[Token(Token = "0x60005A0")]
	[Address(RVA = "0xE63C68", Offset = "0xE63C68", VA = "0xE63C68")]
	public PropFloat()
	{
	}

	[Token(Token = "0x60005A1")]
	[Address(RVA = "0xE63C78", Offset = "0xE63C78", VA = "0xE63C78")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x442598", Offset = "0x442598")]
	private void <init>b__11_0(BaseEventData data)
	{
	}

	[Token(Token = "0x60005A2")]
	[Address(RVA = "0xE63CB4", Offset = "0xE63CB4", VA = "0xE63CB4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4425A8", Offset = "0x4425A8")]
	private void <init>b__11_1(BaseEventData data)
	{
	}
}
[Token(Token = "0x20000A6")]
public class PropList : Prop
{
	[Token(Token = "0x4000704")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Text listValue;

	[Token(Token = "0x4000705")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Text uiValue;

	[Token(Token = "0x4000706")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private List<string> options;

	[Token(Token = "0x4000707")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private int value;

	[Token(Token = "0x60005A3")]
	[Address(RVA = "0x8AC1C4", Offset = "0x8AC1C4", VA = "0x8AC1C4")]
	public void init(string _key, string _description, List<string> _options, int _startValue)
	{
	}

	[Token(Token = "0x60005A4")]
	[Address(RVA = "0x8AC27C", Offset = "0x8AC27C", VA = "0x8AC27C")]
	public void refreshListItem()
	{
	}

	[Token(Token = "0x60005A5")]
	[Address(RVA = "0x8AC210", Offset = "0x8AC210", VA = "0x8AC210")]
	public void setValue(int _value)
	{
	}

	[Token(Token = "0x60005A6")]
	[Address(RVA = "0x8AC350", Offset = "0x8AC350", VA = "0x8AC350")]
	public int getValue()
	{
		return default(int);
	}

	[Token(Token = "0x60005A7")]
	[Address(RVA = "0x8AC358", Offset = "0x8AC358", VA = "0x8AC358")]
	public void buttonInc()
	{
	}

	[Token(Token = "0x60005A8")]
	[Address(RVA = "0x8AC364", Offset = "0x8AC364", VA = "0x8AC364")]
	public void buttonDec()
	{
	}

	[Token(Token = "0x60005A9")]
	[Address(RVA = "0x8AC370", Offset = "0x8AC370", VA = "0x8AC370")]
	public PropList()
	{
	}
}
[Token(Token = "0x20000A7")]
public class PropRgb : Prop
{
	[Token(Token = "0x4000708")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Image previewGui;

	[Token(Token = "0x4000709")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Image previewList;

	[Token(Token = "0x400070A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Slider[] sliders;

	[Token(Token = "0x400070B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Color color;

	[Token(Token = "0x60005AA")]
	[Address(RVA = "0x8AC378", Offset = "0x8AC378", VA = "0x8AC378")]
	private void Update()
	{
	}

	[Token(Token = "0x60005AB")]
	[Address(RVA = "0x8AC4A0", Offset = "0x8AC4A0", VA = "0x8AC4A0")]
	public void init(string _key, string _description, Color _color)
	{
	}

	[Token(Token = "0x60005AC")]
	[Address(RVA = "0x8AC5D0", Offset = "0x8AC5D0", VA = "0x8AC5D0")]
	public Color get()
	{
		return default(Color);
	}

	[Token(Token = "0x60005AD")]
	[Address(RVA = "0x8AC4F8", Offset = "0x8AC4F8", VA = "0x8AC4F8")]
	public void set(Color _color)
	{
	}

	[Token(Token = "0x60005AE")]
	[Address(RVA = "0x8AC5DC", Offset = "0x8AC5DC", VA = "0x8AC5DC")]
	public PropRgb()
	{
	}
}
[Token(Token = "0x20000A8")]
public class PropString : Prop
{
	[Token(Token = "0x400070C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Text listValue;

	[Token(Token = "0x400070D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Text gadgetValue;

	[Token(Token = "0x400070E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public InputField inputField;

	[Token(Token = "0x400070F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public GameObject vrInputField;

	[Token(Token = "0x4000710")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	internal int maxLength;

	[Token(Token = "0x4000711")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private bool keyboardRequest;

	[Token(Token = "0x4000712")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6D")]
	private bool initted;

	[Token(Token = "0x60005AF")]
	[Address(RVA = "0x8AC5E4", Offset = "0x8AC5E4", VA = "0x8AC5E4")]
	public void init(string _key, string _description, string _startValue, int _maxLength)
	{
	}

	[Token(Token = "0x60005B0")]
	[Address(RVA = "0x8AC71C", Offset = "0x8AC71C", VA = "0x8AC71C")]
	public void setValue(string _value)
	{
	}

	[Token(Token = "0x60005B1")]
	[Address(RVA = "0x8AC824", Offset = "0x8AC824", VA = "0x8AC824", Slot = "5")]
	public override void update()
	{
	}

	[Token(Token = "0x60005B2")]
	[Address(RVA = "0x8AC8D4", Offset = "0x8AC8D4", VA = "0x8AC8D4")]
	public string getValue()
	{
		return null;
	}

	[Token(Token = "0x60005B3")]
	[Address(RVA = "0x8AC8F8", Offset = "0x8AC8F8", VA = "0x8AC8F8")]
	public void buttonEdit()
	{
	}

	[Token(Token = "0x60005B4")]
	[Address(RVA = "0x8AC904", Offset = "0x8AC904", VA = "0x8AC904")]
	public bool needKeyboard()
	{
		return default(bool);
	}

	[Token(Token = "0x60005B5")]
	[Address(RVA = "0x8AC90C", Offset = "0x8AC90C", VA = "0x8AC90C")]
	public PropString()
	{
	}
}
[Token(Token = "0x20000A9")]
public class PropertyBasic : MonoBehaviour
{
	[Token(Token = "0x4000713")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Text key;

	[Token(Token = "0x4000714")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Text value;

	[Token(Token = "0x60005B6")]
	[Address(RVA = "0x8AC914", Offset = "0x8AC914", VA = "0x8AC914")]
	public PropertyBasic()
	{
	}
}
[Token(Token = "0x20000AA")]
public class SettingsGui : MonoBehaviour
{
	[Token(Token = "0x2000263")]
	private enum State
	{
		[Token(Token = "0x4000EDF")]
		list,
		[Token(Token = "0x4000EE0")]
		keyboard
	}

	[Token(Token = "0x2000264")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x43F4E8", Offset = "0x43F4E8")]
	private sealed class <>c__DisplayClass40_0
	{
		[Token(Token = "0x4000EE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public SettingsGui <>4__this;

		[Token(Token = "0x4000EE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int index;

		[Token(Token = "0x6000E87")]
		[Address(RVA = "0x851358", Offset = "0x851358", VA = "0x851358")]
		public <>c__DisplayClass40_0()
		{
		}

		[Token(Token = "0x6000E88")]
		[Address(RVA = "0x851360", Offset = "0x851360", VA = "0x851360")]
		internal void <addProp>b__0()
		{
		}
	}

	[Token(Token = "0x4000715")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject descriptionBox;

	[Token(Token = "0x4000716")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject divider;

	[Token(Token = "0x4000717")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float entrySize;

	[Token(Token = "0x4000718")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ModeKeyboard modeKeyboard;

	[Token(Token = "0x4000719")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject listParent;

	[Token(Token = "0x400071A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject keyboardParent;

	[Token(Token = "0x400071B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Text title;

	[Token(Token = "0x400071C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public ZuiArea gadgetsBox;

	[Token(Token = "0x400071D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Text subTitle;

	[Token(Token = "0x400071E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public ScrollRect scrollRect;

	[Token(Token = "0x400071F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public PropList propList;

	[Token(Token = "0x4000720")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public PropFloat propFloat;

	[Token(Token = "0x4000721")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public PropRgb propRgb;

	[Token(Token = "0x4000722")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public PropString propString;

	[Token(Token = "0x4000723")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public string loColor;

	[Token(Token = "0x4000724")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public string hiColor;

	[Token(Token = "0x4000725")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private List<GameObject> dividers;

	[Token(Token = "0x4000726")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private List<Prop> props;

	[Token(Token = "0x4000727")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private int current;

	[Token(Token = "0x4000728")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private bool mouseDown;

	[Token(Token = "0x4000729")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAD")]
	private bool finished;

	[Token(Token = "0x400072A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAE")]
	private bool cancelled;

	[Token(Token = "0x400072B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private float oldSize;

	[Token(Token = "0x400072C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	private State state;

	[Token(Token = "0x60005B7")]
	[Address(RVA = "0x8BA4BC", Offset = "0x8BA4BC", VA = "0x8BA4BC")]
	public void setTitle(string _title)
	{
	}

	[Token(Token = "0x60005B8")]
	[Address(RVA = "0x8BA4E0", Offset = "0x8BA4E0", VA = "0x8BA4E0")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60005B9")]
	[Address(RVA = "0x8BA918", Offset = "0x8BA918", VA = "0x8BA918")]
	public void buttonLine(int _index)
	{
	}

	[Token(Token = "0x60005BA")]
	[Address(RVA = "0x8BA91C", Offset = "0x8BA91C", VA = "0x8BA91C")]
	public void setEntry(int _index)
	{
	}

	[Token(Token = "0x60005BB")]
	[Address(RVA = "0x8BAEBC", Offset = "0x8BAEBC", VA = "0x8BAEBC")]
	public Prop getCurrent()
	{
		return null;
	}

	[Token(Token = "0x60005BC")]
	[Address(RVA = "0x8BAF28", Offset = "0x8BAF28", VA = "0x8BAF28")]
	private void Update()
	{
	}

	[Token(Token = "0x60005BD")]
	[Address(RVA = "0x8BB010", Offset = "0x8BB010", VA = "0x8BB010")]
	private void updateKeyboard()
	{
	}

	[Token(Token = "0x60005BE")]
	[Address(RVA = "0x8BB4D8", Offset = "0x8BB4D8", VA = "0x8BB4D8")]
	private float getDividerHeight()
	{
		return default(float);
	}

	[Token(Token = "0x60005BF")]
	[Address(RVA = "0x8BB580", Offset = "0x8BB580", VA = "0x8BB580")]
	private float getLineHeight()
	{
		return default(float);
	}

	[Token(Token = "0x60005C0")]
	[Address(RVA = "0x8BB150", Offset = "0x8BB150", VA = "0x8BB150")]
	private void updateList()
	{
	}

	[Token(Token = "0x60005C1")]
	[Address(RVA = "0x8BB5F0", Offset = "0x8BB5F0", VA = "0x8BB5F0")]
	public bool isFinished()
	{
		return default(bool);
	}

	[Token(Token = "0x60005C2")]
	[Address(RVA = "0x8BB5F8", Offset = "0x8BB5F8", VA = "0x8BB5F8")]
	public bool isCancelled()
	{
		return default(bool);
	}

	[Token(Token = "0x60005C3")]
	[Address(RVA = "0x8BB3F0", Offset = "0x8BB3F0", VA = "0x8BB3F0")]
	public void buttonOkay()
	{
	}

	[Token(Token = "0x60005C4")]
	[Address(RVA = "0x8BB3E4", Offset = "0x8BB3E4", VA = "0x8BB3E4")]
	public void buttonCancel()
	{
	}

	[Token(Token = "0x60005C5")]
	[Address(RVA = "0x8BA4E8", Offset = "0x8BA4E8", VA = "0x8BA4E8")]
	public void startEntries()
	{
	}

	[Token(Token = "0x60005C6")]
	[Address(RVA = "0x8BB600", Offset = "0x8BB600", VA = "0x8BB600")]
	public void endEntries()
	{
	}

	[Token(Token = "0x60005C7")]
	[Address(RVA = "0x8BB7AC", Offset = "0x8BB7AC", VA = "0x8BB7AC")]
	private Prop addProp(Prop _template)
	{
		return null;
	}

	[Token(Token = "0x60005C8")]
	[Address(RVA = "0x8BBA98", Offset = "0x8BBA98", VA = "0x8BBA98")]
	public PropList addEntryOptions(string _key, string _description, List<string> _options, int _startValue)
	{
		return null;
	}

	[Token(Token = "0x60005C9")]
	[Address(RVA = "0x8BBB5C", Offset = "0x8BBB5C", VA = "0x8BBB5C")]
	public PropString addEntryString(string _key, string _description, string _startValue, int _maxLength)
	{
		return null;
	}

	[Token(Token = "0x60005CA")]
	[Address(RVA = "0x8BBC20", Offset = "0x8BBC20", VA = "0x8BBC20")]
	public PropFloat addEntryFloat(string _key, string _description, float _min, float _max, float _startValue)
	{
		return null;
	}

	[Token(Token = "0x60005CB")]
	[Address(RVA = "0x8BBCF8", Offset = "0x8BBCF8", VA = "0x8BBCF8")]
	public PropRgb addEntryRgb(string _key, string _description, Color _color)
	{
		return null;
	}

	[Token(Token = "0x60005CC")]
	[Address(RVA = "0x8BB484", Offset = "0x8BB484", VA = "0x8BB484")]
	private void setState(State _state)
	{
	}

	[Token(Token = "0x60005CD")]
	[Address(RVA = "0x8BBDE0", Offset = "0x8BBDE0", VA = "0x8BBDE0")]
	public SettingsGui()
	{
	}
}
[Token(Token = "0x20000AB")]
public class SimpleItem : MonoBehaviour
{
	[Token(Token = "0x400072D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string retValue;

	[Token(Token = "0x60005CE")]
	[Address(RVA = "0x8BC794", Offset = "0x8BC794", VA = "0x8BC794")]
	public SimpleItem()
	{
	}
}
[Token(Token = "0x20000AC")]
public class SliderUseDetector : MonoBehaviour, IPointerUpHandler, IEventSystemHandler, IPointerDownHandler
{
	[Token(Token = "0x400072E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool inUse;

	[Token(Token = "0x60005CF")]
	[Address(RVA = "0x8BC79C", Offset = "0x8BC79C", VA = "0x8BC79C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60005D0")]
	[Address(RVA = "0x8BC7A4", Offset = "0x8BC7A4", VA = "0x8BC7A4")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60005D1")]
	[Address(RVA = "0x8BC7AC", Offset = "0x8BC7AC", VA = "0x8BC7AC")]
	public bool isInUse()
	{
		return default(bool);
	}

	[Token(Token = "0x60005D2")]
	[Address(RVA = "0x8BC7B4", Offset = "0x8BC7B4", VA = "0x8BC7B4", Slot = "4")]
	public void OnPointerUp(PointerEventData eventData)
	{
	}

	[Token(Token = "0x60005D3")]
	[Address(RVA = "0x8BC7BC", Offset = "0x8BC7BC", VA = "0x8BC7BC", Slot = "5")]
	public void OnPointerDown(PointerEventData eventData)
	{
	}

	[Token(Token = "0x60005D4")]
	[Address(RVA = "0x8BC7C8", Offset = "0x8BC7C8", VA = "0x8BC7C8")]
	public SliderUseDetector()
	{
	}
}
[Token(Token = "0x20000AD")]
public class SliderValue : MonoBehaviour
{
	[Token(Token = "0x2000265")]
	public delegate void OnEditStart();

	[Serializable]
	[Token(Token = "0x2000266")]
	public class Desc
	{
		[Token(Token = "0x4000EE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string label;

		[Token(Token = "0x4000EE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float minValue;

		[Token(Token = "0x4000EE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float maxValue;

		[Token(Token = "0x4000EE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float startValue;

		[Token(Token = "0x4000EE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float displayScale;

		[Token(Token = "0x4000EE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string displayFormat;

		[Token(Token = "0x6000E8D")]
		[Address(RVA = "0x851384", Offset = "0x851384", VA = "0x851384")]
		public Desc()
		{
		}
	}

	[Token(Token = "0x400072F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Text label;

	[Token(Token = "0x4000730")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Text value;

	[Token(Token = "0x4000731")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public InputField inputField;

	[Token(Token = "0x4000732")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ZuiSlider slider;

	[Token(Token = "0x4000733")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Desc desc;

	[Token(Token = "0x4000734")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool clicked;

	[Token(Token = "0x4000735")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
	private bool valueChanged;

	[Token(Token = "0x4000736")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private OnEditStart onEditStart;

	[Token(Token = "0x4000737")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float newValue;

	[Token(Token = "0x60005D5")]
	[Address(RVA = "0x8BC7D0", Offset = "0x8BC7D0", VA = "0x8BC7D0")]
	public void setOnEditStart(OnEditStart _onEditStart)
	{
	}

	[Token(Token = "0x60005D6")]
	[Address(RVA = "0x8BC7D8", Offset = "0x8BC7D8", VA = "0x8BC7D8")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60005D7")]
	[Address(RVA = "0x8BCA28", Offset = "0x8BCA28", VA = "0x8BCA28")]
	public void onInputFieldChanged(string s)
	{
	}

	[Token(Token = "0x60005D8")]
	[Address(RVA = "0x8BCAC0", Offset = "0x8BCAC0", VA = "0x8BCAC0")]
	public void onSliderChanged(float v)
	{
	}

	[Token(Token = "0x60005D9")]
	[Address(RVA = "0x8BCAA4", Offset = "0x8BCAA4", VA = "0x8BCAA4")]
	private void startEdit()
	{
	}

	[Token(Token = "0x60005DA")]
	[Address(RVA = "0x8BCB48", Offset = "0x8BCB48", VA = "0x8BCB48")]
	public void buttonClick()
	{
	}

	[Token(Token = "0x60005DB")]
	[Address(RVA = "0x8BCB54", Offset = "0x8BCB54", VA = "0x8BCB54")]
	public bool getClicked()
	{
		return default(bool);
	}

	[Token(Token = "0x60005DC")]
	[Address(RVA = "0x8BCB64", Offset = "0x8BCB64", VA = "0x8BCB64")]
	private void Update()
	{
	}

	[Token(Token = "0x60005DD")]
	[Address(RVA = "0x8BCC2C", Offset = "0x8BCC2C", VA = "0x8BCC2C")]
	public Desc getDesc()
	{
		return null;
	}

	[Token(Token = "0x60005DE")]
	[Address(RVA = "0x8BCC34", Offset = "0x8BCC34", VA = "0x8BCC34")]
	public void init(Desc _desc)
	{
	}

	[Token(Token = "0x60005DF")]
	[Address(RVA = "0x8BCB7C", Offset = "0x8BCB7C", VA = "0x8BCB7C")]
	public void setValue(float _value)
	{
	}

	[Token(Token = "0x60005E0")]
	[Address(RVA = "0x8BCCE8", Offset = "0x8BCCE8", VA = "0x8BCCE8")]
	public float getValue()
	{
		return default(float);
	}

	[Token(Token = "0x60005E1")]
	[Address(RVA = "0x8BCD04", Offset = "0x8BCD04", VA = "0x8BCD04")]
	public SliderValue()
	{
	}
}
[Token(Token = "0x20000AE")]
public class Snapshot : MonoBehaviour
{
	[Token(Token = "0x4000738")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int scale;

	[Token(Token = "0x4000739")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Camera cam;

	[Token(Token = "0x60005E2")]
	[Address(RVA = "0x8BCD0C", Offset = "0x8BCD0C", VA = "0x8BCD0C")]
	public Snapshot()
	{
	}
}
[Token(Token = "0x20000AF")]
public class SpecialSelector : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x2000267")]
	public class Item
	{
		[Token(Token = "0x4000EE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string userName;

		[Token(Token = "0x4000EEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Sprite sprite;

		[Token(Token = "0x4000EEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string levelName;

		[Token(Token = "0x6000E8E")]
		[Address(RVA = "0x851BEC", Offset = "0x851BEC", VA = "0x851BEC")]
		public Item(string _text, Sprite _sprite)
		{
		}
	}

	[Token(Token = "0x400073A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TextList listText;

	[Token(Token = "0x400073B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Image picture;

	[Token(Token = "0x400073C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Text currentSelection;

	[Token(Token = "0x400073D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Text title;

	[Token(Token = "0x400073E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private List<string> items;

	[Token(Token = "0x400073F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Item[] itemList;

	[Token(Token = "0x60005E3")]
	[Address(RVA = "0x8132E8", Offset = "0x8132E8", VA = "0x8132E8")]
	public void setItems(string _title, Item[] _itemList)
	{
	}

	[Token(Token = "0x60005E4")]
	[Address(RVA = "0x813AE8", Offset = "0x813AE8", VA = "0x813AE8")]
	private void Update()
	{
	}

	[Token(Token = "0x60005E5")]
	[Address(RVA = "0x813C0C", Offset = "0x813C0C", VA = "0x813C0C")]
	public int getSelectionIndex()
	{
		return default(int);
	}

	[Token(Token = "0x60005E6")]
	[Address(RVA = "0x813C28", Offset = "0x813C28", VA = "0x813C28")]
	public Item getSelectionItem()
	{
		return null;
	}

	[Token(Token = "0x60005E7")]
	[Address(RVA = "0x813C70", Offset = "0x813C70", VA = "0x813C70")]
	public SpecialSelector()
	{
	}
}
[Token(Token = "0x20000B0")]
public class SpinIndicator : MonoBehaviour
{
	[Token(Token = "0x4000740")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Image zero;

	[Token(Token = "0x4000741")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Image arrow;

	[Token(Token = "0x4000742")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Image frame;

	[Token(Token = "0x4000743")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Vector2 position;

	[Token(Token = "0x4000744")]
	private const float moveSpeed = 0.5f;

	[Token(Token = "0x4000745")]
	private const float minSize = 0.1f;

	[Token(Token = "0x4000746")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool dragging;

	[Token(Token = "0x60005E8")]
	[Address(RVA = "0x813C78", Offset = "0x813C78", VA = "0x813C78")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60005E9")]
	[Address(RVA = "0x813C80", Offset = "0x813C80", VA = "0x813C80")]
	public void init()
	{
	}

	[Token(Token = "0x60005EA")]
	[Address(RVA = "0x813CA8", Offset = "0x813CA8", VA = "0x813CA8")]
	public void update(Vector2 analogInput, bool resetButton)
	{
	}

	[Token(Token = "0x60005EB")]
	[Address(RVA = "0x813E50", Offset = "0x813E50", VA = "0x813E50")]
	public void Update()
	{
	}

	[Token(Token = "0x60005EC")]
	[Address(RVA = "0x813D40", Offset = "0x813D40", VA = "0x813D40")]
	private void refreshArrow()
	{
	}

	[Token(Token = "0x60005ED")]
	[Address(RVA = "0x813F94", Offset = "0x813F94", VA = "0x813F94")]
	public void get(out float _radians, out float _strength)
	{
	}

	[Token(Token = "0x60005EE")]
	[Address(RVA = "0x814024", Offset = "0x814024", VA = "0x814024")]
	public void dragStart()
	{
	}

	[Token(Token = "0x60005EF")]
	[Address(RVA = "0x814030", Offset = "0x814030", VA = "0x814030")]
	public void dragEnd()
	{
	}

	[Token(Token = "0x60005F0")]
	[Address(RVA = "0x814038", Offset = "0x814038", VA = "0x814038")]
	public SpinIndicator()
	{
	}
}
[Token(Token = "0x20000B1")]
public class SpinSettings : MonoBehaviour
{
	[Token(Token = "0x2000268")]
	private enum State
	{
		[Token(Token = "0x4000EED")]
		drag,
		[Token(Token = "0x4000EEE")]
		idle
	}

	[Token(Token = "0x4000747")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Slider strength;

	[Token(Token = "0x4000748")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Image arrow;

	[Token(Token = "0x4000749")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Selectable area;

	[Token(Token = "0x400074A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private State state;

	[Token(Token = "0x400074B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Vector3[] corners;

	[Token(Token = "0x400074C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private Vector2 startDrag;

	[Token(Token = "0x400074D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float startAngle;

	[Token(Token = "0x400074E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool custom;

	[Token(Token = "0x60005F1")]
	[Address(RVA = "0x814040", Offset = "0x814040", VA = "0x814040")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60005F2")]
	[Address(RVA = "0x814448", Offset = "0x814448", VA = "0x814448")]
	public void spinDown(BaseEventData eventData)
	{
	}

	[Token(Token = "0x60005F3")]
	[Address(RVA = "0x814588", Offset = "0x814588", VA = "0x814588")]
	public void spinContinue(BaseEventData eventData)
	{
	}

	[Token(Token = "0x60005F4")]
	[Address(RVA = "0x8147DC", Offset = "0x8147DC", VA = "0x8147DC")]
	private void Update()
	{
	}

	[Token(Token = "0x60005F5")]
	[Address(RVA = "0x814EA4", Offset = "0x814EA4", VA = "0x814EA4")]
	public void set(float _radian, float _strength)
	{
	}

	[Token(Token = "0x60005F6")]
	[Address(RVA = "0x814F44", Offset = "0x814F44", VA = "0x814F44")]
	public void get(out float _radians, out float _strength)
	{
	}

	[Token(Token = "0x60005F7")]
	[Address(RVA = "0x814FE4", Offset = "0x814FE4", VA = "0x814FE4")]
	public SpinSettings()
	{
	}

	[Token(Token = "0x60005F9")]
	[Address(RVA = "0x815060", Offset = "0x815060", VA = "0x815060")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4425B8", Offset = "0x4425B8")]
	private void <OnEnable>b__8_0(BaseEventData data)
	{
	}

	[Token(Token = "0x60005FA")]
	[Address(RVA = "0x815064", Offset = "0x815064", VA = "0x815064")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4425C8", Offset = "0x4425C8")]
	private void <OnEnable>b__8_1(BaseEventData data)
	{
	}
}
[Token(Token = "0x20000B2")]
public class SquareSliderHandle : MonoBehaviour
{
	[Token(Token = "0x400074F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Slider slider;

	[Token(Token = "0x4000750")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private RectTransform container;

	[Token(Token = "0x60005FB")]
	[Address(RVA = "0x815068", Offset = "0x815068", VA = "0x815068")]
	private void Start()
	{
	}

	[Token(Token = "0x60005FC")]
	[Address(RVA = "0x815104", Offset = "0x815104", VA = "0x815104")]
	private void Update()
	{
	}

	[Token(Token = "0x60005FD")]
	[Address(RVA = "0x815184", Offset = "0x815184", VA = "0x815184")]
	public SquareSliderHandle()
	{
	}
}
[Token(Token = "0x20000B3")]
public class StatusPanel : MonoBehaviour
{
	[Token(Token = "0x4000751")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Text statusMessage;

	[Token(Token = "0x4000752")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Text title;

	[Token(Token = "0x60005FE")]
	[Address(RVA = "0x8154B8", Offset = "0x8154B8", VA = "0x8154B8")]
	public void setTitle(string _title)
	{
	}

	[Token(Token = "0x60005FF")]
	[Address(RVA = "0x8154DC", Offset = "0x8154DC", VA = "0x8154DC")]
	public void setMessage(string _message)
	{
	}

	[Token(Token = "0x6000600")]
	[Address(RVA = "0x815500", Offset = "0x815500", VA = "0x815500")]
	public StatusPanel()
	{
	}
}
[Token(Token = "0x20000B4")]
public class StreamRW
{
	[Token(Token = "0x4000753")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public FileStream stream;

	[Token(Token = "0x4000754")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private byte[] temp;

	[Token(Token = "0x4000755")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private FileMode fileMode;

	[Token(Token = "0x4000756")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private FileAccess access;

	[Token(Token = "0x4000757")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly string fileName;

	[Token(Token = "0x6000601")]
	[Address(RVA = "0x815508", Offset = "0x815508", VA = "0x815508")]
	public bool atEnd()
	{
		return default(bool);
	}

	[Token(Token = "0x6000602")]
	[Address(RVA = "0x815560", Offset = "0x815560", VA = "0x815560")]
	public StreamRW(bool write)
	{
	}

	[Token(Token = "0x6000603")]
	[Address(RVA = "0x8156D8", Offset = "0x8156D8", VA = "0x8156D8")]
	public void flush()
	{
	}

	[Token(Token = "0x6000604")]
	[Address(RVA = "0x815778", Offset = "0x815778", VA = "0x815778")]
	public void free()
	{
	}

	[Token(Token = "0x6000605")]
	[Address(RVA = "0x8157C4", Offset = "0x8157C4", VA = "0x8157C4")]
	public void write(bool b)
	{
	}

	[Token(Token = "0x6000606")]
	[Address(RVA = "0x815844", Offset = "0x815844", VA = "0x815844")]
	public void read(out bool b)
	{
	}

	[Token(Token = "0x6000607")]
	[Address(RVA = "0x815820", Offset = "0x815820", VA = "0x815820")]
	public void write(byte[] array, int offset, int len)
	{
	}

	[Token(Token = "0x6000608")]
	[Address(RVA = "0x8158B8", Offset = "0x8158B8", VA = "0x8158B8")]
	public void read(byte[] array, int offset, int len)
	{
	}

	[Token(Token = "0x6000609")]
	[Address(RVA = "0x8158DC", Offset = "0x8158DC", VA = "0x8158DC")]
	public void write(byte b)
	{
	}

	[Token(Token = "0x600060A")]
	[Address(RVA = "0x815934", Offset = "0x815934", VA = "0x815934")]
	public void read(out byte b)
	{
	}

	[Token(Token = "0x600060B")]
	[Address(RVA = "0x8159A0", Offset = "0x8159A0", VA = "0x8159A0")]
	public void write(Vector3 v)
	{
	}

	[Token(Token = "0x600060C")]
	[Address(RVA = "0x815A80", Offset = "0x815A80", VA = "0x815A80")]
	public void read(out Vector3 v)
	{
	}

	[Token(Token = "0x600060D")]
	[Address(RVA = "0x815B60", Offset = "0x815B60", VA = "0x815B60")]
	public void write(Vector2 v)
	{
	}

	[Token(Token = "0x600060E")]
	[Address(RVA = "0x815B94", Offset = "0x815B94", VA = "0x815B94")]
	public void read(out Vector2 v)
	{
	}

	[Token(Token = "0x600060F")]
	[Address(RVA = "0x8159E4", Offset = "0x8159E4", VA = "0x8159E4")]
	public void write(float b)
	{
	}

	[Token(Token = "0x6000610")]
	[Address(RVA = "0x815AB8", Offset = "0x815AB8", VA = "0x815AB8")]
	public void read(out float fValue)
	{
	}

	[Token(Token = "0x6000611")]
	[Address(RVA = "0x815BC0", Offset = "0x815BC0", VA = "0x815BC0")]
	public void write(int intValue)
	{
	}

	[Token(Token = "0x6000612")]
	[Address(RVA = "0x815C5C", Offset = "0x815C5C", VA = "0x815C5C")]
	public void read(out int intValue)
	{
	}

	[Token(Token = "0x6000613")]
	[Address(RVA = "0x815D04", Offset = "0x815D04", VA = "0x815D04")]
	public void write(string s)
	{
	}

	[Token(Token = "0x6000614")]
	[Address(RVA = "0x815D90", Offset = "0x815D90", VA = "0x815D90")]
	public void read(out string s)
	{
	}
}
[Token(Token = "0x20000B5")]
public class TVCamera
{
	[Token(Token = "0x4000758")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private float minCameraTime;

	[Token(Token = "0x4000759")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private float cameraHeight;

	[Token(Token = "0x400075A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float cameraDistance;

	[Token(Token = "0x400075B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private int camCount;

	[Token(Token = "0x400075C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private BSimBoss simBoss;

	[Token(Token = "0x400075D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private List<Vector3> positions;

	[Token(Token = "0x400075E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private List<Vector3> forwards;

	[Token(Token = "0x400075F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int iCam;

	[Token(Token = "0x4000760")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float time;

	[Token(Token = "0x6000616")]
	[Address(RVA = "0x816E5C", Offset = "0x816E5C", VA = "0x816E5C")]
	public TVCamera(BSimBoss _simBoss)
	{
	}

	[Token(Token = "0x6000617")]
	[Address(RVA = "0x817214", Offset = "0x817214", VA = "0x817214")]
	private Vector3 make3d(Vector2 inp)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000618")]
	[Address(RVA = "0x81727C", Offset = "0x81727C", VA = "0x81727C")]
	public void update(int animFrame, BAnimHead anim)
	{
	}

	[Token(Token = "0x6000619")]
	[Address(RVA = "0x8175E4", Offset = "0x8175E4", VA = "0x8175E4")]
	internal int getNearestCamera(Vector3 pos)
	{
		return default(int);
	}
}
[Token(Token = "0x20000B6")]
public class TeleportTarget : MonoBehaviour
{
	[Token(Token = "0x2000269")]
	public enum State
	{
		[Token(Token = "0x4000EF0")]
		idle,
		[Token(Token = "0x4000EF1")]
		ready
	}

	[Token(Token = "0x4000761")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Color colIdle;

	[Token(Token = "0x4000762")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Color colReady;

	[Token(Token = "0x4000763")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Material mat;

	[Token(Token = "0x4000764")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private State state;

	[Token(Token = "0x600061A")]
	[Address(RVA = "0x819D5C", Offset = "0x819D5C", VA = "0x819D5C")]
	public void OnEnable()
	{
	}

	[Token(Token = "0x600061B")]
	[Address(RVA = "0x819DC8", Offset = "0x819DC8", VA = "0x819DC8")]
	public void Update()
	{
	}

	[Token(Token = "0x600061C")]
	[Address(RVA = "0x819E20", Offset = "0x819E20", VA = "0x819E20")]
	public void setState(State _state)
	{
	}

	[Token(Token = "0x600061D")]
	[Address(RVA = "0x819E28", Offset = "0x819E28", VA = "0x819E28")]
	public TeleportTarget()
	{
	}
}
[Token(Token = "0x20000B7")]
public class TextList : MonoBehaviour
{
	[Token(Token = "0x200026A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x43F4F8", Offset = "0x43F4F8")]
	private sealed class <>c__DisplayClass10_0
	{
		[Token(Token = "0x4000EF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int index;

		[Token(Token = "0x4000EF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public TextList <>4__this;

		[Token(Token = "0x6000E8F")]
		[Address(RVA = "0x852784", Offset = "0x852784", VA = "0x852784")]
		public <>c__DisplayClass10_0()
		{
		}

		[Token(Token = "0x6000E90")]
		[Address(RVA = "0x85278C", Offset = "0x85278C", VA = "0x85278C")]
		internal void <setList>b__0()
		{
		}
	}

	[Token(Token = "0x4000765")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject itemPrefab;

	[Token(Token = "0x4000766")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private ScrollRect scrollRect;

	[Token(Token = "0x4000767")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private List<GameObject> items;

	[Token(Token = "0x4000768")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private int selection;

	[Token(Token = "0x4000769")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float textHeight;

	[Token(Token = "0x400076A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float lineHeight;

	[Token(Token = "0x600061E")]
	[Address(RVA = "0x81AC30", Offset = "0x81AC30", VA = "0x81AC30")]
	private void Awake()
	{
	}

	[Token(Token = "0x600061F")]
	[Address(RVA = "0x81ACAC", Offset = "0x81ACAC", VA = "0x81ACAC")]
	public void onClick(int index)
	{
	}

	[Token(Token = "0x6000620")]
	[Address(RVA = "0x81AD64", Offset = "0x81AD64", VA = "0x81AD64")]
	public int getSelection()
	{
		return default(int);
	}

	[Token(Token = "0x6000621")]
	[Address(RVA = "0x81AD6C", Offset = "0x81AD6C", VA = "0x81AD6C")]
	public void setSelection(int _selection)
	{
	}

	[Token(Token = "0x6000622")]
	[Address(RVA = "0x813618", Offset = "0x813618", VA = "0x813618")]
	public void setList(List<string> _items)
	{
	}

	[Token(Token = "0x6000623")]
	[Address(RVA = "0x81AD74", Offset = "0x81AD74", VA = "0x81AD74")]
	private void Update()
	{
	}

	[Token(Token = "0x6000624")]
	[Address(RVA = "0x813998", Offset = "0x813998", VA = "0x813998")]
	public void setTextHeight(float _textSize)
	{
	}

	[Token(Token = "0x6000625")]
	[Address(RVA = "0x81AF38", Offset = "0x81AF38", VA = "0x81AF38")]
	public TextList()
	{
	}
}
[Token(Token = "0x20000B8")]
public class ThreadBoss : MonoBehaviour
{
	[Token(Token = "0x200026B")]
	public class MyThread
	{
		[Token(Token = "0x4000EF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Thread thread;

		[Token(Token = "0x6000E91")]
		[Address(RVA = "0x849788", Offset = "0x849788", VA = "0x849788")]
		public bool running()
		{
			return default(bool);
		}

		[Token(Token = "0x6000E92")]
		[Address(RVA = "0x8527B0", Offset = "0x8527B0", VA = "0x8527B0")]
		public MyThread()
		{
		}
	}

	[Token(Token = "0x400076B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int maxCount;

	[Token(Token = "0x400076C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	internal List<MyThread> threads;

	[Token(Token = "0x400076D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	internal static ThreadBoss I;

	[Token(Token = "0x6000626")]
	[Address(RVA = "0x81AFC4", Offset = "0x81AFC4", VA = "0x81AFC4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000627")]
	[Address(RVA = "0x81B018", Offset = "0x81B018", VA = "0x81B018")]
	private void Update()
	{
	}

	[Token(Token = "0x6000628")]
	[Address(RVA = "0x81B124", Offset = "0x81B124", VA = "0x81B124")]
	public bool running()
	{
		return default(bool);
	}

	[Token(Token = "0x6000629")]
	[Address(RVA = "0x81B140", Offset = "0x81B140", VA = "0x81B140")]
	public int getCount()
	{
		return default(int);
	}

	[Token(Token = "0x600062A")]
	[Address(RVA = "0x81B18C", Offset = "0x81B18C", VA = "0x81B18C")]
	public MyThread start(ThreadStart func)
	{
		return null;
	}

	[Token(Token = "0x600062B")]
	[Address(RVA = "0x81B2A4", Offset = "0x81B2A4", VA = "0x81B2A4")]
	public ThreadBoss()
	{
	}
}
[Token(Token = "0x20000B9")]
public class TipLine : MonoBehaviour
{
	[Token(Token = "0x400076E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Text text;

	[Token(Token = "0x400076F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Image icon;

	[Token(Token = "0x4000770")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Image icon2;

	[Token(Token = "0x600062C")]
	[Address(RVA = "0x81B330", Offset = "0x81B330", VA = "0x81B330")]
	public TipLine()
	{
	}
}
[Token(Token = "0x20000BA")]
public class Tips : MonoBehaviour
{
	[Token(Token = "0x4000771")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Text title;

	[Token(Token = "0x4000772")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TipLine tipLine;

	[Token(Token = "0x4000773")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public TipsData data;

	[Token(Token = "0x4000774")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Image picture;

	[Token(Token = "0x4000775")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Text pictureDescription;

	[Token(Token = "0x4000776")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private List<GameObject> lines;

	[Token(Token = "0x4000777")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private int iPage;

	[Token(Token = "0x600062D")]
	[Address(RVA = "0x81B338", Offset = "0x81B338", VA = "0x81B338")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600062E")]
	[Address(RVA = "0x81BAFC", Offset = "0x81BAFC", VA = "0x81BAFC")]
	private void Update()
	{
	}

	[Token(Token = "0x600062F")]
	[Address(RVA = "0x81B380", Offset = "0x81B380", VA = "0x81B380")]
	private void setPage(int index)
	{
	}

	[Token(Token = "0x6000630")]
	[Address(RVA = "0x81BBCC", Offset = "0x81BBCC", VA = "0x81BBCC")]
	public void buttonNext()
	{
	}

	[Token(Token = "0x6000631")]
	[Address(RVA = "0x81BBD8", Offset = "0x81BBD8", VA = "0x81BBD8")]
	public void buttonLast()
	{
	}

	[Token(Token = "0x6000632")]
	[Address(RVA = "0x81BBA4", Offset = "0x81BBA4", VA = "0x81BBA4")]
	public void buttonExit()
	{
	}

	[Token(Token = "0x6000633")]
	[Address(RVA = "0x81BBE4", Offset = "0x81BBE4", VA = "0x81BBE4")]
	public Tips()
	{
	}
}
[Token(Token = "0x20000BB")]
public class TipsData : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x200026C")]
	public class Page
	{
		[Token(Token = "0x4000EF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string title;

		[Token(Token = "0x4000EF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<Entry> entries;

		[Token(Token = "0x4000EF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Sprite picture;

		[Token(Token = "0x4000EF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string pictureDescription;

		[Token(Token = "0x6000E93")]
		[Address(RVA = "0x85289C", Offset = "0x85289C", VA = "0x85289C")]
		public Page()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x200026D")]
	public class Entry
	{
		[Token(Token = "0x4000EF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Version version;

		[Token(Token = "0x4000EFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string text;

		[Token(Token = "0x4000EFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Sprite icon;

		[Token(Token = "0x4000EFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Sprite icon2;

		[Token(Token = "0x6000E94")]
		[Address(RVA = "0x8527B8", Offset = "0x8527B8", VA = "0x8527B8")]
		public bool show()
		{
			return default(bool);
		}

		[Token(Token = "0x6000E95")]
		[Address(RVA = "0x85288C", Offset = "0x85288C", VA = "0x85288C")]
		public Entry()
		{
		}
	}

	[Token(Token = "0x200026E")]
	public enum Version
	{
		[Token(Token = "0x4000EFE")]
		vr,
		[Token(Token = "0x4000EFF")]
		monitor,
		[Token(Token = "0x4000F00")]
		both
	}

	[Token(Token = "0x4000778")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Page[] pages;

	[Token(Token = "0x6000634")]
	[Address(RVA = "0x81BC68", Offset = "0x81BC68", VA = "0x81BC68")]
	public TipsData()
	{
	}
}
[Token(Token = "0x20000BC")]
public class TurnIndicator : MonoBehaviour
{
	[Token(Token = "0x4000779")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Image frame;

	[Token(Token = "0x6000635")]
	[Address(RVA = "0x81FA1C", Offset = "0x81FA1C", VA = "0x81FA1C")]
	public TurnIndicator()
	{
	}
}
[Token(Token = "0x20000BD")]
public class UiBlocker : MonoBehaviour
{
	[Token(Token = "0x400077A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	internal LinkedListNode<UiBlocker> link;

	[Token(Token = "0x400077B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	internal RectTransform rt;

	[Token(Token = "0x400077C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static LinkedList<UiBlocker> items;

	[Token(Token = "0x400077D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static Vector3[] corners;

	[Token(Token = "0x6000636")]
	[Address(RVA = "0x81FA34", Offset = "0x81FA34", VA = "0x81FA34")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000637")]
	[Address(RVA = "0x81FB00", Offset = "0x81FB00", VA = "0x81FB00")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000638")]
	[Address(RVA = "0x81FB8C", Offset = "0x81FB8C", VA = "0x81FB8C")]
	private static Rect RectTransformToScreenSpace(RectTransform transform)
	{
		return default(Rect);
	}

	[Token(Token = "0x6000639")]
	[Address(RVA = "0x81FC58", Offset = "0x81FC58", VA = "0x81FC58")]
	public static bool hitUi(out Vector3 p, out Vector3 n, Ray ray, [Optional] Canvas canvas)
	{
		return default(bool);
	}

	[Token(Token = "0x600063A")]
	[Address(RVA = "0x820244", Offset = "0x820244", VA = "0x820244")]
	public UiBlocker()
	{
	}
}
[Token(Token = "0x20000BE")]
public class UiFlipper : MonoBehaviour
{
	[Token(Token = "0x400077E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool flip;

	[Token(Token = "0x600063C")]
	[Address(RVA = "0x820310", Offset = "0x820310", VA = "0x820310")]
	public void OnEnable()
	{
	}

	[Token(Token = "0x600063D")]
	[Address(RVA = "0x820448", Offset = "0x820448", VA = "0x820448")]
	public void Update()
	{
	}

	[Token(Token = "0x600063E")]
	[Address(RVA = "0x820390", Offset = "0x820390", VA = "0x820390")]
	public void setFlip(bool _flip)
	{
	}

	[Token(Token = "0x600063F")]
	[Address(RVA = "0x8204C8", Offset = "0x8204C8", VA = "0x8204C8")]
	private void flipText(Transform t)
	{
	}

	[Token(Token = "0x6000640")]
	[Address(RVA = "0x820824", Offset = "0x820824", VA = "0x820824")]
	public UiFlipper()
	{
	}
}
[Token(Token = "0x20000BF")]
public class XNet : MonoBehaviour, INetBoss
{
	[Token(Token = "0x200026F")]
	private class MessState
	{
		[Token(Token = "0x4000F01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public MessageID id;

		[Token(Token = "0x4000F02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public uint identifier;

		[Token(Token = "0x4000F03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public byte[] data;

		[Token(Token = "0x4000F04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public uint bytesReceived;

		[Token(Token = "0x6000E96")]
		[Address(RVA = "0x8536B8", Offset = "0x8536B8", VA = "0x8536B8")]
		public MessState()
		{
		}
	}

	[Token(Token = "0x400077F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string serverIp;

	[Token(Token = "0x4000780")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int hostId;

	[Token(Token = "0x4000781")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private int connectionId;

	[Token(Token = "0x4000782")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private int myReliableChannelId;

	[Token(Token = "0x4000783")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private ModeNet listener;

	[Token(Token = "0x4000784")]
	private const uint packetSize = 1024u;

	[Token(Token = "0x4000785")]
	private const uint headerSize = 17u;

	[Token(Token = "0x4000786")]
	private const uint maxDataSize = 1007u;

	[Token(Token = "0x4000787")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private byte[] packet;

	[Token(Token = "0x4000788")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool inRoom;

	[Token(Token = "0x4000789")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Dictionary<uint, MessState> messagedic;

	[Token(Token = "0x400078A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private uint identifer;

	[Token(Token = "0x400078B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private bool isMaster;

	[Token(Token = "0x400078C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public string localIP;

	[Token(Token = "0x400078D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private byte[] recBuffer;

	[Token(Token = "0x400078E")]
	private const int bufferSize = 1024;

	[Token(Token = "0x400078F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private bool running;

	[Token(Token = "0x6000641")]
	[Address(RVA = "0xE87EA8", Offset = "0xE87EA8", VA = "0xE87EA8")]
	public int getPort()
	{
		return default(int);
	}

	[Token(Token = "0x6000642")]
	[Address(RVA = "0xE87F40", Offset = "0xE87F40", VA = "0xE87F40", Slot = "4")]
	public void nb_start()
	{
	}

	[Token(Token = "0x6000643")]
	[Address(RVA = "0xE881D0", Offset = "0xE881D0", VA = "0xE881D0", Slot = "5")]
	public void nb_stop()
	{
	}

	[Token(Token = "0x6000644")]
	[Address(RVA = "0xE88294", Offset = "0xE88294", VA = "0xE88294")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000645")]
	[Address(RVA = "0xE88298", Offset = "0xE88298", VA = "0xE88298")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000646")]
	[Address(RVA = "0xE88384", Offset = "0xE88384", VA = "0xE88384", Slot = "6")]
	public bool nb_isInRoom()
	{
		return default(bool);
	}

	[Token(Token = "0x6000647")]
	[Address(RVA = "0xE882A8", Offset = "0xE882A8", VA = "0xE882A8", Slot = "7")]
	public void nb_leaveRoom()
	{
	}

	[Token(Token = "0x6000648")]
	[Address(RVA = "0xE88484", Offset = "0xE88484", VA = "0xE88484", Slot = "8")]
	public void nb_createRoom(string roomName)
	{
	}

	[Token(Token = "0x6000649")]
	[Address(RVA = "0xE88548", Offset = "0xE88548", VA = "0xE88548", Slot = "9")]
	public void nb_joinRoom(string roomName)
	{
	}

	[Token(Token = "0x600064A")]
	[Address(RVA = "0xE88B48", Offset = "0xE88B48", VA = "0xE88B48")]
	private byte readByte(byte[] array, ref int position)
	{
		return default(byte);
	}

	[Token(Token = "0x600064B")]
	[Address(RVA = "0xE88B8C", Offset = "0xE88B8C", VA = "0xE88B8C")]
	private uint readUint(byte[] array, ref int position)
	{
		return default(uint);
	}

	[Token(Token = "0x600064C")]
	[Address(RVA = "0xE88BF8", Offset = "0xE88BF8", VA = "0xE88BF8")]
	private void writeByte(byte b, byte[] array, ref int position)
	{
	}

	[Token(Token = "0x600064D")]
	[Address(RVA = "0xE88C3C", Offset = "0xE88C3C", VA = "0xE88C3C")]
	private void writeUint(uint i, byte[] array, ref int position)
	{
	}

	[Token(Token = "0x600064E")]
	[Address(RVA = "0xE88C98", Offset = "0xE88C98", VA = "0xE88C98", Slot = "10")]
	public void nb_sendMessageToOthers(MyMessage _message)
	{
	}

	[Token(Token = "0x600064F")]
	[Address(RVA = "0xE88EFC", Offset = "0xE88EFC", VA = "0xE88EFC")]
	private void receiveData(byte[] data, int nData)
	{
	}

	[Token(Token = "0x6000650")]
	[Address(RVA = "0xE8913C", Offset = "0xE8913C", VA = "0xE8913C", Slot = "11")]
	public void nb_setListener(ModeNet state)
	{
	}

	[Token(Token = "0x6000651")]
	[Address(RVA = "0xE891D0", Offset = "0xE891D0", VA = "0xE891D0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000652")]
	[Address(RVA = "0xE891D4", Offset = "0xE891D4", VA = "0xE891D4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000653")]
	[Address(RVA = "0xE89358", Offset = "0xE89358", VA = "0xE89358")]
	public void buttonConnect()
	{
	}

	[Token(Token = "0x6000654")]
	[Address(RVA = "0xE8941C", Offset = "0xE8941C", VA = "0xE8941C")]
	public void buttonDisconnect()
	{
	}

	[Token(Token = "0x6000655")]
	[Address(RVA = "0xE894BC", Offset = "0xE894BC", VA = "0xE894BC")]
	public void buttonSendMessage()
	{
	}

	[Token(Token = "0x6000656")]
	[Address(RVA = "0xE8838C", Offset = "0xE8838C", VA = "0xE8838C")]
	private void printError(string _context, byte _code)
	{
	}

	[Token(Token = "0x6000657")]
	[Address(RVA = "0xE895B4", Offset = "0xE895B4", VA = "0xE895B4")]
	public XNet()
	{
	}
}
[Token(Token = "0x20000C0")]
public class AAFix : MonoBehaviour
{
	[Token(Token = "0x2000270")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x43F508", Offset = "0x43F508")]
	private sealed class <Fix>d__1 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000F05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000F06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000F07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AAFix <>4__this;

		[Token(Token = "0x170000B2")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000E9A")]
			[Address(RVA = "0x859524", Offset = "0x859524", VA = "0x859524", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000B3")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000E9C")]
			[Address(RVA = "0x85956C", Offset = "0x85956C", VA = "0x85956C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000E97")]
		[Address(RVA = "0x859408", Offset = "0x859408", VA = "0x859408")]
		[DebuggerHidden]
		public <Fix>d__1(int <>1__state)
		{
		}

		[Token(Token = "0x6000E98")]
		[Address(RVA = "0x859434", Offset = "0x859434", VA = "0x859434", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000E99")]
		[Address(RVA = "0x859438", Offset = "0x859438", VA = "0x859438", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000E9B")]
		[Address(RVA = "0x85952C", Offset = "0x85952C", VA = "0x85952C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x6000658")]
	[Address(RVA = "0xDF5D1C", Offset = "0xDF5D1C", VA = "0xDF5D1C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000659")]
	[Address(RVA = "0xDF5D6C", Offset = "0xDF5D6C", VA = "0xDF5D6C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x4425D8", Offset = "0x4425D8")]
	private IEnumerator Fix()
	{
		return null;
	}

	[Token(Token = "0x600065A")]
	[Address(RVA = "0xDF5DE4", Offset = "0xDF5DE4", VA = "0xDF5DE4")]
	public AAFix()
	{
	}
}
[Token(Token = "0x20000C1")]
public class ControllerUpdate : MonoBehaviour
{
	[Token(Token = "0x600065B")]
	[Address(RVA = "0x92B718", Offset = "0x92B718", VA = "0x92B718")]
	private void Update()
	{
	}

	[Token(Token = "0x600065C")]
	[Address(RVA = "0x92B774", Offset = "0x92B774", VA = "0x92B774")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x600065D")]
	[Address(RVA = "0x92B7D0", Offset = "0x92B7D0", VA = "0x92B7D0")]
	public ControllerUpdate()
	{
	}
}
[Token(Token = "0x20000C2")]
public class EntitlementCheck : MonoBehaviour
{
	[Token(Token = "0x4000790")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string id;

	[Token(Token = "0x600065E")]
	[Address(RVA = "0x74FC54", Offset = "0x74FC54", VA = "0x74FC54")]
	private void Awake()
	{
	}

	[Token(Token = "0x600065F")]
	[Address(RVA = "0x74FE0C", Offset = "0x74FE0C", VA = "0x74FE0C")]
	private void myCallback(Message message)
	{
	}

	[Token(Token = "0x6000660")]
	[Address(RVA = "0x74FEE4", Offset = "0x74FEE4", VA = "0x74FEE4")]
	public EntitlementCheck()
	{
	}
}
[Token(Token = "0x20000C3")]
public class RigOculus : Rig
{
	[Token(Token = "0x4000791")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Transform editorRay;

	[Token(Token = "0x4000792")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Transform leftRay;

	[Token(Token = "0x4000793")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Transform rightRay;

	[Token(Token = "0x4000794")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public string controllerLayer;

	[Token(Token = "0x4000795")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Transform centerEyes;

	[Token(Token = "0x4000796")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public LaserPointerInputModule laserPointerInputModule;

	[Token(Token = "0x4000797")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private MainInput mainInput;

	[Token(Token = "0x4000798")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public GameObject leftHand;

	[Token(Token = "0x4000799")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public GameObject rightHand;

	[Token(Token = "0x400079A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public GameObject eyes;

	[Token(Token = "0x400079B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Transform hand;

	[Token(Token = "0x400079C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private bool systemBlocking;

	[Token(Token = "0x6000661")]
	[Address(RVA = "0x8B7C9C", Offset = "0x8B7C9C", VA = "0x8B7C9C", Slot = "5")]
	public override bool isSystemOverlayOn()
	{
		return default(bool);
	}

	[Token(Token = "0x6000662")]
	[Address(RVA = "0x8B7CA4", Offset = "0x8B7CA4", VA = "0x8B7CA4")]
	private void focusOn()
	{
	}

	[Token(Token = "0x6000663")]
	[Address(RVA = "0x8B7DEC", Offset = "0x8B7DEC", VA = "0x8B7DEC")]
	private void focusOff()
	{
	}

	[Token(Token = "0x6000664")]
	[Address(RVA = "0x8B7F38", Offset = "0x8B7F38", VA = "0x8B7F38", Slot = "11")]
	public override void onEnable()
	{
	}

	[Token(Token = "0x6000665")]
	[Address(RVA = "0x8B848C", Offset = "0x8B848C", VA = "0x8B848C", Slot = "10")]
	public override void lateUpdate()
	{
	}

	[Token(Token = "0x6000666")]
	[Address(RVA = "0x8B84F4", Offset = "0x8B84F4", VA = "0x8B84F4")]
	private void setEnable(GameObject go, bool on)
	{
	}

	[Token(Token = "0x6000667")]
	[Address(RVA = "0x8B81B4", Offset = "0x8B81B4", VA = "0x8B81B4")]
	private void setLayer(GameObject go, int _layer)
	{
	}

	[Token(Token = "0x6000668")]
	[Address(RVA = "0x8B8548", Offset = "0x8B8548", VA = "0x8B8548", Slot = "7")]
	public override Platform getPlatform()
	{
		return default(Platform);
	}

	[Token(Token = "0x6000669")]
	[Address(RVA = "0x8B8550", Offset = "0x8B8550", VA = "0x8B8550", Slot = "8")]
	public override GraphicRaycaster addRayCaster(GameObject go)
	{
		return null;
	}

	[Token(Token = "0x600066A")]
	[Address(RVA = "0x8B85B4", Offset = "0x8B85B4", VA = "0x8B85B4", Slot = "16")]
	public override void setPlayerPosition(Vector3 pos, Vector3 forward, Vector3 up)
	{
	}

	[Token(Token = "0x600066B")]
	[Address(RVA = "0x8B85C8", Offset = "0x8B85C8", VA = "0x8B85C8", Slot = "6")]
	public override VrType getVrType()
	{
		return default(VrType);
	}

	[Token(Token = "0x600066C")]
	[Address(RVA = "0x8B85D0", Offset = "0x8B85D0", VA = "0x8B85D0", Slot = "21")]
	public override int getPointerCount()
	{
		return default(int);
	}

	[Token(Token = "0x600066D")]
	[Address(RVA = "0x8B85D8", Offset = "0x8B85D8", VA = "0x8B85D8", Slot = "13")]
	public override void addCanvas(CanvasSwitcher _switcher)
	{
	}

	[Token(Token = "0x600066E")]
	[Address(RVA = "0x8B8650", Offset = "0x8B8650", VA = "0x8B8650", Slot = "14")]
	public override void subCanvas(CanvasSwitcher _switcher)
	{
	}

	[Token(Token = "0x600066F")]
	[Address(RVA = "0x8B8654", Offset = "0x8B8654", VA = "0x8B8654", Slot = "22")]
	public override MainInput getMainInput()
	{
		return null;
	}

	[Token(Token = "0x6000670")]
	[Address(RVA = "0x8B865C", Offset = "0x8B865C", VA = "0x8B865C", Slot = "9")]
	public override void update()
	{
	}

	[Token(Token = "0x6000671")]
	[Address(RVA = "0x8B8A70", Offset = "0x8B8A70", VA = "0x8B8A70")]
	private void editorInput()
	{
	}

	[Token(Token = "0x6000672")]
	[Address(RVA = "0x8B8660", Offset = "0x8B8660", VA = "0x8B8660")]
	private void deviceInput()
	{
	}

	[Token(Token = "0x6000673")]
	[Address(RVA = "0x8B8CC4", Offset = "0x8B8CC4", VA = "0x8B8CC4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000674")]
	[Address(RVA = "0x8B92F8", Offset = "0x8B92F8", VA = "0x8B92F8", Slot = "23")]
	public override Transform getCameraTransform()
	{
		return null;
	}

	[Token(Token = "0x6000675")]
	[Address(RVA = "0x8B9300", Offset = "0x8B9300", VA = "0x8B9300")]
	public RigOculus()
	{
	}
}
[Token(Token = "0x20000C4")]
public class ColorPreferences
{
	[Token(Token = "0x2000271")]
	public class ColorOpt
	{
		[Token(Token = "0x4000F08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "XmlAttributeAttribute", RVA = "0x4419E4", Offset = "0x4419E4")]
		public string name;

		[Token(Token = "0x4000F09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "XmlAttributeAttribute", RVA = "0x4419F4", Offset = "0x4419F4")]
		public string value;

		[Token(Token = "0x4000F0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[XmlIgnore]
		public Color color;

		[Token(Token = "0x4000F0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static char[] array;

		[Token(Token = "0x6000E9D")]
		[Address(RVA = "0x85C528", Offset = "0x85C528", VA = "0x85C528")]
		public ColorOpt()
		{
		}

		[Token(Token = "0x6000E9E")]
		[Address(RVA = "0x85C530", Offset = "0x85C530", VA = "0x85C530")]
		public ColorOpt(ColorOpt _from)
		{
		}

		[Token(Token = "0x6000E9F")]
		[Address(RVA = "0x85C584", Offset = "0x85C584", VA = "0x85C584")]
		public void setXmlColor()
		{
		}

		[Token(Token = "0x6000EA0")]
		[Address(RVA = "0x85C670", Offset = "0x85C670", VA = "0x85C670")]
		private string getHex(float x)
		{
			return null;
		}

		[Token(Token = "0x6000EA1")]
		[Address(RVA = "0x85C6F4", Offset = "0x85C6F4", VA = "0x85C6F4")]
		private char intToChar(int x)
		{
			return default(char);
		}

		[Token(Token = "0x6000EA2")]
		[Address(RVA = "0x85C7C0", Offset = "0x85C7C0", VA = "0x85C7C0")]
		public void getXmlColor()
		{
		}

		[Token(Token = "0x6000EA3")]
		[Address(RVA = "0x85C990", Offset = "0x85C990", VA = "0x85C990")]
		private int charToInt(char s)
		{
			return default(int);
		}
	}

	[Token(Token = "0x2000272")]
	public class ColorPrefs
	{
		[Token(Token = "0x4000F0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public List<ColorOpt> list;

		[Token(Token = "0x6000EA5")]
		[Address(RVA = "0x85CA50", Offset = "0x85CA50", VA = "0x85CA50")]
		public ColorPrefs()
		{
		}
	}

	[Token(Token = "0x400079D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Dictionary<string, ColorOpt> dic;

	[Token(Token = "0x400079E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static string fileName;

	[Token(Token = "0x400079F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static Color badColor;

	[Token(Token = "0x40007A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private static XmlSerializer serializer;

	[Token(Token = "0x40007A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public static int version;

	[Token(Token = "0x6000676")]
	[Address(RVA = "0x929EF8", Offset = "0x929EF8", VA = "0x929EF8")]
	public ColorPreferences()
	{
	}

	[Token(Token = "0x6000677")]
	[Address(RVA = "0x92A25C", Offset = "0x92A25C", VA = "0x92A25C")]
	public static ColorOpt[] getPrefList()
	{
		return null;
	}

	[Token(Token = "0x6000678")]
	[Address(RVA = "0x92A474", Offset = "0x92A474", VA = "0x92A474")]
	public static Color get(string _name)
	{
		return default(Color);
	}

	[Token(Token = "0x6000679")]
	[Address(RVA = "0x92A734", Offset = "0x92A734", VA = "0x92A734")]
	private void add(Dictionary<string, ColorOpt> d, string _name, Color _color)
	{
	}

	[Token(Token = "0x600067A")]
	[Address(RVA = "0x92A804", Offset = "0x92A804", VA = "0x92A804")]
	private Color colorFromInt(int r, int g, int b)
	{
		return default(Color);
	}

	[Token(Token = "0x600067B")]
	[Address(RVA = "0x929F78", Offset = "0x929F78", VA = "0x929F78")]
	private static Dictionary<string, ColorOpt> getDefaultDic()
	{
		return null;
	}

	[Token(Token = "0x600067C")]
	[Address(RVA = "0x92A854", Offset = "0x92A854", VA = "0x92A854")]
	private static string getFullFileName()
	{
		return null;
	}

	[Token(Token = "0x600067D")]
	[Address(RVA = "0x92A900", Offset = "0x92A900", VA = "0x92A900")]
	public static void save()
	{
	}

	[Token(Token = "0x600067E")]
	[Address(RVA = "0x92AB58", Offset = "0x92AB58", VA = "0x92AB58")]
	public static bool load()
	{
		return default(bool);
	}
}
[Token(Token = "0x20000C5")]
public class MyXml
{
	[Token(Token = "0x2000273")]
	private class Ph
	{
		[Token(Token = "0x6000EA6")]
		[Address(RVA = "0x84BDC0", Offset = "0x84BDC0", VA = "0x84BDC0", Slot = "4")]
		public virtual void nextChar()
		{
		}

		[Token(Token = "0x6000EA7")]
		[Address(RVA = "0x84BDC4", Offset = "0x84BDC4", VA = "0x84BDC4", Slot = "5")]
		public virtual void start()
		{
		}

		[Token(Token = "0x6000EA8")]
		[Address(RVA = "0x84BDC8", Offset = "0x84BDC8", VA = "0x84BDC8")]
		public Ph()
		{
		}
	}

	[Token(Token = "0x2000274")]
	private class PhSegStartLeftArrow : Ph
	{
		[Token(Token = "0x6000EA9")]
		[Address(RVA = "0x84D03C", Offset = "0x84D03C", VA = "0x84D03C", Slot = "4")]
		public override void nextChar()
		{
		}

		[Token(Token = "0x6000EAA")]
		[Address(RVA = "0x84D0D8", Offset = "0x84D0D8", VA = "0x84D0D8")]
		public PhSegStartLeftArrow()
		{
		}
	}

	[Token(Token = "0x2000275")]
	private class PhSegStartType : Ph
	{
		[Token(Token = "0x6000EAB")]
		[Address(RVA = "0x84D5B4", Offset = "0x84D5B4", VA = "0x84D5B4", Slot = "4")]
		public override void nextChar()
		{
		}

		[Token(Token = "0x6000EAC")]
		[Address(RVA = "0x84D69C", Offset = "0x84D69C", VA = "0x84D69C")]
		public PhSegStartType()
		{
		}
	}

	[Token(Token = "0x2000276")]
	private class PhSegStartName : Ph
	{
		[Token(Token = "0x4000F0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private string name;

		[Token(Token = "0x6000EAD")]
		[Address(RVA = "0x84D0E0", Offset = "0x84D0E0", VA = "0x84D0E0", Slot = "4")]
		public override void nextChar()
		{
		}

		[Token(Token = "0x6000EAE")]
		[Address(RVA = "0x84D4F0", Offset = "0x84D4F0", VA = "0x84D4F0", Slot = "5")]
		public override void start()
		{
		}

		[Token(Token = "0x6000EAF")]
		[Address(RVA = "0x84D5AC", Offset = "0x84D5AC", VA = "0x84D5AC")]
		public PhSegStartName()
		{
		}
	}

	[Token(Token = "0x2000277")]
	private class PhComment : Ph
	{
		[Token(Token = "0x6000EB0")]
		[Address(RVA = "0x84C590", Offset = "0x84C590", VA = "0x84C590", Slot = "4")]
		public override void nextChar()
		{
		}

		[Token(Token = "0x6000EB1")]
		[Address(RVA = "0x84C62C", Offset = "0x84C62C", VA = "0x84C62C")]
		public PhComment()
		{
		}
	}

	[Token(Token = "0x2000278")]
	private class PhSegEndRightArrow : Ph
	{
		[Token(Token = "0x6000EB2")]
		[Address(RVA = "0x84CE20", Offset = "0x84CE20", VA = "0x84CE20", Slot = "4")]
		public override void nextChar()
		{
		}

		[Token(Token = "0x6000EB3")]
		[Address(RVA = "0x84D034", Offset = "0x84D034", VA = "0x84D034")]
		public PhSegEndRightArrow()
		{
		}
	}

	[Token(Token = "0x2000279")]
	private class PhSegEndName : Ph
	{
		[Token(Token = "0x4000F0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private string name;

		[Token(Token = "0x6000EB4")]
		[Address(RVA = "0x84C93C", Offset = "0x84C93C", VA = "0x84C93C", Slot = "5")]
		public override void start()
		{
		}

		[Token(Token = "0x6000EB5")]
		[Address(RVA = "0x84C98C", Offset = "0x84C98C", VA = "0x84C98C", Slot = "4")]
		public override void nextChar()
		{
		}

		[Token(Token = "0x6000EB6")]
		[Address(RVA = "0x84CE18", Offset = "0x84CE18", VA = "0x84CE18")]
		public PhSegEndName()
		{
		}
	}

	[Token(Token = "0x200027A")]
	private class PhSegDataType : Ph
	{
		[Token(Token = "0x6000EB7")]
		[Address(RVA = "0x84C788", Offset = "0x84C788", VA = "0x84C788", Slot = "4")]
		public override void nextChar()
		{
		}

		[Token(Token = "0x6000EB8")]
		[Address(RVA = "0x84C934", Offset = "0x84C934", VA = "0x84C934")]
		public PhSegDataType()
		{
		}
	}

	[Token(Token = "0x200027B")]
	private class PhSegData : Ph
	{
		[Token(Token = "0x4000F0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string data;

		[Token(Token = "0x6000EB9")]
		[Address(RVA = "0x84C634", Offset = "0x84C634", VA = "0x84C634", Slot = "4")]
		public override void nextChar()
		{
		}

		[Token(Token = "0x6000EBA")]
		[Address(RVA = "0x84C730", Offset = "0x84C730", VA = "0x84C730", Slot = "5")]
		public override void start()
		{
		}

		[Token(Token = "0x6000EBB")]
		[Address(RVA = "0x84C780", Offset = "0x84C780", VA = "0x84C780")]
		public PhSegData()
		{
		}
	}

	[Token(Token = "0x200027C")]
	private class PhAttNameStart : Ph
	{
		[Token(Token = "0x6000EBC")]
		[Address(RVA = "0x84C088", Offset = "0x84C088", VA = "0x84C088", Slot = "4")]
		public override void nextChar()
		{
		}

		[Token(Token = "0x6000EBD")]
		[Address(RVA = "0x84C1D0", Offset = "0x84C1D0", VA = "0x84C1D0")]
		public PhAttNameStart()
		{
		}
	}

	[Token(Token = "0x200027D")]
	private class PhAttNameEnd : Ph
	{
		[Token(Token = "0x6000EBE")]
		[Address(RVA = "0x84BE78", Offset = "0x84BE78", VA = "0x84BE78", Slot = "5")]
		public override void start()
		{
		}

		[Token(Token = "0x6000EBF")]
		[Address(RVA = "0x84BF34", Offset = "0x84BF34", VA = "0x84BF34", Slot = "4")]
		public override void nextChar()
		{
		}

		[Token(Token = "0x6000EC0")]
		[Address(RVA = "0x84C080", Offset = "0x84C080", VA = "0x84C080")]
		public PhAttNameEnd()
		{
		}
	}

	[Token(Token = "0x200027E")]
	private class PhAttEquals : Ph
	{
		[Token(Token = "0x6000EC1")]
		[Address(RVA = "0x84BDD0", Offset = "0x84BDD0", VA = "0x84BDD0", Slot = "5")]
		public override void start()
		{
		}

		[Token(Token = "0x6000EC2")]
		[Address(RVA = "0x84BDD4", Offset = "0x84BDD4", VA = "0x84BDD4", Slot = "4")]
		public override void nextChar()
		{
		}

		[Token(Token = "0x6000EC3")]
		[Address(RVA = "0x84BE70", Offset = "0x84BE70", VA = "0x84BE70")]
		public PhAttEquals()
		{
		}
	}

	[Token(Token = "0x200027F")]
	private class PhAttValueStart : Ph
	{
		[Token(Token = "0x4000F10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static int calls;

		[Token(Token = "0x4000F11")]
		private const int badCalls = -1;

		[Token(Token = "0x6000EC4")]
		[Address(RVA = "0x84C3EC", Offset = "0x84C3EC", VA = "0x84C3EC", Slot = "5")]
		public override void start()
		{
		}

		[Token(Token = "0x6000EC5")]
		[Address(RVA = "0x84C4C0", Offset = "0x84C4C0", VA = "0x84C4C0", Slot = "4")]
		public override void nextChar()
		{
		}

		[Token(Token = "0x6000EC6")]
		[Address(RVA = "0x84C584", Offset = "0x84C584", VA = "0x84C584")]
		public PhAttValueStart()
		{
		}
	}

	[Token(Token = "0x2000280")]
	private class PhAttValueEnd : Ph
	{
		[Token(Token = "0x4000F12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private string value;

		[Token(Token = "0x6000EC8")]
		[Address(RVA = "0x84C1D8", Offset = "0x84C1D8", VA = "0x84C1D8", Slot = "5")]
		public override void start()
		{
		}

		[Token(Token = "0x6000EC9")]
		[Address(RVA = "0x84C228", Offset = "0x84C228", VA = "0x84C228", Slot = "4")]
		public override void nextChar()
		{
		}

		[Token(Token = "0x6000ECA")]
		[Address(RVA = "0x84C3E4", Offset = "0x84C3E4", VA = "0x84C3E4")]
		public PhAttValueEnd()
		{
		}
	}

	[Token(Token = "0x2000281")]
	public interface Callback
	{
		[Token(Token = "0x6000ECB")]
		void myXmlStartSection(string _name);

		[Token(Token = "0x6000ECC")]
		void myXmlEndSection(string _name);

		[Token(Token = "0x6000ECD")]
		void myXmlAttribute(string _name, string _value);

		[Token(Token = "0x6000ECE")]
		void myXmldata(string _value);
	}

	[Token(Token = "0x40007A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Ph currentPhase;

	[Token(Token = "0x40007A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static PhSegStartLeftArrow pSegStartLeftArrow;

	[Token(Token = "0x40007A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static PhSegStartType pSegStartType;

	[Token(Token = "0x40007A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static PhSegStartName pSegStartName;

	[Token(Token = "0x40007A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private static PhSegEndRightArrow pSegEndRightArrow;

	[Token(Token = "0x40007A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private static PhComment pComment;

	[Token(Token = "0x40007A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private static PhSegEndName pSegEndName;

	[Token(Token = "0x40007A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private static PhAttNameStart pAttNameStart;

	[Token(Token = "0x40007AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private static PhAttNameEnd pAttNameEnd;

	[Token(Token = "0x40007AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private static PhAttValueStart pAttValueStart;

	[Token(Token = "0x40007AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private static PhAttValueEnd pAttValueEnd;

	[Token(Token = "0x40007AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private static PhAttEquals pAttEquals;

	[Token(Token = "0x40007AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private static PhSegData pSegData;

	[Token(Token = "0x40007AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private static PhSegDataType pSegDataType;

	[Token(Token = "0x40007B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private static Callback callback;

	[Token(Token = "0x40007B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private static char currentChar;

	[Token(Token = "0x40007B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private static string attributeName;

	[Token(Token = "0x40007B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private static List<string> sectionStack;

	[Token(Token = "0x40007B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private static int line;

	[Token(Token = "0x6000680")]
	[Address(RVA = "0x7229D4", Offset = "0x7229D4", VA = "0x7229D4")]
	public static int getXmlLine()
	{
		return default(int);
	}

	[Token(Token = "0x6000681")]
	[Address(RVA = "0x722A38", Offset = "0x722A38", VA = "0x722A38")]
	private static void setPhase(Ph phase)
	{
	}

	[Token(Token = "0x6000682")]
	[Address(RVA = "0x722AC4", Offset = "0x722AC4", VA = "0x722AC4")]
	private static void error(string message)
	{
	}

	[Token(Token = "0x6000683")]
	[Address(RVA = "0x722BB4", Offset = "0x722BB4", VA = "0x722BB4")]
	private static bool isWhiteSpace(char c)
	{
		return default(bool);
	}

	[Token(Token = "0x6000684")]
	[Address(RVA = "0x722BDC", Offset = "0x722BDC", VA = "0x722BDC")]
	public static void decodeXmlFromFile(Callback _callback, string _fileName, bool _unityResource)
	{
	}

	[Token(Token = "0x6000685")]
	[Address(RVA = "0x723004", Offset = "0x723004", VA = "0x723004")]
	public static void decodeXmlFromText(Callback _callback, string text)
	{
	}

	[Token(Token = "0x6000686")]
	[Address(RVA = "0x722D9C", Offset = "0x722D9C", VA = "0x722D9C")]
	public static void decodeXml(Callback _callback, string txt)
	{
	}

	[Token(Token = "0x6000687")]
	[Address(RVA = "0x723074", Offset = "0x723074", VA = "0x723074")]
	public MyXml()
	{
	}
}
[Token(Token = "0x20000C6")]
public class RlEncode
{
	[Token(Token = "0x2000282")]
	private enum State
	{
		[Token(Token = "0x4000F14")]
		wait,
		[Token(Token = "0x4000F15")]
		addRepeats,
		[Token(Token = "0x4000F16")]
		addBlock
	}

	[Token(Token = "0x40007B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private SuperBits superBits;

	[Token(Token = "0x40007B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private int bitsPerEntry;

	[Token(Token = "0x40007B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private int repeatBits;

	[Token(Token = "0x40007B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int longsPerEntry;

	[Token(Token = "0x40007B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private int repeatCount;

	[Token(Token = "0x40007BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private State state;

	[Token(Token = "0x40007BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private List<ulong> temp;

	[Token(Token = "0x40007BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int maxRepeat;

	[Token(Token = "0x40007BD")]
	public const int blRepeat = 1;

	[Token(Token = "0x40007BE")]
	public const int blCopy = 0;

	[Token(Token = "0x6000689")]
	[Address(RVA = "0x8B95D8", Offset = "0x8B95D8", VA = "0x8B95D8")]
	public RlEncode(int _bitsPerEntry, int _repeatBits, SuperBits _superBits)
	{
	}

	[Token(Token = "0x600068A")]
	[Address(RVA = "0x8B96F4", Offset = "0x8B96F4", VA = "0x8B96F4")]
	public void add(ulong[] bits)
	{
	}

	[Token(Token = "0x600068B")]
	[Address(RVA = "0x8B9BB4", Offset = "0x8B9BB4", VA = "0x8B9BB4")]
	public void end()
	{
	}

	[Token(Token = "0x600068C")]
	[Address(RVA = "0x8B9B04", Offset = "0x8B9B04", VA = "0x8B9B04")]
	private void copy(ulong[] from)
	{
	}

	[Token(Token = "0x600068D")]
	[Address(RVA = "0x8B9A14", Offset = "0x8B9A14", VA = "0x8B9A14")]
	private bool matchesLast(ulong[] from)
	{
		return default(bool);
	}
}
[Token(Token = "0x20000C7")]
public class RlDecode
{
	[Token(Token = "0x2000283")]
	private enum State
	{
		[Token(Token = "0x4000F18")]
		addRepeats,
		[Token(Token = "0x4000F19")]
		addBlock
	}

	[Token(Token = "0x40007BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private SuperBits superBits;

	[Token(Token = "0x40007C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private int bitsPerEntry;

	[Token(Token = "0x40007C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private int repeatBits;

	[Token(Token = "0x40007C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private ulong[] temp;

	[Token(Token = "0x40007C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private State state;

	[Token(Token = "0x40007C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private ulong repeatCount;

	[Token(Token = "0x40007C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int longsPerEntry;

	[Token(Token = "0x600068E")]
	[Address(RVA = "0x8B93A8", Offset = "0x8B93A8", VA = "0x8B93A8")]
	public RlDecode(SuperBits _superBits)
	{
	}

	[Token(Token = "0x600068F")]
	[Address(RVA = "0x8B9488", Offset = "0x8B9488", VA = "0x8B9488")]
	private void startNextSection()
	{
	}

	[Token(Token = "0x6000690")]
	[Address(RVA = "0x8B9514", Offset = "0x8B9514", VA = "0x8B9514")]
	public void read(ulong[] bits)
	{
	}
}
[Serializable]
[Token(Token = "0x20000C8")]
public class SuperBits
{
	[Token(Token = "0x2000284")]
	public class OoOh : Exception
	{
		[Token(Token = "0x6000ECF")]
		[Address(RVA = "0x851C68", Offset = "0x851C68", VA = "0x851C68")]
		public OoOh()
		{
		}

		[Token(Token = "0x6000ED0")]
		[Address(RVA = "0x851CCC", Offset = "0x851CCC", VA = "0x851CCC")]
		public OoOh(string message)
		{
		}

		[Token(Token = "0x6000ED1")]
		[Address(RVA = "0x851D40", Offset = "0x851D40", VA = "0x851D40")]
		public OoOh(string message, Exception inner)
		{
		}
	}

	[Token(Token = "0x40007C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private List<ulong> buffer;

	[Token(Token = "0x40007C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private int iBit;

	[Token(Token = "0x40007C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private int iRead;

	[Token(Token = "0x40007C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static float[] floats;

	[Token(Token = "0x40007CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static int[] ints;

	[Token(Token = "0x40007CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static byte[] bytes;

	[Token(Token = "0x40007CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static ulong[] longs;

	[Token(Token = "0x40007CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private static int[] array;

	[Token(Token = "0x6000691")]
	[Address(RVA = "0x815F00", Offset = "0x815F00", VA = "0x815F00")]
	public SuperBits()
	{
	}

	[Token(Token = "0x6000692")]
	[Address(RVA = "0x816010", Offset = "0x816010", VA = "0x816010")]
	public SuperBits(byte[] _bytes)
	{
	}

	[Token(Token = "0x6000693")]
	[Address(RVA = "0x8161A0", Offset = "0x8161A0", VA = "0x8161A0")]
	public byte[] getBytes()
	{
		return null;
	}

	[Token(Token = "0x6000694")]
	[Address(RVA = "0x815F8C", Offset = "0x815F8C", VA = "0x815F8C")]
	public void clear()
	{
	}

	[Token(Token = "0x6000695")]
	[Address(RVA = "0x816258", Offset = "0x816258", VA = "0x816258")]
	public void startRead()
	{
	}

	[Token(Token = "0x6000696")]
	[Address(RVA = "0x816260", Offset = "0x816260", VA = "0x816260")]
	public void write(ulong[] _value, int _bits, int index = 0)
	{
	}

	[Token(Token = "0x6000697")]
	[Address(RVA = "0x8164A4", Offset = "0x8164A4", VA = "0x8164A4")]
	public void read(ulong[] _value, int _bits, int index = 0)
	{
	}

	[Token(Token = "0x6000698")]
	[Address(RVA = "0x81671C", Offset = "0x81671C", VA = "0x81671C")]
	public void write(List<ulong> _value, int _bits, int index = 0)
	{
	}

	[Token(Token = "0x6000699")]
	[Address(RVA = "0x816320", Offset = "0x816320", VA = "0x816320")]
	public void write(ulong _value, int _bits)
	{
	}

	[Token(Token = "0x600069A")]
	[Address(RVA = "0x816564", Offset = "0x816564", VA = "0x816564")]
	public void read(out ulong _ret, int _bits)
	{
	}

	[Token(Token = "0x600069B")]
	[Address(RVA = "0x81684C", Offset = "0x81684C", VA = "0x81684C")]
	public void write(int _value)
	{
	}

	[Token(Token = "0x600069C")]
	[Address(RVA = "0x816858", Offset = "0x816858", VA = "0x816858")]
	public void read(out int _ret)
	{
	}

	[Token(Token = "0x600069D")]
	[Address(RVA = "0x81688C", Offset = "0x81688C", VA = "0x81688C")]
	public void write(byte _value)
	{
	}

	[Token(Token = "0x600069E")]
	[Address(RVA = "0x816898", Offset = "0x816898", VA = "0x816898")]
	public void read(out byte _ret)
	{
	}

	[Token(Token = "0x600069F")]
	[Address(RVA = "0x8168CC", Offset = "0x8168CC", VA = "0x8168CC")]
	public void write(float _value)
	{
	}

	[Token(Token = "0x60006A0")]
	[Address(RVA = "0x8169A4", Offset = "0x8169A4", VA = "0x8169A4")]
	public void read(out float _ret)
	{
	}

	[Token(Token = "0x60006A1")]
	[Address(RVA = "0x816A98", Offset = "0x816A98", VA = "0x816A98")]
	public void write(Vector3 _value)
	{
	}

	[Token(Token = "0x60006A2")]
	[Address(RVA = "0x816ADC", Offset = "0x816ADC", VA = "0x816ADC")]
	public void read(out Vector3 _ret)
	{
	}

	[Token(Token = "0x60006A3")]
	[Address(RVA = "0x816B14", Offset = "0x816B14", VA = "0x816B14")]
	public static void test()
	{
	}

	[Token(Token = "0x60006A4")]
	[Address(RVA = "0x816830", Offset = "0x816830", VA = "0x816830")]
	public static ulong getLongMask(int bitCount)
	{
		return default(ulong);
	}
}
[Token(Token = "0x20000C9")]
internal sealed class Vector3SerializationSurrogate : ISerializationSurrogate
{
	[Token(Token = "0x60006A6")]
	[Address(RVA = "0x822F4C", Offset = "0x822F4C", VA = "0x822F4C", Slot = "4")]
	public void GetObjectData(object obj, SerializationInfo info, StreamingContext context)
	{
	}

	[Token(Token = "0x60006A7")]
	[Address(RVA = "0x82304C", Offset = "0x82304C", VA = "0x82304C", Slot = "5")]
	public object SetObjectData(object obj, SerializationInfo info, StreamingContext context, ISurrogateSelector selector)
	{
		return null;
	}

	[Token(Token = "0x60006A8")]
	[Address(RVA = "0x82109C", Offset = "0x82109C", VA = "0x82109C")]
	public Vector3SerializationSurrogate()
	{
	}
}
[Token(Token = "0x20000CA")]
internal sealed class Vector2SerializationSurrogate : ISerializationSurrogate
{
	[Token(Token = "0x60006A9")]
	[Address(RVA = "0x822CD8", Offset = "0x822CD8", VA = "0x822CD8", Slot = "4")]
	public void GetObjectData(object obj, SerializationInfo info, StreamingContext context)
	{
	}

	[Token(Token = "0x60006AA")]
	[Address(RVA = "0x822DAC", Offset = "0x822DAC", VA = "0x822DAC", Slot = "5")]
	public object SetObjectData(object obj, SerializationInfo info, StreamingContext context, ISurrogateSelector selector)
	{
		return null;
	}

	[Token(Token = "0x60006AB")]
	[Address(RVA = "0x8210A4", Offset = "0x8210A4", VA = "0x8210A4")]
	public Vector2SerializationSurrogate()
	{
	}
}
[Token(Token = "0x20000CB")]
public static class Util
{
	[Token(Token = "0x2000285")]
	public class TexEntry
	{
		[Token(Token = "0x4000F1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string fileName;

		[Token(Token = "0x4000F1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Texture2D texture;

		[Token(Token = "0x4000F1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int useCount;

		[Token(Token = "0x6000ED2")]
		[Address(RVA = "0x8531E8", Offset = "0x8531E8", VA = "0x8531E8")]
		public TexEntry()
		{
		}
	}

	[Token(Token = "0x2000286")]
	public class Link<T>
	{
		[Token(Token = "0x4000F1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Link<T> next;

		[Token(Token = "0x4000F1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Link<T> last;

		[Token(Token = "0x4000F1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public T data;

		[Token(Token = "0x6000ED3")]
		public Link<T> getOrigin()
		{
			return null;
		}

		[Token(Token = "0x6000ED4")]
		public Link<T> getFinal()
		{
			return null;
		}

		[Token(Token = "0x6000ED5")]
		public void add(Link<T> link)
		{
		}

		[Token(Token = "0x6000ED6")]
		public void sub()
		{
		}

		[Token(Token = "0x6000ED7")]
		public Link()
		{
		}
	}

	[Token(Token = "0x2000287")]
	public class Stopwatch
	{
		[Token(Token = "0x4000F20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private System.Diagnostics.Stopwatch sw;

		[Token(Token = "0x6000ED8")]
		[Address(RVA = "0x8530C0", Offset = "0x8530C0", VA = "0x8530C0")]
		public Stopwatch()
		{
		}

		[Token(Token = "0x6000ED9")]
		[Address(RVA = "0x853150", Offset = "0x853150", VA = "0x853150")]
		public float clickLog(string message, bool zero = true)
		{
			return default(float);
		}

		[Token(Token = "0x6000EDA")]
		[Address(RVA = "0x853158", Offset = "0x853158", VA = "0x853158")]
		public float click(bool zero = true)
		{
			return default(float);
		}
	}

	[Token(Token = "0x40007CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static char[] folderSeparators;

	[Token(Token = "0x40007CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static Dictionary<string, TexEntry> texDic;

	[Token(Token = "0x40007D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static bool logMessages;

	[Token(Token = "0x40007D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static BinaryFormatter binaryFormatter;

	[Token(Token = "0x60006AC")]
	[Address(RVA = "0x82082C", Offset = "0x82082C", VA = "0x82082C")]
	public static void setActive(GameObject go, bool on)
	{
	}

	[Token(Token = "0x60006AD")]
	[Address(RVA = "0x82087C", Offset = "0x82087C", VA = "0x82087C")]
	public static Vector2 normalize(Vector2 v)
	{
		return default(Vector2);
	}

	[Token(Token = "0x60006AE")]
	[Address(RVA = "0x817220", Offset = "0x817220", VA = "0x817220")]
	public static Vector3 normalize(Vector3 v)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60006AF")]
	[Address(RVA = "0x8208CC", Offset = "0x8208CC", VA = "0x8208CC")]
	public static void freeTexture(TexEntry te)
	{
	}

	[Token(Token = "0x60006B0")]
	[Address(RVA = "0x8209B4", Offset = "0x8209B4", VA = "0x8209B4")]
	public static TexEntry loadTexture(string filePath)
	{
		return null;
	}

	[Token(Token = "0x60006B1")]
	[Address(RVA = "0x814344", Offset = "0x814344", VA = "0x814344")]
	public static Canvas getCanvas(RectTransform rt)
	{
		return null;
	}

	[Token(Token = "0x60006B2")]
	[Address(RVA = "0x820C18", Offset = "0x820C18", VA = "0x820C18")]
	public static void logger(string message)
	{
	}

	[Token(Token = "0x60006B3")]
	[Address(RVA = "0x820CC4", Offset = "0x820CC4", VA = "0x820CC4")]
	public static Color setColorAlpha(Color color, float alpha)
	{
		return default(Color);
	}

	[Token(Token = "0x60006B4")]
	[Address(RVA = "0x820CF8", Offset = "0x820CF8", VA = "0x820CF8")]
	public static void addButtonListener(GameObject go, UnityAction action)
	{
	}

	[Token(Token = "0x60006B5")]
	[Address(RVA = "0x820D98", Offset = "0x820D98", VA = "0x820D98")]
	public static void addButtonListener(Button but, UnityAction action)
	{
	}

	[Token(Token = "0x60006B6")]
	[Address(RVA = "0x820DE0", Offset = "0x820DE0", VA = "0x820DE0")]
	public static object serialCopy(object from)
	{
		return null;
	}

	[Token(Token = "0x60006B7")]
	[Address(RVA = "0x820EC0", Offset = "0x820EC0", VA = "0x820EC0")]
	public static BinaryFormatter makeBinaryFormatter()
	{
		return null;
	}

	[Token(Token = "0x60006B8")]
	[Address(RVA = "0x8210AC", Offset = "0x8210AC", VA = "0x8210AC")]
	public static object deserializeBinary(byte[] bytes)
	{
		return null;
	}

	[Token(Token = "0x60006B9")]
	[Address(RVA = "0x821150", Offset = "0x821150", VA = "0x821150")]
	public static byte[] serializeBinary(object o)
	{
		return null;
	}

	[Token(Token = "0x60006BA")]
	[Address(RVA = "0x821214", Offset = "0x821214", VA = "0x821214")]
	public static bool saveXml(string _fileName, object data, XmlSerializer serializer)
	{
		return default(bool);
	}

	[Token(Token = "0x60006BB")]
	[Address(RVA = "0x8212B4", Offset = "0x8212B4", VA = "0x8212B4")]
	public static object loadXml_resource(string _resourceName, XmlSerializer serializer)
	{
		return null;
	}

	[Token(Token = "0x60006BC")]
	[Address(RVA = "0x821548", Offset = "0x821548", VA = "0x821548")]
	public static object loadXml(string _fileName, XmlSerializer serializer)
	{
		return null;
	}

	[Token(Token = "0x60006BD")]
	[Address(RVA = "0x821778", Offset = "0x821778", VA = "0x821778")]
	public static string removeNewlinesAndExtraSpaces(string _from)
	{
		return null;
	}

	[Token(Token = "0x60006BE")]
	[Address(RVA = "0x8218E0", Offset = "0x8218E0", VA = "0x8218E0")]
	public static bool hasExtension(string _path, string _ext)
	{
		return default(bool);
	}

	[Token(Token = "0x60006BF")]
	[Address(RVA = "0x8218FC", Offset = "0x8218FC", VA = "0x8218FC")]
	public static Color makeColor(int r, int g, int b)
	{
		return default(Color);
	}

	[Token(Token = "0x60006C0")]
	[Address(RVA = "0x82194C", Offset = "0x82194C", VA = "0x82194C")]
	public static void setGuiSize(GameObject go, Vector2 newSize)
	{
	}

	[Token(Token = "0x60006C1")]
	[Address(RVA = "0x8219F4", Offset = "0x8219F4", VA = "0x8219F4")]
	public static void setGuiSize(RectTransform trans, Vector2 newSize)
	{
	}

	[Token(Token = "0x60006C2")]
	[Address(RVA = "0x821B0C", Offset = "0x821B0C", VA = "0x821B0C")]
	public static void setGuiAreaTL(RectTransform rt, Vector2 r0, Vector2 r1, bool pixelBound = false)
	{
	}

	[Token(Token = "0x60006C3")]
	[Address(RVA = "0x821BB0", Offset = "0x821BB0", VA = "0x821BB0")]
	public static void setGuiText(MonoBehaviour mb, string text)
	{
	}

	[Token(Token = "0x60006C4")]
	[Address(RVA = "0x821C74", Offset = "0x821C74", VA = "0x821C74")]
	public static void setGuiText(RectTransform rt, string text)
	{
	}

	[Token(Token = "0x60006C5")]
	[Address(RVA = "0x821D44", Offset = "0x821D44", VA = "0x821D44")]
	public static void setGuiFontSize(MonoBehaviour mb, int size)
	{
	}

	[Token(Token = "0x60006C6")]
	[Address(RVA = "0x821E00", Offset = "0x821E00", VA = "0x821E00")]
	public static void setGuiFontSize(RectTransform rt, int size)
	{
	}

	[Token(Token = "0x60006C7")]
	[Address(RVA = "0x821EC8", Offset = "0x821EC8", VA = "0x821EC8")]
	public static void setGuiAreaTL(MonoBehaviour mb, Vector2 r0, Vector2 r1, bool pixelBound = false)
	{
	}

	[Token(Token = "0x60006C8")]
	[Address(RVA = "0x821F98", Offset = "0x821F98", VA = "0x821F98")]
	public static void setGuiAreaBL(RectTransform rt, Vector2 r0, Vector2 r1)
	{
	}

	[Token(Token = "0x60006C9")]
	[Address(RVA = "0x821FF8", Offset = "0x821FF8", VA = "0x821FF8")]
	public static void setGuiAreaBL(MonoBehaviour mo, Vector2 r0, Vector2 r1)
	{
	}

	[Token(Token = "0x60006CA")]
	[Address(RVA = "0x8220B8", Offset = "0x8220B8", VA = "0x8220B8")]
	public static void enableTree(GameObject root, bool _enable)
	{
	}

	[Token(Token = "0x60006CB")]
	[Address(RVA = "0x822378", Offset = "0x822378", VA = "0x822378")]
	public static string fixSlashes(string s)
	{
		return null;
	}

	[Token(Token = "0x60006CC")]
	[Address(RVA = "0x822398", Offset = "0x822398", VA = "0x822398")]
	public static void setUiFrameColors(GameObject b, string frontColor, string backColor)
	{
	}

	[Token(Token = "0x60006CD")]
	[Address(RVA = "0x8224AC", Offset = "0x8224AC", VA = "0x8224AC")]
	public static void setUiFrameColors(GameObject b, Color frontColor, Color backColor)
	{
	}

	[Token(Token = "0x60006CE")]
	[Address(RVA = "0x8226F4", Offset = "0x8226F4", VA = "0x8226F4")]
	public static string getEndPath(string _path)
	{
		return null;
	}

	[Token(Token = "0x60006CF")]
	[Address(RVA = "0x822790", Offset = "0x822790", VA = "0x822790")]
	public static string getFilePath(string _path)
	{
		return null;
	}

	[Token(Token = "0x60006D0")]
	[Address(RVA = "0x82287C", Offset = "0x82287C", VA = "0x82287C")]
	public static string getWorkFolder()
	{
		return null;
	}

	[Token(Token = "0x60006D1")]
	[Address(RVA = "0x8228CC", Offset = "0x8228CC", VA = "0x8228CC")]
	public static string startFolder()
	{
		return null;
	}

	[Token(Token = "0x60006D2")]
	[Address(RVA = "0x82291C", Offset = "0x82291C", VA = "0x82291C")]
	public static string setExtension(string _fileName, string _ext)
	{
		return null;
	}

	[Token(Token = "0x60006D3")]
	[Address(RVA = "0x8229C4", Offset = "0x8229C4", VA = "0x8229C4")]
	public static float getLoopFraction(int index, int count)
	{
		return default(float);
	}

	[Token(Token = "0x60006D4")]
	[Address(RVA = "0x8229E8", Offset = "0x8229E8", VA = "0x8229E8")]
	public static float getFraction(int top, int bot)
	{
		return default(float);
	}

	[Token(Token = "0x60006D5")]
	[Address(RVA = "0x8229F8", Offset = "0x8229F8", VA = "0x8229F8")]
	public static List<float> removeRepeat(List<float> _list)
	{
		return null;
	}
}
namespace PGMaths
{
	[Token(Token = "0x20000CC")]
	[AttributeAttribute(Name = "ObfuscationAttribute", RVA = "0x43EFB8", Offset = "0x43EFB8")]
	public struct BezHandle
	{
		[Token(Token = "0x40007D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Vector3 left;

		[Token(Token = "0x40007D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public Vector3 middle;

		[Token(Token = "0x40007D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector3 right;

		[Token(Token = "0x60006D7")]
		[Address(RVA = "0x402230", Offset = "0x402230", VA = "0x402230", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x60006D8")]
		[Address(RVA = "0x402238", Offset = "0x402238", VA = "0x402238")]
		public BezHandle(BezHandle a)
		{
		}
	}
	[Token(Token = "0x20000CD")]
	[AttributeAttribute(Name = "ObfuscationAttribute", RVA = "0x43EFEC", Offset = "0x43EFEC")]
	public class BezSegment
	{
		[Token(Token = "0x40007D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Vector3[] control;

		[Token(Token = "0x40007D6")]
		private const float dt = 0.01f;

		[Token(Token = "0x60006D9")]
		[Address(RVA = "0x921824", Offset = "0x921824", VA = "0x921824")]
		public float getRateChangeLength(float t)
		{
			return default(float);
		}

		[Token(Token = "0x60006DA")]
		[Address(RVA = "0x920500", Offset = "0x920500", VA = "0x920500")]
		public Vector3 getPosition(float t)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60006DB")]
		[Address(RVA = "0x9218B0", Offset = "0x9218B0", VA = "0x9218B0")]
		public float getPlaneDistance(float f, Vector3 p, Vector3 n)
		{
			return default(float);
		}

		[Token(Token = "0x60006DC")]
		[Address(RVA = "0x920378", Offset = "0x920378", VA = "0x920378")]
		public bool getPlaneIntercept(out float fraction, Vector3 p, Vector3 n, int accuracy)
		{
			return default(bool);
		}

		[Token(Token = "0x60006DD")]
		[Address(RVA = "0x9209EC", Offset = "0x9209EC", VA = "0x9209EC")]
		public float getLength(int accuracy)
		{
			return default(float);
		}

		[Token(Token = "0x60006DE")]
		[Address(RVA = "0x91FE1C", Offset = "0x91FE1C", VA = "0x91FE1C")]
		public BezSegment()
		{
		}
	}
	[Token(Token = "0x20000CE")]
	[AttributeAttribute(Name = "ObfuscationAttribute", RVA = "0x43F020", Offset = "0x43F020")]
	public class BezPathGroup
	{
		[Token(Token = "0x40007D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public List<BezPath> bezPathList;

		[Token(Token = "0x40007D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[XmlIgnore]
		private Dictionary<string, BezPath> dic;

		[Token(Token = "0x40007D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Type[] typeArray;

		[Token(Token = "0x60006DF")]
		[Address(RVA = "0x920C38", Offset = "0x920C38", VA = "0x920C38")]
		public void rejig()
		{
		}

		[Token(Token = "0x60006E0")]
		[Address(RVA = "0x920D4C", Offset = "0x920D4C", VA = "0x920D4C")]
		public BezPath getPath(string _name)
		{
			return null;
		}

		[Token(Token = "0x60006E1")]
		[Address(RVA = "0x920E48", Offset = "0x920E48", VA = "0x920E48")]
		public static void save(string _fileName, BezPathGroup _bezPathGroup)
		{
		}

		[Token(Token = "0x60006E2")]
		[Address(RVA = "0x920FA4", Offset = "0x920FA4", VA = "0x920FA4")]
		public static BezPathGroup loadResource(string _fileName)
		{
			return null;
		}

		[Token(Token = "0x60006E3")]
		[Address(RVA = "0x921358", Offset = "0x921358", VA = "0x921358")]
		public static BezPathGroup load(string _fileName)
		{
			return null;
		}

		[Token(Token = "0x60006E4")]
		[Address(RVA = "0x9216E0", Offset = "0x9216E0", VA = "0x9216E0")]
		public BezPathGroup()
		{
		}
	}
	[Token(Token = "0x20000CF")]
	[AttributeAttribute(Name = "ObfuscationAttribute", RVA = "0x43F054", Offset = "0x43F054")]
	public struct BezPathPosition
	{
		[Token(Token = "0x40007DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int iSegment;

		[Token(Token = "0x40007DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float fraction;

		[Token(Token = "0x40007DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Vector3 pos;
	}
	[Token(Token = "0x20000D0")]
	public class BezPath
	{
		[Token(Token = "0x40007DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string name;

		[Token(Token = "0x40007DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool loop;

		[Token(Token = "0x40007DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<BezHandle> bezHandleList;

		[Token(Token = "0x40007E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[XmlIgnore]
		private BezSegment segment;

		[Token(Token = "0x60006E6")]
		[Address(RVA = "0x91FD40", Offset = "0x91FD40", VA = "0x91FD40")]
		public BezPath()
		{
		}

		[Token(Token = "0x60006E7")]
		[Address(RVA = "0x91FE84", Offset = "0x91FE84", VA = "0x91FE84")]
		public BezPath(List<BezHandle> _bezHandleList, bool _loop)
		{
		}

		[Token(Token = "0x60006E8")]
		[Address(RVA = "0x91FF98", Offset = "0x91FF98", VA = "0x91FF98")]
		public XRange3 getRange()
		{
			return null;
		}

		[Token(Token = "0x60006E9")]
		[Address(RVA = "0x920108", Offset = "0x920108", VA = "0x920108")]
		public bool getPlaneIntercept(out Vector3 cross, Vector3 p, Vector3 n)
		{
			return default(bool);
		}

		[Token(Token = "0x60006EA")]
		[Address(RVA = "0x9205D4", Offset = "0x9205D4", VA = "0x9205D4")]
		public BezPathPosition getSegmentPosition(float _fraction)
		{
			return default(BezPathPosition);
		}

		[Token(Token = "0x60006EB")]
		[Address(RVA = "0x9207E0", Offset = "0x9207E0", VA = "0x9207E0")]
		public Vector3 getPosition(float _fraction)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60006EC")]
		[Address(RVA = "0x920808", Offset = "0x920808", VA = "0x920808")]
		public float getLength(int _accuracy)
		{
			return default(float);
		}

		[Token(Token = "0x60006ED")]
		[Address(RVA = "0x920B0C", Offset = "0x920B0C", VA = "0x920B0C")]
		internal void rejig()
		{
		}
	}
	[Token(Token = "0x20000D1")]
	public class XDice
	{
		[Token(Token = "0x40007E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private XRandom random;

		[Token(Token = "0x60006EE")]
		[Address(RVA = "0xE85AAC", Offset = "0xE85AAC", VA = "0xE85AAC")]
		public XDice(uint _seed)
		{
		}

		[Token(Token = "0x60006EF")]
		[Address(RVA = "0xE85B80", Offset = "0xE85B80", VA = "0xE85B80")]
		public float perturbation(float average, float variation)
		{
			return default(float);
		}

		[Token(Token = "0x60006F0")]
		[Address(RVA = "0xE85BE4", Offset = "0xE85BE4", VA = "0xE85BE4")]
		public float range(float _min, float _max)
		{
			return default(float);
		}

		[Token(Token = "0x60006F1")]
		[Address(RVA = "0xE85C54", Offset = "0xE85C54", VA = "0xE85C54")]
		public int range(int _min, int _max)
		{
			return default(int);
		}
	}
	[Serializable]
	[Token(Token = "0x20000D2")]
	public struct XIntVector2
	{
		[Token(Token = "0x40007E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int x;

		[Token(Token = "0x40007E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public int y;

		[Token(Token = "0x40007E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static XIntVector2 zero;

		[Token(Token = "0x60006F2")]
		[Address(RVA = "0x411090", Offset = "0x411090", VA = "0x411090")]
		public int getByIndex(int i)
		{
			return default(int);
		}

		[Token(Token = "0x60006F3")]
		[Address(RVA = "0x4110A8", Offset = "0x4110A8", VA = "0x4110A8")]
		public void setByIndex(int i, int value)
		{
		}

		[Token(Token = "0x60006F4")]
		[Address(RVA = "0x4110C0", Offset = "0x4110C0", VA = "0x4110C0")]
		public XIntVector2(int _x, int _y)
		{
		}

		[Token(Token = "0x60006F5")]
		[Address(RVA = "0x4110C8", Offset = "0x4110C8", VA = "0x4110C8")]
		public XIntVector2(Vector2 v)
		{
		}

		[Token(Token = "0x60006F6")]
		[Address(RVA = "0xE85FA8", Offset = "0xE85FA8", VA = "0xE85FA8")]
		public static XIntVector2 operator +(XIntVector2 a, XIntVector2 b)
		{
			return default(XIntVector2);
		}

		[Token(Token = "0x60006F7")]
		[Address(RVA = "0xE85F04", Offset = "0xE85F04", VA = "0xE85F04")]
		public static XIntVector2 operator -(XIntVector2 a, XIntVector2 b)
		{
			return default(XIntVector2);
		}

		[Token(Token = "0x60006F8")]
		[Address(RVA = "0xE86124", Offset = "0xE86124", VA = "0xE86124")]
		public static XIntVector2 operator *(XIntVector2 a, int scale)
		{
			return default(XIntVector2);
		}

		[Token(Token = "0x60006F9")]
		[Address(RVA = "0xE86138", Offset = "0xE86138", VA = "0xE86138")]
		public static XIntVector2 operator *(int scale, XIntVector2 a)
		{
			return default(XIntVector2);
		}

		[Token(Token = "0x60006FA")]
		[Address(RVA = "0xE85FC0", Offset = "0xE85FC0", VA = "0xE85FC0")]
		public static XIntVector2 operator /(XIntVector2 a, int divisor)
		{
			return default(XIntVector2);
		}

		[Token(Token = "0x60006FB")]
		[Address(RVA = "0x4110D8", Offset = "0x4110D8", VA = "0x4110D8")]
		internal bool isSame(XIntVector2 v)
		{
			return default(bool);
		}
	}
	[Serializable]
	[Token(Token = "0x20000D3")]
	public class XIntRange2
	{
		[Token(Token = "0x40007E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public XIntVector2 lo;

		[Token(Token = "0x40007E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public XIntVector2 hi;

		[Token(Token = "0x60006FD")]
		[Address(RVA = "0xE85CB0", Offset = "0xE85CB0", VA = "0xE85CB0")]
		public XIntRange2(XIntRange2 _range2)
		{
		}

		[Token(Token = "0x60006FE")]
		[Address(RVA = "0xE85CF0", Offset = "0xE85CF0", VA = "0xE85CF0")]
		public XIntRange2(XIntVector2 _lo, XIntVector2 _hi)
		{
		}

		[Token(Token = "0x60006FF")]
		[Address(RVA = "0xE85D28", Offset = "0xE85D28", VA = "0xE85D28")]
		public XIntRange2()
		{
		}

		[Token(Token = "0x6000700")]
		[Address(RVA = "0xE85D68", Offset = "0xE85D68", VA = "0xE85D68")]
		public bool overlap(XIntRange2 other)
		{
			return default(bool);
		}

		[Token(Token = "0x6000701")]
		[Address(RVA = "0xE85DC4", Offset = "0xE85DC4", VA = "0xE85DC4")]
		public bool contains(XIntVector2 v)
		{
			return default(bool);
		}

		[Token(Token = "0x6000702")]
		[Address(RVA = "0xE85D58", Offset = "0xE85D58", VA = "0xE85D58")]
		public void reset()
		{
		}

		[Token(Token = "0x6000703")]
		[Address(RVA = "0xE85E0C", Offset = "0xE85E0C", VA = "0xE85E0C")]
		public void update(XIntVector2 v)
		{
		}

		[Token(Token = "0x6000704")]
		[Address(RVA = "0xE85E90", Offset = "0xE85E90", VA = "0xE85E90")]
		public XIntVector2 getSize()
		{
			return default(XIntVector2);
		}

		[Token(Token = "0x6000705")]
		[Address(RVA = "0xE85F1C", Offset = "0xE85F1C", VA = "0xE85F1C")]
		public XIntVector2 getMiddle()
		{
			return default(XIntVector2);
		}

		[Token(Token = "0x6000706")]
		[Address(RVA = "0xE85FD4", Offset = "0xE85FD4", VA = "0xE85FD4")]
		public XIntVector2 clamp(XIntVector2 inVec)
		{
			return default(XIntVector2);
		}

		[Token(Token = "0x6000707")]
		[Address(RVA = "0xE86030", Offset = "0xE86030", VA = "0xE86030")]
		internal void update(XIntRange2 r)
		{
		}

		[Token(Token = "0x6000708")]
		[Address(RVA = "0xE86068", Offset = "0xE86068", VA = "0xE86068")]
		public bool isSame(XIntRange2 range)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20000D4")]
	public static class XMaths
	{
		[Token(Token = "0x2000288")]
		private class Index2D
		{
			[Token(Token = "0x4000F21")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int nRow;

			[Token(Token = "0x6000EDB")]
			[Address(RVA = "0x853680", Offset = "0x853680", VA = "0x853680")]
			public Index2D(int _nRow)
			{
			}

			[Token(Token = "0x6000EDC")]
			[Address(RVA = "0x8536AC", Offset = "0x8536AC", VA = "0x8536AC")]
			public int get(int ix, int iy)
			{
				return default(int);
			}
		}

		[Token(Token = "0x40007E7")]
		public const float msToKmh = 3.6f;

		[Token(Token = "0x40007E8")]
		public const float twoPi = (float)Math.PI * 2f;

		[Token(Token = "0x40007E9")]
		public const float halfPi = (float)Math.PI / 2f;

		[Token(Token = "0x40007EA")]
		public const float quarterPi = (float)Math.PI / 4f;

		[Token(Token = "0x40007EB")]
		public const float inchToMeter = 0.0254f;

		[Token(Token = "0x40007EC")]
		public const float feetToMeter = 0.3048f;

		[Token(Token = "0x40007ED")]
		public const float meterToInch = 39.37008f;

		[Token(Token = "0x40007EE")]
		private const int NSTEP = 10;

		[Token(Token = "0x40007EF")]
		private const float EPS = 1E-05f;

		[Token(Token = "0x6000709")]
		[Address(RVA = "0xE8619C", Offset = "0xE8619C", VA = "0xE8619C")]
		public static bool isPointInside(Vector2 testPoint, Vector2[] outline, int nOutline)
		{
			return default(bool);
		}

		[Token(Token = "0x600070A")]
		[Address(RVA = "0xE86280", Offset = "0xE86280", VA = "0xE86280")]
		public static bool isCircleInside(Vector2 center, float radius, Vector2[] outline, int nOutline)
		{
			return default(bool);
		}

		[Token(Token = "0x600070B")]
		[Address(RVA = "0xE86488", Offset = "0xE86488", VA = "0xE86488")]
		public static float randomValue(float average, float variation)
		{
			return default(float);
		}

		[Token(Token = "0x600070C")]
		[Address(RVA = "0xE864E8", Offset = "0xE864E8", VA = "0xE864E8")]
		public static void normalizeInPlace(ref Vector3 v)
		{
		}

		[Token(Token = "0x600070D")]
		[Address(RVA = "0xE8655C", Offset = "0xE8655C", VA = "0xE8655C")]
		public static Vector3 normalize(Vector3 v)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600070E")]
		[Address(RVA = "0xE865B8", Offset = "0xE865B8", VA = "0xE865B8")]
		public static Vector2 normalize(Vector2 v)
		{
			return default(Vector2);
		}

		[Token(Token = "0x600070F")]
		[Address(RVA = "0xE86608", Offset = "0xE86608", VA = "0xE86608")]
		public static bool getSegmentCross(out Vector2 ret, Vector2 a0, Vector2 a1, Vector2 q0, Vector2 q1)
		{
			return default(bool);
		}

		[Token(Token = "0x6000710")]
		[Address(RVA = "0xE867F0", Offset = "0xE867F0", VA = "0xE867F0")]
		public static bool getCross(out Vector2 res, Vector2 p0, Vector2 d0, Vector2 p1, Vector2 d1)
		{
			return default(bool);
		}

		[Token(Token = "0x6000711")]
		[Address(RVA = "0xE86758", Offset = "0xE86758", VA = "0xE86758")]
		public static bool getCross(out float len0, out float len1, Vector2 p0, Vector2 d0, Vector2 p1, Vector2 d1)
		{
			return default(bool);
		}

		[Token(Token = "0x6000712")]
		[Address(RVA = "0xE868CC", Offset = "0xE868CC", VA = "0xE868CC")]
		internal static Quaternion SetEulerAngles(Vector3 eulerAngles)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6000713")]
		[Address(RVA = "0xE868E8", Offset = "0xE868E8", VA = "0xE868E8")]
		public static float getLinePointDistance(Vector3 v, Vector3 lineStart, Vector3 lineDir)
		{
			return default(float);
		}

		[Token(Token = "0x6000714")]
		[Address(RVA = "0xE86980", Offset = "0xE86980", VA = "0xE86980")]
		internal static Vector3 ToEuler(Quaternion quat)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000715")]
		[Address(RVA = "0xE869AC", Offset = "0xE869AC", VA = "0xE869AC")]
		public static float getLineSegmentDistance(Vector3 seg0, Vector3 seg1, Vector3 lineStart, Vector3 lineDir)
		{
			return default(float);
		}

		[Token(Token = "0x6000716")]
		[Address(RVA = "0xE86A44", Offset = "0xE86A44", VA = "0xE86A44")]
		public static float getFractionAlongLine(Vector2 seg0, Vector2 seg1, Vector2 p)
		{
			return default(float);
		}

		[Token(Token = "0x6000717")]
		[Address(RVA = "0xE86374", Offset = "0xE86374", VA = "0xE86374")]
		public static float getLineSegmentPointDistance(out float distanceAlongLine, Vector2 seg0, Vector2 seg1, Vector2 p)
		{
			return default(float);
		}

		[Token(Token = "0x6000718")]
		[Address(RVA = "0xE86AD4", Offset = "0xE86AD4", VA = "0xE86AD4")]
		public static List<int> getPrimeFactors(int number)
		{
			return null;
		}

		[Token(Token = "0x6000719")]
		[Address(RVA = "0xE86BB8", Offset = "0xE86BB8", VA = "0xE86BB8")]
		public static int getCommonNumber(int a, int b)
		{
			return default(int);
		}

		[Token(Token = "0x600071A")]
		[Address(RVA = "0xE86DE8", Offset = "0xE86DE8", VA = "0xE86DE8")]
		public static Vector3 getPlaneCross(Ray ray, Vector3 planeP, Vector3 planeN)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600071B")]
		[Address(RVA = "0xE86EDC", Offset = "0xE86EDC", VA = "0xE86EDC")]
		public static Vector3 getLineToPointVector(Vector3 v, Ray ray)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600071C")]
		[Address(RVA = "0xE86F6C", Offset = "0xE86F6C", VA = "0xE86F6C")]
		public static float getNearestPoint(out Vector3 p, Ray ray, Vector3 v0, Vector3 v1)
		{
			return default(float);
		}

		[Token(Token = "0x600071D")]
		[Address(RVA = "0xE87084", Offset = "0xE87084", VA = "0xE87084")]
		public static bool lineFit(out float m, out float c, List<Vector2> points)
		{
			return default(bool);
		}

		[Token(Token = "0x600071E")]
		[Address(RVA = "0xE872D4", Offset = "0xE872D4", VA = "0xE872D4")]
		public static bool lineCross(out Vector2 res, Vector2 p0, Vector2 d0, Vector2 p1, Vector2 d1)
		{
			return default(bool);
		}

		[Token(Token = "0x600071F")]
		[Address(RVA = "0xE873B0", Offset = "0xE873B0", VA = "0xE873B0")]
		public static float getSegmentDistanceSq(Vector2 p, Vector2 a0, Vector2 a1)
		{
			return default(float);
		}

		[Token(Token = "0x6000720")]
		[Address(RVA = "0xE874A4", Offset = "0xE874A4", VA = "0xE874A4")]
		public static float getSegmentDistanceSq(out float distanceAlong, Vector2 p, Vector2 a0, Vector2 a1)
		{
			return default(float);
		}

		[Token(Token = "0x6000721")]
		[Address(RVA = "0xE875AC", Offset = "0xE875AC", VA = "0xE875AC")]
		public static bool segmentsCross(Vector2 a0, Vector2 a1, Vector2 b0, Vector2 b1)
		{
			return default(bool);
		}

		[Token(Token = "0x6000722")]
		[Address(RVA = "0xE87634", Offset = "0xE87634", VA = "0xE87634")]
		public static Vector3 mirror(Vector3 p, Vector3 mirrorP, Vector3 mirrorN)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000723")]
		[Address(RVA = "0xE8767C", Offset = "0xE8767C", VA = "0xE8767C")]
		public static Vector3 mirror_d(Vector3 p, Vector3 mirrorN)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000724")]
		[Address(RVA = "0xE876B8", Offset = "0xE876B8", VA = "0xE876B8")]
		public static float polynomial(float _x, float[] _terms)
		{
			return default(float);
		}

		[Token(Token = "0x6000725")]
		[Address(RVA = "0xE87730", Offset = "0xE87730", VA = "0xE87730")]
		public static int solveQuadratic(float[] sol, float a, float b, float c)
		{
			return default(int);
		}

		[Token(Token = "0x6000726")]
		[Address(RVA = "0xE8780C", Offset = "0xE8780C", VA = "0xE8780C")]
		public static float specialMod(float _value, float _mod)
		{
			return default(float);
		}

		[Token(Token = "0x6000727")]
		[Address(RVA = "0xE87850", Offset = "0xE87850", VA = "0xE87850")]
		public static float fixAngleDeg(float _angle)
		{
			return default(float);
		}

		[Token(Token = "0x6000728")]
		[Address(RVA = "0xE8785C", Offset = "0xE8785C", VA = "0xE8785C")]
		public static float fixAngleRad(float _angle)
		{
			return default(float);
		}

		[Token(Token = "0x6000729")]
		[Address(RVA = "0xE87868", Offset = "0xE87868", VA = "0xE87868")]
		public static Vector3 rotateAboutAxis(Vector3 _input, Vector3 _axis, float _angle)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600072A")]
		[Address(RVA = "0xE878EC", Offset = "0xE878EC", VA = "0xE878EC")]
		public static Vector3 rotateAboutAxis(Vector3 _input, Vector3 _axis, Vector3 _axisP, float _angle)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600072B")]
		[Address(RVA = "0xE87A6C", Offset = "0xE87A6C", VA = "0xE87A6C")]
		public static bool solveSimultaneous(float[] a, int n, float[] x)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20000D5")]
	public class XRandom
	{
		[Token(Token = "0x40007F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private uint seed;

		[Token(Token = "0x40007F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private uint a;

		[Token(Token = "0x40007F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private uint c;

		[Token(Token = "0x600072C")]
		[Address(RVA = "0xE8968C", Offset = "0xE8968C", VA = "0xE8968C")]
		public static void test()
		{
		}

		[Token(Token = "0x600072D")]
		[Address(RVA = "0xE898C0", Offset = "0xE898C0", VA = "0xE898C0")]
		public XRandom()
		{
		}

		[Token(Token = "0x600072E")]
		[Address(RVA = "0xE85B40", Offset = "0xE85B40", VA = "0xE85B40")]
		public XRandom(uint seed)
		{
		}

		[Token(Token = "0x600072F")]
		[Address(RVA = "0xE898DC", Offset = "0xE898DC", VA = "0xE898DC")]
		public void setSeed(uint _seed)
		{
		}

		[Token(Token = "0x6000730")]
		[Address(RVA = "0xE85C98", Offset = "0xE85C98", VA = "0xE85C98")]
		public int getInt()
		{
			return default(int);
		}

		[Token(Token = "0x6000731")]
		[Address(RVA = "0xE898E4", Offset = "0xE898E4", VA = "0xE898E4")]
		public uint getUint()
		{
			return default(uint);
		}

		[Token(Token = "0x6000732")]
		[Address(RVA = "0xE85C2C", Offset = "0xE85C2C", VA = "0xE85C2C")]
		public float getFrac()
		{
			return default(float);
		}

		[Token(Token = "0x6000733")]
		[Address(RVA = "0xE8988C", Offset = "0xE8988C", VA = "0xE8988C")]
		public float range(float low, float high)
		{
			return default(float);
		}
	}
	[Token(Token = "0x20000D6")]
	public struct XRange
	{
		[Token(Token = "0x40007F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float lo;

		[Token(Token = "0x40007F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float hi;

		[Token(Token = "0x40007F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static XRange invalid;

		[Token(Token = "0x6000734")]
		[Address(RVA = "0x411100", Offset = "0x411100", VA = "0x411100", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x6000735")]
		[Address(RVA = "0x411108", Offset = "0x411108", VA = "0x411108")]
		public XRange(float _lo, float _hi)
		{
		}

		[Token(Token = "0x6000736")]
		[Address(RVA = "0x411110", Offset = "0x411110", VA = "0x411110")]
		public float getSize()
		{
			return default(float);
		}

		[Token(Token = "0x6000737")]
		[Address(RVA = "0x41111C", Offset = "0x41111C", VA = "0x41111C")]
		public bool contains(float f)
		{
			return default(bool);
		}

		[Token(Token = "0x6000738")]
		[Address(RVA = "0x411140", Offset = "0x411140", VA = "0x411140")]
		public XRange sub(XRange other)
		{
			return default(XRange);
		}

		[Token(Token = "0x6000739")]
		[Address(RVA = "0x411148", Offset = "0x411148", VA = "0x411148")]
		public bool overlap(XRange other)
		{
			return default(bool);
		}

		[Token(Token = "0x600073A")]
		[Address(RVA = "0x41116C", Offset = "0x41116C", VA = "0x41116C")]
		public bool isValid()
		{
			return default(bool);
		}

		[Token(Token = "0x600073B")]
		[Address(RVA = "0x41117C", Offset = "0x41117C", VA = "0x41117C")]
		public XRange shift(float x)
		{
			return default(XRange);
		}
	}
	[Serializable]
	[Token(Token = "0x20000D7")]
	public class XRange2
	{
		[Token(Token = "0x40007F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Vector2 lo;

		[Token(Token = "0x40007F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector2 hi;

		[Token(Token = "0x600073D")]
		[Address(RVA = "0xE89B0C", Offset = "0xE89B0C", VA = "0xE89B0C")]
		public XRange2(XRange3 _range3)
		{
		}

		[Token(Token = "0x600073E")]
		[Address(RVA = "0xE89B4C", Offset = "0xE89B4C", VA = "0xE89B4C")]
		public XRange2(XRange2 _range2)
		{
		}

		[Token(Token = "0x600073F")]
		[Address(RVA = "0xE89B8C", Offset = "0xE89B8C", VA = "0xE89B8C")]
		public XRange2(Vector2 _lo, Vector2 _hi)
		{
		}

		[Token(Token = "0x6000740")]
		[Address(RVA = "0xE89BD8", Offset = "0xE89BD8", VA = "0xE89BD8")]
		public XRange2()
		{
		}

		[Token(Token = "0x6000741")]
		[Address(RVA = "0xE89C18", Offset = "0xE89C18", VA = "0xE89C18")]
		public bool overlap(XRange2 other)
		{
			return default(bool);
		}

		[Token(Token = "0x6000742")]
		[Address(RVA = "0xE89C74", Offset = "0xE89C74", VA = "0xE89C74")]
		public bool contains(Vector2 v)
		{
			return default(bool);
		}

		[Token(Token = "0x6000743")]
		[Address(RVA = "0xE89C08", Offset = "0xE89C08", VA = "0xE89C08")]
		public void reset()
		{
		}

		[Token(Token = "0x6000744")]
		[Address(RVA = "0xE89CB0", Offset = "0xE89CB0", VA = "0xE89CB0")]
		public void update(Vector2 v)
		{
		}

		[Token(Token = "0x6000745")]
		[Address(RVA = "0xE89D3C", Offset = "0xE89D3C", VA = "0xE89D3C")]
		public Vector2 getSize()
		{
			return default(Vector2);
		}

		[Token(Token = "0x6000746")]
		[Address(RVA = "0xE89D4C", Offset = "0xE89D4C", VA = "0xE89D4C")]
		public Vector2 getMiddle()
		{
			return default(Vector2);
		}

		[Token(Token = "0x6000747")]
		[Address(RVA = "0xE89D64", Offset = "0xE89D64", VA = "0xE89D64")]
		public Vector2 clamp(Vector2 inVec)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6000748")]
		[Address(RVA = "0xE89DBC", Offset = "0xE89DBC", VA = "0xE89DBC")]
		internal void update(XRange2 r)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20000D8")]
	public class XRange3
	{
		[Token(Token = "0x40007F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Vector3 lo;

		[Token(Token = "0x40007F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Vector3 hi;

		[Token(Token = "0x6000749")]
		[Address(RVA = "0xE89DF4", Offset = "0xE89DF4", VA = "0xE89DF4")]
		public XRange3(Vector3 _lo, Vector3 _hi)
		{
		}

		[Token(Token = "0x600074A")]
		[Address(RVA = "0xE89E54", Offset = "0xE89E54", VA = "0xE89E54")]
		public XRange3()
		{
		}

		[Token(Token = "0x600074B")]
		[Address(RVA = "0xE89EA4", Offset = "0xE89EA4", VA = "0xE89EA4")]
		public bool isInvalid()
		{
			return default(bool);
		}

		[Token(Token = "0x600074C")]
		[Address(RVA = "0xE89E8C", Offset = "0xE89E8C", VA = "0xE89E8C")]
		public void reset()
		{
		}

		[Token(Token = "0x600074D")]
		[Address(RVA = "0xE89EE0", Offset = "0xE89EE0", VA = "0xE89EE0")]
		public void update(Vector3 v)
		{
		}

		[Token(Token = "0x600074E")]
		[Address(RVA = "0xE89FA8", Offset = "0xE89FA8", VA = "0xE89FA8")]
		public void update(XRange3 r)
		{
		}

		[Token(Token = "0x600074F")]
		[Address(RVA = "0xE89FE8", Offset = "0xE89FE8", VA = "0xE89FE8")]
		public Vector3 getSize()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000750")]
		[Address(RVA = "0xE8A008", Offset = "0xE8A008", VA = "0xE8A008")]
		public Vector3 getMiddle()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000751")]
		[Address(RVA = "0xE8A038", Offset = "0xE8A038", VA = "0xE8A038")]
		public void scaleAboutMiddle(float scale)
		{
		}
	}
	[Token(Token = "0x20000D9")]
	public struct XRangeInt
	{
		[Token(Token = "0x40007FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int lo;

		[Token(Token = "0x40007FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public int hi;

		[Token(Token = "0x40007FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static XRangeInt invalid;

		[Token(Token = "0x6000752")]
		[Address(RVA = "0x411190", Offset = "0x411190", VA = "0x411190", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x6000753")]
		[Address(RVA = "0x411198", Offset = "0x411198", VA = "0x411198")]
		public XRangeInt(int _lo, int _hi)
		{
		}

		[Token(Token = "0x6000754")]
		[Address(RVA = "0x4111A0", Offset = "0x4111A0", VA = "0x4111A0")]
		public int clamp(int v)
		{
			return default(int);
		}

		[Token(Token = "0x6000755")]
		[Address(RVA = "0x4111B4", Offset = "0x4111B4", VA = "0x4111B4")]
		public int getSize()
		{
			return default(int);
		}

		[Token(Token = "0x6000756")]
		[Address(RVA = "0x4111C0", Offset = "0x4111C0", VA = "0x4111C0")]
		public bool contains(int f)
		{
			return default(bool);
		}

		[Token(Token = "0x6000757")]
		[Address(RVA = "0x4111E4", Offset = "0x4111E4", VA = "0x4111E4")]
		public bool overlap(XRangeInt other)
		{
			return default(bool);
		}

		[Token(Token = "0x6000758")]
		[Address(RVA = "0x41120C", Offset = "0x41120C", VA = "0x41120C")]
		public bool isValid()
		{
			return default(bool);
		}
	}
	[Serializable]
	[Token(Token = "0x20000DA")]
	public class XTransform
	{
		[Token(Token = "0x2000289")]
		public enum Rejig
		{
			[Token(Token = "0x4000F23")]
			xy,
			[Token(Token = "0x4000F24")]
			xz,
			[Token(Token = "0x4000F25")]
			yx,
			[Token(Token = "0x4000F26")]
			yz,
			[Token(Token = "0x4000F27")]
			zx,
			[Token(Token = "0x4000F28")]
			zy
		}

		[Token(Token = "0x40007FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Vector3 p;

		[Token(Token = "0x40007FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Vector3 y;

		[Token(Token = "0x40007FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Vector3 z;

		[Token(Token = "0x600075A")]
		[Address(RVA = "0xE8A1E4", Offset = "0xE8A1E4", VA = "0xE8A1E4")]
		public XTransform()
		{
		}

		[Token(Token = "0x600075B")]
		[Address(RVA = "0xE8A22C", Offset = "0xE8A22C", VA = "0xE8A22C")]
		public XTransform(Vector3 _p, Vector3 _y, Vector3 _z)
		{
		}

		[Token(Token = "0x600075C")]
		[Address(RVA = "0xE8A2CC", Offset = "0xE8A2CC", VA = "0xE8A2CC")]
		public XTransform(XTransform t)
		{
		}

		[Token(Token = "0x600075D")]
		[Address(RVA = "0xE8A354", Offset = "0xE8A354", VA = "0xE8A354", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x600075E")]
		[Address(RVA = "0xE8A5B0", Offset = "0xE8A5B0", VA = "0xE8A5B0")]
		public static bool sameOrientation(XTransform a, XTransform b, float tolerance)
		{
			return default(bool);
		}

		[Token(Token = "0x600075F")]
		[Address(RVA = "0xE8A62C", Offset = "0xE8A62C", VA = "0xE8A62C")]
		public Vector3 getAxis(int ax)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000760")]
		[Address(RVA = "0xE8A694", Offset = "0xE8A694", VA = "0xE8A694")]
		public Vector3 getX()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000761")]
		[Address(RVA = "0xE8A6A8", Offset = "0xE8A6A8", VA = "0xE8A6A8")]
		public void normalize()
		{
		}

		[Token(Token = "0x6000762")]
		[Address(RVA = "0xE8A714", Offset = "0xE8A714", VA = "0xE8A714")]
		public void fixY()
		{
		}

		[Token(Token = "0x6000763")]
		[Address(RVA = "0xE8A7A0", Offset = "0xE8A7A0", VA = "0xE8A7A0")]
		public void fixZ()
		{
		}

		[Token(Token = "0x6000764")]
		[Address(RVA = "0xE8A82C", Offset = "0xE8A82C", VA = "0xE8A82C")]
		public void copyTo(Transform t)
		{
		}

		[Token(Token = "0x6000765")]
		[Address(RVA = "0xE8A890", Offset = "0xE8A890", VA = "0xE8A890")]
		public void copyFrom(XTransform t)
		{
		}

		[Token(Token = "0x6000766")]
		[Address(RVA = "0xE8A8D4", Offset = "0xE8A8D4", VA = "0xE8A8D4")]
		public void copyFrom(Transform t)
		{
		}

		[Token(Token = "0x6000767")]
		[Address(RVA = "0xE8A938", Offset = "0xE8A938", VA = "0xE8A938")]
		public Vector3 localToWorld(Vector3 v)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000768")]
		[Address(RVA = "0xE8A9D8", Offset = "0xE8A9D8", VA = "0xE8A9D8")]
		public Vector3 localToWorld_d(Vector3 v)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000769")]
		[Address(RVA = "0xE8AA68", Offset = "0xE8AA68", VA = "0xE8AA68")]
		public XTransform localToWorld(XTransform tIn)
		{
			return null;
		}

		[Token(Token = "0x600076A")]
		[Address(RVA = "0xE8AB20", Offset = "0xE8AB20", VA = "0xE8AB20")]
		public XTransform worldToLocal(XTransform t)
		{
			return null;
		}

		[Token(Token = "0x600076B")]
		[Address(RVA = "0xE8AD18", Offset = "0xE8AD18", VA = "0xE8AD18")]
		public Ray worldToLocal(Ray r)
		{
			return default(Ray);
		}

		[Token(Token = "0x600076C")]
		[Address(RVA = "0xE8ADA0", Offset = "0xE8ADA0", VA = "0xE8ADA0")]
		public Ray localToWorld(Ray r)
		{
			return default(Ray);
		}

		[Token(Token = "0x600076D")]
		[Address(RVA = "0xE8AC80", Offset = "0xE8AC80", VA = "0xE8AC80")]
		public Vector3 worldToLocal_d(Vector3 v)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600076E")]
		[Address(RVA = "0xE8ABD8", Offset = "0xE8ABD8", VA = "0xE8ABD8")]
		public Vector3 worldToLocal(Vector3 v)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600076F")]
		[Address(RVA = "0xE8AE28", Offset = "0xE8AE28", VA = "0xE8AE28")]
		public void randomOrientation(XDice _dice)
		{
		}

		[Token(Token = "0x6000770")]
		[Address(RVA = "0xE8B0D8", Offset = "0xE8B0D8", VA = "0xE8B0D8")]
		public void rejig(Rejig _rejig)
		{
		}
	}
}
namespace XmlKeys
{
	[Serializable]
	[Token(Token = "0x20000DB")]
	public class DescItem
	{
		[Token(Token = "0x200028A")]
		public enum Type
		{
			[Token(Token = "0x4000F2A")]
			letters,
			[Token(Token = "0x4000F2B")]
			enter,
			[Token(Token = "0x4000F2C")]
			backspace,
			[Token(Token = "0x4000F2D")]
			shift,
			[Token(Token = "0x4000F2E")]
			unshift,
			[Token(Token = "0x4000F2F")]
			alt,
			[Token(Token = "0x4000F30")]
			language,
			[Token(Token = "0x4000F31")]
			space,
			[Token(Token = "0x4000F32")]
			abc
		}

		[Token(Token = "0x4000800")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "XmlAttributeAttribute", RVA = "0x440698", Offset = "0x440698")]
		public Type type;

		[Token(Token = "0x4000801")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "XmlAttributeAttribute", RVA = "0x4406A8", Offset = "0x4406A8")]
		public float width;

		[Token(Token = "0x4000802")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "XmlAttributeAttribute", RVA = "0x4406B8", Offset = "0x4406B8")]
		public string data;

		[Token(Token = "0x6000771")]
		[Address(RVA = "0x74B948", Offset = "0x74B948", VA = "0x74B948")]
		public DescItem()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20000DC")]
	public class DescRow
	{
		[Token(Token = "0x4000803")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "XmlElementAttribute", RVA = "0x4406C8", Offset = "0x4406C8")]
		public List<DescItem> items;

		[Token(Token = "0x6000772")]
		[Address(RVA = "0x74B8C4", Offset = "0x74B8C4", VA = "0x74B8C4")]
		public DescRow()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20000DD")]
	public class DescBoard
	{
		[Token(Token = "0x4000804")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "XmlElementAttribute", RVA = "0x440700", Offset = "0x440700")]
		public List<DescRow> rows;

		[Token(Token = "0x6000773")]
		[Address(RVA = "0x74B590", Offset = "0x74B590", VA = "0x74B590")]
		public DescBoard()
		{
		}

		[Token(Token = "0x6000774")]
		[Address(RVA = "0x74B614", Offset = "0x74B614", VA = "0x74B614")]
		public DescBoard(DescMiniBoard from)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20000DE")]
	public class DescMiniBoard
	{
		[Token(Token = "0x4000805")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "XmlAttributeAttribute", RVA = "0x440738", Offset = "0x440738")]
		public string key;

		[Token(Token = "0x4000806")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "XmlAttributeAttribute", RVA = "0x440748", Offset = "0x440748")]
		public string letters;

		[Token(Token = "0x6000775")]
		[Address(RVA = "0x74C36C", Offset = "0x74C36C", VA = "0x74C36C")]
		public DescMiniBoard()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20000DF")]
	public class DescKeyboard
	{
		[Token(Token = "0x200028B")]
		public enum TypeKeyboard
		{
			[Token(Token = "0x4000F34")]
			letters,
			[Token(Token = "0x4000F35")]
			lettersShifted,
			[Token(Token = "0x4000F36")]
			symbols
		}

		[Token(Token = "0x4000807")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string name;

		[Token(Token = "0x4000808")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public TypeKeyboard type;

		[Token(Token = "0x4000809")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public DescBoard main;

		[Token(Token = "0x400080A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "XmlElementAttribute", RVA = "0x440758", Offset = "0x440758")]
		public List<DescMiniBoard> miniBoards;

		[Token(Token = "0x400080B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static XmlSerializer serializer;

		[Token(Token = "0x6000776")]
		[Address(RVA = "0x74B95C", Offset = "0x74B95C", VA = "0x74B95C")]
		public DescKeyboard()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20000E0")]
	public class DescKeyboardConfig
	{
		[Token(Token = "0x400080C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string countryId;

		[Token(Token = "0x400080D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "XmlElementAttribute", RVA = "0x440790", Offset = "0x440790")]
		public List<string> keyboards;

		[Token(Token = "0x400080E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static XmlSerializer serializer;

		[Token(Token = "0x6000778")]
		[Address(RVA = "0x74BB0C", Offset = "0x74BB0C", VA = "0x74BB0C")]
		public static void test()
		{
		}

		[Token(Token = "0x6000779")]
		[Address(RVA = "0x74C2C4", Offset = "0x74C2C4", VA = "0x74C2C4")]
		public DescKeyboardConfig()
		{
		}
	}
}
namespace UserTable
{
	[Serializable]
	[Token(Token = "0x20000E1")]
	public class CTable
	{
		[Token(Token = "0x200028C")]
		public delegate void OnUndoEvent();

		[Token(Token = "0x200028D")]
		public struct Errors
		{
			[Token(Token = "0x4000F37")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public bool outlineBad;

			[Token(Token = "0x4000F38")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
			public bool ballsOverlap;

			[Token(Token = "0x4000F39")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2")]
			public bool ballsOffTable;

			[Token(Token = "0x4000F3A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3")]
			public bool ballsCrossHeadstring;

			[Token(Token = "0x4000F3B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public bool deeTooSmall;

			[Token(Token = "0x6000EE1")]
			[Address(RVA = "0x3FCA54", Offset = "0x3FCA54", VA = "0x3FCA54")]
			public bool hasErrors()
			{
				return default(bool);
			}

			[Token(Token = "0x6000EE2")]
			[Address(RVA = "0x3FCA8C", Offset = "0x3FCA8C", VA = "0x3FCA8C")]
			public string getAsString()
			{
				return null;
			}
		}

		[Serializable]
		[Token(Token = "0x200028E")]
		public class Rules
		{
			[Token(Token = "0x4000F3C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			protected static Vector2[] tempPos;

			[Token(Token = "0x6000EE3")]
			[Address(RVA = "0x85AFF8", Offset = "0x85AFF8", VA = "0x85AFF8", Slot = "4")]
			public virtual void serialize(BinaryWriter bw)
			{
			}

			[Token(Token = "0x6000EE4")]
			[Address(RVA = "0x85AFFC", Offset = "0x85AFFC", VA = "0x85AFFC", Slot = "5")]
			public virtual void deserialize(BinaryReader br)
			{
			}

			[Token(Token = "0x6000EE5")]
			[Address(RVA = "0x85B000", Offset = "0x85B000", VA = "0x85B000", Slot = "6")]
			public virtual Trans2D getDeeTrans()
			{
				return default(Trans2D);
			}

			[Token(Token = "0x6000EE6")]
			[Address(RVA = "0x85B010", Offset = "0x85B010", VA = "0x85B010", Slot = "7")]
			public virtual void setDeeTrans(Trans2D t)
			{
			}

			[Token(Token = "0x6000EE7")]
			[Address(RVA = "0x85B014", Offset = "0x85B014", VA = "0x85B014", Slot = "8")]
			public virtual Trans2D getPackTrans()
			{
				return default(Trans2D);
			}

			[Token(Token = "0x6000EE8")]
			[Address(RVA = "0x85B024", Offset = "0x85B024", VA = "0x85B024", Slot = "9")]
			public virtual void setPackTrans(Trans2D t)
			{
			}

			[Token(Token = "0x6000EE9")]
			[Address(RVA = "0x85B028", Offset = "0x85B028", VA = "0x85B028", Slot = "10")]
			public virtual int getBallCount()
			{
				return default(int);
			}

			[Token(Token = "0x6000EEA")]
			[Address(RVA = "0x85B030", Offset = "0x85B030", VA = "0x85B030", Slot = "11")]
			public virtual Vector2 getBallPosition(int i, float _radius)
			{
				return default(Vector2);
			}

			[Token(Token = "0x6000EEB")]
			[Address(RVA = "0x85B038", Offset = "0x85B038", VA = "0x85B038", Slot = "12")]
			public virtual Vector2 getBallPosition(BBallType _type, float _radius, int _index = 0)
			{
				return default(Vector2);
			}

			[Token(Token = "0x6000EEC")]
			[Address(RVA = "0x85B040", Offset = "0x85B040", VA = "0x85B040", Slot = "13")]
			public virtual BBallType getBallType(int _index)
			{
				return default(BBallType);
			}

			[Token(Token = "0x6000EED")]
			[Address(RVA = "0x85B048", Offset = "0x85B048", VA = "0x85B048", Slot = "14")]
			public virtual bool isInsidePack(Vector2 pos, float _radius)
			{
				return default(bool);
			}

			[Token(Token = "0x6000EEE")]
			[Address(RVA = "0x85B050", Offset = "0x85B050", VA = "0x85B050")]
			public bool insideTri(Vector2 pos, Vector2 v0, Vector2 v1, Vector2 v2)
			{
				return default(bool);
			}

			[Token(Token = "0x6000EEF")]
			[Address(RVA = "0x85B0E8", Offset = "0x85B0E8", VA = "0x85B0E8")]
			public Rules()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x200028F")]
		public class RulesSnooker : Rules
		{
			[Token(Token = "0x4000F3D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Vector2 blue;

			[Token(Token = "0x4000F3E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Vector2 black;

			[Token(Token = "0x4000F3F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Trans2D headString;

			[Token(Token = "0x4000F40")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public float deeRadius;

			[Token(Token = "0x4000F41")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Trans2D pack;

			[Token(Token = "0x4000F42")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private static int[] perimeterBalls;

			[Token(Token = "0x6000EF1")]
			[Address(RVA = "0x85BDC4", Offset = "0x85BDC4", VA = "0x85BDC4", Slot = "14")]
			public override bool isInsidePack(Vector2 pos, float _ballRadius)
			{
				return default(bool);
			}

			[Token(Token = "0x6000EF2")]
			[Address(RVA = "0x85BFFC", Offset = "0x85BFFC", VA = "0x85BFFC", Slot = "4")]
			public override void serialize(BinaryWriter bw)
			{
			}

			[Token(Token = "0x6000EF3")]
			[Address(RVA = "0x85C0D0", Offset = "0x85C0D0", VA = "0x85C0D0", Slot = "5")]
			public override void deserialize(BinaryReader br)
			{
			}

			[Token(Token = "0x6000EF4")]
			[Address(RVA = "0x85C198", Offset = "0x85C198", VA = "0x85C198", Slot = "6")]
			public override Trans2D getDeeTrans()
			{
				return default(Trans2D);
			}

			[Token(Token = "0x6000EF5")]
			[Address(RVA = "0x85C1A4", Offset = "0x85C1A4", VA = "0x85C1A4", Slot = "7")]
			public override void setDeeTrans(Trans2D t)
			{
			}

			[Token(Token = "0x6000EF6")]
			[Address(RVA = "0x85C1B0", Offset = "0x85C1B0", VA = "0x85C1B0", Slot = "8")]
			public override Trans2D getPackTrans()
			{
				return default(Trans2D);
			}

			[Token(Token = "0x6000EF7")]
			[Address(RVA = "0x85C1BC", Offset = "0x85C1BC", VA = "0x85C1BC", Slot = "9")]
			public override void setPackTrans(Trans2D t)
			{
			}

			[Token(Token = "0x6000EF8")]
			[Address(RVA = "0x85C1C8", Offset = "0x85C1C8", VA = "0x85C1C8", Slot = "10")]
			public override int getBallCount()
			{
				return default(int);
			}

			[Token(Token = "0x6000EF9")]
			[Address(RVA = "0x85C1D0", Offset = "0x85C1D0", VA = "0x85C1D0", Slot = "12")]
			public override Vector2 getBallPosition(BBallType _type, float _radius, int _index = 0)
			{
				return default(Vector2);
			}

			[Token(Token = "0x6000EFA")]
			[Address(RVA = "0x85C36C", Offset = "0x85C36C", VA = "0x85C36C", Slot = "11")]
			public override Vector2 getBallPosition(int i, float _radius)
			{
				return default(Vector2);
			}

			[Token(Token = "0x6000EFB")]
			[Address(RVA = "0x85C418", Offset = "0x85C418", VA = "0x85C418", Slot = "13")]
			public override BBallType getBallType(int _index)
			{
				return default(BBallType);
			}

			[Token(Token = "0x6000EFC")]
			[Address(RVA = "0x85C430", Offset = "0x85C430", VA = "0x85C430")]
			public RulesSnooker()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000290")]
		public class RulesPool : Rules
		{
			[Token(Token = "0x4000F43")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Trans2D headString;

			[Token(Token = "0x4000F44")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public Trans2D pack;

			[Token(Token = "0x4000F45")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private static int[] perimeterBalls;

			[Token(Token = "0x6000EFE")]
			[Address(RVA = "0x85B924", Offset = "0x85B924", VA = "0x85B924", Slot = "14")]
			public override bool isInsidePack(Vector2 pos, float _ballRadius)
			{
				return default(bool);
			}

			[Token(Token = "0x6000EFF")]
			[Address(RVA = "0x85BB60", Offset = "0x85BB60", VA = "0x85BB60", Slot = "4")]
			public override void serialize(BinaryWriter bw)
			{
			}

			[Token(Token = "0x6000F00")]
			[Address(RVA = "0x85BB98", Offset = "0x85BB98", VA = "0x85BB98", Slot = "5")]
			public override void deserialize(BinaryReader br)
			{
			}

			[Token(Token = "0x6000F01")]
			[Address(RVA = "0x85BBD0", Offset = "0x85BBD0", VA = "0x85BBD0", Slot = "6")]
			public override Trans2D getDeeTrans()
			{
				return default(Trans2D);
			}

			[Token(Token = "0x6000F02")]
			[Address(RVA = "0x85BBDC", Offset = "0x85BBDC", VA = "0x85BBDC", Slot = "7")]
			public override void setDeeTrans(Trans2D t)
			{
			}

			[Token(Token = "0x6000F03")]
			[Address(RVA = "0x85BBE8", Offset = "0x85BBE8", VA = "0x85BBE8", Slot = "8")]
			public override Trans2D getPackTrans()
			{
				return default(Trans2D);
			}

			[Token(Token = "0x6000F04")]
			[Address(RVA = "0x85BBF4", Offset = "0x85BBF4", VA = "0x85BBF4", Slot = "9")]
			public override void setPackTrans(Trans2D t)
			{
			}

			[Token(Token = "0x6000F05")]
			[Address(RVA = "0x85BC00", Offset = "0x85BC00", VA = "0x85BC00", Slot = "10")]
			public override int getBallCount()
			{
				return default(int);
			}

			[Token(Token = "0x6000F06")]
			[Address(RVA = "0x85BC08", Offset = "0x85BC08", VA = "0x85BC08", Slot = "11")]
			public override Vector2 getBallPosition(int i, float _radius)
			{
				return default(Vector2);
			}

			[Token(Token = "0x6000F07")]
			[Address(RVA = "0x85BC1C", Offset = "0x85BC1C", VA = "0x85BC1C", Slot = "12")]
			public override Vector2 getBallPosition(BBallType _type, float _radius, int _index = 0)
			{
				return default(Vector2);
			}

			[Token(Token = "0x6000F08")]
			[Address(RVA = "0x85BCC4", Offset = "0x85BCC4", VA = "0x85BCC4", Slot = "13")]
			public override BBallType getBallType(int _index)
			{
				return default(BBallType);
			}

			[Token(Token = "0x6000F09")]
			[Address(RVA = "0x85BCCC", Offset = "0x85BCCC", VA = "0x85BCCC")]
			public RulesPool()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000291")]
		public class RulesNineBall : Rules
		{
			[Token(Token = "0x4000F46")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Trans2D headString;

			[Token(Token = "0x4000F47")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public Trans2D pack;

			[Token(Token = "0x4000F48")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private static int[] perimeterBalls;

			[Token(Token = "0x4000F49")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			private static BBallType[] ballTypes;

			[Token(Token = "0x4000F4A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private static int[] packPositions;

			[Token(Token = "0x6000F0B")]
			[Address(RVA = "0x85B164", Offset = "0x85B164", VA = "0x85B164", Slot = "14")]
			public override bool isInsidePack(Vector2 pos, float _ballRadius)
			{
				return default(bool);
			}

			[Token(Token = "0x6000F0C")]
			[Address(RVA = "0x85B438", Offset = "0x85B438", VA = "0x85B438", Slot = "4")]
			public override void serialize(BinaryWriter bw)
			{
			}

			[Token(Token = "0x6000F0D")]
			[Address(RVA = "0x85B470", Offset = "0x85B470", VA = "0x85B470", Slot = "5")]
			public override void deserialize(BinaryReader br)
			{
			}

			[Token(Token = "0x6000F0E")]
			[Address(RVA = "0x85B4A8", Offset = "0x85B4A8", VA = "0x85B4A8", Slot = "6")]
			public override Trans2D getDeeTrans()
			{
				return default(Trans2D);
			}

			[Token(Token = "0x6000F0F")]
			[Address(RVA = "0x85B4B4", Offset = "0x85B4B4", VA = "0x85B4B4", Slot = "7")]
			public override void setDeeTrans(Trans2D t)
			{
			}

			[Token(Token = "0x6000F10")]
			[Address(RVA = "0x85B4C0", Offset = "0x85B4C0", VA = "0x85B4C0", Slot = "8")]
			public override Trans2D getPackTrans()
			{
				return default(Trans2D);
			}

			[Token(Token = "0x6000F11")]
			[Address(RVA = "0x85B4CC", Offset = "0x85B4CC", VA = "0x85B4CC", Slot = "9")]
			public override void setPackTrans(Trans2D t)
			{
			}

			[Token(Token = "0x6000F12")]
			[Address(RVA = "0x85B4D8", Offset = "0x85B4D8", VA = "0x85B4D8", Slot = "10")]
			public override int getBallCount()
			{
				return default(int);
			}

			[Token(Token = "0x6000F13")]
			[Address(RVA = "0x85B4E0", Offset = "0x85B4E0", VA = "0x85B4E0", Slot = "11")]
			public override Vector2 getBallPosition(int i, float _radius)
			{
				return default(Vector2);
			}

			[Token(Token = "0x6000F14")]
			[Address(RVA = "0x85B59C", Offset = "0x85B59C", VA = "0x85B59C", Slot = "13")]
			public override BBallType getBallType(int _index)
			{
				return default(BBallType);
			}

			[Token(Token = "0x6000F15")]
			[Address(RVA = "0x85B62C", Offset = "0x85B62C", VA = "0x85B62C", Slot = "12")]
			public override Vector2 getBallPosition(BBallType _type, float _radius, int _index = 0)
			{
				return default(Vector2);
			}

			[Token(Token = "0x6000F16")]
			[Address(RVA = "0x85B788", Offset = "0x85B788", VA = "0x85B788")]
			public RulesNineBall()
			{
			}
		}

		[Token(Token = "0x2000292")]
		public enum Item
		{
			[Token(Token = "0x4000F4C")]
			none,
			[Token(Token = "0x4000F4D")]
			blueBall,
			[Token(Token = "0x4000F4E")]
			blackBall,
			[Token(Token = "0x4000F4F")]
			vertices,
			[Token(Token = "0x4000F50")]
			pyramid,
			[Token(Token = "0x4000F51")]
			dee
		}

		[Token(Token = "0x400080F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int version;

		[Token(Token = "0x4000810")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string name;

		[Token(Token = "0x4000811")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<CVertex> vertices;

		[Token(Token = "0x4000812")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float ballRadius;

		[Token(Token = "0x4000813")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float shootSpeed;

		[Token(Token = "0x4000814")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public RulesSnooker snooker;

		[Token(Token = "0x4000815")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public RulesPool pool;

		[Token(Token = "0x4000816")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public RulesNineBall nineBall;

		[Token(Token = "0x4000817")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Item item;

		[Token(Token = "0x4000818")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public int selectionIndex;

		[Token(Token = "0x4000819")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public int rules;

		[Token(Token = "0x400081A")]
		public const float maxSize = 4f;

		[Token(Token = "0x400081B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static CTable current;

		[Token(Token = "0x400081C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private bool edited;

		[Token(Token = "0x400081D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Vector2[] tempVertices;

		[Token(Token = "0x400081E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Vector2[] tempBallPos;

		[Token(Token = "0x400081F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static XmlSerializer serializer;

		[Token(Token = "0x4000820")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static List<byte[]> undoList;

		[Token(Token = "0x4000821")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static int iNextUndo;

		[Token(Token = "0x4000822")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private static State state;

		[Token(Token = "0x4000823")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static OnUndoEvent onUndoAdd;

		[Token(Token = "0x4000824")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static OnUndoEvent onUndoRedo;

		[Token(Token = "0x4000825")]
		private const float cos30 = 0.8660254f;

		[Token(Token = "0x4000826")]
		private const float sin30 = 0.5f;

		[Token(Token = "0x4000827")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private static Vector2[] packPositions;

		[Token(Token = "0x600077B")]
		[Address(RVA = "0x924BC0", Offset = "0x924BC0", VA = "0x924BC0")]
		public static Vector2 getPackPosition(int _index, Trans2D trans, float ballRadius)
		{
			return default(Vector2);
		}

		[Token(Token = "0x600077C")]
		[Address(RVA = "0x924CB0", Offset = "0x924CB0", VA = "0x924CB0")]
		public Errors getErrors(int _rules)
		{
			return default(Errors);
		}

		[Token(Token = "0x600077D")]
		[Address(RVA = "0x925474", Offset = "0x925474", VA = "0x925474")]
		public static void undoReset()
		{
		}

		[Token(Token = "0x600077E")]
		[Address(RVA = "0x925510", Offset = "0x925510", VA = "0x925510")]
		public bool hasEdited()
		{
			return default(bool);
		}

		[Token(Token = "0x600077F")]
		[Address(RVA = "0x925580", Offset = "0x925580", VA = "0x925580")]
		public static void clearEdited()
		{
		}

		[Token(Token = "0x6000780")]
		[Address(RVA = "0x9255F0", Offset = "0x9255F0", VA = "0x9255F0")]
		public static void undoSetAddCallback(OnUndoEvent _addEvent)
		{
		}

		[Token(Token = "0x6000781")]
		[Address(RVA = "0x92565C", Offset = "0x92565C", VA = "0x92565C")]
		public static void undoSetUndoRedoCallback(OnUndoEvent _redoEvent)
		{
		}

		[Token(Token = "0x6000782")]
		[Address(RVA = "0x9256C8", Offset = "0x9256C8", VA = "0x9256C8")]
		public static void undoAdd()
		{
		}

		[Token(Token = "0x6000783")]
		[Address(RVA = "0x925984", Offset = "0x925984", VA = "0x925984")]
		public static bool undoCanUndo()
		{
			return default(bool);
		}

		[Token(Token = "0x6000784")]
		[Address(RVA = "0x925A3C", Offset = "0x925A3C", VA = "0x925A3C")]
		public static void undoUndo()
		{
		}

		[Token(Token = "0x6000785")]
		[Address(RVA = "0x92607C", Offset = "0x92607C", VA = "0x92607C")]
		public static bool undoCanRedo()
		{
			return default(bool);
		}

		[Token(Token = "0x6000786")]
		[Address(RVA = "0x926198", Offset = "0x926198", VA = "0x926198")]
		public static void undoRedo()
		{
		}

		[Token(Token = "0x6000787")]
		[Address(RVA = "0x9264D0", Offset = "0x9264D0", VA = "0x9264D0")]
		private static void serialize(BinaryWriter bw, Vector2 v)
		{
		}

		[Token(Token = "0x6000788")]
		[Address(RVA = "0x926524", Offset = "0x926524", VA = "0x926524")]
		private static void deserialize(BinaryReader br, out Vector2 v)
		{
		}

		[Token(Token = "0x6000789")]
		[Address(RVA = "0x9258D4", Offset = "0x9258D4", VA = "0x9258D4")]
		private byte[] getAsByteArray()
		{
			return null;
		}

		[Token(Token = "0x600078A")]
		[Address(RVA = "0x925FE0", Offset = "0x925FE0", VA = "0x925FE0")]
		private void getFromByteArray(byte[] bytes)
		{
		}

		[Token(Token = "0x600078B")]
		[Address(RVA = "0x926578", Offset = "0x926578", VA = "0x926578")]
		public void serialize(BinaryWriter bw)
		{
		}

		[Token(Token = "0x600078C")]
		[Address(RVA = "0x9267BC", Offset = "0x9267BC", VA = "0x9267BC")]
		public void deserialize(BinaryReader br)
		{
		}

		[Token(Token = "0x600078D")]
		[Address(RVA = "0x926A90", Offset = "0x926A90", VA = "0x926A90")]
		public Measurements getMeasurements()
		{
			return null;
		}

		[Token(Token = "0x600078E")]
		[Address(RVA = "0x926B34", Offset = "0x926B34", VA = "0x926B34")]
		public Corner getCorner(int i)
		{
			return null;
		}

		[Token(Token = "0x600078F")]
		[Address(RVA = "0x9276C0", Offset = "0x9276C0", VA = "0x9276C0")]
		public Trans2DMat getTrans(int i)
		{
			return default(Trans2DMat);
		}

		[Token(Token = "0x6000790")]
		[Address(RVA = "0x926CCC", Offset = "0x926CCC", VA = "0x926CCC")]
		public Vector2 getFacing(int i)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6000791")]
		[Address(RVA = "0x925E3C", Offset = "0x925E3C", VA = "0x925E3C")]
		public CTable()
		{
		}

		[Token(Token = "0x6000792")]
		[Address(RVA = "0x92776C", Offset = "0x92776C", VA = "0x92776C")]
		public CVertex getVertex()
		{
			return null;
		}

		[Token(Token = "0x6000793")]
		[Address(RVA = "0x9277F8", Offset = "0x9277F8", VA = "0x9277F8")]
		public void saveFile(string fileName)
		{
		}

		[Token(Token = "0x6000794")]
		[Address(RVA = "0x927900", Offset = "0x927900", VA = "0x927900")]
		public static CTable loadFile(string fileName)
		{
			return null;
		}

		[Token(Token = "0x6000795")]
		[Address(RVA = "0x927A3C", Offset = "0x927A3C", VA = "0x927A3C")]
		public static CTable loadResource(string fileName)
		{
			return null;
		}

		[Token(Token = "0x6000796")]
		[Address(RVA = "0x927B24", Offset = "0x927B24", VA = "0x927B24")]
		public static int getTemplateCount()
		{
			return default(int);
		}

		[Token(Token = "0x6000797")]
		[Address(RVA = "0x927B2C", Offset = "0x927B2C", VA = "0x927B2C")]
		public static CTable makeTemplate(int _index = 0)
		{
			return null;
		}

		[Token(Token = "0x6000798")]
		[Address(RVA = "0x92814C", Offset = "0x92814C", VA = "0x92814C")]
		public static CTable makeC(string _name, float w, float size, float radius, float shootSpeed)
		{
			return null;
		}

		[Token(Token = "0x6000799")]
		[Address(RVA = "0x927D24", Offset = "0x927D24", VA = "0x927D24")]
		public static CTable makeRectangle(string _name, float w, float h, float radius, float shootSpeed)
		{
			return null;
		}

		[Token(Token = "0x600079A")]
		[Address(RVA = "0x925428", Offset = "0x925428", VA = "0x925428")]
		public Trans2D getDeeTrans()
		{
			return default(Trans2D);
		}

		[Token(Token = "0x600079B")]
		[Address(RVA = "0x925400", Offset = "0x925400", VA = "0x925400")]
		public Rules getRules(int _index)
		{
			return null;
		}

		[Token(Token = "0x600079C")]
		[Address(RVA = "0x92853C", Offset = "0x92853C", VA = "0x92853C")]
		public void setDeeTrans(Trans2D t)
		{
		}

		[Token(Token = "0x600079D")]
		[Address(RVA = "0x928588", Offset = "0x928588", VA = "0x928588")]
		public Trans2D getPackTrans()
		{
			return default(Trans2D);
		}

		[Token(Token = "0x600079E")]
		[Address(RVA = "0x9285D4", Offset = "0x9285D4", VA = "0x9285D4")]
		public void setPackTrans(Trans2D t)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20000E2")]
	public struct Trans2D
	{
		[Token(Token = "0x4000828")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Vector2 pos;

		[Token(Token = "0x4000829")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float angle;

		[Token(Token = "0x60007A0")]
		[Address(RVA = "0x3FC2D4", Offset = "0x3FC2D4", VA = "0x3FC2D4")]
		public void serialize(BinaryWriter bw)
		{
		}

		[Token(Token = "0x60007A1")]
		[Address(RVA = "0x3FC2DC", Offset = "0x3FC2DC", VA = "0x3FC2DC")]
		public void deserialize(BinaryReader bw)
		{
		}

		[Token(Token = "0x60007A2")]
		[Address(RVA = "0x3FC2E4", Offset = "0x3FC2E4", VA = "0x3FC2E4")]
		public void getAxis(out Vector2 x, out Vector2 y)
		{
		}
	}
	[Token(Token = "0x20000E3")]
	internal enum State
	{
		[Token(Token = "0x400082B")]
		undo,
		[Token(Token = "0x400082C")]
		redo,
		[Token(Token = "0x400082D")]
		edit
	}
	[Serializable]
	[Token(Token = "0x20000E4")]
	public class CVertex
	{
		[Token(Token = "0x2000293")]
		public enum Type
		{
			[Token(Token = "0x4000F53")]
			corner,
			[Token(Token = "0x4000F54")]
			pocket,
			[Token(Token = "0x4000F55")]
			count
		}

		[Token(Token = "0x400082E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Type type;

		[Token(Token = "0x400082F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public Vector2 pos;

		[Token(Token = "0x60007A3")]
		[Address(RVA = "0x926A10", Offset = "0x926A10", VA = "0x926A10")]
		public CVertex()
		{
		}

		[Token(Token = "0x60007A4")]
		[Address(RVA = "0x9269A4", Offset = "0x9269A4", VA = "0x9269A4")]
		public void serialize(BinaryWriter bw)
		{
		}

		[Token(Token = "0x60007A5")]
		[Address(RVA = "0x926A20", Offset = "0x926A20", VA = "0x926A20")]
		public void deserialize(BinaryReader br)
		{
		}

		[Token(Token = "0x60007A6")]
		[Address(RVA = "0x9284F4", Offset = "0x9284F4", VA = "0x9284F4")]
		public CVertex(float x, float y, Type _type = Type.corner)
		{
		}
	}
}
namespace ZMaths
{
	[Token(Token = "0x20000E5")]
	[AttributeAttribute(Name = "ObfuscationAttribute", RVA = "0x43F088", Offset = "0x43F088")]
	public class ZmBezHandle
	{
		[Token(Token = "0x4000830")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Vector3 left;

		[Token(Token = "0x4000831")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Vector3 middle;

		[Token(Token = "0x4000832")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Vector3 right;

		[Token(Token = "0x60007A7")]
		[Address(RVA = "0xE8B1A8", Offset = "0xE8B1A8", VA = "0xE8B1A8")]
		public ZmBezHandle()
		{
		}

		[Token(Token = "0x60007A8")]
		[Address(RVA = "0xE8B1B0", Offset = "0xE8B1B0", VA = "0xE8B1B0")]
		public ZmBezHandle(ZmBezHandle a)
		{
		}
	}
	[Token(Token = "0x20000E6")]
	[AttributeAttribute(Name = "ObfuscationAttribute", RVA = "0x43F0BC", Offset = "0x43F0BC")]
	public class ZmBezSegment
	{
		[Token(Token = "0x4000833")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Vector3[] control;

		[Token(Token = "0x60007A9")]
		[Address(RVA = "0xE8BAA0", Offset = "0xE8BAA0", VA = "0xE8BAA0")]
		public Vector3 getPosition(float t)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60007AA")]
		[Address(RVA = "0xE8CD98", Offset = "0xE8CD98", VA = "0xE8CD98")]
		public float getPlaneDistance(float f, Vector3 p, Vector3 n)
		{
			return default(float);
		}

		[Token(Token = "0x60007AB")]
		[Address(RVA = "0xE8B918", Offset = "0xE8B918", VA = "0xE8B918")]
		public bool getPlaneIntercept(out float fraction, Vector3 p, Vector3 n, int accuracy)
		{
			return default(bool);
		}

		[Token(Token = "0x60007AC")]
		[Address(RVA = "0xE8BF5C", Offset = "0xE8BF5C", VA = "0xE8BF5C")]
		public float getLength(int accuracy)
		{
			return default(float);
		}

		[Token(Token = "0x60007AD")]
		[Address(RVA = "0xE8B2EC", Offset = "0xE8B2EC", VA = "0xE8B2EC")]
		public ZmBezSegment()
		{
		}
	}
	[Token(Token = "0x20000E7")]
	[AttributeAttribute(Name = "ObfuscationAttribute", RVA = "0x43F0F0", Offset = "0x43F0F0")]
	public class ZmBezPathGroup
	{
		[Token(Token = "0x4000834")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public List<ZmBezPath> bezPathList;

		[Token(Token = "0x4000835")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[XmlIgnore]
		private Dictionary<string, ZmBezPath> dic;

		[Token(Token = "0x4000836")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Type[] typeArray;

		[Token(Token = "0x60007AE")]
		[Address(RVA = "0xE8C1AC", Offset = "0xE8C1AC", VA = "0xE8C1AC")]
		public void rejig()
		{
		}

		[Token(Token = "0x60007AF")]
		[Address(RVA = "0xE8C2C0", Offset = "0xE8C2C0", VA = "0xE8C2C0")]
		public ZmBezPath getPath(string _name)
		{
			return null;
		}

		[Token(Token = "0x60007B0")]
		[Address(RVA = "0xE8C3BC", Offset = "0xE8C3BC", VA = "0xE8C3BC")]
		public static void save(string _fileName, ZmBezPathGroup _bezPathGroup)
		{
		}

		[Token(Token = "0x60007B1")]
		[Address(RVA = "0xE8C518", Offset = "0xE8C518", VA = "0xE8C518")]
		public static ZmBezPathGroup loadResource(string _fileName)
		{
			return null;
		}

		[Token(Token = "0x60007B2")]
		[Address(RVA = "0xE8C8CC", Offset = "0xE8C8CC", VA = "0xE8C8CC")]
		public static ZmBezPathGroup load(string _fileName)
		{
			return null;
		}

		[Token(Token = "0x60007B3")]
		[Address(RVA = "0xE8CC54", Offset = "0xE8CC54", VA = "0xE8CC54")]
		public ZmBezPathGroup()
		{
		}
	}
	[Token(Token = "0x20000E8")]
	[AttributeAttribute(Name = "ObfuscationAttribute", RVA = "0x43F124", Offset = "0x43F124")]
	public class ZmBezPath
	{
		[Token(Token = "0x4000837")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string name;

		[Token(Token = "0x4000838")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool loop;

		[Token(Token = "0x4000839")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<ZmBezHandle> bezHandleList;

		[Token(Token = "0x400083A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[XmlIgnore]
		private ZmBezSegment segment;

		[Token(Token = "0x60007B5")]
		[Address(RVA = "0xE8B210", Offset = "0xE8B210", VA = "0xE8B210")]
		public ZmBezPath()
		{
		}

		[Token(Token = "0x60007B6")]
		[Address(RVA = "0xE8B354", Offset = "0xE8B354", VA = "0xE8B354")]
		public ZmBezPath(List<ZmBezHandle> _bezHandleList, bool _loop)
		{
		}

		[Token(Token = "0x60007B7")]
		[Address(RVA = "0xE8B468", Offset = "0xE8B468", VA = "0xE8B468")]
		public ZmRangeVector3 getRange()
		{
			return default(ZmRangeVector3);
		}

		[Token(Token = "0x60007B8")]
		[Address(RVA = "0xE8B698", Offset = "0xE8B698", VA = "0xE8B698")]
		public bool getPlaneIntercept(out Vector3 cross, Vector3 p, Vector3 n)
		{
			return default(bool);
		}

		[Token(Token = "0x60007B9")]
		[Address(RVA = "0xE8BB74", Offset = "0xE8BB74", VA = "0xE8BB74")]
		public Vector3 getPosition(float _fraction)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60007BA")]
		[Address(RVA = "0xE8BD70", Offset = "0xE8BD70", VA = "0xE8BD70")]
		public float getLength(int _accuracy)
		{
			return default(float);
		}

		[Token(Token = "0x60007BB")]
		[Address(RVA = "0xE8C07C", Offset = "0xE8C07C", VA = "0xE8C07C")]
		internal void rejig()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20000E9")]
	public class ZmBezierCompoundSpline
	{
		[Token(Token = "0x400083B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public List<ZmBezierSpline> parts;

		[Token(Token = "0x400083C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private List<float> partLengths;

		[Token(Token = "0x400083D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private List<Vector3> waypoints;

		[Token(Token = "0x400083E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float totalLength;

		[Token(Token = "0x60007BC")]
		[Address(RVA = "0xE8CDFC", Offset = "0xE8CDFC", VA = "0xE8CDFC")]
		public void setParts(List<ZmBezierSpline> _parts, int accuracy)
		{
		}

		[Token(Token = "0x60007BD")]
		[Address(RVA = "0xE8D240", Offset = "0xE8D240", VA = "0xE8D240")]
		public void getNearestPointXY(out float t, out float distance, Vector2 p)
		{
		}

		[Token(Token = "0x60007BE")]
		[Address(RVA = "0xE8D378", Offset = "0xE8D378", VA = "0xE8D378")]
		public ZmRangeVector3 getRange()
		{
			return default(ZmRangeVector3);
		}

		[Token(Token = "0x60007BF")]
		[Address(RVA = "0xE8D580", Offset = "0xE8D580", VA = "0xE8D580")]
		public Vector3 getDirection(float t)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60007C0")]
		[Address(RVA = "0xE8D810", Offset = "0xE8D810", VA = "0xE8D810")]
		public Vector3 getPosition(float t)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60007C1")]
		[Address(RVA = "0xE8D5C0", Offset = "0xE8D5C0", VA = "0xE8D5C0")]
		private void getSpline(out ZmBezierSpline s, out float subT, float t)
		{
		}

		[Token(Token = "0x60007C2")]
		[Address(RVA = "0xE8D850", Offset = "0xE8D850", VA = "0xE8D850")]
		public float getLength()
		{
			return default(float);
		}

		[Token(Token = "0x60007C3")]
		[Address(RVA = "0xE8D858", Offset = "0xE8D858", VA = "0xE8D858")]
		public ZmBezierCompoundSpline()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20000EA")]
	public class ZmBezierSpline
	{
		[Token(Token = "0x400083F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Vector3[] controls;

		[Token(Token = "0x60007C4")]
		[Address(RVA = "0xE8D928", Offset = "0xE8D928", VA = "0xE8D928")]
		public void setControls(Vector4[] _controls)
		{
		}

		[Token(Token = "0x60007C5")]
		[Address(RVA = "0xE8D4F4", Offset = "0xE8D4F4", VA = "0xE8D4F4")]
		public ZmRangeVector3 getRange()
		{
			return default(ZmRangeVector3);
		}

		[Token(Token = "0x60007C6")]
		[Address(RVA = "0xE8D78C", Offset = "0xE8D78C", VA = "0xE8D78C")]
		public Vector3 getDirection(float t)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60007C7")]
		[Address(RVA = "0xE8D16C", Offset = "0xE8D16C", VA = "0xE8D16C")]
		public Vector3 getPosition(float t)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60007C8")]
		[Address(RVA = "0xE8DA50", Offset = "0xE8DA50", VA = "0xE8DA50")]
		public float getLength(int accuracy)
		{
			return default(float);
		}

		[Token(Token = "0x60007C9")]
		[Address(RVA = "0xE8DB70", Offset = "0xE8DB70", VA = "0xE8DB70")]
		public ZmBezierSpline()
		{
		}
	}
	[Token(Token = "0x20000EB")]
	public class ZmChop
	{
		[Token(Token = "0x2000294")]
		public class Square
		{
			[Token(Token = "0x4000F56")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public List<ZmEdge> edges;

			[Token(Token = "0x6000F18")]
			[Address(RVA = "0x8536C0", Offset = "0x8536C0", VA = "0x8536C0")]
			public Square()
			{
			}
		}

		[Token(Token = "0x4000840")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Square[] squares;

		[Token(Token = "0x4000841")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ZmRangeInt2 fullRange;

		[Token(Token = "0x4000842")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public ZmInt2 sizeSquare;

		[Token(Token = "0x4000843")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public ZmInt2 squareCount;

		[Token(Token = "0x4000844")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private int ix0;

		[Token(Token = "0x4000845")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private int ix1;

		[Token(Token = "0x4000846")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private int iy0;

		[Token(Token = "0x4000847")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private int iy1;

		[Token(Token = "0x4000848")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private int ix;

		[Token(Token = "0x4000849")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private int iy;

		[Token(Token = "0x400084A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private int iEdge;

		[Token(Token = "0x400084B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private bool done;

		[Token(Token = "0x400084C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private int iteration;

		[Token(Token = "0x60007CA")]
		[Address(RVA = "0xE8DBD8", Offset = "0xE8DBD8", VA = "0xE8DBD8")]
		public void init(ZmMeshInt mesh, int gridSize)
		{
		}

		[Token(Token = "0x60007CB")]
		[Address(RVA = "0xE8E2E4", Offset = "0xE8E2E4", VA = "0xE8E2E4")]
		public void startEnum(ZmRangeInt2 _range)
		{
		}

		[Token(Token = "0x60007CC")]
		[Address(RVA = "0xE8E474", Offset = "0xE8E474", VA = "0xE8E474")]
		public bool nextEnum(ref ZmEdge edge)
		{
			return default(bool);
		}

		[Token(Token = "0x60007CD")]
		[Address(RVA = "0xE8E5FC", Offset = "0xE8E5FC", VA = "0xE8E5FC")]
		public ZmChop()
		{
		}
	}
	[Token(Token = "0x20000EC")]
	public class ZmDice
	{
		[Token(Token = "0x400084D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private System.Random random;

		[Token(Token = "0x60007CE")]
		[Address(RVA = "0xE8E604", Offset = "0xE8E604", VA = "0xE8E604")]
		public ZmDice(int _seed)
		{
		}

		[Token(Token = "0x60007CF")]
		[Address(RVA = "0xE8E684", Offset = "0xE8E684", VA = "0xE8E684")]
		public float range(float _min, float _max)
		{
			return default(float);
		}

		[Token(Token = "0x60007D0")]
		[Address(RVA = "0xE8E6CC", Offset = "0xE8E6CC", VA = "0xE8E6CC")]
		public int range(int _min, int _max)
		{
			return default(int);
		}
	}
	[Token(Token = "0x20000ED")]
	public class ZmEdge
	{
		[Token(Token = "0x400084E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int v0;

		[Token(Token = "0x400084F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int v1;

		[Token(Token = "0x4000850")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int f0;

		[Token(Token = "0x4000851")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int f1;

		[Token(Token = "0x4000852")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal int iteration;

		[Token(Token = "0x60007D1")]
		[Address(RVA = "0xE8E6F0", Offset = "0xE8E6F0", VA = "0xE8E6F0")]
		public ZmEdge()
		{
		}

		[Token(Token = "0x60007D2")]
		[Address(RVA = "0xE8E6F8", Offset = "0xE8E6F8", VA = "0xE8E6F8")]
		public ZmEdge(ZmEdge from)
		{
		}
	}
	[Token(Token = "0x20000EE")]
	public class ZmFracMaths
	{
		[Token(Token = "0x60007D3")]
		[Address(RVA = "0xE8E748", Offset = "0xE8E748", VA = "0xE8E748")]
		public static void test()
		{
		}

		[Token(Token = "0x60007D4")]
		[Address(RVA = "0xE8E81C", Offset = "0xE8E81C", VA = "0xE8E81C")]
		private static void test(Vector2 _a0, Vector2 _a1, Vector2 _b0, Vector2 _b1)
		{
		}

		[Token(Token = "0x60007D5")]
		[Address(RVA = "0xE8EEC8", Offset = "0xE8EEC8", VA = "0xE8EEC8")]
		public static bool getCross(ref ZmFraction2 crossing, ref ZmFraction aFraction, ref ZmFraction bFraction, ZmInt2 a0, ZmInt2 a1, ZmInt2 b0, ZmInt2 b1)
		{
			return default(bool);
		}

		[Token(Token = "0x60007D6")]
		[Address(RVA = "0xE8EBA0", Offset = "0xE8EBA0", VA = "0xE8EBA0")]
		public static bool getCross(ref ZmFraction2 crossing, ref ZmFraction aFraction, ref ZmFraction bFraction, ZmFraction2 a0, ZmFraction2 a1, ZmFraction2 b0, ZmFraction2 b1)
		{
			return default(bool);
		}

		[Token(Token = "0x60007D7")]
		[Address(RVA = "0xE8FA14", Offset = "0xE8FA14", VA = "0xE8FA14")]
		public ZmFracMaths()
		{
		}
	}
	[Token(Token = "0x20000EF")]
	public class ZmFraction
	{
		[Token(Token = "0x4000853")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public ZmInteger top;

		[Token(Token = "0x4000854")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ZmInteger bot;

		[Token(Token = "0x4000855")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ZmFraction zero;

		[Token(Token = "0x4000856")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static ZmFraction one;

		[Token(Token = "0x60007D8")]
		[Address(RVA = "0xE8FA1C", Offset = "0xE8FA1C", VA = "0xE8FA1C")]
		public static void test()
		{
		}

		[Token(Token = "0x60007D9")]
		[Address(RVA = "0xE8FCE0", Offset = "0xE8FCE0", VA = "0xE8FCE0", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x60007DA")]
		[Address(RVA = "0xE8FE4C", Offset = "0xE8FE4C", VA = "0xE8FE4C")]
		public int getSign()
		{
			return default(int);
		}

		[Token(Token = "0x60007DB")]
		[Address(RVA = "0xE8FE7C", Offset = "0xE8FE7C", VA = "0xE8FE7C")]
		public ZmFraction(float a)
		{
		}

		[Token(Token = "0x60007DC")]
		[Address(RVA = "0xE8EB98", Offset = "0xE8EB98", VA = "0xE8EB98")]
		public ZmFraction()
		{
		}

		[Token(Token = "0x60007DD")]
		[Address(RVA = "0xE90010", Offset = "0xE90010", VA = "0xE90010")]
		public ZmFraction(ZmFraction a)
		{
		}

		[Token(Token = "0x60007DE")]
		[Address(RVA = "0xE9027C", Offset = "0xE9027C", VA = "0xE9027C")]
		public ZmFraction init(int a)
		{
			return null;
		}

		[Token(Token = "0x60007DF")]
		[Address(RVA = "0xE8F19C", Offset = "0xE8F19C", VA = "0xE8F19C")]
		public ZmFraction(int _top, int _bot)
		{
		}

		[Token(Token = "0x60007E0")]
		[Address(RVA = "0xE8FC0C", Offset = "0xE8FC0C", VA = "0xE8FC0C")]
		public static ZmFraction init(long _top, long _bot)
		{
			return null;
		}

		[Token(Token = "0x60007E1")]
		[Address(RVA = "0xE8F760", Offset = "0xE8F760", VA = "0xE8F760")]
		public static ZmFraction operator *(ZmFraction a, ZmFraction b)
		{
			return null;
		}

		[Token(Token = "0x60007E2")]
		[Address(RVA = "0xE8F964", Offset = "0xE8F964", VA = "0xE8F964")]
		public static ZmFraction operator /(ZmFraction a, ZmFraction b)
		{
			return null;
		}

		[Token(Token = "0x60007E3")]
		[Address(RVA = "0xE90438", Offset = "0xE90438", VA = "0xE90438")]
		public static ZmFraction operator +(ZmFraction a, ZmFraction b)
		{
			return null;
		}

		[Token(Token = "0x60007E4")]
		[Address(RVA = "0xE8F6D0", Offset = "0xE8F6D0", VA = "0xE8F6D0")]
		public static ZmFraction operator -(ZmFraction a)
		{
			return null;
		}

		[Token(Token = "0x60007E5")]
		[Address(RVA = "0xE905F0", Offset = "0xE905F0", VA = "0xE905F0")]
		public static ZmFraction operator +(ZmFraction a)
		{
			return null;
		}

		[Token(Token = "0x60007E6")]
		[Address(RVA = "0xE8F810", Offset = "0xE8F810", VA = "0xE8F810")]
		public static ZmFraction operator -(ZmFraction a, ZmFraction b)
		{
			return null;
		}

		[Token(Token = "0x60007E7")]
		[Address(RVA = "0xE8F8E0", Offset = "0xE8F8E0", VA = "0xE8F8E0")]
		public static bool operator ==(ZmFraction a, ZmFraction b)
		{
			return default(bool);
		}

		[Token(Token = "0x60007E8")]
		[Address(RVA = "0xE90794", Offset = "0xE90794", VA = "0xE90794")]
		public static bool operator !=(ZmFraction a, ZmFraction b)
		{
			return default(bool);
		}

		[Token(Token = "0x60007E9")]
		[Address(RVA = "0xE8F2FC", Offset = "0xE8F2FC", VA = "0xE8F2FC")]
		public static bool operator >(ZmFraction a, ZmFraction b)
		{
			return default(bool);
		}

		[Token(Token = "0x60007EA")]
		[Address(RVA = "0xE8F248", Offset = "0xE8F248", VA = "0xE8F248")]
		public static bool operator <(ZmFraction a, ZmFraction b)
		{
			return default(bool);
		}

		[Token(Token = "0x60007EB")]
		[Address(RVA = "0xE90824", Offset = "0xE90824", VA = "0xE90824")]
		public static bool operator >=(ZmFraction a, ZmFraction b)
		{
			return default(bool);
		}

		[Token(Token = "0x60007EC")]
		[Address(RVA = "0xE908C4", Offset = "0xE908C4", VA = "0xE908C4")]
		public static bool operator <=(ZmFraction a, ZmFraction b)
		{
			return default(bool);
		}

		[Token(Token = "0x60007ED")]
		[Address(RVA = "0xE90960", Offset = "0xE90960", VA = "0xE90960", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}

		[Token(Token = "0x60007EE")]
		[Address(RVA = "0xE90968", Offset = "0xE90968", VA = "0xE90968", Slot = "0")]
		public override bool Equals(object obj)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20000F0")]
	public class ZmFraction2
	{
		[Token(Token = "0x4000857")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public ZmFraction x;

		[Token(Token = "0x4000858")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ZmFraction y;

		[Token(Token = "0x4000859")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ZmFraction2 zero;

		[Token(Token = "0x60007F0")]
		[Address(RVA = "0xE8F528", Offset = "0xE8F528", VA = "0xE8F528")]
		public static ZmFraction2 operator +(ZmFraction2 a, ZmFraction2 b)
		{
			return null;
		}

		[Token(Token = "0x60007F1")]
		[Address(RVA = "0xE8F3B4", Offset = "0xE8F3B4", VA = "0xE8F3B4")]
		public ZmFraction2(ZmInt2 v)
		{
		}

		[Token(Token = "0x60007F2")]
		[Address(RVA = "0xE90C40", Offset = "0xE90C40", VA = "0xE90C40")]
		public ZmFraction2(ZmFraction2 from)
		{
		}

		[Token(Token = "0x60007F3")]
		[Address(RVA = "0xE90CF8", Offset = "0xE90CF8", VA = "0xE90CF8", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x60007F4")]
		[Address(RVA = "0xE8EAFC", Offset = "0xE8EAFC", VA = "0xE8EAFC")]
		public ZmFraction2()
		{
		}

		[Token(Token = "0x60007F5")]
		[Address(RVA = "0xE90B94", Offset = "0xE90B94", VA = "0xE90B94")]
		public ZmFraction2(ZmFraction _x, ZmFraction _y)
		{
		}

		[Token(Token = "0x60007F6")]
		[Address(RVA = "0xE90D8C", Offset = "0xE90D8C", VA = "0xE90D8C")]
		public static ZmFraction2 operator *(ZmFraction s, ZmFraction2 b)
		{
			return null;
		}

		[Token(Token = "0x60007F7")]
		[Address(RVA = "0xE8F460", Offset = "0xE8F460", VA = "0xE8F460")]
		public static ZmFraction2 operator *(ZmFraction2 b, ZmFraction s)
		{
			return null;
		}

		[Token(Token = "0x60007F8")]
		[Address(RVA = "0xE8F5FC", Offset = "0xE8F5FC", VA = "0xE8F5FC")]
		public static ZmFraction2 operator -(ZmFraction2 a, ZmFraction2 b)
		{
			return null;
		}

		[Token(Token = "0x60007F9")]
		[Address(RVA = "0xE90E54", Offset = "0xE90E54", VA = "0xE90E54")]
		public static ZmFraction dot(ZmFraction2 a, ZmFraction2 b)
		{
			return null;
		}

		[Token(Token = "0x60007FA")]
		[Address(RVA = "0xE8EA50", Offset = "0xE8EA50", VA = "0xE8EA50")]
		public ZmFraction2(Vector2 a)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20000F1")]
	public struct ZmInt2
	{
		[Token(Token = "0x400085A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int x;

		[Token(Token = "0x400085B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public int y;

		[Token(Token = "0x400085C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ZmInt2 zero;

		[Token(Token = "0x60007FC")]
		[Address(RVA = "0xE90FA0", Offset = "0xE90FA0", VA = "0xE90FA0")]
		public static ZmInt2 operator +(ZmInt2 a, ZmInt2 b)
		{
			return default(ZmInt2);
		}

		[Token(Token = "0x60007FD")]
		[Address(RVA = "0x41121C", Offset = "0x41121C", VA = "0x41121C")]
		public int getByIndex(int i)
		{
			return default(int);
		}

		[Token(Token = "0x60007FE")]
		[Address(RVA = "0x411234", Offset = "0x411234", VA = "0x411234")]
		public void setByIndex(int i, int value)
		{
		}

		[Token(Token = "0x60007FF")]
		[Address(RVA = "0x41124C", Offset = "0x41124C", VA = "0x41124C", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x6000800")]
		[Address(RVA = "0x411254", Offset = "0x411254", VA = "0x411254")]
		public ZmInt2(int _x, int _y)
		{
		}

		[Token(Token = "0x6000801")]
		[Address(RVA = "0x41125C", Offset = "0x41125C", VA = "0x41125C")]
		public bool isSame(ZmInt2 other)
		{
			return default(bool);
		}

		[Token(Token = "0x6000802")]
		[Address(RVA = "0xE91078", Offset = "0xE91078", VA = "0xE91078")]
		public static ZmInt2 operator *(int s, ZmInt2 b)
		{
			return default(ZmInt2);
		}

		[Token(Token = "0x6000803")]
		[Address(RVA = "0xE91090", Offset = "0xE91090", VA = "0xE91090")]
		public static ZmInt2 operator *(ZmInt2 b, int s)
		{
			return default(ZmInt2);
		}

		[Token(Token = "0x6000804")]
		[Address(RVA = "0xE8E2A4", Offset = "0xE8E2A4", VA = "0xE8E2A4")]
		public static ZmInt2 operator /(ZmInt2 b, int s)
		{
			return default(ZmInt2);
		}

		[Token(Token = "0x6000805")]
		[Address(RVA = "0xE8E2CC", Offset = "0xE8E2CC", VA = "0xE8E2CC")]
		public static ZmInt2 operator -(ZmInt2 a, ZmInt2 b)
		{
			return default(ZmInt2);
		}

		[Token(Token = "0x6000806")]
		[Address(RVA = "0xE910A4", Offset = "0xE910A4", VA = "0xE910A4")]
		public static int dot(ZmInt2 a, ZmInt2 b)
		{
			return default(int);
		}

		[Token(Token = "0x6000807")]
		[Address(RVA = "0x411284", Offset = "0x411284", VA = "0x411284")]
		public ZmInt2(Vector2 a)
		{
		}
	}
	[Token(Token = "0x20000F2")]
	public class ZmInteger
	{
		[Token(Token = "0x400085D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int sign;

		[Token(Token = "0x400085E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<uint> digits;

		[Token(Token = "0x6000809")]
		[Address(RVA = "0xE91114", Offset = "0xE91114", VA = "0xE91114")]
		public static void test()
		{
		}

		[Token(Token = "0x600080A")]
		[Address(RVA = "0xE9124C", Offset = "0xE9124C", VA = "0xE9124C")]
		public void clearLeadingZeroes()
		{
		}

		[Token(Token = "0x600080B")]
		[Address(RVA = "0xE91320", Offset = "0xE91320", VA = "0xE91320")]
		public ZmInteger()
		{
		}

		[Token(Token = "0x600080C")]
		[Address(RVA = "0xE900C8", Offset = "0xE900C8", VA = "0xE900C8")]
		public ZmInteger(ZmInteger from)
		{
		}

		[Token(Token = "0x600080D")]
		[Address(RVA = "0xE8FF30", Offset = "0xE8FF30", VA = "0xE8FF30")]
		public ZmInteger(int v)
		{
		}

		[Token(Token = "0x600080E")]
		[Address(RVA = "0xE90348", Offset = "0xE90348", VA = "0xE90348")]
		public ZmInteger(long v)
		{
		}

		[Token(Token = "0x600080F")]
		[Address(RVA = "0xE8FD74", Offset = "0xE8FD74", VA = "0xE8FD74")]
		public double getDouble()
		{
			return default(double);
		}

		[Token(Token = "0x6000810")]
		[Address(RVA = "0xE913E4", Offset = "0xE913E4", VA = "0xE913E4", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x6000811")]
		[Address(RVA = "0xE91410", Offset = "0xE91410", VA = "0xE91410")]
		public void addToDigit(int ic, uint x)
		{
		}

		[Token(Token = "0x6000812")]
		[Address(RVA = "0xE915D0", Offset = "0xE915D0", VA = "0xE915D0")]
		public void subFromDigit(int ic, uint x)
		{
		}

		[Token(Token = "0x6000813")]
		[Address(RVA = "0xE91630", Offset = "0xE91630", VA = "0xE91630")]
		public static ZmInteger mul(ZmInteger a, ZmInteger b)
		{
			return null;
		}

		[Token(Token = "0x6000814")]
		[Address(RVA = "0xE9179C", Offset = "0xE9179C", VA = "0xE9179C")]
		public static ZmInteger addMag(ZmInteger a, ZmInteger b)
		{
			return null;
		}

		[Token(Token = "0x6000815")]
		[Address(RVA = "0xE91898", Offset = "0xE91898", VA = "0xE91898")]
		public static bool isSizeGreater(ZmInteger a, ZmInteger b)
		{
			return default(bool);
		}

		[Token(Token = "0x6000816")]
		[Address(RVA = "0xE91470", Offset = "0xE91470", VA = "0xE91470")]
		public uint getDigit(int i)
		{
			return default(uint);
		}

		[Token(Token = "0x6000817")]
		[Address(RVA = "0xE914FC", Offset = "0xE914FC", VA = "0xE914FC")]
		public void setDigit(int i, uint value)
		{
		}

		[Token(Token = "0x6000818")]
		[Address(RVA = "0xE91950", Offset = "0xE91950", VA = "0xE91950")]
		public static ZmInteger subMag(ZmInteger a, ZmInteger b)
		{
			return null;
		}

		[Token(Token = "0x6000819")]
		[Address(RVA = "0xE91A3C", Offset = "0xE91A3C", VA = "0xE91A3C")]
		public static bool sameSign(ZmInteger a, ZmInteger b)
		{
			return default(bool);
		}

		[Token(Token = "0x600081A")]
		[Address(RVA = "0xE90508", Offset = "0xE90508", VA = "0xE90508")]
		public static ZmInteger operator +(ZmInteger a, ZmInteger b)
		{
			return null;
		}

		[Token(Token = "0x600081B")]
		[Address(RVA = "0xE90580", Offset = "0xE90580", VA = "0xE90580")]
		public static ZmInteger operator -(ZmInteger a)
		{
			return null;
		}

		[Token(Token = "0x600081C")]
		[Address(RVA = "0xE905F4", Offset = "0xE905F4", VA = "0xE905F4")]
		public static ZmInteger operator -(ZmInteger a, ZmInteger b)
		{
			return null;
		}

		[Token(Token = "0x600081D")]
		[Address(RVA = "0xE90434", Offset = "0xE90434", VA = "0xE90434")]
		public static ZmInteger operator *(ZmInteger a, ZmInteger b)
		{
			return null;
		}

		[Token(Token = "0x600081E")]
		[Address(RVA = "0xE9066C", Offset = "0xE9066C", VA = "0xE9066C")]
		public bool isZero()
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20000F3")]
	public class ZmMeshFraction
	{
		[Token(Token = "0x2000295")]
		public class CrossData : IComparable<CrossData>
		{
			[Token(Token = "0x4000F57")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public ZmEdge edgea;

			[Token(Token = "0x4000F58")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public ZmEdge edgeb;

			[Token(Token = "0x4000F59")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ZmFraction fraction;

			[Token(Token = "0x4000F5A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public int ipt;

			[Token(Token = "0x6000F19")]
			[Address(RVA = "0x8537D8", Offset = "0x8537D8", VA = "0x8537D8", Slot = "4")]
			public int CompareTo(CrossData other)
			{
				return default(int);
			}

			[Token(Token = "0x6000F1A")]
			[Address(RVA = "0x8538A8", Offset = "0x8538A8", VA = "0x8538A8")]
			public CrossData()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000296")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x43F518", Offset = "0x43F518")]
		private sealed class <>c
		{
			[Token(Token = "0x4000F5B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4000F5C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Comparison<ZmEdge> <>9__5_0;

			[Token(Token = "0x6000F1C")]
			[Address(RVA = "0x8537A8", Offset = "0x8537A8", VA = "0x8537A8")]
			public <>c()
			{
			}

			[Token(Token = "0x6000F1D")]
			[Address(RVA = "0x8537B0", Offset = "0x8537B0", VA = "0x8537B0")]
			internal int <triangulate>b__5_0(ZmEdge a, ZmEdge b)
			{
				return default(int);
			}
		}

		[Token(Token = "0x400085F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public List<ZmFraction2> points;

		[Token(Token = "0x4000860")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<ZmEdge> edges;

		[Token(Token = "0x4000861")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static ZmChop chop;

		[Token(Token = "0x600081F")]
		[Address(RVA = "0xE91A6C", Offset = "0xE91A6C", VA = "0xE91A6C")]
		public ZmMeshFraction()
		{
		}

		[Token(Token = "0x6000820")]
		[Address(RVA = "0xE91B3C", Offset = "0xE91B3C", VA = "0xE91B3C")]
		public ZmMeshFraction(ZmMeshInt from)
		{
		}

		[Token(Token = "0x6000821")]
		[Address(RVA = "0xE91EB0", Offset = "0xE91EB0", VA = "0xE91EB0")]
		public static ZmMeshFraction triangulate(ZmMeshFraction from)
		{
			return null;
		}

		[Token(Token = "0x6000822")]
		[Address(RVA = "0xE923F8", Offset = "0xE923F8", VA = "0xE923F8")]
		public ZmMeshFraction(ZmMeshInt mLand, ZmMeshInt mRoad, int squareSize)
		{
		}

		[Token(Token = "0x6000823")]
		[Address(RVA = "0xE92E28", Offset = "0xE92E28", VA = "0xE92E28")]
		public static int getSide(ZmFraction2 a0, ZmFraction2 a1, ZmFraction2 c)
		{
			return default(int);
		}
	}
	[Token(Token = "0x20000F4")]
	public class ZmMeshInt
	{
		[Token(Token = "0x4000862")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public List<ZmInt2> points;

		[Token(Token = "0x4000863")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<ZmEdge> edges;

		[Token(Token = "0x6000825")]
		[Address(RVA = "0xE92F9C", Offset = "0xE92F9C", VA = "0xE92F9C")]
		public static ZmMeshInt makeGrid(int sizeSquare, int nSquare)
		{
			return null;
		}

		[Token(Token = "0x6000826")]
		[Address(RVA = "0xE932CC", Offset = "0xE932CC", VA = "0xE932CC")]
		public ZmMeshInt()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20000F5")]
	public struct ZmRangeFloat
	{
		[Token(Token = "0x4000864")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float lo;

		[Token(Token = "0x4000865")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float hi;

		[Token(Token = "0x6000827")]
		[Address(RVA = "0x411294", Offset = "0x411294", VA = "0x411294")]
		public ZmRangeFloat(float _lo, float _hi)
		{
		}

		[Token(Token = "0x6000828")]
		[Address(RVA = "0xE933A4", Offset = "0xE933A4", VA = "0xE933A4")]
		public static ZmRangeFloat init()
		{
			return default(ZmRangeFloat);
		}

		[Token(Token = "0x6000829")]
		[Address(RVA = "0x41129C", Offset = "0x41129C", VA = "0x41129C")]
		public float clamp(float v)
		{
			return default(float);
		}

		[Token(Token = "0x600082A")]
		[Address(RVA = "0x4112A8", Offset = "0x4112A8", VA = "0x4112A8")]
		public bool isInvalid()
		{
			return default(bool);
		}

		[Token(Token = "0x600082B")]
		[Address(RVA = "0x4112B8", Offset = "0x4112B8", VA = "0x4112B8")]
		public bool isValid()
		{
			return default(bool);
		}

		[Token(Token = "0x600082C")]
		[Address(RVA = "0x4112C8", Offset = "0x4112C8", VA = "0x4112C8")]
		public bool contains(float p)
		{
			return default(bool);
		}

		[Token(Token = "0x600082D")]
		[Address(RVA = "0x4112EC", Offset = "0x4112EC", VA = "0x4112EC")]
		public void reset()
		{
		}

		[Token(Token = "0x600082E")]
		[Address(RVA = "0x4112FC", Offset = "0x4112FC", VA = "0x4112FC")]
		public void add(List<float> list)
		{
		}

		[Token(Token = "0x600082F")]
		[Address(RVA = "0x411304", Offset = "0x411304", VA = "0x411304")]
		public void add(float[] list)
		{
		}

		[Token(Token = "0x6000830")]
		[Address(RVA = "0x41130C", Offset = "0x41130C", VA = "0x41130C")]
		public void add(float v)
		{
		}

		[Token(Token = "0x6000831")]
		[Address(RVA = "0x411364", Offset = "0x411364", VA = "0x411364")]
		public void add(ZmRangeFloat r)
		{
		}

		[Token(Token = "0x6000832")]
		[Address(RVA = "0x41136C", Offset = "0x41136C", VA = "0x41136C")]
		public float getSize()
		{
			return default(float);
		}

		[Token(Token = "0x6000833")]
		[Address(RVA = "0x411378", Offset = "0x411378", VA = "0x411378")]
		public float getMiddle()
		{
			return default(float);
		}

		[Token(Token = "0x6000834")]
		[Address(RVA = "0x41138C", Offset = "0x41138C", VA = "0x41138C")]
		public bool overlap(ZmRangeFloat r)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20000F6")]
	public class ZmRangeFraction2
	{
		[Token(Token = "0x4000866")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public ZmFraction2 lo;

		[Token(Token = "0x4000867")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ZmFraction2 hi;

		[Token(Token = "0x6000835")]
		[Address(RVA = "0xE9373C", Offset = "0xE9373C", VA = "0xE9373C")]
		public ZmRangeFraction2()
		{
		}
	}
	[Token(Token = "0x20000F7")]
	public struct ZmRangeInt2
	{
		[Token(Token = "0x4000868")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ZmInt2 lo;

		[Token(Token = "0x4000869")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public ZmInt2 hi;

		[Token(Token = "0x6000836")]
		[Address(RVA = "0x4113B0", Offset = "0x4113B0", VA = "0x4113B0")]
		public bool isSame(ZmRangeInt2 o)
		{
			return default(bool);
		}

		[Token(Token = "0x6000837")]
		[Address(RVA = "0xE8E2C0", Offset = "0xE8E2C0", VA = "0xE8E2C0")]
		public static ZmRangeInt2 init()
		{
			return default(ZmRangeInt2);
		}

		[Token(Token = "0x6000838")]
		[Address(RVA = "0x4113F4", Offset = "0x4113F4", VA = "0x4113F4")]
		public ZmRangeInt2(ZmInt2 _lo, ZmInt2 _hi)
		{
		}

		[Token(Token = "0x6000839")]
		[Address(RVA = "0x4113FC", Offset = "0x4113FC", VA = "0x4113FC")]
		public ZmRangeInt2(ZmRangeInt2 other)
		{
		}

		[Token(Token = "0x600083A")]
		[Address(RVA = "0x411404", Offset = "0x411404", VA = "0x411404")]
		public void reset()
		{
		}

		[Token(Token = "0x600083B")]
		[Address(RVA = "0x411414", Offset = "0x411414", VA = "0x411414")]
		public void add(ZmInt2 v)
		{
		}

		[Token(Token = "0x600083C")]
		[Address(RVA = "0x41141C", Offset = "0x41141C", VA = "0x41141C")]
		public ZmInt2 getSize()
		{
			return default(ZmInt2);
		}

		[Token(Token = "0x600083D")]
		[Address(RVA = "0x411424", Offset = "0x411424", VA = "0x411424")]
		public ZmInt2 getMiddle()
		{
			return default(ZmInt2);
		}

		[Token(Token = "0x600083E")]
		[Address(RVA = "0x41142C", Offset = "0x41142C", VA = "0x41142C")]
		internal bool contains(ZmInt2 v)
		{
			return default(bool);
		}
	}
	[Serializable]
	[Token(Token = "0x20000F8")]
	public struct ZmRangeVector2
	{
		[Token(Token = "0x400086A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Vector2 lo;

		[Token(Token = "0x400086B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Vector2 hi;

		[Token(Token = "0x600083F")]
		[Address(RVA = "0x41146C", Offset = "0x41146C", VA = "0x41146C", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x6000840")]
		[Address(RVA = "0x411474", Offset = "0x411474", VA = "0x411474")]
		public ZmRangeVector2(Rect r)
		{
		}

		[Token(Token = "0x6000841")]
		[Address(RVA = "0x41147C", Offset = "0x41147C", VA = "0x41147C")]
		public ZmRangeVector2(Vector2 _lo, Vector2 _hi)
		{
		}

		[Token(Token = "0x6000842")]
		[Address(RVA = "0xE93AF8", Offset = "0xE93AF8", VA = "0xE93AF8")]
		public static ZmRangeVector2 init()
		{
			return default(ZmRangeVector2);
		}

		[Token(Token = "0x6000843")]
		[Address(RVA = "0x411488", Offset = "0x411488", VA = "0x411488")]
		public bool isInvalid()
		{
			return default(bool);
		}

		[Token(Token = "0x6000844")]
		[Address(RVA = "0x4114B4", Offset = "0x4114B4", VA = "0x4114B4")]
		public bool isValid()
		{
			return default(bool);
		}

		[Token(Token = "0x6000845")]
		[Address(RVA = "0x4114E0", Offset = "0x4114E0", VA = "0x4114E0")]
		public bool contains(Vector2 p)
		{
			return default(bool);
		}

		[Token(Token = "0x6000846")]
		[Address(RVA = "0x41151C", Offset = "0x41151C", VA = "0x41151C")]
		public void reset()
		{
		}

		[Token(Token = "0x6000847")]
		[Address(RVA = "0x41152C", Offset = "0x41152C", VA = "0x41152C")]
		public void add(List<Vector2> list)
		{
		}

		[Token(Token = "0x6000848")]
		[Address(RVA = "0x411534", Offset = "0x411534", VA = "0x411534")]
		public void add(Vector2[] list)
		{
		}

		[Token(Token = "0x6000849")]
		[Address(RVA = "0x41153C", Offset = "0x41153C", VA = "0x41153C")]
		public void add(Vector2 v)
		{
		}

		[Token(Token = "0x600084A")]
		[Address(RVA = "0x411544", Offset = "0x411544", VA = "0x411544")]
		public void add(ZmRangeVector2 r)
		{
		}

		[Token(Token = "0x600084B")]
		[Address(RVA = "0x41154C", Offset = "0x41154C", VA = "0x41154C")]
		public Vector2 getSize()
		{
			return default(Vector2);
		}

		[Token(Token = "0x600084C")]
		[Address(RVA = "0x41155C", Offset = "0x41155C", VA = "0x41155C")]
		public Vector2 getMiddle()
		{
			return default(Vector2);
		}

		[Token(Token = "0x600084D")]
		[Address(RVA = "0x411574", Offset = "0x411574", VA = "0x411574")]
		public bool overlap(ZmRangeVector2 r)
		{
			return default(bool);
		}
	}
	[Serializable]
	[Token(Token = "0x20000F9")]
	public struct ZmRangeVector3
	{
		[Token(Token = "0x400086C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Vector3 lo;

		[Token(Token = "0x400086D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public Vector3 hi;

		[Token(Token = "0x600084E")]
		[Address(RVA = "0xE8B5B8", Offset = "0xE8B5B8", VA = "0xE8B5B8")]
		public static ZmRangeVector3 init()
		{
			return default(ZmRangeVector3);
		}

		[Token(Token = "0x600084F")]
		[Address(RVA = "0x4115B0", Offset = "0x4115B0", VA = "0x4115B0")]
		public bool isInvalid()
		{
			return default(bool);
		}

		[Token(Token = "0x6000850")]
		[Address(RVA = "0x4115EC", Offset = "0x4115EC", VA = "0x4115EC")]
		public void reset()
		{
		}

		[Token(Token = "0x6000851")]
		[Address(RVA = "0x411604", Offset = "0x411604", VA = "0x411604")]
		public void add(List<Vector3> list)
		{
		}

		[Token(Token = "0x6000852")]
		[Address(RVA = "0x41160C", Offset = "0x41160C", VA = "0x41160C")]
		public void add(Vector3[] list)
		{
		}

		[Token(Token = "0x6000853")]
		[Address(RVA = "0x411614", Offset = "0x411614", VA = "0x411614")]
		public void add(Vector3 v)
		{
		}

		[Token(Token = "0x6000854")]
		[Address(RVA = "0x41161C", Offset = "0x41161C", VA = "0x41161C")]
		public void add(ZmRangeVector3 r)
		{
		}

		[Token(Token = "0x6000855")]
		[Address(RVA = "0x411650", Offset = "0x411650", VA = "0x411650")]
		public Vector3 getSize()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000856")]
		[Address(RVA = "0x411670", Offset = "0x411670", VA = "0x411670")]
		public Vector3 getMiddle()
		{
			return default(Vector3);
		}
	}
	[Token(Token = "0x20000FA")]
	public struct ZmTools
	{
		[Token(Token = "0x2000297")]
		private class Index2D
		{
			[Token(Token = "0x4000F5D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int nRow;

			[Token(Token = "0x6000F1E")]
			[Address(RVA = "0x8538B0", Offset = "0x8538B0", VA = "0x8538B0")]
			public Index2D(int _nRow)
			{
			}

			[Token(Token = "0x6000F1F")]
			[Address(RVA = "0x8538DC", Offset = "0x8538DC", VA = "0x8538DC")]
			public int get(int ix, int iy)
			{
				return default(int);
			}
		}

		[Token(Token = "0x400086E")]
		public const float twoPi = (float)Math.PI * 2f;

		[Token(Token = "0x400086F")]
		public const float onePi = (float)Math.PI;

		[Token(Token = "0x4000870")]
		public const float twoThirdsPi = (float)Math.PI * 2f / 3f;

		[Token(Token = "0x4000871")]
		public const float fourThirdsPi = 4.1887903f;

		[Token(Token = "0x4000872")]
		public const float third = 1f / 3f;

		[Token(Token = "0x4000873")]
		public const float msToKmh = 3.6f;

		[Token(Token = "0x4000874")]
		public const float inchToMeter = 0.0254f;

		[Token(Token = "0x4000875")]
		public const float meterToInch = 39.37008f;

		[Token(Token = "0x4000876")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Vector3[] corners;

		[Token(Token = "0x4000877")]
		private const float EPS = 1E-05f;

		[Token(Token = "0x6000857")]
		[Address(RVA = "0xE94050", Offset = "0xE94050", VA = "0xE94050")]
		public static bool lineCross(out Vector2 res, Vector2 p0, Vector2 d0, Vector2 p1, Vector2 d1)
		{
			return default(bool);
		}

		[Token(Token = "0x6000858")]
		[Address(RVA = "0xE9412C", Offset = "0xE9412C", VA = "0xE9412C")]
		public static Vector2 getNormalizedPosition(Ray _ray, RectTransform rt)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6000859")]
		[Address(RVA = "0xE943B8", Offset = "0xE943B8", VA = "0xE943B8")]
		public static bool getPlaneCross(out Vector3 cross, Ray _ray, Vector3 planeP, Vector3 planeN)
		{
			return default(bool);
		}

		[Token(Token = "0x600085A")]
		[Address(RVA = "0xE944B4", Offset = "0xE944B4", VA = "0xE944B4")]
		public static void swap(ref int a, ref int b)
		{
		}

		[Token(Token = "0x600085B")]
		[Address(RVA = "0xE944C8", Offset = "0xE944C8", VA = "0xE944C8")]
		public static void swap(ref bool a, ref bool b)
		{
		}

		[Token(Token = "0x600085C")]
		[Address(RVA = "0xE944E4", Offset = "0xE944E4", VA = "0xE944E4")]
		public static float getSegmentDistanceSq(Vector2 p, Vector2 a0, Vector2 a1)
		{
			return default(float);
		}

		[Token(Token = "0x600085D")]
		[Address(RVA = "0xE945D8", Offset = "0xE945D8", VA = "0xE945D8")]
		public static float getSegmentDistanceSq(out float distanceAlong, Vector2 p, Vector2 a0, Vector2 a1)
		{
			return default(float);
		}

		[Token(Token = "0x600085E")]
		[Address(RVA = "0xE946E0", Offset = "0xE946E0", VA = "0xE946E0")]
		public static bool segmentsCross(Vector2 a0, Vector2 a1, Vector2 b0, Vector2 b1)
		{
			return default(bool);
		}

		[Token(Token = "0x600085F")]
		[Address(RVA = "0xE94768", Offset = "0xE94768", VA = "0xE94768")]
		public static Vector3 mirror(Vector3 p, Vector3 mirrorP, Vector3 mirrorN)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000860")]
		[Address(RVA = "0xE947B0", Offset = "0xE947B0", VA = "0xE947B0")]
		public static Vector3 mirror_d(Vector3 p, Vector3 mirrorN)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000861")]
		[Address(RVA = "0xE947EC", Offset = "0xE947EC", VA = "0xE947EC")]
		public static int solveCubic(float[] sol, float a, float b, float c, float d)
		{
			return default(int);
		}

		[Token(Token = "0x6000862")]
		[Address(RVA = "0xE94C50", Offset = "0xE94C50", VA = "0xE94C50")]
		public static float cubeRoot(float v)
		{
			return default(float);
		}

		[Token(Token = "0x6000863")]
		[Address(RVA = "0xE94B74", Offset = "0xE94B74", VA = "0xE94B74")]
		public static int solveQuadratic(float[] sol, float a, float b, float c)
		{
			return default(int);
		}

		[Token(Token = "0x6000864")]
		[Address(RVA = "0xE94C88", Offset = "0xE94C88", VA = "0xE94C88")]
		public static float polynomial(float _x, float[] _terms)
		{
			return default(float);
		}

		[Token(Token = "0x6000865")]
		[Address(RVA = "0xE94D00", Offset = "0xE94D00", VA = "0xE94D00")]
		public static float fixAngleDeg(float _angle)
		{
			return default(float);
		}

		[Token(Token = "0x6000866")]
		[Address(RVA = "0xE94DB4", Offset = "0xE94DB4", VA = "0xE94DB4")]
		public static float fixAngleRad(float _angle)
		{
			return default(float);
		}

		[Token(Token = "0x6000867")]
		[Address(RVA = "0xE94E24", Offset = "0xE94E24", VA = "0xE94E24")]
		public static Vector3 rotateAboutAxis(Vector3 _input, Vector3 _axis, float _angle)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000868")]
		[Address(RVA = "0xE94EF4", Offset = "0xE94EF4", VA = "0xE94EF4")]
		public static Vector3 rotateAboutAxis(Vector3 _input, Vector3 _axis, Vector3 _axisP, float _angle)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000869")]
		[Address(RVA = "0xE95074", Offset = "0xE95074", VA = "0xE95074")]
		public static bool solveSimultaneous(float[] a, int n, float[] x)
		{
			return default(bool);
		}

		[Token(Token = "0x600086A")]
		[Address(RVA = "0xE954B0", Offset = "0xE954B0", VA = "0xE954B0")]
		public static bool lineFit(out float m, out float c, List<Vector2> points)
		{
			return default(bool);
		}

		[Token(Token = "0x600086B")]
		[Address(RVA = "0xE95700", Offset = "0xE95700", VA = "0xE95700")]
		public static float getLineSegmentDistance(Vector3 seg0, Vector3 seg1, Vector3 lineStart, Vector3 lineDir)
		{
			return default(float);
		}

		[Token(Token = "0x600086C")]
		[Address(RVA = "0xE958D8", Offset = "0xE958D8", VA = "0xE958D8")]
		public static float getFractionAlongLine(Vector2 seg0, Vector2 seg1, Vector2 p)
		{
			return default(float);
		}

		[Token(Token = "0x600086D")]
		[Address(RVA = "0xE95968", Offset = "0xE95968", VA = "0xE95968")]
		public static float getLineSegmentPointDistance(Vector2 seg0, Vector2 seg1, Vector2 p)
		{
			return default(float);
		}

		[Token(Token = "0x600086E")]
		[Address(RVA = "0xE95A60", Offset = "0xE95A60", VA = "0xE95A60")]
		public static List<int> getPrimeFactors(int number)
		{
			return null;
		}

		[Token(Token = "0x600086F")]
		[Address(RVA = "0xE95B44", Offset = "0xE95B44", VA = "0xE95B44")]
		public static int getCommonNumber(int a, int b)
		{
			return default(int);
		}

		[Token(Token = "0x6000870")]
		[Address(RVA = "0xE95840", Offset = "0xE95840", VA = "0xE95840")]
		public static float getLinePointDistance(Vector3 v, Vector3 lineStart, Vector3 lineDir)
		{
			return default(float);
		}

		[Token(Token = "0x6000871")]
		[Address(RVA = "0xE94D70", Offset = "0xE94D70", VA = "0xE94D70")]
		public static float specialMod(float value, float period)
		{
			return default(float);
		}

		[Token(Token = "0x6000872")]
		[Address(RVA = "0xE95DA0", Offset = "0xE95DA0", VA = "0xE95DA0")]
		public static int specialMod(int value, int period)
		{
			return default(int);
		}

		[Token(Token = "0x6000873")]
		[Address(RVA = "0xE95DC0", Offset = "0xE95DC0", VA = "0xE95DC0")]
		public static Vector3 rotate(Vector3 v, Vector3 axis, float angle)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000874")]
		[Address(RVA = "0xE95F20", Offset = "0xE95F20", VA = "0xE95F20")]
		public static void normalizeInPlace(ref Vector3 v)
		{
		}

		[Token(Token = "0x6000875")]
		[Address(RVA = "0xE95F94", Offset = "0xE95F94", VA = "0xE95F94")]
		public static Vector3 normalize(Vector3 v)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000876")]
		[Address(RVA = "0xE95FF0", Offset = "0xE95FF0", VA = "0xE95FF0")]
		public static bool getCross(out float len0, out float len1, Vector2 p0, Vector2 d0, Vector2 p1, Vector2 d1)
		{
			return default(bool);
		}
	}
	[Serializable]
	[Token(Token = "0x20000FB")]
	public struct ZmTrans2d
	{
		[Token(Token = "0x4000878")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Vector2 p;

		[Token(Token = "0x4000879")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Vector2 y;

		[Token(Token = "0x6000878")]
		[Address(RVA = "0x4116A0", Offset = "0x4116A0", VA = "0x4116A0")]
		public Vector2 getX()
		{
			return default(Vector2);
		}

		[Token(Token = "0x6000879")]
		[Address(RVA = "0xE96128", Offset = "0xE96128", VA = "0xE96128")]
		public static ZmTrans2d make(Vector2 p, float a)
		{
			return default(ZmTrans2d);
		}

		[Token(Token = "0x600087A")]
		[Address(RVA = "0x4116AC", Offset = "0x4116AC", VA = "0x4116AC")]
		public ZmTrans2d localToWorld(ZmTrans2d loc)
		{
			return default(ZmTrans2d);
		}
	}
	[Serializable]
	[Token(Token = "0x20000FC")]
	public struct ZmTrans3d
	{
		[Token(Token = "0x2000298")]
		public enum Rejig
		{
			[Token(Token = "0x4000F5F")]
			xy,
			[Token(Token = "0x4000F60")]
			xz,
			[Token(Token = "0x4000F61")]
			yx,
			[Token(Token = "0x4000F62")]
			yz,
			[Token(Token = "0x4000F63")]
			zx,
			[Token(Token = "0x4000F64")]
			zy
		}

		[Token(Token = "0x400087A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Vector3 p;

		[Token(Token = "0x400087B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public Vector3 y;

		[Token(Token = "0x400087C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector3 z;

		[Token(Token = "0x600087B")]
		[Address(RVA = "0xE961BC", Offset = "0xE961BC", VA = "0xE961BC")]
		public static void test()
		{
		}

		[Token(Token = "0x600087C")]
		[Address(RVA = "0x4116B4", Offset = "0x4116B4", VA = "0x4116B4")]
		public void setEuler(Vector3 a)
		{
		}

		[Token(Token = "0x600087D")]
		[Address(RVA = "0x4116BC", Offset = "0x4116BC", VA = "0x4116BC")]
		public void getEuler(out Vector3 e1, out Vector3 e2)
		{
		}

		[Token(Token = "0x600087E")]
		[Address(RVA = "0xE96BF0", Offset = "0xE96BF0", VA = "0xE96BF0")]
		public static ZmTrans3d identity()
		{
			return default(ZmTrans3d);
		}

		[Token(Token = "0x600087F")]
		[Address(RVA = "0x4116C4", Offset = "0x4116C4", VA = "0x4116C4")]
		public ZmTrans3d rotate(Vector3 axis, float angle)
		{
			return default(ZmTrans3d);
		}

		[Token(Token = "0x6000880")]
		[Address(RVA = "0x411708", Offset = "0x411708", VA = "0x411708")]
		public Vector3 getX()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000881")]
		[Address(RVA = "0x41171C", Offset = "0x41171C", VA = "0x41171C")]
		public void copyFrom(Transform t)
		{
		}

		[Token(Token = "0x6000882")]
		[Address(RVA = "0x411724", Offset = "0x411724", VA = "0x411724")]
		public void copyTo(Transform t)
		{
		}

		[Token(Token = "0x6000883")]
		[Address(RVA = "0xE96CD4", Offset = "0xE96CD4", VA = "0xE96CD4")]
		public static ZmTrans3d make(ZmTrans2d from)
		{
			return default(ZmTrans3d);
		}

		[Token(Token = "0x6000884")]
		[Address(RVA = "0xE96CF0", Offset = "0xE96CF0", VA = "0xE96CF0")]
		public static ZmTrans3d make(ZmTrans3d from)
		{
			return default(ZmTrans3d);
		}

		[Token(Token = "0x6000885")]
		[Address(RVA = "0xE96D04", Offset = "0xE96D04", VA = "0xE96D04")]
		public static ZmTrans3d make(Vector3 p, float a)
		{
			return default(ZmTrans3d);
		}

		[Token(Token = "0x6000886")]
		[Address(RVA = "0x41172C", Offset = "0x41172C", VA = "0x41172C")]
		public ZmTrans3d localToWorld(ZmTrans3d loc)
		{
			return default(ZmTrans3d);
		}

		[Token(Token = "0x6000887")]
		[Address(RVA = "0x411784", Offset = "0x411784", VA = "0x411784")]
		public ZmTrans3d worldToLocal(ZmTrans3d t)
		{
			return default(ZmTrans3d);
		}

		[Token(Token = "0x6000888")]
		[Address(RVA = "0x4117DC", Offset = "0x4117DC", VA = "0x4117DC")]
		public Vector3 worldToLocal_d(Vector3 v)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000889")]
		[Address(RVA = "0x4117E4", Offset = "0x4117E4", VA = "0x4117E4")]
		public Vector3 worldToLocal(Vector3 v)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600088A")]
		[Address(RVA = "0x4117EC", Offset = "0x4117EC", VA = "0x4117EC")]
		public ZmTrans3d(Vector3 _p, Vector3 _y, Vector3 _z)
		{
		}

		[Token(Token = "0x600088B")]
		[Address(RVA = "0x41180C", Offset = "0x41180C", VA = "0x41180C")]
		public ZmTrans3d(ZmTrans3d t)
		{
		}

		[Token(Token = "0x600088C")]
		[Address(RVA = "0x411820", Offset = "0x411820", VA = "0x411820", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x600088D")]
		[Address(RVA = "0xE970B4", Offset = "0xE970B4", VA = "0xE970B4")]
		public static bool sameOrientation(ZmTrans3d a, ZmTrans3d b, float tolerance)
		{
			return default(bool);
		}

		[Token(Token = "0x600088E")]
		[Address(RVA = "0x411828", Offset = "0x411828", VA = "0x411828")]
		public Vector3 getAxis(int ax)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600088F")]
		[Address(RVA = "0x411830", Offset = "0x411830", VA = "0x411830")]
		public void normalize()
		{
		}

		[Token(Token = "0x6000890")]
		[Address(RVA = "0x411838", Offset = "0x411838", VA = "0x411838")]
		public void fixY()
		{
		}

		[Token(Token = "0x6000891")]
		[Address(RVA = "0x411840", Offset = "0x411840", VA = "0x411840")]
		public void fixZ()
		{
		}

		[Token(Token = "0x6000892")]
		[Address(RVA = "0x411848", Offset = "0x411848", VA = "0x411848")]
		public void copyFrom(ZmTrans3d t)
		{
		}

		[Token(Token = "0x6000893")]
		[Address(RVA = "0x41185C", Offset = "0x41185C", VA = "0x41185C")]
		public Vector3 localToWorld(Vector3 v)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000894")]
		[Address(RVA = "0x411864", Offset = "0x411864", VA = "0x411864")]
		public Vector3 localToWorld_d(Vector3 v)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000895")]
		[Address(RVA = "0x41186C", Offset = "0x41186C", VA = "0x41186C")]
		public void randomOrientation(ZmDice _dice)
		{
		}

		[Token(Token = "0x6000896")]
		[Address(RVA = "0x411874", Offset = "0x411874", VA = "0x411874")]
		public void rejig(Rejig _rejig)
		{
		}
	}
}
namespace UnityEngine.UI
{
	[Token(Token = "0x20000FD")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x43F158", Offset = "0x43F158")]
	public class UIIgnoreRaycast : MonoBehaviour, ICanvasRaycastFilter
	{
		[Token(Token = "0x6000897")]
		[Address(RVA = "0x81FA24", Offset = "0x81FA24", VA = "0x81FA24", Slot = "4")]
		public bool IsRaycastLocationValid(Vector2 sp, Camera eventCamera)
		{
			return default(bool);
		}

		[Token(Token = "0x6000898")]
		[Address(RVA = "0x81FA2C", Offset = "0x81FA2C", VA = "0x81FA2C")]
		public UIIgnoreRaycast()
		{
		}
	}
}
namespace Wacki
{
	[Token(Token = "0x20000FE")]
	public class BasicLaserPointer : IUILaserPointer
	{
		[Token(Token = "0x400087D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool button;

		[Token(Token = "0x400087E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
		private bool lastButton;

		[Token(Token = "0x6000899")]
		[Address(RVA = "0x91F9B0", Offset = "0x91F9B0", VA = "0x91F9B0", Slot = "4")]
		protected override void Initialize()
		{
		}

		[Token(Token = "0x600089A")]
		[Address(RVA = "0x91F9B8", Offset = "0x91F9B8", VA = "0x91F9B8", Slot = "7")]
		public override bool ButtonDown()
		{
			return default(bool);
		}

		[Token(Token = "0x600089B")]
		[Address(RVA = "0x91F9D8", Offset = "0x91F9D8", VA = "0x91F9D8", Slot = "8")]
		public override bool ButtonUp()
		{
			return default(bool);
		}

		[Token(Token = "0x600089C")]
		[Address(RVA = "0x91F9F8", Offset = "0x91F9F8", VA = "0x91F9F8", Slot = "9")]
		protected override void update()
		{
		}

		[Token(Token = "0x600089D")]
		[Address(RVA = "0x91FA98", Offset = "0x91FA98", VA = "0x91FA98", Slot = "5")]
		public override void OnEnterControl(GameObject control)
		{
		}

		[Token(Token = "0x600089E")]
		[Address(RVA = "0x91FAA0", Offset = "0x91FAA0", VA = "0x91FAA0", Slot = "6")]
		public override void OnExitControl(GameObject control)
		{
		}

		[Token(Token = "0x600089F")]
		[Address(RVA = "0x91FAA8", Offset = "0x91FAA8", VA = "0x91FAA8")]
		public BasicLaserPointer()
		{
		}
	}
	[Token(Token = "0x20000FF")]
	public abstract class IUILaserPointer : MonoBehaviour
	{
		[Token(Token = "0x400087F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float laserThickness;

		[Token(Token = "0x4000880")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float laserHitScale;

		[Token(Token = "0x4000881")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool laserAlwaysOn;

		[Token(Token = "0x4000882")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public Color color;

		[Token(Token = "0x4000883")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float _distanceLimit;

		[Token(Token = "0x4000884")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public LaserPointerInputModule laserPointerInputModule;

		[Token(Token = "0x60008A0")]
		[Address(RVA = "0x75C760", Offset = "0x75C760", VA = "0x75C760")]
		private void Start()
		{
		}

		[Token(Token = "0x60008A1")]
		[Address(RVA = "0x75C76C", Offset = "0x75C76C", VA = "0x75C76C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60008A2")]
		[Address(RVA = "0x75C78C", Offset = "0x75C78C", VA = "0x75C78C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60008A3")]
		[Address(RVA = "0x75C7AC", Offset = "0x75C7AC", VA = "0x75C7AC")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60008A4")]
		[Address(RVA = "0x75C7B0", Offset = "0x75C7B0", VA = "0x75C7B0", Slot = "4")]
		protected virtual void Initialize()
		{
		}

		[Token(Token = "0x60008A5")]
		[Address(RVA = "0x75C7B4", Offset = "0x75C7B4", VA = "0x75C7B4", Slot = "5")]
		public virtual void OnEnterControl(GameObject control)
		{
		}

		[Token(Token = "0x60008A6")]
		[Address(RVA = "0x75C7B8", Offset = "0x75C7B8", VA = "0x75C7B8", Slot = "6")]
		public virtual void OnExitControl(GameObject control)
		{
		}

		[Token(Token = "0x60008A7")]
		public abstract bool ButtonDown();

		[Token(Token = "0x60008A8")]
		public abstract bool ButtonUp();

		[Token(Token = "0x60008A9")]
		[Address(RVA = "0x75C7BC", Offset = "0x75C7BC", VA = "0x75C7BC", Slot = "9")]
		protected virtual void update()
		{
		}

		[Token(Token = "0x60008AA")]
		[Address(RVA = "0x75C7C0", Offset = "0x75C7C0", VA = "0x75C7C0", Slot = "10")]
		protected virtual void Update()
		{
		}

		[Token(Token = "0x60008AB")]
		[Address(RVA = "0x75C8D4", Offset = "0x75C8D4", VA = "0x75C8D4", Slot = "11")]
		public virtual void LimitLaserDistance(float distance)
		{
		}

		[Token(Token = "0x60008AC")]
		[Address(RVA = "0x75C918", Offset = "0x75C918", VA = "0x75C918")]
		protected IUILaserPointer()
		{
		}
	}
	[Token(Token = "0x2000100")]
	public class LaserPointerEventData : PointerEventData
	{
		[Token(Token = "0x4000885")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		public GameObject current;

		[Token(Token = "0x4000886")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		public IUILaserPointer controller;

		[Token(Token = "0x60008AD")]
		[Address(RVA = "0x10883B0", Offset = "0x10883B0", VA = "0x10883B0")]
		public LaserPointerEventData(EventSystem e)
		{
		}

		[Token(Token = "0x60008AE")]
		[Address(RVA = "0x10883B8", Offset = "0x10883B8", VA = "0x10883B8", Slot = "4")]
		public override void Reset()
		{
		}
	}
	[Token(Token = "0x2000101")]
	public class LaserPointerInputModule : BaseInputModule
	{
		[Token(Token = "0x2000299")]
		private class ControllerData
		{
			[Token(Token = "0x4000F65")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public LaserPointerEventData pointerEvent;

			[Token(Token = "0x4000F66")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public GameObject currentPoint;

			[Token(Token = "0x4000F67")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public GameObject currentPressed;

			[Token(Token = "0x4000F68")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public GameObject currentDragging;

			[Token(Token = "0x6000F20")]
			[Address(RVA = "0x864CA4", Offset = "0x864CA4", VA = "0x864CA4")]
			public ControllerData()
			{
			}
		}

		[Token(Token = "0x4000887")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static LaserPointerInputModule _instance;

		[Token(Token = "0x4000888")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public LayerMask layerMask;

		[Token(Token = "0x4000889")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Camera UICamera;

		[Token(Token = "0x400088A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private PhysicsRaycaster raycaster;

		[Token(Token = "0x400088B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private HashSet<IUILaserPointer> _controllers;

		[Token(Token = "0x400088C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Dictionary<IUILaserPointer, ControllerData> _controllerData;

		[Token(Token = "0x17000026")]
		public static LaserPointerInputModule instance
		{
			[Token(Token = "0x60008AF")]
			[Address(RVA = "0x10883FC", Offset = "0x10883FC", VA = "0x10883FC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60008B0")]
		[Address(RVA = "0x1088460", Offset = "0x1088460", VA = "0x1088460", Slot = "4")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x60008B1")]
		[Address(RVA = "0x10885CC", Offset = "0x10885CC", VA = "0x10885CC", Slot = "6")]
		protected override void Start()
		{
		}

		[Token(Token = "0x60008B2")]
		[Address(RVA = "0x10887E0", Offset = "0x10887E0", VA = "0x10887E0")]
		public void addCanvas(Canvas _canvas)
		{
		}

		[Token(Token = "0x60008B3")]
		[Address(RVA = "0x1088804", Offset = "0x1088804", VA = "0x1088804")]
		public void AddController(IUILaserPointer controller)
		{
		}

		[Token(Token = "0x60008B4")]
		[Address(RVA = "0x1088898", Offset = "0x1088898", VA = "0x1088898")]
		public void RemoveController(IUILaserPointer controller)
		{
		}

		[Token(Token = "0x60008B5")]
		[Address(RVA = "0x10888FC", Offset = "0x10888FC", VA = "0x10888FC")]
		protected void UpdateCameraPosition(IUILaserPointer controller)
		{
		}

		[Token(Token = "0x60008B6")]
		[Address(RVA = "0x10889A0", Offset = "0x10889A0", VA = "0x10889A0")]
		public void ClearSelection()
		{
		}

		[Token(Token = "0x60008B7")]
		[Address(RVA = "0x1088A38", Offset = "0x1088A38", VA = "0x1088A38")]
		private void Select(GameObject go)
		{
		}

		[Token(Token = "0x60008B8")]
		[Address(RVA = "0x1088B30", Offset = "0x1088B30", VA = "0x1088B30", Slot = "17")]
		public override void Process()
		{
		}

		[Token(Token = "0x60008B9")]
		[Address(RVA = "0x1089FB8", Offset = "0x1089FB8", VA = "0x1089FB8")]
		public LaserPointerInputModule()
		{
		}
	}
}
namespace Oculus.Spatializer.Propagation
{
	[Token(Token = "0x2000102")]
	public enum FaceType : uint
	{
		[Token(Token = "0x400088E")]
		TRIANGLES,
		[Token(Token = "0x400088F")]
		QUADS
	}
	[Token(Token = "0x2000103")]
	public enum MaterialProperty : uint
	{
		[Token(Token = "0x4000891")]
		ABSORPTION,
		[Token(Token = "0x4000892")]
		TRANSMISSION,
		[Token(Token = "0x4000893")]
		SCATTERING
	}
	[Token(Token = "0x2000104")]
	public struct MeshGroup
	{
		[Token(Token = "0x4000894")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public UIntPtr indexOffset;

		[Token(Token = "0x4000895")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public UIntPtr faceCount;

		[Token(Token = "0x4000896")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public FaceType faceType;

		[Token(Token = "0x4000897")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public IntPtr material;
	}
}
namespace OculusSampleFramework
{
	[Token(Token = "0x2000105")]
	public class ColorGrabbable : OVRGrabbable
	{
		[Token(Token = "0x4000898")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly Color COLOR_GRAB;

		[Token(Token = "0x4000899")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static readonly Color COLOR_HIGHLIGHT;

		[Token(Token = "0x400089A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Color m_color;

		[Token(Token = "0x400089B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private MeshRenderer[] m_meshRenderers;

		[Token(Token = "0x400089C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private bool m_highlight;

		[Token(Token = "0x17000027")]
		public bool Highlight
		{
			[Token(Token = "0x60008BB")]
			[Address(RVA = "0x929910", Offset = "0x929910", VA = "0x929910")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60008BC")]
			[Address(RVA = "0x929918", Offset = "0x929918", VA = "0x929918")]
			set
			{
			}
		}

		[Token(Token = "0x60008BD")]
		[Address(RVA = "0x929924", Offset = "0x929924", VA = "0x929924")]
		protected void UpdateColor()
		{
		}

		[Token(Token = "0x60008BE")]
		[Address(RVA = "0x929AEC", Offset = "0x929AEC", VA = "0x929AEC", Slot = "4")]
		public override void GrabBegin(OVRGrabber hand, Collider grabPoint)
		{
		}

		[Token(Token = "0x60008BF")]
		[Address(RVA = "0x929B14", Offset = "0x929B14", VA = "0x929B14", Slot = "5")]
		public override void GrabEnd(Vector3 linearVelocity, Vector3 angularVelocity)
		{
		}

		[Token(Token = "0x60008C0")]
		[Address(RVA = "0x929B3C", Offset = "0x929B3C", VA = "0x929B3C")]
		private void Awake()
		{
		}

		[Token(Token = "0x60008C1")]
		[Address(RVA = "0x9299EC", Offset = "0x9299EC", VA = "0x9299EC")]
		private void SetColor(Color color)
		{
		}

		[Token(Token = "0x60008C2")]
		[Address(RVA = "0x929E10", Offset = "0x929E10", VA = "0x929E10")]
		public ColorGrabbable()
		{
		}
	}
	[Token(Token = "0x2000106")]
	public class DistanceGrabbable : OVRGrabbable
	{
		[Token(Token = "0x400089D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public string m_materialColorField;

		[Token(Token = "0x400089E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private GrabbableCrosshair m_crosshair;

		[Token(Token = "0x400089F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private GrabManager m_crosshairManager;

		[Token(Token = "0x40008A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Renderer m_renderer;

		[Token(Token = "0x40008A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private MaterialPropertyBlock m_mpb;

		[Token(Token = "0x40008A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private bool m_inRange;

		[Token(Token = "0x40008A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x71")]
		private bool m_targeted;

		[Token(Token = "0x17000028")]
		public bool InRange
		{
			[Token(Token = "0x60008C4")]
			[Address(RVA = "0x74C4C0", Offset = "0x74C4C0", VA = "0x74C4C0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60008C5")]
			[Address(RVA = "0x74C4C8", Offset = "0x74C4C8", VA = "0x74C4C8")]
			set
			{
			}
		}

		[Token(Token = "0x17000029")]
		public bool Targeted
		{
			[Token(Token = "0x60008C6")]
			[Address(RVA = "0x74C640", Offset = "0x74C640", VA = "0x74C640")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60008C7")]
			[Address(RVA = "0x74C648", Offset = "0x74C648", VA = "0x74C648")]
			set
			{
			}
		}

		[Token(Token = "0x60008C8")]
		[Address(RVA = "0x74C654", Offset = "0x74C654", VA = "0x74C654", Slot = "6")]
		protected override void Start()
		{
		}

		[Token(Token = "0x60008C9")]
		[Address(RVA = "0x74C4D4", Offset = "0x74C4D4", VA = "0x74C4D4")]
		private void RefreshCrosshair()
		{
		}

		[Token(Token = "0x60008CA")]
		[Address(RVA = "0x74C85C", Offset = "0x74C85C", VA = "0x74C85C")]
		public DistanceGrabbable()
		{
		}
	}
	[Token(Token = "0x2000107")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x43F190", Offset = "0x43F190")]
	public class DistanceGrabber : OVRGrabber
	{
		[Token(Token = "0x40008A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		[SerializeField]
		private float m_spherecastRadius;

		[Token(Token = "0x40008A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[SerializeField]
		private float m_noSnapThreshhold;

		[Token(Token = "0x40008A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		[SerializeField]
		private bool m_useSpherecast;

		[Token(Token = "0x40008A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCD")]
		[SerializeField]
		public bool m_preventGrabThroughWalls;

		[Token(Token = "0x40008A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[SerializeField]
		private float m_objectPullVelocity;

		[Token(Token = "0x40008A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		private float m_objectPullMaxRotationRate;

		[Token(Token = "0x40008AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private bool m_movingObjectToHand;

		[Token(Token = "0x40008AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		[SerializeField]
		private float m_maxGrabDistance;

		[Token(Token = "0x40008AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[SerializeField]
		private int m_grabObjectsInLayer;

		[Token(Token = "0x40008AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		[SerializeField]
		private int m_obstructionLayer;

		[Token(Token = "0x40008AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private DistanceGrabber m_otherHand;

		[Token(Token = "0x40008AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		protected DistanceGrabbable m_target;

		[Token(Token = "0x40008B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		protected Collider m_targetCollider;

		[Token(Token = "0x1700002A")]
		public bool UseSpherecast
		{
			[Token(Token = "0x60008CB")]
			[Address(RVA = "0x74C864", Offset = "0x74C864", VA = "0x74C864")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60008CC")]
			[Address(RVA = "0x74C86C", Offset = "0x74C86C", VA = "0x74C86C")]
			set
			{
			}
		}

		[Token(Token = "0x60008CD")]
		[Address(RVA = "0x74C888", Offset = "0x74C888", VA = "0x74C888", Slot = "5")]
		protected override void Start()
		{
		}

		[Token(Token = "0x60008CE")]
		[Address(RVA = "0x74CAC8", Offset = "0x74CAC8", VA = "0x74CAC8", Slot = "6")]
		public override void Update()
		{
		}

		[Token(Token = "0x60008CF")]
		[Address(RVA = "0x74D3E0", Offset = "0x74D3E0", VA = "0x74D3E0", Slot = "7")]
		protected override void GrabBegin()
		{
		}

		[Token(Token = "0x60008D0")]
		[Address(RVA = "0x74D874", Offset = "0x74D874", VA = "0x74D874", Slot = "8")]
		protected override void MoveGrabbedObject(Vector3 pos, Quaternion rot, bool forceTeleport = false)
		{
		}

		[Token(Token = "0x60008D1")]
		[Address(RVA = "0x74DB34", Offset = "0x74DB34", VA = "0x74DB34")]
		private static DistanceGrabbable HitInfoToGrabbable(RaycastHit hitInfo)
		{
			return null;
		}

		[Token(Token = "0x60008D2")]
		[Address(RVA = "0x74CD3C", Offset = "0x74CD3C", VA = "0x74CD3C")]
		protected bool FindTarget(out DistanceGrabbable dgOut, out Collider collOut)
		{
			return default(bool);
		}

		[Token(Token = "0x60008D3")]
		[Address(RVA = "0x74DC24", Offset = "0x74DC24", VA = "0x74DC24")]
		protected bool FindTargetWithSpherecast(out DistanceGrabbable dgOut, out Collider collOut)
		{
			return default(bool);
		}

		[Token(Token = "0x60008D4")]
		[Address(RVA = "0x74E080", Offset = "0x74E080", VA = "0x74E080", Slot = "9")]
		protected override void GrabVolumeEnable(bool enabled)
		{
		}

		[Token(Token = "0x60008D5")]
		[Address(RVA = "0x74E098", Offset = "0x74E098", VA = "0x74E098", Slot = "10")]
		protected override void OffhandGrabbed(OVRGrabbable grabbable)
		{
		}

		[Token(Token = "0x60008D6")]
		[Address(RVA = "0x74E0A0", Offset = "0x74E0A0", VA = "0x74E0A0")]
		public DistanceGrabber()
		{
		}
	}
	[Token(Token = "0x2000108")]
	public class GrabManager : MonoBehaviour
	{
		[Token(Token = "0x40008B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Collider m_grabVolume;

		[Token(Token = "0x40008B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Color OutlineColorInRange;

		[Token(Token = "0x40008B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Color OutlineColorHighlighted;

		[Token(Token = "0x40008B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Color OutlineColorOutOfRange;

		[Token(Token = "0x60008D7")]
		[Address(RVA = "0x752FFC", Offset = "0x752FFC", VA = "0x752FFC")]
		private void OnTriggerEnter(Collider otherCollider)
		{
		}

		[Token(Token = "0x60008D8")]
		[Address(RVA = "0x7530B4", Offset = "0x7530B4", VA = "0x7530B4")]
		private void OnTriggerExit(Collider otherCollider)
		{
		}

		[Token(Token = "0x60008D9")]
		[Address(RVA = "0x753168", Offset = "0x753168", VA = "0x753168")]
		public GrabManager()
		{
		}
	}
	[Token(Token = "0x2000109")]
	public class GrabbableCrosshair : MonoBehaviour
	{
		[Token(Token = "0x200029A")]
		public enum CrosshairState
		{
			[Token(Token = "0x4000F6A")]
			Disabled,
			[Token(Token = "0x4000F6B")]
			Enabled,
			[Token(Token = "0x4000F6C")]
			Targeted
		}

		[Token(Token = "0x40008B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private CrosshairState m_state;

		[Token(Token = "0x40008B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Transform m_centerEyeAnchor;

		[Token(Token = "0x40008B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private GameObject m_targetedCrosshair;

		[Token(Token = "0x40008B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private GameObject m_enabledCrosshair;

		[Token(Token = "0x60008DA")]
		[Address(RVA = "0x753170", Offset = "0x753170", VA = "0x753170")]
		private void Start()
		{
		}

		[Token(Token = "0x60008DB")]
		[Address(RVA = "0x74C7C0", Offset = "0x74C7C0", VA = "0x74C7C0")]
		public void SetState(CrosshairState cs)
		{
		}

		[Token(Token = "0x60008DC")]
		[Address(RVA = "0x7531DC", Offset = "0x7531DC", VA = "0x7531DC")]
		private void Update()
		{
		}

		[Token(Token = "0x60008DD")]
		[Address(RVA = "0x753224", Offset = "0x753224", VA = "0x753224")]
		public GrabbableCrosshair()
		{
		}
	}
	[Token(Token = "0x200010A")]
	public class PauseOnInputLoss : MonoBehaviour
	{
		[Token(Token = "0x60008DE")]
		[Address(RVA = "0xE62A44", Offset = "0xE62A44", VA = "0xE62A44")]
		private void Start()
		{
		}

		[Token(Token = "0x60008DF")]
		[Address(RVA = "0xE62B30", Offset = "0xE62B30", VA = "0xE62B30")]
		private void OnInputFocusLost()
		{
		}

		[Token(Token = "0x60008E0")]
		[Address(RVA = "0xE62B3C", Offset = "0xE62B3C", VA = "0xE62B3C")]
		private void OnInputFocusAcquired()
		{
		}

		[Token(Token = "0x60008E1")]
		[Address(RVA = "0xE62B48", Offset = "0xE62B48", VA = "0xE62B48")]
		public PauseOnInputLoss()
		{
		}
	}
	[Token(Token = "0x200010B")]
	public class BoneCapsuleTriggerLogic : MonoBehaviour
	{
		[Token(Token = "0x40008B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public InteractableToolTags ToolTags;

		[Token(Token = "0x40008BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public HashSet<ColliderZone> CollidersTouchingUs;

		[Token(Token = "0x40008BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private List<ColliderZone> _elementsToCleanUp;

		[Token(Token = "0x60008E2")]
		[Address(RVA = "0x921914", Offset = "0x921914", VA = "0x921914")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60008E3")]
		[Address(RVA = "0x921968", Offset = "0x921968", VA = "0x921968")]
		private void Update()
		{
		}

		[Token(Token = "0x60008E4")]
		[Address(RVA = "0x921C8C", Offset = "0x921C8C", VA = "0x921C8C")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x60008E5")]
		[Address(RVA = "0x921D90", Offset = "0x921D90", VA = "0x921D90")]
		private void OnTriggerExit(Collider other)
		{
		}

		[Token(Token = "0x60008E6")]
		[Address(RVA = "0x92196C", Offset = "0x92196C", VA = "0x92196C")]
		private void CleanUpDeadColliders()
		{
		}

		[Token(Token = "0x60008E7")]
		[Address(RVA = "0x921E94", Offset = "0x921E94", VA = "0x921E94")]
		public BoneCapsuleTriggerLogic()
		{
		}
	}
	[Token(Token = "0x200010C")]
	public class ButtonController : Interactable
	{
		[Token(Token = "0x200029B")]
		public enum ContactTest
		{
			[Token(Token = "0x4000F6E")]
			PerpenTest,
			[Token(Token = "0x4000F6F")]
			BackwardsPress
		}

		[Token(Token = "0x40008BC")]
		private const float ENTRY_DOT_THRESHOLD = 0.8f;

		[Token(Token = "0x40008BD")]
		private const float PERP_DOT_THRESHOLD = 0.5f;

		[Token(Token = "0x40008BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private GameObject _proximityZone;

		[Token(Token = "0x40008BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private GameObject _contactZone;

		[Token(Token = "0x40008C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private GameObject _actionZone;

		[Token(Token = "0x40008C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private ContactTest[] _contactTests;

		[Token(Token = "0x40008C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private Transform _buttonPlaneCenter;

		[Token(Token = "0x40008C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private bool _makeSureToolIsOnPositiveSide;

		[Token(Token = "0x40008C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		[SerializeField]
		private Vector3 _localButtonDirection;

		[Token(Token = "0x40008C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private InteractableToolTags[] _allValidToolsTags;

		[Token(Token = "0x40008C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private int _toolTagsMask;

		[Token(Token = "0x40008C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		private InteractableState _currentButtonState;

		[Token(Token = "0x40008C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Dictionary<InteractableTool, InteractableState> _toolToState;

		[Token(Token = "0x1700002B")]
		public override int ValidToolTagsMask
		{
			[Token(Token = "0x60008E8")]
			[Address(RVA = "0x922EF4", Offset = "0x922EF4", VA = "0x922EF4", Slot = "4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700002C")]
		public Vector3 LocalButtonDirection
		{
			[Token(Token = "0x60008E9")]
			[Address(RVA = "0x922EFC", Offset = "0x922EFC", VA = "0x922EFC")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x60008EA")]
		[Address(RVA = "0x922F08", Offset = "0x922F08", VA = "0x922F08", Slot = "9")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x60008EB")]
		[Address(RVA = "0x92301C", Offset = "0x92301C", VA = "0x92301C")]
		private void FireInteractionEventsOnDepth(InteractableCollisionDepth oldDepth, InteractableTool collidingTool, InteractionType interactionType)
		{
		}

		[Token(Token = "0x60008EC")]
		[Address(RVA = "0x923234", Offset = "0x923234", VA = "0x923234", Slot = "8")]
		public override void UpdateCollisionDepth(InteractableTool interactableTool, InteractableCollisionDepth oldCollisionDepth, InteractableCollisionDepth newCollisionDepth)
		{
		}

		[Token(Token = "0x60008ED")]
		[Address(RVA = "0x9237D4", Offset = "0x9237D4", VA = "0x9237D4")]
		private InteractableState GetUpcomingStateNearField(InteractableState oldState, InteractableCollisionDepth newCollisionDepth, bool toolIsInActionZone, bool toolIsInContactZone, bool toolIsInProximity, bool validContact, bool onPositiveSideOfInteractable)
		{
			return default(InteractableState);
		}

		[Token(Token = "0x60008EE")]
		[Address(RVA = "0x9236EC", Offset = "0x9236EC", VA = "0x9236EC")]
		private bool IsValidContact(InteractableTool collidingTool, Vector3 buttonDirection)
		{
			return default(bool);
		}

		[Token(Token = "0x60008EF")]
		[Address(RVA = "0x923880", Offset = "0x923880", VA = "0x923880")]
		private bool PassEntryTest(InteractableTool collidingTool, Vector3 buttonDirection)
		{
			return default(bool);
		}

		[Token(Token = "0x60008F0")]
		[Address(RVA = "0x923904", Offset = "0x923904", VA = "0x923904")]
		private bool PassPerpTest(InteractableTool collidingTool, Vector3 buttonDirection)
		{
			return default(bool);
		}

		[Token(Token = "0x60008F1")]
		[Address(RVA = "0x923990", Offset = "0x923990", VA = "0x923990")]
		public ButtonController()
		{
		}
	}
	[Token(Token = "0x200010D")]
	public class ButtonTriggerZone : MonoBehaviour, ColliderZone
	{
		[Token(Token = "0x40008C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject _parentInteractableObj;

		[Token(Token = "0x40008CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x440918", Offset = "0x440918")]
		private Collider <Collider>k__BackingField;

		[Token(Token = "0x40008CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x440928", Offset = "0x440928")]
		private Interactable <ParentInteractable>k__BackingField;

		[Token(Token = "0x1700002D")]
		public Collider Collider
		{
			[Token(Token = "0x60008F2")]
			[Address(RVA = "0x923BDC", Offset = "0x923BDC", VA = "0x923BDC", Slot = "4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x442638", Offset = "0x442638")]
			get
			{
				return null;
			}
			[Token(Token = "0x60008F3")]
			[Address(RVA = "0x923BE4", Offset = "0x923BE4", VA = "0x923BE4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x442648", Offset = "0x442648")]
			private set
			{
			}
		}

		[Token(Token = "0x1700002E")]
		public Interactable ParentInteractable
		{
			[Token(Token = "0x60008F4")]
			[Address(RVA = "0x923BEC", Offset = "0x923BEC", VA = "0x923BEC", Slot = "5")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x442658", Offset = "0x442658")]
			get
			{
				return null;
			}
			[Token(Token = "0x60008F5")]
			[Address(RVA = "0x923BF4", Offset = "0x923BF4", VA = "0x923BF4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x442668", Offset = "0x442668")]
			private set
			{
			}
		}

		[Token(Token = "0x1700002F")]
		public InteractableCollisionDepth CollisionDepth
		{
			[Token(Token = "0x60008F6")]
			[Address(RVA = "0x923BFC", Offset = "0x923BFC", VA = "0x923BFC", Slot = "6")]
			get
			{
				return default(InteractableCollisionDepth);
			}
		}

		[Token(Token = "0x60008F7")]
		[Address(RVA = "0x923C4C", Offset = "0x923C4C", VA = "0x923C4C")]
		private void Awake()
		{
		}

		[Token(Token = "0x60008F8")]
		[Address(RVA = "0x923CE0", Offset = "0x923CE0", VA = "0x923CE0")]
		public ButtonTriggerZone()
		{
		}
	}
	[Token(Token = "0x200010E")]
	public interface ColliderZone
	{
		[Token(Token = "0x17000030")]
		Collider Collider
		{
			[Token(Token = "0x60008F9")]
			get;
		}

		[Token(Token = "0x17000031")]
		Interactable ParentInteractable
		{
			[Token(Token = "0x60008FA")]
			get;
		}

		[Token(Token = "0x17000032")]
		InteractableCollisionDepth CollisionDepth
		{
			[Token(Token = "0x60008FB")]
			get;
		}
	}
	[Token(Token = "0x200010F")]
	public class ColliderZoneArgs : EventArgs
	{
		[Token(Token = "0x40008CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly ColliderZone Collider;

		[Token(Token = "0x40008CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly float FrameTime;

		[Token(Token = "0x40008CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly InteractableTool CollidingTool;

		[Token(Token = "0x40008CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly InteractionType InteractionT;

		[Token(Token = "0x60008FC")]
		[Address(RVA = "0x92317C", Offset = "0x92317C", VA = "0x92317C")]
		public ColliderZoneArgs(ColliderZone collider, float frameTime, InteractableTool collidingTool, InteractionType interactionType)
		{
		}
	}
	[Token(Token = "0x2000110")]
	public enum InteractionType
	{
		[Token(Token = "0x40008D1")]
		Enter,
		[Token(Token = "0x40008D2")]
		Stay,
		[Token(Token = "0x40008D3")]
		Exit
	}
	[Token(Token = "0x2000111")]
	public class HandsManager : MonoBehaviour
	{
		[Token(Token = "0x200029C")]
		public enum HandsVisualMode
		{
			[Token(Token = "0x4000F71")]
			Mesh,
			[Token(Token = "0x4000F72")]
			Skeleton,
			[Token(Token = "0x4000F73")]
			Both
		}

		[Token(Token = "0x200029D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x43F528", Offset = "0x43F528")]
		private sealed class <FindSkeletonVisualGameObjects>d__52 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000F74")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000F75")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000F76")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public HandsManager <>4__this;

			[Token(Token = "0x170000B4")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000F24")]
				[Address(RVA = "0x85EDF4", Offset = "0x85EDF4", VA = "0x85EDF4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170000B5")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000F26")]
				[Address(RVA = "0x85EE3C", Offset = "0x85EE3C", VA = "0x85EE3C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000F21")]
			[Address(RVA = "0x85EB60", Offset = "0x85EB60", VA = "0x85EB60")]
			[DebuggerHidden]
			public <FindSkeletonVisualGameObjects>d__52(int <>1__state)
			{
			}

			[Token(Token = "0x6000F22")]
			[Address(RVA = "0x85EB8C", Offset = "0x85EB8C", VA = "0x85EB8C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000F23")]
			[Address(RVA = "0x85EB90", Offset = "0x85EB90", VA = "0x85EB90", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000F25")]
			[Address(RVA = "0x85EDFC", Offset = "0x85EDFC", VA = "0x85EDFC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40008D4")]
		private const string SKELETON_VISUALIZER_NAME = "SkeletonRenderer";

		[Token(Token = "0x40008D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject _leftHand;

		[Token(Token = "0x40008D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GameObject _rightHand;

		[Token(Token = "0x40008D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public HandsVisualMode VisualMode;

		[Token(Token = "0x40008D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private OVRHand[] _hand;

		[Token(Token = "0x40008D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private OVRSkeleton[] _handSkeleton;

		[Token(Token = "0x40008DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private OVRSkeletonRenderer[] _handSkeletonRenderer;

		[Token(Token = "0x40008DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private OVRMesh[] _handMesh;

		[Token(Token = "0x40008DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private OVRMeshRenderer[] _handMeshRenderer;

		[Token(Token = "0x40008DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private SkinnedMeshRenderer _leftMeshRenderer;

		[Token(Token = "0x40008DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private SkinnedMeshRenderer _rightMeshRenderer;

		[Token(Token = "0x40008DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private GameObject _leftSkeletonVisual;

		[Token(Token = "0x40008E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private GameObject _rightSkeletonVisual;

		[Token(Token = "0x40008E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private float _currentHandAlpha;

		[Token(Token = "0x40008E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private int HandAlphaId;

		[Token(Token = "0x40008E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x440958", Offset = "0x440958")]
		private static HandsManager <Instance>k__BackingField;

		[Token(Token = "0x17000033")]
		public OVRHand RightHand
		{
			[Token(Token = "0x60008FD")]
			[Address(RVA = "0x750628", Offset = "0x750628", VA = "0x750628")]
			get
			{
				return null;
			}
			[Token(Token = "0x60008FE")]
			[Address(RVA = "0x754BE8", Offset = "0x754BE8", VA = "0x754BE8")]
			private set
			{
			}
		}

		[Token(Token = "0x17000034")]
		public OVRSkeleton RightHandSkeleton
		{
			[Token(Token = "0x60008FF")]
			[Address(RVA = "0x754C58", Offset = "0x754C58", VA = "0x754C58")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000900")]
			[Address(RVA = "0x754C90", Offset = "0x754C90", VA = "0x754C90")]
			private set
			{
			}
		}

		[Token(Token = "0x17000035")]
		public OVRSkeletonRenderer RightHandSkeletonRenderer
		{
			[Token(Token = "0x6000901")]
			[Address(RVA = "0x754D00", Offset = "0x754D00", VA = "0x754D00")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000902")]
			[Address(RVA = "0x754D38", Offset = "0x754D38", VA = "0x754D38")]
			private set
			{
			}
		}

		[Token(Token = "0x17000036")]
		public OVRMesh RightHandMesh
		{
			[Token(Token = "0x6000903")]
			[Address(RVA = "0x754DA8", Offset = "0x754DA8", VA = "0x754DA8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000904")]
			[Address(RVA = "0x754DE0", Offset = "0x754DE0", VA = "0x754DE0")]
			private set
			{
			}
		}

		[Token(Token = "0x17000037")]
		public OVRMeshRenderer RightHandMeshRenderer
		{
			[Token(Token = "0x6000905")]
			[Address(RVA = "0x754E50", Offset = "0x754E50", VA = "0x754E50")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000906")]
			[Address(RVA = "0x754E88", Offset = "0x754E88", VA = "0x754E88")]
			private set
			{
			}
		}

		[Token(Token = "0x17000038")]
		public OVRHand LeftHand
		{
			[Token(Token = "0x6000907")]
			[Address(RVA = "0x7505F4", Offset = "0x7505F4", VA = "0x7505F4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000908")]
			[Address(RVA = "0x754EF8", Offset = "0x754EF8", VA = "0x754EF8")]
			private set
			{
			}
		}

		[Token(Token = "0x17000039")]
		public OVRSkeleton LeftHandSkeleton
		{
			[Token(Token = "0x6000909")]
			[Address(RVA = "0x754F64", Offset = "0x754F64", VA = "0x754F64")]
			get
			{
				return null;
			}
			[Token(Token = "0x600090A")]
			[Address(RVA = "0x754F98", Offset = "0x754F98", VA = "0x754F98")]
			private set
			{
			}
		}

		[Token(Token = "0x1700003A")]
		public OVRSkeletonRenderer LeftHandSkeletonRenderer
		{
			[Token(Token = "0x600090B")]
			[Address(RVA = "0x755004", Offset = "0x755004", VA = "0x755004")]
			get
			{
				return null;
			}
			[Token(Token = "0x600090C")]
			[Address(RVA = "0x755038", Offset = "0x755038", VA = "0x755038")]
			private set
			{
			}
		}

		[Token(Token = "0x1700003B")]
		public OVRMesh LeftHandMesh
		{
			[Token(Token = "0x600090D")]
			[Address(RVA = "0x7550A4", Offset = "0x7550A4", VA = "0x7550A4")]
			get
			{
				return null;
			}
			[Token(Token = "0x600090E")]
			[Address(RVA = "0x7550D8", Offset = "0x7550D8", VA = "0x7550D8")]
			private set
			{
			}
		}

		[Token(Token = "0x1700003C")]
		public OVRMeshRenderer LeftHandMeshRenderer
		{
			[Token(Token = "0x600090F")]
			[Address(RVA = "0x755144", Offset = "0x755144", VA = "0x755144")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000910")]
			[Address(RVA = "0x755178", Offset = "0x755178", VA = "0x755178")]
			private set
			{
			}
		}

		[Token(Token = "0x1700003D")]
		public static HandsManager Instance
		{
			[Token(Token = "0x6000911")]
			[Address(RVA = "0x7551E4", Offset = "0x7551E4", VA = "0x7551E4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x442678", Offset = "0x442678")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000912")]
			[Address(RVA = "0x755230", Offset = "0x755230", VA = "0x755230")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x442688", Offset = "0x442688")]
			private set
			{
			}
		}

		[Token(Token = "0x6000913")]
		[Address(RVA = "0x755284", Offset = "0x755284", VA = "0x755284")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000914")]
		[Address(RVA = "0x755658", Offset = "0x755658", VA = "0x755658")]
		private void Update()
		{
		}

		[Token(Token = "0x6000915")]
		[Address(RVA = "0x7555E0", Offset = "0x7555E0", VA = "0x7555E0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x442698", Offset = "0x442698")]
		private IEnumerator FindSkeletonVisualGameObjects()
		{
			return null;
		}

		[Token(Token = "0x6000916")]
		[Address(RVA = "0x7556E0", Offset = "0x7556E0", VA = "0x7556E0")]
		public void SwitchVisualization()
		{
		}

		[Token(Token = "0x6000917")]
		[Address(RVA = "0x7557C4", Offset = "0x7557C4", VA = "0x7557C4")]
		private void SetToCurrentVisualMode()
		{
		}

		[Token(Token = "0x6000918")]
		[Address(RVA = "0x7559A4", Offset = "0x7559A4", VA = "0x7559A4")]
		public static List<OVRBoneCapsule> GetCapsulesPerBone(OVRSkeleton skeleton, OVRSkeleton.BoneId boneId)
		{
			return null;
		}

		[Token(Token = "0x6000919")]
		[Address(RVA = "0x750468", Offset = "0x750468", VA = "0x750468")]
		public bool IsInitialized()
		{
			return default(bool);
		}

		[Token(Token = "0x600091A")]
		[Address(RVA = "0x755BE0", Offset = "0x755BE0", VA = "0x755BE0")]
		public HandsManager()
		{
		}
	}
	[Token(Token = "0x2000112")]
	public abstract class Interactable : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x200029E")]
		public class InteractableStateArgsEvent : UnityEvent<InteractableStateArgs>
		{
			[Token(Token = "0x6000F27")]
			[Address(RVA = "0x864574", Offset = "0x864574", VA = "0x864574")]
			public InteractableStateArgsEvent()
			{
			}
		}

		[Token(Token = "0x40008E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected ColliderZone _proximityZoneCollider;

		[Token(Token = "0x40008E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		protected ColliderZone _contactZoneCollider;

		[Token(Token = "0x40008E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		protected ColliderZone _actionZoneCollider;

		[Token(Token = "0x40008EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public InteractableStateArgsEvent InteractableStateChanged;

		[Token(Token = "0x1700003E")]
		public ColliderZone ProximityCollider
		{
			[Token(Token = "0x600091B")]
			[Address(RVA = "0x1081BC0", Offset = "0x1081BC0", VA = "0x1081BC0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700003F")]
		public ColliderZone ContactCollider
		{
			[Token(Token = "0x600091C")]
			[Address(RVA = "0x1081BC8", Offset = "0x1081BC8", VA = "0x1081BC8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000040")]
		public ColliderZone ActionCollider
		{
			[Token(Token = "0x600091D")]
			[Address(RVA = "0x1081BD0", Offset = "0x1081BD0", VA = "0x1081BD0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000041")]
		public virtual int ValidToolTagsMask
		{
			[Token(Token = "0x600091E")]
			[Address(RVA = "0x1081BD8", Offset = "0x1081BD8", VA = "0x1081BD8", Slot = "4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x14000011")]
		public event Action<ColliderZoneArgs> ProximityZoneEvent
		{
			[Token(Token = "0x600091F")]
			[Address(RVA = "0x1081BE0", Offset = "0x1081BE0", VA = "0x1081BE0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4426F8", Offset = "0x4426F8")]
			add
			{
			}
			[Token(Token = "0x6000920")]
			[Address(RVA = "0x1081C80", Offset = "0x1081C80", VA = "0x1081C80")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x442708", Offset = "0x442708")]
			remove
			{
			}
		}

		[Token(Token = "0x14000012")]
		public event Action<ColliderZoneArgs> ContactZoneEvent
		{
			[Token(Token = "0x6000922")]
			[Address(RVA = "0x1081D90", Offset = "0x1081D90", VA = "0x1081D90")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x442718", Offset = "0x442718")]
			add
			{
			}
			[Token(Token = "0x6000923")]
			[Address(RVA = "0x1081E30", Offset = "0x1081E30", VA = "0x1081E30")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x442728", Offset = "0x442728")]
			remove
			{
			}
		}

		[Token(Token = "0x14000013")]
		public event Action<ColliderZoneArgs> ActionZoneEvent
		{
			[Token(Token = "0x6000925")]
			[Address(RVA = "0x1081F40", Offset = "0x1081F40", VA = "0x1081F40")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x442738", Offset = "0x442738")]
			add
			{
			}
			[Token(Token = "0x6000926")]
			[Address(RVA = "0x1081FE0", Offset = "0x1081FE0", VA = "0x1081FE0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x442748", Offset = "0x442748")]
			remove
			{
			}
		}

		[Token(Token = "0x6000921")]
		[Address(RVA = "0x1081D20", Offset = "0x1081D20", VA = "0x1081D20", Slot = "5")]
		protected virtual void OnProximityZoneEvent(ColliderZoneArgs args)
		{
		}

		[Token(Token = "0x6000924")]
		[Address(RVA = "0x1081ED0", Offset = "0x1081ED0", VA = "0x1081ED0", Slot = "6")]
		protected virtual void OnContactZoneEvent(ColliderZoneArgs args)
		{
		}

		[Token(Token = "0x6000927")]
		[Address(RVA = "0x1082080", Offset = "0x1082080", VA = "0x1082080", Slot = "7")]
		protected virtual void OnActionZoneEvent(ColliderZoneArgs args)
		{
		}

		[Token(Token = "0x6000928")]
		public abstract void UpdateCollisionDepth(InteractableTool interactableTool, InteractableCollisionDepth oldCollisionDepth, InteractableCollisionDepth newCollisionDepth);

		[Token(Token = "0x6000929")]
		[Address(RVA = "0x10820F0", Offset = "0x10820F0", VA = "0x10820F0", Slot = "9")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x600092A")]
		[Address(RVA = "0x108221C", Offset = "0x108221C", VA = "0x108221C", Slot = "10")]
		protected virtual void OnDestroy()
		{
		}

		[Token(Token = "0x600092B")]
		[Address(RVA = "0x1082348", Offset = "0x1082348", VA = "0x1082348")]
		protected Interactable()
		{
		}
	}
	[Token(Token = "0x2000113")]
	public enum InteractableCollisionDepth
	{
		[Token(Token = "0x40008EC")]
		None,
		[Token(Token = "0x40008ED")]
		Proximity,
		[Token(Token = "0x40008EE")]
		Contact,
		[Token(Token = "0x40008EF")]
		Action
	}
	[Token(Token = "0x2000114")]
	public enum InteractableState
	{
		[Token(Token = "0x40008F1")]
		Default,
		[Token(Token = "0x40008F2")]
		ProximityState,
		[Token(Token = "0x40008F3")]
		ContactState,
		[Token(Token = "0x40008F4")]
		ActionState
	}
	[Token(Token = "0x2000115")]
	public class InteractableStateArgs : EventArgs
	{
		[Token(Token = "0x40008F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly Interactable Interactable;

		[Token(Token = "0x40008F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly InteractableTool Tool;

		[Token(Token = "0x40008F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly InteractableState OldInteractableState;

		[Token(Token = "0x40008F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public readonly InteractableState NewInteractableState;

		[Token(Token = "0x40008F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly ColliderZoneArgs ColliderArgs;

		[Token(Token = "0x600092C")]
		[Address(RVA = "0x10824A0", Offset = "0x10824A0", VA = "0x10824A0")]
		public InteractableStateArgs(Interactable interactable, InteractableTool tool, InteractableState newInteractableState, InteractableState oldState, ColliderZoneArgs colliderArgs)
		{
		}
	}
	[Token(Token = "0x2000116")]
	public class InteractableRegistry : MonoBehaviour
	{
		[Token(Token = "0x40008FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static HashSet<Interactable> _interactables;

		[Token(Token = "0x17000042")]
		public static HashSet<Interactable> Interactables
		{
			[Token(Token = "0x600092D")]
			[Address(RVA = "0x10823A8", Offset = "0x10823A8", VA = "0x10823A8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600092E")]
		[Address(RVA = "0x1082150", Offset = "0x1082150", VA = "0x1082150")]
		public static void RegisterInteractable(Interactable interactable)
		{
		}

		[Token(Token = "0x600092F")]
		[Address(RVA = "0x108227C", Offset = "0x108227C", VA = "0x108227C")]
		public static void UnregisterInteractable(Interactable interactable)
		{
		}

		[Token(Token = "0x6000930")]
		[Address(RVA = "0x108240C", Offset = "0x108240C", VA = "0x108240C")]
		public InteractableRegistry()
		{
		}
	}
	[Token(Token = "0x2000117")]
	public class InteractableToolsCreator : MonoBehaviour
	{
		[Token(Token = "0x200029F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x43F538", Offset = "0x43F538")]
		private sealed class <AttachToolsToHands>d__3 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000F77")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000F78")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000F79")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Transform[] toolObjects;

			[Token(Token = "0x4000F7A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public bool isRightHand;

			[Token(Token = "0x4000F7B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public InteractableToolsCreator <>4__this;

			[Token(Token = "0x4000F7C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private HandsManager <handsManagerObj>5__2;

			[Token(Token = "0x4000F7D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private HashSet<Transform>.Enumerator <>7__wrap2;

			[Token(Token = "0x4000F7E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			private Transform <toolObject>5__4;

			[Token(Token = "0x4000F7F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			private OVRSkeleton <handSkeletonToAttachTo>5__5;

			[Token(Token = "0x170000B6")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000F2C")]
				[Address(RVA = "0x864AD8", Offset = "0x864AD8", VA = "0x864AD8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170000B7")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000F2E")]
				[Address(RVA = "0x864B20", Offset = "0x864B20", VA = "0x864B20", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000F28")]
			[Address(RVA = "0x8645C0", Offset = "0x8645C0", VA = "0x8645C0")]
			[DebuggerHidden]
			public <AttachToolsToHands>d__3(int <>1__state)
			{
			}

			[Token(Token = "0x6000F29")]
			[Address(RVA = "0x8645EC", Offset = "0x8645EC", VA = "0x8645EC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000F2A")]
			[Address(RVA = "0x86465C", Offset = "0x86465C", VA = "0x86465C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000F2B")]
			[Address(RVA = "0x864608", Offset = "0x864608", VA = "0x864608")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x6000F2D")]
			[Address(RVA = "0x864AE0", Offset = "0x864AE0", VA = "0x864AE0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40008FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Transform[] LeftHandTools;

		[Token(Token = "0x40008FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Transform[] RightHandTools;

		[Token(Token = "0x6000932")]
		[Address(RVA = "0x108319C", Offset = "0x108319C", VA = "0x108319C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000933")]
		[Address(RVA = "0x1083218", Offset = "0x1083218", VA = "0x1083218")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x442758", Offset = "0x442758")]
		private IEnumerator AttachToolsToHands(Transform[] toolObjects, bool isRightHand)
		{
			return null;
		}

		[Token(Token = "0x6000934")]
		[Address(RVA = "0x10832B8", Offset = "0x10832B8", VA = "0x10832B8")]
		private void AttachToolToHandTransform(Transform tool, bool isRightHanded)
		{
		}

		[Token(Token = "0x6000935")]
		[Address(RVA = "0x10833A0", Offset = "0x10833A0", VA = "0x10833A0")]
		public InteractableToolsCreator()
		{
		}
	}
	[Token(Token = "0x2000118")]
	public class InteractableToolsInputRouter : MonoBehaviour
	{
		[Token(Token = "0x40008FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static InteractableToolsInputRouter _instance;

		[Token(Token = "0x40008FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool _leftPinch;

		[Token(Token = "0x40008FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		private bool _rightPinch;

		[Token(Token = "0x4000900")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private HashSet<InteractableTool> _leftHandNearTools;

		[Token(Token = "0x4000901")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private HashSet<InteractableTool> _leftHandFarTools;

		[Token(Token = "0x4000902")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private HashSet<InteractableTool> _rightHandNearTools;

		[Token(Token = "0x4000903")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private HashSet<InteractableTool> _rightHandFarTools;

		[Token(Token = "0x17000043")]
		public static InteractableToolsInputRouter Instance
		{
			[Token(Token = "0x6000936")]
			[Address(RVA = "0x10833A8", Offset = "0x10833A8", VA = "0x10833A8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000937")]
		[Address(RVA = "0x1083528", Offset = "0x1083528", VA = "0x1083528")]
		public void RegisterInteractableTool(InteractableTool interactableTool)
		{
		}

		[Token(Token = "0x6000938")]
		[Address(RVA = "0x10835D0", Offset = "0x10835D0", VA = "0x10835D0")]
		public void UnregisterInteractableTool(InteractableTool interactableTool)
		{
		}

		[Token(Token = "0x6000939")]
		[Address(RVA = "0x1083678", Offset = "0x1083678", VA = "0x1083678")]
		private void Update()
		{
		}

		[Token(Token = "0x600093A")]
		[Address(RVA = "0x1083940", Offset = "0x1083940", VA = "0x1083940")]
		private bool UpdateToolsAndEnableState(HashSet<InteractableTool> tools, bool toolsAreEnabledThisFrame)
		{
			return default(bool);
		}

		[Token(Token = "0x600093B")]
		[Address(RVA = "0x1083988", Offset = "0x1083988", VA = "0x1083988")]
		private bool UpdateTools(HashSet<InteractableTool> tools, bool resetCollisionData = false)
		{
			return default(bool);
		}

		[Token(Token = "0x600093C")]
		[Address(RVA = "0x1083C38", Offset = "0x1083C38", VA = "0x1083C38")]
		private void ToggleToolsEnableState(HashSet<InteractableTool> tools, bool enableState)
		{
		}

		[Token(Token = "0x600093D")]
		[Address(RVA = "0x1083D84", Offset = "0x1083D84", VA = "0x1083D84")]
		public InteractableToolsInputRouter()
		{
		}
	}
	[Token(Token = "0x2000119")]
	public class FingerTipPokeTool : InteractableTool
	{
		[Token(Token = "0x20002A0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x43F548", Offset = "0x43F548")]
		private sealed class <AttachTriggerLogic>d__21 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000F80")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000F81")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000F82")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public FingerTipPokeTool <>4__this;

			[Token(Token = "0x170000B8")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000F32")]
				[Address(RVA = "0x85E5D0", Offset = "0x85E5D0", VA = "0x85E5D0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170000B9")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000F34")]
				[Address(RVA = "0x85E618", Offset = "0x85E618", VA = "0x85E618", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000F2F")]
			[Address(RVA = "0x85E19C", Offset = "0x85E19C", VA = "0x85E19C")]
			[DebuggerHidden]
			public <AttachTriggerLogic>d__21(int <>1__state)
			{
			}

			[Token(Token = "0x6000F30")]
			[Address(RVA = "0x85E1C8", Offset = "0x85E1C8", VA = "0x85E1C8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000F31")]
			[Address(RVA = "0x85E1CC", Offset = "0x85E1CC", VA = "0x85E1CC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000F33")]
			[Address(RVA = "0x85E5D8", Offset = "0x85E5D8", VA = "0x85E5D8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000904")]
		private const int NUM_VELOCITY_FRAMES = 10;

		[Token(Token = "0x4000905")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private FingerTipPokeToolView _fingerTipPokeToolView;

		[Token(Token = "0x4000906")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private OVRPlugin.HandFinger _fingerToFollow;

		[Token(Token = "0x4000907")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Vector3[] _velocityFrames;

		[Token(Token = "0x4000908")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private int _currVelocityFrame;

		[Token(Token = "0x4000909")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private bool _sampledMaxFramesAlready;

		[Token(Token = "0x400090A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Vector3 _position;

		[Token(Token = "0x400090B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private BoneCapsuleTriggerLogic[] _boneCapsuleTriggerLogic;

		[Token(Token = "0x400090C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private float _lastScale;

		[Token(Token = "0x400090D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		private bool _isInitialized;

		[Token(Token = "0x400090E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private OVRBoneCapsule _capsuleToTrack;

		[Token(Token = "0x17000044")]
		public override InteractableToolTags ToolTags
		{
			[Token(Token = "0x600093E")]
			[Address(RVA = "0x750020", Offset = "0x750020", VA = "0x750020", Slot = "4")]
			get
			{
				return default(InteractableToolTags);
			}
		}

		[Token(Token = "0x17000045")]
		public override ToolInputState ToolInputState
		{
			[Token(Token = "0x600093F")]
			[Address(RVA = "0x750028", Offset = "0x750028", VA = "0x750028", Slot = "5")]
			get
			{
				return default(ToolInputState);
			}
		}

		[Token(Token = "0x17000046")]
		public override bool IsFarFieldTool
		{
			[Token(Token = "0x6000940")]
			[Address(RVA = "0x750030", Offset = "0x750030", VA = "0x750030", Slot = "6")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000047")]
		public override bool EnableState
		{
			[Token(Token = "0x6000941")]
			[Address(RVA = "0x750038", Offset = "0x750038", VA = "0x750038", Slot = "10")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000942")]
			[Address(RVA = "0x750064", Offset = "0x750064", VA = "0x750064", Slot = "11")]
			set
			{
			}
		}

		[Token(Token = "0x6000943")]
		[Address(RVA = "0x7500A0", Offset = "0x7500A0", VA = "0x7500A0", Slot = "12")]
		public override void Initialize()
		{
		}

		[Token(Token = "0x6000944")]
		[Address(RVA = "0x750158", Offset = "0x750158", VA = "0x750158")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x4427B8", Offset = "0x4427B8")]
		private IEnumerator AttachTriggerLogic()
		{
			return null;
		}

		[Token(Token = "0x6000945")]
		[Address(RVA = "0x7501D0", Offset = "0x7501D0", VA = "0x7501D0")]
		private void Update()
		{
		}

		[Token(Token = "0x6000946")]
		[Address(RVA = "0x750660", Offset = "0x750660", VA = "0x750660")]
		private void UpdateAverageVelocity()
		{
		}

		[Token(Token = "0x6000947")]
		[Address(RVA = "0x7507EC", Offset = "0x7507EC", VA = "0x7507EC")]
		private void CheckAndUpdateScale()
		{
		}

		[Token(Token = "0x6000948")]
		[Address(RVA = "0x7508E0", Offset = "0x7508E0", VA = "0x7508E0", Slot = "7")]
		public override List<InteractableCollisionInfo> GetNextIntersectingObjects()
		{
			return null;
		}

		[Token(Token = "0x6000949")]
		[Address(RVA = "0x750BB4", Offset = "0x750BB4", VA = "0x750BB4", Slot = "8")]
		public override void FocusOnInteractable(Interactable focusedInteractable, ColliderZone colliderZone)
		{
		}

		[Token(Token = "0x600094A")]
		[Address(RVA = "0x750BB8", Offset = "0x750BB8", VA = "0x750BB8", Slot = "9")]
		public override void DeFocus()
		{
		}

		[Token(Token = "0x600094B")]
		[Address(RVA = "0x750BBC", Offset = "0x750BBC", VA = "0x750BBC")]
		public FingerTipPokeTool()
		{
		}
	}
	[Token(Token = "0x200011A")]
	public class FingerTipPokeToolView : MonoBehaviour, InteractableToolView
	{
		[Token(Token = "0x400090F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private MeshRenderer _sphereMeshRenderer;

		[Token(Token = "0x4000910")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4409E8", Offset = "0x4409E8")]
		private InteractableTool <InteractableTool>k__BackingField;

		[Token(Token = "0x4000911")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4409F8", Offset = "0x4409F8")]
		private bool <ToolActivateState>k__BackingField;

		[Token(Token = "0x4000912")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x440A08", Offset = "0x440A08")]
		private float <SphereRadius>k__BackingField;

		[Token(Token = "0x17000048")]
		public InteractableTool InteractableTool
		{
			[Token(Token = "0x600094C")]
			[Address(RVA = "0x750BD4", Offset = "0x750BD4", VA = "0x750BD4", Slot = "4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x442818", Offset = "0x442818")]
			get
			{
				return null;
			}
			[Token(Token = "0x600094D")]
			[Address(RVA = "0x750BDC", Offset = "0x750BDC", VA = "0x750BDC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x442828", Offset = "0x442828")]
			set
			{
			}
		}

		[Token(Token = "0x17000049")]
		public bool EnableState
		{
			[Token(Token = "0x600094E")]
			[Address(RVA = "0x750BE4", Offset = "0x750BE4", VA = "0x750BE4", Slot = "6")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600094F")]
			[Address(RVA = "0x750C00", Offset = "0x750C00", VA = "0x750C00", Slot = "7")]
			set
			{
			}
		}

		[Token(Token = "0x1700004A")]
		public bool ToolActivateState
		{
			[Token(Token = "0x6000950")]
			[Address(RVA = "0x750C20", Offset = "0x750C20", VA = "0x750C20", Slot = "8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x442838", Offset = "0x442838")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000951")]
			[Address(RVA = "0x750C28", Offset = "0x750C28", VA = "0x750C28", Slot = "9")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x442848", Offset = "0x442848")]
			set
			{
			}
		}

		[Token(Token = "0x1700004B")]
		public float SphereRadius
		{
			[Token(Token = "0x6000952")]
			[Address(RVA = "0x750C34", Offset = "0x750C34", VA = "0x750C34")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x442858", Offset = "0x442858")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000953")]
			[Address(RVA = "0x750C3C", Offset = "0x750C3C", VA = "0x750C3C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x442868", Offset = "0x442868")]
			private set
			{
			}
		}

		[Token(Token = "0x6000954")]
		[Address(RVA = "0x750C44", Offset = "0x750C44", VA = "0x750C44")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000955")]
		[Address(RVA = "0x750C8C", Offset = "0x750C8C", VA = "0x750C8C", Slot = "5")]
		public void SetFocusedInteractable(Interactable interactable)
		{
		}

		[Token(Token = "0x6000956")]
		[Address(RVA = "0x750C90", Offset = "0x750C90", VA = "0x750C90")]
		public FingerTipPokeToolView()
		{
		}
	}
	[Token(Token = "0x200011B")]
	[Flags]
	public enum InteractableToolTags
	{
		[Token(Token = "0x4000914")]
		None = 0,
		[Token(Token = "0x4000915")]
		Ray = 1,
		[Token(Token = "0x4000916")]
		Poke = 4,
		[Token(Token = "0x4000917")]
		All = -1
	}
	[Token(Token = "0x200011C")]
	public enum ToolInputState
	{
		[Token(Token = "0x4000919")]
		Inactive,
		[Token(Token = "0x400091A")]
		PrimaryInputDown,
		[Token(Token = "0x400091B")]
		PrimaryInputDownStay,
		[Token(Token = "0x400091C")]
		PrimaryInputUp
	}
	[Token(Token = "0x200011D")]
	public class InteractableCollisionInfo
	{
		[Token(Token = "0x400091D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public ColliderZone InteractableCollider;

		[Token(Token = "0x400091E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public InteractableCollisionDepth CollisionDepth;

		[Token(Token = "0x400091F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public InteractableTool CollidingTool;

		[Token(Token = "0x6000957")]
		[Address(RVA = "0x1082350", Offset = "0x1082350", VA = "0x1082350")]
		public InteractableCollisionInfo(ColliderZone collider, InteractableCollisionDepth collisionDepth, InteractableTool collidingTool)
		{
		}
	}
	[Token(Token = "0x200011E")]
	public abstract class InteractableTool : MonoBehaviour
	{
		[Token(Token = "0x4000920")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x440A18", Offset = "0x440A18")]
		private bool <IsRightHandedTool>k__BackingField;

		[Token(Token = "0x4000921")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x440A28", Offset = "0x440A28")]
		private Vector3 <Velocity>k__BackingField;

		[Token(Token = "0x4000922")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x440A38", Offset = "0x440A38")]
		private Vector3 <InteractionPosition>k__BackingField;

		[Token(Token = "0x4000923")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		protected List<InteractableCollisionInfo> _currentIntersectingObjects;

		[Token(Token = "0x4000924")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private List<Interactable> _addedInteractables;

		[Token(Token = "0x4000925")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private List<Interactable> _removedInteractables;

		[Token(Token = "0x4000926")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private List<Interactable> _remainingInteractables;

		[Token(Token = "0x4000927")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Dictionary<Interactable, InteractableCollisionInfo> _currInteractableToCollisionInfos;

		[Token(Token = "0x4000928")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Dictionary<Interactable, InteractableCollisionInfo> _prevInteractableToCollisionInfos;

		[Token(Token = "0x1700004C")]
		public Transform ToolTransform
		{
			[Token(Token = "0x6000958")]
			[Address(RVA = "0x1082564", Offset = "0x1082564", VA = "0x1082564")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700004D")]
		public bool IsRightHandedTool
		{
			[Token(Token = "0x6000959")]
			[Address(RVA = "0x108256C", Offset = "0x108256C", VA = "0x108256C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x442878", Offset = "0x442878")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600095A")]
			[Address(RVA = "0x1082574", Offset = "0x1082574", VA = "0x1082574")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x442888", Offset = "0x442888")]
			set
			{
			}
		}

		[Token(Token = "0x1700004E")]
		public abstract InteractableToolTags ToolTags
		{
			[Token(Token = "0x600095B")]
			get;
		}

		[Token(Token = "0x1700004F")]
		public abstract ToolInputState ToolInputState
		{
			[Token(Token = "0x600095C")]
			get;
		}

		[Token(Token = "0x17000050")]
		public abstract bool IsFarFieldTool
		{
			[Token(Token = "0x600095D")]
			get;
		}

		[Token(Token = "0x17000051")]
		public Vector3 Velocity
		{
			[Token(Token = "0x600095E")]
			[Address(RVA = "0x1082580", Offset = "0x1082580", VA = "0x1082580")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x442898", Offset = "0x442898")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x600095F")]
			[Address(RVA = "0x108258C", Offset = "0x108258C", VA = "0x108258C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4428A8", Offset = "0x4428A8")]
			protected set
			{
			}
		}

		[Token(Token = "0x17000052")]
		public Vector3 InteractionPosition
		{
			[Token(Token = "0x6000960")]
			[Address(RVA = "0x1082598", Offset = "0x1082598", VA = "0x1082598")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4428B8", Offset = "0x4428B8")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6000961")]
			[Address(RVA = "0x10825A4", Offset = "0x10825A4", VA = "0x10825A4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4428C8", Offset = "0x4428C8")]
			protected set
			{
			}
		}

		[Token(Token = "0x17000053")]
		public abstract bool EnableState
		{
			[Token(Token = "0x6000966")]
			get;
			[Token(Token = "0x6000967")]
			set;
		}

		[Token(Token = "0x6000962")]
		[Address(RVA = "0x10825B0", Offset = "0x10825B0", VA = "0x10825B0")]
		public List<InteractableCollisionInfo> GetCurrentIntersectingObjects()
		{
			return null;
		}

		[Token(Token = "0x6000963")]
		public abstract List<InteractableCollisionInfo> GetNextIntersectingObjects();

		[Token(Token = "0x6000964")]
		public abstract void FocusOnInteractable(Interactable focusedInteractable, ColliderZone colliderZone);

		[Token(Token = "0x6000965")]
		public abstract void DeFocus();

		[Token(Token = "0x6000968")]
		public abstract void Initialize();

		[Token(Token = "0x6000969")]
		[Address(RVA = "0x10825B8", Offset = "0x10825B8", VA = "0x10825B8")]
		public KeyValuePair<Interactable, InteractableCollisionInfo> GetFirstCurrentCollisionInfo()
		{
			return default(KeyValuePair<Interactable, InteractableCollisionInfo>);
		}

		[Token(Token = "0x600096A")]
		[Address(RVA = "0x1082604", Offset = "0x1082604", VA = "0x1082604")]
		public void ClearAllCurrentCollisionInfos()
		{
		}

		[Token(Token = "0x600096B")]
		[Address(RVA = "0x1082658", Offset = "0x1082658", VA = "0x1082658", Slot = "13")]
		public virtual void UpdateCurrentCollisionsBasedOnDepth()
		{
		}

		[Token(Token = "0x600096C")]
		[Address(RVA = "0x1082908", Offset = "0x1082908", VA = "0x1082908", Slot = "14")]
		public virtual void UpdateLatestCollisionData()
		{
		}

		[Token(Token = "0x600096D")]
		[Address(RVA = "0x108300C", Offset = "0x108300C", VA = "0x108300C")]
		protected InteractableTool()
		{
		}
	}
	[Token(Token = "0x200011F")]
	public interface InteractableToolView
	{
		[Token(Token = "0x17000054")]
		InteractableTool InteractableTool
		{
			[Token(Token = "0x600096E")]
			get;
		}

		[Token(Token = "0x17000055")]
		bool EnableState
		{
			[Token(Token = "0x6000970")]
			get;
			[Token(Token = "0x6000971")]
			set;
		}

		[Token(Token = "0x17000056")]
		bool ToolActivateState
		{
			[Token(Token = "0x6000972")]
			get;
			[Token(Token = "0x6000973")]
			set;
		}

		[Token(Token = "0x600096F")]
		void SetFocusedInteractable(Interactable interactable);
	}
	[Token(Token = "0x2000120")]
	public class PinchStateModule
	{
		[Token(Token = "0x20002A1")]
		private enum PinchState
		{
			[Token(Token = "0x4000F84")]
			None,
			[Token(Token = "0x4000F85")]
			PinchDown,
			[Token(Token = "0x4000F86")]
			PinchStay,
			[Token(Token = "0x4000F87")]
			PinchUp
		}

		[Token(Token = "0x4000929")]
		private const float PINCH_STRENGTH_THRESHOLD = 1f;

		[Token(Token = "0x400092A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private PinchState _currPinchState;

		[Token(Token = "0x400092B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Interactable _firstFocusedInteractable;

		[Token(Token = "0x17000057")]
		public bool PinchUpAndDownOnFocusedObject
		{
			[Token(Token = "0x6000974")]
			[Address(RVA = "0xE63190", Offset = "0xE63190", VA = "0xE63190")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000058")]
		public bool PinchSteadyOnFocusedObject
		{
			[Token(Token = "0x6000975")]
			[Address(RVA = "0xE63218", Offset = "0xE63218", VA = "0xE63218")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000059")]
		public bool PinchDownOnFocusedObject
		{
			[Token(Token = "0x6000976")]
			[Address(RVA = "0xE632A0", Offset = "0xE632A0", VA = "0xE632A0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000977")]
		[Address(RVA = "0xE63328", Offset = "0xE63328", VA = "0xE63328")]
		public PinchStateModule()
		{
		}

		[Token(Token = "0x6000978")]
		[Address(RVA = "0xE6335C", Offset = "0xE6335C", VA = "0xE6335C")]
		public void UpdateState(OVRHand hand, Interactable currFocusedInteractable)
		{
		}
	}
	[Token(Token = "0x2000121")]
	public class RayTool : InteractableTool
	{
		[Token(Token = "0x400092C")]
		private const float MINIMUM_RAY_CAST_DISTANCE = 0.8f;

		[Token(Token = "0x400092D")]
		private const float COLLIDER_RADIUS = 0.01f;

		[Token(Token = "0x400092E")]
		private const int NUM_MAX_PRIMARY_HITS = 10;

		[Token(Token = "0x400092F")]
		private const int NUM_MAX_SECONDARY_HITS = 25;

		[Token(Token = "0x4000930")]
		private const int NUM_COLLIDERS_TO_TEST = 20;

		[Token(Token = "0x4000931")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private RayToolView _rayToolView;

		[Token(Token = "0x4000932")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x440A58", Offset = "0x440A58")]
		[SerializeField]
		private float _coneAngleDegrees;

		[Token(Token = "0x4000933")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		[SerializeField]
		private float _farFieldMaxDistance;

		[Token(Token = "0x4000934")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private PinchStateModule _pinchStateModule;

		[Token(Token = "0x4000935")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Interactable _focusedInteractable;

		[Token(Token = "0x4000936")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Collider[] _collidersOverlapped;

		[Token(Token = "0x4000937")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Interactable _currInteractableCastedAgainst;

		[Token(Token = "0x4000938")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private float _coneAngleReleaseDegrees;

		[Token(Token = "0x4000939")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private RaycastHit[] _primaryHits;

		[Token(Token = "0x400093A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private Collider[] _secondaryOverlapResults;

		[Token(Token = "0x400093B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private bool _initialized;

		[Token(Token = "0x1700005A")]
		public override InteractableToolTags ToolTags
		{
			[Token(Token = "0x6000979")]
			[Address(RVA = "0x8B576C", Offset = "0x8B576C", VA = "0x8B576C", Slot = "4")]
			get
			{
				return default(InteractableToolTags);
			}
		}

		[Token(Token = "0x1700005B")]
		public override ToolInputState ToolInputState
		{
			[Token(Token = "0x600097A")]
			[Address(RVA = "0x8B5774", Offset = "0x8B5774", VA = "0x8B5774", Slot = "5")]
			get
			{
				return default(ToolInputState);
			}
		}

		[Token(Token = "0x1700005C")]
		public override bool IsFarFieldTool
		{
			[Token(Token = "0x600097B")]
			[Address(RVA = "0x8B57E8", Offset = "0x8B57E8", VA = "0x8B57E8", Slot = "6")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700005D")]
		public override bool EnableState
		{
			[Token(Token = "0x600097C")]
			[Address(RVA = "0x8B57F0", Offset = "0x8B57F0", VA = "0x8B57F0", Slot = "10")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600097D")]
			[Address(RVA = "0x8B5834", Offset = "0x8B5834", VA = "0x8B5834", Slot = "11")]
			set
			{
			}
		}

		[Token(Token = "0x600097E")]
		[Address(RVA = "0x8B58A8", Offset = "0x8B58A8", VA = "0x8B58A8", Slot = "12")]
		public override void Initialize()
		{
		}

		[Token(Token = "0x600097F")]
		[Address(RVA = "0x8B5910", Offset = "0x8B5910", VA = "0x8B5910")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000980")]
		[Address(RVA = "0x8B59B4", Offset = "0x8B59B4", VA = "0x8B59B4")]
		private void Update()
		{
		}

		[Token(Token = "0x6000981")]
		[Address(RVA = "0x8B5C78", Offset = "0x8B5C78", VA = "0x8B5C78")]
		private Vector3 GetRayCastOrigin()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000982")]
		[Address(RVA = "0x8B5D00", Offset = "0x8B5D00", VA = "0x8B5D00", Slot = "7")]
		public override List<InteractableCollisionInfo> GetNextIntersectingObjects()
		{
			return null;
		}

		[Token(Token = "0x6000983")]
		[Address(RVA = "0x8B60D0", Offset = "0x8B60D0", VA = "0x8B60D0")]
		private bool HasRayReleasedInteractable(Interactable focusedInteractable)
		{
			return default(bool);
		}

		[Token(Token = "0x6000984")]
		[Address(RVA = "0x8B61E0", Offset = "0x8B61E0", VA = "0x8B61E0")]
		private Interactable FindTargetInteractable()
		{
			return null;
		}

		[Token(Token = "0x6000985")]
		[Address(RVA = "0x8B6304", Offset = "0x8B6304", VA = "0x8B6304")]
		private Interactable FindPrimaryRaycastHit(Vector3 rayOrigin, Vector3 rayDirection)
		{
			return null;
		}

		[Token(Token = "0x6000986")]
		[Address(RVA = "0x8B6608", Offset = "0x8B6608", VA = "0x8B6608")]
		private Interactable FindInteractableViaConeTest(Vector3 rayOrigin, Vector3 rayDirection)
		{
			return null;
		}

		[Token(Token = "0x6000987")]
		[Address(RVA = "0x8B699C", Offset = "0x8B699C", VA = "0x8B699C", Slot = "8")]
		public override void FocusOnInteractable(Interactable focusedInteractable, ColliderZone colliderZone)
		{
		}

		[Token(Token = "0x6000988")]
		[Address(RVA = "0x8B6A84", Offset = "0x8B6A84", VA = "0x8B6A84", Slot = "9")]
		public override void DeFocus()
		{
		}

		[Token(Token = "0x6000989")]
		[Address(RVA = "0x8B6AC0", Offset = "0x8B6AC0", VA = "0x8B6AC0")]
		public RayTool()
		{
		}
	}
	[Token(Token = "0x2000122")]
	public class RayToolView : MonoBehaviour, InteractableToolView
	{
		[Token(Token = "0x400093C")]
		private const int NUM_RAY_LINE_POSITIONS = 25;

		[Token(Token = "0x400093D")]
		private const float DEFAULT_RAY_CAST_DISTANCE = 3f;

		[Token(Token = "0x400093E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Transform _targetTransform;

		[Token(Token = "0x400093F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private LineRenderer _lineRenderer;

		[Token(Token = "0x4000940")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool _toolActivateState;

		[Token(Token = "0x4000941")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Transform _focusedTransform;

		[Token(Token = "0x4000942")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Vector3[] linePositions;

		[Token(Token = "0x4000943")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Gradient _oldColorGradient;

		[Token(Token = "0x4000944")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Gradient _highLightColorGradient;

		[Token(Token = "0x4000945")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x440ACC", Offset = "0x440ACC")]
		private InteractableTool <InteractableTool>k__BackingField;

		[Token(Token = "0x1700005E")]
		public bool EnableState
		{
			[Token(Token = "0x600098A")]
			[Address(RVA = "0x8B5818", Offset = "0x8B5818", VA = "0x8B5818", Slot = "6")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600098B")]
			[Address(RVA = "0x8B5850", Offset = "0x8B5850", VA = "0x8B5850", Slot = "7")]
			set
			{
			}
		}

		[Token(Token = "0x1700005F")]
		public bool ToolActivateState
		{
			[Token(Token = "0x600098C")]
			[Address(RVA = "0x8B6BB8", Offset = "0x8B6BB8", VA = "0x8B6BB8", Slot = "8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600098D")]
			[Address(RVA = "0x8B5C3C", Offset = "0x8B5C3C", VA = "0x8B5C3C", Slot = "9")]
			set
			{
			}
		}

		[Token(Token = "0x17000060")]
		public InteractableTool InteractableTool
		{
			[Token(Token = "0x600098F")]
			[Address(RVA = "0x8B6E18", Offset = "0x8B6E18", VA = "0x8B6E18", Slot = "4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4428D8", Offset = "0x4428D8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000990")]
			[Address(RVA = "0x8B6E20", Offset = "0x8B6E20", VA = "0x8B6E20")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4428E8", Offset = "0x4428E8")]
			set
			{
			}
		}

		[Token(Token = "0x600098E")]
		[Address(RVA = "0x8B6BC0", Offset = "0x8B6BC0", VA = "0x8B6BC0")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000991")]
		[Address(RVA = "0x8B69D8", Offset = "0x8B69D8", VA = "0x8B69D8", Slot = "5")]
		public void SetFocusedInteractable(Interactable interactable)
		{
		}

		[Token(Token = "0x6000992")]
		[Address(RVA = "0x8B6E28", Offset = "0x8B6E28", VA = "0x8B6E28")]
		private void Update()
		{
		}

		[Token(Token = "0x6000993")]
		[Address(RVA = "0x8B709C", Offset = "0x8B709C", VA = "0x8B709C")]
		public static Vector3 GetPointOnBezierCurve(Vector3 p0, Vector3 p1, Vector3 p2, Vector3 p3, float t)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000994")]
		[Address(RVA = "0x8B718C", Offset = "0x8B718C", VA = "0x8B718C")]
		public RayToolView()
		{
		}
	}
	[Token(Token = "0x2000123")]
	public class DistanceGrabberSample : MonoBehaviour
	{
		[Token(Token = "0x4000946")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool useSpherecast;

		[Token(Token = "0x4000947")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		private bool allowGrabThroughWalls;

		[Token(Token = "0x4000948")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private DistanceGrabber[] m_grabbers;

		[Token(Token = "0x17000061")]
		public bool UseSpherecast
		{
			[Token(Token = "0x6000995")]
			[Address(RVA = "0x74E0C0", Offset = "0x74E0C0", VA = "0x74E0C0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000996")]
			[Address(RVA = "0x74E0C8", Offset = "0x74E0C8", VA = "0x74E0C8")]
			set
			{
			}
		}

		[Token(Token = "0x17000062")]
		public bool AllowGrabThroughWalls
		{
			[Token(Token = "0x6000997")]
			[Address(RVA = "0x74E150", Offset = "0x74E150", VA = "0x74E150")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000998")]
			[Address(RVA = "0x74E158", Offset = "0x74E158", VA = "0x74E158")]
			set
			{
			}
		}

		[Token(Token = "0x6000999")]
		[Address(RVA = "0x74E1C4", Offset = "0x74E1C4", VA = "0x74E1C4")]
		private void Start()
		{
		}

		[Token(Token = "0x600099A")]
		[Address(RVA = "0x74E488", Offset = "0x74E488", VA = "0x74E488")]
		public void ToggleSphereCasting(Toggle t)
		{
		}

		[Token(Token = "0x600099B")]
		[Address(RVA = "0x74E498", Offset = "0x74E498", VA = "0x74E498")]
		public void ToggleGrabThroughWalls(Toggle t)
		{
		}

		[Token(Token = "0x600099C")]
		[Address(RVA = "0x74E4A8", Offset = "0x74E4A8", VA = "0x74E4A8")]
		public DistanceGrabberSample()
		{
		}
	}
	[Token(Token = "0x2000124")]
	public class ControllerBoxController : MonoBehaviour
	{
		[Token(Token = "0x4000949")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private TrainLocomotive _locomotive;

		[Token(Token = "0x400094A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private CowController _cowController;

		[Token(Token = "0x600099D")]
		[Address(RVA = "0x92B4D8", Offset = "0x92B4D8", VA = "0x92B4D8")]
		private void Awake()
		{
		}

		[Token(Token = "0x600099E")]
		[Address(RVA = "0x92B4DC", Offset = "0x92B4DC", VA = "0x92B4DC")]
		public void StartStopStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x600099F")]
		[Address(RVA = "0x92B514", Offset = "0x92B514", VA = "0x92B514")]
		public void DecreaseSpeedStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x60009A0")]
		[Address(RVA = "0x92B54C", Offset = "0x92B54C", VA = "0x92B54C")]
		public void IncreaseSpeedStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x60009A1")]
		[Address(RVA = "0x92B584", Offset = "0x92B584", VA = "0x92B584")]
		public void SmokeButtonStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x60009A2")]
		[Address(RVA = "0x92B5BC", Offset = "0x92B5BC", VA = "0x92B5BC")]
		public void WhistleButtonStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x60009A3")]
		[Address(RVA = "0x92B5F4", Offset = "0x92B5F4", VA = "0x92B5F4")]
		public void ReverseButtonStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x60009A4")]
		[Address(RVA = "0x92B62C", Offset = "0x92B62C", VA = "0x92B62C")]
		public void SwitchVisualization(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x60009A5")]
		[Address(RVA = "0x92B6A0", Offset = "0x92B6A0", VA = "0x92B6A0")]
		public void GoMoo(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x60009A6")]
		[Address(RVA = "0x92B710", Offset = "0x92B710", VA = "0x92B710")]
		public ControllerBoxController()
		{
		}
	}
	[Token(Token = "0x2000125")]
	public class CowController : MonoBehaviour
	{
		[Token(Token = "0x400094B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Animation _cowAnimation;

		[Token(Token = "0x400094C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private AudioSource _mooCowAudioSource;

		[Token(Token = "0x60009A7")]
		[Address(RVA = "0x92B9F4", Offset = "0x92B9F4", VA = "0x92B9F4")]
		private void Start()
		{
		}

		[Token(Token = "0x60009A8")]
		[Address(RVA = "0x92B9F8", Offset = "0x92B9F8", VA = "0x92B9F8")]
		public void PlayMooSound()
		{
		}

		[Token(Token = "0x60009A9")]
		[Address(RVA = "0x92B6D4", Offset = "0x92B6D4", VA = "0x92B6D4")]
		public void GoMooCowGo()
		{
		}

		[Token(Token = "0x60009AA")]
		[Address(RVA = "0x92BA38", Offset = "0x92BA38", VA = "0x92BA38")]
		public CowController()
		{
		}
	}
	[Token(Token = "0x2000126")]
	public class PanelHMDFollower : MonoBehaviour
	{
		[Token(Token = "0x20002A2")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x43F558", Offset = "0x43F558")]
		private sealed class <LerpToHMD>d__13 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000F88")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000F89")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000F8A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public PanelHMDFollower <>4__this;

			[Token(Token = "0x4000F8B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private Vector3 <newPanelPosition>5__2;

			[Token(Token = "0x4000F8C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private float <startTime>5__3;

			[Token(Token = "0x4000F8D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private float <endTime>5__4;

			[Token(Token = "0x170000BA")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000F38")]
				[Address(RVA = "0x850CD4", Offset = "0x850CD4", VA = "0x850CD4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170000BB")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000F3A")]
				[Address(RVA = "0x850D1C", Offset = "0x850D1C", VA = "0x850D1C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000F35")]
			[Address(RVA = "0x850AE8", Offset = "0x850AE8", VA = "0x850AE8")]
			[DebuggerHidden]
			public <LerpToHMD>d__13(int <>1__state)
			{
			}

			[Token(Token = "0x6000F36")]
			[Address(RVA = "0x850B14", Offset = "0x850B14", VA = "0x850B14", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000F37")]
			[Address(RVA = "0x850B18", Offset = "0x850B18", VA = "0x850B18", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000F39")]
			[Address(RVA = "0x850CDC", Offset = "0x850CDC", VA = "0x850CDC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400094D")]
		private const float TOTAL_DURATION = 3f;

		[Token(Token = "0x400094E")]
		private const float HMD_MOVEMENT_THRESHOLD = 0.3f;

		[Token(Token = "0x400094F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private float _maxDistance;

		[Token(Token = "0x4000950")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private float _minDistance;

		[Token(Token = "0x4000951")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float _minZDistance;

		[Token(Token = "0x4000952")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private OVRCameraRig _cameraRig;

		[Token(Token = "0x4000953")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Vector3 _panelInitialPosition;

		[Token(Token = "0x4000954")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Coroutine _coroutine;

		[Token(Token = "0x4000955")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Vector3 _prevPos;

		[Token(Token = "0x4000956")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private Vector3 _lastMovedToPos;

		[Token(Token = "0x60009AB")]
		[Address(RVA = "0xE62690", Offset = "0xE62690", VA = "0xE62690")]
		private void Awake()
		{
		}

		[Token(Token = "0x60009AC")]
		[Address(RVA = "0xE6273C", Offset = "0xE6273C", VA = "0xE6273C")]
		private void Update()
		{
		}

		[Token(Token = "0x60009AD")]
		[Address(RVA = "0xE6298C", Offset = "0xE6298C", VA = "0xE6298C")]
		private Vector3 CalculateIdealAnchorPosition()
		{
			return default(Vector3);
		}

		[Token(Token = "0x60009AE")]
		[Address(RVA = "0xE62914", Offset = "0xE62914", VA = "0xE62914")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x4428F8", Offset = "0x4428F8")]
		private IEnumerator LerpToHMD()
		{
			return null;
		}

		[Token(Token = "0x60009AF")]
		[Address(RVA = "0xE629D8", Offset = "0xE629D8", VA = "0xE629D8")]
		public PanelHMDFollower()
		{
		}
	}
	[Token(Token = "0x2000127")]
	public class SelectionCylinder : MonoBehaviour
	{
		[Token(Token = "0x20002A3")]
		public enum SelectionState
		{
			[Token(Token = "0x4000F8F")]
			Off,
			[Token(Token = "0x4000F90")]
			Selected,
			[Token(Token = "0x4000F91")]
			Highlighted
		}

		[Token(Token = "0x4000957")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private MeshRenderer _selectionMeshRenderer;

		[Token(Token = "0x4000958")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static int _colorId;

		[Token(Token = "0x4000959")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Material[] _selectionMaterials;

		[Token(Token = "0x400095A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Color[] _defaultSelectionColors;

		[Token(Token = "0x400095B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Color[] _highlightColors;

		[Token(Token = "0x400095C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private SelectionState _currSelectionState;

		[Token(Token = "0x17000063")]
		public SelectionState CurrSelectionState
		{
			[Token(Token = "0x60009B0")]
			[Address(RVA = "0x8B9FCC", Offset = "0x8B9FCC", VA = "0x8B9FCC")]
			get
			{
				return default(SelectionState);
			}
			[Token(Token = "0x60009B1")]
			[Address(RVA = "0x8B9FD4", Offset = "0x8B9FD4", VA = "0x8B9FD4")]
			set
			{
			}
		}

		[Token(Token = "0x60009B2")]
		[Address(RVA = "0x8BA158", Offset = "0x8BA158", VA = "0x8BA158")]
		private void Awake()
		{
		}

		[Token(Token = "0x60009B3")]
		[Address(RVA = "0x8BA35C", Offset = "0x8BA35C", VA = "0x8BA35C")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60009B4")]
		[Address(RVA = "0x8BA05C", Offset = "0x8BA05C", VA = "0x8BA05C")]
		private void AffectSelectionColor(Color[] newColors)
		{
		}

		[Token(Token = "0x60009B5")]
		[Address(RVA = "0x8BA448", Offset = "0x8BA448", VA = "0x8BA448")]
		public SelectionCylinder()
		{
		}
	}
	[Token(Token = "0x2000128")]
	public class TrackSegment : MonoBehaviour
	{
		[Token(Token = "0x20002A4")]
		public enum SegmentType
		{
			[Token(Token = "0x4000F93")]
			Straight,
			[Token(Token = "0x4000F94")]
			LeftTurn,
			[Token(Token = "0x4000F95")]
			RightTurn,
			[Token(Token = "0x4000F96")]
			Switch
		}

		[Token(Token = "0x400095D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private SegmentType _segmentType;

		[Token(Token = "0x400095E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private MeshFilter _straight;

		[Token(Token = "0x400095F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private MeshFilter _leftTurn;

		[Token(Token = "0x4000960")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private MeshFilter _rightTurn;

		[Token(Token = "0x4000961")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float _gridSize;

		[Token(Token = "0x4000962")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private int _subDivCount;

		[Token(Token = "0x4000963")]
		private const float _originalGridSize = 0.8f;

		[Token(Token = "0x4000964")]
		private const float _trackWidth = 0.15f;

		[Token(Token = "0x4000965")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private GameObject _mesh;

		[Token(Token = "0x4000966")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x440BAC", Offset = "0x440BAC")]
		private float <StartDistance>k__BackingField;

		[Token(Token = "0x4000967")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Pose _p1;

		[Token(Token = "0x4000968")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Pose _p2;

		[Token(Token = "0x4000969")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Pose _endPose;

		[Token(Token = "0x17000064")]
		public float StartDistance
		{
			[Token(Token = "0x60009B7")]
			[Address(RVA = "0x81C000", Offset = "0x81C000", VA = "0x81C000")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x442958", Offset = "0x442958")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60009B8")]
			[Address(RVA = "0x81C008", Offset = "0x81C008", VA = "0x81C008")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x442968", Offset = "0x442968")]
			set
			{
			}
		}

		[Token(Token = "0x17000065")]
		public float GridSize
		{
			[Token(Token = "0x60009B9")]
			[Address(RVA = "0x81C010", Offset = "0x81C010", VA = "0x81C010")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60009BA")]
			[Address(RVA = "0x81C018", Offset = "0x81C018", VA = "0x81C018")]
			private set
			{
			}
		}

		[Token(Token = "0x17000066")]
		public int SubDivCount
		{
			[Token(Token = "0x60009BB")]
			[Address(RVA = "0x81C020", Offset = "0x81C020", VA = "0x81C020")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60009BC")]
			[Address(RVA = "0x81C028", Offset = "0x81C028", VA = "0x81C028")]
			set
			{
			}
		}

		[Token(Token = "0x17000067")]
		public SegmentType Type
		{
			[Token(Token = "0x60009BD")]
			[Address(RVA = "0x81C030", Offset = "0x81C030", VA = "0x81C030")]
			get
			{
				return default(SegmentType);
			}
		}

		[Token(Token = "0x17000068")]
		public Pose EndPose
		{
			[Token(Token = "0x60009BE")]
			[Address(RVA = "0x81C038", Offset = "0x81C038", VA = "0x81C038")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000069")]
		public float Radius
		{
			[Token(Token = "0x60009BF")]
			[Address(RVA = "0x81C394", Offset = "0x81C394", VA = "0x81C394")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700006A")]
		public float SegmentLength
		{
			[Token(Token = "0x60009C1")]
			[Address(RVA = "0x81C0A0", Offset = "0x81C0A0", VA = "0x81C0A0")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x60009C0")]
		[Address(RVA = "0x81C3A4", Offset = "0x81C3A4", VA = "0x81C3A4")]
		public float setGridSize(float size)
		{
			return default(float);
		}

		[Token(Token = "0x60009C2")]
		[Address(RVA = "0x81C3BC", Offset = "0x81C3BC", VA = "0x81C3BC")]
		private void Awake()
		{
		}

		[Token(Token = "0x60009C3")]
		[Address(RVA = "0x81C0E0", Offset = "0x81C0E0", VA = "0x81C0E0")]
		public void UpdatePose(float distanceIntoSegment, Pose pose)
		{
		}

		[Token(Token = "0x60009C4")]
		[Address(RVA = "0x81C3C0", Offset = "0x81C3C0", VA = "0x81C3C0")]
		private void Update()
		{
		}

		[Token(Token = "0x60009C5")]
		[Address(RVA = "0x81C3C4", Offset = "0x81C3C4", VA = "0x81C3C4")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60009C6")]
		[Address(RVA = "0x81C42C", Offset = "0x81C42C", VA = "0x81C42C")]
		private void DrawDebugLines()
		{
		}

		[Token(Token = "0x60009C7")]
		[Address(RVA = "0x81CCF4", Offset = "0x81CCF4", VA = "0x81CCF4")]
		public void RegenerateTrackAndMesh()
		{
		}

		[Token(Token = "0x60009C8")]
		[Address(RVA = "0x81CFA0", Offset = "0x81CFA0", VA = "0x81CFA0")]
		public TrackSegment()
		{
		}
	}
	[Token(Token = "0x2000129")]
	public class TrainButtonVisualController : MonoBehaviour
	{
		[Token(Token = "0x20002A5")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x43F568", Offset = "0x43F568")]
		private sealed class <ResetPosition>d__26 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000F97")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000F98")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000F99")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public TrainButtonVisualController <>4__this;

			[Token(Token = "0x4000F9A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <startTime>5__2;

			[Token(Token = "0x4000F9B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float <endTime>5__3;

			[Token(Token = "0x170000BC")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000F3E")]
				[Address(RVA = "0x852AC4", Offset = "0x852AC4", VA = "0x852AC4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170000BD")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000F40")]
				[Address(RVA = "0x852B0C", Offset = "0x852B0C", VA = "0x852B0C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000F3B")]
			[Address(RVA = "0x852920", Offset = "0x852920", VA = "0x852920")]
			[DebuggerHidden]
			public <ResetPosition>d__26(int <>1__state)
			{
			}

			[Token(Token = "0x6000F3C")]
			[Address(RVA = "0x85294C", Offset = "0x85294C", VA = "0x85294C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000F3D")]
			[Address(RVA = "0x852950", Offset = "0x852950", VA = "0x852950", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000F3F")]
			[Address(RVA = "0x852ACC", Offset = "0x852ACC", VA = "0x852ACC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400096A")]
		private const float LERP_TO_OLD_POS_DURATION = 1f;

		[Token(Token = "0x400096B")]
		private const float LOCAL_SIZE_HALVED = 0.5f;

		[Token(Token = "0x400096C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private MeshRenderer _meshRenderer;

		[Token(Token = "0x400096D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private MeshRenderer _glowRenderer;

		[Token(Token = "0x400096E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private ButtonController _buttonController;

		[Token(Token = "0x400096F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Color _buttonContactColor;

		[Token(Token = "0x4000970")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Color _buttonActionColor;

		[Token(Token = "0x4000971")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private AudioSource _audioSource;

		[Token(Token = "0x4000972")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private AudioClip _actionSoundEffect;

		[Token(Token = "0x4000973")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private Transform _buttonContactTransform;

		[Token(Token = "0x4000974")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private float _contactMaxDisplacementDistance;

		[Token(Token = "0x4000975")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Material _buttonMaterial;

		[Token(Token = "0x4000976")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Color _buttonDefaultColor;

		[Token(Token = "0x4000977")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private int _materialColorId;

		[Token(Token = "0x4000978")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private bool _buttonInContactOrActionStates;

		[Token(Token = "0x4000979")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Coroutine _lerpToOldPositionCr;

		[Token(Token = "0x400097A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Vector3 _oldPosition;

		[Token(Token = "0x60009C9")]
		[Address(RVA = "0x81D070", Offset = "0x81D070", VA = "0x81D070")]
		private void Awake()
		{
		}

		[Token(Token = "0x60009CA")]
		[Address(RVA = "0x81D12C", Offset = "0x81D12C", VA = "0x81D12C")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60009CB")]
		[Address(RVA = "0x81D1DC", Offset = "0x81D1DC", VA = "0x81D1DC")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60009CC")]
		[Address(RVA = "0x81D354", Offset = "0x81D354", VA = "0x81D354")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60009CD")]
		[Address(RVA = "0x81D51C", Offset = "0x81D51C", VA = "0x81D51C")]
		private void ActionOrInContactZoneStayEvent(ColliderZoneArgs collisionArgs)
		{
		}

		[Token(Token = "0x60009CE")]
		[Address(RVA = "0x81D604", Offset = "0x81D604", VA = "0x81D604")]
		private void InteractableStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x60009CF")]
		[Address(RVA = "0x81D818", Offset = "0x81D818", VA = "0x81D818")]
		private void PlaySound(AudioClip clip)
		{
		}

		[Token(Token = "0x60009D0")]
		[Address(RVA = "0x81D718", Offset = "0x81D718", VA = "0x81D718")]
		private void StopResetLerping()
		{
		}

		[Token(Token = "0x60009D1")]
		[Address(RVA = "0x81D72C", Offset = "0x81D72C", VA = "0x81D72C")]
		private void LerpToOldPosition()
		{
		}

		[Token(Token = "0x60009D2")]
		[Address(RVA = "0x81D870", Offset = "0x81D870", VA = "0x81D870")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x442978", Offset = "0x442978")]
		private IEnumerator ResetPosition()
		{
			return null;
		}

		[Token(Token = "0x60009D3")]
		[Address(RVA = "0x81D8E8", Offset = "0x81D8E8", VA = "0x81D8E8")]
		public TrainButtonVisualController()
		{
		}
	}
	[Token(Token = "0x200012A")]
	public class TrainCar : TrainCarBase
	{
		[Token(Token = "0x400097B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private TrainCarBase _parentLocomotive;

		[Token(Token = "0x400097C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		protected float _distanceBehindParent;

		[Token(Token = "0x1700006B")]
		public float DistanceBehindParentScaled
		{
			[Token(Token = "0x60009D4")]
			[Address(RVA = "0x81D998", Offset = "0x81D998", VA = "0x81D998")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x60009D5")]
		[Address(RVA = "0x81D9A8", Offset = "0x81D9A8", VA = "0x81D9A8", Slot = "4")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x60009D6")]
		[Address(RVA = "0x81D9B0", Offset = "0x81D9B0", VA = "0x81D9B0", Slot = "5")]
		public override void UpdatePosition()
		{
		}

		[Token(Token = "0x60009D7")]
		[Address(RVA = "0x81DCF4", Offset = "0x81DCF4", VA = "0x81DCF4")]
		public TrainCar()
		{
		}
	}
	[Token(Token = "0x200012B")]
	public abstract class TrainCarBase : MonoBehaviour
	{
		[Token(Token = "0x400097D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Vector3 OFFSET;

		[Token(Token = "0x400097E")]
		private const float WHEEL_RADIUS = 0.027f;

		[Token(Token = "0x400097F")]
		private const float TWO_PI = (float)Math.PI * 2f;

		[Token(Token = "0x4000980")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		protected Transform _frontWheels;

		[Token(Token = "0x4000981")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		protected Transform _rearWheels;

		[Token(Token = "0x4000982")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		protected TrainTrack _trainTrack;

		[Token(Token = "0x4000983")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		protected Transform[] _individualWheels;

		[Token(Token = "0x4000984")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x440CAC", Offset = "0x440CAC")]
		private float <Distance>k__BackingField;

		[Token(Token = "0x4000985")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		protected float scale;

		[Token(Token = "0x4000986")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Pose _frontPose;

		[Token(Token = "0x4000987")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Pose _rearPose;

		[Token(Token = "0x1700006C")]
		public float Distance
		{
			[Token(Token = "0x60009D8")]
			[Address(RVA = "0x81DE04", Offset = "0x81DE04", VA = "0x81DE04")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4429D8", Offset = "0x4429D8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60009D9")]
			[Address(RVA = "0x81DE0C", Offset = "0x81DE0C", VA = "0x81DE0C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4429E8", Offset = "0x4429E8")]
			protected set
			{
			}
		}

		[Token(Token = "0x1700006D")]
		public float Scale
		{
			[Token(Token = "0x60009DA")]
			[Address(RVA = "0x81DE14", Offset = "0x81DE14", VA = "0x81DE14")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60009DB")]
			[Address(RVA = "0x81DE1C", Offset = "0x81DE1C", VA = "0x81DE1C")]
			set
			{
			}
		}

		[Token(Token = "0x60009DC")]
		[Address(RVA = "0x81D9AC", Offset = "0x81D9AC", VA = "0x81D9AC", Slot = "4")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x60009DD")]
		[Address(RVA = "0x81DE24", Offset = "0x81DE24", VA = "0x81DE24")]
		public void UpdatePose(float distance, TrainCarBase train, Pose pose)
		{
		}

		[Token(Token = "0x60009DE")]
		[Address(RVA = "0x81D9F8", Offset = "0x81D9F8", VA = "0x81D9F8")]
		protected void UpdateCarPosition()
		{
		}

		[Token(Token = "0x60009DF")]
		[Address(RVA = "0x81DC1C", Offset = "0x81DC1C", VA = "0x81DC1C")]
		protected void RotateCarWheels()
		{
		}

		[Token(Token = "0x60009E0")]
		public abstract void UpdatePosition();

		[Token(Token = "0x60009E1")]
		[Address(RVA = "0x81DD60", Offset = "0x81DD60", VA = "0x81DD60")]
		protected TrainCarBase()
		{
		}
	}
	[Token(Token = "0x200012C")]
	public class TrainCrossingController : MonoBehaviour
	{
		[Token(Token = "0x20002A6")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x43F578", Offset = "0x43F578")]
		private sealed class <AnimateCrossing>d__15 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000F9C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000F9D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000F9E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public TrainCrossingController <>4__this;

			[Token(Token = "0x4000F9F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float animationLength;

			[Token(Token = "0x4000FA0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float <animationEndTime>5__2;

			[Token(Token = "0x4000FA1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <lightBlinkDuration>5__3;

			[Token(Token = "0x4000FA2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private float <lightBlinkStartTime>5__4;

			[Token(Token = "0x4000FA3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private float <lightBlinkEndTime>5__5;

			[Token(Token = "0x4000FA4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private Material <lightToBlinkOn>5__6;

			[Token(Token = "0x4000FA5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private Material <lightToBlinkOff>5__7;

			[Token(Token = "0x4000FA6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			private Color <onColor>5__8;

			[Token(Token = "0x4000FA7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			private Color <offColor>5__9;

			[Token(Token = "0x170000BE")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000F44")]
				[Address(RVA = "0x852DAC", Offset = "0x852DAC", VA = "0x852DAC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170000BF")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000F46")]
				[Address(RVA = "0x852DF4", Offset = "0x852DF4", VA = "0x852DF4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000F41")]
			[Address(RVA = "0x852B14", Offset = "0x852B14", VA = "0x852B14")]
			[DebuggerHidden]
			public <AnimateCrossing>d__15(int <>1__state)
			{
			}

			[Token(Token = "0x6000F42")]
			[Address(RVA = "0x852B40", Offset = "0x852B40", VA = "0x852B40", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000F43")]
			[Address(RVA = "0x852B44", Offset = "0x852B44", VA = "0x852B44", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000F45")]
			[Address(RVA = "0x852DB4", Offset = "0x852DB4", VA = "0x852DB4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000988")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private AudioSource _audioSource;

		[Token(Token = "0x4000989")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private AudioClip[] _crossingSounds;

		[Token(Token = "0x400098A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private MeshRenderer _lightSide1Renderer;

		[Token(Token = "0x400098B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private MeshRenderer _lightSide2Renderer;

		[Token(Token = "0x400098C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private SelectionCylinder _selectionCylinder;

		[Token(Token = "0x400098D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Material _lightsSide1Mat;

		[Token(Token = "0x400098E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Material _lightsSide2Mat;

		[Token(Token = "0x400098F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private int _colorId;

		[Token(Token = "0x4000990")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Coroutine _xingAnimationCr;

		[Token(Token = "0x4000991")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private InteractableTool _toolInteractingWithMe;

		[Token(Token = "0x60009E3")]
		[Address(RVA = "0x81DFC4", Offset = "0x81DFC4", VA = "0x81DFC4")]
		private void Awake()
		{
		}

		[Token(Token = "0x60009E4")]
		[Address(RVA = "0x81E024", Offset = "0x81E024", VA = "0x81E024")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60009E5")]
		[Address(RVA = "0x81E12C", Offset = "0x81E12C", VA = "0x81E12C")]
		public void CrossingButtonStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x60009E6")]
		[Address(RVA = "0x81E284", Offset = "0x81E284", VA = "0x81E284")]
		private void Update()
		{
		}

		[Token(Token = "0x60009E7")]
		[Address(RVA = "0x81E18C", Offset = "0x81E18C", VA = "0x81E18C")]
		private void ActivateTrainCrossing()
		{
		}

		[Token(Token = "0x60009E8")]
		[Address(RVA = "0x81E360", Offset = "0x81E360", VA = "0x81E360")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x4429F8", Offset = "0x4429F8")]
		private IEnumerator AnimateCrossing(float animationLength)
		{
			return null;
		}

		[Token(Token = "0x60009E9")]
		[Address(RVA = "0x81E3E8", Offset = "0x81E3E8", VA = "0x81E3E8")]
		private void AffectMaterials(Material[] materials, Color newColor)
		{
		}

		[Token(Token = "0x60009EA")]
		[Address(RVA = "0x81E494", Offset = "0x81E494", VA = "0x81E494")]
		private void ToggleLightObjects(bool enableState)
		{
		}

		[Token(Token = "0x60009EB")]
		[Address(RVA = "0x81E4F4", Offset = "0x81E4F4", VA = "0x81E4F4")]
		public TrainCrossingController()
		{
		}
	}
	[Token(Token = "0x200012D")]
	public class TrainLocomotive : TrainCarBase
	{
		[Token(Token = "0x20002A7")]
		private enum EngineSoundState
		{
			[Token(Token = "0x4000FA9")]
			Start,
			[Token(Token = "0x4000FAA")]
			AccelerateOrSetProperSpeed,
			[Token(Token = "0x4000FAB")]
			Stop
		}

		[Token(Token = "0x20002A8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x43F588", Offset = "0x43F588")]
		private sealed class <StartStopTrain>d__34 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000FAC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000FAD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000FAE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public bool startTrain;

			[Token(Token = "0x4000FAF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public TrainLocomotive <>4__this;

			[Token(Token = "0x4000FB0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <endSpeed>5__2;

			[Token(Token = "0x4000FB1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private float <timePeriodForSpeedChange>5__3;

			[Token(Token = "0x4000FB2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private float <startTime>5__4;

			[Token(Token = "0x4000FB3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private float <endTime>5__5;

			[Token(Token = "0x4000FB4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private float <startSpeed>5__6;

			[Token(Token = "0x170000C0")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000F4A")]
				[Address(RVA = "0x853070", Offset = "0x853070", VA = "0x853070", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170000C1")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000F4C")]
				[Address(RVA = "0x8530B8", Offset = "0x8530B8", VA = "0x8530B8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000F47")]
			[Address(RVA = "0x852DFC", Offset = "0x852DFC", VA = "0x852DFC")]
			[DebuggerHidden]
			public <StartStopTrain>d__34(int <>1__state)
			{
			}

			[Token(Token = "0x6000F48")]
			[Address(RVA = "0x852E28", Offset = "0x852E28", VA = "0x852E28", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000F49")]
			[Address(RVA = "0x852E2C", Offset = "0x852E2C", VA = "0x852E2C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000F4B")]
			[Address(RVA = "0x853078", Offset = "0x853078", VA = "0x853078", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000992")]
		private const float MIN_SPEED = 0.2f;

		[Token(Token = "0x4000993")]
		private const float MAX_SPEED = 2.7f;

		[Token(Token = "0x4000994")]
		private const float SMOKE_SPEED_MULTIPLIER = 8f;

		[Token(Token = "0x4000995")]
		private const int MAX_PARTICLES_MULTIPLIER = 3;

		[Token(Token = "0x4000996")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x440D0C", Offset = "0x440D0C")]
		protected float _initialSpeed;

		[Token(Token = "0x4000997")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private GameObject _startStopButton;

		[Token(Token = "0x4000998")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private GameObject _decreaseSpeedButton;

		[Token(Token = "0x4000999")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private GameObject _increaseSpeedButton;

		[Token(Token = "0x400099A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private GameObject _smokeButton;

		[Token(Token = "0x400099B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private GameObject _whistleButton;

		[Token(Token = "0x400099C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private GameObject _reverseButton;

		[Token(Token = "0x400099D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private AudioSource _whistleAudioSource;

		[Token(Token = "0x400099E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private AudioClip _whistleSound;

		[Token(Token = "0x400099F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		private AudioSource _engineAudioSource;

		[Token(Token = "0x40009A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		private AudioClip[] _accelerationSounds;

		[Token(Token = "0x40009A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[SerializeField]
		private AudioClip[] _decelerationSounds;

		[Token(Token = "0x40009A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[SerializeField]
		private AudioClip _startUpSound;

		[Token(Token = "0x40009A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[SerializeField]
		private AudioSource _smokeStackAudioSource;

		[Token(Token = "0x40009A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[SerializeField]
		private AudioClip _smokeSound;

		[Token(Token = "0x40009A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[SerializeField]
		private ParticleSystem _smoke1;

		[Token(Token = "0x40009A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[SerializeField]
		private ParticleSystem _smoke2;

		[Token(Token = "0x40009A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[SerializeField]
		private TrainCarBase[] _childCars;

		[Token(Token = "0x40009A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private bool _isMoving;

		[Token(Token = "0x40009A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE1")]
		private bool _reverse;

		[Token(Token = "0x40009AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		private float _currentSpeed;

		[Token(Token = "0x40009AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private float _speedDiv;

		[Token(Token = "0x40009AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
		private float _standardRateOverTimeMultiplier;

		[Token(Token = "0x40009AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private int _standardMaxParticles;

		[Token(Token = "0x40009AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private Coroutine _startStopTrainCr;

		[Token(Token = "0x60009EC")]
		[Address(RVA = "0x81E550", Offset = "0x81E550", VA = "0x81E550")]
		private void Start()
		{
		}

		[Token(Token = "0x60009ED")]
		[Address(RVA = "0x81E6BC", Offset = "0x81E6BC", VA = "0x81E6BC")]
		private void Update()
		{
		}

		[Token(Token = "0x60009EE")]
		[Address(RVA = "0x81E6C8", Offset = "0x81E6C8", VA = "0x81E6C8", Slot = "5")]
		public override void UpdatePosition()
		{
		}

		[Token(Token = "0x60009EF")]
		[Address(RVA = "0x81E818", Offset = "0x81E818", VA = "0x81E818")]
		public void StartStopStateChanged()
		{
		}

		[Token(Token = "0x60009F0")]
		[Address(RVA = "0x81E630", Offset = "0x81E630", VA = "0x81E630")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x442A58", Offset = "0x442A58")]
		private IEnumerator StartStopTrain(bool startTrain)
		{
			return null;
		}

		[Token(Token = "0x60009F1")]
		[Address(RVA = "0x81E878", Offset = "0x81E878", VA = "0x81E878")]
		private float PlayEngineSound(EngineSoundState engineSoundState)
		{
			return default(float);
		}

		[Token(Token = "0x60009F2")]
		[Address(RVA = "0x81E7B4", Offset = "0x81E7B4", VA = "0x81E7B4")]
		private void UpdateDistance()
		{
		}

		[Token(Token = "0x60009F3")]
		[Address(RVA = "0x81EA7C", Offset = "0x81EA7C", VA = "0x81EA7C")]
		public void DecreaseSpeedStateChanged()
		{
		}

		[Token(Token = "0x60009F4")]
		[Address(RVA = "0x81EBA0", Offset = "0x81EBA0", VA = "0x81EBA0")]
		public void IncreaseSpeedStateChanged()
		{
		}

		[Token(Token = "0x60009F5")]
		[Address(RVA = "0x81EAE8", Offset = "0x81EAE8", VA = "0x81EAE8")]
		private void UpdateSmokeEmissionBasedOnSpeed()
		{
		}

		[Token(Token = "0x60009F6")]
		[Address(RVA = "0x81EC0C", Offset = "0x81EC0C", VA = "0x81EC0C")]
		private float GetCurrentSmokeEmission()
		{
			return default(float);
		}

		[Token(Token = "0x60009F7")]
		[Address(RVA = "0x81EC2C", Offset = "0x81EC2C", VA = "0x81EC2C")]
		public void SmokeButtonStateChanged()
		{
		}

		[Token(Token = "0x60009F8")]
		[Address(RVA = "0x81ECB8", Offset = "0x81ECB8", VA = "0x81ECB8")]
		public void WhistleButtonStateChanged()
		{
		}

		[Token(Token = "0x60009F9")]
		[Address(RVA = "0x81ED70", Offset = "0x81ED70", VA = "0x81ED70")]
		public void ReverseButtonStateChanged()
		{
		}

		[Token(Token = "0x60009FA")]
		[Address(RVA = "0x81ED80", Offset = "0x81ED80", VA = "0x81ED80")]
		public TrainLocomotive()
		{
		}
	}
	[Token(Token = "0x200012E")]
	public class TrainTrack : MonoBehaviour
	{
		[Token(Token = "0x40009AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private float _gridSize;

		[Token(Token = "0x40009B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private int _subDivCount;

		[Token(Token = "0x40009B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Transform _segmentParent;

		[Token(Token = "0x40009B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Transform _trainParent;

		[Token(Token = "0x40009B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private bool _regnerateTrackMeshOnAwake;

		[Token(Token = "0x40009B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float _trainLength;

		[Token(Token = "0x40009B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private TrackSegment[] _trackSegments;

		[Token(Token = "0x1700006E")]
		public float TrackLength
		{
			[Token(Token = "0x60009FB")]
			[Address(RVA = "0x81EDE8", Offset = "0x81EDE8", VA = "0x81EDE8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60009FC")]
			[Address(RVA = "0x81EDF0", Offset = "0x81EDF0", VA = "0x81EDF0")]
			private set
			{
			}
		}

		[Token(Token = "0x60009FD")]
		[Address(RVA = "0x81EDF8", Offset = "0x81EDF8", VA = "0x81EDF8")]
		private void Awake()
		{
		}

		[Token(Token = "0x60009FE")]
		[Address(RVA = "0x81DEA4", Offset = "0x81DEA4", VA = "0x81DEA4")]
		public TrackSegment GetSegment(float distance)
		{
			return null;
		}

		[Token(Token = "0x60009FF")]
		[Address(RVA = "0x81EDFC", Offset = "0x81EDFC", VA = "0x81EDFC")]
		public void Regenerate()
		{
		}

		[Token(Token = "0x6000A00")]
		[Address(RVA = "0x81F010", Offset = "0x81F010", VA = "0x81F010")]
		private void SetScale(float ratio)
		{
		}

		[Token(Token = "0x6000A01")]
		[Address(RVA = "0x81F10C", Offset = "0x81F10C", VA = "0x81F10C")]
		public TrainTrack()
		{
		}
	}
	[Token(Token = "0x200012F")]
	public class Pose
	{
		[Token(Token = "0x40009B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Vector3 Position;

		[Token(Token = "0x40009B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Quaternion Rotation;

		[Token(Token = "0x6000A02")]
		[Address(RVA = "0xE634F0", Offset = "0xE634F0", VA = "0xE634F0")]
		public Pose()
		{
		}

		[Token(Token = "0x6000A03")]
		[Address(RVA = "0xE63534", Offset = "0xE63534", VA = "0xE63534")]
		public Pose(Vector3 position, Quaternion rotation)
		{
		}
	}
	[Token(Token = "0x2000130")]
	public class WindmillBladesController : MonoBehaviour
	{
		[Token(Token = "0x20002A9")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x43F598", Offset = "0x43F598")]
		private sealed class <LerpToSpeed>d__17 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000FB5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000FB6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000FB7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public WindmillBladesController <>4__this;

			[Token(Token = "0x4000FB8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float goalSpeed;

			[Token(Token = "0x4000FB9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float <totalTime>5__2;

			[Token(Token = "0x4000FBA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <startSpeed>5__3;

			[Token(Token = "0x170000C2")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000F50")]
				[Address(RVA = "0x8533C0", Offset = "0x8533C0", VA = "0x8533C0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170000C3")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000F52")]
				[Address(RVA = "0x853408", Offset = "0x853408", VA = "0x853408", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000F4D")]
			[Address(RVA = "0x8531F0", Offset = "0x8531F0", VA = "0x8531F0")]
			[DebuggerHidden]
			public <LerpToSpeed>d__17(int <>1__state)
			{
			}

			[Token(Token = "0x6000F4E")]
			[Address(RVA = "0x85321C", Offset = "0x85321C", VA = "0x85321C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000F4F")]
			[Address(RVA = "0x853220", Offset = "0x853220", VA = "0x853220", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000F51")]
			[Address(RVA = "0x8533C8", Offset = "0x8533C8", VA = "0x8533C8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20002AA")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x43F5A8", Offset = "0x43F5A8")]
		private sealed class <PlaySoundDelayed>d__18 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000FBB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000FBC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000FBD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public WindmillBladesController <>4__this;

			[Token(Token = "0x4000FBE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public AudioClip initial;

			[Token(Token = "0x4000FBF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public float timeDelayAfterInitial;

			[Token(Token = "0x4000FC0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public AudioClip clip;

			[Token(Token = "0x170000C4")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000F56")]
				[Address(RVA = "0x853518", Offset = "0x853518", VA = "0x853518", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170000C5")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000F58")]
				[Address(RVA = "0x853560", Offset = "0x853560", VA = "0x853560", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000F53")]
			[Address(RVA = "0x853410", Offset = "0x853410", VA = "0x853410")]
			[DebuggerHidden]
			public <PlaySoundDelayed>d__18(int <>1__state)
			{
			}

			[Token(Token = "0x6000F54")]
			[Address(RVA = "0x85343C", Offset = "0x85343C", VA = "0x85343C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000F55")]
			[Address(RVA = "0x853440", Offset = "0x853440", VA = "0x853440", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000F57")]
			[Address(RVA = "0x853520", Offset = "0x853520", VA = "0x853520", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40009B8")]
		private const float MAX_TIME = 1f;

		[Token(Token = "0x40009B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private AudioSource _audioSource;

		[Token(Token = "0x40009BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private AudioClip _windMillRotationSound;

		[Token(Token = "0x40009BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private AudioClip _windMillStartSound;

		[Token(Token = "0x40009BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private AudioClip _windMillStopSound;

		[Token(Token = "0x40009BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x440EF4", Offset = "0x440EF4")]
		private bool <IsMoving>k__BackingField;

		[Token(Token = "0x40009BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float _currentSpeed;

		[Token(Token = "0x40009BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Coroutine _lerpSpeedCoroutine;

		[Token(Token = "0x40009C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Coroutine _audioChangeCr;

		[Token(Token = "0x40009C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Quaternion _originalRotation;

		[Token(Token = "0x40009C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private float _rotAngle;

		[Token(Token = "0x1700006F")]
		public bool IsMoving
		{
			[Token(Token = "0x6000A04")]
			[Address(RVA = "0x8232E4", Offset = "0x8232E4", VA = "0x8232E4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x442AB8", Offset = "0x442AB8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000A05")]
			[Address(RVA = "0x8232EC", Offset = "0x8232EC", VA = "0x8232EC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x442AC8", Offset = "0x442AC8")]
			private set
			{
			}
		}

		[Token(Token = "0x6000A06")]
		[Address(RVA = "0x8232F8", Offset = "0x8232F8", VA = "0x8232F8")]
		private void Start()
		{
		}

		[Token(Token = "0x6000A07")]
		[Address(RVA = "0x823334", Offset = "0x823334", VA = "0x823334")]
		private void Update()
		{
		}

		[Token(Token = "0x6000A08")]
		[Address(RVA = "0x823418", Offset = "0x823418", VA = "0x823418")]
		public void SetMoveState(bool newMoveState, float goalSpeed)
		{
		}

		[Token(Token = "0x6000A09")]
		[Address(RVA = "0x82348C", Offset = "0x82348C", VA = "0x82348C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x442AD8", Offset = "0x442AD8")]
		private IEnumerator LerpToSpeed(float goalSpeed)
		{
			return null;
		}

		[Token(Token = "0x6000A0A")]
		[Address(RVA = "0x823514", Offset = "0x823514", VA = "0x823514")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x442B38", Offset = "0x442B38")]
		private IEnumerator PlaySoundDelayed(AudioClip initial, AudioClip clip, float timeDelayAfterInitial)
		{
			return null;
		}

		[Token(Token = "0x6000A0B")]
		[Address(RVA = "0x8235CC", Offset = "0x8235CC", VA = "0x8235CC")]
		private void PlaySound(AudioClip clip, bool loop = false)
		{
		}

		[Token(Token = "0x6000A0C")]
		[Address(RVA = "0x823638", Offset = "0x823638", VA = "0x823638")]
		public WindmillBladesController()
		{
		}
	}
	[Token(Token = "0x2000131")]
	public class WindmillController : MonoBehaviour
	{
		[Token(Token = "0x40009C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject _startStopButton;

		[Token(Token = "0x40009C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float _maxSpeed;

		[Token(Token = "0x40009C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private SelectionCylinder _selectionCylinder;

		[Token(Token = "0x40009C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private WindmillBladesController _bladesRotation;

		[Token(Token = "0x40009C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private InteractableTool _toolInteractingWithMe;

		[Token(Token = "0x6000A0D")]
		[Address(RVA = "0x823640", Offset = "0x823640", VA = "0x823640")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000A0E")]
		[Address(RVA = "0x8236B4", Offset = "0x8236B4", VA = "0x8236B4")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000A0F")]
		[Address(RVA = "0x823798", Offset = "0x823798", VA = "0x823798")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000A10")]
		[Address(RVA = "0x8238D0", Offset = "0x8238D0", VA = "0x8238D0")]
		private void StartStopStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x6000A11")]
		[Address(RVA = "0x823950", Offset = "0x823950", VA = "0x823950")]
		private void Update()
		{
		}

		[Token(Token = "0x6000A12")]
		[Address(RVA = "0x823A2C", Offset = "0x823A2C", VA = "0x823A2C")]
		public WindmillController()
		{
		}
	}
	[Token(Token = "0x2000132")]
	public enum EUiDisplayType
	{
		[Token(Token = "0x40009C9")]
		EUDT_WorldGeoQuad,
		[Token(Token = "0x40009CA")]
		EUDT_OverlayQuad,
		[Token(Token = "0x40009CB")]
		EUDT_None,
		[Token(Token = "0x40009CC")]
		EUDT_MaxDislayTypes
	}
	[Token(Token = "0x2000133")]
	public class OVROverlaySample : MonoBehaviour
	{
		[Token(Token = "0x20002AB")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x43F5B8", Offset = "0x43F5B8")]
		private sealed class <WaitforOVROverlay>d__30 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000FC1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000FC2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000FC3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public OVROverlaySample <>4__this;

			[Token(Token = "0x170000C6")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000F5C")]
				[Address(RVA = "0x850634", Offset = "0x850634", VA = "0x850634", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170000C7")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000F5E")]
				[Address(RVA = "0x85067C", Offset = "0x85067C", VA = "0x85067C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000F59")]
			[Address(RVA = "0x850404", Offset = "0x850404", VA = "0x850404")]
			[DebuggerHidden]
			public <WaitforOVROverlay>d__30(int <>1__state)
			{
			}

			[Token(Token = "0x6000F5A")]
			[Address(RVA = "0x850430", Offset = "0x850430", VA = "0x850430", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000F5B")]
			[Address(RVA = "0x850434", Offset = "0x850434", VA = "0x850434", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000F5D")]
			[Address(RVA = "0x85063C", Offset = "0x85063C", VA = "0x85063C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40009CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool inMenu;

		[Token(Token = "0x40009CE")]
		private const string ovrOverlayID = "OVROverlayID";

		[Token(Token = "0x40009CF")]
		private const string applicationID = "ApplicationID";

		[Token(Token = "0x40009D0")]
		private const string noneID = "NoneID";

		[Token(Token = "0x40009D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Toggle applicationRadioButton;

		[Token(Token = "0x40009D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Toggle noneRadioButton;

		[Token(Token = "0x40009D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x440F34", Offset = "0x440F34")]
		public GameObject mainCamera;

		[Token(Token = "0x40009D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public GameObject uiCamera;

		[Token(Token = "0x40009D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public GameObject uiGeoParent;

		[Token(Token = "0x40009D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public GameObject worldspaceGeoParent;

		[Token(Token = "0x40009D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public OVROverlay cameraRenderOverlay;

		[Token(Token = "0x40009D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public OVROverlay renderingLabelOverlay;

		[Token(Token = "0x40009D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Texture applicationLabelTexture;

		[Token(Token = "0x40009DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Texture compositorLabelTexture;

		[Token(Token = "0x40009DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x440F6C", Offset = "0x440F6C")]
		public GameObject prefabForLevelLoadSim;

		[Token(Token = "0x40009DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public OVROverlay cubemapOverlay;

		[Token(Token = "0x40009DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public OVROverlay loadingTextQuadOverlay;

		[Token(Token = "0x40009DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public float distanceFromCamToLoadText;

		[Token(Token = "0x40009DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		public float cubeSpawnRadius;

		[Token(Token = "0x40009E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public float heightBetweenItems;

		[Token(Token = "0x40009E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		public int numObjectsPerLevel;

		[Token(Token = "0x40009E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public int numLevels;

		[Token(Token = "0x40009E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		public int numLoopsTrigger;

		[Token(Token = "0x40009E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private List<GameObject> spawnedCubes;

		[Token(Token = "0x6000A13")]
		[Address(RVA = "0xE5E1F4", Offset = "0xE5E1F4", VA = "0xE5E1F4")]
		private void Start()
		{
		}

		[Token(Token = "0x6000A14")]
		[Address(RVA = "0xE5EA18", Offset = "0xE5EA18", VA = "0xE5EA18")]
		private void Update()
		{
		}

		[Token(Token = "0x6000A15")]
		[Address(RVA = "0xE5EB60", Offset = "0xE5EB60", VA = "0xE5EB60")]
		private void ActivateWorldGeo()
		{
		}

		[Token(Token = "0x6000A16")]
		[Address(RVA = "0xE5EC9C", Offset = "0xE5EC9C", VA = "0xE5EC9C")]
		private void ActivateOVROverlay()
		{
		}

		[Token(Token = "0x6000A17")]
		[Address(RVA = "0xE5EDD8", Offset = "0xE5EDD8", VA = "0xE5EDD8")]
		private void ActivateNone()
		{
		}

		[Token(Token = "0x6000A18")]
		[Address(RVA = "0xE5EB34", Offset = "0xE5EB34", VA = "0xE5EB34")]
		private void TriggerLoad()
		{
		}

		[Token(Token = "0x6000A19")]
		[Address(RVA = "0xE5EEB8", Offset = "0xE5EEB8", VA = "0xE5EEB8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x442B98", Offset = "0x442B98")]
		private IEnumerator WaitforOVROverlay()
		{
			return null;
		}

		[Token(Token = "0x6000A1A")]
		[Address(RVA = "0xE5EF30", Offset = "0xE5EF30", VA = "0xE5EF30")]
		private void TriggerUnload()
		{
		}

		[Token(Token = "0x6000A1B")]
		[Address(RVA = "0xE5E64C", Offset = "0xE5E64C", VA = "0xE5E64C")]
		private void CameraAndRenderTargetSetup()
		{
		}

		[Token(Token = "0x6000A1C")]
		[Address(RVA = "0xE5F084", Offset = "0xE5F084", VA = "0xE5F084")]
		private void SimulateLevelLoad()
		{
		}

		[Token(Token = "0x6000A1D")]
		[Address(RVA = "0xE5EF64", Offset = "0xE5EF64", VA = "0xE5EF64")]
		private void ClearObjects()
		{
		}

		[Token(Token = "0x6000A1E")]
		[Address(RVA = "0xE5F39C", Offset = "0xE5F39C", VA = "0xE5F39C")]
		public void RadioPressed(string radioLabel, string group, Toggle t)
		{
		}

		[Token(Token = "0x6000A1F")]
		[Address(RVA = "0xE5F48C", Offset = "0xE5F48C", VA = "0xE5F48C")]
		public OVROverlaySample()
		{
		}

		[Token(Token = "0x6000A20")]
		[Address(RVA = "0xE5F51C", Offset = "0xE5F51C", VA = "0xE5F51C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x442BF8", Offset = "0x442BF8")]
		private void <Start>b__24_0(Toggle t)
		{
		}

		[Token(Token = "0x6000A21")]
		[Address(RVA = "0xE5F574", Offset = "0xE5F574", VA = "0xE5F574")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x442C08", Offset = "0x442C08")]
		private void <Start>b__24_1(Toggle t)
		{
		}

		[Token(Token = "0x6000A22")]
		[Address(RVA = "0xE5F5CC", Offset = "0xE5F5CC", VA = "0xE5F5CC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x442C18", Offset = "0x442C18")]
		private void <Start>b__24_2(Toggle t)
		{
		}
	}
}
namespace OVRTouchSample
{
	[Token(Token = "0x2000134")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x43F200", Offset = "0x43F200")]
	public class Hand : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20002AC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x43F5C8", Offset = "0x43F5C8")]
		private sealed class <>c
		{
			[Token(Token = "0x4000FC4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4000FC5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<Collider, bool> <>9__28_0;

			[Token(Token = "0x6000F60")]
			[Address(RVA = "0x85E960", Offset = "0x85E960", VA = "0x85E960")]
			public <>c()
			{
			}

			[Token(Token = "0x6000F61")]
			[Address(RVA = "0x85E968", Offset = "0x85E968", VA = "0x85E968")]
			internal bool <Start>b__28_0(Collider childCollider)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x40009E5")]
		public const string ANIM_LAYER_NAME_POINT = "Point Layer";

		[Token(Token = "0x40009E6")]
		public const string ANIM_LAYER_NAME_THUMB = "Thumb Layer";

		[Token(Token = "0x40009E7")]
		public const string ANIM_PARAM_NAME_FLEX = "Flex";

		[Token(Token = "0x40009E8")]
		public const string ANIM_PARAM_NAME_POSE = "Pose";

		[Token(Token = "0x40009E9")]
		public const float THRESH_COLLISION_FLEX = 0.9f;

		[Token(Token = "0x40009EA")]
		public const float INPUT_RATE_CHANGE = 20f;

		[Token(Token = "0x40009EB")]
		public const float COLLIDER_SCALE_MIN = 0.01f;

		[Token(Token = "0x40009EC")]
		public const float COLLIDER_SCALE_MAX = 1f;

		[Token(Token = "0x40009ED")]
		public const float COLLIDER_SCALE_PER_SECOND = 1f;

		[Token(Token = "0x40009EE")]
		public const float TRIGGER_DEBOUNCE_TIME = 0.05f;

		[Token(Token = "0x40009EF")]
		public const float THUMB_DEBOUNCE_TIME = 0.15f;

		[Token(Token = "0x40009F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private OVRInput.Controller m_controller;

		[Token(Token = "0x40009F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Animator m_animator;

		[Token(Token = "0x40009F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private HandPose m_defaultGrabPose;

		[Token(Token = "0x40009F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Collider[] m_colliders;

		[Token(Token = "0x40009F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool m_collisionEnabled;

		[Token(Token = "0x40009F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private OVRGrabber m_grabber;

		[Token(Token = "0x40009F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private List<Renderer> m_showAfterInputFocusAcquired;

		[Token(Token = "0x40009F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private int m_animLayerIndexThumb;

		[Token(Token = "0x40009F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private int m_animLayerIndexPoint;

		[Token(Token = "0x40009F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private int m_animParamIndexFlex;

		[Token(Token = "0x40009FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private int m_animParamIndexPose;

		[Token(Token = "0x40009FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private bool m_isPointing;

		[Token(Token = "0x40009FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
		private bool m_isGivingThumbsUp;

		[Token(Token = "0x40009FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private float m_pointBlend;

		[Token(Token = "0x40009FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private float m_thumbsUpBlend;

		[Token(Token = "0x40009FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private bool m_restoreOnInputAcquired;

		[Token(Token = "0x4000A00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private float m_collisionScaleCurrent;

		[Token(Token = "0x6000A23")]
		[Address(RVA = "0x753950", Offset = "0x753950", VA = "0x753950")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000A24")]
		[Address(RVA = "0x7539AC", Offset = "0x7539AC", VA = "0x7539AC")]
		private void Start()
		{
		}

		[Token(Token = "0x6000A25")]
		[Address(RVA = "0x753E40", Offset = "0x753E40", VA = "0x753E40")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000A26")]
		[Address(RVA = "0x753F2C", Offset = "0x753F2C", VA = "0x753F2C")]
		private void Update()
		{
		}

		[Token(Token = "0x6000A27")]
		[Address(RVA = "0x754090", Offset = "0x754090", VA = "0x754090")]
		private void UpdateCapTouchStates()
		{
		}

		[Token(Token = "0x6000A28")]
		[Address(RVA = "0x754398", Offset = "0x754398", VA = "0x754398")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6000A29")]
		[Address(RVA = "0x754490", Offset = "0x754490", VA = "0x754490")]
		private void OnInputFocusLost()
		{
		}

		[Token(Token = "0x6000A2A")]
		[Address(RVA = "0x7545F0", Offset = "0x7545F0", VA = "0x7545F0")]
		private void OnInputFocusAcquired()
		{
		}

		[Token(Token = "0x6000A2B")]
		[Address(RVA = "0x754128", Offset = "0x754128", VA = "0x754128")]
		private float InputValueRateChange(bool isDown, float value)
		{
			return default(float);
		}

		[Token(Token = "0x6000A2C")]
		[Address(RVA = "0x75417C", Offset = "0x75417C", VA = "0x75417C")]
		private void UpdateAnimStates()
		{
		}

		[Token(Token = "0x6000A2D")]
		[Address(RVA = "0x753CE4", Offset = "0x753CE4", VA = "0x753CE4")]
		private void CollisionEnable(bool enabled)
		{
		}

		[Token(Token = "0x6000A2E")]
		[Address(RVA = "0x75472C", Offset = "0x75472C", VA = "0x75472C")]
		public Hand()
		{
		}
	}
	[Token(Token = "0x2000135")]
	public enum HandPoseId
	{
		[Token(Token = "0x4000A02")]
		Default,
		[Token(Token = "0x4000A03")]
		Generic,
		[Token(Token = "0x4000A04")]
		PingPongBall,
		[Token(Token = "0x4000A05")]
		Controller
	}
	[Token(Token = "0x2000136")]
	public class HandPose : MonoBehaviour
	{
		[Token(Token = "0x4000A06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private bool m_allowPointing;

		[Token(Token = "0x4000A07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		[SerializeField]
		private bool m_allowThumbsUp;

		[Token(Token = "0x4000A08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private HandPoseId m_poseId;

		[Token(Token = "0x17000070")]
		public bool AllowPointing
		{
			[Token(Token = "0x6000A2F")]
			[Address(RVA = "0x754744", Offset = "0x754744", VA = "0x754744")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000071")]
		public bool AllowThumbsUp
		{
			[Token(Token = "0x6000A30")]
			[Address(RVA = "0x75474C", Offset = "0x75474C", VA = "0x75474C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000072")]
		public HandPoseId PoseId
		{
			[Token(Token = "0x6000A31")]
			[Address(RVA = "0x754754", Offset = "0x754754", VA = "0x754754")]
			get
			{
				return default(HandPoseId);
			}
		}

		[Token(Token = "0x6000A32")]
		[Address(RVA = "0x75475C", Offset = "0x75475C", VA = "0x75475C")]
		public HandPose()
		{
		}
	}
	[Token(Token = "0x2000137")]
	public class TouchController : MonoBehaviour
	{
		[Token(Token = "0x4000A09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private OVRInput.Controller m_controller;

		[Token(Token = "0x4000A0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Animator m_animator;

		[Token(Token = "0x4000A0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool m_restoreOnInputAcquired;

		[Token(Token = "0x6000A33")]
		[Address(RVA = "0x81BC70", Offset = "0x81BC70", VA = "0x81BC70")]
		private void Update()
		{
		}

		[Token(Token = "0x6000A34")]
		[Address(RVA = "0x81BF58", Offset = "0x81BF58", VA = "0x81BF58")]
		private void OnInputFocusLost()
		{
		}

		[Token(Token = "0x6000A35")]
		[Address(RVA = "0x81BFB4", Offset = "0x81BFB4", VA = "0x81BFB4")]
		private void OnInputFocusAcquired()
		{
		}

		[Token(Token = "0x6000A36")]
		[Address(RVA = "0x81BFF8", Offset = "0x81BFF8", VA = "0x81BFF8")]
		public TouchController()
		{
		}
	}
}
namespace OVR
{
	[Token(Token = "0x2000138")]
	public class TestScript : MonoBehaviour
	{
		[Token(Token = "0x4000A0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "InspectorNoteAttribute", RVA = "0x441024", Offset = "0x441024")]
		public SoundFXRef testSound1;

		[Token(Token = "0x4000A0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SoundFXRef testSound2;

		[Token(Token = "0x6000A37")]
		[Address(RVA = "0x81AB84", Offset = "0x81AB84", VA = "0x81AB84")]
		private void Start()
		{
		}

		[Token(Token = "0x6000A38")]
		[Address(RVA = "0x81AB88", Offset = "0x81AB88", VA = "0x81AB88")]
		private void Update()
		{
		}

		[Token(Token = "0x6000A39")]
		[Address(RVA = "0x81AC28", Offset = "0x81AC28", VA = "0x81AC28")]
		public TestScript()
		{
		}
	}
	[Token(Token = "0x2000139")]
	public class AmbienceEmitter : MonoBehaviour
	{
		[Token(Token = "0x4000A0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public SoundFXRef[] ambientSounds;

		[Token(Token = "0x4000A0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool autoActivate;

		[Token(Token = "0x4000A10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x441070", Offset = "0x441070")]
		public bool autoRetrigger;

		[Token(Token = "0x4000A11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "MinMaxAttribute", RVA = "0x4410A8", Offset = "0x4410A8")]
		public Vector2 randomRetriggerDelaySecs;

		[Token(Token = "0x4000A12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4410CC", Offset = "0x4410CC")]
		public Transform[] playPositions;

		[Token(Token = "0x4000A13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool activated;

		[Token(Token = "0x4000A14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private int playingIdx;

		[Token(Token = "0x4000A15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float nextPlayTime;

		[Token(Token = "0x4000A16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private float fadeTime;

		[Token(Token = "0x4000A17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private int lastPosIdx;

		[Token(Token = "0x6000A3A")]
		[Address(RVA = "0xDF5DEC", Offset = "0xDF5DEC", VA = "0xDF5DEC")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000A3B")]
		[Address(RVA = "0xDF5FBC", Offset = "0xDF5FBC", VA = "0xDF5FBC")]
		private void Update()
		{
		}

		[Token(Token = "0x6000A3C")]
		[Address(RVA = "0xDF6198", Offset = "0xDF6198", VA = "0xDF6198")]
		public void OnTriggerEnter(Collider col)
		{
		}

		[Token(Token = "0x6000A3D")]
		[Address(RVA = "0xDF601C", Offset = "0xDF601C", VA = "0xDF601C")]
		public void Play()
		{
		}

		[Token(Token = "0x6000A3E")]
		[Address(RVA = "0xDF6258", Offset = "0xDF6258", VA = "0xDF6258")]
		public void EnableEmitter(bool enable)
		{
		}

		[Token(Token = "0x6000A3F")]
		[Address(RVA = "0xDF63C8", Offset = "0xDF63C8", VA = "0xDF63C8")]
		public AmbienceEmitter()
		{
		}
	}
	[Token(Token = "0x200013A")]
	public enum PreloadSounds
	{
		[Token(Token = "0x4000A19")]
		Default,
		[Token(Token = "0x4000A1A")]
		Preload,
		[Token(Token = "0x4000A1B")]
		ManualPreload
	}
	[Token(Token = "0x200013B")]
	public enum Fade
	{
		[Token(Token = "0x4000A1D")]
		In,
		[Token(Token = "0x4000A1E")]
		Out
	}
	[Serializable]
	[Token(Token = "0x200013C")]
	public class SoundGroup
	{
		[Token(Token = "0x4000A1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string name;

		[Token(Token = "0x4000A20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public SoundFX[] soundList;

		[Token(Token = "0x4000A21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AudioMixerGroup mixerGroup;

		[Token(Token = "0x4000A22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x441104", Offset = "0x441104")]
		public int maxPlayingSounds;

		[Token(Token = "0x4000A23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public PreloadSounds preloadAudio;

		[Token(Token = "0x4000A24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float volumeOverride;

		[Token(Token = "0x4000A25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[HideInInspector]
		public int playingSoundCount;

		[Token(Token = "0x6000A40")]
		[Address(RVA = "0x8130D0", Offset = "0x8130D0", VA = "0x8130D0")]
		public SoundGroup(string name)
		{
		}

		[Token(Token = "0x6000A41")]
		[Address(RVA = "0x81318C", Offset = "0x81318C", VA = "0x81318C")]
		public SoundGroup()
		{
		}

		[Token(Token = "0x6000A42")]
		[Address(RVA = "0x813250", Offset = "0x813250", VA = "0x813250")]
		public void IncrementPlayCount()
		{
		}

		[Token(Token = "0x6000A43")]
		[Address(RVA = "0x81328C", Offset = "0x81328C", VA = "0x81328C")]
		public void DecrementPlayCount()
		{
		}

		[Token(Token = "0x6000A44")]
		[Address(RVA = "0x8132C8", Offset = "0x8132C8", VA = "0x8132C8")]
		public bool CanPlaySound()
		{
			return default(bool);
		}
	}
	[Token(Token = "0x200013D")]
	public class AudioManager : MonoBehaviour
	{
		[Token(Token = "0x20002AD")]
		public enum Fade
		{
			[Token(Token = "0x4000FC7")]
			In,
			[Token(Token = "0x4000FC8")]
			Out
		}

		[Token(Token = "0x20002AE")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x43F5D8", Offset = "0x43F5D8")]
		private sealed class <>c__DisplayClass75_0
		{
			[Token(Token = "0x4000FC9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public SoundPriority priority;

			[Token(Token = "0x6000F62")]
			[Address(RVA = "0x85966C", Offset = "0x85966C", VA = "0x85966C")]
			public <>c__DisplayClass75_0()
			{
			}

			[Token(Token = "0x6000F63")]
			[Address(RVA = "0x859674", Offset = "0x859674", VA = "0x859674")]
			internal bool <FindFreeEmitter>b__0(SoundEmitter item)
			{
				return default(bool);
			}
		}

		[Serializable]
		[Token(Token = "0x20002AF")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x43F5E8", Offset = "0x43F5E8")]
		private sealed class <>c
		{
			[Token(Token = "0x4000FCA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4000FCB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Predicate<SoundEmitter> <>9__75_1;

			[Token(Token = "0x6000F65")]
			[Address(RVA = "0x8595D8", Offset = "0x8595D8", VA = "0x8595D8")]
			public <>c()
			{
			}

			[Token(Token = "0x6000F66")]
			[Address(RVA = "0x8595E0", Offset = "0x8595E0", VA = "0x8595E0")]
			internal bool <FindFreeEmitter>b__75_1(SoundEmitter item)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4000A26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x441130", Offset = "0x441130")]
		public bool makePersistent;

		[Token(Token = "0x4000A27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x441168", Offset = "0x441168")]
		public bool enableSpatializedAudio;

		[Token(Token = "0x4000A28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4411A0", Offset = "0x4411A0")]
		public bool enableSpatializedFastOverride;

		[Token(Token = "0x4000A29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4411D8", Offset = "0x4411D8")]
		public AudioMixer audioMixer;

		[Token(Token = "0x4000A2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x441210", Offset = "0x441210")]
		public AudioMixerGroup defaultMixerGroup;

		[Token(Token = "0x4000A2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x441248", Offset = "0x441248")]
		public AudioMixerGroup reservedMixerGroup;

		[Token(Token = "0x4000A2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x441280", Offset = "0x441280")]
		public AudioMixerGroup voiceChatMixerGroup;

		[Token(Token = "0x4000A2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4412B8", Offset = "0x4412B8")]
		public bool verboseLogging;

		[Token(Token = "0x4000A2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4412F0", Offset = "0x4412F0")]
		public int maxSoundEmitters;

		[Token(Token = "0x4000A2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x441328", Offset = "0x441328")]
		public float volumeSoundFX;

		[Token(Token = "0x4000A30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x441360", Offset = "0x441360")]
		public float soundFxFadeSecs;

		[Token(Token = "0x4000A31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public float audioMinFallOffDistance;

		[Token(Token = "0x4000A32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public float audioMaxFallOffDistance;

		[Token(Token = "0x4000A33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public SoundGroup[] soundGroupings;

		[Token(Token = "0x4000A34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Dictionary<string, SoundFX> soundFXCache;

		[Token(Token = "0x4000A35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static AudioManager theAudioManager;

		[Token(Token = "0x4000A36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static FastList<string> names;

		[Token(Token = "0x4000A37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static string[] defaultSound;

		[Token(Token = "0x4000A38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static SoundFX nullSound;

		[Token(Token = "0x4000A39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static bool hideWarnings;

		[Token(Token = "0x4000A3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private float audioMaxFallOffDistanceSqr;

		[Token(Token = "0x4000A3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private SoundEmitter[] soundEmitters;

		[Token(Token = "0x4000A3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private FastList<SoundEmitter> playingEmitters;

		[Token(Token = "0x4000A3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private FastList<SoundEmitter> nextFreeEmitters;

		[Token(Token = "0x4000A3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private MixerSnapshot currentSnapshot;

		[Token(Token = "0x4000A3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static GameObject soundEmitterParent;

		[Token(Token = "0x4000A40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private static Transform staticListenerPosition;

		[Token(Token = "0x4000A41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private static bool showPlayingEmitterCount;

		[Token(Token = "0x4000A42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
		private static bool forceShowEmitterCount;

		[Token(Token = "0x4000A43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3A")]
		private static bool soundEnabled;

		[Token(Token = "0x4000A44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private static readonly AnimationCurve defaultReverbZoneMix;

		[Token(Token = "0x17000073")]
		public static bool enableSpatialization
		{
			[Token(Token = "0x6000A45")]
			[Address(RVA = "0xDF6488", Offset = "0xDF6488", VA = "0xDF6488")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000074")]
		public static AudioManager Instance
		{
			[Token(Token = "0x6000A46")]
			[Address(RVA = "0xDF6570", Offset = "0xDF6570", VA = "0xDF6570")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000075")]
		public static float NearFallOff
		{
			[Token(Token = "0x6000A47")]
			[Address(RVA = "0xDF65D4", Offset = "0xDF65D4", VA = "0xDF65D4")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000076")]
		public static float FarFallOff
		{
			[Token(Token = "0x6000A48")]
			[Address(RVA = "0xDF6644", Offset = "0xDF6644", VA = "0xDF6644")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000077")]
		public static AudioMixerGroup EmitterGroup
		{
			[Token(Token = "0x6000A49")]
			[Address(RVA = "0xDF66B4", Offset = "0xDF66B4", VA = "0xDF66B4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000078")]
		public static AudioMixerGroup ReservedGroup
		{
			[Token(Token = "0x6000A4A")]
			[Address(RVA = "0xDF6724", Offset = "0xDF6724", VA = "0xDF6724")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000079")]
		public static AudioMixerGroup VoipGroup
		{
			[Token(Token = "0x6000A4B")]
			[Address(RVA = "0xDF6794", Offset = "0xDF6794", VA = "0xDF6794")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700007A")]
		public static bool SoundEnabled
		{
			[Token(Token = "0x6000A56")]
			[Address(RVA = "0xDF873C", Offset = "0xDF873C", VA = "0xDF873C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000A4C")]
		[Address(RVA = "0xDF6804", Offset = "0xDF6804", VA = "0xDF6804")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000A4D")]
		[Address(RVA = "0xDF6A4C", Offset = "0xDF6A4C", VA = "0xDF6A4C")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000A4E")]
		[Address(RVA = "0xDF6808", Offset = "0xDF6808", VA = "0xDF6808")]
		private void Init()
		{
		}

		[Token(Token = "0x6000A4F")]
		[Address(RVA = "0xDF7744", Offset = "0xDF7744", VA = "0xDF7744")]
		private void Update()
		{
		}

		[Token(Token = "0x6000A50")]
		[Address(RVA = "0xDF6BAC", Offset = "0xDF6BAC", VA = "0xDF6BAC")]
		private void RebuildSoundFXCache()
		{
		}

		[Token(Token = "0x6000A51")]
		[Address(RVA = "0xDF7E44", Offset = "0xDF7E44", VA = "0xDF7E44")]
		public static SoundFX FindSoundFX(string name, bool rebuildCache = false)
		{
			return null;
		}

		[Token(Token = "0x6000A52")]
		[Address(RVA = "0xDF7FD8", Offset = "0xDF7FD8", VA = "0xDF7FD8")]
		private static bool FindAudioManager()
		{
			return default(bool);
		}

		[Token(Token = "0x6000A53")]
		[Address(RVA = "0xDF81AC", Offset = "0xDF81AC", VA = "0xDF81AC")]
		public static GameObject GetGameObject()
		{
			return null;
		}

		[Token(Token = "0x6000A54")]
		[Address(RVA = "0xDF82B4", Offset = "0xDF82B4", VA = "0xDF82B4")]
		public static string NameMinusGroup(string name)
		{
			return null;
		}

		[Token(Token = "0x6000A55")]
		[Address(RVA = "0xDF8340", Offset = "0xDF8340", VA = "0xDF8340")]
		public static string[] GetSoundFXNames(string currentValue, out int currentIdx)
		{
			return null;
		}

		[Token(Token = "0x6000A57")]
		[Address(RVA = "0xDF70C8", Offset = "0xDF70C8", VA = "0xDF70C8")]
		private void InitializeSoundSystem()
		{
		}

		[Token(Token = "0x6000A58")]
		[Address(RVA = "0xDF7748", Offset = "0xDF7748", VA = "0xDF7748")]
		private void UpdateFreeEmitters()
		{
		}

		[Token(Token = "0x6000A59")]
		[Address(RVA = "0xDF8874", Offset = "0xDF8874", VA = "0xDF8874")]
		private string Fmt(int count)
		{
			return null;
		}

		[Token(Token = "0x6000A5A")]
		[Address(RVA = "0xDF89A4", Offset = "0xDF89A4", VA = "0xDF89A4")]
		private string FmtFree(int count)
		{
			return null;
		}

		[Token(Token = "0x6000A5B")]
		[Address(RVA = "0xDF8AD8", Offset = "0xDF8AD8", VA = "0xDF8AD8")]
		private void OnPreSceneLoad()
		{
		}

		[Token(Token = "0x6000A5C")]
		[Address(RVA = "0xDF87A0", Offset = "0xDF87A0", VA = "0xDF87A0")]
		private void ResetFreeEmitters()
		{
		}

		[Token(Token = "0x6000A5D")]
		[Address(RVA = "0xDF8C20", Offset = "0xDF8C20", VA = "0xDF8C20")]
		public static void FadeOutSoundChannel(int channel, float delaySecs, float fadeTime)
		{
		}

		[Token(Token = "0x6000A5E")]
		[Address(RVA = "0xDF8CD8", Offset = "0xDF8CD8", VA = "0xDF8CD8")]
		public static bool StopSound(int idx, bool fadeOut = true, bool stopReserved = false)
		{
			return default(bool);
		}

		[Token(Token = "0x6000A5F")]
		[Address(RVA = "0xDF8DF4", Offset = "0xDF8DF4", VA = "0xDF8DF4")]
		public static void FadeInSound(int idx, float fadeTime, float volume)
		{
		}

		[Token(Token = "0x6000A60")]
		[Address(RVA = "0xDF61A8", Offset = "0xDF61A8", VA = "0xDF61A8")]
		public static void FadeInSound(int idx, float fadeTime)
		{
		}

		[Token(Token = "0x6000A61")]
		[Address(RVA = "0xDF6318", Offset = "0xDF6318", VA = "0xDF6318")]
		public static void FadeOutSound(int idx, float fadeTime)
		{
		}

		[Token(Token = "0x6000A62")]
		[Address(RVA = "0xDF8EAC", Offset = "0xDF8EAC", VA = "0xDF8EAC")]
		public static void StopAllSounds(bool fadeOut, bool stopReserved = false)
		{
		}

		[Token(Token = "0x6000A63")]
		[Address(RVA = "0xDF8F74", Offset = "0xDF8F74", VA = "0xDF8F74")]
		public void MuteAllSounds(bool mute, bool muteReserved = false)
		{
		}

		[Token(Token = "0x6000A64")]
		[Address(RVA = "0xDF9008", Offset = "0xDF9008", VA = "0xDF9008")]
		public void UnMuteAllSounds(bool unmute, bool unmuteReserved = false)
		{
		}

		[Token(Token = "0x6000A65")]
		[Address(RVA = "0xDF90CC", Offset = "0xDF90CC", VA = "0xDF90CC")]
		public static float GetEmitterEndTime(int idx)
		{
			return default(float);
		}

		[Token(Token = "0x6000A66")]
		[Address(RVA = "0xDF916C", Offset = "0xDF916C", VA = "0xDF916C")]
		public static float SetEmitterTime(int idx, float time)
		{
			return default(float);
		}

		[Token(Token = "0x6000A67")]
		[Address(RVA = "0xDF9224", Offset = "0xDF9224", VA = "0xDF9224")]
		public static int PlaySound(AudioClip clip, float volume, EmitterChannel src = EmitterChannel.Any, float delay = 0f, float pitchVariance = 1f, bool loop = false)
		{
			return default(int);
		}

		[Token(Token = "0x6000A68")]
		[Address(RVA = "0xDF9D5C", Offset = "0xDF9D5C", VA = "0xDF9D5C")]
		private static int FindFreeEmitter(EmitterChannel src, SoundPriority priority)
		{
			return default(int);
		}

		[Token(Token = "0x6000A69")]
		[Address(RVA = "0xDFA45C", Offset = "0xDFA45C", VA = "0xDFA45C")]
		public static int PlaySound(SoundFX soundFX, EmitterChannel src = EmitterChannel.Any, float delay = 0f)
		{
			return default(int);
		}

		[Token(Token = "0x6000A6A")]
		[Address(RVA = "0xDFA620", Offset = "0xDFA620", VA = "0xDFA620")]
		public static int PlaySoundAt(Vector3 position, SoundFX soundFX, EmitterChannel src = EmitterChannel.Any, float delay = 0f, float volumeOverride = 1f, float pitchMultiplier = 1f)
		{
			return default(int);
		}

		[Token(Token = "0x6000A6B")]
		[Address(RVA = "0xDFB1EC", Offset = "0xDFB1EC", VA = "0xDFB1EC")]
		public static int PlayRandomSoundAt(Vector3 position, AudioClip[] clips, float volume, EmitterChannel src = EmitterChannel.Any, float delay = 0f, float pitch = 1f, bool loop = false)
		{
			return default(int);
		}

		[Token(Token = "0x6000A6C")]
		[Address(RVA = "0xDF9410", Offset = "0xDF9410", VA = "0xDF9410")]
		public static int PlaySoundAt(Vector3 position, AudioClip clip, float volume = 1f, EmitterChannel src = EmitterChannel.Any, float delay = 0f, float pitch = 1f, bool loop = false)
		{
			return default(int);
		}

		[Token(Token = "0x6000A6D")]
		[Address(RVA = "0xDFB308", Offset = "0xDFB308", VA = "0xDFB308")]
		public static void SetOnFinished(int emitterIdx, Action onFinished)
		{
		}

		[Token(Token = "0x6000A6E")]
		[Address(RVA = "0xDFB3FC", Offset = "0xDFB3FC", VA = "0xDFB3FC")]
		public static void SetOnFinished(int emitterIdx, Action<object> onFinished, object obj)
		{
		}

		[Token(Token = "0x6000A6F")]
		[Address(RVA = "0xDFB4F8", Offset = "0xDFB4F8", VA = "0xDFB4F8")]
		public static void AttachSoundToParent(int idx, Transform parent)
		{
		}

		[Token(Token = "0x6000A70")]
		[Address(RVA = "0xDFB720", Offset = "0xDFB720", VA = "0xDFB720")]
		public static void DetachSoundFromParent(int idx)
		{
		}

		[Token(Token = "0x6000A71")]
		[Address(RVA = "0xDFB874", Offset = "0xDFB874", VA = "0xDFB874")]
		public static void DetachSoundsFromParent(SoundEmitter[] emitters, bool stopSounds = true)
		{
		}

		[Token(Token = "0x6000A72")]
		[Address(RVA = "0xDFB998", Offset = "0xDFB998", VA = "0xDFB998")]
		public static void SetEmitterMixerGroup(int idx, AudioMixerGroup mixerGroup)
		{
		}

		[Token(Token = "0x6000A73")]
		[Address(RVA = "0xDFBAC4", Offset = "0xDFBAC4", VA = "0xDFBAC4")]
		public static MixerSnapshot GetActiveSnapshot()
		{
			return null;
		}

		[Token(Token = "0x6000A74")]
		[Address(RVA = "0xDFBBA4", Offset = "0xDFBBA4", VA = "0xDFBBA4")]
		public static void SetCurrentSnapshot(MixerSnapshot mixerSnapshot)
		{
		}

		[Token(Token = "0x6000A75")]
		[Address(RVA = "0xDFBCF4", Offset = "0xDFBCF4", VA = "0xDFBCF4")]
		public static void BlendWithCurrentSnapshot(MixerSnapshot blendSnapshot, float weight, float blendTime = 0f)
		{
		}

		[Token(Token = "0x6000A76")]
		[Address(RVA = "0xDFC110", Offset = "0xDFC110", VA = "0xDFC110")]
		public AudioManager()
		{
		}
	}
	[Token(Token = "0x200013E")]
	public enum EmitterChannel
	{
		[Token(Token = "0x4000A46")]
		None = -1,
		[Token(Token = "0x4000A47")]
		Reserved,
		[Token(Token = "0x4000A48")]
		Any
	}
	[Serializable]
	[Token(Token = "0x200013F")]
	public class MixerSnapshot
	{
		[Token(Token = "0x4000A49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public AudioMixerSnapshot snapshot;

		[Token(Token = "0x4000A4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float transitionTime;

		[Token(Token = "0x6000A78")]
		[Address(RVA = "0x109291C", Offset = "0x109291C", VA = "0x109291C")]
		public MixerSnapshot()
		{
		}
	}
	[Token(Token = "0x2000140")]
	public class MinMaxAttribute : PropertyAttribute
	{
		[Token(Token = "0x4000A4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float minDefaultVal;

		[Token(Token = "0x4000A4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float maxDefaultVal;

		[Token(Token = "0x4000A4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float min;

		[Token(Token = "0x4000A4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float max;

		[Token(Token = "0x6000A79")]
		[Address(RVA = "0x10928C0", Offset = "0x10928C0", VA = "0x10928C0")]
		public MinMaxAttribute(float minDefaultVal, float maxDefaultVal, float min, float max)
		{
		}
	}
	[Token(Token = "0x2000141")]
	public class SoundEmitter : MonoBehaviour
	{
		[Token(Token = "0x20002B0")]
		public enum FadeState
		{
			[Token(Token = "0x4000FCD")]
			Null,
			[Token(Token = "0x4000FCE")]
			FadingIn,
			[Token(Token = "0x4000FCF")]
			FadingOut,
			[Token(Token = "0x4000FD0")]
			Ducking
		}

		[Token(Token = "0x20002B1")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x43F5F8", Offset = "0x43F5F8")]
		private sealed class <DelayedSyncTo>d__57 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000FD1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000FD2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000FD3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SoundEmitter <>4__this;

			[Token(Token = "0x4000FD4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public SoundEmitter other;

			[Token(Token = "0x4000FD5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public float fadeTime;

			[Token(Token = "0x4000FD6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			public float toVolume;

			[Token(Token = "0x170000C8")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000F6A")]
				[Address(RVA = "0x85170C", Offset = "0x85170C", VA = "0x85170C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170000C9")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000F6C")]
				[Address(RVA = "0x851754", Offset = "0x851754", VA = "0x851754", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000F67")]
			[Address(RVA = "0x8515EC", Offset = "0x8515EC", VA = "0x8515EC")]
			[DebuggerHidden]
			public <DelayedSyncTo>d__57(int <>1__state)
			{
			}

			[Token(Token = "0x6000F68")]
			[Address(RVA = "0x851618", Offset = "0x851618", VA = "0x851618", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000F69")]
			[Address(RVA = "0x85161C", Offset = "0x85161C", VA = "0x85161C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000F6B")]
			[Address(RVA = "0x851714", Offset = "0x851714", VA = "0x851714", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20002B2")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x43F608", Offset = "0x43F608")]
		private sealed class <FadeSoundChannelTo>d__63 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000FD7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000FD8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000FD9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SoundEmitter <>4__this;

			[Token(Token = "0x4000FDA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float toVolume;

			[Token(Token = "0x4000FDB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public float fadeTime;

			[Token(Token = "0x4000FDC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <start>5__2;

			[Token(Token = "0x4000FDD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private float <end>5__3;

			[Token(Token = "0x4000FDE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private float <startTime>5__4;

			[Token(Token = "0x4000FDF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private float <elapsedTime>5__5;

			[Token(Token = "0x170000CA")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000F70")]
				[Address(RVA = "0x851B9C", Offset = "0x851B9C", VA = "0x851B9C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170000CB")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000F72")]
				[Address(RVA = "0x851BE4", Offset = "0x851BE4", VA = "0x851BE4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000F6D")]
			[Address(RVA = "0x851A30", Offset = "0x851A30", VA = "0x851A30")]
			[DebuggerHidden]
			public <FadeSoundChannelTo>d__63(int <>1__state)
			{
			}

			[Token(Token = "0x6000F6E")]
			[Address(RVA = "0x851A5C", Offset = "0x851A5C", VA = "0x851A5C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000F6F")]
			[Address(RVA = "0x851A60", Offset = "0x851A60", VA = "0x851A60", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000F71")]
			[Address(RVA = "0x851BA4", Offset = "0x851BA4", VA = "0x851BA4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20002B3")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x43F618", Offset = "0x43F618")]
		private sealed class <FadeSoundChannel>d__64 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000FE0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000FE1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000FE2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float delaySecs;

			[Token(Token = "0x4000FE3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public Fade fadeType;

			[Token(Token = "0x4000FE4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float defaultVolume;

			[Token(Token = "0x4000FE5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public SoundEmitter <>4__this;

			[Token(Token = "0x4000FE6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public float fadeTime;

			[Token(Token = "0x4000FE7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private float <start>5__2;

			[Token(Token = "0x4000FE8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private float <end>5__3;

			[Token(Token = "0x4000FE9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			private bool <restartPlay>5__4;

			[Token(Token = "0x4000FEA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private float <startTime>5__5;

			[Token(Token = "0x4000FEB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
			private float <elapsedTime>5__6;

			[Token(Token = "0x170000CC")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000F76")]
				[Address(RVA = "0x8519E0", Offset = "0x8519E0", VA = "0x8519E0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170000CD")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000F78")]
				[Address(RVA = "0x851A28", Offset = "0x851A28", VA = "0x851A28", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000F73")]
			[Address(RVA = "0x85175C", Offset = "0x85175C", VA = "0x85175C")]
			[DebuggerHidden]
			public <FadeSoundChannel>d__64(int <>1__state)
			{
			}

			[Token(Token = "0x6000F74")]
			[Address(RVA = "0x851788", Offset = "0x851788", VA = "0x851788", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000F75")]
			[Address(RVA = "0x85178C", Offset = "0x85178C", VA = "0x85178C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000F77")]
			[Address(RVA = "0x8519E8", Offset = "0x8519E8", VA = "0x8519E8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000A4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public EmitterChannel channel;

		[Token(Token = "0x4000A50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public bool disableSpatialization;

		[Token(Token = "0x4000A51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private FadeState state;

		[NonSerialized]
		[Token(Token = "0x4000A52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[HideInInspector]
		public AudioSource audioSource;

		[NonSerialized]
		[Token(Token = "0x4000A53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[HideInInspector]
		public SoundPriority priority;

		[NonSerialized]
		[Token(Token = "0x4000A54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[HideInInspector]
		public ONSPAudioSource osp;

		[NonSerialized]
		[Token(Token = "0x4000A55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[HideInInspector]
		public float endPlayTime;

		[Token(Token = "0x4000A56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Transform lastParentTransform;

		[NonSerialized]
		[Token(Token = "0x4000A57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[HideInInspector]
		public float defaultVolume;

		[NonSerialized]
		[Token(Token = "0x4000A58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[HideInInspector]
		public Transform defaultParent;

		[NonSerialized]
		[Token(Token = "0x4000A59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[HideInInspector]
		public int originalIdx;

		[NonSerialized]
		[Token(Token = "0x4000A5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[HideInInspector]
		public Action onFinished;

		[NonSerialized]
		[Token(Token = "0x4000A5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[HideInInspector]
		public Action<object> onFinishedObject;

		[NonSerialized]
		[Token(Token = "0x4000A5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[HideInInspector]
		public object onFinishedParam;

		[NonSerialized]
		[Token(Token = "0x4000A5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[HideInInspector]
		public SoundGroup playingSoundGroup;

		[Token(Token = "0x1700007B")]
		public float volume
		{
			[Token(Token = "0x6000A7A")]
			[Address(RVA = "0x8BCD1C", Offset = "0x8BCD1C", VA = "0x8BCD1C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000A7B")]
			[Address(RVA = "0x8BCD38", Offset = "0x8BCD38", VA = "0x8BCD38")]
			set
			{
			}
		}

		[Token(Token = "0x1700007C")]
		public float pitch
		{
			[Token(Token = "0x6000A7C")]
			[Address(RVA = "0x8BCD54", Offset = "0x8BCD54", VA = "0x8BCD54")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000A7D")]
			[Address(RVA = "0x8BCD70", Offset = "0x8BCD70", VA = "0x8BCD70")]
			set
			{
			}
		}

		[Token(Token = "0x1700007D")]
		public AudioClip clip
		{
			[Token(Token = "0x6000A7E")]
			[Address(RVA = "0x8BCD8C", Offset = "0x8BCD8C", VA = "0x8BCD8C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000A7F")]
			[Address(RVA = "0x8BCDA8", Offset = "0x8BCDA8", VA = "0x8BCDA8")]
			set
			{
			}
		}

		[Token(Token = "0x1700007E")]
		public float time
		{
			[Token(Token = "0x6000A80")]
			[Address(RVA = "0x8BCDC4", Offset = "0x8BCDC4", VA = "0x8BCDC4")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000A81")]
			[Address(RVA = "0x8BCDE0", Offset = "0x8BCDE0", VA = "0x8BCDE0")]
			set
			{
			}
		}

		[Token(Token = "0x1700007F")]
		public float length
		{
			[Token(Token = "0x6000A82")]
			[Address(RVA = "0x8BCDFC", Offset = "0x8BCDFC", VA = "0x8BCDFC")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000080")]
		public bool loop
		{
			[Token(Token = "0x6000A83")]
			[Address(RVA = "0x8BCEB0", Offset = "0x8BCEB0", VA = "0x8BCEB0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000A84")]
			[Address(RVA = "0x8BCECC", Offset = "0x8BCECC", VA = "0x8BCECC")]
			set
			{
			}
		}

		[Token(Token = "0x17000081")]
		public bool mute
		{
			[Token(Token = "0x6000A85")]
			[Address(RVA = "0x8BCEEC", Offset = "0x8BCEEC", VA = "0x8BCEEC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000A86")]
			[Address(RVA = "0x8BCF08", Offset = "0x8BCF08", VA = "0x8BCF08")]
			set
			{
			}
		}

		[Token(Token = "0x17000082")]
		public AudioVelocityUpdateMode velocityUpdateMode
		{
			[Token(Token = "0x6000A87")]
			[Address(RVA = "0x8BCF28", Offset = "0x8BCF28", VA = "0x8BCF28")]
			get
			{
				return default(AudioVelocityUpdateMode);
			}
			[Token(Token = "0x6000A88")]
			[Address(RVA = "0x8BCF44", Offset = "0x8BCF44", VA = "0x8BCF44")]
			set
			{
			}
		}

		[Token(Token = "0x17000083")]
		public bool isPlaying
		{
			[Token(Token = "0x6000A89")]
			[Address(RVA = "0x8BCF60", Offset = "0x8BCF60", VA = "0x8BCF60")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000A8A")]
		[Address(RVA = "0x8BCF7C", Offset = "0x8BCF7C", VA = "0x8BCF7C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000A8B")]
		[Address(RVA = "0x8BD16C", Offset = "0x8BD16C", VA = "0x8BD16C")]
		public void SetPlayingSoundGroup(SoundGroup soundGroup)
		{
		}

		[Token(Token = "0x6000A8C")]
		[Address(RVA = "0x8BD1A8", Offset = "0x8BD1A8", VA = "0x8BD1A8")]
		public void SetOnFinished(Action onFinished)
		{
		}

		[Token(Token = "0x6000A8D")]
		[Address(RVA = "0x8BD1B0", Offset = "0x8BD1B0", VA = "0x8BD1B0")]
		public void SetOnFinished(Action<object> onFinished, object obj)
		{
		}

		[Token(Token = "0x6000A8E")]
		[Address(RVA = "0x8BD1E4", Offset = "0x8BD1E4", VA = "0x8BD1E4")]
		public void SetChannel(int _channel)
		{
		}

		[Token(Token = "0x6000A8F")]
		[Address(RVA = "0x8BD1EC", Offset = "0x8BD1EC", VA = "0x8BD1EC")]
		public void SetDefaultParent(Transform parent)
		{
		}

		[Token(Token = "0x6000A90")]
		[Address(RVA = "0x8BD1F4", Offset = "0x8BD1F4", VA = "0x8BD1F4")]
		public void SetAudioMixer(AudioMixerGroup _mixer)
		{
		}

		[Token(Token = "0x6000A91")]
		[Address(RVA = "0x8BD298", Offset = "0x8BD298", VA = "0x8BD298")]
		public bool IsPlaying()
		{
			return default(bool);
		}

		[Token(Token = "0x6000A92")]
		[Address(RVA = "0x8BD304", Offset = "0x8BD304", VA = "0x8BD304")]
		public void Play()
		{
		}

		[Token(Token = "0x6000A93")]
		[Address(RVA = "0x8BD364", Offset = "0x8BD364", VA = "0x8BD364")]
		public void Pause()
		{
		}

		[Token(Token = "0x6000A94")]
		[Address(RVA = "0x8BD39C", Offset = "0x8BD39C", VA = "0x8BD39C")]
		public void Stop()
		{
		}

		[Token(Token = "0x6000A95")]
		[Address(RVA = "0x8BD4BC", Offset = "0x8BD4BC", VA = "0x8BD4BC")]
		private int GetSampleTime()
		{
			return default(int);
		}

		[Token(Token = "0x6000A96")]
		[Address(RVA = "0x8BD514", Offset = "0x8BD514", VA = "0x8BD514")]
		public void ParentTo(Transform parent)
		{
		}

		[Token(Token = "0x6000A97")]
		[Address(RVA = "0x8BD634", Offset = "0x8BD634", VA = "0x8BD634")]
		public void DetachFromParent()
		{
		}

		[Token(Token = "0x6000A98")]
		[Address(RVA = "0x8BD700", Offset = "0x8BD700", VA = "0x8BD700")]
		public void ResetParent(Transform parent)
		{
		}

		[Token(Token = "0x6000A99")]
		[Address(RVA = "0x8BD748", Offset = "0x8BD748", VA = "0x8BD748")]
		public void SyncTo(SoundEmitter other, float fadeTime, float toVolume)
		{
		}

		[Token(Token = "0x6000A9A")]
		[Address(RVA = "0x8BD774", Offset = "0x8BD774", VA = "0x8BD774")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x442C28", Offset = "0x442C28")]
		private IEnumerator DelayedSyncTo(SoundEmitter other, float fadeTime, float toVolume)
		{
			return null;
		}

		[Token(Token = "0x6000A9B")]
		[Address(RVA = "0x8BD81C", Offset = "0x8BD81C", VA = "0x8BD81C")]
		public void FadeTo(float fadeTime, float toVolume)
		{
		}

		[Token(Token = "0x6000A9C")]
		[Address(RVA = "0x8BD910", Offset = "0x8BD910", VA = "0x8BD910")]
		public void FadeIn(float fadeTime, float defaultVolume)
		{
		}

		[Token(Token = "0x6000A9D")]
		[Address(RVA = "0x8BDA3C", Offset = "0x8BDA3C", VA = "0x8BDA3C")]
		public void FadeIn(float fadeTime)
		{
		}

		[Token(Token = "0x6000A9E")]
		[Address(RVA = "0x8BDAB4", Offset = "0x8BDAB4", VA = "0x8BDAB4")]
		public void FadeOut(float fadeTime)
		{
		}

		[Token(Token = "0x6000A9F")]
		[Address(RVA = "0x8BDB4C", Offset = "0x8BDB4C", VA = "0x8BDB4C")]
		public void FadeOutDelayed(float delayedSecs, float fadeTime)
		{
		}

		[Token(Token = "0x6000AA0")]
		[Address(RVA = "0x8BD884", Offset = "0x8BD884", VA = "0x8BD884")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x442C88", Offset = "0x442C88")]
		private IEnumerator FadeSoundChannelTo(float fadeTime, float toVolume)
		{
			return null;
		}

		[Token(Token = "0x6000AA1")]
		[Address(RVA = "0x8BD98C", Offset = "0x8BD98C", VA = "0x8BD98C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x442CE8", Offset = "0x442CE8")]
		private IEnumerator FadeSoundChannel(float delaySecs, float fadeTime, Fade fadeType, float defaultVolume)
		{
			return null;
		}

		[Token(Token = "0x6000AA2")]
		[Address(RVA = "0x8BDBE8", Offset = "0x8BDBE8", VA = "0x8BDBE8")]
		public SoundEmitter()
		{
		}
	}
	[Token(Token = "0x2000142")]
	public enum SoundFXNext
	{
		[Token(Token = "0x4000A5F")]
		Random,
		[Token(Token = "0x4000A60")]
		Sequential
	}
	[Token(Token = "0x2000143")]
	public enum FreqHint
	{
		[Token(Token = "0x4000A62")]
		None,
		[Token(Token = "0x4000A63")]
		Wide,
		[Token(Token = "0x4000A64")]
		Narrow
	}
	[Token(Token = "0x2000144")]
	public enum SoundPriority
	{
		[Token(Token = "0x4000A66")]
		VeryLow = -2,
		[Token(Token = "0x4000A67")]
		Low,
		[Token(Token = "0x4000A68")]
		Default,
		[Token(Token = "0x4000A69")]
		High,
		[Token(Token = "0x4000A6A")]
		VeryHigh
	}
	[Serializable]
	[Token(Token = "0x2000145")]
	public class OSPProps
	{
		[Token(Token = "0x4000A6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x441448", Offset = "0x441448")]
		public bool enableSpatialization;

		[Token(Token = "0x4000A6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x441480", Offset = "0x441480")]
		public bool useFastOverride;

		[Token(Token = "0x4000A6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4414B8", Offset = "0x4414B8")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4414B8", Offset = "0x4414B8")]
		public float gain;

		[Token(Token = "0x4000A6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x44150C", Offset = "0x44150C")]
		public bool enableInvSquare;

		[Token(Token = "0x4000A6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x441544", Offset = "0x441544")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x441544", Offset = "0x441544")]
		public float volumetric;

		[Token(Token = "0x4000A70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x44159C", Offset = "0x44159C")]
		[AttributeAttribute(Name = "MinMaxAttribute", RVA = "0x44159C", Offset = "0x44159C")]
		public Vector2 invSquareFalloff;

		[Token(Token = "0x6000AA3")]
		[Address(RVA = "0xE5A834", Offset = "0xE5A834", VA = "0xE5A834")]
		public OSPProps()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000146")]
	public class SoundFX
	{
		[Token(Token = "0x4000A71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4415FC", Offset = "0x4415FC")]
		public string name;

		[Token(Token = "0x4000A72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x441634", Offset = "0x441634")]
		public SoundFXNext playback;

		[Token(Token = "0x4000A73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x44166C", Offset = "0x44166C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x44166C", Offset = "0x44166C")]
		public float volume;

		[Token(Token = "0x4000A74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4416C0", Offset = "0x4416C0")]
		[AttributeAttribute(Name = "MinMaxAttribute", RVA = "0x4416C0", Offset = "0x4416C0")]
		public Vector2 pitchVariance;

		[Token(Token = "0x4000A75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x44171C", Offset = "0x44171C")]
		[AttributeAttribute(Name = "MinMaxAttribute", RVA = "0x44171C", Offset = "0x44171C")]
		public Vector2 falloffDistance;

		[Token(Token = "0x4000A76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x44177C", Offset = "0x44177C")]
		public AudioRolloffMode falloffCurve;

		[Token(Token = "0x4000A77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4417B4", Offset = "0x4417B4")]
		public AnimationCurve volumeFalloffCurve;

		[Token(Token = "0x4000A78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4417EC", Offset = "0x4417EC")]
		public AnimationCurve reverbZoneMix;

		[Token(Token = "0x4000A79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x441824", Offset = "0x441824")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x441824", Offset = "0x441824")]
		public float spread;

		[Token(Token = "0x4000A7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x44187C", Offset = "0x44187C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x44187C", Offset = "0x44187C")]
		public float pctChanceToPlay;

		[Token(Token = "0x4000A7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4418D0", Offset = "0x4418D0")]
		public SoundPriority priority;

		[Token(Token = "0x4000A7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x441908", Offset = "0x441908")]
		[AttributeAttribute(Name = "MinMaxAttribute", RVA = "0x441908", Offset = "0x441908")]
		public Vector2 delay;

		[Token(Token = "0x4000A7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x441964", Offset = "0x441964")]
		public bool looping;

		[Token(Token = "0x4000A7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public OSPProps ospProps;

		[Token(Token = "0x4000A7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x44199C", Offset = "0x44199C")]
		public AudioClip[] soundClips;

		[Token(Token = "0x4000A80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public bool visibilityToggle;

		[NonSerialized]
		[Token(Token = "0x4000A81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private SoundGroup soundGroup;

		[Token(Token = "0x4000A82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private int lastIdx;

		[Token(Token = "0x4000A83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private int playingIdx;

		[Token(Token = "0x17000084")]
		public int Length
		{
			[Token(Token = "0x6000AA5")]
			[Address(RVA = "0x8BE138", Offset = "0x8BE138", VA = "0x8BE138")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000085")]
		public bool IsValid
		{
			[Token(Token = "0x6000AA6")]
			[Address(RVA = "0x8BE154", Offset = "0x8BE154", VA = "0x8BE154")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000086")]
		public SoundGroup Group
		{
			[Token(Token = "0x6000AA7")]
			[Address(RVA = "0x8BE1F4", Offset = "0x8BE1F4", VA = "0x8BE1F4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000AA8")]
			[Address(RVA = "0x8BE1FC", Offset = "0x8BE1FC", VA = "0x8BE1FC")]
			set
			{
			}
		}

		[Token(Token = "0x17000087")]
		public float MaxFalloffDistSquared
		{
			[Token(Token = "0x6000AA9")]
			[Address(RVA = "0x8BE204", Offset = "0x8BE204", VA = "0x8BE204")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000088")]
		public float GroupVolumeOverride
		{
			[Token(Token = "0x6000AAA")]
			[Address(RVA = "0x8BE210", Offset = "0x8BE210", VA = "0x8BE210")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6000AA4")]
		[Address(RVA = "0x8BDC00", Offset = "0x8BDC00", VA = "0x8BDC00")]
		public SoundFX()
		{
		}

		[Token(Token = "0x6000AAB")]
		[Address(RVA = "0x8BE228", Offset = "0x8BE228", VA = "0x8BE228")]
		public AudioClip GetClip()
		{
			return null;
		}

		[Token(Token = "0x6000AAC")]
		[Address(RVA = "0x8BE2F8", Offset = "0x8BE2F8", VA = "0x8BE2F8")]
		public AudioMixerGroup GetMixerGroup(AudioMixerGroup defaultMixerGroup)
		{
			return null;
		}

		[Token(Token = "0x6000AAD")]
		[Address(RVA = "0x8BE394", Offset = "0x8BE394", VA = "0x8BE394")]
		public bool ReachedGroupPlayLimit()
		{
			return default(bool);
		}

		[Token(Token = "0x6000AAE")]
		[Address(RVA = "0x8BE3C4", Offset = "0x8BE3C4", VA = "0x8BE3C4")]
		public float GetClipLength(int idx)
		{
			return default(float);
		}

		[Token(Token = "0x6000AAF")]
		[Address(RVA = "0x8BE4BC", Offset = "0x8BE4BC", VA = "0x8BE4BC")]
		public float GetPitch()
		{
			return default(float);
		}

		[Token(Token = "0x6000AB0")]
		[Address(RVA = "0x8BE4C8", Offset = "0x8BE4C8", VA = "0x8BE4C8")]
		public int PlaySound(float delaySecs = 0f)
		{
			return default(int);
		}

		[Token(Token = "0x6000AB1")]
		[Address(RVA = "0x8BE5A4", Offset = "0x8BE5A4", VA = "0x8BE5A4")]
		public int PlaySoundAt(Vector3 pos, float delaySecs = 0f, float volumeOverride = 1f, float pitchMultiplier = 1f)
		{
			return default(int);
		}

		[Token(Token = "0x6000AB2")]
		[Address(RVA = "0x8BE6B8", Offset = "0x8BE6B8", VA = "0x8BE6B8")]
		public void SetOnFinished(Action onFinished)
		{
		}

		[Token(Token = "0x6000AB3")]
		[Address(RVA = "0x8BE744", Offset = "0x8BE744", VA = "0x8BE744")]
		public void SetOnFinished(Action<object> onFinished, object obj)
		{
		}

		[Token(Token = "0x6000AB4")]
		[Address(RVA = "0x8BE7D8", Offset = "0x8BE7D8", VA = "0x8BE7D8")]
		public bool StopSound()
		{
			return default(bool);
		}

		[Token(Token = "0x6000AB5")]
		[Address(RVA = "0x8BE864", Offset = "0x8BE864", VA = "0x8BE864")]
		public void AttachToParent(Transform parent)
		{
		}

		[Token(Token = "0x6000AB6")]
		[Address(RVA = "0x8BE8F0", Offset = "0x8BE8F0", VA = "0x8BE8F0")]
		public void DetachFromParent()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000147")]
	public class SoundFXRef
	{
		[Token(Token = "0x4000A84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string soundFXName;

		[Token(Token = "0x4000A85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool initialized;

		[Token(Token = "0x4000A86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private SoundFX soundFXCached;

		[Token(Token = "0x17000089")]
		public SoundFX soundFX
		{
			[Token(Token = "0x6000AB7")]
			[Address(RVA = "0x812BFC", Offset = "0x812BFC", VA = "0x812BFC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700008A")]
		public string name
		{
			[Token(Token = "0x6000AB8")]
			[Address(RVA = "0x812D20", Offset = "0x812D20", VA = "0x812D20")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000AB9")]
			[Address(RVA = "0x812D28", Offset = "0x812D28", VA = "0x812D28")]
			set
			{
			}
		}

		[Token(Token = "0x1700008B")]
		public int Length
		{
			[Token(Token = "0x6000ABB")]
			[Address(RVA = "0x812D50", Offset = "0x812D50", VA = "0x812D50")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700008C")]
		public bool IsValid
		{
			[Token(Token = "0x6000ABC")]
			[Address(RVA = "0x812D8C", Offset = "0x812D8C", VA = "0x812D8C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000ABA")]
		[Address(RVA = "0x812C2C", Offset = "0x812C2C", VA = "0x812C2C")]
		private void Init()
		{
		}

		[Token(Token = "0x6000ABD")]
		[Address(RVA = "0x812DC8", Offset = "0x812DC8", VA = "0x812DC8")]
		public AudioClip GetClip()
		{
			return null;
		}

		[Token(Token = "0x6000ABE")]
		[Address(RVA = "0x812E04", Offset = "0x812E04", VA = "0x812E04")]
		public float GetClipLength(int idx)
		{
			return default(float);
		}

		[Token(Token = "0x6000ABF")]
		[Address(RVA = "0x812E48", Offset = "0x812E48", VA = "0x812E48")]
		public int PlaySound(float delaySecs = 0f)
		{
			return default(int);
		}

		[Token(Token = "0x6000AC0")]
		[Address(RVA = "0x812E94", Offset = "0x812E94", VA = "0x812E94")]
		public int PlaySoundAt(Vector3 pos, float delaySecs = 0f, float volume = 1f, float pitchMultiplier = 1f)
		{
			return default(int);
		}

		[Token(Token = "0x6000AC1")]
		[Address(RVA = "0x812F18", Offset = "0x812F18", VA = "0x812F18")]
		public void SetOnFinished(Action onFinished)
		{
		}

		[Token(Token = "0x6000AC2")]
		[Address(RVA = "0x812F5C", Offset = "0x812F5C", VA = "0x812F5C")]
		public void SetOnFinished(Action<object> onFinished, object obj)
		{
		}

		[Token(Token = "0x6000AC3")]
		[Address(RVA = "0x812FB0", Offset = "0x812FB0", VA = "0x812FB0")]
		public bool StopSound()
		{
			return default(bool);
		}

		[Token(Token = "0x6000AC4")]
		[Address(RVA = "0x812FEC", Offset = "0x812FEC", VA = "0x812FEC")]
		public void AttachToParent(Transform parent)
		{
		}

		[Token(Token = "0x6000AC5")]
		[Address(RVA = "0x813030", Offset = "0x813030", VA = "0x813030")]
		public void DetachFromParent()
		{
		}

		[Token(Token = "0x6000AC6")]
		[Address(RVA = "0x81306C", Offset = "0x81306C", VA = "0x81306C")]
		public SoundFXRef()
		{
		}
	}
}
namespace BallGame
{
	[Token(Token = "0x2000148")]
	public struct BAIDebugInfo
	{
		[Token(Token = "0x4000A87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public bool isAi;

		[Token(Token = "0x4000A88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public Vector2 objectAimPosition;

		[Token(Token = "0x6000AC7")]
		[Address(RVA = "0x40FEA0", Offset = "0x40FEA0", VA = "0x40FEA0")]
		public bool isSame(BAIDebugInfo _other)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000149")]
	public class BAi
	{
		[Token(Token = "0x4000A89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		protected BInputRequest inputNeeded;

		[Token(Token = "0x4000A8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private float time;

		[Token(Token = "0x4000A8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private XDice dice;

		[Token(Token = "0x4000A8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int rules;

		[Token(Token = "0x4000A8D")]
		private const float waitTime = 0f;

		[Token(Token = "0x4000A8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private BSimCueInput simCueInput;

		[Token(Token = "0x4000A8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private int skillLevel;

		[Token(Token = "0x4000A90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private ThreadBoss.MyThread thread;

		[Token(Token = "0x4000A91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private BInputRequest threadReq;

		[Token(Token = "0x4000A92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private BSimBoss threadSimBoss;

		[Token(Token = "0x4000A93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private BInputResponse response;

		[Token(Token = "0x6000AC8")]
		[Address(RVA = "0xDFC554", Offset = "0xDFC554", VA = "0xDFC554")]
		public BAi(int _rules, int _skillLevel)
		{
		}

		[Token(Token = "0x6000AC9")]
		[Address(RVA = "0xDFC5E0", Offset = "0xDFC5E0", VA = "0xDFC5E0")]
		public void doRequest(BInputRequest _req, BSimBoss simBoss)
		{
		}

		[Token(Token = "0x6000ACA")]
		[Address(RVA = "0xDFC6DC", Offset = "0xDFC6DC", VA = "0xDFC6DC")]
		private void calcShot()
		{
		}

		[Token(Token = "0x6000ACB")]
		[Address(RVA = "0xDFC98C", Offset = "0xDFC98C", VA = "0xDFC98C")]
		public BInputResponse getResponse()
		{
			return null;
		}

		[Token(Token = "0x6000ACC")]
		[Address(RVA = "0xDFC6E4", Offset = "0xDFC6E4", VA = "0xDFC6E4")]
		private void requestInputThread(BInputRequest _inputNeeded, BSimBoss simBoss)
		{
		}

		[Token(Token = "0x6000ACD")]
		[Address(RVA = "0xDFCC24", Offset = "0xDFCC24", VA = "0xDFCC24", Slot = "4")]
		public virtual void update(float dt)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200014A")]
	public class BAnimBall
	{
		[Token(Token = "0x4000A94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Vector3 p;

		[Token(Token = "0x4000A95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Vector3 y;

		[Token(Token = "0x4000A96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Vector3 z;

		[Token(Token = "0x4000A97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public bool onTable;

		[Token(Token = "0x6000ACE")]
		[Address(RVA = "0xDFCC34", Offset = "0xDFCC34", VA = "0xDFCC34", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x6000ACF")]
		[Address(RVA = "0xDFCE90", Offset = "0xDFCE90", VA = "0xDFCE90")]
		public BAnimBall(Vector3 _p, Vector3 _y, Vector3 _z)
		{
		}

		[Token(Token = "0x6000AD0")]
		[Address(RVA = "0xDFCF10", Offset = "0xDFCF10", VA = "0xDFCF10")]
		public BAnimBall()
		{
		}

		[Token(Token = "0x6000AD1")]
		[Address(RVA = "0xDFCF20", Offset = "0xDFCF20", VA = "0xDFCF20")]
		public void getBits(ulong[] data)
		{
		}

		[Token(Token = "0x6000AD2")]
		[Address(RVA = "0xDFD108", Offset = "0xDFD108", VA = "0xDFD108")]
		public BAnimBall(ulong[] data)
		{
		}

		[Token(Token = "0x6000AD3")]
		[Address(RVA = "0xDFD004", Offset = "0xDFD004", VA = "0xDFD004")]
		public ulong getlong_position()
		{
			return default(ulong);
		}

		[Token(Token = "0x6000AD4")]
		[Address(RVA = "0xDFD068", Offset = "0xDFD068", VA = "0xDFD068")]
		public ulong getlong_orientation()
		{
			return default(ulong);
		}
	}
	[Serializable]
	[Token(Token = "0x200014B")]
	public struct BAnimEvent
	{
		[Token(Token = "0x4000A98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int type;

		[Token(Token = "0x4000A99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public int ball0;

		[Token(Token = "0x4000A9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public int ball1;

		[Token(Token = "0x4000A9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public int tableItem;

		[Token(Token = "0x4000A9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int iframe;

		[Token(Token = "0x6000AD5")]
		[Address(RVA = "0x40FEFC", Offset = "0x40FEFC", VA = "0x40FEFC", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x6000AD6")]
		[Address(RVA = "0x40FF04", Offset = "0x40FF04", VA = "0x40FF04")]
		public void compare(BAnimEvent e)
		{
		}

		[Token(Token = "0x6000AD7")]
		[Address(RVA = "0x40FF38", Offset = "0x40FF38", VA = "0x40FF38")]
		public ulong shiftAndMask(int v, int mask, int shift)
		{
			return default(ulong);
		}

		[Token(Token = "0x6000AD8")]
		[Address(RVA = "0x40FF48", Offset = "0x40FF48", VA = "0x40FF48")]
		public ulong toLong()
		{
			return default(ulong);
		}

		[Token(Token = "0x6000AD9")]
		[Address(RVA = "0x40FF70", Offset = "0x40FF70", VA = "0x40FF70")]
		public void fromLong(ulong v)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200014C")]
	public class BAnimFrame
	{
		[Token(Token = "0x4000A9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public List<BAnimBall> balls;

		[Token(Token = "0x6000ADA")]
		[Address(RVA = "0xDFD538", Offset = "0xDFD538", VA = "0xDFD538")]
		public BAnimFrame()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200014D")]
	public class BAnimHead : BIEventCallback
	{
		[Token(Token = "0x4000A9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Vector3 cuePos;

		[Token(Token = "0x4000A9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Vector3 cueDir;

		[Token(Token = "0x4000AA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float timeStep;

		[Token(Token = "0x4000AA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public List<BAnimFrame> frames;

		[Token(Token = "0x4000AA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public List<BAnimEvent> events;

		[Token(Token = "0x4000AA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private int iframe;

		[Token(Token = "0x4000AA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private float breakInterval;

		[Token(Token = "0x4000AA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float totalWork;

		[Token(Token = "0x6000ADB")]
		[Address(RVA = "0xDFD5BC", Offset = "0xDFD5BC", VA = "0xDFD5BC", Slot = "4")]
		public bool simEvent(BEvent _event)
		{
			return default(bool);
		}

		[Token(Token = "0x6000ADC")]
		[Address(RVA = "0xDFD6A4", Offset = "0xDFD6A4", VA = "0xDFD6A4")]
		public static Vector3 swapYZ(Vector3 v)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000ADD")]
		[Address(RVA = "0xDFD6B4", Offset = "0xDFD6B4", VA = "0xDFD6B4")]
		public bool doWork(float _work)
		{
			return default(bool);
		}

		[Token(Token = "0x6000ADE")]
		[Address(RVA = "0xDFD6E0", Offset = "0xDFD6E0", VA = "0xDFD6E0")]
		public void getResponseData(BSimCueInput _cueInput, BSimBoss simBoss, float _timeStep)
		{
		}

		[Token(Token = "0x6000ADF")]
		[Address(RVA = "0xDFC9E4", Offset = "0xDFC9E4", VA = "0xDFC9E4")]
		public BAnimHead(BSimCueInput _cueInput, BSimBoss simBoss, float _timeStep)
		{
		}

		[Token(Token = "0x6000AE0")]
		[Address(RVA = "0xDFD878", Offset = "0xDFD878", VA = "0xDFD878")]
		public BAnimHead()
		{
		}

		[Token(Token = "0x6000AE1")]
		[Address(RVA = "0xDFD950", Offset = "0xDFD950", VA = "0xDFD950")]
		public byte[] getBytes()
		{
			return null;
		}

		[Token(Token = "0x6000AE2")]
		[Address(RVA = "0xDFDDE0", Offset = "0xDFDDE0", VA = "0xDFDDE0")]
		public BAnimHead(byte[] _bytes)
		{
		}

		[Token(Token = "0x6000AE3")]
		[Address(RVA = "0xDFE30C", Offset = "0xDFE30C", VA = "0xDFE30C")]
		public void co_write(SuperBits sb)
		{
		}

		[Token(Token = "0x6000AE4")]
		[Address(RVA = "0xDFD9C4", Offset = "0xDFD9C4", VA = "0xDFD9C4")]
		public void write(SuperBits sb)
		{
		}
	}
	[Token(Token = "0x200014E")]
	internal struct BArc
	{
		[Token(Token = "0x4000AA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float a0;

		[Token(Token = "0x4000AA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float a1;

		[Token(Token = "0x4000AA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float d;

		[Token(Token = "0x6000AE5")]
		[Address(RVA = "0x40FF78", Offset = "0x40FF78", VA = "0x40FF78")]
		public float getAngleRange()
		{
			return default(float);
		}

		[Token(Token = "0x6000AE6")]
		[Address(RVA = "0xDFE6DC", Offset = "0xDFE6DC", VA = "0xDFE6DC")]
		public static void addArc(List<BArc> arcs, Vector2 v, float ballRadius)
		{
		}

		[Token(Token = "0x6000AE7")]
		[Address(RVA = "0xDFE818", Offset = "0xDFE818", VA = "0xDFE818")]
		public static void mask(List<BArc> _targets, List<BArc> _blockers)
		{
		}

		[Token(Token = "0x6000AE8")]
		[Address(RVA = "0xDFEA00", Offset = "0xDFEA00", VA = "0xDFEA00")]
		public static void merge(List<BArc> arcs)
		{
		}
	}
	[Token(Token = "0x200014F")]
	public class BBallList
	{
		[Token(Token = "0x4000AA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static BBallType[] anyColor;

		[Token(Token = "0x4000AAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static BBallType[] reds;

		[Token(Token = "0x4000AAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static BBallType[] blues;

		[Token(Token = "0x4000AAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static BBallType[] greens;

		[Token(Token = "0x4000AAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public static BBallType[] yellows;

		[Token(Token = "0x4000AAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public static BBallType[] browns;

		[Token(Token = "0x4000AAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public static BBallType[] pinks;

		[Token(Token = "0x4000AB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public static BBallType[] blacks;

		[Token(Token = "0x4000AB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public static BBallType[] other;

		[Token(Token = "0x4000AB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public static BBallType[] poolAny;

		[Token(Token = "0x4000AB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public static BBallType[] poolStripes;

		[Token(Token = "0x4000AB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public static BBallType[] poolSpots;

		[Token(Token = "0x4000AB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public static BBallType[] pool1Ball;

		[Token(Token = "0x4000AB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public static BBallType[] pool2Ball;

		[Token(Token = "0x4000AB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public static BBallType[] pool3Ball;

		[Token(Token = "0x4000AB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public static BBallType[] pool4Ball;

		[Token(Token = "0x4000AB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public static BBallType[] pool5Ball;

		[Token(Token = "0x4000ABA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public static BBallType[] pool6Ball;

		[Token(Token = "0x4000ABB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public static BBallType[] pool7Ball;

		[Token(Token = "0x4000ABC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public static BBallType[] pool8Ball;

		[Token(Token = "0x4000ABD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public static BBallType[] pool9Ball;

		[Token(Token = "0x4000ABE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public static BBallType[] pool10Ball;

		[Token(Token = "0x4000ABF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public static BBallType[] pool11Ball;

		[Token(Token = "0x4000AC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public static BBallType[] pool12Ball;

		[Token(Token = "0x4000AC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public static BBallType[] pool13Ball;

		[Token(Token = "0x4000AC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public static BBallType[] pool14Ball;

		[Token(Token = "0x4000AC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		public static BBallType[] pool15Ball;

		[Token(Token = "0x6000AE9")]
		[Address(RVA = "0xDFEC40", Offset = "0xDFEC40", VA = "0xDFEC40")]
		public BBallList()
		{
		}
	}
	[Token(Token = "0x2000150")]
	public enum BBallType
	{
		[Token(Token = "0x4000AC5")]
		other,
		[Token(Token = "0x4000AC6")]
		cue,
		[Token(Token = "0x4000AC7")]
		yellow,
		[Token(Token = "0x4000AC8")]
		green,
		[Token(Token = "0x4000AC9")]
		brown,
		[Token(Token = "0x4000ACA")]
		blue,
		[Token(Token = "0x4000ACB")]
		pink,
		[Token(Token = "0x4000ACC")]
		black,
		[Token(Token = "0x4000ACD")]
		red,
		[Token(Token = "0x4000ACE")]
		pool1,
		[Token(Token = "0x4000ACF")]
		pool2,
		[Token(Token = "0x4000AD0")]
		pool3,
		[Token(Token = "0x4000AD1")]
		pool4,
		[Token(Token = "0x4000AD2")]
		pool5,
		[Token(Token = "0x4000AD3")]
		pool6,
		[Token(Token = "0x4000AD4")]
		pool7,
		[Token(Token = "0x4000AD5")]
		pool9,
		[Token(Token = "0x4000AD6")]
		pool10,
		[Token(Token = "0x4000AD7")]
		pool11,
		[Token(Token = "0x4000AD8")]
		pool12,
		[Token(Token = "0x4000AD9")]
		pool13,
		[Token(Token = "0x4000ADA")]
		pool14,
		[Token(Token = "0x4000ADB")]
		pool15,
		[Token(Token = "0x4000ADC")]
		pool8,
		[Token(Token = "0x4000ADD")]
		preview1,
		[Token(Token = "0x4000ADE")]
		count
	}
	[Serializable]
	[Token(Token = "0x2000151")]
	public class BBallTypes
	{
		[Token(Token = "0x4000ADF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public List<BBallType> ballTypes;

		[Token(Token = "0x6000AEB")]
		[Address(RVA = "0xDFF25C", Offset = "0xDFF25C", VA = "0xDFF25C")]
		public BBallTypes()
		{
		}
	}
	[Token(Token = "0x2000152")]
	public class BChop
	{
		[Token(Token = "0x20002B4")]
		private class BContents
		{
			[Token(Token = "0x4000FEC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public List<int> items;

			[Token(Token = "0x6000F79")]
			[Address(RVA = "0x859710", Offset = "0x859710", VA = "0x859710")]
			public BContents()
			{
			}
		}

		[Token(Token = "0x20002B5")]
		private class EnumRange
		{
			[Token(Token = "0x4000FED")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public bool done;

			[Token(Token = "0x4000FEE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public int ix0;

			[Token(Token = "0x4000FEF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public int ix1;

			[Token(Token = "0x4000FF0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public int iy0;

			[Token(Token = "0x4000FF1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public int iy1;

			[Token(Token = "0x4000FF2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public int ix;

			[Token(Token = "0x4000FF3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public int iy;

			[Token(Token = "0x4000FF4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public int iItem;

			[Token(Token = "0x6000F7A")]
			[Address(RVA = "0x859794", Offset = "0x859794", VA = "0x859794")]
			public EnumRange()
			{
			}
		}

		[Token(Token = "0x4000AE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private XRange2 range;

		[Token(Token = "0x4000AE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private float squareSize;

		[Token(Token = "0x4000AE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private int nx;

		[Token(Token = "0x4000AE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int ny;

		[Token(Token = "0x4000AE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private BContents[] contents;

		[Token(Token = "0x4000AE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int[] itemIteration;

		[Token(Token = "0x4000AE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private int iteration;

		[Token(Token = "0x4000AE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private EnumRange enumRange;

		[Token(Token = "0x6000AEC")]
		[Address(RVA = "0xDFF2E0", Offset = "0xDFF2E0", VA = "0xDFF2E0")]
		public BChop(XRange2 _range, float _squareSize, int _maxItems)
		{
		}

		[Token(Token = "0x6000AED")]
		[Address(RVA = "0xDFF4F4", Offset = "0xDFF4F4", VA = "0xDFF4F4")]
		public void addItem(int _index, XRange2 _range)
		{
		}

		[Token(Token = "0x6000AEE")]
		[Address(RVA = "0xDFF660", Offset = "0xDFF660", VA = "0xDFF660")]
		public void getSquareRange(out int ix0, out int ix1, out int iy0, out int iy1, XRange2 _range)
		{
		}

		[Token(Token = "0x6000AEF")]
		[Address(RVA = "0xDFF784", Offset = "0xDFF784", VA = "0xDFF784")]
		public void startEnum(XRange2 _range)
		{
		}

		[Token(Token = "0x6000AF0")]
		[Address(RVA = "0xDFF854", Offset = "0xDFF854", VA = "0xDFF854")]
		public int nextEnum()
		{
			return default(int);
		}
	}
	[Serializable]
	[Token(Token = "0x2000153")]
	public static class BConstants
	{
		[Token(Token = "0x4000AE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static float gravity;

		[Token(Token = "0x4000AE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public static float rollingFriction;

		[Token(Token = "0x4000AEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static float feltFriction;

		[Token(Token = "0x4000AEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public static float restitutionBall;

		[Token(Token = "0x4000AEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static float restitutionCushion;

		[Token(Token = "0x4000AED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public static float restitutionSlate;

		[Token(Token = "0x4000AEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static float timeStep;

		[Token(Token = "0x4000AEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public static float defaultMaxShootSpeed;

		[Token(Token = "0x4000AF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public static float minMaxShootSpeed;

		[Token(Token = "0x4000AF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public static float maxMaxShootSpeed;

		[Token(Token = "0x4000AF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public static float defaultBallRadius;

		[Token(Token = "0x4000AF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public static float minBallRadius;

		[Token(Token = "0x4000AF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public static float maxBallRadius;

		[Token(Token = "0x6000AF1")]
		[Address(RVA = "0xDFFA14", Offset = "0xDFFA14", VA = "0xDFFA14")]
		internal static float getBallDrag()
		{
			return default(float);
		}
	}
	[Token(Token = "0x2000154")]
	public class BCushionArc
	{
		[Token(Token = "0x4000AF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal Vector2 center;

		[Token(Token = "0x4000AF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal float radius;

		[Token(Token = "0x4000AF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		internal int index;

		[Token(Token = "0x6000AF3")]
		[Address(RVA = "0xDFFB68", Offset = "0xDFFB68", VA = "0xDFFB68", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x6000AF4")]
		[Address(RVA = "0xDFFC08", Offset = "0xDFFC08", VA = "0xDFFC08")]
		public BCushionArc()
		{
		}
	}
	[Token(Token = "0x2000155")]
	public class BCushionStraight
	{
		[Token(Token = "0x4000AF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Vector2 v0;

		[Token(Token = "0x4000AF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector2 v1;

		[Token(Token = "0x4000AFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Vector2 normal;

		[Token(Token = "0x4000AFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Vector2 paralell;

		[Token(Token = "0x4000AFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float length;

		[Token(Token = "0x4000AFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public int index;

		[Token(Token = "0x6000AF5")]
		[Address(RVA = "0xDFFC10", Offset = "0xDFFC10", VA = "0xDFFC10")]
		public float getNearestEnd(Vector2 p)
		{
			return default(float);
		}

		[Token(Token = "0x6000AF6")]
		[Address(RVA = "0xDFFC88", Offset = "0xDFFC88", VA = "0xDFFC88", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x6000AF7")]
		[Address(RVA = "0xDFFED8", Offset = "0xDFFED8", VA = "0xDFFED8")]
		public BCushionStraight()
		{
		}
	}
	[Token(Token = "0x2000156")]
	public class BDescBall
	{
		[Token(Token = "0x4000AFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string name;

		[Token(Token = "0x4000AFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public BBallType type;

		[Token(Token = "0x4000B00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Color color;

		[Token(Token = "0x4000B01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string textureName;

		[Token(Token = "0x4000B02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Color trailColor;

		[Token(Token = "0x6000AF8")]
		[Address(RVA = "0xDFFEE0", Offset = "0xDFFEE0", VA = "0xDFFEE0")]
		public BDescBall(string _name, BBallType _type, string _textureName, Color _color)
		{
		}

		[Token(Token = "0x6000AF9")]
		[Address(RVA = "0xDFFF74", Offset = "0xDFFF74", VA = "0xDFFF74")]
		public static BBallType getBallType(string s)
		{
			return default(BBallType);
		}

		[Token(Token = "0x6000AFA")]
		[Address(RVA = "0xE00458", Offset = "0xE00458", VA = "0xE00458")]
		public BDescBall(string s)
		{
		}

		[Token(Token = "0x6000AFB")]
		[Address(RVA = "0xE00940", Offset = "0xE00940", VA = "0xE00940")]
		public BDescBall(BBallType _type)
		{
		}

		[Token(Token = "0x6000AFC")]
		[Address(RVA = "0xE004A4", Offset = "0xE004A4", VA = "0xE004A4")]
		private void init(BBallType _type)
		{
		}
	}
	[Token(Token = "0x2000157")]
	public class BDescGame
	{
		[Token(Token = "0x20002B6")]
		public struct PreviewPos
		{
			[Token(Token = "0x4000FF5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Vector2 pos;

			[Token(Token = "0x4000FF6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public Vector2 facing;

			[Token(Token = "0x4000FF7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public float distance;
		}

		[Token(Token = "0x20002B7")]
		public enum Orientation
		{
			[Token(Token = "0x4000FF9")]
			positiveX,
			[Token(Token = "0x4000FFA")]
			negativeX,
			[Token(Token = "0x4000FFB")]
			positiveY,
			[Token(Token = "0x4000FFC")]
			negativeY
		}

		[Token(Token = "0x20002B8")]
		private class CushionArcSorter : IComparer<BCushionArc>
		{
			[Token(Token = "0x4000FFD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private Vector2 center;

			[Token(Token = "0x6000F7B")]
			[Address(RVA = "0x859884", Offset = "0x859884", VA = "0x859884")]
			public CushionArcSorter(Vector2 _center)
			{
			}

			[Token(Token = "0x6000F7C")]
			[Address(RVA = "0x8598BC", Offset = "0x8598BC", VA = "0x8598BC", Slot = "4")]
			public int Compare(BCushionArc x, BCushionArc y)
			{
				return default(int);
			}
		}

		[Serializable]
		[Token(Token = "0x20002B9")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x43F628", Offset = "0x43F628")]
		private sealed class <>c
		{
			[Token(Token = "0x4000FFE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4000FFF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Comparison<PreviewPos> <>9__23_0;

			[Token(Token = "0x6000F7E")]
			[Address(RVA = "0x859800", Offset = "0x859800", VA = "0x859800")]
			public <>c()
			{
			}

			[Token(Token = "0x6000F7F")]
			[Address(RVA = "0x859808", Offset = "0x859808", VA = "0x859808")]
			internal int <getPreviewPosition>b__23_0(PreviewPos a, PreviewPos b)
			{
				return default(int);
			}
		}

		[Token(Token = "0x20002BA")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x43F638", Offset = "0x43F638")]
		private sealed class <>c__DisplayClass43_0
		{
			[Token(Token = "0x4001000")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Vector2 middle;

			[Token(Token = "0x4001001")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Vector2 direction;

			[Token(Token = "0x6000F80")]
			[Address(RVA = "0x859830", Offset = "0x859830", VA = "0x859830")]
			public <>c__DisplayClass43_0()
			{
			}

			[Token(Token = "0x6000F81")]
			[Address(RVA = "0x859838", Offset = "0x859838", VA = "0x859838")]
			internal int <addLineMarking>b__0(Vector2 p0, Vector2 p1)
			{
				return default(int);
			}
		}

		[Token(Token = "0x4000B03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public XRange2 deeRange;

		[Token(Token = "0x4000B04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public XRange2 headRange;

		[Token(Token = "0x4000B05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public XRange2 tableRange;

		[Token(Token = "0x4000B06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Vector2 deePosition;

		[Token(Token = "0x4000B07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Vector2 deeX;

		[Token(Token = "0x4000B08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Vector2 deeY;

		[Token(Token = "0x4000B09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public BShape tableShape;

		[Token(Token = "0x4000B0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Orientation orientation;

		[Token(Token = "0x4000B0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public float headFraction;

		[Token(Token = "0x4000B0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public float apexFraction;

		[Token(Token = "0x4000B0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public float deeRadius;

		[Token(Token = "0x4000B0E")]
		private const float additionalPocket = 0.05f;

		[Token(Token = "0x4000B0F")]
		public const float ballSpacing = 0.05f;

		[Token(Token = "0x4000B10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public int rules;

		[Token(Token = "0x4000B11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public List<BSlot> slotList;

		[Token(Token = "0x4000B12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public List<BMarkLine> markLineList;

		[Token(Token = "0x4000B13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public List<Vector2> spotList;

		[Token(Token = "0x4000B14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public float ballRadius;

		[Token(Token = "0x4000B15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public string meshName;

		[Token(Token = "0x4000B16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public List<BCushionStraight> cushionStraightList;

		[Token(Token = "0x4000B17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public List<BCushionArc> cushionArcList;

		[Token(Token = "0x4000B18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public List<BDescPocket> pocketList;

		[Token(Token = "0x4000B19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public GameConstants constants;

		[Token(Token = "0x4000B1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private float[] sol;

		[Token(Token = "0x4000B1B")]
		private const int accuracy = 24;

		[Token(Token = "0x4000B1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public BChop chopPockets;

		[Token(Token = "0x4000B1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public BChop chopCushionStraight;

		[Token(Token = "0x4000B1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public BChop chopCushionArc;

		[Token(Token = "0x4000B1F")]
		private const float squareSize = 0.1f;

		[Token(Token = "0x6000AFD")]
		[Address(RVA = "0xE00984", Offset = "0xE00984", VA = "0xE00984")]
		public void getPreviewPosition(List<PreviewPos> previewPositions, Vector2 rayOrigin, Vector2 rayDir)
		{
		}

		[Token(Token = "0x6000AFE")]
		[Address(RVA = "0xE01280", Offset = "0xE01280", VA = "0xE01280")]
		public int getPocketIndex(BDescPocket dp)
		{
			return default(int);
		}

		[Token(Token = "0x6000AFF")]
		[Address(RVA = "0xE01328", Offset = "0xE01328", VA = "0xE01328")]
		public XRange2 getTableRange()
		{
			return null;
		}

		[Token(Token = "0x6000B00")]
		[Address(RVA = "0xE0149C", Offset = "0xE0149C", VA = "0xE0149C")]
		public static int getRules(string _name)
		{
			return default(int);
		}

		[Token(Token = "0x6000B01")]
		[Address(RVA = "0xE015D4", Offset = "0xE015D4", VA = "0xE015D4")]
		public static string getName(int _rules)
		{
			return null;
		}

		[Token(Token = "0x6000B02")]
		[Address(RVA = "0xE01658", Offset = "0xE01658", VA = "0xE01658")]
		public BDescGame(CTable userTable, int _rules)
		{
		}

		[Token(Token = "0x6000B03")]
		[Address(RVA = "0xE03B4C", Offset = "0xE03B4C", VA = "0xE03B4C")]
		private void addSpots()
		{
		}

		[Token(Token = "0x6000B04")]
		[Address(RVA = "0xE03CB4", Offset = "0xE03CB4", VA = "0xE03CB4")]
		private bool isConnected()
		{
			return default(bool);
		}

		[Token(Token = "0x6000B05")]
		[Address(RVA = "0xE03DD8", Offset = "0xE03DD8", VA = "0xE03DD8")]
		private bool isConnected(BCushionStraight str)
		{
			return default(bool);
		}

		[Token(Token = "0x6000B06")]
		[Address(RVA = "0xE02D58", Offset = "0xE02D58", VA = "0xE02D58")]
		private void addPoolExtra(CTable _table)
		{
		}

		[Token(Token = "0x6000B07")]
		[Address(RVA = "0xE03218", Offset = "0xE03218", VA = "0xE03218")]
		private void addSnookerExtra(CTable _table)
		{
		}

		[Token(Token = "0x6000B08")]
		[Address(RVA = "0xE02FB8", Offset = "0xE02FB8", VA = "0xE02FB8")]
		private void addNineBallExtra(CTable _table)
		{
		}

		[Token(Token = "0x6000B09")]
		[Address(RVA = "0xE04FF8", Offset = "0xE04FF8", VA = "0xE04FF8")]
		public BDescGame(BImportTable _table, GameConstants _constants, int _rules)
		{
		}

		[Token(Token = "0x6000B0A")]
		[Address(RVA = "0xE03AF0", Offset = "0xE03AF0", VA = "0xE03AF0")]
		private void addZoneRanges()
		{
		}

		[Token(Token = "0x6000B0B")]
		[Address(RVA = "0xE074EC", Offset = "0xE074EC", VA = "0xE074EC")]
		public void getAxis(out Vector2 x, out Vector2 y, Orientation orientation)
		{
		}

		[Token(Token = "0x6000B0C")]
		[Address(RVA = "0xE06658", Offset = "0xE06658", VA = "0xE06658")]
		private void addPoolBalls(BShape _table)
		{
		}

		[Token(Token = "0x6000B0D")]
		[Address(RVA = "0xE06A3C", Offset = "0xE06A3C", VA = "0xE06A3C")]
		private void addNineBallBalls(BShape _table)
		{
		}

		[Token(Token = "0x6000B0E")]
		[Address(RVA = "0xE042D0", Offset = "0xE042D0", VA = "0xE042D0")]
		private List<Vector2> addLineMarking(Vector2 middle, Vector2 direction, BShape shape)
		{
			return null;
		}

		[Token(Token = "0x6000B0F")]
		[Address(RVA = "0xE04AE4", Offset = "0xE04AE4", VA = "0xE04AE4")]
		private void getLine(out Vector2 v0, out Vector2 v1, Vector2 middle, Vector2 direction, BShape shape)
		{
		}

		[Token(Token = "0x6000B10")]
		[Address(RVA = "0xE047CC", Offset = "0xE047CC", VA = "0xE047CC")]
		private BShape addDee(Vector2 center, float radius, Vector2 tableX, Vector2 tableY)
		{
			return null;
		}

		[Token(Token = "0x6000B11")]
		[Address(RVA = "0xE07528", Offset = "0xE07528", VA = "0xE07528")]
		private BShape getSlicedArea(BShape _shape, Vector2 cutPoint, Vector2 cutNormal)
		{
			return null;
		}

		[Token(Token = "0x6000B12")]
		[Address(RVA = "0xE07954", Offset = "0xE07954", VA = "0xE07954")]
		private float getDistanceToLine(Vector2 p, Vector2 cutP, Vector2 cutN)
		{
			return default(float);
		}

		[Token(Token = "0x6000B13")]
		[Address(RVA = "0xE06EDC", Offset = "0xE06EDC", VA = "0xE06EDC")]
		private void addSnookerBalls(BShape _table)
		{
		}

		[Token(Token = "0x6000B14")]
		[Address(RVA = "0xE00E00", Offset = "0xE00E00", VA = "0xE00E00")]
		private BShape getTableShape()
		{
			return null;
		}

		[Token(Token = "0x6000B15")]
		[Address(RVA = "0xE0344C", Offset = "0xE0344C", VA = "0xE0344C")]
		private void makeChopData()
		{
		}

		[Token(Token = "0x6000B16")]
		[Address(RVA = "0xE0796C", Offset = "0xE0796C", VA = "0xE0796C")]
		internal void makeCustExitPaths()
		{
		}

		[Token(Token = "0x6000B17")]
		[Address(RVA = "0xE06284", Offset = "0xE06284", VA = "0xE06284")]
		internal void makeTestExitPaths()
		{
		}

		[Token(Token = "0x6000B18")]
		[Address(RVA = "0xE07D58", Offset = "0xE07D58", VA = "0xE07D58")]
		private void pyramid(List<BSlot> slots, Vector2 startRowPos, float spacing)
		{
		}

		[Token(Token = "0x6000B19")]
		[Address(RVA = "0xE07E7C", Offset = "0xE07E7C", VA = "0xE07E7C")]
		public BDescGame()
		{
		}

		[Token(Token = "0x6000B1A")]
		[Address(RVA = "0xE08108", Offset = "0xE08108", VA = "0xE08108")]
		public List<Vector3> Slice(List<Vector3> pt, Vector2 linePt, Vector2 lineDir)
		{
			return null;
		}
	}
	[Token(Token = "0x2000158")]
	public class BDescPocket
	{
		[Token(Token = "0x4000B20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal Vector2[] cornerCenter;

		[Token(Token = "0x4000B21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal float[] cornerRadius;

		[Token(Token = "0x4000B22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal Vector2 pos;

		[Token(Token = "0x4000B23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		internal float radius;

		[Token(Token = "0x4000B24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		internal BezPath exitPath;

		[Token(Token = "0x4000B25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		internal float exitPathLength;

		[Token(Token = "0x4000B26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		internal List<BezPathPosition> exitSlots;

		[Token(Token = "0x4000B27")]
		private const int maxPocketPositions = 16;

		[Token(Token = "0x4000B28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float[] sol;

		[Token(Token = "0x6000B1B")]
		[Address(RVA = "0xE02B48", Offset = "0xE02B48", VA = "0xE02B48")]
		internal void addExitStackPositions(float _ballRadius)
		{
		}

		[Token(Token = "0x6000B1C")]
		[Address(RVA = "0xE0834C", Offset = "0xE0834C", VA = "0xE0834C")]
		private bool willPocket(Vector2 _ballStartPos, Vector2 _ballMoveDir, float _ballRadius, int _maxBounces)
		{
			return default(bool);
		}

		[Token(Token = "0x6000B1D")]
		[Address(RVA = "0xE0862C", Offset = "0xE0862C", VA = "0xE0862C")]
		public bool getObjAimPosition(out Vector2 _aimPosition, Vector2 _objBall, float _ballRadius)
		{
			return default(bool);
		}

		[Token(Token = "0x6000B1E")]
		[Address(RVA = "0xE02A40", Offset = "0xE02A40", VA = "0xE02A40")]
		public BDescPocket()
		{
		}
	}
	[Token(Token = "0x2000159")]
	public class BEvent
	{
		[Token(Token = "0x20002BB")]
		public class Type
		{
			[Token(Token = "0x4001002")]
			public const int none = 0;

			[Token(Token = "0x4001003")]
			public const int wallStraight = 1;

			[Token(Token = "0x4001004")]
			public const int ball = 2;

			[Token(Token = "0x4001005")]
			public const int wallArc = 3;

			[Token(Token = "0x4001006")]
			public const int pocket = 4;

			[Token(Token = "0x4001007")]
			public const int nominateBall = 5;

			[Token(Token = "0x4001008")]
			public const int nominatePocket = 6;

			[Token(Token = "0x6000F82")]
			[Address(RVA = "0x859940", Offset = "0x859940", VA = "0x859940")]
			public Type()
			{
			}
		}

		[Token(Token = "0x4000B29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal int type;

		[Token(Token = "0x4000B2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal BSimBall ball0;

		[Token(Token = "0x4000B2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal BSimBall ball1;

		[Token(Token = "0x4000B2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		internal Vector2 vel0;

		[Token(Token = "0x4000B2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		internal Vector2 vel1;

		[Token(Token = "0x4000B2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		internal int index;

		[Token(Token = "0x6000B1F")]
		[Address(RVA = "0xE08880", Offset = "0xE08880", VA = "0xE08880", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x6000B20")]
		[Address(RVA = "0xE0894C", Offset = "0xE0894C", VA = "0xE0894C")]
		public BEvent()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200015A")]
	public class BGameInfo
	{
		[Token(Token = "0x4000B2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public List<BPlayerInfo> players;

		[Token(Token = "0x6000B21")]
		[Address(RVA = "0xE08954", Offset = "0xE08954", VA = "0xE08954")]
		public BGameInfo()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200015B")]
	public class BPlayerInfo
	{
		[Token(Token = "0x4000B30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string name;

		[Token(Token = "0x4000B31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int score;

		[Token(Token = "0x4000B32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int _break;

		[Token(Token = "0x4000B33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool takingTurn;

		[Token(Token = "0x4000B34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		public bool snookered;

		[Token(Token = "0x4000B35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x22")]
		public bool freeBall;

		[Token(Token = "0x4000B36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x23")]
		public bool canMoveBall;

		[Token(Token = "0x4000B37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public BBallType[] targetBalls;

		[Token(Token = "0x6000B22")]
		[Address(RVA = "0xBA0884", Offset = "0xBA0884", VA = "0xBA0884")]
		public BPlayerInfo()
		{
		}
	}
	[Token(Token = "0x200015C")]
	internal interface BIEventCallback
	{
		[Token(Token = "0x6000B23")]
		bool simEvent(BEvent _event);
	}
	[Token(Token = "0x200015D")]
	public interface BILog
	{
		[Token(Token = "0x6000B24")]
		void addLine(string _text);
	}
	[Token(Token = "0x200015E")]
	public class BImportBall
	{
		[Token(Token = "0x4000B38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string name;

		[Token(Token = "0x4000B39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string texture;

		[Token(Token = "0x4000B3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Color color;

		[Token(Token = "0x4000B3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Vector2 p;

		[Token(Token = "0x6000B25")]
		[Address(RVA = "0xE089D8", Offset = "0xE089D8", VA = "0xE089D8")]
		public BImportBall()
		{
		}
	}
	[Token(Token = "0x200015F")]
	public class BImportCircle
	{
		[Token(Token = "0x4000B3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Vector2 center;

		[Token(Token = "0x4000B3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float radius;

		[Token(Token = "0x6000B26")]
		[Address(RVA = "0xE089E0", Offset = "0xE089E0", VA = "0xE089E0", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x6000B27")]
		[Address(RVA = "0xE08BE8", Offset = "0xE08BE8", VA = "0xE08BE8")]
		public BImportCircle()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000160")]
	public class BShape
	{
		[Token(Token = "0x4000B3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string name;

		[Token(Token = "0x4000B3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<BShapeLine> lineList;

		[Token(Token = "0x6000B28")]
		[Address(RVA = "0xBA8A68", Offset = "0xBA8A68", VA = "0xBA8A68")]
		public XRange2 getRange()
		{
			return null;
		}

		[Token(Token = "0x6000B29")]
		[Address(RVA = "0xBA8D1C", Offset = "0xBA8D1C", VA = "0xBA8D1C")]
		public bool isInside(Vector2 v)
		{
			return default(bool);
		}

		[Token(Token = "0x6000B2A")]
		[Address(RVA = "0xBA904C", Offset = "0xBA904C", VA = "0xBA904C")]
		public bool isBallInside(Vector2 v, float r)
		{
			return default(bool);
		}

		[Token(Token = "0x6000B2B")]
		[Address(RVA = "0xBA92CC", Offset = "0xBA92CC", VA = "0xBA92CC")]
		public BShape()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000161")]
	public class BShapeLine
	{
		[Token(Token = "0x4000B40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool loop;

		[Token(Token = "0x4000B41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<Vector2> points;

		[Token(Token = "0x4000B42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float inset;

		[Token(Token = "0x6000B2C")]
		[Address(RVA = "0xBA9198", Offset = "0xBA9198", VA = "0xBA9198")]
		public bool isBallInside(Vector2 _pos, float _radius)
		{
			return default(bool);
		}

		[Token(Token = "0x6000B2D")]
		[Address(RVA = "0xBA8E58", Offset = "0xBA8E58", VA = "0xBA8E58")]
		public bool isPointInside(Vector2 _pos)
		{
			return default(bool);
		}

		[Token(Token = "0x6000B2E")]
		[Address(RVA = "0xBA9374", Offset = "0xBA9374", VA = "0xBA9374")]
		public XRange2 getRange()
		{
			return null;
		}

		[Token(Token = "0x6000B2F")]
		[Address(RVA = "0xBA94CC", Offset = "0xBA94CC", VA = "0xBA94CC")]
		public BShapeLine()
		{
		}
	}
	[Token(Token = "0x2000162")]
	public class BImportEdge
	{
		[Token(Token = "0x4000B43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Vector2 e0;

		[Token(Token = "0x4000B44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector2 e1;

		[Token(Token = "0x6000B30")]
		[Address(RVA = "0xB9721C", Offset = "0xB9721C", VA = "0xB9721C")]
		public BImportEdge()
		{
		}
	}
	[Token(Token = "0x2000163")]
	public class BArea
	{
		[Token(Token = "0x4000B45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string name;

		[Token(Token = "0x4000B46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<Vector2> pts;

		[Token(Token = "0x6000B31")]
		[Address(RVA = "0xDFEBBC", Offset = "0xDFEBBC", VA = "0xDFEBBC")]
		public BArea()
		{
		}
	}
	[Token(Token = "0x2000164")]
	public class BImportTable
	{
		[Token(Token = "0x4000B47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public BDescGame.Orientation orientation;

		[Token(Token = "0x4000B48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float headFraction;

		[Token(Token = "0x4000B49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float apexFraction;

		[Token(Token = "0x4000B4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float deeRadius;

		[Token(Token = "0x4000B4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string name;

		[Token(Token = "0x4000B4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string meshName;

		[Token(Token = "0x4000B4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public List<BImportCircle> cornerList;

		[Token(Token = "0x4000B4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public List<BImportCircle> pocketList;

		[Token(Token = "0x4000B4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public BShape shape;

		[Token(Token = "0x4000B50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public List<BShape> areaList;

		[Token(Token = "0x4000B51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public BezPathGroup exitSplines;

		[Token(Token = "0x4000B52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public float ballRadius;

		[Token(Token = "0x4000B53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public List<BImportBall> ballList;

		[Token(Token = "0x6000B32")]
		[Address(RVA = "0xB97224", Offset = "0xB97224", VA = "0xB97224")]
		public BShape findArea(string _name)
		{
			return null;
		}

		[Token(Token = "0x6000B33")]
		[Address(RVA = "0xB973EC", Offset = "0xB973EC", VA = "0xB973EC")]
		public BImportTable()
		{
		}
	}
	[Token(Token = "0x2000165")]
	public enum BZone
	{
		[Token(Token = "0x4000B55")]
		table,
		[Token(Token = "0x4000B56")]
		head,
		[Token(Token = "0x4000B57")]
		dee
	}
	[Serializable]
	[Token(Token = "0x2000166")]
	public class BInputRequest
	{
		[Token(Token = "0x4000B58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int recipient;

		[Token(Token = "0x4000B59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public bool layoutChanged;

		[Token(Token = "0x4000B5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public BBallType[] targetTypes;

		[Token(Token = "0x4000B5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<BBallType> nominateTypes;

		[Token(Token = "0x4000B5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool canMove;

		[Token(Token = "0x4000B5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		public bool pocketNominate;

		[Token(Token = "0x4000B5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public BZone zone;

		[Token(Token = "0x4000B5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public List<Vector2> otherBalls;

		[Token(Token = "0x4000B60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float ballRadius;

		[Token(Token = "0x6000B34")]
		[Address(RVA = "0xB97590", Offset = "0xB97590", VA = "0xB97590")]
		public byte[] encode()
		{
			return null;
		}

		[Token(Token = "0x6000B35")]
		[Address(RVA = "0xB975F4", Offset = "0xB975F4", VA = "0xB975F4")]
		public static BInputRequest decode(byte[] bytes)
		{
			return null;
		}

		[Token(Token = "0x6000B36")]
		[Address(RVA = "0xB976A8", Offset = "0xB976A8", VA = "0xB976A8")]
		public void addMovement(BZone _zone, BSimBoss _simBoss)
		{
		}

		[Token(Token = "0x6000B37")]
		[Address(RVA = "0xB97838", Offset = "0xB97838", VA = "0xB97838")]
		public bool canPlaceHere(Vector2 here, BSimBoss _simBoss)
		{
			return default(bool);
		}

		[Token(Token = "0x6000B38")]
		[Address(RVA = "0xB97AB4", Offset = "0xB97AB4", VA = "0xB97AB4")]
		public BInputRequest()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000167")]
	public class BInputResponse
	{
		[Token(Token = "0x4000B61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public byte[] bsAnimHead;

		[Token(Token = "0x4000B62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public byte[] bsEndLayout;

		[Token(Token = "0x4000B63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public BAnimHead animHead;

		[Token(Token = "0x4000B64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public List<BSimBoss.LayoutPos> endLayout;

		[Token(Token = "0x6000B39")]
		[Address(RVA = "0xB97B8C", Offset = "0xB97B8C", VA = "0xB97B8C")]
		public byte[] encode()
		{
			return null;
		}

		[Token(Token = "0x6000B3A")]
		[Address(RVA = "0xB97CE0", Offset = "0xB97CE0", VA = "0xB97CE0")]
		public static BInputResponse decode(byte[] bytes)
		{
			return null;
		}

		[Token(Token = "0x6000B3B")]
		[Address(RVA = "0xB97DA0", Offset = "0xB97DA0", VA = "0xB97DA0")]
		public void decode()
		{
		}

		[Token(Token = "0x6000B3C")]
		[Address(RVA = "0xB97EE0", Offset = "0xB97EE0", VA = "0xB97EE0")]
		public BInputResponse()
		{
		}
	}
	[Token(Token = "0x2000168")]
	public class BMarkLine
	{
		[Token(Token = "0x4000B65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public List<Vector2> points;

		[Token(Token = "0x6000B3D")]
		[Address(RVA = "0xB97EE8", Offset = "0xB97EE8", VA = "0xB97EE8")]
		public BMarkLine()
		{
		}
	}
	[Token(Token = "0x2000169")]
	public class BMesh
	{
		[Token(Token = "0x4000B66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public List<Vector3> pts;

		[Token(Token = "0x4000B67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<int> triangles;

		[Token(Token = "0x6000B3E")]
		[Address(RVA = "0xB97F6C", Offset = "0xB97F6C", VA = "0xB97F6C")]
		public BMesh()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200016A")]
	public class BMessage
	{
		[Token(Token = "0x4000B68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int iPlayer;

		[Token(Token = "0x6000B3F")]
		[Address(RVA = "0xB9803C", Offset = "0xB9803C", VA = "0xB9803C", Slot = "4")]
		public virtual string getString(string[] _players)
		{
			return null;
		}

		[Token(Token = "0x6000B40")]
		[Address(RVA = "0xB98080", Offset = "0xB98080", VA = "0xB98080")]
		public BMessage()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200016B")]
	public class BMessageBadBreakPool0 : BMessage
	{
		[Token(Token = "0x6000B41")]
		[Address(RVA = "0xB98088", Offset = "0xB98088", VA = "0xB98088", Slot = "4")]
		public override string getString(string[] _players)
		{
			return null;
		}

		[Token(Token = "0x6000B42")]
		[Address(RVA = "0xB9812C", Offset = "0xB9812C", VA = "0xB9812C")]
		public BMessageBadBreakPool0()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200016C")]
	public class BMessageBadBreakPool1 : BMessage
	{
		[Token(Token = "0x6000B43")]
		[Address(RVA = "0xB98134", Offset = "0xB98134", VA = "0xB98134", Slot = "4")]
		public override string getString(string[] _players)
		{
			return null;
		}

		[Token(Token = "0x6000B44")]
		[Address(RVA = "0xB981D8", Offset = "0xB981D8", VA = "0xB981D8")]
		public BMessageBadBreakPool1()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200016D")]
	public class BMessageBadBreakPool2 : BMessage
	{
		[Token(Token = "0x6000B45")]
		[Address(RVA = "0xB981E0", Offset = "0xB981E0", VA = "0xB981E0", Slot = "4")]
		public override string getString(string[] _players)
		{
			return null;
		}

		[Token(Token = "0x6000B46")]
		[Address(RVA = "0xB98284", Offset = "0xB98284", VA = "0xB98284")]
		public BMessageBadBreakPool2()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200016E")]
	public class BMessageContinue : BMessage
	{
		[Token(Token = "0x6000B47")]
		[Address(RVA = "0xB9828C", Offset = "0xB9828C", VA = "0xB9828C", Slot = "4")]
		public override string getString(string[] _players)
		{
			return null;
		}

		[Token(Token = "0x6000B48")]
		[Address(RVA = "0xB98330", Offset = "0xB98330", VA = "0xB98330")]
		public BMessageContinue()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200016F")]
	public class BMessageToShoot : BMessage
	{
		[Token(Token = "0x6000B49")]
		[Address(RVA = "0xB9930C", Offset = "0xB9930C", VA = "0xB9930C", Slot = "4")]
		public override string getString(string[] _players)
		{
			return null;
		}

		[Token(Token = "0x6000B4A")]
		[Address(RVA = "0xB993B0", Offset = "0xB993B0", VA = "0xB993B0")]
		public BMessageToShoot()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000170")]
	public class BMessageFailedToRail : BMessage
	{
		[Token(Token = "0x6000B4B")]
		[Address(RVA = "0xB98338", Offset = "0xB98338", VA = "0xB98338", Slot = "4")]
		public override string getString(string[] _players)
		{
			return null;
		}

		[Token(Token = "0x6000B4C")]
		[Address(RVA = "0xB9839C", Offset = "0xB9839C", VA = "0xB9839C")]
		public BMessageFailedToRail()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000171")]
	public class BMessageToBreak : BMessage
	{
		[Token(Token = "0x6000B4D")]
		[Address(RVA = "0xB99244", Offset = "0xB99244", VA = "0xB99244", Slot = "4")]
		public override string getString(string[] _players)
		{
			return null;
		}

		[Token(Token = "0x6000B4E")]
		[Address(RVA = "0xB99304", Offset = "0xB99304", VA = "0xB99304")]
		public BMessageToBreak()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000172")]
	public class BMessageSnookerContinueBreak : BMessage
	{
		[Token(Token = "0x4000B69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int _break;

		[Token(Token = "0x4000B6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int scoreThisGo;

		[Token(Token = "0x6000B4F")]
		[Address(RVA = "0xB989E4", Offset = "0xB989E4", VA = "0xB989E4", Slot = "4")]
		public override string getString(string[] _players)
		{
			return null;
		}

		[Token(Token = "0x6000B50")]
		[Address(RVA = "0xB98A8C", Offset = "0xB98A8C", VA = "0xB98A8C")]
		public BMessageSnookerContinueBreak()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000173")]
	public class BMessageGameOverSnooker : BMessageGameOver
	{
		[Token(Token = "0x4000B6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int score1;

		[Token(Token = "0x4000B6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int score2;

		[Token(Token = "0x6000B51")]
		[Address(RVA = "0xB98484", Offset = "0xB98484", VA = "0xB98484", Slot = "4")]
		public override string getString(string[] _players)
		{
			return null;
		}

		[Token(Token = "0x6000B52")]
		[Address(RVA = "0xB98800", Offset = "0xB98800", VA = "0xB98800")]
		public BMessageGameOverSnooker()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000174")]
	public class BMessageGameOver : BMessage
	{
		[Token(Token = "0x6000B53")]
		[Address(RVA = "0xB983A4", Offset = "0xB983A4", VA = "0xB983A4")]
		public BMessageGameOver()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000175")]
	public class BMessageGameOverPool : BMessageGameOver
	{
		[Token(Token = "0x6000B54")]
		[Address(RVA = "0xB983AC", Offset = "0xB983AC", VA = "0xB983AC", Slot = "4")]
		public override string getString(string[] _players)
		{
			return null;
		}

		[Token(Token = "0x6000B55")]
		[Address(RVA = "0xB9847C", Offset = "0xB9847C", VA = "0xB9847C")]
		public BMessageGameOverPool()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000176")]
	public class BMessageSnookerEnd : BMessage
	{
		[Token(Token = "0x4000B6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int _break;

		[Token(Token = "0x6000B56")]
		[Address(RVA = "0xB98A94", Offset = "0xB98A94", VA = "0xB98A94")]
		public BMessageSnookerEnd(int _iPlayer, int theBreak)
		{
		}

		[Token(Token = "0x6000B57")]
		[Address(RVA = "0xB98ACC", Offset = "0xB98ACC", VA = "0xB98ACC", Slot = "4")]
		public override string getString(string[] _players)
		{
			return null;
		}
	}
	[Serializable]
	[Token(Token = "0x2000177")]
	public class BMessageSnookerFailedToHit : BMessage
	{
		[Token(Token = "0x4000B6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int penalty;

		[Token(Token = "0x6000B58")]
		[Address(RVA = "0xB98BC0", Offset = "0xB98BC0", VA = "0xB98BC0")]
		public BMessageSnookerFailedToHit(int _penalty)
		{
		}

		[Token(Token = "0x6000B59")]
		[Address(RVA = "0xB98BEC", Offset = "0xB98BEC", VA = "0xB98BEC", Slot = "4")]
		public override string getString(string[] _players)
		{
			return null;
		}
	}
	[Serializable]
	[Token(Token = "0x2000178")]
	public class BMessageSnookerHitWrongBall : BMessage
	{
		[Token(Token = "0x4000B6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int penalty;

		[Token(Token = "0x6000B5A")]
		[Address(RVA = "0xB98DEC", Offset = "0xB98DEC", VA = "0xB98DEC")]
		public BMessageSnookerHitWrongBall(int _penalty)
		{
		}

		[Token(Token = "0x6000B5B")]
		[Address(RVA = "0xB98E18", Offset = "0xB98E18", VA = "0xB98E18", Slot = "4")]
		public override string getString(string[] _players)
		{
			return null;
		}
	}
	[Serializable]
	[Token(Token = "0x2000179")]
	public class BMessageSnookerPottedWrongBall : BMessage
	{
		[Token(Token = "0x4000B70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int penalty;

		[Token(Token = "0x6000B5C")]
		[Address(RVA = "0xB99018", Offset = "0xB99018", VA = "0xB99018")]
		public BMessageSnookerPottedWrongBall(int _penalty)
		{
		}

		[Token(Token = "0x6000B5D")]
		[Address(RVA = "0xB99044", Offset = "0xB99044", VA = "0xB99044", Slot = "4")]
		public override string getString(string[] _players)
		{
			return null;
		}
	}
	[Serializable]
	[Token(Token = "0x200017A")]
	public class BMessagePoolFailedToHit : BMessage
	{
		[Token(Token = "0x6000B5E")]
		[Address(RVA = "0xB988A0", Offset = "0xB988A0", VA = "0xB988A0", Slot = "4")]
		public override string getString(string[] _players)
		{
			return null;
		}

		[Token(Token = "0x6000B5F")]
		[Address(RVA = "0xB98904", Offset = "0xB98904", VA = "0xB98904")]
		public BMessagePoolFailedToHit()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200017B")]
	public class BMessagePoolContinueBreak : BMessage
	{
		[Token(Token = "0x6000B60")]
		[Address(RVA = "0xB98808", Offset = "0xB98808", VA = "0xB98808", Slot = "4")]
		public override string getString(string[] _players)
		{
			return null;
		}

		[Token(Token = "0x6000B61")]
		[Address(RVA = "0xB9884C", Offset = "0xB9884C", VA = "0xB9884C")]
		public BMessagePoolContinueBreak()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200017C")]
	public class BMessagePoolEnd : BMessage
	{
		[Token(Token = "0x6000B62")]
		[Address(RVA = "0xB98854", Offset = "0xB98854", VA = "0xB98854", Slot = "4")]
		public override string getString(string[] _players)
		{
			return null;
		}

		[Token(Token = "0x6000B63")]
		[Address(RVA = "0xB98898", Offset = "0xB98898", VA = "0xB98898")]
		public BMessagePoolEnd()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200017D")]
	public class BMessagePoolHitWrongBall : BMessage
	{
		[Token(Token = "0x6000B64")]
		[Address(RVA = "0xB9890C", Offset = "0xB9890C", VA = "0xB9890C", Slot = "4")]
		public override string getString(string[] _players)
		{
			return null;
		}

		[Token(Token = "0x6000B65")]
		[Address(RVA = "0xB98970", Offset = "0xB98970", VA = "0xB98970")]
		public BMessagePoolHitWrongBall()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200017E")]
	public class BMessagePoolPottedWrongBall : BMessage
	{
		[Token(Token = "0x6000B66")]
		[Address(RVA = "0xB98978", Offset = "0xB98978", VA = "0xB98978", Slot = "4")]
		public override string getString(string[] _players)
		{
			return null;
		}

		[Token(Token = "0x6000B67")]
		[Address(RVA = "0xB989DC", Offset = "0xB989DC", VA = "0xB989DC")]
		public BMessagePoolPottedWrongBall()
		{
		}
	}
	[Token(Token = "0x200017F")]
	internal class BPlan
	{
		[Token(Token = "0x20002BC")]
		private class SimEventListener : BIEventCallback
		{
			[Token(Token = "0x4001009")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public List<BSimBall> pocketList;

			[Token(Token = "0x400100A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public List<BSimBall> hitList;

			[Token(Token = "0x400100B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private int ballHits;

			[Token(Token = "0x400100C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public int cushionHits;

			[Token(Token = "0x6000F83")]
			[Address(RVA = "0x85A180", Offset = "0x85A180", VA = "0x85A180")]
			public void reset()
			{
			}

			[Token(Token = "0x6000F84")]
			[Address(RVA = "0x85A1EC", Offset = "0x85A1EC", VA = "0x85A1EC", Slot = "4")]
			public bool simEvent(BEvent _event)
			{
				return default(bool);
			}

			[Token(Token = "0x6000F85")]
			[Address(RVA = "0x85A30C", Offset = "0x85A30C", VA = "0x85A30C")]
			public SimEventListener()
			{
			}
		}

		[Token(Token = "0x20002BD")]
		public class MyOtherCallback : BIEventCallback
		{
			[Token(Token = "0x400100D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private bool firstHit;

			[Token(Token = "0x400100E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
			private bool foul;

			[Token(Token = "0x400100F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private BBallType[] targetTypes;

			[Token(Token = "0x4001010")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private BBallType pottedType;

			[Token(Token = "0x6000F86")]
			[Address(RVA = "0x859FE8", Offset = "0x859FE8", VA = "0x859FE8", Slot = "4")]
			public bool simEvent(BEvent _event)
			{
				return default(bool);
			}

			[Token(Token = "0x6000F87")]
			[Address(RVA = "0x85A094", Offset = "0x85A094", VA = "0x85A094")]
			private bool isOnTargetList(BBallType type)
			{
				return default(bool);
			}

			[Token(Token = "0x6000F88")]
			[Address(RVA = "0x85A0FC", Offset = "0x85A0FC", VA = "0x85A0FC")]
			internal bool isFinished()
			{
				return default(bool);
			}

			[Token(Token = "0x6000F89")]
			[Address(RVA = "0x85A104", Offset = "0x85A104", VA = "0x85A104")]
			internal void reset(BBallType[] nextTypes)
			{
			}

			[Token(Token = "0x6000F8A")]
			[Address(RVA = "0x85A138", Offset = "0x85A138", VA = "0x85A138")]
			internal bool committedFoul()
			{
				return default(bool);
			}

			[Token(Token = "0x6000F8B")]
			[Address(RVA = "0x85A140", Offset = "0x85A140", VA = "0x85A140")]
			internal bool didPocketTarget()
			{
				return default(bool);
			}

			[Token(Token = "0x6000F8C")]
			[Address(RVA = "0x85A150", Offset = "0x85A150", VA = "0x85A150")]
			internal BBallType getPottedType()
			{
				return default(BBallType);
			}

			[Token(Token = "0x6000F8D")]
			[Address(RVA = "0x85A158", Offset = "0x85A158", VA = "0x85A158")]
			public MyOtherCallback()
			{
			}
		}

		[Token(Token = "0x20002BE")]
		public class MyCallback : BIEventCallback
		{
			[Token(Token = "0x4001011")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private BSimBall ballHit;

			[Token(Token = "0x6000F8E")]
			[Address(RVA = "0x859F50", Offset = "0x859F50", VA = "0x859F50")]
			public void reset()
			{
			}

			[Token(Token = "0x6000F8F")]
			[Address(RVA = "0x859F5C", Offset = "0x859F5C", VA = "0x859F5C")]
			public bool isFinished()
			{
				return default(bool);
			}

			[Token(Token = "0x6000F90")]
			[Address(RVA = "0x859F6C", Offset = "0x859F6C", VA = "0x859F6C", Slot = "4")]
			public bool simEvent(BEvent _event)
			{
				return default(bool);
			}

			[Token(Token = "0x6000F91")]
			[Address(RVA = "0x859FD8", Offset = "0x859FD8", VA = "0x859FD8")]
			internal BSimBall getBallHit()
			{
				return null;
			}

			[Token(Token = "0x6000F92")]
			[Address(RVA = "0x859FE0", Offset = "0x859FE0", VA = "0x859FE0")]
			public MyCallback()
			{
			}
		}

		[Token(Token = "0x20002BF")]
		internal class Mirror
		{
			[Token(Token = "0x4001012")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal Vector2 position;

			[Token(Token = "0x4001013")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			internal Vector2 direction;

			[Token(Token = "0x4001014")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			internal Vector2 inwardNormal;

			[Token(Token = "0x4001015")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			internal float length;

			[Token(Token = "0x6000F93")]
			[Address(RVA = "0x859B0C", Offset = "0x859B0C", VA = "0x859B0C")]
			internal Vector2 applyPosition(Vector2 _pos)
			{
				return default(Vector2);
			}

			[Token(Token = "0x6000F94")]
			[Address(RVA = "0x859B40", Offset = "0x859B40", VA = "0x859B40")]
			internal Vector2 applyDirection(Vector2 _dir)
			{
				return default(Vector2);
			}

			[Token(Token = "0x6000F95")]
			[Address(RVA = "0x859B68", Offset = "0x859B68", VA = "0x859B68")]
			public Mirror()
			{
			}
		}

		[Token(Token = "0x20002C0")]
		internal class MirrorEnum
		{
			[Token(Token = "0x4001016")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int[] index;

			[Token(Token = "0x4001017")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private int maxBounces;

			[Token(Token = "0x4001018")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private List<Mirror> allMirrors;

			[Token(Token = "0x4001019")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private bool done;

			[Token(Token = "0x400101A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private int bounces;

			[Token(Token = "0x6000F96")]
			[Address(RVA = "0x859B70", Offset = "0x859B70", VA = "0x859B70")]
			internal bool isFinished()
			{
				return default(bool);
			}

			[Token(Token = "0x6000F97")]
			[Address(RVA = "0x859B78", Offset = "0x859B78", VA = "0x859B78")]
			internal void start(List<Mirror> _allMirrors, int _maxBounces)
			{
			}

			[Token(Token = "0x6000F98")]
			[Address(RVA = "0x859C04", Offset = "0x859C04", VA = "0x859C04")]
			internal List<Mirror> next()
			{
				return null;
			}

			[Token(Token = "0x6000F99")]
			[Address(RVA = "0x859EC0", Offset = "0x859EC0", VA = "0x859EC0")]
			private bool hasRepeats()
			{
				return default(bool);
			}

			[Token(Token = "0x6000F9A")]
			[Address(RVA = "0x859D54", Offset = "0x859D54", VA = "0x859D54")]
			private void findNextSequence()
			{
			}

			[Token(Token = "0x6000F9B")]
			[Address(RVA = "0x859F48", Offset = "0x859F48", VA = "0x859F48")]
			public MirrorEnum()
			{
			}
		}

		[Token(Token = "0x20002C1")]
		internal class CueInput
		{
			[Token(Token = "0x400101B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal float power;

			[Token(Token = "0x400101C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			internal Vector2 direction;

			[Token(Token = "0x400101D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			internal BAIDebugInfo aiDebugInfo;

			[Token(Token = "0x400101E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			internal int pocketIndex;

			[Token(Token = "0x6000F9C")]
			[Address(RVA = "0x859AFC", Offset = "0x859AFC", VA = "0x859AFC")]
			public CueInput()
			{
			}
		}

		[Token(Token = "0x20002C2")]
		protected class ShotInfo
		{
			[Token(Token = "0x400101F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal BSimBall targetBall;

			[Token(Token = "0x4001020")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			internal Vector2 cueStartVel;

			[Token(Token = "0x4001021")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			internal Vector2 cueStartPos;

			[Token(Token = "0x4001022")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			internal Vector2 cueExitVel;

			[Token(Token = "0x4001023")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			internal Vector2 cueExitPos;

			[Token(Token = "0x4001024")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			internal float chance;

			[Token(Token = "0x6000F9D")]
			[Address(RVA = "0x85A178", Offset = "0x85A178", VA = "0x85A178")]
			public ShotInfo()
			{
			}
		}

		[Token(Token = "0x20002C3")]
		protected class Shot
		{
			[Token(Token = "0x20002DF")]
			internal enum Type
			{
				[Token(Token = "0x400107C")]
				pot,
				[Token(Token = "0x400107D")]
				safety,
				[Token(Token = "0x400107E")]
				snookerEscape,
				[Token(Token = "0x400107F")]
				random
			}

			[Token(Token = "0x4001025")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal Type type;

			[Token(Token = "0x4001026")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			internal BSimBall ball;

			[Token(Token = "0x4001027")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			internal float merit;

			[Token(Token = "0x4001028")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			internal Vector2 cueVel;

			[Token(Token = "0x4001029")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			internal Shot followShot;

			[Token(Token = "0x400102A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			internal int pocketIndex;

			[Token(Token = "0x400102B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			internal BAIDebugInfo aiDebugInfo;

			[Token(Token = "0x6000F9E")]
			[Address(RVA = "0x85A168", Offset = "0x85A168", VA = "0x85A168")]
			public Shot()
			{
			}
		}

		[Token(Token = "0x20002C4")]
		private class PotPosition
		{
			[Token(Token = "0x400102C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal BDescPocket pocket;

			[Token(Token = "0x400102D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			internal BSimBall sphere;

			[Token(Token = "0x400102E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			internal Vector2 cuePosition;

			[Token(Token = "0x400102F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			internal Vector2 objAimPosition;

			[Token(Token = "0x6000F9F")]
			[Address(RVA = "0x85A160", Offset = "0x85A160", VA = "0x85A160")]
			public PotPosition()
			{
			}
		}

		[Token(Token = "0x20002C5")]
		private struct Encounter
		{
			[Token(Token = "0x4001030")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			internal bool touch;

			[Token(Token = "0x4001031")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			internal float closestSq;
		}

		[Token(Token = "0x20002C6")]
		private class ContactInfo
		{
			[Token(Token = "0x4001032")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal Encounter[] encounter;

			[Token(Token = "0x6000FA0")]
			[Address(RVA = "0x8599F4", Offset = "0x8599F4", VA = "0x8599F4")]
			internal ContactInfo(int nPosition)
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20002C7")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x43F648", Offset = "0x43F648")]
		private sealed class <>c
		{
			[Token(Token = "0x4001033")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4001034")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Comparison<BVisibility.Item> <>9__34_0;

			[Token(Token = "0x6000FA2")]
			[Address(RVA = "0x8599AC", Offset = "0x8599AC", VA = "0x8599AC")]
			public <>c()
			{
			}

			[Token(Token = "0x6000FA3")]
			[Address(RVA = "0x8599B4", Offset = "0x8599B4", VA = "0x8599B4")]
			internal int <getSafetyShot>b__34_0(BVisibility.Item a, BVisibility.Item b)
			{
				return default(int);
			}
		}

		[Token(Token = "0x4000B71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static int calls;

		[Token(Token = "0x4000B72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		protected int skillLevel;

		[Token(Token = "0x4000B73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		protected bool mustRail;

		[Token(Token = "0x4000B74")]
		private const int turnSteps = 100;

		[Token(Token = "0x4000B75")]
		private const float shotAngleError = 0.002f;

		[Token(Token = "0x4000B76")]
		private const int safetyShotSteps = 4;

		[Token(Token = "0x4000B77")]
		private const int nExitPathSteps = 4;

		[Token(Token = "0x4000B78")]
		private const int nTouchShotSteps = 4;

		[Token(Token = "0x4000B79")]
		private const int maxBounces = 4;

		[Token(Token = "0x4000B7A")]
		private const int shotsAhead = 2;

		[Token(Token = "0x4000B7B")]
		private const float maxTime = 5000f;

		[Token(Token = "0x4000B7C")]
		private const int maxPathPoints = 4;

		[Token(Token = "0x4000B7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private BSimBoss rootSim;

		[Token(Token = "0x4000B7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private List<BCushionStraight> straightList;

		[Token(Token = "0x4000B7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private List<BDescPocket> pocketList;

		[Token(Token = "0x4000B80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private List<Mirror> mirrorList;

		[Token(Token = "0x4000B81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private MirrorEnum mirrorEnum;

		[Token(Token = "0x4000B82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Util.Stopwatch stopwatch;

		[Token(Token = "0x4000B83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private bool outOfTime;

		[Token(Token = "0x4000B84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private XDice dice;

		[Token(Token = "0x4000B85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private int iSimLevel;

		[Token(Token = "0x4000B86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private BSimBoss[] simLevel;

		[Token(Token = "0x4000B87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private MyOtherCallback myOtherCallback;

		[Token(Token = "0x4000B88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private float[] quadSolutions;

		[Token(Token = "0x6000B68")]
		[Address(RVA = "0xB993B8", Offset = "0xB993B8", VA = "0xB993B8")]
		internal BPlan()
		{
		}

		[Token(Token = "0x6000B69")]
		[Address(RVA = "0xB994C8", Offset = "0xB994C8", VA = "0xB994C8")]
		internal BPlan(BSimBoss _sim, XDice _dice)
		{
		}

		[Token(Token = "0x6000B6A")]
		[Address(RVA = "0xB999B0", Offset = "0xB999B0", VA = "0xB999B0")]
		internal CueInput getShot(BBallType[] nextTypes, int _skillLevel)
		{
			return null;
		}

		[Token(Token = "0x6000B6B")]
		[Address(RVA = "0xB9A910", Offset = "0xB9A910", VA = "0xB9A910")]
		private float getAngleError()
		{
			return default(float);
		}

		[Token(Token = "0x6000B6C")]
		[Address(RVA = "0xB9A940", Offset = "0xB9A940", VA = "0xB9A940")]
		private float getPowerError()
		{
			return default(float);
		}

		[Token(Token = "0x6000B6D")]
		[Address(RVA = "0xB9A990", Offset = "0xB9A990", VA = "0xB9A990")]
		private bool timeCheck()
		{
			return default(bool);
		}

		[Token(Token = "0x6000B6E")]
		[Address(RVA = "0xB9AA94", Offset = "0xB9AA94", VA = "0xB9AA94", Slot = "4")]
		protected virtual BSimBoss getSimAfterPot(BBallType[] nextTypes, BSimBoss _sim, BSimBall ballToPot)
		{
			return null;
		}

		[Token(Token = "0x6000B6F")]
		[Address(RVA = "0xB9ABD8", Offset = "0xB9ABD8", VA = "0xB9ABD8", Slot = "5")]
		protected virtual BBallType[] getNextTypes(BBallType[] currentTypes, BSimBoss _sim, BBallType typePotted)
		{
			return null;
		}

		[Token(Token = "0x6000B70")]
		[Address(RVA = "0xB9AC3C", Offset = "0xB9AC3C", VA = "0xB9AC3C", Slot = "6")]
		protected virtual BBallType[] getOpponentTypes(BSimBoss _sim)
		{
			return null;
		}

		[Token(Token = "0x6000B71")]
		[Address(RVA = "0xB9ACA0", Offset = "0xB9ACA0", VA = "0xB9ACA0")]
		private ShotInfo getSafetyShot(BBallType[] targetTypes, BBallType[] opponentTypes, BSimBoss startSim, BVisibility visibilty)
		{
			return null;
		}

		[Token(Token = "0x6000B72")]
		[Address(RVA = "0xB9B5DC", Offset = "0xB9B5DC", VA = "0xB9B5DC")]
		private void getBestStrength(ref float bestMerit, ShotInfo shot, Vector2 cueDirection, float hitDistance, BSimBoss testSim, BSimBoss _sim, SimEventListener listener, BBallType[] opponentTypes, List<Vector2> startBallPositions)
		{
		}

		[Token(Token = "0x6000B73")]
		[Address(RVA = "0xB9A05C", Offset = "0xB9A05C", VA = "0xB9A05C")]
		private Shot getBestShot(BBallType[] wantedTypes)
		{
			return null;
		}

		[Token(Token = "0x6000B74")]
		[Address(RVA = "0xB9CB74", Offset = "0xB9CB74", VA = "0xB9CB74")]
		private ShotInfo getSnookerEscapeShot(Vector2 _cuePos, BBallType[] _nextTypes, BSimBoss _sim)
		{
			return null;
		}

		[Token(Token = "0x6000B75")]
		[Address(RVA = "0xB9C480", Offset = "0xB9C480", VA = "0xB9C480")]
		private List<BSimBall> getTargetList(BBallType[] types, BSimBoss _sim)
		{
			return null;
		}

		[Token(Token = "0x6000B76")]
		[Address(RVA = "0xB9D148", Offset = "0xB9D148", VA = "0xB9D148")]
		private bool isPathBlocked(Vector2 _start, Vector2 _end, BSimBoss _sim, BSimBall _targetBall)
		{
			return default(bool);
		}

		[Token(Token = "0x6000B77")]
		[Address(RVA = "0xB9D39C", Offset = "0xB9D39C", VA = "0xB9D39C", Slot = "7")]
		protected virtual int ballScore(BBallType _type)
		{
			return default(int);
		}

		[Token(Token = "0x6000B78")]
		[Address(RVA = "0xB9D3A4", Offset = "0xB9D3A4", VA = "0xB9D3A4")]
		private ShotInfo getTouchShot(Vector2 _cuePos, BSimBall _targetBall, BSimBoss _sim, int _nSteps)
		{
			return null;
		}

		[Token(Token = "0x6000B79")]
		[Address(RVA = "0xB9D608", Offset = "0xB9D608", VA = "0xB9D608")]
		private Vector2 getMirroredPosition(Vector2 pos, List<Mirror> mirrors, int count = -1)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6000B7A")]
		[Address(RVA = "0xB9D6D8", Offset = "0xB9D6D8", VA = "0xB9D6D8")]
		private Vector2 getMirroredDirection(Vector2 dir, List<Mirror> mirrors, int count = -1)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6000B7B")]
		[Address(RVA = "0xB9D7A8", Offset = "0xB9D7A8", VA = "0xB9D7A8")]
		private bool isPathBlocked(Vector2 _start, Vector2 _end, BSimBoss _sim, List<Mirror> _mirrorList, BSimBall _targetBall)
		{
			return default(bool);
		}

		[Token(Token = "0x6000B7C")]
		[Address(RVA = "0xB9DAC8", Offset = "0xB9DAC8", VA = "0xB9DAC8")]
		private bool doLinesCross(Vector2 a0, Vector2 a1, Vector2 b0, Vector2 b1)
		{
			return default(bool);
		}

		[Token(Token = "0x6000B7D")]
		[Address(RVA = "0xB9DB4C", Offset = "0xB9DB4C", VA = "0xB9DB4C")]
		private bool arePathBouncesPossible(Vector2 start, Vector2 end, List<Mirror> mirrors)
		{
			return default(bool);
		}

		[Token(Token = "0x6000B7E")]
		[Address(RVA = "0xB9CDF8", Offset = "0xB9CDF8", VA = "0xB9CDF8")]
		private ShotInfo getTouchShot(Vector2 cuePos, BSimBall target, BSimBoss _sim, List<Mirror> mirrors)
		{
			return null;
		}

		[Token(Token = "0x6000B7F")]
		[Address(RVA = "0xB9DC78", Offset = "0xB9DC78", VA = "0xB9DC78")]
		private bool getMoveTouchBall(out float best, Vector2 pos, Vector2 dir, Vector2 targetPos, float touchDistance)
		{
			return default(bool);
		}

		[Token(Token = "0x6000B80")]
		[Address(RVA = "0xB9DD64", Offset = "0xB9DD64", VA = "0xB9DD64")]
		private bool getMoveTouchCushion(out float t, Vector2 pos, Vector2 dir, BCushionStraight cushion)
		{
			return default(bool);
		}

		[Token(Token = "0x6000B81")]
		[Address(RVA = "0xB9DDE0", Offset = "0xB9DDE0", VA = "0xB9DDE0")]
		private List<Vector2> getPath(out bool endInPot, Vector2 pos, Vector2 vel, BSimBoss _sim, BSimBall _ignoreBall)
		{
			return null;
		}

		[Token(Token = "0x6000B82")]
		[Address(RVA = "0xB9E568", Offset = "0xB9E568", VA = "0xB9E568")]
		private float getPathLength(List<Vector2> _path)
		{
			return default(float);
		}

		[Token(Token = "0x6000B83")]
		[Address(RVA = "0xB9E664", Offset = "0xB9E664", VA = "0xB9E664")]
		private Vector2 getPathPosition(List<Vector2> _path, float _distance)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6000B84")]
		[Address(RVA = "0xB9E7B4", Offset = "0xB9E7B4", VA = "0xB9E7B4")]
		private Vector2 getCueVelocity(ShotInfo si, float exitDistance)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6000B85")]
		[Address(RVA = "0xB9E91C", Offset = "0xB9E91C", VA = "0xB9E91C")]
		private void getExitDistanceRange(out float minDis, out float maxDis, ShotInfo si)
		{
		}

		[Token(Token = "0x6000B86")]
		[Address(RVA = "0xB9EC48", Offset = "0xB9EC48", VA = "0xB9EC48")]
		private float getAngle(Vector2 v)
		{
			return default(float);
		}

		[Token(Token = "0x6000B87")]
		[Address(RVA = "0xB9EC6C", Offset = "0xB9EC6C", VA = "0xB9EC6C")]
		private List<PotPosition> getPotPositions(BSimBoss sim, List<BSimBall> targetList, BVisibility visibility)
		{
			return null;
		}
	}
	[Token(Token = "0x2000180")]
	internal class BPlanNineBall : BPlan
	{
		[Token(Token = "0x6000B89")]
		[Address(RVA = "0xB9F5D4", Offset = "0xB9F5D4", VA = "0xB9F5D4")]
		internal BPlanNineBall(BSimBoss _game, XDice _dice)
		{
		}

		[Token(Token = "0x6000B8A")]
		[Address(RVA = "0xB9F658", Offset = "0xB9F658", VA = "0xB9F658", Slot = "7")]
		protected override int ballScore(BBallType _type)
		{
			return default(int);
		}

		[Token(Token = "0x6000B8B")]
		[Address(RVA = "0xB9F660", Offset = "0xB9F660", VA = "0xB9F660", Slot = "5")]
		protected override BBallType[] getNextTypes(BBallType[] _currentTypes, BSimBoss _sim, BBallType _typePotted)
		{
			return null;
		}
	}
	[Token(Token = "0x2000181")]
	internal class BPlanPool : BPlan
	{
		[Token(Token = "0x6000B8C")]
		[Address(RVA = "0xB9FB7C", Offset = "0xB9FB7C", VA = "0xB9FB7C")]
		internal BPlanPool(BSimBoss _game, XDice _dice)
		{
		}

		[Token(Token = "0x6000B8D")]
		[Address(RVA = "0xB9FC00", Offset = "0xB9FC00", VA = "0xB9FC00", Slot = "7")]
		protected override int ballScore(BBallType _type)
		{
			return default(int);
		}

		[Token(Token = "0x6000B8E")]
		[Address(RVA = "0xB9FC08", Offset = "0xB9FC08", VA = "0xB9FC08", Slot = "5")]
		protected override BBallType[] getNextTypes(BBallType[] _currentTypes, BSimBoss _sim, BBallType _typePotted)
		{
			return null;
		}
	}
	[Token(Token = "0x2000182")]
	internal class BPlanSnooker : BPlan
	{
		[Token(Token = "0x6000B8F")]
		[Address(RVA = "0xBA005C", Offset = "0xBA005C", VA = "0xBA005C")]
		internal BPlanSnooker(BSimBoss _game, XDice _dice)
		{
		}

		[Token(Token = "0x6000B90")]
		[Address(RVA = "0xBA00D4", Offset = "0xBA00D4", VA = "0xBA00D4", Slot = "6")]
		protected override BBallType[] getOpponentTypes(BSimBoss _sim)
		{
			return null;
		}

		[Token(Token = "0x6000B91")]
		[Address(RVA = "0xBA0410", Offset = "0xBA0410", VA = "0xBA0410", Slot = "7")]
		protected override int ballScore(BBallType _type)
		{
			return default(int);
		}

		[Token(Token = "0x6000B92")]
		[Address(RVA = "0xBA0434", Offset = "0xBA0434", VA = "0xBA0434", Slot = "4")]
		protected override BSimBoss getSimAfterPot(BBallType[] nextTypes, BSimBoss _sim, BSimBall ballToPot)
		{
			return null;
		}

		[Token(Token = "0x6000B93")]
		[Address(RVA = "0xBA0548", Offset = "0xBA0548", VA = "0xBA0548", Slot = "5")]
		protected override BBallType[] getNextTypes(BBallType[] _currentTypes, BSimBoss _sim, BBallType _typePotted)
		{
			return null;
		}
	}
	[Token(Token = "0x2000183")]
	public class BPlayer
	{
		[Token(Token = "0x4000B89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string name;

		[Token(Token = "0x4000B8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int score;

		[Token(Token = "0x4000B8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int _break;

		[Token(Token = "0x4000B8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool moving;

		[Token(Token = "0x4000B8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		public bool snookered;

		[Token(Token = "0x6000B94")]
		[Address(RVA = "0xBA0808", Offset = "0xBA0808", VA = "0xBA0808")]
		internal BPlayer(string _name)
		{
		}
	}
	[Token(Token = "0x2000184")]
	internal class BPlayerNineBall : BPlayer
	{
		[Token(Token = "0x4000B8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		internal BBallType[] targetBalls;

		[Token(Token = "0x4000B8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		internal int fouls;

		[Token(Token = "0x4000B90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		internal int bestRun;

		[Token(Token = "0x4000B91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		internal int currentRun;

		[Token(Token = "0x6000B95")]
		[Address(RVA = "0xBA088C", Offset = "0xBA088C", VA = "0xBA088C")]
		internal BPlayerNineBall(string _name)
		{
		}
	}
	[Token(Token = "0x2000185")]
	internal class BPlayerPool : BPlayer
	{
		[Token(Token = "0x4000B92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		internal BBallType[] targetBalls;

		[Token(Token = "0x4000B93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		internal int fouls;

		[Token(Token = "0x4000B94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		internal int bestRun;

		[Token(Token = "0x4000B95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		internal bool freeBall;

		[Token(Token = "0x6000B96")]
		[Address(RVA = "0xBA0914", Offset = "0xBA0914", VA = "0xBA0914")]
		internal BPlayerPool(string _name)
		{
		}
	}
	[Token(Token = "0x2000186")]
	public class BPlayerSnooker : BPlayer
	{
		[Token(Token = "0x4000B96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public int bestBreak;

		[Token(Token = "0x4000B97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int fouls;

		[Token(Token = "0x6000B97")]
		[Address(RVA = "0xBA099C", Offset = "0xBA099C", VA = "0xBA099C")]
		internal BPlayerSnooker(string _name)
		{
		}
	}
	[Token(Token = "0x2000187")]
	public class BPocket
	{
		[Token(Token = "0x4000B98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public BDescPocket desc;

		[Token(Token = "0x6000B98")]
		[Address(RVA = "0xBA09A0", Offset = "0xBA09A0", VA = "0xBA09A0")]
		public BPocket()
		{
		}
	}
	[Token(Token = "0x2000188")]
	internal class BRef
	{
		[Serializable]
		[Token(Token = "0x20002C8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x43F658", Offset = "0x43F658")]
		private sealed class <>c
		{
			[Token(Token = "0x4001035")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4001036")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Comparison<BSimBall> <>9__12_0;

			[Token(Token = "0x6000FA5")]
			[Address(RVA = "0x85A420", Offset = "0x85A420", VA = "0x85A420")]
			public <>c()
			{
			}

			[Token(Token = "0x6000FA6")]
			[Address(RVA = "0x85A428", Offset = "0x85A428", VA = "0x85A428")]
			internal int <fixBallsInPockets>b__12_0(BSimBall a, BSimBall b)
			{
				return default(int);
			}
		}

		[Token(Token = "0x4000B99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		protected BSimBoss simBoss;

		[Token(Token = "0x4000B9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected int playerIndex;

		[Token(Token = "0x4000B9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		protected List<BPlayer> playerList;

		[Token(Token = "0x4000B9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		protected XDice dice;

		[Token(Token = "0x4000B9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		protected BILog logger;

		[Token(Token = "0x4000B9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		protected BInputRequest inputRequest;

		[Token(Token = "0x4000B9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		protected BMessage message;

		[Token(Token = "0x6000B99")]
		[Address(RVA = "0xBA09A8", Offset = "0xBA09A8", VA = "0xBA09A8", Slot = "4")]
		public virtual void doneMessage(BMessage _message)
		{
		}

		[Token(Token = "0x6000B9A")]
		[Address(RVA = "0xBA09AC", Offset = "0xBA09AC", VA = "0xBA09AC")]
		public BMessage getMessage()
		{
			return null;
		}

		[Token(Token = "0x6000B9B")]
		[Address(RVA = "0xBA09D8", Offset = "0xBA09D8", VA = "0xBA09D8")]
		public void setInputResponse(BInputResponse _response)
		{
		}

		[Token(Token = "0x6000B9C")]
		[Address(RVA = "0xBA0E68", Offset = "0xBA0E68", VA = "0xBA0E68", Slot = "5")]
		public virtual BInputRequest getInputRequest()
		{
			return null;
		}

		[Token(Token = "0x6000B9D")]
		[Address(RVA = "0xBA0AB8", Offset = "0xBA0AB8", VA = "0xBA0AB8")]
		internal BMessage processInputResponse(BInputResponse inputResponse)
		{
			return null;
		}

		[Token(Token = "0x6000B9E")]
		[Address(RVA = "0xBA0E70", Offset = "0xBA0E70", VA = "0xBA0E70")]
		private void fixBallsInPockets()
		{
		}

		[Token(Token = "0x6000B9F")]
		[Address(RVA = "0xBA16B0", Offset = "0xBA16B0", VA = "0xBA16B0")]
		internal BRef()
		{
		}

		[Token(Token = "0x6000BA0")]
		[Address(RVA = "0xBA171C", Offset = "0xBA171C", VA = "0xBA171C")]
		internal BRef(BSimBoss _simBoss, string[] _playerNames, BILog _logger)
		{
		}

		[Token(Token = "0x6000BA1")]
		[Address(RVA = "0xBA189C", Offset = "0xBA189C", VA = "0xBA189C")]
		public void setPlayerName(int _index, string _name)
		{
		}

		[Token(Token = "0x6000BA2")]
		[Address(RVA = "0xBA1920", Offset = "0xBA1920", VA = "0xBA1920")]
		public BGameInfo getGameInfo()
		{
			return null;
		}

		[Token(Token = "0x6000BA3")]
		[Address(RVA = "0xBA1C08", Offset = "0xBA1C08", VA = "0xBA1C08")]
		protected void log(string _message)
		{
		}

		[Token(Token = "0x6000BA4")]
		[Address(RVA = "0xBA1CD0", Offset = "0xBA1CD0", VA = "0xBA1CD0", Slot = "6")]
		public virtual void onHitBall(BAnimEvent _event)
		{
		}

		[Token(Token = "0x6000BA5")]
		[Address(RVA = "0xBA1CD4", Offset = "0xBA1CD4", VA = "0xBA1CD4", Slot = "7")]
		public virtual void onNominateBall(BAnimEvent _event)
		{
		}

		[Token(Token = "0x6000BA6")]
		[Address(RVA = "0xBA1CD8", Offset = "0xBA1CD8", VA = "0xBA1CD8", Slot = "8")]
		public virtual void onNominatePocket(BAnimEvent _event)
		{
		}

		[Token(Token = "0x6000BA7")]
		[Address(RVA = "0xBA1CDC", Offset = "0xBA1CDC", VA = "0xBA1CDC", Slot = "9")]
		public virtual void onHitPocket(BAnimEvent _event)
		{
		}

		[Token(Token = "0x6000BA8")]
		[Address(RVA = "0xBA1CE0", Offset = "0xBA1CE0", VA = "0xBA1CE0", Slot = "10")]
		public virtual void onHitCushion(BAnimEvent _event)
		{
		}

		[Token(Token = "0x6000BA9")]
		[Address(RVA = "0xBA1364", Offset = "0xBA1364", VA = "0xBA1364")]
		internal bool isSnookered()
		{
			return default(bool);
		}

		[Token(Token = "0x6000BAA")]
		[Address(RVA = "0xBA1CE4", Offset = "0xBA1CE4", VA = "0xBA1CE4")]
		internal BPlayer getCurrentPlayer()
		{
			return null;
		}

		[Token(Token = "0x6000BAB")]
		[Address(RVA = "0xBA1D50", Offset = "0xBA1D50", VA = "0xBA1D50", Slot = "11")]
		public virtual int getRules()
		{
			return default(int);
		}

		[Token(Token = "0x6000BAC")]
		[Address(RVA = "0xBA1D58", Offset = "0xBA1D58", VA = "0xBA1D58", Slot = "12")]
		internal virtual BPlayer getWinner()
		{
			return null;
		}

		[Token(Token = "0x6000BAD")]
		[Address(RVA = "0xBA1D60", Offset = "0xBA1D60", VA = "0xBA1D60", Slot = "13")]
		internal virtual void onShoot()
		{
		}

		[Token(Token = "0x6000BAE")]
		[Address(RVA = "0xBA1D64", Offset = "0xBA1D64", VA = "0xBA1D64", Slot = "14")]
		internal virtual void onStopMoving()
		{
		}

		[Token(Token = "0x6000BAF")]
		[Address(RVA = "0xBA2148", Offset = "0xBA2148", VA = "0xBA2148", Slot = "15")]
		internal virtual BBallType[] getNextBallTypes()
		{
			return null;
		}

		[Token(Token = "0x6000BB0")]
		[Address(RVA = "0xBA21AC", Offset = "0xBA21AC", VA = "0xBA21AC", Slot = "16")]
		internal virtual bool isFreeBall()
		{
			return default(bool);
		}

		[Token(Token = "0x6000BB1")]
		[Address(RVA = "0xBA21B4", Offset = "0xBA21B4", VA = "0xBA21B4", Slot = "17")]
		internal virtual void setupBalls()
		{
		}

		[Token(Token = "0x6000BB2")]
		[Address(RVA = "0xBA21B8", Offset = "0xBA21B8", VA = "0xBA21B8", Slot = "18")]
		internal virtual bool switchPlayers()
		{
			return default(bool);
		}

		[Token(Token = "0x6000BB3")]
		[Address(RVA = "0xBA21C0", Offset = "0xBA21C0", VA = "0xBA21C0", Slot = "19")]
		public virtual bool onHitCushion(BEvent _event)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000189")]
	internal class BRefNineBall : BRef
	{
		[Token(Token = "0x4000BA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private BPlayer winner;

		[Token(Token = "0x4000BA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private bool firstBallHit;

		[Token(Token = "0x4000BA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
		private bool foul;

		[Token(Token = "0x4000BA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x52")]
		private bool breakShot;

		[Token(Token = "0x4000BA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private List<BSimBall> pocketedBalls;

		[Token(Token = "0x4000BA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private List<BSimBall> railedBalls;

		[Token(Token = "0x4000BA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private bool swapPlayers;

		[Token(Token = "0x4000BA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x69")]
		private bool ballInHand;

		[Token(Token = "0x4000BA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private int run;

		[Token(Token = "0x4000BA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private List<Vector2> startPositions;

		[Token(Token = "0x6000BB4")]
		[Address(RVA = "0xBA21C8", Offset = "0xBA21C8", VA = "0xBA21C8")]
		internal BRefNineBall(BSimBoss _boss, string[] _playerNames, BILog _logger)
		{
		}

		[Token(Token = "0x6000BB5")]
		[Address(RVA = "0xBA2598", Offset = "0xBA2598", VA = "0xBA2598", Slot = "13")]
		internal override void onShoot()
		{
		}

		[Token(Token = "0x6000BB6")]
		[Address(RVA = "0xBA260C", Offset = "0xBA260C", VA = "0xBA260C", Slot = "12")]
		internal override BPlayer getWinner()
		{
			return null;
		}

		[Token(Token = "0x6000BB7")]
		[Address(RVA = "0xBA2614", Offset = "0xBA2614", VA = "0xBA2614", Slot = "19")]
		public override bool onHitCushion(BEvent _event)
		{
			return default(bool);
		}

		[Token(Token = "0x6000BB8")]
		[Address(RVA = "0xBA26B4", Offset = "0xBA26B4", VA = "0xBA26B4", Slot = "6")]
		public override void onHitBall(BAnimEvent _event)
		{
		}

		[Token(Token = "0x6000BB9")]
		[Address(RVA = "0xBA2878", Offset = "0xBA2878", VA = "0xBA2878", Slot = "9")]
		public override void onHitPocket(BAnimEvent _event)
		{
		}

		[Token(Token = "0x6000BBA")]
		[Address(RVA = "0xBA2938", Offset = "0xBA2938", VA = "0xBA2938")]
		internal void onPocketBall(BDescPocket _pocket, BSimBall _ball)
		{
		}

		[Token(Token = "0x6000BBB")]
		[Address(RVA = "0xBA299C", Offset = "0xBA299C", VA = "0xBA299C")]
		private bool isBallPocketed(BBallType _type)
		{
			return default(bool);
		}

		[Token(Token = "0x6000BBC")]
		[Address(RVA = "0xBA2ACC", Offset = "0xBA2ACC", VA = "0xBA2ACC", Slot = "18")]
		internal override bool switchPlayers()
		{
			return default(bool);
		}

		[Token(Token = "0x6000BBD")]
		[Address(RVA = "0xBA2BA0", Offset = "0xBA2BA0", VA = "0xBA2BA0", Slot = "16")]
		internal override bool isFreeBall()
		{
			return default(bool);
		}

		[Token(Token = "0x6000BBE")]
		[Address(RVA = "0xBA2BA8", Offset = "0xBA2BA8", VA = "0xBA2BA8", Slot = "14")]
		internal override void onStopMoving()
		{
		}

		[Token(Token = "0x6000BBF")]
		[Address(RVA = "0xBA3870", Offset = "0xBA3870", VA = "0xBA3870", Slot = "15")]
		internal override BBallType[] getNextBallTypes()
		{
			return null;
		}

		[Token(Token = "0x6000BC0")]
		[Address(RVA = "0xBA38F4", Offset = "0xBA38F4", VA = "0xBA38F4", Slot = "17")]
		internal override void setupBalls()
		{
		}

		[Token(Token = "0x6000BC1")]
		[Address(RVA = "0xBA3D00", Offset = "0xBA3D00", VA = "0xBA3D00")]
		private BSimBall findBall(BBallType _type)
		{
			return null;
		}

		[Token(Token = "0x6000BC2")]
		[Address(RVA = "0xBA3E3C", Offset = "0xBA3E3C", VA = "0xBA3E3C")]
		private void rerackBalls()
		{
		}

		[Token(Token = "0x6000BC3")]
		[Address(RVA = "0xBA3F08", Offset = "0xBA3F08", VA = "0xBA3F08")]
		private void swapBallPositions(BSimBall b0, BSimBall b1)
		{
		}

		[Token(Token = "0x6000BC4")]
		[Address(RVA = "0xBA3F60", Offset = "0xBA3F60", VA = "0xBA3F60")]
		private BSimBall randomBall(BBallType[] list)
		{
			return null;
		}

		[Token(Token = "0x6000BC5")]
		[Address(RVA = "0xBA3A70", Offset = "0xBA3A70", VA = "0xBA3A70")]
		private void shuffleBalls()
		{
		}
	}
	[Token(Token = "0x200018A")]
	internal class BRefPool : BRef
	{
		[Token(Token = "0x4000BAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private BPlayer winner;

		[Token(Token = "0x4000BAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private bool firstBallHit;

		[Token(Token = "0x4000BAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
		private bool foul;

		[Token(Token = "0x4000BAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x52")]
		private bool freeBall;

		[Token(Token = "0x4000BAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x53")]
		private bool breakShot;

		[Token(Token = "0x4000BAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private int run;

		[Token(Token = "0x4000BB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private List<BSimBall> pocketedBalls;

		[Token(Token = "0x4000BB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private List<BSimBall> railedBalls;

		[Token(Token = "0x4000BB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private bool swapPlayers;

		[Token(Token = "0x4000BB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private int nominatedPocket;

		[Token(Token = "0x6000BC6")]
		[Address(RVA = "0xBA3FC8", Offset = "0xBA3FC8", VA = "0xBA3FC8")]
		internal BRefPool(BSimBoss _boss, string[] _playerNames, BILog _logger)
		{
		}

		[Token(Token = "0x6000BC7")]
		[Address(RVA = "0xBA42E0", Offset = "0xBA42E0", VA = "0xBA42E0", Slot = "4")]
		public override void doneMessage(BMessage _message)
		{
		}

		[Token(Token = "0x6000BC8")]
		[Address(RVA = "0xBA4798", Offset = "0xBA4798", VA = "0xBA4798", Slot = "13")]
		internal override void onShoot()
		{
		}

		[Token(Token = "0x6000BC9")]
		[Address(RVA = "0xBA4810", Offset = "0xBA4810", VA = "0xBA4810", Slot = "12")]
		internal override BPlayer getWinner()
		{
			return null;
		}

		[Token(Token = "0x6000BCA")]
		[Address(RVA = "0xBA4818", Offset = "0xBA4818", VA = "0xBA4818", Slot = "19")]
		public override bool onHitCushion(BEvent _event)
		{
			return default(bool);
		}

		[Token(Token = "0x6000BCB")]
		[Address(RVA = "0xBA48B8", Offset = "0xBA48B8", VA = "0xBA48B8", Slot = "6")]
		public override void onHitBall(BAnimEvent _event)
		{
		}

		[Token(Token = "0x6000BCC")]
		[Address(RVA = "0xBA4A7C", Offset = "0xBA4A7C", VA = "0xBA4A7C", Slot = "9")]
		public override void onHitPocket(BAnimEvent _event)
		{
		}

		[Token(Token = "0x6000BCD")]
		[Address(RVA = "0xBA4B50", Offset = "0xBA4B50", VA = "0xBA4B50")]
		internal void onPocketBall(BDescPocket _pocket, BSimBall _ball)
		{
		}

		[Token(Token = "0x6000BCE")]
		[Address(RVA = "0xBA4DAC", Offset = "0xBA4DAC", VA = "0xBA4DAC")]
		private bool isBallPocketed(BBallType _type)
		{
			return default(bool);
		}

		[Token(Token = "0x6000BCF")]
		[Address(RVA = "0xBA4EDC", Offset = "0xBA4EDC", VA = "0xBA4EDC", Slot = "18")]
		internal override bool switchPlayers()
		{
			return default(bool);
		}

		[Token(Token = "0x6000BD0")]
		[Address(RVA = "0xBA4FB0", Offset = "0xBA4FB0", VA = "0xBA4FB0", Slot = "16")]
		internal override bool isFreeBall()
		{
			return default(bool);
		}

		[Token(Token = "0x6000BD1")]
		[Address(RVA = "0xBA4FB8", Offset = "0xBA4FB8", VA = "0xBA4FB8", Slot = "8")]
		public override void onNominatePocket(BAnimEvent _event)
		{
		}

		[Token(Token = "0x6000BD2")]
		[Address(RVA = "0xBA4FC4", Offset = "0xBA4FC4", VA = "0xBA4FC4", Slot = "14")]
		internal override void onStopMoving()
		{
		}

		[Token(Token = "0x6000BD3")]
		[Address(RVA = "0xBA5E04", Offset = "0xBA5E04", VA = "0xBA5E04", Slot = "15")]
		internal override BBallType[] getNextBallTypes()
		{
			return null;
		}

		[Token(Token = "0x6000BD4")]
		[Address(RVA = "0xBA5E88", Offset = "0xBA5E88", VA = "0xBA5E88", Slot = "17")]
		internal override void setupBalls()
		{
		}

		[Token(Token = "0x6000BD5")]
		[Address(RVA = "0xBA61C0", Offset = "0xBA61C0", VA = "0xBA61C0")]
		private BSimBall findBall(BBallType _type)
		{
			return null;
		}

		[Token(Token = "0x6000BD6")]
		[Address(RVA = "0xBA62FC", Offset = "0xBA62FC", VA = "0xBA62FC")]
		private void swapBallPositions(BSimBall b0, BSimBall b1)
		{
		}

		[Token(Token = "0x6000BD7")]
		[Address(RVA = "0xBA6354", Offset = "0xBA6354", VA = "0xBA6354")]
		private BSimBall randomBall(BBallType[] list)
		{
			return null;
		}

		[Token(Token = "0x6000BD8")]
		[Address(RVA = "0xBA5E8C", Offset = "0xBA5E8C", VA = "0xBA5E8C")]
		private void shuffleBalls()
		{
		}
	}
	[Token(Token = "0x200018B")]
	internal class BRefSnooker : BRef
	{
		[Token(Token = "0x4000BB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private bool noBallsHit;

		[Token(Token = "0x4000BB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
		private bool firstPocket;

		[Token(Token = "0x4000BB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private int scoreThisGo;

		[Token(Token = "0x4000BB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private List<BSimBall> pocketedBalls;

		[Token(Token = "0x4000BB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private BBallType[] nextBall;

		[Token(Token = "0x4000BB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private BSimBall firstBallHit;

		[Token(Token = "0x4000BBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private bool mustRespotColors;

		[Token(Token = "0x4000BBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private int penalty;

		[Token(Token = "0x4000BBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private int playerSwaps;

		[Token(Token = "0x4000BBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private BPlayer winner;

		[Token(Token = "0x4000BBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private bool swapPlayers;

		[Token(Token = "0x4000BBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private BBallType nominatedBall;

		[Token(Token = "0x6000BD9")]
		[Address(RVA = "0xBA63BC", Offset = "0xBA63BC", VA = "0xBA63BC")]
		internal BRefSnooker(BSimBoss _boss, string[] _playerNames, BILog _logger)
		{
		}

		[Token(Token = "0x6000BDA")]
		[Address(RVA = "0xBA66DC", Offset = "0xBA66DC", VA = "0xBA66DC")]
		private void addDMovement()
		{
		}

		[Token(Token = "0x6000BDB")]
		[Address(RVA = "0xBA68DC", Offset = "0xBA68DC", VA = "0xBA68DC", Slot = "15")]
		internal override BBallType[] getNextBallTypes()
		{
			return null;
		}

		[Token(Token = "0x6000BDC")]
		[Address(RVA = "0xBA68E4", Offset = "0xBA68E4", VA = "0xBA68E4", Slot = "13")]
		internal override void onShoot()
		{
		}

		[Token(Token = "0x6000BDD")]
		[Address(RVA = "0xBA6B74", Offset = "0xBA6B74", VA = "0xBA6B74", Slot = "7")]
		public override void onNominateBall(BAnimEvent _event)
		{
		}

		[Token(Token = "0x6000BDE")]
		[Address(RVA = "0xBA6B80", Offset = "0xBA6B80", VA = "0xBA6B80", Slot = "6")]
		public override void onHitBall(BAnimEvent _event)
		{
		}

		[Token(Token = "0x6000BDF")]
		[Address(RVA = "0xBA6E28", Offset = "0xBA6E28", VA = "0xBA6E28", Slot = "9")]
		public override void onHitPocket(BAnimEvent _event)
		{
		}

		[Token(Token = "0x6000BE0")]
		[Address(RVA = "0xBA6EE8", Offset = "0xBA6EE8", VA = "0xBA6EE8")]
		internal void onPocketBall(BDescPocket _pocket, BSimBall _ball)
		{
		}

		[Token(Token = "0x6000BE1")]
		[Address(RVA = "0xBA70BC", Offset = "0xBA70BC", VA = "0xBA70BC")]
		private string getName(BBallType[] _typeList)
		{
			return null;
		}

		[Token(Token = "0x6000BE2")]
		[Address(RVA = "0xBA7190", Offset = "0xBA7190", VA = "0xBA7190")]
		private string getName(BBallType _type)
		{
			return null;
		}

		[Token(Token = "0x6000BE3")]
		[Address(RVA = "0xBA6E04", Offset = "0xBA6E04", VA = "0xBA6E04")]
		internal int ballScore(BBallType _type)
		{
			return default(int);
		}

		[Token(Token = "0x6000BE4")]
		[Address(RVA = "0xBA7210", Offset = "0xBA7210", VA = "0xBA7210")]
		private bool positionFree(Vector2 _pos)
		{
			return default(bool);
		}

		[Token(Token = "0x6000BE5")]
		[Address(RVA = "0xBA7390", Offset = "0xBA7390", VA = "0xBA7390")]
		private Vector2 placeOnArea(BSimBall _ball, BZone _zone)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6000BE6")]
		[Address(RVA = "0xBA76C4", Offset = "0xBA76C4", VA = "0xBA76C4", Slot = "18")]
		internal override bool switchPlayers()
		{
			return default(bool);
		}

		[Token(Token = "0x6000BE7")]
		[Address(RVA = "0xBA77A0", Offset = "0xBA77A0", VA = "0xBA77A0")]
		private BBallType getLowestValueBallType()
		{
			return default(BBallType);
		}

		[Token(Token = "0x6000BE8")]
		[Address(RVA = "0xBA7908", Offset = "0xBA7908", VA = "0xBA7908", Slot = "12")]
		internal override BPlayer getWinner()
		{
			return null;
		}

		[Token(Token = "0x6000BE9")]
		[Address(RVA = "0xBA7910", Offset = "0xBA7910", VA = "0xBA7910")]
		private BBallType[] getLowestBallList()
		{
			return null;
		}

		[Token(Token = "0x6000BEA")]
		[Address(RVA = "0xBA7AF4", Offset = "0xBA7AF4", VA = "0xBA7AF4", Slot = "14")]
		internal override void onStopMoving()
		{
		}

		[Token(Token = "0x6000BEB")]
		[Address(RVA = "0xBA88FC", Offset = "0xBA88FC", VA = "0xBA88FC")]
		private bool placeOnLine(out Vector2 outPos, Vector2 v0, Vector2 v1)
		{
			return default(bool);
		}

		[Token(Token = "0x6000BEC")]
		[Address(RVA = "0xBA89F4", Offset = "0xBA89F4", VA = "0xBA89F4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x442D48", Offset = "0x442D48")]
		private int <onStopMoving>b__29_0(BSimBall a, BSimBall b)
		{
			return default(int);
		}
	}
	[Token(Token = "0x200018C")]
	public class BRules
	{
		[Token(Token = "0x4000BC0")]
		public const int snooker = 0;

		[Token(Token = "0x4000BC1")]
		public const int pool = 1;

		[Token(Token = "0x4000BC2")]
		public const int nineBall = 2;

		[Token(Token = "0x4000BC3")]
		public const int count = 3;

		[Token(Token = "0x6000BED")]
		[Address(RVA = "0xBA8A60", Offset = "0xBA8A60", VA = "0xBA8A60")]
		public BRules()
		{
		}
	}
	[Token(Token = "0x200018D")]
	public class BSimBall
	{
		[Token(Token = "0x20002C9")]
		internal class Exit
		{
			[Token(Token = "0x4001037")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int iPocket;

			[Token(Token = "0x4001038")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public BezHandle startHandle;

			[Token(Token = "0x4001039")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public BezHandle handle2;

			[Token(Token = "0x400103A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
			public float startSpeed;

			[Token(Token = "0x400103B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			public int iSegment;

			[Token(Token = "0x400103C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
			public float segmentFraction;

			[Token(Token = "0x400103D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			public bool done;

			[Token(Token = "0x400103E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
			public Vector3 pos;

			[Token(Token = "0x6000FA7")]
			[Address(RVA = "0x85A450", Offset = "0x85A450", VA = "0x85A450")]
			public Vector3 getPos()
			{
				return default(Vector3);
			}

			[Token(Token = "0x6000FA8")]
			[Address(RVA = "0x85A45C", Offset = "0x85A45C", VA = "0x85A45C")]
			public Exit()
			{
			}
		}

		[Token(Token = "0x4000BC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal Vector3 inverseInertia;

		[Token(Token = "0x4000BC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		internal BBallType type;

		[Token(Token = "0x4000BC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal int index;

		[Token(Token = "0x4000BC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		internal BSlot slot;

		[Token(Token = "0x4000BC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		internal XTransform trans;

		[Token(Token = "0x4000BC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		internal Vector2 pos;

		[Token(Token = "0x4000BCA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		internal Vector3 spin;

		[Token(Token = "0x4000BCB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public Vector3 frictionDir;

		[Token(Token = "0x4000BCC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		internal bool hitSomething;

		[Token(Token = "0x4000BCD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
		internal bool isRolling;

		[Token(Token = "0x4000BCE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5A")]
		internal bool isSleeping;

		[Token(Token = "0x4000BCF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		internal Vector2 endP;

		[Token(Token = "0x4000BD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		internal Vector2 vel;

		[Token(Token = "0x4000BD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		internal float airborneTimer;

		[Token(Token = "0x4000BD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		internal bool putInPocket;

		[Token(Token = "0x4000BD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x71")]
		internal bool inPocket;

		[Token(Token = "0x4000BD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		internal int iPocket;

		[Token(Token = "0x4000BD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		internal int pocketOrder;

		[Token(Token = "0x4000BD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		internal Exit exit;

		[Token(Token = "0x6000BEE")]
		[Address(RVA = "0xBA9550", Offset = "0xBA9550", VA = "0xBA9550")]
		internal BSimBall()
		{
		}

		[Token(Token = "0x6000BEF")]
		[Address(RVA = "0xBA9620", Offset = "0xBA9620", VA = "0xBA9620")]
		internal BSimBall(BSimBall _from)
		{
		}

		[Token(Token = "0x6000BF0")]
		[Address(RVA = "0xB9BDE4", Offset = "0xB9BDE4", VA = "0xB9BDE4")]
		internal void copyFrom(BSimBall _from)
		{
		}

		[Token(Token = "0x6000BF1")]
		[Address(RVA = "0xBA9708", Offset = "0xBA9708", VA = "0xBA9708")]
		internal Vector3 getPointSpinVelocity(Vector3 pos_w)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000BF2")]
		[Address(RVA = "0xBA9770", Offset = "0xBA9770", VA = "0xBA9770")]
		internal void applyCouple(Vector3 pos_w, Vector3 impulse_w)
		{
		}

		[Token(Token = "0x6000BF3")]
		[Address(RVA = "0xBA9844", Offset = "0xBA9844", VA = "0xBA9844")]
		internal void normalize()
		{
		}

		[Token(Token = "0x6000BF4")]
		[Address(RVA = "0xBA9860", Offset = "0xBA9860", VA = "0xBA9860")]
		internal void updateSpin(float _dt)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200018E")]
	public class BSimBoss
	{
		[Token(Token = "0x20002CA")]
		public enum Type
		{
			[Token(Token = "0x4001040")]
			basic,
			[Token(Token = "0x4001041")]
			spin
		}

		[Serializable]
		[Token(Token = "0x20002CB")]
		public struct LayoutPos
		{
			[Token(Token = "0x4001042")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public bool inPocket;

			[Token(Token = "0x4001043")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public int iPocket;

			[Token(Token = "0x4001044")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public int pocketOrder;

			[Token(Token = "0x4001045")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public Vector2 p;

			[Token(Token = "0x4001046")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public Vector3 y;

			[Token(Token = "0x4001047")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Vector3 z;

			[Token(Token = "0x6000FA9")]
			[Address(RVA = "0x3FC900", Offset = "0x3FC900", VA = "0x3FC900")]
			public void write(StreamRW stream)
			{
			}

			[Token(Token = "0x6000FAA")]
			[Address(RVA = "0x85A584", Offset = "0x85A584", VA = "0x85A584")]
			public static void read(out LayoutPos ret, StreamRW stream)
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20002CC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x43F668", Offset = "0x43F668")]
		private sealed class <>c
		{
			[Token(Token = "0x4001048")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4001049")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Comparison<BSimBall> <>9__53_0;

			[Token(Token = "0x6000FAC")]
			[Address(RVA = "0x85A4C8", Offset = "0x85A4C8", VA = "0x85A4C8")]
			public <>c()
			{
			}

			[Token(Token = "0x6000FAD")]
			[Address(RVA = "0x85A4D0", Offset = "0x85A4D0", VA = "0x85A4D0")]
			internal int <fixPocketOrders>b__53_0(BSimBall a, BSimBall b)
			{
				return default(int);
			}
		}

		[Token(Token = "0x4000BD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static string debugText;

		[Token(Token = "0x4000BD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Type type;

		[Token(Token = "0x4000BD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<BSimBall> masterBalls;

		[Token(Token = "0x4000BDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal List<BSimBall> tableBalls;

		[Token(Token = "0x4000BDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		internal List<BSimBall> pocketBalls;

		[Token(Token = "0x4000BDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		internal BIEventCallback callback;

		[Token(Token = "0x4000BDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		internal bool ballsMoving;

		[Token(Token = "0x4000BDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
		internal bool debugIt;

		[Token(Token = "0x4000BDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private BDescGame descGame;

		[Token(Token = "0x4000BE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float time;

		[Token(Token = "0x4000BE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private int frame;

		[Token(Token = "0x4000BE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private int eventCount;

		[Token(Token = "0x4000BE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private BSimBall cueBall;

		[Token(Token = "0x4000BE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static BezSegment bezSegment;

		[Token(Token = "0x4000BE5")]
		private const float airTime = 0.2f;

		[Token(Token = "0x4000BE6")]
		private const int maxBallUpdates = 32;

		[Token(Token = "0x4000BE7")]
		private const int maxReds = 15;

		[Token(Token = "0x4000BE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private float minSlip;

		[Token(Token = "0x4000BE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static float[] quadSolutions;

		[Token(Token = "0x6000BF5")]
		[Address(RVA = "0xB979DC", Offset = "0xB979DC", VA = "0xB979DC")]
		public bool isInside(Vector2 pos, BZone _zone)
		{
			return default(bool);
		}

		[Token(Token = "0x6000BF6")]
		[Address(RVA = "0xBA7670", Offset = "0xBA7670", VA = "0xBA7670")]
		public XRange2 getRange(BZone _zone)
		{
			return null;
		}

		[Token(Token = "0x6000BF7")]
		[Address(RVA = "0xB9C668", Offset = "0xB9C668", VA = "0xB9C668")]
		public float getMaxShootSpeed()
		{
			return default(float);
		}

		[Token(Token = "0x6000BF8")]
		[Address(RVA = "0xBA13FC", Offset = "0xBA13FC", VA = "0xBA13FC")]
		public void checkLists()
		{
		}

		[Token(Token = "0x6000BF9")]
		[Address(RVA = "0xBA9A10", Offset = "0xBA9A10", VA = "0xBA9A10")]
		public void copyBallPositions(BSimBoss _From)
		{
		}

		[Token(Token = "0x6000BFA")]
		[Address(RVA = "0xBA9D10", Offset = "0xBA9D10", VA = "0xBA9D10")]
		public List<LayoutPos> getLayoutFull()
		{
			return null;
		}

		[Token(Token = "0x6000BFB")]
		[Address(RVA = "0xBA9F18", Offset = "0xBA9F18", VA = "0xBA9F18")]
		public byte[] getLayout()
		{
			return null;
		}

		[Token(Token = "0x6000BFC")]
		[Address(RVA = "0xBA9F8C", Offset = "0xBA9F8C", VA = "0xBA9F8C")]
		public void setLayout(List<LayoutPos> balls)
		{
		}

		[Token(Token = "0x6000BFD")]
		[Address(RVA = "0xBAA224", Offset = "0xBAA224", VA = "0xBAA224")]
		public void setLayout(byte[] _bytes)
		{
		}

		[Token(Token = "0x6000BFE")]
		[Address(RVA = "0xBAA2F0", Offset = "0xBAA2F0", VA = "0xBAA2F0")]
		internal BAnimFrame getScene()
		{
			return null;
		}

		[Token(Token = "0x6000BFF")]
		[Address(RVA = "0xBAA574", Offset = "0xBAA574", VA = "0xBAA574")]
		public Vector3 getBallWorldPos(int _index)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000C00")]
		[Address(RVA = "0xBA45D8", Offset = "0xBA45D8", VA = "0xBA45D8")]
		public void rerack()
		{
		}

		[Token(Token = "0x6000C01")]
		[Address(RVA = "0xBAA62C", Offset = "0xBAA62C", VA = "0xBAA62C")]
		public BSimBoss(BDescGame _descGame, Type _type)
		{
		}

		[Token(Token = "0x6000C02")]
		[Address(RVA = "0xBAAA84", Offset = "0xBAAA84", VA = "0xBAAA84")]
		internal float getTime()
		{
			return default(float);
		}

		[Token(Token = "0x6000C03")]
		[Address(RVA = "0xBAAA8C", Offset = "0xBAAA8C", VA = "0xBAAA8C")]
		internal bool areBallsMoving()
		{
			return default(bool);
		}

		[Token(Token = "0x6000C04")]
		[Address(RVA = "0xB9BDC4", Offset = "0xB9BDC4", VA = "0xB9BDC4")]
		internal Vector2 getCuePos()
		{
			return default(Vector2);
		}

		[Token(Token = "0x6000C05")]
		[Address(RVA = "0xBA209C", Offset = "0xBA209C", VA = "0xBA209C")]
		public int getCueIndex()
		{
			return default(int);
		}

		[Token(Token = "0x6000C06")]
		[Address(RVA = "0xBA3488", Offset = "0xBA3488", VA = "0xBA3488")]
		internal BSimBall getCueBall()
		{
			return null;
		}

		[Token(Token = "0x6000C07")]
		[Address(RVA = "0xB9C3DC", Offset = "0xB9C3DC", VA = "0xB9C3DC")]
		internal void update(float dTime)
		{
		}

		[Token(Token = "0x6000C08")]
		[Address(RVA = "0xB9CAB8", Offset = "0xB9CAB8", VA = "0xB9CAB8")]
		internal void updateFrame()
		{
		}

		[Token(Token = "0x6000C09")]
		[Address(RVA = "0xBAC2F0", Offset = "0xBAC2F0", VA = "0xBAC2F0")]
		private void updatePocketTravel()
		{
		}

		[Token(Token = "0x6000C0A")]
		[Address(RVA = "0xBAC19C", Offset = "0xBAC19C", VA = "0xBAC19C")]
		private void updateSleepState()
		{
		}

		[Token(Token = "0x6000C0B")]
		[Address(RVA = "0xBACAE8", Offset = "0xBACAE8", VA = "0xBACAE8")]
		internal BSpinInfo getSpinInfo()
		{
			return null;
		}

		[Token(Token = "0x6000C0C")]
		[Address(RVA = "0xB9C008", Offset = "0xB9C008", VA = "0xB9C008")]
		internal void applyCueInput(BSimCueInput _cueInput)
		{
		}

		[Token(Token = "0x6000C0D")]
		[Address(RVA = "0xBABDDC", Offset = "0xBABDDC", VA = "0xBABDDC")]
		private void updateSpin()
		{
		}

		[Token(Token = "0x6000C0E")]
		[Address(RVA = "0xB9BED8", Offset = "0xB9BED8", VA = "0xB9BED8")]
		internal void reset()
		{
		}

		[Token(Token = "0x6000C0F")]
		[Address(RVA = "0xB99994", Offset = "0xB99994", VA = "0xB99994")]
		internal float getBallRadius()
		{
			return default(float);
		}

		[Token(Token = "0x6000C10")]
		[Address(RVA = "0xBABC14", Offset = "0xBABC14", VA = "0xBABC14")]
		private void updateVelocity()
		{
		}

		[Token(Token = "0x6000C11")]
		[Address(RVA = "0xBACB8C", Offset = "0xBACB8C", VA = "0xBACB8C")]
		internal int getEventCount()
		{
			return default(int);
		}

		[Token(Token = "0x6000C12")]
		[Address(RVA = "0xBACB94", Offset = "0xBACB94", VA = "0xBACB94")]
		public Vector2 getFirstCollision(BSimCueInput _input, out int iball)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6000C13")]
		[Address(RVA = "0xBAD4B8", Offset = "0xBAD4B8", VA = "0xBAD4B8")]
		private static bool getLineHitDistance(out float distance, Vector2 origin, Vector2 direction, Vector2 line0, Vector2 line1, float hitDistance)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C14")]
		[Address(RVA = "0xBAD304", Offset = "0xBAD304", VA = "0xBAD304")]
		private static bool getCircleHitDistance(out float distance, Vector2 origin, Vector2 direction, Vector2 target, float hitDistance)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C15")]
		[Address(RVA = "0xBAAA94", Offset = "0xBAAA94", VA = "0xBAAA94")]
		private void updateEvents()
		{
		}

		[Token(Token = "0x6000C16")]
		[Address(RVA = "0xBAD918", Offset = "0xBAD918", VA = "0xBAD918")]
		private void startPocketMotion(BSimBall _ball)
		{
		}

		[Token(Token = "0x6000C17")]
		[Address(RVA = "0xBADD84", Offset = "0xBADD84", VA = "0xBADD84")]
		internal void fixPocketOrders()
		{
		}

		[Token(Token = "0x6000C18")]
		[Address(RVA = "0xBAD8C8", Offset = "0xBAD8C8", VA = "0xBAD8C8")]
		internal void changeVelocity(BSimBall _sphere, Vector2 _outVel)
		{
		}

		[Token(Token = "0x6000C19")]
		[Address(RVA = "0xBAD714", Offset = "0xBAD714", VA = "0xBAD714")]
		internal bool ball_ball_collision(out Vector2 u0, out Vector2 u1, Vector2 v0, Vector2 v1, Vector2 p0, Vector2 p1)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C1A")]
		[Address(RVA = "0xB9E4D8", Offset = "0xB9E4D8", VA = "0xB9E4D8")]
		internal float getBallDistance(float _ballSpeed)
		{
			return default(float);
		}

		[Token(Token = "0x6000C1B")]
		[Address(RVA = "0xB9BD30", Offset = "0xB9BD30", VA = "0xB9BD30")]
		internal float getBallSpeed(float _distance)
		{
			return default(float);
		}

		[Token(Token = "0x6000C1C")]
		[Address(RVA = "0xB9EA98", Offset = "0xB9EA98", VA = "0xB9EA98")]
		internal bool getBallSpeedAfterDistance(out float exitSpeed, float startSpeed, float distance)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C1D")]
		[Address(RVA = "0xBA35C0", Offset = "0xBA35C0", VA = "0xBA35C0")]
		internal void respot(int index, Vector2 position)
		{
		}

		[Token(Token = "0x6000C1E")]
		[Address(RVA = "0xBAE208", Offset = "0xBAE208", VA = "0xBAE208")]
		internal BDescGame getDescGame()
		{
			return null;
		}

		[Token(Token = "0x6000C1F")]
		[Address(RVA = "0xB9D06C", Offset = "0xB9D06C", VA = "0xB9D06C")]
		internal static bool isBallOnList(BBallType _type, BBallType[] _list)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C20")]
		[Address(RVA = "0xB9A970", Offset = "0xB9A970", VA = "0xB9A970")]
		internal float getCuePower(float _launchSpeed)
		{
			return default(float);
		}

		[Token(Token = "0x6000C21")]
		[Address(RVA = "0xB9EA78", Offset = "0xB9EA78", VA = "0xB9EA78")]
		internal float getCueSpeed(float _power)
		{
			return default(float);
		}

		[Token(Token = "0x6000C22")]
		[Address(RVA = "0xB99888", Offset = "0xB99888", VA = "0xB99888")]
		internal BSimBoss(BSimBoss _from)
		{
		}

		[Token(Token = "0x6000C23")]
		[Address(RVA = "0xB9C684", Offset = "0xB9C684", VA = "0xB9C684")]
		internal void copyFrom(BSimBoss _from)
		{
		}

		[Token(Token = "0x6000C24")]
		[Address(RVA = "0xBAE210", Offset = "0xBAE210", VA = "0xBAE210")]
		private void init(BSimBoss _from)
		{
		}

		[Token(Token = "0x6000C25")]
		[Address(RVA = "0xB9AB10", Offset = "0xB9AB10", VA = "0xB9AB10")]
		internal void pocketBall(BSimBall _sphere)
		{
		}

		[Token(Token = "0x6000C26")]
		[Address(RVA = "0xBA0800", Offset = "0xBA0800", VA = "0xBA0800")]
		internal bool hasReds()
		{
			return default(bool);
		}

		[Token(Token = "0x6000C27")]
		[Address(RVA = "0xBA02E0", Offset = "0xBA02E0", VA = "0xBA02E0")]
		internal bool hasType(BBallType _type)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C28")]
		[Address(RVA = "0xB9FEE0", Offset = "0xB9FEE0", VA = "0xB9FEE0")]
		internal bool hasTypes(BBallType[] _types)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C29")]
		[Address(RVA = "0xBAE5A4", Offset = "0xBAE5A4", VA = "0xBAE5A4")]
		internal bool isPathBlocked(Vector2 _start, Vector2 _end, BSimBall _targetBall, BBallType[] ignoreTypes)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C2A")]
		[Address(RVA = "0xBAEC90", Offset = "0xBAEC90", VA = "0xBAEC90")]
		internal bool isSnookered(BBallType[] allowedBalls)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C2B")]
		[Address(RVA = "0xBA6A50", Offset = "0xBA6A50", VA = "0xBA6A50")]
		internal bool areRedsOnTable()
		{
			return default(bool);
		}

		[Token(Token = "0x6000C2C")]
		[Address(RVA = "0xBA36F4", Offset = "0xBA36F4", VA = "0xBA36F4")]
		internal bool areBallsOnTable(BBallType[] list)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C2D")]
		[Address(RVA = "0xBAEF88", Offset = "0xBAEF88", VA = "0xBAEF88")]
		private bool getTouchPosition(out float distance, Vector2 startPos, Vector2 moveDir, Vector2 targetPos, float touchDistance)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x200018F")]
	public class BSimCueInput
	{
		[Token(Token = "0x4000BEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Vector2 vel;

		[Token(Token = "0x4000BEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float spinStrength;

		[Token(Token = "0x4000BEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float spinAngle;

		[Token(Token = "0x4000BED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool placeBall;

		[Token(Token = "0x4000BEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public Vector2 placePos;

		[Token(Token = "0x4000BEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public BBallType nominatedBall;

		[Token(Token = "0x4000BF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public int nominatedPocket;

		[Token(Token = "0x4000BF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		internal BAIDebugInfo aiDebugInfo;

		[Token(Token = "0x6000C2F")]
		[Address(RVA = "0x91E108", Offset = "0x91E108", VA = "0x91E108")]
		public BSimCueInput()
		{
		}

		[Token(Token = "0x6000C30")]
		[Address(RVA = "0x91E118", Offset = "0x91E118", VA = "0x91E118")]
		public BSimCueInput(BSimCueInput other)
		{
		}

		[Token(Token = "0x6000C31")]
		[Address(RVA = "0x91E150", Offset = "0x91E150", VA = "0x91E150")]
		public void copyFrom(BSimCueInput other)
		{
		}

		[Token(Token = "0x6000C32")]
		[Address(RVA = "0x91E19C", Offset = "0x91E19C", VA = "0x91E19C")]
		public bool isSame(BSimCueInput other)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000190")]
	public class BSlot
	{
		[Token(Token = "0x4000BF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public BDescBall descBall;

		[Token(Token = "0x4000BF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector2 p;

		[Token(Token = "0x4000BF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool mark;

		[Token(Token = "0x6000C33")]
		[Address(RVA = "0x91E26C", Offset = "0x91E26C", VA = "0x91E26C")]
		public BSlot()
		{
		}
	}
	[Token(Token = "0x2000191")]
	public class BSpinInfo
	{
		[Token(Token = "0x4000BF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Vector3 pos;

		[Token(Token = "0x4000BF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Vector3 direction;

		[Token(Token = "0x4000BF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float spin;

		[Token(Token = "0x6000C34")]
		[Address(RVA = "0x91E274", Offset = "0x91E274", VA = "0x91E274")]
		public BSpinInfo()
		{
		}
	}
	[Token(Token = "0x2000192")]
	public enum BTargetIcon
	{
		[Token(Token = "0x4000BF9")]
		anyColor,
		[Token(Token = "0x4000BFA")]
		reds,
		[Token(Token = "0x4000BFB")]
		blues,
		[Token(Token = "0x4000BFC")]
		greens,
		[Token(Token = "0x4000BFD")]
		yellows,
		[Token(Token = "0x4000BFE")]
		browns,
		[Token(Token = "0x4000BFF")]
		pinks,
		[Token(Token = "0x4000C00")]
		blacks,
		[Token(Token = "0x4000C01")]
		other,
		[Token(Token = "0x4000C02")]
		poolAny,
		[Token(Token = "0x4000C03")]
		poolStripes,
		[Token(Token = "0x4000C04")]
		poolSpots,
		[Token(Token = "0x4000C05")]
		pool1Ball,
		[Token(Token = "0x4000C06")]
		pool2Ball,
		[Token(Token = "0x4000C07")]
		pool3Ball,
		[Token(Token = "0x4000C08")]
		pool4Ball,
		[Token(Token = "0x4000C09")]
		pool5Ball,
		[Token(Token = "0x4000C0A")]
		pool6Ball,
		[Token(Token = "0x4000C0B")]
		pool7Ball,
		[Token(Token = "0x4000C0C")]
		pool8Ball,
		[Token(Token = "0x4000C0D")]
		pool9Ball,
		[Token(Token = "0x4000C0E")]
		pool10Ball,
		[Token(Token = "0x4000C0F")]
		pool11Ball,
		[Token(Token = "0x4000C10")]
		pool12Ball,
		[Token(Token = "0x4000C11")]
		pool13Ball,
		[Token(Token = "0x4000C12")]
		pool14Ball,
		[Token(Token = "0x4000C13")]
		pool15Ball
	}
	[Token(Token = "0x2000193")]
	public class BVisibility
	{
		[Token(Token = "0x20002CD")]
		public struct PotPosition
		{
			[Token(Token = "0x400104A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			internal BDescPocket pocket;

			[Token(Token = "0x400104B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			internal BSimBall sphere;

			[Token(Token = "0x400104C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal Vector2 cuePosition;

			[Token(Token = "0x400104D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			internal Vector2 objAimPosition;
		}

		[Token(Token = "0x20002CE")]
		public class Item
		{
			[Token(Token = "0x400104E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int index;

			[Token(Token = "0x400104F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public Vector2 p;

			[Token(Token = "0x4001050")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public Vector2 toCue;

			[Token(Token = "0x4001051")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public Vector2 toCuePerp;

			[Token(Token = "0x4001052")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public AngleRange cueAngleRange;

			[Token(Token = "0x4001053")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			public float cueAngle;

			[Token(Token = "0x4001054")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public float cueDistance;

			[Token(Token = "0x4001055")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			public AngleRange _ballRange;

			[Token(Token = "0x6000FAE")]
			[Address(RVA = "0x85A9A8", Offset = "0x85A9A8", VA = "0x85A9A8")]
			public Item()
			{
			}
		}

		[Token(Token = "0x20002CF")]
		public struct AngleRange
		{
			[Token(Token = "0x4001056")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public XRange range;

			[Token(Token = "0x4001057")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static AngleRange invalid;

			[Token(Token = "0x6000FAF")]
			[Address(RVA = "0x3FC908", Offset = "0x3FC908", VA = "0x3FC908")]
			public float lerp(float f)
			{
				return default(float);
			}

			[Token(Token = "0x6000FB0")]
			[Address(RVA = "0x3FC920", Offset = "0x3FC920", VA = "0x3FC920")]
			public AngleRange expand(float delta)
			{
				return default(AngleRange);
			}

			[Token(Token = "0x6000FB1")]
			[Address(RVA = "0x3FC954", Offset = "0x3FC954", VA = "0x3FC954", Slot = "3")]
			public override string ToString()
			{
				return null;
			}

			[Token(Token = "0x6000FB2")]
			[Address(RVA = "0x3FC960", Offset = "0x3FC960", VA = "0x3FC960")]
			public void fix()
			{
			}

			[Token(Token = "0x6000FB3")]
			[Address(RVA = "0x3FC968", Offset = "0x3FC968", VA = "0x3FC968")]
			public bool contains(float a)
			{
				return default(bool);
			}

			[Token(Token = "0x6000FB4")]
			[Address(RVA = "0x3FC970", Offset = "0x3FC970", VA = "0x3FC970")]
			public AngleRange(float lo, float hi)
			{
			}

			[Token(Token = "0x6000FB5")]
			[Address(RVA = "0x85A758", Offset = "0x85A758", VA = "0x85A758")]
			public static AngleRange fromMiddle(float mid, float delta)
			{
				return default(AngleRange);
			}

			[Token(Token = "0x6000FB6")]
			[Address(RVA = "0x3FC978", Offset = "0x3FC978", VA = "0x3FC978")]
			public bool isValid()
			{
				return default(bool);
			}

			[Token(Token = "0x6000FB7")]
			[Address(RVA = "0x3FC984", Offset = "0x3FC984", VA = "0x3FC984")]
			public AngleRange sub(AngleRange other)
			{
				return default(AngleRange);
			}

			[Token(Token = "0x6000FB8")]
			[Address(RVA = "0x3FC98C", Offset = "0x3FC98C", VA = "0x3FC98C")]
			public bool overlap(AngleRange other)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4000C14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public List<Item> items;

		[Token(Token = "0x4000C15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float diameter;

		[Token(Token = "0x4000C16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Vector2 cuePos;

		[Token(Token = "0x4000C17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public BSimBoss simBoss;

		[Token(Token = "0x4000C18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float r;

		[Token(Token = "0x4000C19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float diameter2;

		[Token(Token = "0x4000C1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public bool[] visibleTypes;

		[Token(Token = "0x4000C1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Util.Stopwatch stopwatch;

		[Token(Token = "0x6000C35")]
		[Address(RVA = "0x91E27C", Offset = "0x91E27C", VA = "0x91E27C")]
		public List<PotPosition> getPotPositions(BBallType[] wantedTypes)
		{
			return null;
		}

		[Token(Token = "0x6000C36")]
		[Address(RVA = "0x91E914", Offset = "0x91E914", VA = "0x91E914")]
		private bool isPathBlocked(Vector2 _start, Vector2 _end, BSimBall _targetBall)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C37")]
		[Address(RVA = "0x91EB74", Offset = "0x91EB74", VA = "0x91EB74")]
		public BVisibility(BSimBoss _simBoss)
		{
		}

		[Token(Token = "0x6000C38")]
		[Address(RVA = "0x91F5F4", Offset = "0x91F5F4", VA = "0x91F5F4")]
		internal void sortItems()
		{
		}

		[Token(Token = "0x6000C39")]
		[Address(RVA = "0x91F5F8", Offset = "0x91F5F8", VA = "0x91F5F8")]
		public bool isSnookered(BBallType[] types)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C3A")]
		[Address(RVA = "0x91E898", Offset = "0x91E898", VA = "0x91E898")]
		private float getVectorAngle(Vector2 worldPos)
		{
			return default(float);
		}

		[Token(Token = "0x6000C3B")]
		[Address(RVA = "0x91E8B0", Offset = "0x91E8B0", VA = "0x91E8B0")]
		public AngleRange getBallAngleRange(Item item)
		{
			return default(AngleRange);
		}

		[Token(Token = "0x6000C3C")]
		[Address(RVA = "0x91F6EC", Offset = "0x91F6EC", VA = "0x91F6EC")]
		private float getBallAngle(Item item, float cueAngle)
		{
			return default(float);
		}

		[Token(Token = "0x6000C3D")]
		[Address(RVA = "0x91F59C", Offset = "0x91F59C", VA = "0x91F59C")]
		private float getBallAngle(Item item, Vector2 worldPos)
		{
			return default(float);
		}

		[Token(Token = "0x6000C3E")]
		[Address(RVA = "0x91F870", Offset = "0x91F870", VA = "0x91F870")]
		private Vector2 getPos(Item item, float ballAngle)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6000C3F")]
		[Address(RVA = "0x91F8CC", Offset = "0x91F8CC", VA = "0x91F8CC")]
		private float getCueAngle(Item item, float ballAngle)
		{
			return default(float);
		}

		[Token(Token = "0x6000C40")]
		[Address(RVA = "0x91F544", Offset = "0x91F544", VA = "0x91F544")]
		private AngleRange getCueAngleRange(Item item, AngleRange ballRange)
		{
			return default(AngleRange);
		}

		[Token(Token = "0x6000C41")]
		[Address(RVA = "0x91F5C8", Offset = "0x91F5C8", VA = "0x91F5C8")]
		private void setCueAngleRange(Item item, AngleRange ballRange)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000194")]
	public class ByteArrayPart
	{
		[Token(Token = "0x4000C1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int iPart;

		[Token(Token = "0x4000C1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int partCount;

		[Token(Token = "0x4000C1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public byte[] bytes;

		[Token(Token = "0x6000C43")]
		[Address(RVA = "0x923CE8", Offset = "0x923CE8", VA = "0x923CE8")]
		public ByteArrayPart()
		{
		}
	}
	[Token(Token = "0x2000195")]
	public class Corner
	{
		[Token(Token = "0x4000C1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public EdgePath front;

		[Token(Token = "0x4000C20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public EdgePath back;

		[Token(Token = "0x4000C21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public EdgePath felt;

		[Token(Token = "0x4000C22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public EdgePath hole;

		[Token(Token = "0x4000C23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public List<BezHandle> exitPath;

		[Token(Token = "0x4000C24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float exitDepth;

		[Token(Token = "0x6000C44")]
		[Address(RVA = "0x927060", Offset = "0x927060", VA = "0x927060")]
		public static Corner pocket(Vector2 outDir, Measurements con)
		{
			return null;
		}

		[Token(Token = "0x6000C45")]
		[Address(RVA = "0x92B888", Offset = "0x92B888", VA = "0x92B888")]
		private static EdgePath getBackEdge(Vector2 outDir, Measurements con)
		{
			return null;
		}

		[Token(Token = "0x6000C46")]
		[Address(RVA = "0x926E7C", Offset = "0x926E7C", VA = "0x926E7C")]
		public static Corner corner(Vector2 outDir, Measurements con)
		{
			return null;
		}

		[Token(Token = "0x6000C47")]
		[Address(RVA = "0x92B804", Offset = "0x92B804", VA = "0x92B804")]
		public Corner()
		{
		}
	}
	[Token(Token = "0x2000196")]
	public class EdgePath
	{
		[Token(Token = "0x4000C25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string name;

		[Token(Token = "0x4000C26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool looped;

		[Token(Token = "0x4000C27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<Edge> edges;

		[Token(Token = "0x4000C28")]
		private const float minStepAngle = (float)Math.PI / 12f;

		[Token(Token = "0x6000C48")]
		[Address(RVA = "0x74E8A0", Offset = "0x74E8A0", VA = "0x74E8A0")]
		public List<Vector2> getVerts()
		{
			return null;
		}

		[Token(Token = "0x6000C49")]
		[Address(RVA = "0x74EB44", Offset = "0x74EB44", VA = "0x74EB44")]
		public EdgePath()
		{
		}
	}
	[Token(Token = "0x2000197")]
	public struct Edge
	{
		[Token(Token = "0x20002D0")]
		public enum Type
		{
			[Token(Token = "0x4001059")]
			straight,
			[Token(Token = "0x400105A")]
			arc
		}

		[Token(Token = "0x4000C29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Type type;

		[Token(Token = "0x4000C2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public Vector2 v0;

		[Token(Token = "0x4000C2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public Vector2 v1;

		[Token(Token = "0x4000C2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public Vector2 arcCenter;

		[Token(Token = "0x4000C2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float radius;

		[Token(Token = "0x6000C4A")]
		[Address(RVA = "0x3F9DC4", Offset = "0x3F9DC4", VA = "0x3F9DC4", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x2000198")]
	public class Measurements
	{
		[Token(Token = "0x4000C2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float frame;

		[Token(Token = "0x4000C2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float hole;

		[Token(Token = "0x4000C30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float bevel;

		[Token(Token = "0x4000C31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float inset;

		[Token(Token = "0x6000C4B")]
		[Address(RVA = "0x1091388", Offset = "0x1091388", VA = "0x1091388")]
		public Measurements()
		{
		}
	}
}
