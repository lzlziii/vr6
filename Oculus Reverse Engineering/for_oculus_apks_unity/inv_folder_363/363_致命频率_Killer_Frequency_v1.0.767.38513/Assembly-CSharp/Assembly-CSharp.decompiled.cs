using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Diagnostics;
using System.Reflection;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using AOT;
using Actions;
using Actions.Interactables;
using Activities;
using Bolt;
using FMOD;
using FMOD.Studio;
using FMODUnity;
using FlatBuffers;
using FlatBuffers.FlexBuffers;
using Graphics.Lightmap;
using Graphics.Outline;
using Il2CppDummyDll;
using Interactables;
using Ludiq;
using MenuSystem;
using NarrativeEngine;
using NarrativeEngine.Bolt;
using NarrativeEngine.Dialog;
using NarrativeEngine.DialogOLD;
using NarrativeEngine.Serialisation;
using Occlusion;
using Oculus.Platform;
using Platform;
using Player;
using Player.Movement;
using RadioAchievements;
using Serialisation;
using Services;
using Services.AppTime;
using Services.Audio;
using Services.Events;
using Services.GraphicsSettings;
using Services.Localisation;
using Services.Save;
using Services.Settings;
using States;
using TMPro;
using Team17.Addressables;
using Team17.AutomatedTesting.Utility;
using Team17.Common;
using Team17.Input;
using Team17.Input.Oculus;
using Team17.Input.Unity;
using Team17.Input.Unity.Oculus;
using Team17.Input.Unity.Serialisation;
using Team17.Platform.Achievements;
using Team17.Platform.Achievements.Oculus;
using Team17.Platform.EngagementService;
using Team17.Platform.SaveGame;
using Team17.Platform.User;
using Team17.Platform.UserService;
using Team17.UI.Input;
using Team17.UI.Text;
using UI.Interactable;
using UI.Inventory;
using Unity.Burst;
using Unity.Collections;
using Unity.Mathematics;
using Unity.Profiling;
using UnityEngine;
using UnityEngine.AddressableAssets;
using UnityEngine.AddressableAssets.Initialization;
using UnityEngine.Animations.Rigging;
using UnityEngine.EventSystems;
using UnityEngine.Events;
using UnityEngine.Experimental.Rendering.Universal;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Haptics;
using UnityEngine.InputSystem.UI;
using UnityEngine.Localization;
using UnityEngine.Localization.Components;
using UnityEngine.Localization.Events;
using UnityEngine.Localization.Metadata;
using UnityEngine.Localization.PropertyVariants.TrackedProperties;
using UnityEngine.Localization.Pseudo;
using UnityEngine.Localization.Settings;
using UnityEngine.Localization.SmartFormat;
using UnityEngine.Localization.SmartFormat.Core.Extensions;
using UnityEngine.Localization.SmartFormat.Extensions;
using UnityEngine.Localization.Tables;
using UnityEngine.Playables;
using UnityEngine.ProBuilder.Shapes;
using UnityEngine.Rendering;
using UnityEngine.Rendering.Universal;
using UnityEngine.ResourceManagement.Util;
using UnityEngine.SceneManagement;
using UnityEngine.Scripting;
using UnityEngine.Serialization;
using UnityEngine.TextCore;
using UnityEngine.TextCore.LowLevel;
using UnityEngine.TextCore.Text;
using UnityEngine.UI;
using UnityEngine.Video;
using UnityEngine.XR;
using UnityEngine.XR.Interaction.Toolkit;
using UpdateSystem;
using UpdateSystem.Initialisation;

[assembly: AssemblyVersion("0.0.0.0")]
[Token(Token = "0x2000002")]
public class LeanAudioStream
{
	[Token(Token = "0x4000001")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int position;

	[Token(Token = "0x4000002")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioClip audioClip;

	[Token(Token = "0x4000003")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float[] audioArr;

	[Token(Token = "0x6000001")]
	[Address(RVA = "0xEE744C", Offset = "0xEE744C", VA = "0xEE744C")]
	public LeanAudioStream(float[] audioArr)
	{
	}

	[Token(Token = "0x6000002")]
	[Address(RVA = "0xEE747C", Offset = "0xEE747C", VA = "0xEE747C")]
	public void OnAudioRead(float[] data)
	{
	}

	[Token(Token = "0x6000003")]
	[Address(RVA = "0xEE74F0", Offset = "0xEE74F0", VA = "0xEE74F0")]
	public void OnAudioSetPosition(int newPosition)
	{
	}
}
[Token(Token = "0x2000003")]
public class LeanAudio
{
	[Token(Token = "0x4000004")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static float MIN_FREQEUNCY_PERIOD;

	[Token(Token = "0x4000005")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public static int PROCESSING_ITERATIONS_MAX;

	[Token(Token = "0x4000006")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static float[] generatedWaveDistances;

	[Token(Token = "0x4000007")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static int generatedWaveDistancesCount;

	[Token(Token = "0x4000008")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static float[] longList;

	[Token(Token = "0x6000004")]
	[Address(RVA = "0xEE74F8", Offset = "0xEE74F8", VA = "0xEE74F8")]
	public static LeanAudioOptions options()
	{
		return null;
	}

	[Token(Token = "0x6000005")]
	[Address(RVA = "0xEE7640", Offset = "0xEE7640", VA = "0xEE7640")]
	public static LeanAudioStream createAudioStream(AnimationCurve volume, AnimationCurve frequency, [Optional] LeanAudioOptions options)
	{
		return null;
	}

	[Token(Token = "0x6000006")]
	[Address(RVA = "0xEE7FAC", Offset = "0xEE7FAC", VA = "0xEE7FAC")]
	public static AudioClip createAudio(AnimationCurve volume, AnimationCurve frequency, [Optional] LeanAudioOptions options)
	{
		return null;
	}

	[Token(Token = "0x6000007")]
	[Address(RVA = "0xEE7710", Offset = "0xEE7710", VA = "0xEE7710")]
	private static int createAudioWave(AnimationCurve volume, AnimationCurve frequency, LeanAudioOptions options)
	{
		return default(int);
	}

	[Token(Token = "0x6000008")]
	[Address(RVA = "0xEE7A9C", Offset = "0xEE7A9C", VA = "0xEE7A9C")]
	private static AudioClip createAudioFromWave(int waveLength, LeanAudioOptions options)
	{
		return null;
	}

	[Token(Token = "0x6000009")]
	[Address(RVA = "0xEE8070", Offset = "0xEE8070", VA = "0xEE8070")]
	private static void OnAudioSetPosition(int newPosition)
	{
	}

	[Token(Token = "0x600000A")]
	[Address(RVA = "0xEE8074", Offset = "0xEE8074", VA = "0xEE8074")]
	public static AudioClip generateAudioFromCurve(AnimationCurve curve, int frequencyRate = 44100)
	{
		return null;
	}

	[Token(Token = "0x600000B")]
	[Address(RVA = "0xEE81E0", Offset = "0xEE81E0", VA = "0xEE81E0")]
	public static AudioSource play(AudioClip audio, float volume)
	{
		return null;
	}

	[Token(Token = "0x600000C")]
	[Address(RVA = "0xEE83DC", Offset = "0xEE83DC", VA = "0xEE83DC")]
	public static AudioSource play(AudioClip audio)
	{
		return null;
	}

	[Token(Token = "0x600000D")]
	[Address(RVA = "0xEE8484", Offset = "0xEE8484", VA = "0xEE8484")]
	public static AudioSource play(AudioClip audio, Vector3 pos)
	{
		return null;
	}

	[Token(Token = "0x600000E")]
	[Address(RVA = "0xEE8500", Offset = "0xEE8500", VA = "0xEE8500")]
	public static AudioSource play(AudioClip audio, Vector3 pos, float volume)
	{
		return null;
	}

	[Token(Token = "0x600000F")]
	[Address(RVA = "0xEE82AC", Offset = "0xEE82AC", VA = "0xEE82AC")]
	public static AudioSource playClipAt(AudioClip clip, Vector3 pos)
	{
		return null;
	}

	[Token(Token = "0x6000010")]
	[Address(RVA = "0xEE85B0", Offset = "0xEE85B0", VA = "0xEE85B0")]
	public static void printOutAudioClip(AudioClip audioClip, ref AnimationCurve curve, float scaleX = 1f)
	{
	}

	[Token(Token = "0x6000011")]
	[Address(RVA = "0xEE8758", Offset = "0xEE8758", VA = "0xEE8758")]
	public LeanAudio()
	{
	}
}
[Token(Token = "0x2000004")]
public class LeanAudioOptions
{
	[Token(Token = "0x2000005")]
	public enum LeanAudioWaveStyle
	{
		[Token(Token = "0x4000012")]
		Sine,
		[Token(Token = "0x4000013")]
		Square,
		[Token(Token = "0x4000014")]
		Sawtooth,
		[Token(Token = "0x4000015")]
		Noise
	}

	[Token(Token = "0x4000009")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public LeanAudioWaveStyle waveStyle;

	[Token(Token = "0x400000A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3[] vibrato;

	[Token(Token = "0x400000B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Vector3[] modulation;

	[Token(Token = "0x400000C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int frequencyRate;

	[Token(Token = "0x400000D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float waveNoiseScale;

	[Token(Token = "0x400000E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float waveNoiseInfluence;

	[Token(Token = "0x400000F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public bool useSetData;

	[Token(Token = "0x4000010")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public LeanAudioStream stream;

	[Token(Token = "0x6000013")]
	[Address(RVA = "0xEE761C", Offset = "0xEE761C", VA = "0xEE761C")]
	public LeanAudioOptions()
	{
	}

	[Token(Token = "0x6000014")]
	[Address(RVA = "0xEE87B8", Offset = "0xEE87B8", VA = "0xEE87B8")]
	public LeanAudioOptions setFrequency(int frequencyRate)
	{
		return null;
	}

	[Token(Token = "0x6000015")]
	[Address(RVA = "0xEE87C0", Offset = "0xEE87C0", VA = "0xEE87C0")]
	public LeanAudioOptions setVibrato(Vector3[] vibrato)
	{
		return null;
	}

	[Token(Token = "0x6000016")]
	[Address(RVA = "0xEE87DC", Offset = "0xEE87DC", VA = "0xEE87DC")]
	public LeanAudioOptions setWaveSine()
	{
		return null;
	}

	[Token(Token = "0x6000017")]
	[Address(RVA = "0xEE87E4", Offset = "0xEE87E4", VA = "0xEE87E4")]
	public LeanAudioOptions setWaveSquare()
	{
		return null;
	}

	[Token(Token = "0x6000018")]
	[Address(RVA = "0xEE87F0", Offset = "0xEE87F0", VA = "0xEE87F0")]
	public LeanAudioOptions setWaveSawtooth()
	{
		return null;
	}

	[Token(Token = "0x6000019")]
	[Address(RVA = "0xEE87FC", Offset = "0xEE87FC", VA = "0xEE87FC")]
	public LeanAudioOptions setWaveNoise()
	{
		return null;
	}

	[Token(Token = "0x600001A")]
	[Address(RVA = "0xEE8808", Offset = "0xEE8808", VA = "0xEE8808")]
	public LeanAudioOptions setWaveStyle(LeanAudioWaveStyle style)
	{
		return null;
	}

	[Token(Token = "0x600001B")]
	[Address(RVA = "0xEE8810", Offset = "0xEE8810", VA = "0xEE8810")]
	public LeanAudioOptions setWaveNoiseScale(float waveScale)
	{
		return null;
	}

	[Token(Token = "0x600001C")]
	[Address(RVA = "0xEE8818", Offset = "0xEE8818", VA = "0xEE8818")]
	public LeanAudioOptions setWaveNoiseInfluence(float influence)
	{
		return null;
	}
}
[Token(Token = "0x2000006")]
public class LeanSmooth
{
	[Token(Token = "0x600001D")]
	[Address(RVA = "0xEE8820", Offset = "0xEE8820", VA = "0xEE8820")]
	public static float damp(float current, float target, ref float currentVelocity, float smoothTime, float maxSpeed = -1f, float deltaTime = -1f)
	{
		return default(float);
	}

	[Token(Token = "0x600001E")]
	[Address(RVA = "0xEE893C", Offset = "0xEE893C", VA = "0xEE893C")]
	public static Vector3 damp(Vector3 current, Vector3 target, ref Vector3 currentVelocity, float smoothTime, float maxSpeed = -1f, float deltaTime = -1f)
	{
		return default(Vector3);
	}

	[Token(Token = "0x600001F")]
	[Address(RVA = "0xEE89E8", Offset = "0xEE89E8", VA = "0xEE89E8")]
	public static Color damp(Color current, Color target, ref Color currentVelocity, float smoothTime, float maxSpeed = -1f, float deltaTime = -1f)
	{
		return default(Color);
	}

	[Token(Token = "0x6000020")]
	[Address(RVA = "0xEE8AC0", Offset = "0xEE8AC0", VA = "0xEE8AC0")]
	public static float spring(float current, float target, ref float currentVelocity, float smoothTime, float maxSpeed = -1f, float deltaTime = -1f, float friction = 2f, float accelRate = 0.5f)
	{
		return default(float);
	}

	[Token(Token = "0x6000021")]
	[Address(RVA = "0xEE8B68", Offset = "0xEE8B68", VA = "0xEE8B68")]
	public static Vector3 spring(Vector3 current, Vector3 target, ref Vector3 currentVelocity, float smoothTime, float maxSpeed = -1f, float deltaTime = -1f, float friction = 2f, float accelRate = 0.5f)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000022")]
	[Address(RVA = "0xEE8C34", Offset = "0xEE8C34", VA = "0xEE8C34")]
	public static Color spring(Color current, Color target, ref Color currentVelocity, float smoothTime, float maxSpeed = -1f, float deltaTime = -1f, float friction = 2f, float accelRate = 0.5f)
	{
		return default(Color);
	}

	[Token(Token = "0x6000023")]
	[Address(RVA = "0xEE8D34", Offset = "0xEE8D34", VA = "0xEE8D34")]
	public static float linear(float current, float target, float moveSpeed, float deltaTime = -1f)
	{
		return default(float);
	}

	[Token(Token = "0x6000024")]
	[Address(RVA = "0xEE8DA8", Offset = "0xEE8DA8", VA = "0xEE8DA8")]
	public static Vector3 linear(Vector3 current, Vector3 target, float moveSpeed, float deltaTime = -1f)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000025")]
	[Address(RVA = "0xEE8ED8", Offset = "0xEE8ED8", VA = "0xEE8ED8")]
	public static Color linear(Color current, Color target, float moveSpeed)
	{
		return default(Color);
	}

	[Token(Token = "0x6000026")]
	[Address(RVA = "0xEE902C", Offset = "0xEE902C", VA = "0xEE902C")]
	public static float bounceOut(float current, float target, ref float currentVelocity, float smoothTime, float maxSpeed = -1f, float deltaTime = -1f, float friction = 2f, float accelRate = 0.5f, float hitDamping = 0.9f)
	{
		return default(float);
	}

	[Token(Token = "0x6000027")]
	[Address(RVA = "0xEE9114", Offset = "0xEE9114", VA = "0xEE9114")]
	public static Vector3 bounceOut(Vector3 current, Vector3 target, ref Vector3 currentVelocity, float smoothTime, float maxSpeed = -1f, float deltaTime = -1f, float friction = 2f, float accelRate = 0.5f, float hitDamping = 0.9f)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000028")]
	[Address(RVA = "0xEE91F0", Offset = "0xEE91F0", VA = "0xEE91F0")]
	public static Color bounceOut(Color current, Color target, ref Color currentVelocity, float smoothTime, float maxSpeed = -1f, float deltaTime = -1f, float friction = 2f, float accelRate = 0.5f, float hitDamping = 0.9f)
	{
		return default(Color);
	}

	[Token(Token = "0x6000029")]
	[Address(RVA = "0xEE9304", Offset = "0xEE9304", VA = "0xEE9304")]
	public LeanSmooth()
	{
	}
}
[Token(Token = "0x2000007")]
public class LeanTester : MonoBehaviour
{
	[Token(Token = "0x2000008")]
	[CompilerGenerated]
	private sealed class <timeoutCheck>d__2 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000017")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000018")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000019")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LeanTester <>4__this;

		[Token(Token = "0x400001A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <pauseEndTime>5__2;

		[Token(Token = "0x17000001")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000030")]
			[Address(RVA = "0xEE9948", Offset = "0xEE9948", VA = "0xEE9948", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000002")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000032")]
			[Address(RVA = "0xEE9990", Offset = "0xEE9990", VA = "0xEE9990", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600002D")]
		[Address(RVA = "0xEE93A0", Offset = "0xEE93A0", VA = "0xEE93A0")]
		[DebuggerHidden]
		public <timeoutCheck>d__2(int <>1__state)
		{
		}

		[Token(Token = "0x600002E")]
		[Address(RVA = "0xEE93D8", Offset = "0xEE93D8", VA = "0xEE93D8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600002F")]
		[Address(RVA = "0xEE93DC", Offset = "0xEE93DC", VA = "0xEE93DC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000031")]
		[Address(RVA = "0xEE9950", Offset = "0xEE9950", VA = "0xEE9950", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000016")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float timeout;

	[Token(Token = "0x600002A")]
	[Address(RVA = "0xEE930C", Offset = "0xEE930C", VA = "0xEE930C")]
	public void Start()
	{
	}

	[Token(Token = "0x600002B")]
	[Address(RVA = "0xEE932C", Offset = "0xEE932C", VA = "0xEE932C")]
	[IteratorStateMachine(typeof(<timeoutCheck>d__2))]
	private IEnumerator timeoutCheck()
	{
		return null;
	}

	[Token(Token = "0x600002C")]
	[Address(RVA = "0xEE93C8", Offset = "0xEE93C8", VA = "0xEE93C8")]
	public LeanTester()
	{
	}
}
[Token(Token = "0x2000009")]
public class LeanTest
{
	[Token(Token = "0x400001B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int expected;

	[Token(Token = "0x400001C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	private static int tests;

	[Token(Token = "0x400001D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static int passes;

	[Token(Token = "0x400001E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public static float timeout;

	[Token(Token = "0x400001F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static bool timeoutStarted;

	[Token(Token = "0x4000020")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
	public static bool testsFinished;

	[Token(Token = "0x6000033")]
	[Address(RVA = "0xEE9998", Offset = "0xEE9998", VA = "0xEE9998")]
	public static void debug(string name, bool didPass, [Optional] string failExplaination)
	{
	}

	[Token(Token = "0x6000034")]
	[Address(RVA = "0xEE9A04", Offset = "0xEE9A04", VA = "0xEE9A04")]
	public static void expect(bool didPass, string definition, [Optional] string failExplaination)
	{
	}

	[Token(Token = "0x6000035")]
	[Address(RVA = "0xEEA398", Offset = "0xEEA398", VA = "0xEEA398")]
	public static string padRight(int len)
	{
		return null;
	}

	[Token(Token = "0x6000036")]
	[Address(RVA = "0xEEA078", Offset = "0xEEA078", VA = "0xEEA078")]
	public static float printOutLength(string str)
	{
		return default(float);
	}

	[Token(Token = "0x6000037")]
	[Address(RVA = "0xEEA40C", Offset = "0xEEA40C", VA = "0xEEA40C")]
	public static string formatBC(string str, string color)
	{
		return null;
	}

	[Token(Token = "0x6000038")]
	[Address(RVA = "0xEE953C", Offset = "0xEE953C", VA = "0xEE953C")]
	public static string formatB(string str)
	{
		return null;
	}

	[Token(Token = "0x6000039")]
	[Address(RVA = "0xEEA1A4", Offset = "0xEEA1A4", VA = "0xEEA1A4")]
	public static string formatC(string str, string color)
	{
		return null;
	}

	[Token(Token = "0x600003A")]
	[Address(RVA = "0xEE95A8", Offset = "0xEE95A8", VA = "0xEE95A8")]
	public static void overview()
	{
	}

	[Token(Token = "0x600003B")]
	[Address(RVA = "0xEEA474", Offset = "0xEEA474", VA = "0xEEA474")]
	public LeanTest()
	{
	}
}
[Token(Token = "0x200000A")]
public enum TweenAction
{
	[Token(Token = "0x4000022")]
	MOVE_X,
	[Token(Token = "0x4000023")]
	MOVE_Y,
	[Token(Token = "0x4000024")]
	MOVE_Z,
	[Token(Token = "0x4000025")]
	MOVE_LOCAL_X,
	[Token(Token = "0x4000026")]
	MOVE_LOCAL_Y,
	[Token(Token = "0x4000027")]
	MOVE_LOCAL_Z,
	[Token(Token = "0x4000028")]
	MOVE_CURVED,
	[Token(Token = "0x4000029")]
	MOVE_CURVED_LOCAL,
	[Token(Token = "0x400002A")]
	MOVE_SPLINE,
	[Token(Token = "0x400002B")]
	MOVE_SPLINE_LOCAL,
	[Token(Token = "0x400002C")]
	SCALE_X,
	[Token(Token = "0x400002D")]
	SCALE_Y,
	[Token(Token = "0x400002E")]
	SCALE_Z,
	[Token(Token = "0x400002F")]
	ROTATE_X,
	[Token(Token = "0x4000030")]
	ROTATE_Y,
	[Token(Token = "0x4000031")]
	ROTATE_Z,
	[Token(Token = "0x4000032")]
	ROTATE_AROUND,
	[Token(Token = "0x4000033")]
	ROTATE_AROUND_LOCAL,
	[Token(Token = "0x4000034")]
	CANVAS_ROTATEAROUND,
	[Token(Token = "0x4000035")]
	CANVAS_ROTATEAROUND_LOCAL,
	[Token(Token = "0x4000036")]
	CANVAS_PLAYSPRITE,
	[Token(Token = "0x4000037")]
	ALPHA,
	[Token(Token = "0x4000038")]
	TEXT_ALPHA,
	[Token(Token = "0x4000039")]
	CANVAS_ALPHA,
	[Token(Token = "0x400003A")]
	CANVASGROUP_ALPHA,
	[Token(Token = "0x400003B")]
	ALPHA_VERTEX,
	[Token(Token = "0x400003C")]
	COLOR,
	[Token(Token = "0x400003D")]
	CALLBACK_COLOR,
	[Token(Token = "0x400003E")]
	TEXT_COLOR,
	[Token(Token = "0x400003F")]
	CANVAS_COLOR,
	[Token(Token = "0x4000040")]
	CANVAS_MOVE_X,
	[Token(Token = "0x4000041")]
	CANVAS_MOVE_Y,
	[Token(Token = "0x4000042")]
	CANVAS_MOVE_Z,
	[Token(Token = "0x4000043")]
	CALLBACK,
	[Token(Token = "0x4000044")]
	MOVE,
	[Token(Token = "0x4000045")]
	MOVE_LOCAL,
	[Token(Token = "0x4000046")]
	MOVE_TO_TRANSFORM,
	[Token(Token = "0x4000047")]
	ROTATE,
	[Token(Token = "0x4000048")]
	ROTATE_LOCAL,
	[Token(Token = "0x4000049")]
	SCALE,
	[Token(Token = "0x400004A")]
	VALUE3,
	[Token(Token = "0x400004B")]
	GUI_MOVE,
	[Token(Token = "0x400004C")]
	GUI_MOVE_MARGIN,
	[Token(Token = "0x400004D")]
	GUI_SCALE,
	[Token(Token = "0x400004E")]
	GUI_ALPHA,
	[Token(Token = "0x400004F")]
	GUI_ROTATE,
	[Token(Token = "0x4000050")]
	DELAYED_SOUND,
	[Token(Token = "0x4000051")]
	CANVAS_MOVE,
	[Token(Token = "0x4000052")]
	CANVAS_SCALE,
	[Token(Token = "0x4000053")]
	CANVAS_SIZEDELTA,
	[Token(Token = "0x4000054")]
	FOLLOW
}
[Token(Token = "0x200000B")]
public enum LeanTweenType
{
	[Token(Token = "0x4000056")]
	notUsed,
	[Token(Token = "0x4000057")]
	linear,
	[Token(Token = "0x4000058")]
	easeOutQuad,
	[Token(Token = "0x4000059")]
	easeInQuad,
	[Token(Token = "0x400005A")]
	easeInOutQuad,
	[Token(Token = "0x400005B")]
	easeInCubic,
	[Token(Token = "0x400005C")]
	easeOutCubic,
	[Token(Token = "0x400005D")]
	easeInOutCubic,
	[Token(Token = "0x400005E")]
	easeInQuart,
	[Token(Token = "0x400005F")]
	easeOutQuart,
	[Token(Token = "0x4000060")]
	easeInOutQuart,
	[Token(Token = "0x4000061")]
	easeInQuint,
	[Token(Token = "0x4000062")]
	easeOutQuint,
	[Token(Token = "0x4000063")]
	easeInOutQuint,
	[Token(Token = "0x4000064")]
	easeInSine,
	[Token(Token = "0x4000065")]
	easeOutSine,
	[Token(Token = "0x4000066")]
	easeInOutSine,
	[Token(Token = "0x4000067")]
	easeInExpo,
	[Token(Token = "0x4000068")]
	easeOutExpo,
	[Token(Token = "0x4000069")]
	easeInOutExpo,
	[Token(Token = "0x400006A")]
	easeInCirc,
	[Token(Token = "0x400006B")]
	easeOutCirc,
	[Token(Token = "0x400006C")]
	easeInOutCirc,
	[Token(Token = "0x400006D")]
	easeInBounce,
	[Token(Token = "0x400006E")]
	easeOutBounce,
	[Token(Token = "0x400006F")]
	easeInOutBounce,
	[Token(Token = "0x4000070")]
	easeInBack,
	[Token(Token = "0x4000071")]
	easeOutBack,
	[Token(Token = "0x4000072")]
	easeInOutBack,
	[Token(Token = "0x4000073")]
	easeInElastic,
	[Token(Token = "0x4000074")]
	easeOutElastic,
	[Token(Token = "0x4000075")]
	easeInOutElastic,
	[Token(Token = "0x4000076")]
	easeSpring,
	[Token(Token = "0x4000077")]
	easeShake,
	[Token(Token = "0x4000078")]
	punch,
	[Token(Token = "0x4000079")]
	once,
	[Token(Token = "0x400007A")]
	clamp,
	[Token(Token = "0x400007B")]
	pingPong,
	[Token(Token = "0x400007C")]
	animationCurve
}
[Token(Token = "0x200000C")]
public enum LeanProp
{
	[Token(Token = "0x400007E")]
	position,
	[Token(Token = "0x400007F")]
	localPosition,
	[Token(Token = "0x4000080")]
	x,
	[Token(Token = "0x4000081")]
	y,
	[Token(Token = "0x4000082")]
	z,
	[Token(Token = "0x4000083")]
	localX,
	[Token(Token = "0x4000084")]
	localY,
	[Token(Token = "0x4000085")]
	localZ,
	[Token(Token = "0x4000086")]
	scale,
	[Token(Token = "0x4000087")]
	color
}
[Token(Token = "0x200000D")]
public class LeanTween : MonoBehaviour
{
	[Token(Token = "0x4000088")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static bool throwErrors;

	[Token(Token = "0x4000089")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public static float tau;

	[Token(Token = "0x400008A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static float PI_DIV2;

	[Token(Token = "0x400008B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static LTSeq[] sequences;

	[Token(Token = "0x400008C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static LTDescr[] tweens;

	[Token(Token = "0x400008D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private static int[] tweensFinished;

	[Token(Token = "0x400008E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private static int[] tweensFinishedIds;

	[Token(Token = "0x400008F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private static LTDescr tween;

	[Token(Token = "0x4000090")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private static int tweenMaxSearch;

	[Token(Token = "0x4000091")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private static int maxTweens;

	[Token(Token = "0x4000092")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private static int maxSequences;

	[Token(Token = "0x4000093")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private static int frameRendered;

	[Token(Token = "0x4000094")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private static GameObject _tweenEmpty;

	[Token(Token = "0x4000095")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public static float dtEstimated;

	[Token(Token = "0x4000096")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public static float dtManual;

	[Token(Token = "0x4000097")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public static float dtActual;

	[Token(Token = "0x4000098")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private static uint global_counter;

	[Token(Token = "0x4000099")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private static int i;

	[Token(Token = "0x400009A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private static int j;

	[Token(Token = "0x400009B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private static int finishedCnt;

	[Token(Token = "0x400009C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public static AnimationCurve punch;

	[Token(Token = "0x400009D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public static AnimationCurve shake;

	[Token(Token = "0x400009E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private static int maxTweenReached;

	[Token(Token = "0x400009F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public static int startSearch;

	[Token(Token = "0x40000A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public static LTDescr d;

	[Token(Token = "0x40000A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private static Action<LTEvent>[] eventListeners;

	[Token(Token = "0x40000A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private static GameObject[] goListeners;

	[Token(Token = "0x40000A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private static int eventsMaxSearch;

	[Token(Token = "0x40000A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	public static int EVENTS_MAX;

	[Token(Token = "0x40000A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public static int LISTENERS_MAX;

	[Token(Token = "0x40000A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private static int INIT_LISTENERS_MAX;

	[Token(Token = "0x17000003")]
	public static int maxSearch
	{
		[Token(Token = "0x600003E")]
		[Address(RVA = "0xEEA584", Offset = "0xEEA584", VA = "0xEEA584")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000004")]
	public static int maxSimulataneousTweens
	{
		[Token(Token = "0x600003F")]
		[Address(RVA = "0xEEA5DC", Offset = "0xEEA5DC", VA = "0xEEA5DC")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000005")]
	public static int tweensRunning
	{
		[Token(Token = "0x6000040")]
		[Address(RVA = "0xEEA634", Offset = "0xEEA634", VA = "0xEEA634")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000006")]
	public static GameObject tweenEmpty
	{
		[Token(Token = "0x600006B")]
		[Address(RVA = "0xEEE3B4", Offset = "0xEEE3B4", VA = "0xEEE3B4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600003D")]
	[Address(RVA = "0xEEA4CC", Offset = "0xEEA4CC", VA = "0xEEA4CC")]
	public static void init()
	{
	}

	[Token(Token = "0x6000041")]
	[Address(RVA = "0xEEA524", Offset = "0xEEA524", VA = "0xEEA524")]
	public static void init(int maxSimultaneousTweens)
	{
	}

	[Token(Token = "0x6000042")]
	[Address(RVA = "0xEEA6EC", Offset = "0xEEA6EC", VA = "0xEEA6EC")]
	public static void init(int maxSimultaneousTweens, int maxSimultaneousSequences)
	{
	}

	[Token(Token = "0x6000043")]
	[Address(RVA = "0xEEABA4", Offset = "0xEEABA4", VA = "0xEEABA4")]
	public static void reset()
	{
	}

	[Token(Token = "0x6000044")]
	[Address(RVA = "0xEEACFC", Offset = "0xEEACFC", VA = "0xEEACFC")]
	public void Update()
	{
	}

	[Token(Token = "0x6000045")]
	[Address(RVA = "0xEEB190", Offset = "0xEEB190", VA = "0xEEB190")]
	private static void onLevelWasLoaded54(Scene scene, LoadSceneMode mode)
	{
	}

	[Token(Token = "0x6000046")]
	[Address(RVA = "0xEEB1F0", Offset = "0xEEB1F0", VA = "0xEEB1F0")]
	private static void internalOnLevelWasLoaded(int lvl)
	{
	}

	[Token(Token = "0x6000047")]
	[Address(RVA = "0xEEAD48", Offset = "0xEEAD48", VA = "0xEEAD48")]
	public static void update()
	{
	}

	[Token(Token = "0x6000048")]
	[Address(RVA = "0xEEB6A4", Offset = "0xEEB6A4", VA = "0xEEB6A4")]
	public static void removeTween(int i, int uniqueId)
	{
	}

	[Token(Token = "0x6000049")]
	[Address(RVA = "0xEEB394", Offset = "0xEEB394", VA = "0xEEB394")]
	public static void removeTween(int i)
	{
	}

	[Token(Token = "0x600004A")]
	[Address(RVA = "0xEEB8BC", Offset = "0xEEB8BC", VA = "0xEEB8BC")]
	public static Vector3[] add(Vector3[] a, Vector3 b)
	{
		return null;
	}

	[Token(Token = "0x600004B")]
	[Address(RVA = "0xEEBA28", Offset = "0xEEBA28", VA = "0xEEBA28")]
	public static float closestRot(float from, float to)
	{
		return default(float);
	}

	[Token(Token = "0x600004C")]
	[Address(RVA = "0xEEBA78", Offset = "0xEEBA78", VA = "0xEEBA78")]
	public static void cancelAll()
	{
	}

	[Token(Token = "0x600004D")]
	[Address(RVA = "0xEEBAC8", Offset = "0xEEBAC8", VA = "0xEEBAC8")]
	public static void cancelAll(bool callComplete)
	{
	}

	[Token(Token = "0x600004E")]
	[Address(RVA = "0xEEBC90", Offset = "0xEEBC90", VA = "0xEEBC90")]
	public static void cancel(GameObject gameObject)
	{
	}

	[Token(Token = "0x600004F")]
	[Address(RVA = "0xEEBCE8", Offset = "0xEEBCE8", VA = "0xEEBCE8")]
	public static void cancel(GameObject gameObject, bool callOnComplete)
	{
	}

	[Token(Token = "0x6000050")]
	[Address(RVA = "0xEEBE50", Offset = "0xEEBE50", VA = "0xEEBE50")]
	public static void cancel(RectTransform rect)
	{
	}

	[Token(Token = "0x6000051")]
	[Address(RVA = "0xEEBEC4", Offset = "0xEEBEC4", VA = "0xEEBEC4")]
	public static void cancel(GameObject gameObject, int uniqueId, bool callOnComplete = false)
	{
	}

	[Token(Token = "0x6000052")]
	[Address(RVA = "0xEEC128", Offset = "0xEEC128", VA = "0xEEC128")]
	public static void cancel(LTRect ltRect, int uniqueId)
	{
	}

	[Token(Token = "0x6000053")]
	[Address(RVA = "0xEEC238", Offset = "0xEEC238", VA = "0xEEC238")]
	public static void cancel(int uniqueId)
	{
	}

	[Token(Token = "0x6000054")]
	[Address(RVA = "0xEEC290", Offset = "0xEEC290", VA = "0xEEC290")]
	public static void cancel(int uniqueId, bool callOnComplete)
	{
	}

	[Token(Token = "0x6000055")]
	[Address(RVA = "0xEEC4D4", Offset = "0xEEC4D4", VA = "0xEEC4D4")]
	public static LTDescr descr(int uniqueId)
	{
		return null;
	}

	[Token(Token = "0x6000056")]
	[Address(RVA = "0xEEC718", Offset = "0xEEC718", VA = "0xEEC718")]
	public static LTDescr description(int uniqueId)
	{
		return null;
	}

	[Token(Token = "0x6000057")]
	[Address(RVA = "0xEEC76C", Offset = "0xEEC76C", VA = "0xEEC76C")]
	public static LTDescr[] descriptions([Optional] GameObject gameObject)
	{
		return null;
	}

	[Token(Token = "0x6000058")]
	[Address(RVA = "0xEEC9FC", Offset = "0xEEC9FC", VA = "0xEEC9FC")]
	[Obsolete("Use 'pause( id )' instead")]
	public static void pause(GameObject gameObject, int uniqueId)
	{
	}

	[Token(Token = "0x6000059")]
	[Address(RVA = "0xEECA50", Offset = "0xEECA50", VA = "0xEECA50")]
	public static void pause(int uniqueId)
	{
	}

	[Token(Token = "0x600005A")]
	[Address(RVA = "0xEECB28", Offset = "0xEECB28", VA = "0xEECB28")]
	public static void pause(GameObject gameObject)
	{
	}

	[Token(Token = "0x600005B")]
	[Address(RVA = "0xEECC78", Offset = "0xEECC78", VA = "0xEECC78")]
	public static void pauseAll()
	{
	}

	[Token(Token = "0x600005C")]
	[Address(RVA = "0xEECD3C", Offset = "0xEECD3C", VA = "0xEECD3C")]
	public static void resumeAll()
	{
	}

	[Token(Token = "0x600005D")]
	[Address(RVA = "0xEECE00", Offset = "0xEECE00", VA = "0xEECE00")]
	[Obsolete("Use 'resume( id )' instead")]
	public static void resume(GameObject gameObject, int uniqueId)
	{
	}

	[Token(Token = "0x600005E")]
	[Address(RVA = "0xEECE54", Offset = "0xEECE54", VA = "0xEECE54")]
	public static void resume(int uniqueId)
	{
	}

	[Token(Token = "0x600005F")]
	[Address(RVA = "0xEECF2C", Offset = "0xEECF2C", VA = "0xEECF2C")]
	public static void resume(GameObject gameObject)
	{
	}

	[Token(Token = "0x6000060")]
	[Address(RVA = "0xEED07C", Offset = "0xEED07C", VA = "0xEED07C")]
	public static bool isPaused([Optional] GameObject gameObject)
	{
		return default(bool);
	}

	[Token(Token = "0x6000061")]
	[Address(RVA = "0xEED2EC", Offset = "0xEED2EC", VA = "0xEED2EC")]
	public static bool isPaused(RectTransform rect)
	{
		return default(bool);
	}

	[Token(Token = "0x6000062")]
	[Address(RVA = "0xEED53C", Offset = "0xEED53C", VA = "0xEED53C")]
	public static bool isPaused(int uniqueId)
	{
		return default(bool);
	}

	[Token(Token = "0x6000063")]
	[Address(RVA = "0xEED35C", Offset = "0xEED35C", VA = "0xEED35C")]
	public static bool isTweening([Optional] GameObject gameObject)
	{
		return default(bool);
	}

	[Token(Token = "0x6000064")]
	[Address(RVA = "0xEED68C", Offset = "0xEED68C", VA = "0xEED68C")]
	public static bool isTweening(RectTransform rect)
	{
		return default(bool);
	}

	[Token(Token = "0x6000065")]
	[Address(RVA = "0xEED6FC", Offset = "0xEED6FC", VA = "0xEED6FC")]
	public static bool isTweening(int uniqueId)
	{
		return default(bool);
	}

	[Token(Token = "0x6000066")]
	[Address(RVA = "0xEED7F8", Offset = "0xEED7F8", VA = "0xEED7F8")]
	public static bool isTweening(LTRect ltRect)
	{
		return default(bool);
	}

	[Token(Token = "0x6000067")]
	[Address(RVA = "0xEED90C", Offset = "0xEED90C", VA = "0xEED90C")]
	public static void drawBezierPath(Vector3 a, Vector3 b, Vector3 c, Vector3 d, float arrowSize = 0f, [Optional] Transform arrowTransform)
	{
	}

	[Token(Token = "0x6000068")]
	[Address(RVA = "0xEEDF3C", Offset = "0xEEDF3C", VA = "0xEEDF3C")]
	public static object logError(string error)
	{
		return null;
	}

	[Token(Token = "0x6000069")]
	[Address(RVA = "0xEEDFDC", Offset = "0xEEDFDC", VA = "0xEEDFDC")]
	public static LTDescr options(LTDescr seed)
	{
		return null;
	}

	[Token(Token = "0x600006A")]
	[Address(RVA = "0xEEE04C", Offset = "0xEEE04C", VA = "0xEEE04C")]
	public static LTDescr options()
	{
		return null;
	}

	[Token(Token = "0x600006C")]
	[Address(RVA = "0xEEE41C", Offset = "0xEEE41C", VA = "0xEEE41C")]
	private static LTDescr pushNewTween(GameObject gameObject, Vector3 to, float time, LTDescr tween)
	{
		return null;
	}

	[Token(Token = "0x600006D")]
	[Address(RVA = "0xEEE538", Offset = "0xEEE538", VA = "0xEEE538")]
	public static LTDescr play(RectTransform rectTransform, UnityEngine.Sprite[] sprites)
	{
		return null;
	}

	[Token(Token = "0x600006E")]
	[Address(RVA = "0xEEE61C", Offset = "0xEEE61C", VA = "0xEEE61C")]
	public static LTSeq sequence(bool initSequence = true)
	{
		return null;
	}

	[Token(Token = "0x600006F")]
	[Address(RVA = "0xEEE844", Offset = "0xEEE844", VA = "0xEEE844")]
	public static LTDescr alpha(GameObject gameObject, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000070")]
	[Address(RVA = "0xEEE914", Offset = "0xEEE914", VA = "0xEEE914")]
	public static LTDescr alpha(LTRect ltRect, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000071")]
	[Address(RVA = "0xEEE9C4", Offset = "0xEEE9C4", VA = "0xEEE9C4")]
	public static LTDescr textAlpha(RectTransform rectTransform, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000072")]
	[Address(RVA = "0xEEEA68", Offset = "0xEEEA68", VA = "0xEEEA68")]
	public static LTDescr alphaText(RectTransform rectTransform, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000073")]
	[Address(RVA = "0xEEEB0C", Offset = "0xEEEB0C", VA = "0xEEEB0C")]
	public static LTDescr alphaCanvas(CanvasGroup canvasGroup, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000074")]
	[Address(RVA = "0xEEEBB0", Offset = "0xEEEBB0", VA = "0xEEEBB0")]
	public static LTDescr alphaVertex(GameObject gameObject, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000075")]
	[Address(RVA = "0xEEEC3C", Offset = "0xEEEC3C", VA = "0xEEEC3C")]
	public static LTDescr color(GameObject gameObject, Color to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000076")]
	[Address(RVA = "0xEEED40", Offset = "0xEEED40", VA = "0xEEED40")]
	public static LTDescr textColor(RectTransform rectTransform, Color to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000077")]
	[Address(RVA = "0xEEEE18", Offset = "0xEEEE18", VA = "0xEEEE18")]
	public static LTDescr colorText(RectTransform rectTransform, Color to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000078")]
	[Address(RVA = "0xEEEEF0", Offset = "0xEEEEF0", VA = "0xEEEEF0")]
	public static LTDescr delayedCall(float delayTime, Action callback)
	{
		return null;
	}

	[Token(Token = "0x6000079")]
	[Address(RVA = "0xEEEFD0", Offset = "0xEEEFD0", VA = "0xEEEFD0")]
	public static LTDescr delayedCall(float delayTime, Action<object> callback)
	{
		return null;
	}

	[Token(Token = "0x600007A")]
	[Address(RVA = "0xEEF0B0", Offset = "0xEEF0B0", VA = "0xEEF0B0")]
	public static LTDescr delayedCall(GameObject gameObject, float delayTime, Action callback)
	{
		return null;
	}

	[Token(Token = "0x600007B")]
	[Address(RVA = "0xEEF194", Offset = "0xEEF194", VA = "0xEEF194")]
	public static LTDescr delayedCall(GameObject gameObject, float delayTime, Action<object> callback)
	{
		return null;
	}

	[Token(Token = "0x600007C")]
	[Address(RVA = "0xEEF278", Offset = "0xEEF278", VA = "0xEEF278")]
	public static LTDescr destroyAfter(LTRect rect, float delayTime)
	{
		return null;
	}

	[Token(Token = "0x600007D")]
	[Address(RVA = "0xEEF368", Offset = "0xEEF368", VA = "0xEEF368")]
	public static LTDescr move(GameObject gameObject, Vector3 to, float time)
	{
		return null;
	}

	[Token(Token = "0x600007E")]
	[Address(RVA = "0xEEF404", Offset = "0xEEF404", VA = "0xEEF404")]
	public static LTDescr move(GameObject gameObject, Vector2 to, float time)
	{
		return null;
	}

	[Token(Token = "0x600007F")]
	[Address(RVA = "0xEEF4BC", Offset = "0xEEF4BC", VA = "0xEEF4BC")]
	public static LTDescr move(GameObject gameObject, Vector3[] to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000080")]
	[Address(RVA = "0xEEF9D4", Offset = "0xEEF9D4", VA = "0xEEF9D4")]
	public static LTDescr move(GameObject gameObject, LTBezierPath to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000081")]
	[Address(RVA = "0xEEFAAC", Offset = "0xEEFAAC", VA = "0xEEFAAC")]
	public static LTDescr move(GameObject gameObject, LTSpline to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000082")]
	[Address(RVA = "0xEEFB84", Offset = "0xEEFB84", VA = "0xEEFB84")]
	public static LTDescr moveSpline(GameObject gameObject, Vector3[] to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000083")]
	[Address(RVA = "0xEEFCDC", Offset = "0xEEFCDC", VA = "0xEEFCDC")]
	public static LTDescr moveSpline(GameObject gameObject, LTSpline to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000084")]
	[Address(RVA = "0xEEFDB4", Offset = "0xEEFDB4", VA = "0xEEFDB4")]
	public static LTDescr moveSplineLocal(GameObject gameObject, Vector3[] to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000085")]
	[Address(RVA = "0xEEFED4", Offset = "0xEEFED4", VA = "0xEEFED4")]
	public static LTDescr move(LTRect ltRect, Vector2 to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000086")]
	[Address(RVA = "0xEEFF84", Offset = "0xEEFF84", VA = "0xEEFF84")]
	public static LTDescr moveMargin(LTRect ltRect, Vector2 to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000087")]
	[Address(RVA = "0xEF0034", Offset = "0xEF0034", VA = "0xEF0034")]
	public static LTDescr moveX(GameObject gameObject, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000088")]
	[Address(RVA = "0xEF00C0", Offset = "0xEF00C0", VA = "0xEF00C0")]
	public static LTDescr moveY(GameObject gameObject, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000089")]
	[Address(RVA = "0xEF014C", Offset = "0xEF014C", VA = "0xEF014C")]
	public static LTDescr moveZ(GameObject gameObject, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x600008A")]
	[Address(RVA = "0xEF01D8", Offset = "0xEF01D8", VA = "0xEF01D8")]
	public static LTDescr moveLocal(GameObject gameObject, Vector3 to, float time)
	{
		return null;
	}

	[Token(Token = "0x600008B")]
	[Address(RVA = "0xEF0274", Offset = "0xEF0274", VA = "0xEF0274")]
	public static LTDescr moveLocal(GameObject gameObject, Vector3[] to, float time)
	{
		return null;
	}

	[Token(Token = "0x600008C")]
	[Address(RVA = "0xEF03DC", Offset = "0xEF03DC", VA = "0xEF03DC")]
	public static LTDescr moveLocalX(GameObject gameObject, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x600008D")]
	[Address(RVA = "0xEF0468", Offset = "0xEF0468", VA = "0xEF0468")]
	public static LTDescr moveLocalY(GameObject gameObject, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x600008E")]
	[Address(RVA = "0xEF04F4", Offset = "0xEF04F4", VA = "0xEF04F4")]
	public static LTDescr moveLocalZ(GameObject gameObject, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x600008F")]
	[Address(RVA = "0xEF0580", Offset = "0xEF0580", VA = "0xEF0580")]
	public static LTDescr moveLocal(GameObject gameObject, LTBezierPath to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000090")]
	[Address(RVA = "0xEF0658", Offset = "0xEF0658", VA = "0xEF0658")]
	public static LTDescr moveLocal(GameObject gameObject, LTSpline to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000091")]
	[Address(RVA = "0xEF0730", Offset = "0xEF0730", VA = "0xEF0730")]
	public static LTDescr move(GameObject gameObject, Transform to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000092")]
	[Address(RVA = "0xEF0814", Offset = "0xEF0814", VA = "0xEF0814")]
	public static LTDescr rotate(GameObject gameObject, Vector3 to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000093")]
	[Address(RVA = "0xEF08B0", Offset = "0xEF08B0", VA = "0xEF08B0")]
	public static LTDescr rotate(LTRect ltRect, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000094")]
	[Address(RVA = "0xEF0954", Offset = "0xEF0954", VA = "0xEF0954")]
	public static LTDescr rotateLocal(GameObject gameObject, Vector3 to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000095")]
	[Address(RVA = "0xEF09F0", Offset = "0xEF09F0", VA = "0xEF09F0")]
	public static LTDescr rotateX(GameObject gameObject, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000096")]
	[Address(RVA = "0xEF0A7C", Offset = "0xEF0A7C", VA = "0xEF0A7C")]
	public static LTDescr rotateY(GameObject gameObject, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000097")]
	[Address(RVA = "0xEF0B08", Offset = "0xEF0B08", VA = "0xEF0B08")]
	public static LTDescr rotateZ(GameObject gameObject, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000098")]
	[Address(RVA = "0xEF0B94", Offset = "0xEF0B94", VA = "0xEF0B94")]
	public static LTDescr rotateAround(GameObject gameObject, Vector3 axis, float add, float time)
	{
		return null;
	}

	[Token(Token = "0x6000099")]
	[Address(RVA = "0xEF0C54", Offset = "0xEF0C54", VA = "0xEF0C54")]
	public static LTDescr rotateAroundLocal(GameObject gameObject, Vector3 axis, float add, float time)
	{
		return null;
	}

	[Token(Token = "0x600009A")]
	[Address(RVA = "0xEF0D14", Offset = "0xEF0D14", VA = "0xEF0D14")]
	public static LTDescr scale(GameObject gameObject, Vector3 to, float time)
	{
		return null;
	}

	[Token(Token = "0x600009B")]
	[Address(RVA = "0xEF0DB0", Offset = "0xEF0DB0", VA = "0xEF0DB0")]
	public static LTDescr scale(LTRect ltRect, Vector2 to, float time)
	{
		return null;
	}

	[Token(Token = "0x600009C")]
	[Address(RVA = "0xEF0E60", Offset = "0xEF0E60", VA = "0xEF0E60")]
	public static LTDescr scaleX(GameObject gameObject, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x600009D")]
	[Address(RVA = "0xEF0EEC", Offset = "0xEF0EEC", VA = "0xEF0EEC")]
	public static LTDescr scaleY(GameObject gameObject, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x600009E")]
	[Address(RVA = "0xEF0F78", Offset = "0xEF0F78", VA = "0xEF0F78")]
	public static LTDescr scaleZ(GameObject gameObject, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x600009F")]
	[Address(RVA = "0xEF1004", Offset = "0xEF1004", VA = "0xEF1004")]
	public static LTDescr value(GameObject gameObject, float from, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x60000A0")]
	[Address(RVA = "0xEF10B4", Offset = "0xEF10B4", VA = "0xEF10B4")]
	public static LTDescr value(float from, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x60000A1")]
	[Address(RVA = "0xEF1168", Offset = "0xEF1168", VA = "0xEF1168")]
	public static LTDescr value(GameObject gameObject, Vector2 from, Vector2 to, float time)
	{
		return null;
	}

	[Token(Token = "0x60000A2")]
	[Address(RVA = "0xEF1240", Offset = "0xEF1240", VA = "0xEF1240")]
	public static LTDescr value(GameObject gameObject, Vector3 from, Vector3 to, float time)
	{
		return null;
	}

	[Token(Token = "0x60000A3")]
	[Address(RVA = "0xEF1310", Offset = "0xEF1310", VA = "0xEF1310")]
	public static LTDescr value(GameObject gameObject, Color from, Color to, float time)
	{
		return null;
	}

	[Token(Token = "0x60000A4")]
	[Address(RVA = "0xEF1458", Offset = "0xEF1458", VA = "0xEF1458")]
	public static LTDescr value(GameObject gameObject, Action<float> callOnUpdate, float from, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x60000A5")]
	[Address(RVA = "0xEF153C", Offset = "0xEF153C", VA = "0xEF153C")]
	public static LTDescr value(GameObject gameObject, Action<float, float> callOnUpdateRatio, float from, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x60000A6")]
	[Address(RVA = "0xEF1620", Offset = "0xEF1620", VA = "0xEF1620")]
	public static LTDescr value(GameObject gameObject, Action<Color> callOnUpdate, Color from, Color to, float time)
	{
		return null;
	}

	[Token(Token = "0x60000A7")]
	[Address(RVA = "0xEF1754", Offset = "0xEF1754", VA = "0xEF1754")]
	public static LTDescr value(GameObject gameObject, Action<Color, object> callOnUpdate, Color from, Color to, float time)
	{
		return null;
	}

	[Token(Token = "0x60000A8")]
	[Address(RVA = "0xEF1888", Offset = "0xEF1888", VA = "0xEF1888")]
	public static LTDescr value(GameObject gameObject, Action<Vector2> callOnUpdate, Vector2 from, Vector2 to, float time)
	{
		return null;
	}

	[Token(Token = "0x60000A9")]
	[Address(RVA = "0xEF197C", Offset = "0xEF197C", VA = "0xEF197C")]
	public static LTDescr value(GameObject gameObject, Action<Vector3> callOnUpdate, Vector3 from, Vector3 to, float time)
	{
		return null;
	}

	[Token(Token = "0x60000AA")]
	[Address(RVA = "0xEF1A80", Offset = "0xEF1A80", VA = "0xEF1A80")]
	public static LTDescr value(GameObject gameObject, Action<float, object> callOnUpdate, float from, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x60000AB")]
	[Address(RVA = "0xEF1B68", Offset = "0xEF1B68", VA = "0xEF1B68")]
	public static LTDescr delayedSound(AudioClip audio, Vector3 pos, float volume)
	{
		return null;
	}

	[Token(Token = "0x60000AC")]
	[Address(RVA = "0xEF1C4C", Offset = "0xEF1C4C", VA = "0xEF1C4C")]
	public static LTDescr delayedSound(GameObject gameObject, AudioClip audio, Vector3 pos, float volume)
	{
		return null;
	}

	[Token(Token = "0x60000AD")]
	[Address(RVA = "0xEF1D34", Offset = "0xEF1D34", VA = "0xEF1D34")]
	public static LTDescr move(RectTransform rectTrans, Vector3 to, float time)
	{
		return null;
	}

	[Token(Token = "0x60000AE")]
	[Address(RVA = "0xEF1DF8", Offset = "0xEF1DF8", VA = "0xEF1DF8")]
	public static LTDescr moveX(RectTransform rectTrans, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x60000AF")]
	[Address(RVA = "0xEF1EAC", Offset = "0xEF1EAC", VA = "0xEF1EAC")]
	public static LTDescr moveY(RectTransform rectTrans, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x60000B0")]
	[Address(RVA = "0xEF1F60", Offset = "0xEF1F60", VA = "0xEF1F60")]
	public static LTDescr moveZ(RectTransform rectTrans, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x60000B1")]
	[Address(RVA = "0xEF2014", Offset = "0xEF2014", VA = "0xEF2014")]
	public static LTDescr rotate(RectTransform rectTrans, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x60000B2")]
	[Address(RVA = "0xEF2114", Offset = "0xEF2114", VA = "0xEF2114")]
	public static LTDescr rotate(RectTransform rectTrans, Vector3 to, float time)
	{
		return null;
	}

	[Token(Token = "0x60000B3")]
	[Address(RVA = "0xEF2224", Offset = "0xEF2224", VA = "0xEF2224")]
	public static LTDescr rotateAround(RectTransform rectTrans, Vector3 axis, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x60000B4")]
	[Address(RVA = "0xEF230C", Offset = "0xEF230C", VA = "0xEF230C")]
	public static LTDescr rotateAroundLocal(RectTransform rectTrans, Vector3 axis, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x60000B5")]
	[Address(RVA = "0xEF23F4", Offset = "0xEF23F4", VA = "0xEF23F4")]
	public static LTDescr scale(RectTransform rectTrans, Vector3 to, float time)
	{
		return null;
	}

	[Token(Token = "0x60000B6")]
	[Address(RVA = "0xEF24B8", Offset = "0xEF24B8", VA = "0xEF24B8")]
	public static LTDescr size(RectTransform rectTrans, Vector2 to, float time)
	{
		return null;
	}

	[Token(Token = "0x60000B7")]
	[Address(RVA = "0xEF2578", Offset = "0xEF2578", VA = "0xEF2578")]
	public static LTDescr alpha(RectTransform rectTrans, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x60000B8")]
	[Address(RVA = "0xEF262C", Offset = "0xEF262C", VA = "0xEF262C")]
	public static LTDescr color(RectTransform rectTrans, Color to, float time)
	{
		return null;
	}

	[Token(Token = "0x60000B9")]
	[Address(RVA = "0xEF2714", Offset = "0xEF2714", VA = "0xEF2714")]
	public static float tweenOnCurve(LTDescr tweenDescr, float ratioPassed)
	{
		return default(float);
	}

	[Token(Token = "0x60000BA")]
	[Address(RVA = "0xEF275C", Offset = "0xEF275C", VA = "0xEF275C")]
	public static Vector3 tweenOnCurveVector(LTDescr tweenDescr, float ratioPassed)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60000BB")]
	[Address(RVA = "0xEF2834", Offset = "0xEF2834", VA = "0xEF2834")]
	public static float easeOutQuadOpt(float start, float diff, float ratioPassed)
	{
		return default(float);
	}

	[Token(Token = "0x60000BC")]
	[Address(RVA = "0xEF284C", Offset = "0xEF284C", VA = "0xEF284C")]
	public static float easeInQuadOpt(float start, float diff, float ratioPassed)
	{
		return default(float);
	}

	[Token(Token = "0x60000BD")]
	[Address(RVA = "0xEF285C", Offset = "0xEF285C", VA = "0xEF285C")]
	public static float easeInOutQuadOpt(float start, float diff, float ratioPassed)
	{
		return default(float);
	}

	[Token(Token = "0x60000BE")]
	[Address(RVA = "0xEF28AC", Offset = "0xEF28AC", VA = "0xEF28AC")]
	public static Vector3 easeInOutQuadOpt(Vector3 start, Vector3 diff, float ratioPassed)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60000BF")]
	[Address(RVA = "0xEF292C", Offset = "0xEF292C", VA = "0xEF292C")]
	public static float linear(float start, float end, float val)
	{
		return default(float);
	}

	[Token(Token = "0x60000C0")]
	[Address(RVA = "0xEF2950", Offset = "0xEF2950", VA = "0xEF2950")]
	public static float clerp(float start, float end, float val)
	{
		return default(float);
	}

	[Token(Token = "0x60000C1")]
	[Address(RVA = "0xEF29B4", Offset = "0xEF29B4", VA = "0xEF29B4")]
	public static float spring(float start, float end, float val)
	{
		return default(float);
	}

	[Token(Token = "0x60000C2")]
	[Address(RVA = "0xEF2A64", Offset = "0xEF2A64", VA = "0xEF2A64")]
	public static float easeInQuad(float start, float end, float val)
	{
		return default(float);
	}

	[Token(Token = "0x60000C3")]
	[Address(RVA = "0xEF2A78", Offset = "0xEF2A78", VA = "0xEF2A78")]
	public static float easeOutQuad(float start, float end, float val)
	{
		return default(float);
	}

	[Token(Token = "0x60000C4")]
	[Address(RVA = "0xEF2A94", Offset = "0xEF2A94", VA = "0xEF2A94")]
	public static float easeInOutQuad(float start, float end, float val)
	{
		return default(float);
	}

	[Token(Token = "0x60000C5")]
	[Address(RVA = "0xEF2AE8", Offset = "0xEF2AE8", VA = "0xEF2AE8")]
	public static float easeInOutQuadOpt2(float start, float diffBy2, float val, float val2)
	{
		return default(float);
	}

	[Token(Token = "0x60000C6")]
	[Address(RVA = "0xEF2B20", Offset = "0xEF2B20", VA = "0xEF2B20")]
	public static float easeInCubic(float start, float end, float val)
	{
		return default(float);
	}

	[Token(Token = "0x60000C7")]
	[Address(RVA = "0xEF2B38", Offset = "0xEF2B38", VA = "0xEF2B38")]
	public static float easeOutCubic(float start, float end, float val)
	{
		return default(float);
	}

	[Token(Token = "0x60000C8")]
	[Address(RVA = "0xEF2B60", Offset = "0xEF2B60", VA = "0xEF2B60")]
	public static float easeInOutCubic(float start, float end, float val)
	{
		return default(float);
	}

	[Token(Token = "0x60000C9")]
	[Address(RVA = "0xEF2BB8", Offset = "0xEF2BB8", VA = "0xEF2BB8")]
	public static float easeInQuart(float start, float end, float val)
	{
		return default(float);
	}

	[Token(Token = "0x60000CA")]
	[Address(RVA = "0xEF2BD4", Offset = "0xEF2BD4", VA = "0xEF2BD4")]
	public static float easeOutQuart(float start, float end, float val)
	{
		return default(float);
	}

	[Token(Token = "0x60000CB")]
	[Address(RVA = "0xEF2BFC", Offset = "0xEF2BFC", VA = "0xEF2BFC")]
	public static float easeInOutQuart(float start, float end, float val)
	{
		return default(float);
	}

	[Token(Token = "0x60000CC")]
	[Address(RVA = "0xEF2C58", Offset = "0xEF2C58", VA = "0xEF2C58")]
	public static float easeInQuint(float start, float end, float val)
	{
		return default(float);
	}

	[Token(Token = "0x60000CD")]
	[Address(RVA = "0xEF2C78", Offset = "0xEF2C78", VA = "0xEF2C78")]
	public static float easeOutQuint(float start, float end, float val)
	{
		return default(float);
	}

	[Token(Token = "0x60000CE")]
	[Address(RVA = "0xEF2CA8", Offset = "0xEF2CA8", VA = "0xEF2CA8")]
	public static float easeInOutQuint(float start, float end, float val)
	{
		return default(float);
	}

	[Token(Token = "0x60000CF")]
	[Address(RVA = "0xEF2D10", Offset = "0xEF2D10", VA = "0xEF2D10")]
	public static float easeInSine(float start, float end, float val)
	{
		return default(float);
	}

	[Token(Token = "0x60000D0")]
	[Address(RVA = "0xEF2D48", Offset = "0xEF2D48", VA = "0xEF2D48")]
	public static float easeOutSine(float start, float end, float val)
	{
		return default(float);
	}

	[Token(Token = "0x60000D1")]
	[Address(RVA = "0xEF2D7C", Offset = "0xEF2D7C", VA = "0xEF2D7C")]
	public static float easeInOutSine(float start, float end, float val)
	{
		return default(float);
	}

	[Token(Token = "0x60000D2")]
	[Address(RVA = "0xEF2DC0", Offset = "0xEF2DC0", VA = "0xEF2DC0")]
	public static float easeInExpo(float start, float end, float val)
	{
		return default(float);
	}

	[Token(Token = "0x60000D3")]
	[Address(RVA = "0xEF2DF8", Offset = "0xEF2DF8", VA = "0xEF2DF8")]
	public static float easeOutExpo(float start, float end, float val)
	{
		return default(float);
	}

	[Token(Token = "0x60000D4")]
	[Address(RVA = "0xEF2E30", Offset = "0xEF2E30", VA = "0xEF2E30")]
	public static float easeInOutExpo(float start, float end, float val)
	{
		return default(float);
	}

	[Token(Token = "0x60000D5")]
	[Address(RVA = "0xEF2EA0", Offset = "0xEF2EA0", VA = "0xEF2EA0")]
	public static float easeInCirc(float start, float end, float val)
	{
		return default(float);
	}

	[Token(Token = "0x60000D6")]
	[Address(RVA = "0xEF2EC8", Offset = "0xEF2EC8", VA = "0xEF2EC8")]
	public static float easeOutCirc(float start, float end, float val)
	{
		return default(float);
	}

	[Token(Token = "0x60000D7")]
	[Address(RVA = "0xEF2EF0", Offset = "0xEF2EF0", VA = "0xEF2EF0")]
	public static float easeInOutCirc(float start, float end, float val)
	{
		return default(float);
	}

	[Token(Token = "0x60000D8")]
	[Address(RVA = "0xEF2F44", Offset = "0xEF2F44", VA = "0xEF2F44")]
	public static float easeInBounce(float start, float end, float val)
	{
		return default(float);
	}

	[Token(Token = "0x60000D9")]
	[Address(RVA = "0xEF2FCC", Offset = "0xEF2FCC", VA = "0xEF2FCC")]
	public static float easeOutBounce(float start, float end, float val)
	{
		return default(float);
	}

	[Token(Token = "0x60000DA")]
	[Address(RVA = "0xEF3094", Offset = "0xEF3094", VA = "0xEF3094")]
	public static float easeInOutBounce(float start, float end, float val)
	{
		return default(float);
	}

	[Token(Token = "0x60000DB")]
	[Address(RVA = "0xEF3148", Offset = "0xEF3148", VA = "0xEF3148")]
	public static float easeInBack(float start, float end, float val, float overshoot = 1f)
	{
		return default(float);
	}

	[Token(Token = "0x60000DC")]
	[Address(RVA = "0xEF317C", Offset = "0xEF317C", VA = "0xEF317C")]
	public static float easeOutBack(float start, float end, float val, float overshoot = 1f)
	{
		return default(float);
	}

	[Token(Token = "0x60000DD")]
	[Address(RVA = "0xEF31BC", Offset = "0xEF31BC", VA = "0xEF31BC")]
	public static float easeInOutBack(float start, float end, float val, float overshoot = 1f)
	{
		return default(float);
	}

	[Token(Token = "0x60000DE")]
	[Address(RVA = "0xEF3254", Offset = "0xEF3254", VA = "0xEF3254")]
	public static float easeInElastic(float start, float end, float val, float overshoot = 1f, float period = 0.3f)
	{
		return default(float);
	}

	[Token(Token = "0x60000DF")]
	[Address(RVA = "0xEF332C", Offset = "0xEF332C", VA = "0xEF332C")]
	public static float easeOutElastic(float start, float end, float val, float overshoot = 1f, float period = 0.3f)
	{
		return default(float);
	}

	[Token(Token = "0x60000E0")]
	[Address(RVA = "0xEF33FC", Offset = "0xEF33FC", VA = "0xEF33FC")]
	public static float easeInOutElastic(float start, float end, float val, float overshoot = 1f, float period = 0.3f)
	{
		return default(float);
	}

	[Token(Token = "0x60000E1")]
	[Address(RVA = "0xEF354C", Offset = "0xEF354C", VA = "0xEF354C")]
	public static LTDescr followDamp(Transform trans, Transform target, LeanProp prop, float smoothTime, float maxSpeed = -1f)
	{
		return null;
	}

	[Token(Token = "0x60000E2")]
	[Address(RVA = "0xEF38E4", Offset = "0xEF38E4", VA = "0xEF38E4")]
	public static LTDescr followSpring(Transform trans, Transform target, LeanProp prop, float smoothTime, float maxSpeed = -1f, float friction = 2f, float accelRate = 0.5f)
	{
		return null;
	}

	[Token(Token = "0x60000E3")]
	[Address(RVA = "0xEF3C88", Offset = "0xEF3C88", VA = "0xEF3C88")]
	public static LTDescr followBounceOut(Transform trans, Transform target, LeanProp prop, float smoothTime, float maxSpeed = -1f, float friction = 2f, float accelRate = 0.5f, float hitDamping = 0.9f)
	{
		return null;
	}

	[Token(Token = "0x60000E4")]
	[Address(RVA = "0xEF401C", Offset = "0xEF401C", VA = "0xEF401C")]
	public static LTDescr followLinear(Transform trans, Transform target, LeanProp prop, float moveSpeed)
	{
		return null;
	}

	[Token(Token = "0x60000E5")]
	[Address(RVA = "0xEF4390", Offset = "0xEF4390", VA = "0xEF4390")]
	public static void addListener(int eventId, Action<LTEvent> callback)
	{
	}

	[Token(Token = "0x60000E6")]
	[Address(RVA = "0xEF43F8", Offset = "0xEF43F8", VA = "0xEF43F8")]
	public static void addListener(GameObject caller, int eventId, Action<LTEvent> callback)
	{
	}

	[Token(Token = "0x60000E7")]
	[Address(RVA = "0xEF4834", Offset = "0xEF4834", VA = "0xEF4834")]
	public static bool removeListener(int eventId, Action<LTEvent> callback)
	{
		return default(bool);
	}

	[Token(Token = "0x60000E8")]
	[Address(RVA = "0xEF4A9C", Offset = "0xEF4A9C", VA = "0xEF4A9C")]
	public static bool removeListener(int eventId)
	{
		return default(bool);
	}

	[Token(Token = "0x60000E9")]
	[Address(RVA = "0xEF489C", Offset = "0xEF489C", VA = "0xEF489C")]
	public static bool removeListener(GameObject caller, int eventId, Action<LTEvent> callback)
	{
		return default(bool);
	}

	[Token(Token = "0x60000EA")]
	[Address(RVA = "0xEF4B60", Offset = "0xEF4B60", VA = "0xEF4B60")]
	public static void dispatchEvent(int eventId)
	{
	}

	[Token(Token = "0x60000EB")]
	[Address(RVA = "0xEF4BB8", Offset = "0xEF4BB8", VA = "0xEF4BB8")]
	public static void dispatchEvent(int eventId, object data)
	{
	}

	[Token(Token = "0x60000EC")]
	[Address(RVA = "0xEF4DD4", Offset = "0xEF4DD4", VA = "0xEF4DD4")]
	public LeanTween()
	{
	}
}
[Token(Token = "0x2000012")]
public class LTUtility
{
	[Token(Token = "0x600011A")]
	[Address(RVA = "0xEF73C0", Offset = "0xEF73C0", VA = "0xEF73C0")]
	public static Vector3[] reverse(Vector3[] arr)
	{
		return null;
	}

	[Token(Token = "0x600011B")]
	[Address(RVA = "0xEF745C", Offset = "0xEF745C", VA = "0xEF745C")]
	public LTUtility()
	{
	}
}
[Token(Token = "0x2000013")]
public class LTBezier
{
	[Token(Token = "0x40000B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float length;

	[Token(Token = "0x40000B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private Vector3 a;

	[Token(Token = "0x40000B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Vector3 aa;

	[Token(Token = "0x40000BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private Vector3 bb;

	[Token(Token = "0x40000BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Vector3 cc;

	[Token(Token = "0x40000BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private float len;

	[Token(Token = "0x40000BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float[] arcLengths;

	[Token(Token = "0x600011C")]
	[Address(RVA = "0xEF7464", Offset = "0xEF7464", VA = "0xEF7464")]
	public LTBezier(Vector3 a, Vector3 b, Vector3 c, Vector3 d, float precision)
	{
	}

	[Token(Token = "0x600011D")]
	[Address(RVA = "0xEF7754", Offset = "0xEF7754", VA = "0xEF7754")]
	private float map(float u)
	{
		return default(float);
	}

	[Token(Token = "0x600011E")]
	[Address(RVA = "0xEF76FC", Offset = "0xEF76FC", VA = "0xEF76FC")]
	private Vector3 bezierPoint(float t)
	{
		return default(Vector3);
	}

	[Token(Token = "0x600011F")]
	[Address(RVA = "0xEF7874", Offset = "0xEF7874", VA = "0xEF7874")]
	public Vector3 point(float t)
	{
		return default(Vector3);
	}
}
[Token(Token = "0x2000014")]
public class LTBezierPath
{
	[Token(Token = "0x40000BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Vector3[] pts;

	[Token(Token = "0x40000BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float length;

	[Token(Token = "0x40000C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool orientToPath;

	[Token(Token = "0x40000C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
	public bool orientToPath2d;

	[Token(Token = "0x40000C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private LTBezier[] beziers;

	[Token(Token = "0x40000C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float[] lengthRatio;

	[Token(Token = "0x40000C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private int currentBezier;

	[Token(Token = "0x40000C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private int previousBezier;

	[Token(Token = "0x17000007")]
	public float distance
	{
		[Token(Token = "0x6000123")]
		[Address(RVA = "0xEF7894", Offset = "0xEF7894", VA = "0xEF7894")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x6000120")]
	[Address(RVA = "0xEF788C", Offset = "0xEF788C", VA = "0xEF788C")]
	public LTBezierPath()
	{
	}

	[Token(Token = "0x6000121")]
	[Address(RVA = "0xEEF624", Offset = "0xEEF624", VA = "0xEEF624")]
	public LTBezierPath(Vector3[] pts_)
	{
	}

	[Token(Token = "0x6000122")]
	[Address(RVA = "0xEEF650", Offset = "0xEEF650", VA = "0xEEF650")]
	public void setPoints(Vector3[] pts_)
	{
	}

	[Token(Token = "0x6000124")]
	[Address(RVA = "0xEF789C", Offset = "0xEF789C", VA = "0xEF789C")]
	public Vector3 point(float ratio)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000125")]
	[Address(RVA = "0xEF7960", Offset = "0xEF7960", VA = "0xEF7960")]
	public void place2d(Transform transform, float ratio)
	{
	}

	[Token(Token = "0x6000126")]
	[Address(RVA = "0xEF7A14", Offset = "0xEF7A14", VA = "0xEF7A14")]
	public void placeLocal2d(Transform transform, float ratio)
	{
	}

	[Token(Token = "0x6000127")]
	[Address(RVA = "0xEF7AC8", Offset = "0xEF7AC8", VA = "0xEF7AC8")]
	public void place(Transform transform, float ratio)
	{
	}

	[Token(Token = "0x6000128")]
	[Address(RVA = "0xEF7B34", Offset = "0xEF7B34", VA = "0xEF7B34")]
	public void place(Transform transform, float ratio, Vector3 worldUp)
	{
	}

	[Token(Token = "0x6000129")]
	[Address(RVA = "0xEF7BD0", Offset = "0xEF7BD0", VA = "0xEF7BD0")]
	public void placeLocal(Transform transform, float ratio)
	{
	}

	[Token(Token = "0x600012A")]
	[Address(RVA = "0xEF7C3C", Offset = "0xEF7C3C", VA = "0xEF7C3C")]
	public void placeLocal(Transform transform, float ratio, Vector3 worldUp)
	{
	}

	[Token(Token = "0x600012B")]
	[Address(RVA = "0xEF7D24", Offset = "0xEF7D24", VA = "0xEF7D24")]
	public void gizmoDraw(float t = -1f)
	{
	}

	[Token(Token = "0x600012C")]
	[Address(RVA = "0xEF7E04", Offset = "0xEF7E04", VA = "0xEF7E04")]
	public float ratioAtPoint(Vector3 pt, float precision = 0.01f)
	{
		return default(float);
	}
}
[Serializable]
[Token(Token = "0x2000015")]
public class LTSpline
{
	[Token(Token = "0x40000C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int DISTANCE_COUNT;

	[Token(Token = "0x40000C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public static int SUBLINE_COUNT;

	[Token(Token = "0x40000C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float distance;

	[Token(Token = "0x40000C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public bool constantSpeed;

	[Token(Token = "0x40000CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3[] pts;

	[NonSerialized]
	[Token(Token = "0x40000CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Vector3[] ptsAdj;

	[Token(Token = "0x40000CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int ptsAdjLength;

	[Token(Token = "0x40000CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public bool orientToPath;

	[Token(Token = "0x40000CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D")]
	public bool orientToPath2d;

	[Token(Token = "0x40000CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private int numSections;

	[Token(Token = "0x40000D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private int currPt;

	[Token(Token = "0x600012D")]
	[Address(RVA = "0xEEFCA4", Offset = "0xEEFCA4", VA = "0xEEFCA4")]
	public LTSpline(Vector3[] pts)
	{
	}

	[Token(Token = "0x600012E")]
	[Address(RVA = "0xEF83E8", Offset = "0xEF83E8", VA = "0xEF83E8")]
	public LTSpline(Vector3[] pts, bool constantSpeed)
	{
	}

	[Token(Token = "0x600012F")]
	[Address(RVA = "0xEF7FDC", Offset = "0xEF7FDC", VA = "0xEF7FDC")]
	private void init(Vector3[] pts, bool constantSpeed)
	{
	}

	[Token(Token = "0x6000130")]
	[Address(RVA = "0xEF862C", Offset = "0xEF862C", VA = "0xEF862C")]
	public Vector3 map(float u)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000131")]
	[Address(RVA = "0xEF8428", Offset = "0xEF8428", VA = "0xEF8428")]
	public Vector3 interp(float t)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000132")]
	[Address(RVA = "0xEF8728", Offset = "0xEF8728", VA = "0xEF8728")]
	public float ratioAtPoint(Vector3 pt)
	{
		return default(float);
	}

	[Token(Token = "0x6000133")]
	[Address(RVA = "0xEF8854", Offset = "0xEF8854", VA = "0xEF8854")]
	public Vector3 point(float ratio)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000134")]
	[Address(RVA = "0xEF886C", Offset = "0xEF886C", VA = "0xEF886C")]
	public void place2d(Transform transform, float ratio)
	{
	}

	[Token(Token = "0x6000135")]
	[Address(RVA = "0xEF8920", Offset = "0xEF8920", VA = "0xEF8920")]
	public void placeLocal2d(Transform transform, float ratio)
	{
	}

	[Token(Token = "0x6000136")]
	[Address(RVA = "0xEF8A58", Offset = "0xEF8A58", VA = "0xEF8A58")]
	public void place(Transform transform, float ratio)
	{
	}

	[Token(Token = "0x6000137")]
	[Address(RVA = "0xEF8AC4", Offset = "0xEF8AC4", VA = "0xEF8AC4")]
	public void place(Transform transform, float ratio, Vector3 worldUp)
	{
	}

	[Token(Token = "0x6000138")]
	[Address(RVA = "0xEF8B60", Offset = "0xEF8B60", VA = "0xEF8B60")]
	public void placeLocal(Transform transform, float ratio)
	{
	}

	[Token(Token = "0x6000139")]
	[Address(RVA = "0xEF8BCC", Offset = "0xEF8BCC", VA = "0xEF8BCC")]
	public void placeLocal(Transform transform, float ratio, Vector3 worldUp)
	{
	}

	[Token(Token = "0x600013A")]
	[Address(RVA = "0xEF8C8C", Offset = "0xEF8C8C", VA = "0xEF8C8C")]
	public void gizmoDraw(float t = -1f)
	{
	}

	[Token(Token = "0x600013B")]
	[Address(RVA = "0xEF8D40", Offset = "0xEF8D40", VA = "0xEF8D40")]
	public void drawGizmo(Color color)
	{
	}

	[Token(Token = "0x600013C")]
	[Address(RVA = "0xEF8E8C", Offset = "0xEF8E8C", VA = "0xEF8E8C")]
	public static void drawGizmo(Transform[] arr, Color color)
	{
	}

	[Token(Token = "0x600013D")]
	[Address(RVA = "0xEF90BC", Offset = "0xEF90BC", VA = "0xEF90BC")]
	public static void drawLine(Transform[] arr, float width, Color color)
	{
	}

	[Token(Token = "0x600013E")]
	[Address(RVA = "0xEF90CC", Offset = "0xEF90CC", VA = "0xEF90CC")]
	public void drawLinesGLLines(Material outlineMaterial, Color color, float width)
	{
	}

	[Token(Token = "0x600013F")]
	[Address(RVA = "0xEF9294", Offset = "0xEF9294", VA = "0xEF9294")]
	public Vector3[] generateVectors()
	{
		return null;
	}
}
[Serializable]
[Token(Token = "0x2000016")]
public class LTRect
{
	[Token(Token = "0x40000D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Rect _rect;

	[Token(Token = "0x40000D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float alpha;

	[Token(Token = "0x40000D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float rotation;

	[Token(Token = "0x40000D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Vector2 pivot;

	[Token(Token = "0x40000D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Vector2 margin;

	[Token(Token = "0x40000D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Rect relativeRect;

	[Token(Token = "0x40000D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public bool rotateEnabled;

	[Token(Token = "0x40000D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
	[HideInInspector]
	public bool rotateFinished;

	[Token(Token = "0x40000D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4A")]
	public bool alphaEnabled;

	[Token(Token = "0x40000DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public string labelStr;

	[Token(Token = "0x40000DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public LTGUI.Element_Type type;

	[Token(Token = "0x40000DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public GUIStyle style;

	[Token(Token = "0x40000DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public bool useColor;

	[Token(Token = "0x40000DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public Color color;

	[Token(Token = "0x40000DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public bool fontScaleToFit;

	[Token(Token = "0x40000E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7D")]
	public bool useSimpleScale;

	[Token(Token = "0x40000E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7E")]
	public bool sizeByHeight;

	[Token(Token = "0x40000E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Texture texture;

	[Token(Token = "0x40000E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private int _id;

	[Token(Token = "0x40000E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	[HideInInspector]
	public int counter;

	[Token(Token = "0x40000E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static bool colorTouched;

	[Token(Token = "0x17000008")]
	public bool hasInitiliazed
	{
		[Token(Token = "0x6000146")]
		[Address(RVA = "0xEF9B48", Offset = "0xEF9B48", VA = "0xEF9B48")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000009")]
	public int id
	{
		[Token(Token = "0x6000147")]
		[Address(RVA = "0xEEB764", Offset = "0xEEB764", VA = "0xEEB764")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x1700000A")]
	public float x
	{
		[Token(Token = "0x600014B")]
		[Address(RVA = "0xEF9B60", Offset = "0xEF9B60", VA = "0xEF9B60")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x600014C")]
		[Address(RVA = "0xEF9B6C", Offset = "0xEF9B6C", VA = "0xEF9B6C")]
		set
		{
		}
	}

	[Token(Token = "0x1700000B")]
	public float y
	{
		[Token(Token = "0x600014D")]
		[Address(RVA = "0xEF9B78", Offset = "0xEF9B78", VA = "0xEF9B78")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x600014E")]
		[Address(RVA = "0xEF9B84", Offset = "0xEF9B84", VA = "0xEF9B84")]
		set
		{
		}
	}

	[Token(Token = "0x1700000C")]
	public float width
	{
		[Token(Token = "0x600014F")]
		[Address(RVA = "0xEF9B90", Offset = "0xEF9B90", VA = "0xEF9B90")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000150")]
		[Address(RVA = "0xEF9B9C", Offset = "0xEF9B9C", VA = "0xEF9B9C")]
		set
		{
		}
	}

	[Token(Token = "0x1700000D")]
	public float height
	{
		[Token(Token = "0x6000151")]
		[Address(RVA = "0xEF9BA8", Offset = "0xEF9BA8", VA = "0xEF9BA8")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000152")]
		[Address(RVA = "0xEF9BB4", Offset = "0xEF9BB4", VA = "0xEF9BB4")]
		set
		{
		}
	}

	[Token(Token = "0x1700000E")]
	public Rect rect
	{
		[Token(Token = "0x6000153")]
		[Address(RVA = "0xEF9BC0", Offset = "0xEF9BC0", VA = "0xEF9BC0")]
		get
		{
			return default(Rect);
		}
		[Token(Token = "0x6000154")]
		[Address(RVA = "0xEF9DA8", Offset = "0xEF9DA8", VA = "0xEF9DA8")]
		set
		{
		}
	}

	[Token(Token = "0x6000141")]
	[Address(RVA = "0xEF94C8", Offset = "0xEF94C8", VA = "0xEF94C8")]
	public LTRect()
	{
	}

	[Token(Token = "0x6000142")]
	[Address(RVA = "0xEF95D8", Offset = "0xEF95D8", VA = "0xEF95D8")]
	public LTRect(Rect rect)
	{
	}

	[Token(Token = "0x6000143")]
	[Address(RVA = "0xEF9670", Offset = "0xEF9670", VA = "0xEF9670")]
	public LTRect(float x, float y, float width, float height)
	{
	}

	[Token(Token = "0x6000144")]
	[Address(RVA = "0xEF9734", Offset = "0xEF9734", VA = "0xEF9734")]
	public LTRect(float x, float y, float width, float height, float alpha)
	{
	}

	[Token(Token = "0x6000145")]
	[Address(RVA = "0xEF9800", Offset = "0xEF9800", VA = "0xEF9800")]
	public LTRect(float x, float y, float width, float height, float alpha, float rotation)
	{
	}

	[Token(Token = "0x6000148")]
	[Address(RVA = "0xEF9B58", Offset = "0xEF9B58", VA = "0xEF9B58")]
	public void setId(int id, int counter)
	{
	}

	[Token(Token = "0x6000149")]
	[Address(RVA = "0xEF956C", Offset = "0xEF956C", VA = "0xEF956C")]
	public void reset()
	{
	}

	[Token(Token = "0x600014A")]
	[Address(RVA = "0xEF98E4", Offset = "0xEF98E4", VA = "0xEF98E4")]
	public void resetForRotation()
	{
	}

	[Token(Token = "0x6000155")]
	[Address(RVA = "0xEF9DB4", Offset = "0xEF9DB4", VA = "0xEF9DB4")]
	public LTRect setStyle(GUIStyle style)
	{
		return null;
	}

	[Token(Token = "0x6000156")]
	[Address(RVA = "0xEF9DD0", Offset = "0xEF9DD0", VA = "0xEF9DD0")]
	public LTRect setFontScaleToFit(bool fontScaleToFit)
	{
		return null;
	}

	[Token(Token = "0x6000157")]
	[Address(RVA = "0xEF9DDC", Offset = "0xEF9DDC", VA = "0xEF9DDC")]
	public LTRect setColor(Color color)
	{
		return null;
	}

	[Token(Token = "0x6000158")]
	[Address(RVA = "0xEF9DF0", Offset = "0xEF9DF0", VA = "0xEF9DF0")]
	public LTRect setAlpha(float alpha)
	{
		return null;
	}

	[Token(Token = "0x6000159")]
	[Address(RVA = "0xEF9DF8", Offset = "0xEF9DF8", VA = "0xEF9DF8")]
	public LTRect setLabel(string str)
	{
		return null;
	}

	[Token(Token = "0x600015A")]
	[Address(RVA = "0xEF9E14", Offset = "0xEF9E14", VA = "0xEF9E14")]
	public LTRect setUseSimpleScale(bool useSimpleScale, Rect relativeRect)
	{
		return null;
	}

	[Token(Token = "0x600015B")]
	[Address(RVA = "0xEF9E28", Offset = "0xEF9E28", VA = "0xEF9E28")]
	public LTRect setUseSimpleScale(bool useSimpleScale)
	{
		return null;
	}

	[Token(Token = "0x600015C")]
	[Address(RVA = "0xEF9E90", Offset = "0xEF9E90", VA = "0xEF9E90")]
	public LTRect setSizeByHeight(bool sizeByHeight)
	{
		return null;
	}

	[Token(Token = "0x600015D")]
	[Address(RVA = "0xEF9E9C", Offset = "0xEF9E9C", VA = "0xEF9E9C", Slot = "3")]
	public override string ToString()
	{
		return null;
	}
}
[Token(Token = "0x2000017")]
public class LTEvent
{
	[Token(Token = "0x40000E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int id;

	[Token(Token = "0x40000E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public object data;

	[Token(Token = "0x600015E")]
	[Address(RVA = "0xEF4D9C", Offset = "0xEF4D9C", VA = "0xEF4D9C")]
	public LTEvent(int id, object data)
	{
	}
}
[Token(Token = "0x2000018")]
public class LTGUI
{
	[Token(Token = "0x2000019")]
	public enum Element_Type
	{
		[Token(Token = "0x40000F5")]
		Texture,
		[Token(Token = "0x40000F6")]
		Label
	}

	[Token(Token = "0x40000E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int RECT_LEVELS;

	[Token(Token = "0x40000E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public static int RECTS_PER_LEVEL;

	[Token(Token = "0x40000EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static int BUTTONS_MAX;

	[Token(Token = "0x40000EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static LTRect[] levels;

	[Token(Token = "0x40000EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static int[] levelDepths;

	[Token(Token = "0x40000ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private static Rect[] buttons;

	[Token(Token = "0x40000EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private static int[] buttonLevels;

	[Token(Token = "0x40000EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private static int[] buttonLastFrame;

	[Token(Token = "0x40000F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private static LTRect r;

	[Token(Token = "0x40000F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private static Color color;

	[Token(Token = "0x40000F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private static bool isGUIEnabled;

	[Token(Token = "0x40000F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private static int global_counter;

	[Token(Token = "0x600015F")]
	[Address(RVA = "0xEFA1DC", Offset = "0xEFA1DC", VA = "0xEFA1DC")]
	public static void init()
	{
	}

	[Token(Token = "0x6000160")]
	[Address(RVA = "0xEFA2D0", Offset = "0xEFA2D0", VA = "0xEFA2D0")]
	public static void initRectCheck()
	{
	}

	[Token(Token = "0x6000161")]
	[Address(RVA = "0xEEB23C", Offset = "0xEEB23C", VA = "0xEEB23C")]
	public static void reset()
	{
	}

	[Token(Token = "0x6000162")]
	[Address(RVA = "0xEFA458", Offset = "0xEFA458", VA = "0xEFA458")]
	public static void update(int updateLevel)
	{
	}

	[Token(Token = "0x6000163")]
	[Address(RVA = "0xEFAD98", Offset = "0xEFAD98", VA = "0xEFAD98")]
	public static bool checkOnScreen(Rect rect)
	{
		return default(bool);
	}

	[Token(Token = "0x6000164")]
	[Address(RVA = "0xEEB770", Offset = "0xEEB770", VA = "0xEEB770")]
	public static void destroy(int id)
	{
	}

	[Token(Token = "0x6000165")]
	[Address(RVA = "0xEFAE74", Offset = "0xEFAE74", VA = "0xEFAE74")]
	public static void destroyAll(int depth)
	{
	}

	[Token(Token = "0x6000166")]
	[Address(RVA = "0xEFAF5C", Offset = "0xEFAF5C", VA = "0xEFAF5C")]
	public static LTRect label(Rect rect, string label, int depth)
	{
		return null;
	}

	[Token(Token = "0x6000167")]
	[Address(RVA = "0xEFB020", Offset = "0xEFB020", VA = "0xEFB020")]
	public static LTRect label(LTRect rect, string label, int depth)
	{
		return null;
	}

	[Token(Token = "0x6000168")]
	[Address(RVA = "0xEFB440", Offset = "0xEFB440", VA = "0xEFB440")]
	public static LTRect texture(Rect rect, Texture texture, int depth)
	{
		return null;
	}

	[Token(Token = "0x6000169")]
	[Address(RVA = "0xEFB504", Offset = "0xEFB504", VA = "0xEFB504")]
	public static LTRect texture(LTRect rect, Texture texture, int depth)
	{
		return null;
	}

	[Token(Token = "0x600016A")]
	[Address(RVA = "0xEFB0A8", Offset = "0xEFB0A8", VA = "0xEFB0A8")]
	public static LTRect element(LTRect rect, int depth)
	{
		return null;
	}

	[Token(Token = "0x600016B")]
	[Address(RVA = "0xEFB588", Offset = "0xEFB588", VA = "0xEFB588")]
	public static bool hasNoOverlap(Rect rect, int depth)
	{
		return default(bool);
	}

	[Token(Token = "0x600016C")]
	[Address(RVA = "0xEFB848", Offset = "0xEFB848", VA = "0xEFB848")]
	public static bool pressedWithinRect(Rect rect)
	{
		return default(bool);
	}

	[Token(Token = "0x600016D")]
	[Address(RVA = "0xEFB9CC", Offset = "0xEFB9CC", VA = "0xEFB9CC")]
	public static bool checkWithinRect(Vector2 vec2, Rect rect)
	{
		return default(bool);
	}

	[Token(Token = "0x600016E")]
	[Address(RVA = "0xEFB95C", Offset = "0xEFB95C", VA = "0xEFB95C")]
	public static Vector2 firstTouch()
	{
		return default(Vector2);
	}

	[Token(Token = "0x600016F")]
	[Address(RVA = "0xEFBA94", Offset = "0xEFBA94", VA = "0xEFBA94")]
	public LTGUI()
	{
	}
}
[Token(Token = "0x200001A")]
public static class LeanTweenExt
{
	[Token(Token = "0x6000171")]
	[Address(RVA = "0xEFCB08", Offset = "0xEFCB08", VA = "0xEFCB08")]
	public static LTDescr LeanAlpha(this GameObject gameObject, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000172")]
	[Address(RVA = "0xEFCB78", Offset = "0xEFCB78", VA = "0xEFCB78")]
	public static LTDescr LeanAlphaVertex(this GameObject gameObject, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000173")]
	[Address(RVA = "0xEFCBE8", Offset = "0xEFCBE8", VA = "0xEFCBE8")]
	public static LTDescr LeanAlpha(this RectTransform rectTransform, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000174")]
	[Address(RVA = "0xEFCC58", Offset = "0xEFCC58", VA = "0xEFCC58")]
	public static LTDescr LeanAlpha(this CanvasGroup canvas, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000175")]
	[Address(RVA = "0xEFCCC8", Offset = "0xEFCCC8", VA = "0xEFCCC8")]
	public static LTDescr LeanAlphaText(this RectTransform rectTransform, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000176")]
	[Address(RVA = "0xEFCD38", Offset = "0xEFCD38", VA = "0xEFCD38")]
	public static void LeanCancel(this GameObject gameObject)
	{
	}

	[Token(Token = "0x6000177")]
	[Address(RVA = "0xEFCD90", Offset = "0xEFCD90", VA = "0xEFCD90")]
	public static void LeanCancel(this GameObject gameObject, bool callOnComplete)
	{
	}

	[Token(Token = "0x6000178")]
	[Address(RVA = "0xEFCDF8", Offset = "0xEFCDF8", VA = "0xEFCDF8")]
	public static void LeanCancel(this GameObject gameObject, int uniqueId, bool callOnComplete = false)
	{
	}

	[Token(Token = "0x6000179")]
	[Address(RVA = "0xEFCE68", Offset = "0xEFCE68", VA = "0xEFCE68")]
	public static void LeanCancel(this RectTransform rectTransform)
	{
	}

	[Token(Token = "0x600017A")]
	[Address(RVA = "0xEFCEC0", Offset = "0xEFCEC0", VA = "0xEFCEC0")]
	public static LTDescr LeanColor(this GameObject gameObject, Color to, float time)
	{
		return null;
	}

	[Token(Token = "0x600017B")]
	[Address(RVA = "0xEFCF58", Offset = "0xEFCF58", VA = "0xEFCF58")]
	public static LTDescr LeanColorText(this RectTransform rectTransform, Color to, float time)
	{
		return null;
	}

	[Token(Token = "0x600017C")]
	[Address(RVA = "0xEFCFF0", Offset = "0xEFCFF0", VA = "0xEFCFF0")]
	public static LTDescr LeanDelayedCall(this GameObject gameObject, float delayTime, Action callback)
	{
		return null;
	}

	[Token(Token = "0x600017D")]
	[Address(RVA = "0xEFD068", Offset = "0xEFD068", VA = "0xEFD068")]
	public static LTDescr LeanDelayedCall(this GameObject gameObject, float delayTime, Action<object> callback)
	{
		return null;
	}

	[Token(Token = "0x600017E")]
	[Address(RVA = "0xEFD0E0", Offset = "0xEFD0E0", VA = "0xEFD0E0")]
	public static bool LeanIsPaused(this GameObject gameObject)
	{
		return default(bool);
	}

	[Token(Token = "0x600017F")]
	[Address(RVA = "0xEFD138", Offset = "0xEFD138", VA = "0xEFD138")]
	public static bool LeanIsPaused(this RectTransform rectTransform)
	{
		return default(bool);
	}

	[Token(Token = "0x6000180")]
	[Address(RVA = "0xEFD190", Offset = "0xEFD190", VA = "0xEFD190")]
	public static bool LeanIsTweening(this GameObject gameObject)
	{
		return default(bool);
	}

	[Token(Token = "0x6000181")]
	[Address(RVA = "0xEFD1E8", Offset = "0xEFD1E8", VA = "0xEFD1E8")]
	public static LTDescr LeanMove(this GameObject gameObject, Vector3 to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000182")]
	[Address(RVA = "0xEFD270", Offset = "0xEFD270", VA = "0xEFD270")]
	public static LTDescr LeanMove(this Transform transform, Vector3 to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000183")]
	[Address(RVA = "0xEFD314", Offset = "0xEFD314", VA = "0xEFD314")]
	public static LTDescr LeanMove(this RectTransform rectTransform, Vector3 to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000184")]
	[Address(RVA = "0xEFD39C", Offset = "0xEFD39C", VA = "0xEFD39C")]
	public static LTDescr LeanMove(this GameObject gameObject, Vector2 to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000185")]
	[Address(RVA = "0xEFD41C", Offset = "0xEFD41C", VA = "0xEFD41C")]
	public static LTDescr LeanMove(this Transform transform, Vector2 to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000186")]
	[Address(RVA = "0xEFD4B8", Offset = "0xEFD4B8", VA = "0xEFD4B8")]
	public static LTDescr LeanMove(this GameObject gameObject, Vector3[] to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000187")]
	[Address(RVA = "0xEFD530", Offset = "0xEFD530", VA = "0xEFD530")]
	public static LTDescr LeanMove(this GameObject gameObject, LTBezierPath to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000188")]
	[Address(RVA = "0xEFD5A8", Offset = "0xEFD5A8", VA = "0xEFD5A8")]
	public static LTDescr LeanMove(this GameObject gameObject, LTSpline to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000189")]
	[Address(RVA = "0xEFD620", Offset = "0xEFD620", VA = "0xEFD620")]
	public static LTDescr LeanMove(this Transform transform, Vector3[] to, float time)
	{
		return null;
	}

	[Token(Token = "0x600018A")]
	[Address(RVA = "0xEFD6AC", Offset = "0xEFD6AC", VA = "0xEFD6AC")]
	public static LTDescr LeanMove(this Transform transform, LTBezierPath to, float time)
	{
		return null;
	}

	[Token(Token = "0x600018B")]
	[Address(RVA = "0xEFD738", Offset = "0xEFD738", VA = "0xEFD738")]
	public static LTDescr LeanMove(this Transform transform, LTSpline to, float time)
	{
		return null;
	}

	[Token(Token = "0x600018C")]
	[Address(RVA = "0xEFD7C4", Offset = "0xEFD7C4", VA = "0xEFD7C4")]
	public static LTDescr LeanMoveLocal(this GameObject gameObject, Vector3 to, float time)
	{
		return null;
	}

	[Token(Token = "0x600018D")]
	[Address(RVA = "0xEFD84C", Offset = "0xEFD84C", VA = "0xEFD84C")]
	public static LTDescr LeanMoveLocal(this GameObject gameObject, LTBezierPath to, float time)
	{
		return null;
	}

	[Token(Token = "0x600018E")]
	[Address(RVA = "0xEFD8C4", Offset = "0xEFD8C4", VA = "0xEFD8C4")]
	public static LTDescr LeanMoveLocal(this GameObject gameObject, LTSpline to, float time)
	{
		return null;
	}

	[Token(Token = "0x600018F")]
	[Address(RVA = "0xEFD93C", Offset = "0xEFD93C", VA = "0xEFD93C")]
	public static LTDescr LeanMoveLocal(this Transform transform, Vector3 to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000190")]
	[Address(RVA = "0xEFD9E0", Offset = "0xEFD9E0", VA = "0xEFD9E0")]
	public static LTDescr LeanMoveLocal(this Transform transform, LTBezierPath to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000191")]
	[Address(RVA = "0xEFDA6C", Offset = "0xEFDA6C", VA = "0xEFDA6C")]
	public static LTDescr LeanMoveLocal(this Transform transform, LTSpline to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000192")]
	[Address(RVA = "0xEFDAF8", Offset = "0xEFDAF8", VA = "0xEFDAF8")]
	public static LTDescr LeanMoveLocalX(this GameObject gameObject, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000193")]
	[Address(RVA = "0xEFDB68", Offset = "0xEFDB68", VA = "0xEFDB68")]
	public static LTDescr LeanMoveLocalY(this GameObject gameObject, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000194")]
	[Address(RVA = "0xEFDBD8", Offset = "0xEFDBD8", VA = "0xEFDBD8")]
	public static LTDescr LeanMoveLocalZ(this GameObject gameObject, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000195")]
	[Address(RVA = "0xEFDC48", Offset = "0xEFDC48", VA = "0xEFDC48")]
	public static LTDescr LeanMoveLocalX(this Transform transform, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000196")]
	[Address(RVA = "0xEFDCD4", Offset = "0xEFDCD4", VA = "0xEFDCD4")]
	public static LTDescr LeanMoveLocalY(this Transform transform, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000197")]
	[Address(RVA = "0xEFDD60", Offset = "0xEFDD60", VA = "0xEFDD60")]
	public static LTDescr LeanMoveLocalZ(this Transform transform, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000198")]
	[Address(RVA = "0xEFDDEC", Offset = "0xEFDDEC", VA = "0xEFDDEC")]
	public static LTDescr LeanMoveSpline(this GameObject gameObject, Vector3[] to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000199")]
	[Address(RVA = "0xEFDE64", Offset = "0xEFDE64", VA = "0xEFDE64")]
	public static LTDescr LeanMoveSpline(this GameObject gameObject, LTSpline to, float time)
	{
		return null;
	}

	[Token(Token = "0x600019A")]
	[Address(RVA = "0xEFDEDC", Offset = "0xEFDEDC", VA = "0xEFDEDC")]
	public static LTDescr LeanMoveSpline(this Transform transform, Vector3[] to, float time)
	{
		return null;
	}

	[Token(Token = "0x600019B")]
	[Address(RVA = "0xEFDF68", Offset = "0xEFDF68", VA = "0xEFDF68")]
	public static LTDescr LeanMoveSpline(this Transform transform, LTSpline to, float time)
	{
		return null;
	}

	[Token(Token = "0x600019C")]
	[Address(RVA = "0xEFDFF4", Offset = "0xEFDFF4", VA = "0xEFDFF4")]
	public static LTDescr LeanMoveSplineLocal(this GameObject gameObject, Vector3[] to, float time)
	{
		return null;
	}

	[Token(Token = "0x600019D")]
	[Address(RVA = "0xEFE06C", Offset = "0xEFE06C", VA = "0xEFE06C")]
	public static LTDescr LeanMoveSplineLocal(this Transform transform, Vector3[] to, float time)
	{
		return null;
	}

	[Token(Token = "0x600019E")]
	[Address(RVA = "0xEFE0F8", Offset = "0xEFE0F8", VA = "0xEFE0F8")]
	public static LTDescr LeanMoveX(this GameObject gameObject, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x600019F")]
	[Address(RVA = "0xEFE168", Offset = "0xEFE168", VA = "0xEFE168")]
	public static LTDescr LeanMoveX(this Transform transform, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x60001A0")]
	[Address(RVA = "0xEFE1F4", Offset = "0xEFE1F4", VA = "0xEFE1F4")]
	public static LTDescr LeanMoveX(this RectTransform rectTransform, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x60001A1")]
	[Address(RVA = "0xEFE264", Offset = "0xEFE264", VA = "0xEFE264")]
	public static LTDescr LeanMoveY(this GameObject gameObject, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x60001A2")]
	[Address(RVA = "0xEFE2D4", Offset = "0xEFE2D4", VA = "0xEFE2D4")]
	public static LTDescr LeanMoveY(this Transform transform, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x60001A3")]
	[Address(RVA = "0xEFE360", Offset = "0xEFE360", VA = "0xEFE360")]
	public static LTDescr LeanMoveY(this RectTransform rectTransform, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x60001A4")]
	[Address(RVA = "0xEFE3D0", Offset = "0xEFE3D0", VA = "0xEFE3D0")]
	public static LTDescr LeanMoveZ(this GameObject gameObject, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x60001A5")]
	[Address(RVA = "0xEFE440", Offset = "0xEFE440", VA = "0xEFE440")]
	public static LTDescr LeanMoveZ(this Transform transform, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x60001A6")]
	[Address(RVA = "0xEFE4CC", Offset = "0xEFE4CC", VA = "0xEFE4CC")]
	public static LTDescr LeanMoveZ(this RectTransform rectTransform, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x60001A7")]
	[Address(RVA = "0xEFE53C", Offset = "0xEFE53C", VA = "0xEFE53C")]
	public static void LeanPause(this GameObject gameObject)
	{
	}

	[Token(Token = "0x60001A8")]
	[Address(RVA = "0xEFE594", Offset = "0xEFE594", VA = "0xEFE594")]
	public static LTDescr LeanPlay(this RectTransform rectTransform, UnityEngine.Sprite[] sprites)
	{
		return null;
	}

	[Token(Token = "0x60001A9")]
	[Address(RVA = "0xEFE5FC", Offset = "0xEFE5FC", VA = "0xEFE5FC")]
	public static void LeanResume(this GameObject gameObject)
	{
	}

	[Token(Token = "0x60001AA")]
	[Address(RVA = "0xEFE654", Offset = "0xEFE654", VA = "0xEFE654")]
	public static LTDescr LeanRotate(this GameObject gameObject, Vector3 to, float time)
	{
		return null;
	}

	[Token(Token = "0x60001AB")]
	[Address(RVA = "0xEFE6DC", Offset = "0xEFE6DC", VA = "0xEFE6DC")]
	public static LTDescr LeanRotate(this Transform transform, Vector3 to, float time)
	{
		return null;
	}

	[Token(Token = "0x60001AC")]
	[Address(RVA = "0xEFE780", Offset = "0xEFE780", VA = "0xEFE780")]
	public static LTDescr LeanRotate(this RectTransform rectTransform, Vector3 to, float time)
	{
		return null;
	}

	[Token(Token = "0x60001AD")]
	[Address(RVA = "0xEFE808", Offset = "0xEFE808", VA = "0xEFE808")]
	public static LTDescr LeanRotateAround(this GameObject gameObject, Vector3 axis, float add, float time)
	{
		return null;
	}

	[Token(Token = "0x60001AE")]
	[Address(RVA = "0xEFE8A0", Offset = "0xEFE8A0", VA = "0xEFE8A0")]
	public static LTDescr LeanRotateAround(this Transform transform, Vector3 axis, float add, float time)
	{
		return null;
	}

	[Token(Token = "0x60001AF")]
	[Address(RVA = "0xEFE954", Offset = "0xEFE954", VA = "0xEFE954")]
	public static LTDescr LeanRotateAround(this RectTransform rectTransform, Vector3 axis, float add, float time)
	{
		return null;
	}

	[Token(Token = "0x60001B0")]
	[Address(RVA = "0xEFE9EC", Offset = "0xEFE9EC", VA = "0xEFE9EC")]
	public static LTDescr LeanRotateAroundLocal(this GameObject gameObject, Vector3 axis, float add, float time)
	{
		return null;
	}

	[Token(Token = "0x60001B1")]
	[Address(RVA = "0xEFEA84", Offset = "0xEFEA84", VA = "0xEFEA84")]
	public static LTDescr LeanRotateAroundLocal(this Transform transform, Vector3 axis, float add, float time)
	{
		return null;
	}

	[Token(Token = "0x60001B2")]
	[Address(RVA = "0xEFEB38", Offset = "0xEFEB38", VA = "0xEFEB38")]
	public static LTDescr LeanRotateAroundLocal(this RectTransform rectTransform, Vector3 axis, float add, float time)
	{
		return null;
	}

	[Token(Token = "0x60001B3")]
	[Address(RVA = "0xEFEBD0", Offset = "0xEFEBD0", VA = "0xEFEBD0")]
	public static LTDescr LeanRotateX(this GameObject gameObject, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x60001B4")]
	[Address(RVA = "0xEFEC40", Offset = "0xEFEC40", VA = "0xEFEC40")]
	public static LTDescr LeanRotateX(this Transform transform, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x60001B5")]
	[Address(RVA = "0xEFECCC", Offset = "0xEFECCC", VA = "0xEFECCC")]
	public static LTDescr LeanRotateY(this GameObject gameObject, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x60001B6")]
	[Address(RVA = "0xEFED3C", Offset = "0xEFED3C", VA = "0xEFED3C")]
	public static LTDescr LeanRotateY(this Transform transform, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x60001B7")]
	[Address(RVA = "0xEFEDC8", Offset = "0xEFEDC8", VA = "0xEFEDC8")]
	public static LTDescr LeanRotateZ(this GameObject gameObject, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x60001B8")]
	[Address(RVA = "0xEFEE38", Offset = "0xEFEE38", VA = "0xEFEE38")]
	public static LTDescr LeanRotateZ(this Transform transform, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x60001B9")]
	[Address(RVA = "0xEFEEC4", Offset = "0xEFEEC4", VA = "0xEFEEC4")]
	public static LTDescr LeanScale(this GameObject gameObject, Vector3 to, float time)
	{
		return null;
	}

	[Token(Token = "0x60001BA")]
	[Address(RVA = "0xEFEF4C", Offset = "0xEFEF4C", VA = "0xEFEF4C")]
	public static LTDescr LeanScale(this Transform transform, Vector3 to, float time)
	{
		return null;
	}

	[Token(Token = "0x60001BB")]
	[Address(RVA = "0xEFEFF0", Offset = "0xEFEFF0", VA = "0xEFEFF0")]
	public static LTDescr LeanScale(this RectTransform rectTransform, Vector3 to, float time)
	{
		return null;
	}

	[Token(Token = "0x60001BC")]
	[Address(RVA = "0xEFF078", Offset = "0xEFF078", VA = "0xEFF078")]
	public static LTDescr LeanScaleX(this GameObject gameObject, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x60001BD")]
	[Address(RVA = "0xEFF0E8", Offset = "0xEFF0E8", VA = "0xEFF0E8")]
	public static LTDescr LeanScaleX(this Transform transform, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x60001BE")]
	[Address(RVA = "0xEFF174", Offset = "0xEFF174", VA = "0xEFF174")]
	public static LTDescr LeanScaleY(this GameObject gameObject, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x60001BF")]
	[Address(RVA = "0xEFF1E4", Offset = "0xEFF1E4", VA = "0xEFF1E4")]
	public static LTDescr LeanScaleY(this Transform transform, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x60001C0")]
	[Address(RVA = "0xEFF270", Offset = "0xEFF270", VA = "0xEFF270")]
	public static LTDescr LeanScaleZ(this GameObject gameObject, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x60001C1")]
	[Address(RVA = "0xEFF2E0", Offset = "0xEFF2E0", VA = "0xEFF2E0")]
	public static LTDescr LeanScaleZ(this Transform transform, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x60001C2")]
	[Address(RVA = "0xEFF36C", Offset = "0xEFF36C", VA = "0xEFF36C")]
	public static LTDescr LeanSize(this RectTransform rectTransform, Vector2 to, float time)
	{
		return null;
	}

	[Token(Token = "0x60001C3")]
	[Address(RVA = "0xEFF3EC", Offset = "0xEFF3EC", VA = "0xEFF3EC")]
	public static LTDescr LeanValue(this GameObject gameObject, Color from, Color to, float time)
	{
		return null;
	}

	[Token(Token = "0x60001C4")]
	[Address(RVA = "0xEFF504", Offset = "0xEFF504", VA = "0xEFF504")]
	public static LTDescr LeanValue(this GameObject gameObject, float from, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x60001C5")]
	[Address(RVA = "0xEFF584", Offset = "0xEFF584", VA = "0xEFF584")]
	public static LTDescr LeanValue(this GameObject gameObject, Vector2 from, Vector2 to, float time)
	{
		return null;
	}

	[Token(Token = "0x60001C6")]
	[Address(RVA = "0xEFF61C", Offset = "0xEFF61C", VA = "0xEFF61C")]
	public static LTDescr LeanValue(this GameObject gameObject, Vector3 from, Vector3 to, float time)
	{
		return null;
	}

	[Token(Token = "0x60001C7")]
	[Address(RVA = "0xEFF6CC", Offset = "0xEFF6CC", VA = "0xEFF6CC")]
	public static LTDescr LeanValue(this GameObject gameObject, Action<float> callOnUpdate, float from, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x60001C8")]
	[Address(RVA = "0xEFF75C", Offset = "0xEFF75C", VA = "0xEFF75C")]
	public static LTDescr LeanValue(this GameObject gameObject, Action<float, float> callOnUpdate, float from, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x60001C9")]
	[Address(RVA = "0xEFF7EC", Offset = "0xEFF7EC", VA = "0xEFF7EC")]
	public static LTDescr LeanValue(this GameObject gameObject, Action<float, object> callOnUpdate, float from, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x60001CA")]
	[Address(RVA = "0xEFF87C", Offset = "0xEFF87C", VA = "0xEFF87C")]
	public static LTDescr LeanValue(this GameObject gameObject, Action<Color> callOnUpdate, Color from, Color to, float time)
	{
		return null;
	}

	[Token(Token = "0x60001CB")]
	[Address(RVA = "0xEFF99C", Offset = "0xEFF99C", VA = "0xEFF99C")]
	public static LTDescr LeanValue(this GameObject gameObject, Action<Vector2> callOnUpdate, Vector2 from, Vector2 to, float time)
	{
		return null;
	}

	[Token(Token = "0x60001CC")]
	[Address(RVA = "0xEFFA44", Offset = "0xEFFA44", VA = "0xEFFA44")]
	public static LTDescr LeanValue(this GameObject gameObject, Action<Vector3> callOnUpdate, Vector3 from, Vector3 to, float time)
	{
		return null;
	}

	[Token(Token = "0x60001CD")]
	[Address(RVA = "0xEFFB04", Offset = "0xEFFB04", VA = "0xEFFB04")]
	public static void LeanSetPosX(this Transform transform, float val)
	{
	}

	[Token(Token = "0x60001CE")]
	[Address(RVA = "0xEFFB50", Offset = "0xEFFB50", VA = "0xEFFB50")]
	public static void LeanSetPosY(this Transform transform, float val)
	{
	}

	[Token(Token = "0x60001CF")]
	[Address(RVA = "0xEFFB9C", Offset = "0xEFFB9C", VA = "0xEFFB9C")]
	public static void LeanSetPosZ(this Transform transform, float val)
	{
	}

	[Token(Token = "0x60001D0")]
	[Address(RVA = "0xEFFBE8", Offset = "0xEFFBE8", VA = "0xEFFBE8")]
	public static void LeanSetLocalPosX(this Transform transform, float val)
	{
	}

	[Token(Token = "0x60001D1")]
	[Address(RVA = "0xEFFC34", Offset = "0xEFFC34", VA = "0xEFFC34")]
	public static void LeanSetLocalPosY(this Transform transform, float val)
	{
	}

	[Token(Token = "0x60001D2")]
	[Address(RVA = "0xEFFC80", Offset = "0xEFFC80", VA = "0xEFFC80")]
	public static void LeanSetLocalPosZ(this Transform transform, float val)
	{
	}

	[Token(Token = "0x60001D3")]
	[Address(RVA = "0xEFFCCC", Offset = "0xEFFCCC", VA = "0xEFFCCC")]
	public static Color LeanColor(this Transform transform)
	{
		return default(Color);
	}
}
[Token(Token = "0x200001B")]
public class LTDescr
{
	[Token(Token = "0x200001C")]
	public delegate Vector3 EaseTypeDelegate();

	[Token(Token = "0x200001D")]
	public delegate void ActionMethodDelegate();

	[Token(Token = "0x40000F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public bool toggle;

	[Token(Token = "0x40000F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
	public bool useEstimatedTime;

	[Token(Token = "0x40000F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x12")]
	public bool useFrames;

	[Token(Token = "0x40000FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x13")]
	public bool useManualTime;

	[Token(Token = "0x40000FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public bool usesNormalDt;

	[Token(Token = "0x40000FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x15")]
	public bool hasInitiliazed;

	[Token(Token = "0x40000FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x16")]
	public bool hasExtraOnCompletes;

	[Token(Token = "0x40000FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x17")]
	public bool hasPhysics;

	[Token(Token = "0x40000FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool onCompleteOnRepeat;

	[Token(Token = "0x4000100")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool onCompleteOnStart;

	[Token(Token = "0x4000101")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	public bool useRecursion;

	[Token(Token = "0x4000102")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float ratioPassed;

	[Token(Token = "0x4000103")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float passed;

	[Token(Token = "0x4000104")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float delay;

	[Token(Token = "0x4000105")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float time;

	[Token(Token = "0x4000106")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float speed;

	[Token(Token = "0x4000107")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float lastVal;

	[Token(Token = "0x4000108")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private uint _id;

	[Token(Token = "0x4000109")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public int loopCount;

	[Token(Token = "0x400010A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public uint counter;

	[Token(Token = "0x400010B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float direction;

	[Token(Token = "0x400010C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float directionLast;

	[Token(Token = "0x400010D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float overshoot;

	[Token(Token = "0x400010E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float period;

	[Token(Token = "0x400010F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float scale;

	[Token(Token = "0x4000110")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public bool destroyOnComplete;

	[Token(Token = "0x4000111")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Transform trans;

	[Token(Token = "0x4000112")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	internal Vector3 fromInternal;

	[Token(Token = "0x4000113")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	internal Vector3 toInternal;

	[Token(Token = "0x4000114")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	internal Vector3 diff;

	[Token(Token = "0x4000115")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	internal Vector3 diffDiv2;

	[Token(Token = "0x4000116")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public TweenAction type;

	[Token(Token = "0x4000117")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private LeanTweenType easeType;

	[Token(Token = "0x4000118")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public LeanTweenType loopType;

	[Token(Token = "0x4000119")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	public bool hasUpdateCallback;

	[Token(Token = "0x400011A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public EaseTypeDelegate easeMethod;

	[Token(Token = "0x400011D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public SpriteRenderer spriteRen;

	[Token(Token = "0x400011E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public RectTransform rectTransform;

	[Token(Token = "0x400011F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public UnityEngine.UI.Text uiText;

	[Token(Token = "0x4000120")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public Image uiImage;

	[Token(Token = "0x4000121")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public RawImage rawImage;

	[Token(Token = "0x4000122")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public UnityEngine.Sprite[] sprites;

	[Token(Token = "0x4000123")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public LTDescrOptional _optional;

	[Token(Token = "0x4000124")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static float val;

	[Token(Token = "0x4000125")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public static float dt;

	[Token(Token = "0x4000126")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static Vector3 newVect;

	[Token(Token = "0x1700000F")]
	public Vector3 from
	{
		[Token(Token = "0x60001D4")]
		[Address(RVA = "0xEFFD34", Offset = "0xEFFD34", VA = "0xEFFD34")]
		get
		{
			return default(Vector3);
		}
		[Token(Token = "0x60001D5")]
		[Address(RVA = "0xEFFD40", Offset = "0xEFFD40", VA = "0xEFFD40")]
		set
		{
		}
	}

	[Token(Token = "0x17000010")]
	public Vector3 to
	{
		[Token(Token = "0x60001D6")]
		[Address(RVA = "0xEFFD4C", Offset = "0xEFFD4C", VA = "0xEFFD4C")]
		get
		{
			return default(Vector3);
		}
		[Token(Token = "0x60001D7")]
		[Address(RVA = "0xEFFD58", Offset = "0xEFFD58", VA = "0xEFFD58")]
		set
		{
		}
	}

	[Token(Token = "0x17000011")]
	public ActionMethodDelegate easeInternal
	{
		[Token(Token = "0x60001D8")]
		[Address(RVA = "0xEFFD64", Offset = "0xEFFD64", VA = "0xEFFD64")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x60001D9")]
		[Address(RVA = "0xEFFD6C", Offset = "0xEFFD6C", VA = "0xEFFD6C")]
		[CompilerGenerated]
		set
		{
		}
	}

	[Token(Token = "0x17000012")]
	public ActionMethodDelegate initInternal
	{
		[Token(Token = "0x60001DA")]
		[Address(RVA = "0xEFFD74", Offset = "0xEFFD74", VA = "0xEFFD74")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x60001DB")]
		[Address(RVA = "0xEFFD7C", Offset = "0xEFFD7C", VA = "0xEFFD7C")]
		[CompilerGenerated]
		set
		{
		}
	}

	[Token(Token = "0x17000013")]
	public Transform toTrans
	{
		[Token(Token = "0x60001DC")]
		[Address(RVA = "0xEFFD84", Offset = "0xEFFD84", VA = "0xEFFD84")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000014")]
	public int uniqueId
	{
		[Token(Token = "0x60001E0")]
		[Address(RVA = "0xF00918", Offset = "0xF00918", VA = "0xF00918")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000015")]
	public int id
	{
		[Token(Token = "0x60001E1")]
		[Address(RVA = "0xF007BC", Offset = "0xF007BC", VA = "0xF007BC")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000016")]
	public LTDescrOptional optional
	{
		[Token(Token = "0x60001E2")]
		[Address(RVA = "0xF00928", Offset = "0xF00928", VA = "0xF00928")]
		get
		{
			return null;
		}
		[Token(Token = "0x60001E3")]
		[Address(RVA = "0xF00930", Offset = "0xF00930", VA = "0xF00930")]
		set
		{
		}
	}

	[Token(Token = "0x60001DD")]
	[Address(RVA = "0xEFFDA0", Offset = "0xEFFDA0", VA = "0xEFFDA0", Slot = "3")]
	public override string ToString()
	{
		return null;
	}

	[Token(Token = "0x60001DE")]
	[Address(RVA = "0xF007CC", Offset = "0xF007CC", VA = "0xF007CC")]
	public LTDescr()
	{
	}

	[Token(Token = "0x60001DF")]
	[Address(RVA = "0xF00850", Offset = "0xF00850", VA = "0xF00850")]
	[Obsolete("Use 'LeanTween.cancel( id )' instead")]
	public LTDescr cancel(GameObject gameObject)
	{
		return null;
	}

	[Token(Token = "0x60001E4")]
	[Address(RVA = "0xF00938", Offset = "0xF00938", VA = "0xF00938")]
	public void reset()
	{
	}

	[Token(Token = "0x60001E5")]
	[Address(RVA = "0xF00C68", Offset = "0xF00C68", VA = "0xF00C68")]
	public LTDescr setFollow()
	{
		return null;
	}

	[Token(Token = "0x60001E6")]
	[Address(RVA = "0xF00C74", Offset = "0xF00C74", VA = "0xF00C74")]
	public LTDescr setMoveX()
	{
		return null;
	}

	[Token(Token = "0x60001E7")]
	[Address(RVA = "0xF00E0C", Offset = "0xF00E0C", VA = "0xF00E0C")]
	public LTDescr setMoveY()
	{
		return null;
	}

	[Token(Token = "0x60001E8")]
	[Address(RVA = "0xF00EDC", Offset = "0xF00EDC", VA = "0xF00EDC")]
	public LTDescr setMoveZ()
	{
		return null;
	}

	[Token(Token = "0x60001E9")]
	[Address(RVA = "0xF00FAC", Offset = "0xF00FAC", VA = "0xF00FAC")]
	public LTDescr setMoveLocalX()
	{
		return null;
	}

	[Token(Token = "0x60001EA")]
	[Address(RVA = "0xF0107C", Offset = "0xF0107C", VA = "0xF0107C")]
	public LTDescr setMoveLocalY()
	{
		return null;
	}

	[Token(Token = "0x60001EB")]
	[Address(RVA = "0xF0114C", Offset = "0xF0114C", VA = "0xF0114C")]
	public LTDescr setMoveLocalZ()
	{
		return null;
	}

	[Token(Token = "0x60001EC")]
	[Address(RVA = "0xF0121C", Offset = "0xF0121C", VA = "0xF0121C")]
	private void initFromInternal()
	{
	}

	[Token(Token = "0x60001ED")]
	[Address(RVA = "0xF01224", Offset = "0xF01224", VA = "0xF01224")]
	public LTDescr setOffset(Vector3 offset)
	{
		return null;
	}

	[Token(Token = "0x60001EE")]
	[Address(RVA = "0xF01230", Offset = "0xF01230", VA = "0xF01230")]
	public LTDescr setMoveCurved()
	{
		return null;
	}

	[Token(Token = "0x60001EF")]
	[Address(RVA = "0xF01300", Offset = "0xF01300", VA = "0xF01300")]
	public LTDescr setMoveCurvedLocal()
	{
		return null;
	}

	[Token(Token = "0x60001F0")]
	[Address(RVA = "0xF013D0", Offset = "0xF013D0", VA = "0xF013D0")]
	public LTDescr setMoveSpline()
	{
		return null;
	}

	[Token(Token = "0x60001F1")]
	[Address(RVA = "0xF014A0", Offset = "0xF014A0", VA = "0xF014A0")]
	public LTDescr setMoveSplineLocal()
	{
		return null;
	}

	[Token(Token = "0x60001F2")]
	[Address(RVA = "0xF01570", Offset = "0xF01570", VA = "0xF01570")]
	public LTDescr setScaleX()
	{
		return null;
	}

	[Token(Token = "0x60001F3")]
	[Address(RVA = "0xF01640", Offset = "0xF01640", VA = "0xF01640")]
	public LTDescr setScaleY()
	{
		return null;
	}

	[Token(Token = "0x60001F4")]
	[Address(RVA = "0xF01710", Offset = "0xF01710", VA = "0xF01710")]
	public LTDescr setScaleZ()
	{
		return null;
	}

	[Token(Token = "0x60001F5")]
	[Address(RVA = "0xF017E0", Offset = "0xF017E0", VA = "0xF017E0")]
	public LTDescr setRotateX()
	{
		return null;
	}

	[Token(Token = "0x60001F6")]
	[Address(RVA = "0xF018B0", Offset = "0xF018B0", VA = "0xF018B0")]
	public LTDescr setRotateY()
	{
		return null;
	}

	[Token(Token = "0x60001F7")]
	[Address(RVA = "0xF01980", Offset = "0xF01980", VA = "0xF01980")]
	public LTDescr setRotateZ()
	{
		return null;
	}

	[Token(Token = "0x60001F8")]
	[Address(RVA = "0xF01A50", Offset = "0xF01A50", VA = "0xF01A50")]
	public LTDescr setRotateAround()
	{
		return null;
	}

	[Token(Token = "0x60001F9")]
	[Address(RVA = "0xF01B20", Offset = "0xF01B20", VA = "0xF01B20")]
	public LTDescr setRotateAroundLocal()
	{
		return null;
	}

	[Token(Token = "0x60001FA")]
	[Address(RVA = "0xF01BF0", Offset = "0xF01BF0", VA = "0xF01BF0")]
	public LTDescr setAlpha()
	{
		return null;
	}

	[Token(Token = "0x60001FB")]
	[Address(RVA = "0xF01CC0", Offset = "0xF01CC0", VA = "0xF01CC0")]
	public LTDescr setTextAlpha()
	{
		return null;
	}

	[Token(Token = "0x60001FC")]
	[Address(RVA = "0xF01D90", Offset = "0xF01D90", VA = "0xF01D90")]
	public LTDescr setAlphaVertex()
	{
		return null;
	}

	[Token(Token = "0x60001FD")]
	[Address(RVA = "0xF01E60", Offset = "0xF01E60", VA = "0xF01E60")]
	public LTDescr setColor()
	{
		return null;
	}

	[Token(Token = "0x60001FE")]
	[Address(RVA = "0xF01F30", Offset = "0xF01F30", VA = "0xF01F30")]
	public LTDescr setCallbackColor()
	{
		return null;
	}

	[Token(Token = "0x60001FF")]
	[Address(RVA = "0xF02000", Offset = "0xF02000", VA = "0xF02000")]
	public LTDescr setTextColor()
	{
		return null;
	}

	[Token(Token = "0x6000200")]
	[Address(RVA = "0xF020D0", Offset = "0xF020D0", VA = "0xF020D0")]
	public LTDescr setCanvasAlpha()
	{
		return null;
	}

	[Token(Token = "0x6000201")]
	[Address(RVA = "0xF021A0", Offset = "0xF021A0", VA = "0xF021A0")]
	public LTDescr setCanvasGroupAlpha()
	{
		return null;
	}

	[Token(Token = "0x6000202")]
	[Address(RVA = "0xF02270", Offset = "0xF02270", VA = "0xF02270")]
	public LTDescr setCanvasColor()
	{
		return null;
	}

	[Token(Token = "0x6000203")]
	[Address(RVA = "0xF02340", Offset = "0xF02340", VA = "0xF02340")]
	public LTDescr setCanvasMoveX()
	{
		return null;
	}

	[Token(Token = "0x6000204")]
	[Address(RVA = "0xF02410", Offset = "0xF02410", VA = "0xF02410")]
	public LTDescr setCanvasMoveY()
	{
		return null;
	}

	[Token(Token = "0x6000205")]
	[Address(RVA = "0xF024E0", Offset = "0xF024E0", VA = "0xF024E0")]
	public LTDescr setCanvasMoveZ()
	{
		return null;
	}

	[Token(Token = "0x6000206")]
	[Address(RVA = "0xF025B0", Offset = "0xF025B0", VA = "0xF025B0")]
	private void initCanvasRotateAround()
	{
	}

	[Token(Token = "0x6000207")]
	[Address(RVA = "0xF025EC", Offset = "0xF025EC", VA = "0xF025EC")]
	public LTDescr setCanvasRotateAround()
	{
		return null;
	}

	[Token(Token = "0x6000208")]
	[Address(RVA = "0xF026BC", Offset = "0xF026BC", VA = "0xF026BC")]
	public LTDescr setCanvasRotateAroundLocal()
	{
		return null;
	}

	[Token(Token = "0x6000209")]
	[Address(RVA = "0xF0278C", Offset = "0xF0278C", VA = "0xF0278C")]
	public LTDescr setCanvasPlaySprite()
	{
		return null;
	}

	[Token(Token = "0x600020A")]
	[Address(RVA = "0xF0285C", Offset = "0xF0285C", VA = "0xF0285C")]
	public LTDescr setCanvasMove()
	{
		return null;
	}

	[Token(Token = "0x600020B")]
	[Address(RVA = "0xF0292C", Offset = "0xF0292C", VA = "0xF0292C")]
	public LTDescr setCanvasScale()
	{
		return null;
	}

	[Token(Token = "0x600020C")]
	[Address(RVA = "0xF029FC", Offset = "0xF029FC", VA = "0xF029FC")]
	public LTDescr setCanvasSizeDelta()
	{
		return null;
	}

	[Token(Token = "0x600020D")]
	[Address(RVA = "0xF02ACC", Offset = "0xF02ACC", VA = "0xF02ACC")]
	private void callback()
	{
	}

	[Token(Token = "0x600020E")]
	[Address(RVA = "0xF02B44", Offset = "0xF02B44", VA = "0xF02B44")]
	public LTDescr setCallback()
	{
		return null;
	}

	[Token(Token = "0x600020F")]
	[Address(RVA = "0xF02C7C", Offset = "0xF02C7C", VA = "0xF02C7C")]
	public LTDescr setValue3()
	{
		return null;
	}

	[Token(Token = "0x6000210")]
	[Address(RVA = "0xF02DB4", Offset = "0xF02DB4", VA = "0xF02DB4")]
	public LTDescr setMove()
	{
		return null;
	}

	[Token(Token = "0x6000211")]
	[Address(RVA = "0xF02E84", Offset = "0xF02E84", VA = "0xF02E84")]
	public LTDescr setMoveLocal()
	{
		return null;
	}

	[Token(Token = "0x6000212")]
	[Address(RVA = "0xF02F54", Offset = "0xF02F54", VA = "0xF02F54")]
	public LTDescr setMoveToTransform()
	{
		return null;
	}

	[Token(Token = "0x6000213")]
	[Address(RVA = "0xF03024", Offset = "0xF03024", VA = "0xF03024")]
	public LTDescr setRotate()
	{
		return null;
	}

	[Token(Token = "0x6000214")]
	[Address(RVA = "0xF030F4", Offset = "0xF030F4", VA = "0xF030F4")]
	public LTDescr setRotateLocal()
	{
		return null;
	}

	[Token(Token = "0x6000215")]
	[Address(RVA = "0xF031C4", Offset = "0xF031C4", VA = "0xF031C4")]
	public LTDescr setScale()
	{
		return null;
	}

	[Token(Token = "0x6000216")]
	[Address(RVA = "0xF03294", Offset = "0xF03294", VA = "0xF03294")]
	public LTDescr setGUIMove()
	{
		return null;
	}

	[Token(Token = "0x6000217")]
	[Address(RVA = "0xF03364", Offset = "0xF03364", VA = "0xF03364")]
	public LTDescr setGUIMoveMargin()
	{
		return null;
	}

	[Token(Token = "0x6000218")]
	[Address(RVA = "0xF03434", Offset = "0xF03434", VA = "0xF03434")]
	public LTDescr setGUIScale()
	{
		return null;
	}

	[Token(Token = "0x6000219")]
	[Address(RVA = "0xF03504", Offset = "0xF03504", VA = "0xF03504")]
	public LTDescr setGUIAlpha()
	{
		return null;
	}

	[Token(Token = "0x600021A")]
	[Address(RVA = "0xF035D4", Offset = "0xF035D4", VA = "0xF035D4")]
	public LTDescr setGUIRotate()
	{
		return null;
	}

	[Token(Token = "0x600021B")]
	[Address(RVA = "0xF036A4", Offset = "0xF036A4", VA = "0xF036A4")]
	public LTDescr setDelayedSound()
	{
		return null;
	}

	[Token(Token = "0x600021C")]
	[Address(RVA = "0xF03774", Offset = "0xF03774", VA = "0xF03774")]
	public LTDescr setTarget(Transform trans)
	{
		return null;
	}

	[Token(Token = "0x600021D")]
	[Address(RVA = "0xF0379C", Offset = "0xF0379C", VA = "0xF0379C")]
	private void init()
	{
	}

	[Token(Token = "0x600021E")]
	[Address(RVA = "0xF039D8", Offset = "0xF039D8", VA = "0xF039D8")]
	private void initSpeed()
	{
	}

	[Token(Token = "0x600021F")]
	[Address(RVA = "0xF03ACC", Offset = "0xF03ACC", VA = "0xF03ACC")]
	public LTDescr updateNow()
	{
		return null;
	}

	[Token(Token = "0x6000220")]
	[Address(RVA = "0xF03AE4", Offset = "0xF03AE4", VA = "0xF03AE4")]
	public bool updateInternal()
	{
		return default(bool);
	}

	[Token(Token = "0x6000221")]
	[Address(RVA = "0xF038E0", Offset = "0xF038E0", VA = "0xF038E0")]
	public void callOnCompletes()
	{
	}

	[Token(Token = "0x6000222")]
	[Address(RVA = "0xF03F00", Offset = "0xF03F00", VA = "0xF03F00")]
	public LTDescr setFromColor(Color col)
	{
		return null;
	}

	[Token(Token = "0x6000223")]
	[Address(RVA = "0xF03F3C", Offset = "0xF03F3C", VA = "0xF03F3C")]
	private static void alphaRecursive(Transform transform, float val, bool useRecursion = true)
	{
	}

	[Token(Token = "0x6000224")]
	[Address(RVA = "0xF043B4", Offset = "0xF043B4", VA = "0xF043B4")]
	private static void colorRecursive(Transform transform, Color toColor, bool useRecursion = true)
	{
	}

	[Token(Token = "0x6000225")]
	[Address(RVA = "0xF04798", Offset = "0xF04798", VA = "0xF04798")]
	private static void alphaRecursive(RectTransform rectTransform, float val, int recursiveLevel = 0)
	{
	}

	[Token(Token = "0x6000226")]
	[Address(RVA = "0xF04BD8", Offset = "0xF04BD8", VA = "0xF04BD8")]
	private static void alphaRecursiveSprite(Transform transform, float val)
	{
	}

	[Token(Token = "0x6000227")]
	[Address(RVA = "0xF04FB0", Offset = "0xF04FB0", VA = "0xF04FB0")]
	private static void colorRecursiveSprite(Transform transform, Color toColor)
	{
	}

	[Token(Token = "0x6000228")]
	[Address(RVA = "0xF053B0", Offset = "0xF053B0", VA = "0xF053B0")]
	private static void colorRecursive(RectTransform rectTransform, Color toColor)
	{
	}

	[Token(Token = "0x6000229")]
	[Address(RVA = "0xF057E8", Offset = "0xF057E8", VA = "0xF057E8")]
	private static void textAlphaChildrenRecursive(Transform trans, float val, bool useRecursion = true)
	{
	}

	[Token(Token = "0x600022A")]
	[Address(RVA = "0xF05BA0", Offset = "0xF05BA0", VA = "0xF05BA0")]
	private static void textAlphaRecursive(Transform trans, float val, bool useRecursion = true)
	{
	}

	[Token(Token = "0x600022B")]
	[Address(RVA = "0xF05F20", Offset = "0xF05F20", VA = "0xF05F20")]
	private static void textColorRecursive(Transform trans, Color toColor)
	{
	}

	[Token(Token = "0x600022C")]
	[Address(RVA = "0xF062DC", Offset = "0xF062DC", VA = "0xF062DC")]
	private static Color tweenColor(LTDescr tween, float val)
	{
		return default(Color);
	}

	[Token(Token = "0x600022D")]
	[Address(RVA = "0xF06338", Offset = "0xF06338", VA = "0xF06338")]
	public LTDescr pause()
	{
		return null;
	}

	[Token(Token = "0x600022E")]
	[Address(RVA = "0xF06350", Offset = "0xF06350", VA = "0xF06350")]
	public LTDescr resume()
	{
		return null;
	}

	[Token(Token = "0x600022F")]
	[Address(RVA = "0xF0635C", Offset = "0xF0635C", VA = "0xF0635C")]
	public LTDescr setAxis(Vector3 axis)
	{
		return null;
	}

	[Token(Token = "0x6000230")]
	[Address(RVA = "0xF0637C", Offset = "0xF0637C", VA = "0xF0637C")]
	public LTDescr setDelay(float delay)
	{
		return null;
	}

	[Token(Token = "0x6000231")]
	[Address(RVA = "0xF06384", Offset = "0xF06384", VA = "0xF06384")]
	public LTDescr setEase(LeanTweenType easeType)
	{
		return null;
	}

	[Token(Token = "0x6000232")]
	[Address(RVA = "0xF064C0", Offset = "0xF064C0", VA = "0xF064C0")]
	public LTDescr setEaseLinear()
	{
		return null;
	}

	[Token(Token = "0x6000233")]
	[Address(RVA = "0xF077E8", Offset = "0xF077E8", VA = "0xF077E8")]
	public LTDescr setEaseSpring()
	{
		return null;
	}

	[Token(Token = "0x6000234")]
	[Address(RVA = "0xF065E0", Offset = "0xF065E0", VA = "0xF065E0")]
	public LTDescr setEaseInQuad()
	{
		return null;
	}

	[Token(Token = "0x6000235")]
	[Address(RVA = "0xF06550", Offset = "0xF06550", VA = "0xF06550")]
	public LTDescr setEaseOutQuad()
	{
		return null;
	}

	[Token(Token = "0x6000236")]
	[Address(RVA = "0xF06670", Offset = "0xF06670", VA = "0xF06670")]
	public LTDescr setEaseInOutQuad()
	{
		return null;
	}

	[Token(Token = "0x6000237")]
	[Address(RVA = "0xF06700", Offset = "0xF06700", VA = "0xF06700")]
	public LTDescr setEaseInCubic()
	{
		return null;
	}

	[Token(Token = "0x6000238")]
	[Address(RVA = "0xF06790", Offset = "0xF06790", VA = "0xF06790")]
	public LTDescr setEaseOutCubic()
	{
		return null;
	}

	[Token(Token = "0x6000239")]
	[Address(RVA = "0xF06820", Offset = "0xF06820", VA = "0xF06820")]
	public LTDescr setEaseInOutCubic()
	{
		return null;
	}

	[Token(Token = "0x600023A")]
	[Address(RVA = "0xF068B0", Offset = "0xF068B0", VA = "0xF068B0")]
	public LTDescr setEaseInQuart()
	{
		return null;
	}

	[Token(Token = "0x600023B")]
	[Address(RVA = "0xF06940", Offset = "0xF06940", VA = "0xF06940")]
	public LTDescr setEaseOutQuart()
	{
		return null;
	}

	[Token(Token = "0x600023C")]
	[Address(RVA = "0xF069D0", Offset = "0xF069D0", VA = "0xF069D0")]
	public LTDescr setEaseInOutQuart()
	{
		return null;
	}

	[Token(Token = "0x600023D")]
	[Address(RVA = "0xF06A60", Offset = "0xF06A60", VA = "0xF06A60")]
	public LTDescr setEaseInQuint()
	{
		return null;
	}

	[Token(Token = "0x600023E")]
	[Address(RVA = "0xF06AF0", Offset = "0xF06AF0", VA = "0xF06AF0")]
	public LTDescr setEaseOutQuint()
	{
		return null;
	}

	[Token(Token = "0x600023F")]
	[Address(RVA = "0xF06B80", Offset = "0xF06B80", VA = "0xF06B80")]
	public LTDescr setEaseInOutQuint()
	{
		return null;
	}

	[Token(Token = "0x6000240")]
	[Address(RVA = "0xF06C10", Offset = "0xF06C10", VA = "0xF06C10")]
	public LTDescr setEaseInSine()
	{
		return null;
	}

	[Token(Token = "0x6000241")]
	[Address(RVA = "0xF06CA0", Offset = "0xF06CA0", VA = "0xF06CA0")]
	public LTDescr setEaseOutSine()
	{
		return null;
	}

	[Token(Token = "0x6000242")]
	[Address(RVA = "0xF06D30", Offset = "0xF06D30", VA = "0xF06D30")]
	public LTDescr setEaseInOutSine()
	{
		return null;
	}

	[Token(Token = "0x6000243")]
	[Address(RVA = "0xF06DC0", Offset = "0xF06DC0", VA = "0xF06DC0")]
	public LTDescr setEaseInExpo()
	{
		return null;
	}

	[Token(Token = "0x6000244")]
	[Address(RVA = "0xF06E50", Offset = "0xF06E50", VA = "0xF06E50")]
	public LTDescr setEaseOutExpo()
	{
		return null;
	}

	[Token(Token = "0x6000245")]
	[Address(RVA = "0xF06EE0", Offset = "0xF06EE0", VA = "0xF06EE0")]
	public LTDescr setEaseInOutExpo()
	{
		return null;
	}

	[Token(Token = "0x6000246")]
	[Address(RVA = "0xF06F70", Offset = "0xF06F70", VA = "0xF06F70")]
	public LTDescr setEaseInCirc()
	{
		return null;
	}

	[Token(Token = "0x6000247")]
	[Address(RVA = "0xF07000", Offset = "0xF07000", VA = "0xF07000")]
	public LTDescr setEaseOutCirc()
	{
		return null;
	}

	[Token(Token = "0x6000248")]
	[Address(RVA = "0xF07090", Offset = "0xF07090", VA = "0xF07090")]
	public LTDescr setEaseInOutCirc()
	{
		return null;
	}

	[Token(Token = "0x6000249")]
	[Address(RVA = "0xF07120", Offset = "0xF07120", VA = "0xF07120")]
	public LTDescr setEaseInBounce()
	{
		return null;
	}

	[Token(Token = "0x600024A")]
	[Address(RVA = "0xF071B0", Offset = "0xF071B0", VA = "0xF071B0")]
	public LTDescr setEaseOutBounce()
	{
		return null;
	}

	[Token(Token = "0x600024B")]
	[Address(RVA = "0xF07240", Offset = "0xF07240", VA = "0xF07240")]
	public LTDescr setEaseInOutBounce()
	{
		return null;
	}

	[Token(Token = "0x600024C")]
	[Address(RVA = "0xF072D0", Offset = "0xF072D0", VA = "0xF072D0")]
	public LTDescr setEaseInBack()
	{
		return null;
	}

	[Token(Token = "0x600024D")]
	[Address(RVA = "0xF07360", Offset = "0xF07360", VA = "0xF07360")]
	public LTDescr setEaseOutBack()
	{
		return null;
	}

	[Token(Token = "0x600024E")]
	[Address(RVA = "0xF073F0", Offset = "0xF073F0", VA = "0xF073F0")]
	public LTDescr setEaseInOutBack()
	{
		return null;
	}

	[Token(Token = "0x600024F")]
	[Address(RVA = "0xF07480", Offset = "0xF07480", VA = "0xF07480")]
	public LTDescr setEaseInElastic()
	{
		return null;
	}

	[Token(Token = "0x6000250")]
	[Address(RVA = "0xF07510", Offset = "0xF07510", VA = "0xF07510")]
	public LTDescr setEaseOutElastic()
	{
		return null;
	}

	[Token(Token = "0x6000251")]
	[Address(RVA = "0xF075A0", Offset = "0xF075A0", VA = "0xF075A0")]
	public LTDescr setEaseInOutElastic()
	{
		return null;
	}

	[Token(Token = "0x6000252")]
	[Address(RVA = "0xF07630", Offset = "0xF07630", VA = "0xF07630")]
	public LTDescr setEasePunch()
	{
		return null;
	}

	[Token(Token = "0x6000253")]
	[Address(RVA = "0xF0770C", Offset = "0xF0770C", VA = "0xF0770C")]
	public LTDescr setEaseShake()
	{
		return null;
	}

	[Token(Token = "0x6000254")]
	[Address(RVA = "0xF07878", Offset = "0xF07878", VA = "0xF07878")]
	private Vector3 tweenOnCurve()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000255")]
	[Address(RVA = "0xF07938", Offset = "0xF07938", VA = "0xF07938")]
	private Vector3 easeInOutQuad()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000256")]
	[Address(RVA = "0xF079DC", Offset = "0xF079DC", VA = "0xF079DC")]
	private Vector3 easeInQuad()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000257")]
	[Address(RVA = "0xF07A54", Offset = "0xF07A54", VA = "0xF07A54")]
	private Vector3 easeOutQuad()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000258")]
	[Address(RVA = "0xF07AD8", Offset = "0xF07AD8", VA = "0xF07AD8")]
	private Vector3 easeLinear()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000259")]
	[Address(RVA = "0xF07B50", Offset = "0xF07B50", VA = "0xF07B50")]
	private Vector3 easeSpring()
	{
		return default(Vector3);
	}

	[Token(Token = "0x600025A")]
	[Address(RVA = "0xF07C4C", Offset = "0xF07C4C", VA = "0xF07C4C")]
	private Vector3 easeInCubic()
	{
		return default(Vector3);
	}

	[Token(Token = "0x600025B")]
	[Address(RVA = "0xF07CC8", Offset = "0xF07CC8", VA = "0xF07CC8")]
	private Vector3 easeOutCubic()
	{
		return default(Vector3);
	}

	[Token(Token = "0x600025C")]
	[Address(RVA = "0xF07D54", Offset = "0xF07D54", VA = "0xF07D54")]
	private Vector3 easeInOutCubic()
	{
		return default(Vector3);
	}

	[Token(Token = "0x600025D")]
	[Address(RVA = "0xF07E00", Offset = "0xF07E00", VA = "0xF07E00")]
	private Vector3 easeInQuart()
	{
		return default(Vector3);
	}

	[Token(Token = "0x600025E")]
	[Address(RVA = "0xF07E80", Offset = "0xF07E80", VA = "0xF07E80")]
	private Vector3 easeOutQuart()
	{
		return default(Vector3);
	}

	[Token(Token = "0x600025F")]
	[Address(RVA = "0xF07F10", Offset = "0xF07F10", VA = "0xF07F10")]
	private Vector3 easeInOutQuart()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000260")]
	[Address(RVA = "0xF07FE4", Offset = "0xF07FE4", VA = "0xF07FE4")]
	private Vector3 easeInQuint()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000261")]
	[Address(RVA = "0xF08068", Offset = "0xF08068", VA = "0xF08068")]
	private Vector3 easeOutQuint()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000262")]
	[Address(RVA = "0xF080FC", Offset = "0xF080FC", VA = "0xF080FC")]
	private Vector3 easeInOutQuint()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000263")]
	[Address(RVA = "0xF081B8", Offset = "0xF081B8", VA = "0xF081B8")]
	private Vector3 easeInSine()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000264")]
	[Address(RVA = "0xF08278", Offset = "0xF08278", VA = "0xF08278")]
	private Vector3 easeOutSine()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000265")]
	[Address(RVA = "0xF0832C", Offset = "0xF0832C", VA = "0xF0832C")]
	private Vector3 easeInOutSine()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000266")]
	[Address(RVA = "0xF083BC", Offset = "0xF083BC", VA = "0xF083BC")]
	private Vector3 easeInExpo()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000267")]
	[Address(RVA = "0xF08444", Offset = "0xF08444", VA = "0xF08444")]
	private Vector3 easeOutExpo()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000268")]
	[Address(RVA = "0xF084CC", Offset = "0xF084CC", VA = "0xF084CC")]
	private Vector3 easeInOutExpo()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000269")]
	[Address(RVA = "0xF08598", Offset = "0xF08598", VA = "0xF08598")]
	private Vector3 easeInCirc()
	{
		return default(Vector3);
	}

	[Token(Token = "0x600026A")]
	[Address(RVA = "0xF08628", Offset = "0xF08628", VA = "0xF08628")]
	private Vector3 easeOutCirc()
	{
		return default(Vector3);
	}

	[Token(Token = "0x600026B")]
	[Address(RVA = "0xF086B4", Offset = "0xF086B4", VA = "0xF086B4")]
	private Vector3 easeInOutCirc()
	{
		return default(Vector3);
	}

	[Token(Token = "0x600026C")]
	[Address(RVA = "0xF08784", Offset = "0xF08784", VA = "0xF08784")]
	private Vector3 easeInBounce()
	{
		return default(Vector3);
	}

	[Token(Token = "0x600026D")]
	[Address(RVA = "0xF088B0", Offset = "0xF088B0", VA = "0xF088B0")]
	private Vector3 easeOutBounce()
	{
		return default(Vector3);
	}

	[Token(Token = "0x600026E")]
	[Address(RVA = "0xF08A00", Offset = "0xF08A00", VA = "0xF08A00")]
	private Vector3 easeInOutBounce()
	{
		return default(Vector3);
	}

	[Token(Token = "0x600026F")]
	[Address(RVA = "0xF08BDC", Offset = "0xF08BDC", VA = "0xF08BDC")]
	private Vector3 easeInBack()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000270")]
	[Address(RVA = "0xF08C84", Offset = "0xF08C84", VA = "0xF08C84")]
	private Vector3 easeOutBack()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000271")]
	[Address(RVA = "0xF08D2C", Offset = "0xF08D2C", VA = "0xF08D2C")]
	private Vector3 easeInOutBack()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000272")]
	[Address(RVA = "0xF08E30", Offset = "0xF08E30", VA = "0xF08E30")]
	private Vector3 easeInElastic()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000273")]
	[Address(RVA = "0xF08F10", Offset = "0xF08F10", VA = "0xF08F10")]
	private Vector3 easeOutElastic()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000274")]
	[Address(RVA = "0xF08FF0", Offset = "0xF08FF0", VA = "0xF08FF0")]
	private Vector3 easeInOutElastic()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000275")]
	[Address(RVA = "0xF090D0", Offset = "0xF090D0", VA = "0xF090D0")]
	public LTDescr setOvershoot(float overshoot)
	{
		return null;
	}

	[Token(Token = "0x6000276")]
	[Address(RVA = "0xF090D8", Offset = "0xF090D8", VA = "0xF090D8")]
	public LTDescr setPeriod(float period)
	{
		return null;
	}

	[Token(Token = "0x6000277")]
	[Address(RVA = "0xF090E0", Offset = "0xF090E0", VA = "0xF090E0")]
	public LTDescr setScale(float scale)
	{
		return null;
	}

	[Token(Token = "0x6000278")]
	[Address(RVA = "0xF090E8", Offset = "0xF090E8", VA = "0xF090E8")]
	public LTDescr setEase(AnimationCurve easeCurve)
	{
		return null;
	}

	[Token(Token = "0x6000279")]
	[Address(RVA = "0xF09190", Offset = "0xF09190", VA = "0xF09190")]
	public LTDescr setTo(Vector3 to)
	{
		return null;
	}

	[Token(Token = "0x600027A")]
	[Address(RVA = "0xF091C0", Offset = "0xF091C0", VA = "0xF091C0")]
	public LTDescr setTo(Transform to)
	{
		return null;
	}

	[Token(Token = "0x600027B")]
	[Address(RVA = "0xF091E8", Offset = "0xF091E8", VA = "0xF091E8")]
	public LTDescr setFrom(Vector3 from)
	{
		return null;
	}

	[Token(Token = "0x600027C")]
	[Address(RVA = "0xF092AC", Offset = "0xF092AC", VA = "0xF092AC")]
	public LTDescr setFrom(float from)
	{
		return null;
	}

	[Token(Token = "0x600027D")]
	[Address(RVA = "0xF092B8", Offset = "0xF092B8", VA = "0xF092B8")]
	public LTDescr setDiff(Vector3 diff)
	{
		return null;
	}

	[Token(Token = "0x600027E")]
	[Address(RVA = "0xF092C4", Offset = "0xF092C4", VA = "0xF092C4")]
	public LTDescr setHasInitialized(bool has)
	{
		return null;
	}

	[Token(Token = "0x600027F")]
	[Address(RVA = "0xF092D0", Offset = "0xF092D0", VA = "0xF092D0")]
	public LTDescr setId(uint id, uint global_counter)
	{
		return null;
	}

	[Token(Token = "0x6000280")]
	[Address(RVA = "0xF092DC", Offset = "0xF092DC", VA = "0xF092DC")]
	public LTDescr setPassed(float passed)
	{
		return null;
	}

	[Token(Token = "0x6000281")]
	[Address(RVA = "0xF092E4", Offset = "0xF092E4", VA = "0xF092E4")]
	public LTDescr setTime(float time)
	{
		return null;
	}

	[Token(Token = "0x6000282")]
	[Address(RVA = "0xF09300", Offset = "0xF09300", VA = "0xF09300")]
	public LTDescr setSpeed(float speed)
	{
		return null;
	}

	[Token(Token = "0x6000283")]
	[Address(RVA = "0xF09328", Offset = "0xF09328", VA = "0xF09328")]
	public LTDescr setRepeat(int repeat)
	{
		return null;
	}

	[Token(Token = "0x6000284")]
	[Address(RVA = "0xF09378", Offset = "0xF09378", VA = "0xF09378")]
	public LTDescr setLoopType(LeanTweenType loopType)
	{
		return null;
	}

	[Token(Token = "0x6000285")]
	[Address(RVA = "0xF09380", Offset = "0xF09380", VA = "0xF09380")]
	public LTDescr setUseEstimatedTime(bool useEstimatedTime)
	{
		return null;
	}

	[Token(Token = "0x6000286")]
	[Address(RVA = "0xF09390", Offset = "0xF09390", VA = "0xF09390")]
	public LTDescr setIgnoreTimeScale(bool useUnScaledTime)
	{
		return null;
	}

	[Token(Token = "0x6000287")]
	[Address(RVA = "0xF093A0", Offset = "0xF093A0", VA = "0xF093A0")]
	public LTDescr setUseFrames(bool useFrames)
	{
		return null;
	}

	[Token(Token = "0x6000288")]
	[Address(RVA = "0xF093B0", Offset = "0xF093B0", VA = "0xF093B0")]
	public LTDescr setUseManualTime(bool useManualTime)
	{
		return null;
	}

	[Token(Token = "0x6000289")]
	[Address(RVA = "0xF093C0", Offset = "0xF093C0", VA = "0xF093C0")]
	public LTDescr setLoopCount(int loopCount)
	{
		return null;
	}

	[Token(Token = "0x600028A")]
	[Address(RVA = "0xF093D0", Offset = "0xF093D0", VA = "0xF093D0")]
	public LTDescr setLoopOnce()
	{
		return null;
	}

	[Token(Token = "0x600028B")]
	[Address(RVA = "0xF093DC", Offset = "0xF093DC", VA = "0xF093DC")]
	public LTDescr setLoopClamp()
	{
		return null;
	}

	[Token(Token = "0x600028C")]
	[Address(RVA = "0xF093FC", Offset = "0xF093FC", VA = "0xF093FC")]
	public LTDescr setLoopClamp(int loops)
	{
		return null;
	}

	[Token(Token = "0x600028D")]
	[Address(RVA = "0xF09404", Offset = "0xF09404", VA = "0xF09404")]
	public LTDescr setLoopPingPong()
	{
		return null;
	}

	[Token(Token = "0x600028E")]
	[Address(RVA = "0xF09424", Offset = "0xF09424", VA = "0xF09424")]
	public LTDescr setLoopPingPong(int loops)
	{
		return null;
	}

	[Token(Token = "0x600028F")]
	[Address(RVA = "0xF09450", Offset = "0xF09450", VA = "0xF09450")]
	public LTDescr setOnComplete(Action onComplete)
	{
		return null;
	}

	[Token(Token = "0x6000290")]
	[Address(RVA = "0xF09480", Offset = "0xF09480", VA = "0xF09480")]
	public LTDescr setOnComplete(Action<object> onComplete)
	{
		return null;
	}

	[Token(Token = "0x6000291")]
	[Address(RVA = "0xF094B0", Offset = "0xF094B0", VA = "0xF094B0")]
	public LTDescr setOnComplete(Action<object> onComplete, object onCompleteParam)
	{
		return null;
	}

	[Token(Token = "0x6000292")]
	[Address(RVA = "0xF09504", Offset = "0xF09504", VA = "0xF09504")]
	public LTDescr setOnCompleteParam(object onCompleteParam)
	{
		return null;
	}

	[Token(Token = "0x6000293")]
	[Address(RVA = "0xF09534", Offset = "0xF09534", VA = "0xF09534")]
	public LTDescr setOnUpdate(Action<float> onUpdate)
	{
		return null;
	}

	[Token(Token = "0x6000294")]
	[Address(RVA = "0xF09564", Offset = "0xF09564", VA = "0xF09564")]
	public LTDescr setOnUpdateRatio(Action<float, float> onUpdate)
	{
		return null;
	}

	[Token(Token = "0x6000295")]
	[Address(RVA = "0xF09594", Offset = "0xF09594", VA = "0xF09594")]
	public LTDescr setOnUpdateObject(Action<float, object> onUpdate)
	{
		return null;
	}

	[Token(Token = "0x6000296")]
	[Address(RVA = "0xF095C4", Offset = "0xF095C4", VA = "0xF095C4")]
	public LTDescr setOnUpdateVector2(Action<Vector2> onUpdate)
	{
		return null;
	}

	[Token(Token = "0x6000297")]
	[Address(RVA = "0xF095F4", Offset = "0xF095F4", VA = "0xF095F4")]
	public LTDescr setOnUpdateVector3(Action<Vector3> onUpdate)
	{
		return null;
	}

	[Token(Token = "0x6000298")]
	[Address(RVA = "0xF09624", Offset = "0xF09624", VA = "0xF09624")]
	public LTDescr setOnUpdateColor(Action<Color> onUpdate)
	{
		return null;
	}

	[Token(Token = "0x6000299")]
	[Address(RVA = "0xF09654", Offset = "0xF09654", VA = "0xF09654")]
	public LTDescr setOnUpdateColor(Action<Color, object> onUpdate)
	{
		return null;
	}

	[Token(Token = "0x600029A")]
	[Address(RVA = "0xF09684", Offset = "0xF09684", VA = "0xF09684")]
	public LTDescr setOnUpdate(Action<Color> onUpdate)
	{
		return null;
	}

	[Token(Token = "0x600029B")]
	[Address(RVA = "0xF096B4", Offset = "0xF096B4", VA = "0xF096B4")]
	public LTDescr setOnUpdate(Action<Color, object> onUpdate)
	{
		return null;
	}

	[Token(Token = "0x600029C")]
	[Address(RVA = "0xF096E4", Offset = "0xF096E4", VA = "0xF096E4")]
	public LTDescr setOnUpdate(Action<float, object> onUpdate, [Optional] object onUpdateParam)
	{
		return null;
	}

	[Token(Token = "0x600029D")]
	[Address(RVA = "0xF09738", Offset = "0xF09738", VA = "0xF09738")]
	public LTDescr setOnUpdate(Action<Vector3, object> onUpdate, [Optional] object onUpdateParam)
	{
		return null;
	}

	[Token(Token = "0x600029E")]
	[Address(RVA = "0xF0978C", Offset = "0xF0978C", VA = "0xF0978C")]
	public LTDescr setOnUpdate(Action<Vector2> onUpdate, [Optional] object onUpdateParam)
	{
		return null;
	}

	[Token(Token = "0x600029F")]
	[Address(RVA = "0xF097E0", Offset = "0xF097E0", VA = "0xF097E0")]
	public LTDescr setOnUpdate(Action<Vector3> onUpdate, [Optional] object onUpdateParam)
	{
		return null;
	}

	[Token(Token = "0x60002A0")]
	[Address(RVA = "0xF09834", Offset = "0xF09834", VA = "0xF09834")]
	public LTDescr setOnUpdateParam(object onUpdateParam)
	{
		return null;
	}

	[Token(Token = "0x60002A1")]
	[Address(RVA = "0xF0985C", Offset = "0xF0985C", VA = "0xF0985C")]
	public LTDescr setOrientToPath(bool doesOrient)
	{
		return null;
	}

	[Token(Token = "0x60002A2")]
	[Address(RVA = "0xF0992C", Offset = "0xF0992C", VA = "0xF0992C")]
	public LTDescr setOrientToPath2d(bool doesOrient2d)
	{
		return null;
	}

	[Token(Token = "0x60002A3")]
	[Address(RVA = "0xF09984", Offset = "0xF09984", VA = "0xF09984")]
	public LTDescr setRect(LTRect rect)
	{
		return null;
	}

	[Token(Token = "0x60002A4")]
	[Address(RVA = "0xF099AC", Offset = "0xF099AC", VA = "0xF099AC")]
	public LTDescr setRect(Rect rect)
	{
		return null;
	}

	[Token(Token = "0x60002A5")]
	[Address(RVA = "0xF09A54", Offset = "0xF09A54", VA = "0xF09A54")]
	public LTDescr setPath(LTBezierPath path)
	{
		return null;
	}

	[Token(Token = "0x60002A6")]
	[Address(RVA = "0xF09A7C", Offset = "0xF09A7C", VA = "0xF09A7C")]
	public LTDescr setPoint(Vector3 point)
	{
		return null;
	}

	[Token(Token = "0x60002A7")]
	[Address(RVA = "0xF09A9C", Offset = "0xF09A9C", VA = "0xF09A9C")]
	public LTDescr setDestroyOnComplete(bool doesDestroy)
	{
		return null;
	}

	[Token(Token = "0x60002A8")]
	[Address(RVA = "0xF09AA8", Offset = "0xF09AA8", VA = "0xF09AA8")]
	public LTDescr setAudio(object audio)
	{
		return null;
	}

	[Token(Token = "0x60002A9")]
	[Address(RVA = "0xF0936C", Offset = "0xF0936C", VA = "0xF0936C")]
	public LTDescr setOnCompleteOnRepeat(bool isOn)
	{
		return null;
	}

	[Token(Token = "0x60002AA")]
	[Address(RVA = "0xF09AD0", Offset = "0xF09AD0", VA = "0xF09AD0")]
	public LTDescr setOnCompleteOnStart(bool isOn)
	{
		return null;
	}

	[Token(Token = "0x60002AB")]
	[Address(RVA = "0xF09ADC", Offset = "0xF09ADC", VA = "0xF09ADC")]
	public LTDescr setRect(RectTransform rect)
	{
		return null;
	}

	[Token(Token = "0x60002AC")]
	[Address(RVA = "0xF09AF8", Offset = "0xF09AF8", VA = "0xF09AF8")]
	public LTDescr setSprites(UnityEngine.Sprite[] sprites)
	{
		return null;
	}

	[Token(Token = "0x60002AD")]
	[Address(RVA = "0xF09B14", Offset = "0xF09B14", VA = "0xF09B14")]
	public LTDescr setFrameRate(float frameRate)
	{
		return null;
	}

	[Token(Token = "0x60002AE")]
	[Address(RVA = "0xF09B3C", Offset = "0xF09B3C", VA = "0xF09B3C")]
	public LTDescr setOnStart(Action onStart)
	{
		return null;
	}

	[Token(Token = "0x60002AF")]
	[Address(RVA = "0xF09B64", Offset = "0xF09B64", VA = "0xF09B64")]
	public LTDescr setDirection(float direction)
	{
		return null;
	}

	[Token(Token = "0x60002B0")]
	[Address(RVA = "0xF09D38", Offset = "0xF09D38", VA = "0xF09D38")]
	public LTDescr setRecursive(bool useRecursion)
	{
		return null;
	}
}
[Token(Token = "0x200001F")]
public class LTDescrOptional
{
	[Token(Token = "0x4000131")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public AnimationCurve animationCurve;

	[Token(Token = "0x4000132")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public int initFrameCount;

	[Token(Token = "0x4000133")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public Color color;

	[Token(Token = "0x17000017")]
	public Transform toTrans
	{
		[Token(Token = "0x6000317")]
		[Address(RVA = "0xF0E130", Offset = "0xF0E130", VA = "0xF0E130")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x6000318")]
		[Address(RVA = "0xF0E138", Offset = "0xF0E138", VA = "0xF0E138")]
		[CompilerGenerated]
		set
		{
		}
	}

	[Token(Token = "0x17000018")]
	public Vector3 point
	{
		[Token(Token = "0x6000319")]
		[Address(RVA = "0xF0E140", Offset = "0xF0E140", VA = "0xF0E140")]
		[CompilerGenerated]
		get
		{
			return default(Vector3);
		}
		[Token(Token = "0x600031A")]
		[Address(RVA = "0xF0E14C", Offset = "0xF0E14C", VA = "0xF0E14C")]
		[CompilerGenerated]
		set
		{
		}
	}

	[Token(Token = "0x17000019")]
	public Vector3 axis
	{
		[Token(Token = "0x600031B")]
		[Address(RVA = "0xF0E158", Offset = "0xF0E158", VA = "0xF0E158")]
		[CompilerGenerated]
		get
		{
			return default(Vector3);
		}
		[Token(Token = "0x600031C")]
		[Address(RVA = "0xF0E164", Offset = "0xF0E164", VA = "0xF0E164")]
		[CompilerGenerated]
		set
		{
		}
	}

	[Token(Token = "0x1700001A")]
	public float lastVal
	{
		[Token(Token = "0x600031D")]
		[Address(RVA = "0xF0E170", Offset = "0xF0E170", VA = "0xF0E170")]
		[CompilerGenerated]
		get
		{
			return default(float);
		}
		[Token(Token = "0x600031E")]
		[Address(RVA = "0xF0E178", Offset = "0xF0E178", VA = "0xF0E178")]
		[CompilerGenerated]
		set
		{
		}
	}

	[Token(Token = "0x1700001B")]
	public Quaternion origRotation
	{
		[Token(Token = "0x600031F")]
		[Address(RVA = "0xF0E180", Offset = "0xF0E180", VA = "0xF0E180")]
		[CompilerGenerated]
		get
		{
			return default(Quaternion);
		}
		[Token(Token = "0x6000320")]
		[Address(RVA = "0xF0E18C", Offset = "0xF0E18C", VA = "0xF0E18C")]
		[CompilerGenerated]
		set
		{
		}
	}

	[Token(Token = "0x1700001C")]
	public LTBezierPath path
	{
		[Token(Token = "0x6000321")]
		[Address(RVA = "0xF0E198", Offset = "0xF0E198", VA = "0xF0E198")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x6000322")]
		[Address(RVA = "0xF0E1A0", Offset = "0xF0E1A0", VA = "0xF0E1A0")]
		[CompilerGenerated]
		set
		{
		}
	}

	[Token(Token = "0x1700001D")]
	public LTSpline spline
	{
		[Token(Token = "0x6000323")]
		[Address(RVA = "0xF0E1A8", Offset = "0xF0E1A8", VA = "0xF0E1A8")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x6000324")]
		[Address(RVA = "0xF0E1B0", Offset = "0xF0E1B0", VA = "0xF0E1B0")]
		[CompilerGenerated]
		set
		{
		}
	}

	[Token(Token = "0x1700001E")]
	public LTRect ltRect
	{
		[Token(Token = "0x6000325")]
		[Address(RVA = "0xF0E1B8", Offset = "0xF0E1B8", VA = "0xF0E1B8")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x6000326")]
		[Address(RVA = "0xF0E1C0", Offset = "0xF0E1C0", VA = "0xF0E1C0")]
		[CompilerGenerated]
		set
		{
		}
	}

	[Token(Token = "0x1700001F")]
	public Action<float> onUpdateFloat
	{
		[Token(Token = "0x6000327")]
		[Address(RVA = "0xF0E1C8", Offset = "0xF0E1C8", VA = "0xF0E1C8")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x6000328")]
		[Address(RVA = "0xF0E1D0", Offset = "0xF0E1D0", VA = "0xF0E1D0")]
		[CompilerGenerated]
		set
		{
		}
	}

	[Token(Token = "0x17000020")]
	public Action<float, float> onUpdateFloatRatio
	{
		[Token(Token = "0x6000329")]
		[Address(RVA = "0xF0E1D8", Offset = "0xF0E1D8", VA = "0xF0E1D8")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x600032A")]
		[Address(RVA = "0xF0E1E0", Offset = "0xF0E1E0", VA = "0xF0E1E0")]
		[CompilerGenerated]
		set
		{
		}
	}

	[Token(Token = "0x17000021")]
	public Action<float, object> onUpdateFloatObject
	{
		[Token(Token = "0x600032B")]
		[Address(RVA = "0xF0E1E8", Offset = "0xF0E1E8", VA = "0xF0E1E8")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x600032C")]
		[Address(RVA = "0xF0E1F0", Offset = "0xF0E1F0", VA = "0xF0E1F0")]
		[CompilerGenerated]
		set
		{
		}
	}

	[Token(Token = "0x17000022")]
	public Action<Vector2> onUpdateVector2
	{
		[Token(Token = "0x600032D")]
		[Address(RVA = "0xF0E1F8", Offset = "0xF0E1F8", VA = "0xF0E1F8")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x600032E")]
		[Address(RVA = "0xF0E200", Offset = "0xF0E200", VA = "0xF0E200")]
		[CompilerGenerated]
		set
		{
		}
	}

	[Token(Token = "0x17000023")]
	public Action<Vector3> onUpdateVector3
	{
		[Token(Token = "0x600032F")]
		[Address(RVA = "0xF0E208", Offset = "0xF0E208", VA = "0xF0E208")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x6000330")]
		[Address(RVA = "0xF0E210", Offset = "0xF0E210", VA = "0xF0E210")]
		[CompilerGenerated]
		set
		{
		}
	}

	[Token(Token = "0x17000024")]
	public Action<Vector3, object> onUpdateVector3Object
	{
		[Token(Token = "0x6000331")]
		[Address(RVA = "0xF0E218", Offset = "0xF0E218", VA = "0xF0E218")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x6000332")]
		[Address(RVA = "0xF0E220", Offset = "0xF0E220", VA = "0xF0E220")]
		[CompilerGenerated]
		set
		{
		}
	}

	[Token(Token = "0x17000025")]
	public Action<Color> onUpdateColor
	{
		[Token(Token = "0x6000333")]
		[Address(RVA = "0xF0E228", Offset = "0xF0E228", VA = "0xF0E228")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x6000334")]
		[Address(RVA = "0xF0E230", Offset = "0xF0E230", VA = "0xF0E230")]
		[CompilerGenerated]
		set
		{
		}
	}

	[Token(Token = "0x17000026")]
	public Action<Color, object> onUpdateColorObject
	{
		[Token(Token = "0x6000335")]
		[Address(RVA = "0xF0E238", Offset = "0xF0E238", VA = "0xF0E238")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x6000336")]
		[Address(RVA = "0xF0E240", Offset = "0xF0E240", VA = "0xF0E240")]
		[CompilerGenerated]
		set
		{
		}
	}

	[Token(Token = "0x17000027")]
	public Action onComplete
	{
		[Token(Token = "0x6000337")]
		[Address(RVA = "0xF0E248", Offset = "0xF0E248", VA = "0xF0E248")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x6000338")]
		[Address(RVA = "0xF0E250", Offset = "0xF0E250", VA = "0xF0E250")]
		[CompilerGenerated]
		set
		{
		}
	}

	[Token(Token = "0x17000028")]
	public Action<object> onCompleteObject
	{
		[Token(Token = "0x6000339")]
		[Address(RVA = "0xF0E258", Offset = "0xF0E258", VA = "0xF0E258")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x600033A")]
		[Address(RVA = "0xF0E260", Offset = "0xF0E260", VA = "0xF0E260")]
		[CompilerGenerated]
		set
		{
		}
	}

	[Token(Token = "0x17000029")]
	public object onCompleteParam
	{
		[Token(Token = "0x600033B")]
		[Address(RVA = "0xF0E268", Offset = "0xF0E268", VA = "0xF0E268")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x600033C")]
		[Address(RVA = "0xF0E270", Offset = "0xF0E270", VA = "0xF0E270")]
		[CompilerGenerated]
		set
		{
		}
	}

	[Token(Token = "0x1700002A")]
	public object onUpdateParam
	{
		[Token(Token = "0x600033D")]
		[Address(RVA = "0xF0E278", Offset = "0xF0E278", VA = "0xF0E278")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x600033E")]
		[Address(RVA = "0xF0E280", Offset = "0xF0E280", VA = "0xF0E280")]
		[CompilerGenerated]
		set
		{
		}
	}

	[Token(Token = "0x1700002B")]
	public Action onStart
	{
		[Token(Token = "0x600033F")]
		[Address(RVA = "0xF0E288", Offset = "0xF0E288", VA = "0xF0E288")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x6000340")]
		[Address(RVA = "0xF0E290", Offset = "0xF0E290", VA = "0xF0E290")]
		[CompilerGenerated]
		set
		{
		}
	}

	[Token(Token = "0x6000341")]
	[Address(RVA = "0xF00B50", Offset = "0xF00B50", VA = "0xF00B50")]
	public void reset()
	{
	}

	[Token(Token = "0x6000342")]
	[Address(RVA = "0xF03DAC", Offset = "0xF03DAC", VA = "0xF03DAC")]
	public void callOnUpdate(float val, float ratioPassed)
	{
	}

	[Token(Token = "0x6000343")]
	[Address(RVA = "0xF00848", Offset = "0xF00848", VA = "0xF00848")]
	public LTDescrOptional()
	{
	}
}
[Token(Token = "0x2000020")]
public class LTSeq
{
	[Token(Token = "0x4000142")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public LTSeq previous;

	[Token(Token = "0x4000143")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public LTSeq current;

	[Token(Token = "0x4000144")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public LTDescr tween;

	[Token(Token = "0x4000145")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float totalDelay;

	[Token(Token = "0x4000146")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float timeScale;

	[Token(Token = "0x4000147")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private int debugIter;

	[Token(Token = "0x4000148")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public uint counter;

	[Token(Token = "0x4000149")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool toggle;

	[Token(Token = "0x400014A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private uint _id;

	[Token(Token = "0x1700002C")]
	public int id
	{
		[Token(Token = "0x6000344")]
		[Address(RVA = "0xF0E298", Offset = "0xF0E298", VA = "0xF0E298")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x6000345")]
	[Address(RVA = "0xF0E2A8", Offset = "0xF0E2A8", VA = "0xF0E2A8")]
	public void reset()
	{
	}

	[Token(Token = "0x6000346")]
	[Address(RVA = "0xF0E2D8", Offset = "0xF0E2D8", VA = "0xF0E2D8")]
	public void init(uint id, uint global_counter)
	{
	}

	[Token(Token = "0x6000347")]
	[Address(RVA = "0xF0E32C", Offset = "0xF0E32C", VA = "0xF0E32C")]
	private LTSeq addOn()
	{
		return null;
	}

	[Token(Token = "0x6000348")]
	[Address(RVA = "0xF0E3E0", Offset = "0xF0E3E0", VA = "0xF0E3E0")]
	private float addPreviousDelays()
	{
		return default(float);
	}

	[Token(Token = "0x6000349")]
	[Address(RVA = "0xF0E41C", Offset = "0xF0E41C", VA = "0xF0E41C")]
	public LTSeq append(float delay)
	{
		return null;
	}

	[Token(Token = "0x600034A")]
	[Address(RVA = "0xF0E440", Offset = "0xF0E440", VA = "0xF0E440")]
	public LTSeq append(Action callback)
	{
		return null;
	}

	[Token(Token = "0x600034B")]
	[Address(RVA = "0xF0E510", Offset = "0xF0E510", VA = "0xF0E510")]
	public LTSeq append(Action<object> callback, object obj)
	{
		return null;
	}

	[Token(Token = "0x600034C")]
	[Address(RVA = "0xF0E5A4", Offset = "0xF0E5A4", VA = "0xF0E5A4")]
	public LTSeq append(GameObject gameObject, Action callback)
	{
		return null;
	}

	[Token(Token = "0x600034D")]
	[Address(RVA = "0xF0E628", Offset = "0xF0E628", VA = "0xF0E628")]
	public LTSeq append(GameObject gameObject, Action<object> callback, object obj)
	{
		return null;
	}

	[Token(Token = "0x600034E")]
	[Address(RVA = "0xF0E4B4", Offset = "0xF0E4B4", VA = "0xF0E4B4")]
	public LTSeq append(LTDescr tween)
	{
		return null;
	}

	[Token(Token = "0x600034F")]
	[Address(RVA = "0xF0E6CC", Offset = "0xF0E6CC", VA = "0xF0E6CC")]
	public LTSeq insert(LTDescr tween)
	{
		return null;
	}

	[Token(Token = "0x6000350")]
	[Address(RVA = "0xF0E710", Offset = "0xF0E710", VA = "0xF0E710")]
	public LTSeq setScale(float timeScale)
	{
		return null;
	}

	[Token(Token = "0x6000351")]
	[Address(RVA = "0xF0E730", Offset = "0xF0E730", VA = "0xF0E730")]
	private void setScaleRecursive(LTSeq seq, float timeScale, int count)
	{
	}

	[Token(Token = "0x6000352")]
	[Address(RVA = "0xF0E7A8", Offset = "0xF0E7A8", VA = "0xF0E7A8")]
	public LTSeq reverse()
	{
		return null;
	}

	[Token(Token = "0x6000353")]
	[Address(RVA = "0xF0E7AC", Offset = "0xF0E7AC", VA = "0xF0E7AC")]
	public LTSeq()
	{
	}
}
[Token(Token = "0x2000021")]
public class OculusSpatializerFMOD : MonoBehaviour
{
	[Token(Token = "0x2000022")]
	public delegate void AudioRaycastCallback(Vector3 origin, Vector3 direction, out Vector3 point, out Vector3 normal, IntPtr data);

	[Token(Token = "0x400014B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public LayerMask layerMask;

	[Token(Token = "0x400014C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool visualizeRoom;

	[Token(Token = "0x400014D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
	private bool roomVisualizationInitialized;

	[Token(Token = "0x400014E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int raysPerSecond;

	[Token(Token = "0x400014F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float roomInterpSpeed;

	[Token(Token = "0x4000150")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float maxWallDistance;

	[Token(Token = "0x4000151")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public int rayCacheSize;

	[Token(Token = "0x4000152")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool dynamicReflectionsEnabled;

	[Token(Token = "0x4000153")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private AudioRaycastCallback _raycastCallback;

	[Token(Token = "0x4000154")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float particleSize;

	[Token(Token = "0x4000155")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private float particleOffset;

	[Token(Token = "0x4000156")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private GameObject room;

	[Token(Token = "0x4000157")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Renderer[] wallRenderer;

	[Token(Token = "0x4000158")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float[] dims;

	[Token(Token = "0x4000159")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private float[] coefs;

	[Token(Token = "0x400015A")]
	private const int HIT_COUNT = 2048;

	[Token(Token = "0x400015B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Vector3[] points;

	[Token(Token = "0x400015C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Vector3[] normals;

	[Token(Token = "0x400015D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private ParticleSystem sys;

	[Token(Token = "0x400015E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private ParticleSystem.Particle[] particles;

	[Token(Token = "0x400015F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static LayerMask gLayerMask;

	[Token(Token = "0x4000160")]
	private const string strOSP = "OculusSpatializerFMOD";

	[Token(Token = "0x6000354")]
	[Address(RVA = "0xF0E7B4", Offset = "0xF0E7B4", VA = "0xF0E7B4")]
	private static Vector3 swapHandedness(Vector3 vec)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000355")]
	[Address(RVA = "0xF0E7BC", Offset = "0xF0E7BC", VA = "0xF0E7BC")]
	private static void AudioRaycast(Vector3 origin, Vector3 direction, out Vector3 point, out Vector3 normal, IntPtr data)
	{
	}

	[Token(Token = "0x6000356")]
	[Address(RVA = "0xF0E94C", Offset = "0xF0E94C", VA = "0xF0E94C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000357")]
	[Address(RVA = "0xF0E9D0", Offset = "0xF0E9D0", VA = "0xF0E9D0")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000358")]
	[Address(RVA = "0xF0EAB4", Offset = "0xF0EAB4", VA = "0xF0EAB4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000359")]
	[Address(RVA = "0xF0F40C", Offset = "0xF0F40C", VA = "0xF0F40C")]
	private void inititalizeRoomVisualization()
	{
	}

	[PreserveSig]
	[Token(Token = "0x600035A")]
	[Address(RVA = "0xF0EA30", Offset = "0xF0EA30", VA = "0xF0EA30")]
	private static extern int OSP_FMOD_AssignRayCastCallback(IntPtr callback, IntPtr data);

	[PreserveSig]
	[Token(Token = "0x600035B")]
	[Address(RVA = "0xF0F1A0", Offset = "0xF0F1A0", VA = "0xF0F1A0")]
	private static extern int OSP_FMOD_SetDynamicRoomRaysPerSecond(int RaysPerSecond);

	[PreserveSig]
	[Token(Token = "0x600035C")]
	[Address(RVA = "0xF0F21C", Offset = "0xF0F21C", VA = "0xF0F21C")]
	private static extern int OSP_FMOD_SetDynamicRoomInterpSpeed(float InterpSpeed);

	[PreserveSig]
	[Token(Token = "0x600035D")]
	[Address(RVA = "0xF0F298", Offset = "0xF0F298", VA = "0xF0F298")]
	private static extern int OSP_FMOD_SetDynamicRoomMaxWallDistance(float MaxWallDistance);

	[PreserveSig]
	[Token(Token = "0x600035E")]
	[Address(RVA = "0xF0F314", Offset = "0xF0F314", VA = "0xF0F314")]
	private static extern int OSP_FMOD_SetDynamicRoomRaysRayCacheSize(int RayCacheSize);

	[PreserveSig]
	[Token(Token = "0x600035F")]
	[Address(RVA = "0xF0F390", Offset = "0xF0F390", VA = "0xF0F390")]
	private static extern int OSP_FMOD_UpdateRoomModel(float wetLevel);

	[PreserveSig]
	[Token(Token = "0x6000360")]
	[Address(RVA = "0xF10194", Offset = "0xF10194", VA = "0xF10194")]
	private static extern int OSP_FMOD_GetRoomDimensions(float[] roomDimensions, float[] reflectionsCoefs, out Vector3 position);

	[PreserveSig]
	[Token(Token = "0x6000361")]
	[Address(RVA = "0xF10238", Offset = "0xF10238", VA = "0xF10238")]
	private static extern int OSP_FMOD_GetRaycastHits(Vector3[] points, Vector3[] normals, int length);

	[Token(Token = "0x6000362")]
	[Address(RVA = "0xF102DC", Offset = "0xF102DC", VA = "0xF102DC")]
	public OculusSpatializerFMOD()
	{
	}
}
[Token(Token = "0x2000023")]
[RequireComponent(typeof(Animator))]
public class IKControl : MonoBehaviour
{
	[Token(Token = "0x4000161")]
	private const float c_totalWeight = 1f;

	[Token(Token = "0x4000162")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private bool ikActive;

	[Token(Token = "0x4000163")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Transform lookAtTarget;

	[Token(Token = "0x4000164")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[FormerlySerializedAs("bodyweighting")]
	[SerializeField]
	private float bodyToHeadRatio;

	[Token(Token = "0x4000165")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Animator animator;

	[Token(Token = "0x4000166")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Vector3? targetPosition;

	[Token(Token = "0x6000368")]
	[Address(RVA = "0x1004FB4", Offset = "0x1004FB4", VA = "0x1004FB4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000369")]
	[Address(RVA = "0x100509C", Offset = "0x100509C", VA = "0x100509C")]
	private void Update()
	{
	}

	[Token(Token = "0x600036A")]
	[Address(RVA = "0x10051A0", Offset = "0x10051A0", VA = "0x10051A0")]
	private void OnAnimatorIK()
	{
	}

	[Token(Token = "0x600036B")]
	[Address(RVA = "0x1005260", Offset = "0x1005260", VA = "0x1005260")]
	public IKControl()
	{
	}
}
[Token(Token = "0x2000024")]
public class LightFlicker : MonoBehaviour
{
	[Token(Token = "0x4000167")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private float speed;

	[Token(Token = "0x4000168")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private Vector2 sineNoise;

	[Token(Token = "0x4000169")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	private Vector2 clampMinMax;

	[Token(Token = "0x400016A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[SerializeField]
	private Vector2 lerpMinMax;

	[Token(Token = "0x400016B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Light myLight;

	[Token(Token = "0x400016C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float defaultIntensity;

	[Token(Token = "0x600036C")]
	[Address(RVA = "0x1005270", Offset = "0x1005270", VA = "0x1005270")]
	private void Start()
	{
	}

	[Token(Token = "0x600036D")]
	[Address(RVA = "0x1005328", Offset = "0x1005328", VA = "0x1005328")]
	private void Update()
	{
	}

	[Token(Token = "0x600036E")]
	[Address(RVA = "0x10054F0", Offset = "0x10054F0", VA = "0x10054F0")]
	private float NoiseSineWave(float value)
	{
		return default(float);
	}

	[Token(Token = "0x600036F")]
	[Address(RVA = "0x100556C", Offset = "0x100556C", VA = "0x100556C")]
	public LightFlicker()
	{
	}
}
[Token(Token = "0x2000025")]
public class UniqueRandomizeAnimInt : StateMachineBehaviour
{
	[Token(Token = "0x400016D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private string m_parameter;

	[Token(Token = "0x400016E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private int m_minValue;

	[Token(Token = "0x400016F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	private int m_maxValue;

	[Token(Token = "0x4000170")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private int m_parameterHash;

	[Token(Token = "0x4000171")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private int m_randomInt;

	[Token(Token = "0x4000172")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private int m_lastint;

	[Token(Token = "0x6000370")]
	[Address(RVA = "0x1005594", Offset = "0x1005594", VA = "0x1005594", Slot = "18")]
	protected virtual void Awake()
	{
	}

	[Token(Token = "0x6000371")]
	[Address(RVA = "0x10055B4", Offset = "0x10055B4", VA = "0x10055B4", Slot = "4")]
	public override void OnStateEnter(Animator animator, AnimatorStateInfo stateInfo, int layerIndex)
	{
	}

	[Token(Token = "0x6000372")]
	[Address(RVA = "0x1005650", Offset = "0x1005650", VA = "0x1005650")]
	public UniqueRandomizeAnimInt()
	{
	}
}
[Token(Token = "0x2000026")]
public class Wobble : MonoBehaviour
{
	[Token(Token = "0x4000173")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Renderer rend;

	[Token(Token = "0x4000174")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Vector3 lastPos;

	[Token(Token = "0x4000175")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private Vector3 velocity;

	[Token(Token = "0x4000176")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Vector3 lastRot;

	[Token(Token = "0x4000177")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private Vector3 angularVelocity;

	[Token(Token = "0x4000178")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float MaxWobble;

	[Token(Token = "0x4000179")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public float WobbleSpeed;

	[Token(Token = "0x400017A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public float Recovery;

	[Token(Token = "0x400017B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private float wobbleAmountX;

	[Token(Token = "0x400017C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private float wobbleAmountZ;

	[Token(Token = "0x400017D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private float wobbleAmountToAddX;

	[Token(Token = "0x400017E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private float wobbleAmountToAddZ;

	[Token(Token = "0x400017F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private float pulse;

	[Token(Token = "0x4000180")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private float time;

	[Token(Token = "0x6000373")]
	[Address(RVA = "0x10056B0", Offset = "0x10056B0", VA = "0x10056B0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000374")]
	[Address(RVA = "0x1005708", Offset = "0x1005708", VA = "0x1005708")]
	private void Update()
	{
	}

	[Token(Token = "0x6000375")]
	[Address(RVA = "0x10059B8", Offset = "0x10059B8", VA = "0x10059B8")]
	public Wobble()
	{
	}
}
[Token(Token = "0x2000027")]
public class TextureAssigner : MonoBehaviour
{
	[Token(Token = "0x6000376")]
	[Address(RVA = "0x10059DC", Offset = "0x10059DC", VA = "0x10059DC")]
	public TextureAssigner()
	{
	}
}
[Token(Token = "0x2000028")]
public class NintendoIO : MonoBehaviour
{
	[Token(Token = "0x4000181")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static bool isInitialised;

	[Token(Token = "0x1700002D")]
	public static NintendoIO Instance
	{
		[Token(Token = "0x6000377")]
		[Address(RVA = "0x10059E4", Offset = "0x10059E4", VA = "0x10059E4")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x6000378")]
		[Address(RVA = "0x1005A2C", Offset = "0x1005A2C", VA = "0x1005A2C")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x6000379")]
	[Address(RVA = "0x1005A7C", Offset = "0x1005A7C", VA = "0x1005A7C")]
	public NintendoIO()
	{
	}
}
[Token(Token = "0x2000029")]
public class AddressablesBootLoader : MonoBehaviour
{
	[Token(Token = "0x4000183")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private string m_SceneToLoad;

	[Token(Token = "0x4000184")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private AsyncSceneLoader m_SceneLoader;

	[Token(Token = "0x4000185")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float m_TimeAtLoadStart;

	[Token(Token = "0x600037A")]
	[Address(RVA = "0x1005A84", Offset = "0x1005A84", VA = "0x1005A84")]
	private void Start()
	{
	}

	[Token(Token = "0x600037B")]
	[Address(RVA = "0x1005BAC", Offset = "0x1005BAC", VA = "0x1005BAC")]
	private void OnLoadComplete(Scene scene)
	{
	}

	[Token(Token = "0x600037C")]
	[Address(RVA = "0x1005BB0", Offset = "0x1005BB0", VA = "0x1005BB0")]
	public AddressablesBootLoader()
	{
	}
}
[Serializable]
[Token(Token = "0x200002A")]
public class AudioWrap
{
	[Token(Token = "0x4000186")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[SerializeField]
	public EventReference jumpscareAudioEvent;

	[Token(Token = "0x4000187")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject gameObject;

	[Token(Token = "0x4000188")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool isDynamic;

	[Token(Token = "0x600037D")]
	[Address(RVA = "0x1005C08", Offset = "0x1005C08", VA = "0x1005C08")]
	public void PlayEvent()
	{
	}

	[Token(Token = "0x600037E")]
	[Address(RVA = "0x1005E08", Offset = "0x1005E08", VA = "0x1005E08")]
	public AudioWrap()
	{
	}
}
[Token(Token = "0x200002B")]
public class AnimatedJumpscareAudio : MonoBehaviour
{
	[Token(Token = "0x4000189")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private List<AudioWrap> events;

	[Token(Token = "0x600037F")]
	[Address(RVA = "0x1005E10", Offset = "0x1005E10", VA = "0x1005E10")]
	public void PlayFirstEvent()
	{
	}

	[Token(Token = "0x6000380")]
	[Address(RVA = "0x1005E6C", Offset = "0x1005E6C", VA = "0x1005E6C")]
	public void PlaySecondEvent()
	{
	}

	[Token(Token = "0x6000381")]
	[Address(RVA = "0x1005EC8", Offset = "0x1005EC8", VA = "0x1005EC8")]
	public void PlayThirdEvent()
	{
	}

	[Token(Token = "0x6000382")]
	[Address(RVA = "0x1005F24", Offset = "0x1005F24", VA = "0x1005F24")]
	public void PlayFourthEvent()
	{
	}

	[Token(Token = "0x6000383")]
	[Address(RVA = "0x1005F80", Offset = "0x1005F80", VA = "0x1005F80")]
	public AnimatedJumpscareAudio()
	{
	}
}
[Token(Token = "0x200002C")]
public enum AUDIO_MATERIAL
{
	[Token(Token = "0x400018B")]
	CARPET,
	[Token(Token = "0x400018C")]
	WOOD,
	[Token(Token = "0x400018D")]
	TILE,
	[Token(Token = "0x400018E")]
	CONCRETE,
	[Token(Token = "0x400018F")]
	VINYL,
	[Token(Token = "0x4000190")]
	PUDDLE,
	[Token(Token = "0x4000191")]
	CARDBOARD,
	[Token(Token = "0x4000192")]
	TRASH,
	[Token(Token = "0x4000193")]
	METAL,
	[Token(Token = "0x4000194")]
	INTERACTABLE,
	[Token(Token = "0x4000195")]
	COUNT
}
[Token(Token = "0x200002D")]
public class AudioEventPlayer : MonoBehaviour
{
	[Token(Token = "0x4000196")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	public EventReference _fmodEventReference;

	[Token(Token = "0x6000384")]
	[Address(RVA = "0x1006008", Offset = "0x1006008", VA = "0x1006008")]
	public void Play()
	{
	}

	[Token(Token = "0x6000385")]
	[Address(RVA = "0x1006110", Offset = "0x1006110", VA = "0x1006110")]
	public AudioEventPlayer()
	{
	}
}
[Token(Token = "0x200002E")]
public class AudioMaterial : MonoBehaviour
{
	[Token(Token = "0x4000197")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AUDIO_MATERIAL AudioMaterialType;

	[Token(Token = "0x6000386")]
	[Address(RVA = "0x1006118", Offset = "0x1006118", VA = "0x1006118")]
	public AudioMaterial()
	{
	}
}
[Token(Token = "0x200002F")]
public class CartridgeMachine : MonoBehaviour
{
	[Token(Token = "0x2000030")]
	public enum CartStatus
	{
		[Token(Token = "0x40001A2")]
		EMPTY,
		[Token(Token = "0x40001A3")]
		QUEUED,
		[Token(Token = "0x40001A4")]
		PLAYING,
		[Token(Token = "0x40001A5")]
		PAUSED
	}

	[Token(Token = "0x2000031")]
	public enum JingleTitles
	{
		[Token(Token = "0x40001A7")]
		None,
		[Token(Token = "0x40001A8")]
		StationID_1,
		[Token(Token = "0x40001A9")]
		StationID_2,
		[Token(Token = "0x40001AA")]
		StatioNID_3,
		[Token(Token = "0x40001AB")]
		Sting_1,
		[Token(Token = "0x40001AC")]
		Sting_2,
		[Token(Token = "0x40001AD")]
		Sting_3,
		[Token(Token = "0x40001AE")]
		News_Intro,
		[Token(Token = "0x40001AF")]
		News_Outro,
		[Token(Token = "0x40001B0")]
		News_Sponsor_Ad
	}

	[Token(Token = "0x4000198")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	[EventRef]
	private string cartSource;

	[Token(Token = "0x4000199")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[Header("CARTRIDGE MACHINE CONTROLS")]
	[SerializeField]
	private JingleTitles loadedJingle;

	[Token(Token = "0x400019A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	private CartStatus machineStatus;

	[Token(Token = "0x400019B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[Range(0f, 1f)]
	[SerializeField]
	private float machineVolume;

	[Token(Token = "0x400019C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public bool playing;

	[Token(Token = "0x400019D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private JingleTitles oldLoadedJingle;

	[Token(Token = "0x400019E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private CartStatus oldMachineStatus;

	[Token(Token = "0x400019F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[EventRef]
	private EventInstance cartSoundEvent;

	[Token(Token = "0x40001A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	[Range(0f, 1f)]
	private float deskLevel;

	[Token(Token = "0x6000387")]
	[Address(RVA = "0x1006120", Offset = "0x1006120", VA = "0x1006120")]
	private void Start()
	{
	}

	[Token(Token = "0x6000388")]
	[Address(RVA = "0x1006154", Offset = "0x1006154", VA = "0x1006154")]
	private void Update()
	{
	}

	[Token(Token = "0x6000389")]
	[Address(RVA = "0x10062E0", Offset = "0x10062E0", VA = "0x10062E0")]
	public void pause()
	{
	}

	[Token(Token = "0x600038A")]
	[Address(RVA = "0x1006314", Offset = "0x1006314", VA = "0x1006314")]
	public void resume()
	{
	}

	[Token(Token = "0x600038B")]
	[Address(RVA = "0x1006348", Offset = "0x1006348", VA = "0x1006348")]
	public void cartInserted(JingleTitles newJing)
	{
	}

	[Token(Token = "0x600038C")]
	[Address(RVA = "0x1006354", Offset = "0x1006354", VA = "0x1006354")]
	public void cartRemoved()
	{
	}

	[Token(Token = "0x600038D")]
	[Address(RVA = "0x100635C", Offset = "0x100635C", VA = "0x100635C")]
	public void playButtonPressed()
	{
	}

	[Token(Token = "0x600038E")]
	[Address(RVA = "0x1006374", Offset = "0x1006374", VA = "0x1006374")]
	public void stopButtonPressed()
	{
	}

	[Token(Token = "0x600038F")]
	[Address(RVA = "0x100638C", Offset = "0x100638C", VA = "0x100638C")]
	public void setStatus(CartStatus newStatus)
	{
	}

	[Token(Token = "0x6000390")]
	[Address(RVA = "0x1006394", Offset = "0x1006394", VA = "0x1006394")]
	public CartStatus getStatus()
	{
		return default(CartStatus);
	}

	[Token(Token = "0x6000391")]
	[Address(RVA = "0x100639C", Offset = "0x100639C", VA = "0x100639C")]
	public void setVolume(float newVolume)
	{
	}

	[Token(Token = "0x6000392")]
	[Address(RVA = "0x10063A4", Offset = "0x10063A4", VA = "0x10063A4")]
	public void setDeskLevel(float newLevel)
	{
	}

	[Token(Token = "0x6000393")]
	[Address(RVA = "0x10063AC", Offset = "0x10063AC", VA = "0x10063AC")]
	public bool isPlaying()
	{
		return default(bool);
	}

	[Token(Token = "0x6000394")]
	[Address(RVA = "0x1006148", Offset = "0x1006148", VA = "0x1006148")]
	private void storeOldValues()
	{
	}

	[Token(Token = "0x6000395")]
	[Address(RVA = "0x10063B4", Offset = "0x10063B4", VA = "0x10063B4")]
	public CartridgeMachine()
	{
	}
}
[Token(Token = "0x2000032")]
public class CollisionPropAudio : MonoBehaviour
{
	[Token(Token = "0x40001B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	public EventReference _fmodEventReference;

	[Token(Token = "0x6000396")]
	[Address(RVA = "0x10063BC", Offset = "0x10063BC", VA = "0x10063BC")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000397")]
	[Address(RVA = "0x100657C", Offset = "0x100657C", VA = "0x100657C")]
	public CollisionPropAudio()
	{
	}
}
[Token(Token = "0x2000033")]
public class DeskAudioManager : MonoBehaviour
{
	[Token(Token = "0x2000034")]
	[CompilerGenerated]
	private sealed class <GetChannelGroupDesk>d__26 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40001C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40001C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40001C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public DeskAudioManager <>4__this;

		[Token(Token = "0x1700002F")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60003A4")]
			[Address(RVA = "0x1006CE4", Offset = "0x1006CE4", VA = "0x1006CE4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000030")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60003A6")]
			[Address(RVA = "0x1006D2C", Offset = "0x1006D2C", VA = "0x1006D2C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60003A1")]
		[Address(RVA = "0x1006A08", Offset = "0x1006A08", VA = "0x1006A08")]
		[DebuggerHidden]
		public <GetChannelGroupDesk>d__26(int <>1__state)
		{
		}

		[Token(Token = "0x60003A2")]
		[Address(RVA = "0x1006B6C", Offset = "0x1006B6C", VA = "0x1006B6C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60003A3")]
		[Address(RVA = "0x1006B70", Offset = "0x1006B70", VA = "0x1006B70", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60003A5")]
		[Address(RVA = "0x1006CEC", Offset = "0x1006CEC", VA = "0x1006CEC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40001B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TwinDecks twinDecks;

	[Token(Token = "0x40001B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public CartridgeMachine cartMachine;

	[Token(Token = "0x40001B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public PhoneLines phoneLines;

	[Token(Token = "0x40001B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public DeskMicrophone deskMic;

	[Token(Token = "0x40001B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[EventRef]
	[SerializeField]
	private string deskMixSource;

	[Token(Token = "0x40001B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	[Header("MIXER CONTROLS")]
	[Range(0f, 1f)]
	private float twinDecksLevel;

	[Token(Token = "0x40001B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[Range(0f, 1f)]
	[SerializeField]
	private float cartMachineLevel;

	[Token(Token = "0x40001BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[Range(0f, 1f)]
	[SerializeField]
	private float phoneLinesLevel;

	[Token(Token = "0x40001BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[SerializeField]
	[Range(0f, 1f)]
	private float deskMicLevel;

	[Token(Token = "0x40001BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	[Range(0f, 1f)]
	private float masterVolume;

	[Token(Token = "0x40001BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	[Header("SWITCHES")]
	[SerializeField]
	private bool CartMutesMusic;

	[Token(Token = "0x40001BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x55")]
	[SerializeField]
	private bool MicReducesMusic;

	[Token(Token = "0x40001BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[Range(0f, 1f)]
	[Header("OUTPUT LEVEL")]
	public float VUMeterDesk;

	[Token(Token = "0x40001C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[EventRef]
	private EventInstance deskMixOutput;

	[Token(Token = "0x40001C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private FMOD.Studio.System system;

	[Token(Token = "0x40001C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private DSP_METERING_INFO outputDesk;

	[Token(Token = "0x40001C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private ChannelGroup channelDesk;

	[Token(Token = "0x40001C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private DSP dspDesk;

	[Token(Token = "0x40001C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private bool meteringEnabledDesk;

	[Token(Token = "0x40001C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private GameObject needle_c;

	[Token(Token = "0x1700002E")]
	public static DeskAudioManager Instance
	{
		[Token(Token = "0x6000398")]
		[Address(RVA = "0x1006584", Offset = "0x1006584", VA = "0x1006584")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x6000399")]
		[Address(RVA = "0x10065CC", Offset = "0x10065CC", VA = "0x10065CC")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x600039A")]
	[Address(RVA = "0x1006624", Offset = "0x1006624", VA = "0x1006624")]
	private void Awake()
	{
	}

	[Token(Token = "0x600039B")]
	[Address(RVA = "0x1006848", Offset = "0x1006848", VA = "0x1006848")]
	private void Update()
	{
	}

	[Token(Token = "0x600039C")]
	[Address(RVA = "0x10067D4", Offset = "0x10067D4", VA = "0x10067D4")]
	[IteratorStateMachine(typeof(<GetChannelGroupDesk>d__26))]
	private IEnumerator GetChannelGroupDesk()
	{
		return null;
	}

	[Token(Token = "0x600039D")]
	[Address(RVA = "0x1006A30", Offset = "0x1006A30", VA = "0x1006A30")]
	public void pauseAllDevices()
	{
	}

	[Token(Token = "0x600039E")]
	[Address(RVA = "0x1006AC8", Offset = "0x1006AC8", VA = "0x1006AC8")]
	public void resumeAllDevices()
	{
	}

	[Token(Token = "0x600039F")]
	[Address(RVA = "0x1006B60", Offset = "0x1006B60", VA = "0x1006B60")]
	public void initAllDevices()
	{
	}

	[Token(Token = "0x60003A0")]
	[Address(RVA = "0x1006B64", Offset = "0x1006B64", VA = "0x1006B64")]
	public DeskAudioManager()
	{
	}
}
[Token(Token = "0x2000035")]
public class DeskMicrophone : MonoBehaviour
{
	[Token(Token = "0x2000036")]
	public enum MicStatus
	{
		[Token(Token = "0x40001D4")]
		OFF,
		[Token(Token = "0x40001D5")]
		PLAYING,
		[Token(Token = "0x40001D6")]
		PAUSED
	}

	[Token(Token = "0x2000037")]
	public enum MicLines
	{
		[Token(Token = "0x40001D8")]
		None,
		[Token(Token = "0x40001D9")]
		ThanksHank
	}

	[Token(Token = "0x40001CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	[EventRef]
	private string MicSource;

	[Token(Token = "0x40001CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	[Header("DESK MIC CONTROLS")]
	private MicLines chosenLine;

	[Token(Token = "0x40001CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	private MicStatus micStatus;

	[Token(Token = "0x40001CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	[Range(0f, 1f)]
	private float micVolume;

	[Token(Token = "0x40001CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public bool playing;

	[Token(Token = "0x40001CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private MicLines oldChosenLine;

	[Token(Token = "0x40001D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private MicStatus oldMicStatus;

	[Token(Token = "0x40001D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[EventRef]
	private EventInstance micSoundEvent;

	[Token(Token = "0x40001D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[Range(0f, 1f)]
	[SerializeField]
	private float deskLevel;

	[Token(Token = "0x60003A7")]
	[Address(RVA = "0x1006D34", Offset = "0x1006D34", VA = "0x1006D34")]
	private void Start()
	{
	}

	[Token(Token = "0x60003A8")]
	[Address(RVA = "0x1006D68", Offset = "0x1006D68", VA = "0x1006D68")]
	private void Update()
	{
	}

	[Token(Token = "0x60003A9")]
	[Address(RVA = "0x1006EE0", Offset = "0x1006EE0", VA = "0x1006EE0")]
	public void pause()
	{
	}

	[Token(Token = "0x60003AA")]
	[Address(RVA = "0x1006F14", Offset = "0x1006F14", VA = "0x1006F14")]
	public void resume()
	{
	}

	[Token(Token = "0x60003AB")]
	[Address(RVA = "0x1006F48", Offset = "0x1006F48", VA = "0x1006F48")]
	public bool isPlaying()
	{
		return default(bool);
	}

	[Token(Token = "0x60003AC")]
	[Address(RVA = "0x1006F50", Offset = "0x1006F50", VA = "0x1006F50")]
	public void setDeskLevel(float newLevel)
	{
	}

	[Token(Token = "0x60003AD")]
	[Address(RVA = "0x1006F58", Offset = "0x1006F58", VA = "0x1006F58")]
	public void setVolume(float newVolume)
	{
	}

	[Token(Token = "0x60003AE")]
	[Address(RVA = "0x1006D5C", Offset = "0x1006D5C", VA = "0x1006D5C")]
	private void storeOldValues()
	{
	}

	[Token(Token = "0x60003AF")]
	[Address(RVA = "0x1006F60", Offset = "0x1006F60", VA = "0x1006F60")]
	public DeskMicrophone()
	{
	}
}
[Token(Token = "0x2000038")]
public class FirstPersonOcclusion : MonoBehaviour
{
	[Token(Token = "0x40001DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Header("FMOD Event")]
	private EventInstance Audio;

	[Token(Token = "0x40001DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private EventDescription AudioDes;

	[Token(Token = "0x40001DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private StudioListener Listener;

	[Token(Token = "0x40001DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private PLAYBACK_STATE pb;

	[Token(Token = "0x40001DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[SerializeField]
	private bool AutoPlay;

	[Token(Token = "0x40001DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x35")]
	public bool DrawDebugLines;

	[Token(Token = "0x40001E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[Range(0.1f, 10f)]
	[SerializeField]
	[Header("Projector Array")]
	private float PADistanceFromSound;

	[Token(Token = "0x40001E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[SerializeField]
	[Range(0.1f, 10f)]
	private float PARadius;

	[Token(Token = "0x40001E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[Range(1f, 10f)]
	[SerializeField]
	private int PASteps;

	[Token(Token = "0x40001E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[Header("Obstacle Thickness Calculation (optional)")]
	[SerializeField]
	private bool enableThicknessCalculation;

	[Token(Token = "0x40001E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	[Range(0.001f, 1f)]
	private float thicknessToBlockCompletely;

	[Token(Token = "0x40001E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float rayCount;

	[Token(Token = "0x40001E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float directHits;

	[Token(Token = "0x40001E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public float bounceHits;

	[Token(Token = "0x40001E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private LayerMask OcclusionLayer;

	[Token(Token = "0x40001E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public bool OcclusionOverride;

	[Token(Token = "0x40001EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[Range(0f, 1f)]
	public float OcclusionVal;

	[Token(Token = "0x40001EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	[Range(0f, 1f)]
	public float OcclusionValTarget;

	[Token(Token = "0x40001EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private bool AudioIsVirtual;

	[Token(Token = "0x40001ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private float MaxDistance;

	[Token(Token = "0x40001EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private float ListenerDistance;

	[Token(Token = "0x40001EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private float lineCastHitCount;

	[Token(Token = "0x40001F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Color colour;

	[Token(Token = "0x40001F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private Vector3 myForward;

	[Token(Token = "0x40001F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private Vector3 myRight;

	[Token(Token = "0x40001F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private Vector3 myUp;

	[Token(Token = "0x40001F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private Vector3 projectorOrigin;

	[Token(Token = "0x40001F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private GameObject myGameObject;

	[Token(Token = "0x40001F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public FirstPersonOcclusion prevInList;

	[Token(Token = "0x40001F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public FirstPersonOcclusion nextInList;

	[Token(Token = "0x60003B0")]
	[Address(RVA = "0x1006F68", Offset = "0x1006F68", VA = "0x1006F68")]
	private void Start()
	{
	}

	[Token(Token = "0x60003B1")]
	[Address(RVA = "0x1007120", Offset = "0x1007120", VA = "0x1007120")]
	public void Play()
	{
	}

	[Token(Token = "0x60003B2")]
	[Address(RVA = "0x100712C", Offset = "0x100712C", VA = "0x100712C")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60003B3")]
	[Address(RVA = "0x10071A8", Offset = "0x10071A8", VA = "0x10071A8")]
	public void calculateOcclusion()
	{
	}

	[Token(Token = "0x60003B4")]
	[Address(RVA = "0x1007A28", Offset = "0x1007A28", VA = "0x1007A28")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x60003B5")]
	[Address(RVA = "0x1007B84", Offset = "0x1007B84", VA = "0x1007B84")]
	public FirstPersonOcclusion()
	{
	}
}
[Token(Token = "0x2000039")]
public class FootSteps : MonoBehaviour
{
	[Token(Token = "0x40001F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private float stepDistance;

	[Token(Token = "0x40001F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private AUDIO_MATERIAL currentTerrain;

	[Token(Token = "0x40001FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private EventReference _footstepEventReference;

	[Token(Token = "0x40001FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private PARAMETER_DESCRIPTION _materialParameterDescription;

	[Token(Token = "0x17000031")]
	public float stepIntervalDistance
	{
		[Token(Token = "0x60003B6")]
		[Address(RVA = "0x1007BAC", Offset = "0x1007BAC", VA = "0x1007BAC")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x60003B7")]
	[Address(RVA = "0x1007BB4", Offset = "0x1007BB4", VA = "0x1007BB4")]
	private void Awake()
	{
	}

	[Token(Token = "0x60003B8")]
	[Address(RVA = "0x1007CE4", Offset = "0x1007CE4", VA = "0x1007CE4")]
	public void FootStepEvent()
	{
	}

	[Token(Token = "0x60003B9")]
	[Address(RVA = "0x1007DC4", Offset = "0x1007DC4", VA = "0x1007DC4")]
	public void FootStepEvent(Vector3 location, Vector3 direction, float maxDist)
	{
	}

	[Token(Token = "0x60003BA")]
	[Address(RVA = "0x10080E0", Offset = "0x10080E0", VA = "0x10080E0")]
	public FootSteps()
	{
	}
}
[Token(Token = "0x200003A")]
public class PhoneLines : MonoBehaviour
{
	[Token(Token = "0x40001FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float phoneVolume;

	[Token(Token = "0x60003BB")]
	[Address(RVA = "0x10080F0", Offset = "0x10080F0", VA = "0x10080F0")]
	private void Start()
	{
	}

	[Token(Token = "0x60003BC")]
	[Address(RVA = "0x10080F4", Offset = "0x10080F4", VA = "0x10080F4")]
	private void Update()
	{
	}

	[Token(Token = "0x60003BD")]
	[Address(RVA = "0x10080F8", Offset = "0x10080F8", VA = "0x10080F8")]
	public void setVolume(float newVolume)
	{
	}

	[Token(Token = "0x60003BE")]
	[Address(RVA = "0x1008100", Offset = "0x1008100", VA = "0x1008100")]
	public PhoneLines()
	{
	}
}
[Token(Token = "0x200003B")]
public class PhysicsAudio : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x200003C")]
	public class JumpscareAudio
	{
		[Token(Token = "0x4000202")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[Tooltip("Will trigger a 2D event on the first impact of the object and then disable")]
		public bool isJumpscare;

		[Token(Token = "0x4000203")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[SerializeField]
		public EventReference _jumpscareEventReference;

		[Token(Token = "0x60003C2")]
		[Address(RVA = "0x10086BC", Offset = "0x10086BC", VA = "0x10086BC")]
		public JumpscareAudio()
		{
		}
	}

	[Token(Token = "0x40001FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	public EventReference _impactEventReference;

	[Token(Token = "0x40001FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	[Tooltip("Bigger number = quieter impact sounds")]
	private float impactScale;

	[Token(Token = "0x40001FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private PARAMETER_DESCRIPTION _impactParameterDescription;

	[Token(Token = "0x4000200")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private PARAMETER_DESCRIPTION _materialParameterDescription;

	[Token(Token = "0x4000201")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public JumpscareAudio jumpscareAudio;

	[Token(Token = "0x60003BF")]
	[Address(RVA = "0x1008108", Offset = "0x1008108", VA = "0x1008108")]
	private void Awake()
	{
	}

	[Token(Token = "0x60003C0")]
	[Address(RVA = "0x1008278", Offset = "0x1008278", VA = "0x1008278")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x60003C1")]
	[Address(RVA = "0x10086AC", Offset = "0x10086AC", VA = "0x10086AC")]
	public PhysicsAudio()
	{
	}
}
[Token(Token = "0x200003D")]
public class RoomAmbienceZone : MonoBehaviour
{
	[Token(Token = "0x4000204")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private bool playAmbientSound;

	[Token(Token = "0x4000205")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	[EventRef]
	private string ambientTrackName;

	[Token(Token = "0x4000206")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[EventRef]
	private EventInstance ambientTrack;

	[Token(Token = "0x4000207")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private bool playSnapshot;

	[Token(Token = "0x4000208")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[EventRef]
	[SerializeField]
	private string snapshotName;

	[Token(Token = "0x4000209")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[EventRef]
	private EventInstance snapshot;

	[Token(Token = "0x60003C3")]
	[Address(RVA = "0x10086C4", Offset = "0x10086C4", VA = "0x10086C4")]
	private void Start()
	{
	}

	[Token(Token = "0x60003C4")]
	[Address(RVA = "0x10087BC", Offset = "0x10087BC", VA = "0x10087BC")]
	private void OnTriggerEnter()
	{
	}

	[Token(Token = "0x60003C5")]
	[Address(RVA = "0x1008818", Offset = "0x1008818", VA = "0x1008818")]
	private void OnTriggerExit()
	{
	}

	[Token(Token = "0x60003C6")]
	[Address(RVA = "0x1008890", Offset = "0x1008890", VA = "0x1008890")]
	public RoomAmbienceZone()
	{
	}
}
[Token(Token = "0x200003E")]
public class SoundDebugVisual : MonoBehaviour
{
	[Token(Token = "0x400020A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private int countDown;

	[Token(Token = "0x60003C7")]
	[Address(RVA = "0x1008898", Offset = "0x1008898", VA = "0x1008898")]
	private void Start()
	{
	}

	[Token(Token = "0x60003C8")]
	[Address(RVA = "0x10088A4", Offset = "0x10088A4", VA = "0x10088A4")]
	private void Update()
	{
	}

	[Token(Token = "0x60003C9")]
	[Address(RVA = "0x1008930", Offset = "0x1008930", VA = "0x1008930")]
	public SoundDebugVisual()
	{
	}
}
[Token(Token = "0x200003F")]
public class TwinDecks : MonoBehaviour
{
	[Token(Token = "0x2000040")]
	public enum DeckStatus
	{
		[Token(Token = "0x400022F")]
		EMPTY,
		[Token(Token = "0x4000230")]
		QUEUED,
		[Token(Token = "0x4000231")]
		PLAYING,
		[Token(Token = "0x4000232")]
		PAUSED
	}

	[Token(Token = "0x2000041")]
	public enum DeckID
	{
		[Token(Token = "0x4000234")]
		DECK_A,
		[Token(Token = "0x4000235")]
		DECK_B
	}

	[Token(Token = "0x2000042")]
	public enum SongTitles
	{
		[Token(Token = "0x4000237")]
		None,
		[Token(Token = "0x4000238")]
		SomebodyToLove,
		[Token(Token = "0x4000239")]
		CrocodileRock,
		[Token(Token = "0x400023A")]
		OneWayOrAnother,
		[Token(Token = "0x400023B")]
		GetItOn,
		[Token(Token = "0x400023C")]
		SchoolsOut,
		[Token(Token = "0x400023D")]
		DevilGateDrive,
		[Token(Token = "0x400023E")]
		IDontLikeMondays,
		[Token(Token = "0x400023F")]
		CumOnFeelTheNoize,
		[Token(Token = "0x4000240")]
		TigerFeet,
		[Token(Token = "0x4000241")]
		WhateverYouWant,
		[Token(Token = "0x4000242")]
		TheBoysAreBackInTown,
		[Token(Token = "0x4000243")]
		MySharona,
		[Token(Token = "0x4000244")]
		BlackBetty,
		[Token(Token = "0x4000245")]
		YouAintHeardNothingYet,
		[Token(Token = "0x4000246")]
		AllRightNow,
		[Token(Token = "0x4000247")]
		IWasMadeForLovinYou,
		[Token(Token = "0x4000248")]
		MoreThanAFeeling,
		[Token(Token = "0x4000249")]
		ColdAsIce,
		[Token(Token = "0x400024A")]
		ThisTownAinBigEnoughForTheBothOfUs,
		[Token(Token = "0x400024B")]
		Waterloo
	}

	[Token(Token = "0x2000043")]
	[CompilerGenerated]
	private sealed class <GetChannelGroupA>d__54 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400024C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400024D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400024E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TwinDecks <>4__this;

		[Token(Token = "0x17000032")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60003E0")]
			[Address(RVA = "0x1009608", Offset = "0x1009608", VA = "0x1009608", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000033")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60003E2")]
			[Address(RVA = "0x1009650", Offset = "0x1009650", VA = "0x1009650", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60003DD")]
		[Address(RVA = "0x1009430", Offset = "0x1009430", VA = "0x1009430")]
		[DebuggerHidden]
		public <GetChannelGroupA>d__54(int <>1__state)
		{
		}

		[Token(Token = "0x60003DE")]
		[Address(RVA = "0x1009490", Offset = "0x1009490", VA = "0x1009490", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60003DF")]
		[Address(RVA = "0x1009494", Offset = "0x1009494", VA = "0x1009494", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60003E1")]
		[Address(RVA = "0x1009610", Offset = "0x1009610", VA = "0x1009610", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000044")]
	[CompilerGenerated]
	private sealed class <GetChannelGroupB>d__55 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400024F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000250")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000251")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TwinDecks <>4__this;

		[Token(Token = "0x17000034")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60003E6")]
			[Address(RVA = "0x10097B0", Offset = "0x10097B0", VA = "0x10097B0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000035")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60003E8")]
			[Address(RVA = "0x10097F8", Offset = "0x10097F8", VA = "0x10097F8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60003E3")]
		[Address(RVA = "0x1009458", Offset = "0x1009458", VA = "0x1009458")]
		[DebuggerHidden]
		public <GetChannelGroupB>d__55(int <>1__state)
		{
		}

		[Token(Token = "0x60003E4")]
		[Address(RVA = "0x1009658", Offset = "0x1009658", VA = "0x1009658", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60003E5")]
		[Address(RVA = "0x100965C", Offset = "0x100965C", VA = "0x100965C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60003E7")]
		[Address(RVA = "0x10097B8", Offset = "0x10097B8", VA = "0x10097B8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400020B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[EventRef]
	[SerializeField]
	private string deckAsource;

	[Token(Token = "0x400020C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[EventRef]
	[SerializeField]
	private string deckBsource;

	[Token(Token = "0x400020D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[Header("DECK 'A' CONTROLS")]
	[SerializeField]
	private SongTitles deckSongA;

	[Token(Token = "0x400020E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[SerializeField]
	private DeckStatus deckStatusA;

	[Token(Token = "0x400020F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[Range(0f, 1f)]
	[SerializeField]
	private float deckVolumeA;

	[Token(Token = "0x4000210")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[SerializeField]
	[Header("DECK 'B' CONTROLS")]
	private SongTitles deckSongB;

	[Token(Token = "0x4000211")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private DeckStatus deckStatusB;

	[Token(Token = "0x4000212")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[Range(0f, 1f)]
	[SerializeField]
	private float deckVolumeB;

	[Token(Token = "0x4000213")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	[Range(0f, 1f)]
	[Header("MIXER")]
	private float mixerAToB;

	[Token(Token = "0x4000214")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public bool playing;

	[Token(Token = "0x4000215")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	[Range(0f, 1f)]
	private float deskLevel;

	[Token(Token = "0x4000216")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private GameObject turntable_a;

	[Token(Token = "0x4000217")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private GameObject turntable_b;

	[Token(Token = "0x4000218")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private GameObject record_a;

	[Token(Token = "0x4000219")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private GameObject record_b;

	[Token(Token = "0x400021A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[Range(0f, 1f)]
	[Header("OUTPUT LEVELS")]
	public float VUMeterA;

	[Token(Token = "0x400021B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	[Range(0f, 1f)]
	public float VUMeterB;

	[Token(Token = "0x400021C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private SongTitles oldSongA;

	[Token(Token = "0x400021D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private SongTitles oldSongB;

	[Token(Token = "0x400021E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private float oldVolumeA;

	[Token(Token = "0x400021F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private float oldVolumeB;

	[Token(Token = "0x4000220")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private float oldMixer;

	[Token(Token = "0x4000221")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private DeckStatus oldStatusA;

	[Token(Token = "0x4000222")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private DeckStatus oldStatusB;

	[Token(Token = "0x4000223")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[EventRef]
	private EventInstance deckSoundEventA;

	[Token(Token = "0x4000224")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[EventRef]
	private EventInstance deckSoundEventB;

	[Token(Token = "0x4000225")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private FMOD.Studio.System system;

	[Token(Token = "0x4000226")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private DSP_METERING_INFO outputA;

	[Token(Token = "0x4000227")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private DSP_METERING_INFO outputB;

	[Token(Token = "0x4000228")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private ChannelGroup channelA;

	[Token(Token = "0x4000229")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private ChannelGroup channelB;

	[Token(Token = "0x400022A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private DSP dspA;

	[Token(Token = "0x400022B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	private DSP dspB;

	[Token(Token = "0x400022C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	private bool meteringEnabledA;

	[Token(Token = "0x400022D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x111")]
	private bool meteringEnabledB;

	[Token(Token = "0x60003CA")]
	[Address(RVA = "0x1008938", Offset = "0x1008938", VA = "0x1008938")]
	private void Start()
	{
	}

	[Token(Token = "0x60003CB")]
	[Address(RVA = "0x1008CEC", Offset = "0x1008CEC", VA = "0x1008CEC")]
	private void Update()
	{
	}

	[Token(Token = "0x60003CC")]
	[Address(RVA = "0x1008CC4", Offset = "0x1008CC4", VA = "0x1008CC4")]
	private void storeOldvalues()
	{
	}

	[Token(Token = "0x60003CD")]
	[Address(RVA = "0x10092C0", Offset = "0x10092C0", VA = "0x10092C0")]
	public void SetDeckVolume(DeckID deck, float newVolume)
	{
	}

	[Token(Token = "0x60003CE")]
	[Address(RVA = "0x10092DC", Offset = "0x10092DC", VA = "0x10092DC")]
	public void SetDeckSong(DeckID deck, SongTitles newSong)
	{
	}

	[Token(Token = "0x60003CF")]
	[Address(RVA = "0x10092F8", Offset = "0x10092F8", VA = "0x10092F8")]
	public void SetDeckStatus(DeckID deck, DeckStatus newStatus)
	{
	}

	[Token(Token = "0x60003D0")]
	[Address(RVA = "0x1009344", Offset = "0x1009344", VA = "0x1009344")]
	public void SetDeckMix(float mix)
	{
	}

	[Token(Token = "0x60003D1")]
	[Address(RVA = "0x1006A9C", Offset = "0x1006A9C", VA = "0x1006A9C")]
	public void pause()
	{
	}

	[Token(Token = "0x60003D2")]
	[Address(RVA = "0x1006B34", Offset = "0x1006B34", VA = "0x1006B34")]
	public void resume()
	{
	}

	[Token(Token = "0x60003D3")]
	[Address(RVA = "0x100934C", Offset = "0x100934C", VA = "0x100934C")]
	public void setDeskLevel(float newLevel)
	{
	}

	[Token(Token = "0x60003D4")]
	[Address(RVA = "0x1009354", Offset = "0x1009354", VA = "0x1009354")]
	public bool isPlaying()
	{
		return default(bool);
	}

	[Token(Token = "0x60003D5")]
	[Address(RVA = "0x100935C", Offset = "0x100935C", VA = "0x100935C")]
	public void recordInserted(DeckID deck, SongTitles song)
	{
	}

	[Token(Token = "0x60003D6")]
	[Address(RVA = "0x1009380", Offset = "0x1009380", VA = "0x1009380")]
	public void recordRemoved(DeckID deck)
	{
	}

	[Token(Token = "0x60003D7")]
	[Address(RVA = "0x100939C", Offset = "0x100939C", VA = "0x100939C")]
	public void playButtonPressed(DeckID deck)
	{
	}

	[Token(Token = "0x60003D8")]
	[Address(RVA = "0x10093D8", Offset = "0x10093D8", VA = "0x10093D8")]
	public void stopButtonPressed(DeckID deck)
	{
	}

	[Token(Token = "0x60003D9")]
	[Address(RVA = "0x1009414", Offset = "0x1009414", VA = "0x1009414")]
	public void setStatus(DeckID deck, DeckStatus newStatus)
	{
	}

	[Token(Token = "0x60003DA")]
	[Address(RVA = "0x1008BDC", Offset = "0x1008BDC", VA = "0x1008BDC")]
	[IteratorStateMachine(typeof(<GetChannelGroupA>d__54))]
	private IEnumerator GetChannelGroupA()
	{
		return null;
	}

	[Token(Token = "0x60003DB")]
	[Address(RVA = "0x1008C50", Offset = "0x1008C50", VA = "0x1008C50")]
	[IteratorStateMachine(typeof(<GetChannelGroupB>d__55))]
	private IEnumerator GetChannelGroupB()
	{
		return null;
	}

	[Token(Token = "0x60003DC")]
	[Address(RVA = "0x1009480", Offset = "0x1009480", VA = "0x1009480")]
	public TwinDecks()
	{
	}
}
[Token(Token = "0x2000045")]
public class FixedCameraScenarioProvider : MonoBehaviour, IAutomatedTestScenarioProvider
{
	[Token(Token = "0x2000046")]
	public class FixedCameraScenario : IAutomatedTestScenario
	{
		[Token(Token = "0x2000047")]
		[CompilerGenerated]
		private sealed class <Setup>d__11 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000258")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000259")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400025A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public string parameter;

			[Token(Token = "0x400025B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public FixedCameraScenario <>4__this;

			[Token(Token = "0x17000039")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60003F5")]
				[Address(RVA = "0x1009D64", Offset = "0x1009D64", VA = "0x1009D64", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700003A")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60003F7")]
				[Address(RVA = "0x1009DAC", Offset = "0x1009DAC", VA = "0x1009DAC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60003F2")]
			[Address(RVA = "0x1009AA0", Offset = "0x1009AA0", VA = "0x1009AA0")]
			[DebuggerHidden]
			public <Setup>d__11(int <>1__state)
			{
			}

			[Token(Token = "0x60003F3")]
			[Address(RVA = "0x1009B64", Offset = "0x1009B64", VA = "0x1009B64", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60003F4")]
			[Address(RVA = "0x1009B68", Offset = "0x1009B68", VA = "0x1009B68", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60003F6")]
			[Address(RVA = "0x1009D6C", Offset = "0x1009D6C", VA = "0x1009D6C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000048")]
		[CompilerGenerated]
		private sealed class <Run>d__12 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400025C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400025D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400025E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public FixedCameraScenario <>4__this;

			[Token(Token = "0x400025F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <progress>5__2;

			[Token(Token = "0x1700003B")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60003FB")]
				[Address(RVA = "0x1009E58", Offset = "0x1009E58", VA = "0x1009E58", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700003C")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60003FD")]
				[Address(RVA = "0x1009EA0", Offset = "0x1009EA0", VA = "0x1009EA0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60003F8")]
			[Address(RVA = "0x1009B3C", Offset = "0x1009B3C", VA = "0x1009B3C")]
			[DebuggerHidden]
			public <Run>d__12(int <>1__state)
			{
			}

			[Token(Token = "0x60003F9")]
			[Address(RVA = "0x1009DB4", Offset = "0x1009DB4", VA = "0x1009DB4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60003FA")]
			[Address(RVA = "0x1009DB8", Offset = "0x1009DB8", VA = "0x1009DB8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60003FC")]
			[Address(RVA = "0x1009E60", Offset = "0x1009E60", VA = "0x1009E60", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000253")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Vector3 _position;

		[Token(Token = "0x4000254")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private Quaternion _rotation;

		[Token(Token = "0x4000255")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float _duration;

		[Token(Token = "0x4000256")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Transform _cameraTransform;

		[Token(Token = "0x4000257")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private string _name;

		[Token(Token = "0x17000037")]
		public string name
		{
			[Token(Token = "0x60003ED")]
			[Address(RVA = "0x10099CC", Offset = "0x10099CC", VA = "0x10099CC", Slot = "7")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000038")]
		public float duration
		{
			[Token(Token = "0x60003EE")]
			[Address(RVA = "0x10099D4", Offset = "0x10099D4", VA = "0x10099D4", Slot = "8")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x60003EC")]
		[Address(RVA = "0x10098F0", Offset = "0x10098F0", VA = "0x10098F0")]
		public FixedCameraScenario(string name, Vector3 position, Quaternion rotation, float duration)
		{
		}

		[Token(Token = "0x60003EF")]
		[Address(RVA = "0x10099DC", Offset = "0x10099DC", VA = "0x10099DC", Slot = "4")]
		public void Initialize(Dictionary<string, string> commandLineArgs)
		{
		}

		[Token(Token = "0x60003F0")]
		[Address(RVA = "0x1009A10", Offset = "0x1009A10", VA = "0x1009A10", Slot = "5")]
		[IteratorStateMachine(typeof(<Setup>d__11))]
		public IEnumerator Setup(string parameter)
		{
			return null;
		}

		[Token(Token = "0x60003F1")]
		[Address(RVA = "0x1009AC8", Offset = "0x1009AC8", VA = "0x1009AC8", Slot = "6")]
		[IteratorStateMachine(typeof(<Run>d__12))]
		public IEnumerator Run()
		{
			return null;
		}
	}

	[Token(Token = "0x4000252")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Quaternion _rotation;

	[Token(Token = "0x17000036")]
	public string scenarioName
	{
		[Token(Token = "0x60003E9")]
		[Address(RVA = "0x1009800", Offset = "0x1009800", VA = "0x1009800", Slot = "4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60003EA")]
	[Address(RVA = "0x1009820", Offset = "0x1009820", VA = "0x1009820", Slot = "5")]
	public IAutomatedTestScenario BuildTestScenario(string name)
	{
		return null;
	}

	[Token(Token = "0x60003EB")]
	[Address(RVA = "0x1009974", Offset = "0x1009974", VA = "0x1009974")]
	public FixedCameraScenarioProvider()
	{
	}
}
[Token(Token = "0x2000049")]
public class FunctionalTestGroupCore : IAutomatedTestGroup
{
	[Token(Token = "0x200004A")]
	public class Instances
	{
		[Token(Token = "0x4000261")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public ConditionalTest sceneLoaded;

		[Token(Token = "0x4000262")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ConditionalTest sceneContainsWorldServices;

		[Token(Token = "0x4000263")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ConditionalTest initialised;

		[Token(Token = "0x4000264")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public ConditionalTest updateStarted;

		[Token(Token = "0x6000404")]
		[Address(RVA = "0x100A098", Offset = "0x100A098", VA = "0x100A098")]
		public Instances()
		{
		}
	}

	[Token(Token = "0x4000260")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Instances s_instances;

	[Token(Token = "0x1700003D")]
	public static Instances current
	{
		[Token(Token = "0x60003FE")]
		[Address(RVA = "0x1009EA8", Offset = "0x1009EA8", VA = "0x1009EA8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60003FF")]
	[Address(RVA = "0x1009F00", Offset = "0x1009F00", VA = "0x1009F00")]
	static FunctionalTestGroupCore()
	{
	}

	[Token(Token = "0x6000400")]
	[Address(RVA = "0x100A0A0", Offset = "0x100A0A0", VA = "0x100A0A0", Slot = "4")]
	public void Initialize(Dictionary<string, string> args, string outputPrefix, float duration)
	{
	}

	[Token(Token = "0x6000401")]
	[Address(RVA = "0x100A0A4", Offset = "0x100A0A4", VA = "0x100A0A4", Slot = "5")]
	public void Register()
	{
	}

	[Token(Token = "0x6000402")]
	[Address(RVA = "0x100A0A8", Offset = "0x100A0A8", VA = "0x100A0A8", Slot = "6")]
	public bool IsComplete()
	{
		return default(bool);
	}

	[Token(Token = "0x6000403")]
	[Address(RVA = "0x100A1B0", Offset = "0x100A1B0", VA = "0x100A1B0")]
	public FunctionalTestGroupCore()
	{
	}
}
[Token(Token = "0x200004B")]
public interface IAutomatedTestGroup
{
	[Token(Token = "0x6000405")]
	void Initialize(Dictionary<string, string> args, string outputPrefix, float duration);

	[Token(Token = "0x6000406")]
	void Register();

	[Token(Token = "0x6000407")]
	bool IsComplete();
}
[Token(Token = "0x200004C")]
public interface IAutomatedTestScenario
{
	[Token(Token = "0x1700003E")]
	string name
	{
		[Token(Token = "0x600040B")]
		get;
	}

	[Token(Token = "0x1700003F")]
	float duration
	{
		[Token(Token = "0x600040C")]
		get;
	}

	[Token(Token = "0x6000408")]
	void Initialize(Dictionary<string, string> args);

	[Token(Token = "0x6000409")]
	IEnumerator Setup(string parameter);

	[Token(Token = "0x600040A")]
	IEnumerator Run();
}
[Token(Token = "0x200004D")]
public interface IAutomatedTestScenarioBatchProvider
{
	[Token(Token = "0x17000040")]
	string scenarioBatchName
	{
		[Token(Token = "0x600040D")]
		get;
	}

	[Token(Token = "0x17000041")]
	string[] scenarioProviderNames
	{
		[Token(Token = "0x600040E")]
		get;
	}
}
[Token(Token = "0x200004E")]
public interface IAutomatedTestScenarioProvider
{
	[Token(Token = "0x17000042")]
	string scenarioName
	{
		[Token(Token = "0x600040F")]
		get;
	}

	[Token(Token = "0x6000410")]
	IAutomatedTestScenario BuildTestScenario(string name);
}
[Token(Token = "0x200004F")]
public class MemoryTestGroupBuiltIn : IAutomatedTestGroup
{
	[Token(Token = "0x4000265")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private PerformanceTest totalUsedMemoryTest;

	[Token(Token = "0x4000266")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private PerformanceTest totalGCMemoryTest;

	[Token(Token = "0x4000267")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private PerformanceTest totalSystemMemoryTest;

	[Token(Token = "0x4000268")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private PerformanceTest totalTextureMemoryTest;

	[Token(Token = "0x4000269")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private PerformanceTest totalGfxMemoryTest;

	[Token(Token = "0x400026A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private PerformanceTest gcAllocInFrameTest;

	[Token(Token = "0x6000411")]
	[Address(RVA = "0x100A1B8", Offset = "0x100A1B8", VA = "0x100A1B8", Slot = "4")]
	public void Initialize(Dictionary<string, string> args, string outputPrefix, float duration)
	{
	}

	[Token(Token = "0x6000412")]
	[Address(RVA = "0x100A434", Offset = "0x100A434", VA = "0x100A434", Slot = "5")]
	public void Register()
	{
	}

	[Token(Token = "0x6000413")]
	[Address(RVA = "0x100A438", Offset = "0x100A438", VA = "0x100A438", Slot = "6")]
	public bool IsComplete()
	{
		return default(bool);
	}

	[Token(Token = "0x6000414")]
	[Address(RVA = "0x100A4AC", Offset = "0x100A4AC", VA = "0x100A4AC")]
	public MemoryTestGroupBuiltIn()
	{
	}
}
[Token(Token = "0x2000050")]
public class ProfileMarkersTestGroupBasic : IAutomatedTestGroup
{
	[Token(Token = "0x400026B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private PerformanceTest playerLoopTest;

	[Token(Token = "0x6000415")]
	[Address(RVA = "0x100A4B4", Offset = "0x100A4B4", VA = "0x100A4B4", Slot = "4")]
	public void Initialize(Dictionary<string, string> args, string outputPrefix, float duration)
	{
	}

	[Token(Token = "0x6000416")]
	[Address(RVA = "0x100A580", Offset = "0x100A580", VA = "0x100A580", Slot = "5")]
	public void Register()
	{
	}

	[Token(Token = "0x6000417")]
	[Address(RVA = "0x100A584", Offset = "0x100A584", VA = "0x100A584", Slot = "6")]
	public bool IsComplete()
	{
		return default(bool);
	}

	[Token(Token = "0x6000418")]
	[Address(RVA = "0x100A590", Offset = "0x100A590", VA = "0x100A590")]
	public ProfileMarkersTestGroupBasic()
	{
	}
}
[Token(Token = "0x2000051")]
public class ProfileMarkersTestGroupBuiltIn : IAutomatedTestGroup
{
	[Token(Token = "0x400026C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private PerformanceTest playerLoopTest;

	[Token(Token = "0x400026D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private PerformanceTest vsyncTest;

	[Token(Token = "0x400026E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private PerformanceTest collisionTest;

	[Token(Token = "0x400026F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private PerformanceTest simulationTest;

	[Token(Token = "0x4000270")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private PerformanceTest animatorBeginTest;

	[Token(Token = "0x4000271")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private PerformanceTest animatorEndTest;

	[Token(Token = "0x4000272")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private PerformanceTest timelineTest;

	[Token(Token = "0x4000273")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private PerformanceTest newInputUpdateTest;

	[Token(Token = "0x6000419")]
	[Address(RVA = "0x100A598", Offset = "0x100A598", VA = "0x100A598", Slot = "4")]
	public void Initialize(Dictionary<string, string> args, string outputPrefix, float duration)
	{
	}

	[Token(Token = "0x600041A")]
	[Address(RVA = "0x100A8CC", Offset = "0x100A8CC", VA = "0x100A8CC", Slot = "5")]
	public void Register()
	{
	}

	[Token(Token = "0x600041B")]
	[Address(RVA = "0x100A8D0", Offset = "0x100A8D0", VA = "0x100A8D0", Slot = "6")]
	public bool IsComplete()
	{
		return default(bool);
	}

	[Token(Token = "0x600041C")]
	[Address(RVA = "0x100A964", Offset = "0x100A964", VA = "0x100A964")]
	public ProfileMarkersTestGroupBuiltIn()
	{
	}
}
[Token(Token = "0x2000052")]
public class ProfileMarkersTestGroupGame : IAutomatedTestGroup
{
	[Token(Token = "0x4000274")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private PerformanceTest updateTest;

	[Token(Token = "0x4000275")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private PerformanceTest fixedUpdateTest;

	[Token(Token = "0x4000276")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private PerformanceTest occlusionTest;

	[Token(Token = "0x4000277")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private PerformanceTest audioEmitterTest;

	[Token(Token = "0x4000278")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private PerformanceTest boltTest;

	[Token(Token = "0x4000279")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private PerformanceTest fmodTest;

	[Token(Token = "0x600041D")]
	[Address(RVA = "0x100A96C", Offset = "0x100A96C", VA = "0x100A96C", Slot = "4")]
	public void Initialize(Dictionary<string, string> args, string outputPrefix, float duration)
	{
	}

	[Token(Token = "0x600041E")]
	[Address(RVA = "0x100ABE8", Offset = "0x100ABE8", VA = "0x100ABE8", Slot = "5")]
	public void Register()
	{
	}

	[Token(Token = "0x600041F")]
	[Address(RVA = "0x100ABEC", Offset = "0x100ABEC", VA = "0x100ABEC", Slot = "6")]
	public bool IsComplete()
	{
		return default(bool);
	}

	[Token(Token = "0x6000420")]
	[Address(RVA = "0x100AC60", Offset = "0x100AC60", VA = "0x100AC60")]
	public ProfileMarkersTestGroupGame()
	{
	}
}
[Token(Token = "0x2000053")]
public class ProfileMarkersTestGroupRender : IAutomatedTestGroup
{
	[Token(Token = "0x400027A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private PerformanceTest cullTest;

	[Token(Token = "0x400027B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private PerformanceTest depthPrepassTest;

	[Token(Token = "0x400027C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private PerformanceTest drawOpaqueTest;

	[Token(Token = "0x400027D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private PerformanceTest drawTransparentTest;

	[Token(Token = "0x400027E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private PerformanceTest drawOutlineTest;

	[Token(Token = "0x400027F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private PerformanceTest drawPostProcessTest;

	[Token(Token = "0x4000280")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private PerformanceTest drawCallCountTest;

	[Token(Token = "0x4000281")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private PerformanceTest triangleCountTest;

	[Token(Token = "0x6000421")]
	[Address(RVA = "0x100AC68", Offset = "0x100AC68", VA = "0x100AC68", Slot = "4")]
	public void Initialize(Dictionary<string, string> args, string outputPrefix, float duration)
	{
	}

	[Token(Token = "0x6000422")]
	[Address(RVA = "0x100AF9C", Offset = "0x100AF9C", VA = "0x100AF9C", Slot = "5")]
	public void Register()
	{
	}

	[Token(Token = "0x6000423")]
	[Address(RVA = "0x100AFA0", Offset = "0x100AFA0", VA = "0x100AFA0", Slot = "6")]
	public bool IsComplete()
	{
		return default(bool);
	}

	[Token(Token = "0x6000424")]
	[Address(RVA = "0x100B034", Offset = "0x100B034", VA = "0x100B034")]
	public ProfileMarkersTestGroupRender()
	{
	}
}
[Token(Token = "0x2000054")]
public class ScenarioBatchProvider : MonoBehaviour, IAutomatedTestScenarioBatchProvider
{
	[Token(Token = "0x17000043")]
	public string scenarioBatchName
	{
		[Token(Token = "0x6000425")]
		[Address(RVA = "0x100B03C", Offset = "0x100B03C", VA = "0x100B03C", Slot = "4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000044")]
	public string[] scenarioProviderNames
	{
		[Token(Token = "0x6000426")]
		[Address(RVA = "0x100B05C", Offset = "0x100B05C", VA = "0x100B05C", Slot = "5")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000427")]
	[Address(RVA = "0x100B1CC", Offset = "0x100B1CC", VA = "0x100B1CC")]
	public ScenarioBatchProvider()
	{
	}
}
[Token(Token = "0x2000056")]
public class ScenarioParameterVariantProvider : MonoBehaviour
{
	[Token(Token = "0x4000284")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private string _parameterValue;

	[Token(Token = "0x17000045")]
	public string parameter
	{
		[Token(Token = "0x600042B")]
		[Address(RVA = "0x100B2E8", Offset = "0x100B2E8", VA = "0x100B2E8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600042C")]
	[Address(RVA = "0x100B2F0", Offset = "0x100B2F0", VA = "0x100B2F0")]
	public ScenarioParameterVariantProvider()
	{
	}
}
[Token(Token = "0x2000057")]
public class SweepCameraScenarioProvider : MonoBehaviour, IAutomatedTestScenarioProvider
{
	[Token(Token = "0x2000058")]
	public class SweepCameraScenario : IAutomatedTestScenario
	{
		[Token(Token = "0x2000059")]
		[CompilerGenerated]
		private sealed class <Setup>d__12 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400028D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400028E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400028F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public string parameter;

			[Token(Token = "0x4000290")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public SweepCameraScenario <>4__this;

			[Token(Token = "0x17000049")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000439")]
				[Address(RVA = "0x100B904", Offset = "0x100B904", VA = "0x100B904", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700004A")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600043B")]
				[Address(RVA = "0x100B94C", Offset = "0x100B94C", VA = "0x100B94C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000436")]
			[Address(RVA = "0x100B640", Offset = "0x100B640", VA = "0x100B640")]
			[DebuggerHidden]
			public <Setup>d__12(int <>1__state)
			{
			}

			[Token(Token = "0x6000437")]
			[Address(RVA = "0x100B704", Offset = "0x100B704", VA = "0x100B704", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000438")]
			[Address(RVA = "0x100B708", Offset = "0x100B708", VA = "0x100B708", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600043A")]
			[Address(RVA = "0x100B90C", Offset = "0x100B90C", VA = "0x100B90C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200005A")]
		[CompilerGenerated]
		private sealed class <Run>d__13 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000291")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000292")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000293")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SweepCameraScenario <>4__this;

			[Token(Token = "0x4000294")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <progress>5__2;

			[Token(Token = "0x4000295")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private Quaternion <start>5__3;

			[Token(Token = "0x1700004B")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600043F")]
				[Address(RVA = "0x100BA4C", Offset = "0x100BA4C", VA = "0x100BA4C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700004C")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000441")]
				[Address(RVA = "0x100BA94", Offset = "0x100BA94", VA = "0x100BA94", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600043C")]
			[Address(RVA = "0x100B6DC", Offset = "0x100B6DC", VA = "0x100B6DC")]
			[DebuggerHidden]
			public <Run>d__13(int <>1__state)
			{
			}

			[Token(Token = "0x600043D")]
			[Address(RVA = "0x100B954", Offset = "0x100B954", VA = "0x100B954", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600043E")]
			[Address(RVA = "0x100B958", Offset = "0x100B958", VA = "0x100B958", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000440")]
			[Address(RVA = "0x100BA54", Offset = "0x100BA54", VA = "0x100BA54", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000287")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Vector3 _position;

		[Token(Token = "0x4000288")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private Quaternion _startRotation;

		[Token(Token = "0x4000289")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private Quaternion _endRotation;

		[Token(Token = "0x400028A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float _duration;

		[Token(Token = "0x400028B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Transform _cameraTransform;

		[Token(Token = "0x400028C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private string _name;

		[Token(Token = "0x17000047")]
		public string name
		{
			[Token(Token = "0x6000431")]
			[Address(RVA = "0x100B56C", Offset = "0x100B56C", VA = "0x100B56C", Slot = "7")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000048")]
		public float duration
		{
			[Token(Token = "0x6000432")]
			[Address(RVA = "0x100B574", Offset = "0x100B574", VA = "0x100B574", Slot = "8")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6000430")]
		[Address(RVA = "0x100B468", Offset = "0x100B468", VA = "0x100B468")]
		public SweepCameraScenario(string name, Vector3 position, Quaternion startRotation, Quaternion endRotation, float duration)
		{
		}

		[Token(Token = "0x6000433")]
		[Address(RVA = "0x100B57C", Offset = "0x100B57C", VA = "0x100B57C", Slot = "4")]
		public void Initialize(Dictionary<string, string> commandLineArgs)
		{
		}

		[Token(Token = "0x6000434")]
		[Address(RVA = "0x100B5B0", Offset = "0x100B5B0", VA = "0x100B5B0", Slot = "5")]
		[IteratorStateMachine(typeof(<Setup>d__12))]
		public IEnumerator Setup(string parameter)
		{
			return null;
		}

		[Token(Token = "0x6000435")]
		[Address(RVA = "0x100B668", Offset = "0x100B668", VA = "0x100B668", Slot = "6")]
		[IteratorStateMachine(typeof(<Run>d__13))]
		public IEnumerator Run()
		{
			return null;
		}
	}

	[Token(Token = "0x4000285")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Quaternion _start;

	[Token(Token = "0x4000286")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Quaternion _end;

	[Token(Token = "0x17000046")]
	public string scenarioName
	{
		[Token(Token = "0x600042D")]
		[Address(RVA = "0x100B350", Offset = "0x100B350", VA = "0x100B350", Slot = "4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600042E")]
	[Address(RVA = "0x100B370", Offset = "0x100B370", VA = "0x100B370", Slot = "5")]
	public IAutomatedTestScenario BuildTestScenario(string name)
	{
		return null;
	}

	[Token(Token = "0x600042F")]
	[Address(RVA = "0x100B508", Offset = "0x100B508", VA = "0x100B508")]
	public SweepCameraScenarioProvider()
	{
	}
}
[Token(Token = "0x200005B")]
public class TestingContainer : MonoBehaviour
{
	[Token(Token = "0x200005C")]
	[CompilerGenerated]
	private sealed class <Start>d__5 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400029A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400029B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400029C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TestingContainer <>4__this;

		[Token(Token = "0x400029D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private WaitForSeconds <wait>5__2;

		[Token(Token = "0x400029E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private IEnumerator <setupRoutine>5__3;

		[Token(Token = "0x400029F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private IEnumerator <testRoutine>5__4;

		[Token(Token = "0x1700004D")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600044B")]
			[Address(RVA = "0x100CFB4", Offset = "0x100CFB4", VA = "0x100CFB4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700004E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600044D")]
			[Address(RVA = "0x100CFFC", Offset = "0x100CFFC", VA = "0x100CFFC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000448")]
		[Address(RVA = "0x100BD34", Offset = "0x100BD34", VA = "0x100BD34")]
		[DebuggerHidden]
		public <Start>d__5(int <>1__state)
		{
		}

		[Token(Token = "0x6000449")]
		[Address(RVA = "0x100C0B4", Offset = "0x100C0B4", VA = "0x100C0B4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600044A")]
		[Address(RVA = "0x100C0B8", Offset = "0x100C0B8", VA = "0x100C0B8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600044C")]
		[Address(RVA = "0x100CFBC", Offset = "0x100CFBC", VA = "0x100CFBC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000296")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private AutomatedTestRunner _testRunner;

	[Token(Token = "0x4000297")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private TestingScenarioContainer _testScenarioContainer;

	[Token(Token = "0x4000298")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private string _sceneName;

	[Token(Token = "0x4000299")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static List<GameObject> s_tempRootObjects;

	[Token(Token = "0x6000442")]
	[Address(RVA = "0x100BA9C", Offset = "0x100BA9C", VA = "0x100BA9C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000443")]
	[Address(RVA = "0x100BCC0", Offset = "0x100BCC0", VA = "0x100BCC0")]
	[IteratorStateMachine(typeof(<Start>d__5))]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x6000444")]
	[Address(RVA = "0x100BD5C", Offset = "0x100BD5C", VA = "0x100BD5C")]
	private void ScanForTestContainer()
	{
	}

	[Token(Token = "0x6000445")]
	[Address(RVA = "0x100BB30", Offset = "0x100BB30", VA = "0x100BB30")]
	private void SelectTestScene(string testType, Dictionary<string, string> testParameters)
	{
	}

	[Token(Token = "0x6000446")]
	[Address(RVA = "0x100C010", Offset = "0x100C010", VA = "0x100C010")]
	public TestingContainer()
	{
	}
}
[Token(Token = "0x200005D")]
public class TestingScenarioContainer : MonoBehaviour
{
	[Token(Token = "0x200005E")]
	[CompilerGenerated]
	private sealed class <Setup>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40002A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40002A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x1700004F")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000458")]
			[Address(RVA = "0x100E060", Offset = "0x100E060", VA = "0x100E060", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000050")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600045A")]
			[Address(RVA = "0x100E0A8", Offset = "0x100E0A8", VA = "0x100E0A8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000455")]
		[Address(RVA = "0x100DDC4", Offset = "0x100DDC4", VA = "0x100DDC4")]
		[DebuggerHidden]
		public <Setup>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x6000456")]
		[Address(RVA = "0x100E00C", Offset = "0x100E00C", VA = "0x100E00C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000457")]
		[Address(RVA = "0x100E010", Offset = "0x100E010", VA = "0x100E010", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000459")]
		[Address(RVA = "0x100E068", Offset = "0x100E068", VA = "0x100E068", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200005F")]
	[CompilerGenerated]
	private sealed class <Run>d__7 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40002A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40002A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40002A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TestingScenarioContainer <>4__this;

		[Token(Token = "0x40002AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private List<(IAutomatedTestScenario scenario, List<IAutomatedTestGroup> groups)>.Enumerator <>7__wrap1;

		[Token(Token = "0x40002AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private IAutomatedTestScenario <testScenario>5__3;

		[Token(Token = "0x40002AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private List<IAutomatedTestGroup> <testGroups>5__4;

		[Token(Token = "0x40002AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private float <startTime>5__5;

		[Token(Token = "0x17000051")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600045F")]
			[Address(RVA = "0x100E8C8", Offset = "0x100E8C8", VA = "0x100E8C8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000052")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000461")]
			[Address(RVA = "0x100E910", Offset = "0x100E910", VA = "0x100E910", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600045B")]
		[Address(RVA = "0x100DDEC", Offset = "0x100DDEC", VA = "0x100DDEC")]
		[DebuggerHidden]
		public <Run>d__7(int <>1__state)
		{
		}

		[Token(Token = "0x600045C")]
		[Address(RVA = "0x100E0B0", Offset = "0x100E0B0", VA = "0x100E0B0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600045D")]
		[Address(RVA = "0x100E0D0", Offset = "0x100E0D0", VA = "0x100E0D0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600045E")]
		[Address(RVA = "0x100E878", Offset = "0x100E878", VA = "0x100E878")]
		private void <>m__Finally1()
		{
		}

		[Token(Token = "0x6000460")]
		[Address(RVA = "0x100E8D0", Offset = "0x100E8D0", VA = "0x100E8D0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40002A0")]
	private const float minTestDuration = 5f;

	[Token(Token = "0x40002A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private List<IAutomatedTestScenario> testScenarios;

	[Token(Token = "0x40002A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private List<(IAutomatedTestScenario scenario, List<IAutomatedTestGroup> groups)> testGroupBatches;

	[Token(Token = "0x40002A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private AutomatedTestRunner testRunner;

	[Token(Token = "0x40002A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private string scenarioParameter;

	[Token(Token = "0x600044E")]
	[Address(RVA = "0x100C7B0", Offset = "0x100C7B0", VA = "0x100C7B0")]
	public void Initialise(AutomatedTestRunner runner)
	{
	}

	[Token(Token = "0x600044F")]
	[Address(RVA = "0x100CEE0", Offset = "0x100CEE0", VA = "0x100CEE0")]
	[IteratorStateMachine(typeof(<Setup>d__6))]
	public IEnumerator Setup()
	{
		return null;
	}

	[Token(Token = "0x6000450")]
	[Address(RVA = "0x100CF40", Offset = "0x100CF40", VA = "0x100CF40")]
	[IteratorStateMachine(typeof(<Run>d__7))]
	public IEnumerator Run()
	{
		return null;
	}

	[Token(Token = "0x6000451")]
	[Address(RVA = "0x100D700", Offset = "0x100D700", VA = "0x100D700")]
	private void SelectTestGroups(string testType)
	{
	}

	[Token(Token = "0x6000452")]
	[Address(RVA = "0x100D004", Offset = "0x100D004", VA = "0x100D004")]
	private void SelectTestScenarios(string testType, Dictionary<string, string> testParameters)
	{
	}

	[Token(Token = "0x6000453")]
	[Address(RVA = "0x100DE1C", Offset = "0x100DE1C", VA = "0x100DE1C")]
	private void ExtractScenarioNameAndParameter(string input, out string scenarioName, out string parameter)
	{
	}

	[Token(Token = "0x6000454")]
	[Address(RVA = "0x100DF08", Offset = "0x100DF08", VA = "0x100DF08")]
	public TestingScenarioContainer()
	{
	}
}
[Token(Token = "0x2000063")]
public class BuildVersion
{
	[Token(Token = "0x40002B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static string _version;

	[Token(Token = "0x6000468")]
	[Address(RVA = "0x100EB40", Offset = "0x100EB40", VA = "0x100EB40")]
	public BuildVersion()
	{
	}
}
[Token(Token = "0x2000064")]
public class ContainerAttachmentMonitor : MonoBehaviour
{
	[Token(Token = "0x40002B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private UnityEvent<GameObject> _childAddedEvent;

	[Token(Token = "0x40002B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private UnityEvent _childRemovedEvent;

	[Token(Token = "0x40002B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private int _currentChildCount;

	[Token(Token = "0x17000053")]
	public UnityEvent<GameObject> onItemAdded
	{
		[Token(Token = "0x600046A")]
		[Address(RVA = "0x100EBB4", Offset = "0x100EBB4", VA = "0x100EBB4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000054")]
	public UnityEvent onItemRemoved
	{
		[Token(Token = "0x600046B")]
		[Address(RVA = "0x100EBBC", Offset = "0x100EBBC", VA = "0x100EBBC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600046C")]
	[Address(RVA = "0x100EBC4", Offset = "0x100EBC4", VA = "0x100EBC4")]
	private void Start()
	{
	}

	[Token(Token = "0x600046D")]
	[Address(RVA = "0x100EBF0", Offset = "0x100EBF0", VA = "0x100EBF0")]
	private void OnTransformChildrenChanged()
	{
	}

	[Token(Token = "0x600046E")]
	[Address(RVA = "0x100ED04", Offset = "0x100ED04", VA = "0x100ED04")]
	public ContainerAttachmentMonitor()
	{
	}
}
[Token(Token = "0x2000065")]
[RequireComponent(typeof(BoxCollider))]
public class StaticClosableContainer : MonoBehaviour
{
	[Token(Token = "0x40002B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private HashSet<PhysicsHoldable> containedHoldables;

	[Token(Token = "0x40002B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private PhysicsHoldable[] localHoldables;

	[Token(Token = "0x40002B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private BoxCollider boxCollider;

	[Token(Token = "0x40002B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool closed;

	[Token(Token = "0x40002B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private int layerMask;

	[Token(Token = "0x40002BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private DoorOpenable[] doorOpenables;

	[Token(Token = "0x40002BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Collider[] sCandidates;

	[Token(Token = "0x600046F")]
	[Address(RVA = "0x100ED0C", Offset = "0x100ED0C", VA = "0x100ED0C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000470")]
	[Address(RVA = "0x100EE70", Offset = "0x100EE70", VA = "0x100EE70")]
	public void Start()
	{
	}

	[Token(Token = "0x6000471")]
	[Address(RVA = "0x100F278", Offset = "0x100F278", VA = "0x100F278")]
	public void ReScanContainedHoldables()
	{
	}

	[Token(Token = "0x6000472")]
	[Address(RVA = "0x100F030", Offset = "0x100F030", VA = "0x100F030")]
	private void ScanContainedHoldables()
	{
	}

	[Token(Token = "0x6000473")]
	[Address(RVA = "0x100F54C", Offset = "0x100F54C", VA = "0x100F54C")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000474")]
	[Address(RVA = "0x100F624", Offset = "0x100F624", VA = "0x100F624")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x6000475")]
	[Address(RVA = "0x100F760", Offset = "0x100F760", VA = "0x100F760")]
	private void OnHoldablePickedUp(Holdable holdable, GrabAnchor grabAnchor)
	{
	}

	[Token(Token = "0x6000476")]
	[Address(RVA = "0x100F46C", Offset = "0x100F46C", VA = "0x100F46C")]
	private void AddContainedHoldable(PhysicsHoldable holdable)
	{
	}

	[Token(Token = "0x6000477")]
	[Address(RVA = "0x100F6FC", Offset = "0x100F6FC", VA = "0x100F6FC")]
	private void RemoveContainedHoldable(PhysicsHoldable holdable)
	{
	}

	[Token(Token = "0x6000478")]
	[Address(RVA = "0x100F908", Offset = "0x100F908", VA = "0x100F908")]
	private void PrepareForRemoval(PhysicsHoldable holdable)
	{
	}

	[Token(Token = "0x6000479")]
	[Address(RVA = "0x100F2A4", Offset = "0x100F2A4", VA = "0x100F2A4")]
	private bool AreAllDoorsClosed()
	{
		return default(bool);
	}

	[Token(Token = "0x600047A")]
	[Address(RVA = "0x100F9B0", Offset = "0x100F9B0", VA = "0x100F9B0")]
	private void HideContainedHoldable(PhysicsHoldable holdable)
	{
	}

	[Token(Token = "0x600047B")]
	[Address(RVA = "0x100F7FC", Offset = "0x100F7FC", VA = "0x100F7FC")]
	private void ShowContainedHoldable(PhysicsHoldable holdable)
	{
	}

	[Token(Token = "0x600047C")]
	[Address(RVA = "0x100FAB0", Offset = "0x100FAB0", VA = "0x100FAB0")]
	private bool IsLocalHoldable(PhysicsHoldable holdable)
	{
		return default(bool);
	}

	[Token(Token = "0x600047D")]
	[Address(RVA = "0x100FB68", Offset = "0x100FB68", VA = "0x100FB68")]
	public void RemoveAllContainedHoldables()
	{
	}

	[Token(Token = "0x600047E")]
	[Address(RVA = "0x100F31C", Offset = "0x100F31C", VA = "0x100F31C")]
	private void HideAllContainedHoldables()
	{
	}

	[Token(Token = "0x600047F")]
	[Address(RVA = "0x100F234", Offset = "0x100F234", VA = "0x100F234")]
	public void OnClosed()
	{
	}

	[Token(Token = "0x6000480")]
	[Address(RVA = "0x100FD08", Offset = "0x100FD08", VA = "0x100FD08")]
	public void OnOpened()
	{
	}

	[Token(Token = "0x6000481")]
	[Address(RVA = "0x100FE58", Offset = "0x100FE58", VA = "0x100FE58")]
	public StaticClosableContainer()
	{
	}
}
[Token(Token = "0x2000066")]
public class BoltEventDebugHelper : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x2000067")]
	public struct EventData
	{
		[Token(Token = "0x40002BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public FlowMachine story;

		[Token(Token = "0x40002C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public string eventName;
	}

	[Token(Token = "0x40002BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<EventData> events;

	[Token(Token = "0x40002BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static InputActionType[] s_actions;

	[Token(Token = "0x40002BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static BoltEventDebugHelper instance;

	[Token(Token = "0x6000483")]
	[Address(RVA = "0x100FF54", Offset = "0x100FF54", VA = "0x100FF54")]
	static BoltEventDebugHelper()
	{
	}

	[Token(Token = "0x6000484")]
	[Address(RVA = "0x100FFF4", Offset = "0x100FFF4", VA = "0x100FFF4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000485")]
	[Address(RVA = "0x1010054", Offset = "0x1010054", VA = "0x1010054")]
	private void Update()
	{
	}

	[Token(Token = "0x6000486")]
	[Address(RVA = "0x1010220", Offset = "0x1010220", VA = "0x1010220")]
	public void HandleInputAction(int index)
	{
	}

	[Token(Token = "0x6000487")]
	[Address(RVA = "0x1010380", Offset = "0x1010380", VA = "0x1010380")]
	public BoltEventDebugHelper()
	{
	}
}
[Token(Token = "0x2000068")]
public abstract class DebugFreeCamera_Base : MonoBehaviour
{
	[Token(Token = "0x40002C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	protected float transformSensitivity;

	[Token(Token = "0x40002C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	protected float mouseSensitivity;

	[Token(Token = "0x40002C3")]
	protected const float s_transformSensitivityStep = 3f;

	[Token(Token = "0x40002C4")]
	protected const string s_triggersLayerName = "Triggers";

	[Token(Token = "0x40002C5")]
	protected const string s_playerLayerName = "Player";

	[Token(Token = "0x6000488")]
	public abstract void Begin(PlayerBase player);

	[Token(Token = "0x6000489")]
	public abstract void End(PlayerBase player);

	[Token(Token = "0x600048A")]
	public abstract void ProcessInput(PlayerBase player, float deltaTime);

	[Token(Token = "0x600048B")]
	[Address(RVA = "0x1010388", Offset = "0x1010388", VA = "0x1010388")]
	protected DebugFreeCamera_Base()
	{
	}
}
[Token(Token = "0x2000069")]
public abstract class DebugFreeCamera_XR : DebugFreeCamera_Base
{
	[Token(Token = "0x40002C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private XRRig xrRig;

	[Token(Token = "0x600048C")]
	[Address(RVA = "0x101039C", Offset = "0x101039C", VA = "0x101039C", Slot = "6")]
	public override void ProcessInput(PlayerBase player, float deltaTime)
	{
	}

	[Token(Token = "0x600048D")]
	[Address(RVA = "0x1010610", Offset = "0x1010610", VA = "0x1010610", Slot = "4")]
	public override void Begin(PlayerBase player)
	{
	}

	[Token(Token = "0x600048E")]
	[Address(RVA = "0x10107B4", Offset = "0x10107B4", VA = "0x10107B4", Slot = "5")]
	public override void End(PlayerBase player)
	{
	}

	[Token(Token = "0x600048F")]
	[Address(RVA = "0x101091C", Offset = "0x101091C", VA = "0x101091C")]
	protected DebugFreeCamera_XR()
	{
	}
}
[Token(Token = "0x200006A")]
public abstract class DebugFreeCamera_FlatScreen : DebugFreeCamera_Base
{
	[Token(Token = "0x40002C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Dictionary<GameObject, bool> originalChildActiveStatus;

	[Token(Token = "0x6000490")]
	[Address(RVA = "0x1010930", Offset = "0x1010930", VA = "0x1010930", Slot = "6")]
	public override void ProcessInput(PlayerBase player, float deltaTime)
	{
	}

	[Token(Token = "0x6000491")]
	[Address(RVA = "0x1010CEC", Offset = "0x1010CEC", VA = "0x1010CEC", Slot = "4")]
	public override void Begin(PlayerBase player)
	{
	}

	[Token(Token = "0x6000492")]
	[Address(RVA = "0x1010F9C", Offset = "0x1010F9C", VA = "0x1010F9C", Slot = "5")]
	public override void End(PlayerBase player)
	{
	}

	[Token(Token = "0x6000493")]
	[Address(RVA = "0x10112A0", Offset = "0x10112A0", VA = "0x10112A0")]
	protected DebugFreeCamera_FlatScreen()
	{
	}
}
[Token(Token = "0x200006B")]
public class DebugFreeCamera : DebugFreeCamera_XR
{
	[Token(Token = "0x6000494")]
	[Address(RVA = "0x1011334", Offset = "0x1011334", VA = "0x1011334")]
	public DebugFreeCamera()
	{
	}
}
[Token(Token = "0x200006C")]
public class ProjectRadioLogger : Team17.Common.ILogger
{
	[Token(Token = "0x6000495")]
	[Address(RVA = "0x1011348", Offset = "0x1011348", VA = "0x1011348")]
	public ProjectRadioLogger()
	{
	}

	[Token(Token = "0x6000496")]
	[Address(RVA = "0x1011350", Offset = "0x1011350", VA = "0x1011350", Slot = "4")]
	public void Log(object log)
	{
	}

	[Token(Token = "0x6000497")]
	[Address(RVA = "0x1011470", Offset = "0x1011470", VA = "0x1011470", Slot = "5")]
	public void LogWarning(object log)
	{
	}

	[Token(Token = "0x6000498")]
	[Address(RVA = "0x10114D8", Offset = "0x10114D8", VA = "0x10114D8", Slot = "6")]
	public void LogError(object log)
	{
	}

	[Token(Token = "0x6000499")]
	[Address(RVA = "0x10113B8", Offset = "0x10113B8", VA = "0x10113B8")]
	private string FormatLogMessage(object log)
	{
		return null;
	}
}
[Token(Token = "0x200006D")]
public class RigidbodySleeper : MonoBehaviour
{
	[Token(Token = "0x600049A")]
	[Address(RVA = "0x1011540", Offset = "0x1011540", VA = "0x1011540")]
	private void Start()
	{
	}

	[Token(Token = "0x600049B")]
	[Address(RVA = "0x10115B8", Offset = "0x10115B8", VA = "0x10115B8")]
	public RigidbodySleeper()
	{
	}
}
[Token(Token = "0x200006E")]
public class FactMeshEnabler : MonoBehaviour, IInitialisable
{
	[Token(Token = "0x40002C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private FactAsset _factAsset;

	[Token(Token = "0x40002C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private MeshRenderer _meshRenderer;

	[Token(Token = "0x600049C")]
	[Address(RVA = "0x10115C0", Offset = "0x10115C0", VA = "0x10115C0", Slot = "4")]
	public bool Initialise()
	{
		return default(bool);
	}

	[Token(Token = "0x600049D")]
	[Address(RVA = "0x101178C", Offset = "0x101178C", VA = "0x101178C")]
	public FactMeshEnabler()
	{
	}
}
[Token(Token = "0x200006F")]
public class OfficeChair : UpdatableMonoBehaviour
{
	[Token(Token = "0x40002CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private EventReference _squeakEventReference;

	[Token(Token = "0x40002CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Rigidbody _rigidBody;

	[Token(Token = "0x40002CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float _prevAngularVelocity;

	[Token(Token = "0x40002CD")]
	private const float _kVelocityChangeThreshold = 1f;

	[Token(Token = "0x600049E")]
	[Address(RVA = "0x1011794", Offset = "0x1011794", VA = "0x1011794", Slot = "6")]
	public override bool Initialise()
	{
		return default(bool);
	}

	[Token(Token = "0x600049F")]
	[Address(RVA = "0x1011898", Offset = "0x1011898", VA = "0x1011898", Slot = "7")]
	public override void OnUpdate(float dt)
	{
	}

	[Token(Token = "0x60004A0")]
	[Address(RVA = "0x1011A2C", Offset = "0x1011A2C", VA = "0x1011A2C")]
	public OfficeChair()
	{
	}
}
[Token(Token = "0x2000070")]
public enum WalkThroughDoorVariation
{
	[Token(Token = "0x40002CF")]
	NONE,
	[Token(Token = "0x40002D0")]
	PUSH_LEFT,
	[Token(Token = "0x40002D1")]
	PUSH_RIGHT,
	[Token(Token = "0x40002D2")]
	PULL_LEFT,
	[Token(Token = "0x40002D3")]
	PULL_RIGHT,
	[Token(Token = "0x40002D4")]
	COUNT
}
[Token(Token = "0x2000071")]
public enum ActionStringHandle
{
	[Token(Token = "0x40002D6")]
	NONE = 0,
	[Token(Token = "0x40002D7")]
	ADJUST_VOLUME_CARTRIDGE_PLAYER = 56,
	[Token(Token = "0x40002D8")]
	ADJUST_VOLUME_EXTERNAL = 57,
	[Token(Token = "0x40002D9")]
	ADJUST_VOLUME_MICROPHONE = 59,
	[Token(Token = "0x40002DA")]
	ADJUST_VOLUME_PHONE = 58,
	[Token(Token = "0x40002DB")]
	ADJUST_VOLUME_TURNTABLE_1 = 60,
	[Token(Token = "0x40002DC")]
	ADJUST_VOLUME_TURNTABLE_2 = 55,
	[Token(Token = "0x40002DD")]
	ADJUST_VOLUMES = 61,
	[Token(Token = "0x40002DE")]
	ANSWER_LINE_1 = 32,
	[Token(Token = "0x40002DF")]
	ANSWER_LINE_2 = 33,
	[Token(Token = "0x40002E0")]
	ANSWER_LINE_3 = 34,
	[Token(Token = "0x40002E1")]
	CHANGE_CARTRIDGE = 41,
	[Token(Token = "0x40002E2")]
	CHANGE_RECORD = 42,
	[Token(Token = "0x40002E3")]
	CHANGE_VOLUMES = 38,
	[Token(Token = "0x40002E4")]
	CHECK_OUT_CARTRIDGES = 37,
	[Token(Token = "0x40002E5")]
	CHECK_OUT_PINBOARD = 36,
	[Token(Token = "0x40002E6")]
	CLOSE_RECORD_DRAWER = 1,
	[Token(Token = "0x40002E7")]
	DROP = 2,
	[Token(Token = "0x40002E8")]
	ENTER_CARTRIDGE_RACK = 3,
	[Token(Token = "0x40002E9")]
	ENTER_CONSOLE_MIXER = 4,
	[Token(Token = "0x40002EA")]
	ENTER_PINBOARD = 5,
	[Token(Token = "0x40002EB")]
	EXIT_CARTRIDGE_RACK = 6,
	[Token(Token = "0x40002EC")]
	EXIT_CONSOLE_MIXER = 7,
	[Token(Token = "0x40002ED")]
	EXIT_PINBOARD = 8,
	[Token(Token = "0x40002EE")]
	GO_BACK = 35,
	[Token(Token = "0x40002EF")]
	INSERT_CARTRIDGE_INTO_PLAYER = 9,
	[Token(Token = "0x40002F0")]
	INSERT_RECORD_INTO_PLAYER = 10,
	[Token(Token = "0x40002F1")]
	INSPECT = 11,
	[Token(Token = "0x40002F2")]
	KICK = 12,
	[Token(Token = "0x40002F3")]
	MOVE_SLIDER = 30,
	[Token(Token = "0x40002F4")]
	MUTE_CARTRIDGE_PLAYER = 43,
	[Token(Token = "0x40002F5")]
	MUTE_EXTERNAL = 47,
	[Token(Token = "0x40002F6")]
	MUTE_MICROPHONE = 51,
	[Token(Token = "0x40002F7")]
	MUTE_PHONE = 49,
	[Token(Token = "0x40002F8")]
	MUTE_TURNTABLE_1 = 45,
	[Token(Token = "0x40002F9")]
	MUTE_TURNTABLE_2 = 53,
	[Token(Token = "0x40002FA")]
	OPEN_DOOR_AND_ENTER = 13,
	[Token(Token = "0x40002FB")]
	OPEN_RECORD_DRAWER = 14,
	[Token(Token = "0x40002FC")]
	PICK_UP = 15,
	[Token(Token = "0x40002FD")]
	PLACE = 16,
	[Token(Token = "0x40002FE")]
	PLAY = 17,
	[Token(Token = "0x40002FF")]
	PRESS_BUTTON = 18,
	[Token(Token = "0x4000300")]
	SIT_DOWN = 20,
	[Token(Token = "0x4000301")]
	STAND_UP = 21,
	[Token(Token = "0x4000302")]
	STOP = 22,
	[Token(Token = "0x4000303")]
	STOW = 23,
	[Token(Token = "0x4000304")]
	SWAP_CARTRIDGE = 40,
	[Token(Token = "0x4000305")]
	SWAP_IN_INVENTORY = 62,
	[Token(Token = "0x4000306")]
	SWAP_RECORD = 39,
	[Token(Token = "0x4000307")]
	SWITCH_OFF = 24,
	[Token(Token = "0x4000308")]
	SWITCH_ON = 25,
	[Token(Token = "0x4000309")]
	TAKE_OUT_CARTRIDGE_FROM_PLAYER = 26,
	[Token(Token = "0x400030A")]
	TAKE_OUT_RECORD_FROM_PLAYER = 27,
	[Token(Token = "0x400030B")]
	THROW = 28,
	[Token(Token = "0x400030C")]
	UNLOCK = 29,
	[Token(Token = "0x400030D")]
	UNMUTE_CARTRIDGE_PLAYER = 44,
	[Token(Token = "0x400030E")]
	UNMUTE_EXTERNAL = 48,
	[Token(Token = "0x400030F")]
	UNMUTE_MICROPHONE = 52,
	[Token(Token = "0x4000310")]
	UNMUTE_PHONE = 50,
	[Token(Token = "0x4000311")]
	UNMUTE_TURNTABLE_1 = 46,
	[Token(Token = "0x4000312")]
	UNMUTE_TURNTABLE_2 = 54,
	[Token(Token = "0x4000313")]
	UNSTOW_ITEM = 19,
	[Token(Token = "0x4000314")]
	ZOOM = 31
}
[Token(Token = "0x2000072")]
public enum ObjectStringHandle
{
	[Token(Token = "0x4000316")]
	NONE = 0,
	[Token(Token = "0x4000317")]
	BALL = 14,
	[Token(Token = "0x4000318")]
	BOX = 13,
	[Token(Token = "0x4000319")]
	CARTRIDGE = 3,
	[Token(Token = "0x400031A")]
	CARTRIDGE_PLAYER = 7,
	[Token(Token = "0x400031B")]
	CARTRIDGE_RACK = 6,
	[Token(Token = "0x400031C")]
	CHAIR = 1,
	[Token(Token = "0x400031D")]
	DOOR = 12,
	[Token(Token = "0x400031E")]
	KEY = 16,
	[Token(Token = "0x400031F")]
	MIXER = 11,
	[Token(Token = "0x4000320")]
	PHONE = 9,
	[Token(Token = "0x4000321")]
	PIN = 10,
	[Token(Token = "0x4000322")]
	PIN_BOARD = 4,
	[Token(Token = "0x4000323")]
	RECORD = 2,
	[Token(Token = "0x4000324")]
	RECORD_DRAWER = 5,
	[Token(Token = "0x4000325")]
	RECORD_PLAYER = 8,
	[Token(Token = "0x4000326")]
	SLIDER = 15
}
[Token(Token = "0x2000073")]
[RequireComponent(typeof(Variables))]
public class AssignMainCameraToBoltVariable : MonoBehaviour, IInitialisable
{
	[Token(Token = "0x4000327")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private string _variableName;

	[Token(Token = "0x4000328")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private List<GameObject> _rootGameObjects;

	[Token(Token = "0x4000329")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Variables _variables;

	[Token(Token = "0x60004A1")]
	[Address(RVA = "0x1011A34", Offset = "0x1011A34", VA = "0x1011A34", Slot = "4")]
	public bool Initialise()
	{
		return default(bool);
	}

	[Token(Token = "0x60004A2")]
	[Address(RVA = "0x1011B10", Offset = "0x1011B10", VA = "0x1011B10")]
	private Camera GetMainCameraInScene()
	{
		return null;
	}

	[Token(Token = "0x60004A3")]
	[Address(RVA = "0x1011C7C", Offset = "0x1011C7C", VA = "0x1011C7C")]
	public AssignMainCameraToBoltVariable()
	{
	}
}
[Token(Token = "0x2000074")]
[UnitCategory("RadioEvents")]
public sealed class OnEnterGameplayUnit : GlobalEventUnit<EmptyEventArgs>
{
	[Token(Token = "0x17000055")]
	protected override string hookName
	{
		[Token(Token = "0x60004A4")]
		[Address(RVA = "0x1011D30", Offset = "0x1011D30", VA = "0x1011D30", Slot = "94")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60004A5")]
	[Address(RVA = "0x1011D70", Offset = "0x1011D70", VA = "0x1011D70")]
	public OnEnterGameplayUnit()
	{
	}
}
[Token(Token = "0x2000075")]
public class DemoSceneLoader : MonoBehaviour
{
	[Token(Token = "0x60004A6")]
	[Address(RVA = "0x1011DB8", Offset = "0x1011DB8", VA = "0x1011DB8")]
	public DemoSceneLoader()
	{
	}
}
[Token(Token = "0x2000076")]
public class LoadProgress
{
	[Token(Token = "0x400032A")]
	public const float c_totalLoadingProgress = 100f;

	[Token(Token = "0x400032B")]
	private const float c_loadingProgressZero = 0f;

	[Token(Token = "0x400032C")]
	private const float c_loadingTransitionStateProgress = 5f;

	[Token(Token = "0x400032D")]
	private const float c_unloadingAllSceneStatesProgress = 10f;

	[Token(Token = "0x400032E")]
	private const float c_loadingSceneStateProgress = 50f;

	[Token(Token = "0x400032F")]
	private const float c_populatingSceneStateProgress = 75f;

	[Token(Token = "0x4000330")]
	private const float c_settingUpSceneStateProgress = 100f;

	[Token(Token = "0x4000331")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private float _loadProgress;

	[Token(Token = "0x4000332")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private AsyncSceneLoader _asyncOp;

	[Token(Token = "0x4000333")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int _totalLoads;

	[Token(Token = "0x4000334")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private int _loadCounter;

	[Token(Token = "0x17000056")]
	public static LoadProgress none
	{
		[Token(Token = "0x60004A7")]
		[Address(RVA = "0x1011DC0", Offset = "0x1011DC0", VA = "0x1011DC0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000057")]
	public float LoadingProgress
	{
		[Token(Token = "0x60004A8")]
		[Address(RVA = "0x1011DC8", Offset = "0x1011DC8", VA = "0x1011DC8")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x60004A9")]
	[Address(RVA = "0x1011E28", Offset = "0x1011E28", VA = "0x1011E28")]
	public void LoadingProgressZero()
	{
	}

	[Token(Token = "0x60004AA")]
	[Address(RVA = "0x1011E30", Offset = "0x1011E30", VA = "0x1011E30")]
	public void LoadingTransitionState()
	{
	}

	[Token(Token = "0x60004AB")]
	[Address(RVA = "0x1011E3C", Offset = "0x1011E3C", VA = "0x1011E3C")]
	public void UnloadingAllSceneStates()
	{
	}

	[Token(Token = "0x60004AC")]
	[Address(RVA = "0x1011E48", Offset = "0x1011E48", VA = "0x1011E48")]
	public void LoadingSceneState(int loadCounter, int totalLoads, AsyncSceneLoader currentSceneOperation)
	{
	}

	[Token(Token = "0x60004AD")]
	[Address(RVA = "0x1011E7C", Offset = "0x1011E7C", VA = "0x1011E7C")]
	public void PopulatingSceneState()
	{
	}

	[Token(Token = "0x60004AE")]
	[Address(RVA = "0x1011E88", Offset = "0x1011E88", VA = "0x1011E88")]
	public void SettingUpSceneState()
	{
	}

	[Token(Token = "0x60004AF")]
	[Address(RVA = "0x1011E94", Offset = "0x1011E94", VA = "0x1011E94")]
	public LoadProgress()
	{
	}
}
[Token(Token = "0x2000077")]
internal class ActivityTransitionState : State<GameStateContext>
{
	[Token(Token = "0x2000078")]
	private enum TransitionStatus
	{
		[Token(Token = "0x400033D")]
		kPending,
		[Token(Token = "0x400033E")]
		kLoadSlot,
		[Token(Token = "0x400033F")]
		kNewGame,
		[Token(Token = "0x4000340")]
		kAbort
	}

	[Token(Token = "0x4000335")]
	private const int kNotSet = -1;

	[Token(Token = "0x4000336")]
	private const float kFadeTimeInSecs = 1f;

	[Token(Token = "0x4000337")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Type _previousState;

	[Token(Token = "0x4000338")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private string _pendingActivity;

	[Token(Token = "0x4000339")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private int _activityIntentSlot;

	[Token(Token = "0x400033A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private TransitionStatus _status;

	[Token(Token = "0x400033B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private TransitionStatus _nextStatus;

	[Token(Token = "0x60004B0")]
	[Address(RVA = "0x1011E9C", Offset = "0x1011E9C", VA = "0x1011E9C", Slot = "10")]
	public override bool OnStart(float fTimeStep, Type previousState)
	{
		return default(bool);
	}

	[Token(Token = "0x60004B1")]
	[Address(RVA = "0x10120D4", Offset = "0x10120D4", VA = "0x10120D4", Slot = "12")]
	public override bool OnStop(float fTimeStep, Type nextState)
	{
		return default(bool);
	}

	[Token(Token = "0x60004B2")]
	[Address(RVA = "0x10120DC", Offset = "0x10120DC", VA = "0x10120DC", Slot = "11")]
	public override Type UpdateState(float fTimeStep)
	{
		return null;
	}

	[Token(Token = "0x60004B3")]
	[Address(RVA = "0x1012508", Offset = "0x1012508", VA = "0x1012508")]
	private void StartNewGame()
	{
	}

	[Token(Token = "0x60004B4")]
	[Address(RVA = "0x1012658", Offset = "0x1012658", VA = "0x1012658")]
	private void CancelNewGame()
	{
	}

	[Token(Token = "0x60004B5")]
	[Address(RVA = "0x1012664", Offset = "0x1012664", VA = "0x1012664")]
	public ActivityTransitionState()
	{
	}
}
[Token(Token = "0x2000079")]
public class AnimatedSequenceState : State<GameStateContext>
{
	[Token(Token = "0x60004B7")]
	[Address(RVA = "0x10126C4", Offset = "0x10126C4", VA = "0x10126C4", Slot = "10")]
	public override bool OnStart(float fTimeStep, Type previousState)
	{
		return default(bool);
	}

	[Token(Token = "0x60004B8")]
	[Address(RVA = "0x1012820", Offset = "0x1012820", VA = "0x1012820", Slot = "11")]
	public override Type UpdateState(float fTimeStep)
	{
		return null;
	}

	[Token(Token = "0x60004B9")]
	[Address(RVA = "0x1012B68", Offset = "0x1012B68", VA = "0x1012B68", Slot = "12")]
	public override bool OnStop(float fTimeStep, Type nextState)
	{
		return default(bool);
	}

	[Token(Token = "0x60004BA")]
	[Address(RVA = "0x1012CC0", Offset = "0x1012CC0", VA = "0x1012CC0")]
	public AnimatedSequenceState()
	{
	}
}
[Token(Token = "0x200007A")]
public class BootState : State<GameStateContext>
{
	[Token(Token = "0x4000341")]
	private const string c_bootSceneName = "SCN_Boot";

	[Token(Token = "0x60004BB")]
	[Address(RVA = "0x1012D08", Offset = "0x1012D08", VA = "0x1012D08", Slot = "10")]
	public override bool OnStart(float fTimeStep, Type previousState)
	{
		return default(bool);
	}

	[Token(Token = "0x60004BC")]
	[Address(RVA = "0x1012FC4", Offset = "0x1012FC4", VA = "0x1012FC4", Slot = "11")]
	public override Type UpdateState(float fTimeStep)
	{
		return null;
	}

	[Token(Token = "0x60004BD")]
	[Address(RVA = "0x10131C4", Offset = "0x10131C4", VA = "0x10131C4", Slot = "12")]
	public override bool OnStop(float fTimeStep, Type nextState)
	{
		return default(bool);
	}

	[Token(Token = "0x60004BE")]
	[Address(RVA = "0x10131CC", Offset = "0x10131CC", VA = "0x10131CC")]
	public BootState()
	{
	}
}
[Token(Token = "0x200007B")]
internal class ControllerDisconnectedState : State<GameStateContext>
{
	[Token(Token = "0x4000342")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Type _previousState;

	[Token(Token = "0x4000343")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private DialogueBoxId _dialogId;

	[Token(Token = "0x60004BF")]
	[Address(RVA = "0x1013214", Offset = "0x1013214", VA = "0x1013214", Slot = "10")]
	public override bool OnStart(float fTimeStep, Type previousState)
	{
		return default(bool);
	}

	[Token(Token = "0x60004C0")]
	[Address(RVA = "0x10133E8", Offset = "0x10133E8", VA = "0x10133E8", Slot = "12")]
	public override bool OnStop(float fTimeStep, Type nextState)
	{
		return default(bool);
	}

	[Token(Token = "0x60004C1")]
	[Address(RVA = "0x101350C", Offset = "0x101350C", VA = "0x101350C", Slot = "11")]
	public override Type UpdateState(float fTimeStep)
	{
		return null;
	}

	[Token(Token = "0x60004C2")]
	[Address(RVA = "0x1013670", Offset = "0x1013670", VA = "0x1013670")]
	public ControllerDisconnectedState()
	{
	}
}
[Token(Token = "0x200007C")]
public class DeleteSaveState : State<GameStateContext>
{
	[Token(Token = "0x4000344")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private float _minimumDisplayTime;

	[Token(Token = "0x4000345")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private DialogueBoxId _saveDialogueId;

	[Token(Token = "0x4000346")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float _startTime;

	[Token(Token = "0x60004C3")]
	[Address(RVA = "0x10136B8", Offset = "0x10136B8", VA = "0x10136B8", Slot = "10")]
	public override bool OnStart(float fTimeStep, Type previousState)
	{
		return default(bool);
	}

	[Token(Token = "0x60004C4")]
	[Address(RVA = "0x10138D8", Offset = "0x10138D8", VA = "0x10138D8", Slot = "12")]
	public override bool OnStop(float fTimeStep, Type nextState)
	{
		return default(bool);
	}

	[Token(Token = "0x60004C5")]
	[Address(RVA = "0x1013994", Offset = "0x1013994", VA = "0x1013994", Slot = "11")]
	public override Type UpdateState(float fTimeStep)
	{
		return null;
	}

	[Token(Token = "0x60004C6")]
	[Address(RVA = "0x1013B98", Offset = "0x1013B98", VA = "0x1013B98")]
	public DeleteSaveState()
	{
	}
}
[Token(Token = "0x200007D")]
public class EngagementActivityTransitionState : EngagementState
{
	[Token(Token = "0x4000347")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private IDeviceId _primaryUserDevice;

	[Token(Token = "0x60004C7")]
	[Address(RVA = "0x1013BE0", Offset = "0x1013BE0", VA = "0x1013BE0", Slot = "10")]
	public override bool OnStart(float fTimeStep, Type previousState)
	{
		return default(bool);
	}

	[Token(Token = "0x60004C8")]
	[Address(RVA = "0x1013F74", Offset = "0x1013F74", VA = "0x1013F74", Slot = "11")]
	public override Type UpdateState(float fTimeStep)
	{
		return null;
	}

	[Token(Token = "0x60004C9")]
	[Address(RVA = "0x10143DC", Offset = "0x10143DC", VA = "0x10143DC", Slot = "13")]
	protected override void OnBeginEngage()
	{
	}

	[Token(Token = "0x60004CA")]
	[Address(RVA = "0x10144A8", Offset = "0x10144A8", VA = "0x10144A8")]
	public EngagementActivityTransitionState()
	{
	}
}
[Token(Token = "0x200007E")]
public class EngagementAutomatedTestingState : EngagementState
{
	[Token(Token = "0x4000348")]
	private const int c_DummyId = 0;

	[Token(Token = "0x60004CB")]
	[Address(RVA = "0x10144F4", Offset = "0x10144F4", VA = "0x10144F4", Slot = "13")]
	protected override void OnBeginEngage()
	{
	}

	[Token(Token = "0x60004CC")]
	[Address(RVA = "0x10145E0", Offset = "0x10145E0", VA = "0x10145E0", Slot = "14")]
	protected override Type SetupNextState()
	{
		return null;
	}

	[Token(Token = "0x60004CD")]
	[Address(RVA = "0x10146A0", Offset = "0x10146A0", VA = "0x10146A0")]
	public EngagementAutomatedTestingState()
	{
	}
}
[Token(Token = "0x200007F")]
public class EngagementState : State<GameStateContext>
{
	[Token(Token = "0x2000080")]
	protected enum State
	{
		[Token(Token = "0x400034E")]
		init,
		[Token(Token = "0x400034F")]
		engage,
		[Token(Token = "0x4000350")]
		engaging,
		[Token(Token = "0x4000351")]
		engaged,
		[Token(Token = "0x4000352")]
		idle
	}

	[Token(Token = "0x4000349")]
	private const string kEngagementStateSceneName = "SCN_Engagement";

	[Token(Token = "0x400034A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	protected State _internalState;

	[Token(Token = "0x400034B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private IDeviceId _primaryUserDevice;

	[Token(Token = "0x400034C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private EngagementScreen _engagementScreen;

	[Token(Token = "0x60004CE")]
	[Address(RVA = "0x1013C5C", Offset = "0x1013C5C", VA = "0x1013C5C", Slot = "10")]
	public override bool OnStart(float fTimeStep, Type previousState)
	{
		return default(bool);
	}

	[Token(Token = "0x60004CF")]
	[Address(RVA = "0x10146A4", Offset = "0x10146A4", VA = "0x10146A4", Slot = "12")]
	public override bool OnStop(float fTimeStep, Type nextState)
	{
		return default(bool);
	}

	[Token(Token = "0x60004D0")]
	[Address(RVA = "0x1014044", Offset = "0x1014044", VA = "0x1014044", Slot = "11")]
	public override Type UpdateState(float fTimeStep)
	{
		return null;
	}

	[Token(Token = "0x60004D1")]
	[Address(RVA = "0x101449C", Offset = "0x101449C", VA = "0x101449C", Slot = "13")]
	protected virtual void OnBeginEngage()
	{
	}

	[Token(Token = "0x60004D2")]
	[Address(RVA = "0x10147C0", Offset = "0x10147C0", VA = "0x10147C0", Slot = "14")]
	protected virtual Type SetupNextState()
	{
		return null;
	}

	[Token(Token = "0x60004D3")]
	[Address(RVA = "0x101482C", Offset = "0x101482C", VA = "0x101482C")]
	private void OnPrimaryUserEngaged()
	{
	}

	[Token(Token = "0x60004D4")]
	[Address(RVA = "0x10144AC", Offset = "0x10144AC", VA = "0x10144AC")]
	public EngagementState()
	{
	}
}
[Token(Token = "0x2000081")]
public class FadingSequenceState : State<GameStateContext>
{
	[Token(Token = "0x2000082")]
	private enum FadingSequenceStates
	{
		[Token(Token = "0x400035C")]
		FadingIn,
		[Token(Token = "0x400035D")]
		FullyFadedIn,
		[Token(Token = "0x400035E")]
		Unfading,
		[Token(Token = "0x400035F")]
		Idle
	}

	[Token(Token = "0x4000353")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private FadingSequenceStates _currentFadingSequenceState;

	[Token(Token = "0x4000354")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	protected FadeConfig _fadeConfig;

	[Token(Token = "0x4000355")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private float _stepRemainingTime;

	[Token(Token = "0x4000356")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private FadeEffectControllerBase _visionFader;

	[Token(Token = "0x4000357")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private GameplayFadeEffectController _graphicsFader;

	[Token(Token = "0x4000358")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private Canvas _faderCanvas;

	[Token(Token = "0x4000359")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private Image _graphicsImage;

	[Token(Token = "0x400035A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private ActionManager _actionManager;

	[Token(Token = "0x60004D5")]
	[Address(RVA = "0x1014944", Offset = "0x1014944", VA = "0x1014944", Slot = "10")]
	public override bool OnStart(float fTimeStep, Type previousState)
	{
		return default(bool);
	}

	[Token(Token = "0x60004D6")]
	[Address(RVA = "0x1014D30", Offset = "0x1014D30", VA = "0x1014D30", Slot = "13")]
	protected virtual FadeEffectControllerBase GetVisionFader()
	{
		return null;
	}

	[Token(Token = "0x60004D7")]
	[Address(RVA = "0x1014D94", Offset = "0x1014D94", VA = "0x1014D94", Slot = "14")]
	protected virtual FadeConfig GetFadeConfig()
	{
		return default(FadeConfig);
	}

	[Token(Token = "0x60004D8")]
	[Address(RVA = "0x1014E78", Offset = "0x1014E78", VA = "0x1014E78", Slot = "12")]
	public override bool OnStop(float fTimeStep, Type nextState)
	{
		return default(bool);
	}

	[Token(Token = "0x60004D9")]
	[Address(RVA = "0x101502C", Offset = "0x101502C", VA = "0x101502C", Slot = "11")]
	public override Type UpdateState(float fTimeStep)
	{
		return null;
	}

	[Token(Token = "0x60004DA")]
	[Address(RVA = "0x1015870", Offset = "0x1015870", VA = "0x1015870", Slot = "15")]
	protected virtual bool IsReadyToStartUnfade()
	{
		return default(bool);
	}

	[Token(Token = "0x60004DB")]
	[Address(RVA = "0x10154E8", Offset = "0x10154E8", VA = "0x10154E8")]
	private void RecenterFaderCanvas()
	{
	}

	[Token(Token = "0x60004DC")]
	[Address(RVA = "0x1015880", Offset = "0x1015880", VA = "0x1015880")]
	public FadingSequenceState()
	{
	}
}
[Token(Token = "0x2000083")]
public class GamePausedState : GameplayStateBase
{
	[Token(Token = "0x4000360")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Type _returnState;

	[Token(Token = "0x60004DD")]
	[Address(RVA = "0x10158C8", Offset = "0x10158C8", VA = "0x10158C8", Slot = "10")]
	public override bool OnStart(float fTimeStep, Type previousState)
	{
		return default(bool);
	}

	[Token(Token = "0x60004DE")]
	[Address(RVA = "0x1015ECC", Offset = "0x1015ECC", VA = "0x1015ECC", Slot = "12")]
	public override bool OnStop(float fTimeStep, Type nextState)
	{
		return default(bool);
	}

	[Token(Token = "0x60004DF")]
	[Address(RVA = "0x1015B80", Offset = "0x1015B80", VA = "0x1015B80")]
	private bool ShouldStopWorldUpdates()
	{
		return default(bool);
	}

	[Token(Token = "0x60004E0")]
	[Address(RVA = "0x1015C40", Offset = "0x1015C40", VA = "0x1015C40")]
	private void StopWorldUpdates()
	{
	}

	[Token(Token = "0x60004E1")]
	[Address(RVA = "0x101607C", Offset = "0x101607C", VA = "0x101607C")]
	private void RestartWorldUpdates()
	{
	}

	[Token(Token = "0x60004E2")]
	[Address(RVA = "0x1016274", Offset = "0x1016274", VA = "0x1016274", Slot = "11")]
	public override Type UpdateState(float fTimeStep)
	{
		return null;
	}

	[Token(Token = "0x60004E3")]
	[Address(RVA = "0x1016C44", Offset = "0x1016C44", VA = "0x1016C44", Slot = "14")]
	protected override void PreLoad()
	{
	}

	[Token(Token = "0x60004E4")]
	[Address(RVA = "0x1016F38", Offset = "0x1016F38", VA = "0x1016F38", Slot = "13")]
	protected override void PreSave()
	{
	}

	[Token(Token = "0x60004E5")]
	[Address(RVA = "0x1015EB4", Offset = "0x1015EB4", VA = "0x1015EB4")]
	private void InitMenuData()
	{
	}

	[Token(Token = "0x60004E6")]
	[Address(RVA = "0x10170AC", Offset = "0x10170AC", VA = "0x10170AC")]
	private void SetLoadMenuSlot()
	{
	}

	[Token(Token = "0x60004E7")]
	[Address(RVA = "0x1016DB8", Offset = "0x1016DB8", VA = "0x1016DB8")]
	private void SetSaveMenuSlot()
	{
	}

	[Token(Token = "0x60004E8")]
	[Address(RVA = "0x1016C5C", Offset = "0x1016C5C", VA = "0x1016C5C")]
	private void SetSlotFromLoadMenu()
	{
	}

	[Token(Token = "0x60004E9")]
	[Address(RVA = "0x1016F50", Offset = "0x1016F50", VA = "0x1016F50")]
	private void SetSlotFromSaveMenu()
	{
	}

	[Token(Token = "0x60004EA")]
	[Address(RVA = "0x101722C", Offset = "0x101722C", VA = "0x101722C")]
	public GamePausedState()
	{
	}
}
[Token(Token = "0x2000084")]
public class GameplayState : GameplayStateBase
{
	[Token(Token = "0x60004EB")]
	[Address(RVA = "0x1017278", Offset = "0x1017278", VA = "0x1017278", Slot = "10")]
	public override bool OnStart(float fTimeStep, Type previousState)
	{
		return default(bool);
	}

	[Token(Token = "0x60004EC")]
	[Address(RVA = "0x10175B8", Offset = "0x10175B8", VA = "0x10175B8", Slot = "11")]
	public override Type UpdateState(float fTimeStep)
	{
		return null;
	}

	[Token(Token = "0x60004ED")]
	[Address(RVA = "0x1017A1C", Offset = "0x1017A1C", VA = "0x1017A1C", Slot = "12")]
	public override bool OnStop(float fTimeStep, Type nextState)
	{
		return default(bool);
	}

	[Token(Token = "0x60004EE")]
	[Address(RVA = "0x1017C0C", Offset = "0x1017C0C", VA = "0x1017C0C")]
	public GameplayState()
	{
	}
}
[Token(Token = "0x2000085")]
public abstract class GameplayStateBase : State<GameStateContext>
{
	[Token(Token = "0x60004EF")]
	[Address(RVA = "0x1017C10", Offset = "0x1017C10", VA = "0x1017C10", Slot = "13")]
	protected virtual void PreSave()
	{
	}

	[Token(Token = "0x60004F0")]
	[Address(RVA = "0x1017C14", Offset = "0x1017C14", VA = "0x1017C14", Slot = "14")]
	protected virtual void PreLoad()
	{
	}

	[Token(Token = "0x60004F1")]
	[Address(RVA = "0x1016730", Offset = "0x1016730", VA = "0x1016730")]
	protected void UpdateSaveIndicator()
	{
	}

	[Token(Token = "0x60004F2")]
	[Address(RVA = "0x1016800", Offset = "0x1016800", VA = "0x1016800")]
	protected Type HandleLoadSaveGame()
	{
		return null;
	}

	[Token(Token = "0x60004F3")]
	[Address(RVA = "0x1016A00", Offset = "0x1016A00", VA = "0x1016A00")]
	protected Type HandleChangeLevel()
	{
		return null;
	}

	[Token(Token = "0x60004F4")]
	[Address(RVA = "0x1015E38", Offset = "0x1015E38", VA = "0x1015E38")]
	protected void EnableDebugInput(bool state)
	{
	}

	[Token(Token = "0x60004F5")]
	[Address(RVA = "0x1017230", Offset = "0x1017230", VA = "0x1017230")]
	protected GameplayStateBase()
	{
	}
}
[Token(Token = "0x2000086")]
public class GameStateContext : StateContextInformation
{
	[Token(Token = "0x4000361")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Type preferredNextState;

	[Token(Token = "0x4000362")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Scene bootScene;

	[Token(Token = "0x4000363")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Scene transitionScene;

	[Token(Token = "0x4000364")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<Scene> gameplayScenes;

	[Token(Token = "0x4000365")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int mainGameplaySceneIndex;

	[Token(Token = "0x4000366")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public TransitionConfig loadTransitionConfig;

	[Token(Token = "0x4000367")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public LoadProgress loadProgress;

	[Token(Token = "0x4000368")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public WorldServices world;

	[Token(Token = "0x4000369")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public PlayerBase player;

	[Token(Token = "0x400036A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Camera camera;

	[Token(Token = "0x400036B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public IUser user;

	[Token(Token = "0x400036C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public BlackboardManifest defaultBlackboardState;

	[Token(Token = "0x400036D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public NarrativeState narrativeState;

	[Token(Token = "0x400036E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public int activeSaveSlot;

	[Token(Token = "0x400036F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public MetadataSerialisation.Metadata metadata;

	[Token(Token = "0x4000370")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public MetadataSerialiser metadataSerialiser;

	[Token(Token = "0x4000371")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public ScreenshotSerialiser screenshotSerialiser;

	[Token(Token = "0x4000372")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public MetadataDeserialiser metadataDeserialiser;

	[Token(Token = "0x4000373")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public ScreenshotDeserialiser screenshotDeserialiser;

	[Token(Token = "0x17000058")]
	public Scene mainGameplayScene
	{
		[Token(Token = "0x60004F6")]
		[Address(RVA = "0x1013144", Offset = "0x1013144", VA = "0x1013144")]
		get
		{
			return default(Scene);
		}
	}

	[Token(Token = "0x60004F7")]
	[Address(RVA = "0x1017C18", Offset = "0x1017C18", VA = "0x1017C18")]
	public GameStateContext()
	{
	}
}
[Token(Token = "0x2000087")]
public class IdentState : State<GameStateContext>
{
	[Token(Token = "0x4000374")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static List<GameObject> s_tempRootGameObjects;

	[Token(Token = "0x4000375")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private IdentScreen _identScreen;

	[Token(Token = "0x60004F8")]
	[Address(RVA = "0x1017CAC", Offset = "0x1017CAC", VA = "0x1017CAC", Slot = "10")]
	public override bool OnStart(float fTimeStep, Type previousState)
	{
		return default(bool);
	}

	[Token(Token = "0x60004F9")]
	[Address(RVA = "0x1017EBC", Offset = "0x1017EBC", VA = "0x1017EBC", Slot = "11")]
	public override Type UpdateState(float fTimeStep)
	{
		return null;
	}

	[Token(Token = "0x60004FA")]
	[Address(RVA = "0x10181F8", Offset = "0x10181F8", VA = "0x10181F8", Slot = "12")]
	public override bool OnStop(float fTimeStep, Type nextState)
	{
		return default(bool);
	}

	[Token(Token = "0x60004FB")]
	[Address(RVA = "0x1018214", Offset = "0x1018214", VA = "0x1018214")]
	public IdentState()
	{
	}
}
[Token(Token = "0x2000088")]
public class LoadAllMetadataState : State<GameStateContext>
{
	[Token(Token = "0x4000376")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private int slotIndexLoading;

	[Token(Token = "0x60004FD")]
	[Address(RVA = "0x10182F8", Offset = "0x10182F8", VA = "0x10182F8", Slot = "10")]
	public override bool OnStart(float fTimeStep, Type previousState)
	{
		return default(bool);
	}

	[Token(Token = "0x60004FE")]
	[Address(RVA = "0x1018488", Offset = "0x1018488", VA = "0x1018488", Slot = "11")]
	public override Type UpdateState(float fTimeStep)
	{
		return null;
	}

	[Token(Token = "0x60004FF")]
	[Address(RVA = "0x1018318", Offset = "0x1018318", VA = "0x1018318")]
	private void LoadSlot(int slotIndex)
	{
	}

	[Token(Token = "0x6000500")]
	[Address(RVA = "0x1018710", Offset = "0x1018710", VA = "0x1018710", Slot = "12")]
	public override bool OnStop(float fTimeStep, Type nextState)
	{
		return default(bool);
	}

	[Token(Token = "0x6000501")]
	[Address(RVA = "0x1018718", Offset = "0x1018718", VA = "0x1018718")]
	public LoadAllMetadataState()
	{
	}
}
[Token(Token = "0x2000089")]
public class LoadDataState : State<GameStateContext>
{
	[Token(Token = "0x6000502")]
	[Address(RVA = "0x1018760", Offset = "0x1018760", VA = "0x1018760", Slot = "10")]
	public override bool OnStart(float fTimeStep, Type previousState)
	{
		return default(bool);
	}

	[Token(Token = "0x6000503")]
	[Address(RVA = "0x10188C8", Offset = "0x10188C8", VA = "0x10188C8", Slot = "11")]
	public override Type UpdateState(float fTimeStep)
	{
		return null;
	}

	[Token(Token = "0x6000504")]
	[Address(RVA = "0x1018B84", Offset = "0x1018B84", VA = "0x1018B84", Slot = "12")]
	public override bool OnStop(float fTimeStep, Type nextState)
	{
		return default(bool);
	}

	[Token(Token = "0x6000505")]
	[Address(RVA = "0x1018B8C", Offset = "0x1018B8C", VA = "0x1018B8C")]
	public LoadDataState()
	{
	}
}
[Token(Token = "0x200008A")]
public class LoadEngagementSceneState : LoadTransitionSceneState
{
	[Token(Token = "0x17000059")]
	protected override string sceneName
	{
		[Token(Token = "0x6000506")]
		[Address(RVA = "0x1018BD4", Offset = "0x1018BD4", VA = "0x1018BD4", Slot = "13")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000507")]
	[Address(RVA = "0x1018C14", Offset = "0x1018C14", VA = "0x1018C14")]
	public LoadEngagementSceneState()
	{
	}
}
[Token(Token = "0x200008B")]
public class LoadGameErrorState : State<GameStateContext>
{
	[Token(Token = "0x4000377")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Type _previousState;

	[Token(Token = "0x4000378")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Type _nextState;

	[Token(Token = "0x4000379")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private SaveGameError _saveGameError;

	[Token(Token = "0x400037A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool _errorHandlerCompleted;

	[Token(Token = "0x6000508")]
	[Address(RVA = "0x1018C6C", Offset = "0x1018C6C", VA = "0x1018C6C", Slot = "10")]
	public override bool OnStart(float fTimeStep, Type previousState)
	{
		return default(bool);
	}

	[Token(Token = "0x6000509")]
	[Address(RVA = "0x1018F0C", Offset = "0x1018F0C", VA = "0x1018F0C", Slot = "12")]
	public override bool OnStop(float fTimeStep, Type nextState)
	{
		return default(bool);
	}

	[Token(Token = "0x600050A")]
	[Address(RVA = "0x1018F14", Offset = "0x1018F14", VA = "0x1018F14", Slot = "11")]
	public override Type UpdateState(float fTimeStep)
	{
		return null;
	}

	[Token(Token = "0x600050B")]
	[Address(RVA = "0x101909C", Offset = "0x101909C", VA = "0x101909C")]
	private void OnErrorHandled()
	{
	}

	[Token(Token = "0x600050C")]
	[Address(RVA = "0x1019150", Offset = "0x1019150", VA = "0x1019150")]
	public LoadGameErrorState()
	{
	}
}
[Token(Token = "0x200008C")]
public class LoadGameplaySceneState : State<GameStateContext>
{
	[Token(Token = "0x400037B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static readonly string[] ValidGameplayScenes;

	[Token(Token = "0x400037C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private string _currentSceneName;

	[Token(Token = "0x400037D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private AsyncSceneLoader _currentSceneOperation;

	[Token(Token = "0x400037E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float m_TimeAtLoadStart;

	[Token(Token = "0x400037F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private int _loadCounter;

	[Token(Token = "0x1700005A")]
	protected virtual Type _nextState
	{
		[Token(Token = "0x600050D")]
		[Address(RVA = "0x1019198", Offset = "0x1019198", VA = "0x1019198", Slot = "13")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600050E")]
	[Address(RVA = "0x1019204", Offset = "0x1019204", VA = "0x1019204", Slot = "10")]
	public override bool OnStart(float fTimeStep, Type previousState)
	{
		return default(bool);
	}

	[Token(Token = "0x600050F")]
	[Address(RVA = "0x10192AC", Offset = "0x10192AC", VA = "0x10192AC", Slot = "11")]
	public override Type UpdateState(float fTimeStep)
	{
		return null;
	}

	[Token(Token = "0x6000510")]
	[Address(RVA = "0x1019C48", Offset = "0x1019C48", VA = "0x1019C48", Slot = "12")]
	public override bool OnStop(float fTimeStep, Type nextState)
	{
		return default(bool);
	}

	[Token(Token = "0x6000511")]
	[Address(RVA = "0x10199A4", Offset = "0x10199A4", VA = "0x10199A4")]
	private bool StartNextLoad(out string sceneName, out AsyncSceneLoader loadOperation)
	{
		return default(bool);
	}

	[Token(Token = "0x6000512")]
	[Address(RVA = "0x1019D20", Offset = "0x1019D20", VA = "0x1019D20")]
	public LoadGameplaySceneState()
	{
	}
}
[Token(Token = "0x200008D")]
public class LoadIdentSceneState : LoadTransitionSceneState
{
	[Token(Token = "0x1700005B")]
	protected override string sceneName
	{
		[Token(Token = "0x6000514")]
		[Address(RVA = "0x1019EAC", Offset = "0x1019EAC", VA = "0x1019EAC", Slot = "13")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000515")]
	[Address(RVA = "0x1019EEC", Offset = "0x1019EEC", VA = "0x1019EEC")]
	public LoadIdentSceneState()
	{
	}
}
[Token(Token = "0x200008E")]
public class LoadMenuSceneState : State<GameStateContext>
{
	[Token(Token = "0x4000380")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private string _currentSceneName;

	[Token(Token = "0x4000381")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private AsyncSceneLoader _currentSceneOperation;

	[Token(Token = "0x4000382")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float m_TimeAtLoadStart;

	[Token(Token = "0x4000383")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private int _loadCounter;

	[Token(Token = "0x6000516")]
	[Address(RVA = "0x1019F44", Offset = "0x1019F44", VA = "0x1019F44", Slot = "10")]
	public override bool OnStart(float fTimeStep, Type previousState)
	{
		return default(bool);
	}

	[Token(Token = "0x6000517")]
	[Address(RVA = "0x1019FEC", Offset = "0x1019FEC", VA = "0x1019FEC", Slot = "11")]
	public override Type UpdateState(float fTimeStep)
	{
		return null;
	}

	[Token(Token = "0x6000518")]
	[Address(RVA = "0x101A8FC", Offset = "0x101A8FC", VA = "0x101A8FC", Slot = "12")]
	public override bool OnStop(float fTimeStep, Type nextState)
	{
		return default(bool);
	}

	[Token(Token = "0x6000519")]
	[Address(RVA = "0x101A650", Offset = "0x101A650", VA = "0x101A650")]
	private bool StartNextLoad(out string sceneName, out AsyncSceneLoader loadOperation)
	{
		return default(bool);
	}

	[Token(Token = "0x600051A")]
	[Address(RVA = "0x101A9D4", Offset = "0x101A9D4", VA = "0x101A9D4")]
	public LoadMenuSceneState()
	{
	}
}
[Token(Token = "0x200008F")]
public class LoadMetadataState : State<GameStateContext>
{
	[Token(Token = "0x600051B")]
	[Address(RVA = "0x101AA1C", Offset = "0x101AA1C", VA = "0x101AA1C", Slot = "10")]
	public override bool OnStart(float fTimeStep, Type previousState)
	{
		return default(bool);
	}

	[Token(Token = "0x600051C")]
	[Address(RVA = "0x101ABA8", Offset = "0x101ABA8", VA = "0x101ABA8", Slot = "11")]
	public override Type UpdateState(float fTimeStep)
	{
		return null;
	}

	[Token(Token = "0x600051D")]
	[Address(RVA = "0x101B0B4", Offset = "0x101B0B4", VA = "0x101B0B4", Slot = "12")]
	public override bool OnStop(float fTimeStep, Type nextState)
	{
		return default(bool);
	}

	[Token(Token = "0x600051E")]
	[Address(RVA = "0x101B0BC", Offset = "0x101B0BC", VA = "0x101B0BC")]
	public LoadMetadataState()
	{
	}
}
[Token(Token = "0x2000090")]
public class LoadSettingsState : State<GameStateContext>
{
	[Token(Token = "0x600051F")]
	[Address(RVA = "0x101B104", Offset = "0x101B104", VA = "0x101B104", Slot = "10")]
	public override bool OnStart(float fTimeStep, Type previousState)
	{
		return default(bool);
	}

	[Token(Token = "0x6000520")]
	[Address(RVA = "0x101B21C", Offset = "0x101B21C", VA = "0x101B21C", Slot = "11")]
	public override Type UpdateState(float fTimeStep)
	{
		return null;
	}

	[Token(Token = "0x6000521")]
	[Address(RVA = "0x101B364", Offset = "0x101B364", VA = "0x101B364", Slot = "12")]
	public override bool OnStop(float fTimeStep, Type nextState)
	{
		return default(bool);
	}

	[Token(Token = "0x6000522")]
	[Address(RVA = "0x101B36C", Offset = "0x101B36C", VA = "0x101B36C")]
	public LoadSettingsState()
	{
	}
}
[Token(Token = "0x2000091")]
public class LoadTransitionSceneState : State<GameStateContext>
{
	[Token(Token = "0x4000384")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private AsyncSceneLoader _currentSceneOperation;

	[Token(Token = "0x4000385")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float m_TimeAtLoadStart;

	[Token(Token = "0x4000386")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static List<GameObject> s_tempRootGameObjects;

	[Token(Token = "0x4000387")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private TransitionScreen _transitionScreen;

	[Token(Token = "0x1700005C")]
	protected virtual string sceneName
	{
		[Token(Token = "0x6000523")]
		[Address(RVA = "0x101B3B4", Offset = "0x101B3B4", VA = "0x101B3B4", Slot = "13")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000524")]
	[Address(RVA = "0x101B3F4", Offset = "0x101B3F4", VA = "0x101B3F4", Slot = "10")]
	public override bool OnStart(float fTimeStep, Type previousState)
	{
		return default(bool);
	}

	[Token(Token = "0x6000525")]
	[Address(RVA = "0x101B6E8", Offset = "0x101B6E8", VA = "0x101B6E8", Slot = "11")]
	public override Type UpdateState(float fTimeStep)
	{
		return null;
	}

	[Token(Token = "0x6000526")]
	[Address(RVA = "0x101BF90", Offset = "0x101BF90", VA = "0x101BF90", Slot = "12")]
	public override bool OnStop(float fTimeStep, Type nextState)
	{
		return default(bool);
	}

	[Token(Token = "0x6000527")]
	[Address(RVA = "0x101C0C8", Offset = "0x101C0C8", VA = "0x101C0C8")]
	public LoadTransitionSceneState()
	{
	}
}
[Token(Token = "0x2000092")]
public class MenuState : State<GameStateContext>
{
	[Token(Token = "0x4000388")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Type _previousState;

	[Token(Token = "0x6000529")]
	[Address(RVA = "0x101C1AC", Offset = "0x101C1AC", VA = "0x101C1AC", Slot = "10")]
	public override bool OnStart(float fTimeStep, Type previousState)
	{
		return default(bool);
	}

	[Token(Token = "0x600052A")]
	[Address(RVA = "0x101C5B8", Offset = "0x101C5B8", VA = "0x101C5B8", Slot = "11")]
	public override Type UpdateState(float fTimeStep)
	{
		return null;
	}

	[Token(Token = "0x600052B")]
	[Address(RVA = "0x101CC30", Offset = "0x101CC30", VA = "0x101CC30", Slot = "12")]
	public override bool OnStop(float fTimeStep, Type nextState)
	{
		return default(bool);
	}

	[Token(Token = "0x600052C")]
	[Address(RVA = "0x101CA64", Offset = "0x101CA64", VA = "0x101CA64")]
	private void SetSlotFromLoadMenu()
	{
	}

	[Token(Token = "0x600052D")]
	[Address(RVA = "0x101CD44", Offset = "0x101CD44", VA = "0x101CD44")]
	private void SetLoadMenuSlot()
	{
	}

	[Token(Token = "0x600052E")]
	[Address(RVA = "0x101CBC0", Offset = "0x101CBC0", VA = "0x101CBC0")]
	private void PrepareForPreloadTransition(Type preferredNextState)
	{
	}

	[Token(Token = "0x600052F")]
	[Address(RVA = "0x101C5B4", Offset = "0x101C5B4", VA = "0x101C5B4")]
	private void InitMenuData()
	{
	}

	[Token(Token = "0x6000530")]
	[Address(RVA = "0x101CEC4", Offset = "0x101CEC4", VA = "0x101CEC4")]
	public MenuState()
	{
	}
}
[Token(Token = "0x2000093")]
public class ObjectRestorationState : FadingSequenceState
{
	[Token(Token = "0x4000389")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private float startTime;

	[Token(Token = "0x6000531")]
	[Address(RVA = "0x101CF0C", Offset = "0x101CF0C", VA = "0x101CF0C", Slot = "10")]
	public override bool OnStart(float fTimeStep, Type previousState)
	{
		return default(bool);
	}

	[Token(Token = "0x6000532")]
	[Address(RVA = "0x101CFFC", Offset = "0x101CFFC", VA = "0x101CFFC", Slot = "14")]
	protected override FadeConfig GetFadeConfig()
	{
		return default(FadeConfig);
	}

	[Token(Token = "0x6000533")]
	[Address(RVA = "0x101D04C", Offset = "0x101D04C", VA = "0x101D04C", Slot = "15")]
	protected override bool IsReadyToStartUnfade()
	{
		return default(bool);
	}

	[Token(Token = "0x6000534")]
	[Address(RVA = "0x101D0B0", Offset = "0x101D0B0", VA = "0x101D0B0", Slot = "13")]
	protected override FadeEffectControllerBase GetVisionFader()
	{
		return null;
	}

	[Token(Token = "0x6000535")]
	[Address(RVA = "0x101D114", Offset = "0x101D114", VA = "0x101D114", Slot = "12")]
	public override bool OnStop(float fTimeStep, Type nextState)
	{
		return default(bool);
	}

	[Token(Token = "0x6000536")]
	[Address(RVA = "0x101D1E4", Offset = "0x101D1E4", VA = "0x101D1E4")]
	public ObjectRestorationState()
	{
	}
}
[Token(Token = "0x2000094")]
public class PopulateGameplaySceneState : State<GameStateContext>
{
	[Token(Token = "0x400038A")]
	private const int c_rootObjectsListInitialSize = 16;

	[Token(Token = "0x400038B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static List<GameObject> s_sceneRootObjects;

	[Token(Token = "0x400038C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static List<GameObject> s_tempSceneRootObjects;

	[Token(Token = "0x1700005D")]
	protected virtual Type _nextState
	{
		[Token(Token = "0x6000537")]
		[Address(RVA = "0x101D1EC", Offset = "0x101D1EC", VA = "0x101D1EC", Slot = "13")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000538")]
	[Address(RVA = "0x101D258", Offset = "0x101D258", VA = "0x101D258", Slot = "10")]
	public override bool OnStart(float fTimeStep, Type previousState)
	{
		return default(bool);
	}

	[Token(Token = "0x6000539")]
	[Address(RVA = "0x101D464", Offset = "0x101D464", VA = "0x101D464", Slot = "11")]
	public override Type UpdateState(float fTimeStep)
	{
		return null;
	}

	[Token(Token = "0x600053A")]
	[Address(RVA = "0x101D5E8", Offset = "0x101D5E8", VA = "0x101D5E8", Slot = "12")]
	public override bool OnStop(float fTimeStep, Type nextState)
	{
		return default(bool);
	}

	[Token(Token = "0x600053B")]
	[Address(RVA = "0x101D6FC", Offset = "0x101D6FC", VA = "0x101D6FC")]
	public PopulateGameplaySceneState()
	{
	}
}
[Token(Token = "0x2000095")]
public class PostLoadSceneIntroTransitionState : PostLoadSceneTransitionState
{
	[Token(Token = "0x400038D")]
	private const float c_logoFadeTimeMultiplier = 0.4f;

	[Token(Token = "0x400038E")]
	private const float c_cameraFadeTimeMultiplier = 0.6f;

	[Token(Token = "0x400038F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private GameplayFadeEffectController _logoFader;

	[Token(Token = "0x4000390")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float _cameraFadeTime;

	[Token(Token = "0x4000391")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private float _logoFadeTime;

	[Token(Token = "0x4000392")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool _startedCameraUnfade;

	[Token(Token = "0x600053D")]
	[Address(RVA = "0x101D818", Offset = "0x101D818", VA = "0x101D818", Slot = "10")]
	public override bool OnStart(float fTimeStep, Type previousState)
	{
		return default(bool);
	}

	[Token(Token = "0x600053E")]
	[Address(RVA = "0x101E144", Offset = "0x101E144", VA = "0x101E144", Slot = "11")]
	public override Type UpdateState(float fTimeStep)
	{
		return null;
	}

	[Token(Token = "0x600053F")]
	[Address(RVA = "0x101E49C", Offset = "0x101E49C", VA = "0x101E49C", Slot = "12")]
	public override bool OnStop(float fTimeStep, Type nextState)
	{
		return default(bool);
	}

	[Token(Token = "0x6000540")]
	[Address(RVA = "0x101DD5C", Offset = "0x101DD5C", VA = "0x101DD5C")]
	protected void SetupLogo(Camera camera)
	{
	}

	[Token(Token = "0x6000541")]
	[Address(RVA = "0x101E0A8", Offset = "0x101E0A8", VA = "0x101E0A8")]
	protected void StartLogoFade(float duration)
	{
	}

	[Token(Token = "0x6000542")]
	[Address(RVA = "0x101E504", Offset = "0x101E504", VA = "0x101E504", Slot = "13")]
	protected override void ResetState()
	{
	}

	[Token(Token = "0x6000543")]
	[Address(RVA = "0x101E63C", Offset = "0x101E63C", VA = "0x101E63C")]
	public PostLoadSceneIntroTransitionState()
	{
	}
}
[Token(Token = "0x2000096")]
public class PostLoadSceneTransitionState : State<GameStateContext>
{
	[Token(Token = "0x4000393")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static List<GameObject> s_tempRootGameObjects;

	[Token(Token = "0x4000394")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	protected float _remainingTime;

	[Token(Token = "0x4000395")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	protected TransitionScreen _transitionScreen;

	[Token(Token = "0x4000396")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	protected GameplayFadeEffectController _fade;

	[Token(Token = "0x6000544")]
	[Address(RVA = "0x101E6D8", Offset = "0x101E6D8", VA = "0x101E6D8", Slot = "10")]
	public override bool OnStart(float fTimeStep, Type previousState)
	{
		return default(bool);
	}

	[Token(Token = "0x6000545")]
	[Address(RVA = "0x101E76C", Offset = "0x101E76C", VA = "0x101E76C", Slot = "11")]
	public override Type UpdateState(float fTimeStep)
	{
		return null;
	}

	[Token(Token = "0x6000546")]
	[Address(RVA = "0x101E824", Offset = "0x101E824", VA = "0x101E824", Slot = "12")]
	public override bool OnStop(float fTimeStep, Type nextState)
	{
		return default(bool);
	}

	[Token(Token = "0x6000547")]
	[Address(RVA = "0x101E568", Offset = "0x101E568", VA = "0x101E568", Slot = "13")]
	protected virtual void ResetState()
	{
	}

	[Token(Token = "0x6000548")]
	[Address(RVA = "0x101D8D8", Offset = "0x101D8D8", VA = "0x101D8D8")]
	protected TransitionScreen FindTransitionScreenComponent()
	{
		return null;
	}

	[Token(Token = "0x6000549")]
	[Address(RVA = "0x101DADC", Offset = "0x101DADC", VA = "0x101DADC")]
	protected void SetupCamera()
	{
	}

	[Token(Token = "0x600054A")]
	[Address(RVA = "0x101E378", Offset = "0x101E378", VA = "0x101E378")]
	protected void StartFade(float duration)
	{
	}

	[Token(Token = "0x600054B")]
	[Address(RVA = "0x101E844", Offset = "0x101E844", VA = "0x101E844")]
	private bool ShouldFreezeTransition()
	{
		return default(bool);
	}

	[Token(Token = "0x600054C")]
	[Address(RVA = "0x101E224", Offset = "0x101E224", VA = "0x101E224")]
	protected void UpdateFade(float fTimeStep, out bool finished)
	{
	}

	[Token(Token = "0x600054D")]
	[Address(RVA = "0x101E41C", Offset = "0x101E41C", VA = "0x101E41C")]
	protected void FinishFade()
	{
	}

	[Token(Token = "0x600054E")]
	[Address(RVA = "0x101E690", Offset = "0x101E690", VA = "0x101E690")]
	public PostLoadSceneTransitionState()
	{
	}
}
[Token(Token = "0x2000097")]
public class PreLoadSceneTransitionState : State<GameStateContext>
{
	[Token(Token = "0x4000397")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float _remainingTime;

	[Token(Token = "0x6000550")]
	[Address(RVA = "0x101EAA8", Offset = "0x101EAA8", VA = "0x101EAA8", Slot = "10")]
	public override bool OnStart(float fTimeStep, Type previousState)
	{
		return default(bool);
	}

	[Token(Token = "0x6000551")]
	[Address(RVA = "0x101EBD4", Offset = "0x101EBD4", VA = "0x101EBD4", Slot = "11")]
	public override Type UpdateState(float fTimeStep)
	{
		return null;
	}

	[Token(Token = "0x6000552")]
	[Address(RVA = "0x101EC84", Offset = "0x101EC84", VA = "0x101EC84", Slot = "12")]
	public override bool OnStop(float fTimeStep, Type nextState)
	{
		return default(bool);
	}

	[Token(Token = "0x6000553")]
	[Address(RVA = "0x101EC94", Offset = "0x101EC94", VA = "0x101EC94")]
	public PreLoadSceneTransitionState()
	{
	}
}
[Token(Token = "0x2000098")]
public class SaveDataState : State<GameStateContext>
{
	[Token(Token = "0x4000398")]
	private const string kSavingDialogTitle = "Saving.Title";

	[Token(Token = "0x4000399")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float c_minSaveUIDuration;

	[Token(Token = "0x400039A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private DialogueBoxId _saveDialogId;

	[Token(Token = "0x400039B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool _manualSave;

	[Token(Token = "0x6000554")]
	[Address(RVA = "0x101ECDC", Offset = "0x101ECDC", VA = "0x101ECDC", Slot = "10")]
	public override bool OnStart(float fTimeStep, Type previousState)
	{
		return default(bool);
	}

	[Token(Token = "0x6000555")]
	[Address(RVA = "0x101F37C", Offset = "0x101F37C", VA = "0x101F37C", Slot = "11")]
	public override Type UpdateState(float fTimeStep)
	{
		return null;
	}

	[Token(Token = "0x6000556")]
	[Address(RVA = "0x101F624", Offset = "0x101F624", VA = "0x101F624")]
	private Type HandleFailedToSave()
	{
		return null;
	}

	[Token(Token = "0x6000557")]
	[Address(RVA = "0x101F6F4", Offset = "0x101F6F4", VA = "0x101F6F4", Slot = "12")]
	public override bool OnStop(float fTimeStep, Type nextState)
	{
		return default(bool);
	}

	[Token(Token = "0x6000558")]
	[Address(RVA = "0x101F858", Offset = "0x101F858", VA = "0x101F858")]
	public SaveDataState()
	{
	}
}
[Token(Token = "0x2000099")]
public class SaveGameErrorState : State<GameStateContext>
{
	[Token(Token = "0x400039C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Type _nextState;

	[Token(Token = "0x400039D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private SaveGameError _saveGameError;

	[Token(Token = "0x400039E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool _errorHandlerCompleted;

	[Token(Token = "0x6000559")]
	[Address(RVA = "0x101F8A8", Offset = "0x101F8A8", VA = "0x101F8A8", Slot = "10")]
	public override bool OnStart(float fTimeStep, Type previousState)
	{
		return default(bool);
	}

	[Token(Token = "0x600055A")]
	[Address(RVA = "0x101FBB4", Offset = "0x101FBB4", VA = "0x101FBB4", Slot = "12")]
	public override bool OnStop(float fTimeStep, Type nextState)
	{
		return default(bool);
	}

	[Token(Token = "0x600055B")]
	[Address(RVA = "0x101FBBC", Offset = "0x101FBBC", VA = "0x101FBBC", Slot = "11")]
	public override Type UpdateState(float fTimeStep)
	{
		return null;
	}

	[Token(Token = "0x600055C")]
	[Address(RVA = "0x101FDA4", Offset = "0x101FDA4", VA = "0x101FDA4")]
	private void OnErrorHandled()
	{
	}

	[Token(Token = "0x600055D")]
	[Address(RVA = "0x101FE58", Offset = "0x101FE58", VA = "0x101FE58")]
	public SaveGameErrorState()
	{
	}
}
[Token(Token = "0x200009A")]
public class SaveSettingsState : State<GameStateContext>
{
	[Token(Token = "0x400039F")]
	private const string kSavingDialogTitle = "Saving.Title";

	[Token(Token = "0x40003A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float c_minSaveUIDuration;

	[Token(Token = "0x40003A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private DialogueBoxId _saveDialogId;

	[Token(Token = "0x600055E")]
	[Address(RVA = "0x101FEA0", Offset = "0x101FEA0", VA = "0x101FEA0", Slot = "10")]
	public override bool OnStart(float fTimeStep, Type previousState)
	{
		return default(bool);
	}

	[Token(Token = "0x600055F")]
	[Address(RVA = "0x10201E4", Offset = "0x10201E4", VA = "0x10201E4", Slot = "11")]
	public override Type UpdateState(float fTimeStep)
	{
		return null;
	}

	[Token(Token = "0x6000560")]
	[Address(RVA = "0x1020414", Offset = "0x1020414", VA = "0x1020414", Slot = "12")]
	public override bool OnStop(float fTimeStep, Type nextState)
	{
		return default(bool);
	}

	[Token(Token = "0x6000561")]
	[Address(RVA = "0x10204F8", Offset = "0x10204F8", VA = "0x10204F8")]
	public SaveSettingsState()
	{
	}
}
[Token(Token = "0x200009B")]
public class SetupGameplaySceneState : State<GameStateContext>
{
	[Token(Token = "0x40003A2")]
	private const int c_rootObjectsListInitialSize = 16;

	[Token(Token = "0x40003A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static List<GameObject> s_sceneRootObjects;

	[Token(Token = "0x40003A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static List<GameObject> s_tempSceneRootObjects;

	[Token(Token = "0x1700005E")]
	protected virtual Type _nextState
	{
		[Token(Token = "0x6000562")]
		[Address(RVA = "0x1020548", Offset = "0x1020548", VA = "0x1020548", Slot = "13")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000563")]
	[Address(RVA = "0x10205B4", Offset = "0x10205B4", VA = "0x10205B4", Slot = "10")]
	public override bool OnStart(float fTimeStep, Type previousState)
	{
		return default(bool);
	}

	[Token(Token = "0x6000564")]
	[Address(RVA = "0x1020608", Offset = "0x1020608", VA = "0x1020608", Slot = "11")]
	public override Type UpdateState(float fTimeStep)
	{
		return null;
	}

	[Token(Token = "0x6000565")]
	[Address(RVA = "0x1020CE0", Offset = "0x1020CE0", VA = "0x1020CE0", Slot = "12")]
	public override bool OnStop(float fTimeStep, Type nextState)
	{
		return default(bool);
	}

	[Token(Token = "0x6000566")]
	[Address(RVA = "0x1020DD0", Offset = "0x1020DD0", VA = "0x1020DD0")]
	public SetupGameplaySceneState()
	{
	}
}
[Token(Token = "0x200009C")]
public class SetupMenuSceneState : State<GameStateContext>
{
	[Token(Token = "0x40003A5")]
	private const int c_rootObjectsListInitialSize = 16;

	[Token(Token = "0x40003A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static List<GameObject> s_sceneRootObjects;

	[Token(Token = "0x40003A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static List<GameObject> s_tempSceneRootObjects;

	[Token(Token = "0x6000568")]
	[Address(RVA = "0x1020EEC", Offset = "0x1020EEC", VA = "0x1020EEC", Slot = "10")]
	public override bool OnStart(float fTimeStep, Type previousState)
	{
		return default(bool);
	}

	[Token(Token = "0x6000569")]
	[Address(RVA = "0x1021160", Offset = "0x1021160", VA = "0x1021160", Slot = "11")]
	public override Type UpdateState(float fTimeStep)
	{
		return null;
	}

	[Token(Token = "0x600056A")]
	[Address(RVA = "0x10216CC", Offset = "0x10216CC", VA = "0x10216CC", Slot = "12")]
	public override bool OnStop(float fTimeStep, Type nextState)
	{
		return default(bool);
	}

	[Token(Token = "0x600056B")]
	[Address(RVA = "0x10217BC", Offset = "0x10217BC", VA = "0x10217BC")]
	public SetupMenuSceneState()
	{
	}
}
[Token(Token = "0x200009D")]
public class SetupSaveSystemState : State<GameStateContext>
{
	[Token(Token = "0x600056D")]
	[Address(RVA = "0x10218D8", Offset = "0x10218D8", VA = "0x10218D8", Slot = "10")]
	public override bool OnStart(float fTimeStep, Type previousState)
	{
		return default(bool);
	}

	[Token(Token = "0x600056E")]
	[Address(RVA = "0x1021A2C", Offset = "0x1021A2C", VA = "0x1021A2C", Slot = "11")]
	public override Type UpdateState(float fTimeStep)
	{
		return null;
	}

	[Token(Token = "0x600056F")]
	[Address(RVA = "0x1021E40", Offset = "0x1021E40", VA = "0x1021E40", Slot = "12")]
	public override bool OnStop(float fTimeStep, Type nextState)
	{
		return default(bool);
	}

	[Token(Token = "0x6000570")]
	[Address(RVA = "0x1021E48", Offset = "0x1021E48", VA = "0x1021E48")]
	public SetupSaveSystemState()
	{
	}
}
[Token(Token = "0x200009E")]
public class UnloadAllScenesState : State<GameStateContext>
{
	[Token(Token = "0x40003A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private List<AsyncOperation> _unloadOperations;

	[Token(Token = "0x40003A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private AsyncOperation _unloadAssetsOp;

	[Token(Token = "0x6000571")]
	[Address(RVA = "0x1021E90", Offset = "0x1021E90", VA = "0x1021E90", Slot = "10")]
	public override bool OnStart(float fTimeStep, Type previousState)
	{
		return default(bool);
	}

	[Token(Token = "0x6000572")]
	[Address(RVA = "0x10223F0", Offset = "0x10223F0", VA = "0x10223F0", Slot = "11")]
	public override Type UpdateState(float fTimeStep)
	{
		return null;
	}

	[Token(Token = "0x6000573")]
	[Address(RVA = "0x102280C", Offset = "0x102280C", VA = "0x102280C", Slot = "12")]
	public override bool OnStop(float fTimeStep, Type nextState)
	{
		return default(bool);
	}

	[Token(Token = "0x6000574")]
	[Address(RVA = "0x10228C8", Offset = "0x10228C8", VA = "0x10228C8")]
	public UnloadAllScenesState()
	{
	}
}
[Token(Token = "0x200009F")]
public class UnloadTransitionSceneState : State<GameStateContext>
{
	[Token(Token = "0x40003AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private AsyncOperation _currentSceneOperation;

	[Token(Token = "0x6000575")]
	[Address(RVA = "0x1022968", Offset = "0x1022968", VA = "0x1022968", Slot = "10")]
	public override bool OnStart(float fTimeStep, Type previousState)
	{
		return default(bool);
	}

	[Token(Token = "0x6000576")]
	[Address(RVA = "0x1022A24", Offset = "0x1022A24", VA = "0x1022A24", Slot = "11")]
	public override Type UpdateState(float fTimeStep)
	{
		return null;
	}

	[Token(Token = "0x6000577")]
	[Address(RVA = "0x1022DE4", Offset = "0x1022DE4", VA = "0x1022DE4", Slot = "12")]
	public override bool OnStop(float fTimeStep, Type nextState)
	{
		return default(bool);
	}

	[Token(Token = "0x6000578")]
	[Address(RVA = "0x1022E4C", Offset = "0x1022E4C", VA = "0x1022E4C")]
	public UnloadTransitionSceneState()
	{
	}
}
[Token(Token = "0x20000A0")]
public class WaitForTransitionSceneState : State<GameStateContext>
{
	[Token(Token = "0x40003AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static List<GameObject> s_tempRootGameObjects;

	[Token(Token = "0x40003AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private TransitionScreen _transitionScreen;

	[Token(Token = "0x6000579")]
	[Address(RVA = "0x1022E94", Offset = "0x1022E94", VA = "0x1022E94", Slot = "10")]
	public override bool OnStart(float fTimeStep, Type previousState)
	{
		return default(bool);
	}

	[Token(Token = "0x600057A")]
	[Address(RVA = "0x10230A4", Offset = "0x10230A4", VA = "0x10230A4", Slot = "11")]
	public override Type UpdateState(float fTimeStep)
	{
		return null;
	}

	[Token(Token = "0x600057B")]
	[Address(RVA = "0x1023388", Offset = "0x1023388", VA = "0x1023388", Slot = "12")]
	public override bool OnStop(float fTimeStep, Type nextState)
	{
		return default(bool);
	}

	[Token(Token = "0x600057C")]
	[Address(RVA = "0x10233A4", Offset = "0x10233A4", VA = "0x10233A4")]
	public WaitForTransitionSceneState()
	{
	}
}
[Token(Token = "0x20000A1")]
public class TestingSceneLoader : MonoBehaviour
{
	[Token(Token = "0x600057E")]
	[Address(RVA = "0x1023488", Offset = "0x1023488", VA = "0x1023488")]
	public TestingSceneLoader()
	{
	}
}
[Token(Token = "0x20000A2")]
public abstract class UpdatableMonoBehaviour : MonoBehaviour, IInitialisable, IUpdatable
{
	[Token(Token = "0x40003AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool _initialised;

	[Token(Token = "0x600057F")]
	[Address(RVA = "0x1023490", Offset = "0x1023490", VA = "0x1023490", Slot = "6")]
	public virtual bool Initialise()
	{
		return default(bool);
	}

	[Token(Token = "0x6000580")]
	public abstract void OnUpdate(float dt);

	[Token(Token = "0x6000581")]
	[Address(RVA = "0x10234A4", Offset = "0x10234A4", VA = "0x10234A4", Slot = "8")]
	protected virtual void OnEnable()
	{
	}

	[Token(Token = "0x6000582")]
	[Address(RVA = "0x1023588", Offset = "0x1023588", VA = "0x1023588", Slot = "9")]
	protected virtual void OnDisable()
	{
	}

	[Token(Token = "0x6000583")]
	[Address(RVA = "0x102366C", Offset = "0x102366C", VA = "0x102366C", Slot = "10")]
	protected virtual void OnDestroy()
	{
	}

	[Token(Token = "0x6000584")]
	[Address(RVA = "0x102374C", Offset = "0x102374C", VA = "0x102374C")]
	protected UpdatableMonoBehaviour()
	{
	}
}
[Token(Token = "0x20000A3")]
public class AlleywayFogEffectController : MonoBehaviour
{
	[Token(Token = "0x40003AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly int FOG_DISTANCE_PARAM;

	[Token(Token = "0x40003AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	private static readonly int FOG_COLOR_PARAM;

	[Token(Token = "0x40003B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static readonly int NOISE_PARAM;

	[Token(Token = "0x40003B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private static readonly int FOG_SCALE_PARAM;

	[Token(Token = "0x40003B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Shader[] ShadersToReplace;

	[Token(Token = "0x40003B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Shader OutsideLitShader;

	[Token(Token = "0x40003B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[Tooltip("X=Fog Near\r\nY=Fog Far\r\nZ=Fog Height\r\nW=Fog Speed")]
	public Vector4 FogData;

	[Token(Token = "0x40003B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Color FogColor;

	[Token(Token = "0x40003B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float FogScale;

	[Token(Token = "0x40003B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Texture2D NoiseTex;

	[Token(Token = "0x6000585")]
	[Address(RVA = "0x1023754", Offset = "0x1023754", VA = "0x1023754")]
	private void Start()
	{
	}

	[Token(Token = "0x6000586")]
	[Address(RVA = "0x1023758", Offset = "0x1023758", VA = "0x1023758")]
	private void Setup()
	{
	}

	[Token(Token = "0x6000587")]
	[Address(RVA = "0x10237AC", Offset = "0x10237AC", VA = "0x10237AC")]
	private void SwapMaterials(MeshRenderer[] renderers)
	{
	}

	[Token(Token = "0x6000588")]
	[Address(RVA = "0x1023AC8", Offset = "0x1023AC8", VA = "0x1023AC8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000589")]
	[Address(RVA = "0x1023A10", Offset = "0x1023A10", VA = "0x1023A10")]
	private bool IsReplaceable(Shader shader)
	{
		return default(bool);
	}

	[Token(Token = "0x600058A")]
	[Address(RVA = "0x1023B7C", Offset = "0x1023B7C", VA = "0x1023B7C")]
	public AlleywayFogEffectController()
	{
	}
}
[Token(Token = "0x20000A4")]
public abstract class FadeEffectControllerBase : MonoBehaviour, IInitialisable
{
	[Token(Token = "0x20000A5")]
	protected class Timer
	{
		[Token(Token = "0x40003BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private float startTime;

		[Token(Token = "0x40003BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Func<float> getCurrentTimeFunc;

		[Token(Token = "0x60005A1")]
		[Address(RVA = "0x1023DAC", Offset = "0x1023DAC", VA = "0x1023DAC")]
		public Timer(Func<float> getCurrentTimeFunc)
		{
		}

		[Token(Token = "0x60005A2")]
		[Address(RVA = "0x10242B0", Offset = "0x10242B0", VA = "0x10242B0")]
		public void RecordStartTime()
		{
		}

		[Token(Token = "0x60005A3")]
		[Address(RVA = "0x102426C", Offset = "0x102426C", VA = "0x102426C")]
		public float GetTimeSinceStart()
		{
			return default(float);
		}
	}

	[Token(Token = "0x20000A6")]
	public enum State
	{
		[Token(Token = "0x40003C0")]
		Unset = -1,
		[Token(Token = "0x40003C1")]
		Unfaded,
		[Token(Token = "0x40003C2")]
		Faded,
		[Token(Token = "0x40003C3")]
		Fading,
		[Token(Token = "0x40003C4")]
		UnFading
	}

	[Token(Token = "0x40003B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private FadeEffectEndpoint fadeEffectEndpoint;

	[Token(Token = "0x40003B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Timer timer;

	[Token(Token = "0x40003BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private State state;

	[Token(Token = "0x40003BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float fadeDuration;

	[Token(Token = "0x40003BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool initialised;

	[Token(Token = "0x600058C")]
	protected abstract float GetCurrentTime();

	[Token(Token = "0x600058D")]
	[Address(RVA = "0x1023C88", Offset = "0x1023C88", VA = "0x1023C88", Slot = "6")]
	public virtual bool Initialise()
	{
		return default(bool);
	}

	[Token(Token = "0x600058E")]
	[Address(RVA = "0x1023D64", Offset = "0x1023D64", VA = "0x1023D64")]
	private void Awake()
	{
	}

	[Token(Token = "0x600058F")]
	[Address(RVA = "0x1023D74", Offset = "0x1023D74", VA = "0x1023D74")]
	private void Start()
	{
	}

	[Token(Token = "0x6000590")]
	[Address(RVA = "0x1023CA4", Offset = "0x1023CA4", VA = "0x1023CA4")]
	private void DoInitialisation()
	{
	}

	[Token(Token = "0x6000591")]
	[Address(RVA = "0x1023D88", Offset = "0x1023D88", VA = "0x1023D88")]
	private void ReturnToDefaultState()
	{
	}

	[Token(Token = "0x6000592")]
	[Address(RVA = "0x101EBBC", Offset = "0x101EBBC", VA = "0x101EBBC")]
	public void BeginFade(float duration)
	{
	}

	[Token(Token = "0x6000593")]
	[Address(RVA = "0x101E4EC", Offset = "0x101E4EC", VA = "0x101E4EC")]
	public void BeginUnfade(float duration)
	{
	}

	[Token(Token = "0x6000594")]
	[Address(RVA = "0x101E4BC", Offset = "0x101E4BC", VA = "0x101E4BC")]
	public void SetToFaded()
	{
	}

	[Token(Token = "0x6000595")]
	[Address(RVA = "0x102404C", Offset = "0x102404C", VA = "0x102404C")]
	protected void SetEndpointFadeValue(float newFade)
	{
	}

	[Token(Token = "0x6000596")]
	[Address(RVA = "0x1024068", Offset = "0x1024068", VA = "0x1024068", Slot = "7")]
	protected virtual void Update()
	{
	}

	[Token(Token = "0x6000597")]
	[Address(RVA = "0x10241B0", Offset = "0x10241B0", VA = "0x10241B0")]
	protected bool TryGetRequestedFade(out float requestedFade)
	{
		return default(bool);
	}

	[Token(Token = "0x6000598")]
	[Address(RVA = "0x10240AC", Offset = "0x10240AC", VA = "0x10240AC")]
	private float CalculateCurrentProgressValue()
	{
		return default(float);
	}

	[Token(Token = "0x6000599")]
	[Address(RVA = "0x1024128", Offset = "0x1024128", VA = "0x1024128")]
	private void UpdateFadingProgress(float progress)
	{
	}

	[Token(Token = "0x600059A")]
	[Address(RVA = "0x102416C", Offset = "0x102416C", VA = "0x102416C")]
	private void UpdateUnfadingProgress(float progress)
	{
	}

	[Token(Token = "0x600059B")]
	[Address(RVA = "0x10242A0", Offset = "0x10242A0", VA = "0x10242A0")]
	private bool IsChangeDone(float progress)
	{
		return default(bool);
	}

	[Token(Token = "0x600059C")]
	[Address(RVA = "0x1023F64", Offset = "0x1023F64", VA = "0x1023F64")]
	private bool CanStartFading()
	{
		return default(bool);
	}

	[Token(Token = "0x600059D")]
	[Address(RVA = "0x1023FD4", Offset = "0x1023FD4", VA = "0x1023FD4")]
	private bool CanStartUnfading()
	{
		return default(bool);
	}

	[Token(Token = "0x600059E")]
	[Address(RVA = "0x1023F78", Offset = "0x1023F78", VA = "0x1023F78")]
	private void StartFading(float duration)
	{
	}

	[Token(Token = "0x600059F")]
	[Address(RVA = "0x1023FF0", Offset = "0x1023FF0", VA = "0x1023FF0")]
	private void StartUnfading(float duration)
	{
	}

	[Token(Token = "0x60005A0")]
	[Address(RVA = "0x10242E0", Offset = "0x10242E0", VA = "0x10242E0")]
	protected FadeEffectControllerBase()
	{
	}
}
[Token(Token = "0x20000A7")]
public class FadeEffectEndpoint : MonoBehaviour, IInitialisable
{
	[Token(Token = "0x20000A8")]
	private struct Request
	{
		[Token(Token = "0x40003C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public UnityEngine.Object requester;

		[Token(Token = "0x40003CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float value;
	}

	[Token(Token = "0x40003C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly int FADE_PARAM;

	[Token(Token = "0x40003C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private List<Request> requests;

	[Token(Token = "0x40003C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float currentValue;

	[Token(Token = "0x40003C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Material material;

	[Token(Token = "0x60005A4")]
	[Address(RVA = "0x10242F0", Offset = "0x10242F0", VA = "0x10242F0")]
	private void Awake()
	{
	}

	[Token(Token = "0x60005A5")]
	[Address(RVA = "0x1024408", Offset = "0x1024408", VA = "0x1024408", Slot = "4")]
	public bool Initialise()
	{
		return default(bool);
	}

	[Token(Token = "0x60005A6")]
	[Address(RVA = "0x10242F4", Offset = "0x10242F4", VA = "0x10242F4")]
	private void Init()
	{
	}

	[Token(Token = "0x60005A7")]
	[Address(RVA = "0x1023DDC", Offset = "0x1023DDC", VA = "0x1023DDC")]
	public void RequestFade(UnityEngine.Object requester, float value)
	{
	}

	[Token(Token = "0x60005A8")]
	[Address(RVA = "0x102441C", Offset = "0x102441C", VA = "0x102441C")]
	private bool TryFindRequestIdForRequester(UnityEngine.Object requester, out int requestId)
	{
		return default(bool);
	}

	[Token(Token = "0x60005A9")]
	[Address(RVA = "0x10241D4", Offset = "0x10241D4", VA = "0x10241D4")]
	public bool TryGetRequestValue(UnityEngine.Object requester, out float value)
	{
		return default(bool);
	}

	[Token(Token = "0x60005AA")]
	[Address(RVA = "0x1024534", Offset = "0x1024534", VA = "0x1024534")]
	private float CalculateOverallFade()
	{
		return default(float);
	}

	[Token(Token = "0x60005AB")]
	[Address(RVA = "0x1024508", Offset = "0x1024508", VA = "0x1024508")]
	private void RefreshFade()
	{
	}

	[Token(Token = "0x60005AC")]
	[Address(RVA = "0x10245D0", Offset = "0x10245D0", VA = "0x10245D0")]
	private void SetFade(float newValue)
	{
	}

	[Token(Token = "0x60005AD")]
	[Address(RVA = "0x1024674", Offset = "0x1024674", VA = "0x1024674")]
	public FadeEffectEndpoint()
	{
	}
}
[Token(Token = "0x20000A9")]
[RequireComponent(typeof(Camera))]
public class FlatScreenPostProcessing : MonoBehaviour
{
	[Token(Token = "0x40003CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Camera Camera;

	[Token(Token = "0x60005AF")]
	[Address(RVA = "0x1024770", Offset = "0x1024770", VA = "0x1024770")]
	private void Start()
	{
	}

	[Token(Token = "0x60005B0")]
	[Address(RVA = "0x1024854", Offset = "0x1024854", VA = "0x1024854")]
	private void Update()
	{
	}

	[Token(Token = "0x60005B1")]
	[Address(RVA = "0x1024858", Offset = "0x1024858", VA = "0x1024858")]
	public FlatScreenPostProcessing()
	{
	}
}
[Token(Token = "0x20000AA")]
public class GameplayFadeEffectController : FadeEffectControllerBase, IPausableObject
{
	[Token(Token = "0x40003CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	private bool _gameIsPaused;

	[Token(Token = "0x40003CD")]
	private const float _maxFadeForPauseInVR = 0.5f;

	[Token(Token = "0x40003CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float _fadeValueBeforeAdjustment;

	[Token(Token = "0x40003CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool _fadeValueAdjusted;

	[Token(Token = "0x60005B2")]
	[Address(RVA = "0x1024860", Offset = "0x1024860", VA = "0x1024860", Slot = "6")]
	public override bool Initialise()
	{
		return default(bool);
	}

	[Token(Token = "0x60005B3")]
	[Address(RVA = "0x10248A4", Offset = "0x10248A4", VA = "0x10248A4", Slot = "8")]
	public void OnPaused(bool paused)
	{
	}

	[Token(Token = "0x60005B4")]
	[Address(RVA = "0x1024918", Offset = "0x1024918", VA = "0x1024918", Slot = "5")]
	protected override float GetCurrentTime()
	{
		return default(float);
	}

	[Token(Token = "0x60005B5")]
	[Address(RVA = "0x10249B8", Offset = "0x10249B8", VA = "0x10249B8", Slot = "7")]
	protected override void Update()
	{
	}

	[Token(Token = "0x60005B6")]
	[Address(RVA = "0x10249C8", Offset = "0x10249C8", VA = "0x10249C8")]
	public GameplayFadeEffectController()
	{
	}
}
[Token(Token = "0x20000AB")]
[DisallowMultipleComponent]
public class OcclusionOutlineSwitch : MonoBehaviour, IInitialisable
{
	[Token(Token = "0x40003D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[ReadOnly]
	public Occludee occludee;

	[Token(Token = "0x40003D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[ReadOnly]
	public Renderer myRenderer;

	[Token(Token = "0x60005B7")]
	[Address(RVA = "0x10249D8", Offset = "0x10249D8", VA = "0x10249D8", Slot = "4")]
	public bool Initialise()
	{
		return default(bool);
	}

	[Token(Token = "0x60005B8")]
	[Address(RVA = "0x1024A00", Offset = "0x1024A00", VA = "0x1024A00")]
	public void OnDestroy()
	{
	}

	[Token(Token = "0x60005B9")]
	[Address(RVA = "0x1024A88", Offset = "0x1024A88", VA = "0x1024A88")]
	public void ShowOrHideOutline(bool show)
	{
	}

	[Token(Token = "0x60005BA")]
	[Address(RVA = "0x1024AA8", Offset = "0x1024AA8", VA = "0x1024AA8")]
	public OcclusionOutlineSwitch()
	{
	}
}
[Token(Token = "0x20000AC")]
public class OnAirEffectController : UpdatableMonoBehaviour
{
	[Token(Token = "0x40003D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private FactAssetBool _fact;

	[Token(Token = "0x40003D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private GameObject[] _enableObjects;

	[Token(Token = "0x40003D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Blackboard _blackboard;

	[Token(Token = "0x40003D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool _isOnAir;

	[Token(Token = "0x40003D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static int s_onAirShaderProperty;

	[Token(Token = "0x40003D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	private static int s_powerShaderProperty;

	[Token(Token = "0x60005BB")]
	[Address(RVA = "0x1024AB0", Offset = "0x1024AB0", VA = "0x1024AB0")]
	static OnAirEffectController()
	{
	}

	[Token(Token = "0x60005BC")]
	[Address(RVA = "0x1024B4C", Offset = "0x1024B4C", VA = "0x1024B4C", Slot = "6")]
	public override bool Initialise()
	{
		return default(bool);
	}

	[Token(Token = "0x60005BD")]
	[Address(RVA = "0x1024DE0", Offset = "0x1024DE0", VA = "0x1024DE0", Slot = "7")]
	public override void OnUpdate(float dt)
	{
	}

	[Token(Token = "0x60005BE")]
	[Address(RVA = "0x1024CA0", Offset = "0x1024CA0", VA = "0x1024CA0")]
	private void ApplyEffect()
	{
	}

	[Token(Token = "0x60005BF")]
	[Address(RVA = "0x1024E28", Offset = "0x1024E28", VA = "0x1024E28")]
	public OnAirEffectController()
	{
	}
}
[Token(Token = "0x20000AD")]
public class OutlineManager : MonoBehaviour
{
	[Token(Token = "0x40003D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private OcclusionService occlusionService;

	[Token(Token = "0x60005C0")]
	[Address(RVA = "0x1024E30", Offset = "0x1024E30", VA = "0x1024E30")]
	public void Initialise(OcclusionService occlusionService)
	{
	}

	[Token(Token = "0x60005C1")]
	[Address(RVA = "0x1024E38", Offset = "0x1024E38", VA = "0x1024E38")]
	public void OnStartUp()
	{
	}

	[Token(Token = "0x60005C2")]
	[Address(RVA = "0x1024EC4", Offset = "0x1024EC4", VA = "0x1024EC4")]
	public void OnCleanUp()
	{
	}

	[Token(Token = "0x60005C3")]
	[Address(RVA = "0x1024F50", Offset = "0x1024F50", VA = "0x1024F50")]
	public void OnUpdate(float deltaTime)
	{
	}

	[Token(Token = "0x60005C4")]
	[Address(RVA = "0x1024F54", Offset = "0x1024F54", VA = "0x1024F54")]
	private void OnOcclusionStatesChanged(ReadOnlyCollection<OcclusionService.VolumeStateChangeRecord> volumeStateChangedRecords, ReadOnlyCollection<OcclusionService.DynamicOccludeeStateChangeRecord> occludeeStateChangedRecords)
	{
	}

	[Token(Token = "0x60005C5")]
	[Address(RVA = "0x10250DC", Offset = "0x10250DC", VA = "0x10250DC")]
	private void ProcessOccludeesWithStateChange(ReadOnlyCollection<Occludee> occludees, OcclusionState newState)
	{
	}

	[Token(Token = "0x60005C6")]
	[Address(RVA = "0x1025188", Offset = "0x1025188", VA = "0x1025188")]
	private void ProcessOccludeeWithStateChange(Occludee occludee, OcclusionState newState)
	{
	}

	[Token(Token = "0x60005C7")]
	[Address(RVA = "0x1025310", Offset = "0x1025310", VA = "0x1025310")]
	public OutlineManager()
	{
	}
}
[Token(Token = "0x20000AE")]
public class PostProcessAdjustSettings : MonoBehaviour, IInitialisable
{
	[Token(Token = "0x40003D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private ColorAdjustments _colourAdjustments;

	[Token(Token = "0x40003DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private LiftGammaGain _liftGammaGain;

	[Token(Token = "0x40003DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Vignette _vignette;

	[Token(Token = "0x40003DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private FilmGrain _filmGrain;

	[Token(Token = "0x40003DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float _preSetDefaultPostExposure;

	[Token(Token = "0x40003DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float _preSetDefaultContrast;

	[Token(Token = "0x40003DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float _preSetDefaultGamma;

	[Token(Token = "0x40003E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private Vector4 _gamma;

	[Token(Token = "0x40003E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	[SerializeField]
	private float _BrightnessRangeMin;

	[Token(Token = "0x40003E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private float _BrightnessRangeMax;

	[Token(Token = "0x40003E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	[SerializeField]
	private float _ContrastRangeMin;

	[Token(Token = "0x40003E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private float _ContrastRangeMax;

	[Token(Token = "0x40003E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	[SerializeField]
	private float _GammaRangeMin;

	[Token(Token = "0x40003E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private float _GammaRangeMax;

	[Token(Token = "0x40003E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	[SerializeField]
	private float _BrightnessBoostOnSwitch;

	[Token(Token = "0x60005C8")]
	[Address(RVA = "0x1025318", Offset = "0x1025318", VA = "0x1025318", Slot = "5")]
	public virtual bool Initialise()
	{
		return default(bool);
	}

	[Token(Token = "0x60005C9")]
	[Address(RVA = "0x10256C4", Offset = "0x10256C4", VA = "0x10256C4")]
	private void ApplyBrightnessBoost()
	{
	}

	[Token(Token = "0x60005CA")]
	[Address(RVA = "0x10256C8", Offset = "0x10256C8", VA = "0x10256C8")]
	private void OnPostExposureChanged(float normalizedValue)
	{
	}

	[Token(Token = "0x60005CB")]
	[Address(RVA = "0x1025744", Offset = "0x1025744", VA = "0x1025744")]
	private void OnContrastChanged(float normalizedValue)
	{
	}

	[Token(Token = "0x60005CC")]
	[Address(RVA = "0x10257C0", Offset = "0x10257C0", VA = "0x10257C0")]
	private void OnGammaChanged(float normalizedValue)
	{
	}

	[Token(Token = "0x60005CD")]
	[Address(RVA = "0x1025848", Offset = "0x1025848", VA = "0x1025848")]
	private void OnVignetteEnabledChanged(bool state)
	{
	}

	[Token(Token = "0x60005CE")]
	[Address(RVA = "0x10258D0", Offset = "0x10258D0", VA = "0x10258D0")]
	private void OnFilmGrainEnabledChanged(bool state)
	{
	}

	[Token(Token = "0x60005CF")]
	[Address(RVA = "0x1025958", Offset = "0x1025958", VA = "0x1025958")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60005D0")]
	[Address(RVA = "0x1025B88", Offset = "0x1025B88", VA = "0x1025B88")]
	public PostProcessAdjustSettings()
	{
	}
}
[Token(Token = "0x20000AF")]
public class ProducerWindowEffectController : UpdatableMonoBehaviour, ICoreUpdatable, IUpdatable
{
	[Token(Token = "0x20000B0")]
	private class ObjectLayerProperty
	{
		[Token(Token = "0x40003FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public GameObject Object;

		[Token(Token = "0x60005DA")]
		[Address(RVA = "0x1026C10", Offset = "0x1026C10", VA = "0x1026C10")]
		public ObjectLayerProperty()
		{
		}
	}

	[Token(Token = "0x20000B1")]
	private class ObjectMaterialSwap
	{
		[Token(Token = "0x4000400")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public MeshRenderer Renderer;

		[Token(Token = "0x4000401")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Material[] OriginalMaterials;

		[Token(Token = "0x4000402")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Material[] NewMaterials;

		[Token(Token = "0x60005DB")]
		[Address(RVA = "0x102690C", Offset = "0x102690C", VA = "0x102690C")]
		public void SetNewMaterials()
		{
		}

		[Token(Token = "0x60005DC")]
		[Address(RVA = "0x1026930", Offset = "0x1026930", VA = "0x1026930")]
		public void SetOriginalMaterials()
		{
		}

		[Token(Token = "0x60005DD")]
		[Address(RVA = "0x1026954", Offset = "0x1026954", VA = "0x1026954")]
		public ObjectMaterialSwap()
		{
		}
	}

	[Token(Token = "0x40003E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly int WINDOW_PLANE_PARAM;

	[Token(Token = "0x40003E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	private static readonly int WINDOW_FADE_PARAM;

	[Token(Token = "0x40003EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static readonly int WINDOW_FADE_STARTCOLOR_PARAM;

	[Token(Token = "0x40003EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private static readonly int WINDOW_FADE_ENDCOLOR_PARAM;

	[Token(Token = "0x40003EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static readonly int WINDOW_GLASS_TEX_PARAM;

	[Token(Token = "0x40003ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private static readonly int WINDOW_DECAL_MATRIX_PARAM;

	[Token(Token = "0x40003EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[Header("Logic")]
	public Occludee _occludee;

	[Token(Token = "0x40003EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject DoorGameObject;

	[Token(Token = "0x40003F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[Header("Plane")]
	public Transform WindowPlaneTransform;

	[Token(Token = "0x40003F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform RoomWallsRoot;

	[Token(Token = "0x40003F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Room ProducerRoom;

	[Token(Token = "0x40003F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Transform[] Extras;

	[Token(Token = "0x40003F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[Header("Shaders")]
	public Shader ProducerRoomLitShader;

	[Token(Token = "0x40003F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[Header("Fade Distances - Near and Far")]
	public Vector2 FadeDistances;

	[Token(Token = "0x40003F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[Header("Colours")]
	public Color FadeStartColor;

	[Token(Token = "0x40003F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Color FadeEndColor;

	[Token(Token = "0x40003F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[Header("Textures")]
	public Texture2D GlassTex;

	[Token(Token = "0x40003F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[Header("Objects")]
	public GameObject[] DisableObjects;

	[Token(Token = "0x40003FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public GameObject[] EnableObjects;

	[Token(Token = "0x40003FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private StoryObjectCheckpoint DoorCheckpointComponent;

	[Token(Token = "0x40003FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private bool IsEffectEnabled;

	[Token(Token = "0x40003FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private List<GameObject> OutlineObjects;

	[Token(Token = "0x40003FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private List<ObjectMaterialSwap> MaterialSwaps;

	[Token(Token = "0x60005D1")]
	[Address(RVA = "0x1025BF8", Offset = "0x1025BF8", VA = "0x1025BF8", Slot = "6")]
	public override bool Initialise()
	{
		return default(bool);
	}

	[Token(Token = "0x60005D2")]
	[Address(RVA = "0x10268CC", Offset = "0x10268CC", VA = "0x10268CC", Slot = "7")]
	public override void OnUpdate(float dt)
	{
	}

	[Token(Token = "0x60005D3")]
	[Address(RVA = "0x10261F4", Offset = "0x10261F4", VA = "0x10261F4")]
	private bool ShouldEffectBeActive()
	{
		return default(bool);
	}

	[Token(Token = "0x60005D4")]
	[Address(RVA = "0x10266B4", Offset = "0x10266B4", VA = "0x10266B4")]
	private void UpdateShaderVars()
	{
	}

	[Token(Token = "0x60005D5")]
	[Address(RVA = "0x1026304", Offset = "0x1026304", VA = "0x1026304")]
	public void Toggle(bool enabled)
	{
	}

	[Token(Token = "0x60005D6")]
	[Address(RVA = "0x1025E60", Offset = "0x1025E60", VA = "0x1025E60")]
	private void SwapMaterials(MeshRenderer[] renderers)
	{
	}

	[Token(Token = "0x60005D7")]
	[Address(RVA = "0x102695C", Offset = "0x102695C", VA = "0x102695C")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x60005D8")]
	[Address(RVA = "0x1026AAC", Offset = "0x1026AAC", VA = "0x1026AAC")]
	public ProducerWindowEffectController()
	{
	}
}
[Token(Token = "0x20000B2")]
public class RealTimeFadeEffectController : FadeEffectControllerBase
{
	[Token(Token = "0x60005DE")]
	[Address(RVA = "0x1026C18", Offset = "0x1026C18", VA = "0x1026C18", Slot = "5")]
	protected override float GetCurrentTime()
	{
		return default(float);
	}

	[Token(Token = "0x60005DF")]
	[Address(RVA = "0x1026C20", Offset = "0x1026C20", VA = "0x1026C20")]
	public RealTimeFadeEffectController()
	{
	}
}
[Serializable]
[Token(Token = "0x20000B3")]
public class RealtimeLightManager : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x20000B4")]
	protected class RealtimeLight
	{
		[Token(Token = "0x4000406")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		public Light _light;

		[Token(Token = "0x4000407")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		public LightShadows _originalShadowType;

		[Token(Token = "0x4000408")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		public uint _volumeID;

		[Token(Token = "0x60005E7")]
		[Address(RVA = "0x1026F80", Offset = "0x1026F80", VA = "0x1026F80")]
		public void TurnOffShadow()
		{
		}

		[Token(Token = "0x60005E8")]
		[Address(RVA = "0x1026EF8", Offset = "0x1026EF8", VA = "0x1026EF8")]
		public void RestoreShadow()
		{
		}

		[Token(Token = "0x60005E9")]
		[Address(RVA = "0x1027010", Offset = "0x1027010", VA = "0x1027010")]
		public RealtimeLight()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x20000B5")]
	protected class RealtimeLightList
	{
		[Token(Token = "0x4000409")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		public RealtimeLight[] lights;

		[Token(Token = "0x60005EA")]
		[Address(RVA = "0x1027018", Offset = "0x1027018", VA = "0x1027018")]
		public RealtimeLightList()
		{
		}
	}

	[Token(Token = "0x4000403")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private RealtimeLightList[] realtimeLightTable;

	[Token(Token = "0x4000404")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private OcclusionService occlusionService;

	[Token(Token = "0x1700005F")]
	public bool IsInUse
	{
		[Token(Token = "0x60005E0")]
		[Address(RVA = "0x1026C30", Offset = "0x1026C30", VA = "0x1026C30")]
		[CompilerGenerated]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60005E1")]
		[Address(RVA = "0x1026C38", Offset = "0x1026C38", VA = "0x1026C38")]
		[CompilerGenerated]
		set
		{
		}
	}

	[Token(Token = "0x60005E2")]
	[Address(RVA = "0x1026C44", Offset = "0x1026C44", VA = "0x1026C44")]
	public void Initialise(OcclusionService occlusionService)
	{
	}

	[Token(Token = "0x60005E3")]
	[Address(RVA = "0x1026C64", Offset = "0x1026C64", VA = "0x1026C64")]
	public void OnStartUp()
	{
	}

	[Token(Token = "0x60005E4")]
	[Address(RVA = "0x1026D04", Offset = "0x1026D04", VA = "0x1026D04")]
	public void OnCleanUp()
	{
	}

	[Token(Token = "0x60005E5")]
	[Address(RVA = "0x1026DA4", Offset = "0x1026DA4", VA = "0x1026DA4")]
	private void OnOcclusionStatesChanged(ReadOnlyCollection<OcclusionService.VolumeStateChangeRecord> volumeStateChangedRecords, ReadOnlyCollection<OcclusionService.DynamicOccludeeStateChangeRecord> occludeeStateChangedRecords)
	{
	}

	[Token(Token = "0x60005E6")]
	[Address(RVA = "0x1027008", Offset = "0x1027008", VA = "0x1027008")]
	public RealtimeLightManager()
	{
	}
}
[Token(Token = "0x20000B6")]
public class EngagementScreen : MonoBehaviour
{
	[Token(Token = "0x400040A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject _interactionText;

	[Token(Token = "0x400040B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject _loadingIndicator;

	[Token(Token = "0x60005EB")]
	[Address(RVA = "0x1027020", Offset = "0x1027020", VA = "0x1027020")]
	public void ShowLoading()
	{
	}

	[Token(Token = "0x60005EC")]
	[Address(RVA = "0x1027058", Offset = "0x1027058", VA = "0x1027058")]
	public void ShowInteractionText()
	{
	}

	[Token(Token = "0x60005ED")]
	[Address(RVA = "0x1027090", Offset = "0x1027090", VA = "0x1027090")]
	public EngagementScreen()
	{
	}
}
[Token(Token = "0x20000B7")]
public class IdentScreen : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x20000B8")]
	private struct IdentScreenData
	{
		[Token(Token = "0x4000417")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		public CanvasGroup canvasGroup;

		[Token(Token = "0x4000418")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		[SerializeField]
		public float fadeInTime;

		[Token(Token = "0x4000419")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		[SerializeField]
		public float fadeOutTime;

		[Token(Token = "0x400041A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		public float holdTime;
	}

	[Token(Token = "0x20000B9")]
	[CompilerGenerated]
	private sealed class <ProcessScreens>d__18 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400041B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400041C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400041D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public IdentScreen <>4__this;

		[Token(Token = "0x400041E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int <i>5__2;

		[Token(Token = "0x400041F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private IdentScreenData <screenData>5__3;

		[Token(Token = "0x4000420")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float <alpha>5__4;

		[Token(Token = "0x4000421")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private float <fadeInSpeed>5__5;

		[Token(Token = "0x4000422")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private float <fadeOutSpeed>5__6;

		[Token(Token = "0x17000061")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60005FC")]
			[Address(RVA = "0x1027BEC", Offset = "0x1027BEC", VA = "0x1027BEC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000062")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60005FE")]
			[Address(RVA = "0x1027C34", Offset = "0x1027C34", VA = "0x1027C34", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60005F9")]
		[Address(RVA = "0x102773C", Offset = "0x102773C", VA = "0x102773C")]
		[DebuggerHidden]
		public <ProcessScreens>d__18(int <>1__state)
		{
		}

		[Token(Token = "0x60005FA")]
		[Address(RVA = "0x10278BC", Offset = "0x10278BC", VA = "0x10278BC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60005FB")]
		[Address(RVA = "0x10278C0", Offset = "0x10278C0", VA = "0x10278C0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60005FD")]
		[Address(RVA = "0x1027BF4", Offset = "0x1027BF4", VA = "0x1027BF4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400040C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private RawImage _image;

	[Token(Token = "0x400040D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private VideoPlayer _video;

	[Token(Token = "0x400040E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private EventReference _fmodAudioEvent;

	[Token(Token = "0x400040F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private RenderTextureDescriptor _renderTextureDescriptor;

	[Token(Token = "0x4000410")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private RenderTexture _renderTexture;

	[Token(Token = "0x4000411")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private AudioHandle _audioHandle;

	[Token(Token = "0x4000412")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private bool _started;

	[Token(Token = "0x4000413")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7D")]
	private bool _finished;

	[Token(Token = "0x4000414")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	private Canvas _videoCanvas;

	[Token(Token = "0x4000415")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	private GameObject _bootFlowParent;

	[Token(Token = "0x4000416")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[SerializeField]
	private IdentScreenData[] _identScreens;

	[Token(Token = "0x17000060")]
	public bool finished
	{
		[Token(Token = "0x60005EE")]
		[Address(RVA = "0x1027098", Offset = "0x1027098", VA = "0x1027098")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x60005EF")]
	[Address(RVA = "0x10270B8", Offset = "0x10270B8", VA = "0x10270B8")]
	private void Start()
	{
	}

	[Token(Token = "0x60005F0")]
	[Address(RVA = "0x10273B8", Offset = "0x10273B8", VA = "0x10273B8")]
	private void Update()
	{
	}

	[Token(Token = "0x60005F1")]
	[Address(RVA = "0x1027450", Offset = "0x1027450", VA = "0x1027450")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60005F2")]
	[Address(RVA = "0x102760C", Offset = "0x102760C", VA = "0x102760C")]
	private void VideoEndReached(VideoPlayer player)
	{
	}

	[Token(Token = "0x60005F3")]
	[Address(RVA = "0x10276C8", Offset = "0x10276C8", VA = "0x10276C8")]
	[IteratorStateMachine(typeof(<ProcessScreens>d__18))]
	private IEnumerator ProcessScreens()
	{
		return null;
	}

	[Token(Token = "0x60005F4")]
	[Address(RVA = "0x1027190", Offset = "0x1027190", VA = "0x1027190")]
	private void StartFlow()
	{
	}

	[Token(Token = "0x60005F5")]
	[Address(RVA = "0x1027764", Offset = "0x1027764", VA = "0x1027764")]
	private void OnVideoPrepared(VideoPlayer player)
	{
	}

	[Token(Token = "0x60005F6")]
	[Address(RVA = "0x1027184", Offset = "0x1027184", VA = "0x1027184")]
	private void SkipFlow()
	{
	}

	[Token(Token = "0x60005F7")]
	[Address(RVA = "0x10278A8", Offset = "0x10278A8", VA = "0x10278A8")]
	private void Finish()
	{
	}

	[Token(Token = "0x60005F8")]
	[Address(RVA = "0x10278B4", Offset = "0x10278B4", VA = "0x10278B4")]
	public IdentScreen()
	{
	}
}
[Token(Token = "0x20000BA")]
public class LoadingBar : MonoBehaviour
{
	[Token(Token = "0x4000423")]
	private const string c_loadingBarProgressShaderProperty = "_Progress";

	[Token(Token = "0x4000424")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Renderer _loadingBarRenderer;

	[Token(Token = "0x4000425")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Renderer _loadingBarMeterRenderer;

	[Token(Token = "0x4000426")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static int s_loadingBar;

	[Token(Token = "0x4000427")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static MaterialPropertyBlock s_materialBlock;

	[Token(Token = "0x60005FF")]
	[Address(RVA = "0x1027C3C", Offset = "0x1027C3C", VA = "0x1027C3C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000600")]
	[Address(RVA = "0x1027CF4", Offset = "0x1027CF4", VA = "0x1027CF4")]
	public void SetLoadingBarProgress(float progress)
	{
	}

	[Token(Token = "0x6000601")]
	[Address(RVA = "0x1027E7C", Offset = "0x1027E7C", VA = "0x1027E7C")]
	public LoadingBar()
	{
	}
}
[Token(Token = "0x20000BB")]
public class TransitionScreen : MonoBehaviour
{
	[Token(Token = "0x4000428")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameplayFadeEffectController _fadeController;

	[Token(Token = "0x4000429")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Camera _camera;

	[Token(Token = "0x400042A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private GameObject _introSpalshObject;

	[Token(Token = "0x400042B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private GameObject _neonLoadingObject;

	[Token(Token = "0x400042C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private EventReference _introSequenceTrack;

	[Token(Token = "0x400042D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private EventReference _loadingScreenAmbience;

	[Token(Token = "0x400042E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private TransitionConfig _currentTransition;

	[Token(Token = "0x400042F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private bool _hasPendingSceneLoad;

	[Token(Token = "0x4000430")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x69")]
	private bool _finished;

	[Token(Token = "0x4000431")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private AudioHandle _audioHandle;

	[Token(Token = "0x4000432")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private LoadProgress _loadProgress;

	[Token(Token = "0x4000433")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private LoadingBar _loadingBar;

	[Token(Token = "0x4000434")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Slider _introLoadingBar;

	[Token(Token = "0x4000435")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private SpriteSheetAnimation _loadingSpinner;

	[Token(Token = "0x17000063")]
	public bool finished
	{
		[Token(Token = "0x6000603")]
		[Address(RVA = "0x1023368", Offset = "0x1023368", VA = "0x1023368")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000064")]
	public GameObject IntroSplashObject
	{
		[Token(Token = "0x6000604")]
		[Address(RVA = "0x1027EEC", Offset = "0x1027EEC", VA = "0x1027EEC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000065")]
	public GameObject NeonLoadingObject
	{
		[Token(Token = "0x6000605")]
		[Address(RVA = "0x1027EF4", Offset = "0x1027EF4", VA = "0x1027EF4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000606")]
	[Address(RVA = "0x1027EFC", Offset = "0x1027EFC", VA = "0x1027EFC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000607")]
	[Address(RVA = "0x1027FE4", Offset = "0x1027FE4", VA = "0x1027FE4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000608")]
	[Address(RVA = "0x1028318", Offset = "0x1028318", VA = "0x1028318")]
	private void Update()
	{
	}

	[Token(Token = "0x6000609")]
	[Address(RVA = "0x102850C", Offset = "0x102850C", VA = "0x102850C")]
	public void SetLoadProgress(LoadProgress loadProgress)
	{
	}

	[Token(Token = "0x600060A")]
	[Address(RVA = "0x101E904", Offset = "0x101E904", VA = "0x101E904")]
	public void StopLoadingScreenAudio()
	{
	}

	[Token(Token = "0x600060B")]
	[Address(RVA = "0x1028178", Offset = "0x1028178", VA = "0x1028178")]
	public void PlayLoadingScreenAudio(EventReference loadingAudio)
	{
	}

	[Token(Token = "0x600060C")]
	[Address(RVA = "0x1028514", Offset = "0x1028514", VA = "0x1028514")]
	public TransitionScreen()
	{
	}
}
[Token(Token = "0x20000BC")]
public class CameraHandler : MonoBehaviour, IInitialisable
{
	[Token(Token = "0x20000BD")]
	public enum CameraMode
	{
		[Token(Token = "0x4000451")]
		Dialog,
		[Token(Token = "0x4000452")]
		Free
	}

	[Serializable]
	[Token(Token = "0x20000BE")]
	public struct LimitedLineSegment
	{
		[Token(Token = "0x4000453")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Vector3 start;

		[Token(Token = "0x4000454")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public Vector3 end;
	}

	[Token(Token = "0x4000436")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static float verticalViewAngleLimit;

	[Token(Token = "0x4000437")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public static float verticalViewAngleLimitSeated;

	[Token(Token = "0x4000438")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static float _mouseSensitivitySittingMultiplier;

	[Token(Token = "0x4000439")]
	private const float c_standardYScale = 1f;

	[Token(Token = "0x400043A")]
	private const float c_invertedYScale = -1f;

	[Token(Token = "0x400043B")]
	[Header("General Options")]
	private const float c_mouseSensitivityBaseline = 100f;

	[Token(Token = "0x400043C")]
	private const float c_mouseSensitivityMin = 10f;

	[Token(Token = "0x400043D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float mouseSensitivity;

	[Token(Token = "0x400043E")]
	private const float c_controllerSensitivityBaseline = 50f;

	[Token(Token = "0x400043F")]
	private const float c_controllerSensitivityMin = 1f;

	[Token(Token = "0x4000440")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float controllerSensitivity;

	[Token(Token = "0x4000441")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform playerBody;

	[Token(Token = "0x4000442")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform playerVisualBody;

	[Token(Token = "0x4000443")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform cameraHinge;

	[Token(Token = "0x4000444")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float _mouseInvertYScale;

	[Token(Token = "0x4000445")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float _controllerInvertYScale;

	[Token(Token = "0x4000446")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	[Header("Zoom Options")]
	private float standardFOVMin;

	[Token(Token = "0x4000447")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private float standardFOVBaseline;

	[Token(Token = "0x4000449")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private LimitedLineSegment _limitedLineSegment;

	[Token(Token = "0x400044A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private Camera mainCamera;

	[Token(Token = "0x400044B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private Camera renderOnTopOverlayCamera;

	[Token(Token = "0x400044C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private bool cameraMovement;

	[Token(Token = "0x400044D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private float _sensitivityFOVmultiplier;

	[Token(Token = "0x400044E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public float normalizedAnim;

	[Token(Token = "0x400044F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Animator animR;

	[Token(Token = "0x17000066")]
	public CameraMode CurrentCameraMode
	{
		[Token(Token = "0x600060D")]
		[Address(RVA = "0x1028538", Offset = "0x1028538", VA = "0x1028538")]
		[CompilerGenerated]
		get
		{
			return default(CameraMode);
		}
		[Token(Token = "0x600060E")]
		[Address(RVA = "0x1028540", Offset = "0x1028540", VA = "0x1028540")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x17000067")]
	public LimitedLineSegment _LimitedLineSegment
	{
		[Token(Token = "0x600060F")]
		[Address(RVA = "0x1028548", Offset = "0x1028548", VA = "0x1028548")]
		get
		{
			return default(LimitedLineSegment);
		}
		[Token(Token = "0x6000610")]
		[Address(RVA = "0x102855C", Offset = "0x102855C", VA = "0x102855C")]
		private set
		{
		}
	}

	[Token(Token = "0x6000611")]
	[Address(RVA = "0x1028570", Offset = "0x1028570", VA = "0x1028570")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000612")]
	[Address(RVA = "0x1028598", Offset = "0x1028598", VA = "0x1028598", Slot = "5")]
	public virtual bool Initialise()
	{
		return default(bool);
	}

	[Token(Token = "0x6000613")]
	[Address(RVA = "0x1028A1C", Offset = "0x1028A1C", VA = "0x1028A1C")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000614")]
	[Address(RVA = "0x10289CC", Offset = "0x10289CC", VA = "0x10289CC")]
	private void OnMouseInvertYChanged(bool state)
	{
	}

	[Token(Token = "0x6000615")]
	[Address(RVA = "0x10289F4", Offset = "0x10289F4", VA = "0x10289F4")]
	private void OnControllerInvertYChanged(bool state)
	{
	}

	[Token(Token = "0x6000616")]
	[Address(RVA = "0x1028890", Offset = "0x1028890", VA = "0x1028890")]
	private void OnSettingsFOVChanged(float value)
	{
	}

	[Token(Token = "0x6000617")]
	[Address(RVA = "0x102890C", Offset = "0x102890C", VA = "0x102890C")]
	private void OnSettingsMouseSensitivityChanged(float value)
	{
	}

	[Token(Token = "0x6000618")]
	[Address(RVA = "0x102896C", Offset = "0x102896C", VA = "0x102896C")]
	private void OnSettingsControllerSensitivityChanged(float value)
	{
	}

	[Token(Token = "0x6000619")]
	[Address(RVA = "0x1028C4C", Offset = "0x1028C4C", VA = "0x1028C4C")]
	private float RecalculateValueFromRangeBaselineAndMin(float value, float range, float baseline, float minValue)
	{
		return default(float);
	}

	[Token(Token = "0x600061A")]
	[Address(RVA = "0x1028C68", Offset = "0x1028C68", VA = "0x1028C68")]
	public Ray GetCursorRay()
	{
		return default(Ray);
	}

	[Token(Token = "0x600061B")]
	[Address(RVA = "0x1028CF8", Offset = "0x1028CF8", VA = "0x1028CF8")]
	public void ChangeCameraMode(CameraMode newMode)
	{
	}

	[Token(Token = "0x600061C")]
	[Address(RVA = "0x1028D58", Offset = "0x1028D58", VA = "0x1028D58")]
	public void CameraMovement(float horizontal, float vertical)
	{
	}

	[Token(Token = "0x600061D")]
	[Address(RVA = "0x1029018", Offset = "0x1029018", VA = "0x1029018")]
	public void ResetCameraSitting()
	{
	}

	[Token(Token = "0x600061E")]
	[Address(RVA = "0x1029120", Offset = "0x1029120", VA = "0x1029120")]
	public void ResetToRotation(Quaternion rotation)
	{
	}

	[Token(Token = "0x600061F")]
	[Address(RVA = "0x1029250", Offset = "0x1029250", VA = "0x1029250")]
	public Camera GetMainCamera()
	{
		return null;
	}

	[Token(Token = "0x6000620")]
	[Address(RVA = "0x1029258", Offset = "0x1029258", VA = "0x1029258")]
	public CameraHandler()
	{
	}
}
[Token(Token = "0x20000BF")]
public class RemoveIfNoDebug : MonoBehaviour
{
	[Token(Token = "0x6000622")]
	[Address(RVA = "0x10292E8", Offset = "0x10292E8", VA = "0x10292E8")]
	public RemoveIfNoDebug()
	{
	}
}
[Token(Token = "0x20000C0")]
public class FsArcSegmentMotionHandler : FsBoundedMotionHandler, IFixedUpdatable
{
	[Token(Token = "0x20000C1")]
	private enum DoorType
	{
		[Token(Token = "0x400047B")]
		WallDoor,
		[Token(Token = "0x400047C")]
		ContainerOpeningClockwise,
		[Token(Token = "0x400047D")]
		ContainerOpeningCounterClockwise
	}

	[Token(Token = "0x20000C2")]
	private enum DoorOrientation
	{
		[Token(Token = "0x400047F")]
		AroundVerticalAxis,
		[Token(Token = "0x4000480")]
		AroundHorizontalAxis
	}

	[Token(Token = "0x4000455")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[Header("Settings")]
	[SerializeField]
	private float minTorqueToBeAdded;

	[Token(Token = "0x4000456")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	private float maxTorqueToBeAdded;

	[Token(Token = "0x4000457")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private float maxAngularVelocity;

	[Token(Token = "0x4000458")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[SerializeField]
	private float mouseSensitivity;

	[Token(Token = "0x4000459")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private float gamepadSensitivity;

	[Token(Token = "0x400045A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[SerializeField]
	private float moveSensitivity;

	[Token(Token = "0x400045B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private float idleTolerance;

	[Token(Token = "0x400045C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[SerializeField]
	private float motionStepAccuracy;

	[Token(Token = "0x400045D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private float angularVelocityIdleTolerance;

	[Token(Token = "0x400045E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[SerializeField]
	private float maxPlayer2dDistance;

	[Token(Token = "0x400045F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private float torqueMultiplier;

	[Token(Token = "0x4000460")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	[Header("Set up")]
	private Transform movementReferencePoint;

	[Token(Token = "0x4000461")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private float wingCorrectionAngle;

	[Token(Token = "0x4000462")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	[SerializeField]
	private float hingeCorrectionAngle;

	[Token(Token = "0x4000463")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private DoorType doorType;

	[Token(Token = "0x4000464")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	[SerializeField]
	private DoorOrientation doorOrientation;

	[Token(Token = "0x4000465")]
	private const float mouseSensitivityMultiplier = 100f;

	[Token(Token = "0x4000466")]
	private const float gamepadSensitivityMultiplier = 100f;

	[Token(Token = "0x4000467")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private CallbackVoid onFinishedCallback;

	[Token(Token = "0x4000468")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private ControllerBaseInteractor activeInteractor;

	[Token(Token = "0x4000469")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private FlatScreenPlayer activeFlatScreenPlayer;

	[Token(Token = "0x400046A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private HingeJoint hinge;

	[Token(Token = "0x400046B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private Rigidbody rigidbodyComponent;

	[Token(Token = "0x400046C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private float minAngle;

	[Token(Token = "0x400046D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private float maxAngle;

	[Token(Token = "0x400046E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private float currentProgressValue;

	[Token(Token = "0x400046F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	private Vector2 player2dPosition;

	[Token(Token = "0x4000470")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	private Vector2 hinge2dPosition;

	[Token(Token = "0x4000471")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private Vector2 movementPivot2dPosition;

	[Token(Token = "0x4000472")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	private float lastPlayerSignedDistance;

	[Token(Token = "0x4000473")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private bool originalHingeUseSpringValue;

	[Token(Token = "0x4000474")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB9")]
	private bool originalRbUseGravityValue;

	[Token(Token = "0x4000475")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private DoorOpenable doorOpenable;

	[Token(Token = "0x4000476")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private float lastUnlockAttemptTime;

	[Token(Token = "0x4000477")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	private float arcReticleAngle;

	[Token(Token = "0x4000478")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private float lineReticleAngle;

	[Token(Token = "0x4000479")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	private Vector2 playerForward;

	[Token(Token = "0x6000623")]
	[Address(RVA = "0x10292F0", Offset = "0x10292F0", VA = "0x10292F0", Slot = "5")]
	public override FsReticleRuntimeData GetFsReticleRuntimeData()
	{
		return default(FsReticleRuntimeData);
	}

	[Token(Token = "0x6000624")]
	[Address(RVA = "0x1029380", Offset = "0x1029380", VA = "0x1029380")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000625")]
	[Address(RVA = "0x102955C", Offset = "0x102955C", VA = "0x102955C", Slot = "4")]
	public override void StartMotion(ControllerBaseInteractor interactor, CallbackVoid onFinishedCallback)
	{
	}

	[Token(Token = "0x6000626")]
	[Address(RVA = "0x1029DB4", Offset = "0x1029DB4", VA = "0x1029DB4", Slot = "6")]
	public void OnFixedUpdate(float dt)
	{
	}

	[Token(Token = "0x6000627")]
	[Address(RVA = "0x102A2CC", Offset = "0x102A2CC", VA = "0x102A2CC")]
	private void FinishMotion()
	{
	}

	[Token(Token = "0x6000628")]
	[Address(RVA = "0x1029B80", Offset = "0x1029B80", VA = "0x1029B80")]
	private float CalculatePlayerSigned2dDistance(Vector2 player2dPosition)
	{
		return default(float);
	}

	[Token(Token = "0x6000629")]
	[Address(RVA = "0x1029AA4", Offset = "0x1029AA4", VA = "0x1029AA4")]
	private float GetCurrentRotationValue()
	{
		return default(float);
	}

	[Token(Token = "0x600062A")]
	[Address(RVA = "0x102A54C", Offset = "0x102A54C", VA = "0x102A54C")]
	private void RefreshMotionProgress()
	{
	}

	[Token(Token = "0x600062B")]
	[Address(RVA = "0x102A7E0", Offset = "0x102A7E0", VA = "0x102A7E0")]
	public FsArcSegmentMotionHandler()
	{
	}
}
[Token(Token = "0x20000C3")]
[RemoveOnVr]
public abstract class FsBoundedMotionHandler : MonoBehaviour
{
	[Token(Token = "0x4000481")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected Vector2 interactDelta;

	[Token(Token = "0x17000068")]
	public Vector2 InteractDelta
	{
		[Token(Token = "0x600062C")]
		[Address(RVA = "0x102A868", Offset = "0x102A868", VA = "0x102A868")]
		get
		{
			return default(Vector2);
		}
	}

	[Token(Token = "0x600062D")]
	[Address(RVA = "0x102A870", Offset = "0x102A870", VA = "0x102A870")]
	private void Update()
	{
	}

	[Token(Token = "0x600062E")]
	[Address(RVA = "0x102A44C", Offset = "0x102A44C", VA = "0x102A44C")]
	protected float CalculateProgressValue(Vector2 delta, float mouseSensitivity, float gamepadSensitivity, float angleToRotate)
	{
		return default(float);
	}

	[Token(Token = "0x600062F")]
	public abstract void StartMotion(ControllerBaseInteractor interactor, CallbackVoid onFinishedCallback);

	[Token(Token = "0x6000630")]
	public abstract FsReticleRuntimeData GetFsReticleRuntimeData();

	[Token(Token = "0x6000631")]
	[Address(RVA = "0x102A810", Offset = "0x102A810", VA = "0x102A810")]
	protected FsBoundedMotionHandler()
	{
	}
}
[Token(Token = "0x20000C4")]
public class FsCameraDetacher : MonoBehaviour
{
	[Token(Token = "0x4000482")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Transform defaultParent;

	[Token(Token = "0x4000483")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private List<Transform> parentsStack;

	[Token(Token = "0x17000069")]
	public Transform DefaultParent
	{
		[Token(Token = "0x6000632")]
		[Address(RVA = "0x102A954", Offset = "0x102A954", VA = "0x102A954")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000633")]
	[Address(RVA = "0x102A95C", Offset = "0x102A95C", VA = "0x102A95C")]
	public void AddCameraParentOverride(Transform newTransform)
	{
	}

	[Token(Token = "0x6000634")]
	[Address(RVA = "0x102AAD4", Offset = "0x102AAD4", VA = "0x102AAD4")]
	public void RemoveCameraParentOverride(Transform transformToRemove)
	{
	}

	[Token(Token = "0x6000635")]
	[Address(RVA = "0x102AC4C", Offset = "0x102AC4C", VA = "0x102AC4C")]
	public FsCameraDetacher()
	{
	}
}
[Token(Token = "0x20000C5")]
public class FsLineSegmentMotionHandler : FsBoundedMotionHandler, IFixedUpdatable
{
	[Token(Token = "0x20000C6")]
	private enum MouseControlMode
	{
		[Token(Token = "0x40004A7")]
		Angled,
		[Token(Token = "0x40004A8")]
		UpAndDown
	}

	[Token(Token = "0x4000484")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[Header("Settings")]
	[SerializeField]
	private float minForceToBeAdded;

	[Token(Token = "0x4000485")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	private float maxForceToBeAdded;

	[Token(Token = "0x4000486")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private float mouseSensitivity;

	[Token(Token = "0x4000487")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[SerializeField]
	private float gamepadSensitivity;

	[Token(Token = "0x4000488")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private float moveSensitivity;

	[Token(Token = "0x4000489")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[SerializeField]
	private float idleTolerance;

	[Token(Token = "0x400048A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private float motionStepAccuracy;

	[Token(Token = "0x400048B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[SerializeField]
	private float velocityIdleTolerance;

	[Token(Token = "0x400048C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private float maxPlayer2dDistance;

	[Token(Token = "0x400048D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[SerializeField]
	private float forceMultiplier;

	[Token(Token = "0x400048E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private bool ignorePlayerMovement;

	[Token(Token = "0x400048F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	[Header("Set up")]
	private Transform movementReferencePoint;

	[Token(Token = "0x4000490")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private float correctionAngle;

	[Token(Token = "0x4000491")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	[SerializeField]
	private MouseControlMode mouseControlMode;

	[Token(Token = "0x4000492")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private ConfigurableJoint joint;

	[Token(Token = "0x4000493")]
	private const float mouseSensitivityMultiplier = 10000f;

	[Token(Token = "0x4000494")]
	private const float gamepadSensitivityMultiplier = 10000f;

	[Token(Token = "0x4000495")]
	private const float moveSensitivityMultiplier = 100f;

	[Token(Token = "0x4000496")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private CallbackVoid onFinishedCallback;

	[Token(Token = "0x4000497")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private ControllerBaseInteractor activeInteractor;

	[Token(Token = "0x4000498")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private FlatScreenPlayer activeFlatScreenPlayer;

	[Token(Token = "0x4000499")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Rigidbody rigidbodyComponent;

	[Token(Token = "0x400049A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private float minDistance;

	[Token(Token = "0x400049B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private float maxDistance;

	[Token(Token = "0x400049C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private float currentProgressValue;

	[Token(Token = "0x400049D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private Vector2 player2dPosition;

	[Token(Token = "0x400049E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	private Vector2 movementPivot2dPosition;

	[Token(Token = "0x400049F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	private float lastPlayerSignedDistance;

	[Token(Token = "0x40004A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private DrawerOpenable drawerOpenable;

	[Token(Token = "0x40004A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private Lever lever;

	[Token(Token = "0x40004A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private float lastUnlockAttemptTime;

	[Token(Token = "0x40004A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private Vector3 localMovementDir;

	[Token(Token = "0x40004A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private bool leverEnabledOriginalValue;

	[Token(Token = "0x40004A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	private float angleToRotate;

	[Token(Token = "0x6000636")]
	[Address(RVA = "0x102ACD8", Offset = "0x102ACD8", VA = "0x102ACD8", Slot = "5")]
	public override FsReticleRuntimeData GetFsReticleRuntimeData()
	{
		return default(FsReticleRuntimeData);
	}

	[Token(Token = "0x6000637")]
	[Address(RVA = "0x102ACE8", Offset = "0x102ACE8", VA = "0x102ACE8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000638")]
	[Address(RVA = "0x102B208", Offset = "0x102B208", VA = "0x102B208", Slot = "4")]
	public override void StartMotion(ControllerBaseInteractor interactor, CallbackVoid onFinishedCallback)
	{
	}

	[Token(Token = "0x6000639")]
	[Address(RVA = "0x102B6A8", Offset = "0x102B6A8", VA = "0x102B6A8", Slot = "6")]
	public void OnFixedUpdate(float dt)
	{
	}

	[Token(Token = "0x600063A")]
	[Address(RVA = "0x102BA68", Offset = "0x102BA68", VA = "0x102BA68")]
	private void FinishMotion()
	{
	}

	[Token(Token = "0x600063B")]
	[Address(RVA = "0x102B630", Offset = "0x102B630", VA = "0x102B630")]
	private float CalculatePlayerSigned2dDistance(Vector2 player2dPosition)
	{
		return default(float);
	}

	[Token(Token = "0x600063C")]
	[Address(RVA = "0x102B0B8", Offset = "0x102B0B8", VA = "0x102B0B8")]
	private float GetRelevantAxisValue(Vector3 vector)
	{
		return default(float);
	}

	[Token(Token = "0x600063D")]
	[Address(RVA = "0x102BE60", Offset = "0x102BE60", VA = "0x102BE60")]
	private void SetRelevantAxisValue(ref Vector3 vector, float value)
	{
	}

	[Token(Token = "0x600063E")]
	[Address(RVA = "0x102BC10", Offset = "0x102BC10", VA = "0x102BC10")]
	private void RefreshMotionProgress()
	{
	}

	[Token(Token = "0x600063F")]
	[Address(RVA = "0x102BFB4", Offset = "0x102BFB4", VA = "0x102BFB4")]
	public FsLineSegmentMotionHandler()
	{
	}
}
[Token(Token = "0x20000C7")]
public class FsLockedMotionHandler : FsBoundedMotionHandler, IUpdatable
{
	[Token(Token = "0x40004A9")]
	private const float mouseSensitivityMultiplier = 100f;

	[Token(Token = "0x40004AA")]
	private const float gamepadSensitivityMultiplier = 100f;

	[Token(Token = "0x40004AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private float mouseSensitivity;

	[Token(Token = "0x40004AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	private float gamepadSensitivity;

	[Token(Token = "0x40004AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private float motionStepAccuracy;

	[Token(Token = "0x40004AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[SerializeField]
	private float minPlayerMovement;

	[Token(Token = "0x40004AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private float maxPlayerMovement;

	[Token(Token = "0x40004B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private DoorLocked _locked;

	[Token(Token = "0x40004B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private CallbackVoid onFinishedCallback;

	[Token(Token = "0x40004B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private ControllerBaseInteractor activeInteractor;

	[Token(Token = "0x40004B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private FlatScreenPlayer activeFlatScreenPlayer;

	[Token(Token = "0x40004B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float currentProgressValue;

	[Token(Token = "0x40004B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private float prevProgressValue;

	[Token(Token = "0x40004B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private float lastUnlockAttemptTime;

	[Token(Token = "0x6000640")]
	[Address(RVA = "0x102BFD8", Offset = "0x102BFD8", VA = "0x102BFD8", Slot = "5")]
	public override FsReticleRuntimeData GetFsReticleRuntimeData()
	{
		return default(FsReticleRuntimeData);
	}

	[Token(Token = "0x6000641")]
	[Address(RVA = "0x102BFE4", Offset = "0x102BFE4", VA = "0x102BFE4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000642")]
	[Address(RVA = "0x102C04C", Offset = "0x102C04C", VA = "0x102C04C", Slot = "4")]
	public override void StartMotion(ControllerBaseInteractor interactor, CallbackVoid onFinishedCallback)
	{
	}

	[Token(Token = "0x6000643")]
	[Address(RVA = "0x102C1F4", Offset = "0x102C1F4", VA = "0x102C1F4", Slot = "6")]
	public void OnUpdate(float dt)
	{
	}

	[Token(Token = "0x6000644")]
	[Address(RVA = "0x102C558", Offset = "0x102C558", VA = "0x102C558")]
	private void FinishMotion()
	{
	}

	[Token(Token = "0x6000645")]
	[Address(RVA = "0x102C69C", Offset = "0x102C69C", VA = "0x102C69C")]
	public FsLockedMotionHandler()
	{
	}
}
[Token(Token = "0x20000C8")]
[ExecuteInEditMode]
public class HandArmDistanceHandler : MonoBehaviour
{
	[Token(Token = "0x40004B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float preferredShoulderDistance;

	[Token(Token = "0x40004B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float minCameraDistance;

	[Token(Token = "0x40004B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject shoulder;

	[Token(Token = "0x40004BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[Tooltip("0 is minimum camera distance, 1 is preferred shoulder distance")]
	[SerializeField]
	[Range(0f, 1f)]
	private float normalizedDistance;

	[Token(Token = "0x6000646")]
	[Address(RVA = "0x102C6B4", Offset = "0x102C6B4", VA = "0x102C6B4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000647")]
	[Address(RVA = "0x102CA28", Offset = "0x102CA28", VA = "0x102CA28")]
	public Vector3[] LineCircleIntersection(Vector3 center, float radius, Vector3 rayStart, Vector3 rayEnd)
	{
		return null;
	}

	[Token(Token = "0x6000648")]
	[Address(RVA = "0x102CC34", Offset = "0x102CC34", VA = "0x102CC34")]
	public HandArmDistanceHandler()
	{
	}
}
[Token(Token = "0x20000C9")]
[RequireComponent(typeof(ActionPrioritizer))]
public class InteractionHandler : MonoBehaviour
{
	[Token(Token = "0x20000CA")]
	private struct LocalTransform
	{
		[Token(Token = "0x40004CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Vector3 localPosition;

		[Token(Token = "0x40004CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public Quaternion localRotation;

		[Token(Token = "0x40004CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Vector3 localScale;

		[Token(Token = "0x600065B")]
		[Address(RVA = "0x102CED4", Offset = "0x102CED4", VA = "0x102CED4")]
		public LocalTransform(Transform transform)
		{
		}
	}

	[Token(Token = "0x40004BB")]
	public const string _interactableLayerName = "I_Interactable";

	[Token(Token = "0x40004BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private LayerMask _intractableLayersMask;

	[Token(Token = "0x40004BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public RaycastHit _interactionRaycastHit;

	[Token(Token = "0x40004BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Transform wristTransform_R;

	[Token(Token = "0x40004BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Transform holdIKTargetTransform_R;

	[Token(Token = "0x40004C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Transform objectHoldTransform_R;

	[Token(Token = "0x40004C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Transform objectHoldTransform_L;

	[Token(Token = "0x40004C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private LocalTransform initialHoldIKTargetTransform_R;

	[Token(Token = "0x40004C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private LocalTransform initialObjectHoldTransform_R;

	[Token(Token = "0x40004C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[SerializeField]
	[Header("Run-time Data")]
	private InteractableItem _carriedInteractableItem_R;

	[Token(Token = "0x40004C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	[SerializeField]
	private InteractableItem _carriedInteractableItem_L;

	[Token(Token = "0x40004C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	[SerializeField]
	private InteractableItem _observedInteractableItem;

	[Token(Token = "0x40004C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public List<InteractionBase> _interactionsInUseStack;

	[Token(Token = "0x40004C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public List<InteractionScopeBase> _currentScopeStack;

	[Token(Token = "0x40004C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static InteractionHandler _instance;

	[Token(Token = "0x1700006A")]
	public InteractableItem CarriedInteractableItem_R
	{
		[Token(Token = "0x6000649")]
		[Address(RVA = "0x102CC3C", Offset = "0x102CC3C", VA = "0x102CC3C")]
		get
		{
			return null;
		}
		[Token(Token = "0x600064A")]
		[Address(RVA = "0x102CC44", Offset = "0x102CC44", VA = "0x102CC44")]
		private set
		{
		}
	}

	[Token(Token = "0x1700006B")]
	public InteractableItem CarriedInteractableItem_L
	{
		[Token(Token = "0x600064B")]
		[Address(RVA = "0x102CC4C", Offset = "0x102CC4C", VA = "0x102CC4C")]
		get
		{
			return null;
		}
		[Token(Token = "0x600064C")]
		[Address(RVA = "0x102CC54", Offset = "0x102CC54", VA = "0x102CC54")]
		private set
		{
		}
	}

	[Token(Token = "0x1700006C")]
	public InteractableItem ObservedInteractableItem
	{
		[Token(Token = "0x600064D")]
		[Address(RVA = "0x102CC5C", Offset = "0x102CC5C", VA = "0x102CC5C")]
		get
		{
			return null;
		}
		[Token(Token = "0x600064E")]
		[Address(RVA = "0x102CC64", Offset = "0x102CC64", VA = "0x102CC64")]
		private set
		{
		}
	}

	[Token(Token = "0x600064F")]
	[Address(RVA = "0x102CC6C", Offset = "0x102CC6C", VA = "0x102CC6C")]
	public static InteractionHandler Instance()
	{
		return null;
	}

	[Token(Token = "0x6000650")]
	[Address(RVA = "0x102CCB4", Offset = "0x102CCB4", VA = "0x102CCB4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000651")]
	[Address(RVA = "0x102CF34", Offset = "0x102CF34", VA = "0x102CF34")]
	private void Update()
	{
	}

	[Token(Token = "0x6000652")]
	[Address(RVA = "0x102D1D0", Offset = "0x102D1D0", VA = "0x102D1D0")]
	private bool IsObjectWithinInterationDistance(Collider collider)
	{
		return default(bool);
	}

	[Token(Token = "0x6000653")]
	[Address(RVA = "0x102CF48", Offset = "0x102CF48", VA = "0x102CF48")]
	private void ScanForInteractableItem()
	{
	}

	[Token(Token = "0x6000654")]
	[Address(RVA = "0x102D1F8", Offset = "0x102D1F8", VA = "0x102D1F8")]
	public bool HandleAnimEvent(InteractionAnimEvent animEvent)
	{
		return default(bool);
	}

	[Token(Token = "0x6000655")]
	[Address(RVA = "0x102D2A8", Offset = "0x102D2A8", VA = "0x102D2A8")]
	public void AddHeldItem(InteractableItem interactableItem)
	{
	}

	[Token(Token = "0x6000656")]
	[Address(RVA = "0x102D3A8", Offset = "0x102D3A8", VA = "0x102D3A8")]
	public void AttachItem(InteractableItem interactableItem)
	{
	}

	[Token(Token = "0x6000657")]
	[Address(RVA = "0x102DA04", Offset = "0x102DA04", VA = "0x102DA04")]
	public void RemoveHeldItem(InteractableItem interactableItem)
	{
	}

	[Token(Token = "0x6000658")]
	[Address(RVA = "0x102DB04", Offset = "0x102DB04", VA = "0x102DB04")]
	public void DetachItem(InteractableItem interactableItem)
	{
	}

	[Token(Token = "0x6000659")]
	[Address(RVA = "0x102DD5C", Offset = "0x102DD5C", VA = "0x102DD5C")]
	public InteractableItem GetCarriedItem(GrabInteractionSettings grabSettings)
	{
		return null;
	}

	[Token(Token = "0x600065A")]
	[Address(RVA = "0x102DDEC", Offset = "0x102DDEC", VA = "0x102DDEC")]
	public InteractionHandler()
	{
	}
}
[Token(Token = "0x20000CB")]
public class LocomotionHandler : MonoBehaviour, IInitialisable
{
	[Token(Token = "0x20000CC")]
	public enum LocomotionType
	{
		[Token(Token = "0x40004DD")]
		Smooth,
		[Token(Token = "0x40004DE")]
		Teleport
	}

	[Token(Token = "0x20000CD")]
	private struct ControllerInfo
	{
		[Token(Token = "0x40004DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public InputActionType moveInput;

		[Token(Token = "0x40004E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public InputActionType toggleMoveTypeInput;

		[Token(Token = "0x40004E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public XRRayTeleportPointer teleportPointer;
	}

	[Token(Token = "0x40004CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private ActionBasedSnapTurnProvider _snapTurnProvider;

	[Token(Token = "0x40004CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private ActionBasedContinuousMoveProvider _continuousMoveProvider;

	[Token(Token = "0x40004CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private XRRayTeleportPointer _rightHandTeleportPointer;

	[Token(Token = "0x40004D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private XRRayTeleportPointer _leftHandTeleportPointer;

	[Token(Token = "0x40004D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private LayerMask snapTeleportLayerMask;

	[Token(Token = "0x40004D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private ControllerInfo[] _controllerInfos;

	[Token(Token = "0x40004D3")]
	private const int _controllerIndex = 1;

	[Token(Token = "0x40004D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private LocomotionType _currentLocomotionType;

	[Token(Token = "0x40004D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private LocomotionType _prevLocomotionType;

	[Token(Token = "0x40004D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public bool movementEnabled;

	[Token(Token = "0x40004D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private XRRig xrRig;

	[Token(Token = "0x40004D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private CharacterController characterController;

	[Token(Token = "0x40004D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private IXrOobCameraTracker xrOobCameraTracker;

	[Token(Token = "0x40004DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private VRPlayer player;

	[Token(Token = "0x40004DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private bool wasTeleportationPointerActive;

	[Token(Token = "0x1700006D")]
	public bool isTeleporting
	{
		[Token(Token = "0x600065C")]
		[Address(RVA = "0x102DEC4", Offset = "0x102DEC4", VA = "0x102DEC4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700006E")]
	public LocomotionType locomotionType
	{
		[Token(Token = "0x600065D")]
		[Address(RVA = "0x102DF1C", Offset = "0x102DF1C", VA = "0x102DF1C")]
		get
		{
			return default(LocomotionType);
		}
		[Token(Token = "0x600065E")]
		[Address(RVA = "0x102DF24", Offset = "0x102DF24", VA = "0x102DF24")]
		set
		{
		}
	}

	[Token(Token = "0x600065F")]
	[Address(RVA = "0x102DF2C", Offset = "0x102DF2C", VA = "0x102DF2C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000660")]
	[Address(RVA = "0x102E04C", Offset = "0x102E04C", VA = "0x102E04C", Slot = "5")]
	public virtual bool Initialise()
	{
		return default(bool);
	}

	[Token(Token = "0x6000661")]
	[Address(RVA = "0x102E1DC", Offset = "0x102E1DC", VA = "0x102E1DC")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000662")]
	[Address(RVA = "0x102E2F8", Offset = "0x102E2F8", VA = "0x102E2F8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000663")]
	[Address(RVA = "0x102E4F4", Offset = "0x102E4F4", VA = "0x102E4F4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000664")]
	[Address(RVA = "0x102E9DC", Offset = "0x102E9DC", VA = "0x102E9DC")]
	public XRRayTeleportPointer GetCurrentTeleportPointer()
	{
		return null;
	}

	[Token(Token = "0x6000665")]
	[Address(RVA = "0x102E1BC", Offset = "0x102E1BC", VA = "0x102E1BC")]
	private void OnSnapTurnSet(SettingsControls.SnapTurn turn)
	{
	}

	[Token(Token = "0x6000666")]
	[Address(RVA = "0x102E1AC", Offset = "0x102E1AC", VA = "0x102E1AC")]
	private void OnMovementModeSet(SettingsControls.MovementMode mode)
	{
	}

	[Token(Token = "0x6000667")]
	[Address(RVA = "0x102E4D4", Offset = "0x102E4D4", VA = "0x102E4D4")]
	private void ToggleLocomotionComponents(bool enableSmoothLocomotion)
	{
	}

	[Token(Token = "0x6000668")]
	[Address(RVA = "0x102E57C", Offset = "0x102E57C", VA = "0x102E57C")]
	private void UpdateTeleportLocomotion()
	{
	}

	[Token(Token = "0x6000669")]
	[Address(RVA = "0x102EA00", Offset = "0x102EA00", VA = "0x102EA00")]
	public LocomotionHandler()
	{
	}
}
[Token(Token = "0x20000CE")]
public class EditorPlatformSetupHandler : MonoBehaviour
{
	[Token(Token = "0x600066A")]
	[Address(RVA = "0x102EA08", Offset = "0x102EA08", VA = "0x102EA08")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600066B")]
	[Address(RVA = "0x102EA0C", Offset = "0x102EA0C", VA = "0x102EA0C")]
	public EditorPlatformSetupHandler()
	{
	}
}
[Token(Token = "0x20000CF")]
public class ReadOnlyAttribute : PropertyAttribute
{
	[Token(Token = "0x600066C")]
	[Address(RVA = "0x102EA14", Offset = "0x102EA14", VA = "0x102EA14")]
	public ReadOnlyAttribute()
	{
	}
}
[Token(Token = "0x20000D0")]
public class RemoveOnConsole : RemoveOn_Base
{
	[Token(Token = "0x600066D")]
	[Address(RVA = "0x102EA1C", Offset = "0x102EA1C", VA = "0x102EA1C")]
	public RemoveOnConsole()
	{
	}
}
[Token(Token = "0x20000D1")]
public class RemoveOnFlatscreen : RemoveOn_Base
{
	[Token(Token = "0x600066E")]
	[Address(RVA = "0x102EA2C", Offset = "0x102EA2C", VA = "0x102EA2C")]
	public RemoveOnFlatscreen()
	{
	}
}
[Token(Token = "0x20000D2")]
public class RemoveOnGDK : RemoveOn_Base
{
	[Token(Token = "0x600066F")]
	[Address(RVA = "0x102EA34", Offset = "0x102EA34", VA = "0x102EA34")]
	public RemoveOnGDK()
	{
	}
}
[Token(Token = "0x20000D3")]
public class RemoveOnGDK_Console : RemoveOn_Base
{
	[Token(Token = "0x6000670")]
	[Address(RVA = "0x102EA3C", Offset = "0x102EA3C", VA = "0x102EA3C")]
	public RemoveOnGDK_Console()
	{
	}
}
[Token(Token = "0x20000D4")]
public class RemoveOnGDK_Windows : RemoveOn_Base
{
	[Token(Token = "0x6000671")]
	[Address(RVA = "0x102EA44", Offset = "0x102EA44", VA = "0x102EA44")]
	public RemoveOnGDK_Windows()
	{
	}
}
[Token(Token = "0x20000D5")]
public class RemoveOnPC : RemoveOn_Base
{
	[Token(Token = "0x6000672")]
	[Address(RVA = "0x102EA4C", Offset = "0x102EA4C", VA = "0x102EA4C")]
	public RemoveOnPC()
	{
	}
}
[Token(Token = "0x20000D6")]
public class RemoveOnPS4 : RemoveOn_Base
{
	[Token(Token = "0x6000673")]
	[Address(RVA = "0x102EA54", Offset = "0x102EA54", VA = "0x102EA54")]
	public RemoveOnPS4()
	{
	}
}
[Token(Token = "0x20000D7")]
public class RemoveOnPS5 : RemoveOn_Base
{
	[Token(Token = "0x6000674")]
	[Address(RVA = "0x102EA5C", Offset = "0x102EA5C", VA = "0x102EA5C")]
	public RemoveOnPS5()
	{
	}
}
[Token(Token = "0x20000D8")]
public class RemoveOnSwitch : RemoveOn_Base
{
	[Token(Token = "0x6000675")]
	[Address(RVA = "0x102EA64", Offset = "0x102EA64", VA = "0x102EA64")]
	public RemoveOnSwitch()
	{
	}
}
[Token(Token = "0x20000D9")]
public class RemoveOnVR : RemoveOn_Base
{
	[Token(Token = "0x6000676")]
	[Address(RVA = "0x102EA6C", Offset = "0x102EA6C", VA = "0x102EA6C")]
	public RemoveOnVR()
	{
	}
}
[Token(Token = "0x20000DA")]
[AttributeUsage(AttributeTargets.Class)]
public class RemoveOnVrAttribute : Attribute
{
	[Token(Token = "0x6000677")]
	[Address(RVA = "0x102EA74", Offset = "0x102EA74", VA = "0x102EA74")]
	public RemoveOnVrAttribute()
	{
	}
}
[Token(Token = "0x20000DB")]
public abstract class RemoveOn_Base : MonoBehaviour
{
	[Token(Token = "0x6000678")]
	[Address(RVA = "0x102EA24", Offset = "0x102EA24", VA = "0x102EA24")]
	protected RemoveOn_Base()
	{
	}
}
[Token(Token = "0x20000DC")]
public class ToggleOnInputChanged : MonoBehaviour
{
	[Token(Token = "0x40004E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private InputDeviceType[] _allowedInputDeviceTypes;

	[Token(Token = "0x40004E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private UnityEvent _onAllowedInputDevice;

	[Token(Token = "0x40004E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private UnityEvent _onDisallowedInputDevice;

	[Token(Token = "0x40004E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private InputDeviceType _lastChecked;

	[Token(Token = "0x6000679")]
	[Address(RVA = "0x102EA7C", Offset = "0x102EA7C", VA = "0x102EA7C")]
	private void Update()
	{
	}

	[Token(Token = "0x600067A")]
	[Address(RVA = "0x102EB10", Offset = "0x102EB10", VA = "0x102EB10")]
	private void OnDeviceTypeChanged(InputDeviceType type)
	{
	}

	[Token(Token = "0x600067B")]
	[Address(RVA = "0x102EB54", Offset = "0x102EB54", VA = "0x102EB54")]
	private bool IsAllowed(InputDeviceType type)
	{
		return default(bool);
	}

	[Token(Token = "0x600067C")]
	[Address(RVA = "0x102EBB0", Offset = "0x102EBB0", VA = "0x102EBB0")]
	public ToggleOnInputChanged()
	{
	}
}
[Token(Token = "0x20000DD")]
public class RealtimeLightHandler : MonoBehaviour
{
	[Token(Token = "0x20000DE")]
	public enum Rooms
	{
		[Token(Token = "0x40004EB")]
		NONE,
		[Token(Token = "0x40004EC")]
		MAIN_STUDIO,
		[Token(Token = "0x40004ED")]
		PRODUCERS_ROOM,
		[Token(Token = "0x40004EE")]
		STUDIO_TWO,
		[Token(Token = "0x40004EF")]
		GREEN_AREA,
		[Token(Token = "0x40004F0")]
		FIRST_FLOOR_CORRIDOR,
		[Token(Token = "0x40004F1")]
		TOILET_1,
		[Token(Token = "0x40004F2")]
		TOILET_2,
		[Token(Token = "0x40004F3")]
		PRODUCTION_OFFICE,
		[Token(Token = "0x40004F4")]
		MAIN_STAIRS,
		[Token(Token = "0x40004F5")]
		BALCONY,
		[Token(Token = "0x40004F6")]
		RECEPTION_ROOM,
		[Token(Token = "0x40004F7")]
		GROUND_FLOOR_CORRIDOR,
		[Token(Token = "0x40004F8")]
		JANITORS_CUPBOARD,
		[Token(Token = "0x40004F9")]
		BREAK_ROOM,
		[Token(Token = "0x40004FA")]
		MANAGERS_OFFICE,
		[Token(Token = "0x40004FB")]
		MEETING_ROOM,
		[Token(Token = "0x40004FC")]
		STORAGE_ROOM,
		[Token(Token = "0x40004FD")]
		STATION_ARCHIVE,
		[Token(Token = "0x40004FE")]
		BASEMENT_CORRIDOR_AND_STAIRS,
		[Token(Token = "0x40004FF")]
		POWER_ROOM,
		[Token(Token = "0x4000500")]
		TECHNICIANS_ROOM
	}

	[Token(Token = "0x40004E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private float lightSwitchOffTime;

	[Token(Token = "0x40004E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private Rooms currentRoom;

	[Token(Token = "0x40004E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Dictionary<Rooms, GameObject> realtimeLights;

	[Token(Token = "0x40004E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static RealtimeLightHandler _instance;

	[Token(Token = "0x600067D")]
	[Address(RVA = "0x102EC84", Offset = "0x102EC84", VA = "0x102EC84")]
	public static RealtimeLightHandler Instance()
	{
		return null;
	}

	[Token(Token = "0x600067E")]
	[Address(RVA = "0x102ECCC", Offset = "0x102ECCC", VA = "0x102ECCC")]
	private void Awake()
	{
	}

	[Token(Token = "0x600067F")]
	[Address(RVA = "0x102EDDC", Offset = "0x102EDDC", VA = "0x102EDDC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000680")]
	[Address(RVA = "0x102EDE0", Offset = "0x102EDE0", VA = "0x102EDE0")]
	public void AddLightsToDictionary(Rooms room, GameObject lightFolder)
	{
	}

	[Token(Token = "0x6000681")]
	[Address(RVA = "0x102EE84", Offset = "0x102EE84", VA = "0x102EE84")]
	public RealtimeLightHandler()
	{
	}
}
[Serializable]
[Token(Token = "0x20000DF")]
public struct SAlignmentTransform
{
	[Token(Token = "0x4000501")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[Tooltip("Desired character alignment position")]
	public Transform _headPosition;

	[Token(Token = "0x4000502")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	[Tooltip("Desired look target position")]
	public Transform _lookTargetPosition;
}
[Token(Token = "0x20000E0")]
public class AlignmentHelper : MonoBehaviour
{
	[Token(Token = "0x4000503")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Header("Settings")]
	public bool _drawDebugGizmos;

	[Token(Token = "0x4000504")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool _debugLog;

	[Token(Token = "0x4000505")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public SAlignmentTransform _alignmentTransform;

	[Token(Token = "0x4000506")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[Header("Optional Settings")]
	public Transform _targetCharacterTransform;

	[Token(Token = "0x4000507")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[Header("Run-time data")]
	[SerializeField]
	private Vector3 _cachedGroundAlignmentPosition_ws;

	[Token(Token = "0x4000508")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[SerializeField]
	private Vector3 _cachedLookTargetPosition_ws;

	[Token(Token = "0x4000509")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private FlatScreenPlayer _characterToAlign;

	[Token(Token = "0x400050A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private FlatScreenPlayer.OnFinishedCallback _callback;

	[Token(Token = "0x6000682")]
	[Address(RVA = "0x102EF14", Offset = "0x102EF14", VA = "0x102EF14")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000683")]
	[Address(RVA = "0x102EF84", Offset = "0x102EF84", VA = "0x102EF84")]
	private void Start()
	{
	}

	[Token(Token = "0x6000684")]
	[Address(RVA = "0x102F08C", Offset = "0x102F08C", VA = "0x102F08C")]
	public void AlignCharacterToObject(FlatScreenPlayer character, [Optional] FlatScreenPlayer.OnFinishedCallback callback)
	{
	}

	[Token(Token = "0x6000685")]
	[Address(RVA = "0x102F1D8", Offset = "0x102F1D8", VA = "0x102F1D8")]
	public void AlignCharactersLookToObject(FlatScreenPlayer character, [Optional] FlatScreenPlayer.OnFinishedCallback callback)
	{
	}

	[Token(Token = "0x6000686")]
	[Address(RVA = "0x102F098", Offset = "0x102F098", VA = "0x102F098")]
	private void AlignCharacter_Internal(FlatScreenPlayer character, Vector3 groundAlignmentPosition_ws, [Optional] FlatScreenPlayer.OnFinishedCallback callback)
	{
	}

	[Token(Token = "0x6000687")]
	[Address(RVA = "0x102F224", Offset = "0x102F224", VA = "0x102F224")]
	private void OnAlignmentFinished(bool interrupted)
	{
	}

	[Token(Token = "0x6000688")]
	[Address(RVA = "0x102EFCC", Offset = "0x102EFCC", VA = "0x102EFCC")]
	private Vector3 GetGroundAlignmentPosition(Vector3 position_ws)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000689")]
	[Address(RVA = "0x102F388", Offset = "0x102F388", VA = "0x102F388")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x600068A")]
	[Address(RVA = "0x102F540", Offset = "0x102F540", VA = "0x102F540")]
	public AlignmentHelper()
	{
	}
}
[Token(Token = "0x20000E1")]
public class CameraColliderTrigger : MonoBehaviour
{
	[Token(Token = "0x400050B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public CallbackVoid<Collider> OnTriggerEnterCallback;

	[Token(Token = "0x400050C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public CallbackVoid<Collider> OnTriggerExitCallback;

	[Token(Token = "0x600068B")]
	[Address(RVA = "0x102F548", Offset = "0x102F548", VA = "0x102F548")]
	private void OnTriggerEnter(Collider collider)
	{
	}

	[Token(Token = "0x600068C")]
	[Address(RVA = "0x102F564", Offset = "0x102F564", VA = "0x102F564")]
	private void OnTriggerExit(Collider collider)
	{
	}

	[Token(Token = "0x600068D")]
	[Address(RVA = "0x102F580", Offset = "0x102F580", VA = "0x102F580")]
	public CameraColliderTrigger()
	{
	}
}
[Token(Token = "0x20000E2")]
[CreateAssetMenu(fileName = "Data", menuName = "ScriptableObjects/DefaultSettingsProvider")]
public class DefaultSettingsProvider : ScriptableObject
{
	[Token(Token = "0x400050D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	[Header("Per Platform Default Game Option Settings")]
	private SettingsData _PCSettings;

	[Token(Token = "0x400050E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private SettingsData _QuestSettings;

	[Token(Token = "0x400050F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private SettingsData _XboxSeriesSettings;

	[Token(Token = "0x4000510")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private SettingsData _XboxOneSettings;

	[Token(Token = "0x4000511")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private SettingsData _PS5Settings;

	[Token(Token = "0x4000512")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private SettingsData _PS4Settings;

	[Token(Token = "0x4000513")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private SettingsData _SwitchSettings;

	[Token(Token = "0x1700006F")]
	public SettingsData defaultSettings
	{
		[Token(Token = "0x600068E")]
		[Address(RVA = "0x102F588", Offset = "0x102F588", VA = "0x102F588")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600068F")]
	[Address(RVA = "0x102F590", Offset = "0x102F590", VA = "0x102F590")]
	public DefaultSettingsProvider()
	{
	}
}
[Token(Token = "0x20000E3")]
public class DoorRoomSelector : MonoBehaviour
{
	[Token(Token = "0x4000514")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private RealtimeLightHandler.Rooms roomOne;

	[Token(Token = "0x4000515")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private RealtimeLightHandler.Rooms roomTwo;

	[Token(Token = "0x4000516")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[Header("Debug Settings")]
	public bool enableDebugView;

	[Token(Token = "0x4000517")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	public bool showRoomOne;

	[Token(Token = "0x4000518")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x22")]
	public bool showRoomTwo;

	[Token(Token = "0x4000519")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public MeshRenderer meshRenderer;

	[Token(Token = "0x6000690")]
	[Address(RVA = "0x102F598", Offset = "0x102F598", VA = "0x102F598")]
	public void UpdateCurrentRoom(bool isPulling)
	{
	}

	[Token(Token = "0x6000691")]
	[Address(RVA = "0x102F59C", Offset = "0x102F59C", VA = "0x102F59C")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x6000692")]
	[Address(RVA = "0x102F740", Offset = "0x102F740", VA = "0x102F740")]
	public static void DrawArrow(Vector3 pos, Vector3 direction, Color color, float arrowHeadLength = 0.25f, float arrowHeadAngle = 20f)
	{
	}

	[Token(Token = "0x6000693")]
	[Address(RVA = "0x102FA64", Offset = "0x102FA64", VA = "0x102FA64")]
	public DoorRoomSelector()
	{
	}
}
[Token(Token = "0x20000E4")]
[ExecuteInEditMode]
public class EmissionMaterialHelper : MonoBehaviour
{
	[Token(Token = "0x400051A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private MaterialPropertyBlock _materialPropBlock;

	[Token(Token = "0x400051B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Renderer _renderer;

	[Token(Token = "0x400051C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Texture2D s_blankTexture;

	[Token(Token = "0x400051D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[Range(0f, 1f)]
	public float _emissionIntensity;

	[Token(Token = "0x400051E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public Color _emissionColor;

	[Token(Token = "0x400051F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public bool _overwriteBaseColor;

	[Token(Token = "0x4000520")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Color _baseColor;

	[Token(Token = "0x4000521")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Color _previousEmissionColor;

	[Token(Token = "0x4000522")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Color _previousBaseColor;

	[Token(Token = "0x4000523")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private float _previousemissionIntensity;

	[Token(Token = "0x4000524")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private bool _previousOverwriteBaseColor;

	[Token(Token = "0x6000694")]
	[Address(RVA = "0x102FA6C", Offset = "0x102FA6C", VA = "0x102FA6C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000695")]
	[Address(RVA = "0x102FC74", Offset = "0x102FC74", VA = "0x102FC74")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000696")]
	[Address(RVA = "0x102FFCC", Offset = "0x102FFCC", VA = "0x102FFCC")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000697")]
	[Address(RVA = "0x102FAD0", Offset = "0x102FAD0", VA = "0x102FAD0")]
	private void Init()
	{
	}

	[Token(Token = "0x6000698")]
	[Address(RVA = "0x102FFD0", Offset = "0x102FFD0", VA = "0x102FFD0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000699")]
	[Address(RVA = "0x102FCAC", Offset = "0x102FCAC", VA = "0x102FCAC")]
	private void ClearMaterialPropBlock()
	{
	}

	[Token(Token = "0x600069A")]
	[Address(RVA = "0x102FF08", Offset = "0x102FF08", VA = "0x102FF08")]
	private void UpdateEmissionColor()
	{
	}

	[Token(Token = "0x600069B")]
	[Address(RVA = "0x102FDCC", Offset = "0x102FDCC", VA = "0x102FDCC")]
	private void UpdateBaseColor()
	{
	}

	[Token(Token = "0x600069C")]
	[Address(RVA = "0x102FE6C", Offset = "0x102FE6C", VA = "0x102FE6C")]
	private void SetEmissionMap()
	{
	}

	[Token(Token = "0x600069D")]
	[Address(RVA = "0x102FD1C", Offset = "0x102FD1C", VA = "0x102FD1C")]
	private void SetBaseMap()
	{
	}

	[Token(Token = "0x600069E")]
	[Address(RVA = "0x10300B4", Offset = "0x10300B4", VA = "0x10300B4")]
	public EmissionMaterialHelper()
	{
	}
}
[Token(Token = "0x20000E5")]
public class FixedRotation : MonoBehaviour
{
	[Token(Token = "0x4000525")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private bool useFixedUpdate;

	[Token(Token = "0x4000526")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	[SerializeField]
	private bool allowRotationAroundUpAxis;

	[Token(Token = "0x600069F")]
	[Address(RVA = "0x10300C4", Offset = "0x10300C4", VA = "0x10300C4")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x60006A0")]
	[Address(RVA = "0x1030474", Offset = "0x1030474", VA = "0x1030474")]
	private void Update()
	{
	}

	[Token(Token = "0x60006A1")]
	[Address(RVA = "0x10300D4", Offset = "0x10300D4", VA = "0x10300D4")]
	private void Rotate()
	{
	}

	[Token(Token = "0x60006A2")]
	[Address(RVA = "0x1030484", Offset = "0x1030484", VA = "0x1030484")]
	public FixedRotation()
	{
	}
}
[Token(Token = "0x20000E6")]
[ExecuteInEditMode]
public class FollowTransform : MonoBehaviour
{
	[Token(Token = "0x4000527")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform target;

	[Token(Token = "0x60006A3")]
	[Address(RVA = "0x1030494", Offset = "0x1030494", VA = "0x1030494")]
	private void Update()
	{
	}

	[Token(Token = "0x60006A4")]
	[Address(RVA = "0x10306C0", Offset = "0x10306C0", VA = "0x10306C0")]
	private bool IsApproximatelyEqual(Vector3 a, Vector3 b)
	{
		return default(bool);
	}

	[Token(Token = "0x60006A5")]
	[Address(RVA = "0x10307C0", Offset = "0x10307C0", VA = "0x10307C0")]
	private bool IsApproximatelyEqual(Quaternion a, Quaternion b)
	{
		return default(bool);
	}

	[Token(Token = "0x60006A6")]
	[Address(RVA = "0x10308F8", Offset = "0x10308F8", VA = "0x10308F8")]
	public FollowTransform()
	{
	}
}
[Token(Token = "0x20000E7")]
public class FsCameraCollisionHandler : MonoBehaviour, IInitialisable
{
	[Token(Token = "0x20000E8")]
	private enum CollisionSensorId
	{
		[Token(Token = "0x400052B")]
		Forward,
		[Token(Token = "0x400052C")]
		Backward,
		[Token(Token = "0x400052D")]
		Right,
		[Token(Token = "0x400052E")]
		Left,
		[Token(Token = "0x400052F")]
		Up,
		[Token(Token = "0x4000530")]
		Down,
		[Token(Token = "0x4000531")]
		COUNT
	}

	[Token(Token = "0x20000E9")]
	[Flags]
	public enum CollisionSensorState
	{
		[Token(Token = "0x4000533")]
		Forward = 1,
		[Token(Token = "0x4000534")]
		Backward = 2,
		[Token(Token = "0x4000535")]
		Right = 4,
		[Token(Token = "0x4000536")]
		Left = 8,
		[Token(Token = "0x4000537")]
		Up = 0x10,
		[Token(Token = "0x4000538")]
		Down = 0x20
	}

	[Token(Token = "0x4000528")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private CameraColliderTrigger[] collisionSensors;

	[Token(Token = "0x4000529")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int[] collisionsPerSensor;

	[Token(Token = "0x60006A7")]
	[Address(RVA = "0x1030900", Offset = "0x1030900", VA = "0x1030900", Slot = "4")]
	public bool Initialise()
	{
		return default(bool);
	}

	[Token(Token = "0x60006A8")]
	[Address(RVA = "0x1030BB0", Offset = "0x1030BB0", VA = "0x1030BB0")]
	public CollisionSensorState GetCollisionState()
	{
		return default(CollisionSensorState);
	}

	[Token(Token = "0x60006A9")]
	[Address(RVA = "0x1030C08", Offset = "0x1030C08", VA = "0x1030C08")]
	public FsCameraCollisionHandler()
	{
	}
}
[Token(Token = "0x20000EC")]
[RemoveOnVr]
public class FsProjectionColliderTrigger : MonoBehaviour
{
	[Token(Token = "0x400053D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public IFsProjectionColliderTriggerHandler handler;

	[Token(Token = "0x400053E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int level;

	[Token(Token = "0x60006AE")]
	[Address(RVA = "0x1030E38", Offset = "0x1030E38", VA = "0x1030E38")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x60006AF")]
	[Address(RVA = "0x1030EE0", Offset = "0x1030EE0", VA = "0x1030EE0")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x60006B0")]
	[Address(RVA = "0x1030F8C", Offset = "0x1030F8C", VA = "0x1030F8C")]
	public FsProjectionColliderTrigger()
	{
	}
}
[Token(Token = "0x20000ED")]
public class HideWhenPaused : MonoBehaviour, IInitialisable, IPausableObject
{
	[Token(Token = "0x400053F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool _wasActive;

	[Token(Token = "0x60006B1")]
	[Address(RVA = "0x1030F94", Offset = "0x1030F94", VA = "0x1030F94", Slot = "4")]
	public bool Initialise()
	{
		return default(bool);
	}

	[Token(Token = "0x60006B2")]
	[Address(RVA = "0x1030FC4", Offset = "0x1030FC4", VA = "0x1030FC4", Slot = "5")]
	public void OnPaused(bool paused)
	{
	}

	[Token(Token = "0x60006B3")]
	[Address(RVA = "0x1031028", Offset = "0x1031028", VA = "0x1031028")]
	public HideWhenPaused()
	{
	}
}
[Token(Token = "0x20000EE")]
public interface IFsProjectionColliderTriggerHandler
{
	[Token(Token = "0x60006B4")]
	void IncreaseCollidingInstancesCountForLevel(int level);

	[Token(Token = "0x60006B5")]
	void DecreaseCollidingInstancesCountForLevel(int level);
}
[Token(Token = "0x20000EF")]
public class InteractableDisabler : MonoBehaviour
{
	[Token(Token = "0x4000540")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private InteractableBase[] interactables;

	[Token(Token = "0x60006B6")]
	[Address(RVA = "0x1031030", Offset = "0x1031030", VA = "0x1031030")]
	public void DisableInteractables()
	{
	}

	[Token(Token = "0x60006B7")]
	[Address(RVA = "0x1031094", Offset = "0x1031094", VA = "0x1031094")]
	public InteractableDisabler()
	{
	}
}
[Token(Token = "0x20000F0")]
public interface IPausableObject
{
	[Token(Token = "0x60006B8")]
	void OnPaused(bool paused);
}
[Token(Token = "0x20000F1")]
public class KeepWorldYOrientation : MonoBehaviour
{
	[Token(Token = "0x60006B9")]
	[Address(RVA = "0x103109C", Offset = "0x103109C", VA = "0x103109C")]
	private void Update()
	{
	}

	[Token(Token = "0x60006BA")]
	[Address(RVA = "0x103141C", Offset = "0x103141C", VA = "0x103141C")]
	public KeepWorldYOrientation()
	{
	}
}
[Token(Token = "0x20000F2")]
public static class MathUtils
{
	[Token(Token = "0x20000F3")]
	public struct Hits<T>
	{
		[Token(Token = "0x4000541")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public byte count;

		[Token(Token = "0x4000542")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private T point0;

		[Token(Token = "0x4000543")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private T point1;

		[Token(Token = "0x17000070")]
		public T this[int key]
		{
			[Token(Token = "0x60006C4")]
			get
			{
				return (T)null;
			}
			[Token(Token = "0x60006C5")]
			set
			{
			}
		}

		[Token(Token = "0x60006C3")]
		public void Push(T val)
		{
		}
	}

	[Token(Token = "0x20000F4")]
	public struct Ellipse2d
	{
		[Token(Token = "0x4000544")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float rx;

		[Token(Token = "0x4000545")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float ry;

		[Token(Token = "0x4000546")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Vector2 centre;
	}

	[Token(Token = "0x60006BB")]
	[Address(RVA = "0x1031424", Offset = "0x1031424", VA = "0x1031424")]
	public static int FindClosestOrientation(Quaternion input, Vector3[] eulerOrientations)
	{
		return default(int);
	}

	[Token(Token = "0x60006BC")]
	[Address(RVA = "0x10315E8", Offset = "0x10315E8", VA = "0x10315E8")]
	public static Quaternion XAxis(this Quaternion rotation)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x60006BD")]
	[Address(RVA = "0x1031608", Offset = "0x1031608", VA = "0x1031608")]
	public static Quaternion YAxis(this Quaternion rotation)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x60006BE")]
	[Address(RVA = "0x1031628", Offset = "0x1031628", VA = "0x1031628")]
	public static Quaternion ZAxis(this Quaternion rotation)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x60006BF")]
	[Address(RVA = "0x1031648", Offset = "0x1031648", VA = "0x1031648")]
	public static int GetAToThePowerOfB(int a, int b)
	{
		return default(int);
	}

	[Token(Token = "0x60006C0")]
	[Address(RVA = "0x1031670", Offset = "0x1031670", VA = "0x1031670")]
	public static bool RayTriangleIntersection(Ray ray, Vector3 v0, Vector3 v1, Vector3 v2)
	{
		return default(bool);
	}

	[Token(Token = "0x60006C1")]
	[Address(RVA = "0x10317D0", Offset = "0x10317D0", VA = "0x10317D0")]
	public static Hits<Vector2> EllipseLineIntersection2d(Ellipse2d ellipse, Vector2 p1, Vector2 p2)
	{
		return default(Hits<Vector2>);
	}

	[Token(Token = "0x60006C2")]
	[Address(RVA = "0x1031B88", Offset = "0x1031B88", VA = "0x1031B88")]
	public static bool LineLineIntersection2d(out Vector2 intersection, Vector2 line1Point, Vector2 line1Direction, Vector2 line2Point, Vector2 line2Direction)
	{
		return default(bool);
	}
}
[Token(Token = "0x20000F5")]
public class OneOffForceGenerator : MonoBehaviour
{
	[Token(Token = "0x4000547")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Vector3 force;

	[Token(Token = "0x4000548")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Rigidbody rigidbodyToHit;

	[Token(Token = "0x60006C6")]
	[Address(RVA = "0x1031FF8", Offset = "0x1031FF8", VA = "0x1031FF8")]
	public void ApplyForce()
	{
	}

	[Token(Token = "0x60006C7")]
	[Address(RVA = "0x1032024", Offset = "0x1032024", VA = "0x1032024")]
	public OneOffForceGenerator()
	{
	}
}
[Token(Token = "0x20000F6")]
public class PausableAnimations : MonoBehaviour, IInitialisable, IPausableObject
{
	[Token(Token = "0x20000F7")]
	private struct PausableAnimationData
	{
		[Token(Token = "0x400054C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float pausedAnimSpeed;

		[Token(Token = "0x400054D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float pausedAnimSpeedNomalized;
	}

	[Token(Token = "0x4000549")]
	private const int c_initialNumAnimations = 8;

	[Token(Token = "0x400054A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private List<Animation> _Animations;

	[Token(Token = "0x400054B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private PausableAnimationData[] _SpeedData;

	[Token(Token = "0x60006C8")]
	[Address(RVA = "0x103202C", Offset = "0x103202C", VA = "0x103202C", Slot = "4")]
	public bool Initialise()
	{
		return default(bool);
	}

	[Token(Token = "0x60006C9")]
	[Address(RVA = "0x10320F8", Offset = "0x10320F8", VA = "0x10320F8", Slot = "5")]
	public void OnPaused(bool paused)
	{
	}

	[Token(Token = "0x60006CA")]
	[Address(RVA = "0x10325A8", Offset = "0x10325A8", VA = "0x10325A8")]
	public PausableAnimations()
	{
	}
}
[Token(Token = "0x20000F8")]
public class PausableAnimators : MonoBehaviour, IInitialisable, IPausableObject
{
	[Token(Token = "0x400054E")]
	private const int c_initialNumAnimators = 16;

	[Token(Token = "0x400054F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private List<Animator> _Animators;

	[Token(Token = "0x4000550")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float[] _AnimatorSpeeds;

	[Token(Token = "0x60006CB")]
	[Address(RVA = "0x1032634", Offset = "0x1032634", VA = "0x1032634", Slot = "4")]
	public bool Initialise()
	{
		return default(bool);
	}

	[Token(Token = "0x60006CC")]
	[Address(RVA = "0x1032700", Offset = "0x1032700", VA = "0x1032700", Slot = "5")]
	public void OnPaused(bool paused)
	{
	}

	[Token(Token = "0x60006CD")]
	[Address(RVA = "0x1032848", Offset = "0x1032848", VA = "0x1032848")]
	public PausableAnimators()
	{
	}
}
[Token(Token = "0x20000F9")]
public class PausableDirectors : MonoBehaviour, IInitialisable, IPausableObject
{
	[Token(Token = "0x4000551")]
	private const int c_initialNumDirectors = 8;

	[Token(Token = "0x4000552")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private List<PlayableDirector> _directors;

	[Token(Token = "0x60006CE")]
	[Address(RVA = "0x10328D4", Offset = "0x10328D4", VA = "0x10328D4", Slot = "4")]
	public bool Initialise()
	{
		return default(bool);
	}

	[Token(Token = "0x60006CF")]
	[Address(RVA = "0x1032974", Offset = "0x1032974", VA = "0x1032974", Slot = "5")]
	public void OnPaused(bool paused)
	{
	}

	[Token(Token = "0x60006D0")]
	[Address(RVA = "0x1032BEC", Offset = "0x1032BEC", VA = "0x1032BEC")]
	public PausableDirectors()
	{
	}
}
[Token(Token = "0x20000FA")]
public class PausableParticles : MonoBehaviour, IInitialisable, IPausableObject
{
	[Token(Token = "0x4000553")]
	private const int c_initialNumParticles = 64;

	[Token(Token = "0x4000554")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private List<ParticleSystem> _particleSystems;

	[Token(Token = "0x60006D1")]
	[Address(RVA = "0x1032C78", Offset = "0x1032C78", VA = "0x1032C78", Slot = "4")]
	public bool Initialise()
	{
		return default(bool);
	}

	[Token(Token = "0x60006D2")]
	[Address(RVA = "0x1032D18", Offset = "0x1032D18", VA = "0x1032D18", Slot = "5")]
	public void OnPaused(bool paused)
	{
	}

	[Token(Token = "0x60006D3")]
	[Address(RVA = "0x1032ED4", Offset = "0x1032ED4", VA = "0x1032ED4")]
	public PausableParticles()
	{
	}
}
[Token(Token = "0x20000FB")]
public class RealtimeLightsRoom : MonoBehaviour
{
	[Token(Token = "0x4000555")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private RealtimeLightHandler.Rooms room;

	[Token(Token = "0x60006D4")]
	[Address(RVA = "0x1032F60", Offset = "0x1032F60", VA = "0x1032F60")]
	private void Start()
	{
	}

	[Token(Token = "0x60006D5")]
	[Address(RVA = "0x1032FD4", Offset = "0x1032FD4", VA = "0x1032FD4")]
	public RealtimeLightsRoom()
	{
	}
}
[Token(Token = "0x20000FC")]
[CreateAssetMenu(fileName = "Data", menuName = "ScriptableObjects/SettingsData")]
public class SettingsData : ScriptableObject
{
	[Token(Token = "0x4000556")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Header("Default Game Option Settings")]
	public SettingsSerialisation.Settings settings;

	[Token(Token = "0x60006D6")]
	[Address(RVA = "0x1032FDC", Offset = "0x1032FDC", VA = "0x1032FDC")]
	public SettingsData()
	{
	}
}
[Token(Token = "0x20000FD")]
public class TriggerEnterHandler : MonoBehaviour
{
	[Token(Token = "0x4000557")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private LayerMask layerMask;

	[Token(Token = "0x4000558")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private UnityEvent callback;

	[Token(Token = "0x60006D7")]
	[Address(RVA = "0x1032FE4", Offset = "0x1032FE4", VA = "0x1032FE4")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x60006D8")]
	[Address(RVA = "0x1033058", Offset = "0x1033058", VA = "0x1033058")]
	public TriggerEnterHandler()
	{
	}
}
[Token(Token = "0x20000FE")]
[CreateAssetMenu(fileName = "Data", menuName = "ScriptableObjects/UILocalisations")]
public class UILocalisations : ScriptableObject
{
	[Token(Token = "0x4000559")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Header("Dialogue Boxes (Keys)")]
	public string SaveSettingsTitle;

	[Token(Token = "0x400055A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string SaveSettingsBody;

	[Token(Token = "0x400055B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string RestoreSettingsTitle;

	[Token(Token = "0x400055C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public string RestoreSettingsBody;

	[Token(Token = "0x400055D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public string DeleteSaveTitle;

	[Token(Token = "0x400055E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public string DeleteSaveBody;

	[Token(Token = "0x400055F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public string NewGameOverwriteTitle;

	[Token(Token = "0x4000560")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public string NewGameOverwriteBody;

	[Token(Token = "0x4000561")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public string QuitGameTitle;

	[Token(Token = "0x4000562")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public string QuitGameBody;

	[Token(Token = "0x4000563")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public string RestoreObjectsTitle;

	[Token(Token = "0x4000564")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public string RestoreObjectsBody;

	[Token(Token = "0x4000565")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public string OK;

	[Token(Token = "0x4000566")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public string Cancel;

	[Token(Token = "0x4000567")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public string Yes;

	[Token(Token = "0x4000568")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public string No;

	[Token(Token = "0x4000569")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public string ControllerDisconnectedTitle;

	[Token(Token = "0x400056A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public string ControllerDisconnectedBody;

	[Token(Token = "0x400056B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public string SaveErrorTitle;

	[Token(Token = "0x400056C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public string SaveErrorBody;

	[Token(Token = "0x400056D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public string SaveOverwriteTitle;

	[Token(Token = "0x400056E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public string SaveOverwriteBody;

	[Token(Token = "0x400056F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public string DeletingSaveTitle;

	[Token(Token = "0x4000570")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public string DeletingSaveBody;

	[Token(Token = "0x4000571")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public string DefaultStandString;

	[Token(Token = "0x4000572")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public string ArtificialStandString;

	[Token(Token = "0x4000573")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public string ArtificialCrouchString;

	[Token(Token = "0x4000574")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public string[] TextureResolution;

	[Token(Token = "0x4000575")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public string[] AntiAliasing;

	[Token(Token = "0x4000576")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public string[] MeshDetail;

	[Token(Token = "0x4000577")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	public string[] SnapTurn;

	[Token(Token = "0x60006D9")]
	[Address(RVA = "0x1033060", Offset = "0x1033060", VA = "0x1033060")]
	public UILocalisations()
	{
	}
}
[Token(Token = "0x20000FF")]
public class VinylPlayerGetter : MonoBehaviour
{
	[Token(Token = "0x4000578")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private VinylPlayer _vinylPlayer;

	[Token(Token = "0x4000579")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private VinylPlayerCosmetics _vinylPlayerCosmetics;

	[Token(Token = "0x400057A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private RecordBox _recordBox;

	[Token(Token = "0x400057B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Dispenser _dispenser;

	[Token(Token = "0x17000071")]
	public VinylPlayer VinylPlayer
	{
		[Token(Token = "0x60006DA")]
		[Address(RVA = "0x1033068", Offset = "0x1033068", VA = "0x1033068")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000072")]
	public VinylPlayerCosmetics VinylPlayerCosmetics
	{
		[Token(Token = "0x60006DB")]
		[Address(RVA = "0x1033070", Offset = "0x1033070", VA = "0x1033070")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000073")]
	public RecordBox RecordBox
	{
		[Token(Token = "0x60006DC")]
		[Address(RVA = "0x1033078", Offset = "0x1033078", VA = "0x1033078")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000074")]
	public Dispenser Dispenser
	{
		[Token(Token = "0x60006DD")]
		[Address(RVA = "0x1033080", Offset = "0x1033080", VA = "0x1033080")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60006DE")]
	[Address(RVA = "0x1033088", Offset = "0x1033088", VA = "0x1033088")]
	public VinylPlayerGetter()
	{
	}
}
[Token(Token = "0x2000100")]
public class XrActionManagerWorldServicesConnector : MonoBehaviour
{
	[Token(Token = "0x400057C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private IXrActionManagerWorldServiceSubscriber xrActionManagerWorldServiceSubscriber;

	[Token(Token = "0x400057D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private List<InteractableBase>[] staticVolumeInteractables;

	[Token(Token = "0x400057E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private OcclusionState[] occlusionVolumeStates;

	[Token(Token = "0x400057F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private OcclusionService occlusionService;

	[Token(Token = "0x4000580")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private List<InteractableBase> tempInteractables;

	[Token(Token = "0x60006DF")]
	[Address(RVA = "0x1033090", Offset = "0x1033090", VA = "0x1033090")]
	public void Init()
	{
	}

	[Token(Token = "0x60006E0")]
	[Address(RVA = "0x10339D8", Offset = "0x10339D8", VA = "0x10339D8")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60006E1")]
	[Address(RVA = "0x1033A7C", Offset = "0x1033A7C", VA = "0x1033A7C")]
	private void OnOcclusionStatesChanged(ReadOnlyCollection<OcclusionService.VolumeStateChangeRecord> volumeStateChangedRecords, ReadOnlyCollection<OcclusionService.DynamicOccludeeStateChangeRecord> occludeeStateChangedRecords)
	{
	}

	[Token(Token = "0x60006E2")]
	[Address(RVA = "0x1033534", Offset = "0x1033534", VA = "0x1033534")]
	private void InitialiseOcclusionVolumes(int volumeCount)
	{
	}

	[Token(Token = "0x60006E3")]
	[Address(RVA = "0x1033688", Offset = "0x1033688", VA = "0x1033688")]
	private void InitialiseStaticInteractablesInVolume(OcclusionVolume volume, ReadOnlyCollection<Occludee> staticOccludees)
	{
	}

	[Token(Token = "0x60006E4")]
	[Address(RVA = "0x10337B0", Offset = "0x10337B0", VA = "0x10337B0")]
	private void GetInteractablesFromOccludee(Occludee occludee, ref List<InteractableBase> interactablesOut)
	{
	}

	[Token(Token = "0x60006E5")]
	[Address(RVA = "0x1033EF4", Offset = "0x1033EF4", VA = "0x1033EF4")]
	public XrActionManagerWorldServicesConnector()
	{
	}
}
[Token(Token = "0x2000101")]
public class InputActionProvider : InputActionProviderBase
{
	[Token(Token = "0x60006E6")]
	[Address(RVA = "0x1033F7C", Offset = "0x1033F7C", VA = "0x1033F7C", Slot = "4")]
	protected override InputAction GetActionForUser_Iternal(int actionType, int userIndex = 0)
	{
		return null;
	}

	[Token(Token = "0x60006E7")]
	[Address(RVA = "0x1034028", Offset = "0x1034028", VA = "0x1034028")]
	public InputActionProvider()
	{
	}
}
[Token(Token = "0x2000102")]
public class InputRebinder : MonoBehaviour
{
	[Token(Token = "0x4000581")]
	private const int kBindingNotFound = -1;

	[Token(Token = "0x4000582")]
	private const int kControllerBindingIndex = 0;

	[Token(Token = "0x4000583")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private InputDeviceType[] inputDeviceTypes;

	[Token(Token = "0x4000584")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private InputActionType inputActionType;

	[Token(Token = "0x4000585")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private InputActionType[] excludedActions;

	[Token(Token = "0x4000586")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private InputRebinderSettings settings;

	[Token(Token = "0x4000587")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private string compositeBindingName;

	[Token(Token = "0x4000588")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private int orderId;

	[Token(Token = "0x4000589")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[SerializeField]
	private bool displayAsControllerIcons;

	[Token(Token = "0x400058A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static DialogueBoxId s_rebindPromptBoxId;

	[Token(Token = "0x400058B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static DialogueBoxId s_errorBoxId;

	[Token(Token = "0x400058C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private int[] excludedActionsIds;

	[Token(Token = "0x400058D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private IInputService inputService;

	[Token(Token = "0x400058E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private IMenuManager menuManager;

	[Token(Token = "0x400058F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private TextMeshProUGUI buttonLabel;

	[Token(Token = "0x4000590")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private int bindingIndex;

	[Token(Token = "0x60006E8")]
	[Address(RVA = "0x1034030", Offset = "0x1034030", VA = "0x1034030")]
	private void Start()
	{
	}

	[Token(Token = "0x60006E9")]
	[Address(RVA = "0x1034584", Offset = "0x1034584", VA = "0x1034584")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60006EA")]
	[Address(RVA = "0x10345C0", Offset = "0x10345C0", VA = "0x10345C0")]
	public void Rebind()
	{
	}

	[Token(Token = "0x60006EB")]
	[Address(RVA = "0x1034840", Offset = "0x1034840", VA = "0x1034840")]
	private void ShowError(IInputRebindAction rebindAction)
	{
	}

	[Token(Token = "0x60006EC")]
	[Address(RVA = "0x1034BDC", Offset = "0x1034BDC", VA = "0x1034BDC")]
	private void StartedRebinding(IInputRebindAction rebindAction)
	{
	}

	[Token(Token = "0x60006ED")]
	[Address(RVA = "0x1034FD4", Offset = "0x1034FD4", VA = "0x1034FD4")]
	private void CompletedRebinding(IInputRebindAction rebindAction)
	{
	}

	[Token(Token = "0x60006EE")]
	[Address(RVA = "0x1035128", Offset = "0x1035128", VA = "0x1035128")]
	private void CanceledRebinding(IInputRebindAction rebindAction)
	{
	}

	[Token(Token = "0x60006EF")]
	[Address(RVA = "0x103444C", Offset = "0x103444C", VA = "0x103444C")]
	public void UpdateButtonText()
	{
	}

	[Token(Token = "0x60006F0")]
	[Address(RVA = "0x103443C", Offset = "0x103443C", VA = "0x103443C")]
	private bool IsCurrentBindingIndexValid()
	{
		return default(bool);
	}

	[Token(Token = "0x60006F1")]
	[Address(RVA = "0x1035208", Offset = "0x1035208", VA = "0x1035208")]
	public InputRebinder()
	{
	}
}
[Token(Token = "0x2000103")]
[CreateAssetMenu(menuName = "Input/Input Rebinder Settings")]
public class InputRebinderSettings : ScriptableObject
{
	[Token(Token = "0x4000591")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string variableGroupName;

	[Token(Token = "0x4000592")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string keyToRebindVariableName;

	[Token(Token = "0x4000593")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string attemptedKeyVariableName;

	[Token(Token = "0x4000594")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public string rebindPromptBody;

	[Token(Token = "0x4000595")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public string rebindInvalidInputBody;

	[Token(Token = "0x4000596")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public string rebindPromptTitle;

	[Token(Token = "0x60006F3")]
	[Address(RVA = "0x10352C8", Offset = "0x10352C8", VA = "0x10352C8")]
	public InputRebinderSettings()
	{
	}
}
[Token(Token = "0x2000104")]
public class AttachPoint : MonoBehaviour, IAttachPoint
{
	[Token(Token = "0x4000597")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private DockBase parentDock;

	[Token(Token = "0x17000075")]
	public DockBase ParentDock
	{
		[Token(Token = "0x60006F4")]
		[Address(RVA = "0x10352D0", Offset = "0x10352D0", VA = "0x10352D0", Slot = "4")]
		get
		{
			return null;
		}
		[Token(Token = "0x60006F5")]
		[Address(RVA = "0x10352D8", Offset = "0x10352D8", VA = "0x10352D8", Slot = "5")]
		set
		{
		}
	}

	[Token(Token = "0x60006F6")]
	[Address(RVA = "0x10352E0", Offset = "0x10352E0", VA = "0x10352E0")]
	public AttachPoint()
	{
	}
}
[Token(Token = "0x2000105")]
public class ButtonAnimation : MonoBehaviour
{
	[Token(Token = "0x4000598")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Animation _animationComponent;

	[Token(Token = "0x4000599")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private AnimationClip _animation;

	[Token(Token = "0x400059A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Interactables.Button _button;

	[Token(Token = "0x60006F7")]
	[Address(RVA = "0x10352E8", Offset = "0x10352E8", VA = "0x10352E8")]
	private void Awake()
	{
	}

	[Token(Token = "0x60006F8")]
	[Address(RVA = "0x103541C", Offset = "0x103541C", VA = "0x103541C")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60006F9")]
	[Address(RVA = "0x10354F8", Offset = "0x10354F8", VA = "0x10354F8")]
	private void OnButtonActivated()
	{
	}

	[Token(Token = "0x60006FA")]
	[Address(RVA = "0x103553C", Offset = "0x103553C", VA = "0x103553C")]
	public ButtonAnimation()
	{
	}
}
[Token(Token = "0x2000106")]
public class ButtonMaterialSwap : MonoBehaviour
{
	[Token(Token = "0x2000107")]
	[CompilerGenerated]
	private sealed class <BuildDelayedMaterialResetRoutine>d__10 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40005A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40005A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40005A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ButtonMaterialSwap <>4__this;

		[Token(Token = "0x17000076")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000705")]
			[Address(RVA = "0x103595C", Offset = "0x103595C", VA = "0x103595C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000077")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000707")]
			[Address(RVA = "0x10359A4", Offset = "0x10359A4", VA = "0x10359A4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000702")]
		[Address(RVA = "0x1035840", Offset = "0x1035840", VA = "0x1035840")]
		[DebuggerHidden]
		public <BuildDelayedMaterialResetRoutine>d__10(int <>1__state)
		{
		}

		[Token(Token = "0x6000703")]
		[Address(RVA = "0x1035878", Offset = "0x1035878", VA = "0x1035878", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000704")]
		[Address(RVA = "0x103587C", Offset = "0x103587C", VA = "0x103587C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000706")]
		[Address(RVA = "0x1035964", Offset = "0x1035964", VA = "0x1035964", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400059B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Material _idleMaterial;

	[Token(Token = "0x400059C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Material _activeMaterial;

	[Token(Token = "0x400059D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private float _activeMaterialDuration;

	[Token(Token = "0x400059E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Interactables.Button _button;

	[Token(Token = "0x400059F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private MeshRenderer _renderer;

	[Token(Token = "0x40005A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Coroutine _resetRoutine;

	[Token(Token = "0x60006FB")]
	[Address(RVA = "0x1035544", Offset = "0x1035544", VA = "0x1035544")]
	private void Awake()
	{
	}

	[Token(Token = "0x60006FC")]
	[Address(RVA = "0x10355D4", Offset = "0x10355D4", VA = "0x10355D4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60006FD")]
	[Address(RVA = "0x103569C", Offset = "0x103569C", VA = "0x103569C")]
	private void Start()
	{
	}

	[Token(Token = "0x60006FE")]
	[Address(RVA = "0x1035778", Offset = "0x1035778", VA = "0x1035778")]
	private void MaterialResetRoutine()
	{
	}

	[Token(Token = "0x60006FF")]
	[Address(RVA = "0x10357CC", Offset = "0x10357CC", VA = "0x10357CC")]
	[IteratorStateMachine(typeof(<BuildDelayedMaterialResetRoutine>d__10))]
	private IEnumerator BuildDelayedMaterialResetRoutine()
	{
		return null;
	}

	[Token(Token = "0x6000700")]
	[Address(RVA = "0x10355DC", Offset = "0x10355DC", VA = "0x10355DC")]
	private void UpdateMaterial(Material material)
	{
	}

	[Token(Token = "0x6000701")]
	[Address(RVA = "0x1035868", Offset = "0x1035868", VA = "0x1035868")]
	public ButtonMaterialSwap()
	{
	}
}
[Token(Token = "0x2000108")]
public class ButtonSound : MonoBehaviour
{
	[Token(Token = "0x40005A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	public EventReference _fmodEventReference;

	[Token(Token = "0x40005A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Interactables.Button _button;

	[Token(Token = "0x6000708")]
	[Address(RVA = "0x10359AC", Offset = "0x10359AC", VA = "0x10359AC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000709")]
	[Address(RVA = "0x1035A74", Offset = "0x1035A74", VA = "0x1035A74")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600070A")]
	[Address(RVA = "0x1035B50", Offset = "0x1035B50", VA = "0x1035B50")]
	private void OnButtonActivated()
	{
	}

	[Token(Token = "0x600070B")]
	[Address(RVA = "0x1035C7C", Offset = "0x1035C7C", VA = "0x1035C7C")]
	public ButtonSound()
	{
	}
}
[Token(Token = "0x2000109")]
public class CassettePlayerCosmetics : UpdatableMonoBehaviour, IPostDeserialiseNotified
{
	[Token(Token = "0x200010A")]
	private enum AnimationState
	{
		[Token(Token = "0x40005AE")]
		DockOpen,
		[Token(Token = "0x40005AF")]
		DockClosed,
		[Token(Token = "0x40005B0")]
		Playing
	}

	[Serializable]
	[Token(Token = "0x200010B")]
	private struct AnimationReferences
	{
		[Token(Token = "0x40005B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public AnimationClip playing;

		[Token(Token = "0x40005B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public AnimationClip doorOpen;

		[Token(Token = "0x40005B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public AnimationClip doorOpened;

		[Token(Token = "0x40005B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AnimationClip doorClose;
	}

	[Serializable]
	[Token(Token = "0x200010C")]
	private struct FMODEvents
	{
		[Token(Token = "0x40005B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		public EventReference _playingEventReference;

		[Token(Token = "0x40005B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		public EventReference _openSlotEventReference;

		[Token(Token = "0x40005B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		public EventReference _closeSlotEventReference;

		[Token(Token = "0x40005B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		public EventReference _insertCassetteEventReference;

		[Token(Token = "0x40005B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		public EventReference _removeCassetteEventReference;
	}

	[Token(Token = "0x40005A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private AnimationReferences _animations;

	[Token(Token = "0x40005A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private FMODEvents _fmodEvents;

	[Token(Token = "0x40005A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private AudioHandle _playingAudioHandle;

	[Token(Token = "0x40005A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private CassettePlayer _cassettePlayer;

	[Token(Token = "0x40005AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private PhysicsHoldableDock _cassetteDock;

	[Token(Token = "0x40005AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private Animation _animationComponent;

	[Token(Token = "0x40005AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private AnimationState _animationState;

	[Token(Token = "0x600070C")]
	[Address(RVA = "0x1035C84", Offset = "0x1035C84", VA = "0x1035C84")]
	private void Awake()
	{
	}

	[Token(Token = "0x600070D")]
	[Address(RVA = "0x1035EB8", Offset = "0x1035EB8", VA = "0x1035EB8", Slot = "10")]
	protected override void OnDestroy()
	{
	}

	[Token(Token = "0x600070E")]
	[Address(RVA = "0x1036118", Offset = "0x1036118", VA = "0x1036118", Slot = "11")]
	public void OnPostDeserialise()
	{
	}

	[Token(Token = "0x600070F")]
	[Address(RVA = "0x103623C", Offset = "0x103623C", VA = "0x103623C")]
	private bool OnCanUseDockCallback(PhysicsHoldableDock dock, PhysicsHoldable dockable)
	{
		return default(bool);
	}

	[Token(Token = "0x6000710")]
	[Address(RVA = "0x1036290", Offset = "0x1036290", VA = "0x1036290")]
	private void OnCassetteDockedCallback(PhysicsHoldableDock dock, PhysicsHoldable docked)
	{
	}

	[Token(Token = "0x6000711")]
	[Address(RVA = "0x10363BC", Offset = "0x10363BC", VA = "0x10363BC")]
	private void OnCassetteUndockedCallback(PhysicsHoldableDock dock, PhysicsHoldable docked)
	{
	}

	[Token(Token = "0x6000712")]
	[Address(RVA = "0x10364E8", Offset = "0x10364E8", VA = "0x10364E8", Slot = "7")]
	public override void OnUpdate(float dt)
	{
	}

	[Token(Token = "0x6000713")]
	[Address(RVA = "0x1036170", Offset = "0x1036170", VA = "0x1036170")]
	private AnimationState CalculateDesiredAnimationState()
	{
		return default(AnimationState);
	}

	[Token(Token = "0x6000714")]
	[Address(RVA = "0x1036B78", Offset = "0x1036B78", VA = "0x1036B78")]
	public CassettePlayerCosmetics()
	{
	}
}
[Token(Token = "0x200010D")]
public class DockInteractionPreview : MonoBehaviour, PlayerInteractionHighlighter.IHighlightable
{
	[Token(Token = "0x40005BA")]
	private const int c_initialMeshRendererMapSize = 4;

	[Token(Token = "0x40005BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Transform _previewAttachPoint;

	[Token(Token = "0x40005BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Dictionary<MeshRenderer, MeshRenderer> _previewToOriginalMap;

	[Token(Token = "0x40005BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private GameObject _previewRoot;

	[Token(Token = "0x6000715")]
	[Address(RVA = "0x1036B88", Offset = "0x1036B88", VA = "0x1036B88")]
	public DockInteractionPreview()
	{
	}

	[Token(Token = "0x6000716")]
	[Address(RVA = "0x1036C14", Offset = "0x1036C14", VA = "0x1036C14")]
	public void Preview(GameObject obj)
	{
	}

	[Token(Token = "0x6000717")]
	[Address(RVA = "0x1036DE4", Offset = "0x1036DE4", VA = "0x1036DE4")]
	public void ClearPreview()
	{
	}

	[Token(Token = "0x6000718")]
	[Address(RVA = "0x1036E84", Offset = "0x1036E84", VA = "0x1036E84", Slot = "4")]
	public void Highlight(Actions.InteractionBase highlightingInteraction, InteractorBase interactor)
	{
	}

	[Token(Token = "0x6000719")]
	[Address(RVA = "0x1037100", Offset = "0x1037100", VA = "0x1037100", Slot = "5")]
	public void UnHighlight()
	{
	}
}
[Token(Token = "0x200010E")]
public static class RendererCopyUtil<T> where T : Renderer
{
	[Token(Token = "0x40005BE")]
	private const int c_initialRendererListSize = 4;

	[Token(Token = "0x40005BF")]
	private const int c_initialTransformListSize = 8;

	[Token(Token = "0x40005C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static List<T> s_cachedRendererList;

	[Token(Token = "0x40005C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static List<Transform> s_cachedTransformList;

	[Token(Token = "0x40005C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Dictionary<Transform, Transform> s_cachedMirroredTransformMap;

	[Token(Token = "0x600071A")]
	static RendererCopyUtil()
	{
	}

	[Token(Token = "0x600071B")]
	public static bool MirrorRendererHierarchy(GameObject root, out GameObject mirrorRoot, ref Dictionary<T, T> mirrorToOriginal)
	{
		return default(bool);
	}
}
[Token(Token = "0x200010F")]
public class HighlightMesh : MonoBehaviour, PlayerInteractionHighlighter.IHighlightable
{
	[Token(Token = "0x40005C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static MaterialPropertyBlock s_highlightedPropertyBlock;

	[Token(Token = "0x40005C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private MeshRenderer _meshRenderer;

	[Token(Token = "0x600071C")]
	[Address(RVA = "0x10372A4", Offset = "0x10372A4", VA = "0x10372A4")]
	private void Awake()
	{
	}

	[Token(Token = "0x600071D")]
	[Address(RVA = "0x10372FC", Offset = "0x10372FC", VA = "0x10372FC")]
	private void Start()
	{
	}

	[Token(Token = "0x600071E")]
	[Address(RVA = "0x10373DC", Offset = "0x10373DC", VA = "0x10373DC", Slot = "4")]
	public void Highlight(Actions.InteractionBase highlightingInteraction, InteractorBase interactor)
	{
	}

	[Token(Token = "0x600071F")]
	[Address(RVA = "0x1037438", Offset = "0x1037438", VA = "0x1037438", Slot = "5")]
	public void UnHighlight()
	{
	}

	[Token(Token = "0x6000720")]
	[Address(RVA = "0x1037458", Offset = "0x1037458", VA = "0x1037458")]
	public HighlightMesh()
	{
	}
}
[Token(Token = "0x2000110")]
public class PhoneLineFlashing : MonoBehaviour, IInitialisable, ISerialisable, IDeserialisable, ISceneReferrable
{
	[Token(Token = "0x2000111")]
	private static class Keys
	{
		[Token(Token = "0x40005CC")]
		public const string IsFlashing = "isFlashing";
	}

	[Token(Token = "0x40005C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Renderer _buttonRenderer;

	[Token(Token = "0x40005C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private int phoneline;

	[Token(Token = "0x40005C7")]
	private const float c_flashingOn = 1f;

	[Token(Token = "0x40005C8")]
	private const float c_flashingOff = 0f;

	[Token(Token = "0x40005C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static int s_flashBoolID;

	[Token(Token = "0x40005CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static MaterialPropertyBlock s_materialBlock;

	[Token(Token = "0x40005CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private bool _isFlashing;

	[Token(Token = "0x17000078")]
	public string typeId
	{
		[Token(Token = "0x6000727")]
		[Address(RVA = "0x10378B8", Offset = "0x10378B8", VA = "0x10378B8", Slot = "7")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000721")]
	[Address(RVA = "0x1037460", Offset = "0x1037460", VA = "0x1037460")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000722")]
	[Address(RVA = "0x1037518", Offset = "0x1037518", VA = "0x1037518", Slot = "4")]
	public bool Initialise()
	{
		return default(bool);
	}

	[Token(Token = "0x6000723")]
	[Address(RVA = "0x1037620", Offset = "0x1037620", VA = "0x1037620")]
	public void ActivateFlash()
	{
	}

	[Token(Token = "0x6000724")]
	[Address(RVA = "0x1037838", Offset = "0x1037838", VA = "0x1037838")]
	public void DisableFlash()
	{
	}

	[Token(Token = "0x6000725")]
	[Address(RVA = "0x10376A4", Offset = "0x10376A4", VA = "0x10376A4")]
	private void SetMaterialProperty(int propertyID, float enable)
	{
	}

	[Token(Token = "0x6000726")]
	[Address(RVA = "0x103779C", Offset = "0x103779C", VA = "0x103779C")]
	private void SetPropertyBlock(MaterialPropertyBlock materialBlock)
	{
	}

	[Token(Token = "0x6000728")]
	[Address(RVA = "0x10378F8", Offset = "0x10378F8", VA = "0x10378F8", Slot = "6")]
	public bool Serialise(FlexBufferBuilder builder, ISceneObjectReferenceSerialiser objectSerialiser)
	{
		return default(bool);
	}

	[Token(Token = "0x6000729")]
	[Address(RVA = "0x103795C", Offset = "0x103795C", VA = "0x103795C", Slot = "8")]
	public bool Deserialise(FlexBuffer.Map root, ISceneObjectReferenceDeserialiser objectDeserialiser)
	{
		return default(bool);
	}

	[Token(Token = "0x600072A")]
	[Address(RVA = "0x1037A20", Offset = "0x1037A20", VA = "0x1037A20")]
	public PhoneLineFlashing()
	{
	}
}
[Token(Token = "0x2000112")]
public class ButtonRumble : MonoBehaviour
{
	[Token(Token = "0x40005CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private ScriptableTimedRumbleEvent _timedRumbleEvent;

	[Token(Token = "0x40005CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Interactables.Button _button;

	[Token(Token = "0x600072C")]
	[Address(RVA = "0x1037A90", Offset = "0x1037A90", VA = "0x1037A90")]
	private void Awake()
	{
	}

	[Token(Token = "0x600072D")]
	[Address(RVA = "0x1037B58", Offset = "0x1037B58", VA = "0x1037B58")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600072E")]
	[Address(RVA = "0x1037C34", Offset = "0x1037C34", VA = "0x1037C34")]
	private void OnButtonActivated()
	{
	}

	[Token(Token = "0x600072F")]
	[Address(RVA = "0x1037D00", Offset = "0x1037D00", VA = "0x1037D00")]
	public ButtonRumble()
	{
	}
}
[Token(Token = "0x2000113")]
public abstract class BaseRumbleCondition : MonoBehaviour
{
	[Token(Token = "0x6000730")]
	public abstract bool IsTrue();

	[Token(Token = "0x6000731")]
	[Address(RVA = "0x1037D08", Offset = "0x1037D08", VA = "0x1037D08")]
	protected BaseRumbleCondition()
	{
	}
}
[Token(Token = "0x2000114")]
[RemoveOnVr]
public class FsBoundedMotionInteractionDeltaRumbleCondition : BaseRumbleCondition
{
	[Token(Token = "0x40005CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private FsBoundedMotionHandler _boundedMotionHandler;

	[Token(Token = "0x40005D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private float _interactionDelayTime;

	[Token(Token = "0x40005D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float _lastTimeInteractionDetected;

	[Token(Token = "0x6000732")]
	[Address(RVA = "0x1037D10", Offset = "0x1037D10", VA = "0x1037D10")]
	protected void Awake()
	{
	}

	[Token(Token = "0x6000733")]
	[Address(RVA = "0x1037D68", Offset = "0x1037D68", VA = "0x1037D68")]
	protected void Update()
	{
	}

	[Token(Token = "0x6000734")]
	[Address(RVA = "0x1037D6C", Offset = "0x1037D6C", VA = "0x1037D6C")]
	private void CheckForInteraction()
	{
	}

	[Token(Token = "0x6000735")]
	[Address(RVA = "0x1037E14", Offset = "0x1037E14", VA = "0x1037E14", Slot = "4")]
	public override bool IsTrue()
	{
		return default(bool);
	}

	[Token(Token = "0x6000736")]
	[Address(RVA = "0x1037E40", Offset = "0x1037E40", VA = "0x1037E40")]
	public FsBoundedMotionInteractionDeltaRumbleCondition()
	{
	}
}
[Token(Token = "0x2000115")]
[RemoveOnVr]
public class FsMotionInteractionRumbleCondition : BaseRumbleCondition
{
	[Token(Token = "0x40005D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private FsBoundedMotionInteraction _boundedMotionInteraction;

	[Token(Token = "0x6000737")]
	[Address(RVA = "0x1037E54", Offset = "0x1037E54", VA = "0x1037E54")]
	protected void Awake()
	{
	}

	[Token(Token = "0x6000738")]
	[Address(RVA = "0x1037F14", Offset = "0x1037F14", VA = "0x1037F14", Slot = "4")]
	public override bool IsTrue()
	{
		return default(bool);
	}

	[Token(Token = "0x6000739")]
	[Address(RVA = "0x1037FB4", Offset = "0x1037FB4", VA = "0x1037FB4")]
	public FsMotionInteractionRumbleCondition()
	{
	}
}
[Token(Token = "0x2000116")]
public class HandleIsHeldRumbleCondition : BaseRumbleCondition
{
	[Token(Token = "0x40005D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Handle _handle;

	[Token(Token = "0x600073A")]
	[Address(RVA = "0x1037FBC", Offset = "0x1037FBC", VA = "0x1037FBC")]
	protected void Awake()
	{
	}

	[Token(Token = "0x600073B")]
	[Address(RVA = "0x103807C", Offset = "0x103807C", VA = "0x103807C", Slot = "4")]
	public override bool IsTrue()
	{
		return default(bool);
	}

	[Token(Token = "0x600073C")]
	[Address(RVA = "0x10380B4", Offset = "0x10380B4", VA = "0x10380B4")]
	public HandleIsHeldRumbleCondition()
	{
	}
}
[Token(Token = "0x2000117")]
public class HingeJointMovementRumbleCondition : BaseRumbleCondition
{
	[Token(Token = "0x40005D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Header("Rumble Settings")]
	[SerializeField]
	private float _minSpeedForRumble;

	[Token(Token = "0x40005D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private HingeJoint _hinge;

	[Token(Token = "0x600073D")]
	[Address(RVA = "0x10380BC", Offset = "0x10380BC", VA = "0x10380BC")]
	protected void Awake()
	{
	}

	[Token(Token = "0x600073E")]
	[Address(RVA = "0x1038114", Offset = "0x1038114", VA = "0x1038114", Slot = "4")]
	public override bool IsTrue()
	{
		return default(bool);
	}

	[Token(Token = "0x600073F")]
	[Address(RVA = "0x1038148", Offset = "0x1038148", VA = "0x1038148")]
	public HingeJointMovementRumbleCondition()
	{
	}
}
[Token(Token = "0x2000118")]
public class RigidbodyMovementRumbleCondition : BaseRumbleCondition
{
	[Token(Token = "0x40005D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Rigidbody _rigidbody;

	[Token(Token = "0x40005D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private float _motionDelayTime;

	[Token(Token = "0x40005D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float _lastTimeMotionDetected;

	[Token(Token = "0x40005D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Vector3 _lastPositionChecked;

	[Token(Token = "0x6000740")]
	[Address(RVA = "0x103815C", Offset = "0x103815C", VA = "0x103815C")]
	protected void Awake()
	{
	}

	[Token(Token = "0x6000741")]
	[Address(RVA = "0x103820C", Offset = "0x103820C", VA = "0x103820C")]
	protected void Update()
	{
	}

	[Token(Token = "0x6000742")]
	[Address(RVA = "0x1038210", Offset = "0x1038210", VA = "0x1038210")]
	private void CheckForMovement()
	{
	}

	[Token(Token = "0x6000743")]
	[Address(RVA = "0x1038290", Offset = "0x1038290", VA = "0x1038290", Slot = "4")]
	public override bool IsTrue()
	{
		return default(bool);
	}

	[Token(Token = "0x6000744")]
	[Address(RVA = "0x10382BC", Offset = "0x10382BC", VA = "0x10382BC")]
	public RigidbodyMovementRumbleCondition()
	{
	}
}
[Token(Token = "0x2000119")]
public class RumbleHandler : MonoBehaviour
{
	[Token(Token = "0x40005DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private ScriptableManualRumbleEvent _rumbleEvent;

	[Token(Token = "0x40005DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private List<BaseRumbleCondition> _rumbleConditions;

	[Token(Token = "0x40005DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool _isRumbling;

	[Token(Token = "0x6000745")]
	[Address(RVA = "0x1038328", Offset = "0x1038328", VA = "0x1038328")]
	private bool ShouldBeRumbling()
	{
		return default(bool);
	}

	[Token(Token = "0x6000746")]
	[Address(RVA = "0x1038414", Offset = "0x1038414", VA = "0x1038414", Slot = "4")]
	protected virtual void Update()
	{
	}

	[Token(Token = "0x6000747")]
	[Address(RVA = "0x1038490", Offset = "0x1038490", VA = "0x1038490")]
	private void StartRumble()
	{
	}

	[Token(Token = "0x6000748")]
	[Address(RVA = "0x1038550", Offset = "0x1038550", VA = "0x1038550")]
	private void StopRumble()
	{
	}

	[Token(Token = "0x6000749")]
	[Address(RVA = "0x103857C", Offset = "0x103857C", VA = "0x103857C")]
	public RumbleHandler()
	{
	}
}
[Token(Token = "0x200011A")]
public class RumbleOneShot : MonoBehaviour
{
	[Token(Token = "0x40005DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private BaseScriptableRumbleEvent _rumbleEvent;

	[Token(Token = "0x600074A")]
	[Address(RVA = "0x1038604", Offset = "0x1038604", VA = "0x1038604")]
	public void Play()
	{
	}

	[Token(Token = "0x600074B")]
	[Address(RVA = "0x10386B8", Offset = "0x10386B8", VA = "0x10386B8")]
	public RumbleOneShot()
	{
	}
}
[Token(Token = "0x200011B")]
public class SafeAudio : MonoBehaviour
{
	[Token(Token = "0x40005DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private EventReference correctCombinationEventReference;

	[Token(Token = "0x40005DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private EventReference incorrectCombinationEventReference;

	[Token(Token = "0x40005E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private EventReference holyGrenadeEventReference;

	[Token(Token = "0x600074C")]
	[Address(RVA = "0x10386C0", Offset = "0x10386C0", VA = "0x10386C0")]
	public void PlayCorrectPinCodeSound()
	{
	}

	[Token(Token = "0x600074D")]
	[Address(RVA = "0x10387EC", Offset = "0x10387EC", VA = "0x10387EC")]
	public void PlayIncorrectPinCodeSound()
	{
	}

	[Token(Token = "0x600074E")]
	[Address(RVA = "0x1038918", Offset = "0x1038918", VA = "0x1038918")]
	public void PlayHolyGrenadeSound()
	{
	}

	[Token(Token = "0x600074F")]
	[Address(RVA = "0x1038A44", Offset = "0x1038A44", VA = "0x1038A44")]
	public SafeAudio()
	{
	}
}
[Token(Token = "0x200011C")]
public class SafeLights : MonoBehaviour
{
	[Token(Token = "0x40005E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Material lightOnMaterial;

	[Token(Token = "0x40005E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Material lightOffMaterial;

	[Token(Token = "0x40005E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private MeshRenderer lightsMeshRenerer;

	[Token(Token = "0x40005E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private int[] lightToMaterialIds;

	[Token(Token = "0x40005E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private Animation lightsAnimation;

	[Token(Token = "0x40005E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private AnimationClip correctPinAnimation;

	[Token(Token = "0x40005E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private AnimationClip incorrectPinAnimation;

	[Token(Token = "0x40005E8")]
	private const int cStateBase = 10;

	[Token(Token = "0x6000750")]
	[Address(RVA = "0x1038A4C", Offset = "0x1038A4C", VA = "0x1038A4C")]
	public void PlayCorrectPinCodeAnimation()
	{
	}

	[Token(Token = "0x6000751")]
	[Address(RVA = "0x1038A88", Offset = "0x1038A88", VA = "0x1038A88")]
	public void PlayIncorrectPinCodeAnimation()
	{
	}

	[Token(Token = "0x6000752")]
	[Address(RVA = "0x1038AC4", Offset = "0x1038AC4", VA = "0x1038AC4")]
	public void SetLightsState(AnimationEvent animEvent)
	{
	}

	[Token(Token = "0x6000753")]
	[Address(RVA = "0x1038C14", Offset = "0x1038C14", VA = "0x1038C14")]
	public void TurnOnAllLights()
	{
	}

	[Token(Token = "0x6000754")]
	[Address(RVA = "0x1038C30", Offset = "0x1038C30", VA = "0x1038C30")]
	public void TurnOnFirstXLights(int x)
	{
	}

	[Token(Token = "0x6000755")]
	[Address(RVA = "0x1038AF0", Offset = "0x1038AF0", VA = "0x1038AF0")]
	private void SetLightsState(int state)
	{
	}

	[Token(Token = "0x6000756")]
	[Address(RVA = "0x1038CCC", Offset = "0x1038CCC", VA = "0x1038CCC")]
	public SafeLights()
	{
	}
}
[Token(Token = "0x200011D")]
public class ScopedMeshVisibility : UpdatableMonoBehaviour
{
	[Token(Token = "0x40005E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private IActionScoper _playerActionScoper;

	[Token(Token = "0x40005EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private ActionScopeBase[] _visibleScopes;

	[Token(Token = "0x40005EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private MeshRenderer _meshRenderer;

	[Token(Token = "0x40005EC")]
	private const int c_tempInteractionsInitialSize = 8;

	[Token(Token = "0x40005ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static List<Actions.InteractionBase> s_tempInteractions;

	[Token(Token = "0x40005EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static HashSet<ActionScopeBase> s_tempScopeSet;

	[Token(Token = "0x6000757")]
	[Address(RVA = "0x1038CD4", Offset = "0x1038CD4", VA = "0x1038CD4")]
	static ScopedMeshVisibility()
	{
	}

	[Token(Token = "0x6000758")]
	[Address(RVA = "0x1038DC4", Offset = "0x1038DC4", VA = "0x1038DC4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000759")]
	[Address(RVA = "0x1038E1C", Offset = "0x1038E1C", VA = "0x1038E1C", Slot = "6")]
	public override bool Initialise()
	{
		return default(bool);
	}

	[Token(Token = "0x600075A")]
	[Address(RVA = "0x1039254", Offset = "0x1039254", VA = "0x1039254", Slot = "7")]
	public override void OnUpdate(float dt)
	{
	}

	[Token(Token = "0x600075B")]
	[Address(RVA = "0x10393C0", Offset = "0x10393C0", VA = "0x10393C0")]
	public ScopedMeshVisibility()
	{
	}
}
[Token(Token = "0x200011E")]
public class ToggleButtonAnimation : MonoBehaviour, IInitialisable
{
	[Serializable]
	[Token(Token = "0x200011F")]
	private struct AnimationReferences
	{
		[Token(Token = "0x40005F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public AnimationClip activate;

		[Token(Token = "0x40005F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public AnimationClip activated;

		[Token(Token = "0x40005F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public AnimationClip deactivate;
	}

	[Token(Token = "0x40005EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Animation _animationComponent;

	[Token(Token = "0x40005F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private AnimationReferences _animations;

	[Token(Token = "0x40005F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Interactables.ToggleButton _toggleButton;

	[Token(Token = "0x600075C")]
	[Address(RVA = "0x10393C8", Offset = "0x10393C8", VA = "0x10393C8")]
	private void Awake()
	{
	}

	[Token(Token = "0x600075D")]
	[Address(RVA = "0x10394FC", Offset = "0x10394FC", VA = "0x10394FC", Slot = "4")]
	public bool Initialise()
	{
		return default(bool);
	}

	[Token(Token = "0x600075E")]
	[Address(RVA = "0x1039558", Offset = "0x1039558", VA = "0x1039558")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600075F")]
	[Address(RVA = "0x1039694", Offset = "0x1039694", VA = "0x1039694")]
	private void OnButtonActivated()
	{
	}

	[Token(Token = "0x6000760")]
	[Address(RVA = "0x10396D8", Offset = "0x10396D8", VA = "0x10396D8")]
	private void OnButtonDeactivated()
	{
	}

	[Token(Token = "0x6000761")]
	[Address(RVA = "0x103971C", Offset = "0x103971C", VA = "0x103971C")]
	public ToggleButtonAnimation()
	{
	}
}
[Token(Token = "0x2000120")]
public class ToggleButtonMaterialSwap : MonoBehaviour
{
	[Token(Token = "0x40005F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Material _idleMaterial;

	[Token(Token = "0x40005F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Material _activeMaterial;

	[Token(Token = "0x40005F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Interactables.ToggleButton _button;

	[Token(Token = "0x40005F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private MeshRenderer _renderer;

	[Token(Token = "0x6000762")]
	[Address(RVA = "0x1039724", Offset = "0x1039724", VA = "0x1039724")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000763")]
	[Address(RVA = "0x10397B4", Offset = "0x10397B4", VA = "0x10397B4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000764")]
	[Address(RVA = "0x10398E4", Offset = "0x10398E4", VA = "0x10398E4")]
	private void UpdateMaterial()
	{
	}

	[Token(Token = "0x6000765")]
	[Address(RVA = "0x10399B0", Offset = "0x10399B0", VA = "0x10399B0")]
	public ToggleButtonMaterialSwap()
	{
	}
}
[Token(Token = "0x2000121")]
public class VinylPlayerCosmetics : UpdatableMonoBehaviour, IPostDeserialiseNotified
{
	[Token(Token = "0x2000122")]
	private enum VinylPlayerState
	{
		[Token(Token = "0x400060A")]
		Playing,
		[Token(Token = "0x400060B")]
		Stopped
	}

	[Serializable]
	[Token(Token = "0x2000123")]
	private struct NeedlePosition
	{
		[Token(Token = "0x400060C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float _startRotation;

		[Token(Token = "0x400060D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float _endRotation;
	}

	[Serializable]
	[Token(Token = "0x2000124")]
	private struct AnimationReferences
	{
		[Token(Token = "0x400060E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public AnimationClip playing;

		[Token(Token = "0x400060F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public AnimationClip needleUp;

		[Token(Token = "0x4000610")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public AnimationClip needleDown;
	}

	[Serializable]
	[Token(Token = "0x2000125")]
	private struct FMODEvents
	{
		[Token(Token = "0x4000611")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		public EventReference _insertVinylEventReference;

		[Token(Token = "0x4000612")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		public EventReference _removeVinylEventReference;
	}

	[Token(Token = "0x40005F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Transform _needleTransform;

	[Token(Token = "0x40005FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private NeedlePosition _needlePosition;

	[Token(Token = "0x40005FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private float needleTrackingSpeed;

	[Token(Token = "0x40005FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private Transform _attachPoint;

	[Token(Token = "0x40005FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private float rotationSpeed;

	[Token(Token = "0x40005FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private float currentRotationValue;

	[Token(Token = "0x40005FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private FMODEvents _fmodEvents;

	[Token(Token = "0x4000600")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private float _needleIdleRotationY;

	[Token(Token = "0x4000601")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private float _needleNormalizedRotationY;

	[Token(Token = "0x4000602")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private float _needleEulerRotationY;

	[Token(Token = "0x4000603")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private VinylPlayer _vinylPlayer;

	[Token(Token = "0x4000604")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private PhysicsHoldableDock _vinylDock;

	[Token(Token = "0x4000605")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private PhysicsHoldable _dockedVinylHoldable;

	[Token(Token = "0x4000606")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private PowerSupplyEntryPoint _powerSupply;

	[Token(Token = "0x4000607")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private VinylPlayerState _vinylPlayerState;

	[Token(Token = "0x4000608")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	private bool _dockSoundEnabled;

	[Token(Token = "0x6000766")]
	[Address(RVA = "0x10399B8", Offset = "0x10399B8", VA = "0x10399B8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000767")]
	[Address(RVA = "0x1039BEC", Offset = "0x1039BEC", VA = "0x1039BEC", Slot = "10")]
	protected override void OnDestroy()
	{
	}

	[Token(Token = "0x6000768")]
	[Address(RVA = "0x1039DBC", Offset = "0x1039DBC", VA = "0x1039DBC", Slot = "11")]
	public void OnPostDeserialise()
	{
	}

	[Token(Token = "0x6000769")]
	[Address(RVA = "0x1039E8C", Offset = "0x1039E8C", VA = "0x1039E8C")]
	private bool OnCanUseDockCallback(PhysicsHoldableDock dock, PhysicsHoldable dockable)
	{
		return default(bool);
	}

	[Token(Token = "0x600076A")]
	[Address(RVA = "0x1039E94", Offset = "0x1039E94", VA = "0x1039E94")]
	private void OnVinylDockedCallback(PhysicsHoldableDock dock, PhysicsHoldable docked)
	{
	}

	[Token(Token = "0x600076B")]
	[Address(RVA = "0x1039FC8", Offset = "0x1039FC8", VA = "0x1039FC8")]
	private void OnVinylUndockedCallback(PhysicsHoldableDock dock, PhysicsHoldable docked)
	{
	}

	[Token(Token = "0x600076C")]
	[Address(RVA = "0x103A1DC", Offset = "0x103A1DC", VA = "0x103A1DC", Slot = "7")]
	public override void OnUpdate(float dt)
	{
	}

	[Token(Token = "0x600076D")]
	[Address(RVA = "0x103A66C", Offset = "0x103A66C", VA = "0x103A66C")]
	public void EnableDockSound(bool enable)
	{
	}

	[Token(Token = "0x600076E")]
	[Address(RVA = "0x103A358", Offset = "0x103A358", VA = "0x103A358")]
	private VinylPlayerState CalculateDesiredVinylState()
	{
		return default(VinylPlayerState);
	}

	[Token(Token = "0x600076F")]
	[Address(RVA = "0x103A440", Offset = "0x103A440", VA = "0x103A440")]
	private void MoveNeedle(float dt)
	{
	}

	[Token(Token = "0x6000770")]
	[Address(RVA = "0x103A424", Offset = "0x103A424", VA = "0x103A424")]
	private float GetNormalizedValue(float maxValue, float currentValue, bool invertValue)
	{
		return default(float);
	}

	[Token(Token = "0x6000771")]
	[Address(RVA = "0x103A678", Offset = "0x103A678", VA = "0x103A678")]
	private float ConvertNormalizedValueToOriginal(float normalizedValue, float maxValue)
	{
		return default(float);
	}

	[Token(Token = "0x6000772")]
	[Address(RVA = "0x103A580", Offset = "0x103A580", VA = "0x103A580")]
	private void RotateVinyl(float dt)
	{
	}

	[Token(Token = "0x6000773")]
	[Address(RVA = "0x103A680", Offset = "0x103A680", VA = "0x103A680")]
	public VinylPlayerCosmetics()
	{
	}
}
[Token(Token = "0x2000126")]
public class SoloDispensedRestorable : RestorableObject
{
	[Token(Token = "0x6000774")]
	[Address(RVA = "0x103A6A4", Offset = "0x103A6A4", VA = "0x103A6A4", Slot = "4")]
	public override void PostRestore()
	{
	}

	[Token(Token = "0x6000775")]
	[Address(RVA = "0x103A6D8", Offset = "0x103A6D8", VA = "0x103A6D8")]
	public SoloDispensedRestorable()
	{
	}
}
[Token(Token = "0x2000127")]
public class TouchHandler : MonoBehaviour, ITouchableInteractable
{
	[Token(Token = "0x4000613")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private UnityEvent callback;

	[Token(Token = "0x6000776")]
	[Address(RVA = "0x103A6E0", Offset = "0x103A6E0", VA = "0x103A6E0", Slot = "4")]
	public bool CanTouch()
	{
		return default(bool);
	}

	[Token(Token = "0x6000777")]
	[Address(RVA = "0x103A6E8", Offset = "0x103A6E8", VA = "0x103A6E8", Slot = "5")]
	public void OnTouch(InteractorBase interactor, Vector3 touchDirection)
	{
	}

	[Token(Token = "0x6000778")]
	[Address(RVA = "0x103A6FC", Offset = "0x103A6FC", VA = "0x103A6FC")]
	public TouchHandler()
	{
	}
}
[Token(Token = "0x2000128")]
public class ADoorLock : MonoBehaviour
{
	[Token(Token = "0x4000614")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool locked;

	[Token(Token = "0x6000779")]
	[Address(RVA = "0x103A704", Offset = "0x103A704", VA = "0x103A704")]
	public void Lock()
	{
	}

	[Token(Token = "0x600077A")]
	[Address(RVA = "0x103A710", Offset = "0x103A710", VA = "0x103A710")]
	public void Unlock()
	{
	}

	[Token(Token = "0x600077B")]
	[Address(RVA = "0x103A718", Offset = "0x103A718", VA = "0x103A718")]
	public ADoorLock()
	{
	}
}
[Token(Token = "0x2000129")]
public class BoardLeaveTrigger : MonoBehaviour
{
	[Token(Token = "0x4000615")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[HideInInspector]
	public Board board;

	[Token(Token = "0x600077C")]
	[Address(RVA = "0x103A728", Offset = "0x103A728", VA = "0x103A728")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x600077D")]
	[Address(RVA = "0x103A87C", Offset = "0x103A87C", VA = "0x103A87C")]
	public BoardLeaveTrigger()
	{
	}
}
[Token(Token = "0x200012A")]
public class Cartridge : MonoBehaviour
{
	[Token(Token = "0x4000617")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject _mesh;

	[Token(Token = "0x4000618")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public CartridgeMachine.JingleTitles _cartContent;

	[Token(Token = "0x4000619")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private bool _highlighted;

	[Token(Token = "0x400061A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private int _leanTweenId;

	[Token(Token = "0x400061B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static int s_counter;

	[Token(Token = "0x400061C")]
	private const int maxInstances = 12;

	[Token(Token = "0x400061D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Collider _collider;

	[Token(Token = "0x17000079")]
	public InteractableItem _InteractableItem
	{
		[Token(Token = "0x600077E")]
		[Address(RVA = "0x103A884", Offset = "0x103A884", VA = "0x103A884")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x600077F")]
		[Address(RVA = "0x103A88C", Offset = "0x103A88C", VA = "0x103A88C")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x6000780")]
	[Address(RVA = "0x103A894", Offset = "0x103A894", VA = "0x103A894")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000781")]
	[Address(RVA = "0x103A984", Offset = "0x103A984", VA = "0x103A984")]
	public void SetHighlightedInRack(bool highlighted)
	{
	}

	[Token(Token = "0x6000782")]
	[Address(RVA = "0x103AA7C", Offset = "0x103AA7C", VA = "0x103AA7C")]
	public void ResetHighlight()
	{
	}

	[Token(Token = "0x6000783")]
	[Address(RVA = "0x103AB74", Offset = "0x103AB74", VA = "0x103AB74")]
	public void Hide()
	{
	}

	[Token(Token = "0x6000784")]
	[Address(RVA = "0x103ABAC", Offset = "0x103ABAC", VA = "0x103ABAC")]
	public void Show()
	{
	}

	[Token(Token = "0x6000785")]
	[Address(RVA = "0x103ABE4", Offset = "0x103ABE4", VA = "0x103ABE4")]
	public Cartridge()
	{
	}
}
[Token(Token = "0x200012B")]
public class CartridgePlayer : MonoBehaviour
{
	[Token(Token = "0x400061E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public InteractableItem _playButton;

	[Token(Token = "0x400061F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public InteractableItem _stopButton;

	[Token(Token = "0x4000620")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public InteractableItem _cartridgeSlot;

	[Token(Token = "0x4000621")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public CartridgeSingleItemDock _dock;

	[Token(Token = "0x4000622")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public CartridgeRack _rack;

	[Token(Token = "0x4000623")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private CallbackVoid<GameObject, GameObject, InteractionCallback> _interactionCallback;

	[Token(Token = "0x4000624")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[HideInInspector]
	public Cartridge _insertedCartridge;

	[Token(Token = "0x6000786")]
	[Address(RVA = "0x103ABEC", Offset = "0x103ABEC", VA = "0x103ABEC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000787")]
	[Address(RVA = "0x103ADE0", Offset = "0x103ADE0", VA = "0x103ADE0")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000788")]
	[Address(RVA = "0x103AF98", Offset = "0x103AF98", VA = "0x103AF98")]
	private void OnPlayerInteraction(GameObject thePlayer, GameObject theObject, InteractionCallback interactionEvent)
	{
	}

	[Token(Token = "0x6000789")]
	[Address(RVA = "0x103B264", Offset = "0x103B264", VA = "0x103B264")]
	private void Play()
	{
	}

	[Token(Token = "0x600078A")]
	[Address(RVA = "0x103B188", Offset = "0x103B188", VA = "0x103B188")]
	private void Stop()
	{
	}

	[Token(Token = "0x600078B")]
	[Address(RVA = "0x103B340", Offset = "0x103B340", VA = "0x103B340")]
	public CartridgePlayer()
	{
	}
}
[Token(Token = "0x200012C")]
public class CartridgeRack : MonoBehaviour
{
	[Token(Token = "0x4000625")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public CartridgeRackSingleItemDock[] _slotDocks;

	[Token(Token = "0x600078C")]
	[Address(RVA = "0x103B348", Offset = "0x103B348", VA = "0x103B348")]
	public CartridgeRackSingleItemDock GetFirstEmptySlot()
	{
		return null;
	}

	[Token(Token = "0x600078D")]
	[Address(RVA = "0x103B3D4", Offset = "0x103B3D4", VA = "0x103B3D4")]
	public CartridgeRack()
	{
	}
}
[Token(Token = "0x200012D")]
public class ConsoleMixerMute : MonoBehaviour
{
	[Token(Token = "0x4000626")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private SliderOld.MixerSliders sliderToMute;

	[Token(Token = "0x4000627")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private InteractableItem _muteButton;

	[Token(Token = "0x4000628")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private ActionStringHandle _muteStringHandle;

	[Token(Token = "0x4000629")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[SerializeField]
	private ActionStringHandle _unmuteStringHandle;

	[Token(Token = "0x400062A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool muted;

	[Token(Token = "0x600078E")]
	[Address(RVA = "0x103B3DC", Offset = "0x103B3DC", VA = "0x103B3DC")]
	private void Start()
	{
	}

	[Token(Token = "0x600078F")]
	[Address(RVA = "0x103B528", Offset = "0x103B528", VA = "0x103B528")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000790")]
	[Address(RVA = "0x103B624", Offset = "0x103B624", VA = "0x103B624")]
	private ActionStringHandle GetCustomStringHandle()
	{
		return default(ActionStringHandle);
	}

	[Token(Token = "0x6000791")]
	[Address(RVA = "0x103B640", Offset = "0x103B640", VA = "0x103B640")]
	private void ButtonPressed()
	{
	}

	[Token(Token = "0x6000792")]
	[Address(RVA = "0x103B70C", Offset = "0x103B70C", VA = "0x103B70C")]
	public ConsoleMixerMute()
	{
	}
}
[Token(Token = "0x200012E")]
public class DoorLocked : MonoBehaviour
{
	[Token(Token = "0x400062B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private EventReference _onTryOpenEventReference;

	[Token(Token = "0x400062C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private UnityAction _onTryOpenEvent;

	[Token(Token = "0x400062D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	[Space]
	public string[] onUnlockFailedStoryEvents;

	[Token(Token = "0x400062E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Handle _handle;

	[Token(Token = "0x400062F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private DoorLockTrigger _trigger;

	[Token(Token = "0x6000793")]
	[Address(RVA = "0x103B714", Offset = "0x103B714", VA = "0x103B714")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000794")]
	[Address(RVA = "0x103B7B8", Offset = "0x103B7B8", VA = "0x103B7B8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000795")]
	[Address(RVA = "0x103B9EC", Offset = "0x103B9EC", VA = "0x103B9EC", Slot = "4")]
	public virtual void OnHeld(Holdable item, GrabAnchor controlAnchor)
	{
	}

	[Token(Token = "0x6000796")]
	[Address(RVA = "0x103BBAC", Offset = "0x103BBAC", VA = "0x103BBAC", Slot = "5")]
	public virtual void OnReleased(Holdable item, GrabAnchor controlAnchor)
	{
	}

	[Token(Token = "0x6000797")]
	[Address(RVA = "0x103BBB0", Offset = "0x103BBB0", VA = "0x103BBB0")]
	private void OnLockTriggerEntered(Collider other)
	{
	}

	[Token(Token = "0x6000798")]
	[Address(RVA = "0x103BD54", Offset = "0x103BD54", VA = "0x103BD54")]
	private void OnLockTriggerExited(Collider other)
	{
	}

	[Token(Token = "0x6000799")]
	[Address(RVA = "0x103BD58", Offset = "0x103BD58", VA = "0x103BD58")]
	public void OnFsMoved(GameObject playerObject)
	{
	}

	[Token(Token = "0x600079A")]
	[Address(RVA = "0x103BEC0", Offset = "0x103BEC0", VA = "0x103BEC0")]
	public DoorLocked()
	{
	}
}
[Token(Token = "0x200012F")]
public class DoorLockTrigger : MonoBehaviour
{
	[Token(Token = "0x4000630")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private UnityEvent<Collider> _triggerEnteredCallbacks;

	[Token(Token = "0x4000631")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private UnityEvent<Collider> _triggerExitedCallbacks;

	[Token(Token = "0x1700007A")]
	public UnityEvent<Collider> lockTriggerEntered
	{
		[Token(Token = "0x600079B")]
		[Address(RVA = "0x103BF24", Offset = "0x103BF24", VA = "0x103BF24")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700007B")]
	public UnityEvent<Collider> lockTriggerExited
	{
		[Token(Token = "0x600079C")]
		[Address(RVA = "0x103BF2C", Offset = "0x103BF2C", VA = "0x103BF2C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600079D")]
	[Address(RVA = "0x103BF34", Offset = "0x103BF34", VA = "0x103BF34")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x600079E")]
	[Address(RVA = "0x103BF94", Offset = "0x103BF94", VA = "0x103BF94")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x600079F")]
	[Address(RVA = "0x103BFF4", Offset = "0x103BFF4", VA = "0x103BFF4")]
	public DoorLockTrigger()
	{
	}
}
[Token(Token = "0x2000130")]
public class DoorOcclusionPortal : UpdatableMonoBehaviour
{
	[Token(Token = "0x4000632")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private DoorOpenable _door;

	[Token(Token = "0x4000633")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private OcclusionPortal _occlusionPortal;

	[Token(Token = "0x60007A0")]
	[Address(RVA = "0x103BFFC", Offset = "0x103BFFC", VA = "0x103BFFC")]
	private void Awake()
	{
	}

	[Token(Token = "0x60007A1")]
	[Address(RVA = "0x103C08C", Offset = "0x103C08C", VA = "0x103C08C", Slot = "7")]
	public override void OnUpdate(float dt)
	{
	}

	[Token(Token = "0x60007A2")]
	[Address(RVA = "0x103C15C", Offset = "0x103C15C", VA = "0x103C15C")]
	public DoorOcclusionPortal()
	{
	}
}
[Token(Token = "0x2000131")]
public class DoorOpenable : Openable, IUpdatable, ISceneReferrable, ISerialisable, IDeserialisable, IPostDeserialiseNotified, IInitialisable
{
	[Token(Token = "0x2000132")]
	private static class Keys
	{
		[Token(Token = "0x4000668")]
		public const string Transform = "transform";

		[Token(Token = "0x4000669")]
		public const string Rigidbody = "rigidbody";

		[Token(Token = "0x400066A")]
		public const string DoorHasBeenUnlockedByPlayer = "unlocked";
	}

	[Token(Token = "0x2000133")]
	[CompilerGenerated]
	private sealed class <DisableHandCollisionForPeriod>d__77 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400066B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400066C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400066D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public DoorOpenable <>4__this;

		[Token(Token = "0x400066E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float seconds;

		[Token(Token = "0x1700007E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60007CA")]
			[Address(RVA = "0x103F3AC", Offset = "0x103F3AC", VA = "0x103F3AC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700007F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60007CC")]
			[Address(RVA = "0x103F3F4", Offset = "0x103F3F4", VA = "0x103F3F4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60007C7")]
		[Address(RVA = "0x103ECF4", Offset = "0x103ECF4", VA = "0x103ECF4")]
		[DebuggerHidden]
		public <DisableHandCollisionForPeriod>d__77(int <>1__state)
		{
		}

		[Token(Token = "0x60007C8")]
		[Address(RVA = "0x103F2C8", Offset = "0x103F2C8", VA = "0x103F2C8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60007C9")]
		[Address(RVA = "0x103F2CC", Offset = "0x103F2CC", VA = "0x103F2CC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60007CB")]
		[Address(RVA = "0x103F3B4", Offset = "0x103F3B4", VA = "0x103F3B4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000634")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private EventReference _doorCreakEventReference;

	[Token(Token = "0x4000635")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private EventReference _doorOpenEventReference;

	[Token(Token = "0x4000636")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private EventReference _doorCloseEventReference;

	[Token(Token = "0x4000637")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private EventReference _doorLockedEventReference;

	[Token(Token = "0x4000638")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private EventReference _doorUnlockEventReference;

	[Token(Token = "0x400063B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private PARAMETER_ID doorMovementParameterId;

	[Token(Token = "0x400063C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private AudioHandle _doorMovementAudio;

	[Token(Token = "0x400063D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	[SerializeField]
	private Vector3 hingeOffsetPosition;

	[Token(Token = "0x400063E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[SerializeField]
	private float stoppedVelocityThreshold;

	[Token(Token = "0x400063F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	[SerializeField]
	private float targetAngleTolerance;

	[Token(Token = "0x4000640")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[SerializeField]
	private bool checkForStuckHinge;

	[Token(Token = "0x4000641")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	[SerializeField]
	private float stuckHingeDelay;

	[Token(Token = "0x4000642")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[SerializeField]
	private float creakSoundVelocityRatio;

	[Token(Token = "0x4000643")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	[SerializeField]
	private bool autoClose;

	[Token(Token = "0x4000644")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[SerializeField]
	private float initialAngle;

	[Token(Token = "0x4000645")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	[SerializeField]
	private bool logMe;

	[Token(Token = "0x4000646")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	[SerializeField]
	private FactAsset key;

	[Token(Token = "0x4000647")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	[SerializeField]
	private bool unlockByProximity;

	[Token(Token = "0x4000648")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC9")]
	[SerializeField]
	private bool lockWhenClosed;

	[Token(Token = "0x4000649")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	[SerializeField]
	private float maxGripDistance;

	[Token(Token = "0x400064A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	[SerializeField]
	private bool useHandlePositionAsGripPivot;

	[Token(Token = "0x400064B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD1")]
	[SerializeField]
	private bool lockControlledByExternalSystem;

	[Token(Token = "0x400064C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	[SerializeField]
	private Collider[] unlockedTriggers;

	[Token(Token = "0x400064D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	[SerializeField]
	private Collider[] lockedTriggers;

	[Token(Token = "0x400064E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	[SerializeField]
	private LayerMask unlockTriggerLayers;

	[Token(Token = "0x400064F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	[SerializeField]
	private Occludee oneSideUnlockableOccludee;

	[Token(Token = "0x4000650")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	[SerializeField]
	private Collider lockedCollider;

	[Token(Token = "0x4000651")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	[SerializeField]
	[Space]
	public string[] onUnlockStoryEvents;

	[Token(Token = "0x4000652")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	[SerializeField]
	public string[] onUnlockFailedStoryEvents;

	[Token(Token = "0x4000653")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	private Rigidbody rigidBody;

	[Token(Token = "0x4000654")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	private HingeJoint hinge;

	[Token(Token = "0x4000655")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private Vector3 initialConnectedBodyPosition;

	[Token(Token = "0x4000656")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
	private Vector3 initialAnchorPosition;

	[Token(Token = "0x4000657")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	private JointSpring initialSpring;

	[Token(Token = "0x4000658")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
	private float stoppedTime;

	[Token(Token = "0x4000659")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	private JointLimits initialHingeLimits;

	[Token(Token = "0x400065A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x164")]
	private bool pendingLock;

	[Token(Token = "0x400065B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	private GameObject handleObject;

	[Token(Token = "0x400065C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	private ConfigurableJoint handleJoint;

	[Token(Token = "0x400065D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	private bool isOpeningOutwards;

	[Token(Token = "0x400065E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x179")]
	private bool restoreSpring;

	[Token(Token = "0x400065F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x17C")]
	private float lastCreakValue;

	[Token(Token = "0x4000660")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	private bool wasClosed;

	[Token(Token = "0x4000661")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x181")]
	private bool isClosedNow;

	[Token(Token = "0x4000662")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	private FsBoundedMotionInteraction fsBoundedMotionInteraction;

	[Token(Token = "0x4000663")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	private DoorLockTrigger[] lockTriggers;

	[Token(Token = "0x4000664")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	private GameObject collisonGo;

	[Token(Token = "0x4000665")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	private bool doorHasBeenUnlockedByPlayer;

	[Token(Token = "0x4000666")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A4")]
	private int doorsLayerId;

	[Token(Token = "0x4000667")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	private int doorsJustReleasedLayerId;

	[Token(Token = "0x1700007C")]
	public bool hasKey
	{
		[Token(Token = "0x60007A7")]
		[Address(RVA = "0x103C3D4", Offset = "0x103C3D4", VA = "0x103C3D4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700007D")]
	public string typeId
	{
		[Token(Token = "0x60007C3")]
		[Address(RVA = "0x103EFD8", Offset = "0x103EFD8", VA = "0x103EFD8", Slot = "30")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x14000001")]
	[HideInInspector]
	public event CallbackVoid onClosed
	{
		[Token(Token = "0x60007A3")]
		[Address(RVA = "0x103C164", Offset = "0x103C164", VA = "0x103C164")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x60007A4")]
		[Address(RVA = "0x103C200", Offset = "0x103C200", VA = "0x103C200")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x14000002")]
	[HideInInspector]
	public event CallbackVoid onOpened
	{
		[Token(Token = "0x60007A5")]
		[Address(RVA = "0x103C29C", Offset = "0x103C29C", VA = "0x103C29C")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x60007A6")]
		[Address(RVA = "0x103C338", Offset = "0x103C338", VA = "0x103C338")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x60007A8")]
	[Address(RVA = "0x103C524", Offset = "0x103C524", VA = "0x103C524")]
	private void Awake()
	{
	}

	[Token(Token = "0x60007A9")]
	[Address(RVA = "0x103C638", Offset = "0x103C638", VA = "0x103C638")]
	private void Start()
	{
	}

	[Token(Token = "0x60007AA")]
	[Address(RVA = "0x103CC3C", Offset = "0x103CC3C", VA = "0x103CC3C", Slot = "33")]
	public bool Initialise()
	{
		return default(bool);
	}

	[Token(Token = "0x60007AB")]
	[Address(RVA = "0x103CCC0", Offset = "0x103CCC0", VA = "0x103CCC0", Slot = "32")]
	public void OnPostDeserialise()
	{
	}

	[Token(Token = "0x60007AC")]
	[Address(RVA = "0x103CFF4", Offset = "0x103CFF4", VA = "0x103CFF4")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60007AD")]
	[Address(RVA = "0x103D0E4", Offset = "0x103D0E4", VA = "0x103D0E4", Slot = "34")]
	public virtual void OnUpdate(float dt)
	{
	}

	[Token(Token = "0x60007AE")]
	[Address(RVA = "0x103D4E8", Offset = "0x103D4E8", VA = "0x103D4E8")]
	private bool IsDoorInteractedWith()
	{
		return default(bool);
	}

	[Token(Token = "0x60007AF")]
	[Address(RVA = "0x103DEA4", Offset = "0x103DEA4", VA = "0x103DEA4")]
	private void BreakJoint()
	{
	}

	[Token(Token = "0x60007B0")]
	[Address(RVA = "0x103DF30", Offset = "0x103DF30", VA = "0x103DF30", Slot = "15")]
	public override bool IsFullyOpen()
	{
		return default(bool);
	}

	[Token(Token = "0x60007B1")]
	[Address(RVA = "0x103E018", Offset = "0x103E018", VA = "0x103E018", Slot = "16")]
	public override bool IsFullyClosed()
	{
		return default(bool);
	}

	[Token(Token = "0x60007B2")]
	[Address(RVA = "0x103E068", Offset = "0x103E068", VA = "0x103E068", Slot = "17")]
	public override float HowOpen()
	{
		return default(float);
	}

	[Token(Token = "0x60007B3")]
	[Address(RVA = "0x103E144", Offset = "0x103E144", VA = "0x103E144", Slot = "19")]
	public override void Lock()
	{
	}

	[Token(Token = "0x60007B4")]
	[Address(RVA = "0x103E150", Offset = "0x103E150", VA = "0x103E150", Slot = "20")]
	public override void Unlock()
	{
	}

	[Token(Token = "0x60007B5")]
	[Address(RVA = "0x103E2A0", Offset = "0x103E2A0", VA = "0x103E2A0", Slot = "22")]
	public override bool CanLock()
	{
		return default(bool);
	}

	[Token(Token = "0x60007B6")]
	[Address(RVA = "0x103E2DC", Offset = "0x103E2DC", VA = "0x103E2DC")]
	public bool TryUnlock()
	{
		return default(bool);
	}

	[Token(Token = "0x60007B7")]
	[Address(RVA = "0x103CD10", Offset = "0x103CD10", VA = "0x103CD10")]
	public bool CanBeUnlocked()
	{
		return default(bool);
	}

	[Token(Token = "0x60007B8")]
	[Address(RVA = "0x103E344", Offset = "0x103E344", VA = "0x103E344", Slot = "24")]
	public override void OnHeld(Holdable item, GrabAnchor grabAnchor)
	{
	}

	[Token(Token = "0x60007B9")]
	[Address(RVA = "0x103E870", Offset = "0x103E870", VA = "0x103E870", Slot = "25")]
	public override void OnReleased(Holdable item, GrabAnchor grabAnchor)
	{
	}

	[Token(Token = "0x60007BA")]
	[Address(RVA = "0x103EB3C", Offset = "0x103EB3C", VA = "0x103EB3C")]
	public void OnFsMoved(GameObject playerObject)
	{
	}

	[Token(Token = "0x60007BB")]
	[Address(RVA = "0x103EAB8", Offset = "0x103EAB8", VA = "0x103EAB8")]
	[IteratorStateMachine(typeof(<DisableHandCollisionForPeriod>d__77))]
	private IEnumerator DisableHandCollisionForPeriod(float seconds)
	{
		return null;
	}

	[Token(Token = "0x60007BC")]
	[Address(RVA = "0x103D2F0", Offset = "0x103D2F0", VA = "0x103D2F0")]
	private void UpdateTwoWayHingePosition()
	{
	}

	[Token(Token = "0x60007BD")]
	[Address(RVA = "0x103D5A8", Offset = "0x103D5A8", VA = "0x103D5A8")]
	private void CheckForStuckHinge()
	{
	}

	[Token(Token = "0x60007BE")]
	[Address(RVA = "0x103D6B4", Offset = "0x103D6B4", VA = "0x103D6B4")]
	private void SetLocked()
	{
	}

	[Token(Token = "0x60007BF")]
	[Address(RVA = "0x103CDE0", Offset = "0x103CDE0", VA = "0x103CDE0")]
	private void SetUnlocked()
	{
	}

	[Token(Token = "0x60007C0")]
	[Address(RVA = "0x103ED1C", Offset = "0x103ED1C", VA = "0x103ED1C")]
	private void OnLockTriggerEntered(Collider other)
	{
	}

	[Token(Token = "0x60007C1")]
	[Address(RVA = "0x103EF80", Offset = "0x103EF80", VA = "0x103EF80")]
	private bool IsColliderSuitableToUnlock(Collider collider)
	{
		return default(bool);
	}

	[Token(Token = "0x60007C2")]
	[Address(RVA = "0x103D908", Offset = "0x103D908", VA = "0x103D908")]
	private void UpdateAudio()
	{
	}

	[Token(Token = "0x60007C4")]
	[Address(RVA = "0x103F018", Offset = "0x103F018", VA = "0x103F018", Slot = "29")]
	public bool Serialise(FlexBufferBuilder builder, ISceneObjectReferenceSerialiser objectSerialiser)
	{
		return default(bool);
	}

	[Token(Token = "0x60007C5")]
	[Address(RVA = "0x103F0E8", Offset = "0x103F0E8", VA = "0x103F0E8", Slot = "31")]
	public bool Deserialise(FlexBuffer.Map root, ISceneObjectReferenceDeserialiser objectDeserialiser)
	{
		return default(bool);
	}

	[Token(Token = "0x60007C6")]
	[Address(RVA = "0x103F210", Offset = "0x103F210", VA = "0x103F210")]
	public DoorOpenable()
	{
	}
}
[Token(Token = "0x2000134")]
[RequireComponent(typeof(Rigidbody))]
[RequireComponent(typeof(ConfigurableJoint))]
public class DrawerOpenable : Openable, IFixedUpdatable, ISceneReferrable, ISerialisable, IDeserialisable
{
	[Token(Token = "0x2000135")]
	private enum DrawerState
	{
		[Token(Token = "0x400067F")]
		Idle,
		[Token(Token = "0x4000680")]
		Opening,
		[Token(Token = "0x4000681")]
		Closing,
		[Token(Token = "0x4000682")]
		Held
	}

	[Token(Token = "0x2000136")]
	private static class Keys
	{
		[Token(Token = "0x4000683")]
		public const string Transform = "transform";

		[Token(Token = "0x4000684")]
		public const string Rigidbody = "rigidbody";

		[Token(Token = "0x4000685")]
		public const string IsLocked = "locked";
	}

	[Token(Token = "0x400066F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private EventReference _drawerMovementEventReference;

	[Token(Token = "0x4000670")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private EventReference _drawerOpenEventReference;

	[Token(Token = "0x4000671")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private EventReference _drawerCloseEventReference;

	[Token(Token = "0x4000672")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private PARAMETER_ID drawerMovementParameterId;

	[Token(Token = "0x4000673")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private AudioHandle _drawerMovementAudio;

	[Token(Token = "0x4000674")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	[SerializeField]
	private float openSpeed;

	[Token(Token = "0x4000675")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private ConfigurableJoint drawerJoint;

	[Token(Token = "0x4000676")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private float handleJointLateralAllowance;

	[Token(Token = "0x4000677")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	[SerializeField]
	private float maxGripDistance;

	[Token(Token = "0x4000678")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Rigidbody rigidBody;

	[Token(Token = "0x4000679")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Vector3 movementDir;

	[Token(Token = "0x400067A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private DrawerState state;

	[Token(Token = "0x400067B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private bool wasFullyClosed;

	[Token(Token = "0x400067C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private float lastMovementValue;

	[Token(Token = "0x400067D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private ConfigurableJoint handleJoint;

	[Token(Token = "0x17000080")]
	public string typeId
	{
		[Token(Token = "0x60007DE")]
		[Address(RVA = "0x1040E08", Offset = "0x1040E08", VA = "0x1040E08", Slot = "30")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60007CD")]
	[Address(RVA = "0x103F3FC", Offset = "0x103F3FC", VA = "0x103F3FC")]
	private void Start()
	{
	}

	[Token(Token = "0x60007CE")]
	[Address(RVA = "0x103F770", Offset = "0x103F770", VA = "0x103F770", Slot = "27")]
	public void OnFixedUpdate(float dt)
	{
	}

	[Token(Token = "0x60007CF")]
	[Address(RVA = "0x103FA04", Offset = "0x103FA04", VA = "0x103FA04", Slot = "13")]
	public override void Open()
	{
	}

	[Token(Token = "0x60007D0")]
	[Address(RVA = "0x103FA60", Offset = "0x103FA60", VA = "0x103FA60", Slot = "14")]
	public override void Close()
	{
	}

	[Token(Token = "0x60007D1")]
	[Address(RVA = "0x103FA8C", Offset = "0x103FA8C", VA = "0x103FA8C", Slot = "15")]
	public override bool IsFullyOpen()
	{
		return default(bool);
	}

	[Token(Token = "0x60007D2")]
	[Address(RVA = "0x103FDF0", Offset = "0x103FDF0", VA = "0x103FDF0", Slot = "16")]
	public override bool IsFullyClosed()
	{
		return default(bool);
	}

	[Token(Token = "0x60007D3")]
	[Address(RVA = "0x103FED0", Offset = "0x103FED0", VA = "0x103FED0", Slot = "17")]
	public override float HowOpen()
	{
		return default(float);
	}

	[Token(Token = "0x60007D4")]
	[Address(RVA = "0x103FF98", Offset = "0x103FF98", VA = "0x103FF98", Slot = "19")]
	public override void Lock()
	{
	}

	[Token(Token = "0x60007D5")]
	[Address(RVA = "0x103FFC4", Offset = "0x103FFC4", VA = "0x103FFC4", Slot = "20")]
	public override void Unlock()
	{
	}

	[Token(Token = "0x60007D6")]
	[Address(RVA = "0x103FFEC", Offset = "0x103FFEC", VA = "0x103FFEC", Slot = "22")]
	public override bool CanLock()
	{
		return default(bool);
	}

	[Token(Token = "0x60007D7")]
	[Address(RVA = "0x103FFFC", Offset = "0x103FFFC", VA = "0x103FFFC", Slot = "24")]
	public override void OnHeld(Holdable item, GrabAnchor grabAnchor)
	{
	}

	[Token(Token = "0x60007D8")]
	[Address(RVA = "0x10402C4", Offset = "0x10402C4", VA = "0x10402C4", Slot = "25")]
	public override void OnReleased(Holdable item, GrabAnchor grabAnchor)
	{
	}

	[Token(Token = "0x60007D9")]
	[Address(RVA = "0x1040630", Offset = "0x1040630", VA = "0x1040630")]
	private void BreakJoint()
	{
	}

	[Token(Token = "0x60007DA")]
	[Address(RVA = "0x10406C0", Offset = "0x10406C0", VA = "0x10406C0")]
	private Vector3 GetMovementDirection()
	{
		return default(Vector3);
	}

	[Token(Token = "0x60007DB")]
	[Address(RVA = "0x103FB6C", Offset = "0x103FB6C", VA = "0x103FB6C")]
	private void GetMovementPath(out Vector3 pathStartWorld, out Vector3 pathEndWorld)
	{
	}

	[Token(Token = "0x60007DC")]
	[Address(RVA = "0x103F774", Offset = "0x103F774", VA = "0x103F774")]
	private void UpdateState()
	{
	}

	[Token(Token = "0x60007DD")]
	[Address(RVA = "0x104083C", Offset = "0x104083C", VA = "0x104083C")]
	private void UpdateAudio()
	{
	}

	[Token(Token = "0x60007DF")]
	[Address(RVA = "0x1040E48", Offset = "0x1040E48", VA = "0x1040E48", Slot = "29")]
	public bool Serialise(FlexBufferBuilder builder, ISceneObjectReferenceSerialiser objectSerialiser)
	{
		return default(bool);
	}

	[Token(Token = "0x60007E0")]
	[Address(RVA = "0x1040F1C", Offset = "0x1040F1C", VA = "0x1040F1C", Slot = "31")]
	public bool Deserialise(FlexBuffer.Map root, ISceneObjectReferenceDeserialiser objectDeserialiser)
	{
		return default(bool);
	}

	[Token(Token = "0x60007E1")]
	[Address(RVA = "0x1041050", Offset = "0x1041050", VA = "0x1041050")]
	public DrawerOpenable()
	{
	}
}
[Token(Token = "0x2000137")]
public class HingedDoor : MonoBehaviour
{
	[Token(Token = "0x4000686")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float closedYangle;

	[Token(Token = "0x4000687")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float openYangle;

	[Token(Token = "0x4000688")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float openSpeed;

	[Token(Token = "0x4000689")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float targetYangle;

	[Token(Token = "0x400068A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool panelMoving;

	[Token(Token = "0x400068B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public InteractableItem interactableSwitch;

	[Token(Token = "0x60007E2")]
	[Address(RVA = "0x104106C", Offset = "0x104106C", VA = "0x104106C")]
	private void Start()
	{
	}

	[Token(Token = "0x60007E3")]
	[Address(RVA = "0x1041204", Offset = "0x1041204", VA = "0x1041204")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60007E4")]
	[Address(RVA = "0x104139C", Offset = "0x104139C", VA = "0x104139C")]
	private void Activate()
	{
	}

	[Token(Token = "0x60007E5")]
	[Address(RVA = "0x10413B0", Offset = "0x10413B0", VA = "0x10413B0")]
	private void Deactivate()
	{
	}

	[Token(Token = "0x60007E6")]
	[Address(RVA = "0x10413C4", Offset = "0x10413C4", VA = "0x10413C4")]
	private void Update()
	{
	}

	[Token(Token = "0x60007E7")]
	[Address(RVA = "0x104151C", Offset = "0x104151C", VA = "0x104151C")]
	public void SetDoorStateSnap(bool desiredState)
	{
	}

	[Token(Token = "0x60007E8")]
	[Address(RVA = "0x10415D8", Offset = "0x10415D8", VA = "0x10415D8")]
	public void SetDesiredState(bool desiredState)
	{
	}

	[Token(Token = "0x60007E9")]
	[Address(RVA = "0x1041604", Offset = "0x1041604", VA = "0x1041604")]
	public HingedDoor()
	{
	}
}
[Token(Token = "0x2000138")]
[RequireComponent(typeof(Slideable))]
public class Lever : MonoBehaviour, IFixedUpdatable
{
	[Token(Token = "0x400068C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Slideable slider;

	[Token(Token = "0x60007EA")]
	[Address(RVA = "0x1041618", Offset = "0x1041618", VA = "0x1041618")]
	private void Start()
	{
	}

	[Token(Token = "0x60007EB")]
	[Address(RVA = "0x1041694", Offset = "0x1041694", VA = "0x1041694", Slot = "4")]
	public void OnFixedUpdate(float dt)
	{
	}

	[Token(Token = "0x60007EC")]
	[Address(RVA = "0x1041784", Offset = "0x1041784", VA = "0x1041784")]
	public Lever()
	{
	}
}
[Token(Token = "0x2000139")]
public class LightBulb : MonoBehaviour
{
	[Token(Token = "0x200013A")]
	[CompilerGenerated]
	private sealed class <Flicker>d__13 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000693")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000694")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000695")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LightBulb <>4__this;

		[Token(Token = "0x4000696")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <delayBackOn>5__2;

		[Token(Token = "0x17000081")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60007F9")]
			[Address(RVA = "0x1042194", Offset = "0x1042194", VA = "0x1042194", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000082")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60007FB")]
			[Address(RVA = "0x10421DC", Offset = "0x10421DC", VA = "0x10421DC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60007F6")]
		[Address(RVA = "0x1041FC0", Offset = "0x1041FC0", VA = "0x1041FC0")]
		[DebuggerHidden]
		public <Flicker>d__13(int <>1__state)
		{
		}

		[Token(Token = "0x60007F7")]
		[Address(RVA = "0x1041FFC", Offset = "0x1041FFC", VA = "0x1041FFC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60007F8")]
		[Address(RVA = "0x1042000", Offset = "0x1042000", VA = "0x1042000", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60007FA")]
		[Address(RVA = "0x104219C", Offset = "0x104219C", VA = "0x104219C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400068D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float lightDelay;

	[Token(Token = "0x400068E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float chanceToFlickerPercent;

	[Token(Token = "0x400068F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public InteractableItem interactableSwitch;

	[Token(Token = "0x4000690")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private int lastActivationFrame;

	[Token(Token = "0x4000691")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private int lastDeactivationFrame;

	[Token(Token = "0x4000692")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Coroutine flickerCoroutine;

	[Token(Token = "0x60007ED")]
	[Address(RVA = "0x104178C", Offset = "0x104178C", VA = "0x104178C")]
	private void Start()
	{
	}

	[Token(Token = "0x60007EE")]
	[Address(RVA = "0x1041924", Offset = "0x1041924", VA = "0x1041924")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60007EF")]
	[Address(RVA = "0x1041ABC", Offset = "0x1041ABC", VA = "0x1041ABC")]
	private void Activate()
	{
	}

	[Token(Token = "0x60007F0")]
	[Address(RVA = "0x1041BF8", Offset = "0x1041BF8", VA = "0x1041BF8")]
	private void Deactivate()
	{
	}

	[Token(Token = "0x60007F1")]
	[Address(RVA = "0x1041D3C", Offset = "0x1041D3C", VA = "0x1041D3C")]
	private void SetBulbsToPowerState()
	{
	}

	[Token(Token = "0x60007F2")]
	[Address(RVA = "0x1041F3C", Offset = "0x1041F3C", VA = "0x1041F3C")]
	private void SetBulbsToOffState()
	{
	}

	[Token(Token = "0x60007F3")]
	[Address(RVA = "0x1041D78", Offset = "0x1041D78", VA = "0x1041D78")]
	private void SetBulbsTo(bool state)
	{
	}

	[Token(Token = "0x60007F4")]
	[Address(RVA = "0x1041EC8", Offset = "0x1041EC8", VA = "0x1041EC8")]
	[IteratorStateMachine(typeof(<Flicker>d__13))]
	private IEnumerator Flicker()
	{
		return null;
	}

	[Token(Token = "0x60007F5")]
	[Address(RVA = "0x1041FE8", Offset = "0x1041FE8", VA = "0x1041FE8")]
	public LightBulb()
	{
	}
}
[Token(Token = "0x200013B")]
public class LPRecordSleeve : MonoBehaviour
{
	[Token(Token = "0x4000697")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject _mesh;

	[Token(Token = "0x4000698")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int _leanTweenRotateId;

	[Token(Token = "0x4000699")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private bool _tilted;

	[Token(Token = "0x400069A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private BoxCollider _boxCollider;

	[Token(Token = "0x400069B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static float s_rotatingJointYOffset;

	[Token(Token = "0x400069C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private LPRecordProperties _recordData;

	[Token(Token = "0x17000083")]
	public LPRecordProperties recordData
	{
		[Token(Token = "0x60007FC")]
		[Address(RVA = "0x10421E4", Offset = "0x10421E4", VA = "0x10421E4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60007FD")]
	[Address(RVA = "0x10421EC", Offset = "0x10421EC", VA = "0x10421EC")]
	private void Awake()
	{
	}

	[Token(Token = "0x60007FE")]
	[Address(RVA = "0x1042244", Offset = "0x1042244", VA = "0x1042244")]
	public void SetTilted(bool tilted)
	{
	}

	[Token(Token = "0x60007FF")]
	[Address(RVA = "0x10424C4", Offset = "0x10424C4", VA = "0x10424C4")]
	public void SetPivotToCenter()
	{
	}

	[Token(Token = "0x6000800")]
	[Address(RVA = "0x104268C", Offset = "0x104268C", VA = "0x104268C")]
	public void SetPivotToAnchor()
	{
	}

	[Token(Token = "0x6000801")]
	[Address(RVA = "0x10427E8", Offset = "0x10427E8", VA = "0x10427E8")]
	public LPRecordSleeve()
	{
	}
}
[Token(Token = "0x200013C")]
internal interface IOpenable
{
	[Token(Token = "0x6000805")]
	void Open();

	[Token(Token = "0x6000806")]
	void Close();

	[Token(Token = "0x6000807")]
	bool IsFullyOpen();

	[Token(Token = "0x6000808")]
	bool IsFullyClosed();

	[Token(Token = "0x6000809")]
	float HowOpen();

	[Token(Token = "0x600080A")]
	void Lock();

	[Token(Token = "0x600080B")]
	void Unlock();

	[Token(Token = "0x600080C")]
	bool CanLock();

	[Token(Token = "0x600080D")]
	bool IsLocked();
}
[Token(Token = "0x200013D")]
public class Openable : MonoBehaviour, IOpenable
{
	[Token(Token = "0x400069D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool m_openCloseToggle;

	[Token(Token = "0x400069E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	protected bool m_isLocked;

	[Token(Token = "0x400069F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	protected Handle m_handle;

	[Token(Token = "0x600080E")]
	[Address(RVA = "0x1042BBC", Offset = "0x1042BBC", VA = "0x1042BBC", Slot = "13")]
	public virtual void Open()
	{
	}

	[Token(Token = "0x600080F")]
	[Address(RVA = "0x1042BC0", Offset = "0x1042BC0", VA = "0x1042BC0", Slot = "14")]
	public virtual void Close()
	{
	}

	[Token(Token = "0x6000810")]
	[Address(RVA = "0x1042BC4", Offset = "0x1042BC4", VA = "0x1042BC4", Slot = "15")]
	public virtual bool IsFullyOpen()
	{
		return default(bool);
	}

	[Token(Token = "0x6000811")]
	[Address(RVA = "0x1042BCC", Offset = "0x1042BCC", VA = "0x1042BCC", Slot = "16")]
	public virtual bool IsFullyClosed()
	{
		return default(bool);
	}

	[Token(Token = "0x6000812")]
	[Address(RVA = "0x1042BD4", Offset = "0x1042BD4", VA = "0x1042BD4", Slot = "17")]
	public virtual float HowOpen()
	{
		return default(float);
	}

	[Token(Token = "0x6000813")]
	[Address(RVA = "0x1042BDC", Offset = "0x1042BDC", VA = "0x1042BDC", Slot = "18")]
	public virtual void ToggleOpen()
	{
	}

	[Token(Token = "0x6000814")]
	[Address(RVA = "0x1042C08", Offset = "0x1042C08", VA = "0x1042C08", Slot = "19")]
	public virtual void Lock()
	{
	}

	[Token(Token = "0x6000815")]
	[Address(RVA = "0x1042C14", Offset = "0x1042C14", VA = "0x1042C14", Slot = "20")]
	public virtual void Unlock()
	{
	}

	[Token(Token = "0x6000816")]
	[Address(RVA = "0x1042C1C", Offset = "0x1042C1C", VA = "0x1042C1C", Slot = "21")]
	public virtual void ToggleLock()
	{
	}

	[Token(Token = "0x6000817")]
	[Address(RVA = "0x1042C7C", Offset = "0x1042C7C", VA = "0x1042C7C", Slot = "22")]
	public virtual bool CanLock()
	{
		return default(bool);
	}

	[Token(Token = "0x6000818")]
	[Address(RVA = "0x1042C84", Offset = "0x1042C84", VA = "0x1042C84", Slot = "23")]
	public virtual bool IsLocked()
	{
		return default(bool);
	}

	[Token(Token = "0x6000819")]
	[Address(RVA = "0x1042C8C", Offset = "0x1042C8C", VA = "0x1042C8C", Slot = "24")]
	public virtual void OnHeld(Holdable item, GrabAnchor controlAnchor)
	{
	}

	[Token(Token = "0x600081A")]
	[Address(RVA = "0x1042C90", Offset = "0x1042C90", VA = "0x1042C90", Slot = "25")]
	public virtual void OnReleased(Holdable item, GrabAnchor controlAnchor)
	{
	}

	[Token(Token = "0x600081B")]
	[Address(RVA = "0x1042C94", Offset = "0x1042C94", VA = "0x1042C94", Slot = "26")]
	protected virtual void Init()
	{
	}

	[Token(Token = "0x600081C")]
	[Address(RVA = "0x103F2C0", Offset = "0x103F2C0", VA = "0x103F2C0")]
	public Openable()
	{
	}
}
[Token(Token = "0x200013E")]
public class PaperTossBall : UpdatableMonoBehaviour
{
	[Token(Token = "0x200013F")]
	public enum Checkpoint
	{
		[Token(Token = "0x40006A4")]
		None = 0,
		[Token(Token = "0x40006A5")]
		StartArea = 1,
		[Token(Token = "0x40006A6")]
		Hoop = 2,
		[Token(Token = "0x40006A7")]
		Bin = 3,
		[Token(Token = "0x40006A8")]
		FinalCheckpoint = 3
	}

	[Token(Token = "0x40006A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Transform adjustableTransform;

	[Token(Token = "0x40006A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private PhysicsHoldable physicsHoldable;

	[Token(Token = "0x17000084")]
	public Transform AdjustableTransform
	{
		[Token(Token = "0x600081D")]
		[Address(RVA = "0x1042E04", Offset = "0x1042E04", VA = "0x1042E04")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000085")]
	public Checkpoint CompletedCheckpoints
	{
		[Token(Token = "0x600081E")]
		[Address(RVA = "0x1042E0C", Offset = "0x1042E0C", VA = "0x1042E0C")]
		[CompilerGenerated]
		get
		{
			return default(Checkpoint);
		}
		[Token(Token = "0x600081F")]
		[Address(RVA = "0x1042E14", Offset = "0x1042E14", VA = "0x1042E14")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x6000820")]
	[Address(RVA = "0x1042E1C", Offset = "0x1042E1C", VA = "0x1042E1C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000821")]
	[Address(RVA = "0x1042E74", Offset = "0x1042E74", VA = "0x1042E74")]
	public void MarkCheckpointAsPassed(Checkpoint checkpoint)
	{
	}

	[Token(Token = "0x6000822")]
	[Address(RVA = "0x1042E90", Offset = "0x1042E90", VA = "0x1042E90")]
	public void ResetCheckpoints()
	{
	}

	[Token(Token = "0x6000823")]
	[Address(RVA = "0x1042E98", Offset = "0x1042E98", VA = "0x1042E98", Slot = "7")]
	public override void OnUpdate(float dt)
	{
	}

	[Token(Token = "0x6000824")]
	[Address(RVA = "0x1042EDC", Offset = "0x1042EDC", VA = "0x1042EDC")]
	public PaperTossBall()
	{
	}
}
[Token(Token = "0x2000140")]
public class PaperTossHoopTarget : MonoBehaviour, IInitialisable
{
	[Token(Token = "0x40006A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private FactAsset factAsset;

	[Token(Token = "0x40006AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private UnityEvent onPaperBallHit;

	[Token(Token = "0x40006AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private NarrativeState narrativeState;

	[Token(Token = "0x6000825")]
	[Address(RVA = "0x1042EE4", Offset = "0x1042EE4", VA = "0x1042EE4", Slot = "4")]
	public bool Initialise()
	{
		return default(bool);
	}

	[Token(Token = "0x6000826")]
	[Address(RVA = "0x1042FA4", Offset = "0x1042FA4", VA = "0x1042FA4")]
	public void OnPaperBallPassedCheckpoint(PaperTossBall ball)
	{
	}

	[Token(Token = "0x6000827")]
	[Address(RVA = "0x1042FD0", Offset = "0x1042FD0", VA = "0x1042FD0")]
	private void IncreaseScore()
	{
	}

	[Token(Token = "0x6000828")]
	[Address(RVA = "0x1043084", Offset = "0x1043084", VA = "0x1043084")]
	public PaperTossHoopTarget()
	{
	}
}
[Token(Token = "0x2000141")]
public class PaperTossOnEnterTrigger : PaperTossTrigger
{
	[Token(Token = "0x6000829")]
	[Address(RVA = "0x104308C", Offset = "0x104308C", VA = "0x104308C")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x600082A")]
	[Address(RVA = "0x1043184", Offset = "0x1043184", VA = "0x1043184")]
	public PaperTossOnEnterTrigger()
	{
	}
}
[Token(Token = "0x2000142")]
public class PaperTossOnExitTrigger : PaperTossTrigger
{
	[Token(Token = "0x600082B")]
	[Address(RVA = "0x1043194", Offset = "0x1043194", VA = "0x1043194")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x600082C")]
	[Address(RVA = "0x1043198", Offset = "0x1043198", VA = "0x1043198")]
	public PaperTossOnExitTrigger()
	{
	}
}
[Token(Token = "0x2000143")]
public class PaperTossStack : MonoBehaviour, IInitialisable
{
	[Token(Token = "0x40006AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private PhysicsHoldable paperBall;

	[Token(Token = "0x40006AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Transform dispenseOrigin;

	[Token(Token = "0x40006AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Dispenser paperBallDispenser;

	[Token(Token = "0x40006AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float originalMass;

	[Token(Token = "0x40006B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private Vector3 originalScale;

	[Token(Token = "0x40006B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Vector3 originalHoldOrientation;

	[Token(Token = "0x40006B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private PaperTossBall paperTossBall;

	[Token(Token = "0x600082D")]
	[Address(RVA = "0x10431A0", Offset = "0x10431A0", VA = "0x10431A0")]
	private void Awake()
	{
	}

	[Token(Token = "0x600082E")]
	[Address(RVA = "0x10431F8", Offset = "0x10431F8", VA = "0x10431F8")]
	private void Start()
	{
	}

	[Token(Token = "0x600082F")]
	[Address(RVA = "0x1043384", Offset = "0x1043384", VA = "0x1043384")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000830")]
	[Address(RVA = "0x10434C4", Offset = "0x10434C4", VA = "0x10434C4", Slot = "5")]
	public virtual bool Initialise()
	{
		return default(bool);
	}

	[Token(Token = "0x6000831")]
	[Address(RVA = "0x10434F0", Offset = "0x10434F0", VA = "0x10434F0")]
	private bool OnCanDispensePaperBallCallback(Dispenser dispenser, PhysicsHoldable item)
	{
		return default(bool);
	}

	[Token(Token = "0x6000832")]
	[Address(RVA = "0x10434F8", Offset = "0x10434F8", VA = "0x10434F8")]
	private void OnPaperBallDispensedCallback(Dispenser dispenser, PhysicsHoldable dispensedItem)
	{
	}

	[Token(Token = "0x6000833")]
	[Address(RVA = "0x10435EC", Offset = "0x10435EC", VA = "0x10435EC")]
	public PaperTossStack()
	{
	}
}
[Token(Token = "0x2000144")]
public abstract class PaperTossTrigger : MonoBehaviour
{
	[Token(Token = "0x40006B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private PaperTossBall.Checkpoint checkpoint;

	[Token(Token = "0x40006B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private UnityEvent<PaperTossBall> onTriggered;

	[Token(Token = "0x6000834")]
	[Address(RVA = "0x1043090", Offset = "0x1043090", VA = "0x1043090")]
	protected void OnTriggered(Collider other)
	{
	}

	[Token(Token = "0x6000835")]
	[Address(RVA = "0x104318C", Offset = "0x104318C", VA = "0x104318C")]
	protected PaperTossTrigger()
	{
	}
}
[Token(Token = "0x2000145")]
public class Phone : MonoBehaviour
{
	[Token(Token = "0x2000146")]
	public class Conversation
	{
		[Token(Token = "0x40006B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public FlowMacro _macro;

		[Token(Token = "0x40006BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string _conversationName;

		[Token(Token = "0x600083E")]
		[Address(RVA = "0x1043BDC", Offset = "0x1043BDC", VA = "0x1043BDC")]
		public Conversation(FlowMacro macro, string conversation)
		{
		}
	}

	[Token(Token = "0x40006B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private PhoneLine[] _phoneLines;

	[Token(Token = "0x40006B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private List<Conversation> _conversationQueue;

	[Token(Token = "0x40006B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private FlowMachine _flowMachine;

	[Token(Token = "0x17000086")]
	public static Phone Singleton
	{
		[Token(Token = "0x6000836")]
		[Address(RVA = "0x10435F4", Offset = "0x10435F4", VA = "0x10435F4")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x6000837")]
		[Address(RVA = "0x104363C", Offset = "0x104363C", VA = "0x104363C")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x6000838")]
	[Address(RVA = "0x1043694", Offset = "0x1043694", VA = "0x1043694")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000839")]
	[Address(RVA = "0x10437BC", Offset = "0x10437BC", VA = "0x10437BC")]
	public void TriggerConversation(Conversation conversation)
	{
	}

	[Token(Token = "0x600083A")]
	[Address(RVA = "0x10438B0", Offset = "0x10438B0", VA = "0x10438B0")]
	public bool IsAnyLineActive()
	{
		return default(bool);
	}

	[Token(Token = "0x600083B")]
	[Address(RVA = "0x104397C", Offset = "0x104397C", VA = "0x104397C")]
	public static void QueueConversation(FlowMacro flowMacro, string conversationName)
	{
	}

	[Token(Token = "0x600083C")]
	[Address(RVA = "0x1043C6C", Offset = "0x1043C6C", VA = "0x1043C6C")]
	public static void FinishConversation()
	{
	}

	[Token(Token = "0x600083D")]
	[Address(RVA = "0x1043E5C", Offset = "0x1043E5C", VA = "0x1043E5C")]
	public Phone()
	{
	}
}
[Token(Token = "0x2000147")]
public class PhoneLine : MonoBehaviour
{
	[Token(Token = "0x2000148")]
	public enum Status
	{
		[Token(Token = "0x40006C2")]
		Active,
		[Token(Token = "0x40006C3")]
		Awaiting,
		[Token(Token = "0x40006C4")]
		Inactive
	}

	[Token(Token = "0x2000149")]
	[CompilerGenerated]
	private sealed class <LightBlink>d__20 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40006C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40006C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40006C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PhoneLine <>4__this;

		[Token(Token = "0x40006C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <switchDuration>5__2;

		[Token(Token = "0x40006C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <waitDuration>5__3;

		[Token(Token = "0x17000089")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000853")]
			[Address(RVA = "0x1044A3C", Offset = "0x1044A3C", VA = "0x1044A3C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700008A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000855")]
			[Address(RVA = "0x1044A84", Offset = "0x1044A84", VA = "0x1044A84", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000850")]
		[Address(RVA = "0x1044668", Offset = "0x1044668", VA = "0x1044668")]
		[DebuggerHidden]
		public <LightBlink>d__20(int <>1__state)
		{
		}

		[Token(Token = "0x6000851")]
		[Address(RVA = "0x1044710", Offset = "0x1044710", VA = "0x1044710", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000852")]
		[Address(RVA = "0x1044714", Offset = "0x1044714", VA = "0x1044714", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000854")]
		[Address(RVA = "0x1044A44", Offset = "0x1044A44", VA = "0x1044A44", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40006BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private EmissionMaterialHelper _lightMaterialHelper;

	[Token(Token = "0x40006BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private InteractableItem _interactableLineButton;

	[Token(Token = "0x40006BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private int _lightLeanTweenId;

	[Token(Token = "0x40006BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Coroutine _lightCoroutine;

	[Token(Token = "0x40006C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Status _lineStatus;

	[Token(Token = "0x17000087")]
	public Phone.Conversation QueuedConversation
	{
		[Token(Token = "0x600083F")]
		[Address(RVA = "0x1043F1C", Offset = "0x1043F1C", VA = "0x1043F1C")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x6000840")]
		[Address(RVA = "0x1043F24", Offset = "0x1043F24", VA = "0x1043F24")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x17000088")]
	public Status LineStatus
	{
		[Token(Token = "0x6000841")]
		[Address(RVA = "0x1043F2C", Offset = "0x1043F2C", VA = "0x1043F2C")]
		get
		{
			return default(Status);
		}
		[Token(Token = "0x6000842")]
		[Address(RVA = "0x1043E44", Offset = "0x1043E44", VA = "0x1043E44")]
		set
		{
		}
	}

	[Token(Token = "0x6000843")]
	[Address(RVA = "0x1044160", Offset = "0x1044160", VA = "0x1044160")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000844")]
	[Address(RVA = "0x1044204", Offset = "0x1044204", VA = "0x1044204")]
	private void Start()
	{
	}

	[Token(Token = "0x6000845")]
	[Address(RVA = "0x1043F34", Offset = "0x1043F34", VA = "0x1043F34")]
	private void UpdateLightIndicator()
	{
	}

	[Token(Token = "0x6000846")]
	[Address(RVA = "0x10443CC", Offset = "0x10443CC", VA = "0x10443CC")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000847")]
	[Address(RVA = "0x1044518", Offset = "0x1044518", VA = "0x1044518")]
	private void ButtonPressed()
	{
	}

	[Token(Token = "0x6000848")]
	[Address(RVA = "0x1043C20", Offset = "0x1043C20", VA = "0x1043C20")]
	public void QueueConversation(Phone.Conversation conversation)
	{
	}

	[Token(Token = "0x6000849")]
	[Address(RVA = "0x1044600", Offset = "0x1044600", VA = "0x1044600")]
	private bool IsAvailable()
	{
		return default(bool);
	}

	[Token(Token = "0x600084A")]
	[Address(RVA = "0x1044358", Offset = "0x1044358", VA = "0x1044358")]
	[IteratorStateMachine(typeof(<LightBlink>d__20))]
	private IEnumerator LightBlink()
	{
		return null;
	}

	[Token(Token = "0x600084B")]
	[Address(RVA = "0x1044690", Offset = "0x1044690", VA = "0x1044690")]
	public PhoneLine()
	{
	}
}
[Token(Token = "0x200014A")]
public class RecordBox : MonoBehaviour, IInitialisable, IUpdatable, ISceneReferrable, ISerialisable, IDeserialisable
{
	[Token(Token = "0x200014B")]
	private static class Keys
	{
		[Token(Token = "0x40006EB")]
		public const string CurrentRecordId = "current";
	}

	[Token(Token = "0x40006CA")]
	public const int IntroRecordIndex = 0;

	[Token(Token = "0x40006CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private float _recordSpacing;

	[Token(Token = "0x40006CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private LPRecordsList _allRecords;

	[Token(Token = "0x40006CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private BoxCollider _frontCollider;

	[Token(Token = "0x40006CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private BoxCollider _rearCollider;

	[Token(Token = "0x40006CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private AchievementContainer _recordCollectionAchievement;

	[Token(Token = "0x40006D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private EventReference _fmodEventFlickReference;

	[Token(Token = "0x40006D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private UnityEvent _onHoverSelectedRecordChanged;

	[Token(Token = "0x40006D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private DiegeticTextLocalizer _diageticTextSide1;

	[Token(Token = "0x40006D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private DiegeticTextLocalizer _diageticTextSide2;

	[Token(Token = "0x40006D4")]
	private const string _kContainerName = "Collectables";

	[Token(Token = "0x40006D5")]
	private const string _kBlackboardName = "Records";

	[Token(Token = "0x40006D6")]
	private const string _kFactTemplate = "Record_";

	[Token(Token = "0x40006D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Vector3 debugHoverSpherePos;

	[Token(Token = "0x40006D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private Vector3 debugSelectionSpherePos;

	[Token(Token = "0x40006D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Color debugSelectionSphereColour;

	[Token(Token = "0x40006DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private Vector3 _frontOfStack;

	[Token(Token = "0x40006DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	private Vector3 _frontOfStackLocal;

	[Token(Token = "0x40006DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private Vector3 _fingerPosition;

	[Token(Token = "0x40006DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	private float _depthOfStack;

	[Token(Token = "0x40006DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private int _maxCapacity;

	[Token(Token = "0x40006DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private int _currentSelection;

	[Token(Token = "0x40006E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private int _previousSelection;

	[Token(Token = "0x40006E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private Transform _sleeveParent;

	[Token(Token = "0x40006E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private bool _isHovered;

	[Token(Token = "0x40006E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private List<GameObject> _sleeveObjects;

	[Token(Token = "0x40006E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private List<LPRecordSleeve> _availableRecords;

	[Token(Token = "0x40006E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private LPRecordProperties _lastDispensed;

	[Token(Token = "0x40006E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private LPRecordProperties _resumeRecordProperties;

	[Token(Token = "0x40006E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private Dispenser _recordDispenser;

	[Token(Token = "0x40006E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private Vinyl _activeRecord;

	[Token(Token = "0x40006E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	private MeshRenderer _activeRecordRenderer;

	[Token(Token = "0x40006EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	private CallbackVoid<string, string, string> _factChangeCallback;

	[Token(Token = "0x1700008B")]
	public string typeId
	{
		[Token(Token = "0x6000867")]
		[Address(RVA = "0x1046C04", Offset = "0x1046C04", VA = "0x1046C04", Slot = "8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000856")]
	[Address(RVA = "0x1044A8C", Offset = "0x1044A8C", VA = "0x1044A8C", Slot = "10")]
	protected virtual void Start()
	{
	}

	[Token(Token = "0x6000857")]
	[Address(RVA = "0x1044F50", Offset = "0x1044F50", VA = "0x1044F50", Slot = "11")]
	public virtual bool Initialise()
	{
		return default(bool);
	}

	[Token(Token = "0x6000858")]
	[Address(RVA = "0x1045C48", Offset = "0x1045C48", VA = "0x1045C48")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000859")]
	[Address(RVA = "0x1045DAC", Offset = "0x1045DAC", VA = "0x1045DAC")]
	public void SetCurrentSelection(int selectionIndex)
	{
	}

	[Token(Token = "0x600085A")]
	[Address(RVA = "0x1045DB4", Offset = "0x1045DB4", VA = "0x1045DB4", Slot = "12")]
	public virtual void OnUpdate(float dt)
	{
	}

	[Token(Token = "0x600085B")]
	[Address(RVA = "0x1045DB8", Offset = "0x1045DB8", VA = "0x1045DB8")]
	private void OnHoverStarted(InteractorBase interactor, GrabAnchor grabAnchor)
	{
	}

	[Token(Token = "0x600085C")]
	[Address(RVA = "0x104616C", Offset = "0x104616C", VA = "0x104616C")]
	private void OnHoverEnded(InteractorBase interactor, GrabAnchor grabAnchor)
	{
	}

	[Token(Token = "0x600085D")]
	[Address(RVA = "0x1046190", Offset = "0x1046190", VA = "0x1046190")]
	private void OnHovering(InteractorBase interactor, GrabAnchor grabAnchor)
	{
	}

	[Token(Token = "0x600085E")]
	[Address(RVA = "0x1045E24", Offset = "0x1045E24", VA = "0x1045E24")]
	private void CalculateSelectionFromPoint(Vector3 worldPos)
	{
	}

	[Token(Token = "0x600085F")]
	[Address(RVA = "0x1045344", Offset = "0x1045344", VA = "0x1045344")]
	private void PopulateRecordBox()
	{
	}

	[Token(Token = "0x6000860")]
	[Address(RVA = "0x1045670", Offset = "0x1045670", VA = "0x1045670")]
	[ContextMenu("UpdateAvailableRecords")]
	private void UpdateAvailableRecords()
	{
	}

	[Token(Token = "0x6000861")]
	[Address(RVA = "0x1045BB0", Offset = "0x1045BB0", VA = "0x1045BB0")]
	private void UpdateRecordSleeves()
	{
	}

	[Token(Token = "0x6000862")]
	[Address(RVA = "0x1046328", Offset = "0x1046328", VA = "0x1046328")]
	private void UpdateCollision()
	{
	}

	[Token(Token = "0x6000863")]
	[Address(RVA = "0x1046518", Offset = "0x1046518", VA = "0x1046518")]
	private bool OnCanDispenseRecordCallback(Dispenser dispenser, PhysicsHoldable item)
	{
		return default(bool);
	}

	[Token(Token = "0x6000864")]
	[Address(RVA = "0x1046578", Offset = "0x1046578", VA = "0x1046578")]
	private void OnRecordDispensedCallback(Dispenser dispenser, PhysicsHoldable dispensedItem)
	{
	}

	[Token(Token = "0x6000865")]
	[Address(RVA = "0x1046A00", Offset = "0x1046A00", VA = "0x1046A00")]
	private void OnBlackboardChanged(string containerName, string blackboardName, string factName)
	{
	}

	[Token(Token = "0x6000866")]
	[Address(RVA = "0x1046B94", Offset = "0x1046B94", VA = "0x1046B94")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x6000868")]
	[Address(RVA = "0x1046C44", Offset = "0x1046C44", VA = "0x1046C44", Slot = "7")]
	public bool Serialise(FlexBufferBuilder builder, ISceneObjectReferenceSerialiser objectSerialiser)
	{
		return default(bool);
	}

	[Token(Token = "0x6000869")]
	[Address(RVA = "0x1046D1C", Offset = "0x1046D1C", VA = "0x1046D1C", Slot = "9")]
	public bool Deserialise(FlexBuffer.Map root, ISceneObjectReferenceDeserialiser objectDeserialiser)
	{
		return default(bool);
	}

	[Token(Token = "0x600086A")]
	[Address(RVA = "0x1046EB4", Offset = "0x1046EB4", VA = "0x1046EB4")]
	public RecordBox()
	{
	}
}
[Token(Token = "0x200014C")]
public class RecordDrawer : MonoBehaviour
{
	[Token(Token = "0x40006EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform _firstSlotPosition;

	[Token(Token = "0x40006ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform _secondSlotPosition;

	[Token(Token = "0x40006EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private List<RecordSleeve> _records;

	[Token(Token = "0x40006EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private List<int> _leanTweenRecordMoveIds;

	[Token(Token = "0x40006F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int _leanTweenDrawerMoveId;

	[Token(Token = "0x40006F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float _initialZ;

	[Token(Token = "0x40006F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float _leanAngle;

	[Token(Token = "0x40006F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public RecordDrawerDock _dock;

	[Token(Token = "0x40006F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Vector3 _gapBetweenSlots;

	[Token(Token = "0x40006F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private int _currentlyHighlighted;

	[Token(Token = "0x600086B")]
	[Address(RVA = "0x1046FEC", Offset = "0x1046FEC", VA = "0x1046FEC")]
	private void Awake()
	{
	}

	[Token(Token = "0x600086C")]
	[Address(RVA = "0x1047060", Offset = "0x1047060", VA = "0x1047060")]
	private void Start()
	{
	}

	[Token(Token = "0x600086D")]
	[Address(RVA = "0x104708C", Offset = "0x104708C", VA = "0x104708C")]
	public void RequestHighlight(RecordSleeve recordSleeve)
	{
	}

	[Token(Token = "0x600086E")]
	[Address(RVA = "0x1047450", Offset = "0x1047450", VA = "0x1047450")]
	public void Insert(RecordSleeve recordSleeve)
	{
	}

	[Token(Token = "0x600086F")]
	[Address(RVA = "0x10474A4", Offset = "0x10474A4", VA = "0x10474A4")]
	public void Insert(RecordSleeve recordSleeve, int slotIndex)
	{
	}

	[Token(Token = "0x6000870")]
	[Address(RVA = "0x104795C", Offset = "0x104795C", VA = "0x104795C")]
	public int FindSlotIndex(RecordSleeve recordSleeve)
	{
		return default(int);
	}

	[Token(Token = "0x6000871")]
	[Address(RVA = "0x1047A4C", Offset = "0x1047A4C", VA = "0x1047A4C")]
	public int Remove(RecordSleeve recordSleeve)
	{
		return default(int);
	}

	[Token(Token = "0x6000872")]
	[Address(RVA = "0x10475D0", Offset = "0x10475D0", VA = "0x10475D0")]
	private void UpdateTransforms()
	{
	}

	[Token(Token = "0x6000873")]
	[Address(RVA = "0x1047AC8", Offset = "0x1047AC8", VA = "0x1047AC8")]
	public void Open()
	{
	}

	[Token(Token = "0x6000874")]
	[Address(RVA = "0x1047BA4", Offset = "0x1047BA4", VA = "0x1047BA4")]
	public void Close()
	{
	}

	[Token(Token = "0x6000875")]
	[Address(RVA = "0x1047C8C", Offset = "0x1047C8C", VA = "0x1047C8C")]
	public RecordDrawer()
	{
	}
}
[Token(Token = "0x200014E")]
public class RecordPlayer : MonoBehaviour
{
	[Token(Token = "0x40006F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public InteractableItem _playButton;

	[Token(Token = "0x40006F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public InteractableItem _stopButton;

	[Token(Token = "0x40006F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public InteractableItem _recordSlot;

	[Token(Token = "0x40006FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public RecordSleeveSingleItemDock _dock;

	[Token(Token = "0x40006FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public RecordDrawer _drawer;

	[Token(Token = "0x40006FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject _recordGameObject;

	[Token(Token = "0x40006FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public TwinDecks.DeckID _deckID;

	[Token(Token = "0x40006FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private CallbackVoid<GameObject, GameObject, InteractionCallback> _interactionCallback;

	[Token(Token = "0x40006FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[HideInInspector]
	public RecordSleeve _insertedRecordSleeve;

	[Token(Token = "0x6000878")]
	[Address(RVA = "0x1047DD0", Offset = "0x1047DD0", VA = "0x1047DD0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000879")]
	[Address(RVA = "0x1047FC4", Offset = "0x1047FC4", VA = "0x1047FC4")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600087A")]
	[Address(RVA = "0x104817C", Offset = "0x104817C", VA = "0x104817C")]
	private void OnPlayerInteraction(GameObject thePlayer, GameObject theObject, InteractionCallback interactionEvent)
	{
	}

	[Token(Token = "0x600087B")]
	[Address(RVA = "0x1048468", Offset = "0x1048468", VA = "0x1048468")]
	private void Play()
	{
	}

	[Token(Token = "0x600087C")]
	[Address(RVA = "0x1048378", Offset = "0x1048378", VA = "0x1048378")]
	private void Stop()
	{
	}

	[Token(Token = "0x600087D")]
	[Address(RVA = "0x1048558", Offset = "0x1048558", VA = "0x1048558")]
	public RecordPlayer()
	{
	}
}
[Token(Token = "0x200014F")]
public class RecordSleeve : MonoBehaviour
{
	[Token(Token = "0x4000701")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject _mesh;

	[Token(Token = "0x4000702")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool _empty;

	[Token(Token = "0x4000703")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private int _leanTweenRotateId;

	[Token(Token = "0x4000704")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool _highlighted;

	[Token(Token = "0x4000705")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private BoxCollider _boxCollider;

	[Token(Token = "0x4000706")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static float s_rotatingJointYOffset;

	[Token(Token = "0x4000707")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	private static int s_counter;

	[Token(Token = "0x4000708")]
	private const int maxInstances = 20;

	[Token(Token = "0x4000709")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public TwinDecks.SongTitles _recordContent;

	[Token(Token = "0x1700008C")]
	public InteractableItem _InteractableItem
	{
		[Token(Token = "0x600087E")]
		[Address(RVA = "0x1048560", Offset = "0x1048560", VA = "0x1048560")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x600087F")]
		[Address(RVA = "0x1048568", Offset = "0x1048568", VA = "0x1048568")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x6000880")]
	[Address(RVA = "0x1048570", Offset = "0x1048570", VA = "0x1048570")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000881")]
	[Address(RVA = "0x104718C", Offset = "0x104718C", VA = "0x104718C")]
	public void SetHighlightedInDrawer(bool highlighted)
	{
	}

	[Token(Token = "0x6000882")]
	[Address(RVA = "0x10486D0", Offset = "0x10486D0", VA = "0x10486D0")]
	public void SetPivotToCenter()
	{
	}

	[Token(Token = "0x6000883")]
	[Address(RVA = "0x1048898", Offset = "0x1048898", VA = "0x1048898")]
	public void SetPivotToAnchor()
	{
	}

	[Token(Token = "0x6000884")]
	[Address(RVA = "0x10489F4", Offset = "0x10489F4", VA = "0x10489F4")]
	public RecordSleeve()
	{
	}
}
[Token(Token = "0x2000150")]
public class SelfClosingDoor : UpdatableMonoBehaviour
{
	[Token(Token = "0x2000151")]
	public delegate void OnFinishedCallback(bool interrupted);

	[Token(Token = "0x400070A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	[Header("Settings")]
	public bool _debugLog;

	[Token(Token = "0x400070B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	public bool _isPullLeftOrientation;

	[Token(Token = "0x400070C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Animator _animator;

	[Token(Token = "0x400070D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AlignmentHelper _pullAlignmentHelper;

	[Token(Token = "0x400070E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AlignmentHelper _pushAlignmentHelper;

	[Token(Token = "0x400070F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform _pullDirection;

	[Token(Token = "0x4000710")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool _useLerpsInsteadOfAnimation;

	[Token(Token = "0x4000711")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
	[SerializeField]
	[Header("Run-time data")]
	private bool _animationsRunning;

	[Token(Token = "0x4000712")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private AnimController _interactorAnimController;

	[Token(Token = "0x4000713")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private bool _isPulling;

	[Token(Token = "0x4000714")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private OnFinishedCallback _onFinishedCallback;

	[Token(Token = "0x4000715")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private FlatScreenPlayer _user;

	[Token(Token = "0x4000716")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private DoorRoomSelector _doorRoomSelector;

	[Token(Token = "0x6000888")]
	[Address(RVA = "0x1048DC8", Offset = "0x1048DC8", VA = "0x1048DC8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000889")]
	[Address(RVA = "0x1048E5C", Offset = "0x1048E5C", VA = "0x1048E5C")]
	public void Use(FlatScreenPlayer user, OnFinishedCallback onFinishedCallback)
	{
	}

	[Token(Token = "0x600088A")]
	[Address(RVA = "0x1049180", Offset = "0x1049180", VA = "0x1049180")]
	public void Open()
	{
	}

	[Token(Token = "0x600088B")]
	[Address(RVA = "0x10491D8", Offset = "0x10491D8", VA = "0x10491D8")]
	public void Close()
	{
	}

	[Token(Token = "0x600088C")]
	[Address(RVA = "0x1049230", Offset = "0x1049230", VA = "0x1049230")]
	private void OnAlignmentFinished(bool interrupted)
	{
	}

	[Token(Token = "0x600088D")]
	[Address(RVA = "0x1049530", Offset = "0x1049530", VA = "0x1049530", Slot = "7")]
	public override void OnUpdate(float dt)
	{
	}

	[Token(Token = "0x600088E")]
	[Address(RVA = "0x1049264", Offset = "0x1049264", VA = "0x1049264")]
	private void PlayAnimations()
	{
	}

	[Token(Token = "0x600088F")]
	[Address(RVA = "0x10495AC", Offset = "0x10495AC", VA = "0x10495AC")]
	private void OnAnimationsFinished()
	{
	}

	[Token(Token = "0x6000890")]
	[Address(RVA = "0x1048F90", Offset = "0x1048F90", VA = "0x1048F90")]
	private bool IsPulling()
	{
		return default(bool);
	}

	[Token(Token = "0x6000891")]
	[Address(RVA = "0x10495F8", Offset = "0x10495F8", VA = "0x10495F8")]
	public SelfClosingDoor()
	{
	}
}
[Token(Token = "0x2000152")]
[RequireComponent(typeof(ConfigurableJoint))]
[RequireComponent(typeof(Rigidbody))]
public class Slideable : MonoBehaviour, IFixedUpdatable, ISceneReferrable, ISerialisable, IDeserialisable
{
	[Token(Token = "0x2000153")]
	private enum SliderState
	{
		[Token(Token = "0x4000738")]
		Idle,
		[Token(Token = "0x4000739")]
		Activating,
		[Token(Token = "0x400073A")]
		Deactivating,
		[Token(Token = "0x400073B")]
		Held
	}

	[Token(Token = "0x2000154")]
	private static class Keys
	{
		[Token(Token = "0x400073C")]
		public const string Transform = "transform";

		[Token(Token = "0x400073D")]
		public const string Rigidbody = "rigidbody";

		[Token(Token = "0x400073E")]
		public const string State = "state";
	}

	[Token(Token = "0x4000717")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private EventReference _sliderMovementEventReference;

	[Token(Token = "0x4000718")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private EventReference _sliderReachedEndEventReference;

	[Token(Token = "0x4000719")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private EventReference _sliderReachedStartEventReference;

	[Token(Token = "0x400071A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private PARAMETER_ID sliderMovementParameterId;

	[Token(Token = "0x400071B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private AudioHandle _sliderMovementAudio;

	[Token(Token = "0x400071C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	[SerializeField]
	private float autoSliderSpeed;

	[Token(Token = "0x400071D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private float playerGripStrength;

	[Token(Token = "0x400071E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private ConfigurableJoint configurableJoint;

	[Token(Token = "0x400071F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private float handleJointLateralAllowance;

	[Token(Token = "0x4000720")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	[SerializeField]
	private bool _keepSliderMomementum;

	[Token(Token = "0x4000721")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6D")]
	[SerializeField]
	private bool _showDebugGizmos;

	[Token(Token = "0x4000722")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6E")]
	[SerializeField]
	private bool _resetSliderOnStart;

	[Token(Token = "0x4000723")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private UnityEvent _OnSliderStartReached;

	[Token(Token = "0x4000724")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private UnityEvent _OnSliderEndReached;

	[Token(Token = "0x4000725")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[HideInInspector]
	public UnityEvent _OnSliderValueChanged;

	[Token(Token = "0x4000726")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Vector3 _autoMovementAddedForce;

	[Token(Token = "0x4000727")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private Handle m_handle;

	[Token(Token = "0x4000728")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private Vector3 _currentSliderPos;

	[Token(Token = "0x4000729")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private Vector3 _prevSliderPos;

	[Token(Token = "0x400072A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private float _sliderNormalizedValue;

	[Token(Token = "0x400072B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private Vector3 _sliderStartPos;

	[Token(Token = "0x400072C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private Vector3 _sliderEndPos;

	[Token(Token = "0x400072D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	private float _sliderLength;

	[Token(Token = "0x400072E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private float _sliderDistanceFromStart;

	[Token(Token = "0x400072F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
	private float _sliderDistanceFromEnd;

	[Token(Token = "0x4000730")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private Rigidbody rigidBody;

	[Token(Token = "0x4000731")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private SliderState state;

	[Token(Token = "0x4000732")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
	private bool wasAtTheStart;

	[Token(Token = "0x4000733")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private float lastMovementValue;

	[Token(Token = "0x4000734")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
	private bool _reachedSliderEnd;

	[Token(Token = "0x4000735")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF5")]
	private bool _reachedSliderStart;

	[Token(Token = "0x4000736")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private ConfigurableJoint handleJoint;

	[Token(Token = "0x1700008D")]
	public Handle _Handle
	{
		[Token(Token = "0x6000896")]
		[Address(RVA = "0x1049780", Offset = "0x1049780", VA = "0x1049780")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700008E")]
	public float SliderNormalizedValue
	{
		[Token(Token = "0x6000897")]
		[Address(RVA = "0x1049788", Offset = "0x1049788", VA = "0x1049788")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x1700008F")]
	public string typeId
	{
		[Token(Token = "0x60008AB")]
		[Address(RVA = "0x104B368", Offset = "0x104B368", VA = "0x104B368", Slot = "7")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000898")]
	[Address(RVA = "0x1049790", Offset = "0x1049790", VA = "0x1049790")]
	private void Start()
	{
	}

	[Token(Token = "0x6000899")]
	[Address(RVA = "0x1049CD0", Offset = "0x1049CD0", VA = "0x1049CD0")]
	private Vector3 GetPositiveDirection()
	{
		return default(Vector3);
	}

	[Token(Token = "0x600089A")]
	[Address(RVA = "0x1049FAC", Offset = "0x1049FAC", VA = "0x1049FAC", Slot = "4")]
	public void OnFixedUpdate(float dt)
	{
	}

	[Token(Token = "0x600089B")]
	[Address(RVA = "0x104A868", Offset = "0x104A868", VA = "0x104A868")]
	public void GoToEnd()
	{
	}

	[Token(Token = "0x600089C")]
	[Address(RVA = "0x104A94C", Offset = "0x104A94C", VA = "0x104A94C")]
	public void GoToStart()
	{
	}

	[Token(Token = "0x600089D")]
	[Address(RVA = "0x104A888", Offset = "0x104A888", VA = "0x104A888")]
	private bool ReachedTheEnd()
	{
		return default(bool);
	}

	[Token(Token = "0x600089E")]
	[Address(RVA = "0x104A96C", Offset = "0x104A96C", VA = "0x104A96C")]
	private bool ReachedTheStart()
	{
		return default(bool);
	}

	[Token(Token = "0x600089F")]
	[Address(RVA = "0x104AA30", Offset = "0x104AA30", VA = "0x104AA30")]
	private void OnJointBreak(float breakForce)
	{
	}

	[Token(Token = "0x60008A0")]
	[Address(RVA = "0x104AA70", Offset = "0x104AA70", VA = "0x104AA70")]
	private void EventCallsTriggers()
	{
	}

	[Token(Token = "0x60008A1")]
	[Address(RVA = "0x1049FCC", Offset = "0x1049FCC", VA = "0x1049FCC")]
	private void UpdateSliderValues()
	{
	}

	[Token(Token = "0x60008A2")]
	[Address(RVA = "0x1049E50", Offset = "0x1049E50", VA = "0x1049E50")]
	private void CalculateAndSetCurrentSliderValues()
	{
	}

	[Token(Token = "0x60008A3")]
	[Address(RVA = "0x1049DC0", Offset = "0x1049DC0", VA = "0x1049DC0")]
	public void MoveSliderToNormalizedValue(float normalizedValue)
	{
	}

	[Token(Token = "0x60008A4")]
	[Address(RVA = "0x1049B40", Offset = "0x1049B40", VA = "0x1049B40")]
	private void Init()
	{
	}

	[Token(Token = "0x60008A5")]
	[Address(RVA = "0x104AB1C", Offset = "0x104AB1C", VA = "0x104AB1C")]
	private void OnHeld(Holdable item, GrabAnchor grabAnchor)
	{
	}

	[Token(Token = "0x60008A6")]
	[Address(RVA = "0x104AD74", Offset = "0x104AD74", VA = "0x104AD74")]
	private void OnReleased(Holdable item, GrabAnchor grabAnchor)
	{
	}

	[Token(Token = "0x60008A7")]
	[Address(RVA = "0x104A0B0", Offset = "0x104A0B0", VA = "0x104A0B0")]
	private void UpdateState()
	{
	}

	[Token(Token = "0x60008A8")]
	[Address(RVA = "0x104B0D8", Offset = "0x104B0D8", VA = "0x104B0D8")]
	private void CheckForOutOfBoundsSlideable()
	{
	}

	[Token(Token = "0x60008A9")]
	[Address(RVA = "0x104A2A8", Offset = "0x104A2A8", VA = "0x104A2A8")]
	private void UpdateAudio()
	{
	}

	[Token(Token = "0x60008AA")]
	[Address(RVA = "0x104B104", Offset = "0x104B104", VA = "0x104B104")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x60008AC")]
	[Address(RVA = "0x104B3A8", Offset = "0x104B3A8", VA = "0x104B3A8", Slot = "6")]
	public bool Serialise(FlexBufferBuilder builder, ISceneObjectReferenceSerialiser objectSerialiser)
	{
		return default(bool);
	}

	[Token(Token = "0x60008AD")]
	[Address(RVA = "0x104B47C", Offset = "0x104B47C", VA = "0x104B47C", Slot = "8")]
	public bool Deserialise(FlexBuffer.Map root, ISceneObjectReferenceDeserialiser objectDeserialiser)
	{
		return default(bool);
	}

	[Token(Token = "0x60008AE")]
	[Address(RVA = "0x104B5B8", Offset = "0x104B5B8", VA = "0x104B5B8")]
	public Slideable()
	{
	}
}
[Token(Token = "0x2000155")]
public class SliderAudioLevels : MonoBehaviour, IInitialisable
{
	[Token(Token = "0x2000156")]
	private enum AudioSliderTypes
	{
		[Token(Token = "0x400074B")]
		MasterVolume,
		[Token(Token = "0x400074C")]
		SoundboardVolume,
		[Token(Token = "0x400074D")]
		CassetteVolume,
		[Token(Token = "0x400074E")]
		RecordsVolume
	}

	[Token(Token = "0x400073F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Header("Pre-Flight checks")]
	[SerializeField]
	private FactAsset factVolumeChange;

	[Token(Token = "0x4000740")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private FactAsset factCheckStory;

	[Token(Token = "0x4000741")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private string factCheckStoryState;

	[Token(Token = "0x4000742")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	[Header("Audio Slider Emitters")]
	private AudioSliderTypes audioSliderType;

	[Token(Token = "0x4000743")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[SerializeField]
	private EventReference _emitterFmodEventReference;

	[Token(Token = "0x4000744")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private string sliderProperyName;

	[Token(Token = "0x4000745")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private AudioManager _audioManager;

	[Token(Token = "0x4000746")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Slideable _slider;

	[Token(Token = "0x4000747")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private float m_musicVolumeChange;

	[Token(Token = "0x4000748")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private PARAMETER_ID sliderProperyID;

	[Token(Token = "0x4000749")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private AudioHandle emitterHandle;

	[Token(Token = "0x60008AF")]
	[Address(RVA = "0x104B5E0", Offset = "0x104B5E0", VA = "0x104B5E0", Slot = "4")]
	public bool Initialise()
	{
		return default(bool);
	}

	[Token(Token = "0x60008B0")]
	[Address(RVA = "0x104BA94", Offset = "0x104BA94", VA = "0x104BA94")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60008B1")]
	[Address(RVA = "0x104BB70", Offset = "0x104BB70", VA = "0x104BB70")]
	private void OnMixingDeskSliderValueChanged()
	{
	}

	[Token(Token = "0x60008B2")]
	[Address(RVA = "0x104B9E4", Offset = "0x104B9E4", VA = "0x104B9E4")]
	private void SetInitialValues()
	{
	}

	[Token(Token = "0x60008B3")]
	[Address(RVA = "0x104B8B4", Offset = "0x104B8B4", VA = "0x104B8B4")]
	private void GetParamID(string name, out PARAMETER_ID paramID)
	{
	}

	[Token(Token = "0x60008B4")]
	[Address(RVA = "0x104BDFC", Offset = "0x104BDFC", VA = "0x104BDFC")]
	private void SetParam(PARAMETER_ID paramID, float value)
	{
	}

	[Token(Token = "0x60008B5")]
	[Address(RVA = "0x104BEF4", Offset = "0x104BEF4", VA = "0x104BEF4")]
	public SliderAudioLevels()
	{
	}
}
[Token(Token = "0x2000157")]
public class SliderOld : MonoBehaviour
{
	[Token(Token = "0x2000158")]
	public enum MixerSliders
	{
		[Token(Token = "0x4000752")]
		CARTRIDGE,
		[Token(Token = "0x4000753")]
		EXTERNAL,
		[Token(Token = "0x4000754")]
		MICROPHONE,
		[Token(Token = "0x4000755")]
		PHONE,
		[Token(Token = "0x4000756")]
		TURNTABLE_1,
		[Token(Token = "0x4000757")]
		TURNTABLE_2
	}

	[Token(Token = "0x400074F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private MixerSliders _sliderType;

	[Token(Token = "0x4000750")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private InteractableItem _interactableSlider;

	[Token(Token = "0x60008B6")]
	[Address(RVA = "0x104BF6C", Offset = "0x104BF6C", VA = "0x104BF6C")]
	private void Awake()
	{
	}

	[Token(Token = "0x60008B7")]
	[Address(RVA = "0x104C000", Offset = "0x104C000", VA = "0x104C000")]
	private void Start()
	{
	}

	[Token(Token = "0x60008B8")]
	[Address(RVA = "0x104C380", Offset = "0x104C380", VA = "0x104C380")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60008B9")]
	[Address(RVA = "0x104C0F8", Offset = "0x104C0F8", VA = "0x104C0F8")]
	public void SetMixerAudioLevels(float sliderValue)
	{
	}

	[Token(Token = "0x60008BA")]
	[Address(RVA = "0x104C46C", Offset = "0x104C46C", VA = "0x104C46C")]
	public SliderOld()
	{
	}
}
[Token(Token = "0x2000159")]
public class VerticalSlidingDoor : MonoBehaviour
{
	[Token(Token = "0x4000758")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float closedY;

	[Token(Token = "0x4000759")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float openY;

	[Token(Token = "0x400075A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float openSpeed;

	[Token(Token = "0x400075B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float targetY;

	[Token(Token = "0x400075C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool panelMoving;

	[Token(Token = "0x400075D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public InteractableItem interactableSwitch;

	[Token(Token = "0x60008BB")]
	[Address(RVA = "0x104C474", Offset = "0x104C474", VA = "0x104C474")]
	private void Start()
	{
	}

	[Token(Token = "0x60008BC")]
	[Address(RVA = "0x104C60C", Offset = "0x104C60C", VA = "0x104C60C")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60008BD")]
	[Address(RVA = "0x104C7A4", Offset = "0x104C7A4", VA = "0x104C7A4")]
	private void Activate()
	{
	}

	[Token(Token = "0x60008BE")]
	[Address(RVA = "0x104C7B8", Offset = "0x104C7B8", VA = "0x104C7B8")]
	private void Deactivate()
	{
	}

	[Token(Token = "0x60008BF")]
	[Address(RVA = "0x104C7CC", Offset = "0x104C7CC", VA = "0x104C7CC")]
	private void Update()
	{
	}

	[Token(Token = "0x60008C0")]
	[Address(RVA = "0x104C8EC", Offset = "0x104C8EC", VA = "0x104C8EC")]
	public VerticalSlidingDoor()
	{
	}
}
[Token(Token = "0x200015A")]
public static class HolderCosmetics
{
	[Token(Token = "0x200015B")]
	[CompilerGenerated]
	private sealed class <LerpToHolder>d__4 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400075F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000760")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000761")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int? requiredHolderSlot;

		[Token(Token = "0x4000762")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Holder holder;

		[Token(Token = "0x4000763")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Holdable holdable;

		[Token(Token = "0x4000764")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Transform intermediaryStop;

		[Token(Token = "0x4000765")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float duration;

		[Token(Token = "0x4000766")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Transform originTransform;

		[Token(Token = "0x4000767")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public bool preserveRotation;

		[Token(Token = "0x4000768")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private int <newHolderSlot>5__2;

		[Token(Token = "0x4000769")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Transform <holderSlotTransform>5__3;

		[Token(Token = "0x400076A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Vector3 <initialHoldablePos>5__4;

		[Token(Token = "0x400076B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private Quaternion <initialHoldableRot>5__5;

		[Token(Token = "0x400076C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private float <startTime>5__6;

		[Token(Token = "0x17000090")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60008CB")]
			[Address(RVA = "0x104D958", Offset = "0x104D958", VA = "0x104D958", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000091")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60008CD")]
			[Address(RVA = "0x104D9A0", Offset = "0x104D9A0", VA = "0x104D9A0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60008C8")]
		[Address(RVA = "0x104CC04", Offset = "0x104CC04", VA = "0x104CC04")]
		[DebuggerHidden]
		public <LerpToHolder>d__4(int <>1__state)
		{
		}

		[Token(Token = "0x60008C9")]
		[Address(RVA = "0x104CDC4", Offset = "0x104CDC4", VA = "0x104CDC4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60008CA")]
		[Address(RVA = "0x104CDC8", Offset = "0x104CDC8", VA = "0x104CDC8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60008CC")]
		[Address(RVA = "0x104D960", Offset = "0x104D960", VA = "0x104D960", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200015C")]
	[CompilerGenerated]
	private sealed class <LerpSwapBetweenHolderSlots>d__5 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400076D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400076E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400076F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Holder holder;

		[Token(Token = "0x4000770")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int slotOne;

		[Token(Token = "0x4000771")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public int slotTwo;

		[Token(Token = "0x4000772")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float duration;

		[Token(Token = "0x4000773")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Transform intermediaryStop;

		[Token(Token = "0x4000774")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Holdable <holdableOne>5__2;

		[Token(Token = "0x4000775")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Holdable <holdableTwo>5__3;

		[Token(Token = "0x4000776")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Transform <attachmentPointOne>5__4;

		[Token(Token = "0x4000777")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Transform <attachmentPointTwo>5__5;

		[Token(Token = "0x4000778")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private float <startTime>5__6;

		[Token(Token = "0x17000092")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60008D1")]
			[Address(RVA = "0x104E658", Offset = "0x104E658", VA = "0x104E658", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000093")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60008D3")]
			[Address(RVA = "0x104E6A0", Offset = "0x104E6A0", VA = "0x104E6A0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60008CE")]
		[Address(RVA = "0x104CCE0", Offset = "0x104CCE0", VA = "0x104CCE0")]
		[DebuggerHidden]
		public <LerpSwapBetweenHolderSlots>d__5(int <>1__state)
		{
		}

		[Token(Token = "0x60008CF")]
		[Address(RVA = "0x104D9A8", Offset = "0x104D9A8", VA = "0x104D9A8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60008D0")]
		[Address(RVA = "0x104D9AC", Offset = "0x104D9AC", VA = "0x104D9AC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60008D2")]
		[Address(RVA = "0x104E660", Offset = "0x104E660", VA = "0x104E660", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400075E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static List<bool> collidersEnabledOriginalValues;

	[Token(Token = "0x60008C1")]
	[Address(RVA = "0x104C900", Offset = "0x104C900", VA = "0x104C900")]
	public static IEnumerator LerpFromPositionToHolder(Holder holder, Holdable holdable, float duration = 0.1f, bool preserveRotation = false)
	{
		return null;
	}

	[Token(Token = "0x60008C2")]
	[Address(RVA = "0x104CA74", Offset = "0x104CA74", VA = "0x104CA74")]
	public static IEnumerator LerpFromPositionToHolderSlot(Holder holder, Holdable holdable, int slot, float duration = 0.1f, bool preserveRotation = false)
	{
		return null;
	}

	[Token(Token = "0x60008C3")]
	[Address(RVA = "0x104CB34", Offset = "0x104CB34", VA = "0x104CB34")]
	public static IEnumerator LerpFromTransformThroughIntermediaryToHolderSlot(Holder holder, Holdable holdable, int slot, Transform originTransform, Transform intermediaryStop, float duration = 0.1f, bool preserveRotation = false)
	{
		return null;
	}

	[Token(Token = "0x60008C4")]
	[Address(RVA = "0x104C988", Offset = "0x104C988", VA = "0x104C988")]
	[IteratorStateMachine(typeof(<LerpToHolder>d__4))]
	private static IEnumerator LerpToHolder(Holder holder, Holdable holdable, [Optional] int? requiredHolderSlot, [Optional] Transform originTransform, [Optional] Transform intermediaryStop, float duration = 0.1f, bool preserveRotation = false)
	{
		return null;
	}

	[Token(Token = "0x60008C5")]
	[Address(RVA = "0x104CC2C", Offset = "0x104CC2C", VA = "0x104CC2C")]
	[IteratorStateMachine(typeof(<LerpSwapBetweenHolderSlots>d__5))]
	public static IEnumerator LerpSwapBetweenHolderSlots(Holder holder, int slotOne, int slotTwo, Transform intermediaryStop, float duration = 0.1f)
	{
		return null;
	}

	[Token(Token = "0x60008C6")]
	[Address(RVA = "0x104CD08", Offset = "0x104CD08", VA = "0x104CD08")]
	private static float ScaleT(float t, float segmentStart, float segmentFinish)
	{
		return default(float);
	}
}
[Token(Token = "0x200015D")]
public interface IInsertableRestorer
{
	[Token(Token = "0x60008D4")]
	void ReleaseInsertedObjectForRestoration();
}
[Token(Token = "0x200015E")]
public class InsertableRestorerProxy : MonoBehaviour
{
	[Token(Token = "0x4000779")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private MonoBehaviour restorableInsertable;

	[Token(Token = "0x17000094")]
	public IInsertableRestorer RestorableInsertable
	{
		[Token(Token = "0x60008D5")]
		[Address(RVA = "0x104E6A8", Offset = "0x104E6A8", VA = "0x104E6A8")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x60008D6")]
		[Address(RVA = "0x104E6B0", Offset = "0x104E6B0", VA = "0x104E6B0")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x60008D7")]
	[Address(RVA = "0x104E6B8", Offset = "0x104E6B8", VA = "0x104E6B8")]
	private void Awake()
	{
	}

	[Token(Token = "0x60008D8")]
	[Address(RVA = "0x104E730", Offset = "0x104E730", VA = "0x104E730")]
	public InsertableRestorerProxy()
	{
	}
}
[Token(Token = "0x200015F")]
public class PausablePhysics : MonoBehaviour, IInitialisable, IPausableObject
{
	[Token(Token = "0x400077B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool _isKinematic;

	[Token(Token = "0x400077C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	private bool _holdableKinematicRequested;

	[Token(Token = "0x400077D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private PhysicsHoldable _holdable;

	[Token(Token = "0x400077E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Rigidbody _rigidbody;

	[Token(Token = "0x60008D9")]
	[Address(RVA = "0x104E738", Offset = "0x104E738", VA = "0x104E738")]
	public void Awake()
	{
	}

	[Token(Token = "0x60008DA")]
	[Address(RVA = "0x104E760", Offset = "0x104E760", VA = "0x104E760", Slot = "4")]
	public bool Initialise()
	{
		return default(bool);
	}

	[Token(Token = "0x60008DB")]
	[Address(RVA = "0x104E84C", Offset = "0x104E84C", VA = "0x104E84C", Slot = "5")]
	public void OnPaused(bool paused)
	{
	}

	[Token(Token = "0x60008DC")]
	[Address(RVA = "0x104E998", Offset = "0x104E998", VA = "0x104E998")]
	public PausablePhysics()
	{
	}
}
[Token(Token = "0x2000160")]
[CreateAssetMenu(fileName = "Assets/_Programming/Data/Physics/PhysicalProperties", menuName = "Physics/Physical Properties", order = 0)]
public class PhysicalProperties : ScriptableObject
{
	[Token(Token = "0x400077F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public PhysicMaterial physicsMaterial;

	[Token(Token = "0x4000780")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float mass;

	[Token(Token = "0x4000781")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float drag;

	[Token(Token = "0x4000782")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool overrideDropVelocityScale;

	[Token(Token = "0x4000783")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float dropVelocityOverride;

	[Token(Token = "0x60008DD")]
	[Address(RVA = "0x104E9A0", Offset = "0x104E9A0", VA = "0x104E9A0")]
	public PhysicalProperties()
	{
	}
}
[Serializable]
[Token(Token = "0x2000161")]
public struct RestorationData
{
	[Token(Token = "0x4000784")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector3 position_w;

	[Token(Token = "0x4000785")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Quaternion rotation_w;

	[Token(Token = "0x4000786")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public PhysicsHoldableDock dock;
}
[Token(Token = "0x2000162")]
public class RestorableObject : MonoBehaviour
{
	[Token(Token = "0x4000787")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[ReadOnly]
	[SerializeField]
	private RestorationData restorationData;

	[Token(Token = "0x4000788")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private PhysicsHoldable physicsHoldable;

	[Token(Token = "0x4000789")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Occludee occludee;

	[Token(Token = "0x17000095")]
	public PhysicsHoldable PhysicsHoldable
	{
		[Token(Token = "0x60008DE")]
		[Address(RVA = "0x104E9A8", Offset = "0x104E9A8", VA = "0x104E9A8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60008DF")]
	[Address(RVA = "0x104E9B0", Offset = "0x104E9B0", VA = "0x104E9B0")]
	public void Awake()
	{
	}

	[Token(Token = "0x60008E0")]
	[Address(RVA = "0x104EA40", Offset = "0x104EA40", VA = "0x104EA40")]
	private bool AreCapturedTransformDataDifferent()
	{
		return default(bool);
	}

	[Token(Token = "0x60008E1")]
	[Address(RVA = "0x104EB48", Offset = "0x104EB48", VA = "0x104EB48")]
	public void RestoreTransformIfNeeded()
	{
	}

	[Token(Token = "0x60008E2")]
	[Address(RVA = "0x104EC14", Offset = "0x104EC14", VA = "0x104EC14")]
	public void RestoreDockIfNeeded()
	{
	}

	[Token(Token = "0x60008E3")]
	[Address(RVA = "0x104EC9C", Offset = "0x104EC9C", VA = "0x104EC9C", Slot = "4")]
	public virtual void PostRestore()
	{
	}

	[Token(Token = "0x60008E4")]
	[Address(RVA = "0x104ECA0", Offset = "0x104ECA0", VA = "0x104ECA0")]
	public RestorableObject()
	{
	}
}
[Token(Token = "0x2000163")]
[RequireComponent(typeof(BoxCollider))]
public class AdjustBoxColliderPerPlatform : MonoBehaviour
{
	[Token(Token = "0x400078A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private BoxCollider boxCollider;

	[Token(Token = "0x400078B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Vector3 vrCenter;

	[Token(Token = "0x400078C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[SerializeField]
	private Vector3 vrSize;

	[Token(Token = "0x400078D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private Vector3 fsCenter;

	[Token(Token = "0x400078E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[SerializeField]
	private Vector3 fsSize;

	[Token(Token = "0x60008E5")]
	[Address(RVA = "0x104ECA8", Offset = "0x104ECA8", VA = "0x104ECA8")]
	private void Awake()
	{
	}

	[Token(Token = "0x60008E6")]
	[Address(RVA = "0x104ED38", Offset = "0x104ED38", VA = "0x104ED38")]
	public AdjustBoxColliderPerPlatform()
	{
	}
}
[Token(Token = "0x2000164")]
public class Board : UpdatableMonoBehaviour
{
	[Token(Token = "0x400078F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Collider _boardCollider;

	[Token(Token = "0x4000790")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private float _xLeftLimit;

	[Token(Token = "0x4000791")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[SerializeField]
	private float _xRightLimit;

	[Token(Token = "0x4000792")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private float _yUpLimit;

	[Token(Token = "0x4000793")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[SerializeField]
	private float _yDownLimit;

	[Token(Token = "0x4000794")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private List<PhysicsHoldableDock> _docks;

	[Token(Token = "0x4000795")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private List<BoardItem> _boardItems;

	[Token(Token = "0x4000796")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private UnityEngine.Plane _boardPlane;

	[Token(Token = "0x4000797")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Transform _boardTransform;

	[Token(Token = "0x4000798")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private PlayerBase playerWithItemsToBeReturned;

	[Token(Token = "0x4000799")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private CallbackVoid<string, string, string> _factChangeCallback;

	[Token(Token = "0x17000096")]
	public List<PhysicsHoldableDock> Docks
	{
		[Token(Token = "0x60008E7")]
		[Address(RVA = "0x104ED40", Offset = "0x104ED40", VA = "0x104ED40")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60008E8")]
	[Address(RVA = "0x104ED48", Offset = "0x104ED48", VA = "0x104ED48", Slot = "6")]
	public override bool Initialise()
	{
		return default(bool);
	}

	[Token(Token = "0x60008E9")]
	[Address(RVA = "0x104F480", Offset = "0x104F480", VA = "0x104F480", Slot = "10")]
	protected override void OnDestroy()
	{
	}

	[Token(Token = "0x60008EA")]
	[Address(RVA = "0x104F758", Offset = "0x104F758", VA = "0x104F758", Slot = "7")]
	public override void OnUpdate(float dt)
	{
	}

	[Token(Token = "0x60008EB")]
	[Address(RVA = "0x104F75C", Offset = "0x104F75C", VA = "0x104F75C")]
	private void MoveDockOnBoard()
	{
	}

	[Token(Token = "0x60008EC")]
	[Address(RVA = "0x104FAB0", Offset = "0x104FAB0", VA = "0x104FAB0")]
	private void MoveDock(BoardItem boardItem, Vector3 dockFollowPos)
	{
	}

	[Token(Token = "0x60008ED")]
	[Address(RVA = "0x104FC18", Offset = "0x104FC18", VA = "0x104FC18")]
	private void OnBlackboardChanged(string containerName, string blackboardName, string factName)
	{
	}

	[Token(Token = "0x60008EE")]
	[Address(RVA = "0x104F130", Offset = "0x104F130", VA = "0x104F130")]
	private void UpdateAvailableNotes()
	{
	}

	[Token(Token = "0x60008EF")]
	[Address(RVA = "0x104FC1C", Offset = "0x104FC1C", VA = "0x104FC1C")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x60008F0")]
	[Address(RVA = "0x104FF04", Offset = "0x104FF04", VA = "0x104FF04")]
	private bool OnCanDockBoardItemCallback(PhysicsHoldableDock dock, PhysicsHoldable dockable)
	{
		return default(bool);
	}

	[Token(Token = "0x60008F1")]
	[Address(RVA = "0x1050014", Offset = "0x1050014", VA = "0x1050014")]
	private bool OnCanUndockBoardItemCallback(PhysicsHoldableDock dock, PhysicsHoldable dockable)
	{
		return default(bool);
	}

	[Token(Token = "0x60008F2")]
	[Address(RVA = "0x105001C", Offset = "0x105001C", VA = "0x105001C")]
	private void OnBoardItemDockedCallback(PhysicsHoldableDock dock, PhysicsHoldable docked)
	{
	}

	[Token(Token = "0x60008F3")]
	[Address(RVA = "0x1050020", Offset = "0x1050020", VA = "0x1050020")]
	private void OnBoardItemUndockedCallback(PhysicsHoldableDock dock, PhysicsHoldable docked)
	{
	}

	[Token(Token = "0x60008F4")]
	[Address(RVA = "0x10500E0", Offset = "0x10500E0", VA = "0x10500E0")]
	public void OnPlayerLeft(PlayerBase player)
	{
	}

	[Token(Token = "0x60008F5")]
	[Address(RVA = "0x10500E8", Offset = "0x10500E8", VA = "0x10500E8")]
	public Board()
	{
	}
}
[Token(Token = "0x2000165")]
[RequireComponent(typeof(RedockInteraction))]
public class BoardItem : MonoBehaviour
{
	[Token(Token = "0x400079A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private bool _movableDock;

	[Token(Token = "0x400079B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private FactAsset _fact;

	[Token(Token = "0x400079C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[HideInInspector]
	public Vector3 _pickupPosition;

	[Token(Token = "0x400079D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private PhysicsHoldableDock _dock;

	[Token(Token = "0x400079E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private RedockInteraction _redockInteraction;

	[Token(Token = "0x17000097")]
	public FactAsset fact
	{
		[Token(Token = "0x60008F6")]
		[Address(RVA = "0x10501C0", Offset = "0x10501C0", VA = "0x10501C0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000098")]
	public PhysicsHoldableDock ItemDock
	{
		[Token(Token = "0x60008F7")]
		[Address(RVA = "0x10501C8", Offset = "0x10501C8", VA = "0x10501C8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000099")]
	public bool MovableDock
	{
		[Token(Token = "0x60008F8")]
		[Address(RVA = "0x10501D0", Offset = "0x10501D0", VA = "0x10501D0")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x60008F9")]
	[Address(RVA = "0x10501D8", Offset = "0x10501D8", VA = "0x10501D8")]
	private void Awake()
	{
	}

	[Token(Token = "0x60008FA")]
	[Address(RVA = "0x10502F8", Offset = "0x10502F8", VA = "0x10502F8")]
	public BoardItem()
	{
	}
}
[Token(Token = "0x2000166")]
[RequireComponent(typeof(Collider))]
public class ColliderWithExclusions : MonoBehaviour
{
	[Token(Token = "0x400079F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject ignoreAllCollidersOfGameObject;

	[Token(Token = "0x40007A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Collider myCollider;

	[Token(Token = "0x40007A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static List<Collider> collidersToIgnore;

	[Token(Token = "0x60008FB")]
	[Address(RVA = "0x1050300", Offset = "0x1050300", VA = "0x1050300")]
	private void Awake()
	{
	}

	[Token(Token = "0x60008FC")]
	[Address(RVA = "0x105046C", Offset = "0x105046C", VA = "0x105046C")]
	public ColliderWithExclusions()
	{
	}
}
[Token(Token = "0x2000167")]
public class Dictaphone : UpdatableMonoBehaviour, ISerialisable, IDeserialisable, ISceneReferrable, IPostDeserialiseNotified
{
	[Token(Token = "0x2000168")]
	private struct ResumeData
	{
		[Token(Token = "0x40007A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public bool wasPlaying;

		[Token(Token = "0x40007A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
		public bool wasPaused;
	}

	[Token(Token = "0x2000169")]
	private static class Keys
	{
		[Token(Token = "0x40007AA")]
		public const string IsPlaying = "playing";

		[Token(Token = "0x40007AB")]
		public const string IsPaused = "paused";
	}

	[Token(Token = "0x40007A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private EventReference _fmodEventReference;

	[Token(Token = "0x40007A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private DialogueAsset _subtitleDialogueAsset;

	[Token(Token = "0x40007A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private DialoguePlayback _dialoguePlayer;

	[Token(Token = "0x40007A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private ResumeData _resumeData;

	[Token(Token = "0x40007A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x42")]
	private bool _hasResumeData;

	[Token(Token = "0x40007A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x43")]
	private bool _playing;

	[Token(Token = "0x1700009A")]
	public string typeId
	{
		[Token(Token = "0x6000903")]
		[Address(RVA = "0x10506E4", Offset = "0x10506E4", VA = "0x10506E4", Slot = "13")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60008FE")]
	[Address(RVA = "0x1050510", Offset = "0x1050510", VA = "0x1050510")]
	private void Awake()
	{
	}

	[Token(Token = "0x60008FF")]
	[Address(RVA = "0x1050568", Offset = "0x1050568", VA = "0x1050568", Slot = "7")]
	public override void OnUpdate(float dt)
	{
	}

	[Token(Token = "0x6000900")]
	[Address(RVA = "0x10505B0", Offset = "0x10505B0", VA = "0x10505B0")]
	public void Play()
	{
	}

	[Token(Token = "0x6000901")]
	[Address(RVA = "0x105064C", Offset = "0x105064C", VA = "0x105064C")]
	public void Stop()
	{
	}

	[Token(Token = "0x6000902")]
	[Address(RVA = "0x1050668", Offset = "0x1050668", VA = "0x1050668", Slot = "15")]
	private void Serialisation.IPostDeserialiseNotified.OnPostDeserialise()
	{
	}

	[Token(Token = "0x6000904")]
	[Address(RVA = "0x1050724", Offset = "0x1050724", VA = "0x1050724", Slot = "12")]
	public bool Serialise(FlexBufferBuilder builder, ISceneObjectReferenceSerialiser objectSerialiser)
	{
		return default(bool);
	}

	[Token(Token = "0x6000905")]
	[Address(RVA = "0x10507D0", Offset = "0x10507D0", VA = "0x10507D0", Slot = "14")]
	public bool Deserialise(FlexBuffer.Map root, ISceneObjectReferenceDeserialiser objectDeserialiser)
	{
		return default(bool);
	}

	[Token(Token = "0x6000906")]
	[Address(RVA = "0x10508E8", Offset = "0x10508E8", VA = "0x10508E8")]
	public Dictaphone()
	{
	}
}
[Token(Token = "0x200016A")]
public class FloppyDisk : MonoBehaviour
{
	[Token(Token = "0x40007AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private FactAsset onOpenedFact;

	[Token(Token = "0x40007AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Material screenMaterial;

	[Token(Token = "0x40007AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private string onOpenedCustomEventName;

	[Token(Token = "0x40007AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private LocalizedString displayText;

	[Token(Token = "0x1700009B")]
	public Material ScreenMaterial
	{
		[Token(Token = "0x6000907")]
		[Address(RVA = "0x10508F0", Offset = "0x10508F0", VA = "0x10508F0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700009C")]
	public FactAsset OnOpenedFact
	{
		[Token(Token = "0x6000908")]
		[Address(RVA = "0x10508F8", Offset = "0x10508F8", VA = "0x10508F8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700009D")]
	public string OnOpenedCustomEventName
	{
		[Token(Token = "0x6000909")]
		[Address(RVA = "0x1050900", Offset = "0x1050900", VA = "0x1050900")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700009E")]
	public LocalizedString DisplayText
	{
		[Token(Token = "0x600090A")]
		[Address(RVA = "0x1050908", Offset = "0x1050908", VA = "0x1050908")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600090B")]
	[Address(RVA = "0x1050910", Offset = "0x1050910", VA = "0x1050910")]
	public FloppyDisk()
	{
	}
}
[Token(Token = "0x200016B")]
public class FloppyDiskComputer : UpdatableMonoBehaviour, ISceneReferrable, ISerialisable, IDeserialisable, IInsertableRestorer, IElectricityPowered
{
	[Token(Token = "0x200016C")]
	public enum State
	{
		[Token(Token = "0x40007BE")]
		NoDisk,
		[Token(Token = "0x40007BF")]
		InsertionInProgress,
		[Token(Token = "0x40007C0")]
		LoadingInProgress,
		[Token(Token = "0x40007C1")]
		DiskOpened,
		[Token(Token = "0x40007C2")]
		EjectionInProgress
	}

	[Token(Token = "0x200016D")]
	private static class Keys
	{
		[Token(Token = "0x40007C3")]
		public const string DiskInserted = "disk_inserted";
	}

	[Token(Token = "0x40007B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private PhysicsHoldableDock dock;

	[Token(Token = "0x40007B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private UnityEvent<FloppyDisk> onDiskLoadedEvent;

	[Token(Token = "0x40007B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private LocalizedString defaultDisplayText;

	[Token(Token = "0x40007B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private LocalizedString loadingDisplayText;

	[Token(Token = "0x40007B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private DiegeticTextLocalizer diegeticTextLocalizer;

	[Token(Token = "0x40007B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private float insertionAnimationDuration;

	[Token(Token = "0x40007B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[SerializeField]
	private float ejectionAnimationDuration;

	[Token(Token = "0x40007B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private float diskLoadingDuration;

	[Token(Token = "0x40007B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private float lastDiskInsertionTime;

	[Token(Token = "0x40007B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float lastDiskEjectionTime;

	[Token(Token = "0x40007BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private FloppyDiskComputerCosmetics floppyDiskComputerCosmetics;

	[Token(Token = "0x40007BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private FloppyDisk insertedDisk;

	[Token(Token = "0x1700009F")]
	public State CurrentState
	{
		[Token(Token = "0x600090D")]
		[Address(RVA = "0x1050920", Offset = "0x1050920", VA = "0x1050920")]
		[CompilerGenerated]
		get
		{
			return default(State);
		}
		[Token(Token = "0x600090C")]
		[Address(RVA = "0x1050918", Offset = "0x1050918", VA = "0x1050918")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x170000A0")]
	public string typeId
	{
		[Token(Token = "0x600091A")]
		[Address(RVA = "0x1051718", Offset = "0x1051718", VA = "0x1051718", Slot = "13")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600090E")]
	[Address(RVA = "0x1050928", Offset = "0x1050928", VA = "0x1050928")]
	private void Awake()
	{
	}

	[Token(Token = "0x600090F")]
	[Address(RVA = "0x1050AA0", Offset = "0x1050AA0", VA = "0x1050AA0", Slot = "6")]
	public override bool Initialise()
	{
		return default(bool);
	}

	[Token(Token = "0x6000910")]
	[Address(RVA = "0x1050E24", Offset = "0x1050E24", VA = "0x1050E24", Slot = "7")]
	public override void OnUpdate(float dt)
	{
	}

	[Token(Token = "0x6000911")]
	[Address(RVA = "0x10510A0", Offset = "0x10510A0", VA = "0x10510A0", Slot = "10")]
	protected override void OnDestroy()
	{
	}

	[Token(Token = "0x6000912")]
	[Address(RVA = "0x10511E0", Offset = "0x10511E0", VA = "0x10511E0")]
	public void InsertDisk(FloppyDisk disk)
	{
	}

	[Token(Token = "0x6000913")]
	[Address(RVA = "0x1050EE0", Offset = "0x1050EE0", VA = "0x1050EE0")]
	public void OnDiskInserted()
	{
	}

	[Token(Token = "0x6000914")]
	[Address(RVA = "0x1050F3C", Offset = "0x1050F3C", VA = "0x1050F3C")]
	public void OnDiskLoaded()
	{
	}

	[Token(Token = "0x6000915")]
	[Address(RVA = "0x1051404", Offset = "0x1051404", VA = "0x1051404")]
	public void Eject()
	{
	}

	[Token(Token = "0x6000916")]
	[Address(RVA = "0x1050F18", Offset = "0x1050F18", VA = "0x1050F18")]
	public void OnDiskEjected()
	{
	}

	[Token(Token = "0x6000917")]
	[Address(RVA = "0x10515B4", Offset = "0x10515B4", VA = "0x10515B4")]
	private void OnDiskDockedCallback(PhysicsHoldableDock dock, PhysicsHoldable docked)
	{
	}

	[Token(Token = "0x6000918")]
	[Address(RVA = "0x1051660", Offset = "0x1051660", VA = "0x1051660")]
	private bool CanUndockCallback(PhysicsHoldableDock dock, PhysicsHoldable docked)
	{
		return default(bool);
	}

	[Token(Token = "0x6000919")]
	[Address(RVA = "0x1051670", Offset = "0x1051670", VA = "0x1051670")]
	private bool CanDockCallback(PhysicsHoldableDock dock, PhysicsHoldable docked)
	{
		return default(bool);
	}

	[Token(Token = "0x600091B")]
	[Address(RVA = "0x1051758", Offset = "0x1051758", VA = "0x1051758", Slot = "12")]
	public bool Serialise(FlexBufferBuilder builder, ISceneObjectReferenceSerialiser objectSerialiser)
	{
		return default(bool);
	}

	[Token(Token = "0x600091C")]
	[Address(RVA = "0x10517C8", Offset = "0x10517C8", VA = "0x10517C8", Slot = "14")]
	public bool Deserialise(FlexBuffer.Map root, ISceneObjectReferenceDeserialiser objectDeserialiser)
	{
		return default(bool);
	}

	[Token(Token = "0x600091D")]
	[Address(RVA = "0x1051878", Offset = "0x1051878", VA = "0x1051878", Slot = "15")]
	public void ReleaseInsertedObjectForRestoration()
	{
	}

	[Token(Token = "0x600091E")]
	[Address(RVA = "0x10518EC", Offset = "0x10518EC", VA = "0x10518EC", Slot = "16")]
	public void OnPowerStateChanged(bool newState)
	{
	}

	[Token(Token = "0x600091F")]
	[Address(RVA = "0x1051BAC", Offset = "0x1051BAC", VA = "0x1051BAC")]
	public FloppyDiskComputer()
	{
	}
}
[Token(Token = "0x200016E")]
public class FloppyDiskComputerCosmetics : MonoBehaviour, ISerialisable, IDeserialisable
{
	[Token(Token = "0x200016F")]
	private static class Keys
	{
		[Token(Token = "0x40007D4")]
		public const string RunAudioEvent = "run_audio";
	}

	[Token(Token = "0x40007C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private MeshRenderer screenRenderer;

	[Token(Token = "0x40007C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Material defaultScreenMaterial;

	[Token(Token = "0x40007C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Material loadingScreenMaterial;

	[Token(Token = "0x40007C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Interactables.ToggleButton button;

	[Token(Token = "0x40007C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private Animation dockAnimation;

	[Token(Token = "0x40007C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private AnimationClip diskInsertionAnimation;

	[Token(Token = "0x40007CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private AnimationClip diskEjectionAnimation;

	[Token(Token = "0x40007CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private AnimationClip diskInsertedAnimation;

	[Token(Token = "0x40007CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	public EventReference insertFmodEvent;

	[Token(Token = "0x40007CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	public EventReference ejectFmodEvent;

	[Token(Token = "0x40007CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	public EventReference runFmodEvent;

	[Token(Token = "0x40007CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private Collider buttonCollider;

	[Token(Token = "0x40007D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private AudioHandle runAudioHandle;

	[Token(Token = "0x40007D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private PARAMETER_DESCRIPTION runLoopEndParameterDescription;

	[Token(Token = "0x40007D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private IAudioManager.ResumeData audioResumeData;

	[Token(Token = "0x40007D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private PowerSupplyEntryPoint powerSupply;

	[Token(Token = "0x170000A1")]
	public string typeId
	{
		[Token(Token = "0x600092D")]
		[Address(RVA = "0x10521F8", Offset = "0x10521F8", VA = "0x10521F8", Slot = "6")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000920")]
	[Address(RVA = "0x1051BC8", Offset = "0x1051BC8", VA = "0x1051BC8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000921")]
	[Address(RVA = "0x1051D80", Offset = "0x1051D80", VA = "0x1051D80")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000922")]
	[Address(RVA = "0x105121C", Offset = "0x105121C", VA = "0x105121C")]
	public void OnDiskInsertionStarted()
	{
	}

	[Token(Token = "0x6000923")]
	[Address(RVA = "0x1051390", Offset = "0x1051390", VA = "0x1051390")]
	public void OnDiskInsertionFinished()
	{
	}

	[Token(Token = "0x6000924")]
	[Address(RVA = "0x10513DC", Offset = "0x10513DC", VA = "0x10513DC")]
	public void OnDiskLoaded(FloppyDisk disk)
	{
	}

	[Token(Token = "0x6000925")]
	[Address(RVA = "0x1051448", Offset = "0x1051448", VA = "0x1051448")]
	public void OnDiskEjectionStarted()
	{
	}

	[Token(Token = "0x6000926")]
	[Address(RVA = "0x1051970", Offset = "0x1051970", VA = "0x1051970")]
	public void DisplayDefaultScreen()
	{
	}

	[Token(Token = "0x6000927")]
	[Address(RVA = "0x1051ECC", Offset = "0x1051ECC", VA = "0x1051ECC")]
	private void DisplayLoadingScreen()
	{
	}

	[Token(Token = "0x6000928")]
	[Address(RVA = "0x1052164", Offset = "0x1052164", VA = "0x1052164")]
	private void DisplayDiskTextOnScreen(FloppyDisk disk)
	{
	}

	[Token(Token = "0x6000929")]
	[Address(RVA = "0x1050BA4", Offset = "0x1050BA4", VA = "0x1050BA4")]
	public void ImmediatelyBringUpDiskLoadedState(FloppyDisk disk)
	{
	}

	[Token(Token = "0x600092A")]
	[Address(RVA = "0x10518CC", Offset = "0x10518CC", VA = "0x10518CC")]
	public void OnInsertedFloppyDiskRestored()
	{
	}

	[Token(Token = "0x600092B")]
	[Address(RVA = "0x1051F58", Offset = "0x1051F58", VA = "0x1051F58")]
	private void PlayRunAudio()
	{
	}

	[Token(Token = "0x600092C")]
	[Address(RVA = "0x10519FC", Offset = "0x10519FC", VA = "0x10519FC")]
	public void StopRunAudio()
	{
	}

	[Token(Token = "0x600092E")]
	[Address(RVA = "0x1052238", Offset = "0x1052238", VA = "0x1052238", Slot = "5")]
	public bool Serialise(FlexBufferBuilder builder, ISceneObjectReferenceSerialiser objectSerialiser)
	{
		return default(bool);
	}

	[Token(Token = "0x600092F")]
	[Address(RVA = "0x105238C", Offset = "0x105238C", VA = "0x105238C", Slot = "7")]
	public bool Deserialise(FlexBuffer.Map root, ISceneObjectReferenceDeserialiser objectDeserialiser)
	{
		return default(bool);
	}

	[Token(Token = "0x6000930")]
	[Address(RVA = "0x1052500", Offset = "0x1052500", VA = "0x1052500")]
	public FloppyDiskComputerCosmetics()
	{
	}
}
[Token(Token = "0x2000170")]
[RemoveOnVr]
[RequireComponent(typeof(HolderPlayer_Base))]
public class FsDropHandler : MonoBehaviour, IFsProjectionColliderTriggerHandler
{
	[Token(Token = "0x40007D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject holdingProxy;

	[Token(Token = "0x40007D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject primarySlot;

	[Token(Token = "0x40007D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private List<GameObject> copiedColliderGoSources;

	[Token(Token = "0x40007D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private List<GameObject> copiedColliderGameObjects;

	[Token(Token = "0x40007D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int defaultLayerId;

	[Token(Token = "0x40007DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private int holdableItemLayerId;

	[Token(Token = "0x40007DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private int heldPhysicsHoldableLayerId;

	[Token(Token = "0x40007DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private int hologramLayerId;

	[Token(Token = "0x40007DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private int collidingInstancesCount;

	[Token(Token = "0x40007DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private PhysicsHoldable currentHoldable;

	[Token(Token = "0x40007DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private FlatScreenPlayer player;

	[Token(Token = "0x40007E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private int hologramLayerMask;

	[Token(Token = "0x40007E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private RaycastHit[] hits;

	[Token(Token = "0x40007E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Vector3[] raycastTargetVertices_ls;

	[Token(Token = "0x40007E3")]
	private const int primarySlotId = 0;

	[Token(Token = "0x6000931")]
	[Address(RVA = "0x1052508", Offset = "0x1052508", VA = "0x1052508")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000932")]
	[Address(RVA = "0x1052658", Offset = "0x1052658", VA = "0x1052658")]
	public void OnHold(IHoldable holdable, int slot)
	{
	}

	[Token(Token = "0x6000933")]
	[Address(RVA = "0x1052DF4", Offset = "0x1052DF4", VA = "0x1052DF4")]
	public void OnDrop(IHoldable holdable, int slot)
	{
	}

	[Token(Token = "0x6000934")]
	[Address(RVA = "0x1052EFC", Offset = "0x1052EFC", VA = "0x1052EFC")]
	public void OnSwapped(IHoldable holdableOne, IHoldable holdableTwo, int newSlotOne, int newSlotTwo)
	{
	}

	[Token(Token = "0x6000935")]
	[Address(RVA = "0x1052664", Offset = "0x1052664", VA = "0x1052664")]
	private void BeginDetection(IHoldable holdable)
	{
	}

	[Token(Token = "0x6000936")]
	[Address(RVA = "0x1052E00", Offset = "0x1052E00", VA = "0x1052E00")]
	private void EndDetection(IHoldable holdable)
	{
	}

	[Token(Token = "0x6000937")]
	[Address(RVA = "0x1052F6C", Offset = "0x1052F6C", VA = "0x1052F6C", Slot = "4")]
	public void IncreaseCollidingInstancesCountForLevel(int level)
	{
	}

	[Token(Token = "0x6000938")]
	[Address(RVA = "0x1052F7C", Offset = "0x1052F7C", VA = "0x1052F7C", Slot = "5")]
	public void DecreaseCollidingInstancesCountForLevel(int level)
	{
	}

	[Token(Token = "0x6000939")]
	[Address(RVA = "0x1052F8C", Offset = "0x1052F8C", VA = "0x1052F8C")]
	private void Update()
	{
	}

	[Token(Token = "0x600093A")]
	[Address(RVA = "0x1052F90", Offset = "0x1052F90", VA = "0x1052F90")]
	public bool CanDrop(IHoldable holdable)
	{
		return default(bool);
	}

	[Token(Token = "0x600093B")]
	[Address(RVA = "0x105345C", Offset = "0x105345C", VA = "0x105345C")]
	public void PerformDropFailure()
	{
	}

	[Token(Token = "0x600093C")]
	[Address(RVA = "0x1053504", Offset = "0x1053504", VA = "0x1053504")]
	public FsDropHandler()
	{
	}
}
[Token(Token = "0x2000171")]
[RemoveOnVr]
[RequireComponent(typeof(HolderPlayer_Base))]
public class FsHoldHelper : MonoBehaviour
{
	[Token(Token = "0x40007E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private FlatScreenPlayer player;

	[Token(Token = "0x40007E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private HolderPlayer_Base holder;

	[Token(Token = "0x600093D")]
	[Address(RVA = "0x1053624", Offset = "0x1053624", VA = "0x1053624")]
	private void Awake()
	{
	}

	[Token(Token = "0x600093E")]
	[Address(RVA = "0x10536B4", Offset = "0x10536B4", VA = "0x10536B4")]
	private void AdjustAttachPointForHoldable(PhysicsHoldable physicsHoldable, int slotId, int orientationId)
	{
	}

	[Token(Token = "0x600093F")]
	[Address(RVA = "0x1053814", Offset = "0x1053814", VA = "0x1053814")]
	public void AdjustTransformForPickUp(IHoldable iHoldable, int slotId)
	{
	}

	[Token(Token = "0x6000940")]
	[Address(RVA = "0x10539E8", Offset = "0x10539E8", VA = "0x10539E8")]
	public void AdjustTransformAfterDeserialisation(PhysicsHoldable physicsHoldable, int slotId, int orientationId)
	{
	}

	[Token(Token = "0x6000941")]
	[Address(RVA = "0x10539EC", Offset = "0x10539EC", VA = "0x10539EC")]
	public int GetCurrentOrientationId(PhysicsHoldable physicsHoldable, int slotId)
	{
		return default(int);
	}

	[Token(Token = "0x6000942")]
	[Address(RVA = "0x104D7E4", Offset = "0x104D7E4", VA = "0x104D7E4")]
	public void AdjustTransformsForSwapInHands(int slotOne, int slotTwo)
	{
	}

	[Token(Token = "0x6000943")]
	[Address(RVA = "0x1053A44", Offset = "0x1053A44", VA = "0x1053A44")]
	public FsHoldHelper()
	{
	}
}
[Token(Token = "0x2000172")]
[RemoveOnVr]
public class FsInspectHandler : FsRotatableBaseHandler, IFsInspectHandler, IUpdatable
{
	[Token(Token = "0x2000173")]
	private enum Phase
	{
		[Token(Token = "0x40007FC")]
		NotActive,
		[Token(Token = "0x40007FD")]
		Starting,
		[Token(Token = "0x40007FE")]
		Active,
		[Token(Token = "0x40007FF")]
		Finishing
	}

	[Token(Token = "0x2000174")]
	[CompilerGenerated]
	private sealed class <LerpToSlot>d__30 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000800")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000801")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000802")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public FsInspectHandler <>4__this;

		[Token(Token = "0x4000803")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform targetSlot;

		[Token(Token = "0x4000804")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float duration;

		[Token(Token = "0x4000805")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public CallbackVoid onFinishedCallback;

		[Token(Token = "0x4000806")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Vector3 <primaryStartingLocalPosition>5__2;

		[Token(Token = "0x4000807")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private Vector3 <secondaryStartingLocalPosition>5__3;

		[Token(Token = "0x4000808")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Quaternion <startingLocalOrientation>5__4;

		[Token(Token = "0x4000809")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Quaternion <primaryTargetLocalOrientation>5__5;

		[Token(Token = "0x400080A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Vector3 <primaryTargetLocalPosition>5__6;

		[Token(Token = "0x400080B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private Vector3 <secondaryTargetLocalPosition>5__7;

		[Token(Token = "0x400080C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private float <targetFade>5__8;

		[Token(Token = "0x400080D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		private float <startFade>5__9;

		[Token(Token = "0x400080E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private float <startTime>5__10;

		[Token(Token = "0x400080F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		private float <remainingDuration>5__11;

		[Token(Token = "0x170000A3")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000951")]
			[Address(RVA = "0x1054CA0", Offset = "0x1054CA0", VA = "0x1054CA0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000A4")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000953")]
			[Address(RVA = "0x1054CE8", Offset = "0x1054CE8", VA = "0x1054CE8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600094E")]
		[Address(RVA = "0x1054474", Offset = "0x1054474", VA = "0x1054474")]
		[DebuggerHidden]
		public <LerpToSlot>d__30(int <>1__state)
		{
		}

		[Token(Token = "0x600094F")]
		[Address(RVA = "0x1054524", Offset = "0x1054524", VA = "0x1054524", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000950")]
		[Address(RVA = "0x1054528", Offset = "0x1054528", VA = "0x1054528", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000952")]
		[Address(RVA = "0x1054CA8", Offset = "0x1054CA8", VA = "0x1054CA8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40007E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject backgroundGo;

	[Token(Token = "0x40007E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Transform inspectSlot;

	[Token(Token = "0x40007E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Transform primaryOrientationPivot;

	[Token(Token = "0x40007E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Transform secondaryOrientationPivot;

	[Token(Token = "0x40007EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private Transform primarySlot;

	[Token(Token = "0x40007EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private Transform holsterSlot;

	[Token(Token = "0x40007EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private float fade;

	[Token(Token = "0x40007ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private DiegeticTextDetector diegeticTextDetector;

	[Token(Token = "0x40007EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private FsInspectDiegeticTextDetector fsInspectDiegeticTextDetector;

	[Token(Token = "0x40007EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private float gamepadSensitivity;

	[Token(Token = "0x40007F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly int FADE_PARAM;

	[Token(Token = "0x40007F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private MeshRenderer bgMeshRenderer;

	[Token(Token = "0x40007F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Material bgMaterial;

	[Token(Token = "0x40007F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private IEnumerator enumarator;

	[Token(Token = "0x40007F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Vector3 primarySlotToInspectSlotPosition;

	[Token(Token = "0x40007F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private Quaternion primarySlotToInspectSlotRotation;

	[Token(Token = "0x40007F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	private Phase phase;

	[Token(Token = "0x40007F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private FlatScreenPlayer flatScreenPlayer;

	[Token(Token = "0x40007F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private bool wasPressed;

	[Token(Token = "0x40007FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private PhysicsHoldable currentHoldable;

	[Token(Token = "0x170000A2")]
	public bool RestrictMovement
	{
		[Token(Token = "0x6000945")]
		[Address(RVA = "0x1053A58", Offset = "0x1053A58", VA = "0x1053A58")]
		[CompilerGenerated]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000944")]
		[Address(RVA = "0x1053A4C", Offset = "0x1053A4C", VA = "0x1053A4C")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x6000946")]
	[Address(RVA = "0x1053A60", Offset = "0x1053A60", VA = "0x1053A60")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000947")]
	[Address(RVA = "0x1053C64", Offset = "0x1053C64", VA = "0x1053C64")]
	public void ResetOrientation()
	{
	}

	[Token(Token = "0x6000948")]
	[Address(RVA = "0x1053CC4", Offset = "0x1053CC4", VA = "0x1053CC4")]
	public void BeginInspect(PhysicsHoldable holdable, bool restrictMovement)
	{
	}

	[Token(Token = "0x6000949")]
	[Address(RVA = "0x1053E28", Offset = "0x1053E28", VA = "0x1053E28")]
	public void EndInspect(CallbackVoid onFinishedCallback)
	{
	}

	[Token(Token = "0x600094A")]
	[Address(RVA = "0x1053EC4", Offset = "0x1053EC4", VA = "0x1053EC4", Slot = "4")]
	public void OnUpdate(float dt)
	{
	}

	[Token(Token = "0x600094B")]
	[Address(RVA = "0x1053D74", Offset = "0x1053D74", VA = "0x1053D74")]
	[IteratorStateMachine(typeof(<LerpToSlot>d__30))]
	private IEnumerator LerpToSlot(Transform targetSlot, [Optional] CallbackVoid onFinishedCallback, float duration = 0.1f)
	{
		return null;
	}

	[Token(Token = "0x600094C")]
	[Address(RVA = "0x105449C", Offset = "0x105449C", VA = "0x105449C")]
	public FsInspectHandler()
	{
	}
}
[Token(Token = "0x2000175")]
[RemoveOnVr]
public class FsPeekHandler : MonoBehaviour, IFsPeekHandler, IUpdatable
{
	[Token(Token = "0x2000176")]
	public enum Phase
	{
		[Token(Token = "0x400081F")]
		NotActive,
		[Token(Token = "0x4000820")]
		Starting,
		[Token(Token = "0x4000821")]
		Active,
		[Token(Token = "0x4000822")]
		Finishing
	}

	[Token(Token = "0x2000177")]
	[CompilerGenerated]
	private sealed class <TransitionIn>d__25 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000823")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000824")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000825")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public FsPeekHandler <>4__this;

		[Token(Token = "0x4000826")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Vector3 <primarySlotPosition>5__2;

		[Token(Token = "0x4000827")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private Vector3 <secondarySlotPosition>5__3;

		[Token(Token = "0x4000828")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Vector3 <startPosition>5__4;

		[Token(Token = "0x4000829")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private Vector3 <endPosition>5__5;

		[Token(Token = "0x400082A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Quaternion <startRotation>5__6;

		[Token(Token = "0x400082B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Quaternion <endRotation>5__7;

		[Token(Token = "0x400082C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private float <startTime>5__8;

		[Token(Token = "0x170000A7")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000962")]
			[Address(RVA = "0x1055568", Offset = "0x1055568", VA = "0x1055568", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000A8")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000964")]
			[Address(RVA = "0x10555B0", Offset = "0x10555B0", VA = "0x10555B0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600095F")]
		[Address(RVA = "0x10550F4", Offset = "0x10550F4", VA = "0x10550F4")]
		[DebuggerHidden]
		public <TransitionIn>d__25(int <>1__state)
		{
		}

		[Token(Token = "0x6000960")]
		[Address(RVA = "0x1055158", Offset = "0x1055158", VA = "0x1055158", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000961")]
		[Address(RVA = "0x105515C", Offset = "0x105515C", VA = "0x105515C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000963")]
		[Address(RVA = "0x1055570", Offset = "0x1055570", VA = "0x1055570", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000178")]
	[CompilerGenerated]
	private sealed class <TransitionOut>d__26 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400082D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400082E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400082F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public FsPeekHandler <>4__this;

		[Token(Token = "0x4000830")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public CallbackVoid onFinishedCallback;

		[Token(Token = "0x4000831")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Vector3 <primarySlotLocalPosition>5__2;

		[Token(Token = "0x4000832")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private Vector3 <secondarySlotLocalPosition>5__3;

		[Token(Token = "0x4000833")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Vector3 <originPosition>5__4;

		[Token(Token = "0x4000834")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private Quaternion <originRotation>5__5;

		[Token(Token = "0x4000835")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private float <startTime>5__6;

		[Token(Token = "0x170000A9")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000968")]
			[Address(RVA = "0x105597C", Offset = "0x105597C", VA = "0x105597C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000AA")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600096A")]
			[Address(RVA = "0x10559C4", Offset = "0x10559C4", VA = "0x10559C4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000965")]
		[Address(RVA = "0x105511C", Offset = "0x105511C", VA = "0x105511C")]
		[DebuggerHidden]
		public <TransitionOut>d__26(int <>1__state)
		{
		}

		[Token(Token = "0x6000966")]
		[Address(RVA = "0x10555B8", Offset = "0x10555B8", VA = "0x10555B8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000967")]
		[Address(RVA = "0x10555BC", Offset = "0x10555BC", VA = "0x10555BC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000969")]
		[Address(RVA = "0x1055984", Offset = "0x1055984", VA = "0x1055984", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000810")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private float transitionDuration;

	[Token(Token = "0x4000811")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Transform primarySlot;

	[Token(Token = "0x4000812")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Transform secondarySlot;

	[Token(Token = "0x4000813")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private FlatScreenPlayer flatScreenPlayer;

	[Token(Token = "0x4000814")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private FsCameraDetacher fsCameraDetacher;

	[Token(Token = "0x4000815")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Transform peekCameraParentTransform;

	[Token(Token = "0x4000816")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Transform holsterProxy;

	[Token(Token = "0x4000817")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private IEnumerator enumarator;

	[Token(Token = "0x4000818")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Vector3 primarySlotOriginalLocalPosition;

	[Token(Token = "0x4000819")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private Vector3 secondarySlotOriginalLocalPosition;

	[Token(Token = "0x400081A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Vector3 peekCameraParentOriginalLocalPosition;

	[Token(Token = "0x400081B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private Quaternion peekCameraParentOriginalLocalRotation;

	[Token(Token = "0x170000A5")]
	public Phase CurrentPhase
	{
		[Token(Token = "0x6000955")]
		[Address(RVA = "0x1054CF8", Offset = "0x1054CF8", VA = "0x1054CF8")]
		[CompilerGenerated]
		get
		{
			return default(Phase);
		}
		[Token(Token = "0x6000954")]
		[Address(RVA = "0x1054CF0", Offset = "0x1054CF0", VA = "0x1054CF0")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x170000A6")]
	public bool RestrictMovement
	{
		[Token(Token = "0x6000957")]
		[Address(RVA = "0x1054D0C", Offset = "0x1054D0C", VA = "0x1054D0C")]
		[CompilerGenerated]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000956")]
		[Address(RVA = "0x1054D00", Offset = "0x1054D00", VA = "0x1054D00")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x6000958")]
	[Address(RVA = "0x1054D14", Offset = "0x1054D14", VA = "0x1054D14")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000959")]
	[Address(RVA = "0x1054DB0", Offset = "0x1054DB0", VA = "0x1054DB0")]
	public void BeginPeek(Transform peekCameraParentTransform, Transform holsterProxy)
	{
	}

	[Token(Token = "0x600095A")]
	[Address(RVA = "0x1054EC8", Offset = "0x1054EC8", VA = "0x1054EC8")]
	public void EndPeek(CallbackVoid onFinishedCallback)
	{
	}

	[Token(Token = "0x600095B")]
	[Address(RVA = "0x1054FA4", Offset = "0x1054FA4", VA = "0x1054FA4", Slot = "4")]
	public void OnUpdate(float dt)
	{
	}

	[Token(Token = "0x600095C")]
	[Address(RVA = "0x1054E54", Offset = "0x1054E54", VA = "0x1054E54")]
	[IteratorStateMachine(typeof(<TransitionIn>d__25))]
	private IEnumerator TransitionIn()
	{
		return null;
	}

	[Token(Token = "0x600095D")]
	[Address(RVA = "0x1054F14", Offset = "0x1054F14", VA = "0x1054F14")]
	[IteratorStateMachine(typeof(<TransitionOut>d__26))]
	private IEnumerator TransitionOut(CallbackVoid onFinishedCallback)
	{
		return null;
	}

	[Token(Token = "0x600095E")]
	[Address(RVA = "0x1055144", Offset = "0x1055144", VA = "0x1055144")]
	public FsPeekHandler()
	{
	}
}
[Token(Token = "0x2000179")]
public class FsPlaceBoundaryHandler
{
	[Token(Token = "0x4000836")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private FsPlaceHandler fsPlaceHandler;

	[Token(Token = "0x4000837")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Transform interactorTransform;

	[Token(Token = "0x4000838")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Transform cameraTransform;

	[Token(Token = "0x4000839")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Transform cameraJointTransform;

	[Token(Token = "0x400083A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float jointToCameraDistance;

	[Token(Token = "0x600096B")]
	[Address(RVA = "0x10559CC", Offset = "0x10559CC", VA = "0x10559CC")]
	public FsPlaceBoundaryHandler(FsPlaceHandler fsPlaceHandlerToSet)
	{
	}

	[Token(Token = "0x600096C")]
	[Address(RVA = "0x1055B70", Offset = "0x1055B70", VA = "0x1055B70")]
	private void CalculateCameraJointCentralPosition(out Vector3 cameraJointCentralPosition)
	{
	}

	[Token(Token = "0x600096D")]
	[Address(RVA = "0x1055C48", Offset = "0x1055C48", VA = "0x1055C48")]
	private void CalculateEllipseProperties(Vector3 cameraJointCentralPosition, Vector3 direction, float maxPlaceDistance, out MathUtils.Ellipse2d ellipse2d)
	{
	}

	[Token(Token = "0x600096E")]
	[Address(RVA = "0x1055DC8", Offset = "0x1055DC8", VA = "0x1055DC8")]
	private void CalculatePropertiesInLocalSpaceOfEllipse(Vector3 origin, Vector3 direction, out Vector2 origin_v_ls, out Vector2 direction_v_ls)
	{
	}

	[Token(Token = "0x600096F")]
	[Address(RVA = "0x1055E3C", Offset = "0x1055E3C", VA = "0x1055E3C")]
	public float GetCurrentDistanceFromCameraToPlaceBoundary(float maxPlaceDistance)
	{
		return default(float);
	}

	[Token(Token = "0x6000970")]
	[Address(RVA = "0x1056178", Offset = "0x1056178", VA = "0x1056178")]
	public bool IsPointWithinPlaceBoundary(Vector3 candidatePoint, float maxPlaceDistance)
	{
		return default(bool);
	}
}
[Token(Token = "0x200017A")]
[RemoveOnVr]
public class FsPlaceHandler : FsRotatableBaseHandler, IFsPlaceHandler, IUpdatable, IFsProjectionColliderTriggerHandler
{
	[Token(Token = "0x200017B")]
	public enum EPlacingOutcome
	{
		[Token(Token = "0x4000863")]
		Unknown,
		[Token(Token = "0x4000864")]
		Drop,
		[Token(Token = "0x4000865")]
		PlaceOk,
		[Token(Token = "0x4000866")]
		PlaceInvalid,
		[Token(Token = "0x4000867")]
		Dock,
		[Token(Token = "0x4000868")]
		Count
	}

	[Token(Token = "0x400083B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject proxy;

	[Token(Token = "0x400083C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Material okMaterial;

	[Token(Token = "0x400083D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Material invalidMaterial;

	[Token(Token = "0x400083E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private GameObject[] colliderLevelRoots;

	[Token(Token = "0x400083F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private Transform primaryOrientationPivot;

	[Token(Token = "0x4000840")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private MeshFilter meshFilter;

	[Token(Token = "0x4000841")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private MeshRenderer meshRenderer;

	[Token(Token = "0x4000842")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private int defaultLayerId;

	[Token(Token = "0x4000843")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private int holdableItemLayerId;

	[Token(Token = "0x4000844")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private int heldPhysicsHoldableLayerId;

	[Token(Token = "0x4000845")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private int hologramLayerId;

	[Token(Token = "0x4000846")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private GameObject projectedGo;

	[Token(Token = "0x4000847")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private GameObject meshGo;

	[Token(Token = "0x4000848")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Transform projectionOrientationPivot;

	[Token(Token = "0x4000849")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private ControllerBaseInteractor interactor;

	[Token(Token = "0x400084A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private LayerMask raycastLayerMask;

	[Token(Token = "0x400084B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private bool projectionRunning;

	[Token(Token = "0x400084C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x85")]
	private bool oneFixedUpdatePassed;

	[Token(Token = "0x400084D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private List<GameObject>[] copiedColliderGameObjectsPerLevel;

	[Token(Token = "0x400084E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private List<GameObject> copiedColliderGoSources;

	[Token(Token = "0x400084F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private List<InteractableBase> dockCandidates;

	[Token(Token = "0x4000850")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private Vector3[] colliderRootOffsets;

	[Token(Token = "0x4000851")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private int[] collidingInstancesCount;

	[Token(Token = "0x4000852")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private FsPlaceBoundaryHandler fsPlaceBoundaryHandler;

	[Token(Token = "0x4000853")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private DockInteraction lastHighlightedDockInteraction;

	[Token(Token = "0x4000854")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private float defaultPlaceDistance;

	[Token(Token = "0x4000855")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	private float raycastVerticalOffset;

	[Token(Token = "0x4000856")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private int materialCount;

	[Token(Token = "0x4000857")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	private bool wasRotationButtonPressed;

	[Token(Token = "0x4000858")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private FlatScreenPlayer flatScreenPlayer;

	[Token(Token = "0x4000859")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private PhysicsHoldable currentHoldable;

	[Token(Token = "0x400085A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private InteractableBase currentInteractable;

	[Token(Token = "0x400085B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private List<Collider> tempColliders;

	[Token(Token = "0x400085C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private bool onlyPlaceInDocks;

	[Token(Token = "0x400085D")]
	private const float offsetAboveSurface = 0.001f;

	[Token(Token = "0x400085E")]
	private const float kGamepadSensitivity = 500f;

	[Token(Token = "0x170000AB")]
	public EPlacingOutcome PlacingOutcome
	{
		[Token(Token = "0x6000971")]
		[Address(RVA = "0x105642C", Offset = "0x105642C", VA = "0x105642C")]
		[CompilerGenerated]
		get
		{
			return default(EPlacingOutcome);
		}
		[Token(Token = "0x6000972")]
		[Address(RVA = "0x1056434", Offset = "0x1056434", VA = "0x1056434")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x170000AC")]
	public DockInteraction SelectedDockInteraction
	{
		[Token(Token = "0x6000973")]
		[Address(RVA = "0x105643C", Offset = "0x105643C", VA = "0x105643C")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x6000974")]
		[Address(RVA = "0x1056444", Offset = "0x1056444", VA = "0x1056444")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x170000AD")]
	public bool RestrictMovement
	{
		[Token(Token = "0x6000976")]
		[Address(RVA = "0x1056458", Offset = "0x1056458", VA = "0x1056458")]
		[CompilerGenerated]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000975")]
		[Address(RVA = "0x105644C", Offset = "0x105644C", VA = "0x105644C")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x6000977")]
	[Address(RVA = "0x1056460", Offset = "0x1056460", VA = "0x1056460")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000978")]
	[Address(RVA = "0x1056B24", Offset = "0x1056B24", VA = "0x1056B24")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000979")]
	[Address(RVA = "0x1056B38", Offset = "0x1056B38", VA = "0x1056B38", Slot = "6")]
	public void IncreaseCollidingInstancesCountForLevel(int level)
	{
	}

	[Token(Token = "0x600097A")]
	[Address(RVA = "0x1056B70", Offset = "0x1056B70", VA = "0x1056B70", Slot = "7")]
	public void DecreaseCollidingInstancesCountForLevel(int level)
	{
	}

	[Token(Token = "0x600097B")]
	[Address(RVA = "0x1056BA8", Offset = "0x1056BA8", VA = "0x1056BA8")]
	public void GetProjectedGoPosRot(out Vector3 position, out Quaternion rotation)
	{
	}

	[Token(Token = "0x600097C")]
	[Address(RVA = "0x1056C14", Offset = "0x1056C14", VA = "0x1056C14")]
	private void RotateProxyToKeepYUp()
	{
	}

	[Token(Token = "0x600097D")]
	[Address(RVA = "0x1056FA8", Offset = "0x1056FA8", VA = "0x1056FA8")]
	public void BeginHoloProjection(PhysicsHoldable holdable, bool onlyPlaceInDocks)
	{
	}

	[Token(Token = "0x600097E")]
	[Address(RVA = "0x1058DE0", Offset = "0x1058DE0", VA = "0x1058DE0")]
	public void EndHoloProjection()
	{
	}

	[Token(Token = "0x600097F")]
	[Address(RVA = "0x1058F88", Offset = "0x1058F88", VA = "0x1058F88", Slot = "5")]
	public void OnUpdate(float dt)
	{
	}

	[Token(Token = "0x6000980")]
	[Address(RVA = "0x1058FCC", Offset = "0x1058FCC", VA = "0x1058FCC")]
	private void SetMaterial(bool valid)
	{
	}

	[Token(Token = "0x6000981")]
	[Address(RVA = "0x10590A8", Offset = "0x10590A8", VA = "0x10590A8")]
	private void SetLayer(bool valid)
	{
	}

	[Token(Token = "0x6000982")]
	[Address(RVA = "0x1057FD0", Offset = "0x1057FD0", VA = "0x1057FD0")]
	private void UpdateProxy()
	{
	}

	[Token(Token = "0x6000983")]
	[Address(RVA = "0x1057C1C", Offset = "0x1057C1C", VA = "0x1057C1C")]
	private float DetermineVerticalOffset()
	{
		return default(float);
	}

	[Token(Token = "0x6000984")]
	[Address(RVA = "0x105913C", Offset = "0x105913C", VA = "0x105913C", Slot = "4")]
	public bool IsPointWithinPlaceBoundary(Vector3 candidatePoint, float maxPlaceDistance)
	{
		return default(bool);
	}

	[Token(Token = "0x6000985")]
	[Address(RVA = "0x1059154", Offset = "0x1059154", VA = "0x1059154")]
	public FsPlaceHandler()
	{
	}
}
[Token(Token = "0x200017C")]
public class FsRotatableBaseHandler : MonoBehaviour
{
	[Token(Token = "0x6000986")]
	[Address(RVA = "0x1054370", Offset = "0x1054370", VA = "0x1054370")]
	protected Vector2 ReadInspectActionInput(float deltaTime, float gamepadSensitivity)
	{
		return default(Vector2);
	}

	[Token(Token = "0x6000987")]
	[Address(RVA = "0x10544B4", Offset = "0x10544B4", VA = "0x10544B4")]
	public FsRotatableBaseHandler()
	{
	}
}
[Token(Token = "0x200017D")]
[RemoveOnVr]
[RequireComponent(typeof(HolderPlayer_Base))]
[RequireComponent(typeof(FsHoldHelper))]
public class FsSwapInHandsHandler : UpdatableMonoBehaviour
{
	[Token(Token = "0x4000869")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Transform intermediaryStop;

	[Token(Token = "0x400086A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private float swapDuration;

	[Token(Token = "0x400086B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Holder holder;

	[Token(Token = "0x400086C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Holdable activeHoldable;

	[Token(Token = "0x400086D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private CallbackVoid onFinishedCallback;

	[Token(Token = "0x400086E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private UnityEvent onSwapped;

	[Token(Token = "0x6000988")]
	[Address(RVA = "0x10592A4", Offset = "0x10592A4", VA = "0x10592A4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000989")]
	[Address(RVA = "0x105930C", Offset = "0x105930C", VA = "0x105930C")]
	public void StartMotion(Holdable holdable, CallbackVoid onFinishedCallback)
	{
	}

	[Token(Token = "0x600098A")]
	[Address(RVA = "0x10594F0", Offset = "0x10594F0", VA = "0x10594F0", Slot = "7")]
	public override void OnUpdate(float dt)
	{
	}

	[Token(Token = "0x600098B")]
	[Address(RVA = "0x10595C8", Offset = "0x10595C8", VA = "0x10595C8")]
	public FsSwapInHandsHandler()
	{
	}
}
[Token(Token = "0x200017E")]
public class Fuse : MonoBehaviour
{
	[Token(Token = "0x400086F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private int _resistance;

	[Token(Token = "0x170000AE")]
	public int Resistance
	{
		[Token(Token = "0x600098C")]
		[Address(RVA = "0x10595DC", Offset = "0x10595DC", VA = "0x10595DC")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x600098D")]
	[Address(RVA = "0x10595E4", Offset = "0x10595E4", VA = "0x10595E4")]
	public Fuse()
	{
	}
}
[Token(Token = "0x200017F")]
public class FuseBox : MonoBehaviour, IPostDeserialiseNotified
{
	[Token(Token = "0x4000870")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private UnityEvent _OnFuseBoxActivated;

	[Token(Token = "0x4000871")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private UnityEvent _OnFuseBoxFailedActivation;

	[Token(Token = "0x4000872")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private ParticleSystem[] _sparkParticles;

	[Token(Token = "0x4000873")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private int _totalResistanceNeeded;

	[Token(Token = "0x4000874")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[SerializeField]
	private EventReference _sparksEventReference;

	[Token(Token = "0x4000875")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private List<PhysicsHoldableDock> _fuseDocks;

	[Token(Token = "0x4000876")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private List<Fuse> _fuses;

	[Token(Token = "0x600098E")]
	[Address(RVA = "0x10595EC", Offset = "0x10595EC", VA = "0x10595EC")]
	private void Awake()
	{
	}

	[Token(Token = "0x600098F")]
	[Address(RVA = "0x1059854", Offset = "0x1059854", VA = "0x1059854", Slot = "4")]
	public void OnPostDeserialise()
	{
	}

	[Token(Token = "0x6000990")]
	[Address(RVA = "0x1059A00", Offset = "0x1059A00", VA = "0x1059A00")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000991")]
	[Address(RVA = "0x1059C98", Offset = "0x1059C98", VA = "0x1059C98")]
	private bool OnCanDockFuseCallback(PhysicsHoldableDock dock, PhysicsHoldable dockable)
	{
		return default(bool);
	}

	[Token(Token = "0x6000992")]
	[Address(RVA = "0x1059D1C", Offset = "0x1059D1C", VA = "0x1059D1C")]
	private bool OnCanUndockFuseCallback(PhysicsHoldableDock dock, PhysicsHoldable dockable)
	{
		return default(bool);
	}

	[Token(Token = "0x6000993")]
	[Address(RVA = "0x1059D24", Offset = "0x1059D24", VA = "0x1059D24")]
	private void OnFuseDockedCallback(PhysicsHoldableDock dock, PhysicsHoldable docked)
	{
	}

	[Token(Token = "0x6000994")]
	[Address(RVA = "0x1059DF4", Offset = "0x1059DF4", VA = "0x1059DF4")]
	private void OnFuseUndockedCallback(PhysicsHoldableDock dock, PhysicsHoldable docked)
	{
	}

	[Token(Token = "0x6000995")]
	[Address(RVA = "0x1059E74", Offset = "0x1059E74", VA = "0x1059E74")]
	public void ActivateFuseBox()
	{
	}

	[Token(Token = "0x6000996")]
	[Address(RVA = "0x1059FD0", Offset = "0x1059FD0", VA = "0x1059FD0")]
	public bool AllFusesConnected()
	{
		return default(bool);
	}

	[Token(Token = "0x6000997")]
	[Address(RVA = "0x105A20C", Offset = "0x105A20C", VA = "0x105A20C")]
	public bool FuseResistanceValid()
	{
		return default(bool);
	}

	[Token(Token = "0x6000998")]
	[Address(RVA = "0x105A30C", Offset = "0x105A30C", VA = "0x105A30C")]
	public FuseBox()
	{
	}
}
[Token(Token = "0x2000180")]
public class HandheldRadio : MonoBehaviour, IInitialisable, ISceneReferrable, ISerialisable, IDeserialisable
{
	[Token(Token = "0x2000181")]
	private static class Keys
	{
		[Token(Token = "0x400087B")]
		public const string IsOn = "is_on";
	}

	[Token(Token = "0x4000877")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private OccludableAudioEmitter audioEmitter;

	[Token(Token = "0x4000878")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private HandheldRadioStaticData staticData;

	[Token(Token = "0x4000879")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool isOn;

	[Token(Token = "0x400087A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private PARAMETER_DESCRIPTION onOffParameterDescription;

	[Token(Token = "0x170000AF")]
	public string typeId
	{
		[Token(Token = "0x600099D")]
		[Address(RVA = "0x105A5D0", Offset = "0x105A5D0", VA = "0x105A5D0", Slot = "7")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000999")]
	[Address(RVA = "0x105A3EC", Offset = "0x105A3EC", VA = "0x105A3EC", Slot = "4")]
	public bool Initialise()
	{
		return default(bool);
	}

	[Token(Token = "0x600099A")]
	[Address(RVA = "0x105A4CC", Offset = "0x105A4CC", VA = "0x105A4CC")]
	public void Toggle()
	{
	}

	[Token(Token = "0x600099B")]
	[Address(RVA = "0x105A50C", Offset = "0x105A50C", VA = "0x105A50C")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600099C")]
	[Address(RVA = "0x105A598", Offset = "0x105A598", VA = "0x105A598")]
	private void OnActivated()
	{
	}

	[Token(Token = "0x600099E")]
	[Address(RVA = "0x105A610", Offset = "0x105A610", VA = "0x105A610", Slot = "6")]
	public bool Serialise(FlexBufferBuilder builder, ISceneObjectReferenceSerialiser objectSerialiser)
	{
		return default(bool);
	}

	[Token(Token = "0x600099F")]
	[Address(RVA = "0x105A674", Offset = "0x105A674", VA = "0x105A674", Slot = "8")]
	public bool Deserialise(FlexBuffer.Map root, ISceneObjectReferenceDeserialiser objectDeserialiser)
	{
		return default(bool);
	}

	[Token(Token = "0x60009A0")]
	[Address(RVA = "0x105A71C", Offset = "0x105A71C", VA = "0x105A71C")]
	public HandheldRadio()
	{
	}
}
[Token(Token = "0x2000182")]
[CreateAssetMenu(menuName = "Script Static Data/HandheldRadioStaticData", fileName = "HandheldRadioStaticData")]
public class HandheldRadioStaticData : ScriptableObject
{
	[Token(Token = "0x400087C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string onOffParameterName;

	[Token(Token = "0x60009A1")]
	[Address(RVA = "0x105A724", Offset = "0x105A724", VA = "0x105A724")]
	public HandheldRadioStaticData()
	{
	}
}
[Token(Token = "0x2000183")]
public interface IInteractionHighlightOverridable
{
	[Token(Token = "0x170000B0")]
	InteractableBase InteractableToHighlightOverride
	{
		[Token(Token = "0x60009A2")]
		get;
	}
}
[Token(Token = "0x2000184")]
[CreateAssetMenu(fileName = "Assets/_Programming/Data/LPRecords/LPRecordProperties", menuName = "LP Records/LP Record Properties", order = 0)]
public class LPRecordProperties : ScriptableObject
{
	[Token(Token = "0x400087D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string title;

	[Token(Token = "0x400087E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string id;

	[Token(Token = "0x400087F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject sleevePrefab;

	[Token(Token = "0x4000880")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Material recordMaterial;

	[Token(Token = "0x4000881")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private EventReference _fmodEventReference;

	[Token(Token = "0x4000882")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public LocalizedString _diegeticTextSide1;

	[Token(Token = "0x4000883")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public LocalizedString _diegeticTextSide2;

	[Token(Token = "0x170000B1")]
	public EventReference content
	{
		[Token(Token = "0x60009A3")]
		[Address(RVA = "0x105A72C", Offset = "0x105A72C", VA = "0x105A72C")]
		get
		{
			return default(EventReference);
		}
	}

	[Token(Token = "0x60009A4")]
	[Address(RVA = "0x105A738", Offset = "0x105A738", VA = "0x105A738")]
	public LPRecordProperties()
	{
	}
}
[Token(Token = "0x2000185")]
[CreateAssetMenu(fileName = "Assets/_Programming/Data/LPRecords/LPRecordsList", menuName = "LP Records/LP Records List", order = 0)]
public class LPRecordsList : ScriptableObject
{
	[Token(Token = "0x4000884")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public LPRecordProperties[] allRecords;

	[Token(Token = "0x60009A5")]
	[Address(RVA = "0x105A7B0", Offset = "0x105A7B0", VA = "0x105A7B0")]
	public LPRecordsList()
	{
	}
}
[Token(Token = "0x2000186")]
public class NumericKeypad : MonoBehaviour, IInitialisable, ISceneReferrable, ISerialisable, IDeserialisable
{
	[Token(Token = "0x2000187")]
	private static class Keys
	{
		[Token(Token = "0x400088D")]
		public const string SafeKeypadEnteredPinState = "safe_keypad_entered_pin_state";
	}

	[Token(Token = "0x4000885")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private string expectedPinCode;

	[Token(Token = "0x4000886")]
	private const int cNumberOfKeys = 10;

	[Token(Token = "0x4000887")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int expectedPinCodeValue;

	[Token(Token = "0x4000888")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private int enteredPin;

	[Token(Token = "0x4000889")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private byte enteredPinLength;

	[Token(Token = "0x400088A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private List<CallbackVoid> correctPinCallbackList;

	[Token(Token = "0x400088B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private List<CallbackVoid<int>> incorrectPinCallbackList;

	[Token(Token = "0x400088C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private List<CallbackVoid<int, int>> buttonPressedCallbackList;

	[Token(Token = "0x170000B2")]
	public string typeId
	{
		[Token(Token = "0x60009B1")]
		[Address(RVA = "0x105ADAC", Offset = "0x105ADAC", VA = "0x105ADAC", Slot = "7")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60009A6")]
	[Address(RVA = "0x105A814", Offset = "0x105A814", VA = "0x105A814")]
	public void RegisterCorrectPinCallback(CallbackVoid callback)
	{
	}

	[Token(Token = "0x60009A7")]
	[Address(RVA = "0x105A8C4", Offset = "0x105A8C4", VA = "0x105A8C4")]
	public void RegisterIncorrectPinCallback(CallbackVoid<int> callback)
	{
	}

	[Token(Token = "0x60009A8")]
	[Address(RVA = "0x105A974", Offset = "0x105A974", VA = "0x105A974")]
	public void RegisterButtonPressedCallback(CallbackVoid<int, int> callback)
	{
	}

	[Token(Token = "0x60009A9")]
	[Address(RVA = "0x105AA24", Offset = "0x105AA24", VA = "0x105AA24")]
	public void UnregisterCorrectPinCallback(CallbackVoid callback)
	{
	}

	[Token(Token = "0x60009AA")]
	[Address(RVA = "0x105AA7C", Offset = "0x105AA7C", VA = "0x105AA7C")]
	public void UnregisterIncorrectPinCallback(CallbackVoid<int> callback)
	{
	}

	[Token(Token = "0x60009AB")]
	[Address(RVA = "0x105AAD4", Offset = "0x105AAD4", VA = "0x105AAD4")]
	public void UnregisterButtonPressedCallback(CallbackVoid<int, int> callback)
	{
	}

	[Token(Token = "0x60009AC")]
	[Address(RVA = "0x105AB2C", Offset = "0x105AB2C", VA = "0x105AB2C")]
	private void Awake()
	{
	}

	[Token(Token = "0x60009AD")]
	[Address(RVA = "0x105AC54", Offset = "0x105AC54", VA = "0x105AC54", Slot = "4")]
	public bool Initialise()
	{
		return default(bool);
	}

	[Token(Token = "0x60009AE")]
	[Address(RVA = "0x105AC78", Offset = "0x105AC78", VA = "0x105AC78")]
	public void EnterNextDigit(int digit)
	{
	}

	[Token(Token = "0x60009AF")]
	[Address(RVA = "0x105ADA4", Offset = "0x105ADA4", VA = "0x105ADA4")]
	public int GetNumberOfEnteredKeys()
	{
		return default(int);
	}

	[Token(Token = "0x60009B0")]
	[Address(RVA = "0x105AD3C", Offset = "0x105AD3C", VA = "0x105AD3C")]
	private void EvaluatePin()
	{
	}

	[Token(Token = "0x60009B2")]
	[Address(RVA = "0x105ADEC", Offset = "0x105ADEC", VA = "0x105ADEC", Slot = "6")]
	public bool Serialise(FlexBufferBuilder builder, ISceneObjectReferenceSerialiser objectSerialiser)
	{
		return default(bool);
	}

	[Token(Token = "0x60009B3")]
	[Address(RVA = "0x105AE5C", Offset = "0x105AE5C", VA = "0x105AE5C", Slot = "8")]
	public bool Deserialise(FlexBuffer.Map root, ISceneObjectReferenceDeserialiser objectDeserialiser)
	{
		return default(bool);
	}

	[Token(Token = "0x60009B4")]
	[Address(RVA = "0x105AF20", Offset = "0x105AF20", VA = "0x105AF20")]
	public NumericKeypad()
	{
	}
}
[Token(Token = "0x2000188")]
public class Phonelines : MonoBehaviour
{
	[Token(Token = "0x60009B5")]
	[Address(RVA = "0x105BF28", Offset = "0x105BF28", VA = "0x105BF28")]
	public Phonelines()
	{
	}
}
[Token(Token = "0x2000189")]
public class Safe : MonoBehaviour, IInitialisable, ISceneReferrable, ISerialisable, IDeserialisable
{
	[Token(Token = "0x200018A")]
	private static class Keys
	{
		[Token(Token = "0x4000896")]
		public const string SafeLocked = "safe_locked";
	}

	[Token(Token = "0x400088E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private DoorOpenable door;

	[Token(Token = "0x400088F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private SafeLights lights;

	[Token(Token = "0x4000890")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private SafeAudio safeAudio;

	[Token(Token = "0x4000891")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private NumericKeypad keypad;

	[Token(Token = "0x4000892")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private InteractableDisabler keypadButtonColliderDissabler;

	[Token(Token = "0x4000893")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private bool locked;

	[Token(Token = "0x4000894")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private FactAsset onOpenedFact;

	[Token(Token = "0x4000895")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private int holyGrenadeCombination;

	[Token(Token = "0x170000B3")]
	public string typeId
	{
		[Token(Token = "0x60009BB")]
		[Address(RVA = "0x105C404", Offset = "0x105C404", VA = "0x105C404", Slot = "7")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60009B6")]
	[Address(RVA = "0x105BF30", Offset = "0x105BF30", VA = "0x105BF30", Slot = "4")]
	public bool Initialise()
	{
		return default(bool);
	}

	[Token(Token = "0x60009B7")]
	[Address(RVA = "0x105C0F8", Offset = "0x105C0F8", VA = "0x105C0F8")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60009B8")]
	[Address(RVA = "0x105C24C", Offset = "0x105C24C", VA = "0x105C24C")]
	private void OnButtonPressed(int key, int enteredCount)
	{
	}

	[Token(Token = "0x60009B9")]
	[Address(RVA = "0x105C26C", Offset = "0x105C26C", VA = "0x105C26C")]
	private void OnCorrectPinCodeEntered()
	{
	}

	[Token(Token = "0x60009BA")]
	[Address(RVA = "0x105C3BC", Offset = "0x105C3BC", VA = "0x105C3BC")]
	private void OnIncorrectPinCodeEntered(int incorrectPin)
	{
	}

	[Token(Token = "0x60009BC")]
	[Address(RVA = "0x105C444", Offset = "0x105C444", VA = "0x105C444", Slot = "6")]
	public bool Serialise(FlexBufferBuilder builder, ISceneObjectReferenceSerialiser objectSerialiser)
	{
		return default(bool);
	}

	[Token(Token = "0x60009BD")]
	[Address(RVA = "0x105C4A8", Offset = "0x105C4A8", VA = "0x105C4A8", Slot = "8")]
	public bool Deserialise(FlexBuffer.Map root, ISceneObjectReferenceDeserialiser objectDeserialiser)
	{
		return default(bool);
	}

	[Token(Token = "0x60009BE")]
	[Address(RVA = "0x105C550", Offset = "0x105C550", VA = "0x105C550")]
	public Safe()
	{
	}
}
[Token(Token = "0x200018B")]
public class SoundBoard : UpdatableMonoBehaviour, ISceneReferrable, ISerialisable, IDeserialisable, IPostDeserialiseNotified
{
	[Token(Token = "0x200018C")]
	public enum SoundboardGroups : byte
	{
		[Token(Token = "0x40008A8")]
		Group1,
		[Token(Token = "0x40008A9")]
		Group2,
		[Token(Token = "0x40008AA")]
		Group3
	}

	[Token(Token = "0x200018D")]
	private struct AudioResumeData
	{
		[Token(Token = "0x40008AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public byte buttonId;

		[Token(Token = "0x40008AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
		public byte group;

		[Token(Token = "0x40008AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public IAudioManager.ResumeData data;
	}

	[Token(Token = "0x200018E")]
	private static class Keys
	{
		[Token(Token = "0x40008AE")]
		public const string ActiveGroup = "group";

		[Token(Token = "0x40008AF")]
		public const string Playing = "playing";

		[Token(Token = "0x40008B0")]
		public const string ButtonId = "event";

		[Token(Token = "0x40008B1")]
		public const string GroupId = "group";

		[Token(Token = "0x40008B2")]
		public const string AudioEvent = "audio";
	}

	[Token(Token = "0x4000897")]
	private const int c_expectedButtonCount = 8;

	[Token(Token = "0x4000898")]
	private const int c_maxConcurrentSounds = 16;

	[Token(Token = "0x4000899")]
	private const bool c_callActive = true;

	[Token(Token = "0x400089A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private FactAsset factSoundboardPlayed;

	[Token(Token = "0x400089B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private FactAsset factCheckStory;

	[Token(Token = "0x400089C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private string factCheckStoryState;

	[Token(Token = "0x400089D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[Header("Achievements")]
	[SerializeField]
	private AchievementContainer soundBlasterMasterAchievement;

	[Token(Token = "0x400089E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private FactAsset isCallActive;

	[Token(Token = "0x400089F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private SoundboardGroups _soundboardGroup;

	[Token(Token = "0x40008A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private AudioHandle[] _audioHandles;

	[Token(Token = "0x40008A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private byte[] _buttonIds;

	[Token(Token = "0x40008A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private byte[] _groups;

	[Token(Token = "0x40008A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private int _nextIndex;

	[Token(Token = "0x40008A4")]
	private const byte c_invalidButtonId = byte.MaxValue;

	[Token(Token = "0x40008A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private AudioResumeData[] _audioResumeDatas;

	[Token(Token = "0x40008A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Dictionary<byte, EventReference> _buttonEventReferences;

	[Token(Token = "0x170000B4")]
	public string typeId
	{
		[Token(Token = "0x60009C9")]
		[Address(RVA = "0x105D864", Offset = "0x105D864", VA = "0x105D864", Slot = "13")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60009BF")]
	[Address(RVA = "0x105C558", Offset = "0x105C558", VA = "0x105C558")]
	public SoundBoard()
	{
	}

	[Token(Token = "0x60009C0")]
	[Address(RVA = "0x105C69C", Offset = "0x105C69C", VA = "0x105C69C")]
	public void RegisterSFXButton(byte buttonId, EventReference fmodEventReference)
	{
	}

	[Token(Token = "0x60009C1")]
	[Address(RVA = "0x105C748", Offset = "0x105C748", VA = "0x105C748", Slot = "7")]
	public override void OnUpdate(float dt)
	{
	}

	[Token(Token = "0x60009C2")]
	[Address(RVA = "0x105C8C8", Offset = "0x105C8C8", VA = "0x105C8C8", Slot = "10")]
	protected override void OnDestroy()
	{
	}

	[Token(Token = "0x60009C3")]
	[Address(RVA = "0x105CA44", Offset = "0x105CA44", VA = "0x105CA44")]
	public void EnableGroupOne()
	{
	}

	[Token(Token = "0x60009C4")]
	[Address(RVA = "0x105CA4C", Offset = "0x105CA4C", VA = "0x105CA4C")]
	public void EnableGroupTwo()
	{
	}

	[Token(Token = "0x60009C5")]
	[Address(RVA = "0x105CA58", Offset = "0x105CA58", VA = "0x105CA58")]
	public void EnableGroupThree()
	{
	}

	[Token(Token = "0x60009C6")]
	[Address(RVA = "0x105CA64", Offset = "0x105CA64", VA = "0x105CA64")]
	private int FindNextIndex(int current)
	{
		return default(int);
	}

	[Token(Token = "0x60009C7")]
	[Address(RVA = "0x105CB9C", Offset = "0x105CB9C", VA = "0x105CB9C")]
	public void PlaySFX(byte buttonId)
	{
	}

	[Token(Token = "0x60009C8")]
	[Address(RVA = "0x105D4A8", Offset = "0x105D4A8", VA = "0x105D4A8")]
	private void ResumeAudio()
	{
	}

	[Token(Token = "0x60009CA")]
	[Address(RVA = "0x105D8A4", Offset = "0x105D8A4", VA = "0x105D8A4", Slot = "12")]
	public bool Serialise(FlexBufferBuilder builder, ISceneObjectReferenceSerialiser objectSerialiser)
	{
		return default(bool);
	}

	[Token(Token = "0x60009CB")]
	[Address(RVA = "0x105DB6C", Offset = "0x105DB6C", VA = "0x105DB6C", Slot = "14")]
	public bool Deserialise(FlexBuffer.Map root, ISceneObjectReferenceDeserialiser objectDeserialiser)
	{
		return default(bool);
	}

	[Token(Token = "0x60009CC")]
	[Address(RVA = "0x105DFCC", Offset = "0x105DFCC", VA = "0x105DFCC", Slot = "15")]
	public void OnPostDeserialise()
	{
	}
}
[Token(Token = "0x200018F")]
public class SoundboardButton : MonoBehaviour
{
	[Token(Token = "0x40008B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private EventReference _fmodEventReference;

	[Token(Token = "0x40008B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private byte _id;

	[Token(Token = "0x40008B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private SoundBoard _soundboard;

	[Token(Token = "0x60009CD")]
	[Address(RVA = "0x105DFD0", Offset = "0x105DFD0", VA = "0x105DFD0")]
	private void Awake()
	{
	}

	[Token(Token = "0x60009CE")]
	[Address(RVA = "0x105E044", Offset = "0x105E044", VA = "0x105E044")]
	public void PlaySFX()
	{
	}

	[Token(Token = "0x60009CF")]
	[Address(RVA = "0x105E064", Offset = "0x105E064", VA = "0x105E064")]
	public SoundboardButton()
	{
	}
}
[Token(Token = "0x2000190")]
[RequireComponent(typeof(PhysicsHoldable))]
public class StickyNote : MonoBehaviour, IInitialisable
{
	[Token(Token = "0x40008B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private PhysicsHoldable physicsHoldable;

	[Token(Token = "0x40008B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool kinematicRequestSent;

	[Token(Token = "0x60009D0")]
	[Address(RVA = "0x105E06C", Offset = "0x105E06C", VA = "0x105E06C")]
	private void Start()
	{
	}

	[Token(Token = "0x60009D1")]
	[Address(RVA = "0x105E0EC", Offset = "0x105E0EC", VA = "0x105E0EC")]
	private void PopKinematicRequest()
	{
	}

	[Token(Token = "0x60009D2")]
	[Address(RVA = "0x105E120", Offset = "0x105E120", VA = "0x105E120")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60009D3")]
	[Address(RVA = "0x105E124", Offset = "0x105E124", VA = "0x105E124", Slot = "4")]
	public bool Initialise()
	{
		return default(bool);
	}

	[Token(Token = "0x60009D4")]
	[Address(RVA = "0x105E138", Offset = "0x105E138", VA = "0x105E138")]
	public StickyNote()
	{
	}
}
[Token(Token = "0x2000191")]
[RequireComponent(typeof(PhysicsHoldableDock))]
[RequireComponent(typeof(Holder))]
public class StickyNoteDock : MonoBehaviour
{
	[Token(Token = "0x40008B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private PhysicsHoldableDock dock;

	[Token(Token = "0x60009D5")]
	[Address(RVA = "0x105E140", Offset = "0x105E140", VA = "0x105E140")]
	private void Awake()
	{
	}

	[Token(Token = "0x60009D6")]
	[Address(RVA = "0x105E198", Offset = "0x105E198", VA = "0x105E198")]
	private void Start()
	{
	}

	[Token(Token = "0x60009D7")]
	[Address(RVA = "0x105E224", Offset = "0x105E224", VA = "0x105E224")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60009D8")]
	[Address(RVA = "0x105E2B0", Offset = "0x105E2B0", VA = "0x105E2B0")]
	private bool CanDock(PhysicsHoldableDock dock, PhysicsHoldable holdable)
	{
		return default(bool);
	}

	[Token(Token = "0x60009D9")]
	[Address(RVA = "0x105E338", Offset = "0x105E338", VA = "0x105E338")]
	public StickyNoteDock()
	{
	}
}
[Token(Token = "0x2000192")]
public class VinylPlayer : UpdatableMonoBehaviour, ISceneReferrable, ISerialisable, IDeserialisable, IPostDeserialiseNotified, IInsertableRestorer
{
	[Token(Token = "0x2000193")]
	private struct ResumeData
	{
		[Token(Token = "0x40008BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public bool wasPlaying;

		[Token(Token = "0x40008C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public IAudioManager.ResumeData audio;
	}

	[Token(Token = "0x2000194")]
	private static class Keys
	{
		[Token(Token = "0x40008C1")]
		public const string AudioEvent = "audio";

		[Token(Token = "0x40008C2")]
		public const string IsPlaying = "playing";
	}

	[Token(Token = "0x40008B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private UnityEvent _endOfVinylEvent;

	[Token(Token = "0x40008BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private ResumeData _audioResumeData;

	[Token(Token = "0x40008BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private PhysicsHoldableDock _vinylDock;

	[Token(Token = "0x40008BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Vinyl _vinyl;

	[Token(Token = "0x40008BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private AudioHandle _audioHandle;

	[Token(Token = "0x40008BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private int _timelinePosWhenPaused;

	[Token(Token = "0x170000B5")]
	public AudioHandle AudioHandle
	{
		[Token(Token = "0x60009DA")]
		[Address(RVA = "0x105E340", Offset = "0x105E340", VA = "0x105E340")]
		get
		{
			return default(AudioHandle);
		}
	}

	[Token(Token = "0x170000B6")]
	public PhysicsHoldableDock VinylDock
	{
		[Token(Token = "0x60009DB")]
		[Address(RVA = "0x105E348", Offset = "0x105E348", VA = "0x105E348")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000B7")]
	public string typeId
	{
		[Token(Token = "0x60009E9")]
		[Address(RVA = "0x105F6E8", Offset = "0x105F6E8", VA = "0x105F6E8", Slot = "13")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60009DC")]
	[Address(RVA = "0x105E350", Offset = "0x105E350", VA = "0x105E350")]
	private void Awake()
	{
	}

	[Token(Token = "0x60009DD")]
	[Address(RVA = "0x105E510", Offset = "0x105E510", VA = "0x105E510", Slot = "10")]
	protected override void OnDestroy()
	{
	}

	[Token(Token = "0x60009DE")]
	[Address(RVA = "0x105E784", Offset = "0x105E784", VA = "0x105E784", Slot = "6")]
	public override bool Initialise()
	{
		return default(bool);
	}

	[Token(Token = "0x60009DF")]
	[Address(RVA = "0x105E85C", Offset = "0x105E85C", VA = "0x105E85C", Slot = "7")]
	public override void OnUpdate(float dt)
	{
	}

	[Token(Token = "0x60009E0")]
	[Address(RVA = "0x105E860", Offset = "0x105E860", VA = "0x105E860")]
	public void Play()
	{
	}

	[Token(Token = "0x60009E1")]
	[Address(RVA = "0x105E86C", Offset = "0x105E86C", VA = "0x105E86C")]
	public void Play(float timeIn = 0f, float timeOut = 0f)
	{
	}

	[Token(Token = "0x60009E2")]
	[Address(RVA = "0x105EDB0", Offset = "0x105EDB0", VA = "0x105EDB0")]
	public void Stop()
	{
	}

	[Token(Token = "0x60009E3")]
	[Address(RVA = "0x105EFF4", Offset = "0x105EFF4", VA = "0x105EFF4")]
	public bool IsPlaying()
	{
		return default(bool);
	}

	[Token(Token = "0x60009E4")]
	[Address(RVA = "0x105F178", Offset = "0x105F178", VA = "0x105F178")]
	private bool OnCanDockVinylCallback(PhysicsHoldableDock dock, PhysicsHoldable dockable)
	{
		return default(bool);
	}

	[Token(Token = "0x60009E5")]
	[Address(RVA = "0x105F1FC", Offset = "0x105F1FC", VA = "0x105F1FC")]
	private bool OnCanUndockVinylCallback(PhysicsHoldableDock dock, PhysicsHoldable dockable)
	{
		return default(bool);
	}

	[Token(Token = "0x60009E6")]
	[Address(RVA = "0x105F204", Offset = "0x105F204", VA = "0x105F204")]
	private void OnVinylDockedCallback(PhysicsHoldableDock dock, PhysicsHoldable docked)
	{
	}

	[Token(Token = "0x60009E7")]
	[Address(RVA = "0x105F268", Offset = "0x105F268", VA = "0x105F268")]
	private void OnVinylUndockedCallback(PhysicsHoldableDock dock, PhysicsHoldable docked)
	{
	}

	[Token(Token = "0x60009E8")]
	[Address(RVA = "0x105F384", Offset = "0x105F384", VA = "0x105F384")]
	private void ResumeVinyl()
	{
	}

	[Token(Token = "0x60009EA")]
	[Address(RVA = "0x105F728", Offset = "0x105F728", VA = "0x105F728", Slot = "12")]
	public bool Serialise(FlexBufferBuilder builder, ISceneObjectReferenceSerialiser objectSerialiser)
	{
		return default(bool);
	}

	[Token(Token = "0x60009EB")]
	[Address(RVA = "0x105F8AC", Offset = "0x105F8AC", VA = "0x105F8AC", Slot = "14")]
	public bool Deserialise(FlexBuffer.Map root, ISceneObjectReferenceDeserialiser objectDeserialiser)
	{
		return default(bool);
	}

	[Token(Token = "0x60009EC")]
	[Address(RVA = "0x105FA94", Offset = "0x105FA94", VA = "0x105FA94", Slot = "15")]
	public void OnPostDeserialise()
	{
	}

	[Token(Token = "0x60009ED")]
	[Address(RVA = "0x105FA98", Offset = "0x105FA98", VA = "0x105FA98", Slot = "16")]
	public void ReleaseInsertedObjectForRestoration()
	{
	}

	[Token(Token = "0x60009EE")]
	[Address(RVA = "0x105FB1C", Offset = "0x105FB1C", VA = "0x105FB1C")]
	public VinylPlayer()
	{
	}
}
[Token(Token = "0x2000195")]
[UnitCategory("Custom")]
public sealed class CustomUnitTemplate : Unit, IGraphElementWithData, IGraphElement, IGraphItem, INotifiedCollectionItem, IDisposable, IPrewarmable, IAotStubbable, IIdentifiable
{
	[Token(Token = "0x2000196")]
	public class Data : IGraphElementData
	{
		[Token(Token = "0x40008C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int returnValue;

		[Token(Token = "0x6000A00")]
		[Address(RVA = "0x105FC04", Offset = "0x105FC04", VA = "0x105FC04")]
		public Data()
		{
		}
	}

	[Token(Token = "0x40008C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[Serialize]
	private int _multiplier;

	[Token(Token = "0x170000B8")]
	[DoNotSerialize]
	[PortLabelHidden]
	public ControlInput enter
	{
		[Token(Token = "0x60009F0")]
		[Address(RVA = "0x105FB34", Offset = "0x105FB34", VA = "0x105FB34")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x60009F1")]
		[Address(RVA = "0x105FB3C", Offset = "0x105FB3C", VA = "0x105FB3C")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x170000B9")]
	[DoNotSerialize]
	[PortLabelHidden]
	public ControlOutput exit
	{
		[Token(Token = "0x60009F2")]
		[Address(RVA = "0x105FB44", Offset = "0x105FB44", VA = "0x105FB44")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x60009F3")]
		[Address(RVA = "0x105FB4C", Offset = "0x105FB4C", VA = "0x105FB4C")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x170000BA")]
	[DoNotSerialize]
	[PortLabel("Value Input A")]
	public ValueInput numberInputA
	{
		[Token(Token = "0x60009F4")]
		[Address(RVA = "0x105FB54", Offset = "0x105FB54", VA = "0x105FB54")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x60009F5")]
		[Address(RVA = "0x105FB5C", Offset = "0x105FB5C", VA = "0x105FB5C")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x170000BB")]
	[PortLabel("Value Input B")]
	[DoNotSerialize]
	public ValueInput numberInputB
	{
		[Token(Token = "0x60009F6")]
		[Address(RVA = "0x105FB64", Offset = "0x105FB64", VA = "0x105FB64")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x60009F7")]
		[Address(RVA = "0x105FB6C", Offset = "0x105FB6C", VA = "0x105FB6C")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x170000BC")]
	[DoNotSerialize]
	[PortLabel("Value Output")]
	public ValueOutput numberOutput
	{
		[Token(Token = "0x60009F8")]
		[Address(RVA = "0x105FB74", Offset = "0x105FB74", VA = "0x105FB74")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x60009F9")]
		[Address(RVA = "0x105FB7C", Offset = "0x105FB7C", VA = "0x105FB7C")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x170000BD")]
	[Inspectable]
	[UnitHeaderInspectable("Multiplier")]
	public int multiplier
	{
		[Token(Token = "0x60009FA")]
		[Address(RVA = "0x105FB84", Offset = "0x105FB84", VA = "0x105FB84")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60009FB")]
		[Address(RVA = "0x105FB8C", Offset = "0x105FB8C", VA = "0x105FB8C")]
		set
		{
		}
	}

	[Token(Token = "0x60009EF")]
	[Address(RVA = "0x105FB24", Offset = "0x105FB24", VA = "0x105FB24")]
	public CustomUnitTemplate()
	{
	}

	[Token(Token = "0x60009FC")]
	[Address(RVA = "0x105FBA8", Offset = "0x105FBA8", VA = "0x105FBA8", Slot = "72")]
	public IGraphElementData CreateData()
	{
		return null;
	}

	[Token(Token = "0x60009FD")]
	[Address(RVA = "0x105FC0C", Offset = "0x105FC0C", VA = "0x105FC0C", Slot = "67")]
	protected override void Definition()
	{
	}

	[Token(Token = "0x60009FE")]
	[Address(RVA = "0x105FE50", Offset = "0x105FE50", VA = "0x105FE50")]
	public ControlOutput Enter(Bolt.Flow flow)
	{
		return null;
	}
}
[Token(Token = "0x2000197")]
public class DialogAnchor : MonoBehaviour, IInitialisable
{
	[Token(Token = "0x2000198")]
	public delegate void AnchorProximityCallback(DialogAnchor newAnchor);

	[Token(Token = "0x40008CA")]
	public const float c_maxDisconectAngle = 180f;

	[Token(Token = "0x40008CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<CharacterAsset> characterAssets;

	[Token(Token = "0x40008CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Transform anchorTransform;

	[Token(Token = "0x40008CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private BoundingBox _anchorBoundingBox;

	[Token(Token = "0x40008CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float MaximumAngle;

	[Token(Token = "0x40008CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[Range(0f, 180f)]
	[SerializeField]
	private float _disconnectAngle;

	[Token(Token = "0x40008D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private bool _disconnectIfNotFacing;

	[Token(Token = "0x40008D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Vector3 anchorPosition;

	[Token(Token = "0x40008D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private Quaternion anchorRotation;

	[Token(Token = "0x40008D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Occludee occludee;

	[Token(Token = "0x40008D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public bool StartsActive;

	[Token(Token = "0x40008D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x79")]
	private bool _inRange;

	[Token(Token = "0x170000BE")]
	public float DisconnectAngle
	{
		[Token(Token = "0x6000A01")]
		[Address(RVA = "0x105FF70", Offset = "0x105FF70", VA = "0x105FF70")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x170000BF")]
	public bool DisconnectIfNotFacing
	{
		[Token(Token = "0x6000A02")]
		[Address(RVA = "0x105FF78", Offset = "0x105FF78", VA = "0x105FF78")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170000C0")]
	public BoundingBox AnchorBoundingBox
	{
		[Token(Token = "0x6000A03")]
		[Address(RVA = "0x105FF80", Offset = "0x105FF80", VA = "0x105FF80")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000C1")]
	public Vector3 AnchorPosition
	{
		[Token(Token = "0x6000A04")]
		[Address(RVA = "0x105FF88", Offset = "0x105FF88", VA = "0x105FF88")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x170000C2")]
	public Quaternion AnchorRotation
	{
		[Token(Token = "0x6000A05")]
		[Address(RVA = "0x105FF94", Offset = "0x105FF94", VA = "0x105FF94")]
		get
		{
			return default(Quaternion);
		}
	}

	[Token(Token = "0x170000C3")]
	public bool InRange
	{
		[Token(Token = "0x6000A0A")]
		[Address(RVA = "0x1060210", Offset = "0x1060210", VA = "0x1060210")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x14000003")]
	public event AnchorProximityCallback OnDialogAnchorInRange
	{
		[Token(Token = "0x6000A06")]
		[Address(RVA = "0x105FFA0", Offset = "0x105FFA0", VA = "0x105FFA0")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000A07")]
		[Address(RVA = "0x106003C", Offset = "0x106003C", VA = "0x106003C")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x14000004")]
	public event AnchorProximityCallback OnDialogAnchorOutOfRange
	{
		[Token(Token = "0x6000A08")]
		[Address(RVA = "0x10600D8", Offset = "0x10600D8", VA = "0x10600D8")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000A09")]
		[Address(RVA = "0x1060174", Offset = "0x1060174", VA = "0x1060174")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x6000A0B")]
	[Address(RVA = "0x1060218", Offset = "0x1060218", VA = "0x1060218", Slot = "4")]
	public bool Initialise()
	{
		return default(bool);
	}

	[Token(Token = "0x6000A0C")]
	[Address(RVA = "0x1060330", Offset = "0x1060330", VA = "0x1060330")]
	public bool IsOccluded()
	{
		return default(bool);
	}

	[Token(Token = "0x6000A0D")]
	[Address(RVA = "0x10603C0", Offset = "0x10603C0", VA = "0x10603C0")]
	public void OnDialogAnchorInRangeCall()
	{
	}

	[Token(Token = "0x6000A0E")]
	[Address(RVA = "0x10603E8", Offset = "0x10603E8", VA = "0x10603E8")]
	public void OnDialogAnchorOutOfRangeCall()
	{
	}

	[Token(Token = "0x6000A0F")]
	[Address(RVA = "0x106040C", Offset = "0x106040C", VA = "0x106040C")]
	public DialogAnchor()
	{
	}
}
[Token(Token = "0x2000199")]
public class SerialisableFlowMachine : MonoBehaviour, IInitialisable, ISceneReferrable, ISerialisable, IDeserialisable
{
	[Token(Token = "0x40008D8")]
	private const string c_graphIdKey = "id";

	[Token(Token = "0x40008D9")]
	private const string c_graphDataKey = "data";

	[Token(Token = "0x40008DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private FlowMachine _flowMachine;

	[Token(Token = "0x40008DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private GraphReference _graphReference;

	[Token(Token = "0x40008DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private GraphReferenceSerialiser _serialiser;

	[Token(Token = "0x40008DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private GraphReferenceDeserialiser _deserialiser;

	[Token(Token = "0x40008DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool _initialised;

	[Token(Token = "0x170000C4")]
	public string typeId
	{
		[Token(Token = "0x6000A14")]
		[Address(RVA = "0x106061C", Offset = "0x106061C", VA = "0x106061C", Slot = "7")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000A15")]
	[Address(RVA = "0x106065C", Offset = "0x106065C", VA = "0x106065C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000A16")]
	[Address(RVA = "0x10606B4", Offset = "0x10606B4", VA = "0x10606B4", Slot = "4")]
	public bool Initialise()
	{
		return default(bool);
	}

	[Token(Token = "0x6000A17")]
	[Address(RVA = "0x10606D8", Offset = "0x10606D8", VA = "0x10606D8")]
	private void Setup()
	{
	}

	[Token(Token = "0x6000A18")]
	[Address(RVA = "0x1060874", Offset = "0x1060874", VA = "0x1060874", Slot = "6")]
	public bool Serialise(FlexBufferBuilder builder, ISceneObjectReferenceSerialiser objectSerialiser)
	{
		return default(bool);
	}

	[Token(Token = "0x6000A19")]
	[Address(RVA = "0x1060A08", Offset = "0x1060A08", VA = "0x1060A08", Slot = "8")]
	public bool Deserialise(FlexBuffer.Map root, ISceneObjectReferenceDeserialiser objectDeserialiser)
	{
		return default(bool);
	}

	[Token(Token = "0x6000A1A")]
	[Address(RVA = "0x1060DC4", Offset = "0x1060DC4", VA = "0x1060DC4")]
	public SerialisableFlowMachine()
	{
	}
}
[Token(Token = "0x200019A")]
public class SoftCollisionBlocker : MonoBehaviour, IInitialisable
{
	[Token(Token = "0x40008DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private float _perpendicularDeadzone;

	[Token(Token = "0x40008E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private float _distanceToEnd;

	[Token(Token = "0x40008E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private float _maxDistanceFromBlocker;

	[Token(Token = "0x40008E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private GameObject _softCollisionTutorialGameobject;

	[Token(Token = "0x40008E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private BoundingBox _collisionBlockerBoundingBox;

	[Token(Token = "0x40008E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private BoxCollider _boxCollider;

	[Token(Token = "0x40008E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private UnityEngine.Plane _softCollisionLimitPlane;

	[Token(Token = "0x170000C5")]
	public GameObject SoftCollisionTutorialGameobject
	{
		[Token(Token = "0x6000A1B")]
		[Address(RVA = "0x1060DCC", Offset = "0x1060DCC", VA = "0x1060DCC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000C6")]
	public BoundingBox CollisionBlockerBoundingBox
	{
		[Token(Token = "0x6000A1C")]
		[Address(RVA = "0x1060DD4", Offset = "0x1060DD4", VA = "0x1060DD4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000C7")]
	public BoxCollider BoxCollider
	{
		[Token(Token = "0x6000A1D")]
		[Address(RVA = "0x1060DDC", Offset = "0x1060DDC", VA = "0x1060DDC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000C8")]
	public UnityEngine.Plane SoftCollisionLimitPlane
	{
		[Token(Token = "0x6000A1E")]
		[Address(RVA = "0x1060DE4", Offset = "0x1060DE4", VA = "0x1060DE4")]
		get
		{
			return default(UnityEngine.Plane);
		}
	}

	[Token(Token = "0x170000C9")]
	public float PerpendicularDeadzone
	{
		[Token(Token = "0x6000A1F")]
		[Address(RVA = "0x1060DF0", Offset = "0x1060DF0", VA = "0x1060DF0")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x170000CA")]
	public float DistanceToStop
	{
		[Token(Token = "0x6000A20")]
		[Address(RVA = "0x1060DF8", Offset = "0x1060DF8", VA = "0x1060DF8")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x170000CB")]
	public float MaxDistanceFromBlocker
	{
		[Token(Token = "0x6000A21")]
		[Address(RVA = "0x1060E00", Offset = "0x1060E00", VA = "0x1060E00")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x6000A22")]
	[Address(RVA = "0x1060E08", Offset = "0x1060E08", VA = "0x1060E08", Slot = "4")]
	public bool Initialise()
	{
		return default(bool);
	}

	[Token(Token = "0x6000A23")]
	[Address(RVA = "0x1060F28", Offset = "0x1060F28", VA = "0x1060F28")]
	public SoftCollisionBlocker()
	{
	}
}
[Token(Token = "0x200019B")]
public class SoftCollisionMovementAdjuster : MonoBehaviour, ISoftCollisionMovementAdjuster
{
	[Token(Token = "0x40008E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private AnimationCurve _movementSpeedMultiplier;

	[Token(Token = "0x40008E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private PlayerBase _player;

	[Token(Token = "0x6000A24")]
	[Address(RVA = "0x1060F44", Offset = "0x1060F44", VA = "0x1060F44")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000A25")]
	[Address(RVA = "0x1060F9C", Offset = "0x1060F9C", VA = "0x1060F9C", Slot = "4")]
	public float GetMovementSpeedMultiplier(Vector3 inputDirection)
	{
		return default(float);
	}

	[Token(Token = "0x6000A26")]
	[Address(RVA = "0x1061258", Offset = "0x1061258", VA = "0x1061258", Slot = "5")]
	public bool IsSoftCollisionActive()
	{
		return default(bool);
	}

	[Token(Token = "0x6000A27")]
	[Address(RVA = "0x106139C", Offset = "0x106139C", VA = "0x106139C")]
	public SoftCollisionMovementAdjuster()
	{
	}
}
[Token(Token = "0x200019C")]
public class SoftCollisionZone : MonoBehaviour, IInitialisable
{
	[Token(Token = "0x40008E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private SoftCollisionZoneAsset _softCollisionZoneAsset;

	[Token(Token = "0x40008E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private List<SoftCollisionBlocker> _softCollisionBlockers;

	[Token(Token = "0x170000CC")]
	public List<SoftCollisionBlocker> softCollisionBlockers
	{
		[Token(Token = "0x6000A28")]
		[Address(RVA = "0x10613A4", Offset = "0x10613A4", VA = "0x10613A4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000A29")]
	[Address(RVA = "0x10613AC", Offset = "0x10613AC", VA = "0x10613AC", Slot = "4")]
	public bool Initialise()
	{
		return default(bool);
	}

	[Token(Token = "0x6000A2A")]
	[Address(RVA = "0x10615D4", Offset = "0x10615D4", VA = "0x10615D4")]
	public void ActivateZone()
	{
	}

	[Token(Token = "0x6000A2B")]
	[Address(RVA = "0x10616CC", Offset = "0x10616CC", VA = "0x10616CC")]
	public void DisableZone()
	{
	}

	[Token(Token = "0x6000A2C")]
	[Address(RVA = "0x10617F0", Offset = "0x10617F0", VA = "0x10617F0")]
	public SoftCollisionZone()
	{
	}
}
[Token(Token = "0x200019D")]
public class Story : UpdatableMonoBehaviour, ISceneReferrable
{
	[Token(Token = "0x40008EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string currentChapter;

	[Token(Token = "0x40008EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool canSelfStart;

	[Token(Token = "0x40008EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	private bool subscribedToEvents;

	[Token(Token = "0x40008ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private CallbackVoid<GameObject, GameObject, InteractionCallback> _playerInteractCallback;

	[Token(Token = "0x40008EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private CallbackVoid<string, string, string> _factChangeCallback;

	[Token(Token = "0x6000A2D")]
	[Address(RVA = "0x10617F8", Offset = "0x10617F8", VA = "0x10617F8")]
	public Story()
	{
	}

	[Token(Token = "0x6000A2E")]
	[Address(RVA = "0x10618E0", Offset = "0x10618E0", VA = "0x10618E0", Slot = "6")]
	public override bool Initialise()
	{
		return default(bool);
	}

	[Token(Token = "0x6000A2F")]
	[Address(RVA = "0x10618E8", Offset = "0x10618E8", VA = "0x10618E8", Slot = "7")]
	public override void OnUpdate(float dt)
	{
	}

	[Token(Token = "0x6000A30")]
	[Address(RVA = "0x10618EC", Offset = "0x10618EC", VA = "0x10618EC", Slot = "10")]
	protected override void OnDestroy()
	{
	}

	[Token(Token = "0x6000A31")]
	[Address(RVA = "0x106194C", Offset = "0x106194C", VA = "0x106194C")]
	public void SubscribeToEvents()
	{
	}

	[Token(Token = "0x6000A32")]
	[Address(RVA = "0x10618F0", Offset = "0x10618F0", VA = "0x10618F0")]
	public void UnsubscribeToEvents()
	{
	}

	[Token(Token = "0x6000A33")]
	[Address(RVA = "0x10619A0", Offset = "0x10619A0", VA = "0x10619A0")]
	public void StartStory(string storyName)
	{
	}

	[Token(Token = "0x6000A34")]
	[Address(RVA = "0x1061AC8", Offset = "0x1061AC8", VA = "0x1061AC8")]
	public void EndStory()
	{
	}

	[Token(Token = "0x6000A35")]
	[Address(RVA = "0x1061C0C", Offset = "0x1061C0C", VA = "0x1061C0C")]
	public void CleanUp()
	{
	}

	[Token(Token = "0x6000A36")]
	[Address(RVA = "0x1061C80", Offset = "0x1061C80", VA = "0x1061C80")]
	public void TriggerCustomAction(string name)
	{
	}

	[Token(Token = "0x6000A37")]
	[Address(RVA = "0x1061D34", Offset = "0x1061D34", VA = "0x1061D34")]
	private void OnPlayerInteraction(GameObject thePlayer, GameObject theObject, InteractionCallback theAction)
	{
	}

	[Token(Token = "0x6000A38")]
	[Address(RVA = "0x1062574", Offset = "0x1062574", VA = "0x1062574")]
	private void OnFactChange(string containerName, string blackboardName, string factName)
	{
	}

	[Token(Token = "0x6000A39")]
	[Address(RVA = "0x1062410", Offset = "0x1062410", VA = "0x1062410")]
	private string GetCurrentChapter()
	{
		return null;
	}
}
[Token(Token = "0x200019E")]
public class Room : MonoBehaviour, IOcclusionVolumeProvider, IStaticOutlineBatchVolumeProvider
{
	[Token(Token = "0x40008EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static List<OcclusionArea> s_tempOcclusionAreas;

	[Token(Token = "0x170000CD")]
	public new string name
	{
		[Token(Token = "0x6000A3B")]
		[Address(RVA = "0x1063054", Offset = "0x1063054", VA = "0x1063054")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000CE")]
	public Transform root
	{
		[Token(Token = "0x6000A3C")]
		[Address(RVA = "0x1063074", Offset = "0x1063074", VA = "0x1063074", Slot = "6")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000CF")]
	public Bounds[] volumes
	{
		[Token(Token = "0x6000A3D")]
		[Address(RVA = "0x106307C", Offset = "0x106307C", VA = "0x106307C", Slot = "7")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000A3A")]
	[Address(RVA = "0x1062DA0", Offset = "0x1062DA0", VA = "0x1062DA0")]
	private static Bounds[] BuildVolumeBounds(GameObject obj)
	{
		return null;
	}

	[Token(Token = "0x6000A3E")]
	[Address(RVA = "0x1063084", Offset = "0x1063084", VA = "0x1063084")]
	public Room()
	{
	}
}
[Token(Token = "0x200019F")]
public class RoomPortal : MonoBehaviour, IOcclusionPortal
{
	[Token(Token = "0x40008F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Room _frontRoom;

	[Token(Token = "0x40008F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Room _backRoom;

	[Token(Token = "0x40008F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Vector2 _size;

	[Token(Token = "0x40008F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private UnityEngine.Plane _plane;

	[Token(Token = "0x40008F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Matrix4x4 _matrix;

	[Token(Token = "0x170000D0")]
	public new string name
	{
		[Token(Token = "0x6000A40")]
		[Address(RVA = "0x1063128", Offset = "0x1063128", VA = "0x1063128")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000D1")]
	public UnityEngine.Plane plane
	{
		[Token(Token = "0x6000A41")]
		[Address(RVA = "0x1063148", Offset = "0x1063148", VA = "0x1063148", Slot = "4")]
		get
		{
			return default(UnityEngine.Plane);
		}
	}

	[Token(Token = "0x170000D2")]
	public Matrix4x4 matrix
	{
		[Token(Token = "0x6000A42")]
		[Address(RVA = "0x1063154", Offset = "0x1063154", VA = "0x1063154", Slot = "5")]
		get
		{
			return default(Matrix4x4);
		}
	}

	[Token(Token = "0x170000D3")]
	public Vector2 extents
	{
		[Token(Token = "0x6000A43")]
		[Address(RVA = "0x1063168", Offset = "0x1063168", VA = "0x1063168", Slot = "6")]
		get
		{
			return default(Vector2);
		}
	}

	[Token(Token = "0x6000A44")]
	[Address(RVA = "0x106317C", Offset = "0x106317C", VA = "0x106317C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000A45")]
	[Address(RVA = "0x1063244", Offset = "0x1063244", VA = "0x1063244")]
	public RoomPortal()
	{
	}
}
[Token(Token = "0x20001A0")]
public class RoomPortalDoor : RoomPortal
{
	[Token(Token = "0x40008F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[FormerlySerializedAs("_openable")]
	[SerializeField]
	[Space]
	private DoorOpenable _door;

	[Token(Token = "0x170000D4")]
	public bool active
	{
		[Token(Token = "0x6000A46")]
		[Address(RVA = "0x106329C", Offset = "0x106329C", VA = "0x106329C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170000D5")]
	public bool isOpen
	{
		[Token(Token = "0x6000A47")]
		[Address(RVA = "0x1063330", Offset = "0x1063330", VA = "0x1063330")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170000D6")]
	public float openness
	{
		[Token(Token = "0x6000A48")]
		[Address(RVA = "0x1063374", Offset = "0x1063374", VA = "0x1063374")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x6000A49")]
	[Address(RVA = "0x1063458", Offset = "0x1063458", VA = "0x1063458")]
	public RoomPortalDoor()
	{
	}
}
[Token(Token = "0x20001A1")]
public class AchievementContainer : ScriptableObject
{
	[Token(Token = "0x40008F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	protected AchievementDefinition _achievementDefinition;

	[Token(Token = "0x40008F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private List<FactAsset> _factRequirements;

	[Token(Token = "0x40008F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private bool _requiredFactState;

	[Token(Token = "0x6000A4A")]
	[Address(RVA = "0x105D1BC", Offset = "0x105D1BC", VA = "0x105D1BC")]
	public bool TryUnlockAchievement()
	{
		return default(bool);
	}

	[Token(Token = "0x6000A4B")]
	[Address(RVA = "0x106345C", Offset = "0x106345C", VA = "0x106345C")]
	public bool HasRequirement(string containerName, string blackboardName, string factName)
	{
		return default(bool);
	}

	[Token(Token = "0x6000A4C")]
	[Address(RVA = "0x10635E0", Offset = "0x10635E0", VA = "0x10635E0")]
	public AchievementContainer()
	{
	}
}
[Token(Token = "0x20001A2")]
public class EpilogueAchievementTrigger : MonoBehaviour, IInitialisable
{
	[Token(Token = "0x40008F9")]
	private const int c_fourHoursInSeconds = 14400;

	[Token(Token = "0x40008FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	[Header("Epilogue Achievements")]
	private AchievementContainer _notAllTalkAchievement;

	[Token(Token = "0x40008FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private AchievementContainer _killerFrequentlyAchievement;

	[Token(Token = "0x40008FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private AchievementContainer _theEndAchievement;

	[Token(Token = "0x40008FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private AchievementContainer _runtimeRespectedAchievement;

	[Token(Token = "0x6000A4D")]
	[Address(RVA = "0x10635E8", Offset = "0x10635E8", VA = "0x10635E8", Slot = "4")]
	public bool Initialise()
	{
		return default(bool);
	}

	[Token(Token = "0x6000A4E")]
	[Address(RVA = "0x10636E4", Offset = "0x10636E4", VA = "0x10636E4")]
	public EpilogueAchievementTrigger()
	{
	}
}
[Token(Token = "0x20001A3")]
public class FridgeHorrorAchievementTrigger : MonoBehaviour
{
	[Token(Token = "0x40008FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private AchievementContainer _fridgeHorrorAchievement;

	[Token(Token = "0x40008FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Holdable _fridgeHorrorHeadHoldable;

	[Token(Token = "0x4000900")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private int layerMask;

	[Token(Token = "0x6000A4F")]
	[Address(RVA = "0x10636EC", Offset = "0x10636EC", VA = "0x10636EC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000A50")]
	[Address(RVA = "0x1063894", Offset = "0x1063894", VA = "0x1063894")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000A51")]
	[Address(RVA = "0x1063994", Offset = "0x1063994", VA = "0x1063994")]
	public FridgeHorrorAchievementTrigger()
	{
	}
}
[Token(Token = "0x20001A4")]
[CreateAssetMenu(fileName = "Assets/_Design/Activities/NewActivity", menuName = "Activities/Create Activity Definition", order = 0)]
public class ActivityDefinition : ScriptableObject
{
	[Token(Token = "0x4000901")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string activityId;

	[Token(Token = "0x4000902")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string taskId;

	[Token(Token = "0x4000903")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string subtaskId;

	[Token(Token = "0x4000904")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public LocalizedString displayText;

	[Token(Token = "0x4000905")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool autoSaveOnStart;

	[Token(Token = "0x4000906")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
	public bool autoSaveOnComplete;

	[Token(Token = "0x4000907")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3A")]
	public bool shownOnPS5;

	[Token(Token = "0x6000A52")]
	[Address(RVA = "0x106399C", Offset = "0x106399C", VA = "0x106399C")]
	public string SelectId()
	{
		return null;
	}

	[Token(Token = "0x6000A53")]
	[Address(RVA = "0x10639E4", Offset = "0x10639E4", VA = "0x10639E4")]
	public ActivityDefinition()
	{
	}
}
[Token(Token = "0x20001A5")]
public class NullPlatformEventImpl : PlatformEventImpl
{
	[Token(Token = "0x6000A54")]
	[Address(RVA = "0x1063A7C", Offset = "0x1063A7C", VA = "0x1063A7C", Slot = "4")]
	public override void OnStartUp()
	{
	}

	[Token(Token = "0x6000A55")]
	[Address(RVA = "0x1063A80", Offset = "0x1063A80", VA = "0x1063A80")]
	public NullPlatformEventImpl()
	{
	}
}
[Token(Token = "0x20001A6")]
public abstract class PlatformEventImpl
{
	[Token(Token = "0x14000005")]
	protected event PlatformEventService.ApplicationResumingEvent m_OnResumingEvent
	{
		[Token(Token = "0x6000A56")]
		[Address(RVA = "0x1063A90", Offset = "0x1063A90", VA = "0x1063A90")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000A57")]
		[Address(RVA = "0x1063B2C", Offset = "0x1063B2C", VA = "0x1063B2C")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x14000006")]
	protected event PlatformEventService.ApplicationSuspendingEvent m_OnSuspendingEvent
	{
		[Token(Token = "0x6000A58")]
		[Address(RVA = "0x1063BC8", Offset = "0x1063BC8", VA = "0x1063BC8")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000A59")]
		[Address(RVA = "0x1063C64", Offset = "0x1063C64", VA = "0x1063C64")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x14000007")]
	protected event PlatformEventService.ApplicationResourceAvailabilityChangedEvent m_OnResourceAvailabilityChangedEvent
	{
		[Token(Token = "0x6000A5A")]
		[Address(RVA = "0x1063D00", Offset = "0x1063D00", VA = "0x1063D00")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000A5B")]
		[Address(RVA = "0x1063D9C", Offset = "0x1063D9C", VA = "0x1063D9C")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x6000A5C")]
	[Address(RVA = "0x1063E38", Offset = "0x1063E38", VA = "0x1063E38")]
	public void RegisterForEvents([Optional] PlatformEventService.ApplicationSuspendingEvent onSuspending, [Optional] PlatformEventService.ApplicationResumingEvent onResuming, [Optional] PlatformEventService.ApplicationResourceAvailabilityChangedEvent onResourceAvailabilityChanged)
	{
	}

	[Token(Token = "0x6000A5D")]
	[Address(RVA = "0x1063E8C", Offset = "0x1063E8C", VA = "0x1063E8C")]
	public void UnregisterForEvents([Optional] PlatformEventService.ApplicationSuspendingEvent onSuspending, [Optional] PlatformEventService.ApplicationResumingEvent onResuming, [Optional] PlatformEventService.ApplicationResourceAvailabilityChangedEvent onResourceAvailabilityChanged)
	{
	}

	[Token(Token = "0x6000A5E")]
	[Address(RVA = "0x1063EE0", Offset = "0x1063EE0", VA = "0x1063EE0")]
	public void ClearAllEvents()
	{
	}

	[Token(Token = "0x6000A5F")]
	public abstract void OnStartUp();

	[Token(Token = "0x6000A60")]
	[Address(RVA = "0x1063F08", Offset = "0x1063F08", VA = "0x1063F08", Slot = "5")]
	public virtual void OnCleanUp()
	{
	}

	[Token(Token = "0x6000A61")]
	[Address(RVA = "0x1063F30", Offset = "0x1063F30", VA = "0x1063F30", Slot = "6")]
	public virtual void OnUpdate(float deltaTime)
	{
	}

	[Token(Token = "0x6000A62")]
	[Address(RVA = "0x1063F34", Offset = "0x1063F34", VA = "0x1063F34")]
	protected void InvokeResumingEvent(double secondsSuspended)
	{
	}

	[Token(Token = "0x6000A63")]
	[Address(RVA = "0x1063F50", Offset = "0x1063F50", VA = "0x1063F50")]
	protected void InvokeSuspendingEvent(bool midLoad)
	{
	}

	[Token(Token = "0x6000A64")]
	[Address(RVA = "0x1063F70", Offset = "0x1063F70", VA = "0x1063F70")]
	protected void InvokeResourceAvailabilityChangedEvent(bool isConstrained)
	{
	}

	[Token(Token = "0x6000A65")]
	[Address(RVA = "0x1063A88", Offset = "0x1063A88", VA = "0x1063A88")]
	protected PlatformEventImpl()
	{
	}
}
[Token(Token = "0x20001A7")]
public class PlatformEventService : IService
{
	[Token(Token = "0x20001A8")]
	public delegate void ApplicationResumingEvent(double secondsSuspended);

	[Token(Token = "0x20001A9")]
	public delegate void ApplicationSuspendingEvent(bool midLoad);

	[Token(Token = "0x20001AA")]
	public delegate void ApplicationResourceAvailabilityChangedEvent(bool isConstrained);

	[Token(Token = "0x400090B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private PlatformEventImpl m_Impl;

	[Token(Token = "0x400090C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool _shouldReturnToIIS;

	[Token(Token = "0x170000D7")]
	public bool shouldReturnToIIS
	{
		[Token(Token = "0x6000A66")]
		[Address(RVA = "0x1063F90", Offset = "0x1063F90", VA = "0x1063F90")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000A67")]
	[Address(RVA = "0x1063F98", Offset = "0x1063F98", VA = "0x1063F98")]
	public void ClearReturnToIISFlag()
	{
	}

	[Token(Token = "0x6000A68")]
	[Address(RVA = "0x1063FA0", Offset = "0x1063FA0", VA = "0x1063FA0")]
	public void RegisterForEvents([Optional] ApplicationSuspendingEvent onSuspending, [Optional] ApplicationResumingEvent onResuming, [Optional] ApplicationResourceAvailabilityChangedEvent onResourceAvailabilityChanged)
	{
	}

	[Token(Token = "0x6000A69")]
	[Address(RVA = "0x1063FB8", Offset = "0x1063FB8", VA = "0x1063FB8")]
	public void UnregisterForEvents([Optional] ApplicationSuspendingEvent onSuspending, [Optional] ApplicationResumingEvent onResuming, [Optional] ApplicationResourceAvailabilityChangedEvent onResourceAvailabilityChanged)
	{
	}

	[Token(Token = "0x6000A6A")]
	[Address(RVA = "0x1063FD0", Offset = "0x1063FD0", VA = "0x1063FD0")]
	public void ClearAllEvents()
	{
	}

	[Token(Token = "0x6000A6B")]
	[Address(RVA = "0x1064004", Offset = "0x1064004", VA = "0x1064004", Slot = "4")]
	public void OnStartUp()
	{
	}

	[Token(Token = "0x6000A6C")]
	[Address(RVA = "0x10644D8", Offset = "0x10644D8", VA = "0x10644D8", Slot = "5")]
	public void OnCleanUp()
	{
	}

	[Token(Token = "0x6000A6D")]
	[Address(RVA = "0x1064980", Offset = "0x1064980", VA = "0x1064980", Slot = "6")]
	public void OnUpdate(float deltaTime)
	{
	}

	[Token(Token = "0x6000A6E")]
	[Address(RVA = "0x10649A0", Offset = "0x10649A0", VA = "0x10649A0")]
	public Type InitiateReturnToIIS(GameStateContext sharedContextInformation)
	{
		return null;
	}

	[Token(Token = "0x6000A6F")]
	[Address(RVA = "0x1064C2C", Offset = "0x1064C2C", VA = "0x1064C2C")]
	private Type InitiateReEngage(GameStateContext sharedContextInformation)
	{
		return null;
	}

	[Token(Token = "0x6000A70")]
	[Address(RVA = "0x1064CDC", Offset = "0x1064CDC", VA = "0x1064CDC")]
	private void OnUserAdded(IUser user, short index)
	{
	}

	[Token(Token = "0x6000A71")]
	[Address(RVA = "0x1064CE0", Offset = "0x1064CE0", VA = "0x1064CE0")]
	private void OnUserRemoved(IUser user, short index)
	{
	}

	[Token(Token = "0x6000A72")]
	[Address(RVA = "0x1064EAC", Offset = "0x1064EAC", VA = "0x1064EAC")]
	private void OnUserSignedOut(IUser user, short index)
	{
	}

	[Token(Token = "0x6000A73")]
	[Address(RVA = "0x1064EB0", Offset = "0x1064EB0", VA = "0x1064EB0")]
	private void OnPrimaryUserEngaged()
	{
	}

	[Token(Token = "0x6000A74")]
	[Address(RVA = "0x1064EB4", Offset = "0x1064EB4", VA = "0x1064EB4")]
	private void OnPrimaryUserDisengaged()
	{
	}

	[Token(Token = "0x6000A75")]
	[Address(RVA = "0x1064EC0", Offset = "0x1064EC0", VA = "0x1064EC0")]
	private void OnEngagementStateChanged(Team17.Platform.EngagementService.EngagementState from, Team17.Platform.EngagementService.EngagementState to)
	{
	}

	[Token(Token = "0x6000A76")]
	[Address(RVA = "0x1064EC4", Offset = "0x1064EC4", VA = "0x1064EC4")]
	public PlatformEventService()
	{
	}
}
[Token(Token = "0x20001AB")]
public class ActionHighlighter : MonoBehaviour
{
	[Token(Token = "0x400090D")]
	private const int _initialHighlightedListSize = 4;

	[Token(Token = "0x400090E")]
	private const int _initialMaterialListSize = 16;

	[Token(Token = "0x400090F")]
	private const int _initialOcclusionOutlineSwitchListSize = 4;

	[Token(Token = "0x4000910")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Color HighlightColor1;

	[Token(Token = "0x4000911")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Color HighlightColor2;

	[Token(Token = "0x4000912")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private float HighlightScalar;

	[Token(Token = "0x4000913")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[SerializeField]
	private float HighlightCycleSpeed;

	[Token(Token = "0x4000914")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private Material HighlightMaterial;

	[Token(Token = "0x4000915")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private ActionManager _actionManager;

	[Token(Token = "0x4000916")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private List<InteractableBase> _highlightedList;

	[Token(Token = "0x4000917")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private List<InteractableBase> _cachedToHighlightList;

	[Token(Token = "0x4000918")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private List<(OcclusionOutlineSwitch occlusionOutlineSwitch, Material[] originalMaterials)> _currentlyHighlighted;

	[Token(Token = "0x4000919")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private List<OcclusionOutlineSwitch> _tempOcclusionOutlineSwitchList;

	[Token(Token = "0x400091A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private MaterialPropertyBlock m_highlightOutlineMaterialBlock;

	[Token(Token = "0x400091B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private float m_highlightPulse;

	[Token(Token = "0x400091C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private int m_outlineScaleProperyID;

	[Token(Token = "0x400091D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private int m_outlineColourProperyID;

	[Token(Token = "0x6000A83")]
	[Address(RVA = "0x1065344", Offset = "0x1065344", VA = "0x1065344")]
	public ActionHighlighter()
	{
	}

	[Token(Token = "0x6000A84")]
	[Address(RVA = "0x10654DC", Offset = "0x10654DC", VA = "0x10654DC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000A85")]
	[Address(RVA = "0x106562C", Offset = "0x106562C", VA = "0x106562C")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000A86")]
	[Address(RVA = "0x1065AF8", Offset = "0x1065AF8", VA = "0x1065AF8")]
	private void SetHighlighted(InteractableBase interactable, bool highlighted)
	{
	}

	[Token(Token = "0x6000A87")]
	[Address(RVA = "0x1065E14", Offset = "0x1065E14", VA = "0x1065E14")]
	private void SaveMaterialsAndEnableOutline(List<OcclusionOutlineSwitch> occlusionOutlineSwitchList)
	{
	}

	[Token(Token = "0x6000A88")]
	[Address(RVA = "0x1065FE0", Offset = "0x1065FE0", VA = "0x1065FE0")]
	private void RestoreMaterialsAndDisableOutline(List<OcclusionOutlineSwitch> occlusionOutlineSwitchList)
	{
	}

	[Token(Token = "0x6000A89")]
	[Address(RVA = "0x106553C", Offset = "0x106553C", VA = "0x106553C")]
	private void InitShader()
	{
	}

	[Token(Token = "0x6000A8A")]
	[Address(RVA = "0x1065C38", Offset = "0x1065C38", VA = "0x1065C38")]
	private void UpdateShader()
	{
	}
}
[Token(Token = "0x20001AC")]
public class ActionRayPointer : MonoBehaviour
{
	[Token(Token = "0x400091E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private LocomotionHandler _locomotionHandler;

	[Token(Token = "0x400091F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private XRInteractorLineVisual[] _pointers;

	[Token(Token = "0x4000920")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private XRRayInteractor[] _rayInteractors;

	[Token(Token = "0x4000921")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool[] _showRays;

	[Token(Token = "0x4000922")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private ActionManager _actionManager;

	[Token(Token = "0x4000923")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private VRPlayer _player;

	[Token(Token = "0x4000924")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private VRCursor _cursor;

	[Token(Token = "0x6000A8B")]
	[Address(RVA = "0x10661A4", Offset = "0x10661A4", VA = "0x10661A4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000A8C")]
	[Address(RVA = "0x1066374", Offset = "0x1066374", VA = "0x1066374")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000A8D")]
	[Address(RVA = "0x10667B4", Offset = "0x10667B4", VA = "0x10667B4")]
	public void ToggleCursor(XRRayInteractor xrRayInteractor, XRInteractorLineVisual xRInteractorLineVisual)
	{
	}

	[Token(Token = "0x6000A8E")]
	[Address(RVA = "0x1066928", Offset = "0x1066928", VA = "0x1066928")]
	public ActionRayPointer()
	{
	}
}
[Token(Token = "0x20001AD")]
public class BoundingBox : MonoBehaviour, IInitialisable
{
	[Token(Token = "0x4000925")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Vector3 _center;

	[Token(Token = "0x4000926")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	private Vector3 _size;

	[Token(Token = "0x4000927")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool _active;

	[Token(Token = "0x4000928")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private Bounds _bounds;

	[Token(Token = "0x4000929")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Transform _transform;

	[Token(Token = "0x170000D8")]
	public Vector3 position
	{
		[Token(Token = "0x6000A8F")]
		[Address(RVA = "0x1066930", Offset = "0x1066930", VA = "0x1066930")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x170000D9")]
	public new bool enabled
	{
		[Token(Token = "0x6000A90")]
		[Address(RVA = "0x106694C", Offset = "0x106694C", VA = "0x106694C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170000DA")]
	public bool active
	{
		[Token(Token = "0x6000A91")]
		[Address(RVA = "0x1066954", Offset = "0x1066954", VA = "0x1066954")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000A92")]
	[Address(RVA = "0x106124C", Offset = "0x106124C", VA = "0x106124C")]
	public bool IsInRange(Vector3 position)
	{
		return default(bool);
	}

	[Token(Token = "0x6000A93")]
	[Address(RVA = "0x106695C", Offset = "0x106695C", VA = "0x106695C")]
	public void Activate()
	{
	}

	[Token(Token = "0x6000A94")]
	[Address(RVA = "0x1066968", Offset = "0x1066968", VA = "0x1066968")]
	public void Deactivate()
	{
	}

	[Token(Token = "0x6000A95")]
	[Address(RVA = "0x1066970", Offset = "0x1066970", VA = "0x1066970", Slot = "4")]
	public bool Initialise()
	{
		return default(bool);
	}

	[Token(Token = "0x6000A96")]
	[Address(RVA = "0x10669FC", Offset = "0x10669FC", VA = "0x10669FC")]
	public BoundingBox()
	{
	}
}
[Token(Token = "0x20001AE")]
public class DiegeticTextDetector : UpdatableMonoBehaviour
{
	[Token(Token = "0x400092A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private float _distanceToCheck;

	[Token(Token = "0x400092B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private float _preShowDelay;

	[Token(Token = "0x400092C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private DiegeticTextDisplay _textDisplay;

	[Token(Token = "0x400092D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private DiegeticTextLocalizer _observedLocalizer;

	[Token(Token = "0x400092E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private DiegeticTextLocalizer _candidateForObservedLocalizer;

	[Token(Token = "0x400092F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private DiegeticTextLocalizer _openedLocalizer;

	[Token(Token = "0x4000930")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float _lastObservationStartTime;

	[Token(Token = "0x4000931")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private float _lastObservedTime;

	[Token(Token = "0x4000932")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Transform _cameraTransform;

	[Token(Token = "0x6000A97")]
	[Address(RVA = "0x1066A90", Offset = "0x1066A90", VA = "0x1066A90", Slot = "6")]
	public override bool Initialise()
	{
		return default(bool);
	}

	[Token(Token = "0x6000A98")]
	[Address(RVA = "0x1066B70", Offset = "0x1066B70", VA = "0x1066B70", Slot = "8")]
	protected override void OnEnable()
	{
	}

	[Token(Token = "0x6000A99")]
	[Address(RVA = "0x1066BA4", Offset = "0x1066BA4", VA = "0x1066BA4", Slot = "9")]
	protected override void OnDisable()
	{
	}

	[Token(Token = "0x6000A9A")]
	[Address(RVA = "0x1066C60", Offset = "0x1066C60", VA = "0x1066C60", Slot = "7")]
	public override void OnUpdate(float dt)
	{
	}

	[Token(Token = "0x6000A9B")]
	[Address(RVA = "0x1066C1C", Offset = "0x1066C1C", VA = "0x1066C1C")]
	private void HideOpenedLocalizer()
	{
	}

	[Token(Token = "0x6000A9C")]
	[Address(RVA = "0x106736C", Offset = "0x106736C", VA = "0x106736C")]
	private bool PlayerIsStillLookingAtTheObject()
	{
		return default(bool);
	}

	[Token(Token = "0x6000A9D")]
	[Address(RVA = "0x10675D0", Offset = "0x10675D0", VA = "0x10675D0", Slot = "10")]
	protected override void OnDestroy()
	{
	}

	[Token(Token = "0x6000A9E")]
	[Address(RVA = "0x1067644", Offset = "0x1067644", VA = "0x1067644")]
	public DiegeticTextDetector()
	{
	}
}
[Token(Token = "0x20001AF")]
[RemoveOnVr]
public class FsDiegeticTextLocalizerExtendedData : MonoBehaviour
{
	[Token(Token = "0x4000933")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool useRightInspectDisplay;

	[Token(Token = "0x6000A9F")]
	[Address(RVA = "0x1067658", Offset = "0x1067658", VA = "0x1067658")]
	public FsDiegeticTextLocalizerExtendedData()
	{
	}
}
[Token(Token = "0x20001B0")]
[RemoveOnVr]
public class FsInspectDiegeticTextDetector : UpdatableMonoBehaviour
{
	[Token(Token = "0x20001B1")]
	private class InspectedLocalizerData
	{
		[Token(Token = "0x400093C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public DiegeticTextLocalizer localizer;

		[Token(Token = "0x400093D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public DiegeticTextDisplay hostingDisplay;

		[Token(Token = "0x400093E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float lastObservedStartTime;

		[Token(Token = "0x400093F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public bool isCandidateForObserved;

		[Token(Token = "0x4000940")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x25")]
		public bool isObserved;

		[Token(Token = "0x4000941")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float lastObservedTime;

		[Token(Token = "0x4000942")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public bool useRightDisplay;

		[Token(Token = "0x6000AA6")]
		[Address(RVA = "0x1067E70", Offset = "0x1067E70", VA = "0x1067E70")]
		public bool IsOpened()
		{
			return default(bool);
		}

		[Token(Token = "0x6000AA7")]
		[Address(RVA = "0x1067ED0", Offset = "0x1067ED0", VA = "0x1067ED0")]
		public void Hide()
		{
		}

		[Token(Token = "0x6000AA8")]
		[Address(RVA = "0x1067F00", Offset = "0x1067F00", VA = "0x1067F00")]
		public void TryShow(DiegeticTextDisplay display)
		{
		}

		[Token(Token = "0x6000AA9")]
		[Address(RVA = "0x1067B0C", Offset = "0x1067B0C", VA = "0x1067B0C")]
		public InspectedLocalizerData()
		{
		}
	}

	[Token(Token = "0x4000934")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private FsInspectHandler fsInspectHandler;

	[Token(Token = "0x4000935")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private DiegeticTextDisplay leftDisplay;

	[Token(Token = "0x4000936")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private DiegeticTextDisplay rightDisplay;

	[Token(Token = "0x4000937")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private float preShowDelay;

	[Token(Token = "0x4000938")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[SerializeField]
	private float angleMaxDistanceInDegrees;

	[Token(Token = "0x4000939")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private List<DiegeticTextLocalizer> inspectedLocalizersCache;

	[Token(Token = "0x400093A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private List<InspectedLocalizerData> inspectedLocalizers;

	[Token(Token = "0x400093B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Transform cameraTransform;

	[Token(Token = "0x6000AA0")]
	[Address(RVA = "0x1067660", Offset = "0x1067660", VA = "0x1067660", Slot = "6")]
	public override bool Initialise()
	{
		return default(bool);
	}

	[Token(Token = "0x6000AA1")]
	[Address(RVA = "0x1067728", Offset = "0x1067728", VA = "0x1067728", Slot = "8")]
	protected override void OnEnable()
	{
	}

	[Token(Token = "0x6000AA2")]
	[Address(RVA = "0x10677E4", Offset = "0x10677E4", VA = "0x10677E4", Slot = "9")]
	protected override void OnDisable()
	{
	}

	[Token(Token = "0x6000AA3")]
	[Address(RVA = "0x10678A0", Offset = "0x10678A0", VA = "0x10678A0")]
	public void SetInspectedHoldable(PhysicsHoldable inspectedHoldable)
	{
	}

	[Token(Token = "0x6000AA4")]
	[Address(RVA = "0x1067B14", Offset = "0x1067B14", VA = "0x1067B14", Slot = "7")]
	public override void OnUpdate(float dt)
	{
	}

	[Token(Token = "0x6000AA5")]
	[Address(RVA = "0x1067F74", Offset = "0x1067F74", VA = "0x1067F74")]
	public FsInspectDiegeticTextDetector()
	{
	}
}
[Token(Token = "0x20001B2")]
public class GrabAnchor : UpdatableMonoBehaviour, IFixedUpdatable, IGrabAnchor
{
	[Token(Token = "0x4000943")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Vector3[] velocityHisory;

	[Token(Token = "0x4000944")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private int velHistoryIndex;

	[Token(Token = "0x4000945")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private Vector3 hoverLocation;

	[Token(Token = "0x4000946")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Rigidbody anchorRigidBody;

	[Token(Token = "0x4000947")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public IHoldable grabbedHoldable;

	[Token(Token = "0x4000948")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject gripGo;

	[Token(Token = "0x6000AAA")]
	[Address(RVA = "0x1068058", Offset = "0x1068058", VA = "0x1068058", Slot = "6")]
	public override bool Initialise()
	{
		return default(bool);
	}

	[Token(Token = "0x6000AAB")]
	[Address(RVA = "0x10681F0", Offset = "0x10681F0", VA = "0x10681F0", Slot = "15")]
	public virtual void OnObjectGrabbed(IHoldable holdable)
	{
	}

	[Token(Token = "0x6000AAC")]
	[Address(RVA = "0x10681F8", Offset = "0x10681F8", VA = "0x10681F8", Slot = "16")]
	public virtual void OnObjectReleased(IHoldable holdable)
	{
	}

	[Token(Token = "0x6000AAD")]
	[Address(RVA = "0x1068204", Offset = "0x1068204", VA = "0x1068204", Slot = "17")]
	public virtual void OnFixedUpdate(float dt)
	{
	}

	[Token(Token = "0x6000AAE")]
	[Address(RVA = "0x10682E0", Offset = "0x10682E0", VA = "0x10682E0")]
	public Vector3 GetSmoothedVelocity(int depth = 8)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000AAF")]
	[Address(RVA = "0x10683C0", Offset = "0x10683C0", VA = "0x10683C0", Slot = "7")]
	public override void OnUpdate(float dt)
	{
	}

	[Token(Token = "0x6000AB0")]
	[Address(RVA = "0x10683C4", Offset = "0x10683C4", VA = "0x10683C4", Slot = "18")]
	public virtual void SetHoverLocation(Vector3 location)
	{
	}

	[Token(Token = "0x6000AB1")]
	[Address(RVA = "0x10683D0", Offset = "0x10683D0", VA = "0x10683D0", Slot = "19")]
	public virtual Vector3 GetHoverLocation()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000AB2")]
	[Address(RVA = "0x10683DC", Offset = "0x10683DC", VA = "0x10683DC")]
	public GrabAnchor()
	{
	}
}
[Token(Token = "0x20001B3")]
public class PlayerInteractionHighlighter : MonoBehaviour
{
	[Token(Token = "0x20001B4")]
	public interface IHighlightable
	{
		[Token(Token = "0x6000AB7")]
		void Highlight(Actions.InteractionBase highlightingInteraction, InteractorBase interactor);

		[Token(Token = "0x6000AB8")]
		void UnHighlight();
	}

	[Token(Token = "0x4000949")]
	private const int _initialHighlightedListSize = 2;

	[Token(Token = "0x400094A")]
	private const int _initialHighlightableListSize = 8;

	[Token(Token = "0x400094B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private ActionManager _actionManager;

	[Token(Token = "0x400094C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private List<InteractableBase> _highlightedList;

	[Token(Token = "0x400094D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private List<ActionManager.InteractionContext> _cachedToHighlightList;

	[Token(Token = "0x400094E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private List<IHighlightable> _cachedHighlightablesList;

	[Token(Token = "0x6000AB3")]
	[Address(RVA = "0x1068480", Offset = "0x1068480", VA = "0x1068480")]
	public PlayerInteractionHighlighter()
	{
	}

	[Token(Token = "0x6000AB4")]
	[Address(RVA = "0x10685B4", Offset = "0x10685B4", VA = "0x10685B4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000AB5")]
	[Address(RVA = "0x106860C", Offset = "0x106860C", VA = "0x106860C")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000AB6")]
	[Address(RVA = "0x1068B50", Offset = "0x1068B50", VA = "0x1068B50")]
	private void SetHighlighted(InteractableBase interactable, ActionManager.InteractionContext highlightActionContext, bool highlighted)
	{
	}
}
[Token(Token = "0x20001B5")]
public class RemoteObjectGrabber : MonoBehaviour
{
	[Token(Token = "0x20001B6")]
	private enum RemoteGrabberHand
	{
		[Token(Token = "0x400095A")]
		right,
		[Token(Token = "0x400095B")]
		left,
		[Token(Token = "0x400095C")]
		none
	}

	[Token(Token = "0x400094F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private XRRayInteractor[] _grabberRayInteractors;

	[Token(Token = "0x4000950")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private XRRayInteractor[] _pointerRayInteractors;

	[Token(Token = "0x4000951")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private XRDirectInteractorRigidbody[] _directRayInteractors;

	[Token(Token = "0x4000952")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private LocomotionHandler _locomotionHandler;

	[Token(Token = "0x4000953")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private EventReference _activateEventReference;

	[Token(Token = "0x4000954")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private InputActionType _leftHandTriggerInput;

	[Token(Token = "0x4000955")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private InputActionType _rightHandTriggerInput;

	[Token(Token = "0x4000956")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private RemoteGrabberHand _activeHand;

	[Token(Token = "0x4000957")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Holder _holder;

	[Token(Token = "0x4000958")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private VRPlayer _VRPlayer;

	[Token(Token = "0x6000AB9")]
	[Address(RVA = "0x1068D38", Offset = "0x1068D38", VA = "0x1068D38")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000ABA")]
	[Address(RVA = "0x1068E24", Offset = "0x1068E24", VA = "0x1068E24")]
	private void Update()
	{
	}

	[Token(Token = "0x6000ABB")]
	[Address(RVA = "0x1068FDC", Offset = "0x1068FDC", VA = "0x1068FDC")]
	private bool CanUseGrabber(RemoteGrabberHand hand)
	{
		return default(bool);
	}

	[Token(Token = "0x6000ABC")]
	[Address(RVA = "0x1068EA4", Offset = "0x1068EA4", VA = "0x1068EA4")]
	private bool MustExitGrabber(RemoteGrabberHand hand)
	{
		return default(bool);
	}

	[Token(Token = "0x6000ABD")]
	[Address(RVA = "0x1069058", Offset = "0x1069058", VA = "0x1069058")]
	private void DetectAndTriggerHand(RemoteGrabberHand hand)
	{
	}

	[Token(Token = "0x6000ABE")]
	[Address(RVA = "0x1069100", Offset = "0x1069100", VA = "0x1069100")]
	private void EnterMode(RemoteGrabberHand hand)
	{
	}

	[Token(Token = "0x6000ABF")]
	[Address(RVA = "0x1068FB8", Offset = "0x1068FB8", VA = "0x1068FB8")]
	private void ExitMode()
	{
	}

	[Token(Token = "0x6000AC0")]
	[Address(RVA = "0x1069174", Offset = "0x1069174", VA = "0x1069174")]
	private void EnableDisplayPointer(RemoteGrabberHand hand, bool state)
	{
	}

	[Token(Token = "0x6000AC1")]
	[Address(RVA = "0x106927C", Offset = "0x106927C", VA = "0x106927C")]
	public void PlaySoundEvent()
	{
	}

	[Token(Token = "0x6000AC2")]
	[Address(RVA = "0x10693AC", Offset = "0x10693AC", VA = "0x10693AC")]
	public RemoteObjectGrabber()
	{
	}
}
[Token(Token = "0x20001B7")]
public class CharacterControllerObjectPusher : MonoBehaviour
{
	[Token(Token = "0x400095D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private float pushForce;

	[Token(Token = "0x6000AC3")]
	[Address(RVA = "0x10693BC", Offset = "0x10693BC", VA = "0x10693BC")]
	private void OnControllerColliderHit(ControllerColliderHit hit)
	{
	}

	[Token(Token = "0x6000AC4")]
	[Address(RVA = "0x10694B0", Offset = "0x10694B0", VA = "0x10694B0")]
	public CharacterControllerObjectPusher()
	{
	}
}
[Token(Token = "0x20001B8")]
public class TeleportComponentGradient : MonoBehaviour
{
	[Token(Token = "0x400095E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[HideInInspector]
	public MeshRenderer meshRenderer;

	[Token(Token = "0x400095F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Gradient _validGradient;

	[Token(Token = "0x4000960")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Gradient _invalidGradient;

	[Token(Token = "0x6000AC5")]
	[Address(RVA = "0x10694C0", Offset = "0x10694C0", VA = "0x10694C0")]
	public void Init()
	{
	}

	[Token(Token = "0x6000AC6")]
	[Address(RVA = "0x1069518", Offset = "0x1069518", VA = "0x1069518")]
	public TeleportComponentGradient()
	{
	}
}
[Token(Token = "0x20001B9")]
public class TeleportSnapLocation : MonoBehaviour
{
	[Token(Token = "0x4000961")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Transform _teleportLocation;

	[Token(Token = "0x170000DB")]
	public Transform TeleportLocation
	{
		[Token(Token = "0x6000AC7")]
		[Address(RVA = "0x1069520", Offset = "0x1069520", VA = "0x1069520")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000AC8")]
	[Address(RVA = "0x1069528", Offset = "0x1069528", VA = "0x1069528")]
	public TeleportSnapLocation()
	{
	}
}
[Token(Token = "0x20001BA")]
public class TeleportVisuals : MonoBehaviour, IInitialisable
{
	[Token(Token = "0x4000962")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Transform _teleportReticleArrow;

	[Token(Token = "0x4000963")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private XRInteractorLineVisual _xRInteractorLineVisual;

	[Token(Token = "0x4000964")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private TeleportComponentGradient[] _childRenderers;

	[Token(Token = "0x4000965")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private LineRenderer _lineRenderer;

	[Token(Token = "0x4000966")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Material _material;

	[Token(Token = "0x4000967")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool _lastIsValidTarget;

	[Token(Token = "0x4000968")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private XRRig _xrRig;

	[Token(Token = "0x6000AC9")]
	[Address(RVA = "0x1069530", Offset = "0x1069530", VA = "0x1069530")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000ACA")]
	[Address(RVA = "0x1069678", Offset = "0x1069678", VA = "0x1069678", Slot = "4")]
	public bool Initialise()
	{
		return default(bool);
	}

	[Token(Token = "0x6000ACB")]
	[Address(RVA = "0x10699C8", Offset = "0x10699C8", VA = "0x10699C8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000ACC")]
	[Address(RVA = "0x1069C94", Offset = "0x1069C94", VA = "0x1069C94")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000ACD")]
	[Address(RVA = "0x1069698", Offset = "0x1069698", VA = "0x1069698")]
	private void ChangeLineColor()
	{
	}

	[Token(Token = "0x6000ACE")]
	[Address(RVA = "0x1069794", Offset = "0x1069794", VA = "0x1069794")]
	private void ChangeReticleColors()
	{
	}

	[Token(Token = "0x6000ACF")]
	[Address(RVA = "0x1069A18", Offset = "0x1069A18", VA = "0x1069A18")]
	private void TeleportArrowRotation()
	{
	}

	[Token(Token = "0x6000AD0")]
	[Address(RVA = "0x1069CBC", Offset = "0x1069CBC", VA = "0x1069CBC")]
	public TeleportVisuals()
	{
	}
}
[Token(Token = "0x20001BB")]
public class VRHand : GrabAnchor, ICoreUpdatable, IUpdatable
{
	[Token(Token = "0x20001BC")]
	public enum HandType
	{
		[Token(Token = "0x400097D")]
		LeftHand,
		[Token(Token = "0x400097E")]
		RightHand
	}

	[Token(Token = "0x20001BD")]
	[CompilerGenerated]
	private sealed class <DelayedReEnableCollision>d__31 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400097F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000980")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000981")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float delay;

		[Token(Token = "0x4000982")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public VRHand <>4__this;

		[Token(Token = "0x170000DD")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000AE4")]
			[Address(RVA = "0x106A99C", Offset = "0x106A99C", VA = "0x106A99C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000DE")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000AE6")]
			[Address(RVA = "0x106A9E4", Offset = "0x106A9E4", VA = "0x106A9E4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000AE1")]
		[Address(RVA = "0x106A570", Offset = "0x106A570", VA = "0x106A570")]
		[DebuggerHidden]
		public <DelayedReEnableCollision>d__31(int <>1__state)
		{
		}

		[Token(Token = "0x6000AE2")]
		[Address(RVA = "0x106A894", Offset = "0x106A894", VA = "0x106A894", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000AE3")]
		[Address(RVA = "0x106A898", Offset = "0x106A898", VA = "0x106A898", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000AE5")]
		[Address(RVA = "0x106A9A4", Offset = "0x106A9A4", VA = "0x106A9A4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000969")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private Animator animator;

	[Token(Token = "0x400096A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public HandType hand;

	[Token(Token = "0x400096B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public float animConformSpeed;

	[Token(Token = "0x400096C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public float hideHandDelay;

	[Token(Token = "0x400096D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public string GripParameterName;

	[Token(Token = "0x400096E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public string TriggerParameterName;

	[Token(Token = "0x400096F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private int gripParamId;

	[Token(Token = "0x4000970")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private int triggerParamId;

	[Token(Token = "0x4000971")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private float gripTarget;

	[Token(Token = "0x4000972")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private float triggerTarget;

	[Token(Token = "0x4000973")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private float currentGripPosition;

	[Token(Token = "0x4000974")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private float currentTriggerPosition;

	[Token(Token = "0x4000975")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private float hideHandTimer;

	[Token(Token = "0x4000976")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private Transform[] children;

	[Token(Token = "0x4000977")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[SerializeField]
	private float PostDropCollisionWindow;

	[Token(Token = "0x4000978")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[SerializeField]
	private Transform indexFinger;

	[Token(Token = "0x4000979")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[SerializeField]
	private Transform _attachPoint;

	[Token(Token = "0x400097A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private bool _haveFocus;

	[Token(Token = "0x400097B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB9")]
	private bool _gameIsPaused;

	[Token(Token = "0x170000DC")]
	public Transform IndexFinger
	{
		[Token(Token = "0x6000AD1")]
		[Address(RVA = "0x1069CC4", Offset = "0x1069CC4", VA = "0x1069CC4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000AD2")]
	[Address(RVA = "0x1069CCC", Offset = "0x1069CCC", VA = "0x1069CCC", Slot = "6")]
	public override bool Initialise()
	{
		return default(bool);
	}

	[Token(Token = "0x6000AD3")]
	[Address(RVA = "0x1069E4C", Offset = "0x1069E4C", VA = "0x1069E4C", Slot = "10")]
	protected override void OnDestroy()
	{
	}

	[Token(Token = "0x6000AD4")]
	[Address(RVA = "0x1069F60", Offset = "0x1069F60", VA = "0x1069F60")]
	private void OnGamePaused(bool paused)
	{
	}

	[Token(Token = "0x6000AD5")]
	[Address(RVA = "0x106A208", Offset = "0x106A208", VA = "0x106A208", Slot = "7")]
	public override void OnUpdate(float dt)
	{
	}

	[Token(Token = "0x6000AD6")]
	[Address(RVA = "0x106A2B0", Offset = "0x106A2B0", VA = "0x106A2B0")]
	private void HandlePausedFocusDisplay()
	{
	}

	[Token(Token = "0x6000AD7")]
	[Address(RVA = "0x106A4DC", Offset = "0x106A4DC", VA = "0x106A4DC")]
	internal void SetGrip(float gripValue)
	{
	}

	[Token(Token = "0x6000AD8")]
	[Address(RVA = "0x106A4E4", Offset = "0x106A4E4", VA = "0x106A4E4")]
	internal void SetTrigger(float triggerValue)
	{
	}

	[Token(Token = "0x6000AD9")]
	[Address(RVA = "0x106A068", Offset = "0x106A068", VA = "0x106A068")]
	public void ShowHand()
	{
	}

	[Token(Token = "0x6000ADA")]
	[Address(RVA = "0x106A138", Offset = "0x106A138", VA = "0x106A138")]
	public void HideHand()
	{
	}

	[Token(Token = "0x6000ADB")]
	[Address(RVA = "0x106A4EC", Offset = "0x106A4EC", VA = "0x106A4EC")]
	[IteratorStateMachine(typeof(<DelayedReEnableCollision>d__31))]
	private IEnumerator DelayedReEnableCollision(float delay)
	{
		return null;
	}

	[Token(Token = "0x6000ADC")]
	[Address(RVA = "0x106A390", Offset = "0x106A390", VA = "0x106A390")]
	private void AnimateHand()
	{
	}

	[Token(Token = "0x6000ADD")]
	[Address(RVA = "0x106A598", Offset = "0x106A598", VA = "0x106A598", Slot = "15")]
	public override void OnObjectGrabbed(IHoldable holdable)
	{
	}

	[Token(Token = "0x6000ADE")]
	[Address(RVA = "0x106A640", Offset = "0x106A640", VA = "0x106A640", Slot = "16")]
	public override void OnObjectReleased(IHoldable holdable)
	{
	}

	[Token(Token = "0x6000ADF")]
	[Address(RVA = "0x106A768", Offset = "0x106A768", VA = "0x106A768", Slot = "19")]
	public override Vector3 GetHoverLocation()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000AE0")]
	[Address(RVA = "0x106A7FC", Offset = "0x106A7FC", VA = "0x106A7FC")]
	public VRHand()
	{
	}
}
[Token(Token = "0x20001BE")]
public class VRHandController : UpdatableMonoBehaviour, ICoreUpdatable, IUpdatable, XRTouchActionInputDescription.IRigidbodyProvider
{
	[Token(Token = "0x4000983")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private ActionBasedController inputController;

	[Token(Token = "0x4000984")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private VRHand hand;

	[Token(Token = "0x4000985")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Vector3 storedAttachPointPosition;

	[Token(Token = "0x4000986")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private Quaternion storedAttachPointRotation;

	[Token(Token = "0x170000DF")]
	public VRHand Hand
	{
		[Token(Token = "0x6000AE7")]
		[Address(RVA = "0x106A9EC", Offset = "0x106A9EC", VA = "0x106A9EC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000E0")]
	private Rigidbody Actions.XRTouchActionInputDescription.IRigidbodyProvider.rigidbody
	{
		[Token(Token = "0x6000AEA")]
		[Address(RVA = "0x106AB70", Offset = "0x106AB70", VA = "0x106AB70", Slot = "11")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000AE8")]
	[Address(RVA = "0x106A9F4", Offset = "0x106A9F4", VA = "0x106A9F4", Slot = "6")]
	public override bool Initialise()
	{
		return default(bool);
	}

	[Token(Token = "0x6000AE9")]
	[Address(RVA = "0x106AA6C", Offset = "0x106AA6C", VA = "0x106AA6C", Slot = "7")]
	public override void OnUpdate(float dt)
	{
	}

	[Token(Token = "0x6000AEB")]
	[Address(RVA = "0x106ABB8", Offset = "0x106ABB8", VA = "0x106ABB8")]
	public VRHandController()
	{
	}
}
[Token(Token = "0x20001BF")]
public enum VRHandTouchSource
{
	[Token(Token = "0x4000988")]
	Unset,
	[Token(Token = "0x4000989")]
	Palm,
	[Token(Token = "0x400098A")]
	Wrist,
	[Token(Token = "0x400098B")]
	Thumb,
	[Token(Token = "0x400098C")]
	Index,
	[Token(Token = "0x400098D")]
	Middle,
	[Token(Token = "0x400098E")]
	Ring,
	[Token(Token = "0x400098F")]
	Pinky
}
[Token(Token = "0x20001C0")]
public class VRHandTouchTrigger : MonoBehaviour
{
	[Token(Token = "0x4000990")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private VRHandTouchSource _source;

	[Token(Token = "0x170000E1")]
	public VRHandTouchSource source
	{
		[Token(Token = "0x6000AEC")]
		[Address(RVA = "0x106ABC0", Offset = "0x106ABC0", VA = "0x106ABC0")]
		get
		{
			return default(VRHandTouchSource);
		}
	}

	[Token(Token = "0x6000AED")]
	[Address(RVA = "0x106ABC8", Offset = "0x106ABC8", VA = "0x106ABC8")]
	public VRHandTouchTrigger()
	{
	}
}
[Token(Token = "0x20001C1")]
public class FlatScreenPlayer : PlayerBase
{
	[Token(Token = "0x20001C2")]
	public delegate void OnFinishedCallback(bool interrupted);

	[Token(Token = "0x20001C3")]
	public static class FlatscreenKeys
	{
		[Token(Token = "0x40009AE")]
		public const string IsCrouching = "crouch";
	}

	[Token(Token = "0x4000991")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private float moveSpeed;

	[Token(Token = "0x4000992")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	[SerializeField]
	[Tooltip("The speed, in units per second, to move forward while standing.")]
	private float walkMoveSpeed;

	[Token(Token = "0x4000993")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	[SerializeField]
	[Tooltip("The speed, in units per second, to move forward while crouching.")]
	private float crouchMoveSpeed;

	[Token(Token = "0x4000994")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	[SerializeField]
	[Tooltip("Time it takes to transition between Standing/Crouching.")]
	private float timeToTransitionMoveMode;

	[Token(Token = "0x4000995")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	[SerializeField]
	[Tooltip("Curve that represents our Crouch position change over time.")]
	private AnimationCurve crouchTransitionCurve;

	[Token(Token = "0x4000996")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	[Tooltip("Curve that represents our Walk/Stand position change over time.")]
	[SerializeField]
	private AnimationCurve walkTransitionCurve;

	[Token(Token = "0x4000997")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	[Tooltip("Controls whether to enable strafing (sideways movement).")]
	[SerializeField]
	private bool enableStrafe;

	[Token(Token = "0x4000998")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
	[SerializeField]
	private float rotationSensitivity;

	[Token(Token = "0x4000999")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	[Tooltip("Curve that represents movement and rotation input change from a gamepad.")]
	[SerializeField]
	private AnimationCurve gamepadInputCurve;

	[Token(Token = "0x400099A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	[SerializeField]
	private Transform cameraFirstPersonTransform;

	[Token(Token = "0x400099B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public PlayerMoveModes currentMoveMode;

	[Token(Token = "0x400099C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
	public PlayerLookInputMode currentLookInputMode;

	[Token(Token = "0x400099D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static FlatScreenPlayer instance;

	[Token(Token = "0x400099E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	private bool focused;

	[Token(Token = "0x400099F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
	private Vector3 verticalVelocity;

	[Token(Token = "0x40009A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	private CameraHandler _cameraHandler;

	[Token(Token = "0x40009A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private FsInspectHandler fsInspectHandler;

	[Token(Token = "0x40009A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	private FsPeekHandler fsPeekHandler;

	[Token(Token = "0x40009A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	private FsPlaceHandler fsPlaceHandler;

	[Token(Token = "0x40009A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	private FsCameraCollisionHandler cameraCollisionsHandler;

	[Token(Token = "0x40009A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	private FsCameraCollisionHandler.CollisionSensorState cameraCollidingState;

	[Token(Token = "0x40009A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
	private bool transitioningBetweenMoveModes;

	[Token(Token = "0x40009A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	private float transitionHingeYDistance;

	[Token(Token = "0x40009A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14C")]
	private Vector3 transitionHingeStartPos;

	[Token(Token = "0x40009A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	private float transitionTimer;

	[Token(Token = "0x40009AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	private AnimationCurve transitionCurve;

	[Token(Token = "0x40009AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	private SoftCollisionMovementAdjuster softCollisionMovementAdjuster;

	[Token(Token = "0x40009AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	public RealtimeLightHandler.Rooms currentRoom;

	[Token(Token = "0x40009AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x174")]
	public PlayerStates currentState;

	[Token(Token = "0x170000E2")]
	protected override Vector3 cameraOffset
	{
		[Token(Token = "0x6000AF2")]
		[Address(RVA = "0x106ABF0", Offset = "0x106ABF0", VA = "0x106ABF0", Slot = "15")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x170000E3")]
	protected override float cameraOffsetY
	{
		[Token(Token = "0x6000AF3")]
		[Address(RVA = "0x106AC24", Offset = "0x106AC24", VA = "0x106AC24", Slot = "16")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x170000E4")]
	public override Quaternion cameraRotation
	{
		[Token(Token = "0x6000AF4")]
		[Address(RVA = "0x106AC44", Offset = "0x106AC44", VA = "0x106AC44", Slot = "17")]
		get
		{
			return default(Quaternion);
		}
	}

	[Token(Token = "0x170000E5")]
	public Transform CameraFirstPersonTransform
	{
		[Token(Token = "0x6000AF6")]
		[Address(RVA = "0x106ACB4", Offset = "0x106ACB4", VA = "0x106ACB4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000AEE")]
	[Address(RVA = "0x106ABD0", Offset = "0x106ABD0", VA = "0x106ABD0")]
	public float GetRotationSensitivity()
	{
		return default(float);
	}

	[Token(Token = "0x6000AEF")]
	[Address(RVA = "0x106ABD8", Offset = "0x106ABD8", VA = "0x106ABD8", Slot = "8")]
	protected override void OnEnable()
	{
	}

	[Token(Token = "0x6000AF0")]
	[Address(RVA = "0x106ABE0", Offset = "0x106ABE0", VA = "0x106ABE0", Slot = "9")]
	protected override void OnDisable()
	{
	}

	[Token(Token = "0x6000AF1")]
	[Address(RVA = "0x106ABE8", Offset = "0x106ABE8", VA = "0x106ABE8", Slot = "18")]
	public override Transform GetRootTransform()
	{
		return null;
	}

	[Token(Token = "0x6000AF5")]
	[Address(RVA = "0x106AC60", Offset = "0x106AC60", VA = "0x106AC60")]
	protected bool ReadCrouchToggleInput()
	{
		return default(bool);
	}

	[Token(Token = "0x6000AF7")]
	[Address(RVA = "0x106ACBC", Offset = "0x106ACBC", VA = "0x106ACBC")]
	public bool RequestMoveToTarget(Vector3 targetPosition_ws, Vector3 lookTarget_ws, [Optional] OnFinishedCallback callback)
	{
		return default(bool);
	}

	[Token(Token = "0x6000AF8")]
	[Address(RVA = "0x106ACC4", Offset = "0x106ACC4", VA = "0x106ACC4", Slot = "23")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x6000AF9")]
	[Address(RVA = "0x106AEF0", Offset = "0x106AEF0", VA = "0x106AEF0", Slot = "24")]
	protected override void PerformMovementUpdate(float dt)
	{
	}

	[Token(Token = "0x6000AFA")]
	[Address(RVA = "0x106B6DC", Offset = "0x106B6DC", VA = "0x106B6DC", Slot = "29")]
	protected virtual Vector3 ComputeDesiredMove(Vector2 input)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000AFB")]
	[Address(RVA = "0x106BA18", Offset = "0x106BA18", VA = "0x106BA18", Slot = "19")]
	protected override Vector3 GetFootLocation()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000AFC")]
	[Address(RVA = "0x106B03C", Offset = "0x106B03C", VA = "0x106B03C")]
	private void UpdateMovement(float dt)
	{
	}

	[Token(Token = "0x6000AFD")]
	[Address(RVA = "0x106AE9C", Offset = "0x106AE9C", VA = "0x106AE9C")]
	private void ConfigureForMoveMode(PlayerMoveModes mode)
	{
	}

	[Token(Token = "0x6000AFE")]
	[Address(RVA = "0x106BB8C", Offset = "0x106BB8C", VA = "0x106BB8C")]
	private void SetupNewPlayerHeight(float _height, AnimationCurve transitionCurve)
	{
	}

	[Token(Token = "0x6000AFF")]
	[Address(RVA = "0x106B42C", Offset = "0x106B42C", VA = "0x106B42C")]
	private void AdjustCharacterControllerHeight(float dt)
	{
	}

	[Token(Token = "0x6000B00")]
	[Address(RVA = "0x106B5C0", Offset = "0x106B5C0", VA = "0x106B5C0")]
	private void UpdateLook(float dt)
	{
	}

	[Token(Token = "0x6000B01")]
	[Address(RVA = "0x106BAA0", Offset = "0x106BAA0", VA = "0x106BAA0")]
	private float GetGamepadInputCurveMultiplier(Vector2 rawInput)
	{
		return default(float);
	}

	[Token(Token = "0x6000B02")]
	[Address(RVA = "0x106BB38", Offset = "0x106BB38", VA = "0x106BB38")]
	private void FilterMovementInputAgainstCameraSensors(ref Vector2 moveVector)
	{
	}

	[Token(Token = "0x6000B03")]
	[Address(RVA = "0x106BC20", Offset = "0x106BC20", VA = "0x106BC20")]
	private void FilterLookInputAgainstCameraSensors(ref Vector2 moveVector)
	{
	}

	[Token(Token = "0x6000B04")]
	[Address(RVA = "0x106BC74", Offset = "0x106BC74", VA = "0x106BC74", Slot = "26")]
	protected override bool TryMoveToPosition(Vector3 position, Quaternion rotation)
	{
		return default(bool);
	}

	[Token(Token = "0x6000B05")]
	[Address(RVA = "0x106BCE4", Offset = "0x106BCE4", VA = "0x106BCE4", Slot = "27")]
	public override bool Serialise(FlexBufferBuilder builder, ISceneObjectReferenceSerialiser objectSerialiser)
	{
		return default(bool);
	}

	[Token(Token = "0x6000B06")]
	[Address(RVA = "0x106BD7C", Offset = "0x106BD7C", VA = "0x106BD7C", Slot = "28")]
	public override bool Deserialise(FlexBuffer.Map root, ISceneObjectReferenceDeserialiser objectDeserialiser)
	{
		return default(bool);
	}

	[Token(Token = "0x6000B07")]
	[Address(RVA = "0x106BEF8", Offset = "0x106BEF8", VA = "0x106BEF8")]
	public FlatScreenPlayer()
	{
	}
}
[Token(Token = "0x20001C4")]
public class grabbyhand : MonoBehaviour
{
	[Token(Token = "0x40009AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 localHome;

	[Token(Token = "0x40009B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public bool rightHand;

	[Token(Token = "0x6000B0C")]
	[Address(RVA = "0x106C0A4", Offset = "0x106C0A4", VA = "0x106C0A4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000B0D")]
	[Address(RVA = "0x106C0E0", Offset = "0x106C0E0", VA = "0x106C0E0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000B0E")]
	[Address(RVA = "0x106C0E4", Offset = "0x106C0E4", VA = "0x106C0E4")]
	public grabbyhand()
	{
	}
}
[Token(Token = "0x20001C5")]
public class LookAtItems : MonoBehaviour
{
	[Token(Token = "0x40009B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public LayerMask layersToHit;

	[Token(Token = "0x40009B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject currentlyObserving;

	[Token(Token = "0x40009B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float distanceToObject;

	[Token(Token = "0x40009B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public Vector3 interactionPoint;

	[Token(Token = "0x40009B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Camera cam;

	[Token(Token = "0x6000B0F")]
	[Address(RVA = "0x106C0F4", Offset = "0x106C0F4", VA = "0x106C0F4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000B10")]
	[Address(RVA = "0x106C14C", Offset = "0x106C14C", VA = "0x106C14C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000B11")]
	[Address(RVA = "0x106C150", Offset = "0x106C150", VA = "0x106C150")]
	public LookAtItems()
	{
	}
}
[Token(Token = "0x20001C6")]
public class MouseLook : MonoBehaviour
{
	[Token(Token = "0x40009B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float mouseSensitivity;

	[Token(Token = "0x40009B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform playerBody;

	[Token(Token = "0x40009B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float xRotation;

	[Token(Token = "0x6000B12")]
	[Address(RVA = "0x106C158", Offset = "0x106C158", VA = "0x106C158")]
	private void Start()
	{
	}

	[Token(Token = "0x6000B13")]
	[Address(RVA = "0x106C164", Offset = "0x106C164", VA = "0x106C164")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000B14")]
	[Address(RVA = "0x106C2E4", Offset = "0x106C2E4", VA = "0x106C2E4")]
	public MouseLook()
	{
	}
}
[Token(Token = "0x20001C7")]
public class AnimationEvents : UpdatableMonoBehaviour
{
	[Token(Token = "0x40009B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private InteractionHandler _interactionHandler;

	[Token(Token = "0x40009BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private List<InteractionAnimEvent> _deferredInteractionAnimEvents;

	[Token(Token = "0x6000B15")]
	[Address(RVA = "0x106C2F4", Offset = "0x106C2F4", VA = "0x106C2F4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000B16")]
	[Address(RVA = "0x106C34C", Offset = "0x106C34C", VA = "0x106C34C", Slot = "7")]
	public override void OnUpdate(float dt)
	{
	}

	[Token(Token = "0x6000B17")]
	[Address(RVA = "0x106C404", Offset = "0x106C404", VA = "0x106C404")]
	public void ResetAnimatorBoolParameter(string parameterName)
	{
	}

	[Token(Token = "0x6000B18")]
	[Address(RVA = "0x106C470", Offset = "0x106C470", VA = "0x106C470")]
	public void ResetAnimatorIntParameter(string parameterName)
	{
	}

	[Token(Token = "0x6000B19")]
	[Address(RVA = "0x106C4DC", Offset = "0x106C4DC", VA = "0x106C4DC")]
	public void ResetLook()
	{
	}

	[Token(Token = "0x6000B1A")]
	[Address(RVA = "0x106C638", Offset = "0x106C638", VA = "0x106C638")]
	public void InteractionAnimEvent(InteractionAnimEvent animEvent)
	{
	}

	[Token(Token = "0x6000B1B")]
	[Address(RVA = "0x106C724", Offset = "0x106C724", VA = "0x106C724")]
	public AnimationEvents()
	{
	}
}
[Token(Token = "0x20001C8")]
public class AnimController : MonoBehaviour
{
	[Token(Token = "0x20001C9")]
	public enum ObjectGripAnimation
	{
		[Token(Token = "0x40009D2")]
		none
	}

	[Token(Token = "0x20001CA")]
	public enum ObjectPickUpHand
	{
		[Token(Token = "0x40009D4")]
		right,
		[Token(Token = "0x40009D5")]
		left
	}

	[Token(Token = "0x20001CB")]
	private enum FingerNames
	{
		[Token(Token = "0x40009D7")]
		index,
		[Token(Token = "0x40009D8")]
		middle,
		[Token(Token = "0x40009D9")]
		ring,
		[Token(Token = "0x40009DA")]
		pinky,
		[Token(Token = "0x40009DB")]
		thumb
	}

	[Token(Token = "0x40009BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Header("General Settings")]
	public Animator animator;

	[Token(Token = "0x40009BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform ribs;

	[Token(Token = "0x40009BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform hips;

	[Token(Token = "0x40009BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform root;

	[Token(Token = "0x40009BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[Header("Rigs")]
	public Rig rightHandRig;

	[Token(Token = "0x40009C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Rig rightArmRig;

	[Token(Token = "0x40009C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Rig leftArmRig;

	[Token(Token = "0x40009C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public OverrideTransform upperBodyOverride;

	[Token(Token = "0x40009C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[Header("IK Targets")]
	public Transform rightIndexIKTarget;

	[Token(Token = "0x40009C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Transform rightMiddleIKTarget;

	[Token(Token = "0x40009C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Transform rightRingIKTarget;

	[Token(Token = "0x40009C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Transform rightPinkyIKTarget;

	[Token(Token = "0x40009C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Transform rightThumbIKTarget;

	[Token(Token = "0x40009C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[Header("_")]
	public Transform rightArmTarget;

	[Token(Token = "0x40009C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Transform leftArmTarget;

	[Token(Token = "0x40009CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public HandArmDistanceHandler handArmDistanceHandler;

	[Token(Token = "0x40009CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[HideInInspector]
	public Vector3 _defaultRootBonePosition_ls;

	[Token(Token = "0x40009CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	[HideInInspector]
	public Quaternion _defaultRootBoneRotation_ls;

	[Token(Token = "0x40009CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	[HideInInspector]
	public Vector3 _defaultRibsBoneToCameraJointPositionOffset_ws;

	[Token(Token = "0x40009CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	[HideInInspector]
	public Quaternion _defaultRibsBoneToCameraJointRotationOffset_ws;

	[Token(Token = "0x40009CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private int leanTweenId;

	[Token(Token = "0x40009D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static AnimController _instance;

	[Token(Token = "0x6000B1C")]
	[Address(RVA = "0x106C7AC", Offset = "0x106C7AC", VA = "0x106C7AC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000B1D")]
	[Address(RVA = "0x106C8F4", Offset = "0x106C8F4", VA = "0x106C8F4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000B1E")]
	[Address(RVA = "0x106CCE4", Offset = "0x106CCE4", VA = "0x106CCE4")]
	public static AnimController Instance()
	{
		return null;
	}

	[Token(Token = "0x6000B1F")]
	[Address(RVA = "0x106CA44", Offset = "0x106CA44", VA = "0x106CA44")]
	public void AdjustIKPositions(Transform[] fingers, [Optional] GrabInteractionSettings grabSettings)
	{
	}

	[Token(Token = "0x6000B20")]
	[Address(RVA = "0x106CD2C", Offset = "0x106CD2C", VA = "0x106CD2C")]
	public void WalkingAnims(float frontBack, float leftRight)
	{
	}

	[Token(Token = "0x6000B21")]
	[Address(RVA = "0x106CDC0", Offset = "0x106CDC0", VA = "0x106CDC0")]
	public void SetTrigger(string paramName)
	{
	}

	[Token(Token = "0x6000B22")]
	[Address(RVA = "0x106CDDC", Offset = "0x106CDDC", VA = "0x106CDDC")]
	public void SetTrigger(Animator _animator, string paramName)
	{
	}

	[Token(Token = "0x6000B23")]
	[Address(RVA = "0x106CDF8", Offset = "0x106CDF8", VA = "0x106CDF8")]
	public void SetBool(string paramName, bool enabled)
	{
	}

	[Token(Token = "0x6000B24")]
	[Address(RVA = "0x106CE54", Offset = "0x106CE54", VA = "0x106CE54")]
	public void SetFloat(string paramName, float value)
	{
	}

	[Token(Token = "0x6000B25")]
	[Address(RVA = "0x106CE70", Offset = "0x106CE70", VA = "0x106CE70")]
	public void SetFloat(Animator _animator, string paramName, float value)
	{
	}

	[Token(Token = "0x6000B26")]
	[Address(RVA = "0x106CE8C", Offset = "0x106CE8C", VA = "0x106CE8C")]
	public void SetInt(string paramName, int value)
	{
	}

	[Token(Token = "0x6000B27")]
	[Address(RVA = "0x106CEA8", Offset = "0x106CEA8", VA = "0x106CEA8")]
	public AnimController()
	{
	}
}
[Token(Token = "0x20001CC")]
public class Rotator : UpdatableMonoBehaviour, ISceneReferrable, ISerialisable, IDeserialisable
{
	[Token(Token = "0x20001CD")]
	private static class Keys
	{
		[Token(Token = "0x40009E5")]
		public const string Rotation = "rotation";
	}

	[Token(Token = "0x40009DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float speed;

	[Token(Token = "0x40009DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool ForwardX;

	[Token(Token = "0x40009DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	public bool ForwardY;

	[Token(Token = "0x40009DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x22")]
	public bool ForwardZ;

	[Token(Token = "0x40009E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x23")]
	public bool ReverseX;

	[Token(Token = "0x40009E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public bool ReverseY;

	[Token(Token = "0x40009E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x25")]
	public bool ReverseZ;

	[Token(Token = "0x40009E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Vector3 _rotationScale;

	[Token(Token = "0x40009E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Transform _transform;

	[Token(Token = "0x170000E6")]
	public string typeId
	{
		[Token(Token = "0x6000B2C")]
		[Address(RVA = "0x106D0B4", Offset = "0x106D0B4", VA = "0x106D0B4", Slot = "13")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000B29")]
	[Address(RVA = "0x106CECC", Offset = "0x106CECC", VA = "0x106CECC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000B2A")]
	[Address(RVA = "0x106CEF0", Offset = "0x106CEF0", VA = "0x106CEF0", Slot = "6")]
	public override bool Initialise()
	{
		return default(bool);
	}

	[Token(Token = "0x6000B2B")]
	[Address(RVA = "0x106CFB8", Offset = "0x106CFB8", VA = "0x106CFB8", Slot = "7")]
	public override void OnUpdate(float dt)
	{
	}

	[Token(Token = "0x6000B2D")]
	[Address(RVA = "0x106D0F4", Offset = "0x106D0F4", VA = "0x106D0F4", Slot = "12")]
	public bool Serialise(FlexBufferBuilder builder, ISceneObjectReferenceSerialiser objectSerialiser)
	{
		return default(bool);
	}

	[Token(Token = "0x6000B2E")]
	[Address(RVA = "0x106D178", Offset = "0x106D178", VA = "0x106D178", Slot = "14")]
	public bool Deserialise(FlexBuffer.Map root, ISceneObjectReferenceDeserialiser objectDeserialiser)
	{
		return default(bool);
	}

	[Token(Token = "0x6000B2F")]
	[Address(RVA = "0x106D220", Offset = "0x106D220", VA = "0x106D220")]
	public Rotator()
	{
	}
}
[Token(Token = "0x20001CE")]
public abstract class ActionBase : IAction
{
	[Token(Token = "0x40009E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[SerializeField]
	protected bool _debugLog;

	[Token(Token = "0x40009E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	[SerializeField]
	private ActionStatus _cachedStatus;

	[Token(Token = "0x40009E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private int _lastCacheFrameCount;

	[Token(Token = "0x40009E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private List<Callback_b> _extraConditionsForAvailableStatus;

	[Token(Token = "0x6000B30")]
	public abstract ActionProperties GetProperties();

	[Token(Token = "0x6000B31")]
	[Address(RVA = "0x106D280", Offset = "0x106D280", VA = "0x106D280", Slot = "7")]
	public bool IsVisible()
	{
		return default(bool);
	}

	[Token(Token = "0x6000B32")]
	[Address(RVA = "0x106D3B0", Offset = "0x106D3B0", VA = "0x106D3B0", Slot = "8")]
	public bool IsAvailable()
	{
		return default(bool);
	}

	[Token(Token = "0x6000B33")]
	[Address(RVA = "0x106D2B4", Offset = "0x106D2B4", VA = "0x106D2B4", Slot = "6")]
	public ActionStatus GetStatus()
	{
		return default(ActionStatus);
	}

	[Token(Token = "0x6000B34")]
	[Address(RVA = "0x106D3C8", Offset = "0x106D3C8", VA = "0x106D3C8", Slot = "13")]
	public virtual InteractableItem GetInteractableItem()
	{
		return null;
	}

	[Token(Token = "0x6000B35")]
	[Address(RVA = "0x106D3D0", Offset = "0x106D3D0", VA = "0x106D3D0", Slot = "14")]
	protected virtual ActionStatus GetStatus_Internal()
	{
		return default(ActionStatus);
	}

	[Token(Token = "0x6000B36")]
	[Address(RVA = "0x106D3D8", Offset = "0x106D3D8", VA = "0x106D3D8", Slot = "15")]
	public virtual void Trigger()
	{
	}

	[Token(Token = "0x6000B37")]
	[Address(RVA = "0x106D3DC", Offset = "0x106D3DC", VA = "0x106D3DC", Slot = "10")]
	public void AddExtraConditionForAvailableStatus(Callback_b condition)
	{
	}

	[Token(Token = "0x6000B38")]
	[Address(RVA = "0x106D48C", Offset = "0x106D48C", VA = "0x106D48C", Slot = "11")]
	public void RemoveExtraConditionForAvailableStatus(Callback_b condition)
	{
	}

	[Token(Token = "0x6000B39")]
	[Address(RVA = "0x106D4E4", Offset = "0x106D4E4", VA = "0x106D4E4")]
	protected ActionBase()
	{
	}
}
[Token(Token = "0x20001CF")]
public enum ActionId
{
	[Token(Token = "0x40009EB")]
	NONE,
	[Token(Token = "0x40009EC")]
	PLACE,
	[Token(Token = "0x40009ED")]
	DROP,
	[Token(Token = "0x40009EE")]
	THROW,
	[Token(Token = "0x40009EF")]
	ENTER_CONSOLE_MIXER,
	[Token(Token = "0x40009F0")]
	ENTER_PINBOARD,
	[Token(Token = "0x40009F1")]
	ENTER_RECORD_DRAWER,
	[Token(Token = "0x40009F2")]
	EXIT_CONSOLE_MIXER,
	[Token(Token = "0x40009F3")]
	EXIT_PINBOARD,
	[Token(Token = "0x40009F4")]
	EXIT_RECORD_DRAWER,
	[Token(Token = "0x40009F5")]
	INSERT_CARTRIDGE_INTO_PLAYER,
	[Token(Token = "0x40009F6")]
	INSERT_RECORD_INTO_PLAYER,
	[Token(Token = "0x40009F7")]
	INSPECT,
	[Token(Token = "0x40009F8")]
	INVENTORY,
	[Token(Token = "0x40009F9")]
	KICK,
	[Token(Token = "0x40009FA")]
	OPEN_DOOR_AND_ENTER,
	[Token(Token = "0x40009FB")]
	PICK_UP,
	[Token(Token = "0x40009FC")]
	PRESS_BUTTON,
	[Token(Token = "0x40009FD")]
	SIT_DOWN,
	[Token(Token = "0x40009FE")]
	STAND_UP,
	[Token(Token = "0x40009FF")]
	STOW,
	[Token(Token = "0x4000A00")]
	SWITCH_OFF,
	[Token(Token = "0x4000A01")]
	SWITCH_ON,
	[Token(Token = "0x4000A02")]
	TAKE_OUT_CARTRIDGE_FROM_PLAYER,
	[Token(Token = "0x4000A03")]
	TAKE_OUT_RECORD_FROM_PLAYER,
	[Token(Token = "0x4000A04")]
	UNLOCK,
	[Token(Token = "0x4000A05")]
	UNSTOW,
	[Token(Token = "0x4000A06")]
	USE_SLIDER,
	[Token(Token = "0x4000A07")]
	ZOOM,
	[Token(Token = "0x4000A08")]
	COUNT
}
[Token(Token = "0x20001D0")]
public enum ActionStatus
{
	[Token(Token = "0x4000A0A")]
	GREYED_OUT,
	[Token(Token = "0x4000A0B")]
	UNAVAILABLE,
	[Token(Token = "0x4000A0C")]
	AVAILABLE,
	[Token(Token = "0x4000A0D")]
	COUNT
}
[Token(Token = "0x20001D1")]
public enum ActionInputType
{
	[Token(Token = "0x4000A0F")]
	PRESS_DOWN,
	[Token(Token = "0x4000A10")]
	CLICK,
	[Token(Token = "0x4000A11")]
	HOLD,
	[Token(Token = "0x4000A12")]
	LONG_HOLD
}
[Serializable]
[Token(Token = "0x20001D2")]
public struct ActionProperties
{
	[Token(Token = "0x170000E7")]
	public ActionId Id
	{
		[Token(Token = "0x6000B3A")]
		[Address(RVA = "0x106D574", Offset = "0x106D574", VA = "0x106D574")]
		[CompilerGenerated]
		readonly get
		{
			return default(ActionId);
		}
		[Token(Token = "0x6000B3B")]
		[Address(RVA = "0x106D57C", Offset = "0x106D57C", VA = "0x106D57C")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x170000E8")]
	public ActionInputCategory InputCategory
	{
		[Token(Token = "0x6000B3C")]
		[Address(RVA = "0x106D584", Offset = "0x106D584", VA = "0x106D584")]
		[CompilerGenerated]
		readonly get
		{
			return default(ActionInputCategory);
		}
		[Token(Token = "0x6000B3D")]
		[Address(RVA = "0x106D58C", Offset = "0x106D58C", VA = "0x106D58C")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x170000E9")]
	public ActionInputType InputType
	{
		[Token(Token = "0x6000B3E")]
		[Address(RVA = "0x106D594", Offset = "0x106D594", VA = "0x106D594")]
		[CompilerGenerated]
		readonly get
		{
			return default(ActionInputType);
		}
		[Token(Token = "0x6000B3F")]
		[Address(RVA = "0x106D59C", Offset = "0x106D59C", VA = "0x106D59C")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x170000EA")]
	public ActionStringHandle StringHandle
	{
		[Token(Token = "0x6000B40")]
		[Address(RVA = "0x106D5A4", Offset = "0x106D5A4", VA = "0x106D5A4")]
		[CompilerGenerated]
		readonly get
		{
			return default(ActionStringHandle);
		}
		[Token(Token = "0x6000B41")]
		[Address(RVA = "0x106D5AC", Offset = "0x106D5AC", VA = "0x106D5AC")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x6000B42")]
	[Address(RVA = "0x106D5B4", Offset = "0x106D5B4", VA = "0x106D5B4")]
	public ActionProperties(ActionId id, ActionInputCategory inputCategory, ActionInputType inputType, ActionStringHandle stringHandle)
	{
	}
}
[Token(Token = "0x20001D3")]
public delegate void Callback_v();
[Token(Token = "0x20001D4")]
public delegate bool Callback_b();
[Token(Token = "0x20001D5")]
public delegate void Callback_vF(float value);
[Token(Token = "0x20001D6")]
public interface IAction
{
	[Token(Token = "0x6000B4F")]
	InteractableItem GetInteractableItem();

	[Token(Token = "0x6000B50")]
	ActionProperties GetProperties();

	[Token(Token = "0x6000B51")]
	ActionStatus GetStatus();

	[Token(Token = "0x6000B52")]
	bool IsVisible();

	[Token(Token = "0x6000B53")]
	bool IsAvailable();

	[Token(Token = "0x6000B54")]
	void Trigger();

	[Token(Token = "0x6000B55")]
	void AddExtraConditionForAvailableStatus(Callback_b condition);

	[Token(Token = "0x6000B56")]
	void RemoveExtraConditionForAvailableStatus(Callback_b condition);
}
[Token(Token = "0x20001D7")]
public abstract class InteractionBase : MonoBehaviour, IAction
{
	[Serializable]
	[Token(Token = "0x20001D8")]
	protected struct Conditions
	{
		[Token(Token = "0x4000A20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public InteractionConditionBase[] extraConditionsForAvailableStatus;
	}

	[Token(Token = "0x4000A17")]
	private const int _maxStackLimit = 3;

	[Token(Token = "0x4000A18")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	protected Conditions _conditions;

	[Token(Token = "0x4000A19")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	protected bool _debugLog;

	[Token(Token = "0x4000A1C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private ActionStatus _cachedStatus;

	[Token(Token = "0x4000A1D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private int _lastCacheFrameCount;

	[Token(Token = "0x4000A1F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private List<Callback_b> _extraConditionsForAvailableStatus;

	[Token(Token = "0x170000EB")]
	protected bool IsInProgress
	{
		[Token(Token = "0x6000B57")]
		[Address(RVA = "0x106D970", Offset = "0x106D970", VA = "0x106D970")]
		[CompilerGenerated]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000B58")]
		[Address(RVA = "0x106D978", Offset = "0x106D978", VA = "0x106D978")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x170000EC")]
	public InteractableItem _InteractableItem
	{
		[Token(Token = "0x6000B59")]
		[Address(RVA = "0x106D984", Offset = "0x106D984", VA = "0x106D984")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x6000B5A")]
		[Address(RVA = "0x106D98C", Offset = "0x106D98C", VA = "0x106D98C")]
		[CompilerGenerated]
		protected set
		{
		}
	}

	[Token(Token = "0x14000008")]
	public event Callback_v _onFinishedCallback
	{
		[Token(Token = "0x6000B66")]
		[Address(RVA = "0x106E0C8", Offset = "0x106E0C8", VA = "0x106E0C8")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000B67")]
		[Address(RVA = "0x106E164", Offset = "0x106E164", VA = "0x106E164")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x6000B5B")]
	[Address(RVA = "0x106D994", Offset = "0x106D994", VA = "0x106D994", Slot = "12")]
	protected virtual void Awake()
	{
	}

	[Token(Token = "0x6000B5C")]
	[Address(RVA = "0x106DCBC", Offset = "0x106DCBC", VA = "0x106DCBC", Slot = "4")]
	public InteractableItem GetInteractableItem()
	{
		return null;
	}

	[Token(Token = "0x6000B5D")]
	public abstract ActionProperties GetProperties();

	[Token(Token = "0x6000B5E")]
	[Address(RVA = "0x106DCC4", Offset = "0x106DCC4", VA = "0x106DCC4", Slot = "7")]
	public bool IsVisible()
	{
		return default(bool);
	}

	[Token(Token = "0x6000B5F")]
	[Address(RVA = "0x106DDF4", Offset = "0x106DDF4", VA = "0x106DDF4", Slot = "8")]
	public bool IsAvailable()
	{
		return default(bool);
	}

	[Token(Token = "0x6000B60")]
	[Address(RVA = "0x106DCF8", Offset = "0x106DCF8", VA = "0x106DCF8", Slot = "6")]
	public ActionStatus GetStatus()
	{
		return default(ActionStatus);
	}

	[Token(Token = "0x6000B61")]
	[Address(RVA = "0x106DE0C", Offset = "0x106DE0C", VA = "0x106DE0C", Slot = "14")]
	protected virtual ActionStatus GetStatus_Internal()
	{
		return default(ActionStatus);
	}

	[Token(Token = "0x6000B62")]
	[Address(RVA = "0x106DE14", Offset = "0x106DE14", VA = "0x106DE14", Slot = "9")]
	public void Trigger()
	{
	}

	[Token(Token = "0x6000B63")]
	protected abstract void Handle();

	[Token(Token = "0x6000B64")]
	[Address(RVA = "0x106DF4C", Offset = "0x106DF4C", VA = "0x106DF4C")]
	protected void FinishInBase()
	{
	}

	[Token(Token = "0x6000B65")]
	[Address(RVA = "0x106E0C0", Offset = "0x106E0C0", VA = "0x106E0C0", Slot = "16")]
	public virtual bool HandleAnimEvent(InteractionAnimEvent animEvent)
	{
		return default(bool);
	}

	[Token(Token = "0x6000B68")]
	[Address(RVA = "0x106DC0C", Offset = "0x106DC0C", VA = "0x106DC0C", Slot = "10")]
	public void AddExtraConditionForAvailableStatus(Callback_b condition)
	{
	}

	[Token(Token = "0x6000B69")]
	[Address(RVA = "0x106E200", Offset = "0x106E200", VA = "0x106E200", Slot = "11")]
	public void RemoveExtraConditionForAvailableStatus(Callback_b condition)
	{
	}

	[Token(Token = "0x6000B6A")]
	[Address(RVA = "0x106E258", Offset = "0x106E258", VA = "0x106E258")]
	protected InteractionBase()
	{
	}
}
[Serializable]
[Token(Token = "0x20001D9")]
public abstract class InteractionConditionBase : MonoBehaviour
{
	[Token(Token = "0x4000A21")]
	public const bool _debugLog = false;

	[Token(Token = "0x6000B6B")]
	public abstract bool IsSatisfied();

	[Token(Token = "0x6000B6C")]
	[Address(RVA = "0x106E2E8", Offset = "0x106E2E8", VA = "0x106E2E8")]
	protected InteractionConditionBase()
	{
	}
}
[Token(Token = "0x20001DA")]
public struct LastDockData
{
	[Token(Token = "0x4000A22")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public InteractionDockBase dock;

	[Token(Token = "0x4000A23")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public Vector3 localPosition;

	[Token(Token = "0x4000A24")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public Quaternion localRotation;

	[Token(Token = "0x4000A25")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public Vector3 localScale;

	[Token(Token = "0x4000A26")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform parentTransform;

	[Token(Token = "0x4000A27")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public int slotId;
}
[Token(Token = "0x20001DB")]
public abstract class InteractionDockBase : MonoBehaviour
{
	[Token(Token = "0x4000A28")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<InteractableItem> _currentlyDockedItems;

	[Token(Token = "0x6000B6D")]
	[Address(RVA = "0x106E2F0", Offset = "0x106E2F0", VA = "0x106E2F0", Slot = "4")]
	protected virtual void Start()
	{
	}

	[Token(Token = "0x6000B6E")]
	public abstract bool CanDockItem(InteractableItem itemToDock, RaycastHit raycastHit);

	[Token(Token = "0x6000B6F")]
	[Address(RVA = "0x106E454", Offset = "0x106E454", VA = "0x106E454", Slot = "6")]
	protected virtual void OnItemStartedInDock(InteractableItem item)
	{
	}

	[Token(Token = "0x6000B70")]
	[Address(RVA = "0x106E458", Offset = "0x106E458", VA = "0x106E458", Slot = "7")]
	public virtual void DockItem(InteractableItem itemToDock, RaycastHit raycastHit)
	{
	}

	[Token(Token = "0x6000B71")]
	[Address(RVA = "0x106E51C", Offset = "0x106E51C", VA = "0x106E51C", Slot = "8")]
	public virtual void ReturnItem(InteractableItem itemToReturn)
	{
	}

	[Token(Token = "0x6000B72")]
	[Address(RVA = "0x106E5E0", Offset = "0x106E5E0", VA = "0x106E5E0", Slot = "9")]
	public virtual void UndockItem(InteractableItem itemToUndock)
	{
	}

	[Token(Token = "0x6000B73")]
	[Address(RVA = "0x106E6E4", Offset = "0x106E6E4", VA = "0x106E6E4")]
	protected InteractionDockBase()
	{
	}
}
[Token(Token = "0x20001DC")]
public abstract class InteractionScopeBase : MonoBehaviour
{
	[Token(Token = "0x4000A29")]
	private const int _maxStackLimit = 3;

	[Token(Token = "0x4000A2A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	protected bool _debugLog;

	[Token(Token = "0x4000A2B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	protected List<InteractableItem> _scopeItems;

	[Token(Token = "0x4000A2C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	protected ActionPrioritizer.ActionFilter _actionFilter;

	[Token(Token = "0x4000A2E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[HideInInspector]
	public InteractionBase _exitInteraction;

	[Token(Token = "0x170000ED")]
	public InteractableItem _InteractableItem
	{
		[Token(Token = "0x6000B74")]
		[Address(RVA = "0x106E76C", Offset = "0x106E76C", VA = "0x106E76C")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x6000B75")]
		[Address(RVA = "0x106E774", Offset = "0x106E774", VA = "0x106E774")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x6000B76")]
	protected abstract void HandleScopeEnter();

	[Token(Token = "0x6000B77")]
	protected abstract void HandleScopeExit();

	[Token(Token = "0x6000B78")]
	[Address(RVA = "0x106E77C", Offset = "0x106E77C", VA = "0x106E77C", Slot = "6")]
	protected virtual void Awake()
	{
	}

	[Token(Token = "0x6000B79")]
	[Address(RVA = "0x106E838", Offset = "0x106E838", VA = "0x106E838", Slot = "7")]
	public virtual bool IsRoot()
	{
		return default(bool);
	}

	[Token(Token = "0x6000B7A")]
	[Address(RVA = "0x106E840", Offset = "0x106E840", VA = "0x106E840")]
	public void TriggerScopeEnter()
	{
	}

	[Token(Token = "0x6000B7B")]
	[Address(RVA = "0x106EC70", Offset = "0x106EC70", VA = "0x106EC70")]
	public void TriggerScopeExit()
	{
	}

	[Token(Token = "0x6000B7C")]
	[Address(RVA = "0x106ED74", Offset = "0x106ED74", VA = "0x106ED74")]
	protected void OnScopeEnterFinished()
	{
	}

	[Token(Token = "0x6000B7D")]
	[Address(RVA = "0x106ED78", Offset = "0x106ED78", VA = "0x106ED78")]
	protected void OnScopeExitFinished()
	{
	}

	[Token(Token = "0x6000B7E")]
	[Address(RVA = "0x106EE84", Offset = "0x106EE84", VA = "0x106EE84")]
	public void AddItemToListOfScopeItems(InteractableItem item)
	{
	}

	[Token(Token = "0x6000B7F")]
	[Address(RVA = "0x106EF6C", Offset = "0x106EF6C", VA = "0x106EF6C")]
	public void RemoveItemFromListOfScopeItems(InteractableItem item)
	{
	}

	[Token(Token = "0x6000B80")]
	[Address(RVA = "0x106EFFC", Offset = "0x106EFFC", VA = "0x106EFFC")]
	protected InteractionScopeBase()
	{
	}
}
[Token(Token = "0x20001DD")]
public abstract class InventoryInteractionBase : InteractionBase
{
	[Token(Token = "0x20001DE")]
	[CompilerGenerated]
	private sealed class <StowUnstow>d__21 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000A39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000A3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000A3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public InventoryInteractionBase <>4__this;

		[Token(Token = "0x4000A3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Animator <animator>5__2;

		[Token(Token = "0x4000A3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool <stillPlaying>5__3;

		[Token(Token = "0x170000F0")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000B90")]
			[Address(RVA = "0x106F8AC", Offset = "0x106F8AC", VA = "0x106F8AC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000F1")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000B92")]
			[Address(RVA = "0x106F8F4", Offset = "0x106F8F4", VA = "0x106F8F4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000B8D")]
		[Address(RVA = "0x106F488", Offset = "0x106F488", VA = "0x106F488")]
		[DebuggerHidden]
		public <StowUnstow>d__21(int <>1__state)
		{
		}

		[Token(Token = "0x6000B8E")]
		[Address(RVA = "0x106F5C4", Offset = "0x106F5C4", VA = "0x106F5C4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000B8F")]
		[Address(RVA = "0x106F5C8", Offset = "0x106F5C8", VA = "0x106F5C8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000B91")]
		[Address(RVA = "0x106F8B4", Offset = "0x106F8B4", VA = "0x106F8B4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000A2F")]
	protected const ActionInputCategory _inputCategory = ActionInputCategory.INVENTORY;

	[Token(Token = "0x4000A30")]
	protected const ActionInputType _inputType = ActionInputType.PRESS_DOWN;

	[Token(Token = "0x4000A31")]
	private const string _unstowAnimationStateName = "Unstow";

	[Token(Token = "0x4000A32")]
	private const string _stowAnimationStateName = "Stow";

	[Token(Token = "0x4000A35")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool _attached;

	[Token(Token = "0x4000A36")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Coroutine _coroutine;

	[Token(Token = "0x4000A37")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private ActionPrioritizer.ActionFilter _actionFilter;

	[Token(Token = "0x4000A38")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private string _stowUnstowParameterName;

	[Token(Token = "0x170000EE")]
	private static int _unstowAnimationStateNameHash
	{
		[Token(Token = "0x6000B81")]
		[Address(RVA = "0x106F084", Offset = "0x106F084", VA = "0x106F084")]
		[CompilerGenerated]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x170000EF")]
	private static int _stowAnimationStateNameHash
	{
		[Token(Token = "0x6000B82")]
		[Address(RVA = "0x106F0DC", Offset = "0x106F0DC", VA = "0x106F0DC")]
		[CompilerGenerated]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x6000B83")]
	[Address(RVA = "0x106F134", Offset = "0x106F134", VA = "0x106F134", Slot = "12")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x6000B84")]
	[Address(RVA = "0x106F298", Offset = "0x106F298", VA = "0x106F298", Slot = "15")]
	protected override void Handle()
	{
	}

	[Token(Token = "0x6000B85")]
	[Address(RVA = "0x106F388", Offset = "0x106F388", VA = "0x106F388", Slot = "16")]
	public override bool HandleAnimEvent(InteractionAnimEvent animEvent)
	{
		return default(bool);
	}

	[Token(Token = "0x6000B86")]
	protected abstract void OnAttached();

	[Token(Token = "0x6000B87")]
	[Address(RVA = "0x106F310", Offset = "0x106F310", VA = "0x106F310")]
	protected void OnStarted()
	{
	}

	[Token(Token = "0x6000B88")]
	[Address(RVA = "0x106F420", Offset = "0x106F420", VA = "0x106F420")]
	protected void OnFinished()
	{
	}

	[Token(Token = "0x6000B89")]
	[Address(RVA = "0x106F424", Offset = "0x106F424", VA = "0x106F424")]
	public void Cancel()
	{
	}

	[Token(Token = "0x6000B8A")]
	[Address(RVA = "0x106F314", Offset = "0x106F314", VA = "0x106F314")]
	[IteratorStateMachine(typeof(<StowUnstow>d__21))]
	public IEnumerator StowUnstow()
	{
		return null;
	}

	[Token(Token = "0x6000B8B")]
	[Address(RVA = "0x106F4B0", Offset = "0x106F4B0", VA = "0x106F4B0")]
	protected InventoryInteractionBase()
	{
	}
}
[Token(Token = "0x20001DF")]
[RequireComponent(typeof(SwitchState))]
public abstract class SwitchInteractionBase : InteractionBase
{
	[Token(Token = "0x4000A3E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private PlayerLookInputMode _previousLookInputMode;

	[Token(Token = "0x4000A3F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private PlayerStates _previousPlayerState;

	[Token(Token = "0x4000A40")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	protected SwitchState _switchState;

	[Token(Token = "0x4000A41")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private GenericSwipeSegment _swipeSegment;

	[Token(Token = "0x14000009")]
	public event Callback_v _onSwitchedCallback
	{
		[Token(Token = "0x6000B9B")]
		[Address(RVA = "0x106FB80", Offset = "0x106FB80", VA = "0x106FB80")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000B9C")]
		[Address(RVA = "0x106FC1C", Offset = "0x106FC1C", VA = "0x106FC1C")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x6000B93")]
	[Address(RVA = "0x106F8FC", Offset = "0x106F8FC", VA = "0x106F8FC", Slot = "12")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x6000B94")]
	[Address(RVA = "0x106F9B0", Offset = "0x106F9B0", VA = "0x106F9B0", Slot = "14")]
	protected override ActionStatus GetStatus_Internal()
	{
		return default(ActionStatus);
	}

	[Token(Token = "0x6000B95")]
	[Address(RVA = "0x106FA4C", Offset = "0x106FA4C", VA = "0x106FA4C")]
	public void SetInitialSwitchState(bool value)
	{
	}

	[Token(Token = "0x6000B96")]
	[Address(RVA = "0x106FA6C", Offset = "0x106FA6C", VA = "0x106FA6C", Slot = "15")]
	protected override void Handle()
	{
	}

	[Token(Token = "0x6000B97")]
	[Address(RVA = "0x106FB14", Offset = "0x106FB14", VA = "0x106FB14", Slot = "17")]
	protected virtual void Switch()
	{
	}

	[Token(Token = "0x6000B98")]
	[Address(RVA = "0x106FB10", Offset = "0x106FB10", VA = "0x106FB10")]
	private void OnStarted()
	{
	}

	[Token(Token = "0x6000B99")]
	[Address(RVA = "0x106FB30", Offset = "0x106FB30", VA = "0x106FB30")]
	private void OnFinished()
	{
	}

	[Token(Token = "0x6000B9A")]
	[Address(RVA = "0x106FB34", Offset = "0x106FB34", VA = "0x106FB34", Slot = "16")]
	public override bool HandleAnimEvent(InteractionAnimEvent animEvent)
	{
		return default(bool);
	}

	[Token(Token = "0x6000B9D")]
	[Address(RVA = "0x106FCB8", Offset = "0x106FCB8", VA = "0x106FCB8")]
	protected SwitchInteractionBase()
	{
	}
}
[Serializable]
[Token(Token = "0x20001E0")]
[AddComponentMenu("Interaction Conditions/View Cone Interaction Condition")]
[DisallowMultipleComponent]
public class ViewConeCondition : InteractionConditionBase
{
	[Token(Token = "0x4000A43")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private float _maxDistance;

	[Token(Token = "0x4000A44")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	[Range(0f, 90f)]
	private float _maxHorizontalAngle;

	[Token(Token = "0x4000A45")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	[Range(0f, 90f)]
	private float _maxVerticalAngle;

	[Token(Token = "0x4000A46")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	private bool _mirrorCone;

	[Token(Token = "0x4000A47")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private float _FPSCameraGroundDistance;

	[Token(Token = "0x4000A48")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Transform _pivot;

	[Token(Token = "0x6000B9E")]
	[Address(RVA = "0x106FCBC", Offset = "0x106FCBC", VA = "0x106FCBC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000B9F")]
	[Address(RVA = "0x106FD18", Offset = "0x106FD18", VA = "0x106FD18", Slot = "4")]
	public override bool IsSatisfied()
	{
		return default(bool);
	}

	[Token(Token = "0x6000BA0")]
	[Address(RVA = "0x10703DC", Offset = "0x10703DC", VA = "0x10703DC")]
	public ViewConeCondition()
	{
	}
}
[Token(Token = "0x20001E1")]
public enum ActionInputCategory : byte
{
	[Token(Token = "0x4000A4A")]
	NONE,
	[Token(Token = "0x4000A4B")]
	CANCEL,
	[Token(Token = "0x4000A4C")]
	CROUCH,
	[Token(Token = "0x4000A4D")]
	CUSTOM_ITEM,
	[Token(Token = "0x4000A4E")]
	CUSTOM_GENERIC,
	[Token(Token = "0x4000A4F")]
	INSPECT,
	[Token(Token = "0x4000A50")]
	LEFT_HAND,
	[Token(Token = "0x4000A51")]
	MAIN,
	[Token(Token = "0x4000A52")]
	INVENTORY,
	[Token(Token = "0x4000A53")]
	COUNT
}
[Token(Token = "0x20001E2")]
public class ActionPrioritizer : MonoBehaviour
{
	[Token(Token = "0x20001E3")]
	public class ActionFilter
	{
		[Token(Token = "0x20001E4")]
		public enum Type
		{
			[Token(Token = "0x4000A5E")]
			Allowed,
			[Token(Token = "0x4000A5F")]
			Banned
		}

		[Token(Token = "0x4000A5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public HashSet<ActionId> _actionIds;

		[Token(Token = "0x4000A5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Type _type;

		[Token(Token = "0x6000BB3")]
		[Address(RVA = "0x106F520", Offset = "0x106F520", VA = "0x106F520")]
		public ActionFilter()
		{
		}
	}

	[Token(Token = "0x20001E5")]
	private class HeldButtonRecord
	{
		[Token(Token = "0x4000A60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public IAction _action;

		[Token(Token = "0x4000A61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float _pressTime;

		[Token(Token = "0x6000BB4")]
		[Address(RVA = "0x1072430", Offset = "0x1072430", VA = "0x1072430")]
		public HeldButtonRecord(IAction action, float pressTime)
		{
		}
	}

	[Token(Token = "0x20001E6")]
	private delegate bool Conditions(IAction action);

	[Token(Token = "0x4000A54")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private UIData _UIData;

	[Token(Token = "0x4000A55")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private IAction[] _selectedActions;

	[Token(Token = "0x4000A56")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool[] _filteredOutActions;

	[Token(Token = "0x4000A57")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private List<IAction> _externalActionCandidates;

	[Token(Token = "0x4000A58")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private List<ActionFilter> _filterStack;

	[Token(Token = "0x4000A59")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private List<HeldButtonRecord> _heldButtonRecords;

	[Token(Token = "0x4000A5A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static ActionPrioritizer _instance;

	[Token(Token = "0x6000BA1")]
	[Address(RVA = "0x10703E4", Offset = "0x10703E4", VA = "0x10703E4")]
	public static ActionPrioritizer Instance()
	{
		return null;
	}

	[Token(Token = "0x6000BA2")]
	[Address(RVA = "0x107042C", Offset = "0x107042C", VA = "0x107042C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000BA3")]
	[Address(RVA = "0x1070570", Offset = "0x1070570", VA = "0x1070570")]
	private void Update()
	{
	}

	[Token(Token = "0x6000BA4")]
	[Address(RVA = "0x1071754", Offset = "0x1071754", VA = "0x1071754")]
	public void AddExternalActionCandidate(IAction action)
	{
	}

	[Token(Token = "0x6000BA5")]
	[Address(RVA = "0x10717B0", Offset = "0x10717B0", VA = "0x10717B0")]
	public void RemoveExternalActionCandidate(IAction action)
	{
	}

	[Token(Token = "0x6000BA6")]
	[Address(RVA = "0x1071808", Offset = "0x1071808", VA = "0x1071808")]
	public void AddActionFilter(ActionFilter filter)
	{
	}

	[Token(Token = "0x6000BA7")]
	[Address(RVA = "0x10718B8", Offset = "0x10718B8", VA = "0x10718B8")]
	public void RemoveActionFilter(ActionFilter filter)
	{
	}

	[Token(Token = "0x6000BA8")]
	[Address(RVA = "0x1071910", Offset = "0x1071910", VA = "0x1071910")]
	public bool IsActionAvailable(IAction action)
	{
		return default(bool);
	}

	[Token(Token = "0x6000BA9")]
	[Address(RVA = "0x1070590", Offset = "0x1070590", VA = "0x1070590")]
	private void ResetUIData()
	{
	}

	[Token(Token = "0x6000BAA")]
	[Address(RVA = "0x1071A30", Offset = "0x1071A30", VA = "0x1071A30")]
	private void SelectBestInteractionOnItem(UIActions uiAction, InteractableItem item, Conditions conditions)
	{
	}

	[Token(Token = "0x6000BAB")]
	[Address(RVA = "0x1071BF4", Offset = "0x1071BF4", VA = "0x1071BF4")]
	private void SelectBestAction(UIActions uiAction, IAction[] actionCandidates, Conditions conditions)
	{
	}

	[Token(Token = "0x6000BAC")]
	[Address(RVA = "0x10706A8", Offset = "0x10706A8", VA = "0x10706A8")]
	private void SelectUIActions()
	{
	}

	[Token(Token = "0x6000BAD")]
	[Address(RVA = "0x1071F88", Offset = "0x1071F88", VA = "0x1071F88")]
	private void AssignAction(UIActions uiAction, IAction action)
	{
	}

	[Token(Token = "0x6000BAE")]
	[Address(RVA = "0x107213C", Offset = "0x107213C", VA = "0x107213C")]
	private void AssignItemTitle(UIItemTitles uiItemTitle, InteractableItem item)
	{
	}

	[Token(Token = "0x6000BAF")]
	[Address(RVA = "0x107217C", Offset = "0x107217C", VA = "0x107217C")]
	private void TryToSetItem(ref InteractableItem item, UIActions UIAction)
	{
	}

	[Token(Token = "0x6000BB0")]
	[Address(RVA = "0x1071598", Offset = "0x1071598", VA = "0x1071598")]
	private void AssignUIData()
	{
	}

	[Token(Token = "0x6000BB1")]
	[Address(RVA = "0x1071750", Offset = "0x1071750", VA = "0x1071750")]
	private void ProcessInput()
	{
	}

	[Token(Token = "0x6000BB2")]
	[Address(RVA = "0x10722A0", Offset = "0x10722A0", VA = "0x10722A0")]
	public ActionPrioritizer()
	{
	}
}
[Token(Token = "0x20001EA")]
[DisallowMultipleComponent]
public sealed class InteractableItem : MonoBehaviour
{
	[Token(Token = "0x4000A6E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private InteractionScopeBase _initialScope;

	[Token(Token = "0x4000A6F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Collider _interactableCollider;

	[Token(Token = "0x4000A70")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ObjectStringHandle _stringHandle;

	[Token(Token = "0x4000A71")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[Header("Run-time data")]
	public bool stored;

	[Token(Token = "0x4000A72")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D")]
	public bool _debugLog;

	[Token(Token = "0x4000A73")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public InteractionScopeBase _debugScope;

	[Token(Token = "0x4000A74")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private List<InteractionBase> _interactions;

	[Token(Token = "0x4000A75")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public InteractionDockBase _currentlyDockedIn;

	[Token(Token = "0x4000A76")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public LastDockData _lastDockData;

	[Token(Token = "0x170000F2")]
	public Cartridge Cartridge
	{
		[Token(Token = "0x6000BC9")]
		[Address(RVA = "0x107303C", Offset = "0x107303C", VA = "0x107303C")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x6000BCA")]
		[Address(RVA = "0x1073044", Offset = "0x1073044", VA = "0x1073044")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x170000F3")]
	public InteractionDockBase Dock
	{
		[Token(Token = "0x6000BCB")]
		[Address(RVA = "0x107304C", Offset = "0x107304C", VA = "0x107304C")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x6000BCC")]
		[Address(RVA = "0x1073054", Offset = "0x1073054", VA = "0x1073054")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x170000F4")]
	public RecordSleeve RecordSleeve
	{
		[Token(Token = "0x6000BCD")]
		[Address(RVA = "0x107305C", Offset = "0x107305C", VA = "0x107305C")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x6000BCE")]
		[Address(RVA = "0x1073064", Offset = "0x1073064", VA = "0x1073064")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x170000F5")]
	public Rigidbody Rigidbody
	{
		[Token(Token = "0x6000BCF")]
		[Address(RVA = "0x107306C", Offset = "0x107306C", VA = "0x107306C")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x6000BD0")]
		[Address(RVA = "0x1073074", Offset = "0x1073074", VA = "0x1073074")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x170000F6")]
	public InteractionScopeBase Scope
	{
		[Token(Token = "0x6000BD1")]
		[Address(RVA = "0x107307C", Offset = "0x107307C", VA = "0x107307C")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x6000BD2")]
		[Address(RVA = "0x1073084", Offset = "0x1073084", VA = "0x1073084")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x170000F7")]
	public GrabInteractionSettings GrabSettings
	{
		[Token(Token = "0x6000BD3")]
		[Address(RVA = "0x107308C", Offset = "0x107308C", VA = "0x107308C")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x6000BD4")]
		[Address(RVA = "0x1073094", Offset = "0x1073094", VA = "0x1073094")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x170000F8")]
	public Collider InteractableCollider
	{
		[Token(Token = "0x6000BD5")]
		[Address(RVA = "0x107309C", Offset = "0x107309C", VA = "0x107309C")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000BD6")]
		[Address(RVA = "0x10730A4", Offset = "0x10730A4", VA = "0x10730A4")]
		private set
		{
		}
	}

	[Token(Token = "0x6000BD7")]
	[Address(RVA = "0x10730AC", Offset = "0x10730AC", VA = "0x10730AC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000BD8")]
	[Address(RVA = "0x1073298", Offset = "0x1073298", VA = "0x1073298")]
	private void Start()
	{
	}

	[Token(Token = "0x6000BD9")]
	[Address(RVA = "0x10734C0", Offset = "0x10734C0", VA = "0x10734C0")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000BDA")]
	[Address(RVA = "0x10734C8", Offset = "0x10734C8", VA = "0x10734C8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000BDB")]
	[Address(RVA = "0x10734E0", Offset = "0x10734E0", VA = "0x10734E0")]
	public void SetGrabSettings(GrabInteractionSettings grabSettings)
	{
	}

	[Token(Token = "0x6000BDC")]
	[Address(RVA = "0x10733AC", Offset = "0x10733AC", VA = "0x10733AC")]
	public void SetScope(InteractionScopeBase newScope)
	{
	}

	[Token(Token = "0x6000BDD")]
	[Address(RVA = "0x10734E8", Offset = "0x10734E8", VA = "0x10734E8")]
	public void DisableRigidBody()
	{
	}

	[Token(Token = "0x6000BDE")]
	[Address(RVA = "0x10735CC", Offset = "0x10735CC", VA = "0x10735CC")]
	public void EnableRigidBody()
	{
	}

	[Token(Token = "0x6000BDF")]
	[Address(RVA = "0x106E9D4", Offset = "0x106E9D4", VA = "0x106E9D4")]
	public void UpdateInteractableCollider()
	{
	}

	[Token(Token = "0x6000BE0")]
	[Address(RVA = "0x106DADC", Offset = "0x106DADC", VA = "0x106DADC")]
	public void AddInteraction(InteractionBase interaction)
	{
	}

	[Token(Token = "0x6000BE1")]
	[Address(RVA = "0x10736B0", Offset = "0x10736B0", VA = "0x10736B0")]
	public InteractionBase GetInteraction(ActionId interactionId)
	{
		return null;
	}

	[Token(Token = "0x6000BE2")]
	[Address(RVA = "0x1071B9C", Offset = "0x1071B9C", VA = "0x1071B9C")]
	public InteractionBase GetInteraction(int index)
	{
		return null;
	}

	[Token(Token = "0x6000BE3")]
	[Address(RVA = "0x1071B54", Offset = "0x1071B54", VA = "0x1071B54")]
	public int GetInteractionsCount()
	{
		return default(int);
	}

	[Token(Token = "0x6000BE4")]
	[Address(RVA = "0x1073780", Offset = "0x1073780", VA = "0x1073780")]
	public void GetInteractionStatuses(out List<ActionId> ids, out List<ActionStatus> statuses)
	{
	}

	[Token(Token = "0x6000BE5")]
	[Address(RVA = "0x10739C8", Offset = "0x10739C8", VA = "0x10739C8")]
	public InteractableItem()
	{
	}
}
[Token(Token = "0x20001EC")]
public class InventoryManager : MonoBehaviour
{
	[Token(Token = "0x20001ED")]
	public class InventoryAction : ActionBase
	{
		[Token(Token = "0x4000A84")]
		private const ActionId _actionId = ActionId.INVENTORY;

		[Token(Token = "0x4000A85")]
		private const ActionInputCategory _actionInputCategory = ActionInputCategory.INVENTORY;

		[Token(Token = "0x4000A86")]
		private const ActionInputType _actionInputType = ActionInputType.CLICK;

		[Token(Token = "0x6000BF9")]
		[Address(RVA = "0x10753BC", Offset = "0x10753BC", VA = "0x10753BC", Slot = "12")]
		public override ActionProperties GetProperties()
		{
			return default(ActionProperties);
		}

		[Token(Token = "0x6000BFA")]
		[Address(RVA = "0x1075578", Offset = "0x1075578", VA = "0x1075578", Slot = "14")]
		protected override ActionStatus GetStatus_Internal()
		{
			return default(ActionStatus);
		}

		[Token(Token = "0x6000BFB")]
		[Address(RVA = "0x1075814", Offset = "0x1075814", VA = "0x1075814", Slot = "15")]
		public override void Trigger()
		{
		}

		[Token(Token = "0x6000BFC")]
		[Address(RVA = "0x1075868", Offset = "0x1075868", VA = "0x1075868")]
		public void TriggerOnSlot(int slotId)
		{
		}

		[Token(Token = "0x6000BFD")]
		[Address(RVA = "0x1074CEC", Offset = "0x1074CEC", VA = "0x1074CEC")]
		public InventoryAction()
		{
		}
	}

	[Token(Token = "0x4000A7F")]
	public const int _numberOfSlots = 5;

	[Token(Token = "0x4000A80")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	[Header("Run-time Data")]
	private InteractableItem[] _slots;

	[Token(Token = "0x4000A81")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private int _selectedSlotId;

	[Token(Token = "0x4000A82")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private InventoryAction _inventoryAction;

	[Token(Token = "0x4000A83")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static InventoryManager _instance;

	[Token(Token = "0x6000BE9")]
	[Address(RVA = "0x1074B80", Offset = "0x1074B80", VA = "0x1074B80")]
	public static InventoryManager Instance()
	{
		return null;
	}

	[Token(Token = "0x6000BEA")]
	[Address(RVA = "0x1074BC8", Offset = "0x1074BC8", VA = "0x1074BC8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000BEB")]
	[Address(RVA = "0x1074CF4", Offset = "0x1074CF4", VA = "0x1074CF4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000BEC")]
	[Address(RVA = "0x1074CF8", Offset = "0x1074CF8", VA = "0x1074CF8")]
	public void Update()
	{
	}

	[Token(Token = "0x6000BED")]
	[Address(RVA = "0x1074CFC", Offset = "0x1074CFC", VA = "0x1074CFC")]
	private void SwitchToSlot(int slotId)
	{
	}

	[Token(Token = "0x6000BEE")]
	[Address(RVA = "0x1074D00", Offset = "0x1074D00", VA = "0x1074D00")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000BEF")]
	[Address(RVA = "0x1074D04", Offset = "0x1074D04", VA = "0x1074D04")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000BF0")]
	[Address(RVA = "0x1074D08", Offset = "0x1074D08", VA = "0x1074D08")]
	private void SelectSlotId(int slotId)
	{
	}

	[Token(Token = "0x6000BF1")]
	[Address(RVA = "0x1074D10", Offset = "0x1074D10", VA = "0x1074D10")]
	public void AddItemToCurrentSlot(InteractableItem interactableItem)
	{
	}

	[Token(Token = "0x6000BF2")]
	[Address(RVA = "0x1074E80", Offset = "0x1074E80", VA = "0x1074E80")]
	public void RemoveItemFromSlot(InteractableItem interactableItem)
	{
	}

	[Token(Token = "0x6000BF3")]
	[Address(RVA = "0x1074F64", Offset = "0x1074F64", VA = "0x1074F64")]
	public void StowItem(InteractableItem interactableItem)
	{
	}

	[Token(Token = "0x6000BF4")]
	[Address(RVA = "0x1075014", Offset = "0x1075014", VA = "0x1075014")]
	public void UnstowItem(InteractableItem interactableItem)
	{
	}

	[Token(Token = "0x6000BF5")]
	[Address(RVA = "0x1074EB8", Offset = "0x1074EB8", VA = "0x1074EB8")]
	public int GetSlotIdForItem(InteractableItem item)
	{
		return default(int);
	}

	[Token(Token = "0x6000BF6")]
	[Address(RVA = "0x10750B0", Offset = "0x10750B0", VA = "0x10750B0")]
	private bool IsInventoryEmpty()
	{
		return default(bool);
	}

	[Token(Token = "0x6000BF7")]
	[Address(RVA = "0x107515C", Offset = "0x107515C", VA = "0x107515C")]
	private int GetNextSlotId(int slotId)
	{
		return default(int);
	}

	[Token(Token = "0x6000BF8")]
	[Address(RVA = "0x1075358", Offset = "0x1075358", VA = "0x1075358")]
	public InventoryManager()
	{
	}
}
[Token(Token = "0x20001EE")]
public class CartridgeRackSingleItemDock : CartridgeSingleItemDock
{
	[Token(Token = "0x170000F9")]
	public CartridgeRack _CartridgeRack
	{
		[Token(Token = "0x6000BFE")]
		[Address(RVA = "0x1075CE8", Offset = "0x1075CE8", VA = "0x1075CE8")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x6000BFF")]
		[Address(RVA = "0x1075CF0", Offset = "0x1075CF0", VA = "0x1075CF0")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x6000C00")]
	[Address(RVA = "0x1075CF8", Offset = "0x1075CF8", VA = "0x1075CF8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000C01")]
	[Address(RVA = "0x1075D8C", Offset = "0x1075D8C", VA = "0x1075D8C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000C02")]
	[Address(RVA = "0x1075E94", Offset = "0x1075E94", VA = "0x1075E94", Slot = "9")]
	public override void UndockItem(InteractableItem itemToUndock)
	{
	}

	[Token(Token = "0x6000C03")]
	[Address(RVA = "0x1075F80", Offset = "0x1075F80", VA = "0x1075F80")]
	public CartridgeRackSingleItemDock()
	{
	}
}
[Token(Token = "0x20001EF")]
public class CartridgeSingleItemDock : InteractionDockBase
{
	[Token(Token = "0x4000A88")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool _deactivateDockedItem;

	[Token(Token = "0x4000A89")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public InteractionScopeBase _dockedItemScope;

	[Token(Token = "0x6000C04")]
	[Address(RVA = "0x1075F90", Offset = "0x1075F90", VA = "0x1075F90", Slot = "5")]
	public override bool CanDockItem(InteractableItem itemToDock, RaycastHit raycastHit)
	{
		return default(bool);
	}

	[Token(Token = "0x6000C05")]
	[Address(RVA = "0x1076028", Offset = "0x1076028", VA = "0x1076028", Slot = "6")]
	protected override void OnItemStartedInDock(InteractableItem item)
	{
	}

	[Token(Token = "0x6000C06")]
	[Address(RVA = "0x10760EC", Offset = "0x10760EC", VA = "0x10760EC", Slot = "7")]
	public override void DockItem(InteractableItem itemToDock, RaycastHit raycastHit)
	{
	}

	[Token(Token = "0x6000C07")]
	[Address(RVA = "0x107627C", Offset = "0x107627C", VA = "0x107627C", Slot = "8")]
	public override void ReturnItem(InteractableItem itemToReturn)
	{
	}

	[Token(Token = "0x6000C08")]
	[Address(RVA = "0x1075EBC", Offset = "0x1075EBC", VA = "0x1075EBC", Slot = "9")]
	public override void UndockItem(InteractableItem itemToUndock)
	{
	}

	[Token(Token = "0x6000C09")]
	[Address(RVA = "0x1075F88", Offset = "0x1075F88", VA = "0x1075F88")]
	public CartridgeSingleItemDock()
	{
	}
}
[Token(Token = "0x20001F0")]
public class PinboardDock : InteractionDockBase
{
	[Token(Token = "0x4000A8A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public InteractableItem[] _itemsAllowedToDock;

	[Token(Token = "0x6000C0A")]
	[Address(RVA = "0x1076390", Offset = "0x1076390", VA = "0x1076390", Slot = "5")]
	public override bool CanDockItem(InteractableItem itemToDock, RaycastHit raycastHit)
	{
		return default(bool);
	}

	[Token(Token = "0x6000C0B")]
	[Address(RVA = "0x1076448", Offset = "0x1076448", VA = "0x1076448", Slot = "7")]
	public override void DockItem(InteractableItem itemToDock, RaycastHit raycastHit)
	{
	}

	[Token(Token = "0x6000C0C")]
	[Address(RVA = "0x1076544", Offset = "0x1076544", VA = "0x1076544", Slot = "9")]
	public override void UndockItem(InteractableItem itemToUndock)
	{
	}

	[Token(Token = "0x6000C0D")]
	[Address(RVA = "0x107654C", Offset = "0x107654C", VA = "0x107654C", Slot = "8")]
	public override void ReturnItem(InteractableItem itemToReturn)
	{
	}

	[Token(Token = "0x6000C0E")]
	[Address(RVA = "0x10765E0", Offset = "0x10765E0", VA = "0x10765E0")]
	public PinboardDock()
	{
	}
}
[Token(Token = "0x20001F1")]
public class RecordDrawerDock : InteractionDockBase
{
	[Token(Token = "0x4000A8B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int _itemsLimit;

	[Token(Token = "0x4000A8C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private RecordDrawer _recordDrawer;

	[Token(Token = "0x4000A8D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public InteractionScopeBase _dockedItemScope;

	[Token(Token = "0x170000FA")]
	public InteractableItem _InteractableItem
	{
		[Token(Token = "0x6000C0F")]
		[Address(RVA = "0x10765E8", Offset = "0x10765E8", VA = "0x10765E8")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x6000C10")]
		[Address(RVA = "0x10765F0", Offset = "0x10765F0", VA = "0x10765F0")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x6000C11")]
	[Address(RVA = "0x10765F8", Offset = "0x10765F8", VA = "0x10765F8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000C12")]
	[Address(RVA = "0x107668C", Offset = "0x107668C", VA = "0x107668C")]
	public void SetRecordDrawer(RecordDrawer recordDrawer)
	{
	}

	[Token(Token = "0x6000C13")]
	[Address(RVA = "0x1076694", Offset = "0x1076694", VA = "0x1076694", Slot = "5")]
	public override bool CanDockItem(InteractableItem itemToDock, RaycastHit raycastHit)
	{
		return default(bool);
	}

	[Token(Token = "0x6000C14")]
	[Address(RVA = "0x1076730", Offset = "0x1076730", VA = "0x1076730", Slot = "6")]
	protected override void OnItemStartedInDock(InteractableItem item)
	{
	}

	[Token(Token = "0x6000C15")]
	[Address(RVA = "0x10767FC", Offset = "0x10767FC", VA = "0x10767FC")]
	public void DockItem(InteractableItem itemToDock, RaycastHit raycastHit, int slotIndex)
	{
	}

	[Token(Token = "0x6000C16")]
	[Address(RVA = "0x1076964", Offset = "0x1076964", VA = "0x1076964", Slot = "7")]
	public override void DockItem(InteractableItem itemToDock, RaycastHit raycastHit)
	{
	}

	[Token(Token = "0x6000C17")]
	[Address(RVA = "0x1076858", Offset = "0x1076858", VA = "0x1076858")]
	private void DockItem_Internal(InteractableItem itemToDock, RaycastHit raycastHit)
	{
	}

	[Token(Token = "0x6000C18")]
	[Address(RVA = "0x10769B8", Offset = "0x10769B8", VA = "0x10769B8", Slot = "9")]
	public override void UndockItem(InteractableItem itemToUndock)
	{
	}

	[Token(Token = "0x6000C19")]
	[Address(RVA = "0x1076A8C", Offset = "0x1076A8C", VA = "0x1076A8C", Slot = "8")]
	public override void ReturnItem(InteractableItem itemToReturn)
	{
	}

	[Token(Token = "0x6000C1A")]
	[Address(RVA = "0x1076BC4", Offset = "0x1076BC4", VA = "0x1076BC4")]
	public RecordDrawerDock()
	{
	}
}
[Token(Token = "0x20001F2")]
public class RecordSleeveSingleItemDock : InteractionDockBase
{
	[Token(Token = "0x6000C1B")]
	[Address(RVA = "0x1076BCC", Offset = "0x1076BCC", VA = "0x1076BCC", Slot = "5")]
	public override bool CanDockItem(InteractableItem itemToDock, RaycastHit raycastHit)
	{
		return default(bool);
	}

	[Token(Token = "0x6000C1C")]
	[Address(RVA = "0x1076C64", Offset = "0x1076C64", VA = "0x1076C64", Slot = "6")]
	protected override void OnItemStartedInDock(InteractableItem item)
	{
	}

	[Token(Token = "0x6000C1D")]
	[Address(RVA = "0x1076C8C", Offset = "0x1076C8C", VA = "0x1076C8C", Slot = "7")]
	public override void DockItem(InteractableItem itemToDock, RaycastHit raycastHit)
	{
	}

	[Token(Token = "0x6000C1E")]
	[Address(RVA = "0x1076D94", Offset = "0x1076D94", VA = "0x1076D94", Slot = "8")]
	public override void ReturnItem(InteractableItem itemToReturn)
	{
	}

	[Token(Token = "0x6000C1F")]
	[Address(RVA = "0x1076E20", Offset = "0x1076E20", VA = "0x1076E20", Slot = "9")]
	public override void UndockItem(InteractableItem itemToUndock)
	{
	}

	[Token(Token = "0x6000C20")]
	[Address(RVA = "0x1076E48", Offset = "0x1076E48", VA = "0x1076E48")]
	public RecordSleeveSingleItemDock()
	{
	}
}
[Token(Token = "0x20001F3")]
public class SingleItemDock : InteractionDockBase
{
	[Token(Token = "0x6000C21")]
	[Address(RVA = "0x1076E50", Offset = "0x1076E50", VA = "0x1076E50", Slot = "5")]
	public override bool CanDockItem(InteractableItem itemToDock, RaycastHit raycastHit)
	{
		return default(bool);
	}

	[Token(Token = "0x6000C22")]
	[Address(RVA = "0x1076EA0", Offset = "0x1076EA0", VA = "0x1076EA0", Slot = "7")]
	public override void DockItem(InteractableItem itemToDock, RaycastHit raycastHit)
	{
	}

	[Token(Token = "0x6000C23")]
	[Address(RVA = "0x1076FC4", Offset = "0x1076FC4", VA = "0x1076FC4", Slot = "8")]
	public override void ReturnItem(InteractableItem itemToDock)
	{
	}

	[Token(Token = "0x6000C24")]
	[Address(RVA = "0x10770C8", Offset = "0x10770C8", VA = "0x10770C8")]
	public SingleItemDock()
	{
	}
}
[Token(Token = "0x20001F4")]
public class TableDock : InteractionDockBase
{
	[Token(Token = "0x6000C25")]
	[Address(RVA = "0x10770D0", Offset = "0x10770D0", VA = "0x10770D0", Slot = "5")]
	public override bool CanDockItem(InteractableItem itemToDock, RaycastHit raycastHit)
	{
		return default(bool);
	}

	[Token(Token = "0x6000C26")]
	[Address(RVA = "0x1077110", Offset = "0x1077110", VA = "0x1077110", Slot = "7")]
	public override void DockItem(InteractableItem itemToDock, RaycastHit raycastHit)
	{
	}

	[Token(Token = "0x6000C27")]
	[Address(RVA = "0x1077170", Offset = "0x1077170", VA = "0x1077170", Slot = "9")]
	public override void UndockItem(InteractableItem itemToUndock)
	{
	}

	[Token(Token = "0x6000C28")]
	[Address(RVA = "0x10771B8", Offset = "0x10771B8", VA = "0x10771B8", Slot = "8")]
	public override void ReturnItem(InteractableItem itemToReturn)
	{
	}

	[Token(Token = "0x6000C29")]
	[Address(RVA = "0x1077200", Offset = "0x1077200", VA = "0x1077200")]
	public TableDock()
	{
	}
}
[Token(Token = "0x20001F5")]
[DisallowMultipleComponent]
[AddComponentMenu("Interactions/Helpers/Grab Settings")]
public class GrabInteractionSettings : MonoBehaviour
{
	[Token(Token = "0x4000A8F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform[] _prebakedFingerPos;

	[Token(Token = "0x4000A90")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AnimController.ObjectGripAnimation _itemGrabAnimation;

	[Token(Token = "0x4000A91")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public AnimController.ObjectPickUpHand _itemPickUpHand;

	[Token(Token = "0x4000A92")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int weight;

	[Token(Token = "0x4000A93")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform _objectToWristTransform;

	[Token(Token = "0x4000A94")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform _shoulderToWristTransform;

	[Token(Token = "0x6000C2A")]
	[Address(RVA = "0x1077208", Offset = "0x1077208", VA = "0x1077208")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000C2B")]
	[Address(RVA = "0x10772C8", Offset = "0x10772C8", VA = "0x10772C8")]
	public GrabInteractionSettings()
	{
	}
}
[Token(Token = "0x20001F6")]
[ExecuteInEditMode]
[RequireComponent(typeof(InspectInteraction))]
[AddComponentMenu("Interactions/Helpers/Inspect Settings")]
[DisallowMultipleComponent]
public class InspectInteractionSettings : MonoBehaviour
{
	[Token(Token = "0x4000A95")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Header("Certain settings only available in Play Mode")]
	public bool _spottedClue;

	[Token(Token = "0x4000A96")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float _timeToSpotClue;

	[Token(Token = "0x4000A97")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float clueLocationRangeIncrease;

	[Token(Token = "0x4000A98")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[HideInInspector]
	public float _clueLocation;

	[Token(Token = "0x6000C2C")]
	[Address(RVA = "0x10772D0", Offset = "0x10772D0", VA = "0x10772D0")]
	public Vector2 GetClueLocationRange()
	{
		return default(Vector2);
	}

	[Token(Token = "0x6000C2D")]
	[Address(RVA = "0x1077300", Offset = "0x1077300", VA = "0x1077300")]
	public InspectInteractionSettings()
	{
	}
}
[Token(Token = "0x20001F7")]
[DisallowMultipleComponent]
[AddComponentMenu("Interactions/Helpers/Inventory Settings")]
public class InventoryInteractionSettings : MonoBehaviour
{
	[Token(Token = "0x4000A99")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string _shortcut;

	[Token(Token = "0x6000C2E")]
	[Address(RVA = "0x1077314", Offset = "0x1077314", VA = "0x1077314")]
	public InventoryInteractionSettings()
	{
	}
}
[Token(Token = "0x20001F8")]
[DisallowMultipleComponent]
[AddComponentMenu("Interactions/Helpers/Switch State")]
public class SwitchState : MonoBehaviour
{
	[Token(Token = "0x4000A9A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool _isOn;

	[Token(Token = "0x6000C2F")]
	[Address(RVA = "0x107731C", Offset = "0x107731C", VA = "0x107731C")]
	public SwitchState()
	{
	}
}
[Token(Token = "0x20001F9")]
[DisallowMultipleComponent]
[AddComponentMenu("Interactions/Drop")]
public class DropInteraction : InteractionBase
{
	[Token(Token = "0x4000A9B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private ActionStringHandle _overriddenStringHandle;

	[Token(Token = "0x4000A9C")]
	private const ActionId _id = ActionId.DROP;

	[Token(Token = "0x4000A9D")]
	private const ActionInputCategory _inputCategory = ActionInputCategory.MAIN;

	[Token(Token = "0x4000A9E")]
	private const ActionInputType _inputType = ActionInputType.CLICK;

	[Token(Token = "0x4000A9F")]
	private const ActionStringHandle _defaultStringHandle = ActionStringHandle.DROP;

	[Token(Token = "0x6000C30")]
	[Address(RVA = "0x1077324", Offset = "0x1077324", VA = "0x1077324", Slot = "13")]
	public override ActionProperties GetProperties()
	{
		return default(ActionProperties);
	}

	[Token(Token = "0x6000C31")]
	[Address(RVA = "0x1077368", Offset = "0x1077368", VA = "0x1077368", Slot = "12")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x6000C32")]
	[Address(RVA = "0x1077420", Offset = "0x1077420", VA = "0x1077420", Slot = "14")]
	protected override ActionStatus GetStatus_Internal()
	{
		return default(ActionStatus);
	}

	[Token(Token = "0x6000C33")]
	[Address(RVA = "0x10774E8", Offset = "0x10774E8", VA = "0x10774E8", Slot = "15")]
	protected override void Handle()
	{
	}

	[Token(Token = "0x6000C34")]
	[Address(RVA = "0x1077504", Offset = "0x1077504", VA = "0x1077504")]
	private void Drop()
	{
	}

	[Token(Token = "0x6000C35")]
	[Address(RVA = "0x1077584", Offset = "0x1077584", VA = "0x1077584")]
	public DropInteraction()
	{
	}
}
[Token(Token = "0x20001FA")]
[DisallowMultipleComponent]
[AddComponentMenu("Interactions/Enter Console Mixer")]
[RequireComponent(typeof(ExitConsoleMixerInteraction))]
public class EnterConsoleMixerInteraction : InteractionBase
{
	[Token(Token = "0x4000AA0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private ActionStringHandle _overriddenStringHandle;

	[Token(Token = "0x4000AA1")]
	private const ActionId _id = ActionId.ENTER_CONSOLE_MIXER;

	[Token(Token = "0x4000AA2")]
	private const ActionInputCategory _inputCategory = ActionInputCategory.MAIN;

	[Token(Token = "0x4000AA3")]
	private const ActionInputType _inputType = ActionInputType.PRESS_DOWN;

	[Token(Token = "0x4000AA4")]
	private const ActionStringHandle _defaultStringHandle = ActionStringHandle.ENTER_CONSOLE_MIXER;

	[Token(Token = "0x4000AA5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Transform deskLocation;

	[Token(Token = "0x4000AA6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public float transitionTime;

	[Token(Token = "0x4000AA7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private ConsoleMixerScope _scope;

	[Token(Token = "0x6000C36")]
	[Address(RVA = "0x107758C", Offset = "0x107758C", VA = "0x107758C", Slot = "13")]
	public override ActionProperties GetProperties()
	{
		return default(ActionProperties);
	}

	[Token(Token = "0x6000C37")]
	[Address(RVA = "0x10775D0", Offset = "0x10775D0", VA = "0x10775D0", Slot = "14")]
	protected override ActionStatus GetStatus_Internal()
	{
		return default(ActionStatus);
	}

	[Token(Token = "0x6000C38")]
	[Address(RVA = "0x10776A8", Offset = "0x10776A8", VA = "0x10776A8", Slot = "12")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x6000C39")]
	[Address(RVA = "0x1077748", Offset = "0x1077748", VA = "0x1077748", Slot = "15")]
	protected override void Handle()
	{
	}

	[Token(Token = "0x6000C3A")]
	[Address(RVA = "0x1077A6C", Offset = "0x1077A6C", VA = "0x1077A6C")]
	private void OnFinished()
	{
	}

	[Token(Token = "0x6000C3B")]
	[Address(RVA = "0x1077A74", Offset = "0x1077A74", VA = "0x1077A74")]
	public EnterConsoleMixerInteraction()
	{
	}
}
[Token(Token = "0x20001FC")]
[RequireComponent(typeof(ExitPinboardInteraction))]
[DisallowMultipleComponent]
[AddComponentMenu("Interactions/Enter Pinboard")]
public class EnterPinboardInteraction : InteractionBase
{
	[Token(Token = "0x4000AAB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private ActionStringHandle _overriddenStringHandle;

	[Token(Token = "0x4000AAC")]
	private const ActionId _id = ActionId.ENTER_PINBOARD;

	[Token(Token = "0x4000AAD")]
	private const ActionInputCategory _inputCategory = ActionInputCategory.MAIN;

	[Token(Token = "0x4000AAE")]
	private const ActionInputType _inputType = ActionInputType.PRESS_DOWN;

	[Token(Token = "0x4000AAF")]
	private const ActionStringHandle _defaultStringHandle = ActionStringHandle.ENTER_PINBOARD;

	[Token(Token = "0x4000AB0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public AlignmentHelper _alignmentHelper;

	[Token(Token = "0x4000AB1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private InteractionScopeBase _scope;

	[Token(Token = "0x6000C40")]
	[Address(RVA = "0x1077BC8", Offset = "0x1077BC8", VA = "0x1077BC8", Slot = "13")]
	public override ActionProperties GetProperties()
	{
		return default(ActionProperties);
	}

	[Token(Token = "0x6000C41")]
	[Address(RVA = "0x1077C0C", Offset = "0x1077C0C", VA = "0x1077C0C", Slot = "12")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x6000C42")]
	[Address(RVA = "0x1077CBC", Offset = "0x1077CBC", VA = "0x1077CBC", Slot = "15")]
	protected override void Handle()
	{
	}

	[Token(Token = "0x6000C43")]
	[Address(RVA = "0x1077CC0", Offset = "0x1077CC0", VA = "0x1077CC0")]
	private void OnAlignmentFinished(bool interrupted)
	{
	}

	[Token(Token = "0x6000C44")]
	[Address(RVA = "0x1077CF0", Offset = "0x1077CF0", VA = "0x1077CF0")]
	private void OnFinished()
	{
	}

	[Token(Token = "0x6000C45")]
	[Address(RVA = "0x1077CF8", Offset = "0x1077CF8", VA = "0x1077CF8")]
	public EnterPinboardInteraction()
	{
	}
}
[Token(Token = "0x20001FD")]
[RequireComponent(typeof(ExitRecordDrawerInteraction))]
[AddComponentMenu("Interactions/Enter Record Drawer")]
[DisallowMultipleComponent]
public class EnterRecordDrawerInteraction : InteractionBase
{
	[Token(Token = "0x4000AB2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private ActionStringHandle _overriddenStringHandle;

	[Token(Token = "0x4000AB3")]
	private const ActionId _id = ActionId.ENTER_RECORD_DRAWER;

	[Token(Token = "0x4000AB4")]
	private const ActionInputCategory _inputCategory = ActionInputCategory.MAIN;

	[Token(Token = "0x4000AB5")]
	private const ActionInputType _inputType = ActionInputType.PRESS_DOWN;

	[Token(Token = "0x4000AB6")]
	private const ActionStringHandle _defaultStringHandle = ActionStringHandle.OPEN_RECORD_DRAWER;

	[Token(Token = "0x4000AB7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private InteractionScopeBase _scope;

	[Token(Token = "0x6000C46")]
	[Address(RVA = "0x1077D00", Offset = "0x1077D00", VA = "0x1077D00", Slot = "13")]
	public override ActionProperties GetProperties()
	{
		return default(ActionProperties);
	}

	[Token(Token = "0x6000C47")]
	[Address(RVA = "0x1077D44", Offset = "0x1077D44", VA = "0x1077D44", Slot = "14")]
	protected override ActionStatus GetStatus_Internal()
	{
		return default(ActionStatus);
	}

	[Token(Token = "0x6000C48")]
	[Address(RVA = "0x1077E24", Offset = "0x1077E24", VA = "0x1077E24", Slot = "12")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x6000C49")]
	[Address(RVA = "0x1077EC4", Offset = "0x1077EC4", VA = "0x1077EC4", Slot = "15")]
	protected override void Handle()
	{
	}

	[Token(Token = "0x6000C4A")]
	[Address(RVA = "0x1077F68", Offset = "0x1077F68", VA = "0x1077F68")]
	private void OnFinished()
	{
	}

	[Token(Token = "0x6000C4B")]
	[Address(RVA = "0x1077F70", Offset = "0x1077F70", VA = "0x1077F70")]
	public EnterRecordDrawerInteraction()
	{
	}
}
[Token(Token = "0x20001FE")]
[AddComponentMenu("Interactions/Exit Console Mixer")]
[DisallowMultipleComponent]
public class ExitConsoleMixerInteraction : InteractionBase
{
	[Token(Token = "0x4000AB8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private ActionStringHandle _overriddenStringHandle;

	[Token(Token = "0x4000AB9")]
	private const ActionId _id = ActionId.EXIT_CONSOLE_MIXER;

	[Token(Token = "0x4000ABA")]
	private const ActionInputCategory _inputCategory = ActionInputCategory.CANCEL;

	[Token(Token = "0x4000ABB")]
	private const ActionInputType _inputType = ActionInputType.PRESS_DOWN;

	[Token(Token = "0x4000ABC")]
	private const ActionStringHandle _defaultStringHandle = ActionStringHandle.EXIT_CONSOLE_MIXER;

	[Token(Token = "0x4000ABD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private InteractionScopeBase _scope;

	[Token(Token = "0x4000ABE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Transform chairLocation;

	[Token(Token = "0x4000ABF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public float transitionTime;

	[Token(Token = "0x6000C4C")]
	[Address(RVA = "0x1077F78", Offset = "0x1077F78", VA = "0x1077F78", Slot = "13")]
	public override ActionProperties GetProperties()
	{
		return default(ActionProperties);
	}

	[Token(Token = "0x6000C4D")]
	[Address(RVA = "0x1077FBC", Offset = "0x1077FBC", VA = "0x1077FBC", Slot = "14")]
	protected override ActionStatus GetStatus_Internal()
	{
		return default(ActionStatus);
	}

	[Token(Token = "0x6000C4E")]
	[Address(RVA = "0x107816C", Offset = "0x107816C", VA = "0x107816C", Slot = "12")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x6000C4F")]
	[Address(RVA = "0x1078224", Offset = "0x1078224", VA = "0x1078224", Slot = "15")]
	protected override void Handle()
	{
	}

	[Token(Token = "0x6000C50")]
	[Address(RVA = "0x1078544", Offset = "0x1078544", VA = "0x1078544")]
	private void OnFinished()
	{
	}

	[Token(Token = "0x6000C51")]
	[Address(RVA = "0x107854C", Offset = "0x107854C", VA = "0x107854C")]
	public ExitConsoleMixerInteraction()
	{
	}
}
[Token(Token = "0x2000200")]
[AddComponentMenu("Interactions/Exit Pinboard")]
[DisallowMultipleComponent]
public class ExitPinboardInteraction : InteractionBase
{
	[Token(Token = "0x2000201")]
	[CompilerGenerated]
	private sealed class <InteractionUpdate>d__15 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000ACC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000ACD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000ACE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ExitPinboardInteraction <>4__this;

		[Token(Token = "0x4000ACF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private InteractionHandler <interactionHandler>5__2;

		[Token(Token = "0x170000FB")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000C63")]
			[Address(RVA = "0x1078DD8", Offset = "0x1078DD8", VA = "0x1078DD8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000FC")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000C65")]
			[Address(RVA = "0x1078E20", Offset = "0x1078E20", VA = "0x1078E20", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000C60")]
		[Address(RVA = "0x10789F4", Offset = "0x10789F4", VA = "0x10789F4")]
		[DebuggerHidden]
		public <InteractionUpdate>d__15(int <>1__state)
		{
		}

		[Token(Token = "0x6000C61")]
		[Address(RVA = "0x1078B80", Offset = "0x1078B80", VA = "0x1078B80", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000C62")]
		[Address(RVA = "0x1078B84", Offset = "0x1078B84", VA = "0x1078B84", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000C64")]
		[Address(RVA = "0x1078DE0", Offset = "0x1078DE0", VA = "0x1078DE0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000202")]
	[CompilerGenerated]
	private sealed class <ReturnHeldItem>d__16 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000AD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000AD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000AD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public InteractableItem carriedItem;

		[Token(Token = "0x4000AD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public ExitPinboardInteraction <>4__this;

		[Token(Token = "0x170000FD")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000C69")]
			[Address(RVA = "0x10793AC", Offset = "0x10793AC", VA = "0x10793AC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000FE")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000C6B")]
			[Address(RVA = "0x10793F4", Offset = "0x10793F4", VA = "0x10793F4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000C66")]
		[Address(RVA = "0x1078AAC", Offset = "0x1078AAC", VA = "0x1078AAC")]
		[DebuggerHidden]
		public <ReturnHeldItem>d__16(int <>1__state)
		{
		}

		[Token(Token = "0x6000C67")]
		[Address(RVA = "0x1078E28", Offset = "0x1078E28", VA = "0x1078E28", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000C68")]
		[Address(RVA = "0x1078E2C", Offset = "0x1078E2C", VA = "0x1078E2C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000C6A")]
		[Address(RVA = "0x10793B4", Offset = "0x10793B4", VA = "0x10793B4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000203")]
	[CompilerGenerated]
	private sealed class <WaitForItemToReturn>d__17 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000AD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000AD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000AD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ExitPinboardInteraction <>4__this;

		[Token(Token = "0x4000AD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <startTime>5__2;

		[Token(Token = "0x170000FF")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000C6F")]
			[Address(RVA = "0x1079488", Offset = "0x1079488", VA = "0x1079488", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000100")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000C71")]
			[Address(RVA = "0x10794D0", Offset = "0x10794D0", VA = "0x10794D0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000C6C")]
		[Address(RVA = "0x1078B48", Offset = "0x1078B48", VA = "0x1078B48")]
		[DebuggerHidden]
		public <WaitForItemToReturn>d__17(int <>1__state)
		{
		}

		[Token(Token = "0x6000C6D")]
		[Address(RVA = "0x10793FC", Offset = "0x10793FC", VA = "0x10793FC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000C6E")]
		[Address(RVA = "0x1079400", Offset = "0x1079400", VA = "0x1079400", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000C70")]
		[Address(RVA = "0x1079490", Offset = "0x1079490", VA = "0x1079490", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000AC3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private ActionStringHandle _overriddenStringHandle;

	[Token(Token = "0x4000AC4")]
	private const ActionId _id = ActionId.EXIT_PINBOARD;

	[Token(Token = "0x4000AC5")]
	private const ActionInputCategory _inputCategory = ActionInputCategory.CANCEL;

	[Token(Token = "0x4000AC6")]
	private const ActionInputType _inputType = ActionInputType.PRESS_DOWN;

	[Token(Token = "0x4000AC7")]
	private const ActionStringHandle _defaultStringHandle = ActionStringHandle.EXIT_PINBOARD;

	[Token(Token = "0x4000AC8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private InteractionScopeBase _scope;

	[Token(Token = "0x4000AC9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private InteractableItem _cachedCarriedItem;

	[Token(Token = "0x4000ACA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private GenericPlaceBackSegment _placeBackSegment;

	[Token(Token = "0x4000ACB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private bool _heldItemReturned;

	[Token(Token = "0x6000C56")]
	[Address(RVA = "0x10786A0", Offset = "0x10786A0", VA = "0x10786A0", Slot = "13")]
	public override ActionProperties GetProperties()
	{
		return default(ActionProperties);
	}

	[Token(Token = "0x6000C57")]
	[Address(RVA = "0x10786E4", Offset = "0x10786E4", VA = "0x10786E4", Slot = "14")]
	protected override ActionStatus GetStatus_Internal()
	{
		return default(ActionStatus);
	}

	[Token(Token = "0x6000C58")]
	[Address(RVA = "0x1078894", Offset = "0x1078894", VA = "0x1078894", Slot = "12")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x6000C59")]
	[Address(RVA = "0x107894C", Offset = "0x107894C", VA = "0x107894C", Slot = "15")]
	protected override void Handle()
	{
	}

	[Token(Token = "0x6000C5A")]
	[Address(RVA = "0x10789E0", Offset = "0x10789E0", VA = "0x10789E0")]
	private void OnHeldItemReturned()
	{
	}

	[Token(Token = "0x6000C5B")]
	[Address(RVA = "0x10789EC", Offset = "0x10789EC", VA = "0x10789EC")]
	private void OnFinished()
	{
	}

	[Token(Token = "0x6000C5C")]
	[Address(RVA = "0x107896C", Offset = "0x107896C", VA = "0x107896C")]
	[IteratorStateMachine(typeof(<InteractionUpdate>d__15))]
	private IEnumerator InteractionUpdate()
	{
		return null;
	}

	[Token(Token = "0x6000C5D")]
	[Address(RVA = "0x1078A1C", Offset = "0x1078A1C", VA = "0x1078A1C")]
	[IteratorStateMachine(typeof(<ReturnHeldItem>d__16))]
	private IEnumerator ReturnHeldItem(InteractableItem carriedItem)
	{
		return null;
	}

	[Token(Token = "0x6000C5E")]
	[Address(RVA = "0x1078AD4", Offset = "0x1078AD4", VA = "0x1078AD4")]
	[IteratorStateMachine(typeof(<WaitForItemToReturn>d__17))]
	private IEnumerator WaitForItemToReturn()
	{
		return null;
	}

	[Token(Token = "0x6000C5F")]
	[Address(RVA = "0x1078B70", Offset = "0x1078B70", VA = "0x1078B70")]
	public ExitPinboardInteraction()
	{
	}
}
[Token(Token = "0x2000204")]
[DisallowMultipleComponent]
[AddComponentMenu("Interactions/Exit Record Drawer")]
public class ExitRecordDrawerInteraction : InteractionBase
{
	[Token(Token = "0x4000AD8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private ActionStringHandle _overriddenStringHandle;

	[Token(Token = "0x4000AD9")]
	private const ActionId _id = ActionId.EXIT_RECORD_DRAWER;

	[Token(Token = "0x4000ADA")]
	private const ActionInputCategory _inputCategory = ActionInputCategory.CANCEL;

	[Token(Token = "0x4000ADB")]
	private const ActionInputType _inputType = ActionInputType.PRESS_DOWN;

	[Token(Token = "0x4000ADC")]
	private const ActionStringHandle _defaultStringHandle = ActionStringHandle.CLOSE_RECORD_DRAWER;

	[Token(Token = "0x4000ADD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private InteractionScopeBase _scope;

	[Token(Token = "0x6000C72")]
	[Address(RVA = "0x10794D8", Offset = "0x10794D8", VA = "0x10794D8", Slot = "13")]
	public override ActionProperties GetProperties()
	{
		return default(ActionProperties);
	}

	[Token(Token = "0x6000C73")]
	[Address(RVA = "0x1079518", Offset = "0x1079518", VA = "0x1079518", Slot = "14")]
	protected override ActionStatus GetStatus_Internal()
	{
		return default(ActionStatus);
	}

	[Token(Token = "0x6000C74")]
	[Address(RVA = "0x10796C8", Offset = "0x10796C8", VA = "0x10796C8", Slot = "12")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x6000C75")]
	[Address(RVA = "0x1079780", Offset = "0x1079780", VA = "0x1079780", Slot = "15")]
	protected override void Handle()
	{
	}

	[Token(Token = "0x6000C76")]
	[Address(RVA = "0x1079840", Offset = "0x1079840", VA = "0x1079840")]
	private void OnFinished()
	{
	}

	[Token(Token = "0x6000C77")]
	[Address(RVA = "0x1079848", Offset = "0x1079848", VA = "0x1079848")]
	public ExitRecordDrawerInteraction()
	{
	}
}
[Token(Token = "0x2000205")]
[AddComponentMenu("Interactions/Insert Cartridge Into Player")]
[DisallowMultipleComponent]
public class InsertCartridgeIntoPlayerInteraction : InteractionBase
{
	[Token(Token = "0x2000206")]
	private enum InsertType
	{
		[Token(Token = "0x4000AED")]
		SlotEmpty,
		[Token(Token = "0x4000AEE")]
		SlotOccupied
	}

	[Token(Token = "0x2000207")]
	[CompilerGenerated]
	private sealed class <InsertIntoEmpty>d__26 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000AEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000AF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000AF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public InsertCartridgeIntoPlayerInteraction <>4__this;

		[Token(Token = "0x4000AF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <startTime>5__2;

		[Token(Token = "0x4000AF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Animator <animator>5__3;

		[Token(Token = "0x4000AF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool <stillPlaying>5__4;

		[Token(Token = "0x17000102")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000C89")]
			[Address(RVA = "0x107A400", Offset = "0x107A400", VA = "0x107A400", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000103")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000C8B")]
			[Address(RVA = "0x107A448", Offset = "0x107A448", VA = "0x107A448", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000C86")]
		[Address(RVA = "0x107A098", Offset = "0x107A098", VA = "0x107A098")]
		[DebuggerHidden]
		public <InsertIntoEmpty>d__26(int <>1__state)
		{
		}

		[Token(Token = "0x6000C87")]
		[Address(RVA = "0x107A158", Offset = "0x107A158", VA = "0x107A158", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000C88")]
		[Address(RVA = "0x107A15C", Offset = "0x107A15C", VA = "0x107A15C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000C8A")]
		[Address(RVA = "0x107A408", Offset = "0x107A408", VA = "0x107A408", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000208")]
	[CompilerGenerated]
	private sealed class <MoveCurrentToRackAndInsertNew>d__27 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000AF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000AF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000AF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public InsertCartridgeIntoPlayerInteraction <>4__this;

		[Token(Token = "0x4000AF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <startTime>5__2;

		[Token(Token = "0x4000AF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Animator <animator>5__3;

		[Token(Token = "0x4000AFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool <stillPlaying>5__4;

		[Token(Token = "0x17000104")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000C8F")]
			[Address(RVA = "0x107A6F8", Offset = "0x107A6F8", VA = "0x107A6F8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000105")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000C91")]
			[Address(RVA = "0x107A740", Offset = "0x107A740", VA = "0x107A740", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000C8C")]
		[Address(RVA = "0x107A0C0", Offset = "0x107A0C0", VA = "0x107A0C0")]
		[DebuggerHidden]
		public <MoveCurrentToRackAndInsertNew>d__27(int <>1__state)
		{
		}

		[Token(Token = "0x6000C8D")]
		[Address(RVA = "0x107A450", Offset = "0x107A450", VA = "0x107A450", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000C8E")]
		[Address(RVA = "0x107A454", Offset = "0x107A454", VA = "0x107A454", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000C90")]
		[Address(RVA = "0x107A700", Offset = "0x107A700", VA = "0x107A700", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000ADE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private ActionStringHandle _overriddenStringHandle;

	[Token(Token = "0x4000ADF")]
	private const ActionId _id = ActionId.INSERT_CARTRIDGE_INTO_PLAYER;

	[Token(Token = "0x4000AE0")]
	private const ActionInputCategory _inputCategory = ActionInputCategory.MAIN;

	[Token(Token = "0x4000AE1")]
	private const ActionInputType _inputType = ActionInputType.PRESS_DOWN;

	[Token(Token = "0x4000AE2")]
	private const ActionStringHandle _defaultStringHandle = ActionStringHandle.INSERT_CARTRIDGE_INTO_PLAYER;

	[Token(Token = "0x4000AE3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[SerializeField]
	private ActionStringHandle _replaceStringHandle;

	[Token(Token = "0x4000AE4")]
	private const string _animationStateName = "InteractWithHeld";

	[Token(Token = "0x4000AE6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private InsertType _insertType;

	[Token(Token = "0x4000AE7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private int _receivedAnimEvents;

	[Token(Token = "0x4000AE8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private CartridgeRackSingleItemDock _firstEmptyRackSlot;

	[Token(Token = "0x4000AE9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private PlayerLookInputMode _previousLookInputMode;

	[Token(Token = "0x4000AEA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private PlayerStates _previousPlayerState;

	[Token(Token = "0x4000AEB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private CartridgePlayer _cartridgePlayer;

	[Token(Token = "0x17000101")]
	private static int _animationStateNameHash
	{
		[Token(Token = "0x6000C78")]
		[Address(RVA = "0x1079850", Offset = "0x1079850", VA = "0x1079850")]
		[CompilerGenerated]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x6000C79")]
	[Address(RVA = "0x10798A8", Offset = "0x10798A8", VA = "0x10798A8", Slot = "12")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x6000C7A")]
	[Address(RVA = "0x10799D8", Offset = "0x10799D8", VA = "0x10799D8", Slot = "14")]
	protected override ActionStatus GetStatus_Internal()
	{
		return default(ActionStatus);
	}

	[Token(Token = "0x6000C7B")]
	[Address(RVA = "0x1079B04", Offset = "0x1079B04", VA = "0x1079B04", Slot = "13")]
	public override ActionProperties GetProperties()
	{
		return default(ActionProperties);
	}

	[Token(Token = "0x6000C7C")]
	[Address(RVA = "0x1079C68", Offset = "0x1079C68", VA = "0x1079C68", Slot = "15")]
	protected override void Handle()
	{
	}

	[Token(Token = "0x6000C7D")]
	[Address(RVA = "0x1079D2C", Offset = "0x1079D2C", VA = "0x1079D2C")]
	private void OnStarted()
	{
	}

	[Token(Token = "0x6000C7E")]
	[Address(RVA = "0x1079E18", Offset = "0x1079E18", VA = "0x1079E18")]
	private void OnFinished()
	{
	}

	[Token(Token = "0x6000C7F")]
	[Address(RVA = "0x1079E20", Offset = "0x1079E20", VA = "0x1079E20")]
	private void MoveToRack()
	{
	}

	[Token(Token = "0x6000C80")]
	[Address(RVA = "0x1079F1C", Offset = "0x1079F1C", VA = "0x1079F1C")]
	private void Detach()
	{
	}

	[Token(Token = "0x6000C81")]
	[Address(RVA = "0x1079FFC", Offset = "0x1079FFC", VA = "0x1079FFC", Slot = "16")]
	public override bool HandleAnimEvent(InteractionAnimEvent animEvent)
	{
		return default(bool);
	}

	[Token(Token = "0x6000C82")]
	[Address(RVA = "0x1079DA4", Offset = "0x1079DA4", VA = "0x1079DA4")]
	[IteratorStateMachine(typeof(<InsertIntoEmpty>d__26))]
	public IEnumerator InsertIntoEmpty()
	{
		return null;
	}

	[Token(Token = "0x6000C83")]
	[Address(RVA = "0x1079D30", Offset = "0x1079D30", VA = "0x1079D30")]
	[IteratorStateMachine(typeof(<MoveCurrentToRackAndInsertNew>d__27))]
	public IEnumerator MoveCurrentToRackAndInsertNew()
	{
		return null;
	}

	[Token(Token = "0x6000C84")]
	[Address(RVA = "0x107A0E8", Offset = "0x107A0E8", VA = "0x107A0E8")]
	public InsertCartridgeIntoPlayerInteraction()
	{
	}
}
[Token(Token = "0x2000209")]
[DisallowMultipleComponent]
[AddComponentMenu("Interactions/Insert Record Into Player")]
public class InsertRecordIntoPlayerInteraction : InteractionBase
{
	[Token(Token = "0x200020A")]
	private enum InsertType
	{
		[Token(Token = "0x4000B09")]
		SlotEmpty,
		[Token(Token = "0x4000B0A")]
		SlotOccupied
	}

	[Token(Token = "0x200020B")]
	[CompilerGenerated]
	private sealed class <InsertIntoEmpty>d__25 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000B0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000B0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000B0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public InsertRecordIntoPlayerInteraction <>4__this;

		[Token(Token = "0x4000B0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <startTime>5__2;

		[Token(Token = "0x4000B0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Animator <animator>5__3;

		[Token(Token = "0x4000B10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool <stillPlaying>5__4;

		[Token(Token = "0x17000107")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000CA3")]
			[Address(RVA = "0x107B2E8", Offset = "0x107B2E8", VA = "0x107B2E8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000108")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000CA5")]
			[Address(RVA = "0x107B330", Offset = "0x107B330", VA = "0x107B330", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000CA0")]
		[Address(RVA = "0x107AF80", Offset = "0x107AF80", VA = "0x107AF80")]
		[DebuggerHidden]
		public <InsertIntoEmpty>d__25(int <>1__state)
		{
		}

		[Token(Token = "0x6000CA1")]
		[Address(RVA = "0x107B040", Offset = "0x107B040", VA = "0x107B040", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000CA2")]
		[Address(RVA = "0x107B044", Offset = "0x107B044", VA = "0x107B044", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000CA4")]
		[Address(RVA = "0x107B2F0", Offset = "0x107B2F0", VA = "0x107B2F0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200020C")]
	[CompilerGenerated]
	private sealed class <MoveCurrentToDrawerAndInsertNew>d__26 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000B11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000B12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000B13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public InsertRecordIntoPlayerInteraction <>4__this;

		[Token(Token = "0x4000B14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <startTime>5__2;

		[Token(Token = "0x4000B15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Animator <animator>5__3;

		[Token(Token = "0x4000B16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool <stillPlaying>5__4;

		[Token(Token = "0x17000109")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000CA9")]
			[Address(RVA = "0x107B5E0", Offset = "0x107B5E0", VA = "0x107B5E0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700010A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000CAB")]
			[Address(RVA = "0x107B628", Offset = "0x107B628", VA = "0x107B628", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000CA6")]
		[Address(RVA = "0x107AFA8", Offset = "0x107AFA8", VA = "0x107AFA8")]
		[DebuggerHidden]
		public <MoveCurrentToDrawerAndInsertNew>d__26(int <>1__state)
		{
		}

		[Token(Token = "0x6000CA7")]
		[Address(RVA = "0x107B338", Offset = "0x107B338", VA = "0x107B338", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000CA8")]
		[Address(RVA = "0x107B33C", Offset = "0x107B33C", VA = "0x107B33C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000CAA")]
		[Address(RVA = "0x107B5E8", Offset = "0x107B5E8", VA = "0x107B5E8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000AFB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private ActionStringHandle _overriddenStringHandle;

	[Token(Token = "0x4000AFC")]
	private const ActionId _id = ActionId.INSERT_RECORD_INTO_PLAYER;

	[Token(Token = "0x4000AFD")]
	private const ActionInputCategory _inputCategory = ActionInputCategory.MAIN;

	[Token(Token = "0x4000AFE")]
	private const ActionInputType _inputType = ActionInputType.PRESS_DOWN;

	[Token(Token = "0x4000AFF")]
	private const ActionStringHandle _defaultStringHandle = ActionStringHandle.INSERT_RECORD_INTO_PLAYER;

	[Token(Token = "0x4000B00")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[SerializeField]
	private ActionStringHandle _replaceStringHandle;

	[Token(Token = "0x4000B01")]
	private const string _animationStateName = "InteractWithHeld";

	[Token(Token = "0x4000B03")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private InsertType _insertType;

	[Token(Token = "0x4000B04")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private int _receivedAnimEvents;

	[Token(Token = "0x4000B05")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private PlayerLookInputMode _previousLookInputMode;

	[Token(Token = "0x4000B06")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private PlayerStates _previousPlayerState;

	[Token(Token = "0x4000B07")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private RecordPlayer _recordPlayer;

	[Token(Token = "0x17000106")]
	private static int _animationStateNameHash
	{
		[Token(Token = "0x6000C92")]
		[Address(RVA = "0x107A748", Offset = "0x107A748", VA = "0x107A748")]
		[CompilerGenerated]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x6000C93")]
	[Address(RVA = "0x107A7A0", Offset = "0x107A7A0", VA = "0x107A7A0", Slot = "12")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x6000C94")]
	[Address(RVA = "0x107A8D0", Offset = "0x107A8D0", VA = "0x107A8D0", Slot = "14")]
	protected override ActionStatus GetStatus_Internal()
	{
		return default(ActionStatus);
	}

	[Token(Token = "0x6000C95")]
	[Address(RVA = "0x107A9FC", Offset = "0x107A9FC", VA = "0x107A9FC", Slot = "13")]
	public override ActionProperties GetProperties()
	{
		return default(ActionProperties);
	}

	[Token(Token = "0x6000C96")]
	[Address(RVA = "0x107AB60", Offset = "0x107AB60", VA = "0x107AB60", Slot = "15")]
	protected override void Handle()
	{
	}

	[Token(Token = "0x6000C97")]
	[Address(RVA = "0x107ABFC", Offset = "0x107ABFC", VA = "0x107ABFC")]
	private void OnStarted()
	{
	}

	[Token(Token = "0x6000C98")]
	[Address(RVA = "0x107ACE8", Offset = "0x107ACE8", VA = "0x107ACE8")]
	private void OnFinished()
	{
	}

	[Token(Token = "0x6000C99")]
	[Address(RVA = "0x107ACF0", Offset = "0x107ACF0", VA = "0x107ACF0")]
	private void MoveToDrawer()
	{
	}

	[Token(Token = "0x6000C9A")]
	[Address(RVA = "0x107ADE8", Offset = "0x107ADE8", VA = "0x107ADE8")]
	private void Detach()
	{
	}

	[Token(Token = "0x6000C9B")]
	[Address(RVA = "0x107AEE4", Offset = "0x107AEE4", VA = "0x107AEE4", Slot = "16")]
	public override bool HandleAnimEvent(InteractionAnimEvent animEvent)
	{
		return default(bool);
	}

	[Token(Token = "0x6000C9C")]
	[Address(RVA = "0x107AC74", Offset = "0x107AC74", VA = "0x107AC74")]
	[IteratorStateMachine(typeof(<InsertIntoEmpty>d__25))]
	public IEnumerator InsertIntoEmpty()
	{
		return null;
	}

	[Token(Token = "0x6000C9D")]
	[Address(RVA = "0x107AC00", Offset = "0x107AC00", VA = "0x107AC00")]
	[IteratorStateMachine(typeof(<MoveCurrentToDrawerAndInsertNew>d__26))]
	public IEnumerator MoveCurrentToDrawerAndInsertNew()
	{
		return null;
	}

	[Token(Token = "0x6000C9E")]
	[Address(RVA = "0x107AFD0", Offset = "0x107AFD0", VA = "0x107AFD0")]
	public InsertRecordIntoPlayerInteraction()
	{
	}
}
[Token(Token = "0x200020D")]
[AddComponentMenu("Interactions/Inspect")]
[DisallowMultipleComponent]
public class InspectInteraction : InteractionBase
{
	[Token(Token = "0x200020E")]
	[CompilerGenerated]
	private sealed class <Inspect>d__24 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000B27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000B28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000B29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public InspectInteraction <>4__this;

		[Token(Token = "0x1700010B")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000CBC")]
			[Address(RVA = "0x107C384", Offset = "0x107C384", VA = "0x107C384", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700010C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000CBE")]
			[Address(RVA = "0x107C3CC", Offset = "0x107C3CC", VA = "0x107C3CC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000CB9")]
		[Address(RVA = "0x107BE54", Offset = "0x107BE54", VA = "0x107BE54")]
		[DebuggerHidden]
		public <Inspect>d__24(int <>1__state)
		{
		}

		[Token(Token = "0x6000CBA")]
		[Address(RVA = "0x107BFC4", Offset = "0x107BFC4", VA = "0x107BFC4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000CBB")]
		[Address(RVA = "0x107BFC8", Offset = "0x107BFC8", VA = "0x107BFC8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000CBD")]
		[Address(RVA = "0x107C38C", Offset = "0x107C38C", VA = "0x107C38C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000B17")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private ActionStringHandle _overriddenStringHandle;

	[Token(Token = "0x4000B18")]
	private const ActionId _id = ActionId.INSPECT;

	[Token(Token = "0x4000B19")]
	private const ActionInputCategory _inputCategory = ActionInputCategory.INSPECT;

	[Token(Token = "0x4000B1A")]
	private const ActionInputType _inputType = ActionInputType.HOLD;

	[Token(Token = "0x4000B1B")]
	private const ActionStringHandle _defaultStringHandle = ActionStringHandle.INSPECT;

	[Token(Token = "0x4000B1C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private InspectInteractionSettings _inspectSettings;

	[Token(Token = "0x4000B1D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public float _inspectModeScrollSpeed;

	[Token(Token = "0x4000B1E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private PlayerLookInputMode _previousLookInputMode;

	[Token(Token = "0x4000B1F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private PlayerStates _previousPlayerState;

	[Token(Token = "0x4000B20")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private CameraHandler.CameraMode _previousCameraMode;

	[Token(Token = "0x4000B21")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	[Range(-1f, 1f)]
	private float _orientationValue;

	[Token(Token = "0x4000B22")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private float _oldOrientationValue;

	[Token(Token = "0x4000B23")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private bool _wasHolding;

	[Token(Token = "0x4000B24")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private GenericGrabSegment _grabSegment;

	[Token(Token = "0x4000B25")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private GenericPlaceBackSegment _placeBackSegment;

	[Token(Token = "0x1400000A")]
	public event Callback_vF _onOrientationChangedCallback
	{
		[Token(Token = "0x6000CB6")]
		[Address(RVA = "0x107BE7C", Offset = "0x107BE7C", VA = "0x107BE7C")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000CB7")]
		[Address(RVA = "0x107BF18", Offset = "0x107BF18", VA = "0x107BF18")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x6000CAC")]
	[Address(RVA = "0x107B630", Offset = "0x107B630", VA = "0x107B630", Slot = "13")]
	public override ActionProperties GetProperties()
	{
		return default(ActionProperties);
	}

	[Token(Token = "0x6000CAD")]
	[Address(RVA = "0x107B674", Offset = "0x107B674", VA = "0x107B674", Slot = "12")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x6000CAE")]
	[Address(RVA = "0x107B804", Offset = "0x107B804", VA = "0x107B804", Slot = "14")]
	protected override ActionStatus GetStatus_Internal()
	{
		return default(ActionStatus);
	}

	[Token(Token = "0x6000CAF")]
	[Address(RVA = "0x107B8DC", Offset = "0x107B8DC", VA = "0x107B8DC", Slot = "15")]
	protected override void Handle()
	{
	}

	[Token(Token = "0x6000CB0")]
	[Address(RVA = "0x107BC54", Offset = "0x107BC54", VA = "0x107BC54")]
	private void OnGrabDone()
	{
	}

	[Token(Token = "0x6000CB1")]
	[Address(RVA = "0x107BC74", Offset = "0x107BC74", VA = "0x107BC74")]
	private void OnInspectDone()
	{
	}

	[Token(Token = "0x6000CB2")]
	[Address(RVA = "0x107BA08", Offset = "0x107BA08", VA = "0x107BA08")]
	private void OnStarted()
	{
	}

	[Token(Token = "0x6000CB3")]
	[Address(RVA = "0x107BD34", Offset = "0x107BD34", VA = "0x107BD34")]
	private void OnFinished()
	{
	}

	[Token(Token = "0x6000CB4")]
	[Address(RVA = "0x107BDC8", Offset = "0x107BDC8", VA = "0x107BDC8", Slot = "16")]
	public override bool HandleAnimEvent(InteractionAnimEvent animEvent)
	{
		return default(bool);
	}

	[Token(Token = "0x6000CB5")]
	[Address(RVA = "0x107BA84", Offset = "0x107BA84", VA = "0x107BA84")]
	[IteratorStateMachine(typeof(<Inspect>d__24))]
	private IEnumerator Inspect()
	{
		return null;
	}

	[Token(Token = "0x6000CB8")]
	[Address(RVA = "0x107BFB4", Offset = "0x107BFB4", VA = "0x107BFB4")]
	public InspectInteraction()
	{
	}
}
[Token(Token = "0x200020F")]
[DisallowMultipleComponent]
[AddComponentMenu("Interactions/Kick")]
public class KickInteraction : InteractionBase
{
	[Token(Token = "0x4000B2A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private ActionStringHandle _overriddenStringHandle;

	[Token(Token = "0x4000B2B")]
	private const ActionId _id = ActionId.KICK;

	[Token(Token = "0x4000B2C")]
	private const ActionInputCategory _inputCategory = ActionInputCategory.MAIN;

	[Token(Token = "0x4000B2D")]
	private const ActionInputType _inputType = ActionInputType.PRESS_DOWN;

	[Token(Token = "0x4000B2E")]
	private const ActionStringHandle _defaultStringHandle = ActionStringHandle.KICK;

	[Token(Token = "0x4000B2F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private GenericSwipeSegment _swipeSegment;

	[Token(Token = "0x6000CBF")]
	[Address(RVA = "0x107C3D4", Offset = "0x107C3D4", VA = "0x107C3D4", Slot = "13")]
	public override ActionProperties GetProperties()
	{
		return default(ActionProperties);
	}

	[Token(Token = "0x6000CC0")]
	[Address(RVA = "0x107C418", Offset = "0x107C418", VA = "0x107C418", Slot = "12")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x6000CC1")]
	[Address(RVA = "0x107C4D0", Offset = "0x107C4D0", VA = "0x107C4D0", Slot = "14")]
	protected override ActionStatus GetStatus_Internal()
	{
		return default(ActionStatus);
	}

	[Token(Token = "0x6000CC2")]
	[Address(RVA = "0x107C56C", Offset = "0x107C56C", VA = "0x107C56C")]
	private void Kick()
	{
	}

	[Token(Token = "0x6000CC3")]
	[Address(RVA = "0x107C5C0", Offset = "0x107C5C0", VA = "0x107C5C0", Slot = "15")]
	protected override void Handle()
	{
	}

	[Token(Token = "0x6000CC4")]
	[Address(RVA = "0x107C7B0", Offset = "0x107C7B0", VA = "0x107C7B0")]
	private void OnFinished()
	{
	}

	[Token(Token = "0x6000CC5")]
	[Address(RVA = "0x107C7B8", Offset = "0x107C7B8", VA = "0x107C7B8", Slot = "16")]
	public override bool HandleAnimEvent(InteractionAnimEvent animEvent)
	{
		return default(bool);
	}

	[Token(Token = "0x6000CC6")]
	[Address(RVA = "0x107C7FC", Offset = "0x107C7FC", VA = "0x107C7FC")]
	public KickInteraction()
	{
	}
}
[Token(Token = "0x2000210")]
[AddComponentMenu("Interactions/Open Door And Enter")]
[DisallowMultipleComponent]
public class OpenDoorAndEnterInteraction : InteractionBase
{
	[Token(Token = "0x4000B30")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private ActionStringHandle _overriddenStringHandle;

	[Token(Token = "0x4000B31")]
	private const ActionId _id = ActionId.OPEN_DOOR_AND_ENTER;

	[Token(Token = "0x4000B32")]
	private const ActionInputCategory _inputCategory = ActionInputCategory.MAIN;

	[Token(Token = "0x4000B33")]
	private const ActionInputType _inputType = ActionInputType.PRESS_DOWN;

	[Token(Token = "0x4000B34")]
	private const ActionStringHandle _defaultStringHandle = ActionStringHandle.OPEN_DOOR_AND_ENTER;

	[Token(Token = "0x4000B35")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public SelfClosingDoor _door;

	[Token(Token = "0x4000B36")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public ADoorLock _lock;

	[Token(Token = "0x4000B37")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private PlayerStates _previousPlayerState;

	[Token(Token = "0x6000CC7")]
	[Address(RVA = "0x107C804", Offset = "0x107C804", VA = "0x107C804", Slot = "13")]
	public override ActionProperties GetProperties()
	{
		return default(ActionProperties);
	}

	[Token(Token = "0x6000CC8")]
	[Address(RVA = "0x107C848", Offset = "0x107C848", VA = "0x107C848", Slot = "12")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x6000CC9")]
	[Address(RVA = "0x107C8B0", Offset = "0x107C8B0", VA = "0x107C8B0", Slot = "14")]
	protected override ActionStatus GetStatus_Internal()
	{
		return default(ActionStatus);
	}

	[Token(Token = "0x6000CCA")]
	[Address(RVA = "0x107C94C", Offset = "0x107C94C", VA = "0x107C94C", Slot = "15")]
	protected override void Handle()
	{
	}

	[Token(Token = "0x6000CCB")]
	[Address(RVA = "0x107C9E4", Offset = "0x107C9E4", VA = "0x107C9E4")]
	private void DoorInteractionFinished(bool interrupted)
	{
	}

	[Token(Token = "0x6000CCC")]
	[Address(RVA = "0x107C9D8", Offset = "0x107C9D8", VA = "0x107C9D8")]
	private void OnStarted()
	{
	}

	[Token(Token = "0x6000CCD")]
	[Address(RVA = "0x107C9DC", Offset = "0x107C9DC", VA = "0x107C9DC")]
	private void OnFinished()
	{
	}

	[Token(Token = "0x6000CCE")]
	[Address(RVA = "0x107C9EC", Offset = "0x107C9EC", VA = "0x107C9EC", Slot = "16")]
	public override bool HandleAnimEvent(InteractionAnimEvent animEvent)
	{
		return default(bool);
	}

	[Token(Token = "0x6000CCF")]
	[Address(RVA = "0x107CA3C", Offset = "0x107CA3C", VA = "0x107CA3C")]
	public OpenDoorAndEnterInteraction()
	{
	}
}
[Token(Token = "0x2000211")]
[AddComponentMenu("Interactions/Pick Up Cartridge")]
[DisallowMultipleComponent]
public class PickUpCartridgeInteraction : PickUpInteraction
{
	[Token(Token = "0x2000212")]
	private enum PickUpType
	{
		[Token(Token = "0x4000B41")]
		GenericPickUp,
		[Token(Token = "0x4000B42")]
		RackPickUp,
		[Token(Token = "0x4000B43")]
		RackSwap
	}

	[Token(Token = "0x2000213")]
	[CompilerGenerated]
	private sealed class <PickUpFromRack>d__20 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000B44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000B45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000B46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PickUpCartridgeInteraction <>4__this;

		[Token(Token = "0x4000B47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <startTime>5__2;

		[Token(Token = "0x4000B48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Animator <animator>5__3;

		[Token(Token = "0x4000B49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool <stillPlaying>5__4;

		[Token(Token = "0x1700010F")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000CE0")]
			[Address(RVA = "0x107D97C", Offset = "0x107D97C", VA = "0x107D97C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000110")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000CE2")]
			[Address(RVA = "0x107D9C4", Offset = "0x107D9C4", VA = "0x107D9C4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000CDD")]
		[Address(RVA = "0x107D52C", Offset = "0x107D52C", VA = "0x107D52C")]
		[DebuggerHidden]
		public <PickUpFromRack>d__20(int <>1__state)
		{
		}

		[Token(Token = "0x6000CDE")]
		[Address(RVA = "0x107D628", Offset = "0x107D628", VA = "0x107D628", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000CDF")]
		[Address(RVA = "0x107D62C", Offset = "0x107D62C", VA = "0x107D62C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000CE1")]
		[Address(RVA = "0x107D984", Offset = "0x107D984", VA = "0x107D984", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000214")]
	[CompilerGenerated]
	private sealed class <SwapInRack>d__21 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000B4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000B4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000B4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PickUpCartridgeInteraction <>4__this;

		[Token(Token = "0x4000B4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <startTime>5__2;

		[Token(Token = "0x4000B4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Animator <animator>5__3;

		[Token(Token = "0x4000B4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool <stillPlaying>5__4;

		[Token(Token = "0x17000111")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000CE6")]
			[Address(RVA = "0x107DC74", Offset = "0x107DC74", VA = "0x107DC74", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000112")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000CE8")]
			[Address(RVA = "0x107DCBC", Offset = "0x107DCBC", VA = "0x107DCBC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000CE3")]
		[Address(RVA = "0x107D554", Offset = "0x107D554", VA = "0x107D554")]
		[DebuggerHidden]
		public <SwapInRack>d__21(int <>1__state)
		{
		}

		[Token(Token = "0x6000CE4")]
		[Address(RVA = "0x107D9CC", Offset = "0x107D9CC", VA = "0x107D9CC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000CE5")]
		[Address(RVA = "0x107D9D0", Offset = "0x107D9D0", VA = "0x107D9D0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000CE7")]
		[Address(RVA = "0x107DC7C", Offset = "0x107DC7C", VA = "0x107DC7C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000B38")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private ActionStringHandle _swapStringHandle;

	[Token(Token = "0x4000B39")]
	private const string _pickUpFromRackAnimState = "PickUp";

	[Token(Token = "0x4000B3B")]
	private const string _swapInRackAnimState = "InteractWithHeld";

	[Token(Token = "0x4000B3D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private PickUpType _pickUpType;

	[Token(Token = "0x4000B3E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private int _receivedAnimEvents;

	[Token(Token = "0x4000B3F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private CartridgeRackSingleItemDock _firstEmptyRackSlot;

	[Token(Token = "0x1700010D")]
	private static int _pickUpFromRackAnimStateHash
	{
		[Token(Token = "0x6000CD0")]
		[Address(RVA = "0x107CA44", Offset = "0x107CA44", VA = "0x107CA44")]
		[CompilerGenerated]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x1700010E")]
	private static int _swapInRackAnimStateHash
	{
		[Token(Token = "0x6000CD1")]
		[Address(RVA = "0x107CA9C", Offset = "0x107CA9C", VA = "0x107CA9C")]
		[CompilerGenerated]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x6000CD2")]
	[Address(RVA = "0x107CAF4", Offset = "0x107CAF4", VA = "0x107CAF4", Slot = "13")]
	public override ActionProperties GetProperties()
	{
		return default(ActionProperties);
	}

	[Token(Token = "0x6000CD3")]
	[Address(RVA = "0x107CC7C", Offset = "0x107CC7C", VA = "0x107CC7C", Slot = "14")]
	protected override ActionStatus GetStatus_Internal()
	{
		return default(ActionStatus);
	}

	[Token(Token = "0x6000CD4")]
	[Address(RVA = "0x107CEFC", Offset = "0x107CEFC", VA = "0x107CEFC", Slot = "15")]
	protected override void Handle()
	{
	}

	[Token(Token = "0x6000CD5")]
	[Address(RVA = "0x107D290", Offset = "0x107D290", VA = "0x107D290")]
	private void OnRackPickUpAttached()
	{
	}

	[Token(Token = "0x6000CD6")]
	[Address(RVA = "0x107D2FC", Offset = "0x107D2FC", VA = "0x107D2FC")]
	private void OnRackSwapDetached()
	{
	}

	[Token(Token = "0x6000CD7")]
	[Address(RVA = "0x107D3C0", Offset = "0x107D3C0", VA = "0x107D3C0")]
	private void OnRackSwapAttached()
	{
	}

	[Token(Token = "0x6000CD8")]
	[Address(RVA = "0x107D430", Offset = "0x107D430", VA = "0x107D430", Slot = "16")]
	public override bool HandleAnimEvent(InteractionAnimEvent animEvent)
	{
		return default(bool);
	}

	[Token(Token = "0x6000CD9")]
	[Address(RVA = "0x107D180", Offset = "0x107D180", VA = "0x107D180")]
	[IteratorStateMachine(typeof(<PickUpFromRack>d__20))]
	public IEnumerator PickUpFromRack()
	{
		return null;
	}

	[Token(Token = "0x6000CDA")]
	[Address(RVA = "0x107D10C", Offset = "0x107D10C", VA = "0x107D10C")]
	[IteratorStateMachine(typeof(<SwapInRack>d__21))]
	public IEnumerator SwapInRack()
	{
		return null;
	}

	[Token(Token = "0x6000CDB")]
	[Address(RVA = "0x107D57C", Offset = "0x107D57C", VA = "0x107D57C")]
	public PickUpCartridgeInteraction()
	{
	}
}
[Token(Token = "0x2000215")]
[AddComponentMenu("Interactions/Pick Up")]
[DisallowMultipleComponent]
public class PickUpInteraction : InteractionBase
{
	[Token(Token = "0x4000B50")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private ActionStringHandle _overriddenStringHandle;

	[Token(Token = "0x4000B51")]
	private const ActionId _id = ActionId.PICK_UP;

	[Token(Token = "0x4000B52")]
	private const ActionInputCategory _inputCategory = ActionInputCategory.MAIN;

	[Token(Token = "0x4000B53")]
	private const ActionInputType _inputType = ActionInputType.PRESS_DOWN;

	[Token(Token = "0x4000B54")]
	private const ActionStringHandle _defaultStringHandle = ActionStringHandle.PICK_UP;

	[Token(Token = "0x4000B55")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	protected PlayerLookInputMode _previousLookInputMode;

	[Token(Token = "0x4000B56")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	protected PlayerStates _previousPlayerState;

	[Token(Token = "0x4000B57")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private GenericGrabSegment _grabSegment;

	[Token(Token = "0x1400000B")]
	public event Callback_v _onAttachedCallback
	{
		[Token(Token = "0x6000CF2")]
		[Address(RVA = "0x107DD58", Offset = "0x107DD58", VA = "0x107DD58")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000CF3")]
		[Address(RVA = "0x107DDF4", Offset = "0x107DDF4", VA = "0x107DDF4")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x6000CE9")]
	[Address(RVA = "0x107CC38", Offset = "0x107CC38", VA = "0x107CC38", Slot = "13")]
	public override ActionProperties GetProperties()
	{
		return default(ActionProperties);
	}

	[Token(Token = "0x6000CEA")]
	[Address(RVA = "0x107DCC4", Offset = "0x107DCC4", VA = "0x107DCC4", Slot = "12")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x6000CEB")]
	[Address(RVA = "0x1079220", Offset = "0x1079220", VA = "0x1079220")]
	public PreGrabData GetPreGrabData()
	{
		return null;
	}

	[Token(Token = "0x6000CEC")]
	[Address(RVA = "0x107CE14", Offset = "0x107CE14", VA = "0x107CE14", Slot = "14")]
	protected override ActionStatus GetStatus_Internal()
	{
		return default(ActionStatus);
	}

	[Token(Token = "0x6000CED")]
	[Address(RVA = "0x107D1F4", Offset = "0x107D1F4", VA = "0x107D1F4", Slot = "15")]
	protected override void Handle()
	{
	}

	[Token(Token = "0x6000CEE")]
	[Address(RVA = "0x107DD3C", Offset = "0x107DD3C", VA = "0x107DD3C")]
	private void OnAttached()
	{
	}

	[Token(Token = "0x6000CEF")]
	[Address(RVA = "0x107D108", Offset = "0x107D108", VA = "0x107D108")]
	protected void OnStarted()
	{
	}

	[Token(Token = "0x6000CF0")]
	[Address(RVA = "0x107D974", Offset = "0x107D974", VA = "0x107D974")]
	protected void OnFinished()
	{
	}

	[Token(Token = "0x6000CF1")]
	[Address(RVA = "0x107D4E4", Offset = "0x107D4E4", VA = "0x107D4E4", Slot = "16")]
	public override bool HandleAnimEvent(InteractionAnimEvent animEvent)
	{
		return default(bool);
	}

	[Token(Token = "0x6000CF4")]
	[Address(RVA = "0x107D584", Offset = "0x107D584", VA = "0x107D584")]
	public PickUpInteraction()
	{
	}
}
[Token(Token = "0x2000216")]
[AddComponentMenu("Interactions/Pick Up Record")]
[DisallowMultipleComponent]
public class PickUpRecordInteraction : PickUpInteraction
{
	[Token(Token = "0x2000217")]
	private enum PickUpType
	{
		[Token(Token = "0x4000B62")]
		GenericPickUp,
		[Token(Token = "0x4000B63")]
		DrawerPickUp,
		[Token(Token = "0x4000B64")]
		DrawerSwap
	}

	[Token(Token = "0x2000218")]
	[CompilerGenerated]
	private sealed class <PickUpFromDrawer>d__20 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000B65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000B66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000B67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PickUpRecordInteraction <>4__this;

		[Token(Token = "0x4000B68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <startTime>5__2;

		[Token(Token = "0x4000B69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Animator <animator>5__3;

		[Token(Token = "0x4000B6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool <stillPlaying>5__4;

		[Token(Token = "0x17000115")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000D05")]
			[Address(RVA = "0x107EC34", Offset = "0x107EC34", VA = "0x107EC34", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000116")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000D07")]
			[Address(RVA = "0x107EC7C", Offset = "0x107EC7C", VA = "0x107EC7C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000D02")]
		[Address(RVA = "0x107E7DC", Offset = "0x107E7DC", VA = "0x107E7DC")]
		[DebuggerHidden]
		public <PickUpFromDrawer>d__20(int <>1__state)
		{
		}

		[Token(Token = "0x6000D03")]
		[Address(RVA = "0x107E8D0", Offset = "0x107E8D0", VA = "0x107E8D0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000D04")]
		[Address(RVA = "0x107E8D4", Offset = "0x107E8D4", VA = "0x107E8D4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000D06")]
		[Address(RVA = "0x107EC3C", Offset = "0x107EC3C", VA = "0x107EC3C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000219")]
	[CompilerGenerated]
	private sealed class <SwapInDrawer>d__21 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000B6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000B6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000B6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PickUpRecordInteraction <>4__this;

		[Token(Token = "0x4000B6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <startTime>5__2;

		[Token(Token = "0x4000B6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Animator <animator>5__3;

		[Token(Token = "0x4000B70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool <stillPlaying>5__4;

		[Token(Token = "0x17000117")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000D0B")]
			[Address(RVA = "0x107EF44", Offset = "0x107EF44", VA = "0x107EF44", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000118")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000D0D")]
			[Address(RVA = "0x107EF8C", Offset = "0x107EF8C", VA = "0x107EF8C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000D08")]
		[Address(RVA = "0x107E804", Offset = "0x107E804", VA = "0x107E804")]
		[DebuggerHidden]
		public <SwapInDrawer>d__21(int <>1__state)
		{
		}

		[Token(Token = "0x6000D09")]
		[Address(RVA = "0x107EC84", Offset = "0x107EC84", VA = "0x107EC84", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000D0A")]
		[Address(RVA = "0x107EC88", Offset = "0x107EC88", VA = "0x107EC88", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000D0C")]
		[Address(RVA = "0x107EF4C", Offset = "0x107EF4C", VA = "0x107EF4C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000B59")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private ActionStringHandle _swapStringHandle;

	[Token(Token = "0x4000B5A")]
	private const string _pickUpFromRackAnimState = "PickUp";

	[Token(Token = "0x4000B5C")]
	private const string _swapInRackAnimState = "InteractWithHeld";

	[Token(Token = "0x4000B5E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private RecordDrawerScope _recordDrawerScope;

	[Token(Token = "0x4000B5F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private PickUpType _pickUpType;

	[Token(Token = "0x4000B60")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private int _receivedAnimEvents;

	[Token(Token = "0x17000113")]
	private static int _pickUpFromRackAnimStateHash
	{
		[Token(Token = "0x6000CF5")]
		[Address(RVA = "0x107DE90", Offset = "0x107DE90", VA = "0x107DE90")]
		[CompilerGenerated]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000114")]
	private static int _swapInRackAnimStateHash
	{
		[Token(Token = "0x6000CF6")]
		[Address(RVA = "0x107DEE8", Offset = "0x107DEE8", VA = "0x107DEE8")]
		[CompilerGenerated]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x6000CF7")]
	[Address(RVA = "0x107DF40", Offset = "0x107DF40", VA = "0x107DF40", Slot = "13")]
	public override ActionProperties GetProperties()
	{
		return default(ActionProperties);
	}

	[Token(Token = "0x6000CF8")]
	[Address(RVA = "0x107E084", Offset = "0x107E084", VA = "0x107E084", Slot = "14")]
	protected override ActionStatus GetStatus_Internal()
	{
		return default(ActionStatus);
	}

	[Token(Token = "0x6000CF9")]
	[Address(RVA = "0x107E234", Offset = "0x107E234", VA = "0x107E234", Slot = "15")]
	protected override void Handle()
	{
	}

	[Token(Token = "0x6000CFA")]
	[Address(RVA = "0x107E55C", Offset = "0x107E55C", VA = "0x107E55C")]
	private void OnDrawerPickUpAttached()
	{
	}

	[Token(Token = "0x6000CFB")]
	[Address(RVA = "0x107E5C8", Offset = "0x107E5C8", VA = "0x107E5C8")]
	private void OnDrawerSwapDetached()
	{
	}

	[Token(Token = "0x6000CFC")]
	[Address(RVA = "0x107E6B8", Offset = "0x107E6B8", VA = "0x107E6B8")]
	private void OnDrawerSwapAttached()
	{
	}

	[Token(Token = "0x6000CFD")]
	[Address(RVA = "0x107E728", Offset = "0x107E728", VA = "0x107E728", Slot = "16")]
	public override bool HandleAnimEvent(InteractionAnimEvent animEvent)
	{
		return default(bool);
	}

	[Token(Token = "0x6000CFE")]
	[Address(RVA = "0x107E4E8", Offset = "0x107E4E8", VA = "0x107E4E8")]
	[IteratorStateMachine(typeof(<PickUpFromDrawer>d__20))]
	public IEnumerator PickUpFromDrawer()
	{
		return null;
	}

	[Token(Token = "0x6000CFF")]
	[Address(RVA = "0x107E474", Offset = "0x107E474", VA = "0x107E474")]
	[IteratorStateMachine(typeof(<SwapInDrawer>d__21))]
	public IEnumerator SwapInDrawer()
	{
		return null;
	}

	[Token(Token = "0x6000D00")]
	[Address(RVA = "0x107E82C", Offset = "0x107E82C", VA = "0x107E82C")]
	public PickUpRecordInteraction()
	{
	}
}
[Token(Token = "0x200021A")]
[AddComponentMenu("Interactions/Place Cartridge")]
[DisallowMultipleComponent]
public class PlaceCartridgeInteraction : PlaceInteraction
{
	[Token(Token = "0x200021B")]
	private enum PlaceType
	{
		[Token(Token = "0x4000B76")]
		GenericPlace,
		[Token(Token = "0x4000B77")]
		RackPlace
	}

	[Token(Token = "0x200021C")]
	[CompilerGenerated]
	private sealed class <PlaceInRack>d__11 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000B78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000B79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000B7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PlaceCartridgeInteraction <>4__this;

		[Token(Token = "0x4000B7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <startTime>5__2;

		[Token(Token = "0x4000B7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Animator <animator>5__3;

		[Token(Token = "0x4000B7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool <stillPlaying>5__4;

		[Token(Token = "0x1700011A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000D19")]
			[Address(RVA = "0x107F7A4", Offset = "0x107F7A4", VA = "0x107F7A4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700011B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000D1B")]
			[Address(RVA = "0x107F7EC", Offset = "0x107F7EC", VA = "0x107F7EC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000D16")]
		[Address(RVA = "0x107F454", Offset = "0x107F454", VA = "0x107F454")]
		[DebuggerHidden]
		public <PlaceInRack>d__11(int <>1__state)
		{
		}

		[Token(Token = "0x6000D17")]
		[Address(RVA = "0x107F4F4", Offset = "0x107F4F4", VA = "0x107F4F4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000D18")]
		[Address(RVA = "0x107F4F8", Offset = "0x107F4F8", VA = "0x107F4F8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000D1A")]
		[Address(RVA = "0x107F7AC", Offset = "0x107F7AC", VA = "0x107F7AC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000B71")]
	private const string _animationStateName = "InteractWithHeld";

	[Token(Token = "0x4000B73")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private PlaceType _placeType;

	[Token(Token = "0x4000B74")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private int _receivedAnimEvents;

	[Token(Token = "0x17000119")]
	private static int _animationStateNameHash
	{
		[Token(Token = "0x6000D0E")]
		[Address(RVA = "0x107EF94", Offset = "0x107EF94", VA = "0x107EF94")]
		[CompilerGenerated]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x6000D0F")]
	[Address(RVA = "0x107EFEC", Offset = "0x107EFEC", VA = "0x107EFEC", Slot = "14")]
	protected override ActionStatus GetStatus_Internal()
	{
		return default(ActionStatus);
	}

	[Token(Token = "0x6000D10")]
	[Address(RVA = "0x107F148", Offset = "0x107F148", VA = "0x107F148", Slot = "15")]
	protected override void Handle()
	{
	}

	[Token(Token = "0x6000D11")]
	[Address(RVA = "0x107F2FC", Offset = "0x107F2FC", VA = "0x107F2FC")]
	private void OnRackPlaceDetached()
	{
	}

	[Token(Token = "0x6000D12")]
	[Address(RVA = "0x107F3C8", Offset = "0x107F3C8", VA = "0x107F3C8", Slot = "16")]
	public override bool HandleAnimEvent(InteractionAnimEvent animEvent)
	{
		return default(bool);
	}

	[Token(Token = "0x6000D13")]
	[Address(RVA = "0x107F26C", Offset = "0x107F26C", VA = "0x107F26C")]
	[IteratorStateMachine(typeof(<PlaceInRack>d__11))]
	public IEnumerator PlaceInRack()
	{
		return null;
	}

	[Token(Token = "0x6000D14")]
	[Address(RVA = "0x107F47C", Offset = "0x107F47C", VA = "0x107F47C")]
	public PlaceCartridgeInteraction()
	{
	}
}
[Token(Token = "0x200021D")]
[AddComponentMenu("Interactions/Place")]
[DisallowMultipleComponent]
public class PlaceInteraction : InteractionBase
{
	[Token(Token = "0x4000B7E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private ActionStringHandle _overriddenStringHandle;

	[Token(Token = "0x4000B7F")]
	private const ActionId _id = ActionId.PLACE;

	[Token(Token = "0x4000B80")]
	private const ActionInputCategory _inputCategory = ActionInputCategory.MAIN;

	[Token(Token = "0x4000B81")]
	private const ActionInputType _inputType = ActionInputType.PRESS_DOWN;

	[Token(Token = "0x4000B82")]
	private const ActionStringHandle _defaultStringHandle = ActionStringHandle.PLACE;

	[Token(Token = "0x4000B83")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	protected PlayerLookInputMode _previousLookInputMode;

	[Token(Token = "0x4000B84")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	protected PlayerStates _previousPlayerState;

	[Token(Token = "0x6000D1C")]
	[Address(RVA = "0x107F7F4", Offset = "0x107F7F4", VA = "0x107F7F4", Slot = "13")]
	public override ActionProperties GetProperties()
	{
		return default(ActionProperties);
	}

	[Token(Token = "0x6000D1D")]
	[Address(RVA = "0x107F838", Offset = "0x107F838", VA = "0x107F838", Slot = "14")]
	protected override ActionStatus GetStatus_Internal()
	{
		return default(ActionStatus);
	}

	[Token(Token = "0x6000D1E")]
	[Address(RVA = "0x107F2E0", Offset = "0x107F2E0", VA = "0x107F2E0", Slot = "15")]
	protected override void Handle()
	{
	}

	[Token(Token = "0x6000D1F")]
	[Address(RVA = "0x107F268", Offset = "0x107F268", VA = "0x107F268")]
	protected void OnStarted()
	{
	}

	[Token(Token = "0x6000D20")]
	[Address(RVA = "0x107F79C", Offset = "0x107F79C", VA = "0x107F79C")]
	protected void OnFinished()
	{
	}

	[Token(Token = "0x6000D21")]
	[Address(RVA = "0x107F9B0", Offset = "0x107F9B0", VA = "0x107F9B0")]
	private void Place()
	{
	}

	[Token(Token = "0x6000D22")]
	[Address(RVA = "0x107F484", Offset = "0x107F484", VA = "0x107F484")]
	public PlaceInteraction()
	{
	}
}
[Token(Token = "0x200021E")]
[DisallowMultipleComponent]
[AddComponentMenu("Interactions/Place Record")]
public class PlaceRecordInteraction : PlaceInteraction
{
	[Token(Token = "0x200021F")]
	private enum PlaceType
	{
		[Token(Token = "0x4000B8A")]
		GenericPlace,
		[Token(Token = "0x4000B8B")]
		DrawerPlace
	}

	[Token(Token = "0x2000220")]
	[CompilerGenerated]
	private sealed class <PlaceInDrawer>d__11 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000B8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000B8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000B8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PlaceRecordInteraction <>4__this;

		[Token(Token = "0x4000B8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <startTime>5__2;

		[Token(Token = "0x4000B90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Animator <animator>5__3;

		[Token(Token = "0x4000B91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool <stillPlaying>5__4;

		[Token(Token = "0x1700011D")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000D2E")]
			[Address(RVA = "0x10802AC", Offset = "0x10802AC", VA = "0x10802AC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700011E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000D30")]
			[Address(RVA = "0x10802F4", Offset = "0x10802F4", VA = "0x10802F4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000D2B")]
		[Address(RVA = "0x107FF6C", Offset = "0x107FF6C", VA = "0x107FF6C")]
		[DebuggerHidden]
		public <PlaceInDrawer>d__11(int <>1__state)
		{
		}

		[Token(Token = "0x6000D2C")]
		[Address(RVA = "0x1080004", Offset = "0x1080004", VA = "0x1080004", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000D2D")]
		[Address(RVA = "0x1080008", Offset = "0x1080008", VA = "0x1080008", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000D2F")]
		[Address(RVA = "0x10802B4", Offset = "0x10802B4", VA = "0x10802B4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000B85")]
	private const string _animationStateName = "InteractWithHeld";

	[Token(Token = "0x4000B87")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private PlaceType _placeType;

	[Token(Token = "0x4000B88")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private int _receivedAnimEvents;

	[Token(Token = "0x1700011C")]
	private static int _animationStateNameHash
	{
		[Token(Token = "0x6000D23")]
		[Address(RVA = "0x107FA6C", Offset = "0x107FA6C", VA = "0x107FA6C")]
		[CompilerGenerated]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x6000D24")]
	[Address(RVA = "0x107FAC4", Offset = "0x107FAC4", VA = "0x107FAC4", Slot = "14")]
	protected override ActionStatus GetStatus_Internal()
	{
		return default(ActionStatus);
	}

	[Token(Token = "0x6000D25")]
	[Address(RVA = "0x107FC20", Offset = "0x107FC20", VA = "0x107FC20", Slot = "15")]
	protected override void Handle()
	{
	}

	[Token(Token = "0x6000D26")]
	[Address(RVA = "0x107FDB4", Offset = "0x107FDB4", VA = "0x107FDB4")]
	private void OnDrawerPlaceDetached()
	{
	}

	[Token(Token = "0x6000D27")]
	[Address(RVA = "0x107FEE0", Offset = "0x107FEE0", VA = "0x107FEE0", Slot = "16")]
	public override bool HandleAnimEvent(InteractionAnimEvent animEvent)
	{
		return default(bool);
	}

	[Token(Token = "0x6000D28")]
	[Address(RVA = "0x107FD40", Offset = "0x107FD40", VA = "0x107FD40")]
	[IteratorStateMachine(typeof(<PlaceInDrawer>d__11))]
	public IEnumerator PlaceInDrawer()
	{
		return null;
	}

	[Token(Token = "0x6000D29")]
	[Address(RVA = "0x107FF94", Offset = "0x107FF94", VA = "0x107FF94")]
	public PlaceRecordInteraction()
	{
	}
}
[Token(Token = "0x2000221")]
[DisallowMultipleComponent]
[AddComponentMenu("Interactions/Press Button")]
public class PressButtonInteraction : InteractionBase
{
	[Token(Token = "0x2000222")]
	public delegate ActionStringHandle ActionStringHandleGetter();

	[Token(Token = "0x4000B92")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private ActionStringHandle _overriddenStringHandle;

	[Token(Token = "0x4000B93")]
	private const ActionId _id = ActionId.PRESS_BUTTON;

	[Token(Token = "0x4000B94")]
	private const ActionInputCategory _inputCategory = ActionInputCategory.MAIN;

	[Token(Token = "0x4000B95")]
	private const ActionInputType _inputType = ActionInputType.PRESS_DOWN;

	[Token(Token = "0x4000B96")]
	private const ActionStringHandle _defaultStringHandle = ActionStringHandle.PRESS_BUTTON;

	[Token(Token = "0x4000B97")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private PlayerLookInputMode _previousLookInputMode;

	[Token(Token = "0x4000B98")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private PlayerStates _previousPlayerState;

	[Token(Token = "0x4000B99")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private GenericSwipeSegment _swipeSegment;

	[Token(Token = "0x4000B9B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private ActionStringHandleGetter _customStringHandleGetter;

	[Token(Token = "0x1400000C")]
	public event Callback_v _onButtonPressed
	{
		[Token(Token = "0x6000D39")]
		[Address(RVA = "0x108058C", Offset = "0x108058C", VA = "0x108058C")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000D3A")]
		[Address(RVA = "0x1080628", Offset = "0x1080628", VA = "0x1080628")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x6000D31")]
	[Address(RVA = "0x10802FC", Offset = "0x10802FC", VA = "0x10802FC", Slot = "13")]
	public override ActionProperties GetProperties()
	{
		return default(ActionProperties);
	}

	[Token(Token = "0x6000D32")]
	[Address(RVA = "0x108035C", Offset = "0x108035C", VA = "0x108035C", Slot = "12")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x6000D33")]
	[Address(RVA = "0x10803E4", Offset = "0x10803E4", VA = "0x10803E4", Slot = "14")]
	protected override ActionStatus GetStatus_Internal()
	{
		return default(ActionStatus);
	}

	[Token(Token = "0x6000D34")]
	[Address(RVA = "0x1080480", Offset = "0x1080480", VA = "0x1080480")]
	private void PressButton()
	{
	}

	[Token(Token = "0x6000D35")]
	[Address(RVA = "0x108049C", Offset = "0x108049C", VA = "0x108049C", Slot = "15")]
	protected override void Handle()
	{
	}

	[Token(Token = "0x6000D36")]
	[Address(RVA = "0x1080530", Offset = "0x1080530", VA = "0x1080530")]
	private void OnStarted()
	{
	}

	[Token(Token = "0x6000D37")]
	[Address(RVA = "0x1080534", Offset = "0x1080534", VA = "0x1080534")]
	private void OnFinished()
	{
	}

	[Token(Token = "0x6000D38")]
	[Address(RVA = "0x108053C", Offset = "0x108053C", VA = "0x108053C", Slot = "16")]
	public override bool HandleAnimEvent(InteractionAnimEvent animEvent)
	{
		return default(bool);
	}

	[Token(Token = "0x6000D3B")]
	[Address(RVA = "0x10806C4", Offset = "0x10806C4", VA = "0x10806C4")]
	public void SetCustomStringHandleGetter(ActionStringHandleGetter customStringHandleGetter)
	{
	}

	[Token(Token = "0x6000D3C")]
	[Address(RVA = "0x10806CC", Offset = "0x10806CC", VA = "0x10806CC")]
	public PressButtonInteraction()
	{
	}
}
[Token(Token = "0x2000223")]
[AddComponentMenu("Interactions/Sample")]
[DisallowMultipleComponent]
public class SampleInteraction : InteractionBase
{
	[Token(Token = "0x4000B9C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private ActionStringHandle _overriddenStringHandle;

	[Token(Token = "0x4000B9D")]
	private const ActionId _id = ActionId.NONE;

	[Token(Token = "0x4000B9E")]
	private const ActionInputCategory _inputCategory = ActionInputCategory.NONE;

	[Token(Token = "0x4000B9F")]
	private const ActionInputType _inputType = ActionInputType.PRESS_DOWN;

	[Token(Token = "0x4000BA0")]
	private const ActionStringHandle _defaultStringHandle = ActionStringHandle.NONE;

	[Token(Token = "0x6000D41")]
	[Address(RVA = "0x10807FC", Offset = "0x10807FC", VA = "0x10807FC", Slot = "13")]
	public override ActionProperties GetProperties()
	{
		return default(ActionProperties);
	}

	[Token(Token = "0x6000D42")]
	[Address(RVA = "0x1080834", Offset = "0x1080834", VA = "0x1080834", Slot = "15")]
	protected override void Handle()
	{
	}

	[Token(Token = "0x6000D43")]
	[Address(RVA = "0x108083C", Offset = "0x108083C", VA = "0x108083C")]
	public SampleInteraction()
	{
	}
}
[Token(Token = "0x2000224")]
[DisallowMultipleComponent]
[AddComponentMenu("Interactions/Sit Down")]
[RequireComponent(typeof(StandUpInteraction))]
public class SitDownInteraction : InteractionBase
{
	[Token(Token = "0x4000BA1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private ActionStringHandle _overriddenStringHandle;

	[Token(Token = "0x4000BA2")]
	private const ActionId _id = ActionId.SIT_DOWN;

	[Token(Token = "0x4000BA3")]
	private const ActionInputCategory _inputCategory = ActionInputCategory.MAIN;

	[Token(Token = "0x4000BA4")]
	private const ActionInputType _inputType = ActionInputType.PRESS_DOWN;

	[Token(Token = "0x4000BA5")]
	private const ActionStringHandle _defaultStringHandle = ActionStringHandle.SIT_DOWN;

	[Token(Token = "0x4000BA6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public AlignmentHelper _chairAlignmentHelper;

	[Token(Token = "0x4000BA7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public AlignmentHelper _deskAlignmentHelper;

	[Token(Token = "0x4000BA8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Rig _chairRig;

	[Token(Token = "0x4000BA9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private InteractionScopeBase _scope;

	[Token(Token = "0x4000BAA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Animator _animator;

	[Token(Token = "0x4000BAB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private BoxCollider _boxCollider;

	[Token(Token = "0x6000D44")]
	[Address(RVA = "0x1080844", Offset = "0x1080844", VA = "0x1080844", Slot = "13")]
	public override ActionProperties GetProperties()
	{
		return default(ActionProperties);
	}

	[Token(Token = "0x6000D45")]
	[Address(RVA = "0x1080888", Offset = "0x1080888", VA = "0x1080888", Slot = "12")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x6000D46")]
	[Address(RVA = "0x10809B4", Offset = "0x10809B4", VA = "0x10809B4", Slot = "15")]
	protected override void Handle()
	{
	}

	[Token(Token = "0x6000D47")]
	[Address(RVA = "0x10809D4", Offset = "0x10809D4", VA = "0x10809D4")]
	private void OnChairAlignmentFinished(bool interrupted)
	{
	}

	[Token(Token = "0x6000D48")]
	[Address(RVA = "0x1080A80", Offset = "0x1080A80", VA = "0x1080A80")]
	private void OnDeskAlignmentFinished(bool interrupted)
	{
	}

	[Token(Token = "0x6000D49")]
	[Address(RVA = "0x1080A78", Offset = "0x1080A78", VA = "0x1080A78")]
	private void OnFinished()
	{
	}

	[Token(Token = "0x6000D4A")]
	[Address(RVA = "0x1080AC4", Offset = "0x1080AC4", VA = "0x1080AC4")]
	public SitDownInteraction()
	{
	}
}
[Token(Token = "0x2000225")]
[DisallowMultipleComponent]
[AddComponentMenu("Interactions/Stand Up")]
public class StandUpInteraction : InteractionBase
{
	[Token(Token = "0x4000BAC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private ActionStringHandle _overriddenStringHandle;

	[Token(Token = "0x4000BAD")]
	private const ActionId _id = ActionId.STAND_UP;

	[Token(Token = "0x4000BAE")]
	private const ActionInputCategory _inputCategory = ActionInputCategory.CANCEL;

	[Token(Token = "0x4000BAF")]
	private const ActionInputType _inputType = ActionInputType.PRESS_DOWN;

	[Token(Token = "0x4000BB0")]
	private const ActionStringHandle _defaultStringHandle = ActionStringHandle.STAND_UP;

	[Token(Token = "0x4000BB1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private InteractionScopeBase _scope;

	[Token(Token = "0x4000BB2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public AlignmentHelper _alignmentHelper;

	[Token(Token = "0x4000BB3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Rig _chairRig;

	[Token(Token = "0x4000BB4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Animator _animator;

	[Token(Token = "0x4000BB5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private BoxCollider _boxCollider;

	[Token(Token = "0x6000D4B")]
	[Address(RVA = "0x1080ACC", Offset = "0x1080ACC", VA = "0x1080ACC", Slot = "13")]
	public override ActionProperties GetProperties()
	{
		return default(ActionProperties);
	}

	[Token(Token = "0x6000D4C")]
	[Address(RVA = "0x1080B10", Offset = "0x1080B10", VA = "0x1080B10", Slot = "14")]
	protected override ActionStatus GetStatus_Internal()
	{
		return default(ActionStatus);
	}

	[Token(Token = "0x6000D4D")]
	[Address(RVA = "0x1080CC0", Offset = "0x1080CC0", VA = "0x1080CC0", Slot = "12")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x6000D4E")]
	[Address(RVA = "0x1080DF4", Offset = "0x1080DF4", VA = "0x1080DF4", Slot = "15")]
	protected override void Handle()
	{
	}

	[Token(Token = "0x6000D4F")]
	[Address(RVA = "0x1080E90", Offset = "0x1080E90", VA = "0x1080E90")]
	private void OnAlignmentFinished(bool interrupted)
	{
	}

	[Token(Token = "0x6000D50")]
	[Address(RVA = "0x1080ED4", Offset = "0x1080ED4", VA = "0x1080ED4")]
	private void OnFinished()
	{
	}

	[Token(Token = "0x6000D51")]
	[Address(RVA = "0x1080EDC", Offset = "0x1080EDC", VA = "0x1080EDC")]
	public StandUpInteraction()
	{
	}
}
[Token(Token = "0x2000226")]
[DisallowMultipleComponent]
[AddComponentMenu("Interactions/Stow")]
[RequireComponent(typeof(UnstowInteraction))]
public class StowInteraction : InventoryInteractionBase
{
	[Token(Token = "0x4000BB6")]
	private const ActionId _id = ActionId.STOW;

	[Token(Token = "0x4000BB7")]
	private const ActionStringHandle _defaultStringHandle = ActionStringHandle.STOW;

	[Token(Token = "0x6000D52")]
	[Address(RVA = "0x1080EE4", Offset = "0x1080EE4", VA = "0x1080EE4", Slot = "13")]
	public override ActionProperties GetProperties()
	{
		return default(ActionProperties);
	}

	[Token(Token = "0x6000D53")]
	[Address(RVA = "0x1080F1C", Offset = "0x1080F1C", VA = "0x1080F1C", Slot = "14")]
	protected override ActionStatus GetStatus_Internal()
	{
		return default(ActionStatus);
	}

	[Token(Token = "0x6000D54")]
	[Address(RVA = "0x1081088", Offset = "0x1081088", VA = "0x1081088", Slot = "17")]
	protected override void OnAttached()
	{
	}

	[Token(Token = "0x6000D55")]
	[Address(RVA = "0x10810E0", Offset = "0x10810E0", VA = "0x10810E0")]
	public StowInteraction()
	{
	}
}
[Token(Token = "0x2000227")]
[DisallowMultipleComponent]
[AddComponentMenu("Interactions/Switch Off")]
public class SwitchOffInteraction : SwitchInteractionBase
{
	[Token(Token = "0x4000BB8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private ActionStringHandle _overriddenStringHandle;

	[Token(Token = "0x4000BB9")]
	private const ActionId _id = ActionId.SWITCH_OFF;

	[Token(Token = "0x4000BBA")]
	private const ActionInputCategory _inputCategory = ActionInputCategory.MAIN;

	[Token(Token = "0x4000BBB")]
	private const ActionInputType _inputType = ActionInputType.PRESS_DOWN;

	[Token(Token = "0x4000BBC")]
	private const ActionStringHandle _defaultStringHandle = ActionStringHandle.SWITCH_OFF;

	[Token(Token = "0x6000D56")]
	[Address(RVA = "0x1081138", Offset = "0x1081138", VA = "0x1081138", Slot = "13")]
	public override ActionProperties GetProperties()
	{
		return default(ActionProperties);
	}

	[Token(Token = "0x6000D57")]
	[Address(RVA = "0x108117C", Offset = "0x108117C", VA = "0x108117C", Slot = "14")]
	protected override ActionStatus GetStatus_Internal()
	{
		return default(ActionStatus);
	}

	[Token(Token = "0x6000D58")]
	[Address(RVA = "0x10811A4", Offset = "0x10811A4", VA = "0x10811A4", Slot = "17")]
	protected override void Switch()
	{
	}

	[Token(Token = "0x6000D59")]
	[Address(RVA = "0x10811CC", Offset = "0x10811CC", VA = "0x10811CC")]
	public SwitchOffInteraction()
	{
	}
}
[Token(Token = "0x2000228")]
[DisallowMultipleComponent]
[AddComponentMenu("Interactions/Switch On")]
public class SwitchOnInteraction : SwitchInteractionBase
{
	[Token(Token = "0x4000BBD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private ActionStringHandle _overriddenStringHandle;

	[Token(Token = "0x4000BBE")]
	private const ActionId _id = ActionId.SWITCH_ON;

	[Token(Token = "0x4000BBF")]
	private const ActionInputCategory _inputCategory = ActionInputCategory.MAIN;

	[Token(Token = "0x4000BC0")]
	private const ActionInputType _inputType = ActionInputType.PRESS_DOWN;

	[Token(Token = "0x4000BC1")]
	private const ActionStringHandle _defaultStringHandle = ActionStringHandle.SWITCH_ON;

	[Token(Token = "0x6000D5A")]
	[Address(RVA = "0x10811D4", Offset = "0x10811D4", VA = "0x10811D4", Slot = "13")]
	public override ActionProperties GetProperties()
	{
		return default(ActionProperties);
	}

	[Token(Token = "0x6000D5B")]
	[Address(RVA = "0x1081218", Offset = "0x1081218", VA = "0x1081218", Slot = "14")]
	protected override ActionStatus GetStatus_Internal()
	{
		return default(ActionStatus);
	}

	[Token(Token = "0x6000D5C")]
	[Address(RVA = "0x1081240", Offset = "0x1081240", VA = "0x1081240", Slot = "17")]
	protected override void Switch()
	{
	}

	[Token(Token = "0x6000D5D")]
	[Address(RVA = "0x108126C", Offset = "0x108126C", VA = "0x108126C")]
	public SwitchOnInteraction()
	{
	}
}
[Token(Token = "0x2000229")]
[DisallowMultipleComponent]
[AddComponentMenu("Interactions/Take Out Cartridge From Player")]
public class TakeOutCartridgeFromPlayerInteraction : InteractionBase
{
	[Token(Token = "0x200022A")]
	[CompilerGenerated]
	private sealed class <TakeOut>d__22 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000BCE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000BCF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000BD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TakeOutCartridgeFromPlayerInteraction <>4__this;

		[Token(Token = "0x4000BD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <startTime>5__2;

		[Token(Token = "0x4000BD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Animator <animator>5__3;

		[Token(Token = "0x4000BD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool <stillPlaying>5__4;

		[Token(Token = "0x17000120")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000D6D")]
			[Address(RVA = "0x1081AA8", Offset = "0x1081AA8", VA = "0x1081AA8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000121")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000D6F")]
			[Address(RVA = "0x1081AF0", Offset = "0x1081AF0", VA = "0x1081AF0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000D6A")]
		[Address(RVA = "0x108167C", Offset = "0x108167C", VA = "0x108167C")]
		[DebuggerHidden]
		public <TakeOut>d__22(int <>1__state)
		{
		}

		[Token(Token = "0x6000D6B")]
		[Address(RVA = "0x1081714", Offset = "0x1081714", VA = "0x1081714", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000D6C")]
		[Address(RVA = "0x1081718", Offset = "0x1081718", VA = "0x1081718", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000D6E")]
		[Address(RVA = "0x1081AB0", Offset = "0x1081AB0", VA = "0x1081AB0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000BC2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private ActionStringHandle _overriddenStringHandle;

	[Token(Token = "0x4000BC3")]
	private const ActionId _id = ActionId.TAKE_OUT_CARTRIDGE_FROM_PLAYER;

	[Token(Token = "0x4000BC4")]
	private const ActionInputCategory _inputCategory = ActionInputCategory.MAIN;

	[Token(Token = "0x4000BC5")]
	private const ActionInputType _inputType = ActionInputType.PRESS_DOWN;

	[Token(Token = "0x4000BC6")]
	private const ActionStringHandle _defaultStringHandle = ActionStringHandle.TAKE_OUT_CARTRIDGE_FROM_PLAYER;

	[Token(Token = "0x4000BC7")]
	private const string _animationStateName = "PickUp";

	[Token(Token = "0x4000BC9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private bool _attached;

	[Token(Token = "0x4000BCA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private InteractableItem _interactableCartridge;

	[Token(Token = "0x4000BCB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private PlayerLookInputMode _previousLookInputMode;

	[Token(Token = "0x4000BCC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private PlayerStates _previousPlayerState;

	[Token(Token = "0x4000BCD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private CartridgePlayer _cartridgePlayer;

	[Token(Token = "0x1700011F")]
	private static int _animationStateNameHash
	{
		[Token(Token = "0x6000D5E")]
		[Address(RVA = "0x1081274", Offset = "0x1081274", VA = "0x1081274")]
		[CompilerGenerated]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x6000D5F")]
	[Address(RVA = "0x10812CC", Offset = "0x10812CC", VA = "0x10812CC", Slot = "12")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x6000D60")]
	[Address(RVA = "0x10813FC", Offset = "0x10813FC", VA = "0x10813FC", Slot = "14")]
	protected override ActionStatus GetStatus_Internal()
	{
		return default(ActionStatus);
	}

	[Token(Token = "0x6000D61")]
	[Address(RVA = "0x1081504", Offset = "0x1081504", VA = "0x1081504", Slot = "13")]
	public override ActionProperties GetProperties()
	{
		return default(ActionProperties);
	}

	[Token(Token = "0x6000D62")]
	[Address(RVA = "0x1081548", Offset = "0x1081548", VA = "0x1081548", Slot = "15")]
	protected override void Handle()
	{
	}

	[Token(Token = "0x6000D63")]
	[Address(RVA = "0x1081568", Offset = "0x1081568", VA = "0x1081568")]
	private void OnStarted()
	{
	}

	[Token(Token = "0x6000D64")]
	[Address(RVA = "0x10815E0", Offset = "0x10815E0", VA = "0x10815E0")]
	private void OnFinished()
	{
	}

	[Token(Token = "0x6000D65")]
	[Address(RVA = "0x10815E8", Offset = "0x10815E8", VA = "0x10815E8")]
	private void OnTakenOut()
	{
	}

	[Token(Token = "0x6000D66")]
	[Address(RVA = "0x108165C", Offset = "0x108165C", VA = "0x108165C", Slot = "16")]
	public override bool HandleAnimEvent(InteractionAnimEvent animEvent)
	{
		return default(bool);
	}

	[Token(Token = "0x6000D67")]
	[Address(RVA = "0x108156C", Offset = "0x108156C", VA = "0x108156C")]
	[IteratorStateMachine(typeof(<TakeOut>d__22))]
	public IEnumerator TakeOut()
	{
		return null;
	}

	[Token(Token = "0x6000D68")]
	[Address(RVA = "0x10816A4", Offset = "0x10816A4", VA = "0x10816A4")]
	public TakeOutCartridgeFromPlayerInteraction()
	{
	}
}
[Token(Token = "0x200022B")]
[DisallowMultipleComponent]
[AddComponentMenu("Interactions/Take Out Record From Player")]
public class TakeOutRecordFromPlayerInteraction : InteractionBase
{
	[Token(Token = "0x200022C")]
	[CompilerGenerated]
	private sealed class <TakeOut>d__22 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000BE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000BE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000BE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TakeOutRecordFromPlayerInteraction <>4__this;

		[Token(Token = "0x4000BE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <startTime>5__2;

		[Token(Token = "0x4000BE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Animator <animator>5__3;

		[Token(Token = "0x4000BE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool <stillPlaying>5__4;

		[Token(Token = "0x17000123")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000D7F")]
			[Address(RVA = "0x1082348", Offset = "0x1082348", VA = "0x1082348", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000124")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000D81")]
			[Address(RVA = "0x1082390", Offset = "0x1082390", VA = "0x1082390", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000D7C")]
		[Address(RVA = "0x1081F1C", Offset = "0x1081F1C", VA = "0x1081F1C")]
		[DebuggerHidden]
		public <TakeOut>d__22(int <>1__state)
		{
		}

		[Token(Token = "0x6000D7D")]
		[Address(RVA = "0x1081FB4", Offset = "0x1081FB4", VA = "0x1081FB4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000D7E")]
		[Address(RVA = "0x1081FB8", Offset = "0x1081FB8", VA = "0x1081FB8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000D80")]
		[Address(RVA = "0x1082350", Offset = "0x1082350", VA = "0x1082350", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000BD4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private ActionStringHandle _overriddenStringHandle;

	[Token(Token = "0x4000BD5")]
	private const ActionId _id = ActionId.TAKE_OUT_RECORD_FROM_PLAYER;

	[Token(Token = "0x4000BD6")]
	private const ActionInputCategory _inputCategory = ActionInputCategory.MAIN;

	[Token(Token = "0x4000BD7")]
	private const ActionInputType _inputType = ActionInputType.PRESS_DOWN;

	[Token(Token = "0x4000BD8")]
	private const ActionStringHandle _defaultStringHandle = ActionStringHandle.TAKE_OUT_RECORD_FROM_PLAYER;

	[Token(Token = "0x4000BD9")]
	private const string _animationStateName = "PickUp";

	[Token(Token = "0x4000BDB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private bool _attached;

	[Token(Token = "0x4000BDC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private InteractableItem _interactableRecord;

	[Token(Token = "0x4000BDD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private PlayerLookInputMode _previousLookInputMode;

	[Token(Token = "0x4000BDE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private PlayerStates _previousPlayerState;

	[Token(Token = "0x4000BDF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private RecordPlayer _recordPlayer;

	[Token(Token = "0x17000122")]
	private static int _animationStateNameHash
	{
		[Token(Token = "0x6000D70")]
		[Address(RVA = "0x1081AF8", Offset = "0x1081AF8", VA = "0x1081AF8")]
		[CompilerGenerated]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x6000D71")]
	[Address(RVA = "0x1081B50", Offset = "0x1081B50", VA = "0x1081B50", Slot = "12")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x6000D72")]
	[Address(RVA = "0x1081C80", Offset = "0x1081C80", VA = "0x1081C80", Slot = "14")]
	protected override ActionStatus GetStatus_Internal()
	{
		return default(ActionStatus);
	}

	[Token(Token = "0x6000D73")]
	[Address(RVA = "0x1081D88", Offset = "0x1081D88", VA = "0x1081D88", Slot = "13")]
	public override ActionProperties GetProperties()
	{
		return default(ActionProperties);
	}

	[Token(Token = "0x6000D74")]
	[Address(RVA = "0x1081DCC", Offset = "0x1081DCC", VA = "0x1081DCC", Slot = "15")]
	protected override void Handle()
	{
	}

	[Token(Token = "0x6000D75")]
	[Address(RVA = "0x1081DEC", Offset = "0x1081DEC", VA = "0x1081DEC")]
	private void OnStarted()
	{
	}

	[Token(Token = "0x6000D76")]
	[Address(RVA = "0x1081E64", Offset = "0x1081E64", VA = "0x1081E64")]
	private void OnFinished()
	{
	}

	[Token(Token = "0x6000D77")]
	[Address(RVA = "0x1081E6C", Offset = "0x1081E6C", VA = "0x1081E6C")]
	private void OnTakenOut()
	{
	}

	[Token(Token = "0x6000D78")]
	[Address(RVA = "0x1081EFC", Offset = "0x1081EFC", VA = "0x1081EFC", Slot = "16")]
	public override bool HandleAnimEvent(InteractionAnimEvent animEvent)
	{
		return default(bool);
	}

	[Token(Token = "0x6000D79")]
	[Address(RVA = "0x1081DF0", Offset = "0x1081DF0", VA = "0x1081DF0")]
	[IteratorStateMachine(typeof(<TakeOut>d__22))]
	public IEnumerator TakeOut()
	{
		return null;
	}

	[Token(Token = "0x6000D7A")]
	[Address(RVA = "0x1081F44", Offset = "0x1081F44", VA = "0x1081F44")]
	public TakeOutRecordFromPlayerInteraction()
	{
	}
}
[Token(Token = "0x200022D")]
[DisallowMultipleComponent]
[AddComponentMenu("Interactions/Throw")]
public class ThrowInteraction : InteractionBase
{
	[Token(Token = "0x4000BE6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private ActionStringHandle _overriddenStringHandle;

	[Token(Token = "0x4000BE7")]
	private const ActionId _id = ActionId.THROW;

	[Token(Token = "0x4000BE8")]
	private const ActionInputCategory _inputCategory = ActionInputCategory.MAIN;

	[Token(Token = "0x4000BE9")]
	private const ActionInputType _inputType = ActionInputType.LONG_HOLD;

	[Token(Token = "0x4000BEA")]
	private const ActionStringHandle _defaultStringHandle = ActionStringHandle.THROW;

	[Token(Token = "0x6000D82")]
	[Address(RVA = "0x1082398", Offset = "0x1082398", VA = "0x1082398", Slot = "13")]
	public override ActionProperties GetProperties()
	{
		return default(ActionProperties);
	}

	[Token(Token = "0x6000D83")]
	[Address(RVA = "0x10823DC", Offset = "0x10823DC", VA = "0x10823DC", Slot = "12")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x6000D84")]
	[Address(RVA = "0x1082494", Offset = "0x1082494", VA = "0x1082494", Slot = "14")]
	protected override ActionStatus GetStatus_Internal()
	{
		return default(ActionStatus);
	}

	[Token(Token = "0x6000D85")]
	[Address(RVA = "0x1082574", Offset = "0x1082574", VA = "0x1082574", Slot = "15")]
	protected override void Handle()
	{
	}

	[Token(Token = "0x6000D86")]
	[Address(RVA = "0x1082590", Offset = "0x1082590", VA = "0x1082590")]
	private void Throw()
	{
	}

	[Token(Token = "0x6000D87")]
	[Address(RVA = "0x108266C", Offset = "0x108266C", VA = "0x108266C")]
	public ThrowInteraction()
	{
	}
}
[Token(Token = "0x200022E")]
[AddComponentMenu("Interactions/Unlock")]
[DisallowMultipleComponent]
public class UnlockInteraction : InteractionBase
{
	[Token(Token = "0x4000BEB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private ActionStringHandle _overriddenStringHandle;

	[Token(Token = "0x4000BEC")]
	private const ActionId _id = ActionId.UNLOCK;

	[Token(Token = "0x4000BED")]
	private const ActionInputCategory _inputCategory = ActionInputCategory.MAIN;

	[Token(Token = "0x4000BEE")]
	private const ActionInputType _inputType = ActionInputType.PRESS_DOWN;

	[Token(Token = "0x4000BEF")]
	private const ActionStringHandle _defaultStringHandle = ActionStringHandle.UNLOCK;

	[Token(Token = "0x4000BF0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[Header("Settings")]
	public InteractableItem _key;

	[Token(Token = "0x4000BF1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private ADoorLock _lock;

	[Token(Token = "0x6000D88")]
	[Address(RVA = "0x1082674", Offset = "0x1082674", VA = "0x1082674", Slot = "13")]
	public override ActionProperties GetProperties()
	{
		return default(ActionProperties);
	}

	[Token(Token = "0x6000D89")]
	[Address(RVA = "0x10826B8", Offset = "0x10826B8", VA = "0x10826B8", Slot = "12")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x6000D8A")]
	[Address(RVA = "0x1082758", Offset = "0x1082758", VA = "0x1082758", Slot = "14")]
	protected override ActionStatus GetStatus_Internal()
	{
		return default(ActionStatus);
	}

	[Token(Token = "0x6000D8B")]
	[Address(RVA = "0x1082884", Offset = "0x1082884", VA = "0x1082884", Slot = "15")]
	protected override void Handle()
	{
	}

	[Token(Token = "0x6000D8C")]
	[Address(RVA = "0x10828B0", Offset = "0x10828B0", VA = "0x10828B0")]
	public UnlockInteraction()
	{
	}
}
[Token(Token = "0x200022F")]
[AddComponentMenu("Interactions/Unstow")]
[DisallowMultipleComponent]
public class UnstowInteraction : InventoryInteractionBase
{
	[Token(Token = "0x4000BF2")]
	private const ActionId _id = ActionId.UNSTOW;

	[Token(Token = "0x4000BF3")]
	private const ActionStringHandle _defaultStringHandle = ActionStringHandle.UNSTOW_ITEM;

	[Token(Token = "0x4000BF4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private bool _ignoreAnimEvent;

	[Token(Token = "0x4000BF5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[HideInInspector]
	public InventoryInteractionSettings _inventorySettings;

	[Token(Token = "0x6000D8D")]
	[Address(RVA = "0x10828B8", Offset = "0x10828B8", VA = "0x10828B8", Slot = "12")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x6000D8E")]
	[Address(RVA = "0x108291C", Offset = "0x108291C", VA = "0x108291C", Slot = "15")]
	protected override void Handle()
	{
	}

	[Token(Token = "0x6000D8F")]
	[Address(RVA = "0x1082938", Offset = "0x1082938", VA = "0x1082938", Slot = "13")]
	public override ActionProperties GetProperties()
	{
		return default(ActionProperties);
	}

	[Token(Token = "0x6000D90")]
	[Address(RVA = "0x1082970", Offset = "0x1082970", VA = "0x1082970", Slot = "14")]
	protected override ActionStatus GetStatus_Internal()
	{
		return default(ActionStatus);
	}

	[Token(Token = "0x6000D91")]
	[Address(RVA = "0x1082B48", Offset = "0x1082B48", VA = "0x1082B48", Slot = "17")]
	protected override void OnAttached()
	{
	}

	[Token(Token = "0x6000D92")]
	[Address(RVA = "0x1075CDC", Offset = "0x1075CDC", VA = "0x1075CDC")]
	public void IgnoreAnimEvent()
	{
	}

	[Token(Token = "0x6000D93")]
	[Address(RVA = "0x1082C90", Offset = "0x1082C90", VA = "0x1082C90")]
	public UnstowInteraction()
	{
	}
}
[Token(Token = "0x2000230")]
[DisallowMultipleComponent]
[AddComponentMenu("Interactions/Use Slider")]
public class UseSliderInteraction : InteractionBase
{
	[Token(Token = "0x2000231")]
	[CompilerGenerated]
	private sealed class <SetSliderValue>d__20 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000C05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000C06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000C07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public UseSliderInteraction <>4__this;

		[Token(Token = "0x17000125")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000DA7")]
			[Address(RVA = "0x1084114", Offset = "0x1084114", VA = "0x1084114", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000126")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000DA9")]
			[Address(RVA = "0x108415C", Offset = "0x108415C", VA = "0x108415C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000DA4")]
		[Address(RVA = "0x1083250", Offset = "0x1083250", VA = "0x1083250")]
		[DebuggerHidden]
		public <SetSliderValue>d__20(int <>1__state)
		{
		}

		[Token(Token = "0x6000DA5")]
		[Address(RVA = "0x10836C4", Offset = "0x10836C4", VA = "0x10836C4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000DA6")]
		[Address(RVA = "0x10836C8", Offset = "0x10836C8", VA = "0x10836C8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000DA8")]
		[Address(RVA = "0x108411C", Offset = "0x108411C", VA = "0x108411C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000BF6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private ActionStringHandle _overriddenStringHandle;

	[Token(Token = "0x4000BF7")]
	private const ActionId _id = ActionId.USE_SLIDER;

	[Token(Token = "0x4000BF8")]
	private const ActionInputCategory _inputCategory = ActionInputCategory.MAIN;

	[Token(Token = "0x4000BF9")]
	private const ActionInputType _inputType = ActionInputType.HOLD;

	[Token(Token = "0x4000BFA")]
	private const ActionStringHandle _defaultStringHandle = ActionStringHandle.MOVE_SLIDER;

	[Token(Token = "0x4000BFB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[Range(0f, 1f)]
	[SerializeField]
	private float _sliderValue;

	[Token(Token = "0x4000BFC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private bool _drawDebugGizmos;

	[Token(Token = "0x4000BFD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private Transform _ikTarget;

	[Token(Token = "0x4000BFE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private Transform _sliderStartPos;

	[Token(Token = "0x4000BFF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private Transform _sliderEndPos;

	[Token(Token = "0x4000C00")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private float _oldSliderValue;

	[Token(Token = "0x4000C01")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private PlayerStates _previousPlayerState;

	[Token(Token = "0x4000C02")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private CameraHandler.CameraMode _previousCameraMode;

	[Token(Token = "0x4000C03")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private bool _adjustingArms;

	[Token(Token = "0x1400000D")]
	public event Callback_vF _onValueChangedCallback
	{
		[Token(Token = "0x6000D9F")]
		[Address(RVA = "0x1083574", Offset = "0x1083574", VA = "0x1083574")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000DA0")]
		[Address(RVA = "0x1083610", Offset = "0x1083610", VA = "0x1083610")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x6000D94")]
	[Address(RVA = "0x1082CE8", Offset = "0x1082CE8", VA = "0x1082CE8", Slot = "12")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x6000D95")]
	[Address(RVA = "0x1082D50", Offset = "0x1082D50", VA = "0x1082D50")]
	private void Start()
	{
	}

	[Token(Token = "0x6000D96")]
	[Address(RVA = "0x1082E08", Offset = "0x1082E08", VA = "0x1082E08")]
	public float GetCurrentSliderValue()
	{
		return default(float);
	}

	[Token(Token = "0x6000D97")]
	[Address(RVA = "0x1082E10", Offset = "0x1082E10", VA = "0x1082E10", Slot = "13")]
	public override ActionProperties GetProperties()
	{
		return default(ActionProperties);
	}

	[Token(Token = "0x6000D98")]
	[Address(RVA = "0x1082E54", Offset = "0x1082E54", VA = "0x1082E54", Slot = "14")]
	protected override ActionStatus GetStatus_Internal()
	{
		return default(ActionStatus);
	}

	[Token(Token = "0x6000D99")]
	[Address(RVA = "0x1082F50", Offset = "0x1082F50", VA = "0x1082F50", Slot = "15")]
	protected override void Handle()
	{
	}

	[Token(Token = "0x6000D9A")]
	[Address(RVA = "0x10831DC", Offset = "0x10831DC", VA = "0x10831DC")]
	[IteratorStateMachine(typeof(<SetSliderValue>d__20))]
	private IEnumerator SetSliderValue()
	{
		return null;
	}

	[Token(Token = "0x6000D9B")]
	[Address(RVA = "0x1083278", Offset = "0x1083278", VA = "0x1083278")]
	public void MoveIKTargetToSlider()
	{
	}

	[Token(Token = "0x6000D9C")]
	[Address(RVA = "0x1082F80", Offset = "0x1082F80", VA = "0x1082F80")]
	private void LerpArmsOnEnter()
	{
	}

	[Token(Token = "0x6000D9D")]
	[Address(RVA = "0x1083460", Offset = "0x1083460", VA = "0x1083460")]
	private void OnFinished()
	{
	}

	[Token(Token = "0x6000D9E")]
	[Address(RVA = "0x1083468", Offset = "0x1083468", VA = "0x1083468")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x6000DA1")]
	[Address(RVA = "0x10836AC", Offset = "0x10836AC", VA = "0x10836AC")]
	public UseSliderInteraction()
	{
	}
}
[Token(Token = "0x2000232")]
public class ConsoleMixerScope : InteractionScopeBase
{
	[Token(Token = "0x4000C08")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public int _targetFOV;

	[Token(Token = "0x4000C09")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject _scopeCanvas;

	[Token(Token = "0x4000C0A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Coroutine _scopeUpdate;

	[Token(Token = "0x6000DAA")]
	[Address(RVA = "0x1084164", Offset = "0x1084164", VA = "0x1084164", Slot = "6")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x6000DAB")]
	[Address(RVA = "0x1084278", Offset = "0x1084278", VA = "0x1084278", Slot = "4")]
	protected override void HandleScopeEnter()
	{
	}

	[Token(Token = "0x6000DAC")]
	[Address(RVA = "0x10842FC", Offset = "0x10842FC", VA = "0x10842FC", Slot = "5")]
	protected override void HandleScopeExit()
	{
	}

	[Token(Token = "0x6000DAD")]
	[Address(RVA = "0x10843A8", Offset = "0x10843A8", VA = "0x10843A8")]
	public ConsoleMixerScope()
	{
	}
}
[Token(Token = "0x2000233")]
public class DeskChairScope : InteractionScopeBase
{
	[Token(Token = "0x2000234")]
	public class ZoomAction : ActionBase
	{
		[Token(Token = "0x2000235")]
		[CompilerGenerated]
		private sealed class <ControlZoom>d__12 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000C18")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000C19")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x17000127")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000DBE")]
				[Address(RVA = "0x108499C", Offset = "0x108499C", VA = "0x108499C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000128")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000DC0")]
				[Address(RVA = "0x10849E4", Offset = "0x10849E4", VA = "0x10849E4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000DBB")]
			[Address(RVA = "0x1084920", Offset = "0x1084920", VA = "0x1084920")]
			[DebuggerHidden]
			public <ControlZoom>d__12(int <>1__state)
			{
			}

			[Token(Token = "0x6000DBC")]
			[Address(RVA = "0x1084948", Offset = "0x1084948", VA = "0x1084948", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000DBD")]
			[Address(RVA = "0x108494C", Offset = "0x108494C", VA = "0x108494C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000DBF")]
			[Address(RVA = "0x10849A4", Offset = "0x10849A4", VA = "0x10849A4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000C11")]
		private const ActionId _actionId = ActionId.ZOOM;

		[Token(Token = "0x4000C12")]
		private const ActionInputCategory _actionInputCategory = ActionInputCategory.CUSTOM_GENERIC;

		[Token(Token = "0x4000C13")]
		private const ActionInputType _actionInputType = ActionInputType.HOLD;

		[Token(Token = "0x4000C14")]
		private const ActionStringHandle _actionStringHandle = ActionStringHandle.ZOOM;

		[Token(Token = "0x4000C15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private MonoBehaviour _owner;

		[Token(Token = "0x4000C16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool _zoomedIn;

		[Token(Token = "0x4000C17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Coroutine _zoomCoroutune;

		[Token(Token = "0x6000DB5")]
		[Address(RVA = "0x10844F4", Offset = "0x10844F4", VA = "0x10844F4")]
		public ZoomAction(MonoBehaviour owner)
		{
		}

		[Token(Token = "0x6000DB6")]
		[Address(RVA = "0x10846E4", Offset = "0x10846E4", VA = "0x10846E4", Slot = "12")]
		public override ActionProperties GetProperties()
		{
			return default(ActionProperties);
		}

		[Token(Token = "0x6000DB7")]
		[Address(RVA = "0x108471C", Offset = "0x108471C", VA = "0x108471C", Slot = "14")]
		protected override ActionStatus GetStatus_Internal()
		{
			return default(ActionStatus);
		}

		[Token(Token = "0x6000DB8")]
		[Address(RVA = "0x1084868", Offset = "0x1084868", VA = "0x1084868")]
		public void InitiateZoomControl()
		{
		}

		[Token(Token = "0x6000DB9")]
		[Address(RVA = "0x1084660", Offset = "0x1084660", VA = "0x1084660")]
		public void FinishZoomControl()
		{
		}

		[Token(Token = "0x6000DBA")]
		[Address(RVA = "0x10848C0", Offset = "0x10848C0", VA = "0x10848C0")]
		[IteratorStateMachine(typeof(<ControlZoom>d__12))]
		private IEnumerator ControlZoom()
		{
			return null;
		}
	}

	[Token(Token = "0x2000236")]
	[CompilerGenerated]
	private sealed class <ScopeUpdate>d__12 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000C1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000C1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000C1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public DeskChairScope <>4__this;

		[Token(Token = "0x4000C1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <timeOfLastAutoFocus>5__2;

		[Token(Token = "0x17000129")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000DC4")]
			[Address(RVA = "0x1084BC4", Offset = "0x1084BC4", VA = "0x1084BC4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700012A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000DC6")]
			[Address(RVA = "0x1084C0C", Offset = "0x1084C0C", VA = "0x1084C0C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000DC1")]
		[Address(RVA = "0x10846B4", Offset = "0x10846B4", VA = "0x10846B4")]
		[DebuggerHidden]
		public <ScopeUpdate>d__12(int <>1__state)
		{
		}

		[Token(Token = "0x6000DC2")]
		[Address(RVA = "0x10849EC", Offset = "0x10849EC", VA = "0x10849EC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000DC3")]
		[Address(RVA = "0x10849F0", Offset = "0x10849F0", VA = "0x10849F0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000DC5")]
		[Address(RVA = "0x1084BCC", Offset = "0x1084BCC", VA = "0x1084BCC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000C0B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Coroutine _scopeUpdate;

	[Token(Token = "0x4000C0C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public AlignmentHelper[] _autoFocusAlignments;

	[Token(Token = "0x4000C0D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool _alignmentInProgress;

	[Token(Token = "0x4000C0E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	[SerializeField]
	[Range(0f, 1f)]
	private float _swivelRotationPercentage;

	[Token(Token = "0x4000C0F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Rig _lowerBodyRig;

	[Token(Token = "0x4000C10")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private ZoomAction _zoomAction;

	[Token(Token = "0x6000DAE")]
	[Address(RVA = "0x10843B0", Offset = "0x10843B0", VA = "0x10843B0", Slot = "6")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x6000DAF")]
	[Address(RVA = "0x1084524", Offset = "0x1084524", VA = "0x1084524")]
	private void Start()
	{
	}

	[Token(Token = "0x6000DB0")]
	[Address(RVA = "0x1084528", Offset = "0x1084528", VA = "0x1084528", Slot = "4")]
	protected override void HandleScopeEnter()
	{
	}

	[Token(Token = "0x6000DB1")]
	[Address(RVA = "0x10845F4", Offset = "0x10845F4", VA = "0x10845F4", Slot = "5")]
	protected override void HandleScopeExit()
	{
	}

	[Token(Token = "0x6000DB2")]
	[Address(RVA = "0x10846AC", Offset = "0x10846AC", VA = "0x10846AC")]
	private void AlignmentFinished(bool interrupted)
	{
	}

	[Token(Token = "0x6000DB3")]
	[Address(RVA = "0x1084580", Offset = "0x1084580", VA = "0x1084580")]
	[IteratorStateMachine(typeof(<ScopeUpdate>d__12))]
	private IEnumerator ScopeUpdate()
	{
		return null;
	}

	[Token(Token = "0x6000DB4")]
	[Address(RVA = "0x10846DC", Offset = "0x10846DC", VA = "0x10846DC")]
	public DeskChairScope()
	{
	}
}
[Token(Token = "0x2000237")]
public class PinboardScope : InteractionScopeBase
{
	[Token(Token = "0x6000DC7")]
	[Address(RVA = "0x1084C14", Offset = "0x1084C14", VA = "0x1084C14", Slot = "4")]
	protected override void HandleScopeEnter()
	{
	}

	[Token(Token = "0x6000DC8")]
	[Address(RVA = "0x1084C1C", Offset = "0x1084C1C", VA = "0x1084C1C", Slot = "5")]
	protected override void HandleScopeExit()
	{
	}

	[Token(Token = "0x6000DC9")]
	[Address(RVA = "0x1084C24", Offset = "0x1084C24", VA = "0x1084C24")]
	public PinboardScope()
	{
	}
}
[Token(Token = "0x2000238")]
public class RecordDrawerScope : InteractionScopeBase
{
	[Token(Token = "0x2000239")]
	[CompilerGenerated]
	private sealed class <ScopeUpdate>d__11 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000C23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000C24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000C25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public RecordDrawerScope <>4__this;

		[Token(Token = "0x1700012C")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000DD4")]
			[Address(RVA = "0x1085350", Offset = "0x1085350", VA = "0x1085350", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700012D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000DD6")]
			[Address(RVA = "0x1085398", Offset = "0x1085398", VA = "0x1085398", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000DD1")]
		[Address(RVA = "0x1084FC4", Offset = "0x1084FC4", VA = "0x1084FC4")]
		[DebuggerHidden]
		public <ScopeUpdate>d__11(int <>1__state)
		{
		}

		[Token(Token = "0x6000DD2")]
		[Address(RVA = "0x1084FF4", Offset = "0x1084FF4", VA = "0x1084FF4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000DD3")]
		[Address(RVA = "0x1084FF8", Offset = "0x1084FF8", VA = "0x1084FF8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000DD5")]
		[Address(RVA = "0x1085358", Offset = "0x1085358", VA = "0x1085358", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000C1E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public int _targetFOV;

	[Token(Token = "0x4000C1F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject _scopeCanvas;

	[Token(Token = "0x4000C21")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Collider _raycastBlocker;

	[Token(Token = "0x4000C22")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Coroutine _scopeUpdate;

	[Token(Token = "0x1700012B")]
	public RecordDrawer RecordDrawer
	{
		[Token(Token = "0x6000DCA")]
		[Address(RVA = "0x1084C2C", Offset = "0x1084C2C", VA = "0x1084C2C")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x6000DCB")]
		[Address(RVA = "0x1084C34", Offset = "0x1084C34", VA = "0x1084C34")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x6000DCC")]
	[Address(RVA = "0x1084C3C", Offset = "0x1084C3C", VA = "0x1084C3C", Slot = "6")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x6000DCD")]
	[Address(RVA = "0x1084DD0", Offset = "0x1084DD0", VA = "0x1084DD0", Slot = "4")]
	protected override void HandleScopeEnter()
	{
	}

	[Token(Token = "0x6000DCE")]
	[Address(RVA = "0x1084F04", Offset = "0x1084F04", VA = "0x1084F04", Slot = "5")]
	protected override void HandleScopeExit()
	{
	}

	[Token(Token = "0x6000DCF")]
	[Address(RVA = "0x1084E90", Offset = "0x1084E90", VA = "0x1084E90")]
	[IteratorStateMachine(typeof(<ScopeUpdate>d__11))]
	private IEnumerator ScopeUpdate()
	{
		return null;
	}

	[Token(Token = "0x6000DD0")]
	[Address(RVA = "0x1084FEC", Offset = "0x1084FEC", VA = "0x1084FEC")]
	public RecordDrawerScope()
	{
	}
}
[Token(Token = "0x200023A")]
public class RootScope : InteractionScopeBase
{
	[Token(Token = "0x6000DD7")]
	[Address(RVA = "0x10853A0", Offset = "0x10853A0", VA = "0x10853A0", Slot = "7")]
	public override bool IsRoot()
	{
		return default(bool);
	}

	[Token(Token = "0x6000DD8")]
	[Address(RVA = "0x10853A8", Offset = "0x10853A8", VA = "0x10853A8", Slot = "4")]
	protected override void HandleScopeEnter()
	{
	}

	[Token(Token = "0x6000DD9")]
	[Address(RVA = "0x10853F8", Offset = "0x10853F8", VA = "0x10853F8", Slot = "5")]
	protected override void HandleScopeExit()
	{
	}

	[Token(Token = "0x6000DDA")]
	[Address(RVA = "0x1085448", Offset = "0x1085448", VA = "0x1085448")]
	public RootScope()
	{
	}
}
[Token(Token = "0x200023B")]
public class PreGrabData
{
	[Token(Token = "0x4000C26")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Vector3 _initialPosition_ws;

	[Token(Token = "0x4000C27")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Quaternion _initialRotation_ws;

	[Token(Token = "0x4000C28")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public InteractionDockBase _initialDock;

	[Token(Token = "0x6000DDB")]
	[Address(RVA = "0x1085450", Offset = "0x1085450", VA = "0x1085450")]
	public PreGrabData()
	{
	}
}
[Token(Token = "0x200023C")]
public class GenericGrabSegment
{
	[Token(Token = "0x200023D")]
	public delegate void OnFinishedCallback();

	[Token(Token = "0x200023E")]
	[CompilerGenerated]
	private sealed class <Grab>d__12 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000C2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000C30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000C31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GenericGrabSegment <>4__this;

		[Token(Token = "0x4000C32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public OnFinishedCallback onFinishedCallback;

		[Token(Token = "0x4000C33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float <startTime>5__2;

		[Token(Token = "0x4000C34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Animator <animator>5__3;

		[Token(Token = "0x4000C35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool <stillPlaying>5__4;

		[Token(Token = "0x1700012F")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000DE9")]
			[Address(RVA = "0x1085A34", Offset = "0x1085A34", VA = "0x1085A34", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000130")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000DEB")]
			[Address(RVA = "0x1085A7C", Offset = "0x1085A7C", VA = "0x1085A7C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000DE6")]
		[Address(RVA = "0x1085558", Offset = "0x1085558", VA = "0x1085558")]
		[DebuggerHidden]
		public <Grab>d__12(int <>1__state)
		{
		}

		[Token(Token = "0x6000DE7")]
		[Address(RVA = "0x1085628", Offset = "0x1085628", VA = "0x1085628", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000DE8")]
		[Address(RVA = "0x108562C", Offset = "0x108562C", VA = "0x108562C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000DEA")]
		[Address(RVA = "0x1085A3C", Offset = "0x1085A3C", VA = "0x1085A3C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000C29")]
	private const string _animationStateName = "PickUp";

	[Token(Token = "0x4000C2B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public bool _debugLog;

	[Token(Token = "0x4000C2C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
	private bool _attached;

	[Token(Token = "0x4000C2D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private InteractableItem _interactableItem;

	[Token(Token = "0x4000C2E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public PreGrabData _preGrabData;

	[Token(Token = "0x1700012E")]
	private static int _animationStateNameHash
	{
		[Token(Token = "0x6000DDC")]
		[Address(RVA = "0x10854E8", Offset = "0x10854E8", VA = "0x10854E8")]
		[CompilerGenerated]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x6000DDD")]
	[Address(RVA = "0x107B778", Offset = "0x107B778", VA = "0x107B778")]
	public GenericGrabSegment(InteractableItem interactableItem)
	{
	}

	[Token(Token = "0x6000DDE")]
	[Address(RVA = "0x107BDF4", Offset = "0x107BDF4", VA = "0x107BDF4")]
	public void Attach()
	{
	}

	[Token(Token = "0x6000DDF")]
	[Address(RVA = "0x1085540", Offset = "0x1085540", VA = "0x1085540")]
	private void Done(OnFinishedCallback onFinishedCallback)
	{
	}

	[Token(Token = "0x6000DE0")]
	[Address(RVA = "0x107BBC4", Offset = "0x107BBC4", VA = "0x107BBC4")]
	[IteratorStateMachine(typeof(<Grab>d__12))]
	public IEnumerator Grab(OnFinishedCallback onFinishedCallback)
	{
		return null;
	}
}
[Token(Token = "0x200023F")]
public class GenericPlaceBackSegment
{
	[Token(Token = "0x2000240")]
	public delegate void OnFinishedCallback();

	[Token(Token = "0x2000241")]
	[CompilerGenerated]
	private sealed class <PlaceBack>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000C39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000C3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000C3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GenericPlaceBackSegment <>4__this;

		[Token(Token = "0x4000C3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public PreGrabData preGrabData;

		[Token(Token = "0x4000C3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public OnFinishedCallback onFinishedCallback;

		[Token(Token = "0x17000131")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000DF6")]
			[Address(RVA = "0x1085CD8", Offset = "0x1085CD8", VA = "0x1085CD8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000132")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000DF8")]
			[Address(RVA = "0x1085D20", Offset = "0x1085D20", VA = "0x1085D20", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000DF3")]
		[Address(RVA = "0x1085A9C", Offset = "0x1085A9C", VA = "0x1085A9C")]
		[DebuggerHidden]
		public <PlaceBack>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x6000DF4")]
		[Address(RVA = "0x1085B04", Offset = "0x1085B04", VA = "0x1085B04", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000DF5")]
		[Address(RVA = "0x1085B08", Offset = "0x1085B08", VA = "0x1085B08", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000DF7")]
		[Address(RVA = "0x1085CE0", Offset = "0x1085CE0", VA = "0x1085CE0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000C36")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public bool _debugLog;

	[Token(Token = "0x4000C37")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private InteractableItem _interactableItem;

	[Token(Token = "0x4000C38")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private PreGrabData _preGrabData;

	[Token(Token = "0x6000DEC")]
	[Address(RVA = "0x10791F0", Offset = "0x10791F0", VA = "0x10791F0")]
	public GenericPlaceBackSegment(InteractableItem interactableItem)
	{
	}

	[Token(Token = "0x6000DED")]
	[Address(RVA = "0x1085A84", Offset = "0x1085A84", VA = "0x1085A84")]
	private void Done(OnFinishedCallback onFinishedCallback)
	{
	}

	[Token(Token = "0x6000DEE")]
	[Address(RVA = "0x1079308", Offset = "0x1079308", VA = "0x1079308")]
	[IteratorStateMachine(typeof(<PlaceBack>d__6))]
	public IEnumerator PlaceBack(OnFinishedCallback onFinishedCallback, PreGrabData preGrabData)
	{
		return null;
	}
}
[Token(Token = "0x2000242")]
public class GenericSwipeSegment
{
	[Token(Token = "0x2000243")]
	public delegate void OnFinishedCallback();

	[Token(Token = "0x2000244")]
	[CompilerGenerated]
	private sealed class <Swipe>d__11 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000C43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000C44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000C45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GenericSwipeSegment <>4__this;

		[Token(Token = "0x4000C46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public OnFinishedCallback onFinishedCallback;

		[Token(Token = "0x4000C47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float <startTime>5__2;

		[Token(Token = "0x4000C48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Animator <animator>5__3;

		[Token(Token = "0x4000C49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool <stillPlaying>5__4;

		[Token(Token = "0x17000134")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000E06")]
			[Address(RVA = "0x1086118", Offset = "0x1086118", VA = "0x1086118", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000135")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000E08")]
			[Address(RVA = "0x1086160", Offset = "0x1086160", VA = "0x1086160", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000E03")]
		[Address(RVA = "0x1085D98", Offset = "0x1085D98", VA = "0x1085D98")]
		[DebuggerHidden]
		public <Swipe>d__11(int <>1__state)
		{
		}

		[Token(Token = "0x6000E04")]
		[Address(RVA = "0x1085E68", Offset = "0x1085E68", VA = "0x1085E68", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000E05")]
		[Address(RVA = "0x1085E6C", Offset = "0x1085E6C", VA = "0x1085E6C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000E07")]
		[Address(RVA = "0x1086120", Offset = "0x1086120", VA = "0x1086120", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000C3E")]
	private const string _animationStateName = "Interact";

	[Token(Token = "0x4000C40")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public bool _debugLog;

	[Token(Token = "0x4000C41")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
	private bool _interacted;

	[Token(Token = "0x4000C42")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private InteractableItem _interactableItem;

	[Token(Token = "0x17000133")]
	private static int _animationStateNameHash
	{
		[Token(Token = "0x6000DF9")]
		[Address(RVA = "0x1085D28", Offset = "0x1085D28", VA = "0x1085D28")]
		[CompilerGenerated]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x6000DFA")]
	[Address(RVA = "0x107C4A0", Offset = "0x107C4A0", VA = "0x107C4A0")]
	public GenericSwipeSegment(InteractableItem interactableItem)
	{
	}

	[Token(Token = "0x6000DFB")]
	[Address(RVA = "0x1085D80", Offset = "0x1085D80", VA = "0x1085D80")]
	private void Done(OnFinishedCallback onFinishedCallback)
	{
	}

	[Token(Token = "0x6000DFC")]
	[Address(RVA = "0x107C7F0", Offset = "0x107C7F0", VA = "0x107C7F0")]
	public void Tap()
	{
	}

	[Token(Token = "0x6000DFD")]
	[Address(RVA = "0x107C720", Offset = "0x107C720", VA = "0x107C720")]
	[IteratorStateMachine(typeof(<Swipe>d__11))]
	public IEnumerator Swipe(OnFinishedCallback onFinishedCallback)
	{
		return null;
	}
}
[Token(Token = "0x2000245")]
public class AchievementHelper : MonoBehaviour, IService, IInitialisable
{
	[Token(Token = "0x4000C4A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private List<AchievementContainer> _gameplayAchievements;

	[Token(Token = "0x4000C4B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private CallbackVoid<string, string, string> _factChangeCallback;

	[Token(Token = "0x6000E09")]
	[Address(RVA = "0x1086168", Offset = "0x1086168", VA = "0x1086168", Slot = "7")]
	public bool Initialise()
	{
		return default(bool);
	}

	[Token(Token = "0x6000E0A")]
	[Address(RVA = "0x10862B8", Offset = "0x10862B8", VA = "0x10862B8", Slot = "4")]
	public void OnStartUp()
	{
	}

	[Token(Token = "0x6000E0B")]
	[Address(RVA = "0x10862BC", Offset = "0x10862BC", VA = "0x10862BC", Slot = "5")]
	public void OnCleanUp()
	{
	}

	[Token(Token = "0x6000E0C")]
	[Address(RVA = "0x10862C0", Offset = "0x10862C0", VA = "0x10862C0", Slot = "6")]
	public void OnUpdate(float deltaTime)
	{
	}

	[Token(Token = "0x6000E0D")]
	[Address(RVA = "0x10862C4", Offset = "0x10862C4", VA = "0x10862C4")]
	private void OnBlackboardChanged(string containerName, string blackboardName, string factName)
	{
	}

	[Token(Token = "0x6000E0E")]
	[Address(RVA = "0x108639C", Offset = "0x108639C", VA = "0x108639C")]
	public AchievementHelper()
	{
	}
}
[Token(Token = "0x2000246")]
public static class AchievementsServiceFactory
{
	[Token(Token = "0x6000E0F")]
	[Address(RVA = "0x1086424", Offset = "0x1086424", VA = "0x1086424")]
	public static IAchievementsService CreateAchievementsService()
	{
		return null;
	}
}
[Token(Token = "0x2000247")]
public class CheckpointLightmapSwitcher : MonoBehaviour, IInitialisable
{
	[Serializable]
	[Token(Token = "0x2000248")]
	private struct CheckpointLightmapMap
	{
		[Token(Token = "0x4000C4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public StoryObjectCheckpointProperties checkpoint;

		[Token(Token = "0x4000C50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public string scenarioName;
	}

	[Token(Token = "0x2000249")]
	private class LightmapActivator : ICheckpointActivatable
	{
		[Token(Token = "0x4000C51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private string _lightmapScenario;

		[Token(Token = "0x6000E13")]
		[Address(RVA = "0x10869F4", Offset = "0x10869F4", VA = "0x10869F4")]
		public LightmapActivator(string lightmapScenario)
		{
		}

		[Token(Token = "0x6000E14")]
		[Address(RVA = "0x1086B48", Offset = "0x1086B48", VA = "0x1086B48", Slot = "4")]
		public void OnCheckpointActiveStateChanged(bool active)
		{
		}
	}

	[Token(Token = "0x4000C4C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly string c_initialScenarioName;

	[Token(Token = "0x4000C4D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private StoryObjectCheckpointList _allCheckpoints;

	[Token(Token = "0x4000C4E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private CheckpointLightmapMap[] _lightmapSwapCheckpoints;

	[Token(Token = "0x6000E10")]
	[Address(RVA = "0x1086494", Offset = "0x1086494", VA = "0x1086494", Slot = "4")]
	public bool Initialise()
	{
		return default(bool);
	}

	[Token(Token = "0x6000E11")]
	[Address(RVA = "0x1086A74", Offset = "0x1086A74", VA = "0x1086A74")]
	public CheckpointLightmapSwitcher()
	{
	}
}
[Token(Token = "0x200024A")]
public abstract class DebugManager_Base : MonoBehaviour
{
	[Token(Token = "0x4000C52")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	protected bool isDebugFreeCamEnabled;

	[Token(Token = "0x4000C53")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	protected DebugFreeCamera debugFreeCamera;

	[Token(Token = "0x4000C54")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	protected bool focused;

	[Token(Token = "0x4000C55")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	protected PlayerBase player;

	[Token(Token = "0x4000C56")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	protected CharacterController characterController;

	[Token(Token = "0x4000C57")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	protected float fps;

	[Token(Token = "0x4000C58")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	protected float frameCount;

	[Token(Token = "0x4000C59")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	protected float fpsTime;

	[Token(Token = "0x4000C5A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	protected Rect fpsRect;

	[Token(Token = "0x17000136")]
	public bool UiHidden
	{
		[Token(Token = "0x6000E16")]
		[Address(RVA = "0x1086B94", Offset = "0x1086B94", VA = "0x1086B94")]
		[CompilerGenerated]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000E15")]
		[Address(RVA = "0x1086B88", Offset = "0x1086B88", VA = "0x1086B88")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x6000E17")]
	[Address(RVA = "0x1086B9C", Offset = "0x1086B9C", VA = "0x1086B9C", Slot = "4")]
	protected virtual void OnEnable()
	{
	}

	[Token(Token = "0x6000E18")]
	[Address(RVA = "0x1086BA0", Offset = "0x1086BA0", VA = "0x1086BA0", Slot = "5")]
	protected virtual void OnDisable()
	{
	}

	[Token(Token = "0x6000E19")]
	[Address(RVA = "0x1086BA4", Offset = "0x1086BA4", VA = "0x1086BA4", Slot = "6")]
	public virtual void OnStartUp()
	{
	}

	[Token(Token = "0x6000E1A")]
	[Address(RVA = "0x1086C20", Offset = "0x1086C20", VA = "0x1086C20", Slot = "7")]
	public virtual void OnUpdate(float deltaTime)
	{
	}

	[Token(Token = "0x6000E1B")]
	[Address(RVA = "0x1086F78", Offset = "0x1086F78", VA = "0x1086F78")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x6000E1C")]
	[Address(RVA = "0x10870C8", Offset = "0x10870C8", VA = "0x10870C8")]
	public void OnCleanUp()
	{
	}

	[Token(Token = "0x6000E1D")]
	[Address(RVA = "0x10870CC", Offset = "0x10870CC", VA = "0x10870CC")]
	public void HideUi()
	{
	}

	[Token(Token = "0x6000E1E")]
	[Address(RVA = "0x10870D8", Offset = "0x10870D8", VA = "0x10870D8")]
	public void StopHidingUi()
	{
	}

	[Token(Token = "0x6000E1F")]
	[Address(RVA = "0x10870E0", Offset = "0x10870E0", VA = "0x10870E0", Slot = "8")]
	protected virtual void UpdateDebugFreeCam()
	{
	}

	[Token(Token = "0x6000E20")]
	[Address(RVA = "0x10870E4", Offset = "0x10870E4", VA = "0x10870E4", Slot = "9")]
	protected virtual bool ShouldProcessInput()
	{
		return default(bool);
	}

	[Token(Token = "0x6000E21")]
	[Address(RVA = "0x10870EC", Offset = "0x10870EC", VA = "0x10870EC", Slot = "10")]
	public virtual void EnableDebugFreeCam()
	{
	}

	[Token(Token = "0x6000E22")]
	[Address(RVA = "0x10870F8", Offset = "0x10870F8", VA = "0x10870F8", Slot = "11")]
	public virtual void DisableDebugFreeCam()
	{
	}

	[Token(Token = "0x6000E23")]
	[Address(RVA = "0x1087100", Offset = "0x1087100", VA = "0x1087100")]
	public bool IsDebugFreeCamEnabled()
	{
		return default(bool);
	}

	[Token(Token = "0x6000E24")]
	[Address(RVA = "0x1087108", Offset = "0x1087108", VA = "0x1087108")]
	protected DebugManager_Base()
	{
	}
}
[Token(Token = "0x200024B")]
public abstract class DebugManager_XR : DebugManager_Base
{
	[Token(Token = "0x4000C5C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private GameObject locomotionSystemGo;

	[Token(Token = "0x6000E25")]
	[Address(RVA = "0x1087164", Offset = "0x1087164", VA = "0x1087164", Slot = "6")]
	public override void OnStartUp()
	{
	}

	[Token(Token = "0x6000E26")]
	[Address(RVA = "0x1087240", Offset = "0x1087240", VA = "0x1087240", Slot = "10")]
	public override void EnableDebugFreeCam()
	{
	}

	[Token(Token = "0x6000E27")]
	[Address(RVA = "0x1087300", Offset = "0x1087300", VA = "0x1087300", Slot = "11")]
	public override void DisableDebugFreeCam()
	{
	}

	[Token(Token = "0x6000E28")]
	[Address(RVA = "0x10873B8", Offset = "0x10873B8", VA = "0x10873B8", Slot = "8")]
	protected override void UpdateDebugFreeCam()
	{
	}

	[Token(Token = "0x6000E29")]
	[Address(RVA = "0x10875B4", Offset = "0x10875B4", VA = "0x10875B4")]
	protected DebugManager_XR()
	{
	}
}
[Token(Token = "0x200024C")]
public abstract class DebugManager_FlatScreen : DebugManager_Base
{
	[Token(Token = "0x4000C5D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private DebugMenu debugMenu;

	[Token(Token = "0x4000C5E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private ControllerBaseInteractor interactor;

	[Token(Token = "0x4000C5F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private bool freeCamInitialised;

	[Token(Token = "0x6000E2A")]
	[Address(RVA = "0x10875B8", Offset = "0x10875B8", VA = "0x10875B8", Slot = "7")]
	public override void OnUpdate(float deltaTime)
	{
	}

	[Token(Token = "0x6000E2B")]
	[Address(RVA = "0x10877DC", Offset = "0x10877DC", VA = "0x10877DC", Slot = "6")]
	public override void OnStartUp()
	{
	}

	[Token(Token = "0x6000E2C")]
	[Address(RVA = "0x10878C8", Offset = "0x10878C8", VA = "0x10878C8", Slot = "10")]
	public override void EnableDebugFreeCam()
	{
	}

	[Token(Token = "0x6000E2D")]
	[Address(RVA = "0x1087A0C", Offset = "0x1087A0C", VA = "0x1087A0C", Slot = "11")]
	public override void DisableDebugFreeCam()
	{
	}

	[Token(Token = "0x6000E2E")]
	[Address(RVA = "0x1087704", Offset = "0x1087704", VA = "0x1087704")]
	private void ToggleDebugFreeCam()
	{
	}

	[Token(Token = "0x6000E2F")]
	[Address(RVA = "0x1087ADC", Offset = "0x1087ADC", VA = "0x1087ADC", Slot = "9")]
	protected override bool ShouldProcessInput()
	{
		return default(bool);
	}

	[Token(Token = "0x6000E30")]
	[Address(RVA = "0x1087BA4", Offset = "0x1087BA4", VA = "0x1087BA4")]
	protected DebugManager_FlatScreen()
	{
	}
}
[Token(Token = "0x200024D")]
public class DebugManager : DebugManager_XR
{
	[Token(Token = "0x6000E31")]
	[Address(RVA = "0x1087BA8", Offset = "0x1087BA8", VA = "0x1087BA8")]
	public DebugManager()
	{
	}
}
[Token(Token = "0x200024E")]
public enum PlayerAction
{
	[Token(Token = "0x4000C61")]
	ENTER_AREA,
	[Token(Token = "0x4000C62")]
	LEAVE_AREA,
	[Token(Token = "0x4000C63")]
	COUNT
}
[Token(Token = "0x200024F")]
public enum PlayerStates
{
	[Token(Token = "0x4000C65")]
	FREE,
	[Token(Token = "0x4000C66")]
	BUSY,
	[Token(Token = "0x4000C67")]
	MENU,
	[Token(Token = "0x4000C68")]
	COUNT
}
[Token(Token = "0x2000250")]
public enum PlayerLookInputMode
{
	[Token(Token = "0x4000C6A")]
	PLAYER_CONTROLLED,
	[Token(Token = "0x4000C6B")]
	GAME_CONTROLLED
}
[Token(Token = "0x2000251")]
public enum PlayerMoveModes
{
	[Token(Token = "0x4000C6D")]
	WALK,
	[Token(Token = "0x4000C6E")]
	CROUCH,
	[Token(Token = "0x4000C6F")]
	COUNT
}
[Token(Token = "0x2000252")]
public enum PlayerXRStances
{
	[Token(Token = "0x4000C71")]
	ROOMSCALE,
	[Token(Token = "0x4000C72")]
	CROUCH,
	[Token(Token = "0x4000C73")]
	STAND
}
[Token(Token = "0x2000253")]
public enum PlayerXRHeightModes
{
	[Token(Token = "0x4000C75")]
	NONE,
	[Token(Token = "0x4000C76")]
	ONLYCROUCH,
	[Token(Token = "0x4000C77")]
	ONLYSTAND,
	[Token(Token = "0x4000C78")]
	HYBRID
}
[Token(Token = "0x2000254")]
public enum InteractionAnimEvent
{
	[Token(Token = "0x4000C7A")]
	ATTACH,
	[Token(Token = "0x4000C7B")]
	TAP,
	[Token(Token = "0x4000C7C")]
	OPEN_DOOR,
	[Token(Token = "0x4000C7D")]
	CLOSE_DOOR
}
[Token(Token = "0x2000255")]
public enum ButtonPressEvent
{
	[Token(Token = "0x4000C7F")]
	PHONE_LINE_1,
	[Token(Token = "0x4000C80")]
	PHONE_LINE_2,
	[Token(Token = "0x4000C81")]
	PHONE_LINE_3,
	[Token(Token = "0x4000C82")]
	INTERCOM
}
[Token(Token = "0x2000256")]
public enum DictaphoneButtonPressEvent
{
	[Token(Token = "0x4000C84")]
	DICTAPHONE_1 = 1,
	[Token(Token = "0x4000C85")]
	DICTAPHONE_2,
	[Token(Token = "0x4000C86")]
	DICTAPHONE_3,
	[Token(Token = "0x4000C87")]
	DICTAPHONE_4,
	[Token(Token = "0x4000C88")]
	DICTAPHONE_5,
	[Token(Token = "0x4000C89")]
	DICTAPHONE_6,
	[Token(Token = "0x4000C8A")]
	DICTAPHONE_7
}
[Token(Token = "0x2000257")]
public enum InteractionCallback
{
	[Token(Token = "0x4000C8C")]
	NONE,
	[Token(Token = "0x4000C8D")]
	CARTRIDGE_INSERTED_INTO_PLAYER,
	[Token(Token = "0x4000C8E")]
	CARTRIDGE_TAKEN_OUT_FROM_PLAYER,
	[Token(Token = "0x4000C8F")]
	CLUE_SPOTTED,
	[Token(Token = "0x4000C90")]
	DOOR_ENTERED,
	[Token(Token = "0x4000C91")]
	DOOR_IS_LOCKED,
	[Token(Token = "0x4000C92")]
	DROPPED,
	[Token(Token = "0x4000C93")]
	INSPECT_STARTED,
	[Token(Token = "0x4000C94")]
	KICKED,
	[Token(Token = "0x4000C95")]
	LOOK_AT_FINISHED,
	[Token(Token = "0x4000C96")]
	LOOK_AT_STARTED,
	[Token(Token = "0x4000C97")]
	PICKED_UP,
	[Token(Token = "0x4000C98")]
	PLACED,
	[Token(Token = "0x4000C99")]
	RECORD_INSERTED_INTO_PLAYER,
	[Token(Token = "0x4000C9A")]
	RECORD_TAKEN_OUT_FROM_PLAYER,
	[Token(Token = "0x4000C9B")]
	SAT_DOWN_ON,
	[Token(Token = "0x4000C9C")]
	SCOPE_ENTERED,
	[Token(Token = "0x4000C9D")]
	SCOPE_EXITED,
	[Token(Token = "0x4000C9E")]
	STOOD_UP_FROM,
	[Token(Token = "0x4000C9F")]
	SWITCHED_OFF,
	[Token(Token = "0x4000CA0")]
	SWITCHED_ON,
	[Token(Token = "0x4000CA1")]
	THROWN,
	[Token(Token = "0x4000CA2")]
	UNLOCKED,
	[Token(Token = "0x4000CA3")]
	COUNT
}
[Token(Token = "0x2000258")]
public class EventManager : MonoBehaviour, IService
{
	[Token(Token = "0x4000CA4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private List<CallbackVoid<GameObject, GameObject, InteractionCallback>> _interactEventCallbacks;

	[Token(Token = "0x4000CA5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private List<CallbackVoid<string, string, string>> _factChangeCallbacks;

	[Token(Token = "0x4000CA6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private List<CallbackVoid<ButtonPressEvent>> _buttonPressEventCallbacks;

	[Token(Token = "0x4000CA7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private List<CallbackVoid<DictaphoneButtonPressEvent>> _dictaphoneButtonPressEventCallbacks;

	[Token(Token = "0x4000CA8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private List<CallbackVoid<FloppyDisk>> _floppyDiskOpenedCallbacks;

	[Token(Token = "0x6000E32")]
	[Address(RVA = "0x1087BAC", Offset = "0x1087BAC", VA = "0x1087BAC", Slot = "4")]
	public void OnStartUp()
	{
	}

	[Token(Token = "0x6000E33")]
	[Address(RVA = "0x1087D7C", Offset = "0x1087D7C", VA = "0x1087D7C", Slot = "5")]
	public void OnCleanUp()
	{
	}

	[Token(Token = "0x6000E34")]
	[Address(RVA = "0x1087D80", Offset = "0x1087D80", VA = "0x1087D80", Slot = "6")]
	public void OnUpdate(float deltaTime)
	{
	}

	[Token(Token = "0x6000E35")]
	[Address(RVA = "0x1086208", Offset = "0x1086208", VA = "0x1086208")]
	public void RegisterFactChangeCallback(CallbackVoid<string, string, string> callback)
	{
	}

	[Token(Token = "0x6000E36")]
	[Address(RVA = "0x1087D84", Offset = "0x1087D84", VA = "0x1087D84")]
	public void UnregisterFactChangeCallback(CallbackVoid<string, string, string> callback)
	{
	}

	[Token(Token = "0x6000E37")]
	[Address(RVA = "0x1087DDC", Offset = "0x1087DDC", VA = "0x1087DDC")]
	public void RegisterInteractEventCallback(CallbackVoid<GameObject, GameObject, InteractionCallback> callback)
	{
	}

	[Token(Token = "0x6000E38")]
	[Address(RVA = "0x1087E8C", Offset = "0x1087E8C", VA = "0x1087E8C")]
	public void UnregisterInteractEventCallback(CallbackVoid<GameObject, GameObject, InteractionCallback> callback)
	{
	}

	[Token(Token = "0x6000E39")]
	[Address(RVA = "0x1087EE4", Offset = "0x1087EE4", VA = "0x1087EE4")]
	public void RegisterButtonPressCallback(CallbackVoid<ButtonPressEvent> callback)
	{
	}

	[Token(Token = "0x6000E3A")]
	[Address(RVA = "0x1087F94", Offset = "0x1087F94", VA = "0x1087F94")]
	public void UnregisterButtonPressCallback(CallbackVoid<ButtonPressEvent> callback)
	{
	}

	[Token(Token = "0x6000E3B")]
	[Address(RVA = "0x1087FEC", Offset = "0x1087FEC", VA = "0x1087FEC")]
	public void RegisterDictaphoneButtonPressCallback(CallbackVoid<DictaphoneButtonPressEvent> callback)
	{
	}

	[Token(Token = "0x6000E3C")]
	[Address(RVA = "0x108809C", Offset = "0x108809C", VA = "0x108809C")]
	public void UnregisterDictaphoneButtonPressCallback(CallbackVoid<DictaphoneButtonPressEvent> callback)
	{
	}

	[Token(Token = "0x6000E3D")]
	[Address(RVA = "0x10880F4", Offset = "0x10880F4", VA = "0x10880F4")]
	public void RegisterFloppyDiskOpenedCallback(CallbackVoid<FloppyDisk> callback)
	{
	}

	[Token(Token = "0x6000E3E")]
	[Address(RVA = "0x10881A4", Offset = "0x10881A4", VA = "0x10881A4")]
	public void UnregisterFloppyDiskOpenedCallback(CallbackVoid<FloppyDisk> callback)
	{
	}

	[Token(Token = "0x6000E3F")]
	[Address(RVA = "0x10881FC", Offset = "0x10881FC", VA = "0x10881FC")]
	public void FactChanged(string containerName, string blackboardName, string factName)
	{
	}

	[Token(Token = "0x6000E40")]
	[Address(RVA = "0x107C26C", Offset = "0x107C26C", VA = "0x107C26C")]
	public void Interacted(GameObject thePlayer, GameObject theItem, InteractionCallback theAction)
	{
	}

	[Token(Token = "0x6000E41")]
	[Address(RVA = "0x1088314", Offset = "0x1088314", VA = "0x1088314")]
	public void OnFloppyDiskOpened(FloppyDisk disk)
	{
	}

	[Token(Token = "0x6000E42")]
	[Address(RVA = "0x1088410", Offset = "0x1088410", VA = "0x1088410")]
	public void DictaphoneButtonPressed(int dictaphoneNumber)
	{
	}

	[Token(Token = "0x6000E43")]
	[Address(RVA = "0x108850C", Offset = "0x108850C", VA = "0x108850C")]
	public void PhoneLineButtonPressed(int lineNumber)
	{
	}

	[Token(Token = "0x6000E44")]
	[Address(RVA = "0x1088698", Offset = "0x1088698", VA = "0x1088698")]
	public void IntercomButtonPressed()
	{
	}

	[Token(Token = "0x6000E45")]
	[Address(RVA = "0x1088784", Offset = "0x1088784", VA = "0x1088784")]
	public EventManager()
	{
	}
}
[Token(Token = "0x2000259")]
public class GamePadIconService : MonoBehaviour, IService
{
	[Token(Token = "0x4000CA9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private IInputBindingMarkupProvider[] _markupDefinitions;

	[Token(Token = "0x6000E46")]
	[Address(RVA = "0x108878C", Offset = "0x108878C", VA = "0x108878C")]
	public void Initialise(IInputBindingMarkupProvider[] markupDefinitions)
	{
	}

	[Token(Token = "0x6000E47")]
	[Address(RVA = "0x1088794", Offset = "0x1088794", VA = "0x1088794")]
	public bool TryGetGamePadMarkupForInputAction(InputActionType inputActionType, int bindingIndex, out string markup)
	{
		return default(bool);
	}

	[Token(Token = "0x6000E48")]
	[Address(RVA = "0x1088BF8", Offset = "0x1088BF8", VA = "0x1088BF8", Slot = "4")]
	public void OnStartUp()
	{
	}

	[Token(Token = "0x6000E49")]
	[Address(RVA = "0x1088BFC", Offset = "0x1088BFC", VA = "0x1088BFC", Slot = "5")]
	public void OnCleanUp()
	{
	}

	[Token(Token = "0x6000E4A")]
	[Address(RVA = "0x1088C00", Offset = "0x1088C00", VA = "0x1088C00", Slot = "6")]
	public void OnUpdate(float deltaTime)
	{
	}

	[Token(Token = "0x6000E4B")]
	[Address(RVA = "0x1088A74", Offset = "0x1088A74", VA = "0x1088A74")]
	private IInputBindingMarkupProvider FindBindingMarkupMapForDevice(string deviceName)
	{
		return null;
	}

	[Token(Token = "0x6000E4C")]
	[Address(RVA = "0x10888C4", Offset = "0x10888C4", VA = "0x10888C4")]
	private static string GetLastInputDeviceNameForPrimaryUser()
	{
		return null;
	}

	[Token(Token = "0x6000E4D")]
	[Address(RVA = "0x1088C04", Offset = "0x1088C04", VA = "0x1088C04")]
	private static string GetFallbackDeviceName()
	{
		return null;
	}

	[Token(Token = "0x6000E4E")]
	[Address(RVA = "0x1088C44", Offset = "0x1088C44", VA = "0x1088C44")]
	public GamePadIconService()
	{
	}
}
[Token(Token = "0x200025A")]
public interface IGameUserService
{
}
[Token(Token = "0x200025B")]
public class GameUserService : MonoBehaviour, IService, IGameUserService
{
	[Token(Token = "0x4000CAA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private short m_PlayerCount;

	[Token(Token = "0x4000CAB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private UserService<NullUserServiceImpl, NullUser, NullDeviceId> _userService;

	[Token(Token = "0x4000CAC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private IUserService iUserService;

	[Token(Token = "0x4000CAD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool _HasSubscribedToUserEngagementEvent;

	[Token(Token = "0x6000E4F")]
	[Address(RVA = "0x1088C4C", Offset = "0x1088C4C", VA = "0x1088C4C")]
	public IUserService CreateUserService()
	{
		return null;
	}

	[Token(Token = "0x6000E50")]
	[Address(RVA = "0x1088CD8", Offset = "0x1088CD8", VA = "0x1088CD8", Slot = "5")]
	public void OnCleanUp()
	{
	}

	[Token(Token = "0x6000E51")]
	[Address(RVA = "0x1088E18", Offset = "0x1088E18", VA = "0x1088E18", Slot = "4")]
	public void OnStartUp()
	{
	}

	[Token(Token = "0x6000E52")]
	[Address(RVA = "0x1088E6C", Offset = "0x1088E6C", VA = "0x1088E6C", Slot = "6")]
	public void OnUpdate(float deltaTime)
	{
	}

	[Token(Token = "0x6000E53")]
	[Address(RVA = "0x1088FB8", Offset = "0x1088FB8", VA = "0x1088FB8")]
	private void OnPrimaryUserEngaged()
	{
	}

	[Token(Token = "0x6000E54")]
	[Address(RVA = "0x1088FBC", Offset = "0x1088FBC", VA = "0x1088FBC")]
	public GameUserService()
	{
	}
}
[Token(Token = "0x200025C")]
public class IconTextMarkupService : MonoBehaviour, IService
{
	[Token(Token = "0x200025D")]
	public delegate void IconTextRefreshNotification();

	[Token(Token = "0x4000CAE")]
	private const int INITIAL_STRING_SIZE = 1024;

	[Token(Token = "0x4000CAF")]
	private const int EXPECTED_MAX_REPLACEMENTS = 4;

	[Token(Token = "0x4000CB1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private InputActionAsset m_InputActionAsset;

	[Token(Token = "0x4000CB2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private StyleDefinitionObject m_TextStyleAsset;

	[Token(Token = "0x4000CB3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private InputBindingSpriteOverride m_InputBindingSpriteOverrides;

	[Token(Token = "0x4000CB4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	[Space]
	private DisplayStringInputBindingMarkupObject[] m_DisplayStringMarkupMaps;

	[Token(Token = "0x4000CB5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private SpriteInputBindingMarkupObject[] m_SpriteMarkupMaps;

	[Token(Token = "0x4000CB6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private TextRenderingService _textRenderingService;

	[Token(Token = "0x4000CB7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private IInputBindingMarkupProvider[] _markupProviders;

	[Token(Token = "0x17000137")]
	public IInputBindingMarkupProvider[] MarkupProviders
	{
		[Token(Token = "0x6000E57")]
		[Address(RVA = "0x108913C", Offset = "0x108913C", VA = "0x108913C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1400000E")]
	public static event IconTextRefreshNotification OnRefreshIconText
	{
		[Token(Token = "0x6000E55")]
		[Address(RVA = "0x1088FCC", Offset = "0x1088FCC", VA = "0x1088FCC")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000E56")]
		[Address(RVA = "0x1089084", Offset = "0x1089084", VA = "0x1089084")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x6000E58")]
	[Address(RVA = "0x1089144", Offset = "0x1089144", VA = "0x1089144")]
	public void Initialise(IInputService theInputService)
	{
	}

	[Token(Token = "0x6000E59")]
	[Address(RVA = "0x1089418", Offset = "0x1089418", VA = "0x1089418", Slot = "5")]
	public void OnCleanUp()
	{
	}

	[Token(Token = "0x6000E5A")]
	[Address(RVA = "0x1089434", Offset = "0x1089434", VA = "0x1089434", Slot = "4")]
	public void OnStartUp()
	{
	}

	[Token(Token = "0x6000E5B")]
	[Address(RVA = "0x1089464", Offset = "0x1089464", VA = "0x1089464", Slot = "6")]
	public void OnUpdate(float deltaTime)
	{
	}

	[Token(Token = "0x6000E5C")]
	[Address(RVA = "0x1089480", Offset = "0x1089480", VA = "0x1089480")]
	public string GetDisplayOverride(string key)
	{
		return null;
	}

	[Token(Token = "0x6000E5D")]
	[Address(RVA = "0x108949C", Offset = "0x108949C", VA = "0x108949C")]
	public void RefreshIconText()
	{
	}

	[Token(Token = "0x6000E5E")]
	[Address(RVA = "0x1089500", Offset = "0x1089500", VA = "0x1089500")]
	public IconTextMarkupService()
	{
	}
}
[Token(Token = "0x200025E")]
public interface IElectricityPowered
{
	[Token(Token = "0x6000E63")]
	void OnPowerStateChanged(bool newState);
}
[Token(Token = "0x200025F")]
public class ObjectRestorationService : MonoBehaviour, IService
{
	[Token(Token = "0x2000260")]
	private enum RestorationStatus
	{
		[Token(Token = "0x4000CC5")]
		None,
		[Token(Token = "0x4000CC6")]
		Requested,
		[Token(Token = "0x4000CC7")]
		FirstPass,
		[Token(Token = "0x4000CC8")]
		SecondPass
	}

	[Token(Token = "0x4000CB8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private float fadeDuration;

	[Token(Token = "0x4000CB9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private float fadedDuration;

	[Token(Token = "0x4000CBA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private float minY;

	[Token(Token = "0x4000CBB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private LocalizedString restoringPromptText;

	[Token(Token = "0x4000CBC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private LocalizedString restoredPromptText;

	[Token(Token = "0x4000CBD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	[ReadOnly]
	private List<RestorableObject> detectedRestorables;

	[Token(Token = "0x4000CBE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	[ReadOnly]
	private List<StaticClosableContainer> detectedStaticClosableContainers;

	[Token(Token = "0x4000CBF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private RestorationStatus currentStatus;

	[Token(Token = "0x4000CC0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private List<RestorableObject> toRestore;

	[Token(Token = "0x4000CC1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private List<RestorableObject> restorablesOutOfBounds;

	[Token(Token = "0x4000CC2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private int detectedRestorablesYCheckId;

	[Token(Token = "0x4000CC3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private PlayerBase player;

	[Token(Token = "0x6000E64")]
	[Address(RVA = "0x1089614", Offset = "0x1089614", VA = "0x1089614")]
	public void SetPlayer(PlayerBase playerToBeSet)
	{
	}

	[Token(Token = "0x6000E65")]
	[Address(RVA = "0x108961C", Offset = "0x108961C", VA = "0x108961C")]
	public void RequestObjectRestoration()
	{
	}

	[Token(Token = "0x6000E66")]
	[Address(RVA = "0x1089634", Offset = "0x1089634", VA = "0x1089634")]
	public FadeConfig GetFadeConfig()
	{
		return default(FadeConfig);
	}

	[Token(Token = "0x6000E67")]
	[Address(RVA = "0x108974C", Offset = "0x108974C", VA = "0x108974C")]
	public void ShowRestoringPrompt()
	{
	}

	[Token(Token = "0x6000E68")]
	[Address(RVA = "0x1089774", Offset = "0x1089774", VA = "0x1089774")]
	private void RestoreAllRestorables(GameStateContext context)
	{
	}

	[Token(Token = "0x6000E69")]
	[Address(RVA = "0x108978C", Offset = "0x108978C", VA = "0x108978C")]
	public bool IsRestorationInProgress()
	{
		return default(bool);
	}

	[Token(Token = "0x6000E6A")]
	[Address(RVA = "0x108979C", Offset = "0x108979C", VA = "0x108979C")]
	public bool IsRestorationRequested()
	{
		return default(bool);
	}

	[Token(Token = "0x6000E6B")]
	[Address(RVA = "0x10897AC", Offset = "0x10897AC", VA = "0x10897AC")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000E6C")]
	[Address(RVA = "0x10897CC", Offset = "0x10897CC", VA = "0x10897CC")]
	private void DoFirstRestorationPass()
	{
	}

	[Token(Token = "0x6000E6D")]
	[Address(RVA = "0x1089CF4", Offset = "0x1089CF4", VA = "0x1089CF4")]
	private void DoSecondRestorationPass()
	{
	}

	[Token(Token = "0x6000E6E")]
	[Address(RVA = "0x1089D84", Offset = "0x1089D84", VA = "0x1089D84")]
	private void PerformRoutineYCheck()
	{
	}

	[Token(Token = "0x6000E6F")]
	[Address(RVA = "0x108A040", Offset = "0x108A040", VA = "0x108A040")]
	private void ShowPrompt(GameStateContext context)
	{
	}

	[Token(Token = "0x6000E70")]
	[Address(RVA = "0x108A068", Offset = "0x108A068", VA = "0x108A068", Slot = "4")]
	public void OnStartUp()
	{
	}

	[Token(Token = "0x6000E71")]
	[Address(RVA = "0x108A06C", Offset = "0x108A06C", VA = "0x108A06C", Slot = "5")]
	public void OnCleanUp()
	{
	}

	[Token(Token = "0x6000E72")]
	[Address(RVA = "0x108A070", Offset = "0x108A070", VA = "0x108A070", Slot = "6")]
	public void OnUpdate(float deltaTime)
	{
	}

	[Token(Token = "0x6000E73")]
	[Address(RVA = "0x108A074", Offset = "0x108A074", VA = "0x108A074")]
	public ObjectRestorationService()
	{
	}
}
[Token(Token = "0x2000261")]
public class PausableObjectService : MonoBehaviour, IService
{
	[Token(Token = "0x4000CC9")]
	private const int c_initialNumPausableObjects = 512;

	[Token(Token = "0x4000CCA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private List<IPausableObject> _pausableObjects;

	[Token(Token = "0x6000E74")]
	[Address(RVA = "0x108A1B8", Offset = "0x108A1B8", VA = "0x108A1B8")]
	public void AddObject(IPausableObject obj)
	{
	}

	[Token(Token = "0x6000E75")]
	[Address(RVA = "0x108A268", Offset = "0x108A268", VA = "0x108A268")]
	public void RemoveObject(IPausableObject obj)
	{
	}

	[Token(Token = "0x6000E76")]
	[Address(RVA = "0x108A2C0", Offset = "0x108A2C0", VA = "0x108A2C0")]
	private void OnGamePaused(bool paused)
	{
	}

	[Token(Token = "0x6000E77")]
	[Address(RVA = "0x108A474", Offset = "0x108A474", VA = "0x108A474", Slot = "4")]
	public void OnStartUp()
	{
	}

	[Token(Token = "0x6000E78")]
	[Address(RVA = "0x108A570", Offset = "0x108A570", VA = "0x108A570", Slot = "5")]
	public void OnCleanUp()
	{
	}

	[Token(Token = "0x6000E79")]
	[Address(RVA = "0x108A6BC", Offset = "0x108A6BC", VA = "0x108A6BC", Slot = "6")]
	public void OnUpdate(float deltaTime)
	{
	}

	[Token(Token = "0x6000E7A")]
	[Address(RVA = "0x108A6C0", Offset = "0x108A6C0", VA = "0x108A6C0")]
	public PausableObjectService()
	{
	}
}
[Token(Token = "0x2000262")]
public class PowerShaderGlobalController : MonoBehaviour, IInitialisable, ICheckpointActivatable
{
	[Token(Token = "0x4000CCB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private List<StoryObjectCheckpointProperties> _exclusiveStoryObjectCheckpointProperties;

	[Token(Token = "0x4000CCC")]
	private const string cPowerParameterName = "_Power";

	[Token(Token = "0x6000E7B")]
	[Address(RVA = "0x108A74C", Offset = "0x108A74C", VA = "0x108A74C", Slot = "4")]
	public bool Initialise()
	{
		return default(bool);
	}

	[Token(Token = "0x6000E7C")]
	[Address(RVA = "0x108AA3C", Offset = "0x108AA3C", VA = "0x108AA3C", Slot = "5")]
	public void OnCheckpointActiveStateChanged(bool active)
	{
	}

	[Token(Token = "0x6000E7D")]
	[Address(RVA = "0x108AA94", Offset = "0x108AA94", VA = "0x108AA94")]
	public PowerShaderGlobalController()
	{
	}
}
[Token(Token = "0x2000263")]
public class PowerSupplyEntryPoint : MonoBehaviour, IInitialisable, ICheckpointActivatable
{
	[Token(Token = "0x4000CCD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private List<StoryObjectCheckpointProperties> _exclusiveStoryObjectCheckpointProperties;

	[Token(Token = "0x4000CCE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private IElectricityPowered[] electricityPowered;

	[Token(Token = "0x17000138")]
	public bool IsPowerOn
	{
		[Token(Token = "0x6000E7E")]
		[Address(RVA = "0x108AB20", Offset = "0x108AB20", VA = "0x108AB20")]
		[CompilerGenerated]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000E7F")]
		[Address(RVA = "0x108AB28", Offset = "0x108AB28", VA = "0x108AB28")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x6000E80")]
	[Address(RVA = "0x108AB34", Offset = "0x108AB34", VA = "0x108AB34")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000E81")]
	[Address(RVA = "0x108AB8C", Offset = "0x108AB8C", VA = "0x108AB8C", Slot = "4")]
	public bool Initialise()
	{
		return default(bool);
	}

	[Token(Token = "0x6000E82")]
	[Address(RVA = "0x108ABBC", Offset = "0x108ABBC", VA = "0x108ABBC", Slot = "5")]
	public void OnCheckpointActiveStateChanged(bool active)
	{
	}

	[Token(Token = "0x6000E83")]
	[Address(RVA = "0x108ACB0", Offset = "0x108ACB0", VA = "0x108ACB0")]
	public PowerSupplyEntryPoint()
	{
	}
}
[Token(Token = "0x2000264")]
public abstract class BaseStatUI : MonoBehaviour, IInitialisable
{
	[Token(Token = "0x6000E84")]
	[Address(RVA = "0x108AD44", Offset = "0x108AD44", VA = "0x108AD44", Slot = "5")]
	public virtual bool Initialise()
	{
		return default(bool);
	}

	[Token(Token = "0x6000E85")]
	[Address(RVA = "0x108AD60", Offset = "0x108AD60", VA = "0x108AD60", Slot = "6")]
	public virtual void UpdateStats()
	{
	}

	[Token(Token = "0x6000E86")]
	[Address(RVA = "0x108AD64", Offset = "0x108AD64", VA = "0x108AD64", Slot = "7")]
	public virtual void DisplayStats()
	{
	}

	[Token(Token = "0x6000E87")]
	[Address(RVA = "0x108AD68", Offset = "0x108AD68", VA = "0x108AD68")]
	protected BaseStatUI()
	{
	}
}
[Token(Token = "0x2000265")]
public class CollectableStatUI : BaseStatUI
{
	[Token(Token = "0x4000CD0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	protected List<FactAsset> _factAssets;

	[Token(Token = "0x4000CD1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private TextMeshProUGUI _tmproText;

	[Token(Token = "0x4000CD2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private NarrativeState _narrativeState;

	[Token(Token = "0x4000CD3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private CallbackVoid<string, string, string> _factChangeCallback;

	[Token(Token = "0x4000CD4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int _collectableCount;

	[Token(Token = "0x6000E88")]
	[Address(RVA = "0x108AD70", Offset = "0x108AD70", VA = "0x108AD70", Slot = "5")]
	public override bool Initialise()
	{
		return default(bool);
	}

	[Token(Token = "0x6000E89")]
	[Address(RVA = "0x108AEC0", Offset = "0x108AEC0", VA = "0x108AEC0")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000E8A")]
	[Address(RVA = "0x108AF04", Offset = "0x108AF04", VA = "0x108AF04", Slot = "6")]
	public override void UpdateStats()
	{
	}

	[Token(Token = "0x6000E8B")]
	[Address(RVA = "0x108B054", Offset = "0x108B054", VA = "0x108B054", Slot = "7")]
	public override void DisplayStats()
	{
	}

	[Token(Token = "0x6000E8C")]
	[Address(RVA = "0x108B0F4", Offset = "0x108B0F4", VA = "0x108B0F4")]
	private void OnBlackboardChanged(string containerName, string blackboardName, string factName)
	{
	}

	[Token(Token = "0x6000E8D")]
	[Address(RVA = "0x108B250", Offset = "0x108B250", VA = "0x108B250")]
	public CollectableStatUI()
	{
	}
}
[Token(Token = "0x2000266")]
public class GameplayTimeStatUI : BaseStatUI
{
	[Token(Token = "0x4000CD5")]
	private const string _timeFormat = "hh\\:mm\\:ss";

	[Token(Token = "0x4000CD6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private TextMeshProUGUI _tmproText;

	[Token(Token = "0x4000CD7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private NarrativeState _narrativeState;

	[Token(Token = "0x4000CD8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private string _totalPlayedTime;

	[Token(Token = "0x4000CD9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float _currentGameplayTime;

	[Token(Token = "0x6000E8E")]
	[Address(RVA = "0x108B2D8", Offset = "0x108B2D8", VA = "0x108B2D8", Slot = "5")]
	public override bool Initialise()
	{
		return default(bool);
	}

	[Token(Token = "0x6000E8F")]
	[Address(RVA = "0x108B3A8", Offset = "0x108B3A8", VA = "0x108B3A8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000E90")]
	[Address(RVA = "0x108B404", Offset = "0x108B404", VA = "0x108B404", Slot = "6")]
	public override void UpdateStats()
	{
	}

	[Token(Token = "0x6000E91")]
	[Address(RVA = "0x108B504", Offset = "0x108B504", VA = "0x108B504", Slot = "7")]
	public override void DisplayStats()
	{
	}

	[Token(Token = "0x6000E92")]
	[Address(RVA = "0x108B438", Offset = "0x108B438", VA = "0x108B438")]
	public static string SecondsToFormatedTime(float seconds)
	{
		return null;
	}

	[Token(Token = "0x6000E93")]
	[Address(RVA = "0x108B594", Offset = "0x108B594", VA = "0x108B594")]
	public GameplayTimeStatUI()
	{
	}
}
[Token(Token = "0x2000267")]
public class IntFactStatUI : BaseStatUI
{
	[Token(Token = "0x4000CDA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	protected FactAsset factAsset;

	[Token(Token = "0x4000CDB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private TextMeshProUGUI tmproText;

	[Token(Token = "0x4000CDC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private NarrativeState narrativeState;

	[Token(Token = "0x4000CDD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private CallbackVoid<string, string, string> factChangeCallback;

	[Token(Token = "0x4000CDE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int value;

	[Token(Token = "0x6000E94")]
	[Address(RVA = "0x108B59C", Offset = "0x108B59C", VA = "0x108B59C", Slot = "5")]
	public override bool Initialise()
	{
		return default(bool);
	}

	[Token(Token = "0x6000E95")]
	[Address(RVA = "0x108B6DC", Offset = "0x108B6DC", VA = "0x108B6DC")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000E96")]
	[Address(RVA = "0x108B720", Offset = "0x108B720", VA = "0x108B720", Slot = "6")]
	public override void UpdateStats()
	{
	}

	[Token(Token = "0x6000E97")]
	[Address(RVA = "0x108B7A4", Offset = "0x108B7A4", VA = "0x108B7A4", Slot = "7")]
	public override void DisplayStats()
	{
	}

	[Token(Token = "0x6000E98")]
	[Address(RVA = "0x108B844", Offset = "0x108B844", VA = "0x108B844")]
	private void OnBlackboardChanged(string containerName, string blackboardName, string factName)
	{
	}

	[Token(Token = "0x6000E99")]
	[Address(RVA = "0x108B8E4", Offset = "0x108B8E4", VA = "0x108B8E4")]
	public IntFactStatUI()
	{
	}
}
[Token(Token = "0x2000268")]
public class LastSavedStatUI : BaseStatUI
{
	[Token(Token = "0x4000CDF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private NarrativeState _narrativeState;

	[Token(Token = "0x4000CE0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int _totalPlayedTime;

	[Token(Token = "0x4000CE1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float _lastRecognisedValue;

	[Token(Token = "0x4000CE2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private LocalizeStringEvent _localizeStringEvent;

	[Token(Token = "0x17000139")]
	public int lastSaved
	{
		[Token(Token = "0x6000E9A")]
		[Address(RVA = "0x108B8EC", Offset = "0x108B8EC", VA = "0x108B8EC")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x6000E9B")]
	[Address(RVA = "0x108B8F4", Offset = "0x108B8F4", VA = "0x108B8F4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000E9C")]
	[Address(RVA = "0x108B94C", Offset = "0x108B94C", VA = "0x108B94C", Slot = "5")]
	public override bool Initialise()
	{
		return default(bool);
	}

	[Token(Token = "0x6000E9D")]
	[Address(RVA = "0x108BA1C", Offset = "0x108BA1C", VA = "0x108BA1C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000E9E")]
	[Address(RVA = "0x108BA7C", Offset = "0x108BA7C", VA = "0x108BA7C", Slot = "6")]
	public override void UpdateStats()
	{
	}

	[Token(Token = "0x6000E9F")]
	[Address(RVA = "0x108BB08", Offset = "0x108BB08", VA = "0x108BB08", Slot = "7")]
	public override void DisplayStats()
	{
	}

	[Token(Token = "0x6000EA0")]
	[Address(RVA = "0x108BB24", Offset = "0x108BB24", VA = "0x108BB24")]
	public LastSavedStatUI()
	{
	}
}
[Token(Token = "0x2000269")]
public class StoryObjectCheckpoint : MonoBehaviour, IInitialisable, ICheckpointActivatable
{
	[Token(Token = "0x4000CE3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private List<StoryObjectCheckpointProperties> _storyObjectCheckpointProperties;

	[Token(Token = "0x1700013A")]
	public List<StoryObjectCheckpointProperties> checkpoints
	{
		[Token(Token = "0x6000EA1")]
		[Address(RVA = "0x108BB2C", Offset = "0x108BB2C", VA = "0x108BB2C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000EA2")]
	[Address(RVA = "0x108BB34", Offset = "0x108BB34", VA = "0x108BB34", Slot = "6")]
	public virtual bool Initialise()
	{
		return default(bool);
	}

	[Token(Token = "0x6000EA3")]
	[Address(RVA = "0x108BE24", Offset = "0x108BE24", VA = "0x108BE24", Slot = "7")]
	public virtual void OnCheckpointActiveStateChanged(bool active)
	{
	}

	[Token(Token = "0x6000EA4")]
	[Address(RVA = "0x108BE4C", Offset = "0x108BE4C", VA = "0x108BE4C")]
	public StoryObjectCheckpoint()
	{
	}
}
[Token(Token = "0x200026A")]
public class StoryObjectCheckpointCollectable : StoryObjectCheckpoint
{
	[Token(Token = "0x4000CE4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private CollectInteraction _collectInteraction;

	[Token(Token = "0x6000EA5")]
	[Address(RVA = "0x108BED8", Offset = "0x108BED8", VA = "0x108BED8", Slot = "6")]
	public override bool Initialise()
	{
		return default(bool);
	}

	[Token(Token = "0x6000EA6")]
	[Address(RVA = "0x108BF34", Offset = "0x108BF34", VA = "0x108BF34", Slot = "7")]
	public override void OnCheckpointActiveStateChanged(bool active)
	{
	}

	[Token(Token = "0x6000EA7")]
	[Address(RVA = "0x108BFF8", Offset = "0x108BFF8", VA = "0x108BFF8")]
	public StoryObjectCheckpointCollectable()
	{
	}
}
[Token(Token = "0x200026B")]
public interface ICheckpointActivatable
{
	[Token(Token = "0x6000EA8")]
	void OnCheckpointActiveStateChanged(bool active);
}
[Token(Token = "0x200026C")]
public class StoryObjectCheckpointHelper : MonoBehaviour, IService, ISerialisable, IDeserialisable, ISceneReferrable
{
	[Token(Token = "0x200026D")]
	private static class Keys
	{
		[Token(Token = "0x4000CEC")]
		public const string UidKey = "currentCheckpointUID";
	}

	[Token(Token = "0x4000CE5")]
	private const int c_expectedObjectsForCheckpoint = 128;

	[Token(Token = "0x4000CE6")]
	private const int c_expectedCheckpoints = 32;

	[Token(Token = "0x4000CE7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private StoryObjectCheckpointList _allStoryObjectCheckpointParameters;

	[Token(Token = "0x4000CE8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Dictionary<StoryObjectCheckpointProperties, List<ICheckpointActivatable>> _storyObjectCheckpointDictionary;

	[Token(Token = "0x4000CE9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Dictionary<StoryObjectCheckpointProperties, List<ICheckpointActivatable>> _inactiveStoryObjectCheckpointDictionary;

	[Token(Token = "0x4000CEA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private List<StoryObjectCheckpointProperties> _pendingStoryObjectCheckpointProperties;

	[Token(Token = "0x4000CEB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private StoryObjectCheckpointProperties _currentStoryObjectCheckpoint;

	[Token(Token = "0x1700013B")]
	public StoryObjectCheckpointProperties CurrentStoryObjectCheckpoint
	{
		[Token(Token = "0x6000EA9")]
		[Address(RVA = "0x108BFFC", Offset = "0x108BFFC", VA = "0x108BFFC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700013C")]
	public string typeId
	{
		[Token(Token = "0x6000EB4")]
		[Address(RVA = "0x108C7D0", Offset = "0x108C7D0", VA = "0x108C7D0", Slot = "9")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000EAA")]
	[Address(RVA = "0x108C004", Offset = "0x108C004", VA = "0x108C004", Slot = "4")]
	public void OnStartUp()
	{
	}

	[Token(Token = "0x6000EAB")]
	[Address(RVA = "0x108C2D8", Offset = "0x108C2D8", VA = "0x108C2D8", Slot = "5")]
	public void OnCleanUp()
	{
	}

	[Token(Token = "0x6000EAC")]
	[Address(RVA = "0x108C2DC", Offset = "0x108C2DC", VA = "0x108C2DC", Slot = "6")]
	public void OnUpdate(float deltaTime)
	{
	}

	[Token(Token = "0x6000EAD")]
	[Address(RVA = "0x108C2E0", Offset = "0x108C2E0", VA = "0x108C2E0")]
	public void UpdateStoryObjectCheckpoints()
	{
	}

	[Token(Token = "0x6000EAE")]
	[Address(RVA = "0x108BB64", Offset = "0x108BB64", VA = "0x108BB64")]
	public void RegisterCheckpointsForActivatable(ICheckpointActivatable checkpointable, List<StoryObjectCheckpointProperties> storyObjectCheckpointProperties)
	{
	}

	[Token(Token = "0x6000EAF")]
	[Address(RVA = "0x108A77C", Offset = "0x108A77C", VA = "0x108A77C")]
	public void RegisterExclusiveCheckpointsForActivatable(ICheckpointActivatable checkpointable, List<StoryObjectCheckpointProperties> exlusiveStoryObjectCheckpointProperties)
	{
	}

	[Token(Token = "0x6000EB0")]
	[Address(RVA = "0x108C71C", Offset = "0x108C71C", VA = "0x108C71C")]
	public bool QueueStoryObjectCheckpoints(StoryObjectCheckpointProperties storyObjectCheckpointProperty)
	{
		return default(bool);
	}

	[Token(Token = "0x6000EB1")]
	[Address(RVA = "0x108C5A8", Offset = "0x108C5A8", VA = "0x108C5A8")]
	public bool GetPendingStoryObjectCheckpoints(out StoryObjectCheckpointProperties storyObjectCheckpointProperty)
	{
		return default(bool);
	}

	[Token(Token = "0x6000EB2")]
	[Address(RVA = "0x108C648", Offset = "0x108C648", VA = "0x108C648")]
	public void RemovePendingStoryObjectCheckpoints(StoryObjectCheckpointProperties storyObjectCheckpointProperty)
	{
	}

	[Token(Token = "0x6000EB3")]
	[Address(RVA = "0x108C248", Offset = "0x108C248", VA = "0x108C248")]
	private void SetInitialCheckpoint()
	{
	}

	[Token(Token = "0x6000EB5")]
	[Address(RVA = "0x108C810", Offset = "0x108C810", VA = "0x108C810", Slot = "8")]
	public bool Serialise(FlexBufferBuilder builder, ISceneObjectReferenceSerialiser objectSerialiser)
	{
		return default(bool);
	}

	[Token(Token = "0x6000EB6")]
	[Address(RVA = "0x108C8C0", Offset = "0x108C8C0", VA = "0x108C8C0", Slot = "10")]
	public bool Deserialise(FlexBuffer.Map root, ISceneObjectReferenceDeserialiser objectDeserialiser)
	{
		return default(bool);
	}

	[Token(Token = "0x6000EB7")]
	[Address(RVA = "0x108C9F4", Offset = "0x108C9F4", VA = "0x108C9F4")]
	public StoryObjectCheckpointHelper()
	{
	}
}
[Token(Token = "0x200026E")]
[CreateAssetMenu(fileName = "Assets/_Programming/Data/StoryObjectCheckpoints/StoryObjectCheckpointList", menuName = "StoryObjectCheckpointProperties/Story Object Checkpoint List", order = 1)]
public class StoryObjectCheckpointList : ScriptableObject
{
	[Token(Token = "0x4000CED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<StoryObjectCheckpointProperties> _allStoryObjectCheckpointProperties;

	[Token(Token = "0x6000EB8")]
	[Address(RVA = "0x108CB08", Offset = "0x108CB08", VA = "0x108CB08")]
	public StoryObjectCheckpointList()
	{
	}
}
[Token(Token = "0x200026F")]
[CreateAssetMenu(fileName = "Assets/_Programming/Data/StoryObjectCheckpoints/StoryObjectCheckpointProperties", menuName = "StoryObjectCheckpointProperties/Story Object Checkpoint Properties", order = 0)]
public class StoryObjectCheckpointProperties : ScriptableObject
{
	[Serializable]
	[Token(Token = "0x2000270")]
	private struct SerializableTime
	{
		[Token(Token = "0x4000CF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private int hour;

		[Token(Token = "0x4000CF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		[SerializeField]
		private int minute;

		[Token(Token = "0x6000EBB")]
		[Address(RVA = "0x108CB38", Offset = "0x108CB38", VA = "0x108CB38")]
		public TimeSpan ToTime()
		{
			return default(TimeSpan);
		}
	}

	[Token(Token = "0x4000CEE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	public string _guid;

	[Token(Token = "0x4000CEF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public UnityEngine.Sprite _fadeSequenceGraphics;

	[Token(Token = "0x4000CF0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private SerializableTime _time;

	[Token(Token = "0x1700013D")]
	public TimeSpan narrativeTime
	{
		[Token(Token = "0x6000EB9")]
		[Address(RVA = "0x108CB10", Offset = "0x108CB10", VA = "0x108CB10")]
		get
		{
			return default(TimeSpan);
		}
	}

	[Token(Token = "0x6000EBA")]
	[Address(RVA = "0x108CB60", Offset = "0x108CB60", VA = "0x108CB60")]
	public StoryObjectCheckpointProperties()
	{
	}
}
[Token(Token = "0x2000271")]
public class FullPerformanceStateMachineBehaviour : StateMachineBehaviour
{
	[Token(Token = "0x4000CF3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Header("Settings")]
	public bool _debugLog;

	[Token(Token = "0x4000CF4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private Vector3 _initialRootBoneToColliderPositionOffset_ws;

	[Token(Token = "0x4000CF5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Vector3 _defaultRootBoneToColliderPositionOffset_ws;

	[Token(Token = "0x4000CF6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private Vector3 _initialColliderPosition_ls;

	[Token(Token = "0x4000CF7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Vector3 _initialRibsBoneToCameraJointPositionOffset_ws;

	[Token(Token = "0x4000CF8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private Quaternion _initialRibsBoneToCameraJointRotationOffset_ws;

	[Token(Token = "0x4000CF9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private Vector3 _initialCameraJointPosition_ls;

	[Token(Token = "0x4000CFA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Quaternion _initialCameraJointRotation_ls;

	[Token(Token = "0x6000EBC")]
	[Address(RVA = "0x108CB68", Offset = "0x108CB68", VA = "0x108CB68", Slot = "4")]
	public override void OnStateEnter(Animator animator, AnimatorStateInfo stateInfo, int layerIndex)
	{
	}

	[Token(Token = "0x6000EBD")]
	[Address(RVA = "0x108CBC0", Offset = "0x108CBC0", VA = "0x108CBC0", Slot = "5")]
	public override void OnStateUpdate(Animator animator, AnimatorStateInfo stateInfo, int layerIndex)
	{
	}

	[Token(Token = "0x6000EBE")]
	[Address(RVA = "0x108CCAC", Offset = "0x108CCAC", VA = "0x108CCAC", Slot = "6")]
	public override void OnStateExit(Animator animator, AnimatorStateInfo stateInfo, int layerIndex)
	{
	}

	[Token(Token = "0x6000EBF")]
	[Address(RVA = "0x108CD1C", Offset = "0x108CD1C", VA = "0x108CD1C")]
	public FullPerformanceStateMachineBehaviour()
	{
	}
}
[Token(Token = "0x2000272")]
public class AccountPickerCoordinator : MonoBehaviour
{
	[Token(Token = "0x6000EC0")]
	[Address(RVA = "0x108CD24", Offset = "0x108CD24", VA = "0x108CD24")]
	private void Start()
	{
	}

	[Token(Token = "0x6000EC1")]
	[Address(RVA = "0x108CD28", Offset = "0x108CD28", VA = "0x108CD28")]
	private void Update()
	{
	}

	[Token(Token = "0x6000EC2")]
	[Address(RVA = "0x108CE5C", Offset = "0x108CE5C", VA = "0x108CE5C")]
	public void OnSwitchAccountSelcted()
	{
	}

	[Token(Token = "0x6000EC3")]
	[Address(RVA = "0x108CF38", Offset = "0x108CF38", VA = "0x108CF38")]
	public AccountPickerCoordinator()
	{
	}
}
[Token(Token = "0x2000273")]
public class ActiveAccountNameSetter : MonoBehaviour
{
	[Token(Token = "0x4000CFB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private TextMeshProUGUI _TMPComponent;

	[Token(Token = "0x4000CFC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private string _cachedAccountDisplayName;

	[Token(Token = "0x6000EC4")]
	[Address(RVA = "0x108CF40", Offset = "0x108CF40", VA = "0x108CF40")]
	private void Start()
	{
	}

	[Token(Token = "0x6000EC5")]
	[Address(RVA = "0x108CFC0", Offset = "0x108CFC0", VA = "0x108CFC0")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000EC6")]
	[Address(RVA = "0x108CFC4", Offset = "0x108CFC4", VA = "0x108CFC4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000EC7")]
	[Address(RVA = "0x108D218", Offset = "0x108D218", VA = "0x108D218")]
	public ActiveAccountNameSetter()
	{
	}
}
[Token(Token = "0x2000274")]
public class AssetPlatformOverrider : MonoBehaviour
{
	[Token(Token = "0x4000CFD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private TMP_Text _TMPObject;

	[Token(Token = "0x4000CFE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private TMP_SpriteAsset SpriteAtlas_GameCore;

	[Token(Token = "0x4000CFF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private TMP_SpriteAsset SpriteAtlas_Playstation;

	[Token(Token = "0x4000D00")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private TMP_SpriteAsset SpriteAtlas_Switch;

	[Token(Token = "0x4000D01")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private TMP_SpriteAsset SpriteAtlas_PC;

	[Token(Token = "0x6000EC8")]
	[Address(RVA = "0x108D278", Offset = "0x108D278", VA = "0x108D278")]
	private void Start()
	{
	}

	[Token(Token = "0x6000EC9")]
	[Address(RVA = "0x108D2AC", Offset = "0x108D2AC", VA = "0x108D2AC")]
	public AssetPlatformOverrider()
	{
	}
}
[Token(Token = "0x2000275")]
public class CreditScroll : UpdatableMonoBehaviour
{
	[Token(Token = "0x4000D02")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Transform _canvasTransform;

	[Token(Token = "0x4000D03")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private float _creditScrollSeconds;

	[Token(Token = "0x4000D04")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[SerializeField]
	private float _creditStartPos;

	[Token(Token = "0x4000D05")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private float _creditEndPos;

	[Token(Token = "0x4000D06")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private Story _epilogueStory;

	[Token(Token = "0x4000D07")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private string _creditScrollEndEvent;

	[Token(Token = "0x4000D08")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float _creditDistance;

	[Token(Token = "0x4000D09")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private bool _creditsRunning;

	[Token(Token = "0x6000ECA")]
	[Address(RVA = "0x108D2B4", Offset = "0x108D2B4", VA = "0x108D2B4", Slot = "6")]
	public override bool Initialise()
	{
		return default(bool);
	}

	[Token(Token = "0x6000ECB")]
	[Address(RVA = "0x108D334", Offset = "0x108D334", VA = "0x108D334", Slot = "7")]
	public override void OnUpdate(float dt)
	{
	}

	[Token(Token = "0x6000ECC")]
	[Address(RVA = "0x108D514", Offset = "0x108D514", VA = "0x108D514")]
	public CreditScroll()
	{
	}
}
[Token(Token = "0x2000276")]
public abstract class DiegeticTextDisplay : UpdatableMonoBehaviour
{
	[Token(Token = "0x2000277")]
	private enum State
	{
		[Token(Token = "0x4000D12")]
		Idle,
		[Token(Token = "0x4000D13")]
		Showing,
		[Token(Token = "0x4000D14")]
		FullyShown,
		[Token(Token = "0x4000D15")]
		Hiding
	}

	[Token(Token = "0x4000D0A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private float _openCloseAnimationTime;

	[Token(Token = "0x4000D0B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	protected TextMeshProUGUI _textComponent;

	[Token(Token = "0x4000D0C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float _progress;

	[Token(Token = "0x4000D0D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private Vector2 _defaultSize;

	[Token(Token = "0x4000D0E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	protected RectTransform _uiTransform;

	[Token(Token = "0x4000D0F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	protected Transform _cameraTransform;

	[Token(Token = "0x4000D10")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private State _state;

	[Token(Token = "0x1700013E")]
	public float lookingAwayThreshold
	{
		[Token(Token = "0x6000ECD")]
		[Address(RVA = "0x108D51C", Offset = "0x108D51C", VA = "0x108D51C")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x6000ECE")]
	public abstract void UpdateOpenCloseProgress(float progress);

	[Token(Token = "0x6000ECF")]
	public abstract bool IsPlayerLookingAtDisplay(float distanceToCheck);

	[Token(Token = "0x6000ED0")]
	[Address(RVA = "0x108D528", Offset = "0x108D528", VA = "0x108D528", Slot = "13")]
	public virtual void UpdateWhileOpen(DiegeticTextLocalizer diegeticTextLocalizer)
	{
	}

	[Token(Token = "0x6000ED1")]
	[Address(RVA = "0x108D52C", Offset = "0x108D52C", VA = "0x108D52C", Slot = "6")]
	public override bool Initialise()
	{
		return default(bool);
	}

	[Token(Token = "0x6000ED2")]
	[Address(RVA = "0x108D694", Offset = "0x108D694", VA = "0x108D694", Slot = "7")]
	public override void OnUpdate(float dt)
	{
	}

	[Token(Token = "0x6000ED3")]
	[Address(RVA = "0x108D798", Offset = "0x108D798", VA = "0x108D798")]
	public bool TryShow(string displayText, Vector2 displaySize)
	{
		return default(bool);
	}

	[Token(Token = "0x6000ED4")]
	[Address(RVA = "0x108D8E8", Offset = "0x108D8E8", VA = "0x108D8E8")]
	public void Hide()
	{
	}

	[Token(Token = "0x6000ED5")]
	[Address(RVA = "0x108D75C", Offset = "0x108D75C", VA = "0x108D75C")]
	private void Reset()
	{
	}

	[Token(Token = "0x6000ED6")]
	[Address(RVA = "0x108D904", Offset = "0x108D904", VA = "0x108D904")]
	protected DiegeticTextDisplay()
	{
	}
}
[Token(Token = "0x2000278")]
public class DiegeticTextLocalizer : MonoBehaviour, IInitialisable
{
	[Token(Token = "0x4000D16")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private LocalizedString _displayText;

	[Token(Token = "0x4000D17")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Vector2 _size;

	[Token(Token = "0x4000D18")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Vector3 _localOffset;

	[Token(Token = "0x4000D19")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private Transform _offsetAnchor;

	[Token(Token = "0x4000D1A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private bool _autoConfigureLocalOffset;

	[Token(Token = "0x4000D1B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[SerializeField]
	private float _unwatchedCoolDown;

	[Token(Token = "0x4000D1E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Action OnDisplayTextChanged;

	[Token(Token = "0x1700013F")]
	public float LookingAwayDistanceThreshold
	{
		[Token(Token = "0x6000ED7")]
		[Address(RVA = "0x108D920", Offset = "0x108D920", VA = "0x108D920")]
		[CompilerGenerated]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000ED8")]
		[Address(RVA = "0x108D928", Offset = "0x108D928", VA = "0x108D928")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x17000140")]
	public BoxCollider DetectionCollider
	{
		[Token(Token = "0x6000ED9")]
		[Address(RVA = "0x108D930", Offset = "0x108D930", VA = "0x108D930")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x6000EDA")]
		[Address(RVA = "0x108D938", Offset = "0x108D938", VA = "0x108D938")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x17000141")]
	public Vector3 LocalOffset
	{
		[Token(Token = "0x6000EDB")]
		[Address(RVA = "0x108D940", Offset = "0x108D940", VA = "0x108D940")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x17000142")]
	public Vector2 Size
	{
		[Token(Token = "0x6000EDC")]
		[Address(RVA = "0x108D94C", Offset = "0x108D94C", VA = "0x108D94C")]
		get
		{
			return default(Vector2);
		}
	}

	[Token(Token = "0x17000143")]
	public LocalizedString LocalizedStringToDisplay
	{
		[Token(Token = "0x6000EDD")]
		[Address(RVA = "0x108D954", Offset = "0x108D954", VA = "0x108D954")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000144")]
	public float UnwatchedCoolDown
	{
		[Token(Token = "0x6000EDE")]
		[Address(RVA = "0x108D95C", Offset = "0x108D95C", VA = "0x108D95C")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x6000EDF")]
	[Address(RVA = "0x108D964", Offset = "0x108D964", VA = "0x108D964")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000EE0")]
	[Address(RVA = "0x108D9BC", Offset = "0x108D9BC", VA = "0x108D9BC", Slot = "4")]
	public bool Initialise()
	{
		return default(bool);
	}

	[Token(Token = "0x6000EE1")]
	[Address(RVA = "0x108DBD4", Offset = "0x108DBD4", VA = "0x108DBD4")]
	public void ChangeDisplayText(LocalizedString displayText)
	{
	}

	[Token(Token = "0x6000EE2")]
	[Address(RVA = "0x108DC0C", Offset = "0x108DC0C", VA = "0x108DC0C")]
	public void DisableDetection()
	{
	}

	[Token(Token = "0x6000EE3")]
	[Address(RVA = "0x108DC2C", Offset = "0x108DC2C", VA = "0x108DC2C")]
	public void EnableDetection()
	{
	}

	[Token(Token = "0x6000EE4")]
	[Address(RVA = "0x108DC4C", Offset = "0x108DC4C", VA = "0x108DC4C")]
	public DiegeticTextLocalizer()
	{
	}
}
[Token(Token = "0x2000279")]
public class ScreenDiegeticTextDisplay : DiegeticTextDisplay
{
	[Token(Token = "0x4000D1F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private Image background;

	[Token(Token = "0x6000EE5")]
	[Address(RVA = "0x108DCB4", Offset = "0x108DCB4", VA = "0x108DCB4", Slot = "11")]
	public override void UpdateOpenCloseProgress(float progress)
	{
	}

	[Token(Token = "0x6000EE6")]
	[Address(RVA = "0x108DD38", Offset = "0x108DD38", VA = "0x108DD38", Slot = "12")]
	public override bool IsPlayerLookingAtDisplay(float distanceToCheck)
	{
		return default(bool);
	}

	[Token(Token = "0x6000EE7")]
	[Address(RVA = "0x108DD40", Offset = "0x108DD40", VA = "0x108DD40")]
	public ScreenDiegeticTextDisplay()
	{
	}
}
[Token(Token = "0x200027A")]
public class WorldDiegeticTextDisplay : DiegeticTextDisplay
{
	[Token(Token = "0x4000D20")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Vector3[] rectCorners;

	[Token(Token = "0x6000EE8")]
	[Address(RVA = "0x108DD5C", Offset = "0x108DD5C", VA = "0x108DD5C", Slot = "11")]
	public override void UpdateOpenCloseProgress(float progress)
	{
	}

	[Token(Token = "0x6000EE9")]
	[Address(RVA = "0x108DDFC", Offset = "0x108DDFC", VA = "0x108DDFC", Slot = "13")]
	public override void UpdateWhileOpen(DiegeticTextLocalizer diegeticTextLocalizer)
	{
	}

	[Token(Token = "0x6000EEA")]
	[Address(RVA = "0x108E010", Offset = "0x108E010", VA = "0x108E010", Slot = "12")]
	public override bool IsPlayerLookingAtDisplay(float distanceToCheck)
	{
		return default(bool);
	}

	[Token(Token = "0x6000EEB")]
	[Address(RVA = "0x108E194", Offset = "0x108E194", VA = "0x108E194")]
	public WorldDiegeticTextDisplay()
	{
	}
}
[Serializable]
[Token(Token = "0x200027B")]
public class EnterButtonSource : ISource
{
	[Token(Token = "0x4000D21")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string selector;

	[Token(Token = "0x6000EEC")]
	[Address(RVA = "0x108E20C", Offset = "0x108E20C", VA = "0x108E20C", Slot = "4")]
	public bool TryEvaluateSelector(ISelectorInfo selectorInfo)
	{
		return default(bool);
	}

	[Token(Token = "0x6000EED")]
	[Address(RVA = "0x108E448", Offset = "0x108E448", VA = "0x108E448")]
	public EnterButtonSource()
	{
	}
}
[Token(Token = "0x200027C")]
public interface IDynamicIconTextProvider
{
	[Token(Token = "0x6000EEE")]
	void SetupDependancies(IInputService theInputService, TextRenderer theTextrenderer);
}
[Token(Token = "0x200027D")]
public class IconTextProvider : MonoBehaviour, ITextProvider, IDynamicIconTextProvider
{
	[Token(Token = "0x4000D22")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private string m_Text;

	[Token(Token = "0x4000D23")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private TextRenderer _textRenderer;

	[Token(Token = "0x4000D24")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private InputDeviceType _lastInputDevice;

	[Token(Token = "0x17000145")]
	public string text
	{
		[Token(Token = "0x6000EEF")]
		[Address(RVA = "0x108E4A0", Offset = "0x108E4A0", VA = "0x108E4A0", Slot = "4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000EF0")]
	[Address(RVA = "0x108E4A8", Offset = "0x108E4A8", VA = "0x108E4A8", Slot = "5")]
	public void SetupDependancies(IInputService theInputService, TextRenderer theTextrenderer)
	{
	}

	[Token(Token = "0x6000EF1")]
	[Address(RVA = "0x108E4B4", Offset = "0x108E4B4", VA = "0x108E4B4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000EF2")]
	[Address(RVA = "0x108E5DC", Offset = "0x108E5DC", VA = "0x108E5DC")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000EF3")]
	[Address(RVA = "0x108E65C", Offset = "0x108E65C", VA = "0x108E65C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000EF4")]
	[Address(RVA = "0x108E710", Offset = "0x108E710", VA = "0x108E710")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000EF5")]
	[Address(RVA = "0x108E790", Offset = "0x108E790", VA = "0x108E790")]
	private void Update()
	{
	}

	[Token(Token = "0x6000EF6")]
	[Address(RVA = "0x108E87C", Offset = "0x108E87C", VA = "0x108E87C")]
	public void SetText(string text)
	{
	}

	[Token(Token = "0x6000EF7")]
	[Address(RVA = "0x108E884", Offset = "0x108E884", VA = "0x108E884")]
	private string PostBindingDisplayStringProcessor(string displayString)
	{
		return null;
	}

	[Token(Token = "0x6000EF8")]
	[Address(RVA = "0x108E8AC", Offset = "0x108E8AC", VA = "0x108E8AC")]
	private void RefreshTextrenderer()
	{
	}

	[Token(Token = "0x6000EF9")]
	[Address(RVA = "0x108E94C", Offset = "0x108E94C", VA = "0x108E94C")]
	public IconTextProvider()
	{
	}
}
[Token(Token = "0x200027E")]
[CreateAssetMenu(menuName = "Team17/UI/Input Binding Sprite Override", fileName = "InputBindingSpriteOverride")]
public class InputBindingSpriteOverride : ScriptableObject
{
	[Serializable]
	[Token(Token = "0x200027F")]
	public enum ReplacementType
	{
		[Token(Token = "0x4000D2A")]
		spriteReplacement,
		[Token(Token = "0x4000D2B")]
		localisedText
	}

	[Serializable]
	[Token(Token = "0x2000280")]
	public struct keyIconPair
	{
		[Token(Token = "0x4000D2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ReplacementType type;

		[Token(Token = "0x4000D2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public string key;

		[Token(Token = "0x4000D2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int spriteIndex;
	}

	[Token(Token = "0x4000D25")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private TMP_SpriteAsset m_SpriteAsset;

	[Token(Token = "0x4000D26")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private string LocalisationTableName;

	[Token(Token = "0x4000D27")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private keyIconPair[] m_InputBindingSpriteOverrides;

	[Token(Token = "0x4000D28")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool cachedSpriteAsset;

	[Token(Token = "0x6000EFA")]
	[Address(RVA = "0x108E9A4", Offset = "0x108E9A4", VA = "0x108E9A4")]
	public void CacheSpriteAsset()
	{
	}

	[Token(Token = "0x6000EFB")]
	[Address(RVA = "0x108E9B0", Offset = "0x108E9B0", VA = "0x108E9B0")]
	public string GetDisplayOverride(string key)
	{
		return null;
	}

	[Token(Token = "0x6000EFC")]
	[Address(RVA = "0x108EC80", Offset = "0x108EC80", VA = "0x108EC80")]
	public InputBindingSpriteOverride()
	{
	}
}
[Token(Token = "0x2000281")]
public class TextResizer : MonoBehaviour
{
	[Token(Token = "0x2000282")]
	public enum Mode
	{
		[Token(Token = "0x4000D3D")]
		None,
		[Token(Token = "0x4000D3E")]
		Horizontal,
		[Token(Token = "0x4000D3F")]
		Vertical,
		[Token(Token = "0x4000D40")]
		Both
	}

	[Token(Token = "0x4000D2F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TMP_Text Text;

	[Token(Token = "0x4000D30")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool ResizeTextObject;

	[Token(Token = "0x4000D31")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public Vector2 Padding;

	[Token(Token = "0x4000D32")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public Vector2 MaxSize;

	[Token(Token = "0x4000D33")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public Vector2 MinSize;

	[Token(Token = "0x4000D34")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public Mode ControlAxes;

	[Token(Token = "0x4000D35")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private string _lastText;

	[Token(Token = "0x4000D36")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Mode _lastControlAxes;

	[Token(Token = "0x4000D37")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private Vector2 _lastSize;

	[Token(Token = "0x4000D38")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private bool _forceRefresh;

	[Token(Token = "0x4000D39")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x55")]
	private bool _isTextNull;

	[Token(Token = "0x4000D3A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private RectTransform _textRectTransform;

	[Token(Token = "0x4000D3B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private RectTransform _selfRectTransform;

	[Token(Token = "0x17000146")]
	protected virtual float MinX
	{
		[Token(Token = "0x6000EFD")]
		[Address(RVA = "0x108ECD8", Offset = "0x108ECD8", VA = "0x108ECD8", Slot = "4")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000147")]
	protected virtual float MinY
	{
		[Token(Token = "0x6000EFE")]
		[Address(RVA = "0x108ED34", Offset = "0x108ED34", VA = "0x108ED34", Slot = "5")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000148")]
	protected virtual float MaxX
	{
		[Token(Token = "0x6000EFF")]
		[Address(RVA = "0x108ED90", Offset = "0x108ED90", VA = "0x108ED90", Slot = "6")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000149")]
	protected virtual float MaxY
	{
		[Token(Token = "0x6000F00")]
		[Address(RVA = "0x108EDEC", Offset = "0x108EDEC", VA = "0x108EDEC", Slot = "7")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x6000F01")]
	[Address(RVA = "0x108EE48", Offset = "0x108EE48", VA = "0x108EE48", Slot = "8")]
	protected virtual void Update()
	{
	}

	[Token(Token = "0x6000F02")]
	[Address(RVA = "0x108F0B4", Offset = "0x108F0B4", VA = "0x108F0B4", Slot = "9")]
	public virtual void Refresh()
	{
	}

	[Token(Token = "0x6000F03")]
	[Address(RVA = "0x108F18C", Offset = "0x108F18C", VA = "0x108F18C")]
	private void OnValidate()
	{
	}

	[Token(Token = "0x6000F04")]
	[Address(RVA = "0x108F198", Offset = "0x108F198", VA = "0x108F198")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000F05")]
	[Address(RVA = "0x108F200", Offset = "0x108F200", VA = "0x108F200")]
	public TextResizer()
	{
	}
}
[Token(Token = "0x2000283")]
public class SliderPercent : MonoBehaviour, IInitialisable
{
	[Token(Token = "0x4000D41")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private TextMeshProUGUI _percentText;

	[Token(Token = "0x6000F06")]
	[Address(RVA = "0x108F228", Offset = "0x108F228", VA = "0x108F228", Slot = "5")]
	public virtual bool Initialise()
	{
		return default(bool);
	}

	[Token(Token = "0x6000F07")]
	[Address(RVA = "0x108F288", Offset = "0x108F288", VA = "0x108F288")]
	public void UpdatePercentage(float value)
	{
	}

	[Token(Token = "0x6000F08")]
	[Address(RVA = "0x108F424", Offset = "0x108F424", VA = "0x108F424")]
	public SliderPercent()
	{
	}
}
[Token(Token = "0x2000284")]
public class SpriteSheetAnimation : MonoBehaviour
{
	[Token(Token = "0x4000D42")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private UnityEngine.Sprite[] _frames;

	[Token(Token = "0x4000D43")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private float _framesPerSecond;

	[Token(Token = "0x4000D44")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float _frameDuration;

	[Token(Token = "0x4000D45")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float _nextFrameTime;

	[Token(Token = "0x4000D46")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private int _frameIndex;

	[Token(Token = "0x4000D47")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Image _image;

	[Token(Token = "0x6000F09")]
	[Address(RVA = "0x108F42C", Offset = "0x108F42C", VA = "0x108F42C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000F0A")]
	[Address(RVA = "0x108F484", Offset = "0x108F484", VA = "0x108F484")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000F0B")]
	[Address(RVA = "0x108F568", Offset = "0x108F568", VA = "0x108F568")]
	private void Update()
	{
	}

	[Token(Token = "0x6000F0C")]
	[Address(RVA = "0x108F528", Offset = "0x108F528", VA = "0x108F528")]
	private void GoToFrame(int index)
	{
	}

	[Token(Token = "0x6000F0D")]
	[Address(RVA = "0x108F658", Offset = "0x108F658", VA = "0x108F658")]
	public SpriteSheetAnimation()
	{
	}
}
[Token(Token = "0x2000285")]
public class T17InputSystemUIInputModule : InputSystemUIInputModule
{
	[Token(Token = "0x4000D48")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x388")]
	[HideInInspector]
	[SerializeField]
	private InputActionReference m_MoveWorldSpaceAction;

	[Token(Token = "0x4000D49")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x390")]
	[SerializeField]
	[HideInInspector]
	private InputActionReference m_MoveScreenSpaceAction;

	[Token(Token = "0x4000D4A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static List<GameObject> s_registeredHoveredGameobjects;

	[Token(Token = "0x4000D4B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static bool s_AutoSelectHoveredMenuItems;

	[Token(Token = "0x4000D4C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x398")]
	private MethodInfo _PointerStateMethod;

	[Token(Token = "0x1700014A")]
	public InputActionReference moveWorldSpace
	{
		[Token(Token = "0x6000F0E")]
		[Address(RVA = "0x108F6C4", Offset = "0x108F6C4", VA = "0x108F6C4")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000F0F")]
		[Address(RVA = "0x108F6CC", Offset = "0x108F6CC", VA = "0x108F6CC")]
		set
		{
		}
	}

	[Token(Token = "0x1700014B")]
	public InputActionReference moveScreenSpace
	{
		[Token(Token = "0x6000F10")]
		[Address(RVA = "0x108F6DC", Offset = "0x108F6DC", VA = "0x108F6DC")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000F11")]
		[Address(RVA = "0x108F6E4", Offset = "0x108F6E4", VA = "0x108F6E4")]
		set
		{
		}
	}

	[Token(Token = "0x1700014C")]
	public static bool enableAutoSelectHoveredMenuItems
	{
		[Token(Token = "0x6000F12")]
		[Address(RVA = "0x108F6F4", Offset = "0x108F6F4", VA = "0x108F6F4")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000F13")]
		[Address(RVA = "0x108F74C", Offset = "0x108F74C", VA = "0x108F74C")]
		set
		{
		}
	}

	[Token(Token = "0x1700014D")]
	public new InputActionAsset actionsAsset
	{
		[Token(Token = "0x6000F19")]
		[Address(RVA = "0x108FE30", Offset = "0x108FE30", VA = "0x108FE30")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000F1A")]
		[Address(RVA = "0x108FE38", Offset = "0x108FE38", VA = "0x108FE38")]
		set
		{
		}
	}

	[Token(Token = "0x6000F14")]
	[Address(RVA = "0x108F7A8", Offset = "0x108F7A8", VA = "0x108F7A8")]
	public static void RegisterPointerHoveredOverGameObject(GameObject theObject)
	{
	}

	[Token(Token = "0x6000F15")]
	[Address(RVA = "0x108F908", Offset = "0x108F908", VA = "0x108F908")]
	public static void UnregisterPointerHoveredOverGameObject(GameObject theObject)
	{
	}

	[Token(Token = "0x6000F16")]
	[Address(RVA = "0x108F9D8", Offset = "0x108F9D8", VA = "0x108F9D8", Slot = "23")]
	public override void ActivateModule()
	{
	}

	[Token(Token = "0x6000F17")]
	[Address(RVA = "0x108F9E0", Offset = "0x108F9E0", VA = "0x108F9E0", Slot = "17")]
	public override void Process()
	{
	}

	[Token(Token = "0x6000F18")]
	[Address(RVA = "0x108FD94", Offset = "0x108FD94", VA = "0x108FD94", Slot = "7")]
	protected override void OnDisable()
	{
	}

	[Token(Token = "0x6000F1B")]
	[Address(RVA = "0x108FEF8", Offset = "0x108FEF8", VA = "0x108FEF8")]
	private InputActionReference T17UpdateReferenceForNewAsset(InputActionReference actionReference)
	{
		return null;
	}

	[Token(Token = "0x6000F1C")]
	[Address(RVA = "0x108FF80", Offset = "0x108FF80", VA = "0x108FF80")]
	public void EnableWorldSpaceMoveAction(bool enable)
	{
	}

	[Token(Token = "0x6000F1D")]
	[Address(RVA = "0x108FF9C", Offset = "0x108FF9C", VA = "0x108FF9C")]
	public void EnsurePointerIsAllocated(InputAction inputAction)
	{
	}

	[Token(Token = "0x6000F1E")]
	[Address(RVA = "0x108FFA0", Offset = "0x108FFA0", VA = "0x108FFA0")]
	public T17InputSystemUIInputModule()
	{
	}
}
[Token(Token = "0x2000286")]
public class T17ScrollBar : Scrollbar
{
	[Token(Token = "0x2000287")]
	public enum T17Axis
	{
		[Token(Token = "0x4000D53")]
		Horizontal,
		[Token(Token = "0x4000D54")]
		Vertical
	}

	[Token(Token = "0x2000288")]
	[CompilerGenerated]
	private sealed class <ClickRepeatT17>d__15 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000D55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000D56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000D57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public T17ScrollBar <>4__this;

		[Token(Token = "0x4000D58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Vector2 screenPosition;

		[Token(Token = "0x4000D59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Camera camera;

		[Token(Token = "0x17000151")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000F2C")]
			[Address(RVA = "0x1090858", Offset = "0x1090858", VA = "0x1090858", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000152")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000F2E")]
			[Address(RVA = "0x10908A0", Offset = "0x10908A0", VA = "0x10908A0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000F29")]
		[Address(RVA = "0x1090514", Offset = "0x1090514", VA = "0x1090514")]
		[DebuggerHidden]
		public <ClickRepeatT17>d__15(int <>1__state)
		{
		}

		[Token(Token = "0x6000F2A")]
		[Address(RVA = "0x109056C", Offset = "0x109056C", VA = "0x109056C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000F2B")]
		[Address(RVA = "0x1090570", Offset = "0x1090570", VA = "0x1090570", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000F2D")]
		[Address(RVA = "0x1090860", Offset = "0x1090860", VA = "0x1090860", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000D4D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x13C")]
	public float _InitialClickRepeatDelay;

	[Token(Token = "0x4000D4E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	public float _ClickRepeatDelay;

	[Token(Token = "0x4000D4F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
	public float _DefaultStepSize;

	[Token(Token = "0x4000D50")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	private Coroutine _ClickRepeatRoutine;

	[Token(Token = "0x4000D51")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	private bool _isPointerDownAndNotDraggingT17;

	[Token(Token = "0x1700014E")]
	public T17Axis axisT17
	{
		[Token(Token = "0x6000F20")]
		[Address(RVA = "0x10900A0", Offset = "0x10900A0", VA = "0x10900A0")]
		get
		{
			return default(T17Axis);
		}
	}

	[Token(Token = "0x1700014F")]
	public bool reverseValueT17
	{
		[Token(Token = "0x6000F21")]
		[Address(RVA = "0x10900B0", Offset = "0x10900B0", VA = "0x10900B0")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000150")]
	private float stepSizeT17
	{
		[Token(Token = "0x6000F22")]
		[Address(RVA = "0x10900C4", Offset = "0x10900C4", VA = "0x10900C4")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x6000F23")]
	[Address(RVA = "0x10900E8", Offset = "0x10900E8", VA = "0x10900E8", Slot = "31")]
	public override void OnMove(AxisEventData eventData)
	{
	}

	[Token(Token = "0x6000F24")]
	[Address(RVA = "0x10903CC", Offset = "0x10903CC", VA = "0x10903CC", Slot = "32")]
	public override void OnPointerDown(PointerEventData eventData)
	{
	}

	[Token(Token = "0x6000F25")]
	[Address(RVA = "0x10904F8", Offset = "0x10904F8", VA = "0x10904F8", Slot = "33")]
	public override void OnPointerUp(PointerEventData eventData)
	{
	}

	[Token(Token = "0x6000F26")]
	[Address(RVA = "0x1090454", Offset = "0x1090454", VA = "0x1090454")]
	[IteratorStateMachine(typeof(<ClickRepeatT17>d__15))]
	protected IEnumerator ClickRepeatT17(Vector2 screenPosition, Camera camera)
	{
		return null;
	}

	[Token(Token = "0x6000F27")]
	[Address(RVA = "0x109053C", Offset = "0x109053C", VA = "0x109053C", Slot = "52")]
	public override void OnBeginDrag(PointerEventData eventData)
	{
	}

	[Token(Token = "0x6000F28")]
	[Address(RVA = "0x1090548", Offset = "0x1090548", VA = "0x1090548")]
	public T17ScrollBar()
	{
	}
}
[Token(Token = "0x2000289")]
public class TutorialAnchor : UpdatableMonoBehaviour
{
	[Token(Token = "0x200028A")]
	private enum ActivateLogic
	{
		[Token(Token = "0x4000D64")]
		Proximity,
		[Token(Token = "0x4000D65")]
		BoltControlled,
		[Token(Token = "0x4000D66")]
		SmoothMovement,
		[Token(Token = "0x4000D67")]
		TeleportMovement
	}

	[Token(Token = "0x4000D5A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private float _maxTiltDeg;

	[Token(Token = "0x4000D5B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private float _fadeStartDistance;

	[Token(Token = "0x4000D5C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	private float _fadeEndDistance;

	[Token(Token = "0x4000D5D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private ActivateLogic _tutLogic;

	[Token(Token = "0x4000D5E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private CanvasGroup _tutorialCanvasGroup;

	[Token(Token = "0x4000D5F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private BoundingBox _boundingBox;

	[Token(Token = "0x4000D60")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Transform _cameraTransform;

	[Token(Token = "0x4000D61")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Vector3 _rotation;

	[Token(Token = "0x4000D62")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Transform _tutorial;

	[Token(Token = "0x6000F2F")]
	[Address(RVA = "0x10908A8", Offset = "0x10908A8", VA = "0x10908A8", Slot = "6")]
	public override bool Initialise()
	{
		return default(bool);
	}

	[Token(Token = "0x6000F30")]
	[Address(RVA = "0x10909B4", Offset = "0x10909B4", VA = "0x10909B4", Slot = "7")]
	public override void OnUpdate(float dt)
	{
	}

	[Token(Token = "0x6000F31")]
	[Address(RVA = "0x1090B54", Offset = "0x1090B54", VA = "0x1090B54")]
	private bool LogicCheck()
	{
		return default(bool);
	}

	[Token(Token = "0x6000F32")]
	[Address(RVA = "0x1090BD0", Offset = "0x1090BD0", VA = "0x1090BD0")]
	private void Process()
	{
	}

	[Token(Token = "0x6000F33")]
	[Address(RVA = "0x1090BE8", Offset = "0x1090BE8", VA = "0x1090BE8")]
	private void Billboard()
	{
	}

	[Token(Token = "0x6000F34")]
	[Address(RVA = "0x1090D70", Offset = "0x1090D70", VA = "0x1090D70")]
	private void Fade()
	{
	}

	[Token(Token = "0x6000F35")]
	[Address(RVA = "0x1090E6C", Offset = "0x1090E6C", VA = "0x1090E6C")]
	public TutorialAnchor()
	{
	}
}
[Token(Token = "0x200028B")]
public class UIActivatable : MonoBehaviour
{
	[Token(Token = "0x6000F36")]
	[Address(RVA = "0x1090ECC", Offset = "0x1090ECC", VA = "0x1090ECC", Slot = "4")]
	public virtual void SetActive(bool active)
	{
	}

	[Token(Token = "0x6000F37")]
	[Address(RVA = "0x1090EF4", Offset = "0x1090EF4", VA = "0x1090EF4", Slot = "5")]
	public virtual bool IsActive()
	{
		return default(bool);
	}

	[Token(Token = "0x6000F38")]
	[Address(RVA = "0x1090F14", Offset = "0x1090F14", VA = "0x1090F14")]
	public UIActivatable()
	{
	}
}
[Token(Token = "0x200028C")]
public class VersionInfo : MonoBehaviour
{
	[Token(Token = "0x6000F39")]
	[Address(RVA = "0x1090F1C", Offset = "0x1090F1C", VA = "0x1090F1C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000F3A")]
	[Address(RVA = "0x1090F40", Offset = "0x1090F40", VA = "0x1090F40")]
	private void Start()
	{
	}

	[Token(Token = "0x6000F3B")]
	[Address(RVA = "0x1090FEC", Offset = "0x1090FEC", VA = "0x1090FEC")]
	public VersionInfo()
	{
	}
}
[Token(Token = "0x200028D")]
public class UIAnchorDialog : UpdatableMonoBehaviour
{
	[Token(Token = "0x200028E")]
	private enum AnchorType
	{
		[Token(Token = "0x4000D75")]
		WorldAnchor,
		[Token(Token = "0x4000D76")]
		PlayerAnchor,
		[Token(Token = "0x4000D77")]
		Invalid
	}

	[Token(Token = "0x4000D68")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	[SerializeField]
	private bool switchToPlayerWhenOutOfRange;

	[Token(Token = "0x4000D69")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private float playerAnchoredDistance;

	[Token(Token = "0x4000D6A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private float playerAnchoredDeclination;

	[Token(Token = "0x4000D6B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	private float playerAnchoredTilt;

	[Token(Token = "0x4000D6C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private float playerAnchoredMaximumAngle;

	[Token(Token = "0x4000D6D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[SerializeField]
	private float playerAnchoredRotationTime;

	[Token(Token = "0x4000D6E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Transform vrCamTransform;

	[Token(Token = "0x4000D6F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private DialogAnchor worldAnchor;

	[Token(Token = "0x4000D70")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private AnchorType currentAnchorType;

	[Token(Token = "0x4000D71")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private float playerAnchorCurrentHeading;

	[Token(Token = "0x4000D72")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool snapCurrentHeading;

	[Token(Token = "0x4000D73")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
	private bool adjustPlayerAnchorHeading;

	[Token(Token = "0x6000F3C")]
	[Address(RVA = "0x1090FF4", Offset = "0x1090FF4", VA = "0x1090FF4", Slot = "6")]
	public override bool Initialise()
	{
		return default(bool);
	}

	[Token(Token = "0x6000F3D")]
	[Address(RVA = "0x1091390", Offset = "0x1091390", VA = "0x1091390", Slot = "8")]
	protected override void OnEnable()
	{
	}

	[Token(Token = "0x6000F3E")]
	[Address(RVA = "0x1091070", Offset = "0x1091070", VA = "0x1091070")]
	private void SetUpPosition()
	{
	}

	[Token(Token = "0x6000F3F")]
	[Address(RVA = "0x10916F4", Offset = "0x10916F4", VA = "0x10916F4", Slot = "9")]
	protected override void OnDisable()
	{
	}

	[Token(Token = "0x6000F40")]
	[Address(RVA = "0x1091720", Offset = "0x1091720", VA = "0x1091720", Slot = "7")]
	public override void OnUpdate(float dt)
	{
	}

	[Token(Token = "0x6000F41")]
	[Address(RVA = "0x1091640", Offset = "0x1091640", VA = "0x1091640")]
	private void RepositionAtWorldAnchor()
	{
	}

	[Token(Token = "0x6000F42")]
	[Address(RVA = "0x1091C74", Offset = "0x1091C74", VA = "0x1091C74")]
	private void OnDialogAnchorChanged(DialogAnchor newAnchor)
	{
	}

	[Token(Token = "0x6000F43")]
	[Address(RVA = "0x10913C4", Offset = "0x10913C4", VA = "0x10913C4")]
	private void SetNewWorldAnchor(DialogAnchor anchor)
	{
	}

	[Token(Token = "0x6000F44")]
	[Address(RVA = "0x1091280", Offset = "0x1091280", VA = "0x1091280")]
	private void UpdateAnchorActiveState()
	{
	}

	[Token(Token = "0x6000F45")]
	[Address(RVA = "0x1091C94", Offset = "0x1091C94", VA = "0x1091C94")]
	private void OnOutOfRange(DialogAnchor anchor)
	{
	}

	[Token(Token = "0x6000F46")]
	[Address(RVA = "0x1091D1C", Offset = "0x1091D1C", VA = "0x1091D1C")]
	private void OnWithinRange(DialogAnchor anchor)
	{
	}

	[Token(Token = "0x6000F47")]
	[Address(RVA = "0x10915B8", Offset = "0x10915B8", VA = "0x10915B8")]
	private bool IsPlayerInRangeOfWolrdAnchor()
	{
		return default(bool);
	}

	[Token(Token = "0x6000F48")]
	[Address(RVA = "0x10918EC", Offset = "0x10918EC", VA = "0x10918EC")]
	private void UpdateForWorldAnchor(ref float heading, ref float tilt)
	{
	}

	[Token(Token = "0x6000F49")]
	[Address(RVA = "0x10919D8", Offset = "0x10919D8", VA = "0x10919D8")]
	private void UpdateForPlayerAnchor(ref float heading, ref float tilt)
	{
	}

	[Token(Token = "0x6000F4A")]
	[Address(RVA = "0x1091DA8", Offset = "0x1091DA8", VA = "0x1091DA8")]
	public UIAnchorDialog()
	{
	}
}
[Token(Token = "0x200028F")]
public class UIFollowCameraYRotation : MonoBehaviour
{
	[Token(Token = "0x4000D78")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private float transformFollowTimeInSeconds;

	[Token(Token = "0x4000D79")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Transform _cameraTransform;

	[Token(Token = "0x6000F4B")]
	[Address(RVA = "0x1091DD8", Offset = "0x1091DD8", VA = "0x1091DD8")]
	public void Update()
	{
	}

	[Token(Token = "0x6000F4C")]
	[Address(RVA = "0x10920BC", Offset = "0x10920BC", VA = "0x10920BC")]
	public void SetupCameraTransform(Transform cameraT)
	{
	}

	[Token(Token = "0x6000F4D")]
	[Address(RVA = "0x1091E84", Offset = "0x1091E84", VA = "0x1091E84")]
	private void FollowCameraY(float dt, Transform cameraTransform, Transform logoTransform)
	{
	}

	[Token(Token = "0x6000F4E")]
	[Address(RVA = "0x10920C4", Offset = "0x10920C4", VA = "0x10920C4")]
	public UIFollowCameraYRotation()
	{
	}
}
[Token(Token = "0x2000290")]
public class UIFollowGaze : UpdatableMonoBehaviour
{
	[Token(Token = "0x4000D7A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private float horizontalDeadAngle;

	[Token(Token = "0x4000D7B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private float verticalDeadAngle;

	[Token(Token = "0x4000D7C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	private float eyeLevelOffset;

	[Token(Token = "0x4000D7D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private float distance;

	[Token(Token = "0x4000D7E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[SerializeField]
	private float smoothFollowTime;

	[Token(Token = "0x4000D7F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private float maximumSpeed;

	[Token(Token = "0x4000D80")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Transform vrCamTransform;

	[Token(Token = "0x4000D81")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Vector3 cameraForward;

	[Token(Token = "0x4000D82")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private Quaternion originalRotation;

	[Token(Token = "0x4000D83")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private Vector3 velocity;

	[Token(Token = "0x4000D84")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Vector3 targetPosition;

	[Token(Token = "0x6000F4F")]
	[Address(RVA = "0x10920D4", Offset = "0x10920D4", VA = "0x10920D4", Slot = "6")]
	public override bool Initialise()
	{
		return default(bool);
	}

	[Token(Token = "0x6000F50")]
	[Address(RVA = "0x10922DC", Offset = "0x10922DC", VA = "0x10922DC")]
	private void ResetCameraVectors()
	{
	}

	[Token(Token = "0x6000F51")]
	[Address(RVA = "0x1092308", Offset = "0x1092308", VA = "0x1092308")]
	public float GetAngleForAxis(Vector3 from, Vector3 to, Vector3 axis)
	{
		return default(float);
	}

	[Token(Token = "0x6000F52")]
	[Address(RVA = "0x10924D8", Offset = "0x10924D8", VA = "0x10924D8")]
	public void SetNewTargetPosition()
	{
	}

	[Token(Token = "0x6000F53")]
	[Address(RVA = "0x109250C", Offset = "0x109250C", VA = "0x109250C", Slot = "7")]
	public override void OnUpdate(float dt)
	{
	}

	[Token(Token = "0x6000F54")]
	[Address(RVA = "0x1092918", Offset = "0x1092918", VA = "0x1092918")]
	public UIFollowGaze()
	{
	}
}
[Token(Token = "0x2000291")]
public class VRAutoSaveUI : VRCanvasComponent
{
	[Token(Token = "0x4000D85")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool _isActive;

	[Token(Token = "0x6000F55")]
	[Address(RVA = "0x1092994", Offset = "0x1092994", VA = "0x1092994")]
	private void Update()
	{
	}

	[Token(Token = "0x6000F56")]
	[Address(RVA = "0x1092B9C", Offset = "0x1092B9C", VA = "0x1092B9C", Slot = "4")]
	public override void SetActive(bool active)
	{
	}

	[Token(Token = "0x6000F57")]
	[Address(RVA = "0x1092BF4", Offset = "0x1092BF4", VA = "0x1092BF4", Slot = "5")]
	public override bool IsActive()
	{
		return default(bool);
	}

	[Token(Token = "0x6000F58")]
	[Address(RVA = "0x1092BFC", Offset = "0x1092BFC", VA = "0x1092BFC")]
	public VRAutoSaveUI()
	{
	}
}
[Token(Token = "0x2000292")]
public class VRCanvasComponent : UIActivatable
{
	[Token(Token = "0x4000D86")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Vector3 _canvasOffset;

	[Token(Token = "0x4000D87")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Transform _cachedTransform;

	[Token(Token = "0x6000F59")]
	[Address(RVA = "0x1092C0C", Offset = "0x1092C0C", VA = "0x1092C0C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000F5A")]
	[Address(RVA = "0x10929A4", Offset = "0x10929A4", VA = "0x10929A4")]
	protected void UpdateTransformPosition()
	{
	}

	[Token(Token = "0x6000F5B")]
	[Address(RVA = "0x1092C04", Offset = "0x1092C04", VA = "0x1092C04")]
	public VRCanvasComponent()
	{
	}
}
[Token(Token = "0x2000293")]
public class VRCursor : MonoBehaviour
{
	[Token(Token = "0x4000D88")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject cursor;

	[Token(Token = "0x6000F5C")]
	[Address(RVA = "0x1092CA8", Offset = "0x1092CA8", VA = "0x1092CA8")]
	public VRCursor()
	{
	}
}
[Token(Token = "0x2000294")]
public class VRHandsUIController : MonoBehaviour
{
	[Token(Token = "0x2000295")]
	public enum ActiveNotificationHand
	{
		[Token(Token = "0x4000D8F")]
		Left,
		[Token(Token = "0x4000D90")]
		Right
	}

	[Token(Token = "0x4000D89")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private ActiveNotificationHand _StanceHand;

	[Token(Token = "0x4000D8A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Transform _leftHandCanvasTransform;

	[Token(Token = "0x4000D8B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Transform _rightHandCanvasTransform;

	[Token(Token = "0x4000D8C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Transform _vrStanceUITransform;

	[Token(Token = "0x4000D8D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private Transform _vrAutosaveUITransform;

	[Token(Token = "0x17000153")]
	public Transform LeftHandCanvasTransform
	{
		[Token(Token = "0x6000F5D")]
		[Address(RVA = "0x1092CB0", Offset = "0x1092CB0", VA = "0x1092CB0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000154")]
	public Transform RightHandCanvasTransform
	{
		[Token(Token = "0x6000F5E")]
		[Address(RVA = "0x1092CB8", Offset = "0x1092CB8", VA = "0x1092CB8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000F5F")]
	[Address(RVA = "0x1092CC0", Offset = "0x1092CC0", VA = "0x1092CC0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000F60")]
	[Address(RVA = "0x1092CC4", Offset = "0x1092CC4", VA = "0x1092CC4")]
	private void SetupComponents()
	{
	}

	[Token(Token = "0x6000F61")]
	[Address(RVA = "0x1092D28", Offset = "0x1092D28", VA = "0x1092D28")]
	public VRHandsUIController()
	{
	}
}
[Token(Token = "0x2000296")]
public class VRStanceUI : VRCanvasComponent
{
	[Token(Token = "0x4000D91")]
	protected const string kStringUITableName = "GameText";

	[Token(Token = "0x4000D92")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	[Header("Stance Images")]
	private UnityEngine.Sprite _roomscaleSprite;

	[Token(Token = "0x4000D93")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private UnityEngine.Sprite _seatedCrouchSprite;

	[Token(Token = "0x4000D94")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private UnityEngine.Sprite _seatedStandSprite;

	[Token(Token = "0x4000D95")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private Image _stanceImage;

	[Token(Token = "0x4000D96")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private TextMeshProUGUI _stanceText;

	[Token(Token = "0x4000D97")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private float _notificationDuration;

	[Token(Token = "0x4000D98")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private float _timer;

	[Token(Token = "0x4000D99")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private bool _runNotificationTimer;

	[Token(Token = "0x6000F62")]
	[Address(RVA = "0x1092D30", Offset = "0x1092D30", VA = "0x1092D30")]
	private void Update()
	{
	}

	[Token(Token = "0x6000F63")]
	[Address(RVA = "0x1092E28", Offset = "0x1092E28", VA = "0x1092E28")]
	public void ShowCurrentStance(PlayerXRStances currentPlayerState)
	{
	}

	[Token(Token = "0x6000F64")]
	[Address(RVA = "0x1092D78", Offset = "0x1092D78", VA = "0x1092D78")]
	private void ResetNotifications()
	{
	}

	[Token(Token = "0x6000F65")]
	[Address(RVA = "0x109315C", Offset = "0x109315C", VA = "0x109315C")]
	public VRStanceUI()
	{
	}
}
[Token(Token = "0x2000297")]
public class VRUIMask : Mask
{
	[Token(Token = "0x4000D9A")]
	public const int c_handsStencilBit = 7;

	[Token(Token = "0x4000D9B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Material _maskMaterial;

	[Token(Token = "0x4000D9C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Material _unmaskMaterial;

	[Token(Token = "0x6000F66")]
	[Address(RVA = "0x109316C", Offset = "0x109316C", VA = "0x109316C", Slot = "22")]
	public override Material GetModifiedMaterial(Material baseMaterial)
	{
		return null;
	}

	[Token(Token = "0x6000F67")]
	[Address(RVA = "0x1093404", Offset = "0x1093404", VA = "0x1093404", Slot = "7")]
	protected override void OnDisable()
	{
	}

	[Token(Token = "0x6000F68")]
	[Address(RVA = "0x10934A4", Offset = "0x10934A4", VA = "0x10934A4")]
	public VRUIMask()
	{
	}
}
[Token(Token = "0x2000298")]
[RequireComponent(typeof(MaskableGraphic))]
public class VRUIMaskableGraphic : MonoBehaviour, IMaterialModifier, IMaskable
{
	[Token(Token = "0x4000D9D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool _recalculateStencil;

	[Token(Token = "0x4000D9E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private int _stencilValue;

	[Token(Token = "0x4000D9F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Material _maskMaterial;

	[Token(Token = "0x6000F69")]
	[Address(RVA = "0x10934AC", Offset = "0x10934AC", VA = "0x10934AC", Slot = "4")]
	public Material GetModifiedMaterial(Material baseMaterial)
	{
		return null;
	}

	[Token(Token = "0x6000F6A")]
	[Address(RVA = "0x1093630", Offset = "0x1093630", VA = "0x1093630", Slot = "5")]
	public void RecalculateMasking()
	{
	}

	[Token(Token = "0x6000F6B")]
	[Address(RVA = "0x109363C", Offset = "0x109363C", VA = "0x109363C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000F6C")]
	[Address(RVA = "0x1093648", Offset = "0x1093648", VA = "0x1093648")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000F6D")]
	[Address(RVA = "0x10936BC", Offset = "0x10936BC", VA = "0x10936BC")]
	private void OnTransformParentChanged()
	{
	}

	[Token(Token = "0x6000F6E")]
	[Address(RVA = "0x10936C8", Offset = "0x10936C8", VA = "0x10936C8")]
	public VRUIMaskableGraphic()
	{
	}
}
[Token(Token = "0x2000299")]
public class VRUISubmeshFixer : MonoBehaviour
{
	[Token(Token = "0x4000DA0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool _needsTMPSubmeshes;

	[Token(Token = "0x4000DA1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static HashSet<Transform> s_newSubmeshTransforms;

	[Token(Token = "0x6000F6F")]
	[Address(RVA = "0x10936D0", Offset = "0x10936D0", VA = "0x10936D0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000F70")]
	[Address(RVA = "0x10937A0", Offset = "0x10937A0", VA = "0x10937A0")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000F71")]
	[Address(RVA = "0x10937A8", Offset = "0x10937A8", VA = "0x10937A8")]
	private void OnTransformChildrenChanged()
	{
	}

	[Token(Token = "0x6000F72")]
	[Address(RVA = "0x109384C", Offset = "0x109384C", VA = "0x109384C")]
	static VRUISubmeshFixer()
	{
	}

	[Token(Token = "0x6000F73")]
	[Address(RVA = "0x109393C", Offset = "0x109393C", VA = "0x109393C")]
	private static void OnWillRenderCanvases()
	{
	}

	[Token(Token = "0x6000F74")]
	[Address(RVA = "0x1093B34", Offset = "0x1093B34", VA = "0x1093B34")]
	private static void EnsureSubmeshComponents(Transform parent)
	{
	}

	[Token(Token = "0x6000F75")]
	[Address(RVA = "0x1093C54", Offset = "0x1093C54", VA = "0x1093C54")]
	public VRUISubmeshFixer()
	{
	}
}
[Token(Token = "0x200029A")]
public class XrOobCameraTracker : UpdatableMonoBehaviour, IFixedUpdatable, ICoreUpdatable, IUpdatable, IXrOobCameraTracker
{
	[Token(Token = "0x4000DA2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float sphereCastRadius;

	[Token(Token = "0x4000DA3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public LayerMask collidingLayerMask;

	[Token(Token = "0x4000DA4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float alphaBlendMinDistance;

	[Token(Token = "0x4000DA5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float alphaBendMaxDistance;

	[Token(Token = "0x4000DA6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float holeBlendMinDistance;

	[Token(Token = "0x4000DA7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float holeBlendMaxDistance;

	[Token(Token = "0x4000DA8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float holeMinSphereDistance;

	[Token(Token = "0x4000DA9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Renderer barrier;

	[Token(Token = "0x4000DAA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject debugLastValidTarget;

	[Token(Token = "0x4000DAC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private Vector3 lastPosition;

	[Token(Token = "0x4000DAD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private bool isPositionValid;

	[Token(Token = "0x4000DAE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
	private bool isVisionToBeObstructedByWorld;

	[Token(Token = "0x4000DAF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x62")]
	private bool isVisionToBeObstructedByHeldItem;

	[Token(Token = "0x4000DB0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x63")]
	private bool wasVisionObstructed;

	[Token(Token = "0x4000DB1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private bool initialised;

	[Token(Token = "0x4000DB2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private CharacterController characterController;

	[Token(Token = "0x4000DB3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private RaycastHit[] expensiveSphereCastHits;

	[Token(Token = "0x4000DB4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private RaycastHit[] oneHitArray;

	[Token(Token = "0x4000DB5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private int expensiveSphereCastHitsCount;

	[Token(Token = "0x4000DB6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private Material barrierMaterial;

	[Token(Token = "0x4000DB7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private float? requestedAlpha;

	[Token(Token = "0x4000DB8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private float alphaRequestTime;

	[Token(Token = "0x4000DB9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	private float originalAlpha;

	[Token(Token = "0x4000DBA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private float blendDuration;

	[Token(Token = "0x4000DBB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private HolderPlayer holderPlayer;

	[Token(Token = "0x4000DBC")]
	private const string materialPropertyAlpha = "_Alpha";

	[Token(Token = "0x4000DBD")]
	private const string materialPropertyDirection = "_Direction";

	[Token(Token = "0x4000DBE")]
	private const string materialPropertyDistance = "_Distance";

	[Token(Token = "0x17000155")]
	public Vector3 LastValidPosition
	{
		[Token(Token = "0x6000F76")]
		[Address(RVA = "0x1093C5C", Offset = "0x1093C5C", VA = "0x1093C5C")]
		[CompilerGenerated]
		get
		{
			return default(Vector3);
		}
		[Token(Token = "0x6000F77")]
		[Address(RVA = "0x1093C68", Offset = "0x1093C68", VA = "0x1093C68")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x17000156")]
	public bool isInitialised
	{
		[Token(Token = "0x6000F78")]
		[Address(RVA = "0x1093C74", Offset = "0x1093C74", VA = "0x1093C74")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000F79")]
	[Address(RVA = "0x1093C7C", Offset = "0x1093C7C", VA = "0x1093C7C", Slot = "6")]
	public override bool Initialise()
	{
		return default(bool);
	}

	[Token(Token = "0x6000F7A")]
	[Address(RVA = "0x1093E00", Offset = "0x1093E00", VA = "0x1093E00", Slot = "7")]
	public override void OnUpdate(float dt)
	{
	}

	[Token(Token = "0x6000F7B")]
	[Address(RVA = "0x1094164", Offset = "0x1094164", VA = "0x1094164")]
	private bool IsVisionObstructed()
	{
		return default(bool);
	}

	[Token(Token = "0x6000F7C")]
	[Address(RVA = "0x1094184", Offset = "0x1094184", VA = "0x1094184")]
	private void SetAlpha(float alpha)
	{
	}

	[Token(Token = "0x6000F7D")]
	[Address(RVA = "0x10943D4", Offset = "0x10943D4", VA = "0x10943D4")]
	private void SetAlphaAnimated(float alpha)
	{
	}

	[Token(Token = "0x6000F7E")]
	[Address(RVA = "0x10944A4", Offset = "0x10944A4", VA = "0x10944A4")]
	private void AnimateAlphaBlend()
	{
	}

	[Token(Token = "0x6000F7F")]
	[Address(RVA = "0x109461C", Offset = "0x109461C", VA = "0x109461C", Slot = "11")]
	public void OnFixedUpdate(float dt)
	{
	}

	[Token(Token = "0x6000F80")]
	[Address(RVA = "0x10949A0", Offset = "0x10949A0", VA = "0x10949A0")]
	private void EvaluatePosition()
	{
	}

	[Token(Token = "0x6000F81")]
	[Address(RVA = "0x1094700", Offset = "0x1094700", VA = "0x1094700")]
	private void EvaluateHeldItems()
	{
	}

	[Token(Token = "0x6000F82")]
	[Address(RVA = "0x1094FCC", Offset = "0x1094FCC", VA = "0x1094FCC")]
	private int CheapSphereCast(Vector3 target)
	{
		return default(int);
	}

	[Token(Token = "0x6000F83")]
	[Address(RVA = "0x1095304", Offset = "0x1095304", VA = "0x1095304")]
	private void ExpensiveSphereCast(Vector3 target)
	{
	}

	[Token(Token = "0x6000F84")]
	[Address(RVA = "0x1095168", Offset = "0x1095168", VA = "0x1095168")]
	private int CheapRayCast(Vector3 target)
	{
		return default(int);
	}

	[Token(Token = "0x6000F85")]
	[Address(RVA = "0x1094904", Offset = "0x1094904", VA = "0x1094904")]
	private bool HasCameraMoved()
	{
		return default(bool);
	}

	[Token(Token = "0x6000F86")]
	[Address(RVA = "0x1094210", Offset = "0x1094210", VA = "0x1094210")]
	private float GetApproxDistFromClosestValidPos()
	{
		return default(float);
	}

	[Token(Token = "0x6000F87")]
	[Address(RVA = "0x10954A8", Offset = "0x10954A8", VA = "0x10954A8")]
	private float GetPointToLineSegmentSqrDistance(Vector3 a, Vector3 b, Vector3 p)
	{
		return default(float);
	}

	[Token(Token = "0x6000F88")]
	[Address(RVA = "0x1095678", Offset = "0x1095678", VA = "0x1095678", Slot = "12")]
	public bool IsVisionObstructedWorld()
	{
		return default(bool);
	}

	[Token(Token = "0x6000F89")]
	[Address(RVA = "0x1095680", Offset = "0x1095680", VA = "0x1095680")]
	public XrOobCameraTracker()
	{
	}
}
[Token(Token = "0x200029B")]
public class XrOobTeleportTracker : MonoBehaviour, IXrOobTeleportTracker, IInitialisable
{
	[Token(Token = "0x4000DBF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private LayerMask collidingLayerMask;

	[Token(Token = "0x4000DC0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private float sphereScaleFactor;

	[Token(Token = "0x4000DC1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Transform cameraTransform;

	[Token(Token = "0x4000DC2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private RaycastHit[] oneHitArray;

	[Token(Token = "0x4000DC3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private LocomotionHandler locomotionHandler;

	[Token(Token = "0x4000DC4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private CharacterController characterController;

	[Token(Token = "0x4000DC5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private IXrOobCameraTracker xrOobCameraTracker;

	[Token(Token = "0x6000F8A")]
	[Address(RVA = "0x1095724", Offset = "0x1095724", VA = "0x1095724")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000F8B")]
	[Address(RVA = "0x10957E4", Offset = "0x10957E4", VA = "0x10957E4", Slot = "5")]
	public bool Initialise()
	{
		return default(bool);
	}

	[Token(Token = "0x6000F8C")]
	[Address(RVA = "0x109585C", Offset = "0x109585C", VA = "0x109585C", Slot = "4")]
	public bool IsTeleportObstructed(Vector3 targetFromRaycast_ws)
	{
		return default(bool);
	}

	[Token(Token = "0x6000F8D")]
	[Address(RVA = "0x1095DC8", Offset = "0x1095DC8", VA = "0x1095DC8")]
	public XrOobTeleportTracker()
	{
	}
}
namespace MenuSystem
{
	[Token(Token = "0x200029C")]
	public class ControlSettingsMenu : SettingsSubmenuBase
	{
		[Token(Token = "0x4000DC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		private MenuButton _movementModeTeleport;

		[Token(Token = "0x4000DC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		private MenuButton _movementModeController;

		[Token(Token = "0x4000DC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[SerializeField]
		private MenuButton _controllerModePress;

		[Token(Token = "0x4000DC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[SerializeField]
		private MenuButton _controllerModeHold;

		[Token(Token = "0x4000DCA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[SerializeField]
		private MenuButton _mouseCameraInvertYOn;

		[Token(Token = "0x4000DCB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[SerializeField]
		private MenuButton _mouseCameraInvertYOff;

		[Token(Token = "0x4000DCC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[SerializeField]
		private Slider _cameraMouseSensitivitySlider;

		[Token(Token = "0x4000DCD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[SerializeField]
		private MenuButton _controllerCameraInvertYOn;

		[Token(Token = "0x4000DCE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[SerializeField]
		private MenuButton _controllerCameraInvertYOff;

		[Token(Token = "0x4000DCF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[SerializeField]
		private Slider _cameraControllerSensitivitySlider;

		[Token(Token = "0x4000DD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		[SerializeField]
		private T17Dropdown _snapTurnDropdown;

		[Token(Token = "0x4000DD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private DropdownTurnSnap _dropdownSnapTurn;

		[Token(Token = "0x6000F8E")]
		[Address(RVA = "0x1095E38", Offset = "0x1095E38", VA = "0x1095E38", Slot = "6")]
		public override bool Initialise()
		{
			return default(bool);
		}

		[Token(Token = "0x6000F8F")]
		[Address(RVA = "0x1095E5C", Offset = "0x1095E5C", VA = "0x1095E5C")]
		private void InitialiseComponents()
		{
		}

		[Token(Token = "0x6000F90")]
		[Address(RVA = "0x1095E7C", Offset = "0x1095E7C", VA = "0x1095E7C")]
		private void InitSliders()
		{
		}

		[Token(Token = "0x6000F91")]
		[Address(RVA = "0x1096070", Offset = "0x1096070", VA = "0x1096070")]
		private void InitToggles()
		{
		}

		[Token(Token = "0x6000F92")]
		[Address(RVA = "0x10964BC", Offset = "0x10964BC", VA = "0x10964BC")]
		private void InitDropdowns()
		{
		}

		[Token(Token = "0x6000F93")]
		[Address(RVA = "0x10965F0", Offset = "0x10965F0", VA = "0x10965F0")]
		private void RefreshDropdownMenus()
		{
		}

		[Token(Token = "0x6000F94")]
		[Address(RVA = "0x1096604", Offset = "0x1096604", VA = "0x1096604", Slot = "8")]
		protected override void OnEnable()
		{
		}

		[Token(Token = "0x6000F95")]
		[Address(RVA = "0x109662C", Offset = "0x109662C", VA = "0x109662C")]
		private void OnMouseInvertYSetOn()
		{
		}

		[Token(Token = "0x6000F96")]
		[Address(RVA = "0x1096674", Offset = "0x1096674", VA = "0x1096674")]
		private void OnMouseInvertYSetOff()
		{
		}

		[Token(Token = "0x6000F97")]
		[Address(RVA = "0x10966BC", Offset = "0x10966BC", VA = "0x10966BC")]
		private void OnControllerInvertYSetOn()
		{
		}

		[Token(Token = "0x6000F98")]
		[Address(RVA = "0x1096704", Offset = "0x1096704", VA = "0x1096704")]
		private void OnControllerInvertYSetOff()
		{
		}

		[Token(Token = "0x6000F99")]
		[Address(RVA = "0x109674C", Offset = "0x109674C", VA = "0x109674C")]
		private void OnControlModePressSet()
		{
		}

		[Token(Token = "0x6000F9A")]
		[Address(RVA = "0x1096794", Offset = "0x1096794", VA = "0x1096794")]
		private void OnControlModeHoldSet()
		{
		}

		[Token(Token = "0x6000F9B")]
		[Address(RVA = "0x10967DC", Offset = "0x10967DC", VA = "0x10967DC")]
		private void OnMovementModeTeleportSet()
		{
		}

		[Token(Token = "0x6000F9C")]
		[Address(RVA = "0x1096824", Offset = "0x1096824", VA = "0x1096824")]
		private void OnMovementModeControllerSet()
		{
		}

		[Token(Token = "0x6000F9D")]
		[Address(RVA = "0x109686C", Offset = "0x109686C", VA = "0x109686C", Slot = "38")]
		public override void SetComponentStatesFromSettingsData()
		{
		}

		[Token(Token = "0x6000F9E")]
		[Address(RVA = "0x1096898", Offset = "0x1096898", VA = "0x1096898")]
		private void SetTogglesFromSettingsData()
		{
		}

		[Token(Token = "0x6000F9F")]
		[Address(RVA = "0x1096B0C", Offset = "0x1096B0C", VA = "0x1096B0C")]
		private void SetSlidersFromSettingsData()
		{
		}

		[Token(Token = "0x6000FA0")]
		[Address(RVA = "0x1096C18", Offset = "0x1096C18", VA = "0x1096C18")]
		private void OnCameraMouseSensitivitySliderValueChanged(float value)
		{
		}

		[Token(Token = "0x6000FA1")]
		[Address(RVA = "0x1096C50", Offset = "0x1096C50", VA = "0x1096C50")]
		private void OnCameraControllerSensitivitySliderValueChanged(float value)
		{
		}

		[Token(Token = "0x6000FA2")]
		[Address(RVA = "0x1096C88", Offset = "0x1096C88", VA = "0x1096C88", Slot = "10")]
		protected override void OnDestroy()
		{
		}

		[Token(Token = "0x6000FA3")]
		[Address(RVA = "0x1096CB0", Offset = "0x1096CB0", VA = "0x1096CB0")]
		private void CleanupSliders()
		{
		}

		[Token(Token = "0x6000FA4")]
		[Address(RVA = "0x1096E34", Offset = "0x1096E34", VA = "0x1096E34")]
		private void CleanupToggles()
		{
		}

		[Token(Token = "0x6000FA5")]
		[Address(RVA = "0x1097080", Offset = "0x1097080", VA = "0x1097080")]
		private void CleanupDropdowns()
		{
		}

		[Token(Token = "0x6000FA6")]
		[Address(RVA = "0x109708C", Offset = "0x109708C", VA = "0x109708C")]
		public ControlSettingsMenu()
		{
		}
	}
	[Token(Token = "0x200029D")]
	public class DropdownTurnSnap : MenuDropdown
	{
		[Token(Token = "0x4000DD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly SettingsControls.SnapTurn[] snapValues;

		[Token(Token = "0x6000FA7")]
		[Address(RVA = "0x1096570", Offset = "0x1096570", VA = "0x1096570")]
		public DropdownTurnSnap(T17Dropdown menu)
		{
		}

		[Token(Token = "0x6000FA8")]
		[Address(RVA = "0x1097094", Offset = "0x1097094", VA = "0x1097094", Slot = "4")]
		protected override int GetInititailSelection()
		{
			return default(int);
		}

		[Token(Token = "0x6000FA9")]
		[Address(RVA = "0x1097170", Offset = "0x1097170", VA = "0x1097170", Slot = "5")]
		protected override void RefreshOptions()
		{
		}

		[Token(Token = "0x6000FAA")]
		[Address(RVA = "0x10972D0", Offset = "0x10972D0", VA = "0x10972D0", Slot = "6")]
		protected override void OnSelectionChanged(int index)
		{
		}
	}
	[Token(Token = "0x200029E")]
	public class CreditsMenu : SettingsSubmenuBase
	{
		[Token(Token = "0x6000FAC")]
		[Address(RVA = "0x109740C", Offset = "0x109740C", VA = "0x109740C", Slot = "39")]
		public override void TryClose(Action<bool> callback)
		{
		}

		[Token(Token = "0x6000FAD")]
		[Address(RVA = "0x10974F0", Offset = "0x10974F0", VA = "0x10974F0")]
		public CreditsMenu()
		{
		}
	}
	[Token(Token = "0x200029F")]
	public class DebugMenu : Menu
	{
		[Token(Token = "0x4000DD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private ToggleButton _movementMethodButton;

		[Token(Token = "0x4000DD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private ToggleButton _cameraMethodButton;

		[Token(Token = "0x4000DD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private ToggleButton _uiVisibilityButton;

		[Token(Token = "0x4000DD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private LocomotionHandler _vrLocomotion;

		[Token(Token = "0x4000DD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private PlayerBase _player;

		[Token(Token = "0x4000DD8")]
		private const string c_collectablesContainerName = "collectables";

		[Token(Token = "0x4000DD9")]
		private const string c_keysDashboardName = "keys";

		[Token(Token = "0x4000DDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private DebugManager _debugManager;

		[Token(Token = "0x17000157")]
		public ToggleButton CameraMethodButton
		{
			[Token(Token = "0x6000FAE")]
			[Address(RVA = "0x10974F8", Offset = "0x10974F8", VA = "0x10974F8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000FAF")]
		[Address(RVA = "0x1097500", Offset = "0x1097500", VA = "0x1097500", Slot = "6")]
		public override bool Initialise()
		{
			return default(bool);
		}

		[Token(Token = "0x6000FB0")]
		[Address(RVA = "0x1097B00", Offset = "0x1097B00", VA = "0x1097B00", Slot = "10")]
		protected override void OnDestroy()
		{
		}

		[Token(Token = "0x6000FB1")]
		[Address(RVA = "0x1097C6C", Offset = "0x1097C6C", VA = "0x1097C6C", Slot = "34")]
		protected override void OnShown()
		{
		}

		[Token(Token = "0x6000FB2")]
		[Address(RVA = "0x1097C74", Offset = "0x1097C74", VA = "0x1097C74", Slot = "35")]
		protected override void OnHidden()
		{
		}

		[Token(Token = "0x6000FB3")]
		[Address(RVA = "0x1097C7C", Offset = "0x1097C7C", VA = "0x1097C7C")]
		private void OnMovementMethodChanged(int selection)
		{
		}

		[Token(Token = "0x6000FB4")]
		[Address(RVA = "0x1097D20", Offset = "0x1097D20", VA = "0x1097D20")]
		private void OnCameraChanged(int newSelection)
		{
		}

		[Token(Token = "0x6000FB5")]
		[Address(RVA = "0x1097D4C", Offset = "0x1097D4C", VA = "0x1097D4C")]
		private void OnUiVisibilityChanged(int newSelection)
		{
		}

		[Token(Token = "0x6000FB6")]
		[Address(RVA = "0x1097D78", Offset = "0x1097D78", VA = "0x1097D78")]
		public void OnToggleLightingPressed()
		{
		}

		[Token(Token = "0x6000FB7")]
		[Address(RVA = "0x1097E70", Offset = "0x1097E70", VA = "0x1097E70")]
		public void OnLoadIntroScenePressed()
		{
		}

		[Token(Token = "0x6000FB8")]
		[Address(RVA = "0x1098084", Offset = "0x1098084", VA = "0x1098084")]
		public void OnTriggerBoltEventPressed()
		{
		}

		[Token(Token = "0x6000FB9")]
		[Address(RVA = "0x109816C", Offset = "0x109816C", VA = "0x109816C")]
		public void OnUnlockAllDoorsButtonPressed()
		{
		}

		[Token(Token = "0x6000FBA")]
		[Address(RVA = "0x10982CC", Offset = "0x10982CC", VA = "0x10982CC")]
		public DebugMenu()
		{
		}
	}
	[Token(Token = "0x20002A0")]
	public class DebugPuzzleMenu : Menu
	{
		[Token(Token = "0x6000FBB")]
		[Address(RVA = "0x1098364", Offset = "0x1098364", VA = "0x1098364", Slot = "6")]
		public override bool Initialise()
		{
			return default(bool);
		}

		[Token(Token = "0x6000FBC")]
		[Address(RVA = "0x1098378", Offset = "0x1098378", VA = "0x1098378")]
		public void TriggerStoryEvent(string storyAndEvent)
		{
		}

		[Token(Token = "0x6000FBD")]
		[Address(RVA = "0x1098590", Offset = "0x1098590", VA = "0x1098590")]
		public void StartPuzzle(string puzzleName)
		{
		}

		[Token(Token = "0x6000FBE")]
		[Address(RVA = "0x1098738", Offset = "0x1098738", VA = "0x1098738")]
		public DebugPuzzleMenu()
		{
		}
	}
	[Token(Token = "0x20002A1")]
	public class DialogueBox : Menu
	{
		[Token(Token = "0x4000DDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public DialogueBoxContext dialogueContext;

		[Token(Token = "0x4000DDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private Transform _backgroundFill;

		[Token(Token = "0x4000DDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private LocalizeStringEvent _titleLocaliseStringEvent;

		[Token(Token = "0x4000DDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private LocalizeStringEvent _bodyLocaliseStringEvent;

		[Token(Token = "0x4000DDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private MenuButton _button1;

		[Token(Token = "0x4000DE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private MenuButton _button2;

		[Token(Token = "0x4000DE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		private MenuButton _button3;

		[Token(Token = "0x4000DE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private LocalizeStringEvent _button1LocaliseStringEvent;

		[Token(Token = "0x4000DE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private LocalizeStringEvent _button2LocaliseStringEvent;

		[Token(Token = "0x4000DE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private LocalizeStringEvent _button3LocaliseStringEvent;

		[Token(Token = "0x4000DE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private Vector2 _defaultSize;

		[Token(Token = "0x6000FBF")]
		[Address(RVA = "0x109873C", Offset = "0x109873C", VA = "0x109873C", Slot = "6")]
		public override bool Initialise()
		{
			return default(bool);
		}

		[Token(Token = "0x6000FC0")]
		[Address(RVA = "0x1098954", Offset = "0x1098954", VA = "0x1098954", Slot = "10")]
		protected override void OnDestroy()
		{
		}

		[Token(Token = "0x6000FC1")]
		[Address(RVA = "0x1098AA8", Offset = "0x1098AA8", VA = "0x1098AA8", Slot = "27")]
		public override void OnAdd()
		{
		}

		[Token(Token = "0x6000FC2")]
		[Address(RVA = "0x1098F70", Offset = "0x1098F70", VA = "0x1098F70", Slot = "34")]
		protected override void OnShown()
		{
		}

		[Token(Token = "0x6000FC3")]
		[Address(RVA = "0x1098F74", Offset = "0x1098F74", VA = "0x1098F74", Slot = "35")]
		protected override void OnHidden()
		{
		}

		[Token(Token = "0x6000FC4")]
		[Address(RVA = "0x1098DA0", Offset = "0x1098DA0", VA = "0x1098DA0")]
		private void SetLocalisedText(LocalizeStringEvent locStringEvent, string text)
		{
		}

		[Token(Token = "0x6000FC5")]
		[Address(RVA = "0x1098F78", Offset = "0x1098F78", VA = "0x1098F78")]
		private void OnButton1Pressed(DialogueBoxId id)
		{
		}

		[Token(Token = "0x6000FC6")]
		[Address(RVA = "0x1099080", Offset = "0x1099080", VA = "0x1099080")]
		private void OnButton2Pressed(DialogueBoxId id)
		{
		}

		[Token(Token = "0x6000FC7")]
		[Address(RVA = "0x1099188", Offset = "0x1099188", VA = "0x1099188")]
		private void OnButton3Pressed(DialogueBoxId id)
		{
		}

		[Token(Token = "0x6000FC8")]
		[Address(RVA = "0x1099290", Offset = "0x1099290", VA = "0x1099290")]
		public void PressCancel()
		{
		}

		[Token(Token = "0x6000FC9")]
		[Address(RVA = "0x10992E4", Offset = "0x10992E4", VA = "0x10992E4")]
		public DialogueBox()
		{
		}
	}
	[Token(Token = "0x20002A2")]
	public class DisplaySettingsMenu : SettingsSubmenuBase
	{
		[Token(Token = "0x4000DE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		private Slider _brightnessSlider;

		[Token(Token = "0x4000DE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		private Slider _contrastSlider;

		[Token(Token = "0x4000DE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[SerializeField]
		private Slider _gammaSlider;

		[Token(Token = "0x4000DE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[SerializeField]
		private Slider _CameraFOVSlider;

		[Token(Token = "0x4000DEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[SerializeField]
		private MenuButton _VignetteOn;

		[Token(Token = "0x4000DEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[SerializeField]
		private MenuButton _VignetteOff;

		[Token(Token = "0x4000DEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[SerializeField]
		private MenuButton _FilmGrainOn;

		[Token(Token = "0x4000DED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[SerializeField]
		private MenuButton _FilmGrainOff;

		[Token(Token = "0x4000DEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[SerializeField]
		private MenuButton _vSyncOn;

		[Token(Token = "0x4000DEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[SerializeField]
		private MenuButton _vSyncOff;

		[Token(Token = "0x4000DF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		[SerializeField]
		private MenuButton _antiosotropicFilteringOn;

		[Token(Token = "0x4000DF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		[SerializeField]
		private MenuButton _antiosotropicFilteringOff;

		[Token(Token = "0x4000DF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		[SerializeField]
		private MenuButton _WindowedOn;

		[Token(Token = "0x4000DF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		[SerializeField]
		private MenuButton _WindowedOff;

		[Token(Token = "0x4000DF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		[SerializeField]
		private T17Dropdown _ResolutionDropdown;

		[Token(Token = "0x4000DF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		[SerializeField]
		private T17Dropdown _MeshDetailDropdown;

		[Token(Token = "0x4000DF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		[SerializeField]
		private T17Dropdown _AntiAliasingDropdown;

		[Token(Token = "0x4000DF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		[SerializeField]
		private T17Dropdown _TextureResolutionDropdown;

		[Token(Token = "0x4000DF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		[SerializeField]
		private T17Dropdown _FrameLimitDropdown;

		[Token(Token = "0x4000DF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		private List<MenuDropdown> _dropdownMenus;

		[Token(Token = "0x4000DFA")]
		private const int c_totalNumDropdowns = 5;

		[Token(Token = "0x6000FD0")]
		[Address(RVA = "0x1099378", Offset = "0x1099378", VA = "0x1099378", Slot = "6")]
		public override bool Initialise()
		{
			return default(bool);
		}

		[Token(Token = "0x6000FD1")]
		[Address(RVA = "0x10993D0", Offset = "0x10993D0", VA = "0x10993D0")]
		private void OnVSyncChanged(bool state)
		{
		}

		[Token(Token = "0x6000FD2")]
		[Address(RVA = "0x1099460", Offset = "0x1099460", VA = "0x1099460")]
		private void OnFrameLimitChanged(int frameOption)
		{
		}

		[Token(Token = "0x6000FD3")]
		[Address(RVA = "0x109939C", Offset = "0x109939C", VA = "0x109939C")]
		private void InitialiseComponents()
		{
		}

		[Token(Token = "0x6000FD4")]
		[Address(RVA = "0x1099758", Offset = "0x1099758", VA = "0x1099758")]
		private void InitDropdowns()
		{
		}

		[Token(Token = "0x6000FD5")]
		[Address(RVA = "0x1099BEC", Offset = "0x1099BEC", VA = "0x1099BEC")]
		private void InitSliders()
		{
		}

		[Token(Token = "0x6000FD6")]
		[Address(RVA = "0x1099E68", Offset = "0x1099E68", VA = "0x1099E68")]
		private void InitToggles()
		{
		}

		[Token(Token = "0x6000FD7")]
		[Address(RVA = "0x109A670", Offset = "0x109A670", VA = "0x109A670", Slot = "38")]
		public override void SetComponentStatesFromSettingsData()
		{
		}

		[Token(Token = "0x6000FD8")]
		[Address(RVA = "0x1099464", Offset = "0x1099464", VA = "0x1099464")]
		private void SetTogglesFromSettingsData()
		{
		}

		[Token(Token = "0x6000FD9")]
		[Address(RVA = "0x109A690", Offset = "0x109A690", VA = "0x109A690")]
		private void SetSlidersFromSettingsData()
		{
		}

		[Token(Token = "0x6000FDA")]
		[Address(RVA = "0x10993D4", Offset = "0x10993D4", VA = "0x10993D4")]
		private void RefreshDropdownMenus()
		{
		}

		[Token(Token = "0x6000FDB")]
		[Address(RVA = "0x109A85C", Offset = "0x109A85C", VA = "0x109A85C", Slot = "8")]
		protected override void OnEnable()
		{
		}

		[Token(Token = "0x6000FDC")]
		[Address(RVA = "0x109A980", Offset = "0x109A980", VA = "0x109A980", Slot = "9")]
		protected override void OnDisable()
		{
		}

		[Token(Token = "0x6000FDD")]
		[Address(RVA = "0x109AA9C", Offset = "0x109AA9C", VA = "0x109AA9C", Slot = "10")]
		protected override void OnDestroy()
		{
		}

		[Token(Token = "0x6000FDE")]
		[Address(RVA = "0x109AAC4", Offset = "0x109AAC4", VA = "0x109AAC4")]
		private void CleanupSliders()
		{
		}

		[Token(Token = "0x6000FDF")]
		[Address(RVA = "0x109AC10", Offset = "0x109AC10", VA = "0x109AC10")]
		private void CleanupToggleButtons()
		{
		}

		[Token(Token = "0x6000FE0")]
		[Address(RVA = "0x109AEDC", Offset = "0x109AEDC", VA = "0x109AEDC")]
		private void CleanupDropdowns()
		{
		}

		[Token(Token = "0x6000FE1")]
		[Address(RVA = "0x109AEF0", Offset = "0x109AEF0", VA = "0x109AEF0")]
		private void OnBrightnessSliderValueChanged(float value)
		{
		}

		[Token(Token = "0x6000FE2")]
		[Address(RVA = "0x109AF38", Offset = "0x109AF38", VA = "0x109AF38")]
		private void OnContrastSliderValueChanged(float value)
		{
		}

		[Token(Token = "0x6000FE3")]
		[Address(RVA = "0x109AF80", Offset = "0x109AF80", VA = "0x109AF80")]
		private void OnGammaSliderValueChanged(float value)
		{
		}

		[Token(Token = "0x6000FE4")]
		[Address(RVA = "0x109AFC8", Offset = "0x109AFC8", VA = "0x109AFC8")]
		private void OnCameraFOVSliderValueChanged(float value)
		{
		}

		[Token(Token = "0x6000FE5")]
		[Address(RVA = "0x109B020", Offset = "0x109B020", VA = "0x109B020")]
		private void OnVignetteSetOn()
		{
		}

		[Token(Token = "0x6000FE6")]
		[Address(RVA = "0x109B068", Offset = "0x109B068", VA = "0x109B068")]
		private void OnVignetteSetOff()
		{
		}

		[Token(Token = "0x6000FE7")]
		[Address(RVA = "0x109B0B0", Offset = "0x109B0B0", VA = "0x109B0B0")]
		private void OnFilmGrainSetOn()
		{
		}

		[Token(Token = "0x6000FE8")]
		[Address(RVA = "0x109B0F8", Offset = "0x109B0F8", VA = "0x109B0F8")]
		private void OnFilmGrainSetOff()
		{
		}

		[Token(Token = "0x6000FE9")]
		[Address(RVA = "0x109B140", Offset = "0x109B140", VA = "0x109B140")]
		private void OnVSyncSetOn()
		{
		}

		[Token(Token = "0x6000FEA")]
		[Address(RVA = "0x109B188", Offset = "0x109B188", VA = "0x109B188")]
		private void OnVSyncSetOff()
		{
		}

		[Token(Token = "0x6000FEB")]
		[Address(RVA = "0x109B1D0", Offset = "0x109B1D0", VA = "0x109B1D0")]
		private void OnWindowedSetOn()
		{
		}

		[Token(Token = "0x6000FEC")]
		[Address(RVA = "0x109B218", Offset = "0x109B218", VA = "0x109B218")]
		private void OnWindowedSetOff()
		{
		}

		[Token(Token = "0x6000FED")]
		[Address(RVA = "0x109B260", Offset = "0x109B260", VA = "0x109B260")]
		private void OnAnisotropicFilteringSetOn()
		{
		}

		[Token(Token = "0x6000FEE")]
		[Address(RVA = "0x109B2A8", Offset = "0x109B2A8", VA = "0x109B2A8")]
		private void OnAnisotropicFilteringSetOff()
		{
		}

		[Token(Token = "0x6000FEF")]
		[Address(RVA = "0x109B2F0", Offset = "0x109B2F0", VA = "0x109B2F0")]
		public DisplaySettingsMenu()
		{
		}
	}
	[Token(Token = "0x20002A3")]
	public class DropdownScreenResolution : MenuDropdown
	{
		[Token(Token = "0x6000FF0")]
		[Address(RVA = "0x109A3AC", Offset = "0x109A3AC", VA = "0x109A3AC")]
		public DropdownScreenResolution(T17Dropdown menu)
		{
		}

		[Token(Token = "0x6000FF1")]
		[Address(RVA = "0x109B2F8", Offset = "0x109B2F8", VA = "0x109B2F8", Slot = "4")]
		protected override int GetInititailSelection()
		{
			return default(int);
		}

		[Token(Token = "0x6000FF2")]
		[Address(RVA = "0x109B4C4", Offset = "0x109B4C4", VA = "0x109B4C4", Slot = "5")]
		protected override void RefreshOptions()
		{
		}

		[Token(Token = "0x6000FF3")]
		[Address(RVA = "0x109B6E4", Offset = "0x109B6E4", VA = "0x109B6E4", Slot = "6")]
		protected override void OnSelectionChanged(int index)
		{
		}
	}
	[Token(Token = "0x20002A4")]
	public class DropdownMeshDetail : MenuDropdown
	{
		[Token(Token = "0x4000DFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly SettingsGraphics.MeshDetail[] meshDetailValues;

		[Token(Token = "0x6000FF4")]
		[Address(RVA = "0x109A470", Offset = "0x109A470", VA = "0x109A470")]
		public DropdownMeshDetail(T17Dropdown menu)
		{
		}

		[Token(Token = "0x6000FF5")]
		[Address(RVA = "0x109B7C0", Offset = "0x109B7C0", VA = "0x109B7C0", Slot = "4")]
		protected override int GetInititailSelection()
		{
			return default(int);
		}

		[Token(Token = "0x6000FF6")]
		[Address(RVA = "0x109B89C", Offset = "0x109B89C", VA = "0x109B89C", Slot = "5")]
		protected override void RefreshOptions()
		{
		}

		[Token(Token = "0x6000FF7")]
		[Address(RVA = "0x109B9FC", Offset = "0x109B9FC", VA = "0x109B9FC", Slot = "6")]
		protected override void OnSelectionChanged(int index)
		{
		}
	}
	[Token(Token = "0x20002A5")]
	public class DropdownAntiAlias : MenuDropdown
	{
		[Token(Token = "0x4000DFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly SettingsGraphics.AntiAlias[] antiAliasValues;

		[Token(Token = "0x6000FF9")]
		[Address(RVA = "0x109A4F0", Offset = "0x109A4F0", VA = "0x109A4F0")]
		public DropdownAntiAlias(T17Dropdown menu)
		{
		}

		[Token(Token = "0x6000FFA")]
		[Address(RVA = "0x109BB3C", Offset = "0x109BB3C", VA = "0x109BB3C", Slot = "4")]
		protected override int GetInititailSelection()
		{
			return default(int);
		}

		[Token(Token = "0x6000FFB")]
		[Address(RVA = "0x109BC18", Offset = "0x109BC18", VA = "0x109BC18", Slot = "5")]
		protected override void RefreshOptions()
		{
		}

		[Token(Token = "0x6000FFC")]
		[Address(RVA = "0x109BD78", Offset = "0x109BD78", VA = "0x109BD78", Slot = "6")]
		protected override void OnSelectionChanged(int index)
		{
		}
	}
	[Token(Token = "0x20002A6")]
	public class DropdownTextureResolution : MenuDropdown
	{
		[Token(Token = "0x4000DFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly SettingsGraphics.TextureResolution[] texResValues;

		[Token(Token = "0x6000FFE")]
		[Address(RVA = "0x109A570", Offset = "0x109A570", VA = "0x109A570")]
		public DropdownTextureResolution(T17Dropdown menu)
		{
		}

		[Token(Token = "0x6000FFF")]
		[Address(RVA = "0x109BEB8", Offset = "0x109BEB8", VA = "0x109BEB8", Slot = "4")]
		protected override int GetInititailSelection()
		{
			return default(int);
		}

		[Token(Token = "0x6001000")]
		[Address(RVA = "0x109BEE0", Offset = "0x109BEE0", VA = "0x109BEE0", Slot = "5")]
		protected override void RefreshOptions()
		{
		}

		[Token(Token = "0x6001001")]
		[Address(RVA = "0x109C040", Offset = "0x109C040", VA = "0x109C040", Slot = "6")]
		protected override void OnSelectionChanged(int index)
		{
		}
	}
	[Token(Token = "0x20002A7")]
	public class DropdownFrameLimit : MenuDropdown
	{
		[Token(Token = "0x4000DFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly int[] frameRateIds;

		[Token(Token = "0x6001003")]
		[Address(RVA = "0x109A5F0", Offset = "0x109A5F0", VA = "0x109A5F0")]
		public DropdownFrameLimit(T17Dropdown menu)
		{
		}

		[Token(Token = "0x6001004")]
		[Address(RVA = "0x109C180", Offset = "0x109C180", VA = "0x109C180", Slot = "4")]
		protected override int GetInititailSelection()
		{
			return default(int);
		}

		[Token(Token = "0x6001005")]
		[Address(RVA = "0x109C25C", Offset = "0x109C25C", VA = "0x109C25C", Slot = "5")]
		protected override void RefreshOptions()
		{
		}

		[Token(Token = "0x6001006")]
		[Address(RVA = "0x109C54C", Offset = "0x109C54C", VA = "0x109C54C", Slot = "6")]
		protected override void OnSelectionChanged(int index)
		{
		}
	}
	[Token(Token = "0x20002A8")]
	public class GameplaySettingsMenu : SettingsSubmenuBase
	{
		[Token(Token = "0x4000DFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		private T17Dropdown _languagesDropdown;

		[Token(Token = "0x4000E00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		private MenuButton _subtitlesOn;

		[Token(Token = "0x4000E01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[SerializeField]
		private MenuButton _subtitlesOff;

		[Token(Token = "0x4000E02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[SerializeField]
		private MenuButton _diegeticsOn;

		[Token(Token = "0x4000E03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[SerializeField]
		private MenuButton _diegeticsOff;

		[Token(Token = "0x4000E04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[SerializeField]
		private Slider _vibrationFeedbackSlider;

		[Token(Token = "0x6001008")]
		[Address(RVA = "0x109C68C", Offset = "0x109C68C", VA = "0x109C68C", Slot = "6")]
		public override bool Initialise()
		{
			return default(bool);
		}

		[Token(Token = "0x6001009")]
		[Address(RVA = "0x109C6B0", Offset = "0x109C6B0", VA = "0x109C6B0")]
		private void InitialiseComponents()
		{
		}

		[Token(Token = "0x600100A")]
		[Address(RVA = "0x109C6E4", Offset = "0x109C6E4", VA = "0x109C6E4")]
		private void InitSliders()
		{
		}

		[Token(Token = "0x600100B")]
		[Address(RVA = "0x109C80C", Offset = "0x109C80C", VA = "0x109C80C")]
		private void InitToggles()
		{
		}

		[Token(Token = "0x600100C")]
		[Address(RVA = "0x109CA68", Offset = "0x109CA68", VA = "0x109CA68")]
		private void InitDropdowns()
		{
		}

		[Token(Token = "0x600100D")]
		[Address(RVA = "0x109CB58", Offset = "0x109CB58", VA = "0x109CB58", Slot = "8")]
		protected override void OnEnable()
		{
		}

		[Token(Token = "0x600100E")]
		[Address(RVA = "0x109CE48", Offset = "0x109CE48", VA = "0x109CE48", Slot = "9")]
		protected override void OnDisable()
		{
		}

		[Token(Token = "0x600100F")]
		[Address(RVA = "0x109CEEC", Offset = "0x109CEEC", VA = "0x109CEEC")]
		private void OnLanguageSelected(int option)
		{
		}

		[Token(Token = "0x6001010")]
		[Address(RVA = "0x109CF5C", Offset = "0x109CF5C", VA = "0x109CF5C")]
		private void OnLocaleChanged()
		{
		}

		[Token(Token = "0x6001011")]
		[Address(RVA = "0x109CC18", Offset = "0x109CC18", VA = "0x109CC18")]
		private void RefreshLanguageDropdown()
		{
		}

		[Token(Token = "0x6001012")]
		[Address(RVA = "0x109CF60", Offset = "0x109CF60", VA = "0x109CF60")]
		private void OnSubtitlesSetOn()
		{
		}

		[Token(Token = "0x6001013")]
		[Address(RVA = "0x109CFA8", Offset = "0x109CFA8", VA = "0x109CFA8")]
		private void OnSubtitlesSetOff()
		{
		}

		[Token(Token = "0x6001014")]
		[Address(RVA = "0x109CFF0", Offset = "0x109CFF0", VA = "0x109CFF0")]
		private void OnDiegeticsSetOn()
		{
		}

		[Token(Token = "0x6001015")]
		[Address(RVA = "0x109D038", Offset = "0x109D038", VA = "0x109D038")]
		private void OnDiegeticsSetOff()
		{
		}

		[Token(Token = "0x6001016")]
		[Address(RVA = "0x109D080", Offset = "0x109D080", VA = "0x109D080", Slot = "38")]
		public override void SetComponentStatesFromSettingsData()
		{
		}

		[Token(Token = "0x6001017")]
		[Address(RVA = "0x109D098", Offset = "0x109D098", VA = "0x109D098")]
		private void SetTogglesFromSettingsData()
		{
		}

		[Token(Token = "0x6001018")]
		[Address(RVA = "0x109D1F4", Offset = "0x109D1F4", VA = "0x109D1F4")]
		private void SetSlidersFromSettingsData()
		{
		}

		[Token(Token = "0x6001019")]
		[Address(RVA = "0x109D2A0", Offset = "0x109D2A0", VA = "0x109D2A0")]
		private void OnVibrationFeedbackSliderValueChanged(float value)
		{
		}

		[Token(Token = "0x600101A")]
		[Address(RVA = "0x109D2E8", Offset = "0x109D2E8", VA = "0x109D2E8", Slot = "10")]
		protected override void OnDestroy()
		{
		}

		[Token(Token = "0x600101B")]
		[Address(RVA = "0x109D308", Offset = "0x109D308", VA = "0x109D308")]
		private void CleanupSliders()
		{
		}

		[Token(Token = "0x600101C")]
		[Address(RVA = "0x109D394", Offset = "0x109D394", VA = "0x109D394")]
		private void CleanupToggleButtons()
		{
		}

		[Token(Token = "0x600101D")]
		[Address(RVA = "0x109D4E0", Offset = "0x109D4E0", VA = "0x109D4E0")]
		private void CleanupDropdowns()
		{
		}

		[Token(Token = "0x600101E")]
		[Address(RVA = "0x109D56C", Offset = "0x109D56C", VA = "0x109D56C")]
		public GameplaySettingsMenu()
		{
		}
	}
	[Token(Token = "0x20002A9")]
	public class InGameMenu : Menu
	{
		[Token(Token = "0x4000E05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private BaseStatUI[] displayedStats;

		[Token(Token = "0x4000E06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private TextMeshProUGUI journalText;

		[Token(Token = "0x4000E07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private List<Selectable> notInteractableWhenSaving;

		[Token(Token = "0x4000E08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private List<Selectable> notInteractableDuringAnimationSequence;

		[Token(Token = "0x4000E09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private List<Selectable> seletablesToDisable;

		[Token(Token = "0x600101F")]
		[Address(RVA = "0x109D574", Offset = "0x109D574", VA = "0x109D574", Slot = "6")]
		public override bool Initialise()
		{
			return default(bool);
		}

		[Token(Token = "0x6001020")]
		[Address(RVA = "0x109D5DC", Offset = "0x109D5DC", VA = "0x109D5DC", Slot = "7")]
		public override void OnUpdate(float dt)
		{
		}

		[Token(Token = "0x6001021")]
		[Address(RVA = "0x109DA48", Offset = "0x109DA48", VA = "0x109DA48", Slot = "30")]
		public override void FocusReceived()
		{
		}

		[Token(Token = "0x6001022")]
		[Address(RVA = "0x109DB90", Offset = "0x109DB90", VA = "0x109DB90", Slot = "34")]
		protected override void OnShown()
		{
		}

		[Token(Token = "0x6001023")]
		[Address(RVA = "0x109DCA0", Offset = "0x109DCA0", VA = "0x109DCA0", Slot = "35")]
		protected override void OnHidden()
		{
		}

		[Token(Token = "0x6001024")]
		[Address(RVA = "0x109DCA4", Offset = "0x109DCA4", VA = "0x109DCA4")]
		public void OnQuitToMainMenu()
		{
		}

		[Token(Token = "0x6001025")]
		[Address(RVA = "0x109DE5C", Offset = "0x109DE5C", VA = "0x109DE5C")]
		private void OnConfirmQuitToMenu()
		{
		}

		[Token(Token = "0x6001026")]
		[Address(RVA = "0x109DF3C", Offset = "0x109DF3C", VA = "0x109DF3C")]
		public void OnRestoreObjects()
		{
		}

		[Token(Token = "0x6001027")]
		[Address(RVA = "0x109E0F4", Offset = "0x109E0F4", VA = "0x109E0F4")]
		private void OnConfirmRestoreObjects()
		{
		}

		[Token(Token = "0x6001028")]
		[Address(RVA = "0x109D89C", Offset = "0x109D89C", VA = "0x109D89C")]
		private void UpdateInteractableState(bool saving)
		{
		}

		[Token(Token = "0x6001029")]
		[Address(RVA = "0x109E118", Offset = "0x109E118", VA = "0x109E118")]
		private void EnableSelectablesIfNotInList(List<Selectable> input, List<Selectable> listToDisable)
		{
		}

		[Token(Token = "0x600102A")]
		[Address(RVA = "0x109E1FC", Offset = "0x109E1FC", VA = "0x109E1FC")]
		public InGameMenu()
		{
		}
	}
	[Token(Token = "0x20002AA")]
	public class LanguageSettingsMenu : SettingsSubmenuBase
	{
		[Token(Token = "0x600102B")]
		[Address(RVA = "0x109E2F0", Offset = "0x109E2F0", VA = "0x109E2F0")]
		public LanguageSettingsMenu()
		{
		}
	}
	[Token(Token = "0x20002AB")]
	public class LoadGameMenu : LoadSaveGameMenuBase
	{
		[Token(Token = "0x4000E0A")]
		private const string c_newGameSceneName = "SCN_Intro";

		[Token(Token = "0x600102C")]
		[Address(RVA = "0x109E2F8", Offset = "0x109E2F8", VA = "0x109E2F8", Slot = "37")]
		public override void InitSlots()
		{
		}

		[Token(Token = "0x600102D")]
		[Address(RVA = "0x109E498", Offset = "0x109E498", VA = "0x109E498")]
		private void HideUnusedSlots()
		{
		}

		[Token(Token = "0x600102E")]
		[Address(RVA = "0x109E5E8", Offset = "0x109E5E8", VA = "0x109E5E8", Slot = "36")]
		public override void OnSaveSlotSelected(int slot)
		{
		}

		[Token(Token = "0x600102F")]
		[Address(RVA = "0x109E8BC", Offset = "0x109E8BC", VA = "0x109E8BC")]
		public void OnNewGamePressed()
		{
		}

		[Token(Token = "0x6001030")]
		[Address(RVA = "0x109E9D4", Offset = "0x109E9D4", VA = "0x109E9D4")]
		public void OnContinuePressed()
		{
		}

		[Token(Token = "0x6001031")]
		[Address(RVA = "0x109E62C", Offset = "0x109E62C", VA = "0x109E62C")]
		private void StartLoad()
		{
		}

		[Token(Token = "0x6001032")]
		[Address(RVA = "0x109E8E8", Offset = "0x109E8E8", VA = "0x109E8E8")]
		private void StartNewGame()
		{
		}

		[Token(Token = "0x6001033")]
		[Address(RVA = "0x109EAE4", Offset = "0x109EAE4", VA = "0x109EAE4")]
		public LoadGameMenu()
		{
		}
	}
	[Token(Token = "0x20002AC")]
	public class LoadSaveGameMenuBase : Menu
	{
		[Token(Token = "0x4000E0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		protected SaveGameSlot[] _slots;

		[Token(Token = "0x17000158")]
		public int SelectedSlot
		{
			[Token(Token = "0x6001034")]
			[Address(RVA = "0x109EAEC", Offset = "0x109EAEC", VA = "0x109EAEC")]
			[CompilerGenerated]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001035")]
			[Address(RVA = "0x109EAF4", Offset = "0x109EAF4", VA = "0x109EAF4")]
			[CompilerGenerated]
			protected set
			{
			}
		}

		[Token(Token = "0x6001036")]
		[Address(RVA = "0x109E624", Offset = "0x109E624", VA = "0x109E624", Slot = "36")]
		public virtual void OnSaveSlotSelected(int slot)
		{
		}

		[Token(Token = "0x6001037")]
		[Address(RVA = "0x109EAFC", Offset = "0x109EAFC", VA = "0x109EAFC")]
		public void SetActiveSlot(int slot)
		{
		}

		[Token(Token = "0x6001038")]
		[Address(RVA = "0x109E310", Offset = "0x109E310", VA = "0x109E310", Slot = "37")]
		public virtual void InitSlots()
		{
		}

		[Token(Token = "0x6001039")]
		[Address(RVA = "0x109EAE8", Offset = "0x109EAE8", VA = "0x109EAE8")]
		public LoadSaveGameMenuBase()
		{
		}
	}
	[Token(Token = "0x20002AD")]
	public class MainMenu : Menu
	{
		[Token(Token = "0x4000E0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private UnityEngine.UI.Button _continueButton;

		[Token(Token = "0x4000E0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private UnityEngine.UI.Button _loadButton;

		[Token(Token = "0x4000E0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private UnityEngine.UI.Button _newButton;

		[Token(Token = "0x4000E10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private LoadGameMenu _loadGameMenu;

		[Token(Token = "0x4000E11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Selectable _defaultSelectable;

		[Token(Token = "0x600103A")]
		[Address(RVA = "0x109EB04", Offset = "0x109EB04", VA = "0x109EB04", Slot = "36")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x600103B")]
		[Address(RVA = "0x109EB10", Offset = "0x109EB10", VA = "0x109EB10", Slot = "29")]
		public override void OnCancel()
		{
		}

		[Token(Token = "0x600103C")]
		[Address(RVA = "0x109EB14", Offset = "0x109EB14", VA = "0x109EB14", Slot = "34")]
		protected override void OnShown()
		{
		}

		[Token(Token = "0x600103D")]
		[Address(RVA = "0x109ECF4", Offset = "0x109ECF4", VA = "0x109ECF4")]
		public void OnContinue()
		{
		}

		[Token(Token = "0x600103E")]
		[Address(RVA = "0x109ED80", Offset = "0x109ED80", VA = "0x109ED80")]
		public void OnNewGame()
		{
		}

		[Token(Token = "0x600103F")]
		[Address(RVA = "0x109F01C", Offset = "0x109F01C", VA = "0x109F01C")]
		private void OnConfirmNewGame()
		{
		}

		[Token(Token = "0x6001040")]
		[Address(RVA = "0x109F0B0", Offset = "0x109F0B0", VA = "0x109F0B0")]
		public void OnQuitToDesktop()
		{
		}

		[Token(Token = "0x6001041")]
		[Address(RVA = "0x109F0B8", Offset = "0x109F0B8", VA = "0x109F0B8")]
		public MainMenu()
		{
		}
	}
	[Token(Token = "0x20002AE")]
	public interface IMenu
	{
		[Token(Token = "0x17000159")]
		GameObject gameObject
		{
			[Token(Token = "0x6001042")]
			get;
		}

		[Token(Token = "0x1700015A")]
		bool isVisible
		{
			[Token(Token = "0x6001043")]
			get;
		}

		[Token(Token = "0x1700015B")]
		bool hasFocus
		{
			[Token(Token = "0x6001044")]
			get;
		}

		[Token(Token = "0x1700015C")]
		bool isWorldSpace
		{
			[Token(Token = "0x6001045")]
			get;
		}

		[Token(Token = "0x1700015D")]
		bool isAnchored
		{
			[Token(Token = "0x6001046")]
			get;
		}

		[Token(Token = "0x1700015E")]
		string name
		{
			[Token(Token = "0x6001047")]
			get;
		}

		[Token(Token = "0x1700015F")]
		MenuId id
		{
			[Token(Token = "0x6001048")]
			get;
		}

		[Token(Token = "0x6001049")]
		void OnAdd();

		[Token(Token = "0x600104A")]
		void OnRemove();

		[Token(Token = "0x600104B")]
		void OnCancel();

		[Token(Token = "0x600104C")]
		void FocusReceived();

		[Token(Token = "0x600104D")]
		void FocusLost(MenuId newFocus);

		[Token(Token = "0x600104E")]
		void Show();

		[Token(Token = "0x600104F")]
		void Hide();

		[Token(Token = "0x6001050")]
		void GetReplacementBehaviour(MenuId successor, out bool loseFocus, out bool hideSelf);

		[Token(Token = "0x6001051")]
		bool RequestMenu(MenuId id);
	}
	[Serializable]
	[Token(Token = "0x20002AF")]
	public enum MenuId
	{
		[Token(Token = "0x4000E13")]
		NotSet,
		[Token(Token = "0x4000E14")]
		InGameMenu,
		[Token(Token = "0x4000E15")]
		DebugMenu,
		[Token(Token = "0x4000E16")]
		DebugPuzzleMenu,
		[Token(Token = "0x4000E17")]
		SaveGameMenu,
		[Token(Token = "0x4000E18")]
		LoadGameMenu,
		[Token(Token = "0x4000E19")]
		SettingsParentMenu,
		[Token(Token = "0x4000E1A")]
		GameplaySettingsMenu,
		[Token(Token = "0x4000E1B")]
		DisplaySettingsMenu,
		[Token(Token = "0x4000E1C")]
		ShowControls,
		[Token(Token = "0x4000E1D")]
		ControlSettingsMenu,
		[Token(Token = "0x4000E1E")]
		SoundSettingsMenu,
		[Token(Token = "0x4000E1F")]
		PerformanceSettingsMenu,
		[Token(Token = "0x4000E20")]
		Credits,
		[Token(Token = "0x4000E21")]
		MainMenu,
		[Token(Token = "0x4000E22")]
		DialogueBox
	}
	[Token(Token = "0x20002B0")]
	public class Menu : UpdatableMonoBehaviour, IMenu
	{
		[Token(Token = "0x20002B1")]
		private struct SelectableState
		{
			[Token(Token = "0x4000E31")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Selectable selectable;

			[Token(Token = "0x4000E32")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public bool isInteractable;

			[Token(Token = "0x600106C")]
			[Address(RVA = "0x109FD38", Offset = "0x109FD38", VA = "0x109FD38")]
			public SelectableState(Selectable sel, bool canInteract)
			{
			}
		}

		[Token(Token = "0x4000E23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Selectable _initiallySelected;

		[Token(Token = "0x4000E24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public UnityEvent onFocusReceived;

		[Token(Token = "0x4000E25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public UnityEvent onFocusLost;

		[Token(Token = "0x4000E26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		protected MenuId _menuId;

		[Token(Token = "0x4000E27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[SerializeField]
		private bool _autoPositionInWorldSpace;

		[Token(Token = "0x4000E28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3D")]
		[SerializeField]
		private bool _autoPositionHeightOnlyInWorldSpace;

		[Token(Token = "0x4000E29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3E")]
		[SerializeField]
		private bool _autoRotateInWorldSpace;

		[Token(Token = "0x4000E2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private float _worldSpaceDepthOffset;

		[Token(Token = "0x4000E2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[SerializeField]
		private float _menuTiltAngle;

		[Token(Token = "0x4000E2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private float _worldSpaceHeightOffset;

		[Token(Token = "0x4000E2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private bool _hasFocus;

		[Token(Token = "0x4000E2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private InputDeviceType _cachedLastInputDeviceType;

		[Token(Token = "0x4000E2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private List<SelectableState> _allSelectables;

		[Token(Token = "0x4000E30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Selectable _lastSelected;

		[Token(Token = "0x17000160")]
		public bool isVisible
		{
			[Token(Token = "0x6001052")]
			[Address(RVA = "0x109F0BC", Offset = "0x109F0BC", VA = "0x109F0BC", Slot = "12")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000161")]
		public bool hasFocus
		{
			[Token(Token = "0x6001053")]
			[Address(RVA = "0x109F0DC", Offset = "0x109F0DC", VA = "0x109F0DC", Slot = "13")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000162")]
		public bool isWorldSpace
		{
			[Token(Token = "0x6001054")]
			[Address(RVA = "0x109F0E4", Offset = "0x109F0E4", VA = "0x109F0E4", Slot = "14")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000163")]
		public bool isAnchored
		{
			[Token(Token = "0x6001055")]
			[Address(RVA = "0x109F0EC", Offset = "0x109F0EC", VA = "0x109F0EC", Slot = "15")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000164")]
		public MenuId id
		{
			[Token(Token = "0x6001056")]
			[Address(RVA = "0x109F0FC", Offset = "0x109F0FC", VA = "0x109F0FC", Slot = "17")]
			get
			{
				return default(MenuId);
			}
		}

		[Token(Token = "0x17000165")]
		protected IMenuManager menuManager
		{
			[Token(Token = "0x6001057")]
			[Address(RVA = "0x1097E68", Offset = "0x1097E68", VA = "0x1097E68")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001058")]
		[Address(RVA = "0x10978DC", Offset = "0x10978DC", VA = "0x10978DC", Slot = "6")]
		public override bool Initialise()
		{
			return default(bool);
		}

		[Token(Token = "0x6001059")]
		[Address(RVA = "0x1097C68", Offset = "0x1097C68", VA = "0x1097C68", Slot = "10")]
		protected override void OnDestroy()
		{
		}

		[Token(Token = "0x600105A")]
		[Address(RVA = "0x109D6B8", Offset = "0x109D6B8", VA = "0x109D6B8", Slot = "7")]
		public override void OnUpdate(float dt)
		{
		}

		[Token(Token = "0x600105B")]
		[Address(RVA = "0x1098D9C", Offset = "0x1098D9C", VA = "0x1098D9C", Slot = "27")]
		public virtual void OnAdd()
		{
		}

		[Token(Token = "0x600105C")]
		[Address(RVA = "0x109F104", Offset = "0x109F104", VA = "0x109F104", Slot = "28")]
		public virtual void OnRemove()
		{
		}

		[Token(Token = "0x600105D")]
		[Address(RVA = "0x109F110", Offset = "0x109F110", VA = "0x109F110", Slot = "29")]
		public virtual void OnCancel()
		{
		}

		[Token(Token = "0x600105E")]
		[Address(RVA = "0x109DA64", Offset = "0x109DA64", VA = "0x109DA64", Slot = "30")]
		public virtual void FocusReceived()
		{
		}

		[Token(Token = "0x600105F")]
		[Address(RVA = "0x109F120", Offset = "0x109F120", VA = "0x109F120", Slot = "31")]
		public virtual void FocusLost(MenuId newFocus)
		{
		}

		[Token(Token = "0x6001060")]
		[Address(RVA = "0x109F294", Offset = "0x109F294", VA = "0x109F294", Slot = "23")]
		public void Show()
		{
		}

		[Token(Token = "0x6001061")]
		[Address(RVA = "0x109F790", Offset = "0x109F790", VA = "0x109F790", Slot = "24")]
		public void Hide()
		{
		}

		[Token(Token = "0x6001062")]
		[Address(RVA = "0x109F7CC", Offset = "0x109F7CC", VA = "0x109F7CC", Slot = "32")]
		public virtual void GetReplacementBehaviour(MenuId successor, out bool loseFocus, out bool hideSelf)
		{
		}

		[Token(Token = "0x6001063")]
		[Address(RVA = "0x109F7DC", Offset = "0x109F7DC", VA = "0x109F7DC", Slot = "33")]
		public virtual bool RequestMenu(MenuId newMenuId)
		{
			return default(bool);
		}

		[Token(Token = "0x6001064")]
		[Address(RVA = "0x1097C70", Offset = "0x1097C70", VA = "0x1097C70", Slot = "34")]
		protected virtual void OnShown()
		{
		}

		[Token(Token = "0x6001065")]
		[Address(RVA = "0x1097C78", Offset = "0x1097C78", VA = "0x1097C78", Slot = "35")]
		protected virtual void OnHidden()
		{
		}

		[Token(Token = "0x6001066")]
		[Address(RVA = "0x109743C", Offset = "0x109743C", VA = "0x109743C")]
		public void Close()
		{
		}

		[Token(Token = "0x6001067")]
		[Address(RVA = "0x109F894", Offset = "0x109F894", VA = "0x109F894")]
		public void CloseInGameMenu()
		{
		}

		[Token(Token = "0x6001068")]
		[Address(RVA = "0x109F934", Offset = "0x109F934", VA = "0x109F934")]
		private void EnsureCorrectSelectedItemState([Optional] Selectable preferredFallback, bool overrideCurrentSelection = false)
		{
		}

		[Token(Token = "0x6001069")]
		[Address(RVA = "0x10982D0", Offset = "0x10982D0", VA = "0x10982D0")]
		public Menu()
		{
		}

		[SpecialName]
		[Token(Token = "0x600106A")]
		[Address(RVA = "0x109FD28", Offset = "0x109FD28", VA = "0x109FD28", Slot = "11")]
		private GameObject MenuSystem.IMenu.get_gameObject()
		{
			return null;
		}

		[SpecialName]
		[Token(Token = "0x600106B")]
		[Address(RVA = "0x109FD30", Offset = "0x109FD30", VA = "0x109FD30", Slot = "16")]
		private string MenuSystem.IMenu.get_name()
		{
			return null;
		}
	}
	[Token(Token = "0x20002B2")]
	public class MenuButton : UnityEngine.UI.Button, IInitialisable
	{
		[Token(Token = "0x4000E33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		public RuntimeAnimatorController _normalAnimator;

		[Token(Token = "0x4000E34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		public RuntimeAnimatorController _pressedAnimator;

		[Token(Token = "0x4000E35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		[SerializeField]
		protected EventReference _highlightedAudio;

		[Token(Token = "0x4000E36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		[SerializeField]
		protected EventReference _pressedAudio;

		[Token(Token = "0x4000E37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		public MenuId _menuToOpen;

		[Token(Token = "0x4000E38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		private Menu _parentMenu;

		[Token(Token = "0x4000E39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		private Animator _animator;

		[Token(Token = "0x4000E3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		private bool isSelected;

		[Token(Token = "0x4000E3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14C")]
		private RenderMode _canvasRenderMode;

		[Token(Token = "0x4000E3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		private bool isPointerOver;

		[Token(Token = "0x4000E3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x151")]
		private bool isHighlighted;

		[Token(Token = "0x600106D")]
		[Address(RVA = "0x109FD60", Offset = "0x109FD60", VA = "0x109FD60", Slot = "44")]
		public virtual bool Initialise()
		{
			return default(bool);
		}

		[Token(Token = "0x600106E")]
		[Address(RVA = "0x109FDC0", Offset = "0x109FDC0", VA = "0x109FDC0", Slot = "4")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x600106F")]
		[Address(RVA = "0x109FF98", Offset = "0x109FF98", VA = "0x109FF98", Slot = "6")]
		protected override void Start()
		{
		}

		[Token(Token = "0x6001070")]
		[Address(RVA = "0x10A0030", Offset = "0x10A0030", VA = "0x10A0030", Slot = "8")]
		protected override void OnDestroy()
		{
		}

		[Token(Token = "0x6001071")]
		[Address(RVA = "0x10A01B4", Offset = "0x10A01B4", VA = "0x10A01B4", Slot = "26")]
		protected override void DoStateTransition(SelectionState state, bool instant)
		{
		}

		[Token(Token = "0x6001072")]
		[Address(RVA = "0x10A0458", Offset = "0x10A0458", VA = "0x10A0458")]
		private void OnButtonClicked()
		{
		}

		[Token(Token = "0x6001073")]
		[Address(RVA = "0x10A02A0", Offset = "0x10A02A0", VA = "0x10A02A0")]
		private void PlayInteractionAudio(SelectionState selectionState)
		{
		}

		[Token(Token = "0x6001074")]
		[Address(RVA = "0x10A0530", Offset = "0x10A0530", VA = "0x10A0530")]
		public void SetAsToggledButton(MenuButton[] buttons)
		{
		}

		[Token(Token = "0x6001075")]
		[Address(RVA = "0x10A0738", Offset = "0x10A0738", VA = "0x10A0738")]
		public void SetAsToggledButton(bool state, MenuButton OtherButton)
		{
		}

		[Token(Token = "0x6001076")]
		[Address(RVA = "0x10A060C", Offset = "0x10A060C", VA = "0x10A060C")]
		private void SetAsTogglePressed()
		{
		}

		[Token(Token = "0x6001077")]
		[Address(RVA = "0x10A06A4", Offset = "0x10A06A4", VA = "0x10A06A4")]
		private void SetAsToggleUnpressed()
		{
		}

		[Token(Token = "0x6001078")]
		[Address(RVA = "0x10A0780", Offset = "0x10A0780", VA = "0x10A0780")]
		private void SetAnimationController(RuntimeAnimatorController controller)
		{
		}

		[Token(Token = "0x6001079")]
		[Address(RVA = "0x10A0818", Offset = "0x10A0818", VA = "0x10A0818")]
		private void OnMenuFocusReceived()
		{
		}

		[Token(Token = "0x600107A")]
		[Address(RVA = "0x10A081C", Offset = "0x10A081C", VA = "0x10A081C")]
		private void OnMenuFocusLost()
		{
		}

		[Token(Token = "0x600107B")]
		[Address(RVA = "0x10A0820", Offset = "0x10A0820", VA = "0x10A0820", Slot = "34")]
		public override void OnPointerEnter(PointerEventData eventData)
		{
		}

		[Token(Token = "0x600107C")]
		[Address(RVA = "0x10A0940", Offset = "0x10A0940", VA = "0x10A0940", Slot = "35")]
		public override void OnPointerExit(PointerEventData eventData)
		{
		}

		[Token(Token = "0x600107D")]
		[Address(RVA = "0x10A09D0", Offset = "0x10A09D0", VA = "0x10A09D0", Slot = "36")]
		public override void OnSelect(BaseEventData eventData)
		{
		}

		[Token(Token = "0x600107E")]
		[Address(RVA = "0x10A09F8", Offset = "0x10A09F8", VA = "0x10A09F8", Slot = "37")]
		public override void OnDeselect(BaseEventData eventData)
		{
		}

		[Token(Token = "0x600107F")]
		[Address(RVA = "0x10A0A9C", Offset = "0x10A0A9C", VA = "0x10A0A9C", Slot = "7")]
		protected override void OnDisable()
		{
		}

		[Token(Token = "0x6001080")]
		[Address(RVA = "0x10A0B20", Offset = "0x10A0B20", VA = "0x10A0B20")]
		public MenuButton()
		{
		}
	}
	[Token(Token = "0x20002B3")]
	public abstract class MenuDropdown
	{
		[Token(Token = "0x4000E3E")]
		protected const string kStringUITableName = "FrontEndText";

		[Token(Token = "0x4000E3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int _selectedIndex;

		[Token(Token = "0x4000E40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private T17Dropdown _dropdownMenu;

		[Token(Token = "0x4000E41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		protected List<string> options;

		[Token(Token = "0x4000E42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		protected string[] optionStrings;

		[Token(Token = "0x6001081")]
		protected abstract int GetInititailSelection();

		[Token(Token = "0x6001082")]
		protected abstract void RefreshOptions();

		[Token(Token = "0x6001083")]
		protected abstract void OnSelectionChanged(int index);

		[Token(Token = "0x6001084")]
		[Address(RVA = "0x10A0B30", Offset = "0x10A0B30", VA = "0x10A0B30")]
		protected MenuDropdown(T17Dropdown menu, int initialListSize)
		{
		}

		[Token(Token = "0x6001085")]
		[Address(RVA = "0x10A0C74", Offset = "0x10A0C74", VA = "0x10A0C74")]
		public void Refresh()
		{
		}

		[Token(Token = "0x6001086")]
		[Address(RVA = "0x10A0D48", Offset = "0x10A0D48", VA = "0x10A0D48")]
		private void OnSelected(int index)
		{
		}

		[Token(Token = "0x6001087")]
		[Address(RVA = "0x10A0E58", Offset = "0x10A0E58", VA = "0x10A0E58")]
		protected void SetLocalisedOptionsText(int numOptions, string[] localisation)
		{
		}
	}
	[Token(Token = "0x20002B4")]
	public interface IMenuManager
	{
		[Token(Token = "0x17000166")]
		Transform mainCameraTransform
		{
			[Token(Token = "0x6001097")]
			get;
		}

		[Token(Token = "0x17000167")]
		Vector3 worldSpacePreferredLocation
		{
			[Token(Token = "0x6001098")]
			get;
		}

		[Token(Token = "0x17000168")]
		IMenu currentTopMenu
		{
			[Token(Token = "0x6001099")]
			get;
		}

		[Token(Token = "0x6001088")]
		void Initialise([Optional] PlatformEventService eventService);

		[Token(Token = "0x6001089")]
		bool IsReady();

		[Token(Token = "0x600108A")]
		void ResetForScene(Camera mainCamera);

		[Token(Token = "0x600108B")]
		void RegisterMenu(IMenu menu, MenuId id);

		[Token(Token = "0x600108C")]
		void EnableMenus();

		[Token(Token = "0x600108D")]
		void DisableMenus();

		[Token(Token = "0x600108E")]
		bool OpenMenu(MenuId id);

		[Token(Token = "0x600108F")]
		IMenu GetMenu(MenuId id);

		[Token(Token = "0x6001090")]
		bool CloseMenu(MenuId id);

		[Token(Token = "0x6001091")]
		bool OpenInGameMenu();

		[Token(Token = "0x6001092")]
		bool CloseInGameMenu();

		[Token(Token = "0x6001093")]
		DialogueBoxId AddDialogueBox(DialogueBoxParams boxParams);

		[Token(Token = "0x6001094")]
		bool RemoveDialogueBox(DialogueBoxId id);

		[Token(Token = "0x6001095")]
		void RemoveAllDialogues();

		[Token(Token = "0x6001096")]
		void PrepareForPendingActivityRequest(Action<bool> callback);
	}
	[Token(Token = "0x20002B5")]
	public class DialogueBoxId : IEquatable<DialogueBoxId>
	{
		[Token(Token = "0x4000E43")]
		public const int Invalid = -1;

		[Token(Token = "0x4000E44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int _id;

		[Token(Token = "0x600109A")]
		[Address(RVA = "0x10A10EC", Offset = "0x10A10EC", VA = "0x10A10EC")]
		public DialogueBoxId(int id)
		{
		}

		[Token(Token = "0x600109B")]
		[Address(RVA = "0x10A111C", Offset = "0x10A111C", VA = "0x10A111C", Slot = "4")]
		public bool Equals(DialogueBoxId other)
		{
			return default(bool);
		}

		[Token(Token = "0x600109C")]
		[Address(RVA = "0x10A1140", Offset = "0x10A1140", VA = "0x10A1140")]
		public bool IsValid()
		{
			return default(bool);
		}

		[Token(Token = "0x600109D")]
		[Address(RVA = "0x10A1150", Offset = "0x10A1150", VA = "0x10A1150", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x20002B6")]
	public class DialogueBoxParams
	{
		[Token(Token = "0x20002B7")]
		public enum CancelButton
		{
			[Token(Token = "0x4000E54")]
			None,
			[Token(Token = "0x4000E55")]
			Button1,
			[Token(Token = "0x4000E56")]
			Button2,
			[Token(Token = "0x4000E57")]
			Button3
		}

		[Token(Token = "0x20002B8")]
		public delegate void ButtonEvent();

		[Token(Token = "0x4000E45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string titleText;

		[Token(Token = "0x4000E46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string bodyText;

		[Token(Token = "0x4000E47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float widthScale;

		[Token(Token = "0x4000E48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float heightScale;

		[Token(Token = "0x4000E49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public CancelButton cancelButtonID;

		[Token(Token = "0x4000E4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string button1Text;

		[Token(Token = "0x4000E4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public ButtonEvent onButton1Pressed;

		[Token(Token = "0x4000E4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public bool closeOnButton1;

		[Token(Token = "0x4000E4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public string button2Text;

		[Token(Token = "0x4000E4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public ButtonEvent onButton2Pressed;

		[Token(Token = "0x4000E4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public bool closeOnButton2;

		[Token(Token = "0x4000E50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public string button3Text;

		[Token(Token = "0x4000E51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public ButtonEvent onButton3Pressed;

		[Token(Token = "0x4000E52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public bool closeOnButton3;

		[Token(Token = "0x600109E")]
		[Address(RVA = "0x10A115C", Offset = "0x10A115C", VA = "0x10A115C")]
		public DialogueBoxParams()
		{
		}

		[Token(Token = "0x600109F")]
		[Address(RVA = "0x10A11DC", Offset = "0x10A11DC", VA = "0x10A11DC")]
		public DialogueBoxParams(string title, string body, [Optional] string button1, [Optional] string button2, [Optional] ButtonEvent button1Callback, [Optional] ButtonEvent button2Callback, CancelButton cancelButton = CancelButton.None)
		{
		}

		[Token(Token = "0x60010A0")]
		[Address(RVA = "0x10A1408", Offset = "0x10A1408", VA = "0x10A1408")]
		public DialogueBoxParams(string title, string body, string button1, string button2, string button3, [Optional] ButtonEvent button1Callback, [Optional] ButtonEvent button2Callback, [Optional] ButtonEvent button3Callback, CancelButton cancelButton = CancelButton.None)
		{
		}
	}
	[Token(Token = "0x20002B9")]
	public class DialogueBoxContext
	{
		[Token(Token = "0x4000E58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public DialogueBoxId _id;

		[Token(Token = "0x4000E59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public DialogueBoxParams _params;

		[Token(Token = "0x60010A5")]
		[Address(RVA = "0x10A1740", Offset = "0x10A1740", VA = "0x10A1740")]
		public DialogueBoxContext(DialogueBoxId boxId, DialogueBoxParams boxParams)
		{
		}
	}
	[Token(Token = "0x20002BA")]
	public class MenuManager : MonoBehaviour, IService, IMenuManager
	{
		[Token(Token = "0x4000E5A")]
		public const string MenuSceneName = "SCN_Menu";

		[Token(Token = "0x4000E5B")]
		private const int c_maxDialogueBoxes = 10;

		[Token(Token = "0x4000E5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static int s_NextId;

		[Token(Token = "0x4000E5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Dictionary<MenuId, IMenu> _allMenus;

		[Token(Token = "0x4000E5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Stack<IMenu> _menuStack;

		[Token(Token = "0x4000E5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private List<DialogueBoxContext> _dialogueBoxes;

		[Token(Token = "0x4000E60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private IMenu _inGameMenu;

		[Token(Token = "0x4000E61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private DialogueBox _dialogueBoxMenu;

		[Token(Token = "0x4000E62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Transform _mainCameraTransform;

		[Token(Token = "0x4000E63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private CameraHandler _mainCameraHandler;

		[Token(Token = "0x4000E64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private bool _menusEnabled;

		[Token(Token = "0x17000169")]
		public bool inGameMenuVisible
		{
			[Token(Token = "0x60010A6")]
			[Address(RVA = "0x10A1784", Offset = "0x10A1784", VA = "0x10A1784")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700016A")]
		public bool inGameMenuHasFocus
		{
			[Token(Token = "0x60010A7")]
			[Address(RVA = "0x10A1840", Offset = "0x10A1840", VA = "0x10A1840")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700016B")]
		public Transform mainCameraTransform
		{
			[Token(Token = "0x60010A8")]
			[Address(RVA = "0x10A18F0", Offset = "0x10A18F0", VA = "0x10A18F0", Slot = "22")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700016C")]
		public Vector3 worldSpacePreferredLocation
		{
			[Token(Token = "0x60010A9")]
			[Address(RVA = "0x10A18F8", Offset = "0x10A18F8", VA = "0x10A18F8", Slot = "23")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x1700016D")]
		public IMenu currentTopMenu
		{
			[Token(Token = "0x60010AD")]
			[Address(RVA = "0x10A1C54", Offset = "0x10A1C54", VA = "0x10A1C54", Slot = "24")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60010AA")]
		[Address(RVA = "0x10A1BC8", Offset = "0x10A1BC8", VA = "0x10A1BC8", Slot = "8")]
		public bool IsReady()
		{
			return default(bool);
		}

		[Token(Token = "0x60010AB")]
		[Address(RVA = "0x10A1C40", Offset = "0x10A1C40", VA = "0x10A1C40", Slot = "11")]
		public void EnableMenus()
		{
		}

		[Token(Token = "0x60010AC")]
		[Address(RVA = "0x10A1C4C", Offset = "0x10A1C4C", VA = "0x10A1C4C", Slot = "12")]
		public void DisableMenus()
		{
		}

		[Token(Token = "0x60010AE")]
		[Address(RVA = "0x10A1CF8", Offset = "0x10A1CF8", VA = "0x10A1CF8", Slot = "4")]
		public void OnStartUp()
		{
		}

		[Token(Token = "0x60010AF")]
		[Address(RVA = "0x10A1CFC", Offset = "0x10A1CFC", VA = "0x10A1CFC", Slot = "5")]
		public void OnCleanUp()
		{
		}

		[Token(Token = "0x60010B0")]
		[Address(RVA = "0x10A1D00", Offset = "0x10A1D00", VA = "0x10A1D00", Slot = "6")]
		public void OnUpdate(float deltaTime)
		{
		}

		[Token(Token = "0x60010B1")]
		[Address(RVA = "0x10A231C", Offset = "0x10A231C", VA = "0x10A231C", Slot = "7")]
		public void Initialise(PlatformEventService platformEventService)
		{
		}

		[Token(Token = "0x60010B2")]
		[Address(RVA = "0x10A2400", Offset = "0x10A2400", VA = "0x10A2400", Slot = "9")]
		public void ResetForScene(Camera mainCamera)
		{
		}

		[Token(Token = "0x60010B3")]
		[Address(RVA = "0x10A24E4", Offset = "0x10A24E4", VA = "0x10A24E4", Slot = "10")]
		public void RegisterMenu(IMenu menu, MenuId id)
		{
		}

		[Token(Token = "0x60010B4")]
		[Address(RVA = "0x10A260C", Offset = "0x10A260C", VA = "0x10A260C", Slot = "14")]
		public IMenu GetMenu(MenuId id)
		{
			return null;
		}

		[Token(Token = "0x60010B5")]
		[Address(RVA = "0x10A2680", Offset = "0x10A2680", VA = "0x10A2680", Slot = "13")]
		public bool OpenMenu(MenuId id)
		{
			return default(bool);
		}

		[Token(Token = "0x60010B6")]
		[Address(RVA = "0x10A2EF4", Offset = "0x10A2EF4", VA = "0x10A2EF4", Slot = "15")]
		public bool CloseMenu(MenuId id)
		{
			return default(bool);
		}

		[Token(Token = "0x60010B7")]
		[Address(RVA = "0x10A1E80", Offset = "0x10A1E80", VA = "0x10A1E80", Slot = "16")]
		public bool OpenInGameMenu()
		{
			return default(bool);
		}

		[Token(Token = "0x60010B8")]
		[Address(RVA = "0x10A38BC", Offset = "0x10A38BC", VA = "0x10A38BC", Slot = "17")]
		public bool CloseInGameMenu()
		{
			return default(bool);
		}

		[Token(Token = "0x60010B9")]
		[Address(RVA = "0x10A3950", Offset = "0x10A3950", VA = "0x10A3950", Slot = "18")]
		public DialogueBoxId AddDialogueBox(DialogueBoxParams boxParams)
		{
			return null;
		}

		[Token(Token = "0x60010BA")]
		[Address(RVA = "0x10A3B08", Offset = "0x10A3B08", VA = "0x10A3B08", Slot = "19")]
		public bool RemoveDialogueBox(DialogueBoxId boxId)
		{
			return default(bool);
		}

		[Token(Token = "0x60010BB")]
		[Address(RVA = "0x10A3EF8", Offset = "0x10A3EF8", VA = "0x10A3EF8", Slot = "20")]
		public void RemoveAllDialogues()
		{
		}

		[Token(Token = "0x60010BC")]
		[Address(RVA = "0x10A3F88", Offset = "0x10A3F88", VA = "0x10A3F88", Slot = "21")]
		public void PrepareForPendingActivityRequest(Action<bool> callback)
		{
		}

		[Token(Token = "0x60010BD")]
		[Address(RVA = "0x10A2610", Offset = "0x10A2610", VA = "0x10A2610")]
		private IMenu GetMenuFromId(MenuId id)
		{
			return null;
		}

		[Token(Token = "0x60010BE")]
		[Address(RVA = "0x10A1FC4", Offset = "0x10A1FC4", VA = "0x10A1FC4")]
		private void HandleUserInput()
		{
		}

		[Token(Token = "0x60010BF")]
		[Address(RVA = "0x10A4070", Offset = "0x10A4070", VA = "0x10A4070")]
		private bool ProcessInGameMenuInputAction()
		{
			return default(bool);
		}

		[Token(Token = "0x60010C0")]
		[Address(RVA = "0x10A4114", Offset = "0x10A4114", VA = "0x10A4114")]
		private bool ProcessBackOrCancelInputAction()
		{
			return default(bool);
		}

		[Token(Token = "0x60010C1")]
		[Address(RVA = "0x10A20D0", Offset = "0x10A20D0", VA = "0x10A20D0")]
		private bool ShowDialogueBox(DialogueBoxContext dialogueContext)
		{
			return default(bool);
		}

		[Token(Token = "0x60010C2")]
		[Address(RVA = "0x10A3C6C", Offset = "0x10A3C6C", VA = "0x10A3C6C")]
		private void HideDialogueBox(DialogueBoxContext dialogueContext)
		{
		}

		[Token(Token = "0x60010C3")]
		[Address(RVA = "0x10A18FC", Offset = "0x10A18FC", VA = "0x10A18FC")]
		private Vector3 GetPreferredWorldSpaceMenuLocation()
		{
			return default(Vector3);
		}

		[Token(Token = "0x60010C4")]
		[Address(RVA = "0x10A1C58", Offset = "0x10A1C58", VA = "0x10A1C58")]
		private IMenu GetCurrentTopMenu()
		{
			return null;
		}

		[Token(Token = "0x60010C5")]
		[Address(RVA = "0x10A2C28", Offset = "0x10A2C28", VA = "0x10A2C28")]
		private void LogMenuStack()
		{
		}

		[Token(Token = "0x60010C6")]
		[Address(RVA = "0x10A4268", Offset = "0x10A4268", VA = "0x10A4268")]
		private void PlatformEvent_OnResuming(double secondsSuspended)
		{
		}

		[Token(Token = "0x60010C7")]
		[Address(RVA = "0x10A426C", Offset = "0x10A426C", VA = "0x10A426C")]
		private void PlatformEvent_OnConstrainChange(bool isConstraining)
		{
		}

		[Token(Token = "0x60010C8")]
		[Address(RVA = "0x10A4270", Offset = "0x10A4270", VA = "0x10A4270")]
		public MenuManager()
		{
		}
	}
	[Token(Token = "0x20002BC")]
	public class MenuSystemConfig : MonoBehaviour, IInitialisable, IUpdatable
	{
		[Token(Token = "0x4000E66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private MenuId _AutoShowInitialMenu;

		[Token(Token = "0x4000E67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private bool _showInitialMenu;

		[Token(Token = "0x60010CB")]
		[Address(RVA = "0x10A43BC", Offset = "0x10A43BC", VA = "0x10A43BC", Slot = "4")]
		public bool Initialise()
		{
			return default(bool);
		}

		[Token(Token = "0x60010CC")]
		[Address(RVA = "0x10A43D8", Offset = "0x10A43D8", VA = "0x10A43D8", Slot = "5")]
		public void OnUpdate(float dt)
		{
		}

		[Token(Token = "0x60010CD")]
		[Address(RVA = "0x10A449C", Offset = "0x10A449C", VA = "0x10A449C")]
		public MenuSystemConfig()
		{
		}
	}
	[Token(Token = "0x20002BD")]
	public class MenuTabs : MonoBehaviour
	{
		[Token(Token = "0x4000E68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private MenuButton[] _MenuTabButtons;

		[Token(Token = "0x60010CE")]
		[Address(RVA = "0x10A44A4", Offset = "0x10A44A4", VA = "0x10A44A4")]
		private void Awake()
		{
		}

		[Token(Token = "0x60010CF")]
		[Address(RVA = "0x10A44FC", Offset = "0x10A44FC", VA = "0x10A44FC")]
		public void SelectTab(MenuId subMenuId)
		{
		}

		[Token(Token = "0x60010D0")]
		[Address(RVA = "0x10A4560", Offset = "0x10A4560", VA = "0x10A4560")]
		public MenuId GetPreviousTabId(MenuId current)
		{
			return default(MenuId);
		}

		[Token(Token = "0x60010D1")]
		[Address(RVA = "0x10A45FC", Offset = "0x10A45FC", VA = "0x10A45FC")]
		public MenuId GetNextTabId(MenuId current)
		{
			return default(MenuId);
		}

		[Token(Token = "0x60010D2")]
		[Address(RVA = "0x10A4690", Offset = "0x10A4690", VA = "0x10A4690")]
		public MenuTabs()
		{
		}
	}
	[Token(Token = "0x20002BE")]
	public class PerformanceSettingsMenu : SettingsSubmenuBase
	{
		[Token(Token = "0x60010D3")]
		[Address(RVA = "0x10A4698", Offset = "0x10A4698", VA = "0x10A4698")]
		public PerformanceSettingsMenu()
		{
		}
	}
	[Token(Token = "0x20002BF")]
	public class SaveGameMenu : LoadSaveGameMenuBase
	{
		[Token(Token = "0x4000E69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private DialogueBoxId _saveDialogId;

		[Token(Token = "0x60010D4")]
		[Address(RVA = "0x10A472C", Offset = "0x10A472C", VA = "0x10A472C", Slot = "36")]
		public override void OnSaveSlotSelected(int slot)
		{
		}

		[Token(Token = "0x60010D5")]
		[Address(RVA = "0x10A4B50", Offset = "0x10A4B50", VA = "0x10A4B50")]
		private void OnOverwriteOK()
		{
		}

		[Token(Token = "0x60010D6")]
		[Address(RVA = "0x10A4B68", Offset = "0x10A4B68", VA = "0x10A4B68")]
		private void OnDialogDismissed()
		{
		}

		[Token(Token = "0x60010D7")]
		[Address(RVA = "0x10A4A1C", Offset = "0x10A4A1C", VA = "0x10A4A1C")]
		private void StartSave()
		{
		}

		[Token(Token = "0x60010D8")]
		[Address(RVA = "0x10A4C1C", Offset = "0x10A4C1C", VA = "0x10A4C1C")]
		public SaveGameMenu()
		{
		}
	}
	[Token(Token = "0x20002C0")]
	public class SaveGameSlot : MonoBehaviour
	{
		[Token(Token = "0x4000E6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private TextMeshProUGUI _Title;

		[Token(Token = "0x4000E6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private TextMeshProUGUI _Time;

		[Token(Token = "0x4000E6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private TextMeshProUGUI _Date;

		[Token(Token = "0x4000E6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private TextMeshProUGUI _SlotName;

		[Token(Token = "0x4000E6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private RawImage _Screenshot;

		[Token(Token = "0x4000E6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private SaveGameService.Slot slot;

		[Token(Token = "0x4000E70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private LoadSaveGameMenuBase menuParent;

		[Token(Token = "0x1700016E")]
		public int Slot
		{
			[Token(Token = "0x60010D9")]
			[Address(RVA = "0x10A4C24", Offset = "0x10A4C24", VA = "0x10A4C24")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x60010DA")]
		[Address(RVA = "0x10A4C2C", Offset = "0x10A4C2C", VA = "0x10A4C2C")]
		public void Init(MetadataSerialisation.Metadata slotData)
		{
		}

		[Token(Token = "0x60010DB")]
		[Address(RVA = "0x10A4ED0", Offset = "0x10A4ED0", VA = "0x10A4ED0")]
		public void OnSlotSelected()
		{
		}

		[Token(Token = "0x60010DC")]
		[Address(RVA = "0x10A4EFC", Offset = "0x10A4EFC", VA = "0x10A4EFC")]
		public SaveGameSlot()
		{
		}
	}
	[Token(Token = "0x20002C1")]
	public struct SettingsSharedData
	{
		[Token(Token = "0x4000E71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static string PressedAnimState;

		[Token(Token = "0x4000E72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static string UnpressedAnimState;
	}
	[Token(Token = "0x20002C2")]
	public class SettingsParentMenu : Menu
	{
		[Token(Token = "0x4000E73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private MenuId _activeSubmenu;

		[Token(Token = "0x4000E74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		[SerializeField]
		private MenuId _initalMenuToShow;

		[Token(Token = "0x4000E75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private MenuTabs _menuTabs;

		[Token(Token = "0x4000E76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private bool _hasSetInitalMenu;

		[Token(Token = "0x60010DE")]
		[Address(RVA = "0x10A4FA0", Offset = "0x10A4FA0", VA = "0x10A4FA0", Slot = "32")]
		public override void GetReplacementBehaviour(MenuId successor, out bool loseFocus, out bool hideSelf)
		{
		}

		[Token(Token = "0x60010DF")]
		[Address(RVA = "0x10A4FEC", Offset = "0x10A4FEC", VA = "0x10A4FEC", Slot = "34")]
		protected override void OnShown()
		{
		}

		[Token(Token = "0x60010E0")]
		[Address(RVA = "0x10A4FFC", Offset = "0x10A4FFC", VA = "0x10A4FFC", Slot = "7")]
		public override void OnUpdate(float dt)
		{
		}

		[Token(Token = "0x60010E1")]
		[Address(RVA = "0x10A5050", Offset = "0x10A5050", VA = "0x10A5050", Slot = "33")]
		public override bool RequestMenu(MenuId subMenuId)
		{
			return default(bool);
		}

		[Token(Token = "0x60010E2")]
		[Address(RVA = "0x10A527C", Offset = "0x10A527C", VA = "0x10A527C")]
		public void CloseSettings()
		{
		}

		[Token(Token = "0x60010E3")]
		[Address(RVA = "0x10A5414", Offset = "0x10A5414", VA = "0x10A5414")]
		public void OnRestoreDefaultSettings()
		{
		}

		[Token(Token = "0x60010E4")]
		[Address(RVA = "0x10A55F4", Offset = "0x10A55F4", VA = "0x10A55F4")]
		public void OnRestoreDefaults()
		{
		}

		[Token(Token = "0x60010E5")]
		[Address(RVA = "0x10A57FC", Offset = "0x10A57FC", VA = "0x10A57FC")]
		public void RequestClose(ISubmenu subMenu)
		{
		}

		[Token(Token = "0x60010E6")]
		[Address(RVA = "0x10A58D0", Offset = "0x10A58D0", VA = "0x10A58D0")]
		public void RequestPreviousSettingsTab(IMenu subMenu)
		{
		}

		[Token(Token = "0x60010E7")]
		[Address(RVA = "0x10A5A38", Offset = "0x10A5A38", VA = "0x10A5A38")]
		public void RequestNextSettingsTab(IMenu subMenu)
		{
		}

		[Token(Token = "0x60010E8")]
		[Address(RVA = "0x10A56C0", Offset = "0x10A56C0", VA = "0x10A56C0")]
		private void SetSubMenuComponentsFromSettingsData()
		{
		}

		[Token(Token = "0x60010E9")]
		[Address(RVA = "0x10A4FDC", Offset = "0x10A4FDC", VA = "0x10A4FDC")]
		private bool IsSettingsSubmenu(MenuId id)
		{
			return default(bool);
		}

		[Token(Token = "0x60010EA")]
		[Address(RVA = "0x10A5BA0", Offset = "0x10A5BA0", VA = "0x10A5BA0")]
		public SettingsParentMenu()
		{
		}
	}
	[Token(Token = "0x20002C4")]
	public interface ISubmenu
	{
		[Token(Token = "0x60010EE")]
		void TryClose(Action<bool> callback);

		[Token(Token = "0x60010EF")]
		void SetComponentStatesFromSettingsData();
	}
	[Token(Token = "0x20002C5")]
	public class SettingsSubmenuBase : Menu, ISubmenu
	{
		[Token(Token = "0x4000E79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private float _autoScrollSpacingAdjustment;

		[Token(Token = "0x4000E7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		protected bool _needsSaving;

		[Token(Token = "0x4000E7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		protected SettingsParentMenu _parent;

		[Token(Token = "0x4000E7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private RectTransform _scrollRectViewport;

		[Token(Token = "0x4000E7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private RectTransform _scrollRectContent;

		[Token(Token = "0x4000E7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private List<Transform> _subMenuContentTransforms;

		[Token(Token = "0x4000E7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private GameObject _currentSelectedGameObject;

		[Token(Token = "0x1700016F")]
		public bool needsSaving
		{
			[Token(Token = "0x60010F0")]
			[Address(RVA = "0x10A5CA4", Offset = "0x10A5CA4", VA = "0x10A5CA4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60010F1")]
		[Address(RVA = "0x10A5CAC", Offset = "0x10A5CAC", VA = "0x10A5CAC", Slot = "6")]
		public override bool Initialise()
		{
			return default(bool);
		}

		[Token(Token = "0x60010F2")]
		[Address(RVA = "0x10A5DF4", Offset = "0x10A5DF4", VA = "0x10A5DF4", Slot = "7")]
		public override void OnUpdate(float dt)
		{
		}

		[Token(Token = "0x60010F3")]
		[Address(RVA = "0x10A61AC", Offset = "0x10A61AC", VA = "0x10A61AC", Slot = "29")]
		public override void OnCancel()
		{
		}

		[Token(Token = "0x60010F4")]
		[Address(RVA = "0x10A6230", Offset = "0x10A6230", VA = "0x10A6230", Slot = "31")]
		public override void FocusLost(MenuId newFocus)
		{
		}

		[Token(Token = "0x60010F5")]
		[Address(RVA = "0x10A62D0", Offset = "0x10A62D0", VA = "0x10A62D0", Slot = "30")]
		public override void FocusReceived()
		{
		}

		[Token(Token = "0x60010F6")]
		[Address(RVA = "0x10A6300", Offset = "0x10A6300", VA = "0x10A6300", Slot = "38")]
		public virtual void SetComponentStatesFromSettingsData()
		{
		}

		[Token(Token = "0x60010F7")]
		[Address(RVA = "0x10A6304", Offset = "0x10A6304", VA = "0x10A6304", Slot = "39")]
		public virtual void TryClose(Action<bool> callback)
		{
		}

		[Token(Token = "0x60010F8")]
		[Address(RVA = "0x10A469C", Offset = "0x10A469C", VA = "0x10A469C")]
		public SettingsSubmenuBase()
		{
		}
	}
	[Token(Token = "0x20002C7")]
	public class SoundSettingsMenu : SettingsSubmenuBase
	{
		[Token(Token = "0x4000E82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		private Slider _masterVolumeSlider;

		[Token(Token = "0x4000E83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		private Slider _musicVolumeSlider;

		[Token(Token = "0x4000E84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[SerializeField]
		private Slider _voiceVolumeSlider;

		[Token(Token = "0x4000E85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[SerializeField]
		private Slider _sfxVolumeSlider;

		[Token(Token = "0x60010FD")]
		[Address(RVA = "0x10A6768", Offset = "0x10A6768", VA = "0x10A6768", Slot = "6")]
		public override bool Initialise()
		{
			return default(bool);
		}

		[Token(Token = "0x60010FE")]
		[Address(RVA = "0x10A6788", Offset = "0x10A6788", VA = "0x10A6788")]
		private void InitialiseSliders()
		{
		}

		[Token(Token = "0x60010FF")]
		[Address(RVA = "0x10A6A04", Offset = "0x10A6A04", VA = "0x10A6A04")]
		private void OnMasterVolumeSliderValueChanged(float value)
		{
		}

		[Token(Token = "0x6001100")]
		[Address(RVA = "0x10A6A4C", Offset = "0x10A6A4C", VA = "0x10A6A4C")]
		private void OnMusicVolumeSliderValueChanged(float value)
		{
		}

		[Token(Token = "0x6001101")]
		[Address(RVA = "0x10A6A94", Offset = "0x10A6A94", VA = "0x10A6A94")]
		private void OnVoiceVolumeSliderValueChanged(float value)
		{
		}

		[Token(Token = "0x6001102")]
		[Address(RVA = "0x10A6ADC", Offset = "0x10A6ADC", VA = "0x10A6ADC")]
		private void OnSfxVolumeSliderValueChanged(float value)
		{
		}

		[Token(Token = "0x6001103")]
		[Address(RVA = "0x10A6B24", Offset = "0x10A6B24", VA = "0x10A6B24", Slot = "8")]
		protected override void OnEnable()
		{
		}

		[Token(Token = "0x6001104")]
		[Address(RVA = "0x10A6B4C", Offset = "0x10A6B4C", VA = "0x10A6B4C", Slot = "38")]
		public override void SetComponentStatesFromSettingsData()
		{
		}

		[Token(Token = "0x6001105")]
		[Address(RVA = "0x10A6D18", Offset = "0x10A6D18", VA = "0x10A6D18", Slot = "10")]
		protected override void OnDestroy()
		{
		}

		[Token(Token = "0x6001106")]
		[Address(RVA = "0x10A6FA0", Offset = "0x10A6FA0", VA = "0x10A6FA0")]
		public SoundSettingsMenu()
		{
		}
	}
	[Token(Token = "0x20002C8")]
	public class T17Dropdown : TMP_Dropdown
	{
		[Token(Token = "0x4000E86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		[SerializeField]
		private EventReference _highlightedAudio;

		[Token(Token = "0x4000E87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
		[SerializeField]
		private EventReference _pressedAudio;

		[Token(Token = "0x4000E88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
		[SerializeField]
		private EventReference _openedAudio;

		[Token(Token = "0x6001107")]
		[Address(RVA = "0x10A6FA4", Offset = "0x10A6FA4", VA = "0x10A6FA4", Slot = "26")]
		protected override void DoStateTransition(SelectionState state, bool instant)
		{
		}

		[Token(Token = "0x6001108")]
		[Address(RVA = "0x10A70D8", Offset = "0x10A70D8", VA = "0x10A70D8")]
		private void OnDropdownMenuOpened()
		{
		}

		[Token(Token = "0x6001109")]
		[Address(RVA = "0x10A7018", Offset = "0x10A7018", VA = "0x10A7018")]
		public void OnDropdownItemHighlighted()
		{
		}

		[Token(Token = "0x600110A")]
		[Address(RVA = "0x10A0D98", Offset = "0x10A0D98", VA = "0x10A0D98")]
		public void OnDropdownItemSelected()
		{
		}

		[Token(Token = "0x600110B")]
		[Address(RVA = "0x10A7198", Offset = "0x10A7198", VA = "0x10A7198")]
		public T17Dropdown()
		{
		}
	}
	[Token(Token = "0x20002C9")]
	public class ToggleButton : MonoBehaviour
	{
		[Token(Token = "0x4000E89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private List<string> _values;

		[Token(Token = "0x4000E8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private TextMeshProUGUI _label;

		[Token(Token = "0x4000E8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private UnityEvent<int> _onToggleEvent;

		[Token(Token = "0x4000E8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private uint _currentIndex;

		[Token(Token = "0x17000170")]
		public ReadOnlyCollection<string> values
		{
			[Token(Token = "0x600110C")]
			[Address(RVA = "0x10A71F0", Offset = "0x10A71F0", VA = "0x10A71F0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000171")]
		public UnityEvent<int> onToggle
		{
			[Token(Token = "0x600110D")]
			[Address(RVA = "0x10A7240", Offset = "0x10A7240", VA = "0x10A7240")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000172")]
		public uint currentIndex
		{
			[Token(Token = "0x600110E")]
			[Address(RVA = "0x10A7248", Offset = "0x10A7248", VA = "0x10A7248")]
			get
			{
				return default(uint);
			}
			[Token(Token = "0x600110F")]
			[Address(RVA = "0x10A7250", Offset = "0x10A7250", VA = "0x10A7250")]
			set
			{
			}
		}

		[Token(Token = "0x6001110")]
		[Address(RVA = "0x10A72B0", Offset = "0x10A72B0", VA = "0x10A72B0")]
		private void Start()
		{
		}

		[Token(Token = "0x6001111")]
		[Address(RVA = "0x10A742C", Offset = "0x10A742C", VA = "0x10A742C")]
		public void Toggle()
		{
		}

		[Token(Token = "0x6001112")]
		[Address(RVA = "0x10A7358", Offset = "0x10A7358", VA = "0x10A7358")]
		private void RefreshLabel()
		{
		}

		[Token(Token = "0x6001113")]
		[Address(RVA = "0x10A74C8", Offset = "0x10A74C8", VA = "0x10A74C8")]
		public ToggleButton()
		{
		}
	}
}
namespace UI.Inventory
{
	[Token(Token = "0x20002CA")]
	public class InventoryUIManager : MonoBehaviour
	{
		[Token(Token = "0x4000E8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Color _disabledColor;

		[Token(Token = "0x4000E8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Color _selectedColor;

		[Token(Token = "0x4000E8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public UIInventorySlot[] _slots;

		[Token(Token = "0x4000E90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private int _selectedSlot;

		[Token(Token = "0x4000E91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private bool _disabled;

		[Token(Token = "0x6001114")]
		[Address(RVA = "0x10A7550", Offset = "0x10A7550", VA = "0x10A7550")]
		public void SetDisabled(bool disabled)
		{
		}

		[Token(Token = "0x6001115")]
		[Address(RVA = "0x10A75C0", Offset = "0x10A75C0", VA = "0x10A75C0")]
		public void SelectSlot(int slotId)
		{
		}

		[Token(Token = "0x6001116")]
		[Address(RVA = "0x10A78F4", Offset = "0x10A78F4", VA = "0x10A78F4")]
		public InventoryUIManager()
		{
		}
	}
	[Token(Token = "0x20002CB")]
	public class UIInventorySlot : MonoBehaviour
	{
		[Token(Token = "0x4000E92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public TextMeshProUGUI _slotNumber;

		[Token(Token = "0x4000E93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TextMeshProUGUI _content;

		[Token(Token = "0x4000E94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Image _frame;

		[Token(Token = "0x4000E95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public RectTransform _contentOutTransform;

		[Token(Token = "0x4000E96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool _disabled;

		[Token(Token = "0x4000E97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
		private bool _selected;

		[Token(Token = "0x4000E98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private int _selectLeanTweenId;

		[Token(Token = "0x4000E99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private RectTransform _contentRectTransform;

		[Token(Token = "0x4000E9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float _initialAnchorMinY;

		[Token(Token = "0x4000E9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private float _initialAnchorMaxY;

		[Token(Token = "0x4000E9C")]
		private const float _selectAnimDuration = 0.15f;

		[Token(Token = "0x6001117")]
		[Address(RVA = "0x10A78FC", Offset = "0x10A78FC", VA = "0x10A78FC")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001118")]
		[Address(RVA = "0x10A798C", Offset = "0x10A798C", VA = "0x10A798C")]
		private void UpdateUI()
		{
		}

		[Token(Token = "0x6001119")]
		[Address(RVA = "0x10A75B4", Offset = "0x10A75B4", VA = "0x10A75B4")]
		public void SetDisabled(bool disabled)
		{
		}

		[Token(Token = "0x600111A")]
		[Address(RVA = "0x10A779C", Offset = "0x10A779C", VA = "0x10A779C")]
		public void Select()
		{
		}

		[Token(Token = "0x600111B")]
		[Address(RVA = "0x10A7648", Offset = "0x10A7648", VA = "0x10A7648")]
		public void Deselect()
		{
		}

		[Token(Token = "0x600111C")]
		[Address(RVA = "0x10A7990", Offset = "0x10A7990", VA = "0x10A7990")]
		public void UpdateContent(string content)
		{
		}

		[Token(Token = "0x600111D")]
		[Address(RVA = "0x10A79B4", Offset = "0x10A79B4", VA = "0x10A79B4")]
		public UIInventorySlot()
		{
		}
	}
}
namespace UI.Interactable
{
	[Token(Token = "0x20002CC")]
	public enum InputType : byte
	{
		[Token(Token = "0x4000E9E")]
		Click,
		[Token(Token = "0x4000E9F")]
		Hold
	}
	[Token(Token = "0x20002CD")]
	public enum UIActions
	{
		[Token(Token = "0x4000EA1")]
		CANCEL,
		[Token(Token = "0x4000EA2")]
		CENTRAL,
		[Token(Token = "0x4000EA3")]
		CUSTOM_GENERIC,
		[Token(Token = "0x4000EA4")]
		CUSTOM_ITEM,
		[Token(Token = "0x4000EA5")]
		INSPECT,
		[Token(Token = "0x4000EA6")]
		INVENTORY,
		[Token(Token = "0x4000EA7")]
		LOWER_LEFT,
		[Token(Token = "0x4000EA8")]
		LOWER_MAIN,
		[Token(Token = "0x4000EA9")]
		UPPER_LEFT,
		[Token(Token = "0x4000EAA")]
		UPPER_MAIN,
		[Token(Token = "0x4000EAB")]
		COUNT
	}
	[Token(Token = "0x20002CE")]
	public enum UIItemTitles
	{
		[Token(Token = "0x4000EAD")]
		LEFT,
		[Token(Token = "0x4000EAE")]
		RIGHT,
		[Token(Token = "0x4000EAF")]
		CENTRAL,
		[Token(Token = "0x4000EB0")]
		COUNT
	}
	[Token(Token = "0x20002CF")]
	public struct UIAction
	{
		[Token(Token = "0x4000EB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ActionStringHandle stringHandle;

		[Token(Token = "0x4000EB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public ActionInputCategory inputCategory;

		[Token(Token = "0x4000EB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5")]
		public InputType inputType;

		[Token(Token = "0x4000EB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6")]
		public bool greyedOut;

		[Token(Token = "0x4000EB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7")]
		public bool valid;

		[Token(Token = "0x6001120")]
		[Address(RVA = "0x10A7BD4", Offset = "0x10A7BD4", VA = "0x10A7BD4")]
		public bool Equals(UIAction obj)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20002D0")]
	public struct UIItemTitle
	{
		[Token(Token = "0x4000EB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ObjectStringHandle stringHandle;

		[Token(Token = "0x4000EB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public bool valid;

		[Token(Token = "0x6001121")]
		[Address(RVA = "0x10A7C2C", Offset = "0x10A7C2C", VA = "0x10A7C2C")]
		public bool Equals(UIItemTitle obj)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20002D1")]
	public struct UIData
	{
		[Token(Token = "0x4000EB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public UIAction[] actions;

		[Token(Token = "0x4000EB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public UIItemTitle[] itemTitles;
	}
	[Token(Token = "0x20002D2")]
	public class InteractableUIManager : MonoBehaviour
	{
		[Token(Token = "0x4000EBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private LeftPanel _leftPanel;

		[Token(Token = "0x4000EBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private MiddlePanel _middlePanel;

		[Token(Token = "0x4000EBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private RightPanel _rightPanel;

		[Token(Token = "0x4000EBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private CanvasGroup _canvasGroup;

		[Token(Token = "0x17000173")]
		public bool Hidden
		{
			[Token(Token = "0x6001122")]
			[Address(RVA = "0x10A7C54", Offset = "0x10A7C54", VA = "0x10A7C54")]
			[CompilerGenerated]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001123")]
			[Address(RVA = "0x10A7C5C", Offset = "0x10A7C5C", VA = "0x10A7C5C")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x6001124")]
		[Address(RVA = "0x10A7C68", Offset = "0x10A7C68", VA = "0x10A7C68")]
		public void ToggleUI(bool newValue)
		{
		}

		[Token(Token = "0x6001125")]
		[Address(RVA = "0x10A7CA4", Offset = "0x10A7CA4", VA = "0x10A7CA4")]
		public void SetUIData(in UIData data)
		{
		}

		[Token(Token = "0x6001126")]
		[Address(RVA = "0x10A8150", Offset = "0x10A8150", VA = "0x10A8150")]
		private void OnPauseChange(bool newPauseState)
		{
		}

		[Token(Token = "0x6001127")]
		[Address(RVA = "0x10A81D0", Offset = "0x10A81D0", VA = "0x10A81D0")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001128")]
		[Address(RVA = "0x10A81D4", Offset = "0x10A81D4", VA = "0x10A81D4")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001129")]
		[Address(RVA = "0x10A81D8", Offset = "0x10A81D8", VA = "0x10A81D8")]
		public InteractableUIManager()
		{
		}
	}
	[Token(Token = "0x20002D3")]
	public class LeftPanel : MonoBehaviour
	{
		[Token(Token = "0x4000EBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private float _slotHeight;

		[Token(Token = "0x4000EC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private float _initialOffset;

		[Token(Token = "0x4000EC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public UIItemTitleElement _leftItemTitle;

		[Token(Token = "0x4000EC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public UIActionElement _upperLeftAction;

		[Token(Token = "0x4000EC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public UIActionElement _lowerLeftAction;

		[Token(Token = "0x600112A")]
		[Address(RVA = "0x10A8014", Offset = "0x10A8014", VA = "0x10A8014")]
		public void Refresh()
		{
		}

		[Token(Token = "0x600112B")]
		[Address(RVA = "0x10A81E0", Offset = "0x10A81E0", VA = "0x10A81E0")]
		private void RefreshSlot(UIElement element, ref float offset)
		{
		}

		[Token(Token = "0x600112C")]
		[Address(RVA = "0x10A82B0", Offset = "0x10A82B0", VA = "0x10A82B0")]
		public LeftPanel()
		{
		}
	}
	[Token(Token = "0x20002D4")]
	public class MiddlePanel : MonoBehaviour
	{
		[Token(Token = "0x4000EC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public UIItemTitleElement _centralItemTitle;

		[Token(Token = "0x4000EC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public UIActionElement _centralAction;

		[Token(Token = "0x600112D")]
		[Address(RVA = "0x10A8060", Offset = "0x10A8060", VA = "0x10A8060")]
		public void Refresh()
		{
		}

		[Token(Token = "0x600112E")]
		[Address(RVA = "0x10A82B8", Offset = "0x10A82B8", VA = "0x10A82B8")]
		public MiddlePanel()
		{
		}
	}
	[Token(Token = "0x20002D5")]
	public class RightPanel : MonoBehaviour
	{
		[Token(Token = "0x4000EC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private float _slotHeight;

		[Token(Token = "0x4000EC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private float _initialOffset;

		[Token(Token = "0x4000EC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float _gapHeight;

		[Token(Token = "0x4000EC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public UIItemTitleElement _rightItemTitle;

		[Token(Token = "0x4000ECA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public UIActionElement _upperMainAction;

		[Token(Token = "0x4000ECB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public UIActionElement _lowerMainAction;

		[Token(Token = "0x4000ECC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public UIActionElement _customItemAction;

		[Token(Token = "0x4000ECD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public UIActionElement _inspectAction;

		[Token(Token = "0x4000ECE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public UIActionElement _inventoryAction;

		[Token(Token = "0x4000ECF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public UIActionElement _customGenericAction;

		[Token(Token = "0x4000ED0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public UIActionElement _cancelAction;

		[Token(Token = "0x600112F")]
		[Address(RVA = "0x10A8098", Offset = "0x10A8098", VA = "0x10A8098")]
		public void Refresh()
		{
		}

		[Token(Token = "0x6001130")]
		[Address(RVA = "0x10A82C0", Offset = "0x10A82C0", VA = "0x10A82C0")]
		private void RefreshSlot(UIElement element, ref float offset)
		{
		}

		[Token(Token = "0x6001131")]
		[Address(RVA = "0x10A8390", Offset = "0x10A8390", VA = "0x10A8390")]
		public RightPanel()
		{
		}
	}
	[Token(Token = "0x20002D6")]
	public class UIActionElement : UIElement
	{
		[Token(Token = "0x4000ED1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private bool _iconLeft;

		[Token(Token = "0x4000ED2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private UIAction _action;

		[Token(Token = "0x17000174")]
		public UIAction Action
		{
			[Token(Token = "0x6001133")]
			[Address(RVA = "0x10A8398", Offset = "0x10A8398", VA = "0x10A8398")]
			get
			{
				return default(UIAction);
			}
			[Token(Token = "0x6001132")]
			[Address(RVA = "0x10A7FB4", Offset = "0x10A7FB4", VA = "0x10A7FB4")]
			set
			{
			}
		}

		[Token(Token = "0x6001134")]
		[Address(RVA = "0x10A83A0", Offset = "0x10A83A0", VA = "0x10A83A0", Slot = "4")]
		public override bool IsEmpty()
		{
			return default(bool);
		}

		[Token(Token = "0x6001135")]
		[Address(RVA = "0x10A83B0", Offset = "0x10A83B0", VA = "0x10A83B0", Slot = "5")]
		public override void RefreshText()
		{
		}

		[Token(Token = "0x6001136")]
		[Address(RVA = "0x10A8530", Offset = "0x10A8530", VA = "0x10A8530")]
		public UIActionElement()
		{
		}
	}
	[Token(Token = "0x20002D7")]
	public abstract class UIElement : MonoBehaviour
	{
		[Token(Token = "0x4000ED3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		protected TextMeshProUGUI _text;

		[Token(Token = "0x4000ED4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		protected bool _dirty;

		[Token(Token = "0x4000ED5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[HideInInspector]
		public RectTransform _rectTransform;

		[Token(Token = "0x6001137")]
		[Address(RVA = "0x10A8550", Offset = "0x10A8550", VA = "0x10A8550")]
		protected void Awake()
		{
		}

		[Token(Token = "0x6001138")]
		public abstract bool IsEmpty();

		[Token(Token = "0x6001139")]
		public abstract void RefreshText();

		[Token(Token = "0x600113A")]
		[Address(RVA = "0x10A8540", Offset = "0x10A8540", VA = "0x10A8540")]
		protected UIElement()
		{
		}
	}
	[Token(Token = "0x20002D8")]
	public class UIItemTitleElement : UIElement
	{
		[Token(Token = "0x4000ED6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private UIItemTitle _itemTitle;

		[Token(Token = "0x17000175")]
		public UIItemTitle ItemTitle
		{
			[Token(Token = "0x600113C")]
			[Address(RVA = "0x10A85E4", Offset = "0x10A85E4", VA = "0x10A85E4")]
			get
			{
				return default(UIItemTitle);
			}
			[Token(Token = "0x600113B")]
			[Address(RVA = "0x10A7F88", Offset = "0x10A7F88", VA = "0x10A7F88")]
			set
			{
			}
		}

		[Token(Token = "0x600113D")]
		[Address(RVA = "0x10A85EC", Offset = "0x10A85EC", VA = "0x10A85EC", Slot = "4")]
		public override bool IsEmpty()
		{
			return default(bool);
		}

		[Token(Token = "0x600113E")]
		[Address(RVA = "0x10A85FC", Offset = "0x10A85FC", VA = "0x10A85FC", Slot = "5")]
		public override void RefreshText()
		{
		}

		[Token(Token = "0x600113F")]
		[Address(RVA = "0x10A86C8", Offset = "0x10A86C8", VA = "0x10A86C8")]
		public UIItemTitleElement()
		{
		}
	}
}
namespace Serialisation
{
	[Token(Token = "0x20002D9")]
	public abstract class FlexBufferDeserialiser : IDeserialiser
	{
		[Token(Token = "0x4000ED7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private ByteBuffer _buffer;

		[Token(Token = "0x4000ED8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool _success;

		[Token(Token = "0x6001140")]
		protected abstract bool Deserialise(uint version, FlexBuffer.Map root);

		[Token(Token = "0x6001141")]
		[Address(RVA = "0x10A86D8", Offset = "0x10A86D8", VA = "0x10A86D8")]
		static FlexBufferDeserialiser()
		{
		}

		[Token(Token = "0x6001142")]
		[Address(RVA = "0x10A86DC", Offset = "0x10A86DC", VA = "0x10A86DC")]
		public FlexBufferDeserialiser()
		{
		}

		[Token(Token = "0x6001143")]
		[Address(RVA = "0x10A8754", Offset = "0x10A8754", VA = "0x10A8754", Slot = "4")]
		public bool Deserialise(uint version, ArraySegment<byte> data)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20002DA")]
	public abstract class FlexBufferSerialiser : ISerialiser
	{
		[Token(Token = "0x4000ED9")]
		private const int c_initialBuilderStackSize = 1024;

		[Token(Token = "0x4000EDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private ByteBuffer _buffer;

		[Token(Token = "0x4000EDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private FlexBufferBuilder _builder;

		[Token(Token = "0x4000EDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private ArraySegment<byte> _data;

		[Token(Token = "0x4000EDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool _success;

		[Token(Token = "0x4000EDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
		private bool _wasReallocated;

		[Token(Token = "0x6001144")]
		protected abstract bool Serialise(FlexBufferBuilder root);

		[Token(Token = "0x6001145")]
		[Address(RVA = "0x10A8A0C", Offset = "0x10A8A0C", VA = "0x10A8A0C")]
		static FlexBufferSerialiser()
		{
		}

		[Token(Token = "0x6001146")]
		[Address(RVA = "0x10A8A10", Offset = "0x10A8A10", VA = "0x10A8A10")]
		public FlexBufferSerialiser()
		{
		}

		[Token(Token = "0x6001147")]
		[Address(RVA = "0x10A8ADC", Offset = "0x10A8ADC", VA = "0x10A8ADC", Slot = "4")]
		public bool Serialise(byte[] buffer)
		{
			return default(bool);
		}

		[Token(Token = "0x6001148")]
		[Address(RVA = "0x10A8D28", Offset = "0x10A8D28", VA = "0x10A8D28", Slot = "5")]
		public bool GetSerialisedData(out ArraySegment<byte> data, out bool wasBufferReallocated)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20002DB")]
	public interface IDeserialisable
	{
		[Token(Token = "0x17000176")]
		string typeId
		{
			[Token(Token = "0x6001149")]
			get;
		}

		[Token(Token = "0x600114A")]
		bool Deserialise(FlexBuffer.Map root, ISceneObjectReferenceDeserialiser objectDeserialiser);
	}
	[Token(Token = "0x20002DC")]
	public interface IDeserialiser
	{
		[Token(Token = "0x600114B")]
		bool Deserialise(uint version, ArraySegment<byte> data);
	}
	[Token(Token = "0x20002DD")]
	public interface ISerialisable
	{
		[Token(Token = "0x17000177")]
		string typeId
		{
			[Token(Token = "0x600114C")]
			get;
		}

		[Token(Token = "0x600114D")]
		bool Serialise(FlexBufferBuilder builder, ISceneObjectReferenceSerialiser objectSerialiser);
	}
	[Token(Token = "0x20002DE")]
	public interface ISerialiser
	{
		[Token(Token = "0x600114E")]
		bool Serialise(byte[] buffer);

		[Token(Token = "0x600114F")]
		bool GetSerialisedData(out ArraySegment<byte> data, out bool wasBufferReallocated);
	}
	[Token(Token = "0x20002DF")]
	public class MetadataDeserialiser : FlexBufferDeserialiser
	{
		[Token(Token = "0x4000EDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private MetadataSerialisation.Metadata _metadata;

		[Token(Token = "0x6001150")]
		[Address(RVA = "0x10A8D84", Offset = "0x10A8D84", VA = "0x10A8D84")]
		static MetadataDeserialiser()
		{
		}

		[Token(Token = "0x6001151")]
		[Address(RVA = "0x10A8D88", Offset = "0x10A8D88", VA = "0x10A8D88")]
		public MetadataDeserialiser(MetadataSerialisation.Metadata metadata)
		{
		}

		[Token(Token = "0x6001152")]
		[Address(RVA = "0x10A8DF8", Offset = "0x10A8DF8", VA = "0x10A8DF8", Slot = "5")]
		protected override bool Deserialise(uint version, FlexBuffer.Map root)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20002E0")]
	public static class MetadataSerialisation
	{
		[Token(Token = "0x20002E1")]
		public static class Keys
		{
			[Token(Token = "0x4000EE0")]
			public const string WorldName = "world";

			[Token(Token = "0x4000EE1")]
			public const string Time = "time";

			[Token(Token = "0x4000EE2")]
			public const string GameplayTime = "gameplayTime";

			[Token(Token = "0x4000EE3")]
			public const string Screenshot = "screenshot";

			[Token(Token = "0x4000EE4")]
			public const string Activity = "activity";
		}

		[Token(Token = "0x20002E2")]
		public class Metadata
		{
			[Token(Token = "0x4000EE5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string worldName;

			[Token(Token = "0x4000EE6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public float gameplayTime;

			[Token(Token = "0x4000EE7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public long time;

			[Token(Token = "0x4000EE8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Texture2D screenshot;

			[Token(Token = "0x4000EE9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public string activity;

			[Token(Token = "0x6001153")]
			[Address(RVA = "0x10A9050", Offset = "0x10A9050", VA = "0x10A9050")]
			public void Reset()
			{
			}

			[Token(Token = "0x6001154")]
			[Address(RVA = "0x10A9160", Offset = "0x10A9160", VA = "0x10A9160")]
			public Metadata()
			{
			}
		}
	}
	[Token(Token = "0x20002E3")]
	public class MetadataSerialiser : FlexBufferSerialiser
	{
		[Token(Token = "0x4000EEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private MetadataSerialisation.Metadata _metadata;

		[Token(Token = "0x6001155")]
		[Address(RVA = "0x10A91D8", Offset = "0x10A91D8", VA = "0x10A91D8")]
		static MetadataSerialiser()
		{
		}

		[Token(Token = "0x6001156")]
		[Address(RVA = "0x10A91DC", Offset = "0x10A91DC", VA = "0x10A91DC")]
		public MetadataSerialiser(MetadataSerialisation.Metadata metadata)
		{
		}

		[Token(Token = "0x6001157")]
		[Address(RVA = "0x10A924C", Offset = "0x10A924C", VA = "0x10A924C", Slot = "6")]
		protected override bool Serialise(FlexBufferBuilder root)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20002E4")]
	public class NarrativeDeserialiser : FlexBufferDeserialiser
	{
		[Token(Token = "0x4000EEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private NarrativeState _narrativeState;

		[Token(Token = "0x4000EEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private BlackboardDeserialiser _blackboardDeserialiser;

		[Token(Token = "0x4000EED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static ProfilerMarker s_blackboardMarker;

		[Token(Token = "0x6001158")]
		[Address(RVA = "0x10A9348", Offset = "0x10A9348", VA = "0x10A9348")]
		static NarrativeDeserialiser()
		{
		}

		[Token(Token = "0x6001159")]
		[Address(RVA = "0x10A93BC", Offset = "0x10A93BC", VA = "0x10A93BC")]
		public NarrativeDeserialiser(NarrativeState narrativeState)
		{
		}

		[Token(Token = "0x600115A")]
		[Address(RVA = "0x10A9480", Offset = "0x10A9480", VA = "0x10A9480", Slot = "5")]
		protected override bool Deserialise(uint version, FlexBuffer.Map root)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20002E5")]
	public static class NarrativeSerialisation
	{
		[Token(Token = "0x20002E6")]
		public static class Keys
		{
			[Token(Token = "0x4000EEE")]
			public const string Blackboard = "Blackboard";

			[Token(Token = "0x4000EEF")]
			public const string currentActivityKey = "CurrentActivity";

			[Token(Token = "0x4000EF0")]
			public const string currentTaskKey = "CurrentTaskIndex";

			[Token(Token = "0x4000EF1")]
			public const string lastTaskKey = "LastCompletedTaskIndex";
		}
	}
	[Token(Token = "0x20002E7")]
	public class NarrativeSerialiser : FlexBufferSerialiser
	{
		[Token(Token = "0x4000EF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private NarrativeState _narrativeState;

		[Token(Token = "0x4000EF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private BlackboardSerialiser _blackboardSerialiser;

		[Token(Token = "0x4000EF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static ProfilerMarker s_blackboardMarker;

		[Token(Token = "0x600115B")]
		[Address(RVA = "0x10A9814", Offset = "0x10A9814", VA = "0x10A9814")]
		static NarrativeSerialiser()
		{
		}

		[Token(Token = "0x600115C")]
		[Address(RVA = "0x10A9888", Offset = "0x10A9888", VA = "0x10A9888")]
		public NarrativeSerialiser(NarrativeState narrativeState)
		{
		}

		[Token(Token = "0x600115D")]
		[Address(RVA = "0x10A994C", Offset = "0x10A994C", VA = "0x10A994C", Slot = "6")]
		protected override bool Serialise(FlexBufferBuilder builder)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20002E8")]
	public interface ISceneReferrable
	{
	}
	[Token(Token = "0x20002E9")]
	public class SceneObjectReferences : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20002EA")]
		public struct SceneObjectReference
		{
			[Token(Token = "0x4000EF7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[SerializeField]
			public GameObject obj;

			[Token(Token = "0x4000EF8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[SerializeField]
			public int id;
		}

		[Token(Token = "0x4000EF5")]
		public const int Invalid = int.MinValue;

		[Token(Token = "0x4000EF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private SceneObjectReference[] _objectReferences;

		[Token(Token = "0x17000178")]
		public SceneObjectReference[] objects
		{
			[Token(Token = "0x600115E")]
			[Address(RVA = "0x10A9BA4", Offset = "0x10A9BA4", VA = "0x10A9BA4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600115F")]
		[Address(RVA = "0x10A9BAC", Offset = "0x10A9BAC", VA = "0x10A9BAC")]
		public SceneObjectReferences()
		{
		}
	}
	[Token(Token = "0x20002EB")]
	public class ScreenshotDeserialiser : FlexBufferDeserialiser
	{
		[Token(Token = "0x4000EF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Texture2D _displayTexture;

		[Token(Token = "0x4000EFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static byte[] s_tempEncodedTextureData;

		[Token(Token = "0x6001160")]
		[Address(RVA = "0x10A9BB4", Offset = "0x10A9BB4", VA = "0x10A9BB4")]
		static ScreenshotDeserialiser()
		{
		}

		[Token(Token = "0x6001161")]
		[Address(RVA = "0x10A9C28", Offset = "0x10A9C28", VA = "0x10A9C28")]
		public ScreenshotDeserialiser(Texture2D displayTexture)
		{
		}

		[Token(Token = "0x6001162")]
		[Address(RVA = "0x10A9C98", Offset = "0x10A9C98", VA = "0x10A9C98", Slot = "5")]
		protected override bool Deserialise(uint version, FlexBuffer.Map root)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20002EC")]
	public static class ScreenshotSerialisation
	{
		[Token(Token = "0x20002ED")]
		public class ScreenshotCameraScope : IDisposable
		{
			[Token(Token = "0x4000EFD")]
			public const int DepthBits = 16;

			[Token(Token = "0x4000EFE")]
			private const string c_cameraObjectName = "Screenshot Camera";

			[Token(Token = "0x4000EFF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private Camera _camera;

			[Token(Token = "0x4000F00")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private RenderTexture _renderTexture;

			[Token(Token = "0x4000F01")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private Texture2D _outputTexture;

			[Token(Token = "0x4000F02")]
			private const bool c_useStereoProjectionMatrix = true;

			[Token(Token = "0x17000179")]
			public Camera camera
			{
				[Token(Token = "0x6001165")]
				[Address(RVA = "0x10AA040", Offset = "0x10AA040", VA = "0x10AA040")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700017A")]
			public bool isValid
			{
				[Token(Token = "0x6001166")]
				[Address(RVA = "0x10AA048", Offset = "0x10AA048", VA = "0x10AA048")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x6001167")]
			[Address(RVA = "0x10AA0F8", Offset = "0x10AA0F8", VA = "0x10AA0F8")]
			public ScreenshotCameraScope(Camera camera, RenderTexture renderTexture, Texture2D outputTexture)
			{
			}

			[Token(Token = "0x6001168")]
			[Address(RVA = "0x10AA3F8", Offset = "0x10AA3F8", VA = "0x10AA3F8")]
			public bool TakeScreenshot()
			{
				return default(bool);
			}

			[Token(Token = "0x6001169")]
			[Address(RVA = "0x10AA5C8", Offset = "0x10AA5C8", VA = "0x10AA5C8", Slot = "4")]
			public void Dispose()
			{
			}
		}

		[Token(Token = "0x4000EFB")]
		private const int c_screenshotTextureWidth = 512;

		[Token(Token = "0x4000EFC")]
		private const int c_screenshotTextureHeight = 256;

		[Token(Token = "0x6001163")]
		[Address(RVA = "0x10A9F40", Offset = "0x10A9F40", VA = "0x10A9F40")]
		public static Texture2D GenerateDisplayTexture(string name)
		{
			return null;
		}

		[Token(Token = "0x6001164")]
		[Address(RVA = "0x10A9FC0", Offset = "0x10A9FC0", VA = "0x10A9FC0")]
		public static Texture2D GenerateIntermediateTexture(string name)
		{
			return null;
		}
	}
	[Token(Token = "0x20002EE")]
	public class ScreenshotSerialiser : FlexBufferSerialiser
	{
		[Token(Token = "0x4000F03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private RenderTexture _screenshotRenderTexture;

		[Token(Token = "0x4000F04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Texture2D _screenshotTexture;

		[Token(Token = "0x4000F05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static byte[] s_tempEncodedTextureData;

		[Token(Token = "0x4000F06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static ProfilerMarker s_rawDataMarker;

		[Token(Token = "0x4000F07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static ProfilerMarker s_encodeMarker;

		[Token(Token = "0x4000F08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static ProfilerMarker s_resizeMarker;

		[Token(Token = "0x4000F09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static ProfilerMarker s_copyToMarker;

		[Token(Token = "0x4000F0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static ProfilerMarker s_writeBlobMarker;

		[Token(Token = "0x4000F0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private static ProfilerMarker s_copyTextureMarker;

		[Token(Token = "0x600116A")]
		[Address(RVA = "0x10AA64C", Offset = "0x10AA64C", VA = "0x10AA64C")]
		static ScreenshotSerialiser()
		{
		}

		[Token(Token = "0x600116B")]
		[Address(RVA = "0x10AA860", Offset = "0x10AA860", VA = "0x10AA860")]
		public ScreenshotSerialiser(Texture2D outputTexture)
		{
		}

		[Token(Token = "0x600116C")]
		[Address(RVA = "0x10AA964", Offset = "0x10AA964", VA = "0x10AA964")]
		public ScreenshotSerialisation.ScreenshotCameraScope CreateScreenshotContext(Camera camera)
		{
			return null;
		}

		[Token(Token = "0x600116D")]
		[Address(RVA = "0x10AA9DC", Offset = "0x10AA9DC", VA = "0x10AA9DC")]
		public bool CopyToDisplayTexture(Texture2D displayTexture)
		{
			return default(bool);
		}

		[Token(Token = "0x600116E")]
		[Address(RVA = "0x10AAB70", Offset = "0x10AAB70", VA = "0x10AAB70", Slot = "6")]
		protected override bool Serialise(FlexBufferBuilder root)
		{
			return default(bool);
		}

		[Token(Token = "0x600116F")]
		[Address(RVA = "0x10AADAC", Offset = "0x10AADAC", VA = "0x10AADAC")]
		private static bool EncodeToPNG(Texture2D texture, ref byte[] outputBuffer, out int length, out bool reallocated)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20002EF")]
	public class SerialisableAnimatedTransforms : MonoBehaviour, ISceneReferrable, ISerialisable, IDeserialisable
	{
		[Token(Token = "0x20002F0")]
		private static class Keys
		{
			[Token(Token = "0x4000F0D")]
			public const string Paths = "paths";

			[Token(Token = "0x4000F0E")]
			public const string Positions = "positions";

			[Token(Token = "0x4000F0F")]
			public const string Rotations = "rotations";
		}

		[Serializable]
		[Token(Token = "0x20002F1")]
		private struct BoundTransform
		{
			[Token(Token = "0x4000F10")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public string path;

			[Token(Token = "0x4000F11")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public Transform target;
		}

		[Token(Token = "0x4000F0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private BoundTransform[] _boundTransforms;

		[Token(Token = "0x1700017B")]
		public string typeId
		{
			[Token(Token = "0x6001170")]
			[Address(RVA = "0x10AB2B4", Offset = "0x10AB2B4", VA = "0x10AB2B4", Slot = "6")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001171")]
		[Address(RVA = "0x10AB2F4", Offset = "0x10AB2F4", VA = "0x10AB2F4", Slot = "5")]
		public bool Serialise(FlexBufferBuilder builder, ISceneObjectReferenceSerialiser objectSerialiser)
		{
			return default(bool);
		}

		[Token(Token = "0x6001172")]
		[Address(RVA = "0x10AB580", Offset = "0x10AB580", VA = "0x10AB580", Slot = "7")]
		public bool Deserialise(FlexBuffer.Map root, ISceneObjectReferenceDeserialiser objectDeserialiser)
		{
			return default(bool);
		}

		[Token(Token = "0x6001173")]
		[Address(RVA = "0x10ABCFC", Offset = "0x10ABCFC", VA = "0x10ABCFC")]
		public SerialisableAnimatedTransforms()
		{
		}
	}
	[Token(Token = "0x20002F2")]
	public class SerialisableAnimation : MonoBehaviour, ISceneReferrable, ISerialisable, IDeserialisable, IPostDeserialiseNotified
	{
		[Token(Token = "0x20002F3")]
		private static class Keys
		{
			[Token(Token = "0x4000F15")]
			public const string IsPlaying = "playing";

			[Token(Token = "0x4000F16")]
			public const string AnimationName = "anim";

			[Token(Token = "0x4000F17")]
			public const string Time = "time";
		}

		[Token(Token = "0x20002F4")]
		private struct ResumeData
		{
			[Token(Token = "0x4000F18")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int clipIndex;

			[Token(Token = "0x4000F19")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public float time;
		}

		[Token(Token = "0x4000F12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private ResumeData _resumeData;

		[Token(Token = "0x4000F13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private string[] _clipNames;

		[Token(Token = "0x4000F14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Animation _animation;

		[Token(Token = "0x1700017C")]
		public string typeId
		{
			[Token(Token = "0x6001174")]
			[Address(RVA = "0x10ABD04", Offset = "0x10ABD04", VA = "0x10ABD04", Slot = "6")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001175")]
		[Address(RVA = "0x10ABD44", Offset = "0x10ABD44", VA = "0x10ABD44")]
		public SerialisableAnimation()
		{
		}

		[Token(Token = "0x6001176")]
		[Address(RVA = "0x10ABD64", Offset = "0x10ABD64", VA = "0x10ABD64")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001177")]
		[Address(RVA = "0x10ABDBC", Offset = "0x10ABDBC", VA = "0x10ABDBC")]
		private void ApplyResumeData()
		{
		}

		[Token(Token = "0x6001178")]
		[Address(RVA = "0x10ABE98", Offset = "0x10ABE98", VA = "0x10ABE98", Slot = "5")]
		public bool Serialise(FlexBufferBuilder builder, ISceneObjectReferenceSerialiser objectSerialiser)
		{
			return default(bool);
		}

		[Token(Token = "0x6001179")]
		[Address(RVA = "0x10AC034", Offset = "0x10AC034", VA = "0x10AC034", Slot = "7")]
		public bool Deserialise(FlexBuffer.Map root, ISceneObjectReferenceDeserialiser objectDeserialiser)
		{
			return default(bool);
		}

		[Token(Token = "0x600117A")]
		[Address(RVA = "0x10AC250", Offset = "0x10AC250", VA = "0x10AC250", Slot = "8")]
		public void OnPostDeserialise()
		{
		}
	}
	[Token(Token = "0x20002F5")]
	public class SerialisableAnimator : MonoBehaviour, IInitialisable, ISceneReferrable, ISerialisable, IDeserialisable, IPostDeserialiseNotified
	{
		[Token(Token = "0x20002F6")]
		private static class Keys
		{
			[Token(Token = "0x4000F1F")]
			public const string AnimatorName = "animator";

			[Token(Token = "0x4000F20")]
			public const string AnimatorEnabled = "enabled";

			[Token(Token = "0x4000F21")]
			public const string Data = "data";
		}

		[Token(Token = "0x4000F1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Animator _animator;

		[Token(Token = "0x4000F1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private UnityAnimatorSerialiser _serialiser;

		[Token(Token = "0x4000F1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private UnityAnimatorDeserialiser _deserialiser;

		[Token(Token = "0x4000F1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private UnityAnimatorDeserialiser.ResumeData _resumeData;

		[Token(Token = "0x4000F1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private bool _initialised;

		[Token(Token = "0x1700017D")]
		public string typeId
		{
			[Token(Token = "0x600117B")]
			[Address(RVA = "0x10AC254", Offset = "0x10AC254", VA = "0x10AC254", Slot = "7")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600117C")]
		[Address(RVA = "0x10AC294", Offset = "0x10AC294", VA = "0x10AC294")]
		private void Awake()
		{
		}

		[Token(Token = "0x600117D")]
		[Address(RVA = "0x10AC2EC", Offset = "0x10AC2EC", VA = "0x10AC2EC", Slot = "4")]
		public bool Initialise()
		{
			return default(bool);
		}

		[Token(Token = "0x600117E")]
		[Address(RVA = "0x10AC310", Offset = "0x10AC310", VA = "0x10AC310")]
		private void Setup()
		{
		}

		[Token(Token = "0x600117F")]
		[Address(RVA = "0x10AC7B8", Offset = "0x10AC7B8", VA = "0x10AC7B8")]
		private void ApplyResumeData()
		{
		}

		[Token(Token = "0x6001180")]
		[Address(RVA = "0x10AC9F8", Offset = "0x10AC9F8", VA = "0x10AC9F8", Slot = "6")]
		public bool Serialise(FlexBufferBuilder builder, ISceneObjectReferenceSerialiser objectSerialiser)
		{
			return default(bool);
		}

		[Token(Token = "0x6001181")]
		[Address(RVA = "0x10ACFB0", Offset = "0x10ACFB0", VA = "0x10ACFB0", Slot = "8")]
		public bool Deserialise(FlexBuffer.Map root, ISceneObjectReferenceDeserialiser objectDeserialiser)
		{
			return default(bool);
		}

		[Token(Token = "0x6001182")]
		[Address(RVA = "0x10AD84C", Offset = "0x10AD84C", VA = "0x10AD84C", Slot = "9")]
		public void OnPostDeserialise()
		{
		}

		[Token(Token = "0x6001183")]
		[Address(RVA = "0x10AD850", Offset = "0x10AD850", VA = "0x10AD850")]
		public SerialisableAnimator()
		{
		}
	}
	[Token(Token = "0x20002F7")]
	public class SerialisableTimeline : MonoBehaviour, ISceneReferrable, ISerialisable, IDeserialisable, IPostDeserialiseNotified
	{
		[Token(Token = "0x20002F8")]
		private static class Keys
		{
			[Token(Token = "0x4000F27")]
			public const string TimelineName = "name";

			[Token(Token = "0x4000F28")]
			public const string IsFinished = "finished";

			[Token(Token = "0x4000F29")]
			public const string IsPlaying = "playing";

			[Token(Token = "0x4000F2A")]
			public const string Time = "time";
		}

		[Token(Token = "0x20002F9")]
		private struct ResumeData
		{
			[Token(Token = "0x4000F2B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public bool isFinished;

			[Token(Token = "0x4000F2C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
			public bool isPlaying;

			[Token(Token = "0x4000F2D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public float time;
		}

		[Token(Token = "0x4000F22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private ResumeData _resumeData;

		[Token(Token = "0x4000F23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private PlayableDirector _director;

		[Token(Token = "0x4000F24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool _wasTimelineStopped;

		[Token(Token = "0x4000F25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static HashSet<Animator> s_tempUniqueAnimators;

		[Token(Token = "0x4000F26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static List<AnimationClip> s_tempAnimationClips;

		[Token(Token = "0x1700017E")]
		public string typeId
		{
			[Token(Token = "0x6001184")]
			[Address(RVA = "0x10AD858", Offset = "0x10AD858", VA = "0x10AD858", Slot = "6")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001185")]
		[Address(RVA = "0x10AD898", Offset = "0x10AD898", VA = "0x10AD898")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001186")]
		[Address(RVA = "0x10AD9A0", Offset = "0x10AD9A0", VA = "0x10AD9A0")]
		private void ApplyResumeData()
		{
		}

		[Token(Token = "0x6001187")]
		[Address(RVA = "0x10ADAC8", Offset = "0x10ADAC8", VA = "0x10ADAC8")]
		private void OnDirectorStopped(PlayableDirector director)
		{
		}

		[Token(Token = "0x6001188")]
		[Address(RVA = "0x10ADAD4", Offset = "0x10ADAD4", VA = "0x10ADAD4", Slot = "5")]
		public bool Serialise(FlexBufferBuilder builder, ISceneObjectReferenceSerialiser objectSerialiser)
		{
			return default(bool);
		}

		[Token(Token = "0x6001189")]
		[Address(RVA = "0x10ADC1C", Offset = "0x10ADC1C", VA = "0x10ADC1C", Slot = "7")]
		public bool Deserialise(FlexBuffer.Map root, ISceneObjectReferenceDeserialiser objectDeserialiser)
		{
			return default(bool);
		}

		[Token(Token = "0x600118A")]
		[Address(RVA = "0x10ADE4C", Offset = "0x10ADE4C", VA = "0x10ADE4C", Slot = "8")]
		public void OnPostDeserialise()
		{
		}

		[Token(Token = "0x600118B")]
		[Address(RVA = "0x10ADE50", Offset = "0x10ADE50", VA = "0x10ADE50")]
		public SerialisableTimeline()
		{
		}
	}
	[Token(Token = "0x20002FA")]
	public class SettingsDeserialiser : FlexBufferDeserialiser
	{
		[Token(Token = "0x4000F2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private SettingsSerialisation.Settings _settings;

		[Token(Token = "0x4000F2F")]
		public const string SubtitlesEnable = "SubtitlesEnable";

		[Token(Token = "0x600118D")]
		[Address(RVA = "0x10ADF4C", Offset = "0x10ADF4C", VA = "0x10ADF4C")]
		public SettingsDeserialiser(SettingsSerialisation.Settings settings)
		{
		}

		[Token(Token = "0x600118E")]
		[Address(RVA = "0x10ADFBC", Offset = "0x10ADFBC", VA = "0x10ADFBC", Slot = "5")]
		protected override bool Deserialise(uint version, FlexBuffer.Map root)
		{
			return default(bool);
		}

		[Token(Token = "0x600118F")]
		[Address(RVA = "0x10AE06C", Offset = "0x10AE06C", VA = "0x10AE06C")]
		private void DeserialiseGameplaySettings(uint version, FlexBuffer.Map root)
		{
		}

		[Token(Token = "0x6001190")]
		[Address(RVA = "0x10AE22C", Offset = "0x10AE22C", VA = "0x10AE22C")]
		private void DeserialiseControlSettings(uint version, FlexBuffer.Map root)
		{
		}

		[Token(Token = "0x6001191")]
		[Address(RVA = "0x10AE560", Offset = "0x10AE560", VA = "0x10AE560")]
		private void DeserialiseAudioSettings(uint version, FlexBuffer.Map root)
		{
		}

		[Token(Token = "0x6001192")]
		[Address(RVA = "0x10AE6D4", Offset = "0x10AE6D4", VA = "0x10AE6D4")]
		private void DeserialiseGraphicsSettings(uint version, FlexBuffer.Map root)
		{
		}

		[Token(Token = "0x6001193")]
		[Address(RVA = "0x10AEAF4", Offset = "0x10AEAF4", VA = "0x10AEAF4")]
		private void DeserialisePostProcessingSettings(uint version, FlexBuffer.Map root)
		{
		}

		[Token(Token = "0x6001194")]
		[Address(RVA = "0x10AEDB4", Offset = "0x10AEDB4", VA = "0x10AEDB4")]
		private void DeserialiseFloat(FlexBuffer.Map root, string key, ref float data)
		{
		}

		[Token(Token = "0x6001195")]
		[Address(RVA = "0x10AECB4", Offset = "0x10AECB4", VA = "0x10AECB4")]
		private void DeserialiseBool(FlexBuffer.Map root, string key, ref bool data)
		{
		}

		[Token(Token = "0x6001196")]
		[Address(RVA = "0x10AEE18", Offset = "0x10AEE18", VA = "0x10AEE18")]
		private void DeserialiseInt(FlexBuffer.Map root, string key, ref int data)
		{
		}

		[Token(Token = "0x6001197")]
		[Address(RVA = "0x10AED1C", Offset = "0x10AED1C", VA = "0x10AED1C")]
		private void DeserialiseString(FlexBuffer.Map root, string key, ref string data)
		{
		}
	}
	[Token(Token = "0x20002FB")]
	public static class SettingsSerialisation
	{
		[Token(Token = "0x20002FC")]
		public static class GameplayKeys
		{
			[Token(Token = "0x4000F30")]
			public const string SubtitlesEnable = "SubtitlesEnable";

			[Token(Token = "0x4000F31")]
			public const string DiegeticsEnableNative = "DiegeticsEnableNative";

			[Token(Token = "0x4000F32")]
			public const string DiegeticsEnableNonNative = "DiegeticsEnableNonNative";

			[Token(Token = "0x4000F33")]
			public const string LanguageLocaleID = "LanguageLocaleID";

			[Token(Token = "0x4000F34")]
			public const string VibrationFeedback = "VibrationFeedback";
		}

		[Token(Token = "0x20002FD")]
		public static class ControlsKeys
		{
			[Token(Token = "0x4000F35")]
			public const string MouseCameraInvertY = "InvertY";

			[Token(Token = "0x4000F36")]
			public const string CameraMouseSensitivity = "CameraSensitivity";

			[Token(Token = "0x4000F37")]
			public const string ControllerCameraInvertY = "ControllerInvertY";

			[Token(Token = "0x4000F38")]
			public const string CameraControllerSensitivity = "ControllerCameraSensitivity";

			[Token(Token = "0x4000F39")]
			public const string MovementMode = "MovementMode";

			[Token(Token = "0x4000F3A")]
			public const string ControllerMode = "ControllerMode";

			[Token(Token = "0x4000F3B")]
			public const string SnapTurn = "SnapTurn";

			[Token(Token = "0x4000F3C")]
			public const string BindingOverrides = "BindingOverrides";
		}

		[Token(Token = "0x20002FE")]
		public static class AudioKeys
		{
			[Token(Token = "0x4000F3D")]
			public const string AudioVolumeMaster = "AudioVolumeMaster";

			[Token(Token = "0x4000F3E")]
			public const string AudioVolumeMusic = "AudioVolumeMusic";

			[Token(Token = "0x4000F3F")]
			public const string AudioVolumeVoice = "AudioVolumeVoice";

			[Token(Token = "0x4000F40")]
			public const string AudioVolumeSfx = "AudioVolumeSfx";
		}

		[Token(Token = "0x20002FF")]
		public static class GraphicsKeys
		{
			[Token(Token = "0x4000F41")]
			public const string Resolution = "Resolution";

			[Token(Token = "0x4000F42")]
			public const string AntiAlias = "AntiAlias";

			[Token(Token = "0x4000F43")]
			public const string CameraFOV = "CameraFOV";

			[Token(Token = "0x4000F44")]
			public const string MeshDetail = "MeshDetail";

			[Token(Token = "0x4000F45")]
			public const string TextureResolution = "TextureResolution";

			[Token(Token = "0x4000F46")]
			public const string Windowed = "Windowed";

			[Token(Token = "0x4000F47")]
			public const string FrameLimit = "FrameLimit";

			[Token(Token = "0x4000F48")]
			public const string AnisotropicFiltering = "AnisotropicFiltering";

			[Token(Token = "0x4000F49")]
			public const string VSync = "VSync";
		}

		[Token(Token = "0x2000300")]
		public static class PostProcessingKeys
		{
			[Token(Token = "0x4000F4A")]
			public const string Brightness = "Brightness";

			[Token(Token = "0x4000F4B")]
			public const string Contrast = "Contrast";

			[Token(Token = "0x4000F4C")]
			public const string Gamma = "Gamma";

			[Token(Token = "0x4000F4D")]
			public const string PostProccessBloom = "Bloom";

			[Token(Token = "0x4000F4E")]
			public const string PostProccessVignette = "Vignette";

			[Token(Token = "0x4000F4F")]
			public const string PostProccessFilmGrain = "FilmGrain";

			[Token(Token = "0x4000F50")]
			public const string PostProccessChromaticAberration = "ChromaticAberration";
		}

		[Serializable]
		[Token(Token = "0x2000301")]
		public class Settings : ICloneable
		{
			[Token(Token = "0x4000F51")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public bool subtitlesEnable;

			[Token(Token = "0x4000F52")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
			public bool diegeticsEnabledForNativeLanguage;

			[Token(Token = "0x4000F53")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x12")]
			public bool diegeticsEnabledForNonNativeLanguage;

			[Token(Token = "0x4000F54")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public string languageLocale;

			[Token(Token = "0x4000F55")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float vibrationFeedback;

			[Token(Token = "0x4000F56")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public bool cameraMouseInvertY;

			[Token(Token = "0x4000F57")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float cameraMouseSensitivitySlider;

			[Token(Token = "0x4000F58")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public float cameraMouseSensitivityRange;

			[Token(Token = "0x4000F59")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public bool cameraControllerInvertY;

			[Token(Token = "0x4000F5A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			public float cameraControllerSensitivitySlider;

			[Token(Token = "0x4000F5B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public float cameraControllerSensitivityRange;

			[Token(Token = "0x4000F5C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			public SettingsControls.MovementMode movementMode;

			[Token(Token = "0x4000F5D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public SettingsControls.ControllerMode controllerMode;

			[Token(Token = "0x4000F5E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			public SettingsControls.SnapTurn snapTurn;

			[Token(Token = "0x4000F5F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			[HideInInspector]
			public byte[] bindingOverrides;

			[Token(Token = "0x4000F60")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			public float audioVolumeMaster;

			[Token(Token = "0x4000F61")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
			public float audioVolumeMusic;

			[Token(Token = "0x4000F62")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			public float audioVolumeSfx;

			[Token(Token = "0x4000F63")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
			public float audioVolumeVoice;

			[Token(Token = "0x4000F64")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			public bool anisotropicFiltering;

			[Token(Token = "0x4000F65")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
			public bool windowed;

			[Token(Token = "0x4000F66")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x62")]
			public bool vSync;

			[Token(Token = "0x4000F67")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
			public float cameraFOVSlider;

			[Token(Token = "0x4000F68")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			public float cameraFOVRange;

			[Token(Token = "0x4000F69")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
			public int frameLimit;

			[Token(Token = "0x4000F6A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			public SettingsGraphics.AntiAlias antiAlias;

			[Token(Token = "0x4000F6B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
			public SettingsGraphics.TextureResolution textureResolution;

			[Token(Token = "0x4000F6C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
			public SettingsGraphics.MeshDetail meshDetail;

			[Token(Token = "0x4000F6D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
			public Resolution resolution;

			[Token(Token = "0x4000F6E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
			public float brightness;

			[Token(Token = "0x4000F6F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
			public float contrast;

			[Token(Token = "0x4000F70")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
			public float gamma;

			[Token(Token = "0x4000F71")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
			public bool postProccessVignette;

			[Token(Token = "0x4000F72")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x95")]
			public bool postProccessFilmGrain;

			[Token(Token = "0x6001198")]
			[Address(RVA = "0x10AEE7C", Offset = "0x10AEE7C", VA = "0x10AEE7C", Slot = "4")]
			public object Clone()
			{
				return null;
			}

			[Token(Token = "0x6001199")]
			[Address(RVA = "0x10AEE84", Offset = "0x10AEE84", VA = "0x10AEE84")]
			public Settings()
			{
			}
		}
	}
	[Token(Token = "0x2000302")]
	public class SettingsSerialiser : FlexBufferSerialiser
	{
		[Token(Token = "0x4000F73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private SettingsSerialisation.Settings _settings;

		[Token(Token = "0x600119A")]
		[Address(RVA = "0x10AEEE8", Offset = "0x10AEEE8", VA = "0x10AEEE8")]
		public SettingsSerialiser(SettingsSerialisation.Settings settings)
		{
		}

		[Token(Token = "0x600119B")]
		[Address(RVA = "0x10AEF58", Offset = "0x10AEF58", VA = "0x10AEF58", Slot = "6")]
		protected override bool Serialise(FlexBufferBuilder root)
		{
			return default(bool);
		}

		[Token(Token = "0x600119C")]
		[Address(RVA = "0x10AEFAC", Offset = "0x10AEFAC", VA = "0x10AEFAC")]
		private void SerialiseGameplaySettings(FlexBufferBuilder root)
		{
		}

		[Token(Token = "0x600119D")]
		[Address(RVA = "0x10AF0D0", Offset = "0x10AF0D0", VA = "0x10AF0D0")]
		private void SerialiseControlSettings(FlexBufferBuilder root)
		{
		}

		[Token(Token = "0x600119E")]
		[Address(RVA = "0x10AF290", Offset = "0x10AF290", VA = "0x10AF290")]
		private void SerialiseAudioSettings(FlexBufferBuilder root)
		{
		}

		[Token(Token = "0x600119F")]
		[Address(RVA = "0x10AF384", Offset = "0x10AF384", VA = "0x10AF384")]
		private void SerialiseGraphicsSettings(FlexBufferBuilder root)
		{
		}

		[Token(Token = "0x60011A0")]
		[Address(RVA = "0x10AF590", Offset = "0x10AF590", VA = "0x10AF590")]
		private void SerialisePostProcessingSettings(FlexBufferBuilder root)
		{
		}
	}
	[Token(Token = "0x2000303")]
	public class UnityAnimatorDeserialiser
	{
		[Token(Token = "0x2000304")]
		public struct ResumeData
		{
			[Token(Token = "0x2000305")]
			public struct LayerState
			{
				[Token(Token = "0x4000F87")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
				public int hash;

				[Token(Token = "0x4000F88")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
				public float time;
			}

			[Token(Token = "0x4000F7D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public (int index, LayerState state)[] layers;

			[Token(Token = "0x4000F7E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public int layerCount;

			[Token(Token = "0x4000F7F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public (int hash, bool value)[] booleans;

			[Token(Token = "0x4000F80")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public int booleanCount;

			[Token(Token = "0x4000F81")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public (int hash, int value)[] integers;

			[Token(Token = "0x4000F82")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public int integerCount;

			[Token(Token = "0x4000F83")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public (int hash, float value)[] floats;

			[Token(Token = "0x4000F84")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public int floatCount;

			[Token(Token = "0x4000F85")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public (int hash, bool value)[] triggers;

			[Token(Token = "0x4000F86")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public int triggerCount;
		}

		[Token(Token = "0x4000F74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Animator _animator;

		[Token(Token = "0x4000F75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private int[] _boolParameterIds;

		[Token(Token = "0x4000F76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int[] _intParameterIds;

		[Token(Token = "0x4000F77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int[] _floatParameterIds;

		[Token(Token = "0x4000F78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int[] _triggerParameterIds;

		[Token(Token = "0x4000F79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private string[] _layerNames;

		[Token(Token = "0x4000F7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Func<FlexBuffer.Reference, bool> s_deserialiseBoolFunction;

		[Token(Token = "0x4000F7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static Func<FlexBuffer.Reference, int> s_deserialiseIntegerFunction;

		[Token(Token = "0x4000F7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static Func<FlexBuffer.Reference, float> s_deserialiseFloatFunction;

		[Token(Token = "0x60011A1")]
		[Address(RVA = "0x10AF6B4", Offset = "0x10AF6B4", VA = "0x10AF6B4")]
		static UnityAnimatorDeserialiser()
		{
		}

		[Token(Token = "0x60011A2")]
		[Address(RVA = "0x10AC5FC", Offset = "0x10AC5FC", VA = "0x10AC5FC")]
		public UnityAnimatorDeserialiser(Animator animator)
		{
		}

		[Token(Token = "0x60011A3")]
		[Address(RVA = "0x10AC62C", Offset = "0x10AC62C", VA = "0x10AC62C")]
		public void Initialise()
		{
		}

		[Token(Token = "0x60011A4")]
		private bool DeserialiseParametersOfType<T>(FlexBuffer.Map root, string key, int[] existingParameterHashes, ref (int, T)[] hashesToValues, ref int deserialisedCount, TypeEnum expectedValueType, Func<FlexBuffer.Reference, T> deserialiseValueFunction)
		{
			return default(bool);
		}

		[Token(Token = "0x60011A5")]
		[Address(RVA = "0x10AD2BC", Offset = "0x10AD2BC", VA = "0x10AD2BC")]
		public bool Deserialise(FlexBuffer.Map root, out ResumeData resumeData)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000307")]
	public static class UnityAnimatorSerialisation
	{
		[Token(Token = "0x2000308")]
		public static class Keys
		{
			[Token(Token = "0x4000F8B")]
			public const string Parameters = "parameters";

			[Token(Token = "0x4000F8C")]
			public const string ParameterHashes = "ids";

			[Token(Token = "0x4000F8D")]
			public const string ParameterValues = "values";

			[Token(Token = "0x4000F8E")]
			public const string Booleans = "bools";

			[Token(Token = "0x4000F8F")]
			public const string Floats = "floats";

			[Token(Token = "0x4000F90")]
			public const string Integers = "ints";

			[Token(Token = "0x4000F91")]
			public const string Triggers = "triggers";

			[Token(Token = "0x4000F92")]
			public const string Layers = "layers";

			[Token(Token = "0x4000F93")]
			public const string ActiveStateHash = "state";

			[Token(Token = "0x4000F94")]
			public const string ActiveStateTime = "time";
		}

		[Token(Token = "0x4000F8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static List<int> s_tempParameterIds;

		[Token(Token = "0x60011AB")]
		[Address(RVA = "0x10AFAC8", Offset = "0x10AFAC8", VA = "0x10AFAC8")]
		static UnityAnimatorSerialisation()
		{
		}

		[Token(Token = "0x60011AC")]
		[Address(RVA = "0x10AF85C", Offset = "0x10AF85C", VA = "0x10AF85C")]
		public static int PopulateParameterIdsForType(Animator animator, AnimatorControllerParameterType type, ref int[] ids)
		{
			return default(int);
		}
	}
	[Token(Token = "0x2000309")]
	public class UnityAnimatorSerialiser
	{
		[Token(Token = "0x4000F95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Animator _animator;

		[Token(Token = "0x4000F96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private int[] _boolParameterIds;

		[Token(Token = "0x4000F97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int[] _intParameterIds;

		[Token(Token = "0x4000F98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int[] _floatParameterIds;

		[Token(Token = "0x4000F99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int[] _triggerParameterIds;

		[Token(Token = "0x4000F9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private string[] _layerNames;

		[Token(Token = "0x4000F9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Func<Animator, int, bool> s_getBoolFunction;

		[Token(Token = "0x4000F9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static Func<Animator, int, int> s_getIntFunction;

		[Token(Token = "0x4000F9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static Func<Animator, int, float> s_getFloatFunction;

		[Token(Token = "0x4000F9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static Func<Animator, int, bool> s_getTriggerFunction;

		[Token(Token = "0x4000F9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static Action<FlexBufferBuilder, bool> s_serialiseBoolFunction;

		[Token(Token = "0x4000FA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static Action<FlexBufferBuilder, int> s_serialiseIntFunction;

		[Token(Token = "0x4000FA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private static Action<FlexBufferBuilder, float> s_serialiseFloatFunction;

		[Token(Token = "0x4000FA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private static Action<FlexBufferBuilder, bool> s_serialiseTriggerFunction;

		[Token(Token = "0x60011AD")]
		[Address(RVA = "0x10AFB64", Offset = "0x10AFB64", VA = "0x10AFB64")]
		static UnityAnimatorSerialiser()
		{
		}

		[Token(Token = "0x60011AE")]
		[Address(RVA = "0x10AC440", Offset = "0x10AC440", VA = "0x10AC440")]
		public UnityAnimatorSerialiser(Animator animator)
		{
		}

		[Token(Token = "0x60011AF")]
		[Address(RVA = "0x10AC470", Offset = "0x10AC470", VA = "0x10AC470")]
		public void Initialise()
		{
		}

		[Token(Token = "0x60011B0")]
		private static bool SerialiseParametersOfType<T>(FlexBufferBuilder root, int[] parameterHashes, Animator animator, Func<Animator, int, T> valueFunction, Action<FlexBufferBuilder, T> serialiseFunction) where T : struct
		{
			return default(bool);
		}

		[Token(Token = "0x60011B1")]
		[Address(RVA = "0x10ACBBC", Offset = "0x10ACBBC", VA = "0x10ACBBC")]
		public bool Serialise(FlexBufferBuilder root)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x200030B")]
	public static class UnityComponentSerialisation
	{
		[Token(Token = "0x200030C")]
		private static class Keys
		{
			[Token(Token = "0x4000FA4")]
			public const string TransformPosition = "position";

			[Token(Token = "0x4000FA5")]
			public const string TransformRotation = "rotation";

			[Token(Token = "0x4000FA6")]
			public const string RigidbodyVelocity = "velocity";

			[Token(Token = "0x4000FA7")]
			public const string RigidbodyAngularVelocity = "angularVelocity";
		}

		[Token(Token = "0x60011BC")]
		[Address(RVA = "0x10AB528", Offset = "0x10AB528", VA = "0x10AB528")]
		public static bool Serialise(in Vector3 vector, FlexBufferBuilder builder)
		{
			return default(bool);
		}

		[Token(Token = "0x60011BD")]
		[Address(RVA = "0x10B0048", Offset = "0x10B0048", VA = "0x10B0048")]
		public static bool Serialise(in Vector3 vector, FlexBufferBuilder builder, string key)
		{
			return default(bool);
		}

		[Token(Token = "0x60011BE")]
		[Address(RVA = "0x10ABA00", Offset = "0x10ABA00", VA = "0x10ABA00")]
		public static bool Deserialise(out Vector3 vector, FlexBuffer.Reference reference)
		{
			return default(bool);
		}

		[Token(Token = "0x60011BF")]
		[Address(RVA = "0x10B0078", Offset = "0x10B0078", VA = "0x10B0078")]
		public static bool Deserialise(out Vector3 vector, FlexBuffer.Map root, string key)
		{
			return default(bool);
		}

		[Token(Token = "0x60011C0")]
		[Address(RVA = "0x10AB554", Offset = "0x10AB554", VA = "0x10AB554")]
		public static bool Serialise(in Quaternion quaternion, FlexBufferBuilder builder)
		{
			return default(bool);
		}

		[Token(Token = "0x60011C1")]
		[Address(RVA = "0x10B00C4", Offset = "0x10B00C4", VA = "0x10B00C4")]
		public static bool Serialise(in Quaternion quaternion, FlexBufferBuilder builder, string key)
		{
			return default(bool);
		}

		[Token(Token = "0x60011C2")]
		[Address(RVA = "0x10ABB68", Offset = "0x10ABB68", VA = "0x10ABB68")]
		public static bool Deserialise(out Quaternion quaternion, FlexBuffer.Reference reference)
		{
			return default(bool);
		}

		[Token(Token = "0x60011C3")]
		[Address(RVA = "0x10B00F4", Offset = "0x10B00F4", VA = "0x10B00F4")]
		public static bool Deserialise(out Quaternion quaternion, FlexBuffer.Map root, string key)
		{
			return default(bool);
		}

		[Token(Token = "0x60011C4")]
		[Address(RVA = "0x10B0140", Offset = "0x10B0140", VA = "0x10B0140")]
		public static bool Serialise(this Transform transform, FlexBufferBuilder builder, string key)
		{
			return default(bool);
		}

		[Token(Token = "0x60011C5")]
		[Address(RVA = "0x10B023C", Offset = "0x10B023C", VA = "0x10B023C")]
		public static bool Deserialise(this Transform transform, FlexBuffer.Map root, string key)
		{
			return default(bool);
		}

		[Token(Token = "0x60011C6")]
		[Address(RVA = "0x10B0464", Offset = "0x10B0464", VA = "0x10B0464")]
		public static bool Serialise(this Rigidbody rigidbody, FlexBufferBuilder builder, string key)
		{
			return default(bool);
		}

		[Token(Token = "0x60011C7")]
		[Address(RVA = "0x10B0564", Offset = "0x10B0564", VA = "0x10B0564")]
		public static bool Deserialise(this Rigidbody rigidbody, FlexBuffer.Map root, string key)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x200030D")]
	public interface ISceneObjectReferenceDeserialiser
	{
		[Token(Token = "0x60011C8")]
		GameObject Deserialise(int id);
	}
	[Token(Token = "0x200030E")]
	public interface IPostDeserialiseNotified
	{
		[Token(Token = "0x60011C9")]
		void OnPostDeserialise();
	}
	[Token(Token = "0x200030F")]
	public class WorldDeserialiser : FlexBufferDeserialiser
	{
		[Token(Token = "0x2000310")]
		public class SceneObjectReferenceDeserialiser : ISceneObjectReferenceDeserialiser
		{
			[Token(Token = "0x4000FB1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private Dictionary<int, GameObject> _objectLookup;

			[Token(Token = "0x60011D2")]
			[Address(RVA = "0x10B0A98", Offset = "0x10B0A98", VA = "0x10B0A98")]
			public SceneObjectReferenceDeserialiser(SceneObjectReferences references)
			{
			}

			[Token(Token = "0x60011D3")]
			[Address(RVA = "0x10B1D30", Offset = "0x10B1D30", VA = "0x10B1D30", Slot = "4")]
			public GameObject Deserialise(int id)
			{
				return null;
			}
		}

		[Token(Token = "0x4000FA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private Scene _scene;

		[Token(Token = "0x4000FA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private ISceneObjectReferenceDeserialiser _objectReferenceDeserialiser;

		[Token(Token = "0x4000FAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private List<GameObject> _objects;

		[Token(Token = "0x4000FAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Dictionary<GameObject, List<IDeserialisable>> _deserialisables;

		[Token(Token = "0x4000FAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private List<GameObject> _notifiedObjects;

		[Token(Token = "0x4000FAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Dictionary<GameObject, List<IPostDeserialiseNotified>> _postDeserialiseNotifieds;

		[Token(Token = "0x4000FAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static HashSet<string> s_tempDeserialisedDataTypeIds;

		[Token(Token = "0x4000FAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static ProfilerMarker s_objectsMarker;

		[Token(Token = "0x4000FB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static ProfilerMarker s_objectMarker;

		[Token(Token = "0x60011CA")]
		[Address(RVA = "0x10B0760", Offset = "0x10B0760", VA = "0x10B0760")]
		static WorldDeserialiser()
		{
		}

		[Token(Token = "0x60011CB")]
		[Address(RVA = "0x10B0874", Offset = "0x10B0874", VA = "0x10B0874")]
		public WorldDeserialiser(Scene scene, SceneObjectReferences sceneObjectReferences)
		{
		}

		[Token(Token = "0x60011CC")]
		[Address(RVA = "0x10B0BC0", Offset = "0x10B0BC0", VA = "0x10B0BC0")]
		public void AddDeserialisable(GameObject obj, IDeserialisable deserialisable)
		{
		}

		[Token(Token = "0x60011CD")]
		[Address(RVA = "0x10B0DA0", Offset = "0x10B0DA0", VA = "0x10B0DA0")]
		public void AddPostDeserialiseNotified(GameObject obj, IPostDeserialiseNotified notified)
		{
		}

		[Token(Token = "0x60011CE")]
		[Address(RVA = "0x10B0F80", Offset = "0x10B0F80", VA = "0x10B0F80")]
		public void RemoveAll(GameObject obj)
		{
		}

		[Token(Token = "0x60011CF")]
		[Address(RVA = "0x10B1028", Offset = "0x10B1028", VA = "0x10B1028")]
		public void OnLoadFinished()
		{
		}

		[Token(Token = "0x60011D0")]
		[Address(RVA = "0x10B12E4", Offset = "0x10B12E4", VA = "0x10B12E4", Slot = "5")]
		protected override bool Deserialise(uint version, FlexBuffer.Map root)
		{
			return default(bool);
		}

		[Token(Token = "0x60011D1")]
		[Address(RVA = "0x10B16DC", Offset = "0x10B16DC", VA = "0x10B16DC")]
		private bool DeserialiseObject(FlexBuffer.Map objectMap, out int serialisedId)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000311")]
	public static class WorldSerialisation
	{
		[Token(Token = "0x2000312")]
		public static class Keys
		{
			[Token(Token = "0x4000FB2")]
			public const string WorldName = "name";

			[Token(Token = "0x4000FB3")]
			public const string Objects = "objects";

			[Token(Token = "0x4000FB4")]
			public const string ObjectSaveId = "id";

			[Token(Token = "0x4000FB5")]
			public const string ObjectSerialisables = "data";
		}
	}
	[Token(Token = "0x2000313")]
	public interface ISceneObjectReferenceSerialiser
	{
		[Token(Token = "0x60011D4")]
		int Serialise(GameObject obj);
	}
	[Token(Token = "0x2000314")]
	public class WorldSerialiser : FlexBufferSerialiser
	{
		[Token(Token = "0x2000315")]
		public class SceneObjectReferenceSerialiser : ISceneObjectReferenceSerialiser
		{
			[Token(Token = "0x4000FBC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private Dictionary<GameObject, int> _objectLookup;

			[Token(Token = "0x60011DB")]
			[Address(RVA = "0x10B1FDC", Offset = "0x10B1FDC", VA = "0x10B1FDC")]
			public SceneObjectReferenceSerialiser(SceneObjectReferences references)
			{
			}

			[Token(Token = "0x60011DC")]
			[Address(RVA = "0x10B2BF4", Offset = "0x10B2BF4", VA = "0x10B2BF4", Slot = "4")]
			public int Serialise(GameObject obj)
			{
				return default(int);
			}
		}

		[Token(Token = "0x4000FB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private Scene _scene;

		[Token(Token = "0x4000FB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private ISceneObjectReferenceSerialiser _objectReferenceSerialiser;

		[Token(Token = "0x4000FB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private List<GameObject> _objects;

		[Token(Token = "0x4000FB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Dictionary<GameObject, List<ISerialisable>> _serialisables;

		[Token(Token = "0x4000FBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static ProfilerMarker s_objectsMarker;

		[Token(Token = "0x4000FBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static ProfilerMarker s_objectMarker;

		[Token(Token = "0x60011D5")]
		[Address(RVA = "0x10B1DA8", Offset = "0x10B1DA8", VA = "0x10B1DA8")]
		static WorldSerialiser()
		{
		}

		[Token(Token = "0x60011D6")]
		[Address(RVA = "0x10B1E5C", Offset = "0x10B1E5C", VA = "0x10B1E5C")]
		public WorldSerialiser(Scene scene, SceneObjectReferences sceneObjectReferences)
		{
		}

		[Token(Token = "0x60011D7")]
		[Address(RVA = "0x10B2134", Offset = "0x10B2134", VA = "0x10B2134")]
		public void AddSerialisable(GameObject obj, ISerialisable serialisable)
		{
		}

		[Token(Token = "0x60011D8")]
		[Address(RVA = "0x10B23A0", Offset = "0x10B23A0", VA = "0x10B23A0")]
		public void RemoveAll(GameObject obj)
		{
		}

		[Token(Token = "0x60011D9")]
		[Address(RVA = "0x10B2420", Offset = "0x10B2420", VA = "0x10B2420", Slot = "6")]
		protected override bool Serialise(FlexBufferBuilder builder)
		{
			return default(bool);
		}

		[Token(Token = "0x60011DA")]
		[Address(RVA = "0x10B2864", Offset = "0x10B2864", VA = "0x10B2864")]
		private bool SerialiseObject(FlexBufferBuilder builder, GameObject obj, List<ISerialisable> serialisables, out int serialisedId)
		{
			return default(bool);
		}
	}
}
namespace Player
{
	[Token(Token = "0x2000316")]
	public abstract class HolderPlayer_Base : Holder, ISceneReferrable, ISerialisable, IDeserialisable, IPostDeserialiseNotified
	{
		[Token(Token = "0x2000317")]
		protected static class Keys
		{
			[Token(Token = "0x4000FC3")]
			public const string Slots = "slots";

			[Token(Token = "0x4000FC4")]
			public const string SlotWorldPositions = "positions";

			[Token(Token = "0x4000FC5")]
			public const string FsOrientationIds = "fs_orentation_ids";
		}

		[Token(Token = "0x4000FBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		protected InteractorBase[] interactors;

		[Token(Token = "0x4000FBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private LayerMask layersToReplace;

		[Token(Token = "0x4000FBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private string replacementLayerName;

		[Token(Token = "0x4000FC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		protected Vector3[] _resumeSlotPositions;

		[Token(Token = "0x4000FC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private List<(GameObject colliderGo, int originalLayer)> colliderGOsWithReplacedLayer;

		[Token(Token = "0x4000FC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private LayerMask replacementLayer;

		[Token(Token = "0x1700017F")]
		public InteractorBase[] Interactors
		{
			[Token(Token = "0x60011DD")]
			[Address(RVA = "0x10B2C70", Offset = "0x10B2C70", VA = "0x10B2C70")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000180")]
		public string typeId
		{
			[Token(Token = "0x60011E1")]
			[Address(RVA = "0x10B34B4", Offset = "0x10B34B4", VA = "0x10B34B4", Slot = "22")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60011DE")]
		[Address(RVA = "0x10B2C78", Offset = "0x10B2C78", VA = "0x10B2C78", Slot = "8")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x60011DF")]
		[Address(RVA = "0x10B2CA8", Offset = "0x10B2CA8", VA = "0x10B2CA8", Slot = "14")]
		protected override void HoldNew(IHoldable iHoldable, int slot, EAttachmentType attachmentType)
		{
		}

		[Token(Token = "0x60011E0")]
		[Address(RVA = "0x10B3094", Offset = "0x10B3094", VA = "0x10B3094", Slot = "17")]
		public override bool Drop(int slot, out IHoldable dropped)
		{
			return default(bool);
		}

		[Token(Token = "0x60011E2")]
		[Address(RVA = "0x10B34F4", Offset = "0x10B34F4", VA = "0x10B34F4", Slot = "25")]
		public virtual bool Serialise(FlexBufferBuilder builder, ISceneObjectReferenceSerialiser objectSerialiser)
		{
			return default(bool);
		}

		[Token(Token = "0x60011E3")]
		[Address(RVA = "0x10B3668", Offset = "0x10B3668", VA = "0x10B3668", Slot = "26")]
		public virtual bool Deserialise(FlexBuffer.Map root, ISceneObjectReferenceDeserialiser objectDeserialiser)
		{
			return default(bool);
		}

		[Token(Token = "0x60011E4")]
		[Address(RVA = "0x10B39B4", Offset = "0x10B39B4", VA = "0x10B39B4", Slot = "27")]
		public virtual void OnPostDeserialise()
		{
		}

		[Token(Token = "0x60011E5")]
		[Address(RVA = "0x10B39B8", Offset = "0x10B39B8", VA = "0x10B39B8")]
		protected HolderPlayer_Base()
		{
		}
	}
	[Token(Token = "0x2000318")]
	public abstract class HolderPlayer_XR : HolderPlayer_Base
	{
		[Token(Token = "0x60011E6")]
		[Address(RVA = "0x10B3A44", Offset = "0x10B3A44", VA = "0x10B3A44", Slot = "17")]
		public override bool Drop(int slot, out IHoldable dropped)
		{
			return default(bool);
		}

		[Token(Token = "0x60011E7")]
		[Address(RVA = "0x10B3BBC", Offset = "0x10B3BBC", VA = "0x10B3BBC", Slot = "27")]
		public override void OnPostDeserialise()
		{
		}

		[Token(Token = "0x60011E8")]
		[Address(RVA = "0x10B3D0C", Offset = "0x10B3D0C", VA = "0x10B3D0C")]
		protected HolderPlayer_XR()
		{
		}
	}
	[Token(Token = "0x2000319")]
	public abstract class HolderPlayer_FlatScreen : HolderPlayer_Base
	{
		[Token(Token = "0x4000FC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private int renderOnTopLayerId;

		[Token(Token = "0x4000FC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private int renderOnTopOutlineLayerId;

		[Token(Token = "0x4000FC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private int outlineLayerId;

		[Token(Token = "0x4000FC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private List<bool>[] originalColliderEnabledValues;

		[Token(Token = "0x4000FCA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private List<int>[] originalMeshFilterLayerIds;

		[Token(Token = "0x4000FCB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private FsDropHandler fsDropHandler;

		[Token(Token = "0x4000FCC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private FsInspectHandler fsInspectHandler;

		[Token(Token = "0x60011E9")]
		[Address(RVA = "0x10B3D10", Offset = "0x10B3D10", VA = "0x10B3D10", Slot = "8")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x60011EA")]
		[Address(RVA = "0x10B3F54", Offset = "0x10B3F54", VA = "0x10B3F54", Slot = "16")]
		public override void FinalizeSlotSwap(int slotOne, int slotTwo)
		{
		}

		[Token(Token = "0x60011EB")]
		[Address(RVA = "0x10B426C", Offset = "0x10B426C", VA = "0x10B426C", Slot = "15")]
		protected override void HoldSwapped(IHoldable holdable, int oldSlot, int newSlot, EAttachmentType attachmentType)
		{
		}

		[Token(Token = "0x60011EC")]
		[Address(RVA = "0x10B3FB8", Offset = "0x10B3FB8", VA = "0x10B3FB8")]
		private void OnSwapped(IHoldable holdableOne, IHoldable holdableTwo, int newSlotOne, int newSlotTwo)
		{
		}

		[Token(Token = "0x60011ED")]
		[Address(RVA = "0x10B42B4", Offset = "0x10B42B4", VA = "0x10B42B4", Slot = "14")]
		protected override void HoldNew(IHoldable iHoldable, int slot, EAttachmentType attachmentType)
		{
		}

		[Token(Token = "0x60011EE")]
		[Address(RVA = "0x10B46E8", Offset = "0x10B46E8", VA = "0x10B46E8", Slot = "17")]
		public override bool Drop(int slot, out IHoldable dropped)
		{
			return default(bool);
		}

		[Token(Token = "0x60011EF")]
		[Address(RVA = "0x10B4BDC", Offset = "0x10B4BDC", VA = "0x10B4BDC", Slot = "25")]
		public override bool Serialise(FlexBufferBuilder builder, ISceneObjectReferenceSerialiser objectSerialiser)
		{
			return default(bool);
		}

		[Token(Token = "0x60011F0")]
		[Address(RVA = "0x10B4DEC", Offset = "0x10B4DEC", VA = "0x10B4DEC", Slot = "26")]
		public override bool Deserialise(FlexBuffer.Map root, ISceneObjectReferenceDeserialiser objectDeserialiser)
		{
			return default(bool);
		}

		[Token(Token = "0x60011F1")]
		[Address(RVA = "0x10B5098", Offset = "0x10B5098", VA = "0x10B5098")]
		protected HolderPlayer_FlatScreen()
		{
		}
	}
	[Token(Token = "0x200031A")]
	public class HolderPlayer : HolderPlayer_XR
	{
		[Token(Token = "0x60011F2")]
		[Address(RVA = "0x10B5130", Offset = "0x10B5130", VA = "0x10B5130")]
		public HolderPlayer()
		{
		}
	}
	[Token(Token = "0x200031B")]
	public abstract class PlayerBase : UpdatableMonoBehaviour, ICoreUpdatable, IUpdatable, ISceneReferrable, ISerialisable, IDeserialisable
	{
		[Token(Token = "0x200031C")]
		public enum MovementState
		{
			[Token(Token = "0x4000FE0")]
			Active,
			[Token(Token = "0x4000FE1")]
			PreTeleport,
			[Token(Token = "0x4000FE2")]
			Teleport,
			[Token(Token = "0x4000FE3")]
			PostTeleport
		}

		[Token(Token = "0x200031D")]
		private struct MoveRequest
		{
			[Token(Token = "0x4000FE4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Vector3 position;

			[Token(Token = "0x4000FE5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public Quaternion rotation;

			[Token(Token = "0x4000FE6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			private bool _valid;

			[Token(Token = "0x17000188")]
			public bool isValid
			{
				[Token(Token = "0x600120F")]
				[Address(RVA = "0x10B6828", Offset = "0x10B6828", VA = "0x10B6828")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x6001210")]
			[Address(RVA = "0x10B63FC", Offset = "0x10B63FC", VA = "0x10B63FC")]
			public MoveRequest(Vector3 position, Quaternion cameraRotation)
			{
			}
		}

		[Serializable]
		[Token(Token = "0x200031E")]
		public struct PlayerHeight
		{
			[Token(Token = "0x4000FE7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public float _maxPlayerHeight;

			[Token(Token = "0x4000FE8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public float _minPlayerHeight;
		}

		[Token(Token = "0x200031F")]
		protected static class Keys
		{
			[Token(Token = "0x4000FE9")]
			public const string LogicalPosition = "position";

			[Token(Token = "0x4000FEA")]
			public const string ViewPosition = "camera_position";

			[Token(Token = "0x4000FEB")]
			public const string ViewRotation = "camera_rotation";
		}

		[Token(Token = "0x4000FCD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		public bool SnapToGround;

		[Token(Token = "0x4000FCE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public PlayerHeight playerHeight;

		[Token(Token = "0x4000FCF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Camera mainCamera;

		[Token(Token = "0x4000FD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private LayerMask crouchCheckLayerMask;

		[Token(Token = "0x4000FD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		protected ActionManager _actionManager;

		[Token(Token = "0x4000FD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		protected CharacterController characterController;

		[Token(Token = "0x4000FD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		protected FootSteps footStepPlayer;

		[Token(Token = "0x4000FD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		protected Transform _cachedRootTransform;

		[Token(Token = "0x4000FD5")]
		private const float c_maxVerticalDrop = 1f;

		[Token(Token = "0x4000FD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private LayerMask _groundSnapLayerMask;

		[Token(Token = "0x4000FD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		protected MovementState _movementState;

		[Token(Token = "0x4000FD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private bool _controlEnabled;

		[Token(Token = "0x4000FD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private MoveRequest _moveRequest;

		[Token(Token = "0x4000FDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private MoveRequest _queuedMoveRequest;

		[Token(Token = "0x4000FDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		private Vector3 lastStepLocation;

		[Token(Token = "0x4000FDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private RaycastHit[] oneHitArray;

		[Token(Token = "0x4000FDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		protected HolderPlayer holderPlayer;

		[Token(Token = "0x4000FDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public LocationBase _location;

		[Token(Token = "0x17000181")]
		protected abstract Vector3 cameraOffset
		{
			[Token(Token = "0x60011F3")]
			get;
		}

		[Token(Token = "0x17000182")]
		protected abstract float cameraOffsetY
		{
			[Token(Token = "0x60011F4")]
			get;
		}

		[Token(Token = "0x17000183")]
		public abstract Quaternion cameraRotation
		{
			[Token(Token = "0x60011F5")]
			get;
		}

		[Token(Token = "0x17000184")]
		public virtual bool controlEnabled
		{
			[Token(Token = "0x60011F8")]
			[Address(RVA = "0x10B5134", Offset = "0x10B5134", VA = "0x10B5134", Slot = "20")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60011F9")]
			[Address(RVA = "0x10B513C", Offset = "0x10B513C", VA = "0x10B513C", Slot = "21")]
			set
			{
			}
		}

		[Token(Token = "0x17000185")]
		public virtual LocationBase location
		{
			[Token(Token = "0x60011FA")]
			[Address(RVA = "0x10B5218", Offset = "0x10B5218", VA = "0x10B5218", Slot = "22")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000186")]
		public bool Initialised
		{
			[Token(Token = "0x60011FB")]
			[Address(RVA = "0x10B5220", Offset = "0x10B5220", VA = "0x10B5220")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000187")]
		public string typeId
		{
			[Token(Token = "0x600120C")]
			[Address(RVA = "0x10B666C", Offset = "0x10B666C", VA = "0x10B666C", Slot = "13")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60011F6")]
		public abstract Transform GetRootTransform();

		[Token(Token = "0x60011F7")]
		protected abstract Vector3 GetFootLocation();

		[Token(Token = "0x60011FC")]
		[Address(RVA = "0x10B5228", Offset = "0x10B5228", VA = "0x10B5228")]
		public PlayerBase()
		{
		}

		[Token(Token = "0x60011FD")]
		[Address(RVA = "0x10B5344", Offset = "0x10B5344", VA = "0x10B5344", Slot = "23")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x60011FE")]
		[Address(RVA = "0x10B54D4", Offset = "0x10B54D4", VA = "0x10B54D4", Slot = "6")]
		public override bool Initialise()
		{
			return default(bool);
		}

		[Token(Token = "0x60011FF")]
		[Address(RVA = "0x10B5848", Offset = "0x10B5848", VA = "0x10B5848")]
		protected bool CanStandUp()
		{
			return default(bool);
		}

		[Token(Token = "0x6001200")]
		[Address(RVA = "0x10B5A28", Offset = "0x10B5A28", VA = "0x10B5A28")]
		private void OnControllerModeSet(SettingsControls.ControllerMode mode)
		{
		}

		[Token(Token = "0x6001201")]
		[Address(RVA = "0x10B5824", Offset = "0x10B5824", VA = "0x10B5824")]
		private void SetHoldMode(SettingsControls.ControllerMode mode)
		{
		}

		[Token(Token = "0x6001202")]
		[Address(RVA = "0x10B5A4C", Offset = "0x10B5A4C", VA = "0x10B5A4C", Slot = "7")]
		public override void OnUpdate(float dt)
		{
		}

		[Token(Token = "0x6001203")]
		[Address(RVA = "0x10B5B50", Offset = "0x10B5B50", VA = "0x10B5B50", Slot = "24")]
		protected virtual void PerformMovementUpdate(float dt)
		{
		}

		[Token(Token = "0x6001204")]
		[Address(RVA = "0x10B5BD8", Offset = "0x10B5BD8", VA = "0x10B5BD8")]
		private void SnapPlayerToGround()
		{
		}

		[Token(Token = "0x6001205")]
		[Address(RVA = "0x10B5E08", Offset = "0x10B5E08", VA = "0x10B5E08")]
		private void UpdateFootsteps()
		{
		}

		[Token(Token = "0x6001206")]
		[Address(RVA = "0x10B5FC0", Offset = "0x10B5FC0", VA = "0x10B5FC0", Slot = "25")]
		protected virtual void PerformTeleportUpdate()
		{
		}

		[Token(Token = "0x6001207")]
		[Address(RVA = "0x10B616C", Offset = "0x10B616C", VA = "0x10B616C", Slot = "26")]
		protected virtual bool TryMoveToPosition(Vector3 position, Quaternion rotation)
		{
			return default(bool);
		}

		[Token(Token = "0x6001208")]
		[Address(RVA = "0x10B6174", Offset = "0x10B6174", VA = "0x10B6174")]
		public bool SetCurrentLocation(LocationBase newLocation)
		{
			return default(bool);
		}

		[Token(Token = "0x6001209")]
		[Address(RVA = "0x10B63D0", Offset = "0x10B63D0", VA = "0x10B63D0")]
		public bool RequestMoveToPosition(Vector3 position, Quaternion cameraRotation)
		{
			return default(bool);
		}

		[Token(Token = "0x600120A")]
		[Address(RVA = "0x10B6418", Offset = "0x10B6418", VA = "0x10B6418")]
		public void ForceOcclusionRescanOfHeldOccludees()
		{
		}

		[Token(Token = "0x600120B")]
		[Address(RVA = "0x10B657C", Offset = "0x10B657C", VA = "0x10B657C")]
		public bool GetCharacterControllerWorldPosition(out Vector3 charControllerWorldPosition)
		{
			return default(bool);
		}

		[Token(Token = "0x600120D")]
		[Address(RVA = "0x10B66AC", Offset = "0x10B66AC", VA = "0x10B66AC", Slot = "27")]
		public virtual bool Serialise(FlexBufferBuilder builder, ISceneObjectReferenceSerialiser objectSerialiser)
		{
			return default(bool);
		}

		[Token(Token = "0x600120E")]
		[Address(RVA = "0x10B6820", Offset = "0x10B6820", VA = "0x10B6820", Slot = "28")]
		public virtual bool Deserialise(FlexBuffer.Map root, ISceneObjectReferenceDeserialiser objectDeserialiser)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000320")]
	public class VRHeightAdjuster : MonoBehaviour
	{
		[Token(Token = "0x4000FEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private XRRig _rig;

		[Token(Token = "0x6001211")]
		[Address(RVA = "0x10B6830", Offset = "0x10B6830", VA = "0x10B6830")]
		private void Start()
		{
		}

		[Token(Token = "0x6001212")]
		[Address(RVA = "0x10B6834", Offset = "0x10B6834", VA = "0x10B6834")]
		public void Refresh()
		{
		}

		[Token(Token = "0x6001213")]
		[Address(RVA = "0x10B6924", Offset = "0x10B6924", VA = "0x10B6924")]
		public VRHeightAdjuster()
		{
		}
	}
	[Token(Token = "0x2000321")]
	public class VRPlayer : PlayerBase
	{
		[Token(Token = "0x4000FED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public bool CharacterControllerTracksHMD;

		[Token(Token = "0x4000FEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private CharacterControllerDriver characterControllerDriver;

		[Token(Token = "0x4000FEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private XRRig xrRig;

		[Token(Token = "0x4000FF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private XRBaseController[] xrControllers;

		[Token(Token = "0x4000FF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private LocomotionHandler _locomotionHandler;

		[Token(Token = "0x4000FF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private LocomotionSystem _locomotionSystem;

		[Token(Token = "0x4000FF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		private TeleportationProvider _teleportProvider;

		[Token(Token = "0x4000FF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		private Vector3 debugSphere1Pos;

		[Token(Token = "0x4000FF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
		private Vector3 debugSphere2Pos;

		[Token(Token = "0x4000FF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		private Color debugSphereCol;

		[Token(Token = "0x4000FF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		private float debugSphereRadius;

		[Token(Token = "0x4000FF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
		[SerializeField]
		private float moveSpeed;

		[Token(Token = "0x4000FFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		[SerializeField]
		private XRRayInteractor[] _rayInteractors;

		[Token(Token = "0x4000FFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		private bool[] _raysActive;

		[Token(Token = "0x4000FFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		private int _prevHandIndex;

		[Token(Token = "0x4000FFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14C")]
		private int _currentHandIndex;

		[Token(Token = "0x4000FFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		[SerializeField]
		private PlayerXRHeightModes _currentPlayerXRHeightMode;

		[Token(Token = "0x4000FFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x154")]
		private PlayerXRStances _currentPlayerState;

		[Token(Token = "0x4001000")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		private PlayerXRStances _prevPlayerState;

		[Token(Token = "0x4001001")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x15C")]
		private bool _toggledCrouch;

		[Token(Token = "0x4001002")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		private LayerMask _characterControllerLayerMask;

		[Token(Token = "0x4001003")]
		private const float _holdTimerToStand = 0.5f;

		[Token(Token = "0x4001004")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x164")]
		[SerializeField]
		private EventReference _oobAudioSnapshot;

		[Token(Token = "0x4001005")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x174")]
		private AudioHandle _oobAudioHandle;

		[Token(Token = "0x4001006")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		private IXrOobCameraTracker _oobCameraTracker;

		[Token(Token = "0x17000189")]
		public GameObject[] ControllerGameObjects
		{
			[Token(Token = "0x6001215")]
			[Address(RVA = "0xF114DC", Offset = "0xF114DC", VA = "0xF114DC")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001214")]
			[Address(RVA = "0xF114D4", Offset = "0xF114D4", VA = "0xF114D4")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x1700018A")]
		protected override Vector3 cameraOffset
		{
			[Token(Token = "0x6001216")]
			[Address(RVA = "0xF114E4", Offset = "0xF114E4", VA = "0xF114E4", Slot = "15")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x1700018B")]
		protected override float cameraOffsetY
		{
			[Token(Token = "0x6001217")]
			[Address(RVA = "0xF11500", Offset = "0xF11500", VA = "0xF11500", Slot = "16")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700018C")]
		public override Quaternion cameraRotation
		{
			[Token(Token = "0x6001218")]
			[Address(RVA = "0xF1151C", Offset = "0xF1151C", VA = "0xF1151C", Slot = "17")]
			get
			{
				return default(Quaternion);
			}
		}

		[Token(Token = "0x1700018D")]
		public int currentHandIndex
		{
			[Token(Token = "0x6001219")]
			[Address(RVA = "0xF1154C", Offset = "0xF1154C", VA = "0xF1154C")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700018E")]
		public override bool controlEnabled
		{
			[Token(Token = "0x600121A")]
			[Address(RVA = "0xF11554", Offset = "0xF11554", VA = "0xF11554", Slot = "20")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600121B")]
			[Address(RVA = "0xF1155C", Offset = "0xF1155C", VA = "0xF1155C", Slot = "21")]
			set
			{
			}
		}

		[Token(Token = "0x600121C")]
		[Address(RVA = "0xF1163C", Offset = "0xF1163C", VA = "0xF1163C", Slot = "18")]
		public override Transform GetRootTransform()
		{
			return null;
		}

		[Token(Token = "0x600121D")]
		[Address(RVA = "0xF11658", Offset = "0xF11658", VA = "0xF11658", Slot = "19")]
		protected override Vector3 GetFootLocation()
		{
			return default(Vector3);
		}

		[Token(Token = "0x600121E")]
		[Address(RVA = "0xF11754", Offset = "0xF11754", VA = "0xF11754", Slot = "23")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x600121F")]
		[Address(RVA = "0xF11D1C", Offset = "0xF11D1C", VA = "0xF11D1C", Slot = "6")]
		public override bool Initialise()
		{
			return default(bool);
		}

		[Token(Token = "0x6001220")]
		[Address(RVA = "0xF11FA4", Offset = "0xF11FA4", VA = "0xF11FA4", Slot = "10")]
		protected override void OnDestroy()
		{
		}

		[Token(Token = "0x6001221")]
		[Address(RVA = "0xF12080", Offset = "0xF12080", VA = "0xF12080", Slot = "7")]
		public override void OnUpdate(float dt)
		{
		}

		[Token(Token = "0x6001222")]
		[Address(RVA = "0xF12260", Offset = "0xF12260", VA = "0xF12260")]
		private void UpdateRayInteractors()
		{
		}

		[Token(Token = "0x6001223")]
		[Address(RVA = "0xF12434", Offset = "0xF12434", VA = "0xF12434")]
		private void UpdateOobCameraAudio()
		{
		}

		[Token(Token = "0x6001224")]
		[Address(RVA = "0xF12660", Offset = "0xF12660", VA = "0xF12660", Slot = "24")]
		protected override void PerformMovementUpdate(float dt)
		{
		}

		[Token(Token = "0x6001225")]
		[Address(RVA = "0xF126A0", Offset = "0xF126A0", VA = "0xF126A0")]
		private void UpdateCharacterController()
		{
		}

		[Token(Token = "0x6001226")]
		[Address(RVA = "0xF12B20", Offset = "0xF12B20", VA = "0xF12B20")]
		private void UpdateCrouchingState()
		{
		}

		[Token(Token = "0x6001227")]
		[Address(RVA = "0xF12CB0", Offset = "0xF12CB0", VA = "0xF12CB0")]
		private void SetCurrentXRPlayerState()
		{
		}

		[Token(Token = "0x6001228")]
		[Address(RVA = "0xF120AC", Offset = "0xF120AC", VA = "0xF120AC")]
		private void ChooseDominantHand()
		{
		}

		[Token(Token = "0x6001229")]
		[Address(RVA = "0xF12DC0", Offset = "0xF12DC0", VA = "0xF12DC0")]
		private void SetCurrentHandIndex(int index)
		{
		}

		[Token(Token = "0x600122A")]
		[Address(RVA = "0xF12E10", Offset = "0xF12E10", VA = "0xF12E10")]
		private void ActivateCurrentHand()
		{
		}

		[Token(Token = "0x600122B")]
		[Address(RVA = "0xF12E4C", Offset = "0xF12E4C", VA = "0xF12E4C", Slot = "26")]
		protected override bool TryMoveToPosition(Vector3 position, Quaternion rotation)
		{
			return default(bool);
		}

		[Token(Token = "0x600122C")]
		[Address(RVA = "0xF12F48", Offset = "0xF12F48", VA = "0xF12F48")]
		private void OnDrawGizmos()
		{
		}

		[Token(Token = "0x600122D")]
		[Address(RVA = "0xF12FB8", Offset = "0xF12FB8", VA = "0xF12FB8", Slot = "27")]
		public override bool Serialise(FlexBufferBuilder builder, ISceneObjectReferenceSerialiser objectSerialiser)
		{
			return default(bool);
		}

		[Token(Token = "0x600122E")]
		[Address(RVA = "0xF12FC0", Offset = "0xF12FC0", VA = "0xF12FC0", Slot = "28")]
		public override bool Deserialise(FlexBuffer.Map root, ISceneObjectReferenceDeserialiser objectDeserialiser)
		{
			return default(bool);
		}

		[Token(Token = "0x600122F")]
		[Address(RVA = "0xF13118", Offset = "0xF13118", VA = "0xF13118")]
		public VRPlayer()
		{
		}
	}
	[Token(Token = "0x2000322")]
	public class XRInputServiceHelper : MonoBehaviour, IInitialisable
	{
		[Token(Token = "0x4001007")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private InputActionAsset _fallbackActions;

		[Token(Token = "0x4001008")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private XRTrackedPoseDriver _headset;

		[Token(Token = "0x4001009")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private ActionBasedController _leftController;

		[Token(Token = "0x400100A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private ActionBasedController _rightController;

		[Token(Token = "0x400100B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private ActionBasedSnapTurnProvider _turnProviderSnap;

		[Token(Token = "0x400100C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private ActionBasedContinuousTurnProvider _turnProviderContinuous;

		[Token(Token = "0x400100D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private ActionBasedContinuousMoveProvider _moveProviderContinuous;

		[Token(Token = "0x400100E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private bool _wasFallbackEnabled;

		[Token(Token = "0x400100F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
		private bool _inputElementsInitialised;

		[Token(Token = "0x6001230")]
		[Address(RVA = "0xF13130", Offset = "0xF13130", VA = "0xF13130")]
		private void Start()
		{
		}

		[Token(Token = "0x6001231")]
		[Address(RVA = "0xF13990", Offset = "0xF13990", VA = "0xF13990")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001232")]
		[Address(RVA = "0xF139BC", Offset = "0xF139BC", VA = "0xF139BC", Slot = "4")]
		public bool Initialise()
		{
			return default(bool);
		}

		[Token(Token = "0x6001233")]
		[Address(RVA = "0xF13174", Offset = "0xF13174", VA = "0xF13174")]
		private void InitialiseInputElements()
		{
		}

		[Token(Token = "0x6001234")]
		[Address(RVA = "0xF139D8", Offset = "0xF139D8", VA = "0xF139D8")]
		public XRInputServiceHelper()
		{
		}
	}
}
namespace Player.Movement
{
	[Token(Token = "0x2000323")]
	public abstract class LocationBase
	{
		[Token(Token = "0x4001010")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static LocationBase s_rootScope;

		[Token(Token = "0x1700018F")]
		public static LocationBase RootLocation
		{
			[Token(Token = "0x6001235")]
			[Address(RVA = "0xF139E0", Offset = "0xF139E0", VA = "0xF139E0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000190")]
		public virtual string debugName
		{
			[Token(Token = "0x6001236")]
			[Address(RVA = "0xF13A38", Offset = "0xF13A38", VA = "0xF13A38", Slot = "4")]
			[CompilerGenerated]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000191")]
		public virtual ActionScopeBase interactionScope
		{
			[Token(Token = "0x6001237")]
			[Address(RVA = "0xF13A40", Offset = "0xF13A40", VA = "0xF13A40", Slot = "5")]
			[CompilerGenerated]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000192")]
		public virtual bool allowMovement
		{
			[Token(Token = "0x6001238")]
			[Address(RVA = "0xF13A48", Offset = "0xF13A48", VA = "0xF13A48", Slot = "6")]
			[CompilerGenerated]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001239")]
		[Address(RVA = "0xF13A50", Offset = "0xF13A50", VA = "0xF13A50")]
		protected LocationBase()
		{
		}
	}
	[Token(Token = "0x2000324")]
	public class LocationRoot : LocationBase
	{
		[Token(Token = "0x17000193")]
		public override string debugName
		{
			[Token(Token = "0x600123B")]
			[Address(RVA = "0xF13B30", Offset = "0xF13B30", VA = "0xF13B30", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000194")]
		public override ActionScopeBase interactionScope
		{
			[Token(Token = "0x600123C")]
			[Address(RVA = "0xF13B70", Offset = "0xF13B70", VA = "0xF13B70", Slot = "5")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000195")]
		public override bool allowMovement
		{
			[Token(Token = "0x600123D")]
			[Address(RVA = "0xF13BF8", Offset = "0xF13BF8", VA = "0xF13BF8", Slot = "6")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x600123E")]
		[Address(RVA = "0xF13AD8", Offset = "0xF13AD8", VA = "0xF13AD8")]
		public LocationRoot()
		{
		}
	}
	[Token(Token = "0x2000325")]
	public class MoveTarget : MonoBehaviour
	{
		[Token(Token = "0x2000326")]
		public class FixedLocation : LocationBase
		{
			[Token(Token = "0x4001016")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private string _id;

			[Token(Token = "0x4001017")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private Vector3 _position;

			[Token(Token = "0x4001018")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private ActionScopeBase _interactionScope;

			[Token(Token = "0x17000197")]
			public override string debugName
			{
				[Token(Token = "0x6001242")]
				[Address(RVA = "0xF13E84", Offset = "0xF13E84", VA = "0xF13E84", Slot = "4")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000198")]
			public override ActionScopeBase interactionScope
			{
				[Token(Token = "0x6001243")]
				[Address(RVA = "0xF13E8C", Offset = "0xF13E8C", VA = "0xF13E8C", Slot = "5")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000199")]
			public override bool allowMovement
			{
				[Token(Token = "0x6001244")]
				[Address(RVA = "0xF13E94", Offset = "0xF13E94", VA = "0xF13E94", Slot = "6")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x1700019A")]
			public Vector3 position
			{
				[Token(Token = "0x6001245")]
				[Address(RVA = "0xF13E9C", Offset = "0xF13E9C", VA = "0xF13E9C")]
				get
				{
					return default(Vector3);
				}
			}

			[Token(Token = "0x6001246")]
			[Address(RVA = "0xF13DD0", Offset = "0xF13DD0", VA = "0xF13DD0")]
			public FixedLocation(string id, Vector3 position, ActionScopeBase interactionScope)
			{
			}
		}

		[Token(Token = "0x4001014")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private InteractionScope _locationScope;

		[Token(Token = "0x4001015")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private LocationBase _location;

		[Token(Token = "0x17000196")]
		public LocationBase location
		{
			[Token(Token = "0x600123F")]
			[Address(RVA = "0xF13C00", Offset = "0xF13C00", VA = "0xF13C00")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001240")]
		[Address(RVA = "0xF13C94", Offset = "0xF13C94", VA = "0xF13C94", Slot = "4")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x6001241")]
		[Address(RVA = "0xF13E7C", Offset = "0xF13E7C", VA = "0xF13E7C")]
		public MoveTarget()
		{
		}
	}
	[Token(Token = "0x2000327")]
	public abstract class MoveTargetRecenterInteraction_Base : Actions.InteractionBase
	{
		[Token(Token = "0x4001019")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		protected MoveTarget target;

		[Token(Token = "0x1700019B")]
		public override string Name
		{
			[Token(Token = "0x6001247")]
			[Address(RVA = "0xF13EA8", Offset = "0xF13EA8", VA = "0xF13EA8", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001248")]
		[Address(RVA = "0xF13EE8", Offset = "0xF13EE8", VA = "0xF13EE8", Slot = "13")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6001249")]
		[Address(RVA = "0xF13F4C", Offset = "0xF13F4C", VA = "0xF13F4C")]
		protected MoveTargetRecenterInteraction_Base()
		{
		}
	}
	[Token(Token = "0x2000328")]
	public abstract class MoveTargetRecenterInteraction_XR : MoveTargetRecenterInteraction_Base
	{
		[Token(Token = "0x600124A")]
		[Address(RVA = "0xF13F54", Offset = "0xF13F54", VA = "0xF13F54", Slot = "11")]
		protected override bool Iternal_CanPerform(InteractorBase interactor)
		{
			return default(bool);
		}

		[Token(Token = "0x600124B")]
		[Address(RVA = "0xF14000", Offset = "0xF14000", VA = "0xF14000", Slot = "12")]
		protected override void Iternal_Perform(InteractorBase interactor)
		{
		}

		[Token(Token = "0x600124C")]
		[Address(RVA = "0xF140F8", Offset = "0xF140F8", VA = "0xF140F8")]
		protected MoveTargetRecenterInteraction_XR()
		{
		}
	}
	[Token(Token = "0x2000329")]
	public abstract class MoveTargetRecenterInteraction_FlatScreen : MoveTargetRecenterInteraction_Base
	{
		[Token(Token = "0x600124D")]
		[Address(RVA = "0xF14100", Offset = "0xF14100", VA = "0xF14100", Slot = "11")]
		protected override bool Iternal_CanPerform(InteractorBase interactor)
		{
			return default(bool);
		}

		[Token(Token = "0x600124E")]
		[Address(RVA = "0xF14108", Offset = "0xF14108", VA = "0xF14108", Slot = "12")]
		protected override void Iternal_Perform(InteractorBase interactor)
		{
		}

		[Token(Token = "0x600124F")]
		[Address(RVA = "0xF1410C", Offset = "0xF1410C", VA = "0xF1410C")]
		protected MoveTargetRecenterInteraction_FlatScreen()
		{
		}
	}
	[Token(Token = "0x200032A")]
	[RequireComponent(typeof(MoveTarget))]
	[RequireComponent(typeof(InteractableBase))]
	public class MoveTargetRecenterInteraction : MoveTargetRecenterInteraction_XR
	{
		[Token(Token = "0x6001250")]
		[Address(RVA = "0xF14114", Offset = "0xF14114", VA = "0xF14114")]
		public MoveTargetRecenterInteraction()
		{
		}
	}
}
namespace Platform
{
	[Token(Token = "0x200032B")]
	public abstract class GameCorePlatformManager : MonoBehaviour
	{
		[Token(Token = "0x6001251")]
		[Address(RVA = "0xF1411C", Offset = "0xF1411C", VA = "0xF1411C")]
		protected GameCorePlatformManager()
		{
		}
	}
	[Token(Token = "0x200032C")]
	public abstract class OculusPlatformManager : PlatformManagerBase
	{
		[Token(Token = "0x400101A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly string c_appId;

		[Token(Token = "0x400101B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static List<XRDisplaySubsystem> s_tempDisplaySubsystems;

		[Token(Token = "0x400101C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static List<XRDisplaySubsystemDescriptor> s_tempDisplaySubsystemDescriptors;

		[Token(Token = "0x400101D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static List<XRInputSubsystem> s_tempInputSubsystems;

		[Token(Token = "0x400101E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private XRDisplaySubsystem _displaySubsystem;

		[Token(Token = "0x400101F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private XRDisplaySubsystemDescriptor _displaySubsystemDescriptor;

		[Token(Token = "0x4001020")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private XRInputSubsystem _inputSubsystem;

		[Token(Token = "0x4001021")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private bool _platformInitRequested;

		[Token(Token = "0x4001022")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
		private bool _initialised;

		[Token(Token = "0x4001023")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5A")]
		private bool _appPause;

		[Token(Token = "0x4001024")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5B")]
		private bool _appFocus;

		[Token(Token = "0x4001025")]
		private const bool skipEntitlementCheck = false;

		[Token(Token = "0x6001252")]
		[Address(RVA = "0xF14124", Offset = "0xF14124", VA = "0xF14124")]
		static OculusPlatformManager()
		{
		}

		[Token(Token = "0x6001253")]
		[Address(RVA = "0xF142E0", Offset = "0xF142E0", VA = "0xF142E0")]
		public OculusPlatformManager()
		{
		}

		[Token(Token = "0x6001254")]
		[Address(RVA = "0xF142F8", Offset = "0xF142F8", VA = "0xF142F8", Slot = "29")]
		public override void OnStartUp()
		{
		}

		[Token(Token = "0x6001255")]
		[Address(RVA = "0xF14918", Offset = "0xF14918", VA = "0xF14918", Slot = "30")]
		public override void OnCleanUp()
		{
		}

		[Token(Token = "0x6001256")]
		[Address(RVA = "0xF14458", Offset = "0xF14458", VA = "0xF14458")]
		private void Setup()
		{
		}

		[Token(Token = "0x6001257")]
		[Address(RVA = "0xF1496C", Offset = "0xF1496C", VA = "0xF1496C")]
		private void OnEntitlementRequestComplete(Oculus.Platform.Message result)
		{
		}

		[Token(Token = "0x6001258")]
		[Address(RVA = "0xF14AD8", Offset = "0xF14AD8", VA = "0xF14AD8", Slot = "28")]
		public override bool HasFocus()
		{
			return default(bool);
		}

		[Token(Token = "0x6001259")]
		[Address(RVA = "0xF14B50", Offset = "0xF14B50", VA = "0xF14B50")]
		private void OnApplicationPause(bool pause)
		{
		}

		[Token(Token = "0x600125A")]
		[Address(RVA = "0xF14B5C", Offset = "0xF14B5C", VA = "0xF14B5C")]
		private void OnApplicationFocus(bool focus)
		{
		}

		[Token(Token = "0x600125B")]
		[Address(RVA = "0xF14B68", Offset = "0xF14B68", VA = "0xF14B68", Slot = "31")]
		public override void OnUpdate(float deltaTime)
		{
		}

		[Token(Token = "0x600125C")]
		[Address(RVA = "0xF1491C", Offset = "0xF1491C", VA = "0xF1491C")]
		private static void LogEnvironmentDetails()
		{
		}
	}
	[Token(Token = "0x200032D")]
	public class PlatformManager : OculusPlatformManager
	{
		[Token(Token = "0x600125D")]
		[Address(RVA = "0xF14D5C", Offset = "0xF14D5C", VA = "0xF14D5C")]
		public PlatformManager()
		{
		}
	}
	[Token(Token = "0x200032E")]
	public interface IPlatformManager
	{
		[Token(Token = "0x200032F")]
		public delegate void OnErrorHandled();

		[Token(Token = "0x1700019C")]
		IUser user
		{
			[Token(Token = "0x600125E")]
			get;
		}

		[Token(Token = "0x1700019D")]
		bool requiresUserEngagement
		{
			[Token(Token = "0x600125F")]
			get;
		}

		[Token(Token = "0x1700019E")]
		bool requiresControllerDisconnectedMessage
		{
			[Token(Token = "0x6001260")]
			get;
		}

		[Token(Token = "0x1700019F")]
		string platformAppId
		{
			[Token(Token = "0x6001261")]
			get;
		}

		[Token(Token = "0x170001A0")]
		float autosaveMinimumDelaySeconds
		{
			[Token(Token = "0x6001262")]
			get;
		}

		[Token(Token = "0x170001A1")]
		bool SwapSouthAndEastGamepadBindings
		{
			[Token(Token = "0x6001268")]
			get;
		}

		[Token(Token = "0x170001A2")]
		bool SwapSubmitAndCancelUsageBindings
		{
			[Token(Token = "0x6001269")]
			get;
		}

		[Token(Token = "0x6001263")]
		bool HasFocus();

		[Token(Token = "0x6001264")]
		void EnableBoostMode();

		[Token(Token = "0x6001265")]
		void DisableBoostMode();

		[Token(Token = "0x6001266")]
		void ControllerDisconnected();

		[Token(Token = "0x6001267")]
		void ControllerReconnected();

		[Token(Token = "0x600126A")]
		void ShowSaveGameError(SaveGameError error, OnErrorHandled errorHandledCallback);

		[Token(Token = "0x600126B")]
		void OnSeenBootFlow();

		[Token(Token = "0x600126C")]
		bool ShouldSkipBootFlow();
	}
	[Token(Token = "0x2000330")]
	public abstract class PlatformManagerBase : MonoBehaviour, IService, IPlatformManager
	{
		[Token(Token = "0x4001026")]
		public const string DefaultUsername = "Default";

		[Token(Token = "0x4001027")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected IUser _user;

		[Token(Token = "0x4001028")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private DialogueBoxId _controllerDialogId;

		[Token(Token = "0x4001029")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private DialogueBoxId _saveDialogId;

		[Token(Token = "0x400102A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private IPlatformManager.OnErrorHandled _errorHandledCallback;

		[Token(Token = "0x400102B")]
		private const string c_frontEndTextKey = "FrontEndText";

		[Token(Token = "0x400102C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private LocalizedStringTable _frontEndTextTable;

		[Token(Token = "0x400102D")]
		private const string c_UnknownErrorLocalisationKey = "Unknown";

		[Token(Token = "0x170001A3")]
		public virtual bool requiresUserEngagement
		{
			[Token(Token = "0x6001271")]
			[Address(RVA = "0xF14EC8", Offset = "0xF14EC8", VA = "0xF14EC8", Slot = "22")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001A4")]
		public virtual bool requiresControllerDisconnectedMessage
		{
			[Token(Token = "0x6001272")]
			[Address(RVA = "0xF14ED0", Offset = "0xF14ED0", VA = "0xF14ED0", Slot = "23")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001A5")]
		public virtual string platformAppId
		{
			[Token(Token = "0x6001273")]
			[Address(RVA = "0xF14ED8", Offset = "0xF14ED8", VA = "0xF14ED8", Slot = "24")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001A6")]
		public virtual float autosaveMinimumDelaySeconds
		{
			[Token(Token = "0x6001274")]
			[Address(RVA = "0xF14F18", Offset = "0xF14F18", VA = "0xF14F18", Slot = "25")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170001A7")]
		public virtual bool SwapSouthAndEastGamepadBindings
		{
			[Token(Token = "0x6001275")]
			[Address(RVA = "0xF14F20", Offset = "0xF14F20", VA = "0xF14F20", Slot = "26")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001A8")]
		public virtual bool SwapSubmitAndCancelUsageBindings
		{
			[Token(Token = "0x6001276")]
			[Address(RVA = "0xF14F28", Offset = "0xF14F28", VA = "0xF14F28", Slot = "27")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001A9")]
		public IUser user
		{
			[Token(Token = "0x600127B")]
			[Address(RVA = "0xF14F38", Offset = "0xF14F38", VA = "0xF14F38", Slot = "7")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001277")]
		[Address(RVA = "0xF14F30", Offset = "0xF14F30", VA = "0xF14F30", Slot = "28")]
		public virtual bool HasFocus()
		{
			return default(bool);
		}

		[Token(Token = "0x6001278")]
		[Address(RVA = "0xF14388", Offset = "0xF14388", VA = "0xF14388", Slot = "29")]
		public virtual void OnStartUp()
		{
		}

		[Token(Token = "0x6001279")]
		public abstract void OnCleanUp();

		[Token(Token = "0x600127A")]
		public abstract void OnUpdate(float deltaTime);

		[Token(Token = "0x600127C")]
		[Address(RVA = "0xF14F40", Offset = "0xF14F40", VA = "0xF14F40", Slot = "32")]
		public virtual void OnPrimaryUserEngaged(IUser engagedUser)
		{
		}

		[Token(Token = "0x600127D")]
		[Address(RVA = "0xF14F48", Offset = "0xF14F48", VA = "0xF14F48", Slot = "33")]
		public virtual void OnPrimaryUserDisengaged()
		{
		}

		[Token(Token = "0x600127E")]
		[Address(RVA = "0xF14FC8", Offset = "0xF14FC8", VA = "0xF14FC8", Slot = "34")]
		public virtual void EnableBoostMode()
		{
		}

		[Token(Token = "0x600127F")]
		[Address(RVA = "0xF14FCC", Offset = "0xF14FCC", VA = "0xF14FCC", Slot = "35")]
		public virtual void DisableBoostMode()
		{
		}

		[Token(Token = "0x6001280")]
		[Address(RVA = "0xF14FD0", Offset = "0xF14FD0", VA = "0xF14FD0", Slot = "36")]
		public virtual void ControllerDisconnected()
		{
		}

		[Token(Token = "0x6001281")]
		[Address(RVA = "0xF15140", Offset = "0xF15140", VA = "0xF15140", Slot = "37")]
		public virtual void ControllerReconnected()
		{
		}

		[Token(Token = "0x6001282")]
		[Address(RVA = "0xF15224", Offset = "0xF15224", VA = "0xF15224", Slot = "38")]
		public virtual void ShowSaveGameError(SaveGameError error, IPlatformManager.OnErrorHandled errorHandledCallback)
		{
		}

		[Token(Token = "0x6001283")]
		[Address(RVA = "0xF15584", Offset = "0xF15584", VA = "0xF15584", Slot = "39")]
		public virtual void OnSeenBootFlow()
		{
		}

		[Token(Token = "0x6001284")]
		[Address(RVA = "0xF15588", Offset = "0xF15588", VA = "0xF15588", Slot = "40")]
		public virtual bool ShouldSkipBootFlow()
		{
			return default(bool);
		}

		[Token(Token = "0x6001285")]
		[Address(RVA = "0xF15590", Offset = "0xF15590", VA = "0xF15590")]
		private void OnSaveErrorDismissed()
		{
		}

		[Token(Token = "0x6001286")]
		[Address(RVA = "0xF142F0", Offset = "0xF142F0", VA = "0xF142F0")]
		protected PlatformManagerBase()
		{
		}
	}
	[Token(Token = "0x2000331")]
	public abstract class PS4PlatformManager : MonoBehaviour
	{
		[Token(Token = "0x6001287")]
		[Address(RVA = "0xF1569C", Offset = "0xF1569C", VA = "0xF1569C")]
		protected PS4PlatformManager()
		{
		}
	}
	[Token(Token = "0x2000332")]
	public abstract class PS5PlatformManager : MonoBehaviour
	{
		[Token(Token = "0x6001288")]
		[Address(RVA = "0xF156A4", Offset = "0xF156A4", VA = "0xF156A4")]
		protected PS5PlatformManager()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000333")]
	[DisplayName("Sony Startup Selector", null)]
	public class SonyStartupLocaleSelector : IStartupLocaleSelector
	{
		[Token(Token = "0x6001289")]
		[Address(RVA = "0xF156AC", Offset = "0xF156AC", VA = "0xF156AC", Slot = "4")]
		public Locale GetStartupLocale(ILocalesProvider availableLocales)
		{
			return null;
		}

		[Token(Token = "0x600128A")]
		[Address(RVA = "0xF156B4", Offset = "0xF156B4", VA = "0xF156B4")]
		public SonyStartupLocaleSelector()
		{
		}
	}
	[Token(Token = "0x2000334")]
	public abstract class SteamPlatformManager
	{
		[Token(Token = "0x600128B")]
		[Address(RVA = "0xF156BC", Offset = "0xF156BC", VA = "0xF156BC")]
		protected SteamPlatformManager()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000335")]
	[DisplayName("Steam Startup Selector", null)]
	public class StartupSelectorExample : IStartupLocaleSelector
	{
		[Token(Token = "0x600128C")]
		[Address(RVA = "0xF156C4", Offset = "0xF156C4", VA = "0xF156C4", Slot = "4")]
		public Locale GetStartupLocale(ILocalesProvider availableLocales)
		{
			return null;
		}

		[Token(Token = "0x600128D")]
		[Address(RVA = "0xF156CC", Offset = "0xF156CC", VA = "0xF156CC")]
		private string ConvertLanguageCodeToLocale(string languageCode)
		{
			return null;
		}

		[Token(Token = "0x600128E")]
		[Address(RVA = "0xF15AC4", Offset = "0xF15AC4", VA = "0xF15AC4")]
		public StartupSelectorExample()
		{
		}
	}
	[Token(Token = "0x2000336")]
	public class SteamVRPlatformManager
	{
		[Token(Token = "0x600128F")]
		[Address(RVA = "0xF15ACC", Offset = "0xF15ACC", VA = "0xF15ACC")]
		public SteamVRPlatformManager()
		{
		}
	}
	[Token(Token = "0x2000337")]
	public abstract class SwitchPlatformManager : MonoBehaviour
	{
		[Token(Token = "0x6001290")]
		[Address(RVA = "0xF15AD4", Offset = "0xF15AD4", VA = "0xF15AD4")]
		protected SwitchPlatformManager()
		{
		}
	}
}
namespace Activities
{
	[Token(Token = "0x2000338")]
	public delegate void ActivityResult(ActivityDefinition activityDef, bool succeeded);
	[Token(Token = "0x2000339")]
	public delegate void ActivityRequestedEvent(string activityId);
	[Token(Token = "0x200033A")]
	public enum ActivityOutcome
	{
		[Token(Token = "0x400102F")]
		completed,
		[Token(Token = "0x4001030")]
		failed,
		[Token(Token = "0x4001031")]
		abandoned
	}
	[Token(Token = "0x200033B")]
	public class SerialisedState
	{
		[Token(Token = "0x4001032")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string activityId;

		[Token(Token = "0x4001033")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int currentTaskIndex;

		[Token(Token = "0x4001034")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int lastTaskIndex;

		[Token(Token = "0x6001299")]
		[Address(RVA = "0xF15DFC", Offset = "0xF15DFC", VA = "0xF15DFC")]
		public SerialisedState()
		{
		}
	}
	[Token(Token = "0x200033C")]
	public interface IActivitiesServiceImpl
	{
		[Token(Token = "0x600129A")]
		void StartUp();

		[Token(Token = "0x600129B")]
		void ShutDown();

		[Token(Token = "0x600129C")]
		void Update(float deltaTime);

		[Token(Token = "0x600129D")]
		bool IsRelevantToThisPlatform(ActivityDefinition activityDef);

		[Token(Token = "0x600129E")]
		void ActivityTerminate();

		[Token(Token = "0x600129F")]
		void ActivityStart(ActivityDefinition activityDef, [Optional] ActivityResult resultCallback);

		[Token(Token = "0x60012A0")]
		void ActivityEnd(ActivityDefinition activityDef, ActivityOutcome outcome, [Optional] ActivityResult resultCallback);

		[Token(Token = "0x60012A1")]
		void ActivityEnd(string activityId, ActivityOutcome outcome, [Optional] ActivityResult resultCallback);

		[Token(Token = "0x60012A2")]
		void ActivityResume(string activityId, string[] activeTaskIds, string[] completedTaskIds, [Optional] ActivityResult resultCallback);

		[Token(Token = "0x60012A3")]
		void ChangeActivityTaskAvailability(string activityId, ActivityDefinition[] available, ActivityDefinition[] unavailable, [Optional] ActivityResult resultCallback);

		[Token(Token = "0x60012A4")]
		void RegisterForActivityRequestedEvent(ActivityRequestedEvent onActivityRequested);
	}
	[Token(Token = "0x200033D")]
	public class ActivitiesService : MonoBehaviour, IService
	{
		[Token(Token = "0x4001035")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static int kInvalidIndex;

		[Token(Token = "0x4001036")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private List<ActivityDefinition> _activityDefinitions;

		[Token(Token = "0x4001037")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private IActivitiesServiceImpl _impl;

		[Token(Token = "0x4001038")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private string _activityId;

		[Token(Token = "0x4001039")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private ActivityDefinition _currentlyActive;

		[Token(Token = "0x400103A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private ActivityDefinition _lastCompleted;

		[Token(Token = "0x400103B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private string _pendingRequestedActivity;

		[Token(Token = "0x60012A5")]
		[Address(RVA = "0xF15E98", Offset = "0xF15E98", VA = "0xF15E98", Slot = "4")]
		public void OnStartUp()
		{
		}

		[Token(Token = "0x60012A6")]
		[Address(RVA = "0xF160B0", Offset = "0xF160B0", VA = "0xF160B0", Slot = "5")]
		public void OnCleanUp()
		{
		}

		[Token(Token = "0x60012A7")]
		[Address(RVA = "0xF1616C", Offset = "0xF1616C", VA = "0xF1616C", Slot = "6")]
		public void OnUpdate(float deltaTime)
		{
		}

		[Token(Token = "0x60012A8")]
		[Address(RVA = "0xF1622C", Offset = "0xF1622C", VA = "0xF1622C")]
		public string GetCurrentActivityDisplayString()
		{
			return null;
		}

		[Token(Token = "0x60012A9")]
		[Address(RVA = "0xF162D8", Offset = "0xF162D8", VA = "0xF162D8")]
		public string GetPendingRequestedActivityId()
		{
			return null;
		}

		[Token(Token = "0x60012AA")]
		[Address(RVA = "0xF162E0", Offset = "0xF162E0", VA = "0xF162E0")]
		public void ClearPendingRequestedActivity()
		{
		}

		[Token(Token = "0x60012AB")]
		[Address(RVA = "0xF162EC", Offset = "0xF162EC", VA = "0xF162EC")]
		public bool IsCurrentActivity(string activityId)
		{
			return default(bool);
		}

		[Token(Token = "0x60012AC")]
		[Address(RVA = "0xF16340", Offset = "0xF16340", VA = "0xF16340")]
		public void CompleteCurrentTask()
		{
		}

		[Token(Token = "0x60012AD")]
		[Address(RVA = "0xF16918", Offset = "0xF16918", VA = "0xF16918")]
		private bool AnyMoreTasksForPlatformActivity(ActivityDefinition current)
		{
			return default(bool);
		}

		[Token(Token = "0x60012AE")]
		[Address(RVA = "0xF16B90", Offset = "0xF16B90", VA = "0xF16B90")]
		private void OnActivityEndComplete(ActivityDefinition activityDef, bool succeeded)
		{
		}

		[Token(Token = "0x60012AF")]
		[Address(RVA = "0xF16BEC", Offset = "0xF16BEC", VA = "0xF16BEC")]
		private void OnTaskAvailabilityChangeComplete(ActivityDefinition activityDef, bool succeeded)
		{
		}

		[Token(Token = "0x60012B0")]
		[Address(RVA = "0xF16C48", Offset = "0xF16C48", VA = "0xF16C48")]
		public void StartNewTask(ActivityDefinition activityDef)
		{
		}

		[Token(Token = "0x60012B1")]
		[Address(RVA = "0xF16F1C", Offset = "0xF16F1C", VA = "0xF16F1C")]
		private void OnActivityStartComplete(ActivityDefinition activityDef, bool succeeded)
		{
		}

		[Token(Token = "0x60012B2")]
		[Address(RVA = "0xF16048", Offset = "0xF16048", VA = "0xF16048")]
		private void CreateActivitiesServiceImpl()
		{
		}

		[Token(Token = "0x60012B3")]
		[Address(RVA = "0xF16F80", Offset = "0xF16F80", VA = "0xF16F80")]
		private void OnActivityActivationRequested(string activityId)
		{
		}

		[Token(Token = "0x60012B4")]
		[Address(RVA = "0xF16F88", Offset = "0xF16F88", VA = "0xF16F88")]
		public void OnPostDeserialise()
		{
		}

		[Token(Token = "0x60012B5")]
		[Address(RVA = "0xF17770", Offset = "0xF17770", VA = "0xF17770")]
		public void SerialiseState(SerialisedState toSave)
		{
		}

		[Token(Token = "0x60012B6")]
		[Address(RVA = "0xF178A8", Offset = "0xF178A8", VA = "0xF178A8")]
		public void DeserialiseState(SerialisedState loadedState)
		{
		}

		[Token(Token = "0x60012B7")]
		[Address(RVA = "0xF17A28", Offset = "0xF17A28", VA = "0xF17A28")]
		public ActivitiesService()
		{
		}
	}
	[Token(Token = "0x200033E")]
	public class NullActivitiesServiceImpl : IActivitiesServiceImpl
	{
		[Token(Token = "0x60012B9")]
		[Address(RVA = "0xF17AFC", Offset = "0xF17AFC", VA = "0xF17AFC", Slot = "4")]
		public void StartUp()
		{
		}

		[Token(Token = "0x60012BA")]
		[Address(RVA = "0xF17B00", Offset = "0xF17B00", VA = "0xF17B00", Slot = "5")]
		public void ShutDown()
		{
		}

		[Token(Token = "0x60012BB")]
		[Address(RVA = "0xF17B04", Offset = "0xF17B04", VA = "0xF17B04", Slot = "6")]
		public void Update(float deltaTime)
		{
		}

		[Token(Token = "0x60012BC")]
		[Address(RVA = "0xF17B08", Offset = "0xF17B08", VA = "0xF17B08", Slot = "7")]
		public bool IsRelevantToThisPlatform(ActivityDefinition activityDef)
		{
			return default(bool);
		}

		[Token(Token = "0x60012BD")]
		[Address(RVA = "0xF17B10", Offset = "0xF17B10", VA = "0xF17B10", Slot = "8")]
		public void ActivityTerminate()
		{
		}

		[Token(Token = "0x60012BE")]
		[Address(RVA = "0xF17B14", Offset = "0xF17B14", VA = "0xF17B14", Slot = "9")]
		public void ActivityStart(ActivityDefinition activityDef, [Optional] ActivityResult resultCallback)
		{
		}

		[Token(Token = "0x60012BF")]
		[Address(RVA = "0xF17B30", Offset = "0xF17B30", VA = "0xF17B30", Slot = "10")]
		public void ActivityEnd(ActivityDefinition activityDef, ActivityOutcome outcome, [Optional] ActivityResult resultCallback)
		{
		}

		[Token(Token = "0x60012C0")]
		[Address(RVA = "0xF17B4C", Offset = "0xF17B4C", VA = "0xF17B4C", Slot = "11")]
		public void ActivityEnd(string activityId, ActivityOutcome outcome, [Optional] ActivityResult resultCallback)
		{
		}

		[Token(Token = "0x60012C1")]
		[Address(RVA = "0xF17B6C", Offset = "0xF17B6C", VA = "0xF17B6C", Slot = "12")]
		public void ActivityResume(string activityId, string[] activeTaskIds, string[] completedTaskIds, [Optional] ActivityResult resultCallback)
		{
		}

		[Token(Token = "0x60012C2")]
		[Address(RVA = "0xF17B8C", Offset = "0xF17B8C", VA = "0xF17B8C", Slot = "13")]
		public void ChangeActivityTaskAvailability(string activityId, ActivityDefinition[] available, ActivityDefinition[] unavailable, [Optional] ActivityResult resultCallback)
		{
		}

		[Token(Token = "0x60012C3")]
		[Address(RVA = "0xF17BAC", Offset = "0xF17BAC", VA = "0xF17BAC", Slot = "14")]
		public void RegisterForActivityRequestedEvent(ActivityRequestedEvent onActivityRequested)
		{
		}

		[Token(Token = "0x60012C4")]
		[Address(RVA = "0xF16F78", Offset = "0xF16F78", VA = "0xF16F78")]
		public NullActivitiesServiceImpl()
		{
		}
	}
}
namespace RadioAchievements
{
	[Token(Token = "0x200033F")]
	[CreateAssetMenu(fileName = "Achievement", menuName = "Team17/Achievements/Create Achievement Definition")]
	public class AchievementDefinition : ScriptableObject, IOculusAchievementID, IAchievementID
	{
		[Token(Token = "0x400103C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private string m_SteamID;

		[Token(Token = "0x400103D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private string m_GamecoreID;

		[Token(Token = "0x400103E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private string m_OculusID;

		[Token(Token = "0x400103F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private int m_PS5ID;

		[Token(Token = "0x4001040")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[SerializeField]
		private int m_PS4ID;

		[Token(Token = "0x170001AA")]
		private string Team17.Platform.Achievements.Oculus.IOculusAchievementID.ID
		{
			[Token(Token = "0x60012C5")]
			[Address(RVA = "0xF17BB0", Offset = "0xF17BB0", VA = "0xF17BB0", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60012C6")]
		[Address(RVA = "0xF17BB8", Offset = "0xF17BB8", VA = "0xF17BB8")]
		public AchievementDefinition()
		{
		}
	}
	[Token(Token = "0x2000340")]
	[CreateAssetMenu(fileName = "Progress", menuName = "Team17/Achievements/Create Progress Definition")]
	public class ProgressDefinition : ScriptableObject, IOculusProgressID, IProgressID
	{
		[Token(Token = "0x4001041")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private string m_SteamID;

		[Token(Token = "0x4001042")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private string m_GamecoreID;

		[Token(Token = "0x4001043")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private string m_OculusID;

		[Token(Token = "0x4001044")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private int m_PS5ID;

		[Token(Token = "0x4001045")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[SerializeField]
		private int m_PS4ID;

		[Token(Token = "0x170001AB")]
		private string Team17.Platform.Achievements.Oculus.IOculusProgressID.ID
		{
			[Token(Token = "0x60012C7")]
			[Address(RVA = "0xF17BC0", Offset = "0xF17BC0", VA = "0xF17BC0", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60012C8")]
		[Address(RVA = "0xF17BC8", Offset = "0xF17BC8", VA = "0xF17BC8")]
		public ProgressDefinition()
		{
		}
	}
}
namespace Occlusion
{
	[Token(Token = "0x2000341")]
	public class GameObjectEqualityComparer : IEqualityComparer<UnityEngine.Object>
	{
		[Token(Token = "0x60012C9")]
		[Address(RVA = "0xF17BD0", Offset = "0xF17BD0", VA = "0xF17BD0", Slot = "4")]
		public bool Equals(UnityEngine.Object x, UnityEngine.Object y)
		{
			return default(bool);
		}

		[Token(Token = "0x60012CA")]
		[Address(RVA = "0xF17CFC", Offset = "0xF17CFC", VA = "0xF17CFC", Slot = "5")]
		public int GetHashCode(UnityEngine.Object obj)
		{
			return default(int);
		}

		[Token(Token = "0x60012CB")]
		[Address(RVA = "0xF17D14", Offset = "0xF17D14", VA = "0xF17D14")]
		public GameObjectEqualityComparer()
		{
		}
	}
	[Token(Token = "0x2000342")]
	public interface IOcclusionPortal
	{
		[Token(Token = "0x170001AC")]
		UnityEngine.Plane plane
		{
			[Token(Token = "0x60012CC")]
			get;
		}

		[Token(Token = "0x170001AD")]
		Matrix4x4 matrix
		{
			[Token(Token = "0x60012CD")]
			get;
		}

		[Token(Token = "0x170001AE")]
		Vector2 extents
		{
			[Token(Token = "0x60012CE")]
			get;
		}
	}
	[Token(Token = "0x2000343")]
	public interface IOcclusionVolumeProvider
	{
		[Token(Token = "0x170001AF")]
		Transform root
		{
			[Token(Token = "0x60012CF")]
			get;
		}

		[Token(Token = "0x170001B0")]
		Bounds[] volumes
		{
			[Token(Token = "0x60012D0")]
			get;
		}
	}
	[Serializable]
	[Token(Token = "0x2000344")]
	[DisallowMultipleComponent]
	public class Occludee : MonoBehaviour, IInitialisable, IOccludee
	{
		[Token(Token = "0x4001046")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool doesNotMoveBetweenOcclusionVolumes;

		[Token(Token = "0x4001047")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		[ReadOnly]
		[SerializeField]
		private bool isStaticOccludee;

		[Token(Token = "0x4001048")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[ReadOnly]
		public int occludeeIdInVolume;

		[Token(Token = "0x4001049")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[ReadOnly]
		public OcclusionVolume currentOcclusionVolume;

		[Token(Token = "0x400104A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private List<MonoBehaviour> relevantComponents;

		[Token(Token = "0x400104B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool registeredAsDynamic;

		[Token(Token = "0x170001B1")]
		public ReadOnlyCollection<MonoBehaviour> RelevantComponents
		{
			[Token(Token = "0x60012D1")]
			[Address(RVA = "0xF17D1C", Offset = "0xF17D1C", VA = "0xF17D1C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001B2")]
		public bool MarkedAsTeleported
		{
			[Token(Token = "0x60012D2")]
			[Address(RVA = "0xF17D6C", Offset = "0xF17D6C", VA = "0xF17D6C")]
			[CompilerGenerated]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60012D3")]
			[Address(RVA = "0xF17D74", Offset = "0xF17D74", VA = "0xF17D74")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x170001B3")]
		public bool StayInVolumeWithPlayer
		{
			[Token(Token = "0x60012D4")]
			[Address(RVA = "0xF17D80", Offset = "0xF17D80", VA = "0xF17D80")]
			[CompilerGenerated]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60012D5")]
			[Address(RVA = "0xF17D88", Offset = "0xF17D88", VA = "0xF17D88")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x60012D6")]
		[Address(RVA = "0xF17D94", Offset = "0xF17D94", VA = "0xF17D94", Slot = "4")]
		public bool Initialise()
		{
			return default(bool);
		}

		[Token(Token = "0x60012D7")]
		[Address(RVA = "0xF17E28", Offset = "0xF17E28", VA = "0xF17E28")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60012D8")]
		[Address(RVA = "0xF17E6C", Offset = "0xF17E6C", VA = "0xF17E6C")]
		public OcclusionState GetCurrentOcclusionState()
		{
			return default(OcclusionState);
		}

		[Token(Token = "0x60012D9")]
		[Address(RVA = "0xF17F0C", Offset = "0xF17F0C", VA = "0xF17F0C", Slot = "5")]
		public void AddNewRelevantComponent(MonoBehaviour component)
		{
		}

		[Token(Token = "0x60012DA")]
		[Address(RVA = "0xF17FBC", Offset = "0xF17FBC", VA = "0xF17FBC", Slot = "6")]
		public void RemoveRelevantComponent(MonoBehaviour component)
		{
		}

		[Token(Token = "0x60012DB")]
		[Address(RVA = "0xF18014", Offset = "0xF18014", VA = "0xF18014")]
		public Occludee()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000345")]
	public struct OcclusionVolume : IEquatable<OcclusionVolume>
	{
		[Token(Token = "0x400104E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		public uint _id;

		[Token(Token = "0x170001B4")]
		public static OcclusionVolume invalid
		{
			[Token(Token = "0x60012DC")]
			[Address(RVA = "0xF180A8", Offset = "0xF180A8", VA = "0xF180A8")]
			get
			{
				return default(OcclusionVolume);
			}
		}

		[Token(Token = "0x60012DD")]
		[Address(RVA = "0xF180B0", Offset = "0xF180B0", VA = "0xF180B0", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}

		[Token(Token = "0x60012DE")]
		[Address(RVA = "0xF180B8", Offset = "0xF180B8", VA = "0xF180B8", Slot = "4")]
		public bool Equals(OcclusionVolume other)
		{
			return default(bool);
		}

		[Token(Token = "0x60012DF")]
		[Address(RVA = "0xF180C0", Offset = "0xF180C0", VA = "0xF180C0", Slot = "0")]
		public override bool Equals(object obj)
		{
			return default(bool);
		}

		[Token(Token = "0x60012E0")]
		[Address(RVA = "0xF1813C", Offset = "0xF1813C", VA = "0xF1813C")]
		public static bool operator ==(OcclusionVolume x, OcclusionVolume y)
		{
			return default(bool);
		}

		[Token(Token = "0x60012E1")]
		[Address(RVA = "0xF1815C", Offset = "0xF1815C", VA = "0xF1815C")]
		public static bool operator !=(OcclusionVolume x, OcclusionVolume y)
		{
			return default(bool);
		}

		[Token(Token = "0x60012E2")]
		[Address(RVA = "0xF18180", Offset = "0xF18180", VA = "0xF18180", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x2000346")]
	public class OcclusionService : MonoBehaviour, IService
	{
		[Serializable]
		[Token(Token = "0x2000347")]
		public struct ObjectData
		{
			[Token(Token = "0x4001071")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[SerializeField]
			public GameObject obj;

			[Token(Token = "0x4001072")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[SerializeField]
			public OcclusionVolume volume;
		}

		[Serializable]
		[Token(Token = "0x2000348")]
		private struct VolumeData
		{
			[Token(Token = "0x4001073")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[SerializeField]
			public string debugName;

			[Token(Token = "0x4001074")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[SerializeField]
			public OcclusionVolume volume;

			[Token(Token = "0x4001075")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			[SerializeField]
			public Bounds bounds;

			[Token(Token = "0x4001076")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			[SerializeField]
			public GameObject[] objects;

			[Token(Token = "0x4001077")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			[SerializeField]
			public GameObject[] portals;

			[Token(Token = "0x4001078")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			[SerializeField]
			public OcclusionVolume[] portalLinks;

			[Token(Token = "0x4001079")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			[SerializeField]
			public OcclusionVolume[] adjacentVolumes;

			[Token(Token = "0x400107A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			[SerializeField]
			public OcclusionVolume[] portalAdjacentVolumes;
		}

		[Token(Token = "0x2000349")]
		public struct VolumeStateChangeRecord
		{
			[Token(Token = "0x400107B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public OcclusionVolume volume;

			[Token(Token = "0x400107C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public OcclusionState previousState;

			[Token(Token = "0x400107D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x5")]
			public OcclusionState newState;
		}

		[Token(Token = "0x200034A")]
		public struct DynamicOccludeeStateChangeRecord
		{
			[Token(Token = "0x400107E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Occludee occludee;

			[Token(Token = "0x400107F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public OcclusionState previousState;

			[Token(Token = "0x4001080")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x9")]
			public OcclusionState newState;
		}

		[Token(Token = "0x200034B")]
		public struct DynamicOccludeeVolumeChangeRecord
		{
			[Token(Token = "0x4001081")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Occludee occludee;

			[Token(Token = "0x4001082")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public OcclusionVolume previousVolume;

			[Token(Token = "0x4001083")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public OcclusionVolume newVolume;
		}

		[Token(Token = "0x400104F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private ObjectData[] _staticObjectData;

		[Token(Token = "0x4001050")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private VolumeData[] _staticVolumeObjectData;

		[Token(Token = "0x4001051")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private OcclusionVolume[] _volumes;

		[Token(Token = "0x4001052")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private OcclusionState[] _volumeStates;

		[Token(Token = "0x4001053")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private OcclusionState[] _previousVolumeStates;

		[Token(Token = "0x4001054")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private IOcclusionPortal[][] _volumePortals;

		[Token(Token = "0x4001055")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Occludee[][] _staticVolumeOccludees;

		[Token(Token = "0x4001056")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private ReadOnlyCollection<Occludee>[] _staticVolumeOccludees_ReadOnly;

		[Token(Token = "0x4001057")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private List<Occludee>[] _dynamicVolumeOccludees;

		[Token(Token = "0x4001058")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private List<Occludee> _dynamicOccludeesOutOfBounds;

		[Token(Token = "0x4001059")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private ReadOnlyCollection<Occludee>[] _dynamicVolumeOccludees_ReadOnly;

		[Token(Token = "0x400105A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private List<DynamicOccludeeVolumeChangeRecord> _dynamicOccludeeVolumeChangeRecords;

		[Token(Token = "0x400105B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private List<DynamicOccludeeStateChangeRecord> _dynamicOccludeeStateChangeRecords;

		[Token(Token = "0x400105C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private ReadOnlyCollection<DynamicOccludeeStateChangeRecord> _dynamicOccludeeStateChangeRecords_ReadOnly;

		[Token(Token = "0x400105D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private List<Occludee> _teleportedDynamicOccludees;

		[Token(Token = "0x400105E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private List<Occludee> _newlyAddedDynamicOccludees;

		[Token(Token = "0x400105F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private int _dynamicOccludeeTimeSliceMarker;

		[Token(Token = "0x4001060")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		private int _dynamicOccludeeProcessedCount;

		[Token(Token = "0x4001061")]
		private const int _dynamicOccludeeProcessLimit = 10;

		[Token(Token = "0x4001062")]
		private const int _newlyAddedDynamicOccludeesInitialCapacity = 1024;

		[Token(Token = "0x4001063")]
		private const int _teleportedDynamicOccludeesInitialCapacity = 1024;

		[Token(Token = "0x4001064")]
		private const int _newlyAddedDynamicOccludeesReducedCapacity = 32;

		[Token(Token = "0x4001065")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private List<VolumeStateChangeRecord> _volumeStateChangedRecords;

		[Token(Token = "0x4001066")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private ReadOnlyCollection<VolumeStateChangeRecord> _volumeStateChangedRecords_ReadOnly;

		[Token(Token = "0x4001067")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private Camera _mainCamera;

		[Token(Token = "0x4001068")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private Vector3 _lastValidCameraPosition;

		[Token(Token = "0x4001069")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private XrOobCameraTracker _xrOobCameraTracker;

		[Token(Token = "0x400106A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private CameraHandler _cameraHandler;

		[Token(Token = "0x400106B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static ProfilerMarker s_updateMarker;

		[Token(Token = "0x400106C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static ProfilerMarker s_updateVolumesMarker;

		[Token(Token = "0x400106D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static ProfilerMarker s_updatePortalsMarker;

		[Token(Token = "0x400106E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static ProfilerMarker s_updateDynamicOccludeesMarker;

		[Token(Token = "0x400106F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static List<(int index, float dist)> s_tempFrustumPlaneDistances;

		[Token(Token = "0x170001B5")]
		public OcclusionVolume[] volumes
		{
			[Token(Token = "0x60012E3")]
			[Address(RVA = "0xF18188", Offset = "0xF18188", VA = "0xF18188")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001B6")]
		public Vector3 LastValidCameraPosition
		{
			[Token(Token = "0x60012E4")]
			[Address(RVA = "0xF18190", Offset = "0xF18190", VA = "0xF18190")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x1400000F")]
		public event CallbackVoid<ReadOnlyCollection<VolumeStateChangeRecord>, ReadOnlyCollection<DynamicOccludeeStateChangeRecord>> onStatesChanged
		{
			[Token(Token = "0x60012E5")]
			[Address(RVA = "0xF1819C", Offset = "0xF1819C", VA = "0xF1819C")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x60012E6")]
			[Address(RVA = "0xF1824C", Offset = "0xF1824C", VA = "0xF1824C")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x60012E7")]
		[Address(RVA = "0xF182FC", Offset = "0xF182FC", VA = "0xF182FC")]
		static OcclusionService()
		{
		}

		[Token(Token = "0x60012E8")]
		[Address(RVA = "0xF184AC", Offset = "0xF184AC", VA = "0xF184AC", Slot = "4")]
		public void OnStartUp()
		{
		}

		[Token(Token = "0x60012E9")]
		[Address(RVA = "0xF18F14", Offset = "0xF18F14", VA = "0xF18F14", Slot = "5")]
		public void OnCleanUp()
		{
		}

		[Token(Token = "0x60012EA")]
		[Address(RVA = "0xF18F18", Offset = "0xF18F18", VA = "0xF18F18", Slot = "6")]
		public void OnUpdate(float deltaTime)
		{
		}

		[Token(Token = "0x60012EB")]
		[Address(RVA = "0xF1A6E0", Offset = "0xF1A6E0", VA = "0xF1A6E0")]
		public int GetVolumeCount()
		{
			return default(int);
		}

		[Token(Token = "0x60012EC")]
		[Address(RVA = "0xF1A6FC", Offset = "0xF1A6FC", VA = "0xF1A6FC")]
		public void SetMainCamera(Camera camera)
		{
		}

		[Token(Token = "0x60012ED")]
		[Address(RVA = "0xF1A2B4", Offset = "0xF1A2B4", VA = "0xF1A2B4")]
		private Vector3 GetLastValidCameraPosition()
		{
			return default(Vector3);
		}

		[Token(Token = "0x60012EE")]
		[Address(RVA = "0xF17DD0", Offset = "0xF17DD0", VA = "0xF17DD0")]
		public void RegisterNewDynamicOccludee(Occludee newOccludee)
		{
		}

		[Token(Token = "0x60012EF")]
		[Address(RVA = "0xF1A9B8", Offset = "0xF1A9B8", VA = "0xF1A9B8")]
		public void ForceRescanOfDynamicOccludee(Occludee occludee)
		{
		}

		[Token(Token = "0x60012F0")]
		[Address(RVA = "0xF17E68", Offset = "0xF17E68", VA = "0xF17E68")]
		public void UnregisterDynamicOccludee(Occludee occludee)
		{
		}

		[Token(Token = "0x60012F1")]
		[Address(RVA = "0xF1A394", Offset = "0xF1A394", VA = "0xF1A394")]
		private bool TryGetVolumeForOccludee(Occludee occludee, out OcclusionVolume volume)
		{
			return default(bool);
		}

		[Token(Token = "0x60012F2")]
		[Address(RVA = "0xF1A5E0", Offset = "0xF1A5E0", VA = "0xF1A5E0")]
		public bool TryGetVolumeFromPosition(Vector3 position, out OcclusionVolume volume)
		{
			return default(bool);
		}

		[Token(Token = "0x60012F3")]
		[Address(RVA = "0xF1ABBC", Offset = "0xF1ABBC", VA = "0xF1ABBC")]
		public int GetAdjacentVolumes(OcclusionVolume volume, List<OcclusionVolume> adjacentVolumes)
		{
			return default(int);
		}

		[Token(Token = "0x60012F4")]
		[Address(RVA = "0xF1AC9C", Offset = "0xF1AC9C", VA = "0xF1AC9C")]
		public OcclusionVolume GetVolumeForId(uint id)
		{
			return default(OcclusionVolume);
		}

		[Token(Token = "0x60012F5")]
		[Address(RVA = "0xF1ACCC", Offset = "0xF1ACCC", VA = "0xF1ACCC")]
		public ReadOnlyCollection<Occludee> GetStaticOccludeesInVolume(OcclusionVolume volume)
		{
			return null;
		}

		[Token(Token = "0x60012F6")]
		[Address(RVA = "0xF1ACFC", Offset = "0xF1ACFC", VA = "0xF1ACFC")]
		public ReadOnlyCollection<Occludee> GetDynamicOccludeesInVolume(OcclusionVolume volume)
		{
			return null;
		}

		[Token(Token = "0x60012F7")]
		[Address(RVA = "0xF1AD2C", Offset = "0xF1AD2C", VA = "0xF1AD2C")]
		public bool TryGetVolumeState(OcclusionVolume volume, out OcclusionState state)
		{
			return default(bool);
		}

		[Token(Token = "0x60012F8")]
		[Address(RVA = "0xF17EA8", Offset = "0xF17EA8", VA = "0xF17EA8")]
		public OcclusionState GetVolumeState(OcclusionVolume volume)
		{
			return default(OcclusionState);
		}

		[Token(Token = "0x60012F9")]
		[Address(RVA = "0xF1ADA8", Offset = "0xF1ADA8", VA = "0xF1ADA8")]
		public bool TryGetPortalsAndLinks(OcclusionVolume volume, out IOcclusionPortal[] portals, out OcclusionVolume[] portalLinks)
		{
			return default(bool);
		}

		[Token(Token = "0x60012FA")]
		[Address(RVA = "0xF1A828", Offset = "0xF1A828", VA = "0xF1A828")]
		private void AddNewDynamicOccludeeToVolume(Occludee occludee, OcclusionVolume newVolume)
		{
		}

		[Token(Token = "0x60012FB")]
		[Address(RVA = "0xF1A3F0", Offset = "0xF1A3F0", VA = "0xF1A3F0")]
		private void UpdateDynamicOccludeeInVolume(Occludee occludee, OcclusionVolume previousVolume, OcclusionVolume newVolume)
		{
		}

		[Token(Token = "0x60012FC")]
		[Address(RVA = "0xF1AA7C", Offset = "0xF1AA7C", VA = "0xF1AA7C")]
		private void RemoveDynamicOccludeeFromVolume(Occludee occludee)
		{
		}

		[Token(Token = "0x60012FD")]
		[Address(RVA = "0xF1AE54", Offset = "0xF1AE54", VA = "0xF1AE54")]
		public OcclusionService()
		{
		}
	}
}
namespace NarrativeEngine
{
	[Serializable]
	[Token(Token = "0x200034C")]
	public class BlackboardContainer
	{
		[Token(Token = "0x4001084")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static BlackboardContainer _empty;

		[Token(Token = "0x4001085")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		private string[] _keys;

		[Token(Token = "0x4001086")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Blackboard[] _blackboards;

		[Token(Token = "0x4001087")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Dictionary<string, Blackboard> _blackboardLookup;

		[Token(Token = "0x170001B7")]
		public static BlackboardContainer empty
		{
			[Token(Token = "0x60012FE")]
			[Address(RVA = "0xF1AEB4", Offset = "0xF1AEB4", VA = "0xF1AEB4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001B8")]
		public int Count
		{
			[Token(Token = "0x6001300")]
			[Address(RVA = "0xF1B2F8", Offset = "0xF1B2F8", VA = "0xF1B2F8")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170001B9")]
		public Blackboard this[int index]
		{
			[Token(Token = "0x6001305")]
			[Address(RVA = "0xF1B544", Offset = "0xF1B544", VA = "0xF1B544")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001BA")]
		public Blackboard this[string key]
		{
			[Token(Token = "0x6001306")]
			[Address(RVA = "0xF1B548", Offset = "0xF1B548", VA = "0xF1B548")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001BB")]
		public Blackboard this[FactAsset asset]
		{
			[Token(Token = "0x6001307")]
			[Address(RVA = "0xF1B54C", Offset = "0xF1B54C", VA = "0xF1B54C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001BC")]
		public IEnumerable<ISerializationDependency> deserializationDependencies
		{
			[Token(Token = "0x6001308")]
			[Address(RVA = "0xF1B564", Offset = "0xF1B564", VA = "0xF1B564")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60012FF")]
		[Address(RVA = "0xF1AF0C", Offset = "0xF1AF0C", VA = "0xF1AF0C")]
		public void Initialise()
		{
		}

		[Token(Token = "0x6001301")]
		[Address(RVA = "0xF1B314", Offset = "0xF1B314", VA = "0xF1B314")]
		public string GetKey(int index)
		{
			return null;
		}

		[Token(Token = "0x6001302")]
		[Address(RVA = "0xF1B394", Offset = "0xF1B394", VA = "0xF1B394")]
		public Blackboard Get(int index)
		{
			return null;
		}

		[Token(Token = "0x6001303")]
		[Address(RVA = "0xF1B454", Offset = "0xF1B454", VA = "0xF1B454")]
		public Blackboard Get(string key)
		{
			return null;
		}

		[Token(Token = "0x6001304")]
		[Address(RVA = "0xF1B52C", Offset = "0xF1B52C", VA = "0xF1B52C")]
		public Blackboard Get(FactAsset asset)
		{
			return null;
		}

		[Token(Token = "0x6001309")]
		[Address(RVA = "0xF1B780", Offset = "0xF1B780", VA = "0xF1B780")]
		public BlackboardContainer()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200034D")]
	public class Blackboard
	{
		[Token(Token = "0x4001088")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Blackboard _empty;

		[Token(Token = "0x4001089")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		private FactAsset[] _facts;

		[Token(Token = "0x400108A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Dictionary<string, bool> _booleanLookup;

		[Token(Token = "0x400108B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Dictionary<string, int> _integerLookup;

		[Token(Token = "0x400108C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Dictionary<string, string> _stringLookup;

		[Token(Token = "0x400108D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Dictionary<string, bool> _locked;

		[Token(Token = "0x170001BD")]
		public static Blackboard empty
		{
			[Token(Token = "0x600130B")]
			[Address(RVA = "0xF1B940", Offset = "0xF1B940", VA = "0xF1B940")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001BE")]
		public int Count
		{
			[Token(Token = "0x600130C")]
			[Address(RVA = "0xF1B998", Offset = "0xF1B998", VA = "0xF1B998")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170001BF")]
		public IEnumerable<ISerializationDependency> deserializationDependencies
		{
			[Token(Token = "0x600132B")]
			[Address(RVA = "0xF1B65C", Offset = "0xF1B65C", VA = "0xF1B65C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600130D")]
		[Address(RVA = "0xF1AFFC", Offset = "0xF1AFFC", VA = "0xF1AFFC")]
		public void Initialise()
		{
		}

		[Token(Token = "0x600130E")]
		[Address(RVA = "0xF1B9B4", Offset = "0xF1B9B4", VA = "0xF1B9B4")]
		public bool IsLocked(int index)
		{
			return default(bool);
		}

		[Token(Token = "0x600130F")]
		[Address(RVA = "0xF1BA00", Offset = "0xF1BA00", VA = "0xF1BA00")]
		public bool IsLocked(string key)
		{
			return default(bool);
		}

		[Token(Token = "0x6001310")]
		[Address(RVA = "0xF1BA7C", Offset = "0xF1BA7C", VA = "0xF1BA7C")]
		public void Lock(string key)
		{
		}

		[Token(Token = "0x6001311")]
		[Address(RVA = "0xF1BAD8", Offset = "0xF1BAD8", VA = "0xF1BAD8")]
		public void Unlock(string key)
		{
		}

		[Token(Token = "0x6001312")]
		[Address(RVA = "0xF1BB34", Offset = "0xF1BB34", VA = "0xF1BB34")]
		public string GetKey(int index)
		{
			return null;
		}

		[Token(Token = "0x6001313")]
		[Address(RVA = "0xF1BBBC", Offset = "0xF1BBBC", VA = "0xF1BBBC")]
		public bool IsBool(int index)
		{
			return default(bool);
		}

		[Token(Token = "0x6001314")]
		[Address(RVA = "0xF1BC08", Offset = "0xF1BC08", VA = "0xF1BC08")]
		public bool IsBool(string key)
		{
			return default(bool);
		}

		[Token(Token = "0x6001315")]
		[Address(RVA = "0xF1BC60", Offset = "0xF1BC60", VA = "0xF1BC60")]
		public bool GetBool(string key)
		{
			return default(bool);
		}

		[Token(Token = "0x6001316")]
		[Address(RVA = "0xF1BCE8", Offset = "0xF1BCE8", VA = "0xF1BCE8")]
		public void SetBool(string key, bool value)
		{
		}

		[Token(Token = "0x6001317")]
		[Address(RVA = "0xF1BD50", Offset = "0xF1BD50", VA = "0xF1BD50")]
		public bool GetBool(int index)
		{
			return default(bool);
		}

		[Token(Token = "0x6001318")]
		[Address(RVA = "0xF1BD9C", Offset = "0xF1BD9C", VA = "0xF1BD9C")]
		public bool GetBool(FactAsset asset)
		{
			return default(bool);
		}

		[Token(Token = "0x6001319")]
		[Address(RVA = "0xF1BDB4", Offset = "0xF1BDB4", VA = "0xF1BDB4")]
		public void SetBool(FactAsset asset, bool value)
		{
		}

		[Token(Token = "0x600131A")]
		[Address(RVA = "0xF1BDD0", Offset = "0xF1BDD0", VA = "0xF1BDD0")]
		public void SetBool(int index, bool value)
		{
		}

		[Token(Token = "0x600131B")]
		[Address(RVA = "0xF1BE0C", Offset = "0xF1BE0C", VA = "0xF1BE0C")]
		public bool IsInt(int index)
		{
			return default(bool);
		}

		[Token(Token = "0x600131C")]
		[Address(RVA = "0xF1BE58", Offset = "0xF1BE58", VA = "0xF1BE58")]
		public bool IsInt(string key)
		{
			return default(bool);
		}

		[Token(Token = "0x600131D")]
		[Address(RVA = "0xF1BEB0", Offset = "0xF1BEB0", VA = "0xF1BEB0")]
		public int GetInt(string key)
		{
			return default(int);
		}

		[Token(Token = "0x600131E")]
		[Address(RVA = "0xF1BF34", Offset = "0xF1BF34", VA = "0xF1BF34")]
		public void SetInt(string key, int value)
		{
		}

		[Token(Token = "0x600131F")]
		[Address(RVA = "0xF1BF9C", Offset = "0xF1BF9C", VA = "0xF1BF9C")]
		public int GetInt(int index)
		{
			return default(int);
		}

		[Token(Token = "0x6001320")]
		[Address(RVA = "0xF1BFE8", Offset = "0xF1BFE8", VA = "0xF1BFE8")]
		public int GetInt(FactAsset asset)
		{
			return default(int);
		}

		[Token(Token = "0x6001321")]
		[Address(RVA = "0xF1C000", Offset = "0xF1C000", VA = "0xF1C000")]
		public void SetInt(FactAsset asset, int value)
		{
		}

		[Token(Token = "0x6001322")]
		[Address(RVA = "0xF1C018", Offset = "0xF1C018", VA = "0xF1C018")]
		public void SetInt(int index, int value)
		{
		}

		[Token(Token = "0x6001323")]
		[Address(RVA = "0xF1C050", Offset = "0xF1C050", VA = "0xF1C050")]
		public bool IsString(int index)
		{
			return default(bool);
		}

		[Token(Token = "0x6001324")]
		[Address(RVA = "0xF1C09C", Offset = "0xF1C09C", VA = "0xF1C09C")]
		public bool IsString(string key)
		{
			return default(bool);
		}

		[Token(Token = "0x6001325")]
		[Address(RVA = "0xF1C0F4", Offset = "0xF1C0F4", VA = "0xF1C0F4")]
		public string GetString(string key)
		{
			return null;
		}

		[Token(Token = "0x6001326")]
		[Address(RVA = "0xF1C178", Offset = "0xF1C178", VA = "0xF1C178")]
		public void SetString(string key, string value)
		{
		}

		[Token(Token = "0x6001327")]
		[Address(RVA = "0xF1C1E0", Offset = "0xF1C1E0", VA = "0xF1C1E0")]
		public string GetString(int index)
		{
			return null;
		}

		[Token(Token = "0x6001328")]
		[Address(RVA = "0xF1C22C", Offset = "0xF1C22C", VA = "0xF1C22C")]
		public string GetString(FactAsset asset)
		{
			return null;
		}

		[Token(Token = "0x6001329")]
		[Address(RVA = "0xF1C244", Offset = "0xF1C244", VA = "0xF1C244")]
		public void SetString(FactAsset asset, string value)
		{
		}

		[Token(Token = "0x600132A")]
		[Address(RVA = "0xF1C25C", Offset = "0xF1C25C", VA = "0xF1C25C")]
		public void SetString(int index, string value)
		{
		}

		[Token(Token = "0x600132C")]
		[Address(RVA = "0xF1C310", Offset = "0xF1C310", VA = "0xF1C310")]
		public Blackboard()
		{
		}
	}
	[Token(Token = "0x200034E")]
	public class BlackboardManifest : ScriptableObject
	{
		[Token(Token = "0x200034F")]
		public class SerialisationHook : ISerializationDependency, ISerializationCallbackReceiver
		{
			[Token(Token = "0x4001092")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private BlackboardManifest _manifest;

			[Token(Token = "0x170001C5")]
			public BlackboardManifest manifest
			{
				[Token(Token = "0x600133C")]
				[Address(RVA = "0xF1CE44", Offset = "0xF1CE44", VA = "0xF1CE44")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001C6")]
			public IEnumerable<ISerializationDependency> deserializationDependencies
			{
				[Token(Token = "0x600133F")]
				[Address(RVA = "0xF1CE4C", Offset = "0xF1CE4C", VA = "0xF1CE4C")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600133D")]
			[Address(RVA = "0xF1CBB4", Offset = "0xF1CBB4", VA = "0xF1CBB4")]
			public void Initialise(BlackboardManifest manifest)
			{
			}

			[Token(Token = "0x600133E")]
			[Address(RVA = "0xF1CC88", Offset = "0xF1CC88", VA = "0xF1CC88")]
			public void Cleanup()
			{
			}

			[Token(Token = "0x6001340")]
			[Address(RVA = "0xF1CEC8", Offset = "0xF1CEC8", VA = "0xF1CEC8", Slot = "4")]
			public void OnBeforeSerialize()
			{
			}

			[Token(Token = "0x6001341")]
			[Address(RVA = "0xF1CECC", Offset = "0xF1CECC", VA = "0xF1CECC", Slot = "5")]
			public void OnAfterDeserialize()
			{
			}

			[Token(Token = "0x6001342")]
			[Address(RVA = "0xF1C700", Offset = "0xF1C700", VA = "0xF1C700")]
			public SerialisationHook()
			{
			}
		}

		[Token(Token = "0x400108E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static SerialisationHook s_serialisationDependency;

		[Token(Token = "0x400108F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private string[] _keys;

		[Token(Token = "0x4001090")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private BlackboardContainer[] _containers;

		[Token(Token = "0x4001091")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Dictionary<string, BlackboardContainer> _containerLookup;

		[Token(Token = "0x170001C0")]
		public static SerialisationHook serialisationDependency
		{
			[Token(Token = "0x600132E")]
			[Address(RVA = "0xF1C624", Offset = "0xF1C624", VA = "0xF1C624")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001C1")]
		public int Count
		{
			[Token(Token = "0x6001330")]
			[Address(RVA = "0xF1C708", Offset = "0xF1C708", VA = "0xF1C708")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170001C2")]
		public BlackboardContainer this[int index]
		{
			[Token(Token = "0x6001335")]
			[Address(RVA = "0xF1C954", Offset = "0xF1C954", VA = "0xF1C954")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001C3")]
		public BlackboardContainer this[string key]
		{
			[Token(Token = "0x6001336")]
			[Address(RVA = "0xF1C958", Offset = "0xF1C958", VA = "0xF1C958")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001C4")]
		public BlackboardContainer this[FactAsset asset]
		{
			[Token(Token = "0x6001337")]
			[Address(RVA = "0xF1C95C", Offset = "0xF1C95C", VA = "0xF1C95C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600132F")]
		[Address(RVA = "0xF1C67C", Offset = "0xF1C67C", VA = "0xF1C67C")]
		static BlackboardManifest()
		{
		}

		[Token(Token = "0x6001331")]
		[Address(RVA = "0xF1C724", Offset = "0xF1C724", VA = "0xF1C724")]
		public string GetKey(int index)
		{
			return null;
		}

		[Token(Token = "0x6001332")]
		[Address(RVA = "0xF1C7A4", Offset = "0xF1C7A4", VA = "0xF1C7A4")]
		public BlackboardContainer Get(int index)
		{
			return null;
		}

		[Token(Token = "0x6001333")]
		[Address(RVA = "0xF1C864", Offset = "0xF1C864", VA = "0xF1C864")]
		public BlackboardContainer Get(string key)
		{
			return null;
		}

		[Token(Token = "0x6001334")]
		[Address(RVA = "0xF1C93C", Offset = "0xF1C93C", VA = "0xF1C93C")]
		public BlackboardContainer Get(FactAsset asset)
		{
			return null;
		}

		[Token(Token = "0x6001338")]
		[Address(RVA = "0xF1C974", Offset = "0xF1C974", VA = "0xF1C974")]
		private void Initialise()
		{
		}

		[Token(Token = "0x6001339")]
		[Address(RVA = "0xF1CB44", Offset = "0xF1CB44", VA = "0xF1CB44", Slot = "4")]
		protected virtual void OnEnable()
		{
		}

		[Token(Token = "0x600133A")]
		[Address(RVA = "0xF1CC28", Offset = "0xF1CC28", VA = "0xF1CC28", Slot = "5")]
		protected virtual void OnDisable()
		{
		}

		[Token(Token = "0x600133B")]
		[Address(RVA = "0xF1CCF0", Offset = "0xF1CCF0", VA = "0xF1CCF0")]
		public BlackboardManifest()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000350")]
	public struct FactKey
	{
		[Token(Token = "0x4001093")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		public string container;

		[Token(Token = "0x4001094")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		[SerializeField]
		public string blackboard;

		[Token(Token = "0x4001095")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		public string fact;
	}
	[Serializable]
	[Token(Token = "0x2000351")]
	public struct FactValue
	{
		[Token(Token = "0x4001096")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		public bool boolean;

		[Token(Token = "0x4001097")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		[SerializeField]
		public int integer;

		[Token(Token = "0x4001098")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		[SerializeField]
		public string @string;
	}
	[Serializable]
	[Token(Token = "0x2000352")]
	public struct FactRequirement
	{
		[Serializable]
		[Token(Token = "0x2000353")]
		public struct FactValue
		{
			[Token(Token = "0x2000354")]
			public enum IntegerComparison
			{
				[Token(Token = "0x40010A0")]
				Equals,
				[Token(Token = "0x40010A1")]
				GreaterThan,
				[Token(Token = "0x40010A2")]
				LessThan
			}

			[Token(Token = "0x400109B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[SerializeField]
			public bool boolean;

			[Token(Token = "0x400109C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			[SerializeField]
			public int integer;

			[Token(Token = "0x400109D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[SerializeField]
			public string @string;

			[Token(Token = "0x400109E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[SerializeField]
			public IntegerComparison integerComparison;

			[Token(Token = "0x6001343")]
			[Address(RVA = "0xF1CED0", Offset = "0xF1CED0", VA = "0xF1CED0")]
			public static bool Compare(bool value, bool target)
			{
				return default(bool);
			}

			[Token(Token = "0x6001344")]
			[Address(RVA = "0xF1CEF8", Offset = "0xF1CEF8", VA = "0xF1CEF8")]
			public static bool Compare(int value, int target, IntegerComparison comparison)
			{
				return default(bool);
			}

			[Token(Token = "0x6001345")]
			[Address(RVA = "0xF1CF88", Offset = "0xF1CF88", VA = "0xF1CF88")]
			public static bool Compare(float value, float target, IntegerComparison comparison)
			{
				return default(bool);
			}

			[Token(Token = "0x6001346")]
			[Address(RVA = "0xF1D090", Offset = "0xF1D090", VA = "0xF1D090")]
			public static bool Compare(string value, string target)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4001099")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		public FactAsset[] _facts;

		[Token(Token = "0x400109A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		[SerializeField]
		public FactValue[] _values;
	}
	[Token(Token = "0x2000355")]
	[CreateAssetMenu(menuName = "Narrative Engine/Fact Reference")]
	public class FactAsset : ScriptableObject, ISerializationDependency, ISerializationCallbackReceiver, IObjectToUnitType
	{
		[Token(Token = "0x40010A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private FactKey _key;

		[Token(Token = "0x170001C7")]
		public FactKey blackboardKey
		{
			[Token(Token = "0x6001347")]
			[Address(RVA = "0xF1D0B8", Offset = "0xF1D0B8", VA = "0xF1D0B8")]
			get
			{
				return default(FactKey);
			}
		}

		[Token(Token = "0x170001C8")]
		private Type global::Bolt.IObjectToUnitType.convertedUnitType
		{
			[Token(Token = "0x6001348")]
			[Address(RVA = "0xF1D0CC", Offset = "0xF1D0CC", VA = "0xF1D0CC", Slot = "6")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001C9")]
		public IEnumerable<ISerializationDependency> deserializationDependencies
		{
			[Token(Token = "0x6001349")]
			[Address(RVA = "0xF1C294", Offset = "0xF1C294", VA = "0xF1C294")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600134A")]
		[Address(RVA = "0xF1D138", Offset = "0xF1D138", VA = "0xF1D138", Slot = "4")]
		public void OnBeforeSerialize()
		{
		}

		[Token(Token = "0x600134B")]
		[Address(RVA = "0xF1D13C", Offset = "0xF1D13C", VA = "0xF1D13C", Slot = "5")]
		public void OnAfterDeserialize()
		{
		}

		[Token(Token = "0x600134C")]
		[Address(RVA = "0xF1D1A0", Offset = "0xF1D1A0", VA = "0xF1D1A0", Slot = "7")]
		protected virtual void OnEnable()
		{
		}

		[Token(Token = "0x600134D")]
		[Address(RVA = "0xF1D1F8", Offset = "0xF1D1F8", VA = "0xF1D1F8", Slot = "8")]
		protected virtual void OnDisable()
		{
		}

		[Token(Token = "0x600134E")]
		[Address(RVA = "0xF1D250", Offset = "0xF1D250", VA = "0xF1D250")]
		public FactAsset()
		{
		}
	}
	[Token(Token = "0x2000356")]
	[CreateAssetMenu(menuName = "Narrative Engine/Facts/Boolean")]
	public class FactAssetBool : TypedFactAsset<bool>
	{
		[Token(Token = "0x600134F")]
		[Address(RVA = "0xF1D258", Offset = "0xF1D258", VA = "0xF1D258")]
		public FactAssetBool()
		{
		}
	}
	[Token(Token = "0x2000357")]
	[CreateAssetMenu(menuName = "Narrative Engine/Facts/Number")]
	public class FactAssetInt : TypedFactAsset<int>
	{
		[Token(Token = "0x6001350")]
		[Address(RVA = "0xF1D2A0", Offset = "0xF1D2A0", VA = "0xF1D2A0")]
		public FactAssetInt()
		{
		}
	}
	[Token(Token = "0x2000358")]
	[CreateAssetMenu(menuName = "Narrative Engine/Facts/Word")]
	public class FactAssetString : TypedFactAsset<string>
	{
		[Token(Token = "0x6001351")]
		[Address(RVA = "0xF1D2E8", Offset = "0xF1D2E8", VA = "0xF1D2E8")]
		public FactAssetString()
		{
		}
	}
	[Token(Token = "0x2000359")]
	public abstract class TypedFactAsset<T> : FactAsset
	{
		[Token(Token = "0x40010A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private T _defaultValue;

		[Token(Token = "0x170001CA")]
		public T defaultValue
		{
			[Token(Token = "0x6001352")]
			get
			{
				return (T)null;
			}
		}

		[Token(Token = "0x6001353")]
		protected TypedFactAsset()
		{
		}
	}
	[Token(Token = "0x200035A")]
	[CreateAssetMenu(menuName = "Narrative Engine/Foley Reference")]
	public class FoleyAsset : ScriptableObject, IObjectToUnitType
	{
		[Token(Token = "0x40010A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private EventReference _fmodEventReference;

		[Token(Token = "0x40010A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private string _endParameter;

		[Token(Token = "0x170001CB")]
		public EventReference fmodEvent
		{
			[Token(Token = "0x6001354")]
			[Address(RVA = "0xF1D330", Offset = "0xF1D330", VA = "0xF1D330")]
			get
			{
				return default(EventReference);
			}
		}

		[Token(Token = "0x170001CC")]
		public string endParameter
		{
			[Token(Token = "0x6001355")]
			[Address(RVA = "0xF1D33C", Offset = "0xF1D33C", VA = "0xF1D33C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001CD")]
		private Type global::Bolt.IObjectToUnitType.convertedUnitType
		{
			[Token(Token = "0x6001356")]
			[Address(RVA = "0xF1D344", Offset = "0xF1D344", VA = "0xF1D344", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001357")]
		[Address(RVA = "0xF1D3B0", Offset = "0xF1D3B0", VA = "0xF1D3B0")]
		public FoleyAsset()
		{
		}
	}
	[Token(Token = "0x200035B")]
	public interface IFoleyController
	{
		[Token(Token = "0x170001CE")]
		ReadOnlyCollection<FoleyAsset> playing
		{
			[Token(Token = "0x600135B")]
			get;
		}

		[Token(Token = "0x170001CF")]
		ReadOnlyCollection<(FoleyAsset asset, string parameter, PARAMETER_ID id, float value, Guid unitGuid)> parameterOverrides
		{
			[Token(Token = "0x600135C")]
			get;
		}

		[Token(Token = "0x6001358")]
		bool Start(FoleyAsset asset);

		[Token(Token = "0x6001359")]
		bool Stop(FoleyAsset asset);

		[Token(Token = "0x600135A")]
		bool SetParameter(FoleyAsset asset, string parameterName, float value, Guid unitGuid);
	}
	[Token(Token = "0x200035C")]
	public class FoleyController : IFoleyController
	{
		[Token(Token = "0x40010A7")]
		private const int c_playingListInitialSize = 8;

		[Token(Token = "0x40010A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private List<FoleyAsset> _playing;

		[Token(Token = "0x40010A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private ReadOnlyCollection<FoleyAsset> _readonlyPlaying;

		[Token(Token = "0x40010AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private List<(FoleyAsset asset, string parameter, PARAMETER_ID id, float value, Guid unitGuid)> _parameterOverrides;

		[Token(Token = "0x40010AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private ReadOnlyCollection<(FoleyAsset asset, string parameter, PARAMETER_ID id, float value, Guid unitGuid)> _readonlyparameterOverrides;

		[Token(Token = "0x170001D0")]
		public ReadOnlyCollection<FoleyAsset> playing
		{
			[Token(Token = "0x600135D")]
			[Address(RVA = "0xF1D410", Offset = "0xF1D410", VA = "0xF1D410", Slot = "7")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001D1")]
		public ReadOnlyCollection<(FoleyAsset asset, string parameter, PARAMETER_ID id, float value, Guid unitGuid)> parameterOverrides
		{
			[Token(Token = "0x600135E")]
			[Address(RVA = "0xF1D418", Offset = "0xF1D418", VA = "0xF1D418", Slot = "8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600135F")]
		[Address(RVA = "0xF1D420", Offset = "0xF1D420", VA = "0xF1D420")]
		public FoleyController()
		{
		}

		[Token(Token = "0x6001360")]
		[Address(RVA = "0xF1D56C", Offset = "0xF1D56C", VA = "0xF1D56C", Slot = "4")]
		public bool Start(FoleyAsset asset)
		{
			return default(bool);
		}

		[Token(Token = "0x6001361")]
		[Address(RVA = "0xF1D654", Offset = "0xF1D654", VA = "0xF1D654", Slot = "5")]
		public bool Stop(FoleyAsset asset)
		{
			return default(bool);
		}

		[Token(Token = "0x6001362")]
		[Address(RVA = "0xF1D784", Offset = "0xF1D784", VA = "0xF1D784", Slot = "6")]
		public bool SetParameter(FoleyAsset asset, string parameterName, float value, Guid unitGuid)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x200035D")]
	[CreateAssetMenu(menuName = "Narrative Engine/Foley Reference (Ghost)")]
	public class GhostFoleyAsset : FoleyAsset
	{
		[Token(Token = "0x6001363")]
		[Address(RVA = "0xF1DB54", Offset = "0xF1DB54", VA = "0xF1DB54")]
		public GhostFoleyAsset()
		{
		}
	}
	[Token(Token = "0x200035E")]
	public interface INarrativeManager
	{
		[Token(Token = "0x170001D2")]
		NarrativeState state
		{
			[Token(Token = "0x6001364")]
			get;
		}

		[Token(Token = "0x170001D3")]
		IDialogueController dialogue
		{
			[Token(Token = "0x6001365")]
			get;
		}

		[Token(Token = "0x170001D4")]
		IFoleyController foley
		{
			[Token(Token = "0x6001366")]
			get;
		}

		[Token(Token = "0x170001D5")]
		IStoryManager storyManager
		{
			[Token(Token = "0x6001367")]
			get;
		}

		[Token(Token = "0x170001D6")]
		ISoftCollisionController softCollisionController
		{
			[Token(Token = "0x6001368")]
			get;
		}

		[Token(Token = "0x6001369")]
		void Initialise(NarrativeState state, PlayerBase player);

		[Token(Token = "0x600136A")]
		void RegisterBoltResumeData(FlowMachine flowMachine, ResumableFlow[] flows);

		[Token(Token = "0x600136B")]
		void ResumeAllFlows();

		[Token(Token = "0x600136C")]
		void CancelAllResumableFlows();

		[Token(Token = "0x600136D")]
		void OnEnteredGameplay();

		[Token(Token = "0x600136E")]
		void RegisterPhonelineButton(int phoneline, PhoneLineFlashing buttonFlashing);

		[Token(Token = "0x600136F")]
		PhoneLineFlashing GetPhonelineButton(int phoneline);
	}
	[Token(Token = "0x200035F")]
	public class NarrativeManager : MonoBehaviour, IService, INarrativeManager, ISerialisable, IDeserialisable, ISceneReferrable, IPostDeserialiseNotified
	{
		[Token(Token = "0x2000360")]
		public class SerialisationHook : ISerializationDependency, ISerializationCallbackReceiver
		{
			[Token(Token = "0x40010BB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private NarrativeState _state;

			[Token(Token = "0x170001DE")]
			public NarrativeState state
			{
				[Token(Token = "0x6001387")]
				[Address(RVA = "0xF1FBA4", Offset = "0xF1FBA4", VA = "0xF1FBA4")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001DF")]
			public BlackboardManifest defaultBlackboard
			{
				[Token(Token = "0x6001388")]
				[Address(RVA = "0xF1FBAC", Offset = "0xF1FBAC", VA = "0xF1FBAC")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001E0")]
			public IEnumerable<ISerializationDependency> deserializationDependencies
			{
				[Token(Token = "0x600138B")]
				[Address(RVA = "0xF1FBC8", Offset = "0xF1FBC8", VA = "0xF1FBC8")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001389")]
			[Address(RVA = "0xF1E01C", Offset = "0xF1E01C", VA = "0xF1E01C")]
			public void Initialise(NarrativeState state)
			{
			}

			[Token(Token = "0x600138A")]
			[Address(RVA = "0xF1E180", Offset = "0xF1E180", VA = "0xF1E180")]
			public void Cleanup()
			{
			}

			[Token(Token = "0x600138C")]
			[Address(RVA = "0xF1FC44", Offset = "0xF1FC44", VA = "0xF1FC44", Slot = "4")]
			public void OnBeforeSerialize()
			{
			}

			[Token(Token = "0x600138D")]
			[Address(RVA = "0xF1FC48", Offset = "0xF1FC48", VA = "0xF1FC48", Slot = "5")]
			public void OnAfterDeserialize()
			{
			}

			[Token(Token = "0x600138E")]
			[Address(RVA = "0xF1DC34", Offset = "0xF1DC34", VA = "0xF1DC34")]
			public SerialisationHook()
			{
			}
		}

		[Token(Token = "0x40010AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static SerialisationHook s_serialisationDependency;

		[Token(Token = "0x40010AD")]
		private const string c_storyKey = "story";

		[Token(Token = "0x40010AE")]
		private const string c_dialogueKey = "dialogue";

		[Token(Token = "0x40010AF")]
		private const int c_resumableBoltFlowsInitialSize = 8;

		[Token(Token = "0x40010B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private NarrativeState _state;

		[Token(Token = "0x40010B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private PlayerBase _player;

		[Token(Token = "0x40010B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private DialogueController _dialogueController;

		[Token(Token = "0x40010B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private IFoleyController _foleyController;

		[Token(Token = "0x40010B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private ISoftCollisionController _softCollisionController;

		[Token(Token = "0x40010B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private List<(FlowMachine, ResumableFlow)> _resumableBoltFlows;

		[Token(Token = "0x40010B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private ResumableDialogue _resumableDialogue;

		[Token(Token = "0x40010B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Dictionary<int, PhoneLineFlashing> _phoneLineButtons;

		[Token(Token = "0x40010B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private StoryManager _storyManager;

		[Token(Token = "0x40010B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private DialogueSerialiser _dialogueSerialiser;

		[Token(Token = "0x40010BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private DialogueDeserialiser _dialogueDeserialiser;

		[Token(Token = "0x170001D7")]
		public static SerialisationHook serialisationDependency
		{
			[Token(Token = "0x6001370")]
			[Address(RVA = "0xF1DB58", Offset = "0xF1DB58", VA = "0xF1DB58")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001D8")]
		public NarrativeState state
		{
			[Token(Token = "0x6001372")]
			[Address(RVA = "0xF1DC3C", Offset = "0xF1DC3C", VA = "0xF1DC3C", Slot = "7")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001D9")]
		public IDialogueController dialogue
		{
			[Token(Token = "0x6001373")]
			[Address(RVA = "0xF1DC44", Offset = "0xF1DC44", VA = "0xF1DC44", Slot = "8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001DA")]
		public IFoleyController foley
		{
			[Token(Token = "0x6001374")]
			[Address(RVA = "0xF1DC4C", Offset = "0xF1DC4C", VA = "0xF1DC4C", Slot = "9")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001DB")]
		public ISoftCollisionController softCollisionController
		{
			[Token(Token = "0x6001375")]
			[Address(RVA = "0xF1DC54", Offset = "0xF1DC54", VA = "0xF1DC54", Slot = "11")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001DC")]
		public IStoryManager storyManager
		{
			[Token(Token = "0x6001376")]
			[Address(RVA = "0xF1DC5C", Offset = "0xF1DC5C", VA = "0xF1DC5C", Slot = "10")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001DD")]
		public string typeId
		{
			[Token(Token = "0x6001383")]
			[Address(RVA = "0xF1EEF4", Offset = "0xF1EEF4", VA = "0xF1EEF4", Slot = "21")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001371")]
		[Address(RVA = "0xF1DBB0", Offset = "0xF1DBB0", VA = "0xF1DBB0")]
		static NarrativeManager()
		{
		}

		[Token(Token = "0x6001377")]
		[Address(RVA = "0xF1DC64", Offset = "0xF1DC64", VA = "0xF1DC64")]
		public NarrativeManager()
		{
		}

		[Token(Token = "0x6001378")]
		[Address(RVA = "0xF1DF84", Offset = "0xF1DF84", VA = "0xF1DF84", Slot = "12")]
		public void Initialise(NarrativeState state, PlayerBase player)
		{
		}

		[Token(Token = "0x6001379")]
		[Address(RVA = "0xF1E090", Offset = "0xF1E090", VA = "0xF1E090", Slot = "4")]
		public void OnStartUp()
		{
		}

		[Token(Token = "0x600137A")]
		[Address(RVA = "0xF1E0E8", Offset = "0xF1E0E8", VA = "0xF1E0E8", Slot = "5")]
		public void OnCleanUp()
		{
		}

		[Token(Token = "0x600137B")]
		[Address(RVA = "0xF1E378", Offset = "0xF1E378", VA = "0xF1E378", Slot = "6")]
		public void OnUpdate(float dt)
		{
		}

		[Token(Token = "0x600137C")]
		[Address(RVA = "0xF1E4B4", Offset = "0xF1E4B4", VA = "0xF1E4B4", Slot = "16")]
		public void OnEnteredGameplay()
		{
		}

		[Token(Token = "0x600137D")]
		[Address(RVA = "0xF1E7C0", Offset = "0xF1E7C0", VA = "0xF1E7C0", Slot = "13")]
		public void RegisterBoltResumeData(FlowMachine flowMachine, ResumableFlow[] flows)
		{
		}

		[Token(Token = "0x600137E")]
		[Address(RVA = "0xF1E8FC", Offset = "0xF1E8FC", VA = "0xF1E8FC", Slot = "14")]
		public void ResumeAllFlows()
		{
		}

		[Token(Token = "0x600137F")]
		[Address(RVA = "0xF1E1E8", Offset = "0xF1E1E8", VA = "0xF1E1E8", Slot = "15")]
		public void CancelAllResumableFlows()
		{
		}

		[Token(Token = "0x6001380")]
		[Address(RVA = "0xF1E37C", Offset = "0xF1E37C", VA = "0xF1E37C")]
		private void UpdateSoftCollisionBlockerColliderState()
		{
		}

		[Token(Token = "0x6001381")]
		[Address(RVA = "0xF1ED90", Offset = "0xF1ED90", VA = "0xF1ED90", Slot = "17")]
		public void RegisterPhonelineButton(int phoneline, PhoneLineFlashing buttonFlashing)
		{
		}

		[Token(Token = "0x6001382")]
		[Address(RVA = "0xF1EE60", Offset = "0xF1EE60", VA = "0xF1EE60", Slot = "18")]
		public PhoneLineFlashing GetPhonelineButton(int phoneline)
		{
			return null;
		}

		[Token(Token = "0x6001384")]
		[Address(RVA = "0xF1EF34", Offset = "0xF1EF34", VA = "0xF1EF34", Slot = "20")]
		public bool Serialise(FlexBufferBuilder builder, ISceneObjectReferenceSerialiser objectSerialiser)
		{
			return default(bool);
		}

		[Token(Token = "0x6001385")]
		[Address(RVA = "0xF1F484", Offset = "0xF1F484", VA = "0xF1F484", Slot = "22")]
		public bool Deserialise(FlexBuffer.Map root, ISceneObjectReferenceDeserialiser objectDeserialiser)
		{
			return default(bool);
		}

		[Token(Token = "0x6001386")]
		[Address(RVA = "0xF1FBA0", Offset = "0xF1FBA0", VA = "0xF1FBA0", Slot = "23")]
		public void OnPostDeserialise()
		{
		}
	}
	[Token(Token = "0x2000361")]
	public class NarrativeState
	{
		[Token(Token = "0x40010BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private BlackboardManifest _defaultBlackboard;

		[Token(Token = "0x40010BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private BlackboardManifest _runtimeBlackboard;

		[Token(Token = "0x40010BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private float _gameplayTime;

		[Token(Token = "0x40010BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private float _timeTrackStart;

		[Token(Token = "0x40010C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float lastSavedGameplayTime;

		[Token(Token = "0x40010C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private bool _wasLoaded;

		[Token(Token = "0x40010C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private SerialisedState _activitiesState;

		[Token(Token = "0x40010C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private NarrativeSerialiser _serialiser;

		[Token(Token = "0x40010C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private NarrativeDeserialiser _deserialiser;

		[Token(Token = "0x170001E1")]
		public float GameplayTime
		{
			[Token(Token = "0x600138F")]
			[Address(RVA = "0xF1FC4C", Offset = "0xF1FC4C", VA = "0xF1FC4C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001390")]
			[Address(RVA = "0xF1FC54", Offset = "0xF1FC54", VA = "0xF1FC54")]
			set
			{
			}
		}

		[Token(Token = "0x170001E2")]
		public BlackboardManifest defaultBlackboard
		{
			[Token(Token = "0x6001391")]
			[Address(RVA = "0xF1FC5C", Offset = "0xF1FC5C", VA = "0xF1FC5C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001E3")]
		public BlackboardManifest runtimeBlackboard
		{
			[Token(Token = "0x6001392")]
			[Address(RVA = "0xF1FC64", Offset = "0xF1FC64", VA = "0xF1FC64")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001E4")]
		public bool loadedFromSave
		{
			[Token(Token = "0x6001393")]
			[Address(RVA = "0xF1FC6C", Offset = "0xF1FC6C", VA = "0xF1FC6C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001E5")]
		public SerialisedState activitiesState
		{
			[Token(Token = "0x6001394")]
			[Address(RVA = "0xF1FC74", Offset = "0xF1FC74", VA = "0xF1FC74")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001E6")]
		public NarrativeSerialiser serialiser
		{
			[Token(Token = "0x6001395")]
			[Address(RVA = "0xF1FC7C", Offset = "0xF1FC7C", VA = "0xF1FC7C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001E7")]
		public NarrativeDeserialiser deserialiser
		{
			[Token(Token = "0x6001396")]
			[Address(RVA = "0xF1FC84", Offset = "0xF1FC84", VA = "0xF1FC84")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001397")]
		[Address(RVA = "0xF1FC8C", Offset = "0xF1FC8C", VA = "0xF1FC8C")]
		public NarrativeState(BlackboardManifest defaultBlackboard)
		{
		}

		[Token(Token = "0x6001398")]
		[Address(RVA = "0xF1FDFC", Offset = "0xF1FDFC", VA = "0xF1FDFC")]
		public void OnLoadFinished()
		{
		}

		[Token(Token = "0x6001399")]
		[Address(RVA = "0xF1FE08", Offset = "0xF1FE08", VA = "0xF1FE08")]
		public void OnSceneChanged()
		{
		}

		[Token(Token = "0x600139A")]
		[Address(RVA = "0xF1FE10", Offset = "0xF1FE10", VA = "0xF1FE10")]
		public void ChangeFact(FactAsset asset, bool value)
		{
		}

		[Token(Token = "0x600139B")]
		[Address(RVA = "0xF1FE38", Offset = "0xF1FE38", VA = "0xF1FE38")]
		public void ChangeFact(string containerName, string blackboardName, string factName, bool value)
		{
		}

		[Token(Token = "0x600139C")]
		[Address(RVA = "0xF1FEE0", Offset = "0xF1FEE0", VA = "0xF1FEE0")]
		public void ChangeFact(FactAsset asset, int value)
		{
		}

		[Token(Token = "0x600139D")]
		[Address(RVA = "0xF1FF04", Offset = "0xF1FF04", VA = "0xF1FF04")]
		public void ChangeFact(string containerName, string blackboardName, string factName, int value)
		{
		}

		[Token(Token = "0x600139E")]
		[Address(RVA = "0xF1FFAC", Offset = "0xF1FFAC", VA = "0xF1FFAC")]
		public void ChangeFact(FactAsset asset, string value)
		{
		}

		[Token(Token = "0x600139F")]
		[Address(RVA = "0xF1FFD0", Offset = "0xF1FFD0", VA = "0xF1FFD0")]
		public void ChangeFact(string containerName, string blackboardName, string factName, string value)
		{
		}

		[Token(Token = "0x60013A0")]
		[Address(RVA = "0xF20078", Offset = "0xF20078", VA = "0xF20078")]
		public void GameplayTimeTrackStart()
		{
		}

		[Token(Token = "0x60013A1")]
		[Address(RVA = "0xF20094", Offset = "0xF20094", VA = "0xF20094")]
		public void GameplayTimeTrackEnd()
		{
		}
	}
	[Token(Token = "0x2000362")]
	public interface ISoftCollisionController
	{
		[Token(Token = "0x170001E8")]
		SoftCollisionZoneAsset softCollisionActiveZone
		{
			[Token(Token = "0x60013A6")]
			get;
		}

		[Token(Token = "0x60013A2")]
		void ActivateZone(SoftCollisionZoneAsset asset);

		[Token(Token = "0x60013A3")]
		void DisableZone(SoftCollisionZoneAsset asset);

		[Token(Token = "0x60013A4")]
		void RegisterSoftCollisionZone(SoftCollisionZoneAsset asset, SoftCollisionZone zone);

		[Token(Token = "0x60013A5")]
		bool GetCurrentActiveZone(out SoftCollisionZone currentZone);

		[Token(Token = "0x60013A7")]
		void ToggleBlockerCollider(Vector3 playerPosition);
	}
	[Token(Token = "0x2000363")]
	public class SoftCollisionController : ISoftCollisionController
	{
		[Token(Token = "0x40010C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Dictionary<SoftCollisionZoneAsset, SoftCollisionZone> _softCollizionZonesDic;

		[Token(Token = "0x40010C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private SoftCollisionZoneAsset _softCollisionActiveZone;

		[Token(Token = "0x170001E9")]
		public SoftCollisionZoneAsset softCollisionActiveZone
		{
			[Token(Token = "0x60013A8")]
			[Address(RVA = "0xF200C8", Offset = "0xF200C8", VA = "0xF200C8", Slot = "8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60013A9")]
		[Address(RVA = "0xF1DE9C", Offset = "0xF1DE9C", VA = "0xF1DE9C")]
		public SoftCollisionController()
		{
		}

		[Token(Token = "0x60013AA")]
		[Address(RVA = "0xF200D0", Offset = "0xF200D0", VA = "0xF200D0", Slot = "4")]
		public void ActivateZone(SoftCollisionZoneAsset asset)
		{
		}

		[Token(Token = "0x60013AB")]
		[Address(RVA = "0xF201CC", Offset = "0xF201CC", VA = "0xF201CC", Slot = "5")]
		public void DisableZone(SoftCollisionZoneAsset asset)
		{
		}

		[Token(Token = "0x60013AC")]
		[Address(RVA = "0xF202C8", Offset = "0xF202C8", VA = "0xF202C8", Slot = "6")]
		public void RegisterSoftCollisionZone(SoftCollisionZoneAsset asset, SoftCollisionZone zone)
		{
		}

		[Token(Token = "0x60013AD")]
		[Address(RVA = "0xF2036C", Offset = "0xF2036C", VA = "0xF2036C", Slot = "7")]
		public bool GetCurrentActiveZone(out SoftCollisionZone currentZone)
		{
			return default(bool);
		}

		[Token(Token = "0x60013AE")]
		[Address(RVA = "0xF20444", Offset = "0xF20444", VA = "0xF20444", Slot = "9")]
		public void ToggleBlockerCollider(Vector3 playerPosition)
		{
		}
	}
	[Token(Token = "0x2000364")]
	public interface IStoryManager
	{
		[Token(Token = "0x170001EA")]
		IReadOnlyList<Story> activeStories
		{
			[Token(Token = "0x60013AF")]
			get;
		}

		[Token(Token = "0x60013B0")]
		bool StartStory(string storyName);

		[Token(Token = "0x60013B1")]
		bool StartStory(Story story);

		[Token(Token = "0x60013B2")]
		bool EndStory(string storyName);

		[Token(Token = "0x60013B3")]
		bool EndStory(Story story);
	}
	[Token(Token = "0x2000365")]
	public class StoryManager : MonoBehaviour, IInitialisable, IStoryManager
	{
		[Token(Token = "0x40010C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Dictionary<string, Story> _allStories;

		[Token(Token = "0x40010C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private List<Story> _activeStories;

		[Token(Token = "0x40010C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private CallbackVoid<ButtonPressEvent> _buttonPressCallback;

		[Token(Token = "0x40010CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private CallbackVoid<DictaphoneButtonPressEvent> _dictaphoneButtonPressCallback;

		[Token(Token = "0x40010CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private CallbackVoid<FloppyDisk> _floppyDiskOpenedCallback;

		[Token(Token = "0x40010CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private List<Story> _storiesToAdd;

		[Token(Token = "0x40010CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private List<Story> _storiesToRemove;

		[Token(Token = "0x40010CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private IReadOnlyList<Story> _activeStoriesReadonly;

		[Token(Token = "0x40010CF")]
		public const string c_activeStoriesKey = "active_stories";

		[Token(Token = "0x170001EB")]
		public IReadOnlyList<Story> activeStories
		{
			[Token(Token = "0x60013B4")]
			[Address(RVA = "0xF20590", Offset = "0xF20590", VA = "0xF20590", Slot = "5")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60013B5")]
		[Address(RVA = "0xF20598", Offset = "0xF20598", VA = "0xF20598")]
		private StoryManager()
		{
		}

		[Token(Token = "0x60013B6")]
		[Address(RVA = "0xF20804", Offset = "0xF20804", VA = "0xF20804", Slot = "4")]
		public bool Initialise()
		{
			return default(bool);
		}

		[Token(Token = "0x60013B7")]
		[Address(RVA = "0xF209A4", Offset = "0xF209A4", VA = "0xF209A4")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60013B8")]
		[Address(RVA = "0xF1E5EC", Offset = "0xF1E5EC", VA = "0xF1E5EC")]
		public void StartDefaultStories()
		{
		}

		[Token(Token = "0x60013B9")]
		[Address(RVA = "0xF20A10", Offset = "0xF20A10", VA = "0xF20A10", Slot = "7")]
		public bool StartStory(Story story)
		{
			return default(bool);
		}

		[Token(Token = "0x60013BA")]
		[Address(RVA = "0xF20BE0", Offset = "0xF20BE0", VA = "0xF20BE0", Slot = "6")]
		public bool StartStory(string storyName)
		{
			return default(bool);
		}

		[Token(Token = "0x60013BB")]
		[Address(RVA = "0xF20C68", Offset = "0xF20C68", VA = "0xF20C68", Slot = "9")]
		public bool EndStory(Story story)
		{
			return default(bool);
		}

		[Token(Token = "0x60013BC")]
		[Address(RVA = "0xF20F88", Offset = "0xF20F88", VA = "0xF20F88", Slot = "8")]
		public bool EndStory(string storyName)
		{
			return default(bool);
		}

		[Token(Token = "0x60013BD")]
		[Address(RVA = "0xF1EB90", Offset = "0xF1EB90", VA = "0xF1EB90")]
		public void CleanUpFinishedStories()
		{
		}

		[Token(Token = "0x60013BE")]
		[Address(RVA = "0xF21010", Offset = "0xF21010", VA = "0xF21010")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x60013BF")]
		[Address(RVA = "0xF20DCC", Offset = "0xF20DCC", VA = "0xF20DCC")]
		private void TriggerStoryEvent(string eventName)
		{
		}

		[Token(Token = "0x60013C0")]
		[Address(RVA = "0xF21224", Offset = "0xF21224", VA = "0xF21224")]
		private void OnGameplayButtonPressed(ButtonPressEvent button)
		{
		}

		[Token(Token = "0x60013C1")]
		[Address(RVA = "0xF212AC", Offset = "0xF212AC", VA = "0xF212AC")]
		private void OnDictaphoneGameplayButtonPressed(DictaphoneButtonPressEvent button)
		{
		}

		[Token(Token = "0x60013C2")]
		[Address(RVA = "0xF2135C", Offset = "0xF2135C", VA = "0xF2135C")]
		private void OnFloppyDiskOpened(FloppyDisk floppyDisk)
		{
		}

		[Token(Token = "0x60013C3")]
		[Address(RVA = "0xF1F018", Offset = "0xF1F018", VA = "0xF1F018")]
		public bool Serialise(FlexBufferBuilder builder, ISceneObjectReferenceSerialiser objectSerialiser)
		{
			return default(bool);
		}

		[Token(Token = "0x60013C4")]
		[Address(RVA = "0xF1F62C", Offset = "0xF1F62C", VA = "0xF1F62C")]
		public bool Deserialise(FlexBuffer.Map root, ISceneObjectReferenceDeserialiser objectDeserialiser)
		{
			return default(bool);
		}
	}
}
namespace NarrativeEngine.Serialisation
{
	[Token(Token = "0x2000366")]
	public class BlackboardDeserialiser
	{
		[Token(Token = "0x40010D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private BlackboardManifest _blackboards;

		[Token(Token = "0x40010D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private string[] _containerKeys;

		[Token(Token = "0x40010D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private string[][] _blackboardKeys;

		[Token(Token = "0x40010D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private string[][][] _factKeys;

		[Token(Token = "0x40010D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int[][][] _booleanFactIndices;

		[Token(Token = "0x40010D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private int[][][] _integerFactIndices;

		[Token(Token = "0x40010D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private int[][][] _stringFactIndices;

		[Token(Token = "0x60013C5")]
		[Address(RVA = "0xF2138C", Offset = "0xF2138C", VA = "0xF2138C")]
		public BlackboardDeserialiser(BlackboardManifest blackboards)
		{
		}

		[Token(Token = "0x60013C6")]
		[Address(RVA = "0xF21E10", Offset = "0xF21E10", VA = "0xF21E10")]
		public bool Deserialise(FlexBuffer.Map root)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000367")]
	public static class BlackboardSerialisation
	{
		[Token(Token = "0x2000368")]
		public static class Keys
		{
			[Token(Token = "0x40010DA")]
			public const string Containers = "containers";

			[Token(Token = "0x40010DB")]
			public const string Boards = "boards";

			[Token(Token = "0x40010DC")]
			public const string FactBooleans = "booleans";

			[Token(Token = "0x40010DD")]
			public const string FactIntegers = "integers";

			[Token(Token = "0x40010DE")]
			public const string FactStrings = "strings";

			[Token(Token = "0x40010DF")]
			public const string FactValue = "value";

			[Token(Token = "0x40010E0")]
			public const string FactLocked = "locked";
		}

		[Token(Token = "0x40010D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static List<int> s_tempBooleanIndices;

		[Token(Token = "0x40010D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static List<int> s_tempIntegerIndices;

		[Token(Token = "0x40010D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static List<int> s_tempStringIndices;

		[Token(Token = "0x60013C7")]
		[Address(RVA = "0xF21438", Offset = "0xF21438", VA = "0xF21438")]
		public static bool ExtractKeys(BlackboardManifest manifest, out string[] containerKeys, out string[][] blackboardKeys, out string[][][] factKeys)
		{
			return default(bool);
		}

		[Token(Token = "0x60013C8")]
		[Address(RVA = "0xF2186C", Offset = "0xF2186C", VA = "0xF2186C")]
		public static bool ExtractFactTypes(BlackboardManifest manifest, out int[][][] booleanFactIndices, out int[][][] integerFactIndices, out int[][][] stringFactIndices)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000369")]
	public class BlackboardSerialiser
	{
		[Token(Token = "0x40010E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private BlackboardManifest _blackboards;

		[Token(Token = "0x40010E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private string[] _containerKeys;

		[Token(Token = "0x40010E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private string[][] _blackboardKeys;

		[Token(Token = "0x40010E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private string[][][] _factKeys;

		[Token(Token = "0x40010E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int[][][] _booleanFactIndices;

		[Token(Token = "0x40010E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private int[][][] _integerFactIndices;

		[Token(Token = "0x40010E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private int[][][] _stringFactIndices;

		[Token(Token = "0x60013CA")]
		[Address(RVA = "0xF22AA0", Offset = "0xF22AA0", VA = "0xF22AA0")]
		public BlackboardSerialiser(BlackboardManifest blackboards)
		{
		}

		[Token(Token = "0x60013CB")]
		[Address(RVA = "0xF22B4C", Offset = "0xF22B4C", VA = "0xF22B4C")]
		public bool Serialise(FlexBufferBuilder root)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x200036A")]
	public class ResumableDialogue
	{
		[Token(Token = "0x40010E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private DialogueController _controller;

		[Token(Token = "0x40010E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private string _groupGuid;

		[Token(Token = "0x40010EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private string _lineId;

		[Token(Token = "0x60013CC")]
		[Address(RVA = "0xF2343C", Offset = "0xF2343C", VA = "0xF2343C")]
		public ResumableDialogue(DialogueController controller, string groupGuid, string lineId)
		{
		}

		[Token(Token = "0x60013CD")]
		[Address(RVA = "0xF1EB6C", Offset = "0xF1EB6C", VA = "0xF1EB6C")]
		public void Execute()
		{
		}
	}
	[Token(Token = "0x200036B")]
	public class DialogueDeserialiser
	{
		[Token(Token = "0x40010EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private DialogueController _controller;

		[Token(Token = "0x60013CE")]
		[Address(RVA = "0xF1DF54", Offset = "0xF1DF54", VA = "0xF1DF54")]
		public DialogueDeserialiser(DialogueController dialogueController)
		{
		}

		[Token(Token = "0x60013CF")]
		[Address(RVA = "0xF1F910", Offset = "0xF1F910", VA = "0xF1F910")]
		public bool Deserialise(FlexBuffer.Map root, out ResumableDialogue resumeData)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x200036C")]
	public static class DialogueSerialisation
	{
		[Token(Token = "0x200036D")]
		public static class Keys
		{
			[Token(Token = "0x40010EC")]
			public const string HasQueuedData = "hasData";

			[Token(Token = "0x40010ED")]
			public const string IsChoice = "isChoice";

			[Token(Token = "0x40010EE")]
			public const string GroupGUID = "guid";

			[Token(Token = "0x40010EF")]
			public const string LineUID = "lineId";
		}
	}
	[Token(Token = "0x200036E")]
	public class DialogueSerialiser
	{
		[Token(Token = "0x40010F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private DialogueController _controller;

		[Token(Token = "0x60013D0")]
		[Address(RVA = "0xF1DF24", Offset = "0xF1DF24", VA = "0xF1DF24")]
		public DialogueSerialiser(DialogueController dialogueController)
		{
		}

		[Token(Token = "0x60013D1")]
		[Address(RVA = "0xF1F318", Offset = "0xF1F318", VA = "0xF1F318")]
		public bool Serialise(FlexBufferBuilder builder)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x200036F")]
	public class ResumableFlow
	{
		[Token(Token = "0x40010F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IResumableFlowOwnerUnit _unit;

		[Token(Token = "0x40010F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private global::Bolt.Flow _flow;

		[Token(Token = "0x40010F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private IUnitPort[] _previouslyTraversed;

		[Token(Token = "0x40010F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private IGraphParentElement[] _previouslyTraversedParents;

		[Token(Token = "0x40010F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private IUnitPort _current;

		[Token(Token = "0x60013D2")]
		[Address(RVA = "0xF2349C", Offset = "0xF2349C", VA = "0xF2349C")]
		public ResumableFlow(IResumableFlowOwnerUnit unit, global::Bolt.Flow flow, IUnitPort[] previous, IGraphParentElement[] previousParents, IUnitPort current)
		{
		}

		[Token(Token = "0x60013D3")]
		[Address(RVA = "0xF1EAA8", Offset = "0xF1EAA8", VA = "0xF1EAA8")]
		public void Execute()
		{
		}

		[Token(Token = "0x60013D4")]
		[Address(RVA = "0xF1ED30", Offset = "0xF1ED30", VA = "0xF1ED30")]
		public void Dispose()
		{
		}
	}
	[Token(Token = "0x2000370")]
	public class GraphReferenceDeserialiser
	{
		[Token(Token = "0x40010F6")]
		private const int c_graphElementsExpectedCount = 512;

		[Token(Token = "0x40010F7")]
		private const int c_graphElementsWithMatchingGUIDsExpectedCount = 1;

		[Token(Token = "0x40010F8")]
		private const int c_nestPathMaxExpectedDepth = 4;

		[Token(Token = "0x40010F9")]
		private const int c_resumableFlowListInitialSize = 4;

		[Token(Token = "0x40010FA")]
		private const int c_unitPortsListInitialSize = 64;

		[Token(Token = "0x40010FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static HashSet<IGraphElement> s_tempUnitsWithUniqueInstances;

		[Token(Token = "0x40010FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static Dictionary<string, HashSet<IGraphElement>> s_tempUnitsWithUniqueInstancesByGUID;

		[Token(Token = "0x40010FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static Stack<IGraphParentElement> s_tempNestPath;

		[Token(Token = "0x40010FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static IGraphParentElement[] s_tempCurrentNestPath;

		[Token(Token = "0x40010FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static List<ResumableFlow> s_tempResumableFlowList;

		[Token(Token = "0x4001100")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static List<IUnitPort> s_tempUnitPortsList;

		[Token(Token = "0x4001101")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private static List<IGraphParentElement> s_tempUnitParentList;

		[Token(Token = "0x4001102")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private static List<FlexBuffer.String> s_tempNestPathStrings;

		[Token(Token = "0x4001103")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private static ProfilerMarker s_marker;

		[Token(Token = "0x4001104")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private static ProfilerMarker s_instancesMarker;

		[Token(Token = "0x4001105")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private static ProfilerMarker s_uniqueInstancesMarker;

		[Token(Token = "0x4001106")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private static ProfilerMarker s_unitNestMarker;

		[Token(Token = "0x4001107")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private static ProfilerMarker s_graphSearchMarker;

		[Token(Token = "0x4001108")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Dictionary<IGraphElement, string> _unitGUIDs;

		[Token(Token = "0x4001109")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Dictionary<IGraphElement, List<IGraphParentElement[]>> _unitInstanceNestPaths;

		[Token(Token = "0x400110A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Dictionary<string, IGraphElement[]> _unitsWithInstancesByGUID;

		[Token(Token = "0x400110B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private List<IGraphParentElement> _rootGraphParents;

		[Token(Token = "0x400110C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Dictionary<IGraphParentElement, List<IGraphParentElement>> _childGraphParents;

		[Token(Token = "0x400110D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private GraphReference _reference;

		[Token(Token = "0x60013D5")]
		[Address(RVA = "0xF2352C", Offset = "0xF2352C", VA = "0xF2352C")]
		static GraphReferenceDeserialiser()
		{
		}

		[Token(Token = "0x60013D6")]
		[Address(RVA = "0xF23974", Offset = "0xF23974", VA = "0xF23974")]
		public GraphReferenceDeserialiser(GraphReference reference)
		{
		}

		[Token(Token = "0x60013D7")]
		[Address(RVA = "0xF23BF0", Offset = "0xF23BF0", VA = "0xF23BF0")]
		public bool Initialise()
		{
			return default(bool);
		}

		[Token(Token = "0x60013D8")]
		[Address(RVA = "0xF24000", Offset = "0xF24000", VA = "0xF24000")]
		private bool InitialiseRecursive(FlowGraph graph)
		{
			return default(bool);
		}

		[Token(Token = "0x60013D9")]
		[Address(RVA = "0xF24D00", Offset = "0xF24D00", VA = "0xF24D00")]
		public bool Deserialise(FlexBuffer.Map root, out ResumableFlow[] resumableFlows)
		{
			return default(bool);
		}

		[Token(Token = "0x60013DA")]
		[Address(RVA = "0xF259A4", Offset = "0xF259A4", VA = "0xF259A4")]
		private bool FindPossibleUnitInstances(FlexBuffer.Map root, out FlexBuffer.String guid, out IGraphElement[] possibleUnits)
		{
			return default(bool);
		}

		[Token(Token = "0x60013DB")]
		[Address(RVA = "0xF25D4C", Offset = "0xF25D4C", VA = "0xF25D4C")]
		private bool FindUniqueUnitInstance(FlexBuffer.Map root, out IGraphElement unit, out IGraphParentElement[] nestPath)
		{
			return default(bool);
		}

		[Token(Token = "0x60013DC")]
		[Address(RVA = "0xF265C8", Offset = "0xF265C8", VA = "0xF265C8")]
		private bool NestForUniqueUnit(GraphStack stack, IGraphElement unit, IGraphParentElement[] nestPath)
		{
			return default(bool);
		}

		[Token(Token = "0x60013DD")]
		[Address(RVA = "0xF2521C", Offset = "0xF2521C", VA = "0xF2521C")]
		private bool DeserialiseFlowUnitInstance(FlexBuffer.Map data, out int deserialisedFlowCount)
		{
			return default(bool);
		}

		[Token(Token = "0x60013DE")]
		[Address(RVA = "0xF266E0", Offset = "0xF266E0", VA = "0xF266E0")]
		private bool DeserialiseGraphFlow(FlexBuffer.Map data, GraphStack stack, IResumableFlowOwnerUnit originUnit)
		{
			return default(bool);
		}

		[Token(Token = "0x60013DF")]
		[Address(RVA = "0xF26CFC", Offset = "0xF26CFC", VA = "0xF26CFC")]
		private bool DeserialiseTraversal(FlexBuffer.Map data, GraphStack stack, IResumableFlowOwnerUnit originUnit, List<IUnitPort> orderedPorts, List<IGraphParentElement> expectedParentUnits)
		{
			return default(bool);
		}

		[Token(Token = "0x60013E0")]
		[Address(RVA = "0xF27FCC", Offset = "0xF27FCC", VA = "0xF27FCC")]
		private bool NestForTargetGraphParent(GraphStack stack, FlexBuffer.String targetParentGUID)
		{
			return default(bool);
		}

		[Token(Token = "0x60013E1")]
		[Address(RVA = "0xF284B8", Offset = "0xF284B8", VA = "0xF284B8")]
		private bool SearchForGraphContainingGuid(GraphStack stack, FlexBuffer.String guid, out IUnit unit)
		{
			return default(bool);
		}

		[Token(Token = "0x60013E2")]
		[Address(RVA = "0xF281DC", Offset = "0xF281DC", VA = "0xF281DC")]
		private bool FindUnitInGraphByGuid(FlowGraph graph, FlexBuffer.String guid, out IUnit found)
		{
			return default(bool);
		}

		[Token(Token = "0x60013E3")]
		[Address(RVA = "0xF28934", Offset = "0xF28934", VA = "0xF28934")]
		private int CompareGraphParentGuid(FlexBuffer.String guid, IGraphParentElement parent)
		{
			return default(int);
		}

		[Token(Token = "0x60013E4")]
		[Address(RVA = "0xF27858", Offset = "0xF27858", VA = "0xF27858")]
		private bool ValidateTraversal(GraphStack stack, IResumableFlowOwnerUnit originUnit, List<IUnitPort> previouslyTraversed, List<IGraphParentElement> previouslyTraversedParents, FlexBuffer.String currentUnitGUID, FlexBuffer.String currentUnitInputPort, out IUnitInputPort currentInputPort)
		{
			return default(bool);
		}

		[Token(Token = "0x60013E5")]
		[Address(RVA = "0xF25630", Offset = "0xF25630", VA = "0xF25630")]
		private bool DeserialiseUnitInstanceData(FlexBuffer.Map root)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000371")]
	public static class GraphSerialisation
	{
		[Token(Token = "0x2000372")]
		public static class Keys
		{
			[Token(Token = "0x2000373")]
			public static class Unit
			{
				[Token(Token = "0x4001119")]
				public const string GUID = "guid";

				[Token(Token = "0x400111A")]
				public const string NestPath = "path";
			}

			[Token(Token = "0x400110F")]
			public const string FlowUnitsVector = "eventUnits";

			[Token(Token = "0x4001110")]
			public const string FlowUnitFlowsVector = "flows";

			[Token(Token = "0x4001111")]
			public const string FlowCurrentUnit = "current";

			[Token(Token = "0x4001112")]
			public const string FlowCurrentUnitPortKey = "port";

			[Token(Token = "0x4001113")]
			public const string FlowTraversalVector = "traversed";

			[Token(Token = "0x4001114")]
			public const string FlowTraversalPortKey = "port";

			[Token(Token = "0x4001115")]
			public const string FlowTraversalGraphParent = "parent";

			[Token(Token = "0x4001116")]
			public const string ElementDataVector = "elementData";

			[Token(Token = "0x4001117")]
			public const string ElementDataMap = "data";

			[Token(Token = "0x4001118")]
			public const string FlowTraversalUnitGUID = "unit";
		}

		[Token(Token = "0x2000374")]
		public class GraphElementComparer : IEqualityComparer<IGraphElement>
		{
			[Token(Token = "0x60013E6")]
			[Address(RVA = "0xF289C8", Offset = "0xF289C8", VA = "0xF289C8", Slot = "4")]
			public bool Equals(IGraphElement x, IGraphElement y)
			{
				return default(bool);
			}

			[Token(Token = "0x60013E7")]
			[Address(RVA = "0xF28B08", Offset = "0xF28B08", VA = "0xF28B08", Slot = "5")]
			public int GetHashCode(IGraphElement obj)
			{
				return default(int);
			}

			[Token(Token = "0x60013E8")]
			[Address(RVA = "0xF23BE8", Offset = "0xF23BE8", VA = "0xF23BE8")]
			public GraphElementComparer()
			{
			}
		}

		[Token(Token = "0x2000375")]
		public class GraphElementReferenceComparer : IEqualityComparer<IGraphElement>
		{
			[Token(Token = "0x60013E9")]
			[Address(RVA = "0xF28BC8", Offset = "0xF28BC8", VA = "0xF28BC8", Slot = "4")]
			public bool Equals(IGraphElement x, IGraphElement y)
			{
				return default(bool);
			}

			[Token(Token = "0x60013EA")]
			[Address(RVA = "0xF28BE8", Offset = "0xF28BE8", VA = "0xF28BE8", Slot = "5")]
			public int GetHashCode(IGraphElement obj)
			{
				return default(int);
			}

			[Token(Token = "0x60013EB")]
			[Address(RVA = "0xF2396C", Offset = "0xF2396C", VA = "0xF2396C")]
			public GraphElementReferenceComparer()
			{
			}
		}

		[Token(Token = "0x400110E")]
		public const string RootGraphID = "root";
	}
	[Token(Token = "0x2000376")]
	public class GraphReferenceSerialiser
	{
		[Token(Token = "0x400111B")]
		private const int c_flowUnitsListInitialSize = 8;

		[Token(Token = "0x400111C")]
		private const int c_unitsExpectedCount = 512;

		[Token(Token = "0x400111D")]
		private const int c_unitsWithMatchingGUIDsExpectedCount = 1;

		[Token(Token = "0x400111E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static HashSet<IUnit> s_tempFlowOwnerUnits;

		[Token(Token = "0x400111F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static HashSet<IUnit> s_tempElementDataUnits;

		[Token(Token = "0x4001120")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static HashSet<IUnit> s_tempUnitsWithUniqueInstances;

		[Token(Token = "0x4001121")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static Stack<IGraphParentElement> s_tempNestPath;

		[Token(Token = "0x4001122")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static IGraphParentElement[] s_tempCurrentNestPath;

		[Token(Token = "0x4001123")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static global::Bolt.Flow[] s_tempFlowsList;

		[Token(Token = "0x4001124")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private static ProfilerMarker s_marker;

		[Token(Token = "0x4001125")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Dictionary<IGraphElement, string> _unitGUIDs;

		[Token(Token = "0x4001126")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Dictionary<IGraphElement, List<IGraphParentElement[]>> _unitInstanceNestPaths;

		[Token(Token = "0x4001127")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private List<IResumableFlowOwnerUnit> _flowOwnerUnitsList;

		[Token(Token = "0x4001128")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private List<IUnitWithSerialisableData> _elementsWithData;

		[Token(Token = "0x4001129")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private GraphReference _reference;

		[Token(Token = "0x60013EC")]
		[Address(RVA = "0xF28C08", Offset = "0xF28C08", VA = "0xF28C08")]
		static GraphReferenceSerialiser()
		{
		}

		[Token(Token = "0x60013ED")]
		[Address(RVA = "0xF28E80", Offset = "0xF28E80", VA = "0xF28E80")]
		public GraphReferenceSerialiser(GraphReference reference)
		{
		}

		[Token(Token = "0x60013EE")]
		[Address(RVA = "0xF29084", Offset = "0xF29084", VA = "0xF29084")]
		public bool Initialise()
		{
			return default(bool);
		}

		[Token(Token = "0x60013EF")]
		[Address(RVA = "0xF292D0", Offset = "0xF292D0", VA = "0xF292D0")]
		private bool InitialiseRecursive(FlowGraph graph)
		{
			return default(bool);
		}

		[Token(Token = "0x60013F0")]
		[Address(RVA = "0xF29C4C", Offset = "0xF29C4C", VA = "0xF29C4C")]
		public bool Serialise(FlexBufferBuilder builder)
		{
			return default(bool);
		}

		[Token(Token = "0x60013F1")]
		[Address(RVA = "0xF2A3D8", Offset = "0xF2A3D8", VA = "0xF2A3D8")]
		private bool NestForUniqueUnit(GraphStack stack, IGraphElement unit, IGraphParentElement[] nestPath)
		{
			return default(bool);
		}

		[Token(Token = "0x60013F2")]
		[Address(RVA = "0xF2A948", Offset = "0xF2A948", VA = "0xF2A948")]
		private bool SerialiseUnitInstance(FlexBufferBuilder builder, IUnit unitInstance, IGraphParentElement[] nestPath)
		{
			return default(bool);
		}

		[Token(Token = "0x60013F3")]
		[Address(RVA = "0xF2A4F0", Offset = "0xF2A4F0", VA = "0xF2A4F0")]
		private bool SerialiseFlowUnitInstance(FlexBufferBuilder builder, IResumableFlowOwnerUnit flowUnit, IGraphParentElement[] nestPath, GraphStack stack, out int serialisedFlowsCount)
		{
			return default(bool);
		}

		[Token(Token = "0x60013F4")]
		[Address(RVA = "0xF2AA94", Offset = "0xF2AA94", VA = "0xF2AA94")]
		private bool SerialiseGraphFlow(FlexBufferBuilder builder, global::Bolt.Flow flow, IResumableFlowOwnerUnit originUnit, IGraphParentElement[] originNestPath)
		{
			return default(bool);
		}

		[Token(Token = "0x60013F5")]
		[Address(RVA = "0xF2A808", Offset = "0xF2A808", VA = "0xF2A808")]
		private bool SerialiseUnitInstanceData(FlexBufferBuilder builder, IUnitWithSerialisableData unit, IGraphParentElement[] nestPath, GraphStack stack)
		{
			return default(bool);
		}
	}
}
namespace NarrativeEngine.Localisation
{
	[Serializable]
	[Token(Token = "0x2000377")]
	[Metadata(AllowedTypes = (MetadataType.AllTableEntries | MetadataType.AllSharedTableEntries), AllowMultiple = false, MenuItem = "Fact Value Override")]
	public class FactValueOverrideMetadata : IEntryOverride, IMetadata
	{
		[Serializable]
		[Token(Token = "0x2000378")]
		public class FactValueOverrideData
		{
			[Token(Token = "0x400112C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public FactRequirement.FactValue value;

			[Token(Token = "0x400112D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public EntryOverrideType entryOverrideType;

			[Token(Token = "0x400112E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public TableReference tableReference;

			[Token(Token = "0x400112F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			public TableEntryReference tableEntryReference;

			[Token(Token = "0x60013F8")]
			[Address(RVA = "0xF2C630", Offset = "0xF2C630", VA = "0xF2C630")]
			public FactValueOverrideData()
			{
			}
		}

		[Token(Token = "0x400112A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		public FactAsset _asset;

		[Token(Token = "0x400112B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		public List<FactValueOverrideData> _valueOverrides;

		[Token(Token = "0x60013F6")]
		[Address(RVA = "0xF2B158", Offset = "0xF2B158", VA = "0xF2B158", Slot = "4")]
		public EntryOverrideType GetOverride(out TableReference tableReference, out TableEntryReference tableEntryReference)
		{
			return default(EntryOverrideType);
		}

		[Token(Token = "0x60013F7")]
		[Address(RVA = "0xF2B5A8", Offset = "0xF2B5A8", VA = "0xF2B5A8")]
		public FactValueOverrideMetadata()
		{
		}
	}
}
namespace NarrativeEngine.DialogOLD
{
	[Token(Token = "0x2000379")]
	public enum DialogCharacter
	{
		[Token(Token = "0x4001131")]
		None,
		[Token(Token = "0x4001132")]
		Forrest,
		[Token(Token = "0x4001133")]
		Producer,
		[Token(Token = "0x4001134")]
		Caller1,
		[Token(Token = "0x4001135")]
		Caller2,
		[Token(Token = "0x4001136")]
		Count
	}
}
namespace NarrativeEngine.Dialog
{
	[Token(Token = "0x200037A")]
	[CreateAssetMenu(menuName = "Narrative Engine/Dialogue/Character")]
	public class CharacterAsset : ScriptableObject
	{
		[Token(Token = "0x4001137")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		public DialogCharacter _oldCharacter;

		[Token(Token = "0x4001138")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private string _name;

		[Token(Token = "0x4001139")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private string _localisedName;

		[Token(Token = "0x400113A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Texture2D _editorImage;

		[Token(Token = "0x170001EC")]
		public string fullName
		{
			[Token(Token = "0x60013F9")]
			[Address(RVA = "0xF2C638", Offset = "0xF2C638", VA = "0xF2C638")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001ED")]
		public string localisedName
		{
			[Token(Token = "0x60013FA")]
			[Address(RVA = "0xF2C640", Offset = "0xF2C640", VA = "0xF2C640")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60013FB")]
		[Address(RVA = "0xF2C648", Offset = "0xF2C648", VA = "0xF2C648")]
		public CharacterAsset()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200037B")]
	public struct Line
	{
		[Serializable]
		[Token(Token = "0x200037C")]
		public struct Audio
		{
			[Token(Token = "0x400113F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[SerializeField]
			public EventReference _fmodEventReference;
		}

		[Token(Token = "0x400113B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		public CharacterAsset _speaker;

		[Token(Token = "0x400113C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		[SerializeField]
		public string _text;

		[Token(Token = "0x400113D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		public Audio _audio;

		[Token(Token = "0x400113E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		public string _uid;
	}
	[Serializable]
	[Token(Token = "0x200037D")]
	public struct Dialogue
	{
		[Token(Token = "0x4001140")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		public Line[] _lines;

		[Token(Token = "0x4001141")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		[SerializeField]
		public string _uid;
	}
	[Token(Token = "0x200037E")]
	[CreateAssetMenu(menuName = "Narrative Engine/Dialogue/Dialogue")]
	public class DialogueAsset : ScriptableObject, ISerializationDependency, ISerializationCallbackReceiver, IObjectToUnitType
	{
		[Token(Token = "0x4001142")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Dialogue _dialogue;

		[Token(Token = "0x170001EE")]
		public Dialogue dialogue
		{
			[Token(Token = "0x60013FC")]
			[Address(RVA = "0xF2C6C0", Offset = "0xF2C6C0", VA = "0xF2C6C0")]
			get
			{
				return default(Dialogue);
			}
		}

		[Token(Token = "0x170001EF")]
		private Type global::Bolt.IObjectToUnitType.convertedUnitType
		{
			[Token(Token = "0x60013FD")]
			[Address(RVA = "0xF2C6CC", Offset = "0xF2C6CC", VA = "0xF2C6CC", Slot = "6")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001F0")]
		public IEnumerable<ISerializationDependency> deserializationDependencies
		{
			[Token(Token = "0x60013FE")]
			[Address(RVA = "0xF2C738", Offset = "0xF2C738", VA = "0xF2C738")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60013FF")]
		[Address(RVA = "0xF2C7B4", Offset = "0xF2C7B4", VA = "0xF2C7B4", Slot = "4")]
		public void OnBeforeSerialize()
		{
		}

		[Token(Token = "0x6001400")]
		[Address(RVA = "0xF2C7B8", Offset = "0xF2C7B8", VA = "0xF2C7B8", Slot = "5")]
		public void OnAfterDeserialize()
		{
		}

		[Token(Token = "0x6001401")]
		[Address(RVA = "0xF2C81C", Offset = "0xF2C81C", VA = "0xF2C81C", Slot = "7")]
		protected virtual void OnEnable()
		{
		}

		[Token(Token = "0x6001402")]
		[Address(RVA = "0xF2C874", Offset = "0xF2C874", VA = "0xF2C874", Slot = "8")]
		protected virtual void OnDisable()
		{
		}

		[Token(Token = "0x6001403")]
		[Address(RVA = "0xF2C8CC", Offset = "0xF2C8CC", VA = "0xF2C8CC")]
		public DialogueAsset()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200037F")]
	public struct DialogueChoice
	{
		[Serializable]
		[Token(Token = "0x2000380")]
		public struct Prompt
		{
			[Token(Token = "0x4001149")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[SerializeField]
			public string _text;

			[Token(Token = "0x400114A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[SerializeField]
			public FactRequirement _requirements;
		}

		[Serializable]
		[Token(Token = "0x2000381")]
		public struct Choice
		{
			[Token(Token = "0x400114B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[SerializeField]
			public string _prompt;

			[Token(Token = "0x400114C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[SerializeField]
			public FactRequirement _requirements;

			[Token(Token = "0x400114D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[SerializeField]
			public bool _hasLine;

			[Token(Token = "0x400114E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[SerializeField]
			public Line[] _lines;

			[Token(Token = "0x400114F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			[SerializeField]
			public string _uid;
		}

		[Serializable]
		[Token(Token = "0x2000382")]
		public struct SilentChoice
		{
			[Token(Token = "0x4001150")]
			public const string uid = "silent";

			[Token(Token = "0x4001151")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[SerializeField]
			public float _countdown;

			[Token(Token = "0x4001152")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			[SerializeField]
			public bool _hasLine;

			[Token(Token = "0x4001153")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[SerializeField]
			public Line[] _lines;
		}

		[Token(Token = "0x4001143")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		public string _prompt;

		[Token(Token = "0x4001144")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		[SerializeField]
		public Prompt[] _optionalPrompts;

		[Token(Token = "0x4001145")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		public Choice[] _choices;

		[Token(Token = "0x4001146")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		public bool _hasSilentChoice;

		[Token(Token = "0x4001147")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		public SilentChoice _silent;

		[Token(Token = "0x4001148")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		public string _uid;
	}
	[Token(Token = "0x2000383")]
	[CreateAssetMenu(menuName = "Narrative Engine/Dialogue/Dialogue Choice")]
	public class DialogueChoiceAsset : ScriptableObject, ISerializationDependency, ISerializationCallbackReceiver, IObjectToUnitType
	{
		[Token(Token = "0x4001154")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private DialogueChoice _dialogueChoice;

		[Token(Token = "0x170001F1")]
		public DialogueChoice dialogueChoice
		{
			[Token(Token = "0x6001404")]
			[Address(RVA = "0xF2C8D4", Offset = "0xF2C8D4", VA = "0xF2C8D4")]
			get
			{
				return default(DialogueChoice);
			}
		}

		[Token(Token = "0x170001F2")]
		private Type global::Bolt.IObjectToUnitType.convertedUnitType
		{
			[Token(Token = "0x6001405")]
			[Address(RVA = "0xF2C8F4", Offset = "0xF2C8F4", VA = "0xF2C8F4", Slot = "6")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001F3")]
		public IEnumerable<ISerializationDependency> deserializationDependencies
		{
			[Token(Token = "0x6001406")]
			[Address(RVA = "0xF2C960", Offset = "0xF2C960", VA = "0xF2C960")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001407")]
		[Address(RVA = "0xF2C9DC", Offset = "0xF2C9DC", VA = "0xF2C9DC", Slot = "4")]
		public void OnBeforeSerialize()
		{
		}

		[Token(Token = "0x6001408")]
		[Address(RVA = "0xF2C9E0", Offset = "0xF2C9E0", VA = "0xF2C9E0", Slot = "5")]
		public void OnAfterDeserialize()
		{
		}

		[Token(Token = "0x6001409")]
		[Address(RVA = "0xF2CA44", Offset = "0xF2CA44", VA = "0xF2CA44", Slot = "7")]
		protected virtual void OnEnable()
		{
		}

		[Token(Token = "0x600140A")]
		[Address(RVA = "0xF2CA9C", Offset = "0xF2CA9C", VA = "0xF2CA9C", Slot = "8")]
		protected virtual void OnDisable()
		{
		}

		[Token(Token = "0x600140B")]
		[Address(RVA = "0xF2CAF4", Offset = "0xF2CAF4", VA = "0xF2CAF4")]
		public DialogueChoiceAsset()
		{
		}
	}
	[Token(Token = "0x2000384")]
	public interface IDialogueController
	{
		[Token(Token = "0x2000385")]
		public struct Choice
		{
			[Token(Token = "0x4001155")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public string question;

			[Token(Token = "0x4001156")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public string[] answers;

			[Token(Token = "0x4001157")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string[] answerIds;

			[Token(Token = "0x4001158")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public float timeout;
		}

		[Token(Token = "0x170001F4")]
		Line current
		{
			[Token(Token = "0x600140C")]
			get;
		}

		[Token(Token = "0x170001F5")]
		Choice currentChoice
		{
			[Token(Token = "0x600140D")]
			get;
		}

		[Token(Token = "0x170001F6")]
		bool isFinished
		{
			[Token(Token = "0x600140E")]
			get;
		}

		[Token(Token = "0x170001F7")]
		bool isLine
		{
			[Token(Token = "0x600140F")]
			get;
		}

		[Token(Token = "0x170001F8")]
		bool isChoice
		{
			[Token(Token = "0x6001410")]
			get;
		}

		[Token(Token = "0x6001411")]
		bool Queue(Dialogue asset, Action finishedCallback);

		[Token(Token = "0x6001412")]
		bool Queue(DialogueChoice asset, Action<string> choiceSelectedCallback, Action finishedCallback);

		[Token(Token = "0x6001413")]
		bool Cancel();

		[Token(Token = "0x6001414")]
		void Next();

		[Token(Token = "0x6001415")]
		void Next(string choiceId);
	}
	[Token(Token = "0x2000386")]
	public class DialogueController : IDialogueController
	{
		[Token(Token = "0x2000387")]
		private struct QueuedLine
		{
			[Token(Token = "0x400115F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Line line;

			[Token(Token = "0x4001160")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Action callback;

			[Token(Token = "0x4001161")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public string groupId;
		}

		[Token(Token = "0x2000388")]
		private struct QueuedChoice
		{
			[Token(Token = "0x4001162")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public DialogueChoice choice;

			[Token(Token = "0x4001163")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public Action<string> choiceCallback;

			[Token(Token = "0x4001164")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public Action callback;
		}

		[Token(Token = "0x4001159")]
		private const int c_tempValidRequirementsListInitialLength = 16;

		[Token(Token = "0x400115A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private LinkedList<QueuedLine> _queuedLines;

		[Token(Token = "0x400115B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private LinkedList<QueuedChoice> _queuedChoices;

		[Token(Token = "0x400115C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private LinkedList<int> _queuedChoiceOffsets;

		[Token(Token = "0x400115D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private IDialogueController.Choice _evaluatedChoice;

		[Token(Token = "0x400115E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static List<int> s_tempValidRequirementIndices;

		[Token(Token = "0x170001F9")]
		public Line current
		{
			[Token(Token = "0x6001416")]
			[Address(RVA = "0xF2CAFC", Offset = "0xF2CAFC", VA = "0xF2CAFC", Slot = "4")]
			get
			{
				return default(Line);
			}
		}

		[Token(Token = "0x170001FA")]
		public IDialogueController.Choice currentChoice
		{
			[Token(Token = "0x6001417")]
			[Address(RVA = "0xF2CBF0", Offset = "0xF2CBF0", VA = "0xF2CBF0", Slot = "5")]
			get
			{
				return default(IDialogueController.Choice);
			}
		}

		[Token(Token = "0x170001FB")]
		public bool isFinished
		{
			[Token(Token = "0x6001418")]
			[Address(RVA = "0xF2CCB8", Offset = "0xF2CCB8", VA = "0xF2CCB8", Slot = "6")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001FC")]
		public bool isLine
		{
			[Token(Token = "0x6001419")]
			[Address(RVA = "0xF2CB88", Offset = "0xF2CB88", VA = "0xF2CB88", Slot = "7")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001FD")]
		public bool isChoice
		{
			[Token(Token = "0x600141A")]
			[Address(RVA = "0xF2CC2C", Offset = "0xF2CC2C", VA = "0xF2CC2C", Slot = "8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x600141B")]
		[Address(RVA = "0xF2CD2C", Offset = "0xF2CD2C", VA = "0xF2CD2C")]
		static DialogueController()
		{
		}

		[Token(Token = "0x600141C")]
		[Address(RVA = "0xF2CDC8", Offset = "0xF2CDC8", VA = "0xF2CDC8")]
		public DialogueController()
		{
		}

		[Token(Token = "0x600141D")]
		[Address(RVA = "0xF2CEF0", Offset = "0xF2CEF0", VA = "0xF2CEF0", Slot = "9")]
		public bool Queue(Dialogue dialogue, Action finishedCallback)
		{
			return default(bool);
		}

		[Token(Token = "0x600141E")]
		[Address(RVA = "0xF2D104", Offset = "0xF2D104", VA = "0xF2D104", Slot = "10")]
		public bool Queue(DialogueChoice dialogueChoice, Action<string> choiceSelectedCallback, Action finishedCallback)
		{
			return default(bool);
		}

		[Token(Token = "0x600141F")]
		[Address(RVA = "0xF2D6FC", Offset = "0xF2D6FC", VA = "0xF2D6FC", Slot = "11")]
		public bool Cancel()
		{
			return default(bool);
		}

		[Token(Token = "0x6001420")]
		[Address(RVA = "0xF2D79C", Offset = "0xF2D79C", VA = "0xF2D79C", Slot = "12")]
		public void Next()
		{
		}

		[Token(Token = "0x6001421")]
		[Address(RVA = "0xF2DC4C", Offset = "0xF2DC4C", VA = "0xF2DC4C", Slot = "13")]
		public void Next(string choiceId)
		{
		}

		[Token(Token = "0x6001422")]
		[Address(RVA = "0xF2DAD0", Offset = "0xF2DAD0", VA = "0xF2DAD0")]
		private void InsertChoiceLine(Line line, Action callback, string groupId)
		{
		}

		[Token(Token = "0x6001423")]
		[Address(RVA = "0xF2D2D0", Offset = "0xF2D2D0", VA = "0xF2D2D0")]
		private IDialogueController.Choice EvaluateDialogueChoice(DialogueChoice dialogueChoice)
		{
			return default(IDialogueController.Choice);
		}

		[Token(Token = "0x6001424")]
		[Address(RVA = "0xF2DFBC", Offset = "0xF2DFBC", VA = "0xF2DFBC")]
		private bool EvaluateFactRequirements(FactRequirement requirements)
		{
			return default(bool);
		}

		[Token(Token = "0x6001425")]
		[Address(RVA = "0xF2E1F0", Offset = "0xF2E1F0", VA = "0xF2E1F0")]
		private bool ContainsGroup(string groupGuid)
		{
			return default(bool);
		}

		[Token(Token = "0x6001426")]
		[Address(RVA = "0xF2E304", Offset = "0xF2E304", VA = "0xF2E304")]
		public bool TrySerialiseCurrent(out string groupGuid, out string lineId)
		{
			return default(bool);
		}

		[Token(Token = "0x6001427")]
		[Address(RVA = "0xF2E3FC", Offset = "0xF2E3FC", VA = "0xF2E3FC")]
		public bool TrySerialiseCurrentChoice(out string groupGuid)
		{
			return default(bool);
		}

		[Token(Token = "0x6001428")]
		[Address(RVA = "0xF2E4B0", Offset = "0xF2E4B0", VA = "0xF2E4B0")]
		public void Resume(string groupGuid, string lineId)
		{
		}

		[Token(Token = "0x6001429")]
		[Address(RVA = "0xF2E714", Offset = "0xF2E714", VA = "0xF2E714")]
		private void MoveGroupToFront(string groupGuid)
		{
		}

		[Token(Token = "0x600142A")]
		[Address(RVA = "0xF2EA8C", Offset = "0xF2EA8C", VA = "0xF2EA8C")]
		private bool FindPositionOfLine(string groupGuid, string lineId, out int position, out int choiceResponseIndex, out int choiceResponsePosition)
		{
			return default(bool);
		}

		[Token(Token = "0x600142B")]
		[Address(RVA = "0xF2EE38", Offset = "0xF2EE38", VA = "0xF2EE38")]
		private void AdvanceToPosition(int position)
		{
		}
	}
}
namespace NarrativeEngine.Dialog.BoltOLD
{
	[Token(Token = "0x2000389")]
	[RenamedFrom("PlayFMODAudio")]
	[UnitCategory("NarrativeEngineOLD")]
	public sealed class PlayFMODAudio : Unit
	{
		[Token(Token = "0x4001165")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[Inspectable]
		[Serialize]
		public StudioEventEmitter aEmitter;

		[Token(Token = "0x170001FE")]
		[PortLabelHidden]
		[DoNotSerialize]
		public ControlInput enter
		{
			[Token(Token = "0x600142C")]
			[Address(RVA = "0xF2EF9C", Offset = "0xF2EF9C", VA = "0xF2EF9C")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x600142D")]
			[Address(RVA = "0xF2EFA4", Offset = "0xF2EFA4", VA = "0xF2EFA4")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x170001FF")]
		[PortLabelHidden]
		[DoNotSerialize]
		public ControlOutput exit
		{
			[Token(Token = "0x600142E")]
			[Address(RVA = "0xF2EFAC", Offset = "0xF2EFAC", VA = "0xF2EFAC")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x600142F")]
			[Address(RVA = "0xF2EFB4", Offset = "0xF2EFB4", VA = "0xF2EFB4")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x6001430")]
		[Address(RVA = "0xF2EFBC", Offset = "0xF2EFBC", VA = "0xF2EFBC", Slot = "67")]
		protected override void Definition()
		{
		}

		[Token(Token = "0x6001431")]
		[Address(RVA = "0xF2F0C0", Offset = "0xF2F0C0", VA = "0xF2F0C0")]
		public ControlOutput Enter(global::Bolt.Flow flow)
		{
			return null;
		}

		[Token(Token = "0x6001432")]
		[Address(RVA = "0xF2F0E8", Offset = "0xF2F0E8", VA = "0xF2F0E8")]
		public PlayFMODAudio()
		{
		}
	}
	[Token(Token = "0x200038A")]
	[UnitCategory("NarrativeEngineOLD")]
	[RenamedFrom("SetDialogAnchor")]
	public sealed class SetDialogAnchor : Unit
	{
		[Token(Token = "0x4001168")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[Inspectable]
		[Serialize]
		public DialogAnchor anchor;

		[Token(Token = "0x17000200")]
		[PortLabelHidden]
		[DoNotSerialize]
		public ControlInput enter
		{
			[Token(Token = "0x6001433")]
			[Address(RVA = "0xF2F0F0", Offset = "0xF2F0F0", VA = "0xF2F0F0")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001434")]
			[Address(RVA = "0xF2F0F8", Offset = "0xF2F0F8", VA = "0xF2F0F8")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x17000201")]
		[DoNotSerialize]
		[PortLabelHidden]
		public ControlOutput exit
		{
			[Token(Token = "0x6001435")]
			[Address(RVA = "0xF2F100", Offset = "0xF2F100", VA = "0xF2F100")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001436")]
			[Address(RVA = "0xF2F108", Offset = "0xF2F108", VA = "0xF2F108")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x6001437")]
		[Address(RVA = "0xF2F110", Offset = "0xF2F110", VA = "0xF2F110", Slot = "67")]
		protected override void Definition()
		{
		}

		[Token(Token = "0x6001438")]
		[Address(RVA = "0xF2F214", Offset = "0xF2F214", VA = "0xF2F214")]
		public ControlOutput Enter(global::Bolt.Flow flow)
		{
			return null;
		}

		[Token(Token = "0x6001439")]
		[Address(RVA = "0xF2F21C", Offset = "0xF2F21C", VA = "0xF2F21C")]
		public SetDialogAnchor()
		{
		}
	}
}
namespace NarrativeEngine.Dialog.Bolt
{
	[Token(Token = "0x200038B")]
	[UnitCategory("NarrativeEngine")]
	public sealed class DialogueChoiceUnit : Unit, IGraphElementWithData, IGraphElement, IGraphItem, INotifiedCollectionItem, IDisposable, IPrewarmable, IAotStubbable, IIdentifiable, IDialogAssetProvider
	{
		[Token(Token = "0x200038C")]
		private class Data : IGraphElementData
		{
			[Token(Token = "0x400116F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public bool isComplete;

			[Token(Token = "0x4001170")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public float startedTime;

			[Token(Token = "0x6001447")]
			[Address(RVA = "0xF2F494", Offset = "0xF2F494", VA = "0xF2F494")]
			public Data()
			{
			}
		}

		[Token(Token = "0x200038D")]
		[CompilerGenerated]
		private sealed class <>c__DisplayClass22_0
		{
			[Token(Token = "0x4001171")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string choiceId;

			[Token(Token = "0x4001172")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Data data;

			[Token(Token = "0x6001448")]
			[Address(RVA = "0xF2F80C", Offset = "0xF2F80C", VA = "0xF2F80C")]
			public <>c__DisplayClass22_0()
			{
			}

			[Token(Token = "0x6001449")]
			[Address(RVA = "0xF2F814", Offset = "0xF2F814", VA = "0xF2F814")]
			internal void <Run>b__0(string id)
			{
			}

			[Token(Token = "0x600144A")]
			[Address(RVA = "0xF2F81C", Offset = "0xF2F81C", VA = "0xF2F81C")]
			internal void <Run>b__1()
			{
			}
		}

		[Token(Token = "0x200038E")]
		[CompilerGenerated]
		private sealed class <Run>d__22 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001173")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001174")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001175")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public global::Bolt.Flow flow;

			[Token(Token = "0x4001176")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public DialogueChoiceUnit <>4__this;

			[Token(Token = "0x4001177")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private <>c__DisplayClass22_0 <>8__1;

			[Token(Token = "0x17000207")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600144E")]
				[Address(RVA = "0xF2FCA0", Offset = "0xF2FCA0", VA = "0xF2FCA0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000208")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001450")]
				[Address(RVA = "0xF2FCE8", Offset = "0xF2FCE8", VA = "0xF2FCE8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600144B")]
			[Address(RVA = "0xF2F7E4", Offset = "0xF2F7E4", VA = "0xF2F7E4")]
			[DebuggerHidden]
			public <Run>d__22(int <>1__state)
			{
			}

			[Token(Token = "0x600144C")]
			[Address(RVA = "0xF2F83C", Offset = "0xF2F83C", VA = "0xF2F83C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600144D")]
			[Address(RVA = "0xF2F840", Offset = "0xF2F840", VA = "0xF2F840", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600144F")]
			[Address(RVA = "0xF2FCA8", Offset = "0xF2FCA8", VA = "0xF2FCA8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400116B")]
		private const float c_cooldownTime = 3f;

		[Token(Token = "0x400116C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[DoNotSerialize]
		private DialogueChoiceAsset _asset;

		[Token(Token = "0x17000202")]
		[Serialize]
		public DialogueChoiceAsset asset
		{
			[Token(Token = "0x600143A")]
			[Address(RVA = "0xF2F224", Offset = "0xF2F224", VA = "0xF2F224")]
			get
			{
				return null;
			}
			[Token(Token = "0x600143B")]
			[Address(RVA = "0xF2F22C", Offset = "0xF2F22C", VA = "0xF2F22C")]
			set
			{
			}
		}

		[Token(Token = "0x17000203")]
		[PortLabelHidden]
		[DoNotSerialize]
		public ControlInput enter
		{
			[Token(Token = "0x600143C")]
			[Address(RVA = "0xF2F2D0", Offset = "0xF2F2D0", VA = "0xF2F2D0")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x600143D")]
			[Address(RVA = "0xF2F2D8", Offset = "0xF2F2D8", VA = "0xF2F2D8")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x17000204")]
		[DoNotSerialize]
		[PortLabelHidden]
		public ControlOutput[] exits
		{
			[Token(Token = "0x600143E")]
			[Address(RVA = "0xF2F2E0", Offset = "0xF2F2E0", VA = "0xF2F2E0")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x600143F")]
			[Address(RVA = "0xF2F2E8", Offset = "0xF2F2E8", VA = "0xF2F2E8")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x17000205")]
		public override IEnumerable<ISerializationDependency> deserializationDependencies
		{
			[Token(Token = "0x6001442")]
			[Address(RVA = "0xF2F33C", Offset = "0xF2F33C", VA = "0xF2F33C", Slot = "31")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000206")]
		private UnityEngine.Object NarrativeEngine.Dialog.Bolt.IDialogAssetProvider.asset
		{
			[Token(Token = "0x6001443")]
			[Address(RVA = "0xF2F430", Offset = "0xF2F430", VA = "0xF2F430", Slot = "73")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001440")]
		[Address(RVA = "0xF2F2F0", Offset = "0xF2F2F0", VA = "0xF2F2F0")]
		public DialogueChoiceUnit()
		{
		}

		[Token(Token = "0x6001441")]
		[Address(RVA = "0xF2F2F8", Offset = "0xF2F2F8", VA = "0xF2F2F8")]
		public DialogueChoiceUnit(DialogueChoiceAsset asset)
		{
		}

		[Token(Token = "0x6001444")]
		[Address(RVA = "0xF2F438", Offset = "0xF2F438", VA = "0xF2F438", Slot = "72")]
		public IGraphElementData CreateData()
		{
			return null;
		}

		[Token(Token = "0x6001445")]
		[Address(RVA = "0xF2F49C", Offset = "0xF2F49C", VA = "0xF2F49C", Slot = "67")]
		protected override void Definition()
		{
		}

		[Token(Token = "0x6001446")]
		[Address(RVA = "0xF2F754", Offset = "0xF2F754", VA = "0xF2F754")]
		[IteratorStateMachine(typeof(<Run>d__22))]
		private IEnumerator Run(global::Bolt.Flow flow)
		{
			return null;
		}
	}
	[Token(Token = "0x200038F")]
	public interface IDialogAssetProvider
	{
		[Token(Token = "0x17000209")]
		UnityEngine.Object asset
		{
			[Token(Token = "0x6001451")]
			get;
		}
	}
	[Token(Token = "0x2000390")]
	[RenamedFrom("Dialog")]
	[RenamedFrom("NarrativeEngine.Dialog.Bolt.Dialog")]
	[RenamedFrom("NarrativeEngine.Dialog.Bolt.DialogUnit")]
	[UnitCategory("NarrativeEngine")]
	public sealed class DialogueUnit : Unit, IGraphElementWithData, IGraphElement, IGraphItem, INotifiedCollectionItem, IDisposable, IPrewarmable, IAotStubbable, IIdentifiable, IDialogAssetProvider
	{
		[Token(Token = "0x2000391")]
		private class Data : IGraphElementData
		{
			[Token(Token = "0x400117C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public bool isComplete;

			[Token(Token = "0x400117D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public float startedTime;

			[Token(Token = "0x600145F")]
			[Address(RVA = "0xF2FEC4", Offset = "0xF2FEC4", VA = "0xF2FEC4")]
			public Data()
			{
			}
		}

		[Token(Token = "0x2000392")]
		[CompilerGenerated]
		private sealed class <>c__DisplayClass22_0
		{
			[Token(Token = "0x400117E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Data data;

			[Token(Token = "0x6001460")]
			[Address(RVA = "0xF30088", Offset = "0xF30088", VA = "0xF30088")]
			public <>c__DisplayClass22_0()
			{
			}

			[Token(Token = "0x6001461")]
			[Address(RVA = "0xF30090", Offset = "0xF30090", VA = "0xF30090")]
			internal void <Run>b__0()
			{
			}
		}

		[Token(Token = "0x2000393")]
		[CompilerGenerated]
		private sealed class <Run>d__22 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400117F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001180")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001181")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public global::Bolt.Flow flow;

			[Token(Token = "0x4001182")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public DialogueUnit <>4__this;

			[Token(Token = "0x4001183")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private <>c__DisplayClass22_0 <>8__1;

			[Token(Token = "0x1700020F")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001465")]
				[Address(RVA = "0xF303BC", Offset = "0xF303BC", VA = "0xF303BC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000210")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001467")]
				[Address(RVA = "0xF30404", Offset = "0xF30404", VA = "0xF30404", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001462")]
			[Address(RVA = "0xF30060", Offset = "0xF30060", VA = "0xF30060")]
			[DebuggerHidden]
			public <Run>d__22(int <>1__state)
			{
			}

			[Token(Token = "0x6001463")]
			[Address(RVA = "0xF300B0", Offset = "0xF300B0", VA = "0xF300B0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001464")]
			[Address(RVA = "0xF300B4", Offset = "0xF300B4", VA = "0xF300B4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001466")]
			[Address(RVA = "0xF303C4", Offset = "0xF303C4", VA = "0xF303C4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001178")]
		private const float c_cooldownTime = 3f;

		[Token(Token = "0x4001179")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[DoNotSerialize]
		private DialogueAsset _asset;

		[Token(Token = "0x1700020A")]
		[Serialize]
		public DialogueAsset asset
		{
			[Token(Token = "0x6001452")]
			[Address(RVA = "0xF2FCF0", Offset = "0xF2FCF0", VA = "0xF2FCF0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001453")]
			[Address(RVA = "0xF2FCF8", Offset = "0xF2FCF8", VA = "0xF2FCF8")]
			set
			{
			}
		}

		[Token(Token = "0x1700020B")]
		[PortLabelHidden]
		[DoNotSerialize]
		public ControlInput enter
		{
			[Token(Token = "0x6001454")]
			[Address(RVA = "0xF2FD00", Offset = "0xF2FD00", VA = "0xF2FD00")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001455")]
			[Address(RVA = "0xF2FD08", Offset = "0xF2FD08", VA = "0xF2FD08")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x1700020C")]
		[DoNotSerialize]
		[PortLabelHidden]
		public ControlOutput exit
		{
			[Token(Token = "0x6001456")]
			[Address(RVA = "0xF2FD10", Offset = "0xF2FD10", VA = "0xF2FD10")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001457")]
			[Address(RVA = "0xF2FD18", Offset = "0xF2FD18", VA = "0xF2FD18")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x1700020D")]
		public override IEnumerable<ISerializationDependency> deserializationDependencies
		{
			[Token(Token = "0x600145A")]
			[Address(RVA = "0xF2FD6C", Offset = "0xF2FD6C", VA = "0xF2FD6C", Slot = "31")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700020E")]
		private UnityEngine.Object NarrativeEngine.Dialog.Bolt.IDialogAssetProvider.asset
		{
			[Token(Token = "0x600145B")]
			[Address(RVA = "0xF2FE60", Offset = "0xF2FE60", VA = "0xF2FE60", Slot = "73")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001458")]
		[Address(RVA = "0xF2FD20", Offset = "0xF2FD20", VA = "0xF2FD20")]
		public DialogueUnit()
		{
		}

		[Token(Token = "0x6001459")]
		[Address(RVA = "0xF2FD28", Offset = "0xF2FD28", VA = "0xF2FD28")]
		public DialogueUnit(DialogueAsset asset)
		{
		}

		[Token(Token = "0x600145C")]
		[Address(RVA = "0xF2FE68", Offset = "0xF2FE68", VA = "0xF2FE68", Slot = "72")]
		public IGraphElementData CreateData()
		{
			return null;
		}

		[Token(Token = "0x600145D")]
		[Address(RVA = "0xF2FECC", Offset = "0xF2FECC", VA = "0xF2FECC", Slot = "67")]
		protected override void Definition()
		{
		}

		[Token(Token = "0x600145E")]
		[Address(RVA = "0xF2FFD0", Offset = "0xF2FFD0", VA = "0xF2FFD0")]
		[IteratorStateMachine(typeof(<Run>d__22))]
		private IEnumerator Run(global::Bolt.Flow flow)
		{
			return null;
		}
	}
	[Token(Token = "0x2000394")]
	[UnitCategory("NarrativeEngine")]
	[UnitTitle("Wait For Custom Event (Advanced)")]
	public class WaitForCustomEventAdvancedUnit : WaitForCustomEventUnit, IResumableFlowOwnerUnit, IFlowResumableUnit, IUnit, IGraphElementWithDebugData, IGraphElement, IGraphItem, INotifiedCollectionItem, IDisposable, IPrewarmable, IAotStubbable, IIdentifiable, IFlowOwner, IGraphFlowCanceller
	{
		[Token(Token = "0x2000395")]
		public new sealed class Data : WaitForCustomEventUnit.Data, IUnitFlowProvider
		{
			[Token(Token = "0x4001193")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public float remainingLoopTime;

			[Token(Token = "0x4001194")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			public float remainingRunningTime;

			[Token(Token = "0x4001195")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public bool isResumeWaiting;

			[Token(Token = "0x4001196")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public object[] eventArguments;

			[Token(Token = "0x17000218")]
			public HashSet<global::Bolt.Flow> activeFlows
			{
				[Token(Token = "0x6001484")]
				[Address(RVA = "0xF31B9C", Offset = "0xF31B9C", VA = "0xF31B9C", Slot = "4")]
				[CompilerGenerated]
				get
				{
					return null;
				}
				[Token(Token = "0x6001485")]
				[Address(RVA = "0xF31BA4", Offset = "0xF31BA4", VA = "0xF31BA4")]
				[CompilerGenerated]
				set
				{
				}
			}

			[Token(Token = "0x6001486")]
			[Address(RVA = "0xF30FA4", Offset = "0xF30FA4", VA = "0xF30FA4")]
			public Data()
			{
			}
		}

		[Token(Token = "0x2000397")]
		[CompilerGenerated]
		private sealed class <Await>d__34 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001199")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400119A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400119B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public global::Bolt.Flow flow;

			[Token(Token = "0x400119C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public WaitForCustomEventAdvancedUnit <>4__this;

			[Token(Token = "0x400119D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private Data <data>5__2;

			[Token(Token = "0x400119E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private ControlOutput <finalOutput>5__3;

			[Token(Token = "0x400119F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private float <loopCooldown>5__4;

			[Token(Token = "0x40011A0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			private float <maxRunningTime>5__5;

			[Token(Token = "0x40011A1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private float <loopStart>5__6;

			[Token(Token = "0x40011A2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
			private float <runStart>5__7;

			[Token(Token = "0x40011A3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			private global::Bolt.Flow <tickFlow>5__8;

			[Token(Token = "0x17000219")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600148C")]
				[Address(RVA = "0xF32380", Offset = "0xF32380", VA = "0xF32380", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700021A")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600148E")]
				[Address(RVA = "0xF323C8", Offset = "0xF323C8", VA = "0xF323C8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001489")]
			[Address(RVA = "0xF30AC0", Offset = "0xF30AC0", VA = "0xF30AC0")]
			[DebuggerHidden]
			public <Await>d__34(int <>1__state)
			{
			}

			[Token(Token = "0x600148A")]
			[Address(RVA = "0xF31BD4", Offset = "0xF31BD4", VA = "0xF31BD4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600148B")]
			[Address(RVA = "0xF31BD8", Offset = "0xF31BD8", VA = "0xF31BD8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600148D")]
			[Address(RVA = "0xF32388", Offset = "0xF32388", VA = "0xF32388", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001189")]
		private const float cDefaultTickFrequency = 30f;

		[Token(Token = "0x400118A")]
		private const float cDefaultExpirationTime = 0f;

		[Token(Token = "0x400118B")]
		private const bool cDefaultConditionMetValue = true;

		[Token(Token = "0x400118C")]
		private const int cMaxArgumentCount = 10;

		[Token(Token = "0x400118D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[SerializeAs("argumentCount")]
		private int _argumentCount;

		[Token(Token = "0x400118F")]
		private const string c_remainingLoopTimeKey = "remaining_loop_time";

		[Token(Token = "0x4001190")]
		private const string c_remainingRunningTimeKey = "remaining_running_time";

		[Token(Token = "0x4001191")]
		private const string c_eventArguments = "event_arguments";

		[Token(Token = "0x17000211")]
		[DoNotSerialize]
		public ControlOutput tick
		{
			[Token(Token = "0x6001468")]
			[Address(RVA = "0xF3040C", Offset = "0xF3040C", VA = "0xF3040C")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001469")]
			[Address(RVA = "0xF30414", Offset = "0xF30414", VA = "0xF30414")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x17000212")]
		[DoNotSerialize]
		public ControlOutput expired
		{
			[Token(Token = "0x600146A")]
			[Address(RVA = "0xF3041C", Offset = "0xF3041C", VA = "0xF3041C")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x600146B")]
			[Address(RVA = "0xF30424", Offset = "0xF30424", VA = "0xF30424")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x17000213")]
		[DoNotSerialize]
		[RenamedFrom("tickFrequency")]
		public ValueInput tickCooldown
		{
			[Token(Token = "0x600146C")]
			[Address(RVA = "0xF3042C", Offset = "0xF3042C", VA = "0xF3042C")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x600146D")]
			[Address(RVA = "0xF30434", Offset = "0xF30434", VA = "0xF30434")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x17000214")]
		[DoNotSerialize]
		public ValueInput expirationTime
		{
			[Token(Token = "0x600146E")]
			[Address(RVA = "0xF3043C", Offset = "0xF3043C", VA = "0xF3043C")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x600146F")]
			[Address(RVA = "0xF30444", Offset = "0xF30444", VA = "0xF30444")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x17000215")]
		[DoNotSerialize]
		public ValueInput condition
		{
			[Token(Token = "0x6001470")]
			[Address(RVA = "0xF3044C", Offset = "0xF3044C", VA = "0xF3044C")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001471")]
			[Address(RVA = "0xF30454", Offset = "0xF30454", VA = "0xF30454")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x17000216")]
		[DoNotSerialize]
		[UnitHeaderInspectable("Arguments")]
		[Inspectable]
		public int argumentCount
		{
			[Token(Token = "0x6001472")]
			[Address(RVA = "0xF3045C", Offset = "0xF3045C", VA = "0xF3045C")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001473")]
			[Address(RVA = "0xF30464", Offset = "0xF30464", VA = "0xF30464")]
			set
			{
			}
		}

		[Token(Token = "0x17000217")]
		[DoNotSerialize]
		public List<ValueOutput> argumentPorts
		{
			[Token(Token = "0x6001474")]
			[Address(RVA = "0xF3047C", Offset = "0xF3047C", VA = "0xF3047C")]
			[CompilerGenerated]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001475")]
		[Address(RVA = "0xF30484", Offset = "0xF30484", VA = "0xF30484", Slot = "67")]
		protected override void Definition()
		{
		}

		[Token(Token = "0x6001476")]
		[Address(RVA = "0xF309A0", Offset = "0xF309A0", VA = "0xF309A0")]
		private object GetArgumentFromData(global::Bolt.Flow flow, int index)
		{
			return null;
		}

		[Token(Token = "0x6001477")]
		[Address(RVA = "0xF30A30", Offset = "0xF30A30", VA = "0xF30A30", Slot = "76")]
		[IteratorStateMachine(typeof(<Await>d__34))]
		protected override IEnumerator Await(global::Bolt.Flow flow)
		{
			return null;
		}

		[Token(Token = "0x6001478")]
		[Address(RVA = "0xF30AE8", Offset = "0xF30AE8", VA = "0xF30AE8", Slot = "78")]
		protected override void HandleEventArgs(global::Bolt.Flow flow, CustomEventArgs args)
		{
		}

		[Token(Token = "0x6001479")]
		[Address(RVA = "0xF30C78", Offset = "0xF30C78", VA = "0xF30C78", Slot = "77")]
		protected override void Reset(global::Bolt.Flow flow)
		{
		}

		[Token(Token = "0x600147A")]
		[Address(RVA = "0xF30D9C", Offset = "0xF30D9C", VA = "0xF30D9C", Slot = "88")]
		public void CancelFlows(GraphStack stack)
		{
		}

		[Token(Token = "0x600147B")]
		[Address(RVA = "0xF30F18", Offset = "0xF30F18", VA = "0xF30F18", Slot = "79")]
		public override IGraphElementData CreateData()
		{
			return null;
		}

		[Token(Token = "0x600147C")]
		[Address(RVA = "0xF3102C", Offset = "0xF3102C", VA = "0xF3102C", Slot = "82")]
		public global::Bolt.Flow CreateFlowForResume(GraphReference reference)
		{
			return null;
		}

		[Token(Token = "0x600147D")]
		[Address(RVA = "0xF31100", Offset = "0xF31100", VA = "0xF31100", Slot = "83")]
		public void ResumeFlow(global::Bolt.Flow flow, IUnitPort[] previous, IGraphParentElement[] previousGraphParents, IUnitPort current)
		{
		}

		[Token(Token = "0x600147E")]
		[Address(RVA = "0xF312FC", Offset = "0xF312FC", VA = "0xF312FC", Slot = "86")]
		public IUnitFlowProvider GetFlowProvider(GraphStack stack)
		{
			return null;
		}

		[Token(Token = "0x600147F")]
		[Address(RVA = "0xF31354", Offset = "0xF31354", VA = "0xF31354", Slot = "80")]
		public override bool Serialise(FlexBufferBuilder builder, GraphStack stack)
		{
			return default(bool);
		}

		[Token(Token = "0x6001480")]
		[Address(RVA = "0xF3160C", Offset = "0xF3160C", VA = "0xF3160C", Slot = "81")]
		public override bool Deserialise(FlexBuffer.Map root, GraphStack stack)
		{
			return default(bool);
		}

		[Token(Token = "0x6001481")]
		[Address(RVA = "0xF31A9C", Offset = "0xF31A9C", VA = "0xF31A9C", Slot = "84")]
		public void ResumePrevious(global::Bolt.Flow flow, ControlOutput source, ControlInput destination)
		{
		}

		[Token(Token = "0x6001482")]
		[Address(RVA = "0xF31AA0", Offset = "0xF31AA0", VA = "0xF31AA0", Slot = "85")]
		public void ResumeCurrent(global::Bolt.Flow flow, ControlOutput source, ControlInput destination)
		{
		}

		[Token(Token = "0x6001483")]
		[Address(RVA = "0xF31B0C", Offset = "0xF31B0C", VA = "0xF31B0C")]
		public WaitForCustomEventAdvancedUnit()
		{
		}
	}
	[Token(Token = "0x2000398")]
	[UnitCategory("NarrativeEngine")]
	[UnitTitle("Wait For Custom Event")]
	public class WaitForCustomEventUnit : Unit, IUnitWithSerialisableData, IUnit, IGraphElementWithDebugData, IGraphElement, IGraphItem, INotifiedCollectionItem, IDisposable, IPrewarmable, IAotStubbable, IIdentifiable, IGraphElementWithData
	{
		[Token(Token = "0x2000399")]
		public class Data : IGraphElementData
		{
			[Token(Token = "0x40011A8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public bool eventReceived;

			[Token(Token = "0x40011A9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Delegate handler;

			[Token(Token = "0x40011AA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public bool isListening;

			[Token(Token = "0x60014A3")]
			[Address(RVA = "0xF31BAC", Offset = "0xF31BAC", VA = "0xF31BAC")]
			public Data()
			{
			}
		}

		[Token(Token = "0x200039A")]
		[CompilerGenerated]
		private sealed class <Await>d__16 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40011AB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40011AC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40011AD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public global::Bolt.Flow flow;

			[Token(Token = "0x40011AE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public WaitForCustomEventUnit <>4__this;

			[Token(Token = "0x40011AF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private Data <data>5__2;

			[Token(Token = "0x1700021F")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60014A7")]
				[Address(RVA = "0xF32880", Offset = "0xF32880", VA = "0xF32880", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000220")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60014A9")]
				[Address(RVA = "0xF328C8", Offset = "0xF328C8", VA = "0xF328C8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60014A4")]
			[Address(RVA = "0xF32498", Offset = "0xF32498", VA = "0xF32498")]
			[DebuggerHidden]
			public <Await>d__16(int <>1__state)
			{
			}

			[Token(Token = "0x60014A5")]
			[Address(RVA = "0xF32750", Offset = "0xF32750", VA = "0xF32750", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60014A6")]
			[Address(RVA = "0xF32754", Offset = "0xF32754", VA = "0xF32754", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60014A8")]
			[Address(RVA = "0xF32888", Offset = "0xF32888", VA = "0xF32888", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40011A7")]
		private const string c_eventReceived = "eventReceived";

		[Token(Token = "0x1700021B")]
		[PortLabelHidden]
		[DoNotSerialize]
		public ControlInput enter
		{
			[Token(Token = "0x600148F")]
			[Address(RVA = "0xF323D0", Offset = "0xF323D0", VA = "0xF323D0")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001490")]
			[Address(RVA = "0xF323D8", Offset = "0xF323D8", VA = "0xF323D8")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x1700021C")]
		[DoNotSerialize]
		[PortLabelHidden]
		public ValueInput name
		{
			[Token(Token = "0x6001491")]
			[Address(RVA = "0xF323E0", Offset = "0xF323E0", VA = "0xF323E0")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001492")]
			[Address(RVA = "0xF323E8", Offset = "0xF323E8", VA = "0xF323E8")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x1700021D")]
		[DoNotSerialize]
		[PortLabelHidden]
		public ControlOutput exit
		{
			[Token(Token = "0x6001493")]
			[Address(RVA = "0xF323F0", Offset = "0xF323F0", VA = "0xF323F0")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001494")]
			[Address(RVA = "0xF323F8", Offset = "0xF323F8", VA = "0xF323F8")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x1700021E")]
		[DoNotSerialize]
		public bool coroutine
		{
			[Token(Token = "0x6001495")]
			[Address(RVA = "0xF32400", Offset = "0xF32400", VA = "0xF32400", Slot = "75")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001496")]
		[Address(RVA = "0xF30818", Offset = "0xF30818", VA = "0xF30818", Slot = "67")]
		protected override void Definition()
		{
		}

		[Token(Token = "0x6001497")]
		[Address(RVA = "0xF32408", Offset = "0xF32408", VA = "0xF32408", Slot = "76")]
		[IteratorStateMachine(typeof(<Await>d__16))]
		protected virtual IEnumerator Await(global::Bolt.Flow flow)
		{
			return null;
		}

		[Token(Token = "0x6001498")]
		[Address(RVA = "0xF30D34", Offset = "0xF30D34", VA = "0xF30D34", Slot = "77")]
		protected virtual void Reset(global::Bolt.Flow flow)
		{
		}

		[Token(Token = "0x6001499")]
		[Address(RVA = "0xF320DC", Offset = "0xF320DC", VA = "0xF320DC")]
		protected void StartListening(global::Bolt.Flow flow)
		{
		}

		[Token(Token = "0x600149A")]
		[Address(RVA = "0xF32284", Offset = "0xF32284", VA = "0xF32284")]
		protected void StopListening(global::Bolt.Flow flow)
		{
		}

		[Token(Token = "0x600149B")]
		[Address(RVA = "0xF324C8", Offset = "0xF324C8", VA = "0xF324C8")]
		private EventHook GetEventHook(global::Bolt.Flow flow)
		{
			return default(EventHook);
		}

		[Token(Token = "0x600149C")]
		[Address(RVA = "0xF32540", Offset = "0xF32540", VA = "0xF32540")]
		private void HandleCustomEvent(global::Bolt.Flow flow, CustomEventArgs args)
		{
		}

		[Token(Token = "0x600149D")]
		[Address(RVA = "0xF30C74", Offset = "0xF30C74", VA = "0xF30C74", Slot = "78")]
		protected virtual void HandleEventArgs(global::Bolt.Flow flow, CustomEventArgs args)
		{
		}

		[Token(Token = "0x600149E")]
		[Address(RVA = "0xF32600", Offset = "0xF32600", VA = "0xF32600")]
		private bool IsThisTheExpectedEvent(global::Bolt.Flow flow, CustomEventArgs args)
		{
			return default(bool);
		}

		[Token(Token = "0x600149F")]
		[Address(RVA = "0xF326F4", Offset = "0xF326F4", VA = "0xF326F4", Slot = "79")]
		public virtual IGraphElementData CreateData()
		{
			return null;
		}

		[Token(Token = "0x60014A0")]
		[Address(RVA = "0xF31570", Offset = "0xF31570", VA = "0xF31570", Slot = "80")]
		public virtual bool Serialise(FlexBufferBuilder builder, GraphStack stack)
		{
			return default(bool);
		}

		[Token(Token = "0x60014A1")]
		[Address(RVA = "0xF319B0", Offset = "0xF319B0", VA = "0xF319B0", Slot = "81")]
		public virtual bool Deserialise(FlexBuffer.Map root, GraphStack stack)
		{
			return default(bool);
		}

		[Token(Token = "0x60014A2")]
		[Address(RVA = "0xF31B94", Offset = "0xF31B94", VA = "0xF31B94")]
		public WaitForCustomEventUnit()
		{
		}
	}
}
namespace NarrativeEngine.Bolt
{
	[Token(Token = "0x200039C")]
	public sealed class ActivateSoftCollisionZoneUnit : Unit, IUnitWithSerialisableData, IUnit, IGraphElementWithDebugData, IGraphElement, IGraphItem, INotifiedCollectionItem, IDisposable, IPrewarmable, IAotStubbable, IIdentifiable, IGraphElementWithData, IFlowResumableUnit
	{
		[Token(Token = "0x200039D")]
		public class Data : IGraphElementData
		{
			[Token(Token = "0x40011B6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public bool zoneWasActive;

			[Token(Token = "0x60014BC")]
			[Address(RVA = "0xF32954", Offset = "0xF32954", VA = "0xF32954")]
			public Data()
			{
			}
		}

		[Token(Token = "0x40011B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[DoNotSerialize]
		private SoftCollisionZoneAsset _asset;

		[Token(Token = "0x40011B5")]
		private const string c_zoneWasActiveKey = "zoneWasActive";

		[Token(Token = "0x17000221")]
		[Serialize]
		[Inspectable]
		public SoftCollisionZoneAsset asset
		{
			[Token(Token = "0x60014AF")]
			[Address(RVA = "0xF32994", Offset = "0xF32994", VA = "0xF32994")]
			get
			{
				return null;
			}
			[Token(Token = "0x60014B0")]
			[Address(RVA = "0xF3299C", Offset = "0xF3299C", VA = "0xF3299C")]
			set
			{
			}
		}

		[Token(Token = "0x17000222")]
		[PortLabelHidden]
		[DoNotSerialize]
		public ControlInput enter
		{
			[Token(Token = "0x60014B1")]
			[Address(RVA = "0xF329A4", Offset = "0xF329A4", VA = "0xF329A4")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x60014B2")]
			[Address(RVA = "0xF329AC", Offset = "0xF329AC", VA = "0xF329AC")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x17000223")]
		[DoNotSerialize]
		[PortLabelHidden]
		public ControlOutput exit
		{
			[Token(Token = "0x60014B3")]
			[Address(RVA = "0xF329B4", Offset = "0xF329B4", VA = "0xF329B4")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x60014B4")]
			[Address(RVA = "0xF329BC", Offset = "0xF329BC", VA = "0xF329BC")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x60014AC")]
		[Address(RVA = "0xF328F8", Offset = "0xF328F8", VA = "0xF328F8", Slot = "74")]
		public IGraphElementData CreateData()
		{
			return null;
		}

		[Token(Token = "0x60014AD")]
		[Address(RVA = "0xF3295C", Offset = "0xF3295C", VA = "0xF3295C")]
		public ActivateSoftCollisionZoneUnit()
		{
		}

		[Token(Token = "0x60014AE")]
		[Address(RVA = "0xF32964", Offset = "0xF32964", VA = "0xF32964")]
		public ActivateSoftCollisionZoneUnit(SoftCollisionZoneAsset asset)
		{
		}

		[Token(Token = "0x60014B5")]
		[Address(RVA = "0xF329C4", Offset = "0xF329C4", VA = "0xF329C4", Slot = "67")]
		protected override void Definition()
		{
		}

		[Token(Token = "0x60014B6")]
		[Address(RVA = "0xF32AC8", Offset = "0xF32AC8", VA = "0xF32AC8")]
		public ControlOutput Enter(global::Bolt.Flow flow)
		{
			return null;
		}

		[Token(Token = "0x60014B7")]
		[Address(RVA = "0xF32AE0", Offset = "0xF32AE0", VA = "0xF32AE0")]
		private void ActivateZone()
		{
		}

		[Token(Token = "0x60014B8")]
		[Address(RVA = "0xF32C5C", Offset = "0xF32C5C", VA = "0xF32C5C", Slot = "72")]
		public bool Serialise(FlexBufferBuilder builder, GraphStack stack)
		{
			return default(bool);
		}

		[Token(Token = "0x60014B9")]
		[Address(RVA = "0xF32E34", Offset = "0xF32E34", VA = "0xF32E34", Slot = "73")]
		public bool Deserialise(FlexBuffer.Map root, GraphStack stack)
		{
			return default(bool);
		}

		[Token(Token = "0x60014BA")]
		[Address(RVA = "0xF32F20", Offset = "0xF32F20", VA = "0xF32F20", Slot = "76")]
		public void ResumeCurrent(global::Bolt.Flow flow, ControlOutput source, ControlInput destination)
		{
		}

		[Token(Token = "0x60014BB")]
		[Address(RVA = "0xF32F9C", Offset = "0xF32F9C", VA = "0xF32F9C", Slot = "75")]
		public void ResumePrevious(global::Bolt.Flow flow, ControlOutput source, ControlInput destination)
		{
		}
	}
	[Token(Token = "0x200039E")]
	public sealed class DisableSoftCollisionZoneUnit : Unit
	{
		[Token(Token = "0x40011B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[DoNotSerialize]
		private SoftCollisionZoneAsset _asset;

		[Token(Token = "0x17000224")]
		[Inspectable]
		[Serialize]
		public SoftCollisionZoneAsset asset
		{
			[Token(Token = "0x60014BE")]
			[Address(RVA = "0xF33050", Offset = "0xF33050", VA = "0xF33050")]
			get
			{
				return null;
			}
			[Token(Token = "0x60014BF")]
			[Address(RVA = "0xF33058", Offset = "0xF33058", VA = "0xF33058")]
			set
			{
			}
		}

		[Token(Token = "0x17000225")]
		[PortLabelHidden]
		[DoNotSerialize]
		public ControlInput enter
		{
			[Token(Token = "0x60014C0")]
			[Address(RVA = "0xF33060", Offset = "0xF33060", VA = "0xF33060")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x60014C1")]
			[Address(RVA = "0xF33068", Offset = "0xF33068", VA = "0xF33068")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x17000226")]
		[DoNotSerialize]
		[PortLabelHidden]
		public ControlOutput exit
		{
			[Token(Token = "0x60014C2")]
			[Address(RVA = "0xF33070", Offset = "0xF33070", VA = "0xF33070")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x60014C3")]
			[Address(RVA = "0xF33078", Offset = "0xF33078", VA = "0xF33078")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x60014BD")]
		[Address(RVA = "0xF33048", Offset = "0xF33048", VA = "0xF33048")]
		public DisableSoftCollisionZoneUnit()
		{
		}

		[Token(Token = "0x60014C4")]
		[Address(RVA = "0xF33080", Offset = "0xF33080", VA = "0xF33080", Slot = "67")]
		protected override void Definition()
		{
		}

		[Token(Token = "0x60014C5")]
		[Address(RVA = "0xF33184", Offset = "0xF33184", VA = "0xF33184")]
		public ControlOutput Enter(global::Bolt.Flow flow)
		{
			return null;
		}
	}
	[Token(Token = "0x200039F")]
	public interface IFactAssetProvider
	{
		[Token(Token = "0x17000227")]
		FactAsset asset
		{
			[Token(Token = "0x60014C6")]
			get;
		}
	}
	[Token(Token = "0x20003A0")]
	public interface IFactUnit : IUnit, IGraphElementWithDebugData, IGraphElement, IGraphItem, INotifiedCollectionItem, IDisposable, IPrewarmable, IAotStubbable, IIdentifiable, IFactAssetProvider
	{
		[Token(Token = "0x17000228")]
		Blackboard blackboardDefinition
		{
			[Token(Token = "0x60014C7")]
			get;
		}
	}
	[Token(Token = "0x20003A1")]
	[RenamedFrom("NarrativeEngine.Dialog.Bolt.Prerequisite")]
	[RenamedFrom("Prerequisite")]
	[UnitCategory("NarrativeEngine")]
	[RenamedFrom("NarrativeEngine.Dialog.Bolt.FactCheckUnit")]
	public sealed class FactCheckUnit : Unit, IFactUnit, IUnit, IGraphElementWithDebugData, IGraphElement, IGraphItem, INotifiedCollectionItem, IDisposable, IPrewarmable, IAotStubbable, IIdentifiable, IFactAssetProvider
	{
		[Token(Token = "0x40011BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[DoNotSerialize]
		private FactAsset _asset;

		[Token(Token = "0x40011BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static IEnumerable<ISerializationDependency> s_sharedDependencies;

		[Token(Token = "0x40011BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[InspectorLabel("Comparison")]
		[Inspectable]
		[RenamedFrom("_testType")]
		[Serialize]
		private FactRequirement.FactValue.IntegerComparison _integerComparison;

		[Token(Token = "0x17000229")]
		[Serialize]
		[Inspectable]
		public FactAsset asset
		{
			[Token(Token = "0x60014C9")]
			[Address(RVA = "0xF33308", Offset = "0xF33308", VA = "0xF33308", Slot = "73")]
			get
			{
				return null;
			}
			[Token(Token = "0x60014CA")]
			[Address(RVA = "0xF33310", Offset = "0xF33310", VA = "0xF33310")]
			set
			{
			}
		}

		[Token(Token = "0x1700022A")]
		public override IEnumerable<ISerializationDependency> deserializationDependencies
		{
			[Token(Token = "0x60014CB")]
			[Address(RVA = "0xF333B4", Offset = "0xF333B4", VA = "0xF333B4", Slot = "31")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700022B")]
		[DoNotSerialize]
		[PortLabelHidden]
		public ControlInput enter
		{
			[Token(Token = "0x60014CC")]
			[Address(RVA = "0xF33510", Offset = "0xF33510", VA = "0xF33510")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x60014CD")]
			[Address(RVA = "0xF33518", Offset = "0xF33518", VA = "0xF33518")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x1700022C")]
		[DoNotSerialize]
		[PortLabelHidden]
		public ValueInput testInput
		{
			[Token(Token = "0x60014CE")]
			[Address(RVA = "0xF33520", Offset = "0xF33520", VA = "0xF33520")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x60014CF")]
			[Address(RVA = "0xF33528", Offset = "0xF33528", VA = "0xF33528")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x1700022D")]
		[DoNotSerialize]
		public ControlOutput pass
		{
			[Token(Token = "0x60014D0")]
			[Address(RVA = "0xF33530", Offset = "0xF33530", VA = "0xF33530")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x60014D1")]
			[Address(RVA = "0xF33538", Offset = "0xF33538", VA = "0xF33538")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x1700022E")]
		[DoNotSerialize]
		public ControlOutput fail
		{
			[Token(Token = "0x60014D2")]
			[Address(RVA = "0xF33540", Offset = "0xF33540", VA = "0xF33540")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x60014D3")]
			[Address(RVA = "0xF33548", Offset = "0xF33548", VA = "0xF33548")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x1700022F")]
		[DoNotSerialize]
		public Blackboard blackboardDefinition
		{
			[Token(Token = "0x60014D4")]
			[Address(RVA = "0xF33550", Offset = "0xF33550", VA = "0xF33550", Slot = "72")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x60014D5")]
			[Address(RVA = "0xF33558", Offset = "0xF33558", VA = "0xF33558")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x60014C8")]
		[Address(RVA = "0xF33300", Offset = "0xF33300", VA = "0xF33300")]
		public FactCheckUnit()
		{
		}

		[Token(Token = "0x60014D6")]
		[Address(RVA = "0xF33560", Offset = "0xF33560", VA = "0xF33560", Slot = "30")]
		public override bool HandleDependencies()
		{
			return default(bool);
		}

		[Token(Token = "0x60014D7")]
		[Address(RVA = "0xF3373C", Offset = "0xF3373C", VA = "0xF3373C", Slot = "67")]
		protected override void Definition()
		{
		}

		[Token(Token = "0x60014D8")]
		[Address(RVA = "0xF339C0", Offset = "0xF339C0", VA = "0xF339C0")]
		public ControlOutput Enter(global::Bolt.Flow flow)
		{
			return null;
		}
	}
	[Token(Token = "0x20003A2")]
	[RenamedFrom("NarrativeEngine.Dialog.Bolt.FactSetUnit")]
	[RenamedFrom("NarrativeEngine.Dialog.Bolt.ChangeFact")]
	[UnitCategory("NarrativeEngine")]
	[RenamedFrom("ChangeFact")]
	public class FactSetUnit : Unit, IFactUnit, IUnit, IGraphElementWithDebugData, IGraphElement, IGraphItem, INotifiedCollectionItem, IDisposable, IPrewarmable, IAotStubbable, IIdentifiable, IFactAssetProvider
	{
		[Token(Token = "0x40011C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[DoNotSerialize]
		private FactAsset _asset;

		[Token(Token = "0x40011C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static IEnumerable<ISerializationDependency> s_sharedDependencies;

		[Token(Token = "0x40011C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[Serialize]
		private bool _lockFactOnChange;

		[Token(Token = "0x17000230")]
		[Serialize]
		[Inspectable]
		public FactAsset asset
		{
			[Token(Token = "0x60014DB")]
			[Address(RVA = "0xF33D38", Offset = "0xF33D38", VA = "0xF33D38", Slot = "73")]
			get
			{
				return null;
			}
			[Token(Token = "0x60014DC")]
			[Address(RVA = "0xF33D40", Offset = "0xF33D40", VA = "0xF33D40")]
			set
			{
			}
		}

		[Token(Token = "0x17000231")]
		public override IEnumerable<ISerializationDependency> deserializationDependencies
		{
			[Token(Token = "0x60014DD")]
			[Address(RVA = "0xF33DE4", Offset = "0xF33DE4", VA = "0xF33DE4", Slot = "31")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000232")]
		[Inspectable]
		public bool lockFactOnChange
		{
			[Token(Token = "0x60014DE")]
			[Address(RVA = "0xF33F40", Offset = "0xF33F40", VA = "0xF33F40")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60014DF")]
			[Address(RVA = "0xF33F48", Offset = "0xF33F48", VA = "0xF33F48")]
			set
			{
			}
		}

		[Token(Token = "0x17000233")]
		[DoNotSerialize]
		[PortLabelHidden]
		public ControlInput enter
		{
			[Token(Token = "0x60014E0")]
			[Address(RVA = "0xF33F54", Offset = "0xF33F54", VA = "0xF33F54")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x60014E1")]
			[Address(RVA = "0xF33F5C", Offset = "0xF33F5C", VA = "0xF33F5C")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x17000234")]
		[PortLabelHidden]
		[DoNotSerialize]
		public ControlOutput exit
		{
			[Token(Token = "0x60014E2")]
			[Address(RVA = "0xF33F64", Offset = "0xF33F64", VA = "0xF33F64")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x60014E3")]
			[Address(RVA = "0xF33F6C", Offset = "0xF33F6C", VA = "0xF33F6C")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x17000235")]
		[Serialize]
		[PortLabelHidden]
		public ValueInput changeInput
		{
			[Token(Token = "0x60014E4")]
			[Address(RVA = "0xF33F74", Offset = "0xF33F74", VA = "0xF33F74")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x60014E5")]
			[Address(RVA = "0xF33F7C", Offset = "0xF33F7C", VA = "0xF33F7C")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x17000236")]
		[DoNotSerialize]
		public Blackboard blackboardDefinition
		{
			[Token(Token = "0x60014E6")]
			[Address(RVA = "0xF33F84", Offset = "0xF33F84", VA = "0xF33F84", Slot = "72")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x60014E7")]
			[Address(RVA = "0xF33F8C", Offset = "0xF33F8C", VA = "0xF33F8C")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x60014DA")]
		[Address(RVA = "0xF33D30", Offset = "0xF33D30", VA = "0xF33D30")]
		public FactSetUnit()
		{
		}

		[Token(Token = "0x60014E8")]
		[Address(RVA = "0xF33F94", Offset = "0xF33F94", VA = "0xF33F94", Slot = "30")]
		public override bool HandleDependencies()
		{
			return default(bool);
		}

		[Token(Token = "0x60014E9")]
		[Address(RVA = "0xF34170", Offset = "0xF34170", VA = "0xF34170", Slot = "67")]
		protected override void Definition()
		{
		}

		[Token(Token = "0x60014EA")]
		[Address(RVA = "0xF343A0", Offset = "0xF343A0", VA = "0xF343A0")]
		public ControlOutput Enter(global::Bolt.Flow flow)
		{
			return null;
		}
	}
	[Token(Token = "0x20003A3")]
	[UnitCategory("NarrativeEngine")]
	public sealed class FactValueUnit : Unit, IFactUnit, IUnit, IGraphElementWithDebugData, IGraphElement, IGraphItem, INotifiedCollectionItem, IDisposable, IPrewarmable, IAotStubbable, IIdentifiable, IFactAssetProvider
	{
		[Token(Token = "0x40011C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[DoNotSerialize]
		private FactAsset _asset;

		[Token(Token = "0x40011CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static IEnumerable<ISerializationDependency> s_sharedDependencies;

		[Token(Token = "0x17000237")]
		[Inspectable]
		[Serialize]
		public FactAsset asset
		{
			[Token(Token = "0x60014EE")]
			[Address(RVA = "0xF348B8", Offset = "0xF348B8", VA = "0xF348B8", Slot = "73")]
			get
			{
				return null;
			}
			[Token(Token = "0x60014EF")]
			[Address(RVA = "0xF348C0", Offset = "0xF348C0", VA = "0xF348C0")]
			set
			{
			}
		}

		[Token(Token = "0x17000238")]
		public override IEnumerable<ISerializationDependency> deserializationDependencies
		{
			[Token(Token = "0x60014F0")]
			[Address(RVA = "0xF34964", Offset = "0xF34964", VA = "0xF34964", Slot = "31")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000239")]
		[PortLabelHidden]
		[DoNotSerialize]
		public ValueOutput value
		{
			[Token(Token = "0x60014F1")]
			[Address(RVA = "0xF34AC0", Offset = "0xF34AC0", VA = "0xF34AC0")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x60014F2")]
			[Address(RVA = "0xF34AC8", Offset = "0xF34AC8", VA = "0xF34AC8")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x1700023A")]
		[DoNotSerialize]
		public Blackboard blackboardDefinition
		{
			[Token(Token = "0x60014F3")]
			[Address(RVA = "0xF34AD0", Offset = "0xF34AD0", VA = "0xF34AD0", Slot = "72")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x60014F4")]
			[Address(RVA = "0xF34AD8", Offset = "0xF34AD8", VA = "0xF34AD8")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x60014EC")]
		[Address(RVA = "0xF3486C", Offset = "0xF3486C", VA = "0xF3486C")]
		public FactValueUnit()
		{
		}

		[Token(Token = "0x60014ED")]
		[Address(RVA = "0xF34874", Offset = "0xF34874", VA = "0xF34874")]
		public FactValueUnit(FactAsset asset)
		{
		}

		[Token(Token = "0x60014F5")]
		[Address(RVA = "0xF34AE0", Offset = "0xF34AE0", VA = "0xF34AE0", Slot = "30")]
		public override bool HandleDependencies()
		{
			return default(bool);
		}

		[Token(Token = "0x60014F6")]
		[Address(RVA = "0xF34CBC", Offset = "0xF34CBC", VA = "0xF34CBC", Slot = "67")]
		protected override void Definition()
		{
		}
	}
	[Token(Token = "0x20003A5")]
	[UnitCategory("NarrativeEngine")]
	public sealed class FoleySetParameterUnit : Unit, IUnitWithSerialisableData, IUnit, IGraphElementWithDebugData, IGraphElement, IGraphItem, INotifiedCollectionItem, IDisposable, IPrewarmable, IAotStubbable, IIdentifiable, IGraphElementWithData, IFlowResumableUnit
	{
		[Token(Token = "0x20003A6")]
		public class Data : IGraphElementData
		{
			[Token(Token = "0x40011D4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public bool parameterWasSet;

			[Token(Token = "0x6001511")]
			[Address(RVA = "0xF352F8", Offset = "0xF352F8", VA = "0xF352F8")]
			public Data()
			{
			}
		}

		[Token(Token = "0x20003A7")]
		private static class Keys
		{
			[Token(Token = "0x40011D5")]
			public const string ParameterWasSetKey = "parameterWasSet";
		}

		[Token(Token = "0x40011CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[DoNotSerialize]
		private FoleyAsset _asset;

		[Token(Token = "0x40011D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[DoNotSerialize]
		private string _parameterName;

		[Token(Token = "0x40011D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[DoNotSerialize]
		private float _value;

		[Token(Token = "0x1700023B")]
		[RenamedFrom("foleyParameterData")]
		[Inspectable]
		[Serialize]
		public FoleyAsset asset
		{
			[Token(Token = "0x6001500")]
			[Address(RVA = "0xF3534C", Offset = "0xF3534C", VA = "0xF3534C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001501")]
			[Address(RVA = "0xF35354", Offset = "0xF35354", VA = "0xF35354")]
			set
			{
			}
		}

		[Token(Token = "0x1700023C")]
		[RenamedFrom("foleyParameterName")]
		[Inspectable]
		[Serialize]
		public string parameterName
		{
			[Token(Token = "0x6001502")]
			[Address(RVA = "0xF353F8", Offset = "0xF353F8", VA = "0xF353F8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001503")]
			[Address(RVA = "0xF35400", Offset = "0xF35400", VA = "0xF35400")]
			set
			{
			}
		}

		[Token(Token = "0x1700023D")]
		[RenamedFrom("foleyParameterValue")]
		[Inspectable]
		[Serialize]
		public float value
		{
			[Token(Token = "0x6001504")]
			[Address(RVA = "0xF354A4", Offset = "0xF354A4", VA = "0xF354A4")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001505")]
			[Address(RVA = "0xF354AC", Offset = "0xF354AC", VA = "0xF354AC")]
			set
			{
			}
		}

		[Token(Token = "0x1700023E")]
		[DoNotSerialize]
		[PortLabelHidden]
		public ControlInput enter
		{
			[Token(Token = "0x6001506")]
			[Address(RVA = "0xF35544", Offset = "0xF35544", VA = "0xF35544")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001507")]
			[Address(RVA = "0xF3554C", Offset = "0xF3554C", VA = "0xF3554C")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x1700023F")]
		[PortLabelHidden]
		[DoNotSerialize]
		public ControlOutput exit
		{
			[Token(Token = "0x6001508")]
			[Address(RVA = "0xF35554", Offset = "0xF35554", VA = "0xF35554")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001509")]
			[Address(RVA = "0xF3555C", Offset = "0xF3555C", VA = "0xF3555C")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x60014FD")]
		[Address(RVA = "0xF3529C", Offset = "0xF3529C", VA = "0xF3529C", Slot = "74")]
		public IGraphElementData CreateData()
		{
			return null;
		}

		[Token(Token = "0x60014FE")]
		[Address(RVA = "0xF35300", Offset = "0xF35300", VA = "0xF35300")]
		public FoleySetParameterUnit()
		{
		}

		[Token(Token = "0x60014FF")]
		[Address(RVA = "0xF35308", Offset = "0xF35308", VA = "0xF35308")]
		public FoleySetParameterUnit(FoleyAsset asset)
		{
		}

		[Token(Token = "0x600150A")]
		[Address(RVA = "0xF35564", Offset = "0xF35564", VA = "0xF35564", Slot = "67")]
		protected override void Definition()
		{
		}

		[Token(Token = "0x600150B")]
		[Address(RVA = "0xF35668", Offset = "0xF35668", VA = "0xF35668")]
		public ControlOutput Enter(global::Bolt.Flow flow)
		{
			return null;
		}

		[Token(Token = "0x600150C")]
		[Address(RVA = "0xF35680", Offset = "0xF35680", VA = "0xF35680")]
		private void SetParameter()
		{
		}

		[Token(Token = "0x600150D")]
		[Address(RVA = "0xF3583C", Offset = "0xF3583C", VA = "0xF3583C", Slot = "72")]
		public bool Serialise(FlexBufferBuilder builder, GraphStack stack)
		{
			return default(bool);
		}

		[Token(Token = "0x600150E")]
		[Address(RVA = "0xF35A88", Offset = "0xF35A88", VA = "0xF35A88", Slot = "73")]
		public bool Deserialise(FlexBuffer.Map root, GraphStack stack)
		{
			return default(bool);
		}

		[Token(Token = "0x600150F")]
		[Address(RVA = "0xF35B74", Offset = "0xF35B74", VA = "0xF35B74", Slot = "75")]
		public void ResumePrevious(global::Bolt.Flow flow, ControlOutput source, ControlInput destination)
		{
		}

		[Token(Token = "0x6001510")]
		[Address(RVA = "0xF35C20", Offset = "0xF35C20", VA = "0xF35C20", Slot = "76")]
		public void ResumeCurrent(global::Bolt.Flow flow, ControlOutput source, ControlInput destination)
		{
		}
	}
	[Token(Token = "0x20003A8")]
	[UnitCategory("NarrativeEngine")]
	[RenamedFrom("NarrativeEngine.Dialog.Bolt.FoleyStartUnit")]
	[RenamedFrom("NarrativeEngine.Dialog.BoltOLD.PlayFoleyEffect")]
	[RenamedFrom("PlayFoleyEffect")]
	public sealed class FoleyStartUnit : Unit, IUnitWithSerialisableData, IUnit, IGraphElementWithDebugData, IGraphElement, IGraphItem, INotifiedCollectionItem, IDisposable, IPrewarmable, IAotStubbable, IIdentifiable, IGraphElementWithData, IFlowResumableUnit
	{
		[Token(Token = "0x20003A9")]
		public class Data : IGraphElementData
		{
			[Token(Token = "0x40011DA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public bool wasPlaying;

			[Token(Token = "0x6001522")]
			[Address(RVA = "0xF35CF8", Offset = "0xF35CF8", VA = "0xF35CF8")]
			public Data()
			{
			}
		}

		[Token(Token = "0x40011D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[DoNotSerialize]
		private FoleyAsset _asset;

		[Token(Token = "0x40011D9")]
		private const string c_wasPlayingKey = "wasPlaying";

		[Token(Token = "0x17000240")]
		[RenamedFrom("foleyData")]
		[Inspectable]
		[Serialize]
		public FoleyAsset asset
		{
			[Token(Token = "0x6001515")]
			[Address(RVA = "0xF35D4C", Offset = "0xF35D4C", VA = "0xF35D4C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001516")]
			[Address(RVA = "0xF35D54", Offset = "0xF35D54", VA = "0xF35D54")]
			set
			{
			}
		}

		[Token(Token = "0x17000241")]
		[PortLabelHidden]
		[DoNotSerialize]
		public ControlInput enter
		{
			[Token(Token = "0x6001517")]
			[Address(RVA = "0xF35DF8", Offset = "0xF35DF8", VA = "0xF35DF8")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001518")]
			[Address(RVA = "0xF35E00", Offset = "0xF35E00", VA = "0xF35E00")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x17000242")]
		[DoNotSerialize]
		[PortLabelHidden]
		public ControlOutput exit
		{
			[Token(Token = "0x6001519")]
			[Address(RVA = "0xF35E08", Offset = "0xF35E08", VA = "0xF35E08")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x600151A")]
			[Address(RVA = "0xF35E10", Offset = "0xF35E10", VA = "0xF35E10")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x6001512")]
		[Address(RVA = "0xF35C9C", Offset = "0xF35C9C", VA = "0xF35C9C", Slot = "74")]
		public IGraphElementData CreateData()
		{
			return null;
		}

		[Token(Token = "0x6001513")]
		[Address(RVA = "0xF35D00", Offset = "0xF35D00", VA = "0xF35D00")]
		public FoleyStartUnit()
		{
		}

		[Token(Token = "0x6001514")]
		[Address(RVA = "0xF35D08", Offset = "0xF35D08", VA = "0xF35D08")]
		public FoleyStartUnit(FoleyAsset asset)
		{
		}

		[Token(Token = "0x600151B")]
		[Address(RVA = "0xF35E18", Offset = "0xF35E18", VA = "0xF35E18", Slot = "67")]
		protected override void Definition()
		{
		}

		[Token(Token = "0x600151C")]
		[Address(RVA = "0xF35F1C", Offset = "0xF35F1C", VA = "0xF35F1C")]
		public ControlOutput Enter(global::Bolt.Flow flow)
		{
			return null;
		}

		[Token(Token = "0x600151D")]
		[Address(RVA = "0xF35F34", Offset = "0xF35F34", VA = "0xF35F34")]
		private void Play()
		{
		}

		[Token(Token = "0x600151E")]
		[Address(RVA = "0xF360B0", Offset = "0xF360B0", VA = "0xF360B0", Slot = "72")]
		public bool Serialise(FlexBufferBuilder builder, GraphStack stack)
		{
			return default(bool);
		}

		[Token(Token = "0x600151F")]
		[Address(RVA = "0xF36280", Offset = "0xF36280", VA = "0xF36280", Slot = "73")]
		public bool Deserialise(FlexBuffer.Map root, GraphStack stack)
		{
			return default(bool);
		}

		[Token(Token = "0x6001520")]
		[Address(RVA = "0xF3636C", Offset = "0xF3636C", VA = "0xF3636C", Slot = "75")]
		public void ResumePrevious(global::Bolt.Flow flow, ControlOutput source, ControlInput destination)
		{
		}

		[Token(Token = "0x6001521")]
		[Address(RVA = "0xF36418", Offset = "0xF36418", VA = "0xF36418", Slot = "76")]
		public void ResumeCurrent(global::Bolt.Flow flow, ControlOutput source, ControlInput destination)
		{
		}
	}
	[Token(Token = "0x20003AA")]
	[RenamedFrom("StopFoleyEffect")]
	[UnitCategory("NarrativeEngine")]
	[RenamedFrom("NarrativeEngine.Dialog.BoltOLD.StopFoleyEffect")]
	[RenamedFrom("NarrativeEngine.Dialog.Bolt.FoleyStopUnit")]
	public sealed class FoleyStopUnit : Unit
	{
		[Token(Token = "0x40011DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[DoNotSerialize]
		private FoleyAsset _asset;

		[Token(Token = "0x17000243")]
		[Serialize]
		[Inspectable]
		[RenamedFrom("foleyData")]
		public FoleyAsset asset
		{
			[Token(Token = "0x6001525")]
			[Address(RVA = "0xF364E0", Offset = "0xF364E0", VA = "0xF364E0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001526")]
			[Address(RVA = "0xF364E8", Offset = "0xF364E8", VA = "0xF364E8")]
			set
			{
			}
		}

		[Token(Token = "0x17000244")]
		[PortLabelHidden]
		[DoNotSerialize]
		public ControlInput enter
		{
			[Token(Token = "0x6001527")]
			[Address(RVA = "0xF3658C", Offset = "0xF3658C", VA = "0xF3658C")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001528")]
			[Address(RVA = "0xF36594", Offset = "0xF36594", VA = "0xF36594")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x17000245")]
		[PortLabelHidden]
		[DoNotSerialize]
		public ControlOutput exit
		{
			[Token(Token = "0x6001529")]
			[Address(RVA = "0xF3659C", Offset = "0xF3659C", VA = "0xF3659C")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x600152A")]
			[Address(RVA = "0xF365A4", Offset = "0xF365A4", VA = "0xF365A4")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x6001523")]
		[Address(RVA = "0xF36494", Offset = "0xF36494", VA = "0xF36494")]
		public FoleyStopUnit()
		{
		}

		[Token(Token = "0x6001524")]
		[Address(RVA = "0xF3649C", Offset = "0xF3649C", VA = "0xF3649C")]
		public FoleyStopUnit(FoleyAsset asset)
		{
		}

		[Token(Token = "0x600152B")]
		[Address(RVA = "0xF365AC", Offset = "0xF365AC", VA = "0xF365AC", Slot = "67")]
		protected override void Definition()
		{
		}

		[Token(Token = "0x600152C")]
		[Address(RVA = "0xF366B0", Offset = "0xF366B0", VA = "0xF366B0")]
		public ControlOutput Enter(global::Bolt.Flow flow)
		{
			return null;
		}
	}
	[Token(Token = "0x20003AB")]
	[CreateAssetMenu(menuName = "Narrative Engine/Soft Collision Zone Reference")]
	public class SoftCollisionZoneAsset : ScriptableObject, IObjectToUnitType
	{
		[Token(Token = "0x40011DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private string _zoneName;

		[Token(Token = "0x17000246")]
		public Type convertedUnitType
		{
			[Token(Token = "0x600152D")]
			[Address(RVA = "0xF3682C", Offset = "0xF3682C", VA = "0xF3682C", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600152E")]
		[Address(RVA = "0xF36898", Offset = "0xF36898", VA = "0xF36898")]
		public SoftCollisionZoneAsset()
		{
		}
	}
}
namespace HoverSystem
{
	[Token(Token = "0x20003AC")]
	[RemoveOnVr]
	public class FsHoverManager : HoverManager
	{
		[Token(Token = "0x40011DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Camera _camera;

		[Token(Token = "0x40011E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GrabAnchor _grabAnchor;

		[Token(Token = "0x40011E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private ControllerBaseInteractor _controllerInteractor;

		[Token(Token = "0x40011E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private bool _doExplicitRaycast;

		[Token(Token = "0x40011E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[SerializeField]
		private float _maxCheckDistance;

		[Token(Token = "0x40011E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static List<Hoverable> s_allHoverables;

		[Token(Token = "0x40011E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Hoverable _lastHoverTarget;

		[Token(Token = "0x600152F")]
		[Address(RVA = "0xF368F8", Offset = "0xF368F8", VA = "0xF368F8", Slot = "8")]
		protected override void AddHoverable(Hoverable target)
		{
		}

		[Token(Token = "0x6001530")]
		[Address(RVA = "0xF36AA4", Offset = "0xF36AA4", VA = "0xF36AA4", Slot = "9")]
		protected override void RemoveHoverable(Hoverable target)
		{
		}

		[Token(Token = "0x6001531")]
		[Address(RVA = "0xF36B24", Offset = "0xF36B24", VA = "0xF36B24", Slot = "6")]
		public override bool Initialise()
		{
			return default(bool);
		}

		[Token(Token = "0x6001532")]
		[Address(RVA = "0xF36B48", Offset = "0xF36B48", VA = "0xF36B48", Slot = "7")]
		public override void OnUpdate(float dt)
		{
		}

		[Token(Token = "0x6001533")]
		[Address(RVA = "0xF36F58", Offset = "0xF36F58", VA = "0xF36F58")]
		private void ProcessCurrentHoverTarget(Hoverable currentTarget)
		{
		}

		[Token(Token = "0x6001534")]
		[Address(RVA = "0xF371F0", Offset = "0xF371F0", VA = "0xF371F0")]
		public FsHoverManager()
		{
		}
	}
	[Token(Token = "0x20003AD")]
	public interface IHoverable
	{
		[Token(Token = "0x6001536")]
		void HoverStart(InteractorBase interactor, GrabAnchor grabAnchor);

		[Token(Token = "0x6001537")]
		void HoverContinue(InteractorBase interactor, GrabAnchor grabAnchor);

		[Token(Token = "0x6001538")]
		void HoverEnd(InteractorBase interactor, GrabAnchor grabAnchor);
	}
	[Token(Token = "0x20003AE")]
	public class Hoverable : MonoBehaviour, IInitialisable, IHoverable
	{
		[Token(Token = "0x40011E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private List<Collider> _triggers;

		[Token(Token = "0x40011E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private UnityEvent<InteractorBase, GrabAnchor> _hoverStartEvent;

		[Token(Token = "0x40011E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private UnityEvent<InteractorBase, GrabAnchor> _hoverEndEvent;

		[Token(Token = "0x40011E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private UnityEvent<InteractorBase, GrabAnchor> _hoverContinueEvent;

		[Token(Token = "0x17000247")]
		public ReadOnlyCollection<Collider> triggers
		{
			[Token(Token = "0x6001539")]
			[Address(RVA = "0xF36A54", Offset = "0xF36A54", VA = "0xF36A54")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000248")]
		public UnityEvent<InteractorBase, GrabAnchor> onHoverStarted
		{
			[Token(Token = "0x600153A")]
			[Address(RVA = "0xF372A0", Offset = "0xF372A0", VA = "0xF372A0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000249")]
		public UnityEvent<InteractorBase, GrabAnchor> onHoverEnded
		{
			[Token(Token = "0x600153B")]
			[Address(RVA = "0xF372A8", Offset = "0xF372A8", VA = "0xF372A8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700024A")]
		public UnityEvent<InteractorBase, GrabAnchor> onHovering
		{
			[Token(Token = "0x600153C")]
			[Address(RVA = "0xF372B0", Offset = "0xF372B0", VA = "0xF372B0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600153D")]
		[Address(RVA = "0xF372B8", Offset = "0xF372B8", VA = "0xF372B8", Slot = "8")]
		public virtual bool Initialise()
		{
			return default(bool);
		}

		[Token(Token = "0x600153E")]
		[Address(RVA = "0xF37388", Offset = "0xF37388", VA = "0xF37388")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x600153F")]
		[Address(RVA = "0xF3717C", Offset = "0xF3717C", VA = "0xF3717C", Slot = "5")]
		public void HoverStart(InteractorBase interactor, GrabAnchor grabAnchor)
		{
		}

		[Token(Token = "0x6001540")]
		[Address(RVA = "0xF37094", Offset = "0xF37094", VA = "0xF37094", Slot = "6")]
		public void HoverContinue(InteractorBase interactor, GrabAnchor grabAnchor)
		{
		}

		[Token(Token = "0x6001541")]
		[Address(RVA = "0xF37108", Offset = "0xF37108", VA = "0xF37108", Slot = "7")]
		public void HoverEnd(InteractorBase interactor, GrabAnchor grabAnchor)
		{
		}

		[Token(Token = "0x6001542")]
		[Address(RVA = "0xF37448", Offset = "0xF37448", VA = "0xF37448")]
		public Hoverable()
		{
		}
	}
	[Token(Token = "0x20003AF")]
	public abstract class HoverManager : MonoBehaviour, IInitialisable, IUpdatable
	{
		[Token(Token = "0x40011EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected static HoverManager _instance;

		[Token(Token = "0x6001543")]
		[Address(RVA = "0xF374D0", Offset = "0xF374D0", VA = "0xF374D0")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001544")]
		[Address(RVA = "0xF36B40", Offset = "0xF36B40", VA = "0xF36B40", Slot = "6")]
		public virtual bool Initialise()
		{
			return default(bool);
		}

		[Token(Token = "0x6001545")]
		[Address(RVA = "0xF36F54", Offset = "0xF36F54", VA = "0xF36F54", Slot = "7")]
		public virtual void OnUpdate(float dt)
		{
		}

		[Token(Token = "0x6001546")]
		protected abstract void AddHoverable(Hoverable target);

		[Token(Token = "0x6001547")]
		protected abstract void RemoveHoverable(Hoverable target);

		[Token(Token = "0x6001548")]
		[Address(RVA = "0xF372CC", Offset = "0xF372CC", VA = "0xF372CC")]
		public static void RegisterHoverable(Hoverable target)
		{
		}

		[Token(Token = "0x6001549")]
		[Address(RVA = "0xF3738C", Offset = "0xF3738C", VA = "0xF3738C")]
		public static void UnregisterHoverable(Hoverable target)
		{
		}

		[Token(Token = "0x600154A")]
		[Address(RVA = "0xF37200", Offset = "0xF37200", VA = "0xF37200")]
		protected HoverManager()
		{
		}
	}
	[Token(Token = "0x20003B0")]
	public class XRHoverManager : HoverManager
	{
		[Token(Token = "0x20003B1")]
		private enum InteractorTypes
		{
			[Token(Token = "0x40011F8")]
			LeftTouch,
			[Token(Token = "0x40011F9")]
			LeftPoint,
			[Token(Token = "0x40011FA")]
			LeftGrabber,
			[Token(Token = "0x40011FB")]
			RightTouch,
			[Token(Token = "0x40011FC")]
			RightPoint,
			[Token(Token = "0x40011FD")]
			RightGrabber,
			[Token(Token = "0x40011FE")]
			COUNT
		}

		[Token(Token = "0x20003B2")]
		private class HoverTarget : IEquatable<HoverTarget>
		{
			[Token(Token = "0x40011FF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Hoverable hoverable;

			[Token(Token = "0x4001200")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public XRBaseInteractable xrInteractable;

			[Token(Token = "0x4001201")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public InteractorTypes interactor;

			[Token(Token = "0x6001551")]
			[Address(RVA = "0xF3768C", Offset = "0xF3768C", VA = "0xF3768C")]
			public HoverTarget(Hoverable h, XRBaseInteractable p, InteractorTypes t = InteractorTypes.COUNT)
			{
			}

			[Token(Token = "0x6001552")]
			[Address(RVA = "0xF38878", Offset = "0xF38878", VA = "0xF38878", Slot = "4")]
			public bool Equals(HoverTarget other)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x40011EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		public XRBaseInteractor leftTouchInteractor;

		[Token(Token = "0x40011EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		public XRBaseInteractor leftPointInteractor;

		[Token(Token = "0x40011ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		public XRBaseInteractor rightTouchInteractor;

		[Token(Token = "0x40011EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		public XRBaseInteractor rightPointInteractor;

		[Token(Token = "0x40011EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		public XRBaseInteractor leftGrabberInteractor;

		[Token(Token = "0x40011F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		public XRBaseInteractor rightGrabberInteractor;

		[Token(Token = "0x40011F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private XRBaseInteractor[] _xrInteractors;

		[Token(Token = "0x40011F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private GrabAnchor[] _grabAnchors;

		[Token(Token = "0x40011F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private List<HoverTarget> _allHoverables;

		[Token(Token = "0x40011F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private List<HoverTarget> _previouslyHovered;

		[Token(Token = "0x40011F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private List<HoverTarget> _currentlyHovered;

		[Token(Token = "0x40011F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private List<HoverTarget> _newlyHovered;

		[Token(Token = "0x600154B")]
		[Address(RVA = "0xF37528", Offset = "0xF37528", VA = "0xF37528", Slot = "8")]
		protected override void AddHoverable(Hoverable target)
		{
		}

		[Token(Token = "0x600154C")]
		[Address(RVA = "0xF376EC", Offset = "0xF376EC", VA = "0xF376EC", Slot = "9")]
		protected override void RemoveHoverable(Hoverable target)
		{
		}

		[Token(Token = "0x600154D")]
		[Address(RVA = "0xF3783C", Offset = "0xF3783C", VA = "0xF3783C", Slot = "6")]
		public override bool Initialise()
		{
			return default(bool);
		}

		[Token(Token = "0x600154E")]
		[Address(RVA = "0xF37C88", Offset = "0xF37C88", VA = "0xF37C88")]
		private GrabAnchor GetGrabAnchorFromInteractorType(XRBaseInteractor interactor)
		{
			return null;
		}

		[Token(Token = "0x600154F")]
		[Address(RVA = "0xF37D44", Offset = "0xF37D44", VA = "0xF37D44", Slot = "7")]
		public override void OnUpdate(float dt)
		{
		}

		[Token(Token = "0x6001550")]
		[Address(RVA = "0xF38770", Offset = "0xF38770", VA = "0xF38770")]
		public XRHoverManager()
		{
		}
	}
}
namespace Interactables
{
	[Token(Token = "0x20003B3")]
	public class AttachPointProxy : MonoBehaviour
	{
		[Token(Token = "0x4001202")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Transform _target;

		[Token(Token = "0x1700024B")]
		public Transform target
		{
			[Token(Token = "0x6001553")]
			[Address(RVA = "0xF388F4", Offset = "0xF388F4", VA = "0xF388F4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001554")]
		[Address(RVA = "0xF388FC", Offset = "0xF388FC", VA = "0xF388FC")]
		public AttachPointProxy()
		{
		}
	}
	[Token(Token = "0x20003B4")]
	public abstract class CollectInteraction_Base : Actions.InteractionBase, IPostDeserialiseNotified
	{
		[Token(Token = "0x20003B5")]
		[CompilerGenerated]
		private sealed class <DropCollectable>d__17 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400120B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400120C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400120D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public CollectInteraction_Base <>4__this;

			[Token(Token = "0x400120E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Holder holder;

			[Token(Token = "0x400120F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public int slot;

			[Token(Token = "0x1700024E")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001564")]
				[Address(RVA = "0xF390A8", Offset = "0xF390A8", VA = "0xF390A8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700024F")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001566")]
				[Address(RVA = "0xF390F0", Offset = "0xF390F0", VA = "0xF390F0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001561")]
			[Address(RVA = "0xF38E80", Offset = "0xF38E80", VA = "0xF38E80")]
			[DebuggerHidden]
			public <DropCollectable>d__17(int <>1__state)
			{
			}

			[Token(Token = "0x6001562")]
			[Address(RVA = "0xF38F44", Offset = "0xF38F44", VA = "0xF38F44", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001563")]
			[Address(RVA = "0xF38F48", Offset = "0xF38F48", VA = "0xF38F48", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001565")]
			[Address(RVA = "0xF390B0", Offset = "0xF390B0", VA = "0xF390B0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20003B6")]
		[CompilerGenerated]
		private sealed class <DropCollectable>d__18 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001210")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001211")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001212")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public CollectInteraction_Base <>4__this;

			[Token(Token = "0x4001213")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Holder holder;

			[Token(Token = "0x4001214")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public IHoldable holdable;

			[Token(Token = "0x17000250")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600156A")]
				[Address(RVA = "0xF39240", Offset = "0xF39240", VA = "0xF39240", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000251")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600156C")]
				[Address(RVA = "0xF39288", Offset = "0xF39288", VA = "0xF39288", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001567")]
			[Address(RVA = "0xF38EA8", Offset = "0xF38EA8", VA = "0xF38EA8")]
			[DebuggerHidden]
			public <DropCollectable>d__18(int <>1__state)
			{
			}

			[Token(Token = "0x6001568")]
			[Address(RVA = "0xF390F8", Offset = "0xF390F8", VA = "0xF390F8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001569")]
			[Address(RVA = "0xF390FC", Offset = "0xF390FC", VA = "0xF390FC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600156B")]
			[Address(RVA = "0xF39248", Offset = "0xF39248", VA = "0xF39248", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001203")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		protected PhysicsHoldable _holdable;

		[Token(Token = "0x4001204")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private FactAsset _fact;

		[Token(Token = "0x4001205")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private EventReference _toastEventReference;

		[Token(Token = "0x4001206")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private LocalizedString _collectableToastText;

		[Token(Token = "0x4001207")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private float _timeToDropCollectable;

		[Token(Token = "0x4001208")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		[SerializeField]
		private float _preToastDelay;

		[Token(Token = "0x4001209")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private float _toastDuration;

		[Token(Token = "0x400120A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private bool _collected;

		[Token(Token = "0x1700024C")]
		public override string Name
		{
			[Token(Token = "0x6001555")]
			[Address(RVA = "0xF38904", Offset = "0xF38904", VA = "0xF38904", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700024D")]
		public bool Collected
		{
			[Token(Token = "0x6001556")]
			[Address(RVA = "0xF38944", Offset = "0xF38944", VA = "0xF38944")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001557")]
		[Address(RVA = "0xF3894C", Offset = "0xF3894C", VA = "0xF3894C", Slot = "13")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6001558")]
		[Address(RVA = "0xF389B0", Offset = "0xF389B0", VA = "0xF389B0", Slot = "16")]
		public void OnPostDeserialise()
		{
		}

		[Token(Token = "0x6001559")]
		protected abstract int GetSlot(InteractorBase interactor, Holder holder);

		[Token(Token = "0x600155A")]
		protected abstract void Hold(InteractorBase interactor, Holder holder, Holdable holdable);

		[Token(Token = "0x600155B")]
		[Address(RVA = "0xF38BC0", Offset = "0xF38BC0", VA = "0xF38BC0", Slot = "12")]
		protected override void Iternal_Perform(InteractorBase interactor)
		{
		}

		[Token(Token = "0x600155C")]
		[Address(RVA = "0xF38DE8", Offset = "0xF38DE8", VA = "0xF38DE8")]
		[IteratorStateMachine(typeof(<DropCollectable>d__17))]
		private IEnumerator DropCollectable(int slot, Holder holder)
		{
			return null;
		}

		[Token(Token = "0x600155D")]
		[Address(RVA = "0xF38D44", Offset = "0xF38D44", VA = "0xF38D44")]
		[IteratorStateMachine(typeof(<DropCollectable>d__18))]
		private IEnumerator DropCollectable(IHoldable holdable, Holder holder)
		{
			return null;
		}

		[Token(Token = "0x600155E")]
		[Address(RVA = "0xF38C88", Offset = "0xF38C88", VA = "0xF38C88")]
		private void SetObjectAsCollected()
		{
		}

		[Token(Token = "0x600155F")]
		[Address(RVA = "0xF38ED0", Offset = "0xF38ED0", VA = "0xF38ED0")]
		private static EventInstance CreateAndPositionEventInstance(EventReference eventReference, Transform transform)
		{
			return default(EventInstance);
		}

		[Token(Token = "0x6001560")]
		[Address(RVA = "0xF38F3C", Offset = "0xF38F3C", VA = "0xF38F3C")]
		protected CollectInteraction_Base()
		{
		}
	}
	[Token(Token = "0x20003B7")]
	public abstract class CollectInteraction_XR : CollectInteraction_Base
	{
		[Token(Token = "0x600156D")]
		[Address(RVA = "0xF39290", Offset = "0xF39290", VA = "0xF39290", Slot = "17")]
		protected override int GetSlot(InteractorBase interactor, Holder holder)
		{
			return default(int);
		}

		[Token(Token = "0x600156E")]
		[Address(RVA = "0xF39414", Offset = "0xF39414", VA = "0xF39414", Slot = "18")]
		protected override void Hold(InteractorBase interactor, Holder holder, Holdable holdable)
		{
		}

		[Token(Token = "0x600156F")]
		[Address(RVA = "0xF3951C", Offset = "0xF3951C", VA = "0xF3951C", Slot = "11")]
		protected override bool Iternal_CanPerform(InteractorBase interactor)
		{
			return default(bool);
		}

		[Token(Token = "0x6001570")]
		[Address(RVA = "0xF396A8", Offset = "0xF396A8", VA = "0xF396A8", Slot = "15")]
		public override bool RemoteGrabberInteractionAllowed()
		{
			return default(bool);
		}

		[Token(Token = "0x6001571")]
		[Address(RVA = "0xF396B0", Offset = "0xF396B0", VA = "0xF396B0")]
		protected CollectInteraction_XR()
		{
		}
	}
	[Token(Token = "0x20003B8")]
	public abstract class CollectInteraction_FlatScreen : CollectInteraction_Base
	{
		[Token(Token = "0x6001572")]
		[Address(RVA = "0xF396B8", Offset = "0xF396B8", VA = "0xF396B8", Slot = "17")]
		protected override int GetSlot(InteractorBase interactor, Holder holder)
		{
			return default(int);
		}

		[Token(Token = "0x6001573")]
		[Address(RVA = "0xF396C0", Offset = "0xF396C0", VA = "0xF396C0", Slot = "11")]
		protected override bool Iternal_CanPerform(InteractorBase interactor)
		{
			return default(bool);
		}

		[Token(Token = "0x6001574")]
		[Address(RVA = "0xF397CC", Offset = "0xF397CC", VA = "0xF397CC", Slot = "18")]
		protected override void Hold(InteractorBase interactor, Holder holder, Holdable holdable)
		{
		}

		[Token(Token = "0x6001575")]
		[Address(RVA = "0xF39A04", Offset = "0xF39A04", VA = "0xF39A04")]
		protected CollectInteraction_FlatScreen()
		{
		}
	}
	[Token(Token = "0x20003B9")]
	[RequireComponent(typeof(PhysicsHoldable))]
	[RequireComponent(typeof(InteractableBase))]
	public class CollectInteraction : CollectInteraction_XR
	{
		[Token(Token = "0x6001576")]
		[Address(RVA = "0xF39A0C", Offset = "0xF39A0C", VA = "0xF39A0C")]
		public CollectInteraction()
		{
		}
	}
	[Token(Token = "0x20003BA")]
	public abstract class DisableObjectOnDropInteraction_Base : Actions.InteractionBase
	{
		[Token(Token = "0x4001215")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		protected IHoldable holdable;

		[Token(Token = "0x17000252")]
		public override string Name
		{
			[Token(Token = "0x6001577")]
			[Address(RVA = "0xF39A14", Offset = "0xF39A14", VA = "0xF39A14", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000253")]
		public override bool Highlightable
		{
			[Token(Token = "0x6001578")]
			[Address(RVA = "0xF39A54", Offset = "0xF39A54", VA = "0xF39A54", Slot = "10")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001579")]
		protected abstract int GetSlot(InteractorBase interactor, Holder holder);

		[Token(Token = "0x600157A")]
		[Address(RVA = "0xF39A5C", Offset = "0xF39A5C", VA = "0xF39A5C", Slot = "13")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x600157B")]
		[Address(RVA = "0xF39AC0", Offset = "0xF39AC0", VA = "0xF39AC0", Slot = "11")]
		protected override bool Iternal_CanPerform(InteractorBase interactor)
		{
			return default(bool);
		}

		[Token(Token = "0x600157C")]
		[Address(RVA = "0xF39C28", Offset = "0xF39C28", VA = "0xF39C28")]
		protected void DisableObject()
		{
		}

		[Token(Token = "0x600157D")]
		[Address(RVA = "0xF39CB0", Offset = "0xF39CB0", VA = "0xF39CB0")]
		protected DisableObjectOnDropInteraction_Base()
		{
		}
	}
	[Token(Token = "0x20003BB")]
	public abstract class DisableObjectOnDropInteraction_XR : DisableObjectOnDropInteraction_Base
	{
		[Token(Token = "0x600157E")]
		[Address(RVA = "0xF39CB8", Offset = "0xF39CB8", VA = "0xF39CB8", Slot = "16")]
		protected override int GetSlot(InteractorBase interactor, Holder holder)
		{
			return default(int);
		}

		[Token(Token = "0x600157F")]
		[Address(RVA = "0xF39D54", Offset = "0xF39D54", VA = "0xF39D54", Slot = "12")]
		protected override void Iternal_Perform(InteractorBase interactor)
		{
		}

		[Token(Token = "0x6001580")]
		[Address(RVA = "0xF39E5C", Offset = "0xF39E5C", VA = "0xF39E5C")]
		protected DisableObjectOnDropInteraction_XR()
		{
		}
	}
	[Token(Token = "0x20003BC")]
	public abstract class DisableObjectOnDropInteraction_FlatScreen : DisableObjectOnDropInteraction_Base
	{
		[Token(Token = "0x6001581")]
		[Address(RVA = "0xF39E64", Offset = "0xF39E64", VA = "0xF39E64", Slot = "16")]
		protected override int GetSlot(InteractorBase interactor, Holder holder)
		{
			return default(int);
		}

		[Token(Token = "0x6001582")]
		[Address(RVA = "0xF39E6C", Offset = "0xF39E6C", VA = "0xF39E6C", Slot = "11")]
		protected override bool Iternal_CanPerform(InteractorBase interactor)
		{
			return default(bool);
		}

		[Token(Token = "0x6001583")]
		[Address(RVA = "0xF39F7C", Offset = "0xF39F7C", VA = "0xF39F7C", Slot = "12")]
		protected override void Iternal_Perform(InteractorBase interactor)
		{
		}

		[Token(Token = "0x6001584")]
		[Address(RVA = "0xF3A004", Offset = "0xF3A004", VA = "0xF3A004")]
		protected DisableObjectOnDropInteraction_FlatScreen()
		{
		}
	}
	[Token(Token = "0x20003BD")]
	[RequireComponent(typeof(IHoldable))]
	[RequireComponent(typeof(InteractableBase))]
	public class DisableObjectOnDropInteraction : DisableObjectOnDropInteraction_XR
	{
		[Token(Token = "0x6001585")]
		[Address(RVA = "0xF3A00C", Offset = "0xF3A00C", VA = "0xF3A00C")]
		public DisableObjectOnDropInteraction()
		{
		}
	}
	[Token(Token = "0x20003BE")]
	public abstract class DockInteraction_Base : Actions.InteractionBase
	{
		[Token(Token = "0x17000254")]
		public override string Name
		{
			[Token(Token = "0x6001586")]
			[Address(RVA = "0xF3A014", Offset = "0xF3A014", VA = "0xF3A014", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000255")]
		public PhysicsHoldableDock Dock
		{
			[Token(Token = "0x6001587")]
			[Address(RVA = "0xF3A054", Offset = "0xF3A054", VA = "0xF3A054")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001588")]
			[Address(RVA = "0xF3A05C", Offset = "0xF3A05C", VA = "0xF3A05C")]
			[CompilerGenerated]
			protected set
			{
			}
		}

		[Token(Token = "0x6001589")]
		protected abstract int GetSlot(InteractorBase interactor, Holder holder);

		[Token(Token = "0x600158A")]
		[Address(RVA = "0xF3A064", Offset = "0xF3A064", VA = "0xF3A064", Slot = "13")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x600158B")]
		[Address(RVA = "0xF3A0C8", Offset = "0xF3A0C8", VA = "0xF3A0C8", Slot = "12")]
		protected override void Iternal_Perform(InteractorBase interactor)
		{
		}

		[Token(Token = "0x600158C")]
		[Address(RVA = "0xF3A304", Offset = "0xF3A304", VA = "0xF3A304")]
		protected DockInteraction_Base()
		{
		}
	}
	[Token(Token = "0x20003BF")]
	public abstract class DockInteraction_XR : DockInteraction_Base
	{
		[Token(Token = "0x600158D")]
		[Address(RVA = "0xF3A30C", Offset = "0xF3A30C", VA = "0xF3A30C", Slot = "16")]
		protected override int GetSlot(InteractorBase interactor, Holder holder)
		{
			return default(int);
		}

		[Token(Token = "0x600158E")]
		[Address(RVA = "0xF3A3A8", Offset = "0xF3A3A8", VA = "0xF3A3A8", Slot = "11")]
		protected override bool Iternal_CanPerform(InteractorBase interactor)
		{
			return default(bool);
		}

		[Token(Token = "0x600158F")]
		[Address(RVA = "0xF3A594", Offset = "0xF3A594", VA = "0xF3A594")]
		protected DockInteraction_XR()
		{
		}
	}
	[Token(Token = "0x20003C0")]
	public abstract class DockInteraction_FlatScreen : DockInteraction_Base
	{
		[Token(Token = "0x6001590")]
		[Address(RVA = "0xF3A59C", Offset = "0xF3A59C", VA = "0xF3A59C", Slot = "16")]
		protected override int GetSlot(InteractorBase interactor, Holder holder)
		{
			return default(int);
		}

		[Token(Token = "0x6001591")]
		[Address(RVA = "0xF3A5A4", Offset = "0xF3A5A4", VA = "0xF3A5A4", Slot = "11")]
		protected override bool Iternal_CanPerform(InteractorBase interactor)
		{
			return default(bool);
		}

		[Token(Token = "0x6001592")]
		[Address(RVA = "0xF3A708", Offset = "0xF3A708", VA = "0xF3A708")]
		protected DockInteraction_FlatScreen()
		{
		}
	}
	[Token(Token = "0x20003C1")]
	[RequireComponent(typeof(PhysicsHoldableDock))]
	[RequireComponent(typeof(InteractableBase))]
	public class DockInteraction : DockInteraction_XR
	{
		[Token(Token = "0x6001593")]
		[Address(RVA = "0xF3A710", Offset = "0xF3A710", VA = "0xF3A710")]
		public DockInteraction()
		{
		}
	}
	[Token(Token = "0x20003C2")]
	public abstract class DropInteraction_Base : Actions.InteractionBase, IDropInteraction
	{
		[Token(Token = "0x4001217")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		protected Holdable holdable;

		[Token(Token = "0x17000256")]
		public override string Name
		{
			[Token(Token = "0x6001594")]
			[Address(RVA = "0xF3A718", Offset = "0xF3A718", VA = "0xF3A718", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000257")]
		public override bool Highlightable
		{
			[Token(Token = "0x6001595")]
			[Address(RVA = "0xF3A758", Offset = "0xF3A758", VA = "0xF3A758", Slot = "10")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000258")]
		public override int Priority
		{
			[Token(Token = "0x6001596")]
			[Address(RVA = "0xF3A760", Offset = "0xF3A760", VA = "0xF3A760", Slot = "6")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x6001597")]
		protected abstract int GetSlot(InteractorBase interactor, Holder holder);

		[Token(Token = "0x6001598")]
		[Address(RVA = "0xF3A768", Offset = "0xF3A768", VA = "0xF3A768", Slot = "13")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6001599")]
		[Address(RVA = "0xF3A7CC", Offset = "0xF3A7CC", VA = "0xF3A7CC", Slot = "11")]
		protected override bool Iternal_CanPerform(InteractorBase interactor)
		{
			return default(bool);
		}

		[Token(Token = "0x600159A")]
		[Address(RVA = "0xF3A8A0", Offset = "0xF3A8A0", VA = "0xF3A8A0", Slot = "12")]
		protected override void Iternal_Perform(InteractorBase interactor)
		{
		}

		[Token(Token = "0x600159B")]
		[Address(RVA = "0xF3AA74", Offset = "0xF3AA74", VA = "0xF3AA74")]
		protected DropInteraction_Base()
		{
		}
	}
	[Token(Token = "0x20003C3")]
	public abstract class DropInteraction_XR : DropInteraction_Base
	{
		[Token(Token = "0x600159C")]
		[Address(RVA = "0xF3AA7C", Offset = "0xF3AA7C", VA = "0xF3AA7C", Slot = "16")]
		protected override int GetSlot(InteractorBase interactor, Holder holder)
		{
			return default(int);
		}

		[Token(Token = "0x600159D")]
		[Address(RVA = "0xF3AB18", Offset = "0xF3AB18", VA = "0xF3AB18")]
		protected DropInteraction_XR()
		{
		}
	}
	[Token(Token = "0x20003C4")]
	public abstract class DropInteraction_FlatScreen : DropInteraction_Base
	{
		[Token(Token = "0x600159E")]
		[Address(RVA = "0xF3AB20", Offset = "0xF3AB20", VA = "0xF3AB20", Slot = "16")]
		protected override int GetSlot(InteractorBase interactor, Holder holder)
		{
			return default(int);
		}

		[Token(Token = "0x600159F")]
		[Address(RVA = "0xF3AB28", Offset = "0xF3AB28", VA = "0xF3AB28", Slot = "11")]
		protected override bool Iternal_CanPerform(InteractorBase interactor)
		{
			return default(bool);
		}

		[Token(Token = "0x60015A0")]
		[Address(RVA = "0xF3AC38", Offset = "0xF3AC38", VA = "0xF3AC38", Slot = "12")]
		protected override void Iternal_Perform(InteractorBase interactor)
		{
		}

		[Token(Token = "0x60015A1")]
		[Address(RVA = "0xF3ACC4", Offset = "0xF3ACC4", VA = "0xF3ACC4")]
		protected DropInteraction_FlatScreen()
		{
		}
	}
	[Token(Token = "0x20003C5")]
	[RequireComponent(typeof(Holdable))]
	[RequireComponent(typeof(InteractableBase))]
	public class DropInteraction : DropInteraction_XR
	{
		[Token(Token = "0x60015A2")]
		[Address(RVA = "0xF3ACCC", Offset = "0xF3ACCC", VA = "0xF3ACCC")]
		public DropInteraction()
		{
		}
	}
	[Token(Token = "0x20003C6")]
	[RemoveOnVr]
	[RequireComponent(typeof(InteractableBase))]
	[RequireComponent(typeof(FsBoundedMotionHandler))]
	public class FsBoundedMotionInteraction : Actions.InteractionBase, IInteractionHighlightOverridable
	{
		[Token(Token = "0x4001218")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private bool isPerforming;

		[Token(Token = "0x4001219")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private ControllerBaseInteractor activeInteractor;

		[Token(Token = "0x400121A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private FsBoundedMotionHandler motionHandler;

		[Token(Token = "0x400121B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		protected InteractableBase _interactableToHighlightOverride;

		[Token(Token = "0x17000259")]
		public override string Name
		{
			[Token(Token = "0x60015A3")]
			[Address(RVA = "0xF3ACD4", Offset = "0xF3ACD4", VA = "0xF3ACD4", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700025A")]
		public InteractableBase InteractableToHighlightOverride
		{
			[Token(Token = "0x60015A4")]
			[Address(RVA = "0xF3AD14", Offset = "0xF3AD14", VA = "0xF3AD14", Slot = "16")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60015A5")]
		[Address(RVA = "0xF3AD1C", Offset = "0xF3AD1C", VA = "0xF3AD1C", Slot = "8")]
		public override bool TryGetFsPerformingReticleRuntimeData(out FsReticleRuntimeData fsReticleRuntimeData)
		{
			return default(bool);
		}

		[Token(Token = "0x60015A6")]
		[Address(RVA = "0xF3AD98", Offset = "0xF3AD98", VA = "0xF3AD98", Slot = "13")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x60015A7")]
		[Address(RVA = "0xF3ADFC", Offset = "0xF3ADFC", VA = "0xF3ADFC", Slot = "11")]
		protected override bool Iternal_CanPerform(InteractorBase interactor)
		{
			return default(bool);
		}

		[Token(Token = "0x60015A8")]
		[Address(RVA = "0xF3AEB0", Offset = "0xF3AEB0", VA = "0xF3AEB0")]
		public void OnInteractionFinished()
		{
		}

		[Token(Token = "0x60015A9")]
		[Address(RVA = "0xF3AEC0", Offset = "0xF3AEC0", VA = "0xF3AEC0", Slot = "14")]
		public override bool IsPerforming()
		{
			return default(bool);
		}

		[Token(Token = "0x60015AA")]
		[Address(RVA = "0xF3AEC8", Offset = "0xF3AEC8", VA = "0xF3AEC8", Slot = "12")]
		protected override void Iternal_Perform(InteractorBase interactor)
		{
		}

		[Token(Token = "0x60015AB")]
		[Address(RVA = "0xF3AFF4", Offset = "0xF3AFF4", VA = "0xF3AFF4")]
		public FsBoundedMotionInteraction()
		{
		}
	}
	[Token(Token = "0x20003C7")]
	[RemoveOnVr]
	[RequireComponent(typeof(PhysicsHoldable))]
	[RequireComponent(typeof(InteractableBase))]
	public class FsInspectInteraction : Actions.InteractionBase, IUpdatable, IFsInspectInteraction
	{
		[Token(Token = "0x400121C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private bool restrictMovement;

		[Token(Token = "0x400121D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
		private bool isPerforming;

		[Token(Token = "0x400121E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4A")]
		private bool openOnClickToggle;

		[Token(Token = "0x400121F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private ControllerBaseInteractor activeInteractor;

		[Token(Token = "0x4001220")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private FsInspectHandler inspectHandler;

		[Token(Token = "0x4001221")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private float lastInputFrameCount;

		[Token(Token = "0x4001222")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private PhysicsHoldable holdable;

		[Token(Token = "0x1700025B")]
		public override string Name
		{
			[Token(Token = "0x60015AC")]
			[Address(RVA = "0xF3AFFC", Offset = "0xF3AFFC", VA = "0xF3AFFC", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700025C")]
		public override bool Highlightable
		{
			[Token(Token = "0x60015AD")]
			[Address(RVA = "0xF3B03C", Offset = "0xF3B03C", VA = "0xF3B03C", Slot = "10")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60015AE")]
		[Address(RVA = "0xF3B044", Offset = "0xF3B044", VA = "0xF3B044", Slot = "13")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x60015AF")]
		[Address(RVA = "0xF3B0A8", Offset = "0xF3B0A8", VA = "0xF3B0A8", Slot = "11")]
		protected override bool Iternal_CanPerform(InteractorBase interactor)
		{
			return default(bool);
		}

		[Token(Token = "0x60015B0")]
		[Address(RVA = "0xF3B1AC", Offset = "0xF3B1AC", VA = "0xF3B1AC", Slot = "14")]
		public override bool IsPerforming()
		{
			return default(bool);
		}

		[Token(Token = "0x60015B1")]
		[Address(RVA = "0xF3B1B4", Offset = "0xF3B1B4", VA = "0xF3B1B4", Slot = "12")]
		protected override void Iternal_Perform(InteractorBase interactor)
		{
		}

		[Token(Token = "0x60015B2")]
		[Address(RVA = "0xF3B358", Offset = "0xF3B358", VA = "0xF3B358")]
		public void HandleEndOfPerformance()
		{
		}

		[Token(Token = "0x60015B3")]
		[Address(RVA = "0xF3B3B0", Offset = "0xF3B3B0", VA = "0xF3B3B0", Slot = "16")]
		public void OnUpdate(float dt)
		{
		}

		[Token(Token = "0x60015B4")]
		[Address(RVA = "0xF3B4C8", Offset = "0xF3B4C8", VA = "0xF3B4C8")]
		private bool IsInputPerformed()
		{
			return default(bool);
		}

		[Token(Token = "0x60015B5")]
		[Address(RVA = "0xF3B5CC", Offset = "0xF3B5CC", VA = "0xF3B5CC")]
		private bool IsCancelInputBeingPerformed()
		{
			return default(bool);
		}

		[Token(Token = "0x60015B6")]
		[Address(RVA = "0xF3B64C", Offset = "0xF3B64C", VA = "0xF3B64C")]
		public FsInspectInteraction()
		{
		}
	}
	[Token(Token = "0x20003C8")]
	[RemoveOnVr]
	[RequireComponent(typeof(InteractableBase))]
	public class FsPeekInteraction : Actions.InteractionBase, IUpdatable
	{
		[Token(Token = "0x4001223")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private bool isPerforming;

		[Token(Token = "0x4001224")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private ControllerBaseInteractor activeInteractor;

		[Token(Token = "0x4001225")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private FsPeekHandler fsPeekHandler;

		[Token(Token = "0x4001226")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private ActionInputDescriptionBase[] exitInputs;

		[Token(Token = "0x4001227")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private Transform targetCameraTransform;

		[Token(Token = "0x4001228")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private Transform holsterProxy;

		[Token(Token = "0x1700025D")]
		public override string Name
		{
			[Token(Token = "0x60015B7")]
			[Address(RVA = "0xF3B65C", Offset = "0xF3B65C", VA = "0xF3B65C", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60015B8")]
		[Address(RVA = "0xF3B69C", Offset = "0xF3B69C", VA = "0xF3B69C", Slot = "13")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x60015B9")]
		[Address(RVA = "0xF3B6A4", Offset = "0xF3B6A4", VA = "0xF3B6A4", Slot = "11")]
		protected override bool Iternal_CanPerform(InteractorBase interactor)
		{
			return default(bool);
		}

		[Token(Token = "0x60015BA")]
		[Address(RVA = "0xF3B758", Offset = "0xF3B758", VA = "0xF3B758", Slot = "14")]
		public override bool IsPerforming()
		{
			return default(bool);
		}

		[Token(Token = "0x60015BB")]
		[Address(RVA = "0xF3B760", Offset = "0xF3B760", VA = "0xF3B760", Slot = "12")]
		protected override void Iternal_Perform(InteractorBase interactor)
		{
		}

		[Token(Token = "0x60015BC")]
		[Address(RVA = "0xF3B8EC", Offset = "0xF3B8EC", VA = "0xF3B8EC")]
		public void HandleEndOfPerformance()
		{
		}

		[Token(Token = "0x60015BD")]
		[Address(RVA = "0xF3B948", Offset = "0xF3B948", VA = "0xF3B948", Slot = "16")]
		public void OnUpdate(float dt)
		{
		}

		[Token(Token = "0x60015BE")]
		[Address(RVA = "0xF3BA08", Offset = "0xF3BA08", VA = "0xF3BA08")]
		private bool IsExitInputPerformed()
		{
			return default(bool);
		}

		[Token(Token = "0x60015BF")]
		[Address(RVA = "0xF3BB0C", Offset = "0xF3BB0C", VA = "0xF3BB0C")]
		public FsPeekInteraction()
		{
		}
	}
	[Token(Token = "0x20003C9")]
	[RequireComponent(typeof(PhysicsHoldable))]
	[RemoveOnVr]
	[RequireComponent(typeof(InteractableBase))]
	public class FsPlaceInteraction : Actions.InteractionBase, IUpdatable, IFsPlaceInteraction
	{
		[Token(Token = "0x20003CA")]
		[CompilerGenerated]
		private sealed class <LerpToPosition>d__19 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001231")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001232")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001233")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public FsPlaceInteraction <>4__this;

			[Token(Token = "0x4001234")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float duration;

			[Token(Token = "0x4001235")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public Vector3 targetPosition;

			[Token(Token = "0x4001236")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public Quaternion targetRotation;

			[Token(Token = "0x4001237")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private Vector3 <initialPos>5__2;

			[Token(Token = "0x4001238")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
			private Quaternion <initialRot>5__3;

			[Token(Token = "0x4001239")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
			private float <startTime>5__4;

			[Token(Token = "0x17000260")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60015CE")]
				[Address(RVA = "0xF3C7C8", Offset = "0xF3C7C8", VA = "0xF3C7C8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000261")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60015D0")]
				[Address(RVA = "0xF3C810", Offset = "0xF3C810", VA = "0xF3C810", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60015CB")]
			[Address(RVA = "0xF3C364", Offset = "0xF3C364", VA = "0xF3C364")]
			[DebuggerHidden]
			public <LerpToPosition>d__19(int <>1__state)
			{
			}

			[Token(Token = "0x60015CC")]
			[Address(RVA = "0xF3C418", Offset = "0xF3C418", VA = "0xF3C418", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60015CD")]
			[Address(RVA = "0xF3C41C", Offset = "0xF3C41C", VA = "0xF3C41C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60015CF")]
			[Address(RVA = "0xF3C7D0", Offset = "0xF3C7D0", VA = "0xF3C7D0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001229")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private bool isPerforming;

		[Token(Token = "0x400122A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
		private bool isPlacing;

		[Token(Token = "0x400122B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4A")]
		private bool interruptionRequested;

		[Token(Token = "0x400122C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private ControllerBaseInteractor activeInteractor;

		[Token(Token = "0x400122D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private PhysicsHoldable holdable;

		[Token(Token = "0x400122E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private IEnumerator enumarator;

		[Token(Token = "0x400122F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private List<bool> collidersEnabledOriginalValues;

		[Token(Token = "0x4001230")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private bool onlyPlaceInDocks;

		[Token(Token = "0x1700025E")]
		public override string Name
		{
			[Token(Token = "0x60015C0")]
			[Address(RVA = "0xF3BB14", Offset = "0xF3BB14", VA = "0xF3BB14", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700025F")]
		public override bool Highlightable
		{
			[Token(Token = "0x60015C1")]
			[Address(RVA = "0xF3BB54", Offset = "0xF3BB54", VA = "0xF3BB54", Slot = "10")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60015C2")]
		[Address(RVA = "0xF3BB5C", Offset = "0xF3BB5C", VA = "0xF3BB5C", Slot = "13")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x60015C3")]
		[Address(RVA = "0xF3BBC0", Offset = "0xF3BBC0", VA = "0xF3BBC0", Slot = "11")]
		protected override bool Iternal_CanPerform(InteractorBase interactor)
		{
			return default(bool);
		}

		[Token(Token = "0x60015C4")]
		[Address(RVA = "0xF3BCC4", Offset = "0xF3BCC4", VA = "0xF3BCC4", Slot = "14")]
		public override bool IsPerforming()
		{
			return default(bool);
		}

		[Token(Token = "0x60015C5")]
		[Address(RVA = "0xF3BCCC", Offset = "0xF3BCCC", VA = "0xF3BCCC", Slot = "12")]
		protected override void Iternal_Perform(InteractorBase interactor)
		{
		}

		[Token(Token = "0x60015C6")]
		[Address(RVA = "0xF3BDF8", Offset = "0xF3BDF8", VA = "0xF3BDF8")]
		public void RequestInterruption()
		{
		}

		[Token(Token = "0x60015C7")]
		[Address(RVA = "0xF3BE0C", Offset = "0xF3BE0C", VA = "0xF3BE0C")]
		private void HandleEndOfPerformance()
		{
		}

		[Token(Token = "0x60015C8")]
		[Address(RVA = "0xF3C184", Offset = "0xF3C184", VA = "0xF3C184", Slot = "16")]
		public void OnUpdate(float dt)
		{
		}

		[Token(Token = "0x60015C9")]
		[Address(RVA = "0xF3C0C0", Offset = "0xF3C0C0", VA = "0xF3C0C0")]
		[IteratorStateMachine(typeof(<LerpToPosition>d__19))]
		private IEnumerator LerpToPosition(Vector3 targetPosition, Quaternion targetRotation, float duration = 0.1f)
		{
			return null;
		}

		[Token(Token = "0x60015CA")]
		[Address(RVA = "0xF3C38C", Offset = "0xF3C38C", VA = "0xF3C38C")]
		public FsPlaceInteraction()
		{
		}
	}
	[Token(Token = "0x20003CB")]
	[RequireComponent(typeof(InteractableBase))]
	[RequireComponent(typeof(PhysicsHoldable))]
	[RemoveOnVr]
	public class FsSwapInHandsInteraction : Actions.InteractionBase, IFsSwapInHandsInteraction
	{
		[Token(Token = "0x400123A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private bool isPerforming;

		[Token(Token = "0x400123B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private InteractableBase interactable;

		[Token(Token = "0x400123C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Holdable holdable;

		[Token(Token = "0x400123D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private ControllerBaseInteractor activeInteractor;

		[Token(Token = "0x17000262")]
		public override string Name
		{
			[Token(Token = "0x60015D1")]
			[Address(RVA = "0xF3C818", Offset = "0xF3C818", VA = "0xF3C818", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000263")]
		public override bool Highlightable
		{
			[Token(Token = "0x60015D2")]
			[Address(RVA = "0xF3C858", Offset = "0xF3C858", VA = "0xF3C858", Slot = "10")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60015D3")]
		[Address(RVA = "0xF3C860", Offset = "0xF3C860", VA = "0xF3C860", Slot = "13")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x60015D4")]
		[Address(RVA = "0xF3C8FC", Offset = "0xF3C8FC", VA = "0xF3C8FC", Slot = "11")]
		protected override bool Iternal_CanPerform(InteractorBase interactor)
		{
			return default(bool);
		}

		[Token(Token = "0x60015D5")]
		[Address(RVA = "0xF3CA6C", Offset = "0xF3CA6C", VA = "0xF3CA6C")]
		public void OnInteractionFinished()
		{
		}

		[Token(Token = "0x60015D6")]
		[Address(RVA = "0xF3CAB8", Offset = "0xF3CAB8", VA = "0xF3CAB8", Slot = "14")]
		public override bool IsPerforming()
		{
			return default(bool);
		}

		[Token(Token = "0x60015D7")]
		[Address(RVA = "0xF3CAC0", Offset = "0xF3CAC0", VA = "0xF3CAC0", Slot = "12")]
		protected override void Iternal_Perform(InteractorBase interactor)
		{
		}

		[Token(Token = "0x60015D8")]
		[Address(RVA = "0xF3CC3C", Offset = "0xF3CC3C", VA = "0xF3CC3C")]
		public FsSwapInHandsInteraction()
		{
		}
	}
	[Token(Token = "0x20003CC")]
	[RequireComponent(typeof(InteractableBase))]
	[RemoveOnVr]
	[RequireComponent(typeof(PhysicsHoldable))]
	public class FsThrowInteraction : Actions.InteractionBase, IFsThrowInteraction
	{
		[Token(Token = "0x400123E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		protected IHoldable holdable;

		[Token(Token = "0x400123F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly Vector3 throwForce;

		[Token(Token = "0x17000264")]
		public override string Name
		{
			[Token(Token = "0x60015D9")]
			[Address(RVA = "0xF3CC44", Offset = "0xF3CC44", VA = "0xF3CC44", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000265")]
		public override bool Highlightable
		{
			[Token(Token = "0x60015DA")]
			[Address(RVA = "0xF3CC84", Offset = "0xF3CC84", VA = "0xF3CC84", Slot = "10")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000266")]
		public override int Priority
		{
			[Token(Token = "0x60015DB")]
			[Address(RVA = "0xF3CC8C", Offset = "0xF3CC8C", VA = "0xF3CC8C", Slot = "6")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x60015DC")]
		[Address(RVA = "0xF3CC94", Offset = "0xF3CC94", VA = "0xF3CC94", Slot = "13")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x60015DD")]
		[Address(RVA = "0xF3CCF8", Offset = "0xF3CCF8", VA = "0xF3CCF8")]
		private int GetSlot(InteractorBase interactor, Holder holder)
		{
			return default(int);
		}

		[Token(Token = "0x60015DE")]
		[Address(RVA = "0xF3CD00", Offset = "0xF3CD00", VA = "0xF3CD00", Slot = "11")]
		protected override bool Iternal_CanPerform(InteractorBase interactor)
		{
			return default(bool);
		}

		[Token(Token = "0x60015DF")]
		[Address(RVA = "0xF3CEC0", Offset = "0xF3CEC0", VA = "0xF3CEC0", Slot = "12")]
		protected override void Iternal_Perform(InteractorBase interactor)
		{
		}

		[Token(Token = "0x60015E0")]
		[Address(RVA = "0xF3D164", Offset = "0xF3D164", VA = "0xF3D164")]
		public FsThrowInteraction()
		{
		}
	}
	[Token(Token = "0x20003CD")]
	public abstract class GraspInteraction_Base : Actions.InteractionBase, IInteractionHighlightOverridable
	{
		[Token(Token = "0x4001240")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		protected Holdable holdable;

		[Token(Token = "0x4001241")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		protected InteractableBase _interactableToHighlightOverride;

		[Token(Token = "0x17000267")]
		public override string Name
		{
			[Token(Token = "0x60015E2")]
			[Address(RVA = "0xF3D1C4", Offset = "0xF3D1C4", VA = "0xF3D1C4", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000268")]
		public InteractableBase InteractableToHighlightOverride
		{
			[Token(Token = "0x60015E3")]
			[Address(RVA = "0xF3D204", Offset = "0xF3D204", VA = "0xF3D204", Slot = "16")]
			get
			{
				return null;
			}
			[Token(Token = "0x60015E4")]
			[Address(RVA = "0xF3D20C", Offset = "0xF3D20C", VA = "0xF3D20C")]
			set
			{
			}
		}

		[Token(Token = "0x60015E5")]
		[Address(RVA = "0xF3D214", Offset = "0xF3D214", VA = "0xF3D214", Slot = "13")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x60015E6")]
		[Address(RVA = "0xF3D278", Offset = "0xF3D278", VA = "0xF3D278")]
		protected GraspInteraction_Base()
		{
		}
	}
	[Token(Token = "0x20003CE")]
	public abstract class GraspInteraction_XR : GraspInteraction_Base
	{
		[Token(Token = "0x60015E7")]
		[Address(RVA = "0xF3D280", Offset = "0xF3D280", VA = "0xF3D280", Slot = "11")]
		protected override bool Iternal_CanPerform(InteractorBase interactor)
		{
			return default(bool);
		}

		[Token(Token = "0x60015E8")]
		[Address(RVA = "0xF3D41C", Offset = "0xF3D41C", VA = "0xF3D41C", Slot = "12")]
		protected override void Iternal_Perform(InteractorBase interactor)
		{
		}

		[Token(Token = "0x60015E9")]
		[Address(RVA = "0xF3D514", Offset = "0xF3D514", VA = "0xF3D514")]
		protected GraspInteraction_XR()
		{
		}
	}
	[Token(Token = "0x20003CF")]
	public abstract class GraspInteraction_FlatScreen : GraspInteraction_Base
	{
		[Token(Token = "0x60015EA")]
		[Address(RVA = "0xF3D51C", Offset = "0xF3D51C", VA = "0xF3D51C", Slot = "11")]
		protected override bool Iternal_CanPerform(InteractorBase interactor)
		{
			return default(bool);
		}

		[Token(Token = "0x60015EB")]
		[Address(RVA = "0xF3D634", Offset = "0xF3D634", VA = "0xF3D634", Slot = "12")]
		protected override void Iternal_Perform(InteractorBase interactor)
		{
		}

		[Token(Token = "0x60015EC")]
		[Address(RVA = "0xF3D710", Offset = "0xF3D710", VA = "0xF3D710")]
		protected GraspInteraction_FlatScreen()
		{
		}
	}
	[Token(Token = "0x20003D0")]
	[RequireComponent(typeof(InteractableBase))]
	[RequireComponent(typeof(Holdable))]
	public class GraspInteraction : GraspInteraction_XR
	{
		[Token(Token = "0x60015ED")]
		[Address(RVA = "0xF3D718", Offset = "0xF3D718", VA = "0xF3D718")]
		public GraspInteraction()
		{
		}
	}
	[Token(Token = "0x20003D1")]
	[RequireComponent(typeof(InteractableBase))]
	public class MoveToLocationInteraction : Actions.InteractionBase
	{
		[Token(Token = "0x4001242")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		protected MoveTarget target;

		[Token(Token = "0x17000269")]
		public override string Name
		{
			[Token(Token = "0x60015EE")]
			[Address(RVA = "0xF3D720", Offset = "0xF3D720", VA = "0xF3D720", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60015EF")]
		[Address(RVA = "0xF3D760", Offset = "0xF3D760", VA = "0xF3D760", Slot = "11")]
		protected override bool Iternal_CanPerform(InteractorBase interactor)
		{
			return default(bool);
		}

		[Token(Token = "0x60015F0")]
		[Address(RVA = "0xF3D860", Offset = "0xF3D860", VA = "0xF3D860", Slot = "12")]
		protected override void Iternal_Perform(InteractorBase interactor)
		{
		}

		[Token(Token = "0x60015F1")]
		[Address(RVA = "0xF3D988", Offset = "0xF3D988", VA = "0xF3D988")]
		public MoveToLocationInteraction()
		{
		}
	}
	[Token(Token = "0x20003D2")]
	public abstract class PickUpInteraction_Base : Actions.InteractionBase
	{
		[Token(Token = "0x4001243")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		protected PhysicsHoldable holdable;

		[Token(Token = "0x1700026A")]
		public override string Name
		{
			[Token(Token = "0x60015F2")]
			[Address(RVA = "0xF3D990", Offset = "0xF3D990", VA = "0xF3D990", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60015F3")]
		protected abstract int GetSlot(InteractorBase interactor, Holder holder);

		[Token(Token = "0x60015F4")]
		[Address(RVA = "0xF3D9D0", Offset = "0xF3D9D0", VA = "0xF3D9D0", Slot = "13")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x60015F5")]
		[Address(RVA = "0xF3DA34", Offset = "0xF3DA34", VA = "0xF3DA34", Slot = "12")]
		protected override void Iternal_Perform(InteractorBase interactor)
		{
		}

		[Token(Token = "0x60015F6")]
		[Address(RVA = "0xF3DB8C", Offset = "0xF3DB8C", VA = "0xF3DB8C")]
		protected PickUpInteraction_Base()
		{
		}
	}
	[Token(Token = "0x20003D3")]
	public abstract class PickUpInteraction_XR : PickUpInteraction_Base
	{
		[Token(Token = "0x4001244")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private bool isPerforming;

		[Token(Token = "0x4001245")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Holder m_holder;

		[Token(Token = "0x60015F7")]
		[Address(RVA = "0xF3DB94", Offset = "0xF3DB94", VA = "0xF3DB94", Slot = "16")]
		protected override int GetSlot(InteractorBase interactor, Holder holder)
		{
			return default(int);
		}

		[Token(Token = "0x60015F8")]
		[Address(RVA = "0xF3DC30", Offset = "0xF3DC30", VA = "0xF3DC30", Slot = "11")]
		protected override bool Iternal_CanPerform(InteractorBase interactor)
		{
			return default(bool);
		}

		[Token(Token = "0x60015F9")]
		[Address(RVA = "0xF3DE00", Offset = "0xF3DE00", VA = "0xF3DE00", Slot = "12")]
		protected override void Iternal_Perform(InteractorBase interactor)
		{
		}

		[Token(Token = "0x60015FA")]
		[Address(RVA = "0xF3DFE8", Offset = "0xF3DFE8", VA = "0xF3DFE8")]
		public void OnUpdate(float dt)
		{
		}

		[Token(Token = "0x60015FB")]
		[Address(RVA = "0xF3E024", Offset = "0xF3E024", VA = "0xF3E024", Slot = "14")]
		public override bool IsPerforming()
		{
			return default(bool);
		}

		[Token(Token = "0x60015FC")]
		[Address(RVA = "0xF3E02C", Offset = "0xF3E02C", VA = "0xF3E02C", Slot = "15")]
		public override bool RemoteGrabberInteractionAllowed()
		{
			return default(bool);
		}

		[Token(Token = "0x60015FD")]
		[Address(RVA = "0xF3E034", Offset = "0xF3E034", VA = "0xF3E034")]
		protected PickUpInteraction_XR()
		{
		}
	}
	[Token(Token = "0x20003D4")]
	public abstract class PickUpInteraction_FlatScreen : PickUpInteraction_Base, IUpdatable
	{
		[Token(Token = "0x4001246")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Holder m_holder;

		[Token(Token = "0x4001247")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private bool isPerforming;

		[Token(Token = "0x60015FE")]
		[Address(RVA = "0xF3E03C", Offset = "0xF3E03C", VA = "0xF3E03C", Slot = "16")]
		protected override int GetSlot(InteractorBase interactor, Holder holder)
		{
			return default(int);
		}

		[Token(Token = "0x60015FF")]
		[Address(RVA = "0xF3E044", Offset = "0xF3E044", VA = "0xF3E044", Slot = "11")]
		protected override bool Iternal_CanPerform(InteractorBase interactor)
		{
			return default(bool);
		}

		[Token(Token = "0x6001600")]
		[Address(RVA = "0xF3E150", Offset = "0xF3E150", VA = "0xF3E150", Slot = "12")]
		protected override void Iternal_Perform(InteractorBase interactor)
		{
		}

		[Token(Token = "0x6001601")]
		[Address(RVA = "0xF3E288", Offset = "0xF3E288", VA = "0xF3E288", Slot = "14")]
		public override bool IsPerforming()
		{
			return default(bool);
		}

		[Token(Token = "0x6001602")]
		[Address(RVA = "0xF3E290", Offset = "0xF3E290", VA = "0xF3E290", Slot = "17")]
		public void OnUpdate(float dt)
		{
		}

		[Token(Token = "0x6001603")]
		[Address(RVA = "0xF3E2CC", Offset = "0xF3E2CC", VA = "0xF3E2CC")]
		protected PickUpInteraction_FlatScreen()
		{
		}
	}
	[Token(Token = "0x20003D5")]
	[RequireComponent(typeof(InteractableBase))]
	[RequireComponent(typeof(PhysicsHoldable))]
	public class PickUpInteraction : PickUpInteraction_XR
	{
		[Token(Token = "0x6001604")]
		[Address(RVA = "0xF3E2D4", Offset = "0xF3E2D4", VA = "0xF3E2D4")]
		public PickUpInteraction()
		{
		}
	}
	[Token(Token = "0x20003D6")]
	public abstract class RedockInteraction_Base : DropInteraction
	{
		[Token(Token = "0x1700026B")]
		public PhysicsHoldableDock Dock
		{
			[Token(Token = "0x6001605")]
			[Address(RVA = "0xF3E2DC", Offset = "0xF3E2DC", VA = "0xF3E2DC")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001606")]
			[Address(RVA = "0xF3E2E4", Offset = "0xF3E2E4", VA = "0xF3E2E4")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x6001607")]
		[Address(RVA = "0xF3E2EC", Offset = "0xF3E2EC", VA = "0xF3E2EC", Slot = "12")]
		protected override void Iternal_Perform(InteractorBase interactor)
		{
		}

		[Token(Token = "0x6001608")]
		[Address(RVA = "0xF3E3FC", Offset = "0xF3E3FC", VA = "0xF3E3FC")]
		protected RedockInteraction_Base()
		{
		}
	}
	[Token(Token = "0x20003D7")]
	public abstract class RedockInteraction_XR : RedockInteraction_Base
	{
		[Token(Token = "0x6001609")]
		[Address(RVA = "0xF3E404", Offset = "0xF3E404", VA = "0xF3E404", Slot = "16")]
		protected override int GetSlot(InteractorBase interactor, Holder holder)
		{
			return default(int);
		}

		[Token(Token = "0x600160A")]
		[Address(RVA = "0xF3E4A0", Offset = "0xF3E4A0", VA = "0xF3E4A0")]
		protected RedockInteraction_XR()
		{
		}
	}
	[Token(Token = "0x20003D8")]
	public abstract class RedockInteraction_FlatScreen : RedockInteraction_Base
	{
		[Token(Token = "0x600160B")]
		[Address(RVA = "0xF3E4A8", Offset = "0xF3E4A8", VA = "0xF3E4A8", Slot = "16")]
		protected override int GetSlot(InteractorBase interactor, Holder holder)
		{
			return default(int);
		}

		[Token(Token = "0x600160C")]
		[Address(RVA = "0xF3E4B0", Offset = "0xF3E4B0", VA = "0xF3E4B0", Slot = "11")]
		protected override bool Iternal_CanPerform(InteractorBase interactor)
		{
			return default(bool);
		}

		[Token(Token = "0x600160D")]
		[Address(RVA = "0xF3E564", Offset = "0xF3E564", VA = "0xF3E564")]
		protected RedockInteraction_FlatScreen()
		{
		}
	}
	[Token(Token = "0x20003D9")]
	public class RedockInteraction : RedockInteraction_XR
	{
		[Token(Token = "0x600160E")]
		[Address(RVA = "0xF3E56C", Offset = "0xF3E56C", VA = "0xF3E56C")]
		public RedockInteraction()
		{
		}
	}
	[Token(Token = "0x20003DA")]
	public class ReleaseInteraction_FlatScreen : DropInteraction_FlatScreen
	{
		[Token(Token = "0x600160F")]
		[Address(RVA = "0xF3E574", Offset = "0xF3E574", VA = "0xF3E574", Slot = "16")]
		protected override int GetSlot(InteractorBase interactor, Holder holder)
		{
			return default(int);
		}

		[Token(Token = "0x6001610")]
		[Address(RVA = "0xF3E57C", Offset = "0xF3E57C", VA = "0xF3E57C")]
		public ReleaseInteraction_FlatScreen()
		{
		}
	}
	[Token(Token = "0x20003DB")]
	public class ReleaseInteraction : DropInteraction_XR
	{
		[Token(Token = "0x1700026C")]
		public override string Name
		{
			[Token(Token = "0x6001611")]
			[Address(RVA = "0xF3E584", Offset = "0xF3E584", VA = "0xF3E584", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700026D")]
		public override int Priority
		{
			[Token(Token = "0x6001612")]
			[Address(RVA = "0xF3E5C4", Offset = "0xF3E5C4", VA = "0xF3E5C4", Slot = "6")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x6001613")]
		[Address(RVA = "0xF3E5CC", Offset = "0xF3E5CC", VA = "0xF3E5CC")]
		public ReleaseInteraction()
		{
		}
	}
	[Token(Token = "0x20003DC")]
	public abstract class TakeInteraction_Base : Actions.InteractionBase
	{
		[Token(Token = "0x4001249")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private bool isHighlightable;

		[Token(Token = "0x400124A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[SerializeField]
		protected EAttachmentType xrAttachmentType;

		[Token(Token = "0x400124B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		protected Dispenser dispenser;

		[Token(Token = "0x1700026E")]
		public override string Name
		{
			[Token(Token = "0x6001614")]
			[Address(RVA = "0xF3E5D4", Offset = "0xF3E5D4", VA = "0xF3E5D4", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700026F")]
		public override bool Highlightable
		{
			[Token(Token = "0x6001615")]
			[Address(RVA = "0xF3E614", Offset = "0xF3E614", VA = "0xF3E614", Slot = "10")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001616")]
		protected abstract int GetSlot(InteractorBase interactor, Holder holder);

		[Token(Token = "0x6001617")]
		[Address(RVA = "0xF3E61C", Offset = "0xF3E61C", VA = "0xF3E61C", Slot = "13")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6001618")]
		[Address(RVA = "0xF3E680", Offset = "0xF3E680", VA = "0xF3E680")]
		protected TakeInteraction_Base()
		{
		}
	}
	[Token(Token = "0x20003DD")]
	public abstract class TakeInteraction_XR : TakeInteraction_Base
	{
		[Token(Token = "0x6001619")]
		[Address(RVA = "0xF3E690", Offset = "0xF3E690", VA = "0xF3E690", Slot = "16")]
		protected override int GetSlot(InteractorBase interactor, Holder holder)
		{
			return default(int);
		}

		[Token(Token = "0x600161A")]
		[Address(RVA = "0xF3E72C", Offset = "0xF3E72C", VA = "0xF3E72C", Slot = "11")]
		protected override bool Iternal_CanPerform(InteractorBase interactor)
		{
			return default(bool);
		}

		[Token(Token = "0x600161B")]
		[Address(RVA = "0xF3EA24", Offset = "0xF3EA24", VA = "0xF3EA24", Slot = "12")]
		protected override void Iternal_Perform(InteractorBase interactor)
		{
		}

		[Token(Token = "0x600161C")]
		[Address(RVA = "0xF3EB20", Offset = "0xF3EB20", VA = "0xF3EB20")]
		protected TakeInteraction_XR()
		{
		}
	}
	[Token(Token = "0x20003DE")]
	public abstract class TakeInteraction_FlatScreen : TakeInteraction_Base
	{
		[Token(Token = "0x600161D")]
		[Address(RVA = "0xF3EB30", Offset = "0xF3EB30", VA = "0xF3EB30", Slot = "16")]
		protected override int GetSlot(InteractorBase interactor, Holder holder)
		{
			return default(int);
		}

		[Token(Token = "0x600161E")]
		[Address(RVA = "0xF3EB38", Offset = "0xF3EB38", VA = "0xF3EB38", Slot = "11")]
		protected override bool Iternal_CanPerform(InteractorBase interactor)
		{
			return default(bool);
		}

		[Token(Token = "0x600161F")]
		[Address(RVA = "0xF3EC8C", Offset = "0xF3EC8C", VA = "0xF3EC8C", Slot = "12")]
		protected override void Iternal_Perform(InteractorBase interactor)
		{
		}

		[Token(Token = "0x6001620")]
		[Address(RVA = "0xF3EE18", Offset = "0xF3EE18", VA = "0xF3EE18")]
		protected TakeInteraction_FlatScreen()
		{
		}
	}
	[Token(Token = "0x20003DF")]
	[RequireComponent(typeof(Dispenser))]
	[RequireComponent(typeof(InteractableBase))]
	public class TakeInteraction : TakeInteraction_XR
	{
		[Token(Token = "0x6001621")]
		[Address(RVA = "0xF3EE28", Offset = "0xF3EE28", VA = "0xF3EE28")]
		public TakeInteraction()
		{
		}
	}
	[Token(Token = "0x20003E0")]
	public interface ITouchableInteractable
	{
		[Token(Token = "0x6001622")]
		bool CanTouch();

		[Token(Token = "0x6001623")]
		void OnTouch(InteractorBase interactor, Vector3 touchDirection);
	}
	[Token(Token = "0x20003E1")]
	public abstract class TouchInteraction_Base : Actions.InteractionBase
	{
		[Token(Token = "0x400124C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private ITouchableInteractable[] touchableInteractables;

		[Token(Token = "0x17000270")]
		public override string Name
		{
			[Token(Token = "0x6001624")]
			[Address(RVA = "0xF3EE38", Offset = "0xF3EE38", VA = "0xF3EE38", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001625")]
		[Address(RVA = "0xF3EE78", Offset = "0xF3EE78", VA = "0xF3EE78", Slot = "13")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6001626")]
		[Address(RVA = "0xF3EEDC", Offset = "0xF3EEDC", VA = "0xF3EEDC", Slot = "11")]
		protected override bool Iternal_CanPerform(InteractorBase interactor)
		{
			return default(bool);
		}

		[Token(Token = "0x6001627")]
		[Address(RVA = "0xF3EFC8", Offset = "0xF3EFC8", VA = "0xF3EFC8")]
		protected void OnTouch(InteractorBase interactor, Vector3 touchDirection)
		{
		}

		[Token(Token = "0x6001628")]
		[Address(RVA = "0xF3F0D8", Offset = "0xF3F0D8", VA = "0xF3F0D8")]
		protected TouchInteraction_Base()
		{
		}
	}
	[Token(Token = "0x20003E2")]
	public abstract class TouchInteraction_XR : TouchInteraction_Base
	{
		[Token(Token = "0x400124D")]
		private const float minDurationBetweenTouches = 1f;

		[Token(Token = "0x400124E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private float lastTouchTime;

		[Token(Token = "0x17000271")]
		public override bool Highlightable
		{
			[Token(Token = "0x6001629")]
			[Address(RVA = "0xF3F0E0", Offset = "0xF3F0E0", VA = "0xF3F0E0", Slot = "10")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x600162A")]
		[Address(RVA = "0xF3F0E8", Offset = "0xF3F0E8", VA = "0xF3F0E8", Slot = "11")]
		protected override bool Iternal_CanPerform(InteractorBase interactor)
		{
			return default(bool);
		}

		[Token(Token = "0x600162B")]
		[Address(RVA = "0xF3F1F4", Offset = "0xF3F1F4", VA = "0xF3F1F4", Slot = "12")]
		protected override void Iternal_Perform(InteractorBase interactor)
		{
		}

		[Token(Token = "0x600162C")]
		[Address(RVA = "0xF3F32C", Offset = "0xF3F32C", VA = "0xF3F32C")]
		protected TouchInteraction_XR()
		{
		}
	}
	[Token(Token = "0x20003E3")]
	public abstract class TouchInteraction_FS : TouchInteraction_Base
	{
		[Token(Token = "0x600162D")]
		[Address(RVA = "0xF3F334", Offset = "0xF3F334", VA = "0xF3F334", Slot = "12")]
		protected override void Iternal_Perform(InteractorBase interactor)
		{
		}

		[Token(Token = "0x600162E")]
		[Address(RVA = "0xF3F3D8", Offset = "0xF3F3D8", VA = "0xF3F3D8")]
		protected TouchInteraction_FS()
		{
		}
	}
	[Token(Token = "0x20003E4")]
	[RequireComponent(typeof(InteractableBase))]
	public class TouchInteraction : TouchInteraction_XR
	{
		[Token(Token = "0x600162F")]
		[Address(RVA = "0xF3F3E0", Offset = "0xF3F3E0", VA = "0xF3F3E0")]
		public TouchInteraction()
		{
		}
	}
	[Token(Token = "0x20003E5")]
	public abstract class UndockInteraction_Base : Actions.InteractionBase, IInteractionHighlightOverridable, IInitialisable
	{
		[Token(Token = "0x17000272")]
		public override string Name
		{
			[Token(Token = "0x6001630")]
			[Address(RVA = "0xF3F3E8", Offset = "0xF3F3E8", VA = "0xF3F3E8", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000273")]
		public PhysicsHoldableDock Dock
		{
			[Token(Token = "0x6001631")]
			[Address(RVA = "0xF3F428", Offset = "0xF3F428", VA = "0xF3F428")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001632")]
			[Address(RVA = "0xF3F430", Offset = "0xF3F430", VA = "0xF3F430")]
			[CompilerGenerated]
			protected set
			{
			}
		}

		[Token(Token = "0x17000274")]
		public InteractableBase InteractableToHighlightOverride
		{
			[Token(Token = "0x6001633")]
			[Address(RVA = "0xF3F438", Offset = "0xF3F438", VA = "0xF3F438", Slot = "16")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001634")]
			[Address(RVA = "0xF3F440", Offset = "0xF3F440", VA = "0xF3F440")]
			[CompilerGenerated]
			protected set
			{
			}
		}

		[Token(Token = "0x6001635")]
		protected abstract int GetSlot(InteractorBase interactor, Holder holder);

		[Token(Token = "0x6001636")]
		[Address(RVA = "0xF3F448", Offset = "0xF3F448", VA = "0xF3F448", Slot = "13")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6001637")]
		[Address(RVA = "0xF3F568", Offset = "0xF3F568", VA = "0xF3F568", Slot = "17")]
		public bool Initialise()
		{
			return default(bool);
		}

		[Token(Token = "0x6001638")]
		[Address(RVA = "0xF3F6F8", Offset = "0xF3F6F8", VA = "0xF3F6F8", Slot = "19")]
		protected virtual void OnDestroy()
		{
		}

		[Token(Token = "0x6001639")]
		[Address(RVA = "0xF3F694", Offset = "0xF3F694", VA = "0xF3F694")]
		private void PostDock(PhysicsHoldableDock dock, PhysicsHoldable holdable)
		{
		}

		[Token(Token = "0x600163A")]
		[Address(RVA = "0xF3F7D8", Offset = "0xF3F7D8", VA = "0xF3F7D8")]
		private void PostUndock(PhysicsHoldableDock dock, PhysicsHoldable holdable)
		{
		}

		[Token(Token = "0x600163B")]
		[Address(RVA = "0xF3F7E4", Offset = "0xF3F7E4", VA = "0xF3F7E4")]
		protected UndockInteraction_Base()
		{
		}
	}
	[Token(Token = "0x20003E6")]
	public abstract class UndockInteraction_XR : UndockInteraction_Base
	{
		[Token(Token = "0x600163C")]
		[Address(RVA = "0xF3F7EC", Offset = "0xF3F7EC", VA = "0xF3F7EC", Slot = "18")]
		protected override int GetSlot(InteractorBase interactor, Holder holder)
		{
			return default(int);
		}

		[Token(Token = "0x600163D")]
		[Address(RVA = "0xF3F888", Offset = "0xF3F888", VA = "0xF3F888", Slot = "11")]
		protected override bool Iternal_CanPerform(InteractorBase interactor)
		{
			return default(bool);
		}

		[Token(Token = "0x600163E")]
		[Address(RVA = "0xF3FABC", Offset = "0xF3FABC", VA = "0xF3FABC", Slot = "12")]
		protected override void Iternal_Perform(InteractorBase interactor)
		{
		}

		[Token(Token = "0x600163F")]
		[Address(RVA = "0xF3FD28", Offset = "0xF3FD28", VA = "0xF3FD28", Slot = "15")]
		public override bool RemoteGrabberInteractionAllowed()
		{
			return default(bool);
		}

		[Token(Token = "0x6001640")]
		[Address(RVA = "0xF3FDCC", Offset = "0xF3FDCC", VA = "0xF3FDCC")]
		protected UndockInteraction_XR()
		{
		}
	}
	[Token(Token = "0x20003E7")]
	public abstract class UndockInteraction_FlatScreen : UndockInteraction_Base
	{
		[Token(Token = "0x6001641")]
		[Address(RVA = "0xF3FDD4", Offset = "0xF3FDD4", VA = "0xF3FDD4", Slot = "18")]
		protected override int GetSlot(InteractorBase interactor, Holder holder)
		{
			return default(int);
		}

		[Token(Token = "0x6001642")]
		[Address(RVA = "0xF3FDDC", Offset = "0xF3FDDC", VA = "0xF3FDDC", Slot = "11")]
		protected override bool Iternal_CanPerform(InteractorBase interactor)
		{
			return default(bool);
		}

		[Token(Token = "0x6001643")]
		[Address(RVA = "0xF3FF80", Offset = "0xF3FF80", VA = "0xF3FF80", Slot = "12")]
		protected override void Iternal_Perform(InteractorBase interactor)
		{
		}

		[Token(Token = "0x6001644")]
		[Address(RVA = "0xF40220", Offset = "0xF40220", VA = "0xF40220")]
		protected UndockInteraction_FlatScreen()
		{
		}
	}
	[Token(Token = "0x20003E8")]
	[RequireComponent(typeof(InteractableBase))]
	[RequireComponent(typeof(PhysicsHoldableDock))]
	public class UndockInteraction : UndockInteraction_XR
	{
		[Token(Token = "0x6001645")]
		[Address(RVA = "0xF40228", Offset = "0xF40228", VA = "0xF40228")]
		public UndockInteraction()
		{
		}
	}
	[Token(Token = "0x20003E9")]
	public interface IUsable
	{
		[Token(Token = "0x6001646")]
		void Use();
	}
	[Token(Token = "0x20003EA")]
	public abstract class UseInteraction_Base : Actions.InteractionBase
	{
		[Token(Token = "0x4001251")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		protected IUsable[] usables;

		[Token(Token = "0x17000275")]
		public override string Name
		{
			[Token(Token = "0x6001647")]
			[Address(RVA = "0xF40230", Offset = "0xF40230", VA = "0xF40230", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001648")]
		[Address(RVA = "0xF40270", Offset = "0xF40270", VA = "0xF40270", Slot = "13")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6001649")]
		[Address(RVA = "0xF402D4", Offset = "0xF402D4", VA = "0xF402D4", Slot = "11")]
		protected override bool Iternal_CanPerform(InteractorBase interactor)
		{
			return default(bool);
		}

		[Token(Token = "0x600164A")]
		[Address(RVA = "0xF402F8", Offset = "0xF402F8", VA = "0xF402F8", Slot = "12")]
		protected override void Iternal_Perform(InteractorBase interactor)
		{
		}

		[Token(Token = "0x600164B")]
		[Address(RVA = "0xF403D4", Offset = "0xF403D4", VA = "0xF403D4")]
		protected UseInteraction_Base()
		{
		}
	}
	[Token(Token = "0x20003EB")]
	public abstract class UseInteraction_XR : UseInteraction_Base
	{
		[Token(Token = "0x600164C")]
		[Address(RVA = "0xF403DC", Offset = "0xF403DC", VA = "0xF403DC", Slot = "11")]
		protected override bool Iternal_CanPerform(InteractorBase interactor)
		{
			return default(bool);
		}

		[Token(Token = "0x600164D")]
		[Address(RVA = "0xF404CC", Offset = "0xF404CC", VA = "0xF404CC")]
		protected UseInteraction_XR()
		{
		}
	}
	[Token(Token = "0x20003EC")]
	public abstract class UseInteraction_FS : UseInteraction_Base
	{
		[Token(Token = "0x600164E")]
		[Address(RVA = "0xF404D4", Offset = "0xF404D4", VA = "0xF404D4", Slot = "11")]
		protected override bool Iternal_CanPerform(InteractorBase interactor)
		{
			return default(bool);
		}

		[Token(Token = "0x600164F")]
		[Address(RVA = "0xF4058C", Offset = "0xF4058C", VA = "0xF4058C")]
		protected UseInteraction_FS()
		{
		}
	}
	[Token(Token = "0x20003ED")]
	[RequireComponent(typeof(InteractableBase))]
	public class UseInteraction : UseInteraction_XR
	{
		[Token(Token = "0x6001650")]
		[Address(RVA = "0xF40594", Offset = "0xF40594", VA = "0xF40594")]
		public UseInteraction()
		{
		}
	}
	[Token(Token = "0x20003EE")]
	public class Button : MonoBehaviour, IUsable
	{
		[Token(Token = "0x4001252")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[FormerlySerializedAs("buttonCoolDown")]
		[FormerlySerializedAs("coolDown")]
		[SerializeField]
		protected float _cooldown;

		[Token(Token = "0x4001253")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		protected UnityEvent _activateEvent;

		[Token(Token = "0x4001254")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		protected float _postActivateDelay;

		[Token(Token = "0x4001255")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		protected UnityEvent _postActivateEvent;

		[Token(Token = "0x4001256")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float _lastActivationTime;

		[Token(Token = "0x4001257")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float _lastCooldownResetTime;

		[Token(Token = "0x4001258")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool _postActivationAwaiting;

		[Token(Token = "0x17000276")]
		public UnityEvent onActivated
		{
			[Token(Token = "0x6001651")]
			[Address(RVA = "0xF4059C", Offset = "0xF4059C", VA = "0xF4059C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000277")]
		public float cooldownTime
		{
			[Token(Token = "0x6001652")]
			[Address(RVA = "0xF405A4", Offset = "0xF405A4", VA = "0xF405A4")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001653")]
			[Address(RVA = "0xF405AC", Offset = "0xF405AC", VA = "0xF405AC")]
			set
			{
			}
		}

		[Token(Token = "0x17000278")]
		public bool isOnCooldown
		{
			[Token(Token = "0x6001654")]
			[Address(RVA = "0xF405B4", Offset = "0xF405B4", VA = "0xF405B4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001655")]
		[Address(RVA = "0xF405F4", Offset = "0xF405F4", VA = "0xF405F4", Slot = "5")]
		public virtual void Activate()
		{
		}

		[Token(Token = "0x6001656")]
		[Address(RVA = "0xF40628", Offset = "0xF40628", VA = "0xF40628")]
		protected void Cooldown()
		{
		}

		[Token(Token = "0x6001657")]
		[Address(RVA = "0xF40644", Offset = "0xF40644", VA = "0xF40644", Slot = "4")]
		private void Interactables.IUsable.Use()
		{
		}

		[Token(Token = "0x6001658")]
		[Address(RVA = "0xF40698", Offset = "0xF40698", VA = "0xF40698")]
		private void Update()
		{
		}

		[Token(Token = "0x6001659")]
		[Address(RVA = "0xF406E4", Offset = "0xF406E4", VA = "0xF406E4")]
		public Button()
		{
		}
	}
	[Token(Token = "0x20003EF")]
	public class Dispenser : MonoBehaviour, ISceneReferrable, ISerialisable, IDeserialisable
	{
		[Token(Token = "0x20003F0")]
		protected static class Keys
		{
			[Token(Token = "0x4001261")]
			public const string DispensedObjects = "dispensed";
		}

		[Token(Token = "0x4001259")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		public EventReference[] _onDispenseEventReferences;

		[Token(Token = "0x400125A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private List<PhysicsHoldable> _items;

		[Token(Token = "0x400125B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int _nextItem;

		[Token(Token = "0x400125C")]
		private const int MaxDispensableObjects = 4;

		[Token(Token = "0x400125D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private HashSet<GameObject> _dispensedObjects;

		[Token(Token = "0x400125E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static GameObject[] s_tempDispensedObjects;

		[Token(Token = "0x400125F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private List<CallbackBool<Dispenser, PhysicsHoldable>> _canDispenseCallbackList;

		[Token(Token = "0x4001260")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private List<CallbackVoid<Dispenser, PhysicsHoldable>> _dispensedCallbackList;

		[Token(Token = "0x17000279")]
		public string typeId
		{
			[Token(Token = "0x6001663")]
			[Address(RVA = "0xF40E94", Offset = "0xF40E94", VA = "0xF40E94", Slot = "6")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600165A")]
		[Address(RVA = "0xF406EC", Offset = "0xF406EC", VA = "0xF406EC")]
		public Dispenser()
		{
		}

		[Token(Token = "0x600165B")]
		[Address(RVA = "0xF408A8", Offset = "0xF408A8", VA = "0xF408A8")]
		public void RegisterCanDispenseCallback(CallbackBool<Dispenser, PhysicsHoldable> callback)
		{
		}

		[Token(Token = "0x600165C")]
		[Address(RVA = "0xF40958", Offset = "0xF40958", VA = "0xF40958")]
		public void RegisterDispensedCallback(CallbackVoid<Dispenser, PhysicsHoldable> callback)
		{
		}

		[Token(Token = "0x600165D")]
		[Address(RVA = "0xF40A08", Offset = "0xF40A08", VA = "0xF40A08")]
		public void UnregisterCanDispenseCallback(CallbackBool<Dispenser, PhysicsHoldable> callback)
		{
		}

		[Token(Token = "0x600165E")]
		[Address(RVA = "0xF40A60", Offset = "0xF40A60", VA = "0xF40A60")]
		public void UnregisterDispensedCallback(CallbackVoid<Dispenser, PhysicsHoldable> callback)
		{
		}

		[Token(Token = "0x600165F")]
		[Address(RVA = "0xF40AB8", Offset = "0xF40AB8", VA = "0xF40AB8")]
		public void AddItem(PhysicsHoldable item)
		{
		}

		[Token(Token = "0x6001660")]
		[Address(RVA = "0xF3E92C", Offset = "0xF3E92C", VA = "0xF3E92C")]
		public bool CanDispense()
		{
			return default(bool);
		}

		[Token(Token = "0x6001661")]
		[Address(RVA = "0xF3E9A8", Offset = "0xF3E9A8", VA = "0xF3E9A8")]
		public PhysicsHoldable GetNextItem()
		{
			return null;
		}

		[Token(Token = "0x6001662")]
		[Address(RVA = "0xF40C28", Offset = "0xF40C28", VA = "0xF40C28", Slot = "8")]
		public virtual PhysicsHoldable Dispense()
		{
			return null;
		}

		[Token(Token = "0x6001664")]
		[Address(RVA = "0xF40ED4", Offset = "0xF40ED4", VA = "0xF40ED4", Slot = "5")]
		public bool Serialise(FlexBufferBuilder builder, ISceneObjectReferenceSerialiser objectSerialiser)
		{
			return default(bool);
		}

		[Token(Token = "0x6001665")]
		[Address(RVA = "0xF410AC", Offset = "0xF410AC", VA = "0xF410AC", Slot = "7")]
		public bool Deserialise(FlexBuffer.Map root, ISceneObjectReferenceDeserialiser objectDeserialiser)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20003F1")]
	public class Handle : Holdable
	{
		[Token(Token = "0x4001262")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private Collider[] physicsColliders;

		[Token(Token = "0x1700027A")]
		public bool held
		{
			[Token(Token = "0x6001667")]
			[Address(RVA = "0xF41334", Offset = "0xF41334", VA = "0xF41334")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001668")]
		[Address(RVA = "0xF41344", Offset = "0xF41344", VA = "0xF41344")]
		public void HolderLetGo()
		{
		}

		[Token(Token = "0x6001669")]
		[Address(RVA = "0xF413CC", Offset = "0xF413CC", VA = "0xF413CC")]
		public Vector3 GetClosestPointOnPhysicsColliders(Vector3 position_ws)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600166A")]
		[Address(RVA = "0xF41558", Offset = "0xF41558", VA = "0xF41558")]
		public Handle()
		{
		}
	}
	[Token(Token = "0x20003F2")]
	public class Holdable : MonoBehaviour, IHoldable
	{
		[Serializable]
		[Token(Token = "0x20003F3")]
		public struct AudioEvents
		{
			[Token(Token = "0x400126D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[SerializeField]
			public EventReference _pickupEventReference;

			[Token(Token = "0x400126E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[SerializeField]
			public EventReference _dropEventReference;

			[Token(Token = "0x400126F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[SerializeField]
			public EventReference _placeEventReference;
		}

		[Token(Token = "0x4001263")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected Holder _currentHolder;

		[Token(Token = "0x4001264")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool handsVisibleOnHold;

		[Token(Token = "0x4001265")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private UnityEvent<Holdable, GrabAnchor> _holdEvent;

		[Token(Token = "0x4001266")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private UnityEvent<Holdable, GrabAnchor> _dropEvent;

		[Token(Token = "0x4001267")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		protected float _dropVelocityScale;

		[Token(Token = "0x4001268")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[SerializeField]
		private AudioEvents _audioEvents;

		[Token(Token = "0x1700027B")]
		public IHolder holder
		{
			[Token(Token = "0x600166B")]
			[Address(RVA = "0xF41578", Offset = "0xF41578", VA = "0xF41578", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700027C")]
		public string debugName
		{
			[Token(Token = "0x600166C")]
			[Address(RVA = "0xF41580", Offset = "0xF41580", VA = "0xF41580", Slot = "9")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700027D")]
		public AudioEvents audio
		{
			[Token(Token = "0x600166D")]
			[Address(RVA = "0xF4163C", Offset = "0xF4163C", VA = "0xF4163C")]
			get
			{
				return default(AudioEvents);
			}
		}

		[Token(Token = "0x1700027E")]
		public UnityEvent<Holdable, GrabAnchor> onHeld
		{
			[Token(Token = "0x600166E")]
			[Address(RVA = "0xF41654", Offset = "0xF41654", VA = "0xF41654")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700027F")]
		public UnityEvent<Holdable, GrabAnchor> onDropped
		{
			[Token(Token = "0x600166F")]
			[Address(RVA = "0xF4165C", Offset = "0xF4165C", VA = "0xF4165C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000280")]
		public float dropVelocityScale
		{
			[Token(Token = "0x6001670")]
			[Address(RVA = "0xF41664", Offset = "0xF41664", VA = "0xF41664")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000281")]
		public List<Collider> ItemColliders
		{
			[Token(Token = "0x6001671")]
			[Address(RVA = "0xF4166C", Offset = "0xF4166C", VA = "0xF4166C")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001672")]
			[Address(RVA = "0xF41674", Offset = "0xF41674", VA = "0xF41674")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x17000282")]
		public List<MeshFilter> ItemMeshFilters
		{
			[Token(Token = "0x6001673")]
			[Address(RVA = "0xF4167C", Offset = "0xF4167C", VA = "0xF4167C")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001674")]
			[Address(RVA = "0xF41684", Offset = "0xF41684", VA = "0xF41684")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x17000283")]
		public List<MeshRenderer> ItemMeshRenderers
		{
			[Token(Token = "0x6001675")]
			[Address(RVA = "0xF4168C", Offset = "0xF4168C", VA = "0xF4168C")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001676")]
			[Address(RVA = "0xF41694", Offset = "0xF41694", VA = "0xF41694")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x17000284")]
		public List<Occludee> ItemOccludees
		{
			[Token(Token = "0x6001677")]
			[Address(RVA = "0xF4169C", Offset = "0xF4169C", VA = "0xF4169C")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001678")]
			[Address(RVA = "0xF416A4", Offset = "0xF416A4", VA = "0xF416A4")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x6001679")]
		[Address(RVA = "0xF416AC", Offset = "0xF416AC", VA = "0xF416AC", Slot = "10")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x600167A")]
		[Address(RVA = "0xF418C4", Offset = "0xF418C4", VA = "0xF418C4", Slot = "11")]
		public virtual bool IsHoldable(IHolder holder)
		{
			return default(bool);
		}

		[Token(Token = "0x600167B")]
		[Address(RVA = "0xF418CC", Offset = "0xF418CC", VA = "0xF418CC", Slot = "12")]
		public virtual bool CanDrop()
		{
			return default(bool);
		}

		[Token(Token = "0x600167C")]
		[Address(RVA = "0xF418D4", Offset = "0xF418D4", VA = "0xF418D4", Slot = "13")]
		public virtual void OnHold(IHolder holder, Transform attachPoint, EAttachmentType attachmentType)
		{
		}

		[Token(Token = "0x600167D")]
		[Address(RVA = "0xF41AAC", Offset = "0xF41AAC", VA = "0xF41AAC", Slot = "14")]
		public virtual void OnDrop(IHolder holder, Transform attachPoint)
		{
		}

		[Token(Token = "0x600167E")]
		[Address(RVA = "0xF41C34", Offset = "0xF41C34", VA = "0xF41C34", Slot = "15")]
		public virtual void OnSwappedToAnotherAttachPoint(IHolder holder, Transform oldAttachPoint, Transform newAttachPoint, EAttachmentType attachmentType)
		{
		}

		[Token(Token = "0x600167F")]
		[Address(RVA = "0xF41E14", Offset = "0xF41E14", VA = "0xF41E14")]
		protected void ImpartVelocityFromHolder(Transform holderAttachPoint, Rigidbody targetBody, int smoothing = 1)
		{
		}

		[Token(Token = "0x6001680")]
		[Address(RVA = "0xF41568", Offset = "0xF41568", VA = "0xF41568")]
		public Holdable()
		{
		}
	}
	[Token(Token = "0x20003F4")]
	public class Holder : MonoBehaviour, IHolder
	{
		[Token(Token = "0x20003F5")]
		private static class Keys
		{
			[Token(Token = "0x4001274")]
			public const string HeldItem = "held";

			[Token(Token = "0x4001275")]
			public const string ReservedItem = "reserved";
		}

		[Token(Token = "0x4001270")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		protected Transform[] _attachPoints;

		[Token(Token = "0x4001271")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		protected IHoldable[] _held;

		[Token(Token = "0x4001272")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		protected IHoldable[] _reserved;

		[Token(Token = "0x4001273")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private List<IEnumerator> _cosmeticUpdates;

		[Token(Token = "0x6001681")]
		[Address(RVA = "0xF41FB4", Offset = "0xF41FB4", VA = "0xF41FB4", Slot = "8")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x6001682")]
		[Address(RVA = "0xF42040", Offset = "0xF42040", VA = "0xF42040", Slot = "9")]
		protected virtual void Update()
		{
		}

		[Token(Token = "0x6001683")]
		[Address(RVA = "0xF398D4", Offset = "0xF398D4", VA = "0xF398D4")]
		public void LerpToHold(IEnumerator enumerator)
		{
		}

		[Token(Token = "0x6001684")]
		[Address(RVA = "0xF42170", Offset = "0xF42170", VA = "0xF42170")]
		public bool GetSlotIdForHeld(IHoldable holdable, out int slotId)
		{
			return default(bool);
		}

		[Token(Token = "0x6001685")]
		[Address(RVA = "0xF421C8", Offset = "0xF421C8", VA = "0xF421C8")]
		public IHoldable GetHeld()
		{
			return null;
		}

		[Token(Token = "0x6001686")]
		[Address(RVA = "0xF4220C", Offset = "0xF4220C", VA = "0xF4220C", Slot = "10")]
		public virtual bool GetFirstSlotAvailableToHold(IHoldable holdable, out int slot)
		{
			return default(bool);
		}

		[Token(Token = "0x6001687")]
		[Address(RVA = "0xF42290", Offset = "0xF42290", VA = "0xF42290")]
		public void Hold(IHoldable holdable, EAttachmentType attachmentType)
		{
		}

		[Token(Token = "0x6001688")]
		[Address(RVA = "0xF38B54", Offset = "0xF38B54", VA = "0xF38B54")]
		public bool Drop(IHoldable holdable)
		{
			return default(bool);
		}

		[Token(Token = "0x6001689")]
		[Address(RVA = "0xF42324", Offset = "0xF42324", VA = "0xF42324", Slot = "11")]
		public virtual bool HasReservedSlotFor(IHoldable holdable)
		{
			return default(bool);
		}

		[Token(Token = "0x600168A")]
		[Address(RVA = "0xF42374", Offset = "0xF42374", VA = "0xF42374", Slot = "12")]
		public virtual bool IsHolding(IHoldable holdable)
		{
			return default(bool);
		}

		[Token(Token = "0x600168B")]
		[Address(RVA = "0xF39BEC", Offset = "0xF39BEC", VA = "0xF39BEC", Slot = "4")]
		public IHoldable GetHeld(int slot)
		{
			return null;
		}

		[Token(Token = "0x600168C")]
		[Address(RVA = "0xF3932C", Offset = "0xF3932C", VA = "0xF3932C")]
		public int FindBestSlotForHierarchyObject(GameObject obj)
		{
			return default(int);
		}

		[Token(Token = "0x600168D")]
		[Address(RVA = "0xF423C4", Offset = "0xF423C4", VA = "0xF423C4", Slot = "13")]
		public virtual bool CanHold(IHoldable holdable, int slot)
		{
			return default(bool);
		}

		[Token(Token = "0x600168E")]
		[Address(RVA = "0xF39458", Offset = "0xF39458", VA = "0xF39458")]
		public void Hold(IHoldable holdable, int slot, EAttachmentType attachmentType)
		{
		}

		[Token(Token = "0x600168F")]
		[Address(RVA = "0xF42434", Offset = "0xF42434", VA = "0xF42434", Slot = "14")]
		protected virtual void HoldNew(IHoldable holdable, int slot, EAttachmentType attachmentType)
		{
		}

		[Token(Token = "0x6001690")]
		[Address(RVA = "0xF4258C", Offset = "0xF4258C", VA = "0xF4258C", Slot = "15")]
		protected virtual void HoldSwapped(IHoldable holdable, int oldSlot, int newSlot, EAttachmentType attachmentType)
		{
		}

		[Token(Token = "0x6001691")]
		[Address(RVA = "0xF4272C", Offset = "0xF4272C", VA = "0xF4272C", Slot = "16")]
		public virtual void FinalizeSlotSwap(int slotOne, int slotTwo)
		{
		}

		[Token(Token = "0x6001692")]
		[Address(RVA = "0xF42A0C", Offset = "0xF42A0C", VA = "0xF42A0C")]
		public void InitiateSlotSwap(int slotOne, int slotTwo)
		{
		}

		[Token(Token = "0x6001693")]
		[Address(RVA = "0xF42B4C", Offset = "0xF42B4C", VA = "0xF42B4C", Slot = "17")]
		public virtual bool Drop(int slot, out IHoldable dropped)
		{
			return default(bool);
		}

		[Token(Token = "0x6001694")]
		[Address(RVA = "0xF42C98", Offset = "0xF42C98", VA = "0xF42C98", Slot = "18")]
		public virtual void Reserve(IHoldable holdable, int slot)
		{
		}

		[Token(Token = "0x6001695")]
		[Address(RVA = "0xF42D24", Offset = "0xF42D24", VA = "0xF42D24", Slot = "19")]
		public virtual void RemoveReservation(IHoldable holdable, int slot)
		{
		}

		[Token(Token = "0x6001696")]
		[Address(RVA = "0xF42D6C", Offset = "0xF42D6C", VA = "0xF42D6C", Slot = "6")]
		public Transform GetAttachPointForSlot(int slot)
		{
			return null;
		}

		[Token(Token = "0x6001697")]
		[Address(RVA = "0xF42D9C", Offset = "0xF42D9C", VA = "0xF42D9C", Slot = "5")]
		public int GetNumberOfSlots()
		{
			return default(int);
		}

		[Token(Token = "0x6001698")]
		[Address(RVA = "0xF42DB8", Offset = "0xF42DB8", VA = "0xF42DB8")]
		private bool SerialiseHoldable(IHoldable holdable, string key, FlexBufferBuilder builder, ISceneObjectReferenceSerialiser objectSerialiser)
		{
			return default(bool);
		}

		[Token(Token = "0x6001699")]
		[Address(RVA = "0xF42F2C", Offset = "0xF42F2C", VA = "0xF42F2C")]
		private bool DeserialiseHoldable(string key, FlexBuffer.Map root, ISceneObjectReferenceDeserialiser objectDeserialiser, out IHoldable holdable)
		{
			return default(bool);
		}

		[Token(Token = "0x600169A")]
		[Address(RVA = "0xF430D8", Offset = "0xF430D8", VA = "0xF430D8")]
		public bool SerialiseSlot(string key, int slot, FlexBufferBuilder builder, ISceneObjectReferenceSerialiser objectSerialiser)
		{
			return default(bool);
		}

		[Token(Token = "0x600169B")]
		[Address(RVA = "0xF431F0", Offset = "0xF431F0", VA = "0xF431F0")]
		public bool DeserialiseSlot(string key, FlexBuffer.Map root, ISceneObjectReferenceDeserialiser objectDeserialiser, out IHoldable held, out IHoldable reserved)
		{
			return default(bool);
		}

		[Token(Token = "0x600169C")]
		[Address(RVA = "0xF43338", Offset = "0xF43338", VA = "0xF43338")]
		public bool DeserialiseSlot(int index, FlexBuffer.Vector root, ISceneObjectReferenceDeserialiser objectDeserialiser, out IHoldable held, out IHoldable reserved)
		{
			return default(bool);
		}

		[Token(Token = "0x600169D")]
		[Address(RVA = "0xF43480", Offset = "0xF43480", VA = "0xF43480")]
		public Holder()
		{
		}
	}
	[Token(Token = "0x20003F6")]
	public class PhysicsHoldable : Holdable, IPhysicsHoldable, IInitialisable, ISceneReferrable, ISerialisable, IDeserialisable
	{
		[Token(Token = "0x20003F7")]
		private struct RigidbodySettings
		{
			[Token(Token = "0x4001283")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public float mass;

			[Token(Token = "0x4001284")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public float drag;

			[Token(Token = "0x4001285")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public float angularDrag;

			[Token(Token = "0x4001286")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public bool gravity;

			[Token(Token = "0x4001287")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public RigidbodyInterpolation interpolation;

			[Token(Token = "0x4001288")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public CollisionDetectionMode collisionMode;

			[Token(Token = "0x4001289")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public RigidbodyConstraints constraints;

			[Token(Token = "0x400128A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public bool freezeRotation;

			[Token(Token = "0x400128B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float sleepThreshold;

			[Token(Token = "0x400128C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public float maxAngularVelocity;

			[Token(Token = "0x400128D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float maxDepenetrationVelocity;

			[Token(Token = "0x400128E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public int solverIterations;

			[Token(Token = "0x400128F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public int solverVelocityIterations;

			[Token(Token = "0x4001290")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			public Vector3 centerOfMass;

			[Token(Token = "0x4001291")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public Vector3 inertiaTensor;

			[Token(Token = "0x4001292")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
			public Quaternion inertiaTensorRotation;
		}

		[Token(Token = "0x20003F8")]
		private static class Keys
		{
			[Token(Token = "0x4001293")]
			public const string Transform = "transform";

			[Token(Token = "0x4001294")]
			public const string Rigidbody = "rigidbody";

			[Token(Token = "0x4001295")]
			public const string HasRigidbody = "hasRigidbody";

			[Token(Token = "0x4001296")]
			public const string IsHeld = "held";
		}

		[Token(Token = "0x4001276")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private PhysicalProperties physicalProperties;

		[Token(Token = "0x4001277")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public string[] onHeldStoryEvents;

		[Token(Token = "0x4001278")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public Vector3[] holdingOrientations;

		[Token(Token = "0x4001279")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public Vector3[] placingOrientations;

		[Token(Token = "0x400127A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public Vector3 inspectOffset;

		[Token(Token = "0x400127B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		private bool _wasKinematic;

		[Token(Token = "0x400127C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private List<object> _kinematicRequests;

		[Token(Token = "0x400127D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		protected int _holdFrameCount;

		[Token(Token = "0x400127F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private Transform _transform;

		[Token(Token = "0x4001280")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private Rigidbody _rigidbody;

		[Token(Token = "0x4001281")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private RigidbodySettings _serialisedRigidbodySettings;

		[Token(Token = "0x4001282")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
		private bool _hasRigidbodySettings;

		[Token(Token = "0x17000285")]
		public PhysicsHoldableDock DockedInDock
		{
			[Token(Token = "0x600169E")]
			[Address(RVA = "0xF4350C", Offset = "0xF4350C", VA = "0xF4350C")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x600169F")]
			[Address(RVA = "0xF43514", Offset = "0xF43514", VA = "0xF43514")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x17000286")]
		public Rigidbody RigidBody
		{
			[Token(Token = "0x60016A0")]
			[Address(RVA = "0xF4351C", Offset = "0xF4351C", VA = "0xF4351C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000287")]
		public string typeId
		{
			[Token(Token = "0x60016AB")]
			[Address(RVA = "0xF44364", Offset = "0xF44364", VA = "0xF44364", Slot = "19")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60016A1")]
		[Address(RVA = "0xF43524", Offset = "0xF43524", VA = "0xF43524", Slot = "10")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x60016A2")]
		[Address(RVA = "0xF43720", Offset = "0xF43720", VA = "0xF43720", Slot = "16")]
		public bool Initialise()
		{
			return default(bool);
		}

		[Token(Token = "0x60016A3")]
		[Address(RVA = "0xF438B0", Offset = "0xF438B0", VA = "0xF438B0")]
		public void PushKinematicRequest(object sourceKey)
		{
		}

		[Token(Token = "0x60016A4")]
		[Address(RVA = "0xF439E8", Offset = "0xF439E8", VA = "0xF439E8")]
		public void PopKinematicRequest(object sourceKey)
		{
		}

		[Token(Token = "0x60016A5")]
		[Address(RVA = "0xF43AB8", Offset = "0xF43AB8", VA = "0xF43AB8")]
		public void SetDockedInDock(PhysicsHoldableDock dock)
		{
		}

		[Token(Token = "0x60016A6")]
		[Address(RVA = "0xF43AC0", Offset = "0xF43AC0", VA = "0xF43AC0", Slot = "13")]
		public override void OnHold(IHolder holder, Transform attachPoint, EAttachmentType attachmentType)
		{
		}

		[Token(Token = "0x60016A7")]
		[Address(RVA = "0xF43E34", Offset = "0xF43E34", VA = "0xF43E34")]
		private void SetParentToAttachPoint(Transform attachPoint, EAttachmentType attachmentType)
		{
		}

		[Token(Token = "0x60016A8")]
		[Address(RVA = "0xF43FEC", Offset = "0xF43FEC", VA = "0xF43FEC", Slot = "12")]
		public override bool CanDrop()
		{
			return default(bool);
		}

		[Token(Token = "0x60016A9")]
		[Address(RVA = "0xF4400C", Offset = "0xF4400C", VA = "0xF4400C", Slot = "14")]
		public override void OnDrop(IHolder holder, Transform attachPoint)
		{
		}

		[Token(Token = "0x60016AA")]
		[Address(RVA = "0xF44334", Offset = "0xF44334", VA = "0xF44334", Slot = "15")]
		public override void OnSwappedToAnotherAttachPoint(IHolder holder, Transform oldAttachPoint, Transform newAttachPoint, EAttachmentType attachmentType)
		{
		}

		[Token(Token = "0x60016AC")]
		[Address(RVA = "0xF443A4", Offset = "0xF443A4", VA = "0xF443A4", Slot = "18")]
		public bool Serialise(FlexBufferBuilder builder, ISceneObjectReferenceSerialiser objectSerialiser)
		{
			return default(bool);
		}

		[Token(Token = "0x60016AD")]
		[Address(RVA = "0xF444E0", Offset = "0xF444E0", VA = "0xF444E0", Slot = "20")]
		public bool Deserialise(FlexBuffer.Map root, ISceneObjectReferenceDeserialiser objectDeserialiser)
		{
			return default(bool);
		}

		[Token(Token = "0x60016AE")]
		[Address(RVA = "0xF4474C", Offset = "0xF4474C", VA = "0xF4474C")]
		public PhysicsHoldable()
		{
		}
	}
	[Token(Token = "0x20003F9")]
	[RequireComponent(typeof(PhysicsHoldableDock))]
	public class PhysicsHoldableAutoDock : MonoBehaviour
	{
		[Token(Token = "0x4001297")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private PhysicsHoldableDock _dock;

		[Token(Token = "0x60016AF")]
		[Address(RVA = "0xF45968", Offset = "0xF45968", VA = "0xF45968")]
		private void Awake()
		{
		}

		[Token(Token = "0x60016B0")]
		[Address(RVA = "0xF459C0", Offset = "0xF459C0", VA = "0xF459C0", Slot = "4")]
		protected virtual void OnTriggerStay(Collider other)
		{
		}

		[Token(Token = "0x60016B1")]
		[Address(RVA = "0xF45D1C", Offset = "0xF45D1C", VA = "0xF45D1C")]
		public PhysicsHoldableAutoDock()
		{
		}
	}
	[Token(Token = "0x20003FA")]
	[RequireComponent(typeof(Holder))]
	public class PhysicsHoldableDock : DockBase, ISceneReferrable, ISerialisable, IDeserialisable
	{
		[Token(Token = "0x20003FB")]
		private static class Keys
		{
			[Token(Token = "0x40012A6")]
			public const string Transform = "transform";

			[Token(Token = "0x40012A7")]
			public const string SavedDockPosition = "savedPos";

			[Token(Token = "0x40012A8")]
			public const string DockedItem = "slot";

			[Token(Token = "0x40012A9")]
			public const string Locked = "locked";
		}

		[Token(Token = "0x4001298")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private bool _locked;

		[Token(Token = "0x4001299")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		[SerializeField]
		private bool restrictSizeOfContents;

		[Token(Token = "0x400129A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x22")]
		[SerializeField]
		private bool playObjectsAudioOnDock;

		[Token(Token = "0x400129B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x23")]
		[SerializeField]
		private bool saveDockPosition;

		[Token(Token = "0x400129C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private List<CallbackBool<PhysicsHoldableDock, PhysicsHoldable>> _canDockCallbackList;

		[Token(Token = "0x400129D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private List<CallbackBool<PhysicsHoldableDock, PhysicsHoldable>> _canUndockCallbackList;

		[Token(Token = "0x400129E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private List<CallbackVoid<PhysicsHoldableDock, PhysicsHoldable>> _preDockCallbackList;

		[Token(Token = "0x400129F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private List<CallbackVoid<PhysicsHoldableDock, PhysicsHoldable>> _postDockCallbackList;

		[Token(Token = "0x40012A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private List<CallbackVoid<PhysicsHoldableDock, PhysicsHoldable>> _postUndockCallbackList;

		[Token(Token = "0x40012A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private List<CallbackVoid<PhysicsHoldableDock, PhysicsHoldable, InteractorBase>> _placeHighlightCallbackList;

		[Token(Token = "0x40012A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private List<PhysicsHoldable> _waitingToBeDocked;

		[Token(Token = "0x40012A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private int _slot;

		[Token(Token = "0x40012A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Collider m_trigger;

		[Token(Token = "0x17000288")]
		public bool PlayObjectsAudioOnDock
		{
			[Token(Token = "0x60016B2")]
			[Address(RVA = "0xF45D24", Offset = "0xF45D24", VA = "0xF45D24")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000289")]
		public Holder Holder
		{
			[Token(Token = "0x60016B3")]
			[Address(RVA = "0xF45D2C", Offset = "0xF45D2C", VA = "0xF45D2C")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x60016B4")]
			[Address(RVA = "0xF45D34", Offset = "0xF45D34", VA = "0xF45D34")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x1700028A")]
		public bool locked
		{
			[Token(Token = "0x60016C2")]
			[Address(RVA = "0xF46584", Offset = "0xF46584", VA = "0xF46584")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60016C3")]
			[Address(RVA = "0xF4658C", Offset = "0xF4658C", VA = "0xF4658C")]
			set
			{
			}
		}

		[Token(Token = "0x1700028B")]
		public string typeId
		{
			[Token(Token = "0x60016D5")]
			[Address(RVA = "0xF47038", Offset = "0xF47038", VA = "0xF47038", Slot = "8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60016B5")]
		[Address(RVA = "0xF45D3C", Offset = "0xF45D3C", VA = "0xF45D3C")]
		public PhysicsHoldableDock()
		{
		}

		[Token(Token = "0x60016B6")]
		[Address(RVA = "0xF45F54", Offset = "0xF45F54", VA = "0xF45F54")]
		public void RegisterCanDockCallback(CallbackBool<PhysicsHoldableDock, PhysicsHoldable> callback)
		{
		}

		[Token(Token = "0x60016B7")]
		[Address(RVA = "0xF46004", Offset = "0xF46004", VA = "0xF46004")]
		public void UnregisterCanDockCallback(CallbackBool<PhysicsHoldableDock, PhysicsHoldable> callback)
		{
		}

		[Token(Token = "0x60016B8")]
		[Address(RVA = "0xF4605C", Offset = "0xF4605C", VA = "0xF4605C")]
		public void RegisterPreDockCallback(CallbackVoid<PhysicsHoldableDock, PhysicsHoldable> callback)
		{
		}

		[Token(Token = "0x60016B9")]
		[Address(RVA = "0xF4610C", Offset = "0xF4610C", VA = "0xF4610C")]
		public void UnregisterPreDockCallback(CallbackVoid<PhysicsHoldableDock, PhysicsHoldable> callback)
		{
		}

		[Token(Token = "0x60016BA")]
		[Address(RVA = "0xF46164", Offset = "0xF46164", VA = "0xF46164")]
		public void RegisterPostDockCallback(CallbackVoid<PhysicsHoldableDock, PhysicsHoldable> callback)
		{
		}

		[Token(Token = "0x60016BB")]
		[Address(RVA = "0xF46214", Offset = "0xF46214", VA = "0xF46214")]
		public void UnregisterPostDockCallback(CallbackVoid<PhysicsHoldableDock, PhysicsHoldable> callback)
		{
		}

		[Token(Token = "0x60016BC")]
		[Address(RVA = "0xF4626C", Offset = "0xF4626C", VA = "0xF4626C")]
		public void RegisterCanUndockCallback(CallbackBool<PhysicsHoldableDock, PhysicsHoldable> callback)
		{
		}

		[Token(Token = "0x60016BD")]
		[Address(RVA = "0xF4631C", Offset = "0xF4631C", VA = "0xF4631C")]
		public void UnregisterCanUndockCallback(CallbackBool<PhysicsHoldableDock, PhysicsHoldable> callback)
		{
		}

		[Token(Token = "0x60016BE")]
		[Address(RVA = "0xF46374", Offset = "0xF46374", VA = "0xF46374")]
		public void RegisterPostUndockCallback(CallbackVoid<PhysicsHoldableDock, PhysicsHoldable> callback)
		{
		}

		[Token(Token = "0x60016BF")]
		[Address(RVA = "0xF46424", Offset = "0xF46424", VA = "0xF46424")]
		public void UnregisterPostUndockCallback(CallbackVoid<PhysicsHoldableDock, PhysicsHoldable> callback)
		{
		}

		[Token(Token = "0x60016C0")]
		[Address(RVA = "0xF4647C", Offset = "0xF4647C", VA = "0xF4647C")]
		public void RegisterPlaceHighlightedCallback(CallbackVoid<PhysicsHoldableDock, PhysicsHoldable, InteractorBase> callback)
		{
		}

		[Token(Token = "0x60016C1")]
		[Address(RVA = "0xF4652C", Offset = "0xF4652C", VA = "0xF4652C")]
		public void UnregisterPlaceHighlightedCallback(CallbackVoid<PhysicsHoldableDock, PhysicsHoldable, InteractorBase> callback)
		{
		}

		[Token(Token = "0x60016C4")]
		[Address(RVA = "0xF46598", Offset = "0xF46598", VA = "0xF46598", Slot = "5")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x60016C5")]
		[Address(RVA = "0xF46764", Offset = "0xF46764", VA = "0xF46764", Slot = "10")]
		protected virtual void Update()
		{
		}

		[Token(Token = "0x60016C6")]
		[Address(RVA = "0xF468FC", Offset = "0xF468FC", VA = "0xF468FC")]
		private bool ObjectSizeCheck(PhysicsHoldable holdable)
		{
			return default(bool);
		}

		[Token(Token = "0x60016C7")]
		[Address(RVA = "0xF46BD4", Offset = "0xF46BD4", VA = "0xF46BD4")]
		private bool HoldingCheck(PhysicsHoldable holdable)
		{
			return default(bool);
		}

		[Token(Token = "0x60016C8")]
		[Address(RVA = "0xF45BF8", Offset = "0xF45BF8", VA = "0xF45BF8")]
		public bool CanDock(PhysicsHoldable holdable)
		{
			return default(bool);
		}

		[Token(Token = "0x60016C9")]
		[Address(RVA = "0xF46C3C", Offset = "0xF46C3C", VA = "0xF46C3C")]
		public bool CanUndock()
		{
			return default(bool);
		}

		[Token(Token = "0x60016CA")]
		[Address(RVA = "0xF45C94", Offset = "0xF45C94", VA = "0xF45C94")]
		public void Dock(PhysicsHoldable holdable)
		{
		}

		[Token(Token = "0x60016CB")]
		[Address(RVA = "0xF46890", Offset = "0xF46890", VA = "0xF46890")]
		private void OnDocked(PhysicsHoldable holdable)
		{
		}

		[Token(Token = "0x60016CC")]
		[Address(RVA = "0xF46D10", Offset = "0xF46D10", VA = "0xF46D10")]
		public void LerpToDock(PhysicsHoldable holdable)
		{
		}

		[Token(Token = "0x60016CD")]
		[Address(RVA = "0xF46E48", Offset = "0xF46E48", VA = "0xF46E48")]
		public PhysicsHoldable Undock()
		{
			return null;
		}

		[Token(Token = "0x60016CE")]
		[Address(RVA = "0xF46F74", Offset = "0xF46F74", VA = "0xF46F74", Slot = "4")]
		public override IHoldable GetDocked()
		{
			return null;
		}

		[Token(Token = "0x60016CF")]
		[Address(RVA = "0xF46F98", Offset = "0xF46F98", VA = "0xF46F98")]
		public void Eject()
		{
		}

		[Token(Token = "0x60016D0")]
		[Address(RVA = "0xF46F9C", Offset = "0xF46F9C", VA = "0xF46F9C")]
		public void Lock()
		{
		}

		[Token(Token = "0x60016D1")]
		[Address(RVA = "0xF46FA8", Offset = "0xF46FA8", VA = "0xF46FA8")]
		public void Unlock()
		{
		}

		[Token(Token = "0x60016D2")]
		[Address(RVA = "0xF46FB0", Offset = "0xF46FB0", VA = "0xF46FB0")]
		public void OnPlaceHighlighted(InteractorBase interactor, PhysicsHoldable holdable)
		{
		}

		[Token(Token = "0x60016D3")]
		[Address(RVA = "0xF47014", Offset = "0xF47014", VA = "0xF47014")]
		public Transform GetTransformToDockIn()
		{
			return null;
		}

		[Token(Token = "0x60016D4")]
		[Address(RVA = "0xF4693C", Offset = "0xF4693C", VA = "0xF4693C")]
		private bool WillObjectFit(GameObject obj)
		{
			return default(bool);
		}

		[Token(Token = "0x60016D6")]
		[Address(RVA = "0xF47078", Offset = "0xF47078", VA = "0xF47078", Slot = "11")]
		public virtual bool Serialise(FlexBufferBuilder builder, ISceneObjectReferenceSerialiser objectSerialiser)
		{
			return default(bool);
		}

		[Token(Token = "0x60016D7")]
		[Address(RVA = "0xF47184", Offset = "0xF47184", VA = "0xF47184", Slot = "9")]
		public bool Deserialise(FlexBuffer.Map root, ISceneObjectReferenceDeserialiser objectDeserialiser)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20003FC")]
	public class RadioButton : ToggleButton, IUsable
	{
		[Token(Token = "0x40012AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private List<RadioButton> _otherButtons;

		[Token(Token = "0x60016D8")]
		[Address(RVA = "0xF47564", Offset = "0xF47564", VA = "0xF47564")]
		public RadioButton()
		{
		}

		[Token(Token = "0x60016D9")]
		[Address(RVA = "0xF475F8", Offset = "0xF475F8", VA = "0xF475F8", Slot = "12")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x60016DA")]
		[Address(RVA = "0xF4768C", Offset = "0xF4768C", VA = "0xF4768C", Slot = "5")]
		public override void Activate()
		{
		}

		[Token(Token = "0x60016DB")]
		[Address(RVA = "0xF47764", Offset = "0xF47764", VA = "0xF47764", Slot = "4")]
		private void Interactables.IUsable.Use()
		{
		}
	}
	[Token(Token = "0x20003FD")]
	public class ToggleButton : Button, IUsable, ISceneReferrable, ISerialisable, IDeserialisable
	{
		[Token(Token = "0x20003FE")]
		private static class Keys
		{
			[Token(Token = "0x40012AD")]
			public const string IsActivated = "activated";
		}

		[Token(Token = "0x40012AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private UnityEvent _deactivateEvent;

		[Token(Token = "0x40012AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		protected bool _active;

		[Token(Token = "0x1700028C")]
		public UnityEvent onDeactivated
		{
			[Token(Token = "0x60016DC")]
			[Address(RVA = "0xF4782C", Offset = "0xF4782C", VA = "0xF4782C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700028D")]
		public bool active
		{
			[Token(Token = "0x60016DD")]
			[Address(RVA = "0xF47834", Offset = "0xF47834", VA = "0xF47834")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700028E")]
		public string typeId
		{
			[Token(Token = "0x60016E2")]
			[Address(RVA = "0xF478B8", Offset = "0xF478B8", VA = "0xF478B8", Slot = "8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60016DE")]
		[Address(RVA = "0xF47748", Offset = "0xF47748", VA = "0xF47748", Slot = "5")]
		public override void Activate()
		{
		}

		[Token(Token = "0x60016DF")]
		[Address(RVA = "0xF4783C", Offset = "0xF4783C", VA = "0xF4783C", Slot = "10")]
		public virtual void Deactivate()
		{
		}

		[Token(Token = "0x60016E0")]
		[Address(RVA = "0xF47860", Offset = "0xF47860", VA = "0xF47860", Slot = "11")]
		public virtual void Toggle()
		{
		}

		[Token(Token = "0x60016E1")]
		[Address(RVA = "0xF4787C", Offset = "0xF4787C", VA = "0xF4787C", Slot = "4")]
		private void Interactables.IUsable.Use()
		{
		}

		[Token(Token = "0x60016E3")]
		[Address(RVA = "0xF478F8", Offset = "0xF478F8", VA = "0xF478F8", Slot = "7")]
		public bool Serialise(FlexBufferBuilder builder, ISceneObjectReferenceSerialiser objectSerialiser)
		{
			return default(bool);
		}

		[Token(Token = "0x60016E4")]
		[Address(RVA = "0xF4795C", Offset = "0xF4795C", VA = "0xF4795C", Slot = "9")]
		public bool Deserialise(FlexBuffer.Map root, ISceneObjectReferenceDeserialiser objectDeserialiser)
		{
			return default(bool);
		}

		[Token(Token = "0x60016E5")]
		[Address(RVA = "0xF475F0", Offset = "0xF475F0", VA = "0xF475F0")]
		public ToggleButton()
		{
		}
	}
	[Token(Token = "0x20003FF")]
	public class Cassette : MonoBehaviour
	{
		[Token(Token = "0x40012AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private string _id;

		[Token(Token = "0x40012AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private EventReference _fmodEventReference;

		[Token(Token = "0x40012B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private DialogueAsset _subtitleDialogueAsset;

		[Token(Token = "0x1700028F")]
		public EventReference content
		{
			[Token(Token = "0x60016E6")]
			[Address(RVA = "0xF47A04", Offset = "0xF47A04", VA = "0xF47A04")]
			get
			{
				return default(EventReference);
			}
		}

		[Token(Token = "0x17000290")]
		public DialogueAsset subtitles
		{
			[Token(Token = "0x60016E7")]
			[Address(RVA = "0xF47A10", Offset = "0xF47A10", VA = "0xF47A10")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000291")]
		public string id
		{
			[Token(Token = "0x60016E8")]
			[Address(RVA = "0xF47A18", Offset = "0xF47A18", VA = "0xF47A18")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60016E9")]
		[Address(RVA = "0xF47A20", Offset = "0xF47A20", VA = "0xF47A20")]
		public Cassette()
		{
		}
	}
	[Token(Token = "0x2000400")]
	public class CassetteHolder : MonoBehaviour
	{
		[Token(Token = "0x40012B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private PhysicsHoldableDock _cassetteDock;

		[Token(Token = "0x60016EA")]
		[Address(RVA = "0xF47A28", Offset = "0xF47A28", VA = "0xF47A28")]
		private void Awake()
		{
		}

		[Token(Token = "0x60016EB")]
		[Address(RVA = "0xF47B34", Offset = "0xF47B34", VA = "0xF47B34")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60016EC")]
		[Address(RVA = "0xF47C58", Offset = "0xF47C58", VA = "0xF47C58")]
		private bool OnCanDockCassetteCallback(PhysicsHoldableDock dock, PhysicsHoldable dockable)
		{
			return default(bool);
		}

		[Token(Token = "0x60016ED")]
		[Address(RVA = "0xF47C60", Offset = "0xF47C60", VA = "0xF47C60")]
		private bool OnCanUndockCassetteCallback(PhysicsHoldableDock dock, PhysicsHoldable dockable)
		{
			return default(bool);
		}

		[Token(Token = "0x60016EE")]
		[Address(RVA = "0xF47C68", Offset = "0xF47C68", VA = "0xF47C68")]
		public CassetteHolder()
		{
		}
	}
	[Token(Token = "0x2000401")]
	public class CassettePlayer : UpdatableMonoBehaviour, ISceneReferrable, ISerialisable, IDeserialisable, IPostDeserialiseNotified, IInsertableRestorer, IElectricityPowered
	{
		[Token(Token = "0x2000402")]
		private struct ResumeData
		{
			[Token(Token = "0x40012C0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public bool wasPlaying;

			[Token(Token = "0x40012C1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
			public bool wasPaused;

			[Token(Token = "0x40012C2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2")]
			public bool wasEjected;
		}

		[Token(Token = "0x2000403")]
		private static class Keys
		{
			[Token(Token = "0x40012C3")]
			public const string IsPlaying = "playing";

			[Token(Token = "0x40012C4")]
			public const string IsPaused = "paused";

			[Token(Token = "0x40012C5")]
			public const string IsEjected = "ejected";

			[Token(Token = "0x40012C6")]
			public const string WasStopped = "stopped_by_player";
		}

		[Token(Token = "0x40012B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private UnityEvent _endOfCassetteEvent;

		[Token(Token = "0x40012B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private AchievementContainer _allAdsPlayedAchievement;

		[Token(Token = "0x40012B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private float maxCassetteDockDistance;

		[Token(Token = "0x40012B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private ToggleButton playButton;

		[Token(Token = "0x40012B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float sqrMaxCassetteDockDistance;

		[Token(Token = "0x40012B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private ResumeData _resumeData;

		[Token(Token = "0x40012B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x47")]
		private bool _hasResumeData;

		[Token(Token = "0x40012B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private DialoguePlayback _dialoguePlayer;

		[Token(Token = "0x40012BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private PhysicsHoldableDock _cassetteDock;

		[Token(Token = "0x40012BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Collider _cassetteDockCollider;

		[Token(Token = "0x40012BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Cassette _cassette;

		[Token(Token = "0x40012BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private bool _tapeStopedManually;

		[Token(Token = "0x40012BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x69")]
		private bool _tapeStarted;

		[Token(Token = "0x40012BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private PowerSupplyEntryPoint _powerSupply;

		[Token(Token = "0x17000292")]
		public string typeId
		{
			[Token(Token = "0x60016FC")]
			[Address(RVA = "0xF495C4", Offset = "0xF495C4", VA = "0xF495C4", Slot = "13")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60016EF")]
		[Address(RVA = "0xF47C70", Offset = "0xF47C70", VA = "0xF47C70")]
		private void Awake()
		{
		}

		[Token(Token = "0x60016F0")]
		[Address(RVA = "0xF47EE4", Offset = "0xF47EE4", VA = "0xF47EE4", Slot = "6")]
		public override bool Initialise()
		{
			return default(bool);
		}

		[Token(Token = "0x60016F1")]
		[Address(RVA = "0xF4800C", Offset = "0xF4800C", VA = "0xF4800C", Slot = "7")]
		public override void OnUpdate(float dt)
		{
		}

		[Token(Token = "0x60016F2")]
		[Address(RVA = "0xF482C0", Offset = "0xF482C0", VA = "0xF482C0", Slot = "10")]
		protected override void OnDestroy()
		{
		}

		[Token(Token = "0x60016F3")]
		[Address(RVA = "0xF48618", Offset = "0xF48618", VA = "0xF48618")]
		public void Play()
		{
		}

		[Token(Token = "0x60016F4")]
		[Address(RVA = "0xF48D4C", Offset = "0xF48D4C", VA = "0xF48D4C")]
		public void Stop()
		{
		}

		[Token(Token = "0x60016F5")]
		[Address(RVA = "0xF48FE8", Offset = "0xF48FE8", VA = "0xF48FE8")]
		public void Eject()
		{
		}

		[Token(Token = "0x60016F6")]
		[Address(RVA = "0xF491A8", Offset = "0xF491A8", VA = "0xF491A8")]
		public bool IsPlaying()
		{
			return default(bool);
		}

		[Token(Token = "0x60016F7")]
		[Address(RVA = "0xF491CC", Offset = "0xF491CC", VA = "0xF491CC")]
		private bool OnCanDockCassetteCallback(PhysicsHoldableDock dock, PhysicsHoldable dockable)
		{
			return default(bool);
		}

		[Token(Token = "0x60016F8")]
		[Address(RVA = "0xF492E0", Offset = "0xF492E0", VA = "0xF492E0")]
		private bool OnCanUndockCassetteCallback(PhysicsHoldableDock dock, PhysicsHoldable dockable)
		{
			return default(bool);
		}

		[Token(Token = "0x60016F9")]
		[Address(RVA = "0xF492E8", Offset = "0xF492E8", VA = "0xF492E8")]
		private void OnCassetteDockedCallback(PhysicsHoldableDock dock, PhysicsHoldable docked)
		{
		}

		[Token(Token = "0x60016FA")]
		[Address(RVA = "0xF49374", Offset = "0xF49374", VA = "0xF49374")]
		private void OnCassetteUndockedCallback(PhysicsHoldableDock dock, PhysicsHoldable docked)
		{
		}

		[Token(Token = "0x60016FB")]
		[Address(RVA = "0xF49380", Offset = "0xF49380", VA = "0xF49380")]
		private void ResumeCassette()
		{
		}

		[Token(Token = "0x60016FD")]
		[Address(RVA = "0xF49604", Offset = "0xF49604", VA = "0xF49604", Slot = "12")]
		public bool Serialise(FlexBufferBuilder builder, ISceneObjectReferenceSerialiser objectSerialiser)
		{
			return default(bool);
		}

		[Token(Token = "0x60016FE")]
		[Address(RVA = "0xF49710", Offset = "0xF49710", VA = "0xF49710", Slot = "14")]
		public bool Deserialise(FlexBuffer.Map root, ISceneObjectReferenceDeserialiser objectDeserialiser)
		{
			return default(bool);
		}

		[Token(Token = "0x60016FF")]
		[Address(RVA = "0xF498F0", Offset = "0xF498F0", VA = "0xF498F0", Slot = "15")]
		public void OnPostDeserialise()
		{
		}

		[Token(Token = "0x6001700")]
		[Address(RVA = "0xF498F4", Offset = "0xF498F4", VA = "0xF498F4", Slot = "16")]
		public void ReleaseInsertedObjectForRestoration()
		{
		}

		[Token(Token = "0x6001701")]
		[Address(RVA = "0xF4997C", Offset = "0xF4997C", VA = "0xF4997C", Slot = "17")]
		public void OnPowerStateChanged(bool newState)
		{
		}

		[Token(Token = "0x6001702")]
		[Address(RVA = "0xF499AC", Offset = "0xF499AC", VA = "0xF499AC")]
		public CassettePlayer()
		{
		}
	}
	[Token(Token = "0x2000404")]
	public class DialoguePlayback : UpdatableMonoBehaviour, ISubtitleSource, ISceneReferrable, ISerialisable, IDeserialisable
	{
		[Token(Token = "0x2000405")]
		private struct ResumeData
		{
			[Token(Token = "0x40012D3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public IAudioManager.ResumeData audio;

			[Token(Token = "0x40012D4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public string groupId;

			[Token(Token = "0x40012D5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public string lineId;
		}

		[Token(Token = "0x2000406")]
		public enum State : byte
		{
			[Token(Token = "0x40012D7")]
			Stopped,
			[Token(Token = "0x40012D8")]
			Playing,
			[Token(Token = "0x40012D9")]
			Paused
		}

		[StructLayout(0)]
		[Token(Token = "0x2000407")]
		private class MarkerData
		{
			[Token(Token = "0x40012DA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int count;

			[Token(Token = "0x6001717")]
			[Address(RVA = "0xF49E20", Offset = "0xF49E20", VA = "0xF49E20")]
			public MarkerData()
			{
			}
		}

		[Token(Token = "0x2000408")]
		private static class Keys
		{
			[Token(Token = "0x40012DB")]
			public const string AudioEvent = "audio";

			[Token(Token = "0x40012DC")]
			public const string IsPlaying = "isPlaying";

			[Token(Token = "0x40012DD")]
			public const string DialogueGroupUID = "groupId";

			[Token(Token = "0x40012DE")]
			public const string DialogueLineUID = "lineId";
		}

		[Token(Token = "0x40012C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private ResumeData _audioResumeData;

		[Token(Token = "0x40012C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private bool _hasResumeData;

		[Token(Token = "0x40012C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
		private State _state;

		[Token(Token = "0x40012CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private MarkerData _markerData;

		[Token(Token = "0x40012CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private GCHandle _markerDataHandle;

		[Token(Token = "0x40012CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private IntPtr _markerDataPtr;

		[Token(Token = "0x40012CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private AudioHandle _audioHandle;

		[Token(Token = "0x40012CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private DialogueController _dialogueController;

		[Token(Token = "0x40012CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private DialogueAsset _subtitleDialogueAsset;

		[Token(Token = "0x40012D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private EventReference _fmodEventReference;

		[Token(Token = "0x40012D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Dialogue s_blankLine;

		[Token(Token = "0x40012D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private int _timelinePosWhenPaused;

		[Token(Token = "0x17000293")]
		public State state
		{
			[Token(Token = "0x600170D")]
			[Address(RVA = "0xF4A2F4", Offset = "0xF4A2F4", VA = "0xF4A2F4")]
			get
			{
				return default(State);
			}
		}

		[Token(Token = "0x17000294")]
		public bool active
		{
			[Token(Token = "0x6001710")]
			[Address(RVA = "0xF4A2FC", Offset = "0xF4A2FC", VA = "0xF4A2FC", Slot = "11")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000295")]
		public Line line
		{
			[Token(Token = "0x6001711")]
			[Address(RVA = "0xF4A34C", Offset = "0xF4A34C", VA = "0xF4A34C", Slot = "12")]
			get
			{
				return default(Line);
			}
		}

		[Token(Token = "0x17000296")]
		public string typeId
		{
			[Token(Token = "0x6001713")]
			[Address(RVA = "0xF4A390", Offset = "0xF4A390", VA = "0xF4A390", Slot = "15")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001703")]
		[Address(RVA = "0xF49BCC", Offset = "0xF49BCC", VA = "0xF49BCC")]
		static DialoguePlayback()
		{
		}

		[Token(Token = "0x6001704")]
		[Address(RVA = "0xF49D58", Offset = "0xF49D58", VA = "0xF49D58")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001705")]
		[Address(RVA = "0xF49E28", Offset = "0xF49E28", VA = "0xF49E28", Slot = "6")]
		public override bool Initialise()
		{
			return default(bool);
		}

		[Token(Token = "0x6001706")]
		[Address(RVA = "0xF49EEC", Offset = "0xF49EEC", VA = "0xF49EEC", Slot = "10")]
		protected override void OnDestroy()
		{
		}

		[Token(Token = "0x6001707")]
		[Address(RVA = "0xF4A15C", Offset = "0xF4A15C", VA = "0xF4A15C", Slot = "7")]
		public override void OnUpdate(float dt)
		{
		}

		[Token(Token = "0x6001708")]
		[Address(RVA = "0xF499C0", Offset = "0xF499C0", VA = "0xF499C0")]
		[MonoPInvokeCallback(typeof(EVENT_CALLBACK))]
		private static RESULT OnMarkerCallback(EVENT_CALLBACK_TYPE callbackType, IntPtr eventInstancePtr, IntPtr paramsPtr)
		{
			return default(RESULT);
		}

		[Token(Token = "0x6001709")]
		[Address(RVA = "0xF48A5C", Offset = "0xF48A5C", VA = "0xF48A5C")]
		public void Play(EventReference fmodEvent, DialogueAsset subtitleAsset)
		{
		}

		[Token(Token = "0x600170A")]
		[Address(RVA = "0xF48EEC", Offset = "0xF48EEC", VA = "0xF48EEC")]
		public void Pause()
		{
		}

		[Token(Token = "0x600170B")]
		[Address(RVA = "0xF48958", Offset = "0xF48958", VA = "0xF48958")]
		public void Unpause()
		{
		}

		[Token(Token = "0x600170C")]
		[Address(RVA = "0xF48490", Offset = "0xF48490", VA = "0xF48490")]
		public void Stop()
		{
		}

		[Token(Token = "0x600170E")]
		[Address(RVA = "0xF482B0", Offset = "0xF482B0", VA = "0xF482B0")]
		public bool IsPlaying()
		{
			return default(bool);
		}

		[Token(Token = "0x600170F")]
		[Address(RVA = "0xF48948", Offset = "0xF48948", VA = "0xF48948")]
		public bool IsPaused()
		{
			return default(bool);
		}

		[Token(Token = "0x6001712")]
		[Address(RVA = "0xF49474", Offset = "0xF49474", VA = "0xF49474")]
		public void Resume()
		{
		}

		[Token(Token = "0x6001714")]
		[Address(RVA = "0xF4A3D0", Offset = "0xF4A3D0", VA = "0xF4A3D0", Slot = "14")]
		public bool Serialise(FlexBufferBuilder builder, ISceneObjectReferenceSerialiser objectSerialiser)
		{
			return default(bool);
		}

		[Token(Token = "0x6001715")]
		[Address(RVA = "0xF4A5DC", Offset = "0xF4A5DC", VA = "0xF4A5DC", Slot = "16")]
		public bool Deserialise(FlexBuffer.Map root, ISceneObjectReferenceDeserialiser objectDeserialiser)
		{
			return default(bool);
		}

		[Token(Token = "0x6001716")]
		[Address(RVA = "0xF4A8EC", Offset = "0xF4A8EC", VA = "0xF4A8EC")]
		public DialoguePlayback()
		{
		}
	}
	[Token(Token = "0x2000409")]
	public class DockableInTray : MonoBehaviour
	{
		[Token(Token = "0x6001718")]
		[Address(RVA = "0xF4A930", Offset = "0xF4A930", VA = "0xF4A930")]
		public DockableInTray()
		{
		}
	}
	[Token(Token = "0x200040A")]
	public class KineticToy : MonoBehaviour, ITouchableInteractable
	{
		[Token(Token = "0x40012DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private string touchFromFrontParamName;

		[Token(Token = "0x40012E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private string touchFromBackParamName;

		[Token(Token = "0x40012E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private bool interactableWhileMoving;

		[Token(Token = "0x40012E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Transform forwardReferenceTransform;

		[Token(Token = "0x40012E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private bool stopWhenOccluded;

		[Token(Token = "0x40012E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
		[SerializeField]
		private bool loopingAudio;

		[Token(Token = "0x40012E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		public EventReference[] onTouchEventReferences;

		[Token(Token = "0x40012E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private float minTimeBetweenSensorTouches;

		[Token(Token = "0x40012E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Animator animator;

		[Token(Token = "0x40012E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Occludee occludee;

		[Token(Token = "0x40012E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private int touchFromFrontParamId;

		[Token(Token = "0x40012EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private int touchFromBackParamId;

		[Token(Token = "0x40012EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private int exitParamId;

		[Token(Token = "0x40012EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private AudioHandle audioHandle;

		[Token(Token = "0x40012ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private bool exited;

		[Token(Token = "0x40012EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private float lastSensorTouchTime;

		[Token(Token = "0x40012EF")]
		private const string idleStateName = "Idle";

		[Token(Token = "0x40012F0")]
		private const string exitParamName = "Exit";

		[Token(Token = "0x40012F1")]
		private const int baseLayerId = 0;

		[Token(Token = "0x6001719")]
		[Address(RVA = "0xF4A938", Offset = "0xF4A938", VA = "0xF4A938")]
		private void Awake()
		{
		}

		[Token(Token = "0x600171A")]
		[Address(RVA = "0xF4AB00", Offset = "0xF4AB00", VA = "0xF4AB00")]
		private void Update()
		{
		}

		[Token(Token = "0x600171B")]
		[Address(RVA = "0xF4A9D0", Offset = "0xF4A9D0", VA = "0xF4A9D0")]
		private void PreCacheParamIds()
		{
		}

		[Token(Token = "0x600171C")]
		[Address(RVA = "0xF4AEEC", Offset = "0xF4AEEC", VA = "0xF4AEEC", Slot = "4")]
		public bool CanTouch()
		{
			return default(bool);
		}

		[Token(Token = "0x600171D")]
		[Address(RVA = "0xF4AF94", Offset = "0xF4AF94", VA = "0xF4AF94")]
		public void TriggerFromFrontSensor()
		{
		}

		[Token(Token = "0x600171E")]
		[Address(RVA = "0xF4AFF4", Offset = "0xF4AFF4", VA = "0xF4AFF4")]
		public void TriggerFromBackSensor()
		{
		}

		[Token(Token = "0x600171F")]
		[Address(RVA = "0xF4AF9C", Offset = "0xF4AF9C", VA = "0xF4AF9C")]
		private void TriggerFromSensor(bool fromFront)
		{
		}

		[Token(Token = "0x6001720")]
		[Address(RVA = "0xF4AFFC", Offset = "0xF4AFFC", VA = "0xF4AFFC")]
		private void Trigger(bool fromFront)
		{
		}

		[Token(Token = "0x6001721")]
		[Address(RVA = "0xF4B04C", Offset = "0xF4B04C", VA = "0xF4B04C", Slot = "5")]
		public void OnTouch(InteractorBase interactor, Vector3 touchDirection)
		{
		}

		[Token(Token = "0x6001722")]
		[Address(RVA = "0xF4AD70", Offset = "0xF4AD70", VA = "0xF4AD70")]
		private void PlayAudio()
		{
		}

		[Token(Token = "0x6001723")]
		[Address(RVA = "0xF4B1E8", Offset = "0xF4B1E8", VA = "0xF4B1E8")]
		public KineticToy()
		{
		}
	}
	[Token(Token = "0x200040B")]
	[RequireComponent(typeof(Holder))]
	[RequireComponent(typeof(PhysicsHoldableDock))]
	public class Tray : MonoBehaviour
	{
		[Token(Token = "0x40012F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private PhysicsHoldableDock dock;

		[Token(Token = "0x40012F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Transform attachmentPoint;

		[Token(Token = "0x40012F4")]
		private const bool isFS = false;

		[Token(Token = "0x6001724")]
		[Address(RVA = "0xF4B208", Offset = "0xF4B208", VA = "0xF4B208")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001725")]
		[Address(RVA = "0xF4B260", Offset = "0xF4B260", VA = "0xF4B260")]
		private void Start()
		{
		}

		[Token(Token = "0x6001726")]
		[Address(RVA = "0xF4B398", Offset = "0xF4B398", VA = "0xF4B398")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001727")]
		[Address(RVA = "0xF4B484", Offset = "0xF4B484", VA = "0xF4B484")]
		private bool CanDock(PhysicsHoldableDock dock, PhysicsHoldable holdable)
		{
			return default(bool);
		}

		[Token(Token = "0x6001728")]
		[Address(RVA = "0xF4B50C", Offset = "0xF4B50C", VA = "0xF4B50C")]
		private void FsAdjustAttachmentPointForPlacing(PhysicsHoldableDock physicsHoldableDock, PhysicsHoldable physicsHoldable, InteractorBase interactor)
		{
		}

		[Token(Token = "0x6001729")]
		[Address(RVA = "0xF4BCD8", Offset = "0xF4BCD8", VA = "0xF4BCD8")]
		private void AdjustAttachmentPointBeforeDocking(PhysicsHoldableDock physicsHoldableDock, PhysicsHoldable physicsHoldable)
		{
		}

		[Token(Token = "0x600172A")]
		[Address(RVA = "0xF4B67C", Offset = "0xF4B67C", VA = "0xF4B67C")]
		private void AdjustAttachmentOrientation(PhysicsHoldable physicsHoldable, Quaternion inputOrientation)
		{
		}

		[Token(Token = "0x600172B")]
		[Address(RVA = "0xF4B704", Offset = "0xF4B704", VA = "0xF4B704")]
		private void AdjustAttachmentPosition(PhysicsHoldable physicsHoldable)
		{
		}

		[Token(Token = "0x600172C")]
		[Address(RVA = "0xF4BDD4", Offset = "0xF4BDD4", VA = "0xF4BDD4")]
		private float GetBoudsSizeDimensionClosestToDirection(PhysicsHoldable physicsHoldable, Quaternion holdableToAttachmentRotation, Bounds bounds, Vector3 direction)
		{
			return default(float);
		}

		[Token(Token = "0x600172D")]
		[Address(RVA = "0xF4C0C8", Offset = "0xF4C0C8", VA = "0xF4C0C8")]
		public Tray()
		{
		}
	}
	[Token(Token = "0x200040C")]
	public class Vinyl : MonoBehaviour
	{
		[Token(Token = "0x40012F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public LPRecordProperties properties;

		[Token(Token = "0x600172E")]
		[Address(RVA = "0xF4C0D0", Offset = "0xF4C0D0", VA = "0xF4C0D0")]
		public Vinyl()
		{
		}
	}
}
namespace Interactables.ItemScripts
{
	[Token(Token = "0x200040D")]
	public class PlayerControllerRumbleEventHandler : MonoBehaviour
	{
		[Token(Token = "0x40012F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private BaseScriptableRumbleEvent _doorIsLockedRumbleEvent;

		[Token(Token = "0x40012F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private BaseScriptableRumbleEvent _pickUpItemRumbleEvent;

		[Token(Token = "0x40012F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private BaseScriptableRumbleEvent _dropItemRumbleEvent;

		[Token(Token = "0x40012F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private BaseScriptableRumbleEvent _throwItemRumbleEvent;

		[Token(Token = "0x40012FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private BaseScriptableRumbleEvent _placeItemRumbleEvent;

		[Token(Token = "0x40012FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private BaseScriptableRumbleEvent _placeCasseteInPlayerRumbleEvent;

		[Token(Token = "0x40012FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private BaseScriptableRumbleEvent _placeRecordInPlayerRumbleEvent;

		[Token(Token = "0x40012FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private bool _registeredCallback;

		[Token(Token = "0x600172F")]
		[Address(RVA = "0xF4C0D8", Offset = "0xF4C0D8", VA = "0xF4C0D8")]
		private void Update()
		{
		}

		[Token(Token = "0x6001730")]
		[Address(RVA = "0xF4C194", Offset = "0xF4C194", VA = "0xF4C194")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001731")]
		[Address(RVA = "0xF4C250", Offset = "0xF4C250", VA = "0xF4C250")]
		private void OnInteraction(GameObject t, GameObject u, InteractionCallback interactionCallback)
		{
		}

		[Token(Token = "0x6001732")]
		[Address(RVA = "0xF4C0DC", Offset = "0xF4C0DC", VA = "0xF4C0DC")]
		private void EnsureInteractionCallbackRegistered()
		{
		}

		[Token(Token = "0x6001733")]
		[Address(RVA = "0xF4C198", Offset = "0xF4C198", VA = "0xF4C198")]
		private void EnsureUnregisterInteractionCallback()
		{
		}

		[Token(Token = "0x6001734")]
		[Address(RVA = "0xF4C528", Offset = "0xF4C528", VA = "0xF4C528")]
		public PlayerControllerRumbleEventHandler()
		{
		}
	}
}
namespace Graphics.Lightmap
{
	[Token(Token = "0x200040E")]
	public class LightmapManager : MonoBehaviour, IService
	{
		[Serializable]
		[Token(Token = "0x200040F")]
		private struct Scenario
		{
			[Token(Token = "0x4001307")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public string name;

			[Token(Token = "0x4001308")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public GameObject parent;

			[Token(Token = "0x4001309")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public GameObject parent_High;

			[Token(Token = "0x400130A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public LightmapSwapData data;

			[Token(Token = "0x400130B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public StoryObjectCheckpointProperties checkpoint;

			[Token(Token = "0x400130C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Light[] bakedLights;
		}

		[Token(Token = "0x40012FE")]
		public const string HighQualitySuffix = "_High";

		[Token(Token = "0x40012FF")]
		public const int ScenarioIdUnset = -1;

		[Token(Token = "0x4001300")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private StoryObjectCheckpointList _allCheckpoints;

		[Token(Token = "0x4001301")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Scenario[] _scenarios;

		[Token(Token = "0x4001302")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private ReflectionProbeID[] _reflectionProbesIds;

		[Token(Token = "0x4001303")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private LightmapRendererID[] _rendererIds;

		[Token(Token = "0x4001304")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Dictionary<string, List<StoryObjectCheckpointProperties>> _scenarioCheckpoints;

		[Token(Token = "0x4001305")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private string _initialScenarioName;

		[Token(Token = "0x4001306")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private int _scenarioIndex;

		[Token(Token = "0x17000297")]
		public static bool UseHighQualityLightmap
		{
			[Token(Token = "0x6001735")]
			[Address(RVA = "0xF4C530", Offset = "0xF4C530", VA = "0xF4C530")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000298")]
		public LightmapRendererID[] RendererIDs
		{
			[Token(Token = "0x6001736")]
			[Address(RVA = "0xF4C538", Offset = "0xF4C538", VA = "0xF4C538")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000299")]
		public int current
		{
			[Token(Token = "0x6001737")]
			[Address(RVA = "0xF4C540", Offset = "0xF4C540", VA = "0xF4C540")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700029A")]
		public int scenarioCount
		{
			[Token(Token = "0x6001738")]
			[Address(RVA = "0xF4C548", Offset = "0xF4C548", VA = "0xF4C548")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x6001739")]
		[Address(RVA = "0xF4C564", Offset = "0xF4C564", VA = "0xF4C564", Slot = "4")]
		public void OnStartUp()
		{
		}

		[Token(Token = "0x600173A")]
		[Address(RVA = "0xF4CFE0", Offset = "0xF4CFE0", VA = "0xF4CFE0", Slot = "5")]
		public void OnCleanUp()
		{
		}

		[Token(Token = "0x600173B")]
		[Address(RVA = "0xF4CFE4", Offset = "0xF4CFE4", VA = "0xF4CFE4", Slot = "6")]
		public void OnUpdate(float deltaTime)
		{
		}

		[Token(Token = "0x600173C")]
		[Address(RVA = "0xF4CFE8", Offset = "0xF4CFE8", VA = "0xF4CFE8")]
		public void SetScenario(string name)
		{
		}

		[Token(Token = "0x600173D")]
		[Address(RVA = "0xF4D08C", Offset = "0xF4D08C", VA = "0xF4D08C")]
		public void SetScenario(int index)
		{
		}

		[Token(Token = "0x600173E")]
		[Address(RVA = "0xF4D398", Offset = "0xF4D398", VA = "0xF4D398")]
		public void ApplyScenarioFromCurrentCheckpoint()
		{
		}

		[Token(Token = "0x600173F")]
		[Address(RVA = "0xF4C748", Offset = "0xF4C748", VA = "0xF4C748")]
		private void FindInitialScenarioName()
		{
		}

		[Token(Token = "0x6001740")]
		[Address(RVA = "0xF4CC3C", Offset = "0xF4CC3C", VA = "0xF4CC3C")]
		private void SetupScenarioCheckpoints()
		{
		}

		[Token(Token = "0x6001741")]
		[Address(RVA = "0xF4D558", Offset = "0xF4D558", VA = "0xF4D558")]
		public LightmapManager()
		{
		}
	}
	[Token(Token = "0x2000410")]
	public class LightmapRendererID : MonoBehaviour
	{
		[Token(Token = "0x400130D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public uint ID;

		[Token(Token = "0x400130E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MeshRenderer Renderer;

		[Token(Token = "0x6001742")]
		[Address(RVA = "0xF4D650", Offset = "0xF4D650", VA = "0xF4D650")]
		public LightmapRendererID()
		{
		}
	}
	[Token(Token = "0x2000411")]
	[CreateAssetMenu(fileName = "Data", menuName = "ScriptableObjects/LightmapSwapData", order = 1)]
	public class LightmapSwapData : ScriptableObject
	{
		[Token(Token = "0x400130F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public LightmapsMode LightmapsMode;

		[Token(Token = "0x4001310")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SerializableLightmapData[] SerializedLightmaps;

		[Token(Token = "0x4001311")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public SerializableLightProbesData SerializedLightProbes;

		[Token(Token = "0x4001312")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public ReflectionProbeSwapData[] ReflectionProbesData;

		[Token(Token = "0x4001313")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public RendererLightmapSwapData[] RenderersLightmapData;

		[Token(Token = "0x4001314")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Dictionary<uint, ReflectionProbeSwapData> ProbeLookup;

		[Token(Token = "0x4001315")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Dictionary<uint, RendererLightmapSwapData> RendererLookup;

		[Token(Token = "0x4001316")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private LightmapData[] Lightmaps;

		[Token(Token = "0x4001317")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private SphericalHarmonicsL2[] LightProbes;

		[Token(Token = "0x6001743")]
		[Address(RVA = "0xF4C8A4", Offset = "0xF4C8A4", VA = "0xF4C8A4")]
		public void Setup()
		{
		}

		[Token(Token = "0x6001744")]
		[Address(RVA = "0xF4D800", Offset = "0xF4D800", VA = "0xF4D800")]
		public void CopyCurrentLightmapData(ReflectionProbeID[] probesID, LightmapRendererID[] renderIDs)
		{
		}

		[Token(Token = "0x6001745")]
		[Address(RVA = "0xF4DB78", Offset = "0xF4DB78", VA = "0xF4DB78")]
		private RendererLightmapSwapData[] CopyRendererLightmapData(LightmapRendererID[] renderIDs)
		{
			return null;
		}

		[Token(Token = "0x6001746")]
		[Address(RVA = "0xF4DD24", Offset = "0xF4DD24", VA = "0xF4DD24")]
		private ReflectionProbeSwapData[] CopyReflectionProbesData(ReflectionProbeID[] probesID)
		{
			return null;
		}

		[Token(Token = "0x6001747")]
		[Address(RVA = "0xF4D154", Offset = "0xF4D154", VA = "0xF4D154")]
		public void ApplyLightmapData(ReflectionProbeID[] probesID, LightmapRendererID[] renderIDs)
		{
		}

		[Token(Token = "0x6001748")]
		[Address(RVA = "0xF4E2E4", Offset = "0xF4E2E4", VA = "0xF4E2E4")]
		public LightmapSwapData()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000412")]
	public class ReflectionProbeSwapData
	{
		[Token(Token = "0x4001318")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public uint ID;

		[Token(Token = "0x4001319")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Texture BakedTexture;

		[Token(Token = "0x400131A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Color BackgroundColor;

		[Token(Token = "0x400131B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float BlendDistance;

		[Token(Token = "0x400131C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public bool BoxProjection;

		[Token(Token = "0x400131D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Vector3 Center;

		[Token(Token = "0x400131E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public ReflectionProbeClearFlags ClearFlags;

		[Token(Token = "0x400131F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public int CullingMask;

		[Token(Token = "0x4001320")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Texture CustomBakedTexture;

		[Token(Token = "0x4001321")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public float FarClipPlane;

		[Token(Token = "0x4001322")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public bool HDR;

		[Token(Token = "0x4001323")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public int Importance;

		[Token(Token = "0x4001324")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public float Intensity;

		[Token(Token = "0x4001325")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public ReflectionProbeMode Mode;

		[Token(Token = "0x4001326")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public float NearClipPlane;

		[Token(Token = "0x4001327")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public ReflectionProbeRefreshMode RefreshMode;

		[Token(Token = "0x4001328")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		public bool RenderDynamicObjects;

		[Token(Token = "0x4001329")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public RenderTexture RealtimeTexture;

		[Token(Token = "0x400132A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public int Resolution;

		[Token(Token = "0x400132B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		public float ShadowDistance;

		[Token(Token = "0x400132C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public Vector3 Size;

		[Token(Token = "0x400132D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		public ReflectionProbeTimeSlicingMode TimeSlicingMode;

		[Token(Token = "0x6001749")]
		[Address(RVA = "0xF4DF2C", Offset = "0xF4DF2C", VA = "0xF4DF2C")]
		public void Copy(uint id, ReflectionProbe probe)
		{
		}

		[Token(Token = "0x600174A")]
		[Address(RVA = "0xF4E0E0", Offset = "0xF4E0E0", VA = "0xF4E0E0")]
		public void Apply(ReflectionProbe probe)
		{
		}

		[Token(Token = "0x600174B")]
		[Address(RVA = "0xF4DF24", Offset = "0xF4DF24", VA = "0xF4DF24")]
		public ReflectionProbeSwapData()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000413")]
	public struct RendererLightmapSwapData
	{
		[Token(Token = "0x400132E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public uint RenderID;

		[Token(Token = "0x400132F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public int LightmapIndex;

		[Token(Token = "0x4001330")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Vector4 LightmapOffset;

		[Token(Token = "0x4001331")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public LightProbeUsage LightProbeUsage;

		[Token(Token = "0x4001332")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int RealtimeLightmapIndex;

		[Token(Token = "0x4001333")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Vector4 RealtimeLightmapScaleOffset;

		[Token(Token = "0x600174C")]
		[Address(RVA = "0xF4DEA4", Offset = "0xF4DEA4", VA = "0xF4DEA4")]
		public void Copy(uint id, MeshRenderer renderer)
		{
		}

		[Token(Token = "0x600174D")]
		[Address(RVA = "0xF4E25C", Offset = "0xF4E25C", VA = "0xF4E25C")]
		public void Apply(MeshRenderer renderer)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000414")]
	public struct SerializableLightmapData
	{
		[Token(Token = "0x4001334")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Texture2D lightmapColor;

		[Token(Token = "0x4001335")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Texture2D lightmapDir;

		[Token(Token = "0x4001336")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Texture2D shadowMask;

		[Token(Token = "0x600174E")]
		[Address(RVA = "0xF4D984", Offset = "0xF4D984", VA = "0xF4D984")]
		public void Copy(LightmapData data)
		{
		}

		[Token(Token = "0x600174F")]
		[Address(RVA = "0xF4D658", Offset = "0xF4D658", VA = "0xF4D658")]
		public LightmapData GetLightmapData()
		{
			return null;
		}
	}
	[Serializable]
	[Token(Token = "0x2000415")]
	public struct SerializableLightProbesData
	{
		[Serializable]
		[Token(Token = "0x2000416")]
		public struct SerializableSphericalHarmonicsL2Data
		{
			[Token(Token = "0x4001339")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Vector3[] coefficients;
		}

		[Token(Token = "0x4001337")]
		private const int SHL2CoefficientCount = 9;

		[Token(Token = "0x4001338")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public SerializableSphericalHarmonicsL2Data[] harmonics;

		[Token(Token = "0x6001750")]
		[Address(RVA = "0xF4D9F8", Offset = "0xF4D9F8", VA = "0xF4D9F8")]
		public void Copy(SphericalHarmonicsL2[] data)
		{
		}

		[Token(Token = "0x6001751")]
		[Address(RVA = "0xF4D6E8", Offset = "0xF4D6E8", VA = "0xF4D6E8")]
		public SphericalHarmonicsL2[] GetLightProbesData()
		{
			return null;
		}
	}
	[Token(Token = "0x2000417")]
	public class ReflectionProbeID : MonoBehaviour
	{
		[Token(Token = "0x400133A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public uint ID;

		[Token(Token = "0x400133B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ReflectionProbe Probe;

		[Token(Token = "0x1700029B")]
		public bool HasID
		{
			[Token(Token = "0x6001752")]
			[Address(RVA = "0xF4E2EC", Offset = "0xF4E2EC", VA = "0xF4E2EC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001753")]
		[Address(RVA = "0xF4E2FC", Offset = "0xF4E2FC", VA = "0xF4E2FC")]
		public ReflectionProbeID()
		{
		}
	}
}
namespace Graphics.Outline
{
	[Token(Token = "0x2000418")]
	public class DynamicOutline : MonoBehaviour, IInitialisable
	{
		[Token(Token = "0x400133C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private MeshRenderer _renderer;

		[Token(Token = "0x400133D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private bool _initialised;

		[Token(Token = "0x6001754")]
		[Address(RVA = "0xF4E304", Offset = "0xF4E304", VA = "0xF4E304", Slot = "4")]
		public bool Initialise()
		{
			return default(bool);
		}

		[Token(Token = "0x6001755")]
		[Address(RVA = "0xF4E4F0", Offset = "0xF4E4F0", VA = "0xF4E4F0")]
		private void Start()
		{
		}

		[Token(Token = "0x6001756")]
		[Address(RVA = "0xF4E574", Offset = "0xF4E574", VA = "0xF4E574")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001757")]
		[Address(RVA = "0xF4E7EC", Offset = "0xF4E7EC", VA = "0xF4E7EC")]
		public DynamicOutline()
		{
		}
	}
	[Token(Token = "0x2000419")]
	public class DynamicSkinnedOutline : MonoBehaviour, IInitialisable
	{
		[Token(Token = "0x400133E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private SkinnedMeshRenderer[] _skinnedRenderers;

		[Token(Token = "0x400133F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private bool _initialised;

		[Token(Token = "0x6001758")]
		[Address(RVA = "0xF4E7F4", Offset = "0xF4E7F4", VA = "0xF4E7F4", Slot = "4")]
		public bool Initialise()
		{
			return default(bool);
		}

		[Token(Token = "0x6001759")]
		[Address(RVA = "0xF4EA24", Offset = "0xF4EA24", VA = "0xF4EA24")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x600175A")]
		[Address(RVA = "0xF4EB0C", Offset = "0xF4EB0C", VA = "0xF4EB0C")]
		public DynamicSkinnedOutline()
		{
		}
	}
	[Token(Token = "0x200041A")]
	public interface IStaticOutlineBatchVolumeProvider
	{
		[Token(Token = "0x1700029C")]
		Transform root
		{
			[Token(Token = "0x600175B")]
			get;
		}

		[Token(Token = "0x1700029D")]
		Bounds[] volumes
		{
			[Token(Token = "0x600175C")]
			get;
		}
	}
	[Token(Token = "0x200041B")]
	public class OutlineMeshBatcher : MonoBehaviour, IService
	{
		[Token(Token = "0x4001340")]
		public const int OUTLINE_LAYER = 22;

		[Token(Token = "0x4001341")]
		private const string RENDER_TYPE = "RenderType";

		[Token(Token = "0x4001342")]
		private const string TRANSPARENT = "Transparent";

		[Token(Token = "0x4001343")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform Root;

		[Token(Token = "0x4001344")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform[] VolumeProviders;

		[Token(Token = "0x4001345")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Material OutlineMaterial;

		[Token(Token = "0x4001346")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float Offset;

		[Token(Token = "0x4001347")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Transform MergeMeshParent;

		[Token(Token = "0x4001348")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public GameObject[] StaticOutlineObjects;

		[Token(Token = "0x4001349")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public List<GameObject> DynamicOutlineObjects;

		[Token(Token = "0x400134A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public List<SkinnedMeshRenderer> SkinnedOutlineObjects;

		[Token(Token = "0x400134B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		[HideInInspector]
		private Transform[] StaticOutlineProviders;

		[Token(Token = "0x400134C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Dictionary<int, GameObject> DynamicInstanceIDLookup;

		[Token(Token = "0x400134D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Dictionary<int, GameObject> SkinnedInstanceIDLookup;

		[Token(Token = "0x400134E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Dictionary<Mesh, Mesh> SharedMeshCache;

		[Token(Token = "0x400134F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private List<int> ReusableIndices;

		[Token(Token = "0x600175D")]
		[Address(RVA = "0xF4EB14", Offset = "0xF4EB14", VA = "0xF4EB14", Slot = "4")]
		public void OnStartUp()
		{
		}

		[Token(Token = "0x600175E")]
		[Address(RVA = "0xF4F414", Offset = "0xF4F414", VA = "0xF4F414", Slot = "5")]
		public void OnCleanUp()
		{
		}

		[Token(Token = "0x600175F")]
		[Address(RVA = "0xF4F418", Offset = "0xF4F418", VA = "0xF4F418", Slot = "6")]
		public void OnUpdate(float dt)
		{
		}

		[Token(Token = "0x6001760")]
		[Address(RVA = "0xF4E398", Offset = "0xF4E398", VA = "0xF4E398")]
		public void AddDynamicRenderer(MeshRenderer renderer)
		{
		}

		[Token(Token = "0x6001761")]
		[Address(RVA = "0xF4E8BC", Offset = "0xF4E8BC", VA = "0xF4E8BC")]
		public void AddDynamicRenderer(SkinnedMeshRenderer renderer)
		{
		}

		[Token(Token = "0x6001762")]
		[Address(RVA = "0xF4E62C", Offset = "0xF4E62C", VA = "0xF4E62C")]
		public void RemoveAllDynamicRenderers(GameObject obj)
		{
		}

		[Token(Token = "0x6001763")]
		[Address(RVA = "0xF4F41C", Offset = "0xF4F41C", VA = "0xF4F41C")]
		private GameObject InternalAddMeshRenderer(MeshRenderer renderer)
		{
			return null;
		}

		[Token(Token = "0x6001764")]
		[Address(RVA = "0xF4EF28", Offset = "0xF4EF28", VA = "0xF4EF28")]
		private GameObject InternalAddSkinnedMeshRenderer(SkinnedMeshRenderer renderer)
		{
			return null;
		}

		[Token(Token = "0x6001765")]
		[Address(RVA = "0xF4FDA4", Offset = "0xF4FDA4", VA = "0xF4FDA4")]
		public static void AddToRadioOcclusion(GameObject newOutlineObj, Renderer renderer)
		{
		}

		[Token(Token = "0x6001766")]
		[Address(RVA = "0xF4FA64", Offset = "0xF4FA64", VA = "0xF4FA64")]
		public static Mesh CreateOutlineMesh(Mesh mesh, Material[] materials, float offset, List<int> reusableIndices)
		{
			return null;
		}

		[Token(Token = "0x6001767")]
		[Address(RVA = "0xF4FFEC", Offset = "0xF4FFEC", VA = "0xF4FFEC")]
		public void GetStaticOutlinesInVolume(IStaticOutlineBatchVolumeProvider volumeProvider, List<GameObject> results)
		{
		}

		[Token(Token = "0x6001768")]
		[Address(RVA = "0xF4FF74", Offset = "0xF4FF74", VA = "0xF4FF74")]
		public static bool IsMaterialTransparent(Material material)
		{
			return default(bool);
		}

		[Token(Token = "0x6001769")]
		[Address(RVA = "0xF4F8B0", Offset = "0xF4F8B0", VA = "0xF4F8B0")]
		public static void SwapLod0FilterForLod1Filter(ref MeshFilter filter)
		{
		}

		[Token(Token = "0x600176A")]
		[Address(RVA = "0xF501C8", Offset = "0xF501C8", VA = "0xF501C8")]
		public OutlineMeshBatcher()
		{
		}
	}
}
namespace UpdateSystem
{
	[Token(Token = "0x200041C")]
	public interface ICoreUpdatable : IUpdatable
	{
	}
}
namespace Flow
{
	[Token(Token = "0x200041D")]
	public class Boot : MonoBehaviour
	{
		[Token(Token = "0x4001350")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject _bootServicesPrefab;

		[Token(Token = "0x4001351")]
		public const string ManagersSceneName = "Managers";

		[Token(Token = "0x4001352")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Scene _managerScene;

		[Token(Token = "0x600176B")]
		[Address(RVA = "0xF503C0", Offset = "0xF503C0", VA = "0xF503C0")]
		private void Start()
		{
		}

		[Token(Token = "0x600176C")]
		[Address(RVA = "0xF51008", Offset = "0xF51008", VA = "0xF51008")]
		public Boot()
		{
		}
	}
}
namespace Flow.Bolt
{
	[Token(Token = "0x200041E")]
	public class ActivityCompleteUnit : Unit
	{
		[Token(Token = "0x1700029E")]
		[DoNotSerialize]
		[PortLabelHidden]
		public ControlInput enter
		{
			[Token(Token = "0x600176D")]
			[Address(RVA = "0xF51010", Offset = "0xF51010", VA = "0xF51010")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x600176E")]
			[Address(RVA = "0xF51018", Offset = "0xF51018", VA = "0xF51018")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x1700029F")]
		[PortLabelHidden]
		[DoNotSerialize]
		public ControlOutput exit
		{
			[Token(Token = "0x600176F")]
			[Address(RVA = "0xF51020", Offset = "0xF51020", VA = "0xF51020")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001770")]
			[Address(RVA = "0xF51028", Offset = "0xF51028", VA = "0xF51028")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x6001771")]
		[Address(RVA = "0xF51030", Offset = "0xF51030", VA = "0xF51030")]
		public ActivityCompleteUnit()
		{
		}

		[Token(Token = "0x6001772")]
		[Address(RVA = "0xF51038", Offset = "0xF51038", VA = "0xF51038", Slot = "67")]
		protected override void Definition()
		{
		}

		[Token(Token = "0x6001773")]
		[Address(RVA = "0xF5113C", Offset = "0xF5113C", VA = "0xF5113C")]
		private ControlOutput Run(global::Bolt.Flow flow)
		{
			return null;
		}
	}
	[Token(Token = "0x200041F")]
	public class ActivityStartUnit : Unit
	{
		[Token(Token = "0x170002A0")]
		[Inspectable]
		[Serialize]
		public ActivityDefinition activity
		{
			[Token(Token = "0x6001774")]
			[Address(RVA = "0xF51218", Offset = "0xF51218", VA = "0xF51218")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001775")]
			[Address(RVA = "0xF51220", Offset = "0xF51220", VA = "0xF51220")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x170002A1")]
		[PortLabelHidden]
		[DoNotSerialize]
		public ControlInput enter
		{
			[Token(Token = "0x6001776")]
			[Address(RVA = "0xF51228", Offset = "0xF51228", VA = "0xF51228")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001777")]
			[Address(RVA = "0xF51230", Offset = "0xF51230", VA = "0xF51230")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x170002A2")]
		[PortLabelHidden]
		[DoNotSerialize]
		public ControlOutput exit
		{
			[Token(Token = "0x6001778")]
			[Address(RVA = "0xF51238", Offset = "0xF51238", VA = "0xF51238")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001779")]
			[Address(RVA = "0xF51240", Offset = "0xF51240", VA = "0xF51240")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x600177A")]
		[Address(RVA = "0xF51248", Offset = "0xF51248", VA = "0xF51248")]
		public ActivityStartUnit()
		{
		}

		[Token(Token = "0x600177B")]
		[Address(RVA = "0xF51250", Offset = "0xF51250", VA = "0xF51250", Slot = "67")]
		protected override void Definition()
		{
		}

		[Token(Token = "0x600177C")]
		[Address(RVA = "0xF51354", Offset = "0xF51354", VA = "0xF51354")]
		private ControlOutput Run(global::Bolt.Flow flow)
		{
			return null;
		}
	}
	[Token(Token = "0x2000420")]
	[UnitCategory("Flow")]
	public sealed class AutosaveUnit : Unit, IGraphElementWithData, IGraphElement, IGraphItem, INotifiedCollectionItem, IDisposable, IPrewarmable, IAotStubbable, IIdentifiable
	{
		[Token(Token = "0x2000421")]
		private class Data : IGraphElementData
		{
			[Token(Token = "0x6001785")]
			[Address(RVA = "0xF5148C", Offset = "0xF5148C", VA = "0xF5148C")]
			public Data()
			{
			}
		}

		[Token(Token = "0x2000422")]
		[CompilerGenerated]
		private sealed class <Run>d__12 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400135A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400135B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400135C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public global::Bolt.Flow flow;

			[Token(Token = "0x400135D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public AutosaveUnit <>4__this;

			[Token(Token = "0x170002A5")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001789")]
				[Address(RVA = "0xF517CC", Offset = "0xF517CC", VA = "0xF517CC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002A6")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600178B")]
				[Address(RVA = "0xF51814", Offset = "0xF51814", VA = "0xF51814", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001786")]
			[Address(RVA = "0xF51628", Offset = "0xF51628", VA = "0xF51628")]
			[DebuggerHidden]
			public <Run>d__12(int <>1__state)
			{
			}

			[Token(Token = "0x6001787")]
			[Address(RVA = "0xF51650", Offset = "0xF51650", VA = "0xF51650", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001788")]
			[Address(RVA = "0xF51654", Offset = "0xF51654", VA = "0xF51654", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600178A")]
			[Address(RVA = "0xF517D4", Offset = "0xF517D4", VA = "0xF517D4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x170002A3")]
		[PortLabelHidden]
		[DoNotSerialize]
		public ControlInput enter
		{
			[Token(Token = "0x600177D")]
			[Address(RVA = "0xF51408", Offset = "0xF51408", VA = "0xF51408")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x600177E")]
			[Address(RVA = "0xF51410", Offset = "0xF51410", VA = "0xF51410")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x170002A4")]
		[PortLabelHidden]
		[DoNotSerialize]
		public ControlOutput exit
		{
			[Token(Token = "0x600177F")]
			[Address(RVA = "0xF51418", Offset = "0xF51418", VA = "0xF51418")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001780")]
			[Address(RVA = "0xF51420", Offset = "0xF51420", VA = "0xF51420")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x6001781")]
		[Address(RVA = "0xF51428", Offset = "0xF51428", VA = "0xF51428")]
		public AutosaveUnit()
		{
		}

		[Token(Token = "0x6001782")]
		[Address(RVA = "0xF51430", Offset = "0xF51430", VA = "0xF51430", Slot = "72")]
		public IGraphElementData CreateData()
		{
			return null;
		}

		[Token(Token = "0x6001783")]
		[Address(RVA = "0xF51494", Offset = "0xF51494", VA = "0xF51494", Slot = "67")]
		protected override void Definition()
		{
		}

		[Token(Token = "0x6001784")]
		[Address(RVA = "0xF51598", Offset = "0xF51598", VA = "0xF51598")]
		[IteratorStateMachine(typeof(<Run>d__12))]
		private IEnumerator Run(global::Bolt.Flow flow)
		{
			return null;
		}
	}
	[Token(Token = "0x2000423")]
	[UnitCategory("Flow")]
	public abstract class ContinueWhenCameraUnit<ContextType> : WaitUnit where ContextType : ContinueWhenCameraUnit<ContextType>.BaseContext, new()
	{
		[Token(Token = "0x2000424")]
		public class BaseContext
		{
			[Token(Token = "0x170002A8")]
			public Transform cameraTransform
			{
				[Token(Token = "0x6001793")]
				[CompilerGenerated]
				get
				{
					return null;
				}
				[Token(Token = "0x6001794")]
				[CompilerGenerated]
				set
				{
				}
			}

			[Token(Token = "0x170002A9")]
			public CharacterController characterController
			{
				[Token(Token = "0x6001795")]
				[CompilerGenerated]
				get
				{
					return null;
				}
				[Token(Token = "0x6001796")]
				[CompilerGenerated]
				set
				{
				}
			}

			[Token(Token = "0x6001797")]
			public BaseContext()
			{
			}
		}

		[Token(Token = "0x2000425")]
		[CompilerGenerated]
		private sealed class <>c__DisplayClass8_0
		{
			[Token(Token = "0x4001361")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ContinueWhenCameraUnit<ContextType> <>4__this;

			[Token(Token = "0x4001362")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ContextType context;

			[Token(Token = "0x6001798")]
			public <>c__DisplayClass8_0()
			{
			}

			[Token(Token = "0x6001799")]
			internal bool <Await>b__0()
			{
				return default(bool);
			}
		}

		[Token(Token = "0x2000426")]
		[CompilerGenerated]
		private sealed class <Await>d__8 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001363")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private int <>1__state;

			[Token(Token = "0x4001364")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private object <>2__current;

			[Token(Token = "0x4001365")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ContinueWhenCameraUnit<ContextType> <>4__this;

			[Token(Token = "0x4001366")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public global::Bolt.Flow flow;

			[Token(Token = "0x4001367")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private <>c__DisplayClass8_0 <>8__1;

			[Token(Token = "0x170002AA")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600179D")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002AB")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600179F")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600179A")]
			[DebuggerHidden]
			public <Await>d__8(int <>1__state)
			{
			}

			[Token(Token = "0x600179B")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600179C")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600179E")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x170002A7")]
		[DoNotSerialize]
		public ValueInput _mainCamera
		{
			[Token(Token = "0x600178C")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x600178D")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x600178E")]
		public ContinueWhenCameraUnit()
		{
		}

		[Token(Token = "0x600178F")]
		protected abstract bool Condition(ContextType context);

		[Token(Token = "0x6001790")]
		protected override void Definition()
		{
		}

		[Token(Token = "0x6001791")]
		[IteratorStateMachine(typeof(ContinueWhenCameraUnit<>.<Await>d__8))]
		protected override IEnumerator Await(global::Bolt.Flow flow)
		{
			return null;
		}

		[Token(Token = "0x6001792")]
		protected virtual ContextType BuildContext(global::Bolt.Flow flow)
		{
			return null;
		}
	}
	[Token(Token = "0x2000427")]
	[UnitCategory("Flow")]
	public sealed class ContinueWhenFacingUnit : ContinueWhenCameraUnit<ContinueWhenFacingUnit.Context>
	{
		[Token(Token = "0x2000428")]
		public class Context : BaseContext
		{
			[Token(Token = "0x170002AF")]
			public BoundingBox boundingBox
			{
				[Token(Token = "0x60017AA")]
				[Address(RVA = "0xF51CB0", Offset = "0xF51CB0", VA = "0xF51CB0")]
				[CompilerGenerated]
				get
				{
					return null;
				}
				[Token(Token = "0x60017AB")]
				[Address(RVA = "0xF51CB8", Offset = "0xF51CB8", VA = "0xF51CB8")]
				[CompilerGenerated]
				set
				{
				}
			}

			[Token(Token = "0x170002B0")]
			public Transform positionToFace
			{
				[Token(Token = "0x60017AC")]
				[Address(RVA = "0xF51CC0", Offset = "0xF51CC0", VA = "0xF51CC0")]
				[CompilerGenerated]
				get
				{
					return null;
				}
				[Token(Token = "0x60017AD")]
				[Address(RVA = "0xF51CC8", Offset = "0xF51CC8", VA = "0xF51CC8")]
				[CompilerGenerated]
				set
				{
				}
			}

			[Token(Token = "0x60017AE")]
			[Address(RVA = "0xF51CD0", Offset = "0xF51CD0", VA = "0xF51CD0")]
			public Context()
			{
			}
		}

		[Token(Token = "0x170002AC")]
		[DoNotSerialize]
		public ValueInput _bounds
		{
			[Token(Token = "0x60017A0")]
			[Address(RVA = "0xF5181C", Offset = "0xF5181C", VA = "0xF5181C")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x60017A1")]
			[Address(RVA = "0xF51824", Offset = "0xF51824", VA = "0xF51824")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x170002AD")]
		[DoNotSerialize]
		public ValueInput _postionToFace
		{
			[Token(Token = "0x60017A2")]
			[Address(RVA = "0xF5182C", Offset = "0xF5182C", VA = "0xF5182C")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x60017A3")]
			[Address(RVA = "0xF51834", Offset = "0xF51834", VA = "0xF51834")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x170002AE")]
		[Inspectable]
		[Serialize]
		public float facingRange
		{
			[Token(Token = "0x60017A4")]
			[Address(RVA = "0xF5183C", Offset = "0xF5183C", VA = "0xF5183C")]
			[CompilerGenerated]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60017A5")]
			[Address(RVA = "0xF51844", Offset = "0xF51844", VA = "0xF51844")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x60017A6")]
		[Address(RVA = "0xF5184C", Offset = "0xF5184C", VA = "0xF5184C")]
		public ContinueWhenFacingUnit()
		{
		}

		[Token(Token = "0x60017A7")]
		[Address(RVA = "0xF51894", Offset = "0xF51894", VA = "0xF51894", Slot = "67")]
		protected override void Definition()
		{
		}

		[Token(Token = "0x60017A8")]
		[Address(RVA = "0xF5197C", Offset = "0xF5197C", VA = "0xF5197C", Slot = "74")]
		protected override Context BuildContext(global::Bolt.Flow flow)
		{
			return null;
		}

		[Token(Token = "0x60017A9")]
		[Address(RVA = "0xF51A54", Offset = "0xF51A54", VA = "0xF51A54", Slot = "73")]
		protected override bool Condition(Context context)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000429")]
	[UnitCategory("Flow")]
	public class ContinueWhenInAreaUnit : ContinueWhenCameraUnit<ContinueWhenInAreaUnit.Context>
	{
		[Token(Token = "0x200042A")]
		public class Context : BaseContext
		{
			[Token(Token = "0x170002B2")]
			public BoundingBox boundingBox
			{
				[Token(Token = "0x60017B5")]
				[Address(RVA = "0xF51F9C", Offset = "0xF51F9C", VA = "0xF51F9C")]
				[CompilerGenerated]
				get
				{
					return null;
				}
				[Token(Token = "0x60017B6")]
				[Address(RVA = "0xF51FA4", Offset = "0xF51FA4", VA = "0xF51FA4")]
				[CompilerGenerated]
				set
				{
				}
			}

			[Token(Token = "0x60017B7")]
			[Address(RVA = "0xF51FAC", Offset = "0xF51FAC", VA = "0xF51FAC")]
			public Context()
			{
			}
		}

		[Token(Token = "0x170002B1")]
		[DoNotSerialize]
		public ValueInput _bounds
		{
			[Token(Token = "0x60017AF")]
			[Address(RVA = "0xF51D18", Offset = "0xF51D18", VA = "0xF51D18")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x60017B0")]
			[Address(RVA = "0xF51D20", Offset = "0xF51D20", VA = "0xF51D20")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x60017B1")]
		[Address(RVA = "0xF51D28", Offset = "0xF51D28", VA = "0xF51D28", Slot = "67")]
		protected override void Definition()
		{
		}

		[Token(Token = "0x60017B2")]
		[Address(RVA = "0xF51DC0", Offset = "0xF51DC0", VA = "0xF51DC0", Slot = "74")]
		protected override Context BuildContext(global::Bolt.Flow flow)
		{
			return null;
		}

		[Token(Token = "0x60017B3")]
		[Address(RVA = "0xF51E64", Offset = "0xF51E64", VA = "0xF51E64", Slot = "73")]
		protected override bool Condition(Context context)
		{
			return default(bool);
		}

		[Token(Token = "0x60017B4")]
		[Address(RVA = "0xF51F54", Offset = "0xF51F54", VA = "0xF51F54")]
		public ContinueWhenInAreaUnit()
		{
		}
	}
	[Token(Token = "0x200042B")]
	[UnitCategory("Flow")]
	public sealed class EnableStoryObjectCheckpointsUnit : Unit, IGraphElementWithData, IGraphElement, IGraphItem, INotifiedCollectionItem, IDisposable, IPrewarmable, IAotStubbable, IIdentifiable
	{
		[Token(Token = "0x200042C")]
		private class Data : IGraphElementData
		{
			[Token(Token = "0x60017C2")]
			[Address(RVA = "0xF52088", Offset = "0xF52088", VA = "0xF52088")]
			public Data()
			{
			}
		}

		[Token(Token = "0x170002B3")]
		[Inspectable]
		[Serialize]
		public StoryObjectCheckpointProperties _storyObjectCheckpointProperties
		{
			[Token(Token = "0x60017B8")]
			[Address(RVA = "0xF51FF4", Offset = "0xF51FF4", VA = "0xF51FF4")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x60017B9")]
			[Address(RVA = "0xF51FFC", Offset = "0xF51FFC", VA = "0xF51FFC")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x170002B4")]
		[PortLabelHidden]
		[DoNotSerialize]
		public ControlInput enter
		{
			[Token(Token = "0x60017BA")]
			[Address(RVA = "0xF52004", Offset = "0xF52004", VA = "0xF52004")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x60017BB")]
			[Address(RVA = "0xF5200C", Offset = "0xF5200C", VA = "0xF5200C")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x170002B5")]
		[DoNotSerialize]
		[PortLabelHidden]
		public ControlOutput exit
		{
			[Token(Token = "0x60017BC")]
			[Address(RVA = "0xF52014", Offset = "0xF52014", VA = "0xF52014")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x60017BD")]
			[Address(RVA = "0xF5201C", Offset = "0xF5201C", VA = "0xF5201C")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x60017BE")]
		[Address(RVA = "0xF52024", Offset = "0xF52024", VA = "0xF52024")]
		public EnableStoryObjectCheckpointsUnit()
		{
		}

		[Token(Token = "0x60017BF")]
		[Address(RVA = "0xF5202C", Offset = "0xF5202C", VA = "0xF5202C", Slot = "72")]
		public IGraphElementData CreateData()
		{
			return null;
		}

		[Token(Token = "0x60017C0")]
		[Address(RVA = "0xF52090", Offset = "0xF52090", VA = "0xF52090", Slot = "67")]
		protected override void Definition()
		{
		}

		[Token(Token = "0x60017C1")]
		[Address(RVA = "0xF52194", Offset = "0xF52194", VA = "0xF52194")]
		private ControlOutput Run(global::Bolt.Flow flow)
		{
			return null;
		}
	}
	[Token(Token = "0x200042D")]
	[UnitCategory("Flow")]
	public sealed class EndAnimatedSequenceUnit : Unit, IGraphElementWithData, IGraphElement, IGraphItem, INotifiedCollectionItem, IDisposable, IPrewarmable, IAotStubbable, IIdentifiable
	{
		[Token(Token = "0x200042E")]
		private class Data : IGraphElementData
		{
			[Token(Token = "0x60017CB")]
			[Address(RVA = "0xF522F4", Offset = "0xF522F4", VA = "0xF522F4")]
			public Data()
			{
			}
		}

		[Token(Token = "0x170002B6")]
		[DoNotSerialize]
		[PortLabelHidden]
		public ControlInput enter
		{
			[Token(Token = "0x60017C3")]
			[Address(RVA = "0xF52270", Offset = "0xF52270", VA = "0xF52270")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x60017C4")]
			[Address(RVA = "0xF52278", Offset = "0xF52278", VA = "0xF52278")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x170002B7")]
		[DoNotSerialize]
		[PortLabelHidden]
		public ControlOutput exit
		{
			[Token(Token = "0x60017C5")]
			[Address(RVA = "0xF52280", Offset = "0xF52280", VA = "0xF52280")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x60017C6")]
			[Address(RVA = "0xF52288", Offset = "0xF52288", VA = "0xF52288")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x60017C7")]
		[Address(RVA = "0xF52290", Offset = "0xF52290", VA = "0xF52290")]
		public EndAnimatedSequenceUnit()
		{
		}

		[Token(Token = "0x60017C8")]
		[Address(RVA = "0xF52298", Offset = "0xF52298", VA = "0xF52298", Slot = "72")]
		public IGraphElementData CreateData()
		{
			return null;
		}

		[Token(Token = "0x60017C9")]
		[Address(RVA = "0xF522FC", Offset = "0xF522FC", VA = "0xF522FC", Slot = "67")]
		protected override void Definition()
		{
		}

		[Token(Token = "0x60017CA")]
		[Address(RVA = "0xF52400", Offset = "0xF52400", VA = "0xF52400")]
		private ControlOutput Run(global::Bolt.Flow flow)
		{
			return null;
		}
	}
	[Token(Token = "0x200042F")]
	[RenamedFrom("LerpCamera")]
	[RenamedFrom("Flow.Bolt.LerpCamera")]
	[UnitCategory("Flow")]
	public sealed class LerpCameraUnit : Unit
	{
		[Token(Token = "0x2000430")]
		public enum EPlatformSupport
		{
			[Token(Token = "0x400137B")]
			FlatScreenOnly,
			[Token(Token = "0x400137C")]
			XrOnly,
			[Token(Token = "0x400137D")]
			Both
		}

		[Token(Token = "0x2000431")]
		[CompilerGenerated]
		private sealed class <Run>d__27 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400137E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400137F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001380")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public LerpCameraUnit <>4__this;

			[Token(Token = "0x4001381")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public global::Bolt.Flow flow;

			[Token(Token = "0x4001382")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <lerpDuration>5__2;

			[Token(Token = "0x4001383")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private Transform <targetTransform>5__3;

			[Token(Token = "0x4001384")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private Quaternion <rotationStart>5__4;

			[Token(Token = "0x4001385")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			private Quaternion <rotationEnd>5__5;

			[Token(Token = "0x4001386")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			private Vector3 <positionStart>5__6;

			[Token(Token = "0x4001387")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
			private Vector3 <positionEnd>5__7;

			[Token(Token = "0x4001388")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
			private FsCameraDetacher <cameraDetacher>5__8;

			[Token(Token = "0x4001389")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
			private Transform <transformToLerp>5__9;

			[Token(Token = "0x400138A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
			private float <runTime>5__10;

			[Token(Token = "0x170002BE")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60017DE")]
				[Address(RVA = "0xF52FB4", Offset = "0xF52FB4", VA = "0xF52FB4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002BF")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60017E0")]
				[Address(RVA = "0xF52FFC", Offset = "0xF52FFC", VA = "0xF52FFC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60017DB")]
			[Address(RVA = "0xF527C8", Offset = "0xF527C8", VA = "0xF527C8")]
			[DebuggerHidden]
			public <Run>d__27(int <>1__state)
			{
			}

			[Token(Token = "0x60017DC")]
			[Address(RVA = "0xF527F0", Offset = "0xF527F0", VA = "0xF527F0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60017DD")]
			[Address(RVA = "0xF527F4", Offset = "0xF527F4", VA = "0xF527F4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60017DF")]
			[Address(RVA = "0xF52FBC", Offset = "0xF52FBC", VA = "0xF52FBC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x170002B8")]
		[PortLabelHidden]
		[DoNotSerialize]
		public ControlInput enter
		{
			[Token(Token = "0x60017CC")]
			[Address(RVA = "0xF524E4", Offset = "0xF524E4", VA = "0xF524E4")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x60017CD")]
			[Address(RVA = "0xF524EC", Offset = "0xF524EC", VA = "0xF524EC")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x170002B9")]
		[DoNotSerialize]
		[PortLabelHidden]
		public ControlOutput exit
		{
			[Token(Token = "0x60017CE")]
			[Address(RVA = "0xF524F4", Offset = "0xF524F4", VA = "0xF524F4")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x60017CF")]
			[Address(RVA = "0xF524FC", Offset = "0xF524FC", VA = "0xF524FC")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x170002BA")]
		[DoNotSerialize]
		public ValueInput _mainCamera
		{
			[Token(Token = "0x60017D0")]
			[Address(RVA = "0xF52504", Offset = "0xF52504", VA = "0xF52504")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x60017D1")]
			[Address(RVA = "0xF5250C", Offset = "0xF5250C", VA = "0xF5250C")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x170002BB")]
		[DoNotSerialize]
		public ValueInput _targetTransform
		{
			[Token(Token = "0x60017D2")]
			[Address(RVA = "0xF52514", Offset = "0xF52514", VA = "0xF52514")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x60017D3")]
			[Address(RVA = "0xF5251C", Offset = "0xF5251C", VA = "0xF5251C")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x170002BC")]
		[DoNotSerialize]
		public ValueInput _timeDuration
		{
			[Token(Token = "0x60017D4")]
			[Address(RVA = "0xF52524", Offset = "0xF52524", VA = "0xF52524")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x60017D5")]
			[Address(RVA = "0xF5252C", Offset = "0xF5252C", VA = "0xF5252C")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x170002BD")]
		[Inspectable]
		[UnitHeaderInspectable]
		[Serialize]
		public EPlatformSupport _platformSupport
		{
			[Token(Token = "0x60017D6")]
			[Address(RVA = "0xF52534", Offset = "0xF52534", VA = "0xF52534")]
			[CompilerGenerated]
			get
			{
				return default(EPlatformSupport);
			}
			[Token(Token = "0x60017D7")]
			[Address(RVA = "0xF5253C", Offset = "0xF5253C", VA = "0xF5253C")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x60017D8")]
		[Address(RVA = "0xF52544", Offset = "0xF52544", VA = "0xF52544")]
		public LerpCameraUnit()
		{
		}

		[Token(Token = "0x60017D9")]
		[Address(RVA = "0xF5254C", Offset = "0xF5254C", VA = "0xF5254C", Slot = "67")]
		protected override void Definition()
		{
		}

		[Token(Token = "0x60017DA")]
		[Address(RVA = "0xF52738", Offset = "0xF52738", VA = "0xF52738")]
		[IteratorStateMachine(typeof(<Run>d__27))]
		private IEnumerator Run(global::Bolt.Flow flow)
		{
			return null;
		}
	}
	[Token(Token = "0x2000432")]
	[UnitCategory("Flow")]
	public sealed class SceneTransitionUnit : Unit, IGraphElementWithData, IGraphElement, IGraphItem, INotifiedCollectionItem, IDisposable, IPrewarmable, IAotStubbable, IIdentifiable
	{
		[Token(Token = "0x2000433")]
		private class Data : IGraphElementData
		{
			[Token(Token = "0x60017ED")]
			[Address(RVA = "0xF530AC", Offset = "0xF530AC", VA = "0xF530AC")]
			public Data()
			{
			}
		}

		[Token(Token = "0x170002C0")]
		[Inspectable]
		[Serialize]
		public string sceneName
		{
			[Token(Token = "0x60017E1")]
			[Address(RVA = "0xF53004", Offset = "0xF53004", VA = "0xF53004")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x60017E2")]
			[Address(RVA = "0xF5300C", Offset = "0xF5300C", VA = "0xF5300C")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x170002C1")]
		[Inspectable]
		[Serialize]
		public TransitionConfig transition
		{
			[Token(Token = "0x60017E3")]
			[Address(RVA = "0xF53014", Offset = "0xF53014", VA = "0xF53014")]
			[CompilerGenerated]
			get
			{
				return default(TransitionConfig);
			}
			[Token(Token = "0x60017E4")]
			[Address(RVA = "0xF53020", Offset = "0xF53020", VA = "0xF53020")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x170002C2")]
		[PortLabelHidden]
		[DoNotSerialize]
		public ControlInput enter
		{
			[Token(Token = "0x60017E5")]
			[Address(RVA = "0xF53028", Offset = "0xF53028", VA = "0xF53028")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x60017E6")]
			[Address(RVA = "0xF53030", Offset = "0xF53030", VA = "0xF53030")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x170002C3")]
		[DoNotSerialize]
		[PortLabelHidden]
		public ControlOutput exit
		{
			[Token(Token = "0x60017E7")]
			[Address(RVA = "0xF53038", Offset = "0xF53038", VA = "0xF53038")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x60017E8")]
			[Address(RVA = "0xF53040", Offset = "0xF53040", VA = "0xF53040")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x60017E9")]
		[Address(RVA = "0xF53048", Offset = "0xF53048", VA = "0xF53048")]
		public SceneTransitionUnit()
		{
		}

		[Token(Token = "0x60017EA")]
		[Address(RVA = "0xF53050", Offset = "0xF53050", VA = "0xF53050", Slot = "72")]
		public IGraphElementData CreateData()
		{
			return null;
		}

		[Token(Token = "0x60017EB")]
		[Address(RVA = "0xF530B4", Offset = "0xF530B4", VA = "0xF530B4", Slot = "67")]
		protected override void Definition()
		{
		}

		[Token(Token = "0x60017EC")]
		[Address(RVA = "0xF531B8", Offset = "0xF531B8", VA = "0xF531B8")]
		private ControlOutput Run(global::Bolt.Flow flow)
		{
			return null;
		}
	}
	[Token(Token = "0x2000434")]
	[UnitCategory("Flow")]
	public sealed class StartAnimatedSequenceUnit : Unit, IGraphElementWithData, IGraphElement, IGraphItem, INotifiedCollectionItem, IDisposable, IPrewarmable, IAotStubbable, IIdentifiable
	{
		[Token(Token = "0x2000435")]
		private class Data : IGraphElementData
		{
			[Token(Token = "0x60017F6")]
			[Address(RVA = "0xF5338C", Offset = "0xF5338C", VA = "0xF5338C")]
			public Data()
			{
			}
		}

		[Token(Token = "0x170002C4")]
		[DoNotSerialize]
		[PortLabelHidden]
		public ControlInput enter
		{
			[Token(Token = "0x60017EE")]
			[Address(RVA = "0xF53308", Offset = "0xF53308", VA = "0xF53308")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x60017EF")]
			[Address(RVA = "0xF53310", Offset = "0xF53310", VA = "0xF53310")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x170002C5")]
		[PortLabelHidden]
		[DoNotSerialize]
		public ControlOutput exit
		{
			[Token(Token = "0x60017F0")]
			[Address(RVA = "0xF53318", Offset = "0xF53318", VA = "0xF53318")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x60017F1")]
			[Address(RVA = "0xF53320", Offset = "0xF53320", VA = "0xF53320")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x60017F2")]
		[Address(RVA = "0xF53328", Offset = "0xF53328", VA = "0xF53328")]
		public StartAnimatedSequenceUnit()
		{
		}

		[Token(Token = "0x60017F3")]
		[Address(RVA = "0xF53330", Offset = "0xF53330", VA = "0xF53330", Slot = "72")]
		public IGraphElementData CreateData()
		{
			return null;
		}

		[Token(Token = "0x60017F4")]
		[Address(RVA = "0xF53394", Offset = "0xF53394", VA = "0xF53394", Slot = "67")]
		protected override void Definition()
		{
		}

		[Token(Token = "0x60017F5")]
		[Address(RVA = "0xF53498", Offset = "0xF53498", VA = "0xF53498")]
		private ControlOutput Run(global::Bolt.Flow flow)
		{
			return null;
		}
	}
	[Token(Token = "0x2000436")]
	public class StartButtonFlashUnit : Unit
	{
		[Token(Token = "0x2000437")]
		[CompilerGenerated]
		private sealed class <Run>d__14 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001394")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001395")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001396")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public StartButtonFlashUnit <>4__this;

			[Token(Token = "0x170002C9")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001803")]
				[Address(RVA = "0xF53924", Offset = "0xF53924", VA = "0xF53924", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002CA")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001805")]
				[Address(RVA = "0xF5396C", Offset = "0xF5396C", VA = "0xF5396C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001800")]
			[Address(RVA = "0xF53728", Offset = "0xF53728", VA = "0xF53728")]
			[DebuggerHidden]
			public <Run>d__14(int <>1__state)
			{
			}

			[Token(Token = "0x6001801")]
			[Address(RVA = "0xF53750", Offset = "0xF53750", VA = "0xF53750", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001802")]
			[Address(RVA = "0xF53754", Offset = "0xF53754", VA = "0xF53754", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001804")]
			[Address(RVA = "0xF5392C", Offset = "0xF5392C", VA = "0xF5392C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x170002C6")]
		[Inspectable]
		[Serialize]
		public int phonelineNumber
		{
			[Token(Token = "0x60017F7")]
			[Address(RVA = "0xF53578", Offset = "0xF53578", VA = "0xF53578")]
			[CompilerGenerated]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60017F8")]
			[Address(RVA = "0xF53580", Offset = "0xF53580", VA = "0xF53580")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x170002C7")]
		[PortLabelHidden]
		[DoNotSerialize]
		public ControlInput enter
		{
			[Token(Token = "0x60017F9")]
			[Address(RVA = "0xF53588", Offset = "0xF53588", VA = "0xF53588")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x60017FA")]
			[Address(RVA = "0xF53590", Offset = "0xF53590", VA = "0xF53590")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x170002C8")]
		[DoNotSerialize]
		[PortLabelHidden]
		public ControlOutput exit
		{
			[Token(Token = "0x60017FB")]
			[Address(RVA = "0xF53598", Offset = "0xF53598", VA = "0xF53598")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x60017FC")]
			[Address(RVA = "0xF535A0", Offset = "0xF535A0", VA = "0xF535A0")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x60017FD")]
		[Address(RVA = "0xF535A8", Offset = "0xF535A8", VA = "0xF535A8")]
		public StartButtonFlashUnit()
		{
		}

		[Token(Token = "0x60017FE")]
		[Address(RVA = "0xF535B0", Offset = "0xF535B0", VA = "0xF535B0", Slot = "67")]
		protected override void Definition()
		{
		}

		[Token(Token = "0x60017FF")]
		[Address(RVA = "0xF536B4", Offset = "0xF536B4", VA = "0xF536B4")]
		[IteratorStateMachine(typeof(<Run>d__14))]
		private IEnumerator Run(global::Bolt.Flow flow)
		{
			return null;
		}
	}
	[Token(Token = "0x2000438")]
	[UnitCategory("Flow")]
	public sealed class StartFadingSequenceUnit : Unit, IGraphElementWithData, IGraphElement, IGraphItem, INotifiedCollectionItem, IDisposable, IPrewarmable, IAotStubbable, IIdentifiable
	{
		[Token(Token = "0x2000439")]
		private class Data : IGraphElementData
		{
			[Token(Token = "0x600181B")]
			[Address(RVA = "0xF53A64", Offset = "0xF53A64", VA = "0xF53A64")]
			public Data()
			{
			}
		}

		[Token(Token = "0x4001397")]
		private const float c_defaultFadeInDuration = 1f;

		[Token(Token = "0x4001398")]
		private const float c_defaultGraphicsDuration = 5f;

		[Token(Token = "0x4001399")]
		private const float c_defaultFadeOutDuration = 1f;

		[Token(Token = "0x170002CB")]
		[Serialize]
		[Inspectable]
		public StoryObjectCheckpointProperties _storyObjectCheckpointProperties
		{
			[Token(Token = "0x6001806")]
			[Address(RVA = "0xF53974", Offset = "0xF53974", VA = "0xF53974")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001807")]
			[Address(RVA = "0xF5397C", Offset = "0xF5397C", VA = "0xF5397C")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x170002CC")]
		[Serialize]
		[Inspectable]
		public float fadeInDuration
		{
			[Token(Token = "0x6001808")]
			[Address(RVA = "0xF53984", Offset = "0xF53984", VA = "0xF53984")]
			[CompilerGenerated]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001809")]
			[Address(RVA = "0xF5398C", Offset = "0xF5398C", VA = "0xF5398C")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x170002CD")]
		[Inspectable]
		[Serialize]
		public float fadeOutDuration
		{
			[Token(Token = "0x600180A")]
			[Address(RVA = "0xF53994", Offset = "0xF53994", VA = "0xF53994")]
			[CompilerGenerated]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600180B")]
			[Address(RVA = "0xF5399C", Offset = "0xF5399C", VA = "0xF5399C")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x170002CE")]
		[Inspectable]
		[Serialize]
		public float graphicsDuration
		{
			[Token(Token = "0x600180C")]
			[Address(RVA = "0xF539A4", Offset = "0xF539A4", VA = "0xF539A4")]
			[CompilerGenerated]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600180D")]
			[Address(RVA = "0xF539AC", Offset = "0xF539AC", VA = "0xF539AC")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x170002CF")]
		[Serialize]
		[Inspectable]
		public EventReference FmodFadeEvent
		{
			[Token(Token = "0x600180E")]
			[Address(RVA = "0xF539B4", Offset = "0xF539B4", VA = "0xF539B4")]
			[CompilerGenerated]
			get
			{
				return default(EventReference);
			}
			[Token(Token = "0x600180F")]
			[Address(RVA = "0xF539C4", Offset = "0xF539C4", VA = "0xF539C4")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x170002D0")]
		[DoNotSerialize]
		[PortLabelHidden]
		public ControlInput enter
		{
			[Token(Token = "0x6001810")]
			[Address(RVA = "0xF539D0", Offset = "0xF539D0", VA = "0xF539D0")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001811")]
			[Address(RVA = "0xF539D8", Offset = "0xF539D8", VA = "0xF539D8")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x170002D1")]
		[PortLabelHidden]
		[DoNotSerialize]
		public ControlOutput exit
		{
			[Token(Token = "0x6001812")]
			[Address(RVA = "0xF539E0", Offset = "0xF539E0", VA = "0xF539E0")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001813")]
			[Address(RVA = "0xF539E8", Offset = "0xF539E8", VA = "0xF539E8")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x6001814")]
		[Address(RVA = "0xF539F0", Offset = "0xF539F0", VA = "0xF539F0")]
		public StartFadingSequenceUnit()
		{
		}

		[Token(Token = "0x6001815")]
		[Address(RVA = "0xF53A08", Offset = "0xF53A08", VA = "0xF53A08", Slot = "72")]
		public IGraphElementData CreateData()
		{
			return null;
		}

		[Token(Token = "0x6001816")]
		[Address(RVA = "0xF53A6C", Offset = "0xF53A6C", VA = "0xF53A6C", Slot = "67")]
		protected override void Definition()
		{
		}

		[Token(Token = "0x6001817")]
		[Address(RVA = "0xF53B70", Offset = "0xF53B70", VA = "0xF53B70")]
		private ControlOutput Run(global::Bolt.Flow flow)
		{
			return null;
		}

		[Token(Token = "0x6001818")]
		[Address(RVA = "0xF53F10", Offset = "0xF53F10", VA = "0xF53F10")]
		private void OnFadedIn(GameStateContext SharedContextInformation)
		{
		}

		[Token(Token = "0x6001819")]
		[Address(RVA = "0xF5416C", Offset = "0xF5416C", VA = "0xF5416C")]
		private void OnUnFaded(GameStateContext sharedContextInformation)
		{
		}

		[Token(Token = "0x600181A")]
		[Address(RVA = "0xF5418C", Offset = "0xF5418C", VA = "0xF5418C")]
		private UnityEngine.Sprite GetFadedGraphics()
		{
			return null;
		}
	}
}
namespace Dressing
{
	[Token(Token = "0x200043A")]
	public class Character : MonoBehaviour, IInitialisable
	{
		[Token(Token = "0x40013A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private CharacterAsset _characterAsset;

		[Token(Token = "0x40013A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private string _animatorParameter;

		[Token(Token = "0x40013A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Animator _animator;

		[Token(Token = "0x40013A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int _hash;

		[Token(Token = "0x40013A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private bool _wasSpeaking;

		[Token(Token = "0x600181C")]
		[Address(RVA = "0xF541B4", Offset = "0xF541B4", VA = "0xF541B4")]
		private void Awake()
		{
		}

		[Token(Token = "0x600181D")]
		[Address(RVA = "0xF54220", Offset = "0xF54220", VA = "0xF54220", Slot = "4")]
		public bool Initialise()
		{
			return default(bool);
		}

		[Token(Token = "0x600181E")]
		[Address(RVA = "0xF543C8", Offset = "0xF543C8", VA = "0xF543C8")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x600181F")]
		[Address(RVA = "0xF544DC", Offset = "0xF544DC", VA = "0xF544DC")]
		private void OnCurrentSpeakerChangedCallback(CharacterAsset character)
		{
		}

		[Token(Token = "0x6001820")]
		[Address(RVA = "0xF54608", Offset = "0xF54608", VA = "0xF54608")]
		public Character()
		{
		}
	}
	[Token(Token = "0x200043B")]
	public class Clock : UpdatableMonoBehaviour
	{
		[Token(Token = "0x40013A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Transform seconds;

		[Token(Token = "0x40013A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Transform minutes;

		[Token(Token = "0x40013A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Transform hours;

		[Token(Token = "0x40013A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Quaternion initialRotationSeconds;

		[Token(Token = "0x40013AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Quaternion initialRotationMinutes;

		[Token(Token = "0x40013AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Quaternion initialRotationHours;

		[Token(Token = "0x40013AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private DateTime previous;

		[Token(Token = "0x6001821")]
		[Address(RVA = "0xF54670", Offset = "0xF54670", VA = "0xF54670", Slot = "6")]
		public override bool Initialise()
		{
			return default(bool);
		}

		[Token(Token = "0x6001822")]
		[Address(RVA = "0xF54738", Offset = "0xF54738", VA = "0xF54738", Slot = "7")]
		public override void OnUpdate(float dt)
		{
		}

		[Token(Token = "0x6001823")]
		[Address(RVA = "0xF54990", Offset = "0xF54990", VA = "0xF54990")]
		private static Quaternion ConvertToRotation(float value, float range, Quaternion start, out float progress)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6001824")]
		[Address(RVA = "0xF54A88", Offset = "0xF54A88", VA = "0xF54A88")]
		public Clock()
		{
		}
	}
}
namespace UnityEngine.Animations.Rigging
{
	[Token(Token = "0x200043C")]
	public static class ExtendedAnimationRuntimeUtils
	{
		[Token(Token = "0x40013AD")]
		private const float k_SqrEpsilon = 1E-08f;

		[Token(Token = "0x6001825")]
		[Address(RVA = "0xF54A90", Offset = "0xF54A90", VA = "0xF54A90")]
		public static void SolveTwoBoneIKMultiTarget(AnimationStream stream, ReadWriteTransformHandle root, ReadWriteTransformHandle mid, ReadWriteTransformHandle tip, ReadOnlyTransformHandle target1, ReadOnlyTransformHandle target2, float targetBlend, ReadOnlyTransformHandle hint, float posWeight, float rotWeight, float hintWeight, Vector2 limbLengths, AffineTransform targetOffset)
		{
		}

		[Token(Token = "0x6001826")]
		[Address(RVA = "0xF5573C", Offset = "0xF5573C", VA = "0xF5573C")]
		private static float TriangleAngle(float aLen, float aLen1, float aLen2)
		{
			return default(float);
		}

		[Token(Token = "0x6001827")]
		[Address(RVA = "0xF55778", Offset = "0xF55778", VA = "0xF55778")]
		public static bool SolveFABRIK(ref NativeArray<Vector3> linkPositions, ref NativeArray<float> linkLengths, Vector3 target, float tolerance, float maxReach, int maxIterations)
		{
			return default(bool);
		}

		[Token(Token = "0x6001828")]
		[Address(RVA = "0xF55C48", Offset = "0xF55C48", VA = "0xF55C48")]
		public static float SqrDistance(Vector3 p0, Vector3 p1)
		{
			return default(float);
		}

		[Token(Token = "0x6001829")]
		[Address(RVA = "0xF55C40", Offset = "0xF55C40", VA = "0xF55C40")]
		public static float Square(float value)
		{
			return default(float);
		}

		[Token(Token = "0x600182A")]
		[Address(RVA = "0xF55C6C", Offset = "0xF55C6C", VA = "0xF55C6C")]
		public static Vector3 Lerp(Vector3 a, Vector3 b, Vector3 t)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600182B")]
		[Address(RVA = "0xF55D2C", Offset = "0xF55D2C", VA = "0xF55D2C")]
		public static float Select(float a, float b, float c)
		{
			return default(float);
		}

		[Token(Token = "0x600182C")]
		[Address(RVA = "0xF55D38", Offset = "0xF55D38", VA = "0xF55D38")]
		public static Vector3 Select(Vector3 a, Vector3 b, Vector3 c)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600182D")]
		[Address(RVA = "0xF55D5C", Offset = "0xF55D5C", VA = "0xF55D5C")]
		public static Vector3 ProjectOnPlane(Vector3 vector, Vector3 planeNormal)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600182E")]
		[Address(RVA = "0xF55DAC", Offset = "0xF55DAC", VA = "0xF55DAC")]
		public static float Sum(AnimationJobCache cache, CacheIndex index, int count)
		{
			return default(float);
		}

		[Token(Token = "0x600182F")]
		[Address(RVA = "0xF55E1C", Offset = "0xF55E1C", VA = "0xF55E1C")]
		public static float Sum(NativeArray<float> floatBuffer)
		{
			return default(float);
		}

		[Token(Token = "0x6001830")]
		[Address(RVA = "0xF55E48", Offset = "0xF55E48", VA = "0xF55E48")]
		public static void PassThrough(AnimationStream stream, ReadWriteTransformHandle handle)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200043D")]
	public struct TwoBoneIKMultiTargetConstraintData : IAnimationJobData
	{
		[Token(Token = "0x40013AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private Transform m_Root;

		[Token(Token = "0x40013AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		[SerializeField]
		private Transform m_Mid;

		[Token(Token = "0x40013B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		private Transform m_Tip;

		[Token(Token = "0x40013B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SyncSceneToStream]
		[SerializeField]
		private Transform m_Target1;

		[Token(Token = "0x40013B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SyncSceneToStream]
		[SerializeField]
		private Transform m_Target2;

		[Token(Token = "0x40013B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SyncSceneToStream]
		[SerializeField]
		private Transform m_Hint;

		[Token(Token = "0x40013B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		[Range(0f, 1f)]
		[SyncSceneToStream]
		private float m_TargetPositionWeight;

		[Token(Token = "0x40013B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[Range(0f, 1f)]
		[SerializeField]
		[SyncSceneToStream]
		private float m_TargetRotationWeight;

		[Token(Token = "0x40013B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		[Range(0f, 1f)]
		[SyncSceneToStream]
		private float m_HintWeight;

		[Token(Token = "0x40013B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[SyncSceneToStream]
		[SerializeField]
		[Range(0f, 1f)]
		private float m_TargetBlend;

		[Token(Token = "0x40013B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[NotKeyable]
		[SerializeField]
		private bool m_MaintainTargetPositionOffset;

		[Token(Token = "0x40013B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
		[NotKeyable]
		[SerializeField]
		private bool m_MaintainTargetRotationOffset;

		[Token(Token = "0x170002D2")]
		public Transform root
		{
			[Token(Token = "0x6001831")]
			[Address(RVA = "0xF55EFC", Offset = "0xF55EFC", VA = "0xF55EFC")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001832")]
			[Address(RVA = "0xF55F04", Offset = "0xF55F04", VA = "0xF55F04")]
			set
			{
			}
		}

		[Token(Token = "0x170002D3")]
		public Transform mid
		{
			[Token(Token = "0x6001833")]
			[Address(RVA = "0xF55F0C", Offset = "0xF55F0C", VA = "0xF55F0C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001834")]
			[Address(RVA = "0xF55F14", Offset = "0xF55F14", VA = "0xF55F14")]
			set
			{
			}
		}

		[Token(Token = "0x170002D4")]
		public Transform tip
		{
			[Token(Token = "0x6001835")]
			[Address(RVA = "0xF55F1C", Offset = "0xF55F1C", VA = "0xF55F1C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001836")]
			[Address(RVA = "0xF55F24", Offset = "0xF55F24", VA = "0xF55F24")]
			set
			{
			}
		}

		[Token(Token = "0x170002D5")]
		public Transform target1
		{
			[Token(Token = "0x6001837")]
			[Address(RVA = "0xF55F2C", Offset = "0xF55F2C", VA = "0xF55F2C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001838")]
			[Address(RVA = "0xF55F34", Offset = "0xF55F34", VA = "0xF55F34")]
			set
			{
			}
		}

		[Token(Token = "0x170002D6")]
		public Transform target2
		{
			[Token(Token = "0x6001839")]
			[Address(RVA = "0xF55F3C", Offset = "0xF55F3C", VA = "0xF55F3C")]
			get
			{
				return null;
			}
			[Token(Token = "0x600183A")]
			[Address(RVA = "0xF55F44", Offset = "0xF55F44", VA = "0xF55F44")]
			set
			{
			}
		}

		[Token(Token = "0x170002D7")]
		public Transform hint
		{
			[Token(Token = "0x600183B")]
			[Address(RVA = "0xF55F4C", Offset = "0xF55F4C", VA = "0xF55F4C")]
			get
			{
				return null;
			}
			[Token(Token = "0x600183C")]
			[Address(RVA = "0xF55F54", Offset = "0xF55F54", VA = "0xF55F54")]
			set
			{
			}
		}

		[Token(Token = "0x170002D8")]
		public float targetBlend
		{
			[Token(Token = "0x600183D")]
			[Address(RVA = "0xF55F5C", Offset = "0xF55F5C", VA = "0xF55F5C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600183E")]
			[Address(RVA = "0xF55F64", Offset = "0xF55F64", VA = "0xF55F64")]
			set
			{
			}
		}

		[Token(Token = "0x170002D9")]
		public float targetPositionWeight
		{
			[Token(Token = "0x600183F")]
			[Address(RVA = "0xF55F6C", Offset = "0xF55F6C", VA = "0xF55F6C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001840")]
			[Address(RVA = "0xF55F74", Offset = "0xF55F74", VA = "0xF55F74")]
			set
			{
			}
		}

		[Token(Token = "0x170002DA")]
		public float targetRotationWeight
		{
			[Token(Token = "0x6001841")]
			[Address(RVA = "0xF55F90", Offset = "0xF55F90", VA = "0xF55F90")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001842")]
			[Address(RVA = "0xF55F98", Offset = "0xF55F98", VA = "0xF55F98")]
			set
			{
			}
		}

		[Token(Token = "0x170002DB")]
		public float hintWeight
		{
			[Token(Token = "0x6001843")]
			[Address(RVA = "0xF55FB4", Offset = "0xF55FB4", VA = "0xF55FB4")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001844")]
			[Address(RVA = "0xF55FBC", Offset = "0xF55FBC", VA = "0xF55FBC")]
			set
			{
			}
		}

		[Token(Token = "0x170002DC")]
		public bool maintainTargetPositionOffset
		{
			[Token(Token = "0x6001845")]
			[Address(RVA = "0xF55FD8", Offset = "0xF55FD8", VA = "0xF55FD8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001846")]
			[Address(RVA = "0xF55FE0", Offset = "0xF55FE0", VA = "0xF55FE0")]
			set
			{
			}
		}

		[Token(Token = "0x170002DD")]
		public bool maintainTargetRotationOffset
		{
			[Token(Token = "0x6001847")]
			[Address(RVA = "0xF55FEC", Offset = "0xF55FEC", VA = "0xF55FEC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001848")]
			[Address(RVA = "0xF55FF4", Offset = "0xF55FF4", VA = "0xF55FF4")]
			set
			{
			}
		}

		[Token(Token = "0x6001849")]
		[Address(RVA = "0xF56000", Offset = "0xF56000", VA = "0xF56000", Slot = "4")]
		private bool UnityEngine.Animations.Rigging.IAnimationJobData.IsValid()
		{
			return default(bool);
		}

		[Token(Token = "0x600184A")]
		[Address(RVA = "0xF56114", Offset = "0xF56114", VA = "0xF56114", Slot = "5")]
		private void UnityEngine.Animations.Rigging.IAnimationJobData.SetDefaultValues()
		{
		}
	}
	[Token(Token = "0x200043E")]
	[BurstCompile]
	public struct TwoBoneIKMultiTargetConstraintJob : IWeightedAnimationJob, IAnimationJob
	{
		[Token(Token = "0x40013BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ReadWriteTransformHandle root;

		[Token(Token = "0x40013BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public ReadWriteTransformHandle mid;

		[Token(Token = "0x40013BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ReadWriteTransformHandle tip;

		[Token(Token = "0x40013BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public ReadOnlyTransformHandle hint;

		[Token(Token = "0x40013BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public ReadOnlyTransformHandle target1;

		[Token(Token = "0x40013BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public ReadOnlyTransformHandle target2;

		[Token(Token = "0x40013C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public FloatProperty targetBlend;

		[Token(Token = "0x40013C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		public AffineTransform targetOffset;

		[Token(Token = "0x40013C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public Vector2 linkLengths;

		[Token(Token = "0x40013C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public FloatProperty targetPositionWeight;

		[Token(Token = "0x40013C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public FloatProperty targetRotationWeight;

		[Token(Token = "0x40013C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public FloatProperty hintWeight;

		[Token(Token = "0x40013C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		public Vector3Property offset;

		[Token(Token = "0x170002DE")]
		public FloatProperty jobWeight
		{
			[Token(Token = "0x600184B")]
			[Address(RVA = "0xF56190", Offset = "0xF56190", VA = "0xF56190", Slot = "4")]
			[CompilerGenerated]
			readonly get
			{
				return default(FloatProperty);
			}
			[Token(Token = "0x600184C")]
			[Address(RVA = "0xF5619C", Offset = "0xF5619C", VA = "0xF5619C", Slot = "5")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x600184D")]
		[Address(RVA = "0xF561A4", Offset = "0xF561A4", VA = "0xF561A4", Slot = "7")]
		public void ProcessRootMotion(AnimationStream stream)
		{
		}

		[Token(Token = "0x600184E")]
		[Address(RVA = "0xF561A8", Offset = "0xF561A8", VA = "0xF561A8", Slot = "6")]
		public void ProcessAnimation(AnimationStream stream)
		{
		}
	}
	[Token(Token = "0x200043F")]
	public interface ITwoBoneIKMultiTargetConstraintData
	{
		[Token(Token = "0x170002DF")]
		Transform root
		{
			[Token(Token = "0x600184F")]
			get;
		}

		[Token(Token = "0x170002E0")]
		Transform mid
		{
			[Token(Token = "0x6001850")]
			get;
		}

		[Token(Token = "0x170002E1")]
		Transform tip
		{
			[Token(Token = "0x6001851")]
			get;
		}

		[Token(Token = "0x170002E2")]
		Transform target1
		{
			[Token(Token = "0x6001852")]
			get;
		}

		[Token(Token = "0x170002E3")]
		Transform target2
		{
			[Token(Token = "0x6001853")]
			get;
		}

		[Token(Token = "0x170002E4")]
		float targetBlend
		{
			[Token(Token = "0x6001854")]
			get;
		}

		[Token(Token = "0x170002E5")]
		Transform hint
		{
			[Token(Token = "0x6001855")]
			get;
		}

		[Token(Token = "0x170002E6")]
		bool maintainTargetPositionOffset
		{
			[Token(Token = "0x6001856")]
			get;
		}

		[Token(Token = "0x170002E7")]
		bool maintainTargetRotationOffset
		{
			[Token(Token = "0x6001857")]
			get;
		}

		[Token(Token = "0x170002E8")]
		string targetPositionWeightFloatProperty
		{
			[Token(Token = "0x6001858")]
			get;
		}

		[Token(Token = "0x170002E9")]
		string targetRotationWeightFloatProperty
		{
			[Token(Token = "0x6001859")]
			get;
		}

		[Token(Token = "0x170002EA")]
		string hintWeightFloatProperty
		{
			[Token(Token = "0x600185A")]
			get;
		}

		[Token(Token = "0x170002EB")]
		string targetBlendFloatProperty
		{
			[Token(Token = "0x600185B")]
			get;
		}
	}
	[Token(Token = "0x2000440")]
	public class TwoBoneIKMultiTargetConstraintJobBinder<T> : AnimationJobBinder<TwoBoneIKMultiTargetConstraintJob, T> where T : struct, IAnimationJobData, ITwoBoneIKMultiTargetConstraintData
	{
		[Token(Token = "0x600185C")]
		public override TwoBoneIKMultiTargetConstraintJob Create(Animator animator, ref T data, Component component)
		{
			return default(TwoBoneIKMultiTargetConstraintJob);
		}

		[Token(Token = "0x600185D")]
		public override void Destroy(TwoBoneIKMultiTargetConstraintJob job)
		{
		}

		[Token(Token = "0x600185E")]
		public TwoBoneIKMultiTargetConstraintJobBinder()
		{
		}
	}
}
namespace Services
{
	[Token(Token = "0x2000441")]
	public interface IAnimatedSequenceHelper
	{
		[Token(Token = "0x170002EC")]
		bool isSequenceRunning
		{
			[Token(Token = "0x6001861")]
			get;
		}

		[Token(Token = "0x600185F")]
		void StartSequence();

		[Token(Token = "0x6001860")]
		void EndSequence();
	}
	[Token(Token = "0x2000442")]
	public class AnimatedSequenceHelper : MonoBehaviour, IService, IAnimatedSequenceHelper
	{
		[Token(Token = "0x40013C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool _sequenceRunning;

		[Token(Token = "0x40013C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform cameraParentOverride;

		[Token(Token = "0x170002ED")]
		public bool isSequenceRunning
		{
			[Token(Token = "0x6001867")]
			[Address(RVA = "0xF56470", Offset = "0xF56470", VA = "0xF56470", Slot = "9")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001862")]
		[Address(RVA = "0xF56458", Offset = "0xF56458", VA = "0xF56458")]
		static AnimatedSequenceHelper()
		{
		}

		[Token(Token = "0x6001863")]
		[Address(RVA = "0xF5645C", Offset = "0xF5645C", VA = "0xF5645C")]
		public AnimatedSequenceHelper()
		{
		}

		[Token(Token = "0x6001864")]
		[Address(RVA = "0xF56464", Offset = "0xF56464", VA = "0xF56464", Slot = "4")]
		public void OnStartUp()
		{
		}

		[Token(Token = "0x6001865")]
		[Address(RVA = "0xF56468", Offset = "0xF56468", VA = "0xF56468", Slot = "5")]
		public void OnCleanUp()
		{
		}

		[Token(Token = "0x6001866")]
		[Address(RVA = "0xF5646C", Offset = "0xF5646C", VA = "0xF5646C", Slot = "6")]
		public void OnUpdate(float dt)
		{
		}

		[Token(Token = "0x6001868")]
		[Address(RVA = "0xF56478", Offset = "0xF56478", VA = "0xF56478", Slot = "7")]
		public void StartSequence()
		{
		}

		[Token(Token = "0x6001869")]
		[Address(RVA = "0xF56484", Offset = "0xF56484", VA = "0xF56484", Slot = "8")]
		public void EndSequence()
		{
		}
	}
	[Token(Token = "0x2000443")]
	public struct AudioHandle : IEquatable<AudioHandle>
	{
		[Token(Token = "0x40013CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private uint _id;

		[Token(Token = "0x40013CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static uint s_nextId;

		[Token(Token = "0x600186A")]
		[Address(RVA = "0xF56574", Offset = "0xF56574", VA = "0xF56574")]
		public static AudioHandle New()
		{
			return default(AudioHandle);
		}

		[Token(Token = "0x600186B")]
		[Address(RVA = "0xF565D4", Offset = "0xF565D4", VA = "0xF565D4", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}

		[Token(Token = "0x600186C")]
		[Address(RVA = "0xF565DC", Offset = "0xF565DC", VA = "0xF565DC", Slot = "4")]
		public bool Equals(AudioHandle other)
		{
			return default(bool);
		}

		[Token(Token = "0x600186D")]
		[Address(RVA = "0xF565E4", Offset = "0xF565E4", VA = "0xF565E4", Slot = "0")]
		public override bool Equals(object obj)
		{
			return default(bool);
		}

		[Token(Token = "0x600186E")]
		[Address(RVA = "0xF56660", Offset = "0xF56660", VA = "0xF56660")]
		public static bool operator ==(AudioHandle x, AudioHandle y)
		{
			return default(bool);
		}

		[Token(Token = "0x600186F")]
		[Address(RVA = "0xF4A2D0", Offset = "0xF4A2D0", VA = "0xF4A2D0")]
		public static bool operator !=(AudioHandle x, AudioHandle y)
		{
			return default(bool);
		}

		[Token(Token = "0x6001870")]
		[Address(RVA = "0xF56680", Offset = "0xF56680", VA = "0xF56680", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x2000444")]
	public interface IAudioManager
	{
		[Token(Token = "0x2000445")]
		public struct ResumeData
		{
			[Token(Token = "0x40013CC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public List<ParameterData> parameterDataList;

			[Token(Token = "0x40013CD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public string eventName;

			[Token(Token = "0x40013CE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int time;
		}

		[Token(Token = "0x2000446")]
		public struct ParameterData
		{
			[Token(Token = "0x40013CF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public string parameterGuid;

			[Token(Token = "0x40013D0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public float parameterValue;
		}

		[Token(Token = "0x170002EE")]
		StudioListener listener
		{
			[Token(Token = "0x6001882")]
			get;
		}

		[Token(Token = "0x6001872")]
		void SetMainCamera(Camera camera);

		[Token(Token = "0x6001873")]
		AudioHandle Play2D(string eventName, float timeIn, float timeOut);

		[Token(Token = "0x6001874")]
		AudioHandle Play3D(string eventName, float timeIn, float timeOut, Vector3 position);

		[Token(Token = "0x6001875")]
		AudioHandle Play2D(EventReference eventReference, float timeIn, float timeOut);

		[Token(Token = "0x6001876")]
		AudioHandle Play3D(EventReference eventReference, float timeIn, float timeOut, Vector3 position);

		[Token(Token = "0x6001877")]
		void Stop(AudioHandle handle, bool immediate = false);

		[Token(Token = "0x6001878")]
		bool IsPlaying(AudioHandle handle);

		[Token(Token = "0x6001879")]
		bool SetParameter(AudioHandle handle, string parameterName, float value);

		[Token(Token = "0x600187A")]
		bool SetParameter(AudioHandle handle, PARAMETER_ID parameterId, float value);

		[Token(Token = "0x600187B")]
		bool GetParameter(AudioHandle handle, PARAMETER_ID parameterId, out float value);

		[Token(Token = "0x600187C")]
		bool Preload(EventReference eventReference);

		[Token(Token = "0x600187D")]
		bool Unload(EventReference eventReference);

		[Token(Token = "0x600187E")]
		void StopAllCallSfxEvents();

		[Token(Token = "0x600187F")]
		EventDescription GetEventDescription(AudioHandle handle);

		[Token(Token = "0x6001880")]
		EventInstance GetEventInstance(AudioHandle handle);

		[Token(Token = "0x6001881")]
		AudioHandle ConvertToHandle(EventReference eventReference, EventInstance eventInstance);

		[Token(Token = "0x6001883")]
		bool SerialiseHandle(FlexBufferBuilder builder, AudioHandle audioHandle);

		[Token(Token = "0x6001884")]
		bool DeserialiseHandle(FlexBuffer.Map root, out ResumeData resumeData);

		[Token(Token = "0x6001885")]
		bool QueueResumeData(AudioHandle handle, ResumeData data);

		[Token(Token = "0x6001886")]
		[Obsolete("This method should not be exposed. Call QueueResumeData instead.", false)]
		void ApplyResumeData(AudioHandle handle, ResumeData data);
	}
	[Token(Token = "0x2000447")]
	public class AudioManager : MonoBehaviour, IService, IAudioManager
	{
		[Token(Token = "0x2000448")]
		private struct AudioEvent
		{
			[Token(Token = "0x40013EF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public AudioHandle handle;

			[Token(Token = "0x40013F0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public EventDescription description;

			[Token(Token = "0x40013F1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public EventInstance instance;

			[Token(Token = "0x40013F2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public string eventName;

			[Token(Token = "0x40013F3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float startTime;

			[Token(Token = "0x40013F4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public float endTime;
		}

		[Token(Token = "0x2000449")]
		private static class Keys
		{
			[Token(Token = "0x40013F5")]
			public const string FmodEventKey = "event";

			[Token(Token = "0x40013F6")]
			public const string CurrentTimeKey = "time";

			[Token(Token = "0x40013F7")]
			public const string Parameters = "parameters";

			[Token(Token = "0x40013F8")]
			public const string ParameterGUID = "parameterGUID";

			[Token(Token = "0x40013F9")]
			public const string ParameterValue = "parameterValue";
		}

		[Token(Token = "0x40013D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Range(0f, 1f)]
		[Header("Audio Preferences")]
		[SerializeField]
		private float _mixingDeskMasterVolume;

		[Token(Token = "0x40013D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[Range(0f, 1f)]
		[SerializeField]
		private float _mixingDeskSoundboardVolume;

		[Token(Token = "0x40013D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		[Range(0f, 1f)]
		private float _mixingDeskCassettesvolume;

		[Token(Token = "0x40013D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		[Range(0f, 1f)]
		private float _mixingDeskRecordsVolume;

		[Token(Token = "0x40013D5")]
		private const string _masterBusName = "bus:/";

		[Token(Token = "0x40013D6")]
		private const string _mainBusName = "bus:/Main";

		[Token(Token = "0x40013D7")]
		private const string _UIBusName = "bus:/UI";

		[Token(Token = "0x40013D8")]
		private const string _CallSfxBusName = "bus:/Main/Dialogue/Call SFX";

		[Token(Token = "0x40013D9")]
		private const string _MasterVCAName = "vca:/Master";

		[Token(Token = "0x40013DA")]
		private const string _MusicVCAName = "vca:/Music";

		[Token(Token = "0x40013DB")]
		private const string _VoiceVCAName = "vca:/Dialogue";

		[Token(Token = "0x40013DC")]
		private const string _SfxVCAName = "vca:/SFX";

		[Token(Token = "0x40013DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		protected EventReference _pauseEventReference;

		[Token(Token = "0x40013DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		protected EventReference _unpauseEventReference;

		[Token(Token = "0x40013DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private GameObject TheCamera;

		[Token(Token = "0x40013E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private bool _gameIsPaused;

		[Token(Token = "0x40013E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private List<AudioEvent> _ongoingEvents;

		[Token(Token = "0x40013E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Dictionary<GUID, EventDescription> _preloadedEvents;

		[Token(Token = "0x40013E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private List<AudioHandle> _pendingResumeEvents;

		[Token(Token = "0x40013E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Dictionary<AudioHandle, IAudioManager.ResumeData> _pendingResumeData;

		[Token(Token = "0x40013E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Bus _masterBus;

		[Token(Token = "0x40013E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Bus _mainBus;

		[Token(Token = "0x40013E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Bus _uiBus;

		[Token(Token = "0x40013E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Bus _callSFXBus;

		[Token(Token = "0x40013E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private VCA _masterVca;

		[Token(Token = "0x40013EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private VCA _musicVca;

		[Token(Token = "0x40013EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private VCA _voiceVca;

		[Token(Token = "0x40013EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private VCA _sfxVca;

		[Token(Token = "0x40013ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private StudioListener _mainCameraListener;

		[Token(Token = "0x40013EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private bool _ready;

		[Token(Token = "0x170002EF")]
		public float MixingDeskMasterVolume
		{
			[Token(Token = "0x6001887")]
			[Address(RVA = "0xF566D4", Offset = "0xF566D4", VA = "0xF566D4")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170002F0")]
		public float MixingDeskSoundboardVolume
		{
			[Token(Token = "0x6001888")]
			[Address(RVA = "0xF566DC", Offset = "0xF566DC", VA = "0xF566DC")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170002F1")]
		public float MixingDeskCassettesVolume
		{
			[Token(Token = "0x6001889")]
			[Address(RVA = "0xF566E4", Offset = "0xF566E4", VA = "0xF566E4")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170002F2")]
		public float MixingDeskRecordsVolume
		{
			[Token(Token = "0x600188A")]
			[Address(RVA = "0xF566EC", Offset = "0xF566EC", VA = "0xF566EC")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170002F3")]
		public StudioListener listener
		{
			[Token(Token = "0x600188B")]
			[Address(RVA = "0xF566F4", Offset = "0xF566F4", VA = "0xF566F4", Slot = "23")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600188C")]
		[Address(RVA = "0xF566FC", Offset = "0xF566FC", VA = "0xF566FC", Slot = "4")]
		public void OnStartUp()
		{
		}

		[Token(Token = "0x600188D")]
		[Address(RVA = "0xF56704", Offset = "0xF56704", VA = "0xF56704", Slot = "5")]
		public void OnCleanUp()
		{
		}

		[Token(Token = "0x600188E")]
		[Address(RVA = "0xF568E4", Offset = "0xF568E4", VA = "0xF568E4")]
		private bool TrySetup()
		{
			return default(bool);
		}

		[Token(Token = "0x600188F")]
		[Address(RVA = "0xF56C00", Offset = "0xF56C00", VA = "0xF56C00")]
		public void RegisterSettingsCallbacks(SettingsService settings)
		{
		}

		[Token(Token = "0x6001890")]
		[Address(RVA = "0xF56D80", Offset = "0xF56D80", VA = "0xF56D80")]
		public void RegisterTimeCallbacks(TimeService time)
		{
		}

		[Token(Token = "0x6001891")]
		[Address(RVA = "0xF56E14", Offset = "0xF56E14", VA = "0xF56E14")]
		private void OnMasterVolumeChanged(float value)
		{
		}

		[Token(Token = "0x6001892")]
		[Address(RVA = "0xF56E58", Offset = "0xF56E58", VA = "0xF56E58")]
		private void OnMusicVolumeChanged(float value)
		{
		}

		[Token(Token = "0x6001893")]
		[Address(RVA = "0xF56E9C", Offset = "0xF56E9C", VA = "0xF56E9C")]
		private void OnVoiceVolumeChanged(float value)
		{
		}

		[Token(Token = "0x6001894")]
		[Address(RVA = "0xF56EE0", Offset = "0xF56EE0", VA = "0xF56EE0")]
		private void OnSfxVolumeChanged(float value)
		{
		}

		[Token(Token = "0x6001895")]
		[Address(RVA = "0xF56F24", Offset = "0xF56F24", VA = "0xF56F24", Slot = "6")]
		public void OnUpdate(float dt)
		{
		}

		[Token(Token = "0x6001896")]
		[Address(RVA = "0xF57814", Offset = "0xF57814", VA = "0xF57814", Slot = "13")]
		public bool IsPlaying(AudioHandle handle)
		{
			return default(bool);
		}

		[Token(Token = "0x6001897")]
		[Address(RVA = "0xF57908", Offset = "0xF57908", VA = "0xF57908", Slot = "8")]
		public AudioHandle Play2D(string eventName, float timeIn, float timeOut)
		{
			return default(AudioHandle);
		}

		[Token(Token = "0x6001898")]
		[Address(RVA = "0xF57DF8", Offset = "0xF57DF8", VA = "0xF57DF8", Slot = "9")]
		public AudioHandle Play3D(string eventName, float timeIn, float timeOut, Vector3 position)
		{
			return default(AudioHandle);
		}

		[Token(Token = "0x6001899")]
		[Address(RVA = "0xF57A1C", Offset = "0xF57A1C", VA = "0xF57A1C", Slot = "10")]
		public AudioHandle Play2D(EventReference eventReference, float timeIn, float timeOut)
		{
			return default(AudioHandle);
		}

		[Token(Token = "0x600189A")]
		[Address(RVA = "0xF57F34", Offset = "0xF57F34", VA = "0xF57F34", Slot = "11")]
		public AudioHandle Play3D(EventReference eventReference, float timeIn, float timeOut, Vector3 position)
		{
			return default(AudioHandle);
		}

		[Token(Token = "0x600189B")]
		[Address(RVA = "0xF5838C", Offset = "0xF5838C", VA = "0xF5838C", Slot = "12")]
		public void Stop(AudioHandle handle, bool immediate = false)
		{
		}

		[Token(Token = "0x600189C")]
		[Address(RVA = "0xF585A4", Offset = "0xF585A4", VA = "0xF585A4", Slot = "17")]
		public bool Preload(EventReference eventReference)
		{
			return default(bool);
		}

		[Token(Token = "0x600189D")]
		[Address(RVA = "0xF587F0", Offset = "0xF587F0", VA = "0xF587F0", Slot = "18")]
		public bool Unload(EventReference eventReference)
		{
			return default(bool);
		}

		[Token(Token = "0x600189E")]
		[Address(RVA = "0xF58974", Offset = "0xF58974", VA = "0xF58974", Slot = "21")]
		public EventInstance GetEventInstance(AudioHandle handle)
		{
			return default(EventInstance);
		}

		[Token(Token = "0x600189F")]
		[Address(RVA = "0xF58A80", Offset = "0xF58A80", VA = "0xF58A80", Slot = "20")]
		public EventDescription GetEventDescription(AudioHandle handle)
		{
			return default(EventDescription);
		}

		[Token(Token = "0x60018A0")]
		[Address(RVA = "0xF58B8C", Offset = "0xF58B8C", VA = "0xF58B8C", Slot = "22")]
		public AudioHandle ConvertToHandle(EventReference eventReference, EventInstance eventInstance)
		{
			return default(AudioHandle);
		}

		[Token(Token = "0x60018A1")]
		[Address(RVA = "0xF58E5C", Offset = "0xF58E5C", VA = "0xF58E5C", Slot = "14")]
		public bool SetParameter(AudioHandle handle, string parameterName, float value)
		{
			return default(bool);
		}

		[Token(Token = "0x60018A2")]
		[Address(RVA = "0xF58FC4", Offset = "0xF58FC4", VA = "0xF58FC4", Slot = "15")]
		public bool SetParameter(AudioHandle handle, PARAMETER_ID parameterId, float value)
		{
			return default(bool);
		}

		[Token(Token = "0x60018A3")]
		[Address(RVA = "0xF591A4", Offset = "0xF591A4", VA = "0xF591A4", Slot = "16")]
		public bool GetParameter(AudioHandle handle, PARAMETER_ID parameterId, out float value)
		{
			return default(bool);
		}

		[Token(Token = "0x60018A4")]
		[Address(RVA = "0xF593A8", Offset = "0xF593A8", VA = "0xF593A8")]
		private void OnGamePaused(bool paused)
		{
		}

		[Token(Token = "0x60018A5")]
		[Address(RVA = "0xF594F8", Offset = "0xF594F8", VA = "0xF594F8", Slot = "19")]
		public void StopAllCallSfxEvents()
		{
		}

		[Token(Token = "0x60018A6")]
		[Address(RVA = "0xF5952C", Offset = "0xF5952C", VA = "0xF5952C", Slot = "7")]
		public void SetMainCamera(Camera camera)
		{
		}

		[Token(Token = "0x60018A7")]
		[Address(RVA = "0xF595FC", Offset = "0xF595FC", VA = "0xF595FC")]
		public void SetMixingDeskMasterVolume(float volume)
		{
		}

		[Token(Token = "0x60018A8")]
		[Address(RVA = "0xF59604", Offset = "0xF59604", VA = "0xF59604")]
		public void SetMixingDeskSoundboardVolume(float volume)
		{
		}

		[Token(Token = "0x60018A9")]
		[Address(RVA = "0xF5960C", Offset = "0xF5960C", VA = "0xF5960C")]
		public void SetMixingDeskCassettesVolume(float volume)
		{
		}

		[Token(Token = "0x60018AA")]
		[Address(RVA = "0xF59614", Offset = "0xF59614", VA = "0xF59614")]
		public void SetMixingDeskRecordsVolume(float volume)
		{
		}

		[Token(Token = "0x60018AB")]
		[Address(RVA = "0xF5961C", Offset = "0xF5961C", VA = "0xF5961C", Slot = "24")]
		public bool SerialiseHandle(FlexBufferBuilder builder, AudioHandle handle)
		{
			return default(bool);
		}

		[Token(Token = "0x60018AC")]
		[Address(RVA = "0xF598FC", Offset = "0xF598FC", VA = "0xF598FC", Slot = "25")]
		public bool DeserialiseHandle(FlexBuffer.Map root, out IAudioManager.ResumeData resumeData)
		{
			return default(bool);
		}

		[Token(Token = "0x60018AD")]
		[Address(RVA = "0xF59D90", Offset = "0xF59D90", VA = "0xF59D90", Slot = "26")]
		public bool QueueResumeData(AudioHandle handle, IAudioManager.ResumeData data)
		{
			return default(bool);
		}

		[Token(Token = "0x60018AE")]
		[Address(RVA = "0xF57528", Offset = "0xF57528", VA = "0xF57528", Slot = "27")]
		public void ApplyResumeData(AudioHandle handle, IAudioManager.ResumeData data)
		{
		}

		[Token(Token = "0x60018AF")]
		[Address(RVA = "0xF59FB4", Offset = "0xF59FB4", VA = "0xF59FB4")]
		public AudioManager()
		{
		}
	}
	[Token(Token = "0x200044A")]
	public class BootServices : MonoBehaviour
	{
		[Token(Token = "0x40013FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private StateController _stateController;

		[Token(Token = "0x40013FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private SceneHelper _sceneManager;

		[Token(Token = "0x40013FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private UnityInputService<OculusDeviceId, UnityInputOculusDeviceIdProvider, InputActionType, InputActionMapType> _inputService;

		[Token(Token = "0x40013FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private AudioManager _audioManager;

		[Token(Token = "0x40013FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private SaveGameService _saveGameService;

		[Token(Token = "0x40013FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private PlatformManagerBase _platformManager;

		[Token(Token = "0x4001400")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private IUserService _userService;

		[Token(Token = "0x4001401")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private MenuManager _menuManager;

		[Token(Token = "0x4001402")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private TimeService _timeService;

		[Token(Token = "0x4001403")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private IEngagementService _engagementService;

		[Token(Token = "0x4001404")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private SettingsService _settingsService;

		[Token(Token = "0x4001405")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private LocalisationService _localisationService;

		[Token(Token = "0x4001406")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private GraphicsSettingsService _graphicsSettingsService;

		[Token(Token = "0x4001407")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private GameInputService _gameInputService;

		[Token(Token = "0x4001408")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private IAchievementsService _achievementsService;

		[Token(Token = "0x4001409")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private ActivitiesService _activitiesService;

		[Token(Token = "0x400140A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private TextProcessorService _textProcessingService;

		[Token(Token = "0x400140B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private IconTextMarkupService _iconTextMarkupService;

		[Token(Token = "0x400140C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private GamePadIconService _gamePadIconService;

		[Token(Token = "0x400140D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private PlatformEventService _platformEventService;

		[Token(Token = "0x400140E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private IRumbleService _rumbleService;

		[Token(Token = "0x400140F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private GameUserService _gameUserService;

		[Token(Token = "0x4001410")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static BootServices s_instance;

		[Token(Token = "0x170002F4")]
		public static IStateController stateController
		{
			[Token(Token = "0x60018B0")]
			[Address(RVA = "0xF5A138", Offset = "0xF5A138", VA = "0xF5A138")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002F5")]
		public static ISceneHelper sceneHelper
		{
			[Token(Token = "0x60018B1")]
			[Address(RVA = "0xF532B4", Offset = "0xF532B4", VA = "0xF532B4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002F6")]
		public static UnityInputService<OculusDeviceId, UnityInputOculusDeviceIdProvider, InputActionType, InputActionMapType> inputService
		{
			[Token(Token = "0x60018B2")]
			[Address(RVA = "0xF5A18C", Offset = "0xF5A18C", VA = "0xF5A18C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002F7")]
		public static IAudioManager audioManager
		{
			[Token(Token = "0x60018B3")]
			[Address(RVA = "0xF4A108", Offset = "0xF4A108", VA = "0xF4A108")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002F8")]
		public static Services.Save.ISaveGameService saveGameService
		{
			[Token(Token = "0x60018B4")]
			[Address(RVA = "0xF51778", Offset = "0xF51778", VA = "0xF51778")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002F9")]
		public static IPlatformManager platformManager
		{
			[Token(Token = "0x60018B5")]
			[Address(RVA = "0xF5A1E0", Offset = "0xF5A1E0", VA = "0xF5A1E0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002FA")]
		public static IUserService userService
		{
			[Token(Token = "0x60018B6")]
			[Address(RVA = "0xF5A234", Offset = "0xF5A234", VA = "0xF5A234")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002FB")]
		public static IMenuManager menuManager
		{
			[Token(Token = "0x60018B7")]
			[Address(RVA = "0xF5A288", Offset = "0xF5A288", VA = "0xF5A288")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002FC")]
		public static ITimeService timeService
		{
			[Token(Token = "0x60018B8")]
			[Address(RVA = "0xF5A2DC", Offset = "0xF5A2DC", VA = "0xF5A2DC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002FD")]
		public static IEngagementService engagementService
		{
			[Token(Token = "0x60018B9")]
			[Address(RVA = "0xF5A330", Offset = "0xF5A330", VA = "0xF5A330")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002FE")]
		public static SettingsService settingsService
		{
			[Token(Token = "0x60018BA")]
			[Address(RVA = "0xF5A384", Offset = "0xF5A384", VA = "0xF5A384")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002FF")]
		public static LocalisationService localisationService
		{
			[Token(Token = "0x60018BB")]
			[Address(RVA = "0xF5A3D8", Offset = "0xF5A3D8", VA = "0xF5A3D8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000300")]
		public static GraphicsSettingsService graphicsService
		{
			[Token(Token = "0x60018BC")]
			[Address(RVA = "0xF5A42C", Offset = "0xF5A42C", VA = "0xF5A42C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000301")]
		public static GameInputService GameInputService
		{
			[Token(Token = "0x60018BD")]
			[Address(RVA = "0xF5A480", Offset = "0xF5A480", VA = "0xF5A480")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000302")]
		public static IAchievementsService achievementsService
		{
			[Token(Token = "0x60018BE")]
			[Address(RVA = "0xF5A4D4", Offset = "0xF5A4D4", VA = "0xF5A4D4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000303")]
		public static ActivitiesService activitiesService
		{
			[Token(Token = "0x60018BF")]
			[Address(RVA = "0xF511C4", Offset = "0xF511C4", VA = "0xF511C4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000304")]
		public static TextProcessorService TextProcessingService
		{
			[Token(Token = "0x60018C0")]
			[Address(RVA = "0xF5A528", Offset = "0xF5A528", VA = "0xF5A528")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000305")]
		public static IconTextMarkupService IconTextMarkupService
		{
			[Token(Token = "0x60018C1")]
			[Address(RVA = "0xF5A57C", Offset = "0xF5A57C", VA = "0xF5A57C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000306")]
		public static GamePadIconService GamePadIconService
		{
			[Token(Token = "0x60018C2")]
			[Address(RVA = "0xF5A5D0", Offset = "0xF5A5D0", VA = "0xF5A5D0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000307")]
		public static PlatformEventService PlatformEventService
		{
			[Token(Token = "0x60018C3")]
			[Address(RVA = "0xF5A624", Offset = "0xF5A624", VA = "0xF5A624")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000308")]
		public static IRumbleService RumbleService
		{
			[Token(Token = "0x60018C4")]
			[Address(RVA = "0xF4C4D4", Offset = "0xF4C4D4", VA = "0xF4C4D4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000309")]
		public static bool isInitialised
		{
			[Token(Token = "0x60018C5")]
			[Address(RVA = "0xF4A090", Offset = "0xF4A090", VA = "0xF4A090")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60018C6")]
		[Address(RVA = "0xF5A678", Offset = "0xF5A678", VA = "0xF5A678")]
		public static bool IsPrimaryUserValid()
		{
			return default(bool);
		}

		[Token(Token = "0x60018C7")]
		[Address(RVA = "0xF5A7C0", Offset = "0xF5A7C0", VA = "0xF5A7C0")]
		public static bool IsPrimaryUsersLastInputDeviceValid()
		{
			return default(bool);
		}

		[Token(Token = "0x60018C8")]
		[Address(RVA = "0xF5A910", Offset = "0xF5A910", VA = "0xF5A910")]
		public static bool IsSafeToProceedIntoGame()
		{
			return default(bool);
		}

		[Token(Token = "0x60018C9")]
		[Address(RVA = "0xF506AC", Offset = "0xF506AC", VA = "0xF506AC")]
		public bool Initialise()
		{
			return default(bool);
		}

		[Token(Token = "0x60018CA")]
		[Address(RVA = "0xF5AAC4", Offset = "0xF5AAC4", VA = "0xF5AAC4")]
		public bool Cleanup()
		{
			return default(bool);
		}

		[Token(Token = "0x60018CB")]
		[Address(RVA = "0xF5ADDC", Offset = "0xF5ADDC", VA = "0xF5ADDC")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60018CC")]
		[Address(RVA = "0xF5ADE0", Offset = "0xF5ADE0", VA = "0xF5ADE0")]
		private void Update()
		{
		}

		[Token(Token = "0x60018CD")]
		[Address(RVA = "0xF5B0D0", Offset = "0xF5B0D0", VA = "0xF5B0D0")]
		private void OnPrimaryUserEngaged()
		{
		}

		[Token(Token = "0x60018CE")]
		[Address(RVA = "0xF5B1A0", Offset = "0xF5B1A0", VA = "0xF5B1A0")]
		private void OnPrimaryUserDisengaged()
		{
		}

		[Token(Token = "0x60018CF")]
		[Address(RVA = "0xF5B1C4", Offset = "0xF5B1C4", VA = "0xF5B1C4")]
		public BootServices()
		{
		}
	}
	[Token(Token = "0x200044B")]
	public interface IDialogueManager
	{
		[Token(Token = "0x14000010")]
		event Action<CharacterAsset> onCurrentSpeakerChanged;

		[Token(Token = "0x14000011")]
		event Action<DialogAnchor> onDialogueAnchorChanged;

		[Token(Token = "0x60018D0")]
		void ResumeDialogue();

		[Token(Token = "0x60018D1")]
		CharacterAsset GetCurrentSpeaker();

		[Token(Token = "0x60018D4")]
		void RegisterSubtitleSource(ISubtitleSource source);

		[Token(Token = "0x60018D5")]
		void RegisterDialogueAnchor(DialogAnchor dialogAnchor);

		[Token(Token = "0x60018D6")]
		DialogAnchor GetClosestAnchorPointForCharacter(CharacterAsset character);

		[Token(Token = "0x60018D7")]
		DialogAnchor GetClosestAnchorPointForCurrentSpeaker();
	}
	[Token(Token = "0x200044C")]
	public interface ISubtitleSource
	{
		[Token(Token = "0x1700030A")]
		bool active
		{
			[Token(Token = "0x60018DA")]
			get;
		}

		[Token(Token = "0x1700030B")]
		Line line
		{
			[Token(Token = "0x60018DB")]
			get;
		}
	}
	[Token(Token = "0x200044D")]
	public class DialogueManager : MonoBehaviour, IService, IDialogueManager, ISerialisable, IDeserialisable, ISceneReferrable, IPostDeserialiseNotified
	{
		[Token(Token = "0x200044E")]
		private class DialogueSubtitleSource : ISubtitleSource
		{
			[Token(Token = "0x4001430")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private IDialogueController _dialogueController;

			[Token(Token = "0x1700030D")]
			public bool active
			{
				[Token(Token = "0x60018FF")]
				[Address(RVA = "0xF607EC", Offset = "0xF607EC", VA = "0xF607EC", Slot = "4")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x1700030E")]
			public Line line
			{
				[Token(Token = "0x6001900")]
				[Address(RVA = "0xF60908", Offset = "0xF60908", VA = "0xF60908", Slot = "5")]
				get
				{
					return default(Line);
				}
			}

			[Token(Token = "0x60018FE")]
			[Address(RVA = "0xF607BC", Offset = "0xF607BC", VA = "0xF607BC")]
			public DialogueSubtitleSource(IDialogueController dialogueController)
			{
			}
		}

		[Token(Token = "0x200044F")]
		private class AudioResumeData
		{
			[Token(Token = "0x4001431")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public IAudioManager.ResumeData line;

			[Token(Token = "0x4001432")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public IAudioManager.ResumeData[] foley;

			[Token(Token = "0x6001901")]
			[Address(RVA = "0xF609D0", Offset = "0xF609D0", VA = "0xF609D0")]
			public AudioResumeData()
			{
			}
		}

		[Token(Token = "0x4001411")]
		private const float c_timeToUnlockDeadAirAchievement = 30f;

		[Token(Token = "0x4001412")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private CharacterAsset _playerCharacterAsset;

		[Token(Token = "0x4001413")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private AchievementContainer _deadAirAchievement;

		[Token(Token = "0x4001414")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Dictionary<CharacterAsset, List<DialogAnchor>> _dialogAnchorDictionary;

		[Token(Token = "0x4001415")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private PlayerBase _player;

		[Token(Token = "0x4001416")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Transform _cameraTransform;

		[Token(Token = "0x4001417")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private DialogAnchor _currentSpeakerAnchor;

		[Token(Token = "0x4001418")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private List<FoleyAsset> _playingFoley;

		[Token(Token = "0x4001419")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Dictionary<FoleyAsset, AudioHandle> _foleyAudioHandles;

		[Token(Token = "0x400141A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Dictionary<GUID, EventInstance> s_dialogueCommandEventInstances;

		[Token(Token = "0x400141B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private HashSet<GUID> s_preloadedCommandEventDescriptions;

		[Token(Token = "0x400141C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Action<string> _dialogueChoiceCallback;

		[Token(Token = "0x400141D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private CharacterAsset _currentSpeaker;

		[Token(Token = "0x400141E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private bool _running;

		[Token(Token = "0x400141F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x71")]
		private bool _dialogueActive;

		[Token(Token = "0x4001420")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private string _choiceKey;

		[Token(Token = "0x4001421")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private float _advanceTimer;

		[Token(Token = "0x4001422")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private float _deadAirAchievementTimer;

		[Token(Token = "0x4001423")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private AudioHandle _audioHandle;

		[Token(Token = "0x4001424")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private AudioResumeData _audioResumeData;

		[Token(Token = "0x4001425")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private INarrativeManager _narrativeManager;

		[Token(Token = "0x4001426")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private IAudioManager _audioManager;

		[Token(Token = "0x4001427")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private WorldUIManager _uiManager;

		[Token(Token = "0x4001428")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private List<ISubtitleSource> _subtitleSources;

		[Token(Token = "0x4001429")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private int _currentSubtitleSourceIndex;

		[Token(Token = "0x400142A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private string _currentSubtitleLineUID;

		[Token(Token = "0x400142D")]
		private const string c_advanceTimerKey = "timer";

		[Token(Token = "0x400142E")]
		private const string c_audioKey = "audio";

		[Token(Token = "0x400142F")]
		private const string c_foleyKey = "foley";

		[Token(Token = "0x1700030C")]
		public string typeId
		{
			[Token(Token = "0x60018F8")]
			[Address(RVA = "0xF5FDA8", Offset = "0xF5FDA8", VA = "0xF5FDA8", Slot = "19")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x14000012")]
		public event Action<CharacterAsset> onCurrentSpeakerChanged
		{
			[Token(Token = "0x60018DC")]
			[Address(RVA = "0xF5B35C", Offset = "0xF5B35C", VA = "0xF5B35C", Slot = "9")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x60018DD")]
			[Address(RVA = "0xF5B40C", Offset = "0xF5B40C", VA = "0xF5B40C", Slot = "10")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x14000013")]
		public event Action<DialogAnchor> onDialogueAnchorChanged
		{
			[Token(Token = "0x60018DE")]
			[Address(RVA = "0xF5B4BC", Offset = "0xF5B4BC", VA = "0xF5B4BC", Slot = "15")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x60018DF")]
			[Address(RVA = "0xF5B56C", Offset = "0xF5B56C", VA = "0xF5B56C", Slot = "16")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x60018E0")]
		[Address(RVA = "0xF5B61C", Offset = "0xF5B61C", VA = "0xF5B61C")]
		public bool Initialise(INarrativeManager narrativeManager, WorldUIManager uiManager, IAudioManager audioManager)
		{
			return default(bool);
		}

		[Token(Token = "0x60018E1")]
		[Address(RVA = "0xF5B670", Offset = "0xF5B670", VA = "0xF5B670", Slot = "4")]
		public void OnStartUp()
		{
		}

		[Token(Token = "0x60018E2")]
		[Address(RVA = "0xF5B8A4", Offset = "0xF5B8A4", VA = "0xF5B8A4", Slot = "5")]
		public void OnCleanUp()
		{
		}

		[Token(Token = "0x60018E3")]
		[Address(RVA = "0xF5BAEC", Offset = "0xF5BAEC", VA = "0xF5BAEC", Slot = "6")]
		public void OnUpdate(float dt)
		{
		}

		[Token(Token = "0x60018E4")]
		[Address(RVA = "0xF5BCF8", Offset = "0xF5BCF8", VA = "0xF5BCF8")]
		private void UpdateAnchors()
		{
		}

		[Token(Token = "0x60018E5")]
		[Address(RVA = "0xF5E2FC", Offset = "0xF5E2FC", VA = "0xF5E2FC")]
		private bool FacingDialogueAnchor(DialogAnchor dialogAnchor)
		{
			return default(bool);
		}

		[Token(Token = "0x60018E6")]
		[Address(RVA = "0xF5BF94", Offset = "0xF5BF94", VA = "0xF5BF94")]
		private void UpdateAndAdvanceDialogue(float dt)
		{
		}

		[Token(Token = "0x60018E7")]
		[Address(RVA = "0xF5CB9C", Offset = "0xF5CB9C", VA = "0xF5CB9C")]
		private void UpdateCurrentSpeaker()
		{
		}

		[Token(Token = "0x60018E8")]
		[Address(RVA = "0xF5CFAC", Offset = "0xF5CFAC", VA = "0xF5CFAC")]
		private void UpdateSubtitles()
		{
		}

		[Token(Token = "0x60018E9")]
		[Address(RVA = "0xF5D2E4", Offset = "0xF5D2E4", VA = "0xF5D2E4")]
		private void UpdateFoleyAudio()
		{
		}

		[Token(Token = "0x60018EA")]
		[Address(RVA = "0xF5E508", Offset = "0xF5E508", VA = "0xF5E508")]
		private void StartLine(Line line)
		{
		}

		[Token(Token = "0x60018EB")]
		[Address(RVA = "0xF5E4B4", Offset = "0xF5E4B4", VA = "0xF5E4B4")]
		private void StartChoice(IDialogueController.Choice choice)
		{
		}

		[Token(Token = "0x60018EC")]
		[Address(RVA = "0xF5EF1C", Offset = "0xF5EF1C", VA = "0xF5EF1C")]
		private void OnDialogueChoiceUICallback(string answerId)
		{
		}

		[Token(Token = "0x60018ED")]
		[Address(RVA = "0xF5ED04", Offset = "0xF5ED04", VA = "0xF5ED04")]
		private void StartFoley(FoleyAsset asset)
		{
		}

		[Token(Token = "0x60018EE")]
		[Address(RVA = "0xF5E7C4", Offset = "0xF5E7C4", VA = "0xF5E7C4")]
		private void StopFoley(FoleyAsset asset)
		{
		}

		[Token(Token = "0x60018EF")]
		[Address(RVA = "0xF5E948", Offset = "0xF5E948", VA = "0xF5E948")]
		private void TryFindFoleyEventInstance(FoleyAsset asset)
		{
		}

		[Token(Token = "0x60018F0")]
		[Address(RVA = "0xF5B1CC", Offset = "0xF5B1CC", VA = "0xF5B1CC")]
		[MonoPInvokeCallback(typeof(EVENT_CALLBACK))]
		private static RESULT OnCommandEventStartedCallback(EVENT_CALLBACK_TYPE callbackType, IntPtr eventInstancePtr, IntPtr paramsPtr)
		{
			return default(RESULT);
		}

		[Token(Token = "0x60018F1")]
		[Address(RVA = "0xF5EF24", Offset = "0xF5EF24", VA = "0xF5EF24", Slot = "8")]
		public CharacterAsset GetCurrentSpeaker()
		{
			return null;
		}

		[Token(Token = "0x60018F2")]
		[Address(RVA = "0xF5EF2C", Offset = "0xF5EF2C", VA = "0xF5EF2C", Slot = "11")]
		public void RegisterSubtitleSource(ISubtitleSource source)
		{
		}

		[Token(Token = "0x60018F3")]
		[Address(RVA = "0xF5F014", Offset = "0xF5F014", VA = "0xF5F014", Slot = "12")]
		public void RegisterDialogueAnchor(DialogAnchor dialogAnchor)
		{
		}

		[Token(Token = "0x60018F4")]
		[Address(RVA = "0xF5E124", Offset = "0xF5E124", VA = "0xF5E124", Slot = "13")]
		public DialogAnchor GetClosestAnchorPointForCharacter(CharacterAsset character)
		{
			return null;
		}

		[Token(Token = "0x60018F5")]
		[Address(RVA = "0xF5F2E4", Offset = "0xF5F2E4", VA = "0xF5F2E4", Slot = "14")]
		public DialogAnchor GetClosestAnchorPointForCurrentSpeaker()
		{
			return null;
		}

		[Token(Token = "0x60018F6")]
		[Address(RVA = "0xF5DEB0", Offset = "0xF5DEB0", VA = "0xF5DEB0")]
		private CharacterAsset CalculateDialogSpeaker()
		{
			return null;
		}

		[Token(Token = "0x60018F7")]
		[Address(RVA = "0xF5F2EC", Offset = "0xF5F2EC", VA = "0xF5F2EC", Slot = "7")]
		public void ResumeDialogue()
		{
		}

		[Token(Token = "0x60018F9")]
		[Address(RVA = "0xF5FDE8", Offset = "0xF5FDE8", VA = "0xF5FDE8", Slot = "18")]
		public bool Serialise(FlexBufferBuilder builder, ISceneObjectReferenceSerialiser objectSerialiser)
		{
			return default(bool);
		}

		[Token(Token = "0x60018FA")]
		[Address(RVA = "0xF600F8", Offset = "0xF600F8", VA = "0xF600F8", Slot = "20")]
		public bool Deserialise(FlexBuffer.Map root, ISceneObjectReferenceDeserialiser objectDeserialiser)
		{
			return default(bool);
		}

		[Token(Token = "0x60018FB")]
		[Address(RVA = "0xF604F8", Offset = "0xF604F8", VA = "0xF604F8", Slot = "21")]
		public void OnPostDeserialise()
		{
		}

		[Token(Token = "0x60018FC")]
		[Address(RVA = "0xF604FC", Offset = "0xF604FC", VA = "0xF604FC")]
		public DialogueManager()
		{
		}
	}
	[Token(Token = "0x2000450")]
	public interface IFadingSequenceHelper
	{
		[Token(Token = "0x1700030F")]
		bool isSequenceRunning
		{
			[Token(Token = "0x6001906")]
			get;
		}

		[Token(Token = "0x17000310")]
		EventReference defaultFmodFadeEvent
		{
			[Token(Token = "0x6001907")]
			get;
		}

		[Token(Token = "0x6001902")]
		Transform GetDjRoomDeskTpTransform();

		[Token(Token = "0x6001903")]
		void StartSequence(FadeConfig fadeConfig);

		[Token(Token = "0x6001904")]
		void EndSequence();

		[Token(Token = "0x6001905")]
		void GetCurrentFadeConfig(out FadeConfig fadeConfig);
	}
	[Serializable]
	[Token(Token = "0x2000451")]
	public struct FadeConfig
	{
		[Token(Token = "0x4001433")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float FadeInDuration;

		[Token(Token = "0x4001434")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float FullyFadedInDuration;

		[Token(Token = "0x4001435")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float UnfadeDuration;

		[Token(Token = "0x4001436")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public EventReference FmodFadeEvent;

		[Token(Token = "0x4001437")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Action<GameStateContext> OnFadeInFinishedCallback;

		[Token(Token = "0x4001438")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Action<GameStateContext> OnUnfadeFinishedCallback;

		[Token(Token = "0x4001439")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Func<UnityEngine.Sprite> GetGraphicsToDisplayCallback;

		[Token(Token = "0x17000311")]
		public static FadeConfig none
		{
			[Token(Token = "0x6001909")]
			[Address(RVA = "0xF60A30", Offset = "0xF60A30", VA = "0xF60A30")]
			get
			{
				return default(FadeConfig);
			}
		}

		[Token(Token = "0x6001908")]
		[Address(RVA = "0xF609D8", Offset = "0xF609D8", VA = "0xF609D8")]
		public FadeConfig(float fadeInDuration, float fullyFadedInDuration, float unfadeDuration, EventReference fmodFadeEvent, Action<GameStateContext> onFadeInFinishedCallback, Action<GameStateContext> onUnfadeFinishedCallback, Func<UnityEngine.Sprite> getGraphicsToDisplayCallback)
		{
		}
	}
	[Token(Token = "0x2000452")]
	public class FadingSequenceHelper : MonoBehaviour, IService, IFadingSequenceHelper
	{
		[Token(Token = "0x400143A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Transform _djRoomDeskTransform;

		[Token(Token = "0x400143B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private EventReference _defaultFmodFadeEvent;

		[Token(Token = "0x400143C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private FadeConfig _currentFadeConfig;

		[Token(Token = "0x400143D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private bool _sequenceRunning;

		[Token(Token = "0x17000312")]
		public bool isSequenceRunning
		{
			[Token(Token = "0x600190F")]
			[Address(RVA = "0xF60A5C", Offset = "0xF60A5C", VA = "0xF60A5C", Slot = "11")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000313")]
		public EventReference defaultFmodFadeEvent
		{
			[Token(Token = "0x6001910")]
			[Address(RVA = "0xF60A64", Offset = "0xF60A64", VA = "0xF60A64", Slot = "12")]
			get
			{
				return default(EventReference);
			}
		}

		[Token(Token = "0x600190A")]
		[Address(RVA = "0xF60A44", Offset = "0xF60A44", VA = "0xF60A44")]
		static FadingSequenceHelper()
		{
		}

		[Token(Token = "0x600190B")]
		[Address(RVA = "0xF60A48", Offset = "0xF60A48", VA = "0xF60A48")]
		public FadingSequenceHelper()
		{
		}

		[Token(Token = "0x600190C")]
		[Address(RVA = "0xF60A50", Offset = "0xF60A50", VA = "0xF60A50", Slot = "4")]
		public void OnStartUp()
		{
		}

		[Token(Token = "0x600190D")]
		[Address(RVA = "0xF60A54", Offset = "0xF60A54", VA = "0xF60A54", Slot = "5")]
		public void OnCleanUp()
		{
		}

		[Token(Token = "0x600190E")]
		[Address(RVA = "0xF60A58", Offset = "0xF60A58", VA = "0xF60A58", Slot = "6")]
		public void OnUpdate(float dt)
		{
		}

		[Token(Token = "0x6001911")]
		[Address(RVA = "0xF60A70", Offset = "0xF60A70", VA = "0xF60A70", Slot = "8")]
		public void StartSequence([Optional] FadeConfig fadeConfig)
		{
		}

		[Token(Token = "0x6001912")]
		[Address(RVA = "0xF60AAC", Offset = "0xF60AAC", VA = "0xF60AAC", Slot = "9")]
		public void EndSequence()
		{
		}

		[Token(Token = "0x6001913")]
		[Address(RVA = "0xF60AB4", Offset = "0xF60AB4", VA = "0xF60AB4", Slot = "7")]
		public Transform GetDjRoomDeskTpTransform()
		{
			return null;
		}

		[Token(Token = "0x6001914")]
		[Address(RVA = "0xF60B28", Offset = "0xF60B28", VA = "0xF60B28", Slot = "10")]
		public void GetCurrentFadeConfig(out FadeConfig fadeConfig)
		{
		}
	}
	[Token(Token = "0x2000453")]
	public class GameInputService : MonoBehaviour, IService
	{
		[Token(Token = "0x400143E")]
		private const string c_StarSlashSubmit = "*/{Submit}";

		[Token(Token = "0x400143F")]
		private const string c_Submit = "{Submit}";

		[Token(Token = "0x4001440")]
		private const string c_StarSlashCancel = "*/{Cancel}";

		[Token(Token = "0x4001441")]
		private const string c_Cancel = "{Cancel}";

		[Token(Token = "0x4001442")]
		private const string c_GamepadSouthBinding = "<Gamepad>/buttonSouth";

		[Token(Token = "0x4001443")]
		private const string c_GamepadEastBinding = "<Gamepad>/buttonEast";

		[Token(Token = "0x4001444")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int PRIMARY_USER_INDEX;

		[Token(Token = "0x4001445")]
		private const int INITIAL_UNITY_INPUT_FLEX_BUILDER_BUFFER_SIZE = 12288;

		[Token(Token = "0x4001446")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private InputActionAsset m_InputActionAsset;

		[Token(Token = "0x4001447")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private short m_MaxUserCount;

		[Token(Token = "0x4001448")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A")]
		[SerializeField]
		private short m_MaxDeviceCountPerUser;

		[Token(Token = "0x4001449")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private UnityInputService<OculusDeviceId, UnityInputOculusDeviceIdProvider, InputActionType, InputActionMapType> _inputService;

		[Token(Token = "0x400144A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private IDeviceIdProvider<UnityEngine.InputSystem.InputDevice, OculusDeviceId> _deviceIdProvider;

		[Token(Token = "0x400144B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private InputActionProviderBase _inputActionProvider;

		[Token(Token = "0x400144C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private SettingsService _settingsService;

		[Token(Token = "0x400144D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private List<InputRebinder> _inputRebinders;

		[Token(Token = "0x400144E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private readonly ByteBuffer m_ByteBuffer;

		[Token(Token = "0x400144F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private readonly IUnityInputSerialiser m_Serialiser;

		[Token(Token = "0x4001450")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private readonly IUnityInputDeserialiser m_Deserialiser;

		[Token(Token = "0x4001451")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private bool _autoAssignConnectedDevices;

		[Token(Token = "0x4001452")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x71")]
		private bool _primaryUserControllerDisconnected;

		[Token(Token = "0x17000314")]
		public bool autoAssignConnectedDevices
		{
			[Token(Token = "0x6001915")]
			[Address(RVA = "0xF60B4C", Offset = "0xF60B4C", VA = "0xF60B4C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001916")]
			[Address(RVA = "0xF60B54", Offset = "0xF60B54", VA = "0xF60B54")]
			set
			{
			}
		}

		[Token(Token = "0x17000315")]
		public bool HasPrimaryUserDisconnectedController
		{
			[Token(Token = "0x6001917")]
			[Address(RVA = "0xF60B60", Offset = "0xF60B60", VA = "0xF60B60")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001918")]
		[Address(RVA = "0xF60B68", Offset = "0xF60B68", VA = "0xF60B68")]
		public void ClearPrimaryUserDisconnectedControllerFlag()
		{
		}

		[Token(Token = "0x6001919")]
		[Address(RVA = "0xF60B70", Offset = "0xF60B70", VA = "0xF60B70")]
		public GameInputService()
		{
		}

		[Token(Token = "0x600191A")]
		[Address(RVA = "0xF60D20", Offset = "0xF60D20", VA = "0xF60D20")]
		public UnityInputService<OculusDeviceId, UnityInputOculusDeviceIdProvider, InputActionType, InputActionMapType> CreateInputService()
		{
			return null;
		}

		[Token(Token = "0x600191B")]
		[Address(RVA = "0xF60DD8", Offset = "0xF60DD8", VA = "0xF60DD8")]
		public void Initialise(SettingsService service)
		{
		}

		[Token(Token = "0x600191C")]
		[Address(RVA = "0xF60DE0", Offset = "0xF60DE0", VA = "0xF60DE0", Slot = "4")]
		public void OnStartUp()
		{
		}

		[Token(Token = "0x600191D")]
		[Address(RVA = "0xF6139C", Offset = "0xF6139C", VA = "0xF6139C")]
		public void AddAllCurrentlyConnectedDevices(int userIndex)
		{
		}

		[Token(Token = "0x600191E")]
		[Address(RVA = "0xF61948", Offset = "0xF61948", VA = "0xF61948")]
		public void RegisterInputRebinder(InputRebinder inputRebinder)
		{
		}

		[Token(Token = "0x600191F")]
		[Address(RVA = "0xF619F8", Offset = "0xF619F8", VA = "0xF619F8")]
		public void UnregisterInputRebinder(InputRebinder inputRebinder)
		{
		}

		[Token(Token = "0x6001920")]
		[Address(RVA = "0xF61A50", Offset = "0xF61A50", VA = "0xF61A50")]
		private void ApplyBindingOverrides(byte[] bindingOverrides)
		{
		}

		[Token(Token = "0x6001921")]
		[Address(RVA = "0xF61CCC", Offset = "0xF61CCC", VA = "0xF61CCC", Slot = "5")]
		public void OnCleanUp()
		{
		}

		[Token(Token = "0x6001922")]
		[Address(RVA = "0xF61ED8", Offset = "0xF61ED8", VA = "0xF61ED8", Slot = "6")]
		public void OnUpdate(float dt)
		{
		}

		[Token(Token = "0x6001923")]
		[Address(RVA = "0xF618D0", Offset = "0xF618D0", VA = "0xF618D0")]
		private static bool AllowDeviceForPlatform(UnityEngine.InputSystem.InputDevice device)
		{
			return default(bool);
		}

		[Token(Token = "0x6001924")]
		[Address(RVA = "0xF61EDC", Offset = "0xF61EDC", VA = "0xF61EDC")]
		public bool ShouldShowControllerDisconnectedMessage()
		{
			return default(bool);
		}

		[Token(Token = "0x6001925")]
		[Address(RVA = "0xF61FDC", Offset = "0xF61FDC", VA = "0xF61FDC")]
		private void OnDeviceConnectedCallback(IDeviceId device)
		{
		}

		[Token(Token = "0x6001926")]
		[Address(RVA = "0xF62064", Offset = "0xF62064", VA = "0xF62064")]
		public void AssignDeviceToUser(IDeviceId device)
		{
		}

		[Token(Token = "0x6001927")]
		[Address(RVA = "0xF62310", Offset = "0xF62310", VA = "0xF62310")]
		private void OnDeviceDisconnected(IDeviceId deviceId)
		{
		}

		[Token(Token = "0x6001928")]
		[Address(RVA = "0xF62314", Offset = "0xF62314", VA = "0xF62314")]
		private void OnDeviceRemovedFromUser(IDeviceId deviceId, int userIndex)
		{
		}

		[Token(Token = "0x6001929")]
		[Address(RVA = "0xF62414", Offset = "0xF62414", VA = "0xF62414")]
		private void OnEngagementStateChanged(Team17.Platform.EngagementService.EngagementState from, Team17.Platform.EngagementService.EngagementState to)
		{
		}

		[Token(Token = "0x600192A")]
		[Address(RVA = "0xF62544", Offset = "0xF62544", VA = "0xF62544")]
		private void OnPrimaryUserEngaged()
		{
		}

		[Token(Token = "0x600192B")]
		[Address(RVA = "0xF6255C", Offset = "0xF6255C", VA = "0xF6255C")]
		public UnityEngine.InputSystem.InputDevice GetLastInputDeviceForUser()
		{
			return null;
		}

		[Token(Token = "0x600192C")]
		[Address(RVA = "0xF626B0", Offset = "0xF626B0", VA = "0xF626B0")]
		private void OnAppResumingEvent(double secondsSuspended)
		{
		}

		[Token(Token = "0x600192D")]
		[Address(RVA = "0xF61698", Offset = "0xF61698", VA = "0xF61698")]
		private void SetupSubmitAndCancelBindingLayout()
		{
		}

		[Token(Token = "0x600192E")]
		[Address(RVA = "0xF61BB4", Offset = "0xF61BB4", VA = "0xF61BB4")]
		private void SetupGameplayBindings()
		{
		}

		[Token(Token = "0x600192F")]
		[Address(RVA = "0xF617D4", Offset = "0xF617D4", VA = "0xF617D4")]
		private void SetupEngagementBindingOverride()
		{
		}

		[Token(Token = "0x6001930")]
		[Address(RVA = "0xF626B4", Offset = "0xF626B4", VA = "0xF626B4")]
		private void OverrideGamepadBinding(InputActionType inputActionType, string pathToReplace, string replacementPath)
		{
		}

		[Token(Token = "0x6001931")]
		[Address(RVA = "0xF628AC", Offset = "0xF628AC", VA = "0xF628AC")]
		public void SetIngameUIActionsEnabled(bool enable)
		{
		}
	}
	[Token(Token = "0x2000454")]
	public abstract class BaseRumbleEvent
	{
		[Token(Token = "0x17000316")]
		public bool IsEventPlaying
		{
			[Token(Token = "0x6001932")]
			[Address(RVA = "0xF629B0", Offset = "0xF629B0", VA = "0xF629B0")]
			[CompilerGenerated]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001933")]
			[Address(RVA = "0xF629B8", Offset = "0xF629B8", VA = "0xF629B8")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x17000317")]
		public int UnityDeviceID
		{
			[Token(Token = "0x6001934")]
			[Address(RVA = "0xF629C4", Offset = "0xF629C4", VA = "0xF629C4")]
			[CompilerGenerated]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001935")]
			[Address(RVA = "0xF629CC", Offset = "0xF629CC", VA = "0xF629CC")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x17000318")]
		protected IDualMotorRumble RumbleDevice
		{
			[Token(Token = "0x6001936")]
			[Address(RVA = "0xF629D4", Offset = "0xF629D4", VA = "0xF629D4")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001937")]
			[Address(RVA = "0xF629DC", Offset = "0xF629DC", VA = "0xF629DC")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x17000319")]
		protected float Scale
		{
			[Token(Token = "0x6001938")]
			[Address(RVA = "0xF629E4", Offset = "0xF629E4", VA = "0xF629E4")]
			[CompilerGenerated]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001939")]
			[Address(RVA = "0xF629EC", Offset = "0xF629EC", VA = "0xF629EC")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x600193A")]
		[Address(RVA = "0xF629F4", Offset = "0xF629F4", VA = "0xF629F4", Slot = "4")]
		public virtual void Start(IDualMotorRumble rumbleDevice, int unityDeviceId, float scale)
		{
		}

		[Token(Token = "0x600193B")]
		[Address(RVA = "0xF62A2C", Offset = "0xF62A2C", VA = "0xF62A2C", Slot = "5")]
		public virtual void OnUpdate(float deltaTime)
		{
		}

		[Token(Token = "0x600193C")]
		[Address(RVA = "0xF62A30", Offset = "0xF62A30", VA = "0xF62A30", Slot = "6")]
		public virtual void Stop()
		{
		}

		[Token(Token = "0x600193D")]
		[Address(RVA = "0xF62A40", Offset = "0xF62A40", VA = "0xF62A40")]
		protected BaseRumbleEvent()
		{
		}
	}
	[Token(Token = "0x2000455")]
	public interface IRumbleService : IService
	{
		[Token(Token = "0x600193E")]
		bool PlayEvent(BaseRumbleEvent rumbleEvent);

		[Token(Token = "0x600193F")]
		bool PlayEvent(BaseScriptableRumbleEvent scriptableRumbleEvent);

		[Token(Token = "0x6001940")]
		void Stop();

		[Token(Token = "0x6001941")]
		void SetRumbleEnabled(bool enabled);
	}
	[Token(Token = "0x2000456")]
	public abstract class BaseScriptableRumbleEvent : ScriptableObject
	{
		[Token(Token = "0x6001942")]
		public abstract BaseRumbleEvent GetEvent();

		[Token(Token = "0x6001943")]
		[Address(RVA = "0xF62A48", Offset = "0xF62A48", VA = "0xF62A48")]
		protected BaseScriptableRumbleEvent()
		{
		}
	}
	[Token(Token = "0x2000457")]
	[CreateAssetMenu(fileName = "ManualRumbleEvent", menuName = "ScriptableObjects/Rumble/Manual Rumble Event", order = 0)]
	public class ScriptableManualRumbleEvent : BaseScriptableRumbleEvent
	{
		[Token(Token = "0x4001457")]
		private const float kDefaultLowFrequency = 0.1f;

		[Token(Token = "0x4001458")]
		private const float kDefaultHighFrequency = 0.1f;

		[Token(Token = "0x4001459")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private ManualRumbleEvent _manualRumbleEvent;

		[Token(Token = "0x1700031A")]
		public ManualRumbleEvent ManualRumbleEvent
		{
			[Token(Token = "0x6001944")]
			[Address(RVA = "0xF62A50", Offset = "0xF62A50", VA = "0xF62A50")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001945")]
		[Address(RVA = "0xF62A58", Offset = "0xF62A58", VA = "0xF62A58", Slot = "4")]
		public override BaseRumbleEvent GetEvent()
		{
			return null;
		}

		[Token(Token = "0x6001946")]
		[Address(RVA = "0xF62A60", Offset = "0xF62A60", VA = "0xF62A60")]
		public ScriptableManualRumbleEvent()
		{
		}
	}
	[Token(Token = "0x2000458")]
	[CreateAssetMenu(fileName = "TimedRumbleEvent", menuName = "ScriptableObjects/Rumble/Timed Rumble Event", order = 0)]
	public class ScriptableTimedRumbleEvent : BaseScriptableRumbleEvent
	{
		[Token(Token = "0x400145A")]
		private const float kDefaultLowFrequency = 0f;

		[Token(Token = "0x400145B")]
		private const float kDefaultHighFrequency = 0.4f;

		[Token(Token = "0x400145C")]
		private const float kDefaultRumbleLengthInSeconds = 0.2f;

		[Token(Token = "0x400145D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private TimedRumbleEvent _timedRumbleEvent;

		[Token(Token = "0x6001947")]
		[Address(RVA = "0xF62B2C", Offset = "0xF62B2C", VA = "0xF62B2C", Slot = "4")]
		public override BaseRumbleEvent GetEvent()
		{
			return null;
		}

		[Token(Token = "0x6001948")]
		[Address(RVA = "0xF62B34", Offset = "0xF62B34", VA = "0xF62B34")]
		public ScriptableTimedRumbleEvent()
		{
		}
	}
	[Token(Token = "0x2000459")]
	public class UnityRumbleService : MonoBehaviour, IRumbleService, IService
	{
		[Token(Token = "0x400145E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private BaseRumbleEvent _currentRumbleEvent;

		[Token(Token = "0x400145F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private bool _isRumbleEnabled;

		[Token(Token = "0x4001460")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private float _vibrationScaleStrength;

		[Token(Token = "0x1700031B")]
		private bool IsRumbling
		{
			[Token(Token = "0x6001949")]
			[Address(RVA = "0xF62C0C", Offset = "0xF62C0C", VA = "0xF62C0C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x600194A")]
		[Address(RVA = "0xF62C2C", Offset = "0xF62C2C", VA = "0xF62C2C", Slot = "8")]
		public void OnStartUp()
		{
		}

		[Token(Token = "0x600194B")]
		[Address(RVA = "0xF62E90", Offset = "0xF62E90", VA = "0xF62E90")]
		public void OnUpdate()
		{
		}

		[Token(Token = "0x600194C")]
		[Address(RVA = "0xF62E94", Offset = "0xF62E94", VA = "0xF62E94", Slot = "9")]
		public void OnCleanUp()
		{
		}

		[Token(Token = "0x600194D")]
		[Address(RVA = "0xF630F8", Offset = "0xF630F8", VA = "0xF630F8", Slot = "7")]
		public void SetRumbleEnabled(bool enableRumble)
		{
		}

		[Token(Token = "0x600194E")]
		[Address(RVA = "0xF6314C", Offset = "0xF6314C", VA = "0xF6314C", Slot = "10")]
		public void OnUpdate(float deltaTime)
		{
		}

		[Token(Token = "0x600194F")]
		[Address(RVA = "0xF63190", Offset = "0xF63190", VA = "0xF63190", Slot = "5")]
		public bool PlayEvent(BaseScriptableRumbleEvent scriptableRumbleEvent)
		{
			return default(bool);
		}

		[Token(Token = "0x6001950")]
		[Address(RVA = "0xF631C4", Offset = "0xF631C4", VA = "0xF631C4", Slot = "4")]
		public bool PlayEvent(BaseRumbleEvent rumbleEvent)
		{
			return default(bool);
		}

		[Token(Token = "0x6001951")]
		[Address(RVA = "0xF630C8", Offset = "0xF630C8", VA = "0xF630C8", Slot = "6")]
		public void Stop()
		{
		}

		[Token(Token = "0x6001952")]
		[Address(RVA = "0xF6329C", Offset = "0xF6329C", VA = "0xF6329C")]
		private bool CanRumble()
		{
			return default(bool);
		}

		[Token(Token = "0x6001953")]
		[Address(RVA = "0xF63118", Offset = "0xF63118", VA = "0xF63118")]
		private void UpdateRumbleState()
		{
		}

		[Token(Token = "0x6001954")]
		[Address(RVA = "0xF63310", Offset = "0xF63310", VA = "0xF63310")]
		private void OnDeviceRemovedFromUser(IDeviceId device, int userIndex)
		{
		}

		[Token(Token = "0x6001955")]
		[Address(RVA = "0xF63314", Offset = "0xF63314", VA = "0xF63314")]
		private void OnDeviceConnected(IDeviceId device)
		{
		}

		[Token(Token = "0x6001956")]
		[Address(RVA = "0xF63318", Offset = "0xF63318", VA = "0xF63318")]
		private void OnDeviceDisconnected(IDeviceId device)
		{
		}

		[Token(Token = "0x6001957")]
		[Address(RVA = "0xF6331C", Offset = "0xF6331C", VA = "0xF6331C")]
		private void OnVibrationFeedbackChangedEvent(float t)
		{
		}

		[Token(Token = "0x6001958")]
		[Address(RVA = "0xF63324", Offset = "0xF63324", VA = "0xF63324")]
		public UnityRumbleService()
		{
		}
	}
	[Token(Token = "0x200045A")]
	public interface ISceneDataPopulator
	{
		[Token(Token = "0x1700031C")]
		bool isFinished
		{
			[Token(Token = "0x6001959")]
			get;
		}

		[Token(Token = "0x1700031D")]
		Transform looseObjectRoot
		{
			[Token(Token = "0x6001962")]
			get;
		}

		[Token(Token = "0x1700031E")]
		IUpdateCollection worldUpdateCollection
		{
			[Token(Token = "0x6001963")]
			get;
		}

		[Token(Token = "0x1700031F")]
		IUpdateCollection worldFixedUpdateCollection
		{
			[Token(Token = "0x6001964")]
			get;
		}

		[Token(Token = "0x600195A")]
		bool Initialise(IInitialisationManager initialisationManager, IUpdateManager updateManager, WorldSerialiser worldSerialiser, WorldDeserialiser worldDeserialiser);

		[Token(Token = "0x600195B")]
		void Run(List<GameObject> rootObjects);

		[Token(Token = "0x600195C")]
		void Cancel();

		[Token(Token = "0x600195D")]
		bool InitialiseGameObject(GameObject obj);

		[Token(Token = "0x600195E")]
		bool AddGameObject(GameObject obj);

		[Token(Token = "0x600195F")]
		bool AddComponent(GameObject obj, Component component);

		[Token(Token = "0x6001960")]
		bool RemoveComponent(GameObject obj, Component component);

		[Token(Token = "0x6001961")]
		bool RemoveGameObject(GameObject obj);
	}
	[Token(Token = "0x200045B")]
	public class SceneDataPopulator : MonoBehaviour, IService, ISceneDataPopulator
	{
		[Token(Token = "0x4001461")]
		private const int c_maxProcessingTimePerUpdate = 16;

		[Token(Token = "0x4001462")]
		private const int c_maxObjectsProcessedPerUpdate = 1024;

		[Token(Token = "0x4001463")]
		private const int c_objectListInitialSize = 4096;

		[Token(Token = "0x4001464")]
		private const int c_runtimeComponentListInitialSize = 8;

		[Token(Token = "0x4001465")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static List<IUpdatable> s_tempRuntimeUpdatableList;

		[Token(Token = "0x4001466")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static List<IFixedUpdatable> s_tempRuntimeFixedUpdatableList;

		[Token(Token = "0x4001467")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static List<ISerialisable> s_tempRuntimeSerialisableList;

		[Token(Token = "0x4001468")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static List<IDeserialisable> s_tempRuntimeDeserialisableList;

		[Token(Token = "0x4001469")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static List<IPostDeserialiseNotified> s_tempRuntimeDeserialiseNotifiedList;

		[Token(Token = "0x400146A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private BakedSceneObjectData _bakedData;

		[Token(Token = "0x400146B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private HashSet<int> _bakedObjectIds;

		[Token(Token = "0x400146C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private SceneObjectGatherer _runtimeObjectGatherer;

		[Token(Token = "0x400146D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private List<GameObject> _runtimeRootObjects;

		[Token(Token = "0x400146E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private List<GameObject> _runtimeGatheredObjects;

		[Token(Token = "0x400146F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private int _processedIndex;

		[Token(Token = "0x4001470")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private int _processedSubIndex;

		[Token(Token = "0x4001471")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private (ISceneComponentCollection, Func<ISceneComponentCollection, int, int, int>)[] _bakedComponentSetupFunctions;

		[Token(Token = "0x4001472")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private bool _started;

		[Token(Token = "0x4001473")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
		private bool _scanning;

		[Token(Token = "0x4001474")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x52")]
		private bool _processingBaked;

		[Token(Token = "0x4001475")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x53")]
		private bool _processingRuntime;

		[Token(Token = "0x4001476")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private bool _finished;

		[Token(Token = "0x4001477")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private IInitialisationManager _initialisationManager;

		[Token(Token = "0x4001478")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private IUpdateManager _updateManager;

		[Token(Token = "0x4001479")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private UpdateCollection _updateCollection;

		[Token(Token = "0x400147A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private FixedUpdateCollection _fixedUpdateCollection;

		[Token(Token = "0x400147B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private UpdateCollection _worldUpdateCollection;

		[Token(Token = "0x400147C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private FixedUpdateCollection _worldFixedUpdateCollection;

		[Token(Token = "0x400147D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private WorldSerialiser _worldSerialiser;

		[Token(Token = "0x400147E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private WorldDeserialiser _worldDeserialiser;

		[Token(Token = "0x400147F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Transform _looseObjectRoot;

		[Token(Token = "0x4001480")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static Stopwatch s_processingTimer;

		[Token(Token = "0x4001481")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private ProfilerMarker _profileMarker;

		[Token(Token = "0x4001482")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private ProfilerMarker _collectionProfileMarker;

		[Token(Token = "0x4001483")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private ProfilerMarker _objectProfileMarker;

		[Token(Token = "0x17000320")]
		public bool isFinished
		{
			[Token(Token = "0x6001965")]
			[Address(RVA = "0xF6333C", Offset = "0xF6333C", VA = "0xF6333C", Slot = "7")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000321")]
		public Transform looseObjectRoot
		{
			[Token(Token = "0x6001966")]
			[Address(RVA = "0xF63344", Offset = "0xF63344", VA = "0xF63344", Slot = "16")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000322")]
		public IUpdateCollection worldUpdateCollection
		{
			[Token(Token = "0x6001967")]
			[Address(RVA = "0xF6334C", Offset = "0xF6334C", VA = "0xF6334C", Slot = "17")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000323")]
		public IUpdateCollection worldFixedUpdateCollection
		{
			[Token(Token = "0x6001968")]
			[Address(RVA = "0xF63354", Offset = "0xF63354", VA = "0xF63354", Slot = "18")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001969")]
		[Address(RVA = "0xF6335C", Offset = "0xF6335C", VA = "0xF6335C")]
		static SceneDataPopulator()
		{
		}

		[Token(Token = "0x600196A")]
		[Address(RVA = "0xF63598", Offset = "0xF63598", VA = "0xF63598")]
		public SceneDataPopulator()
		{
		}

		[Token(Token = "0x600196B")]
		[Address(RVA = "0xF63954", Offset = "0xF63954", VA = "0xF63954", Slot = "8")]
		public bool Initialise(IInitialisationManager initialisationManager, IUpdateManager updateManager, WorldSerialiser worldSerialiser, WorldDeserialiser worldDeserialiser)
		{
			return default(bool);
		}

		[Token(Token = "0x600196C")]
		[Address(RVA = "0xF63FCC", Offset = "0xF63FCC", VA = "0xF63FCC", Slot = "4")]
		public void OnStartUp()
		{
		}

		[Token(Token = "0x600196D")]
		[Address(RVA = "0xF64138", Offset = "0xF64138", VA = "0xF64138", Slot = "5")]
		public void OnCleanUp()
		{
		}

		[Token(Token = "0x600196E")]
		[Address(RVA = "0xF641CC", Offset = "0xF641CC", VA = "0xF641CC", Slot = "6")]
		public void OnUpdate(float dt)
		{
		}

		[Token(Token = "0x600196F")]
		[Address(RVA = "0xF64798", Offset = "0xF64798", VA = "0xF64798")]
		private bool ProcessBakedComponents((ISceneComponentCollection collection, Func<ISceneComponentCollection, int, int, int> batchSetupFunction)[] collectionSetups, ref int collectionIndex, ref int componentIndex)
		{
			return default(bool);
		}

		[Token(Token = "0x6001970")]
		private int ProcessCollection<T>(ISceneComponentCollection collection, Action<GameObject, T> setupFunction, int startIndex, int objectsThisFrame, bool requireEnabled) where T : class
		{
			return default(int);
		}

		[Token(Token = "0x6001971")]
		[Address(RVA = "0xF649A4", Offset = "0xF649A4", VA = "0xF649A4")]
		private bool ProcessObjectList(IList<GameObject> objectList, ref int index)
		{
			return default(bool);
		}

		[Token(Token = "0x6001972")]
		[Address(RVA = "0xF64FD8", Offset = "0xF64FD8", VA = "0xF64FD8", Slot = "9")]
		public void Run(List<GameObject> rootObjects)
		{
		}

		[Token(Token = "0x6001973")]
		[Address(RVA = "0xF656A4", Offset = "0xF656A4", VA = "0xF656A4", Slot = "10")]
		public void Cancel()
		{
		}

		[Token(Token = "0x6001974")]
		[Address(RVA = "0xF65740", Offset = "0xF65740", VA = "0xF65740")]
		private bool TryGetUpdateCollection(IUpdatable updatable, out UpdateCollection collection)
		{
			return default(bool);
		}

		[Token(Token = "0x6001975")]
		[Address(RVA = "0xF657C0", Offset = "0xF657C0", VA = "0xF657C0")]
		private bool TryGetFixedUpdateCollection(IFixedUpdatable fixedUpdatable, out FixedUpdateCollection collection)
		{
			return default(bool);
		}

		[Token(Token = "0x6001976")]
		[Address(RVA = "0xF64C44", Offset = "0xF64C44", VA = "0xF64C44", Slot = "11")]
		public bool InitialiseGameObject(GameObject obj)
		{
			return default(bool);
		}

		[Token(Token = "0x6001977")]
		[Address(RVA = "0xF64D00", Offset = "0xF64D00", VA = "0xF64D00", Slot = "12")]
		public bool AddGameObject(GameObject obj)
		{
			return default(bool);
		}

		[Token(Token = "0x6001978")]
		[Address(RVA = "0xF65840", Offset = "0xF65840", VA = "0xF65840", Slot = "13")]
		public bool AddComponent(GameObject obj, Component component)
		{
			return default(bool);
		}

		[Token(Token = "0x6001979")]
		[Address(RVA = "0xF65A0C", Offset = "0xF65A0C", VA = "0xF65A0C", Slot = "14")]
		public bool RemoveComponent(GameObject obj, Component component)
		{
			return default(bool);
		}

		[Token(Token = "0x600197A")]
		[Address(RVA = "0xF65B58", Offset = "0xF65B58", VA = "0xF65B58", Slot = "15")]
		public bool RemoveGameObject(GameObject obj)
		{
			return default(bool);
		}

		[Token(Token = "0x600197B")]
		[Address(RVA = "0xF65C7C", Offset = "0xF65C7C", VA = "0xF65C7C")]
		private void Setup_Initialisable(GameObject obj, IInitialisable initialisable)
		{
		}

		[Token(Token = "0x600197C")]
		[Address(RVA = "0xF65D28", Offset = "0xF65D28", VA = "0xF65D28")]
		private void Setup_Updatable(GameObject obj, IUpdatable updatable)
		{
		}

		[Token(Token = "0x600197D")]
		[Address(RVA = "0xF65DF0", Offset = "0xF65DF0", VA = "0xF65DF0")]
		private void Setup_FixedUpdatable(GameObject obj, IFixedUpdatable fixedUpdatable)
		{
		}

		[Token(Token = "0x600197E")]
		[Address(RVA = "0xF65EB8", Offset = "0xF65EB8", VA = "0xF65EB8")]
		private void Setup_Serialisable(GameObject obj, ISerialisable serialisable)
		{
		}

		[Token(Token = "0x600197F")]
		[Address(RVA = "0xF65ED4", Offset = "0xF65ED4", VA = "0xF65ED4")]
		private void Setup_Deserialisable(GameObject obj, IDeserialisable deserialisable)
		{
		}

		[Token(Token = "0x6001980")]
		[Address(RVA = "0xF65EF0", Offset = "0xF65EF0", VA = "0xF65EF0")]
		private void Setup_DeserialiseNotified(GameObject obj, IPostDeserialiseNotified notified)
		{
		}
	}
	[Token(Token = "0x200045C")]
	public class BakedSceneObjectData : MonoBehaviour
	{
		[Token(Token = "0x4001484")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject[] _bakedObjects;

		[Token(Token = "0x4001485")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private ComponentCollection_Initialisable _initialisables;

		[Token(Token = "0x4001486")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private ComponentCollection_Updatable _updatables;

		[Token(Token = "0x4001487")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private ComponentCollection_FixedUpdatable _fixedUpdatables;

		[Token(Token = "0x4001488")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private ComponentCollection_Serialisable _serialisables;

		[Token(Token = "0x4001489")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private ComponentCollection_Deserialisable _deserialisables;

		[Token(Token = "0x400148A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private ComponentCollection_DeserialiseNotified _deserialiseNotifieds;

		[Token(Token = "0x17000324")]
		public GameObject[] objects
		{
			[Token(Token = "0x6001988")]
			[Address(RVA = "0xF663A4", Offset = "0xF663A4", VA = "0xF663A4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000325")]
		public SceneComponentCollection<IInitialisable> initialisableComponents
		{
			[Token(Token = "0x6001989")]
			[Address(RVA = "0xF663AC", Offset = "0xF663AC", VA = "0xF663AC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000326")]
		public SceneComponentCollection<IUpdatable> updatableComponents
		{
			[Token(Token = "0x600198A")]
			[Address(RVA = "0xF663B4", Offset = "0xF663B4", VA = "0xF663B4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000327")]
		public SceneComponentCollection<IFixedUpdatable> fixedUpdatableComponents
		{
			[Token(Token = "0x600198B")]
			[Address(RVA = "0xF663BC", Offset = "0xF663BC", VA = "0xF663BC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000328")]
		public SceneComponentCollection<ISerialisable> serialisableComponents
		{
			[Token(Token = "0x600198C")]
			[Address(RVA = "0xF663C4", Offset = "0xF663C4", VA = "0xF663C4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000329")]
		public SceneComponentCollection<IDeserialisable> deserialisableComponents
		{
			[Token(Token = "0x600198D")]
			[Address(RVA = "0xF663CC", Offset = "0xF663CC", VA = "0xF663CC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700032A")]
		public SceneComponentCollection<IPostDeserialiseNotified> postDeserialiseNotifiedComponents
		{
			[Token(Token = "0x600198E")]
			[Address(RVA = "0xF663D4", Offset = "0xF663D4", VA = "0xF663D4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600198F")]
		[Address(RVA = "0xF663DC", Offset = "0xF663DC", VA = "0xF663DC")]
		public BakedSceneObjectData()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200045D")]
	public class ComponentCollection_Initialisable : SceneComponentCollection<IInitialisable>
	{
		[Token(Token = "0x6001990")]
		[Address(RVA = "0xF6659C", Offset = "0xF6659C", VA = "0xF6659C")]
		public ComponentCollection_Initialisable()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200045E")]
	public class ComponentCollection_Updatable : SceneComponentCollection<IUpdatable>
	{
		[Token(Token = "0x6001991")]
		[Address(RVA = "0xF665E4", Offset = "0xF665E4", VA = "0xF665E4")]
		public ComponentCollection_Updatable()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200045F")]
	public class ComponentCollection_FixedUpdatable : SceneComponentCollection<IFixedUpdatable>
	{
		[Token(Token = "0x6001992")]
		[Address(RVA = "0xF6662C", Offset = "0xF6662C", VA = "0xF6662C")]
		public ComponentCollection_FixedUpdatable()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000460")]
	public class ComponentCollection_Serialisable : SceneComponentCollection<ISerialisable>
	{
		[Token(Token = "0x6001993")]
		[Address(RVA = "0xF66674", Offset = "0xF66674", VA = "0xF66674")]
		public ComponentCollection_Serialisable()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000461")]
	public class ComponentCollection_Deserialisable : SceneComponentCollection<IDeserialisable>
	{
		[Token(Token = "0x6001994")]
		[Address(RVA = "0xF666BC", Offset = "0xF666BC", VA = "0xF666BC")]
		public ComponentCollection_Deserialisable()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000462")]
	public class ComponentCollection_DeserialiseNotified : SceneComponentCollection<IPostDeserialiseNotified>
	{
		[Token(Token = "0x6001995")]
		[Address(RVA = "0xF66704", Offset = "0xF66704", VA = "0xF66704")]
		public ComponentCollection_DeserialiseNotified()
		{
		}
	}
	[Token(Token = "0x2000463")]
	public interface ISceneComponentCollection
	{
		[Token(Token = "0x1700032B")]
		int Count
		{
			[Token(Token = "0x6001996")]
			get;
		}

		[Token(Token = "0x6001997")]
		void Setup();
	}
	[Serializable]
	[Token(Token = "0x2000464")]
	public class SceneComponentCollection<T> : ISceneComponentCollection where T : class
	{
		[Serializable]
		[Token(Token = "0x2000465")]
		private struct ObjectComponentSegment
		{
			[Token(Token = "0x4001490")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public GameObject obj;

			[Token(Token = "0x4001491")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int start;

			[Token(Token = "0x4001492")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int count;
		}

		[Token(Token = "0x400148B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private Component[] _components;

		[Token(Token = "0x400148C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private ObjectComponentSegment[] _objectComponentSegments;

		[Token(Token = "0x400148D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private MonoBehaviour[] _behaviours;

		[Token(Token = "0x400148E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private T[] _typedComponents;

		[Token(Token = "0x400148F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Dictionary<int, ArraySegment<T>> _objectComponentsLookup;

		[Token(Token = "0x1700032C")]
		public MonoBehaviour[] behaviours
		{
			[Token(Token = "0x6001998")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700032D")]
		public T[] components
		{
			[Token(Token = "0x6001999")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700032E")]
		public int Count
		{
			[Token(Token = "0x600199A")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x600199B")]
		public void Setup()
		{
		}

		[Token(Token = "0x600199C")]
		public bool TryGetComponents(GameObject obj, out ArraySegment<T> output)
		{
			return default(bool);
		}

		[Token(Token = "0x600199D")]
		public SceneComponentCollection()
		{
		}
	}
	[Token(Token = "0x2000466")]
	public interface ISceneHelper
	{
		[Token(Token = "0x1700032F")]
		bool isReady
		{
			[Token(Token = "0x600199E")]
			get;
		}

		[Token(Token = "0x17000330")]
		List<string> PendingSceneLoads
		{
			[Token(Token = "0x600199F")]
			get;
		}

		[Token(Token = "0x60019A0")]
		Camera FindMainCameraInScene(Scene scene);

		[Token(Token = "0x60019A1")]
		T FindComponentInScene<T>(Scene scene) where T : MonoBehaviour;

		[Token(Token = "0x60019A2")]
		bool SetBackgroundScene(Scene scene);

		[Token(Token = "0x60019A3")]
		bool SetForegroundScene(Scene scene, Camera mainCamera);

		[Token(Token = "0x60019A4")]
		bool QueueSceneLoad(string sceneName, TransitionConfig transitions);

		[Token(Token = "0x60019A5")]
		bool GetPendingSceneLoad(out string sceneName, out TransitionConfig transitions);

		[Token(Token = "0x60019A6")]
		bool AdditiveScene(Scene scene);

		[Token(Token = "0x60019A7")]
		void FinaliseLoadedScenes();

		[Token(Token = "0x60019A8")]
		void ClearPendingSceneLoads();
	}
	[Serializable]
	[Token(Token = "0x2000467")]
	public struct TransitionConfig
	{
		[Token(Token = "0x2000468")]
		public enum Transition
		{
			[Token(Token = "0x4001498")]
			None,
			[Token(Token = "0x4001499")]
			FadeBlack,
			[Token(Token = "0x400149A")]
			IntroSplash
		}

		[Token(Token = "0x4001493")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Transition preLoad;

		[Token(Token = "0x4001494")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float preLoadDuration;

		[Token(Token = "0x4001495")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Transition postLoad;

		[Token(Token = "0x4001496")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float postLoadDuration;

		[Token(Token = "0x17000331")]
		public static TransitionConfig none
		{
			[Token(Token = "0x60019A9")]
			[Address(RVA = "0xF6674C", Offset = "0xF6674C", VA = "0xF6674C")]
			get
			{
				return default(TransitionConfig);
			}
		}
	}
	[Token(Token = "0x2000469")]
	public class SceneHelper : MonoBehaviour, IService, ISceneHelper
	{
		[Token(Token = "0x400149B")]
		private const int c_tempRootObjectsListInitialSize = 32;

		[Token(Token = "0x400149C")]
		private const int c_tempCamerasListInitialSize = 4;

		[Token(Token = "0x400149D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static bool s_tetrahedralizing;

		[Token(Token = "0x400149E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static List<GameObject> s_tempRootObjects;

		[Token(Token = "0x400149F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static List<Camera> s_tempCameras;

		[Token(Token = "0x40014A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private List<string> _pendingSceneLoads;

		[Token(Token = "0x40014A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private TransitionConfig _pendingTransitionConfig;

		[Token(Token = "0x17000332")]
		public List<string> PendingSceneLoads
		{
			[Token(Token = "0x60019AA")]
			[Address(RVA = "0xF66758", Offset = "0xF66758", VA = "0xF66758", Slot = "8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000333")]
		public bool isReady
		{
			[Token(Token = "0x60019B3")]
			[Address(RVA = "0xF66BB4", Offset = "0xF66BB4", VA = "0xF66BB4", Slot = "7")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60019AB")]
		[Address(RVA = "0xF66760", Offset = "0xF66760", VA = "0xF66760")]
		static SceneHelper()
		{
		}

		[Token(Token = "0x60019AC")]
		[Address(RVA = "0xF6684C", Offset = "0xF6684C", VA = "0xF6684C")]
		public SceneHelper()
		{
		}

		[Token(Token = "0x60019AD")]
		[Address(RVA = "0xF668D8", Offset = "0xF668D8", VA = "0xF668D8", Slot = "4")]
		public void OnStartUp()
		{
		}

		[Token(Token = "0x60019AE")]
		[Address(RVA = "0xF66980", Offset = "0xF66980", VA = "0xF66980", Slot = "5")]
		public void OnCleanUp()
		{
		}

		[Token(Token = "0x60019AF")]
		[Address(RVA = "0xF66984", Offset = "0xF66984", VA = "0xF66984", Slot = "6")]
		public void OnUpdate(float dt)
		{
		}

		[Token(Token = "0x60019B0")]
		[Address(RVA = "0xF66988", Offset = "0xF66988", VA = "0xF66988", Slot = "13")]
		public bool QueueSceneLoad(string sceneName, [Optional] TransitionConfig transitions)
		{
			return default(bool);
		}

		[Token(Token = "0x60019B1")]
		[Address(RVA = "0xF66A70", Offset = "0xF66A70", VA = "0xF66A70", Slot = "14")]
		public bool GetPendingSceneLoad(out string name, out TransitionConfig transitions)
		{
			return default(bool);
		}

		[Token(Token = "0x60019B2")]
		[Address(RVA = "0xF66B44", Offset = "0xF66B44", VA = "0xF66B44", Slot = "17")]
		public void ClearPendingSceneLoads()
		{
		}

		[Token(Token = "0x60019B4")]
		[Address(RVA = "0xF66C14", Offset = "0xF66C14", VA = "0xF66C14", Slot = "15")]
		public bool AdditiveScene(Scene scene)
		{
			return default(bool);
		}

		[Token(Token = "0x60019B5")]
		[Address(RVA = "0xF66CF8", Offset = "0xF66CF8", VA = "0xF66CF8", Slot = "16")]
		public void FinaliseLoadedScenes()
		{
		}

		[Token(Token = "0x60019B6")]
		[Address(RVA = "0xF66D58", Offset = "0xF66D58", VA = "0xF66D58", Slot = "9")]
		public Camera FindMainCameraInScene(Scene scene)
		{
			return null;
		}

		[Token(Token = "0x60019B7")]
		public T FindComponentInScene<T>(Scene scene) where T : MonoBehaviour
		{
			return null;
		}

		[Token(Token = "0x60019B8")]
		[Address(RVA = "0xF67170", Offset = "0xF67170", VA = "0xF67170", Slot = "11")]
		public bool SetBackgroundScene(Scene scene)
		{
			return default(bool);
		}

		[Token(Token = "0x60019B9")]
		[Address(RVA = "0xF674CC", Offset = "0xF674CC", VA = "0xF674CC", Slot = "12")]
		public bool SetForegroundScene(Scene scene, Camera mainCamera)
		{
			return default(bool);
		}

		[Token(Token = "0x60019BA")]
		[Address(RVA = "0xF676B8", Offset = "0xF676B8", VA = "0xF676B8")]
		private static void OnTetrahedralizationCompletedCallback()
		{
		}
	}
	[Token(Token = "0x200046A")]
	public class SceneObjectGatherer
	{
		[Token(Token = "0x40014A2")]
		private const int c_maxProcessingTimePerUpdate = 4;

		[Token(Token = "0x40014A3")]
		private const int c_maxTransformsProcessedPerUpdate = 1024;

		[Token(Token = "0x40014A4")]
		private const int c_rootTransformListInitialSize = 32;

		[Token(Token = "0x40014A5")]
		private const int c_transformHierarchyIndexListInitialSize = 32;

		[Token(Token = "0x40014A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private List<Transform> _rootTransforms;

		[Token(Token = "0x40014A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Stack<(Transform, int)> _transformHierarchy;

		[Token(Token = "0x40014A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int _rootTransformIndex;

		[Token(Token = "0x40014A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Stopwatch s_processingTimer;

		[Token(Token = "0x40014AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool _started;

		[Token(Token = "0x40014AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
		private bool _finished;

		[Token(Token = "0x40014AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private List<GameObject> _outputList;

		[Token(Token = "0x40014AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private ProfilerMarker _gatherMarker;

		[Token(Token = "0x17000334")]
		public bool isFinished
		{
			[Token(Token = "0x60019BB")]
			[Address(RVA = "0xF67710", Offset = "0xF67710", VA = "0xF67710")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60019BC")]
		[Address(RVA = "0xF637FC", Offset = "0xF637FC", VA = "0xF637FC")]
		public SceneObjectGatherer()
		{
		}

		[Token(Token = "0x60019BD")]
		[Address(RVA = "0xF65408", Offset = "0xF65408", VA = "0xF65408")]
		public void BeginGather(List<GameObject> rootObjects, List<GameObject> output)
		{
		}

		[Token(Token = "0x60019BE")]
		[Address(RVA = "0xF677E0", Offset = "0xF677E0", VA = "0xF677E0")]
		public void Cancel()
		{
		}

		[Token(Token = "0x60019BF")]
		[Address(RVA = "0xF6430C", Offset = "0xF6430C", VA = "0xF6430C")]
		public void OnUpdate(float dt)
		{
		}

		[Token(Token = "0x60019C0")]
		[Address(RVA = "0xF67718", Offset = "0xF67718", VA = "0xF67718")]
		private static void AddChildHierarchy(Transform root, Stack<(Transform, int)> stack)
		{
		}
	}
	[Token(Token = "0x200046B")]
	public interface IStateController
	{
	}
	[Token(Token = "0x200046C")]
	public class StateController : MonoBehaviour, IStateController, IService
	{
		[Token(Token = "0x40014AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private State<GameStateContext> m_InitialState;

		[Token(Token = "0x40014AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private GameStateContext _sharedStateData;

		[Token(Token = "0x40014B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private StateContext<GameStateContext> _stateContext;

		[Token(Token = "0x17000335")]
		public GameStateContext SharedContextInformation
		{
			[Token(Token = "0x60019C1")]
			[Address(RVA = "0xF6787C", Offset = "0xF6787C", VA = "0xF6787C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60019C2")]
		[Address(RVA = "0xF67884", Offset = "0xF67884", VA = "0xF67884", Slot = "4")]
		public void OnStartUp()
		{
		}

		[Token(Token = "0x60019C3")]
		[Address(RVA = "0xF679A8", Offset = "0xF679A8", VA = "0xF679A8", Slot = "6")]
		public void OnUpdate(float dt)
		{
		}

		[Token(Token = "0x60019C4")]
		[Address(RVA = "0xF679F8", Offset = "0xF679F8", VA = "0xF679F8", Slot = "5")]
		public void OnCleanUp()
		{
		}

		[Token(Token = "0x60019C5")]
		[Address(RVA = "0xF679FC", Offset = "0xF679FC", VA = "0xF679FC")]
		public StateController()
		{
		}
	}
	[Token(Token = "0x200046D")]
	public class WorldServices : MonoBehaviour
	{
		[Token(Token = "0x40014B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private InitialisationManager _initialisationManager;

		[Token(Token = "0x40014B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private UpdateManager _updateManager;

		[Token(Token = "0x40014B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private SceneDataPopulator _sceneDataPopulator;

		[Token(Token = "0x40014B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private OcclusionService _occlusionService;

		[Token(Token = "0x40014B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private OutlineManager _outlineManager;

		[Token(Token = "0x40014B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private RealtimeLightManager _realtimeLightManager;

		[Token(Token = "0x40014B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private OutlineMeshBatcher _outlineMeshBatcher;

		[Token(Token = "0x40014B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private LightmapManager _lightingManager;

		[Token(Token = "0x40014B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private AudioEmitterService _audioEmitterService;

		[Token(Token = "0x40014BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private NarrativeManager _narrativeManager;

		[Token(Token = "0x40014BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private DialogueManager _dialogueManager;

		[Token(Token = "0x40014BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private EventManager _eventManager;

		[Token(Token = "0x40014BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private AnimatedSequenceHelper _animatedSequenceHelper;

		[Token(Token = "0x40014BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private StoryObjectCheckpointHelper _storyObjectCheckpointHelper;

		[Token(Token = "0x40014BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private AchievementHelper _achievementHelper;

		[Token(Token = "0x40014C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private FadingSequenceHelper _fadingSequenceHelper;

		[Token(Token = "0x40014C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private WorldUIManager _uiManager;

		[Token(Token = "0x40014C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private SceneObjectReferences _sceneObjectReferences;

		[Token(Token = "0x40014C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private WorldSerialiser _worldSerialiser;

		[Token(Token = "0x40014C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private WorldDeserialiser _worldDeserialiser;

		[Token(Token = "0x40014C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private DebugManager _debugManager;

		[Token(Token = "0x40014C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private ObjectRestorationService _objectRestorationService;

		[Token(Token = "0x40014C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private PausableObjectService _pausableObjectService;

		[Token(Token = "0x40014C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static WorldServices s_instance;

		[Token(Token = "0x17000336")]
		public static IInitialisationManager initialisationManager
		{
			[Token(Token = "0x60019C6")]
			[Address(RVA = "0xF67A04", Offset = "0xF67A04", VA = "0xF67A04")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000337")]
		public static IUpdateManager updateManager
		{
			[Token(Token = "0x60019C7")]
			[Address(RVA = "0xF67A58", Offset = "0xF67A58", VA = "0xF67A58")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000338")]
		public static ISceneDataPopulator sceneDataPopulator
		{
			[Token(Token = "0x60019C8")]
			[Address(RVA = "0xF67AAC", Offset = "0xF67AAC", VA = "0xF67AAC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000339")]
		public static OcclusionService occlusionService
		{
			[Token(Token = "0x60019C9")]
			[Address(RVA = "0xF67B00", Offset = "0xF67B00", VA = "0xF67B00")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700033A")]
		public static OutlineManager outlineManager
		{
			[Token(Token = "0x60019CA")]
			[Address(RVA = "0xF67B54", Offset = "0xF67B54", VA = "0xF67B54")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700033B")]
		public static RealtimeLightManager realtimeLightManager
		{
			[Token(Token = "0x60019CB")]
			[Address(RVA = "0xF67BA8", Offset = "0xF67BA8", VA = "0xF67BA8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700033C")]
		public static OutlineMeshBatcher outlineMeshBatcher
		{
			[Token(Token = "0x60019CC")]
			[Address(RVA = "0xF67BFC", Offset = "0xF67BFC", VA = "0xF67BFC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700033D")]
		public static LightmapManager lightingManager
		{
			[Token(Token = "0x60019CD")]
			[Address(RVA = "0xF67C50", Offset = "0xF67C50", VA = "0xF67C50")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700033E")]
		public static IAudioEmitterService audioEmitterService
		{
			[Token(Token = "0x60019CE")]
			[Address(RVA = "0xF67CA4", Offset = "0xF67CA4", VA = "0xF67CA4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700033F")]
		public static INarrativeManager narrativeManager
		{
			[Token(Token = "0x60019CF")]
			[Address(RVA = "0xF67CF8", Offset = "0xF67CF8", VA = "0xF67CF8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000340")]
		public static IDialogueManager dialogueManager
		{
			[Token(Token = "0x60019D0")]
			[Address(RVA = "0xF67D4C", Offset = "0xF67D4C", VA = "0xF67D4C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000341")]
		public static EventManager eventManager
		{
			[Token(Token = "0x60019D1")]
			[Address(RVA = "0xF67DA0", Offset = "0xF67DA0", VA = "0xF67DA0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000342")]
		public static IAnimatedSequenceHelper animatedSequenceHelper
		{
			[Token(Token = "0x60019D2")]
			[Address(RVA = "0xF67DF4", Offset = "0xF67DF4", VA = "0xF67DF4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000343")]
		public static StoryObjectCheckpointHelper storyObjectCheckpointHelper
		{
			[Token(Token = "0x60019D3")]
			[Address(RVA = "0xF67E48", Offset = "0xF67E48", VA = "0xF67E48")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000344")]
		public static AchievementHelper achievementHelper
		{
			[Token(Token = "0x60019D4")]
			[Address(RVA = "0xF67E9C", Offset = "0xF67E9C", VA = "0xF67E9C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000345")]
		public static IFadingSequenceHelper fadingSequenceHelper
		{
			[Token(Token = "0x60019D5")]
			[Address(RVA = "0xF67EF0", Offset = "0xF67EF0", VA = "0xF67EF0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000346")]
		public static WorldUIManager uiManager
		{
			[Token(Token = "0x60019D6")]
			[Address(RVA = "0xF67F44", Offset = "0xF67F44", VA = "0xF67F44")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000347")]
		public SceneObjectReferences sceneObjectReferences
		{
			[Token(Token = "0x60019D7")]
			[Address(RVA = "0xF67F98", Offset = "0xF67F98", VA = "0xF67F98")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000348")]
		public WorldSerialiser worldSerialiser
		{
			[Token(Token = "0x60019D8")]
			[Address(RVA = "0xF67FA0", Offset = "0xF67FA0", VA = "0xF67FA0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000349")]
		public WorldDeserialiser worldDeserialiser
		{
			[Token(Token = "0x60019D9")]
			[Address(RVA = "0xF67FA8", Offset = "0xF67FA8", VA = "0xF67FA8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700034A")]
		public static ObjectRestorationService objectRestorationService
		{
			[Token(Token = "0x60019DA")]
			[Address(RVA = "0xF67FB0", Offset = "0xF67FB0", VA = "0xF67FB0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700034B")]
		public static PausableObjectService pauseableObjectService
		{
			[Token(Token = "0x60019DB")]
			[Address(RVA = "0xF68004", Offset = "0xF68004", VA = "0xF68004")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700034C")]
		public static bool isInitialised
		{
			[Token(Token = "0x60019DC")]
			[Address(RVA = "0xF68058", Offset = "0xF68058", VA = "0xF68058")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60019DD")]
		[Address(RVA = "0xF680D0", Offset = "0xF680D0", VA = "0xF680D0")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60019DE")]
		[Address(RVA = "0xF682D8", Offset = "0xF682D8", VA = "0xF682D8")]
		public bool Initialise()
		{
			return default(bool);
		}

		[Token(Token = "0x60019DF")]
		[Address(RVA = "0xF680D4", Offset = "0xF680D4", VA = "0xF680D4")]
		public bool Cleanup()
		{
			return default(bool);
		}

		[Token(Token = "0x60019E0")]
		[Address(RVA = "0xF68D28", Offset = "0xF68D28", VA = "0xF68D28")]
		private void Update()
		{
		}

		[Token(Token = "0x60019E1")]
		[Address(RVA = "0xF69FD4", Offset = "0xF69FD4", VA = "0xF69FD4")]
		public WorldServices()
		{
		}
	}
	[Token(Token = "0x200046E")]
	public class WorldUIManager : MonoBehaviour, IService
	{
		[Token(Token = "0x200046F")]
		public enum ShowCharacterName
		{
			[Token(Token = "0x40014ED")]
			NEVER,
			[Token(Token = "0x40014EE")]
			FIRST,
			[Token(Token = "0x40014EF")]
			ALWAYS
		}

		[Token(Token = "0x2000470")]
		private struct Toast
		{
			[Token(Token = "0x40014F0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public string text;

			[Token(Token = "0x40014F1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public float queueTime;

			[Token(Token = "0x40014F2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public float delayTime;

			[Token(Token = "0x40014F3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public float duration;

			[Token(Token = "0x40014F4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public EventInstance fmodEventInstance;
		}

		[Token(Token = "0x2000473")]
		[CompilerGenerated]
		private sealed class <ShowSettingsChangedToastRoutine>d__75 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40014F9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40014FA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40014FB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public WorldUIManager <>4__this;

			[Token(Token = "0x40014FC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public LocalizedString text;

			[Token(Token = "0x17000355")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001A0C")]
				[Address(RVA = "0xF6BAEC", Offset = "0xF6BAEC", VA = "0xF6BAEC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000356")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001A0E")]
				[Address(RVA = "0xF6BB34", Offset = "0xF6BB34", VA = "0xF6BB34", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001A09")]
			[Address(RVA = "0xF6B730", Offset = "0xF6B730", VA = "0xF6B730")]
			[DebuggerHidden]
			public <ShowSettingsChangedToastRoutine>d__75(int <>1__state)
			{
			}

			[Token(Token = "0x6001A0A")]
			[Address(RVA = "0xF6B9A4", Offset = "0xF6B9A4", VA = "0xF6B9A4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001A0B")]
			[Address(RVA = "0xF6B9A8", Offset = "0xF6B9A8", VA = "0xF6B9A8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001A0D")]
			[Address(RVA = "0xF6BAF4", Offset = "0xF6BAF4", VA = "0xF6BAF4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000474")]
		[CompilerGenerated]
		private sealed class <BuildCollectedItemPromptRoutine>d__77 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40014FD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40014FE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40014FF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public WorldUIManager <>4__this;

			[Token(Token = "0x4001500")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private Toast <toast>5__2;

			[Token(Token = "0x17000357")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001A12")]
				[Address(RVA = "0xF6BDC0", Offset = "0xF6BDC0", VA = "0xF6BDC0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000358")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001A14")]
				[Address(RVA = "0xF6BE08", Offset = "0xF6BE08", VA = "0xF6BE08", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001A0F")]
			[Address(RVA = "0xF6B8FC", Offset = "0xF6B8FC", VA = "0xF6B8FC")]
			[DebuggerHidden]
			public <BuildCollectedItemPromptRoutine>d__77(int <>1__state)
			{
			}

			[Token(Token = "0x6001A10")]
			[Address(RVA = "0xF6BB3C", Offset = "0xF6BB3C", VA = "0xF6BB3C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001A11")]
			[Address(RVA = "0xF6BB40", Offset = "0xF6BB40", VA = "0xF6BB40", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001A13")]
			[Address(RVA = "0xF6BDC8", Offset = "0xF6BDC8", VA = "0xF6BDC8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40014C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Transform subTitleTransform;

		[Token(Token = "0x40014CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Transform dialogTransform;

		[Token(Token = "0x40014CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Transform itemInfoTransform;

		[Token(Token = "0x40014CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Transform settingChangedInfoTransform;

		[Token(Token = "0x40014CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private VRStanceUI _vrStanceUI;

		[Token(Token = "0x40014CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private UIActivatable _saveIndicator;

		[Token(Token = "0x40014CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private Canvas _fadeScreenCanvas;

		[Token(Token = "0x40014D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private TextMeshProUGUI choicePromptDisplay;

		[Token(Token = "0x40014D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private Image timeBar;

		[Token(Token = "0x40014D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private DiegeticTextDisplay _diegeticTextDisplay;

		[Token(Token = "0x40014D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private GameObject answerPrefab;

		[Token(Token = "0x40014D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private Transform answerRoot;

		[Token(Token = "0x40014D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private GameObject[] diegeticsUIs;

		[Token(Token = "0x40014D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private LocalizedString diegeticsEnabledToastText;

		[Token(Token = "0x40014D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private LocalizedString diegeticsDisabledToastText;

		[Token(Token = "0x40014D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private float settingChangedToastDisplayLength;

		[Token(Token = "0x40014D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		[SerializeField]
		private ShowCharacterName _showCharacter;

		[Token(Token = "0x40014DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[Tooltip("When using a gamepad the choices dialogue will become de-selected when the camera is further than this distance (in world units)")]
		[SerializeField]
		private float choicesUiGamepadInteractionMaxDistance;

		[Token(Token = "0x40014DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		[SerializeField]
		[Tooltip("When using a gamepad the choices dialogue will become de-selected when the angle between it and the camera is greater than this (in degrees)")]
		private float choicesUiGamepadInteractionMaxAngle;

		[Token(Token = "0x40014DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		private InteractableUIManager _interactableUIManager;

		[Token(Token = "0x40014DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[SerializeField]
		private InventoryUIManager _inventoryUIManager;

		[Token(Token = "0x40014DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private Queue<Toast> _queuedToasts;

		[Token(Token = "0x40014DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private IEnumerator _collectionRoutine;

		[Token(Token = "0x40014E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private Coroutine _settingChangedToastCoroutine;

		[Token(Token = "0x40014E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[SerializeField]
		private TextMeshProUGUI _subTitleDisplay;

		[Token(Token = "0x40014E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[SerializeField]
		private TextMeshProUGUI _subTitleSpeakerDisplay;

		[Token(Token = "0x40014E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private TextMeshProUGUI _itemInfoDisplay;

		[Token(Token = "0x40014E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private TextMeshProUGUI _settingChangedInfoDisplay;

		[Token(Token = "0x40014E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private CharacterAsset _lastSubtitleCharacterShown;

		[Token(Token = "0x40014E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private Action _hideSubtitleInternalCallback;

		[Token(Token = "0x40014E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private float _saveUIMinimumHideTime;

		[Token(Token = "0x40014E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
		private bool _saveUICanHide;

		[Token(Token = "0x40014EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		private UnityEngine.UI.Button _cachedDialogChoice;

		[Token(Token = "0x1700034D")]
		public ShowCharacterName showCharacter
		{
			[Token(Token = "0x60019E2")]
			[Address(RVA = "0xF69FDC", Offset = "0xF69FDC", VA = "0xF69FDC")]
			get
			{
				return default(ShowCharacterName);
			}
			[Token(Token = "0x60019E3")]
			[Address(RVA = "0xF69FE4", Offset = "0xF69FE4", VA = "0xF69FE4")]
			set
			{
			}
		}

		[Token(Token = "0x1700034E")]
		public InteractableUIManager interactableUIManager
		{
			[Token(Token = "0x60019E4")]
			[Address(RVA = "0xF69FEC", Offset = "0xF69FEC", VA = "0xF69FEC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700034F")]
		public InventoryUIManager inventoryUIManager
		{
			[Token(Token = "0x60019E5")]
			[Address(RVA = "0xF69FF4", Offset = "0xF69FF4", VA = "0xF69FF4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000350")]
		public DiegeticTextDisplay diegeticTextDisplay
		{
			[Token(Token = "0x60019E6")]
			[Address(RVA = "0xF69FFC", Offset = "0xF69FFC", VA = "0xF69FFC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000351")]
		public VRStanceUI vrStanceUI
		{
			[Token(Token = "0x60019E7")]
			[Address(RVA = "0xF6A004", Offset = "0xF6A004", VA = "0xF6A004")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000352")]
		public Canvas fadeScreenCanvas
		{
			[Token(Token = "0x60019E8")]
			[Address(RVA = "0xF6A00C", Offset = "0xF6A00C", VA = "0xF6A00C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000353")]
		public Camera MainCamera
		{
			[Token(Token = "0x60019E9")]
			[Address(RVA = "0xF6A014", Offset = "0xF6A014", VA = "0xF6A014")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x60019EA")]
			[Address(RVA = "0xF6A01C", Offset = "0xF6A01C", VA = "0xF6A01C")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x17000354")]
		public FsRuntimeReticle FsReticle
		{
			[Token(Token = "0x60019EB")]
			[Address(RVA = "0xF6A02C", Offset = "0xF6A02C", VA = "0xF6A02C")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x60019EC")]
			[Address(RVA = "0xF6A034", Offset = "0xF6A034", VA = "0xF6A034")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x60019ED")]
		[Address(RVA = "0xF6A044", Offset = "0xF6A044", VA = "0xF6A044")]
		public WorldUIManager()
		{
		}

		[Token(Token = "0x60019EE")]
		[Address(RVA = "0xF6A138", Offset = "0xF6A138", VA = "0xF6A138")]
		private void Awake()
		{
		}

		[Token(Token = "0x60019EF")]
		[Address(RVA = "0xF6A190", Offset = "0xF6A190", VA = "0xF6A190")]
		public void SetMainCamera(Camera camera)
		{
		}

		[Token(Token = "0x60019F0")]
		[Address(RVA = "0xF68A44", Offset = "0xF68A44", VA = "0xF68A44", Slot = "4")]
		public void OnStartUp()
		{
		}

		[Token(Token = "0x60019F1")]
		[Address(RVA = "0xF6A1A0", Offset = "0xF6A1A0", VA = "0xF6A1A0")]
		private void InitialiseDisplay(Transform rootTransform, TextMeshProUGUI text)
		{
		}

		[Token(Token = "0x60019F2")]
		[Address(RVA = "0xF6A484", Offset = "0xF6A484", VA = "0xF6A484")]
		private void OnDiegeticsEnabledChanged(bool newValue)
		{
		}

		[Token(Token = "0x60019F3")]
		[Address(RVA = "0xF68C7C", Offset = "0xF68C7C", VA = "0xF68C7C", Slot = "5")]
		public void OnCleanUp()
		{
		}

		[Token(Token = "0x60019F4")]
		[Address(RVA = "0xF69A44", Offset = "0xF69A44", VA = "0xF69A44", Slot = "6")]
		public void OnUpdate(float dt)
		{
		}

		[Token(Token = "0x60019F5")]
		[Address(RVA = "0xF6AA24", Offset = "0xF6AA24", VA = "0xF6AA24")]
		public void ShowSaveIndicator(float minimumShowTime)
		{
		}

		[Token(Token = "0x60019F6")]
		[Address(RVA = "0xF6AAC8", Offset = "0xF6AAC8", VA = "0xF6AAC8")]
		public void HideSaveIndicator(bool forceImmediate)
		{
		}

		[Token(Token = "0x60019F7")]
		[Address(RVA = "0xF6AAF0", Offset = "0xF6AAF0", VA = "0xF6AAF0")]
		public void ShowSubtitle(CharacterAsset character, string text)
		{
		}

		[Token(Token = "0x60019F8")]
		[Address(RVA = "0xF6AF30", Offset = "0xF6AF30", VA = "0xF6AF30")]
		public void HideSubtitle(bool immediate = false)
		{
		}

		[Token(Token = "0x60019F9")]
		[Address(RVA = "0xF6B078", Offset = "0xF6B078", VA = "0xF6B078")]
		private void HideSubtitle_Internal()
		{
		}

		[Token(Token = "0x60019FA")]
		[Address(RVA = "0xF6B0FC", Offset = "0xF6B0FC", VA = "0xF6B0FC")]
		public void ClearLastSubtitleCharacter()
		{
		}

		[Token(Token = "0x60019FB")]
		[Address(RVA = "0xF6B108", Offset = "0xF6B108", VA = "0xF6B108")]
		public void ShowDialogueChoice(Action<string> callback, string question, string[] answers, string[] answerIds, float timeout = 0f)
		{
		}

		[Token(Token = "0x60019FC")]
		[Address(RVA = "0xF6A260", Offset = "0xF6A260", VA = "0xF6A260")]
		public void HideDialogAnswers()
		{
		}

		[Token(Token = "0x60019FD")]
		[Address(RVA = "0xF6A790", Offset = "0xF6A790", VA = "0xF6A790")]
		private bool IsChoicesUiInRange()
		{
			return default(bool);
		}

		[Token(Token = "0x60019FE")]
		[Address(RVA = "0xF6B684", Offset = "0xF6B684", VA = "0xF6B684")]
		public void UpdateDialogTimer(float percentLeft)
		{
		}

		[Token(Token = "0x60019FF")]
		[Address(RVA = "0xF6A730", Offset = "0xF6A730", VA = "0xF6A730")]
		public void ShowSettingsChangedToast(LocalizedString text)
		{
		}

		[Token(Token = "0x6001A00")]
		[Address(RVA = "0xF6B6A0", Offset = "0xF6B6A0", VA = "0xF6B6A0")]
		[IteratorStateMachine(typeof(<ShowSettingsChangedToastRoutine>d__75))]
		private IEnumerator ShowSettingsChangedToastRoutine(LocalizedString text)
		{
			return null;
		}

		[Token(Token = "0x6001A01")]
		[Address(RVA = "0xF6B758", Offset = "0xF6B758", VA = "0xF6B758")]
		public void QueueToast(float preMessageDelay, float messageDuration, LocalizedString text, EventInstance fmodEventInstance)
		{
		}

		[Token(Token = "0x6001A02")]
		[Address(RVA = "0xF6B888", Offset = "0xF6B888", VA = "0xF6B888")]
		[IteratorStateMachine(typeof(<BuildCollectedItemPromptRoutine>d__77))]
		private IEnumerator BuildCollectedItemPromptRoutine()
		{
			return null;
		}

		[Token(Token = "0x6001A03")]
		[Address(RVA = "0xF6AD90", Offset = "0xF6AD90", VA = "0xF6AD90")]
		private string LocaliseText(string text)
		{
			return null;
		}
	}
}
namespace Services.AppTime
{
	[Token(Token = "0x2000475")]
	public interface ITimeService
	{
		[Token(Token = "0x6001A15")]
		void PauseTime(bool state);

		[Token(Token = "0x6001A16")]
		void AddOnTimePausedEvent(CallbackVoid<bool> callback);

		[Token(Token = "0x6001A17")]
		void RemoveOnTimePausedEvent(CallbackVoid<bool> callback);

		[Token(Token = "0x6001A18")]
		bool Paused();

		[Token(Token = "0x6001A19")]
		float PausableTime();
	}
	[Token(Token = "0x2000476")]
	public class TimeService : MonoBehaviour, IService, ITimeService
	{
		[Token(Token = "0x4001501")]
		public const string PAUSABLE_SHADER_TIME = "_PausableTime";

		[Token(Token = "0x4001502")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly int s_pausableTimeParameterId;

		[Token(Token = "0x4001503")]
		private const int c_initialNumOnPausedEvents = 512;

		[Token(Token = "0x4001504")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private List<CallbackVoid<bool>> _onTimePausedEvent;

		[Token(Token = "0x4001505")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private float _pausableTime;

		[Token(Token = "0x4001506")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private bool _paused;

		[Token(Token = "0x6001A1A")]
		[Address(RVA = "0xF6BE10", Offset = "0xF6BE10", VA = "0xF6BE10", Slot = "10")]
		public bool Paused()
		{
			return default(bool);
		}

		[Token(Token = "0x6001A1B")]
		[Address(RVA = "0xF6BE18", Offset = "0xF6BE18", VA = "0xF6BE18", Slot = "11")]
		public float PausableTime()
		{
			return default(float);
		}

		[Token(Token = "0x6001A1C")]
		[Address(RVA = "0xF6BE20", Offset = "0xF6BE20", VA = "0xF6BE20", Slot = "8")]
		public void AddOnTimePausedEvent(CallbackVoid<bool> callback)
		{
		}

		[Token(Token = "0x6001A1D")]
		[Address(RVA = "0xF6BED0", Offset = "0xF6BED0", VA = "0xF6BED0", Slot = "9")]
		public void RemoveOnTimePausedEvent(CallbackVoid<bool> callback)
		{
		}

		[Token(Token = "0x6001A1E")]
		[Address(RVA = "0xF6BF28", Offset = "0xF6BF28", VA = "0xF6BF28")]
		static TimeService()
		{
		}

		[Token(Token = "0x6001A1F")]
		[Address(RVA = "0xF6BFA0", Offset = "0xF6BFA0", VA = "0xF6BFA0", Slot = "4")]
		public void OnStartUp()
		{
		}

		[Token(Token = "0x6001A20")]
		[Address(RVA = "0xF6BFA8", Offset = "0xF6BFA8", VA = "0xF6BFA8", Slot = "5")]
		public void OnCleanUp()
		{
		}

		[Token(Token = "0x6001A21")]
		[Address(RVA = "0xF6BFAC", Offset = "0xF6BFAC", VA = "0xF6BFAC", Slot = "6")]
		public void OnUpdate(float dt)
		{
		}

		[Token(Token = "0x6001A22")]
		[Address(RVA = "0xF6C070", Offset = "0xF6C070", VA = "0xF6C070", Slot = "7")]
		public void PauseTime(bool state)
		{
		}

		[Token(Token = "0x6001A23")]
		[Address(RVA = "0xF6C11C", Offset = "0xF6C11C", VA = "0xF6C11C")]
		public TimeService()
		{
		}
	}
}
namespace Services.Settings
{
	[Token(Token = "0x2000477")]
	public class SettingsService : MonoBehaviour, IService
	{
		[Token(Token = "0x4001507")]
		private const int c_optionsMenusListSize = 5;

		[Token(Token = "0x4001508")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private DefaultSettingsProvider _defaultdata;

		[Token(Token = "0x4001509")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private SettingsDeserialiser _settingsDeserialiser;

		[Token(Token = "0x400150A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private SettingsSerialisation.Settings _settings;

		[Token(Token = "0x400150B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private SettingsSerialisation.Settings _activeSettings;

		[Token(Token = "0x4001511")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private ISettingsCategory[] settingsCategories;

		[Token(Token = "0x4001512")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private LocalisationService localisationService;

		[Token(Token = "0x17000359")]
		public SettingsAudio Audio
		{
			[Token(Token = "0x6001A24")]
			[Address(RVA = "0xF6C1A8", Offset = "0xF6C1A8", VA = "0xF6C1A8")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001A25")]
			[Address(RVA = "0xF6C1B0", Offset = "0xF6C1B0", VA = "0xF6C1B0")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x1700035A")]
		public SettingsGraphics Graphics
		{
			[Token(Token = "0x6001A26")]
			[Address(RVA = "0xF6C1B8", Offset = "0xF6C1B8", VA = "0xF6C1B8")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001A27")]
			[Address(RVA = "0xF6C1C0", Offset = "0xF6C1C0", VA = "0xF6C1C0")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x1700035B")]
		public SettingsControls Controls
		{
			[Token(Token = "0x6001A28")]
			[Address(RVA = "0xF6C1C8", Offset = "0xF6C1C8", VA = "0xF6C1C8")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001A29")]
			[Address(RVA = "0xF6C1D0", Offset = "0xF6C1D0", VA = "0xF6C1D0")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x1700035C")]
		public SettingsGameplay Gameplay
		{
			[Token(Token = "0x6001A2A")]
			[Address(RVA = "0xF6C1D8", Offset = "0xF6C1D8", VA = "0xF6C1D8")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001A2B")]
			[Address(RVA = "0xF6C1E0", Offset = "0xF6C1E0", VA = "0xF6C1E0")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x1700035D")]
		public SettingsPostProcessing PostProcessing
		{
			[Token(Token = "0x6001A2C")]
			[Address(RVA = "0xF6C1E8", Offset = "0xF6C1E8", VA = "0xF6C1E8")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001A2D")]
			[Address(RVA = "0xF6C1F0", Offset = "0xF6C1F0", VA = "0xF6C1F0")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x6001A2E")]
		[Address(RVA = "0xF6C1F8", Offset = "0xF6C1F8", VA = "0xF6C1F8")]
		public void Initialise(LocalisationService localisationServiceToBeAssigned)
		{
		}

		[Token(Token = "0x6001A2F")]
		[Address(RVA = "0xF6C240", Offset = "0xF6C240", VA = "0xF6C240", Slot = "4")]
		public void OnStartUp()
		{
		}

		[Token(Token = "0x6001A30")]
		[Address(RVA = "0xF6C664", Offset = "0xF6C664", VA = "0xF6C664", Slot = "5")]
		public void OnCleanUp()
		{
		}

		[Token(Token = "0x6001A31")]
		[Address(RVA = "0xF6C668", Offset = "0xF6C668", VA = "0xF6C668", Slot = "6")]
		public void OnUpdate(float dt)
		{
		}

		[Token(Token = "0x6001A32")]
		[Address(RVA = "0xF6A55C", Offset = "0xF6A55C", VA = "0xF6A55C")]
		public void CommitActiveSettings()
		{
		}

		[Token(Token = "0x6001A33")]
		[Address(RVA = "0xF6C66C", Offset = "0xF6C66C", VA = "0xF6C66C")]
		public void ApplySettingsToGame()
		{
		}

		[Token(Token = "0x6001A34")]
		[Address(RVA = "0xF6C74C", Offset = "0xF6C74C", VA = "0xF6C74C")]
		public void UpdateActiveSettings()
		{
		}

		[Token(Token = "0x6001A35")]
		[Address(RVA = "0xF6C988", Offset = "0xF6C988", VA = "0xF6C988")]
		public SettingsSerialisation.Settings GetSettings()
		{
			return null;
		}

		[Token(Token = "0x6001A36")]
		[Address(RVA = "0xF6C990", Offset = "0xF6C990", VA = "0xF6C990")]
		public SettingsDeserialiser GetSettingsDeserialiser()
		{
			return null;
		}

		[Token(Token = "0x6001A37")]
		[Address(RVA = "0xF6C580", Offset = "0xF6C580", VA = "0xF6C580")]
		public void SetDefaults()
		{
		}

		[Token(Token = "0x6001A38")]
		[Address(RVA = "0xF6C998", Offset = "0xF6C998", VA = "0xF6C998")]
		public bool HaveChangedSettings()
		{
			return default(bool);
		}

		[Token(Token = "0x6001A39")]
		[Address(RVA = "0xF6C818", Offset = "0xF6C818", VA = "0xF6C818")]
		public void SetAndApplyActiveSettings()
		{
		}

		[Token(Token = "0x6001A3A")]
		[Address(RVA = "0xF6CA88", Offset = "0xF6CA88", VA = "0xF6CA88")]
		public SettingsService()
		{
		}
	}
	[Token(Token = "0x2000478")]
	public interface ISettingsCategory
	{
		[Token(Token = "0x6001A3B")]
		void SetActiveSettings(SettingsSerialisation.Settings someSettings);

		[Token(Token = "0x6001A3C")]
		void SetSettings(SettingsSerialisation.Settings someSettings);

		[Token(Token = "0x6001A3D")]
		void ApplySettings();

		[Token(Token = "0x6001A3E")]
		bool HaveChanged();
	}
	[Token(Token = "0x2000479")]
	public class SettingsAudio : ISettingsCategory
	{
		[Token(Token = "0x4001513")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private SettingsSerialisation.Settings activeSettings;

		[Token(Token = "0x4001514")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private SettingsSerialisation.Settings settings;

		[Token(Token = "0x14000014")]
		private event CallbackVoid<float> masterVolumeChangedEvent
		{
			[Token(Token = "0x6001A3F")]
			[Address(RVA = "0xF6CA90", Offset = "0xF6CA90", VA = "0xF6CA90")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6001A40")]
			[Address(RVA = "0xF6CB40", Offset = "0xF6CB40", VA = "0xF6CB40")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x14000015")]
		private event CallbackVoid<float> musicVolumeChangedEvent
		{
			[Token(Token = "0x6001A41")]
			[Address(RVA = "0xF6CBF0", Offset = "0xF6CBF0", VA = "0xF6CBF0")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6001A42")]
			[Address(RVA = "0xF6CCA0", Offset = "0xF6CCA0", VA = "0xF6CCA0")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x14000016")]
		private event CallbackVoid<float> voiceVolumeChangedEvent
		{
			[Token(Token = "0x6001A43")]
			[Address(RVA = "0xF6CD50", Offset = "0xF6CD50", VA = "0xF6CD50")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6001A44")]
			[Address(RVA = "0xF6CE00", Offset = "0xF6CE00", VA = "0xF6CE00")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x14000017")]
		private event CallbackVoid<float> sfxVolumeChangedEvent
		{
			[Token(Token = "0x6001A45")]
			[Address(RVA = "0xF6CEB0", Offset = "0xF6CEB0", VA = "0xF6CEB0")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6001A46")]
			[Address(RVA = "0xF6CF60", Offset = "0xF6CF60", VA = "0xF6CF60")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x6001A47")]
		[Address(RVA = "0xF6D010", Offset = "0xF6D010", VA = "0xF6D010")]
		public void AddMasterVolumeChangedEvent(CallbackVoid<float> callback)
		{
		}

		[Token(Token = "0x6001A48")]
		[Address(RVA = "0xF6D014", Offset = "0xF6D014", VA = "0xF6D014")]
		public void AddMusicVolumeChangedEvent(CallbackVoid<float> callback)
		{
		}

		[Token(Token = "0x6001A49")]
		[Address(RVA = "0xF6D018", Offset = "0xF6D018", VA = "0xF6D018")]
		public void AddVoiceVolumeChangedEvent(CallbackVoid<float> callback)
		{
		}

		[Token(Token = "0x6001A4A")]
		[Address(RVA = "0xF6D01C", Offset = "0xF6D01C", VA = "0xF6D01C")]
		public void AddSfxVolumeChangedEvent(CallbackVoid<float> callback)
		{
		}

		[Token(Token = "0x6001A4B")]
		[Address(RVA = "0xF6D020", Offset = "0xF6D020", VA = "0xF6D020")]
		public void RemoveMasterVolumeChangedEvent(CallbackVoid<float> callback)
		{
		}

		[Token(Token = "0x6001A4C")]
		[Address(RVA = "0xF6D024", Offset = "0xF6D024", VA = "0xF6D024")]
		public void RemoveMusicVolumeChangedEvent(CallbackVoid<float> callback)
		{
		}

		[Token(Token = "0x6001A4D")]
		[Address(RVA = "0xF6D028", Offset = "0xF6D028", VA = "0xF6D028")]
		public void RemoveVoiceVolumeChangedEvent(CallbackVoid<float> callback)
		{
		}

		[Token(Token = "0x6001A4E")]
		[Address(RVA = "0xF6D02C", Offset = "0xF6D02C", VA = "0xF6D02C")]
		public void RemoveSfxVolumeChangedEvent(CallbackVoid<float> callback)
		{
		}

		[Token(Token = "0x6001A4F")]
		[Address(RVA = "0xF6D030", Offset = "0xF6D030", VA = "0xF6D030", Slot = "5")]
		public void SetSettings(SettingsSerialisation.Settings someSettings)
		{
		}

		[Token(Token = "0x6001A50")]
		[Address(RVA = "0xF6D038", Offset = "0xF6D038", VA = "0xF6D038", Slot = "4")]
		public void SetActiveSettings(SettingsSerialisation.Settings someSettings)
		{
		}

		[Token(Token = "0x6001A51")]
		[Address(RVA = "0xF6D040", Offset = "0xF6D040", VA = "0xF6D040", Slot = "6")]
		public void ApplySettings()
		{
		}

		[Token(Token = "0x6001A52")]
		[Address(RVA = "0xF6D158", Offset = "0xF6D158", VA = "0xF6D158", Slot = "7")]
		public bool HaveChanged()
		{
			return default(bool);
		}

		[Token(Token = "0x6001A53")]
		[Address(RVA = "0xF6D1C0", Offset = "0xF6D1C0", VA = "0xF6D1C0")]
		public void SetAudioMasterVolume(float value)
		{
		}

		[Token(Token = "0x6001A54")]
		[Address(RVA = "0xF6D0E8", Offset = "0xF6D0E8", VA = "0xF6D0E8")]
		public float GetAudioMasterVolume()
		{
			return default(float);
		}

		[Token(Token = "0x6001A55")]
		[Address(RVA = "0xF6D1F8", Offset = "0xF6D1F8", VA = "0xF6D1F8")]
		public void SetAudioMusicVolume(float value)
		{
		}

		[Token(Token = "0x6001A56")]
		[Address(RVA = "0xF6D104", Offset = "0xF6D104", VA = "0xF6D104")]
		public float GetAudioMusicVolume()
		{
			return default(float);
		}

		[Token(Token = "0x6001A57")]
		[Address(RVA = "0xF6D230", Offset = "0xF6D230", VA = "0xF6D230")]
		public void SetAudioVoiceVolume(float value)
		{
		}

		[Token(Token = "0x6001A58")]
		[Address(RVA = "0xF6D120", Offset = "0xF6D120", VA = "0xF6D120")]
		public float GetAudioVoiceVolume()
		{
			return default(float);
		}

		[Token(Token = "0x6001A59")]
		[Address(RVA = "0xF6D268", Offset = "0xF6D268", VA = "0xF6D268")]
		public void SetAudioSfxVolume(float value)
		{
		}

		[Token(Token = "0x6001A5A")]
		[Address(RVA = "0xF6D13C", Offset = "0xF6D13C", VA = "0xF6D13C")]
		public float GetAudioSfxVolume()
		{
			return default(float);
		}

		[Token(Token = "0x6001A5B")]
		[Address(RVA = "0xF6C530", Offset = "0xF6C530", VA = "0xF6C530")]
		public SettingsAudio()
		{
		}
	}
	[Token(Token = "0x200047A")]
	public class SettingsGraphics : ISettingsCategory
	{
		[Token(Token = "0x200047B")]
		public enum AntiAlias
		{
			[Token(Token = "0x4001525")]
			Off = 0,
			[Token(Token = "0x4001526")]
			Two = 2,
			[Token(Token = "0x4001527")]
			Four = 4
		}

		[Token(Token = "0x200047C")]
		public enum MeshDetail
		{
			[Token(Token = "0x4001529")]
			Low,
			[Token(Token = "0x400152A")]
			Medium,
			[Token(Token = "0x400152B")]
			High
		}

		[Token(Token = "0x200047D")]
		public enum TextureResolution
		{
			[Token(Token = "0x400152D")]
			Low,
			[Token(Token = "0x400152E")]
			Medium,
			[Token(Token = "0x400152F")]
			High
		}

		[Token(Token = "0x200047E")]
		public delegate void ResolutionChangedDelegate(Resolution resolution);

		[Token(Token = "0x4001519")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private SettingsSerialisation.Settings activeSettings;

		[Token(Token = "0x400151A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private SettingsSerialisation.Settings settings;

		[Token(Token = "0x14000018")]
		private event CallbackVoid<float> CameraFOVChangedEvent
		{
			[Token(Token = "0x6001A5C")]
			[Address(RVA = "0xF6D2A0", Offset = "0xF6D2A0", VA = "0xF6D2A0")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6001A5D")]
			[Address(RVA = "0xF6D350", Offset = "0xF6D350", VA = "0xF6D350")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x14000019")]
		private event CallbackVoid<bool> AnisotropicFilteringChangedEvent
		{
			[Token(Token = "0x6001A5E")]
			[Address(RVA = "0xF6D400", Offset = "0xF6D400", VA = "0xF6D400")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6001A5F")]
			[Address(RVA = "0xF6D4B0", Offset = "0xF6D4B0", VA = "0xF6D4B0")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x1400001A")]
		private event CallbackVoid<bool> WindowedChangedEvent
		{
			[Token(Token = "0x6001A60")]
			[Address(RVA = "0xF6D560", Offset = "0xF6D560", VA = "0xF6D560")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6001A61")]
			[Address(RVA = "0xF6D610", Offset = "0xF6D610", VA = "0xF6D610")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x1400001B")]
		private event CallbackVoid<bool> VSyncChangedEvent
		{
			[Token(Token = "0x6001A62")]
			[Address(RVA = "0xF6D6C0", Offset = "0xF6D6C0", VA = "0xF6D6C0")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6001A63")]
			[Address(RVA = "0xF6D770", Offset = "0xF6D770", VA = "0xF6D770")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x1400001C")]
		private event CallbackVoid<int> FrameLimitChangedEvent
		{
			[Token(Token = "0x6001A64")]
			[Address(RVA = "0xF6D820", Offset = "0xF6D820", VA = "0xF6D820")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6001A65")]
			[Address(RVA = "0xF6D8D0", Offset = "0xF6D8D0", VA = "0xF6D8D0")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x1400001D")]
		private event CallbackVoid<AntiAlias> AntiAliasChangedEvent
		{
			[Token(Token = "0x6001A66")]
			[Address(RVA = "0xF6D980", Offset = "0xF6D980", VA = "0xF6D980")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6001A67")]
			[Address(RVA = "0xF6DA30", Offset = "0xF6DA30", VA = "0xF6DA30")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x1400001E")]
		private event CallbackVoid<TextureResolution> TextureResolutionChangedEvent
		{
			[Token(Token = "0x6001A68")]
			[Address(RVA = "0xF6DAE0", Offset = "0xF6DAE0", VA = "0xF6DAE0")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6001A69")]
			[Address(RVA = "0xF6DB90", Offset = "0xF6DB90", VA = "0xF6DB90")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x1400001F")]
		private event CallbackVoid<MeshDetail> MeshDetailChangedEvent
		{
			[Token(Token = "0x6001A6A")]
			[Address(RVA = "0xF6DC40", Offset = "0xF6DC40", VA = "0xF6DC40")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6001A6B")]
			[Address(RVA = "0xF6DCF0", Offset = "0xF6DCF0", VA = "0xF6DCF0")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x14000020")]
		private event ResolutionChangedDelegate ResolutionChangedEvent
		{
			[Token(Token = "0x6001A6C")]
			[Address(RVA = "0xF6DDA0", Offset = "0xF6DDA0", VA = "0xF6DDA0")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6001A6D")]
			[Address(RVA = "0xF6DE3C", Offset = "0xF6DE3C", VA = "0xF6DE3C")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x6001A6E")]
		[Address(RVA = "0xF6DED8", Offset = "0xF6DED8", VA = "0xF6DED8")]
		public void AddCameraFOVChangedEvent(CallbackVoid<float> callback)
		{
		}

		[Token(Token = "0x6001A6F")]
		[Address(RVA = "0xF6DEDC", Offset = "0xF6DEDC", VA = "0xF6DEDC")]
		public void AddAnisotropicFilteringChangedEvent(CallbackVoid<bool> callback)
		{
		}

		[Token(Token = "0x6001A70")]
		[Address(RVA = "0xF6DEE0", Offset = "0xF6DEE0", VA = "0xF6DEE0")]
		public void AddWindowedChangedEvent(CallbackVoid<bool> callback)
		{
		}

		[Token(Token = "0x6001A71")]
		[Address(RVA = "0xF6DEE4", Offset = "0xF6DEE4", VA = "0xF6DEE4")]
		public void AddVSyncChangedEvent(CallbackVoid<bool> callback)
		{
		}

		[Token(Token = "0x6001A72")]
		[Address(RVA = "0xF6DEE8", Offset = "0xF6DEE8", VA = "0xF6DEE8")]
		public void AddFrameLimitChangedEvent(CallbackVoid<int> callback)
		{
		}

		[Token(Token = "0x6001A73")]
		[Address(RVA = "0xF6DEEC", Offset = "0xF6DEEC", VA = "0xF6DEEC")]
		public void AddAntiAliasChangedEvent(CallbackVoid<AntiAlias> callback)
		{
		}

		[Token(Token = "0x6001A74")]
		[Address(RVA = "0xF6DEF0", Offset = "0xF6DEF0", VA = "0xF6DEF0")]
		public void AddTextureResolutionChangedEvent(CallbackVoid<TextureResolution> callback)
		{
		}

		[Token(Token = "0x6001A75")]
		[Address(RVA = "0xF6DEF4", Offset = "0xF6DEF4", VA = "0xF6DEF4")]
		public void AddMeshDetailChangedEvent(CallbackVoid<MeshDetail> callback)
		{
		}

		[Token(Token = "0x6001A76")]
		[Address(RVA = "0xF6DEF8", Offset = "0xF6DEF8", VA = "0xF6DEF8")]
		public void AddResolutionChangedEvent(ResolutionChangedDelegate callback)
		{
		}

		[Token(Token = "0x6001A77")]
		[Address(RVA = "0xF6DEFC", Offset = "0xF6DEFC", VA = "0xF6DEFC")]
		public void RemoveCameraFOVChangedEvent(CallbackVoid<float> callback)
		{
		}

		[Token(Token = "0x6001A78")]
		[Address(RVA = "0xF6DF00", Offset = "0xF6DF00", VA = "0xF6DF00")]
		public void RemoveAnisotropicFilteringChangedEvent(CallbackVoid<bool> callback)
		{
		}

		[Token(Token = "0x6001A79")]
		[Address(RVA = "0xF6DF04", Offset = "0xF6DF04", VA = "0xF6DF04")]
		public void RemoveWindowedChangedEvent(CallbackVoid<bool> callback)
		{
		}

		[Token(Token = "0x6001A7A")]
		[Address(RVA = "0xF6DF08", Offset = "0xF6DF08", VA = "0xF6DF08")]
		public void RemoveVSyncChangedEvent(CallbackVoid<bool> callback)
		{
		}

		[Token(Token = "0x6001A7B")]
		[Address(RVA = "0xF6DF0C", Offset = "0xF6DF0C", VA = "0xF6DF0C")]
		public void RemoveFrameLimitChangedEvent(CallbackVoid<int> callback)
		{
		}

		[Token(Token = "0x6001A7C")]
		[Address(RVA = "0xF6DF10", Offset = "0xF6DF10", VA = "0xF6DF10")]
		public void RemoveAntiAliasChangedEvent(CallbackVoid<AntiAlias> callback)
		{
		}

		[Token(Token = "0x6001A7D")]
		[Address(RVA = "0xF6DF14", Offset = "0xF6DF14", VA = "0xF6DF14")]
		public void RemoveTextureResolutionChangedEvent(CallbackVoid<TextureResolution> callback)
		{
		}

		[Token(Token = "0x6001A7E")]
		[Address(RVA = "0xF6DF18", Offset = "0xF6DF18", VA = "0xF6DF18")]
		public void RemoveMeshDetailChangedEvent(CallbackVoid<MeshDetail> callback)
		{
		}

		[Token(Token = "0x6001A7F")]
		[Address(RVA = "0xF6DF1C", Offset = "0xF6DF1C", VA = "0xF6DF1C")]
		public void RemoveResolutionChangedEvent(ResolutionChangedDelegate callback)
		{
		}

		[Token(Token = "0x6001A80")]
		[Address(RVA = "0xF6DF20", Offset = "0xF6DF20", VA = "0xF6DF20", Slot = "5")]
		public void SetSettings(SettingsSerialisation.Settings someSettings)
		{
		}

		[Token(Token = "0x6001A81")]
		[Address(RVA = "0xF6DF28", Offset = "0xF6DF28", VA = "0xF6DF28", Slot = "4")]
		public void SetActiveSettings(SettingsSerialisation.Settings someSettings)
		{
		}

		[Token(Token = "0x6001A82")]
		[Address(RVA = "0xF6DF30", Offset = "0xF6DF30", VA = "0xF6DF30", Slot = "6")]
		public void ApplySettings()
		{
		}

		[Token(Token = "0x6001A83")]
		[Address(RVA = "0xF6E190", Offset = "0xF6E190", VA = "0xF6E190", Slot = "7")]
		public bool HaveChanged()
		{
			return default(bool);
		}

		[Token(Token = "0x6001A84")]
		[Address(RVA = "0xF6E170", Offset = "0xF6E170", VA = "0xF6E170")]
		public Resolution GetResolution()
		{
			return default(Resolution);
		}

		[Token(Token = "0x6001A85")]
		[Address(RVA = "0xF6E2A4", Offset = "0xF6E2A4", VA = "0xF6E2A4")]
		public void SetResolution(Resolution resolution)
		{
		}

		[Token(Token = "0x6001A86")]
		[Address(RVA = "0xF6E11C", Offset = "0xF6E11C", VA = "0xF6E11C")]
		public AntiAlias GetAntiAlias()
		{
			return default(AntiAlias);
		}

		[Token(Token = "0x6001A87")]
		[Address(RVA = "0xF6E2E4", Offset = "0xF6E2E4", VA = "0xF6E2E4")]
		public void SetAntiAlias(int setting)
		{
		}

		[Token(Token = "0x6001A88")]
		[Address(RVA = "0xF6E31C", Offset = "0xF6E31C", VA = "0xF6E31C")]
		public void SetCameraFOV(float value)
		{
		}

		[Token(Token = "0x6001A89")]
		[Address(RVA = "0xF6E090", Offset = "0xF6E090", VA = "0xF6E090")]
		public float GetCameraFOV()
		{
			return default(float);
		}

		[Token(Token = "0x6001A8A")]
		[Address(RVA = "0xF6E354", Offset = "0xF6E354", VA = "0xF6E354")]
		public float GetCameraFOVRange()
		{
			return default(float);
		}

		[Token(Token = "0x6001A8B")]
		[Address(RVA = "0xF6E370", Offset = "0xF6E370", VA = "0xF6E370")]
		public void SetAnisotropicFiltering(bool state)
		{
		}

		[Token(Token = "0x6001A8C")]
		[Address(RVA = "0xF6E0AC", Offset = "0xF6E0AC", VA = "0xF6E0AC")]
		public bool GetAnisotropicFiltering()
		{
			return default(bool);
		}

		[Token(Token = "0x6001A8D")]
		[Address(RVA = "0xF6E3AC", Offset = "0xF6E3AC", VA = "0xF6E3AC")]
		public void SetWindowed(bool state)
		{
		}

		[Token(Token = "0x6001A8E")]
		[Address(RVA = "0xF6E0C8", Offset = "0xF6E0C8", VA = "0xF6E0C8")]
		public bool GetWindowed()
		{
			return default(bool);
		}

		[Token(Token = "0x6001A8F")]
		[Address(RVA = "0xF6E3E8", Offset = "0xF6E3E8", VA = "0xF6E3E8")]
		public void SetVSync(bool state)
		{
		}

		[Token(Token = "0x6001A90")]
		[Address(RVA = "0xF6E0E4", Offset = "0xF6E0E4", VA = "0xF6E0E4")]
		public bool GetVSync()
		{
			return default(bool);
		}

		[Token(Token = "0x6001A91")]
		[Address(RVA = "0xF6E44C", Offset = "0xF6E44C", VA = "0xF6E44C")]
		public void SetFrameLimit(int frames)
		{
		}

		[Token(Token = "0x6001A92")]
		[Address(RVA = "0xF6E100", Offset = "0xF6E100", VA = "0xF6E100")]
		public int GetFrameLimit()
		{
			return default(int);
		}

		[Token(Token = "0x6001A93")]
		[Address(RVA = "0xF6E4AC", Offset = "0xF6E4AC", VA = "0xF6E4AC")]
		public void SetTextureResolution(TextureResolution resolution)
		{
		}

		[Token(Token = "0x6001A94")]
		[Address(RVA = "0xF6E138", Offset = "0xF6E138", VA = "0xF6E138")]
		public TextureResolution GetTextureResolution()
		{
			return default(TextureResolution);
		}

		[Token(Token = "0x6001A95")]
		[Address(RVA = "0xF6E4E4", Offset = "0xF6E4E4", VA = "0xF6E4E4")]
		public void SetMeshDetail(MeshDetail detail)
		{
		}

		[Token(Token = "0x6001A96")]
		[Address(RVA = "0xF6E154", Offset = "0xF6E154", VA = "0xF6E154")]
		public MeshDetail GetMeshDetail()
		{
			return default(MeshDetail);
		}

		[Token(Token = "0x6001A97")]
		[Address(RVA = "0xF6C570", Offset = "0xF6C570", VA = "0xF6C570")]
		public SettingsGraphics()
		{
		}
	}
	[Token(Token = "0x200047F")]
	public class SettingsPostProcessing : ISettingsCategory
	{
		[Token(Token = "0x4001530")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private SettingsSerialisation.Settings settings;

		[Token(Token = "0x4001531")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private SettingsSerialisation.Settings activeSettings;

		[Token(Token = "0x14000021")]
		private event CallbackVoid<float> BrightnessChangedEvent
		{
			[Token(Token = "0x6001A9C")]
			[Address(RVA = "0xF6E69C", Offset = "0xF6E69C", VA = "0xF6E69C")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6001A9D")]
			[Address(RVA = "0xF6E74C", Offset = "0xF6E74C", VA = "0xF6E74C")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x14000022")]
		private event CallbackVoid<float> ContrastChangedEvent
		{
			[Token(Token = "0x6001A9E")]
			[Address(RVA = "0xF6E7FC", Offset = "0xF6E7FC", VA = "0xF6E7FC")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6001A9F")]
			[Address(RVA = "0xF6E8AC", Offset = "0xF6E8AC", VA = "0xF6E8AC")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x14000023")]
		private event CallbackVoid<float> GammaChangedEvent
		{
			[Token(Token = "0x6001AA0")]
			[Address(RVA = "0xF6E95C", Offset = "0xF6E95C", VA = "0xF6E95C")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6001AA1")]
			[Address(RVA = "0xF6EA0C", Offset = "0xF6EA0C", VA = "0xF6EA0C")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x14000024")]
		private event CallbackVoid<bool> VignetteEnableEvent
		{
			[Token(Token = "0x6001AA2")]
			[Address(RVA = "0xF6EABC", Offset = "0xF6EABC", VA = "0xF6EABC")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6001AA3")]
			[Address(RVA = "0xF6EB6C", Offset = "0xF6EB6C", VA = "0xF6EB6C")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x14000025")]
		private event CallbackVoid<bool> FilmGrainEnableEvent
		{
			[Token(Token = "0x6001AA4")]
			[Address(RVA = "0xF6EC1C", Offset = "0xF6EC1C", VA = "0xF6EC1C")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6001AA5")]
			[Address(RVA = "0xF6ECCC", Offset = "0xF6ECCC", VA = "0xF6ECCC")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x6001AA6")]
		[Address(RVA = "0xF6ED7C", Offset = "0xF6ED7C", VA = "0xF6ED7C")]
		public void AddBrightnessChangedEvent(CallbackVoid<float> callback)
		{
		}

		[Token(Token = "0x6001AA7")]
		[Address(RVA = "0xF6ED80", Offset = "0xF6ED80", VA = "0xF6ED80")]
		public void AddContrastChangedEvent(CallbackVoid<float> callback)
		{
		}

		[Token(Token = "0x6001AA8")]
		[Address(RVA = "0xF6ED84", Offset = "0xF6ED84", VA = "0xF6ED84")]
		public void AddGammaChangedEvent(CallbackVoid<float> callback)
		{
		}

		[Token(Token = "0x6001AA9")]
		[Address(RVA = "0xF6ED88", Offset = "0xF6ED88", VA = "0xF6ED88")]
		public void AddVignetteEnableEvent(CallbackVoid<bool> callback)
		{
		}

		[Token(Token = "0x6001AAA")]
		[Address(RVA = "0xF6ED8C", Offset = "0xF6ED8C", VA = "0xF6ED8C")]
		public void AddFilmGrainEnableEvent(CallbackVoid<bool> callback)
		{
		}

		[Token(Token = "0x6001AAB")]
		[Address(RVA = "0xF6ED90", Offset = "0xF6ED90", VA = "0xF6ED90")]
		public void RemoveBrightnessChangedEvent(CallbackVoid<float> callback)
		{
		}

		[Token(Token = "0x6001AAC")]
		[Address(RVA = "0xF6ED94", Offset = "0xF6ED94", VA = "0xF6ED94")]
		public void RemoveContrastChangedEvent(CallbackVoid<float> callback)
		{
		}

		[Token(Token = "0x6001AAD")]
		[Address(RVA = "0xF6ED98", Offset = "0xF6ED98", VA = "0xF6ED98")]
		public void RemoveGammaChangedEvent(CallbackVoid<float> callback)
		{
		}

		[Token(Token = "0x6001AAE")]
		[Address(RVA = "0xF6ED9C", Offset = "0xF6ED9C", VA = "0xF6ED9C")]
		public void RemoveVignetteEnableEvent(CallbackVoid<bool> callback)
		{
		}

		[Token(Token = "0x6001AAF")]
		[Address(RVA = "0xF6EDA0", Offset = "0xF6EDA0", VA = "0xF6EDA0")]
		public void RemoveFilmGrainEnableEvent(CallbackVoid<bool> callback)
		{
		}

		[Token(Token = "0x6001AB0")]
		[Address(RVA = "0xF6EDA4", Offset = "0xF6EDA4", VA = "0xF6EDA4", Slot = "5")]
		public void SetSettings(SettingsSerialisation.Settings someSettings)
		{
		}

		[Token(Token = "0x6001AB1")]
		[Address(RVA = "0xF6EDAC", Offset = "0xF6EDAC", VA = "0xF6EDAC", Slot = "4")]
		public void SetActiveSettings(SettingsSerialisation.Settings someSettings)
		{
		}

		[Token(Token = "0x6001AB2")]
		[Address(RVA = "0xF6EDB4", Offset = "0xF6EDB4", VA = "0xF6EDB4", Slot = "6")]
		public void ApplySettings()
		{
		}

		[Token(Token = "0x6001AB3")]
		[Address(RVA = "0xF6EF0C", Offset = "0xF6EF0C", VA = "0xF6EF0C", Slot = "7")]
		public bool HaveChanged()
		{
			return default(bool);
		}

		[Token(Token = "0x6001AB4")]
		[Address(RVA = "0xF6EF84", Offset = "0xF6EF84", VA = "0xF6EF84")]
		public void SetBrightness(float value)
		{
		}

		[Token(Token = "0x6001AB5")]
		[Address(RVA = "0xF6EE80", Offset = "0xF6EE80", VA = "0xF6EE80")]
		public float GetBrightness()
		{
			return default(float);
		}

		[Token(Token = "0x6001AB6")]
		[Address(RVA = "0xF6EFBC", Offset = "0xF6EFBC", VA = "0xF6EFBC")]
		public void SetContrast(float value)
		{
		}

		[Token(Token = "0x6001AB7")]
		[Address(RVA = "0xF6EE9C", Offset = "0xF6EE9C", VA = "0xF6EE9C")]
		public float GetContrast()
		{
			return default(float);
		}

		[Token(Token = "0x6001AB8")]
		[Address(RVA = "0xF6EFF4", Offset = "0xF6EFF4", VA = "0xF6EFF4")]
		public void SetGamma(float value)
		{
		}

		[Token(Token = "0x6001AB9")]
		[Address(RVA = "0xF6EEB8", Offset = "0xF6EEB8", VA = "0xF6EEB8")]
		public float GetGamma()
		{
			return default(float);
		}

		[Token(Token = "0x6001ABA")]
		[Address(RVA = "0xF6F02C", Offset = "0xF6F02C", VA = "0xF6F02C")]
		public void SetPostProcessVignette(bool enable)
		{
		}

		[Token(Token = "0x6001ABB")]
		[Address(RVA = "0xF6EED4", Offset = "0xF6EED4", VA = "0xF6EED4")]
		public bool GetPostProcessVignette()
		{
			return default(bool);
		}

		[Token(Token = "0x6001ABC")]
		[Address(RVA = "0xF6F068", Offset = "0xF6F068", VA = "0xF6F068")]
		public void SetPostProcessFilmGrain(bool enable)
		{
		}

		[Token(Token = "0x6001ABD")]
		[Address(RVA = "0xF6EEF0", Offset = "0xF6EEF0", VA = "0xF6EEF0")]
		public bool getPostProcessFilmGrain()
		{
			return default(bool);
		}

		[Token(Token = "0x6001ABE")]
		[Address(RVA = "0xF6C578", Offset = "0xF6C578", VA = "0xF6C578")]
		public SettingsPostProcessing()
		{
		}
	}
	[Token(Token = "0x2000480")]
	public class SettingsGameplay : ISettingsCategory
	{
		[Token(Token = "0x4001537")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private SettingsSerialisation.Settings activeSettings;

		[Token(Token = "0x4001538")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private SettingsSerialisation.Settings settings;

		[Token(Token = "0x4001539")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private LocalisationService localisationService;

		[Token(Token = "0x14000026")]
		private event CallbackVoid<bool> SubtitlesEnableChangedEvent
		{
			[Token(Token = "0x6001ABF")]
			[Address(RVA = "0xF6F0A4", Offset = "0xF6F0A4", VA = "0xF6F0A4")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6001AC0")]
			[Address(RVA = "0xF6F154", Offset = "0xF6F154", VA = "0xF6F154")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x14000027")]
		private event CallbackVoid<bool> DiegeticsEnableChangedEvent
		{
			[Token(Token = "0x6001AC1")]
			[Address(RVA = "0xF6F204", Offset = "0xF6F204", VA = "0xF6F204")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6001AC2")]
			[Address(RVA = "0xF6F2B4", Offset = "0xF6F2B4", VA = "0xF6F2B4")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x14000028")]
		private event CallbackVoid<string> LanguageChangedEvent
		{
			[Token(Token = "0x6001AC3")]
			[Address(RVA = "0xF6F364", Offset = "0xF6F364", VA = "0xF6F364")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6001AC4")]
			[Address(RVA = "0xF6F414", Offset = "0xF6F414", VA = "0xF6F414")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x14000029")]
		private event CallbackVoid<float> VibrationFeedbackChangedEvent
		{
			[Token(Token = "0x6001AC5")]
			[Address(RVA = "0xF6F4C4", Offset = "0xF6F4C4", VA = "0xF6F4C4")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6001AC6")]
			[Address(RVA = "0xF6F574", Offset = "0xF6F574", VA = "0xF6F574")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x6001AC7")]
		[Address(RVA = "0xF6F624", Offset = "0xF6F624", VA = "0xF6F624")]
		public void AddSubtitlesEnableChangedEvent(CallbackVoid<bool> callback)
		{
		}

		[Token(Token = "0x6001AC8")]
		[Address(RVA = "0xF6A480", Offset = "0xF6A480", VA = "0xF6A480")]
		public void AddDiegeticsEnableChangedEvent(CallbackVoid<bool> callback)
		{
		}

		[Token(Token = "0x6001AC9")]
		[Address(RVA = "0xF6F628", Offset = "0xF6F628", VA = "0xF6F628")]
		public void AddLanguageChangedEvent(CallbackVoid<string> callback)
		{
		}

		[Token(Token = "0x6001ACA")]
		[Address(RVA = "0xF62E70", Offset = "0xF62E70", VA = "0xF62E70")]
		public void AddVibrationFeedbackChangedEvent(CallbackVoid<float> callback)
		{
		}

		[Token(Token = "0x6001ACB")]
		[Address(RVA = "0xF6F62C", Offset = "0xF6F62C", VA = "0xF6F62C")]
		public void RemoveSubtitlesEnableChangedEvent(CallbackVoid<bool> callback)
		{
		}

		[Token(Token = "0x6001ACC")]
		[Address(RVA = "0xF6A4EC", Offset = "0xF6A4EC", VA = "0xF6A4EC")]
		public void RemoveDiegeticsEnableChangedEvent(CallbackVoid<bool> callback)
		{
		}

		[Token(Token = "0x6001ACD")]
		[Address(RVA = "0xF6F630", Offset = "0xF6F630", VA = "0xF6F630")]
		public void RemoveLanguageChangedEvent(CallbackVoid<string> callback)
		{
		}

		[Token(Token = "0x6001ACE")]
		[Address(RVA = "0xF630C4", Offset = "0xF630C4", VA = "0xF630C4")]
		public void RemoveVibrationFeedbackChangedEvent(CallbackVoid<float> callback)
		{
		}

		[Token(Token = "0x6001ACF")]
		[Address(RVA = "0xF6C540", Offset = "0xF6C540", VA = "0xF6C540")]
		public SettingsGameplay(LocalisationService localisationServiceToBeAssigned)
		{
		}

		[Token(Token = "0x6001AD0")]
		[Address(RVA = "0xF6F634", Offset = "0xF6F634", VA = "0xF6F634", Slot = "5")]
		public void SetSettings(SettingsSerialisation.Settings someSettings)
		{
		}

		[Token(Token = "0x6001AD1")]
		[Address(RVA = "0xF6F63C", Offset = "0xF6F63C", VA = "0xF6F63C", Slot = "4")]
		public void SetActiveSettings(SettingsSerialisation.Settings someSettings)
		{
		}

		[Token(Token = "0x6001AD2")]
		[Address(RVA = "0xF6F644", Offset = "0xF6F644", VA = "0xF6F644", Slot = "6")]
		public void ApplySettings()
		{
		}

		[Token(Token = "0x6001AD3")]
		[Address(RVA = "0xF6F718", Offset = "0xF6F718", VA = "0xF6F718", Slot = "7")]
		public bool HaveChanged()
		{
			return default(bool);
		}

		[Token(Token = "0x6001AD4")]
		[Address(RVA = "0xF6F80C", Offset = "0xF6F80C", VA = "0xF6F80C")]
		public void SetSubtitlesEnabled(bool state)
		{
		}

		[Token(Token = "0x6001AD5")]
		[Address(RVA = "0xF6AF14", Offset = "0xF6AF14", VA = "0xF6AF14")]
		public bool GetSubtitlesEnabled()
		{
			return default(bool);
		}

		[Token(Token = "0x6001AD6")]
		[Address(RVA = "0xF6A4F0", Offset = "0xF6A4F0", VA = "0xF6A4F0")]
		public void SetDiegeticsEnabled(bool state)
		{
		}

		[Token(Token = "0x6001AD7")]
		[Address(RVA = "0xF6A448", Offset = "0xF6A448", VA = "0xF6A448")]
		public bool GetDiegeticsEnabled()
		{
			return default(bool);
		}

		[Token(Token = "0x6001AD8")]
		[Address(RVA = "0xF6F848", Offset = "0xF6F848", VA = "0xF6F848")]
		public void SetlanguageLocale(string localeCode)
		{
		}

		[Token(Token = "0x6001AD9")]
		[Address(RVA = "0xF6F6FC", Offset = "0xF6F6FC", VA = "0xF6F6FC")]
		public string GetLanguageLocale()
		{
			return null;
		}

		[Token(Token = "0x6001ADA")]
		[Address(RVA = "0xF6F89C", Offset = "0xF6F89C", VA = "0xF6F89C")]
		public void SetVibrationFeedback(float value)
		{
		}

		[Token(Token = "0x6001ADB")]
		[Address(RVA = "0xF62E74", Offset = "0xF62E74", VA = "0xF62E74")]
		public float GetVibrationFeedback()
		{
			return default(float);
		}
	}
	[Token(Token = "0x2000481")]
	public class SettingsControls : ISettingsCategory
	{
		[Token(Token = "0x2000482")]
		public enum ControllerMode
		{
			[Token(Token = "0x4001549")]
			Hold,
			[Token(Token = "0x400154A")]
			Press
		}

		[Token(Token = "0x2000483")]
		public enum MovementMode
		{
			[Token(Token = "0x400154C")]
			Teleportation,
			[Token(Token = "0x400154D")]
			Controller
		}

		[Token(Token = "0x2000484")]
		public enum SnapTurn
		{
			[Token(Token = "0x400154F")]
			TURN_15 = 15,
			[Token(Token = "0x4001550")]
			TURN_30 = 30,
			[Token(Token = "0x4001551")]
			TURN_45 = 45,
			[Token(Token = "0x4001552")]
			TURN_60 = 60,
			[Token(Token = "0x4001553")]
			TURN_75 = 75,
			[Token(Token = "0x4001554")]
			TURN_90 = 90
		}

		[Token(Token = "0x400153E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private SettingsSerialisation.Settings activeSettings;

		[Token(Token = "0x400153F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private SettingsSerialisation.Settings settings;

		[Token(Token = "0x1400002A")]
		private event CallbackVoid<float> MouseCameraSensitivityChangedEvent
		{
			[Token(Token = "0x6001ADC")]
			[Address(RVA = "0xF6F8D4", Offset = "0xF6F8D4", VA = "0xF6F8D4")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6001ADD")]
			[Address(RVA = "0xF6F984", Offset = "0xF6F984", VA = "0xF6F984")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x1400002B")]
		private event CallbackVoid<float> ControllerCameraSensitivityChangedEvent
		{
			[Token(Token = "0x6001ADE")]
			[Address(RVA = "0xF6FA34", Offset = "0xF6FA34", VA = "0xF6FA34")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6001ADF")]
			[Address(RVA = "0xF6FAE4", Offset = "0xF6FAE4", VA = "0xF6FAE4")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x1400002C")]
		private event CallbackVoid<ControllerMode> ControllerModeChangedEvent
		{
			[Token(Token = "0x6001AE0")]
			[Address(RVA = "0xF6FB94", Offset = "0xF6FB94", VA = "0xF6FB94")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6001AE1")]
			[Address(RVA = "0xF6FC44", Offset = "0xF6FC44", VA = "0xF6FC44")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x1400002D")]
		private event CallbackVoid<MovementMode> MovementModeChangedEvent
		{
			[Token(Token = "0x6001AE2")]
			[Address(RVA = "0xF6FCF4", Offset = "0xF6FCF4", VA = "0xF6FCF4")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6001AE3")]
			[Address(RVA = "0xF6FDA4", Offset = "0xF6FDA4", VA = "0xF6FDA4")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x1400002E")]
		private event CallbackVoid<SnapTurn> SnapTurnChangedEvent
		{
			[Token(Token = "0x6001AE4")]
			[Address(RVA = "0xF6FE54", Offset = "0xF6FE54", VA = "0xF6FE54")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6001AE5")]
			[Address(RVA = "0xF6FF04", Offset = "0xF6FF04", VA = "0xF6FF04")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x1400002F")]
		private event CallbackVoid<byte[]> BindingOverridesChangedEvent
		{
			[Token(Token = "0x6001AE6")]
			[Address(RVA = "0xF6FFB4", Offset = "0xF6FFB4", VA = "0xF6FFB4")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6001AE7")]
			[Address(RVA = "0xF70064", Offset = "0xF70064", VA = "0xF70064")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x14000030")]
		private event CallbackVoid<bool> MouseInvertYChangedEvent
		{
			[Token(Token = "0x6001AE8")]
			[Address(RVA = "0xF70114", Offset = "0xF70114", VA = "0xF70114")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6001AE9")]
			[Address(RVA = "0xF701C4", Offset = "0xF701C4", VA = "0xF701C4")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x14000031")]
		private event CallbackVoid<bool> ControllerInvertYChangedEvent
		{
			[Token(Token = "0x6001AEA")]
			[Address(RVA = "0xF70274", Offset = "0xF70274", VA = "0xF70274")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6001AEB")]
			[Address(RVA = "0xF70324", Offset = "0xF70324", VA = "0xF70324")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x6001AEC")]
		[Address(RVA = "0xF703D4", Offset = "0xF703D4", VA = "0xF703D4")]
		public void AddMouseCameraSensitivityChangedEvent(CallbackVoid<float> callback)
		{
		}

		[Token(Token = "0x6001AED")]
		[Address(RVA = "0xF703D8", Offset = "0xF703D8", VA = "0xF703D8")]
		public void AddControllerCameraSensitivityChangedEvent(CallbackVoid<float> callback)
		{
		}

		[Token(Token = "0x6001AEE")]
		[Address(RVA = "0xF703DC", Offset = "0xF703DC", VA = "0xF703DC")]
		public void AddControllerModeChangedEvent(CallbackVoid<ControllerMode> callback)
		{
		}

		[Token(Token = "0x6001AEF")]
		[Address(RVA = "0xF703E0", Offset = "0xF703E0", VA = "0xF703E0")]
		public void AddMovementModeChangedEvent(CallbackVoid<MovementMode> callback)
		{
		}

		[Token(Token = "0x6001AF0")]
		[Address(RVA = "0xF703E4", Offset = "0xF703E4", VA = "0xF703E4")]
		public void AddSnapTurnChangedEvent(CallbackVoid<SnapTurn> callback)
		{
		}

		[Token(Token = "0x6001AF1")]
		[Address(RVA = "0xF61694", Offset = "0xF61694", VA = "0xF61694")]
		public void AddBindingOverridesChangedEvent(CallbackVoid<byte[]> callback)
		{
		}

		[Token(Token = "0x6001AF2")]
		[Address(RVA = "0xF703E8", Offset = "0xF703E8", VA = "0xF703E8")]
		public void AddMouseCameraInvertYChangedEvent(CallbackVoid<bool> callback)
		{
		}

		[Token(Token = "0x6001AF3")]
		[Address(RVA = "0xF703EC", Offset = "0xF703EC", VA = "0xF703EC")]
		public void AddControllerCameraInvertYChangedEvent(CallbackVoid<bool> callback)
		{
		}

		[Token(Token = "0x6001AF4")]
		[Address(RVA = "0xF703F0", Offset = "0xF703F0", VA = "0xF703F0")]
		public void RemoveMouseCameraSensitivityChangedEvent(CallbackVoid<float> callback)
		{
		}

		[Token(Token = "0x6001AF5")]
		[Address(RVA = "0xF703F4", Offset = "0xF703F4", VA = "0xF703F4")]
		public void RemoveControllerCameraSensitivityChangedEvent(CallbackVoid<float> callback)
		{
		}

		[Token(Token = "0x6001AF6")]
		[Address(RVA = "0xF703F8", Offset = "0xF703F8", VA = "0xF703F8")]
		public void RemoveControllerModeChangedEvent(CallbackVoid<ControllerMode> callback)
		{
		}

		[Token(Token = "0x6001AF7")]
		[Address(RVA = "0xF703FC", Offset = "0xF703FC", VA = "0xF703FC")]
		public void RemoveMovementModeChangedEvent(CallbackVoid<MovementMode> callback)
		{
		}

		[Token(Token = "0x6001AF8")]
		[Address(RVA = "0xF70400", Offset = "0xF70400", VA = "0xF70400")]
		public void RemoveSnapTurnChangedEvent(CallbackVoid<SnapTurn> callback)
		{
		}

		[Token(Token = "0x6001AF9")]
		[Address(RVA = "0xF61ED4", Offset = "0xF61ED4", VA = "0xF61ED4")]
		public void RemoveBindingOverridesChangedEvent(CallbackVoid<byte[]> callback)
		{
		}

		[Token(Token = "0x6001AFA")]
		[Address(RVA = "0xF70404", Offset = "0xF70404", VA = "0xF70404")]
		public void RemoveMouseCameraInvertYChangedEvent(CallbackVoid<bool> callback)
		{
		}

		[Token(Token = "0x6001AFB")]
		[Address(RVA = "0xF70408", Offset = "0xF70408", VA = "0xF70408")]
		public void RemoveControllerCameraInvertYChangedEvent(CallbackVoid<bool> callback)
		{
		}

		[Token(Token = "0x6001AFC")]
		[Address(RVA = "0xF7040C", Offset = "0xF7040C", VA = "0xF7040C", Slot = "5")]
		public void SetSettings(SettingsSerialisation.Settings someSettings)
		{
		}

		[Token(Token = "0x6001AFD")]
		[Address(RVA = "0xF70414", Offset = "0xF70414", VA = "0xF70414", Slot = "4")]
		public void SetActiveSettings(SettingsSerialisation.Settings someSettings)
		{
		}

		[Token(Token = "0x6001AFE")]
		[Address(RVA = "0xF7041C", Offset = "0xF7041C", VA = "0xF7041C", Slot = "6")]
		public void ApplySettings()
		{
		}

		[Token(Token = "0x6001AFF")]
		[Address(RVA = "0xF7058C", Offset = "0xF7058C", VA = "0xF7058C", Slot = "7")]
		public bool HaveChanged()
		{
			return default(bool);
		}

		[Token(Token = "0x6001B00")]
		[Address(RVA = "0xF70634", Offset = "0xF70634", VA = "0xF70634")]
		public void SetCameraMouseSensitivity(float value)
		{
		}

		[Token(Token = "0x6001B01")]
		[Address(RVA = "0xF7066C", Offset = "0xF7066C", VA = "0xF7066C")]
		public void SetCameraControllerSensitivity(float value)
		{
		}

		[Token(Token = "0x6001B02")]
		[Address(RVA = "0xF70554", Offset = "0xF70554", VA = "0xF70554")]
		public float GetMouseCameraSensitivity()
		{
			return default(float);
		}

		[Token(Token = "0x6001B03")]
		[Address(RVA = "0xF706A4", Offset = "0xF706A4", VA = "0xF706A4")]
		public float GetMouseCameraSensitivityRange()
		{
			return default(float);
		}

		[Token(Token = "0x6001B04")]
		[Address(RVA = "0xF70570", Offset = "0xF70570", VA = "0xF70570")]
		public float GetControllerCameraSensitivity()
		{
			return default(float);
		}

		[Token(Token = "0x6001B05")]
		[Address(RVA = "0xF706C0", Offset = "0xF706C0", VA = "0xF706C0")]
		public float GetControllerCameraSensitivityRange()
		{
			return default(float);
		}

		[Token(Token = "0x6001B06")]
		[Address(RVA = "0xF706DC", Offset = "0xF706DC", VA = "0xF706DC")]
		public void SetMovementMode(MovementMode mode)
		{
		}

		[Token(Token = "0x6001B07")]
		[Address(RVA = "0xF70714", Offset = "0xF70714", VA = "0xF70714")]
		public MovementMode GetMovementMode()
		{
			return default(MovementMode);
		}

		[Token(Token = "0x6001B08")]
		[Address(RVA = "0xF70730", Offset = "0xF70730", VA = "0xF70730")]
		public void SetControllerMode(ControllerMode mode)
		{
		}

		[Token(Token = "0x6001B09")]
		[Address(RVA = "0xF70768", Offset = "0xF70768", VA = "0xF70768")]
		public ControllerMode GetControllerMode()
		{
			return default(ControllerMode);
		}

		[Token(Token = "0x6001B0A")]
		[Address(RVA = "0xF70784", Offset = "0xF70784", VA = "0xF70784")]
		public void SetSnapTurn(SnapTurn turn)
		{
		}

		[Token(Token = "0x6001B0B")]
		[Address(RVA = "0xF707BC", Offset = "0xF707BC", VA = "0xF707BC")]
		public SnapTurn GetSnapTurn()
		{
			return default(SnapTurn);
		}

		[Token(Token = "0x6001B0C")]
		[Address(RVA = "0xF707D8", Offset = "0xF707D8", VA = "0xF707D8")]
		public void SetMouseCameraInvertY(bool state)
		{
		}

		[Token(Token = "0x6001B0D")]
		[Address(RVA = "0xF70814", Offset = "0xF70814", VA = "0xF70814")]
		public void SetControllerCameraInvertY(bool state)
		{
		}

		[Token(Token = "0x6001B0E")]
		[Address(RVA = "0xF70850", Offset = "0xF70850", VA = "0xF70850")]
		public bool GetMouseCameraInvertY()
		{
			return default(bool);
		}

		[Token(Token = "0x6001B0F")]
		[Address(RVA = "0xF7086C", Offset = "0xF7086C", VA = "0xF7086C")]
		public bool GetControllerCameraInvertY()
		{
			return default(bool);
		}

		[Token(Token = "0x6001B10")]
		[Address(RVA = "0xF70888", Offset = "0xF70888", VA = "0xF70888")]
		public void SetNewBindingOverrides(ArraySegment<byte> bindingOverrides)
		{
		}

		[Token(Token = "0x6001B11")]
		[Address(RVA = "0xF6C538", Offset = "0xF6C538", VA = "0xF6C538")]
		public SettingsControls()
		{
		}
	}
}
namespace Services.Events
{
	[Serializable]
	[Token(Token = "0x2000485")]
	public class ManualRumbleEvent : BaseRumbleEvent
	{
		[Token(Token = "0x4001555")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private float _initialLowFrequency;

		[Token(Token = "0x4001556")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private float _initialHighFrequency;

		[Token(Token = "0x4001557")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float _lowFrequency;

		[Token(Token = "0x4001558")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float _highFrequency;

		[Token(Token = "0x6001B12")]
		[Address(RVA = "0xF70950", Offset = "0xF70950", VA = "0xF70950")]
		public ManualRumbleEvent(float initialIntensity)
		{
		}

		[Token(Token = "0x6001B13")]
		[Address(RVA = "0xF62AF0", Offset = "0xF62AF0", VA = "0xF62AF0")]
		public ManualRumbleEvent(float lowFrequency, float highFrequency)
		{
		}

		[Token(Token = "0x6001B14")]
		[Address(RVA = "0xF70988", Offset = "0xF70988", VA = "0xF70988", Slot = "4")]
		public override void Start(IDualMotorRumble rumbleDevice, int unityDeviceId, float scale)
		{
		}

		[Token(Token = "0x6001B15")]
		[Address(RVA = "0xF709CC", Offset = "0xF709CC", VA = "0xF709CC")]
		public void UpdateFrequency(float lowFrequency, float highFrequency)
		{
		}

		[Token(Token = "0x6001B16")]
		[Address(RVA = "0xF70AA0", Offset = "0xF70AA0", VA = "0xF70AA0", Slot = "6")]
		public override void Stop()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000486")]
	public class TimedRumbleEvent : BaseRumbleEvent
	{
		[Token(Token = "0x4001559")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private float _lowFrequency;

		[Token(Token = "0x400155A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private float _highFrequency;

		[Token(Token = "0x400155B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		private float _lengthOfRumbleInSeconds;

		[Token(Token = "0x400155C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float _timeStarted;

		[Token(Token = "0x6001B17")]
		[Address(RVA = "0xF70B5C", Offset = "0xF70B5C", VA = "0xF70B5C")]
		public TimedRumbleEvent(float intensity, float lengthOfRumbleInSeconds)
		{
		}

		[Token(Token = "0x6001B18")]
		[Address(RVA = "0xF62BC8", Offset = "0xF62BC8", VA = "0xF62BC8")]
		public TimedRumbleEvent(float lowFrequency, float highFrequency, float lengthOfRumbleInSeconds)
		{
		}

		[Token(Token = "0x6001B19")]
		[Address(RVA = "0xF70B94", Offset = "0xF70B94", VA = "0xF70B94", Slot = "4")]
		public override void Start(IDualMotorRumble device, int deviceId, float scale)
		{
		}

		[Token(Token = "0x6001B1A")]
		[Address(RVA = "0xF70C98", Offset = "0xF70C98", VA = "0xF70C98", Slot = "5")]
		public override void OnUpdate(float deltaTime)
		{
		}

		[Token(Token = "0x6001B1B")]
		[Address(RVA = "0xF70CDC", Offset = "0xF70CDC", VA = "0xF70CDC", Slot = "6")]
		public override void Stop()
		{
		}
	}
}
namespace Services.Localisation
{
	[Token(Token = "0x2000487")]
	public class LocalisationService : MonoBehaviour, IService
	{
		[Token(Token = "0x400155D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private List<LocalizedString> _localeNames;

		[Token(Token = "0x400155E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private IReadOnlyList<Locale> _supportedLocales;

		[Token(Token = "0x400155F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int _currentlySelectedLocaleIndex;

		[Token(Token = "0x4001560")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private string _systemBootDefaultLocaleID;

		[Token(Token = "0x4001561")]
		private const string c_localeTableReference = "FrontEndText";

		[Token(Token = "0x4001562")]
		private const string c_localeTableEntryPrefix = "LocaleName.";

		[Token(Token = "0x4001563")]
		private const int c_initalLocaleChangedListSize = 4;

		[Token(Token = "0x4001564")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private List<CallbackVoid> _localeChangedEvent;

		[Token(Token = "0x4001565")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private UILocalisations _localisationUI;

		[Token(Token = "0x1700035E")]
		public UILocalisations UILocalisations
		{
			[Token(Token = "0x6001B1E")]
			[Address(RVA = "0xF70EA0", Offset = "0xF70EA0", VA = "0xF70EA0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001B1C")]
		[Address(RVA = "0xF70D98", Offset = "0xF70D98", VA = "0xF70D98")]
		public void AddLocaleChangedEvent(CallbackVoid callback)
		{
		}

		[Token(Token = "0x6001B1D")]
		[Address(RVA = "0xF70E48", Offset = "0xF70E48", VA = "0xF70E48")]
		public void RemoveLocaleChangedEvent(CallbackVoid callback)
		{
		}

		[Token(Token = "0x6001B1F")]
		[Address(RVA = "0xF70EA8", Offset = "0xF70EA8", VA = "0xF70EA8", Slot = "4")]
		public void OnStartUp()
		{
		}

		[Token(Token = "0x6001B20")]
		[Address(RVA = "0xF71308", Offset = "0xF71308", VA = "0xF71308", Slot = "5")]
		public void OnCleanUp()
		{
		}

		[Token(Token = "0x6001B21")]
		[Address(RVA = "0xF7130C", Offset = "0xF7130C", VA = "0xF7130C", Slot = "6")]
		public void OnUpdate(float dt)
		{
		}

		[Token(Token = "0x6001B22")]
		[Address(RVA = "0xF70F6C", Offset = "0xF70F6C", VA = "0xF70F6C")]
		private void InitLocales()
		{
		}

		[Token(Token = "0x6001B23")]
		[Address(RVA = "0xF71310", Offset = "0xF71310", VA = "0xF71310")]
		public void RegisterSettingsCallbacks(SettingsService settings)
		{
		}

		[Token(Token = "0x6001B24")]
		[Address(RVA = "0xF713F0", Offset = "0xF713F0", VA = "0xF713F0")]
		public IReadOnlyList<Locale> GetSupportedLocales()
		{
			return null;
		}

		[Token(Token = "0x6001B25")]
		[Address(RVA = "0xF713F8", Offset = "0xF713F8", VA = "0xF713F8")]
		public List<LocalizedString> GetSupportedLocaleNames()
		{
			return null;
		}

		[Token(Token = "0x6001B26")]
		[Address(RVA = "0xF71400", Offset = "0xF71400", VA = "0xF71400")]
		public int GetCurrentlySelectedLocaleIndex()
		{
			return default(int);
		}

		[Token(Token = "0x6001B27")]
		[Address(RVA = "0xF71408", Offset = "0xF71408", VA = "0xF71408")]
		public string GetLocalIDFronIndex(int index)
		{
			return null;
		}

		[Token(Token = "0x6001B28")]
		[Address(RVA = "0xF70F4C", Offset = "0xF70F4C", VA = "0xF70F4C")]
		private string GetCurrentLocale()
		{
			return null;
		}

		[Token(Token = "0x6001B29")]
		[Address(RVA = "0xF6F7BC", Offset = "0xF6F7BC", VA = "0xF6F7BC")]
		public bool IsCurrentLanguageNative()
		{
			return default(bool);
		}

		[Token(Token = "0x6001B2A")]
		[Address(RVA = "0xF71544", Offset = "0xF71544", VA = "0xF71544")]
		private void OnLocaleChanged(Locale locale)
		{
		}

		[Token(Token = "0x6001B2B")]
		[Address(RVA = "0xF71550", Offset = "0xF71550", VA = "0xF71550")]
		private void OnLanguageChangedEvent(string LocaleID)
		{
		}

		[Token(Token = "0x6001B2C")]
		[Address(RVA = "0xF71578", Offset = "0xF71578", VA = "0xF71578")]
		private bool SetLocale(string LocaleID)
		{
			return default(bool);
		}

		[Token(Token = "0x6001B2D")]
		[Address(RVA = "0xF71758", Offset = "0xF71758", VA = "0xF71758")]
		public LocalisationService()
		{
		}
	}
}
namespace Services.GraphicsSettings
{
	[Token(Token = "0x2000488")]
	public class GraphicsSettingsService : MonoBehaviour, IService
	{
		[Token(Token = "0x2000489")]
		public class FrameLimitOption
		{
			[Token(Token = "0x4001571")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public readonly int FrameLimit;

			[Token(Token = "0x4001572")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public readonly string DisplayString;

			[Token(Token = "0x6001B42")]
			[Address(RVA = "0xF72588", Offset = "0xF72588", VA = "0xF72588")]
			public FrameLimitOption(int frameLimit)
			{
			}
		}

		[Token(Token = "0x4001566")]
		private const int kNoFPSLimit = -1;

		[Token(Token = "0x4001567")]
		private const int kXboxOneFrameRateTarget = 30;

		[Token(Token = "0x4001568")]
		private const int kFullVSync = 1;

		[Token(Token = "0x4001569")]
		private const int kHalfVSync = 2;

		[Token(Token = "0x400156A")]
		public const int kFrameLimitOptionIDNone = 0;

		[Token(Token = "0x400156B")]
		public const int kFrameLimitOptionID60 = 1;

		[Token(Token = "0x400156C")]
		public const int kFrameLimitOptionID30 = 2;

		[Token(Token = "0x400156D")]
		private const bool kShouldHalfVSync = false;

		[Token(Token = "0x400156E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private IReadOnlyList<Resolution> _supportedResolutions;

		[Token(Token = "0x400156F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private UniversalRenderPipelineAsset _cachedRenderPiepline;

		[Token(Token = "0x4001570")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly Dictionary<int, FrameLimitOption> s_frameLimitOptions;

		[Token(Token = "0x1700035F")]
		public static IReadOnlyDictionary<int, FrameLimitOption> FrameLimitOptions
		{
			[Token(Token = "0x6001B2E")]
			[Address(RVA = "0xF718B8", Offset = "0xF718B8", VA = "0xF718B8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001B2F")]
		[Address(RVA = "0xF71910", Offset = "0xF71910", VA = "0xF71910", Slot = "4")]
		public void OnStartUp()
		{
		}

		[Token(Token = "0x6001B30")]
		[Address(RVA = "0xF71B3C", Offset = "0xF71B3C", VA = "0xF71B3C", Slot = "5")]
		public void OnCleanUp()
		{
		}

		[Token(Token = "0x6001B31")]
		[Address(RVA = "0xF71B40", Offset = "0xF71B40", VA = "0xF71B40", Slot = "6")]
		public void OnUpdate(float dt)
		{
		}

		[Token(Token = "0x6001B32")]
		[Address(RVA = "0xF71928", Offset = "0xF71928", VA = "0xF71928")]
		private void InitURP()
		{
		}

		[Token(Token = "0x6001B33")]
		[Address(RVA = "0xF719DC", Offset = "0xF719DC", VA = "0xF719DC")]
		private void InitResolutions()
		{
		}

		[Token(Token = "0x6001B34")]
		[Address(RVA = "0xF71B44", Offset = "0xF71B44", VA = "0xF71B44")]
		public IReadOnlyList<Resolution> GetSupportedResolutions()
		{
			return null;
		}

		[Token(Token = "0x6001B35")]
		[Address(RVA = "0xF71B4C", Offset = "0xF71B4C", VA = "0xF71B4C")]
		public Resolution GetCurrentResolution()
		{
			return default(Resolution);
		}

		[Token(Token = "0x6001B36")]
		[Address(RVA = "0xF71B64", Offset = "0xF71B64", VA = "0xF71B64")]
		public void RegisterSettingsCallbacks(SettingsService settings)
		{
		}

		[Token(Token = "0x6001B37")]
		[Address(RVA = "0xF71E5C", Offset = "0xF71E5C", VA = "0xF71E5C")]
		private void OnVSyncChangedChanged(bool state)
		{
		}

		[Token(Token = "0x6001B38")]
		[Address(RVA = "0xF71E68", Offset = "0xF71E68", VA = "0xF71E68")]
		private void OnTextureResolutionChanged(SettingsGraphics.TextureResolution state)
		{
		}

		[Token(Token = "0x6001B39")]
		[Address(RVA = "0xF71E84", Offset = "0xF71E84", VA = "0xF71E84")]
		private void OnAntiAliasChangedChanged(SettingsGraphics.AntiAlias state)
		{
		}

		[Token(Token = "0x6001B3A")]
		[Address(RVA = "0xF71EF8", Offset = "0xF71EF8", VA = "0xF71EF8")]
		private void OnFrameLimitChangedEvent(int frames)
		{
		}

		[Token(Token = "0x6001B3B")]
		[Address(RVA = "0xF720A8", Offset = "0xF720A8", VA = "0xF720A8")]
		private void OnResolutionChangedEvent(Resolution resolution)
		{
		}

		[Token(Token = "0x6001B3C")]
		[Address(RVA = "0xF72368", Offset = "0xF72368", VA = "0xF72368")]
		private void OnWindowedChangedEvent(bool windowed)
		{
		}

		[Token(Token = "0x6001B3D")]
		[Address(RVA = "0xF72308", Offset = "0xF72308", VA = "0xF72308")]
		private void SetScreenResolution(Resolution resolution, bool windowed)
		{
		}

		[Token(Token = "0x6001B3E")]
		[Address(RVA = "0xF7238C", Offset = "0xF7238C", VA = "0xF7238C")]
		private void OnMeshDetailChangedEvent(SettingsGraphics.MeshDetail detailLevel)
		{
		}

		[Token(Token = "0x6001B3F")]
		[Address(RVA = "0xF723A8", Offset = "0xF723A8", VA = "0xF723A8")]
		private void OnAnisotropicFilteringChangedEvent(bool state)
		{
		}

		[Token(Token = "0x6001B40")]
		[Address(RVA = "0xF723B4", Offset = "0xF723B4", VA = "0xF723B4")]
		public GraphicsSettingsService()
		{
		}
	}
}
namespace Services.Save
{
	[Token(Token = "0x200048B")]
	public class MetadataSegment : SerialiserSegmentBase<MetadataSerialiser, MetadataDeserialiser>
	{
		[Token(Token = "0x17000360")]
		public override string name
		{
			[Token(Token = "0x6001B46")]
			[Address(RVA = "0xF726A4", Offset = "0xF726A4", VA = "0xF726A4", Slot = "14")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000361")]
		public override uint version
		{
			[Token(Token = "0x6001B47")]
			[Address(RVA = "0xF726E4", Offset = "0xF726E4", VA = "0xF726E4", Slot = "15")]
			get
			{
				return default(uint);
			}
		}

		[Token(Token = "0x6001B48")]
		[Address(RVA = "0xF726EC", Offset = "0xF726EC", VA = "0xF726EC")]
		public MetadataSegment()
		{
		}
	}
	[Token(Token = "0x200048C")]
	public class NarrativeSegment : SerialiserSegmentBase<NarrativeSerialiser, NarrativeDeserialiser>
	{
		[Token(Token = "0x17000362")]
		public override string name
		{
			[Token(Token = "0x6001B49")]
			[Address(RVA = "0xF72758", Offset = "0xF72758", VA = "0xF72758", Slot = "14")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000363")]
		public override uint version
		{
			[Token(Token = "0x6001B4A")]
			[Address(RVA = "0xF72798", Offset = "0xF72798", VA = "0xF72798", Slot = "15")]
			get
			{
				return default(uint);
			}
		}

		[Token(Token = "0x6001B4B")]
		[Address(RVA = "0xF727A0", Offset = "0xF727A0", VA = "0xF727A0")]
		public NarrativeSegment()
		{
		}
	}
	[Token(Token = "0x200048D")]
	public class ScreenshotSegment : SerialiserSegmentBase<ScreenshotSerialiser, ScreenshotDeserialiser>
	{
		[Token(Token = "0x17000364")]
		public override string name
		{
			[Token(Token = "0x6001B4C")]
			[Address(RVA = "0xF7280C", Offset = "0xF7280C", VA = "0xF7280C", Slot = "14")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000365")]
		public override uint version
		{
			[Token(Token = "0x6001B4D")]
			[Address(RVA = "0xF7284C", Offset = "0xF7284C", VA = "0xF7284C", Slot = "15")]
			get
			{
				return default(uint);
			}
		}

		[Token(Token = "0x6001B4E")]
		[Address(RVA = "0xF72854", Offset = "0xF72854", VA = "0xF72854")]
		public ScreenshotSegment()
		{
		}
	}
	[Token(Token = "0x200048E")]
	public interface ISerialiserSegment : ISaveSegment
	{
		[Token(Token = "0x17000366")]
		int id
		{
			[Token(Token = "0x6001B4F")]
			get;
			[Token(Token = "0x6001B50")]
			set;
		}
	}
	[Token(Token = "0x200048F")]
	public abstract class SerialiserSegmentBase<T, U> : ISerialiserSegment, ISaveSegment where T : ISerialiser where U : IDeserialiser
	{
		[Token(Token = "0x4001575")]
		private const int MAX_BUFFER_SIZE = 2097152;

		[Token(Token = "0x4001576")]
		private const int INITIAL_BUFFER_SIZE = 1048576;

		[Token(Token = "0x4001577")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static byte[] s_sharedBuffer;

		[Token(Token = "0x4001578")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private T _serialiser;

		[Token(Token = "0x4001579")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private U _deserialiser;

		[Token(Token = "0x400157A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private ProfilerMarker _serialiseMarker;

		[Token(Token = "0x400157B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private ProfilerMarker _deserialiseMarker;

		[Token(Token = "0x17000367")]
		public abstract string name
		{
			[Token(Token = "0x6001B51")]
			get;
		}

		[Token(Token = "0x17000368")]
		public abstract uint version
		{
			[Token(Token = "0x6001B52")]
			get;
		}

		[Token(Token = "0x17000369")]
		public int id
		{
			[Token(Token = "0x6001B53")]
			[CompilerGenerated]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001B54")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x1700036A")]
		public FastList<byte> Buffer
		{
			[Token(Token = "0x6001B55")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001B56")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x1700036B")]
		public string SegmentName
		{
			[Token(Token = "0x6001B57")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001B58")]
			set
			{
			}
		}

		[Token(Token = "0x1700036C")]
		public uint Version
		{
			[Token(Token = "0x6001B59")]
			get
			{
				return default(uint);
			}
			[Token(Token = "0x6001B5A")]
			set
			{
			}
		}

		[Token(Token = "0x6001B5B")]
		static SerialiserSegmentBase()
		{
		}

		[Token(Token = "0x6001B5C")]
		public SerialiserSegmentBase()
		{
		}

		[Token(Token = "0x6001B5D")]
		public bool Initialise(T serialiser, U deserialiser)
		{
			return default(bool);
		}

		[Token(Token = "0x6001B5E")]
		public void Serialise()
		{
		}

		[Token(Token = "0x6001B5F")]
		public void Deserialise(uint fileSaveVersion)
		{
		}
	}
	[Token(Token = "0x2000490")]
	public class SettingsSegment : SerialiserSegmentBase<SettingsSerialiser, SettingsDeserialiser>
	{
		[Token(Token = "0x1700036D")]
		public override string name
		{
			[Token(Token = "0x6001B60")]
			[Address(RVA = "0xF728C0", Offset = "0xF728C0", VA = "0xF728C0", Slot = "14")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700036E")]
		public override uint version
		{
			[Token(Token = "0x6001B61")]
			[Address(RVA = "0xF72900", Offset = "0xF72900", VA = "0xF72900", Slot = "15")]
			get
			{
				return default(uint);
			}
		}

		[Token(Token = "0x6001B62")]
		[Address(RVA = "0xF72908", Offset = "0xF72908", VA = "0xF72908")]
		public SettingsSegment()
		{
		}
	}
	[Token(Token = "0x2000491")]
	public class WorldSegment : SerialiserSegmentBase<WorldSerialiser, WorldDeserialiser>
	{
		[Token(Token = "0x1700036F")]
		public override string name
		{
			[Token(Token = "0x6001B63")]
			[Address(RVA = "0xF72974", Offset = "0xF72974", VA = "0xF72974", Slot = "14")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000370")]
		public override uint version
		{
			[Token(Token = "0x6001B64")]
			[Address(RVA = "0xF729B4", Offset = "0xF729B4", VA = "0xF729B4", Slot = "15")]
			get
			{
				return default(uint);
			}
		}

		[Token(Token = "0x6001B65")]
		[Address(RVA = "0xF729BC", Offset = "0xF729BC", VA = "0xF729BC")]
		public WorldSegment()
		{
		}
	}
	[Token(Token = "0x2000492")]
	public interface ISaveGameService
	{
		[Token(Token = "0x17000371")]
		bool initialised
		{
			[Token(Token = "0x6001B67")]
			get;
		}

		[Token(Token = "0x6001B66")]
		void InitialiseForUser(IUser user, string platformAppId);

		[Token(Token = "0x6001B68")]
		bool SaveGame(int slotIndex, Serialisers serialiser);

		[Token(Token = "0x6001B69")]
		bool LoadGame(int slotIndex, Deserialisers deserialisers);

		[Token(Token = "0x6001B6A")]
		bool IsFinished(out bool success);

		[Token(Token = "0x6001B6B")]
		bool IsSaveSerializeFinished(out bool success);

		[Token(Token = "0x6001B6C")]
		void CacheMetaDataForSlot(MetadataSerialisation.Metadata saveSlotsdata, int slotIndex);

		[Token(Token = "0x6001B6D")]
		MetadataSerialisation.Metadata GetCachedMetaDataForSlot(int slotIndex);

		[Token(Token = "0x6001B6E")]
		int? GetMostRecentValidSaveSlot([Optional] string activityFilter);

		[Token(Token = "0x6001B6F")]
		bool HasAnyValidSaveData();

		[Token(Token = "0x6001B70")]
		bool IsValidSlot(int slotIndex);

		[Token(Token = "0x6001B71")]
		void Request(SaveGameService.OperationType operation);

		[Token(Token = "0x6001B72")]
		SaveGameService.OperationType GetPendingOperation();

		[Token(Token = "0x6001B73")]
		void ClearPendingOperation();

		[Token(Token = "0x6001B74")]
		bool ShouldShowSaveGameError();

		[Token(Token = "0x6001B75")]
		SaveGameError GetCurrentSaveGameError();

		[Token(Token = "0x6001B76")]
		void ClearCurrentSaveGameError();

		[Token(Token = "0x6001B77")]
		void ClearAllSaveGameErrors();

		[Token(Token = "0x6001B78")]
		bool DeleteSlot(int slotIndex);
	}
	[Token(Token = "0x2000493")]
	public struct Serialisers
	{
		[Token(Token = "0x400157E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public MetadataSerialiser metadata;

		[Token(Token = "0x400157F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public ScreenshotSerialiser screenshot;

		[Token(Token = "0x4001580")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public NarrativeSerialiser narrative;

		[Token(Token = "0x4001581")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public WorldSerialiser world;

		[Token(Token = "0x4001582")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SettingsSerialiser settings;
	}
	[Token(Token = "0x2000494")]
	public struct Deserialisers
	{
		[Token(Token = "0x4001583")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public MetadataDeserialiser metadata;

		[Token(Token = "0x4001584")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public ScreenshotDeserialiser screenshot;

		[Token(Token = "0x4001585")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public NarrativeDeserialiser narrative;

		[Token(Token = "0x4001586")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public WorldDeserialiser world;

		[Token(Token = "0x4001587")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SettingsDeserialiser settings;
	}
	[Token(Token = "0x2000495")]
	public class SaveGameService : MonoBehaviour, IService, ISaveGameService
	{
		[Token(Token = "0x2000496")]
		private struct PlatformSegments
		{
			[Token(Token = "0x40015A0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public MetadataSegment metadata;

			[Token(Token = "0x40015A1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public ScreenshotSegment screenshot;

			[Token(Token = "0x40015A2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public NarrativeSegment blackboard;

			[Token(Token = "0x40015A3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public WorldSegment world;

			[Token(Token = "0x40015A4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SettingsSegment settings;
		}

		[Token(Token = "0x2000497")]
		public enum OperationType
		{
			[Token(Token = "0x40015A6")]
			None,
			[Token(Token = "0x40015A7")]
			Save,
			[Token(Token = "0x40015A8")]
			AutoSave,
			[Token(Token = "0x40015A9")]
			Load,
			[Token(Token = "0x40015AA")]
			LoadSettings,
			[Token(Token = "0x40015AB")]
			SaveSettings
		}

		[Token(Token = "0x2000498")]
		public enum Slot
		{
			[Token(Token = "0x40015AD")]
			SlotSettings,
			[Token(Token = "0x40015AE")]
			Slot1,
			[Token(Token = "0x40015AF")]
			Slot2,
			[Token(Token = "0x40015B0")]
			Slot3,
			[Token(Token = "0x40015B1")]
			Autosave,
			[Token(Token = "0x40015B2")]
			MaxSaveGameSlots
		}

		[Token(Token = "0x2000499")]
		private struct StateData
		{
			[Token(Token = "0x40015B3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public List<ISerialiserSegment> segments;

			[Token(Token = "0x40015B4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public bool success;
		}

		[Token(Token = "0x200049A")]
		private enum State
		{
			[Token(Token = "0x40015B6")]
			Idle,
			[Token(Token = "0x40015B7")]
			Save,
			[Token(Token = "0x40015B8")]
			Load,
			[Token(Token = "0x40015B9")]
			WaitForPlatformIdle
		}

		[Token(Token = "0x4001588")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private State _state;

		[Token(Token = "0x4001589")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private StateData _currentOperation;

		[Token(Token = "0x400158A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private OperationType _requestedOperation;

		[Token(Token = "0x400158B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private PlatformSegments _platformSegments;

		[Token(Token = "0x400158C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Team17.Platform.SaveGame.ISaveGameService _platformSaveService;

		[Token(Token = "0x400158D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static List<ISerialiserSegment> s_tempSegments;

		[Token(Token = "0x400158E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static ProfilerMarker _saveProfileMarker;

		[Token(Token = "0x400158F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static ProfilerMarker _loadProfileMarker;

		[Token(Token = "0x4001590")]
		private const string kStringTableName = "FrontEndText";

		[Token(Token = "0x4001591")]
		private const string kSettingsSlotNameKey = "SaveSlotSettings.Title";

		[Token(Token = "0x4001592")]
		private const string kSettingsSlotDescKey = "SaveSlotSettings.Desc";

		[Token(Token = "0x4001593")]
		private const string kAutosaveSlotNameKey = "SaveSlotAutosave.Title";

		[Token(Token = "0x4001594")]
		private const string kAutosaveSlotDescKey = "SaveSlotAutosave.Desc";

		[Token(Token = "0x4001595")]
		private const string kSlot1NameKey = "SaveSlot1.Title";

		[Token(Token = "0x4001596")]
		private const string kSlot1DescKey = "SaveSlot1.Desc";

		[Token(Token = "0x4001597")]
		private const string kSlot2NameKey = "SaveSlot2.Title";

		[Token(Token = "0x4001598")]
		private const string kSlot2DescKey = "SaveSlot2.Desc";

		[Token(Token = "0x4001599")]
		private const string kSlot3NameKey = "SaveSlot3.Title";

		[Token(Token = "0x400159A")]
		private const string kSlot3DescKey = "SaveSlot3.Desc";

		[Token(Token = "0x400159B")]
		public const int c_SaveDataSize = 1048576;

		[Token(Token = "0x400159C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private MetadataSerialisation.Metadata[] _saveSlotMetaDataCache;

		[Token(Token = "0x400159D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private IUser _currentUser;

		[Token(Token = "0x400159E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private FastList<SaveGameError> _saveGameErrors;

		[Token(Token = "0x400159F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private float _lastSaveTime;

		[Token(Token = "0x17000372")]
		public bool initialised
		{
			[Token(Token = "0x6001B79")]
			[Address(RVA = "0xF72A28", Offset = "0xF72A28", VA = "0xF72A28", Slot = "8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001B7A")]
		[Address(RVA = "0xF72AE0", Offset = "0xF72AE0", VA = "0xF72AE0")]
		public SaveGameService()
		{
		}

		[Token(Token = "0x6001B7B")]
		[Address(RVA = "0xF72CA0", Offset = "0xF72CA0", VA = "0xF72CA0", Slot = "7")]
		public void InitialiseForUser(IUser user, string platformAppId)
		{
		}

		[Token(Token = "0x6001B7C")]
		[Address(RVA = "0xF73B04", Offset = "0xF73B04", VA = "0xF73B04", Slot = "13")]
		public void CacheMetaDataForSlot(MetadataSerialisation.Metadata saveSlotdata, int slotIndex)
		{
		}

		[Token(Token = "0x6001B7D")]
		[Address(RVA = "0xF73C5C", Offset = "0xF73C5C", VA = "0xF73C5C", Slot = "14")]
		public MetadataSerialisation.Metadata GetCachedMetaDataForSlot(int slotIndex)
		{
			return null;
		}

		[Token(Token = "0x6001B7E")]
		[Address(RVA = "0xF73C94", Offset = "0xF73C94", VA = "0xF73C94", Slot = "15")]
		public int? GetMostRecentValidSaveSlot([Optional] string activityFilter)
		{
			return null;
		}

		[Token(Token = "0x6001B7F")]
		[Address(RVA = "0xF73F0C", Offset = "0xF73F0C", VA = "0xF73F0C", Slot = "16")]
		public bool HasAnyValidSaveData()
		{
			return default(bool);
		}

		[Token(Token = "0x6001B80")]
		[Address(RVA = "0xF73EB4", Offset = "0xF73EB4", VA = "0xF73EB4", Slot = "17")]
		public bool IsValidSlot(int slotIndex)
		{
			return default(bool);
		}

		[Token(Token = "0x6001B81")]
		[Address(RVA = "0xF73F50", Offset = "0xF73F50", VA = "0xF73F50", Slot = "4")]
		public void OnStartUp()
		{
		}

		[Token(Token = "0x6001B82")]
		[Address(RVA = "0xF7410C", Offset = "0xF7410C", VA = "0xF7410C", Slot = "5")]
		public void OnCleanUp()
		{
		}

		[Token(Token = "0x6001B83")]
		[Address(RVA = "0xF741C4", Offset = "0xF741C4", VA = "0xF741C4", Slot = "6")]
		public void OnUpdate(float dt)
		{
		}

		[Token(Token = "0x6001B84")]
		[Address(RVA = "0xF74470", Offset = "0xF74470", VA = "0xF74470")]
		private void HandleError(SaveGameError error)
		{
		}

		[Token(Token = "0x6001B85")]
		[Address(RVA = "0xF74624", Offset = "0xF74624", VA = "0xF74624")]
		private void SetupSerialiserSegments(Serialisers serialisers, Deserialisers deserialisers, List<ISerialiserSegment> validSegments)
		{
		}

		[Token(Token = "0x6001B86")]
		[Address(RVA = "0xF749BC", Offset = "0xF749BC", VA = "0xF749BC", Slot = "9")]
		public bool SaveGame(int slotIndex, Serialisers serialisers)
		{
			return default(bool);
		}

		[Token(Token = "0x6001B87")]
		[Address(RVA = "0xF74EA0", Offset = "0xF74EA0", VA = "0xF74EA0", Slot = "10")]
		public bool LoadGame(int slotIndex, Deserialisers deserialisers)
		{
			return default(bool);
		}

		[Token(Token = "0x6001B88")]
		[Address(RVA = "0xF75378", Offset = "0xF75378", VA = "0xF75378", Slot = "11")]
		public bool IsFinished(out bool success)
		{
			return default(bool);
		}

		[Token(Token = "0x6001B89")]
		[Address(RVA = "0xF7539C", Offset = "0xF7539C", VA = "0xF7539C", Slot = "12")]
		public bool IsSaveSerializeFinished(out bool success)
		{
			return default(bool);
		}

		[Token(Token = "0x6001B8A")]
		[Address(RVA = "0xF753DC", Offset = "0xF753DC", VA = "0xF753DC", Slot = "18")]
		public void Request(OperationType operation)
		{
		}

		[Token(Token = "0x6001B8B")]
		[Address(RVA = "0xF754C8", Offset = "0xF754C8", VA = "0xF754C8", Slot = "19")]
		public OperationType GetPendingOperation()
		{
			return default(OperationType);
		}

		[Token(Token = "0x6001B8C")]
		[Address(RVA = "0xF754D0", Offset = "0xF754D0", VA = "0xF754D0", Slot = "20")]
		public void ClearPendingOperation()
		{
		}

		[Token(Token = "0x6001B8D")]
		private int CreateAndRegisterSegment<T>(out T segment) where T : ISerialiserSegment, new()
		{
			return default(int);
		}

		[Token(Token = "0x6001B8E")]
		[Address(RVA = "0xF754D8", Offset = "0xF754D8", VA = "0xF754D8", Slot = "21")]
		public bool ShouldShowSaveGameError()
		{
			return default(bool);
		}

		[Token(Token = "0x6001B8F")]
		[Address(RVA = "0xF754FC", Offset = "0xF754FC", VA = "0xF754FC", Slot = "22")]
		public SaveGameError GetCurrentSaveGameError()
		{
			return default(SaveGameError);
		}

		[Token(Token = "0x6001B90")]
		[Address(RVA = "0xF755CC", Offset = "0xF755CC", VA = "0xF755CC", Slot = "23")]
		public void ClearCurrentSaveGameError()
		{
		}

		[Token(Token = "0x6001B91")]
		[Address(RVA = "0xF73AB4", Offset = "0xF73AB4", VA = "0xF73AB4", Slot = "24")]
		public void ClearAllSaveGameErrors()
		{
		}

		[Token(Token = "0x6001B92")]
		[Address(RVA = "0xF75638", Offset = "0xF75638", VA = "0xF75638", Slot = "25")]
		public bool DeleteSlot(int slotIndex)
		{
			return default(bool);
		}
	}
}
namespace Services.Audio
{
	[Token(Token = "0x200049B")]
	public class AmbienceZone : MonoBehaviour, IAudioEmitter, IInitialisable, ISceneReferrable, ISerialisable, IDeserialisable, IPostDeserialiseNotified
	{
		[Token(Token = "0x200049C")]
		private struct ResumeData
		{
			[Token(Token = "0x40015C5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public bool hasData;

			[Token(Token = "0x40015C6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public IAudioManager.ResumeData audio;
		}

		[Token(Token = "0x200049D")]
		private static class Keys
		{
			[Token(Token = "0x40015C7")]
			public const string IsActive = "active";

			[Token(Token = "0x40015C8")]
			public const string AudioEvents = "audios";

			[Token(Token = "0x40015C9")]
			public const string AudioEventId = "id";

			[Token(Token = "0x40015CA")]
			public const string AudioEventData = "data";
		}

		[Token(Token = "0x40015BA")]
		private const string c_zoneEmitterGroupId = "ambience_zone";

		[Token(Token = "0x40015BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private EventReference[] _fmodEventReferences;

		[Token(Token = "0x40015BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Vector3 _center;

		[Token(Token = "0x40015BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		private Vector3 _size;

		[Token(Token = "0x40015BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private ResumeData[] _audioResumeDatas;

		[Token(Token = "0x40015BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool _wasActive;

		[Token(Token = "0x40015C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
		private bool _active;

		[Token(Token = "0x40015C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private Bounds _bounds;

		[Token(Token = "0x40015C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Transform _transform;

		[Token(Token = "0x40015C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private AudioHandle[] _handles;

		[Token(Token = "0x40015C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private string[] _handleSaveIds;

		[Token(Token = "0x17000373")]
		public Vector3 position
		{
			[Token(Token = "0x6001B94")]
			[Address(RVA = "0xF7571C", Offset = "0xF7571C", VA = "0xF7571C")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x17000374")]
		public new bool enabled
		{
			[Token(Token = "0x6001B95")]
			[Address(RVA = "0xF75738", Offset = "0xF75738", VA = "0xF75738", Slot = "4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000375")]
		public bool active
		{
			[Token(Token = "0x6001B96")]
			[Address(RVA = "0xF75740", Offset = "0xF75740", VA = "0xF75740", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000376")]
		public string typeId
		{
			[Token(Token = "0x6001B9D")]
			[Address(RVA = "0xF75ED4", Offset = "0xF75ED4", VA = "0xF75ED4", Slot = "12")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001B97")]
		[Address(RVA = "0xF75748", Offset = "0xF75748", VA = "0xF75748", Slot = "6")]
		public bool IsInRange(Vector3 position)
		{
			return default(bool);
		}

		[Token(Token = "0x6001B98")]
		[Address(RVA = "0xF75754", Offset = "0xF75754", VA = "0xF75754", Slot = "7")]
		public void Activate()
		{
		}

		[Token(Token = "0x6001B99")]
		[Address(RVA = "0xF758EC", Offset = "0xF758EC", VA = "0xF758EC", Slot = "8")]
		public void Deactivate()
		{
		}

		[Token(Token = "0x6001B9A")]
		[Address(RVA = "0xF75A70", Offset = "0xF75A70", VA = "0xF75A70")]
		private void Start()
		{
		}

		[Token(Token = "0x6001B9B")]
		[Address(RVA = "0xF75C54", Offset = "0xF75C54", VA = "0xF75C54", Slot = "9")]
		public bool Initialise()
		{
			return default(bool);
		}

		[Token(Token = "0x6001B9C")]
		[Address(RVA = "0xF75D24", Offset = "0xF75D24", VA = "0xF75D24")]
		private void ResumeAudio()
		{
		}

		[Token(Token = "0x6001B9E")]
		[Address(RVA = "0xF75F14", Offset = "0xF75F14", VA = "0xF75F14", Slot = "11")]
		public bool Serialise(FlexBufferBuilder builder, ISceneObjectReferenceSerialiser objectSerialiser)
		{
			return default(bool);
		}

		[Token(Token = "0x6001B9F")]
		[Address(RVA = "0xF761C0", Offset = "0xF761C0", VA = "0xF761C0", Slot = "13")]
		public bool Deserialise(FlexBuffer.Map root, ISceneObjectReferenceDeserialiser objectDeserialiser)
		{
			return default(bool);
		}

		[Token(Token = "0x6001BA0")]
		[Address(RVA = "0xF76650", Offset = "0xF76650", VA = "0xF76650", Slot = "14")]
		public void OnPostDeserialise()
		{
		}

		[Token(Token = "0x6001BA1")]
		[Address(RVA = "0xF76654", Offset = "0xF76654", VA = "0xF76654")]
		public AmbienceZone()
		{
		}
	}
	[Token(Token = "0x200049E")]
	public interface IAudioEmitter
	{
		[Token(Token = "0x17000377")]
		bool enabled
		{
			[Token(Token = "0x6001BA2")]
			get;
		}

		[Token(Token = "0x17000378")]
		bool active
		{
			[Token(Token = "0x6001BA3")]
			get;
		}

		[Token(Token = "0x6001BA4")]
		bool IsInRange(Vector3 position);

		[Token(Token = "0x6001BA5")]
		void Activate();

		[Token(Token = "0x6001BA6")]
		void Deactivate();
	}
	[Token(Token = "0x200049F")]
	[RequireComponent(typeof(Occludee))]
	public class AudioEmitter : MonoBehaviour, IAudioEmitter, IInitialisable
	{
		[Token(Token = "0x40015CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		protected EventReference _fmodEventReference;

		[Token(Token = "0x40015CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		protected float _radius;

		[Token(Token = "0x40015CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		protected bool _active;

		[Token(Token = "0x40015CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		protected float _sqrRadius;

		[Token(Token = "0x40015CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		protected Transform _transform;

		[Token(Token = "0x40015D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		protected AudioHandle _handle;

		[Token(Token = "0x40015D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		protected Occludee occludee;

		[Token(Token = "0x17000379")]
		public Vector3 position
		{
			[Token(Token = "0x6001BA7")]
			[Address(RVA = "0xF766E8", Offset = "0xF766E8", VA = "0xF766E8")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x1700037A")]
		public new virtual bool enabled
		{
			[Token(Token = "0x6001BA8")]
			[Address(RVA = "0xF76704", Offset = "0xF76704", VA = "0xF76704", Slot = "10")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700037B")]
		public bool active
		{
			[Token(Token = "0x6001BA9")]
			[Address(RVA = "0xF76744", Offset = "0xF76744", VA = "0xF76744", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x14000032")]
		public event Action onActivatedCallback
		{
			[Token(Token = "0x6001BAA")]
			[Address(RVA = "0xF7674C", Offset = "0xF7674C", VA = "0xF7674C")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6001BAB")]
			[Address(RVA = "0xF767E8", Offset = "0xF767E8", VA = "0xF767E8")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x6001BAC")]
		[Address(RVA = "0xF76884", Offset = "0xF76884", VA = "0xF76884", Slot = "6")]
		public bool IsInRange(Vector3 position)
		{
			return default(bool);
		}

		[Token(Token = "0x6001BAD")]
		[Address(RVA = "0xF768F0", Offset = "0xF768F0", VA = "0xF768F0", Slot = "11")]
		public virtual void Activate()
		{
		}

		[Token(Token = "0x6001BAE")]
		[Address(RVA = "0xF76A6C", Offset = "0xF76A6C", VA = "0xF76A6C", Slot = "12")]
		public virtual void Deactivate()
		{
		}

		[Token(Token = "0x6001BAF")]
		[Address(RVA = "0xF76B6C", Offset = "0xF76B6C", VA = "0xF76B6C", Slot = "13")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x6001BB0")]
		[Address(RVA = "0xF76BE4", Offset = "0xF76BE4", VA = "0xF76BE4", Slot = "14")]
		public virtual bool Initialise()
		{
			return default(bool);
		}

		[Token(Token = "0x6001BB1")]
		[Address(RVA = "0xF76CC4", Offset = "0xF76CC4", VA = "0xF76CC4")]
		public void GetParamDescriptionForName(string paramName, out PARAMETER_DESCRIPTION paramDescription)
		{
		}

		[Token(Token = "0x6001BB2")]
		[Address(RVA = "0xF76D94", Offset = "0xF76D94", VA = "0xF76D94")]
		public void SetParameter(in PARAMETER_DESCRIPTION paramDescription, float value)
		{
		}

		[Token(Token = "0x6001BB3")]
		[Address(RVA = "0xF76E98", Offset = "0xF76E98", VA = "0xF76E98")]
		public AudioEmitter()
		{
		}
	}
	[Token(Token = "0x20004A0")]
	public interface IAudioEmitterService
	{
		[Token(Token = "0x6001BB4")]
		bool RegisterAudioEmitter(IAudioEmitter emitter);

		[Token(Token = "0x6001BB5")]
		bool RegisterAudioEmitterExclusive(IAudioEmitter emitter, string groupId);
	}
	[Token(Token = "0x20004A1")]
	public class AudioEmitterService : MonoBehaviour, IService, IAudioEmitterService
	{
		[Token(Token = "0x20004A2")]
		private class EmitterGroup
		{
			[Token(Token = "0x40015DB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public List<IAudioEmitter> emitters;

			[Token(Token = "0x40015DC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public int activeEmitterIndex;

			[Token(Token = "0x6001BBD")]
			[Address(RVA = "0xF77598", Offset = "0xF77598", VA = "0xF77598")]
			public EmitterGroup()
			{
			}
		}

		[Token(Token = "0x40015D3")]
		private const int c_audioEmittersListInitialSize = 64;

		[Token(Token = "0x40015D4")]
		private const int c_audioEmitterGroupsListInitialSize = 4;

		[Token(Token = "0x40015D5")]
		private const int c_maxAudioEmitters = 256;

		[Token(Token = "0x40015D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private List<IAudioEmitter> _audioEmitters;

		[Token(Token = "0x40015D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Dictionary<string, EmitterGroup> _audioEmitterGroups;

		[Token(Token = "0x40015D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private List<string> _groupdIds;

		[Token(Token = "0x40015D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool _anyActive;

		[Token(Token = "0x40015DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private ProfilerMarker _marker;

		[Token(Token = "0x6001BB6")]
		[Address(RVA = "0xF76EA8", Offset = "0xF76EA8", VA = "0xF76EA8")]
		public AudioEmitterService()
		{
		}

		[Token(Token = "0x6001BB7")]
		[Address(RVA = "0xF68A40", Offset = "0xF68A40", VA = "0xF68A40", Slot = "4")]
		public void OnStartUp()
		{
		}

		[Token(Token = "0x6001BB8")]
		[Address(RVA = "0xF68BE0", Offset = "0xF68BE0", VA = "0xF68BE0", Slot = "5")]
		public void OnCleanUp()
		{
		}

		[Token(Token = "0x6001BB9")]
		[Address(RVA = "0xF7707C", Offset = "0xF7707C", VA = "0xF7707C")]
		private void StopAllEmitters()
		{
		}

		[Token(Token = "0x6001BBA")]
		[Address(RVA = "0xF68F60", Offset = "0xF68F60", VA = "0xF68F60", Slot = "6")]
		public void OnUpdate(float deltaTime)
		{
		}

		[Token(Token = "0x6001BBB")]
		[Address(RVA = "0xF772AC", Offset = "0xF772AC", VA = "0xF772AC", Slot = "7")]
		public bool RegisterAudioEmitter(IAudioEmitter emitter)
		{
			return default(bool);
		}

		[Token(Token = "0x6001BBC")]
		[Address(RVA = "0xF77360", Offset = "0xF77360", VA = "0xF77360", Slot = "8")]
		public bool RegisterAudioEmitterExclusive(IAudioEmitter emitter, string groupId)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20004A3")]
	public class AudioOneShot : MonoBehaviour
	{
		[Token(Token = "0x40015DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		protected EventReference _fmodEventReference;

		[Token(Token = "0x40015DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameObject _Object;

		[Token(Token = "0x40015DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool playOnAwake;

		[Token(Token = "0x6001BBE")]
		[Address(RVA = "0xF775A0", Offset = "0xF775A0", VA = "0xF775A0")]
		private void Start()
		{
		}

		[Token(Token = "0x6001BBF")]
		[Address(RVA = "0xF777A0", Offset = "0xF777A0", VA = "0xF777A0")]
		public void Play()
		{
		}

		[Token(Token = "0x6001BC0")]
		[Address(RVA = "0xF77980", Offset = "0xF77980", VA = "0xF77980")]
		public AudioOneShot()
		{
		}
	}
	[Token(Token = "0x20004A4")]
	public class OccludableAudioEmitter : AudioEmitter, IUpdatable
	{
		[Token(Token = "0x40015E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private string _occlusionParameter;

		[Token(Token = "0x40015E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private PARAMETER_DESCRIPTION _occlusionParameterDescription;

		[Token(Token = "0x40015E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private float _occlusionValue;

		[Token(Token = "0x40015E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static List<float> s_tempPortalValues;

		[Token(Token = "0x40015E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static List<float> s_tempPortalDoorValues;

		[Token(Token = "0x40015E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static ProfilerMarker s_occlusionDistanceMarker;

		[Token(Token = "0x1700037C")]
		public override bool enabled
		{
			[Token(Token = "0x6001BC1")]
			[Address(RVA = "0xF77988", Offset = "0xF77988", VA = "0xF77988", Slot = "10")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001BC2")]
		[Address(RVA = "0xF779DC", Offset = "0xF779DC", VA = "0xF779DC")]
		static OccludableAudioEmitter()
		{
		}

		[Token(Token = "0x6001BC3")]
		[Address(RVA = "0xF77AE4", Offset = "0xF77AE4", VA = "0xF77AE4", Slot = "14")]
		public override bool Initialise()
		{
			return default(bool);
		}

		[Token(Token = "0x6001BC4")]
		[Address(RVA = "0xF77BA0", Offset = "0xF77BA0", VA = "0xF77BA0", Slot = "11")]
		public override void Activate()
		{
		}

		[Token(Token = "0x6001BC5")]
		[Address(RVA = "0xF77C98", Offset = "0xF77C98", VA = "0xF77C98", Slot = "12")]
		public override void Deactivate()
		{
		}

		[Token(Token = "0x6001BC6")]
		[Address(RVA = "0xF77D98", Offset = "0xF77D98", VA = "0xF77D98", Slot = "15")]
		public void OnUpdate(float dt)
		{
		}

		[Token(Token = "0x6001BC7")]
		[Address(RVA = "0xF78BC8", Offset = "0xF78BC8", VA = "0xF78BC8")]
		public OccludableAudioEmitter()
		{
		}
	}
}
namespace Ludiq.Generated.PropertyProviders
{
	[Token(Token = "0x20004A5")]
	[SerializedPropertyProvider(typeof(EventReference))]
	public class PropertyProvider_FMODUnity_EventReference : SerializedPropertyProvider<EventReference>
	{
		[Token(Token = "0x6001BC8")]
		[Address(RVA = "0x1000A88", Offset = "0x1000A88", VA = "0x1000A88")]
		public PropertyProvider_FMODUnity_EventReference()
		{
		}
	}
	[Token(Token = "0x20004A6")]
	[SerializedPropertyProvider(typeof(FMODEventMixerBehaviour))]
	public class PropertyProvider_FMODUnity_FMODEventMixerBehaviour : SerializedPropertyProvider<FMODEventMixerBehaviour>
	{
		[Token(Token = "0x6001BC9")]
		[Address(RVA = "0x1000AD0", Offset = "0x1000AD0", VA = "0x1000AD0")]
		public PropertyProvider_FMODUnity_FMODEventMixerBehaviour()
		{
		}
	}
	[Token(Token = "0x20004A7")]
	[SerializedPropertyProvider(typeof(DialogueChoice.Choice))]
	public class PropertyProvider_NarrativeEngine_Dialog_DialogueChoice_Choice : SerializedPropertyProvider<DialogueChoice.Choice>
	{
		[Token(Token = "0x6001BCA")]
		[Address(RVA = "0x1000B18", Offset = "0x1000B18", VA = "0x1000B18")]
		public PropertyProvider_NarrativeEngine_Dialog_DialogueChoice_Choice()
		{
		}
	}
	[Token(Token = "0x20004A8")]
	[SerializedPropertyProvider(typeof(DialogueChoice.Prompt))]
	public class PropertyProvider_NarrativeEngine_Dialog_DialogueChoice_Prompt : SerializedPropertyProvider<DialogueChoice.Prompt>
	{
		[Token(Token = "0x6001BCB")]
		[Address(RVA = "0x1000B60", Offset = "0x1000B60", VA = "0x1000B60")]
		public PropertyProvider_NarrativeEngine_Dialog_DialogueChoice_Prompt()
		{
		}
	}
	[Token(Token = "0x20004A9")]
	[SerializedPropertyProvider(typeof(DialogueChoice.SilentChoice))]
	public class PropertyProvider_NarrativeEngine_Dialog_DialogueChoice_SilentChoice : SerializedPropertyProvider<DialogueChoice.SilentChoice>
	{
		[Token(Token = "0x6001BCC")]
		[Address(RVA = "0x1000BA8", Offset = "0x1000BA8", VA = "0x1000BA8")]
		public PropertyProvider_NarrativeEngine_Dialog_DialogueChoice_SilentChoice()
		{
		}
	}
	[Token(Token = "0x20004AA")]
	[SerializedPropertyProvider(typeof(Line))]
	public class PropertyProvider_NarrativeEngine_Dialog_Line : SerializedPropertyProvider<Line>
	{
		[Token(Token = "0x6001BCD")]
		[Address(RVA = "0x1000BF0", Offset = "0x1000BF0", VA = "0x1000BF0")]
		public PropertyProvider_NarrativeEngine_Dialog_Line()
		{
		}
	}
	[Token(Token = "0x20004AB")]
	[SerializedPropertyProvider(typeof(FactRequirement))]
	public class PropertyProvider_NarrativeEngine_FactRequirement : SerializedPropertyProvider<FactRequirement>
	{
		[Token(Token = "0x6001BCE")]
		[Address(RVA = "0x1000C38", Offset = "0x1000C38", VA = "0x1000C38")]
		public PropertyProvider_NarrativeEngine_FactRequirement()
		{
		}
	}
	[Token(Token = "0x20004AC")]
	[SerializedPropertyProvider(typeof(TransitionConfig))]
	public class PropertyProvider_Services_TransitionConfig : SerializedPropertyProvider<TransitionConfig>
	{
		[Token(Token = "0x6001BCF")]
		[Address(RVA = "0x1000C80", Offset = "0x1000C80", VA = "0x1000C80")]
		public PropertyProvider_Services_TransitionConfig()
		{
		}
	}
	[Token(Token = "0x20004AD")]
	[SerializedPropertyProvider(typeof(HorizontalAlignmentOptions))]
	public class PropertyProvider_TMPro_HorizontalAlignmentOptions : SerializedPropertyProvider<HorizontalAlignmentOptions>
	{
		[Token(Token = "0x6001BD0")]
		[Address(RVA = "0x1000CC8", Offset = "0x1000CC8", VA = "0x1000CC8")]
		public PropertyProvider_TMPro_HorizontalAlignmentOptions()
		{
		}
	}
	[Token(Token = "0x20004AE")]
	[SerializedPropertyProvider(typeof(TextAlignmentOptions))]
	public class PropertyProvider_TMPro_TextAlignmentOptions : SerializedPropertyProvider<TextAlignmentOptions>
	{
		[Token(Token = "0x6001BD1")]
		[Address(RVA = "0x1000D10", Offset = "0x1000D10", VA = "0x1000D10")]
		public PropertyProvider_TMPro_TextAlignmentOptions()
		{
		}
	}
	[Token(Token = "0x20004AF")]
	[SerializedPropertyProvider(typeof(TMP_Character))]
	public class PropertyProvider_TMPro_TMP_Character : SerializedPropertyProvider<TMP_Character>
	{
		[Token(Token = "0x6001BD2")]
		[Address(RVA = "0x1000D58", Offset = "0x1000D58", VA = "0x1000D58")]
		public PropertyProvider_TMPro_TMP_Character()
		{
		}
	}
	[Token(Token = "0x20004B0")]
	[SerializedPropertyProvider(typeof(TMP_Dropdown.DropdownEvent))]
	public class PropertyProvider_TMPro_TMP_Dropdown_DropdownEvent : SerializedPropertyProvider<TMP_Dropdown.DropdownEvent>
	{
		[Token(Token = "0x6001BD3")]
		[Address(RVA = "0x1000DA0", Offset = "0x1000DA0", VA = "0x1000DA0")]
		public PropertyProvider_TMPro_TMP_Dropdown_DropdownEvent()
		{
		}
	}
	[Token(Token = "0x20004B1")]
	[SerializedPropertyProvider(typeof(TMP_Dropdown.OptionDataList))]
	public class PropertyProvider_TMPro_TMP_Dropdown_OptionDataList : SerializedPropertyProvider<TMP_Dropdown.OptionDataList>
	{
		[Token(Token = "0x6001BD4")]
		[Address(RVA = "0x1000DE8", Offset = "0x1000DE8", VA = "0x1000DE8")]
		public PropertyProvider_TMPro_TMP_Dropdown_OptionDataList()
		{
		}
	}
	[Token(Token = "0x20004B2")]
	[SerializedPropertyProvider(typeof(TMP_FontWeightPair))]
	public class PropertyProvider_TMPro_TMP_FontWeightPair : SerializedPropertyProvider<TMP_FontWeightPair>
	{
		[Token(Token = "0x6001BD5")]
		[Address(RVA = "0x1000E30", Offset = "0x1000E30", VA = "0x1000E30")]
		public PropertyProvider_TMPro_TMP_FontWeightPair()
		{
		}
	}
	[Token(Token = "0x20004B3")]
	[SerializedPropertyProvider(typeof(TMP_GlyphPairAdjustmentRecord))]
	public class PropertyProvider_TMPro_TMP_GlyphPairAdjustmentRecord : SerializedPropertyProvider<TMP_GlyphPairAdjustmentRecord>
	{
		[Token(Token = "0x6001BD6")]
		[Address(RVA = "0x1000E78", Offset = "0x1000E78", VA = "0x1000E78")]
		public PropertyProvider_TMPro_TMP_GlyphPairAdjustmentRecord()
		{
		}
	}
	[Token(Token = "0x20004B4")]
	[SerializedPropertyProvider(typeof(TMP_InputField.OnChangeEvent))]
	public class PropertyProvider_TMPro_TMP_InputField_OnChangeEvent : SerializedPropertyProvider<TMP_InputField.OnChangeEvent>
	{
		[Token(Token = "0x6001BD7")]
		[Address(RVA = "0x1000EC0", Offset = "0x1000EC0", VA = "0x1000EC0")]
		public PropertyProvider_TMPro_TMP_InputField_OnChangeEvent()
		{
		}
	}
	[Token(Token = "0x20004B5")]
	[SerializedPropertyProvider(typeof(TMP_InputField.SelectionEvent))]
	public class PropertyProvider_TMPro_TMP_InputField_SelectionEvent : SerializedPropertyProvider<TMP_InputField.SelectionEvent>
	{
		[Token(Token = "0x6001BD8")]
		[Address(RVA = "0x1000F08", Offset = "0x1000F08", VA = "0x1000F08")]
		public PropertyProvider_TMPro_TMP_InputField_SelectionEvent()
		{
		}
	}
	[Token(Token = "0x20004B6")]
	[SerializedPropertyProvider(typeof(TMP_InputField.SubmitEvent))]
	public class PropertyProvider_TMPro_TMP_InputField_SubmitEvent : SerializedPropertyProvider<TMP_InputField.SubmitEvent>
	{
		[Token(Token = "0x6001BD9")]
		[Address(RVA = "0x1000F50", Offset = "0x1000F50", VA = "0x1000F50")]
		public PropertyProvider_TMPro_TMP_InputField_SubmitEvent()
		{
		}
	}
	[Token(Token = "0x20004B7")]
	[SerializedPropertyProvider(typeof(TMP_InputField.TextSelectionEvent))]
	public class PropertyProvider_TMPro_TMP_InputField_TextSelectionEvent : SerializedPropertyProvider<TMP_InputField.TextSelectionEvent>
	{
		[Token(Token = "0x6001BDA")]
		[Address(RVA = "0x1000F98", Offset = "0x1000F98", VA = "0x1000F98")]
		public PropertyProvider_TMPro_TMP_InputField_TextSelectionEvent()
		{
		}
	}
	[Token(Token = "0x20004B8")]
	[SerializedPropertyProvider(typeof(TMP_InputField.TouchScreenKeyboardEvent))]
	public class PropertyProvider_TMPro_TMP_InputField_TouchScreenKeyboardEvent : SerializedPropertyProvider<TMP_InputField.TouchScreenKeyboardEvent>
	{
		[Token(Token = "0x6001BDB")]
		[Address(RVA = "0x1000FE0", Offset = "0x1000FE0", VA = "0x1000FE0")]
		public PropertyProvider_TMPro_TMP_InputField_TouchScreenKeyboardEvent()
		{
		}
	}
	[Token(Token = "0x20004B9")]
	[SerializedPropertyProvider(typeof(TMP_SpriteCharacter))]
	public class PropertyProvider_TMPro_TMP_SpriteCharacter : SerializedPropertyProvider<TMP_SpriteCharacter>
	{
		[Token(Token = "0x6001BDC")]
		[Address(RVA = "0x1001028", Offset = "0x1001028", VA = "0x1001028")]
		public PropertyProvider_TMPro_TMP_SpriteCharacter()
		{
		}
	}
	[Token(Token = "0x20004BA")]
	[SerializedPropertyProvider(typeof(TMP_SpriteGlyph))]
	public class PropertyProvider_TMPro_TMP_SpriteGlyph : SerializedPropertyProvider<TMP_SpriteGlyph>
	{
		[Token(Token = "0x6001BDD")]
		[Address(RVA = "0x1001070", Offset = "0x1001070", VA = "0x1001070")]
		public PropertyProvider_TMPro_TMP_SpriteGlyph()
		{
		}
	}
	[Token(Token = "0x20004BB")]
	[SerializedPropertyProvider(typeof(TMP_Style))]
	public class PropertyProvider_TMPro_TMP_Style : SerializedPropertyProvider<TMP_Style>
	{
		[Token(Token = "0x6001BDE")]
		[Address(RVA = "0x10010B8", Offset = "0x10010B8", VA = "0x10010B8")]
		public PropertyProvider_TMPro_TMP_Style()
		{
		}
	}
	[Token(Token = "0x20004BC")]
	[SerializedPropertyProvider(typeof(VerticalAlignmentOptions))]
	public class PropertyProvider_TMPro_VerticalAlignmentOptions : SerializedPropertyProvider<VerticalAlignmentOptions>
	{
		[Token(Token = "0x6001BDF")]
		[Address(RVA = "0x1001100", Offset = "0x1001100", VA = "0x1001100")]
		public PropertyProvider_TMPro_VerticalAlignmentOptions()
		{
		}
	}
	[Token(Token = "0x20004BD")]
	[SerializedPropertyProvider(typeof(AssetLabelReference))]
	public class PropertyProvider_UnityEngine_AddressableAssets_AssetLabelReference : SerializedPropertyProvider<AssetLabelReference>
	{
		[Token(Token = "0x6001BE0")]
		[Address(RVA = "0x1001148", Offset = "0x1001148", VA = "0x1001148")]
		public PropertyProvider_UnityEngine_AddressableAssets_AssetLabelReference()
		{
		}
	}
	[Token(Token = "0x20004BE")]
	[SerializedPropertyProvider(typeof(AssetReference))]
	public class PropertyProvider_UnityEngine_AddressableAssets_AssetReference : SerializedPropertyProvider<AssetReference>
	{
		[Token(Token = "0x6001BE1")]
		[Address(RVA = "0x1001190", Offset = "0x1001190", VA = "0x1001190")]
		public PropertyProvider_UnityEngine_AddressableAssets_AssetReference()
		{
		}
	}
	[Token(Token = "0x20004BF")]
	[SerializedPropertyProvider(typeof(AssetReferenceAtlasedSprite))]
	public class PropertyProvider_UnityEngine_AddressableAssets_AssetReferenceAtlasedSprite : SerializedPropertyProvider<AssetReferenceAtlasedSprite>
	{
		[Token(Token = "0x6001BE2")]
		[Address(RVA = "0x10011D8", Offset = "0x10011D8", VA = "0x10011D8")]
		public PropertyProvider_UnityEngine_AddressableAssets_AssetReferenceAtlasedSprite()
		{
		}
	}
	[Token(Token = "0x20004C0")]
	[SerializedPropertyProvider(typeof(AssetReferenceGameObject))]
	public class PropertyProvider_UnityEngine_AddressableAssets_AssetReferenceGameObject : SerializedPropertyProvider<AssetReferenceGameObject>
	{
		[Token(Token = "0x6001BE3")]
		[Address(RVA = "0x1001220", Offset = "0x1001220", VA = "0x1001220")]
		public PropertyProvider_UnityEngine_AddressableAssets_AssetReferenceGameObject()
		{
		}
	}
	[Token(Token = "0x20004C1")]
	[SerializedPropertyProvider(typeof(AssetReferenceSprite))]
	public class PropertyProvider_UnityEngine_AddressableAssets_AssetReferenceSprite : SerializedPropertyProvider<AssetReferenceSprite>
	{
		[Token(Token = "0x6001BE4")]
		[Address(RVA = "0x1001268", Offset = "0x1001268", VA = "0x1001268")]
		public PropertyProvider_UnityEngine_AddressableAssets_AssetReferenceSprite()
		{
		}
	}
	[Token(Token = "0x20004C2")]
	[SerializedPropertyProvider(typeof(AssetReferenceTexture))]
	public class PropertyProvider_UnityEngine_AddressableAssets_AssetReferenceTexture : SerializedPropertyProvider<AssetReferenceTexture>
	{
		[Token(Token = "0x6001BE5")]
		[Address(RVA = "0x10012B0", Offset = "0x10012B0", VA = "0x10012B0")]
		public PropertyProvider_UnityEngine_AddressableAssets_AssetReferenceTexture()
		{
		}
	}
	[Token(Token = "0x20004C3")]
	[SerializedPropertyProvider(typeof(AssetReferenceTexture2D))]
	public class PropertyProvider_UnityEngine_AddressableAssets_AssetReferenceTexture2D : SerializedPropertyProvider<AssetReferenceTexture2D>
	{
		[Token(Token = "0x6001BE6")]
		[Address(RVA = "0x10012F8", Offset = "0x10012F8", VA = "0x10012F8")]
		public PropertyProvider_UnityEngine_AddressableAssets_AssetReferenceTexture2D()
		{
		}
	}
	[Token(Token = "0x20004C4")]
	[SerializedPropertyProvider(typeof(AssetReferenceTexture3D))]
	public class PropertyProvider_UnityEngine_AddressableAssets_AssetReferenceTexture3D : SerializedPropertyProvider<AssetReferenceTexture3D>
	{
		[Token(Token = "0x6001BE7")]
		[Address(RVA = "0x1001340", Offset = "0x1001340", VA = "0x1001340")]
		public PropertyProvider_UnityEngine_AddressableAssets_AssetReferenceTexture3D()
		{
		}
	}
	[Token(Token = "0x20004C5")]
	[SerializedPropertyProvider(typeof(CacheInitializationData))]
	public class PropertyProvider_UnityEngine_AddressableAssets_Initialization_CacheInitializationData : SerializedPropertyProvider<CacheInitializationData>
	{
		[Token(Token = "0x6001BE8")]
		[Address(RVA = "0x1001388", Offset = "0x1001388", VA = "0x1001388")]
		public PropertyProvider_UnityEngine_AddressableAssets_Initialization_CacheInitializationData()
		{
		}
	}
	[Token(Token = "0x20004C6")]
	[SerializedPropertyProvider(typeof(RigLayer))]
	public class PropertyProvider_UnityEngine_Animations_Rigging_RigLayer : SerializedPropertyProvider<RigLayer>
	{
		[Token(Token = "0x6001BE9")]
		[Address(RVA = "0x10013D0", Offset = "0x10013D0", VA = "0x10013D0")]
		public PropertyProvider_UnityEngine_Animations_Rigging_RigLayer()
		{
		}
	}
	[Token(Token = "0x20004C7")]
	[SerializedPropertyProvider(typeof(Vector3Bool))]
	public class PropertyProvider_UnityEngine_Animations_Rigging_Vector3Bool : SerializedPropertyProvider<Vector3Bool>
	{
		[Token(Token = "0x6001BEA")]
		[Address(RVA = "0x1001418", Offset = "0x1001418", VA = "0x1001418")]
		public PropertyProvider_UnityEngine_Animations_Rigging_Vector3Bool()
		{
		}
	}
	[Token(Token = "0x20004C8")]
	[SerializedPropertyProvider(typeof(WeightedTransform))]
	public class PropertyProvider_UnityEngine_Animations_Rigging_WeightedTransform : SerializedPropertyProvider<WeightedTransform>
	{
		[Token(Token = "0x6001BEB")]
		[Address(RVA = "0x1001460", Offset = "0x1001460", VA = "0x1001460")]
		public PropertyProvider_UnityEngine_Animations_Rigging_WeightedTransform()
		{
		}
	}
	[Token(Token = "0x20004C9")]
	[SerializedPropertyProvider(typeof(WeightedTransformArray))]
	public class PropertyProvider_UnityEngine_Animations_Rigging_WeightedTransformArray : SerializedPropertyProvider<WeightedTransformArray>
	{
		[Token(Token = "0x6001BEC")]
		[Address(RVA = "0x10014A8", Offset = "0x10014A8", VA = "0x10014A8")]
		public PropertyProvider_UnityEngine_Animations_Rigging_WeightedTransformArray()
		{
		}
	}
	[Token(Token = "0x20004CA")]
	[SerializedPropertyProvider(typeof(EventTrigger.TriggerEvent))]
	public class PropertyProvider_UnityEngine_EventSystems_EventTrigger_TriggerEvent : SerializedPropertyProvider<EventTrigger.TriggerEvent>
	{
		[Token(Token = "0x6001BED")]
		[Address(RVA = "0x10014F0", Offset = "0x10014F0", VA = "0x10014F0")]
		public PropertyProvider_UnityEngine_EventSystems_EventTrigger_TriggerEvent()
		{
		}
	}
	[Token(Token = "0x20004CB")]
	[SerializedPropertyProvider(typeof(UnityEvent))]
	public class PropertyProvider_UnityEngine_Events_UnityEvent : SerializedPropertyProvider<UnityEvent>
	{
		[Token(Token = "0x6001BEE")]
		[Address(RVA = "0x1001538", Offset = "0x1001538", VA = "0x1001538")]
		public PropertyProvider_UnityEngine_Events_UnityEvent()
		{
		}
	}
	[Token(Token = "0x20004CC")]
	[SerializedPropertyProvider(typeof(UnityEventBase))]
	public class PropertyProvider_UnityEngine_Events_UnityEventBase : SerializedPropertyProvider<UnityEventBase>
	{
		[Token(Token = "0x6001BEF")]
		[Address(RVA = "0x1001580", Offset = "0x1001580", VA = "0x1001580")]
		public PropertyProvider_UnityEngine_Events_UnityEventBase()
		{
		}
	}
	[Token(Token = "0x20004CD")]
	[SerializedPropertyProvider(typeof(RenderObjects.RenderObjectsSettings))]
	public class PropertyProvider_UnityEngine_Experimental_Rendering_Universal_RenderObjects_RenderObjectsSettings : SerializedPropertyProvider<RenderObjects.RenderObjectsSettings>
	{
		[Token(Token = "0x6001BF0")]
		[Address(RVA = "0x10015C8", Offset = "0x10015C8", VA = "0x10015C8")]
		public PropertyProvider_UnityEngine_Experimental_Rendering_Universal_RenderObjects_RenderObjectsSettings()
		{
		}
	}
	[Token(Token = "0x20004CE")]
	[SerializedPropertyProvider(typeof(InputAction))]
	public class PropertyProvider_UnityEngine_InputSystem_InputAction : SerializedPropertyProvider<InputAction>
	{
		[Token(Token = "0x6001BF1")]
		[Address(RVA = "0x1001610", Offset = "0x1001610", VA = "0x1001610")]
		public PropertyProvider_UnityEngine_InputSystem_InputAction()
		{
		}
	}
	[Token(Token = "0x20004CF")]
	[SerializedPropertyProvider(typeof(InputActionMap))]
	public class PropertyProvider_UnityEngine_InputSystem_InputActionMap : SerializedPropertyProvider<InputActionMap>
	{
		[Token(Token = "0x6001BF2")]
		[Address(RVA = "0x1001658", Offset = "0x1001658", VA = "0x1001658")]
		public PropertyProvider_UnityEngine_InputSystem_InputActionMap()
		{
		}
	}
	[Token(Token = "0x20004D0")]
	[SerializedPropertyProvider(typeof(InputActionProperty))]
	public class PropertyProvider_UnityEngine_InputSystem_InputActionProperty : SerializedPropertyProvider<InputActionProperty>
	{
		[Token(Token = "0x6001BF3")]
		[Address(RVA = "0x10016A0", Offset = "0x10016A0", VA = "0x10016A0")]
		public PropertyProvider_UnityEngine_InputSystem_InputActionProperty()
		{
		}
	}
	[Token(Token = "0x20004D1")]
	[SerializedPropertyProvider(typeof(PlayerInputManager.PlayerJoinedEvent))]
	public class PropertyProvider_UnityEngine_InputSystem_PlayerInputManager_PlayerJoinedEvent : SerializedPropertyProvider<PlayerInputManager.PlayerJoinedEvent>
	{
		[Token(Token = "0x6001BF4")]
		[Address(RVA = "0x10016E8", Offset = "0x10016E8", VA = "0x10016E8")]
		public PropertyProvider_UnityEngine_InputSystem_PlayerInputManager_PlayerJoinedEvent()
		{
		}
	}
	[Token(Token = "0x20004D2")]
	[SerializedPropertyProvider(typeof(PlayerInputManager.PlayerLeftEvent))]
	public class PropertyProvider_UnityEngine_InputSystem_PlayerInputManager_PlayerLeftEvent : SerializedPropertyProvider<PlayerInputManager.PlayerLeftEvent>
	{
		[Token(Token = "0x6001BF5")]
		[Address(RVA = "0x1001730", Offset = "0x1001730", VA = "0x1001730")]
		public PropertyProvider_UnityEngine_InputSystem_PlayerInputManager_PlayerLeftEvent()
		{
		}
	}
	[Token(Token = "0x20004D3")]
	[SerializedPropertyProvider(typeof(PlayerInput.ActionEvent))]
	public class PropertyProvider_UnityEngine_InputSystem_PlayerInput_ActionEvent : SerializedPropertyProvider<PlayerInput.ActionEvent>
	{
		[Token(Token = "0x6001BF6")]
		[Address(RVA = "0x1001778", Offset = "0x1001778", VA = "0x1001778")]
		public PropertyProvider_UnityEngine_InputSystem_PlayerInput_ActionEvent()
		{
		}
	}
	[Token(Token = "0x20004D4")]
	[SerializedPropertyProvider(typeof(PlayerInput.ControlsChangedEvent))]
	public class PropertyProvider_UnityEngine_InputSystem_PlayerInput_ControlsChangedEvent : SerializedPropertyProvider<PlayerInput.ControlsChangedEvent>
	{
		[Token(Token = "0x6001BF7")]
		[Address(RVA = "0x10017C0", Offset = "0x10017C0", VA = "0x10017C0")]
		public PropertyProvider_UnityEngine_InputSystem_PlayerInput_ControlsChangedEvent()
		{
		}
	}
	[Token(Token = "0x20004D5")]
	[SerializedPropertyProvider(typeof(PlayerInput.DeviceLostEvent))]
	public class PropertyProvider_UnityEngine_InputSystem_PlayerInput_DeviceLostEvent : SerializedPropertyProvider<PlayerInput.DeviceLostEvent>
	{
		[Token(Token = "0x6001BF8")]
		[Address(RVA = "0x1001808", Offset = "0x1001808", VA = "0x1001808")]
		public PropertyProvider_UnityEngine_InputSystem_PlayerInput_DeviceLostEvent()
		{
		}
	}
	[Token(Token = "0x20004D6")]
	[SerializedPropertyProvider(typeof(PlayerInput.DeviceRegainedEvent))]
	public class PropertyProvider_UnityEngine_InputSystem_PlayerInput_DeviceRegainedEvent : SerializedPropertyProvider<PlayerInput.DeviceRegainedEvent>
	{
		[Token(Token = "0x6001BF9")]
		[Address(RVA = "0x1001850", Offset = "0x1001850", VA = "0x1001850")]
		public PropertyProvider_UnityEngine_InputSystem_PlayerInput_DeviceRegainedEvent()
		{
		}
	}
	[Token(Token = "0x20004D7")]
	[SerializedPropertyProvider(typeof(UnityEventAudioClip))]
	public class PropertyProvider_UnityEngine_Localization_Events_UnityEventAudioClip : SerializedPropertyProvider<UnityEventAudioClip>
	{
		[Token(Token = "0x6001BFA")]
		[Address(RVA = "0x1001898", Offset = "0x1001898", VA = "0x1001898")]
		public PropertyProvider_UnityEngine_Localization_Events_UnityEventAudioClip()
		{
		}
	}
	[Token(Token = "0x20004D8")]
	[SerializedPropertyProvider(typeof(UnityEventGameObject))]
	public class PropertyProvider_UnityEngine_Localization_Events_UnityEventGameObject : SerializedPropertyProvider<UnityEventGameObject>
	{
		[Token(Token = "0x6001BFB")]
		[Address(RVA = "0x10018E0", Offset = "0x10018E0", VA = "0x10018E0")]
		public PropertyProvider_UnityEngine_Localization_Events_UnityEventGameObject()
		{
		}
	}
	[Token(Token = "0x20004D9")]
	[SerializedPropertyProvider(typeof(UnityEventSprite))]
	public class PropertyProvider_UnityEngine_Localization_Events_UnityEventSprite : SerializedPropertyProvider<UnityEventSprite>
	{
		[Token(Token = "0x6001BFC")]
		[Address(RVA = "0x1001928", Offset = "0x1001928", VA = "0x1001928")]
		public PropertyProvider_UnityEngine_Localization_Events_UnityEventSprite()
		{
		}
	}
	[Token(Token = "0x20004DA")]
	[SerializedPropertyProvider(typeof(UnityEventString))]
	public class PropertyProvider_UnityEngine_Localization_Events_UnityEventString : SerializedPropertyProvider<UnityEventString>
	{
		[Token(Token = "0x6001BFD")]
		[Address(RVA = "0x1001970", Offset = "0x1001970", VA = "0x1001970")]
		public PropertyProvider_UnityEngine_Localization_Events_UnityEventString()
		{
		}
	}
	[Token(Token = "0x20004DB")]
	[SerializedPropertyProvider(typeof(UnityEventTexture))]
	public class PropertyProvider_UnityEngine_Localization_Events_UnityEventTexture : SerializedPropertyProvider<UnityEventTexture>
	{
		[Token(Token = "0x6001BFE")]
		[Address(RVA = "0x10019B8", Offset = "0x10019B8", VA = "0x10019B8")]
		public PropertyProvider_UnityEngine_Localization_Events_UnityEventTexture()
		{
		}
	}
	[Token(Token = "0x20004DC")]
	[SerializedPropertyProvider(typeof(LocaleIdentifier))]
	public class PropertyProvider_UnityEngine_Localization_LocaleIdentifier : SerializedPropertyProvider<LocaleIdentifier>
	{
		[Token(Token = "0x6001BFF")]
		[Address(RVA = "0x1001A00", Offset = "0x1001A00", VA = "0x1001A00")]
		public PropertyProvider_UnityEngine_Localization_LocaleIdentifier()
		{
		}
	}
	[Token(Token = "0x20004DD")]
	[SerializedPropertyProvider(typeof(LocalizedAssetTable))]
	public class PropertyProvider_UnityEngine_Localization_LocalizedAssetTable : SerializedPropertyProvider<LocalizedAssetTable>
	{
		[Token(Token = "0x6001C00")]
		[Address(RVA = "0x1001A48", Offset = "0x1001A48", VA = "0x1001A48")]
		public PropertyProvider_UnityEngine_Localization_LocalizedAssetTable()
		{
		}
	}
	[Token(Token = "0x20004DE")]
	[SerializedPropertyProvider(typeof(LocalizedString))]
	public class PropertyProvider_UnityEngine_Localization_LocalizedString : SerializedPropertyProvider<LocalizedString>
	{
		[Token(Token = "0x6001C01")]
		[Address(RVA = "0x1001A90", Offset = "0x1001A90", VA = "0x1001A90")]
		public PropertyProvider_UnityEngine_Localization_LocalizedString()
		{
		}
	}
	[Token(Token = "0x20004DF")]
	[SerializedPropertyProvider(typeof(LocalizedStringTable))]
	public class PropertyProvider_UnityEngine_Localization_LocalizedStringTable : SerializedPropertyProvider<LocalizedStringTable>
	{
		[Token(Token = "0x6001C02")]
		[Address(RVA = "0x1001AD8", Offset = "0x1001AD8", VA = "0x1001AD8")]
		public PropertyProvider_UnityEngine_Localization_LocalizedStringTable()
		{
		}
	}
	[Token(Token = "0x20004E0")]
	[SerializedPropertyProvider(typeof(PlatformOverride))]
	public class PropertyProvider_UnityEngine_Localization_Metadata_PlatformOverride : SerializedPropertyProvider<PlatformOverride>
	{
		[Token(Token = "0x6001C03")]
		[Address(RVA = "0x1001B20", Offset = "0x1001B20", VA = "0x1001B20")]
		public PropertyProvider_UnityEngine_Localization_Metadata_PlatformOverride()
		{
		}
	}
	[Token(Token = "0x20004E1")]
	[SerializedPropertyProvider(typeof(LocalizedStringProperty))]
	public class PropertyProvider_UnityEngine_Localization_PropertyVariants_TrackedProperties_LocalizedStringProperty : SerializedPropertyProvider<LocalizedStringProperty>
	{
		[Token(Token = "0x6001C04")]
		[Address(RVA = "0x1001B68", Offset = "0x1001B68", VA = "0x1001B68")]
		public PropertyProvider_UnityEngine_Localization_PropertyVariants_TrackedProperties_LocalizedStringProperty()
		{
		}
	}
	[Token(Token = "0x20004E2")]
	[SerializedPropertyProvider(typeof(CharacterSubstitutor))]
	public class PropertyProvider_UnityEngine_Localization_Pseudo_CharacterSubstitutor : SerializedPropertyProvider<CharacterSubstitutor>
	{
		[Token(Token = "0x6001C05")]
		[Address(RVA = "0x1001BB0", Offset = "0x1001BB0", VA = "0x1001BB0")]
		public PropertyProvider_UnityEngine_Localization_Pseudo_CharacterSubstitutor()
		{
		}
	}
	[Token(Token = "0x20004E3")]
	[SerializedPropertyProvider(typeof(Expander))]
	public class PropertyProvider_UnityEngine_Localization_Pseudo_Expander : SerializedPropertyProvider<Expander>
	{
		[Token(Token = "0x6001C06")]
		[Address(RVA = "0x1001BF8", Offset = "0x1001BF8", VA = "0x1001BF8")]
		public PropertyProvider_UnityEngine_Localization_Pseudo_Expander()
		{
		}
	}
	[Token(Token = "0x20004E4")]
	[SerializedPropertyProvider(typeof(LocalesProvider))]
	public class PropertyProvider_UnityEngine_Localization_Settings_LocalesProvider : SerializedPropertyProvider<LocalesProvider>
	{
		[Token(Token = "0x6001C07")]
		[Address(RVA = "0x1001C40", Offset = "0x1001C40", VA = "0x1001C40")]
		public PropertyProvider_UnityEngine_Localization_Settings_LocalesProvider()
		{
		}
	}
	[Token(Token = "0x20004E5")]
	[SerializedPropertyProvider(typeof(PersistentVariablesSource))]
	public class PropertyProvider_UnityEngine_Localization_SmartFormat_Extensions_GlobalVariablesSource : SerializedPropertyProvider<PersistentVariablesSource>
	{
		[Token(Token = "0x6001C08")]
		[Address(RVA = "0x1001C88", Offset = "0x1001C88", VA = "0x1001C88")]
		public PropertyProvider_UnityEngine_Localization_SmartFormat_Extensions_GlobalVariablesSource()
		{
		}
	}
	[Token(Token = "0x20004E6")]
	[SerializedPropertyProvider(typeof(PersistentVariablesSource))]
	public class PropertyProvider_UnityEngine_Localization_SmartFormat_Extensions_PersistentVariablesSource : SerializedPropertyProvider<PersistentVariablesSource>
	{
		[Token(Token = "0x6001C09")]
		[Address(RVA = "0x1001CD0", Offset = "0x1001CD0", VA = "0x1001CD0")]
		public PropertyProvider_UnityEngine_Localization_SmartFormat_Extensions_PersistentVariablesSource()
		{
		}
	}
	[Token(Token = "0x20004E7")]
	[SerializedPropertyProvider(typeof(TimeFormatter))]
	public class PropertyProvider_UnityEngine_Localization_SmartFormat_Extensions_TimeFormatter : SerializedPropertyProvider<TimeFormatter>
	{
		[Token(Token = "0x6001C0A")]
		[Address(RVA = "0x1001D18", Offset = "0x1001D18", VA = "0x1001D18")]
		public PropertyProvider_UnityEngine_Localization_SmartFormat_Extensions_TimeFormatter()
		{
		}
	}
	[Token(Token = "0x20004E8")]
	[SerializedPropertyProvider(typeof(SmartFormatter))]
	public class PropertyProvider_UnityEngine_Localization_SmartFormat_SmartFormatter : SerializedPropertyProvider<SmartFormatter>
	{
		[Token(Token = "0x6001C0B")]
		[Address(RVA = "0x1001D60", Offset = "0x1001D60", VA = "0x1001D60")]
		public PropertyProvider_UnityEngine_Localization_SmartFormat_SmartFormatter()
		{
		}
	}
	[Token(Token = "0x20004E9")]
	[SerializedPropertyProvider(typeof(ParticleSystem.MinMaxCurve))]
	public class PropertyProvider_UnityEngine_ParticleSystem_MinMaxCurve : SerializedPropertyProvider<ParticleSystem.MinMaxCurve>
	{
		[Token(Token = "0x6001C0C")]
		[Address(RVA = "0x1001DA8", Offset = "0x1001DA8", VA = "0x1001DA8")]
		public PropertyProvider_UnityEngine_ParticleSystem_MinMaxCurve()
		{
		}
	}
	[Token(Token = "0x20004EA")]
	[SerializedPropertyProvider(typeof(ParticleSystem.MinMaxGradient))]
	public class PropertyProvider_UnityEngine_ParticleSystem_MinMaxGradient : SerializedPropertyProvider<ParticleSystem.MinMaxGradient>
	{
		[Token(Token = "0x6001C0D")]
		[Address(RVA = "0x1001DF0", Offset = "0x1001DF0", VA = "0x1001DF0")]
		public PropertyProvider_UnityEngine_ParticleSystem_MinMaxGradient()
		{
		}
	}
	[Token(Token = "0x20004EB")]
	[SerializedPropertyProvider(typeof(Arch))]
	public class PropertyProvider_UnityEngine_ProBuilder_Shapes_Arch : SerializedPropertyProvider<Arch>
	{
		[Token(Token = "0x6001C0E")]
		[Address(RVA = "0x1001E38", Offset = "0x1001E38", VA = "0x1001E38")]
		public PropertyProvider_UnityEngine_ProBuilder_Shapes_Arch()
		{
		}
	}
	[Token(Token = "0x20004EC")]
	[SerializedPropertyProvider(typeof(Cone))]
	public class PropertyProvider_UnityEngine_ProBuilder_Shapes_Cone : SerializedPropertyProvider<Cone>
	{
		[Token(Token = "0x6001C0F")]
		[Address(RVA = "0x1001E80", Offset = "0x1001E80", VA = "0x1001E80")]
		public PropertyProvider_UnityEngine_ProBuilder_Shapes_Cone()
		{
		}
	}
	[Token(Token = "0x20004ED")]
	[SerializedPropertyProvider(typeof(Cube))]
	public class PropertyProvider_UnityEngine_ProBuilder_Shapes_Cube : SerializedPropertyProvider<Cube>
	{
		[Token(Token = "0x6001C10")]
		[Address(RVA = "0x1001EC8", Offset = "0x1001EC8", VA = "0x1001EC8")]
		public PropertyProvider_UnityEngine_ProBuilder_Shapes_Cube()
		{
		}
	}
	[Token(Token = "0x20004EE")]
	[SerializedPropertyProvider(typeof(Cylinder))]
	public class PropertyProvider_UnityEngine_ProBuilder_Shapes_Cylinder : SerializedPropertyProvider<Cylinder>
	{
		[Token(Token = "0x6001C11")]
		[Address(RVA = "0x1001F10", Offset = "0x1001F10", VA = "0x1001F10")]
		public PropertyProvider_UnityEngine_ProBuilder_Shapes_Cylinder()
		{
		}
	}
	[Token(Token = "0x20004EF")]
	[SerializedPropertyProvider(typeof(Door))]
	public class PropertyProvider_UnityEngine_ProBuilder_Shapes_Door : SerializedPropertyProvider<Door>
	{
		[Token(Token = "0x6001C12")]
		[Address(RVA = "0x1001F58", Offset = "0x1001F58", VA = "0x1001F58")]
		public PropertyProvider_UnityEngine_ProBuilder_Shapes_Door()
		{
		}
	}
	[Token(Token = "0x20004F0")]
	[SerializedPropertyProvider(typeof(Pipe))]
	public class PropertyProvider_UnityEngine_ProBuilder_Shapes_Pipe : SerializedPropertyProvider<Pipe>
	{
		[Token(Token = "0x6001C13")]
		[Address(RVA = "0x1001FA0", Offset = "0x1001FA0", VA = "0x1001FA0")]
		public PropertyProvider_UnityEngine_ProBuilder_Shapes_Pipe()
		{
		}
	}
	[Token(Token = "0x20004F1")]
	[SerializedPropertyProvider(typeof(UnityEngine.ProBuilder.Shapes.Plane))]
	public class PropertyProvider_UnityEngine_ProBuilder_Shapes_Plane : SerializedPropertyProvider<UnityEngine.ProBuilder.Shapes.Plane>
	{
		[Token(Token = "0x6001C14")]
		[Address(RVA = "0x1001FE8", Offset = "0x1001FE8", VA = "0x1001FE8")]
		public PropertyProvider_UnityEngine_ProBuilder_Shapes_Plane()
		{
		}
	}
	[Token(Token = "0x20004F2")]
	[SerializedPropertyProvider(typeof(Prism))]
	public class PropertyProvider_UnityEngine_ProBuilder_Shapes_Prism : SerializedPropertyProvider<Prism>
	{
		[Token(Token = "0x6001C15")]
		[Address(RVA = "0x1002030", Offset = "0x1002030", VA = "0x1002030")]
		public PropertyProvider_UnityEngine_ProBuilder_Shapes_Prism()
		{
		}
	}
	[Token(Token = "0x20004F3")]
	[SerializedPropertyProvider(typeof(Sphere))]
	public class PropertyProvider_UnityEngine_ProBuilder_Shapes_Sphere : SerializedPropertyProvider<Sphere>
	{
		[Token(Token = "0x6001C16")]
		[Address(RVA = "0x1002078", Offset = "0x1002078", VA = "0x1002078")]
		public PropertyProvider_UnityEngine_ProBuilder_Shapes_Sphere()
		{
		}
	}
	[Token(Token = "0x20004F4")]
	[SerializedPropertyProvider(typeof(UnityEngine.ProBuilder.Shapes.Sprite))]
	public class PropertyProvider_UnityEngine_ProBuilder_Shapes_Sprite : SerializedPropertyProvider<UnityEngine.ProBuilder.Shapes.Sprite>
	{
		[Token(Token = "0x6001C17")]
		[Address(RVA = "0x10020C0", Offset = "0x10020C0", VA = "0x10020C0")]
		public PropertyProvider_UnityEngine_ProBuilder_Shapes_Sprite()
		{
		}
	}
	[Token(Token = "0x20004F5")]
	[SerializedPropertyProvider(typeof(Stairs))]
	public class PropertyProvider_UnityEngine_ProBuilder_Shapes_Stairs : SerializedPropertyProvider<Stairs>
	{
		[Token(Token = "0x6001C18")]
		[Address(RVA = "0x1002108", Offset = "0x1002108", VA = "0x1002108")]
		public PropertyProvider_UnityEngine_ProBuilder_Shapes_Stairs()
		{
		}
	}
	[Token(Token = "0x20004F6")]
	[SerializedPropertyProvider(typeof(Torus))]
	public class PropertyProvider_UnityEngine_ProBuilder_Shapes_Torus : SerializedPropertyProvider<Torus>
	{
		[Token(Token = "0x6001C19")]
		[Address(RVA = "0x1002150", Offset = "0x1002150", VA = "0x1002150")]
		public PropertyProvider_UnityEngine_ProBuilder_Shapes_Torus()
		{
		}
	}
	[Token(Token = "0x20004F7")]
	[SerializedPropertyProvider(typeof(Quaternion))]
	public class PropertyProvider_UnityEngine_Quaternion : SerializedPropertyProvider<Quaternion>
	{
		[Token(Token = "0x6001C1A")]
		[Address(RVA = "0x1002198", Offset = "0x1002198", VA = "0x1002198")]
		public PropertyProvider_UnityEngine_Quaternion()
		{
		}
	}
	[Token(Token = "0x20004F8")]
	[SerializedPropertyProvider(typeof(StencilStateData))]
	public class PropertyProvider_UnityEngine_Rendering_Universal_StencilStateData : SerializedPropertyProvider<StencilStateData>
	{
		[Token(Token = "0x6001C1B")]
		[Address(RVA = "0x10021E0", Offset = "0x10021E0", VA = "0x10021E0")]
		public PropertyProvider_UnityEngine_Rendering_Universal_StencilStateData()
		{
		}
	}
	[Token(Token = "0x20004F9")]
	[SerializedPropertyProvider(typeof(SerializedType))]
	public class PropertyProvider_UnityEngine_ResourceManagement_Util_SerializedType : SerializedPropertyProvider<SerializedType>
	{
		[Token(Token = "0x6001C1C")]
		[Address(RVA = "0x1002228", Offset = "0x1002228", VA = "0x1002228")]
		public PropertyProvider_UnityEngine_ResourceManagement_Util_SerializedType()
		{
		}
	}
	[Token(Token = "0x20004FA")]
	[SerializedPropertyProvider(typeof(Glyph))]
	public class PropertyProvider_UnityEngine_TextCore_Glyph : SerializedPropertyProvider<Glyph>
	{
		[Token(Token = "0x6001C1D")]
		[Address(RVA = "0x1002270", Offset = "0x1002270", VA = "0x1002270")]
		public PropertyProvider_UnityEngine_TextCore_Glyph()
		{
		}
	}
	[Token(Token = "0x20004FB")]
	[SerializedPropertyProvider(typeof(GlyphMetrics))]
	public class PropertyProvider_UnityEngine_TextCore_GlyphMetrics : SerializedPropertyProvider<GlyphMetrics>
	{
		[Token(Token = "0x6001C1E")]
		[Address(RVA = "0x10022B8", Offset = "0x10022B8", VA = "0x10022B8")]
		public PropertyProvider_UnityEngine_TextCore_GlyphMetrics()
		{
		}
	}
	[Token(Token = "0x20004FC")]
	[SerializedPropertyProvider(typeof(GlyphRect))]
	public class PropertyProvider_UnityEngine_TextCore_GlyphRect : SerializedPropertyProvider<GlyphRect>
	{
		[Token(Token = "0x6001C1F")]
		[Address(RVA = "0x1002300", Offset = "0x1002300", VA = "0x1002300")]
		public PropertyProvider_UnityEngine_TextCore_GlyphRect()
		{
		}
	}
	[Token(Token = "0x20004FD")]
	[SerializedPropertyProvider(typeof(GlyphPairAdjustmentRecord))]
	public class PropertyProvider_UnityEngine_TextCore_LowLevel_GlyphPairAdjustmentRecord : SerializedPropertyProvider<GlyphPairAdjustmentRecord>
	{
		[Token(Token = "0x6001C20")]
		[Address(RVA = "0x1002348", Offset = "0x1002348", VA = "0x1002348")]
		public PropertyProvider_UnityEngine_TextCore_LowLevel_GlyphPairAdjustmentRecord()
		{
		}
	}
	[Token(Token = "0x20004FE")]
	[SerializedPropertyProvider(typeof(Character))]
	public class PropertyProvider_UnityEngine_TextCore_Text_Character : SerializedPropertyProvider<Character>
	{
		[Token(Token = "0x6001C21")]
		[Address(RVA = "0x1002390", Offset = "0x1002390", VA = "0x1002390")]
		public PropertyProvider_UnityEngine_TextCore_Text_Character()
		{
		}
	}
	[Token(Token = "0x20004FF")]
	[SerializedPropertyProvider(typeof(FontWeightPair))]
	public class PropertyProvider_UnityEngine_TextCore_Text_FontWeightPair : SerializedPropertyProvider<FontWeightPair>
	{
		[Token(Token = "0x6001C22")]
		[Address(RVA = "0x10023D8", Offset = "0x10023D8", VA = "0x10023D8")]
		public PropertyProvider_UnityEngine_TextCore_Text_FontWeightPair()
		{
		}
	}
	[Token(Token = "0x2000500")]
	[SerializedPropertyProvider(typeof(SpriteCharacter))]
	public class PropertyProvider_UnityEngine_TextCore_Text_SpriteCharacter : SerializedPropertyProvider<SpriteCharacter>
	{
		[Token(Token = "0x6001C23")]
		[Address(RVA = "0x1002420", Offset = "0x1002420", VA = "0x1002420")]
		public PropertyProvider_UnityEngine_TextCore_Text_SpriteCharacter()
		{
		}
	}
	[Token(Token = "0x2000501")]
	[SerializedPropertyProvider(typeof(SpriteGlyph))]
	public class PropertyProvider_UnityEngine_TextCore_Text_SpriteGlyph : SerializedPropertyProvider<SpriteGlyph>
	{
		[Token(Token = "0x6001C24")]
		[Address(RVA = "0x1002468", Offset = "0x1002468", VA = "0x1002468")]
		public PropertyProvider_UnityEngine_TextCore_Text_SpriteGlyph()
		{
		}
	}
	[Token(Token = "0x2000502")]
	[SerializedPropertyProvider(typeof(TextStyle))]
	public class PropertyProvider_UnityEngine_TextCore_Text_TextStyle : SerializedPropertyProvider<TextStyle>
	{
		[Token(Token = "0x6001C25")]
		[Address(RVA = "0x10024B0", Offset = "0x10024B0", VA = "0x10024B0")]
		public PropertyProvider_UnityEngine_TextCore_Text_TextStyle()
		{
		}
	}
	[Token(Token = "0x2000503")]
	[SerializedPropertyProvider(typeof(UnicodeLineBreakingRules))]
	public class PropertyProvider_UnityEngine_TextCore_Text_UnicodeLineBreakingRules : SerializedPropertyProvider<UnicodeLineBreakingRules>
	{
		[Token(Token = "0x6001C26")]
		[Address(RVA = "0x10024F8", Offset = "0x10024F8", VA = "0x10024F8")]
		public PropertyProvider_UnityEngine_TextCore_Text_UnicodeLineBreakingRules()
		{
		}
	}
	[Token(Token = "0x2000504")]
	[SerializedPropertyProvider(typeof(AnimationTriggers))]
	public class PropertyProvider_UnityEngine_UI_AnimationTriggers : SerializedPropertyProvider<AnimationTriggers>
	{
		[Token(Token = "0x6001C27")]
		[Address(RVA = "0x1002540", Offset = "0x1002540", VA = "0x1002540")]
		public PropertyProvider_UnityEngine_UI_AnimationTriggers()
		{
		}
	}
	[Token(Token = "0x2000505")]
	[SerializedPropertyProvider(typeof(UnityEngine.UI.Button.ButtonClickedEvent))]
	public class PropertyProvider_UnityEngine_UI_Button_ButtonClickedEvent : SerializedPropertyProvider<UnityEngine.UI.Button.ButtonClickedEvent>
	{
		[Token(Token = "0x6001C28")]
		[Address(RVA = "0x1002588", Offset = "0x1002588", VA = "0x1002588")]
		public PropertyProvider_UnityEngine_UI_Button_ButtonClickedEvent()
		{
		}
	}
	[Token(Token = "0x2000506")]
	[SerializedPropertyProvider(typeof(ColorBlock))]
	public class PropertyProvider_UnityEngine_UI_ColorBlock : SerializedPropertyProvider<ColorBlock>
	{
		[Token(Token = "0x6001C29")]
		[Address(RVA = "0x10025D0", Offset = "0x10025D0", VA = "0x10025D0")]
		public PropertyProvider_UnityEngine_UI_ColorBlock()
		{
		}
	}
	[Token(Token = "0x2000507")]
	[SerializedPropertyProvider(typeof(Dropdown.DropdownEvent))]
	public class PropertyProvider_UnityEngine_UI_Dropdown_DropdownEvent : SerializedPropertyProvider<Dropdown.DropdownEvent>
	{
		[Token(Token = "0x6001C2A")]
		[Address(RVA = "0x1002618", Offset = "0x1002618", VA = "0x1002618")]
		public PropertyProvider_UnityEngine_UI_Dropdown_DropdownEvent()
		{
		}
	}
	[Token(Token = "0x2000508")]
	[SerializedPropertyProvider(typeof(Dropdown.OptionDataList))]
	public class PropertyProvider_UnityEngine_UI_Dropdown_OptionDataList : SerializedPropertyProvider<Dropdown.OptionDataList>
	{
		[Token(Token = "0x6001C2B")]
		[Address(RVA = "0x1002660", Offset = "0x1002660", VA = "0x1002660")]
		public PropertyProvider_UnityEngine_UI_Dropdown_OptionDataList()
		{
		}
	}
	[Token(Token = "0x2000509")]
	[SerializedPropertyProvider(typeof(FontData))]
	public class PropertyProvider_UnityEngine_UI_FontData : SerializedPropertyProvider<FontData>
	{
		[Token(Token = "0x6001C2C")]
		[Address(RVA = "0x10026A8", Offset = "0x10026A8", VA = "0x10026A8")]
		public PropertyProvider_UnityEngine_UI_FontData()
		{
		}
	}
	[Token(Token = "0x200050A")]
	[SerializedPropertyProvider(typeof(InputField.EndEditEvent))]
	public class PropertyProvider_UnityEngine_UI_InputField_EndEditEvent : SerializedPropertyProvider<InputField.EndEditEvent>
	{
		[Token(Token = "0x6001C2D")]
		[Address(RVA = "0x10026F0", Offset = "0x10026F0", VA = "0x10026F0")]
		public PropertyProvider_UnityEngine_UI_InputField_EndEditEvent()
		{
		}
	}
	[Token(Token = "0x200050B")]
	[SerializedPropertyProvider(typeof(InputField.OnChangeEvent))]
	public class PropertyProvider_UnityEngine_UI_InputField_OnChangeEvent : SerializedPropertyProvider<InputField.OnChangeEvent>
	{
		[Token(Token = "0x6001C2E")]
		[Address(RVA = "0x1002738", Offset = "0x1002738", VA = "0x1002738")]
		public PropertyProvider_UnityEngine_UI_InputField_OnChangeEvent()
		{
		}
	}
	[Token(Token = "0x200050C")]
	[SerializedPropertyProvider(typeof(InputField.SubmitEvent))]
	public class PropertyProvider_UnityEngine_UI_InputField_SubmitEvent : SerializedPropertyProvider<InputField.SubmitEvent>
	{
		[Token(Token = "0x6001C2F")]
		[Address(RVA = "0x1002780", Offset = "0x1002780", VA = "0x1002780")]
		public PropertyProvider_UnityEngine_UI_InputField_SubmitEvent()
		{
		}
	}
	[Token(Token = "0x200050D")]
	[SerializedPropertyProvider(typeof(MaskableGraphic.CullStateChangedEvent))]
	public class PropertyProvider_UnityEngine_UI_MaskableGraphic_CullStateChangedEvent : SerializedPropertyProvider<MaskableGraphic.CullStateChangedEvent>
	{
		[Token(Token = "0x6001C30")]
		[Address(RVA = "0x10027C8", Offset = "0x10027C8", VA = "0x10027C8")]
		public PropertyProvider_UnityEngine_UI_MaskableGraphic_CullStateChangedEvent()
		{
		}
	}
	[Token(Token = "0x200050E")]
	[SerializedPropertyProvider(typeof(Navigation))]
	public class PropertyProvider_UnityEngine_UI_Navigation : SerializedPropertyProvider<Navigation>
	{
		[Token(Token = "0x6001C31")]
		[Address(RVA = "0x1002810", Offset = "0x1002810", VA = "0x1002810")]
		public PropertyProvider_UnityEngine_UI_Navigation()
		{
		}
	}
	[Token(Token = "0x200050F")]
	[SerializedPropertyProvider(typeof(Scrollbar.ScrollEvent))]
	public class PropertyProvider_UnityEngine_UI_Scrollbar_ScrollEvent : SerializedPropertyProvider<Scrollbar.ScrollEvent>
	{
		[Token(Token = "0x6001C32")]
		[Address(RVA = "0x1002858", Offset = "0x1002858", VA = "0x1002858")]
		public PropertyProvider_UnityEngine_UI_Scrollbar_ScrollEvent()
		{
		}
	}
	[Token(Token = "0x2000510")]
	[SerializedPropertyProvider(typeof(ScrollRect.ScrollRectEvent))]
	public class PropertyProvider_UnityEngine_UI_ScrollRect_ScrollRectEvent : SerializedPropertyProvider<ScrollRect.ScrollRectEvent>
	{
		[Token(Token = "0x6001C33")]
		[Address(RVA = "0x10028A0", Offset = "0x10028A0", VA = "0x10028A0")]
		public PropertyProvider_UnityEngine_UI_ScrollRect_ScrollRectEvent()
		{
		}
	}
	[Token(Token = "0x2000511")]
	[SerializedPropertyProvider(typeof(Slider.SliderEvent))]
	public class PropertyProvider_UnityEngine_UI_Slider_SliderEvent : SerializedPropertyProvider<Slider.SliderEvent>
	{
		[Token(Token = "0x6001C34")]
		[Address(RVA = "0x10028E8", Offset = "0x10028E8", VA = "0x10028E8")]
		public PropertyProvider_UnityEngine_UI_Slider_SliderEvent()
		{
		}
	}
	[Token(Token = "0x2000512")]
	[SerializedPropertyProvider(typeof(SpriteState))]
	public class PropertyProvider_UnityEngine_UI_SpriteState : SerializedPropertyProvider<SpriteState>
	{
		[Token(Token = "0x6001C35")]
		[Address(RVA = "0x1002930", Offset = "0x1002930", VA = "0x1002930")]
		public PropertyProvider_UnityEngine_UI_SpriteState()
		{
		}
	}
	[Token(Token = "0x2000513")]
	[SerializedPropertyProvider(typeof(Toggle.ToggleEvent))]
	public class PropertyProvider_UnityEngine_UI_Toggle_ToggleEvent : SerializedPropertyProvider<Toggle.ToggleEvent>
	{
		[Token(Token = "0x6001C36")]
		[Address(RVA = "0x1002978", Offset = "0x1002978", VA = "0x1002978")]
		public PropertyProvider_UnityEngine_UI_Toggle_ToggleEvent()
		{
		}
	}
	[Token(Token = "0x2000514")]
	[SerializedPropertyProvider(typeof(bool2))]
	public class PropertyProvider_Unity_Mathematics_bool2 : SerializedPropertyProvider<bool2>
	{
		[Token(Token = "0x6001C37")]
		[Address(RVA = "0x10029C0", Offset = "0x10029C0", VA = "0x10029C0")]
		public PropertyProvider_Unity_Mathematics_bool2()
		{
		}
	}
	[Token(Token = "0x2000515")]
	[SerializedPropertyProvider(typeof(bool2x2))]
	public class PropertyProvider_Unity_Mathematics_bool2x2 : SerializedPropertyProvider<bool2x2>
	{
		[Token(Token = "0x6001C38")]
		[Address(RVA = "0x1002A08", Offset = "0x1002A08", VA = "0x1002A08")]
		public PropertyProvider_Unity_Mathematics_bool2x2()
		{
		}
	}
	[Token(Token = "0x2000516")]
	[SerializedPropertyProvider(typeof(quaternion))]
	public class PropertyProvider_Unity_Mathematics_quaternion : SerializedPropertyProvider<quaternion>
	{
		[Token(Token = "0x6001C39")]
		[Address(RVA = "0x1002A50", Offset = "0x1002A50", VA = "0x1002A50")]
		public PropertyProvider_Unity_Mathematics_quaternion()
		{
		}
	}
}
namespace Ludiq.Generated.Aot
{
	[Token(Token = "0x2000517")]
	[Preserve]
	public class AotStubs
	{
		[Token(Token = "0x6001C3A")]
		[Address(RVA = "0xF79C30", Offset = "0xF79C30", VA = "0xF79C30")]
		[Preserve]
		public static void AccountPickerCoordinator_op_Equality()
		{
		}

		[Token(Token = "0x6001C3B")]
		[Address(RVA = "0xF79D08", Offset = "0xF79D08", VA = "0xF79D08")]
		[Preserve]
		public static void AccountPickerCoordinator_op_Implicit()
		{
		}

		[Token(Token = "0x6001C3C")]
		[Address(RVA = "0xF79DD8", Offset = "0xF79DD8", VA = "0xF79DD8")]
		[Preserve]
		public static void AccountPickerCoordinator_op_Inequality()
		{
		}

		[Token(Token = "0x6001C3D")]
		[Address(RVA = "0xF79EB0", Offset = "0xF79EB0", VA = "0xF79EB0")]
		[Preserve]
		public static void AchievementContainer_op_Equality()
		{
		}

		[Token(Token = "0x6001C3E")]
		[Address(RVA = "0xF79F88", Offset = "0xF79F88", VA = "0xF79F88")]
		[Preserve]
		public static void AchievementContainer_op_Implicit()
		{
		}

		[Token(Token = "0x6001C3F")]
		[Address(RVA = "0xF7A058", Offset = "0xF7A058", VA = "0xF7A058")]
		[Preserve]
		public static void AchievementContainer_op_Inequality()
		{
		}

		[Token(Token = "0x6001C40")]
		[Address(RVA = "0xF7A130", Offset = "0xF7A130", VA = "0xF7A130")]
		[Preserve]
		public static void AchievementHelper_op_Equality()
		{
		}

		[Token(Token = "0x6001C41")]
		[Address(RVA = "0xF7A208", Offset = "0xF7A208", VA = "0xF7A208")]
		[Preserve]
		public static void AchievementHelper_op_Implicit()
		{
		}

		[Token(Token = "0x6001C42")]
		[Address(RVA = "0xF7A2D8", Offset = "0xF7A2D8", VA = "0xF7A2D8")]
		[Preserve]
		public static void AchievementHelper_op_Inequality()
		{
		}

		[Token(Token = "0x6001C43")]
		[Address(RVA = "0xF7A3B0", Offset = "0xF7A3B0", VA = "0xF7A3B0")]
		[Preserve]
		public static void ActionHighlighter_op_Equality()
		{
		}

		[Token(Token = "0x6001C44")]
		[Address(RVA = "0xF7A488", Offset = "0xF7A488", VA = "0xF7A488")]
		[Preserve]
		public static void ActionHighlighter_op_Implicit()
		{
		}

		[Token(Token = "0x6001C45")]
		[Address(RVA = "0xF7A558", Offset = "0xF7A558", VA = "0xF7A558")]
		[Preserve]
		public static void ActionHighlighter_op_Inequality()
		{
		}

		[Token(Token = "0x6001C46")]
		[Address(RVA = "0xF7A630", Offset = "0xF7A630", VA = "0xF7A630")]
		[Preserve]
		public static void ActionPrioritizer_op_Equality()
		{
		}

		[Token(Token = "0x6001C47")]
		[Address(RVA = "0xF7A708", Offset = "0xF7A708", VA = "0xF7A708")]
		[Preserve]
		public static void ActionPrioritizer_op_Implicit()
		{
		}

		[Token(Token = "0x6001C48")]
		[Address(RVA = "0xF7A7D8", Offset = "0xF7A7D8", VA = "0xF7A7D8")]
		[Preserve]
		public static void ActionPrioritizer_op_Inequality()
		{
		}

		[Token(Token = "0x6001C49")]
		[Address(RVA = "0xF7A8B0", Offset = "0xF7A8B0", VA = "0xF7A8B0")]
		[Preserve]
		public static void ActionRayPointer_op_Equality()
		{
		}

		[Token(Token = "0x6001C4A")]
		[Address(RVA = "0xF7A988", Offset = "0xF7A988", VA = "0xF7A988")]
		[Preserve]
		public static void ActionRayPointer_op_Implicit()
		{
		}

		[Token(Token = "0x6001C4B")]
		[Address(RVA = "0xF7AA58", Offset = "0xF7AA58", VA = "0xF7AA58")]
		[Preserve]
		public static void ActionRayPointer_op_Inequality()
		{
		}

		[Token(Token = "0x6001C4C")]
		[Address(RVA = "0xF7AB30", Offset = "0xF7AB30", VA = "0xF7AB30")]
		[Preserve]
		public static void ActiveAccountNameSetter_op_Equality()
		{
		}

		[Token(Token = "0x6001C4D")]
		[Address(RVA = "0xF7AC08", Offset = "0xF7AC08", VA = "0xF7AC08")]
		[Preserve]
		public static void ActiveAccountNameSetter_op_Implicit()
		{
		}

		[Token(Token = "0x6001C4E")]
		[Address(RVA = "0xF7ACD8", Offset = "0xF7ACD8", VA = "0xF7ACD8")]
		[Preserve]
		public static void ActiveAccountNameSetter_op_Inequality()
		{
		}

		[Token(Token = "0x6001C4F")]
		[Address(RVA = "0xF7ADB0", Offset = "0xF7ADB0", VA = "0xF7ADB0")]
		[Preserve]
		public static void Activities_ActivitiesService_op_Equality()
		{
		}

		[Token(Token = "0x6001C50")]
		[Address(RVA = "0xF7AE88", Offset = "0xF7AE88", VA = "0xF7AE88")]
		[Preserve]
		public static void Activities_ActivitiesService_op_Implicit()
		{
		}

		[Token(Token = "0x6001C51")]
		[Address(RVA = "0xF7AF58", Offset = "0xF7AF58", VA = "0xF7AF58")]
		[Preserve]
		public static void Activities_ActivitiesService_op_Inequality()
		{
		}

		[Token(Token = "0x6001C52")]
		[Address(RVA = "0xF7B030", Offset = "0xF7B030", VA = "0xF7B030")]
		[Preserve]
		public static void ActivityDefinition_op_Equality()
		{
		}

		[Token(Token = "0x6001C53")]
		[Address(RVA = "0xF7B108", Offset = "0xF7B108", VA = "0xF7B108")]
		[Preserve]
		public static void ActivityDefinition_op_Implicit()
		{
		}

		[Token(Token = "0x6001C54")]
		[Address(RVA = "0xF7B1D8", Offset = "0xF7B1D8", VA = "0xF7B1D8")]
		[Preserve]
		public static void ActivityDefinition_op_Inequality()
		{
		}

		[Token(Token = "0x6001C55")]
		[Address(RVA = "0xF7B2B0", Offset = "0xF7B2B0", VA = "0xF7B2B0")]
		[Preserve]
		public static void AddressablesBootLoader_op_Equality()
		{
		}

		[Token(Token = "0x6001C56")]
		[Address(RVA = "0xF7B388", Offset = "0xF7B388", VA = "0xF7B388")]
		[Preserve]
		public static void AddressablesBootLoader_op_Implicit()
		{
		}

		[Token(Token = "0x6001C57")]
		[Address(RVA = "0xF7B458", Offset = "0xF7B458", VA = "0xF7B458")]
		[Preserve]
		public static void AddressablesBootLoader_op_Inequality()
		{
		}

		[Token(Token = "0x6001C58")]
		[Address(RVA = "0xF7B530", Offset = "0xF7B530", VA = "0xF7B530")]
		[Preserve]
		public static void AdjustBoxColliderPerPlatform_op_Equality()
		{
		}

		[Token(Token = "0x6001C59")]
		[Address(RVA = "0xF7B608", Offset = "0xF7B608", VA = "0xF7B608")]
		[Preserve]
		public static void AdjustBoxColliderPerPlatform_op_Implicit()
		{
		}

		[Token(Token = "0x6001C5A")]
		[Address(RVA = "0xF7B6D8", Offset = "0xF7B6D8", VA = "0xF7B6D8")]
		[Preserve]
		public static void AdjustBoxColliderPerPlatform_op_Inequality()
		{
		}

		[Token(Token = "0x6001C5B")]
		[Address(RVA = "0xF7B7B0", Offset = "0xF7B7B0", VA = "0xF7B7B0")]
		[Preserve]
		public static void ADoorLock_op_Equality()
		{
		}

		[Token(Token = "0x6001C5C")]
		[Address(RVA = "0xF7B888", Offset = "0xF7B888", VA = "0xF7B888")]
		[Preserve]
		public static void ADoorLock_op_Implicit()
		{
		}

		[Token(Token = "0x6001C5D")]
		[Address(RVA = "0xF7B958", Offset = "0xF7B958", VA = "0xF7B958")]
		[Preserve]
		public static void ADoorLock_op_Inequality()
		{
		}

		[Token(Token = "0x6001C5E")]
		[Address(RVA = "0xF7BA30", Offset = "0xF7BA30", VA = "0xF7BA30")]
		[Preserve]
		public static void AlignmentHelper_op_Equality()
		{
		}

		[Token(Token = "0x6001C5F")]
		[Address(RVA = "0xF7BB08", Offset = "0xF7BB08", VA = "0xF7BB08")]
		[Preserve]
		public static void AlignmentHelper_op_Implicit()
		{
		}

		[Token(Token = "0x6001C60")]
		[Address(RVA = "0xF7BBD8", Offset = "0xF7BBD8", VA = "0xF7BBD8")]
		[Preserve]
		public static void AlignmentHelper_op_Inequality()
		{
		}

		[Token(Token = "0x6001C61")]
		[Address(RVA = "0xF7BCB0", Offset = "0xF7BCB0", VA = "0xF7BCB0")]
		[Preserve]
		public static void AlleywayFogEffectController_op_Equality()
		{
		}

		[Token(Token = "0x6001C62")]
		[Address(RVA = "0xF7BD88", Offset = "0xF7BD88", VA = "0xF7BD88")]
		[Preserve]
		public static void AlleywayFogEffectController_op_Implicit()
		{
		}

		[Token(Token = "0x6001C63")]
		[Address(RVA = "0xF7BE58", Offset = "0xF7BE58", VA = "0xF7BE58")]
		[Preserve]
		public static void AlleywayFogEffectController_op_Inequality()
		{
		}

		[Token(Token = "0x6001C64")]
		[Address(RVA = "0xF7BF30", Offset = "0xF7BF30", VA = "0xF7BF30")]
		[Preserve]
		public static void AnimatedJumpscareAudio_op_Equality()
		{
		}

		[Token(Token = "0x6001C65")]
		[Address(RVA = "0xF7C008", Offset = "0xF7C008", VA = "0xF7C008")]
		[Preserve]
		public static void AnimatedJumpscareAudio_op_Implicit()
		{
		}

		[Token(Token = "0x6001C66")]
		[Address(RVA = "0xF7C0D8", Offset = "0xF7C0D8", VA = "0xF7C0D8")]
		[Preserve]
		public static void AnimatedJumpscareAudio_op_Inequality()
		{
		}

		[Token(Token = "0x6001C67")]
		[Address(RVA = "0xF7C1B0", Offset = "0xF7C1B0", VA = "0xF7C1B0")]
		[Preserve]
		public static void AnimatedSequenceState_op_Equality()
		{
		}

		[Token(Token = "0x6001C68")]
		[Address(RVA = "0xF7C288", Offset = "0xF7C288", VA = "0xF7C288")]
		[Preserve]
		public static void AnimatedSequenceState_op_Implicit()
		{
		}

		[Token(Token = "0x6001C69")]
		[Address(RVA = "0xF7C358", Offset = "0xF7C358", VA = "0xF7C358")]
		[Preserve]
		public static void AnimatedSequenceState_op_Inequality()
		{
		}

		[Token(Token = "0x6001C6A")]
		[Address(RVA = "0xF7C430", Offset = "0xF7C430", VA = "0xF7C430")]
		[Preserve]
		public static void AnimationEvents_op_Equality()
		{
		}

		[Token(Token = "0x6001C6B")]
		[Address(RVA = "0xF7C508", Offset = "0xF7C508", VA = "0xF7C508")]
		[Preserve]
		public static void AnimationEvents_op_Implicit()
		{
		}

		[Token(Token = "0x6001C6C")]
		[Address(RVA = "0xF7C5D8", Offset = "0xF7C5D8", VA = "0xF7C5D8")]
		[Preserve]
		public static void AnimationEvents_op_Inequality()
		{
		}

		[Token(Token = "0x6001C6D")]
		[Address(RVA = "0xF7C6B0", Offset = "0xF7C6B0", VA = "0xF7C6B0")]
		[Preserve]
		public static void AnimController_op_Equality()
		{
		}

		[Token(Token = "0x6001C6E")]
		[Address(RVA = "0xF7C788", Offset = "0xF7C788", VA = "0xF7C788")]
		[Preserve]
		public static void AnimController_op_Implicit()
		{
		}

		[Token(Token = "0x6001C6F")]
		[Address(RVA = "0xF7C858", Offset = "0xF7C858", VA = "0xF7C858")]
		[Preserve]
		public static void AnimController_op_Inequality()
		{
		}

		[Token(Token = "0x6001C70")]
		[Address(RVA = "0xF7C930", Offset = "0xF7C930", VA = "0xF7C930")]
		[Preserve]
		public static void AssetPlatformOverrider_op_Equality()
		{
		}

		[Token(Token = "0x6001C71")]
		[Address(RVA = "0xF7CA08", Offset = "0xF7CA08", VA = "0xF7CA08")]
		[Preserve]
		public static void AssetPlatformOverrider_op_Implicit()
		{
		}

		[Token(Token = "0x6001C72")]
		[Address(RVA = "0xF7CAD8", Offset = "0xF7CAD8", VA = "0xF7CAD8")]
		[Preserve]
		public static void AssetPlatformOverrider_op_Inequality()
		{
		}

		[Token(Token = "0x6001C73")]
		[Address(RVA = "0xF7CBB0", Offset = "0xF7CBB0", VA = "0xF7CBB0")]
		[Preserve]
		public static void AssignMainCameraToBoltVariable_op_Equality()
		{
		}

		[Token(Token = "0x6001C74")]
		[Address(RVA = "0xF7CC88", Offset = "0xF7CC88", VA = "0xF7CC88")]
		[Preserve]
		public static void AssignMainCameraToBoltVariable_op_Implicit()
		{
		}

		[Token(Token = "0x6001C75")]
		[Address(RVA = "0xF7CD58", Offset = "0xF7CD58", VA = "0xF7CD58")]
		[Preserve]
		public static void AssignMainCameraToBoltVariable_op_Inequality()
		{
		}

		[Token(Token = "0x6001C76")]
		[Address(RVA = "0xF7CE30", Offset = "0xF7CE30", VA = "0xF7CE30")]
		[Preserve]
		public static void AttachPoint_op_Equality()
		{
		}

		[Token(Token = "0x6001C77")]
		[Address(RVA = "0xF7CF08", Offset = "0xF7CF08", VA = "0xF7CF08")]
		[Preserve]
		public static void AttachPoint_op_Implicit()
		{
		}

		[Token(Token = "0x6001C78")]
		[Address(RVA = "0xF7CFD8", Offset = "0xF7CFD8", VA = "0xF7CFD8")]
		[Preserve]
		public static void AttachPoint_op_Inequality()
		{
		}

		[Token(Token = "0x6001C79")]
		[Address(RVA = "0xF7D0B0", Offset = "0xF7D0B0", VA = "0xF7D0B0")]
		[Preserve]
		public static void AudioEventPlayer_op_Equality()
		{
		}

		[Token(Token = "0x6001C7A")]
		[Address(RVA = "0xF7D188", Offset = "0xF7D188", VA = "0xF7D188")]
		[Preserve]
		public static void AudioEventPlayer_op_Implicit()
		{
		}

		[Token(Token = "0x6001C7B")]
		[Address(RVA = "0xF7D258", Offset = "0xF7D258", VA = "0xF7D258")]
		[Preserve]
		public static void AudioEventPlayer_op_Inequality()
		{
		}

		[Token(Token = "0x6001C7C")]
		[Address(RVA = "0xF7D330", Offset = "0xF7D330", VA = "0xF7D330")]
		[Preserve]
		public static void AudioMaterial_op_Equality()
		{
		}

		[Token(Token = "0x6001C7D")]
		[Address(RVA = "0xF7D408", Offset = "0xF7D408", VA = "0xF7D408")]
		[Preserve]
		public static void AudioMaterial_op_Implicit()
		{
		}

		[Token(Token = "0x6001C7E")]
		[Address(RVA = "0xF7D4D8", Offset = "0xF7D4D8", VA = "0xF7D4D8")]
		[Preserve]
		public static void AudioMaterial_op_Inequality()
		{
		}

		[Token(Token = "0x6001C7F")]
		[Address(RVA = "0xF7D5B0", Offset = "0xF7D5B0", VA = "0xF7D5B0")]
		[Preserve]
		public static void Board_op_Equality()
		{
		}

		[Token(Token = "0x6001C80")]
		[Address(RVA = "0xF7D688", Offset = "0xF7D688", VA = "0xF7D688")]
		[Preserve]
		public static void Board_op_Implicit()
		{
		}

		[Token(Token = "0x6001C81")]
		[Address(RVA = "0xF7D758", Offset = "0xF7D758", VA = "0xF7D758")]
		[Preserve]
		public static void Board_op_Inequality()
		{
		}

		[Token(Token = "0x6001C82")]
		[Address(RVA = "0xF7D830", Offset = "0xF7D830", VA = "0xF7D830")]
		[Preserve]
		public static void BoardItem_op_Equality()
		{
		}

		[Token(Token = "0x6001C83")]
		[Address(RVA = "0xF7D908", Offset = "0xF7D908", VA = "0xF7D908")]
		[Preserve]
		public static void BoardItem_op_Implicit()
		{
		}

		[Token(Token = "0x6001C84")]
		[Address(RVA = "0xF7D9D8", Offset = "0xF7D9D8", VA = "0xF7D9D8")]
		[Preserve]
		public static void BoardItem_op_Inequality()
		{
		}

		[Token(Token = "0x6001C85")]
		[Address(RVA = "0xF7DAB0", Offset = "0xF7DAB0", VA = "0xF7DAB0")]
		[Preserve]
		public static void BoardLeaveTrigger_op_Equality()
		{
		}

		[Token(Token = "0x6001C86")]
		[Address(RVA = "0xF7DB88", Offset = "0xF7DB88", VA = "0xF7DB88")]
		[Preserve]
		public static void BoardLeaveTrigger_op_Implicit()
		{
		}

		[Token(Token = "0x6001C87")]
		[Address(RVA = "0xF7DC58", Offset = "0xF7DC58", VA = "0xF7DC58")]
		[Preserve]
		public static void BoardLeaveTrigger_op_Inequality()
		{
		}

		[Token(Token = "0x6001C88")]
		[Address(RVA = "0xF7DD30", Offset = "0xF7DD30", VA = "0xF7DD30")]
		[Preserve]
		public static void Bolt_AnimatorMessageListener_op_Equality()
		{
		}

		[Token(Token = "0x6001C89")]
		[Address(RVA = "0xF7DE08", Offset = "0xF7DE08", VA = "0xF7DE08")]
		[Preserve]
		public static void Bolt_AnimatorMessageListener_op_Implicit()
		{
		}

		[Token(Token = "0x6001C8A")]
		[Address(RVA = "0xF7DED8", Offset = "0xF7DED8", VA = "0xF7DED8")]
		[Preserve]
		public static void Bolt_AnimatorMessageListener_op_Inequality()
		{
		}

		[Token(Token = "0x6001C8B")]
		[Address(RVA = "0xF7DFB0", Offset = "0xF7DFB0", VA = "0xF7DFB0")]
		[Preserve]
		public static void Bolt_FlowMachine_ctor()
		{
		}

		[Token(Token = "0x6001C8C")]
		[Address(RVA = "0xF7E000", Offset = "0xF7E000", VA = "0xF7E000")]
		[Preserve]
		public static void Bolt_FlowMachine_op_Equality()
		{
		}

		[Token(Token = "0x6001C8D")]
		[Address(RVA = "0xF7E0D8", Offset = "0xF7E0D8", VA = "0xF7E0D8")]
		[Preserve]
		public static void Bolt_FlowMachine_op_Implicit()
		{
		}

		[Token(Token = "0x6001C8E")]
		[Address(RVA = "0xF7E1A8", Offset = "0xF7E1A8", VA = "0xF7E1A8")]
		[Preserve]
		public static void Bolt_FlowMachine_op_Inequality()
		{
		}

		[Token(Token = "0x6001C8F")]
		[Address(RVA = "0xF7E280", Offset = "0xF7E280", VA = "0xF7E280")]
		[Preserve]
		public static void Bolt_FlowMacro_op_Equality()
		{
		}

		[Token(Token = "0x6001C90")]
		[Address(RVA = "0xF7E358", Offset = "0xF7E358", VA = "0xF7E358")]
		[Preserve]
		public static void Bolt_FlowMacro_op_Implicit()
		{
		}

		[Token(Token = "0x6001C91")]
		[Address(RVA = "0xF7E428", Offset = "0xF7E428", VA = "0xF7E428")]
		[Preserve]
		public static void Bolt_FlowMacro_op_Inequality()
		{
		}

		[Token(Token = "0x6001C92")]
		[Address(RVA = "0xF7E500", Offset = "0xF7E500", VA = "0xF7E500")]
		[Preserve]
		public static void Bolt_StateMachine_op_Equality()
		{
		}

		[Token(Token = "0x6001C93")]
		[Address(RVA = "0xF7E5D8", Offset = "0xF7E5D8", VA = "0xF7E5D8")]
		[Preserve]
		public static void Bolt_StateMachine_op_Implicit()
		{
		}

		[Token(Token = "0x6001C94")]
		[Address(RVA = "0xF7E6A8", Offset = "0xF7E6A8", VA = "0xF7E6A8")]
		[Preserve]
		public static void Bolt_StateMachine_op_Inequality()
		{
		}

		[Token(Token = "0x6001C95")]
		[Address(RVA = "0xF7E780", Offset = "0xF7E780", VA = "0xF7E780")]
		[Preserve]
		public static void Bolt_StateMacro_op_Equality()
		{
		}

		[Token(Token = "0x6001C96")]
		[Address(RVA = "0xF7E858", Offset = "0xF7E858", VA = "0xF7E858")]
		[Preserve]
		public static void Bolt_StateMacro_op_Implicit()
		{
		}

		[Token(Token = "0x6001C97")]
		[Address(RVA = "0xF7E928", Offset = "0xF7E928", VA = "0xF7E928")]
		[Preserve]
		public static void Bolt_StateMacro_op_Inequality()
		{
		}

		[Token(Token = "0x6001C98")]
		[Address(RVA = "0xF7EA00", Offset = "0xF7EA00", VA = "0xF7EA00")]
		[Preserve]
		public static void BoltEventDebugHelper_op_Equality()
		{
		}

		[Token(Token = "0x6001C99")]
		[Address(RVA = "0xF7EAD8", Offset = "0xF7EAD8", VA = "0xF7EAD8")]
		[Preserve]
		public static void BoltEventDebugHelper_op_Implicit()
		{
		}

		[Token(Token = "0x6001C9A")]
		[Address(RVA = "0xF7EBA8", Offset = "0xF7EBA8", VA = "0xF7EBA8")]
		[Preserve]
		public static void BoltEventDebugHelper_op_Inequality()
		{
		}

		[Token(Token = "0x6001C9B")]
		[Address(RVA = "0xF7EC80", Offset = "0xF7EC80", VA = "0xF7EC80")]
		[Preserve]
		public static void BootState_op_Equality()
		{
		}

		[Token(Token = "0x6001C9C")]
		[Address(RVA = "0xF7ED58", Offset = "0xF7ED58", VA = "0xF7ED58")]
		[Preserve]
		public static void BootState_op_Implicit()
		{
		}

		[Token(Token = "0x6001C9D")]
		[Address(RVA = "0xF7EE28", Offset = "0xF7EE28", VA = "0xF7EE28")]
		[Preserve]
		public static void BootState_op_Inequality()
		{
		}

		[Token(Token = "0x6001C9E")]
		[Address(RVA = "0xF7EF00", Offset = "0xF7EF00", VA = "0xF7EF00")]
		[Preserve]
		public static void BoundingBox_ctor()
		{
		}

		[Token(Token = "0x6001C9F")]
		[Address(RVA = "0xF7EF50", Offset = "0xF7EF50", VA = "0xF7EF50")]
		[Preserve]
		public static void BoundingBox_op_Equality()
		{
		}

		[Token(Token = "0x6001CA0")]
		[Address(RVA = "0xF7F028", Offset = "0xF7F028", VA = "0xF7F028")]
		[Preserve]
		public static void BoundingBox_op_Implicit()
		{
		}

		[Token(Token = "0x6001CA1")]
		[Address(RVA = "0xF7F0F8", Offset = "0xF7F0F8", VA = "0xF7F0F8")]
		[Preserve]
		public static void BoundingBox_op_Inequality()
		{
		}

		[Token(Token = "0x6001CA2")]
		[Address(RVA = "0xF7F1D0", Offset = "0xF7F1D0", VA = "0xF7F1D0")]
		[Preserve]
		public static void ButtonAnimation_op_Equality()
		{
		}

		[Token(Token = "0x6001CA3")]
		[Address(RVA = "0xF7F2A8", Offset = "0xF7F2A8", VA = "0xF7F2A8")]
		[Preserve]
		public static void ButtonAnimation_op_Implicit()
		{
		}

		[Token(Token = "0x6001CA4")]
		[Address(RVA = "0xF7F378", Offset = "0xF7F378", VA = "0xF7F378")]
		[Preserve]
		public static void ButtonAnimation_op_Inequality()
		{
		}

		[Token(Token = "0x6001CA5")]
		[Address(RVA = "0xF7F450", Offset = "0xF7F450", VA = "0xF7F450")]
		[Preserve]
		public static void ButtonMaterialSwap_op_Equality()
		{
		}

		[Token(Token = "0x6001CA6")]
		[Address(RVA = "0xF7F528", Offset = "0xF7F528", VA = "0xF7F528")]
		[Preserve]
		public static void ButtonMaterialSwap_op_Implicit()
		{
		}

		[Token(Token = "0x6001CA7")]
		[Address(RVA = "0xF7F5F8", Offset = "0xF7F5F8", VA = "0xF7F5F8")]
		[Preserve]
		public static void ButtonMaterialSwap_op_Inequality()
		{
		}

		[Token(Token = "0x6001CA8")]
		[Address(RVA = "0xF7F6D0", Offset = "0xF7F6D0", VA = "0xF7F6D0")]
		[Preserve]
		public static void ButtonRumble_op_Equality()
		{
		}

		[Token(Token = "0x6001CA9")]
		[Address(RVA = "0xF7F7A8", Offset = "0xF7F7A8", VA = "0xF7F7A8")]
		[Preserve]
		public static void ButtonRumble_op_Implicit()
		{
		}

		[Token(Token = "0x6001CAA")]
		[Address(RVA = "0xF7F878", Offset = "0xF7F878", VA = "0xF7F878")]
		[Preserve]
		public static void ButtonRumble_op_Inequality()
		{
		}

		[Token(Token = "0x6001CAB")]
		[Address(RVA = "0xF7F950", Offset = "0xF7F950", VA = "0xF7F950")]
		[Preserve]
		public static void ButtonSound_op_Equality()
		{
		}

		[Token(Token = "0x6001CAC")]
		[Address(RVA = "0xF7FA28", Offset = "0xF7FA28", VA = "0xF7FA28")]
		[Preserve]
		public static void ButtonSound_op_Implicit()
		{
		}

		[Token(Token = "0x6001CAD")]
		[Address(RVA = "0xF7FAF8", Offset = "0xF7FAF8", VA = "0xF7FAF8")]
		[Preserve]
		public static void ButtonSound_op_Inequality()
		{
		}

		[Token(Token = "0x6001CAE")]
		[Address(RVA = "0xF7FBD0", Offset = "0xF7FBD0", VA = "0xF7FBD0")]
		[Preserve]
		public static void CameraColliderTrigger_op_Equality()
		{
		}

		[Token(Token = "0x6001CAF")]
		[Address(RVA = "0xF7FCA8", Offset = "0xF7FCA8", VA = "0xF7FCA8")]
		[Preserve]
		public static void CameraColliderTrigger_op_Implicit()
		{
		}

		[Token(Token = "0x6001CB0")]
		[Address(RVA = "0xF7FD78", Offset = "0xF7FD78", VA = "0xF7FD78")]
		[Preserve]
		public static void CameraColliderTrigger_op_Inequality()
		{
		}

		[Token(Token = "0x6001CB1")]
		[Address(RVA = "0xF7FE50", Offset = "0xF7FE50", VA = "0xF7FE50")]
		[Preserve]
		public static void CameraHandler_op_Equality()
		{
		}

		[Token(Token = "0x6001CB2")]
		[Address(RVA = "0xF7FF28", Offset = "0xF7FF28", VA = "0xF7FF28")]
		[Preserve]
		public static void CameraHandler_op_Implicit()
		{
		}

		[Token(Token = "0x6001CB3")]
		[Address(RVA = "0xF7FFF8", Offset = "0xF7FFF8", VA = "0xF7FFF8")]
		[Preserve]
		public static void CameraHandler_op_Inequality()
		{
		}

		[Token(Token = "0x6001CB4")]
		[Address(RVA = "0xF800D0", Offset = "0xF800D0", VA = "0xF800D0")]
		[Preserve]
		public static void Cartridge_op_Equality()
		{
		}

		[Token(Token = "0x6001CB5")]
		[Address(RVA = "0xF801A8", Offset = "0xF801A8", VA = "0xF801A8")]
		[Preserve]
		public static void Cartridge_op_Implicit()
		{
		}

		[Token(Token = "0x6001CB6")]
		[Address(RVA = "0xF80278", Offset = "0xF80278", VA = "0xF80278")]
		[Preserve]
		public static void Cartridge_op_Inequality()
		{
		}

		[Token(Token = "0x6001CB7")]
		[Address(RVA = "0xF80350", Offset = "0xF80350", VA = "0xF80350")]
		[Preserve]
		public static void CartridgeMachine_op_Equality()
		{
		}

		[Token(Token = "0x6001CB8")]
		[Address(RVA = "0xF80428", Offset = "0xF80428", VA = "0xF80428")]
		[Preserve]
		public static void CartridgeMachine_op_Implicit()
		{
		}

		[Token(Token = "0x6001CB9")]
		[Address(RVA = "0xF804F8", Offset = "0xF804F8", VA = "0xF804F8")]
		[Preserve]
		public static void CartridgeMachine_op_Inequality()
		{
		}

		[Token(Token = "0x6001CBA")]
		[Address(RVA = "0xF805D0", Offset = "0xF805D0", VA = "0xF805D0")]
		[Preserve]
		public static void CartridgePlayer_op_Equality()
		{
		}

		[Token(Token = "0x6001CBB")]
		[Address(RVA = "0xF806A8", Offset = "0xF806A8", VA = "0xF806A8")]
		[Preserve]
		public static void CartridgePlayer_op_Implicit()
		{
		}

		[Token(Token = "0x6001CBC")]
		[Address(RVA = "0xF80778", Offset = "0xF80778", VA = "0xF80778")]
		[Preserve]
		public static void CartridgePlayer_op_Inequality()
		{
		}

		[Token(Token = "0x6001CBD")]
		[Address(RVA = "0xF80850", Offset = "0xF80850", VA = "0xF80850")]
		[Preserve]
		public static void CartridgeRack_op_Equality()
		{
		}

		[Token(Token = "0x6001CBE")]
		[Address(RVA = "0xF80928", Offset = "0xF80928", VA = "0xF80928")]
		[Preserve]
		public static void CartridgeRack_op_Implicit()
		{
		}

		[Token(Token = "0x6001CBF")]
		[Address(RVA = "0xF809F8", Offset = "0xF809F8", VA = "0xF809F8")]
		[Preserve]
		public static void CartridgeRack_op_Inequality()
		{
		}

		[Token(Token = "0x6001CC0")]
		[Address(RVA = "0xF80AD0", Offset = "0xF80AD0", VA = "0xF80AD0")]
		[Preserve]
		public static void CartridgeRackSingleItemDock_op_Equality()
		{
		}

		[Token(Token = "0x6001CC1")]
		[Address(RVA = "0xF80BA8", Offset = "0xF80BA8", VA = "0xF80BA8")]
		[Preserve]
		public static void CartridgeRackSingleItemDock_op_Implicit()
		{
		}

		[Token(Token = "0x6001CC2")]
		[Address(RVA = "0xF80C78", Offset = "0xF80C78", VA = "0xF80C78")]
		[Preserve]
		public static void CartridgeRackSingleItemDock_op_Inequality()
		{
		}

		[Token(Token = "0x6001CC3")]
		[Address(RVA = "0xF80D50", Offset = "0xF80D50", VA = "0xF80D50")]
		[Preserve]
		public static void CartridgeSingleItemDock_op_Equality()
		{
		}

		[Token(Token = "0x6001CC4")]
		[Address(RVA = "0xF80E28", Offset = "0xF80E28", VA = "0xF80E28")]
		[Preserve]
		public static void CartridgeSingleItemDock_op_Implicit()
		{
		}

		[Token(Token = "0x6001CC5")]
		[Address(RVA = "0xF80EF8", Offset = "0xF80EF8", VA = "0xF80EF8")]
		[Preserve]
		public static void CartridgeSingleItemDock_op_Inequality()
		{
		}

		[Token(Token = "0x6001CC6")]
		[Address(RVA = "0xF80FD0", Offset = "0xF80FD0", VA = "0xF80FD0")]
		[Preserve]
		public static void CassettePlayerCosmetics_op_Equality()
		{
		}

		[Token(Token = "0x6001CC7")]
		[Address(RVA = "0xF810A8", Offset = "0xF810A8", VA = "0xF810A8")]
		[Preserve]
		public static void CassettePlayerCosmetics_op_Implicit()
		{
		}

		[Token(Token = "0x6001CC8")]
		[Address(RVA = "0xF81178", Offset = "0xF81178", VA = "0xF81178")]
		[Preserve]
		public static void CassettePlayerCosmetics_op_Inequality()
		{
		}

		[Token(Token = "0x6001CC9")]
		[Address(RVA = "0xF81250", Offset = "0xF81250", VA = "0xF81250")]
		[Preserve]
		public static void CharacterControllerObjectPusher_op_Equality()
		{
		}

		[Token(Token = "0x6001CCA")]
		[Address(RVA = "0xF81328", Offset = "0xF81328", VA = "0xF81328")]
		[Preserve]
		public static void CharacterControllerObjectPusher_op_Implicit()
		{
		}

		[Token(Token = "0x6001CCB")]
		[Address(RVA = "0xF813F8", Offset = "0xF813F8", VA = "0xF813F8")]
		[Preserve]
		public static void CharacterControllerObjectPusher_op_Inequality()
		{
		}

		[Token(Token = "0x6001CCC")]
		[Address(RVA = "0xF814D0", Offset = "0xF814D0", VA = "0xF814D0")]
		[Preserve]
		public static void CheckpointLightmapSwitcher_op_Equality()
		{
		}

		[Token(Token = "0x6001CCD")]
		[Address(RVA = "0xF815A8", Offset = "0xF815A8", VA = "0xF815A8")]
		[Preserve]
		public static void CheckpointLightmapSwitcher_op_Implicit()
		{
		}

		[Token(Token = "0x6001CCE")]
		[Address(RVA = "0xF81678", Offset = "0xF81678", VA = "0xF81678")]
		[Preserve]
		public static void CheckpointLightmapSwitcher_op_Inequality()
		{
		}

		[Token(Token = "0x6001CCF")]
		[Address(RVA = "0xF81750", Offset = "0xF81750", VA = "0xF81750")]
		[Preserve]
		public static void CollectableStatUI_op_Equality()
		{
		}

		[Token(Token = "0x6001CD0")]
		[Address(RVA = "0xF81828", Offset = "0xF81828", VA = "0xF81828")]
		[Preserve]
		public static void CollectableStatUI_op_Implicit()
		{
		}

		[Token(Token = "0x6001CD1")]
		[Address(RVA = "0xF818F8", Offset = "0xF818F8", VA = "0xF818F8")]
		[Preserve]
		public static void CollectableStatUI_op_Inequality()
		{
		}

		[Token(Token = "0x6001CD2")]
		[Address(RVA = "0xF819D0", Offset = "0xF819D0", VA = "0xF819D0")]
		[Preserve]
		public static void ColliderWithExclusions_op_Equality()
		{
		}

		[Token(Token = "0x6001CD3")]
		[Address(RVA = "0xF81AA8", Offset = "0xF81AA8", VA = "0xF81AA8")]
		[Preserve]
		public static void ColliderWithExclusions_op_Implicit()
		{
		}

		[Token(Token = "0x6001CD4")]
		[Address(RVA = "0xF81B78", Offset = "0xF81B78", VA = "0xF81B78")]
		[Preserve]
		public static void ColliderWithExclusions_op_Inequality()
		{
		}

		[Token(Token = "0x6001CD5")]
		[Address(RVA = "0xF81C50", Offset = "0xF81C50", VA = "0xF81C50")]
		[Preserve]
		public static void CollisionPropAudio_op_Equality()
		{
		}

		[Token(Token = "0x6001CD6")]
		[Address(RVA = "0xF81D28", Offset = "0xF81D28", VA = "0xF81D28")]
		[Preserve]
		public static void CollisionPropAudio_op_Implicit()
		{
		}

		[Token(Token = "0x6001CD7")]
		[Address(RVA = "0xF81DF8", Offset = "0xF81DF8", VA = "0xF81DF8")]
		[Preserve]
		public static void CollisionPropAudio_op_Inequality()
		{
		}

		[Token(Token = "0x6001CD8")]
		[Address(RVA = "0xF81ED0", Offset = "0xF81ED0", VA = "0xF81ED0")]
		[Preserve]
		public static void ComponentsCopier_op_Equality()
		{
		}

		[Token(Token = "0x6001CD9")]
		[Address(RVA = "0xF81FA8", Offset = "0xF81FA8", VA = "0xF81FA8")]
		[Preserve]
		public static void ComponentsCopier_op_Implicit()
		{
		}

		[Token(Token = "0x6001CDA")]
		[Address(RVA = "0xF82078", Offset = "0xF82078", VA = "0xF82078")]
		[Preserve]
		public static void ComponentsCopier_op_Inequality()
		{
		}

		[Token(Token = "0x6001CDB")]
		[Address(RVA = "0xF82150", Offset = "0xF82150", VA = "0xF82150")]
		[Preserve]
		public static void ConsoleMixerMute_op_Equality()
		{
		}

		[Token(Token = "0x6001CDC")]
		[Address(RVA = "0xF82228", Offset = "0xF82228", VA = "0xF82228")]
		[Preserve]
		public static void ConsoleMixerMute_op_Implicit()
		{
		}

		[Token(Token = "0x6001CDD")]
		[Address(RVA = "0xF822F8", Offset = "0xF822F8", VA = "0xF822F8")]
		[Preserve]
		public static void ConsoleMixerMute_op_Inequality()
		{
		}

		[Token(Token = "0x6001CDE")]
		[Address(RVA = "0xF823D0", Offset = "0xF823D0", VA = "0xF823D0")]
		[Preserve]
		public static void ConsoleMixerScope_op_Equality()
		{
		}

		[Token(Token = "0x6001CDF")]
		[Address(RVA = "0xF824A8", Offset = "0xF824A8", VA = "0xF824A8")]
		[Preserve]
		public static void ConsoleMixerScope_op_Implicit()
		{
		}

		[Token(Token = "0x6001CE0")]
		[Address(RVA = "0xF82578", Offset = "0xF82578", VA = "0xF82578")]
		[Preserve]
		public static void ConsoleMixerScope_op_Inequality()
		{
		}

		[Token(Token = "0x6001CE1")]
		[Address(RVA = "0xF82650", Offset = "0xF82650", VA = "0xF82650")]
		[Preserve]
		public static void ContainerAttachmentMonitor_op_Equality()
		{
		}

		[Token(Token = "0x6001CE2")]
		[Address(RVA = "0xF82728", Offset = "0xF82728", VA = "0xF82728")]
		[Preserve]
		public static void ContainerAttachmentMonitor_op_Implicit()
		{
		}

		[Token(Token = "0x6001CE3")]
		[Address(RVA = "0xF827F8", Offset = "0xF827F8", VA = "0xF827F8")]
		[Preserve]
		public static void ContainerAttachmentMonitor_op_Inequality()
		{
		}

		[Token(Token = "0x6001CE4")]
		[Address(RVA = "0xF828D0", Offset = "0xF828D0", VA = "0xF828D0")]
		[Preserve]
		public static void CreditScroll_op_Equality()
		{
		}

		[Token(Token = "0x6001CE5")]
		[Address(RVA = "0xF829A8", Offset = "0xF829A8", VA = "0xF829A8")]
		[Preserve]
		public static void CreditScroll_op_Implicit()
		{
		}

		[Token(Token = "0x6001CE6")]
		[Address(RVA = "0xF82A78", Offset = "0xF82A78", VA = "0xF82A78")]
		[Preserve]
		public static void CreditScroll_op_Inequality()
		{
		}

		[Token(Token = "0x6001CE7")]
		[Address(RVA = "0xF82B50", Offset = "0xF82B50", VA = "0xF82B50")]
		[Preserve]
		public static void DebugFreeCamera_op_Equality()
		{
		}

		[Token(Token = "0x6001CE8")]
		[Address(RVA = "0xF82C28", Offset = "0xF82C28", VA = "0xF82C28")]
		[Preserve]
		public static void DebugFreeCamera_op_Implicit()
		{
		}

		[Token(Token = "0x6001CE9")]
		[Address(RVA = "0xF82CF8", Offset = "0xF82CF8", VA = "0xF82CF8")]
		[Preserve]
		public static void DebugFreeCamera_op_Inequality()
		{
		}

		[Token(Token = "0x6001CEA")]
		[Address(RVA = "0xF82DD0", Offset = "0xF82DD0", VA = "0xF82DD0")]
		[Preserve]
		public static void DebugManager_op_Equality()
		{
		}

		[Token(Token = "0x6001CEB")]
		[Address(RVA = "0xF82EA8", Offset = "0xF82EA8", VA = "0xF82EA8")]
		[Preserve]
		public static void DebugManager_op_Implicit()
		{
		}

		[Token(Token = "0x6001CEC")]
		[Address(RVA = "0xF82F78", Offset = "0xF82F78", VA = "0xF82F78")]
		[Preserve]
		public static void DebugManager_op_Inequality()
		{
		}

		[Token(Token = "0x6001CED")]
		[Address(RVA = "0xF83050", Offset = "0xF83050", VA = "0xF83050")]
		[Preserve]
		public static void DefaultSettingsProvider_op_Equality()
		{
		}

		[Token(Token = "0x6001CEE")]
		[Address(RVA = "0xF83128", Offset = "0xF83128", VA = "0xF83128")]
		[Preserve]
		public static void DefaultSettingsProvider_op_Implicit()
		{
		}

		[Token(Token = "0x6001CEF")]
		[Address(RVA = "0xF831F8", Offset = "0xF831F8", VA = "0xF831F8")]
		[Preserve]
		public static void DefaultSettingsProvider_op_Inequality()
		{
		}

		[Token(Token = "0x6001CF0")]
		[Address(RVA = "0xF832D0", Offset = "0xF832D0", VA = "0xF832D0")]
		[Preserve]
		public static void DeleteSaveState_op_Equality()
		{
		}

		[Token(Token = "0x6001CF1")]
		[Address(RVA = "0xF833A8", Offset = "0xF833A8", VA = "0xF833A8")]
		[Preserve]
		public static void DeleteSaveState_op_Implicit()
		{
		}

		[Token(Token = "0x6001CF2")]
		[Address(RVA = "0xF83478", Offset = "0xF83478", VA = "0xF83478")]
		[Preserve]
		public static void DeleteSaveState_op_Inequality()
		{
		}

		[Token(Token = "0x6001CF3")]
		[Address(RVA = "0xF83550", Offset = "0xF83550", VA = "0xF83550")]
		[Preserve]
		public static void DemoSceneLoader_op_Equality()
		{
		}

		[Token(Token = "0x6001CF4")]
		[Address(RVA = "0xF83628", Offset = "0xF83628", VA = "0xF83628")]
		[Preserve]
		public static void DemoSceneLoader_op_Implicit()
		{
		}

		[Token(Token = "0x6001CF5")]
		[Address(RVA = "0xF836F8", Offset = "0xF836F8", VA = "0xF836F8")]
		[Preserve]
		public static void DemoSceneLoader_op_Inequality()
		{
		}

		[Token(Token = "0x6001CF6")]
		[Address(RVA = "0xF837D0", Offset = "0xF837D0", VA = "0xF837D0")]
		[Preserve]
		public static void DeskAudioManager_op_Equality()
		{
		}

		[Token(Token = "0x6001CF7")]
		[Address(RVA = "0xF838A8", Offset = "0xF838A8", VA = "0xF838A8")]
		[Preserve]
		public static void DeskAudioManager_op_Implicit()
		{
		}

		[Token(Token = "0x6001CF8")]
		[Address(RVA = "0xF83978", Offset = "0xF83978", VA = "0xF83978")]
		[Preserve]
		public static void DeskAudioManager_op_Inequality()
		{
		}

		[Token(Token = "0x6001CF9")]
		[Address(RVA = "0xF83A50", Offset = "0xF83A50", VA = "0xF83A50")]
		[Preserve]
		public static void DeskChairScope_op_Equality()
		{
		}

		[Token(Token = "0x6001CFA")]
		[Address(RVA = "0xF83B28", Offset = "0xF83B28", VA = "0xF83B28")]
		[Preserve]
		public static void DeskChairScope_op_Implicit()
		{
		}

		[Token(Token = "0x6001CFB")]
		[Address(RVA = "0xF83BF8", Offset = "0xF83BF8", VA = "0xF83BF8")]
		[Preserve]
		public static void DeskChairScope_op_Inequality()
		{
		}

		[Token(Token = "0x6001CFC")]
		[Address(RVA = "0xF83CD0", Offset = "0xF83CD0", VA = "0xF83CD0")]
		[Preserve]
		public static void DeskMicrophone_op_Equality()
		{
		}

		[Token(Token = "0x6001CFD")]
		[Address(RVA = "0xF83DA8", Offset = "0xF83DA8", VA = "0xF83DA8")]
		[Preserve]
		public static void DeskMicrophone_op_Implicit()
		{
		}

		[Token(Token = "0x6001CFE")]
		[Address(RVA = "0xF83E78", Offset = "0xF83E78", VA = "0xF83E78")]
		[Preserve]
		public static void DeskMicrophone_op_Inequality()
		{
		}

		[Token(Token = "0x6001CFF")]
		[Address(RVA = "0xF83F50", Offset = "0xF83F50", VA = "0xF83F50")]
		[Preserve]
		public static void DialogAnchor_op_Equality()
		{
		}

		[Token(Token = "0x6001D00")]
		[Address(RVA = "0xF84028", Offset = "0xF84028", VA = "0xF84028")]
		[Preserve]
		public static void DialogAnchor_op_Implicit()
		{
		}

		[Token(Token = "0x6001D01")]
		[Address(RVA = "0xF840F8", Offset = "0xF840F8", VA = "0xF840F8")]
		[Preserve]
		public static void DialogAnchor_op_Inequality()
		{
		}

		[Token(Token = "0x6001D02")]
		[Address(RVA = "0xF841D0", Offset = "0xF841D0", VA = "0xF841D0")]
		[Preserve]
		public static void Dictaphone_op_Equality()
		{
		}

		[Token(Token = "0x6001D03")]
		[Address(RVA = "0xF842A8", Offset = "0xF842A8", VA = "0xF842A8")]
		[Preserve]
		public static void Dictaphone_op_Implicit()
		{
		}

		[Token(Token = "0x6001D04")]
		[Address(RVA = "0xF84378", Offset = "0xF84378", VA = "0xF84378")]
		[Preserve]
		public static void Dictaphone_op_Inequality()
		{
		}

		[Token(Token = "0x6001D05")]
		[Address(RVA = "0xF84450", Offset = "0xF84450", VA = "0xF84450")]
		[Preserve]
		public static void DiegeticTextDetector_op_Equality()
		{
		}

		[Token(Token = "0x6001D06")]
		[Address(RVA = "0xF84528", Offset = "0xF84528", VA = "0xF84528")]
		[Preserve]
		public static void DiegeticTextDetector_op_Implicit()
		{
		}

		[Token(Token = "0x6001D07")]
		[Address(RVA = "0xF845F8", Offset = "0xF845F8", VA = "0xF845F8")]
		[Preserve]
		public static void DiegeticTextDetector_op_Inequality()
		{
		}

		[Token(Token = "0x6001D08")]
		[Address(RVA = "0xF846D0", Offset = "0xF846D0", VA = "0xF846D0")]
		[Preserve]
		public static void DiegeticTextLocalizer_op_Equality()
		{
		}

		[Token(Token = "0x6001D09")]
		[Address(RVA = "0xF847A8", Offset = "0xF847A8", VA = "0xF847A8")]
		[Preserve]
		public static void DiegeticTextLocalizer_op_Implicit()
		{
		}

		[Token(Token = "0x6001D0A")]
		[Address(RVA = "0xF84878", Offset = "0xF84878", VA = "0xF84878")]
		[Preserve]
		public static void DiegeticTextLocalizer_op_Inequality()
		{
		}

		[Token(Token = "0x6001D0B")]
		[Address(RVA = "0xF84950", Offset = "0xF84950", VA = "0xF84950")]
		[Preserve]
		public static void DitzelGames_FastIK_FastIKFabric_op_Equality()
		{
		}

		[Token(Token = "0x6001D0C")]
		[Address(RVA = "0xF84A28", Offset = "0xF84A28", VA = "0xF84A28")]
		[Preserve]
		public static void DitzelGames_FastIK_FastIKFabric_op_Implicit()
		{
		}

		[Token(Token = "0x6001D0D")]
		[Address(RVA = "0xF84AF8", Offset = "0xF84AF8", VA = "0xF84AF8")]
		[Preserve]
		public static void DitzelGames_FastIK_FastIKFabric_op_Inequality()
		{
		}

		[Token(Token = "0x6001D0E")]
		[Address(RVA = "0xF84BD0", Offset = "0xF84BD0", VA = "0xF84BD0")]
		[Preserve]
		public static void DitzelGames_FastIK_FastIKLook_op_Equality()
		{
		}

		[Token(Token = "0x6001D0F")]
		[Address(RVA = "0xF84CA8", Offset = "0xF84CA8", VA = "0xF84CA8")]
		[Preserve]
		public static void DitzelGames_FastIK_FastIKLook_op_Implicit()
		{
		}

		[Token(Token = "0x6001D10")]
		[Address(RVA = "0xF84D78", Offset = "0xF84D78", VA = "0xF84D78")]
		[Preserve]
		public static void DitzelGames_FastIK_FastIKLook_op_Inequality()
		{
		}

		[Token(Token = "0x6001D11")]
		[Address(RVA = "0xF84E50", Offset = "0xF84E50", VA = "0xF84E50")]
		[Preserve]
		public static void DitzelGames_FastIK_SampleRotator_op_Equality()
		{
		}

		[Token(Token = "0x6001D12")]
		[Address(RVA = "0xF84F28", Offset = "0xF84F28", VA = "0xF84F28")]
		[Preserve]
		public static void DitzelGames_FastIK_SampleRotator_op_Implicit()
		{
		}

		[Token(Token = "0x6001D13")]
		[Address(RVA = "0xF84FF8", Offset = "0xF84FF8", VA = "0xF84FF8")]
		[Preserve]
		public static void DitzelGames_FastIK_SampleRotator_op_Inequality()
		{
		}

		[Token(Token = "0x6001D14")]
		[Address(RVA = "0xF850D0", Offset = "0xF850D0", VA = "0xF850D0")]
		[Preserve]
		public static void DitzelGames_FastIK_SampleSinMover_op_Equality()
		{
		}

		[Token(Token = "0x6001D15")]
		[Address(RVA = "0xF851A8", Offset = "0xF851A8", VA = "0xF851A8")]
		[Preserve]
		public static void DitzelGames_FastIK_SampleSinMover_op_Implicit()
		{
		}

		[Token(Token = "0x6001D16")]
		[Address(RVA = "0xF85278", Offset = "0xF85278", VA = "0xF85278")]
		[Preserve]
		public static void DitzelGames_FastIK_SampleSinMover_op_Inequality()
		{
		}

		[Token(Token = "0x6001D17")]
		[Address(RVA = "0xF85350", Offset = "0xF85350", VA = "0xF85350")]
		[Preserve]
		public static void DockInteractionPreview_op_Equality()
		{
		}

		[Token(Token = "0x6001D18")]
		[Address(RVA = "0xF85428", Offset = "0xF85428", VA = "0xF85428")]
		[Preserve]
		public static void DockInteractionPreview_op_Implicit()
		{
		}

		[Token(Token = "0x6001D19")]
		[Address(RVA = "0xF854F8", Offset = "0xF854F8", VA = "0xF854F8")]
		[Preserve]
		public static void DockInteractionPreview_op_Inequality()
		{
		}

		[Token(Token = "0x6001D1A")]
		[Address(RVA = "0xF855D0", Offset = "0xF855D0", VA = "0xF855D0")]
		[Preserve]
		public static void DoorLocked_op_Equality()
		{
		}

		[Token(Token = "0x6001D1B")]
		[Address(RVA = "0xF856A8", Offset = "0xF856A8", VA = "0xF856A8")]
		[Preserve]
		public static void DoorLocked_op_Implicit()
		{
		}

		[Token(Token = "0x6001D1C")]
		[Address(RVA = "0xF85778", Offset = "0xF85778", VA = "0xF85778")]
		[Preserve]
		public static void DoorLocked_op_Inequality()
		{
		}

		[Token(Token = "0x6001D1D")]
		[Address(RVA = "0xF85850", Offset = "0xF85850", VA = "0xF85850")]
		[Preserve]
		public static void DoorLockTrigger_op_Equality()
		{
		}

		[Token(Token = "0x6001D1E")]
		[Address(RVA = "0xF85928", Offset = "0xF85928", VA = "0xF85928")]
		[Preserve]
		public static void DoorLockTrigger_op_Implicit()
		{
		}

		[Token(Token = "0x6001D1F")]
		[Address(RVA = "0xF859F8", Offset = "0xF859F8", VA = "0xF859F8")]
		[Preserve]
		public static void DoorLockTrigger_op_Inequality()
		{
		}

		[Token(Token = "0x6001D20")]
		[Address(RVA = "0xF85AD0", Offset = "0xF85AD0", VA = "0xF85AD0")]
		[Preserve]
		public static void DoorOcclusionPortal_op_Equality()
		{
		}

		[Token(Token = "0x6001D21")]
		[Address(RVA = "0xF85BA8", Offset = "0xF85BA8", VA = "0xF85BA8")]
		[Preserve]
		public static void DoorOcclusionPortal_op_Implicit()
		{
		}

		[Token(Token = "0x6001D22")]
		[Address(RVA = "0xF85C78", Offset = "0xF85C78", VA = "0xF85C78")]
		[Preserve]
		public static void DoorOcclusionPortal_op_Inequality()
		{
		}

		[Token(Token = "0x6001D23")]
		[Address(RVA = "0xF85D50", Offset = "0xF85D50", VA = "0xF85D50")]
		[Preserve]
		public static void DoorOpenable_op_Equality()
		{
		}

		[Token(Token = "0x6001D24")]
		[Address(RVA = "0xF85E28", Offset = "0xF85E28", VA = "0xF85E28")]
		[Preserve]
		public static void DoorOpenable_op_Implicit()
		{
		}

		[Token(Token = "0x6001D25")]
		[Address(RVA = "0xF85EF8", Offset = "0xF85EF8", VA = "0xF85EF8")]
		[Preserve]
		public static void DoorOpenable_op_Inequality()
		{
		}

		[Token(Token = "0x6001D26")]
		[Address(RVA = "0xF85FD0", Offset = "0xF85FD0", VA = "0xF85FD0")]
		[Preserve]
		public static void DoorRoomSelector_op_Equality()
		{
		}

		[Token(Token = "0x6001D27")]
		[Address(RVA = "0xF860A8", Offset = "0xF860A8", VA = "0xF860A8")]
		[Preserve]
		public static void DoorRoomSelector_op_Implicit()
		{
		}

		[Token(Token = "0x6001D28")]
		[Address(RVA = "0xF86178", Offset = "0xF86178", VA = "0xF86178")]
		[Preserve]
		public static void DoorRoomSelector_op_Inequality()
		{
		}

		[Token(Token = "0x6001D29")]
		[Address(RVA = "0xF86250", Offset = "0xF86250", VA = "0xF86250")]
		[Preserve]
		public static void DrawerOpenable_op_Equality()
		{
		}

		[Token(Token = "0x6001D2A")]
		[Address(RVA = "0xF86328", Offset = "0xF86328", VA = "0xF86328")]
		[Preserve]
		public static void DrawerOpenable_op_Implicit()
		{
		}

		[Token(Token = "0x6001D2B")]
		[Address(RVA = "0xF863F8", Offset = "0xF863F8", VA = "0xF863F8")]
		[Preserve]
		public static void DrawerOpenable_op_Inequality()
		{
		}

		[Token(Token = "0x6001D2C")]
		[Address(RVA = "0xF864D0", Offset = "0xF864D0", VA = "0xF864D0")]
		[Preserve]
		public static void Dressing_Character_op_Equality()
		{
		}

		[Token(Token = "0x6001D2D")]
		[Address(RVA = "0xF865A8", Offset = "0xF865A8", VA = "0xF865A8")]
		[Preserve]
		public static void Dressing_Character_op_Implicit()
		{
		}

		[Token(Token = "0x6001D2E")]
		[Address(RVA = "0xF86678", Offset = "0xF86678", VA = "0xF86678")]
		[Preserve]
		public static void Dressing_Character_op_Inequality()
		{
		}

		[Token(Token = "0x6001D2F")]
		[Address(RVA = "0xF86750", Offset = "0xF86750", VA = "0xF86750")]
		[Preserve]
		public static void Dressing_Clock_op_Equality()
		{
		}

		[Token(Token = "0x6001D30")]
		[Address(RVA = "0xF86828", Offset = "0xF86828", VA = "0xF86828")]
		[Preserve]
		public static void Dressing_Clock_op_Implicit()
		{
		}

		[Token(Token = "0x6001D31")]
		[Address(RVA = "0xF868F8", Offset = "0xF868F8", VA = "0xF868F8")]
		[Preserve]
		public static void Dressing_Clock_op_Inequality()
		{
		}

		[Token(Token = "0x6001D32")]
		[Address(RVA = "0xF869D0", Offset = "0xF869D0", VA = "0xF869D0")]
		[Preserve]
		public static void DropInteraction_op_Equality()
		{
		}

		[Token(Token = "0x6001D33")]
		[Address(RVA = "0xF86AA8", Offset = "0xF86AA8", VA = "0xF86AA8")]
		[Preserve]
		public static void DropInteraction_op_Implicit()
		{
		}

		[Token(Token = "0x6001D34")]
		[Address(RVA = "0xF86B78", Offset = "0xF86B78", VA = "0xF86B78")]
		[Preserve]
		public static void DropInteraction_op_Inequality()
		{
		}

		[Token(Token = "0x6001D35")]
		[Address(RVA = "0xF86C50", Offset = "0xF86C50", VA = "0xF86C50")]
		[Preserve]
		public static void EditorPlatformSetupHandler_op_Equality()
		{
		}

		[Token(Token = "0x6001D36")]
		[Address(RVA = "0xF86D28", Offset = "0xF86D28", VA = "0xF86D28")]
		[Preserve]
		public static void EditorPlatformSetupHandler_op_Implicit()
		{
		}

		[Token(Token = "0x6001D37")]
		[Address(RVA = "0xF86DF8", Offset = "0xF86DF8", VA = "0xF86DF8")]
		[Preserve]
		public static void EditorPlatformSetupHandler_op_Inequality()
		{
		}

		[Token(Token = "0x6001D38")]
		[Address(RVA = "0xF86ED0", Offset = "0xF86ED0", VA = "0xF86ED0")]
		[Preserve]
		public static void EmissionMaterialHelper_op_Equality()
		{
		}

		[Token(Token = "0x6001D39")]
		[Address(RVA = "0xF86FA8", Offset = "0xF86FA8", VA = "0xF86FA8")]
		[Preserve]
		public static void EmissionMaterialHelper_op_Implicit()
		{
		}

		[Token(Token = "0x6001D3A")]
		[Address(RVA = "0xF87078", Offset = "0xF87078", VA = "0xF87078")]
		[Preserve]
		public static void EmissionMaterialHelper_op_Inequality()
		{
		}

		[Token(Token = "0x6001D3B")]
		[Address(RVA = "0xF87150", Offset = "0xF87150", VA = "0xF87150")]
		[Preserve]
		public static void EngagementActivityTransitionState_op_Equality()
		{
		}

		[Token(Token = "0x6001D3C")]
		[Address(RVA = "0xF87228", Offset = "0xF87228", VA = "0xF87228")]
		[Preserve]
		public static void EngagementActivityTransitionState_op_Implicit()
		{
		}

		[Token(Token = "0x6001D3D")]
		[Address(RVA = "0xF872F8", Offset = "0xF872F8", VA = "0xF872F8")]
		[Preserve]
		public static void EngagementActivityTransitionState_op_Inequality()
		{
		}

		[Token(Token = "0x6001D3E")]
		[Address(RVA = "0xF873D0", Offset = "0xF873D0", VA = "0xF873D0")]
		[Preserve]
		public static void EngagementAutomatedTestingState_op_Equality()
		{
		}

		[Token(Token = "0x6001D3F")]
		[Address(RVA = "0xF874A8", Offset = "0xF874A8", VA = "0xF874A8")]
		[Preserve]
		public static void EngagementAutomatedTestingState_op_Implicit()
		{
		}

		[Token(Token = "0x6001D40")]
		[Address(RVA = "0xF87578", Offset = "0xF87578", VA = "0xF87578")]
		[Preserve]
		public static void EngagementAutomatedTestingState_op_Inequality()
		{
		}

		[Token(Token = "0x6001D41")]
		[Address(RVA = "0xF87650", Offset = "0xF87650", VA = "0xF87650")]
		[Preserve]
		public static void EngagementScreen_op_Equality()
		{
		}

		[Token(Token = "0x6001D42")]
		[Address(RVA = "0xF87728", Offset = "0xF87728", VA = "0xF87728")]
		[Preserve]
		public static void EngagementScreen_op_Implicit()
		{
		}

		[Token(Token = "0x6001D43")]
		[Address(RVA = "0xF877F8", Offset = "0xF877F8", VA = "0xF877F8")]
		[Preserve]
		public static void EngagementScreen_op_Inequality()
		{
		}

		[Token(Token = "0x6001D44")]
		[Address(RVA = "0xF878D0", Offset = "0xF878D0", VA = "0xF878D0")]
		[Preserve]
		public static void EngagementState_op_Equality()
		{
		}

		[Token(Token = "0x6001D45")]
		[Address(RVA = "0xF879A8", Offset = "0xF879A8", VA = "0xF879A8")]
		[Preserve]
		public static void EngagementState_op_Implicit()
		{
		}

		[Token(Token = "0x6001D46")]
		[Address(RVA = "0xF87A78", Offset = "0xF87A78", VA = "0xF87A78")]
		[Preserve]
		public static void EngagementState_op_Inequality()
		{
		}

		[Token(Token = "0x6001D47")]
		[Address(RVA = "0xF87B50", Offset = "0xF87B50", VA = "0xF87B50")]
		[Preserve]
		public static void EnterConsoleMixerInteraction_op_Equality()
		{
		}

		[Token(Token = "0x6001D48")]
		[Address(RVA = "0xF87C28", Offset = "0xF87C28", VA = "0xF87C28")]
		[Preserve]
		public static void EnterConsoleMixerInteraction_op_Implicit()
		{
		}

		[Token(Token = "0x6001D49")]
		[Address(RVA = "0xF87CF8", Offset = "0xF87CF8", VA = "0xF87CF8")]
		[Preserve]
		public static void EnterConsoleMixerInteraction_op_Inequality()
		{
		}

		[Token(Token = "0x6001D4A")]
		[Address(RVA = "0xF87DD0", Offset = "0xF87DD0", VA = "0xF87DD0")]
		[Preserve]
		public static void EnterPinboardInteraction_op_Equality()
		{
		}

		[Token(Token = "0x6001D4B")]
		[Address(RVA = "0xF87EA8", Offset = "0xF87EA8", VA = "0xF87EA8")]
		[Preserve]
		public static void EnterPinboardInteraction_op_Implicit()
		{
		}

		[Token(Token = "0x6001D4C")]
		[Address(RVA = "0xF87F78", Offset = "0xF87F78", VA = "0xF87F78")]
		[Preserve]
		public static void EnterPinboardInteraction_op_Inequality()
		{
		}

		[Token(Token = "0x6001D4D")]
		[Address(RVA = "0xF88050", Offset = "0xF88050", VA = "0xF88050")]
		[Preserve]
		public static void EnterRecordDrawerInteraction_op_Equality()
		{
		}

		[Token(Token = "0x6001D4E")]
		[Address(RVA = "0xF88128", Offset = "0xF88128", VA = "0xF88128")]
		[Preserve]
		public static void EnterRecordDrawerInteraction_op_Implicit()
		{
		}

		[Token(Token = "0x6001D4F")]
		[Address(RVA = "0xF881F8", Offset = "0xF881F8", VA = "0xF881F8")]
		[Preserve]
		public static void EnterRecordDrawerInteraction_op_Inequality()
		{
		}

		[Token(Token = "0x6001D50")]
		[Address(RVA = "0xF882D0", Offset = "0xF882D0", VA = "0xF882D0")]
		[Preserve]
		public static void EpilogueAchievementTrigger_op_Equality()
		{
		}

		[Token(Token = "0x6001D51")]
		[Address(RVA = "0xF883A8", Offset = "0xF883A8", VA = "0xF883A8")]
		[Preserve]
		public static void EpilogueAchievementTrigger_op_Implicit()
		{
		}

		[Token(Token = "0x6001D52")]
		[Address(RVA = "0xF88478", Offset = "0xF88478", VA = "0xF88478")]
		[Preserve]
		public static void EpilogueAchievementTrigger_op_Inequality()
		{
		}

		[Token(Token = "0x6001D53")]
		[Address(RVA = "0xF88550", Offset = "0xF88550", VA = "0xF88550")]
		[Preserve]
		public static void EventManager_op_Equality()
		{
		}

		[Token(Token = "0x6001D54")]
		[Address(RVA = "0xF88628", Offset = "0xF88628", VA = "0xF88628")]
		[Preserve]
		public static void EventManager_op_Implicit()
		{
		}

		[Token(Token = "0x6001D55")]
		[Address(RVA = "0xF886F8", Offset = "0xF886F8", VA = "0xF886F8")]
		[Preserve]
		public static void EventManager_op_Inequality()
		{
		}

		[Token(Token = "0x6001D56")]
		[Address(RVA = "0xF887D0", Offset = "0xF887D0", VA = "0xF887D0")]
		[Preserve]
		public static void ExitConsoleMixerInteraction_op_Equality()
		{
		}

		[Token(Token = "0x6001D57")]
		[Address(RVA = "0xF888A8", Offset = "0xF888A8", VA = "0xF888A8")]
		[Preserve]
		public static void ExitConsoleMixerInteraction_op_Implicit()
		{
		}

		[Token(Token = "0x6001D58")]
		[Address(RVA = "0xF88978", Offset = "0xF88978", VA = "0xF88978")]
		[Preserve]
		public static void ExitConsoleMixerInteraction_op_Inequality()
		{
		}

		[Token(Token = "0x6001D59")]
		[Address(RVA = "0xF88A50", Offset = "0xF88A50", VA = "0xF88A50")]
		[Preserve]
		public static void ExitPinboardInteraction_op_Equality()
		{
		}

		[Token(Token = "0x6001D5A")]
		[Address(RVA = "0xF88B28", Offset = "0xF88B28", VA = "0xF88B28")]
		[Preserve]
		public static void ExitPinboardInteraction_op_Implicit()
		{
		}

		[Token(Token = "0x6001D5B")]
		[Address(RVA = "0xF88BF8", Offset = "0xF88BF8", VA = "0xF88BF8")]
		[Preserve]
		public static void ExitPinboardInteraction_op_Inequality()
		{
		}

		[Token(Token = "0x6001D5C")]
		[Address(RVA = "0xF88CD0", Offset = "0xF88CD0", VA = "0xF88CD0")]
		[Preserve]
		public static void ExitRecordDrawerInteraction_op_Equality()
		{
		}

		[Token(Token = "0x6001D5D")]
		[Address(RVA = "0xF88DA8", Offset = "0xF88DA8", VA = "0xF88DA8")]
		[Preserve]
		public static void ExitRecordDrawerInteraction_op_Implicit()
		{
		}

		[Token(Token = "0x6001D5E")]
		[Address(RVA = "0xF88E78", Offset = "0xF88E78", VA = "0xF88E78")]
		[Preserve]
		public static void ExitRecordDrawerInteraction_op_Inequality()
		{
		}

		[Token(Token = "0x6001D5F")]
		[Address(RVA = "0xF88F50", Offset = "0xF88F50", VA = "0xF88F50")]
		[Preserve]
		public static void FactMeshEnabler_op_Equality()
		{
		}

		[Token(Token = "0x6001D60")]
		[Address(RVA = "0xF89028", Offset = "0xF89028", VA = "0xF89028")]
		[Preserve]
		public static void FactMeshEnabler_op_Implicit()
		{
		}

		[Token(Token = "0x6001D61")]
		[Address(RVA = "0xF890F8", Offset = "0xF890F8", VA = "0xF890F8")]
		[Preserve]
		public static void FactMeshEnabler_op_Inequality()
		{
		}

		[Token(Token = "0x6001D62")]
		[Address(RVA = "0xF891D0", Offset = "0xF891D0", VA = "0xF891D0")]
		[Preserve]
		public static void FadeEffectEndpoint_op_Equality()
		{
		}

		[Token(Token = "0x6001D63")]
		[Address(RVA = "0xF892A8", Offset = "0xF892A8", VA = "0xF892A8")]
		[Preserve]
		public static void FadeEffectEndpoint_op_Implicit()
		{
		}

		[Token(Token = "0x6001D64")]
		[Address(RVA = "0xF89378", Offset = "0xF89378", VA = "0xF89378")]
		[Preserve]
		public static void FadeEffectEndpoint_op_Inequality()
		{
		}

		[Token(Token = "0x6001D65")]
		[Address(RVA = "0xF89450", Offset = "0xF89450", VA = "0xF89450")]
		[Preserve]
		public static void FadingSequenceState_op_Equality()
		{
		}

		[Token(Token = "0x6001D66")]
		[Address(RVA = "0xF89528", Offset = "0xF89528", VA = "0xF89528")]
		[Preserve]
		public static void FadingSequenceState_op_Implicit()
		{
		}

		[Token(Token = "0x6001D67")]
		[Address(RVA = "0xF895F8", Offset = "0xF895F8", VA = "0xF895F8")]
		[Preserve]
		public static void FadingSequenceState_op_Inequality()
		{
		}

		[Token(Token = "0x6001D68")]
		[Address(RVA = "0xF896D0", Offset = "0xF896D0", VA = "0xF896D0")]
		[Preserve]
		public static void FirstPersonOcclusion_op_Equality()
		{
		}

		[Token(Token = "0x6001D69")]
		[Address(RVA = "0xF897A8", Offset = "0xF897A8", VA = "0xF897A8")]
		[Preserve]
		public static void FirstPersonOcclusion_op_Implicit()
		{
		}

		[Token(Token = "0x6001D6A")]
		[Address(RVA = "0xF89878", Offset = "0xF89878", VA = "0xF89878")]
		[Preserve]
		public static void FirstPersonOcclusion_op_Inequality()
		{
		}

		[Token(Token = "0x6001D6B")]
		[Address(RVA = "0xF89950", Offset = "0xF89950", VA = "0xF89950")]
		[Preserve]
		public static void FixedCameraScenarioProvider_op_Equality()
		{
		}

		[Token(Token = "0x6001D6C")]
		[Address(RVA = "0xF89A28", Offset = "0xF89A28", VA = "0xF89A28")]
		[Preserve]
		public static void FixedCameraScenarioProvider_op_Implicit()
		{
		}

		[Token(Token = "0x6001D6D")]
		[Address(RVA = "0xF89AF8", Offset = "0xF89AF8", VA = "0xF89AF8")]
		[Preserve]
		public static void FixedCameraScenarioProvider_op_Inequality()
		{
		}

		[Token(Token = "0x6001D6E")]
		[Address(RVA = "0xF89BD0", Offset = "0xF89BD0", VA = "0xF89BD0")]
		[Preserve]
		public static void FixedRotation_op_Equality()
		{
		}

		[Token(Token = "0x6001D6F")]
		[Address(RVA = "0xF89CA8", Offset = "0xF89CA8", VA = "0xF89CA8")]
		[Preserve]
		public static void FixedRotation_op_Implicit()
		{
		}

		[Token(Token = "0x6001D70")]
		[Address(RVA = "0xF89D78", Offset = "0xF89D78", VA = "0xF89D78")]
		[Preserve]
		public static void FixedRotation_op_Inequality()
		{
		}

		[Token(Token = "0x6001D71")]
		[Address(RVA = "0xF89E50", Offset = "0xF89E50", VA = "0xF89E50")]
		[Preserve]
		public static void FlatScreenPlayer_op_Equality()
		{
		}

		[Token(Token = "0x6001D72")]
		[Address(RVA = "0xF89F28", Offset = "0xF89F28", VA = "0xF89F28")]
		[Preserve]
		public static void FlatScreenPlayer_op_Implicit()
		{
		}

		[Token(Token = "0x6001D73")]
		[Address(RVA = "0xF89FF8", Offset = "0xF89FF8", VA = "0xF89FF8")]
		[Preserve]
		public static void FlatScreenPlayer_op_Inequality()
		{
		}

		[Token(Token = "0x6001D74")]
		[Address(RVA = "0xF8A0D0", Offset = "0xF8A0D0", VA = "0xF8A0D0")]
		[Preserve]
		public static void FlatScreenPostProcessing_op_Equality()
		{
		}

		[Token(Token = "0x6001D75")]
		[Address(RVA = "0xF8A1A8", Offset = "0xF8A1A8", VA = "0xF8A1A8")]
		[Preserve]
		public static void FlatScreenPostProcessing_op_Implicit()
		{
		}

		[Token(Token = "0x6001D76")]
		[Address(RVA = "0xF8A278", Offset = "0xF8A278", VA = "0xF8A278")]
		[Preserve]
		public static void FlatScreenPostProcessing_op_Inequality()
		{
		}

		[Token(Token = "0x6001D77")]
		[Address(RVA = "0xF8A350", Offset = "0xF8A350", VA = "0xF8A350")]
		[Preserve]
		public static void float_op_Equality()
		{
		}

		[Token(Token = "0x6001D78")]
		[Address(RVA = "0xF8A438", Offset = "0xF8A438", VA = "0xF8A438")]
		[Preserve]
		public static void float_op_GreaterThan()
		{
		}

		[Token(Token = "0x6001D79")]
		[Address(RVA = "0xF8A520", Offset = "0xF8A520", VA = "0xF8A520")]
		[Preserve]
		public static void float_op_GreaterThanOrEqual()
		{
		}

		[Token(Token = "0x6001D7A")]
		[Address(RVA = "0xF8A608", Offset = "0xF8A608", VA = "0xF8A608")]
		[Preserve]
		public static void float_op_Inequality()
		{
		}

		[Token(Token = "0x6001D7B")]
		[Address(RVA = "0xF8A6F0", Offset = "0xF8A6F0", VA = "0xF8A6F0")]
		[Preserve]
		public static void float_op_LessThan()
		{
		}

		[Token(Token = "0x6001D7C")]
		[Address(RVA = "0xF8A7D8", Offset = "0xF8A7D8", VA = "0xF8A7D8")]
		[Preserve]
		public static void float_op_LessThanOrEqual()
		{
		}

		[Token(Token = "0x6001D7D")]
		[Address(RVA = "0xF8A8C0", Offset = "0xF8A8C0", VA = "0xF8A8C0")]
		[Preserve]
		public static void FloppyDisk_op_Equality()
		{
		}

		[Token(Token = "0x6001D7E")]
		[Address(RVA = "0xF8A998", Offset = "0xF8A998", VA = "0xF8A998")]
		[Preserve]
		public static void FloppyDisk_op_Implicit()
		{
		}

		[Token(Token = "0x6001D7F")]
		[Address(RVA = "0xF8AA68", Offset = "0xF8AA68", VA = "0xF8AA68")]
		[Preserve]
		public static void FloppyDisk_op_Inequality()
		{
		}

		[Token(Token = "0x6001D80")]
		[Address(RVA = "0xF8AB40", Offset = "0xF8AB40", VA = "0xF8AB40")]
		[Preserve]
		public static void FloppyDiskComputer_op_Equality()
		{
		}

		[Token(Token = "0x6001D81")]
		[Address(RVA = "0xF8AC18", Offset = "0xF8AC18", VA = "0xF8AC18")]
		[Preserve]
		public static void FloppyDiskComputer_op_Implicit()
		{
		}

		[Token(Token = "0x6001D82")]
		[Address(RVA = "0xF8ACE8", Offset = "0xF8ACE8", VA = "0xF8ACE8")]
		[Preserve]
		public static void FloppyDiskComputer_op_Inequality()
		{
		}

		[Token(Token = "0x6001D83")]
		[Address(RVA = "0xF8ADC0", Offset = "0xF8ADC0", VA = "0xF8ADC0")]
		[Preserve]
		public static void FloppyDiskComputerCosmetics_op_Equality()
		{
		}

		[Token(Token = "0x6001D84")]
		[Address(RVA = "0xF8AE98", Offset = "0xF8AE98", VA = "0xF8AE98")]
		[Preserve]
		public static void FloppyDiskComputerCosmetics_op_Implicit()
		{
		}

		[Token(Token = "0x6001D85")]
		[Address(RVA = "0xF8AF68", Offset = "0xF8AF68", VA = "0xF8AF68")]
		[Preserve]
		public static void FloppyDiskComputerCosmetics_op_Inequality()
		{
		}

		[Token(Token = "0x6001D86")]
		[Address(RVA = "0xF8B040", Offset = "0xF8B040", VA = "0xF8B040")]
		[Preserve]
		public static void Flow_Boot_op_Equality()
		{
		}

		[Token(Token = "0x6001D87")]
		[Address(RVA = "0xF8B118", Offset = "0xF8B118", VA = "0xF8B118")]
		[Preserve]
		public static void Flow_Boot_op_Implicit()
		{
		}

		[Token(Token = "0x6001D88")]
		[Address(RVA = "0xF8B1E8", Offset = "0xF8B1E8", VA = "0xF8B1E8")]
		[Preserve]
		public static void Flow_Boot_op_Inequality()
		{
		}

		[Token(Token = "0x6001D89")]
		[Address(RVA = "0xF8B2C0", Offset = "0xF8B2C0", VA = "0xF8B2C0")]
		[Preserve]
		public static void FollowTransform_op_Equality()
		{
		}

		[Token(Token = "0x6001D8A")]
		[Address(RVA = "0xF8B398", Offset = "0xF8B398", VA = "0xF8B398")]
		[Preserve]
		public static void FollowTransform_op_Implicit()
		{
		}

		[Token(Token = "0x6001D8B")]
		[Address(RVA = "0xF8B468", Offset = "0xF8B468", VA = "0xF8B468")]
		[Preserve]
		public static void FollowTransform_op_Inequality()
		{
		}

		[Token(Token = "0x6001D8C")]
		[Address(RVA = "0xF8B540", Offset = "0xF8B540", VA = "0xF8B540")]
		[Preserve]
		public static void FootSteps_op_Equality()
		{
		}

		[Token(Token = "0x6001D8D")]
		[Address(RVA = "0xF8B618", Offset = "0xF8B618", VA = "0xF8B618")]
		[Preserve]
		public static void FootSteps_op_Implicit()
		{
		}

		[Token(Token = "0x6001D8E")]
		[Address(RVA = "0xF8B6E8", Offset = "0xF8B6E8", VA = "0xF8B6E8")]
		[Preserve]
		public static void FootSteps_op_Inequality()
		{
		}

		[Token(Token = "0x6001D8F")]
		[Address(RVA = "0xF8B7C0", Offset = "0xF8B7C0", VA = "0xF8B7C0")]
		[Preserve]
		public static void FridgeHorrorAchievementTrigger_op_Equality()
		{
		}

		[Token(Token = "0x6001D90")]
		[Address(RVA = "0xF8B898", Offset = "0xF8B898", VA = "0xF8B898")]
		[Preserve]
		public static void FridgeHorrorAchievementTrigger_op_Implicit()
		{
		}

		[Token(Token = "0x6001D91")]
		[Address(RVA = "0xF8B968", Offset = "0xF8B968", VA = "0xF8B968")]
		[Preserve]
		public static void FridgeHorrorAchievementTrigger_op_Inequality()
		{
		}

		[Token(Token = "0x6001D92")]
		[Address(RVA = "0xF8BA40", Offset = "0xF8BA40", VA = "0xF8BA40")]
		[Preserve]
		public static void FsArcSegmentMotionHandler_op_Equality()
		{
		}

		[Token(Token = "0x6001D93")]
		[Address(RVA = "0xF8BB18", Offset = "0xF8BB18", VA = "0xF8BB18")]
		[Preserve]
		public static void FsArcSegmentMotionHandler_op_Implicit()
		{
		}

		[Token(Token = "0x6001D94")]
		[Address(RVA = "0xF8BBE8", Offset = "0xF8BBE8", VA = "0xF8BBE8")]
		[Preserve]
		public static void FsArcSegmentMotionHandler_op_Inequality()
		{
		}

		[Token(Token = "0x6001D95")]
		[Address(RVA = "0xF8BCC0", Offset = "0xF8BCC0", VA = "0xF8BCC0")]
		[Preserve]
		public static void FsBoundedMotionInteractionDeltaRumbleCondition_op_Equality()
		{
		}

		[Token(Token = "0x6001D96")]
		[Address(RVA = "0xF8BD98", Offset = "0xF8BD98", VA = "0xF8BD98")]
		[Preserve]
		public static void FsBoundedMotionInteractionDeltaRumbleCondition_op_Implicit()
		{
		}

		[Token(Token = "0x6001D97")]
		[Address(RVA = "0xF8BE68", Offset = "0xF8BE68", VA = "0xF8BE68")]
		[Preserve]
		public static void FsBoundedMotionInteractionDeltaRumbleCondition_op_Inequality()
		{
		}

		[Token(Token = "0x6001D98")]
		[Address(RVA = "0xF8BF40", Offset = "0xF8BF40", VA = "0xF8BF40")]
		[Preserve]
		public static void FsCameraCollisionHandler_op_Equality()
		{
		}

		[Token(Token = "0x6001D99")]
		[Address(RVA = "0xF8C018", Offset = "0xF8C018", VA = "0xF8C018")]
		[Preserve]
		public static void FsCameraCollisionHandler_op_Implicit()
		{
		}

		[Token(Token = "0x6001D9A")]
		[Address(RVA = "0xF8C0E8", Offset = "0xF8C0E8", VA = "0xF8C0E8")]
		[Preserve]
		public static void FsCameraCollisionHandler_op_Inequality()
		{
		}

		[Token(Token = "0x6001D9B")]
		[Address(RVA = "0xF8C1C0", Offset = "0xF8C1C0", VA = "0xF8C1C0")]
		[Preserve]
		public static void FsCameraDetacher_op_Equality()
		{
		}

		[Token(Token = "0x6001D9C")]
		[Address(RVA = "0xF8C298", Offset = "0xF8C298", VA = "0xF8C298")]
		[Preserve]
		public static void FsCameraDetacher_op_Implicit()
		{
		}

		[Token(Token = "0x6001D9D")]
		[Address(RVA = "0xF8C368", Offset = "0xF8C368", VA = "0xF8C368")]
		[Preserve]
		public static void FsCameraDetacher_op_Inequality()
		{
		}

		[Token(Token = "0x6001D9E")]
		[Address(RVA = "0xF8C440", Offset = "0xF8C440", VA = "0xF8C440")]
		[Preserve]
		public static void FsDiegeticTextLocalizerExtendedData_op_Equality()
		{
		}

		[Token(Token = "0x6001D9F")]
		[Address(RVA = "0xF8C518", Offset = "0xF8C518", VA = "0xF8C518")]
		[Preserve]
		public static void FsDiegeticTextLocalizerExtendedData_op_Implicit()
		{
		}

		[Token(Token = "0x6001DA0")]
		[Address(RVA = "0xF8C5E8", Offset = "0xF8C5E8", VA = "0xF8C5E8")]
		[Preserve]
		public static void FsDiegeticTextLocalizerExtendedData_op_Inequality()
		{
		}

		[Token(Token = "0x6001DA1")]
		[Address(RVA = "0xF8C6C0", Offset = "0xF8C6C0", VA = "0xF8C6C0")]
		[Preserve]
		public static void FsDropHandler_op_Equality()
		{
		}

		[Token(Token = "0x6001DA2")]
		[Address(RVA = "0xF8C798", Offset = "0xF8C798", VA = "0xF8C798")]
		[Preserve]
		public static void FsDropHandler_op_Implicit()
		{
		}

		[Token(Token = "0x6001DA3")]
		[Address(RVA = "0xF8C868", Offset = "0xF8C868", VA = "0xF8C868")]
		[Preserve]
		public static void FsDropHandler_op_Inequality()
		{
		}

		[Token(Token = "0x6001DA4")]
		[Address(RVA = "0xF8C940", Offset = "0xF8C940", VA = "0xF8C940")]
		[Preserve]
		public static void FsHoldHelper_op_Equality()
		{
		}

		[Token(Token = "0x6001DA5")]
		[Address(RVA = "0xF8CA18", Offset = "0xF8CA18", VA = "0xF8CA18")]
		[Preserve]
		public static void FsHoldHelper_op_Implicit()
		{
		}

		[Token(Token = "0x6001DA6")]
		[Address(RVA = "0xF8CAE8", Offset = "0xF8CAE8", VA = "0xF8CAE8")]
		[Preserve]
		public static void FsHoldHelper_op_Inequality()
		{
		}

		[Token(Token = "0x6001DA7")]
		[Address(RVA = "0xF8CBC0", Offset = "0xF8CBC0", VA = "0xF8CBC0")]
		[Preserve]
		public static void FsInspectDiegeticTextDetector_op_Equality()
		{
		}

		[Token(Token = "0x6001DA8")]
		[Address(RVA = "0xF8CC98", Offset = "0xF8CC98", VA = "0xF8CC98")]
		[Preserve]
		public static void FsInspectDiegeticTextDetector_op_Implicit()
		{
		}

		[Token(Token = "0x6001DA9")]
		[Address(RVA = "0xF8CD68", Offset = "0xF8CD68", VA = "0xF8CD68")]
		[Preserve]
		public static void FsInspectDiegeticTextDetector_op_Inequality()
		{
		}

		[Token(Token = "0x6001DAA")]
		[Address(RVA = "0xF8CE40", Offset = "0xF8CE40", VA = "0xF8CE40")]
		[Preserve]
		public static void FsInspectHandler_op_Equality()
		{
		}

		[Token(Token = "0x6001DAB")]
		[Address(RVA = "0xF8CF18", Offset = "0xF8CF18", VA = "0xF8CF18")]
		[Preserve]
		public static void FsInspectHandler_op_Implicit()
		{
		}

		[Token(Token = "0x6001DAC")]
		[Address(RVA = "0xF8CFE8", Offset = "0xF8CFE8", VA = "0xF8CFE8")]
		[Preserve]
		public static void FsInspectHandler_op_Inequality()
		{
		}

		[Token(Token = "0x6001DAD")]
		[Address(RVA = "0xF8D0C0", Offset = "0xF8D0C0", VA = "0xF8D0C0")]
		[Preserve]
		public static void FsLineSegmentMotionHandler_op_Equality()
		{
		}

		[Token(Token = "0x6001DAE")]
		[Address(RVA = "0xF8D198", Offset = "0xF8D198", VA = "0xF8D198")]
		[Preserve]
		public static void FsLineSegmentMotionHandler_op_Implicit()
		{
		}

		[Token(Token = "0x6001DAF")]
		[Address(RVA = "0xF8D268", Offset = "0xF8D268", VA = "0xF8D268")]
		[Preserve]
		public static void FsLineSegmentMotionHandler_op_Inequality()
		{
		}

		[Token(Token = "0x6001DB0")]
		[Address(RVA = "0xF8D340", Offset = "0xF8D340", VA = "0xF8D340")]
		[Preserve]
		public static void FsLockedMotionHandler_op_Equality()
		{
		}

		[Token(Token = "0x6001DB1")]
		[Address(RVA = "0xF8D418", Offset = "0xF8D418", VA = "0xF8D418")]
		[Preserve]
		public static void FsLockedMotionHandler_op_Implicit()
		{
		}

		[Token(Token = "0x6001DB2")]
		[Address(RVA = "0xF8D4E8", Offset = "0xF8D4E8", VA = "0xF8D4E8")]
		[Preserve]
		public static void FsLockedMotionHandler_op_Inequality()
		{
		}

		[Token(Token = "0x6001DB3")]
		[Address(RVA = "0xF8D5C0", Offset = "0xF8D5C0", VA = "0xF8D5C0")]
		[Preserve]
		public static void FsMotionInteractionRumbleCondition_op_Equality()
		{
		}

		[Token(Token = "0x6001DB4")]
		[Address(RVA = "0xF8D698", Offset = "0xF8D698", VA = "0xF8D698")]
		[Preserve]
		public static void FsMotionInteractionRumbleCondition_op_Implicit()
		{
		}

		[Token(Token = "0x6001DB5")]
		[Address(RVA = "0xF8D768", Offset = "0xF8D768", VA = "0xF8D768")]
		[Preserve]
		public static void FsMotionInteractionRumbleCondition_op_Inequality()
		{
		}

		[Token(Token = "0x6001DB6")]
		[Address(RVA = "0xF8D840", Offset = "0xF8D840", VA = "0xF8D840")]
		[Preserve]
		public static void FsPeekHandler_op_Equality()
		{
		}

		[Token(Token = "0x6001DB7")]
		[Address(RVA = "0xF8D918", Offset = "0xF8D918", VA = "0xF8D918")]
		[Preserve]
		public static void FsPeekHandler_op_Implicit()
		{
		}

		[Token(Token = "0x6001DB8")]
		[Address(RVA = "0xF8D9E8", Offset = "0xF8D9E8", VA = "0xF8D9E8")]
		[Preserve]
		public static void FsPeekHandler_op_Inequality()
		{
		}

		[Token(Token = "0x6001DB9")]
		[Address(RVA = "0xF8DAC0", Offset = "0xF8DAC0", VA = "0xF8DAC0")]
		[Preserve]
		public static void FsPlaceHandler_op_Equality()
		{
		}

		[Token(Token = "0x6001DBA")]
		[Address(RVA = "0xF8DB98", Offset = "0xF8DB98", VA = "0xF8DB98")]
		[Preserve]
		public static void FsPlaceHandler_op_Implicit()
		{
		}

		[Token(Token = "0x6001DBB")]
		[Address(RVA = "0xF8DC68", Offset = "0xF8DC68", VA = "0xF8DC68")]
		[Preserve]
		public static void FsPlaceHandler_op_Inequality()
		{
		}

		[Token(Token = "0x6001DBC")]
		[Address(RVA = "0xF8DD40", Offset = "0xF8DD40", VA = "0xF8DD40")]
		[Preserve]
		public static void FsProjectionColliderTrigger_op_Equality()
		{
		}

		[Token(Token = "0x6001DBD")]
		[Address(RVA = "0xF8DE18", Offset = "0xF8DE18", VA = "0xF8DE18")]
		[Preserve]
		public static void FsProjectionColliderTrigger_op_Implicit()
		{
		}

		[Token(Token = "0x6001DBE")]
		[Address(RVA = "0xF8DEE8", Offset = "0xF8DEE8", VA = "0xF8DEE8")]
		[Preserve]
		public static void FsProjectionColliderTrigger_op_Inequality()
		{
		}

		[Token(Token = "0x6001DBF")]
		[Address(RVA = "0xF8DFC0", Offset = "0xF8DFC0", VA = "0xF8DFC0")]
		[Preserve]
		public static void FsRotatableBaseHandler_op_Equality()
		{
		}

		[Token(Token = "0x6001DC0")]
		[Address(RVA = "0xF8E098", Offset = "0xF8E098", VA = "0xF8E098")]
		[Preserve]
		public static void FsRotatableBaseHandler_op_Implicit()
		{
		}

		[Token(Token = "0x6001DC1")]
		[Address(RVA = "0xF8E168", Offset = "0xF8E168", VA = "0xF8E168")]
		[Preserve]
		public static void FsRotatableBaseHandler_op_Inequality()
		{
		}

		[Token(Token = "0x6001DC2")]
		[Address(RVA = "0xF8E240", Offset = "0xF8E240", VA = "0xF8E240")]
		[Preserve]
		public static void FsSwapInHandsHandler_op_Equality()
		{
		}

		[Token(Token = "0x6001DC3")]
		[Address(RVA = "0xF8E318", Offset = "0xF8E318", VA = "0xF8E318")]
		[Preserve]
		public static void FsSwapInHandsHandler_op_Implicit()
		{
		}

		[Token(Token = "0x6001DC4")]
		[Address(RVA = "0xF8E3E8", Offset = "0xF8E3E8", VA = "0xF8E3E8")]
		[Preserve]
		public static void FsSwapInHandsHandler_op_Inequality()
		{
		}

		[Token(Token = "0x6001DC5")]
		[Address(RVA = "0xF8E4C0", Offset = "0xF8E4C0", VA = "0xF8E4C0")]
		[Preserve]
		public static void FullPerformanceStateMachineBehaviour_op_Equality()
		{
		}

		[Token(Token = "0x6001DC6")]
		[Address(RVA = "0xF8E598", Offset = "0xF8E598", VA = "0xF8E598")]
		[Preserve]
		public static void FullPerformanceStateMachineBehaviour_op_Implicit()
		{
		}

		[Token(Token = "0x6001DC7")]
		[Address(RVA = "0xF8E668", Offset = "0xF8E668", VA = "0xF8E668")]
		[Preserve]
		public static void FullPerformanceStateMachineBehaviour_op_Inequality()
		{
		}

		[Token(Token = "0x6001DC8")]
		[Address(RVA = "0xF8E740", Offset = "0xF8E740", VA = "0xF8E740")]
		[Preserve]
		public static void Fuse_op_Equality()
		{
		}

		[Token(Token = "0x6001DC9")]
		[Address(RVA = "0xF8E818", Offset = "0xF8E818", VA = "0xF8E818")]
		[Preserve]
		public static void Fuse_op_Implicit()
		{
		}

		[Token(Token = "0x6001DCA")]
		[Address(RVA = "0xF8E8E8", Offset = "0xF8E8E8", VA = "0xF8E8E8")]
		[Preserve]
		public static void Fuse_op_Inequality()
		{
		}

		[Token(Token = "0x6001DCB")]
		[Address(RVA = "0xF8E9C0", Offset = "0xF8E9C0", VA = "0xF8E9C0")]
		[Preserve]
		public static void FuseBox_op_Equality()
		{
		}

		[Token(Token = "0x6001DCC")]
		[Address(RVA = "0xF8EA98", Offset = "0xF8EA98", VA = "0xF8EA98")]
		[Preserve]
		public static void FuseBox_op_Implicit()
		{
		}

		[Token(Token = "0x6001DCD")]
		[Address(RVA = "0xF8EB68", Offset = "0xF8EB68", VA = "0xF8EB68")]
		[Preserve]
		public static void FuseBox_op_Inequality()
		{
		}

		[Token(Token = "0x6001DCE")]
		[Address(RVA = "0xF8EC40", Offset = "0xF8EC40", VA = "0xF8EC40")]
		[Preserve]
		public static void GamePadIconService_op_Equality()
		{
		}

		[Token(Token = "0x6001DCF")]
		[Address(RVA = "0xF8ED18", Offset = "0xF8ED18", VA = "0xF8ED18")]
		[Preserve]
		public static void GamePadIconService_op_Implicit()
		{
		}

		[Token(Token = "0x6001DD0")]
		[Address(RVA = "0xF8EDE8", Offset = "0xF8EDE8", VA = "0xF8EDE8")]
		[Preserve]
		public static void GamePadIconService_op_Inequality()
		{
		}

		[Token(Token = "0x6001DD1")]
		[Address(RVA = "0xF8EEC0", Offset = "0xF8EEC0", VA = "0xF8EEC0")]
		[Preserve]
		public static void GamePausedState_op_Equality()
		{
		}

		[Token(Token = "0x6001DD2")]
		[Address(RVA = "0xF8EF98", Offset = "0xF8EF98", VA = "0xF8EF98")]
		[Preserve]
		public static void GamePausedState_op_Implicit()
		{
		}

		[Token(Token = "0x6001DD3")]
		[Address(RVA = "0xF8F068", Offset = "0xF8F068", VA = "0xF8F068")]
		[Preserve]
		public static void GamePausedState_op_Inequality()
		{
		}

		[Token(Token = "0x6001DD4")]
		[Address(RVA = "0xF8F140", Offset = "0xF8F140", VA = "0xF8F140")]
		[Preserve]
		public static void GameplayFadeEffectController_op_Equality()
		{
		}

		[Token(Token = "0x6001DD5")]
		[Address(RVA = "0xF8F218", Offset = "0xF8F218", VA = "0xF8F218")]
		[Preserve]
		public static void GameplayFadeEffectController_op_Implicit()
		{
		}

		[Token(Token = "0x6001DD6")]
		[Address(RVA = "0xF8F2E8", Offset = "0xF8F2E8", VA = "0xF8F2E8")]
		[Preserve]
		public static void GameplayFadeEffectController_op_Inequality()
		{
		}

		[Token(Token = "0x6001DD7")]
		[Address(RVA = "0xF8F3C0", Offset = "0xF8F3C0", VA = "0xF8F3C0")]
		[Preserve]
		public static void GameplayState_op_Equality()
		{
		}

		[Token(Token = "0x6001DD8")]
		[Address(RVA = "0xF8F498", Offset = "0xF8F498", VA = "0xF8F498")]
		[Preserve]
		public static void GameplayState_op_Implicit()
		{
		}

		[Token(Token = "0x6001DD9")]
		[Address(RVA = "0xF8F568", Offset = "0xF8F568", VA = "0xF8F568")]
		[Preserve]
		public static void GameplayState_op_Inequality()
		{
		}

		[Token(Token = "0x6001DDA")]
		[Address(RVA = "0xF8F640", Offset = "0xF8F640", VA = "0xF8F640")]
		[Preserve]
		public static void GameplayTimeStatUI_op_Equality()
		{
		}

		[Token(Token = "0x6001DDB")]
		[Address(RVA = "0xF8F718", Offset = "0xF8F718", VA = "0xF8F718")]
		[Preserve]
		public static void GameplayTimeStatUI_op_Implicit()
		{
		}

		[Token(Token = "0x6001DDC")]
		[Address(RVA = "0xF8F7E8", Offset = "0xF8F7E8", VA = "0xF8F7E8")]
		[Preserve]
		public static void GameplayTimeStatUI_op_Inequality()
		{
		}

		[Token(Token = "0x6001DDD")]
		[Address(RVA = "0xF8F8C0", Offset = "0xF8F8C0", VA = "0xF8F8C0")]
		[Preserve]
		public static void GameUserService_op_Equality()
		{
		}

		[Token(Token = "0x6001DDE")]
		[Address(RVA = "0xF8F998", Offset = "0xF8F998", VA = "0xF8F998")]
		[Preserve]
		public static void GameUserService_op_Implicit()
		{
		}

		[Token(Token = "0x6001DDF")]
		[Address(RVA = "0xF8FA68", Offset = "0xF8FA68", VA = "0xF8FA68")]
		[Preserve]
		public static void GameUserService_op_Inequality()
		{
		}

		[Token(Token = "0x6001DE0")]
		[Address(RVA = "0xF8FB40", Offset = "0xF8FB40", VA = "0xF8FB40")]
		[Preserve]
		public static void GrabAnchor_op_Equality()
		{
		}

		[Token(Token = "0x6001DE1")]
		[Address(RVA = "0xF8FC18", Offset = "0xF8FC18", VA = "0xF8FC18")]
		[Preserve]
		public static void GrabAnchor_op_Implicit()
		{
		}

		[Token(Token = "0x6001DE2")]
		[Address(RVA = "0xF8FCE8", Offset = "0xF8FCE8", VA = "0xF8FCE8")]
		[Preserve]
		public static void GrabAnchor_op_Inequality()
		{
		}

		[Token(Token = "0x6001DE3")]
		[Address(RVA = "0xF8FDC0", Offset = "0xF8FDC0", VA = "0xF8FDC0")]
		[Preserve]
		public static void grabbyhand_op_Equality()
		{
		}

		[Token(Token = "0x6001DE4")]
		[Address(RVA = "0xF8FE98", Offset = "0xF8FE98", VA = "0xF8FE98")]
		[Preserve]
		public static void grabbyhand_op_Implicit()
		{
		}

		[Token(Token = "0x6001DE5")]
		[Address(RVA = "0xF8FF68", Offset = "0xF8FF68", VA = "0xF8FF68")]
		[Preserve]
		public static void grabbyhand_op_Inequality()
		{
		}

		[Token(Token = "0x6001DE6")]
		[Address(RVA = "0xF90040", Offset = "0xF90040", VA = "0xF90040")]
		[Preserve]
		public static void GrabInteractionSettings_op_Equality()
		{
		}

		[Token(Token = "0x6001DE7")]
		[Address(RVA = "0xF90118", Offset = "0xF90118", VA = "0xF90118")]
		[Preserve]
		public static void GrabInteractionSettings_op_Implicit()
		{
		}

		[Token(Token = "0x6001DE8")]
		[Address(RVA = "0xF901E8", Offset = "0xF901E8", VA = "0xF901E8")]
		[Preserve]
		public static void GrabInteractionSettings_op_Inequality()
		{
		}

		[Token(Token = "0x6001DE9")]
		[Address(RVA = "0xF902C0", Offset = "0xF902C0", VA = "0xF902C0")]
		[Preserve]
		public static void Graphics_Lightmap_LightmapManager_op_Equality()
		{
		}

		[Token(Token = "0x6001DEA")]
		[Address(RVA = "0xF90398", Offset = "0xF90398", VA = "0xF90398")]
		[Preserve]
		public static void Graphics_Lightmap_LightmapManager_op_Implicit()
		{
		}

		[Token(Token = "0x6001DEB")]
		[Address(RVA = "0xF90468", Offset = "0xF90468", VA = "0xF90468")]
		[Preserve]
		public static void Graphics_Lightmap_LightmapManager_op_Inequality()
		{
		}

		[Token(Token = "0x6001DEC")]
		[Address(RVA = "0xF90540", Offset = "0xF90540", VA = "0xF90540")]
		[Preserve]
		public static void Graphics_Lightmap_LightmapRendererID_op_Equality()
		{
		}

		[Token(Token = "0x6001DED")]
		[Address(RVA = "0xF90618", Offset = "0xF90618", VA = "0xF90618")]
		[Preserve]
		public static void Graphics_Lightmap_LightmapRendererID_op_Implicit()
		{
		}

		[Token(Token = "0x6001DEE")]
		[Address(RVA = "0xF906E8", Offset = "0xF906E8", VA = "0xF906E8")]
		[Preserve]
		public static void Graphics_Lightmap_LightmapRendererID_op_Inequality()
		{
		}

		[Token(Token = "0x6001DEF")]
		[Address(RVA = "0xF907C0", Offset = "0xF907C0", VA = "0xF907C0")]
		[Preserve]
		public static void Graphics_Lightmap_LightmapSwapData_op_Equality()
		{
		}

		[Token(Token = "0x6001DF0")]
		[Address(RVA = "0xF90898", Offset = "0xF90898", VA = "0xF90898")]
		[Preserve]
		public static void Graphics_Lightmap_LightmapSwapData_op_Implicit()
		{
		}

		[Token(Token = "0x6001DF1")]
		[Address(RVA = "0xF90968", Offset = "0xF90968", VA = "0xF90968")]
		[Preserve]
		public static void Graphics_Lightmap_LightmapSwapData_op_Inequality()
		{
		}

		[Token(Token = "0x6001DF2")]
		[Address(RVA = "0xF90A40", Offset = "0xF90A40", VA = "0xF90A40")]
		[Preserve]
		public static void Graphics_Lightmap_ReflectionProbeID_op_Equality()
		{
		}

		[Token(Token = "0x6001DF3")]
		[Address(RVA = "0xF90B18", Offset = "0xF90B18", VA = "0xF90B18")]
		[Preserve]
		public static void Graphics_Lightmap_ReflectionProbeID_op_Implicit()
		{
		}

		[Token(Token = "0x6001DF4")]
		[Address(RVA = "0xF90BE8", Offset = "0xF90BE8", VA = "0xF90BE8")]
		[Preserve]
		public static void Graphics_Lightmap_ReflectionProbeID_op_Inequality()
		{
		}

		[Token(Token = "0x6001DF5")]
		[Address(RVA = "0xF90CC0", Offset = "0xF90CC0", VA = "0xF90CC0")]
		[Preserve]
		public static void Graphics_Outline_DynamicOutline_op_Equality()
		{
		}

		[Token(Token = "0x6001DF6")]
		[Address(RVA = "0xF90D98", Offset = "0xF90D98", VA = "0xF90D98")]
		[Preserve]
		public static void Graphics_Outline_DynamicOutline_op_Implicit()
		{
		}

		[Token(Token = "0x6001DF7")]
		[Address(RVA = "0xF90E68", Offset = "0xF90E68", VA = "0xF90E68")]
		[Preserve]
		public static void Graphics_Outline_DynamicOutline_op_Inequality()
		{
		}

		[Token(Token = "0x6001DF8")]
		[Address(RVA = "0xF90F40", Offset = "0xF90F40", VA = "0xF90F40")]
		[Preserve]
		public static void Graphics_Outline_DynamicSkinnedOutline_op_Equality()
		{
		}

		[Token(Token = "0x6001DF9")]
		[Address(RVA = "0xF91018", Offset = "0xF91018", VA = "0xF91018")]
		[Preserve]
		public static void Graphics_Outline_DynamicSkinnedOutline_op_Implicit()
		{
		}

		[Token(Token = "0x6001DFA")]
		[Address(RVA = "0xF910E8", Offset = "0xF910E8", VA = "0xF910E8")]
		[Preserve]
		public static void Graphics_Outline_DynamicSkinnedOutline_op_Inequality()
		{
		}

		[Token(Token = "0x6001DFB")]
		[Address(RVA = "0xF911C0", Offset = "0xF911C0", VA = "0xF911C0")]
		[Preserve]
		public static void Graphics_Outline_OutlineMeshBatcher_op_Equality()
		{
		}

		[Token(Token = "0x6001DFC")]
		[Address(RVA = "0xF91298", Offset = "0xF91298", VA = "0xF91298")]
		[Preserve]
		public static void Graphics_Outline_OutlineMeshBatcher_op_Implicit()
		{
		}

		[Token(Token = "0x6001DFD")]
		[Address(RVA = "0xF91368", Offset = "0xF91368", VA = "0xF91368")]
		[Preserve]
		public static void Graphics_Outline_OutlineMeshBatcher_op_Inequality()
		{
		}

		[Token(Token = "0x6001DFE")]
		[Address(RVA = "0xF91440", Offset = "0xF91440", VA = "0xF91440")]
		[Preserve]
		public static void HandArmDistanceHandler_op_Equality()
		{
		}

		[Token(Token = "0x6001DFF")]
		[Address(RVA = "0xF91518", Offset = "0xF91518", VA = "0xF91518")]
		[Preserve]
		public static void HandArmDistanceHandler_op_Implicit()
		{
		}

		[Token(Token = "0x6001E00")]
		[Address(RVA = "0xF915E8", Offset = "0xF915E8", VA = "0xF915E8")]
		[Preserve]
		public static void HandArmDistanceHandler_op_Inequality()
		{
		}

		[Token(Token = "0x6001E01")]
		[Address(RVA = "0xF916C0", Offset = "0xF916C0", VA = "0xF916C0")]
		[Preserve]
		public static void HandheldRadio_op_Equality()
		{
		}

		[Token(Token = "0x6001E02")]
		[Address(RVA = "0xF91798", Offset = "0xF91798", VA = "0xF91798")]
		[Preserve]
		public static void HandheldRadio_op_Implicit()
		{
		}

		[Token(Token = "0x6001E03")]
		[Address(RVA = "0xF91868", Offset = "0xF91868", VA = "0xF91868")]
		[Preserve]
		public static void HandheldRadio_op_Inequality()
		{
		}

		[Token(Token = "0x6001E04")]
		[Address(RVA = "0xF91940", Offset = "0xF91940", VA = "0xF91940")]
		[Preserve]
		public static void HandheldRadioStaticData_op_Equality()
		{
		}

		[Token(Token = "0x6001E05")]
		[Address(RVA = "0xF91A18", Offset = "0xF91A18", VA = "0xF91A18")]
		[Preserve]
		public static void HandheldRadioStaticData_op_Implicit()
		{
		}

		[Token(Token = "0x6001E06")]
		[Address(RVA = "0xF91AE8", Offset = "0xF91AE8", VA = "0xF91AE8")]
		[Preserve]
		public static void HandheldRadioStaticData_op_Inequality()
		{
		}

		[Token(Token = "0x6001E07")]
		[Address(RVA = "0xF91BC0", Offset = "0xF91BC0", VA = "0xF91BC0")]
		[Preserve]
		public static void HandleIsHeldRumbleCondition_op_Equality()
		{
		}

		[Token(Token = "0x6001E08")]
		[Address(RVA = "0xF91C98", Offset = "0xF91C98", VA = "0xF91C98")]
		[Preserve]
		public static void HandleIsHeldRumbleCondition_op_Implicit()
		{
		}

		[Token(Token = "0x6001E09")]
		[Address(RVA = "0xF91D68", Offset = "0xF91D68", VA = "0xF91D68")]
		[Preserve]
		public static void HandleIsHeldRumbleCondition_op_Inequality()
		{
		}

		[Token(Token = "0x6001E0A")]
		[Address(RVA = "0xF91E40", Offset = "0xF91E40", VA = "0xF91E40")]
		[Preserve]
		public static void HideWhenPaused_op_Equality()
		{
		}

		[Token(Token = "0x6001E0B")]
		[Address(RVA = "0xF91F18", Offset = "0xF91F18", VA = "0xF91F18")]
		[Preserve]
		public static void HideWhenPaused_op_Implicit()
		{
		}

		[Token(Token = "0x6001E0C")]
		[Address(RVA = "0xF91FE8", Offset = "0xF91FE8", VA = "0xF91FE8")]
		[Preserve]
		public static void HideWhenPaused_op_Inequality()
		{
		}

		[Token(Token = "0x6001E0D")]
		[Address(RVA = "0xF920C0", Offset = "0xF920C0", VA = "0xF920C0")]
		[Preserve]
		public static void HighlightMesh_op_Equality()
		{
		}

		[Token(Token = "0x6001E0E")]
		[Address(RVA = "0xF92198", Offset = "0xF92198", VA = "0xF92198")]
		[Preserve]
		public static void HighlightMesh_op_Implicit()
		{
		}

		[Token(Token = "0x6001E0F")]
		[Address(RVA = "0xF92268", Offset = "0xF92268", VA = "0xF92268")]
		[Preserve]
		public static void HighlightMesh_op_Inequality()
		{
		}

		[Token(Token = "0x6001E10")]
		[Address(RVA = "0xF92340", Offset = "0xF92340", VA = "0xF92340")]
		[Preserve]
		public static void HingedDoor_op_Equality()
		{
		}

		[Token(Token = "0x6001E11")]
		[Address(RVA = "0xF92418", Offset = "0xF92418", VA = "0xF92418")]
		[Preserve]
		public static void HingedDoor_op_Implicit()
		{
		}

		[Token(Token = "0x6001E12")]
		[Address(RVA = "0xF924E8", Offset = "0xF924E8", VA = "0xF924E8")]
		[Preserve]
		public static void HingedDoor_op_Inequality()
		{
		}

		[Token(Token = "0x6001E13")]
		[Address(RVA = "0xF925C0", Offset = "0xF925C0", VA = "0xF925C0")]
		[Preserve]
		public static void HingeJointMovementRumbleCondition_op_Equality()
		{
		}

		[Token(Token = "0x6001E14")]
		[Address(RVA = "0xF92698", Offset = "0xF92698", VA = "0xF92698")]
		[Preserve]
		public static void HingeJointMovementRumbleCondition_op_Implicit()
		{
		}

		[Token(Token = "0x6001E15")]
		[Address(RVA = "0xF92768", Offset = "0xF92768", VA = "0xF92768")]
		[Preserve]
		public static void HingeJointMovementRumbleCondition_op_Inequality()
		{
		}

		[Token(Token = "0x6001E16")]
		[Address(RVA = "0xF92840", Offset = "0xF92840", VA = "0xF92840")]
		[Preserve]
		public static void HoverSystem_FsHoverManager_op_Equality()
		{
		}

		[Token(Token = "0x6001E17")]
		[Address(RVA = "0xF92918", Offset = "0xF92918", VA = "0xF92918")]
		[Preserve]
		public static void HoverSystem_FsHoverManager_op_Implicit()
		{
		}

		[Token(Token = "0x6001E18")]
		[Address(RVA = "0xF929E8", Offset = "0xF929E8", VA = "0xF929E8")]
		[Preserve]
		public static void HoverSystem_FsHoverManager_op_Inequality()
		{
		}

		[Token(Token = "0x6001E19")]
		[Address(RVA = "0xF92AC0", Offset = "0xF92AC0", VA = "0xF92AC0")]
		[Preserve]
		public static void HoverSystem_Hoverable_op_Equality()
		{
		}

		[Token(Token = "0x6001E1A")]
		[Address(RVA = "0xF92B98", Offset = "0xF92B98", VA = "0xF92B98")]
		[Preserve]
		public static void HoverSystem_Hoverable_op_Implicit()
		{
		}

		[Token(Token = "0x6001E1B")]
		[Address(RVA = "0xF92C68", Offset = "0xF92C68", VA = "0xF92C68")]
		[Preserve]
		public static void HoverSystem_Hoverable_op_Inequality()
		{
		}

		[Token(Token = "0x6001E1C")]
		[Address(RVA = "0xF92D40", Offset = "0xF92D40", VA = "0xF92D40")]
		[Preserve]
		public static void HoverSystem_XRHoverManager_op_Equality()
		{
		}

		[Token(Token = "0x6001E1D")]
		[Address(RVA = "0xF92E18", Offset = "0xF92E18", VA = "0xF92E18")]
		[Preserve]
		public static void HoverSystem_XRHoverManager_op_Implicit()
		{
		}

		[Token(Token = "0x6001E1E")]
		[Address(RVA = "0xF92EE8", Offset = "0xF92EE8", VA = "0xF92EE8")]
		[Preserve]
		public static void HoverSystem_XRHoverManager_op_Inequality()
		{
		}

		[Token(Token = "0x6001E1F")]
		[Address(RVA = "0xF92FC0", Offset = "0xF92FC0", VA = "0xF92FC0")]
		[Preserve]
		public static void IconTextMarkupService_op_Equality()
		{
		}

		[Token(Token = "0x6001E20")]
		[Address(RVA = "0xF93098", Offset = "0xF93098", VA = "0xF93098")]
		[Preserve]
		public static void IconTextMarkupService_op_Implicit()
		{
		}

		[Token(Token = "0x6001E21")]
		[Address(RVA = "0xF93168", Offset = "0xF93168", VA = "0xF93168")]
		[Preserve]
		public static void IconTextMarkupService_op_Inequality()
		{
		}

		[Token(Token = "0x6001E22")]
		[Address(RVA = "0xF93240", Offset = "0xF93240", VA = "0xF93240")]
		[Preserve]
		public static void IconTextProvider_op_Equality()
		{
		}

		[Token(Token = "0x6001E23")]
		[Address(RVA = "0xF93318", Offset = "0xF93318", VA = "0xF93318")]
		[Preserve]
		public static void IconTextProvider_op_Implicit()
		{
		}

		[Token(Token = "0x6001E24")]
		[Address(RVA = "0xF933E8", Offset = "0xF933E8", VA = "0xF933E8")]
		[Preserve]
		public static void IconTextProvider_op_Inequality()
		{
		}

		[Token(Token = "0x6001E25")]
		[Address(RVA = "0xF934C0", Offset = "0xF934C0", VA = "0xF934C0")]
		[Preserve]
		public static void IdentScreen_op_Equality()
		{
		}

		[Token(Token = "0x6001E26")]
		[Address(RVA = "0xF93598", Offset = "0xF93598", VA = "0xF93598")]
		[Preserve]
		public static void IdentScreen_op_Implicit()
		{
		}

		[Token(Token = "0x6001E27")]
		[Address(RVA = "0xF93668", Offset = "0xF93668", VA = "0xF93668")]
		[Preserve]
		public static void IdentScreen_op_Inequality()
		{
		}

		[Token(Token = "0x6001E28")]
		[Address(RVA = "0xF93740", Offset = "0xF93740", VA = "0xF93740")]
		[Preserve]
		public static void IdentState_op_Equality()
		{
		}

		[Token(Token = "0x6001E29")]
		[Address(RVA = "0xF93818", Offset = "0xF93818", VA = "0xF93818")]
		[Preserve]
		public static void IdentState_op_Implicit()
		{
		}

		[Token(Token = "0x6001E2A")]
		[Address(RVA = "0xF938E8", Offset = "0xF938E8", VA = "0xF938E8")]
		[Preserve]
		public static void IdentState_op_Inequality()
		{
		}

		[Token(Token = "0x6001E2B")]
		[Address(RVA = "0xF939C0", Offset = "0xF939C0", VA = "0xF939C0")]
		[Preserve]
		public static void IKControl_op_Equality()
		{
		}

		[Token(Token = "0x6001E2C")]
		[Address(RVA = "0xF93A98", Offset = "0xF93A98", VA = "0xF93A98")]
		[Preserve]
		public static void IKControl_op_Implicit()
		{
		}

		[Token(Token = "0x6001E2D")]
		[Address(RVA = "0xF93B68", Offset = "0xF93B68", VA = "0xF93B68")]
		[Preserve]
		public static void IKControl_op_Inequality()
		{
		}

		[Token(Token = "0x6001E2E")]
		[Address(RVA = "0xF93C40", Offset = "0xF93C40", VA = "0xF93C40")]
		[Preserve]
		public static void InputBindingSpriteOverride_op_Equality()
		{
		}

		[Token(Token = "0x6001E2F")]
		[Address(RVA = "0xF93D18", Offset = "0xF93D18", VA = "0xF93D18")]
		[Preserve]
		public static void InputBindingSpriteOverride_op_Implicit()
		{
		}

		[Token(Token = "0x6001E30")]
		[Address(RVA = "0xF93DE8", Offset = "0xF93DE8", VA = "0xF93DE8")]
		[Preserve]
		public static void InputBindingSpriteOverride_op_Inequality()
		{
		}

		[Token(Token = "0x6001E31")]
		[Address(RVA = "0xF93EC0", Offset = "0xF93EC0", VA = "0xF93EC0")]
		[Preserve]
		public static void InputRebinder_op_Equality()
		{
		}

		[Token(Token = "0x6001E32")]
		[Address(RVA = "0xF93F98", Offset = "0xF93F98", VA = "0xF93F98")]
		[Preserve]
		public static void InputRebinder_op_Implicit()
		{
		}

		[Token(Token = "0x6001E33")]
		[Address(RVA = "0xF94068", Offset = "0xF94068", VA = "0xF94068")]
		[Preserve]
		public static void InputRebinder_op_Inequality()
		{
		}

		[Token(Token = "0x6001E34")]
		[Address(RVA = "0xF94140", Offset = "0xF94140", VA = "0xF94140")]
		[Preserve]
		public static void InputRebinderSettings_op_Equality()
		{
		}

		[Token(Token = "0x6001E35")]
		[Address(RVA = "0xF94218", Offset = "0xF94218", VA = "0xF94218")]
		[Preserve]
		public static void InputRebinderSettings_op_Implicit()
		{
		}

		[Token(Token = "0x6001E36")]
		[Address(RVA = "0xF942E8", Offset = "0xF942E8", VA = "0xF942E8")]
		[Preserve]
		public static void InputRebinderSettings_op_Inequality()
		{
		}

		[Token(Token = "0x6001E37")]
		[Address(RVA = "0xF943C0", Offset = "0xF943C0", VA = "0xF943C0")]
		[Preserve]
		public static void InsertableRestorerProxy_op_Equality()
		{
		}

		[Token(Token = "0x6001E38")]
		[Address(RVA = "0xF94498", Offset = "0xF94498", VA = "0xF94498")]
		[Preserve]
		public static void InsertableRestorerProxy_op_Implicit()
		{
		}

		[Token(Token = "0x6001E39")]
		[Address(RVA = "0xF94568", Offset = "0xF94568", VA = "0xF94568")]
		[Preserve]
		public static void InsertableRestorerProxy_op_Inequality()
		{
		}

		[Token(Token = "0x6001E3A")]
		[Address(RVA = "0xF94640", Offset = "0xF94640", VA = "0xF94640")]
		[Preserve]
		public static void InsertCartridgeIntoPlayerInteraction_op_Equality()
		{
		}

		[Token(Token = "0x6001E3B")]
		[Address(RVA = "0xF94718", Offset = "0xF94718", VA = "0xF94718")]
		[Preserve]
		public static void InsertCartridgeIntoPlayerInteraction_op_Implicit()
		{
		}

		[Token(Token = "0x6001E3C")]
		[Address(RVA = "0xF947E8", Offset = "0xF947E8", VA = "0xF947E8")]
		[Preserve]
		public static void InsertCartridgeIntoPlayerInteraction_op_Inequality()
		{
		}

		[Token(Token = "0x6001E3D")]
		[Address(RVA = "0xF948C0", Offset = "0xF948C0", VA = "0xF948C0")]
		[Preserve]
		public static void InsertRecordIntoPlayerInteraction_op_Equality()
		{
		}

		[Token(Token = "0x6001E3E")]
		[Address(RVA = "0xF94998", Offset = "0xF94998", VA = "0xF94998")]
		[Preserve]
		public static void InsertRecordIntoPlayerInteraction_op_Implicit()
		{
		}

		[Token(Token = "0x6001E3F")]
		[Address(RVA = "0xF94A68", Offset = "0xF94A68", VA = "0xF94A68")]
		[Preserve]
		public static void InsertRecordIntoPlayerInteraction_op_Inequality()
		{
		}

		[Token(Token = "0x6001E40")]
		[Address(RVA = "0xF94B40", Offset = "0xF94B40", VA = "0xF94B40")]
		[Preserve]
		public static void InspectInteraction_op_Equality()
		{
		}

		[Token(Token = "0x6001E41")]
		[Address(RVA = "0xF94C18", Offset = "0xF94C18", VA = "0xF94C18")]
		[Preserve]
		public static void InspectInteraction_op_Implicit()
		{
		}

		[Token(Token = "0x6001E42")]
		[Address(RVA = "0xF94CE8", Offset = "0xF94CE8", VA = "0xF94CE8")]
		[Preserve]
		public static void InspectInteraction_op_Inequality()
		{
		}

		[Token(Token = "0x6001E43")]
		[Address(RVA = "0xF94DC0", Offset = "0xF94DC0", VA = "0xF94DC0")]
		[Preserve]
		public static void InspectInteractionSettings_op_Equality()
		{
		}

		[Token(Token = "0x6001E44")]
		[Address(RVA = "0xF94E98", Offset = "0xF94E98", VA = "0xF94E98")]
		[Preserve]
		public static void InspectInteractionSettings_op_Implicit()
		{
		}

		[Token(Token = "0x6001E45")]
		[Address(RVA = "0xF94F68", Offset = "0xF94F68", VA = "0xF94F68")]
		[Preserve]
		public static void InspectInteractionSettings_op_Inequality()
		{
		}

		[Token(Token = "0x6001E46")]
		[Address(RVA = "0xF95040", Offset = "0xF95040", VA = "0xF95040")]
		[Preserve]
		public static void InteractableDisabler_op_Equality()
		{
		}

		[Token(Token = "0x6001E47")]
		[Address(RVA = "0xF95118", Offset = "0xF95118", VA = "0xF95118")]
		[Preserve]
		public static void InteractableDisabler_op_Implicit()
		{
		}

		[Token(Token = "0x6001E48")]
		[Address(RVA = "0xF951E8", Offset = "0xF951E8", VA = "0xF951E8")]
		[Preserve]
		public static void InteractableDisabler_op_Inequality()
		{
		}

		[Token(Token = "0x6001E49")]
		[Address(RVA = "0xF952C0", Offset = "0xF952C0", VA = "0xF952C0")]
		[Preserve]
		public static void InteractableItem_op_Equality()
		{
		}

		[Token(Token = "0x6001E4A")]
		[Address(RVA = "0xF95398", Offset = "0xF95398", VA = "0xF95398")]
		[Preserve]
		public static void InteractableItem_op_Implicit()
		{
		}

		[Token(Token = "0x6001E4B")]
		[Address(RVA = "0xF95468", Offset = "0xF95468", VA = "0xF95468")]
		[Preserve]
		public static void InteractableItem_op_Inequality()
		{
		}

		[Token(Token = "0x6001E4C")]
		[Address(RVA = "0xF95540", Offset = "0xF95540", VA = "0xF95540")]
		[Preserve]
		public static void Interactables_AttachPointProxy_op_Equality()
		{
		}

		[Token(Token = "0x6001E4D")]
		[Address(RVA = "0xF95618", Offset = "0xF95618", VA = "0xF95618")]
		[Preserve]
		public static void Interactables_AttachPointProxy_op_Implicit()
		{
		}

		[Token(Token = "0x6001E4E")]
		[Address(RVA = "0xF956E8", Offset = "0xF956E8", VA = "0xF956E8")]
		[Preserve]
		public static void Interactables_AttachPointProxy_op_Inequality()
		{
		}

		[Token(Token = "0x6001E4F")]
		[Address(RVA = "0xF957C0", Offset = "0xF957C0", VA = "0xF957C0")]
		[Preserve]
		public static void Interactables_Button_op_Equality()
		{
		}

		[Token(Token = "0x6001E50")]
		[Address(RVA = "0xF95898", Offset = "0xF95898", VA = "0xF95898")]
		[Preserve]
		public static void Interactables_Button_op_Implicit()
		{
		}

		[Token(Token = "0x6001E51")]
		[Address(RVA = "0xF95968", Offset = "0xF95968", VA = "0xF95968")]
		[Preserve]
		public static void Interactables_Button_op_Inequality()
		{
		}

		[Token(Token = "0x6001E52")]
		[Address(RVA = "0xF95A40", Offset = "0xF95A40", VA = "0xF95A40")]
		[Preserve]
		public static void Interactables_Cassette_op_Equality()
		{
		}

		[Token(Token = "0x6001E53")]
		[Address(RVA = "0xF95B18", Offset = "0xF95B18", VA = "0xF95B18")]
		[Preserve]
		public static void Interactables_Cassette_op_Implicit()
		{
		}

		[Token(Token = "0x6001E54")]
		[Address(RVA = "0xF95BE8", Offset = "0xF95BE8", VA = "0xF95BE8")]
		[Preserve]
		public static void Interactables_Cassette_op_Inequality()
		{
		}

		[Token(Token = "0x6001E55")]
		[Address(RVA = "0xF95CC0", Offset = "0xF95CC0", VA = "0xF95CC0")]
		[Preserve]
		public static void Interactables_CassetteHolder_op_Equality()
		{
		}

		[Token(Token = "0x6001E56")]
		[Address(RVA = "0xF95D98", Offset = "0xF95D98", VA = "0xF95D98")]
		[Preserve]
		public static void Interactables_CassetteHolder_op_Implicit()
		{
		}

		[Token(Token = "0x6001E57")]
		[Address(RVA = "0xF95E68", Offset = "0xF95E68", VA = "0xF95E68")]
		[Preserve]
		public static void Interactables_CassetteHolder_op_Inequality()
		{
		}

		[Token(Token = "0x6001E58")]
		[Address(RVA = "0xF95F40", Offset = "0xF95F40", VA = "0xF95F40")]
		[Preserve]
		public static void Interactables_CassettePlayer_op_Equality()
		{
		}

		[Token(Token = "0x6001E59")]
		[Address(RVA = "0xF96018", Offset = "0xF96018", VA = "0xF96018")]
		[Preserve]
		public static void Interactables_CassettePlayer_op_Implicit()
		{
		}

		[Token(Token = "0x6001E5A")]
		[Address(RVA = "0xF960E8", Offset = "0xF960E8", VA = "0xF960E8")]
		[Preserve]
		public static void Interactables_CassettePlayer_op_Inequality()
		{
		}

		[Token(Token = "0x6001E5B")]
		[Address(RVA = "0xF961C0", Offset = "0xF961C0", VA = "0xF961C0")]
		[Preserve]
		public static void Interactables_CollectInteraction_op_Equality()
		{
		}

		[Token(Token = "0x6001E5C")]
		[Address(RVA = "0xF96298", Offset = "0xF96298", VA = "0xF96298")]
		[Preserve]
		public static void Interactables_CollectInteraction_op_Implicit()
		{
		}

		[Token(Token = "0x6001E5D")]
		[Address(RVA = "0xF96368", Offset = "0xF96368", VA = "0xF96368")]
		[Preserve]
		public static void Interactables_CollectInteraction_op_Inequality()
		{
		}

		[Token(Token = "0x6001E5E")]
		[Address(RVA = "0xF96440", Offset = "0xF96440", VA = "0xF96440")]
		[Preserve]
		public static void Interactables_DialoguePlayback_op_Equality()
		{
		}

		[Token(Token = "0x6001E5F")]
		[Address(RVA = "0xF96518", Offset = "0xF96518", VA = "0xF96518")]
		[Preserve]
		public static void Interactables_DialoguePlayback_op_Implicit()
		{
		}

		[Token(Token = "0x6001E60")]
		[Address(RVA = "0xF965E8", Offset = "0xF965E8", VA = "0xF965E8")]
		[Preserve]
		public static void Interactables_DialoguePlayback_op_Inequality()
		{
		}

		[Token(Token = "0x6001E61")]
		[Address(RVA = "0xF966C0", Offset = "0xF966C0", VA = "0xF966C0")]
		[Preserve]
		public static void Interactables_DisableObjectOnDropInteraction_op_Equality()
		{
		}

		[Token(Token = "0x6001E62")]
		[Address(RVA = "0xF96798", Offset = "0xF96798", VA = "0xF96798")]
		[Preserve]
		public static void Interactables_DisableObjectOnDropInteraction_op_Implicit()
		{
		}

		[Token(Token = "0x6001E63")]
		[Address(RVA = "0xF96868", Offset = "0xF96868", VA = "0xF96868")]
		[Preserve]
		public static void Interactables_DisableObjectOnDropInteraction_op_Inequality()
		{
		}

		[Token(Token = "0x6001E64")]
		[Address(RVA = "0xF96940", Offset = "0xF96940", VA = "0xF96940")]
		[Preserve]
		public static void Interactables_Dispenser_op_Equality()
		{
		}

		[Token(Token = "0x6001E65")]
		[Address(RVA = "0xF96A18", Offset = "0xF96A18", VA = "0xF96A18")]
		[Preserve]
		public static void Interactables_Dispenser_op_Implicit()
		{
		}

		[Token(Token = "0x6001E66")]
		[Address(RVA = "0xF96AE8", Offset = "0xF96AE8", VA = "0xF96AE8")]
		[Preserve]
		public static void Interactables_Dispenser_op_Inequality()
		{
		}

		[Token(Token = "0x6001E67")]
		[Address(RVA = "0xF96BC0", Offset = "0xF96BC0", VA = "0xF96BC0")]
		[Preserve]
		public static void Interactables_DockableInTray_op_Equality()
		{
		}

		[Token(Token = "0x6001E68")]
		[Address(RVA = "0xF96C98", Offset = "0xF96C98", VA = "0xF96C98")]
		[Preserve]
		public static void Interactables_DockableInTray_op_Implicit()
		{
		}

		[Token(Token = "0x6001E69")]
		[Address(RVA = "0xF96D68", Offset = "0xF96D68", VA = "0xF96D68")]
		[Preserve]
		public static void Interactables_DockableInTray_op_Inequality()
		{
		}

		[Token(Token = "0x6001E6A")]
		[Address(RVA = "0xF96E40", Offset = "0xF96E40", VA = "0xF96E40")]
		[Preserve]
		public static void Interactables_DockInteraction_op_Equality()
		{
		}

		[Token(Token = "0x6001E6B")]
		[Address(RVA = "0xF96F18", Offset = "0xF96F18", VA = "0xF96F18")]
		[Preserve]
		public static void Interactables_DockInteraction_op_Implicit()
		{
		}

		[Token(Token = "0x6001E6C")]
		[Address(RVA = "0xF96FE8", Offset = "0xF96FE8", VA = "0xF96FE8")]
		[Preserve]
		public static void Interactables_DockInteraction_op_Inequality()
		{
		}

		[Token(Token = "0x6001E6D")]
		[Address(RVA = "0xF970C0", Offset = "0xF970C0", VA = "0xF970C0")]
		[Preserve]
		public static void Interactables_DropInteraction_op_Equality()
		{
		}

		[Token(Token = "0x6001E6E")]
		[Address(RVA = "0xF97198", Offset = "0xF97198", VA = "0xF97198")]
		[Preserve]
		public static void Interactables_DropInteraction_op_Implicit()
		{
		}

		[Token(Token = "0x6001E6F")]
		[Address(RVA = "0xF97268", Offset = "0xF97268", VA = "0xF97268")]
		[Preserve]
		public static void Interactables_DropInteraction_op_Inequality()
		{
		}

		[Token(Token = "0x6001E70")]
		[Address(RVA = "0xF97340", Offset = "0xF97340", VA = "0xF97340")]
		[Preserve]
		public static void Interactables_FsBoundedMotionInteraction_op_Equality()
		{
		}

		[Token(Token = "0x6001E71")]
		[Address(RVA = "0xF97418", Offset = "0xF97418", VA = "0xF97418")]
		[Preserve]
		public static void Interactables_FsBoundedMotionInteraction_op_Implicit()
		{
		}

		[Token(Token = "0x6001E72")]
		[Address(RVA = "0xF974E8", Offset = "0xF974E8", VA = "0xF974E8")]
		[Preserve]
		public static void Interactables_FsBoundedMotionInteraction_op_Inequality()
		{
		}

		[Token(Token = "0x6001E73")]
		[Address(RVA = "0xF975C0", Offset = "0xF975C0", VA = "0xF975C0")]
		[Preserve]
		public static void Interactables_FsInspectInteraction_op_Equality()
		{
		}

		[Token(Token = "0x6001E74")]
		[Address(RVA = "0xF97698", Offset = "0xF97698", VA = "0xF97698")]
		[Preserve]
		public static void Interactables_FsInspectInteraction_op_Implicit()
		{
		}

		[Token(Token = "0x6001E75")]
		[Address(RVA = "0xF97768", Offset = "0xF97768", VA = "0xF97768")]
		[Preserve]
		public static void Interactables_FsInspectInteraction_op_Inequality()
		{
		}

		[Token(Token = "0x6001E76")]
		[Address(RVA = "0xF97840", Offset = "0xF97840", VA = "0xF97840")]
		[Preserve]
		public static void Interactables_FsPeekInteraction_op_Equality()
		{
		}

		[Token(Token = "0x6001E77")]
		[Address(RVA = "0xF97918", Offset = "0xF97918", VA = "0xF97918")]
		[Preserve]
		public static void Interactables_FsPeekInteraction_op_Implicit()
		{
		}

		[Token(Token = "0x6001E78")]
		[Address(RVA = "0xF979E8", Offset = "0xF979E8", VA = "0xF979E8")]
		[Preserve]
		public static void Interactables_FsPeekInteraction_op_Inequality()
		{
		}

		[Token(Token = "0x6001E79")]
		[Address(RVA = "0xF97AC0", Offset = "0xF97AC0", VA = "0xF97AC0")]
		[Preserve]
		public static void Interactables_FsPlaceInteraction_op_Equality()
		{
		}

		[Token(Token = "0x6001E7A")]
		[Address(RVA = "0xF97B98", Offset = "0xF97B98", VA = "0xF97B98")]
		[Preserve]
		public static void Interactables_FsPlaceInteraction_op_Implicit()
		{
		}

		[Token(Token = "0x6001E7B")]
		[Address(RVA = "0xF97C68", Offset = "0xF97C68", VA = "0xF97C68")]
		[Preserve]
		public static void Interactables_FsPlaceInteraction_op_Inequality()
		{
		}

		[Token(Token = "0x6001E7C")]
		[Address(RVA = "0xF97D40", Offset = "0xF97D40", VA = "0xF97D40")]
		[Preserve]
		public static void Interactables_FsSwapInHandsInteraction_op_Equality()
		{
		}

		[Token(Token = "0x6001E7D")]
		[Address(RVA = "0xF97E18", Offset = "0xF97E18", VA = "0xF97E18")]
		[Preserve]
		public static void Interactables_FsSwapInHandsInteraction_op_Implicit()
		{
		}

		[Token(Token = "0x6001E7E")]
		[Address(RVA = "0xF97EE8", Offset = "0xF97EE8", VA = "0xF97EE8")]
		[Preserve]
		public static void Interactables_FsSwapInHandsInteraction_op_Inequality()
		{
		}

		[Token(Token = "0x6001E7F")]
		[Address(RVA = "0xF97FC0", Offset = "0xF97FC0", VA = "0xF97FC0")]
		[Preserve]
		public static void Interactables_FsThrowInteraction_op_Equality()
		{
		}

		[Token(Token = "0x6001E80")]
		[Address(RVA = "0xF98098", Offset = "0xF98098", VA = "0xF98098")]
		[Preserve]
		public static void Interactables_FsThrowInteraction_op_Implicit()
		{
		}

		[Token(Token = "0x6001E81")]
		[Address(RVA = "0xF98168", Offset = "0xF98168", VA = "0xF98168")]
		[Preserve]
		public static void Interactables_FsThrowInteraction_op_Inequality()
		{
		}

		[Token(Token = "0x6001E82")]
		[Address(RVA = "0xF98240", Offset = "0xF98240", VA = "0xF98240")]
		[Preserve]
		public static void Interactables_GraspInteraction_op_Equality()
		{
		}

		[Token(Token = "0x6001E83")]
		[Address(RVA = "0xF98318", Offset = "0xF98318", VA = "0xF98318")]
		[Preserve]
		public static void Interactables_GraspInteraction_op_Implicit()
		{
		}

		[Token(Token = "0x6001E84")]
		[Address(RVA = "0xF983E8", Offset = "0xF983E8", VA = "0xF983E8")]
		[Preserve]
		public static void Interactables_GraspInteraction_op_Inequality()
		{
		}

		[Token(Token = "0x6001E85")]
		[Address(RVA = "0xF984C0", Offset = "0xF984C0", VA = "0xF984C0")]
		[Preserve]
		public static void Interactables_Handle_op_Equality()
		{
		}

		[Token(Token = "0x6001E86")]
		[Address(RVA = "0xF98598", Offset = "0xF98598", VA = "0xF98598")]
		[Preserve]
		public static void Interactables_Handle_op_Implicit()
		{
		}

		[Token(Token = "0x6001E87")]
		[Address(RVA = "0xF98668", Offset = "0xF98668", VA = "0xF98668")]
		[Preserve]
		public static void Interactables_Handle_op_Inequality()
		{
		}

		[Token(Token = "0x6001E88")]
		[Address(RVA = "0xF98740", Offset = "0xF98740", VA = "0xF98740")]
		[Preserve]
		public static void Interactables_Holdable_op_Equality()
		{
		}

		[Token(Token = "0x6001E89")]
		[Address(RVA = "0xF98818", Offset = "0xF98818", VA = "0xF98818")]
		[Preserve]
		public static void Interactables_Holdable_op_Implicit()
		{
		}

		[Token(Token = "0x6001E8A")]
		[Address(RVA = "0xF988E8", Offset = "0xF988E8", VA = "0xF988E8")]
		[Preserve]
		public static void Interactables_Holdable_op_Inequality()
		{
		}

		[Token(Token = "0x6001E8B")]
		[Address(RVA = "0xF989C0", Offset = "0xF989C0", VA = "0xF989C0")]
		[Preserve]
		public static void Interactables_Holder_op_Equality()
		{
		}

		[Token(Token = "0x6001E8C")]
		[Address(RVA = "0xF98A98", Offset = "0xF98A98", VA = "0xF98A98")]
		[Preserve]
		public static void Interactables_Holder_op_Implicit()
		{
		}

		[Token(Token = "0x6001E8D")]
		[Address(RVA = "0xF98B68", Offset = "0xF98B68", VA = "0xF98B68")]
		[Preserve]
		public static void Interactables_Holder_op_Inequality()
		{
		}

		[Token(Token = "0x6001E8E")]
		[Address(RVA = "0xF98C40", Offset = "0xF98C40", VA = "0xF98C40")]
		[Preserve]
		public static void Interactables_ItemScripts_PlayerControllerRumbleEventHandler_op_Equality()
		{
		}

		[Token(Token = "0x6001E8F")]
		[Address(RVA = "0xF98D18", Offset = "0xF98D18", VA = "0xF98D18")]
		[Preserve]
		public static void Interactables_ItemScripts_PlayerControllerRumbleEventHandler_op_Implicit()
		{
		}

		[Token(Token = "0x6001E90")]
		[Address(RVA = "0xF98DE8", Offset = "0xF98DE8", VA = "0xF98DE8")]
		[Preserve]
		public static void Interactables_ItemScripts_PlayerControllerRumbleEventHandler_op_Inequality()
		{
		}

		[Token(Token = "0x6001E91")]
		[Address(RVA = "0xF98EC0", Offset = "0xF98EC0", VA = "0xF98EC0")]
		[Preserve]
		public static void Interactables_KineticToy_op_Equality()
		{
		}

		[Token(Token = "0x6001E92")]
		[Address(RVA = "0xF98F98", Offset = "0xF98F98", VA = "0xF98F98")]
		[Preserve]
		public static void Interactables_KineticToy_op_Implicit()
		{
		}

		[Token(Token = "0x6001E93")]
		[Address(RVA = "0xF99068", Offset = "0xF99068", VA = "0xF99068")]
		[Preserve]
		public static void Interactables_KineticToy_op_Inequality()
		{
		}

		[Token(Token = "0x6001E94")]
		[Address(RVA = "0xF99140", Offset = "0xF99140", VA = "0xF99140")]
		[Preserve]
		public static void Interactables_MoveToLocationInteraction_op_Equality()
		{
		}

		[Token(Token = "0x6001E95")]
		[Address(RVA = "0xF99218", Offset = "0xF99218", VA = "0xF99218")]
		[Preserve]
		public static void Interactables_MoveToLocationInteraction_op_Implicit()
		{
		}

		[Token(Token = "0x6001E96")]
		[Address(RVA = "0xF992E8", Offset = "0xF992E8", VA = "0xF992E8")]
		[Preserve]
		public static void Interactables_MoveToLocationInteraction_op_Inequality()
		{
		}

		[Token(Token = "0x6001E97")]
		[Address(RVA = "0xF993C0", Offset = "0xF993C0", VA = "0xF993C0")]
		[Preserve]
		public static void Interactables_PhysicsHoldable_enabled()
		{
		}

		[Token(Token = "0x6001E98")]
		[Address(RVA = "0xF99418", Offset = "0xF99418", VA = "0xF99418")]
		[Preserve]
		public static void Interactables_PhysicsHoldable_op_Equality()
		{
		}

		[Token(Token = "0x6001E99")]
		[Address(RVA = "0xF994F0", Offset = "0xF994F0", VA = "0xF994F0")]
		[Preserve]
		public static void Interactables_PhysicsHoldable_op_Implicit()
		{
		}

		[Token(Token = "0x6001E9A")]
		[Address(RVA = "0xF995C0", Offset = "0xF995C0", VA = "0xF995C0")]
		[Preserve]
		public static void Interactables_PhysicsHoldable_op_Inequality()
		{
		}

		[Token(Token = "0x6001E9B")]
		[Address(RVA = "0xF99698", Offset = "0xF99698", VA = "0xF99698")]
		[Preserve]
		public static void Interactables_PhysicsHoldableAutoDock_op_Equality()
		{
		}

		[Token(Token = "0x6001E9C")]
		[Address(RVA = "0xF99770", Offset = "0xF99770", VA = "0xF99770")]
		[Preserve]
		public static void Interactables_PhysicsHoldableAutoDock_op_Implicit()
		{
		}

		[Token(Token = "0x6001E9D")]
		[Address(RVA = "0xF99840", Offset = "0xF99840", VA = "0xF99840")]
		[Preserve]
		public static void Interactables_PhysicsHoldableAutoDock_op_Inequality()
		{
		}

		[Token(Token = "0x6001E9E")]
		[Address(RVA = "0xF99918", Offset = "0xF99918", VA = "0xF99918")]
		[Preserve]
		public static void Interactables_PhysicsHoldableDock_op_Equality()
		{
		}

		[Token(Token = "0x6001E9F")]
		[Address(RVA = "0xF999F0", Offset = "0xF999F0", VA = "0xF999F0")]
		[Preserve]
		public static void Interactables_PhysicsHoldableDock_op_Implicit()
		{
		}

		[Token(Token = "0x6001EA0")]
		[Address(RVA = "0xF99AC0", Offset = "0xF99AC0", VA = "0xF99AC0")]
		[Preserve]
		public static void Interactables_PhysicsHoldableDock_op_Inequality()
		{
		}

		[Token(Token = "0x6001EA1")]
		[Address(RVA = "0xF99B98", Offset = "0xF99B98", VA = "0xF99B98")]
		[Preserve]
		public static void Interactables_PickUpInteraction_op_Equality()
		{
		}

		[Token(Token = "0x6001EA2")]
		[Address(RVA = "0xF99C70", Offset = "0xF99C70", VA = "0xF99C70")]
		[Preserve]
		public static void Interactables_PickUpInteraction_op_Implicit()
		{
		}

		[Token(Token = "0x6001EA3")]
		[Address(RVA = "0xF99D40", Offset = "0xF99D40", VA = "0xF99D40")]
		[Preserve]
		public static void Interactables_PickUpInteraction_op_Inequality()
		{
		}

		[Token(Token = "0x6001EA4")]
		[Address(RVA = "0xF99E18", Offset = "0xF99E18", VA = "0xF99E18")]
		[Preserve]
		public static void Interactables_RadioButton_op_Equality()
		{
		}

		[Token(Token = "0x6001EA5")]
		[Address(RVA = "0xF99EF0", Offset = "0xF99EF0", VA = "0xF99EF0")]
		[Preserve]
		public static void Interactables_RadioButton_op_Implicit()
		{
		}

		[Token(Token = "0x6001EA6")]
		[Address(RVA = "0xF99FC0", Offset = "0xF99FC0", VA = "0xF99FC0")]
		[Preserve]
		public static void Interactables_RadioButton_op_Inequality()
		{
		}

		[Token(Token = "0x6001EA7")]
		[Address(RVA = "0xF9A098", Offset = "0xF9A098", VA = "0xF9A098")]
		[Preserve]
		public static void Interactables_RedockInteraction_op_Equality()
		{
		}

		[Token(Token = "0x6001EA8")]
		[Address(RVA = "0xF9A170", Offset = "0xF9A170", VA = "0xF9A170")]
		[Preserve]
		public static void Interactables_RedockInteraction_op_Implicit()
		{
		}

		[Token(Token = "0x6001EA9")]
		[Address(RVA = "0xF9A240", Offset = "0xF9A240", VA = "0xF9A240")]
		[Preserve]
		public static void Interactables_RedockInteraction_op_Inequality()
		{
		}

		[Token(Token = "0x6001EAA")]
		[Address(RVA = "0xF9A318", Offset = "0xF9A318", VA = "0xF9A318")]
		[Preserve]
		public static void Interactables_ReleaseInteraction_op_Equality()
		{
		}

		[Token(Token = "0x6001EAB")]
		[Address(RVA = "0xF9A3F0", Offset = "0xF9A3F0", VA = "0xF9A3F0")]
		[Preserve]
		public static void Interactables_ReleaseInteraction_op_Implicit()
		{
		}

		[Token(Token = "0x6001EAC")]
		[Address(RVA = "0xF9A4C0", Offset = "0xF9A4C0", VA = "0xF9A4C0")]
		[Preserve]
		public static void Interactables_ReleaseInteraction_op_Inequality()
		{
		}

		[Token(Token = "0x6001EAD")]
		[Address(RVA = "0xF9A598", Offset = "0xF9A598", VA = "0xF9A598")]
		[Preserve]
		public static void Interactables_ReleaseInteraction_FlatScreen_op_Equality()
		{
		}

		[Token(Token = "0x6001EAE")]
		[Address(RVA = "0xF9A670", Offset = "0xF9A670", VA = "0xF9A670")]
		[Preserve]
		public static void Interactables_ReleaseInteraction_FlatScreen_op_Implicit()
		{
		}

		[Token(Token = "0x6001EAF")]
		[Address(RVA = "0xF9A740", Offset = "0xF9A740", VA = "0xF9A740")]
		[Preserve]
		public static void Interactables_ReleaseInteraction_FlatScreen_op_Inequality()
		{
		}

		[Token(Token = "0x6001EB0")]
		[Address(RVA = "0xF9A818", Offset = "0xF9A818", VA = "0xF9A818")]
		[Preserve]
		public static void Interactables_TakeInteraction_op_Equality()
		{
		}

		[Token(Token = "0x6001EB1")]
		[Address(RVA = "0xF9A8F0", Offset = "0xF9A8F0", VA = "0xF9A8F0")]
		[Preserve]
		public static void Interactables_TakeInteraction_op_Implicit()
		{
		}

		[Token(Token = "0x6001EB2")]
		[Address(RVA = "0xF9A9C0", Offset = "0xF9A9C0", VA = "0xF9A9C0")]
		[Preserve]
		public static void Interactables_TakeInteraction_op_Inequality()
		{
		}

		[Token(Token = "0x6001EB3")]
		[Address(RVA = "0xF9AA98", Offset = "0xF9AA98", VA = "0xF9AA98")]
		[Preserve]
		public static void Interactables_ToggleButton_op_Equality()
		{
		}

		[Token(Token = "0x6001EB4")]
		[Address(RVA = "0xF9AB70", Offset = "0xF9AB70", VA = "0xF9AB70")]
		[Preserve]
		public static void Interactables_ToggleButton_op_Implicit()
		{
		}

		[Token(Token = "0x6001EB5")]
		[Address(RVA = "0xF9AC40", Offset = "0xF9AC40", VA = "0xF9AC40")]
		[Preserve]
		public static void Interactables_ToggleButton_op_Inequality()
		{
		}

		[Token(Token = "0x6001EB6")]
		[Address(RVA = "0xF9AD18", Offset = "0xF9AD18", VA = "0xF9AD18")]
		[Preserve]
		public static void Interactables_TouchInteraction_op_Equality()
		{
		}

		[Token(Token = "0x6001EB7")]
		[Address(RVA = "0xF9ADF0", Offset = "0xF9ADF0", VA = "0xF9ADF0")]
		[Preserve]
		public static void Interactables_TouchInteraction_op_Implicit()
		{
		}

		[Token(Token = "0x6001EB8")]
		[Address(RVA = "0xF9AEC0", Offset = "0xF9AEC0", VA = "0xF9AEC0")]
		[Preserve]
		public static void Interactables_TouchInteraction_op_Inequality()
		{
		}

		[Token(Token = "0x6001EB9")]
		[Address(RVA = "0xF9AF98", Offset = "0xF9AF98", VA = "0xF9AF98")]
		[Preserve]
		public static void Interactables_Tray_op_Equality()
		{
		}

		[Token(Token = "0x6001EBA")]
		[Address(RVA = "0xF9B070", Offset = "0xF9B070", VA = "0xF9B070")]
		[Preserve]
		public static void Interactables_Tray_op_Implicit()
		{
		}

		[Token(Token = "0x6001EBB")]
		[Address(RVA = "0xF9B140", Offset = "0xF9B140", VA = "0xF9B140")]
		[Preserve]
		public static void Interactables_Tray_op_Inequality()
		{
		}

		[Token(Token = "0x6001EBC")]
		[Address(RVA = "0xF9B218", Offset = "0xF9B218", VA = "0xF9B218")]
		[Preserve]
		public static void Interactables_UndockInteraction_op_Equality()
		{
		}

		[Token(Token = "0x6001EBD")]
		[Address(RVA = "0xF9B2F0", Offset = "0xF9B2F0", VA = "0xF9B2F0")]
		[Preserve]
		public static void Interactables_UndockInteraction_op_Implicit()
		{
		}

		[Token(Token = "0x6001EBE")]
		[Address(RVA = "0xF9B3C0", Offset = "0xF9B3C0", VA = "0xF9B3C0")]
		[Preserve]
		public static void Interactables_UndockInteraction_op_Inequality()
		{
		}

		[Token(Token = "0x6001EBF")]
		[Address(RVA = "0xF9B498", Offset = "0xF9B498", VA = "0xF9B498")]
		[Preserve]
		public static void Interactables_UseInteraction_op_Equality()
		{
		}

		[Token(Token = "0x6001EC0")]
		[Address(RVA = "0xF9B570", Offset = "0xF9B570", VA = "0xF9B570")]
		[Preserve]
		public static void Interactables_UseInteraction_op_Implicit()
		{
		}

		[Token(Token = "0x6001EC1")]
		[Address(RVA = "0xF9B640", Offset = "0xF9B640", VA = "0xF9B640")]
		[Preserve]
		public static void Interactables_UseInteraction_op_Inequality()
		{
		}

		[Token(Token = "0x6001EC2")]
		[Address(RVA = "0xF9B718", Offset = "0xF9B718", VA = "0xF9B718")]
		[Preserve]
		public static void Interactables_Vinyl_op_Equality()
		{
		}

		[Token(Token = "0x6001EC3")]
		[Address(RVA = "0xF9B7F0", Offset = "0xF9B7F0", VA = "0xF9B7F0")]
		[Preserve]
		public static void Interactables_Vinyl_op_Implicit()
		{
		}

		[Token(Token = "0x6001EC4")]
		[Address(RVA = "0xF9B8C0", Offset = "0xF9B8C0", VA = "0xF9B8C0")]
		[Preserve]
		public static void Interactables_Vinyl_op_Inequality()
		{
		}

		[Token(Token = "0x6001EC5")]
		[Address(RVA = "0xF9B998", Offset = "0xF9B998", VA = "0xF9B998")]
		[Preserve]
		public static void InteractionHandler_op_Equality()
		{
		}

		[Token(Token = "0x6001EC6")]
		[Address(RVA = "0xF9BA70", Offset = "0xF9BA70", VA = "0xF9BA70")]
		[Preserve]
		public static void InteractionHandler_op_Implicit()
		{
		}

		[Token(Token = "0x6001EC7")]
		[Address(RVA = "0xF9BB40", Offset = "0xF9BB40", VA = "0xF9BB40")]
		[Preserve]
		public static void InteractionHandler_op_Inequality()
		{
		}

		[Token(Token = "0x6001EC8")]
		[Address(RVA = "0xF9BC18", Offset = "0xF9BC18", VA = "0xF9BC18")]
		[Preserve]
		public static void IntFactStatUI_op_Equality()
		{
		}

		[Token(Token = "0x6001EC9")]
		[Address(RVA = "0xF9BCF0", Offset = "0xF9BCF0", VA = "0xF9BCF0")]
		[Preserve]
		public static void IntFactStatUI_op_Implicit()
		{
		}

		[Token(Token = "0x6001ECA")]
		[Address(RVA = "0xF9BDC0", Offset = "0xF9BDC0", VA = "0xF9BDC0")]
		[Preserve]
		public static void IntFactStatUI_op_Inequality()
		{
		}

		[Token(Token = "0x6001ECB")]
		[Address(RVA = "0xF9BE98", Offset = "0xF9BE98", VA = "0xF9BE98")]
		[Preserve]
		public static void InventoryInteractionSettings_op_Equality()
		{
		}

		[Token(Token = "0x6001ECC")]
		[Address(RVA = "0xF9BF70", Offset = "0xF9BF70", VA = "0xF9BF70")]
		[Preserve]
		public static void InventoryInteractionSettings_op_Implicit()
		{
		}

		[Token(Token = "0x6001ECD")]
		[Address(RVA = "0xF9C040", Offset = "0xF9C040", VA = "0xF9C040")]
		[Preserve]
		public static void InventoryInteractionSettings_op_Inequality()
		{
		}

		[Token(Token = "0x6001ECE")]
		[Address(RVA = "0xF9C118", Offset = "0xF9C118", VA = "0xF9C118")]
		[Preserve]
		public static void InventoryManager_op_Equality()
		{
		}

		[Token(Token = "0x6001ECF")]
		[Address(RVA = "0xF9C1F0", Offset = "0xF9C1F0", VA = "0xF9C1F0")]
		[Preserve]
		public static void InventoryManager_op_Implicit()
		{
		}

		[Token(Token = "0x6001ED0")]
		[Address(RVA = "0xF9C2C0", Offset = "0xF9C2C0", VA = "0xF9C2C0")]
		[Preserve]
		public static void InventoryManager_op_Inequality()
		{
		}

		[Token(Token = "0x6001ED1")]
		[Address(RVA = "0xF9C398", Offset = "0xF9C398", VA = "0xF9C398")]
		[Preserve]
		public static void KeepWorldYOrientation_op_Equality()
		{
		}

		[Token(Token = "0x6001ED2")]
		[Address(RVA = "0xF9C470", Offset = "0xF9C470", VA = "0xF9C470")]
		[Preserve]
		public static void KeepWorldYOrientation_op_Implicit()
		{
		}

		[Token(Token = "0x6001ED3")]
		[Address(RVA = "0xF9C540", Offset = "0xF9C540", VA = "0xF9C540")]
		[Preserve]
		public static void KeepWorldYOrientation_op_Inequality()
		{
		}

		[Token(Token = "0x6001ED4")]
		[Address(RVA = "0xF9C618", Offset = "0xF9C618", VA = "0xF9C618")]
		[Preserve]
		public static void KickInteraction_op_Equality()
		{
		}

		[Token(Token = "0x6001ED5")]
		[Address(RVA = "0xF9C6F0", Offset = "0xF9C6F0", VA = "0xF9C6F0")]
		[Preserve]
		public static void KickInteraction_op_Implicit()
		{
		}

		[Token(Token = "0x6001ED6")]
		[Address(RVA = "0xF9C7C0", Offset = "0xF9C7C0", VA = "0xF9C7C0")]
		[Preserve]
		public static void KickInteraction_op_Inequality()
		{
		}

		[Token(Token = "0x6001ED7")]
		[Address(RVA = "0xF9C898", Offset = "0xF9C898", VA = "0xF9C898")]
		[Preserve]
		public static void LastSavedStatUI_op_Equality()
		{
		}

		[Token(Token = "0x6001ED8")]
		[Address(RVA = "0xF9C970", Offset = "0xF9C970", VA = "0xF9C970")]
		[Preserve]
		public static void LastSavedStatUI_op_Implicit()
		{
		}

		[Token(Token = "0x6001ED9")]
		[Address(RVA = "0xF9CA40", Offset = "0xF9CA40", VA = "0xF9CA40")]
		[Preserve]
		public static void LastSavedStatUI_op_Inequality()
		{
		}

		[Token(Token = "0x6001EDA")]
		[Address(RVA = "0xF9CB18", Offset = "0xF9CB18", VA = "0xF9CB18")]
		[Preserve]
		public static void LeanTester_op_Equality()
		{
		}

		[Token(Token = "0x6001EDB")]
		[Address(RVA = "0xF9CBF0", Offset = "0xF9CBF0", VA = "0xF9CBF0")]
		[Preserve]
		public static void LeanTester_op_Implicit()
		{
		}

		[Token(Token = "0x6001EDC")]
		[Address(RVA = "0xF9CCC0", Offset = "0xF9CCC0", VA = "0xF9CCC0")]
		[Preserve]
		public static void LeanTester_op_Inequality()
		{
		}

		[Token(Token = "0x6001EDD")]
		[Address(RVA = "0xF9CD98", Offset = "0xF9CD98", VA = "0xF9CD98")]
		[Preserve]
		public static void LeanTween_op_Equality()
		{
		}

		[Token(Token = "0x6001EDE")]
		[Address(RVA = "0xF9CE70", Offset = "0xF9CE70", VA = "0xF9CE70")]
		[Preserve]
		public static void LeanTween_op_Implicit()
		{
		}

		[Token(Token = "0x6001EDF")]
		[Address(RVA = "0xF9CF40", Offset = "0xF9CF40", VA = "0xF9CF40")]
		[Preserve]
		public static void LeanTween_op_Inequality()
		{
		}

		[Token(Token = "0x6001EE0")]
		[Address(RVA = "0xF9D018", Offset = "0xF9D018", VA = "0xF9D018")]
		[Preserve]
		public static void Lever_op_Equality()
		{
		}

		[Token(Token = "0x6001EE1")]
		[Address(RVA = "0xF9D0F0", Offset = "0xF9D0F0", VA = "0xF9D0F0")]
		[Preserve]
		public static void Lever_op_Implicit()
		{
		}

		[Token(Token = "0x6001EE2")]
		[Address(RVA = "0xF9D1C0", Offset = "0xF9D1C0", VA = "0xF9D1C0")]
		[Preserve]
		public static void Lever_op_Inequality()
		{
		}

		[Token(Token = "0x6001EE3")]
		[Address(RVA = "0xF9D298", Offset = "0xF9D298", VA = "0xF9D298")]
		[Preserve]
		public static void LightBulb_op_Equality()
		{
		}

		[Token(Token = "0x6001EE4")]
		[Address(RVA = "0xF9D370", Offset = "0xF9D370", VA = "0xF9D370")]
		[Preserve]
		public static void LightBulb_op_Implicit()
		{
		}

		[Token(Token = "0x6001EE5")]
		[Address(RVA = "0xF9D440", Offset = "0xF9D440", VA = "0xF9D440")]
		[Preserve]
		public static void LightBulb_op_Inequality()
		{
		}

		[Token(Token = "0x6001EE6")]
		[Address(RVA = "0xF9D518", Offset = "0xF9D518", VA = "0xF9D518")]
		[Preserve]
		public static void LightFlicker_op_Equality()
		{
		}

		[Token(Token = "0x6001EE7")]
		[Address(RVA = "0xF9D5F0", Offset = "0xF9D5F0", VA = "0xF9D5F0")]
		[Preserve]
		public static void LightFlicker_op_Implicit()
		{
		}

		[Token(Token = "0x6001EE8")]
		[Address(RVA = "0xF9D6C0", Offset = "0xF9D6C0", VA = "0xF9D6C0")]
		[Preserve]
		public static void LightFlicker_op_Inequality()
		{
		}

		[Token(Token = "0x6001EE9")]
		[Address(RVA = "0xF9D798", Offset = "0xF9D798", VA = "0xF9D798")]
		[Preserve]
		public static void LoadAllMetadataState_op_Equality()
		{
		}

		[Token(Token = "0x6001EEA")]
		[Address(RVA = "0xF9D870", Offset = "0xF9D870", VA = "0xF9D870")]
		[Preserve]
		public static void LoadAllMetadataState_op_Implicit()
		{
		}

		[Token(Token = "0x6001EEB")]
		[Address(RVA = "0xF9D940", Offset = "0xF9D940", VA = "0xF9D940")]
		[Preserve]
		public static void LoadAllMetadataState_op_Inequality()
		{
		}

		[Token(Token = "0x6001EEC")]
		[Address(RVA = "0xF9DA18", Offset = "0xF9DA18", VA = "0xF9DA18")]
		[Preserve]
		public static void LoadDataState_op_Equality()
		{
		}

		[Token(Token = "0x6001EED")]
		[Address(RVA = "0xF9DAF0", Offset = "0xF9DAF0", VA = "0xF9DAF0")]
		[Preserve]
		public static void LoadDataState_op_Implicit()
		{
		}

		[Token(Token = "0x6001EEE")]
		[Address(RVA = "0xF9DBC0", Offset = "0xF9DBC0", VA = "0xF9DBC0")]
		[Preserve]
		public static void LoadDataState_op_Inequality()
		{
		}

		[Token(Token = "0x6001EEF")]
		[Address(RVA = "0xF9DC98", Offset = "0xF9DC98", VA = "0xF9DC98")]
		[Preserve]
		public static void LoadEngagementSceneState_op_Equality()
		{
		}

		[Token(Token = "0x6001EF0")]
		[Address(RVA = "0xF9DD70", Offset = "0xF9DD70", VA = "0xF9DD70")]
		[Preserve]
		public static void LoadEngagementSceneState_op_Implicit()
		{
		}

		[Token(Token = "0x6001EF1")]
		[Address(RVA = "0xF9DE40", Offset = "0xF9DE40", VA = "0xF9DE40")]
		[Preserve]
		public static void LoadEngagementSceneState_op_Inequality()
		{
		}

		[Token(Token = "0x6001EF2")]
		[Address(RVA = "0xF9DF18", Offset = "0xF9DF18", VA = "0xF9DF18")]
		[Preserve]
		public static void LoadGameErrorState_op_Equality()
		{
		}

		[Token(Token = "0x6001EF3")]
		[Address(RVA = "0xF9DFF0", Offset = "0xF9DFF0", VA = "0xF9DFF0")]
		[Preserve]
		public static void LoadGameErrorState_op_Implicit()
		{
		}

		[Token(Token = "0x6001EF4")]
		[Address(RVA = "0xF9E0C0", Offset = "0xF9E0C0", VA = "0xF9E0C0")]
		[Preserve]
		public static void LoadGameErrorState_op_Inequality()
		{
		}

		[Token(Token = "0x6001EF5")]
		[Address(RVA = "0xF9E198", Offset = "0xF9E198", VA = "0xF9E198")]
		[Preserve]
		public static void LoadGameplaySceneState_op_Equality()
		{
		}

		[Token(Token = "0x6001EF6")]
		[Address(RVA = "0xF9E270", Offset = "0xF9E270", VA = "0xF9E270")]
		[Preserve]
		public static void LoadGameplaySceneState_op_Implicit()
		{
		}

		[Token(Token = "0x6001EF7")]
		[Address(RVA = "0xF9E340", Offset = "0xF9E340", VA = "0xF9E340")]
		[Preserve]
		public static void LoadGameplaySceneState_op_Inequality()
		{
		}

		[Token(Token = "0x6001EF8")]
		[Address(RVA = "0xF9E418", Offset = "0xF9E418", VA = "0xF9E418")]
		[Preserve]
		public static void LoadIdentSceneState_op_Equality()
		{
		}

		[Token(Token = "0x6001EF9")]
		[Address(RVA = "0xF9E4F0", Offset = "0xF9E4F0", VA = "0xF9E4F0")]
		[Preserve]
		public static void LoadIdentSceneState_op_Implicit()
		{
		}

		[Token(Token = "0x6001EFA")]
		[Address(RVA = "0xF9E5C0", Offset = "0xF9E5C0", VA = "0xF9E5C0")]
		[Preserve]
		public static void LoadIdentSceneState_op_Inequality()
		{
		}

		[Token(Token = "0x6001EFB")]
		[Address(RVA = "0xF9E698", Offset = "0xF9E698", VA = "0xF9E698")]
		[Preserve]
		public static void LoadingBar_op_Equality()
		{
		}

		[Token(Token = "0x6001EFC")]
		[Address(RVA = "0xF9E770", Offset = "0xF9E770", VA = "0xF9E770")]
		[Preserve]
		public static void LoadingBar_op_Implicit()
		{
		}

		[Token(Token = "0x6001EFD")]
		[Address(RVA = "0xF9E840", Offset = "0xF9E840", VA = "0xF9E840")]
		[Preserve]
		public static void LoadingBar_op_Inequality()
		{
		}

		[Token(Token = "0x6001EFE")]
		[Address(RVA = "0xF9E918", Offset = "0xF9E918", VA = "0xF9E918")]
		[Preserve]
		public static void LoadMenuSceneState_op_Equality()
		{
		}

		[Token(Token = "0x6001EFF")]
		[Address(RVA = "0xF9E9F0", Offset = "0xF9E9F0", VA = "0xF9E9F0")]
		[Preserve]
		public static void LoadMenuSceneState_op_Implicit()
		{
		}

		[Token(Token = "0x6001F00")]
		[Address(RVA = "0xF9EAC0", Offset = "0xF9EAC0", VA = "0xF9EAC0")]
		[Preserve]
		public static void LoadMenuSceneState_op_Inequality()
		{
		}

		[Token(Token = "0x6001F01")]
		[Address(RVA = "0xF9EB98", Offset = "0xF9EB98", VA = "0xF9EB98")]
		[Preserve]
		public static void LoadMetadataState_op_Equality()
		{
		}

		[Token(Token = "0x6001F02")]
		[Address(RVA = "0xF9EC70", Offset = "0xF9EC70", VA = "0xF9EC70")]
		[Preserve]
		public static void LoadMetadataState_op_Implicit()
		{
		}

		[Token(Token = "0x6001F03")]
		[Address(RVA = "0xF9ED40", Offset = "0xF9ED40", VA = "0xF9ED40")]
		[Preserve]
		public static void LoadMetadataState_op_Inequality()
		{
		}

		[Token(Token = "0x6001F04")]
		[Address(RVA = "0xF9EE18", Offset = "0xF9EE18", VA = "0xF9EE18")]
		[Preserve]
		public static void LoadSettingsState_op_Equality()
		{
		}

		[Token(Token = "0x6001F05")]
		[Address(RVA = "0xF9EEF0", Offset = "0xF9EEF0", VA = "0xF9EEF0")]
		[Preserve]
		public static void LoadSettingsState_op_Implicit()
		{
		}

		[Token(Token = "0x6001F06")]
		[Address(RVA = "0xF9EFC0", Offset = "0xF9EFC0", VA = "0xF9EFC0")]
		[Preserve]
		public static void LoadSettingsState_op_Inequality()
		{
		}

		[Token(Token = "0x6001F07")]
		[Address(RVA = "0xF9F098", Offset = "0xF9F098", VA = "0xF9F098")]
		[Preserve]
		public static void LoadTransitionSceneState_op_Equality()
		{
		}

		[Token(Token = "0x6001F08")]
		[Address(RVA = "0xF9F170", Offset = "0xF9F170", VA = "0xF9F170")]
		[Preserve]
		public static void LoadTransitionSceneState_op_Implicit()
		{
		}

		[Token(Token = "0x6001F09")]
		[Address(RVA = "0xF9F240", Offset = "0xF9F240", VA = "0xF9F240")]
		[Preserve]
		public static void LoadTransitionSceneState_op_Inequality()
		{
		}

		[Token(Token = "0x6001F0A")]
		[Address(RVA = "0xF9F318", Offset = "0xF9F318", VA = "0xF9F318")]
		[Preserve]
		public static void LocomotionHandler_op_Equality()
		{
		}

		[Token(Token = "0x6001F0B")]
		[Address(RVA = "0xF9F3F0", Offset = "0xF9F3F0", VA = "0xF9F3F0")]
		[Preserve]
		public static void LocomotionHandler_op_Implicit()
		{
		}

		[Token(Token = "0x6001F0C")]
		[Address(RVA = "0xF9F4C0", Offset = "0xF9F4C0", VA = "0xF9F4C0")]
		[Preserve]
		public static void LocomotionHandler_op_Inequality()
		{
		}

		[Token(Token = "0x6001F0D")]
		[Address(RVA = "0xF9F598", Offset = "0xF9F598", VA = "0xF9F598")]
		[Preserve]
		public static void LookAtItems_op_Equality()
		{
		}

		[Token(Token = "0x6001F0E")]
		[Address(RVA = "0xF9F670", Offset = "0xF9F670", VA = "0xF9F670")]
		[Preserve]
		public static void LookAtItems_op_Implicit()
		{
		}

		[Token(Token = "0x6001F0F")]
		[Address(RVA = "0xF9F740", Offset = "0xF9F740", VA = "0xF9F740")]
		[Preserve]
		public static void LookAtItems_op_Inequality()
		{
		}

		[Token(Token = "0x6001F10")]
		[Address(RVA = "0xF9F818", Offset = "0xF9F818", VA = "0xF9F818")]
		[Preserve]
		public static void LPRecordProperties_op_Equality()
		{
		}

		[Token(Token = "0x6001F11")]
		[Address(RVA = "0xF9F8F0", Offset = "0xF9F8F0", VA = "0xF9F8F0")]
		[Preserve]
		public static void LPRecordProperties_op_Implicit()
		{
		}

		[Token(Token = "0x6001F12")]
		[Address(RVA = "0xF9F9C0", Offset = "0xF9F9C0", VA = "0xF9F9C0")]
		[Preserve]
		public static void LPRecordProperties_op_Inequality()
		{
		}

		[Token(Token = "0x6001F13")]
		[Address(RVA = "0xF9FA98", Offset = "0xF9FA98", VA = "0xF9FA98")]
		[Preserve]
		public static void LPRecordSleeve_op_Equality()
		{
		}

		[Token(Token = "0x6001F14")]
		[Address(RVA = "0xF9FB70", Offset = "0xF9FB70", VA = "0xF9FB70")]
		[Preserve]
		public static void LPRecordSleeve_op_Implicit()
		{
		}

		[Token(Token = "0x6001F15")]
		[Address(RVA = "0xF9FC40", Offset = "0xF9FC40", VA = "0xF9FC40")]
		[Preserve]
		public static void LPRecordSleeve_op_Inequality()
		{
		}

		[Token(Token = "0x6001F16")]
		[Address(RVA = "0xF9FD18", Offset = "0xF9FD18", VA = "0xF9FD18")]
		[Preserve]
		public static void LPRecordsList_op_Equality()
		{
		}

		[Token(Token = "0x6001F17")]
		[Address(RVA = "0xF9FDF0", Offset = "0xF9FDF0", VA = "0xF9FDF0")]
		[Preserve]
		public static void LPRecordsList_op_Implicit()
		{
		}

		[Token(Token = "0x6001F18")]
		[Address(RVA = "0xF9FEC0", Offset = "0xF9FEC0", VA = "0xF9FEC0")]
		[Preserve]
		public static void LPRecordsList_op_Inequality()
		{
		}

		[Token(Token = "0x6001F19")]
		[Address(RVA = "0xF9FF98", Offset = "0xF9FF98", VA = "0xF9FF98")]
		[Preserve]
		public static void Ludiq_Generated_PropertyProviders_PropertyProvider_FMODUnity_EventReference_op_Equality()
		{
		}

		[Token(Token = "0x6001F1A")]
		[Address(RVA = "0xFA0070", Offset = "0xFA0070", VA = "0xFA0070")]
		[Preserve]
		public static void Ludiq_Generated_PropertyProviders_PropertyProvider_FMODUnity_EventReference_op_Implicit()
		{
		}

		[Token(Token = "0x6001F1B")]
		[Address(RVA = "0xFA0140", Offset = "0xFA0140", VA = "0xFA0140")]
		[Preserve]
		public static void Ludiq_Generated_PropertyProviders_PropertyProvider_FMODUnity_EventReference_op_Inequality()
		{
		}

		[Token(Token = "0x6001F1C")]
		[Address(RVA = "0xFA0218", Offset = "0xFA0218", VA = "0xFA0218")]
		[Preserve]
		public static void Ludiq_Generated_PropertyProviders_PropertyProvider_FMODUnity_FMODEventMixerBehaviour_op_Equality()
		{
		}

		[Token(Token = "0x6001F1D")]
		[Address(RVA = "0xFA02F0", Offset = "0xFA02F0", VA = "0xFA02F0")]
		[Preserve]
		public static void Ludiq_Generated_PropertyProviders_PropertyProvider_FMODUnity_FMODEventMixerBehaviour_op_Implicit()
		{
		}

		[Token(Token = "0x6001F1E")]
		[Address(RVA = "0xFA03C0", Offset = "0xFA03C0", VA = "0xFA03C0")]
		[Preserve]
		public static void Ludiq_Generated_PropertyProviders_PropertyProvider_FMODUnity_FMODEventMixerBehaviour_op_Inequality()
		{
		}

		[Token(Token = "0x6001F1F")]
		[Address(RVA = "0xFA0498", Offset = "0xFA0498", VA = "0xFA0498")]
		[Preserve]
		public static void Ludiq_Generated_PropertyProviders_PropertyProvider_NarrativeEngine_Dialog_DialogueChoice_Choice_op_Equality()
		{
		}

		[Token(Token = "0x6001F20")]
		[Address(RVA = "0xFA0570", Offset = "0xFA0570", VA = "0xFA0570")]
		[Preserve]
		public static void Ludiq_Generated_PropertyProviders_PropertyProvider_NarrativeEngine_Dialog_DialogueChoice_Choice_op_Implicit()
		{
		}

		[Token(Token = "0x6001F21")]
		[Address(RVA = "0xFA0640", Offset = "0xFA0640", VA = "0xFA0640")]
		[Preserve]
		public static void Ludiq_Generated_PropertyProviders_PropertyProvider_NarrativeEngine_Dialog_DialogueChoice_Choice_op_Inequality()
		{
		}

		[Token(Token = "0x6001F22")]
		[Address(RVA = "0xFA0718", Offset = "0xFA0718", VA = "0xFA0718")]
		[Preserve]
		public static void Ludiq_Generated_PropertyProviders_PropertyProvider_NarrativeEngine_Dialog_DialogueChoice_Prompt_op_Equality()
		{
		}

		[Token(Token = "0x6001F23")]
		[Address(RVA = "0xFA07F0", Offset = "0xFA07F0", VA = "0xFA07F0")]
		[Preserve]
		public static void Ludiq_Generated_PropertyProviders_PropertyProvider_NarrativeEngine_Dialog_DialogueChoice_Prompt_op_Implicit()
		{
		}

		[Token(Token = "0x6001F24")]
		[Address(RVA = "0xFA08C0", Offset = "0xFA08C0", VA = "0xFA08C0")]
		[Preserve]
		public static void Ludiq_Generated_PropertyProviders_PropertyProvider_NarrativeEngine_Dialog_DialogueChoice_Prompt_op_Inequality()
		{
		}

		[Token(Token = "0x6001F25")]
		[Address(RVA = "0xFA0998", Offset = "0xFA0998", VA = "0xFA0998")]
		[Preserve]
		public static void Ludiq_Generated_PropertyProviders_PropertyProvider_NarrativeEngine_Dialog_DialogueChoice_SilentChoice_op_Equality()
		{
		}

		[Token(Token = "0x6001F26")]
		[Address(RVA = "0xFA0A70", Offset = "0xFA0A70", VA = "0xFA0A70")]
		[Preserve]
		public static void Ludiq_Generated_PropertyProviders_PropertyProvider_NarrativeEngine_Dialog_DialogueChoice_SilentChoice_op_Implicit()
		{
		}

		[Token(Token = "0x6001F27")]
		[Address(RVA = "0xFA0B40", Offset = "0xFA0B40", VA = "0xFA0B40")]
		[Preserve]
		public static void Ludiq_Generated_PropertyProviders_PropertyProvider_NarrativeEngine_Dialog_DialogueChoice_SilentChoice_op_Inequality()
		{
		}

		[Token(Token = "0x6001F28")]
		[Address(RVA = "0xFA0C18", Offset = "0xFA0C18", VA = "0xFA0C18")]
		[Preserve]
		public static void Ludiq_Generated_PropertyProviders_PropertyProvider_NarrativeEngine_Dialog_Line_op_Equality()
		{
		}

		[Token(Token = "0x6001F29")]
		[Address(RVA = "0xFA0CF0", Offset = "0xFA0CF0", VA = "0xFA0CF0")]
		[Preserve]
		public static void Ludiq_Generated_PropertyProviders_PropertyProvider_NarrativeEngine_Dialog_Line_op_Implicit()
		{
		}

		[Token(Token = "0x6001F2A")]
		[Address(RVA = "0xFA0DC0", Offset = "0xFA0DC0", VA = "0xFA0DC0")]
		[Preserve]
		public static void Ludiq_Generated_PropertyProviders_PropertyProvider_NarrativeEngine_Dialog_Line_op_Inequality()
		{
		}

		[Token(Token = "0x6001F2B")]
		[Address(RVA = "0xFA0E98", Offset = "0xFA0E98", VA = "0xFA0E98")]
		[Preserve]
		public static void Ludiq_Generated_PropertyProviders_PropertyProvider_NarrativeEngine_FactRequirement_op_Equality()
		{
		}

		[Token(Token = "0x6001F2C")]
		[Address(RVA = "0xFA0F70", Offset = "0xFA0F70", VA = "0xFA0F70")]
		[Preserve]
		public static void Ludiq_Generated_PropertyProviders_PropertyProvider_NarrativeEngine_FactRequirement_op_Implicit()
		{
		}

		[Token(Token = "0x6001F2D")]
		[Address(RVA = "0xFA1040", Offset = "0xFA1040", VA = "0xFA1040")]
		[Preserve]
		public static void Ludiq_Generated_PropertyProviders_PropertyProvider_NarrativeEngine_FactRequirement_op_Inequality()
		{
		}

		[Token(Token = "0x6001F2E")]
		[Address(RVA = "0xFA1118", Offset = "0xFA1118", VA = "0xFA1118")]
		[Preserve]
		public static void Ludiq_Generated_PropertyProviders_PropertyProvider_Services_TransitionConfig_op_Equality()
		{
		}

		[Token(Token = "0x6001F2F")]
		[Address(RVA = "0xFA11F0", Offset = "0xFA11F0", VA = "0xFA11F0")]
		[Preserve]
		public static void Ludiq_Generated_PropertyProviders_PropertyProvider_Services_TransitionConfig_op_Implicit()
		{
		}

		[Token(Token = "0x6001F30")]
		[Address(RVA = "0xFA12C0", Offset = "0xFA12C0", VA = "0xFA12C0")]
		[Preserve]
		public static void Ludiq_Generated_PropertyProviders_PropertyProvider_Services_TransitionConfig_op_Inequality()
		{
		}

		[Token(Token = "0x6001F31")]
		[Address(RVA = "0xFA1398", Offset = "0xFA1398", VA = "0xFA1398")]
		[Preserve]
		public static void Ludiq_Generated_PropertyProviders_PropertyProvider_TMPro_HorizontalAlignmentOptions_op_Equality()
		{
		}

		[Token(Token = "0x6001F32")]
		[Address(RVA = "0xFA1470", Offset = "0xFA1470", VA = "0xFA1470")]
		[Preserve]
		public static void Ludiq_Generated_PropertyProviders_PropertyProvider_TMPro_HorizontalAlignmentOptions_op_Implicit()
		{
		}

		[Token(Token = "0x6001F33")]
		[Address(RVA = "0xFA1540", Offset = "0xFA1540", VA = "0xFA1540")]
		[Preserve]
		public static void Ludiq_Generated_PropertyProviders_PropertyProvider_TMPro_HorizontalAlignmentOptions_op_Inequality()
		{
		}

		[Token(Token = "0x6001F34")]
		[Address(RVA = "0xFA1618", Offset = "0xFA1618", VA = "0xFA1618")]
		[Preserve]
		public static void Ludiq_Generated_PropertyProviders_PropertyProvider_TMPro_TextAlignmentOptions_op_Equality()
		{
		}

		[Token(Token = "0x6001F35")]
		[Address(RVA = "0xFA16F0", Offset = "0xFA16F0", VA = "0xFA16F0")]
		[Preserve]
		public static void Ludiq_Generated_PropertyProviders_PropertyProvider_TMPro_TextAlignmentOptions_op_Implicit()
		{
		}

		[Token(Token = "0x6001F36")]
		[Address(RVA = "0xFA17C0", Offset = "0xFA17C0", VA = "0xFA17C0")]
		[Preserve]
		public static void Ludiq_Generated_PropertyProviders_PropertyProvider_TMPro_TextAlignmentOptions_op_Inequality()
		{
		}

		[Token(Token = "0x6001F37")]
		[Address(RVA = "0xFA1898", Offset = "0xFA1898", VA = "0xFA1898")]
		[Preserve]
		public static void Ludiq_Generated_PropertyProviders_PropertyProvider_TMPro_TMP_Character_op_Equality()
		{
		}

		[Token(Token = "0x6001F38")]
		[Address(RVA = "0xFA1970", Offset = "0xFA1970", VA = "0xFA1970")]
		[Preserve]
		public static void Ludiq_Generated_PropertyProviders_PropertyProvider_TMPro_TMP_Character_op_Implicit()
		{
		}

		[Token(Token = "0x6001F39")]
		[Address(RVA = "0xFA1A40", Offset = "0xFA1A40", VA = "0xFA1A40")]
		[Preserve]
		public static void Ludiq_Generated_PropertyProviders_PropertyProvider_TMPro_TMP_Character_op_Inequality()
		{
		}

		[Token(Token = "0x6001F3A")]
		[Address(RVA = "0xFA1B18", Offset = "0xFA1B18", VA = "0xFA1B18")]
		[Preserve]
		public static void Ludiq_Generated_PropertyProviders_PropertyProvider_TMPro_TMP_Dropdown_DropdownEvent_op_Equality()
		{
		}

		[Token(Token = "0x6001F3B")]
		[Address(RVA = "0xFA1BF0", Offset = "0xFA1BF0", VA = "0xFA1BF0")]
		[Preserve]
		public static void Ludiq_Generated_PropertyProviders_PropertyProvider_TMPro_TMP_Dropdown_DropdownEvent_op_Implicit()
		{
		}

		[Token(Token = "0x6001F3C")]
		[Address(RVA = "0xFA1CC0", Offset = "0xFA1CC0", VA = "0xFA1CC0")]
		[Preserve]
		public static void Ludiq_Generated_PropertyProviders_PropertyProvider_TMPro_TMP_Dropdown_DropdownEvent_op_Inequality()
		{
		}

		[Token(Token = "0x6001F3D")]
		[Address(RVA = "0xFA1D98", Offset = "0xFA1D98", VA = "0xFA1D98")]
		[Preserve]
		public static void Ludiq_Generated_PropertyProviders_PropertyProvider_TMPro_TMP_Dropdown_OptionDataList_op_Equality()
		{
		}

		[Token(Token = "0x6001F3E")]
		[Address(RVA = "0xFA1E70", Offset = "0xFA1E70", VA = "0xFA1E70")]
		[Preserve]
		public static void Ludiq_Generated_PropertyProviders_PropertyProvider_TMPro_TMP_Dropdown_OptionDataList_op_Implicit()
		{
		}

		[Token(Token = "0x6001F3F")]
		[Address(RVA = "0xFA1F40", Offset = "0xFA1F40", VA = "0xFA1F40")]
		[Preserve]
		public static void Ludiq_Generated_PropertyProviders_PropertyProvider_TMPro_TMP_Dropdown_OptionDataList_op_Inequality()
		{
		}

		[Token(Token = "0x6001F40")]
		[Address(RVA = "0xFA2018", Offset = "0xFA2018", VA = "0xFA2018")]
		[Preserve]
		public static void Ludiq_Generated_PropertyProviders_PropertyProvider_TMPro_TMP_FontWeightPair_op_Equality()
		{
		}

		[Token(Token = "0x6001F41")]
		[Address(RVA = "0xFA20F0", Offset = "0xFA20F0", VA = "0xFA20F0")]
		[Preserve]
		public static void Ludiq_Generated_PropertyProviders_PropertyProvider_TMPro_TMP_FontWeightPair_op_Implicit()
		{
		}

		[Token(Token = "0x6001F42")]
		[Address(RVA = "0xFA21C0", Offset = "0xFA21C0", VA = "0xFA21C0")]
		[Preserve]
		public static void Ludiq_Generated_PropertyProviders_PropertyProvider_TMPro_TMP_FontWeightPair_op_Inequality()
		{
		}

		[Token(Token = "0x6001F43")]
		[Address(RVA = "0xFA2298", Offset = "0xFA2298", VA = "0xFA2298")]
		[Preserve]
		public static void Ludiq_Generated_PropertyProviders_PropertyProvider_TMPro_TMP_GlyphPairAdjustmentRecord_op_Equality()
		{
		}

		[Token(Token = "0x6001F44")]
		[Address(RVA = "0xFA2370", Offset = "0xFA2370", VA = "0xFA2370")]
		[Preserve]
		public static void Ludiq_Generated_PropertyProviders_PropertyProvider_TMPro_TMP_GlyphPairAdjustmentRecord_op_Implicit()
		{
		}

		[Token(Token = "0x6001F45")]
		[Address(RVA = "0xFA2440", Offset = "0xFA2440", VA = "0xFA2440")]
		[Preserve]
		public static void Ludiq_Generated_PropertyProviders_PropertyProvider_TMPro_TMP_GlyphPairAdjustmentRecord_op_Inequality()
		{
		}

		[Token(Token = "0x6001F46")]
		[Address(RVA = "0xFA2518", Offset = "0xFA2518", VA = "0xFA2518")]
		[Preserve]
		public static void Ludiq_Generated_PropertyProviders_PropertyProvider_TMPro_TMP_InputField_OnChangeEvent_op_Equality()
		{
		}

		[Token(Token = "0x6001F47")]
		[Address(RVA = "0xFA25F0", Offset = "0xFA25F0", VA = "0xFA25F0")]
		[Preserve]
		public static void Ludiq_Generated_PropertyProviders_PropertyProvider_TMPro_TMP_InputField_OnChangeEvent_op_Implicit()
		{
		}

		[Token(Token = "0x6001F48")]
		[Address(RVA = "0xFA26C0", Offset = "0xFA26C0", VA = "0xFA26C0")]
		[Preserve]
		public static void Ludiq_Generated_PropertyProviders_PropertyProvider_TMPro_TMP_InputField_OnChangeEvent_op_Inequality()
		{
		}

		[Token(Token = "0x6001F49")]
		[Address(RVA = "0xFA2798", Offset = "0xFA2798", VA = "0xFA2798")]
		[Preserve]
		public static void Ludiq_Generated_PropertyProviders_PropertyProvider_TMPro_TMP_InputField_SelectionEvent_op_Equality()
		{
		}

		[Token(Token = "0x6001F4A")]
		[Address(RVA = "0xFA2870", Offset = "0xFA2870", VA = "0xFA2870")]
		[Preserve]
		public static void Ludiq_Generated_PropertyProviders_PropertyProvider_TMPro_TMP_InputField_SelectionEvent_op_Implicit()
		{
		}

		[Token(Token = "0x6001F4B")]
		[Address(RVA = "0xFA2940", Offset = "0xFA2940", VA = "0xFA2940")]
		[Preserve]
		public static void Ludiq_Generated_PropertyProviders_PropertyProvider_TMPro_TMP_InputField_SelectionEvent_op_Inequality()
		{
		}

		[Token(Token = "0x6001F4C")]
		[Address(RVA = "0xFA2A18", Offset = "0xFA2A18", VA = "0xFA2A18")]
		[Preserve]
		public static void Ludiq_Generated_PropertyProviders_PropertyProvider_TMPro_TMP_InputField_SubmitEvent_op_Equality()
		{
		}

		[Token(Token = "0x6001F4D")]
		[Address(RVA = "0xFA2AF0", Offset = "0xFA2AF0", VA = "0xFA2AF0")]
		[Preserve]
		public static void Ludiq_Generated_PropertyProviders_PropertyProvider_TMPro_TMP_InputField_SubmitEvent_op_Implicit()
		{
		}

		[Token(Token = "0x6001F4E")]
		[Address(RVA = "0xFA2BC0", Offset = "0xFA2BC0", VA = "0xFA2BC0")]
		[Preserve]
		public static void Ludiq_Generated_PropertyProviders_PropertyProvider_TMPro_TMP_InputField_SubmitEvent_op_Inequality()
		{
		}

		[Token(Token = "0x6001F4F")]
		[Address(RVA = "0xFA2C98", Offset = "0xFA2C98", VA = "0xFA2C98")]
		[Preserve]
		public static void Ludiq_Generated_PropertyProviders_PropertyProvider_TMPro_TMP_InputField_TextSelectionEvent_op_Equality()
		{
		}

		[Token(Token = "0x6001F50")]
		[Address(RVA = "0xFA2D70", Offset = "0xFA2D70", VA = "0xFA2D70")]
		[Preserve]
		public static void Ludiq_Generated_PropertyProviders_PropertyProvider_TMPro_TMP_InputField_TextSelectionEvent_op_Implicit()
		{
		}

		[Token(Token = "0x6001F51")]
		[Address(RVA = "0xFA2E40", Offset = "0xFA2E40", VA = "0xFA2E40")]
		[Preserve]
		public static void Ludiq_Generated_PropertyProviders_PropertyProvider_TMPro_TMP_InputField_TextSelectionEvent_op_Inequality()
		{
		}

		[Token(Token = "0x6001F52")]
		[Address(RVA = "0xFA2F18", Offset = "0xFA2F18", VA = "0xFA2F18")]
		[Preserve]
		public static void Ludiq_Generated_PropertyProviders_PropertyProvider_TMPro_TMP_InputField_TouchScreenKeyboardEvent_op_Equality()
		{
		}

		[Token(Token = "0x6001F53")]
		[Address(RVA = "0xFA2FF0", Offset = "0xFA2FF0", VA = "0xFA2FF0")]
		[Preserve]
		public static void Ludiq_Generated_PropertyProviders_PropertyProvider_TMPro_TMP_InputField_TouchScreenKeyboardEvent_op_Implicit()
		{
		}

		[Token(Token = "0x6001F54")]
		[Address(RVA = "0xFA30C0", Offset = "0xFA30C0", VA = "0xFA30C0")]
		[Preserve]
		public static void Ludiq_Generated_PropertyProviders_PropertyProvider_TMPro_TMP_InputField_TouchScreenKeyboardEvent_op_Inequality()
		{
		}

		[Token(Token = "0x6001F55")]
		[Address(RVA = "0xFA3198", Offset = "0xFA3198", VA = "0xFA3198")]
		[Preserve]
		public static void Ludiq_Generated_PropertyProviders_PropertyProvider_TMPro_TMP_SpriteCharacter_op_Equality()
		{
		}

		[Token(Token = "0x6001F56")]
		[Address(RVA = "0xFA3270", Offset = "0xFA3270", VA = "0xFA3270")]
		[Preserve]
		public static void Ludiq_Generated_PropertyProviders_PropertyProvider_TMPro_TMP_SpriteCharacter_op_Implicit()
		{
		}

		[Token(Token = "0x6001F57")]
		[Address(RVA = "0xFA3340", Offset = "0xFA3340", VA = "0xFA3340")]
		[Preserve]
		public static void Ludiq_Generated_PropertyProviders_PropertyProvider_TMPro_TMP_SpriteCharacter_op_Inequality()
		{
		}

		[Token(Token = "0x6001F58")]
		[Address(RVA = "0xFA3418", Offset = "0xFA3418", VA = "0xFA3418")]
		[Preserve]
		public static void Ludiq_Generated_PropertyProviders_PropertyProvider_TMPro_TMP_SpriteGlyph_op_Equality()
		{
		}

		[Token(Token = "0x6001F59")]
		[Address(RVA = "0xFA34F0", Offset = "0xFA34F0", VA = "0xFA34F0")]
		[Preserve]
		public static void Ludiq_Generated_PropertyProviders_PropertyProvider_TMPro_TMP_SpriteGlyph_op_Implicit()
		{
		}

		[Token(Token = "0x6001F5A")]
		[Address(RVA = "0xFA35C0", Offset = "0xFA35C0", VA = "0xFA35C0")]
		[Preserve]
		public static void Ludiq_Generated_PropertyProviders_PropertyProvider_TMPro_TMP_SpriteGlyph_op_Inequality()
		{
		}

		[Token(Token = "0x6001F5B")]
		[Address(RVA = "0xFA3698", Offset = "0xFA3698", VA = "0xFA3698")]
		[Preserve]
		public static void Ludiq_Generated_PropertyProviders_PropertyProvider_TMPro_TMP_Style_op_Equality()
		{
		}

		[Token(Token = "0x6001F5C")]
		[Address(RVA = "0xFA3770", Offset = "0xFA3770", VA = "0xFA3770")]
		[Preserve]
		public static void Ludiq_Generated_PropertyProviders_PropertyProvider_TMPro_TMP_Style_op_Implicit()
		{
		}

		[Token(Token = "0x6001F5D")]
		[Address(RVA = "0xFA3840", Offset = "0xFA3840", VA = "0xFA3840")]
		[Preserve]
		public static void Ludiq_Generated_PropertyProviders_PropertyProvider_TMPro_TMP_Style_op_Inequality()
		{
		}

		[Token(Token = "0x6001F5E")]
		[Address(RVA = "0xFA3918", Offset = "0xFA3918", VA = "0xFA3918")]
		[Preserve]
		public static void Ludiq_Generated_PropertyProviders_PropertyProvider_TMPro_VerticalAlignmentOptions_op_Equality()
		{
		}

		[Token(Token = "0x6001F5F")]
		[Address(RVA = "0xFA39F0", Offset = "0xFA39F0", VA = "0xFA39F0")]
		[Preserve]
		public static void Ludiq_Generated_PropertyProviders_PropertyProvider_TMPro_VerticalAlignmentOptions_op_Implicit()
		{
		}

		[Token(Token = "0x6001F60")]
		[Address(RVA = "0xFA3AC0", Offset = "0xFA3AC0", VA = "0xFA3AC0")]
		[Preserve]
		public static void Ludiq_Generated_PropertyProviders_PropertyProvider_TMPro_VerticalAlignmentOptions_op_Inequality()
		{
		}

		[Token(Token = "0x6001F61")]
		[Address(RVA = "0xFA3B98", Offset = "0xFA3B98", VA = "0xFA3B98")]
		[Preserve]
		public static void Ludiq_Generated_PropertyProviders_PropertyProvider_Unity_Mathematics_bool2_op_Equality()
		{
		}

		[Token(Token = "0x6001F62")]
		[Address(RVA = "0xFA3C70", Offset = "0xFA3C70", VA = "0xFA3C70")]
		[Preserve]
		public static void Ludiq_Generated_PropertyProviders_PropertyProvider_Unity_Mathematics_bool2_op_Implicit()
		{
		}

		[Token(Token = "0x6001F63")]
		[Address(RVA = "0xFA3D40", Offset = "0xFA3D40", VA = "0xFA3D40")]
		[Preserve]
		public static void Ludiq_Generated_PropertyProviders_PropertyProvider_Unity_Mathematics_bool2_op_Inequality()
		{
		}

		[Token(Token = "0x6001F64")]
		[Address(RVA = "0xFA3E18", Offset = "0xFA3E18", VA = "0xFA3E18")]
		[Preserve]
		public static void Ludiq_Generated_PropertyProviders_PropertyProvider_Unity_Mathematics_bool2x2_op_Equality()
		{
		}

		[Token(Token = "0x6001F65")]
		[Address(RVA = "0xFA3EF0", Offset = "0xFA3EF0", VA = "0xFA3EF0")]
		[Preserve]
		public static void Ludiq_Generated_PropertyProviders_PropertyProvider_Unity_Mathematics_bool2x2_op_Implicit()
		{
		}

		[Token(Token = "0x6001F66")]
		[Address(RVA = "0xFA3FC0", Offset = "0xFA3FC0", VA = "0xFA3FC0")]
		[Preserve]
		public static void Ludiq_Generated_PropertyProviders_PropertyProvider_Unity_Mathematics_bool2x2_op_Inequality()
		{
		}

		[Token(Token = "0x6001F67")]
		[Address(RVA = "0xFA4098", Offset = "0xFA4098", VA = "0xFA4098")]
		[Preserve]
		public static void Ludiq_Generated_PropertyProviders_PropertyProvider_Unity_Mathematics_quaternion_op_Equality()
		{
		}

		[Token(Token = "0x6001F68")]
		[Address(RVA = "0xFA4170", Offset = "0xFA4170", VA = "0xFA4170")]
		[Preserve]
		public static void Ludiq_Generated_PropertyProviders_PropertyProvider_Unity_Mathematics_quaternion_op_Implicit()
		{
		}

		[Token(Token = "0x6001F69")]
		[Address(RVA = "0xFA4240", Offset = "0xFA4240", VA = "0xFA4240")]
		[Preserve]
		public static void Ludiq_Generated_PropertyProviders_PropertyProvider_Unity_Mathematics_quaternion_op_Inequality()
		{
		}

		[Token(Token = "0x6001F6A")]
		[Address(RVA = "0xFA4318", Offset = "0xFA4318", VA = "0xFA4318")]
		[Preserve]
		public static void Ludiq_Generated_PropertyProviders_PropertyProvider_UnityEngine_AddressableAssets_AssetLabelReference_op_Equality()
		{
		}

		[Token(Token = "0x6001F6B")]
		[Address(RVA = "0xFA43F0", Offset = "0xFA43F0", VA = "0xFA43F0")]
		[Preserve]
		public static void Ludiq_Generated_PropertyProviders_PropertyProvider_UnityEngine_AddressableAssets_AssetLabelReference_op_Implicit()
		{
		}

		[Token(Token = "0x6001F6C")]
		[Address(RVA = "0xFA44C0", Offset = "0xFA44C0", VA = "0xFA44C0")]
		[Preserve]
		public static void Ludiq_Generated_PropertyProviders_PropertyProvider_UnityEngine_AddressableAssets_AssetLabelReference_op_Inequality()
		{
		}

		[Token(Token = "0x6001F6D")]
		[Address(RVA = "0xFA4598", Offset = "0xFA4598", VA = "0xFA4598")]
		[Preserve]
		public static void Ludiq_Generated_PropertyProviders_PropertyProvider_UnityEngine_AddressableAssets_AssetReference_op_Equality()
		{
		}

		[Token(Token = "0x6001F6E")]
		[Address(RVA = "0xFA4670", Offset = "0xFA4670", VA = "0xFA4670")]
		[Preserve]
		public static void Ludiq_Generated_PropertyProviders_PropertyProvider_UnityEngine_AddressableAssets_AssetReference_op_Implicit()
		{
		}

		[Token(Token = "0x6001F6F")]
		[Address(RVA = "0xFA4740", Offset = "0xFA4740", VA = "0xFA4740")]
		[Preserve]
		public static void Ludiq_Generated_PropertyProviders_PropertyProvider_UnityEngine_AddressableAssets_AssetReference_op_Inequality()
		{
		}

		[Token(Token = "0x6001F70")]
		[Address(RVA = "0xFA4818", Offset = "0xFA4818", VA = "0xFA4818")]
		[Preserve]
		public static void Ludiq_Generated_PropertyProviders_PropertyProvider_UnityEngine_AddressableAssets_AssetReferenceAtlasedSprite_op_Equality()
		{
		}

		[Token(Token = "0x6001F71")]
		[Address(RVA = "0xFA48F0", Offset = "0xFA48F0", VA = "0xFA48F0")]
		[Preserve]
		public static void Ludiq_Generated_PropertyProviders_PropertyProvider_UnityEngine_AddressableAssets_AssetReferenceAtlasedSprite_op_Implicit()
		{
		}

		[Token(Token = "0x6001F72")]
		[Address(RVA = "0xFA49C0", Offset = "0xFA49C0", VA = "0xFA49C0")]
		[Preserve]
		public static void Ludiq_Generated_PropertyProviders_PropertyProvider_UnityEngine_AddressableAssets_AssetReferenceAtlasedSprite_op_Inequality()
		{
		}

		[Token(Token = "0x6001F73")]
		[Address(RVA = "0xFA4A98", Offset = "0xFA4A98", VA = "0xFA4A98")]
		[Preserve]
		public static void Ludiq_Generated_PropertyProviders_PropertyProvider_UnityEngine_AddressableAssets_AssetReferenceGameObject_op_Equality()
		{
		}

		[Token(Token = "0x6001F74")]
		[Address(RVA = "0xFA4B70", Offset = "0xFA4B70", VA = "0xFA4B70")]
		[Preserve]
		public static void Ludiq_Generated_PropertyProviders_PropertyProvider_UnityEngine_AddressableAssets_AssetReferenceGameObject_op_Implicit()
		{
		}

		[Token(Token = "0x6001F75")]
		[Address(RVA = "0xFA4C40", Offset = "0xFA4C40", VA = "0xFA4C40")]
		[Preserve]
		public static void Ludiq_Generated_PropertyProviders_PropertyProvider_UnityEngine_AddressableAssets_AssetReferenceGameObject_op_Inequality()
		{
		}

		[Token(Token = "0x6001F76")]
		[Address(RVA = "0xFA4D18", Offset = "0xFA4D18", VA = "0xFA4D18")]
		[Preserve]
		public static void Ludiq_Generated_PropertyProviders_PropertyProvider_UnityEngine_AddressableAssets_AssetReferenceSprite_op_Equality()
		{
		}

		[Token(Token = "0x6001F77")]
		[Address(RVA = "0xFA4DF0", Offset = "0xFA4DF0", VA = "0xFA4DF0")]
		[Preserve]
		public static void Ludiq_Generated_PropertyProviders_PropertyProvider_UnityEngine_AddressableAssets_AssetReferenceSprite_op_Implicit()
		{
		}

		[Token(Token = "0x6001F78")]
		[Address(RVA = "0xFA4EC0", Offset = "0xFA4EC0", VA = "0xFA4EC0")]
		[Preserve]
		public static void Ludiq_Generated_PropertyProviders_PropertyProvider_UnityEngine_AddressableAssets_AssetReferenceSprite_op_Inequality()
		{
		}

		[Token(Token = "0x6001F79")]
		[Address(RVA = "0xFA4F98", Offset = "0xFA4F98", VA = "0xFA4F98")]
		[Preserve]
		public static void Ludiq_Generated_PropertyProviders_PropertyProvider_UnityEngine_AddressableAssets_AssetReferenceTexture_op_Equality()
		{
		}

		[Token(Token = "0x6001F7A")]
		[Address(RVA = "0xFA5070", Offset = "0xFA5070", VA = "0xFA5070")]
		[Preserve]
		public static void Ludiq_Generated_PropertyProviders_PropertyProvider_UnityEngine_AddressableAssets_AssetReferenceTexture_op_Implicit()
		{
		}

		[Token(Token = "0x6001F7B")]
		[Address(RVA = "0xFA5140", Offset = "0xFA5140", VA = "0xFA5140")]
		[Preserve]
		public static void Ludiq_Generated_PropertyProviders_PropertyProvider_UnityEngine_AddressableAssets_AssetReferenceTexture_op_Inequality()
		{
		}

		[Token(Token = "0x6001F7C")]
		[Address(RVA = "0xFA5218", Offset = "0xFA5218", VA = "0xFA5218")]
		[Preserve]
		public static void Ludiq_Generated_PropertyProviders_PropertyProvider_UnityEngine_AddressableAssets_AssetReferenceTexture2D_op_Equality()
		{
		}

		[Token(Token = "0x6001F7D")]
		[Address(RVA = "0xFA52F0", Offset = "0xFA52F0", VA = "0xFA52F0")]
		[Preserve]
		public static void Ludiq_Generated_PropertyProviders_PropertyProvider_UnityEngine_AddressableAssets_AssetReferenceTexture2D_op_Implicit()
		{
		}

		[Token(Token = "0x6001F7E")]
		[Address(RVA = "0xFA53C0", Offset = "0xFA53C0", VA = "0xFA53C0")]
		[Preserve]
		public static void Ludiq_Generated_PropertyProviders_PropertyProvider_UnityEngine_AddressableAssets_AssetReferenceTexture2D_op_Inequality()
		{
		}

		[Token(Token = "0x6001F7F")]
		[Address(RVA = "0xFA5498", Offset = "0xFA5498", VA = "0xFA5498")]
		[Preserve]
		public static void Ludiq_Generated_PropertyProviders_PropertyProvider_UnityEngine_AddressableAssets_AssetReferenceTexture3D_op_Equality()
		{
		}

		[Token(Token = "0x6001F80")]
		[Address(RVA = "0xFA5570", Offset = "0xFA5570", VA = "0xFA5570")]
		[Preserve]
		public static void Ludiq_Generated_PropertyProviders_PropertyProvider_UnityEngine_AddressableAssets_AssetReferenceTexture3D_op_Implicit()
		{
		}

		[Token(Token = "0x6001F81")]
		[Address(RVA = "0xFA5640", Offset = "0xFA5640", VA = "0xFA5640")]
		[Preserve]
		public static void Ludiq_Generated_PropertyProviders_PropertyProvider_UnityEngine_AddressableAssets_AssetReferenceTexture3D_op_Inequality()
		{
		}

		[Token(Token = "0x6001F82")]
		[Address(RVA = "0xFA5718", Offset = "0xFA5718", VA = "0xFA5718")]
		[Preserve]
		public static void Ludiq_Generated_PropertyProviders_PropertyProvider_UnityEngine_AddressableAssets_Initialization_CacheInitializationData_op_Equality()
		{
		}

		[Token(Token = "0x6001F83")]
		[Address(RVA = "0xFA57F0", Offset = "0xFA57F0", VA = "0xFA57F0")]
		[Preserve]
		public static void Ludiq_Generated_PropertyProviders_PropertyProvider_UnityEngine_AddressableAssets_Initialization_CacheInitializationData_op_Implicit()
		{
		}

		[Token(Token = "0x6001F84")]
		[Address(RVA = "0xFA58C0", Offset = "0xFA58C0", VA = "0xFA58C0")]
		[Preserve]
		public static void Ludiq_Generated_PropertyProviders_PropertyProvider_UnityEngine_AddressableAssets_Initialization_CacheInitializationData_op_Inequality()
		{
		}

		[Token(Token = "0x6001F85")]
		[Address(RVA = "0xFA5998", Offset = "0xFA5998", VA = "0xFA5998")]
		[Preserve]
		public static void Ludiq_Generated_PropertyProviders_PropertyProvider_UnityEngine_Animations_Rigging_RigLayer_op_Equality()
		{
		}

		[Token(Token = "0x6001F86")]
		[Address(RVA = "0xFA5A70", Offset = "0xFA5A70", VA = "0xFA5A70")]
		[Preserve]
		public static void Ludiq_Generated_PropertyProviders_PropertyProvider_UnityEngine_Animations_Rigging_RigLayer_op_Implicit()
		{
		}

		[Token(Token = "0x6001F87")]
		[Address(RVA = "0xFA5B40", Offset = "0xFA5B40", VA = "0xFA5B40")]
		[Preserve]
		public static void Ludiq_Generated_PropertyProviders_PropertyProvider_UnityEngine_Animations_Rigging_RigLayer_op_Inequality()
		{
		}

		[Token(Token = "0x6001F88")]
		[Address(RVA = "0xFA5C18", Offset = "0xFA5C18", VA = "0xFA5C18")]
		[Preserve]
		public static void Ludiq_Generated_PropertyProviders_PropertyProvider_UnityEngine_Animations_Rigging_Vector3Bool_op_Equality()
		{
		}

		[Token(Token = "0x6001F89")]
		[Address(RVA = "0xFA5CF0", Offset = "0xFA5CF0", VA = "0xFA5CF0")]
		[Preserve]
		public static void Ludiq_Generated_PropertyProviders_PropertyProvider_UnityEngine_Animations_Rigging_Vector3Bool_op_Implicit()
		{
		}

		[Token(Token = "0x6001F8A")]
		[Address(RVA = "0xFA5DC0", Offset = "0xFA5DC0", VA = "0xFA5DC0")]
		[Preserve]
		public static void Ludiq_Generated_PropertyProviders_PropertyProvider_UnityEngine_Animations_Rigging_Vector3Bool_op_Inequality()
		{
		}

		[Token(Token = "0x6001F8B")]
		[Address(RVA = "0xFA5E98", Offset = "0xFA5E98", VA = "0xFA5E98")]
		[Preserve]
		public static void Ludiq_Generated_PropertyProviders_PropertyProvider_UnityEngine_Animations_Rigging_WeightedTransform_op_Equality()
		{
		}

		[Token(Token = "0x6001F8C")]
		[Address(RVA = "0xFA5F70", Offset = "0xFA5F70", VA = "0xFA5F70")]
		[Preserve]
		public static void Ludiq_Generated_PropertyProviders_PropertyProvider_UnityEngine_Animations_Rigging_WeightedTransform_op_Implicit()
		{
		}

		[Token(Token = "0x6001F8D")]
		[Address(RVA = "0xFA6040", Offset = "0xFA6040", VA = "0xFA6040")]
		[Preserve]
		public static void Ludiq_Generated_PropertyProviders_PropertyProvider_UnityEngine_Animations_Rigging_WeightedTransform_op_Inequality()
		{
		}

		[Token(Token = "0x6001F8E")]
		[Address(RVA = "0xFA6118", Offset = "0xFA6118", VA = "0xFA6118")]
		[Preserve]
		public static void Ludiq_Generated_PropertyProviders_PropertyProvider_UnityEngine_Animations_Rigging_WeightedTransformArray_op_Equality()
		{
		}

		[Token(Token = "0x6001F8F")]
		[Address(RVA = "0xFA61F0", Offset = "0xFA61F0", VA = "0xFA61F0")]
		[Preserve]
		public static void Ludiq_Generated_PropertyProviders_PropertyProvider_UnityEngine_Animations_Rigging_WeightedTransformArray_op_Implicit()
		{
		}

		[Token(Token = "0x6001F90")]
		[Address(RVA = "0xFA62C0", Offset = "0xFA62C0", VA = "0xFA62C0")]
		[Preserve]
		public static void Ludiq_Generated_PropertyProviders_PropertyProvider_UnityEngine_Animations_Rigging_WeightedTransformArray_op_Inequality()
		{
		}

		[Token(Token = "0x6001F91")]
		[Address(RVA = "0xFA6398", Offset = "0xFA6398", VA = "0xFA6398")]
		[Preserve]
		public static void Ludiq_Generated_PropertyProviders_PropertyProvider_UnityEngine_Events_UnityEvent_op_Equality()
		{
		}

		[Token(Token = "0x6001F92")]
		[Address(RVA = "0xFA6470", Offset = "0xFA6470", VA = "0xFA6470")]
		[Preserve]
		public static void Ludiq_Generated_PropertyProviders_PropertyProvider_UnityEngine_Events_UnityEvent_op_Implicit()
		{
		}

		[Token(Token = "0x6001F93")]
		[Address(RVA = "0xFA6540", Offset = "0xFA6540", VA = "0xFA6540")]
		[Preserve]
		public static void Ludiq_Generated_PropertyProviders_PropertyProvider_UnityEngine_Events_UnityEvent_op_Inequality()
		{
		}

		[Token(Token = "0x6001F94")]
		[Address(RVA = "0xFA6618", Offset = "0xFA6618", VA = "0xFA6618")]
		[Preserve]
		public static void Ludiq_Generated_PropertyProviders_PropertyProvider_UnityEngine_Events_UnityEventBase_op_Equality()
		{
		}

		[Token(Token = "0x6001F95")]
		[Address(RVA = "0xFA66F0", Offset = "0xFA66F0", VA = "0xFA66F0")]
		[Preserve]
		public static void Ludiq_Generated_PropertyProviders_PropertyProvider_UnityEngine_Events_UnityEventBase_op_Implicit()
		{
		}

		[Token(Token = "0x6001F96")]
		[Address(RVA = "0xFA67C0", Offset = "0xFA67C0", VA = "0xFA67C0")]
		[Preserve]
		public static void Ludiq_Generated_PropertyProviders_PropertyProvider_UnityEngine_Events_UnityEventBase_op_Inequality()
		{
		}

		[Token(Token = "0x6001F97")]
		[Address(RVA = "0xFA6898", Offset = "0xFA6898", VA = "0xFA6898")]
		[Preserve]
		public static void Ludiq_Generated_PropertyProviders_PropertyProvider_UnityEngine_EventSystems_EventTrigger_TriggerEvent_op_Equality()
		{
		}

		[Token(Token = "0x6001F98")]
		[Address(RVA = "0xFA6970", Offset = "0xFA6970", VA = "0xFA6970")]
		[Preserve]
		public static void Ludiq_Generated_PropertyProviders_PropertyProvider_UnityEngine_EventSystems_EventTrigger_TriggerEvent_op_Implicit()
		{
		}

		[Token(Token = "0x6001F99")]
		[Address(RVA = "0xFA6A40", Offset = "0xFA6A40", VA = "0xFA6A40")]
		[Preserve]
		public static void Ludiq_Generated_PropertyProviders_PropertyProvider_UnityEngine_EventSystems_EventTrigger_TriggerEvent_op_Inequality()
		{
		}

		[Token(Token = "0x6001F9A")]
		[Address(RVA = "0xFA6B18", Offset = "0xFA6B18", VA = "0xFA6B18")]
		[Preserve]
		public static void Ludiq_Generated_PropertyProviders_PropertyProvider_UnityEngine_Experimental_Rendering_Universal_RenderObjects_RenderObjectsSettings_op_Equality()
		{
		}

		[Token(Token = "0x6001F9B")]
		[Address(RVA = "0xFA6BF0", Offset = "0xFA6BF0", VA = "0xFA6BF0")]
		[Preserve]
		public static void Ludiq_Generated_PropertyProviders_PropertyProvider_UnityEngine_Experimental_Rendering_Universal_RenderObjects_RenderObjectsSettings_op_Implicit()
		{
		}

		[Token(Token = "0x6001F9C")]
		[Address(RVA = "0xFA6CC0", Offset = "0xFA6CC0", VA = "0xFA6CC0")]
		[Preserve]
		public static void Ludiq_Generated_PropertyProviders_PropertyProvider_UnityEngine_Experimental_Rendering_Universal_RenderObjects_RenderObjectsSettings_op_Inequality()
		{
		}

		[Token(Token = "0x6001F9D")]
		[Address(RVA = "0xFA6D98", Offset = "0xFA6D98", VA = "0xFA6D98")]
		[Preserve]
		public static void Ludiq_Generated_PropertyProviders_PropertyProvider_UnityEngine_InputSystem_InputAction_op_Equality()
		{
		}

		[Token(Token = "0x6001F9E")]
		[Address(RVA = "0xFA6E70", Offset = "0xFA6E70", VA = "0xFA6E70")]
		[Preserve]
		public static void Ludiq_Generated_PropertyProviders_PropertyProvider_UnityEngine_InputSystem_InputAction_op_Implicit()
		{
		}

		[Token(Token = "0x6001F9F")]
		[Address(RVA = "0xFA6F40", Offset = "0xFA6F40", VA = "0xFA6F40")]
		[Preserve]
		public static void Ludiq_Generated_PropertyProviders_PropertyProvider_UnityEngine_InputSystem_InputAction_op_Inequality()
		{
		}

		[Token(Token = "0x6001FA0")]
		[Address(RVA = "0xFA7018", Offset = "0xFA7018", VA = "0xFA7018")]
		[Preserve]
		public static void Ludiq_Generated_PropertyProviders_PropertyProvider_UnityEngine_InputSystem_InputActionMap_op_Equality()
		{
		}

		[Token(Token = "0x6001FA1")]
		[Address(RVA = "0xFA70F0", Offset = "0xFA70F0", VA = "0xFA70F0")]
		[Preserve]
		public static void Ludiq_Generated_PropertyProviders_PropertyProvider_UnityEngine_InputSystem_InputActionMap_op_Implicit()
		{
		}

		[Token(Token = "0x6001FA2")]
		[Address(RVA = "0xFA71C0", Offset = "0xFA71C0", VA = "0xFA71C0")]
		[Preserve]
		public static void Ludiq_Generated_PropertyProviders_PropertyProvider_UnityEngine_InputSystem_InputActionMap_op_Inequality()
		{
		}

		[Token(Token = "0x6001FA3")]
		[Address(RVA = "0xFA7298", Offset = "0xFA7298", VA = "0xFA7298")]
		[Preserve]
		public static void Ludiq_Generated_PropertyProviders_PropertyProvider_UnityEngine_InputSystem_InputActionProperty_op_Equality()
		{
		}

		[Token(Token = "0x6001FA4")]
		[Address(RVA = "0xFA7370", Offset = "0xFA7370", VA = "0xFA7370")]
		[Preserve]
		public static void Ludiq_Generated_PropertyProviders_PropertyProvider_UnityEngine_InputSystem_InputActionProperty_op_Implicit()
		{
		}

		[Token(Token = "0x6001FA5")]
		[Address(RVA = "0xFA7440", Offset = "0xFA7440", VA = "0xFA7440")]
		[Preserve]
		public static void Ludiq_Generated_PropertyProviders_PropertyProvider_UnityEngine_InputSystem_InputActionProperty_op_Inequality()
		{
		}

		[Token(Token = "0x6001FA6")]
		[Address(RVA = "0xFA7518", Offset = "0xFA7518", VA = "0xFA7518")]
		[Preserve]
		public static void Ludiq_Generated_PropertyProviders_PropertyProvider_UnityEngine_InputSystem_PlayerInput_ActionEvent_op_Equality()
		{
		}

		[Token(Token = "0x6001FA7")]
		[Address(RVA = "0xFA75F0", Offset = "0xFA75F0", VA = "0xFA75F0")]
		[Preserve]
		public static void Ludiq_Generated_PropertyProviders_PropertyProvider_UnityEngine_InputSystem_PlayerInput_ActionEvent_op_Implicit()
		{
		}

		[Token(Token = "0x6001FA8")]
		[Address(RVA = "0xFA76C0", Offset = "0xFA76C0", VA = "0xFA76C0")]
		[Preserve]
		public static void Ludiq_Generated_PropertyProviders_PropertyProvider_UnityEngine_InputSystem_PlayerInput_ActionEvent_op_Inequality()
		{
		}

		[Token(Token = "0x6001FA9")]
		[Address(RVA = "0xFA7798", Offset = "0xFA7798", VA = "0xFA7798")]
		[Preserve]
		public static void Ludiq_Generated_PropertyProviders_PropertyProvider_UnityEngine_InputSystem_PlayerInput_ControlsChangedEvent_op_Equality()
		{
		}

		[Token(Token = "0x6001FAA")]
		[Address(RVA = "0xFA7870", Offset = "0xFA7870", VA = "0xFA7870")]
		[Preserve]
		public static void Ludiq_Generated_PropertyProviders_PropertyProvider_UnityEngine_InputSystem_PlayerInput_ControlsChangedEvent_op_Implicit()
		{
		}

		[Token(Token = "0x6001FAB")]
		[Address(RVA = "0xFA7940", Offset = "0xFA7940", VA = "0xFA7940")]
		[Preserve]
		public static void Ludiq_Generated_PropertyProviders_PropertyProvider_UnityEngine_InputSystem_PlayerInput_ControlsChangedEvent_op_Inequality()
		{
		}

		[Token(Token = "0x6001FAC")]
		[Address(RVA = "0xFA7A18", Offset = "0xFA7A18", VA = "0xFA7A18")]
		[Preserve]
		public static void Ludiq_Generated_PropertyProviders_PropertyProvider_UnityEngine_InputSystem_PlayerInput_DeviceLostEvent_op_Equality()
		{
		}

		[Token(Token = "0x6001FAD")]
		[Address(RVA = "0xFA7AF0", Offset = "0xFA7AF0", VA = "0xFA7AF0")]
		[Preserve]
		public static void Ludiq_Generated_PropertyProviders_PropertyProvider_UnityEngine_InputSystem_PlayerInput_DeviceLostEvent_op_Implicit()
		{
		}

		[Token(Token = "0x6001FAE")]
		[Address(RVA = "0xFA7BC0", Offset = "0xFA7BC0", VA = "0xFA7BC0")]
		[Preserve]
		public static void Ludiq_Generated_PropertyProviders_PropertyProvider_UnityEngine_InputSystem_PlayerInput_DeviceLostEvent_op_Inequality()
		{
		}

		[Token(Token = "0x6001FAF")]
		[Address(RVA = "0xFA7C98", Offset = "0xFA7C98", VA = "0xFA7C98")]
		[Preserve]
		public static void Ludiq_Generated_PropertyProviders_PropertyProvider_UnityEngine_InputSystem_PlayerInput_DeviceRegainedEvent_op_Equality()
		{
		}

		[Token(Token = "0x6001FB0")]
		[Address(RVA = "0xFA7D70", Offset = "0xFA7D70", VA = "0xFA7D70")]
		[Preserve]
		public static void Ludiq_Generated_PropertyProviders_PropertyProvider_UnityEngine_InputSystem_PlayerInput_DeviceRegainedEvent_op_Implicit()
		{
		}

		[Token(Token = "0x6001FB1")]
		[Address(RVA = "0xFA7E40", Offset = "0xFA7E40", VA = "0xFA7E40")]
		[Preserve]
		public static void Ludiq_Generated_PropertyProviders_PropertyProvider_UnityEngine_InputSystem_PlayerInput_DeviceRegainedEvent_op_Inequality()
		{
		}

		[Token(Token = "0x6001FB2")]
		[Address(RVA = "0xFA7F18", Offset = "0xFA7F18", VA = "0xFA7F18")]
		[Preserve]
		public static void Ludiq_Generated_PropertyProviders_PropertyProvider_UnityEngine_InputSystem_PlayerInputManager_PlayerJoinedEvent_op_Equality()
		{
		}

		[Token(Token = "0x6001FB3")]
		[Address(RVA = "0xFA7FF0", Offset = "0xFA7FF0", VA = "0xFA7FF0")]
		[Preserve]
		public static void Ludiq_Generated_PropertyProviders_PropertyProvider_UnityEngine_InputSystem_PlayerInputManager_PlayerJoinedEvent_op_Implicit()
		{
		}

		[Token(Token = "0x6001FB4")]
		[Address(RVA = "0xFA80C0", Offset = "0xFA80C0", VA = "0xFA80C0")]
		[Preserve]
		public static void Ludiq_Generated_PropertyProviders_PropertyProvider_UnityEngine_InputSystem_PlayerInputManager_PlayerJoinedEvent_op_Inequality()
		{
		}

		[Token(Token = "0x6001FB5")]
		[Address(RVA = "0xFA8198", Offset = "0xFA8198", VA = "0xFA8198")]
		[Preserve]
		public static void Ludiq_Generated_PropertyProviders_PropertyProvider_UnityEngine_InputSystem_PlayerInputManager_PlayerLeftEvent_op_Equality()
		{
		}

		[Token(Token = "0x6001FB6")]
		[Address(RVA = "0xFA8270", Offset = "0xFA8270", VA = "0xFA8270")]
		[Preserve]
		public static void Ludiq_Generated_PropertyProviders_PropertyProvider_UnityEngine_InputSystem_PlayerInputManager_PlayerLeftEvent_op_Implicit()
		{
		}

		[Token(Token = "0x6001FB7")]
		[Address(RVA = "0xFA8340", Offset = "0xFA8340", VA = "0xFA8340")]
		[Preserve]
		public static void Ludiq_Generated_PropertyProviders_PropertyProvider_UnityEngine_InputSystem_PlayerInputManager_PlayerLeftEvent_op_Inequality()
		{
		}

		[Token(Token = "0x6001FB8")]
		[Address(RVA = "0xFA8418", Offset = "0xFA8418", VA = "0xFA8418")]
		[Preserve]
		public static void Ludiq_Generated_PropertyProviders_PropertyProvider_UnityEngine_Localization_Events_UnityEventAudioClip_op_Equality()
		{
		}

		[Token(Token = "0x6001FB9")]
		[Address(RVA = "0xFA84F0", Offset = "0xFA84F0", VA = "0xFA84F0")]
		[Preserve]
		public static void Ludiq_Generated_PropertyProviders_PropertyProvider_UnityEngine_Localization_Events_UnityEventAudioClip_op_Implicit()
		{
		}

		[Token(Token = "0x6001FBA")]
		[Address(RVA = "0xFA85C0", Offset = "0xFA85C0", VA = "0xFA85C0")]
		[Preserve]
		public static void Ludiq_Generated_PropertyProviders_PropertyProvider_UnityEngine_Localization_Events_UnityEventAudioClip_op_Inequality()
		{
		}

		[Token(Token = "0x6001FBB")]
		[Address(RVA = "0xFA8698", Offset = "0xFA8698", VA = "0xFA8698")]
		[Preserve]
		public static void Ludiq_Generated_PropertyProviders_PropertyProvider_UnityEngine_Localization_Events_UnityEventGameObject_op_Equality()
		{
		}

		[Token(Token = "0x6001FBC")]
		[Address(RVA = "0xFA8770", Offset = "0xFA8770", VA = "0xFA8770")]
		[Preserve]
		public static void Ludiq_Generated_PropertyProviders_PropertyProvider_UnityEngine_Localization_Events_UnityEventGameObject_op_Implicit()
		{
		}

		[Token(Token = "0x6001FBD")]
		[Address(RVA = "0xFA8840", Offset = "0xFA8840", VA = "0xFA8840")]
		[Preserve]
		public static void Ludiq_Generated_PropertyProviders_PropertyProvider_UnityEngine_Localization_Events_UnityEventGameObject_op_Inequality()
		{
		}

		[Token(Token = "0x6001FBE")]
		[Address(RVA = "0xFA8918", Offset = "0xFA8918", VA = "0xFA8918")]
		[Preserve]
		public static void Ludiq_Generated_PropertyProviders_PropertyProvider_UnityEngine_Localization_Events_UnityEventSprite_op_Equality()
		{
		}

		[Token(Token = "0x6001FBF")]
		[Address(RVA = "0xFA89F0", Offset = "0xFA89F0", VA = "0xFA89F0")]
		[Preserve]
		public static void Ludiq_Generated_PropertyProviders_PropertyProvider_UnityEngine_Localization_Events_UnityEventSprite_op_Implicit()
		{
		}

		[Token(Token = "0x6001FC0")]
		[Address(RVA = "0xFA8AC0", Offset = "0xFA8AC0", VA = "0xFA8AC0")]
		[Preserve]
		public static void Ludiq_Generated_PropertyProviders_PropertyProvider_UnityEngine_Localization_Events_UnityEventSprite_op_Inequality()
		{
		}

		[Token(Token = "0x6001FC1")]
		[Address(RVA = "0xFA8B98", Offset = "0xFA8B98", VA = "0xFA8B98")]
		[Preserve]
		public static void Ludiq_Generated_PropertyProviders_PropertyProvider_UnityEngine_Localization_Events_UnityEventString_op_Equality()
		{
		}

		[Token(Token = "0x6001FC2")]
		[Address(RVA = "0xFA8C70", Offset = "0xFA8C70", VA = "0xFA8C70")]
		[Preserve]
		public static void Ludiq_Generated_PropertyProviders_PropertyProvider_UnityEngine_Localization_Events_UnityEventString_op_Implicit()
		{
		}

		[Token(Token = "0x6001FC3")]
		[Address(RVA = "0xFA8D40", Offset = "0xFA8D40", VA = "0xFA8D40")]
		[Preserve]
		public static void Ludiq_Generated_PropertyProviders_PropertyProvider_UnityEngine_Localization_Events_UnityEventString_op_Inequality()
		{
		}

		[Token(Token = "0x6001FC4")]
		[Address(RVA = "0xFA8E18", Offset = "0xFA8E18", VA = "0xFA8E18")]
		[Preserve]
		public static void Ludiq_Generated_PropertyProviders_PropertyProvider_UnityEngine_Localization_Events_UnityEventTexture_op_Equality()
		{
		}

		[Token(Token = "0x6001FC5")]
		[Address(RVA = "0xFA8EF0", Offset = "0xFA8EF0", VA = "0xFA8EF0")]
		[Preserve]
		public static void Ludiq_Generated_PropertyProviders_PropertyProvider_UnityEngine_Localization_Events_UnityEventTexture_op_Implicit()
		{
		}

		[Token(Token = "0x6001FC6")]
		[Address(RVA = "0xFA8FC0", Offset = "0xFA8FC0", VA = "0xFA8FC0")]
		[Preserve]
		public static void Ludiq_Generated_PropertyProviders_PropertyProvider_UnityEngine_Localization_Events_UnityEventTexture_op_Inequality()
		{
		}

		[Token(Token = "0x6001FC7")]
		[Address(RVA = "0xFA9098", Offset = "0xFA9098", VA = "0xFA9098")]
		[Preserve]
		public static void Ludiq_Generated_PropertyProviders_PropertyProvider_UnityEngine_Localization_LocaleIdentifier_op_Equality()
		{
		}

		[Token(Token = "0x6001FC8")]
		[Address(RVA = "0xFA9170", Offset = "0xFA9170", VA = "0xFA9170")]
		[Preserve]
		public static void Ludiq_Generated_PropertyProviders_PropertyProvider_UnityEngine_Localization_LocaleIdentifier_op_Implicit()
		{
		}

		[Token(Token = "0x6001FC9")]
		[Address(RVA = "0xFA9240", Offset = "0xFA9240", VA = "0xFA9240")]
		[Preserve]
		public static void Ludiq_Generated_PropertyProviders_PropertyProvider_UnityEngine_Localization_LocaleIdentifier_op_Inequality()
		{
		}

		[Token(Token = "0x6001FCA")]
		[Address(RVA = "0xFA9318", Offset = "0xFA9318", VA = "0xFA9318")]
		[Preserve]
		public static void Ludiq_Generated_PropertyProviders_PropertyProvider_UnityEngine_Localization_LocalizedAssetTable_op_Equality()
		{
		}

		[Token(Token = "0x6001FCB")]
		[Address(RVA = "0xFA93F0", Offset = "0xFA93F0", VA = "0xFA93F0")]
		[Preserve]
		public static void Ludiq_Generated_PropertyProviders_PropertyProvider_UnityEngine_Localization_LocalizedAssetTable_op_Implicit()
		{
		}

		[Token(Token = "0x6001FCC")]
		[Address(RVA = "0xFA94C0", Offset = "0xFA94C0", VA = "0xFA94C0")]
		[Preserve]
		public static void Ludiq_Generated_PropertyProviders_PropertyProvider_UnityEngine_Localization_LocalizedAssetTable_op_Inequality()
		{
		}

		[Token(Token = "0x6001FCD")]
		[Address(RVA = "0xFA9598", Offset = "0xFA9598", VA = "0xFA9598")]
		[Preserve]
		public static void Ludiq_Generated_PropertyProviders_PropertyProvider_UnityEngine_Localization_LocalizedString_op_Equality()
		{
		}

		[Token(Token = "0x6001FCE")]
		[Address(RVA = "0xFA9670", Offset = "0xFA9670", VA = "0xFA9670")]
		[Preserve]
		public static void Ludiq_Generated_PropertyProviders_PropertyProvider_UnityEngine_Localization_LocalizedString_op_Implicit()
		{
		}

		[Token(Token = "0x6001FCF")]
		[Address(RVA = "0xFA9740", Offset = "0xFA9740", VA = "0xFA9740")]
		[Preserve]
		public static void Ludiq_Generated_PropertyProviders_PropertyProvider_UnityEngine_Localization_LocalizedString_op_Inequality()
		{
		}

		[Token(Token = "0x6001FD0")]
		[Address(RVA = "0xFA9818", Offset = "0xFA9818", VA = "0xFA9818")]
		[Preserve]
		public static void Ludiq_Generated_PropertyProviders_PropertyProvider_UnityEngine_Localization_LocalizedStringTable_op_Equality()
		{
		}

		[Token(Token = "0x6001FD1")]
		[Address(RVA = "0xFA98F0", Offset = "0xFA98F0", VA = "0xFA98F0")]
		[Preserve]
		public static void Ludiq_Generated_PropertyProviders_PropertyProvider_UnityEngine_Localization_LocalizedStringTable_op_Implicit()
		{
		}

		[Token(Token = "0x6001FD2")]
		[Address(RVA = "0xFA99C0", Offset = "0xFA99C0", VA = "0xFA99C0")]
		[Preserve]
		public static void Ludiq_Generated_PropertyProviders_PropertyProvider_UnityEngine_Localization_LocalizedStringTable_op_Inequality()
		{
		}

		[Token(Token = "0x6001FD3")]
		[Address(RVA = "0xFA9A98", Offset = "0xFA9A98", VA = "0xFA9A98")]
		[Preserve]
		public static void Ludiq_Generated_PropertyProviders_PropertyProvider_UnityEngine_Localization_Metadata_PlatformOverride_op_Equality()
		{
		}

		[Token(Token = "0x6001FD4")]
		[Address(RVA = "0xFA9B70", Offset = "0xFA9B70", VA = "0xFA9B70")]
		[Preserve]
		public static void Ludiq_Generated_PropertyProviders_PropertyProvider_UnityEngine_Localization_Metadata_PlatformOverride_op_Implicit()
		{
		}

		[Token(Token = "0x6001FD5")]
		[Address(RVA = "0xFA9C40", Offset = "0xFA9C40", VA = "0xFA9C40")]
		[Preserve]
		public static void Ludiq_Generated_PropertyProviders_PropertyProvider_UnityEngine_Localization_Metadata_PlatformOverride_op_Inequality()
		{
		}

		[Token(Token = "0x6001FD6")]
		[Address(RVA = "0xFA9D18", Offset = "0xFA9D18", VA = "0xFA9D18")]
		[Preserve]
		public static void Ludiq_Generated_PropertyProviders_PropertyProvider_UnityEngine_Localization_PropertyVariants_TrackedProperties_LocalizedStringProperty_op_Equality()
		{
		}

		[Token(Token = "0x6001FD7")]
		[Address(RVA = "0xFA9DF0", Offset = "0xFA9DF0", VA = "0xFA9DF0")]
		[Preserve]
		public static void Ludiq_Generated_PropertyProviders_PropertyProvider_UnityEngine_Localization_PropertyVariants_TrackedProperties_LocalizedStringProperty_op_Implicit()
		{
		}

		[Token(Token = "0x6001FD8")]
		[Address(RVA = "0xFA9EC0", Offset = "0xFA9EC0", VA = "0xFA9EC0")]
		[Preserve]
		public static void Ludiq_Generated_PropertyProviders_PropertyProvider_UnityEngine_Localization_PropertyVariants_TrackedProperties_LocalizedStringProperty_op_Inequality()
		{
		}

		[Token(Token = "0x6001FD9")]
		[Address(RVA = "0xFA9F98", Offset = "0xFA9F98", VA = "0xFA9F98")]
		[Preserve]
		public static void Ludiq_Generated_PropertyProviders_PropertyProvider_UnityEngine_Localization_Pseudo_CharacterSubstitutor_op_Equality()
		{
		}

		[Token(Token = "0x6001FDA")]
		[Address(RVA = "0xFAA070", Offset = "0xFAA070", VA = "0xFAA070")]
		[Preserve]
		public static void Ludiq_Generated_PropertyProviders_PropertyProvider_UnityEngine_Localization_Pseudo_CharacterSubstitutor_op_Implicit()
		{
		}

		[Token(Token = "0x6001FDB")]
		[Address(RVA = "0xFAA140", Offset = "0xFAA140", VA = "0xFAA140")]
		[Preserve]
		public static void Ludiq_Generated_PropertyProviders_PropertyProvider_UnityEngine_Localization_Pseudo_CharacterSubstitutor_op_Inequality()
		{
		}

		[Token(Token = "0x6001FDC")]
		[Address(RVA = "0xFAA218", Offset = "0xFAA218", VA = "0xFAA218")]
		[Preserve]
		public static void Ludiq_Generated_PropertyProviders_PropertyProvider_UnityEngine_Localization_Pseudo_Expander_op_Equality()
		{
		}

		[Token(Token = "0x6001FDD")]
		[Address(RVA = "0xFAA2F0", Offset = "0xFAA2F0", VA = "0xFAA2F0")]
		[Preserve]
		public static void Ludiq_Generated_PropertyProviders_PropertyProvider_UnityEngine_Localization_Pseudo_Expander_op_Implicit()
		{
		}

		[Token(Token = "0x6001FDE")]
		[Address(RVA = "0xFAA3C0", Offset = "0xFAA3C0", VA = "0xFAA3C0")]
		[Preserve]
		public static void Ludiq_Generated_PropertyProviders_PropertyProvider_UnityEngine_Localization_Pseudo_Expander_op_Inequality()
		{
		}

		[Token(Token = "0x6001FDF")]
		[Address(RVA = "0xFAA498", Offset = "0xFAA498", VA = "0xFAA498")]
		[Preserve]
		public static void Ludiq_Generated_PropertyProviders_PropertyProvider_UnityEngine_Localization_Settings_LocalesProvider_op_Equality()
		{
		}

		[Token(Token = "0x6001FE0")]
		[Address(RVA = "0xFAA570", Offset = "0xFAA570", VA = "0xFAA570")]
		[Preserve]
		public static void Ludiq_Generated_PropertyProviders_PropertyProvider_UnityEngine_Localization_Settings_LocalesProvider_op_Implicit()
		{
		}

		[Token(Token = "0x6001FE1")]
		[Address(RVA = "0xFAA640", Offset = "0xFAA640", VA = "0xFAA640")]
		[Preserve]
		public static void Ludiq_Generated_PropertyProviders_PropertyProvider_UnityEngine_Localization_Settings_LocalesProvider_op_Inequality()
		{
		}

		[Token(Token = "0x6001FE2")]
		[Address(RVA = "0xFAA718", Offset = "0xFAA718", VA = "0xFAA718")]
		[Preserve]
		public static void Ludiq_Generated_PropertyProviders_PropertyProvider_UnityEngine_Localization_SmartFormat_Extensions_GlobalVariablesSource_op_Equality()
		{
		}

		[Token(Token = "0x6001FE3")]
		[Address(RVA = "0xFAA7F0", Offset = "0xFAA7F0", VA = "0xFAA7F0")]
		[Preserve]
		public static void Ludiq_Generated_PropertyProviders_PropertyProvider_UnityEngine_Localization_SmartFormat_Extensions_GlobalVariablesSource_op_Implicit()
		{
		}

		[Token(Token = "0x6001FE4")]
		[Address(RVA = "0xFAA8C0", Offset = "0xFAA8C0", VA = "0xFAA8C0")]
		[Preserve]
		public static void Ludiq_Generated_PropertyProviders_PropertyProvider_UnityEngine_Localization_SmartFormat_Extensions_GlobalVariablesSource_op_Inequality()
		{
		}

		[Token(Token = "0x6001FE5")]
		[Address(RVA = "0xFAA998", Offset = "0xFAA998", VA = "0xFAA998")]
		[Preserve]
		public static void Ludiq_Generated_PropertyProviders_PropertyProvider_UnityEngine_Localization_SmartFormat_Extensions_PersistentVariablesSource_op_Equality()
		{
		}

		[Token(Token = "0x6001FE6")]
		[Address(RVA = "0xFAAA70", Offset = "0xFAAA70", VA = "0xFAAA70")]
		[Preserve]
		public static void Ludiq_Generated_PropertyProviders_PropertyProvider_UnityEngine_Localization_SmartFormat_Extensions_PersistentVariablesSource_op_Implicit()
		{
		}

		[Token(Token = "0x6001FE7")]
		[Address(RVA = "0xFAAB40", Offset = "0xFAAB40", VA = "0xFAAB40")]
		[Preserve]
		public static void Ludiq_Generated_PropertyProviders_PropertyProvider_UnityEngine_Localization_SmartFormat_Extensions_PersistentVariablesSource_op_Inequality()
		{
		}

		[Token(Token = "0x6001FE8")]
		[Address(RVA = "0xFAAC18", Offset = "0xFAAC18", VA = "0xFAAC18")]
		[Preserve]
		public static void Ludiq_Generated_PropertyProviders_PropertyProvider_UnityEngine_Localization_SmartFormat_Extensions_TimeFormatter_op_Equality()
		{
		}

		[Token(Token = "0x6001FE9")]
		[Address(RVA = "0xFAACF0", Offset = "0xFAACF0", VA = "0xFAACF0")]
		[Preserve]
		public static void Ludiq_Generated_PropertyProviders_PropertyProvider_UnityEngine_Localization_SmartFormat_Extensions_TimeFormatter_op_Implicit()
		{
		}

		[Token(Token = "0x6001FEA")]
		[Address(RVA = "0xFAADC0", Offset = "0xFAADC0", VA = "0xFAADC0")]
		[Preserve]
		public static void Ludiq_Generated_PropertyProviders_PropertyProvider_UnityEngine_Localization_SmartFormat_Extensions_TimeFormatter_op_Inequality()
		{
		}

		[Token(Token = "0x6001FEB")]
		[Address(RVA = "0xFAAE98", Offset = "0xFAAE98", VA = "0xFAAE98")]
		[Preserve]
		public static void Ludiq_Generated_PropertyProviders_PropertyProvider_UnityEngine_Localization_SmartFormat_SmartFormatter_op_Equality()
		{
		}

		[Token(Token = "0x6001FEC")]
		[Address(RVA = "0xFAAF70", Offset = "0xFAAF70", VA = "0xFAAF70")]
		[Preserve]
		public static void Ludiq_Generated_PropertyProviders_PropertyProvider_UnityEngine_Localization_SmartFormat_SmartFormatter_op_Implicit()
		{
		}

		[Token(Token = "0x6001FED")]
		[Address(RVA = "0xFAB040", Offset = "0xFAB040", VA = "0xFAB040")]
		[Preserve]
		public static void Ludiq_Generated_PropertyProviders_PropertyProvider_UnityEngine_Localization_SmartFormat_SmartFormatter_op_Inequality()
		{
		}

		[Token(Token = "0x6001FEE")]
		[Address(RVA = "0xFAB118", Offset = "0xFAB118", VA = "0xFAB118")]
		[Preserve]
		public static void Ludiq_Generated_PropertyProviders_PropertyProvider_UnityEngine_ParticleSystem_MinMaxCurve_op_Equality()
		{
		}

		[Token(Token = "0x6001FEF")]
		[Address(RVA = "0xFAB1F0", Offset = "0xFAB1F0", VA = "0xFAB1F0")]
		[Preserve]
		public static void Ludiq_Generated_PropertyProviders_PropertyProvider_UnityEngine_ParticleSystem_MinMaxCurve_op_Implicit()
		{
		}

		[Token(Token = "0x6001FF0")]
		[Address(RVA = "0xFAB2C0", Offset = "0xFAB2C0", VA = "0xFAB2C0")]
		[Preserve]
		public static void Ludiq_Generated_PropertyProviders_PropertyProvider_UnityEngine_ParticleSystem_MinMaxCurve_op_Inequality()
		{
		}

		[Token(Token = "0x6001FF1")]
		[Address(RVA = "0xFAB398", Offset = "0xFAB398", VA = "0xFAB398")]
		[Preserve]
		public static void Ludiq_Generated_PropertyProviders_PropertyProvider_UnityEngine_ParticleSystem_MinMaxGradient_op_Equality()
		{
		}

		[Token(Token = "0x6001FF2")]
		[Address(RVA = "0xFAB470", Offset = "0xFAB470", VA = "0xFAB470")]
		[Preserve]
		public static void Ludiq_Generated_PropertyProviders_PropertyProvider_UnityEngine_ParticleSystem_MinMaxGradient_op_Implicit()
		{
		}

		[Token(Token = "0x6001FF3")]
		[Address(RVA = "0xFAB540", Offset = "0xFAB540", VA = "0xFAB540")]
		[Preserve]
		public static void Ludiq_Generated_PropertyProviders_PropertyProvider_UnityEngine_ParticleSystem_MinMaxGradient_op_Inequality()
		{
		}

		[Token(Token = "0x6001FF4")]
		[Address(RVA = "0xFAB618", Offset = "0xFAB618", VA = "0xFAB618")]
		[Preserve]
		public static void Ludiq_Generated_PropertyProviders_PropertyProvider_UnityEngine_ProBuilder_Shapes_Arch_op_Equality()
		{
		}

		[Token(Token = "0x6001FF5")]
		[Address(RVA = "0xFAB6F0", Offset = "0xFAB6F0", VA = "0xFAB6F0")]
		[Preserve]
		public static void Ludiq_Generated_PropertyProviders_PropertyProvider_UnityEngine_ProBuilder_Shapes_Arch_op_Implicit()
		{
		}

		[Token(Token = "0x6001FF6")]
		[Address(RVA = "0xFAB7C0", Offset = "0xFAB7C0", VA = "0xFAB7C0")]
		[Preserve]
		public static void Ludiq_Generated_PropertyProviders_PropertyProvider_UnityEngine_ProBuilder_Shapes_Arch_op_Inequality()
		{
		}

		[Token(Token = "0x6001FF7")]
		[Address(RVA = "0xFAB898", Offset = "0xFAB898", VA = "0xFAB898")]
		[Preserve]
		public static void Ludiq_Generated_PropertyProviders_PropertyProvider_UnityEngine_ProBuilder_Shapes_Cone_op_Equality()
		{
		}

		[Token(Token = "0x6001FF8")]
		[Address(RVA = "0xFAB970", Offset = "0xFAB970", VA = "0xFAB970")]
		[Preserve]
		public static void Ludiq_Generated_PropertyProviders_PropertyProvider_UnityEngine_ProBuilder_Shapes_Cone_op_Implicit()
		{
		}

		[Token(Token = "0x6001FF9")]
		[Address(RVA = "0xFABA40", Offset = "0xFABA40", VA = "0xFABA40")]
		[Preserve]
		public static void Ludiq_Generated_PropertyProviders_PropertyProvider_UnityEngine_ProBuilder_Shapes_Cone_op_Inequality()
		{
		}

		[Token(Token = "0x6001FFA")]
		[Address(RVA = "0xFABB18", Offset = "0xFABB18", VA = "0xFABB18")]
		[Preserve]
		public static void Ludiq_Generated_PropertyProviders_PropertyProvider_UnityEngine_ProBuilder_Shapes_Cube_op_Equality()
		{
		}

		[Token(Token = "0x6001FFB")]
		[Address(RVA = "0xFABBF0", Offset = "0xFABBF0", VA = "0xFABBF0")]
		[Preserve]
		public static void Ludiq_Generated_PropertyProviders_PropertyProvider_UnityEngine_ProBuilder_Shapes_Cube_op_Implicit()
		{
		}

		[Token(Token = "0x6001FFC")]
		[Address(RVA = "0xFABCC0", Offset = "0xFABCC0", VA = "0xFABCC0")]
		[Preserve]
		public static void Ludiq_Generated_PropertyProviders_PropertyProvider_UnityEngine_ProBuilder_Shapes_Cube_op_Inequality()
		{
		}

		[Token(Token = "0x6001FFD")]
		[Address(RVA = "0xFABD98", Offset = "0xFABD98", VA = "0xFABD98")]
		[Preserve]
		public static void Ludiq_Generated_PropertyProviders_PropertyProvider_UnityEngine_ProBuilder_Shapes_Cylinder_op_Equality()
		{
		}

		[Token(Token = "0x6001FFE")]
		[Address(RVA = "0xFABE70", Offset = "0xFABE70", VA = "0xFABE70")]
		[Preserve]
		public static void Ludiq_Generated_PropertyProviders_PropertyProvider_UnityEngine_ProBuilder_Shapes_Cylinder_op_Implicit()
		{
		}

		[Token(Token = "0x6001FFF")]
		[Address(RVA = "0xFABF40", Offset = "0xFABF40", VA = "0xFABF40")]
		[Preserve]
		public static void Ludiq_Generated_PropertyProviders_PropertyProvider_UnityEngine_ProBuilder_Shapes_Cylinder_op_Inequality()
		{
		}

		[Token(Token = "0x6002000")]
		[Address(RVA = "0xFAC018", Offset = "0xFAC018", VA = "0xFAC018")]
		[Preserve]
		public static void Ludiq_Generated_PropertyProviders_PropertyProvider_UnityEngine_ProBuilder_Shapes_Door_op_Equality()
		{
		}

		[Token(Token = "0x6002001")]
		[Address(RVA = "0xFAC0F0", Offset = "0xFAC0F0", VA = "0xFAC0F0")]
		[Preserve]
		public static void Ludiq_Generated_PropertyProviders_PropertyProvider_UnityEngine_ProBuilder_Shapes_Door_op_Implicit()
		{
		}

		[Token(Token = "0x6002002")]
		[Address(RVA = "0xFAC1C0", Offset = "0xFAC1C0", VA = "0xFAC1C0")]
		[Preserve]
		public static void Ludiq_Generated_PropertyProviders_PropertyProvider_UnityEngine_ProBuilder_Shapes_Door_op_Inequality()
		{
		}

		[Token(Token = "0x6002003")]
		[Address(RVA = "0xFAC298", Offset = "0xFAC298", VA = "0xFAC298")]
		[Preserve]
		public static void Ludiq_Generated_PropertyProviders_PropertyProvider_UnityEngine_ProBuilder_Shapes_Pipe_op_Equality()
		{
		}

		[Token(Token = "0x6002004")]
		[Address(RVA = "0xFAC370", Offset = "0xFAC370", VA = "0xFAC370")]
		[Preserve]
		public static void Ludiq_Generated_PropertyProviders_PropertyProvider_UnityEngine_ProBuilder_Shapes_Pipe_op_Implicit()
		{
		}

		[Token(Token = "0x6002005")]
		[Address(RVA = "0xFAC440", Offset = "0xFAC440", VA = "0xFAC440")]
		[Preserve]
		public static void Ludiq_Generated_PropertyProviders_PropertyProvider_UnityEngine_ProBuilder_Shapes_Pipe_op_Inequality()
		{
		}

		[Token(Token = "0x6002006")]
		[Address(RVA = "0xFAC518", Offset = "0xFAC518", VA = "0xFAC518")]
		[Preserve]
		public static void Ludiq_Generated_PropertyProviders_PropertyProvider_UnityEngine_ProBuilder_Shapes_Plane_op_Equality()
		{
		}

		[Token(Token = "0x6002007")]
		[Address(RVA = "0xFAC5F0", Offset = "0xFAC5F0", VA = "0xFAC5F0")]
		[Preserve]
		public static void Ludiq_Generated_PropertyProviders_PropertyProvider_UnityEngine_ProBuilder_Shapes_Plane_op_Implicit()
		{
		}

		[Token(Token = "0x6002008")]
		[Address(RVA = "0xFAC6C0", Offset = "0xFAC6C0", VA = "0xFAC6C0")]
		[Preserve]
		public static void Ludiq_Generated_PropertyProviders_PropertyProvider_UnityEngine_ProBuilder_Shapes_Plane_op_Inequality()
		{
		}

		[Token(Token = "0x6002009")]
		[Address(RVA = "0xFAC798", Offset = "0xFAC798", VA = "0xFAC798")]
		[Preserve]
		public static void Ludiq_Generated_PropertyProviders_PropertyProvider_UnityEngine_ProBuilder_Shapes_Prism_op_Equality()
		{
		}

		[Token(Token = "0x600200A")]
		[Address(RVA = "0xFAC870", Offset = "0xFAC870", VA = "0xFAC870")]
		[Preserve]
		public static void Ludiq_Generated_PropertyProviders_PropertyProvider_UnityEngine_ProBuilder_Shapes_Prism_op_Implicit()
		{
		}

		[Token(Token = "0x600200B")]
		[Address(RVA = "0xFAC940", Offset = "0xFAC940", VA = "0xFAC940")]
		[Preserve]
		public static void Ludiq_Generated_PropertyProviders_PropertyProvider_UnityEngine_ProBuilder_Shapes_Prism_op_Inequality()
		{
		}

		[Token(Token = "0x600200C")]
		[Address(RVA = "0xFACA18", Offset = "0xFACA18", VA = "0xFACA18")]
		[Preserve]
		public static void Ludiq_Generated_PropertyProviders_PropertyProvider_UnityEngine_ProBuilder_Shapes_Sphere_op_Equality()
		{
		}

		[Token(Token = "0x600200D")]
		[Address(RVA = "0xFACAF0", Offset = "0xFACAF0", VA = "0xFACAF0")]
		[Preserve]
		public static void Ludiq_Generated_PropertyProviders_PropertyProvider_UnityEngine_ProBuilder_Shapes_Sphere_op_Implicit()
		{
		}

		[Token(Token = "0x600200E")]
		[Address(RVA = "0xFACBC0", Offset = "0xFACBC0", VA = "0xFACBC0")]
		[Preserve]
		public static void Ludiq_Generated_PropertyProviders_PropertyProvider_UnityEngine_ProBuilder_Shapes_Sphere_op_Inequality()
		{
		}

		[Token(Token = "0x600200F")]
		[Address(RVA = "0xFACC98", Offset = "0xFACC98", VA = "0xFACC98")]
		[Preserve]
		public static void Ludiq_Generated_PropertyProviders_PropertyProvider_UnityEngine_ProBuilder_Shapes_Sprite_op_Equality()
		{
		}

		[Token(Token = "0x6002010")]
		[Address(RVA = "0xFACD70", Offset = "0xFACD70", VA = "0xFACD70")]
		[Preserve]
		public static void Ludiq_Generated_PropertyProviders_PropertyProvider_UnityEngine_ProBuilder_Shapes_Sprite_op_Implicit()
		{
		}

		[Token(Token = "0x6002011")]
		[Address(RVA = "0xFACE40", Offset = "0xFACE40", VA = "0xFACE40")]
		[Preserve]
		public static void Ludiq_Generated_PropertyProviders_PropertyProvider_UnityEngine_ProBuilder_Shapes_Sprite_op_Inequality()
		{
		}

		[Token(Token = "0x6002012")]
		[Address(RVA = "0xFACF18", Offset = "0xFACF18", VA = "0xFACF18")]
		[Preserve]
		public static void Ludiq_Generated_PropertyProviders_PropertyProvider_UnityEngine_ProBuilder_Shapes_Stairs_op_Equality()
		{
		}

		[Token(Token = "0x6002013")]
		[Address(RVA = "0xFACFF0", Offset = "0xFACFF0", VA = "0xFACFF0")]
		[Preserve]
		public static void Ludiq_Generated_PropertyProviders_PropertyProvider_UnityEngine_ProBuilder_Shapes_Stairs_op_Implicit()
		{
		}

		[Token(Token = "0x6002014")]
		[Address(RVA = "0xFAD0C0", Offset = "0xFAD0C0", VA = "0xFAD0C0")]
		[Preserve]
		public static void Ludiq_Generated_PropertyProviders_PropertyProvider_UnityEngine_ProBuilder_Shapes_Stairs_op_Inequality()
		{
		}

		[Token(Token = "0x6002015")]
		[Address(RVA = "0xFAD198", Offset = "0xFAD198", VA = "0xFAD198")]
		[Preserve]
		public static void Ludiq_Generated_PropertyProviders_PropertyProvider_UnityEngine_ProBuilder_Shapes_Torus_op_Equality()
		{
		}

		[Token(Token = "0x6002016")]
		[Address(RVA = "0xFAD270", Offset = "0xFAD270", VA = "0xFAD270")]
		[Preserve]
		public static void Ludiq_Generated_PropertyProviders_PropertyProvider_UnityEngine_ProBuilder_Shapes_Torus_op_Implicit()
		{
		}

		[Token(Token = "0x6002017")]
		[Address(RVA = "0xFAD340", Offset = "0xFAD340", VA = "0xFAD340")]
		[Preserve]
		public static void Ludiq_Generated_PropertyProviders_PropertyProvider_UnityEngine_ProBuilder_Shapes_Torus_op_Inequality()
		{
		}

		[Token(Token = "0x6002018")]
		[Address(RVA = "0xFAD418", Offset = "0xFAD418", VA = "0xFAD418")]
		[Preserve]
		public static void Ludiq_Generated_PropertyProviders_PropertyProvider_UnityEngine_Quaternion_op_Equality()
		{
		}

		[Token(Token = "0x6002019")]
		[Address(RVA = "0xFAD4F0", Offset = "0xFAD4F0", VA = "0xFAD4F0")]
		[Preserve]
		public static void Ludiq_Generated_PropertyProviders_PropertyProvider_UnityEngine_Quaternion_op_Implicit()
		{
		}

		[Token(Token = "0x600201A")]
		[Address(RVA = "0xFAD5C0", Offset = "0xFAD5C0", VA = "0xFAD5C0")]
		[Preserve]
		public static void Ludiq_Generated_PropertyProviders_PropertyProvider_UnityEngine_Quaternion_op_Inequality()
		{
		}

		[Token(Token = "0x600201B")]
		[Address(RVA = "0xFAD698", Offset = "0xFAD698", VA = "0xFAD698")]
		[Preserve]
		public static void Ludiq_Generated_PropertyProviders_PropertyProvider_UnityEngine_Rendering_Universal_StencilStateData_op_Equality()
		{
		}

		[Token(Token = "0x600201C")]
		[Address(RVA = "0xFAD770", Offset = "0xFAD770", VA = "0xFAD770")]
		[Preserve]
		public static void Ludiq_Generated_PropertyProviders_PropertyProvider_UnityEngine_Rendering_Universal_StencilStateData_op_Implicit()
		{
		}

		[Token(Token = "0x600201D")]
		[Address(RVA = "0xFAD840", Offset = "0xFAD840", VA = "0xFAD840")]
		[Preserve]
		public static void Ludiq_Generated_PropertyProviders_PropertyProvider_UnityEngine_Rendering_Universal_StencilStateData_op_Inequality()
		{
		}

		[Token(Token = "0x600201E")]
		[Address(RVA = "0xFAD918", Offset = "0xFAD918", VA = "0xFAD918")]
		[Preserve]
		public static void Ludiq_Generated_PropertyProviders_PropertyProvider_UnityEngine_ResourceManagement_Util_SerializedType_op_Equality()
		{
		}

		[Token(Token = "0x600201F")]
		[Address(RVA = "0xFAD9F0", Offset = "0xFAD9F0", VA = "0xFAD9F0")]
		[Preserve]
		public static void Ludiq_Generated_PropertyProviders_PropertyProvider_UnityEngine_ResourceManagement_Util_SerializedType_op_Implicit()
		{
		}

		[Token(Token = "0x6002020")]
		[Address(RVA = "0xFADAC0", Offset = "0xFADAC0", VA = "0xFADAC0")]
		[Preserve]
		public static void Ludiq_Generated_PropertyProviders_PropertyProvider_UnityEngine_ResourceManagement_Util_SerializedType_op_Inequality()
		{
		}

		[Token(Token = "0x6002021")]
		[Address(RVA = "0xFADB98", Offset = "0xFADB98", VA = "0xFADB98")]
		[Preserve]
		public static void Ludiq_Generated_PropertyProviders_PropertyProvider_UnityEngine_TextCore_Glyph_op_Equality()
		{
		}

		[Token(Token = "0x6002022")]
		[Address(RVA = "0xFADC70", Offset = "0xFADC70", VA = "0xFADC70")]
		[Preserve]
		public static void Ludiq_Generated_PropertyProviders_PropertyProvider_UnityEngine_TextCore_Glyph_op_Implicit()
		{
		}

		[Token(Token = "0x6002023")]
		[Address(RVA = "0xFADD40", Offset = "0xFADD40", VA = "0xFADD40")]
		[Preserve]
		public static void Ludiq_Generated_PropertyProviders_PropertyProvider_UnityEngine_TextCore_Glyph_op_Inequality()
		{
		}

		[Token(Token = "0x6002024")]
		[Address(RVA = "0xFADE18", Offset = "0xFADE18", VA = "0xFADE18")]
		[Preserve]
		public static void Ludiq_Generated_PropertyProviders_PropertyProvider_UnityEngine_TextCore_GlyphMetrics_op_Equality()
		{
		}

		[Token(Token = "0x6002025")]
		[Address(RVA = "0xFADEF0", Offset = "0xFADEF0", VA = "0xFADEF0")]
		[Preserve]
		public static void Ludiq_Generated_PropertyProviders_PropertyProvider_UnityEngine_TextCore_GlyphMetrics_op_Implicit()
		{
		}

		[Token(Token = "0x6002026")]
		[Address(RVA = "0xFADFC0", Offset = "0xFADFC0", VA = "0xFADFC0")]
		[Preserve]
		public static void Ludiq_Generated_PropertyProviders_PropertyProvider_UnityEngine_TextCore_GlyphMetrics_op_Inequality()
		{
		}

		[Token(Token = "0x6002027")]
		[Address(RVA = "0xFAE098", Offset = "0xFAE098", VA = "0xFAE098")]
		[Preserve]
		public static void Ludiq_Generated_PropertyProviders_PropertyProvider_UnityEngine_TextCore_GlyphRect_op_Equality()
		{
		}

		[Token(Token = "0x6002028")]
		[Address(RVA = "0xFAE170", Offset = "0xFAE170", VA = "0xFAE170")]
		[Preserve]
		public static void Ludiq_Generated_PropertyProviders_PropertyProvider_UnityEngine_TextCore_GlyphRect_op_Implicit()
		{
		}

		[Token(Token = "0x6002029")]
		[Address(RVA = "0xFAE240", Offset = "0xFAE240", VA = "0xFAE240")]
		[Preserve]
		public static void Ludiq_Generated_PropertyProviders_PropertyProvider_UnityEngine_TextCore_GlyphRect_op_Inequality()
		{
		}

		[Token(Token = "0x600202A")]
		[Address(RVA = "0xFAE318", Offset = "0xFAE318", VA = "0xFAE318")]
		[Preserve]
		public static void Ludiq_Generated_PropertyProviders_PropertyProvider_UnityEngine_TextCore_LowLevel_GlyphPairAdjustmentRecord_op_Equality()
		{
		}

		[Token(Token = "0x600202B")]
		[Address(RVA = "0xFAE3F0", Offset = "0xFAE3F0", VA = "0xFAE3F0")]
		[Preserve]
		public static void Ludiq_Generated_PropertyProviders_PropertyProvider_UnityEngine_TextCore_LowLevel_GlyphPairAdjustmentRecord_op_Implicit()
		{
		}

		[Token(Token = "0x600202C")]
		[Address(RVA = "0xFAE4C0", Offset = "0xFAE4C0", VA = "0xFAE4C0")]
		[Preserve]
		public static void Ludiq_Generated_PropertyProviders_PropertyProvider_UnityEngine_TextCore_LowLevel_GlyphPairAdjustmentRecord_op_Inequality()
		{
		}

		[Token(Token = "0x600202D")]
		[Address(RVA = "0xFAE598", Offset = "0xFAE598", VA = "0xFAE598")]
		[Preserve]
		public static void Ludiq_Generated_PropertyProviders_PropertyProvider_UnityEngine_TextCore_Text_Character_op_Equality()
		{
		}

		[Token(Token = "0x600202E")]
		[Address(RVA = "0xFAE670", Offset = "0xFAE670", VA = "0xFAE670")]
		[Preserve]
		public static void Ludiq_Generated_PropertyProviders_PropertyProvider_UnityEngine_TextCore_Text_Character_op_Implicit()
		{
		}

		[Token(Token = "0x600202F")]
		[Address(RVA = "0xFAE740", Offset = "0xFAE740", VA = "0xFAE740")]
		[Preserve]
		public static void Ludiq_Generated_PropertyProviders_PropertyProvider_UnityEngine_TextCore_Text_Character_op_Inequality()
		{
		}

		[Token(Token = "0x6002030")]
		[Address(RVA = "0xFAE818", Offset = "0xFAE818", VA = "0xFAE818")]
		[Preserve]
		public static void Ludiq_Generated_PropertyProviders_PropertyProvider_UnityEngine_TextCore_Text_FontWeightPair_op_Equality()
		{
		}

		[Token(Token = "0x6002031")]
		[Address(RVA = "0xFAE8F0", Offset = "0xFAE8F0", VA = "0xFAE8F0")]
		[Preserve]
		public static void Ludiq_Generated_PropertyProviders_PropertyProvider_UnityEngine_TextCore_Text_FontWeightPair_op_Implicit()
		{
		}

		[Token(Token = "0x6002032")]
		[Address(RVA = "0xFAE9C0", Offset = "0xFAE9C0", VA = "0xFAE9C0")]
		[Preserve]
		public static void Ludiq_Generated_PropertyProviders_PropertyProvider_UnityEngine_TextCore_Text_FontWeightPair_op_Inequality()
		{
		}

		[Token(Token = "0x6002033")]
		[Address(RVA = "0xFAEA98", Offset = "0xFAEA98", VA = "0xFAEA98")]
		[Preserve]
		public static void Ludiq_Generated_PropertyProviders_PropertyProvider_UnityEngine_TextCore_Text_SpriteCharacter_op_Equality()
		{
		}

		[Token(Token = "0x6002034")]
		[Address(RVA = "0xFAEB70", Offset = "0xFAEB70", VA = "0xFAEB70")]
		[Preserve]
		public static void Ludiq_Generated_PropertyProviders_PropertyProvider_UnityEngine_TextCore_Text_SpriteCharacter_op_Implicit()
		{
		}

		[Token(Token = "0x6002035")]
		[Address(RVA = "0xFAEC40", Offset = "0xFAEC40", VA = "0xFAEC40")]
		[Preserve]
		public static void Ludiq_Generated_PropertyProviders_PropertyProvider_UnityEngine_TextCore_Text_SpriteCharacter_op_Inequality()
		{
		}

		[Token(Token = "0x6002036")]
		[Address(RVA = "0xFAED18", Offset = "0xFAED18", VA = "0xFAED18")]
		[Preserve]
		public static void Ludiq_Generated_PropertyProviders_PropertyProvider_UnityEngine_TextCore_Text_SpriteGlyph_op_Equality()
		{
		}

		[Token(Token = "0x6002037")]
		[Address(RVA = "0xFAEDF0", Offset = "0xFAEDF0", VA = "0xFAEDF0")]
		[Preserve]
		public static void Ludiq_Generated_PropertyProviders_PropertyProvider_UnityEngine_TextCore_Text_SpriteGlyph_op_Implicit()
		{
		}

		[Token(Token = "0x6002038")]
		[Address(RVA = "0xFAEEC0", Offset = "0xFAEEC0", VA = "0xFAEEC0")]
		[Preserve]
		public static void Ludiq_Generated_PropertyProviders_PropertyProvider_UnityEngine_TextCore_Text_SpriteGlyph_op_Inequality()
		{
		}

		[Token(Token = "0x6002039")]
		[Address(RVA = "0xFAEF98", Offset = "0xFAEF98", VA = "0xFAEF98")]
		[Preserve]
		public static void Ludiq_Generated_PropertyProviders_PropertyProvider_UnityEngine_TextCore_Text_TextStyle_op_Equality()
		{
		}

		[Token(Token = "0x600203A")]
		[Address(RVA = "0xFAF070", Offset = "0xFAF070", VA = "0xFAF070")]
		[Preserve]
		public static void Ludiq_Generated_PropertyProviders_PropertyProvider_UnityEngine_TextCore_Text_TextStyle_op_Implicit()
		{
		}

		[Token(Token = "0x600203B")]
		[Address(RVA = "0xFAF140", Offset = "0xFAF140", VA = "0xFAF140")]
		[Preserve]
		public static void Ludiq_Generated_PropertyProviders_PropertyProvider_UnityEngine_TextCore_Text_TextStyle_op_Inequality()
		{
		}

		[Token(Token = "0x600203C")]
		[Address(RVA = "0xFAF218", Offset = "0xFAF218", VA = "0xFAF218")]
		[Preserve]
		public static void Ludiq_Generated_PropertyProviders_PropertyProvider_UnityEngine_TextCore_Text_UnicodeLineBreakingRules_op_Equality()
		{
		}

		[Token(Token = "0x600203D")]
		[Address(RVA = "0xFAF2F0", Offset = "0xFAF2F0", VA = "0xFAF2F0")]
		[Preserve]
		public static void Ludiq_Generated_PropertyProviders_PropertyProvider_UnityEngine_TextCore_Text_UnicodeLineBreakingRules_op_Implicit()
		{
		}

		[Token(Token = "0x600203E")]
		[Address(RVA = "0xFAF3C0", Offset = "0xFAF3C0", VA = "0xFAF3C0")]
		[Preserve]
		public static void Ludiq_Generated_PropertyProviders_PropertyProvider_UnityEngine_TextCore_Text_UnicodeLineBreakingRules_op_Inequality()
		{
		}

		[Token(Token = "0x600203F")]
		[Address(RVA = "0xFAF498", Offset = "0xFAF498", VA = "0xFAF498")]
		[Preserve]
		public static void Ludiq_Generated_PropertyProviders_PropertyProvider_UnityEngine_UI_AnimationTriggers_op_Equality()
		{
		}

		[Token(Token = "0x6002040")]
		[Address(RVA = "0xFAF570", Offset = "0xFAF570", VA = "0xFAF570")]
		[Preserve]
		public static void Ludiq_Generated_PropertyProviders_PropertyProvider_UnityEngine_UI_AnimationTriggers_op_Implicit()
		{
		}

		[Token(Token = "0x6002041")]
		[Address(RVA = "0xFAF640", Offset = "0xFAF640", VA = "0xFAF640")]
		[Preserve]
		public static void Ludiq_Generated_PropertyProviders_PropertyProvider_UnityEngine_UI_AnimationTriggers_op_Inequality()
		{
		}

		[Token(Token = "0x6002042")]
		[Address(RVA = "0xFAF718", Offset = "0xFAF718", VA = "0xFAF718")]
		[Preserve]
		public static void Ludiq_Generated_PropertyProviders_PropertyProvider_UnityEngine_UI_Button_ButtonClickedEvent_op_Equality()
		{
		}

		[Token(Token = "0x6002043")]
		[Address(RVA = "0xFAF7F0", Offset = "0xFAF7F0", VA = "0xFAF7F0")]
		[Preserve]
		public static void Ludiq_Generated_PropertyProviders_PropertyProvider_UnityEngine_UI_Button_ButtonClickedEvent_op_Implicit()
		{
		}

		[Token(Token = "0x6002044")]
		[Address(RVA = "0xFAF8C0", Offset = "0xFAF8C0", VA = "0xFAF8C0")]
		[Preserve]
		public static void Ludiq_Generated_PropertyProviders_PropertyProvider_UnityEngine_UI_Button_ButtonClickedEvent_op_Inequality()
		{
		}

		[Token(Token = "0x6002045")]
		[Address(RVA = "0xFAF998", Offset = "0xFAF998", VA = "0xFAF998")]
		[Preserve]
		public static void Ludiq_Generated_PropertyProviders_PropertyProvider_UnityEngine_UI_ColorBlock_op_Equality()
		{
		}

		[Token(Token = "0x6002046")]
		[Address(RVA = "0xFAFA70", Offset = "0xFAFA70", VA = "0xFAFA70")]
		[Preserve]
		public static void Ludiq_Generated_PropertyProviders_PropertyProvider_UnityEngine_UI_ColorBlock_op_Implicit()
		{
		}

		[Token(Token = "0x6002047")]
		[Address(RVA = "0xFAFB40", Offset = "0xFAFB40", VA = "0xFAFB40")]
		[Preserve]
		public static void Ludiq_Generated_PropertyProviders_PropertyProvider_UnityEngine_UI_ColorBlock_op_Inequality()
		{
		}

		[Token(Token = "0x6002048")]
		[Address(RVA = "0xFAFC18", Offset = "0xFAFC18", VA = "0xFAFC18")]
		[Preserve]
		public static void Ludiq_Generated_PropertyProviders_PropertyProvider_UnityEngine_UI_Dropdown_DropdownEvent_op_Equality()
		{
		}

		[Token(Token = "0x6002049")]
		[Address(RVA = "0xFAFCF0", Offset = "0xFAFCF0", VA = "0xFAFCF0")]
		[Preserve]
		public static void Ludiq_Generated_PropertyProviders_PropertyProvider_UnityEngine_UI_Dropdown_DropdownEvent_op_Implicit()
		{
		}

		[Token(Token = "0x600204A")]
		[Address(RVA = "0xFAFDC0", Offset = "0xFAFDC0", VA = "0xFAFDC0")]
		[Preserve]
		public static void Ludiq_Generated_PropertyProviders_PropertyProvider_UnityEngine_UI_Dropdown_DropdownEvent_op_Inequality()
		{
		}

		[Token(Token = "0x600204B")]
		[Address(RVA = "0xFAFE98", Offset = "0xFAFE98", VA = "0xFAFE98")]
		[Preserve]
		public static void Ludiq_Generated_PropertyProviders_PropertyProvider_UnityEngine_UI_Dropdown_OptionDataList_op_Equality()
		{
		}

		[Token(Token = "0x600204C")]
		[Address(RVA = "0xFAFF70", Offset = "0xFAFF70", VA = "0xFAFF70")]
		[Preserve]
		public static void Ludiq_Generated_PropertyProviders_PropertyProvider_UnityEngine_UI_Dropdown_OptionDataList_op_Implicit()
		{
		}

		[Token(Token = "0x600204D")]
		[Address(RVA = "0xFB0040", Offset = "0xFB0040", VA = "0xFB0040")]
		[Preserve]
		public static void Ludiq_Generated_PropertyProviders_PropertyProvider_UnityEngine_UI_Dropdown_OptionDataList_op_Inequality()
		{
		}

		[Token(Token = "0x600204E")]
		[Address(RVA = "0xFB0118", Offset = "0xFB0118", VA = "0xFB0118")]
		[Preserve]
		public static void Ludiq_Generated_PropertyProviders_PropertyProvider_UnityEngine_UI_FontData_op_Equality()
		{
		}

		[Token(Token = "0x600204F")]
		[Address(RVA = "0xFB01F0", Offset = "0xFB01F0", VA = "0xFB01F0")]
		[Preserve]
		public static void Ludiq_Generated_PropertyProviders_PropertyProvider_UnityEngine_UI_FontData_op_Implicit()
		{
		}

		[Token(Token = "0x6002050")]
		[Address(RVA = "0xFB02C0", Offset = "0xFB02C0", VA = "0xFB02C0")]
		[Preserve]
		public static void Ludiq_Generated_PropertyProviders_PropertyProvider_UnityEngine_UI_FontData_op_Inequality()
		{
		}

		[Token(Token = "0x6002051")]
		[Address(RVA = "0xFB0398", Offset = "0xFB0398", VA = "0xFB0398")]
		[Preserve]
		public static void Ludiq_Generated_PropertyProviders_PropertyProvider_UnityEngine_UI_InputField_EndEditEvent_op_Equality()
		{
		}

		[Token(Token = "0x6002052")]
		[Address(RVA = "0xFB0470", Offset = "0xFB0470", VA = "0xFB0470")]
		[Preserve]
		public static void Ludiq_Generated_PropertyProviders_PropertyProvider_UnityEngine_UI_InputField_EndEditEvent_op_Implicit()
		{
		}

		[Token(Token = "0x6002053")]
		[Address(RVA = "0xFB0540", Offset = "0xFB0540", VA = "0xFB0540")]
		[Preserve]
		public static void Ludiq_Generated_PropertyProviders_PropertyProvider_UnityEngine_UI_InputField_EndEditEvent_op_Inequality()
		{
		}

		[Token(Token = "0x6002054")]
		[Address(RVA = "0xFB0618", Offset = "0xFB0618", VA = "0xFB0618")]
		[Preserve]
		public static void Ludiq_Generated_PropertyProviders_PropertyProvider_UnityEngine_UI_InputField_OnChangeEvent_op_Equality()
		{
		}

		[Token(Token = "0x6002055")]
		[Address(RVA = "0xFB06F0", Offset = "0xFB06F0", VA = "0xFB06F0")]
		[Preserve]
		public static void Ludiq_Generated_PropertyProviders_PropertyProvider_UnityEngine_UI_InputField_OnChangeEvent_op_Implicit()
		{
		}

		[Token(Token = "0x6002056")]
		[Address(RVA = "0xFB07C0", Offset = "0xFB07C0", VA = "0xFB07C0")]
		[Preserve]
		public static void Ludiq_Generated_PropertyProviders_PropertyProvider_UnityEngine_UI_InputField_OnChangeEvent_op_Inequality()
		{
		}

		[Token(Token = "0x6002057")]
		[Address(RVA = "0xFB0898", Offset = "0xFB0898", VA = "0xFB0898")]
		[Preserve]
		public static void Ludiq_Generated_PropertyProviders_PropertyProvider_UnityEngine_UI_InputField_SubmitEvent_op_Equality()
		{
		}

		[Token(Token = "0x6002058")]
		[Address(RVA = "0xFB0970", Offset = "0xFB0970", VA = "0xFB0970")]
		[Preserve]
		public static void Ludiq_Generated_PropertyProviders_PropertyProvider_UnityEngine_UI_InputField_SubmitEvent_op_Implicit()
		{
		}

		[Token(Token = "0x6002059")]
		[Address(RVA = "0xFB0A40", Offset = "0xFB0A40", VA = "0xFB0A40")]
		[Preserve]
		public static void Ludiq_Generated_PropertyProviders_PropertyProvider_UnityEngine_UI_InputField_SubmitEvent_op_Inequality()
		{
		}

		[Token(Token = "0x600205A")]
		[Address(RVA = "0xFB0B18", Offset = "0xFB0B18", VA = "0xFB0B18")]
		[Preserve]
		public static void Ludiq_Generated_PropertyProviders_PropertyProvider_UnityEngine_UI_MaskableGraphic_CullStateChangedEvent_op_Equality()
		{
		}

		[Token(Token = "0x600205B")]
		[Address(RVA = "0xFB0BF0", Offset = "0xFB0BF0", VA = "0xFB0BF0")]
		[Preserve]
		public static void Ludiq_Generated_PropertyProviders_PropertyProvider_UnityEngine_UI_MaskableGraphic_CullStateChangedEvent_op_Implicit()
		{
		}

		[Token(Token = "0x600205C")]
		[Address(RVA = "0xFB0CC0", Offset = "0xFB0CC0", VA = "0xFB0CC0")]
		[Preserve]
		public static void Ludiq_Generated_PropertyProviders_PropertyProvider_UnityEngine_UI_MaskableGraphic_CullStateChangedEvent_op_Inequality()
		{
		}

		[Token(Token = "0x600205D")]
		[Address(RVA = "0xFB0D98", Offset = "0xFB0D98", VA = "0xFB0D98")]
		[Preserve]
		public static void Ludiq_Generated_PropertyProviders_PropertyProvider_UnityEngine_UI_Navigation_op_Equality()
		{
		}

		[Token(Token = "0x600205E")]
		[Address(RVA = "0xFB0E70", Offset = "0xFB0E70", VA = "0xFB0E70")]
		[Preserve]
		public static void Ludiq_Generated_PropertyProviders_PropertyProvider_UnityEngine_UI_Navigation_op_Implicit()
		{
		}

		[Token(Token = "0x600205F")]
		[Address(RVA = "0xFB0F40", Offset = "0xFB0F40", VA = "0xFB0F40")]
		[Preserve]
		public static void Ludiq_Generated_PropertyProviders_PropertyProvider_UnityEngine_UI_Navigation_op_Inequality()
		{
		}

		[Token(Token = "0x6002060")]
		[Address(RVA = "0xFB1018", Offset = "0xFB1018", VA = "0xFB1018")]
		[Preserve]
		public static void Ludiq_Generated_PropertyProviders_PropertyProvider_UnityEngine_UI_Scrollbar_ScrollEvent_op_Equality()
		{
		}

		[Token(Token = "0x6002061")]
		[Address(RVA = "0xFB10F0", Offset = "0xFB10F0", VA = "0xFB10F0")]
		[Preserve]
		public static void Ludiq_Generated_PropertyProviders_PropertyProvider_UnityEngine_UI_Scrollbar_ScrollEvent_op_Implicit()
		{
		}

		[Token(Token = "0x6002062")]
		[Address(RVA = "0xFB11C0", Offset = "0xFB11C0", VA = "0xFB11C0")]
		[Preserve]
		public static void Ludiq_Generated_PropertyProviders_PropertyProvider_UnityEngine_UI_Scrollbar_ScrollEvent_op_Inequality()
		{
		}

		[Token(Token = "0x6002063")]
		[Address(RVA = "0xFB1298", Offset = "0xFB1298", VA = "0xFB1298")]
		[Preserve]
		public static void Ludiq_Generated_PropertyProviders_PropertyProvider_UnityEngine_UI_ScrollRect_ScrollRectEvent_op_Equality()
		{
		}

		[Token(Token = "0x6002064")]
		[Address(RVA = "0xFB1370", Offset = "0xFB1370", VA = "0xFB1370")]
		[Preserve]
		public static void Ludiq_Generated_PropertyProviders_PropertyProvider_UnityEngine_UI_ScrollRect_ScrollRectEvent_op_Implicit()
		{
		}

		[Token(Token = "0x6002065")]
		[Address(RVA = "0xFB1440", Offset = "0xFB1440", VA = "0xFB1440")]
		[Preserve]
		public static void Ludiq_Generated_PropertyProviders_PropertyProvider_UnityEngine_UI_ScrollRect_ScrollRectEvent_op_Inequality()
		{
		}

		[Token(Token = "0x6002066")]
		[Address(RVA = "0xFB1518", Offset = "0xFB1518", VA = "0xFB1518")]
		[Preserve]
		public static void Ludiq_Generated_PropertyProviders_PropertyProvider_UnityEngine_UI_Slider_SliderEvent_op_Equality()
		{
		}

		[Token(Token = "0x6002067")]
		[Address(RVA = "0xFB15F0", Offset = "0xFB15F0", VA = "0xFB15F0")]
		[Preserve]
		public static void Ludiq_Generated_PropertyProviders_PropertyProvider_UnityEngine_UI_Slider_SliderEvent_op_Implicit()
		{
		}

		[Token(Token = "0x6002068")]
		[Address(RVA = "0xFB16C0", Offset = "0xFB16C0", VA = "0xFB16C0")]
		[Preserve]
		public static void Ludiq_Generated_PropertyProviders_PropertyProvider_UnityEngine_UI_Slider_SliderEvent_op_Inequality()
		{
		}

		[Token(Token = "0x6002069")]
		[Address(RVA = "0xFB1798", Offset = "0xFB1798", VA = "0xFB1798")]
		[Preserve]
		public static void Ludiq_Generated_PropertyProviders_PropertyProvider_UnityEngine_UI_SpriteState_op_Equality()
		{
		}

		[Token(Token = "0x600206A")]
		[Address(RVA = "0xFB1870", Offset = "0xFB1870", VA = "0xFB1870")]
		[Preserve]
		public static void Ludiq_Generated_PropertyProviders_PropertyProvider_UnityEngine_UI_SpriteState_op_Implicit()
		{
		}

		[Token(Token = "0x600206B")]
		[Address(RVA = "0xFB1940", Offset = "0xFB1940", VA = "0xFB1940")]
		[Preserve]
		public static void Ludiq_Generated_PropertyProviders_PropertyProvider_UnityEngine_UI_SpriteState_op_Inequality()
		{
		}

		[Token(Token = "0x600206C")]
		[Address(RVA = "0xFB1A18", Offset = "0xFB1A18", VA = "0xFB1A18")]
		[Preserve]
		public static void Ludiq_Generated_PropertyProviders_PropertyProvider_UnityEngine_UI_Toggle_ToggleEvent_op_Equality()
		{
		}

		[Token(Token = "0x600206D")]
		[Address(RVA = "0xFB1AF0", Offset = "0xFB1AF0", VA = "0xFB1AF0")]
		[Preserve]
		public static void Ludiq_Generated_PropertyProviders_PropertyProvider_UnityEngine_UI_Toggle_ToggleEvent_op_Implicit()
		{
		}

		[Token(Token = "0x600206E")]
		[Address(RVA = "0xFB1BC0", Offset = "0xFB1BC0", VA = "0xFB1BC0")]
		[Preserve]
		public static void Ludiq_Generated_PropertyProviders_PropertyProvider_UnityEngine_UI_Toggle_ToggleEvent_op_Inequality()
		{
		}

		[Token(Token = "0x600206F")]
		[Address(RVA = "0xFB1C98", Offset = "0xFB1C98", VA = "0xFB1C98")]
		[Preserve]
		public static void MenuState_op_Equality()
		{
		}

		[Token(Token = "0x6002070")]
		[Address(RVA = "0xFB1D70", Offset = "0xFB1D70", VA = "0xFB1D70")]
		[Preserve]
		public static void MenuState_op_Implicit()
		{
		}

		[Token(Token = "0x6002071")]
		[Address(RVA = "0xFB1E40", Offset = "0xFB1E40", VA = "0xFB1E40")]
		[Preserve]
		public static void MenuState_op_Inequality()
		{
		}

		[Token(Token = "0x6002072")]
		[Address(RVA = "0xFB1F18", Offset = "0xFB1F18", VA = "0xFB1F18")]
		[Preserve]
		public static void MenuSystem_ControlSettingsMenu_op_Equality()
		{
		}

		[Token(Token = "0x6002073")]
		[Address(RVA = "0xFB1FF0", Offset = "0xFB1FF0", VA = "0xFB1FF0")]
		[Preserve]
		public static void MenuSystem_ControlSettingsMenu_op_Implicit()
		{
		}

		[Token(Token = "0x6002074")]
		[Address(RVA = "0xFB20C0", Offset = "0xFB20C0", VA = "0xFB20C0")]
		[Preserve]
		public static void MenuSystem_ControlSettingsMenu_op_Inequality()
		{
		}

		[Token(Token = "0x6002075")]
		[Address(RVA = "0xFB2198", Offset = "0xFB2198", VA = "0xFB2198")]
		[Preserve]
		public static void MenuSystem_CreditsMenu_op_Equality()
		{
		}

		[Token(Token = "0x6002076")]
		[Address(RVA = "0xFB2270", Offset = "0xFB2270", VA = "0xFB2270")]
		[Preserve]
		public static void MenuSystem_CreditsMenu_op_Implicit()
		{
		}

		[Token(Token = "0x6002077")]
		[Address(RVA = "0xFB2340", Offset = "0xFB2340", VA = "0xFB2340")]
		[Preserve]
		public static void MenuSystem_CreditsMenu_op_Inequality()
		{
		}

		[Token(Token = "0x6002078")]
		[Address(RVA = "0xFB2418", Offset = "0xFB2418", VA = "0xFB2418")]
		[Preserve]
		public static void MenuSystem_DebugMenu_op_Equality()
		{
		}

		[Token(Token = "0x6002079")]
		[Address(RVA = "0xFB24F0", Offset = "0xFB24F0", VA = "0xFB24F0")]
		[Preserve]
		public static void MenuSystem_DebugMenu_op_Implicit()
		{
		}

		[Token(Token = "0x600207A")]
		[Address(RVA = "0xFB25C0", Offset = "0xFB25C0", VA = "0xFB25C0")]
		[Preserve]
		public static void MenuSystem_DebugMenu_op_Inequality()
		{
		}

		[Token(Token = "0x600207B")]
		[Address(RVA = "0xFB2698", Offset = "0xFB2698", VA = "0xFB2698")]
		[Preserve]
		public static void MenuSystem_DebugPuzzleMenu_op_Equality()
		{
		}

		[Token(Token = "0x600207C")]
		[Address(RVA = "0xFB2770", Offset = "0xFB2770", VA = "0xFB2770")]
		[Preserve]
		public static void MenuSystem_DebugPuzzleMenu_op_Implicit()
		{
		}

		[Token(Token = "0x600207D")]
		[Address(RVA = "0xFB2840", Offset = "0xFB2840", VA = "0xFB2840")]
		[Preserve]
		public static void MenuSystem_DebugPuzzleMenu_op_Inequality()
		{
		}

		[Token(Token = "0x600207E")]
		[Address(RVA = "0xFB2918", Offset = "0xFB2918", VA = "0xFB2918")]
		[Preserve]
		public static void MenuSystem_DialogueBox_op_Equality()
		{
		}

		[Token(Token = "0x600207F")]
		[Address(RVA = "0xFB29F0", Offset = "0xFB29F0", VA = "0xFB29F0")]
		[Preserve]
		public static void MenuSystem_DialogueBox_op_Implicit()
		{
		}

		[Token(Token = "0x6002080")]
		[Address(RVA = "0xFB2AC0", Offset = "0xFB2AC0", VA = "0xFB2AC0")]
		[Preserve]
		public static void MenuSystem_DialogueBox_op_Inequality()
		{
		}

		[Token(Token = "0x6002081")]
		[Address(RVA = "0xFB2B98", Offset = "0xFB2B98", VA = "0xFB2B98")]
		[Preserve]
		public static void MenuSystem_DisplaySettingsMenu_op_Equality()
		{
		}

		[Token(Token = "0x6002082")]
		[Address(RVA = "0xFB2C70", Offset = "0xFB2C70", VA = "0xFB2C70")]
		[Preserve]
		public static void MenuSystem_DisplaySettingsMenu_op_Implicit()
		{
		}

		[Token(Token = "0x6002083")]
		[Address(RVA = "0xFB2D40", Offset = "0xFB2D40", VA = "0xFB2D40")]
		[Preserve]
		public static void MenuSystem_DisplaySettingsMenu_op_Inequality()
		{
		}

		[Token(Token = "0x6002084")]
		[Address(RVA = "0xFB2E18", Offset = "0xFB2E18", VA = "0xFB2E18")]
		[Preserve]
		public static void MenuSystem_GameplaySettingsMenu_op_Equality()
		{
		}

		[Token(Token = "0x6002085")]
		[Address(RVA = "0xFB2EF0", Offset = "0xFB2EF0", VA = "0xFB2EF0")]
		[Preserve]
		public static void MenuSystem_GameplaySettingsMenu_op_Implicit()
		{
		}

		[Token(Token = "0x6002086")]
		[Address(RVA = "0xFB2FC0", Offset = "0xFB2FC0", VA = "0xFB2FC0")]
		[Preserve]
		public static void MenuSystem_GameplaySettingsMenu_op_Inequality()
		{
		}

		[Token(Token = "0x6002087")]
		[Address(RVA = "0xFB3098", Offset = "0xFB3098", VA = "0xFB3098")]
		[Preserve]
		public static void MenuSystem_InGameMenu_op_Equality()
		{
		}

		[Token(Token = "0x6002088")]
		[Address(RVA = "0xFB3170", Offset = "0xFB3170", VA = "0xFB3170")]
		[Preserve]
		public static void MenuSystem_InGameMenu_op_Implicit()
		{
		}

		[Token(Token = "0x6002089")]
		[Address(RVA = "0xFB3240", Offset = "0xFB3240", VA = "0xFB3240")]
		[Preserve]
		public static void MenuSystem_InGameMenu_op_Inequality()
		{
		}

		[Token(Token = "0x600208A")]
		[Address(RVA = "0xFB3318", Offset = "0xFB3318", VA = "0xFB3318")]
		[Preserve]
		public static void MenuSystem_LanguageSettingsMenu_op_Equality()
		{
		}

		[Token(Token = "0x600208B")]
		[Address(RVA = "0xFB33F0", Offset = "0xFB33F0", VA = "0xFB33F0")]
		[Preserve]
		public static void MenuSystem_LanguageSettingsMenu_op_Implicit()
		{
		}

		[Token(Token = "0x600208C")]
		[Address(RVA = "0xFB34C0", Offset = "0xFB34C0", VA = "0xFB34C0")]
		[Preserve]
		public static void MenuSystem_LanguageSettingsMenu_op_Inequality()
		{
		}

		[Token(Token = "0x600208D")]
		[Address(RVA = "0xFB3598", Offset = "0xFB3598", VA = "0xFB3598")]
		[Preserve]
		public static void MenuSystem_LoadGameMenu_op_Equality()
		{
		}

		[Token(Token = "0x600208E")]
		[Address(RVA = "0xFB3670", Offset = "0xFB3670", VA = "0xFB3670")]
		[Preserve]
		public static void MenuSystem_LoadGameMenu_op_Implicit()
		{
		}

		[Token(Token = "0x600208F")]
		[Address(RVA = "0xFB3740", Offset = "0xFB3740", VA = "0xFB3740")]
		[Preserve]
		public static void MenuSystem_LoadGameMenu_op_Inequality()
		{
		}

		[Token(Token = "0x6002090")]
		[Address(RVA = "0xFB3818", Offset = "0xFB3818", VA = "0xFB3818")]
		[Preserve]
		public static void MenuSystem_LoadSaveGameMenuBase_op_Equality()
		{
		}

		[Token(Token = "0x6002091")]
		[Address(RVA = "0xFB38F0", Offset = "0xFB38F0", VA = "0xFB38F0")]
		[Preserve]
		public static void MenuSystem_LoadSaveGameMenuBase_op_Implicit()
		{
		}

		[Token(Token = "0x6002092")]
		[Address(RVA = "0xFB39C0", Offset = "0xFB39C0", VA = "0xFB39C0")]
		[Preserve]
		public static void MenuSystem_LoadSaveGameMenuBase_op_Inequality()
		{
		}

		[Token(Token = "0x6002093")]
		[Address(RVA = "0xFB3A98", Offset = "0xFB3A98", VA = "0xFB3A98")]
		[Preserve]
		public static void MenuSystem_MainMenu_op_Equality()
		{
		}

		[Token(Token = "0x6002094")]
		[Address(RVA = "0xFB3B70", Offset = "0xFB3B70", VA = "0xFB3B70")]
		[Preserve]
		public static void MenuSystem_MainMenu_op_Implicit()
		{
		}

		[Token(Token = "0x6002095")]
		[Address(RVA = "0xFB3C40", Offset = "0xFB3C40", VA = "0xFB3C40")]
		[Preserve]
		public static void MenuSystem_MainMenu_op_Inequality()
		{
		}

		[Token(Token = "0x6002096")]
		[Address(RVA = "0xFB3D18", Offset = "0xFB3D18", VA = "0xFB3D18")]
		[Preserve]
		public static void MenuSystem_Menu_op_Equality()
		{
		}

		[Token(Token = "0x6002097")]
		[Address(RVA = "0xFB3DF0", Offset = "0xFB3DF0", VA = "0xFB3DF0")]
		[Preserve]
		public static void MenuSystem_Menu_op_Implicit()
		{
		}

		[Token(Token = "0x6002098")]
		[Address(RVA = "0xFB3EC0", Offset = "0xFB3EC0", VA = "0xFB3EC0")]
		[Preserve]
		public static void MenuSystem_Menu_op_Inequality()
		{
		}

		[Token(Token = "0x6002099")]
		[Address(RVA = "0xFB3F98", Offset = "0xFB3F98", VA = "0xFB3F98")]
		[Preserve]
		public static void MenuSystem_MenuButton_op_Equality()
		{
		}

		[Token(Token = "0x600209A")]
		[Address(RVA = "0xFB4070", Offset = "0xFB4070", VA = "0xFB4070")]
		[Preserve]
		public static void MenuSystem_MenuButton_op_Implicit()
		{
		}

		[Token(Token = "0x600209B")]
		[Address(RVA = "0xFB4140", Offset = "0xFB4140", VA = "0xFB4140")]
		[Preserve]
		public static void MenuSystem_MenuButton_op_Inequality()
		{
		}

		[Token(Token = "0x600209C")]
		[Address(RVA = "0xFB4218", Offset = "0xFB4218", VA = "0xFB4218")]
		[Preserve]
		public static void MenuSystem_MenuManager_op_Equality()
		{
		}

		[Token(Token = "0x600209D")]
		[Address(RVA = "0xFB42F0", Offset = "0xFB42F0", VA = "0xFB42F0")]
		[Preserve]
		public static void MenuSystem_MenuManager_op_Implicit()
		{
		}

		[Token(Token = "0x600209E")]
		[Address(RVA = "0xFB43C0", Offset = "0xFB43C0", VA = "0xFB43C0")]
		[Preserve]
		public static void MenuSystem_MenuManager_op_Inequality()
		{
		}

		[Token(Token = "0x600209F")]
		[Address(RVA = "0xFB4498", Offset = "0xFB4498", VA = "0xFB4498")]
		[Preserve]
		public static void MenuSystem_MenuSystemConfig_op_Equality()
		{
		}

		[Token(Token = "0x60020A0")]
		[Address(RVA = "0xFB4570", Offset = "0xFB4570", VA = "0xFB4570")]
		[Preserve]
		public static void MenuSystem_MenuSystemConfig_op_Implicit()
		{
		}

		[Token(Token = "0x60020A1")]
		[Address(RVA = "0xFB4640", Offset = "0xFB4640", VA = "0xFB4640")]
		[Preserve]
		public static void MenuSystem_MenuSystemConfig_op_Inequality()
		{
		}

		[Token(Token = "0x60020A2")]
		[Address(RVA = "0xFB4718", Offset = "0xFB4718", VA = "0xFB4718")]
		[Preserve]
		public static void MenuSystem_MenuTabs_op_Equality()
		{
		}

		[Token(Token = "0x60020A3")]
		[Address(RVA = "0xFB47F0", Offset = "0xFB47F0", VA = "0xFB47F0")]
		[Preserve]
		public static void MenuSystem_MenuTabs_op_Implicit()
		{
		}

		[Token(Token = "0x60020A4")]
		[Address(RVA = "0xFB48C0", Offset = "0xFB48C0", VA = "0xFB48C0")]
		[Preserve]
		public static void MenuSystem_MenuTabs_op_Inequality()
		{
		}

		[Token(Token = "0x60020A5")]
		[Address(RVA = "0xFB4998", Offset = "0xFB4998", VA = "0xFB4998")]
		[Preserve]
		public static void MenuSystem_PerformanceSettingsMenu_op_Equality()
		{
		}

		[Token(Token = "0x60020A6")]
		[Address(RVA = "0xFB4A70", Offset = "0xFB4A70", VA = "0xFB4A70")]
		[Preserve]
		public static void MenuSystem_PerformanceSettingsMenu_op_Implicit()
		{
		}

		[Token(Token = "0x60020A7")]
		[Address(RVA = "0xFB4B40", Offset = "0xFB4B40", VA = "0xFB4B40")]
		[Preserve]
		public static void MenuSystem_PerformanceSettingsMenu_op_Inequality()
		{
		}

		[Token(Token = "0x60020A8")]
		[Address(RVA = "0xFB4C18", Offset = "0xFB4C18", VA = "0xFB4C18")]
		[Preserve]
		public static void MenuSystem_SaveGameMenu_op_Equality()
		{
		}

		[Token(Token = "0x60020A9")]
		[Address(RVA = "0xFB4CF0", Offset = "0xFB4CF0", VA = "0xFB4CF0")]
		[Preserve]
		public static void MenuSystem_SaveGameMenu_op_Implicit()
		{
		}

		[Token(Token = "0x60020AA")]
		[Address(RVA = "0xFB4DC0", Offset = "0xFB4DC0", VA = "0xFB4DC0")]
		[Preserve]
		public static void MenuSystem_SaveGameMenu_op_Inequality()
		{
		}

		[Token(Token = "0x60020AB")]
		[Address(RVA = "0xFB4E98", Offset = "0xFB4E98", VA = "0xFB4E98")]
		[Preserve]
		public static void MenuSystem_SaveGameSlot_op_Equality()
		{
		}

		[Token(Token = "0x60020AC")]
		[Address(RVA = "0xFB4F70", Offset = "0xFB4F70", VA = "0xFB4F70")]
		[Preserve]
		public static void MenuSystem_SaveGameSlot_op_Implicit()
		{
		}

		[Token(Token = "0x60020AD")]
		[Address(RVA = "0xFB5040", Offset = "0xFB5040", VA = "0xFB5040")]
		[Preserve]
		public static void MenuSystem_SaveGameSlot_op_Inequality()
		{
		}

		[Token(Token = "0x60020AE")]
		[Address(RVA = "0xFB5118", Offset = "0xFB5118", VA = "0xFB5118")]
		[Preserve]
		public static void MenuSystem_SettingsParentMenu_op_Equality()
		{
		}

		[Token(Token = "0x60020AF")]
		[Address(RVA = "0xFB51F0", Offset = "0xFB51F0", VA = "0xFB51F0")]
		[Preserve]
		public static void MenuSystem_SettingsParentMenu_op_Implicit()
		{
		}

		[Token(Token = "0x60020B0")]
		[Address(RVA = "0xFB52C0", Offset = "0xFB52C0", VA = "0xFB52C0")]
		[Preserve]
		public static void MenuSystem_SettingsParentMenu_op_Inequality()
		{
		}

		[Token(Token = "0x60020B1")]
		[Address(RVA = "0xFB5398", Offset = "0xFB5398", VA = "0xFB5398")]
		[Preserve]
		public static void MenuSystem_SettingsSubmenuBase_op_Equality()
		{
		}

		[Token(Token = "0x60020B2")]
		[Address(RVA = "0xFB5470", Offset = "0xFB5470", VA = "0xFB5470")]
		[Preserve]
		public static void MenuSystem_SettingsSubmenuBase_op_Implicit()
		{
		}

		[Token(Token = "0x60020B3")]
		[Address(RVA = "0xFB5540", Offset = "0xFB5540", VA = "0xFB5540")]
		[Preserve]
		public static void MenuSystem_SettingsSubmenuBase_op_Inequality()
		{
		}

		[Token(Token = "0x60020B4")]
		[Address(RVA = "0xFB5618", Offset = "0xFB5618", VA = "0xFB5618")]
		[Preserve]
		public static void MenuSystem_SoundSettingsMenu_op_Equality()
		{
		}

		[Token(Token = "0x60020B5")]
		[Address(RVA = "0xFB56F0", Offset = "0xFB56F0", VA = "0xFB56F0")]
		[Preserve]
		public static void MenuSystem_SoundSettingsMenu_op_Implicit()
		{
		}

		[Token(Token = "0x60020B6")]
		[Address(RVA = "0xFB57C0", Offset = "0xFB57C0", VA = "0xFB57C0")]
		[Preserve]
		public static void MenuSystem_SoundSettingsMenu_op_Inequality()
		{
		}

		[Token(Token = "0x60020B7")]
		[Address(RVA = "0xFB5898", Offset = "0xFB5898", VA = "0xFB5898")]
		[Preserve]
		public static void MenuSystem_T17Dropdown_op_Equality()
		{
		}

		[Token(Token = "0x60020B8")]
		[Address(RVA = "0xFB5970", Offset = "0xFB5970", VA = "0xFB5970")]
		[Preserve]
		public static void MenuSystem_T17Dropdown_op_Implicit()
		{
		}

		[Token(Token = "0x60020B9")]
		[Address(RVA = "0xFB5A40", Offset = "0xFB5A40", VA = "0xFB5A40")]
		[Preserve]
		public static void MenuSystem_T17Dropdown_op_Inequality()
		{
		}

		[Token(Token = "0x60020BA")]
		[Address(RVA = "0xFB5B18", Offset = "0xFB5B18", VA = "0xFB5B18")]
		[Preserve]
		public static void MenuSystem_ToggleButton_op_Equality()
		{
		}

		[Token(Token = "0x60020BB")]
		[Address(RVA = "0xFB5BF0", Offset = "0xFB5BF0", VA = "0xFB5BF0")]
		[Preserve]
		public static void MenuSystem_ToggleButton_op_Implicit()
		{
		}

		[Token(Token = "0x60020BC")]
		[Address(RVA = "0xFB5CC0", Offset = "0xFB5CC0", VA = "0xFB5CC0")]
		[Preserve]
		public static void MenuSystem_ToggleButton_op_Inequality()
		{
		}

		[Token(Token = "0x60020BD")]
		[Address(RVA = "0xFB5D98", Offset = "0xFB5D98", VA = "0xFB5D98")]
		[Preserve]
		public static void MouseLook_op_Equality()
		{
		}

		[Token(Token = "0x60020BE")]
		[Address(RVA = "0xFB5E70", Offset = "0xFB5E70", VA = "0xFB5E70")]
		[Preserve]
		public static void MouseLook_op_Implicit()
		{
		}

		[Token(Token = "0x60020BF")]
		[Address(RVA = "0xFB5F40", Offset = "0xFB5F40", VA = "0xFB5F40")]
		[Preserve]
		public static void MouseLook_op_Inequality()
		{
		}

		[Token(Token = "0x60020C0")]
		[Address(RVA = "0xFB6018", Offset = "0xFB6018", VA = "0xFB6018")]
		[Preserve]
		public static void NarrativeEngine_BlackboardManifest_op_Equality()
		{
		}

		[Token(Token = "0x60020C1")]
		[Address(RVA = "0xFB60F0", Offset = "0xFB60F0", VA = "0xFB60F0")]
		[Preserve]
		public static void NarrativeEngine_BlackboardManifest_op_Implicit()
		{
		}

		[Token(Token = "0x60020C2")]
		[Address(RVA = "0xFB61C0", Offset = "0xFB61C0", VA = "0xFB61C0")]
		[Preserve]
		public static void NarrativeEngine_BlackboardManifest_op_Inequality()
		{
		}

		[Token(Token = "0x60020C3")]
		[Address(RVA = "0xFB6298", Offset = "0xFB6298", VA = "0xFB6298")]
		[Preserve]
		public static void NarrativeEngine_Bolt_SoftCollisionZoneAsset_op_Equality()
		{
		}

		[Token(Token = "0x60020C4")]
		[Address(RVA = "0xFB6370", Offset = "0xFB6370", VA = "0xFB6370")]
		[Preserve]
		public static void NarrativeEngine_Bolt_SoftCollisionZoneAsset_op_Implicit()
		{
		}

		[Token(Token = "0x60020C5")]
		[Address(RVA = "0xFB6440", Offset = "0xFB6440", VA = "0xFB6440")]
		[Preserve]
		public static void NarrativeEngine_Bolt_SoftCollisionZoneAsset_op_Inequality()
		{
		}

		[Token(Token = "0x60020C6")]
		[Address(RVA = "0xFB6518", Offset = "0xFB6518", VA = "0xFB6518")]
		[Preserve]
		public static void NarrativeEngine_Dialog_CharacterAsset_op_Equality()
		{
		}

		[Token(Token = "0x60020C7")]
		[Address(RVA = "0xFB65F0", Offset = "0xFB65F0", VA = "0xFB65F0")]
		[Preserve]
		public static void NarrativeEngine_Dialog_CharacterAsset_op_Implicit()
		{
		}

		[Token(Token = "0x60020C8")]
		[Address(RVA = "0xFB66C0", Offset = "0xFB66C0", VA = "0xFB66C0")]
		[Preserve]
		public static void NarrativeEngine_Dialog_CharacterAsset_op_Inequality()
		{
		}

		[Token(Token = "0x60020C9")]
		[Address(RVA = "0xFB6798", Offset = "0xFB6798", VA = "0xFB6798")]
		[Preserve]
		public static void NarrativeEngine_Dialog_DialogueAsset_op_Equality()
		{
		}

		[Token(Token = "0x60020CA")]
		[Address(RVA = "0xFB6870", Offset = "0xFB6870", VA = "0xFB6870")]
		[Preserve]
		public static void NarrativeEngine_Dialog_DialogueAsset_op_Implicit()
		{
		}

		[Token(Token = "0x60020CB")]
		[Address(RVA = "0xFB6940", Offset = "0xFB6940", VA = "0xFB6940")]
		[Preserve]
		public static void NarrativeEngine_Dialog_DialogueAsset_op_Inequality()
		{
		}

		[Token(Token = "0x60020CC")]
		[Address(RVA = "0xFB6A18", Offset = "0xFB6A18", VA = "0xFB6A18")]
		[Preserve]
		public static void NarrativeEngine_Dialog_DialogueChoiceAsset_op_Equality()
		{
		}

		[Token(Token = "0x60020CD")]
		[Address(RVA = "0xFB6AF0", Offset = "0xFB6AF0", VA = "0xFB6AF0")]
		[Preserve]
		public static void NarrativeEngine_Dialog_DialogueChoiceAsset_op_Implicit()
		{
		}

		[Token(Token = "0x60020CE")]
		[Address(RVA = "0xFB6BC0", Offset = "0xFB6BC0", VA = "0xFB6BC0")]
		[Preserve]
		public static void NarrativeEngine_Dialog_DialogueChoiceAsset_op_Inequality()
		{
		}

		[Token(Token = "0x60020CF")]
		[Address(RVA = "0xFB6C98", Offset = "0xFB6C98", VA = "0xFB6C98")]
		[Preserve]
		public static void NarrativeEngine_FactAsset_op_Equality()
		{
		}

		[Token(Token = "0x60020D0")]
		[Address(RVA = "0xFB6D70", Offset = "0xFB6D70", VA = "0xFB6D70")]
		[Preserve]
		public static void NarrativeEngine_FactAsset_op_Implicit()
		{
		}

		[Token(Token = "0x60020D1")]
		[Address(RVA = "0xFB6E40", Offset = "0xFB6E40", VA = "0xFB6E40")]
		[Preserve]
		public static void NarrativeEngine_FactAsset_op_Inequality()
		{
		}

		[Token(Token = "0x60020D2")]
		[Address(RVA = "0xFB6F18", Offset = "0xFB6F18", VA = "0xFB6F18")]
		[Preserve]
		public static void NarrativeEngine_FactAssetBool_op_Equality()
		{
		}

		[Token(Token = "0x60020D3")]
		[Address(RVA = "0xFB6FF0", Offset = "0xFB6FF0", VA = "0xFB6FF0")]
		[Preserve]
		public static void NarrativeEngine_FactAssetBool_op_Implicit()
		{
		}

		[Token(Token = "0x60020D4")]
		[Address(RVA = "0xFB70C0", Offset = "0xFB70C0", VA = "0xFB70C0")]
		[Preserve]
		public static void NarrativeEngine_FactAssetBool_op_Inequality()
		{
		}

		[Token(Token = "0x60020D5")]
		[Address(RVA = "0xFB7198", Offset = "0xFB7198", VA = "0xFB7198")]
		[Preserve]
		public static void NarrativeEngine_FactAssetInt_op_Equality()
		{
		}

		[Token(Token = "0x60020D6")]
		[Address(RVA = "0xFB7270", Offset = "0xFB7270", VA = "0xFB7270")]
		[Preserve]
		public static void NarrativeEngine_FactAssetInt_op_Implicit()
		{
		}

		[Token(Token = "0x60020D7")]
		[Address(RVA = "0xFB7340", Offset = "0xFB7340", VA = "0xFB7340")]
		[Preserve]
		public static void NarrativeEngine_FactAssetInt_op_Inequality()
		{
		}

		[Token(Token = "0x60020D8")]
		[Address(RVA = "0xFB7418", Offset = "0xFB7418", VA = "0xFB7418")]
		[Preserve]
		public static void NarrativeEngine_FactAssetString_op_Equality()
		{
		}

		[Token(Token = "0x60020D9")]
		[Address(RVA = "0xFB74F0", Offset = "0xFB74F0", VA = "0xFB74F0")]
		[Preserve]
		public static void NarrativeEngine_FactAssetString_op_Implicit()
		{
		}

		[Token(Token = "0x60020DA")]
		[Address(RVA = "0xFB75C0", Offset = "0xFB75C0", VA = "0xFB75C0")]
		[Preserve]
		public static void NarrativeEngine_FactAssetString_op_Inequality()
		{
		}

		[Token(Token = "0x60020DB")]
		[Address(RVA = "0xFB7698", Offset = "0xFB7698", VA = "0xFB7698")]
		[Preserve]
		public static void NarrativeEngine_FoleyAsset_op_Equality()
		{
		}

		[Token(Token = "0x60020DC")]
		[Address(RVA = "0xFB7770", Offset = "0xFB7770", VA = "0xFB7770")]
		[Preserve]
		public static void NarrativeEngine_FoleyAsset_op_Implicit()
		{
		}

		[Token(Token = "0x60020DD")]
		[Address(RVA = "0xFB7840", Offset = "0xFB7840", VA = "0xFB7840")]
		[Preserve]
		public static void NarrativeEngine_FoleyAsset_op_Inequality()
		{
		}

		[Token(Token = "0x60020DE")]
		[Address(RVA = "0xFB7918", Offset = "0xFB7918", VA = "0xFB7918")]
		[Preserve]
		public static void NarrativeEngine_GhostFoleyAsset_op_Equality()
		{
		}

		[Token(Token = "0x60020DF")]
		[Address(RVA = "0xFB79F0", Offset = "0xFB79F0", VA = "0xFB79F0")]
		[Preserve]
		public static void NarrativeEngine_GhostFoleyAsset_op_Implicit()
		{
		}

		[Token(Token = "0x60020E0")]
		[Address(RVA = "0xFB7AC0", Offset = "0xFB7AC0", VA = "0xFB7AC0")]
		[Preserve]
		public static void NarrativeEngine_GhostFoleyAsset_op_Inequality()
		{
		}

		[Token(Token = "0x60020E1")]
		[Address(RVA = "0xFB7B98", Offset = "0xFB7B98", VA = "0xFB7B98")]
		[Preserve]
		public static void NarrativeEngine_NarrativeManager_op_Equality()
		{
		}

		[Token(Token = "0x60020E2")]
		[Address(RVA = "0xFB7C70", Offset = "0xFB7C70", VA = "0xFB7C70")]
		[Preserve]
		public static void NarrativeEngine_NarrativeManager_op_Implicit()
		{
		}

		[Token(Token = "0x60020E3")]
		[Address(RVA = "0xFB7D40", Offset = "0xFB7D40", VA = "0xFB7D40")]
		[Preserve]
		public static void NarrativeEngine_NarrativeManager_op_Inequality()
		{
		}

		[Token(Token = "0x60020E4")]
		[Address(RVA = "0xFB7E18", Offset = "0xFB7E18", VA = "0xFB7E18")]
		[Preserve]
		public static void NarrativeEngine_StoryManager_op_Equality()
		{
		}

		[Token(Token = "0x60020E5")]
		[Address(RVA = "0xFB7EF0", Offset = "0xFB7EF0", VA = "0xFB7EF0")]
		[Preserve]
		public static void NarrativeEngine_StoryManager_op_Implicit()
		{
		}

		[Token(Token = "0x60020E6")]
		[Address(RVA = "0xFB7FC0", Offset = "0xFB7FC0", VA = "0xFB7FC0")]
		[Preserve]
		public static void NarrativeEngine_StoryManager_op_Inequality()
		{
		}

		[Token(Token = "0x60020E7")]
		[Address(RVA = "0xFB8098", Offset = "0xFB8098", VA = "0xFB8098")]
		[Preserve]
		public static void NintendoIO_op_Equality()
		{
		}

		[Token(Token = "0x60020E8")]
		[Address(RVA = "0xFB8170", Offset = "0xFB8170", VA = "0xFB8170")]
		[Preserve]
		public static void NintendoIO_op_Implicit()
		{
		}

		[Token(Token = "0x60020E9")]
		[Address(RVA = "0xFB8240", Offset = "0xFB8240", VA = "0xFB8240")]
		[Preserve]
		public static void NintendoIO_op_Inequality()
		{
		}

		[Token(Token = "0x60020EA")]
		[Address(RVA = "0xFB8318", Offset = "0xFB8318", VA = "0xFB8318")]
		[Preserve]
		public static void NumericKeypad_op_Equality()
		{
		}

		[Token(Token = "0x60020EB")]
		[Address(RVA = "0xFB83F0", Offset = "0xFB83F0", VA = "0xFB83F0")]
		[Preserve]
		public static void NumericKeypad_op_Implicit()
		{
		}

		[Token(Token = "0x60020EC")]
		[Address(RVA = "0xFB84C0", Offset = "0xFB84C0", VA = "0xFB84C0")]
		[Preserve]
		public static void NumericKeypad_op_Inequality()
		{
		}

		[Token(Token = "0x60020ED")]
		[Address(RVA = "0xFB8598", Offset = "0xFB8598", VA = "0xFB8598")]
		[Preserve]
		public static void ObjectRestorationService_op_Equality()
		{
		}

		[Token(Token = "0x60020EE")]
		[Address(RVA = "0xFB8670", Offset = "0xFB8670", VA = "0xFB8670")]
		[Preserve]
		public static void ObjectRestorationService_op_Implicit()
		{
		}

		[Token(Token = "0x60020EF")]
		[Address(RVA = "0xFB8740", Offset = "0xFB8740", VA = "0xFB8740")]
		[Preserve]
		public static void ObjectRestorationService_op_Inequality()
		{
		}

		[Token(Token = "0x60020F0")]
		[Address(RVA = "0xFB8818", Offset = "0xFB8818", VA = "0xFB8818")]
		[Preserve]
		public static void ObjectRestorationState_op_Equality()
		{
		}

		[Token(Token = "0x60020F1")]
		[Address(RVA = "0xFB88F0", Offset = "0xFB88F0", VA = "0xFB88F0")]
		[Preserve]
		public static void ObjectRestorationState_op_Implicit()
		{
		}

		[Token(Token = "0x60020F2")]
		[Address(RVA = "0xFB89C0", Offset = "0xFB89C0", VA = "0xFB89C0")]
		[Preserve]
		public static void ObjectRestorationState_op_Inequality()
		{
		}

		[Token(Token = "0x60020F3")]
		[Address(RVA = "0xFB8A98", Offset = "0xFB8A98", VA = "0xFB8A98")]
		[Preserve]
		public static void Occlusion_Occludee_op_Equality()
		{
		}

		[Token(Token = "0x60020F4")]
		[Address(RVA = "0xFB8B70", Offset = "0xFB8B70", VA = "0xFB8B70")]
		[Preserve]
		public static void Occlusion_Occludee_op_Implicit()
		{
		}

		[Token(Token = "0x60020F5")]
		[Address(RVA = "0xFB8C40", Offset = "0xFB8C40", VA = "0xFB8C40")]
		[Preserve]
		public static void Occlusion_Occludee_op_Inequality()
		{
		}

		[Token(Token = "0x60020F6")]
		[Address(RVA = "0xFB8D18", Offset = "0xFB8D18", VA = "0xFB8D18")]
		[Preserve]
		public static void Occlusion_OcclusionService_op_Equality()
		{
		}

		[Token(Token = "0x60020F7")]
		[Address(RVA = "0xFB8DF0", Offset = "0xFB8DF0", VA = "0xFB8DF0")]
		[Preserve]
		public static void Occlusion_OcclusionService_op_Implicit()
		{
		}

		[Token(Token = "0x60020F8")]
		[Address(RVA = "0xFB8EC0", Offset = "0xFB8EC0", VA = "0xFB8EC0")]
		[Preserve]
		public static void Occlusion_OcclusionService_op_Inequality()
		{
		}

		[Token(Token = "0x60020F9")]
		[Address(RVA = "0xFB8F98", Offset = "0xFB8F98", VA = "0xFB8F98")]
		[Preserve]
		public static void OcclusionOutlineSwitch_op_Equality()
		{
		}

		[Token(Token = "0x60020FA")]
		[Address(RVA = "0xFB9070", Offset = "0xFB9070", VA = "0xFB9070")]
		[Preserve]
		public static void OcclusionOutlineSwitch_op_Implicit()
		{
		}

		[Token(Token = "0x60020FB")]
		[Address(RVA = "0xFB9140", Offset = "0xFB9140", VA = "0xFB9140")]
		[Preserve]
		public static void OcclusionOutlineSwitch_op_Inequality()
		{
		}

		[Token(Token = "0x60020FC")]
		[Address(RVA = "0xFB9218", Offset = "0xFB9218", VA = "0xFB9218")]
		[Preserve]
		public static void OculusSpatializerFMOD_op_Equality()
		{
		}

		[Token(Token = "0x60020FD")]
		[Address(RVA = "0xFB92F0", Offset = "0xFB92F0", VA = "0xFB92F0")]
		[Preserve]
		public static void OculusSpatializerFMOD_op_Implicit()
		{
		}

		[Token(Token = "0x60020FE")]
		[Address(RVA = "0xFB93C0", Offset = "0xFB93C0", VA = "0xFB93C0")]
		[Preserve]
		public static void OculusSpatializerFMOD_op_Inequality()
		{
		}

		[Token(Token = "0x60020FF")]
		[Address(RVA = "0xFB9498", Offset = "0xFB9498", VA = "0xFB9498")]
		[Preserve]
		public static void OfficeChair_op_Equality()
		{
		}

		[Token(Token = "0x6002100")]
		[Address(RVA = "0xFB9570", Offset = "0xFB9570", VA = "0xFB9570")]
		[Preserve]
		public static void OfficeChair_op_Implicit()
		{
		}

		[Token(Token = "0x6002101")]
		[Address(RVA = "0xFB9640", Offset = "0xFB9640", VA = "0xFB9640")]
		[Preserve]
		public static void OfficeChair_op_Inequality()
		{
		}

		[Token(Token = "0x6002102")]
		[Address(RVA = "0xFB9718", Offset = "0xFB9718", VA = "0xFB9718")]
		[Preserve]
		public static void OnAirEffectController_op_Equality()
		{
		}

		[Token(Token = "0x6002103")]
		[Address(RVA = "0xFB97F0", Offset = "0xFB97F0", VA = "0xFB97F0")]
		[Preserve]
		public static void OnAirEffectController_op_Implicit()
		{
		}

		[Token(Token = "0x6002104")]
		[Address(RVA = "0xFB98C0", Offset = "0xFB98C0", VA = "0xFB98C0")]
		[Preserve]
		public static void OnAirEffectController_op_Inequality()
		{
		}

		[Token(Token = "0x6002105")]
		[Address(RVA = "0xFB9998", Offset = "0xFB9998", VA = "0xFB9998")]
		[Preserve]
		public static void OneOffForceGenerator_op_Equality()
		{
		}

		[Token(Token = "0x6002106")]
		[Address(RVA = "0xFB9A70", Offset = "0xFB9A70", VA = "0xFB9A70")]
		[Preserve]
		public static void OneOffForceGenerator_op_Implicit()
		{
		}

		[Token(Token = "0x6002107")]
		[Address(RVA = "0xFB9B40", Offset = "0xFB9B40", VA = "0xFB9B40")]
		[Preserve]
		public static void OneOffForceGenerator_op_Inequality()
		{
		}

		[Token(Token = "0x6002108")]
		[Address(RVA = "0xFB9C18", Offset = "0xFB9C18", VA = "0xFB9C18")]
		[Preserve]
		public static void Openable_op_Equality()
		{
		}

		[Token(Token = "0x6002109")]
		[Address(RVA = "0xFB9CF0", Offset = "0xFB9CF0", VA = "0xFB9CF0")]
		[Preserve]
		public static void Openable_op_Implicit()
		{
		}

		[Token(Token = "0x600210A")]
		[Address(RVA = "0xFB9DC0", Offset = "0xFB9DC0", VA = "0xFB9DC0")]
		[Preserve]
		public static void Openable_op_Inequality()
		{
		}

		[Token(Token = "0x600210B")]
		[Address(RVA = "0xFB9E98", Offset = "0xFB9E98", VA = "0xFB9E98")]
		[Preserve]
		public static void OpenDoorAndEnterInteraction_op_Equality()
		{
		}

		[Token(Token = "0x600210C")]
		[Address(RVA = "0xFB9F70", Offset = "0xFB9F70", VA = "0xFB9F70")]
		[Preserve]
		public static void OpenDoorAndEnterInteraction_op_Implicit()
		{
		}

		[Token(Token = "0x600210D")]
		[Address(RVA = "0xFBA040", Offset = "0xFBA040", VA = "0xFBA040")]
		[Preserve]
		public static void OpenDoorAndEnterInteraction_op_Inequality()
		{
		}

		[Token(Token = "0x600210E")]
		[Address(RVA = "0xFBA118", Offset = "0xFBA118", VA = "0xFBA118")]
		[Preserve]
		public static void OutlineManager_op_Equality()
		{
		}

		[Token(Token = "0x600210F")]
		[Address(RVA = "0xFBA1F0", Offset = "0xFBA1F0", VA = "0xFBA1F0")]
		[Preserve]
		public static void OutlineManager_op_Implicit()
		{
		}

		[Token(Token = "0x6002110")]
		[Address(RVA = "0xFBA2C0", Offset = "0xFBA2C0", VA = "0xFBA2C0")]
		[Preserve]
		public static void OutlineManager_op_Inequality()
		{
		}

		[Token(Token = "0x6002111")]
		[Address(RVA = "0xFBA398", Offset = "0xFBA398", VA = "0xFBA398")]
		[Preserve]
		public static void PaperTossBall_op_Equality()
		{
		}

		[Token(Token = "0x6002112")]
		[Address(RVA = "0xFBA470", Offset = "0xFBA470", VA = "0xFBA470")]
		[Preserve]
		public static void PaperTossBall_op_Implicit()
		{
		}

		[Token(Token = "0x6002113")]
		[Address(RVA = "0xFBA540", Offset = "0xFBA540", VA = "0xFBA540")]
		[Preserve]
		public static void PaperTossBall_op_Inequality()
		{
		}

		[Token(Token = "0x6002114")]
		[Address(RVA = "0xFBA618", Offset = "0xFBA618", VA = "0xFBA618")]
		[Preserve]
		public static void PaperTossHoopTarget_op_Equality()
		{
		}

		[Token(Token = "0x6002115")]
		[Address(RVA = "0xFBA6F0", Offset = "0xFBA6F0", VA = "0xFBA6F0")]
		[Preserve]
		public static void PaperTossHoopTarget_op_Implicit()
		{
		}

		[Token(Token = "0x6002116")]
		[Address(RVA = "0xFBA7C0", Offset = "0xFBA7C0", VA = "0xFBA7C0")]
		[Preserve]
		public static void PaperTossHoopTarget_op_Inequality()
		{
		}

		[Token(Token = "0x6002117")]
		[Address(RVA = "0xFBA898", Offset = "0xFBA898", VA = "0xFBA898")]
		[Preserve]
		public static void PaperTossOnEnterTrigger_op_Equality()
		{
		}

		[Token(Token = "0x6002118")]
		[Address(RVA = "0xFBA970", Offset = "0xFBA970", VA = "0xFBA970")]
		[Preserve]
		public static void PaperTossOnEnterTrigger_op_Implicit()
		{
		}

		[Token(Token = "0x6002119")]
		[Address(RVA = "0xFBAA40", Offset = "0xFBAA40", VA = "0xFBAA40")]
		[Preserve]
		public static void PaperTossOnEnterTrigger_op_Inequality()
		{
		}

		[Token(Token = "0x600211A")]
		[Address(RVA = "0xFBAB18", Offset = "0xFBAB18", VA = "0xFBAB18")]
		[Preserve]
		public static void PaperTossOnExitTrigger_op_Equality()
		{
		}

		[Token(Token = "0x600211B")]
		[Address(RVA = "0xFBABF0", Offset = "0xFBABF0", VA = "0xFBABF0")]
		[Preserve]
		public static void PaperTossOnExitTrigger_op_Implicit()
		{
		}

		[Token(Token = "0x600211C")]
		[Address(RVA = "0xFBACC0", Offset = "0xFBACC0", VA = "0xFBACC0")]
		[Preserve]
		public static void PaperTossOnExitTrigger_op_Inequality()
		{
		}

		[Token(Token = "0x600211D")]
		[Address(RVA = "0xFBAD98", Offset = "0xFBAD98", VA = "0xFBAD98")]
		[Preserve]
		public static void PaperTossStack_op_Equality()
		{
		}

		[Token(Token = "0x600211E")]
		[Address(RVA = "0xFBAE70", Offset = "0xFBAE70", VA = "0xFBAE70")]
		[Preserve]
		public static void PaperTossStack_op_Implicit()
		{
		}

		[Token(Token = "0x600211F")]
		[Address(RVA = "0xFBAF40", Offset = "0xFBAF40", VA = "0xFBAF40")]
		[Preserve]
		public static void PaperTossStack_op_Inequality()
		{
		}

		[Token(Token = "0x6002120")]
		[Address(RVA = "0xFBB018", Offset = "0xFBB018", VA = "0xFBB018")]
		[Preserve]
		public static void PausableAnimations_op_Equality()
		{
		}

		[Token(Token = "0x6002121")]
		[Address(RVA = "0xFBB0F0", Offset = "0xFBB0F0", VA = "0xFBB0F0")]
		[Preserve]
		public static void PausableAnimations_op_Implicit()
		{
		}

		[Token(Token = "0x6002122")]
		[Address(RVA = "0xFBB1C0", Offset = "0xFBB1C0", VA = "0xFBB1C0")]
		[Preserve]
		public static void PausableAnimations_op_Inequality()
		{
		}

		[Token(Token = "0x6002123")]
		[Address(RVA = "0xFBB298", Offset = "0xFBB298", VA = "0xFBB298")]
		[Preserve]
		public static void PausableAnimators_op_Equality()
		{
		}

		[Token(Token = "0x6002124")]
		[Address(RVA = "0xFBB370", Offset = "0xFBB370", VA = "0xFBB370")]
		[Preserve]
		public static void PausableAnimators_op_Implicit()
		{
		}

		[Token(Token = "0x6002125")]
		[Address(RVA = "0xFBB440", Offset = "0xFBB440", VA = "0xFBB440")]
		[Preserve]
		public static void PausableAnimators_op_Inequality()
		{
		}

		[Token(Token = "0x6002126")]
		[Address(RVA = "0xFBB518", Offset = "0xFBB518", VA = "0xFBB518")]
		[Preserve]
		public static void PausableDirectors_op_Equality()
		{
		}

		[Token(Token = "0x6002127")]
		[Address(RVA = "0xFBB5F0", Offset = "0xFBB5F0", VA = "0xFBB5F0")]
		[Preserve]
		public static void PausableDirectors_op_Implicit()
		{
		}

		[Token(Token = "0x6002128")]
		[Address(RVA = "0xFBB6C0", Offset = "0xFBB6C0", VA = "0xFBB6C0")]
		[Preserve]
		public static void PausableDirectors_op_Inequality()
		{
		}

		[Token(Token = "0x6002129")]
		[Address(RVA = "0xFBB798", Offset = "0xFBB798", VA = "0xFBB798")]
		[Preserve]
		public static void PausableObjectService_op_Equality()
		{
		}

		[Token(Token = "0x600212A")]
		[Address(RVA = "0xFBB870", Offset = "0xFBB870", VA = "0xFBB870")]
		[Preserve]
		public static void PausableObjectService_op_Implicit()
		{
		}

		[Token(Token = "0x600212B")]
		[Address(RVA = "0xFBB940", Offset = "0xFBB940", VA = "0xFBB940")]
		[Preserve]
		public static void PausableObjectService_op_Inequality()
		{
		}

		[Token(Token = "0x600212C")]
		[Address(RVA = "0xFBBA18", Offset = "0xFBBA18", VA = "0xFBBA18")]
		[Preserve]
		public static void PausableParticles_op_Equality()
		{
		}

		[Token(Token = "0x600212D")]
		[Address(RVA = "0xFBBAF0", Offset = "0xFBBAF0", VA = "0xFBBAF0")]
		[Preserve]
		public static void PausableParticles_op_Implicit()
		{
		}

		[Token(Token = "0x600212E")]
		[Address(RVA = "0xFBBBC0", Offset = "0xFBBBC0", VA = "0xFBBBC0")]
		[Preserve]
		public static void PausableParticles_op_Inequality()
		{
		}

		[Token(Token = "0x600212F")]
		[Address(RVA = "0xFBBC98", Offset = "0xFBBC98", VA = "0xFBBC98")]
		[Preserve]
		public static void PausablePhysics_op_Equality()
		{
		}

		[Token(Token = "0x6002130")]
		[Address(RVA = "0xFBBD70", Offset = "0xFBBD70", VA = "0xFBBD70")]
		[Preserve]
		public static void PausablePhysics_op_Implicit()
		{
		}

		[Token(Token = "0x6002131")]
		[Address(RVA = "0xFBBE40", Offset = "0xFBBE40", VA = "0xFBBE40")]
		[Preserve]
		public static void PausablePhysics_op_Inequality()
		{
		}

		[Token(Token = "0x6002132")]
		[Address(RVA = "0xFBBF18", Offset = "0xFBBF18", VA = "0xFBBF18")]
		[Preserve]
		public static void Phone_op_Equality()
		{
		}

		[Token(Token = "0x6002133")]
		[Address(RVA = "0xFBBFF0", Offset = "0xFBBFF0", VA = "0xFBBFF0")]
		[Preserve]
		public static void Phone_op_Implicit()
		{
		}

		[Token(Token = "0x6002134")]
		[Address(RVA = "0xFBC0C0", Offset = "0xFBC0C0", VA = "0xFBC0C0")]
		[Preserve]
		public static void Phone_op_Inequality()
		{
		}

		[Token(Token = "0x6002135")]
		[Address(RVA = "0xFBC198", Offset = "0xFBC198", VA = "0xFBC198")]
		[Preserve]
		public static void PhoneLine_op_Equality()
		{
		}

		[Token(Token = "0x6002136")]
		[Address(RVA = "0xFBC270", Offset = "0xFBC270", VA = "0xFBC270")]
		[Preserve]
		public static void PhoneLine_op_Implicit()
		{
		}

		[Token(Token = "0x6002137")]
		[Address(RVA = "0xFBC340", Offset = "0xFBC340", VA = "0xFBC340")]
		[Preserve]
		public static void PhoneLine_op_Inequality()
		{
		}

		[Token(Token = "0x6002138")]
		[Address(RVA = "0xFBC418", Offset = "0xFBC418", VA = "0xFBC418")]
		[Preserve]
		public static void PhoneLineFlashing_op_Equality()
		{
		}

		[Token(Token = "0x6002139")]
		[Address(RVA = "0xFBC4F0", Offset = "0xFBC4F0", VA = "0xFBC4F0")]
		[Preserve]
		public static void PhoneLineFlashing_op_Implicit()
		{
		}

		[Token(Token = "0x600213A")]
		[Address(RVA = "0xFBC5C0", Offset = "0xFBC5C0", VA = "0xFBC5C0")]
		[Preserve]
		public static void PhoneLineFlashing_op_Inequality()
		{
		}

		[Token(Token = "0x600213B")]
		[Address(RVA = "0xFBC698", Offset = "0xFBC698", VA = "0xFBC698")]
		[Preserve]
		public static void Phonelines_op_Equality()
		{
		}

		[Token(Token = "0x600213C")]
		[Address(RVA = "0xFBC770", Offset = "0xFBC770", VA = "0xFBC770")]
		[Preserve]
		public static void PhoneLines_op_Equality()
		{
		}

		[Token(Token = "0x600213D")]
		[Address(RVA = "0xFBC848", Offset = "0xFBC848", VA = "0xFBC848")]
		[Preserve]
		public static void Phonelines_op_Implicit()
		{
		}

		[Token(Token = "0x600213E")]
		[Address(RVA = "0xFBC918", Offset = "0xFBC918", VA = "0xFBC918")]
		[Preserve]
		public static void PhoneLines_op_Implicit()
		{
		}

		[Token(Token = "0x600213F")]
		[Address(RVA = "0xFBC9E8", Offset = "0xFBC9E8", VA = "0xFBC9E8")]
		[Preserve]
		public static void Phonelines_op_Inequality()
		{
		}

		[Token(Token = "0x6002140")]
		[Address(RVA = "0xFBCAC0", Offset = "0xFBCAC0", VA = "0xFBCAC0")]
		[Preserve]
		public static void PhoneLines_op_Inequality()
		{
		}

		[Token(Token = "0x6002141")]
		[Address(RVA = "0xFBCB98", Offset = "0xFBCB98", VA = "0xFBCB98")]
		[Preserve]
		public static void PhysicalProperties_op_Equality()
		{
		}

		[Token(Token = "0x6002142")]
		[Address(RVA = "0xFBCC70", Offset = "0xFBCC70", VA = "0xFBCC70")]
		[Preserve]
		public static void PhysicalProperties_op_Implicit()
		{
		}

		[Token(Token = "0x6002143")]
		[Address(RVA = "0xFBCD40", Offset = "0xFBCD40", VA = "0xFBCD40")]
		[Preserve]
		public static void PhysicalProperties_op_Inequality()
		{
		}

		[Token(Token = "0x6002144")]
		[Address(RVA = "0xFBCE18", Offset = "0xFBCE18", VA = "0xFBCE18")]
		[Preserve]
		public static void PhysicsAudio_op_Equality()
		{
		}

		[Token(Token = "0x6002145")]
		[Address(RVA = "0xFBCEF0", Offset = "0xFBCEF0", VA = "0xFBCEF0")]
		[Preserve]
		public static void PhysicsAudio_op_Implicit()
		{
		}

		[Token(Token = "0x6002146")]
		[Address(RVA = "0xFBCFC0", Offset = "0xFBCFC0", VA = "0xFBCFC0")]
		[Preserve]
		public static void PhysicsAudio_op_Inequality()
		{
		}

		[Token(Token = "0x6002147")]
		[Address(RVA = "0xFBD098", Offset = "0xFBD098", VA = "0xFBD098")]
		[Preserve]
		public static void PickUpCartridgeInteraction_op_Equality()
		{
		}

		[Token(Token = "0x6002148")]
		[Address(RVA = "0xFBD170", Offset = "0xFBD170", VA = "0xFBD170")]
		[Preserve]
		public static void PickUpCartridgeInteraction_op_Implicit()
		{
		}

		[Token(Token = "0x6002149")]
		[Address(RVA = "0xFBD240", Offset = "0xFBD240", VA = "0xFBD240")]
		[Preserve]
		public static void PickUpCartridgeInteraction_op_Inequality()
		{
		}

		[Token(Token = "0x600214A")]
		[Address(RVA = "0xFBD318", Offset = "0xFBD318", VA = "0xFBD318")]
		[Preserve]
		public static void PickUpInteraction_op_Equality()
		{
		}

		[Token(Token = "0x600214B")]
		[Address(RVA = "0xFBD3F0", Offset = "0xFBD3F0", VA = "0xFBD3F0")]
		[Preserve]
		public static void PickUpInteraction_op_Implicit()
		{
		}

		[Token(Token = "0x600214C")]
		[Address(RVA = "0xFBD4C0", Offset = "0xFBD4C0", VA = "0xFBD4C0")]
		[Preserve]
		public static void PickUpInteraction_op_Inequality()
		{
		}

		[Token(Token = "0x600214D")]
		[Address(RVA = "0xFBD598", Offset = "0xFBD598", VA = "0xFBD598")]
		[Preserve]
		public static void PickUpRecordInteraction_op_Equality()
		{
		}

		[Token(Token = "0x600214E")]
		[Address(RVA = "0xFBD670", Offset = "0xFBD670", VA = "0xFBD670")]
		[Preserve]
		public static void PickUpRecordInteraction_op_Implicit()
		{
		}

		[Token(Token = "0x600214F")]
		[Address(RVA = "0xFBD740", Offset = "0xFBD740", VA = "0xFBD740")]
		[Preserve]
		public static void PickUpRecordInteraction_op_Inequality()
		{
		}

		[Token(Token = "0x6002150")]
		[Address(RVA = "0xFBD818", Offset = "0xFBD818", VA = "0xFBD818")]
		[Preserve]
		public static void PinboardDock_op_Equality()
		{
		}

		[Token(Token = "0x6002151")]
		[Address(RVA = "0xFBD8F0", Offset = "0xFBD8F0", VA = "0xFBD8F0")]
		[Preserve]
		public static void PinboardDock_op_Implicit()
		{
		}

		[Token(Token = "0x6002152")]
		[Address(RVA = "0xFBD9C0", Offset = "0xFBD9C0", VA = "0xFBD9C0")]
		[Preserve]
		public static void PinboardDock_op_Inequality()
		{
		}

		[Token(Token = "0x6002153")]
		[Address(RVA = "0xFBDA98", Offset = "0xFBDA98", VA = "0xFBDA98")]
		[Preserve]
		public static void PinboardScope_op_Equality()
		{
		}

		[Token(Token = "0x6002154")]
		[Address(RVA = "0xFBDB70", Offset = "0xFBDB70", VA = "0xFBDB70")]
		[Preserve]
		public static void PinboardScope_op_Implicit()
		{
		}

		[Token(Token = "0x6002155")]
		[Address(RVA = "0xFBDC40", Offset = "0xFBDC40", VA = "0xFBDC40")]
		[Preserve]
		public static void PinboardScope_op_Inequality()
		{
		}

		[Token(Token = "0x6002156")]
		[Address(RVA = "0xFBDD18", Offset = "0xFBDD18", VA = "0xFBDD18")]
		[Preserve]
		public static void PlaceCartridgeInteraction_op_Equality()
		{
		}

		[Token(Token = "0x6002157")]
		[Address(RVA = "0xFBDDF0", Offset = "0xFBDDF0", VA = "0xFBDDF0")]
		[Preserve]
		public static void PlaceCartridgeInteraction_op_Implicit()
		{
		}

		[Token(Token = "0x6002158")]
		[Address(RVA = "0xFBDEC0", Offset = "0xFBDEC0", VA = "0xFBDEC0")]
		[Preserve]
		public static void PlaceCartridgeInteraction_op_Inequality()
		{
		}

		[Token(Token = "0x6002159")]
		[Address(RVA = "0xFBDF98", Offset = "0xFBDF98", VA = "0xFBDF98")]
		[Preserve]
		public static void PlaceInteraction_op_Equality()
		{
		}

		[Token(Token = "0x600215A")]
		[Address(RVA = "0xFBE070", Offset = "0xFBE070", VA = "0xFBE070")]
		[Preserve]
		public static void PlaceInteraction_op_Implicit()
		{
		}

		[Token(Token = "0x600215B")]
		[Address(RVA = "0xFBE140", Offset = "0xFBE140", VA = "0xFBE140")]
		[Preserve]
		public static void PlaceInteraction_op_Inequality()
		{
		}

		[Token(Token = "0x600215C")]
		[Address(RVA = "0xFBE218", Offset = "0xFBE218", VA = "0xFBE218")]
		[Preserve]
		public static void PlaceRecordInteraction_op_Equality()
		{
		}

		[Token(Token = "0x600215D")]
		[Address(RVA = "0xFBE2F0", Offset = "0xFBE2F0", VA = "0xFBE2F0")]
		[Preserve]
		public static void PlaceRecordInteraction_op_Implicit()
		{
		}

		[Token(Token = "0x600215E")]
		[Address(RVA = "0xFBE3C0", Offset = "0xFBE3C0", VA = "0xFBE3C0")]
		[Preserve]
		public static void PlaceRecordInteraction_op_Inequality()
		{
		}

		[Token(Token = "0x600215F")]
		[Address(RVA = "0xFBE498", Offset = "0xFBE498", VA = "0xFBE498")]
		[Preserve]
		public static void Platform_PlatformManager_op_Equality()
		{
		}

		[Token(Token = "0x6002160")]
		[Address(RVA = "0xFBE570", Offset = "0xFBE570", VA = "0xFBE570")]
		[Preserve]
		public static void Platform_PlatformManager_op_Implicit()
		{
		}

		[Token(Token = "0x6002161")]
		[Address(RVA = "0xFBE640", Offset = "0xFBE640", VA = "0xFBE640")]
		[Preserve]
		public static void Platform_PlatformManager_op_Inequality()
		{
		}

		[Token(Token = "0x6002162")]
		[Address(RVA = "0xFBE718", Offset = "0xFBE718", VA = "0xFBE718")]
		[Preserve]
		public static void Player_HolderPlayer_op_Equality()
		{
		}

		[Token(Token = "0x6002163")]
		[Address(RVA = "0xFBE7F0", Offset = "0xFBE7F0", VA = "0xFBE7F0")]
		[Preserve]
		public static void Player_HolderPlayer_op_Implicit()
		{
		}

		[Token(Token = "0x6002164")]
		[Address(RVA = "0xFBE8C0", Offset = "0xFBE8C0", VA = "0xFBE8C0")]
		[Preserve]
		public static void Player_HolderPlayer_op_Inequality()
		{
		}

		[Token(Token = "0x6002165")]
		[Address(RVA = "0xFBE998", Offset = "0xFBE998", VA = "0xFBE998")]
		[Preserve]
		public static void Player_Movement_MoveTarget_op_Equality()
		{
		}

		[Token(Token = "0x6002166")]
		[Address(RVA = "0xFBEA70", Offset = "0xFBEA70", VA = "0xFBEA70")]
		[Preserve]
		public static void Player_Movement_MoveTarget_op_Implicit()
		{
		}

		[Token(Token = "0x6002167")]
		[Address(RVA = "0xFBEB40", Offset = "0xFBEB40", VA = "0xFBEB40")]
		[Preserve]
		public static void Player_Movement_MoveTarget_op_Inequality()
		{
		}

		[Token(Token = "0x6002168")]
		[Address(RVA = "0xFBEC18", Offset = "0xFBEC18", VA = "0xFBEC18")]
		[Preserve]
		public static void Player_Movement_MoveTargetRecenterInteraction_op_Equality()
		{
		}

		[Token(Token = "0x6002169")]
		[Address(RVA = "0xFBECF0", Offset = "0xFBECF0", VA = "0xFBECF0")]
		[Preserve]
		public static void Player_Movement_MoveTargetRecenterInteraction_op_Implicit()
		{
		}

		[Token(Token = "0x600216A")]
		[Address(RVA = "0xFBEDC0", Offset = "0xFBEDC0", VA = "0xFBEDC0")]
		[Preserve]
		public static void Player_Movement_MoveTargetRecenterInteraction_op_Inequality()
		{
		}

		[Token(Token = "0x600216B")]
		[Address(RVA = "0xFBEE98", Offset = "0xFBEE98", VA = "0xFBEE98")]
		[Preserve]
		public static void Player_VRHeightAdjuster_op_Equality()
		{
		}

		[Token(Token = "0x600216C")]
		[Address(RVA = "0xFBEF70", Offset = "0xFBEF70", VA = "0xFBEF70")]
		[Preserve]
		public static void Player_VRHeightAdjuster_op_Implicit()
		{
		}

		[Token(Token = "0x600216D")]
		[Address(RVA = "0xFBF040", Offset = "0xFBF040", VA = "0xFBF040")]
		[Preserve]
		public static void Player_VRHeightAdjuster_op_Inequality()
		{
		}

		[Token(Token = "0x600216E")]
		[Address(RVA = "0xFBF118", Offset = "0xFBF118", VA = "0xFBF118")]
		[Preserve]
		public static void Player_VRPlayer_op_Equality()
		{
		}

		[Token(Token = "0x600216F")]
		[Address(RVA = "0xFBF1F0", Offset = "0xFBF1F0", VA = "0xFBF1F0")]
		[Preserve]
		public static void Player_VRPlayer_op_Implicit()
		{
		}

		[Token(Token = "0x6002170")]
		[Address(RVA = "0xFBF2C0", Offset = "0xFBF2C0", VA = "0xFBF2C0")]
		[Preserve]
		public static void Player_VRPlayer_op_Inequality()
		{
		}

		[Token(Token = "0x6002171")]
		[Address(RVA = "0xFBF398", Offset = "0xFBF398", VA = "0xFBF398")]
		[Preserve]
		public static void Player_XRInputServiceHelper_op_Equality()
		{
		}

		[Token(Token = "0x6002172")]
		[Address(RVA = "0xFBF470", Offset = "0xFBF470", VA = "0xFBF470")]
		[Preserve]
		public static void Player_XRInputServiceHelper_op_Implicit()
		{
		}

		[Token(Token = "0x6002173")]
		[Address(RVA = "0xFBF540", Offset = "0xFBF540", VA = "0xFBF540")]
		[Preserve]
		public static void Player_XRInputServiceHelper_op_Inequality()
		{
		}

		[Token(Token = "0x6002174")]
		[Address(RVA = "0xFBF618", Offset = "0xFBF618", VA = "0xFBF618")]
		[Preserve]
		public static void PlayerInteractionHighlighter_op_Equality()
		{
		}

		[Token(Token = "0x6002175")]
		[Address(RVA = "0xFBF6F0", Offset = "0xFBF6F0", VA = "0xFBF6F0")]
		[Preserve]
		public static void PlayerInteractionHighlighter_op_Implicit()
		{
		}

		[Token(Token = "0x6002176")]
		[Address(RVA = "0xFBF7C0", Offset = "0xFBF7C0", VA = "0xFBF7C0")]
		[Preserve]
		public static void PlayerInteractionHighlighter_op_Inequality()
		{
		}

		[Token(Token = "0x6002177")]
		[Address(RVA = "0xFBF898", Offset = "0xFBF898", VA = "0xFBF898")]
		[Preserve]
		public static void PopulateGameplaySceneState_op_Equality()
		{
		}

		[Token(Token = "0x6002178")]
		[Address(RVA = "0xFBF970", Offset = "0xFBF970", VA = "0xFBF970")]
		[Preserve]
		public static void PopulateGameplaySceneState_op_Implicit()
		{
		}

		[Token(Token = "0x6002179")]
		[Address(RVA = "0xFBFA40", Offset = "0xFBFA40", VA = "0xFBFA40")]
		[Preserve]
		public static void PopulateGameplaySceneState_op_Inequality()
		{
		}

		[Token(Token = "0x600217A")]
		[Address(RVA = "0xFBFB18", Offset = "0xFBFB18", VA = "0xFBFB18")]
		[Preserve]
		public static void PostLoadSceneIntroTransitionState_op_Equality()
		{
		}

		[Token(Token = "0x600217B")]
		[Address(RVA = "0xFBFBF0", Offset = "0xFBFBF0", VA = "0xFBFBF0")]
		[Preserve]
		public static void PostLoadSceneIntroTransitionState_op_Implicit()
		{
		}

		[Token(Token = "0x600217C")]
		[Address(RVA = "0xFBFCC0", Offset = "0xFBFCC0", VA = "0xFBFCC0")]
		[Preserve]
		public static void PostLoadSceneIntroTransitionState_op_Inequality()
		{
		}

		[Token(Token = "0x600217D")]
		[Address(RVA = "0xFBFD98", Offset = "0xFBFD98", VA = "0xFBFD98")]
		[Preserve]
		public static void PostLoadSceneTransitionState_op_Equality()
		{
		}

		[Token(Token = "0x600217E")]
		[Address(RVA = "0xFBFE70", Offset = "0xFBFE70", VA = "0xFBFE70")]
		[Preserve]
		public static void PostLoadSceneTransitionState_op_Implicit()
		{
		}

		[Token(Token = "0x600217F")]
		[Address(RVA = "0xFBFF40", Offset = "0xFBFF40", VA = "0xFBFF40")]
		[Preserve]
		public static void PostLoadSceneTransitionState_op_Inequality()
		{
		}

		[Token(Token = "0x6002180")]
		[Address(RVA = "0xFC0018", Offset = "0xFC0018", VA = "0xFC0018")]
		[Preserve]
		public static void PostProcessAdjustSettings_op_Equality()
		{
		}

		[Token(Token = "0x6002181")]
		[Address(RVA = "0xFC00F0", Offset = "0xFC00F0", VA = "0xFC00F0")]
		[Preserve]
		public static void PostProcessAdjustSettings_op_Implicit()
		{
		}

		[Token(Token = "0x6002182")]
		[Address(RVA = "0xFC01C0", Offset = "0xFC01C0", VA = "0xFC01C0")]
		[Preserve]
		public static void PostProcessAdjustSettings_op_Inequality()
		{
		}

		[Token(Token = "0x6002183")]
		[Address(RVA = "0xFC0298", Offset = "0xFC0298", VA = "0xFC0298")]
		[Preserve]
		public static void PowerShaderGlobalController_op_Equality()
		{
		}

		[Token(Token = "0x6002184")]
		[Address(RVA = "0xFC0370", Offset = "0xFC0370", VA = "0xFC0370")]
		[Preserve]
		public static void PowerShaderGlobalController_op_Implicit()
		{
		}

		[Token(Token = "0x6002185")]
		[Address(RVA = "0xFC0440", Offset = "0xFC0440", VA = "0xFC0440")]
		[Preserve]
		public static void PowerShaderGlobalController_op_Inequality()
		{
		}

		[Token(Token = "0x6002186")]
		[Address(RVA = "0xFC0518", Offset = "0xFC0518", VA = "0xFC0518")]
		[Preserve]
		public static void PowerSupplyEntryPoint_op_Equality()
		{
		}

		[Token(Token = "0x6002187")]
		[Address(RVA = "0xFC05F0", Offset = "0xFC05F0", VA = "0xFC05F0")]
		[Preserve]
		public static void PowerSupplyEntryPoint_op_Implicit()
		{
		}

		[Token(Token = "0x6002188")]
		[Address(RVA = "0xFC06C0", Offset = "0xFC06C0", VA = "0xFC06C0")]
		[Preserve]
		public static void PowerSupplyEntryPoint_op_Inequality()
		{
		}

		[Token(Token = "0x6002189")]
		[Address(RVA = "0xFC0798", Offset = "0xFC0798", VA = "0xFC0798")]
		[Preserve]
		public static void PreLoadSceneTransitionState_op_Equality()
		{
		}

		[Token(Token = "0x600218A")]
		[Address(RVA = "0xFC0870", Offset = "0xFC0870", VA = "0xFC0870")]
		[Preserve]
		public static void PreLoadSceneTransitionState_op_Implicit()
		{
		}

		[Token(Token = "0x600218B")]
		[Address(RVA = "0xFC0940", Offset = "0xFC0940", VA = "0xFC0940")]
		[Preserve]
		public static void PreLoadSceneTransitionState_op_Inequality()
		{
		}

		[Token(Token = "0x600218C")]
		[Address(RVA = "0xFC0A18", Offset = "0xFC0A18", VA = "0xFC0A18")]
		[Preserve]
		public static void PressButtonInteraction_op_Equality()
		{
		}

		[Token(Token = "0x600218D")]
		[Address(RVA = "0xFC0AF0", Offset = "0xFC0AF0", VA = "0xFC0AF0")]
		[Preserve]
		public static void PressButtonInteraction_op_Implicit()
		{
		}

		[Token(Token = "0x600218E")]
		[Address(RVA = "0xFC0BC0", Offset = "0xFC0BC0", VA = "0xFC0BC0")]
		[Preserve]
		public static void PressButtonInteraction_op_Inequality()
		{
		}

		[Token(Token = "0x600218F")]
		[Address(RVA = "0xFC0C98", Offset = "0xFC0C98", VA = "0xFC0C98")]
		[Preserve]
		public static void ProducerWindowEffectController_op_Equality()
		{
		}

		[Token(Token = "0x6002190")]
		[Address(RVA = "0xFC0D70", Offset = "0xFC0D70", VA = "0xFC0D70")]
		[Preserve]
		public static void ProducerWindowEffectController_op_Implicit()
		{
		}

		[Token(Token = "0x6002191")]
		[Address(RVA = "0xFC0E40", Offset = "0xFC0E40", VA = "0xFC0E40")]
		[Preserve]
		public static void ProducerWindowEffectController_op_Inequality()
		{
		}

		[Token(Token = "0x6002192")]
		[Address(RVA = "0xFC0F18", Offset = "0xFC0F18", VA = "0xFC0F18")]
		[Preserve]
		public static void RadioAchievements_AchievementDefinition_op_Equality()
		{
		}

		[Token(Token = "0x6002193")]
		[Address(RVA = "0xFC0FF0", Offset = "0xFC0FF0", VA = "0xFC0FF0")]
		[Preserve]
		public static void RadioAchievements_AchievementDefinition_op_Implicit()
		{
		}

		[Token(Token = "0x6002194")]
		[Address(RVA = "0xFC10C0", Offset = "0xFC10C0", VA = "0xFC10C0")]
		[Preserve]
		public static void RadioAchievements_AchievementDefinition_op_Inequality()
		{
		}

		[Token(Token = "0x6002195")]
		[Address(RVA = "0xFC1198", Offset = "0xFC1198", VA = "0xFC1198")]
		[Preserve]
		public static void RadioAchievements_ProgressDefinition_op_Equality()
		{
		}

		[Token(Token = "0x6002196")]
		[Address(RVA = "0xFC1270", Offset = "0xFC1270", VA = "0xFC1270")]
		[Preserve]
		public static void RadioAchievements_ProgressDefinition_op_Implicit()
		{
		}

		[Token(Token = "0x6002197")]
		[Address(RVA = "0xFC1340", Offset = "0xFC1340", VA = "0xFC1340")]
		[Preserve]
		public static void RadioAchievements_ProgressDefinition_op_Inequality()
		{
		}

		[Token(Token = "0x6002198")]
		[Address(RVA = "0xFC1418", Offset = "0xFC1418", VA = "0xFC1418")]
		[Preserve]
		public static void RealTimeFadeEffectController_op_Equality()
		{
		}

		[Token(Token = "0x6002199")]
		[Address(RVA = "0xFC14F0", Offset = "0xFC14F0", VA = "0xFC14F0")]
		[Preserve]
		public static void RealTimeFadeEffectController_op_Implicit()
		{
		}

		[Token(Token = "0x600219A")]
		[Address(RVA = "0xFC15C0", Offset = "0xFC15C0", VA = "0xFC15C0")]
		[Preserve]
		public static void RealTimeFadeEffectController_op_Inequality()
		{
		}

		[Token(Token = "0x600219B")]
		[Address(RVA = "0xFC1698", Offset = "0xFC1698", VA = "0xFC1698")]
		[Preserve]
		public static void RealtimeLightHandler_op_Equality()
		{
		}

		[Token(Token = "0x600219C")]
		[Address(RVA = "0xFC1770", Offset = "0xFC1770", VA = "0xFC1770")]
		[Preserve]
		public static void RealtimeLightHandler_op_Implicit()
		{
		}

		[Token(Token = "0x600219D")]
		[Address(RVA = "0xFC1840", Offset = "0xFC1840", VA = "0xFC1840")]
		[Preserve]
		public static void RealtimeLightHandler_op_Inequality()
		{
		}

		[Token(Token = "0x600219E")]
		[Address(RVA = "0xFC1918", Offset = "0xFC1918", VA = "0xFC1918")]
		[Preserve]
		public static void RealtimeLightManager_op_Equality()
		{
		}

		[Token(Token = "0x600219F")]
		[Address(RVA = "0xFC19F0", Offset = "0xFC19F0", VA = "0xFC19F0")]
		[Preserve]
		public static void RealtimeLightManager_op_Implicit()
		{
		}

		[Token(Token = "0x60021A0")]
		[Address(RVA = "0xFC1AC0", Offset = "0xFC1AC0", VA = "0xFC1AC0")]
		[Preserve]
		public static void RealtimeLightManager_op_Inequality()
		{
		}

		[Token(Token = "0x60021A1")]
		[Address(RVA = "0xFC1B98", Offset = "0xFC1B98", VA = "0xFC1B98")]
		[Preserve]
		public static void RealtimeLightsRoom_op_Equality()
		{
		}

		[Token(Token = "0x60021A2")]
		[Address(RVA = "0xFC1C70", Offset = "0xFC1C70", VA = "0xFC1C70")]
		[Preserve]
		public static void RealtimeLightsRoom_op_Implicit()
		{
		}

		[Token(Token = "0x60021A3")]
		[Address(RVA = "0xFC1D40", Offset = "0xFC1D40", VA = "0xFC1D40")]
		[Preserve]
		public static void RealtimeLightsRoom_op_Inequality()
		{
		}

		[Token(Token = "0x60021A4")]
		[Address(RVA = "0xFC1E18", Offset = "0xFC1E18", VA = "0xFC1E18")]
		[Preserve]
		public static void RecordBox_op_Equality()
		{
		}

		[Token(Token = "0x60021A5")]
		[Address(RVA = "0xFC1EF0", Offset = "0xFC1EF0", VA = "0xFC1EF0")]
		[Preserve]
		public static void RecordBox_op_Implicit()
		{
		}

		[Token(Token = "0x60021A6")]
		[Address(RVA = "0xFC1FC0", Offset = "0xFC1FC0", VA = "0xFC1FC0")]
		[Preserve]
		public static void RecordBox_op_Inequality()
		{
		}

		[Token(Token = "0x60021A7")]
		[Address(RVA = "0xFC2098", Offset = "0xFC2098", VA = "0xFC2098")]
		[Preserve]
		public static void RecordDrawer_op_Equality()
		{
		}

		[Token(Token = "0x60021A8")]
		[Address(RVA = "0xFC2170", Offset = "0xFC2170", VA = "0xFC2170")]
		[Preserve]
		public static void RecordDrawer_op_Implicit()
		{
		}

		[Token(Token = "0x60021A9")]
		[Address(RVA = "0xFC2240", Offset = "0xFC2240", VA = "0xFC2240")]
		[Preserve]
		public static void RecordDrawer_op_Inequality()
		{
		}

		[Token(Token = "0x60021AA")]
		[Address(RVA = "0xFC2318", Offset = "0xFC2318", VA = "0xFC2318")]
		[Preserve]
		public static void RecordDrawerDock_op_Equality()
		{
		}

		[Token(Token = "0x60021AB")]
		[Address(RVA = "0xFC23F0", Offset = "0xFC23F0", VA = "0xFC23F0")]
		[Preserve]
		public static void RecordDrawerDock_op_Implicit()
		{
		}

		[Token(Token = "0x60021AC")]
		[Address(RVA = "0xFC24C0", Offset = "0xFC24C0", VA = "0xFC24C0")]
		[Preserve]
		public static void RecordDrawerDock_op_Inequality()
		{
		}

		[Token(Token = "0x60021AD")]
		[Address(RVA = "0xFC2598", Offset = "0xFC2598", VA = "0xFC2598")]
		[Preserve]
		public static void RecordDrawerScope_op_Equality()
		{
		}

		[Token(Token = "0x60021AE")]
		[Address(RVA = "0xFC2670", Offset = "0xFC2670", VA = "0xFC2670")]
		[Preserve]
		public static void RecordDrawerScope_op_Implicit()
		{
		}

		[Token(Token = "0x60021AF")]
		[Address(RVA = "0xFC2740", Offset = "0xFC2740", VA = "0xFC2740")]
		[Preserve]
		public static void RecordDrawerScope_op_Inequality()
		{
		}

		[Token(Token = "0x60021B0")]
		[Address(RVA = "0xFC2818", Offset = "0xFC2818", VA = "0xFC2818")]
		[Preserve]
		public static void RecordPlayer_op_Equality()
		{
		}

		[Token(Token = "0x60021B1")]
		[Address(RVA = "0xFC28F0", Offset = "0xFC28F0", VA = "0xFC28F0")]
		[Preserve]
		public static void RecordPlayer_op_Implicit()
		{
		}

		[Token(Token = "0x60021B2")]
		[Address(RVA = "0xFC29C0", Offset = "0xFC29C0", VA = "0xFC29C0")]
		[Preserve]
		public static void RecordPlayer_op_Inequality()
		{
		}

		[Token(Token = "0x60021B3")]
		[Address(RVA = "0xFC2A98", Offset = "0xFC2A98", VA = "0xFC2A98")]
		[Preserve]
		public static void RecordSleeve_op_Equality()
		{
		}

		[Token(Token = "0x60021B4")]
		[Address(RVA = "0xFC2B70", Offset = "0xFC2B70", VA = "0xFC2B70")]
		[Preserve]
		public static void RecordSleeve_op_Implicit()
		{
		}

		[Token(Token = "0x60021B5")]
		[Address(RVA = "0xFC2C40", Offset = "0xFC2C40", VA = "0xFC2C40")]
		[Preserve]
		public static void RecordSleeve_op_Inequality()
		{
		}

		[Token(Token = "0x60021B6")]
		[Address(RVA = "0xFC2D18", Offset = "0xFC2D18", VA = "0xFC2D18")]
		[Preserve]
		public static void RecordSleeveSingleItemDock_op_Equality()
		{
		}

		[Token(Token = "0x60021B7")]
		[Address(RVA = "0xFC2DF0", Offset = "0xFC2DF0", VA = "0xFC2DF0")]
		[Preserve]
		public static void RecordSleeveSingleItemDock_op_Implicit()
		{
		}

		[Token(Token = "0x60021B8")]
		[Address(RVA = "0xFC2EC0", Offset = "0xFC2EC0", VA = "0xFC2EC0")]
		[Preserve]
		public static void RecordSleeveSingleItemDock_op_Inequality()
		{
		}

		[Token(Token = "0x60021B9")]
		[Address(RVA = "0xFC2F98", Offset = "0xFC2F98", VA = "0xFC2F98")]
		[Preserve]
		public static void RemoteObjectGrabber_op_Equality()
		{
		}

		[Token(Token = "0x60021BA")]
		[Address(RVA = "0xFC3070", Offset = "0xFC3070", VA = "0xFC3070")]
		[Preserve]
		public static void RemoteObjectGrabber_op_Implicit()
		{
		}

		[Token(Token = "0x60021BB")]
		[Address(RVA = "0xFC3140", Offset = "0xFC3140", VA = "0xFC3140")]
		[Preserve]
		public static void RemoteObjectGrabber_op_Inequality()
		{
		}

		[Token(Token = "0x60021BC")]
		[Address(RVA = "0xFC3218", Offset = "0xFC3218", VA = "0xFC3218")]
		[Preserve]
		public static void RemoveIfNoDebug_op_Equality()
		{
		}

		[Token(Token = "0x60021BD")]
		[Address(RVA = "0xFC32F0", Offset = "0xFC32F0", VA = "0xFC32F0")]
		[Preserve]
		public static void RemoveIfNoDebug_op_Implicit()
		{
		}

		[Token(Token = "0x60021BE")]
		[Address(RVA = "0xFC33C0", Offset = "0xFC33C0", VA = "0xFC33C0")]
		[Preserve]
		public static void RemoveIfNoDebug_op_Inequality()
		{
		}

		[Token(Token = "0x60021BF")]
		[Address(RVA = "0xFC3498", Offset = "0xFC3498", VA = "0xFC3498")]
		[Preserve]
		public static void RemoveOnConsole_op_Equality()
		{
		}

		[Token(Token = "0x60021C0")]
		[Address(RVA = "0xFC3570", Offset = "0xFC3570", VA = "0xFC3570")]
		[Preserve]
		public static void RemoveOnConsole_op_Implicit()
		{
		}

		[Token(Token = "0x60021C1")]
		[Address(RVA = "0xFC3640", Offset = "0xFC3640", VA = "0xFC3640")]
		[Preserve]
		public static void RemoveOnConsole_op_Inequality()
		{
		}

		[Token(Token = "0x60021C2")]
		[Address(RVA = "0xFC3718", Offset = "0xFC3718", VA = "0xFC3718")]
		[Preserve]
		public static void RemoveOnFlatscreen_op_Equality()
		{
		}

		[Token(Token = "0x60021C3")]
		[Address(RVA = "0xFC37F0", Offset = "0xFC37F0", VA = "0xFC37F0")]
		[Preserve]
		public static void RemoveOnFlatscreen_op_Implicit()
		{
		}

		[Token(Token = "0x60021C4")]
		[Address(RVA = "0xFC38C0", Offset = "0xFC38C0", VA = "0xFC38C0")]
		[Preserve]
		public static void RemoveOnFlatscreen_op_Inequality()
		{
		}

		[Token(Token = "0x60021C5")]
		[Address(RVA = "0xFC3998", Offset = "0xFC3998", VA = "0xFC3998")]
		[Preserve]
		public static void RemoveOnGDK_op_Equality()
		{
		}

		[Token(Token = "0x60021C6")]
		[Address(RVA = "0xFC3A70", Offset = "0xFC3A70", VA = "0xFC3A70")]
		[Preserve]
		public static void RemoveOnGDK_op_Implicit()
		{
		}

		[Token(Token = "0x60021C7")]
		[Address(RVA = "0xFC3B40", Offset = "0xFC3B40", VA = "0xFC3B40")]
		[Preserve]
		public static void RemoveOnGDK_op_Inequality()
		{
		}

		[Token(Token = "0x60021C8")]
		[Address(RVA = "0xFC3C18", Offset = "0xFC3C18", VA = "0xFC3C18")]
		[Preserve]
		public static void RemoveOnGDK_Console_op_Equality()
		{
		}

		[Token(Token = "0x60021C9")]
		[Address(RVA = "0xFC3CF0", Offset = "0xFC3CF0", VA = "0xFC3CF0")]
		[Preserve]
		public static void RemoveOnGDK_Console_op_Implicit()
		{
		}

		[Token(Token = "0x60021CA")]
		[Address(RVA = "0xFC3DC0", Offset = "0xFC3DC0", VA = "0xFC3DC0")]
		[Preserve]
		public static void RemoveOnGDK_Console_op_Inequality()
		{
		}

		[Token(Token = "0x60021CB")]
		[Address(RVA = "0xFC3E98", Offset = "0xFC3E98", VA = "0xFC3E98")]
		[Preserve]
		public static void RemoveOnGDK_Windows_op_Equality()
		{
		}

		[Token(Token = "0x60021CC")]
		[Address(RVA = "0xFC3F70", Offset = "0xFC3F70", VA = "0xFC3F70")]
		[Preserve]
		public static void RemoveOnGDK_Windows_op_Implicit()
		{
		}

		[Token(Token = "0x60021CD")]
		[Address(RVA = "0xFC4040", Offset = "0xFC4040", VA = "0xFC4040")]
		[Preserve]
		public static void RemoveOnGDK_Windows_op_Inequality()
		{
		}

		[Token(Token = "0x60021CE")]
		[Address(RVA = "0xFC4118", Offset = "0xFC4118", VA = "0xFC4118")]
		[Preserve]
		public static void RemoveOnPC_op_Equality()
		{
		}

		[Token(Token = "0x60021CF")]
		[Address(RVA = "0xFC41F0", Offset = "0xFC41F0", VA = "0xFC41F0")]
		[Preserve]
		public static void RemoveOnPC_op_Implicit()
		{
		}

		[Token(Token = "0x60021D0")]
		[Address(RVA = "0xFC42C0", Offset = "0xFC42C0", VA = "0xFC42C0")]
		[Preserve]
		public static void RemoveOnPC_op_Inequality()
		{
		}

		[Token(Token = "0x60021D1")]
		[Address(RVA = "0xFC4398", Offset = "0xFC4398", VA = "0xFC4398")]
		[Preserve]
		public static void RemoveOnPS4_op_Equality()
		{
		}

		[Token(Token = "0x60021D2")]
		[Address(RVA = "0xFC4470", Offset = "0xFC4470", VA = "0xFC4470")]
		[Preserve]
		public static void RemoveOnPS4_op_Implicit()
		{
		}

		[Token(Token = "0x60021D3")]
		[Address(RVA = "0xFC4540", Offset = "0xFC4540", VA = "0xFC4540")]
		[Preserve]
		public static void RemoveOnPS4_op_Inequality()
		{
		}

		[Token(Token = "0x60021D4")]
		[Address(RVA = "0xFC4618", Offset = "0xFC4618", VA = "0xFC4618")]
		[Preserve]
		public static void RemoveOnPS5_op_Equality()
		{
		}

		[Token(Token = "0x60021D5")]
		[Address(RVA = "0xFC46F0", Offset = "0xFC46F0", VA = "0xFC46F0")]
		[Preserve]
		public static void RemoveOnPS5_op_Implicit()
		{
		}

		[Token(Token = "0x60021D6")]
		[Address(RVA = "0xFC47C0", Offset = "0xFC47C0", VA = "0xFC47C0")]
		[Preserve]
		public static void RemoveOnPS5_op_Inequality()
		{
		}

		[Token(Token = "0x60021D7")]
		[Address(RVA = "0xFC4898", Offset = "0xFC4898", VA = "0xFC4898")]
		[Preserve]
		public static void RemoveOnSwitch_op_Equality()
		{
		}

		[Token(Token = "0x60021D8")]
		[Address(RVA = "0xFC4970", Offset = "0xFC4970", VA = "0xFC4970")]
		[Preserve]
		public static void RemoveOnSwitch_op_Implicit()
		{
		}

		[Token(Token = "0x60021D9")]
		[Address(RVA = "0xFC4A40", Offset = "0xFC4A40", VA = "0xFC4A40")]
		[Preserve]
		public static void RemoveOnSwitch_op_Inequality()
		{
		}

		[Token(Token = "0x60021DA")]
		[Address(RVA = "0xFC4B18", Offset = "0xFC4B18", VA = "0xFC4B18")]
		[Preserve]
		public static void RemoveOnVR_op_Equality()
		{
		}

		[Token(Token = "0x60021DB")]
		[Address(RVA = "0xFC4BF0", Offset = "0xFC4BF0", VA = "0xFC4BF0")]
		[Preserve]
		public static void RemoveOnVR_op_Implicit()
		{
		}

		[Token(Token = "0x60021DC")]
		[Address(RVA = "0xFC4CC0", Offset = "0xFC4CC0", VA = "0xFC4CC0")]
		[Preserve]
		public static void RemoveOnVR_op_Inequality()
		{
		}

		[Token(Token = "0x60021DD")]
		[Address(RVA = "0xFC4D98", Offset = "0xFC4D98", VA = "0xFC4D98")]
		[Preserve]
		public static void RestorableObject_op_Equality()
		{
		}

		[Token(Token = "0x60021DE")]
		[Address(RVA = "0xFC4E70", Offset = "0xFC4E70", VA = "0xFC4E70")]
		[Preserve]
		public static void RestorableObject_op_Implicit()
		{
		}

		[Token(Token = "0x60021DF")]
		[Address(RVA = "0xFC4F40", Offset = "0xFC4F40", VA = "0xFC4F40")]
		[Preserve]
		public static void RestorableObject_op_Inequality()
		{
		}

		[Token(Token = "0x60021E0")]
		[Address(RVA = "0xFC5018", Offset = "0xFC5018", VA = "0xFC5018")]
		[Preserve]
		public static void RigidbodyMovementRumbleCondition_op_Equality()
		{
		}

		[Token(Token = "0x60021E1")]
		[Address(RVA = "0xFC50F0", Offset = "0xFC50F0", VA = "0xFC50F0")]
		[Preserve]
		public static void RigidbodyMovementRumbleCondition_op_Implicit()
		{
		}

		[Token(Token = "0x60021E2")]
		[Address(RVA = "0xFC51C0", Offset = "0xFC51C0", VA = "0xFC51C0")]
		[Preserve]
		public static void RigidbodyMovementRumbleCondition_op_Inequality()
		{
		}

		[Token(Token = "0x60021E3")]
		[Address(RVA = "0xFC5298", Offset = "0xFC5298", VA = "0xFC5298")]
		[Preserve]
		public static void RigidbodySleeper_op_Equality()
		{
		}

		[Token(Token = "0x60021E4")]
		[Address(RVA = "0xFC5370", Offset = "0xFC5370", VA = "0xFC5370")]
		[Preserve]
		public static void RigidbodySleeper_op_Implicit()
		{
		}

		[Token(Token = "0x60021E5")]
		[Address(RVA = "0xFC5440", Offset = "0xFC5440", VA = "0xFC5440")]
		[Preserve]
		public static void RigidbodySleeper_op_Inequality()
		{
		}

		[Token(Token = "0x60021E6")]
		[Address(RVA = "0xFC5518", Offset = "0xFC5518", VA = "0xFC5518")]
		[Preserve]
		public static void Room_op_Equality()
		{
		}

		[Token(Token = "0x60021E7")]
		[Address(RVA = "0xFC55F0", Offset = "0xFC55F0", VA = "0xFC55F0")]
		[Preserve]
		public static void Room_op_Implicit()
		{
		}

		[Token(Token = "0x60021E8")]
		[Address(RVA = "0xFC56C0", Offset = "0xFC56C0", VA = "0xFC56C0")]
		[Preserve]
		public static void Room_op_Inequality()
		{
		}

		[Token(Token = "0x60021E9")]
		[Address(RVA = "0xFC5798", Offset = "0xFC5798", VA = "0xFC5798")]
		[Preserve]
		public static void RoomAmbienceZone_op_Equality()
		{
		}

		[Token(Token = "0x60021EA")]
		[Address(RVA = "0xFC5870", Offset = "0xFC5870", VA = "0xFC5870")]
		[Preserve]
		public static void RoomAmbienceZone_op_Implicit()
		{
		}

		[Token(Token = "0x60021EB")]
		[Address(RVA = "0xFC5940", Offset = "0xFC5940", VA = "0xFC5940")]
		[Preserve]
		public static void RoomAmbienceZone_op_Inequality()
		{
		}

		[Token(Token = "0x60021EC")]
		[Address(RVA = "0xFC5A18", Offset = "0xFC5A18", VA = "0xFC5A18")]
		[Preserve]
		public static void RoomPortal_op_Equality()
		{
		}

		[Token(Token = "0x60021ED")]
		[Address(RVA = "0xFC5AF0", Offset = "0xFC5AF0", VA = "0xFC5AF0")]
		[Preserve]
		public static void RoomPortal_op_Implicit()
		{
		}

		[Token(Token = "0x60021EE")]
		[Address(RVA = "0xFC5BC0", Offset = "0xFC5BC0", VA = "0xFC5BC0")]
		[Preserve]
		public static void RoomPortal_op_Inequality()
		{
		}

		[Token(Token = "0x60021EF")]
		[Address(RVA = "0xFC5C98", Offset = "0xFC5C98", VA = "0xFC5C98")]
		[Preserve]
		public static void RoomPortalDoor_op_Equality()
		{
		}

		[Token(Token = "0x60021F0")]
		[Address(RVA = "0xFC5D70", Offset = "0xFC5D70", VA = "0xFC5D70")]
		[Preserve]
		public static void RoomPortalDoor_op_Implicit()
		{
		}

		[Token(Token = "0x60021F1")]
		[Address(RVA = "0xFC5E40", Offset = "0xFC5E40", VA = "0xFC5E40")]
		[Preserve]
		public static void RoomPortalDoor_op_Inequality()
		{
		}

		[Token(Token = "0x60021F2")]
		[Address(RVA = "0xFC5F18", Offset = "0xFC5F18", VA = "0xFC5F18")]
		[Preserve]
		public static void RootScope_op_Equality()
		{
		}

		[Token(Token = "0x60021F3")]
		[Address(RVA = "0xFC5FF0", Offset = "0xFC5FF0", VA = "0xFC5FF0")]
		[Preserve]
		public static void RootScope_op_Implicit()
		{
		}

		[Token(Token = "0x60021F4")]
		[Address(RVA = "0xFC60C0", Offset = "0xFC60C0", VA = "0xFC60C0")]
		[Preserve]
		public static void RootScope_op_Inequality()
		{
		}

		[Token(Token = "0x60021F5")]
		[Address(RVA = "0xFC6198", Offset = "0xFC6198", VA = "0xFC6198")]
		[Preserve]
		public static void Rotator_op_Equality()
		{
		}

		[Token(Token = "0x60021F6")]
		[Address(RVA = "0xFC6270", Offset = "0xFC6270", VA = "0xFC6270")]
		[Preserve]
		public static void Rotator_op_Implicit()
		{
		}

		[Token(Token = "0x60021F7")]
		[Address(RVA = "0xFC6340", Offset = "0xFC6340", VA = "0xFC6340")]
		[Preserve]
		public static void Rotator_op_Inequality()
		{
		}

		[Token(Token = "0x60021F8")]
		[Address(RVA = "0xFC6418", Offset = "0xFC6418", VA = "0xFC6418")]
		[Preserve]
		public static void RumbleHandler_op_Equality()
		{
		}

		[Token(Token = "0x60021F9")]
		[Address(RVA = "0xFC64F0", Offset = "0xFC64F0", VA = "0xFC64F0")]
		[Preserve]
		public static void RumbleHandler_op_Implicit()
		{
		}

		[Token(Token = "0x60021FA")]
		[Address(RVA = "0xFC65C0", Offset = "0xFC65C0", VA = "0xFC65C0")]
		[Preserve]
		public static void RumbleHandler_op_Inequality()
		{
		}

		[Token(Token = "0x60021FB")]
		[Address(RVA = "0xFC6698", Offset = "0xFC6698", VA = "0xFC6698")]
		[Preserve]
		public static void RumbleOneShot_op_Equality()
		{
		}

		[Token(Token = "0x60021FC")]
		[Address(RVA = "0xFC6770", Offset = "0xFC6770", VA = "0xFC6770")]
		[Preserve]
		public static void RumbleOneShot_op_Implicit()
		{
		}

		[Token(Token = "0x60021FD")]
		[Address(RVA = "0xFC6840", Offset = "0xFC6840", VA = "0xFC6840")]
		[Preserve]
		public static void RumbleOneShot_op_Inequality()
		{
		}

		[Token(Token = "0x60021FE")]
		[Address(RVA = "0xFC6918", Offset = "0xFC6918", VA = "0xFC6918")]
		[Preserve]
		public static void Safe_op_Equality()
		{
		}

		[Token(Token = "0x60021FF")]
		[Address(RVA = "0xFC69F0", Offset = "0xFC69F0", VA = "0xFC69F0")]
		[Preserve]
		public static void Safe_op_Implicit()
		{
		}

		[Token(Token = "0x6002200")]
		[Address(RVA = "0xFC6AC0", Offset = "0xFC6AC0", VA = "0xFC6AC0")]
		[Preserve]
		public static void Safe_op_Inequality()
		{
		}

		[Token(Token = "0x6002201")]
		[Address(RVA = "0xFC6B98", Offset = "0xFC6B98", VA = "0xFC6B98")]
		[Preserve]
		public static void SafeAudio_op_Equality()
		{
		}

		[Token(Token = "0x6002202")]
		[Address(RVA = "0xFC6C70", Offset = "0xFC6C70", VA = "0xFC6C70")]
		[Preserve]
		public static void SafeAudio_op_Implicit()
		{
		}

		[Token(Token = "0x6002203")]
		[Address(RVA = "0xFC6D40", Offset = "0xFC6D40", VA = "0xFC6D40")]
		[Preserve]
		public static void SafeAudio_op_Inequality()
		{
		}

		[Token(Token = "0x6002204")]
		[Address(RVA = "0xFC6E18", Offset = "0xFC6E18", VA = "0xFC6E18")]
		[Preserve]
		public static void SafeLights_op_Equality()
		{
		}

		[Token(Token = "0x6002205")]
		[Address(RVA = "0xFC6EF0", Offset = "0xFC6EF0", VA = "0xFC6EF0")]
		[Preserve]
		public static void SafeLights_op_Implicit()
		{
		}

		[Token(Token = "0x6002206")]
		[Address(RVA = "0xFC6FC0", Offset = "0xFC6FC0", VA = "0xFC6FC0")]
		[Preserve]
		public static void SafeLights_op_Inequality()
		{
		}

		[Token(Token = "0x6002207")]
		[Address(RVA = "0xFC7098", Offset = "0xFC7098", VA = "0xFC7098")]
		[Preserve]
		public static void SampleInteraction_op_Equality()
		{
		}

		[Token(Token = "0x6002208")]
		[Address(RVA = "0xFC7170", Offset = "0xFC7170", VA = "0xFC7170")]
		[Preserve]
		public static void SampleInteraction_op_Implicit()
		{
		}

		[Token(Token = "0x6002209")]
		[Address(RVA = "0xFC7240", Offset = "0xFC7240", VA = "0xFC7240")]
		[Preserve]
		public static void SampleInteraction_op_Inequality()
		{
		}

		[Token(Token = "0x600220A")]
		[Address(RVA = "0xFC7318", Offset = "0xFC7318", VA = "0xFC7318")]
		[Preserve]
		public static void SaveDataState_op_Equality()
		{
		}

		[Token(Token = "0x600220B")]
		[Address(RVA = "0xFC73F0", Offset = "0xFC73F0", VA = "0xFC73F0")]
		[Preserve]
		public static void SaveDataState_op_Implicit()
		{
		}

		[Token(Token = "0x600220C")]
		[Address(RVA = "0xFC74C0", Offset = "0xFC74C0", VA = "0xFC74C0")]
		[Preserve]
		public static void SaveDataState_op_Inequality()
		{
		}

		[Token(Token = "0x600220D")]
		[Address(RVA = "0xFC7598", Offset = "0xFC7598", VA = "0xFC7598")]
		[Preserve]
		public static void SaveGameErrorState_op_Equality()
		{
		}

		[Token(Token = "0x600220E")]
		[Address(RVA = "0xFC7670", Offset = "0xFC7670", VA = "0xFC7670")]
		[Preserve]
		public static void SaveGameErrorState_op_Implicit()
		{
		}

		[Token(Token = "0x600220F")]
		[Address(RVA = "0xFC7740", Offset = "0xFC7740", VA = "0xFC7740")]
		[Preserve]
		public static void SaveGameErrorState_op_Inequality()
		{
		}

		[Token(Token = "0x6002210")]
		[Address(RVA = "0xFC7818", Offset = "0xFC7818", VA = "0xFC7818")]
		[Preserve]
		public static void SaveSettingsState_op_Equality()
		{
		}

		[Token(Token = "0x6002211")]
		[Address(RVA = "0xFC78F0", Offset = "0xFC78F0", VA = "0xFC78F0")]
		[Preserve]
		public static void SaveSettingsState_op_Implicit()
		{
		}

		[Token(Token = "0x6002212")]
		[Address(RVA = "0xFC79C0", Offset = "0xFC79C0", VA = "0xFC79C0")]
		[Preserve]
		public static void SaveSettingsState_op_Inequality()
		{
		}

		[Token(Token = "0x6002213")]
		[Address(RVA = "0xFC7A98", Offset = "0xFC7A98", VA = "0xFC7A98")]
		[Preserve]
		public static void ScenarioBatchProvider_op_Equality()
		{
		}

		[Token(Token = "0x6002214")]
		[Address(RVA = "0xFC7B70", Offset = "0xFC7B70", VA = "0xFC7B70")]
		[Preserve]
		public static void ScenarioBatchProvider_op_Implicit()
		{
		}

		[Token(Token = "0x6002215")]
		[Address(RVA = "0xFC7C40", Offset = "0xFC7C40", VA = "0xFC7C40")]
		[Preserve]
		public static void ScenarioBatchProvider_op_Inequality()
		{
		}

		[Token(Token = "0x6002216")]
		[Address(RVA = "0xFC7D18", Offset = "0xFC7D18", VA = "0xFC7D18")]
		[Preserve]
		public static void ScenarioParameterVariantProvider_op_Equality()
		{
		}

		[Token(Token = "0x6002217")]
		[Address(RVA = "0xFC7DF0", Offset = "0xFC7DF0", VA = "0xFC7DF0")]
		[Preserve]
		public static void ScenarioParameterVariantProvider_op_Implicit()
		{
		}

		[Token(Token = "0x6002218")]
		[Address(RVA = "0xFC7EC0", Offset = "0xFC7EC0", VA = "0xFC7EC0")]
		[Preserve]
		public static void ScenarioParameterVariantProvider_op_Inequality()
		{
		}

		[Token(Token = "0x6002219")]
		[Address(RVA = "0xFC7F98", Offset = "0xFC7F98", VA = "0xFC7F98")]
		[Preserve]
		public static void ScopedMeshVisibility_op_Equality()
		{
		}

		[Token(Token = "0x600221A")]
		[Address(RVA = "0xFC8070", Offset = "0xFC8070", VA = "0xFC8070")]
		[Preserve]
		public static void ScopedMeshVisibility_op_Implicit()
		{
		}

		[Token(Token = "0x600221B")]
		[Address(RVA = "0xFC8140", Offset = "0xFC8140", VA = "0xFC8140")]
		[Preserve]
		public static void ScopedMeshVisibility_op_Inequality()
		{
		}

		[Token(Token = "0x600221C")]
		[Address(RVA = "0xFC8218", Offset = "0xFC8218", VA = "0xFC8218")]
		[Preserve]
		public static void ScreenDiegeticTextDisplay_op_Equality()
		{
		}

		[Token(Token = "0x600221D")]
		[Address(RVA = "0xFC82F0", Offset = "0xFC82F0", VA = "0xFC82F0")]
		[Preserve]
		public static void ScreenDiegeticTextDisplay_op_Implicit()
		{
		}

		[Token(Token = "0x600221E")]
		[Address(RVA = "0xFC83C0", Offset = "0xFC83C0", VA = "0xFC83C0")]
		[Preserve]
		public static void ScreenDiegeticTextDisplay_op_Inequality()
		{
		}

		[Token(Token = "0x600221F")]
		[Address(RVA = "0xFC8498", Offset = "0xFC8498", VA = "0xFC8498")]
		[Preserve]
		public static void SelfClosingDoor_op_Equality()
		{
		}

		[Token(Token = "0x6002220")]
		[Address(RVA = "0xFC8570", Offset = "0xFC8570", VA = "0xFC8570")]
		[Preserve]
		public static void SelfClosingDoor_op_Implicit()
		{
		}

		[Token(Token = "0x6002221")]
		[Address(RVA = "0xFC8640", Offset = "0xFC8640", VA = "0xFC8640")]
		[Preserve]
		public static void SelfClosingDoor_op_Inequality()
		{
		}

		[Token(Token = "0x6002222")]
		[Address(RVA = "0xFC8718", Offset = "0xFC8718", VA = "0xFC8718")]
		[Preserve]
		public static void SerialisableFlowMachine_op_Equality()
		{
		}

		[Token(Token = "0x6002223")]
		[Address(RVA = "0xFC87F0", Offset = "0xFC87F0", VA = "0xFC87F0")]
		[Preserve]
		public static void SerialisableFlowMachine_op_Implicit()
		{
		}

		[Token(Token = "0x6002224")]
		[Address(RVA = "0xFC88C0", Offset = "0xFC88C0", VA = "0xFC88C0")]
		[Preserve]
		public static void SerialisableFlowMachine_op_Inequality()
		{
		}

		[Token(Token = "0x6002225")]
		[Address(RVA = "0xFC8998", Offset = "0xFC8998", VA = "0xFC8998")]
		[Preserve]
		public static void Serialisation_SceneObjectReferences_op_Equality()
		{
		}

		[Token(Token = "0x6002226")]
		[Address(RVA = "0xFC8A70", Offset = "0xFC8A70", VA = "0xFC8A70")]
		[Preserve]
		public static void Serialisation_SceneObjectReferences_op_Implicit()
		{
		}

		[Token(Token = "0x6002227")]
		[Address(RVA = "0xFC8B40", Offset = "0xFC8B40", VA = "0xFC8B40")]
		[Preserve]
		public static void Serialisation_SceneObjectReferences_op_Inequality()
		{
		}

		[Token(Token = "0x6002228")]
		[Address(RVA = "0xFC8C18", Offset = "0xFC8C18", VA = "0xFC8C18")]
		[Preserve]
		public static void Serialisation_SerialisableAnimatedTransforms_op_Equality()
		{
		}

		[Token(Token = "0x6002229")]
		[Address(RVA = "0xFC8CF0", Offset = "0xFC8CF0", VA = "0xFC8CF0")]
		[Preserve]
		public static void Serialisation_SerialisableAnimatedTransforms_op_Implicit()
		{
		}

		[Token(Token = "0x600222A")]
		[Address(RVA = "0xFC8DC0", Offset = "0xFC8DC0", VA = "0xFC8DC0")]
		[Preserve]
		public static void Serialisation_SerialisableAnimatedTransforms_op_Inequality()
		{
		}

		[Token(Token = "0x600222B")]
		[Address(RVA = "0xFC8E98", Offset = "0xFC8E98", VA = "0xFC8E98")]
		[Preserve]
		public static void Serialisation_SerialisableAnimation_op_Equality()
		{
		}

		[Token(Token = "0x600222C")]
		[Address(RVA = "0xFC8F70", Offset = "0xFC8F70", VA = "0xFC8F70")]
		[Preserve]
		public static void Serialisation_SerialisableAnimation_op_Implicit()
		{
		}

		[Token(Token = "0x600222D")]
		[Address(RVA = "0xFC9040", Offset = "0xFC9040", VA = "0xFC9040")]
		[Preserve]
		public static void Serialisation_SerialisableAnimation_op_Inequality()
		{
		}

		[Token(Token = "0x600222E")]
		[Address(RVA = "0xFC9118", Offset = "0xFC9118", VA = "0xFC9118")]
		[Preserve]
		public static void Serialisation_SerialisableAnimator_op_Equality()
		{
		}

		[Token(Token = "0x600222F")]
		[Address(RVA = "0xFC91F0", Offset = "0xFC91F0", VA = "0xFC91F0")]
		[Preserve]
		public static void Serialisation_SerialisableAnimator_op_Implicit()
		{
		}

		[Token(Token = "0x6002230")]
		[Address(RVA = "0xFC92C0", Offset = "0xFC92C0", VA = "0xFC92C0")]
		[Preserve]
		public static void Serialisation_SerialisableAnimator_op_Inequality()
		{
		}

		[Token(Token = "0x6002231")]
		[Address(RVA = "0xFC9398", Offset = "0xFC9398", VA = "0xFC9398")]
		[Preserve]
		public static void Serialisation_SerialisableTimeline_op_Equality()
		{
		}

		[Token(Token = "0x6002232")]
		[Address(RVA = "0xFC9470", Offset = "0xFC9470", VA = "0xFC9470")]
		[Preserve]
		public static void Serialisation_SerialisableTimeline_op_Implicit()
		{
		}

		[Token(Token = "0x6002233")]
		[Address(RVA = "0xFC9540", Offset = "0xFC9540", VA = "0xFC9540")]
		[Preserve]
		public static void Serialisation_SerialisableTimeline_op_Inequality()
		{
		}

		[Token(Token = "0x6002234")]
		[Address(RVA = "0xFC9618", Offset = "0xFC9618", VA = "0xFC9618")]
		[Preserve]
		public static void Services_AnimatedSequenceHelper_op_Equality()
		{
		}

		[Token(Token = "0x6002235")]
		[Address(RVA = "0xFC96F0", Offset = "0xFC96F0", VA = "0xFC96F0")]
		[Preserve]
		public static void Services_AnimatedSequenceHelper_op_Implicit()
		{
		}

		[Token(Token = "0x6002236")]
		[Address(RVA = "0xFC97C0", Offset = "0xFC97C0", VA = "0xFC97C0")]
		[Preserve]
		public static void Services_AnimatedSequenceHelper_op_Inequality()
		{
		}

		[Token(Token = "0x6002237")]
		[Address(RVA = "0xFC9898", Offset = "0xFC9898", VA = "0xFC9898")]
		[Preserve]
		public static void Services_AppTime_TimeService_op_Equality()
		{
		}

		[Token(Token = "0x6002238")]
		[Address(RVA = "0xFC9970", Offset = "0xFC9970", VA = "0xFC9970")]
		[Preserve]
		public static void Services_AppTime_TimeService_op_Implicit()
		{
		}

		[Token(Token = "0x6002239")]
		[Address(RVA = "0xFC9A40", Offset = "0xFC9A40", VA = "0xFC9A40")]
		[Preserve]
		public static void Services_AppTime_TimeService_op_Inequality()
		{
		}

		[Token(Token = "0x600223A")]
		[Address(RVA = "0xFC9B18", Offset = "0xFC9B18", VA = "0xFC9B18")]
		[Preserve]
		public static void Services_Audio_AmbienceZone_op_Equality()
		{
		}

		[Token(Token = "0x600223B")]
		[Address(RVA = "0xFC9BF0", Offset = "0xFC9BF0", VA = "0xFC9BF0")]
		[Preserve]
		public static void Services_Audio_AmbienceZone_op_Implicit()
		{
		}

		[Token(Token = "0x600223C")]
		[Address(RVA = "0xFC9CC0", Offset = "0xFC9CC0", VA = "0xFC9CC0")]
		[Preserve]
		public static void Services_Audio_AmbienceZone_op_Inequality()
		{
		}

		[Token(Token = "0x600223D")]
		[Address(RVA = "0xFC9D98", Offset = "0xFC9D98", VA = "0xFC9D98")]
		[Preserve]
		public static void Services_Audio_AudioEmitter_op_Equality()
		{
		}

		[Token(Token = "0x600223E")]
		[Address(RVA = "0xFC9E70", Offset = "0xFC9E70", VA = "0xFC9E70")]
		[Preserve]
		public static void Services_Audio_AudioEmitter_op_Implicit()
		{
		}

		[Token(Token = "0x600223F")]
		[Address(RVA = "0xFC9F40", Offset = "0xFC9F40", VA = "0xFC9F40")]
		[Preserve]
		public static void Services_Audio_AudioEmitter_op_Inequality()
		{
		}

		[Token(Token = "0x6002240")]
		[Address(RVA = "0xFCA018", Offset = "0xFCA018", VA = "0xFCA018")]
		[Preserve]
		public static void Services_Audio_AudioEmitterService_op_Equality()
		{
		}

		[Token(Token = "0x6002241")]
		[Address(RVA = "0xFCA0F0", Offset = "0xFCA0F0", VA = "0xFCA0F0")]
		[Preserve]
		public static void Services_Audio_AudioEmitterService_op_Implicit()
		{
		}

		[Token(Token = "0x6002242")]
		[Address(RVA = "0xFCA1C0", Offset = "0xFCA1C0", VA = "0xFCA1C0")]
		[Preserve]
		public static void Services_Audio_AudioEmitterService_op_Inequality()
		{
		}

		[Token(Token = "0x6002243")]
		[Address(RVA = "0xFCA298", Offset = "0xFCA298", VA = "0xFCA298")]
		[Preserve]
		public static void Services_Audio_AudioOneShot_ctor()
		{
		}

		[Token(Token = "0x6002244")]
		[Address(RVA = "0xFCA2E8", Offset = "0xFCA2E8", VA = "0xFCA2E8")]
		[Preserve]
		public static void Services_Audio_AudioOneShot_op_Equality()
		{
		}

		[Token(Token = "0x6002245")]
		[Address(RVA = "0xFCA3C0", Offset = "0xFCA3C0", VA = "0xFCA3C0")]
		[Preserve]
		public static void Services_Audio_AudioOneShot_op_Implicit()
		{
		}

		[Token(Token = "0x6002246")]
		[Address(RVA = "0xFCA490", Offset = "0xFCA490", VA = "0xFCA490")]
		[Preserve]
		public static void Services_Audio_AudioOneShot_op_Inequality()
		{
		}

		[Token(Token = "0x6002247")]
		[Address(RVA = "0xFCA568", Offset = "0xFCA568", VA = "0xFCA568")]
		[Preserve]
		public static void Services_Audio_AudioOneShot_Play()
		{
		}

		[Token(Token = "0x6002248")]
		[Address(RVA = "0xFCA59C", Offset = "0xFCA59C", VA = "0xFCA59C")]
		[Preserve]
		public static void Services_Audio_OccludableAudioEmitter_op_Equality()
		{
		}

		[Token(Token = "0x6002249")]
		[Address(RVA = "0xFCA674", Offset = "0xFCA674", VA = "0xFCA674")]
		[Preserve]
		public static void Services_Audio_OccludableAudioEmitter_op_Implicit()
		{
		}

		[Token(Token = "0x600224A")]
		[Address(RVA = "0xFCA744", Offset = "0xFCA744", VA = "0xFCA744")]
		[Preserve]
		public static void Services_Audio_OccludableAudioEmitter_op_Inequality()
		{
		}

		[Token(Token = "0x600224B")]
		[Address(RVA = "0xFCA81C", Offset = "0xFCA81C", VA = "0xFCA81C")]
		[Preserve]
		public static void Services_AudioManager_op_Equality()
		{
		}

		[Token(Token = "0x600224C")]
		[Address(RVA = "0xFCA8F4", Offset = "0xFCA8F4", VA = "0xFCA8F4")]
		[Preserve]
		public static void Services_AudioManager_op_Implicit()
		{
		}

		[Token(Token = "0x600224D")]
		[Address(RVA = "0xFCA9C4", Offset = "0xFCA9C4", VA = "0xFCA9C4")]
		[Preserve]
		public static void Services_AudioManager_op_Inequality()
		{
		}

		[Token(Token = "0x600224E")]
		[Address(RVA = "0xFCAA9C", Offset = "0xFCAA9C", VA = "0xFCAA9C")]
		[Preserve]
		public static void Services_BakedSceneObjectData_op_Equality()
		{
		}

		[Token(Token = "0x600224F")]
		[Address(RVA = "0xFCAB74", Offset = "0xFCAB74", VA = "0xFCAB74")]
		[Preserve]
		public static void Services_BakedSceneObjectData_op_Implicit()
		{
		}

		[Token(Token = "0x6002250")]
		[Address(RVA = "0xFCAC44", Offset = "0xFCAC44", VA = "0xFCAC44")]
		[Preserve]
		public static void Services_BakedSceneObjectData_op_Inequality()
		{
		}

		[Token(Token = "0x6002251")]
		[Address(RVA = "0xFCAD1C", Offset = "0xFCAD1C", VA = "0xFCAD1C")]
		[Preserve]
		public static void Services_BootServices_op_Equality()
		{
		}

		[Token(Token = "0x6002252")]
		[Address(RVA = "0xFCADF4", Offset = "0xFCADF4", VA = "0xFCADF4")]
		[Preserve]
		public static void Services_BootServices_op_Implicit()
		{
		}

		[Token(Token = "0x6002253")]
		[Address(RVA = "0xFCAEC4", Offset = "0xFCAEC4", VA = "0xFCAEC4")]
		[Preserve]
		public static void Services_BootServices_op_Inequality()
		{
		}

		[Token(Token = "0x6002254")]
		[Address(RVA = "0xFCAF9C", Offset = "0xFCAF9C", VA = "0xFCAF9C")]
		[Preserve]
		public static void Services_DialogueManager_op_Equality()
		{
		}

		[Token(Token = "0x6002255")]
		[Address(RVA = "0xFCB074", Offset = "0xFCB074", VA = "0xFCB074")]
		[Preserve]
		public static void Services_DialogueManager_op_Implicit()
		{
		}

		[Token(Token = "0x6002256")]
		[Address(RVA = "0xFCB144", Offset = "0xFCB144", VA = "0xFCB144")]
		[Preserve]
		public static void Services_DialogueManager_op_Inequality()
		{
		}

		[Token(Token = "0x6002257")]
		[Address(RVA = "0xFCB21C", Offset = "0xFCB21C", VA = "0xFCB21C")]
		[Preserve]
		public static void Services_FadingSequenceHelper_op_Equality()
		{
		}

		[Token(Token = "0x6002258")]
		[Address(RVA = "0xFCB2F4", Offset = "0xFCB2F4", VA = "0xFCB2F4")]
		[Preserve]
		public static void Services_FadingSequenceHelper_op_Implicit()
		{
		}

		[Token(Token = "0x6002259")]
		[Address(RVA = "0xFCB3C4", Offset = "0xFCB3C4", VA = "0xFCB3C4")]
		[Preserve]
		public static void Services_FadingSequenceHelper_op_Inequality()
		{
		}

		[Token(Token = "0x600225A")]
		[Address(RVA = "0xFCB49C", Offset = "0xFCB49C", VA = "0xFCB49C")]
		[Preserve]
		public static void Services_GameInputService_op_Equality()
		{
		}

		[Token(Token = "0x600225B")]
		[Address(RVA = "0xFCB574", Offset = "0xFCB574", VA = "0xFCB574")]
		[Preserve]
		public static void Services_GameInputService_op_Implicit()
		{
		}

		[Token(Token = "0x600225C")]
		[Address(RVA = "0xFCB644", Offset = "0xFCB644", VA = "0xFCB644")]
		[Preserve]
		public static void Services_GameInputService_op_Inequality()
		{
		}

		[Token(Token = "0x600225D")]
		[Address(RVA = "0xFCB71C", Offset = "0xFCB71C", VA = "0xFCB71C")]
		[Preserve]
		public static void Services_GraphicsSettings_GraphicsSettingsService_op_Equality()
		{
		}

		[Token(Token = "0x600225E")]
		[Address(RVA = "0xFCB7F4", Offset = "0xFCB7F4", VA = "0xFCB7F4")]
		[Preserve]
		public static void Services_GraphicsSettings_GraphicsSettingsService_op_Implicit()
		{
		}

		[Token(Token = "0x600225F")]
		[Address(RVA = "0xFCB8C4", Offset = "0xFCB8C4", VA = "0xFCB8C4")]
		[Preserve]
		public static void Services_GraphicsSettings_GraphicsSettingsService_op_Inequality()
		{
		}

		[Token(Token = "0x6002260")]
		[Address(RVA = "0xFCB99C", Offset = "0xFCB99C", VA = "0xFCB99C")]
		[Preserve]
		public static void Services_Localisation_LocalisationService_op_Equality()
		{
		}

		[Token(Token = "0x6002261")]
		[Address(RVA = "0xFCBA74", Offset = "0xFCBA74", VA = "0xFCBA74")]
		[Preserve]
		public static void Services_Localisation_LocalisationService_op_Implicit()
		{
		}

		[Token(Token = "0x6002262")]
		[Address(RVA = "0xFCBB44", Offset = "0xFCBB44", VA = "0xFCBB44")]
		[Preserve]
		public static void Services_Localisation_LocalisationService_op_Inequality()
		{
		}

		[Token(Token = "0x6002263")]
		[Address(RVA = "0xFCBC1C", Offset = "0xFCBC1C", VA = "0xFCBC1C")]
		[Preserve]
		public static void Services_Save_SaveGameService_op_Equality()
		{
		}

		[Token(Token = "0x6002264")]
		[Address(RVA = "0xFCBCF4", Offset = "0xFCBCF4", VA = "0xFCBCF4")]
		[Preserve]
		public static void Services_Save_SaveGameService_op_Implicit()
		{
		}

		[Token(Token = "0x6002265")]
		[Address(RVA = "0xFCBDC4", Offset = "0xFCBDC4", VA = "0xFCBDC4")]
		[Preserve]
		public static void Services_Save_SaveGameService_op_Inequality()
		{
		}

		[Token(Token = "0x6002266")]
		[Address(RVA = "0xFCBE9C", Offset = "0xFCBE9C", VA = "0xFCBE9C")]
		[Preserve]
		public static void Services_SceneDataPopulator_op_Equality()
		{
		}

		[Token(Token = "0x6002267")]
		[Address(RVA = "0xFCBF74", Offset = "0xFCBF74", VA = "0xFCBF74")]
		[Preserve]
		public static void Services_SceneDataPopulator_op_Implicit()
		{
		}

		[Token(Token = "0x6002268")]
		[Address(RVA = "0xFCC044", Offset = "0xFCC044", VA = "0xFCC044")]
		[Preserve]
		public static void Services_SceneDataPopulator_op_Inequality()
		{
		}

		[Token(Token = "0x6002269")]
		[Address(RVA = "0xFCC11C", Offset = "0xFCC11C", VA = "0xFCC11C")]
		[Preserve]
		public static void Services_SceneHelper_op_Equality()
		{
		}

		[Token(Token = "0x600226A")]
		[Address(RVA = "0xFCC1F4", Offset = "0xFCC1F4", VA = "0xFCC1F4")]
		[Preserve]
		public static void Services_SceneHelper_op_Implicit()
		{
		}

		[Token(Token = "0x600226B")]
		[Address(RVA = "0xFCC2C4", Offset = "0xFCC2C4", VA = "0xFCC2C4")]
		[Preserve]
		public static void Services_SceneHelper_op_Inequality()
		{
		}

		[Token(Token = "0x600226C")]
		[Address(RVA = "0xFCC39C", Offset = "0xFCC39C", VA = "0xFCC39C")]
		[Preserve]
		public static void Services_ScriptableManualRumbleEvent_op_Equality()
		{
		}

		[Token(Token = "0x600226D")]
		[Address(RVA = "0xFCC474", Offset = "0xFCC474", VA = "0xFCC474")]
		[Preserve]
		public static void Services_ScriptableManualRumbleEvent_op_Implicit()
		{
		}

		[Token(Token = "0x600226E")]
		[Address(RVA = "0xFCC544", Offset = "0xFCC544", VA = "0xFCC544")]
		[Preserve]
		public static void Services_ScriptableManualRumbleEvent_op_Inequality()
		{
		}

		[Token(Token = "0x600226F")]
		[Address(RVA = "0xFCC61C", Offset = "0xFCC61C", VA = "0xFCC61C")]
		[Preserve]
		public static void Services_ScriptableTimedRumbleEvent_op_Equality()
		{
		}

		[Token(Token = "0x6002270")]
		[Address(RVA = "0xFCC6F4", Offset = "0xFCC6F4", VA = "0xFCC6F4")]
		[Preserve]
		public static void Services_ScriptableTimedRumbleEvent_op_Implicit()
		{
		}

		[Token(Token = "0x6002271")]
		[Address(RVA = "0xFCC7C4", Offset = "0xFCC7C4", VA = "0xFCC7C4")]
		[Preserve]
		public static void Services_ScriptableTimedRumbleEvent_op_Inequality()
		{
		}

		[Token(Token = "0x6002272")]
		[Address(RVA = "0xFCC89C", Offset = "0xFCC89C", VA = "0xFCC89C")]
		[Preserve]
		public static void Services_Settings_SettingsService_op_Equality()
		{
		}

		[Token(Token = "0x6002273")]
		[Address(RVA = "0xFCC974", Offset = "0xFCC974", VA = "0xFCC974")]
		[Preserve]
		public static void Services_Settings_SettingsService_op_Implicit()
		{
		}

		[Token(Token = "0x6002274")]
		[Address(RVA = "0xFCCA44", Offset = "0xFCCA44", VA = "0xFCCA44")]
		[Preserve]
		public static void Services_Settings_SettingsService_op_Inequality()
		{
		}

		[Token(Token = "0x6002275")]
		[Address(RVA = "0xFCCB1C", Offset = "0xFCCB1C", VA = "0xFCCB1C")]
		[Preserve]
		public static void Services_StateController_op_Equality()
		{
		}

		[Token(Token = "0x6002276")]
		[Address(RVA = "0xFCCBF4", Offset = "0xFCCBF4", VA = "0xFCCBF4")]
		[Preserve]
		public static void Services_StateController_op_Implicit()
		{
		}

		[Token(Token = "0x6002277")]
		[Address(RVA = "0xFCCCC4", Offset = "0xFCCCC4", VA = "0xFCCCC4")]
		[Preserve]
		public static void Services_StateController_op_Inequality()
		{
		}

		[Token(Token = "0x6002278")]
		[Address(RVA = "0xFCCD9C", Offset = "0xFCCD9C", VA = "0xFCCD9C")]
		[Preserve]
		public static void Services_UnityRumbleService_op_Equality()
		{
		}

		[Token(Token = "0x6002279")]
		[Address(RVA = "0xFCCE74", Offset = "0xFCCE74", VA = "0xFCCE74")]
		[Preserve]
		public static void Services_UnityRumbleService_op_Implicit()
		{
		}

		[Token(Token = "0x600227A")]
		[Address(RVA = "0xFCCF44", Offset = "0xFCCF44", VA = "0xFCCF44")]
		[Preserve]
		public static void Services_UnityRumbleService_op_Inequality()
		{
		}

		[Token(Token = "0x600227B")]
		[Address(RVA = "0xFCD01C", Offset = "0xFCD01C", VA = "0xFCD01C")]
		[Preserve]
		public static void Services_WorldServices_op_Equality()
		{
		}

		[Token(Token = "0x600227C")]
		[Address(RVA = "0xFCD0F4", Offset = "0xFCD0F4", VA = "0xFCD0F4")]
		[Preserve]
		public static void Services_WorldServices_op_Implicit()
		{
		}

		[Token(Token = "0x600227D")]
		[Address(RVA = "0xFCD1C4", Offset = "0xFCD1C4", VA = "0xFCD1C4")]
		[Preserve]
		public static void Services_WorldServices_op_Inequality()
		{
		}

		[Token(Token = "0x600227E")]
		[Address(RVA = "0xFCD29C", Offset = "0xFCD29C", VA = "0xFCD29C")]
		[Preserve]
		public static void Services_WorldUIManager_op_Equality()
		{
		}

		[Token(Token = "0x600227F")]
		[Address(RVA = "0xFCD374", Offset = "0xFCD374", VA = "0xFCD374")]
		[Preserve]
		public static void Services_WorldUIManager_op_Implicit()
		{
		}

		[Token(Token = "0x6002280")]
		[Address(RVA = "0xFCD444", Offset = "0xFCD444", VA = "0xFCD444")]
		[Preserve]
		public static void Services_WorldUIManager_op_Inequality()
		{
		}

		[Token(Token = "0x6002281")]
		[Address(RVA = "0xFCD51C", Offset = "0xFCD51C", VA = "0xFCD51C")]
		[Preserve]
		public static void SettingsData_op_Equality()
		{
		}

		[Token(Token = "0x6002282")]
		[Address(RVA = "0xFCD5F4", Offset = "0xFCD5F4", VA = "0xFCD5F4")]
		[Preserve]
		public static void SettingsData_op_Implicit()
		{
		}

		[Token(Token = "0x6002283")]
		[Address(RVA = "0xFCD6C4", Offset = "0xFCD6C4", VA = "0xFCD6C4")]
		[Preserve]
		public static void SettingsData_op_Inequality()
		{
		}

		[Token(Token = "0x6002284")]
		[Address(RVA = "0xFCD79C", Offset = "0xFCD79C", VA = "0xFCD79C")]
		[Preserve]
		public static void SetupGameplaySceneState_op_Equality()
		{
		}

		[Token(Token = "0x6002285")]
		[Address(RVA = "0xFCD874", Offset = "0xFCD874", VA = "0xFCD874")]
		[Preserve]
		public static void SetupGameplaySceneState_op_Implicit()
		{
		}

		[Token(Token = "0x6002286")]
		[Address(RVA = "0xFCD944", Offset = "0xFCD944", VA = "0xFCD944")]
		[Preserve]
		public static void SetupGameplaySceneState_op_Inequality()
		{
		}

		[Token(Token = "0x6002287")]
		[Address(RVA = "0xFCDA1C", Offset = "0xFCDA1C", VA = "0xFCDA1C")]
		[Preserve]
		public static void SetupMenuSceneState_op_Equality()
		{
		}

		[Token(Token = "0x6002288")]
		[Address(RVA = "0xFCDAF4", Offset = "0xFCDAF4", VA = "0xFCDAF4")]
		[Preserve]
		public static void SetupMenuSceneState_op_Implicit()
		{
		}

		[Token(Token = "0x6002289")]
		[Address(RVA = "0xFCDBC4", Offset = "0xFCDBC4", VA = "0xFCDBC4")]
		[Preserve]
		public static void SetupMenuSceneState_op_Inequality()
		{
		}

		[Token(Token = "0x600228A")]
		[Address(RVA = "0xFCDC9C", Offset = "0xFCDC9C", VA = "0xFCDC9C")]
		[Preserve]
		public static void SetupSaveSystemState_op_Equality()
		{
		}

		[Token(Token = "0x600228B")]
		[Address(RVA = "0xFCDD74", Offset = "0xFCDD74", VA = "0xFCDD74")]
		[Preserve]
		public static void SetupSaveSystemState_op_Implicit()
		{
		}

		[Token(Token = "0x600228C")]
		[Address(RVA = "0xFCDE44", Offset = "0xFCDE44", VA = "0xFCDE44")]
		[Preserve]
		public static void SetupSaveSystemState_op_Inequality()
		{
		}

		[Token(Token = "0x600228D")]
		[Address(RVA = "0xFCDF1C", Offset = "0xFCDF1C", VA = "0xFCDF1C")]
		[Preserve]
		public static void SingleItemDock_op_Equality()
		{
		}

		[Token(Token = "0x600228E")]
		[Address(RVA = "0xFCDFF4", Offset = "0xFCDFF4", VA = "0xFCDFF4")]
		[Preserve]
		public static void SingleItemDock_op_Implicit()
		{
		}

		[Token(Token = "0x600228F")]
		[Address(RVA = "0xFCE0C4", Offset = "0xFCE0C4", VA = "0xFCE0C4")]
		[Preserve]
		public static void SingleItemDock_op_Inequality()
		{
		}

		[Token(Token = "0x6002290")]
		[Address(RVA = "0xFCE19C", Offset = "0xFCE19C", VA = "0xFCE19C")]
		[Preserve]
		public static void SitDownInteraction_op_Equality()
		{
		}

		[Token(Token = "0x6002291")]
		[Address(RVA = "0xFCE274", Offset = "0xFCE274", VA = "0xFCE274")]
		[Preserve]
		public static void SitDownInteraction_op_Implicit()
		{
		}

		[Token(Token = "0x6002292")]
		[Address(RVA = "0xFCE344", Offset = "0xFCE344", VA = "0xFCE344")]
		[Preserve]
		public static void SitDownInteraction_op_Inequality()
		{
		}

		[Token(Token = "0x6002293")]
		[Address(RVA = "0xFCE41C", Offset = "0xFCE41C", VA = "0xFCE41C")]
		[Preserve]
		public static void Slideable_op_Equality()
		{
		}

		[Token(Token = "0x6002294")]
		[Address(RVA = "0xFCE4F4", Offset = "0xFCE4F4", VA = "0xFCE4F4")]
		[Preserve]
		public static void Slideable_op_Implicit()
		{
		}

		[Token(Token = "0x6002295")]
		[Address(RVA = "0xFCE5C4", Offset = "0xFCE5C4", VA = "0xFCE5C4")]
		[Preserve]
		public static void Slideable_op_Inequality()
		{
		}

		[Token(Token = "0x6002296")]
		[Address(RVA = "0xFCE69C", Offset = "0xFCE69C", VA = "0xFCE69C")]
		[Preserve]
		public static void SliderAudioLevels_op_Equality()
		{
		}

		[Token(Token = "0x6002297")]
		[Address(RVA = "0xFCE774", Offset = "0xFCE774", VA = "0xFCE774")]
		[Preserve]
		public static void SliderAudioLevels_op_Implicit()
		{
		}

		[Token(Token = "0x6002298")]
		[Address(RVA = "0xFCE844", Offset = "0xFCE844", VA = "0xFCE844")]
		[Preserve]
		public static void SliderAudioLevels_op_Inequality()
		{
		}

		[Token(Token = "0x6002299")]
		[Address(RVA = "0xFCE91C", Offset = "0xFCE91C", VA = "0xFCE91C")]
		[Preserve]
		public static void SliderOld_op_Equality()
		{
		}

		[Token(Token = "0x600229A")]
		[Address(RVA = "0xFCE9F4", Offset = "0xFCE9F4", VA = "0xFCE9F4")]
		[Preserve]
		public static void SliderOld_op_Implicit()
		{
		}

		[Token(Token = "0x600229B")]
		[Address(RVA = "0xFCEAC4", Offset = "0xFCEAC4", VA = "0xFCEAC4")]
		[Preserve]
		public static void SliderOld_op_Inequality()
		{
		}

		[Token(Token = "0x600229C")]
		[Address(RVA = "0xFCEB9C", Offset = "0xFCEB9C", VA = "0xFCEB9C")]
		[Preserve]
		public static void SliderPercent_op_Equality()
		{
		}

		[Token(Token = "0x600229D")]
		[Address(RVA = "0xFCEC74", Offset = "0xFCEC74", VA = "0xFCEC74")]
		[Preserve]
		public static void SliderPercent_op_Implicit()
		{
		}

		[Token(Token = "0x600229E")]
		[Address(RVA = "0xFCED44", Offset = "0xFCED44", VA = "0xFCED44")]
		[Preserve]
		public static void SliderPercent_op_Inequality()
		{
		}

		[Token(Token = "0x600229F")]
		[Address(RVA = "0xFCEE1C", Offset = "0xFCEE1C", VA = "0xFCEE1C")]
		[Preserve]
		public static void SoftCollisionBlocker_op_Equality()
		{
		}

		[Token(Token = "0x60022A0")]
		[Address(RVA = "0xFCEEF4", Offset = "0xFCEEF4", VA = "0xFCEEF4")]
		[Preserve]
		public static void SoftCollisionBlocker_op_Implicit()
		{
		}

		[Token(Token = "0x60022A1")]
		[Address(RVA = "0xFCEFC4", Offset = "0xFCEFC4", VA = "0xFCEFC4")]
		[Preserve]
		public static void SoftCollisionBlocker_op_Inequality()
		{
		}

		[Token(Token = "0x60022A2")]
		[Address(RVA = "0xFCF09C", Offset = "0xFCF09C", VA = "0xFCF09C")]
		[Preserve]
		public static void SoftCollisionMovementAdjuster_op_Equality()
		{
		}

		[Token(Token = "0x60022A3")]
		[Address(RVA = "0xFCF174", Offset = "0xFCF174", VA = "0xFCF174")]
		[Preserve]
		public static void SoftCollisionMovementAdjuster_op_Implicit()
		{
		}

		[Token(Token = "0x60022A4")]
		[Address(RVA = "0xFCF244", Offset = "0xFCF244", VA = "0xFCF244")]
		[Preserve]
		public static void SoftCollisionMovementAdjuster_op_Inequality()
		{
		}

		[Token(Token = "0x60022A5")]
		[Address(RVA = "0xFCF31C", Offset = "0xFCF31C", VA = "0xFCF31C")]
		[Preserve]
		public static void SoftCollisionZone_op_Equality()
		{
		}

		[Token(Token = "0x60022A6")]
		[Address(RVA = "0xFCF3F4", Offset = "0xFCF3F4", VA = "0xFCF3F4")]
		[Preserve]
		public static void SoftCollisionZone_op_Implicit()
		{
		}

		[Token(Token = "0x60022A7")]
		[Address(RVA = "0xFCF4C4", Offset = "0xFCF4C4", VA = "0xFCF4C4")]
		[Preserve]
		public static void SoftCollisionZone_op_Inequality()
		{
		}

		[Token(Token = "0x60022A8")]
		[Address(RVA = "0xFCF59C", Offset = "0xFCF59C", VA = "0xFCF59C")]
		[Preserve]
		public static void SoloDispensedRestorable_op_Equality()
		{
		}

		[Token(Token = "0x60022A9")]
		[Address(RVA = "0xFCF674", Offset = "0xFCF674", VA = "0xFCF674")]
		[Preserve]
		public static void SoloDispensedRestorable_op_Implicit()
		{
		}

		[Token(Token = "0x60022AA")]
		[Address(RVA = "0xFCF744", Offset = "0xFCF744", VA = "0xFCF744")]
		[Preserve]
		public static void SoloDispensedRestorable_op_Inequality()
		{
		}

		[Token(Token = "0x60022AB")]
		[Address(RVA = "0xFCF81C", Offset = "0xFCF81C", VA = "0xFCF81C")]
		[Preserve]
		public static void SoundBoard_op_Equality()
		{
		}

		[Token(Token = "0x60022AC")]
		[Address(RVA = "0xFCF8F4", Offset = "0xFCF8F4", VA = "0xFCF8F4")]
		[Preserve]
		public static void SoundBoard_op_Implicit()
		{
		}

		[Token(Token = "0x60022AD")]
		[Address(RVA = "0xFCF9C4", Offset = "0xFCF9C4", VA = "0xFCF9C4")]
		[Preserve]
		public static void SoundBoard_op_Inequality()
		{
		}

		[Token(Token = "0x60022AE")]
		[Address(RVA = "0xFCFA9C", Offset = "0xFCFA9C", VA = "0xFCFA9C")]
		[Preserve]
		public static void SoundboardButton_op_Equality()
		{
		}

		[Token(Token = "0x60022AF")]
		[Address(RVA = "0xFCFB74", Offset = "0xFCFB74", VA = "0xFCFB74")]
		[Preserve]
		public static void SoundboardButton_op_Implicit()
		{
		}

		[Token(Token = "0x60022B0")]
		[Address(RVA = "0xFCFC44", Offset = "0xFCFC44", VA = "0xFCFC44")]
		[Preserve]
		public static void SoundboardButton_op_Inequality()
		{
		}

		[Token(Token = "0x60022B1")]
		[Address(RVA = "0xFCFD1C", Offset = "0xFCFD1C", VA = "0xFCFD1C")]
		[Preserve]
		public static void SoundDebugVisual_op_Equality()
		{
		}

		[Token(Token = "0x60022B2")]
		[Address(RVA = "0xFCFDF4", Offset = "0xFCFDF4", VA = "0xFCFDF4")]
		[Preserve]
		public static void SoundDebugVisual_op_Implicit()
		{
		}

		[Token(Token = "0x60022B3")]
		[Address(RVA = "0xFCFEC4", Offset = "0xFCFEC4", VA = "0xFCFEC4")]
		[Preserve]
		public static void SoundDebugVisual_op_Inequality()
		{
		}

		[Token(Token = "0x60022B4")]
		[Address(RVA = "0xFCFF9C", Offset = "0xFCFF9C", VA = "0xFCFF9C")]
		[Preserve]
		public static void SpriteSheetAnimation_op_Equality()
		{
		}

		[Token(Token = "0x60022B5")]
		[Address(RVA = "0xFD0074", Offset = "0xFD0074", VA = "0xFD0074")]
		[Preserve]
		public static void SpriteSheetAnimation_op_Implicit()
		{
		}

		[Token(Token = "0x60022B6")]
		[Address(RVA = "0xFD0144", Offset = "0xFD0144", VA = "0xFD0144")]
		[Preserve]
		public static void SpriteSheetAnimation_op_Inequality()
		{
		}

		[Token(Token = "0x60022B7")]
		[Address(RVA = "0xFD021C", Offset = "0xFD021C", VA = "0xFD021C")]
		[Preserve]
		public static void StandUpInteraction_op_Equality()
		{
		}

		[Token(Token = "0x60022B8")]
		[Address(RVA = "0xFD02F4", Offset = "0xFD02F4", VA = "0xFD02F4")]
		[Preserve]
		public static void StandUpInteraction_op_Implicit()
		{
		}

		[Token(Token = "0x60022B9")]
		[Address(RVA = "0xFD03C4", Offset = "0xFD03C4", VA = "0xFD03C4")]
		[Preserve]
		public static void StandUpInteraction_op_Inequality()
		{
		}

		[Token(Token = "0x60022BA")]
		[Address(RVA = "0xFD049C", Offset = "0xFD049C", VA = "0xFD049C")]
		[Preserve]
		public static void StaticClosableContainer_op_Equality()
		{
		}

		[Token(Token = "0x60022BB")]
		[Address(RVA = "0xFD0574", Offset = "0xFD0574", VA = "0xFD0574")]
		[Preserve]
		public static void StaticClosableContainer_op_Implicit()
		{
		}

		[Token(Token = "0x60022BC")]
		[Address(RVA = "0xFD0644", Offset = "0xFD0644", VA = "0xFD0644")]
		[Preserve]
		public static void StaticClosableContainer_op_Inequality()
		{
		}

		[Token(Token = "0x60022BD")]
		[Address(RVA = "0xFD071C", Offset = "0xFD071C", VA = "0xFD071C")]
		[Preserve]
		public static void StickyNote_op_Equality()
		{
		}

		[Token(Token = "0x60022BE")]
		[Address(RVA = "0xFD07F4", Offset = "0xFD07F4", VA = "0xFD07F4")]
		[Preserve]
		public static void StickyNote_op_Implicit()
		{
		}

		[Token(Token = "0x60022BF")]
		[Address(RVA = "0xFD08C4", Offset = "0xFD08C4", VA = "0xFD08C4")]
		[Preserve]
		public static void StickyNote_op_Inequality()
		{
		}

		[Token(Token = "0x60022C0")]
		[Address(RVA = "0xFD099C", Offset = "0xFD099C", VA = "0xFD099C")]
		[Preserve]
		public static void StickyNoteDock_op_Equality()
		{
		}

		[Token(Token = "0x60022C1")]
		[Address(RVA = "0xFD0A74", Offset = "0xFD0A74", VA = "0xFD0A74")]
		[Preserve]
		public static void StickyNoteDock_op_Implicit()
		{
		}

		[Token(Token = "0x60022C2")]
		[Address(RVA = "0xFD0B44", Offset = "0xFD0B44", VA = "0xFD0B44")]
		[Preserve]
		public static void StickyNoteDock_op_Inequality()
		{
		}

		[Token(Token = "0x60022C3")]
		[Address(RVA = "0xFD0C1C", Offset = "0xFD0C1C", VA = "0xFD0C1C")]
		[Preserve]
		public static void Story_EndStory()
		{
		}

		[Token(Token = "0x60022C4")]
		[Address(RVA = "0xFD0C50", Offset = "0xFD0C50", VA = "0xFD0C50")]
		[Preserve]
		public static void Story_op_Equality()
		{
		}

		[Token(Token = "0x60022C5")]
		[Address(RVA = "0xFD0D28", Offset = "0xFD0D28", VA = "0xFD0D28")]
		[Preserve]
		public static void Story_op_Implicit()
		{
		}

		[Token(Token = "0x60022C6")]
		[Address(RVA = "0xFD0DF8", Offset = "0xFD0DF8", VA = "0xFD0DF8")]
		[Preserve]
		public static void Story_op_Inequality()
		{
		}

		[Token(Token = "0x60022C7")]
		[Address(RVA = "0xFD0ED0", Offset = "0xFD0ED0", VA = "0xFD0ED0")]
		[Preserve]
		public static void Story_StartStory()
		{
		}

		[Token(Token = "0x60022C8")]
		[Address(RVA = "0xFD0F04", Offset = "0xFD0F04", VA = "0xFD0F04")]
		[Preserve]
		public static void StoryObjectCheckpoint_op_Equality()
		{
		}

		[Token(Token = "0x60022C9")]
		[Address(RVA = "0xFD0FDC", Offset = "0xFD0FDC", VA = "0xFD0FDC")]
		[Preserve]
		public static void StoryObjectCheckpoint_op_Implicit()
		{
		}

		[Token(Token = "0x60022CA")]
		[Address(RVA = "0xFD10AC", Offset = "0xFD10AC", VA = "0xFD10AC")]
		[Preserve]
		public static void StoryObjectCheckpoint_op_Inequality()
		{
		}

		[Token(Token = "0x60022CB")]
		[Address(RVA = "0xFD1184", Offset = "0xFD1184", VA = "0xFD1184")]
		[Preserve]
		public static void StoryObjectCheckpointCollectable_op_Equality()
		{
		}

		[Token(Token = "0x60022CC")]
		[Address(RVA = "0xFD125C", Offset = "0xFD125C", VA = "0xFD125C")]
		[Preserve]
		public static void StoryObjectCheckpointCollectable_op_Implicit()
		{
		}

		[Token(Token = "0x60022CD")]
		[Address(RVA = "0xFD132C", Offset = "0xFD132C", VA = "0xFD132C")]
		[Preserve]
		public static void StoryObjectCheckpointCollectable_op_Inequality()
		{
		}

		[Token(Token = "0x60022CE")]
		[Address(RVA = "0xFD1404", Offset = "0xFD1404", VA = "0xFD1404")]
		[Preserve]
		public static void StoryObjectCheckpointHelper_op_Equality()
		{
		}

		[Token(Token = "0x60022CF")]
		[Address(RVA = "0xFD14DC", Offset = "0xFD14DC", VA = "0xFD14DC")]
		[Preserve]
		public static void StoryObjectCheckpointHelper_op_Implicit()
		{
		}

		[Token(Token = "0x60022D0")]
		[Address(RVA = "0xFD15AC", Offset = "0xFD15AC", VA = "0xFD15AC")]
		[Preserve]
		public static void StoryObjectCheckpointHelper_op_Inequality()
		{
		}

		[Token(Token = "0x60022D1")]
		[Address(RVA = "0xFD1684", Offset = "0xFD1684", VA = "0xFD1684")]
		[Preserve]
		public static void StoryObjectCheckpointList_op_Equality()
		{
		}

		[Token(Token = "0x60022D2")]
		[Address(RVA = "0xFD175C", Offset = "0xFD175C", VA = "0xFD175C")]
		[Preserve]
		public static void StoryObjectCheckpointList_op_Implicit()
		{
		}

		[Token(Token = "0x60022D3")]
		[Address(RVA = "0xFD182C", Offset = "0xFD182C", VA = "0xFD182C")]
		[Preserve]
		public static void StoryObjectCheckpointList_op_Inequality()
		{
		}

		[Token(Token = "0x60022D4")]
		[Address(RVA = "0xFD1904", Offset = "0xFD1904", VA = "0xFD1904")]
		[Preserve]
		public static void StoryObjectCheckpointProperties_op_Equality()
		{
		}

		[Token(Token = "0x60022D5")]
		[Address(RVA = "0xFD19DC", Offset = "0xFD19DC", VA = "0xFD19DC")]
		[Preserve]
		public static void StoryObjectCheckpointProperties_op_Implicit()
		{
		}

		[Token(Token = "0x60022D6")]
		[Address(RVA = "0xFD1AAC", Offset = "0xFD1AAC", VA = "0xFD1AAC")]
		[Preserve]
		public static void StoryObjectCheckpointProperties_op_Inequality()
		{
		}

		[Token(Token = "0x60022D7")]
		[Address(RVA = "0xFD1B84", Offset = "0xFD1B84", VA = "0xFD1B84")]
		[Preserve]
		public static void StowInteraction_op_Equality()
		{
		}

		[Token(Token = "0x60022D8")]
		[Address(RVA = "0xFD1C5C", Offset = "0xFD1C5C", VA = "0xFD1C5C")]
		[Preserve]
		public static void StowInteraction_op_Implicit()
		{
		}

		[Token(Token = "0x60022D9")]
		[Address(RVA = "0xFD1D2C", Offset = "0xFD1D2C", VA = "0xFD1D2C")]
		[Preserve]
		public static void StowInteraction_op_Inequality()
		{
		}

		[Token(Token = "0x60022DA")]
		[Address(RVA = "0xFD1E04", Offset = "0xFD1E04", VA = "0xFD1E04")]
		[Preserve]
		public static void string_Equals()
		{
		}

		[Token(Token = "0x60022DB")]
		[Address(RVA = "0xFD1EB8", Offset = "0xFD1EB8", VA = "0xFD1EB8")]
		[Preserve]
		public static void string_op_Equality()
		{
		}

		[Token(Token = "0x60022DC")]
		[Address(RVA = "0xFD1F6C", Offset = "0xFD1F6C", VA = "0xFD1F6C")]
		[Preserve]
		public static void string_op_Inequality()
		{
		}

		[Token(Token = "0x60022DD")]
		[Address(RVA = "0xFD2020", Offset = "0xFD2020", VA = "0xFD2020")]
		[Preserve]
		public static void SweepCameraScenarioProvider_op_Equality()
		{
		}

		[Token(Token = "0x60022DE")]
		[Address(RVA = "0xFD20F8", Offset = "0xFD20F8", VA = "0xFD20F8")]
		[Preserve]
		public static void SweepCameraScenarioProvider_op_Implicit()
		{
		}

		[Token(Token = "0x60022DF")]
		[Address(RVA = "0xFD21C8", Offset = "0xFD21C8", VA = "0xFD21C8")]
		[Preserve]
		public static void SweepCameraScenarioProvider_op_Inequality()
		{
		}

		[Token(Token = "0x60022E0")]
		[Address(RVA = "0xFD22A0", Offset = "0xFD22A0", VA = "0xFD22A0")]
		[Preserve]
		public static void SwitchOffInteraction_op_Equality()
		{
		}

		[Token(Token = "0x60022E1")]
		[Address(RVA = "0xFD2378", Offset = "0xFD2378", VA = "0xFD2378")]
		[Preserve]
		public static void SwitchOffInteraction_op_Implicit()
		{
		}

		[Token(Token = "0x60022E2")]
		[Address(RVA = "0xFD2448", Offset = "0xFD2448", VA = "0xFD2448")]
		[Preserve]
		public static void SwitchOffInteraction_op_Inequality()
		{
		}

		[Token(Token = "0x60022E3")]
		[Address(RVA = "0xFD2520", Offset = "0xFD2520", VA = "0xFD2520")]
		[Preserve]
		public static void SwitchOnInteraction_op_Equality()
		{
		}

		[Token(Token = "0x60022E4")]
		[Address(RVA = "0xFD25F8", Offset = "0xFD25F8", VA = "0xFD25F8")]
		[Preserve]
		public static void SwitchOnInteraction_op_Implicit()
		{
		}

		[Token(Token = "0x60022E5")]
		[Address(RVA = "0xFD26C8", Offset = "0xFD26C8", VA = "0xFD26C8")]
		[Preserve]
		public static void SwitchOnInteraction_op_Inequality()
		{
		}

		[Token(Token = "0x60022E6")]
		[Address(RVA = "0xFD27A0", Offset = "0xFD27A0", VA = "0xFD27A0")]
		[Preserve]
		public static void SwitchState_op_Equality()
		{
		}

		[Token(Token = "0x60022E7")]
		[Address(RVA = "0xFD2878", Offset = "0xFD2878", VA = "0xFD2878")]
		[Preserve]
		public static void SwitchState_op_Implicit()
		{
		}

		[Token(Token = "0x60022E8")]
		[Address(RVA = "0xFD2948", Offset = "0xFD2948", VA = "0xFD2948")]
		[Preserve]
		public static void SwitchState_op_Inequality()
		{
		}

		[Token(Token = "0x60022E9")]
		[Address(RVA = "0xFD2A20", Offset = "0xFD2A20", VA = "0xFD2A20")]
		[Preserve]
		public static void T17InputSystemUIInputModule_op_Equality()
		{
		}

		[Token(Token = "0x60022EA")]
		[Address(RVA = "0xFD2AF8", Offset = "0xFD2AF8", VA = "0xFD2AF8")]
		[Preserve]
		public static void T17InputSystemUIInputModule_op_Implicit()
		{
		}

		[Token(Token = "0x60022EB")]
		[Address(RVA = "0xFD2BC8", Offset = "0xFD2BC8", VA = "0xFD2BC8")]
		[Preserve]
		public static void T17InputSystemUIInputModule_op_Inequality()
		{
		}

		[Token(Token = "0x60022EC")]
		[Address(RVA = "0xFD2CA0", Offset = "0xFD2CA0", VA = "0xFD2CA0")]
		[Preserve]
		public static void T17ScrollBar_op_Equality()
		{
		}

		[Token(Token = "0x60022ED")]
		[Address(RVA = "0xFD2D78", Offset = "0xFD2D78", VA = "0xFD2D78")]
		[Preserve]
		public static void T17ScrollBar_op_Implicit()
		{
		}

		[Token(Token = "0x60022EE")]
		[Address(RVA = "0xFD2E48", Offset = "0xFD2E48", VA = "0xFD2E48")]
		[Preserve]
		public static void T17ScrollBar_op_Inequality()
		{
		}

		[Token(Token = "0x60022EF")]
		[Address(RVA = "0xFD2F20", Offset = "0xFD2F20", VA = "0xFD2F20")]
		[Preserve]
		public static void TableDock_op_Equality()
		{
		}

		[Token(Token = "0x60022F0")]
		[Address(RVA = "0xFD2FF8", Offset = "0xFD2FF8", VA = "0xFD2FF8")]
		[Preserve]
		public static void TableDock_op_Implicit()
		{
		}

		[Token(Token = "0x60022F1")]
		[Address(RVA = "0xFD30C8", Offset = "0xFD30C8", VA = "0xFD30C8")]
		[Preserve]
		public static void TableDock_op_Inequality()
		{
		}

		[Token(Token = "0x60022F2")]
		[Address(RVA = "0xFD31A0", Offset = "0xFD31A0", VA = "0xFD31A0")]
		[Preserve]
		public static void TakeOutCartridgeFromPlayerInteraction_op_Equality()
		{
		}

		[Token(Token = "0x60022F3")]
		[Address(RVA = "0xFD3278", Offset = "0xFD3278", VA = "0xFD3278")]
		[Preserve]
		public static void TakeOutCartridgeFromPlayerInteraction_op_Implicit()
		{
		}

		[Token(Token = "0x60022F4")]
		[Address(RVA = "0xFD3348", Offset = "0xFD3348", VA = "0xFD3348")]
		[Preserve]
		public static void TakeOutCartridgeFromPlayerInteraction_op_Inequality()
		{
		}

		[Token(Token = "0x60022F5")]
		[Address(RVA = "0xFD3420", Offset = "0xFD3420", VA = "0xFD3420")]
		[Preserve]
		public static void TakeOutRecordFromPlayerInteraction_op_Equality()
		{
		}

		[Token(Token = "0x60022F6")]
		[Address(RVA = "0xFD34F8", Offset = "0xFD34F8", VA = "0xFD34F8")]
		[Preserve]
		public static void TakeOutRecordFromPlayerInteraction_op_Implicit()
		{
		}

		[Token(Token = "0x60022F7")]
		[Address(RVA = "0xFD35C8", Offset = "0xFD35C8", VA = "0xFD35C8")]
		[Preserve]
		public static void TakeOutRecordFromPlayerInteraction_op_Inequality()
		{
		}

		[Token(Token = "0x60022F8")]
		[Address(RVA = "0xFD36A0", Offset = "0xFD36A0", VA = "0xFD36A0")]
		[Preserve]
		public static void TeleportComponentGradient_op_Equality()
		{
		}

		[Token(Token = "0x60022F9")]
		[Address(RVA = "0xFD3778", Offset = "0xFD3778", VA = "0xFD3778")]
		[Preserve]
		public static void TeleportComponentGradient_op_Implicit()
		{
		}

		[Token(Token = "0x60022FA")]
		[Address(RVA = "0xFD3848", Offset = "0xFD3848", VA = "0xFD3848")]
		[Preserve]
		public static void TeleportComponentGradient_op_Inequality()
		{
		}

		[Token(Token = "0x60022FB")]
		[Address(RVA = "0xFD3920", Offset = "0xFD3920", VA = "0xFD3920")]
		[Preserve]
		public static void TeleportSnapLocation_op_Equality()
		{
		}

		[Token(Token = "0x60022FC")]
		[Address(RVA = "0xFD39F8", Offset = "0xFD39F8", VA = "0xFD39F8")]
		[Preserve]
		public static void TeleportSnapLocation_op_Implicit()
		{
		}

		[Token(Token = "0x60022FD")]
		[Address(RVA = "0xFD3AC8", Offset = "0xFD3AC8", VA = "0xFD3AC8")]
		[Preserve]
		public static void TeleportSnapLocation_op_Inequality()
		{
		}

		[Token(Token = "0x60022FE")]
		[Address(RVA = "0xFD3BA0", Offset = "0xFD3BA0", VA = "0xFD3BA0")]
		[Preserve]
		public static void TeleportVisuals_op_Equality()
		{
		}

		[Token(Token = "0x60022FF")]
		[Address(RVA = "0xFD3C78", Offset = "0xFD3C78", VA = "0xFD3C78")]
		[Preserve]
		public static void TeleportVisuals_op_Implicit()
		{
		}

		[Token(Token = "0x6002300")]
		[Address(RVA = "0xFD3D48", Offset = "0xFD3D48", VA = "0xFD3D48")]
		[Preserve]
		public static void TeleportVisuals_op_Inequality()
		{
		}

		[Token(Token = "0x6002301")]
		[Address(RVA = "0xFD3E20", Offset = "0xFD3E20", VA = "0xFD3E20")]
		[Preserve]
		public static void TestingContainer_op_Equality()
		{
		}

		[Token(Token = "0x6002302")]
		[Address(RVA = "0xFD3EF8", Offset = "0xFD3EF8", VA = "0xFD3EF8")]
		[Preserve]
		public static void TestingContainer_op_Implicit()
		{
		}

		[Token(Token = "0x6002303")]
		[Address(RVA = "0xFD3FC8", Offset = "0xFD3FC8", VA = "0xFD3FC8")]
		[Preserve]
		public static void TestingContainer_op_Inequality()
		{
		}

		[Token(Token = "0x6002304")]
		[Address(RVA = "0xFD40A0", Offset = "0xFD40A0", VA = "0xFD40A0")]
		[Preserve]
		public static void TestingScenarioContainer_op_Equality()
		{
		}

		[Token(Token = "0x6002305")]
		[Address(RVA = "0xFD4178", Offset = "0xFD4178", VA = "0xFD4178")]
		[Preserve]
		public static void TestingScenarioContainer_op_Implicit()
		{
		}

		[Token(Token = "0x6002306")]
		[Address(RVA = "0xFD4248", Offset = "0xFD4248", VA = "0xFD4248")]
		[Preserve]
		public static void TestingScenarioContainer_op_Inequality()
		{
		}

		[Token(Token = "0x6002307")]
		[Address(RVA = "0xFD4320", Offset = "0xFD4320", VA = "0xFD4320")]
		[Preserve]
		public static void TestingSceneLoader_op_Equality()
		{
		}

		[Token(Token = "0x6002308")]
		[Address(RVA = "0xFD43F8", Offset = "0xFD43F8", VA = "0xFD43F8")]
		[Preserve]
		public static void TestingSceneLoader_op_Implicit()
		{
		}

		[Token(Token = "0x6002309")]
		[Address(RVA = "0xFD44C8", Offset = "0xFD44C8", VA = "0xFD44C8")]
		[Preserve]
		public static void TestingSceneLoader_op_Inequality()
		{
		}

		[Token(Token = "0x600230A")]
		[Address(RVA = "0xFD45A0", Offset = "0xFD45A0", VA = "0xFD45A0")]
		[Preserve]
		public static void TextResizer_op_Equality()
		{
		}

		[Token(Token = "0x600230B")]
		[Address(RVA = "0xFD4678", Offset = "0xFD4678", VA = "0xFD4678")]
		[Preserve]
		public static void TextResizer_op_Implicit()
		{
		}

		[Token(Token = "0x600230C")]
		[Address(RVA = "0xFD4748", Offset = "0xFD4748", VA = "0xFD4748")]
		[Preserve]
		public static void TextResizer_op_Inequality()
		{
		}

		[Token(Token = "0x600230D")]
		[Address(RVA = "0xFD4820", Offset = "0xFD4820", VA = "0xFD4820")]
		[Preserve]
		public static void TextureAssigner_op_Equality()
		{
		}

		[Token(Token = "0x600230E")]
		[Address(RVA = "0xFD48F8", Offset = "0xFD48F8", VA = "0xFD48F8")]
		[Preserve]
		public static void TextureAssigner_op_Implicit()
		{
		}

		[Token(Token = "0x600230F")]
		[Address(RVA = "0xFD49C8", Offset = "0xFD49C8", VA = "0xFD49C8")]
		[Preserve]
		public static void TextureAssigner_op_Inequality()
		{
		}

		[Token(Token = "0x6002310")]
		[Address(RVA = "0xFD4AA0", Offset = "0xFD4AA0", VA = "0xFD4AA0")]
		[Preserve]
		public static void ThrowInteraction_op_Equality()
		{
		}

		[Token(Token = "0x6002311")]
		[Address(RVA = "0xFD4B78", Offset = "0xFD4B78", VA = "0xFD4B78")]
		[Preserve]
		public static void ThrowInteraction_op_Implicit()
		{
		}

		[Token(Token = "0x6002312")]
		[Address(RVA = "0xFD4C48", Offset = "0xFD4C48", VA = "0xFD4C48")]
		[Preserve]
		public static void ThrowInteraction_op_Inequality()
		{
		}

		[Token(Token = "0x6002313")]
		[Address(RVA = "0xFD4D20", Offset = "0xFD4D20", VA = "0xFD4D20")]
		[Preserve]
		public static void ToggleButtonAnimation_op_Equality()
		{
		}

		[Token(Token = "0x6002314")]
		[Address(RVA = "0xFD4DF8", Offset = "0xFD4DF8", VA = "0xFD4DF8")]
		[Preserve]
		public static void ToggleButtonAnimation_op_Implicit()
		{
		}

		[Token(Token = "0x6002315")]
		[Address(RVA = "0xFD4EC8", Offset = "0xFD4EC8", VA = "0xFD4EC8")]
		[Preserve]
		public static void ToggleButtonAnimation_op_Inequality()
		{
		}

		[Token(Token = "0x6002316")]
		[Address(RVA = "0xFD4FA0", Offset = "0xFD4FA0", VA = "0xFD4FA0")]
		[Preserve]
		public static void ToggleButtonMaterialSwap_op_Equality()
		{
		}

		[Token(Token = "0x6002317")]
		[Address(RVA = "0xFD5078", Offset = "0xFD5078", VA = "0xFD5078")]
		[Preserve]
		public static void ToggleButtonMaterialSwap_op_Implicit()
		{
		}

		[Token(Token = "0x6002318")]
		[Address(RVA = "0xFD5148", Offset = "0xFD5148", VA = "0xFD5148")]
		[Preserve]
		public static void ToggleButtonMaterialSwap_op_Inequality()
		{
		}

		[Token(Token = "0x6002319")]
		[Address(RVA = "0xFD5220", Offset = "0xFD5220", VA = "0xFD5220")]
		[Preserve]
		public static void ToggleOnInputChanged_op_Equality()
		{
		}

		[Token(Token = "0x600231A")]
		[Address(RVA = "0xFD52F8", Offset = "0xFD52F8", VA = "0xFD52F8")]
		[Preserve]
		public static void ToggleOnInputChanged_op_Implicit()
		{
		}

		[Token(Token = "0x600231B")]
		[Address(RVA = "0xFD53C8", Offset = "0xFD53C8", VA = "0xFD53C8")]
		[Preserve]
		public static void ToggleOnInputChanged_op_Inequality()
		{
		}

		[Token(Token = "0x600231C")]
		[Address(RVA = "0xFD54A0", Offset = "0xFD54A0", VA = "0xFD54A0")]
		[Preserve]
		public static void TouchHandler_op_Equality()
		{
		}

		[Token(Token = "0x600231D")]
		[Address(RVA = "0xFD5578", Offset = "0xFD5578", VA = "0xFD5578")]
		[Preserve]
		public static void TouchHandler_op_Implicit()
		{
		}

		[Token(Token = "0x600231E")]
		[Address(RVA = "0xFD5648", Offset = "0xFD5648", VA = "0xFD5648")]
		[Preserve]
		public static void TouchHandler_op_Inequality()
		{
		}

		[Token(Token = "0x600231F")]
		[Address(RVA = "0xFD5720", Offset = "0xFD5720", VA = "0xFD5720")]
		[Preserve]
		public static void TransitionScreen_op_Equality()
		{
		}

		[Token(Token = "0x6002320")]
		[Address(RVA = "0xFD57F8", Offset = "0xFD57F8", VA = "0xFD57F8")]
		[Preserve]
		public static void TransitionScreen_op_Implicit()
		{
		}

		[Token(Token = "0x6002321")]
		[Address(RVA = "0xFD58C8", Offset = "0xFD58C8", VA = "0xFD58C8")]
		[Preserve]
		public static void TransitionScreen_op_Inequality()
		{
		}

		[Token(Token = "0x6002322")]
		[Address(RVA = "0xFD59A0", Offset = "0xFD59A0", VA = "0xFD59A0")]
		[Preserve]
		public static void TriggerEnterHandler_op_Equality()
		{
		}

		[Token(Token = "0x6002323")]
		[Address(RVA = "0xFD5A78", Offset = "0xFD5A78", VA = "0xFD5A78")]
		[Preserve]
		public static void TriggerEnterHandler_op_Implicit()
		{
		}

		[Token(Token = "0x6002324")]
		[Address(RVA = "0xFD5B48", Offset = "0xFD5B48", VA = "0xFD5B48")]
		[Preserve]
		public static void TriggerEnterHandler_op_Inequality()
		{
		}

		[Token(Token = "0x6002325")]
		[Address(RVA = "0xFD5C20", Offset = "0xFD5C20", VA = "0xFD5C20")]
		[Preserve]
		public static void TutorialAnchor_op_Equality()
		{
		}

		[Token(Token = "0x6002326")]
		[Address(RVA = "0xFD5CF8", Offset = "0xFD5CF8", VA = "0xFD5CF8")]
		[Preserve]
		public static void TutorialAnchor_op_Implicit()
		{
		}

		[Token(Token = "0x6002327")]
		[Address(RVA = "0xFD5DC8", Offset = "0xFD5DC8", VA = "0xFD5DC8")]
		[Preserve]
		public static void TutorialAnchor_op_Inequality()
		{
		}

		[Token(Token = "0x6002328")]
		[Address(RVA = "0xFD5EA0", Offset = "0xFD5EA0", VA = "0xFD5EA0")]
		[Preserve]
		public static void TwinDecks_op_Equality()
		{
		}

		[Token(Token = "0x6002329")]
		[Address(RVA = "0xFD5F78", Offset = "0xFD5F78", VA = "0xFD5F78")]
		[Preserve]
		public static void TwinDecks_op_Implicit()
		{
		}

		[Token(Token = "0x600232A")]
		[Address(RVA = "0xFD6048", Offset = "0xFD6048", VA = "0xFD6048")]
		[Preserve]
		public static void TwinDecks_op_Inequality()
		{
		}

		[Token(Token = "0x600232B")]
		[Address(RVA = "0xFD6120", Offset = "0xFD6120", VA = "0xFD6120")]
		[Preserve]
		public static void UI_Interactable_InteractableUIManager_op_Equality()
		{
		}

		[Token(Token = "0x600232C")]
		[Address(RVA = "0xFD61F8", Offset = "0xFD61F8", VA = "0xFD61F8")]
		[Preserve]
		public static void UI_Interactable_InteractableUIManager_op_Implicit()
		{
		}

		[Token(Token = "0x600232D")]
		[Address(RVA = "0xFD62C8", Offset = "0xFD62C8", VA = "0xFD62C8")]
		[Preserve]
		public static void UI_Interactable_InteractableUIManager_op_Inequality()
		{
		}

		[Token(Token = "0x600232E")]
		[Address(RVA = "0xFD63A0", Offset = "0xFD63A0", VA = "0xFD63A0")]
		[Preserve]
		public static void UI_Interactable_LeftPanel_op_Equality()
		{
		}

		[Token(Token = "0x600232F")]
		[Address(RVA = "0xFD6478", Offset = "0xFD6478", VA = "0xFD6478")]
		[Preserve]
		public static void UI_Interactable_LeftPanel_op_Implicit()
		{
		}

		[Token(Token = "0x6002330")]
		[Address(RVA = "0xFD6548", Offset = "0xFD6548", VA = "0xFD6548")]
		[Preserve]
		public static void UI_Interactable_LeftPanel_op_Inequality()
		{
		}

		[Token(Token = "0x6002331")]
		[Address(RVA = "0xFD6620", Offset = "0xFD6620", VA = "0xFD6620")]
		[Preserve]
		public static void UI_Interactable_MiddlePanel_op_Equality()
		{
		}

		[Token(Token = "0x6002332")]
		[Address(RVA = "0xFD66F8", Offset = "0xFD66F8", VA = "0xFD66F8")]
		[Preserve]
		public static void UI_Interactable_MiddlePanel_op_Implicit()
		{
		}

		[Token(Token = "0x6002333")]
		[Address(RVA = "0xFD67C8", Offset = "0xFD67C8", VA = "0xFD67C8")]
		[Preserve]
		public static void UI_Interactable_MiddlePanel_op_Inequality()
		{
		}

		[Token(Token = "0x6002334")]
		[Address(RVA = "0xFD68A0", Offset = "0xFD68A0", VA = "0xFD68A0")]
		[Preserve]
		public static void UI_Interactable_RightPanel_op_Equality()
		{
		}

		[Token(Token = "0x6002335")]
		[Address(RVA = "0xFD6978", Offset = "0xFD6978", VA = "0xFD6978")]
		[Preserve]
		public static void UI_Interactable_RightPanel_op_Implicit()
		{
		}

		[Token(Token = "0x6002336")]
		[Address(RVA = "0xFD6A48", Offset = "0xFD6A48", VA = "0xFD6A48")]
		[Preserve]
		public static void UI_Interactable_RightPanel_op_Inequality()
		{
		}

		[Token(Token = "0x6002337")]
		[Address(RVA = "0xFD6B20", Offset = "0xFD6B20", VA = "0xFD6B20")]
		[Preserve]
		public static void UI_Interactable_UIActionElement_op_Equality()
		{
		}

		[Token(Token = "0x6002338")]
		[Address(RVA = "0xFD6BF8", Offset = "0xFD6BF8", VA = "0xFD6BF8")]
		[Preserve]
		public static void UI_Interactable_UIActionElement_op_Implicit()
		{
		}

		[Token(Token = "0x6002339")]
		[Address(RVA = "0xFD6CC8", Offset = "0xFD6CC8", VA = "0xFD6CC8")]
		[Preserve]
		public static void UI_Interactable_UIActionElement_op_Inequality()
		{
		}

		[Token(Token = "0x600233A")]
		[Address(RVA = "0xFD6DA0", Offset = "0xFD6DA0", VA = "0xFD6DA0")]
		[Preserve]
		public static void UI_Interactable_UIItemTitleElement_op_Equality()
		{
		}

		[Token(Token = "0x600233B")]
		[Address(RVA = "0xFD6E78", Offset = "0xFD6E78", VA = "0xFD6E78")]
		[Preserve]
		public static void UI_Interactable_UIItemTitleElement_op_Implicit()
		{
		}

		[Token(Token = "0x600233C")]
		[Address(RVA = "0xFD6F48", Offset = "0xFD6F48", VA = "0xFD6F48")]
		[Preserve]
		public static void UI_Interactable_UIItemTitleElement_op_Inequality()
		{
		}

		[Token(Token = "0x600233D")]
		[Address(RVA = "0xFD7020", Offset = "0xFD7020", VA = "0xFD7020")]
		[Preserve]
		public static void UI_Inventory_InventoryUIManager_op_Equality()
		{
		}

		[Token(Token = "0x600233E")]
		[Address(RVA = "0xFD70F8", Offset = "0xFD70F8", VA = "0xFD70F8")]
		[Preserve]
		public static void UI_Inventory_InventoryUIManager_op_Implicit()
		{
		}

		[Token(Token = "0x600233F")]
		[Address(RVA = "0xFD71C8", Offset = "0xFD71C8", VA = "0xFD71C8")]
		[Preserve]
		public static void UI_Inventory_InventoryUIManager_op_Inequality()
		{
		}

		[Token(Token = "0x6002340")]
		[Address(RVA = "0xFD72A0", Offset = "0xFD72A0", VA = "0xFD72A0")]
		[Preserve]
		public static void UI_Inventory_UIInventorySlot_op_Equality()
		{
		}

		[Token(Token = "0x6002341")]
		[Address(RVA = "0xFD7378", Offset = "0xFD7378", VA = "0xFD7378")]
		[Preserve]
		public static void UI_Inventory_UIInventorySlot_op_Implicit()
		{
		}

		[Token(Token = "0x6002342")]
		[Address(RVA = "0xFD7448", Offset = "0xFD7448", VA = "0xFD7448")]
		[Preserve]
		public static void UI_Inventory_UIInventorySlot_op_Inequality()
		{
		}

		[Token(Token = "0x6002343")]
		[Address(RVA = "0xFD7520", Offset = "0xFD7520", VA = "0xFD7520")]
		[Preserve]
		public static void UIActivatable_op_Equality()
		{
		}

		[Token(Token = "0x6002344")]
		[Address(RVA = "0xFD75F8", Offset = "0xFD75F8", VA = "0xFD75F8")]
		[Preserve]
		public static void UIActivatable_op_Implicit()
		{
		}

		[Token(Token = "0x6002345")]
		[Address(RVA = "0xFD76C8", Offset = "0xFD76C8", VA = "0xFD76C8")]
		[Preserve]
		public static void UIActivatable_op_Inequality()
		{
		}

		[Token(Token = "0x6002346")]
		[Address(RVA = "0xFD77A0", Offset = "0xFD77A0", VA = "0xFD77A0")]
		[Preserve]
		public static void UIAnchorDialog_op_Equality()
		{
		}

		[Token(Token = "0x6002347")]
		[Address(RVA = "0xFD7878", Offset = "0xFD7878", VA = "0xFD7878")]
		[Preserve]
		public static void UIAnchorDialog_op_Implicit()
		{
		}

		[Token(Token = "0x6002348")]
		[Address(RVA = "0xFD7948", Offset = "0xFD7948", VA = "0xFD7948")]
		[Preserve]
		public static void UIAnchorDialog_op_Inequality()
		{
		}

		[Token(Token = "0x6002349")]
		[Address(RVA = "0xFD7A20", Offset = "0xFD7A20", VA = "0xFD7A20")]
		[Preserve]
		public static void UIFollowCameraYRotation_op_Equality()
		{
		}

		[Token(Token = "0x600234A")]
		[Address(RVA = "0xFD7AF8", Offset = "0xFD7AF8", VA = "0xFD7AF8")]
		[Preserve]
		public static void UIFollowCameraYRotation_op_Implicit()
		{
		}

		[Token(Token = "0x600234B")]
		[Address(RVA = "0xFD7BC8", Offset = "0xFD7BC8", VA = "0xFD7BC8")]
		[Preserve]
		public static void UIFollowCameraYRotation_op_Inequality()
		{
		}

		[Token(Token = "0x600234C")]
		[Address(RVA = "0xFD7CA0", Offset = "0xFD7CA0", VA = "0xFD7CA0")]
		[Preserve]
		public static void UIFollowGaze_op_Equality()
		{
		}

		[Token(Token = "0x600234D")]
		[Address(RVA = "0xFD7D78", Offset = "0xFD7D78", VA = "0xFD7D78")]
		[Preserve]
		public static void UIFollowGaze_op_Implicit()
		{
		}

		[Token(Token = "0x600234E")]
		[Address(RVA = "0xFD7E48", Offset = "0xFD7E48", VA = "0xFD7E48")]
		[Preserve]
		public static void UIFollowGaze_op_Inequality()
		{
		}

		[Token(Token = "0x600234F")]
		[Address(RVA = "0xFD7F20", Offset = "0xFD7F20", VA = "0xFD7F20")]
		[Preserve]
		public static void UILocalisations_op_Equality()
		{
		}

		[Token(Token = "0x6002350")]
		[Address(RVA = "0xFD7FF8", Offset = "0xFD7FF8", VA = "0xFD7FF8")]
		[Preserve]
		public static void UILocalisations_op_Implicit()
		{
		}

		[Token(Token = "0x6002351")]
		[Address(RVA = "0xFD80C8", Offset = "0xFD80C8", VA = "0xFD80C8")]
		[Preserve]
		public static void UILocalisations_op_Inequality()
		{
		}

		[Token(Token = "0x6002352")]
		[Address(RVA = "0xFD81A0", Offset = "0xFD81A0", VA = "0xFD81A0")]
		[Preserve]
		public static void UniqueRandomizeAnimInt_op_Equality()
		{
		}

		[Token(Token = "0x6002353")]
		[Address(RVA = "0xFD8278", Offset = "0xFD8278", VA = "0xFD8278")]
		[Preserve]
		public static void UniqueRandomizeAnimInt_op_Implicit()
		{
		}

		[Token(Token = "0x6002354")]
		[Address(RVA = "0xFD8348", Offset = "0xFD8348", VA = "0xFD8348")]
		[Preserve]
		public static void UniqueRandomizeAnimInt_op_Inequality()
		{
		}

		[Token(Token = "0x6002355")]
		[Address(RVA = "0xFD8420", Offset = "0xFD8420", VA = "0xFD8420")]
		[Preserve]
		public static void UnityEngine_AI_NavMeshAgent_op_Equality()
		{
		}

		[Token(Token = "0x6002356")]
		[Address(RVA = "0xFD84F8", Offset = "0xFD84F8", VA = "0xFD84F8")]
		[Preserve]
		public static void UnityEngine_AI_NavMeshAgent_op_Implicit()
		{
		}

		[Token(Token = "0x6002357")]
		[Address(RVA = "0xFD85C8", Offset = "0xFD85C8", VA = "0xFD85C8")]
		[Preserve]
		public static void UnityEngine_AI_NavMeshAgent_op_Inequality()
		{
		}

		[Token(Token = "0x6002358")]
		[Address(RVA = "0xFD86A0", Offset = "0xFD86A0", VA = "0xFD86A0")]
		[Preserve]
		public static void UnityEngine_AI_NavMeshData_op_Equality()
		{
		}

		[Token(Token = "0x6002359")]
		[Address(RVA = "0xFD8778", Offset = "0xFD8778", VA = "0xFD8778")]
		[Preserve]
		public static void UnityEngine_AI_NavMeshData_op_Implicit()
		{
		}

		[Token(Token = "0x600235A")]
		[Address(RVA = "0xFD8848", Offset = "0xFD8848", VA = "0xFD8848")]
		[Preserve]
		public static void UnityEngine_AI_NavMeshData_op_Inequality()
		{
		}

		[Token(Token = "0x600235B")]
		[Address(RVA = "0xFD8920", Offset = "0xFD8920", VA = "0xFD8920")]
		[Preserve]
		public static void UnityEngine_AI_NavMeshObstacle_op_Equality()
		{
		}

		[Token(Token = "0x600235C")]
		[Address(RVA = "0xFD89F8", Offset = "0xFD89F8", VA = "0xFD89F8")]
		[Preserve]
		public static void UnityEngine_AI_NavMeshObstacle_op_Implicit()
		{
		}

		[Token(Token = "0x600235D")]
		[Address(RVA = "0xFD8AC8", Offset = "0xFD8AC8", VA = "0xFD8AC8")]
		[Preserve]
		public static void UnityEngine_AI_NavMeshObstacle_op_Inequality()
		{
		}

		[Token(Token = "0x600235E")]
		[Address(RVA = "0xFD8BA0", Offset = "0xFD8BA0", VA = "0xFD8BA0")]
		[Preserve]
		public static void UnityEngine_AI_OffMeshLink_op_Equality()
		{
		}

		[Token(Token = "0x600235F")]
		[Address(RVA = "0xFD8C78", Offset = "0xFD8C78", VA = "0xFD8C78")]
		[Preserve]
		public static void UnityEngine_AI_OffMeshLink_op_Implicit()
		{
		}

		[Token(Token = "0x6002360")]
		[Address(RVA = "0xFD8D48", Offset = "0xFD8D48", VA = "0xFD8D48")]
		[Preserve]
		public static void UnityEngine_AI_OffMeshLink_op_Inequality()
		{
		}

		[Token(Token = "0x6002361")]
		[Address(RVA = "0xFD8E20", Offset = "0xFD8E20", VA = "0xFD8E20")]
		[Preserve]
		public static void UnityEngine_AnchoredJoint2D_op_Equality()
		{
		}

		[Token(Token = "0x6002362")]
		[Address(RVA = "0xFD8EF8", Offset = "0xFD8EF8", VA = "0xFD8EF8")]
		[Preserve]
		public static void UnityEngine_AnchoredJoint2D_op_Implicit()
		{
		}

		[Token(Token = "0x6002363")]
		[Address(RVA = "0xFD8FC8", Offset = "0xFD8FC8", VA = "0xFD8FC8")]
		[Preserve]
		public static void UnityEngine_AnchoredJoint2D_op_Inequality()
		{
		}

		[Token(Token = "0x6002364")]
		[Address(RVA = "0xFD90A0", Offset = "0xFD90A0", VA = "0xFD90A0")]
		[Preserve]
		public static void UnityEngine_Animation_ctor()
		{
		}

		[Token(Token = "0x6002365")]
		[Address(RVA = "0xFD90F0", Offset = "0xFD90F0", VA = "0xFD90F0")]
		[Preserve]
		public static void UnityEngine_Animation_op_Equality()
		{
		}

		[Token(Token = "0x6002366")]
		[Address(RVA = "0xFD91C8", Offset = "0xFD91C8", VA = "0xFD91C8")]
		[Preserve]
		public static void UnityEngine_Animation_op_Implicit()
		{
		}

		[Token(Token = "0x6002367")]
		[Address(RVA = "0xFD9298", Offset = "0xFD9298", VA = "0xFD9298")]
		[Preserve]
		public static void UnityEngine_Animation_op_Inequality()
		{
		}

		[Token(Token = "0x6002368")]
		[Address(RVA = "0xFD9370", Offset = "0xFD9370", VA = "0xFD9370")]
		[Preserve]
		public static void UnityEngine_Animation_Play()
		{
		}

		[Token(Token = "0x6002369")]
		[Address(RVA = "0xFD93A4", Offset = "0xFD93A4", VA = "0xFD93A4")]
		[Preserve]
		public static void UnityEngine_AnimationClip_op_Equality()
		{
		}

		[Token(Token = "0x600236A")]
		[Address(RVA = "0xFD947C", Offset = "0xFD947C", VA = "0xFD947C")]
		[Preserve]
		public static void UnityEngine_AnimationClip_op_Implicit()
		{
		}

		[Token(Token = "0x600236B")]
		[Address(RVA = "0xFD954C", Offset = "0xFD954C", VA = "0xFD954C")]
		[Preserve]
		public static void UnityEngine_AnimationClip_op_Inequality()
		{
		}

		[Token(Token = "0x600236C")]
		[Address(RVA = "0xFD9624", Offset = "0xFD9624", VA = "0xFD9624")]
		[Preserve]
		public static void UnityEngine_Animations_AimConstraint_op_Equality()
		{
		}

		[Token(Token = "0x600236D")]
		[Address(RVA = "0xFD96FC", Offset = "0xFD96FC", VA = "0xFD96FC")]
		[Preserve]
		public static void UnityEngine_Animations_AimConstraint_op_Implicit()
		{
		}

		[Token(Token = "0x600236E")]
		[Address(RVA = "0xFD97CC", Offset = "0xFD97CC", VA = "0xFD97CC")]
		[Preserve]
		public static void UnityEngine_Animations_AimConstraint_op_Inequality()
		{
		}

		[Token(Token = "0x600236F")]
		[Address(RVA = "0xFD98A4", Offset = "0xFD98A4", VA = "0xFD98A4")]
		[Preserve]
		public static void UnityEngine_Animations_LookAtConstraint_op_Equality()
		{
		}

		[Token(Token = "0x6002370")]
		[Address(RVA = "0xFD997C", Offset = "0xFD997C", VA = "0xFD997C")]
		[Preserve]
		public static void UnityEngine_Animations_LookAtConstraint_op_Implicit()
		{
		}

		[Token(Token = "0x6002371")]
		[Address(RVA = "0xFD9A4C", Offset = "0xFD9A4C", VA = "0xFD9A4C")]
		[Preserve]
		public static void UnityEngine_Animations_LookAtConstraint_op_Inequality()
		{
		}

		[Token(Token = "0x6002372")]
		[Address(RVA = "0xFD9B24", Offset = "0xFD9B24", VA = "0xFD9B24")]
		[Preserve]
		public static void UnityEngine_Animations_ParentConstraint_op_Equality()
		{
		}

		[Token(Token = "0x6002373")]
		[Address(RVA = "0xFD9BFC", Offset = "0xFD9BFC", VA = "0xFD9BFC")]
		[Preserve]
		public static void UnityEngine_Animations_ParentConstraint_op_Implicit()
		{
		}

		[Token(Token = "0x6002374")]
		[Address(RVA = "0xFD9CCC", Offset = "0xFD9CCC", VA = "0xFD9CCC")]
		[Preserve]
		public static void UnityEngine_Animations_ParentConstraint_op_Inequality()
		{
		}

		[Token(Token = "0x6002375")]
		[Address(RVA = "0xFD9DA4", Offset = "0xFD9DA4", VA = "0xFD9DA4")]
		[Preserve]
		public static void UnityEngine_Animations_PositionConstraint_op_Equality()
		{
		}

		[Token(Token = "0x6002376")]
		[Address(RVA = "0xFD9E7C", Offset = "0xFD9E7C", VA = "0xFD9E7C")]
		[Preserve]
		public static void UnityEngine_Animations_PositionConstraint_op_Implicit()
		{
		}

		[Token(Token = "0x6002377")]
		[Address(RVA = "0xFD9F4C", Offset = "0xFD9F4C", VA = "0xFD9F4C")]
		[Preserve]
		public static void UnityEngine_Animations_PositionConstraint_op_Inequality()
		{
		}

		[Token(Token = "0x6002378")]
		[Address(RVA = "0xFDA024", Offset = "0xFDA024", VA = "0xFDA024")]
		[Preserve]
		public static void UnityEngine_Animations_RotationConstraint_op_Equality()
		{
		}

		[Token(Token = "0x6002379")]
		[Address(RVA = "0xFDA0FC", Offset = "0xFDA0FC", VA = "0xFDA0FC")]
		[Preserve]
		public static void UnityEngine_Animations_RotationConstraint_op_Implicit()
		{
		}

		[Token(Token = "0x600237A")]
		[Address(RVA = "0xFDA1CC", Offset = "0xFDA1CC", VA = "0xFDA1CC")]
		[Preserve]
		public static void UnityEngine_Animations_RotationConstraint_op_Inequality()
		{
		}

		[Token(Token = "0x600237B")]
		[Address(RVA = "0xFDA2A4", Offset = "0xFDA2A4", VA = "0xFDA2A4")]
		[Preserve]
		public static void UnityEngine_Animations_ScaleConstraint_op_Equality()
		{
		}

		[Token(Token = "0x600237C")]
		[Address(RVA = "0xFDA37C", Offset = "0xFDA37C", VA = "0xFDA37C")]
		[Preserve]
		public static void UnityEngine_Animations_ScaleConstraint_op_Implicit()
		{
		}

		[Token(Token = "0x600237D")]
		[Address(RVA = "0xFDA44C", Offset = "0xFDA44C", VA = "0xFDA44C")]
		[Preserve]
		public static void UnityEngine_Animations_ScaleConstraint_op_Inequality()
		{
		}

		[Token(Token = "0x600237E")]
		[Address(RVA = "0xFDA524", Offset = "0xFDA524", VA = "0xFDA524")]
		[Preserve]
		public static void UnityEngine_Animator_ctor()
		{
		}

		[Token(Token = "0x600237F")]
		[Address(RVA = "0xFDA574", Offset = "0xFDA574", VA = "0xFDA574")]
		[Preserve]
		public static void UnityEngine_Animator_op_Equality()
		{
		}

		[Token(Token = "0x6002380")]
		[Address(RVA = "0xFDA64C", Offset = "0xFDA64C", VA = "0xFDA64C")]
		[Preserve]
		public static void UnityEngine_Animator_op_Implicit()
		{
		}

		[Token(Token = "0x6002381")]
		[Address(RVA = "0xFDA71C", Offset = "0xFDA71C", VA = "0xFDA71C")]
		[Preserve]
		public static void UnityEngine_Animator_op_Inequality()
		{
		}

		[Token(Token = "0x6002382")]
		[Address(RVA = "0xFDA7F4", Offset = "0xFDA7F4", VA = "0xFDA7F4")]
		[Preserve]
		public static void UnityEngine_Animator_SetBool()
		{
		}

		[Token(Token = "0x6002383")]
		[Address(RVA = "0xFDA834", Offset = "0xFDA834", VA = "0xFDA834")]
		[Preserve]
		public static void UnityEngine_Animator_SetInteger()
		{
		}

		[Token(Token = "0x6002384")]
		[Address(RVA = "0xFDA874", Offset = "0xFDA874", VA = "0xFDA874")]
		[Preserve]
		public static void UnityEngine_Animator_SetTrigger()
		{
		}

		[Token(Token = "0x6002385")]
		[Address(RVA = "0xFDA8A8", Offset = "0xFDA8A8", VA = "0xFDA8A8")]
		[Preserve]
		public static void UnityEngine_AnimatorOverrideController_op_Equality()
		{
		}

		[Token(Token = "0x6002386")]
		[Address(RVA = "0xFDA980", Offset = "0xFDA980", VA = "0xFDA980")]
		[Preserve]
		public static void UnityEngine_AnimatorOverrideController_op_Implicit()
		{
		}

		[Token(Token = "0x6002387")]
		[Address(RVA = "0xFDAA50", Offset = "0xFDAA50", VA = "0xFDAA50")]
		[Preserve]
		public static void UnityEngine_AnimatorOverrideController_op_Inequality()
		{
		}

		[Token(Token = "0x6002388")]
		[Address(RVA = "0xFDAB28", Offset = "0xFDAB28", VA = "0xFDAB28")]
		[Preserve]
		public static void UnityEngine_AreaEffector2D_op_Equality()
		{
		}

		[Token(Token = "0x6002389")]
		[Address(RVA = "0xFDAC00", Offset = "0xFDAC00", VA = "0xFDAC00")]
		[Preserve]
		public static void UnityEngine_AreaEffector2D_op_Implicit()
		{
		}

		[Token(Token = "0x600238A")]
		[Address(RVA = "0xFDACD0", Offset = "0xFDACD0", VA = "0xFDACD0")]
		[Preserve]
		public static void UnityEngine_AreaEffector2D_op_Inequality()
		{
		}

		[Token(Token = "0x600238B")]
		[Address(RVA = "0xFDADA8", Offset = "0xFDADA8", VA = "0xFDADA8")]
		[Preserve]
		public static void UnityEngine_ArticulationBody_op_Equality()
		{
		}

		[Token(Token = "0x600238C")]
		[Address(RVA = "0xFDAE80", Offset = "0xFDAE80", VA = "0xFDAE80")]
		[Preserve]
		public static void UnityEngine_ArticulationBody_op_Implicit()
		{
		}

		[Token(Token = "0x600238D")]
		[Address(RVA = "0xFDAF50", Offset = "0xFDAF50", VA = "0xFDAF50")]
		[Preserve]
		public static void UnityEngine_ArticulationBody_op_Inequality()
		{
		}

		[Token(Token = "0x600238E")]
		[Address(RVA = "0xFDB028", Offset = "0xFDB028", VA = "0xFDB028")]
		[Preserve]
		public static void UnityEngine_AssetBundle_op_Equality()
		{
		}

		[Token(Token = "0x600238F")]
		[Address(RVA = "0xFDB100", Offset = "0xFDB100", VA = "0xFDB100")]
		[Preserve]
		public static void UnityEngine_AssetBundle_op_Implicit()
		{
		}

		[Token(Token = "0x6002390")]
		[Address(RVA = "0xFDB1D0", Offset = "0xFDB1D0", VA = "0xFDB1D0")]
		[Preserve]
		public static void UnityEngine_AssetBundle_op_Inequality()
		{
		}

		[Token(Token = "0x6002391")]
		[Address(RVA = "0xFDB2A8", Offset = "0xFDB2A8", VA = "0xFDB2A8")]
		[Preserve]
		public static void UnityEngine_AssetBundleManifest_op_Equality()
		{
		}

		[Token(Token = "0x6002392")]
		[Address(RVA = "0xFDB380", Offset = "0xFDB380", VA = "0xFDB380")]
		[Preserve]
		public static void UnityEngine_AssetBundleManifest_op_Implicit()
		{
		}

		[Token(Token = "0x6002393")]
		[Address(RVA = "0xFDB450", Offset = "0xFDB450", VA = "0xFDB450")]
		[Preserve]
		public static void UnityEngine_AssetBundleManifest_op_Inequality()
		{
		}

		[Token(Token = "0x6002394")]
		[Address(RVA = "0xFDB528", Offset = "0xFDB528", VA = "0xFDB528")]
		[Preserve]
		public static void UnityEngine_Audio_AudioMixer_op_Equality()
		{
		}

		[Token(Token = "0x6002395")]
		[Address(RVA = "0xFDB600", Offset = "0xFDB600", VA = "0xFDB600")]
		[Preserve]
		public static void UnityEngine_Audio_AudioMixer_op_Implicit()
		{
		}

		[Token(Token = "0x6002396")]
		[Address(RVA = "0xFDB6D0", Offset = "0xFDB6D0", VA = "0xFDB6D0")]
		[Preserve]
		public static void UnityEngine_Audio_AudioMixer_op_Inequality()
		{
		}

		[Token(Token = "0x6002397")]
		[Address(RVA = "0xFDB7A8", Offset = "0xFDB7A8", VA = "0xFDB7A8")]
		[Preserve]
		public static void UnityEngine_Audio_AudioMixerGroup_op_Equality()
		{
		}

		[Token(Token = "0x6002398")]
		[Address(RVA = "0xFDB880", Offset = "0xFDB880", VA = "0xFDB880")]
		[Preserve]
		public static void UnityEngine_Audio_AudioMixerGroup_op_Implicit()
		{
		}

		[Token(Token = "0x6002399")]
		[Address(RVA = "0xFDB950", Offset = "0xFDB950", VA = "0xFDB950")]
		[Preserve]
		public static void UnityEngine_Audio_AudioMixerGroup_op_Inequality()
		{
		}

		[Token(Token = "0x600239A")]
		[Address(RVA = "0xFDBA28", Offset = "0xFDBA28", VA = "0xFDBA28")]
		[Preserve]
		public static void UnityEngine_Audio_AudioMixerSnapshot_op_Equality()
		{
		}

		[Token(Token = "0x600239B")]
		[Address(RVA = "0xFDBB00", Offset = "0xFDBB00", VA = "0xFDBB00")]
		[Preserve]
		public static void UnityEngine_Audio_AudioMixerSnapshot_op_Implicit()
		{
		}

		[Token(Token = "0x600239C")]
		[Address(RVA = "0xFDBBD0", Offset = "0xFDBBD0", VA = "0xFDBBD0")]
		[Preserve]
		public static void UnityEngine_Audio_AudioMixerSnapshot_op_Inequality()
		{
		}

		[Token(Token = "0x600239D")]
		[Address(RVA = "0xFDBCA8", Offset = "0xFDBCA8", VA = "0xFDBCA8")]
		[Preserve]
		public static void UnityEngine_AudioBehaviour_op_Equality()
		{
		}

		[Token(Token = "0x600239E")]
		[Address(RVA = "0xFDBD80", Offset = "0xFDBD80", VA = "0xFDBD80")]
		[Preserve]
		public static void UnityEngine_AudioBehaviour_op_Implicit()
		{
		}

		[Token(Token = "0x600239F")]
		[Address(RVA = "0xFDBE50", Offset = "0xFDBE50", VA = "0xFDBE50")]
		[Preserve]
		public static void UnityEngine_AudioBehaviour_op_Inequality()
		{
		}

		[Token(Token = "0x60023A0")]
		[Address(RVA = "0xFDBF28", Offset = "0xFDBF28", VA = "0xFDBF28")]
		[Preserve]
		public static void UnityEngine_AudioChorusFilter_op_Equality()
		{
		}

		[Token(Token = "0x60023A1")]
		[Address(RVA = "0xFDC000", Offset = "0xFDC000", VA = "0xFDC000")]
		[Preserve]
		public static void UnityEngine_AudioChorusFilter_op_Implicit()
		{
		}

		[Token(Token = "0x60023A2")]
		[Address(RVA = "0xFDC0D0", Offset = "0xFDC0D0", VA = "0xFDC0D0")]
		[Preserve]
		public static void UnityEngine_AudioChorusFilter_op_Inequality()
		{
		}

		[Token(Token = "0x60023A3")]
		[Address(RVA = "0xFDC1A8", Offset = "0xFDC1A8", VA = "0xFDC1A8")]
		[Preserve]
		public static void UnityEngine_AudioClip_op_Equality()
		{
		}

		[Token(Token = "0x60023A4")]
		[Address(RVA = "0xFDC280", Offset = "0xFDC280", VA = "0xFDC280")]
		[Preserve]
		public static void UnityEngine_AudioClip_op_Implicit()
		{
		}

		[Token(Token = "0x60023A5")]
		[Address(RVA = "0xFDC350", Offset = "0xFDC350", VA = "0xFDC350")]
		[Preserve]
		public static void UnityEngine_AudioClip_op_Inequality()
		{
		}

		[Token(Token = "0x60023A6")]
		[Address(RVA = "0xFDC428", Offset = "0xFDC428", VA = "0xFDC428")]
		[Preserve]
		public static void UnityEngine_AudioDistortionFilter_op_Equality()
		{
		}

		[Token(Token = "0x60023A7")]
		[Address(RVA = "0xFDC500", Offset = "0xFDC500", VA = "0xFDC500")]
		[Preserve]
		public static void UnityEngine_AudioDistortionFilter_op_Implicit()
		{
		}

		[Token(Token = "0x60023A8")]
		[Address(RVA = "0xFDC5D0", Offset = "0xFDC5D0", VA = "0xFDC5D0")]
		[Preserve]
		public static void UnityEngine_AudioDistortionFilter_op_Inequality()
		{
		}

		[Token(Token = "0x60023A9")]
		[Address(RVA = "0xFDC6A8", Offset = "0xFDC6A8", VA = "0xFDC6A8")]
		[Preserve]
		public static void UnityEngine_AudioEchoFilter_op_Equality()
		{
		}

		[Token(Token = "0x60023AA")]
		[Address(RVA = "0xFDC780", Offset = "0xFDC780", VA = "0xFDC780")]
		[Preserve]
		public static void UnityEngine_AudioEchoFilter_op_Implicit()
		{
		}

		[Token(Token = "0x60023AB")]
		[Address(RVA = "0xFDC850", Offset = "0xFDC850", VA = "0xFDC850")]
		[Preserve]
		public static void UnityEngine_AudioEchoFilter_op_Inequality()
		{
		}

		[Token(Token = "0x60023AC")]
		[Address(RVA = "0xFDC928", Offset = "0xFDC928", VA = "0xFDC928")]
		[Preserve]
		public static void UnityEngine_AudioHighPassFilter_op_Equality()
		{
		}

		[Token(Token = "0x60023AD")]
		[Address(RVA = "0xFDCA00", Offset = "0xFDCA00", VA = "0xFDCA00")]
		[Preserve]
		public static void UnityEngine_AudioHighPassFilter_op_Implicit()
		{
		}

		[Token(Token = "0x60023AE")]
		[Address(RVA = "0xFDCAD0", Offset = "0xFDCAD0", VA = "0xFDCAD0")]
		[Preserve]
		public static void UnityEngine_AudioHighPassFilter_op_Inequality()
		{
		}

		[Token(Token = "0x60023AF")]
		[Address(RVA = "0xFDCBA8", Offset = "0xFDCBA8", VA = "0xFDCBA8")]
		[Preserve]
		public static void UnityEngine_AudioListener_op_Equality()
		{
		}

		[Token(Token = "0x60023B0")]
		[Address(RVA = "0xFDCC80", Offset = "0xFDCC80", VA = "0xFDCC80")]
		[Preserve]
		public static void UnityEngine_AudioListener_op_Implicit()
		{
		}

		[Token(Token = "0x60023B1")]
		[Address(RVA = "0xFDCD50", Offset = "0xFDCD50", VA = "0xFDCD50")]
		[Preserve]
		public static void UnityEngine_AudioListener_op_Inequality()
		{
		}

		[Token(Token = "0x60023B2")]
		[Address(RVA = "0xFDCE28", Offset = "0xFDCE28", VA = "0xFDCE28")]
		[Preserve]
		public static void UnityEngine_AudioLowPassFilter_op_Equality()
		{
		}

		[Token(Token = "0x60023B3")]
		[Address(RVA = "0xFDCF00", Offset = "0xFDCF00", VA = "0xFDCF00")]
		[Preserve]
		public static void UnityEngine_AudioLowPassFilter_op_Implicit()
		{
		}

		[Token(Token = "0x60023B4")]
		[Address(RVA = "0xFDCFD0", Offset = "0xFDCFD0", VA = "0xFDCFD0")]
		[Preserve]
		public static void UnityEngine_AudioLowPassFilter_op_Inequality()
		{
		}

		[Token(Token = "0x60023B5")]
		[Address(RVA = "0xFDD0A8", Offset = "0xFDD0A8", VA = "0xFDD0A8")]
		[Preserve]
		public static void UnityEngine_AudioReverbFilter_op_Equality()
		{
		}

		[Token(Token = "0x60023B6")]
		[Address(RVA = "0xFDD180", Offset = "0xFDD180", VA = "0xFDD180")]
		[Preserve]
		public static void UnityEngine_AudioReverbFilter_op_Implicit()
		{
		}

		[Token(Token = "0x60023B7")]
		[Address(RVA = "0xFDD250", Offset = "0xFDD250", VA = "0xFDD250")]
		[Preserve]
		public static void UnityEngine_AudioReverbFilter_op_Inequality()
		{
		}

		[Token(Token = "0x60023B8")]
		[Address(RVA = "0xFDD328", Offset = "0xFDD328", VA = "0xFDD328")]
		[Preserve]
		public static void UnityEngine_AudioReverbZone_op_Equality()
		{
		}

		[Token(Token = "0x60023B9")]
		[Address(RVA = "0xFDD400", Offset = "0xFDD400", VA = "0xFDD400")]
		[Preserve]
		public static void UnityEngine_AudioReverbZone_op_Implicit()
		{
		}

		[Token(Token = "0x60023BA")]
		[Address(RVA = "0xFDD4D0", Offset = "0xFDD4D0", VA = "0xFDD4D0")]
		[Preserve]
		public static void UnityEngine_AudioReverbZone_op_Inequality()
		{
		}

		[Token(Token = "0x60023BB")]
		[Address(RVA = "0xFDD5A8", Offset = "0xFDD5A8", VA = "0xFDD5A8")]
		[Preserve]
		public static void UnityEngine_AudioSource_op_Equality()
		{
		}

		[Token(Token = "0x60023BC")]
		[Address(RVA = "0xFDD680", Offset = "0xFDD680", VA = "0xFDD680")]
		[Preserve]
		public static void UnityEngine_AudioSource_op_Implicit()
		{
		}

		[Token(Token = "0x60023BD")]
		[Address(RVA = "0xFDD750", Offset = "0xFDD750", VA = "0xFDD750")]
		[Preserve]
		public static void UnityEngine_AudioSource_op_Inequality()
		{
		}

		[Token(Token = "0x60023BE")]
		[Address(RVA = "0xFDD828", Offset = "0xFDD828", VA = "0xFDD828")]
		[Preserve]
		public static void UnityEngine_Avatar_op_Equality()
		{
		}

		[Token(Token = "0x60023BF")]
		[Address(RVA = "0xFDD900", Offset = "0xFDD900", VA = "0xFDD900")]
		[Preserve]
		public static void UnityEngine_Avatar_op_Implicit()
		{
		}

		[Token(Token = "0x60023C0")]
		[Address(RVA = "0xFDD9D0", Offset = "0xFDD9D0", VA = "0xFDD9D0")]
		[Preserve]
		public static void UnityEngine_Avatar_op_Inequality()
		{
		}

		[Token(Token = "0x60023C1")]
		[Address(RVA = "0xFDDAA8", Offset = "0xFDDAA8", VA = "0xFDDAA8")]
		[Preserve]
		public static void UnityEngine_AvatarMask_op_Equality()
		{
		}

		[Token(Token = "0x60023C2")]
		[Address(RVA = "0xFDDB80", Offset = "0xFDDB80", VA = "0xFDDB80")]
		[Preserve]
		public static void UnityEngine_AvatarMask_op_Implicit()
		{
		}

		[Token(Token = "0x60023C3")]
		[Address(RVA = "0xFDDC50", Offset = "0xFDDC50", VA = "0xFDDC50")]
		[Preserve]
		public static void UnityEngine_AvatarMask_op_Inequality()
		{
		}

		[Token(Token = "0x60023C4")]
		[Address(RVA = "0xFDDD28", Offset = "0xFDDD28", VA = "0xFDDD28")]
		[Preserve]
		public static void UnityEngine_Behaviour_op_Equality()
		{
		}

		[Token(Token = "0x60023C5")]
		[Address(RVA = "0xFDDE00", Offset = "0xFDDE00", VA = "0xFDDE00")]
		[Preserve]
		public static void UnityEngine_Behaviour_op_Implicit()
		{
		}

		[Token(Token = "0x60023C6")]
		[Address(RVA = "0xFDDED0", Offset = "0xFDDED0", VA = "0xFDDED0")]
		[Preserve]
		public static void UnityEngine_Behaviour_op_Inequality()
		{
		}

		[Token(Token = "0x60023C7")]
		[Address(RVA = "0xFDDFA8", Offset = "0xFDDFA8", VA = "0xFDDFA8")]
		[Preserve]
		public static void UnityEngine_BillboardAsset_op_Equality()
		{
		}

		[Token(Token = "0x60023C8")]
		[Address(RVA = "0xFDE080", Offset = "0xFDE080", VA = "0xFDE080")]
		[Preserve]
		public static void UnityEngine_BillboardAsset_op_Implicit()
		{
		}

		[Token(Token = "0x60023C9")]
		[Address(RVA = "0xFDE150", Offset = "0xFDE150", VA = "0xFDE150")]
		[Preserve]
		public static void UnityEngine_BillboardAsset_op_Inequality()
		{
		}

		[Token(Token = "0x60023CA")]
		[Address(RVA = "0xFDE228", Offset = "0xFDE228", VA = "0xFDE228")]
		[Preserve]
		public static void UnityEngine_BillboardRenderer_op_Equality()
		{
		}

		[Token(Token = "0x60023CB")]
		[Address(RVA = "0xFDE300", Offset = "0xFDE300", VA = "0xFDE300")]
		[Preserve]
		public static void UnityEngine_BillboardRenderer_op_Implicit()
		{
		}

		[Token(Token = "0x60023CC")]
		[Address(RVA = "0xFDE3D0", Offset = "0xFDE3D0", VA = "0xFDE3D0")]
		[Preserve]
		public static void UnityEngine_BillboardRenderer_op_Inequality()
		{
		}

		[Token(Token = "0x60023CD")]
		[Address(RVA = "0xFDE4A8", Offset = "0xFDE4A8", VA = "0xFDE4A8")]
		[Preserve]
		public static void UnityEngine_Bounds_op_Equality()
		{
		}

		[Token(Token = "0x60023CE")]
		[Address(RVA = "0xFDE5D8", Offset = "0xFDE5D8", VA = "0xFDE5D8")]
		[Preserve]
		public static void UnityEngine_Bounds_op_Inequality()
		{
		}

		[Token(Token = "0x60023CF")]
		[Address(RVA = "0xFDE708", Offset = "0xFDE708", VA = "0xFDE708")]
		[Preserve]
		public static void UnityEngine_BoxCollider_ctor()
		{
		}

		[Token(Token = "0x60023D0")]
		[Address(RVA = "0xFDE758", Offset = "0xFDE758", VA = "0xFDE758")]
		[Preserve]
		public static void UnityEngine_BoxCollider_op_Equality()
		{
		}

		[Token(Token = "0x60023D1")]
		[Address(RVA = "0xFDE830", Offset = "0xFDE830", VA = "0xFDE830")]
		[Preserve]
		public static void UnityEngine_BoxCollider_op_Implicit()
		{
		}

		[Token(Token = "0x60023D2")]
		[Address(RVA = "0xFDE900", Offset = "0xFDE900", VA = "0xFDE900")]
		[Preserve]
		public static void UnityEngine_BoxCollider_op_Inequality()
		{
		}

		[Token(Token = "0x60023D3")]
		[Address(RVA = "0xFDE9D8", Offset = "0xFDE9D8", VA = "0xFDE9D8")]
		[Preserve]
		public static void UnityEngine_BoxCollider2D_op_Equality()
		{
		}

		[Token(Token = "0x60023D4")]
		[Address(RVA = "0xFDEAB0", Offset = "0xFDEAB0", VA = "0xFDEAB0")]
		[Preserve]
		public static void UnityEngine_BoxCollider2D_op_Implicit()
		{
		}

		[Token(Token = "0x60023D5")]
		[Address(RVA = "0xFDEB80", Offset = "0xFDEB80", VA = "0xFDEB80")]
		[Preserve]
		public static void UnityEngine_BoxCollider2D_op_Inequality()
		{
		}

		[Token(Token = "0x60023D6")]
		[Address(RVA = "0xFDEC58", Offset = "0xFDEC58", VA = "0xFDEC58")]
		[Preserve]
		public static void UnityEngine_BuoyancyEffector2D_op_Equality()
		{
		}

		[Token(Token = "0x60023D7")]
		[Address(RVA = "0xFDED30", Offset = "0xFDED30", VA = "0xFDED30")]
		[Preserve]
		public static void UnityEngine_BuoyancyEffector2D_op_Implicit()
		{
		}

		[Token(Token = "0x60023D8")]
		[Address(RVA = "0xFDEE00", Offset = "0xFDEE00", VA = "0xFDEE00")]
		[Preserve]
		public static void UnityEngine_BuoyancyEffector2D_op_Inequality()
		{
		}

		[Token(Token = "0x60023D9")]
		[Address(RVA = "0xFDEED8", Offset = "0xFDEED8", VA = "0xFDEED8")]
		[Preserve]
		public static void UnityEngine_Camera_ctor()
		{
		}

		[Token(Token = "0x60023DA")]
		[Address(RVA = "0xFDEF28", Offset = "0xFDEF28", VA = "0xFDEF28")]
		[Preserve]
		public static void UnityEngine_Camera_op_Equality()
		{
		}

		[Token(Token = "0x60023DB")]
		[Address(RVA = "0xFDF000", Offset = "0xFDF000", VA = "0xFDF000")]
		[Preserve]
		public static void UnityEngine_Camera_op_Implicit()
		{
		}

		[Token(Token = "0x60023DC")]
		[Address(RVA = "0xFDF0D0", Offset = "0xFDF0D0", VA = "0xFDF0D0")]
		[Preserve]
		public static void UnityEngine_Camera_op_Inequality()
		{
		}

		[Token(Token = "0x60023DD")]
		[Address(RVA = "0xFDF1A8", Offset = "0xFDF1A8", VA = "0xFDF1A8")]
		[Preserve]
		public static void UnityEngine_Canvas_op_Equality()
		{
		}

		[Token(Token = "0x60023DE")]
		[Address(RVA = "0xFDF280", Offset = "0xFDF280", VA = "0xFDF280")]
		[Preserve]
		public static void UnityEngine_Canvas_op_Implicit()
		{
		}

		[Token(Token = "0x60023DF")]
		[Address(RVA = "0xFDF350", Offset = "0xFDF350", VA = "0xFDF350")]
		[Preserve]
		public static void UnityEngine_Canvas_op_Inequality()
		{
		}

		[Token(Token = "0x60023E0")]
		[Address(RVA = "0xFDF428", Offset = "0xFDF428", VA = "0xFDF428")]
		[Preserve]
		public static void UnityEngine_CanvasGroup_op_Equality()
		{
		}

		[Token(Token = "0x60023E1")]
		[Address(RVA = "0xFDF500", Offset = "0xFDF500", VA = "0xFDF500")]
		[Preserve]
		public static void UnityEngine_CanvasGroup_op_Implicit()
		{
		}

		[Token(Token = "0x60023E2")]
		[Address(RVA = "0xFDF5D0", Offset = "0xFDF5D0", VA = "0xFDF5D0")]
		[Preserve]
		public static void UnityEngine_CanvasGroup_op_Inequality()
		{
		}

		[Token(Token = "0x60023E3")]
		[Address(RVA = "0xFDF6A8", Offset = "0xFDF6A8", VA = "0xFDF6A8")]
		[Preserve]
		public static void UnityEngine_CanvasRenderer_op_Equality()
		{
		}

		[Token(Token = "0x60023E4")]
		[Address(RVA = "0xFDF780", Offset = "0xFDF780", VA = "0xFDF780")]
		[Preserve]
		public static void UnityEngine_CanvasRenderer_op_Implicit()
		{
		}

		[Token(Token = "0x60023E5")]
		[Address(RVA = "0xFDF850", Offset = "0xFDF850", VA = "0xFDF850")]
		[Preserve]
		public static void UnityEngine_CanvasRenderer_op_Inequality()
		{
		}

		[Token(Token = "0x60023E6")]
		[Address(RVA = "0xFDF928", Offset = "0xFDF928", VA = "0xFDF928")]
		[Preserve]
		public static void UnityEngine_CapsuleCollider_op_Equality()
		{
		}

		[Token(Token = "0x60023E7")]
		[Address(RVA = "0xFDFA00", Offset = "0xFDFA00", VA = "0xFDFA00")]
		[Preserve]
		public static void UnityEngine_CapsuleCollider_op_Implicit()
		{
		}

		[Token(Token = "0x60023E8")]
		[Address(RVA = "0xFDFAD0", Offset = "0xFDFAD0", VA = "0xFDFAD0")]
		[Preserve]
		public static void UnityEngine_CapsuleCollider_op_Inequality()
		{
		}

		[Token(Token = "0x60023E9")]
		[Address(RVA = "0xFDFBA8", Offset = "0xFDFBA8", VA = "0xFDFBA8")]
		[Preserve]
		public static void UnityEngine_CapsuleCollider2D_op_Equality()
		{
		}

		[Token(Token = "0x60023EA")]
		[Address(RVA = "0xFDFC80", Offset = "0xFDFC80", VA = "0xFDFC80")]
		[Preserve]
		public static void UnityEngine_CapsuleCollider2D_op_Implicit()
		{
		}

		[Token(Token = "0x60023EB")]
		[Address(RVA = "0xFDFD50", Offset = "0xFDFD50", VA = "0xFDFD50")]
		[Preserve]
		public static void UnityEngine_CapsuleCollider2D_op_Inequality()
		{
		}

		[Token(Token = "0x60023EC")]
		[Address(RVA = "0xFDFE28", Offset = "0xFDFE28", VA = "0xFDFE28")]
		[Preserve]
		public static void UnityEngine_CharacterController_op_Equality()
		{
		}

		[Token(Token = "0x60023ED")]
		[Address(RVA = "0xFDFF00", Offset = "0xFDFF00", VA = "0xFDFF00")]
		[Preserve]
		public static void UnityEngine_CharacterController_op_Implicit()
		{
		}

		[Token(Token = "0x60023EE")]
		[Address(RVA = "0xFDFFD0", Offset = "0xFDFFD0", VA = "0xFDFFD0")]
		[Preserve]
		public static void UnityEngine_CharacterController_op_Inequality()
		{
		}

		[Token(Token = "0x60023EF")]
		[Address(RVA = "0xFE00A8", Offset = "0xFE00A8", VA = "0xFE00A8")]
		[Preserve]
		public static void UnityEngine_CharacterJoint_op_Equality()
		{
		}

		[Token(Token = "0x60023F0")]
		[Address(RVA = "0xFE0180", Offset = "0xFE0180", VA = "0xFE0180")]
		[Preserve]
		public static void UnityEngine_CharacterJoint_op_Implicit()
		{
		}

		[Token(Token = "0x60023F1")]
		[Address(RVA = "0xFE0250", Offset = "0xFE0250", VA = "0xFE0250")]
		[Preserve]
		public static void UnityEngine_CharacterJoint_op_Inequality()
		{
		}

		[Token(Token = "0x60023F2")]
		[Address(RVA = "0xFE0328", Offset = "0xFE0328", VA = "0xFE0328")]
		[Preserve]
		public static void UnityEngine_CircleCollider2D_op_Equality()
		{
		}

		[Token(Token = "0x60023F3")]
		[Address(RVA = "0xFE0400", Offset = "0xFE0400", VA = "0xFE0400")]
		[Preserve]
		public static void UnityEngine_CircleCollider2D_op_Implicit()
		{
		}

		[Token(Token = "0x60023F4")]
		[Address(RVA = "0xFE04D0", Offset = "0xFE04D0", VA = "0xFE04D0")]
		[Preserve]
		public static void UnityEngine_CircleCollider2D_op_Inequality()
		{
		}

		[Token(Token = "0x60023F5")]
		[Address(RVA = "0xFE05A8", Offset = "0xFE05A8", VA = "0xFE05A8")]
		[Preserve]
		public static void UnityEngine_Cloth_op_Equality()
		{
		}

		[Token(Token = "0x60023F6")]
		[Address(RVA = "0xFE0680", Offset = "0xFE0680", VA = "0xFE0680")]
		[Preserve]
		public static void UnityEngine_Cloth_op_Implicit()
		{
		}

		[Token(Token = "0x60023F7")]
		[Address(RVA = "0xFE0750", Offset = "0xFE0750", VA = "0xFE0750")]
		[Preserve]
		public static void UnityEngine_Cloth_op_Inequality()
		{
		}

		[Token(Token = "0x60023F8")]
		[Address(RVA = "0xFE0828", Offset = "0xFE0828", VA = "0xFE0828")]
		[Preserve]
		public static void UnityEngine_Collider_op_Equality()
		{
		}

		[Token(Token = "0x60023F9")]
		[Address(RVA = "0xFE0900", Offset = "0xFE0900", VA = "0xFE0900")]
		[Preserve]
		public static void UnityEngine_Collider_op_Implicit()
		{
		}

		[Token(Token = "0x60023FA")]
		[Address(RVA = "0xFE09D0", Offset = "0xFE09D0", VA = "0xFE09D0")]
		[Preserve]
		public static void UnityEngine_Collider_op_Inequality()
		{
		}

		[Token(Token = "0x60023FB")]
		[Address(RVA = "0xFE0AA8", Offset = "0xFE0AA8", VA = "0xFE0AA8")]
		[Preserve]
		public static void UnityEngine_Collider2D_op_Equality()
		{
		}

		[Token(Token = "0x60023FC")]
		[Address(RVA = "0xFE0B80", Offset = "0xFE0B80", VA = "0xFE0B80")]
		[Preserve]
		public static void UnityEngine_Collider2D_op_Implicit()
		{
		}

		[Token(Token = "0x60023FD")]
		[Address(RVA = "0xFE0C50", Offset = "0xFE0C50", VA = "0xFE0C50")]
		[Preserve]
		public static void UnityEngine_Collider2D_op_Inequality()
		{
		}

		[Token(Token = "0x60023FE")]
		[Address(RVA = "0xFE0D28", Offset = "0xFE0D28", VA = "0xFE0D28")]
		[Preserve]
		public static void UnityEngine_Color_op_Addition()
		{
		}

		[Token(Token = "0x60023FF")]
		[Address(RVA = "0xFE0E10", Offset = "0xFE0E10", VA = "0xFE0E10")]
		[Preserve]
		public static void UnityEngine_Color_op_Division()
		{
		}

		[Token(Token = "0x6002400")]
		[Address(RVA = "0xFE0F0C", Offset = "0xFE0F0C", VA = "0xFE0F0C")]
		[Preserve]
		public static void UnityEngine_Color_op_Equality()
		{
		}

		[Token(Token = "0x6002401")]
		[Address(RVA = "0xFE0FF4", Offset = "0xFE0FF4", VA = "0xFE0FF4")]
		[Preserve]
		public static void UnityEngine_Color_op_Implicit()
		{
		}

		[Token(Token = "0x6002402")]
		[Address(RVA = "0xFE10C4", Offset = "0xFE10C4", VA = "0xFE10C4")]
		[Preserve]
		public static void UnityEngine_Color_op_Implicit_0()
		{
		}

		[Token(Token = "0x6002403")]
		[Address(RVA = "0xFE1194", Offset = "0xFE1194", VA = "0xFE1194")]
		[Preserve]
		public static void UnityEngine_Color_op_Inequality()
		{
		}

		[Token(Token = "0x6002404")]
		[Address(RVA = "0xFE127C", Offset = "0xFE127C", VA = "0xFE127C")]
		[Preserve]
		public static void UnityEngine_Color_op_Multiply()
		{
		}

		[Token(Token = "0x6002405")]
		[Address(RVA = "0xFE1364", Offset = "0xFE1364", VA = "0xFE1364")]
		[Preserve]
		public static void UnityEngine_Color_op_Multiply_0()
		{
		}

		[Token(Token = "0x6002406")]
		[Address(RVA = "0xFE1460", Offset = "0xFE1460", VA = "0xFE1460")]
		[Preserve]
		public static void UnityEngine_Color_op_Multiply_1()
		{
		}

		[Token(Token = "0x6002407")]
		[Address(RVA = "0xFE155C", Offset = "0xFE155C", VA = "0xFE155C")]
		[Preserve]
		public static void UnityEngine_Color_op_Subtraction()
		{
		}

		[Token(Token = "0x6002408")]
		[Address(RVA = "0xFE1644", Offset = "0xFE1644", VA = "0xFE1644")]
		[Preserve]
		public static void UnityEngine_Component_op_Equality()
		{
		}

		[Token(Token = "0x6002409")]
		[Address(RVA = "0xFE171C", Offset = "0xFE171C", VA = "0xFE171C")]
		[Preserve]
		public static void UnityEngine_Component_op_Implicit()
		{
		}

		[Token(Token = "0x600240A")]
		[Address(RVA = "0xFE17EC", Offset = "0xFE17EC", VA = "0xFE17EC")]
		[Preserve]
		public static void UnityEngine_Component_op_Inequality()
		{
		}

		[Token(Token = "0x600240B")]
		[Address(RVA = "0xFE18C4", Offset = "0xFE18C4", VA = "0xFE18C4")]
		[Preserve]
		public static void UnityEngine_CompositeCollider2D_op_Equality()
		{
		}

		[Token(Token = "0x600240C")]
		[Address(RVA = "0xFE199C", Offset = "0xFE199C", VA = "0xFE199C")]
		[Preserve]
		public static void UnityEngine_CompositeCollider2D_op_Implicit()
		{
		}

		[Token(Token = "0x600240D")]
		[Address(RVA = "0xFE1A6C", Offset = "0xFE1A6C", VA = "0xFE1A6C")]
		[Preserve]
		public static void UnityEngine_CompositeCollider2D_op_Inequality()
		{
		}

		[Token(Token = "0x600240E")]
		[Address(RVA = "0xFE1B44", Offset = "0xFE1B44", VA = "0xFE1B44")]
		[Preserve]
		public static void UnityEngine_ComputeShader_op_Equality()
		{
		}

		[Token(Token = "0x600240F")]
		[Address(RVA = "0xFE1C1C", Offset = "0xFE1C1C", VA = "0xFE1C1C")]
		[Preserve]
		public static void UnityEngine_ComputeShader_op_Implicit()
		{
		}

		[Token(Token = "0x6002410")]
		[Address(RVA = "0xFE1CEC", Offset = "0xFE1CEC", VA = "0xFE1CEC")]
		[Preserve]
		public static void UnityEngine_ComputeShader_op_Inequality()
		{
		}

		[Token(Token = "0x6002411")]
		[Address(RVA = "0xFE1DC4", Offset = "0xFE1DC4", VA = "0xFE1DC4")]
		[Preserve]
		public static void UnityEngine_ConfigurableJoint_op_Equality()
		{
		}

		[Token(Token = "0x6002412")]
		[Address(RVA = "0xFE1E9C", Offset = "0xFE1E9C", VA = "0xFE1E9C")]
		[Preserve]
		public static void UnityEngine_ConfigurableJoint_op_Implicit()
		{
		}

		[Token(Token = "0x6002413")]
		[Address(RVA = "0xFE1F6C", Offset = "0xFE1F6C", VA = "0xFE1F6C")]
		[Preserve]
		public static void UnityEngine_ConfigurableJoint_op_Inequality()
		{
		}

		[Token(Token = "0x6002414")]
		[Address(RVA = "0xFE2044", Offset = "0xFE2044", VA = "0xFE2044")]
		[Preserve]
		public static void UnityEngine_ConstantForce_op_Equality()
		{
		}

		[Token(Token = "0x6002415")]
		[Address(RVA = "0xFE211C", Offset = "0xFE211C", VA = "0xFE211C")]
		[Preserve]
		public static void UnityEngine_ConstantForce_op_Implicit()
		{
		}

		[Token(Token = "0x6002416")]
		[Address(RVA = "0xFE21EC", Offset = "0xFE21EC", VA = "0xFE21EC")]
		[Preserve]
		public static void UnityEngine_ConstantForce_op_Inequality()
		{
		}

		[Token(Token = "0x6002417")]
		[Address(RVA = "0xFE22C4", Offset = "0xFE22C4", VA = "0xFE22C4")]
		[Preserve]
		public static void UnityEngine_ConstantForce2D_op_Equality()
		{
		}

		[Token(Token = "0x6002418")]
		[Address(RVA = "0xFE239C", Offset = "0xFE239C", VA = "0xFE239C")]
		[Preserve]
		public static void UnityEngine_ConstantForce2D_op_Implicit()
		{
		}

		[Token(Token = "0x6002419")]
		[Address(RVA = "0xFE246C", Offset = "0xFE246C", VA = "0xFE246C")]
		[Preserve]
		public static void UnityEngine_ConstantForce2D_op_Inequality()
		{
		}

		[Token(Token = "0x600241A")]
		[Address(RVA = "0xFE2544", Offset = "0xFE2544", VA = "0xFE2544")]
		[Preserve]
		public static void UnityEngine_Cubemap_op_Equality()
		{
		}

		[Token(Token = "0x600241B")]
		[Address(RVA = "0xFE261C", Offset = "0xFE261C", VA = "0xFE261C")]
		[Preserve]
		public static void UnityEngine_Cubemap_op_Implicit()
		{
		}

		[Token(Token = "0x600241C")]
		[Address(RVA = "0xFE26EC", Offset = "0xFE26EC", VA = "0xFE26EC")]
		[Preserve]
		public static void UnityEngine_Cubemap_op_Inequality()
		{
		}

		[Token(Token = "0x600241D")]
		[Address(RVA = "0xFE27C4", Offset = "0xFE27C4", VA = "0xFE27C4")]
		[Preserve]
		public static void UnityEngine_CubemapArray_op_Equality()
		{
		}

		[Token(Token = "0x600241E")]
		[Address(RVA = "0xFE289C", Offset = "0xFE289C", VA = "0xFE289C")]
		[Preserve]
		public static void UnityEngine_CubemapArray_op_Implicit()
		{
		}

		[Token(Token = "0x600241F")]
		[Address(RVA = "0xFE296C", Offset = "0xFE296C", VA = "0xFE296C")]
		[Preserve]
		public static void UnityEngine_CubemapArray_op_Inequality()
		{
		}

		[Token(Token = "0x6002420")]
		[Address(RVA = "0xFE2A44", Offset = "0xFE2A44", VA = "0xFE2A44")]
		[Preserve]
		public static void UnityEngine_CustomCollider2D_op_Equality()
		{
		}

		[Token(Token = "0x6002421")]
		[Address(RVA = "0xFE2B1C", Offset = "0xFE2B1C", VA = "0xFE2B1C")]
		[Preserve]
		public static void UnityEngine_CustomCollider2D_op_Implicit()
		{
		}

		[Token(Token = "0x6002422")]
		[Address(RVA = "0xFE2BEC", Offset = "0xFE2BEC", VA = "0xFE2BEC")]
		[Preserve]
		public static void UnityEngine_CustomCollider2D_op_Inequality()
		{
		}

		[Token(Token = "0x6002423")]
		[Address(RVA = "0xFE2CC4", Offset = "0xFE2CC4", VA = "0xFE2CC4")]
		[Preserve]
		public static void UnityEngine_CustomRenderTexture_op_Equality()
		{
		}

		[Token(Token = "0x6002424")]
		[Address(RVA = "0xFE2D9C", Offset = "0xFE2D9C", VA = "0xFE2D9C")]
		[Preserve]
		public static void UnityEngine_CustomRenderTexture_op_Implicit()
		{
		}

		[Token(Token = "0x6002425")]
		[Address(RVA = "0xFE2E6C", Offset = "0xFE2E6C", VA = "0xFE2E6C")]
		[Preserve]
		public static void UnityEngine_CustomRenderTexture_op_Inequality()
		{
		}

		[Token(Token = "0x6002426")]
		[Address(RVA = "0xFE2F44", Offset = "0xFE2F44", VA = "0xFE2F44")]
		[Preserve]
		public static void UnityEngine_Debug_Log()
		{
		}

		[Token(Token = "0x6002427")]
		[Address(RVA = "0xFE3014", Offset = "0xFE3014", VA = "0xFE3014")]
		[Preserve]
		public static void UnityEngine_Debug_LogError()
		{
		}

		[Token(Token = "0x6002428")]
		[Address(RVA = "0xFE30E4", Offset = "0xFE30E4", VA = "0xFE30E4")]
		[Preserve]
		public static void UnityEngine_DistanceJoint2D_op_Equality()
		{
		}

		[Token(Token = "0x6002429")]
		[Address(RVA = "0xFE31BC", Offset = "0xFE31BC", VA = "0xFE31BC")]
		[Preserve]
		public static void UnityEngine_DistanceJoint2D_op_Implicit()
		{
		}

		[Token(Token = "0x600242A")]
		[Address(RVA = "0xFE328C", Offset = "0xFE328C", VA = "0xFE328C")]
		[Preserve]
		public static void UnityEngine_DistanceJoint2D_op_Inequality()
		{
		}

		[Token(Token = "0x600242B")]
		[Address(RVA = "0xFE3364", Offset = "0xFE3364", VA = "0xFE3364")]
		[Preserve]
		public static void UnityEngine_EdgeCollider2D_op_Equality()
		{
		}

		[Token(Token = "0x600242C")]
		[Address(RVA = "0xFE343C", Offset = "0xFE343C", VA = "0xFE343C")]
		[Preserve]
		public static void UnityEngine_EdgeCollider2D_op_Implicit()
		{
		}

		[Token(Token = "0x600242D")]
		[Address(RVA = "0xFE350C", Offset = "0xFE350C", VA = "0xFE350C")]
		[Preserve]
		public static void UnityEngine_EdgeCollider2D_op_Inequality()
		{
		}

		[Token(Token = "0x600242E")]
		[Address(RVA = "0xFE35E4", Offset = "0xFE35E4", VA = "0xFE35E4")]
		[Preserve]
		public static void UnityEngine_Effector2D_op_Equality()
		{
		}

		[Token(Token = "0x600242F")]
		[Address(RVA = "0xFE36BC", Offset = "0xFE36BC", VA = "0xFE36BC")]
		[Preserve]
		public static void UnityEngine_Effector2D_op_Implicit()
		{
		}

		[Token(Token = "0x6002430")]
		[Address(RVA = "0xFE378C", Offset = "0xFE378C", VA = "0xFE378C")]
		[Preserve]
		public static void UnityEngine_Effector2D_op_Inequality()
		{
		}

		[Token(Token = "0x6002431")]
		[Address(RVA = "0xFE3864", Offset = "0xFE3864", VA = "0xFE3864")]
		[Preserve]
		public static void UnityEngine_EventSystems_BaseInput_op_Equality()
		{
		}

		[Token(Token = "0x6002432")]
		[Address(RVA = "0xFE393C", Offset = "0xFE393C", VA = "0xFE393C")]
		[Preserve]
		public static void UnityEngine_EventSystems_BaseInput_op_Implicit()
		{
		}

		[Token(Token = "0x6002433")]
		[Address(RVA = "0xFE3A0C", Offset = "0xFE3A0C", VA = "0xFE3A0C")]
		[Preserve]
		public static void UnityEngine_EventSystems_BaseInput_op_Inequality()
		{
		}

		[Token(Token = "0x6002434")]
		[Address(RVA = "0xFE3AE4", Offset = "0xFE3AE4", VA = "0xFE3AE4")]
		[Preserve]
		public static void UnityEngine_EventSystems_EventSystem_op_Equality()
		{
		}

		[Token(Token = "0x6002435")]
		[Address(RVA = "0xFE3BBC", Offset = "0xFE3BBC", VA = "0xFE3BBC")]
		[Preserve]
		public static void UnityEngine_EventSystems_EventSystem_op_Implicit()
		{
		}

		[Token(Token = "0x6002436")]
		[Address(RVA = "0xFE3C8C", Offset = "0xFE3C8C", VA = "0xFE3C8C")]
		[Preserve]
		public static void UnityEngine_EventSystems_EventSystem_op_Inequality()
		{
		}

		[Token(Token = "0x6002437")]
		[Address(RVA = "0xFE3D64", Offset = "0xFE3D64", VA = "0xFE3D64")]
		[Preserve]
		public static void UnityEngine_EventSystems_EventTrigger_op_Equality()
		{
		}

		[Token(Token = "0x6002438")]
		[Address(RVA = "0xFE3E3C", Offset = "0xFE3E3C", VA = "0xFE3E3C")]
		[Preserve]
		public static void UnityEngine_EventSystems_EventTrigger_op_Implicit()
		{
		}

		[Token(Token = "0x6002439")]
		[Address(RVA = "0xFE3F0C", Offset = "0xFE3F0C", VA = "0xFE3F0C")]
		[Preserve]
		public static void UnityEngine_EventSystems_EventTrigger_op_Inequality()
		{
		}

		[Token(Token = "0x600243A")]
		[Address(RVA = "0xFE3FE4", Offset = "0xFE3FE4", VA = "0xFE3FE4")]
		[Preserve]
		public static void UnityEngine_EventSystems_Physics2DRaycaster_op_Equality()
		{
		}

		[Token(Token = "0x600243B")]
		[Address(RVA = "0xFE40BC", Offset = "0xFE40BC", VA = "0xFE40BC")]
		[Preserve]
		public static void UnityEngine_EventSystems_Physics2DRaycaster_op_Implicit()
		{
		}

		[Token(Token = "0x600243C")]
		[Address(RVA = "0xFE418C", Offset = "0xFE418C", VA = "0xFE418C")]
		[Preserve]
		public static void UnityEngine_EventSystems_Physics2DRaycaster_op_Inequality()
		{
		}

		[Token(Token = "0x600243D")]
		[Address(RVA = "0xFE4264", Offset = "0xFE4264", VA = "0xFE4264")]
		[Preserve]
		public static void UnityEngine_EventSystems_PhysicsRaycaster_op_Equality()
		{
		}

		[Token(Token = "0x600243E")]
		[Address(RVA = "0xFE433C", Offset = "0xFE433C", VA = "0xFE433C")]
		[Preserve]
		public static void UnityEngine_EventSystems_PhysicsRaycaster_op_Implicit()
		{
		}

		[Token(Token = "0x600243F")]
		[Address(RVA = "0xFE440C", Offset = "0xFE440C", VA = "0xFE440C")]
		[Preserve]
		public static void UnityEngine_EventSystems_PhysicsRaycaster_op_Inequality()
		{
		}

		[Token(Token = "0x6002440")]
		[Address(RVA = "0xFE44E4", Offset = "0xFE44E4", VA = "0xFE44E4")]
		[Preserve]
		public static void UnityEngine_EventSystems_StandaloneInputModule_op_Equality()
		{
		}

		[Token(Token = "0x6002441")]
		[Address(RVA = "0xFE45BC", Offset = "0xFE45BC", VA = "0xFE45BC")]
		[Preserve]
		public static void UnityEngine_EventSystems_StandaloneInputModule_op_Implicit()
		{
		}

		[Token(Token = "0x6002442")]
		[Address(RVA = "0xFE468C", Offset = "0xFE468C", VA = "0xFE468C")]
		[Preserve]
		public static void UnityEngine_EventSystems_StandaloneInputModule_op_Inequality()
		{
		}

		[Token(Token = "0x6002443")]
		[Address(RVA = "0xFE4764", Offset = "0xFE4764", VA = "0xFE4764")]
		[Preserve]
		public static void UnityEngine_Experimental_Rendering_RayTracingShader_op_Equality()
		{
		}

		[Token(Token = "0x6002444")]
		[Address(RVA = "0xFE483C", Offset = "0xFE483C", VA = "0xFE483C")]
		[Preserve]
		public static void UnityEngine_Experimental_Rendering_RayTracingShader_op_Implicit()
		{
		}

		[Token(Token = "0x6002445")]
		[Address(RVA = "0xFE490C", Offset = "0xFE490C", VA = "0xFE490C")]
		[Preserve]
		public static void UnityEngine_Experimental_Rendering_RayTracingShader_op_Inequality()
		{
		}

		[Token(Token = "0x6002446")]
		[Address(RVA = "0xFE49E4", Offset = "0xFE49E4", VA = "0xFE49E4")]
		[Preserve]
		public static void UnityEngine_FixedJoint_op_Equality()
		{
		}

		[Token(Token = "0x6002447")]
		[Address(RVA = "0xFE4ABC", Offset = "0xFE4ABC", VA = "0xFE4ABC")]
		[Preserve]
		public static void UnityEngine_FixedJoint_op_Implicit()
		{
		}

		[Token(Token = "0x6002448")]
		[Address(RVA = "0xFE4B8C", Offset = "0xFE4B8C", VA = "0xFE4B8C")]
		[Preserve]
		public static void UnityEngine_FixedJoint_op_Inequality()
		{
		}

		[Token(Token = "0x6002449")]
		[Address(RVA = "0xFE4C64", Offset = "0xFE4C64", VA = "0xFE4C64")]
		[Preserve]
		public static void UnityEngine_FixedJoint2D_op_Equality()
		{
		}

		[Token(Token = "0x600244A")]
		[Address(RVA = "0xFE4D3C", Offset = "0xFE4D3C", VA = "0xFE4D3C")]
		[Preserve]
		public static void UnityEngine_FixedJoint2D_op_Implicit()
		{
		}

		[Token(Token = "0x600244B")]
		[Address(RVA = "0xFE4E0C", Offset = "0xFE4E0C", VA = "0xFE4E0C")]
		[Preserve]
		public static void UnityEngine_FixedJoint2D_op_Inequality()
		{
		}

		[Token(Token = "0x600244C")]
		[Address(RVA = "0xFE4EE4", Offset = "0xFE4EE4", VA = "0xFE4EE4")]
		[Preserve]
		public static void UnityEngine_Flare_op_Equality()
		{
		}

		[Token(Token = "0x600244D")]
		[Address(RVA = "0xFE4FBC", Offset = "0xFE4FBC", VA = "0xFE4FBC")]
		[Preserve]
		public static void UnityEngine_Flare_op_Implicit()
		{
		}

		[Token(Token = "0x600244E")]
		[Address(RVA = "0xFE508C", Offset = "0xFE508C", VA = "0xFE508C")]
		[Preserve]
		public static void UnityEngine_Flare_op_Inequality()
		{
		}

		[Token(Token = "0x600244F")]
		[Address(RVA = "0xFE5164", Offset = "0xFE5164", VA = "0xFE5164")]
		[Preserve]
		public static void UnityEngine_FlareLayer_op_Equality()
		{
		}

		[Token(Token = "0x6002450")]
		[Address(RVA = "0xFE523C", Offset = "0xFE523C", VA = "0xFE523C")]
		[Preserve]
		public static void UnityEngine_FlareLayer_op_Implicit()
		{
		}

		[Token(Token = "0x6002451")]
		[Address(RVA = "0xFE530C", Offset = "0xFE530C", VA = "0xFE530C")]
		[Preserve]
		public static void UnityEngine_FlareLayer_op_Inequality()
		{
		}

		[Token(Token = "0x6002452")]
		[Address(RVA = "0xFE53E4", Offset = "0xFE53E4", VA = "0xFE53E4")]
		[Preserve]
		public static void UnityEngine_Font_op_Equality()
		{
		}

		[Token(Token = "0x6002453")]
		[Address(RVA = "0xFE54BC", Offset = "0xFE54BC", VA = "0xFE54BC")]
		[Preserve]
		public static void UnityEngine_Font_op_Implicit()
		{
		}

		[Token(Token = "0x6002454")]
		[Address(RVA = "0xFE558C", Offset = "0xFE558C", VA = "0xFE558C")]
		[Preserve]
		public static void UnityEngine_Font_op_Inequality()
		{
		}

		[Token(Token = "0x6002455")]
		[Address(RVA = "0xFE5664", Offset = "0xFE5664", VA = "0xFE5664")]
		[Preserve]
		public static void UnityEngine_FrictionJoint2D_op_Equality()
		{
		}

		[Token(Token = "0x6002456")]
		[Address(RVA = "0xFE573C", Offset = "0xFE573C", VA = "0xFE573C")]
		[Preserve]
		public static void UnityEngine_FrictionJoint2D_op_Implicit()
		{
		}

		[Token(Token = "0x6002457")]
		[Address(RVA = "0xFE580C", Offset = "0xFE580C", VA = "0xFE580C")]
		[Preserve]
		public static void UnityEngine_FrictionJoint2D_op_Inequality()
		{
		}

		[Token(Token = "0x6002458")]
		[Address(RVA = "0xFE58E4", Offset = "0xFE58E4", VA = "0xFE58E4")]
		[Preserve]
		public static void UnityEngine_GameObject_ctor()
		{
		}

		[Token(Token = "0x6002459")]
		[Address(RVA = "0xFE5934", Offset = "0xFE5934", VA = "0xFE5934")]
		[Preserve]
		public static void UnityEngine_GameObject_op_Equality()
		{
		}

		[Token(Token = "0x600245A")]
		[Address(RVA = "0xFE5A0C", Offset = "0xFE5A0C", VA = "0xFE5A0C")]
		[Preserve]
		public static void UnityEngine_GameObject_op_Implicit()
		{
		}

		[Token(Token = "0x600245B")]
		[Address(RVA = "0xFE5ADC", Offset = "0xFE5ADC", VA = "0xFE5ADC")]
		[Preserve]
		public static void UnityEngine_GameObject_op_Inequality()
		{
		}

		[Token(Token = "0x600245C")]
		[Address(RVA = "0xFE5BB4", Offset = "0xFE5BB4", VA = "0xFE5BB4")]
		[Preserve]
		public static void UnityEngine_GameObject_SetActive()
		{
		}

		[Token(Token = "0x600245D")]
		[Address(RVA = "0xFE5BF4", Offset = "0xFE5BF4", VA = "0xFE5BF4")]
		[Preserve]
		public static void UnityEngine_GUISkin_op_Equality()
		{
		}

		[Token(Token = "0x600245E")]
		[Address(RVA = "0xFE5CCC", Offset = "0xFE5CCC", VA = "0xFE5CCC")]
		[Preserve]
		public static void UnityEngine_GUISkin_op_Implicit()
		{
		}

		[Token(Token = "0x600245F")]
		[Address(RVA = "0xFE5D9C", Offset = "0xFE5D9C", VA = "0xFE5D9C")]
		[Preserve]
		public static void UnityEngine_GUISkin_op_Inequality()
		{
		}

		[Token(Token = "0x6002460")]
		[Address(RVA = "0xFE5E74", Offset = "0xFE5E74", VA = "0xFE5E74")]
		[Preserve]
		public static void UnityEngine_HingeJoint_op_Equality()
		{
		}

		[Token(Token = "0x6002461")]
		[Address(RVA = "0xFE5F4C", Offset = "0xFE5F4C", VA = "0xFE5F4C")]
		[Preserve]
		public static void UnityEngine_HingeJoint_op_Implicit()
		{
		}

		[Token(Token = "0x6002462")]
		[Address(RVA = "0xFE601C", Offset = "0xFE601C", VA = "0xFE601C")]
		[Preserve]
		public static void UnityEngine_HingeJoint_op_Inequality()
		{
		}

		[Token(Token = "0x6002463")]
		[Address(RVA = "0xFE60F4", Offset = "0xFE60F4", VA = "0xFE60F4")]
		[Preserve]
		public static void UnityEngine_HingeJoint2D_op_Equality()
		{
		}

		[Token(Token = "0x6002464")]
		[Address(RVA = "0xFE61CC", Offset = "0xFE61CC", VA = "0xFE61CC")]
		[Preserve]
		public static void UnityEngine_HingeJoint2D_op_Implicit()
		{
		}

		[Token(Token = "0x6002465")]
		[Address(RVA = "0xFE629C", Offset = "0xFE629C", VA = "0xFE629C")]
		[Preserve]
		public static void UnityEngine_HingeJoint2D_op_Inequality()
		{
		}

		[Token(Token = "0x6002466")]
		[Address(RVA = "0xFE6374", Offset = "0xFE6374", VA = "0xFE6374")]
		[Preserve]
		public static void UnityEngine_Joint_op_Equality()
		{
		}

		[Token(Token = "0x6002467")]
		[Address(RVA = "0xFE644C", Offset = "0xFE644C", VA = "0xFE644C")]
		[Preserve]
		public static void UnityEngine_Joint_op_Implicit()
		{
		}

		[Token(Token = "0x6002468")]
		[Address(RVA = "0xFE651C", Offset = "0xFE651C", VA = "0xFE651C")]
		[Preserve]
		public static void UnityEngine_Joint_op_Inequality()
		{
		}

		[Token(Token = "0x6002469")]
		[Address(RVA = "0xFE65F4", Offset = "0xFE65F4", VA = "0xFE65F4")]
		[Preserve]
		public static void UnityEngine_Joint2D_op_Equality()
		{
		}

		[Token(Token = "0x600246A")]
		[Address(RVA = "0xFE66CC", Offset = "0xFE66CC", VA = "0xFE66CC")]
		[Preserve]
		public static void UnityEngine_Joint2D_op_Implicit()
		{
		}

		[Token(Token = "0x600246B")]
		[Address(RVA = "0xFE679C", Offset = "0xFE679C", VA = "0xFE679C")]
		[Preserve]
		public static void UnityEngine_Joint2D_op_Inequality()
		{
		}

		[Token(Token = "0x600246C")]
		[Address(RVA = "0xFE6874", Offset = "0xFE6874", VA = "0xFE6874")]
		[Preserve]
		public static void UnityEngine_LayerMask_op_Implicit()
		{
		}

		[Token(Token = "0x600246D")]
		[Address(RVA = "0xFE6948", Offset = "0xFE6948", VA = "0xFE6948")]
		[Preserve]
		public static void UnityEngine_LayerMask_op_Implicit_0()
		{
		}

		[Token(Token = "0x600246E")]
		[Address(RVA = "0xFE6A1C", Offset = "0xFE6A1C", VA = "0xFE6A1C")]
		[Preserve]
		public static void UnityEngine_LensFlare_op_Equality()
		{
		}

		[Token(Token = "0x600246F")]
		[Address(RVA = "0xFE6AF4", Offset = "0xFE6AF4", VA = "0xFE6AF4")]
		[Preserve]
		public static void UnityEngine_LensFlare_op_Implicit()
		{
		}

		[Token(Token = "0x6002470")]
		[Address(RVA = "0xFE6BC4", Offset = "0xFE6BC4", VA = "0xFE6BC4")]
		[Preserve]
		public static void UnityEngine_LensFlare_op_Inequality()
		{
		}

		[Token(Token = "0x6002471")]
		[Address(RVA = "0xFE6C9C", Offset = "0xFE6C9C", VA = "0xFE6C9C")]
		[Preserve]
		public static void UnityEngine_Light_op_Equality()
		{
		}

		[Token(Token = "0x6002472")]
		[Address(RVA = "0xFE6D74", Offset = "0xFE6D74", VA = "0xFE6D74")]
		[Preserve]
		public static void UnityEngine_Light_op_Implicit()
		{
		}

		[Token(Token = "0x6002473")]
		[Address(RVA = "0xFE6E44", Offset = "0xFE6E44", VA = "0xFE6E44")]
		[Preserve]
		public static void UnityEngine_Light_op_Inequality()
		{
		}

		[Token(Token = "0x6002474")]
		[Address(RVA = "0xFE6F1C", Offset = "0xFE6F1C", VA = "0xFE6F1C")]
		[Preserve]
		public static void UnityEngine_LightingSettings_op_Equality()
		{
		}

		[Token(Token = "0x6002475")]
		[Address(RVA = "0xFE6FF4", Offset = "0xFE6FF4", VA = "0xFE6FF4")]
		[Preserve]
		public static void UnityEngine_LightingSettings_op_Implicit()
		{
		}

		[Token(Token = "0x6002476")]
		[Address(RVA = "0xFE70C4", Offset = "0xFE70C4", VA = "0xFE70C4")]
		[Preserve]
		public static void UnityEngine_LightingSettings_op_Inequality()
		{
		}

		[Token(Token = "0x6002477")]
		[Address(RVA = "0xFE719C", Offset = "0xFE719C", VA = "0xFE719C")]
		[Preserve]
		public static void UnityEngine_LightmapSettings_op_Equality()
		{
		}

		[Token(Token = "0x6002478")]
		[Address(RVA = "0xFE7274", Offset = "0xFE7274", VA = "0xFE7274")]
		[Preserve]
		public static void UnityEngine_LightmapSettings_op_Implicit()
		{
		}

		[Token(Token = "0x6002479")]
		[Address(RVA = "0xFE7344", Offset = "0xFE7344", VA = "0xFE7344")]
		[Preserve]
		public static void UnityEngine_LightmapSettings_op_Inequality()
		{
		}

		[Token(Token = "0x600247A")]
		[Address(RVA = "0xFE741C", Offset = "0xFE741C", VA = "0xFE741C")]
		[Preserve]
		public static void UnityEngine_LightProbeGroup_op_Equality()
		{
		}

		[Token(Token = "0x600247B")]
		[Address(RVA = "0xFE74F4", Offset = "0xFE74F4", VA = "0xFE74F4")]
		[Preserve]
		public static void UnityEngine_LightProbeGroup_op_Implicit()
		{
		}

		[Token(Token = "0x600247C")]
		[Address(RVA = "0xFE75C4", Offset = "0xFE75C4", VA = "0xFE75C4")]
		[Preserve]
		public static void UnityEngine_LightProbeGroup_op_Inequality()
		{
		}

		[Token(Token = "0x600247D")]
		[Address(RVA = "0xFE769C", Offset = "0xFE769C", VA = "0xFE769C")]
		[Preserve]
		public static void UnityEngine_LightProbeProxyVolume_op_Equality()
		{
		}

		[Token(Token = "0x600247E")]
		[Address(RVA = "0xFE7774", Offset = "0xFE7774", VA = "0xFE7774")]
		[Preserve]
		public static void UnityEngine_LightProbeProxyVolume_op_Implicit()
		{
		}

		[Token(Token = "0x600247F")]
		[Address(RVA = "0xFE7844", Offset = "0xFE7844", VA = "0xFE7844")]
		[Preserve]
		public static void UnityEngine_LightProbeProxyVolume_op_Inequality()
		{
		}

		[Token(Token = "0x6002480")]
		[Address(RVA = "0xFE791C", Offset = "0xFE791C", VA = "0xFE791C")]
		[Preserve]
		public static void UnityEngine_LightProbes_op_Equality()
		{
		}

		[Token(Token = "0x6002481")]
		[Address(RVA = "0xFE79F4", Offset = "0xFE79F4", VA = "0xFE79F4")]
		[Preserve]
		public static void UnityEngine_LightProbes_op_Implicit()
		{
		}

		[Token(Token = "0x6002482")]
		[Address(RVA = "0xFE7AC4", Offset = "0xFE7AC4", VA = "0xFE7AC4")]
		[Preserve]
		public static void UnityEngine_LightProbes_op_Inequality()
		{
		}

		[Token(Token = "0x6002483")]
		[Address(RVA = "0xFE7B9C", Offset = "0xFE7B9C", VA = "0xFE7B9C")]
		[Preserve]
		public static void UnityEngine_LineRenderer_op_Equality()
		{
		}

		[Token(Token = "0x6002484")]
		[Address(RVA = "0xFE7C74", Offset = "0xFE7C74", VA = "0xFE7C74")]
		[Preserve]
		public static void UnityEngine_LineRenderer_op_Implicit()
		{
		}

		[Token(Token = "0x6002485")]
		[Address(RVA = "0xFE7D44", Offset = "0xFE7D44", VA = "0xFE7D44")]
		[Preserve]
		public static void UnityEngine_LineRenderer_op_Inequality()
		{
		}

		[Token(Token = "0x6002486")]
		[Address(RVA = "0xFE7E1C", Offset = "0xFE7E1C", VA = "0xFE7E1C")]
		[Preserve]
		public static void UnityEngine_LODGroup_op_Equality()
		{
		}

		[Token(Token = "0x6002487")]
		[Address(RVA = "0xFE7EF4", Offset = "0xFE7EF4", VA = "0xFE7EF4")]
		[Preserve]
		public static void UnityEngine_LODGroup_op_Implicit()
		{
		}

		[Token(Token = "0x6002488")]
		[Address(RVA = "0xFE7FC4", Offset = "0xFE7FC4", VA = "0xFE7FC4")]
		[Preserve]
		public static void UnityEngine_LODGroup_op_Inequality()
		{
		}

		[Token(Token = "0x6002489")]
		[Address(RVA = "0xFE809C", Offset = "0xFE809C", VA = "0xFE809C")]
		[Preserve]
		public static void UnityEngine_Material_op_Equality()
		{
		}

		[Token(Token = "0x600248A")]
		[Address(RVA = "0xFE8174", Offset = "0xFE8174", VA = "0xFE8174")]
		[Preserve]
		public static void UnityEngine_Material_op_Implicit()
		{
		}

		[Token(Token = "0x600248B")]
		[Address(RVA = "0xFE8244", Offset = "0xFE8244", VA = "0xFE8244")]
		[Preserve]
		public static void UnityEngine_Material_op_Inequality()
		{
		}

		[Token(Token = "0x600248C")]
		[Address(RVA = "0xFE831C", Offset = "0xFE831C", VA = "0xFE831C")]
		[Preserve]
		public static void UnityEngine_Matrix4x4_op_Equality()
		{
		}

		[Token(Token = "0x600248D")]
		[Address(RVA = "0xFE8468", Offset = "0xFE8468", VA = "0xFE8468")]
		[Preserve]
		public static void UnityEngine_Matrix4x4_op_Inequality()
		{
		}

		[Token(Token = "0x600248E")]
		[Address(RVA = "0xFE85B4", Offset = "0xFE85B4", VA = "0xFE85B4")]
		[Preserve]
		public static void UnityEngine_Matrix4x4_op_Multiply()
		{
		}

		[Token(Token = "0x600248F")]
		[Address(RVA = "0xFE8704", Offset = "0xFE8704", VA = "0xFE8704")]
		[Preserve]
		public static void UnityEngine_Matrix4x4_op_Multiply_0()
		{
		}

		[Token(Token = "0x6002490")]
		[Address(RVA = "0xFE8844", Offset = "0xFE8844", VA = "0xFE8844")]
		[Preserve]
		public static void UnityEngine_Mesh_op_Equality()
		{
		}

		[Token(Token = "0x6002491")]
		[Address(RVA = "0xFE891C", Offset = "0xFE891C", VA = "0xFE891C")]
		[Preserve]
		public static void UnityEngine_Mesh_op_Implicit()
		{
		}

		[Token(Token = "0x6002492")]
		[Address(RVA = "0xFE89EC", Offset = "0xFE89EC", VA = "0xFE89EC")]
		[Preserve]
		public static void UnityEngine_Mesh_op_Inequality()
		{
		}

		[Token(Token = "0x6002493")]
		[Address(RVA = "0xFE8AC4", Offset = "0xFE8AC4", VA = "0xFE8AC4")]
		[Preserve]
		public static void UnityEngine_MeshCollider_op_Equality()
		{
		}

		[Token(Token = "0x6002494")]
		[Address(RVA = "0xFE8B9C", Offset = "0xFE8B9C", VA = "0xFE8B9C")]
		[Preserve]
		public static void UnityEngine_MeshCollider_op_Implicit()
		{
		}

		[Token(Token = "0x6002495")]
		[Address(RVA = "0xFE8C6C", Offset = "0xFE8C6C", VA = "0xFE8C6C")]
		[Preserve]
		public static void UnityEngine_MeshCollider_op_Inequality()
		{
		}

		[Token(Token = "0x6002496")]
		[Address(RVA = "0xFE8D44", Offset = "0xFE8D44", VA = "0xFE8D44")]
		[Preserve]
		public static void UnityEngine_MeshFilter_op_Equality()
		{
		}

		[Token(Token = "0x6002497")]
		[Address(RVA = "0xFE8E1C", Offset = "0xFE8E1C", VA = "0xFE8E1C")]
		[Preserve]
		public static void UnityEngine_MeshFilter_op_Implicit()
		{
		}

		[Token(Token = "0x6002498")]
		[Address(RVA = "0xFE8EEC", Offset = "0xFE8EEC", VA = "0xFE8EEC")]
		[Preserve]
		public static void UnityEngine_MeshFilter_op_Inequality()
		{
		}

		[Token(Token = "0x6002499")]
		[Address(RVA = "0xFE8FC4", Offset = "0xFE8FC4", VA = "0xFE8FC4")]
		[Preserve]
		public static void UnityEngine_MeshRenderer_op_Equality()
		{
		}

		[Token(Token = "0x600249A")]
		[Address(RVA = "0xFE909C", Offset = "0xFE909C", VA = "0xFE909C")]
		[Preserve]
		public static void UnityEngine_MeshRenderer_op_Implicit()
		{
		}

		[Token(Token = "0x600249B")]
		[Address(RVA = "0xFE916C", Offset = "0xFE916C", VA = "0xFE916C")]
		[Preserve]
		public static void UnityEngine_MeshRenderer_op_Inequality()
		{
		}

		[Token(Token = "0x600249C")]
		[Address(RVA = "0xFE9244", Offset = "0xFE9244", VA = "0xFE9244")]
		[Preserve]
		public static void UnityEngine_MonoBehaviour_op_Equality()
		{
		}

		[Token(Token = "0x600249D")]
		[Address(RVA = "0xFE931C", Offset = "0xFE931C", VA = "0xFE931C")]
		[Preserve]
		public static void UnityEngine_MonoBehaviour_op_Implicit()
		{
		}

		[Token(Token = "0x600249E")]
		[Address(RVA = "0xFE93EC", Offset = "0xFE93EC", VA = "0xFE93EC")]
		[Preserve]
		public static void UnityEngine_MonoBehaviour_op_Inequality()
		{
		}

		[Token(Token = "0x600249F")]
		[Address(RVA = "0xFE94C4", Offset = "0xFE94C4", VA = "0xFE94C4")]
		[Preserve]
		public static void UnityEngine_Motion_op_Equality()
		{
		}

		[Token(Token = "0x60024A0")]
		[Address(RVA = "0xFE959C", Offset = "0xFE959C", VA = "0xFE959C")]
		[Preserve]
		public static void UnityEngine_Motion_op_Implicit()
		{
		}

		[Token(Token = "0x60024A1")]
		[Address(RVA = "0xFE966C", Offset = "0xFE966C", VA = "0xFE966C")]
		[Preserve]
		public static void UnityEngine_Motion_op_Inequality()
		{
		}

		[Token(Token = "0x60024A2")]
		[Address(RVA = "0xFE9744", Offset = "0xFE9744", VA = "0xFE9744")]
		[Preserve]
		public static void UnityEngine_Networking_PlayerConnection_PlayerConnection_op_Equality()
		{
		}

		[Token(Token = "0x60024A3")]
		[Address(RVA = "0xFE981C", Offset = "0xFE981C", VA = "0xFE981C")]
		[Preserve]
		public static void UnityEngine_Networking_PlayerConnection_PlayerConnection_op_Implicit()
		{
		}

		[Token(Token = "0x60024A4")]
		[Address(RVA = "0xFE98EC", Offset = "0xFE98EC", VA = "0xFE98EC")]
		[Preserve]
		public static void UnityEngine_Networking_PlayerConnection_PlayerConnection_op_Inequality()
		{
		}

		[Token(Token = "0x60024A5")]
		[Address(RVA = "0xFE99C4", Offset = "0xFE99C4", VA = "0xFE99C4")]
		[Preserve]
		public static void UnityEngine_Object_ctor()
		{
		}

		[Token(Token = "0x60024A6")]
		[Address(RVA = "0xFE9A14", Offset = "0xFE9A14", VA = "0xFE9A14")]
		[Preserve]
		public static void UnityEngine_Object_op_Equality()
		{
		}

		[Token(Token = "0x60024A7")]
		[Address(RVA = "0xFE9AEC", Offset = "0xFE9AEC", VA = "0xFE9AEC")]
		[Preserve]
		public static void UnityEngine_Object_op_Implicit()
		{
		}

		[Token(Token = "0x60024A8")]
		[Address(RVA = "0xFE9BBC", Offset = "0xFE9BBC", VA = "0xFE9BBC")]
		[Preserve]
		public static void UnityEngine_Object_op_Inequality()
		{
		}

		[Token(Token = "0x60024A9")]
		[Address(RVA = "0xFE9C94", Offset = "0xFE9C94", VA = "0xFE9C94")]
		[Preserve]
		public static void UnityEngine_OcclusionArea_op_Equality()
		{
		}

		[Token(Token = "0x60024AA")]
		[Address(RVA = "0xFE9D6C", Offset = "0xFE9D6C", VA = "0xFE9D6C")]
		[Preserve]
		public static void UnityEngine_OcclusionArea_op_Implicit()
		{
		}

		[Token(Token = "0x60024AB")]
		[Address(RVA = "0xFE9E3C", Offset = "0xFE9E3C", VA = "0xFE9E3C")]
		[Preserve]
		public static void UnityEngine_OcclusionArea_op_Inequality()
		{
		}

		[Token(Token = "0x60024AC")]
		[Address(RVA = "0xFE9F14", Offset = "0xFE9F14", VA = "0xFE9F14")]
		[Preserve]
		public static void UnityEngine_OcclusionPortal_op_Equality()
		{
		}

		[Token(Token = "0x60024AD")]
		[Address(RVA = "0xFE9FEC", Offset = "0xFE9FEC", VA = "0xFE9FEC")]
		[Preserve]
		public static void UnityEngine_OcclusionPortal_op_Implicit()
		{
		}

		[Token(Token = "0x60024AE")]
		[Address(RVA = "0xFEA0BC", Offset = "0xFEA0BC", VA = "0xFEA0BC")]
		[Preserve]
		public static void UnityEngine_OcclusionPortal_op_Inequality()
		{
		}

		[Token(Token = "0x60024AF")]
		[Address(RVA = "0xFEA194", Offset = "0xFEA194", VA = "0xFEA194")]
		[Preserve]
		public static void UnityEngine_ParticleSystem_op_Equality()
		{
		}

		[Token(Token = "0x60024B0")]
		[Address(RVA = "0xFEA26C", Offset = "0xFEA26C", VA = "0xFEA26C")]
		[Preserve]
		public static void UnityEngine_ParticleSystem_op_Implicit()
		{
		}

		[Token(Token = "0x60024B1")]
		[Address(RVA = "0xFEA33C", Offset = "0xFEA33C", VA = "0xFEA33C")]
		[Preserve]
		public static void UnityEngine_ParticleSystem_op_Inequality()
		{
		}

		[Token(Token = "0x60024B2")]
		[Address(RVA = "0xFEA414", Offset = "0xFEA414", VA = "0xFEA414")]
		[Preserve]
		public static void UnityEngine_ParticleSystemForceField_op_Equality()
		{
		}

		[Token(Token = "0x60024B3")]
		[Address(RVA = "0xFEA4EC", Offset = "0xFEA4EC", VA = "0xFEA4EC")]
		[Preserve]
		public static void UnityEngine_ParticleSystemForceField_op_Implicit()
		{
		}

		[Token(Token = "0x60024B4")]
		[Address(RVA = "0xFEA5BC", Offset = "0xFEA5BC", VA = "0xFEA5BC")]
		[Preserve]
		public static void UnityEngine_ParticleSystemForceField_op_Inequality()
		{
		}

		[Token(Token = "0x60024B5")]
		[Address(RVA = "0xFEA694", Offset = "0xFEA694", VA = "0xFEA694")]
		[Preserve]
		public static void UnityEngine_ParticleSystemRenderer_op_Equality()
		{
		}

		[Token(Token = "0x60024B6")]
		[Address(RVA = "0xFEA76C", Offset = "0xFEA76C", VA = "0xFEA76C")]
		[Preserve]
		public static void UnityEngine_ParticleSystemRenderer_op_Implicit()
		{
		}

		[Token(Token = "0x60024B7")]
		[Address(RVA = "0xFEA83C", Offset = "0xFEA83C", VA = "0xFEA83C")]
		[Preserve]
		public static void UnityEngine_ParticleSystemRenderer_op_Inequality()
		{
		}

		[Token(Token = "0x60024B8")]
		[Address(RVA = "0xFEA914", Offset = "0xFEA914", VA = "0xFEA914")]
		[Preserve]
		public static void UnityEngine_PhysicMaterial_op_Equality()
		{
		}

		[Token(Token = "0x60024B9")]
		[Address(RVA = "0xFEA9EC", Offset = "0xFEA9EC", VA = "0xFEA9EC")]
		[Preserve]
		public static void UnityEngine_PhysicMaterial_op_Implicit()
		{
		}

		[Token(Token = "0x60024BA")]
		[Address(RVA = "0xFEAABC", Offset = "0xFEAABC", VA = "0xFEAABC")]
		[Preserve]
		public static void UnityEngine_PhysicMaterial_op_Inequality()
		{
		}

		[Token(Token = "0x60024BB")]
		[Address(RVA = "0xFEAB94", Offset = "0xFEAB94", VA = "0xFEAB94")]
		[Preserve]
		public static void UnityEngine_PhysicsMaterial2D_op_Equality()
		{
		}

		[Token(Token = "0x60024BC")]
		[Address(RVA = "0xFEAC6C", Offset = "0xFEAC6C", VA = "0xFEAC6C")]
		[Preserve]
		public static void UnityEngine_PhysicsMaterial2D_op_Implicit()
		{
		}

		[Token(Token = "0x60024BD")]
		[Address(RVA = "0xFEAD3C", Offset = "0xFEAD3C", VA = "0xFEAD3C")]
		[Preserve]
		public static void UnityEngine_PhysicsMaterial2D_op_Inequality()
		{
		}

		[Token(Token = "0x60024BE")]
		[Address(RVA = "0xFEAE14", Offset = "0xFEAE14", VA = "0xFEAE14")]
		[Preserve]
		public static void UnityEngine_PhysicsUpdateBehaviour2D_op_Equality()
		{
		}

		[Token(Token = "0x60024BF")]
		[Address(RVA = "0xFEAEEC", Offset = "0xFEAEEC", VA = "0xFEAEEC")]
		[Preserve]
		public static void UnityEngine_PhysicsUpdateBehaviour2D_op_Implicit()
		{
		}

		[Token(Token = "0x60024C0")]
		[Address(RVA = "0xFEAFBC", Offset = "0xFEAFBC", VA = "0xFEAFBC")]
		[Preserve]
		public static void UnityEngine_PhysicsUpdateBehaviour2D_op_Inequality()
		{
		}

		[Token(Token = "0x60024C1")]
		[Address(RVA = "0xFEB094", Offset = "0xFEB094", VA = "0xFEB094")]
		[Preserve]
		public static void UnityEngine_PlatformEffector2D_op_Equality()
		{
		}

		[Token(Token = "0x60024C2")]
		[Address(RVA = "0xFEB16C", Offset = "0xFEB16C", VA = "0xFEB16C")]
		[Preserve]
		public static void UnityEngine_PlatformEffector2D_op_Implicit()
		{
		}

		[Token(Token = "0x60024C3")]
		[Address(RVA = "0xFEB23C", Offset = "0xFEB23C", VA = "0xFEB23C")]
		[Preserve]
		public static void UnityEngine_PlatformEffector2D_op_Inequality()
		{
		}

		[Token(Token = "0x60024C4")]
		[Address(RVA = "0xFEB314", Offset = "0xFEB314", VA = "0xFEB314")]
		[Preserve]
		public static void UnityEngine_Playables_PlayableDirector_ctor()
		{
		}

		[Token(Token = "0x60024C5")]
		[Address(RVA = "0xFEB364", Offset = "0xFEB364", VA = "0xFEB364")]
		[Preserve]
		public static void UnityEngine_Playables_PlayableDirector_op_Equality()
		{
		}

		[Token(Token = "0x60024C6")]
		[Address(RVA = "0xFEB43C", Offset = "0xFEB43C", VA = "0xFEB43C")]
		[Preserve]
		public static void UnityEngine_Playables_PlayableDirector_op_Implicit()
		{
		}

		[Token(Token = "0x60024C7")]
		[Address(RVA = "0xFEB50C", Offset = "0xFEB50C", VA = "0xFEB50C")]
		[Preserve]
		public static void UnityEngine_Playables_PlayableDirector_op_Inequality()
		{
		}

		[Token(Token = "0x60024C8")]
		[Address(RVA = "0xFEB5E4", Offset = "0xFEB5E4", VA = "0xFEB5E4")]
		[Preserve]
		public static void UnityEngine_Playables_PlayableDirector_Play()
		{
		}

		[Token(Token = "0x60024C9")]
		[Address(RVA = "0xFEB618", Offset = "0xFEB618", VA = "0xFEB618")]
		[Preserve]
		public static void UnityEngine_PointEffector2D_op_Equality()
		{
		}

		[Token(Token = "0x60024CA")]
		[Address(RVA = "0xFEB6F0", Offset = "0xFEB6F0", VA = "0xFEB6F0")]
		[Preserve]
		public static void UnityEngine_PointEffector2D_op_Implicit()
		{
		}

		[Token(Token = "0x60024CB")]
		[Address(RVA = "0xFEB7C0", Offset = "0xFEB7C0", VA = "0xFEB7C0")]
		[Preserve]
		public static void UnityEngine_PointEffector2D_op_Inequality()
		{
		}

		[Token(Token = "0x60024CC")]
		[Address(RVA = "0xFEB898", Offset = "0xFEB898", VA = "0xFEB898")]
		[Preserve]
		public static void UnityEngine_PolygonCollider2D_op_Equality()
		{
		}

		[Token(Token = "0x60024CD")]
		[Address(RVA = "0xFEB970", Offset = "0xFEB970", VA = "0xFEB970")]
		[Preserve]
		public static void UnityEngine_PolygonCollider2D_op_Implicit()
		{
		}

		[Token(Token = "0x60024CE")]
		[Address(RVA = "0xFEBA40", Offset = "0xFEBA40", VA = "0xFEBA40")]
		[Preserve]
		public static void UnityEngine_PolygonCollider2D_op_Inequality()
		{
		}

		[Token(Token = "0x60024CF")]
		[Address(RVA = "0xFEBB18", Offset = "0xFEBB18", VA = "0xFEBB18")]
		[Preserve]
		public static void UnityEngine_Projector_op_Equality()
		{
		}

		[Token(Token = "0x60024D0")]
		[Address(RVA = "0xFEBBF0", Offset = "0xFEBBF0", VA = "0xFEBBF0")]
		[Preserve]
		public static void UnityEngine_Projector_op_Implicit()
		{
		}

		[Token(Token = "0x60024D1")]
		[Address(RVA = "0xFEBCC0", Offset = "0xFEBCC0", VA = "0xFEBCC0")]
		[Preserve]
		public static void UnityEngine_Projector_op_Inequality()
		{
		}

		[Token(Token = "0x60024D2")]
		[Address(RVA = "0xFEBD98", Offset = "0xFEBD98", VA = "0xFEBD98")]
		[Preserve]
		public static void UnityEngine_QualitySettings_op_Equality()
		{
		}

		[Token(Token = "0x60024D3")]
		[Address(RVA = "0xFEBE70", Offset = "0xFEBE70", VA = "0xFEBE70")]
		[Preserve]
		public static void UnityEngine_QualitySettings_op_Implicit()
		{
		}

		[Token(Token = "0x60024D4")]
		[Address(RVA = "0xFEBF40", Offset = "0xFEBF40", VA = "0xFEBF40")]
		[Preserve]
		public static void UnityEngine_QualitySettings_op_Inequality()
		{
		}

		[Token(Token = "0x60024D5")]
		[Address(RVA = "0xFEC018", Offset = "0xFEC018", VA = "0xFEC018")]
		[Preserve]
		public static void UnityEngine_Quaternion_Euler()
		{
		}

		[Token(Token = "0x60024D6")]
		[Address(RVA = "0xFEC100", Offset = "0xFEC100", VA = "0xFEC100")]
		[Preserve]
		public static void UnityEngine_Quaternion_op_Equality()
		{
		}

		[Token(Token = "0x60024D7")]
		[Address(RVA = "0xFEC1E8", Offset = "0xFEC1E8", VA = "0xFEC1E8")]
		[Preserve]
		public static void UnityEngine_Quaternion_op_Inequality()
		{
		}

		[Token(Token = "0x60024D8")]
		[Address(RVA = "0xFEC2D0", Offset = "0xFEC2D0", VA = "0xFEC2D0")]
		[Preserve]
		public static void UnityEngine_Quaternion_op_Multiply()
		{
		}

		[Token(Token = "0x60024D9")]
		[Address(RVA = "0xFEC3B8", Offset = "0xFEC3B8", VA = "0xFEC3B8")]
		[Preserve]
		public static void UnityEngine_Quaternion_op_Multiply_0()
		{
		}

		[Token(Token = "0x60024DA")]
		[Address(RVA = "0xFEC4DC", Offset = "0xFEC4DC", VA = "0xFEC4DC")]
		[Preserve]
		public static void UnityEngine_RaycastHit2D_op_Implicit()
		{
		}

		[Token(Token = "0x60024DB")]
		[Address(RVA = "0xFEC5D8", Offset = "0xFEC5D8", VA = "0xFEC5D8")]
		[Preserve]
		public static void UnityEngine_Rect_op_Equality()
		{
		}

		[Token(Token = "0x60024DC")]
		[Address(RVA = "0xFEC6E8", Offset = "0xFEC6E8", VA = "0xFEC6E8")]
		[Preserve]
		public static void UnityEngine_Rect_op_Inequality()
		{
		}

		[Token(Token = "0x60024DD")]
		[Address(RVA = "0xFEC7F8", Offset = "0xFEC7F8", VA = "0xFEC7F8")]
		[Preserve]
		public static void UnityEngine_RectTransform_op_Equality()
		{
		}

		[Token(Token = "0x60024DE")]
		[Address(RVA = "0xFEC8D0", Offset = "0xFEC8D0", VA = "0xFEC8D0")]
		[Preserve]
		public static void UnityEngine_RectTransform_op_Implicit()
		{
		}

		[Token(Token = "0x60024DF")]
		[Address(RVA = "0xFEC9A0", Offset = "0xFEC9A0", VA = "0xFEC9A0")]
		[Preserve]
		public static void UnityEngine_RectTransform_op_Inequality()
		{
		}

		[Token(Token = "0x60024E0")]
		[Address(RVA = "0xFECA78", Offset = "0xFECA78", VA = "0xFECA78")]
		[Preserve]
		public static void UnityEngine_ReflectionProbe_op_Equality()
		{
		}

		[Token(Token = "0x60024E1")]
		[Address(RVA = "0xFECB50", Offset = "0xFECB50", VA = "0xFECB50")]
		[Preserve]
		public static void UnityEngine_ReflectionProbe_op_Implicit()
		{
		}

		[Token(Token = "0x60024E2")]
		[Address(RVA = "0xFECC20", Offset = "0xFECC20", VA = "0xFECC20")]
		[Preserve]
		public static void UnityEngine_ReflectionProbe_op_Inequality()
		{
		}

		[Token(Token = "0x60024E3")]
		[Address(RVA = "0xFECCF8", Offset = "0xFECCF8", VA = "0xFECCF8")]
		[Preserve]
		public static void UnityEngine_RelativeJoint2D_op_Equality()
		{
		}

		[Token(Token = "0x60024E4")]
		[Address(RVA = "0xFECDD0", Offset = "0xFECDD0", VA = "0xFECDD0")]
		[Preserve]
		public static void UnityEngine_RelativeJoint2D_op_Implicit()
		{
		}

		[Token(Token = "0x60024E5")]
		[Address(RVA = "0xFECEA0", Offset = "0xFECEA0", VA = "0xFECEA0")]
		[Preserve]
		public static void UnityEngine_RelativeJoint2D_op_Inequality()
		{
		}

		[Token(Token = "0x60024E6")]
		[Address(RVA = "0xFECF78", Offset = "0xFECF78", VA = "0xFECF78")]
		[Preserve]
		public static void UnityEngine_Renderer_op_Equality()
		{
		}

		[Token(Token = "0x60024E7")]
		[Address(RVA = "0xFED050", Offset = "0xFED050", VA = "0xFED050")]
		[Preserve]
		public static void UnityEngine_Renderer_op_Implicit()
		{
		}

		[Token(Token = "0x60024E8")]
		[Address(RVA = "0xFED120", Offset = "0xFED120", VA = "0xFED120")]
		[Preserve]
		public static void UnityEngine_Renderer_op_Inequality()
		{
		}

		[Token(Token = "0x60024E9")]
		[Address(RVA = "0xFED1F8", Offset = "0xFED1F8", VA = "0xFED1F8")]
		[Preserve]
		public static void UnityEngine_Rendering_GraphicsSettings_op_Equality()
		{
		}

		[Token(Token = "0x60024EA")]
		[Address(RVA = "0xFED2D0", Offset = "0xFED2D0", VA = "0xFED2D0")]
		[Preserve]
		public static void UnityEngine_Rendering_GraphicsSettings_op_Implicit()
		{
		}

		[Token(Token = "0x60024EB")]
		[Address(RVA = "0xFED3A0", Offset = "0xFED3A0", VA = "0xFED3A0")]
		[Preserve]
		public static void UnityEngine_Rendering_GraphicsSettings_op_Inequality()
		{
		}

		[Token(Token = "0x60024EC")]
		[Address(RVA = "0xFED478", Offset = "0xFED478", VA = "0xFED478")]
		[Preserve]
		public static void UnityEngine_Rendering_SortingGroup_op_Equality()
		{
		}

		[Token(Token = "0x60024ED")]
		[Address(RVA = "0xFED550", Offset = "0xFED550", VA = "0xFED550")]
		[Preserve]
		public static void UnityEngine_Rendering_SortingGroup_op_Implicit()
		{
		}

		[Token(Token = "0x60024EE")]
		[Address(RVA = "0xFED620", Offset = "0xFED620", VA = "0xFED620")]
		[Preserve]
		public static void UnityEngine_Rendering_SortingGroup_op_Inequality()
		{
		}

		[Token(Token = "0x60024EF")]
		[Address(RVA = "0xFED6F8", Offset = "0xFED6F8", VA = "0xFED6F8")]
		[Preserve]
		public static void UnityEngine_RenderSettings_op_Equality()
		{
		}

		[Token(Token = "0x60024F0")]
		[Address(RVA = "0xFED7D0", Offset = "0xFED7D0", VA = "0xFED7D0")]
		[Preserve]
		public static void UnityEngine_RenderSettings_op_Implicit()
		{
		}

		[Token(Token = "0x60024F1")]
		[Address(RVA = "0xFED8A0", Offset = "0xFED8A0", VA = "0xFED8A0")]
		[Preserve]
		public static void UnityEngine_RenderSettings_op_Inequality()
		{
		}

		[Token(Token = "0x60024F2")]
		[Address(RVA = "0xFED978", Offset = "0xFED978", VA = "0xFED978")]
		[Preserve]
		public static void UnityEngine_RenderTexture_op_Equality()
		{
		}

		[Token(Token = "0x60024F3")]
		[Address(RVA = "0xFEDA50", Offset = "0xFEDA50", VA = "0xFEDA50")]
		[Preserve]
		public static void UnityEngine_RenderTexture_op_Implicit()
		{
		}

		[Token(Token = "0x60024F4")]
		[Address(RVA = "0xFEDB20", Offset = "0xFEDB20", VA = "0xFEDB20")]
		[Preserve]
		public static void UnityEngine_RenderTexture_op_Inequality()
		{
		}

		[Token(Token = "0x60024F5")]
		[Address(RVA = "0xFEDBF8", Offset = "0xFEDBF8", VA = "0xFEDBF8")]
		[Preserve]
		public static void UnityEngine_Rigidbody_ctor()
		{
		}

		[Token(Token = "0x60024F6")]
		[Address(RVA = "0xFEDC48", Offset = "0xFEDC48", VA = "0xFEDC48")]
		[Preserve]
		public static void UnityEngine_Rigidbody_AddForce()
		{
		}

		[Token(Token = "0x60024F7")]
		[Address(RVA = "0xFEDC94", Offset = "0xFEDC94", VA = "0xFEDC94")]
		[Preserve]
		public static void UnityEngine_Rigidbody_op_Equality()
		{
		}

		[Token(Token = "0x60024F8")]
		[Address(RVA = "0xFEDD6C", Offset = "0xFEDD6C", VA = "0xFEDD6C")]
		[Preserve]
		public static void UnityEngine_Rigidbody_op_Implicit()
		{
		}

		[Token(Token = "0x60024F9")]
		[Address(RVA = "0xFEDE3C", Offset = "0xFEDE3C", VA = "0xFEDE3C")]
		[Preserve]
		public static void UnityEngine_Rigidbody_op_Inequality()
		{
		}

		[Token(Token = "0x60024FA")]
		[Address(RVA = "0xFEDF14", Offset = "0xFEDF14", VA = "0xFEDF14")]
		[Preserve]
		public static void UnityEngine_Rigidbody_rotation()
		{
		}

		[Token(Token = "0x60024FB")]
		[Address(RVA = "0xFEDF6C", Offset = "0xFEDF6C", VA = "0xFEDF6C")]
		[Preserve]
		public static void UnityEngine_Rigidbody2D_op_Equality()
		{
		}

		[Token(Token = "0x60024FC")]
		[Address(RVA = "0xFEE044", Offset = "0xFEE044", VA = "0xFEE044")]
		[Preserve]
		public static void UnityEngine_Rigidbody2D_op_Implicit()
		{
		}

		[Token(Token = "0x60024FD")]
		[Address(RVA = "0xFEE114", Offset = "0xFEE114", VA = "0xFEE114")]
		[Preserve]
		public static void UnityEngine_Rigidbody2D_op_Inequality()
		{
		}

		[Token(Token = "0x60024FE")]
		[Address(RVA = "0xFEE1EC", Offset = "0xFEE1EC", VA = "0xFEE1EC")]
		[Preserve]
		public static void UnityEngine_RuntimeAnimatorController_op_Equality()
		{
		}

		[Token(Token = "0x60024FF")]
		[Address(RVA = "0xFEE2C4", Offset = "0xFEE2C4", VA = "0xFEE2C4")]
		[Preserve]
		public static void UnityEngine_RuntimeAnimatorController_op_Implicit()
		{
		}

		[Token(Token = "0x6002500")]
		[Address(RVA = "0xFEE394", Offset = "0xFEE394", VA = "0xFEE394")]
		[Preserve]
		public static void UnityEngine_RuntimeAnimatorController_op_Inequality()
		{
		}

		[Token(Token = "0x6002501")]
		[Address(RVA = "0xFEE46C", Offset = "0xFEE46C", VA = "0xFEE46C")]
		[Preserve]
		public static void UnityEngine_SceneManagement_Scene_op_Equality()
		{
		}

		[Token(Token = "0x6002502")]
		[Address(RVA = "0xFEE564", Offset = "0xFEE564", VA = "0xFEE564")]
		[Preserve]
		public static void UnityEngine_SceneManagement_Scene_op_Inequality()
		{
		}

		[Token(Token = "0x6002503")]
		[Address(RVA = "0xFEE65C", Offset = "0xFEE65C", VA = "0xFEE65C")]
		[Preserve]
		public static void UnityEngine_ScriptableObject_op_Equality()
		{
		}

		[Token(Token = "0x6002504")]
		[Address(RVA = "0xFEE734", Offset = "0xFEE734", VA = "0xFEE734")]
		[Preserve]
		public static void UnityEngine_ScriptableObject_op_Implicit()
		{
		}

		[Token(Token = "0x6002505")]
		[Address(RVA = "0xFEE804", Offset = "0xFEE804", VA = "0xFEE804")]
		[Preserve]
		public static void UnityEngine_ScriptableObject_op_Inequality()
		{
		}

		[Token(Token = "0x6002506")]
		[Address(RVA = "0xFEE8DC", Offset = "0xFEE8DC", VA = "0xFEE8DC")]
		[Preserve]
		public static void UnityEngine_Shader_op_Equality()
		{
		}

		[Token(Token = "0x6002507")]
		[Address(RVA = "0xFEE9B4", Offset = "0xFEE9B4", VA = "0xFEE9B4")]
		[Preserve]
		public static void UnityEngine_Shader_op_Implicit()
		{
		}

		[Token(Token = "0x6002508")]
		[Address(RVA = "0xFEEA84", Offset = "0xFEEA84", VA = "0xFEEA84")]
		[Preserve]
		public static void UnityEngine_Shader_op_Inequality()
		{
		}

		[Token(Token = "0x6002509")]
		[Address(RVA = "0xFEEB5C", Offset = "0xFEEB5C", VA = "0xFEEB5C")]
		[Preserve]
		public static void UnityEngine_ShaderVariantCollection_op_Equality()
		{
		}

		[Token(Token = "0x600250A")]
		[Address(RVA = "0xFEEC34", Offset = "0xFEEC34", VA = "0xFEEC34")]
		[Preserve]
		public static void UnityEngine_ShaderVariantCollection_op_Implicit()
		{
		}

		[Token(Token = "0x600250B")]
		[Address(RVA = "0xFEED04", Offset = "0xFEED04", VA = "0xFEED04")]
		[Preserve]
		public static void UnityEngine_ShaderVariantCollection_op_Inequality()
		{
		}

		[Token(Token = "0x600250C")]
		[Address(RVA = "0xFEEDDC", Offset = "0xFEEDDC", VA = "0xFEEDDC")]
		[Preserve]
		public static void UnityEngine_SkinnedMeshRenderer_op_Equality()
		{
		}

		[Token(Token = "0x600250D")]
		[Address(RVA = "0xFEEEB4", Offset = "0xFEEEB4", VA = "0xFEEEB4")]
		[Preserve]
		public static void UnityEngine_SkinnedMeshRenderer_op_Implicit()
		{
		}

		[Token(Token = "0x600250E")]
		[Address(RVA = "0xFEEF84", Offset = "0xFEEF84", VA = "0xFEEF84")]
		[Preserve]
		public static void UnityEngine_SkinnedMeshRenderer_op_Inequality()
		{
		}

		[Token(Token = "0x600250F")]
		[Address(RVA = "0xFEF05C", Offset = "0xFEF05C", VA = "0xFEF05C")]
		[Preserve]
		public static void UnityEngine_Skybox_op_Equality()
		{
		}

		[Token(Token = "0x6002510")]
		[Address(RVA = "0xFEF134", Offset = "0xFEF134", VA = "0xFEF134")]
		[Preserve]
		public static void UnityEngine_Skybox_op_Implicit()
		{
		}

		[Token(Token = "0x6002511")]
		[Address(RVA = "0xFEF204", Offset = "0xFEF204", VA = "0xFEF204")]
		[Preserve]
		public static void UnityEngine_Skybox_op_Inequality()
		{
		}

		[Token(Token = "0x6002512")]
		[Address(RVA = "0xFEF2DC", Offset = "0xFEF2DC", VA = "0xFEF2DC")]
		[Preserve]
		public static void UnityEngine_SliderJoint2D_op_Equality()
		{
		}

		[Token(Token = "0x6002513")]
		[Address(RVA = "0xFEF3B4", Offset = "0xFEF3B4", VA = "0xFEF3B4")]
		[Preserve]
		public static void UnityEngine_SliderJoint2D_op_Implicit()
		{
		}

		[Token(Token = "0x6002514")]
		[Address(RVA = "0xFEF484", Offset = "0xFEF484", VA = "0xFEF484")]
		[Preserve]
		public static void UnityEngine_SliderJoint2D_op_Inequality()
		{
		}

		[Token(Token = "0x6002515")]
		[Address(RVA = "0xFEF55C", Offset = "0xFEF55C", VA = "0xFEF55C")]
		[Preserve]
		public static void UnityEngine_SparseTexture_op_Equality()
		{
		}

		[Token(Token = "0x6002516")]
		[Address(RVA = "0xFEF634", Offset = "0xFEF634", VA = "0xFEF634")]
		[Preserve]
		public static void UnityEngine_SparseTexture_op_Implicit()
		{
		}

		[Token(Token = "0x6002517")]
		[Address(RVA = "0xFEF704", Offset = "0xFEF704", VA = "0xFEF704")]
		[Preserve]
		public static void UnityEngine_SparseTexture_op_Inequality()
		{
		}

		[Token(Token = "0x6002518")]
		[Address(RVA = "0xFEF7DC", Offset = "0xFEF7DC", VA = "0xFEF7DC")]
		[Preserve]
		public static void UnityEngine_SpatialTracking_TrackedPoseDriver_op_Equality()
		{
		}

		[Token(Token = "0x6002519")]
		[Address(RVA = "0xFEF8B4", Offset = "0xFEF8B4", VA = "0xFEF8B4")]
		[Preserve]
		public static void UnityEngine_SpatialTracking_TrackedPoseDriver_op_Implicit()
		{
		}

		[Token(Token = "0x600251A")]
		[Address(RVA = "0xFEF984", Offset = "0xFEF984", VA = "0xFEF984")]
		[Preserve]
		public static void UnityEngine_SpatialTracking_TrackedPoseDriver_op_Inequality()
		{
		}

		[Token(Token = "0x600251B")]
		[Address(RVA = "0xFEFA5C", Offset = "0xFEFA5C", VA = "0xFEFA5C")]
		[Preserve]
		public static void UnityEngine_SphereCollider_op_Equality()
		{
		}

		[Token(Token = "0x600251C")]
		[Address(RVA = "0xFEFB34", Offset = "0xFEFB34", VA = "0xFEFB34")]
		[Preserve]
		public static void UnityEngine_SphereCollider_op_Implicit()
		{
		}

		[Token(Token = "0x600251D")]
		[Address(RVA = "0xFEFC04", Offset = "0xFEFC04", VA = "0xFEFC04")]
		[Preserve]
		public static void UnityEngine_SphereCollider_op_Inequality()
		{
		}

		[Token(Token = "0x600251E")]
		[Address(RVA = "0xFEFCDC", Offset = "0xFEFCDC", VA = "0xFEFCDC")]
		[Preserve]
		public static void UnityEngine_SpringJoint_op_Equality()
		{
		}

		[Token(Token = "0x600251F")]
		[Address(RVA = "0xFEFDB4", Offset = "0xFEFDB4", VA = "0xFEFDB4")]
		[Preserve]
		public static void UnityEngine_SpringJoint_op_Implicit()
		{
		}

		[Token(Token = "0x6002520")]
		[Address(RVA = "0xFEFE84", Offset = "0xFEFE84", VA = "0xFEFE84")]
		[Preserve]
		public static void UnityEngine_SpringJoint_op_Inequality()
		{
		}

		[Token(Token = "0x6002521")]
		[Address(RVA = "0xFEFF5C", Offset = "0xFEFF5C", VA = "0xFEFF5C")]
		[Preserve]
		public static void UnityEngine_SpringJoint2D_op_Equality()
		{
		}

		[Token(Token = "0x6002522")]
		[Address(RVA = "0xFF0034", Offset = "0xFF0034", VA = "0xFF0034")]
		[Preserve]
		public static void UnityEngine_SpringJoint2D_op_Implicit()
		{
		}

		[Token(Token = "0x6002523")]
		[Address(RVA = "0xFF0104", Offset = "0xFF0104", VA = "0xFF0104")]
		[Preserve]
		public static void UnityEngine_SpringJoint2D_op_Inequality()
		{
		}

		[Token(Token = "0x6002524")]
		[Address(RVA = "0xFF01DC", Offset = "0xFF01DC", VA = "0xFF01DC")]
		[Preserve]
		public static void UnityEngine_Sprite_op_Equality()
		{
		}

		[Token(Token = "0x6002525")]
		[Address(RVA = "0xFF02B4", Offset = "0xFF02B4", VA = "0xFF02B4")]
		[Preserve]
		public static void UnityEngine_Sprite_op_Implicit()
		{
		}

		[Token(Token = "0x6002526")]
		[Address(RVA = "0xFF0384", Offset = "0xFF0384", VA = "0xFF0384")]
		[Preserve]
		public static void UnityEngine_Sprite_op_Inequality()
		{
		}

		[Token(Token = "0x6002527")]
		[Address(RVA = "0xFF045C", Offset = "0xFF045C", VA = "0xFF045C")]
		[Preserve]
		public static void UnityEngine_SpriteMask_op_Equality()
		{
		}

		[Token(Token = "0x6002528")]
		[Address(RVA = "0xFF0534", Offset = "0xFF0534", VA = "0xFF0534")]
		[Preserve]
		public static void UnityEngine_SpriteMask_op_Implicit()
		{
		}

		[Token(Token = "0x6002529")]
		[Address(RVA = "0xFF0604", Offset = "0xFF0604", VA = "0xFF0604")]
		[Preserve]
		public static void UnityEngine_SpriteMask_op_Inequality()
		{
		}

		[Token(Token = "0x600252A")]
		[Address(RVA = "0xFF06DC", Offset = "0xFF06DC", VA = "0xFF06DC")]
		[Preserve]
		public static void UnityEngine_SpriteRenderer_op_Equality()
		{
		}

		[Token(Token = "0x600252B")]
		[Address(RVA = "0xFF07B4", Offset = "0xFF07B4", VA = "0xFF07B4")]
		[Preserve]
		public static void UnityEngine_SpriteRenderer_op_Implicit()
		{
		}

		[Token(Token = "0x600252C")]
		[Address(RVA = "0xFF0884", Offset = "0xFF0884", VA = "0xFF0884")]
		[Preserve]
		public static void UnityEngine_SpriteRenderer_op_Inequality()
		{
		}

		[Token(Token = "0x600252D")]
		[Address(RVA = "0xFF095C", Offset = "0xFF095C", VA = "0xFF095C")]
		[Preserve]
		public static void UnityEngine_SurfaceEffector2D_op_Equality()
		{
		}

		[Token(Token = "0x600252E")]
		[Address(RVA = "0xFF0A34", Offset = "0xFF0A34", VA = "0xFF0A34")]
		[Preserve]
		public static void UnityEngine_SurfaceEffector2D_op_Implicit()
		{
		}

		[Token(Token = "0x600252F")]
		[Address(RVA = "0xFF0B04", Offset = "0xFF0B04", VA = "0xFF0B04")]
		[Preserve]
		public static void UnityEngine_SurfaceEffector2D_op_Inequality()
		{
		}

		[Token(Token = "0x6002530")]
		[Address(RVA = "0xFF0BDC", Offset = "0xFF0BDC", VA = "0xFF0BDC")]
		[Preserve]
		public static void UnityEngine_TargetJoint2D_op_Equality()
		{
		}

		[Token(Token = "0x6002531")]
		[Address(RVA = "0xFF0CB4", Offset = "0xFF0CB4", VA = "0xFF0CB4")]
		[Preserve]
		public static void UnityEngine_TargetJoint2D_op_Implicit()
		{
		}

		[Token(Token = "0x6002532")]
		[Address(RVA = "0xFF0D84", Offset = "0xFF0D84", VA = "0xFF0D84")]
		[Preserve]
		public static void UnityEngine_TargetJoint2D_op_Inequality()
		{
		}

		[Token(Token = "0x6002533")]
		[Address(RVA = "0xFF0E5C", Offset = "0xFF0E5C", VA = "0xFF0E5C")]
		[Preserve]
		public static void UnityEngine_Terrain_op_Equality()
		{
		}

		[Token(Token = "0x6002534")]
		[Address(RVA = "0xFF0F34", Offset = "0xFF0F34", VA = "0xFF0F34")]
		[Preserve]
		public static void UnityEngine_Terrain_op_Implicit()
		{
		}

		[Token(Token = "0x6002535")]
		[Address(RVA = "0xFF1004", Offset = "0xFF1004", VA = "0xFF1004")]
		[Preserve]
		public static void UnityEngine_Terrain_op_Inequality()
		{
		}

		[Token(Token = "0x6002536")]
		[Address(RVA = "0xFF10DC", Offset = "0xFF10DC", VA = "0xFF10DC")]
		[Preserve]
		public static void UnityEngine_TerrainCollider_op_Equality()
		{
		}

		[Token(Token = "0x6002537")]
		[Address(RVA = "0xFF11B4", Offset = "0xFF11B4", VA = "0xFF11B4")]
		[Preserve]
		public static void UnityEngine_TerrainCollider_op_Implicit()
		{
		}

		[Token(Token = "0x6002538")]
		[Address(RVA = "0xFF1284", Offset = "0xFF1284", VA = "0xFF1284")]
		[Preserve]
		public static void UnityEngine_TerrainCollider_op_Inequality()
		{
		}

		[Token(Token = "0x6002539")]
		[Address(RVA = "0xFF135C", Offset = "0xFF135C", VA = "0xFF135C")]
		[Preserve]
		public static void UnityEngine_TerrainData_op_Equality()
		{
		}

		[Token(Token = "0x600253A")]
		[Address(RVA = "0xFF1434", Offset = "0xFF1434", VA = "0xFF1434")]
		[Preserve]
		public static void UnityEngine_TerrainData_op_Implicit()
		{
		}

		[Token(Token = "0x600253B")]
		[Address(RVA = "0xFF1504", Offset = "0xFF1504", VA = "0xFF1504")]
		[Preserve]
		public static void UnityEngine_TerrainData_op_Inequality()
		{
		}

		[Token(Token = "0x600253C")]
		[Address(RVA = "0xFF15DC", Offset = "0xFF15DC", VA = "0xFF15DC")]
		[Preserve]
		public static void UnityEngine_TerrainLayer_op_Equality()
		{
		}

		[Token(Token = "0x600253D")]
		[Address(RVA = "0xFF16B4", Offset = "0xFF16B4", VA = "0xFF16B4")]
		[Preserve]
		public static void UnityEngine_TerrainLayer_op_Implicit()
		{
		}

		[Token(Token = "0x600253E")]
		[Address(RVA = "0xFF1784", Offset = "0xFF1784", VA = "0xFF1784")]
		[Preserve]
		public static void UnityEngine_TerrainLayer_op_Inequality()
		{
		}

		[Token(Token = "0x600253F")]
		[Address(RVA = "0xFF185C", Offset = "0xFF185C", VA = "0xFF185C")]
		[Preserve]
		public static void UnityEngine_TextAsset_op_Equality()
		{
		}

		[Token(Token = "0x6002540")]
		[Address(RVA = "0xFF1934", Offset = "0xFF1934", VA = "0xFF1934")]
		[Preserve]
		public static void UnityEngine_TextAsset_op_Implicit()
		{
		}

		[Token(Token = "0x6002541")]
		[Address(RVA = "0xFF1A04", Offset = "0xFF1A04", VA = "0xFF1A04")]
		[Preserve]
		public static void UnityEngine_TextAsset_op_Inequality()
		{
		}

		[Token(Token = "0x6002542")]
		[Address(RVA = "0xFF1ADC", Offset = "0xFF1ADC", VA = "0xFF1ADC")]
		[Preserve]
		public static void UnityEngine_TextMesh_op_Equality()
		{
		}

		[Token(Token = "0x6002543")]
		[Address(RVA = "0xFF1BB4", Offset = "0xFF1BB4", VA = "0xFF1BB4")]
		[Preserve]
		public static void UnityEngine_TextMesh_op_Implicit()
		{
		}

		[Token(Token = "0x6002544")]
		[Address(RVA = "0xFF1C84", Offset = "0xFF1C84", VA = "0xFF1C84")]
		[Preserve]
		public static void UnityEngine_TextMesh_op_Inequality()
		{
		}

		[Token(Token = "0x6002545")]
		[Address(RVA = "0xFF1D5C", Offset = "0xFF1D5C", VA = "0xFF1D5C")]
		[Preserve]
		public static void UnityEngine_Texture_op_Equality()
		{
		}

		[Token(Token = "0x6002546")]
		[Address(RVA = "0xFF1E34", Offset = "0xFF1E34", VA = "0xFF1E34")]
		[Preserve]
		public static void UnityEngine_Texture_op_Implicit()
		{
		}

		[Token(Token = "0x6002547")]
		[Address(RVA = "0xFF1F04", Offset = "0xFF1F04", VA = "0xFF1F04")]
		[Preserve]
		public static void UnityEngine_Texture_op_Inequality()
		{
		}

		[Token(Token = "0x6002548")]
		[Address(RVA = "0xFF1FDC", Offset = "0xFF1FDC", VA = "0xFF1FDC")]
		[Preserve]
		public static void UnityEngine_Texture2D_op_Equality()
		{
		}

		[Token(Token = "0x6002549")]
		[Address(RVA = "0xFF20B4", Offset = "0xFF20B4", VA = "0xFF20B4")]
		[Preserve]
		public static void UnityEngine_Texture2D_op_Implicit()
		{
		}

		[Token(Token = "0x600254A")]
		[Address(RVA = "0xFF2184", Offset = "0xFF2184", VA = "0xFF2184")]
		[Preserve]
		public static void UnityEngine_Texture2D_op_Inequality()
		{
		}

		[Token(Token = "0x600254B")]
		[Address(RVA = "0xFF225C", Offset = "0xFF225C", VA = "0xFF225C")]
		[Preserve]
		public static void UnityEngine_Texture2DArray_op_Equality()
		{
		}

		[Token(Token = "0x600254C")]
		[Address(RVA = "0xFF2334", Offset = "0xFF2334", VA = "0xFF2334")]
		[Preserve]
		public static void UnityEngine_Texture2DArray_op_Implicit()
		{
		}

		[Token(Token = "0x600254D")]
		[Address(RVA = "0xFF2404", Offset = "0xFF2404", VA = "0xFF2404")]
		[Preserve]
		public static void UnityEngine_Texture2DArray_op_Inequality()
		{
		}

		[Token(Token = "0x600254E")]
		[Address(RVA = "0xFF24DC", Offset = "0xFF24DC", VA = "0xFF24DC")]
		[Preserve]
		public static void UnityEngine_Texture3D_op_Equality()
		{
		}

		[Token(Token = "0x600254F")]
		[Address(RVA = "0xFF25B4", Offset = "0xFF25B4", VA = "0xFF25B4")]
		[Preserve]
		public static void UnityEngine_Texture3D_op_Implicit()
		{
		}

		[Token(Token = "0x6002550")]
		[Address(RVA = "0xFF2684", Offset = "0xFF2684", VA = "0xFF2684")]
		[Preserve]
		public static void UnityEngine_Texture3D_op_Inequality()
		{
		}

		[Token(Token = "0x6002551")]
		[Address(RVA = "0xFF275C", Offset = "0xFF275C", VA = "0xFF275C")]
		[Preserve]
		public static void UnityEngine_Tilemaps_Tile_op_Equality()
		{
		}

		[Token(Token = "0x6002552")]
		[Address(RVA = "0xFF2834", Offset = "0xFF2834", VA = "0xFF2834")]
		[Preserve]
		public static void UnityEngine_Tilemaps_Tile_op_Implicit()
		{
		}

		[Token(Token = "0x6002553")]
		[Address(RVA = "0xFF2904", Offset = "0xFF2904", VA = "0xFF2904")]
		[Preserve]
		public static void UnityEngine_Tilemaps_Tile_op_Inequality()
		{
		}

		[Token(Token = "0x6002554")]
		[Address(RVA = "0xFF29DC", Offset = "0xFF29DC", VA = "0xFF29DC")]
		[Preserve]
		public static void UnityEngine_Tilemaps_Tilemap_op_Equality()
		{
		}

		[Token(Token = "0x6002555")]
		[Address(RVA = "0xFF2AB4", Offset = "0xFF2AB4", VA = "0xFF2AB4")]
		[Preserve]
		public static void UnityEngine_Tilemaps_Tilemap_op_Implicit()
		{
		}

		[Token(Token = "0x6002556")]
		[Address(RVA = "0xFF2B84", Offset = "0xFF2B84", VA = "0xFF2B84")]
		[Preserve]
		public static void UnityEngine_Tilemaps_Tilemap_op_Inequality()
		{
		}

		[Token(Token = "0x6002557")]
		[Address(RVA = "0xFF2C5C", Offset = "0xFF2C5C", VA = "0xFF2C5C")]
		[Preserve]
		public static void UnityEngine_Tilemaps_TilemapCollider2D_op_Equality()
		{
		}

		[Token(Token = "0x6002558")]
		[Address(RVA = "0xFF2D34", Offset = "0xFF2D34", VA = "0xFF2D34")]
		[Preserve]
		public static void UnityEngine_Tilemaps_TilemapCollider2D_op_Implicit()
		{
		}

		[Token(Token = "0x6002559")]
		[Address(RVA = "0xFF2E04", Offset = "0xFF2E04", VA = "0xFF2E04")]
		[Preserve]
		public static void UnityEngine_Tilemaps_TilemapCollider2D_op_Inequality()
		{
		}

		[Token(Token = "0x600255A")]
		[Address(RVA = "0xFF2EDC", Offset = "0xFF2EDC", VA = "0xFF2EDC")]
		[Preserve]
		public static void UnityEngine_Tilemaps_TilemapRenderer_op_Equality()
		{
		}

		[Token(Token = "0x600255B")]
		[Address(RVA = "0xFF2FB4", Offset = "0xFF2FB4", VA = "0xFF2FB4")]
		[Preserve]
		public static void UnityEngine_Tilemaps_TilemapRenderer_op_Implicit()
		{
		}

		[Token(Token = "0x600255C")]
		[Address(RVA = "0xFF3084", Offset = "0xFF3084", VA = "0xFF3084")]
		[Preserve]
		public static void UnityEngine_Tilemaps_TilemapRenderer_op_Inequality()
		{
		}

		[Token(Token = "0x600255D")]
		[Address(RVA = "0xFF315C", Offset = "0xFF315C", VA = "0xFF315C")]
		[Preserve]
		public static void UnityEngine_TrailRenderer_op_Equality()
		{
		}

		[Token(Token = "0x600255E")]
		[Address(RVA = "0xFF3234", Offset = "0xFF3234", VA = "0xFF3234")]
		[Preserve]
		public static void UnityEngine_TrailRenderer_op_Implicit()
		{
		}

		[Token(Token = "0x600255F")]
		[Address(RVA = "0xFF3304", Offset = "0xFF3304", VA = "0xFF3304")]
		[Preserve]
		public static void UnityEngine_TrailRenderer_op_Inequality()
		{
		}

		[Token(Token = "0x6002560")]
		[Address(RVA = "0xFF33DC", Offset = "0xFF33DC", VA = "0xFF33DC")]
		[Preserve]
		public static void UnityEngine_Transform_op_Equality()
		{
		}

		[Token(Token = "0x6002561")]
		[Address(RVA = "0xFF34B4", Offset = "0xFF34B4", VA = "0xFF34B4")]
		[Preserve]
		public static void UnityEngine_Transform_op_Implicit()
		{
		}

		[Token(Token = "0x6002562")]
		[Address(RVA = "0xFF3584", Offset = "0xFF3584", VA = "0xFF3584")]
		[Preserve]
		public static void UnityEngine_Transform_op_Inequality()
		{
		}

		[Token(Token = "0x6002563")]
		[Address(RVA = "0xFF365C", Offset = "0xFF365C", VA = "0xFF365C")]
		[Preserve]
		public static void UnityEngine_Tree_op_Equality()
		{
		}

		[Token(Token = "0x6002564")]
		[Address(RVA = "0xFF3734", Offset = "0xFF3734", VA = "0xFF3734")]
		[Preserve]
		public static void UnityEngine_Tree_op_Implicit()
		{
		}

		[Token(Token = "0x6002565")]
		[Address(RVA = "0xFF3804", Offset = "0xFF3804", VA = "0xFF3804")]
		[Preserve]
		public static void UnityEngine_Tree_op_Inequality()
		{
		}

		[Token(Token = "0x6002566")]
		[Address(RVA = "0xFF38DC", Offset = "0xFF38DC", VA = "0xFF38DC")]
		[Preserve]
		public static void UnityEngine_U2D_SpriteAtlas_op_Equality()
		{
		}

		[Token(Token = "0x6002567")]
		[Address(RVA = "0xFF39B4", Offset = "0xFF39B4", VA = "0xFF39B4")]
		[Preserve]
		public static void UnityEngine_U2D_SpriteAtlas_op_Implicit()
		{
		}

		[Token(Token = "0x6002568")]
		[Address(RVA = "0xFF3A84", Offset = "0xFF3A84", VA = "0xFF3A84")]
		[Preserve]
		public static void UnityEngine_U2D_SpriteAtlas_op_Inequality()
		{
		}

		[Token(Token = "0x6002569")]
		[Address(RVA = "0xFF3B5C", Offset = "0xFF3B5C", VA = "0xFF3B5C")]
		[Preserve]
		public static void UnityEngine_UI_AspectRatioFitter_op_Equality()
		{
		}

		[Token(Token = "0x600256A")]
		[Address(RVA = "0xFF3C34", Offset = "0xFF3C34", VA = "0xFF3C34")]
		[Preserve]
		public static void UnityEngine_UI_AspectRatioFitter_op_Implicit()
		{
		}

		[Token(Token = "0x600256B")]
		[Address(RVA = "0xFF3D04", Offset = "0xFF3D04", VA = "0xFF3D04")]
		[Preserve]
		public static void UnityEngine_UI_AspectRatioFitter_op_Inequality()
		{
		}

		[Token(Token = "0x600256C")]
		[Address(RVA = "0xFF3DDC", Offset = "0xFF3DDC", VA = "0xFF3DDC")]
		[Preserve]
		public static void UnityEngine_UI_Button_op_Equality()
		{
		}

		[Token(Token = "0x600256D")]
		[Address(RVA = "0xFF3EB4", Offset = "0xFF3EB4", VA = "0xFF3EB4")]
		[Preserve]
		public static void UnityEngine_UI_Button_op_Implicit()
		{
		}

		[Token(Token = "0x600256E")]
		[Address(RVA = "0xFF3F84", Offset = "0xFF3F84", VA = "0xFF3F84")]
		[Preserve]
		public static void UnityEngine_UI_Button_op_Inequality()
		{
		}

		[Token(Token = "0x600256F")]
		[Address(RVA = "0xFF405C", Offset = "0xFF405C", VA = "0xFF405C")]
		[Preserve]
		public static void UnityEngine_UI_CanvasScaler_op_Equality()
		{
		}

		[Token(Token = "0x6002570")]
		[Address(RVA = "0xFF4134", Offset = "0xFF4134", VA = "0xFF4134")]
		[Preserve]
		public static void UnityEngine_UI_CanvasScaler_op_Implicit()
		{
		}

		[Token(Token = "0x6002571")]
		[Address(RVA = "0xFF4204", Offset = "0xFF4204", VA = "0xFF4204")]
		[Preserve]
		public static void UnityEngine_UI_CanvasScaler_op_Inequality()
		{
		}

		[Token(Token = "0x6002572")]
		[Address(RVA = "0xFF42DC", Offset = "0xFF42DC", VA = "0xFF42DC")]
		[Preserve]
		public static void UnityEngine_UI_ContentSizeFitter_op_Equality()
		{
		}

		[Token(Token = "0x6002573")]
		[Address(RVA = "0xFF43B4", Offset = "0xFF43B4", VA = "0xFF43B4")]
		[Preserve]
		public static void UnityEngine_UI_ContentSizeFitter_op_Implicit()
		{
		}

		[Token(Token = "0x6002574")]
		[Address(RVA = "0xFF4484", Offset = "0xFF4484", VA = "0xFF4484")]
		[Preserve]
		public static void UnityEngine_UI_ContentSizeFitter_op_Inequality()
		{
		}

		[Token(Token = "0x6002575")]
		[Address(RVA = "0xFF455C", Offset = "0xFF455C", VA = "0xFF455C")]
		[Preserve]
		public static void UnityEngine_UI_Dropdown_op_Equality()
		{
		}

		[Token(Token = "0x6002576")]
		[Address(RVA = "0xFF4634", Offset = "0xFF4634", VA = "0xFF4634")]
		[Preserve]
		public static void UnityEngine_UI_Dropdown_op_Implicit()
		{
		}

		[Token(Token = "0x6002577")]
		[Address(RVA = "0xFF4704", Offset = "0xFF4704", VA = "0xFF4704")]
		[Preserve]
		public static void UnityEngine_UI_Dropdown_op_Inequality()
		{
		}

		[Token(Token = "0x6002578")]
		[Address(RVA = "0xFF47DC", Offset = "0xFF47DC", VA = "0xFF47DC")]
		[Preserve]
		public static void UnityEngine_UI_GraphicRaycaster_op_Equality()
		{
		}

		[Token(Token = "0x6002579")]
		[Address(RVA = "0xFF48B4", Offset = "0xFF48B4", VA = "0xFF48B4")]
		[Preserve]
		public static void UnityEngine_UI_GraphicRaycaster_op_Implicit()
		{
		}

		[Token(Token = "0x600257A")]
		[Address(RVA = "0xFF4984", Offset = "0xFF4984", VA = "0xFF4984")]
		[Preserve]
		public static void UnityEngine_UI_GraphicRaycaster_op_Inequality()
		{
		}

		[Token(Token = "0x600257B")]
		[Address(RVA = "0xFF4A5C", Offset = "0xFF4A5C", VA = "0xFF4A5C")]
		[Preserve]
		public static void UnityEngine_UI_GridLayoutGroup_op_Equality()
		{
		}

		[Token(Token = "0x600257C")]
		[Address(RVA = "0xFF4B34", Offset = "0xFF4B34", VA = "0xFF4B34")]
		[Preserve]
		public static void UnityEngine_UI_GridLayoutGroup_op_Implicit()
		{
		}

		[Token(Token = "0x600257D")]
		[Address(RVA = "0xFF4C04", Offset = "0xFF4C04", VA = "0xFF4C04")]
		[Preserve]
		public static void UnityEngine_UI_GridLayoutGroup_op_Inequality()
		{
		}

		[Token(Token = "0x600257E")]
		[Address(RVA = "0xFF4CDC", Offset = "0xFF4CDC", VA = "0xFF4CDC")]
		[Preserve]
		public static void UnityEngine_UI_HorizontalLayoutGroup_op_Equality()
		{
		}

		[Token(Token = "0x600257F")]
		[Address(RVA = "0xFF4DB4", Offset = "0xFF4DB4", VA = "0xFF4DB4")]
		[Preserve]
		public static void UnityEngine_UI_HorizontalLayoutGroup_op_Implicit()
		{
		}

		[Token(Token = "0x6002580")]
		[Address(RVA = "0xFF4E84", Offset = "0xFF4E84", VA = "0xFF4E84")]
		[Preserve]
		public static void UnityEngine_UI_HorizontalLayoutGroup_op_Inequality()
		{
		}

		[Token(Token = "0x6002581")]
		[Address(RVA = "0xFF4F5C", Offset = "0xFF4F5C", VA = "0xFF4F5C")]
		[Preserve]
		public static void UnityEngine_UI_Image_op_Equality()
		{
		}

		[Token(Token = "0x6002582")]
		[Address(RVA = "0xFF5034", Offset = "0xFF5034", VA = "0xFF5034")]
		[Preserve]
		public static void UnityEngine_UI_Image_op_Implicit()
		{
		}

		[Token(Token = "0x6002583")]
		[Address(RVA = "0xFF5104", Offset = "0xFF5104", VA = "0xFF5104")]
		[Preserve]
		public static void UnityEngine_UI_Image_op_Inequality()
		{
		}

		[Token(Token = "0x6002584")]
		[Address(RVA = "0xFF51DC", Offset = "0xFF51DC", VA = "0xFF51DC")]
		[Preserve]
		public static void UnityEngine_UI_InputField_op_Equality()
		{
		}

		[Token(Token = "0x6002585")]
		[Address(RVA = "0xFF52B4", Offset = "0xFF52B4", VA = "0xFF52B4")]
		[Preserve]
		public static void UnityEngine_UI_InputField_op_Implicit()
		{
		}

		[Token(Token = "0x6002586")]
		[Address(RVA = "0xFF5384", Offset = "0xFF5384", VA = "0xFF5384")]
		[Preserve]
		public static void UnityEngine_UI_InputField_op_Inequality()
		{
		}

		[Token(Token = "0x6002587")]
		[Address(RVA = "0xFF545C", Offset = "0xFF545C", VA = "0xFF545C")]
		[Preserve]
		public static void UnityEngine_UI_LayoutElement_op_Equality()
		{
		}

		[Token(Token = "0x6002588")]
		[Address(RVA = "0xFF5534", Offset = "0xFF5534", VA = "0xFF5534")]
		[Preserve]
		public static void UnityEngine_UI_LayoutElement_op_Implicit()
		{
		}

		[Token(Token = "0x6002589")]
		[Address(RVA = "0xFF5604", Offset = "0xFF5604", VA = "0xFF5604")]
		[Preserve]
		public static void UnityEngine_UI_LayoutElement_op_Inequality()
		{
		}

		[Token(Token = "0x600258A")]
		[Address(RVA = "0xFF56DC", Offset = "0xFF56DC", VA = "0xFF56DC")]
		[Preserve]
		public static void UnityEngine_UI_Mask_op_Equality()
		{
		}

		[Token(Token = "0x600258B")]
		[Address(RVA = "0xFF57B4", Offset = "0xFF57B4", VA = "0xFF57B4")]
		[Preserve]
		public static void UnityEngine_UI_Mask_op_Implicit()
		{
		}

		[Token(Token = "0x600258C")]
		[Address(RVA = "0xFF5884", Offset = "0xFF5884", VA = "0xFF5884")]
		[Preserve]
		public static void UnityEngine_UI_Mask_op_Inequality()
		{
		}

		[Token(Token = "0x600258D")]
		[Address(RVA = "0xFF595C", Offset = "0xFF595C", VA = "0xFF595C")]
		[Preserve]
		public static void UnityEngine_UI_Outline_op_Equality()
		{
		}

		[Token(Token = "0x600258E")]
		[Address(RVA = "0xFF5A34", Offset = "0xFF5A34", VA = "0xFF5A34")]
		[Preserve]
		public static void UnityEngine_UI_Outline_op_Implicit()
		{
		}

		[Token(Token = "0x600258F")]
		[Address(RVA = "0xFF5B04", Offset = "0xFF5B04", VA = "0xFF5B04")]
		[Preserve]
		public static void UnityEngine_UI_Outline_op_Inequality()
		{
		}

		[Token(Token = "0x6002590")]
		[Address(RVA = "0xFF5BDC", Offset = "0xFF5BDC", VA = "0xFF5BDC")]
		[Preserve]
		public static void UnityEngine_UI_PositionAsUV1_op_Equality()
		{
		}

		[Token(Token = "0x6002591")]
		[Address(RVA = "0xFF5CB4", Offset = "0xFF5CB4", VA = "0xFF5CB4")]
		[Preserve]
		public static void UnityEngine_UI_PositionAsUV1_op_Implicit()
		{
		}

		[Token(Token = "0x6002592")]
		[Address(RVA = "0xFF5D84", Offset = "0xFF5D84", VA = "0xFF5D84")]
		[Preserve]
		public static void UnityEngine_UI_PositionAsUV1_op_Inequality()
		{
		}

		[Token(Token = "0x6002593")]
		[Address(RVA = "0xFF5E5C", Offset = "0xFF5E5C", VA = "0xFF5E5C")]
		[Preserve]
		public static void UnityEngine_UI_RawImage_op_Equality()
		{
		}

		[Token(Token = "0x6002594")]
		[Address(RVA = "0xFF5F34", Offset = "0xFF5F34", VA = "0xFF5F34")]
		[Preserve]
		public static void UnityEngine_UI_RawImage_op_Implicit()
		{
		}

		[Token(Token = "0x6002595")]
		[Address(RVA = "0xFF6004", Offset = "0xFF6004", VA = "0xFF6004")]
		[Preserve]
		public static void UnityEngine_UI_RawImage_op_Inequality()
		{
		}

		[Token(Token = "0x6002596")]
		[Address(RVA = "0xFF60DC", Offset = "0xFF60DC", VA = "0xFF60DC")]
		[Preserve]
		public static void UnityEngine_UI_RectMask2D_op_Equality()
		{
		}

		[Token(Token = "0x6002597")]
		[Address(RVA = "0xFF61B4", Offset = "0xFF61B4", VA = "0xFF61B4")]
		[Preserve]
		public static void UnityEngine_UI_RectMask2D_op_Implicit()
		{
		}

		[Token(Token = "0x6002598")]
		[Address(RVA = "0xFF6284", Offset = "0xFF6284", VA = "0xFF6284")]
		[Preserve]
		public static void UnityEngine_UI_RectMask2D_op_Inequality()
		{
		}

		[Token(Token = "0x6002599")]
		[Address(RVA = "0xFF635C", Offset = "0xFF635C", VA = "0xFF635C")]
		[Preserve]
		public static void UnityEngine_UI_Scrollbar_op_Equality()
		{
		}

		[Token(Token = "0x600259A")]
		[Address(RVA = "0xFF6434", Offset = "0xFF6434", VA = "0xFF6434")]
		[Preserve]
		public static void UnityEngine_UI_Scrollbar_op_Implicit()
		{
		}

		[Token(Token = "0x600259B")]
		[Address(RVA = "0xFF6504", Offset = "0xFF6504", VA = "0xFF6504")]
		[Preserve]
		public static void UnityEngine_UI_Scrollbar_op_Inequality()
		{
		}

		[Token(Token = "0x600259C")]
		[Address(RVA = "0xFF65DC", Offset = "0xFF65DC", VA = "0xFF65DC")]
		[Preserve]
		public static void UnityEngine_UI_ScrollRect_op_Equality()
		{
		}

		[Token(Token = "0x600259D")]
		[Address(RVA = "0xFF66B4", Offset = "0xFF66B4", VA = "0xFF66B4")]
		[Preserve]
		public static void UnityEngine_UI_ScrollRect_op_Implicit()
		{
		}

		[Token(Token = "0x600259E")]
		[Address(RVA = "0xFF6784", Offset = "0xFF6784", VA = "0xFF6784")]
		[Preserve]
		public static void UnityEngine_UI_ScrollRect_op_Inequality()
		{
		}

		[Token(Token = "0x600259F")]
		[Address(RVA = "0xFF685C", Offset = "0xFF685C", VA = "0xFF685C")]
		[Preserve]
		public static void UnityEngine_UI_Selectable_op_Equality()
		{
		}

		[Token(Token = "0x60025A0")]
		[Address(RVA = "0xFF6934", Offset = "0xFF6934", VA = "0xFF6934")]
		[Preserve]
		public static void UnityEngine_UI_Selectable_op_Implicit()
		{
		}

		[Token(Token = "0x60025A1")]
		[Address(RVA = "0xFF6A04", Offset = "0xFF6A04", VA = "0xFF6A04")]
		[Preserve]
		public static void UnityEngine_UI_Selectable_op_Inequality()
		{
		}

		[Token(Token = "0x60025A2")]
		[Address(RVA = "0xFF6ADC", Offset = "0xFF6ADC", VA = "0xFF6ADC")]
		[Preserve]
		public static void UnityEngine_UI_Shadow_op_Equality()
		{
		}

		[Token(Token = "0x60025A3")]
		[Address(RVA = "0xFF6BB4", Offset = "0xFF6BB4", VA = "0xFF6BB4")]
		[Preserve]
		public static void UnityEngine_UI_Shadow_op_Implicit()
		{
		}

		[Token(Token = "0x60025A4")]
		[Address(RVA = "0xFF6C84", Offset = "0xFF6C84", VA = "0xFF6C84")]
		[Preserve]
		public static void UnityEngine_UI_Shadow_op_Inequality()
		{
		}

		[Token(Token = "0x60025A5")]
		[Address(RVA = "0xFF6D5C", Offset = "0xFF6D5C", VA = "0xFF6D5C")]
		[Preserve]
		public static void UnityEngine_UI_Slider_op_Equality()
		{
		}

		[Token(Token = "0x60025A6")]
		[Address(RVA = "0xFF6E34", Offset = "0xFF6E34", VA = "0xFF6E34")]
		[Preserve]
		public static void UnityEngine_UI_Slider_op_Implicit()
		{
		}

		[Token(Token = "0x60025A7")]
		[Address(RVA = "0xFF6F04", Offset = "0xFF6F04", VA = "0xFF6F04")]
		[Preserve]
		public static void UnityEngine_UI_Slider_op_Inequality()
		{
		}

		[Token(Token = "0x60025A8")]
		[Address(RVA = "0xFF6FDC", Offset = "0xFF6FDC", VA = "0xFF6FDC")]
		[Preserve]
		public static void UnityEngine_UI_Text_op_Equality()
		{
		}

		[Token(Token = "0x60025A9")]
		[Address(RVA = "0xFF70B4", Offset = "0xFF70B4", VA = "0xFF70B4")]
		[Preserve]
		public static void UnityEngine_UI_Text_op_Implicit()
		{
		}

		[Token(Token = "0x60025AA")]
		[Address(RVA = "0xFF7184", Offset = "0xFF7184", VA = "0xFF7184")]
		[Preserve]
		public static void UnityEngine_UI_Text_op_Inequality()
		{
		}

		[Token(Token = "0x60025AB")]
		[Address(RVA = "0xFF725C", Offset = "0xFF725C", VA = "0xFF725C")]
		[Preserve]
		public static void UnityEngine_UI_Toggle_op_Equality()
		{
		}

		[Token(Token = "0x60025AC")]
		[Address(RVA = "0xFF7334", Offset = "0xFF7334", VA = "0xFF7334")]
		[Preserve]
		public static void UnityEngine_UI_Toggle_op_Implicit()
		{
		}

		[Token(Token = "0x60025AD")]
		[Address(RVA = "0xFF7404", Offset = "0xFF7404", VA = "0xFF7404")]
		[Preserve]
		public static void UnityEngine_UI_Toggle_op_Inequality()
		{
		}

		[Token(Token = "0x60025AE")]
		[Address(RVA = "0xFF74DC", Offset = "0xFF74DC", VA = "0xFF74DC")]
		[Preserve]
		public static void UnityEngine_UI_ToggleGroup_op_Equality()
		{
		}

		[Token(Token = "0x60025AF")]
		[Address(RVA = "0xFF75B4", Offset = "0xFF75B4", VA = "0xFF75B4")]
		[Preserve]
		public static void UnityEngine_UI_ToggleGroup_op_Implicit()
		{
		}

		[Token(Token = "0x60025B0")]
		[Address(RVA = "0xFF7684", Offset = "0xFF7684", VA = "0xFF7684")]
		[Preserve]
		public static void UnityEngine_UI_ToggleGroup_op_Inequality()
		{
		}

		[Token(Token = "0x60025B1")]
		[Address(RVA = "0xFF775C", Offset = "0xFF775C", VA = "0xFF775C")]
		[Preserve]
		public static void UnityEngine_UI_VerticalLayoutGroup_op_Equality()
		{
		}

		[Token(Token = "0x60025B2")]
		[Address(RVA = "0xFF7834", Offset = "0xFF7834", VA = "0xFF7834")]
		[Preserve]
		public static void UnityEngine_UI_VerticalLayoutGroup_op_Implicit()
		{
		}

		[Token(Token = "0x60025B3")]
		[Address(RVA = "0xFF7904", Offset = "0xFF7904", VA = "0xFF7904")]
		[Preserve]
		public static void UnityEngine_UI_VerticalLayoutGroup_op_Inequality()
		{
		}

		[Token(Token = "0x60025B4")]
		[Address(RVA = "0xFF79DC", Offset = "0xFF79DC", VA = "0xFF79DC")]
		[Preserve]
		public static void UnityEngine_UIElements_PanelEventHandler_op_Equality()
		{
		}

		[Token(Token = "0x60025B5")]
		[Address(RVA = "0xFF7AB4", Offset = "0xFF7AB4", VA = "0xFF7AB4")]
		[Preserve]
		public static void UnityEngine_UIElements_PanelEventHandler_op_Implicit()
		{
		}

		[Token(Token = "0x60025B6")]
		[Address(RVA = "0xFF7B84", Offset = "0xFF7B84", VA = "0xFF7B84")]
		[Preserve]
		public static void UnityEngine_UIElements_PanelEventHandler_op_Inequality()
		{
		}

		[Token(Token = "0x60025B7")]
		[Address(RVA = "0xFF7C5C", Offset = "0xFF7C5C", VA = "0xFF7C5C")]
		[Preserve]
		public static void UnityEngine_UIElements_PanelRaycaster_op_Equality()
		{
		}

		[Token(Token = "0x60025B8")]
		[Address(RVA = "0xFF7D34", Offset = "0xFF7D34", VA = "0xFF7D34")]
		[Preserve]
		public static void UnityEngine_UIElements_PanelRaycaster_op_Implicit()
		{
		}

		[Token(Token = "0x60025B9")]
		[Address(RVA = "0xFF7E04", Offset = "0xFF7E04", VA = "0xFF7E04")]
		[Preserve]
		public static void UnityEngine_UIElements_PanelRaycaster_op_Inequality()
		{
		}

		[Token(Token = "0x60025BA")]
		[Address(RVA = "0xFF7EDC", Offset = "0xFF7EDC", VA = "0xFF7EDC")]
		[Preserve]
		public static void UnityEngine_UIElements_PanelSettings_op_Equality()
		{
		}

		[Token(Token = "0x60025BB")]
		[Address(RVA = "0xFF7FB4", Offset = "0xFF7FB4", VA = "0xFF7FB4")]
		[Preserve]
		public static void UnityEngine_UIElements_PanelSettings_op_Implicit()
		{
		}

		[Token(Token = "0x60025BC")]
		[Address(RVA = "0xFF8084", Offset = "0xFF8084", VA = "0xFF8084")]
		[Preserve]
		public static void UnityEngine_UIElements_PanelSettings_op_Inequality()
		{
		}

		[Token(Token = "0x60025BD")]
		[Address(RVA = "0xFF815C", Offset = "0xFF815C", VA = "0xFF815C")]
		[Preserve]
		public static void UnityEngine_UIElements_PanelTextSettings_op_Equality()
		{
		}

		[Token(Token = "0x60025BE")]
		[Address(RVA = "0xFF8234", Offset = "0xFF8234", VA = "0xFF8234")]
		[Preserve]
		public static void UnityEngine_UIElements_PanelTextSettings_op_Implicit()
		{
		}

		[Token(Token = "0x60025BF")]
		[Address(RVA = "0xFF8304", Offset = "0xFF8304", VA = "0xFF8304")]
		[Preserve]
		public static void UnityEngine_UIElements_PanelTextSettings_op_Inequality()
		{
		}

		[Token(Token = "0x60025C0")]
		[Address(RVA = "0xFF83DC", Offset = "0xFF83DC", VA = "0xFF83DC")]
		[Preserve]
		public static void UnityEngine_UIElements_StyleSheet_op_Equality()
		{
		}

		[Token(Token = "0x60025C1")]
		[Address(RVA = "0xFF84B4", Offset = "0xFF84B4", VA = "0xFF84B4")]
		[Preserve]
		public static void UnityEngine_UIElements_StyleSheet_op_Implicit()
		{
		}

		[Token(Token = "0x60025C2")]
		[Address(RVA = "0xFF8584", Offset = "0xFF8584", VA = "0xFF8584")]
		[Preserve]
		public static void UnityEngine_UIElements_StyleSheet_op_Inequality()
		{
		}

		[Token(Token = "0x60025C3")]
		[Address(RVA = "0xFF865C", Offset = "0xFF865C", VA = "0xFF865C")]
		[Preserve]
		public static void UnityEngine_UIElements_ThemeStyleSheet_op_Equality()
		{
		}

		[Token(Token = "0x60025C4")]
		[Address(RVA = "0xFF8734", Offset = "0xFF8734", VA = "0xFF8734")]
		[Preserve]
		public static void UnityEngine_UIElements_ThemeStyleSheet_op_Implicit()
		{
		}

		[Token(Token = "0x60025C5")]
		[Address(RVA = "0xFF8804", Offset = "0xFF8804", VA = "0xFF8804")]
		[Preserve]
		public static void UnityEngine_UIElements_ThemeStyleSheet_op_Inequality()
		{
		}

		[Token(Token = "0x60025C6")]
		[Address(RVA = "0xFF88DC", Offset = "0xFF88DC", VA = "0xFF88DC")]
		[Preserve]
		public static void UnityEngine_UIElements_UIDocument_op_Equality()
		{
		}

		[Token(Token = "0x60025C7")]
		[Address(RVA = "0xFF89B4", Offset = "0xFF89B4", VA = "0xFF89B4")]
		[Preserve]
		public static void UnityEngine_UIElements_UIDocument_op_Implicit()
		{
		}

		[Token(Token = "0x60025C8")]
		[Address(RVA = "0xFF8A84", Offset = "0xFF8A84", VA = "0xFF8A84")]
		[Preserve]
		public static void UnityEngine_UIElements_UIDocument_op_Inequality()
		{
		}

		[Token(Token = "0x60025C9")]
		[Address(RVA = "0xFF8B5C", Offset = "0xFF8B5C", VA = "0xFF8B5C")]
		[Preserve]
		public static void UnityEngine_UIElements_VectorImage_op_Equality()
		{
		}

		[Token(Token = "0x60025CA")]
		[Address(RVA = "0xFF8C34", Offset = "0xFF8C34", VA = "0xFF8C34")]
		[Preserve]
		public static void UnityEngine_UIElements_VectorImage_op_Implicit()
		{
		}

		[Token(Token = "0x60025CB")]
		[Address(RVA = "0xFF8D04", Offset = "0xFF8D04", VA = "0xFF8D04")]
		[Preserve]
		public static void UnityEngine_UIElements_VectorImage_op_Inequality()
		{
		}

		[Token(Token = "0x60025CC")]
		[Address(RVA = "0xFF8DDC", Offset = "0xFF8DDC", VA = "0xFF8DDC")]
		[Preserve]
		public static void UnityEngine_UIElements_VisualTreeAsset_op_Equality()
		{
		}

		[Token(Token = "0x60025CD")]
		[Address(RVA = "0xFF8EB4", Offset = "0xFF8EB4", VA = "0xFF8EB4")]
		[Preserve]
		public static void UnityEngine_UIElements_VisualTreeAsset_op_Implicit()
		{
		}

		[Token(Token = "0x60025CE")]
		[Address(RVA = "0xFF8F84", Offset = "0xFF8F84", VA = "0xFF8F84")]
		[Preserve]
		public static void UnityEngine_UIElements_VisualTreeAsset_op_Inequality()
		{
		}

		[Token(Token = "0x60025CF")]
		[Address(RVA = "0xFF905C", Offset = "0xFF905C", VA = "0xFF905C")]
		[Preserve]
		public static void UnityEngine_Vector2_op_Addition()
		{
		}

		[Token(Token = "0x60025D0")]
		[Address(RVA = "0xFF914C", Offset = "0xFF914C", VA = "0xFF914C")]
		[Preserve]
		public static void UnityEngine_Vector2_op_Division()
		{
		}

		[Token(Token = "0x60025D1")]
		[Address(RVA = "0xFF923C", Offset = "0xFF923C", VA = "0xFF923C")]
		[Preserve]
		public static void UnityEngine_Vector2_op_Division_0()
		{
		}

		[Token(Token = "0x60025D2")]
		[Address(RVA = "0xFF9338", Offset = "0xFF9338", VA = "0xFF9338")]
		[Preserve]
		public static void UnityEngine_Vector2_op_Equality()
		{
		}

		[Token(Token = "0x60025D3")]
		[Address(RVA = "0xFF9428", Offset = "0xFF9428", VA = "0xFF9428")]
		[Preserve]
		public static void UnityEngine_Vector2_op_Implicit()
		{
		}

		[Token(Token = "0x60025D4")]
		[Address(RVA = "0xFF94FC", Offset = "0xFF94FC", VA = "0xFF94FC")]
		[Preserve]
		public static void UnityEngine_Vector2_op_Implicit_0()
		{
		}

		[Token(Token = "0x60025D5")]
		[Address(RVA = "0xFF95C4", Offset = "0xFF95C4", VA = "0xFF95C4")]
		[Preserve]
		public static void UnityEngine_Vector2_op_Inequality()
		{
		}

		[Token(Token = "0x60025D6")]
		[Address(RVA = "0xFF96B4", Offset = "0xFF96B4", VA = "0xFF96B4")]
		[Preserve]
		public static void UnityEngine_Vector2_op_Multiply()
		{
		}

		[Token(Token = "0x60025D7")]
		[Address(RVA = "0xFF97A4", Offset = "0xFF97A4", VA = "0xFF97A4")]
		[Preserve]
		public static void UnityEngine_Vector2_op_Multiply_0()
		{
		}

		[Token(Token = "0x60025D8")]
		[Address(RVA = "0xFF98A0", Offset = "0xFF98A0", VA = "0xFF98A0")]
		[Preserve]
		public static void UnityEngine_Vector2_op_Multiply_1()
		{
		}

		[Token(Token = "0x60025D9")]
		[Address(RVA = "0xFF999C", Offset = "0xFF999C", VA = "0xFF999C")]
		[Preserve]
		public static void UnityEngine_Vector2_op_Subtraction()
		{
		}

		[Token(Token = "0x60025DA")]
		[Address(RVA = "0xFF9A8C", Offset = "0xFF9A8C", VA = "0xFF9A8C")]
		[Preserve]
		public static void UnityEngine_Vector2_op_UnaryNegation()
		{
		}

		[Token(Token = "0x60025DB")]
		[Address(RVA = "0xFF9B54", Offset = "0xFF9B54", VA = "0xFF9B54")]
		[Preserve]
		public static void UnityEngine_Vector3_op_Addition()
		{
		}

		[Token(Token = "0x60025DC")]
		[Address(RVA = "0xFF9C50", Offset = "0xFF9C50", VA = "0xFF9C50")]
		[Preserve]
		public static void UnityEngine_Vector3_op_Division()
		{
		}

		[Token(Token = "0x60025DD")]
		[Address(RVA = "0xFF9D50", Offset = "0xFF9D50", VA = "0xFF9D50")]
		[Preserve]
		public static void UnityEngine_Vector3_op_Equality()
		{
		}

		[Token(Token = "0x60025DE")]
		[Address(RVA = "0xFF9E4C", Offset = "0xFF9E4C", VA = "0xFF9E4C")]
		[Preserve]
		public static void UnityEngine_Vector3_op_Inequality()
		{
		}

		[Token(Token = "0x60025DF")]
		[Address(RVA = "0xFF9F48", Offset = "0xFF9F48", VA = "0xFF9F48")]
		[Preserve]
		public static void UnityEngine_Vector3_op_Multiply()
		{
		}

		[Token(Token = "0x60025E0")]
		[Address(RVA = "0xFFA048", Offset = "0xFFA048", VA = "0xFFA048")]
		[Preserve]
		public static void UnityEngine_Vector3_op_Multiply_0()
		{
		}

		[Token(Token = "0x60025E1")]
		[Address(RVA = "0xFFA148", Offset = "0xFFA148", VA = "0xFFA148")]
		[Preserve]
		public static void UnityEngine_Vector3_op_Subtraction()
		{
		}

		[Token(Token = "0x60025E2")]
		[Address(RVA = "0xFFA244", Offset = "0xFFA244", VA = "0xFFA244")]
		[Preserve]
		public static void UnityEngine_Vector3_op_UnaryNegation()
		{
		}

		[Token(Token = "0x60025E3")]
		[Address(RVA = "0xFFA328", Offset = "0xFFA328", VA = "0xFFA328")]
		[Preserve]
		public static void UnityEngine_Vector4_op_Addition()
		{
		}

		[Token(Token = "0x60025E4")]
		[Address(RVA = "0xFFA410", Offset = "0xFFA410", VA = "0xFFA410")]
		[Preserve]
		public static void UnityEngine_Vector4_op_Division()
		{
		}

		[Token(Token = "0x60025E5")]
		[Address(RVA = "0xFFA50C", Offset = "0xFFA50C", VA = "0xFFA50C")]
		[Preserve]
		public static void UnityEngine_Vector4_op_Equality()
		{
		}

		[Token(Token = "0x60025E6")]
		[Address(RVA = "0xFFA5F4", Offset = "0xFFA5F4", VA = "0xFFA5F4")]
		[Preserve]
		public static void UnityEngine_Vector4_op_Implicit()
		{
		}

		[Token(Token = "0x60025E7")]
		[Address(RVA = "0xFFA6C8", Offset = "0xFFA6C8", VA = "0xFFA6C8")]
		[Preserve]
		public static void UnityEngine_Vector4_op_Implicit_0()
		{
		}

		[Token(Token = "0x60025E8")]
		[Address(RVA = "0xFFA798", Offset = "0xFFA798", VA = "0xFFA798")]
		[Preserve]
		public static void UnityEngine_Vector4_op_Implicit_1()
		{
		}

		[Token(Token = "0x60025E9")]
		[Address(RVA = "0xFFA860", Offset = "0xFFA860", VA = "0xFFA860")]
		[Preserve]
		public static void UnityEngine_Vector4_op_Inequality()
		{
		}

		[Token(Token = "0x60025EA")]
		[Address(RVA = "0xFFA948", Offset = "0xFFA948", VA = "0xFFA948")]
		[Preserve]
		public static void UnityEngine_Vector4_op_Multiply()
		{
		}

		[Token(Token = "0x60025EB")]
		[Address(RVA = "0xFFAA44", Offset = "0xFFAA44", VA = "0xFFAA44")]
		[Preserve]
		public static void UnityEngine_Vector4_op_Multiply_0()
		{
		}

		[Token(Token = "0x60025EC")]
		[Address(RVA = "0xFFAB40", Offset = "0xFFAB40", VA = "0xFFAB40")]
		[Preserve]
		public static void UnityEngine_Vector4_op_Subtraction()
		{
		}

		[Token(Token = "0x60025ED")]
		[Address(RVA = "0xFFAC28", Offset = "0xFFAC28", VA = "0xFFAC28")]
		[Preserve]
		public static void UnityEngine_Vector4_op_UnaryNegation()
		{
		}

		[Token(Token = "0x60025EE")]
		[Address(RVA = "0xFFAD00", Offset = "0xFFAD00", VA = "0xFFAD00")]
		[Preserve]
		public static void UnityEngine_Video_VideoClip_op_Equality()
		{
		}

		[Token(Token = "0x60025EF")]
		[Address(RVA = "0xFFADD8", Offset = "0xFFADD8", VA = "0xFFADD8")]
		[Preserve]
		public static void UnityEngine_Video_VideoClip_op_Implicit()
		{
		}

		[Token(Token = "0x60025F0")]
		[Address(RVA = "0xFFAEA8", Offset = "0xFFAEA8", VA = "0xFFAEA8")]
		[Preserve]
		public static void UnityEngine_Video_VideoClip_op_Inequality()
		{
		}

		[Token(Token = "0x60025F1")]
		[Address(RVA = "0xFFAF80", Offset = "0xFFAF80", VA = "0xFFAF80")]
		[Preserve]
		public static void UnityEngine_Video_VideoPlayer_op_Equality()
		{
		}

		[Token(Token = "0x60025F2")]
		[Address(RVA = "0xFFB058", Offset = "0xFFB058", VA = "0xFFB058")]
		[Preserve]
		public static void UnityEngine_Video_VideoPlayer_op_Implicit()
		{
		}

		[Token(Token = "0x60025F3")]
		[Address(RVA = "0xFFB128", Offset = "0xFFB128", VA = "0xFFB128")]
		[Preserve]
		public static void UnityEngine_Video_VideoPlayer_op_Inequality()
		{
		}

		[Token(Token = "0x60025F4")]
		[Address(RVA = "0xFFB200", Offset = "0xFFB200", VA = "0xFFB200")]
		[Preserve]
		public static void UnityEngine_WebCamTexture_op_Equality()
		{
		}

		[Token(Token = "0x60025F5")]
		[Address(RVA = "0xFFB2D8", Offset = "0xFFB2D8", VA = "0xFFB2D8")]
		[Preserve]
		public static void UnityEngine_WebCamTexture_op_Implicit()
		{
		}

		[Token(Token = "0x60025F6")]
		[Address(RVA = "0xFFB3A8", Offset = "0xFFB3A8", VA = "0xFFB3A8")]
		[Preserve]
		public static void UnityEngine_WebCamTexture_op_Inequality()
		{
		}

		[Token(Token = "0x60025F7")]
		[Address(RVA = "0xFFB480", Offset = "0xFFB480", VA = "0xFFB480")]
		[Preserve]
		public static void UnityEngine_WheelCollider_op_Equality()
		{
		}

		[Token(Token = "0x60025F8")]
		[Address(RVA = "0xFFB558", Offset = "0xFFB558", VA = "0xFFB558")]
		[Preserve]
		public static void UnityEngine_WheelCollider_op_Implicit()
		{
		}

		[Token(Token = "0x60025F9")]
		[Address(RVA = "0xFFB628", Offset = "0xFFB628", VA = "0xFFB628")]
		[Preserve]
		public static void UnityEngine_WheelCollider_op_Inequality()
		{
		}

		[Token(Token = "0x60025FA")]
		[Address(RVA = "0xFFB700", Offset = "0xFFB700", VA = "0xFFB700")]
		[Preserve]
		public static void UnityEngine_WheelJoint2D_op_Equality()
		{
		}

		[Token(Token = "0x60025FB")]
		[Address(RVA = "0xFFB7D8", Offset = "0xFFB7D8", VA = "0xFFB7D8")]
		[Preserve]
		public static void UnityEngine_WheelJoint2D_op_Implicit()
		{
		}

		[Token(Token = "0x60025FC")]
		[Address(RVA = "0xFFB8A8", Offset = "0xFFB8A8", VA = "0xFFB8A8")]
		[Preserve]
		public static void UnityEngine_WheelJoint2D_op_Inequality()
		{
		}

		[Token(Token = "0x60025FD")]
		[Address(RVA = "0xFFB980", Offset = "0xFFB980", VA = "0xFFB980")]
		[Preserve]
		public static void UnityEngine_WindZone_op_Equality()
		{
		}

		[Token(Token = "0x60025FE")]
		[Address(RVA = "0xFFBA58", Offset = "0xFFBA58", VA = "0xFFBA58")]
		[Preserve]
		public static void UnityEngine_WindZone_op_Implicit()
		{
		}

		[Token(Token = "0x60025FF")]
		[Address(RVA = "0xFFBB28", Offset = "0xFFBB28", VA = "0xFFBB28")]
		[Preserve]
		public static void UnityEngine_WindZone_op_Inequality()
		{
		}

		[Token(Token = "0x6002600")]
		[Address(RVA = "0xFFBC00", Offset = "0xFFBC00", VA = "0xFFBC00")]
		[Preserve]
		public static void UnloadAllScenesState_op_Equality()
		{
		}

		[Token(Token = "0x6002601")]
		[Address(RVA = "0xFFBCD8", Offset = "0xFFBCD8", VA = "0xFFBCD8")]
		[Preserve]
		public static void UnloadAllScenesState_op_Implicit()
		{
		}

		[Token(Token = "0x6002602")]
		[Address(RVA = "0xFFBDA8", Offset = "0xFFBDA8", VA = "0xFFBDA8")]
		[Preserve]
		public static void UnloadAllScenesState_op_Inequality()
		{
		}

		[Token(Token = "0x6002603")]
		[Address(RVA = "0xFFBE80", Offset = "0xFFBE80", VA = "0xFFBE80")]
		[Preserve]
		public static void UnloadTransitionSceneState_op_Equality()
		{
		}

		[Token(Token = "0x6002604")]
		[Address(RVA = "0xFFBF58", Offset = "0xFFBF58", VA = "0xFFBF58")]
		[Preserve]
		public static void UnloadTransitionSceneState_op_Implicit()
		{
		}

		[Token(Token = "0x6002605")]
		[Address(RVA = "0xFFC028", Offset = "0xFFC028", VA = "0xFFC028")]
		[Preserve]
		public static void UnloadTransitionSceneState_op_Inequality()
		{
		}

		[Token(Token = "0x6002606")]
		[Address(RVA = "0xFFC100", Offset = "0xFFC100", VA = "0xFFC100")]
		[Preserve]
		public static void UnlockInteraction_op_Equality()
		{
		}

		[Token(Token = "0x6002607")]
		[Address(RVA = "0xFFC1D8", Offset = "0xFFC1D8", VA = "0xFFC1D8")]
		[Preserve]
		public static void UnlockInteraction_op_Implicit()
		{
		}

		[Token(Token = "0x6002608")]
		[Address(RVA = "0xFFC2A8", Offset = "0xFFC2A8", VA = "0xFFC2A8")]
		[Preserve]
		public static void UnlockInteraction_op_Inequality()
		{
		}

		[Token(Token = "0x6002609")]
		[Address(RVA = "0xFFC380", Offset = "0xFFC380", VA = "0xFFC380")]
		[Preserve]
		public static void UnstowInteraction_op_Equality()
		{
		}

		[Token(Token = "0x600260A")]
		[Address(RVA = "0xFFC458", Offset = "0xFFC458", VA = "0xFFC458")]
		[Preserve]
		public static void UnstowInteraction_op_Implicit()
		{
		}

		[Token(Token = "0x600260B")]
		[Address(RVA = "0xFFC528", Offset = "0xFFC528", VA = "0xFFC528")]
		[Preserve]
		public static void UnstowInteraction_op_Inequality()
		{
		}

		[Token(Token = "0x600260C")]
		[Address(RVA = "0xFFC600", Offset = "0xFFC600", VA = "0xFFC600")]
		[Preserve]
		public static void UseSliderInteraction_op_Equality()
		{
		}

		[Token(Token = "0x600260D")]
		[Address(RVA = "0xFFC6D8", Offset = "0xFFC6D8", VA = "0xFFC6D8")]
		[Preserve]
		public static void UseSliderInteraction_op_Implicit()
		{
		}

		[Token(Token = "0x600260E")]
		[Address(RVA = "0xFFC7A8", Offset = "0xFFC7A8", VA = "0xFFC7A8")]
		[Preserve]
		public static void UseSliderInteraction_op_Inequality()
		{
		}

		[Token(Token = "0x600260F")]
		[Address(RVA = "0xFFC880", Offset = "0xFFC880", VA = "0xFFC880")]
		[Preserve]
		public static void VersionInfo_op_Equality()
		{
		}

		[Token(Token = "0x6002610")]
		[Address(RVA = "0xFFC958", Offset = "0xFFC958", VA = "0xFFC958")]
		[Preserve]
		public static void VersionInfo_op_Implicit()
		{
		}

		[Token(Token = "0x6002611")]
		[Address(RVA = "0xFFCA28", Offset = "0xFFCA28", VA = "0xFFCA28")]
		[Preserve]
		public static void VersionInfo_op_Inequality()
		{
		}

		[Token(Token = "0x6002612")]
		[Address(RVA = "0xFFCB00", Offset = "0xFFCB00", VA = "0xFFCB00")]
		[Preserve]
		public static void VerticalSlidingDoor_op_Equality()
		{
		}

		[Token(Token = "0x6002613")]
		[Address(RVA = "0xFFCBD8", Offset = "0xFFCBD8", VA = "0xFFCBD8")]
		[Preserve]
		public static void VerticalSlidingDoor_op_Implicit()
		{
		}

		[Token(Token = "0x6002614")]
		[Address(RVA = "0xFFCCA8", Offset = "0xFFCCA8", VA = "0xFFCCA8")]
		[Preserve]
		public static void VerticalSlidingDoor_op_Inequality()
		{
		}

		[Token(Token = "0x6002615")]
		[Address(RVA = "0xFFCD80", Offset = "0xFFCD80", VA = "0xFFCD80")]
		[Preserve]
		public static void ViewConeCondition_op_Equality()
		{
		}

		[Token(Token = "0x6002616")]
		[Address(RVA = "0xFFCE58", Offset = "0xFFCE58", VA = "0xFFCE58")]
		[Preserve]
		public static void ViewConeCondition_op_Implicit()
		{
		}

		[Token(Token = "0x6002617")]
		[Address(RVA = "0xFFCF28", Offset = "0xFFCF28", VA = "0xFFCF28")]
		[Preserve]
		public static void ViewConeCondition_op_Inequality()
		{
		}

		[Token(Token = "0x6002618")]
		[Address(RVA = "0xFFD000", Offset = "0xFFD000", VA = "0xFFD000")]
		[Preserve]
		public static void VinylPlayer_op_Equality()
		{
		}

		[Token(Token = "0x6002619")]
		[Address(RVA = "0xFFD0D8", Offset = "0xFFD0D8", VA = "0xFFD0D8")]
		[Preserve]
		public static void VinylPlayer_op_Implicit()
		{
		}

		[Token(Token = "0x600261A")]
		[Address(RVA = "0xFFD1A8", Offset = "0xFFD1A8", VA = "0xFFD1A8")]
		[Preserve]
		public static void VinylPlayer_op_Inequality()
		{
		}

		[Token(Token = "0x600261B")]
		[Address(RVA = "0xFFD280", Offset = "0xFFD280", VA = "0xFFD280")]
		[Preserve]
		public static void VinylPlayerCosmetics_op_Equality()
		{
		}

		[Token(Token = "0x600261C")]
		[Address(RVA = "0xFFD358", Offset = "0xFFD358", VA = "0xFFD358")]
		[Preserve]
		public static void VinylPlayerCosmetics_op_Implicit()
		{
		}

		[Token(Token = "0x600261D")]
		[Address(RVA = "0xFFD428", Offset = "0xFFD428", VA = "0xFFD428")]
		[Preserve]
		public static void VinylPlayerCosmetics_op_Inequality()
		{
		}

		[Token(Token = "0x600261E")]
		[Address(RVA = "0xFFD500", Offset = "0xFFD500", VA = "0xFFD500")]
		[Preserve]
		public static void VinylPlayerGetter_op_Equality()
		{
		}

		[Token(Token = "0x600261F")]
		[Address(RVA = "0xFFD5D8", Offset = "0xFFD5D8", VA = "0xFFD5D8")]
		[Preserve]
		public static void VinylPlayerGetter_op_Implicit()
		{
		}

		[Token(Token = "0x6002620")]
		[Address(RVA = "0xFFD6A8", Offset = "0xFFD6A8", VA = "0xFFD6A8")]
		[Preserve]
		public static void VinylPlayerGetter_op_Inequality()
		{
		}

		[Token(Token = "0x6002621")]
		[Address(RVA = "0xFFD780", Offset = "0xFFD780", VA = "0xFFD780")]
		[Preserve]
		public static void VRAutoSaveUI_op_Equality()
		{
		}

		[Token(Token = "0x6002622")]
		[Address(RVA = "0xFFD858", Offset = "0xFFD858", VA = "0xFFD858")]
		[Preserve]
		public static void VRAutoSaveUI_op_Implicit()
		{
		}

		[Token(Token = "0x6002623")]
		[Address(RVA = "0xFFD928", Offset = "0xFFD928", VA = "0xFFD928")]
		[Preserve]
		public static void VRAutoSaveUI_op_Inequality()
		{
		}

		[Token(Token = "0x6002624")]
		[Address(RVA = "0xFFDA00", Offset = "0xFFDA00", VA = "0xFFDA00")]
		[Preserve]
		public static void VRCanvasComponent_op_Equality()
		{
		}

		[Token(Token = "0x6002625")]
		[Address(RVA = "0xFFDAD8", Offset = "0xFFDAD8", VA = "0xFFDAD8")]
		[Preserve]
		public static void VRCanvasComponent_op_Implicit()
		{
		}

		[Token(Token = "0x6002626")]
		[Address(RVA = "0xFFDBA8", Offset = "0xFFDBA8", VA = "0xFFDBA8")]
		[Preserve]
		public static void VRCanvasComponent_op_Inequality()
		{
		}

		[Token(Token = "0x6002627")]
		[Address(RVA = "0xFFDC80", Offset = "0xFFDC80", VA = "0xFFDC80")]
		[Preserve]
		public static void VRCursor_op_Equality()
		{
		}

		[Token(Token = "0x6002628")]
		[Address(RVA = "0xFFDD58", Offset = "0xFFDD58", VA = "0xFFDD58")]
		[Preserve]
		public static void VRCursor_op_Implicit()
		{
		}

		[Token(Token = "0x6002629")]
		[Address(RVA = "0xFFDE28", Offset = "0xFFDE28", VA = "0xFFDE28")]
		[Preserve]
		public static void VRCursor_op_Inequality()
		{
		}

		[Token(Token = "0x600262A")]
		[Address(RVA = "0xFFDF00", Offset = "0xFFDF00", VA = "0xFFDF00")]
		[Preserve]
		public static void VRHand_op_Equality()
		{
		}

		[Token(Token = "0x600262B")]
		[Address(RVA = "0xFFDFD8", Offset = "0xFFDFD8", VA = "0xFFDFD8")]
		[Preserve]
		public static void VRHand_op_Implicit()
		{
		}

		[Token(Token = "0x600262C")]
		[Address(RVA = "0xFFE0A8", Offset = "0xFFE0A8", VA = "0xFFE0A8")]
		[Preserve]
		public static void VRHand_op_Inequality()
		{
		}

		[Token(Token = "0x600262D")]
		[Address(RVA = "0xFFE180", Offset = "0xFFE180", VA = "0xFFE180")]
		[Preserve]
		public static void VRHandController_op_Equality()
		{
		}

		[Token(Token = "0x600262E")]
		[Address(RVA = "0xFFE258", Offset = "0xFFE258", VA = "0xFFE258")]
		[Preserve]
		public static void VRHandController_op_Implicit()
		{
		}

		[Token(Token = "0x600262F")]
		[Address(RVA = "0xFFE328", Offset = "0xFFE328", VA = "0xFFE328")]
		[Preserve]
		public static void VRHandController_op_Inequality()
		{
		}

		[Token(Token = "0x6002630")]
		[Address(RVA = "0xFFE400", Offset = "0xFFE400", VA = "0xFFE400")]
		[Preserve]
		public static void VRHandsUIController_op_Equality()
		{
		}

		[Token(Token = "0x6002631")]
		[Address(RVA = "0xFFE4D8", Offset = "0xFFE4D8", VA = "0xFFE4D8")]
		[Preserve]
		public static void VRHandsUIController_op_Implicit()
		{
		}

		[Token(Token = "0x6002632")]
		[Address(RVA = "0xFFE5A8", Offset = "0xFFE5A8", VA = "0xFFE5A8")]
		[Preserve]
		public static void VRHandsUIController_op_Inequality()
		{
		}

		[Token(Token = "0x6002633")]
		[Address(RVA = "0xFFE680", Offset = "0xFFE680", VA = "0xFFE680")]
		[Preserve]
		public static void VRHandTouchTrigger_op_Equality()
		{
		}

		[Token(Token = "0x6002634")]
		[Address(RVA = "0xFFE758", Offset = "0xFFE758", VA = "0xFFE758")]
		[Preserve]
		public static void VRHandTouchTrigger_op_Implicit()
		{
		}

		[Token(Token = "0x6002635")]
		[Address(RVA = "0xFFE828", Offset = "0xFFE828", VA = "0xFFE828")]
		[Preserve]
		public static void VRHandTouchTrigger_op_Inequality()
		{
		}

		[Token(Token = "0x6002636")]
		[Address(RVA = "0xFFE900", Offset = "0xFFE900", VA = "0xFFE900")]
		[Preserve]
		public static void VRStanceUI_op_Equality()
		{
		}

		[Token(Token = "0x6002637")]
		[Address(RVA = "0xFFE9D8", Offset = "0xFFE9D8", VA = "0xFFE9D8")]
		[Preserve]
		public static void VRStanceUI_op_Implicit()
		{
		}

		[Token(Token = "0x6002638")]
		[Address(RVA = "0xFFEAA8", Offset = "0xFFEAA8", VA = "0xFFEAA8")]
		[Preserve]
		public static void VRStanceUI_op_Inequality()
		{
		}

		[Token(Token = "0x6002639")]
		[Address(RVA = "0xFFEB80", Offset = "0xFFEB80", VA = "0xFFEB80")]
		[Preserve]
		public static void WaitForTransitionSceneState_op_Equality()
		{
		}

		[Token(Token = "0x600263A")]
		[Address(RVA = "0xFFEC58", Offset = "0xFFEC58", VA = "0xFFEC58")]
		[Preserve]
		public static void WaitForTransitionSceneState_op_Implicit()
		{
		}

		[Token(Token = "0x600263B")]
		[Address(RVA = "0xFFED28", Offset = "0xFFED28", VA = "0xFFED28")]
		[Preserve]
		public static void WaitForTransitionSceneState_op_Inequality()
		{
		}

		[Token(Token = "0x600263C")]
		[Address(RVA = "0xFFEE00", Offset = "0xFFEE00", VA = "0xFFEE00")]
		[Preserve]
		public static void Wobble_op_Equality()
		{
		}

		[Token(Token = "0x600263D")]
		[Address(RVA = "0xFFEED8", Offset = "0xFFEED8", VA = "0xFFEED8")]
		[Preserve]
		public static void Wobble_op_Implicit()
		{
		}

		[Token(Token = "0x600263E")]
		[Address(RVA = "0xFFEFA8", Offset = "0xFFEFA8", VA = "0xFFEFA8")]
		[Preserve]
		public static void Wobble_op_Inequality()
		{
		}

		[Token(Token = "0x600263F")]
		[Address(RVA = "0xFFF080", Offset = "0xFFF080", VA = "0xFFF080")]
		[Preserve]
		public static void WorldDiegeticTextDisplay_op_Equality()
		{
		}

		[Token(Token = "0x6002640")]
		[Address(RVA = "0xFFF158", Offset = "0xFFF158", VA = "0xFFF158")]
		[Preserve]
		public static void WorldDiegeticTextDisplay_op_Implicit()
		{
		}

		[Token(Token = "0x6002641")]
		[Address(RVA = "0xFFF228", Offset = "0xFFF228", VA = "0xFFF228")]
		[Preserve]
		public static void WorldDiegeticTextDisplay_op_Inequality()
		{
		}

		[Token(Token = "0x6002642")]
		[Address(RVA = "0xFFF300", Offset = "0xFFF300", VA = "0xFFF300")]
		[Preserve]
		public static void XrActionManagerWorldServicesConnector_op_Equality()
		{
		}

		[Token(Token = "0x6002643")]
		[Address(RVA = "0xFFF3D8", Offset = "0xFFF3D8", VA = "0xFFF3D8")]
		[Preserve]
		public static void XrActionManagerWorldServicesConnector_op_Implicit()
		{
		}

		[Token(Token = "0x6002644")]
		[Address(RVA = "0xFFF4A8", Offset = "0xFFF4A8", VA = "0xFFF4A8")]
		[Preserve]
		public static void XrActionManagerWorldServicesConnector_op_Inequality()
		{
		}

		[Token(Token = "0x6002645")]
		[Address(RVA = "0xFFF580", Offset = "0xFFF580", VA = "0xFFF580")]
		[Preserve]
		public static void XrOobCameraTracker_op_Equality()
		{
		}

		[Token(Token = "0x6002646")]
		[Address(RVA = "0xFFF658", Offset = "0xFFF658", VA = "0xFFF658")]
		[Preserve]
		public static void XrOobCameraTracker_op_Implicit()
		{
		}

		[Token(Token = "0x6002647")]
		[Address(RVA = "0xFFF728", Offset = "0xFFF728", VA = "0xFFF728")]
		[Preserve]
		public static void XrOobCameraTracker_op_Inequality()
		{
		}

		[Token(Token = "0x6002648")]
		[Address(RVA = "0xFFF800", Offset = "0xFFF800", VA = "0xFFF800")]
		[Preserve]
		public static void XrOobTeleportTracker_op_Equality()
		{
		}

		[Token(Token = "0x6002649")]
		[Address(RVA = "0xFFF8D8", Offset = "0xFFF8D8", VA = "0xFFF8D8")]
		[Preserve]
		public static void XrOobTeleportTracker_op_Implicit()
		{
		}

		[Token(Token = "0x600264A")]
		[Address(RVA = "0xFFF9A8", Offset = "0xFFF9A8", VA = "0xFFF9A8")]
		[Preserve]
		public static void XrOobTeleportTracker_op_Inequality()
		{
		}

		[Token(Token = "0x600264B")]
		[Address(RVA = "0xFFFA80", Offset = "0xFFFA80", VA = "0xFFFA80")]
		public AotStubs()
		{
		}
	}
}
namespace DentedPixel
{
	[Token(Token = "0x2000518")]
	public class LeanDummy
	{
		[Token(Token = "0x600264C")]
		[Address(RVA = "0x1002A98", Offset = "0x1002A98", VA = "0x1002A98")]
		public LeanDummy()
		{
		}
	}
}
namespace DitzelGames.FastIK
{
	[Token(Token = "0x2000519")]
	public class FastIKFabric : MonoBehaviour
	{
		[Token(Token = "0x40015E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int ChainLength;

		[Token(Token = "0x40015E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform Target;

		[Token(Token = "0x40015E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform Pole;

		[Token(Token = "0x40015E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[Header("Solver Parameters")]
		public int Iterations;

		[Token(Token = "0x40015EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float Delta;

		[Token(Token = "0x40015EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[Range(0f, 1f)]
		public float SnapBackStrength;

		[Token(Token = "0x40015EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		protected float[] BonesLength;

		[Token(Token = "0x40015ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		protected float CompleteLength;

		[Token(Token = "0x40015EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		protected Transform[] Bones;

		[Token(Token = "0x40015EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		protected Vector3[] Positions;

		[Token(Token = "0x40015F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		protected Vector3[] StartDirectionSucc;

		[Token(Token = "0x40015F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		protected Quaternion[] StartRotationBone;

		[Token(Token = "0x40015F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		protected Quaternion StartRotationTarget;

		[Token(Token = "0x40015F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		protected Transform Root;

		[Token(Token = "0x600264D")]
		[Address(RVA = "0x1002AA0", Offset = "0x1002AA0", VA = "0x1002AA0")]
		private void Awake()
		{
		}

		[Token(Token = "0x600264E")]
		[Address(RVA = "0x1002AA4", Offset = "0x1002AA4", VA = "0x1002AA4")]
		private void Init()
		{
		}

		[Token(Token = "0x600264F")]
		[Address(RVA = "0x10033A8", Offset = "0x10033A8", VA = "0x10033A8")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6002650")]
		[Address(RVA = "0x10033AC", Offset = "0x10033AC", VA = "0x10033AC")]
		private void ResolveIK()
		{
		}

		[Token(Token = "0x6002651")]
		[Address(RVA = "0x100303C", Offset = "0x100303C", VA = "0x100303C")]
		private Vector3 GetPositionRootSpace(Transform current)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6002652")]
		[Address(RVA = "0x1003174", Offset = "0x1003174", VA = "0x1003174")]
		private void SetPositionRootSpace(Transform current, Vector3 position)
		{
		}

		[Token(Token = "0x6002653")]
		[Address(RVA = "0x1003274", Offset = "0x1003274", VA = "0x1003274")]
		private Quaternion GetRotationRootSpace(Transform current)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6002654")]
		[Address(RVA = "0x1004168", Offset = "0x1004168", VA = "0x1004168")]
		private void SetRotationRootSpace(Transform current, Quaternion rotation)
		{
		}

		[Token(Token = "0x6002655")]
		[Address(RVA = "0x10042A4", Offset = "0x10042A4", VA = "0x10042A4")]
		private void OnDrawGizmos()
		{
		}

		[Token(Token = "0x6002656")]
		[Address(RVA = "0x10042A8", Offset = "0x10042A8", VA = "0x10042A8")]
		public FastIKFabric()
		{
		}
	}
	[Token(Token = "0x200051A")]
	public class FastIKLook : MonoBehaviour
	{
		[Token(Token = "0x40015F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform Target;

		[Token(Token = "0x40015F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		protected Vector3 StartDirection;

		[Token(Token = "0x40015F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		protected Quaternion StartRotation;

		[Token(Token = "0x6002657")]
		[Address(RVA = "0x10042CC", Offset = "0x10042CC", VA = "0x10042CC")]
		private void Awake()
		{
		}

		[Token(Token = "0x6002658")]
		[Address(RVA = "0x10043B0", Offset = "0x10043B0", VA = "0x10043B0")]
		private void Update()
		{
		}

		[Token(Token = "0x6002659")]
		[Address(RVA = "0x1004540", Offset = "0x1004540", VA = "0x1004540")]
		public FastIKLook()
		{
		}
	}
	[Token(Token = "0x200051B")]
	internal class SampleProcedualAnimation : MonoBehaviour
	{
		[Token(Token = "0x40015F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform[] FootTarget;

		[Token(Token = "0x40015F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform LookTarget;

		[Token(Token = "0x40015F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform HandTarget;

		[Token(Token = "0x40015FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Transform HandPole;

		[Token(Token = "0x40015FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Transform Step;

		[Token(Token = "0x40015FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Transform Attraction;

		[Token(Token = "0x600265A")]
		[Address(RVA = "0x1004548", Offset = "0x1004548", VA = "0x1004548")]
		public void LateUpdate()
		{
		}

		[Token(Token = "0x600265B")]
		[Address(RVA = "0x1004C24", Offset = "0x1004C24", VA = "0x1004C24")]
		public SampleProcedualAnimation()
		{
		}
	}
	[Token(Token = "0x200051C")]
	public class SampleRotator : MonoBehaviour
	{
		[Token(Token = "0x600265C")]
		[Address(RVA = "0x1004C2C", Offset = "0x1004C2C", VA = "0x1004C2C")]
		private void Update()
		{
		}

		[Token(Token = "0x600265D")]
		[Address(RVA = "0x1004C74", Offset = "0x1004C74", VA = "0x1004C74")]
		public SampleRotator()
		{
		}
	}
	[Token(Token = "0x200051D")]
	public class SampleSinMover : MonoBehaviour
	{
		[Token(Token = "0x40015FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector3 Dir;

		[Token(Token = "0x40015FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public Vector3 Start;

		[Token(Token = "0x600265E")]
		[Address(RVA = "0x1004C7C", Offset = "0x1004C7C", VA = "0x1004C7C")]
		private void Awake()
		{
		}

		[Token(Token = "0x600265F")]
		[Address(RVA = "0x1004CAC", Offset = "0x1004CAC", VA = "0x1004CAC")]
		private void Update()
		{
		}

		[Token(Token = "0x6002660")]
		[Address(RVA = "0x1004D18", Offset = "0x1004D18", VA = "0x1004D18")]
		public SampleSinMover()
		{
		}
	}
}
